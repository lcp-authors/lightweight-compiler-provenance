
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//sort_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402710 <.init>:
  402710:	stp	x29, x30, [sp, #-16]!
  402714:	mov	x29, sp
  402718:	bl	402ef0 <ferror@plt+0x60>
  40271c:	ldp	x29, x30, [sp], #16
  402720:	ret

Disassembly of section .plt:

0000000000402730 <mbrtowc@plt-0x20>:
  402730:	stp	x16, x30, [sp, #-16]!
  402734:	adrp	x16, 425000 <_obstack_memory_used@@Base+0x131b0>
  402738:	ldr	x17, [x16, #4088]
  40273c:	add	x16, x16, #0xff8
  402740:	br	x17
  402744:	nop
  402748:	nop
  40274c:	nop

0000000000402750 <mbrtowc@plt>:
  402750:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16]
  402758:	add	x16, x16, #0x0
  40275c:	br	x17

0000000000402760 <memcpy@plt>:
  402760:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #8]
  402768:	add	x16, x16, #0x8
  40276c:	br	x17

0000000000402770 <memmove@plt>:
  402770:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #16]
  402778:	add	x16, x16, #0x10
  40277c:	br	x17

0000000000402780 <pthread_sigmask@plt>:
  402780:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #24]
  402788:	add	x16, x16, #0x18
  40278c:	br	x17

0000000000402790 <_exit@plt>:
  402790:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #32]
  402798:	add	x16, x16, #0x20
  40279c:	br	x17

00000000004027a0 <fwrite_unlocked@plt>:
  4027a0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #40]
  4027a8:	add	x16, x16, #0x28
  4027ac:	br	x17

00000000004027b0 <strtoul@plt>:
  4027b0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #48]
  4027b8:	add	x16, x16, #0x30
  4027bc:	br	x17

00000000004027c0 <strlen@plt>:
  4027c0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #56]
  4027c8:	add	x16, x16, #0x38
  4027cc:	br	x17

00000000004027d0 <exit@plt>:
  4027d0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #64]
  4027d8:	add	x16, x16, #0x40
  4027dc:	br	x17

00000000004027e0 <raise@plt>:
  4027e0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #72]
  4027e8:	add	x16, x16, #0x48
  4027ec:	br	x17

00000000004027f0 <error@plt>:
  4027f0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #80]
  4027f8:	add	x16, x16, #0x50
  4027fc:	br	x17

0000000000402800 <sysinfo@plt>:
  402800:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #88]
  402808:	add	x16, x16, #0x58
  40280c:	br	x17

0000000000402810 <getuid@plt>:
  402810:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #96]
  402818:	add	x16, x16, #0x60
  40281c:	br	x17

0000000000402820 <pipe@plt>:
  402820:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #104]
  402828:	add	x16, x16, #0x68
  40282c:	br	x17

0000000000402830 <__cxa_atexit@plt>:
  402830:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #112]
  402838:	add	x16, x16, #0x70
  40283c:	br	x17

0000000000402840 <iswcntrl@plt>:
  402840:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #120]
  402848:	add	x16, x16, #0x78
  40284c:	br	x17

0000000000402850 <qsort@plt>:
  402850:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #128]
  402858:	add	x16, x16, #0x80
  40285c:	br	x17

0000000000402860 <setvbuf@plt>:
  402860:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #136]
  402868:	add	x16, x16, #0x88
  40286c:	br	x17

0000000000402870 <euidaccess@plt>:
  402870:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #144]
  402878:	add	x16, x16, #0x90
  40287c:	br	x17

0000000000402880 <fork@plt>:
  402880:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #152]
  402888:	add	x16, x16, #0x98
  40288c:	br	x17

0000000000402890 <lseek@plt>:
  402890:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #160]
  402898:	add	x16, x16, #0xa0
  40289c:	br	x17

00000000004028a0 <__fpending@plt>:
  4028a0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #168]
  4028a8:	add	x16, x16, #0xa8
  4028ac:	br	x17

00000000004028b0 <localeconv@plt>:
  4028b0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #176]
  4028b8:	add	x16, x16, #0xb0
  4028bc:	br	x17

00000000004028c0 <stpcpy@plt>:
  4028c0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #184]
  4028c8:	add	x16, x16, #0xb8
  4028cc:	br	x17

00000000004028d0 <fileno@plt>:
  4028d0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #192]
  4028d8:	add	x16, x16, #0xc0
  4028dc:	br	x17

00000000004028e0 <signal@plt>:
  4028e0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #200]
  4028e8:	add	x16, x16, #0xc8
  4028ec:	br	x17

00000000004028f0 <fclose@plt>:
  4028f0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #208]
  4028f8:	add	x16, x16, #0xd0
  4028fc:	br	x17

0000000000402900 <getpid@plt>:
  402900:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #216]
  402908:	add	x16, x16, #0xd8
  40290c:	br	x17

0000000000402910 <nl_langinfo@plt>:
  402910:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #224]
  402918:	add	x16, x16, #0xe0
  40291c:	br	x17

0000000000402920 <fopen@plt>:
  402920:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #232]
  402928:	add	x16, x16, #0xe8
  40292c:	br	x17

0000000000402930 <malloc@plt>:
  402930:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #240]
  402938:	add	x16, x16, #0xf0
  40293c:	br	x17

0000000000402940 <wcwidth@plt>:
  402940:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #248]
  402948:	add	x16, x16, #0xf8
  40294c:	br	x17

0000000000402950 <open@plt>:
  402950:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #256]
  402958:	add	x16, x16, #0x100
  40295c:	br	x17

0000000000402960 <getppid@plt>:
  402960:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #264]
  402968:	add	x16, x16, #0x108
  40296c:	br	x17

0000000000402970 <sigemptyset@plt>:
  402970:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #272]
  402978:	add	x16, x16, #0x110
  40297c:	br	x17

0000000000402980 <pthread_cond_signal@plt>:
  402980:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #280]
  402988:	add	x16, x16, #0x118
  40298c:	br	x17

0000000000402990 <strncmp@plt>:
  402990:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #288]
  402998:	add	x16, x16, #0x120
  40299c:	br	x17

00000000004029a0 <bindtextdomain@plt>:
  4029a0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #296]
  4029a8:	add	x16, x16, #0x128
  4029ac:	br	x17

00000000004029b0 <__libc_start_main@plt>:
  4029b0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #304]
  4029b8:	add	x16, x16, #0x130
  4029bc:	br	x17

00000000004029c0 <fgetc@plt>:
  4029c0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #312]
  4029c8:	add	x16, x16, #0x138
  4029cc:	br	x17

00000000004029d0 <__printf_chk@plt>:
  4029d0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #320]
  4029d8:	add	x16, x16, #0x140
  4029dc:	br	x17

00000000004029e0 <memset@plt>:
  4029e0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #328]
  4029e8:	add	x16, x16, #0x148
  4029ec:	br	x17

00000000004029f0 <fdopen@plt>:
  4029f0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #336]
  4029f8:	add	x16, x16, #0x150
  4029fc:	br	x17

0000000000402a00 <gettimeofday@plt>:
  402a00:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #344]
  402a08:	add	x16, x16, #0x158
  402a0c:	br	x17

0000000000402a10 <__strtoul_internal@plt>:
  402a10:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #352]
  402a18:	add	x16, x16, #0x160
  402a1c:	br	x17

0000000000402a20 <calloc@plt>:
  402a20:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #360]
  402a28:	add	x16, x16, #0x168
  402a2c:	br	x17

0000000000402a30 <bcmp@plt>:
  402a30:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #368]
  402a38:	add	x16, x16, #0x170
  402a3c:	br	x17

0000000000402a40 <realloc@plt>:
  402a40:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #376]
  402a48:	add	x16, x16, #0x178
  402a4c:	br	x17

0000000000402a50 <__ctype_toupper_loc@plt>:
  402a50:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #384]
  402a58:	add	x16, x16, #0x180
  402a5c:	br	x17

0000000000402a60 <pthread_mutex_init@plt>:
  402a60:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402a64:	ldr	x17, [x16, #392]
  402a68:	add	x16, x16, #0x188
  402a6c:	br	x17

0000000000402a70 <close@plt>:
  402a70:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402a74:	ldr	x17, [x16, #400]
  402a78:	add	x16, x16, #0x190
  402a7c:	br	x17

0000000000402a80 <sigaction@plt>:
  402a80:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402a84:	ldr	x17, [x16, #408]
  402a88:	add	x16, x16, #0x198
  402a8c:	br	x17

0000000000402a90 <strrchr@plt>:
  402a90:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402a94:	ldr	x17, [x16, #416]
  402a98:	add	x16, x16, #0x1a0
  402a9c:	br	x17

0000000000402aa0 <pthread_create@plt>:
  402aa0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402aa4:	ldr	x17, [x16, #424]
  402aa8:	add	x16, x16, #0x1a8
  402aac:	br	x17

0000000000402ab0 <__gmon_start__@plt>:
  402ab0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402ab4:	ldr	x17, [x16, #432]
  402ab8:	add	x16, x16, #0x1b0
  402abc:	br	x17

0000000000402ac0 <write@plt>:
  402ac0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402ac4:	ldr	x17, [x16, #440]
  402ac8:	add	x16, x16, #0x1b8
  402acc:	br	x17

0000000000402ad0 <pthread_join@plt>:
  402ad0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402ad4:	ldr	x17, [x16, #448]
  402ad8:	add	x16, x16, #0x1c0
  402adc:	br	x17

0000000000402ae0 <abort@plt>:
  402ae0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402ae4:	ldr	x17, [x16, #456]
  402ae8:	add	x16, x16, #0x1c8
  402aec:	br	x17

0000000000402af0 <mkostemp@plt>:
  402af0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402af4:	ldr	x17, [x16, #464]
  402af8:	add	x16, x16, #0x1d0
  402afc:	br	x17

0000000000402b00 <sched_getaffinity@plt>:
  402b00:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402b04:	ldr	x17, [x16, #472]
  402b08:	add	x16, x16, #0x1d8
  402b0c:	br	x17

0000000000402b10 <posix_fadvise@plt>:
  402b10:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402b14:	ldr	x17, [x16, #480]
  402b18:	add	x16, x16, #0x1e0
  402b1c:	br	x17

0000000000402b20 <mbsinit@plt>:
  402b20:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402b24:	ldr	x17, [x16, #488]
  402b28:	add	x16, x16, #0x1e8
  402b2c:	br	x17

0000000000402b30 <__overflow@plt>:
  402b30:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402b34:	ldr	x17, [x16, #496]
  402b38:	add	x16, x16, #0x1f0
  402b3c:	br	x17

0000000000402b40 <pipe2@plt>:
  402b40:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402b44:	ldr	x17, [x16, #504]
  402b48:	add	x16, x16, #0x1f8
  402b4c:	br	x17

0000000000402b50 <fread_unlocked@plt>:
  402b50:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402b54:	ldr	x17, [x16, #512]
  402b58:	add	x16, x16, #0x200
  402b5c:	br	x17

0000000000402b60 <memcmp@plt>:
  402b60:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402b64:	ldr	x17, [x16, #520]
  402b68:	add	x16, x16, #0x208
  402b6c:	br	x17

0000000000402b70 <textdomain@plt>:
  402b70:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402b74:	ldr	x17, [x16, #528]
  402b78:	add	x16, x16, #0x210
  402b7c:	br	x17

0000000000402b80 <getopt_long@plt>:
  402b80:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402b84:	ldr	x17, [x16, #536]
  402b88:	add	x16, x16, #0x218
  402b8c:	br	x17

0000000000402b90 <__fprintf_chk@plt>:
  402b90:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402b94:	ldr	x17, [x16, #544]
  402b98:	add	x16, x16, #0x220
  402b9c:	br	x17

0000000000402ba0 <sigismember@plt>:
  402ba0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402ba4:	ldr	x17, [x16, #552]
  402ba8:	add	x16, x16, #0x228
  402bac:	br	x17

0000000000402bb0 <strcmp@plt>:
  402bb0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402bb4:	ldr	x17, [x16, #560]
  402bb8:	add	x16, x16, #0x230
  402bbc:	br	x17

0000000000402bc0 <__ctype_b_loc@plt>:
  402bc0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402bc4:	ldr	x17, [x16, #568]
  402bc8:	add	x16, x16, #0x238
  402bcc:	br	x17

0000000000402bd0 <strtol@plt>:
  402bd0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402bd4:	ldr	x17, [x16, #576]
  402bd8:	add	x16, x16, #0x240
  402bdc:	br	x17

0000000000402be0 <fseeko@plt>:
  402be0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402be4:	ldr	x17, [x16, #584]
  402be8:	add	x16, x16, #0x248
  402bec:	br	x17

0000000000402bf0 <strtold@plt>:
  402bf0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402bf4:	ldr	x17, [x16, #592]
  402bf8:	add	x16, x16, #0x250
  402bfc:	br	x17

0000000000402c00 <free@plt>:
  402c00:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402c04:	ldr	x17, [x16, #600]
  402c08:	add	x16, x16, #0x258
  402c0c:	br	x17

0000000000402c10 <__ctype_get_mb_cur_max@plt>:
  402c10:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402c14:	ldr	x17, [x16, #608]
  402c18:	add	x16, x16, #0x260
  402c1c:	br	x17

0000000000402c20 <getgid@plt>:
  402c20:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402c24:	ldr	x17, [x16, #616]
  402c28:	add	x16, x16, #0x268
  402c2c:	br	x17

0000000000402c30 <pthread_cond_wait@plt>:
  402c30:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402c34:	ldr	x17, [x16, #624]
  402c38:	add	x16, x16, #0x270
  402c3c:	br	x17

0000000000402c40 <nanosleep@plt>:
  402c40:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402c44:	ldr	x17, [x16, #632]
  402c48:	add	x16, x16, #0x278
  402c4c:	br	x17

0000000000402c50 <__stpcpy_chk@plt>:
  402c50:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402c54:	ldr	x17, [x16, #640]
  402c58:	add	x16, x16, #0x280
  402c5c:	br	x17

0000000000402c60 <strchr@plt>:
  402c60:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402c64:	ldr	x17, [x16, #648]
  402c68:	add	x16, x16, #0x288
  402c6c:	br	x17

0000000000402c70 <fwrite@plt>:
  402c70:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402c74:	ldr	x17, [x16, #656]
  402c78:	add	x16, x16, #0x290
  402c7c:	br	x17

0000000000402c80 <fflush_unlocked@plt>:
  402c80:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402c84:	ldr	x17, [x16, #664]
  402c88:	add	x16, x16, #0x298
  402c8c:	br	x17

0000000000402c90 <__sched_cpucount@plt>:
  402c90:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402c94:	ldr	x17, [x16, #672]
  402c98:	add	x16, x16, #0x2a0
  402c9c:	br	x17

0000000000402ca0 <fcntl@plt>:
  402ca0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402ca4:	ldr	x17, [x16, #680]
  402ca8:	add	x16, x16, #0x2a8
  402cac:	br	x17

0000000000402cb0 <strxfrm@plt>:
  402cb0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402cb4:	ldr	x17, [x16, #688]
  402cb8:	add	x16, x16, #0x2b0
  402cbc:	br	x17

0000000000402cc0 <dcngettext@plt>:
  402cc0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402cc4:	ldr	x17, [x16, #696]
  402cc8:	add	x16, x16, #0x2b8
  402ccc:	br	x17

0000000000402cd0 <fflush@plt>:
  402cd0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402cd4:	ldr	x17, [x16, #704]
  402cd8:	add	x16, x16, #0x2c0
  402cdc:	br	x17

0000000000402ce0 <pthread_cond_init@plt>:
  402ce0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402ce4:	ldr	x17, [x16, #712]
  402ce8:	add	x16, x16, #0x2c8
  402cec:	br	x17

0000000000402cf0 <getrlimit@plt>:
  402cf0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402cf4:	ldr	x17, [x16, #720]
  402cf8:	add	x16, x16, #0x2d0
  402cfc:	br	x17

0000000000402d00 <clearerr_unlocked@plt>:
  402d00:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402d04:	ldr	x17, [x16, #728]
  402d08:	add	x16, x16, #0x2d8
  402d0c:	br	x17

0000000000402d10 <__explicit_bzero_chk@plt>:
  402d10:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402d14:	ldr	x17, [x16, #736]
  402d18:	add	x16, x16, #0x2e0
  402d1c:	br	x17

0000000000402d20 <read@plt>:
  402d20:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402d24:	ldr	x17, [x16, #744]
  402d28:	add	x16, x16, #0x2e8
  402d2c:	br	x17

0000000000402d30 <memchr@plt>:
  402d30:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402d34:	ldr	x17, [x16, #752]
  402d38:	add	x16, x16, #0x2f0
  402d3c:	br	x17

0000000000402d40 <mkstemp@plt>:
  402d40:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402d44:	ldr	x17, [x16, #760]
  402d48:	add	x16, x16, #0x2f8
  402d4c:	br	x17

0000000000402d50 <sysconf@plt>:
  402d50:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402d54:	ldr	x17, [x16, #768]
  402d58:	add	x16, x16, #0x300
  402d5c:	br	x17

0000000000402d60 <__fxstat@plt>:
  402d60:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402d64:	ldr	x17, [x16, #776]
  402d68:	add	x16, x16, #0x308
  402d6c:	br	x17

0000000000402d70 <dcgettext@plt>:
  402d70:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402d74:	ldr	x17, [x16, #784]
  402d78:	add	x16, x16, #0x310
  402d7c:	br	x17

0000000000402d80 <fputs_unlocked@plt>:
  402d80:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402d84:	ldr	x17, [x16, #792]
  402d88:	add	x16, x16, #0x318
  402d8c:	br	x17

0000000000402d90 <strcoll@plt>:
  402d90:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402d94:	ldr	x17, [x16, #800]
  402d98:	add	x16, x16, #0x320
  402d9c:	br	x17

0000000000402da0 <__freading@plt>:
  402da0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402da4:	ldr	x17, [x16, #808]
  402da8:	add	x16, x16, #0x328
  402dac:	br	x17

0000000000402db0 <ftruncate@plt>:
  402db0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402db4:	ldr	x17, [x16, #816]
  402db8:	add	x16, x16, #0x330
  402dbc:	br	x17

0000000000402dc0 <dup2@plt>:
  402dc0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402dc4:	ldr	x17, [x16, #824]
  402dc8:	add	x16, x16, #0x338
  402dcc:	br	x17

0000000000402dd0 <sigaddset@plt>:
  402dd0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402dd4:	ldr	x17, [x16, #832]
  402dd8:	add	x16, x16, #0x340
  402ddc:	br	x17

0000000000402de0 <iswprint@plt>:
  402de0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402de4:	ldr	x17, [x16, #840]
  402de8:	add	x16, x16, #0x348
  402dec:	br	x17

0000000000402df0 <__assert_fail@plt>:
  402df0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402df4:	ldr	x17, [x16, #848]
  402df8:	add	x16, x16, #0x350
  402dfc:	br	x17

0000000000402e00 <__errno_location@plt>:
  402e00:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402e04:	ldr	x17, [x16, #856]
  402e08:	add	x16, x16, #0x358
  402e0c:	br	x17

0000000000402e10 <execlp@plt>:
  402e10:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402e14:	ldr	x17, [x16, #864]
  402e18:	add	x16, x16, #0x360
  402e1c:	br	x17

0000000000402e20 <getenv@plt>:
  402e20:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402e24:	ldr	x17, [x16, #872]
  402e28:	add	x16, x16, #0x368
  402e2c:	br	x17

0000000000402e30 <__xstat@plt>:
  402e30:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402e34:	ldr	x17, [x16, #880]
  402e38:	add	x16, x16, #0x370
  402e3c:	br	x17

0000000000402e40 <pthread_mutex_lock@plt>:
  402e40:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402e44:	ldr	x17, [x16, #888]
  402e48:	add	x16, x16, #0x378
  402e4c:	br	x17

0000000000402e50 <pthread_mutex_unlock@plt>:
  402e50:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402e54:	ldr	x17, [x16, #896]
  402e58:	add	x16, x16, #0x380
  402e5c:	br	x17

0000000000402e60 <waitpid@plt>:
  402e60:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402e64:	ldr	x17, [x16, #904]
  402e68:	add	x16, x16, #0x388
  402e6c:	br	x17

0000000000402e70 <unlink@plt>:
  402e70:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402e74:	ldr	x17, [x16, #912]
  402e78:	add	x16, x16, #0x390
  402e7c:	br	x17

0000000000402e80 <setlocale@plt>:
  402e80:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402e84:	ldr	x17, [x16, #920]
  402e88:	add	x16, x16, #0x398
  402e8c:	br	x17

0000000000402e90 <ferror@plt>:
  402e90:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402e94:	ldr	x17, [x16, #928]
  402e98:	add	x16, x16, #0x3a0
  402e9c:	br	x17

Disassembly of section .text:

0000000000402ea0 <_obstack_begin@@Base-0xec48>:
  402ea0:	mov	x29, #0x0                   	// #0
  402ea4:	mov	x30, #0x0                   	// #0
  402ea8:	mov	x5, x0
  402eac:	ldr	x1, [sp]
  402eb0:	add	x2, sp, #0x8
  402eb4:	mov	x6, sp
  402eb8:	movz	x0, #0x0, lsl #48
  402ebc:	movk	x0, #0x0, lsl #32
  402ec0:	movk	x0, #0x40, lsl #16
  402ec4:	movk	x0, #0x33cc
  402ec8:	movz	x3, #0x0, lsl #48
  402ecc:	movk	x3, #0x0, lsl #32
  402ed0:	movk	x3, #0x41, lsl #16
  402ed4:	movk	x3, #0x2978
  402ed8:	movz	x4, #0x0, lsl #48
  402edc:	movk	x4, #0x0, lsl #32
  402ee0:	movk	x4, #0x41, lsl #16
  402ee4:	movk	x4, #0x29f8
  402ee8:	bl	4029b0 <__libc_start_main@plt>
  402eec:	bl	402ae0 <abort@plt>
  402ef0:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x131b0>
  402ef4:	ldr	x0, [x0, #4064]
  402ef8:	cbz	x0, 402f00 <ferror@plt+0x70>
  402efc:	b	402ab0 <__gmon_start__@plt>
  402f00:	ret
  402f04:	nop
  402f08:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x141b0>
  402f0c:	add	x0, x0, #0x518
  402f10:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x141b0>
  402f14:	add	x1, x1, #0x518
  402f18:	cmp	x1, x0
  402f1c:	b.eq	402f34 <ferror@plt+0xa4>  // b.none
  402f20:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1b0>
  402f24:	ldr	x1, [x1, #2600]
  402f28:	cbz	x1, 402f34 <ferror@plt+0xa4>
  402f2c:	mov	x16, x1
  402f30:	br	x16
  402f34:	ret
  402f38:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x141b0>
  402f3c:	add	x0, x0, #0x518
  402f40:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x141b0>
  402f44:	add	x1, x1, #0x518
  402f48:	sub	x1, x1, x0
  402f4c:	lsr	x2, x1, #63
  402f50:	add	x1, x2, x1, asr #3
  402f54:	cmp	xzr, x1, asr #1
  402f58:	asr	x1, x1, #1
  402f5c:	b.eq	402f74 <ferror@plt+0xe4>  // b.none
  402f60:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x1b0>
  402f64:	ldr	x2, [x2, #2608]
  402f68:	cbz	x2, 402f74 <ferror@plt+0xe4>
  402f6c:	mov	x16, x2
  402f70:	br	x16
  402f74:	ret
  402f78:	stp	x29, x30, [sp, #-32]!
  402f7c:	mov	x29, sp
  402f80:	str	x19, [sp, #16]
  402f84:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x141b0>
  402f88:	ldrb	w0, [x19, #1360]
  402f8c:	cbnz	w0, 402f9c <ferror@plt+0x10c>
  402f90:	bl	402f08 <ferror@plt+0x78>
  402f94:	mov	w0, #0x1                   	// #1
  402f98:	strb	w0, [x19, #1360]
  402f9c:	ldr	x19, [sp, #16]
  402fa0:	ldp	x29, x30, [sp], #32
  402fa4:	ret
  402fa8:	b	402f38 <ferror@plt+0xa8>
  402fac:	sub	sp, sp, #0xa0
  402fb0:	stp	x20, x19, [sp, #144]
  402fb4:	mov	w19, w0
  402fb8:	stp	x29, x30, [sp, #112]
  402fbc:	stp	x22, x21, [sp, #128]
  402fc0:	add	x29, sp, #0x70
  402fc4:	cbnz	w0, 403390 <ferror@plt+0x500>
  402fc8:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x11b0>
  402fcc:	add	x1, x1, #0x4bb
  402fd0:	mov	w2, #0x5                   	// #5
  402fd4:	mov	x0, xzr
  402fd8:	bl	402d70 <dcgettext@plt>
  402fdc:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  402fe0:	ldr	x2, [x8, #2992]
  402fe4:	mov	x1, x0
  402fe8:	mov	w0, #0x1                   	// #1
  402fec:	mov	x3, x2
  402ff0:	bl	4029d0 <__printf_chk@plt>
  402ff4:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x11b0>
  402ff8:	add	x1, x1, #0x502
  402ffc:	mov	w2, #0x5                   	// #5
  403000:	mov	x0, xzr
  403004:	bl	402d70 <dcgettext@plt>
  403008:	adrp	x22, 426000 <_obstack_memory_used@@Base+0x141b0>
  40300c:	ldr	x1, [x22, #1336]
  403010:	bl	402d80 <fputs_unlocked@plt>
  403014:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  403018:	add	x1, x1, #0x6d2
  40301c:	mov	w2, #0x5                   	// #5
  403020:	mov	x0, xzr
  403024:	bl	402d70 <dcgettext@plt>
  403028:	ldr	x1, [x22, #1336]
  40302c:	bl	402d80 <fputs_unlocked@plt>
  403030:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  403034:	add	x1, x1, #0x70a
  403038:	mov	w2, #0x5                   	// #5
  40303c:	mov	x0, xzr
  403040:	bl	402d70 <dcgettext@plt>
  403044:	ldr	x1, [x22, #1336]
  403048:	bl	402d80 <fputs_unlocked@plt>
  40304c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x11b0>
  403050:	add	x1, x1, #0x541
  403054:	mov	w2, #0x5                   	// #5
  403058:	mov	x0, xzr
  40305c:	bl	402d70 <dcgettext@plt>
  403060:	ldr	x1, [x22, #1336]
  403064:	bl	402d80 <fputs_unlocked@plt>
  403068:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x11b0>
  40306c:	add	x1, x1, #0x555
  403070:	mov	w2, #0x5                   	// #5
  403074:	mov	x0, xzr
  403078:	bl	402d70 <dcgettext@plt>
  40307c:	ldr	x1, [x22, #1336]
  403080:	bl	402d80 <fputs_unlocked@plt>
  403084:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x11b0>
  403088:	add	x1, x1, #0x621
  40308c:	mov	w2, #0x5                   	// #5
  403090:	mov	x0, xzr
  403094:	bl	402d70 <dcgettext@plt>
  403098:	ldr	x1, [x22, #1336]
  40309c:	bl	402d80 <fputs_unlocked@plt>
  4030a0:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x11b0>
  4030a4:	add	x1, x1, #0x6f4
  4030a8:	mov	w2, #0x5                   	// #5
  4030ac:	mov	x0, xzr
  4030b0:	bl	402d70 <dcgettext@plt>
  4030b4:	ldr	x1, [x22, #1336]
  4030b8:	bl	402d80 <fputs_unlocked@plt>
  4030bc:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x11b0>
  4030c0:	add	x1, x1, #0x740
  4030c4:	mov	w2, #0x5                   	// #5
  4030c8:	mov	x0, xzr
  4030cc:	bl	402d70 <dcgettext@plt>
  4030d0:	ldr	x1, [x22, #1336]
  4030d4:	bl	402d80 <fputs_unlocked@plt>
  4030d8:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x11b0>
  4030dc:	add	x1, x1, #0x852
  4030e0:	mov	w2, #0x5                   	// #5
  4030e4:	mov	x0, xzr
  4030e8:	bl	402d70 <dcgettext@plt>
  4030ec:	ldr	x1, [x22, #1336]
  4030f0:	bl	402d80 <fputs_unlocked@plt>
  4030f4:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x11b0>
  4030f8:	add	x1, x1, #0x968
  4030fc:	mov	w2, #0x5                   	// #5
  403100:	mov	x0, xzr
  403104:	bl	402d70 <dcgettext@plt>
  403108:	ldr	x1, [x22, #1336]
  40310c:	bl	402d80 <fputs_unlocked@plt>
  403110:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x11b0>
  403114:	add	x1, x1, #0x979
  403118:	mov	w2, #0x5                   	// #5
  40311c:	mov	x0, xzr
  403120:	bl	402d70 <dcgettext@plt>
  403124:	ldr	x1, [x22, #1336]
  403128:	bl	402d80 <fputs_unlocked@plt>
  40312c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x11b0>
  403130:	add	x1, x1, #0x9ef
  403134:	mov	w2, #0x5                   	// #5
  403138:	mov	x0, xzr
  40313c:	bl	402d70 <dcgettext@plt>
  403140:	ldr	x1, [x22, #1336]
  403144:	bl	402d80 <fputs_unlocked@plt>
  403148:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x11b0>
  40314c:	add	x1, x1, #0xb04
  403150:	mov	w2, #0x5                   	// #5
  403154:	mov	x0, xzr
  403158:	bl	402d70 <dcgettext@plt>
  40315c:	ldr	x1, [x22, #1336]
  403160:	bl	402d80 <fputs_unlocked@plt>
  403164:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x11b0>
  403168:	add	x1, x1, #0xc60
  40316c:	mov	w2, #0x5                   	// #5
  403170:	mov	x0, xzr
  403174:	bl	402d70 <dcgettext@plt>
  403178:	ldr	x1, [x22, #1336]
  40317c:	bl	402d80 <fputs_unlocked@plt>
  403180:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x11b0>
  403184:	add	x1, x1, #0xcf0
  403188:	mov	w2, #0x5                   	// #5
  40318c:	mov	x0, xzr
  403190:	bl	402d70 <dcgettext@plt>
  403194:	ldr	x1, [x22, #1336]
  403198:	bl	402d80 <fputs_unlocked@plt>
  40319c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x11b0>
  4031a0:	add	x1, x1, #0xdc8
  4031a4:	mov	w2, #0x5                   	// #5
  4031a8:	mov	x0, xzr
  4031ac:	bl	402d70 <dcgettext@plt>
  4031b0:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x11b0>
  4031b4:	mov	x1, x0
  4031b8:	add	x2, x2, #0xf8d
  4031bc:	mov	w0, #0x1                   	// #1
  4031c0:	bl	4029d0 <__printf_chk@plt>
  4031c4:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x11b0>
  4031c8:	add	x1, x1, #0xf92
  4031cc:	mov	w2, #0x5                   	// #5
  4031d0:	mov	x0, xzr
  4031d4:	bl	402d70 <dcgettext@plt>
  4031d8:	ldr	x1, [x22, #1336]
  4031dc:	bl	402d80 <fputs_unlocked@plt>
  4031e0:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x11b0>
  4031e4:	add	x1, x1, #0xfd2
  4031e8:	mov	w2, #0x5                   	// #5
  4031ec:	mov	x0, xzr
  4031f0:	bl	402d70 <dcgettext@plt>
  4031f4:	ldr	x1, [x22, #1336]
  4031f8:	bl	402d80 <fputs_unlocked@plt>
  4031fc:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x11b0>
  403200:	add	x1, x1, #0xfff
  403204:	mov	w2, #0x5                   	// #5
  403208:	mov	x0, xzr
  40320c:	bl	402d70 <dcgettext@plt>
  403210:	ldr	x1, [x22, #1336]
  403214:	bl	402d80 <fputs_unlocked@plt>
  403218:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  40321c:	add	x1, x1, #0x35
  403220:	mov	w2, #0x5                   	// #5
  403224:	mov	x0, xzr
  403228:	bl	402d70 <dcgettext@plt>
  40322c:	ldr	x1, [x22, #1336]
  403230:	bl	402d80 <fputs_unlocked@plt>
  403234:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  403238:	add	x1, x1, #0x291
  40323c:	mov	w2, #0x5                   	// #5
  403240:	mov	x0, xzr
  403244:	bl	402d70 <dcgettext@plt>
  403248:	ldr	x1, [x22, #1336]
  40324c:	bl	402d80 <fputs_unlocked@plt>
  403250:	adrp	x8, 413000 <_obstack_memory_used@@Base+0x11b0>
  403254:	add	x8, x8, #0x318
  403258:	ldp	q0, q1, [x8, #48]
  40325c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  403260:	adrp	x20, 414000 <_obstack_memory_used@@Base+0x21b0>
  403264:	add	x1, x1, #0x755
  403268:	str	q0, [sp, #48]
  40326c:	ldp	q2, q0, [x8, #80]
  403270:	mov	x21, sp
  403274:	add	x20, x20, #0x40c
  403278:	stp	q1, q2, [sp, #64]
  40327c:	ldr	q1, [x8]
  403280:	str	q0, [sp, #96]
  403284:	ldp	q0, q3, [x8, #16]
  403288:	stp	q1, q0, [sp]
  40328c:	str	q3, [sp, #32]
  403290:	mov	x0, x20
  403294:	bl	402bb0 <strcmp@plt>
  403298:	cbz	w0, 4032a4 <ferror@plt+0x414>
  40329c:	ldr	x1, [x21, #16]!
  4032a0:	cbnz	x1, 403290 <ferror@plt+0x400>
  4032a4:	ldr	x8, [x21, #8]
  4032a8:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  4032ac:	add	x1, x1, #0x7b4
  4032b0:	mov	w2, #0x5                   	// #5
  4032b4:	cmp	x8, #0x0
  4032b8:	mov	x0, xzr
  4032bc:	csel	x21, x20, x8, eq  // eq = none
  4032c0:	bl	402d70 <dcgettext@plt>
  4032c4:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x21b0>
  4032c8:	adrp	x3, 414000 <_obstack_memory_used@@Base+0x21b0>
  4032cc:	mov	x1, x0
  4032d0:	add	x2, x2, #0x51e
  4032d4:	add	x3, x3, #0x7cb
  4032d8:	mov	w0, #0x1                   	// #1
  4032dc:	bl	4029d0 <__printf_chk@plt>
  4032e0:	mov	w0, #0x5                   	// #5
  4032e4:	mov	x1, xzr
  4032e8:	bl	402e80 <setlocale@plt>
  4032ec:	cbz	x0, 403320 <ferror@plt+0x490>
  4032f0:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  4032f4:	add	x1, x1, #0x7f3
  4032f8:	mov	w2, #0x3                   	// #3
  4032fc:	bl	402990 <strncmp@plt>
  403300:	cbz	w0, 403320 <ferror@plt+0x490>
  403304:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  403308:	add	x1, x1, #0x7f7
  40330c:	mov	w2, #0x5                   	// #5
  403310:	mov	x0, xzr
  403314:	bl	402d70 <dcgettext@plt>
  403318:	ldr	x1, [x22, #1336]
  40331c:	bl	402d80 <fputs_unlocked@plt>
  403320:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  403324:	add	x1, x1, #0x83e
  403328:	mov	w2, #0x5                   	// #5
  40332c:	mov	x0, xzr
  403330:	bl	402d70 <dcgettext@plt>
  403334:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x21b0>
  403338:	mov	x1, x0
  40333c:	add	x2, x2, #0x7cb
  403340:	mov	w0, #0x1                   	// #1
  403344:	mov	x3, x20
  403348:	bl	4029d0 <__printf_chk@plt>
  40334c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  403350:	add	x1, x1, #0x859
  403354:	mov	w2, #0x5                   	// #5
  403358:	mov	x0, xzr
  40335c:	bl	402d70 <dcgettext@plt>
  403360:	adrp	x8, 415000 <_obstack_memory_used@@Base+0x31b0>
  403364:	adrp	x9, 414000 <_obstack_memory_used@@Base+0x21b0>
  403368:	add	x8, x8, #0x3a8
  40336c:	add	x9, x9, #0x771
  403370:	cmp	x21, x20
  403374:	mov	x1, x0
  403378:	csel	x3, x9, x8, eq  // eq = none
  40337c:	mov	w0, #0x1                   	// #1
  403380:	mov	x2, x21
  403384:	bl	4029d0 <__printf_chk@plt>
  403388:	mov	w0, w19
  40338c:	bl	4027d0 <exit@plt>
  403390:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  403394:	ldr	x20, [x8, #1312]
  403398:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x11b0>
  40339c:	add	x1, x1, #0x494
  4033a0:	mov	w2, #0x5                   	// #5
  4033a4:	mov	x0, xzr
  4033a8:	bl	402d70 <dcgettext@plt>
  4033ac:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  4033b0:	ldr	x3, [x8, #2992]
  4033b4:	mov	x2, x0
  4033b8:	mov	w1, #0x1                   	// #1
  4033bc:	mov	x0, x20
  4033c0:	bl	402b90 <__fprintf_chk@plt>
  4033c4:	mov	w0, w19
  4033c8:	bl	4027d0 <exit@plt>
  4033cc:	str	d10, [sp, #-128]!
  4033d0:	stp	d9, d8, [sp, #16]
  4033d4:	stp	x29, x30, [sp, #32]
  4033d8:	stp	x28, x27, [sp, #48]
  4033dc:	stp	x26, x25, [sp, #64]
  4033e0:	stp	x24, x23, [sp, #80]
  4033e4:	stp	x22, x21, [sp, #96]
  4033e8:	stp	x20, x19, [sp, #112]
  4033ec:	mov	x29, sp
  4033f0:	sub	sp, sp, #0x320
  4033f4:	mov	w25, w0
  4033f8:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x21b0>
  4033fc:	add	x0, x0, #0x376
  403400:	mov	x19, x1
  403404:	bl	402e20 <getenv@plt>
  403408:	mov	x21, x0
  40340c:	bl	40d5e0 <ferror@plt+0xa750>
  403410:	mov	w9, #0xf250                	// #62032
  403414:	ldr	x8, [x19]
  403418:	movk	w9, #0xfffc, lsl #16
  40341c:	add	w9, w0, w9
  403420:	cmp	w9, #0x2b8
  403424:	cset	w9, hi  // hi = pmore
  403428:	mov	x0, x8
  40342c:	str	x19, [x29, #8]
  403430:	str	w9, [sp, #128]
  403434:	bl	40d65c <ferror@plt+0xa7cc>
  403438:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x31b0>
  40343c:	add	x1, x1, #0x3a8
  403440:	mov	w0, #0x6                   	// #6
  403444:	bl	402e80 <setlocale@plt>
  403448:	adrp	x19, 414000 <_obstack_memory_used@@Base+0x21b0>
  40344c:	add	x19, x19, #0x522
  403450:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  403454:	str	x0, [sp, #80]
  403458:	add	x1, x1, #0x386
  40345c:	mov	x0, x19
  403460:	bl	4029a0 <bindtextdomain@plt>
  403464:	mov	x0, x19
  403468:	bl	402b70 <textdomain@plt>
  40346c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  403470:	mov	w9, #0x2                   	// #2
  403474:	mov	w0, #0x3                   	// #3
  403478:	str	w9, [x8, #1200]
  40347c:	bl	40ba40 <ferror@plt+0x8bb0>
  403480:	and	w8, w0, #0x1
  403484:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x141b0>
  403488:	mov	w0, #0x2                   	// #2
  40348c:	strb	w8, [x9, #1368]
  403490:	bl	40ba40 <ferror@plt+0x8bb0>
  403494:	and	w8, w0, #0x1
  403498:	adrp	x20, 426000 <_obstack_memory_used@@Base+0x141b0>
  40349c:	strb	w8, [x20, #1372]
  4034a0:	bl	4028b0 <localeconv@plt>
  4034a4:	ldr	x9, [x0]
  4034a8:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  4034ac:	ldrb	w10, [x9]
  4034b0:	str	w10, [x8, #1376]
  4034b4:	cbz	w10, 4034c0 <ferror@plt+0x630>
  4034b8:	ldrb	w9, [x9, #1]
  4034bc:	cbz	w9, 4034c8 <ferror@plt+0x638>
  4034c0:	mov	w9, #0x2e                  	// #46
  4034c4:	str	w9, [x8, #1376]
  4034c8:	ldr	x9, [x0, #8]
  4034cc:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  4034d0:	ldrb	w10, [x9]
  4034d4:	str	w10, [x8, #1380]
  4034d8:	cbz	w10, 4034e4 <ferror@plt+0x654>
  4034dc:	ldrb	w9, [x9, #1]
  4034e0:	cbz	w9, 4034ec <ferror@plt+0x65c>
  4034e4:	mov	w9, #0xffffffff            	// #-1
  4034e8:	str	w9, [x8, #1380]
  4034ec:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  4034f0:	str	x21, [sp, #112]
  4034f4:	add	x28, sp, #0x1a8
  4034f8:	strb	wzr, [x8, #1384]
  4034fc:	bl	402bc0 <__ctype_b_loc@plt>
  403500:	mov	x19, x0
  403504:	bl	402a50 <__ctype_toupper_loc@plt>
  403508:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x141b0>
  40350c:	adrp	x16, 426000 <_obstack_memory_used@@Base+0x141b0>
  403510:	adrp	x17, 426000 <_obstack_memory_used@@Base+0x141b0>
  403514:	adrp	x23, 426000 <_obstack_memory_used@@Base+0x141b0>
  403518:	mov	x8, xzr
  40351c:	add	x9, x9, #0x620
  403520:	add	x16, x16, #0x720
  403524:	mov	w10, #0x1                   	// #1
  403528:	add	x17, x17, #0x820
  40352c:	add	x23, x23, #0x920
  403530:	ldr	x11, [x19]
  403534:	ldrh	w11, [x11, x8, lsl #1]
  403538:	tst	w11, #0x1
  40353c:	bic	w13, w10, w11, lsr #14
  403540:	cset	w14, eq  // eq = none
  403544:	cmp	x8, #0xa
  403548:	and	w12, w11, #0x1
  40354c:	strb	w13, [x16, x8]
  403550:	cset	w13, ne  // ne = any
  403554:	cset	w15, eq  // eq = none
  403558:	tst	w11, #0x8
  40355c:	orr	w11, w12, w15
  403560:	cset	w12, eq  // eq = none
  403564:	and	w13, w13, w14
  403568:	strb	w11, [x9, x8]
  40356c:	and	w11, w12, w13
  403570:	strb	w11, [x17, x8]
  403574:	ldr	x11, [x0]
  403578:	ldr	w11, [x11, x8, lsl #2]
  40357c:	strb	w11, [x23, x8]
  403580:	add	x8, x8, #0x1
  403584:	cmp	x8, #0x100
  403588:	b.ne	403530 <ferror@plt+0x6a0>  // b.any
  40358c:	ldrb	w8, [x20, #1372]
  403590:	cbz	w8, 40363c <ferror@plt+0x7ac>
  403594:	mov	w26, #0xe                   	// #14
  403598:	adrp	x27, 426000 <_obstack_memory_used@@Base+0x141b0>
  40359c:	mov	x22, xzr
  4035a0:	movk	w26, #0x2, lsl #16
  4035a4:	add	x27, x27, #0x3d0
  4035a8:	b	4035b8 <ferror@plt+0x728>
  4035ac:	cmp	x22, #0xc
  4035b0:	strb	wzr, [x0, x8]
  4035b4:	b.eq	403620 <ferror@plt+0x790>  // b.none
  4035b8:	add	w0, w22, w26
  4035bc:	bl	402910 <nl_langinfo@plt>
  4035c0:	mov	x20, x0
  4035c4:	bl	4027c0 <strlen@plt>
  4035c8:	mov	x21, x0
  4035cc:	add	x0, x0, #0x1
  4035d0:	bl	41078c <ferror@plt+0xd8fc>
  4035d4:	add	x8, x27, x22, lsl #4
  4035d8:	add	x22, x22, #0x1
  4035dc:	str	x0, [x8]
  4035e0:	str	w22, [x8, #8]
  4035e4:	mov	x8, xzr
  4035e8:	cbnz	x21, 4035fc <ferror@plt+0x76c>
  4035ec:	b	4035ac <ferror@plt+0x71c>
  4035f0:	subs	x21, x21, #0x1
  4035f4:	add	x20, x20, #0x1
  4035f8:	b.eq	4035ac <ferror@plt+0x71c>  // b.none
  4035fc:	ldr	x10, [x19]
  403600:	ldrb	w9, [x20]
  403604:	ldrh	w10, [x10, x9, lsl #1]
  403608:	tbnz	w10, #0, 4035f0 <ferror@plt+0x760>
  40360c:	ldrb	w9, [x23, x9]
  403610:	add	x10, x8, #0x1
  403614:	strb	w9, [x0, x8]
  403618:	mov	x8, x10
  40361c:	b	4035f0 <ferror@plt+0x760>
  403620:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x141b0>
  403624:	adrp	x3, 406000 <ferror@plt+0x3170>
  403628:	add	x0, x0, #0x3d0
  40362c:	add	x3, x3, #0x8e0
  403630:	mov	w1, #0xc                   	// #12
  403634:	mov	w2, #0x10                  	// #16
  403638:	bl	402850 <qsort@plt>
  40363c:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x141b0>
  403640:	add	x19, x19, #0x570
  403644:	mov	x0, x19
  403648:	bl	402970 <sigemptyset@plt>
  40364c:	adrp	x22, 412000 <_obstack_memory_used@@Base+0x1b0>
  403650:	mov	x21, xzr
  403654:	add	x22, x22, #0xe84
  403658:	b	403668 <ferror@plt+0x7d8>
  40365c:	add	x21, x21, #0x4
  403660:	cmp	x21, #0x2c
  403664:	b.eq	403698 <ferror@plt+0x808>  // b.none
  403668:	ldr	w20, [x22, x21]
  40366c:	add	x2, sp, #0x88
  403670:	mov	x1, xzr
  403674:	mov	w0, w20
  403678:	bl	402a80 <sigaction@plt>
  40367c:	ldr	x8, [sp, #136]
  403680:	cmp	x8, #0x1
  403684:	b.eq	40365c <ferror@plt+0x7cc>  // b.none
  403688:	mov	x0, x19
  40368c:	mov	w1, w20
  403690:	bl	402dd0 <sigaddset@plt>
  403694:	b	40365c <ferror@plt+0x7cc>
  403698:	ldp	q0, q1, [x19, #64]
  40369c:	add	x8, sp, #0x1
  4036a0:	mov	w1, #0xe                   	// #14
  4036a4:	mov	x0, x19
  4036a8:	stur	q0, [sp, #208]
  4036ac:	ldp	q2, q0, [x19, #96]
  4036b0:	stp	q1, q2, [sp, #224]
  4036b4:	ldp	q1, q2, [x19]
  4036b8:	stur	q0, [x8, #255]
  4036bc:	adrp	x8, 406000 <ferror@plt+0x3170>
  4036c0:	add	x8, x8, #0x9c
  4036c4:	stp	q1, q2, [sp, #144]
  4036c8:	ldp	q0, q1, [x19, #32]
  4036cc:	str	x8, [sp, #136]
  4036d0:	str	wzr, [sp, #272]
  4036d4:	stp	q0, q1, [sp, #176]
  4036d8:	bl	402ba0 <sigismember@plt>
  4036dc:	cbz	w0, 4036f0 <ferror@plt+0x860>
  4036e0:	add	x1, sp, #0x88
  4036e4:	mov	w0, #0xe                   	// #14
  4036e8:	mov	x2, xzr
  4036ec:	bl	402a80 <sigaction@plt>
  4036f0:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x141b0>
  4036f4:	add	x0, x0, #0x570
  4036f8:	mov	w1, #0x1                   	// #1
  4036fc:	bl	402ba0 <sigismember@plt>
  403700:	ldr	x21, [sp, #112]
  403704:	adrp	x22, 426000 <_obstack_memory_used@@Base+0x141b0>
  403708:	add	x22, x22, #0x820
  40370c:	cbz	w0, 403720 <ferror@plt+0x890>
  403710:	add	x1, sp, #0x88
  403714:	mov	w0, #0x1                   	// #1
  403718:	mov	x2, xzr
  40371c:	bl	402a80 <sigaction@plt>
  403720:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x141b0>
  403724:	add	x0, x0, #0x570
  403728:	mov	w1, #0x2                   	// #2
  40372c:	bl	402ba0 <sigismember@plt>
  403730:	cbz	w0, 403744 <ferror@plt+0x8b4>
  403734:	add	x1, sp, #0x88
  403738:	mov	w0, #0x2                   	// #2
  40373c:	mov	x2, xzr
  403740:	bl	402a80 <sigaction@plt>
  403744:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x141b0>
  403748:	add	x0, x0, #0x570
  40374c:	mov	w1, #0xd                   	// #13
  403750:	bl	402ba0 <sigismember@plt>
  403754:	cbz	w0, 403768 <ferror@plt+0x8d8>
  403758:	add	x1, sp, #0x88
  40375c:	mov	w0, #0xd                   	// #13
  403760:	mov	x2, xzr
  403764:	bl	402a80 <sigaction@plt>
  403768:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x141b0>
  40376c:	add	x0, x0, #0x570
  403770:	mov	w1, #0x3                   	// #3
  403774:	bl	402ba0 <sigismember@plt>
  403778:	cbz	w0, 40378c <ferror@plt+0x8fc>
  40377c:	add	x1, sp, #0x88
  403780:	mov	w0, #0x3                   	// #3
  403784:	mov	x2, xzr
  403788:	bl	402a80 <sigaction@plt>
  40378c:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x141b0>
  403790:	add	x0, x0, #0x570
  403794:	mov	w1, #0xf                   	// #15
  403798:	bl	402ba0 <sigismember@plt>
  40379c:	cbz	w0, 4037b0 <ferror@plt+0x920>
  4037a0:	add	x1, sp, #0x88
  4037a4:	mov	w0, #0xf                   	// #15
  4037a8:	mov	x2, xzr
  4037ac:	bl	402a80 <sigaction@plt>
  4037b0:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x141b0>
  4037b4:	add	x0, x0, #0x570
  4037b8:	mov	w1, #0x1d                  	// #29
  4037bc:	bl	402ba0 <sigismember@plt>
  4037c0:	cbz	w0, 4037d4 <ferror@plt+0x944>
  4037c4:	add	x1, sp, #0x88
  4037c8:	mov	w0, #0x1d                  	// #29
  4037cc:	mov	x2, xzr
  4037d0:	bl	402a80 <sigaction@plt>
  4037d4:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x141b0>
  4037d8:	add	x0, x0, #0x570
  4037dc:	mov	w1, #0x1b                  	// #27
  4037e0:	bl	402ba0 <sigismember@plt>
  4037e4:	cbz	w0, 4037f8 <ferror@plt+0x968>
  4037e8:	add	x1, sp, #0x88
  4037ec:	mov	w0, #0x1b                  	// #27
  4037f0:	mov	x2, xzr
  4037f4:	bl	402a80 <sigaction@plt>
  4037f8:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x141b0>
  4037fc:	add	x0, x0, #0x570
  403800:	mov	w1, #0x1a                  	// #26
  403804:	bl	402ba0 <sigismember@plt>
  403808:	cbz	w0, 40381c <ferror@plt+0x98c>
  40380c:	add	x1, sp, #0x88
  403810:	mov	w0, #0x1a                  	// #26
  403814:	mov	x2, xzr
  403818:	bl	402a80 <sigaction@plt>
  40381c:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x141b0>
  403820:	add	x0, x0, #0x570
  403824:	mov	w1, #0x18                  	// #24
  403828:	bl	402ba0 <sigismember@plt>
  40382c:	cbz	w0, 403840 <ferror@plt+0x9b0>
  403830:	add	x1, sp, #0x88
  403834:	mov	w0, #0x18                  	// #24
  403838:	mov	x2, xzr
  40383c:	bl	402a80 <sigaction@plt>
  403840:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x141b0>
  403844:	add	x0, x0, #0x570
  403848:	mov	w1, #0x19                  	// #25
  40384c:	bl	402ba0 <sigismember@plt>
  403850:	cbz	w0, 403864 <ferror@plt+0x9d4>
  403854:	add	x1, sp, #0x88
  403858:	mov	w0, #0x19                  	// #25
  40385c:	mov	x2, xzr
  403860:	bl	402a80 <sigaction@plt>
  403864:	mov	w0, #0x11                  	// #17
  403868:	mov	x1, xzr
  40386c:	bl	4028e0 <signal@plt>
  403870:	adrp	x0, 406000 <ferror@plt+0x3170>
  403874:	add	x0, x0, #0xf0
  403878:	bl	412a00 <_obstack_memory_used@@Base+0xbb0>
  40387c:	movi	v0.2d, #0x0
  403880:	mov	x8, #0xffffffffffffffff    	// #-1
  403884:	stur	q0, [x28, #8]
  403888:	stur	q0, [x28, #24]
  40388c:	stur	q0, [x28, #40]
  403890:	stur	q0, [x28, #56]
  403894:	str	x8, [sp, #440]
  403898:	str	x8, [sp, #424]
  40389c:	tbnz	w25, #31, 405294 <ferror@plt+0x2404>
  4038a0:	cmp	x21, #0x0
  4038a4:	mov	w8, w25
  4038a8:	cset	w9, eq  // eq = none
  4038ac:	lsl	x0, x8, #3
  4038b0:	str	w9, [sp, #88]
  4038b4:	bl	41078c <ferror@plt+0xd8fc>
  4038b8:	add	x8, sp, #0x1f0
  4038bc:	ldr	x14, [x29, #8]
  4038c0:	add	x10, x8, #0x10
  4038c4:	add	x9, sp, #0x88
  4038c8:	adrp	x26, 412000 <_obstack_memory_used@@Base+0x1b0>
  4038cc:	stp	x10, xzr, [sp, #96]
  4038d0:	add	x10, x8, #0x8
  4038d4:	add	x8, x8, #0x18
  4038d8:	mov	x27, x0
  4038dc:	mov	x28, xzr
  4038e0:	mov	w20, wzr
  4038e4:	mov	w19, wzr
  4038e8:	mov	w0, wzr
  4038ec:	adrp	x13, 426000 <_obstack_memory_used@@Base+0x141b0>
  4038f0:	add	x26, x26, #0xed0
  4038f4:	stp	x8, x10, [sp, #64]
  4038f8:	orr	x8, x9, #0x1
  4038fc:	str	xzr, [sp, #8]
  403900:	str	xzr, [sp, #48]
  403904:	str	xzr, [sp, #32]
  403908:	str	x8, [sp, #120]
  40390c:	mov	w8, #0xffffffff            	// #-1
  403910:	cmn	w0, #0x1
  403914:	stur	w8, [x29, #-40]
  403918:	b.eq	4039d8 <ferror@plt+0xb48>  // b.none
  40391c:	cbz	x21, 403974 <ferror@plt+0xae4>
  403920:	cbz	x28, 403974 <ferror@plt+0xae4>
  403924:	tst	w19, #0xff
  403928:	b.ne	4039d8 <ferror@plt+0xb48>  // b.any
  40392c:	ldr	w8, [sp, #128]
  403930:	eor	w8, w8, #0x1
  403934:	tbnz	w8, #0, 4039d8 <ferror@plt+0xb48>
  403938:	ldrsw	x8, [x13, #1328]
  40393c:	cmp	w8, w25
  403940:	b.eq	4039d8 <ferror@plt+0xb48>  // b.none
  403944:	ldr	x9, [x14, x8, lsl #3]
  403948:	ldrb	w10, [x9]
  40394c:	cmp	w10, #0x2d
  403950:	b.ne	4039d8 <ferror@plt+0xb48>  // b.any
  403954:	ldrb	w10, [x9, #1]
  403958:	cmp	w10, #0x6f
  40395c:	b.ne	4039d8 <ferror@plt+0xb48>  // b.any
  403960:	add	w8, w8, #0x1
  403964:	cmp	w8, w25
  403968:	b.ne	403974 <ferror@plt+0xae4>  // b.any
  40396c:	ldrb	w8, [x9, #2]
  403970:	cbz	w8, 4039d8 <ferror@plt+0xb48>
  403974:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x1b0>
  403978:	sub	x4, x29, #0x28
  40397c:	mov	w0, w25
  403980:	mov	x1, x14
  403984:	add	x2, x2, #0xeb0
  403988:	mov	x3, x26
  40398c:	mov	x24, x13
  403990:	bl	402b80 <getopt_long@plt>
  403994:	ldr	x14, [x29, #8]
  403998:	add	w8, w0, #0x3
  40399c:	cmp	w8, #0x10a
  4039a0:	b.hi	405bb4 <ferror@plt+0x2d24>  // b.pmore
  4039a4:	adrp	x11, 412000 <_obstack_memory_used@@Base+0x1b0>
  4039a8:	add	x11, x11, #0xa70
  4039ac:	adr	x9, 4039c4 <ferror@plt+0xb34>
  4039b0:	ldrh	w10, [x11, x8, lsl #1]
  4039b4:	add	x9, x9, x10, lsl #2
  4039b8:	mov	x13, x24
  4039bc:	mov	w8, #0x1                   	// #1
  4039c0:	br	x9
  4039c4:	ldr	x8, [sp, #120]
  4039c8:	mov	w9, w0
  4039cc:	strb	w0, [sp, #136]
  4039d0:	strb	wzr, [sp, #137]
  4039d4:	b	403a14 <ferror@plt+0xb84>
  4039d8:	ldrsw	x8, [x13, #1328]
  4039dc:	cmp	w8, w25
  4039e0:	b.ge	4047a8 <ferror@plt+0x1918>  // b.tcont
  4039e4:	add	w9, w8, #0x1
  4039e8:	str	w9, [x13, #1328]
  4039ec:	ldr	x8, [x14, x8, lsl #3]
  4039f0:	add	x9, x28, #0x1
  4039f4:	str	x8, [x27, x28, lsl #3]
  4039f8:	mov	x28, x9
  4039fc:	mov	w8, w20
  403a00:	mov	w20, w8
  403a04:	b	40390c <ferror@plt+0xa7c>
  403a08:	mov	w9, #0x1                   	// #1
  403a0c:	strb	w9, [sp, #477]
  403a10:	ldrb	w9, [x8], #1
  403a14:	and	w9, w9, #0xff
  403a18:	sub	w9, w9, #0x4d
  403a1c:	cmp	w9, #0x25
  403a20:	b.hi	4039fc <ferror@plt+0xb6c>  // b.pmore
  403a24:	adrp	x10, 412000 <_obstack_memory_used@@Base+0x1b0>
  403a28:	add	x10, x10, #0xcf3
  403a2c:	adr	x11, 4039fc <ferror@plt+0xb6c>
  403a30:	ldrb	w12, [x10, x9]
  403a34:	add	x11, x11, x12, lsl #2
  403a38:	br	x11
  403a3c:	mov	w9, #0x1                   	// #1
  403a40:	strb	w9, [sp, #478]
  403a44:	ldrb	w9, [x8], #1
  403a48:	b	403a14 <ferror@plt+0xb84>
  403a4c:	ldr	x9, [sp, #456]
  403a50:	cbnz	x9, 403a9c <ferror@plt+0xc0c>
  403a54:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x141b0>
  403a58:	add	x9, x9, #0x720
  403a5c:	str	x9, [sp, #456]
  403a60:	ldrb	w9, [x8], #1
  403a64:	b	403a14 <ferror@plt+0xb84>
  403a68:	str	x23, [sp, #464]
  403a6c:	ldrb	w9, [x8], #1
  403a70:	b	403a14 <ferror@plt+0xb84>
  403a74:	mov	w9, #0x101                 	// #257
  403a78:	strh	w9, [sp, #472]
  403a7c:	ldrb	w9, [x8], #1
  403a80:	b	403a14 <ferror@plt+0xb84>
  403a84:	mov	w9, #0x1                   	// #1
  403a88:	strb	w9, [sp, #476]
  403a8c:	ldrb	w9, [x8], #1
  403a90:	b	403a14 <ferror@plt+0xb84>
  403a94:	mov	w9, #0x1                   	// #1
  403a98:	strb	w9, [sp, #480]
  403a9c:	ldrb	w9, [x8], #1
  403aa0:	b	403a14 <ferror@plt+0xb84>
  403aa4:	str	x22, [sp, #456]
  403aa8:	ldrb	w9, [x8], #1
  403aac:	b	403a14 <ferror@plt+0xb84>
  403ab0:	mov	w9, #0x1                   	// #1
  403ab4:	strb	w9, [sp, #475]
  403ab8:	ldrb	w9, [x8], #1
  403abc:	b	403a14 <ferror@plt+0xb84>
  403ac0:	mov	w9, #0x1                   	// #1
  403ac4:	strb	w9, [sp, #479]
  403ac8:	ldrb	w9, [x8], #1
  403acc:	b	403a14 <ferror@plt+0xb84>
  403ad0:	mov	w9, #0x1                   	// #1
  403ad4:	strb	w9, [sp, #474]
  403ad8:	ldrb	w9, [x8], #1
  403adc:	b	403a14 <ferror@plt+0xb84>
  403ae0:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  403ae4:	ldr	x1, [x8, #1320]
  403ae8:	cbz	x1, 404330 <ferror@plt+0x14a0>
  403aec:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  403af0:	ldr	x5, [x8, #1192]
  403af4:	mov	x26, x21
  403af8:	mov	x21, x22
  403afc:	mov	w22, w19
  403b00:	adrp	x19, 413000 <_obstack_memory_used@@Base+0x11b0>
  403b04:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x21b0>
  403b08:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x11b0>
  403b0c:	add	x19, x19, #0x2f0
  403b10:	add	x0, x0, #0x411
  403b14:	add	x2, x2, #0x2f8
  403b18:	mov	w4, #0x1                   	// #1
  403b1c:	mov	x3, x19
  403b20:	bl	40a518 <ferror@plt+0x7688>
  403b24:	ldr	x14, [x29, #8]
  403b28:	ldrb	w0, [x19, x0]
  403b2c:	mov	w19, w22
  403b30:	mov	x22, x21
  403b34:	mov	x21, x26
  403b38:	adrp	x26, 412000 <_obstack_memory_used@@Base+0x1b0>
  403b3c:	mov	x13, x24
  403b40:	add	x26, x26, #0xed0
  403b44:	ands	w8, w19, #0xff
  403b48:	b.eq	403b54 <ferror@plt+0xcc4>  // b.none
  403b4c:	cmp	w0, w8
  403b50:	b.ne	405c90 <ferror@plt+0x2e00>  // b.any
  403b54:	mov	w8, w20
  403b58:	mov	w19, w0
  403b5c:	b	40390c <ferror@plt+0xa7c>
  403b60:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  403b64:	mov	w9, #0x1                   	// #1
  403b68:	strb	w9, [x8, #1531]
  403b6c:	mov	w0, #0x7a                  	// #122
  403b70:	b	4039fc <ferror@plt+0xb6c>
  403b74:	str	w19, [sp, #44]
  403b78:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x141b0>
  403b7c:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x141b0>
  403b80:	ldr	x8, [x19, #1552]
  403b84:	ldr	x10, [x9, #2600]
  403b88:	adrp	x11, 426000 <_obstack_memory_used@@Base+0x141b0>
  403b8c:	mov	w22, w20
  403b90:	ldr	x20, [x11, #1320]
  403b94:	cmp	x8, x10
  403b98:	adrp	x21, 426000 <_obstack_memory_used@@Base+0x141b0>
  403b9c:	b.ne	404014 <ferror@plt+0x1184>  // b.any
  403ba0:	ldr	x0, [x21, #2608]
  403ba4:	cbz	x0, 404420 <ferror@plt+0x1590>
  403ba8:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  403bac:	movk	x10, #0xaaa, lsl #48
  403bb0:	cmp	x8, x10
  403bb4:	b.cs	405294 <ferror@plt+0x2404>  // b.hs, b.nlast
  403bb8:	add	x8, x8, x8, lsr #1
  403bbc:	add	x8, x8, #0x1
  403bc0:	b	4044b0 <ferror@plt+0x1620>
  403bc4:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  403bc8:	mov	w9, #0x1                   	// #1
  403bcc:	strb	w9, [x8, #1529]
  403bd0:	mov	w0, #0x73                  	// #115
  403bd4:	b	4039fc <ferror@plt+0xb6c>
  403bd8:	mov	x26, x21
  403bdc:	mov	x21, x22
  403be0:	mov	w22, w19
  403be4:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x141b0>
  403be8:	ldr	x0, [x19, #1320]
  403bec:	ldrb	w8, [x0]
  403bf0:	cbz	w8, 405c9c <ferror@plt+0x2e0c>
  403bf4:	ldrb	w9, [x0, #1]
  403bf8:	cbz	w9, 403c18 <ferror@plt+0xd88>
  403bfc:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  403c00:	add	x1, x1, #0x4f2
  403c04:	bl	402bb0 <strcmp@plt>
  403c08:	cbnz	w0, 405ca8 <ferror@plt+0x2e18>
  403c0c:	ldr	x14, [x29, #8]
  403c10:	mov	w8, wzr
  403c14:	mov	x13, x24
  403c18:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x141b0>
  403c1c:	ldr	w10, [x9, #952]
  403c20:	mov	w19, w22
  403c24:	cmp	w10, #0x100
  403c28:	b.eq	403c34 <ferror@plt+0xda4>  // b.none
  403c2c:	cmp	w10, w8
  403c30:	b.ne	405cd0 <ferror@plt+0x2e40>  // b.any
  403c34:	str	w8, [x9, #952]
  403c38:	mov	w0, #0x74                  	// #116
  403c3c:	mov	w8, w20
  403c40:	b	4043e0 <ferror@plt+0x1550>
  403c44:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  403c48:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x141b0>
  403c4c:	ldr	x1, [x8, #1320]
  403c50:	ldr	x5, [x9, #1192]
  403c54:	mov	x26, x21
  403c58:	mov	x21, x22
  403c5c:	mov	w22, w19
  403c60:	adrp	x19, 413000 <_obstack_memory_used@@Base+0x11b0>
  403c64:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x21b0>
  403c68:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x11b0>
  403c6c:	add	x19, x19, #0x2b0
  403c70:	add	x0, x0, #0x40a
  403c74:	add	x2, x2, #0x2b8
  403c78:	mov	w4, #0x1                   	// #1
  403c7c:	mov	x3, x19
  403c80:	bl	40a518 <ferror@plt+0x7688>
  403c84:	ldr	x14, [x29, #8]
  403c88:	ldrb	w0, [x19, x0]
  403c8c:	mov	w19, w22
  403c90:	mov	x22, x21
  403c94:	mov	x21, x26
  403c98:	adrp	x26, 412000 <_obstack_memory_used@@Base+0x1b0>
  403c9c:	mov	x13, x24
  403ca0:	add	x26, x26, #0xed0
  403ca4:	b	4039c4 <ferror@plt+0xb34>
  403ca8:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x141b0>
  403cac:	ldr	x0, [x9, #1320]
  403cb0:	movi	v0.2d, #0x0
  403cb4:	add	x8, sp, #0x1a8
  403cb8:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x21b0>
  403cbc:	stur	q0, [x8, #88]
  403cc0:	stur	q0, [x8, #120]
  403cc4:	stur	q0, [x8, #104]
  403cc8:	stur	q0, [x8, #72]
  403ccc:	mov	x8, #0xffffffffffffffff    	// #-1
  403cd0:	add	x2, x2, #0x441
  403cd4:	add	x1, sp, #0x1f0
  403cd8:	str	xzr, [sp, #560]
  403cdc:	str	x8, [sp, #512]
  403ce0:	bl	406184 <ferror@plt+0x32f4>
  403ce4:	ldr	x9, [sp, #496]
  403ce8:	sub	x8, x9, #0x1
  403cec:	str	x8, [sp, #496]
  403cf0:	cbz	x9, 405e40 <ferror@plt+0x2fb0>
  403cf4:	ldrb	w9, [x0]
  403cf8:	cmp	w9, #0x2e
  403cfc:	b.ne	40401c <ferror@plt+0x118c>  // b.any
  403d00:	ldr	x1, [sp, #72]
  403d04:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x21b0>
  403d08:	add	x0, x0, #0x1
  403d0c:	add	x2, x2, #0x3d3
  403d10:	bl	406184 <ferror@plt+0x32f4>
  403d14:	ldr	x8, [sp, #504]
  403d18:	sub	x9, x8, #0x1
  403d1c:	str	x9, [sp, #504]
  403d20:	cbz	x8, 405cdc <ferror@plt+0x2e4c>
  403d24:	ldr	x8, [sp, #496]
  403d28:	orr	x8, x8, x9
  403d2c:	cbnz	x8, 40403c <ferror@plt+0x11ac>
  403d30:	b	404028 <ferror@plt+0x1198>
  403d34:	str	w19, [sp, #44]
  403d38:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x141b0>
  403d3c:	ldr	x8, [x19, #1320]
  403d40:	ldrb	w9, [x8]
  403d44:	cmp	w9, #0x2b
  403d48:	b.ne	404530 <ferror@plt+0x16a0>  // b.any
  403d4c:	ldrsw	x9, [x13, #1328]
  403d50:	str	w20, [sp, #28]
  403d54:	cmp	w9, w25
  403d58:	b.eq	404340 <ferror@plt+0x14b0>  // b.none
  403d5c:	ldr	x9, [x14, x9, lsl #3]
  403d60:	ldrb	w10, [x9]
  403d64:	cmp	w10, #0x2d
  403d68:	b.ne	404340 <ferror@plt+0x14b0>  // b.any
  403d6c:	ldrb	w9, [x9, #1]
  403d70:	sub	w9, w9, #0x30
  403d74:	cmp	w9, #0xa
  403d78:	cset	w20, cc  // cc = lo, ul, last
  403d7c:	b	404344 <ferror@plt+0x14b4>
  403d80:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  403d84:	mov	x26, x21
  403d88:	mov	x21, x22
  403d8c:	mov	w22, w19
  403d90:	ldr	x19, [x8, #1320]
  403d94:	ldr	x0, [sp, #32]
  403d98:	cbz	x0, 4043c4 <ferror@plt+0x1534>
  403d9c:	mov	x1, x19
  403da0:	bl	402bb0 <strcmp@plt>
  403da4:	cbnz	w0, 405cf0 <ferror@plt+0x2e60>
  403da8:	mov	w0, #0x105                 	// #261
  403dac:	str	x19, [sp, #32]
  403db0:	b	403e44 <ferror@plt+0xfb4>
  403db4:	ldur	w8, [x29, #-40]
  403db8:	adrp	x4, 415000 <_obstack_memory_used@@Base+0x31b0>
  403dbc:	add	x4, x4, #0x3a8
  403dc0:	add	x3, sp, #0x88
  403dc4:	str	w8, [sp, #56]
  403dc8:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  403dcc:	ldr	x22, [x8, #1320]
  403dd0:	mov	w2, #0xa                   	// #10
  403dd4:	mov	x1, xzr
  403dd8:	mov	x0, x22
  403ddc:	bl	410d54 <ferror@plt+0xdec4>
  403de0:	cbz	w0, 40425c <ferror@plt+0x13cc>
  403de4:	cmp	w0, #0x1
  403de8:	b.ne	405cfc <ferror@plt+0x2e6c>  // b.any
  403dec:	ldr	x14, [x29, #8]
  403df0:	mov	x8, #0xffffffffffffffff    	// #-1
  403df4:	mov	x13, x24
  403df8:	str	x8, [sp, #8]
  403dfc:	b	404270 <ferror@plt+0x13e0>
  403e00:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  403e04:	mov	w9, #0x1                   	// #1
  403e08:	strb	w9, [x8, #1530]
  403e0c:	mov	w0, #0x75                  	// #117
  403e10:	b	4039fc <ferror@plt+0xb6c>
  403e14:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  403e18:	mov	x26, x21
  403e1c:	mov	x21, x22
  403e20:	mov	w22, w19
  403e24:	ldr	x19, [x8, #1320]
  403e28:	ldr	x0, [sp, #48]
  403e2c:	cbz	x0, 4043d0 <ferror@plt+0x1540>
  403e30:	mov	x1, x19
  403e34:	bl	402bb0 <strcmp@plt>
  403e38:	cbnz	w0, 405d0c <ferror@plt+0x2e7c>
  403e3c:	mov	w0, #0x6f                  	// #111
  403e40:	str	x19, [sp, #48]
  403e44:	mov	w19, w22
  403e48:	mov	x22, x21
  403e4c:	mov	x21, x26
  403e50:	adrp	x26, 412000 <_obstack_memory_used@@Base+0x1b0>
  403e54:	mov	w8, w20
  403e58:	add	x26, x26, #0xed0
  403e5c:	b	404130 <ferror@plt+0x12a0>
  403e60:	ldur	w8, [x29, #-40]
  403e64:	adrp	x4, 414000 <_obstack_memory_used@@Base+0x21b0>
  403e68:	add	x4, x4, #0xb19
  403e6c:	sub	x1, x29, #0xa8
  403e70:	str	w8, [sp, #56]
  403e74:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  403e78:	ldr	x22, [x8, #1320]
  403e7c:	add	x3, sp, #0x88
  403e80:	mov	w2, #0xa                   	// #10
  403e84:	mov	x0, x22
  403e88:	bl	4111b4 <ferror@plt+0xe324>
  403e8c:	cmp	w0, #0x2
  403e90:	b.eq	404278 <ferror@plt+0x13e8>  // b.none
  403e94:	cbnz	w0, 405e7c <ferror@plt+0x2fec>
  403e98:	ldur	x8, [x29, #-168]
  403e9c:	ldr	x14, [x29, #8]
  403ea0:	mov	x13, x24
  403ea4:	ldurb	w8, [x8, #-1]
  403ea8:	sub	w8, w8, #0x30
  403eac:	cmp	w8, #0x9
  403eb0:	b.hi	4042ec <ferror@plt+0x145c>  // b.pmore
  403eb4:	ldr	x8, [sp, #136]
  403eb8:	lsr	x9, x8, #54
  403ebc:	cbnz	x9, 405e78 <ferror@plt+0x2fe8>
  403ec0:	lsl	x8, x8, #10
  403ec4:	b	4042e8 <ferror@plt+0x1458>
  403ec8:	ldr	w8, [x13, #1328]
  403ecc:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x141b0>
  403ed0:	ldr	x9, [x9, #1320]
  403ed4:	sub	w10, w8, #0x1
  403ed8:	ldr	x10, [x14, w10, sxtw #3]
  403edc:	cmp	x9, x10
  403ee0:	b.eq	403eec <ferror@plt+0x105c>  // b.none
  403ee4:	mov	w0, #0x79                  	// #121
  403ee8:	b	4039fc <ferror@plt+0xb6c>
  403eec:	ldrb	w10, [x9], #1
  403ef0:	sub	w11, w10, #0x30
  403ef4:	cmp	w11, #0xa
  403ef8:	b.cc	403eec <ferror@plt+0x105c>  // b.lo, b.ul, b.last
  403efc:	cmp	w10, #0x0
  403f00:	cset	w9, ne  // ne = any
  403f04:	sub	w8, w8, w9
  403f08:	str	w8, [x13, #1328]
  403f0c:	mov	w0, #0x79                  	// #121
  403f10:	b	4039fc <ferror@plt+0xb6c>
  403f14:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  403f18:	ldr	x8, [x8, #1320]
  403f1c:	mov	w0, #0x103                 	// #259
  403f20:	str	x8, [sp, #104]
  403f24:	b	4039fc <ferror@plt+0xb6c>
  403f28:	ldursw	x8, [x29, #-40]
  403f2c:	sub	x3, x29, #0xe0
  403f30:	mov	w2, #0xa                   	// #10
  403f34:	mov	x1, xzr
  403f38:	str	x8, [sp, #16]
  403f3c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  403f40:	ldr	x0, [x8, #1320]
  403f44:	mov	x4, xzr
  403f48:	mov	w22, w19
  403f4c:	mov	x21, x28
  403f50:	str	x0, [sp, #56]
  403f54:	bl	4111b4 <ferror@plt+0xe324>
  403f58:	mov	w28, w0
  403f5c:	add	x1, sp, #0x88
  403f60:	mov	w0, #0x7                   	// #7
  403f64:	bl	402cf0 <getrlimit@plt>
  403f68:	ldr	w8, [sp, #136]
  403f6c:	cmp	w0, #0x0
  403f70:	mov	w9, #0x11                  	// #17
  403f74:	sub	w8, w8, #0x3
  403f78:	csel	w19, w8, w9, eq  // eq = none
  403f7c:	cbnz	w28, 405d18 <ferror@plt+0x2e88>
  403f80:	ldur	x8, [x29, #-224]
  403f84:	mov	x28, x21
  403f88:	ldr	x21, [sp, #112]
  403f8c:	ldr	x14, [x29, #8]
  403f90:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x141b0>
  403f94:	str	w8, [x9, #968]
  403f98:	mov	w9, w22
  403f9c:	adrp	x22, 426000 <_obstack_memory_used@@Base+0x141b0>
  403fa0:	lsr	x10, x8, #32
  403fa4:	add	x22, x22, #0x820
  403fa8:	cbnz	x10, 405d20 <ferror@plt+0x2e90>
  403fac:	cmp	w8, #0x1
  403fb0:	b.ls	405da0 <ferror@plt+0x2f10>  // b.plast
  403fb4:	cmp	w19, w8
  403fb8:	b.cc	405d20 <ferror@plt+0x2e90>  // b.lo, b.ul, b.last
  403fbc:	mov	x13, x24
  403fc0:	mov	w0, #0x104                 	// #260
  403fc4:	mov	w8, w20
  403fc8:	mov	w19, w9
  403fcc:	b	40390c <ferror@plt+0xa7c>
  403fd0:	adrp	x21, 426000 <_obstack_memory_used@@Base+0x141b0>
  403fd4:	ldr	x0, [x21, #1520]
  403fd8:	str	w19, [sp, #44]
  403fdc:	cbz	x0, 4043f8 <ferror@plt+0x1568>
  403fe0:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  403fe4:	ldr	x19, [x8, #1320]
  403fe8:	mov	x1, x19
  403fec:	bl	402bb0 <strcmp@plt>
  403ff0:	ldr	x14, [x29, #8]
  403ff4:	mov	x13, x24
  403ff8:	cbz	w0, 404400 <ferror@plt+0x1570>
  403ffc:	b	405e20 <ferror@plt+0x2f90>
  404000:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  404004:	mov	w9, #0x1                   	// #1
  404008:	mov	w0, #0x102                 	// #258
  40400c:	strb	w9, [x8, #1528]
  404010:	b	4039fc <ferror@plt+0xb6c>
  404014:	ldr	x0, [x21, #2608]
  404018:	b	4044cc <ferror@plt+0x163c>
  40401c:	ldr	x9, [sp, #504]
  404020:	orr	x8, x8, x9
  404024:	cbnz	x8, 40403c <ferror@plt+0x11ac>
  404028:	mov	x8, #0xffffffffffffffff    	// #-1
  40402c:	str	x8, [sp, #496]
  404030:	b	40403c <ferror@plt+0x11ac>
  404034:	mov	w8, #0x1                   	// #1
  404038:	strb	w8, [sp, #549]
  40403c:	add	x0, x0, #0x1
  404040:	ldurb	w8, [x0, #-1]
  404044:	sub	w8, w8, #0x2c
  404048:	cmp	w8, #0x46
  40404c:	b.hi	4040e4 <ferror@plt+0x1254>  // b.pmore
  404050:	adrp	x9, 412000 <_obstack_memory_used@@Base+0x1b0>
  404054:	add	x9, x9, #0xc86
  404058:	adr	x10, 404034 <ferror@plt+0x11a4>
  40405c:	ldrb	w11, [x9, x8]
  404060:	add	x10, x10, x11, lsl #2
  404064:	br	x10
  404068:	mov	w8, #0x1                   	// #1
  40406c:	strb	w8, [sp, #550]
  404070:	b	40403c <ferror@plt+0x11ac>
  404074:	ldr	x8, [sp, #528]
  404078:	cbnz	x8, 40403c <ferror@plt+0x11ac>
  40407c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  404080:	add	x8, x8, #0x720
  404084:	str	x8, [sp, #528]
  404088:	b	40403c <ferror@plt+0x11ac>
  40408c:	mov	w8, #0x1                   	// #1
  404090:	strb	w8, [sp, #547]
  404094:	b	40403c <ferror@plt+0x11ac>
  404098:	mov	w8, #0x1                   	// #1
  40409c:	strb	w8, [sp, #544]
  4040a0:	b	40403c <ferror@plt+0x11ac>
  4040a4:	str	x22, [sp, #528]
  4040a8:	b	40403c <ferror@plt+0x11ac>
  4040ac:	mov	w8, #0x1                   	// #1
  4040b0:	strb	w8, [sp, #552]
  4040b4:	b	40403c <ferror@plt+0x11ac>
  4040b8:	str	x23, [sp, #536]
  4040bc:	b	40403c <ferror@plt+0x11ac>
  4040c0:	mov	w8, #0x1                   	// #1
  4040c4:	strb	w8, [sp, #548]
  4040c8:	b	40403c <ferror@plt+0x11ac>
  4040cc:	mov	w8, #0x1                   	// #1
  4040d0:	strb	w8, [sp, #546]
  4040d4:	b	40403c <ferror@plt+0x11ac>
  4040d8:	mov	w8, #0x1                   	// #1
  4040dc:	strb	w8, [sp, #551]
  4040e0:	b	40403c <ferror@plt+0x11ac>
  4040e4:	adrp	x8, 412000 <_obstack_memory_used@@Base+0x1b0>
  4040e8:	ldr	q0, [x8, #2624]
  4040ec:	add	x8, sp, #0x1a8
  4040f0:	stur	q0, [x8, #88]
  4040f4:	ldurb	w8, [x0, #-1]
  4040f8:	cbnz	w8, 405e2c <ferror@plt+0x2f9c>
  4040fc:	add	x0, sp, #0x1f0
  404100:	mov	w1, #0x48                  	// #72
  404104:	bl	4109f4 <ferror@plt+0xdb64>
  404108:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  40410c:	add	x8, x8, #0x600
  404110:	ldr	x10, [x8]
  404114:	mov	x9, x8
  404118:	add	x8, x10, #0x40
  40411c:	cbnz	x10, 404110 <ferror@plt+0x1280>
  404120:	str	x0, [x9]
  404124:	str	xzr, [x0, #64]
  404128:	mov	w0, #0x6b                  	// #107
  40412c:	mov	w8, w20
  404130:	ldr	x14, [x29, #8]
  404134:	mov	x13, x24
  404138:	mov	w20, w8
  40413c:	b	40390c <ferror@plt+0xa7c>
  404140:	ldr	x1, [sp, #96]
  404144:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x21b0>
  404148:	add	x2, x2, #0x48d
  40414c:	bl	406184 <ferror@plt+0x32f4>
  404150:	ldr	x8, [sp, #512]
  404154:	sub	x9, x8, #0x1
  404158:	str	x9, [sp, #512]
  40415c:	cbz	x8, 405e40 <ferror@plt+0x2fb0>
  404160:	ldrb	w8, [x0]
  404164:	cmp	w8, #0x2e
  404168:	b.ne	404190 <ferror@plt+0x1300>  // b.any
  40416c:	ldr	x1, [sp, #64]
  404170:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x21b0>
  404174:	add	x0, x0, #0x1
  404178:	add	x2, x2, #0x3d3
  40417c:	bl	406184 <ferror@plt+0x32f4>
  404180:	b	404190 <ferror@plt+0x1300>
  404184:	mov	w8, #0x1                   	// #1
  404188:	strb	w8, [sp, #549]
  40418c:	add	x0, x0, #0x1
  404190:	ldrb	w8, [x0]
  404194:	sub	w9, w8, #0x4d
  404198:	cmp	w9, #0x25
  40419c:	b.hi	4040f8 <ferror@plt+0x1268>  // b.pmore
  4041a0:	adrp	x10, 412000 <_obstack_memory_used@@Base+0x1b0>
  4041a4:	add	x10, x10, #0xccd
  4041a8:	adr	x11, 4040f8 <ferror@plt+0x1268>
  4041ac:	ldrb	w12, [x10, x9]
  4041b0:	add	x11, x11, x12, lsl #2
  4041b4:	br	x11
  4041b8:	mov	w8, #0x1                   	// #1
  4041bc:	strb	w8, [sp, #550]
  4041c0:	add	x0, x0, #0x1
  4041c4:	b	404190 <ferror@plt+0x1300>
  4041c8:	ldr	x8, [sp, #528]
  4041cc:	cbnz	x8, 404218 <ferror@plt+0x1388>
  4041d0:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  4041d4:	add	x8, x8, #0x720
  4041d8:	str	x8, [sp, #528]
  4041dc:	add	x0, x0, #0x1
  4041e0:	b	404190 <ferror@plt+0x1300>
  4041e4:	str	x23, [sp, #536]
  4041e8:	add	x0, x0, #0x1
  4041ec:	b	404190 <ferror@plt+0x1300>
  4041f0:	mov	w8, #0x1                   	// #1
  4041f4:	strb	w8, [sp, #545]
  4041f8:	add	x0, x0, #0x1
  4041fc:	b	404190 <ferror@plt+0x1300>
  404200:	mov	w8, #0x1                   	// #1
  404204:	strb	w8, [sp, #548]
  404208:	add	x0, x0, #0x1
  40420c:	b	404190 <ferror@plt+0x1300>
  404210:	mov	w8, #0x1                   	// #1
  404214:	strb	w8, [sp, #552]
  404218:	add	x0, x0, #0x1
  40421c:	b	404190 <ferror@plt+0x1300>
  404220:	str	x22, [sp, #528]
  404224:	add	x0, x0, #0x1
  404228:	b	404190 <ferror@plt+0x1300>
  40422c:	mov	w8, #0x1                   	// #1
  404230:	strb	w8, [sp, #547]
  404234:	add	x0, x0, #0x1
  404238:	b	404190 <ferror@plt+0x1300>
  40423c:	mov	w8, #0x1                   	// #1
  404240:	strb	w8, [sp, #551]
  404244:	add	x0, x0, #0x1
  404248:	b	404190 <ferror@plt+0x1300>
  40424c:	mov	w8, #0x1                   	// #1
  404250:	strb	w8, [sp, #546]
  404254:	add	x0, x0, #0x1
  404258:	b	404190 <ferror@plt+0x1300>
  40425c:	ldr	x8, [sp, #136]
  404260:	ldr	x14, [x29, #8]
  404264:	mov	x13, x24
  404268:	str	x8, [sp, #8]
  40426c:	cbz	x8, 405e54 <ferror@plt+0x2fc4>
  404270:	mov	w0, #0x107                 	// #263
  404274:	b	404320 <ferror@plt+0x1490>
  404278:	ldur	x8, [x29, #-168]
  40427c:	ldurb	w9, [x8, #-1]
  404280:	sub	w9, w9, #0x30
  404284:	cmp	w9, #0x9
  404288:	b.hi	405c6c <ferror@plt+0x2ddc>  // b.pmore
  40428c:	ldrb	w9, [x8, #1]
  404290:	ldr	x14, [x29, #8]
  404294:	cbnz	w9, 405c6c <ferror@plt+0x2ddc>
  404298:	ldrb	w8, [x8]
  40429c:	mov	x13, x24
  4042a0:	cmp	w8, #0x62
  4042a4:	b.eq	4042ec <ferror@plt+0x145c>  // b.none
  4042a8:	cmp	w8, #0x25
  4042ac:	b.ne	405c6c <ferror@plt+0x2ddc>  // b.any
  4042b0:	bl	40d2ec <ferror@plt+0xa45c>
  4042b4:	ldr	d1, [sp, #136]
  4042b8:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  4042bc:	fmov	d2, x8
  4042c0:	mov	x8, #0x43f0000000000000    	// #4895412794951729152
  4042c4:	ucvtf	d1, d1
  4042c8:	fmul	d0, d0, d1
  4042cc:	fdiv	d0, d0, d2
  4042d0:	fmov	d1, x8
  4042d4:	fcmp	d0, d1
  4042d8:	b.pl	405e78 <ferror@plt+0x2fe8>  // b.nfrst
  4042dc:	ldr	x14, [x29, #8]
  4042e0:	fcvtzu	x8, d0
  4042e4:	mov	x13, x24
  4042e8:	str	x8, [sp, #136]
  4042ec:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x141b0>
  4042f0:	ldr	x8, [sp, #136]
  4042f4:	ldr	x10, [x9, #1560]
  4042f8:	cmp	x8, x10
  4042fc:	b.cc	40431c <ferror@plt+0x148c>  // b.lo, b.ul, b.last
  404300:	adrp	x10, 426000 <_obstack_memory_used@@Base+0x141b0>
  404304:	ldr	w10, [x10, #968]
  404308:	add	x10, x10, x10, lsl #4
  40430c:	lsl	x10, x10, #1
  404310:	cmp	x8, x10
  404314:	csel	x8, x8, x10, hi  // hi = pmore
  404318:	str	x8, [x9, #1560]
  40431c:	mov	w0, #0x53                  	// #83
  404320:	adrp	x22, 426000 <_obstack_memory_used@@Base+0x141b0>
  404324:	mov	w8, w20
  404328:	add	x22, x22, #0x820
  40432c:	b	40390c <ferror@plt+0xa7c>
  404330:	mov	w0, #0x63                  	// #99
  404334:	ands	w8, w19, #0xff
  404338:	b.ne	403b4c <ferror@plt+0xcbc>  // b.any
  40433c:	b	403b54 <ferror@plt+0xcc4>
  404340:	mov	w20, wzr
  404344:	ldr	w9, [sp, #88]
  404348:	ldr	w10, [sp, #128]
  40434c:	and	w9, w20, w9
  404350:	orr	w9, w10, w9
  404354:	tbz	w9, #0, 404418 <ferror@plt+0x1588>
  404358:	adrp	x4, 415000 <_obstack_memory_used@@Base+0x31b0>
  40435c:	movi	v0.2d, #0x0
  404360:	mov	x9, #0xffffffffffffffff    	// #-1
  404364:	add	x10, sp, #0x1a8
  404368:	add	x0, x8, #0x1
  40436c:	add	x4, x4, #0x3a8
  404370:	add	x1, sp, #0x88
  404374:	sub	x3, x29, #0xa8
  404378:	mov	w2, #0xa                   	// #10
  40437c:	str	xzr, [sp, #560]
  404380:	stur	q0, [x10, #88]
  404384:	stur	q0, [x10, #120]
  404388:	stur	q0, [x10, #104]
  40438c:	stur	q0, [x10, #72]
  404390:	str	x9, [sp, #512]
  404394:	bl	4111b4 <ferror@plt+0xe324>
  404398:	cmp	w0, #0x4
  40439c:	b.hi	404438 <ferror@plt+0x15a8>  // b.pmore
  4043a0:	adrp	x9, 412000 <_obstack_memory_used@@Base+0x1b0>
  4043a4:	mov	w8, w0
  4043a8:	add	x9, x9, #0xd19
  4043ac:	adr	x10, 4043bc <ferror@plt+0x152c>
  4043b0:	ldrb	w11, [x9, x8]
  4043b4:	add	x10, x10, x11, lsl #2
  4043b8:	br	x10
  4043bc:	ldur	x8, [x29, #-168]
  4043c0:	b	404434 <ferror@plt+0x15a4>
  4043c4:	mov	w0, #0x105                 	// #261
  4043c8:	str	x19, [sp, #32]
  4043cc:	b	4043d8 <ferror@plt+0x1548>
  4043d0:	mov	w0, #0x6f                  	// #111
  4043d4:	str	x19, [sp, #48]
  4043d8:	mov	w8, w20
  4043dc:	mov	w19, w22
  4043e0:	mov	x22, x21
  4043e4:	mov	x21, x26
  4043e8:	adrp	x26, 412000 <_obstack_memory_used@@Base+0x1b0>
  4043ec:	add	x26, x26, #0xed0
  4043f0:	mov	w20, w8
  4043f4:	b	40390c <ferror@plt+0xa7c>
  4043f8:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  4043fc:	ldr	x19, [x8, #1320]
  404400:	str	x19, [x21, #1520]
  404404:	ldr	x21, [sp, #112]
  404408:	ldr	w19, [sp, #44]
  40440c:	mov	w0, #0x101                 	// #257
  404410:	mov	w8, w20
  404414:	b	40390c <ferror@plt+0xa7c>
  404418:	str	wzr, [sp, #128]
  40441c:	b	40452c <ferror@plt+0x169c>
  404420:	cbz	x8, 4044ac <ferror@plt+0x161c>
  404424:	lsr	x10, x8, #60
  404428:	cbz	x10, 4044b0 <ferror@plt+0x1620>
  40442c:	b	405294 <ferror@plt+0x2404>
  404430:	mov	x8, #0xffffffffffffffff    	// #-1
  404434:	str	x8, [sp, #496]
  404438:	ldr	x8, [sp, #136]
  40443c:	cbz	x8, 4044fc <ferror@plt+0x166c>
  404440:	ldrb	w9, [x8]
  404444:	ldr	x14, [x29, #8]
  404448:	mov	x13, x24
  40444c:	cmp	w9, #0x2e
  404450:	b.ne	404504 <ferror@plt+0x1674>  // b.any
  404454:	adrp	x4, 415000 <_obstack_memory_used@@Base+0x31b0>
  404458:	add	x0, x8, #0x1
  40445c:	add	x4, x4, #0x3a8
  404460:	add	x1, sp, #0x88
  404464:	sub	x3, x29, #0xa8
  404468:	mov	w2, #0xa                   	// #10
  40446c:	bl	4111b4 <ferror@plt+0xe324>
  404470:	cmp	w0, #0x4
  404474:	b.hi	4044a4 <ferror@plt+0x1614>  // b.pmore
  404478:	adrp	x10, 412000 <_obstack_memory_used@@Base+0x1b0>
  40447c:	mov	w9, w0
  404480:	add	x10, x10, #0xd1e
  404484:	adr	x11, 40449c <ferror@plt+0x160c>
  404488:	ldrb	w12, [x10, x9]
  40448c:	add	x11, x11, x12, lsl #2
  404490:	mov	x8, xzr
  404494:	mov	x9, #0xffffffffffffffff    	// #-1
  404498:	br	x11
  40449c:	ldur	x9, [x29, #-168]
  4044a0:	str	x9, [sp, #504]
  4044a4:	ldr	x8, [sp, #136]
  4044a8:	b	4044fc <ferror@plt+0x166c>
  4044ac:	mov	w8, #0x10                  	// #16
  4044b0:	lsl	x1, x8, #3
  4044b4:	str	x8, [x9, #2600]
  4044b8:	bl	41080c <ferror@plt+0xd97c>
  4044bc:	ldr	x8, [x19, #1552]
  4044c0:	ldr	x14, [x29, #8]
  4044c4:	mov	x13, x24
  4044c8:	str	x0, [x21, #2608]
  4044cc:	add	x9, x8, #0x1
  4044d0:	str	x9, [x19, #1552]
  4044d4:	ldr	w19, [sp, #44]
  4044d8:	ldr	x21, [sp, #112]
  4044dc:	str	x20, [x0, x8, lsl #3]
  4044e0:	mov	w8, w22
  4044e4:	adrp	x22, 426000 <_obstack_memory_used@@Base+0x141b0>
  4044e8:	mov	w0, #0x54                  	// #84
  4044ec:	add	x22, x22, #0x820
  4044f0:	mov	w20, w8
  4044f4:	b	40390c <ferror@plt+0xa7c>
  4044f8:	mov	x8, xzr
  4044fc:	ldr	x14, [x29, #8]
  404500:	mov	x13, x24
  404504:	ldp	x9, x10, [sp, #496]
  404508:	orr	x9, x9, x10
  40450c:	cbz	x9, 404518 <ferror@plt+0x1688>
  404510:	cbnz	x8, 404558 <ferror@plt+0x16c8>
  404514:	b	404524 <ferror@plt+0x1694>
  404518:	mov	x9, #0xffffffffffffffff    	// #-1
  40451c:	str	x9, [sp, #496]
  404520:	cbnz	x8, 404558 <ferror@plt+0x16c8>
  404524:	mov	w8, #0x1                   	// #1
  404528:	str	w8, [sp, #128]
  40452c:	ldr	w20, [sp, #28]
  404530:	ldr	x8, [x19, #1320]
  404534:	ldr	w19, [sp, #44]
  404538:	mov	w0, #0x1                   	// #1
  40453c:	str	x8, [x27, x28, lsl #3]
  404540:	add	x28, x28, #0x1
  404544:	mov	w8, w20
  404548:	b	40390c <ferror@plt+0xa7c>
  40454c:	mov	w9, #0x1                   	// #1
  404550:	strb	w9, [sp, #549]
  404554:	add	x8, x8, #0x1
  404558:	ldrb	w9, [x8]
  40455c:	cmp	w9, #0x72
  404560:	b.hi	404524 <ferror@plt+0x1694>  // b.pmore
  404564:	adrp	x10, 412000 <_obstack_memory_used@@Base+0x1b0>
  404568:	add	x10, x10, #0xd23
  40456c:	adr	x11, 404524 <ferror@plt+0x1694>
  404570:	ldrb	w12, [x10, x9]
  404574:	add	x11, x11, x12, lsl #2
  404578:	br	x11
  40457c:	mov	w9, #0x1                   	// #1
  404580:	strb	w9, [sp, #550]
  404584:	add	x8, x8, #0x1
  404588:	b	404558 <ferror@plt+0x16c8>
  40458c:	ldr	x9, [sp, #528]
  404590:	cbnz	x9, 4045dc <ferror@plt+0x174c>
  404594:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x141b0>
  404598:	add	x9, x9, #0x720
  40459c:	str	x9, [sp, #528]
  4045a0:	add	x8, x8, #0x1
  4045a4:	b	404558 <ferror@plt+0x16c8>
  4045a8:	mov	w9, #0x1                   	// #1
  4045ac:	strb	w9, [sp, #547]
  4045b0:	add	x8, x8, #0x1
  4045b4:	b	404558 <ferror@plt+0x16c8>
  4045b8:	mov	w9, #0x1                   	// #1
  4045bc:	strb	w9, [sp, #544]
  4045c0:	add	x8, x8, #0x1
  4045c4:	b	404558 <ferror@plt+0x16c8>
  4045c8:	str	x22, [sp, #528]
  4045cc:	add	x8, x8, #0x1
  4045d0:	b	404558 <ferror@plt+0x16c8>
  4045d4:	mov	w9, #0x1                   	// #1
  4045d8:	strb	w9, [sp, #552]
  4045dc:	add	x8, x8, #0x1
  4045e0:	b	404558 <ferror@plt+0x16c8>
  4045e4:	str	x23, [sp, #536]
  4045e8:	add	x8, x8, #0x1
  4045ec:	b	404558 <ferror@plt+0x16c8>
  4045f0:	mov	w9, #0x1                   	// #1
  4045f4:	strb	w9, [sp, #548]
  4045f8:	add	x8, x8, #0x1
  4045fc:	b	404558 <ferror@plt+0x16c8>
  404600:	mov	w9, #0x1                   	// #1
  404604:	strb	w9, [sp, #546]
  404608:	add	x8, x8, #0x1
  40460c:	b	404558 <ferror@plt+0x16c8>
  404610:	mov	w9, #0x1                   	// #1
  404614:	strb	w9, [sp, #551]
  404618:	add	x8, x8, #0x1
  40461c:	b	404558 <ferror@plt+0x16c8>
  404620:	cbz	w20, 40475c <ferror@plt+0x18cc>
  404624:	ldrsw	x8, [x13, #1328]
  404628:	ldr	x1, [sp, #96]
  40462c:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x21b0>
  404630:	add	x2, x2, #0x398
  404634:	add	w9, w8, #0x1
  404638:	str	w9, [x13, #1328]
  40463c:	ldr	x19, [x14, x8, lsl #3]
  404640:	add	x0, x19, #0x1
  404644:	bl	406184 <ferror@plt+0x32f4>
  404648:	cbz	x0, 405e94 <ferror@plt+0x3004>
  40464c:	ldrb	w8, [x0]
  404650:	cmp	w8, #0x2e
  404654:	b.ne	40466c <ferror@plt+0x17dc>  // b.any
  404658:	ldr	x1, [sp, #64]
  40465c:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x21b0>
  404660:	add	x0, x0, #0x1
  404664:	add	x2, x2, #0x3d3
  404668:	bl	406184 <ferror@plt+0x32f4>
  40466c:	ldr	x8, [sp, #520]
  404670:	cbnz	x8, 404694 <ferror@plt+0x1804>
  404674:	ldr	x8, [sp, #512]
  404678:	cbz	x8, 404694 <ferror@plt+0x1804>
  40467c:	sub	x8, x8, #0x1
  404680:	str	x8, [sp, #512]
  404684:	b	404694 <ferror@plt+0x1804>
  404688:	mov	w8, #0x1                   	// #1
  40468c:	strb	w8, [sp, #551]
  404690:	add	x0, x0, #0x1
  404694:	ldrb	w8, [x0]
  404698:	cmp	w8, #0x72
  40469c:	b.hi	405eb4 <ferror@plt+0x3024>  // b.pmore
  4046a0:	adrp	x9, 412000 <_obstack_memory_used@@Base+0x1b0>
  4046a4:	add	x9, x9, #0xd96
  4046a8:	adr	x10, 404688 <ferror@plt+0x17f8>
  4046ac:	ldrh	w11, [x9, x8, lsl #1]
  4046b0:	add	x10, x10, x11, lsl #2
  4046b4:	br	x10
  4046b8:	mov	w8, #0x1                   	// #1
  4046bc:	strb	w8, [sp, #550]
  4046c0:	add	x0, x0, #0x1
  4046c4:	b	404694 <ferror@plt+0x1804>
  4046c8:	ldr	x8, [sp, #528]
  4046cc:	cbnz	x8, 404754 <ferror@plt+0x18c4>
  4046d0:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  4046d4:	add	x8, x8, #0x720
  4046d8:	str	x8, [sp, #528]
  4046dc:	add	x0, x0, #0x1
  4046e0:	b	404694 <ferror@plt+0x1804>
  4046e4:	mov	w8, #0x1                   	// #1
  4046e8:	strb	w8, [sp, #548]
  4046ec:	add	x0, x0, #0x1
  4046f0:	b	404694 <ferror@plt+0x1804>
  4046f4:	mov	w8, #0x1                   	// #1
  4046f8:	strb	w8, [sp, #547]
  4046fc:	add	x0, x0, #0x1
  404700:	b	404694 <ferror@plt+0x1804>
  404704:	mov	w8, #0x1                   	// #1
  404708:	strb	w8, [sp, #545]
  40470c:	add	x0, x0, #0x1
  404710:	b	404694 <ferror@plt+0x1804>
  404714:	str	x22, [sp, #528]
  404718:	add	x0, x0, #0x1
  40471c:	b	404694 <ferror@plt+0x1804>
  404720:	str	x23, [sp, #536]
  404724:	add	x0, x0, #0x1
  404728:	b	404694 <ferror@plt+0x1804>
  40472c:	mov	w8, #0x1                   	// #1
  404730:	strb	w8, [sp, #549]
  404734:	add	x0, x0, #0x1
  404738:	b	404694 <ferror@plt+0x1804>
  40473c:	mov	w8, #0x1                   	// #1
  404740:	strb	w8, [sp, #546]
  404744:	add	x0, x0, #0x1
  404748:	b	404694 <ferror@plt+0x1804>
  40474c:	mov	w8, #0x1                   	// #1
  404750:	strb	w8, [sp, #552]
  404754:	add	x0, x0, #0x1
  404758:	b	404694 <ferror@plt+0x1804>
  40475c:	mov	w8, #0x1                   	// #1
  404760:	add	x0, sp, #0x1f0
  404764:	mov	w1, #0x48                  	// #72
  404768:	strb	w8, [sp, #553]
  40476c:	bl	4109f4 <ferror@plt+0xdb64>
  404770:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  404774:	add	x8, x8, #0x600
  404778:	ldr	x10, [x8]
  40477c:	mov	x9, x8
  404780:	add	x8, x10, #0x40
  404784:	cbnz	x10, 404778 <ferror@plt+0x18e8>
  404788:	mov	w8, #0x1                   	// #1
  40478c:	str	w8, [sp, #128]
  404790:	ldr	w8, [sp, #28]
  404794:	ldr	w19, [sp, #44]
  404798:	str	x0, [x9]
  40479c:	str	xzr, [x0, #64]
  4047a0:	mov	w0, #0x1                   	// #1
  4047a4:	b	404130 <ferror@plt+0x12a0>
  4047a8:	ldr	x21, [sp, #104]
  4047ac:	cbz	x21, 404888 <ferror@plt+0x19f8>
  4047b0:	cbnz	x28, 405ee0 <ferror@plt+0x3050>
  4047b4:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  4047b8:	add	x1, x1, #0x8f8
  4047bc:	mov	x0, x21
  4047c0:	mov	w24, w19
  4047c4:	bl	4068ec <ferror@plt+0x3a5c>
  4047c8:	cbz	x0, 405f54 <ferror@plt+0x30c4>
  4047cc:	mov	x19, x0
  4047d0:	add	x0, sp, #0x88
  4047d4:	bl	40f810 <ferror@plt+0xc980>
  4047d8:	add	x1, sp, #0x88
  4047dc:	mov	x0, x19
  4047e0:	bl	40f8cc <ferror@plt+0xca3c>
  4047e4:	tbz	w0, #0, 405f6c <ferror@plt+0x30dc>
  4047e8:	mov	x0, x19
  4047ec:	mov	x1, x21
  4047f0:	bl	4062f8 <ferror@plt+0x3468>
  4047f4:	ldr	x8, [sp, #136]
  4047f8:	cbz	x8, 405f78 <ferror@plt+0x30e8>
  4047fc:	mov	x0, x27
  404800:	bl	402c00 <free@plt>
  404804:	ldp	x28, x27, [sp, #136]
  404808:	adrp	x22, 414000 <_obstack_memory_used@@Base+0x21b0>
  40480c:	mov	x19, xzr
  404810:	add	x22, x22, #0xbd0
  404814:	cmp	x28, x19
  404818:	b.eq	40487c <ferror@plt+0x19ec>  // b.none
  40481c:	ldr	x23, [x27, x19, lsl #3]
  404820:	mov	x1, x22
  404824:	mov	x0, x23
  404828:	bl	402bb0 <strcmp@plt>
  40482c:	cbz	w0, 405bbc <ferror@plt+0x2d2c>
  404830:	ldrb	w8, [x23]
  404834:	add	x19, x19, #0x1
  404838:	cbnz	w8, 404814 <ferror@plt+0x1984>
  40483c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  404840:	add	x1, x1, #0x5e8
  404844:	mov	w2, #0x5                   	// #5
  404848:	mov	x0, xzr
  40484c:	bl	402d70 <dcgettext@plt>
  404850:	mov	x20, x0
  404854:	mov	w1, #0x3                   	// #3
  404858:	mov	w0, wzr
  40485c:	mov	x2, x21
  404860:	bl	40ebe8 <ferror@plt+0xbd58>
  404864:	mov	x3, x0
  404868:	mov	w0, #0x2                   	// #2
  40486c:	mov	w1, wzr
  404870:	mov	x2, x20
  404874:	mov	x4, x19
  404878:	bl	4027f0 <error@plt>
  40487c:	adrp	x22, 426000 <_obstack_memory_used@@Base+0x141b0>
  404880:	add	x22, x22, #0x820
  404884:	mov	w19, w24
  404888:	adrp	x24, 426000 <_obstack_memory_used@@Base+0x141b0>
  40488c:	ldr	x0, [x24, #1536]
  404890:	mov	w25, wzr
  404894:	str	w19, [sp, #44]
  404898:	cbz	x0, 40497c <ferror@plt+0x1aec>
  40489c:	mov	x8, x0
  4048a0:	b	4048c0 <ferror@plt+0x1a30>
  4048a4:	ldrb	w9, [x8, #51]
  4048a8:	ldr	x8, [x8, #64]
  4048ac:	and	w10, w25, #0x1
  4048b0:	orr	w9, w9, w10
  4048b4:	cmp	w9, #0x0
  4048b8:	cset	w25, ne  // ne = any
  4048bc:	cbz	x8, 404970 <ferror@plt+0x1ae0>
  4048c0:	ldr	x9, [x8, #32]
  4048c4:	cbnz	x9, 4048a4 <ferror@plt+0x1a14>
  4048c8:	ldr	x9, [x8, #40]
  4048cc:	cbnz	x9, 4048a4 <ferror@plt+0x1a14>
  4048d0:	ldrb	w9, [x8, #48]
  4048d4:	cbnz	w9, 4048a4 <ferror@plt+0x1a14>
  4048d8:	ldrb	w9, [x8, #49]
  4048dc:	cbnz	w9, 4048a4 <ferror@plt+0x1a14>
  4048e0:	ldrb	w9, [x8, #50]
  4048e4:	cbnz	w9, 4048a4 <ferror@plt+0x1a14>
  4048e8:	ldrb	w9, [x8, #52]
  4048ec:	cbnz	w9, 4048a4 <ferror@plt+0x1a14>
  4048f0:	ldrb	w9, [x8, #53]
  4048f4:	cbnz	w9, 4048a4 <ferror@plt+0x1a14>
  4048f8:	ldrb	w9, [x8, #54]
  4048fc:	cbnz	w9, 4048a4 <ferror@plt+0x1a14>
  404900:	ldrb	w9, [x8, #56]
  404904:	cbnz	w9, 4048a4 <ferror@plt+0x1a14>
  404908:	ldrb	w9, [x8, #51]
  40490c:	cbnz	w9, 4048a4 <ferror@plt+0x1a14>
  404910:	ldrb	w9, [x8, #55]
  404914:	cbnz	w9, 4048a4 <ferror@plt+0x1a14>
  404918:	add	x9, sp, #0xc9
  40491c:	ldur	q0, [x9, #255]
  404920:	str	q0, [x8, #32]
  404924:	ldrb	w9, [sp, #472]
  404928:	strb	w9, [x8, #48]
  40492c:	ldrb	w9, [sp, #473]
  404930:	strb	w9, [x8, #49]
  404934:	ldrb	w9, [sp, #478]
  404938:	strb	w9, [x8, #54]
  40493c:	ldrb	w9, [sp, #474]
  404940:	strb	w9, [x8, #50]
  404944:	ldrb	w9, [sp, #476]
  404948:	strb	w9, [x8, #52]
  40494c:	ldrb	w9, [sp, #477]
  404950:	strb	w9, [x8, #53]
  404954:	ldrb	w9, [sp, #480]
  404958:	strb	w9, [x8, #56]
  40495c:	ldrb	w9, [sp, #475]
  404960:	strb	w9, [x8, #51]
  404964:	ldrb	w9, [sp, #479]
  404968:	strb	w9, [x8, #55]
  40496c:	b	4048a4 <ferror@plt+0x1a14>
  404970:	cbz	x0, 40497c <ferror@plt+0x1aec>
  404974:	str	wzr, [sp, #96]
  404978:	b	404a20 <ferror@plt+0x1b90>
  40497c:	ldrb	w8, [sp, #472]
  404980:	ldrb	w9, [sp, #473]
  404984:	ldrb	w10, [sp, #474]
  404988:	ldrb	w11, [sp, #476]
  40498c:	ldrb	w12, [sp, #477]
  404990:	ldrb	w13, [sp, #478]
  404994:	orr	w8, w8, w9
  404998:	ldrb	w14, [sp, #480]
  40499c:	orr	w8, w8, w10
  4049a0:	orr	w8, w8, w11
  4049a4:	ldrb	w9, [sp, #475]
  4049a8:	orr	w8, w8, w12
  4049ac:	orr	w8, w8, w13
  4049b0:	orr	w8, w8, w14
  4049b4:	orr	w8, w8, w9
  4049b8:	cbnz	w8, 4049d4 <ferror@plt+0x1b44>
  4049bc:	ldr	x8, [sp, #456]
  4049c0:	cbnz	x8, 4049d4 <ferror@plt+0x1b44>
  4049c4:	ldr	x8, [sp, #464]
  4049c8:	cbnz	x8, 4049d4 <ferror@plt+0x1b44>
  4049cc:	str	wzr, [sp, #96]
  4049d0:	b	404a6c <ferror@plt+0x1bdc>
  4049d4:	add	x0, sp, #0x1a8
  4049d8:	mov	w1, #0x48                  	// #72
  4049dc:	bl	4109f4 <ferror@plt+0xdb64>
  4049e0:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  4049e4:	add	x8, x8, #0x600
  4049e8:	ldr	x10, [x8]
  4049ec:	mov	x9, x8
  4049f0:	add	x8, x10, #0x40
  4049f4:	cbnz	x10, 4049e8 <ferror@plt+0x1b58>
  4049f8:	str	x0, [x9]
  4049fc:	str	xzr, [x0, #64]
  404a00:	ldrb	w8, [sp, #475]
  404a04:	ldr	x0, [x24, #1536]
  404a08:	orr	w8, w8, w25
  404a0c:	cmp	w8, #0x0
  404a10:	cset	w25, ne  // ne = any
  404a14:	mov	w8, #0x1                   	// #1
  404a18:	str	w8, [sp, #96]
  404a1c:	cbz	x0, 404a6c <ferror@plt+0x1bdc>
  404a20:	ldrb	w8, [x0, #50]
  404a24:	ldrb	w9, [x0, #52]
  404a28:	ldrb	w10, [x0, #53]
  404a2c:	ldr	x13, [x0, #32]
  404a30:	ldrb	w11, [x0, #56]
  404a34:	ldrb	w12, [x0, #51]
  404a38:	add	w8, w9, w8
  404a3c:	ldrb	w9, [x0, #54]
  404a40:	cmp	x13, #0x0
  404a44:	add	w8, w8, w10
  404a48:	orr	w11, w12, w11
  404a4c:	add	w8, w8, w9
  404a50:	cset	w9, ne  // ne = any
  404a54:	orr	w9, w9, w11
  404a58:	add	w8, w9, w8
  404a5c:	cmp	w8, #0x2
  404a60:	b.cs	405bf4 <ferror@plt+0x2d64>  // b.hs, b.nlast
  404a64:	ldr	x0, [x0, #64]
  404a68:	cbnz	x0, 404a20 <ferror@plt+0x1b90>
  404a6c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  404a70:	ldrb	w8, [x8, #1528]
  404a74:	str	w20, [sp, #28]
  404a78:	cmp	w8, #0x1
  404a7c:	b.ne	405184 <ferror@plt+0x22f4>  // b.any
  404a80:	ldr	x8, [sp, #48]
  404a84:	ldr	w9, [sp, #44]
  404a88:	cbnz	x8, 405ec4 <ferror@plt+0x3034>
  404a8c:	tst	w9, #0xff
  404a90:	b.ne	405ec4 <ferror@plt+0x3034>  // b.any
  404a94:	ldr	x8, [sp, #80]
  404a98:	cbz	x8, 404ab0 <ferror@plt+0x1c20>
  404a9c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x31b0>
  404aa0:	add	x1, x1, #0x3a8
  404aa4:	mov	w0, #0x3                   	// #3
  404aa8:	bl	402e80 <setlocale@plt>
  404aac:	cbnz	x0, 404adc <ferror@plt+0x1c4c>
  404ab0:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  404ab4:	add	x1, x1, #0x61f
  404ab8:	mov	w2, #0x5                   	// #5
  404abc:	mov	x0, xzr
  404ac0:	bl	402d70 <dcgettext@plt>
  404ac4:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x21b0>
  404ac8:	mov	x3, x0
  404acc:	add	x2, x2, #0xf52
  404ad0:	mov	w0, wzr
  404ad4:	mov	w1, wzr
  404ad8:	bl	4027f0 <error@plt>
  404adc:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  404ae0:	ldrb	w8, [x8, #1368]
  404ae4:	str	x27, [sp, #16]
  404ae8:	str	w25, [sp, #4]
  404aec:	cbz	w8, 404b2c <ferror@plt+0x1c9c>
  404af0:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  404af4:	add	x1, x1, #0x634
  404af8:	mov	w2, #0x5                   	// #5
  404afc:	mov	x0, xzr
  404b00:	bl	402d70 <dcgettext@plt>
  404b04:	mov	x19, x0
  404b08:	mov	w0, #0x3                   	// #3
  404b0c:	mov	x1, xzr
  404b10:	bl	402e80 <setlocale@plt>
  404b14:	bl	40ee28 <ferror@plt+0xbf98>
  404b18:	mov	x3, x0
  404b1c:	mov	w0, wzr
  404b20:	mov	w1, wzr
  404b24:	mov	x2, x19
  404b28:	b	404b54 <ferror@plt+0x1cc4>
  404b2c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  404b30:	add	x1, x1, #0x663
  404b34:	mov	w2, #0x5                   	// #5
  404b38:	mov	x0, xzr
  404b3c:	bl	402d70 <dcgettext@plt>
  404b40:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x21b0>
  404b44:	mov	x3, x0
  404b48:	add	x2, x2, #0xf52
  404b4c:	mov	w0, wzr
  404b50:	mov	w1, wzr
  404b54:	bl	4027f0 <error@plt>
  404b58:	ldp	x8, x14, [sp, #456]
  404b5c:	ldrb	w21, [sp, #473]
  404b60:	ldrb	w26, [sp, #477]
  404b64:	ldrb	w23, [sp, #478]
  404b68:	str	x8, [x29, #8]
  404b6c:	ldrb	w8, [sp, #472]
  404b70:	ldrb	w24, [sp, #479]
  404b74:	ldrb	w20, [sp, #480]
  404b78:	str	w8, [sp, #112]
  404b7c:	ldrb	w8, [sp, #474]
  404b80:	str	w8, [sp, #128]
  404b84:	ldrb	w8, [sp, #475]
  404b88:	str	w8, [sp, #120]
  404b8c:	ldrb	w8, [sp, #476]
  404b90:	str	w8, [sp, #104]
  404b94:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  404b98:	ldr	x27, [x8, #1536]
  404b9c:	cbz	x27, 404f70 <ferror@plt+0x20e0>
  404ba0:	sub	x8, x29, #0xe0
  404ba4:	sub	x9, x29, #0xa8
  404ba8:	orr	x8, x8, #0x1
  404bac:	mov	w19, #0x1                   	// #1
  404bb0:	str	x8, [sp, #64]
  404bb4:	orr	x8, x9, #0x3
  404bb8:	str	x8, [sp, #56]
  404bbc:	str	x28, [sp, #88]
  404bc0:	b	404c58 <ferror@plt+0x1dc8>
  404bc4:	ldrb	w8, [x27, #48]
  404bc8:	ldrb	w9, [x27, #49]
  404bcc:	add	x19, x19, #0x1
  404bd0:	eor	w8, w8, #0x1
  404bd4:	eor	w9, w9, #0x1
  404bd8:	and	w10, w8, w10
  404bdc:	ldrb	w8, [x27, #54]
  404be0:	and	w21, w9, w21
  404be4:	ldrb	w9, [x27, #50]
  404be8:	str	w10, [sp, #112]
  404bec:	ldr	w10, [sp, #128]
  404bf0:	eor	w8, w8, #0x1
  404bf4:	eor	w9, w9, #0x1
  404bf8:	and	w23, w8, w23
  404bfc:	ldrb	w8, [x27, #52]
  404c00:	and	w10, w9, w10
  404c04:	str	w10, [sp, #128]
  404c08:	ldr	w10, [sp, #104]
  404c0c:	eor	w8, w8, #0x1
  404c10:	ldrb	w9, [x27, #53]
  404c14:	and	w10, w8, w10
  404c18:	ldrb	w8, [x27, #51]
  404c1c:	str	w10, [sp, #104]
  404c20:	ldr	w10, [sp, #120]
  404c24:	eor	w9, w9, #0x1
  404c28:	eor	w8, w8, #0x1
  404c2c:	and	w26, w9, w26
  404c30:	ldrb	w9, [x27, #56]
  404c34:	and	w10, w8, w10
  404c38:	ldrb	w8, [x27, #55]
  404c3c:	ldr	x27, [x27, #64]
  404c40:	eor	w9, w9, #0x1
  404c44:	and	w20, w9, w20
  404c48:	eor	w8, w8, #0x1
  404c4c:	and	w24, w8, w24
  404c50:	str	w10, [sp, #120]
  404c54:	cbz	x27, 404f70 <ferror@plt+0x20e0>
  404c58:	ldrb	w8, [x27, #57]
  404c5c:	cbz	w8, 404d88 <ferror@plt+0x1ef8>
  404c60:	ldr	x8, [x27]
  404c64:	ldr	x28, [x27, #16]
  404c68:	str	w24, [sp, #80]
  404c6c:	sub	x1, x29, #0x28
  404c70:	cmn	x8, #0x1
  404c74:	csel	x24, xzr, x8, eq  // eq = none
  404c78:	mov	w8, #0x2b                  	// #43
  404c7c:	mov	x0, x24
  404c80:	str	x14, [sp, #72]
  404c84:	sturh	w8, [x29, #-224]
  404c88:	bl	40cef0 <ferror@plt+0xa060>
  404c8c:	mov	x1, x0
  404c90:	ldr	x0, [sp, #64]
  404c94:	mov	w2, #0x2d                  	// #45
  404c98:	bl	402c50 <__stpcpy_chk@plt>
  404c9c:	mov	w8, #0x6b2d                	// #27437
  404ca0:	mov	x22, x0
  404ca4:	movk	w8, #0x20, lsl #16
  404ca8:	add	x0, x24, #0x1
  404cac:	sub	x1, x29, #0x28
  404cb0:	stur	w8, [x29, #-168]
  404cb4:	bl	40cef0 <ferror@plt+0xa060>
  404cb8:	mov	x1, x0
  404cbc:	ldr	x0, [sp, #56]
  404cc0:	mov	w2, #0x2c                  	// #44
  404cc4:	bl	402c50 <__stpcpy_chk@plt>
  404cc8:	ldr	x8, [x27, #16]
  404ccc:	cmn	x8, #0x1
  404cd0:	b.eq	404d28 <ferror@plt+0x1e98>  // b.none
  404cd4:	mov	x24, x0
  404cd8:	mov	w8, #0x2d20                	// #11552
  404cdc:	add	x0, x28, #0x1
  404ce0:	sub	x1, x29, #0x28
  404ce4:	strh	w8, [x22]
  404ce8:	strb	wzr, [x22, #2]!
  404cec:	bl	40cef0 <ferror@plt+0xa060>
  404cf0:	mov	x1, x0
  404cf4:	mov	x0, x22
  404cf8:	bl	4028c0 <stpcpy@plt>
  404cfc:	mov	w8, #0x2c                  	// #44
  404d00:	strh	w8, [x24], #1
  404d04:	ldr	x8, [x27, #24]
  404d08:	sub	x1, x29, #0x28
  404d0c:	cmn	x8, #0x1
  404d10:	add	x8, x28, #0x2
  404d14:	csinc	x0, x8, x28, eq  // eq = none
  404d18:	bl	40cef0 <ferror@plt+0xa060>
  404d1c:	mov	x1, x0
  404d20:	mov	x0, x24
  404d24:	bl	4028c0 <stpcpy@plt>
  404d28:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  404d2c:	mov	w2, #0x5                   	// #5
  404d30:	mov	x0, xzr
  404d34:	add	x1, x1, #0xbd2
  404d38:	bl	402d70 <dcgettext@plt>
  404d3c:	mov	x22, x0
  404d40:	sub	x1, x29, #0xe0
  404d44:	mov	w0, wzr
  404d48:	bl	40ee18 <ferror@plt+0xbf88>
  404d4c:	mov	x24, x0
  404d50:	sub	x1, x29, #0xa8
  404d54:	mov	w0, #0x1                   	// #1
  404d58:	bl	40ee18 <ferror@plt+0xbf88>
  404d5c:	mov	x4, x0
  404d60:	mov	w0, wzr
  404d64:	mov	w1, wzr
  404d68:	mov	x2, x22
  404d6c:	mov	x3, x24
  404d70:	bl	4027f0 <error@plt>
  404d74:	ldr	x28, [sp, #88]
  404d78:	ldr	w24, [sp, #80]
  404d7c:	ldr	x14, [sp, #72]
  404d80:	adrp	x22, 426000 <_obstack_memory_used@@Base+0x141b0>
  404d84:	add	x22, x22, #0x820
  404d88:	ldr	x8, [x27]
  404d8c:	cmn	x8, #0x1
  404d90:	b.eq	404de8 <ferror@plt+0x1f58>  // b.none
  404d94:	ldr	x9, [x27, #16]
  404d98:	cmp	x9, x8
  404d9c:	b.cs	404de8 <ferror@plt+0x1f58>  // b.hs, b.nlast
  404da0:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  404da4:	mov	w2, #0x5                   	// #5
  404da8:	mov	x0, xzr
  404dac:	add	x1, x1, #0xbff
  404db0:	mov	x25, x28
  404db4:	mov	x28, x14
  404db8:	bl	402d70 <dcgettext@plt>
  404dbc:	mov	x2, x0
  404dc0:	mov	w0, wzr
  404dc4:	mov	w1, wzr
  404dc8:	mov	x3, x19
  404dcc:	bl	4027f0 <error@plt>
  404dd0:	mov	x14, x28
  404dd4:	mov	x28, x25
  404dd8:	mov	w8, #0x1                   	// #1
  404ddc:	ldrb	w9, [x27, #50]
  404de0:	cbnz	w9, 404e04 <ferror@plt+0x1f74>
  404de4:	b	404df4 <ferror@plt+0x1f64>
  404de8:	mov	w8, wzr
  404dec:	ldrb	w9, [x27, #50]
  404df0:	cbnz	w9, 404e04 <ferror@plt+0x1f74>
  404df4:	ldrb	w9, [x27, #52]
  404df8:	cbnz	w9, 404e04 <ferror@plt+0x1f74>
  404dfc:	ldrb	w9, [x27, #53]
  404e00:	cbz	w9, 404e1c <ferror@plt+0x1f8c>
  404e04:	mov	w9, #0x1                   	// #1
  404e08:	ldr	x10, [x27, #16]
  404e0c:	cbz	x10, 404e30 <ferror@plt+0x1fa0>
  404e10:	mov	w10, wzr
  404e14:	tbz	w8, #0, 404e40 <ferror@plt+0x1fb0>
  404e18:	b	404ed0 <ferror@plt+0x2040>
  404e1c:	ldrb	w9, [x27, #54]
  404e20:	cmp	w9, #0x0
  404e24:	cset	w9, ne  // ne = any
  404e28:	ldr	x10, [x27, #16]
  404e2c:	cbnz	x10, 404e10 <ferror@plt+0x1f80>
  404e30:	ldr	x10, [x27, #24]
  404e34:	cmp	x10, #0x0
  404e38:	cset	w10, ne  // ne = any
  404e3c:	tbnz	w8, #0, 404ed0 <ferror@plt+0x2040>
  404e40:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  404e44:	ldr	w8, [x8, #952]
  404e48:	ldr	w11, [sp, #96]
  404e4c:	cmp	w8, #0x100
  404e50:	cset	w8, ne  // ne = any
  404e54:	orr	w8, w11, w8
  404e58:	orr	w8, w10, w8
  404e5c:	tbnz	w8, #0, 404ed0 <ferror@plt+0x2040>
  404e60:	ldrb	w8, [x27, #48]
  404e64:	cmp	w8, #0x0
  404e68:	cset	w10, ne  // ne = any
  404e6c:	orr	w9, w9, w10
  404e70:	cmp	w9, #0x1
  404e74:	b.ne	404e98 <ferror@plt+0x2008>  // b.any
  404e78:	cbz	w8, 404e90 <ferror@plt+0x2000>
  404e7c:	ldrb	w8, [x27, #49]
  404e80:	cbnz	w8, 404ed0 <ferror@plt+0x2040>
  404e84:	ldr	x8, [x27, #24]
  404e88:	cbnz	x8, 404e98 <ferror@plt+0x2008>
  404e8c:	b	404ed0 <ferror@plt+0x2040>
  404e90:	ldr	x8, [x27, #8]
  404e94:	cbz	x8, 404e7c <ferror@plt+0x1fec>
  404e98:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  404e9c:	mov	w2, #0x5                   	// #5
  404ea0:	mov	x0, xzr
  404ea4:	add	x1, x1, #0xc2a
  404ea8:	mov	x25, x28
  404eac:	mov	x28, x14
  404eb0:	bl	402d70 <dcgettext@plt>
  404eb4:	mov	x2, x0
  404eb8:	mov	w0, wzr
  404ebc:	mov	w1, wzr
  404ec0:	mov	x3, x19
  404ec4:	bl	4027f0 <error@plt>
  404ec8:	mov	x14, x28
  404ecc:	mov	x28, x25
  404ed0:	ldr	w8, [sp, #96]
  404ed4:	tbnz	w8, #0, 404f40 <ferror@plt+0x20b0>
  404ed8:	ldrb	w8, [x27, #50]
  404edc:	cbnz	w8, 404ef0 <ferror@plt+0x2060>
  404ee0:	ldrb	w8, [x27, #52]
  404ee4:	cbnz	w8, 404ef0 <ferror@plt+0x2060>
  404ee8:	ldrb	w8, [x27, #53]
  404eec:	cbz	w8, 404f40 <ferror@plt+0x20b0>
  404ef0:	ldr	x8, [x27]
  404ef4:	ldr	x9, [x27, #16]
  404ef8:	adds	x8, x8, #0x1
  404efc:	csinc	x8, x8, xzr, cc  // cc = lo, ul, last
  404f00:	cmp	x9, x8
  404f04:	b.cc	404f40 <ferror@plt+0x20b0>  // b.lo, b.ul, b.last
  404f08:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  404f0c:	mov	w2, #0x5                   	// #5
  404f10:	mov	x0, xzr
  404f14:	add	x1, x1, #0xc72
  404f18:	mov	x25, x28
  404f1c:	mov	x28, x14
  404f20:	bl	402d70 <dcgettext@plt>
  404f24:	mov	x2, x0
  404f28:	mov	w0, wzr
  404f2c:	mov	w1, wzr
  404f30:	mov	x3, x19
  404f34:	bl	4027f0 <error@plt>
  404f38:	mov	x14, x28
  404f3c:	mov	x28, x25
  404f40:	ldr	x9, [x29, #8]
  404f44:	cbz	x9, 404f54 <ferror@plt+0x20c4>
  404f48:	ldr	x8, [x27, #32]
  404f4c:	cmp	x9, x8
  404f50:	csel	x9, xzr, x9, eq  // eq = none
  404f54:	ldr	w10, [sp, #112]
  404f58:	str	x9, [x29, #8]
  404f5c:	cbz	x14, 404bc4 <ferror@plt+0x1d34>
  404f60:	ldr	x8, [x27, #40]
  404f64:	cmp	x14, x8
  404f68:	csel	x14, xzr, x14, eq  // eq = none
  404f6c:	b	404bc4 <ferror@plt+0x1d34>
  404f70:	ldr	w8, [sp, #112]
  404f74:	ldr	w16, [sp, #120]
  404f78:	ldr	w15, [sp, #128]
  404f7c:	mov	w13, w23
  404f80:	ldr	w23, [sp, #104]
  404f84:	orr	w8, w8, w21
  404f88:	cbnz	x14, 404ff8 <ferror@plt+0x2168>
  404f8c:	ldr	x9, [x29, #8]
  404f90:	cbnz	x9, 404ff8 <ferror@plt+0x2168>
  404f94:	orr	w9, w13, w20
  404f98:	orr	w9, w9, w26
  404f9c:	orr	w9, w9, w23
  404fa0:	orr	w9, w9, w16
  404fa4:	orr	w9, w9, w15
  404fa8:	orr	w9, w9, w8
  404fac:	tst	w9, #0xff
  404fb0:	b.ne	404ff8 <ferror@plt+0x2168>  // b.any
  404fb4:	ldr	x27, [sp, #16]
  404fb8:	ldr	w25, [sp, #4]
  404fbc:	mov	w12, w24
  404fc0:	tst	w24, #0xff
  404fc4:	adrp	x24, 426000 <_obstack_memory_used@@Base+0x141b0>
  404fc8:	b.eq	405184 <ferror@plt+0x22f4>  // b.none
  404fcc:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x141b0>
  404fd0:	ldrb	w9, [x9, #1529]
  404fd4:	tbnz	w9, #0, 404fe8 <ferror@plt+0x2158>
  404fd8:	adrp	x10, 426000 <_obstack_memory_used@@Base+0x141b0>
  404fdc:	ldrb	w10, [x10, #1530]
  404fe0:	cmp	w10, #0x1
  404fe4:	b.ne	405150 <ferror@plt+0x22c0>  // b.any
  404fe8:	ldr	x10, [x24, #1536]
  404fec:	cbnz	x10, 40500c <ferror@plt+0x217c>
  404ff0:	tbz	w9, #0, 40513c <ferror@plt+0x22ac>
  404ff4:	b	405184 <ferror@plt+0x22f4>
  404ff8:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x141b0>
  404ffc:	ldrb	w9, [x9, #1529]
  405000:	ldr	x27, [sp, #16]
  405004:	mov	w12, w24
  405008:	adrp	x24, 426000 <_obstack_memory_used@@Base+0x141b0>
  40500c:	adrp	x10, 426000 <_obstack_memory_used@@Base+0x141b0>
  405010:	ldrb	w10, [x10, #1530]
  405014:	tst	w8, #0xff
  405018:	sub	x8, x29, #0xa8
  40501c:	b.eq	40502c <ferror@plt+0x219c>  // b.none
  405020:	orr	x8, x8, #0x1
  405024:	mov	w11, #0x62                  	// #98
  405028:	sturb	w11, [x29, #-168]
  40502c:	ldr	x11, [x29, #8]
  405030:	ldr	w25, [sp, #4]
  405034:	cmp	x11, x22
  405038:	b.ne	405044 <ferror@plt+0x21b4>  // b.any
  40503c:	mov	w11, #0x64                  	// #100
  405040:	strb	w11, [x8], #1
  405044:	cbz	x14, 405050 <ferror@plt+0x21c0>
  405048:	mov	w11, #0x66                  	// #102
  40504c:	strb	w11, [x8], #1
  405050:	tst	w23, #0xff
  405054:	b.eq	405060 <ferror@plt+0x21d0>  // b.none
  405058:	mov	w11, #0x67                  	// #103
  40505c:	strb	w11, [x8], #1
  405060:	tst	w26, #0xff
  405064:	b.eq	405070 <ferror@plt+0x21e0>  // b.none
  405068:	mov	w11, #0x68                  	// #104
  40506c:	strb	w11, [x8], #1
  405070:	ldr	x14, [x29, #8]
  405074:	adrp	x11, 426000 <_obstack_memory_used@@Base+0x141b0>
  405078:	add	x11, x11, #0x720
  40507c:	cmp	x14, x11
  405080:	b.ne	40508c <ferror@plt+0x21fc>  // b.any
  405084:	mov	w11, #0x69                  	// #105
  405088:	strb	w11, [x8], #1
  40508c:	tst	w13, #0xff
  405090:	b.eq	40509c <ferror@plt+0x220c>  // b.none
  405094:	mov	w11, #0x4d                  	// #77
  405098:	strb	w11, [x8], #1
  40509c:	tst	w15, #0xff
  4050a0:	b.eq	4050ac <ferror@plt+0x221c>  // b.none
  4050a4:	mov	w11, #0x6e                  	// #110
  4050a8:	strb	w11, [x8], #1
  4050ac:	tst	w16, #0xff
  4050b0:	b.eq	4050bc <ferror@plt+0x222c>  // b.none
  4050b4:	mov	w11, #0x52                  	// #82
  4050b8:	strb	w11, [x8], #1
  4050bc:	tst	w12, #0xff
  4050c0:	b.eq	4050d8 <ferror@plt+0x2248>  // b.none
  4050c4:	orr	w9, w9, w10
  4050c8:	eor	w9, w9, #0x1
  4050cc:	tbnz	w9, #0, 4050d8 <ferror@plt+0x2248>
  4050d0:	mov	w9, #0x72                  	// #114
  4050d4:	strb	w9, [x8], #1
  4050d8:	tst	w20, #0xff
  4050dc:	b.eq	4050e8 <ferror@plt+0x2258>  // b.none
  4050e0:	mov	w9, #0x56                  	// #86
  4050e4:	strb	w9, [x8], #1
  4050e8:	sub	x0, x29, #0xa8
  4050ec:	and	w19, w12, #0xff
  4050f0:	strb	wzr, [x8]
  4050f4:	bl	4027c0 <strlen@plt>
  4050f8:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  4050fc:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x21b0>
  405100:	mov	x3, x0
  405104:	add	x1, x1, #0xc9f
  405108:	add	x2, x2, #0xcb7
  40510c:	mov	w4, #0x5                   	// #5
  405110:	mov	x0, xzr
  405114:	bl	402cc0 <dcngettext@plt>
  405118:	mov	x2, x0
  40511c:	sub	x3, x29, #0xa8
  405120:	mov	w0, wzr
  405124:	mov	w1, wzr
  405128:	bl	4027f0 <error@plt>
  40512c:	cbz	w19, 405184 <ferror@plt+0x22f4>
  405130:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  405134:	ldrb	w8, [x8, #1529]
  405138:	tbnz	w8, #0, 405184 <ferror@plt+0x22f4>
  40513c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  405140:	ldrb	w8, [x8, #1530]
  405144:	eor	w8, w8, #0x1
  405148:	tbnz	w8, #0, 405158 <ferror@plt+0x22c8>
  40514c:	b	405184 <ferror@plt+0x22f4>
  405150:	mov	w8, #0x1                   	// #1
  405154:	tbz	w8, #0, 405184 <ferror@plt+0x22f4>
  405158:	ldr	x8, [x24, #1536]
  40515c:	cbz	x8, 405184 <ferror@plt+0x22f4>
  405160:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  405164:	add	x1, x1, #0xcd1
  405168:	mov	w2, #0x5                   	// #5
  40516c:	mov	x0, xzr
  405170:	bl	402d70 <dcgettext@plt>
  405174:	mov	x2, x0
  405178:	mov	w0, wzr
  40517c:	mov	w1, wzr
  405180:	bl	4027f0 <error@plt>
  405184:	ldrb	w8, [sp, #479]
  405188:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x141b0>
  40518c:	strb	w8, [x9, #1544]
  405190:	cbz	w25, 4051e0 <ferror@plt+0x2350>
  405194:	ldr	x0, [sp, #32]
  405198:	mov	w1, #0x10                  	// #16
  40519c:	bl	40ef78 <ferror@plt+0xc0e8>
  4051a0:	cbz	x0, 406000 <ferror@plt+0x3170>
  4051a4:	sub	x1, x29, #0xa8
  4051a8:	mov	w2, #0x10                  	// #16
  4051ac:	mov	x19, x0
  4051b0:	bl	40f1b8 <ferror@plt+0xc328>
  4051b4:	mov	x0, x19
  4051b8:	bl	40f30c <ferror@plt+0xc47c>
  4051bc:	cbnz	w0, 406010 <ferror@plt+0x3180>
  4051c0:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x141b0>
  4051c4:	add	x19, x19, #0xac0
  4051c8:	mov	x0, x19
  4051cc:	bl	40a820 <ferror@plt+0x7990>
  4051d0:	sub	x0, x29, #0xa8
  4051d4:	mov	w1, #0x10                  	// #16
  4051d8:	mov	x2, x19
  4051dc:	bl	40b434 <ferror@plt+0x85a4>
  4051e0:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x141b0>
  4051e4:	ldr	x8, [x19, #1552]
  4051e8:	cbz	x8, 4053d4 <ferror@plt+0x2544>
  4051ec:	ldr	w20, [sp, #44]
  4051f0:	cbz	x28, 405b84 <ferror@plt+0x2cf4>
  4051f4:	adrp	x21, 426000 <_obstack_memory_used@@Base+0x141b0>
  4051f8:	ldr	x23, [sp, #48]
  4051fc:	ldr	x8, [x21, #1560]
  405200:	cbz	x8, 405220 <ferror@plt+0x2390>
  405204:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x141b0>
  405208:	ldr	w9, [x9, #968]
  40520c:	add	x9, x9, x9, lsl #4
  405210:	lsl	x9, x9, #1
  405214:	cmp	x8, x9
  405218:	csel	x8, x8, x9, hi  // hi = pmore
  40521c:	str	x8, [x21, #1560]
  405220:	tst	w20, #0xff
  405224:	b.eq	40540c <ferror@plt+0x257c>  // b.none
  405228:	cmp	x28, #0x2
  40522c:	b.cs	405f9c <ferror@plt+0x310c>  // b.hs, b.nlast
  405230:	cbnz	x23, 405fd8 <ferror@plt+0x3148>
  405234:	ldr	x19, [x27]
  405238:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  40523c:	add	x1, x1, #0x8f8
  405240:	mov	x0, x19
  405244:	bl	4068ec <ferror@plt+0x3a5c>
  405248:	cbz	x0, 405fe8 <ferror@plt+0x3158>
  40524c:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x141b0>
  405250:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  405254:	ldr	x10, [x21, #1560]
  405258:	ldr	x9, [x9, #1168]
  40525c:	ldrb	w8, [x8, #1530]
  405260:	ldr	x24, [x24, #1536]
  405264:	mov	x20, x0
  405268:	cmp	x9, x10
  40526c:	eor	w23, w8, #0x1
  405270:	csel	x8, x9, x10, hi  // hi = pmore
  405274:	and	x8, x8, #0xffffffffffffffe0
  405278:	add	x21, x8, #0x20
  40527c:	mov	x0, x21
  405280:	bl	402930 <malloc@plt>
  405284:	cbnz	x0, 405298 <ferror@plt+0x2408>
  405288:	cmp	x21, #0x43
  40528c:	lsr	x8, x21, #1
  405290:	b.hi	405274 <ferror@plt+0x23e4>  // b.pmore
  405294:	bl	410aa0 <ferror@plt+0xdc10>
  405298:	adrp	x8, 412000 <_obstack_memory_used@@Base+0x1b0>
  40529c:	ldr	q0, [x8, #2640]
  4052a0:	stp	x0, xzr, [x29, #-168]
  4052a4:	sub	x0, x29, #0xa8
  4052a8:	mov	x1, x20
  4052ac:	mov	x2, x19
  4052b0:	sturb	wzr, [x29, #-120]
  4052b4:	stp	xzr, x21, [x29, #-152]
  4052b8:	stur	q0, [x29, #-136]
  4052bc:	stur	xzr, [x29, #-224]
  4052c0:	bl	406b4c <ferror@plt+0x3cbc>
  4052c4:	mov	x21, xzr
  4052c8:	tbz	w0, #0, 4054f0 <ferror@plt+0x2660>
  4052cc:	mov	x22, xzr
  4052d0:	mov	x25, xzr
  4052d4:	and	w26, w23, #0x1
  4052d8:	ldp	x27, x8, [x29, #-152]
  4052dc:	ldur	x9, [x29, #-168]
  4052e0:	str	x25, [x29, #8]
  4052e4:	add	x28, x9, x8
  4052e8:	cbz	x22, 405300 <ferror@plt+0x2470>
  4052ec:	sub	x1, x28, #0x20
  4052f0:	sub	x0, x29, #0xe0
  4052f4:	bl	406e78 <ferror@plt+0x3fe8>
  4052f8:	cmp	w0, w26
  4052fc:	b.ge	405bac <ferror@plt+0x2d1c>  // b.tcont
  405300:	mov	x25, x24
  405304:	sub	x24, x28, x27, lsl #5
  405308:	sub	x23, x28, #0x40
  40530c:	add	x0, x23, #0x20
  405310:	cmp	x24, x0
  405314:	b.cs	405330 <ferror@plt+0x24a0>  // b.hs, b.nlast
  405318:	mov	x1, x23
  40531c:	bl	406e78 <ferror@plt+0x3fe8>
  405320:	cmp	w0, w26
  405324:	sub	x23, x23, #0x20
  405328:	b.lt	40530c <ferror@plt+0x247c>  // b.tstop
  40532c:	b	4054f8 <ferror@plt+0x2668>
  405330:	ldr	x2, [x23, #40]
  405334:	mov	x24, x25
  405338:	cmp	x22, x2
  40533c:	b.cs	405374 <ferror@plt+0x24e4>  // b.hs, b.nlast
  405340:	lsl	x22, x22, #1
  405344:	cbz	x22, 405354 <ferror@plt+0x24c4>
  405348:	cmp	x22, x2
  40534c:	b.cc	405340 <ferror@plt+0x24b0>  // b.lo, b.ul, b.last
  405350:	b	405358 <ferror@plt+0x24c8>
  405354:	mov	x22, x2
  405358:	mov	x0, x21
  40535c:	bl	402c00 <free@plt>
  405360:	mov	x0, x22
  405364:	bl	41078c <ferror@plt+0xd8fc>
  405368:	stur	x0, [x29, #-224]
  40536c:	ldr	x2, [x23, #40]
  405370:	mov	x21, x0
  405374:	ldr	x1, [x23, #32]
  405378:	ldr	x25, [x29, #8]
  40537c:	mov	x0, x21
  405380:	add	x25, x27, x25
  405384:	bl	402760 <memcpy@plt>
  405388:	ldr	x8, [x23, #40]
  40538c:	stur	x8, [x29, #-216]
  405390:	cbz	x24, 4053b8 <ferror@plt+0x2528>
  405394:	ldr	x8, [x23, #48]
  405398:	ldr	x9, [x23, #32]
  40539c:	sub	x8, x8, x9
  4053a0:	add	x8, x21, x8
  4053a4:	stur	x8, [x29, #-208]
  4053a8:	ldr	x8, [x23, #56]
  4053ac:	sub	x8, x8, x9
  4053b0:	add	x8, x21, x8
  4053b4:	stur	x8, [x29, #-200]
  4053b8:	sub	x0, x29, #0xa8
  4053bc:	mov	x1, x20
  4053c0:	mov	x2, x19
  4053c4:	bl	406b4c <ferror@plt+0x3cbc>
  4053c8:	mov	w23, wzr
  4053cc:	tbnz	w0, #0, 4052d8 <ferror@plt+0x2448>
  4053d0:	b	405b00 <ferror@plt+0x2c70>
  4053d4:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x21b0>
  4053d8:	add	x0, x0, #0x698
  4053dc:	bl	402e20 <getenv@plt>
  4053e0:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  4053e4:	ldr	x9, [x8, #2600]
  4053e8:	adrp	x10, 413000 <_obstack_memory_used@@Base+0x11b0>
  4053ec:	add	x10, x10, #0xf8d
  4053f0:	cmp	x0, #0x0
  4053f4:	csel	x20, x10, x0, eq  // eq = none
  4053f8:	cbz	x9, 405b48 <ferror@plt+0x2cb8>
  4053fc:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  405400:	ldr	x0, [x8, #2608]
  405404:	mov	x8, xzr
  405408:	b	405b70 <ferror@plt+0x2ce0>
  40540c:	adrp	x19, 414000 <_obstack_memory_used@@Base+0x21b0>
  405410:	add	x19, x19, #0xbd0
  405414:	mov	x21, x28
  405418:	mov	x20, x27
  40541c:	b	40542c <ferror@plt+0x259c>
  405420:	subs	x21, x21, #0x1
  405424:	add	x20, x20, #0x8
  405428:	b.eq	40546c <ferror@plt+0x25dc>  // b.none
  40542c:	ldr	x22, [x20]
  405430:	mov	x1, x19
  405434:	mov	x0, x22
  405438:	bl	402bb0 <strcmp@plt>
  40543c:	cbz	w0, 405420 <ferror@plt+0x2590>
  405440:	mov	w1, #0x4                   	// #4
  405444:	mov	x0, x22
  405448:	bl	402870 <euidaccess@plt>
  40544c:	cbz	w0, 405420 <ferror@plt+0x2590>
  405450:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  405454:	add	x1, x1, #0xdbd
  405458:	mov	w2, #0x5                   	// #5
  40545c:	mov	x0, xzr
  405460:	bl	402d70 <dcgettext@plt>
  405464:	ldr	x1, [x20]
  405468:	bl	406878 <ferror@plt+0x39e8>
  40546c:	ldr	w20, [sp, #28]
  405470:	cbz	x23, 4054ac <ferror@plt+0x261c>
  405474:	mov	w1, #0x41                  	// #65
  405478:	movk	w1, #0x8, lsl #16
  40547c:	mov	w2, #0x1b6                 	// #438
  405480:	mov	x0, x23
  405484:	bl	402950 <open@plt>
  405488:	tbnz	w0, #31, 406060 <ferror@plt+0x31d0>
  40548c:	mov	w19, w0
  405490:	cmp	w0, #0x1
  405494:	b.eq	4054ac <ferror@plt+0x261c>  // b.none
  405498:	mov	w1, #0x1                   	// #1
  40549c:	mov	w0, w19
  4054a0:	bl	402dc0 <dup2@plt>
  4054a4:	mov	w0, w19
  4054a8:	bl	402a70 <close@plt>
  4054ac:	tbz	w20, #0, 40559c <ferror@plt+0x270c>
  4054b0:	mov	w1, #0x10                  	// #16
  4054b4:	mov	x0, x28
  4054b8:	bl	4109c8 <ferror@plt+0xdb38>
  4054bc:	cbz	x28, 4054dc <ferror@plt+0x264c>
  4054c0:	mov	x8, xzr
  4054c4:	mov	x9, x0
  4054c8:	ldr	x10, [x27, x8, lsl #3]
  4054cc:	add	x8, x8, #0x1
  4054d0:	cmp	x8, x28
  4054d4:	str	x10, [x9], #16
  4054d8:	b.cc	4054c8 <ferror@plt+0x2638>  // b.lo, b.ul, b.last
  4054dc:	mov	x1, xzr
  4054e0:	mov	x2, x28
  4054e4:	mov	x3, x23
  4054e8:	bl	406380 <ferror@plt+0x34f0>
  4054ec:	b	405ad0 <ferror@plt+0x2c40>
  4054f0:	mov	w23, wzr
  4054f4:	b	405b00 <ferror@plt+0x2c70>
  4054f8:	add	x8, x23, #0x40
  4054fc:	ldr	w9, [sp, #44]
  405500:	and	w9, w9, #0xff
  405504:	cmp	w9, #0x63
  405508:	b.ne	405afc <ferror@plt+0x2c6c>  // b.any
  40550c:	adrp	x27, 426000 <_obstack_memory_used@@Base+0x141b0>
  405510:	ldr	x9, [x29, #8]
  405514:	ldr	x22, [x27, #1312]
  405518:	sub	x24, x8, #0x20
  40551c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  405520:	sub	x8, x28, x24
  405524:	add	x1, x1, #0xd04
  405528:	mov	w2, #0x5                   	// #5
  40552c:	mov	x0, xzr
  405530:	add	x23, x9, x8, asr #5
  405534:	bl	402d70 <dcgettext@plt>
  405538:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  40553c:	ldr	x25, [x8, #2992]
  405540:	mov	x26, x0
  405544:	sub	x1, x29, #0x28
  405548:	mov	x0, x23
  40554c:	bl	40cef0 <ferror@plt+0xa060>
  405550:	mov	x5, x0
  405554:	mov	w1, #0x1                   	// #1
  405558:	mov	x0, x22
  40555c:	mov	x2, x26
  405560:	mov	x3, x25
  405564:	mov	x4, x19
  405568:	mov	w23, #0x1                   	// #1
  40556c:	bl	402b90 <__fprintf_chk@plt>
  405570:	ldr	x22, [x27, #1312]
  405574:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  405578:	add	x1, x1, #0xd1a
  40557c:	mov	w2, #0x5                   	// #5
  405580:	mov	x0, xzr
  405584:	bl	402d70 <dcgettext@plt>
  405588:	mov	x2, x0
  40558c:	mov	x0, x24
  405590:	mov	x1, x22
  405594:	bl	407c7c <ferror@plt+0x4dec>
  405598:	b	405b00 <ferror@plt+0x2c70>
  40559c:	ldr	x11, [sp, #8]
  4055a0:	cbnz	x11, 4055b8 <ferror@plt+0x2728>
  4055a4:	mov	w0, #0x2                   	// #2
  4055a8:	bl	40d0f0 <ferror@plt+0xa260>
  4055ac:	cmp	x0, #0x8
  4055b0:	mov	w8, #0x8                   	// #8
  4055b4:	csel	x11, x0, x8, cc  // cc = lo, ul, last
  4055b8:	mov	x8, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
  4055bc:	movk	x8, #0xf0, lsl #48
  4055c0:	cmp	x11, x8
  4055c4:	sub	x9, x29, #0xe0
  4055c8:	csel	x19, x11, x8, cc  // cc = lo, ul, last
  4055cc:	sub	x10, x29, #0xa8
  4055d0:	add	x9, x9, #0x8
  4055d4:	lsl	x8, x19, #1
  4055d8:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  4055dc:	str	x9, [sp, #64]
  4055e0:	add	x9, x10, #0x8
  4055e4:	str	x8, [sp, #80]
  4055e8:	add	x8, x19, x19, lsl #4
  4055ec:	add	x1, x1, #0x8f8
  4055f0:	fmov	d9, #1.250000000000000000e-01
  4055f4:	fmov	d10, #7.500000000000000000e-01
  4055f8:	str	x9, [sp, #104]
  4055fc:	add	x9, x10, #0x38
  405600:	lsl	x8, x8, #4
  405604:	str	xzr, [sp, #128]
  405608:	stur	xzr, [x29, #-200]
  40560c:	str	x9, [sp, #96]
  405610:	str	x8, [sp, #72]
  405614:	str	x19, [sp, #112]
  405618:	ldr	x0, [x27]
  40561c:	str	x0, [x29, #8]
  405620:	bl	4068ec <ferror@plt+0x3a5c>
  405624:	str	x0, [sp, #120]
  405628:	cbz	x0, 406048 <ferror@plt+0x31b8>
  40562c:	cmp	x19, #0x2
  405630:	adrp	x23, 426000 <_obstack_memory_used@@Base+0x141b0>
  405634:	b.cc	405654 <ferror@plt+0x27c4>  // b.lo, b.ul, b.last
  405638:	mov	w21, #0x20                  	// #32
  40563c:	mov	w8, #0x1                   	// #1
  405640:	lsl	x8, x8, #1
  405644:	cmp	x8, x19
  405648:	add	x21, x21, #0x20
  40564c:	b.cc	405640 <ferror@plt+0x27b0>  // b.lo, b.ul, b.last
  405650:	b	405658 <ferror@plt+0x27c8>
  405654:	mov	w21, #0x30                  	// #48
  405658:	ldur	x8, [x29, #-200]
  40565c:	orr	x26, x21, #0x1
  405660:	cbnz	x8, 40583c <ferror@plt+0x29ac>
  405664:	mov	x22, xzr
  405668:	orr	x20, x21, #0x2
  40566c:	cbz	x22, 4056a0 <ferror@plt+0x2810>
  405670:	ldr	x19, [x27, x22, lsl #3]
  405674:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  405678:	add	x1, x1, #0xbd0
  40567c:	mov	x0, x19
  405680:	bl	402bb0 <strcmp@plt>
  405684:	sub	x2, x29, #0xa8
  405688:	cbz	w0, 4056c0 <ferror@plt+0x2830>
  40568c:	mov	w0, wzr
  405690:	mov	x1, x19
  405694:	bl	402e30 <__xstat@plt>
  405698:	cbz	w0, 4056cc <ferror@plt+0x283c>
  40569c:	b	405c74 <ferror@plt+0x2de4>
  4056a0:	ldr	x0, [sp, #120]
  4056a4:	bl	4028d0 <fileno@plt>
  4056a8:	mov	w1, w0
  4056ac:	sub	x2, x29, #0xa8
  4056b0:	mov	w0, wzr
  4056b4:	bl	402d60 <__fxstat@plt>
  4056b8:	cbz	w0, 4056cc <ferror@plt+0x283c>
  4056bc:	b	405c74 <ferror@plt+0x2de4>
  4056c0:	mov	w1, wzr
  4056c4:	bl	402d60 <__fxstat@plt>
  4056c8:	cbnz	w0, 405c74 <ferror@plt+0x2de4>
  4056cc:	ldur	w8, [x29, #-152]
  4056d0:	and	w8, w8, #0xf000
  4056d4:	cmp	w8, #0x8, lsl #12
  4056d8:	b.ne	4056e4 <ferror@plt+0x2854>  // b.any
  4056dc:	ldur	x19, [x29, #-120]
  4056e0:	b	4056f0 <ferror@plt+0x2860>
  4056e4:	ldr	x8, [x23, #1560]
  4056e8:	cbnz	x8, 4057fc <ferror@plt+0x296c>
  4056ec:	mov	w19, #0x20000               	// #131072
  4056f0:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  4056f4:	ldr	x8, [x8, #2968]
  4056f8:	cbnz	x8, 4057c8 <ferror@plt+0x2938>
  4056fc:	ldr	x8, [x23, #1560]
  405700:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x141b0>
  405704:	str	x8, [x9, #2968]
  405708:	cbnz	x8, 4057c8 <ferror@plt+0x2938>
  40570c:	sub	x1, x29, #0x28
  405710:	mov	w0, #0x2                   	// #2
  405714:	bl	402cf0 <getrlimit@plt>
  405718:	ldur	x8, [x29, #-40]
  40571c:	cmp	w0, #0x0
  405720:	sub	x1, x29, #0x28
  405724:	mov	w0, #0x9                   	// #9
  405728:	csinv	x24, x8, xzr, eq  // eq = none
  40572c:	bl	402cf0 <getrlimit@plt>
  405730:	ldur	x8, [x29, #-40]
  405734:	sub	x1, x29, #0x28
  405738:	cmp	x8, x24
  40573c:	ccmp	w0, #0x0, #0x0, cc  // cc = lo, ul, last
  405740:	csel	x8, x8, x24, eq  // eq = none
  405744:	mov	w0, #0x5                   	// #5
  405748:	lsr	x24, x8, #1
  40574c:	bl	402cf0 <getrlimit@plt>
  405750:	cbnz	w0, 40576c <ferror@plt+0x28dc>
  405754:	ldur	x8, [x29, #-40]
  405758:	lsr	x8, x8, #4
  40575c:	lsl	x9, x8, #4
  405760:	sub	x8, x9, x8
  405764:	cmp	x8, x24
  405768:	csel	x24, x8, x24, cc  // cc = lo, ul, last
  40576c:	bl	40d364 <ferror@plt+0xa4d4>
  405770:	mov	v8.16b, v0.16b
  405774:	bl	40d2ec <ferror@plt+0xa45c>
  405778:	fmul	d1, d0, d9
  40577c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  405780:	fmul	d0, d0, d10
  405784:	fcmp	d8, d1
  405788:	ucvtf	d2, x24
  40578c:	ldr	w8, [x8, #968]
  405790:	fcsel	d1, d8, d1, gt
  405794:	fcvtzu	x9, d0
  405798:	fcmp	d0, d2
  40579c:	csel	x9, x9, x24, mi  // mi = first
  4057a0:	ucvtf	d0, x9
  4057a4:	fcvtzu	x10, d1
  4057a8:	fcmp	d1, d0
  4057ac:	add	x8, x8, x8, lsl #4
  4057b0:	csel	x9, x10, x9, mi  // mi = first
  4057b4:	lsl	x8, x8, #1
  4057b8:	cmp	x9, x8
  4057bc:	csel	x8, x9, x8, hi  // hi = pmore
  4057c0:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x141b0>
  4057c4:	str	x8, [x9, #2968]
  4057c8:	orr	x9, xzr, #0x1
  4057cc:	madd	x9, x19, x26, x9
  4057d0:	udiv	x10, x9, x26
  4057d4:	cmp	x19, x10
  4057d8:	b.ne	4057fc <ferror@plt+0x296c>  // b.any
  4057dc:	sub	x10, x8, x20
  4057e0:	cmp	x10, x9
  4057e4:	b.ls	4057fc <ferror@plt+0x296c>  // b.plast
  4057e8:	add	x22, x22, #0x1
  4057ec:	cmp	x28, x22
  4057f0:	add	x20, x9, x20
  4057f4:	b.ne	40566c <ferror@plt+0x27dc>  // b.any
  4057f8:	b	405800 <ferror@plt+0x2970>
  4057fc:	mov	x20, x8
  405800:	and	x8, x20, #0xffffffffffffffe0
  405804:	add	x19, x8, #0x20
  405808:	mov	x0, x19
  40580c:	bl	402930 <malloc@plt>
  405810:	cbnz	x0, 405824 <ferror@plt+0x2994>
  405814:	lsr	x20, x19, #1
  405818:	cmp	x20, x26
  40581c:	b.hi	405800 <ferror@plt+0x2970>  // b.pmore
  405820:	b	405294 <ferror@plt+0x2404>
  405824:	ldr	x8, [sp, #64]
  405828:	stur	x0, [x29, #-224]
  40582c:	stp	x19, xzr, [x29, #-200]
  405830:	stur	x21, [x29, #-184]
  405834:	sturb	wzr, [x29, #-176]
  405838:	stp	xzr, xzr, [x8]
  40583c:	ldr	x23, [sp, #120]
  405840:	add	x27, x27, #0x8
  405844:	sub	x28, x28, #0x1
  405848:	sturb	wzr, [x29, #-176]
  40584c:	str	x27, [sp, #16]
  405850:	str	x28, [sp, #88]
  405854:	b	405914 <ferror@plt+0x2a84>
  405858:	ldr	x1, [sp, #80]
  40585c:	adrp	x0, 409000 <ferror@plt+0x6170>
  405860:	add	x0, x0, #0xf74
  405864:	bl	40cbb4 <ferror@plt+0x9d24>
  405868:	stur	x0, [x29, #-168]
  40586c:	ldr	x0, [sp, #104]
  405870:	mov	x1, xzr
  405874:	bl	402a60 <pthread_mutex_init@plt>
  405878:	ldr	x0, [sp, #96]
  40587c:	mov	x1, xzr
  405880:	bl	402ce0 <pthread_cond_init@plt>
  405884:	ldr	x0, [sp, #72]
  405888:	bl	41078c <ferror@plt+0xd8fc>
  40588c:	movi	v0.2d, #0x0
  405890:	mov	x22, x0
  405894:	stp	q0, q0, [x0]
  405898:	stp	xzr, x19, [x0, #32]
  40589c:	stp	x19, xzr, [x0, #48]
  4058a0:	str	wzr, [x0, #80]
  4058a4:	strb	wzr, [x0, #84]
  4058a8:	add	x0, x0, #0x58
  4058ac:	mov	x1, xzr
  4058b0:	bl	402a60 <pthread_mutex_init@plt>
  4058b4:	ldr	x23, [sp, #112]
  4058b8:	add	x20, x22, #0x88
  4058bc:	mov	x0, x22
  4058c0:	mov	x1, x20
  4058c4:	mov	x2, x24
  4058c8:	mov	x3, x23
  4058cc:	mov	x4, x19
  4058d0:	mov	w5, wzr
  4058d4:	bl	409fa0 <ferror@plt+0x7110>
  4058d8:	ldur	x22, [x29, #-232]
  4058dc:	mov	x1, x23
  4058e0:	ldr	x23, [sp, #120]
  4058e4:	sub	x4, x29, #0xa8
  4058e8:	mov	x0, x24
  4058ec:	mov	x2, x19
  4058f0:	mov	x3, x20
  4058f4:	mov	x5, x22
  4058f8:	mov	x6, x28
  4058fc:	bl	409718 <ferror@plt+0x6888>
  405900:	mov	x0, x22
  405904:	mov	x1, x28
  405908:	bl	4062f8 <ferror@plt+0x3468>
  40590c:	ldr	x28, [sp, #88]
  405910:	cbnz	w25, 405aa4 <ferror@plt+0x2c14>
  405914:	ldr	x2, [x29, #8]
  405918:	sub	x0, x29, #0xe0
  40591c:	mov	x1, x23
  405920:	bl	406b4c <ferror@plt+0x3cbc>
  405924:	tbz	w0, #0, 405a2c <ferror@plt+0x2b9c>
  405928:	ldurb	w8, [x29, #-176]
  40592c:	ldur	x20, [x29, #-200]
  405930:	cbz	x28, 40594c <ferror@plt+0x2abc>
  405934:	cbz	w8, 40594c <ferror@plt+0x2abc>
  405938:	ldp	x9, x10, [x29, #-216]
  40593c:	sub	x11, x20, x9
  405940:	msub	x10, x10, x21, x11
  405944:	cmp	x26, x10
  405948:	b.cc	405a28 <ferror@plt+0x2b98>  // b.lo, b.ul, b.last
  40594c:	ldur	x27, [x29, #-224]
  405950:	ldr	x10, [sp, #128]
  405954:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x141b0>
  405958:	str	xzr, [x9, #2936]
  40595c:	cbz	w8, 4059a0 <ferror@plt+0x2b10>
  405960:	ldur	x8, [x29, #-192]
  405964:	orr	x9, x10, x28
  405968:	orr	x8, x9, x8
  40596c:	cbnz	x8, 4059a0 <ferror@plt+0x2b10>
  405970:	ldr	x1, [x29, #8]
  405974:	mov	x0, x23
  405978:	bl	4062f8 <ferror@plt+0x3468>
  40597c:	ldr	x28, [sp, #48]
  405980:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  405984:	add	x1, x1, #0xdc9
  405988:	mov	x0, x28
  40598c:	bl	4068ec <ferror@plt+0x3a5c>
  405990:	cbz	x0, 405c54 <ferror@plt+0x2dc4>
  405994:	stur	x0, [x29, #-232]
  405998:	mov	w25, #0x1                   	// #1
  40599c:	b	4059bc <ferror@plt+0x2b2c>
  4059a0:	add	x10, x10, #0x1
  4059a4:	sub	x0, x29, #0xe8
  4059a8:	mov	w1, wzr
  4059ac:	str	x10, [sp, #128]
  4059b0:	bl	408fd4 <ferror@plt+0x6144>
  4059b4:	mov	w25, wzr
  4059b8:	add	x28, x0, #0xd
  4059bc:	ldur	x19, [x29, #-208]
  4059c0:	add	x24, x27, x20
  4059c4:	cmp	x19, #0x2
  4059c8:	b.cs	405858 <ferror@plt+0x29c8>  // b.hs, b.nlast
  4059cc:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  4059d0:	ldrb	w8, [x8, #1530]
  4059d4:	ldur	x22, [x29, #-232]
  4059d8:	sub	x19, x24, #0x20
  4059dc:	cmp	w8, #0x1
  4059e0:	b.ne	405a14 <ferror@plt+0x2b84>  // b.any
  4059e4:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  4059e8:	ldr	x8, [x8, #2936]
  4059ec:	cbz	x8, 405a04 <ferror@plt+0x2b74>
  4059f0:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x141b0>
  4059f4:	mov	x0, x19
  4059f8:	add	x1, x1, #0xb78
  4059fc:	bl	406e78 <ferror@plt+0x3fe8>
  405a00:	cbz	w0, 405900 <ferror@plt+0x2a70>
  405a04:	ldp	q1, q0, [x19]
  405a08:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  405a0c:	add	x8, x8, #0xb78
  405a10:	stp	q1, q0, [x8]
  405a14:	mov	x0, x19
  405a18:	mov	x1, x22
  405a1c:	mov	x2, x28
  405a20:	bl	407c7c <ferror@plt+0x4dec>
  405a24:	b	405900 <ferror@plt+0x2a70>
  405a28:	stur	x9, [x29, #-192]
  405a2c:	ldr	x1, [x29, #8]
  405a30:	mov	x0, x23
  405a34:	bl	4062f8 <ferror@plt+0x3468>
  405a38:	ldr	x27, [sp, #16]
  405a3c:	ldr	x19, [sp, #112]
  405a40:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  405a44:	add	x1, x1, #0x8f8
  405a48:	cbnz	x28, 405618 <ferror@plt+0x2788>
  405a4c:	ldur	x0, [x29, #-224]
  405a50:	bl	402c00 <free@plt>
  405a54:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  405a58:	ldr	x19, [x8, #2592]
  405a5c:	ldr	x9, [sp, #128]
  405a60:	lsr	x8, x9, #59
  405a64:	cbnz	x8, 405294 <ferror@plt+0x2404>
  405a68:	lsl	x0, x9, #4
  405a6c:	bl	41078c <ferror@plt+0xd8fc>
  405a70:	ldr	x3, [sp, #48]
  405a74:	mov	x27, x0
  405a78:	cbz	x19, 405a94 <ferror@plt+0x2c04>
  405a7c:	add	x8, x27, #0x8
  405a80:	add	x9, x19, #0xd
  405a84:	stp	x9, x19, [x8, #-8]
  405a88:	ldr	x19, [x19]
  405a8c:	add	x8, x8, #0x10
  405a90:	cbnz	x19, 405a80 <ferror@plt+0x2bf0>
  405a94:	ldr	x1, [sp, #128]
  405a98:	mov	x0, x27
  405a9c:	mov	x2, x1
  405aa0:	bl	406380 <ferror@plt+0x34f0>
  405aa4:	mov	x0, x27
  405aa8:	bl	402c00 <free@plt>
  405aac:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x141b0>
  405ab0:	ldr	w8, [x19, #2920]
  405ab4:	cmp	w8, #0x1
  405ab8:	b.lt	405ad0 <ferror@plt+0x2c40>  // b.tstop
  405abc:	mov	w0, #0xffffffff            	// #-1
  405ac0:	bl	4094a8 <ferror@plt+0x6618>
  405ac4:	ldr	w8, [x19, #2920]
  405ac8:	cmp	w8, #0x0
  405acc:	b.gt	405abc <ferror@plt+0x2c2c>
  405ad0:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  405ad4:	ldrb	w8, [x8, #1384]
  405ad8:	cmp	w8, #0x1
  405adc:	b.ne	405af4 <ferror@plt+0x2c64>  // b.any
  405ae0:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  405ae4:	ldr	x0, [x8, #1344]
  405ae8:	bl	4115a0 <ferror@plt+0xe710>
  405aec:	cmn	w0, #0x1
  405af0:	b.eq	40607c <ferror@plt+0x31ec>  // b.none
  405af4:	mov	w23, wzr
  405af8:	b	405b1c <ferror@plt+0x2c8c>
  405afc:	mov	w23, #0x1                   	// #1
  405b00:	mov	x0, x20
  405b04:	mov	x1, x19
  405b08:	bl	4062f8 <ferror@plt+0x3468>
  405b0c:	ldur	x0, [x29, #-168]
  405b10:	bl	402c00 <free@plt>
  405b14:	mov	x0, x21
  405b18:	bl	402c00 <free@plt>
  405b1c:	mov	w0, w23
  405b20:	add	sp, sp, #0x320
  405b24:	ldp	x20, x19, [sp, #112]
  405b28:	ldp	x22, x21, [sp, #96]
  405b2c:	ldp	x24, x23, [sp, #80]
  405b30:	ldp	x26, x25, [sp, #64]
  405b34:	ldp	x28, x27, [sp, #48]
  405b38:	ldp	x29, x30, [sp, #32]
  405b3c:	ldp	d9, d8, [sp, #16]
  405b40:	ldr	d10, [sp], #128
  405b44:	ret
  405b48:	adrp	x21, 426000 <_obstack_memory_used@@Base+0x141b0>
  405b4c:	ldr	x0, [x21, #2608]
  405b50:	mov	w9, #0x10                  	// #16
  405b54:	cmp	x0, #0x0
  405b58:	csinc	x9, x9, xzr, eq  // eq = none
  405b5c:	lsl	x1, x9, #3
  405b60:	str	x9, [x8, #2600]
  405b64:	bl	41080c <ferror@plt+0xd97c>
  405b68:	ldr	x8, [x19, #1552]
  405b6c:	str	x0, [x21, #2608]
  405b70:	add	x9, x8, #0x1
  405b74:	str	x9, [x19, #1552]
  405b78:	str	x20, [x0, x8, lsl #3]
  405b7c:	ldr	w20, [sp, #44]
  405b80:	cbnz	x28, 4051f4 <ferror@plt+0x2364>
  405b84:	mov	x0, x27
  405b88:	bl	402c00 <free@plt>
  405b8c:	mov	w0, #0x8                   	// #8
  405b90:	bl	41078c <ferror@plt+0xd8fc>
  405b94:	adrp	x8, 414000 <_obstack_memory_used@@Base+0x21b0>
  405b98:	mov	x27, x0
  405b9c:	add	x8, x8, #0xbd0
  405ba0:	mov	w28, #0x1                   	// #1
  405ba4:	str	x8, [x0]
  405ba8:	b	4051f4 <ferror@plt+0x2364>
  405bac:	mov	x8, x28
  405bb0:	b	4054fc <ferror@plt+0x266c>
  405bb4:	mov	w0, #0x2                   	// #2
  405bb8:	bl	402fac <ferror@plt+0x11c>
  405bbc:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  405bc0:	add	x1, x1, #0x5a9
  405bc4:	mov	w2, #0x5                   	// #5
  405bc8:	mov	x0, xzr
  405bcc:	bl	402d70 <dcgettext@plt>
  405bd0:	ldr	x1, [x27, x19, lsl #3]
  405bd4:	mov	x19, x0
  405bd8:	mov	w0, #0x4                   	// #4
  405bdc:	bl	40e9bc <ferror@plt+0xbb2c>
  405be0:	mov	x3, x0
  405be4:	mov	w0, #0x2                   	// #2
  405be8:	mov	w1, wzr
  405bec:	mov	x2, x19
  405bf0:	bl	4027f0 <error@plt>
  405bf4:	sub	x1, x29, #0xa8
  405bf8:	strb	wzr, [x0, #55]
  405bfc:	strh	wzr, [x0, #48]
  405c00:	bl	406a5c <ferror@plt+0x3bcc>
  405c04:	sub	x0, x29, #0xa8
  405c08:	bl	4062c0 <ferror@plt+0x3430>
  405c0c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  405c10:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x141b0>
  405c14:	ldr	x0, [x8, #1336]
  405c18:	ldr	x3, [x9, #1184]
  405c1c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  405c20:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x21b0>
  405c24:	adrp	x4, 414000 <_obstack_memory_used@@Base+0x21b0>
  405c28:	adrp	x5, 414000 <_obstack_memory_used@@Base+0x21b0>
  405c2c:	add	x1, x1, #0x40c
  405c30:	add	x2, x2, #0x51e
  405c34:	add	x4, x4, #0x52c
  405c38:	add	x5, x5, #0x539
  405c3c:	mov	x6, xzr
  405c40:	bl	410664 <ferror@plt+0xd7d4>
  405c44:	mov	w0, wzr
  405c48:	bl	4027d0 <exit@plt>
  405c4c:	mov	w0, wzr
  405c50:	bl	402fac <ferror@plt+0x11c>
  405c54:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  405c58:	add	x1, x1, #0xb49
  405c5c:	mov	w2, #0x5                   	// #5
  405c60:	bl	402d70 <dcgettext@plt>
  405c64:	mov	x1, x28
  405c68:	bl	406878 <ferror@plt+0x39e8>
  405c6c:	mov	w0, #0x2                   	// #2
  405c70:	b	405e7c <ferror@plt+0x2fec>
  405c74:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  405c78:	add	x1, x1, #0xed3
  405c7c:	mov	w2, #0x5                   	// #5
  405c80:	mov	x0, xzr
  405c84:	bl	402d70 <dcgettext@plt>
  405c88:	ldr	x1, [x27, x22, lsl #3]
  405c8c:	bl	406878 <ferror@plt+0x39e8>
  405c90:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x21b0>
  405c94:	add	x0, x0, #0x419
  405c98:	bl	4062c0 <ferror@plt+0x3430>
  405c9c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  405ca0:	add	x1, x1, #0x4e8
  405ca4:	b	405e5c <ferror@plt+0x2fcc>
  405ca8:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  405cac:	add	x1, x1, #0x4f5
  405cb0:	mov	w2, #0x5                   	// #5
  405cb4:	mov	x0, xzr
  405cb8:	bl	402d70 <dcgettext@plt>
  405cbc:	ldr	x8, [x19, #1320]
  405cc0:	mov	x19, x0
  405cc4:	mov	x0, x8
  405cc8:	bl	40ee28 <ferror@plt+0xbf98>
  405ccc:	b	405be0 <ferror@plt+0x2d50>
  405cd0:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  405cd4:	add	x1, x1, #0x50c
  405cd8:	b	405e5c <ferror@plt+0x2fcc>
  405cdc:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  405ce0:	ldr	x0, [x8, #1320]
  405ce4:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  405ce8:	add	x1, x1, #0x474
  405cec:	bl	40625c <ferror@plt+0x33cc>
  405cf0:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  405cf4:	add	x1, x1, #0x4c6
  405cf8:	b	405e5c <ferror@plt+0x2fcc>
  405cfc:	adrp	x3, 412000 <_obstack_memory_used@@Base+0x1b0>
  405d00:	add	x3, x3, #0xed0
  405d04:	mov	w2, #0x7                   	// #7
  405d08:	b	405e88 <ferror@plt+0x2ff8>
  405d0c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  405d10:	add	x1, x1, #0x4a6
  405d14:	b	405e5c <ferror@plt+0x2fcc>
  405d18:	cmp	w28, #0x1
  405d1c:	b.ne	40602c <ferror@plt+0x319c>  // b.any
  405d20:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  405d24:	add	x1, x1, #0xace
  405d28:	mov	w2, #0x5                   	// #5
  405d2c:	mov	x0, xzr
  405d30:	bl	402d70 <dcgettext@plt>
  405d34:	ldr	x8, [sp, #16]
  405d38:	mov	x21, x0
  405d3c:	ldr	x0, [sp, #56]
  405d40:	lsl	x8, x8, #5
  405d44:	ldr	x20, [x26, x8]
  405d48:	bl	40ee28 <ferror@plt+0xbf98>
  405d4c:	mov	x4, x0
  405d50:	mov	w0, wzr
  405d54:	mov	w1, wzr
  405d58:	mov	x2, x21
  405d5c:	mov	x3, x20
  405d60:	bl	4027f0 <error@plt>
  405d64:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  405d68:	add	x1, x1, #0xae9
  405d6c:	mov	w2, #0x5                   	// #5
  405d70:	mov	x0, xzr
  405d74:	bl	402d70 <dcgettext@plt>
  405d78:	mov	x21, x0
  405d7c:	sub	x1, x29, #0xa8
  405d80:	mov	w0, w19
  405d84:	bl	40ceb8 <ferror@plt+0xa028>
  405d88:	mov	x4, x0
  405d8c:	mov	w0, #0x2                   	// #2
  405d90:	mov	w1, wzr
  405d94:	mov	x2, x21
  405d98:	mov	x3, x20
  405d9c:	bl	4027f0 <error@plt>
  405da0:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  405da4:	add	x1, x1, #0xa97
  405da8:	mov	w2, #0x5                   	// #5
  405dac:	mov	x0, xzr
  405db0:	bl	402d70 <dcgettext@plt>
  405db4:	ldr	x8, [sp, #16]
  405db8:	mov	x21, x0
  405dbc:	ldr	x0, [sp, #56]
  405dc0:	lsl	x8, x8, #5
  405dc4:	ldr	x20, [x26, x8]
  405dc8:	bl	40ee28 <ferror@plt+0xbf98>
  405dcc:	mov	x4, x0
  405dd0:	mov	w0, wzr
  405dd4:	mov	w1, wzr
  405dd8:	mov	x2, x21
  405ddc:	mov	x3, x20
  405de0:	bl	4027f0 <error@plt>
  405de4:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  405de8:	add	x1, x1, #0xab0
  405dec:	mov	w2, #0x5                   	// #5
  405df0:	mov	x0, xzr
  405df4:	bl	402d70 <dcgettext@plt>
  405df8:	mov	x19, x0
  405dfc:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x21b0>
  405e00:	add	x0, x0, #0xacc
  405e04:	bl	40ee28 <ferror@plt+0xbf98>
  405e08:	mov	x4, x0
  405e0c:	mov	w0, #0x2                   	// #2
  405e10:	mov	w1, wzr
  405e14:	mov	x2, x19
  405e18:	mov	x3, x20
  405e1c:	bl	4027f0 <error@plt>
  405e20:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  405e24:	add	x1, x1, #0x41c
  405e28:	b	405e5c <ferror@plt+0x2fcc>
  405e2c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  405e30:	ldr	x0, [x8, #1320]
  405e34:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  405e38:	add	x1, x1, #0x3ec
  405e3c:	bl	40625c <ferror@plt+0x33cc>
  405e40:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  405e44:	ldr	x0, [x8, #1320]
  405e48:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  405e4c:	add	x1, x1, #0x45f
  405e50:	bl	40625c <ferror@plt+0x33cc>
  405e54:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  405e58:	add	x1, x1, #0xb26
  405e5c:	mov	w2, #0x5                   	// #5
  405e60:	mov	x0, xzr
  405e64:	bl	402d70 <dcgettext@plt>
  405e68:	mov	x2, x0
  405e6c:	mov	w0, #0x2                   	// #2
  405e70:	mov	w1, wzr
  405e74:	bl	4027f0 <error@plt>
  405e78:	mov	w0, #0x1                   	// #1
  405e7c:	adrp	x3, 412000 <_obstack_memory_used@@Base+0x1b0>
  405e80:	add	x3, x3, #0xed0
  405e84:	mov	w2, #0x53                  	// #83
  405e88:	ldr	w1, [sp, #56]
  405e8c:	mov	x4, x22
  405e90:	bl	4110f0 <ferror@plt+0xe260>
  405e94:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x21b0>
  405e98:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  405e9c:	adrp	x3, 414000 <_obstack_memory_used@@Base+0x21b0>
  405ea0:	add	x0, x0, #0xf53
  405ea4:	add	x1, x1, #0x3b1
  405ea8:	add	x3, x3, #0x3bc
  405eac:	mov	w2, #0x1112                	// #4370
  405eb0:	bl	402df0 <__assert_fail@plt>
  405eb4:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  405eb8:	add	x1, x1, #0x3ec
  405ebc:	mov	x0, x19
  405ec0:	bl	40625c <ferror@plt+0x33cc>
  405ec4:	tst	w9, #0xff
  405ec8:	mov	w8, #0x6f                  	// #111
  405ecc:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x141b0>
  405ed0:	csel	w8, w9, w8, ne  // ne = any
  405ed4:	add	x0, x0, #0x3bc
  405ed8:	strb	w8, [x0]
  405edc:	bl	4062c0 <ferror@plt+0x3430>
  405ee0:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  405ee4:	add	x1, x1, #0x545
  405ee8:	mov	w2, #0x5                   	// #5
  405eec:	mov	x0, xzr
  405ef0:	bl	402d70 <dcgettext@plt>
  405ef4:	ldr	x1, [x27]
  405ef8:	mov	x19, x0
  405efc:	mov	w0, #0x4                   	// #4
  405f00:	bl	40e9bc <ferror@plt+0xbb2c>
  405f04:	mov	x3, x0
  405f08:	mov	w0, wzr
  405f0c:	mov	w1, wzr
  405f10:	mov	x2, x19
  405f14:	bl	4027f0 <error@plt>
  405f18:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  405f1c:	ldr	x19, [x8, #1312]
  405f20:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  405f24:	add	x1, x1, #0x556
  405f28:	mov	w2, #0x5                   	// #5
  405f2c:	mov	x0, xzr
  405f30:	bl	402d70 <dcgettext@plt>
  405f34:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x31b0>
  405f38:	mov	x3, x0
  405f3c:	add	x2, x2, #0x2ce
  405f40:	mov	w1, #0x1                   	// #1
  405f44:	mov	x0, x19
  405f48:	bl	402b90 <__fprintf_chk@plt>
  405f4c:	mov	w0, #0x2                   	// #2
  405f50:	bl	402fac <ferror@plt+0x11c>
  405f54:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  405f58:	add	x1, x1, #0xb49
  405f5c:	mov	w2, #0x5                   	// #5
  405f60:	bl	402d70 <dcgettext@plt>
  405f64:	mov	x1, x21
  405f68:	bl	406878 <ferror@plt+0x39e8>
  405f6c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  405f70:	add	x1, x1, #0x58a
  405f74:	b	405f80 <ferror@plt+0x30f0>
  405f78:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  405f7c:	add	x1, x1, #0x60e
  405f80:	mov	w2, #0x5                   	// #5
  405f84:	mov	x0, xzr
  405f88:	bl	402d70 <dcgettext@plt>
  405f8c:	mov	x19, x0
  405f90:	mov	w0, #0x4                   	// #4
  405f94:	mov	x1, x21
  405f98:	b	405bdc <ferror@plt+0x2d4c>
  405f9c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  405fa0:	add	x1, x1, #0x69f
  405fa4:	mov	w2, #0x5                   	// #5
  405fa8:	mov	x0, xzr
  405fac:	bl	402d70 <dcgettext@plt>
  405fb0:	ldr	x1, [x27, #8]
  405fb4:	mov	x19, x0
  405fb8:	mov	w0, #0x4                   	// #4
  405fbc:	bl	40e9bc <ferror@plt+0xbb2c>
  405fc0:	mov	x3, x0
  405fc4:	and	w4, w20, #0xff
  405fc8:	mov	w0, #0x2                   	// #2
  405fcc:	mov	w1, wzr
  405fd0:	mov	x2, x19
  405fd4:	bl	4027f0 <error@plt>
  405fd8:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x141b0>
  405fdc:	add	x0, x0, #0x3cc
  405fe0:	strb	w20, [x0]
  405fe4:	bl	4062c0 <ferror@plt+0x3430>
  405fe8:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  405fec:	add	x1, x1, #0xb49
  405ff0:	mov	w2, #0x5                   	// #5
  405ff4:	bl	402d70 <dcgettext@plt>
  405ff8:	mov	x1, x19
  405ffc:	bl	406878 <ferror@plt+0x39e8>
  406000:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  406004:	add	x1, x1, #0xb49
  406008:	mov	w2, #0x5                   	// #5
  40600c:	b	406020 <ferror@plt+0x3190>
  406010:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  406014:	add	x1, x1, #0x6c5
  406018:	mov	w2, #0x5                   	// #5
  40601c:	mov	x0, xzr
  406020:	bl	402d70 <dcgettext@plt>
  406024:	ldr	x1, [sp, #32]
  406028:	bl	406878 <ferror@plt+0x39e8>
  40602c:	ldr	x4, [sp, #56]
  406030:	adrp	x3, 412000 <_obstack_memory_used@@Base+0x1b0>
  406034:	add	x3, x3, #0xed0
  406038:	mov	w2, #0x4                   	// #4
  40603c:	mov	w0, w28
  406040:	ldr	x1, [sp, #16]
  406044:	bl	4110f0 <ferror@plt+0xe260>
  406048:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  40604c:	add	x1, x1, #0xb49
  406050:	mov	w2, #0x5                   	// #5
  406054:	bl	402d70 <dcgettext@plt>
  406058:	ldr	x1, [x29, #8]
  40605c:	bl	406878 <ferror@plt+0x39e8>
  406060:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  406064:	add	x1, x1, #0xb49
  406068:	mov	w2, #0x5                   	// #5
  40606c:	mov	x0, xzr
  406070:	bl	402d70 <dcgettext@plt>
  406074:	mov	x1, x23
  406078:	bl	406878 <ferror@plt+0x39e8>
  40607c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  406080:	add	x1, x1, #0x6c5
  406084:	mov	w2, #0x5                   	// #5
  406088:	mov	x0, xzr
  40608c:	bl	402d70 <dcgettext@plt>
  406090:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  406094:	add	x1, x1, #0xbd0
  406098:	bl	406878 <ferror@plt+0x39e8>
  40609c:	stp	x29, x30, [sp, #-48]!
  4060a0:	str	x21, [sp, #16]
  4060a4:	stp	x20, x19, [sp, #32]
  4060a8:	adrp	x20, 426000 <_obstack_memory_used@@Base+0x141b0>
  4060ac:	ldr	x21, [x20, #2592]
  4060b0:	mov	w19, w0
  4060b4:	mov	x29, sp
  4060b8:	cbz	x21, 4060cc <ferror@plt+0x323c>
  4060bc:	add	x0, x21, #0xd
  4060c0:	bl	402e70 <unlink@plt>
  4060c4:	ldr	x21, [x21]
  4060c8:	cbnz	x21, 4060bc <ferror@plt+0x322c>
  4060cc:	mov	w0, w19
  4060d0:	mov	x1, xzr
  4060d4:	str	xzr, [x20, #2592]
  4060d8:	bl	4028e0 <signal@plt>
  4060dc:	mov	w0, w19
  4060e0:	ldp	x20, x19, [sp, #32]
  4060e4:	ldr	x21, [sp, #16]
  4060e8:	ldp	x29, x30, [sp], #48
  4060ec:	b	4027e0 <raise@plt>
  4060f0:	sub	sp, sp, #0xc0
  4060f4:	stp	x29, x30, [sp, #144]
  4060f8:	str	x21, [sp, #160]
  4060fc:	stp	x20, x19, [sp, #176]
  406100:	adrp	x20, 426000 <_obstack_memory_used@@Base+0x141b0>
  406104:	ldr	x8, [x20, #2592]
  406108:	add	x29, sp, #0x90
  40610c:	cbz	x8, 40616c <ferror@plt+0x32dc>
  406110:	add	x8, sp, #0x8
  406114:	add	x19, x8, #0x8
  406118:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x141b0>
  40611c:	add	x1, x1, #0x570
  406120:	mov	w0, wzr
  406124:	mov	x2, x19
  406128:	bl	402780 <pthread_sigmask@plt>
  40612c:	cmp	w0, #0x0
  406130:	cset	w8, eq  // eq = none
  406134:	strb	w8, [sp, #8]
  406138:	ldr	x21, [x20, #2592]
  40613c:	cbz	x21, 406154 <ferror@plt+0x32c4>
  406140:	add	x0, x21, #0xd
  406144:	bl	402e70 <unlink@plt>
  406148:	ldr	x21, [x21]
  40614c:	cbnz	x21, 406140 <ferror@plt+0x32b0>
  406150:	ldrb	w8, [sp, #8]
  406154:	str	xzr, [x20, #2592]
  406158:	cbz	w8, 40616c <ferror@plt+0x32dc>
  40615c:	mov	w0, #0x2                   	// #2
  406160:	mov	x1, x19
  406164:	mov	x2, xzr
  406168:	bl	402780 <pthread_sigmask@plt>
  40616c:	bl	40a74c <ferror@plt+0x78bc>
  406170:	ldp	x20, x19, [sp, #176]
  406174:	ldr	x21, [sp, #160]
  406178:	ldp	x29, x30, [sp, #144]
  40617c:	add	sp, sp, #0xc0
  406180:	ret
  406184:	sub	sp, sp, #0x40
  406188:	stp	x29, x30, [sp, #16]
  40618c:	add	x29, sp, #0x10
  406190:	adrp	x4, 415000 <_obstack_memory_used@@Base+0x31b0>
  406194:	str	x21, [sp, #32]
  406198:	stp	x20, x19, [sp, #48]
  40619c:	mov	x20, x2
  4061a0:	mov	x21, x1
  4061a4:	add	x4, x4, #0x3a8
  4061a8:	add	x1, x29, #0x18
  4061ac:	add	x3, sp, #0x8
  4061b0:	mov	w2, #0xa                   	// #10
  4061b4:	mov	x19, x0
  4061b8:	bl	4111b4 <ferror@plt+0xe324>
  4061bc:	cmp	w0, #0x4
  4061c0:	b.hi	4061ec <ferror@plt+0x335c>  // b.pmore
  4061c4:	adrp	x9, 412000 <_obstack_memory_used@@Base+0x1b0>
  4061c8:	mov	w8, w0
  4061cc:	add	x9, x9, #0xe7c
  4061d0:	adr	x10, 4061e4 <ferror@plt+0x3354>
  4061d4:	ldrb	w11, [x9, x8]
  4061d8:	add	x10, x10, x11, lsl #2
  4061dc:	mov	x8, #0xffffffffffffffff    	// #-1
  4061e0:	br	x10
  4061e4:	ldr	x8, [sp, #8]
  4061e8:	str	x8, [x21]
  4061ec:	ldr	x0, [x29, #24]
  4061f0:	ldp	x20, x19, [sp, #48]
  4061f4:	ldr	x21, [sp, #32]
  4061f8:	ldp	x29, x30, [sp, #16]
  4061fc:	add	sp, sp, #0x40
  406200:	ret
  406204:	cbnz	x20, 406210 <ferror@plt+0x3380>
  406208:	mov	x0, xzr
  40620c:	b	4061f0 <ferror@plt+0x3360>
  406210:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  406214:	add	x1, x1, #0x9f4
  406218:	mov	w2, #0x5                   	// #5
  40621c:	mov	x0, xzr
  406220:	bl	402d70 <dcgettext@plt>
  406224:	mov	x21, x0
  406228:	mov	w2, #0x5                   	// #5
  40622c:	mov	x0, xzr
  406230:	mov	x1, x20
  406234:	bl	402d70 <dcgettext@plt>
  406238:	mov	x20, x0
  40623c:	mov	x0, x19
  406240:	bl	40ee28 <ferror@plt+0xbf98>
  406244:	mov	x4, x0
  406248:	mov	w0, #0x2                   	// #2
  40624c:	mov	w1, wzr
  406250:	mov	x2, x21
  406254:	mov	x3, x20
  406258:	bl	4027f0 <error@plt>
  40625c:	stp	x29, x30, [sp, #-48]!
  406260:	stp	x20, x19, [sp, #32]
  406264:	mov	x19, x1
  406268:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  40626c:	mov	x20, x0
  406270:	add	x1, x1, #0xa15
  406274:	mov	w2, #0x5                   	// #5
  406278:	mov	x0, xzr
  40627c:	str	x21, [sp, #16]
  406280:	mov	x29, sp
  406284:	bl	402d70 <dcgettext@plt>
  406288:	mov	x21, x0
  40628c:	mov	w2, #0x5                   	// #5
  406290:	mov	x0, xzr
  406294:	mov	x1, x19
  406298:	bl	402d70 <dcgettext@plt>
  40629c:	mov	x19, x0
  4062a0:	mov	x0, x20
  4062a4:	bl	40ee28 <ferror@plt+0xbf98>
  4062a8:	mov	x4, x0
  4062ac:	mov	w0, #0x2                   	// #2
  4062b0:	mov	w1, wzr
  4062b4:	mov	x2, x21
  4062b8:	mov	x3, x19
  4062bc:	bl	4027f0 <error@plt>
  4062c0:	stp	x29, x30, [sp, #-32]!
  4062c4:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  4062c8:	str	x19, [sp, #16]
  4062cc:	mov	x19, x0
  4062d0:	add	x1, x1, #0xa78
  4062d4:	mov	w2, #0x5                   	// #5
  4062d8:	mov	x0, xzr
  4062dc:	mov	x29, sp
  4062e0:	bl	402d70 <dcgettext@plt>
  4062e4:	mov	x2, x0
  4062e8:	mov	w0, #0x2                   	// #2
  4062ec:	mov	w1, wzr
  4062f0:	mov	x3, x19
  4062f4:	bl	4027f0 <error@plt>
  4062f8:	stp	x29, x30, [sp, #-32]!
  4062fc:	stp	x20, x19, [sp, #16]
  406300:	mov	x29, sp
  406304:	mov	x19, x1
  406308:	mov	x20, x0
  40630c:	bl	4028d0 <fileno@plt>
  406310:	cmp	w0, #0x1
  406314:	b.eq	406334 <ferror@plt+0x34a4>  // b.none
  406318:	cbnz	w0, 40634c <ferror@plt+0x34bc>
  40631c:	ldrb	w8, [x20]
  406320:	tbz	w8, #4, 406358 <ferror@plt+0x34c8>
  406324:	mov	x0, x20
  406328:	ldp	x20, x19, [sp, #16]
  40632c:	ldp	x29, x30, [sp], #32
  406330:	b	402d00 <clearerr_unlocked@plt>
  406334:	mov	x0, x20
  406338:	bl	402c80 <fflush_unlocked@plt>
  40633c:	cbz	w0, 406358 <ferror@plt+0x34c8>
  406340:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  406344:	add	x1, x1, #0xbc1
  406348:	b	40636c <ferror@plt+0x34dc>
  40634c:	mov	x0, x20
  406350:	bl	4115a0 <ferror@plt+0xe710>
  406354:	cbnz	w0, 406364 <ferror@plt+0x34d4>
  406358:	ldp	x20, x19, [sp, #16]
  40635c:	ldp	x29, x30, [sp], #32
  406360:	ret
  406364:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  406368:	add	x1, x1, #0x6c5
  40636c:	mov	w2, #0x5                   	// #5
  406370:	mov	x0, xzr
  406374:	bl	402d70 <dcgettext@plt>
  406378:	mov	x1, x19
  40637c:	bl	406878 <ferror@plt+0x39e8>
  406380:	sub	sp, sp, #0x120
  406384:	stp	x26, x25, [sp, #224]
  406388:	adrp	x25, 426000 <_obstack_memory_used@@Base+0x141b0>
  40638c:	ldr	w8, [x25, #968]
  406390:	stp	x24, x23, [sp, #240]
  406394:	mov	x23, x2
  406398:	mov	x24, x1
  40639c:	cmp	x8, x2
  4063a0:	stp	x29, x30, [sp, #192]
  4063a4:	stp	x28, x27, [sp, #208]
  4063a8:	stp	x22, x21, [sp, #256]
  4063ac:	stp	x20, x19, [sp, #272]
  4063b0:	add	x29, sp, #0xc0
  4063b4:	str	x3, [sp, #16]
  4063b8:	str	x0, [sp, #32]
  4063bc:	b.cs	406598 <ferror@plt+0x3708>  // b.hs, b.nlast
  4063c0:	add	x9, x0, #0x8
  4063c4:	str	x9, [sp, #8]
  4063c8:	b	4063fc <ferror@plt+0x356c>
  4063cc:	ldr	x10, [sp, #32]
  4063d0:	sub	x8, x23, x20
  4063d4:	add	x0, x10, x19, lsl #4
  4063d8:	add	x1, x10, x20, lsl #4
  4063dc:	lsl	x2, x8, #4
  4063e0:	bl	402770 <memmove@plt>
  4063e4:	ldr	w8, [x25, #968]
  4063e8:	add	x9, x19, x23
  4063ec:	sub	x23, x9, x20
  4063f0:	add	x24, x24, x19
  4063f4:	cmp	x23, x8
  4063f8:	b.ls	406598 <ferror@plt+0x3708>  // b.plast
  4063fc:	mov	w8, w8
  406400:	cmp	x23, x8
  406404:	b.cs	4064c8 <ferror@plt+0x3638>  // b.hs, b.nlast
  406408:	mov	x19, xzr
  40640c:	mov	x20, xzr
  406410:	mov	x9, x23
  406414:	udiv	x10, x19, x8
  406418:	neg	x11, x19
  40641c:	madd	x10, x10, x8, x11
  406420:	add	x8, x8, x10
  406424:	subs	x8, x9, x8
  406428:	b.ls	4063cc <ferror@plt+0x353c>  // b.plast
  40642c:	sub	x0, x29, #0x10
  406430:	mov	w1, wzr
  406434:	mov	x21, x24
  406438:	mov	x22, x23
  40643c:	add	x26, x8, #0x1
  406440:	bl	408fd4 <ferror@plt+0x6144>
  406444:	ldr	x8, [sp, #32]
  406448:	ldur	x27, [x29, #-16]
  40644c:	mov	x24, x0
  406450:	add	x2, sp, #0x30
  406454:	add	x25, x8, x20, lsl #4
  406458:	mov	x0, x25
  40645c:	mov	x1, x26
  406460:	bl	4085d4 <ferror@plt+0x5744>
  406464:	mov	x23, x0
  406468:	cmp	x0, x26
  40646c:	b.cs	406478 <ferror@plt+0x35e8>  // b.hs, b.nlast
  406470:	cmp	x23, #0x1
  406474:	b.ls	406578 <ferror@plt+0x36e8>  // b.plast
  406478:	ldr	x5, [sp, #48]
  40647c:	add	x28, x24, #0xd
  406480:	cmp	x21, x26
  406484:	csel	x1, x21, x26, cc  // cc = lo, ul, last
  406488:	mov	x0, x25
  40648c:	mov	x2, x23
  406490:	mov	x3, x27
  406494:	mov	x4, x28
  406498:	bl	408840 <ferror@plt+0x59b0>
  40649c:	ldr	x10, [sp, #32]
  4064a0:	subs	x8, x21, x23
  4064a4:	csel	x8, xzr, x8, cc  // cc = lo, ul, last
  4064a8:	add	x20, x23, x20
  4064ac:	add	x9, x10, x19, lsl #4
  4064b0:	add	x19, x19, #0x1
  4064b4:	stp	x28, x24, [x9]
  4064b8:	mov	x24, x8
  4064bc:	mov	x23, x22
  4064c0:	adrp	x25, 426000 <_obstack_memory_used@@Base+0x141b0>
  4064c4:	b	4063d0 <ferror@plt+0x3540>
  4064c8:	ldr	x21, [sp, #8]
  4064cc:	mov	x20, xzr
  4064d0:	mov	x19, xzr
  4064d4:	str	x23, [sp, #24]
  4064d8:	b	406530 <ferror@plt+0x36a0>
  4064dc:	ldr	x5, [sp, #48]
  4064e0:	add	x28, x24, #0xd
  4064e4:	cmp	x22, x27
  4064e8:	csel	x1, x22, x27, cc  // cc = lo, ul, last
  4064ec:	mov	x0, x25
  4064f0:	mov	x2, x23
  4064f4:	mov	x3, x26
  4064f8:	mov	x4, x28
  4064fc:	bl	408840 <ferror@plt+0x59b0>
  406500:	stp	x28, x24, [x21, #-8]
  406504:	subs	x8, x22, x23
  406508:	adrp	x25, 426000 <_obstack_memory_used@@Base+0x141b0>
  40650c:	add	x20, x23, x20
  406510:	ldr	x23, [sp, #24]
  406514:	csel	x24, xzr, x8, cc  // cc = lo, ul, last
  406518:	ldr	w8, [x25, #968]
  40651c:	add	x19, x19, #0x1
  406520:	sub	x9, x23, x20
  406524:	add	x21, x21, #0x10
  406528:	cmp	x9, x8
  40652c:	b.cc	406414 <ferror@plt+0x3584>  // b.lo, b.ul, b.last
  406530:	sub	x0, x29, #0x10
  406534:	mov	w1, wzr
  406538:	mov	x22, x24
  40653c:	bl	408fd4 <ferror@plt+0x6144>
  406540:	ldr	x8, [sp, #32]
  406544:	ldr	w27, [x25, #968]
  406548:	ldur	x26, [x29, #-16]
  40654c:	mov	x24, x0
  406550:	add	x25, x8, x20, lsl #4
  406554:	add	x2, sp, #0x30
  406558:	mov	x0, x25
  40655c:	mov	x1, x27
  406560:	bl	4085d4 <ferror@plt+0x5744>
  406564:	mov	x23, x0
  406568:	cmp	x0, x27
  40656c:	b.cs	4064dc <ferror@plt+0x364c>  // b.hs, b.nlast
  406570:	cmp	x23, #0x1
  406574:	b.hi	4064dc <ferror@plt+0x364c>  // b.pmore
  406578:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  40657c:	add	x1, x1, #0xb49
  406580:	mov	w2, #0x5                   	// #5
  406584:	mov	x0, xzr
  406588:	bl	402d70 <dcgettext@plt>
  40658c:	lsl	x8, x23, #4
  406590:	ldr	x1, [x25, x8]
  406594:	bl	406878 <ferror@plt+0x39e8>
  406598:	mov	x22, x24
  40659c:	cmp	x24, x23
  4065a0:	str	x23, [sp, #24]
  4065a4:	b.cs	4066f8 <ferror@plt+0x3868>  // b.hs, b.nlast
  4065a8:	ldr	x8, [sp, #24]
  4065ac:	adrp	x24, 414000 <_obstack_memory_used@@Base+0x21b0>
  4065b0:	adrp	x25, 426000 <_obstack_memory_used@@Base+0x141b0>
  4065b4:	mov	x26, xzr
  4065b8:	sub	x19, x8, x22
  4065bc:	ldr	x8, [sp, #32]
  4065c0:	add	x24, x24, #0xbd0
  4065c4:	adrp	x20, 426000 <_obstack_memory_used@@Base+0x141b0>
  4065c8:	add	x25, x25, #0xa40
  4065cc:	add	x23, x8, x22, lsl #4
  4065d0:	mov	x9, x22
  4065d4:	b	4065ec <ferror@plt+0x375c>
  4065d8:	add	x8, x26, #0xd
  4065dc:	stp	x8, x26, [x23]
  4065e0:	subs	x19, x19, #0x1
  4065e4:	add	x23, x23, #0x10
  4065e8:	b.eq	4066f8 <ferror@plt+0x3868>  // b.none
  4065ec:	ldr	x28, [x23]
  4065f0:	mov	x1, x24
  4065f4:	mov	x0, x28
  4065f8:	bl	402bb0 <strcmp@plt>
  4065fc:	ldr	x8, [sp, #16]
  406600:	mov	w27, w0
  406604:	cbz	x8, 406668 <ferror@plt+0x37d8>
  406608:	ldr	x0, [sp, #16]
  40660c:	mov	x1, x28
  406610:	bl	402bb0 <strcmp@plt>
  406614:	cbz	w27, 406668 <ferror@plt+0x37d8>
  406618:	cbnz	w0, 406668 <ferror@plt+0x37d8>
  40661c:	cbnz	x26, 4065d8 <ferror@plt+0x3748>
  406620:	add	x0, sp, #0x28
  406624:	mov	w1, wzr
  406628:	bl	408fd4 <ferror@plt+0x6144>
  40662c:	ldr	x27, [sp, #40]
  406630:	mov	x26, x0
  406634:	sub	x2, x29, #0x10
  406638:	mov	w1, #0x1                   	// #1
  40663c:	mov	x0, x23
  406640:	bl	4085d4 <ferror@plt+0x5744>
  406644:	cbz	x0, 406860 <ferror@plt+0x39d0>
  406648:	ldur	x5, [x29, #-16]
  40664c:	mov	x2, x0
  406650:	add	x4, x26, #0xd
  406654:	mov	x0, x23
  406658:	mov	x1, xzr
  40665c:	mov	x3, x27
  406660:	bl	408840 <ferror@plt+0x59b0>
  406664:	b	4065d8 <ferror@plt+0x3748>
  406668:	ldr	w8, [x20, #2616]
  40666c:	cbnz	w8, 406698 <ferror@plt+0x3808>
  406670:	mov	w1, #0x1                   	// #1
  406674:	mov	w0, wzr
  406678:	mov	x2, x25
  40667c:	bl	402d60 <__fxstat@plt>
  406680:	cbz	w0, 406690 <ferror@plt+0x3800>
  406684:	bl	402e00 <__errno_location@plt>
  406688:	ldr	w8, [x0]
  40668c:	b	406694 <ferror@plt+0x3804>
  406690:	mov	w8, #0xffffffff            	// #-1
  406694:	str	w8, [x20, #2616]
  406698:	cmp	w8, #0x0
  40669c:	csel	x21, x25, xzr, lt  // lt = tstop
  4066a0:	tbz	w8, #31, 4066f8 <ferror@plt+0x3868>
  4066a4:	cbz	w27, 4066c0 <ferror@plt+0x3830>
  4066a8:	ldr	x1, [x23]
  4066ac:	add	x2, sp, #0x30
  4066b0:	mov	w0, wzr
  4066b4:	bl	402e30 <__xstat@plt>
  4066b8:	cbnz	w0, 4065e0 <ferror@plt+0x3750>
  4066bc:	b	4066d4 <ferror@plt+0x3844>
  4066c0:	add	x2, sp, #0x30
  4066c4:	mov	w0, wzr
  4066c8:	mov	w1, wzr
  4066cc:	bl	402d60 <__fxstat@plt>
  4066d0:	cbnz	w0, 4065e0 <ferror@plt+0x3750>
  4066d4:	ldr	x8, [sp, #56]
  4066d8:	ldr	x9, [x21, #8]
  4066dc:	cmp	x8, x9
  4066e0:	b.ne	4065e0 <ferror@plt+0x3750>  // b.any
  4066e4:	ldr	x8, [sp, #48]
  4066e8:	ldr	x9, [x21]
  4066ec:	cmp	x8, x9
  4066f0:	b.ne	4065e0 <ferror@plt+0x3750>  // b.any
  4066f4:	b	40661c <ferror@plt+0x378c>
  4066f8:	ldp	x19, x20, [sp, #24]
  4066fc:	mov	x24, x22
  406700:	add	x23, x20, #0x10
  406704:	add	x2, sp, #0x30
  406708:	mov	x0, x20
  40670c:	mov	x1, x19
  406710:	bl	4085d4 <ferror@plt+0x5744>
  406714:	mov	x25, x0
  406718:	cmp	x0, x19
  40671c:	b.ne	406750 <ferror@plt+0x38c0>  // b.any
  406720:	ldr	x0, [sp, #16]
  406724:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  406728:	add	x1, x1, #0xdc9
  40672c:	bl	4068ec <ferror@plt+0x3a5c>
  406730:	cbnz	x0, 4067e8 <ferror@plt+0x3958>
  406734:	bl	402e00 <__errno_location@plt>
  406738:	cmp	x19, #0x3
  40673c:	b.cc	406824 <ferror@plt+0x3994>  // b.lo, b.ul, b.last
  406740:	ldr	w8, [x0]
  406744:	cmp	w8, #0x18
  406748:	b.eq	406758 <ferror@plt+0x38c8>  // b.none
  40674c:	b	406824 <ferror@plt+0x3994>
  406750:	cmp	x25, #0x2
  406754:	b.ls	406840 <ferror@plt+0x39b0>  // b.plast
  406758:	ldr	x27, [sp, #48]
  40675c:	mov	x22, x19
  406760:	add	x26, x20, x25, lsl #4
  406764:	sub	x19, x27, #0x8
  406768:	ldr	x0, [x19, x25, lsl #3]
  40676c:	ldr	x1, [x26, #-16]!
  406770:	sub	x25, x25, #0x1
  406774:	bl	4062f8 <ferror@plt+0x3468>
  406778:	cmp	x25, #0x2
  40677c:	cset	w1, hi  // hi = pmore
  406780:	sub	x0, x29, #0x10
  406784:	bl	408fd4 <ferror@plt+0x6144>
  406788:	cbz	x0, 406768 <ferror@plt+0x38d8>
  40678c:	ldur	x3, [x29, #-16]
  406790:	cmp	x24, x25
  406794:	csel	x19, x24, x25, cc  // cc = lo, ul, last
  406798:	mov	x21, x24
  40679c:	add	x24, x0, #0xd
  4067a0:	mov	x28, x0
  4067a4:	mov	x0, x20
  4067a8:	mov	x1, x19
  4067ac:	mov	x2, x25
  4067b0:	mov	x4, x24
  4067b4:	mov	x5, x27
  4067b8:	bl	408840 <ferror@plt+0x59b0>
  4067bc:	stp	x24, x28, [x20]
  4067c0:	sub	x20, x22, x25
  4067c4:	lsl	x2, x20, #4
  4067c8:	mov	x0, x23
  4067cc:	mov	x1, x26
  4067d0:	bl	402770 <memmove@plt>
  4067d4:	sub	x8, x21, x19
  4067d8:	add	x19, x20, #0x1
  4067dc:	ldr	x20, [sp, #32]
  4067e0:	add	x24, x8, #0x1
  4067e4:	b	406704 <ferror@plt+0x3874>
  4067e8:	ldr	x5, [sp, #48]
  4067ec:	ldr	x4, [sp, #16]
  4067f0:	mov	x3, x0
  4067f4:	mov	x0, x20
  4067f8:	mov	x1, x24
  4067fc:	mov	x2, x19
  406800:	bl	408840 <ferror@plt+0x59b0>
  406804:	ldp	x20, x19, [sp, #272]
  406808:	ldp	x22, x21, [sp, #256]
  40680c:	ldp	x24, x23, [sp, #240]
  406810:	ldp	x26, x25, [sp, #224]
  406814:	ldp	x28, x27, [sp, #208]
  406818:	ldp	x29, x30, [sp, #192]
  40681c:	add	sp, sp, #0x120
  406820:	ret
  406824:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  406828:	add	x1, x1, #0xb49
  40682c:	mov	w2, #0x5                   	// #5
  406830:	mov	x0, xzr
  406834:	bl	402d70 <dcgettext@plt>
  406838:	ldr	x1, [sp, #16]
  40683c:	bl	406878 <ferror@plt+0x39e8>
  406840:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  406844:	add	x1, x1, #0xb49
  406848:	mov	w2, #0x5                   	// #5
  40684c:	mov	x0, xzr
  406850:	bl	402d70 <dcgettext@plt>
  406854:	lsl	x8, x25, #4
  406858:	ldr	x1, [x20, x8]
  40685c:	bl	406878 <ferror@plt+0x39e8>
  406860:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  406864:	add	x1, x1, #0xb49
  406868:	mov	w2, #0x5                   	// #5
  40686c:	bl	402d70 <dcgettext@plt>
  406870:	ldr	x1, [x23]
  406874:	bl	406878 <ferror@plt+0x39e8>
  406878:	stp	x29, x30, [sp, #-48]!
  40687c:	str	x21, [sp, #16]
  406880:	stp	x20, x19, [sp, #32]
  406884:	mov	x29, sp
  406888:	mov	x21, x1
  40688c:	mov	x19, x0
  406890:	bl	402e00 <__errno_location@plt>
  406894:	ldr	w20, [x0]
  406898:	cbnz	x21, 4068b4 <ferror@plt+0x3a24>
  40689c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  4068a0:	add	x1, x1, #0xee6
  4068a4:	mov	w2, #0x5                   	// #5
  4068a8:	mov	x0, xzr
  4068ac:	bl	402d70 <dcgettext@plt>
  4068b0:	mov	x21, x0
  4068b4:	mov	w1, #0x3                   	// #3
  4068b8:	mov	w0, wzr
  4068bc:	mov	x2, x21
  4068c0:	bl	40ebe8 <ferror@plt+0xbd58>
  4068c4:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x21b0>
  4068c8:	mov	x4, x0
  4068cc:	add	x2, x2, #0xedf
  4068d0:	mov	w0, #0x2                   	// #2
  4068d4:	mov	w1, w20
  4068d8:	mov	x3, x19
  4068dc:	bl	4027f0 <error@plt>
  4068e0:	ldr	x0, [x0]
  4068e4:	ldr	x1, [x1]
  4068e8:	b	402bb0 <strcmp@plt>
  4068ec:	stp	x29, x30, [sp, #-48]!
  4068f0:	stp	x22, x21, [sp, #16]
  4068f4:	stp	x20, x19, [sp, #32]
  4068f8:	ldrb	w8, [x1]
  4068fc:	mov	x19, x0
  406900:	mov	x29, sp
  406904:	cmp	w8, #0x77
  406908:	b.eq	40694c <ferror@plt+0x3abc>  // b.none
  40690c:	cmp	w8, #0x72
  406910:	b.ne	406a00 <ferror@plt+0x3b70>  // b.any
  406914:	mov	x20, x1
  406918:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  40691c:	add	x1, x1, #0xbd0
  406920:	mov	x0, x19
  406924:	bl	402bb0 <strcmp@plt>
  406928:	cbz	w0, 406998 <ferror@plt+0x3b08>
  40692c:	mov	w1, #0x80000               	// #524288
  406930:	mov	x0, x19
  406934:	bl	402950 <open@plt>
  406938:	tbnz	w0, #31, 4069b0 <ferror@plt+0x3b20>
  40693c:	mov	x1, x20
  406940:	bl	4029f0 <fdopen@plt>
  406944:	mov	x19, x0
  406948:	b	4069b4 <ferror@plt+0x3b24>
  40694c:	cbz	x19, 4069e4 <ferror@plt+0x3b54>
  406950:	mov	w0, #0x1                   	// #1
  406954:	mov	x1, xzr
  406958:	bl	402db0 <ftruncate@plt>
  40695c:	cbz	w0, 4069e4 <ferror@plt+0x3b54>
  406960:	bl	402e00 <__errno_location@plt>
  406964:	adrp	x22, 426000 <_obstack_memory_used@@Base+0x141b0>
  406968:	ldr	w8, [x22, #2616]
  40696c:	ldr	w20, [x0]
  406970:	cbnz	w8, 4069cc <ferror@plt+0x3b3c>
  406974:	adrp	x2, 426000 <_obstack_memory_used@@Base+0x141b0>
  406978:	mov	x21, x0
  40697c:	add	x2, x2, #0xa40
  406980:	mov	w1, #0x1                   	// #1
  406984:	mov	w0, wzr
  406988:	bl	402d60 <__fxstat@plt>
  40698c:	cbz	w0, 4069c4 <ferror@plt+0x3b34>
  406990:	ldr	w8, [x21]
  406994:	b	4069c8 <ferror@plt+0x3b38>
  406998:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  40699c:	ldr	x19, [x8, #1344]
  4069a0:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  4069a4:	mov	w9, #0x1                   	// #1
  4069a8:	strb	w9, [x8, #1384]
  4069ac:	b	4069b4 <ferror@plt+0x3b24>
  4069b0:	mov	x19, xzr
  4069b4:	mov	w1, #0x2                   	// #2
  4069b8:	mov	x0, x19
  4069bc:	bl	40b600 <ferror@plt+0x8770>
  4069c0:	b	4069ec <ferror@plt+0x3b5c>
  4069c4:	mov	w8, #0xffffffff            	// #-1
  4069c8:	str	w8, [x22, #2616]
  4069cc:	tbz	w8, #31, 406a20 <ferror@plt+0x3b90>
  4069d0:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  4069d4:	ldr	w8, [x8, #2640]
  4069d8:	and	w8, w8, #0xf000
  4069dc:	cmp	w8, #0x8, lsl #12
  4069e0:	b.eq	406a20 <ferror@plt+0x3b90>  // b.none
  4069e4:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  4069e8:	ldr	x19, [x8, #1336]
  4069ec:	mov	x0, x19
  4069f0:	ldp	x20, x19, [sp, #32]
  4069f4:	ldp	x22, x21, [sp, #16]
  4069f8:	ldp	x29, x30, [sp], #48
  4069fc:	ret
  406a00:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x21b0>
  406a04:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  406a08:	adrp	x3, 414000 <_obstack_memory_used@@Base+0x21b0>
  406a0c:	add	x0, x0, #0xb6a
  406a10:	add	x1, x1, #0x3b1
  406a14:	add	x3, x3, #0xb93
  406a18:	mov	w2, #0x3d6                 	// #982
  406a1c:	bl	402df0 <__assert_fail@plt>
  406a20:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  406a24:	add	x1, x1, #0xb55
  406a28:	mov	w2, #0x5                   	// #5
  406a2c:	mov	x0, xzr
  406a30:	bl	402d70 <dcgettext@plt>
  406a34:	mov	x21, x0
  406a38:	mov	w1, #0x3                   	// #3
  406a3c:	mov	w0, wzr
  406a40:	mov	x2, x19
  406a44:	bl	40ebe8 <ferror@plt+0xbd58>
  406a48:	mov	x3, x0
  406a4c:	mov	w0, #0x2                   	// #2
  406a50:	mov	w1, w20
  406a54:	mov	x2, x21
  406a58:	bl	4027f0 <error@plt>
  406a5c:	ldrb	w8, [x0, #48]
  406a60:	cbnz	w8, 406a6c <ferror@plt+0x3bdc>
  406a64:	ldrb	w8, [x0, #49]
  406a68:	cbz	w8, 406a74 <ferror@plt+0x3be4>
  406a6c:	mov	w8, #0x62                  	// #98
  406a70:	strb	w8, [x1], #1
  406a74:	ldr	x8, [x0, #32]
  406a78:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x141b0>
  406a7c:	add	x9, x9, #0x820
  406a80:	cmp	x8, x9
  406a84:	b.eq	406b24 <ferror@plt+0x3c94>  // b.none
  406a88:	ldr	x8, [x0, #40]
  406a8c:	cbz	x8, 406a98 <ferror@plt+0x3c08>
  406a90:	mov	w8, #0x66                  	// #102
  406a94:	strb	w8, [x1], #1
  406a98:	ldrb	w8, [x0, #52]
  406a9c:	cbz	w8, 406aa8 <ferror@plt+0x3c18>
  406aa0:	mov	w8, #0x67                  	// #103
  406aa4:	strb	w8, [x1], #1
  406aa8:	ldrb	w8, [x0, #53]
  406aac:	cbz	w8, 406ab8 <ferror@plt+0x3c28>
  406ab0:	mov	w8, #0x68                  	// #104
  406ab4:	strb	w8, [x1], #1
  406ab8:	ldr	x8, [x0, #32]
  406abc:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x141b0>
  406ac0:	add	x9, x9, #0x720
  406ac4:	cmp	x8, x9
  406ac8:	b.eq	406b38 <ferror@plt+0x3ca8>  // b.none
  406acc:	ldrb	w8, [x0, #54]
  406ad0:	cbz	w8, 406adc <ferror@plt+0x3c4c>
  406ad4:	mov	w8, #0x4d                  	// #77
  406ad8:	strb	w8, [x1], #1
  406adc:	ldrb	w8, [x0, #50]
  406ae0:	cbz	w8, 406aec <ferror@plt+0x3c5c>
  406ae4:	mov	w8, #0x6e                  	// #110
  406ae8:	strb	w8, [x1], #1
  406aec:	ldrb	w8, [x0, #51]
  406af0:	cbz	w8, 406afc <ferror@plt+0x3c6c>
  406af4:	mov	w8, #0x52                  	// #82
  406af8:	strb	w8, [x1], #1
  406afc:	ldrb	w8, [x0, #55]
  406b00:	cbz	w8, 406b0c <ferror@plt+0x3c7c>
  406b04:	mov	w8, #0x72                  	// #114
  406b08:	strb	w8, [x1], #1
  406b0c:	ldrb	w8, [x0, #56]
  406b10:	cbz	w8, 406b1c <ferror@plt+0x3c8c>
  406b14:	mov	w8, #0x56                  	// #86
  406b18:	strb	w8, [x1], #1
  406b1c:	strb	wzr, [x1]
  406b20:	ret
  406b24:	mov	w8, #0x64                  	// #100
  406b28:	strb	w8, [x1], #1
  406b2c:	ldr	x8, [x0, #40]
  406b30:	cbnz	x8, 406a90 <ferror@plt+0x3c00>
  406b34:	b	406a98 <ferror@plt+0x3c08>
  406b38:	mov	w8, #0x69                  	// #105
  406b3c:	strb	w8, [x1], #1
  406b40:	ldrb	w8, [x0, #54]
  406b44:	cbnz	w8, 406ad4 <ferror@plt+0x3c44>
  406b48:	b	406adc <ferror@plt+0x3c4c>
  406b4c:	sub	sp, sp, #0x90
  406b50:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  406b54:	ldrb	w8, [x8, #1531]
  406b58:	stp	x29, x30, [sp, #48]
  406b5c:	stp	x28, x27, [sp, #64]
  406b60:	stp	x26, x25, [sp, #80]
  406b64:	stp	x24, x23, [sp, #96]
  406b68:	stp	x22, x21, [sp, #112]
  406b6c:	stp	x20, x19, [sp, #128]
  406b70:	mov	x19, x0
  406b74:	ldrb	w9, [x19, #48]
  406b78:	cmp	w8, #0x0
  406b7c:	mov	w8, #0xa                   	// #10
  406b80:	mov	w0, wzr
  406b84:	csel	w20, wzr, w8, ne  // ne = any
  406b88:	add	x29, sp, #0x30
  406b8c:	cbnz	w9, 406e3c <ferror@plt+0x3fac>
  406b90:	str	x2, [sp]
  406b94:	adrp	x10, 426000 <_obstack_memory_used@@Base+0x141b0>
  406b98:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x141b0>
  406b9c:	ldr	x8, [x19, #8]
  406ba0:	ldp	x2, x11, [x19, #32]
  406ba4:	ldr	x10, [x10, #1168]
  406ba8:	ldr	x23, [x9, #1536]
  406bac:	mov	x21, x1
  406bb0:	cmp	x8, x2
  406bb4:	sub	x28, x10, #0x22
  406bb8:	stur	x11, [x29, #-8]
  406bbc:	b.eq	406bd8 <ferror@plt+0x3d48>  // b.none
  406bc0:	ldr	x0, [x19]
  406bc4:	add	x8, x0, x8
  406bc8:	sub	x1, x8, x2
  406bcc:	bl	402770 <memmove@plt>
  406bd0:	ldr	x8, [x19, #32]
  406bd4:	stp	x8, xzr, [x19, #8]
  406bd8:	ldur	x9, [x29, #-8]
  406bdc:	ldr	x24, [x19]
  406be0:	ldr	x25, [x19, #24]
  406be4:	stur	w20, [x29, #-20]
  406be8:	adrp	x20, 426000 <_obstack_memory_used@@Base+0x141b0>
  406bec:	add	x9, x9, #0x1
  406bf0:	add	x20, x20, #0x620
  406bf4:	str	x9, [sp, #16]
  406bf8:	stur	x19, [x29, #-16]
  406bfc:	str	x21, [sp, #8]
  406c00:	b	406c24 <ferror@plt+0x3d94>
  406c04:	mov	w9, #0x4                   	// #4
  406c08:	lsl	x25, x9, #5
  406c0c:	mov	x1, x25
  406c10:	bl	41080c <ferror@plt+0xd97c>
  406c14:	ldr	x8, [x19, #8]
  406c18:	mov	x24, x0
  406c1c:	str	x0, [x19]
  406c20:	str	x25, [x19, #24]
  406c24:	ldr	x9, [x19, #16]
  406c28:	ldur	x10, [x29, #-8]
  406c2c:	add	x22, x24, x8
  406c30:	add	x8, x24, x25
  406c34:	sub	x19, x8, x9, lsl #5
  406c38:	msub	x10, x10, x9, x8
  406c3c:	sub	x21, x10, x22
  406c40:	cbz	x9, 406c7c <ferror@plt+0x3dec>
  406c44:	neg	x9, x9
  406c48:	add	x8, x8, x9, lsl #5
  406c4c:	ldr	x10, [x19]
  406c50:	ldr	x8, [x8, #8]
  406c54:	add	x24, x10, x8
  406c58:	b	406c7c <ferror@plt+0x3dec>
  406c5c:	mov	x25, x19
  406c60:	mov	x26, x24
  406c64:	ldur	x8, [x29, #-16]
  406c68:	mov	x22, x27
  406c6c:	mov	x19, x25
  406c70:	mov	x24, x26
  406c74:	ldrb	w8, [x8, #48]
  406c78:	cbnz	w8, 406dc8 <ferror@plt+0x3f38>
  406c7c:	ldr	x9, [sp, #16]
  406c80:	cmp	x9, x21
  406c84:	b.cs	406dbc <ferror@plt+0x3f2c>  // b.hs, b.nlast
  406c88:	ldr	x26, [sp, #8]
  406c8c:	sub	x8, x21, #0x1
  406c90:	udiv	x25, x8, x9
  406c94:	mov	w1, #0x1                   	// #1
  406c98:	mov	x0, x22
  406c9c:	mov	x2, x25
  406ca0:	mov	x3, x26
  406ca4:	bl	402b50 <fread_unlocked@plt>
  406ca8:	cmp	x0, x25
  406cac:	add	x8, x22, x0
  406cb0:	b.eq	406cf8 <ferror@plt+0x3e68>  // b.none
  406cb4:	ldr	w9, [x26]
  406cb8:	tbnz	w9, #5, 406e5c <ferror@plt+0x3fcc>
  406cbc:	tbz	w9, #4, 406cf8 <ferror@plt+0x3e68>
  406cc0:	ldur	x10, [x29, #-16]
  406cc4:	ldr	x9, [x10]
  406cc8:	cmp	x9, x8
  406ccc:	mov	w9, #0x1                   	// #1
  406cd0:	strb	w9, [x10, #48]
  406cd4:	b.eq	406e1c <ferror@plt+0x3f8c>  // b.none
  406cd8:	cmp	x24, x8
  406cdc:	mov	x27, x24
  406ce0:	b.eq	406cfc <ferror@plt+0x3e6c>  // b.none
  406ce4:	ldurb	w9, [x8, #-1]
  406ce8:	ldur	w10, [x29, #-20]
  406cec:	cmp	w9, w10
  406cf0:	b.eq	406cf8 <ferror@plt+0x3e68>  // b.none
  406cf4:	strb	w10, [x8], #1
  406cf8:	mov	x27, x8
  406cfc:	sub	x21, x21, x0
  406d00:	sub	x2, x27, x22
  406d04:	mov	x0, x22
  406d08:	ldur	w22, [x29, #-20]
  406d0c:	mov	w1, w22
  406d10:	bl	402d30 <memchr@plt>
  406d14:	cbz	x0, 406c5c <ferror@plt+0x3dcc>
  406d18:	mov	x25, x19
  406d1c:	b	406d50 <ferror@plt+0x3ec0>
  406d20:	mov	x0, x25
  406d24:	mov	x1, x23
  406d28:	bl	40838c <ferror@plt+0x54fc>
  406d2c:	mov	x24, x0
  406d30:	stur	x24, [x19, #-16]
  406d34:	sub	x2, x27, x26
  406d38:	mov	x0, x26
  406d3c:	mov	w1, w22
  406d40:	bl	402d30 <memchr@plt>
  406d44:	mov	x24, x26
  406d48:	mov	x19, x25
  406d4c:	cbz	x0, 406c64 <ferror@plt+0x3dd4>
  406d50:	mov	x26, x0
  406d54:	strb	wzr, [x26], #1
  406d58:	sub	x8, x26, x24
  406d5c:	str	x24, [x25, #-32]!
  406d60:	cmp	x28, x8
  406d64:	str	x8, [x25, #8]
  406d68:	csel	x28, x28, x8, hi  // hi = pmore
  406d6c:	ldur	x8, [x29, #-8]
  406d70:	sub	x21, x21, x8
  406d74:	cbz	x23, 406d34 <ferror@plt+0x3ea4>
  406d78:	ldr	x8, [x23, #16]
  406d7c:	cmn	x8, #0x1
  406d80:	b.eq	406d90 <ferror@plt+0x3f00>  // b.none
  406d84:	mov	x0, x25
  406d88:	mov	x1, x23
  406d8c:	bl	408258 <ferror@plt+0x53c8>
  406d90:	stur	x0, [x19, #-8]
  406d94:	ldr	x8, [x23]
  406d98:	cmn	x8, #0x1
  406d9c:	b.ne	406d20 <ferror@plt+0x3e90>  // b.any
  406da0:	ldrb	w8, [x23, #48]
  406da4:	cbz	w8, 406d30 <ferror@plt+0x3ea0>
  406da8:	sub	x24, x24, #0x1
  406dac:	ldrb	w8, [x24, #1]!
  406db0:	ldrb	w8, [x20, x8]
  406db4:	cbnz	w8, 406dac <ferror@plt+0x3f1c>
  406db8:	b	406d30 <ferror@plt+0x3ea0>
  406dbc:	mov	x27, x22
  406dc0:	mov	x25, x19
  406dc4:	mov	x26, x24
  406dc8:	ldur	x19, [x29, #-16]
  406dcc:	ldr	x0, [x19]
  406dd0:	ldr	x8, [x19, #24]
  406dd4:	sub	x9, x27, x0
  406dd8:	add	x10, x0, x8
  406ddc:	subs	x10, x10, x25
  406de0:	asr	x10, x10, #5
  406de4:	stp	x9, x10, [x19, #8]
  406de8:	b.ne	406e24 <ferror@plt+0x3f94>  // b.any
  406dec:	lsr	x9, x8, #5
  406df0:	cbz	x0, 406e10 <ferror@plt+0x3f80>
  406df4:	mov	x10, #0x5555555555555555    	// #6148914691236517205
  406df8:	movk	x10, #0x5540
  406dfc:	cmp	x8, x10
  406e00:	b.cs	406e18 <ferror@plt+0x3f88>  // b.hs, b.nlast
  406e04:	add	x8, x9, x8, lsr #6
  406e08:	add	x9, x8, #0x1
  406e0c:	b	406c08 <ferror@plt+0x3d78>
  406e10:	cbz	x9, 406c04 <ferror@plt+0x3d74>
  406e14:	tbz	x8, #63, 406c08 <ferror@plt+0x3d78>
  406e18:	bl	410aa0 <ferror@plt+0xdc10>
  406e1c:	mov	w0, wzr
  406e20:	b	406e3c <ferror@plt+0x3fac>
  406e24:	sub	x8, x27, x26
  406e28:	add	x9, x28, #0x22
  406e2c:	str	x8, [x19, #32]
  406e30:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  406e34:	mov	w0, #0x1                   	// #1
  406e38:	str	x9, [x8, #1168]
  406e3c:	ldp	x20, x19, [sp, #128]
  406e40:	ldp	x22, x21, [sp, #112]
  406e44:	ldp	x24, x23, [sp, #96]
  406e48:	ldp	x26, x25, [sp, #80]
  406e4c:	ldp	x28, x27, [sp, #64]
  406e50:	ldp	x29, x30, [sp, #48]
  406e54:	add	sp, sp, #0x90
  406e58:	ret
  406e5c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  406e60:	add	x1, x1, #0xd29
  406e64:	mov	w2, #0x5                   	// #5
  406e68:	mov	x0, xzr
  406e6c:	bl	402d70 <dcgettext@plt>
  406e70:	ldr	x1, [sp]
  406e74:	bl	406878 <ferror@plt+0x39e8>
  406e78:	stp	x29, x30, [sp, #-96]!
  406e7c:	stp	x28, x27, [sp, #16]
  406e80:	stp	x26, x25, [sp, #32]
  406e84:	stp	x24, x23, [sp, #48]
  406e88:	stp	x22, x21, [sp, #64]
  406e8c:	stp	x20, x19, [sp, #80]
  406e90:	mov	x29, sp
  406e94:	sub	sp, sp, #0x2, lsl #12
  406e98:	sub	sp, sp, #0x140
  406e9c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  406ea0:	ldr	x21, [x8, #1536]
  406ea4:	mov	x23, x1
  406ea8:	cbz	x21, 407bd0 <ferror@plt+0x4d40>
  406eac:	ldp	x28, x19, [x0, #16]
  406eb0:	stp	x0, x23, [sp, #112]
  406eb4:	add	x8, sp, #0x1, lsl #12
  406eb8:	ldp	x27, x20, [x23, #16]
  406ebc:	add	x8, x8, #0x30
  406ec0:	add	x9, sp, #0x1, lsl #12
  406ec4:	add	x9, x9, #0x170
  406ec8:	add	x8, x8, #0x9c
  406ecc:	adrp	x22, 426000 <_obstack_memory_used@@Base+0x141b0>
  406ed0:	str	x8, [sp, #40]
  406ed4:	add	x8, x9, #0x10
  406ed8:	add	x22, x22, #0x620
  406edc:	str	x8, [sp, #16]
  406ee0:	b	406f04 <ferror@plt+0x4074>
  406ee4:	mov	x0, x24
  406ee8:	mov	x1, x21
  406eec:	bl	40838c <ferror@plt+0x54fc>
  406ef0:	mov	x28, x0
  406ef4:	mov	x0, x23
  406ef8:	mov	x1, x21
  406efc:	bl	40838c <ferror@plt+0x54fc>
  406f00:	mov	x27, x0
  406f04:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  406f08:	ldp	x26, x25, [x21, #32]
  406f0c:	cmp	x28, x19
  406f10:	ldrb	w10, [x8, #1368]
  406f14:	csel	x9, x28, x19, hi  // hi = pmore
  406f18:	cmp	x27, x20
  406f1c:	csel	x8, x27, x20, hi  // hi = pmore
  406f20:	sub	x19, x9, x28
  406f24:	sub	x24, x8, x27
  406f28:	cbnz	w10, 406f5c <ferror@plt+0x40cc>
  406f2c:	ldrb	w10, [x21, #50]
  406f30:	cbnz	w10, 406f5c <ferror@plt+0x40cc>
  406f34:	ldrb	w10, [x21, #52]
  406f38:	cbnz	w10, 406f5c <ferror@plt+0x40cc>
  406f3c:	ldrb	w10, [x21, #53]
  406f40:	cbnz	w10, 406f5c <ferror@plt+0x40cc>
  406f44:	ldrb	w10, [x21, #54]
  406f48:	cbnz	w10, 406f5c <ferror@plt+0x40cc>
  406f4c:	ldrb	w10, [x21, #51]
  406f50:	cbnz	w10, 406f5c <ferror@plt+0x40cc>
  406f54:	ldrb	w10, [x21, #56]
  406f58:	cbz	w10, 407a08 <ferror@plt+0x4b78>
  406f5c:	orr	x10, x25, x26
  406f60:	cmp	x10, #0x0
  406f64:	cset	w11, ne  // ne = any
  406f68:	str	w11, [sp, #140]
  406f6c:	cbz	x10, 406f8c <ferror@plt+0x40fc>
  406f70:	add	x8, x24, x19
  406f74:	add	x0, x8, #0x2
  406f78:	cmp	x0, #0xfa1
  406f7c:	b.cs	406fac <ferror@plt+0x411c>  // b.hs, b.nlast
  406f80:	str	xzr, [sp, #96]
  406f84:	add	x20, sp, #0x90
  406f88:	b	406fb8 <ferror@plt+0x4128>
  406f8c:	ldrb	w10, [x9]
  406f90:	strb	wzr, [x9]
  406f94:	ldrb	w9, [x8]
  406f98:	mov	x20, x28
  406f9c:	mov	x28, x27
  406fa0:	mov	x23, x19
  406fa4:	stp	w9, w10, [sp, #104]
  406fa8:	b	406fe0 <ferror@plt+0x4150>
  406fac:	bl	41078c <ferror@plt+0xd8fc>
  406fb0:	mov	x20, x0
  406fb4:	str	x0, [sp, #96]
  406fb8:	add	x8, x20, x19
  406fbc:	add	x10, x8, #0x1
  406fc0:	mov	x23, xzr
  406fc4:	cbnz	x19, 407058 <ferror@plt+0x41c8>
  406fc8:	mov	x9, xzr
  406fcc:	mov	x28, x10
  406fd0:	strb	wzr, [x20, x23]
  406fd4:	cbnz	x24, 407098 <ferror@plt+0x4208>
  406fd8:	add	x8, x28, x9
  406fdc:	mov	x24, x9
  406fe0:	strb	wzr, [x8]
  406fe4:	ldrb	w8, [x21, #50]
  406fe8:	str	x20, [sp, #128]
  406fec:	cbz	w8, 407114 <ferror@plt+0x4284>
  406ff0:	sub	x0, x20, #0x1
  406ff4:	ldrb	w8, [x0, #1]!
  406ff8:	ldrb	w8, [x22, x8]
  406ffc:	cbnz	w8, 406ff4 <ferror@plt+0x4164>
  407000:	sub	x1, x28, #0x1
  407004:	ldrb	w8, [x1, #1]!
  407008:	ldrb	w8, [x22, x8]
  40700c:	cbnz	w8, 407004 <ferror@plt+0x4174>
  407010:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  407014:	ldr	w2, [x8, #1376]
  407018:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  40701c:	ldr	w3, [x8, #1380]
  407020:	bl	40fb98 <ferror@plt+0xcd08>
  407024:	mov	w20, w0
  407028:	ldr	w8, [sp, #140]
  40702c:	cbz	w8, 4070bc <ferror@plt+0x422c>
  407030:	ldr	x0, [sp, #96]
  407034:	bl	402c00 <free@plt>
  407038:	b	4070d0 <ferror@plt+0x4240>
  40703c:	ldrb	w8, [x8]
  407040:	add	x9, x23, #0x1
  407044:	strb	w8, [x20, x23]
  407048:	mov	x23, x9
  40704c:	subs	x19, x19, #0x1
  407050:	add	x28, x28, #0x1
  407054:	b.eq	406fc8 <ferror@plt+0x4138>  // b.none
  407058:	cbz	x26, 407068 <ferror@plt+0x41d8>
  40705c:	ldrb	w8, [x28]
  407060:	ldrb	w8, [x26, x8]
  407064:	cbnz	w8, 40704c <ferror@plt+0x41bc>
  407068:	mov	x8, x28
  40706c:	cbz	x25, 40703c <ferror@plt+0x41ac>
  407070:	ldrb	w8, [x28]
  407074:	add	x8, x25, x8
  407078:	b	40703c <ferror@plt+0x41ac>
  40707c:	ldrb	w8, [x8]
  407080:	add	x10, x9, #0x1
  407084:	strb	w8, [x28, x9]
  407088:	mov	x9, x10
  40708c:	subs	x24, x24, #0x1
  407090:	add	x27, x27, #0x1
  407094:	b.eq	406fd8 <ferror@plt+0x4148>  // b.none
  407098:	cbz	x26, 4070a8 <ferror@plt+0x4218>
  40709c:	ldrb	w8, [x27]
  4070a0:	ldrb	w8, [x26, x8]
  4070a4:	cbnz	w8, 40708c <ferror@plt+0x41fc>
  4070a8:	mov	x8, x27
  4070ac:	cbz	x25, 40707c <ferror@plt+0x41ec>
  4070b0:	ldrb	w8, [x27]
  4070b4:	add	x8, x25, x8
  4070b8:	b	40707c <ferror@plt+0x41ec>
  4070bc:	ldr	w8, [sp, #108]
  4070c0:	ldr	x9, [sp, #128]
  4070c4:	strb	w8, [x9, x23]
  4070c8:	ldr	w8, [sp, #104]
  4070cc:	strb	w8, [x28, x24]
  4070d0:	cbnz	w20, 407b9c <ferror@plt+0x4d0c>
  4070d4:	ldr	x21, [x21, #64]
  4070d8:	cbz	x21, 407bac <ferror@plt+0x4d1c>
  4070dc:	ldr	x8, [x21, #16]
  4070e0:	cmn	x8, #0x1
  4070e4:	b.eq	407170 <ferror@plt+0x42e0>  // b.none
  4070e8:	ldr	x24, [sp, #112]
  4070ec:	mov	x1, x21
  4070f0:	mov	x0, x24
  4070f4:	bl	408258 <ferror@plt+0x53c8>
  4070f8:	ldr	x23, [sp, #120]
  4070fc:	mov	x19, x0
  407100:	mov	x1, x21
  407104:	mov	x0, x23
  407108:	bl	408258 <ferror@plt+0x53c8>
  40710c:	mov	x20, x0
  407110:	b	40718c <ferror@plt+0x42fc>
  407114:	ldrb	w8, [x21, #52]
  407118:	cbz	w8, 4071f4 <ferror@plt+0x4364>
  40711c:	add	x1, sp, #0x1, lsl #12
  407120:	add	x1, x1, #0x170
  407124:	mov	x0, x20
  407128:	bl	402bf0 <strtold@plt>
  40712c:	sub	x1, x29, #0x10
  407130:	mov	x0, x28
  407134:	str	q0, [sp, #80]
  407138:	bl	402bf0 <strtold@plt>
  40713c:	ldr	x9, [sp, #4464]
  407140:	ldur	x8, [x29, #-16]
  407144:	cmp	x9, x20
  407148:	b.eq	407280 <ferror@plt+0x43f0>  // b.none
  40714c:	cmp	x8, x28
  407150:	b.eq	407334 <ferror@plt+0x44a4>  // b.none
  407154:	mov	v1.16b, v0.16b
  407158:	ldr	q0, [sp, #80]
  40715c:	str	q1, [sp, #64]
  407160:	bl	4126f8 <_obstack_memory_used@@Base+0x8a8>
  407164:	tbz	w0, #31, 407324 <ferror@plt+0x4494>
  407168:	mov	w20, #0xffffffff            	// #-1
  40716c:	b	407028 <ferror@plt+0x4198>
  407170:	ldp	x24, x23, [sp, #112]
  407174:	ldp	x8, x9, [x24]
  407178:	ldp	x10, x11, [x23]
  40717c:	add	x8, x8, x9
  407180:	add	x9, x10, x11
  407184:	sub	x19, x8, #0x1
  407188:	sub	x20, x9, #0x1
  40718c:	ldr	x8, [x21]
  407190:	cmn	x8, #0x1
  407194:	b.ne	406ee4 <ferror@plt+0x4054>  // b.any
  407198:	ldr	x28, [x24]
  40719c:	ldrb	w8, [x21, #48]
  4071a0:	ldr	x27, [x23]
  4071a4:	cbz	w8, 406f04 <ferror@plt+0x4074>
  4071a8:	cmp	x28, x19
  4071ac:	b.cs	4071cc <ferror@plt+0x433c>  // b.hs, b.nlast
  4071b0:	ldrb	w8, [x28]
  4071b4:	ldrb	w8, [x22, x8]
  4071b8:	cbz	w8, 4071cc <ferror@plt+0x433c>
  4071bc:	add	x28, x28, #0x1
  4071c0:	cmp	x19, x28
  4071c4:	b.ne	4071b0 <ferror@plt+0x4320>  // b.any
  4071c8:	mov	x28, x19
  4071cc:	cmp	x27, x20
  4071d0:	b.cs	406f04 <ferror@plt+0x4074>  // b.hs, b.nlast
  4071d4:	ldrb	w8, [x27]
  4071d8:	ldrb	w8, [x22, x8]
  4071dc:	cbz	w8, 406f04 <ferror@plt+0x4074>
  4071e0:	add	x27, x27, #0x1
  4071e4:	cmp	x20, x27
  4071e8:	b.ne	4071d4 <ferror@plt+0x4344>  // b.any
  4071ec:	mov	x27, x20
  4071f0:	b	406f04 <ferror@plt+0x4074>
  4071f4:	ldrb	w8, [x21, #53]
  4071f8:	cbz	w8, 40728c <ferror@plt+0x43fc>
  4071fc:	sub	x0, x20, #0x1
  407200:	ldrb	w9, [x0, #1]!
  407204:	ldrb	w8, [x22, x9]
  407208:	cbnz	w8, 407200 <ferror@plt+0x4370>
  40720c:	sub	x1, x28, #0x1
  407210:	ldrb	w8, [x1, #1]!
  407214:	ldrb	w10, [x22, x8]
  407218:	cbnz	w10, 407210 <ferror@plt+0x4380>
  40721c:	cmp	w9, #0x2d
  407220:	cinc	x14, x0, eq  // eq = none
  407224:	mov	x11, x14
  407228:	ldrb	w13, [x11], #1
  40722c:	sub	w10, w13, #0x30
  407230:	cmp	w10, #0x9
  407234:	b.hi	40733c <ferror@plt+0x44ac>  // b.pmore
  407238:	adrp	x10, 426000 <_obstack_memory_used@@Base+0x141b0>
  40723c:	ldr	w15, [x10, #1380]
  407240:	mov	w10, wzr
  407244:	ldrb	w16, [x11]
  407248:	and	w12, w10, #0xff
  40724c:	cmp	w12, w13, uxtb
  407250:	csel	w10, w13, w10, cc  // cc = lo, ul, last
  407254:	add	x12, x14, #0x2
  407258:	cmp	w15, w16
  40725c:	csel	x14, x12, x11, eq  // eq = none
  407260:	mov	x11, x14
  407264:	ldrb	w13, [x11], #1
  407268:	sub	w17, w13, #0x30
  40726c:	cmp	w17, #0xa
  407270:	b.cc	407244 <ferror@plt+0x43b4>  // b.lo, b.ul, b.last
  407274:	cmp	w15, w16
  407278:	b.ne	407340 <ferror@plt+0x44b0>  // b.any
  40727c:	b	407388 <ferror@plt+0x44f8>
  407280:	cmp	x8, x28
  407284:	csetm	w20, ne  // ne = any
  407288:	b	407028 <ferror@plt+0x4198>
  40728c:	ldrb	w8, [x21, #54]
  407290:	cbz	w8, 40756c <ferror@plt+0x46dc>
  407294:	sub	x8, x20, #0x1
  407298:	ldrb	w9, [x8, #1]!
  40729c:	ldrb	w9, [x22, x9]
  4072a0:	cbnz	w9, 407298 <ferror@plt+0x4408>
  4072a4:	mov	x9, xzr
  4072a8:	mov	w10, #0xc                   	// #12
  4072ac:	add	x11, x10, x9
  4072b0:	lsr	x11, x11, #1
  4072b4:	adrp	x13, 426000 <_obstack_memory_used@@Base+0x141b0>
  4072b8:	lsl	x12, x11, #4
  4072bc:	add	x13, x13, #0x3d0
  4072c0:	ldr	x13, [x13, x12]
  4072c4:	ldrb	w14, [x13]
  4072c8:	cbz	w14, 40749c <ferror@plt+0x460c>
  4072cc:	mov	x12, xzr
  4072d0:	add	x13, x13, #0x1
  4072d4:	ldrb	w15, [x8, x12]
  4072d8:	adrp	x16, 426000 <_obstack_memory_used@@Base+0x141b0>
  4072dc:	add	x16, x16, #0x920
  4072e0:	ldrb	w15, [x16, x15]
  4072e4:	cmp	w15, w14, uxtb
  4072e8:	b.cc	407300 <ferror@plt+0x4470>  // b.lo, b.ul, b.last
  4072ec:	b.hi	407310 <ferror@plt+0x4480>  // b.pmore
  4072f0:	ldrb	w14, [x13, x12]
  4072f4:	add	x12, x12, #0x1
  4072f8:	cbnz	w14, 4072d4 <ferror@plt+0x4444>
  4072fc:	b	40749c <ferror@plt+0x460c>
  407300:	mov	x10, x11
  407304:	cmp	x9, x10
  407308:	b.cc	4072ac <ferror@plt+0x441c>  // b.lo, b.ul, b.last
  40730c:	b	40731c <ferror@plt+0x448c>
  407310:	add	x9, x11, #0x1
  407314:	cmp	x9, x10
  407318:	b.cc	4072ac <ferror@plt+0x441c>  // b.lo, b.ul, b.last
  40731c:	mov	w8, wzr
  407320:	b	4074ac <ferror@plt+0x461c>
  407324:	ldp	q1, q0, [sp, #64]
  407328:	bl	4125b0 <_obstack_memory_used@@Base+0x760>
  40732c:	cmp	w0, #0x0
  407330:	b.le	407558 <ferror@plt+0x46c8>
  407334:	mov	w20, #0x1                   	// #1
  407338:	b	407028 <ferror@plt+0x4198>
  40733c:	mov	w10, wzr
  407340:	adrp	x12, 426000 <_obstack_memory_used@@Base+0x141b0>
  407344:	ldr	w12, [x12, #1376]
  407348:	cmp	w12, w13
  40734c:	b.ne	407384 <ferror@plt+0x44f4>  // b.any
  407350:	ldrb	w13, [x11], #1
  407354:	sub	w12, w13, #0x30
  407358:	cmp	w12, #0x9
  40735c:	mov	x12, x11
  407360:	b.hi	407388 <ferror@plt+0x44f8>  // b.pmore
  407364:	and	w11, w10, #0xff
  407368:	cmp	w11, w13, uxtb
  40736c:	csel	w10, w13, w10, cc  // cc = lo, ul, last
  407370:	ldrb	w13, [x12], #1
  407374:	sub	w11, w13, #0x30
  407378:	cmp	w11, #0xa
  40737c:	b.cc	407364 <ferror@plt+0x44d4>  // b.lo, b.ul, b.last
  407380:	b	407388 <ferror@plt+0x44f8>
  407384:	mov	x12, x11
  407388:	and	w10, w10, #0xff
  40738c:	cmp	w10, #0x31
  407390:	b.cc	4073b0 <ferror@plt+0x4520>  // b.lo, b.ul, b.last
  407394:	ldurb	w10, [x12, #-1]
  407398:	adrp	x11, 413000 <_obstack_memory_used@@Base+0x11b0>
  40739c:	add	x11, x11, #0x388
  4073a0:	cmp	w9, #0x2d
  4073a4:	ldrb	w10, [x11, x10]
  4073a8:	cneg	w9, w10, eq  // eq = none
  4073ac:	b	4073b4 <ferror@plt+0x4524>
  4073b0:	mov	w9, wzr
  4073b4:	cmp	w8, #0x2d
  4073b8:	cinc	x14, x1, eq  // eq = none
  4073bc:	mov	x11, x14
  4073c0:	ldrb	w13, [x11], #1
  4073c4:	sub	w10, w13, #0x30
  4073c8:	cmp	w10, #0x9
  4073cc:	b.hi	407418 <ferror@plt+0x4588>  // b.pmore
  4073d0:	adrp	x10, 426000 <_obstack_memory_used@@Base+0x141b0>
  4073d4:	ldr	w15, [x10, #1380]
  4073d8:	mov	w10, wzr
  4073dc:	ldrb	w16, [x11]
  4073e0:	and	w12, w10, #0xff
  4073e4:	cmp	w12, w13, uxtb
  4073e8:	csel	w10, w13, w10, cc  // cc = lo, ul, last
  4073ec:	add	x12, x14, #0x2
  4073f0:	cmp	w15, w16
  4073f4:	csel	x14, x12, x11, eq  // eq = none
  4073f8:	mov	x11, x14
  4073fc:	ldrb	w13, [x11], #1
  407400:	sub	w17, w13, #0x30
  407404:	cmp	w17, #0xa
  407408:	b.cc	4073dc <ferror@plt+0x454c>  // b.lo, b.ul, b.last
  40740c:	cmp	w15, w16
  407410:	b.ne	40741c <ferror@plt+0x458c>  // b.any
  407414:	b	407464 <ferror@plt+0x45d4>
  407418:	mov	w10, wzr
  40741c:	adrp	x12, 426000 <_obstack_memory_used@@Base+0x141b0>
  407420:	ldr	w12, [x12, #1376]
  407424:	cmp	w12, w13
  407428:	b.ne	407460 <ferror@plt+0x45d0>  // b.any
  40742c:	ldrb	w13, [x11], #1
  407430:	sub	w12, w13, #0x30
  407434:	cmp	w12, #0x9
  407438:	mov	x12, x11
  40743c:	b.hi	407464 <ferror@plt+0x45d4>  // b.pmore
  407440:	and	w11, w10, #0xff
  407444:	cmp	w11, w13, uxtb
  407448:	csel	w10, w13, w10, cc  // cc = lo, ul, last
  40744c:	ldrb	w13, [x12], #1
  407450:	sub	w11, w13, #0x30
  407454:	cmp	w11, #0xa
  407458:	b.cc	407440 <ferror@plt+0x45b0>  // b.lo, b.ul, b.last
  40745c:	b	407464 <ferror@plt+0x45d4>
  407460:	mov	x12, x11
  407464:	and	w10, w10, #0xff
  407468:	cmp	w10, #0x31
  40746c:	b.cc	40748c <ferror@plt+0x45fc>  // b.lo, b.ul, b.last
  407470:	ldurb	w10, [x12, #-1]
  407474:	adrp	x11, 413000 <_obstack_memory_used@@Base+0x11b0>
  407478:	add	x11, x11, #0x388
  40747c:	cmp	w8, #0x2d
  407480:	ldrb	w10, [x11, x10]
  407484:	cneg	w8, w10, eq  // eq = none
  407488:	b	407490 <ferror@plt+0x4600>
  40748c:	mov	w8, wzr
  407490:	subs	w20, w9, w8
  407494:	b.ne	407028 <ferror@plt+0x4198>  // b.any
  407498:	b	407010 <ferror@plt+0x4180>
  40749c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  4074a0:	add	x8, x8, #0x3d0
  4074a4:	add	x8, x8, x11, lsl #4
  4074a8:	ldr	w8, [x8, #8]
  4074ac:	sub	x9, x28, #0x1
  4074b0:	ldrb	w10, [x9, #1]!
  4074b4:	ldrb	w10, [x22, x10]
  4074b8:	cbnz	w10, 4074b0 <ferror@plt+0x4620>
  4074bc:	mov	x10, xzr
  4074c0:	mov	w11, #0xc                   	// #12
  4074c4:	add	x12, x11, x10
  4074c8:	lsr	x12, x12, #1
  4074cc:	adrp	x14, 426000 <_obstack_memory_used@@Base+0x141b0>
  4074d0:	lsl	x13, x12, #4
  4074d4:	add	x14, x14, #0x3d0
  4074d8:	ldr	x14, [x14, x13]
  4074dc:	ldrb	w15, [x14]
  4074e0:	cbz	w15, 407540 <ferror@plt+0x46b0>
  4074e4:	mov	x13, xzr
  4074e8:	add	x14, x14, #0x1
  4074ec:	ldrb	w16, [x9, x13]
  4074f0:	adrp	x17, 426000 <_obstack_memory_used@@Base+0x141b0>
  4074f4:	add	x17, x17, #0x920
  4074f8:	ldrb	w16, [x17, x16]
  4074fc:	cmp	w16, w15, uxtb
  407500:	b.cc	407518 <ferror@plt+0x4688>  // b.lo, b.ul, b.last
  407504:	b.hi	407528 <ferror@plt+0x4698>  // b.pmore
  407508:	ldrb	w15, [x14, x13]
  40750c:	add	x13, x13, #0x1
  407510:	cbnz	w15, 4074ec <ferror@plt+0x465c>
  407514:	b	407540 <ferror@plt+0x46b0>
  407518:	mov	x11, x12
  40751c:	cmp	x10, x11
  407520:	b.cc	4074c4 <ferror@plt+0x4634>  // b.lo, b.ul, b.last
  407524:	b	407534 <ferror@plt+0x46a4>
  407528:	add	x10, x12, #0x1
  40752c:	cmp	x10, x11
  407530:	b.cc	4074c4 <ferror@plt+0x4634>  // b.lo, b.ul, b.last
  407534:	mov	w9, wzr
  407538:	sub	w20, w8, wzr
  40753c:	b	407028 <ferror@plt+0x4198>
  407540:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x141b0>
  407544:	add	x9, x9, #0x3d0
  407548:	add	x9, x9, x12, lsl #4
  40754c:	ldr	w9, [x9, #8]
  407550:	sub	w20, w8, w9
  407554:	b	407028 <ferror@plt+0x4198>
  407558:	ldp	q1, q0, [sp, #64]
  40755c:	bl	4124a8 <_obstack_memory_used@@Base+0x658>
  407560:	cbnz	w0, 407858 <ferror@plt+0x49c8>
  407564:	mov	w20, wzr
  407568:	b	407028 <ferror@plt+0x4198>
  40756c:	ldrb	w8, [x21, #51]
  407570:	cbz	w8, 4078d8 <ferror@plt+0x4a48>
  407574:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  407578:	add	x8, x8, #0xac0
  40757c:	ldp	q0, q4, [x8]
  407580:	ldp	q3, q5, [x8, #80]
  407584:	ldr	x9, [sp, #40]
  407588:	ldp	q1, q2, [x8, #48]
  40758c:	ldur	q6, [x8, #140]
  407590:	ldp	q7, q16, [x8]
  407594:	stp	q0, q4, [x9]
  407598:	str	q3, [x9, #80]
  40759c:	ldp	q4, q3, [x8, #32]
  4075a0:	stp	q1, q2, [x9, #48]
  4075a4:	ldr	q2, [x8, #32]
  4075a8:	stur	q6, [x9, #140]
  4075ac:	str	q4, [x9, #32]
  4075b0:	ldp	q4, q1, [x8, #112]
  4075b4:	str	q5, [x9, #96]
  4075b8:	ldur	q5, [x8, #140]
  4075bc:	str	q4, [x9, #112]
  4075c0:	ldp	q0, q4, [x8, #64]
  4075c4:	str	q1, [x9, #128]
  4075c8:	ldp	q1, q6, [x8, #96]
  4075cc:	add	x9, sp, #0xfbd
  4075d0:	str	q0, [sp, #4208]
  4075d4:	ldr	q0, [x8, #128]
  4075d8:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  4075dc:	ldrb	w8, [x8, #1368]
  4075e0:	str	q16, [sp, #4160]
  4075e4:	str	q7, [sp, #4144]
  4075e8:	str	q4, [sp, #4224]
  4075ec:	str	q3, [sp, #4192]
  4075f0:	str	q2, [sp, #4176]
  4075f4:	stur	q5, [x9, #255]
  4075f8:	str	q0, [sp, #4272]
  4075fc:	str	q6, [sp, #4256]
  407600:	str	q1, [sp, #4240]
  407604:	cbz	w8, 4078f0 <ferror@plt+0x4a60>
  407608:	add	x8, sp, #0x1, lsl #12
  40760c:	add	x8, x8, #0x190
  407610:	str	x8, [sp, #64]
  407614:	add	x8, x20, x23
  407618:	str	x8, [sp, #80]
  40761c:	add	x8, x28, x24
  407620:	stp	xzr, x8, [sp, #48]
  407624:	add	x8, x24, x23
  407628:	add	x8, x8, x8, lsl #1
  40762c:	add	x9, x8, #0x2
  407630:	mov	x25, x28
  407634:	mov	x28, x20
  407638:	mov	w20, #0xfa0                 	// #4000
  40763c:	str	wzr, [sp, #36]
  407640:	str	x25, [sp, #8]
  407644:	str	x9, [sp, #24]
  407648:	cmp	x20, x9
  40764c:	b.cc	407694 <ferror@plt+0x4804>  // b.lo, b.ul, b.last
  407650:	b	407718 <ferror@plt+0x4888>
  407654:	ldr	x27, [sp, #64]
  407658:	add	x2, sp, #0x1, lsl #12
  40765c:	add	x2, x2, #0x30
  407660:	mov	x1, x19
  407664:	mov	x0, x27
  407668:	bl	40b434 <ferror@plt+0x85a4>
  40766c:	ldr	x2, [sp, #40]
  407670:	add	x27, x27, x19
  407674:	mov	x0, x27
  407678:	mov	x1, x26
  40767c:	bl	40b434 <ferror@plt+0x85a4>
  407680:	ldr	w8, [sp, #36]
  407684:	ldr	x9, [sp, #24]
  407688:	cbz	w8, 4076d8 <ferror@plt+0x4848>
  40768c:	cmp	x20, x9
  407690:	b.cs	407718 <ferror@plt+0x4888>  // b.hs, b.nlast
  407694:	ldr	x0, [sp, #48]
  407698:	add	x8, x20, x20, lsl #1
  40769c:	lsr	x8, x8, #1
  4076a0:	cmp	x9, x8
  4076a4:	csel	x19, x9, x8, hi  // hi = pmore
  4076a8:	bl	402c00 <free@plt>
  4076ac:	mov	x0, x19
  4076b0:	bl	402930 <malloc@plt>
  4076b4:	cmp	x0, #0x0
  4076b8:	mov	w8, #0xfa0                 	// #4000
  4076bc:	csel	x20, x8, x19, eq  // eq = none
  4076c0:	add	x8, sp, #0x1, lsl #12
  4076c4:	add	x8, x8, #0x190
  4076c8:	mov	x27, x0
  4076cc:	csel	x8, x8, x0, eq  // eq = none
  4076d0:	str	x8, [sp, #64]
  4076d4:	b	40771c <ferror@plt+0x488c>
  4076d8:	ldr	x0, [sp, #64]
  4076dc:	cmp	x19, x26
  4076e0:	cset	w8, cc  // cc = lo, ul, last
  4076e4:	csel	x2, x19, x26, cc  // cc = lo, ul, last
  4076e8:	mov	x1, x27
  4076ec:	str	w8, [sp, #36]
  4076f0:	cset	w19, hi  // hi = pmore
  4076f4:	bl	402b60 <memcmp@plt>
  4076f8:	ldr	w8, [sp, #36]
  4076fc:	ldr	x9, [sp, #24]
  407700:	cmp	w0, #0x0
  407704:	sub	w8, w19, w8
  407708:	csel	w8, w8, w0, eq  // eq = none
  40770c:	str	w8, [sp, #36]
  407710:	cmp	x20, x9
  407714:	b.cc	407694 <ferror@plt+0x4804>  // b.lo, b.ul, b.last
  407718:	ldr	x27, [sp, #48]
  40771c:	ldr	x8, [sp, #80]
  407720:	cmp	x28, x8
  407724:	b.cs	407740 <ferror@plt+0x48b0>  // b.hs, b.nlast
  407728:	ldr	x0, [sp, #64]
  40772c:	mov	x1, x28
  407730:	mov	x2, x20
  407734:	bl	4084d0 <ferror@plt+0x5640>
  407738:	add	x19, x0, #0x1
  40773c:	b	407744 <ferror@plt+0x48b4>
  407740:	mov	x19, xzr
  407744:	ldr	x8, [sp, #56]
  407748:	mov	x1, x25
  40774c:	cmp	x25, x8
  407750:	b.cs	407774 <ferror@plt+0x48e4>  // b.hs, b.nlast
  407754:	ldr	x8, [sp, #64]
  407758:	subs	x9, x20, x19
  40775c:	csel	x2, xzr, x9, cc  // cc = lo, ul, last
  407760:	add	x8, x8, x19
  407764:	csel	x0, x8, xzr, cs  // cs = hs, nlast
  407768:	bl	4084d0 <ferror@plt+0x5640>
  40776c:	add	x8, x0, #0x1
  407770:	b	407778 <ferror@plt+0x48e8>
  407774:	mov	x8, xzr
  407778:	mov	x26, x8
  40777c:	add	x8, x8, x19
  407780:	cmp	x8, x20
  407784:	b.hi	407790 <ferror@plt+0x4900>  // b.pmore
  407788:	cmp	x20, x19
  40778c:	b.cs	4077f4 <ferror@plt+0x4964>  // b.hs, b.nlast
  407790:	add	x9, x8, x8, lsl #1
  407794:	mov	x10, #0x5555555555555555    	// #6148914691236517205
  407798:	lsr	x9, x9, #1
  40779c:	cmp	x8, x10
  4077a0:	mov	x0, x27
  4077a4:	csel	x20, x9, x8, cc  // cc = lo, ul, last
  4077a8:	bl	402c00 <free@plt>
  4077ac:	mov	x0, x20
  4077b0:	bl	41078c <ferror@plt+0xd8fc>
  4077b4:	ldr	x8, [sp, #80]
  4077b8:	mov	x27, x0
  4077bc:	cmp	x28, x8
  4077c0:	b.cs	4077d4 <ferror@plt+0x4944>  // b.hs, b.nlast
  4077c4:	mov	x0, x27
  4077c8:	mov	x1, x28
  4077cc:	mov	x2, x19
  4077d0:	bl	402cb0 <strxfrm@plt>
  4077d4:	ldr	x8, [sp, #56]
  4077d8:	cmp	x25, x8
  4077dc:	b.cs	4077f0 <ferror@plt+0x4960>  // b.hs, b.nlast
  4077e0:	mov	x1, x25
  4077e4:	add	x0, x27, x19
  4077e8:	mov	x2, x26
  4077ec:	bl	402cb0 <strxfrm@plt>
  4077f0:	str	x27, [sp, #64]
  4077f4:	ldr	x8, [sp, #80]
  4077f8:	cmp	x28, x8
  4077fc:	b.cs	407810 <ferror@plt+0x4980>  // b.hs, b.nlast
  407800:	mov	x0, x28
  407804:	bl	4027c0 <strlen@plt>
  407808:	add	x8, x0, x28
  40780c:	add	x28, x8, #0x1
  407810:	ldr	x8, [sp, #56]
  407814:	cmp	x25, x8
  407818:	b.cs	40782c <ferror@plt+0x499c>  // b.hs, b.nlast
  40781c:	mov	x0, x25
  407820:	bl	4027c0 <strlen@plt>
  407824:	add	x8, x0, x25
  407828:	add	x25, x8, #0x1
  40782c:	ldr	x8, [sp, #80]
  407830:	str	x27, [sp, #48]
  407834:	cmp	x28, x8
  407838:	b.cc	407654 <ferror@plt+0x47c4>  // b.lo, b.ul, b.last
  40783c:	ldr	x8, [sp, #56]
  407840:	cmp	x25, x8
  407844:	b.cc	407654 <ferror@plt+0x47c4>  // b.lo, b.ul, b.last
  407848:	ldr	x25, [sp, #64]
  40784c:	ldr	x28, [sp, #8]
  407850:	add	x27, x25, x19
  407854:	b	407908 <ferror@plt+0x4a78>
  407858:	ldr	q0, [sp, #64]
  40785c:	mov	v1.16b, v0.16b
  407860:	bl	412838 <_obstack_memory_used@@Base+0x9e8>
  407864:	cbz	w0, 407168 <ferror@plt+0x42d8>
  407868:	ldr	q0, [sp, #80]
  40786c:	mov	v1.16b, v0.16b
  407870:	bl	412838 <_obstack_memory_used@@Base+0x9e8>
  407874:	cbz	w0, 407334 <ferror@plt+0x44a4>
  407878:	ldr	x0, [sp, #128]
  40787c:	mov	x1, xzr
  407880:	bl	402bf0 <strtold@plt>
  407884:	mov	x0, x28
  407888:	mov	x1, xzr
  40788c:	str	q0, [sp, #4496]
  407890:	bl	402bf0 <strtold@plt>
  407894:	str	q0, [sp, #4144]
  407898:	ldr	x8, [sp, #4496]
  40789c:	ldr	x9, [sp, #4144]
  4078a0:	rev	x8, x8
  4078a4:	rev	x9, x9
  4078a8:	cmp	x8, x9
  4078ac:	b.ne	4078c8 <ferror@plt+0x4a38>  // b.any
  4078b0:	ldr	x8, [sp, #4504]
  4078b4:	ldr	x9, [sp, #4152]
  4078b8:	rev	x8, x8
  4078bc:	rev	x9, x9
  4078c0:	cmp	x8, x9
  4078c4:	b.eq	407564 <ferror@plt+0x46d4>  // b.none
  4078c8:	cmp	x8, x9
  4078cc:	mov	w8, #0xffffffff            	// #-1
  4078d0:	cneg	w20, w8, cs  // cs = hs, nlast
  4078d4:	b	407028 <ferror@plt+0x4198>
  4078d8:	ldrb	w8, [x21, #56]
  4078dc:	cbz	w8, 4079e8 <ferror@plt+0x4b58>
  4078e0:	mov	x0, x20
  4078e4:	mov	x1, x28
  4078e8:	bl	40b634 <ferror@plt+0x87a4>
  4078ec:	b	407024 <ferror@plt+0x4194>
  4078f0:	str	xzr, [sp, #48]
  4078f4:	str	wzr, [sp, #36]
  4078f8:	mov	x26, x24
  4078fc:	mov	x27, x28
  407900:	mov	x19, x23
  407904:	mov	x25, x20
  407908:	add	x2, sp, #0x1, lsl #12
  40790c:	add	x2, x2, #0x30
  407910:	mov	x0, x25
  407914:	mov	x1, x19
  407918:	bl	40b434 <ferror@plt+0x85a4>
  40791c:	add	x0, sp, #0x1, lsl #12
  407920:	add	x1, sp, #0x1, lsl #12
  407924:	add	x0, x0, #0x30
  407928:	add	x1, x1, #0x170
  40792c:	bl	40a860 <ferror@plt+0x79d0>
  407930:	ldr	x20, [sp, #40]
  407934:	mov	x0, x27
  407938:	mov	x1, x26
  40793c:	str	x26, [sp, #80]
  407940:	mov	x2, x20
  407944:	bl	40b434 <ferror@plt+0x85a4>
  407948:	ldr	x1, [sp, #16]
  40794c:	mov	x0, x20
  407950:	bl	40a860 <ferror@plt+0x79d0>
  407954:	ldr	x8, [sp, #4464]
  407958:	ldr	x9, [sp, #4480]
  40795c:	rev	x8, x8
  407960:	rev	x9, x9
  407964:	cmp	x8, x9
  407968:	b.ne	40798c <ferror@plt+0x4afc>  // b.any
  40796c:	ldr	x8, [sp, #4472]
  407970:	ldr	x9, [sp, #4488]
  407974:	rev	x8, x8
  407978:	rev	x9, x9
  40797c:	cmp	x8, x9
  407980:	b.ne	40798c <ferror@plt+0x4afc>  // b.any
  407984:	mov	w20, wzr
  407988:	b	407998 <ferror@plt+0x4b08>
  40798c:	cmp	x8, x9
  407990:	mov	w8, #0xffffffff            	// #-1
  407994:	cneg	w20, w8, cs  // cs = hs, nlast
  407998:	cbnz	w20, 4079dc <ferror@plt+0x4b4c>
  40799c:	ldr	w8, [sp, #36]
  4079a0:	mov	w20, w8
  4079a4:	cbnz	w8, 4079dc <ferror@plt+0x4b4c>
  4079a8:	ldr	x8, [sp, #80]
  4079ac:	mov	x0, x25
  4079b0:	mov	x1, x27
  4079b4:	cmp	x19, x8
  4079b8:	csel	x2, x19, x8, cc  // cc = lo, ul, last
  4079bc:	bl	402b60 <memcmp@plt>
  4079c0:	mov	w20, w0
  4079c4:	cbnz	w0, 4079dc <ferror@plt+0x4b4c>
  4079c8:	ldr	x8, [sp, #80]
  4079cc:	cmp	x19, x8
  4079d0:	cset	w8, cc  // cc = lo, ul, last
  4079d4:	cset	w9, hi  // hi = pmore
  4079d8:	sub	w20, w9, w8
  4079dc:	ldr	x0, [sp, #48]
  4079e0:	bl	402c00 <free@plt>
  4079e4:	b	407028 <ferror@plt+0x4198>
  4079e8:	cbz	x23, 407afc <ferror@plt+0x4c6c>
  4079ec:	cbz	x24, 407334 <ferror@plt+0x44a4>
  4079f0:	add	x1, x23, #0x1
  4079f4:	add	x3, x24, #0x1
  4079f8:	mov	x0, x20
  4079fc:	mov	x2, x28
  407a00:	bl	410be8 <ferror@plt+0xdd58>
  407a04:	b	407024 <ferror@plt+0x4194>
  407a08:	cbz	x26, 407b14 <ferror@plt+0x4c84>
  407a0c:	cbz	x25, 407a98 <ferror@plt+0x4c08>
  407a10:	cmp	x28, x9
  407a14:	b.cs	407a2c <ferror@plt+0x4b9c>  // b.hs, b.nlast
  407a18:	ldrb	w10, [x28]
  407a1c:	ldrb	w10, [x26, x10]
  407a20:	cbz	w10, 407a3c <ferror@plt+0x4bac>
  407a24:	add	x28, x28, #0x1
  407a28:	b	407a10 <ferror@plt+0x4b80>
  407a2c:	mov	w10, wzr
  407a30:	cmp	x27, x8
  407a34:	b.cc	407a48 <ferror@plt+0x4bb8>  // b.lo, b.ul, b.last
  407a38:	b	407b08 <ferror@plt+0x4c78>
  407a3c:	mov	w10, #0x1                   	// #1
  407a40:	cmp	x27, x8
  407a44:	b.cs	407b08 <ferror@plt+0x4c78>  // b.hs, b.nlast
  407a48:	ldrb	w11, [x27]
  407a4c:	ldrb	w12, [x26, x11]
  407a50:	cbz	w12, 407a64 <ferror@plt+0x4bd4>
  407a54:	add	x27, x27, #0x1
  407a58:	cmp	x27, x8
  407a5c:	b.cc	407a48 <ferror@plt+0x4bb8>  // b.lo, b.ul, b.last
  407a60:	b	407b08 <ferror@plt+0x4c78>
  407a64:	cbz	w10, 407b80 <ferror@plt+0x4cf0>
  407a68:	ldrb	w10, [x28]
  407a6c:	ldrb	w11, [x25, x11]
  407a70:	ldrb	w10, [x25, x10]
  407a74:	subs	w20, w10, w11
  407a78:	b.ne	407b9c <ferror@plt+0x4d0c>  // b.any
  407a7c:	add	x28, x28, #0x1
  407a80:	add	x27, x27, #0x1
  407a84:	b	407a10 <ferror@plt+0x4b80>
  407a88:	ldrb	w10, [x28]
  407a8c:	ldrb	w10, [x26, x10]
  407a90:	cbz	w10, 407ab0 <ferror@plt+0x4c20>
  407a94:	add	x28, x28, #0x1
  407a98:	cmp	x28, x9
  407a9c:	b.cc	407a88 <ferror@plt+0x4bf8>  // b.lo, b.ul, b.last
  407aa0:	mov	w10, wzr
  407aa4:	cmp	x27, x8
  407aa8:	b.cc	407abc <ferror@plt+0x4c2c>  // b.lo, b.ul, b.last
  407aac:	b	407b08 <ferror@plt+0x4c78>
  407ab0:	mov	w10, #0x1                   	// #1
  407ab4:	cmp	x27, x8
  407ab8:	b.cs	407b08 <ferror@plt+0x4c78>  // b.hs, b.nlast
  407abc:	ldrb	w11, [x27]
  407ac0:	ldrb	w12, [x26, x11]
  407ac4:	cbz	w12, 407ad8 <ferror@plt+0x4c48>
  407ac8:	add	x27, x27, #0x1
  407acc:	cmp	x27, x8
  407ad0:	b.cc	407abc <ferror@plt+0x4c2c>  // b.lo, b.ul, b.last
  407ad4:	b	407b08 <ferror@plt+0x4c78>
  407ad8:	cbz	w10, 407b80 <ferror@plt+0x4cf0>
  407adc:	ldrb	w10, [x28]
  407ae0:	subs	w20, w10, w11
  407ae4:	b.ne	407b9c <ferror@plt+0x4d0c>  // b.any
  407ae8:	add	x28, x28, #0x1
  407aec:	add	x27, x27, #0x1
  407af0:	cmp	x28, x9
  407af4:	b.cc	407a88 <ferror@plt+0x4bf8>  // b.lo, b.ul, b.last
  407af8:	b	407aa0 <ferror@plt+0x4c10>
  407afc:	cmp	x24, #0x0
  407b00:	csetm	w20, ne  // ne = any
  407b04:	b	407028 <ferror@plt+0x4198>
  407b08:	mov	w8, wzr
  407b0c:	add	w20, w8, w10
  407b10:	b	4070d0 <ferror@plt+0x4240>
  407b14:	cbz	x19, 407b4c <ferror@plt+0x4cbc>
  407b18:	cbz	x24, 407b88 <ferror@plt+0x4cf8>
  407b1c:	cbz	x25, 407b58 <ferror@plt+0x4cc8>
  407b20:	cmp	x27, x8
  407b24:	b.cs	407b70 <ferror@plt+0x4ce0>  // b.hs, b.nlast
  407b28:	cmp	x28, x9
  407b2c:	b.cs	407b70 <ferror@plt+0x4ce0>  // b.hs, b.nlast
  407b30:	ldrb	w10, [x28], #1
  407b34:	ldrb	w10, [x25, x10]
  407b38:	ldrb	w11, [x27], #1
  407b3c:	ldrb	w11, [x25, x11]
  407b40:	subs	w20, w10, w11
  407b44:	b.eq	407b20 <ferror@plt+0x4c90>  // b.none
  407b48:	b	407b9c <ferror@plt+0x4d0c>
  407b4c:	cmp	x24, #0x0
  407b50:	csetm	w20, ne  // ne = any
  407b54:	b	4070d0 <ferror@plt+0x4240>
  407b58:	cmp	x19, x24
  407b5c:	csel	x2, x19, x24, cc  // cc = lo, ul, last
  407b60:	mov	x0, x28
  407b64:	mov	x1, x27
  407b68:	bl	402b60 <memcmp@plt>
  407b6c:	cbnz	w0, 407b98 <ferror@plt+0x4d08>
  407b70:	cmp	x19, x24
  407b74:	cset	w20, ne  // ne = any
  407b78:	b.cs	4070d0 <ferror@plt+0x4240>  // b.hs, b.nlast
  407b7c:	b	407b90 <ferror@plt+0x4d00>
  407b80:	mov	w8, #0xffffffff            	// #-1
  407b84:	b	407b0c <ferror@plt+0x4c7c>
  407b88:	mov	w20, #0x1                   	// #1
  407b8c:	b	407b9c <ferror@plt+0x4d0c>
  407b90:	mov	w20, #0xffffffff            	// #-1
  407b94:	b	407b9c <ferror@plt+0x4d0c>
  407b98:	mov	w20, w0
  407b9c:	ldrb	w8, [x21, #55]
  407ba0:	cmp	w8, #0x0
  407ba4:	cneg	w0, w20, ne  // ne = any
  407ba8:	cbnz	w0, 407c58 <ferror@plt+0x4dc8>
  407bac:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  407bb0:	ldrb	w8, [x8, #1530]
  407bb4:	tbnz	w8, #0, 407bc8 <ferror@plt+0x4d38>
  407bb8:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  407bbc:	ldrb	w8, [x8, #1529]
  407bc0:	ldp	x0, x23, [sp, #112]
  407bc4:	tbz	w8, #0, 407bd0 <ferror@plt+0x4d40>
  407bc8:	mov	w0, wzr
  407bcc:	b	407c58 <ferror@plt+0x4dc8>
  407bd0:	ldr	x19, [x0, #8]
  407bd4:	ldr	x20, [x23, #8]
  407bd8:	sub	x22, x19, #0x1
  407bdc:	sub	x21, x20, #0x1
  407be0:	cbz	x22, 407c0c <ferror@plt+0x4d7c>
  407be4:	cbz	x21, 407c18 <ferror@plt+0x4d88>
  407be8:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  407bec:	ldrb	w8, [x8, #1368]
  407bf0:	ldr	x0, [x0]
  407bf4:	ldr	x2, [x23]
  407bf8:	cbz	w8, 407c20 <ferror@plt+0x4d90>
  407bfc:	mov	x1, x19
  407c00:	mov	x3, x20
  407c04:	bl	410be8 <ferror@plt+0xdd58>
  407c08:	b	407c48 <ferror@plt+0x4db8>
  407c0c:	cmp	x21, #0x0
  407c10:	csetm	w0, ne  // ne = any
  407c14:	b	407c48 <ferror@plt+0x4db8>
  407c18:	mov	w0, #0x1                   	// #1
  407c1c:	b	407c48 <ferror@plt+0x4db8>
  407c20:	cmp	x22, x21
  407c24:	csel	x8, x22, x21, cc  // cc = lo, ul, last
  407c28:	mov	x1, x2
  407c2c:	mov	x2, x8
  407c30:	bl	402b60 <memcmp@plt>
  407c34:	cbnz	w0, 407c48 <ferror@plt+0x4db8>
  407c38:	cmp	x19, x20
  407c3c:	cset	w8, ne  // ne = any
  407c40:	cmp	x22, x21
  407c44:	csinv	w0, w8, wzr, cs  // cs = hs, nlast
  407c48:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  407c4c:	ldrb	w8, [x8, #1544]
  407c50:	cmp	w8, #0x0
  407c54:	cneg	w0, w0, ne  // ne = any
  407c58:	add	sp, sp, #0x2, lsl #12
  407c5c:	add	sp, sp, #0x140
  407c60:	ldp	x20, x19, [sp, #80]
  407c64:	ldp	x22, x21, [sp, #64]
  407c68:	ldp	x24, x23, [sp, #48]
  407c6c:	ldp	x26, x25, [sp, #32]
  407c70:	ldp	x28, x27, [sp, #16]
  407c74:	ldp	x29, x30, [sp], #96
  407c78:	ret
  407c7c:	sub	sp, sp, #0x70
  407c80:	stp	x29, x30, [sp, #16]
  407c84:	stp	x28, x27, [sp, #32]
  407c88:	stp	x26, x25, [sp, #48]
  407c8c:	stp	x24, x23, [sp, #64]
  407c90:	stp	x22, x21, [sp, #80]
  407c94:	stp	x20, x19, [sp, #96]
  407c98:	ldp	x21, x23, [x0]
  407c9c:	mov	x22, x2
  407ca0:	mov	x20, x1
  407ca4:	add	x29, sp, #0x10
  407ca8:	add	x24, x21, x23
  407cac:	cbnz	x2, 407d24 <ferror@plt+0x4e94>
  407cb0:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  407cb4:	ldrb	w8, [x8, #1528]
  407cb8:	cmp	w8, #0x1
  407cbc:	b.ne	407d24 <ferror@plt+0x4e94>  // b.any
  407cc0:	mov	x19, x0
  407cc4:	sub	x22, x23, #0x1
  407cc8:	mov	w23, #0xa                   	// #10
  407ccc:	mov	w25, #0x3e                  	// #62
  407cd0:	cmp	x21, x24
  407cd4:	b.cs	407d7c <ferror@plt+0x4eec>  // b.hs, b.nlast
  407cd8:	ldrb	w9, [x21], #1
  407cdc:	ldp	x8, x10, [x20, #40]
  407ce0:	cmp	x22, #0x0
  407ce4:	csel	w11, w23, w9, eq  // eq = none
  407ce8:	cmp	w9, #0x9
  407cec:	csel	w1, w25, w11, eq  // eq = none
  407cf0:	cmp	x8, x10
  407cf4:	b.cs	407d14 <ferror@plt+0x4e84>  // b.hs, b.nlast
  407cf8:	add	x9, x8, #0x1
  407cfc:	str	x9, [x20, #40]
  407d00:	strb	w1, [x8]
  407d04:	cmn	w1, #0x1
  407d08:	sub	x22, x22, #0x1
  407d0c:	b.ne	407cd0 <ferror@plt+0x4e40>  // b.any
  407d10:	b	408220 <ferror@plt+0x5390>
  407d14:	mov	x0, x20
  407d18:	bl	402b30 <__overflow@plt>
  407d1c:	mov	w1, w0
  407d20:	b	407d04 <ferror@plt+0x4e74>
  407d24:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  407d28:	ldrb	w8, [x8, #1531]
  407d2c:	mov	w1, #0x1                   	// #1
  407d30:	mov	x0, x21
  407d34:	mov	x2, x23
  407d38:	cmp	w8, #0x0
  407d3c:	mov	w8, #0xa                   	// #10
  407d40:	csel	w8, wzr, w8, ne  // ne = any
  407d44:	mov	x3, x20
  407d48:	sturb	w8, [x24, #-1]
  407d4c:	bl	4027a0 <fwrite_unlocked@plt>
  407d50:	cmp	x0, x23
  407d54:	b.ne	40823c <ferror@plt+0x53ac>  // b.any
  407d58:	sturb	wzr, [x24, #-1]
  407d5c:	ldp	x20, x19, [sp, #96]
  407d60:	ldp	x22, x21, [sp, #80]
  407d64:	ldp	x24, x23, [sp, #64]
  407d68:	ldp	x26, x25, [sp, #48]
  407d6c:	ldp	x28, x27, [sp, #32]
  407d70:	ldp	x29, x30, [sp, #16]
  407d74:	add	sp, sp, #0x70
  407d78:	ret
  407d7c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  407d80:	ldr	x21, [x8, #1536]
  407d84:	adrp	x25, 426000 <_obstack_memory_used@@Base+0x141b0>
  407d88:	adrp	x27, 426000 <_obstack_memory_used@@Base+0x141b0>
  407d8c:	mov	w28, #0x5f                  	// #95
  407d90:	mov	w26, #0x20                  	// #32
  407d94:	add	x25, x25, #0x620
  407d98:	ldp	x24, x8, [x19]
  407d9c:	add	x8, x24, x8
  407da0:	sub	x22, x8, #0x1
  407da4:	cbz	x21, 407e48 <ferror@plt+0x4fb8>
  407da8:	ldr	x20, [x21]
  407dac:	mov	x23, x24
  407db0:	cmn	x20, #0x1
  407db4:	b.eq	407dc8 <ferror@plt+0x4f38>  // b.none
  407db8:	mov	x0, x19
  407dbc:	mov	x1, x21
  407dc0:	bl	40838c <ferror@plt+0x54fc>
  407dc4:	mov	x23, x0
  407dc8:	ldr	x8, [x21, #16]
  407dcc:	cmn	x8, #0x1
  407dd0:	b.eq	407de4 <ferror@plt+0x4f54>  // b.none
  407dd4:	mov	x0, x19
  407dd8:	mov	x1, x21
  407ddc:	bl	408258 <ferror@plt+0x53c8>
  407de0:	mov	x22, x0
  407de4:	ldrb	w8, [x21, #48]
  407de8:	cbz	w8, 407df4 <ferror@plt+0x4f64>
  407dec:	cmn	x20, #0x1
  407df0:	b.eq	407e14 <ferror@plt+0x4f84>  // b.none
  407df4:	ldrb	w8, [x21, #54]
  407df8:	cbnz	w8, 407e14 <ferror@plt+0x4f84>
  407dfc:	ldrb	w8, [x21, #50]
  407e00:	cbnz	w8, 407e14 <ferror@plt+0x4f84>
  407e04:	ldrb	w8, [x21, #52]
  407e08:	cbnz	w8, 407e14 <ferror@plt+0x4f84>
  407e0c:	ldrb	w8, [x21, #53]
  407e10:	cbz	w8, 40802c <ferror@plt+0x519c>
  407e14:	ldrb	w20, [x22]
  407e18:	sub	x23, x23, #0x1
  407e1c:	strb	wzr, [x22]
  407e20:	mov	x8, x23
  407e24:	ldrb	w9, [x23, #1]!
  407e28:	ldrb	w9, [x25, x9]
  407e2c:	cbnz	w9, 407e20 <ferror@plt+0x4f90>
  407e30:	cmp	x22, x23
  407e34:	str	x23, [sp, #8]
  407e38:	b.cs	407e50 <ferror@plt+0x4fc0>  // b.hs, b.nlast
  407e3c:	mov	x11, x22
  407e40:	str	x22, [sp, #8]
  407e44:	b	408024 <ferror@plt+0x5194>
  407e48:	mov	x23, x24
  407e4c:	b	40802c <ferror@plt+0x519c>
  407e50:	ldrb	w9, [x21, #54]
  407e54:	adrp	x16, 426000 <_obstack_memory_used@@Base+0x141b0>
  407e58:	add	x16, x16, #0x920
  407e5c:	cbz	w9, 407ee4 <ferror@plt+0x5054>
  407e60:	ldrb	w9, [x8, #1]!
  407e64:	ldrb	w9, [x25, x9]
  407e68:	cbnz	w9, 407e60 <ferror@plt+0x4fd0>
  407e6c:	mov	x9, xzr
  407e70:	mov	w10, #0xc                   	// #12
  407e74:	add	x11, x10, x9
  407e78:	lsr	x12, x11, #1
  407e7c:	adrp	x13, 426000 <_obstack_memory_used@@Base+0x141b0>
  407e80:	lsl	x11, x12, #4
  407e84:	add	x13, x13, #0x3d0
  407e88:	ldr	x11, [x13, x11]
  407e8c:	ldrb	w14, [x11]
  407e90:	cbz	w14, 407fd4 <ferror@plt+0x5144>
  407e94:	add	x13, x11, #0x1
  407e98:	mov	x11, x8
  407e9c:	ldrb	w15, [x11]
  407ea0:	ldrb	w15, [x16, x15]
  407ea4:	cmp	w15, w14, uxtb
  407ea8:	b.cc	407ec0 <ferror@plt+0x5030>  // b.lo, b.ul, b.last
  407eac:	b.hi	407ed0 <ferror@plt+0x5040>  // b.pmore
  407eb0:	ldrb	w14, [x13], #1
  407eb4:	add	x11, x11, #0x1
  407eb8:	cbnz	w14, 407e9c <ferror@plt+0x500c>
  407ebc:	b	408020 <ferror@plt+0x5190>
  407ec0:	mov	x10, x12
  407ec4:	cmp	x9, x10
  407ec8:	b.cc	407e74 <ferror@plt+0x4fe4>  // b.lo, b.ul, b.last
  407ecc:	b	407edc <ferror@plt+0x504c>
  407ed0:	add	x9, x12, #0x1
  407ed4:	cmp	x9, x10
  407ed8:	b.cc	407e74 <ferror@plt+0x4fe4>  // b.lo, b.ul, b.last
  407edc:	mov	x11, x23
  407ee0:	b	408024 <ferror@plt+0x5194>
  407ee4:	ldrb	w8, [x21, #52]
  407ee8:	cbz	w8, 407f00 <ferror@plt+0x5070>
  407eec:	add	x1, sp, #0x8
  407ef0:	mov	x0, x23
  407ef4:	bl	402bf0 <strtold@plt>
  407ef8:	ldr	x11, [sp, #8]
  407efc:	b	408024 <ferror@plt+0x5194>
  407f00:	ldrb	w8, [x21, #50]
  407f04:	cbnz	w8, 407f10 <ferror@plt+0x5080>
  407f08:	ldrb	w8, [x21, #53]
  407f0c:	cbz	w8, 407e3c <ferror@plt+0x4fac>
  407f10:	cmp	x23, x22
  407f14:	b.cs	407f28 <ferror@plt+0x5098>  // b.hs, b.nlast
  407f18:	ldrb	w8, [x23]
  407f1c:	cmp	w8, #0x2d
  407f20:	cset	w8, eq  // eq = none
  407f24:	b	407f2c <ferror@plt+0x509c>
  407f28:	mov	x8, xzr
  407f2c:	add	x12, x23, x8
  407f30:	mov	x9, x12
  407f34:	ldrb	w11, [x9], #1
  407f38:	sub	w8, w11, #0x30
  407f3c:	cmp	w8, #0x9
  407f40:	b.hi	407f8c <ferror@plt+0x50fc>  // b.pmore
  407f44:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  407f48:	ldr	w13, [x8, #1380]
  407f4c:	mov	w8, wzr
  407f50:	ldrb	w14, [x9]
  407f54:	and	w10, w8, #0xff
  407f58:	cmp	w10, w11, uxtb
  407f5c:	csel	w8, w11, w8, cc  // cc = lo, ul, last
  407f60:	add	x10, x12, #0x2
  407f64:	cmp	w13, w14
  407f68:	csel	x12, x10, x9, eq  // eq = none
  407f6c:	mov	x9, x12
  407f70:	ldrb	w11, [x9], #1
  407f74:	sub	w15, w11, #0x30
  407f78:	cmp	w15, #0xa
  407f7c:	b.cc	407f50 <ferror@plt+0x50c0>  // b.lo, b.ul, b.last
  407f80:	cmp	w13, w14
  407f84:	b.ne	407f90 <ferror@plt+0x5100>  // b.any
  407f88:	b	407fe0 <ferror@plt+0x5150>
  407f8c:	mov	w8, wzr
  407f90:	adrp	x10, 426000 <_obstack_memory_used@@Base+0x141b0>
  407f94:	ldr	w10, [x10, #1376]
  407f98:	cmp	w10, w11
  407f9c:	b.ne	407fdc <ferror@plt+0x514c>  // b.any
  407fa0:	ldrb	w11, [x9], #1
  407fa4:	sub	w10, w11, #0x30
  407fa8:	cmp	w10, #0x9
  407fac:	mov	x10, x9
  407fb0:	b.hi	407fe0 <ferror@plt+0x5150>  // b.pmore
  407fb4:	and	w9, w8, #0xff
  407fb8:	cmp	w9, w11, uxtb
  407fbc:	csel	w8, w11, w8, cc  // cc = lo, ul, last
  407fc0:	ldrb	w11, [x10], #1
  407fc4:	sub	w9, w11, #0x30
  407fc8:	cmp	w9, #0xa
  407fcc:	b.cc	407fb4 <ferror@plt+0x5124>  // b.lo, b.ul, b.last
  407fd0:	b	407fe0 <ferror@plt+0x5150>
  407fd4:	mov	x11, x8
  407fd8:	b	408020 <ferror@plt+0x5190>
  407fdc:	mov	x10, x9
  407fe0:	and	w8, w8, #0xff
  407fe4:	cmp	w8, #0x30
  407fe8:	mov	x11, x23
  407fec:	b.cc	408024 <ferror@plt+0x5194>  // b.lo, b.ul, b.last
  407ff0:	ldrb	w9, [x21, #53]
  407ff4:	sub	x8, x10, #0x1
  407ff8:	cbz	w9, 408018 <ferror@plt+0x5188>
  407ffc:	ldrb	w9, [x8]
  408000:	adrp	x10, 413000 <_obstack_memory_used@@Base+0x11b0>
  408004:	add	x10, x10, #0x388
  408008:	ldrb	w9, [x10, x9]
  40800c:	cmp	w9, #0x0
  408010:	cset	w9, ne  // ne = any
  408014:	b	40801c <ferror@plt+0x518c>
  408018:	mov	x9, xzr
  40801c:	add	x11, x8, x9
  408020:	str	x11, [sp, #8]
  408024:	strb	w20, [x22]
  408028:	mov	x22, x11
  40802c:	subs	x1, x23, x24
  408030:	mov	x0, x24
  408034:	mov	w2, wzr
  408038:	bl	40cf58 <ferror@plt+0xa0c8>
  40803c:	subs	x9, x23, x24
  408040:	sxtw	x20, w0
  408044:	b.ls	4080ac <ferror@plt+0x521c>  // b.plast
  408048:	cmp	x9, #0x2
  40804c:	b.cs	408058 <ferror@plt+0x51c8>  // b.hs, b.nlast
  408050:	mov	x8, x24
  408054:	b	408098 <ferror@plt+0x5208>
  408058:	and	x11, x9, #0xfffffffffffffffe
  40805c:	mov	x10, xzr
  408060:	add	x8, x24, x11
  408064:	add	x12, x24, #0x1
  408068:	mov	x13, x11
  40806c:	ldurb	w14, [x12, #-1]
  408070:	ldrb	w15, [x12], #2
  408074:	cmp	w14, #0x9
  408078:	cinc	x20, x20, eq  // eq = none
  40807c:	cmp	w15, #0x9
  408080:	cinc	x10, x10, eq  // eq = none
  408084:	subs	x13, x13, #0x2
  408088:	b.ne	40806c <ferror@plt+0x51dc>  // b.any
  40808c:	cmp	x11, x9
  408090:	add	x20, x10, x20
  408094:	b.eq	4080ac <ferror@plt+0x521c>  // b.none
  408098:	ldrb	w9, [x8], #1
  40809c:	cmp	w9, #0x9
  4080a0:	cinc	x20, x20, eq  // eq = none
  4080a4:	cmp	x23, x8
  4080a8:	b.ne	408098 <ferror@plt+0x5208>  // b.any
  4080ac:	subs	x1, x22, x23
  4080b0:	mov	x0, x23
  4080b4:	mov	w2, wzr
  4080b8:	bl	40cf58 <ferror@plt+0xa0c8>
  4080bc:	subs	x9, x22, x23
  4080c0:	sxtw	x24, w0
  4080c4:	b.ls	40812c <ferror@plt+0x529c>  // b.plast
  4080c8:	cmp	x9, #0x2
  4080cc:	b.cs	4080d8 <ferror@plt+0x5248>  // b.hs, b.nlast
  4080d0:	mov	x8, x23
  4080d4:	b	408118 <ferror@plt+0x5288>
  4080d8:	and	x11, x9, #0xfffffffffffffffe
  4080dc:	mov	x10, xzr
  4080e0:	add	x8, x23, x11
  4080e4:	add	x12, x23, #0x1
  4080e8:	mov	x13, x11
  4080ec:	ldurb	w14, [x12, #-1]
  4080f0:	ldrb	w15, [x12], #2
  4080f4:	cmp	w14, #0x9
  4080f8:	cinc	x24, x24, eq  // eq = none
  4080fc:	cmp	w15, #0x9
  408100:	cinc	x10, x10, eq  // eq = none
  408104:	subs	x13, x13, #0x2
  408108:	b.ne	4080ec <ferror@plt+0x525c>  // b.any
  40810c:	cmp	x11, x9
  408110:	add	x24, x10, x24
  408114:	b.eq	40812c <ferror@plt+0x529c>  // b.none
  408118:	ldrb	w9, [x8], #1
  40811c:	cmp	w9, #0x9
  408120:	cinc	x24, x24, eq  // eq = none
  408124:	cmp	x22, x8
  408128:	b.ne	408118 <ferror@plt+0x5288>  // b.any
  40812c:	cbz	x20, 408164 <ferror@plt+0x52d4>
  408130:	ldr	x0, [x27, #1336]
  408134:	sub	x20, x20, #0x1
  408138:	ldp	x8, x9, [x0, #40]
  40813c:	cmp	x8, x9
  408140:	b.cs	408158 <ferror@plt+0x52c8>  // b.hs, b.nlast
  408144:	add	x9, x8, #0x1
  408148:	str	x9, [x0, #40]
  40814c:	strb	w26, [x8]
  408150:	cbnz	x20, 408130 <ferror@plt+0x52a0>
  408154:	b	408164 <ferror@plt+0x52d4>
  408158:	mov	w1, #0x20                  	// #32
  40815c:	bl	402b30 <__overflow@plt>
  408160:	cbnz	x20, 408130 <ferror@plt+0x52a0>
  408164:	cbz	x24, 4081c8 <ferror@plt+0x5338>
  408168:	ldr	x0, [x27, #1336]
  40816c:	ldp	x8, x9, [x0, #40]
  408170:	cmp	x8, x9
  408174:	b.cs	408190 <ferror@plt+0x5300>  // b.hs, b.nlast
  408178:	add	x9, x8, #0x1
  40817c:	str	x9, [x0, #40]
  408180:	strb	w28, [x8]
  408184:	subs	x24, x24, #0x1
  408188:	b.ne	408168 <ferror@plt+0x52d8>  // b.any
  40818c:	b	4081a0 <ferror@plt+0x5310>
  408190:	mov	w1, #0x5f                  	// #95
  408194:	bl	402b30 <__overflow@plt>
  408198:	subs	x24, x24, #0x1
  40819c:	b.ne	408168 <ferror@plt+0x52d8>  // b.any
  4081a0:	ldr	x0, [x27, #1336]
  4081a4:	ldp	x8, x9, [x0, #40]
  4081a8:	cmp	x8, x9
  4081ac:	b.cs	408210 <ferror@plt+0x5380>  // b.hs, b.nlast
  4081b0:	add	x9, x8, #0x1
  4081b4:	str	x9, [x0, #40]
  4081b8:	mov	w9, #0xa                   	// #10
  4081bc:	strb	w9, [x8]
  4081c0:	cbnz	x21, 4081ec <ferror@plt+0x535c>
  4081c4:	b	407d5c <ferror@plt+0x4ecc>
  4081c8:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  4081cc:	mov	w2, #0x5                   	// #5
  4081d0:	mov	x0, xzr
  4081d4:	add	x1, x1, #0xda9
  4081d8:	bl	402d70 <dcgettext@plt>
  4081dc:	mov	x1, x0
  4081e0:	mov	w0, #0x1                   	// #1
  4081e4:	bl	4029d0 <__printf_chk@plt>
  4081e8:	cbz	x21, 407d5c <ferror@plt+0x4ecc>
  4081ec:	ldr	x21, [x21, #64]
  4081f0:	cbnz	x21, 407d98 <ferror@plt+0x4f08>
  4081f4:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  4081f8:	ldrb	w8, [x8, #1530]
  4081fc:	tbnz	w8, #0, 407d5c <ferror@plt+0x4ecc>
  408200:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  408204:	ldrb	w8, [x8, #1529]
  408208:	tbz	w8, #0, 407d98 <ferror@plt+0x4f08>
  40820c:	b	407d5c <ferror@plt+0x4ecc>
  408210:	mov	w1, #0xa                   	// #10
  408214:	bl	402b30 <__overflow@plt>
  408218:	cbnz	x21, 4081ec <ferror@plt+0x535c>
  40821c:	b	407d5c <ferror@plt+0x4ecc>
  408220:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  408224:	add	x1, x1, #0xd9c
  408228:	mov	w2, #0x5                   	// #5
  40822c:	mov	x0, xzr
  408230:	bl	402d70 <dcgettext@plt>
  408234:	mov	x1, xzr
  408238:	bl	406878 <ferror@plt+0x39e8>
  40823c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  408240:	add	x1, x1, #0xd9c
  408244:	mov	w2, #0x5                   	// #5
  408248:	mov	x0, xzr
  40824c:	bl	402d70 <dcgettext@plt>
  408250:	mov	x1, x22
  408254:	bl	406878 <ferror@plt+0x39e8>
  408258:	mov	x8, x0
  40825c:	ldr	x0, [x0]
  408260:	ldr	x9, [x8, #8]
  408264:	ldp	x10, x8, [x1, #16]
  408268:	adrp	x11, 426000 <_obstack_memory_used@@Base+0x141b0>
  40826c:	ldr	w11, [x11, #952]
  408270:	add	x9, x0, x9
  408274:	cmp	x8, #0x0
  408278:	cinc	x10, x10, eq  // eq = none
  40827c:	cmp	w11, #0x100
  408280:	sub	x9, x9, #0x1
  408284:	b.ne	40829c <ferror@plt+0x540c>  // b.any
  408288:	cmp	x0, x9
  40828c:	b.cs	408344 <ferror@plt+0x54b4>  // b.hs, b.nlast
  408290:	adrp	x11, 426000 <_obstack_memory_used@@Base+0x141b0>
  408294:	add	x11, x11, #0x620
  408298:	b	4082ec <ferror@plt+0x545c>
  40829c:	cmp	x0, x9
  4082a0:	b.cs	408344 <ferror@plt+0x54b4>  // b.hs, b.nlast
  4082a4:	cbz	x10, 408344 <ferror@plt+0x54b4>
  4082a8:	cmp	x0, x9
  4082ac:	sub	x10, x10, #0x1
  4082b0:	b.cs	40829c <ferror@plt+0x540c>  // b.hs, b.nlast
  4082b4:	ldrb	w12, [x0]
  4082b8:	cmp	w11, w12
  4082bc:	b.eq	4082d0 <ferror@plt+0x5440>  // b.none
  4082c0:	add	x0, x0, #0x1
  4082c4:	cmp	x9, x0
  4082c8:	b.ne	4082b4 <ferror@plt+0x5424>  // b.any
  4082cc:	b	408340 <ferror@plt+0x54b0>
  4082d0:	orr	x12, x10, x8
  4082d4:	cmp	x12, #0x0
  4082d8:	cinc	x0, x0, ne  // ne = any
  4082dc:	b	40829c <ferror@plt+0x540c>
  4082e0:	cmp	x0, x9
  4082e4:	sub	x10, x10, #0x1
  4082e8:	b.cs	408344 <ferror@plt+0x54b4>  // b.hs, b.nlast
  4082ec:	cbz	x10, 408344 <ferror@plt+0x54b4>
  4082f0:	cmp	x0, x9
  4082f4:	b.cs	408314 <ferror@plt+0x5484>  // b.hs, b.nlast
  4082f8:	ldrb	w12, [x0]
  4082fc:	ldrb	w12, [x11, x12]
  408300:	cbz	w12, 408314 <ferror@plt+0x5484>
  408304:	add	x0, x0, #0x1
  408308:	cmp	x9, x0
  40830c:	b.ne	4082f8 <ferror@plt+0x5468>  // b.any
  408310:	b	408334 <ferror@plt+0x54a4>
  408314:	cmp	x0, x9
  408318:	b.cs	4082e0 <ferror@plt+0x5450>  // b.hs, b.nlast
  40831c:	ldrb	w12, [x0]
  408320:	ldrb	w12, [x11, x12]
  408324:	cbnz	w12, 4082e0 <ferror@plt+0x5450>
  408328:	add	x0, x0, #0x1
  40832c:	cmp	x9, x0
  408330:	b.ne	40831c <ferror@plt+0x548c>  // b.any
  408334:	mov	x0, x9
  408338:	cbnz	x8, 408348 <ferror@plt+0x54b8>
  40833c:	ret
  408340:	mov	x0, x9
  408344:	cbz	x8, 40833c <ferror@plt+0x54ac>
  408348:	ldrb	w10, [x1, #49]
  40834c:	cbz	w10, 40837c <ferror@plt+0x54ec>
  408350:	cmp	x0, x9
  408354:	b.cs	40837c <ferror@plt+0x54ec>  // b.hs, b.nlast
  408358:	adrp	x10, 426000 <_obstack_memory_used@@Base+0x141b0>
  40835c:	add	x10, x10, #0x620
  408360:	ldrb	w11, [x0]
  408364:	ldrb	w11, [x10, x11]
  408368:	cbz	w11, 40837c <ferror@plt+0x54ec>
  40836c:	add	x0, x0, #0x1
  408370:	cmp	x9, x0
  408374:	b.ne	408360 <ferror@plt+0x54d0>  // b.any
  408378:	mov	x0, x9
  40837c:	add	x8, x0, x8
  408380:	cmp	x9, x8
  408384:	csel	x0, x9, x8, cc  // cc = lo, ul, last
  408388:	ret
  40838c:	ldp	x8, x13, [x0]
  408390:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x141b0>
  408394:	ldr	w12, [x9, #952]
  408398:	ldp	x11, x10, [x1]
  40839c:	add	x9, x8, x13
  4083a0:	sub	x9, x9, #0x1
  4083a4:	cmp	w12, #0x100
  4083a8:	b.ne	408418 <ferror@plt+0x5588>  // b.any
  4083ac:	cmp	x8, x9
  4083b0:	b.cs	40848c <ferror@plt+0x55fc>  // b.hs, b.nlast
  4083b4:	adrp	x12, 426000 <_obstack_memory_used@@Base+0x141b0>
  4083b8:	add	x12, x12, #0x620
  4083bc:	cbz	x11, 40848c <ferror@plt+0x55fc>
  4083c0:	cmp	x8, x9
  4083c4:	b.cs	4083e4 <ferror@plt+0x5554>  // b.hs, b.nlast
  4083c8:	ldrb	w13, [x8]
  4083cc:	ldrb	w13, [x12, x13]
  4083d0:	cbz	w13, 4083e4 <ferror@plt+0x5554>
  4083d4:	add	x8, x8, #0x1
  4083d8:	cmp	x9, x8
  4083dc:	b.ne	4083c8 <ferror@plt+0x5538>  // b.any
  4083e0:	b	4084bc <ferror@plt+0x562c>
  4083e4:	cmp	x8, x9
  4083e8:	b.cs	408408 <ferror@plt+0x5578>  // b.hs, b.nlast
  4083ec:	ldrb	w13, [x8]
  4083f0:	ldrb	w13, [x12, x13]
  4083f4:	cbnz	w13, 408408 <ferror@plt+0x5578>
  4083f8:	add	x8, x8, #0x1
  4083fc:	cmp	x9, x8
  408400:	b.ne	4083ec <ferror@plt+0x555c>  // b.any
  408404:	b	4084bc <ferror@plt+0x562c>
  408408:	cmp	x8, x9
  40840c:	sub	x11, x11, #0x1
  408410:	b.cc	4083bc <ferror@plt+0x552c>  // b.lo, b.ul, b.last
  408414:	b	40848c <ferror@plt+0x55fc>
  408418:	cmp	x8, x9
  40841c:	b.cs	40848c <ferror@plt+0x55fc>  // b.hs, b.nlast
  408420:	add	x13, x13, x8
  408424:	sub	x13, x13, #0x2
  408428:	b	408440 <ferror@plt+0x55b0>
  40842c:	mov	w14, #0x1                   	// #1
  408430:	cmp	w14, #0x0
  408434:	cinc	x8, x8, ne  // ne = any
  408438:	cmp	x8, x9
  40843c:	b.cs	40848c <ferror@plt+0x55fc>  // b.hs, b.nlast
  408440:	cbz	x11, 40848c <ferror@plt+0x55fc>
  408444:	cmp	x8, x9
  408448:	sub	x11, x11, #0x1
  40844c:	b.cs	408438 <ferror@plt+0x55a8>  // b.hs, b.nlast
  408450:	ldrb	w14, [x8]
  408454:	cmp	w12, w14
  408458:	b.eq	40842c <ferror@plt+0x559c>  // b.none
  40845c:	cmp	x13, x8
  408460:	add	x14, x8, #0x1
  408464:	b.eq	40847c <ferror@plt+0x55ec>  // b.none
  408468:	ldrb	w8, [x8, #1]
  40846c:	cmp	w12, w8
  408470:	mov	x8, x14
  408474:	b.ne	40845c <ferror@plt+0x55cc>  // b.any
  408478:	b	408480 <ferror@plt+0x55f0>
  40847c:	mov	x8, x9
  408480:	cmp	x14, x9
  408484:	cset	w14, cc  // cc = lo, ul, last
  408488:	b	408430 <ferror@plt+0x55a0>
  40848c:	ldrb	w11, [x1, #48]
  408490:	cbz	w11, 4084c0 <ferror@plt+0x5630>
  408494:	cmp	x8, x9
  408498:	b.cs	4084c0 <ferror@plt+0x5630>  // b.hs, b.nlast
  40849c:	adrp	x11, 426000 <_obstack_memory_used@@Base+0x141b0>
  4084a0:	add	x11, x11, #0x620
  4084a4:	ldrb	w12, [x8]
  4084a8:	ldrb	w12, [x11, x12]
  4084ac:	cbz	w12, 4084c0 <ferror@plt+0x5630>
  4084b0:	add	x8, x8, #0x1
  4084b4:	cmp	x9, x8
  4084b8:	b.ne	4084a4 <ferror@plt+0x5614>  // b.any
  4084bc:	mov	x8, x9
  4084c0:	add	x8, x8, x10
  4084c4:	cmp	x9, x8
  4084c8:	csel	x0, x9, x8, cc  // cc = lo, ul, last
  4084cc:	ret
  4084d0:	stp	x29, x30, [sp, #-48]!
  4084d4:	stp	x22, x21, [sp, #16]
  4084d8:	stp	x20, x19, [sp, #32]
  4084dc:	mov	x29, sp
  4084e0:	mov	x20, x2
  4084e4:	mov	x19, x1
  4084e8:	mov	x21, x0
  4084ec:	bl	402e00 <__errno_location@plt>
  4084f0:	mov	x22, x0
  4084f4:	str	wzr, [x0]
  4084f8:	mov	x0, x21
  4084fc:	mov	x1, x19
  408500:	mov	x2, x20
  408504:	bl	402cb0 <strxfrm@plt>
  408508:	ldr	w20, [x22]
  40850c:	cbnz	w20, 408520 <ferror@plt+0x5690>
  408510:	ldp	x20, x19, [sp, #32]
  408514:	ldp	x22, x21, [sp, #16]
  408518:	ldp	x29, x30, [sp], #48
  40851c:	ret
  408520:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  408524:	add	x1, x1, #0xd35
  408528:	mov	w2, #0x5                   	// #5
  40852c:	mov	x0, xzr
  408530:	bl	402d70 <dcgettext@plt>
  408534:	mov	x2, x0
  408538:	mov	w0, wzr
  40853c:	mov	w1, w20
  408540:	bl	4027f0 <error@plt>
  408544:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  408548:	add	x1, x1, #0xd52
  40854c:	mov	w2, #0x5                   	// #5
  408550:	mov	x0, xzr
  408554:	bl	402d70 <dcgettext@plt>
  408558:	mov	x2, x0
  40855c:	mov	w0, wzr
  408560:	mov	w1, wzr
  408564:	bl	4027f0 <error@plt>
  408568:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  40856c:	add	x1, x1, #0xd7c
  408570:	mov	w2, #0x5                   	// #5
  408574:	mov	x0, xzr
  408578:	bl	402d70 <dcgettext@plt>
  40857c:	mov	x20, x0
  408580:	mov	w1, #0x8                   	// #8
  408584:	mov	w0, wzr
  408588:	mov	x2, x19
  40858c:	bl	40e924 <ferror@plt+0xba94>
  408590:	mov	x3, x0
  408594:	mov	w0, #0x2                   	// #2
  408598:	mov	w1, wzr
  40859c:	mov	x2, x20
  4085a0:	bl	4027f0 <error@plt>
  4085a4:	cmp	w0, w1
  4085a8:	b.ne	4085b0 <ferror@plt+0x5720>  // b.any
  4085ac:	ret
  4085b0:	stp	x29, x30, [sp, #-32]!
  4085b4:	str	x19, [sp, #16]
  4085b8:	mov	x29, sp
  4085bc:	mov	w19, w0
  4085c0:	bl	402dc0 <dup2@plt>
  4085c4:	mov	w0, w19
  4085c8:	ldr	x19, [sp, #16]
  4085cc:	ldp	x29, x30, [sp], #32
  4085d0:	b	402a70 <close@plt>
  4085d4:	sub	sp, sp, #0x70
  4085d8:	lsr	x8, x1, #60
  4085dc:	stp	x29, x30, [sp, #16]
  4085e0:	stp	x28, x27, [sp, #32]
  4085e4:	stp	x26, x25, [sp, #48]
  4085e8:	stp	x24, x23, [sp, #64]
  4085ec:	stp	x22, x21, [sp, #80]
  4085f0:	stp	x20, x19, [sp, #96]
  4085f4:	add	x29, sp, #0x10
  4085f8:	cbnz	x8, 4087b0 <ferror@plt+0x5920>
  4085fc:	mov	x22, x0
  408600:	lsl	x0, x1, #3
  408604:	mov	x20, x2
  408608:	mov	x19, x1
  40860c:	bl	41078c <ferror@plt+0xd8fc>
  408610:	str	x0, [x20]
  408614:	cbz	x19, 408780 <ferror@plt+0x58f0>
  408618:	add	x28, x22, #0x8
  40861c:	adrp	x22, 414000 <_obstack_memory_used@@Base+0x21b0>
  408620:	mov	x21, x0
  408624:	mov	x20, xzr
  408628:	add	x22, x22, #0x8f8
  40862c:	adrp	x23, 426000 <_obstack_memory_used@@Base+0x141b0>
  408630:	mov	w24, #0x1                   	// #1
  408634:	ldr	x25, [x28]
  408638:	cbz	x25, 408724 <ferror@plt+0x5894>
  40863c:	ldrb	w8, [x25, #12]
  408640:	cbz	w8, 408724 <ferror@plt+0x5894>
  408644:	cmp	w8, #0x1
  408648:	b.ne	408674 <ferror@plt+0x57e4>  // b.any
  40864c:	ldr	w26, [x25, #8]
  408650:	ldr	x0, [x23, #2912]
  408654:	mov	x1, sp
  408658:	str	w26, [sp, #8]
  40865c:	bl	40c97c <ferror@plt+0x9aec>
  408660:	cbz	x0, 408674 <ferror@plt+0x57e4>
  408664:	mov	w8, #0x2                   	// #2
  408668:	strb	w8, [x0, #12]
  40866c:	mov	w0, w26
  408670:	bl	4094a8 <ferror@plt+0x6618>
  408674:	add	x0, x25, #0xd
  408678:	mov	w1, wzr
  40867c:	bl	402950 <open@plt>
  408680:	tbnz	w0, #31, 40874c <ferror@plt+0x58bc>
  408684:	mov	w26, w0
  408688:	mov	x0, sp
  40868c:	mov	w1, #0x9                   	// #9
  408690:	bl	409270 <ferror@plt+0x63e0>
  408694:	cmn	w0, #0x1
  408698:	b.eq	408754 <ferror@plt+0x58c4>  // b.none
  40869c:	cbz	w0, 4087b4 <ferror@plt+0x5924>
  4086a0:	str	w0, [x25, #8]
  4086a4:	ldr	x0, [x23, #2912]
  4086a8:	cbnz	x0, 4086d4 <ferror@plt+0x5844>
  4086ac:	adrp	x2, 409000 <ferror@plt+0x6170>
  4086b0:	adrp	x3, 409000 <ferror@plt+0x6170>
  4086b4:	mov	w0, #0x2f                  	// #47
  4086b8:	mov	x1, xzr
  4086bc:	add	x2, x2, #0x5b4
  4086c0:	add	x3, x3, #0x5c4
  4086c4:	mov	x4, xzr
  4086c8:	bl	40bf2c <ferror@plt+0x909c>
  4086cc:	str	x0, [x23, #2912]
  4086d0:	cbz	x0, 4087b0 <ferror@plt+0x5920>
  4086d4:	mov	x1, x25
  4086d8:	strb	w24, [x25, #12]
  4086dc:	bl	40c944 <ferror@plt+0x9ab4>
  4086e0:	cbz	x0, 4087b0 <ferror@plt+0x5920>
  4086e4:	mov	w0, w26
  4086e8:	bl	402a70 <close@plt>
  4086ec:	ldr	w0, [sp, #4]
  4086f0:	bl	402a70 <close@plt>
  4086f4:	ldr	w0, [sp]
  4086f8:	mov	x1, x22
  4086fc:	bl	4029f0 <fdopen@plt>
  408700:	cbnz	x0, 408730 <ferror@plt+0x58a0>
  408704:	bl	402e00 <__errno_location@plt>
  408708:	mov	x25, x0
  40870c:	ldr	w26, [x0]
  408710:	ldr	w0, [sp]
  408714:	bl	402a70 <close@plt>
  408718:	mov	x0, xzr
  40871c:	str	w26, [x25]
  408720:	b	408730 <ferror@plt+0x58a0>
  408724:	ldur	x0, [x28, #-8]
  408728:	mov	x1, x22
  40872c:	bl	4068ec <ferror@plt+0x3a5c>
  408730:	str	x0, [x21, x20, lsl #3]
  408734:	cbz	x0, 40878c <ferror@plt+0x58fc>
  408738:	add	x20, x20, #0x1
  40873c:	cmp	x19, x20
  408740:	add	x28, x28, #0x10
  408744:	b.ne	408634 <ferror@plt+0x57a4>  // b.any
  408748:	b	408788 <ferror@plt+0x58f8>
  40874c:	mov	x0, xzr
  408750:	b	408730 <ferror@plt+0x58a0>
  408754:	bl	402e00 <__errno_location@plt>
  408758:	ldr	w25, [x0]
  40875c:	cmp	w25, #0x18
  408760:	b.ne	408804 <ferror@plt+0x5974>  // b.any
  408764:	mov	x27, x0
  408768:	mov	w0, w26
  40876c:	bl	402a70 <close@plt>
  408770:	mov	w8, #0x18                  	// #24
  408774:	mov	x0, xzr
  408778:	str	w8, [x27]
  40877c:	b	408730 <ferror@plt+0x58a0>
  408780:	mov	x20, xzr
  408784:	b	40878c <ferror@plt+0x58fc>
  408788:	and	x20, x19, #0xffffffff
  40878c:	mov	x0, x20
  408790:	ldp	x20, x19, [sp, #96]
  408794:	ldp	x22, x21, [sp, #80]
  408798:	ldp	x24, x23, [sp, #64]
  40879c:	ldp	x26, x25, [sp, #48]
  4087a0:	ldp	x28, x27, [sp, #32]
  4087a4:	ldp	x29, x30, [sp, #16]
  4087a8:	add	sp, sp, #0x70
  4087ac:	ret
  4087b0:	bl	410aa0 <ferror@plt+0xdc10>
  4087b4:	ldr	w0, [sp]
  4087b8:	bl	402a70 <close@plt>
  4087bc:	mov	w0, w26
  4087c0:	mov	w1, wzr
  4087c4:	bl	4085a4 <ferror@plt+0x5714>
  4087c8:	ldr	w0, [sp, #4]
  4087cc:	mov	w1, #0x1                   	// #1
  4087d0:	bl	4085a4 <ferror@plt+0x5714>
  4087d4:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  4087d8:	ldr	x0, [x8, #1520]
  4087dc:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x21b0>
  4087e0:	add	x2, x2, #0xdea
  4087e4:	mov	x3, xzr
  4087e8:	mov	x1, x0
  4087ec:	bl	402e10 <execlp@plt>
  4087f0:	bl	402e00 <__errno_location@plt>
  4087f4:	ldr	w0, [x0]
  4087f8:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  4087fc:	add	x1, x1, #0xded
  408800:	bl	40941c <ferror@plt+0x658c>
  408804:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  408808:	add	x1, x1, #0xdcb
  40880c:	mov	w2, #0x5                   	// #5
  408810:	mov	x0, xzr
  408814:	bl	402d70 <dcgettext@plt>
  408818:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  40881c:	ldr	x1, [x8, #1520]
  408820:	mov	x19, x0
  408824:	mov	w0, #0x4                   	// #4
  408828:	bl	40e9bc <ferror@plt+0xbb2c>
  40882c:	mov	x3, x0
  408830:	mov	w0, #0x2                   	// #2
  408834:	mov	w1, w25
  408838:	mov	x2, x19
  40883c:	bl	4027f0 <error@plt>
  408840:	sub	sp, sp, #0x120
  408844:	mov	x8, #0x924a                	// #37450
  408848:	movk	x8, #0x4924, lsl #16
  40884c:	movk	x8, #0x2492, lsl #32
  408850:	movk	x8, #0x249, lsl #48
  408854:	stp	x29, x30, [sp, #192]
  408858:	add	x29, sp, #0xc0
  40885c:	cmp	x2, x8
  408860:	stp	x28, x27, [sp, #208]
  408864:	stp	x26, x25, [sp, #224]
  408868:	stp	x24, x23, [sp, #240]
  40886c:	stp	x22, x21, [sp, #256]
  408870:	stp	x20, x19, [sp, #272]
  408874:	str	x3, [sp, #80]
  408878:	str	x1, [sp, #96]
  40887c:	stur	x0, [x29, #-56]
  408880:	b.cs	408aa8 <ferror@plt+0x5c18>  // b.hs, b.nlast
  408884:	mov	w8, #0x38                  	// #56
  408888:	mul	x0, x2, x8
  40888c:	mov	x21, x5
  408890:	mov	x26, x4
  408894:	mov	x28, x2
  408898:	bl	41078c <ferror@plt+0xd8fc>
  40889c:	lsl	x20, x28, #3
  4088a0:	mov	x27, x0
  4088a4:	mov	x0, x20
  4088a8:	bl	41078c <ferror@plt+0xd8fc>
  4088ac:	stur	x0, [x29, #-48]
  4088b0:	mov	x0, x20
  4088b4:	bl	41078c <ferror@plt+0xd8fc>
  4088b8:	stur	x0, [x29, #-88]
  4088bc:	mov	x0, x20
  4088c0:	bl	41078c <ferror@plt+0xd8fc>
  4088c4:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  4088c8:	ldr	x8, [x8, #1536]
  4088cc:	mov	x25, x0
  4088d0:	stur	xzr, [x29, #-40]
  4088d4:	str	x8, [sp, #48]
  4088d8:	cbz	x28, 408f80 <ferror@plt+0x60f0>
  4088dc:	add	x8, x21, #0x8
  4088e0:	str	x8, [sp, #72]
  4088e4:	ldur	x8, [x29, #-56]
  4088e8:	str	x26, [sp, #56]
  4088ec:	mov	x24, xzr
  4088f0:	mov	w26, #0x38                  	// #56
  4088f4:	add	x8, x8, #0x10
  4088f8:	str	x8, [sp, #64]
  4088fc:	adrp	x8, 412000 <_obstack_memory_used@@Base+0x1b0>
  408900:	ldr	q0, [x8, #2640]
  408904:	str	x27, [sp, #88]
  408908:	stur	q0, [x29, #-80]
  40890c:	b	408950 <ferror@plt+0x5ac0>
  408910:	ldr	x8, [x20]
  408914:	ldr	x9, [x19]
  408918:	madd	x10, x24, x26, x23
  40891c:	ldr	x10, [x10, #16]
  408920:	lsl	x11, x24, #3
  408924:	add	x8, x8, x9
  408928:	sub	x9, x8, #0x20
  40892c:	sub	x8, x8, x10, lsl #5
  408930:	ldur	x10, [x29, #-48]
  408934:	add	x24, x24, #0x1
  408938:	mov	x27, x23
  40893c:	str	x9, [x10, x11]
  408940:	ldur	x9, [x29, #-88]
  408944:	str	x8, [x9, x11]
  408948:	cmp	x24, x28
  40894c:	b.cs	408a50 <ferror@plt+0x5bc0>  // b.hs, b.nlast
  408950:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  408954:	ldr	x8, [x8, #1560]
  408958:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x141b0>
  40895c:	ldr	x9, [x9, #1168]
  408960:	mov	x22, x21
  408964:	udiv	x8, x8, x28
  408968:	madd	x20, x24, x26, x27
  40896c:	cmp	x9, x8
  408970:	csel	x8, x9, x8, hi  // hi = pmore
  408974:	and	x8, x8, #0xffffffffffffffe0
  408978:	add	x21, x8, #0x20
  40897c:	mov	x0, x21
  408980:	bl	402930 <malloc@plt>
  408984:	str	x0, [x20]
  408988:	cbnz	x0, 40899c <ferror@plt+0x5b0c>
  40898c:	cmp	x21, #0x43
  408990:	lsr	x8, x21, #1
  408994:	b.hi	408974 <ferror@plt+0x5ae4>  // b.pmore
  408998:	b	408aa8 <ferror@plt+0x5c18>
  40899c:	ldur	x8, [x29, #-56]
  4089a0:	ldur	q0, [x29, #-80]
  4089a4:	madd	x19, x24, x26, x27
  4089a8:	str	x21, [x19, #24]!
  4089ac:	mov	x23, x27
  4089b0:	add	x27, x8, x24, lsl #4
  4089b4:	stur	q0, [x19, #8]
  4089b8:	strb	wzr, [x19, #24]
  4089bc:	stp	xzr, xzr, [x19, #-16]
  4089c0:	ldr	x1, [x22, x24, lsl #3]
  4089c4:	ldr	x2, [x27]
  4089c8:	mov	x0, x20
  4089cc:	mov	x21, x22
  4089d0:	bl	406b4c <ferror@plt+0x3cbc>
  4089d4:	tbnz	w0, #0, 408910 <ferror@plt+0x5a80>
  4089d8:	ldr	x0, [x21, x24, lsl #3]
  4089dc:	ldr	x1, [x27]
  4089e0:	bl	4062f8 <ferror@plt+0x3468>
  4089e4:	ldr	x8, [sp, #96]
  4089e8:	cmp	x24, x8
  4089ec:	b.cs	408a00 <ferror@plt+0x5b70>  // b.hs, b.nlast
  4089f0:	ldr	x0, [x27]
  4089f4:	sub	x8, x8, #0x1
  4089f8:	str	x8, [sp, #96]
  4089fc:	bl	4095d8 <ferror@plt+0x6748>
  408a00:	ldr	x0, [x20]
  408a04:	ldr	x27, [sp, #88]
  408a08:	bl	402c00 <free@plt>
  408a0c:	sub	x28, x28, #0x1
  408a10:	cmp	x24, x28
  408a14:	b.cs	408948 <ferror@plt+0x5ab8>  // b.hs, b.nlast
  408a18:	ldp	x9, x8, [sp, #64]
  408a1c:	mov	x10, x28
  408a20:	add	x8, x8, x24, lsl #3
  408a24:	add	x9, x9, x24, lsl #4
  408a28:	ldr	q0, [x9]
  408a2c:	sub	x10, x10, #0x1
  408a30:	cmp	x24, x10
  408a34:	stur	q0, [x9, #-16]
  408a38:	ldr	x11, [x8]
  408a3c:	add	x9, x9, #0x10
  408a40:	stur	x11, [x8, #-8]
  408a44:	add	x8, x8, #0x8
  408a48:	b.ne	408a28 <ferror@plt+0x5b98>  // b.any
  408a4c:	b	408948 <ferror@plt+0x5ab8>
  408a50:	ldr	x26, [sp, #56]
  408a54:	cbz	x28, 408f80 <ferror@plt+0x60f0>
  408a58:	cmp	x28, #0x3
  408a5c:	b.hi	408a68 <ferror@plt+0x5bd8>  // b.pmore
  408a60:	mov	x8, xzr
  408a64:	b	408aac <ferror@plt+0x5c1c>
  408a68:	adrp	x10, 412000 <_obstack_memory_used@@Base+0x1b0>
  408a6c:	ldr	q0, [x10, #2656]
  408a70:	mov	w10, #0x2                   	// #2
  408a74:	and	x8, x28, #0xfffffffffffffffc
  408a78:	dup	v1.2d, x10
  408a7c:	mov	w10, #0x4                   	// #4
  408a80:	add	x9, x25, #0x10
  408a84:	dup	v2.2d, x10
  408a88:	mov	x10, x8
  408a8c:	add	v3.2d, v0.2d, v1.2d
  408a90:	stp	q0, q3, [x9, #-16]
  408a94:	add	v0.2d, v0.2d, v2.2d
  408a98:	subs	x10, x10, #0x4
  408a9c:	add	x9, x9, #0x20
  408aa0:	b.ne	408a8c <ferror@plt+0x5bfc>  // b.any
  408aa4:	b	408ab4 <ferror@plt+0x5c24>
  408aa8:	bl	410aa0 <ferror@plt+0xdc10>
  408aac:	str	x8, [x25, x8, lsl #3]
  408ab0:	add	x8, x8, #0x1
  408ab4:	cmp	x28, x8
  408ab8:	b.ne	408aac <ferror@plt+0x5c1c>  // b.any
  408abc:	cmp	x28, #0x2
  408ac0:	b.cc	408b0c <ferror@plt+0x5c7c>  // b.lo, b.ul, b.last
  408ac4:	mov	w19, #0x1                   	// #1
  408ac8:	b	408ad8 <ferror@plt+0x5c48>
  408acc:	add	x19, x19, #0x1
  408ad0:	cmp	x19, x28
  408ad4:	b.cs	408b0c <ferror@plt+0x5c7c>  // b.hs, b.nlast
  408ad8:	sub	x20, x19, #0x1
  408adc:	ldr	x21, [x25, x20, lsl #3]
  408ae0:	ldr	x24, [x25, x19, lsl #3]
  408ae4:	ldur	x8, [x29, #-48]
  408ae8:	ldr	x0, [x8, x21, lsl #3]
  408aec:	ldr	x1, [x8, x24, lsl #3]
  408af0:	bl	406e78 <ferror@plt+0x3fe8>
  408af4:	cmp	w0, #0x1
  408af8:	b.lt	408acc <ferror@plt+0x5c3c>  // b.tstop
  408afc:	str	x24, [x25, x20, lsl #3]
  408b00:	str	x21, [x25, x19, lsl #3]
  408b04:	mov	x19, xzr
  408b08:	b	408acc <ferror@plt+0x5c3c>
  408b0c:	mov	x21, x22
  408b10:	cbz	x28, 408f80 <ferror@plt+0x60f0>
  408b14:	add	x8, x25, #0x8
  408b18:	str	x8, [sp, #72]
  408b1c:	ldur	x8, [x29, #-88]
  408b20:	mov	x20, xzr
  408b24:	adrp	x23, 426000 <_obstack_memory_used@@Base+0x141b0>
  408b28:	stur	xzr, [x29, #-80]
  408b2c:	add	x8, x8, #0x8
  408b30:	str	x8, [sp, #32]
  408b34:	ldur	x8, [x29, #-48]
  408b38:	str	x21, [sp, #40]
  408b3c:	add	x8, x8, #0x8
  408b40:	str	x8, [sp, #24]
  408b44:	ldur	x8, [x29, #-56]
  408b48:	add	x8, x8, #0x10
  408b4c:	str	x8, [sp, #16]
  408b50:	add	x8, x21, #0x8
  408b54:	str	x8, [sp, #8]
  408b58:	add	x8, x25, #0x10
  408b5c:	str	x8, [sp, #64]
  408b60:	b	408b74 <ferror@plt+0x5ce4>
  408b64:	mov	x8, xzr
  408b68:	mov	x21, x22
  408b6c:	str	x24, [x25, x8, lsl #3]
  408b70:	cbz	x28, 408f58 <ferror@plt+0x60c8>
  408b74:	ldr	x24, [x25]
  408b78:	ldur	x9, [x29, #-48]
  408b7c:	ldrb	w8, [x23, #1530]
  408b80:	mov	x22, x21
  408b84:	ldr	x21, [x9, x24, lsl #3]
  408b88:	cmp	w8, #0x1
  408b8c:	b.ne	408bd4 <ferror@plt+0x5d44>  // b.any
  408b90:	ldur	x0, [x29, #-80]
  408b94:	cbz	x0, 408bb4 <ferror@plt+0x5d24>
  408b98:	mov	x1, x21
  408b9c:	bl	406e78 <ferror@plt+0x3fe8>
  408ba0:	cbz	w0, 408c50 <ferror@plt+0x5dc0>
  408ba4:	ldr	x1, [sp, #80]
  408ba8:	sub	x0, x29, #0x28
  408bac:	mov	x2, x26
  408bb0:	bl	407c7c <ferror@plt+0x4dec>
  408bb4:	ldr	x2, [x21, #8]
  408bb8:	cmp	x20, x2
  408bbc:	b.cs	408be8 <ferror@plt+0x5d58>  // b.hs, b.nlast
  408bc0:	cbz	x20, 408bf0 <ferror@plt+0x5d60>
  408bc4:	lsl	x20, x20, #1
  408bc8:	cmp	x20, x2
  408bcc:	b.cc	408bc0 <ferror@plt+0x5d30>  // b.lo, b.ul, b.last
  408bd0:	b	408bf4 <ferror@plt+0x5d64>
  408bd4:	ldr	x1, [sp, #80]
  408bd8:	mov	x0, x21
  408bdc:	mov	x2, x26
  408be0:	bl	407c7c <ferror@plt+0x4dec>
  408be4:	b	408c50 <ferror@plt+0x5dc0>
  408be8:	ldur	x0, [x29, #-40]
  408bec:	b	408c0c <ferror@plt+0x5d7c>
  408bf0:	mov	x20, x2
  408bf4:	ldur	x0, [x29, #-40]
  408bf8:	bl	402c00 <free@plt>
  408bfc:	mov	x0, x20
  408c00:	bl	41078c <ferror@plt+0xd8fc>
  408c04:	stur	x0, [x29, #-40]
  408c08:	ldr	x2, [x21, #8]
  408c0c:	stur	x2, [x29, #-32]
  408c10:	ldr	x1, [x21]
  408c14:	bl	402760 <memcpy@plt>
  408c18:	ldr	x8, [sp, #48]
  408c1c:	cbz	x8, 408c48 <ferror@plt+0x5db8>
  408c20:	ldr	x8, [x21, #16]
  408c24:	ldr	x9, [x21]
  408c28:	ldur	x10, [x29, #-40]
  408c2c:	sub	x8, x8, x9
  408c30:	add	x8, x10, x8
  408c34:	stur	x8, [x29, #-24]
  408c38:	ldr	x8, [x21, #24]
  408c3c:	sub	x8, x8, x9
  408c40:	add	x8, x10, x8
  408c44:	stur	x8, [x29, #-16]
  408c48:	sub	x8, x29, #0x28
  408c4c:	stur	x8, [x29, #-80]
  408c50:	ldur	x8, [x29, #-88]
  408c54:	ldr	x8, [x8, x24, lsl #3]
  408c58:	cmp	x8, x21
  408c5c:	b.cs	408c78 <ferror@plt+0x5de8>  // b.hs, b.nlast
  408c60:	ldur	x8, [x29, #-48]
  408c64:	sub	x21, x21, #0x20
  408c68:	str	x21, [x8, x24, lsl #3]
  408c6c:	cmp	x28, #0x2
  408c70:	b.cc	408b64 <ferror@plt+0x5cd4>  // b.lo, b.ul, b.last
  408c74:	b	408cd0 <ferror@plt+0x5e40>
  408c78:	ldur	x9, [x29, #-56]
  408c7c:	lsl	x8, x24, #4
  408c80:	ldr	x1, [x22, x24, lsl #3]
  408c84:	mov	w19, #0x38                  	// #56
  408c88:	ldr	x2, [x9, x8]
  408c8c:	madd	x21, x24, x19, x27
  408c90:	mov	x0, x21
  408c94:	bl	406b4c <ferror@plt+0x3cbc>
  408c98:	tbz	w0, #0, 408d54 <ferror@plt+0x5ec4>
  408c9c:	madd	x9, x24, x19, x27
  408ca0:	ldr	x8, [x21]
  408ca4:	ldp	x9, x10, [x9, #16]
  408ca8:	lsl	x11, x24, #3
  408cac:	add	x8, x8, x10
  408cb0:	sub	x21, x8, #0x20
  408cb4:	sub	x8, x8, x9, lsl #5
  408cb8:	ldur	x9, [x29, #-48]
  408cbc:	str	x21, [x9, x11]
  408cc0:	ldur	x9, [x29, #-88]
  408cc4:	str	x8, [x9, x11]
  408cc8:	cmp	x28, #0x2
  408ccc:	b.cc	408b64 <ferror@plt+0x5cd4>  // b.lo, b.ul, b.last
  408cd0:	ldur	x22, [x29, #-48]
  408cd4:	mov	w26, #0x1                   	// #1
  408cd8:	mov	x27, x28
  408cdc:	mov	w19, #0x1                   	// #1
  408ce0:	b	408cf8 <ferror@plt+0x5e68>
  408ce4:	add	x8, x26, x19
  408ce8:	mov	x27, x26
  408cec:	cmp	x19, x26
  408cf0:	lsr	x26, x8, #1
  408cf4:	b.cs	408d2c <ferror@plt+0x5e9c>  // b.hs, b.nlast
  408cf8:	ldr	x23, [x25, x26, lsl #3]
  408cfc:	mov	x0, x21
  408d00:	ldr	x1, [x22, x23, lsl #3]
  408d04:	bl	406e78 <ferror@plt+0x3fe8>
  408d08:	tbnz	w0, #31, 408ce4 <ferror@plt+0x5e54>
  408d0c:	cmp	w0, #0x0
  408d10:	cset	w8, eq  // eq = none
  408d14:	cmp	x24, x23
  408d18:	cset	w9, cc  // cc = lo, ul, last
  408d1c:	tst	w9, w8
  408d20:	csinc	x19, x19, x26, ne  // ne = any
  408d24:	csel	x26, x26, x27, ne  // ne = any
  408d28:	b	408ce4 <ferror@plt+0x5e54>
  408d2c:	subs	x8, x19, #0x1
  408d30:	b.eq	408d94 <ferror@plt+0x5f04>  // b.none
  408d34:	ldr	x21, [sp, #40]
  408d38:	cmp	x8, #0x4
  408d3c:	adrp	x23, 426000 <_obstack_memory_used@@Base+0x141b0>
  408d40:	b.cs	408efc <ferror@plt+0x606c>  // b.hs, b.nlast
  408d44:	ldr	x26, [sp, #56]
  408d48:	ldr	x27, [sp, #88]
  408d4c:	mov	x9, xzr
  408d50:	b	408f30 <ferror@plt+0x60a0>
  408d54:	cmp	x28, #0x2
  408d58:	b.cc	408db0 <ferror@plt+0x5f20>  // b.lo, b.ul, b.last
  408d5c:	ldr	x9, [sp, #72]
  408d60:	sub	x8, x28, #0x1
  408d64:	mov	x11, x22
  408d68:	b	408d7c <ferror@plt+0x5eec>
  408d6c:	ldr	x24, [x25]
  408d70:	subs	x8, x8, #0x1
  408d74:	add	x9, x9, #0x8
  408d78:	b.eq	408db4 <ferror@plt+0x5f24>  // b.none
  408d7c:	ldr	x10, [x9]
  408d80:	cmp	x10, x24
  408d84:	b.ls	408d6c <ferror@plt+0x5edc>  // b.plast
  408d88:	sub	x10, x10, #0x1
  408d8c:	str	x10, [x9]
  408d90:	b	408d6c <ferror@plt+0x5edc>
  408d94:	ldr	x21, [sp, #40]
  408d98:	ldr	x26, [sp, #56]
  408d9c:	ldr	x27, [sp, #88]
  408da0:	adrp	x23, 426000 <_obstack_memory_used@@Base+0x141b0>
  408da4:	str	x24, [x25, x8, lsl #3]
  408da8:	cbnz	x28, 408b74 <ferror@plt+0x5ce4>
  408dac:	b	408f58 <ferror@plt+0x60c8>
  408db0:	mov	x11, x22
  408db4:	ldur	x8, [x29, #-56]
  408db8:	ldr	x0, [x11, x24, lsl #3]
  408dbc:	sub	x19, x28, #0x1
  408dc0:	add	x21, x8, x24, lsl #4
  408dc4:	ldr	x1, [x21]
  408dc8:	bl	4062f8 <ferror@plt+0x3468>
  408dcc:	ldr	x8, [sp, #96]
  408dd0:	cmp	x24, x8
  408dd4:	b.cs	408de8 <ferror@plt+0x5f58>  // b.hs, b.nlast
  408dd8:	ldr	x0, [x21]
  408ddc:	sub	x8, x8, #0x1
  408de0:	str	x8, [sp, #96]
  408de4:	bl	4095d8 <ferror@plt+0x6748>
  408de8:	mov	w8, #0x38                  	// #56
  408dec:	mul	x8, x24, x8
  408df0:	ldr	x0, [x27, x8]
  408df4:	bl	402c00 <free@plt>
  408df8:	cmp	x24, x19
  408dfc:	mov	x21, x22
  408e00:	b.cs	408e8c <ferror@plt+0x5ffc>  // b.hs, b.nlast
  408e04:	mov	w8, #0x38                  	// #56
  408e08:	madd	x10, x24, x8, x27
  408e0c:	ldp	x8, x11, [sp, #16]
  408e10:	ldr	x9, [sp, #32]
  408e14:	ldr	x14, [sp, #8]
  408e18:	lsl	x12, x24, #3
  408e1c:	mvn	x13, x24
  408e20:	add	x8, x8, x24, lsl #4
  408e24:	add	x9, x9, x12
  408e28:	add	x11, x11, x12
  408e2c:	add	x12, x14, x12
  408e30:	add	x13, x13, x28
  408e34:	ldr	x14, [x12]
  408e38:	subs	x13, x13, #0x1
  408e3c:	stur	x14, [x12, #-8]
  408e40:	ldr	q0, [x8]
  408e44:	add	x12, x12, #0x8
  408e48:	stur	q0, [x8, #-16]
  408e4c:	ldur	q0, [x10, #56]
  408e50:	ldur	q1, [x10, #72]
  408e54:	ldr	x14, [x10, #104]
  408e58:	ldr	x15, [x11]
  408e5c:	add	x8, x8, #0x10
  408e60:	stp	q0, q1, [x10]
  408e64:	ldur	q0, [x10, #88]
  408e68:	str	x14, [x10, #48]
  408e6c:	ldr	x14, [x9]
  408e70:	stur	x15, [x11, #-8]
  408e74:	str	q0, [x10, #32]
  408e78:	add	x10, x10, #0x38
  408e7c:	stur	x14, [x9, #-8]
  408e80:	add	x9, x9, #0x8
  408e84:	add	x11, x11, #0x8
  408e88:	b.ne	408e34 <ferror@plt+0x5fa4>  // b.any
  408e8c:	cbz	x19, 408f58 <ferror@plt+0x60c8>
  408e90:	cmp	x19, #0x3
  408e94:	b.hi	408ea0 <ferror@plt+0x6010>  // b.pmore
  408e98:	mov	x8, xzr
  408e9c:	b	408ecc <ferror@plt+0x603c>
  408ea0:	ldr	x10, [sp, #64]
  408ea4:	and	x8, x19, #0xfffffffffffffffc
  408ea8:	mov	x9, x8
  408eac:	ldur	q0, [x10, #-8]
  408eb0:	ldur	q1, [x10, #8]
  408eb4:	subs	x9, x9, #0x4
  408eb8:	stp	q0, q1, [x10, #-16]
  408ebc:	add	x10, x10, #0x20
  408ec0:	b.ne	408eac <ferror@plt+0x601c>  // b.any
  408ec4:	cmp	x19, x8
  408ec8:	b.eq	408ef0 <ferror@plt+0x6060>  // b.none
  408ecc:	ldr	x9, [sp, #72]
  408ed0:	add	x9, x9, x8, lsl #3
  408ed4:	mvn	x8, x8
  408ed8:	add	x8, x8, x28
  408edc:	ldr	x10, [x9]
  408ee0:	subs	x8, x8, #0x1
  408ee4:	stur	x10, [x9, #-8]
  408ee8:	add	x9, x9, #0x8
  408eec:	b.ne	408edc <ferror@plt+0x604c>  // b.any
  408ef0:	mov	x28, x19
  408ef4:	cbnz	x28, 408b74 <ferror@plt+0x5ce4>
  408ef8:	b	408f58 <ferror@plt+0x60c8>
  408efc:	ldr	x11, [sp, #64]
  408f00:	and	x9, x8, #0xfffffffffffffffc
  408f04:	mov	x10, x9
  408f08:	ldur	q0, [x11, #-8]
  408f0c:	ldur	q1, [x11, #8]
  408f10:	subs	x10, x10, #0x4
  408f14:	stp	q0, q1, [x11, #-16]
  408f18:	add	x11, x11, #0x20
  408f1c:	b.ne	408f08 <ferror@plt+0x6078>  // b.any
  408f20:	ldr	x26, [sp, #56]
  408f24:	ldr	x27, [sp, #88]
  408f28:	cmp	x8, x9
  408f2c:	b.eq	408b6c <ferror@plt+0x5cdc>  // b.none
  408f30:	ldr	x10, [sp, #72]
  408f34:	add	x10, x10, x9, lsl #3
  408f38:	mvn	x9, x9
  408f3c:	add	x9, x9, x19
  408f40:	ldr	x11, [x10]
  408f44:	subs	x9, x9, #0x1
  408f48:	stur	x11, [x10, #-8]
  408f4c:	add	x10, x10, #0x8
  408f50:	b.ne	408f40 <ferror@plt+0x60b0>  // b.any
  408f54:	b	408b6c <ferror@plt+0x5cdc>
  408f58:	ldur	x8, [x29, #-80]
  408f5c:	cbz	x8, 408f80 <ferror@plt+0x60f0>
  408f60:	ldrb	w8, [x23, #1530]
  408f64:	cbz	w8, 408f80 <ferror@plt+0x60f0>
  408f68:	ldr	x1, [sp, #80]
  408f6c:	sub	x0, x29, #0x28
  408f70:	mov	x2, x26
  408f74:	bl	407c7c <ferror@plt+0x4dec>
  408f78:	ldur	x0, [x29, #-40]
  408f7c:	bl	402c00 <free@plt>
  408f80:	ldr	x0, [sp, #80]
  408f84:	mov	x1, x26
  408f88:	bl	4062f8 <ferror@plt+0x3468>
  408f8c:	mov	x0, x21
  408f90:	bl	402c00 <free@plt>
  408f94:	mov	x0, x27
  408f98:	bl	402c00 <free@plt>
  408f9c:	mov	x0, x25
  408fa0:	bl	402c00 <free@plt>
  408fa4:	ldur	x0, [x29, #-88]
  408fa8:	bl	402c00 <free@plt>
  408fac:	ldur	x0, [x29, #-48]
  408fb0:	bl	402c00 <free@plt>
  408fb4:	ldp	x20, x19, [sp, #272]
  408fb8:	ldp	x22, x21, [sp, #256]
  408fbc:	ldp	x24, x23, [sp, #240]
  408fc0:	ldp	x26, x25, [sp, #224]
  408fc4:	ldp	x28, x27, [sp, #208]
  408fc8:	ldp	x29, x30, [sp, #192]
  408fcc:	add	sp, sp, #0x120
  408fd0:	ret
  408fd4:	sub	sp, sp, #0xf0
  408fd8:	stp	x26, x25, [sp, #176]
  408fdc:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  408fe0:	adrp	x25, 426000 <_obstack_memory_used@@Base+0x141b0>
  408fe4:	ldr	x8, [x8, #2608]
  408fe8:	ldr	x9, [x25, #2928]
  408fec:	stp	x29, x30, [sp, #144]
  408ff0:	stp	x24, x23, [sp, #192]
  408ff4:	stp	x22, x21, [sp, #208]
  408ff8:	stp	x20, x19, [sp, #224]
  408ffc:	ldr	x23, [x8, x9, lsl #3]
  409000:	mov	x21, x0
  409004:	str	x27, [sp, #160]
  409008:	add	x29, sp, #0x90
  40900c:	mov	x0, x23
  409010:	mov	w24, w1
  409014:	bl	4027c0 <strlen@plt>
  409018:	add	x8, x0, #0x20
  40901c:	mov	x22, x0
  409020:	and	x0, x8, #0xfffffffffffffff8
  409024:	bl	41078c <ferror@plt+0xd8fc>
  409028:	add	x20, x0, #0xd
  40902c:	mov	x19, x0
  409030:	mov	x0, x20
  409034:	mov	x1, x23
  409038:	mov	x2, x22
  40903c:	bl	402760 <memcpy@plt>
  409040:	adrp	x9, 413000 <_obstack_memory_used@@Base+0x11b0>
  409044:	add	x9, x9, #0x488
  409048:	ldr	x9, [x9]
  40904c:	mov	w10, #0x5858                	// #22616
  409050:	add	x8, x20, x22
  409054:	movk	w10, #0x58, lsl #16
  409058:	str	w10, [x8, #8]
  40905c:	str	x9, [x8]
  409060:	str	xzr, [x19]
  409064:	adrp	x10, 426000 <_obstack_memory_used@@Base+0x141b0>
  409068:	ldr	x8, [x25, #2928]
  40906c:	ldr	x9, [x10, #1552]
  409070:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x141b0>
  409074:	add	x1, x1, #0x570
  409078:	add	x10, x8, #0x1
  40907c:	cmp	x10, x9
  409080:	add	x9, sp, #0x8
  409084:	add	x27, x9, #0x8
  409088:	csinc	x8, xzr, x8, eq  // eq = none
  40908c:	mov	w0, wzr
  409090:	mov	x2, x27
  409094:	str	x8, [x25, #2928]
  409098:	bl	402780 <pthread_sigmask@plt>
  40909c:	cmp	w0, #0x0
  4090a0:	cset	w8, eq  // eq = none
  4090a4:	mov	w1, #0x80000               	// #524288
  4090a8:	mov	x0, x20
  4090ac:	strb	w8, [sp, #8]
  4090b0:	bl	40fb74 <ferror@plt+0xcce4>
  4090b4:	mov	w22, w0
  4090b8:	tbnz	w0, #31, 4090cc <ferror@plt+0x623c>
  4090bc:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  4090c0:	ldr	x9, [x8, #1176]
  4090c4:	str	x19, [x9]
  4090c8:	str	x19, [x8, #1176]
  4090cc:	bl	402e00 <__errno_location@plt>
  4090d0:	ldrb	w8, [sp, #8]
  4090d4:	ldr	w26, [x0]
  4090d8:	mov	x25, x0
  4090dc:	cbz	w8, 4090f0 <ferror@plt+0x6260>
  4090e0:	mov	w0, #0x2                   	// #2
  4090e4:	mov	x1, x27
  4090e8:	mov	x2, xzr
  4090ec:	bl	402780 <pthread_sigmask@plt>
  4090f0:	str	w26, [x25]
  4090f4:	tbnz	w22, #31, 409184 <ferror@plt+0x62f4>
  4090f8:	cbz	x19, 4091bc <ferror@plt+0x632c>
  4090fc:	adrp	x23, 426000 <_obstack_memory_used@@Base+0x141b0>
  409100:	ldr	x8, [x23, #1520]
  409104:	strb	wzr, [x19, #12]
  409108:	cbz	x8, 4091a4 <ferror@plt+0x6314>
  40910c:	add	x0, sp, #0x8
  409110:	mov	w1, #0x4                   	// #4
  409114:	bl	409270 <ferror@plt+0x63e0>
  409118:	cmp	w0, #0x1
  40911c:	str	w0, [x19, #8]
  409120:	b.lt	4091a0 <ferror@plt+0x6310>  // b.tstop
  409124:	mov	w0, w22
  409128:	bl	402a70 <close@plt>
  40912c:	ldr	w0, [sp, #8]
  409130:	bl	402a70 <close@plt>
  409134:	adrp	x23, 426000 <_obstack_memory_used@@Base+0x141b0>
  409138:	ldr	x0, [x23, #2912]
  40913c:	ldr	w22, [sp, #12]
  409140:	cbnz	x0, 40916c <ferror@plt+0x62dc>
  409144:	adrp	x2, 409000 <ferror@plt+0x6170>
  409148:	adrp	x3, 409000 <ferror@plt+0x6170>
  40914c:	add	x2, x2, #0x5b4
  409150:	add	x3, x3, #0x5c4
  409154:	mov	w0, #0x2f                  	// #47
  409158:	mov	x1, xzr
  40915c:	mov	x4, xzr
  409160:	bl	40bf2c <ferror@plt+0x909c>
  409164:	str	x0, [x23, #2912]
  409168:	cbz	x0, 409180 <ferror@plt+0x62f0>
  40916c:	mov	w8, #0x1                   	// #1
  409170:	mov	x1, x19
  409174:	strb	w8, [x19, #12]
  409178:	bl	40c944 <ferror@plt+0x9ab4>
  40917c:	cbnz	x0, 4091a4 <ferror@plt+0x6314>
  409180:	bl	410aa0 <ferror@plt+0xdc10>
  409184:	cmp	w26, #0x18
  409188:	b.ne	4091e0 <ferror@plt+0x6350>  // b.any
  40918c:	tbz	w24, #0, 4091e0 <ferror@plt+0x6350>
  409190:	mov	x0, x19
  409194:	bl	402c00 <free@plt>
  409198:	mov	x19, xzr
  40919c:	b	4091bc <ferror@plt+0x632c>
  4091a0:	cbz	w0, 409230 <ferror@plt+0x63a0>
  4091a4:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  4091a8:	add	x1, x1, #0xdc9
  4091ac:	mov	w0, w22
  4091b0:	bl	4029f0 <fdopen@plt>
  4091b4:	str	x0, [x21]
  4091b8:	cbz	x0, 409218 <ferror@plt+0x6388>
  4091bc:	mov	x0, x19
  4091c0:	ldp	x20, x19, [sp, #224]
  4091c4:	ldp	x22, x21, [sp, #208]
  4091c8:	ldp	x24, x23, [sp, #192]
  4091cc:	ldp	x26, x25, [sp, #176]
  4091d0:	ldr	x27, [sp, #160]
  4091d4:	ldp	x29, x30, [sp, #144]
  4091d8:	add	sp, sp, #0xf0
  4091dc:	ret
  4091e0:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  4091e4:	add	x1, x1, #0xeb0
  4091e8:	mov	w2, #0x5                   	// #5
  4091ec:	mov	x0, xzr
  4091f0:	bl	402d70 <dcgettext@plt>
  4091f4:	mov	x19, x0
  4091f8:	mov	w0, #0x4                   	// #4
  4091fc:	mov	x1, x23
  409200:	bl	40e9bc <ferror@plt+0xbb2c>
  409204:	mov	x3, x0
  409208:	mov	w0, #0x2                   	// #2
  40920c:	mov	w1, w26
  409210:	mov	x2, x19
  409214:	bl	4027f0 <error@plt>
  409218:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  40921c:	add	x1, x1, #0xe91
  409220:	mov	w2, #0x5                   	// #5
  409224:	bl	402d70 <dcgettext@plt>
  409228:	mov	x1, x20
  40922c:	bl	406878 <ferror@plt+0x39e8>
  409230:	ldr	w0, [sp, #12]
  409234:	bl	402a70 <close@plt>
  409238:	mov	w1, #0x1                   	// #1
  40923c:	mov	w0, w22
  409240:	bl	4085a4 <ferror@plt+0x5714>
  409244:	ldr	w0, [sp, #8]
  409248:	mov	w1, wzr
  40924c:	bl	4085a4 <ferror@plt+0x5714>
  409250:	ldr	x0, [x23, #1520]
  409254:	mov	x2, xzr
  409258:	mov	x1, x0
  40925c:	bl	402e10 <execlp@plt>
  409260:	ldr	w0, [x25]
  409264:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  409268:	add	x1, x1, #0xe6f
  40926c:	bl	40941c <ferror@plt+0x658c>
  409270:	sub	sp, sp, #0x100
  409274:	stp	x20, x19, [sp, #240]
  409278:	mov	x20, x1
  40927c:	mov	w1, #0x80000               	// #524288
  409280:	str	d8, [sp, #144]
  409284:	stp	x29, x30, [sp, #160]
  409288:	stp	x28, x27, [sp, #176]
  40928c:	stp	x26, x25, [sp, #192]
  409290:	stp	x24, x23, [sp, #208]
  409294:	stp	x22, x21, [sp, #224]
  409298:	add	x29, sp, #0x90
  40929c:	mov	x19, x0
  4092a0:	bl	40d43c <ferror@plt+0xa5ac>
  4092a4:	tbnz	w0, #31, 4093b4 <ferror@plt+0x6524>
  4092a8:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  4092ac:	ldr	w8, [x8, #968]
  4092b0:	adrp	x25, 426000 <_obstack_memory_used@@Base+0x141b0>
  4092b4:	ldr	w9, [x25, #2920]
  4092b8:	add	w8, w8, #0x1
  4092bc:	cmp	w8, w9
  4092c0:	b.cs	4092e4 <ferror@plt+0x6454>  // b.hs, b.nlast
  4092c4:	mov	w0, #0xffffffff            	// #-1
  4092c8:	bl	4094a8 <ferror@plt+0x6618>
  4092cc:	ldr	w8, [x25, #2920]
  4092d0:	cmp	w8, #0x1
  4092d4:	b.lt	4092e4 <ferror@plt+0x6454>  // b.tstop
  4092d8:	mov	w0, wzr
  4092dc:	bl	4094a8 <ferror@plt+0x6618>
  4092e0:	cbnz	w0, 4092cc <ferror@plt+0x643c>
  4092e4:	cbz	x20, 4093bc <ferror@plt+0x652c>
  4092e8:	add	x8, sp, #0x8
  4092ec:	adrp	x22, 426000 <_obstack_memory_used@@Base+0x141b0>
  4092f0:	fmov	d8, #2.500000000000000000e-01
  4092f4:	add	x22, x22, #0x570
  4092f8:	add	x23, x8, #0x8
  4092fc:	adrp	x26, 426000 <_obstack_memory_used@@Base+0x141b0>
  409300:	b	409308 <ferror@plt+0x6478>
  409304:	cbz	x20, 40939c <ferror@plt+0x650c>
  409308:	mov	w0, wzr
  40930c:	mov	x1, x22
  409310:	mov	x2, x23
  409314:	bl	402780 <pthread_sigmask@plt>
  409318:	cmp	w0, #0x0
  40931c:	cset	w8, eq  // eq = none
  409320:	strb	w8, [sp, #8]
  409324:	ldr	x28, [x26, #2592]
  409328:	str	xzr, [x26, #2592]
  40932c:	bl	402880 <fork@plt>
  409330:	mov	w21, w0
  409334:	bl	402e00 <__errno_location@plt>
  409338:	ldr	w27, [x0]
  40933c:	mov	x24, x0
  409340:	cbz	w21, 409348 <ferror@plt+0x64b8>
  409344:	str	x28, [x26, #2592]
  409348:	ldrb	w8, [sp, #8]
  40934c:	cbz	w8, 409360 <ferror@plt+0x64d0>
  409350:	mov	w0, #0x2                   	// #2
  409354:	mov	x1, x23
  409358:	mov	x2, xzr
  40935c:	bl	402780 <pthread_sigmask@plt>
  409360:	str	w27, [x24]
  409364:	tbz	w21, #31, 40939c <ferror@plt+0x650c>
  409368:	cmp	w27, #0xb
  40936c:	b.ne	40939c <ferror@plt+0x650c>  // b.any
  409370:	mov	v0.16b, v8.16b
  409374:	sub	x20, x20, #0x1
  409378:	bl	410cf4 <ferror@plt+0xde64>
  40937c:	fadd	d8, d8, d8
  409380:	ldr	w8, [x25, #2920]
  409384:	cmp	w8, #0x1
  409388:	b.lt	409304 <ferror@plt+0x6474>  // b.tstop
  40938c:	mov	w0, wzr
  409390:	bl	4094a8 <ferror@plt+0x6618>
  409394:	cbnz	w0, 409380 <ferror@plt+0x64f0>
  409398:	b	409304 <ferror@plt+0x6474>
  40939c:	tbnz	w21, #31, 4093d4 <ferror@plt+0x6544>
  4093a0:	cbz	w21, 4093bc <ferror@plt+0x652c>
  4093a4:	ldr	w8, [x25, #2920]
  4093a8:	add	w8, w8, #0x1
  4093ac:	str	w8, [x25, #2920]
  4093b0:	b	4093f4 <ferror@plt+0x6564>
  4093b4:	mov	w21, #0xffffffff            	// #-1
  4093b8:	b	4093f4 <ferror@plt+0x6564>
  4093bc:	mov	w0, wzr
  4093c0:	bl	402a70 <close@plt>
  4093c4:	mov	w0, #0x1                   	// #1
  4093c8:	bl	402a70 <close@plt>
  4093cc:	mov	w21, wzr
  4093d0:	b	4093f4 <ferror@plt+0x6564>
  4093d4:	bl	402e00 <__errno_location@plt>
  4093d8:	mov	x20, x0
  4093dc:	ldr	w22, [x0]
  4093e0:	ldr	w0, [x19]
  4093e4:	bl	402a70 <close@plt>
  4093e8:	ldr	w0, [x19, #4]
  4093ec:	bl	402a70 <close@plt>
  4093f0:	str	w22, [x20]
  4093f4:	mov	w0, w21
  4093f8:	ldp	x20, x19, [sp, #240]
  4093fc:	ldp	x22, x21, [sp, #224]
  409400:	ldp	x24, x23, [sp, #208]
  409404:	ldp	x26, x25, [sp, #192]
  409408:	ldp	x28, x27, [sp, #176]
  40940c:	ldp	x29, x30, [sp, #160]
  409410:	ldr	d8, [sp, #144]
  409414:	add	sp, sp, #0x100
  409418:	ret
  40941c:	sub	sp, sp, #0x30
  409420:	stp	x20, x19, [sp, #32]
  409424:	mov	w19, w0
  409428:	mov	x0, x1
  40942c:	stp	x29, x30, [sp, #16]
  409430:	add	x29, sp, #0x10
  409434:	mov	x20, x1
  409438:	bl	4027c0 <strlen@plt>
  40943c:	mov	x2, x0
  409440:	mov	w0, #0x2                   	// #2
  409444:	mov	x1, x20
  409448:	bl	402ac0 <write@plt>
  40944c:	cbz	w19, 40948c <ferror@plt+0x65fc>
  409450:	add	x1, sp, #0x4
  409454:	mov	w0, w19
  409458:	bl	40ce20 <ferror@plt+0x9f90>
  40945c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  409460:	mov	x19, x0
  409464:	add	x1, x1, #0xe4b
  409468:	mov	w0, #0x2                   	// #2
  40946c:	mov	w2, #0x8                   	// #8
  409470:	bl	402ac0 <write@plt>
  409474:	mov	x0, x19
  409478:	bl	4027c0 <strlen@plt>
  40947c:	mov	x2, x0
  409480:	mov	w0, #0x2                   	// #2
  409484:	mov	x1, x19
  409488:	bl	402ac0 <write@plt>
  40948c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x31b0>
  409490:	add	x1, x1, #0x3a7
  409494:	mov	w0, #0x2                   	// #2
  409498:	mov	w2, #0x1                   	// #1
  40949c:	bl	402ac0 <write@plt>
  4094a0:	mov	w0, #0x2                   	// #2
  4094a4:	bl	402790 <_exit@plt>
  4094a8:	sub	sp, sp, #0x40
  4094ac:	cmp	w0, #0x0
  4094b0:	stp	x20, x19, [sp, #48]
  4094b4:	mov	w20, w0
  4094b8:	cset	w2, eq  // eq = none
  4094bc:	csinv	w0, w0, wzr, ne  // ne = any
  4094c0:	add	x1, sp, #0xc
  4094c4:	stp	x29, x30, [sp, #32]
  4094c8:	add	x29, sp, #0x20
  4094cc:	bl	402e60 <waitpid@plt>
  4094d0:	tbnz	w0, #31, 409534 <ferror@plt+0x66a4>
  4094d4:	mov	w19, w0
  4094d8:	cbz	w0, 409520 <ferror@plt+0x6690>
  4094dc:	cmp	w20, #0x0
  4094e0:	b.gt	409504 <ferror@plt+0x6674>
  4094e4:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  4094e8:	ldr	x0, [x8, #2912]
  4094ec:	add	x1, sp, #0x10
  4094f0:	str	w19, [sp, #24]
  4094f4:	bl	40c97c <ferror@plt+0x9aec>
  4094f8:	cbz	x0, 409520 <ferror@plt+0x6690>
  4094fc:	mov	w8, #0x2                   	// #2
  409500:	strb	w8, [x0, #12]
  409504:	ldrh	w8, [sp, #12]
  409508:	tst	w8, #0xffffff7f
  40950c:	b.ne	409578 <ferror@plt+0x66e8>  // b.any
  409510:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  409514:	ldr	w9, [x8, #2920]
  409518:	sub	w9, w9, #0x1
  40951c:	str	w9, [x8, #2920]
  409520:	mov	w0, w19
  409524:	ldp	x20, x19, [sp, #48]
  409528:	ldp	x29, x30, [sp, #32]
  40952c:	add	sp, sp, #0x40
  409530:	ret
  409534:	bl	402e00 <__errno_location@plt>
  409538:	ldr	w19, [x0]
  40953c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  409540:	add	x1, x1, #0xe19
  409544:	mov	w2, #0x5                   	// #5
  409548:	mov	x0, xzr
  40954c:	bl	402d70 <dcgettext@plt>
  409550:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  409554:	ldr	x1, [x8, #1520]
  409558:	mov	x20, x0
  40955c:	mov	w0, #0x4                   	// #4
  409560:	bl	40e9bc <ferror@plt+0xbb2c>
  409564:	mov	x3, x0
  409568:	mov	w0, #0x2                   	// #2
  40956c:	mov	w1, w19
  409570:	mov	x2, x20
  409574:	bl	4027f0 <error@plt>
  409578:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  40957c:	add	x1, x1, #0xe2d
  409580:	mov	w2, #0x5                   	// #5
  409584:	mov	x0, xzr
  409588:	bl	402d70 <dcgettext@plt>
  40958c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  409590:	ldr	x1, [x8, #1520]
  409594:	mov	x19, x0
  409598:	mov	w0, #0x4                   	// #4
  40959c:	bl	40e9bc <ferror@plt+0xbb2c>
  4095a0:	mov	x3, x0
  4095a4:	mov	w0, #0x2                   	// #2
  4095a8:	mov	w1, wzr
  4095ac:	mov	x2, x19
  4095b0:	bl	4027f0 <error@plt>
  4095b4:	ldrsw	x8, [x0, #8]
  4095b8:	udiv	x9, x8, x1
  4095bc:	msub	x0, x9, x1, x8
  4095c0:	ret
  4095c4:	ldr	w8, [x0, #8]
  4095c8:	ldr	w9, [x1, #8]
  4095cc:	cmp	w8, w9
  4095d0:	cset	w0, eq  // eq = none
  4095d4:	ret
  4095d8:	sub	sp, sp, #0xe0
  4095dc:	stp	x20, x19, [sp, #208]
  4095e0:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x141b0>
  4095e4:	mov	x20, x0
  4095e8:	add	x19, x19, #0xa20
  4095ec:	stp	x29, x30, [sp, #144]
  4095f0:	str	x25, [sp, #160]
  4095f4:	stp	x24, x23, [sp, #176]
  4095f8:	stp	x22, x21, [sp, #192]
  4095fc:	add	x29, sp, #0x90
  409600:	mov	x24, x19
  409604:	ldr	x19, [x19]
  409608:	add	x8, x19, #0xd
  40960c:	cmp	x8, x20
  409610:	b.ne	409600 <ferror@plt+0x6770>  // b.any
  409614:	ldrb	w8, [x19, #12]
  409618:	cmp	w8, #0x1
  40961c:	b.ne	40964c <ferror@plt+0x67bc>  // b.any
  409620:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  409624:	ldr	w21, [x19, #8]
  409628:	ldr	x0, [x8, #2912]
  40962c:	add	x1, sp, #0x8
  409630:	str	w21, [sp, #16]
  409634:	bl	40c97c <ferror@plt+0x9aec>
  409638:	cbz	x0, 40964c <ferror@plt+0x67bc>
  40963c:	mov	w8, #0x2                   	// #2
  409640:	strb	w8, [x0, #12]
  409644:	mov	w0, w21
  409648:	bl	4094a8 <ferror@plt+0x6618>
  40964c:	ldr	x25, [x19]
  409650:	add	x8, sp, #0x8
  409654:	add	x22, x8, #0x8
  409658:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x141b0>
  40965c:	add	x1, x1, #0x570
  409660:	mov	w0, wzr
  409664:	mov	x2, x22
  409668:	bl	402780 <pthread_sigmask@plt>
  40966c:	cmp	w0, #0x0
  409670:	cset	w8, eq  // eq = none
  409674:	mov	x0, x20
  409678:	strb	w8, [sp, #8]
  40967c:	bl	402e70 <unlink@plt>
  409680:	mov	w23, w0
  409684:	bl	402e00 <__errno_location@plt>
  409688:	ldr	w21, [x0]
  40968c:	str	x25, [x24]
  409690:	ldrb	w8, [sp, #8]
  409694:	cbz	w8, 4096a8 <ferror@plt+0x6818>
  409698:	mov	w0, #0x2                   	// #2
  40969c:	mov	x1, x22
  4096a0:	mov	x2, xzr
  4096a4:	bl	402780 <pthread_sigmask@plt>
  4096a8:	cbz	w23, 4096e8 <ferror@plt+0x6858>
  4096ac:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  4096b0:	add	x1, x1, #0xe54
  4096b4:	mov	w2, #0x5                   	// #5
  4096b8:	mov	x0, xzr
  4096bc:	bl	402d70 <dcgettext@plt>
  4096c0:	mov	x22, x0
  4096c4:	mov	w1, #0x3                   	// #3
  4096c8:	mov	w0, wzr
  4096cc:	mov	x2, x20
  4096d0:	bl	40ebe8 <ferror@plt+0xbd58>
  4096d4:	mov	x3, x0
  4096d8:	mov	w0, wzr
  4096dc:	mov	w1, w21
  4096e0:	mov	x2, x22
  4096e4:	bl	4027f0 <error@plt>
  4096e8:	cbnz	x25, 4096f4 <ferror@plt+0x6864>
  4096ec:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  4096f0:	str	x24, [x8, #1176]
  4096f4:	mov	x0, x19
  4096f8:	bl	402c00 <free@plt>
  4096fc:	ldp	x20, x19, [sp, #208]
  409700:	ldp	x22, x21, [sp, #192]
  409704:	ldp	x24, x23, [sp, #176]
  409708:	ldr	x25, [sp, #160]
  40970c:	ldp	x29, x30, [sp, #144]
  409710:	add	sp, sp, #0xe0
  409714:	ret
  409718:	sub	sp, sp, #0x110
  40971c:	stp	x29, x30, [sp, #176]
  409720:	stp	x28, x27, [sp, #192]
  409724:	stp	x26, x25, [sp, #208]
  409728:	stp	x24, x23, [sp, #224]
  40972c:	stp	x22, x21, [sp, #240]
  409730:	stp	x20, x19, [sp, #256]
  409734:	add	x29, sp, #0xb0
  409738:	lsr	x19, x1, #1
  40973c:	ldp	x24, x26, [x3, #40]
  409740:	stp	x19, x2, [x29, #-64]
  409744:	ldr	x8, [x3, #64]
  409748:	mov	x21, x6
  40974c:	mov	x25, x3
  409750:	mov	x23, x0
  409754:	cmp	x1, #0x2
  409758:	str	x2, [sp, #32]
  40975c:	stp	x8, x4, [x29, #-48]
  409760:	str	x4, [sp]
  409764:	stp	x5, x0, [x29, #-80]
  409768:	stp	x5, x6, [x29, #-32]
  40976c:	b.cc	4097a4 <ferror@plt+0x6914>  // b.lo, b.ul, b.last
  409770:	add	x8, x26, x24
  409774:	cmp	x8, #0x20, lsl #12
  409778:	b.cc	4097a4 <ferror@plt+0x6914>  // b.lo, b.ul, b.last
  40977c:	adrp	x2, 40a000 <ferror@plt+0x7170>
  409780:	mov	x22, x1
  409784:	add	x2, x2, #0x98
  409788:	sub	x0, x29, #0x10
  40978c:	sub	x3, x29, #0x48
  409790:	mov	x1, xzr
  409794:	bl	402aa0 <pthread_create@plt>
  409798:	ldr	x24, [x25, #40]
  40979c:	cbz	w0, 409f44 <ferror@plt+0x70b4>
  4097a0:	ldr	x26, [x25, #48]
  4097a4:	ldr	x8, [sp, #32]
  4097a8:	cmp	x26, #0x2
  4097ac:	sub	x22, x23, x8, lsl #5
  4097b0:	b.cc	4097d0 <ferror@plt+0x6940>  // b.lo, b.ul, b.last
  4097b4:	lsl	x8, x24, #4
  4097b8:	and	x8, x8, #0xffffffffffffffe0
  4097bc:	sub	x0, x23, x24, lsl #5
  4097c0:	sub	x2, x22, x8
  4097c4:	mov	x1, x26
  4097c8:	mov	w3, wzr
  4097cc:	bl	40a0c4 <ferror@plt+0x7234>
  4097d0:	cmp	x24, #0x2
  4097d4:	b.cc	4097ec <ferror@plt+0x695c>  // b.lo, b.ul, b.last
  4097d8:	mov	x0, x23
  4097dc:	mov	x1, x24
  4097e0:	mov	x2, x22
  4097e4:	mov	w3, wzr
  4097e8:	bl	40a0c4 <ferror@plt+0x7234>
  4097ec:	sub	x8, x23, x24, lsl #5
  4097f0:	sub	x9, x8, x26, lsl #5
  4097f4:	stp	x23, x8, [x25]
  4097f8:	stp	x8, x9, [x25, #16]
  4097fc:	ldr	x24, [sp]
  409800:	add	x23, x24, #0x8
  409804:	mov	x0, x23
  409808:	bl	402e40 <pthread_mutex_lock@plt>
  40980c:	mov	x19, x24
  409810:	ldr	x0, [x19], #56
  409814:	mov	x1, x25
  409818:	bl	40cc54 <ferror@plt+0x9dc4>
  40981c:	mov	w8, #0x1                   	// #1
  409820:	mov	x0, x19
  409824:	strb	w8, [x25, #84]
  409828:	bl	402980 <pthread_cond_signal@plt>
  40982c:	mov	x25, x23
  409830:	str	x19, [sp, #16]
  409834:	str	x21, [sp, #72]
  409838:	b	40985c <ferror@plt+0x69cc>
  40983c:	ldr	x8, [x27, #56]
  409840:	add	x0, x8, #0x58
  409844:	bl	402e40 <pthread_mutex_lock@plt>
  409848:	ldr	x22, [x27, #56]
  40984c:	ldrb	w8, [x22, #84]
  409850:	cbz	w8, 409ac8 <ferror@plt+0x6c38>
  409854:	add	x0, x22, #0x58
  409858:	bl	402e50 <pthread_mutex_unlock@plt>
  40985c:	mov	x0, x25
  409860:	bl	402e50 <pthread_mutex_unlock@plt>
  409864:	mov	x0, x23
  409868:	bl	402e40 <pthread_mutex_lock@plt>
  40986c:	ldr	x0, [x24]
  409870:	bl	40cd44 <ferror@plt+0x9eb4>
  409874:	mov	x27, x0
  409878:	cbnz	x0, 409898 <ferror@plt+0x6a08>
  40987c:	mov	x0, x19
  409880:	mov	x1, x23
  409884:	bl	402c30 <pthread_cond_wait@plt>
  409888:	ldr	x0, [x24]
  40988c:	bl	40cd44 <ferror@plt+0x9eb4>
  409890:	cbz	x0, 40987c <ferror@plt+0x69ec>
  409894:	mov	x27, x0
  409898:	mov	x0, x23
  40989c:	bl	402e50 <pthread_mutex_unlock@plt>
  4098a0:	add	x22, x27, #0x58
  4098a4:	mov	x0, x22
  4098a8:	bl	402e40 <pthread_mutex_lock@plt>
  4098ac:	ldr	w9, [x27, #80]
  4098b0:	strb	wzr, [x27, #84]
  4098b4:	cbz	w9, 409ef0 <ferror@plt+0x7060>
  4098b8:	ldr	x10, [sp, #32]
  4098bc:	ldp	x11, x26, [x27]
  4098c0:	lsl	w8, w9, #1
  4098c4:	add	w8, w8, #0x2
  4098c8:	lsr	x8, x10, x8
  4098cc:	cmp	w9, #0x1
  4098d0:	add	x21, x8, #0x1
  4098d4:	stp	x11, x26, [sp, #56]
  4098d8:	str	x22, [sp, #48]
  4098dc:	b.ne	409a04 <ferror@plt+0x6b74>  // b.any
  4098e0:	ldr	x24, [x27, #16]
  4098e4:	cmp	x11, x24
  4098e8:	b.eq	409af0 <ferror@plt+0x6c60>  // b.none
  4098ec:	ldr	x25, [x27, #24]
  4098f0:	mov	x19, x26
  4098f4:	mov	x20, x11
  4098f8:	stp	x11, x26, [sp, #80]
  4098fc:	str	x11, [sp, #40]
  409900:	b	409940 <ferror@plt+0x6ab0>
  409904:	ldp	q1, q0, [x22]
  409908:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  40990c:	add	x8, x8, #0xb78
  409910:	stp	q1, q0, [x8]
  409914:	ldur	x1, [x29, #-80]
  409918:	ldr	x2, [sp, #72]
  40991c:	mov	x0, x22
  409920:	bl	407c7c <ferror@plt+0x4dec>
  409924:	mov	x19, x22
  409928:	mov	x28, x20
  40992c:	mov	x26, x22
  409930:	str	x22, [sp, #88]
  409934:	cmp	x28, x24
  409938:	mov	x20, x28
  40993c:	b.eq	409b34 <ferror@plt+0x6ca4>  // b.none
  409940:	cmp	x26, x25
  409944:	b.eq	409b24 <ferror@plt+0x6c94>  // b.none
  409948:	cbz	x21, 409b2c <ferror@plt+0x6c9c>
  40994c:	sub	x28, x20, #0x20
  409950:	sub	x22, x26, #0x20
  409954:	mov	x0, x28
  409958:	mov	x1, x22
  40995c:	sub	x21, x21, #0x1
  409960:	bl	406e78 <ferror@plt+0x3fe8>
  409964:	cmp	w0, #0x0
  409968:	b.le	4099a4 <ferror@plt+0x6b14>
  40996c:	str	x22, [x27, #8]
  409970:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  409974:	ldrb	w8, [x8, #1530]
  409978:	cmp	w8, #0x1
  40997c:	b.ne	409914 <ferror@plt+0x6a84>  // b.any
  409980:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  409984:	ldr	x8, [x8, #2936]
  409988:	cbz	x8, 409904 <ferror@plt+0x6a74>
  40998c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x141b0>
  409990:	mov	x0, x22
  409994:	add	x1, x1, #0xb78
  409998:	bl	406e78 <ferror@plt+0x3fe8>
  40999c:	cbnz	w0, 409904 <ferror@plt+0x6a74>
  4099a0:	b	409924 <ferror@plt+0x6a94>
  4099a4:	str	x28, [x27]
  4099a8:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  4099ac:	ldrb	w8, [x8, #1530]
  4099b0:	cmp	w8, #0x1
  4099b4:	b.ne	4099e8 <ferror@plt+0x6b58>  // b.any
  4099b8:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  4099bc:	ldr	x8, [x8, #2936]
  4099c0:	cbz	x8, 4099d8 <ferror@plt+0x6b48>
  4099c4:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x141b0>
  4099c8:	mov	x0, x28
  4099cc:	add	x1, x1, #0xb78
  4099d0:	bl	406e78 <ferror@plt+0x3fe8>
  4099d4:	cbz	w0, 4099f8 <ferror@plt+0x6b68>
  4099d8:	ldp	q1, q0, [x28]
  4099dc:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  4099e0:	add	x8, x8, #0xb78
  4099e4:	stp	q1, q0, [x8]
  4099e8:	ldur	x1, [x29, #-80]
  4099ec:	ldr	x2, [sp, #72]
  4099f0:	mov	x0, x28
  4099f4:	bl	407c7c <ferror@plt+0x4dec>
  4099f8:	str	x28, [sp, #80]
  4099fc:	str	x28, [sp, #40]
  409a00:	b	409934 <ferror@plt+0x6aa4>
  409a04:	ldr	x9, [x27, #32]
  409a08:	ldr	x10, [x27, #16]
  409a0c:	ldr	x20, [x9]
  409a10:	cmp	x11, x10
  409a14:	str	x9, [sp, #24]
  409a18:	b.eq	409b0c <ferror@plt+0x6c7c>  // b.none
  409a1c:	ldr	x12, [x27, #24]
  409a20:	str	x10, [sp, #8]
  409a24:	cmp	x26, x12
  409a28:	str	x12, [sp, #40]
  409a2c:	b.eq	409d0c <ferror@plt+0x6e7c>  // b.none
  409a30:	cbz	x21, 409d08 <ferror@plt+0x6e78>
  409a34:	neg	x21, x8
  409a38:	sub	x8, x20, #0x20
  409a3c:	stp	x11, x26, [sp, #80]
  409a40:	mov	x25, x26
  409a44:	mov	x26, x11
  409a48:	sub	x22, x26, #0x20
  409a4c:	sub	x28, x25, #0x20
  409a50:	mov	x0, x22
  409a54:	mov	x1, x28
  409a58:	mov	x19, x10
  409a5c:	mov	x20, x8
  409a60:	bl	406e78 <ferror@plt+0x3fe8>
  409a64:	cmp	w0, #0x0
  409a68:	b.le	409a84 <ferror@plt+0x6bf4>
  409a6c:	str	x28, [x27, #8]
  409a70:	ldp	q1, q0, [x28]
  409a74:	mov	x25, x28
  409a78:	stp	q1, q0, [x20]
  409a7c:	str	x28, [sp, #88]
  409a80:	b	409a98 <ferror@plt+0x6c08>
  409a84:	str	x22, [x27]
  409a88:	ldp	q1, q0, [x22]
  409a8c:	mov	x26, x22
  409a90:	stp	q1, q0, [x20]
  409a94:	str	x22, [sp, #80]
  409a98:	mov	x10, x19
  409a9c:	cmp	x26, x19
  409aa0:	b.eq	409ed8 <ferror@plt+0x7048>  // b.none
  409aa4:	ldr	x8, [sp, #40]
  409aa8:	cmp	x25, x8
  409aac:	b.eq	409ee4 <ferror@plt+0x7054>  // b.none
  409ab0:	add	x21, x21, #0x1
  409ab4:	cmp	x21, #0x1
  409ab8:	sub	x8, x20, #0x20
  409abc:	b.ne	409a48 <ferror@plt+0x6bb8>  // b.any
  409ac0:	mov	x21, #0xffffffffffffffff    	// #-1
  409ac4:	b	409d18 <ferror@plt+0x6e88>
  409ac8:	ldp	x8, x10, [x22, #8]
  409acc:	ldr	x11, [x22]
  409ad0:	ldr	x9, [x22, #24]
  409ad4:	cmp	x11, x10
  409ad8:	b.ne	409cc4 <ferror@plt+0x6e34>  // b.any
  409adc:	cmp	x8, x9
  409ae0:	b.eq	409854 <ferror@plt+0x69c4>  // b.none
  409ae4:	ldr	x8, [x22, #40]
  409ae8:	cbnz	x8, 409854 <ferror@plt+0x69c4>
  409aec:	b	409cd4 <ferror@plt+0x6e44>
  409af0:	stp	x11, x26, [sp, #80]
  409af4:	mov	x20, x11
  409af8:	mov	x8, x26
  409afc:	str	x11, [sp, #40]
  409b00:	mov	x19, x26
  409b04:	mov	x24, x11
  409b08:	b	409b3c <ferror@plt+0x6cac>
  409b0c:	mov	x8, x26
  409b10:	stp	x11, x26, [sp, #80]
  409b14:	str	x11, [sp, #8]
  409b18:	mov	x26, x11
  409b1c:	mov	x25, x8
  409b20:	b	409d20 <ferror@plt+0x6e90>
  409b24:	mov	x26, x25
  409b28:	b	409b38 <ferror@plt+0x6ca8>
  409b2c:	mov	x21, #0xffffffffffffffff    	// #-1
  409b30:	b	409b38 <ferror@plt+0x6ca8>
  409b34:	mov	x20, x24
  409b38:	ldr	x8, [sp, #64]
  409b3c:	ldr	x25, [x27, #48]
  409b40:	sub	x8, x8, x19
  409b44:	asr	x28, x8, #5
  409b48:	cmp	x25, x28
  409b4c:	b.ne	409bf8 <ferror@plt+0x6d68>  // b.any
  409b50:	cmp	x20, x24
  409b54:	adrp	x25, 426000 <_obstack_memory_used@@Base+0x141b0>
  409b58:	b.eq	409eb4 <ferror@plt+0x7024>  // b.none
  409b5c:	ldr	x26, [sp, #64]
  409b60:	cbz	x21, 409ec8 <ferror@plt+0x7038>
  409b64:	sub	x22, x20, #0x20
  409b68:	sub	x8, x21, #0x1
  409b6c:	ldr	x21, [sp, #72]
  409b70:	ldr	x20, [sp, #88]
  409b74:	str	x22, [x27]
  409b78:	ldrb	w9, [x25, #1530]
  409b7c:	mov	x19, x8
  409b80:	cmp	w9, #0x1
  409b84:	b.ne	409bb8 <ferror@plt+0x6d28>  // b.any
  409b88:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  409b8c:	ldr	x8, [x8, #2936]
  409b90:	cbz	x8, 409ba8 <ferror@plt+0x6d18>
  409b94:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x141b0>
  409b98:	mov	x0, x22
  409b9c:	add	x1, x1, #0xb78
  409ba0:	bl	406e78 <ferror@plt+0x3fe8>
  409ba4:	cbz	w0, 409bc8 <ferror@plt+0x6d38>
  409ba8:	ldp	q1, q0, [x22]
  409bac:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  409bb0:	add	x8, x8, #0xb78
  409bb4:	stp	q1, q0, [x8]
  409bb8:	ldur	x1, [x29, #-80]
  409bbc:	mov	x0, x22
  409bc0:	mov	x2, x21
  409bc4:	bl	407c7c <ferror@plt+0x4dec>
  409bc8:	cmp	x24, x22
  409bcc:	sub	x9, x22, #0x20
  409bd0:	b.eq	409be0 <ferror@plt+0x6d50>  // b.none
  409bd4:	sub	x8, x19, #0x1
  409bd8:	mov	x22, x9
  409bdc:	cbnz	x19, 409b74 <ferror@plt+0x6ce4>
  409be0:	ldr	x24, [sp]
  409be4:	ldr	x19, [sp, #16]
  409be8:	ldr	x25, [sp, #48]
  409bec:	add	x8, x9, #0x20
  409bf0:	str	x8, [sp, #80]
  409bf4:	b	409dec <ferror@plt+0x6f5c>
  409bf8:	ldr	x9, [sp, #56]
  409bfc:	ldr	x10, [sp, #40]
  409c00:	ldr	x8, [x27, #40]
  409c04:	ldr	x20, [sp, #88]
  409c08:	sub	x9, x9, x10
  409c0c:	cmp	x8, x9, asr #5
  409c10:	b.ne	409cac <ferror@plt+0x6e1c>  // b.any
  409c14:	ldr	x24, [sp]
  409c18:	cbz	x21, 409cb0 <ferror@plt+0x6e20>
  409c1c:	ldr	x19, [x27, #24]
  409c20:	cmp	x26, x19
  409c24:	b.eq	409cb0 <ferror@plt+0x6e20>  // b.none
  409c28:	sub	x8, x21, #0x1
  409c2c:	ldr	x21, [sp, #72]
  409c30:	sub	x22, x26, #0x20
  409c34:	adrp	x26, 426000 <_obstack_memory_used@@Base+0x141b0>
  409c38:	str	x22, [x27, #8]
  409c3c:	ldrb	w9, [x26, #1530]
  409c40:	mov	x20, x8
  409c44:	cmp	w9, #0x1
  409c48:	b.ne	409c7c <ferror@plt+0x6dec>  // b.any
  409c4c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  409c50:	ldr	x8, [x8, #2936]
  409c54:	cbz	x8, 409c6c <ferror@plt+0x6ddc>
  409c58:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x141b0>
  409c5c:	mov	x0, x22
  409c60:	add	x1, x1, #0xb78
  409c64:	bl	406e78 <ferror@plt+0x3fe8>
  409c68:	cbz	w0, 409c8c <ferror@plt+0x6dfc>
  409c6c:	ldp	q1, q0, [x22]
  409c70:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  409c74:	add	x8, x8, #0xb78
  409c78:	stp	q1, q0, [x8]
  409c7c:	ldur	x1, [x29, #-80]
  409c80:	mov	x0, x22
  409c84:	mov	x2, x21
  409c88:	bl	407c7c <ferror@plt+0x4dec>
  409c8c:	cmp	x19, x22
  409c90:	sub	x9, x22, #0x20
  409c94:	b.eq	409ca4 <ferror@plt+0x6e14>  // b.none
  409c98:	sub	x8, x20, #0x1
  409c9c:	mov	x22, x9
  409ca0:	cbnz	x20, 409c38 <ferror@plt+0x6da8>
  409ca4:	add	x20, x9, #0x20
  409ca8:	b	409cb0 <ferror@plt+0x6e20>
  409cac:	ldr	x24, [sp]
  409cb0:	mov	x28, x25
  409cb4:	ldr	x19, [sp, #16]
  409cb8:	ldr	x25, [sp, #48]
  409cbc:	ldr	x26, [sp, #64]
  409cc0:	b	409dec <ferror@plt+0x6f5c>
  409cc4:	cmp	x8, x9
  409cc8:	b.ne	409cd4 <ferror@plt+0x6e44>  // b.any
  409ccc:	ldr	x8, [x22, #48]
  409cd0:	cbnz	x8, 409854 <ferror@plt+0x69c4>
  409cd4:	mov	x0, x23
  409cd8:	bl	402e40 <pthread_mutex_lock@plt>
  409cdc:	ldr	x0, [x24]
  409ce0:	mov	x1, x22
  409ce4:	bl	40cc54 <ferror@plt+0x9dc4>
  409ce8:	mov	w8, #0x1                   	// #1
  409cec:	mov	x0, x19
  409cf0:	strb	w8, [x22, #84]
  409cf4:	bl	402980 <pthread_cond_signal@plt>
  409cf8:	mov	x0, x23
  409cfc:	bl	402e50 <pthread_mutex_unlock@plt>
  409d00:	ldr	x22, [x27, #56]
  409d04:	b	409854 <ferror@plt+0x69c4>
  409d08:	mov	x21, #0xffffffffffffffff    	// #-1
  409d0c:	stp	x11, x26, [sp, #80]
  409d10:	mov	x25, x26
  409d14:	mov	x26, x11
  409d18:	ldr	x19, [sp, #16]
  409d1c:	ldr	x8, [sp, #64]
  409d20:	ldr	x28, [x27, #48]
  409d24:	sub	x8, x8, x25
  409d28:	cmp	x28, x8, asr #5
  409d2c:	b.ne	409d78 <ferror@plt+0x6ee8>  // b.any
  409d30:	ldr	x8, [sp, #8]
  409d34:	ldr	x25, [sp, #48]
  409d38:	cmp	x26, x8
  409d3c:	b.eq	409ddc <ferror@plt+0x6f4c>  // b.none
  409d40:	cbz	x21, 409ddc <ferror@plt+0x6f4c>
  409d44:	add	x8, x10, #0x20
  409d48:	sub	x9, x21, #0x1
  409d4c:	ldp	q1, q0, [x26, #-32]
  409d50:	cmp	x8, x26
  409d54:	sub	x26, x26, #0x20
  409d58:	stp	q1, q0, [x20, #-32]!
  409d5c:	b.eq	409d6c <ferror@plt+0x6edc>  // b.none
  409d60:	mov	x10, x9
  409d64:	sub	x9, x9, #0x1
  409d68:	cbnz	x10, 409d4c <ferror@plt+0x6ebc>
  409d6c:	str	x26, [x27]
  409d70:	str	x26, [sp, #80]
  409d74:	b	409ddc <ferror@plt+0x6f4c>
  409d78:	ldr	x9, [sp, #56]
  409d7c:	ldr	x8, [x27, #40]
  409d80:	sub	x9, x9, x26
  409d84:	cmp	x8, x9, asr #5
  409d88:	b.ne	409dd8 <ferror@plt+0x6f48>  // b.any
  409d8c:	ldr	x26, [sp, #64]
  409d90:	cbz	x21, 409dd0 <ferror@plt+0x6f40>
  409d94:	ldr	x8, [x27, #24]
  409d98:	cmp	x25, x8
  409d9c:	b.eq	409dd0 <ferror@plt+0x6f40>  // b.none
  409da0:	add	x8, x8, #0x20
  409da4:	sub	x9, x21, #0x1
  409da8:	ldp	q1, q0, [x25, #-32]
  409dac:	cmp	x8, x25
  409db0:	sub	x25, x25, #0x20
  409db4:	stp	q1, q0, [x20, #-32]!
  409db8:	b.eq	409dc8 <ferror@plt+0x6f38>  // b.none
  409dbc:	mov	x10, x9
  409dc0:	sub	x9, x9, #0x1
  409dc4:	cbnz	x10, 409da8 <ferror@plt+0x6f18>
  409dc8:	str	x25, [x27, #8]
  409dcc:	str	x25, [sp, #88]
  409dd0:	ldr	x25, [sp, #48]
  409dd4:	b	409de0 <ferror@plt+0x6f50>
  409dd8:	ldr	x25, [sp, #48]
  409ddc:	ldr	x26, [sp, #64]
  409de0:	ldr	x8, [sp, #24]
  409de4:	str	x20, [x8]
  409de8:	ldr	x20, [sp, #88]
  409dec:	ldr	x8, [sp, #56]
  409df0:	ldr	x9, [sp, #80]
  409df4:	ldrb	w12, [x27, #84]
  409df8:	sub	x10, x26, x20
  409dfc:	sub	x10, x28, x10, asr #5
  409e00:	sub	x8, x8, x9
  409e04:	ldr	x9, [x27, #40]
  409e08:	sub	x11, x9, x8, asr #5
  409e0c:	stp	x11, x10, [x27, #40]
  409e10:	cbnz	w12, 409e68 <ferror@plt+0x6fd8>
  409e14:	ldp	x8, x12, [x27, #8]
  409e18:	ldr	x13, [x27]
  409e1c:	ldr	x9, [x27, #24]
  409e20:	cmp	x13, x12
  409e24:	b.ne	409e30 <ferror@plt+0x6fa0>  // b.any
  409e28:	cbz	x11, 409e34 <ferror@plt+0x6fa4>
  409e2c:	b	409e68 <ferror@plt+0x6fd8>
  409e30:	cbz	x10, 409e3c <ferror@plt+0x6fac>
  409e34:	cmp	x8, x9
  409e38:	b.eq	409e68 <ferror@plt+0x6fd8>  // b.none
  409e3c:	mov	x0, x23
  409e40:	bl	402e40 <pthread_mutex_lock@plt>
  409e44:	ldr	x0, [x24]
  409e48:	mov	x1, x27
  409e4c:	bl	40cc54 <ferror@plt+0x9dc4>
  409e50:	mov	w8, #0x1                   	// #1
  409e54:	mov	x0, x19
  409e58:	strb	w8, [x27, #84]
  409e5c:	bl	402980 <pthread_cond_signal@plt>
  409e60:	mov	x0, x23
  409e64:	bl	402e50 <pthread_mutex_unlock@plt>
  409e68:	ldr	w8, [x27, #80]
  409e6c:	cmp	w8, #0x2
  409e70:	b.cs	40983c <ferror@plt+0x69ac>  // b.hs, b.nlast
  409e74:	ldp	x8, x9, [x27, #40]
  409e78:	cmn	x8, x9
  409e7c:	b.ne	40985c <ferror@plt+0x69cc>  // b.any
  409e80:	ldr	x22, [x27, #56]
  409e84:	mov	x0, x23
  409e88:	bl	402e40 <pthread_mutex_lock@plt>
  409e8c:	ldr	x0, [x24]
  409e90:	mov	x1, x22
  409e94:	bl	40cc54 <ferror@plt+0x9dc4>
  409e98:	mov	w8, #0x1                   	// #1
  409e9c:	mov	x0, x19
  409ea0:	strb	w8, [x22, #84]
  409ea4:	bl	402980 <pthread_cond_signal@plt>
  409ea8:	mov	x0, x23
  409eac:	bl	402e50 <pthread_mutex_unlock@plt>
  409eb0:	b	40985c <ferror@plt+0x69cc>
  409eb4:	ldr	x24, [sp]
  409eb8:	ldr	x19, [sp, #16]
  409ebc:	ldr	x25, [sp, #48]
  409ec0:	ldr	x26, [sp, #64]
  409ec4:	b	409de8 <ferror@plt+0x6f58>
  409ec8:	ldr	x24, [sp]
  409ecc:	ldr	x19, [sp, #16]
  409ed0:	ldr	x25, [sp, #48]
  409ed4:	b	409de8 <ferror@plt+0x6f58>
  409ed8:	ldr	x26, [sp, #8]
  409edc:	neg	x21, x21
  409ee0:	b	409d18 <ferror@plt+0x6e88>
  409ee4:	ldr	x25, [sp, #40]
  409ee8:	neg	x21, x21
  409eec:	b	409d18 <ferror@plt+0x6e88>
  409ef0:	mov	x0, x22
  409ef4:	bl	402e50 <pthread_mutex_unlock@plt>
  409ef8:	mov	x0, x23
  409efc:	bl	402e40 <pthread_mutex_lock@plt>
  409f00:	ldr	x0, [x24]
  409f04:	mov	x1, x27
  409f08:	bl	40cc54 <ferror@plt+0x9dc4>
  409f0c:	mov	w8, #0x1                   	// #1
  409f10:	mov	x0, x19
  409f14:	strb	w8, [x27, #84]
  409f18:	bl	402980 <pthread_cond_signal@plt>
  409f1c:	mov	x0, x23
  409f20:	bl	402e50 <pthread_mutex_unlock@plt>
  409f24:	ldp	x20, x19, [sp, #256]
  409f28:	ldp	x22, x21, [sp, #240]
  409f2c:	ldp	x24, x23, [sp, #224]
  409f30:	ldp	x26, x25, [sp, #208]
  409f34:	ldp	x28, x27, [sp, #192]
  409f38:	ldp	x29, x30, [sp, #176]
  409f3c:	add	sp, sp, #0x110
  409f40:	ret
  409f44:	ldr	x3, [x25, #72]
  409f48:	ldr	x2, [sp, #32]
  409f4c:	ldr	x4, [sp]
  409f50:	ldur	x5, [x29, #-80]
  409f54:	sub	x1, x22, x19
  409f58:	sub	x0, x23, x24, lsl #5
  409f5c:	mov	x6, x21
  409f60:	bl	409718 <ferror@plt+0x6888>
  409f64:	ldur	x0, [x29, #-16]
  409f68:	mov	x1, xzr
  409f6c:	bl	402ad0 <pthread_join@plt>
  409f70:	b	409f24 <ferror@plt+0x7094>
  409f74:	ldr	w8, [x0, #80]
  409f78:	ldr	w9, [x1, #80]
  409f7c:	cmp	w8, w9
  409f80:	b.ne	409f98 <ferror@plt+0x7108>  // b.any
  409f84:	ldp	x8, x9, [x0, #40]
  409f88:	ldp	x10, x11, [x1, #40]
  409f8c:	add	x8, x9, x8
  409f90:	add	x9, x11, x10
  409f94:	cmp	x8, x9
  409f98:	cset	w0, cc  // cc = lo, ul, last
  409f9c:	ret
  409fa0:	stp	x29, x30, [sp, #-96]!
  409fa4:	str	x27, [sp, #16]
  409fa8:	stp	x26, x25, [sp, #32]
  409fac:	stp	x22, x21, [sp, #64]
  409fb0:	stp	x20, x19, [sp, #80]
  409fb4:	mov	x19, x4
  409fb8:	mov	x21, x3
  409fbc:	mov	x22, x2
  409fc0:	mov	x20, x1
  409fc4:	neg	x25, x4
  409fc8:	mov	w26, #0x30                  	// #48
  409fcc:	mov	w27, #0x28                  	// #40
  409fd0:	stp	x24, x23, [sp, #48]
  409fd4:	mov	x29, sp
  409fd8:	tst	w5, #0x1
  409fdc:	csel	x8, x27, x26, ne  // ne = any
  409fe0:	ldr	x8, [x0, x8]
  409fe4:	add	x9, x0, #0x10
  409fe8:	add	x10, x0, #0x18
  409fec:	add	x23, x22, x25, lsl #5
  409ff0:	csel	x9, x9, x10, ne  // ne = any
  409ff4:	lsr	x10, x8, #1
  409ff8:	sub	x8, x8, x10
  409ffc:	sub	x22, x23, x10, lsl #5
  40a000:	stp	x9, x10, [x20, #32]
  40a004:	stp	x23, x22, [x20, #16]
  40a008:	stp	x23, x22, [x20]
  40a00c:	stp	x8, x0, [x20, #48]
  40a010:	ldr	w8, [x0, #80]
  40a014:	add	x0, x20, #0x58
  40a018:	mov	x1, xzr
  40a01c:	add	x24, x20, #0x88
  40a020:	add	w8, w8, #0x1
  40a024:	strb	wzr, [x20, #84]
  40a028:	str	w8, [x20, #80]
  40a02c:	bl	402a60 <pthread_mutex_init@plt>
  40a030:	cmp	x21, #0x2
  40a034:	b.cc	40a074 <ferror@plt+0x71e4>  // b.lo, b.ul, b.last
  40a038:	lsr	x3, x21, #1
  40a03c:	mov	w5, #0x1                   	// #1
  40a040:	mov	x0, x20
  40a044:	mov	x1, x24
  40a048:	mov	x2, x23
  40a04c:	mov	x4, x19
  40a050:	sub	x21, x21, x3
  40a054:	str	x24, [x20, #64]
  40a058:	bl	409fa0 <ferror@plt+0x7110>
  40a05c:	mov	x8, x0
  40a060:	mov	w5, wzr
  40a064:	str	x0, [x20, #72]
  40a068:	mov	x0, x20
  40a06c:	mov	x20, x8
  40a070:	b	409fd8 <ferror@plt+0x7148>
  40a074:	stp	xzr, xzr, [x20, #64]
  40a078:	mov	x0, x24
  40a07c:	ldp	x20, x19, [sp, #80]
  40a080:	ldp	x22, x21, [sp, #64]
  40a084:	ldp	x24, x23, [sp, #48]
  40a088:	ldp	x26, x25, [sp, #32]
  40a08c:	ldr	x27, [sp, #16]
  40a090:	ldp	x29, x30, [sp], #96
  40a094:	ret
  40a098:	stp	x29, x30, [sp, #-16]!
  40a09c:	ldp	x8, x1, [x0]
  40a0a0:	ldp	x2, x3, [x0, #16]
  40a0a4:	ldp	x4, x5, [x0, #32]
  40a0a8:	ldr	x6, [x0, #48]
  40a0ac:	mov	x0, x8
  40a0b0:	mov	x29, sp
  40a0b4:	bl	409718 <ferror@plt+0x6888>
  40a0b8:	mov	x0, xzr
  40a0bc:	ldp	x29, x30, [sp], #16
  40a0c0:	ret
  40a0c4:	stp	x29, x30, [sp, #-80]!
  40a0c8:	stp	x24, x23, [sp, #32]
  40a0cc:	stp	x22, x21, [sp, #48]
  40a0d0:	mov	w23, w3
  40a0d4:	mov	x21, x2
  40a0d8:	cmp	x1, #0x2
  40a0dc:	mov	x22, x0
  40a0e0:	str	x25, [sp, #16]
  40a0e4:	stp	x20, x19, [sp, #64]
  40a0e8:	mov	x29, sp
  40a0ec:	b.ne	40a140 <ferror@plt+0x72b0>  // b.any
  40a0f0:	sub	x19, x22, #0x20
  40a0f4:	sub	x20, x22, #0x40
  40a0f8:	mov	x0, x19
  40a0fc:	mov	x1, x20
  40a100:	bl	406e78 <ferror@plt+0x3fe8>
  40a104:	tbz	w23, #0, 40a190 <ferror@plt+0x7300>
  40a108:	cmp	w0, #0x0
  40a10c:	mov	x8, #0xffffffffffffffc0    	// #-64
  40a110:	mov	x9, #0xffffffffffffffe0    	// #-32
  40a114:	csel	x8, x9, x8, gt
  40a118:	cset	w9, gt
  40a11c:	mvn	x9, x9
  40a120:	add	x8, x22, x8
  40a124:	add	x9, x22, x9, lsl #5
  40a128:	ldp	q3, q0, [x8]
  40a12c:	ldp	q2, q1, [x9]
  40a130:	stur	q3, [x21, #-64]
  40a134:	stp	q0, q2, [x21, #-48]
  40a138:	stur	q1, [x21, #-16]
  40a13c:	b	40a248 <ferror@plt+0x73b8>
  40a140:	lsr	x19, x1, #1
  40a144:	tst	w23, #0x1
  40a148:	sub	x20, x1, x19
  40a14c:	csneg	x8, xzr, x19, eq  // eq = none
  40a150:	mov	x24, x1
  40a154:	sub	x0, x22, x19, lsl #5
  40a158:	add	x2, x21, x8, lsl #5
  40a15c:	and	w3, w23, #0x1
  40a160:	mov	x1, x20
  40a164:	neg	x25, x19
  40a168:	bl	40a0c4 <ferror@plt+0x7234>
  40a16c:	cmp	x24, #0x4
  40a170:	b.cc	40a1b4 <ferror@plt+0x7324>  // b.lo, b.ul, b.last
  40a174:	mvn	w8, w23
  40a178:	and	w3, w8, #0x1
  40a17c:	mov	x0, x22
  40a180:	mov	x1, x19
  40a184:	mov	x2, x21
  40a188:	bl	40a0c4 <ferror@plt+0x7234>
  40a18c:	b	40a1c0 <ferror@plt+0x7330>
  40a190:	cmp	w0, #0x1
  40a194:	b.lt	40a248 <ferror@plt+0x73b8>  // b.tstop
  40a198:	ldp	q1, q0, [x19]
  40a19c:	ldp	q2, q3, [x20]
  40a1a0:	stp	q1, q0, [x21, #-32]
  40a1a4:	ldp	q1, q0, [x21, #-32]
  40a1a8:	stp	q2, q3, [x19]
  40a1ac:	stp	q1, q0, [x20]
  40a1b0:	b	40a248 <ferror@plt+0x73b8>
  40a1b4:	tbnz	w23, #0, 40a1c0 <ferror@plt+0x7330>
  40a1b8:	ldp	q1, q0, [x22, #-32]
  40a1bc:	stp	q1, q0, [x21, #-32]
  40a1c0:	tst	w23, #0x1
  40a1c4:	csel	x23, x21, x22, ne  // ne = any
  40a1c8:	csel	x24, x22, x21, ne  // ne = any
  40a1cc:	add	x25, x23, x25, lsl #5
  40a1d0:	sub	x21, x24, #0x20
  40a1d4:	sub	x22, x25, #0x20
  40a1d8:	mov	x0, x21
  40a1dc:	mov	x1, x22
  40a1e0:	bl	406e78 <ferror@plt+0x3fe8>
  40a1e4:	cmp	w0, #0x0
  40a1e8:	sub	x23, x23, #0x20
  40a1ec:	b.le	40a208 <ferror@plt+0x7378>
  40a1f0:	ldp	q1, q0, [x22]
  40a1f4:	subs	x20, x20, #0x1
  40a1f8:	mov	x25, x22
  40a1fc:	stp	q1, q0, [x23]
  40a200:	b.ne	40a1d4 <ferror@plt+0x7344>  // b.any
  40a204:	b	40a220 <ferror@plt+0x7390>
  40a208:	ldp	q1, q0, [x21]
  40a20c:	subs	x19, x19, #0x1
  40a210:	mov	x24, x21
  40a214:	stp	q1, q0, [x23]
  40a218:	b.ne	40a1d0 <ferror@plt+0x7340>  // b.any
  40a21c:	b	40a248 <ferror@plt+0x73b8>
  40a220:	mov	x8, xzr
  40a224:	mov	x9, #0xffffffffffffffe0    	// #-32
  40a228:	add	x10, x24, x9
  40a22c:	ldp	q0, q1, [x10]
  40a230:	add	x8, x8, #0x1
  40a234:	add	x10, x23, x9
  40a238:	cmp	x19, x8
  40a23c:	sub	x9, x9, #0x20
  40a240:	stp	q0, q1, [x10]
  40a244:	b.ne	40a228 <ferror@plt+0x7398>  // b.any
  40a248:	ldp	x20, x19, [sp, #64]
  40a24c:	ldp	x22, x21, [sp, #48]
  40a250:	ldp	x24, x23, [sp, #32]
  40a254:	ldr	x25, [sp, #16]
  40a258:	ldp	x29, x30, [sp], #80
  40a25c:	ret
  40a260:	mov	w0, #0x1                   	// #1
  40a264:	b	402fac <ferror@plt+0x11c>
  40a268:	stp	x29, x30, [sp, #-96]!
  40a26c:	stp	x28, x27, [sp, #16]
  40a270:	stp	x26, x25, [sp, #32]
  40a274:	stp	x24, x23, [sp, #48]
  40a278:	stp	x22, x21, [sp, #64]
  40a27c:	stp	x20, x19, [sp, #80]
  40a280:	mov	x29, sp
  40a284:	mov	x19, x3
  40a288:	mov	x20, x2
  40a28c:	mov	x24, x1
  40a290:	mov	x21, x0
  40a294:	bl	4027c0 <strlen@plt>
  40a298:	ldr	x25, [x24]
  40a29c:	cbz	x25, 40a32c <ferror@plt+0x749c>
  40a2a0:	mov	x22, x0
  40a2a4:	mov	w26, wzr
  40a2a8:	mov	x23, xzr
  40a2ac:	add	x27, x24, #0x8
  40a2b0:	mov	x28, #0xffffffffffffffff    	// #-1
  40a2b4:	mov	x24, x20
  40a2b8:	b	40a2d0 <ferror@plt+0x7440>
  40a2bc:	mov	x28, x23
  40a2c0:	ldr	x25, [x27, x23, lsl #3]
  40a2c4:	add	x23, x23, #0x1
  40a2c8:	add	x24, x24, x19
  40a2cc:	cbz	x25, 40a31c <ferror@plt+0x748c>
  40a2d0:	mov	x0, x25
  40a2d4:	mov	x1, x21
  40a2d8:	mov	x2, x22
  40a2dc:	bl	402990 <strncmp@plt>
  40a2e0:	cbnz	w0, 40a2c0 <ferror@plt+0x7430>
  40a2e4:	mov	x0, x25
  40a2e8:	bl	4027c0 <strlen@plt>
  40a2ec:	cmp	x0, x22
  40a2f0:	b.eq	40a330 <ferror@plt+0x74a0>  // b.none
  40a2f4:	cmn	x28, #0x1
  40a2f8:	b.eq	40a2bc <ferror@plt+0x742c>  // b.none
  40a2fc:	cbz	x20, 40a314 <ferror@plt+0x7484>
  40a300:	madd	x0, x28, x19, x20
  40a304:	mov	x1, x24
  40a308:	mov	x2, x19
  40a30c:	bl	402a30 <bcmp@plt>
  40a310:	cbz	w0, 40a2c0 <ferror@plt+0x7430>
  40a314:	mov	w26, #0x1                   	// #1
  40a318:	b	40a2c0 <ferror@plt+0x7430>
  40a31c:	tst	w26, #0x1
  40a320:	mov	x8, #0xfffffffffffffffe    	// #-2
  40a324:	csel	x0, x8, x28, ne  // ne = any
  40a328:	b	40a334 <ferror@plt+0x74a4>
  40a32c:	mov	x23, #0xffffffffffffffff    	// #-1
  40a330:	mov	x0, x23
  40a334:	ldp	x20, x19, [sp, #80]
  40a338:	ldp	x22, x21, [sp, #64]
  40a33c:	ldp	x24, x23, [sp, #48]
  40a340:	ldp	x26, x25, [sp, #32]
  40a344:	ldp	x28, x27, [sp, #16]
  40a348:	ldp	x29, x30, [sp], #96
  40a34c:	ret
  40a350:	stp	x29, x30, [sp, #-48]!
  40a354:	adrp	x8, 414000 <_obstack_memory_used@@Base+0x21b0>
  40a358:	adrp	x9, 414000 <_obstack_memory_used@@Base+0x21b0>
  40a35c:	add	x8, x8, #0xf16
  40a360:	add	x9, x9, #0xefb
  40a364:	cmn	x2, #0x1
  40a368:	stp	x20, x19, [sp, #32]
  40a36c:	mov	x19, x1
  40a370:	mov	x20, x0
  40a374:	csel	x1, x9, x8, eq  // eq = none
  40a378:	mov	w2, #0x5                   	// #5
  40a37c:	mov	x0, xzr
  40a380:	str	x21, [sp, #16]
  40a384:	mov	x29, sp
  40a388:	bl	402d70 <dcgettext@plt>
  40a38c:	mov	x21, x0
  40a390:	mov	w1, #0x8                   	// #8
  40a394:	mov	w0, wzr
  40a398:	mov	x2, x19
  40a39c:	bl	40e924 <ferror@plt+0xba94>
  40a3a0:	mov	x19, x0
  40a3a4:	mov	w0, #0x1                   	// #1
  40a3a8:	mov	x1, x20
  40a3ac:	bl	40ee18 <ferror@plt+0xbf88>
  40a3b0:	mov	x2, x21
  40a3b4:	mov	x3, x19
  40a3b8:	ldp	x20, x19, [sp, #32]
  40a3bc:	ldr	x21, [sp, #16]
  40a3c0:	mov	x4, x0
  40a3c4:	mov	w0, wzr
  40a3c8:	mov	w1, wzr
  40a3cc:	ldp	x29, x30, [sp], #48
  40a3d0:	b	4027f0 <error@plt>
  40a3d4:	stp	x29, x30, [sp, #-96]!
  40a3d8:	stp	x20, x19, [sp, #80]
  40a3dc:	mov	x20, x1
  40a3e0:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  40a3e4:	stp	x22, x21, [sp, #64]
  40a3e8:	mov	x19, x2
  40a3ec:	mov	x21, x0
  40a3f0:	add	x1, x1, #0xf33
  40a3f4:	mov	w2, #0x5                   	// #5
  40a3f8:	mov	x0, xzr
  40a3fc:	stp	x28, x27, [sp, #16]
  40a400:	stp	x26, x25, [sp, #32]
  40a404:	stp	x24, x23, [sp, #48]
  40a408:	mov	x29, sp
  40a40c:	bl	402d70 <dcgettext@plt>
  40a410:	adrp	x26, 426000 <_obstack_memory_used@@Base+0x141b0>
  40a414:	ldr	x1, [x26, #1312]
  40a418:	bl	402d80 <fputs_unlocked@plt>
  40a41c:	ldr	x24, [x21]
  40a420:	cbz	x24, 40a4bc <ferror@plt+0x762c>
  40a424:	add	x28, x21, #0x8
  40a428:	adrp	x21, 414000 <_obstack_memory_used@@Base+0x21b0>
  40a42c:	mov	x27, xzr
  40a430:	mov	x23, xzr
  40a434:	mov	x22, xzr
  40a438:	add	x21, x21, #0xf48
  40a43c:	b	40a478 <ferror@plt+0x75e8>
  40a440:	mov	x25, xzr
  40a444:	ldr	x23, [x26, #1312]
  40a448:	mov	x0, x24
  40a44c:	bl	40ee28 <ferror@plt+0xbf98>
  40a450:	mov	x3, x0
  40a454:	mov	w1, #0x1                   	// #1
  40a458:	mov	x0, x23
  40a45c:	mov	x2, x21
  40a460:	bl	402b90 <__fprintf_chk@plt>
  40a464:	add	x23, x20, x25
  40a468:	ldr	x24, [x28, x22, lsl #3]
  40a46c:	add	x22, x22, #0x1
  40a470:	add	x27, x27, x19
  40a474:	cbz	x24, 40a4bc <ferror@plt+0x762c>
  40a478:	cbz	x22, 40a440 <ferror@plt+0x75b0>
  40a47c:	add	x1, x20, x27
  40a480:	mov	x0, x23
  40a484:	mov	x2, x19
  40a488:	bl	402a30 <bcmp@plt>
  40a48c:	mov	x25, x27
  40a490:	cbnz	w0, 40a444 <ferror@plt+0x75b4>
  40a494:	ldr	x25, [x26, #1312]
  40a498:	mov	x0, x24
  40a49c:	bl	40ee28 <ferror@plt+0xbf98>
  40a4a0:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x21b0>
  40a4a4:	mov	x3, x0
  40a4a8:	mov	w1, #0x1                   	// #1
  40a4ac:	mov	x0, x25
  40a4b0:	add	x2, x2, #0xf50
  40a4b4:	bl	402b90 <__fprintf_chk@plt>
  40a4b8:	b	40a468 <ferror@plt+0x75d8>
  40a4bc:	ldr	x0, [x26, #1312]
  40a4c0:	ldp	x8, x9, [x0, #40]
  40a4c4:	cmp	x8, x9
  40a4c8:	b.cs	40a4f8 <ferror@plt+0x7668>  // b.hs, b.nlast
  40a4cc:	add	x9, x8, #0x1
  40a4d0:	mov	w10, #0xa                   	// #10
  40a4d4:	str	x9, [x0, #40]
  40a4d8:	strb	w10, [x8]
  40a4dc:	ldp	x20, x19, [sp, #80]
  40a4e0:	ldp	x22, x21, [sp, #64]
  40a4e4:	ldp	x24, x23, [sp, #48]
  40a4e8:	ldp	x26, x25, [sp, #32]
  40a4ec:	ldp	x28, x27, [sp, #16]
  40a4f0:	ldp	x29, x30, [sp], #96
  40a4f4:	ret
  40a4f8:	ldp	x20, x19, [sp, #80]
  40a4fc:	ldp	x22, x21, [sp, #64]
  40a500:	ldp	x24, x23, [sp, #48]
  40a504:	ldp	x26, x25, [sp, #32]
  40a508:	ldp	x28, x27, [sp, #16]
  40a50c:	mov	w1, #0xa                   	// #10
  40a510:	ldp	x29, x30, [sp], #96
  40a514:	b	402b30 <__overflow@plt>
  40a518:	sub	sp, sp, #0x80
  40a51c:	stp	x24, x23, [sp, #80]
  40a520:	mov	x23, x0
  40a524:	mov	x0, x1
  40a528:	stp	x29, x30, [sp, #32]
  40a52c:	stp	x28, x27, [sp, #48]
  40a530:	stp	x26, x25, [sp, #64]
  40a534:	stp	x22, x21, [sp, #96]
  40a538:	stp	x20, x19, [sp, #112]
  40a53c:	add	x29, sp, #0x20
  40a540:	mov	x19, x5
  40a544:	mov	x20, x4
  40a548:	mov	x21, x3
  40a54c:	mov	x22, x2
  40a550:	mov	x24, x1
  40a554:	bl	4027c0 <strlen@plt>
  40a558:	ldr	x28, [x22]
  40a55c:	cbz	x28, 40a5f4 <ferror@plt+0x7764>
  40a560:	mov	x26, x0
  40a564:	stur	x23, [x29, #-8]
  40a568:	stp	x22, x19, [sp, #8]
  40a56c:	mov	w19, wzr
  40a570:	mov	x25, xzr
  40a574:	add	x23, x22, #0x8
  40a578:	mov	x22, #0xffffffffffffffff    	// #-1
  40a57c:	mov	x27, x21
  40a580:	b	40a598 <ferror@plt+0x7708>
  40a584:	mov	x22, x25
  40a588:	ldr	x28, [x23, x25, lsl #3]
  40a58c:	add	x25, x25, #0x1
  40a590:	add	x27, x27, x20
  40a594:	cbz	x28, 40a5e4 <ferror@plt+0x7754>
  40a598:	mov	x0, x28
  40a59c:	mov	x1, x24
  40a5a0:	mov	x2, x26
  40a5a4:	bl	402990 <strncmp@plt>
  40a5a8:	cbnz	w0, 40a588 <ferror@plt+0x76f8>
  40a5ac:	mov	x0, x28
  40a5b0:	bl	4027c0 <strlen@plt>
  40a5b4:	cmp	x0, x26
  40a5b8:	b.eq	40a600 <ferror@plt+0x7770>  // b.none
  40a5bc:	cmn	x22, #0x1
  40a5c0:	b.eq	40a584 <ferror@plt+0x76f4>  // b.none
  40a5c4:	cbz	x21, 40a5dc <ferror@plt+0x774c>
  40a5c8:	madd	x0, x22, x20, x21
  40a5cc:	mov	x1, x27
  40a5d0:	mov	x2, x20
  40a5d4:	bl	402a30 <bcmp@plt>
  40a5d8:	cbz	w0, 40a588 <ferror@plt+0x76f8>
  40a5dc:	mov	w19, #0x1                   	// #1
  40a5e0:	b	40a588 <ferror@plt+0x76f8>
  40a5e4:	ldur	x23, [x29, #-8]
  40a5e8:	tbnz	w19, #0, 40a614 <ferror@plt+0x7784>
  40a5ec:	tbz	x22, #63, 40a680 <ferror@plt+0x77f0>
  40a5f0:	b	40a60c <ferror@plt+0x777c>
  40a5f4:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  40a5f8:	add	x1, x1, #0xefb
  40a5fc:	b	40a620 <ferror@plt+0x7790>
  40a600:	ldur	x23, [x29, #-8]
  40a604:	mov	x22, x25
  40a608:	tbz	x22, #63, 40a680 <ferror@plt+0x77f0>
  40a60c:	cmn	x22, #0x1
  40a610:	b.eq	40a6a4 <ferror@plt+0x7814>  // b.none
  40a614:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  40a618:	add	x1, x1, #0xf16
  40a61c:	ldp	x22, x19, [sp, #8]
  40a620:	mov	w2, #0x5                   	// #5
  40a624:	mov	x0, xzr
  40a628:	bl	402d70 <dcgettext@plt>
  40a62c:	mov	x25, x0
  40a630:	mov	w1, #0x8                   	// #8
  40a634:	mov	w0, wzr
  40a638:	mov	x2, x24
  40a63c:	bl	40e924 <ferror@plt+0xba94>
  40a640:	mov	x24, x0
  40a644:	mov	w0, #0x1                   	// #1
  40a648:	mov	x1, x23
  40a64c:	bl	40ee18 <ferror@plt+0xbf88>
  40a650:	mov	x4, x0
  40a654:	mov	w0, wzr
  40a658:	mov	w1, wzr
  40a65c:	mov	x2, x25
  40a660:	mov	x3, x24
  40a664:	bl	4027f0 <error@plt>
  40a668:	mov	x0, x22
  40a66c:	mov	x1, x21
  40a670:	mov	x2, x20
  40a674:	bl	40a3d4 <ferror@plt+0x7544>
  40a678:	blr	x19
  40a67c:	mov	x22, #0xffffffffffffffff    	// #-1
  40a680:	mov	x0, x22
  40a684:	ldp	x20, x19, [sp, #112]
  40a688:	ldp	x22, x21, [sp, #96]
  40a68c:	ldp	x24, x23, [sp, #80]
  40a690:	ldp	x26, x25, [sp, #64]
  40a694:	ldp	x28, x27, [sp, #48]
  40a698:	ldp	x29, x30, [sp, #32]
  40a69c:	add	sp, sp, #0x80
  40a6a0:	ret
  40a6a4:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  40a6a8:	add	x1, x1, #0xefb
  40a6ac:	b	40a61c <ferror@plt+0x778c>
  40a6b0:	stp	x29, x30, [sp, #-64]!
  40a6b4:	stp	x22, x21, [sp, #32]
  40a6b8:	stp	x20, x19, [sp, #48]
  40a6bc:	ldr	x20, [x1]
  40a6c0:	str	x23, [sp, #16]
  40a6c4:	mov	x29, sp
  40a6c8:	cbz	x20, 40a718 <ferror@plt+0x7888>
  40a6cc:	mov	x22, x2
  40a6d0:	mov	x23, x1
  40a6d4:	mov	x1, x2
  40a6d8:	mov	x2, x3
  40a6dc:	mov	x19, x3
  40a6e0:	mov	x21, x0
  40a6e4:	bl	402a30 <bcmp@plt>
  40a6e8:	cbz	w0, 40a718 <ferror@plt+0x7888>
  40a6ec:	add	x22, x22, x19
  40a6f0:	add	x23, x23, #0x8
  40a6f4:	ldr	x20, [x23]
  40a6f8:	cbz	x20, 40a718 <ferror@plt+0x7888>
  40a6fc:	mov	x0, x21
  40a700:	mov	x1, x22
  40a704:	mov	x2, x19
  40a708:	bl	402a30 <bcmp@plt>
  40a70c:	add	x22, x22, x19
  40a710:	add	x23, x23, #0x8
  40a714:	cbnz	w0, 40a6f4 <ferror@plt+0x7864>
  40a718:	mov	x0, x20
  40a71c:	ldp	x20, x19, [sp, #48]
  40a720:	ldp	x22, x21, [sp, #32]
  40a724:	ldr	x23, [sp, #16]
  40a728:	ldp	x29, x30, [sp], #64
  40a72c:	ret
  40a730:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  40a734:	str	x0, [x8, #2976]
  40a738:	ret
  40a73c:	and	w8, w0, #0x1
  40a740:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x141b0>
  40a744:	strb	w8, [x9, #2984]
  40a748:	ret
  40a74c:	stp	x29, x30, [sp, #-48]!
  40a750:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  40a754:	ldr	x0, [x8, #1336]
  40a758:	str	x21, [sp, #16]
  40a75c:	stp	x20, x19, [sp, #32]
  40a760:	mov	x29, sp
  40a764:	bl	412068 <_obstack_memory_used@@Base+0x218>
  40a768:	cbz	w0, 40a788 <ferror@plt+0x78f8>
  40a76c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  40a770:	ldrb	w8, [x8, #2984]
  40a774:	cbz	w8, 40a7a8 <ferror@plt+0x7918>
  40a778:	bl	402e00 <__errno_location@plt>
  40a77c:	ldr	w8, [x0]
  40a780:	cmp	w8, #0x20
  40a784:	b.ne	40a7a8 <ferror@plt+0x7918>  // b.any
  40a788:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  40a78c:	ldr	x0, [x8, #1312]
  40a790:	bl	412068 <_obstack_memory_used@@Base+0x218>
  40a794:	cbnz	w0, 40a814 <ferror@plt+0x7984>
  40a798:	ldp	x20, x19, [sp, #32]
  40a79c:	ldr	x21, [sp, #16]
  40a7a0:	ldp	x29, x30, [sp], #48
  40a7a4:	ret
  40a7a8:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  40a7ac:	add	x1, x1, #0xf55
  40a7b0:	mov	w2, #0x5                   	// #5
  40a7b4:	mov	x0, xzr
  40a7b8:	bl	402d70 <dcgettext@plt>
  40a7bc:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  40a7c0:	ldr	x21, [x8, #2976]
  40a7c4:	mov	x19, x0
  40a7c8:	bl	402e00 <__errno_location@plt>
  40a7cc:	ldr	w20, [x0]
  40a7d0:	cbnz	x21, 40a7f0 <ferror@plt+0x7960>
  40a7d4:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x21b0>
  40a7d8:	add	x2, x2, #0xf52
  40a7dc:	mov	w0, wzr
  40a7e0:	mov	w1, w20
  40a7e4:	mov	x3, x19
  40a7e8:	bl	4027f0 <error@plt>
  40a7ec:	b	40a814 <ferror@plt+0x7984>
  40a7f0:	mov	x0, x21
  40a7f4:	bl	40eb38 <ferror@plt+0xbca8>
  40a7f8:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x21b0>
  40a7fc:	mov	x3, x0
  40a800:	add	x2, x2, #0xedf
  40a804:	mov	w0, wzr
  40a808:	mov	w1, w20
  40a80c:	mov	x4, x19
  40a810:	bl	4027f0 <error@plt>
  40a814:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  40a818:	ldr	w0, [x8, #1200]
  40a81c:	bl	402790 <_exit@plt>
  40a820:	adrp	x8, 414000 <_obstack_memory_used@@Base+0x21b0>
  40a824:	ldr	q0, [x8, #3952]
  40a828:	str	xzr, [x0, #16]
  40a82c:	str	wzr, [x0, #24]
  40a830:	str	q0, [x0]
  40a834:	ret
  40a838:	ldr	w8, [x0]
  40a83c:	str	w8, [x1]
  40a840:	ldr	w8, [x0, #4]
  40a844:	str	w8, [x1, #4]
  40a848:	ldr	w8, [x0, #8]
  40a84c:	str	w8, [x1, #8]
  40a850:	ldr	w8, [x0, #12]
  40a854:	mov	x0, x1
  40a858:	str	w8, [x1, #12]
  40a85c:	ret
  40a860:	stp	x29, x30, [sp, #-48]!
  40a864:	stp	x22, x21, [sp, #16]
  40a868:	stp	x20, x19, [sp, #32]
  40a86c:	ldr	w8, [x0, #24]
  40a870:	ldr	w11, [x0, #16]
  40a874:	mov	w9, #0x20                  	// #32
  40a878:	mov	w10, #0x10                  	// #16
  40a87c:	cmp	w8, #0x38
  40a880:	mov	x19, x1
  40a884:	mov	x20, x0
  40a888:	csel	x10, x10, x9, cc  // cc = lo, ul, last
  40a88c:	adds	w9, w11, w8
  40a890:	mov	x29, sp
  40a894:	str	w9, [x0, #16]
  40a898:	b.cc	40a8a8 <ferror@plt+0x7a18>  // b.lo, b.ul, b.last
  40a89c:	ldr	w11, [x20, #20]
  40a8a0:	add	w11, w11, #0x1
  40a8a4:	str	w11, [x20, #20]
  40a8a8:	lsl	x22, x10, #2
  40a8ac:	lsl	w11, w9, #3
  40a8b0:	add	x21, x20, #0x1c
  40a8b4:	sub	x10, x22, #0x8
  40a8b8:	str	w11, [x21, x10]
  40a8bc:	ldr	w11, [x20, #20]
  40a8c0:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  40a8c4:	add	x12, x22, x21
  40a8c8:	add	x0, x21, x8
  40a8cc:	extr	w9, w11, w9, #29
  40a8d0:	sub	x2, x10, x8
  40a8d4:	add	x1, x1, #0xf80
  40a8d8:	stur	w9, [x12, #-4]
  40a8dc:	bl	402760 <memcpy@plt>
  40a8e0:	mov	x0, x21
  40a8e4:	mov	x1, x22
  40a8e8:	mov	x2, x20
  40a8ec:	bl	40a924 <ferror@plt+0x7a94>
  40a8f0:	ldr	w8, [x20]
  40a8f4:	mov	x0, x19
  40a8f8:	str	w8, [x19]
  40a8fc:	ldr	w8, [x20, #4]
  40a900:	str	w8, [x19, #4]
  40a904:	ldr	w8, [x20, #8]
  40a908:	str	w8, [x19, #8]
  40a90c:	ldr	w8, [x20, #12]
  40a910:	str	w8, [x19, #12]
  40a914:	ldp	x20, x19, [sp, #32]
  40a918:	ldp	x22, x21, [sp, #16]
  40a91c:	ldp	x29, x30, [sp], #48
  40a920:	ret
  40a924:	stp	x29, x30, [sp, #-96]!
  40a928:	stp	x28, x27, [sp, #16]
  40a92c:	stp	x26, x25, [sp, #32]
  40a930:	stp	x24, x23, [sp, #48]
  40a934:	stp	x22, x21, [sp, #64]
  40a938:	stp	x20, x19, [sp, #80]
  40a93c:	ldp	w10, w13, [x2, #16]
  40a940:	ldp	w8, w9, [x2]
  40a944:	and	x12, x1, #0xfffffffffffffffc
  40a948:	lsr	x14, x1, #32
  40a94c:	adds	w10, w10, w1
  40a950:	str	w10, [x2, #16]
  40a954:	ldp	w11, w10, [x2, #8]
  40a958:	add	x12, x0, x12
  40a95c:	cinc	w14, w14, cs  // cs = hs, nlast
  40a960:	add	w13, w13, w14
  40a964:	cmp	x12, x0
  40a968:	str	w13, [x2, #20]
  40a96c:	b.ls	40b324 <ferror@plt+0x8494>  // b.plast
  40a970:	mov	w22, #0xd391                	// #54161
  40a974:	movk	w22, #0xeb86, lsl #16
  40a978:	ldp	w29, w25, [x0]
  40a97c:	bic	w4, w10, w9
  40a980:	and	w5, w11, w9
  40a984:	orr	w4, w5, w4
  40a988:	add	w4, w8, w4
  40a98c:	mov	w19, #0xa478                	// #42104
  40a990:	add	w4, w4, w29
  40a994:	movk	w19, #0xd76a, lsl #16
  40a998:	add	w4, w4, w19
  40a99c:	ror	w4, w4, #25
  40a9a0:	add	w4, w4, w9
  40a9a4:	bic	w19, w11, w4
  40a9a8:	and	w20, w9, w4
  40a9ac:	add	w5, w10, w25
  40a9b0:	orr	w19, w20, w19
  40a9b4:	add	w5, w5, w19
  40a9b8:	mov	w19, #0xb756                	// #46934
  40a9bc:	movk	w19, #0xe8c7, lsl #16
  40a9c0:	ldp	w23, w28, [x0, #8]
  40a9c4:	add	w5, w5, w19
  40a9c8:	ror	w5, w5, #20
  40a9cc:	add	w5, w5, w4
  40a9d0:	bic	w19, w9, w5
  40a9d4:	and	w20, w4, w5
  40a9d8:	add	w6, w11, w23
  40a9dc:	orr	w19, w20, w19
  40a9e0:	add	w6, w6, w19
  40a9e4:	mov	w19, #0x70db                	// #28891
  40a9e8:	ldp	w24, w14, [x0, #16]
  40a9ec:	movk	w19, #0x2420, lsl #16
  40a9f0:	add	w6, w6, w19
  40a9f4:	ror	w6, w6, #15
  40a9f8:	add	w6, w6, w5
  40a9fc:	add	w20, w24, w4
  40aa00:	bic	w4, w4, w6
  40aa04:	and	w19, w5, w6
  40aa08:	add	w7, w9, w28
  40aa0c:	orr	w4, w19, w4
  40aa10:	add	w4, w7, w4
  40aa14:	mov	w7, #0xceee                	// #52974
  40aa18:	movk	w7, #0xc1bd, lsl #16
  40aa1c:	add	w4, w4, w7
  40aa20:	ror	w4, w4, #10
  40aa24:	add	w4, w4, w6
  40aa28:	add	w19, w14, w5
  40aa2c:	bic	w5, w5, w4
  40aa30:	and	w7, w6, w4
  40aa34:	orr	w5, w7, w5
  40aa38:	add	w5, w20, w5
  40aa3c:	mov	w20, #0xfaf                 	// #4015
  40aa40:	ldp	w27, w17, [x0, #24]
  40aa44:	movk	w20, #0xf57c, lsl #16
  40aa48:	add	w5, w5, w20
  40aa4c:	ror	w5, w5, #25
  40aa50:	add	w5, w5, w4
  40aa54:	add	w7, w27, w6
  40aa58:	bic	w6, w6, w5
  40aa5c:	and	w20, w4, w5
  40aa60:	orr	w6, w20, w6
  40aa64:	add	w6, w19, w6
  40aa68:	mov	w19, #0xc62a                	// #50730
  40aa6c:	movk	w19, #0x4787, lsl #16
  40aa70:	add	w6, w6, w19
  40aa74:	ror	w6, w6, #20
  40aa78:	add	w6, w6, w5
  40aa7c:	add	w20, w17, w4
  40aa80:	bic	w4, w4, w6
  40aa84:	and	w19, w5, w6
  40aa88:	orr	w4, w19, w4
  40aa8c:	add	w4, w7, w4
  40aa90:	mov	w7, #0x4613                	// #17939
  40aa94:	ldp	w13, w26, [x0, #32]
  40aa98:	movk	w7, #0xa830, lsl #16
  40aa9c:	add	w4, w4, w7
  40aaa0:	ror	w4, w4, #15
  40aaa4:	add	w4, w4, w6
  40aaa8:	add	w19, w13, w5
  40aaac:	bic	w5, w5, w4
  40aab0:	and	w7, w6, w4
  40aab4:	orr	w5, w7, w5
  40aab8:	add	w5, w20, w5
  40aabc:	mov	w20, #0x9501                	// #38145
  40aac0:	movk	w20, #0xfd46, lsl #16
  40aac4:	add	w5, w5, w20
  40aac8:	ror	w5, w5, #10
  40aacc:	add	w5, w5, w4
  40aad0:	add	w7, w26, w6
  40aad4:	bic	w6, w6, w5
  40aad8:	and	w20, w4, w5
  40aadc:	orr	w6, w20, w6
  40aae0:	add	w6, w19, w6
  40aae4:	mov	w19, #0x98d8                	// #39128
  40aae8:	ldp	w16, w30, [x0, #40]
  40aaec:	movk	w19, #0x6980, lsl #16
  40aaf0:	add	w6, w6, w19
  40aaf4:	ror	w6, w6, #25
  40aaf8:	add	w6, w6, w5
  40aafc:	add	w20, w16, w4
  40ab00:	bic	w4, w4, w6
  40ab04:	and	w19, w5, w6
  40ab08:	orr	w4, w19, w4
  40ab0c:	add	w4, w7, w4
  40ab10:	mov	w7, #0xf7af                	// #63407
  40ab14:	movk	w7, #0x8b44, lsl #16
  40ab18:	add	w4, w4, w7
  40ab1c:	ror	w4, w4, #20
  40ab20:	add	w4, w4, w6
  40ab24:	add	w19, w30, w5
  40ab28:	bic	w5, w5, w4
  40ab2c:	and	w7, w6, w4
  40ab30:	orr	w5, w7, w5
  40ab34:	ldp	w1, w15, [x0, #48]
  40ab38:	add	w5, w20, w5
  40ab3c:	mov	w20, #0xffff5bb1            	// #-42063
  40ab40:	add	w5, w5, w20
  40ab44:	ror	w5, w5, #15
  40ab48:	add	w5, w5, w4
  40ab4c:	add	w7, w1, w6
  40ab50:	bic	w6, w6, w5
  40ab54:	and	w20, w4, w5
  40ab58:	orr	w6, w20, w6
  40ab5c:	add	w6, w19, w6
  40ab60:	mov	w19, #0xd7be                	// #55230
  40ab64:	movk	w19, #0x895c, lsl #16
  40ab68:	add	w6, w6, w19
  40ab6c:	ror	w6, w6, #10
  40ab70:	add	w6, w6, w5
  40ab74:	add	w20, w15, w4
  40ab78:	bic	w4, w4, w6
  40ab7c:	and	w19, w5, w6
  40ab80:	orr	w4, w19, w4
  40ab84:	add	w4, w7, w4
  40ab88:	mov	w7, #0x1122                	// #4386
  40ab8c:	ldp	w3, w18, [x0, #56]
  40ab90:	movk	w7, #0x6b90, lsl #16
  40ab94:	add	w4, w4, w7
  40ab98:	ror	w4, w4, #25
  40ab9c:	add	w4, w4, w6
  40aba0:	add	w19, w3, w5
  40aba4:	bic	w5, w5, w4
  40aba8:	and	w7, w6, w4
  40abac:	orr	w5, w7, w5
  40abb0:	add	w5, w20, w5
  40abb4:	mov	w20, #0x7193                	// #29075
  40abb8:	movk	w20, #0xfd98, lsl #16
  40abbc:	add	w5, w5, w20
  40abc0:	ror	w5, w5, #20
  40abc4:	add	w5, w5, w4
  40abc8:	add	w7, w18, w6
  40abcc:	bic	w6, w6, w5
  40abd0:	and	w20, w4, w5
  40abd4:	orr	w6, w20, w6
  40abd8:	add	w6, w19, w6
  40abdc:	mov	w19, #0x438e                	// #17294
  40abe0:	movk	w19, #0xa679, lsl #16
  40abe4:	add	w6, w6, w19
  40abe8:	ror	w6, w6, #15
  40abec:	add	w6, w6, w5
  40abf0:	add	w20, w25, w4
  40abf4:	bic	w4, w4, w6
  40abf8:	and	w19, w5, w6
  40abfc:	orr	w4, w19, w4
  40ac00:	mov	w21, #0x821                 	// #2081
  40ac04:	add	w4, w7, w4
  40ac08:	movk	w21, #0x49b4, lsl #16
  40ac0c:	add	w4, w4, w21
  40ac10:	ror	w4, w4, #10
  40ac14:	add	w4, w4, w6
  40ac18:	add	w19, w27, w5
  40ac1c:	bic	w7, w6, w5
  40ac20:	and	w5, w4, w5
  40ac24:	orr	w5, w5, w7
  40ac28:	mov	w21, #0x2562                	// #9570
  40ac2c:	add	w5, w20, w5
  40ac30:	movk	w21, #0xf61e, lsl #16
  40ac34:	add	w5, w5, w21
  40ac38:	ror	w5, w5, #27
  40ac3c:	add	w5, w5, w4
  40ac40:	add	w7, w30, w6
  40ac44:	bic	w20, w4, w6
  40ac48:	and	w6, w5, w6
  40ac4c:	orr	w6, w6, w20
  40ac50:	mov	w21, #0xb340                	// #45888
  40ac54:	add	w6, w19, w6
  40ac58:	movk	w21, #0xc040, lsl #16
  40ac5c:	add	w6, w6, w21
  40ac60:	ror	w6, w6, #23
  40ac64:	add	w6, w6, w5
  40ac68:	add	w20, w29, w4
  40ac6c:	bic	w19, w5, w4
  40ac70:	and	w4, w6, w4
  40ac74:	orr	w4, w4, w19
  40ac78:	mov	w21, #0x5a51                	// #23121
  40ac7c:	add	w4, w7, w4
  40ac80:	movk	w21, #0x265e, lsl #16
  40ac84:	add	w4, w4, w21
  40ac88:	ror	w4, w4, #18
  40ac8c:	add	w4, w4, w6
  40ac90:	add	w19, w14, w5
  40ac94:	bic	w7, w6, w5
  40ac98:	and	w5, w4, w5
  40ac9c:	orr	w5, w5, w7
  40aca0:	mov	w21, #0xc7aa                	// #51114
  40aca4:	add	w5, w20, w5
  40aca8:	movk	w21, #0xe9b6, lsl #16
  40acac:	add	w5, w5, w21
  40acb0:	ror	w5, w5, #12
  40acb4:	add	w5, w5, w4
  40acb8:	add	w7, w16, w6
  40acbc:	bic	w20, w4, w6
  40acc0:	and	w6, w5, w6
  40acc4:	orr	w6, w6, w20
  40acc8:	mov	w21, #0x105d                	// #4189
  40accc:	add	w6, w19, w6
  40acd0:	movk	w21, #0xd62f, lsl #16
  40acd4:	add	w6, w6, w21
  40acd8:	ror	w6, w6, #27
  40acdc:	add	w6, w6, w5
  40ace0:	add	w20, w18, w4
  40ace4:	bic	w19, w5, w4
  40ace8:	and	w4, w6, w4
  40acec:	orr	w4, w4, w19
  40acf0:	mov	w21, #0x1453                	// #5203
  40acf4:	add	w4, w7, w4
  40acf8:	movk	w21, #0x244, lsl #16
  40acfc:	add	w4, w4, w21
  40ad00:	ror	w4, w4, #23
  40ad04:	add	w4, w4, w6
  40ad08:	add	w19, w24, w5
  40ad0c:	bic	w7, w6, w5
  40ad10:	and	w5, w4, w5
  40ad14:	orr	w5, w5, w7
  40ad18:	mov	w21, #0xe681                	// #59009
  40ad1c:	add	w5, w20, w5
  40ad20:	movk	w21, #0xd8a1, lsl #16
  40ad24:	add	w5, w5, w21
  40ad28:	ror	w5, w5, #18
  40ad2c:	add	w5, w5, w4
  40ad30:	add	w7, w26, w6
  40ad34:	bic	w20, w4, w6
  40ad38:	and	w6, w5, w6
  40ad3c:	orr	w6, w6, w20
  40ad40:	mov	w21, #0xfbc8                	// #64456
  40ad44:	add	w6, w19, w6
  40ad48:	movk	w21, #0xe7d3, lsl #16
  40ad4c:	add	w6, w6, w21
  40ad50:	ror	w6, w6, #12
  40ad54:	add	w6, w6, w5
  40ad58:	add	w20, w3, w4
  40ad5c:	bic	w19, w5, w4
  40ad60:	and	w4, w6, w4
  40ad64:	orr	w4, w4, w19
  40ad68:	mov	w21, #0xcde6                	// #52710
  40ad6c:	add	w4, w7, w4
  40ad70:	movk	w21, #0x21e1, lsl #16
  40ad74:	add	w4, w4, w21
  40ad78:	ror	w4, w4, #27
  40ad7c:	add	w4, w4, w6
  40ad80:	add	w19, w28, w5
  40ad84:	bic	w7, w6, w5
  40ad88:	and	w5, w4, w5
  40ad8c:	orr	w5, w5, w7
  40ad90:	mov	w21, #0x7d6                 	// #2006
  40ad94:	add	w5, w20, w5
  40ad98:	movk	w21, #0xc337, lsl #16
  40ad9c:	add	w5, w5, w21
  40ada0:	ror	w5, w5, #23
  40ada4:	add	w5, w5, w4
  40ada8:	add	w7, w13, w6
  40adac:	bic	w20, w4, w6
  40adb0:	and	w6, w5, w6
  40adb4:	orr	w6, w6, w20
  40adb8:	mov	w21, #0xd87                 	// #3463
  40adbc:	add	w6, w19, w6
  40adc0:	movk	w21, #0xf4d5, lsl #16
  40adc4:	add	w6, w6, w21
  40adc8:	ror	w6, w6, #18
  40adcc:	add	w6, w6, w5
  40add0:	add	w20, w15, w4
  40add4:	bic	w19, w5, w4
  40add8:	and	w4, w6, w4
  40addc:	orr	w4, w4, w19
  40ade0:	mov	w21, #0x14ed                	// #5357
  40ade4:	add	w4, w7, w4
  40ade8:	movk	w21, #0x455a, lsl #16
  40adec:	add	w4, w4, w21
  40adf0:	ror	w4, w4, #12
  40adf4:	add	w4, w4, w6
  40adf8:	add	w19, w23, w5
  40adfc:	bic	w7, w6, w5
  40ae00:	and	w5, w4, w5
  40ae04:	orr	w5, w5, w7
  40ae08:	mov	w21, #0xe905                	// #59653
  40ae0c:	add	w5, w20, w5
  40ae10:	movk	w21, #0xa9e3, lsl #16
  40ae14:	add	w5, w5, w21
  40ae18:	ror	w5, w5, #27
  40ae1c:	add	w5, w5, w4
  40ae20:	add	w7, w17, w6
  40ae24:	bic	w20, w4, w6
  40ae28:	and	w6, w5, w6
  40ae2c:	orr	w6, w6, w20
  40ae30:	mov	w21, #0xa3f8                	// #41976
  40ae34:	add	w6, w19, w6
  40ae38:	movk	w21, #0xfcef, lsl #16
  40ae3c:	add	w6, w6, w21
  40ae40:	ror	w6, w6, #23
  40ae44:	add	w6, w6, w5
  40ae48:	add	w20, w1, w4
  40ae4c:	bic	w19, w5, w4
  40ae50:	and	w4, w6, w4
  40ae54:	orr	w4, w4, w19
  40ae58:	add	w4, w7, w4
  40ae5c:	mov	w7, #0x2d9                 	// #729
  40ae60:	movk	w7, #0x676f, lsl #16
  40ae64:	add	w4, w4, w7
  40ae68:	ror	w4, w4, #18
  40ae6c:	add	w4, w4, w6
  40ae70:	eor	w7, w4, w6
  40ae74:	and	w19, w7, w5
  40ae78:	eor	w19, w19, w6
  40ae7c:	add	w19, w20, w19
  40ae80:	mov	w20, #0x4c8a                	// #19594
  40ae84:	movk	w20, #0x8d2a, lsl #16
  40ae88:	add	w19, w19, w20
  40ae8c:	ror	w19, w19, #12
  40ae90:	add	w19, w19, w4
  40ae94:	add	w5, w14, w5
  40ae98:	eor	w7, w7, w19
  40ae9c:	mov	w20, #0x3942                	// #14658
  40aea0:	add	w5, w5, w7
  40aea4:	movk	w20, #0xfffa, lsl #16
  40aea8:	add	w5, w5, w20
  40aeac:	ror	w5, w5, #28
  40aeb0:	add	w7, w30, w4
  40aeb4:	eor	w4, w19, w4
  40aeb8:	add	w5, w5, w19
  40aebc:	add	w6, w13, w6
  40aec0:	eor	w4, w4, w5
  40aec4:	mov	w20, #0xf681                	// #63105
  40aec8:	add	w4, w6, w4
  40aecc:	movk	w20, #0x8771, lsl #16
  40aed0:	add	w4, w4, w20
  40aed4:	ror	w4, w4, #21
  40aed8:	add	w6, w3, w19
  40aedc:	eor	w19, w5, w19
  40aee0:	add	w4, w4, w5
  40aee4:	eor	w19, w19, w4
  40aee8:	mov	w20, #0x6122                	// #24866
  40aeec:	add	w7, w7, w19
  40aef0:	movk	w20, #0x6d9d, lsl #16
  40aef4:	add	w7, w7, w20
  40aef8:	ror	w7, w7, #16
  40aefc:	add	w19, w25, w5
  40af00:	eor	w5, w4, w5
  40af04:	add	w7, w7, w4
  40af08:	eor	w5, w5, w7
  40af0c:	mov	w20, #0x380c                	// #14348
  40af10:	add	w5, w6, w5
  40af14:	movk	w20, #0xfde5, lsl #16
  40af18:	add	w5, w5, w20
  40af1c:	ror	w5, w5, #9
  40af20:	add	w6, w24, w4
  40af24:	eor	w4, w7, w4
  40af28:	add	w5, w5, w7
  40af2c:	eor	w4, w4, w5
  40af30:	mov	w20, #0xea44                	// #59972
  40af34:	add	w4, w19, w4
  40af38:	movk	w20, #0xa4be, lsl #16
  40af3c:	add	w4, w4, w20
  40af40:	ror	w4, w4, #28
  40af44:	add	w19, w17, w7
  40af48:	eor	w7, w5, w7
  40af4c:	add	w4, w4, w5
  40af50:	eor	w7, w7, w4
  40af54:	mov	w20, #0xcfa9                	// #53161
  40af58:	add	w6, w6, w7
  40af5c:	movk	w20, #0x4bde, lsl #16
  40af60:	add	w6, w6, w20
  40af64:	ror	w6, w6, #21
  40af68:	add	w7, w16, w5
  40af6c:	eor	w5, w4, w5
  40af70:	add	w6, w6, w4
  40af74:	eor	w5, w5, w6
  40af78:	mov	w20, #0x4b60                	// #19296
  40af7c:	add	w5, w19, w5
  40af80:	movk	w20, #0xf6bb, lsl #16
  40af84:	add	w5, w5, w20
  40af88:	ror	w5, w5, #16
  40af8c:	add	w19, w15, w4
  40af90:	eor	w4, w6, w4
  40af94:	add	w5, w5, w6
  40af98:	eor	w4, w4, w5
  40af9c:	mov	w20, #0xbc70                	// #48240
  40afa0:	add	w4, w7, w4
  40afa4:	movk	w20, #0xbebf, lsl #16
  40afa8:	add	w4, w4, w20
  40afac:	ror	w4, w4, #9
  40afb0:	add	w7, w29, w6
  40afb4:	eor	w6, w5, w6
  40afb8:	add	w4, w4, w5
  40afbc:	eor	w6, w6, w4
  40afc0:	mov	w20, #0x7ec6                	// #32454
  40afc4:	add	w6, w19, w6
  40afc8:	movk	w20, #0x289b, lsl #16
  40afcc:	add	w6, w6, w20
  40afd0:	ror	w6, w6, #28
  40afd4:	add	w19, w28, w5
  40afd8:	eor	w5, w4, w5
  40afdc:	add	w6, w6, w4
  40afe0:	eor	w5, w5, w6
  40afe4:	mov	w20, #0x27fa                	// #10234
  40afe8:	add	w5, w7, w5
  40afec:	movk	w20, #0xeaa1, lsl #16
  40aff0:	add	w5, w5, w20
  40aff4:	ror	w5, w5, #21
  40aff8:	add	w7, w27, w4
  40affc:	eor	w4, w6, w4
  40b000:	add	w5, w5, w6
  40b004:	eor	w4, w4, w5
  40b008:	mov	w20, #0x3085                	// #12421
  40b00c:	add	w4, w19, w4
  40b010:	movk	w20, #0xd4ef, lsl #16
  40b014:	add	w4, w4, w20
  40b018:	ror	w4, w4, #16
  40b01c:	add	w19, w26, w6
  40b020:	eor	w6, w5, w6
  40b024:	add	w4, w4, w5
  40b028:	eor	w6, w6, w4
  40b02c:	mov	w20, #0x1d05                	// #7429
  40b030:	add	w6, w7, w6
  40b034:	movk	w20, #0x488, lsl #16
  40b038:	add	w6, w6, w20
  40b03c:	ror	w6, w6, #9
  40b040:	add	w7, w1, w5
  40b044:	eor	w5, w4, w5
  40b048:	add	w6, w6, w4
  40b04c:	eor	w5, w5, w6
  40b050:	mov	w20, #0xd039                	// #53305
  40b054:	add	w5, w19, w5
  40b058:	movk	w20, #0xd9d4, lsl #16
  40b05c:	add	w5, w5, w20
  40b060:	ror	w5, w5, #28
  40b064:	add	w19, w18, w4
  40b068:	eor	w4, w6, w4
  40b06c:	add	w5, w5, w6
  40b070:	eor	w4, w4, w5
  40b074:	mov	w20, #0x99e5                	// #39397
  40b078:	add	w4, w7, w4
  40b07c:	movk	w20, #0xe6db, lsl #16
  40b080:	add	w4, w4, w20
  40b084:	ror	w4, w4, #21
  40b088:	eor	w7, w5, w6
  40b08c:	add	w4, w4, w5
  40b090:	eor	w7, w7, w4
  40b094:	mov	w20, #0x7cf8                	// #31992
  40b098:	add	w7, w19, w7
  40b09c:	movk	w20, #0x1fa2, lsl #16
  40b0a0:	add	w7, w7, w20
  40b0a4:	ror	w7, w7, #16
  40b0a8:	add	w19, w29, w5
  40b0ac:	eor	w5, w4, w5
  40b0b0:	add	w7, w7, w4
  40b0b4:	add	w6, w23, w6
  40b0b8:	eor	w5, w5, w7
  40b0bc:	add	w5, w6, w5
  40b0c0:	mov	w6, #0x5665                	// #22117
  40b0c4:	movk	w6, #0xc4ac, lsl #16
  40b0c8:	add	w5, w5, w6
  40b0cc:	ror	w5, w5, #9
  40b0d0:	add	w5, w5, w7
  40b0d4:	add	w17, w17, w4
  40b0d8:	orn	w4, w5, w4
  40b0dc:	eor	w4, w4, w7
  40b0e0:	mov	w6, #0x2244                	// #8772
  40b0e4:	add	w4, w19, w4
  40b0e8:	movk	w6, #0xf429, lsl #16
  40b0ec:	add	w4, w4, w6
  40b0f0:	ror	w4, w4, #26
  40b0f4:	add	w4, w4, w5
  40b0f8:	orn	w6, w4, w7
  40b0fc:	eor	w6, w6, w5
  40b100:	add	w17, w17, w6
  40b104:	mov	w6, #0xff97                	// #65431
  40b108:	movk	w6, #0x432a, lsl #16
  40b10c:	add	w17, w17, w6
  40b110:	ror	w17, w17, #22
  40b114:	add	w17, w17, w4
  40b118:	add	w14, w14, w5
  40b11c:	orn	w5, w17, w5
  40b120:	add	w3, w3, w7
  40b124:	eor	w5, w5, w4
  40b128:	add	w3, w3, w5
  40b12c:	mov	w5, #0x23a7                	// #9127
  40b130:	movk	w5, #0xab94, lsl #16
  40b134:	add	w3, w3, w5
  40b138:	ror	w3, w3, #17
  40b13c:	add	w3, w3, w17
  40b140:	add	w1, w1, w4
  40b144:	orn	w4, w3, w4
  40b148:	eor	w4, w4, w17
  40b14c:	mov	w5, #0xa039                	// #41017
  40b150:	add	w14, w14, w4
  40b154:	movk	w5, #0xfc93, lsl #16
  40b158:	add	w14, w14, w5
  40b15c:	ror	w14, w14, #11
  40b160:	add	w14, w14, w3
  40b164:	add	w4, w28, w17
  40b168:	orn	w17, w14, w17
  40b16c:	eor	w17, w17, w3
  40b170:	add	w17, w1, w17
  40b174:	mov	w1, #0x59c3                	// #22979
  40b178:	movk	w1, #0x655b, lsl #16
  40b17c:	add	w17, w17, w1
  40b180:	ror	w17, w17, #26
  40b184:	add	w17, w17, w14
  40b188:	orn	w1, w17, w3
  40b18c:	eor	w1, w1, w14
  40b190:	add	w1, w4, w1
  40b194:	mov	w4, #0xcc92                	// #52370
  40b198:	movk	w4, #0x8f0c, lsl #16
  40b19c:	add	w1, w1, w4
  40b1a0:	ror	w1, w1, #22
  40b1a4:	add	w1, w1, w17
  40b1a8:	add	w16, w16, w3
  40b1ac:	add	w3, w25, w14
  40b1b0:	orn	w14, w1, w14
  40b1b4:	eor	w14, w14, w17
  40b1b8:	add	w14, w16, w14
  40b1bc:	mov	w16, #0xf47d                	// #62589
  40b1c0:	movk	w16, #0xffef, lsl #16
  40b1c4:	add	w14, w14, w16
  40b1c8:	ror	w14, w14, #17
  40b1cc:	add	w14, w14, w1
  40b1d0:	orn	w16, w14, w17
  40b1d4:	add	w13, w13, w17
  40b1d8:	eor	w16, w16, w1
  40b1dc:	add	w17, w18, w1
  40b1e0:	mov	w18, #0x5dd1                	// #24017
  40b1e4:	add	w16, w3, w16
  40b1e8:	movk	w18, #0x8584, lsl #16
  40b1ec:	add	w16, w16, w18
  40b1f0:	ror	w16, w16, #11
  40b1f4:	add	w16, w16, w14
  40b1f8:	orn	w18, w16, w1
  40b1fc:	eor	w18, w18, w14
  40b200:	mov	w1, #0x7e4f                	// #32335
  40b204:	add	w13, w13, w18
  40b208:	movk	w1, #0x6fa8, lsl #16
  40b20c:	add	w13, w13, w1
  40b210:	ror	w13, w13, #26
  40b214:	add	w13, w13, w16
  40b218:	add	w18, w27, w14
  40b21c:	orn	w14, w13, w14
  40b220:	eor	w14, w14, w16
  40b224:	add	w14, w17, w14
  40b228:	mov	w17, #0xe6e0                	// #59104
  40b22c:	movk	w17, #0xfe2c, lsl #16
  40b230:	add	w14, w14, w17
  40b234:	ror	w14, w14, #22
  40b238:	add	w14, w14, w13
  40b23c:	add	w15, w15, w16
  40b240:	orn	w16, w14, w16
  40b244:	eor	w16, w16, w13
  40b248:	add	w16, w18, w16
  40b24c:	mov	w18, #0x4314                	// #17172
  40b250:	movk	w18, #0xa301, lsl #16
  40b254:	add	w16, w16, w18
  40b258:	ror	w16, w16, #17
  40b25c:	add	w16, w16, w14
  40b260:	add	w17, w24, w13
  40b264:	orn	w13, w16, w13
  40b268:	eor	w13, w13, w14
  40b26c:	mov	w18, #0x11a1                	// #4513
  40b270:	add	w13, w15, w13
  40b274:	movk	w18, #0x4e08, lsl #16
  40b278:	add	w13, w13, w18
  40b27c:	ror	w13, w13, #11
  40b280:	add	w13, w13, w16
  40b284:	add	w15, w30, w14
  40b288:	orn	w14, w13, w14
  40b28c:	eor	w14, w14, w16
  40b290:	mov	w18, #0x7e82                	// #32386
  40b294:	add	w14, w17, w14
  40b298:	movk	w18, #0xf753, lsl #16
  40b29c:	add	w14, w14, w18
  40b2a0:	ror	w14, w14, #26
  40b2a4:	add	w14, w14, w13
  40b2a8:	add	w17, w23, w16
  40b2ac:	orn	w16, w14, w16
  40b2b0:	eor	w16, w16, w13
  40b2b4:	mov	w18, #0xf235                	// #62005
  40b2b8:	add	w15, w15, w16
  40b2bc:	movk	w18, #0xbd3a, lsl #16
  40b2c0:	add	w15, w15, w18
  40b2c4:	ror	w15, w15, #22
  40b2c8:	add	w15, w15, w14
  40b2cc:	add	w16, w26, w13
  40b2d0:	orn	w13, w15, w13
  40b2d4:	eor	w13, w13, w14
  40b2d8:	add	w13, w17, w13
  40b2dc:	mov	w17, #0xd2bb                	// #53947
  40b2e0:	movk	w17, #0x2ad7, lsl #16
  40b2e4:	add	w13, w13, w17
  40b2e8:	ror	w13, w13, #17
  40b2ec:	add	w13, w13, w15
  40b2f0:	add	w8, w14, w8
  40b2f4:	orn	w14, w13, w14
  40b2f8:	add	w9, w13, w9
  40b2fc:	add	w11, w13, w11
  40b300:	eor	w13, w14, w15
  40b304:	add	w13, w16, w13
  40b308:	add	w13, w13, w22
  40b30c:	ror	w13, w13, #11
  40b310:	add	x0, x0, #0x40
  40b314:	add	w9, w9, w13
  40b318:	cmp	x0, x12
  40b31c:	add	w10, w15, w10
  40b320:	b.cc	40a978 <ferror@plt+0x7ae8>  // b.lo, b.ul, b.last
  40b324:	stp	w8, w9, [x2]
  40b328:	stp	w11, w10, [x2, #8]
  40b32c:	ldp	x20, x19, [sp, #80]
  40b330:	ldp	x22, x21, [sp, #64]
  40b334:	ldp	x24, x23, [sp, #48]
  40b338:	ldp	x26, x25, [sp, #32]
  40b33c:	ldp	x28, x27, [sp, #16]
  40b340:	ldp	x29, x30, [sp], #96
  40b344:	ret
  40b348:	sub	sp, sp, #0xe0
  40b34c:	stp	x22, x21, [sp, #192]
  40b350:	mov	x21, x0
  40b354:	mov	w0, #0x8048                	// #32840
  40b358:	stp	x29, x30, [sp, #160]
  40b35c:	str	x23, [sp, #176]
  40b360:	stp	x20, x19, [sp, #208]
  40b364:	add	x29, sp, #0xa0
  40b368:	mov	x19, x1
  40b36c:	bl	402930 <malloc@plt>
  40b370:	cbz	x0, 40b418 <ferror@plt+0x8588>
  40b374:	adrp	x8, 414000 <_obstack_memory_used@@Base+0x21b0>
  40b378:	ldr	q0, [x8, #3952]
  40b37c:	mov	x20, x0
  40b380:	mov	x22, xzr
  40b384:	mov	w23, #0x8000                	// #32768
  40b388:	str	xzr, [sp, #16]
  40b38c:	str	wzr, [sp, #24]
  40b390:	str	q0, [sp]
  40b394:	b	40b3ac <ferror@plt+0x851c>
  40b398:	mov	x2, sp
  40b39c:	mov	w1, #0x8000                	// #32768
  40b3a0:	mov	x0, x20
  40b3a4:	bl	40a924 <ferror@plt+0x7a94>
  40b3a8:	mov	x22, xzr
  40b3ac:	ldrb	w8, [x21]
  40b3b0:	tbnz	w8, #4, 40b3e0 <ferror@plt+0x8550>
  40b3b4:	add	x0, x20, x22
  40b3b8:	sub	x2, x23, x22
  40b3bc:	mov	w1, #0x1                   	// #1
  40b3c0:	mov	x3, x21
  40b3c4:	bl	402b50 <fread_unlocked@plt>
  40b3c8:	add	x22, x0, x22
  40b3cc:	cmp	x22, #0x8, lsl #12
  40b3d0:	b.eq	40b398 <ferror@plt+0x8508>  // b.none
  40b3d4:	cbnz	x0, 40b3ac <ferror@plt+0x851c>
  40b3d8:	ldrb	w8, [x21]
  40b3dc:	tbnz	w8, #5, 40b410 <ferror@plt+0x8580>
  40b3e0:	cbz	x22, 40b3f4 <ferror@plt+0x8564>
  40b3e4:	mov	x2, sp
  40b3e8:	mov	x0, x20
  40b3ec:	mov	x1, x22
  40b3f0:	bl	40b434 <ferror@plt+0x85a4>
  40b3f4:	mov	x0, sp
  40b3f8:	mov	x1, x19
  40b3fc:	bl	40a860 <ferror@plt+0x79d0>
  40b400:	mov	x0, x20
  40b404:	bl	402c00 <free@plt>
  40b408:	mov	w0, wzr
  40b40c:	b	40b41c <ferror@plt+0x858c>
  40b410:	mov	x0, x20
  40b414:	bl	402c00 <free@plt>
  40b418:	mov	w0, #0x1                   	// #1
  40b41c:	ldp	x20, x19, [sp, #208]
  40b420:	ldp	x22, x21, [sp, #192]
  40b424:	ldr	x23, [sp, #176]
  40b428:	ldp	x29, x30, [sp, #160]
  40b42c:	add	sp, sp, #0xe0
  40b430:	ret
  40b434:	stp	x29, x30, [sp, #-64]!
  40b438:	stp	x24, x23, [sp, #16]
  40b43c:	stp	x22, x21, [sp, #32]
  40b440:	stp	x20, x19, [sp, #48]
  40b444:	ldr	w24, [x2, #24]
  40b448:	mov	x19, x2
  40b44c:	mov	x20, x1
  40b450:	mov	x21, x0
  40b454:	mov	x29, sp
  40b458:	cbz	w24, 40b4cc <ferror@plt+0x863c>
  40b45c:	mov	w8, #0x80                  	// #128
  40b460:	sub	x8, x8, x24
  40b464:	cmp	x8, x20
  40b468:	add	x23, x19, #0x1c
  40b46c:	csel	x22, x20, x8, hi  // hi = pmore
  40b470:	add	x0, x23, x24
  40b474:	mov	x1, x21
  40b478:	mov	x2, x22
  40b47c:	bl	402760 <memcpy@plt>
  40b480:	ldr	w8, [x19, #24]
  40b484:	add	w8, w8, w22
  40b488:	cmp	w8, #0x41
  40b48c:	str	w8, [x19, #24]
  40b490:	b.cc	40b4c4 <ferror@plt+0x8634>  // b.lo, b.ul, b.last
  40b494:	and	w1, w8, #0xffffffc0
  40b498:	mov	x0, x23
  40b49c:	mov	x2, x19
  40b4a0:	bl	40a924 <ferror@plt+0x7a94>
  40b4a4:	ldr	w8, [x19, #24]
  40b4a8:	add	x9, x22, x24
  40b4ac:	and	x9, x9, #0xffffffffffffffc0
  40b4b0:	add	x1, x23, x9
  40b4b4:	and	x2, x8, #0x3f
  40b4b8:	mov	x0, x23
  40b4bc:	str	w2, [x19, #24]
  40b4c0:	bl	402760 <memcpy@plt>
  40b4c4:	add	x21, x21, x22
  40b4c8:	sub	x20, x20, x22
  40b4cc:	cmp	x20, #0x40
  40b4d0:	b.cc	40b544 <ferror@plt+0x86b4>  // b.lo, b.ul, b.last
  40b4d4:	tst	x21, #0x3
  40b4d8:	b.eq	40b528 <ferror@plt+0x8698>  // b.none
  40b4dc:	subs	x8, x20, #0x41
  40b4e0:	b.cc	40b54c <ferror@plt+0x86bc>  // b.lo, b.ul, b.last
  40b4e4:	add	x22, x19, #0x1c
  40b4e8:	and	x23, x8, #0xffffffffffffffc0
  40b4ec:	mov	x24, x20
  40b4f0:	ldp	q1, q0, [x21, #32]
  40b4f4:	ldp	q3, q2, [x21], #64
  40b4f8:	mov	w1, #0x40                  	// #64
  40b4fc:	mov	x0, x22
  40b500:	mov	x2, x19
  40b504:	stp	q1, q0, [x22, #32]
  40b508:	stp	q3, q2, [x22]
  40b50c:	bl	40a924 <ferror@plt+0x7a94>
  40b510:	sub	x24, x24, #0x40
  40b514:	cmp	x24, #0x40
  40b518:	b.hi	40b4f0 <ferror@plt+0x8660>  // b.pmore
  40b51c:	sub	x8, x20, x23
  40b520:	sub	x20, x8, #0x40
  40b524:	b	40b550 <ferror@plt+0x86c0>
  40b528:	and	x22, x20, #0xffffffffffffffc0
  40b52c:	mov	x0, x21
  40b530:	mov	x1, x22
  40b534:	mov	x2, x19
  40b538:	bl	40a924 <ferror@plt+0x7a94>
  40b53c:	add	x21, x21, x22
  40b540:	and	x20, x20, #0x3f
  40b544:	cbnz	x20, 40b550 <ferror@plt+0x86c0>
  40b548:	b	40b59c <ferror@plt+0x870c>
  40b54c:	mov	w20, #0x40                  	// #64
  40b550:	ldr	w23, [x19, #24]
  40b554:	add	x22, x19, #0x1c
  40b558:	mov	x1, x21
  40b55c:	mov	x2, x20
  40b560:	add	x0, x22, x23
  40b564:	bl	402760 <memcpy@plt>
  40b568:	add	x8, x20, x23
  40b56c:	subs	x20, x8, #0x40
  40b570:	b.cc	40b598 <ferror@plt+0x8708>  // b.lo, b.ul, b.last
  40b574:	mov	w1, #0x40                  	// #64
  40b578:	mov	x0, x22
  40b57c:	mov	x2, x19
  40b580:	bl	40a924 <ferror@plt+0x7a94>
  40b584:	add	x1, x19, #0x5c
  40b588:	mov	x0, x22
  40b58c:	mov	x2, x20
  40b590:	bl	402760 <memcpy@plt>
  40b594:	mov	x8, x20
  40b598:	str	w8, [x19, #24]
  40b59c:	ldp	x20, x19, [sp, #48]
  40b5a0:	ldp	x22, x21, [sp, #32]
  40b5a4:	ldp	x24, x23, [sp, #16]
  40b5a8:	ldp	x29, x30, [sp], #64
  40b5ac:	ret
  40b5b0:	sub	sp, sp, #0xc0
  40b5b4:	adrp	x8, 414000 <_obstack_memory_used@@Base+0x21b0>
  40b5b8:	ldr	q0, [x8, #3952]
  40b5bc:	str	x19, [sp, #176]
  40b5c0:	mov	x19, x2
  40b5c4:	mov	x2, sp
  40b5c8:	stp	x29, x30, [sp, #160]
  40b5cc:	add	x29, sp, #0xa0
  40b5d0:	str	xzr, [sp, #16]
  40b5d4:	str	q0, [sp]
  40b5d8:	str	wzr, [sp, #24]
  40b5dc:	bl	40b434 <ferror@plt+0x85a4>
  40b5e0:	mov	x0, sp
  40b5e4:	mov	x1, x19
  40b5e8:	bl	40a860 <ferror@plt+0x79d0>
  40b5ec:	ldr	x19, [sp, #176]
  40b5f0:	ldp	x29, x30, [sp, #160]
  40b5f4:	add	sp, sp, #0xc0
  40b5f8:	ret
  40b5fc:	b	402b10 <posix_fadvise@plt>
  40b600:	cbz	x0, 40b630 <ferror@plt+0x87a0>
  40b604:	stp	x29, x30, [sp, #-32]!
  40b608:	str	x19, [sp, #16]
  40b60c:	mov	x29, sp
  40b610:	mov	w19, w1
  40b614:	bl	4028d0 <fileno@plt>
  40b618:	mov	w3, w19
  40b61c:	ldr	x19, [sp, #16]
  40b620:	mov	x1, xzr
  40b624:	mov	x2, xzr
  40b628:	ldp	x29, x30, [sp], #32
  40b62c:	b	402b10 <posix_fadvise@plt>
  40b630:	ret
  40b634:	stp	x29, x30, [sp, #-80]!
  40b638:	stp	x26, x25, [sp, #16]
  40b63c:	stp	x24, x23, [sp, #32]
  40b640:	stp	x22, x21, [sp, #48]
  40b644:	stp	x20, x19, [sp, #64]
  40b648:	mov	x29, sp
  40b64c:	mov	x19, x1
  40b650:	mov	x21, x0
  40b654:	bl	402bb0 <strcmp@plt>
  40b658:	cbz	w0, 40b790 <ferror@plt+0x8900>
  40b65c:	ldrb	w24, [x21]
  40b660:	cbz	w24, 40b6d0 <ferror@plt+0x8840>
  40b664:	ldrb	w22, [x19]
  40b668:	cbz	w22, 40b78c <ferror@plt+0x88fc>
  40b66c:	mov	w20, w0
  40b670:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x21b0>
  40b674:	add	x0, x0, #0xfc1
  40b678:	mov	x1, x21
  40b67c:	bl	402bb0 <strcmp@plt>
  40b680:	cbz	w0, 40b6d0 <ferror@plt+0x8840>
  40b684:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x21b0>
  40b688:	add	x0, x0, #0xfc1
  40b68c:	mov	x1, x19
  40b690:	bl	402bb0 <strcmp@plt>
  40b694:	cbz	w0, 40b78c <ferror@plt+0x88fc>
  40b698:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x21b0>
  40b69c:	add	x0, x0, #0xfc0
  40b6a0:	mov	x1, x21
  40b6a4:	bl	402bb0 <strcmp@plt>
  40b6a8:	cbz	w0, 40b6d0 <ferror@plt+0x8840>
  40b6ac:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x21b0>
  40b6b0:	add	x0, x0, #0xfc0
  40b6b4:	mov	x1, x19
  40b6b8:	bl	402bb0 <strcmp@plt>
  40b6bc:	cbz	w0, 40b78c <ferror@plt+0x88fc>
  40b6c0:	cmp	w24, #0x2e
  40b6c4:	b.ne	40b6d8 <ferror@plt+0x8848>  // b.any
  40b6c8:	cmp	w22, #0x2e
  40b6cc:	b.eq	40b6d8 <ferror@plt+0x8848>  // b.none
  40b6d0:	mov	w0, #0xffffffff            	// #-1
  40b6d4:	b	40b790 <ferror@plt+0x8900>
  40b6d8:	cmp	w24, #0x2e
  40b6dc:	b.ne	40b784 <ferror@plt+0x88f4>  // b.any
  40b6e0:	cmp	w22, #0x2e
  40b6e4:	b.ne	40b9bc <ferror@plt+0x8b2c>  // b.any
  40b6e8:	ldrb	w24, [x21, #1]!
  40b6ec:	add	x19, x19, #0x1
  40b6f0:	cbnz	w24, 40b9c0 <ferror@plt+0x8b30>
  40b6f4:	mov	x22, xzr
  40b6f8:	mov	x23, x21
  40b6fc:	ldrb	w9, [x19]
  40b700:	cbz	w9, 40b7a8 <ferror@plt+0x8918>
  40b704:	mov	w8, wzr
  40b708:	mov	x25, xzr
  40b70c:	mov	w26, #0x1                   	// #1
  40b710:	mov	x24, x19
  40b714:	b	40b72c <ferror@plt+0x889c>
  40b718:	cmp	x25, #0x0
  40b71c:	csel	x25, x24, x25, eq  // eq = none
  40b720:	mov	w8, #0x1                   	// #1
  40b724:	ldrb	w9, [x24, #1]!
  40b728:	cbz	w9, 40b7b0 <ferror@plt+0x8920>
  40b72c:	tbz	w8, #0, 40b754 <ferror@plt+0x88c4>
  40b730:	and	w9, w9, #0xff
  40b734:	sub	w8, w9, #0x41
  40b738:	cmp	w8, #0x39
  40b73c:	b.hi	40b77c <ferror@plt+0x88ec>  // b.pmore
  40b740:	lsl	x8, x26, x8
  40b744:	tst	x8, #0x3ffffff03ffffff
  40b748:	b.eq	40b77c <ferror@plt+0x88ec>  // b.none
  40b74c:	mov	w8, wzr
  40b750:	b	40b724 <ferror@plt+0x8894>
  40b754:	and	w0, w9, #0xff
  40b758:	cmp	w0, #0x2e
  40b75c:	b.eq	40b718 <ferror@plt+0x8888>  // b.none
  40b760:	bl	411ec4 <_obstack_memory_used@@Base+0x74>
  40b764:	mov	w8, wzr
  40b768:	tbnz	w0, #0, 40b724 <ferror@plt+0x8894>
  40b76c:	ldrb	w9, [x24]
  40b770:	cmp	w9, #0x7e
  40b774:	csel	x25, x25, xzr, eq  // eq = none
  40b778:	b	40b724 <ferror@plt+0x8894>
  40b77c:	mov	w8, wzr
  40b780:	b	40b770 <ferror@plt+0x88e0>
  40b784:	cmp	w22, #0x2e
  40b788:	b.ne	40b9c0 <ferror@plt+0x8b30>  // b.any
  40b78c:	mov	w0, #0x1                   	// #1
  40b790:	ldp	x20, x19, [sp, #64]
  40b794:	ldp	x22, x21, [sp, #48]
  40b798:	ldp	x24, x23, [sp, #32]
  40b79c:	ldp	x26, x25, [sp, #16]
  40b7a0:	ldp	x29, x30, [sp], #80
  40b7a4:	ret
  40b7a8:	mov	x25, xzr
  40b7ac:	mov	x24, x19
  40b7b0:	cmp	x22, #0x0
  40b7b4:	csel	x8, x22, x23, ne  // ne = any
  40b7b8:	cmp	x25, #0x0
  40b7bc:	orr	x9, x22, x25
  40b7c0:	sub	x22, x8, x21
  40b7c4:	csel	x8, x25, x24, ne  // ne = any
  40b7c8:	sub	x8, x8, x19
  40b7cc:	cbz	x9, 40b7f8 <ferror@plt+0x8968>
  40b7d0:	cmp	x22, x8
  40b7d4:	b.ne	40b7f8 <ferror@plt+0x8968>  // b.any
  40b7d8:	mov	x0, x21
  40b7dc:	mov	x1, x19
  40b7e0:	mov	x2, x22
  40b7e4:	bl	402990 <strncmp@plt>
  40b7e8:	mov	x8, x22
  40b7ec:	cbnz	w0, 40b7f8 <ferror@plt+0x8968>
  40b7f0:	sub	x22, x23, x21
  40b7f4:	sub	x8, x24, x19
  40b7f8:	mov	x9, xzr
  40b7fc:	mov	x11, xzr
  40b800:	mov	w10, #0x1                   	// #1
  40b804:	cmp	x9, x8
  40b808:	b.cc	40b814 <ferror@plt+0x8984>  // b.lo, b.ul, b.last
  40b80c:	cmp	x11, x22
  40b810:	b.cs	40b9b4 <ferror@plt+0x8b24>  // b.hs, b.nlast
  40b814:	cmp	x11, x22
  40b818:	b.cs	40b82c <ferror@plt+0x899c>  // b.hs, b.nlast
  40b81c:	ldrb	w12, [x21, x11]
  40b820:	sub	w12, w12, #0x30
  40b824:	cmp	w12, #0x9
  40b828:	b.hi	40b844 <ferror@plt+0x89b4>  // b.pmore
  40b82c:	cmp	x9, x8
  40b830:	b.cs	40b910 <ferror@plt+0x8a80>  // b.hs, b.nlast
  40b834:	ldrb	w12, [x19, x9]
  40b838:	sub	w12, w12, #0x30
  40b83c:	cmp	w12, #0xa
  40b840:	b.cc	40b910 <ferror@plt+0x8a80>  // b.lo, b.ul, b.last
  40b844:	cmp	x22, x11
  40b848:	b.eq	40b85c <ferror@plt+0x89cc>  // b.none
  40b84c:	ldrb	w12, [x21, x11]
  40b850:	sub	w13, w12, #0x30
  40b854:	cmp	w13, #0xa
  40b858:	b.cs	40b86c <ferror@plt+0x89dc>  // b.hs, b.nlast
  40b85c:	mov	w12, wzr
  40b860:	cmp	x8, x9
  40b864:	b.eq	40b89c <ferror@plt+0x8a0c>  // b.none
  40b868:	b	40b88c <ferror@plt+0x89fc>
  40b86c:	sub	w13, w12, #0x41
  40b870:	cmp	w13, #0x39
  40b874:	b.hi	40b8e0 <ferror@plt+0x8a50>  // b.pmore
  40b878:	lsl	x13, x10, x13
  40b87c:	tst	x13, #0x3ffffff03ffffff
  40b880:	b.eq	40b8e0 <ferror@plt+0x8a50>  // b.none
  40b884:	cmp	x8, x9
  40b888:	b.eq	40b89c <ferror@plt+0x8a0c>  // b.none
  40b88c:	ldrb	w13, [x19, x9]
  40b890:	sub	w14, w13, #0x30
  40b894:	cmp	w14, #0xa
  40b898:	b.cs	40b8ac <ferror@plt+0x8a1c>  // b.hs, b.nlast
  40b89c:	mov	w13, wzr
  40b8a0:	subs	w0, w12, w13
  40b8a4:	b.eq	40b8cc <ferror@plt+0x8a3c>  // b.none
  40b8a8:	b	40b9b0 <ferror@plt+0x8b20>
  40b8ac:	sub	w14, w13, #0x41
  40b8b0:	cmp	w14, #0x39
  40b8b4:	b.hi	40b8f8 <ferror@plt+0x8a68>  // b.pmore
  40b8b8:	lsl	x14, x10, x14
  40b8bc:	tst	x14, #0x3ffffff03ffffff
  40b8c0:	b.eq	40b8f8 <ferror@plt+0x8a68>  // b.none
  40b8c4:	subs	w0, w12, w13
  40b8c8:	b.ne	40b9b0 <ferror@plt+0x8b20>  // b.any
  40b8cc:	add	x11, x11, #0x1
  40b8d0:	add	x9, x9, #0x1
  40b8d4:	cmp	x11, x22
  40b8d8:	b.cc	40b81c <ferror@plt+0x898c>  // b.lo, b.ul, b.last
  40b8dc:	b	40b82c <ferror@plt+0x899c>
  40b8e0:	orr	w13, w12, #0x100
  40b8e4:	cmp	w12, #0x7e
  40b8e8:	csinv	w12, w13, wzr, ne  // ne = any
  40b8ec:	cmp	x8, x9
  40b8f0:	b.eq	40b89c <ferror@plt+0x8a0c>  // b.none
  40b8f4:	b	40b88c <ferror@plt+0x89fc>
  40b8f8:	orr	w14, w13, #0x100
  40b8fc:	cmp	w13, #0x7e
  40b900:	csinv	w13, w14, wzr, ne  // ne = any
  40b904:	subs	w0, w12, w13
  40b908:	b.eq	40b8cc <ferror@plt+0x8a3c>  // b.none
  40b90c:	b	40b9b0 <ferror@plt+0x8b20>
  40b910:	mov	x12, x11
  40b914:	ldrb	w13, [x21, x12]
  40b918:	add	x12, x12, #0x1
  40b91c:	subs	w16, w13, #0x30
  40b920:	b.eq	40b914 <ferror@plt+0x8a84>  // b.none
  40b924:	sub	x11, x12, #0x1
  40b928:	ldrb	w15, [x19, x9]
  40b92c:	add	x9, x9, #0x1
  40b930:	subs	w14, w15, #0x30
  40b934:	b.eq	40b928 <ferror@plt+0x8a98>  // b.none
  40b938:	cmp	w14, #0xa
  40b93c:	cset	w14, cc  // cc = lo, ul, last
  40b940:	cmp	w16, #0x9
  40b944:	b.hi	40b99c <ferror@plt+0x8b0c>  // b.pmore
  40b948:	mov	x11, xzr
  40b94c:	mov	w0, wzr
  40b950:	add	x16, x21, x12
  40b954:	add	x17, x19, x9
  40b958:	tbz	w14, #0, 40b78c <ferror@plt+0x88fc>
  40b95c:	sub	w14, w13, w15
  40b960:	ldrb	w15, [x17, x11]
  40b964:	ldrb	w13, [x16, x11]
  40b968:	cmp	w0, #0x0
  40b96c:	csel	w0, w14, w0, eq  // eq = none
  40b970:	sub	w14, w15, #0x30
  40b974:	sub	w18, w13, #0x30
  40b978:	cmp	w14, #0xa
  40b97c:	cset	w14, cc  // cc = lo, ul, last
  40b980:	cmp	w18, #0xa
  40b984:	add	x11, x11, #0x1
  40b988:	b.cc	40b958 <ferror@plt+0x8ac8>  // b.lo, b.ul, b.last
  40b98c:	add	x12, x12, x11
  40b990:	add	x9, x9, x11
  40b994:	sub	x11, x12, #0x1
  40b998:	b	40b9a0 <ferror@plt+0x8b10>
  40b99c:	mov	w0, wzr
  40b9a0:	sub	x9, x9, #0x1
  40b9a4:	tbnz	w14, #0, 40b6d0 <ferror@plt+0x8840>
  40b9a8:	cbz	w0, 40b804 <ferror@plt+0x8974>
  40b9ac:	b	40b790 <ferror@plt+0x8900>
  40b9b0:	b.ne	40b790 <ferror@plt+0x8900>  // b.any
  40b9b4:	mov	w0, w20
  40b9b8:	b	40b790 <ferror@plt+0x8900>
  40b9bc:	mov	w24, #0x2e                  	// #46
  40b9c0:	mov	w8, wzr
  40b9c4:	mov	x22, xzr
  40b9c8:	mov	w25, #0x1                   	// #1
  40b9cc:	mov	x23, x21
  40b9d0:	b	40b9e8 <ferror@plt+0x8b58>
  40b9d4:	cmp	x22, #0x0
  40b9d8:	csel	x22, x23, x22, eq  // eq = none
  40b9dc:	mov	w8, #0x1                   	// #1
  40b9e0:	ldrb	w24, [x23, #1]!
  40b9e4:	cbz	w24, 40b6fc <ferror@plt+0x886c>
  40b9e8:	tbz	w8, #0, 40ba10 <ferror@plt+0x8b80>
  40b9ec:	and	w9, w24, #0xff
  40b9f0:	sub	w8, w9, #0x41
  40b9f4:	cmp	w8, #0x39
  40b9f8:	b.hi	40ba38 <ferror@plt+0x8ba8>  // b.pmore
  40b9fc:	lsl	x8, x25, x8
  40ba00:	tst	x8, #0x3ffffff03ffffff
  40ba04:	b.eq	40ba38 <ferror@plt+0x8ba8>  // b.none
  40ba08:	mov	w8, wzr
  40ba0c:	b	40b9e0 <ferror@plt+0x8b50>
  40ba10:	and	w0, w24, #0xff
  40ba14:	cmp	w0, #0x2e
  40ba18:	b.eq	40b9d4 <ferror@plt+0x8b44>  // b.none
  40ba1c:	bl	411ec4 <_obstack_memory_used@@Base+0x74>
  40ba20:	mov	w8, wzr
  40ba24:	tbnz	w0, #0, 40b9e0 <ferror@plt+0x8b50>
  40ba28:	ldrb	w9, [x23]
  40ba2c:	cmp	w9, #0x7e
  40ba30:	csel	x22, x22, xzr, eq  // eq = none
  40ba34:	b	40b9e0 <ferror@plt+0x8b50>
  40ba38:	mov	w8, wzr
  40ba3c:	b	40ba2c <ferror@plt+0x8b9c>
  40ba40:	stp	x29, x30, [sp, #-32]!
  40ba44:	mov	x1, xzr
  40ba48:	str	x19, [sp, #16]
  40ba4c:	mov	x29, sp
  40ba50:	bl	402e80 <setlocale@plt>
  40ba54:	cbz	x0, 40ba80 <ferror@plt+0x8bf0>
  40ba58:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  40ba5c:	add	x1, x1, #0x896
  40ba60:	mov	x19, x0
  40ba64:	bl	402bb0 <strcmp@plt>
  40ba68:	cbz	w0, 40ba88 <ferror@plt+0x8bf8>
  40ba6c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x21b0>
  40ba70:	add	x1, x1, #0xfc3
  40ba74:	mov	x0, x19
  40ba78:	bl	402bb0 <strcmp@plt>
  40ba7c:	cbz	w0, 40ba88 <ferror@plt+0x8bf8>
  40ba80:	mov	w0, #0x1                   	// #1
  40ba84:	b	40ba8c <ferror@plt+0x8bfc>
  40ba88:	mov	w0, wzr
  40ba8c:	ldr	x19, [sp, #16]
  40ba90:	ldp	x29, x30, [sp], #32
  40ba94:	ret
  40ba98:	ldr	x0, [x0, #16]
  40ba9c:	ret
  40baa0:	ldr	x0, [x0, #24]
  40baa4:	ret
  40baa8:	ldr	x0, [x0, #32]
  40baac:	ret
  40bab0:	ldp	x8, x9, [x0]
  40bab4:	cmp	x8, x9
  40bab8:	b.cs	40baf8 <ferror@plt+0x8c68>  // b.hs, b.nlast
  40babc:	mov	x0, xzr
  40bac0:	b	40bad0 <ferror@plt+0x8c40>
  40bac4:	add	x8, x8, #0x10
  40bac8:	cmp	x8, x9
  40bacc:	b.cs	40bafc <ferror@plt+0x8c6c>  // b.hs, b.nlast
  40bad0:	ldr	x10, [x8]
  40bad4:	cbz	x10, 40bac4 <ferror@plt+0x8c34>
  40bad8:	mov	x10, xzr
  40badc:	mov	x11, x8
  40bae0:	ldr	x11, [x11, #8]
  40bae4:	add	x10, x10, #0x1
  40bae8:	cbnz	x11, 40bae0 <ferror@plt+0x8c50>
  40baec:	cmp	x10, x0
  40baf0:	csel	x0, x10, x0, hi  // hi = pmore
  40baf4:	b	40bac4 <ferror@plt+0x8c34>
  40baf8:	mov	x0, xzr
  40bafc:	ret
  40bb00:	ldp	x9, x10, [x0]
  40bb04:	cmp	x9, x10
  40bb08:	b.cs	40bb44 <ferror@plt+0x8cb4>  // b.hs, b.nlast
  40bb0c:	mov	x8, xzr
  40bb10:	mov	x11, xzr
  40bb14:	b	40bb24 <ferror@plt+0x8c94>
  40bb18:	add	x9, x9, #0x10
  40bb1c:	cmp	x9, x10
  40bb20:	b.cs	40bb4c <ferror@plt+0x8cbc>  // b.hs, b.nlast
  40bb24:	ldr	x12, [x9]
  40bb28:	cbz	x12, 40bb18 <ferror@plt+0x8c88>
  40bb2c:	mov	x12, x9
  40bb30:	ldr	x12, [x12, #8]
  40bb34:	add	x8, x8, #0x1
  40bb38:	cbnz	x12, 40bb30 <ferror@plt+0x8ca0>
  40bb3c:	add	x11, x11, #0x1
  40bb40:	b	40bb18 <ferror@plt+0x8c88>
  40bb44:	mov	x11, xzr
  40bb48:	mov	x8, xzr
  40bb4c:	ldr	x9, [x0, #24]
  40bb50:	cmp	x11, x9
  40bb54:	b.ne	40bb6c <ferror@plt+0x8cdc>  // b.any
  40bb58:	ldr	x9, [x0, #32]
  40bb5c:	cmp	x8, x9
  40bb60:	b.ne	40bb6c <ferror@plt+0x8cdc>  // b.any
  40bb64:	mov	w0, #0x1                   	// #1
  40bb68:	ret
  40bb6c:	mov	w0, wzr
  40bb70:	ret
  40bb74:	stp	x29, x30, [sp, #-48]!
  40bb78:	stp	x22, x21, [sp, #16]
  40bb7c:	stp	x20, x19, [sp, #32]
  40bb80:	ldp	x8, x9, [x0]
  40bb84:	ldp	x20, x3, [x0, #24]
  40bb88:	ldr	x22, [x0, #16]
  40bb8c:	mov	x19, x1
  40bb90:	cmp	x8, x9
  40bb94:	mov	x21, xzr
  40bb98:	mov	x29, sp
  40bb9c:	b.cc	40bc2c <ferror@plt+0x8d9c>  // b.lo, b.ul, b.last
  40bba0:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x21b0>
  40bba4:	add	x2, x2, #0xfc9
  40bba8:	mov	w1, #0x1                   	// #1
  40bbac:	mov	x0, x19
  40bbb0:	bl	402b90 <__fprintf_chk@plt>
  40bbb4:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x21b0>
  40bbb8:	add	x2, x2, #0xfe1
  40bbbc:	mov	w1, #0x1                   	// #1
  40bbc0:	mov	x0, x19
  40bbc4:	mov	x3, x22
  40bbc8:	bl	402b90 <__fprintf_chk@plt>
  40bbcc:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  40bbd0:	ucvtf	d0, x20
  40bbd4:	fmov	d1, x8
  40bbd8:	fmul	d0, d0, d1
  40bbdc:	ucvtf	d1, x22
  40bbe0:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x21b0>
  40bbe4:	fdiv	d0, d0, d1
  40bbe8:	add	x2, x2, #0xff9
  40bbec:	mov	w1, #0x1                   	// #1
  40bbf0:	mov	x0, x19
  40bbf4:	mov	x3, x20
  40bbf8:	bl	402b90 <__fprintf_chk@plt>
  40bbfc:	mov	x0, x19
  40bc00:	mov	x3, x21
  40bc04:	ldp	x20, x19, [sp, #32]
  40bc08:	ldp	x22, x21, [sp, #16]
  40bc0c:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x31b0>
  40bc10:	add	x2, x2, #0x1a
  40bc14:	mov	w1, #0x1                   	// #1
  40bc18:	ldp	x29, x30, [sp], #48
  40bc1c:	b	402b90 <__fprintf_chk@plt>
  40bc20:	add	x8, x8, #0x10
  40bc24:	cmp	x8, x9
  40bc28:	b.cs	40bba0 <ferror@plt+0x8d10>  // b.hs, b.nlast
  40bc2c:	ldr	x10, [x8]
  40bc30:	cbz	x10, 40bc20 <ferror@plt+0x8d90>
  40bc34:	mov	x10, xzr
  40bc38:	mov	x11, x8
  40bc3c:	ldr	x11, [x11, #8]
  40bc40:	add	x10, x10, #0x1
  40bc44:	cbnz	x11, 40bc3c <ferror@plt+0x8dac>
  40bc48:	cmp	x10, x21
  40bc4c:	csel	x21, x10, x21, hi  // hi = pmore
  40bc50:	b	40bc20 <ferror@plt+0x8d90>
  40bc54:	stp	x29, x30, [sp, #-48]!
  40bc58:	stp	x20, x19, [sp, #32]
  40bc5c:	ldr	x8, [x0, #16]
  40bc60:	ldr	x9, [x0, #48]
  40bc64:	mov	x19, x0
  40bc68:	mov	x20, x1
  40bc6c:	mov	x0, x1
  40bc70:	mov	x1, x8
  40bc74:	str	x21, [sp, #16]
  40bc78:	mov	x29, sp
  40bc7c:	blr	x9
  40bc80:	ldr	x8, [x19, #16]
  40bc84:	cmp	x0, x8
  40bc88:	b.cs	40bcf4 <ferror@plt+0x8e64>  // b.hs, b.nlast
  40bc8c:	ldr	x8, [x19]
  40bc90:	add	x21, x8, x0, lsl #4
  40bc94:	ldr	x1, [x21]
  40bc98:	mov	x0, xzr
  40bc9c:	cbz	x1, 40bce4 <ferror@plt+0x8e54>
  40bca0:	cbz	x8, 40bce4 <ferror@plt+0x8e54>
  40bca4:	cmp	x1, x20
  40bca8:	b.eq	40bcd0 <ferror@plt+0x8e40>  // b.none
  40bcac:	ldr	x8, [x19, #56]
  40bcb0:	mov	x0, x20
  40bcb4:	blr	x8
  40bcb8:	tbnz	w0, #0, 40bcd8 <ferror@plt+0x8e48>
  40bcbc:	ldr	x21, [x21, #8]
  40bcc0:	cbz	x21, 40bce0 <ferror@plt+0x8e50>
  40bcc4:	ldr	x1, [x21]
  40bcc8:	cmp	x1, x20
  40bccc:	b.ne	40bcac <ferror@plt+0x8e1c>  // b.any
  40bcd0:	mov	x0, x20
  40bcd4:	b	40bce4 <ferror@plt+0x8e54>
  40bcd8:	ldr	x0, [x21]
  40bcdc:	b	40bce4 <ferror@plt+0x8e54>
  40bce0:	mov	x0, xzr
  40bce4:	ldp	x20, x19, [sp, #32]
  40bce8:	ldr	x21, [sp, #16]
  40bcec:	ldp	x29, x30, [sp], #48
  40bcf0:	ret
  40bcf4:	bl	402ae0 <abort@plt>
  40bcf8:	stp	x29, x30, [sp, #-16]!
  40bcfc:	ldr	x8, [x0, #32]
  40bd00:	mov	x29, sp
  40bd04:	cbz	x8, 40bd24 <ferror@plt+0x8e94>
  40bd08:	ldp	x8, x9, [x0]
  40bd0c:	cmp	x8, x9
  40bd10:	b.cs	40bd30 <ferror@plt+0x8ea0>  // b.hs, b.nlast
  40bd14:	ldr	x0, [x8], #16
  40bd18:	cbz	x0, 40bd0c <ferror@plt+0x8e7c>
  40bd1c:	ldp	x29, x30, [sp], #16
  40bd20:	ret
  40bd24:	mov	x0, xzr
  40bd28:	ldp	x29, x30, [sp], #16
  40bd2c:	ret
  40bd30:	bl	402ae0 <abort@plt>
  40bd34:	stp	x29, x30, [sp, #-32]!
  40bd38:	stp	x20, x19, [sp, #16]
  40bd3c:	ldr	x8, [x0, #16]
  40bd40:	ldr	x9, [x0, #48]
  40bd44:	mov	x19, x0
  40bd48:	mov	x20, x1
  40bd4c:	mov	x0, x1
  40bd50:	mov	x1, x8
  40bd54:	mov	x29, sp
  40bd58:	blr	x9
  40bd5c:	ldr	x8, [x19, #16]
  40bd60:	cmp	x0, x8
  40bd64:	b.cs	40bdc0 <ferror@plt+0x8f30>  // b.hs, b.nlast
  40bd68:	ldr	x8, [x19]
  40bd6c:	add	x9, x8, x0, lsl #4
  40bd70:	ldp	x10, x9, [x9]
  40bd74:	cmp	x10, x20
  40bd78:	b.eq	40bd84 <ferror@plt+0x8ef4>  // b.none
  40bd7c:	cbnz	x9, 40bd70 <ferror@plt+0x8ee0>
  40bd80:	b	40bd90 <ferror@plt+0x8f00>
  40bd84:	cbz	x9, 40bd90 <ferror@plt+0x8f00>
  40bd88:	ldr	x0, [x9]
  40bd8c:	b	40bdb4 <ferror@plt+0x8f24>
  40bd90:	ldr	x9, [x19, #8]
  40bd94:	add	x8, x8, x0, lsl #4
  40bd98:	add	x8, x8, #0x10
  40bd9c:	cmp	x8, x9
  40bda0:	b.cs	40bdb0 <ferror@plt+0x8f20>  // b.hs, b.nlast
  40bda4:	ldr	x0, [x8], #16
  40bda8:	cbz	x0, 40bd9c <ferror@plt+0x8f0c>
  40bdac:	b	40bdb4 <ferror@plt+0x8f24>
  40bdb0:	mov	x0, xzr
  40bdb4:	ldp	x20, x19, [sp, #16]
  40bdb8:	ldp	x29, x30, [sp], #32
  40bdbc:	ret
  40bdc0:	bl	402ae0 <abort@plt>
  40bdc4:	ldp	x9, x10, [x0]
  40bdc8:	cmp	x9, x10
  40bdcc:	b.cs	40be28 <ferror@plt+0x8f98>  // b.hs, b.nlast
  40bdd0:	mov	x11, xzr
  40bdd4:	ldr	x8, [x9]
  40bdd8:	cbz	x8, 40be0c <ferror@plt+0x8f7c>
  40bddc:	cbz	x9, 40be0c <ferror@plt+0x8f7c>
  40bde0:	mov	x10, x9
  40bde4:	cmp	x11, x2
  40bde8:	b.cs	40be30 <ferror@plt+0x8fa0>  // b.hs, b.nlast
  40bdec:	ldr	x8, [x10]
  40bdf0:	str	x8, [x1, x11, lsl #3]
  40bdf4:	ldr	x10, [x10, #8]
  40bdf8:	add	x8, x11, #0x1
  40bdfc:	mov	x11, x8
  40be00:	cbnz	x10, 40bde4 <ferror@plt+0x8f54>
  40be04:	ldr	x10, [x0, #8]
  40be08:	b	40be10 <ferror@plt+0x8f80>
  40be0c:	mov	x8, x11
  40be10:	add	x9, x9, #0x10
  40be14:	cmp	x9, x10
  40be18:	mov	x11, x8
  40be1c:	b.cc	40bdd4 <ferror@plt+0x8f44>  // b.lo, b.ul, b.last
  40be20:	mov	x0, x8
  40be24:	ret
  40be28:	mov	x0, xzr
  40be2c:	ret
  40be30:	mov	x0, x11
  40be34:	ret
  40be38:	stp	x29, x30, [sp, #-64]!
  40be3c:	stp	x24, x23, [sp, #16]
  40be40:	stp	x22, x21, [sp, #32]
  40be44:	stp	x20, x19, [sp, #48]
  40be48:	ldp	x23, x8, [x0]
  40be4c:	mov	x29, sp
  40be50:	cmp	x23, x8
  40be54:	b.cs	40be6c <ferror@plt+0x8fdc>  // b.hs, b.nlast
  40be58:	mov	x19, x2
  40be5c:	mov	x20, x0
  40be60:	mov	x21, x1
  40be64:	mov	x22, xzr
  40be68:	b	40be84 <ferror@plt+0x8ff4>
  40be6c:	mov	x22, xzr
  40be70:	b	40bebc <ferror@plt+0x902c>
  40be74:	ldr	x8, [x20, #8]
  40be78:	add	x23, x23, #0x10
  40be7c:	cmp	x23, x8
  40be80:	b.cs	40bebc <ferror@plt+0x902c>  // b.hs, b.nlast
  40be84:	ldr	x0, [x23]
  40be88:	cbz	x0, 40be78 <ferror@plt+0x8fe8>
  40be8c:	cbz	x23, 40be78 <ferror@plt+0x8fe8>
  40be90:	mov	x1, x19
  40be94:	blr	x21
  40be98:	tbz	w0, #0, 40bebc <ferror@plt+0x902c>
  40be9c:	mov	x24, x23
  40bea0:	ldr	x24, [x24, #8]
  40bea4:	add	x22, x22, #0x1
  40bea8:	cbz	x24, 40be74 <ferror@plt+0x8fe4>
  40beac:	ldr	x0, [x24]
  40beb0:	mov	x1, x19
  40beb4:	blr	x21
  40beb8:	tbnz	w0, #0, 40bea0 <ferror@plt+0x9010>
  40bebc:	mov	x0, x22
  40bec0:	ldp	x20, x19, [sp, #48]
  40bec4:	ldp	x22, x21, [sp, #32]
  40bec8:	ldp	x24, x23, [sp, #16]
  40becc:	ldp	x29, x30, [sp], #64
  40bed0:	ret
  40bed4:	ldrb	w9, [x0]
  40bed8:	cbz	w9, 40bf08 <ferror@plt+0x9078>
  40bedc:	mov	x8, x0
  40bee0:	mov	x0, xzr
  40bee4:	add	x8, x8, #0x1
  40bee8:	lsl	x10, x0, #5
  40beec:	sub	x10, x10, x0
  40bef0:	add	x10, x10, w9, uxtb
  40bef4:	ldrb	w9, [x8], #1
  40bef8:	udiv	x11, x10, x1
  40befc:	msub	x0, x11, x1, x10
  40bf00:	cbnz	w9, 40bee8 <ferror@plt+0x9058>
  40bf04:	ret
  40bf08:	mov	x0, xzr
  40bf0c:	ret
  40bf10:	adrp	x8, 415000 <_obstack_memory_used@@Base+0x31b0>
  40bf14:	add	x8, x8, #0x34
  40bf18:	ldr	w9, [x8, #16]
  40bf1c:	ldr	q0, [x8]
  40bf20:	str	w9, [x0, #16]
  40bf24:	str	q0, [x0]
  40bf28:	ret
  40bf2c:	stp	x29, x30, [sp, #-64]!
  40bf30:	adrp	x8, 40c000 <ferror@plt+0x9170>
  40bf34:	add	x8, x8, #0x114
  40bf38:	cmp	x2, #0x0
  40bf3c:	adrp	x9, 40c000 <ferror@plt+0x9170>
  40bf40:	stp	x24, x23, [sp, #16]
  40bf44:	stp	x22, x21, [sp, #32]
  40bf48:	mov	x21, x0
  40bf4c:	add	x9, x9, #0x124
  40bf50:	csel	x23, x8, x2, eq  // eq = none
  40bf54:	cmp	x3, #0x0
  40bf58:	mov	w0, #0x50                  	// #80
  40bf5c:	stp	x20, x19, [sp, #48]
  40bf60:	mov	x29, sp
  40bf64:	mov	x19, x4
  40bf68:	mov	x22, x1
  40bf6c:	csel	x24, x9, x3, eq  // eq = none
  40bf70:	bl	402930 <malloc@plt>
  40bf74:	mov	x20, x0
  40bf78:	cbz	x0, 40c0fc <ferror@plt+0x926c>
  40bf7c:	adrp	x9, 415000 <_obstack_memory_used@@Base+0x31b0>
  40bf80:	add	x9, x9, #0x34
  40bf84:	cmp	x22, #0x0
  40bf88:	csel	x8, x9, x22, eq  // eq = none
  40bf8c:	cmp	x8, x9
  40bf90:	str	x8, [x20, #40]
  40bf94:	b.eq	40c018 <ferror@plt+0x9188>  // b.none
  40bf98:	ldr	s0, [x8, #8]
  40bf9c:	mov	w9, #0xcccd                	// #52429
  40bfa0:	movk	w9, #0x3dcc, lsl #16
  40bfa4:	fmov	s1, w9
  40bfa8:	fcmp	s0, s1
  40bfac:	b.le	40c0f0 <ferror@plt+0x9260>
  40bfb0:	mov	w9, #0x6666                	// #26214
  40bfb4:	movk	w9, #0x3f66, lsl #16
  40bfb8:	fmov	s1, w9
  40bfbc:	fcmp	s0, s1
  40bfc0:	b.pl	40c0f0 <ferror@plt+0x9260>  // b.nfrst
  40bfc4:	ldr	s1, [x8, #12]
  40bfc8:	mov	w9, #0xcccd                	// #52429
  40bfcc:	movk	w9, #0x3f8c, lsl #16
  40bfd0:	fmov	s2, w9
  40bfd4:	fcmp	s1, s2
  40bfd8:	b.le	40c0f0 <ferror@plt+0x9260>
  40bfdc:	ldr	s1, [x8]
  40bfe0:	fcmp	s1, #0.0
  40bfe4:	b.lt	40c0f0 <ferror@plt+0x9260>  // b.tstop
  40bfe8:	mov	w9, #0xcccd                	// #52429
  40bfec:	movk	w9, #0x3dcc, lsl #16
  40bff0:	fmov	s2, w9
  40bff4:	fadd	s1, s1, s2
  40bff8:	fcmp	s1, s0
  40bffc:	b.pl	40c0f0 <ferror@plt+0x9260>  // b.nfrst
  40c000:	ldr	s0, [x8, #4]
  40c004:	fmov	s2, #1.000000000000000000e+00
  40c008:	fcmp	s0, s2
  40c00c:	b.hi	40c0f0 <ferror@plt+0x9260>  // b.pmore
  40c010:	fcmp	s1, s0
  40c014:	b.pl	40c0f0 <ferror@plt+0x9260>  // b.nfrst
  40c018:	ldrb	w9, [x8, #16]
  40c01c:	cbnz	w9, 40c040 <ferror@plt+0x91b0>
  40c020:	ldr	s0, [x8, #8]
  40c024:	ucvtf	s1, x21
  40c028:	mov	w8, #0x5f800000            	// #1602224128
  40c02c:	fdiv	s0, s1, s0
  40c030:	fmov	s1, w8
  40c034:	fcmp	s0, s1
  40c038:	b.ge	40c0f0 <ferror@plt+0x9260>  // b.tcont
  40c03c:	fcvtzu	x21, s0
  40c040:	cmp	x21, #0xa
  40c044:	mov	w8, #0xa                   	// #10
  40c048:	csel	x8, x21, x8, hi  // hi = pmore
  40c04c:	orr	x21, x8, #0x1
  40c050:	cmn	x21, #0x1
  40c054:	b.eq	40c0f0 <ferror@plt+0x9260>  // b.none
  40c058:	cmp	x21, #0xa
  40c05c:	b.cc	40c094 <ferror@plt+0x9204>  // b.lo, b.ul, b.last
  40c060:	mov	w9, #0xc                   	// #12
  40c064:	mov	w10, #0x9                   	// #9
  40c068:	mov	w8, #0x3                   	// #3
  40c06c:	udiv	x11, x21, x8
  40c070:	msub	x11, x11, x8, x21
  40c074:	cbz	x11, 40c098 <ferror@plt+0x9208>
  40c078:	add	x10, x10, x9
  40c07c:	add	x10, x10, #0x4
  40c080:	add	x8, x8, #0x2
  40c084:	cmp	x10, x21
  40c088:	add	x9, x9, #0x8
  40c08c:	b.cc	40c06c <ferror@plt+0x91dc>  // b.lo, b.ul, b.last
  40c090:	b	40c098 <ferror@plt+0x9208>
  40c094:	mov	w8, #0x3                   	// #3
  40c098:	udiv	x9, x21, x8
  40c09c:	msub	x8, x9, x8, x21
  40c0a0:	cbnz	x8, 40c0b4 <ferror@plt+0x9224>
  40c0a4:	add	x21, x21, #0x2
  40c0a8:	cmn	x21, #0x1
  40c0ac:	b.ne	40c058 <ferror@plt+0x91c8>  // b.any
  40c0b0:	b	40c0f0 <ferror@plt+0x9260>
  40c0b4:	lsr	x8, x21, #60
  40c0b8:	cbnz	x8, 40c0f0 <ferror@plt+0x9260>
  40c0bc:	str	x21, [x20, #16]
  40c0c0:	cbz	x21, 40c0f0 <ferror@plt+0x9260>
  40c0c4:	mov	w1, #0x10                  	// #16
  40c0c8:	mov	x0, x21
  40c0cc:	bl	411554 <ferror@plt+0xe6c4>
  40c0d0:	str	x0, [x20]
  40c0d4:	cbz	x0, 40c0f0 <ferror@plt+0x9260>
  40c0d8:	add	x8, x0, x21, lsl #4
  40c0dc:	stp	xzr, xzr, [x20, #24]
  40c0e0:	stp	x23, x24, [x20, #48]
  40c0e4:	str	x8, [x20, #8]
  40c0e8:	stp	x19, xzr, [x20, #64]
  40c0ec:	b	40c0fc <ferror@plt+0x926c>
  40c0f0:	mov	x0, x20
  40c0f4:	bl	402c00 <free@plt>
  40c0f8:	mov	x20, xzr
  40c0fc:	mov	x0, x20
  40c100:	ldp	x20, x19, [sp, #48]
  40c104:	ldp	x22, x21, [sp, #32]
  40c108:	ldp	x24, x23, [sp, #16]
  40c10c:	ldp	x29, x30, [sp], #64
  40c110:	ret
  40c114:	ror	x8, x0, #3
  40c118:	udiv	x9, x8, x1
  40c11c:	msub	x0, x9, x1, x8
  40c120:	ret
  40c124:	cmp	x0, x1
  40c128:	cset	w0, eq  // eq = none
  40c12c:	ret
  40c130:	stp	x29, x30, [sp, #-48]!
  40c134:	str	x21, [sp, #16]
  40c138:	stp	x20, x19, [sp, #32]
  40c13c:	ldp	x20, x8, [x0]
  40c140:	mov	x19, x0
  40c144:	mov	x29, sp
  40c148:	b	40c158 <ferror@plt+0x92c8>
  40c14c:	stp	xzr, xzr, [x20]
  40c150:	ldr	x8, [x19, #8]
  40c154:	add	x20, x20, #0x10
  40c158:	cmp	x20, x8
  40c15c:	b.cs	40c1c4 <ferror@plt+0x9334>  // b.hs, b.nlast
  40c160:	ldr	x9, [x20]
  40c164:	cbz	x9, 40c154 <ferror@plt+0x92c4>
  40c168:	ldr	x8, [x19, #64]
  40c16c:	ldr	x21, [x20, #8]
  40c170:	cmp	x8, #0x0
  40c174:	cset	w9, ne  // ne = any
  40c178:	cbnz	x21, 40c1b0 <ferror@plt+0x9320>
  40c17c:	cbz	w9, 40c14c <ferror@plt+0x92bc>
  40c180:	ldr	x0, [x20]
  40c184:	blr	x8
  40c188:	b	40c14c <ferror@plt+0x92bc>
  40c18c:	str	xzr, [x21]
  40c190:	ldr	x9, [x19, #72]
  40c194:	ldr	x10, [x21, #8]
  40c198:	cmp	x8, #0x0
  40c19c:	str	x9, [x21, #8]
  40c1a0:	str	x21, [x19, #72]
  40c1a4:	cset	w9, ne  // ne = any
  40c1a8:	mov	x21, x10
  40c1ac:	cbz	x10, 40c17c <ferror@plt+0x92ec>
  40c1b0:	tbz	w9, #0, 40c18c <ferror@plt+0x92fc>
  40c1b4:	ldr	x0, [x21]
  40c1b8:	blr	x8
  40c1bc:	ldr	x8, [x19, #64]
  40c1c0:	b	40c18c <ferror@plt+0x92fc>
  40c1c4:	stp	xzr, xzr, [x19, #24]
  40c1c8:	ldp	x20, x19, [sp, #32]
  40c1cc:	ldr	x21, [sp, #16]
  40c1d0:	ldp	x29, x30, [sp], #48
  40c1d4:	ret
  40c1d8:	stp	x29, x30, [sp, #-48]!
  40c1dc:	stp	x20, x19, [sp, #32]
  40c1e0:	ldr	x8, [x0, #64]
  40c1e4:	mov	x19, x0
  40c1e8:	str	x21, [sp, #16]
  40c1ec:	mov	x29, sp
  40c1f0:	cbz	x8, 40c248 <ferror@plt+0x93b8>
  40c1f4:	ldr	x8, [x19, #32]
  40c1f8:	cbz	x8, 40c248 <ferror@plt+0x93b8>
  40c1fc:	ldp	x20, x8, [x19]
  40c200:	b	40c20c <ferror@plt+0x937c>
  40c204:	ldr	x8, [x19, #8]
  40c208:	add	x20, x20, #0x10
  40c20c:	cmp	x20, x8
  40c210:	b.cs	40c248 <ferror@plt+0x93b8>  // b.hs, b.nlast
  40c214:	ldr	x0, [x20]
  40c218:	cbz	x0, 40c208 <ferror@plt+0x9378>
  40c21c:	cbz	x20, 40c208 <ferror@plt+0x9378>
  40c220:	ldr	x8, [x19, #64]
  40c224:	blr	x8
  40c228:	ldr	x21, [x20, #8]
  40c22c:	cbz	x21, 40c204 <ferror@plt+0x9374>
  40c230:	ldr	x0, [x21]
  40c234:	ldr	x8, [x19, #64]
  40c238:	blr	x8
  40c23c:	ldr	x21, [x21, #8]
  40c240:	cbnz	x21, 40c230 <ferror@plt+0x93a0>
  40c244:	b	40c204 <ferror@plt+0x9374>
  40c248:	ldp	x20, x8, [x19]
  40c24c:	b	40c254 <ferror@plt+0x93c4>
  40c250:	add	x20, x20, #0x10
  40c254:	cmp	x20, x8
  40c258:	b.cs	40c27c <ferror@plt+0x93ec>  // b.hs, b.nlast
  40c25c:	ldr	x0, [x20, #8]
  40c260:	cbz	x0, 40c250 <ferror@plt+0x93c0>
  40c264:	ldr	x21, [x0, #8]
  40c268:	bl	402c00 <free@plt>
  40c26c:	mov	x0, x21
  40c270:	cbnz	x21, 40c264 <ferror@plt+0x93d4>
  40c274:	ldr	x8, [x19, #8]
  40c278:	b	40c250 <ferror@plt+0x93c0>
  40c27c:	ldr	x0, [x19, #72]
  40c280:	cbz	x0, 40c294 <ferror@plt+0x9404>
  40c284:	ldr	x20, [x0, #8]
  40c288:	bl	402c00 <free@plt>
  40c28c:	mov	x0, x20
  40c290:	cbnz	x20, 40c284 <ferror@plt+0x93f4>
  40c294:	ldr	x0, [x19]
  40c298:	bl	402c00 <free@plt>
  40c29c:	mov	x0, x19
  40c2a0:	ldp	x20, x19, [sp, #32]
  40c2a4:	ldr	x21, [sp, #16]
  40c2a8:	ldp	x29, x30, [sp], #48
  40c2ac:	b	402c00 <free@plt>
  40c2b0:	sub	sp, sp, #0x90
  40c2b4:	stp	x29, x30, [sp, #80]
  40c2b8:	stp	x24, x23, [sp, #96]
  40c2bc:	stp	x22, x21, [sp, #112]
  40c2c0:	stp	x20, x19, [sp, #128]
  40c2c4:	ldr	x8, [x0, #40]
  40c2c8:	mov	x19, x0
  40c2cc:	add	x29, sp, #0x50
  40c2d0:	ldrb	w9, [x8, #16]
  40c2d4:	cbnz	w9, 40c2f8 <ferror@plt+0x9468>
  40c2d8:	ldr	s0, [x8, #8]
  40c2dc:	ucvtf	s1, x1
  40c2e0:	mov	w8, #0x5f800000            	// #1602224128
  40c2e4:	fdiv	s0, s1, s0
  40c2e8:	fmov	s1, w8
  40c2ec:	fcmp	s0, s1
  40c2f0:	b.ge	40c37c <ferror@plt+0x94ec>  // b.tcont
  40c2f4:	fcvtzu	x1, s0
  40c2f8:	cmp	x1, #0xa
  40c2fc:	mov	w8, #0xa                   	// #10
  40c300:	csel	x8, x1, x8, hi  // hi = pmore
  40c304:	orr	x20, x8, #0x1
  40c308:	cmn	x20, #0x1
  40c30c:	b.eq	40c37c <ferror@plt+0x94ec>  // b.none
  40c310:	cmp	x20, #0xa
  40c314:	b.cc	40c34c <ferror@plt+0x94bc>  // b.lo, b.ul, b.last
  40c318:	mov	w9, #0xc                   	// #12
  40c31c:	mov	w10, #0x9                   	// #9
  40c320:	mov	w8, #0x3                   	// #3
  40c324:	udiv	x11, x20, x8
  40c328:	msub	x11, x11, x8, x20
  40c32c:	cbz	x11, 40c350 <ferror@plt+0x94c0>
  40c330:	add	x10, x10, x9
  40c334:	add	x10, x10, #0x4
  40c338:	add	x8, x8, #0x2
  40c33c:	cmp	x10, x20
  40c340:	add	x9, x9, #0x8
  40c344:	b.cc	40c324 <ferror@plt+0x9494>  // b.lo, b.ul, b.last
  40c348:	b	40c350 <ferror@plt+0x94c0>
  40c34c:	mov	w8, #0x3                   	// #3
  40c350:	udiv	x9, x20, x8
  40c354:	msub	x8, x9, x8, x20
  40c358:	cbnz	x8, 40c36c <ferror@plt+0x94dc>
  40c35c:	add	x20, x20, #0x2
  40c360:	cmn	x20, #0x1
  40c364:	b.ne	40c310 <ferror@plt+0x9480>  // b.any
  40c368:	b	40c37c <ferror@plt+0x94ec>
  40c36c:	sub	x8, x20, #0x1
  40c370:	mov	x9, #0xffffffffffffffe     	// #1152921504606846974
  40c374:	cmp	x8, x9
  40c378:	b.ls	40c398 <ferror@plt+0x9508>  // b.plast
  40c37c:	mov	w0, wzr
  40c380:	ldp	x20, x19, [sp, #128]
  40c384:	ldp	x22, x21, [sp, #112]
  40c388:	ldp	x24, x23, [sp, #96]
  40c38c:	ldp	x29, x30, [sp, #80]
  40c390:	add	sp, sp, #0x90
  40c394:	ret
  40c398:	ldr	x8, [x19, #16]
  40c39c:	cmp	x20, x8
  40c3a0:	b.ne	40c3ac <ferror@plt+0x951c>  // b.any
  40c3a4:	mov	w0, #0x1                   	// #1
  40c3a8:	b	40c380 <ferror@plt+0x94f0>
  40c3ac:	mov	w1, #0x10                  	// #16
  40c3b0:	mov	x0, x20
  40c3b4:	bl	411554 <ferror@plt+0xe6c4>
  40c3b8:	str	x0, [sp]
  40c3bc:	cbz	x0, 40c380 <ferror@plt+0x94f0>
  40c3c0:	add	x8, x0, x20, lsl #4
  40c3c4:	stp	x8, x20, [sp, #8]
  40c3c8:	stp	xzr, xzr, [sp, #24]
  40c3cc:	ldur	q0, [x19, #40]
  40c3d0:	mov	x21, x19
  40c3d4:	mov	x0, sp
  40c3d8:	mov	x1, x19
  40c3dc:	stur	q0, [sp, #40]
  40c3e0:	ldur	q0, [x19, #56]
  40c3e4:	mov	w2, wzr
  40c3e8:	stur	q0, [sp, #56]
  40c3ec:	ldr	x8, [x21, #72]!
  40c3f0:	str	x8, [sp, #72]
  40c3f4:	bl	40c4e4 <ferror@plt+0x9654>
  40c3f8:	tbz	w0, #0, 40c424 <ferror@plt+0x9594>
  40c3fc:	ldr	x0, [x19]
  40c400:	bl	402c00 <free@plt>
  40c404:	ldr	q0, [sp]
  40c408:	mov	w0, #0x1                   	// #1
  40c40c:	str	q0, [x19]
  40c410:	ldr	q0, [sp, #16]
  40c414:	str	q0, [x19, #16]
  40c418:	ldr	x8, [sp, #72]
  40c41c:	str	x8, [x19, #72]
  40c420:	b	40c380 <ferror@plt+0x94f0>
  40c424:	ldr	x8, [sp, #72]
  40c428:	str	x8, [x21]
  40c42c:	ldp	x22, x23, [sp]
  40c430:	b	40c43c <ferror@plt+0x95ac>
  40c434:	str	xzr, [x22, #8]
  40c438:	add	x22, x22, #0x10
  40c43c:	cmp	x22, x23
  40c440:	b.cs	40c4c0 <ferror@plt+0x9630>  // b.hs, b.nlast
  40c444:	ldr	x8, [x22]
  40c448:	cbz	x8, 40c438 <ferror@plt+0x95a8>
  40c44c:	ldr	x24, [x22, #8]
  40c450:	cbz	x24, 40c434 <ferror@plt+0x95a4>
  40c454:	ldr	x1, [x19, #16]
  40c458:	b	40c488 <ferror@plt+0x95f8>
  40c45c:	str	x20, [x9]
  40c460:	ldr	x9, [x19, #24]
  40c464:	add	x9, x9, #0x1
  40c468:	str	x9, [x19, #24]
  40c46c:	mov	x9, x21
  40c470:	str	xzr, [x24]
  40c474:	ldr	x10, [x9]
  40c478:	str	x10, [x24, #8]
  40c47c:	str	x24, [x9]
  40c480:	mov	x24, x8
  40c484:	cbz	x8, 40c434 <ferror@plt+0x95a4>
  40c488:	ldr	x20, [x24]
  40c48c:	ldr	x8, [x19, #48]
  40c490:	mov	x0, x20
  40c494:	blr	x8
  40c498:	ldr	x1, [x19, #16]
  40c49c:	cmp	x0, x1
  40c4a0:	b.cs	40c4e0 <ferror@plt+0x9650>  // b.hs, b.nlast
  40c4a4:	ldr	x8, [x19]
  40c4a8:	add	x9, x8, x0, lsl #4
  40c4ac:	ldr	x10, [x9]
  40c4b0:	ldr	x8, [x24, #8]
  40c4b4:	cbz	x10, 40c45c <ferror@plt+0x95cc>
  40c4b8:	add	x9, x9, #0x8
  40c4bc:	b	40c474 <ferror@plt+0x95e4>
  40c4c0:	mov	x1, sp
  40c4c4:	mov	x0, x19
  40c4c8:	mov	w2, wzr
  40c4cc:	bl	40c4e4 <ferror@plt+0x9654>
  40c4d0:	tbz	w0, #0, 40c4e0 <ferror@plt+0x9650>
  40c4d4:	ldr	x0, [sp]
  40c4d8:	bl	402c00 <free@plt>
  40c4dc:	b	40c37c <ferror@plt+0x94ec>
  40c4e0:	bl	402ae0 <abort@plt>
  40c4e4:	stp	x29, x30, [sp, #-80]!
  40c4e8:	stp	x26, x25, [sp, #16]
  40c4ec:	stp	x24, x23, [sp, #32]
  40c4f0:	stp	x22, x21, [sp, #48]
  40c4f4:	stp	x20, x19, [sp, #64]
  40c4f8:	ldp	x24, x8, [x1]
  40c4fc:	mov	x29, sp
  40c500:	cmp	x24, x8
  40c504:	b.cs	40c63c <ferror@plt+0x97ac>  // b.hs, b.nlast
  40c508:	mov	w19, w2
  40c50c:	mov	x20, x1
  40c510:	mov	x21, x0
  40c514:	add	x25, x0, #0x48
  40c518:	b	40c54c <ferror@plt+0x96bc>
  40c51c:	str	x22, [x8]
  40c520:	ldr	x8, [x21, #24]
  40c524:	add	x8, x8, #0x1
  40c528:	str	x8, [x21, #24]
  40c52c:	str	xzr, [x24]
  40c530:	ldr	x8, [x20, #24]
  40c534:	sub	x8, x8, #0x1
  40c538:	str	x8, [x20, #24]
  40c53c:	ldr	x8, [x20, #8]
  40c540:	add	x24, x24, #0x10
  40c544:	cmp	x24, x8
  40c548:	b.cs	40c63c <ferror@plt+0x97ac>  // b.hs, b.nlast
  40c54c:	ldr	x22, [x24]
  40c550:	cbz	x22, 40c53c <ferror@plt+0x96ac>
  40c554:	ldr	x23, [x24, #8]
  40c558:	cbz	x23, 40c5cc <ferror@plt+0x973c>
  40c55c:	ldr	x1, [x21, #16]
  40c560:	b	40c590 <ferror@plt+0x9700>
  40c564:	str	x22, [x9]
  40c568:	ldr	x9, [x21, #24]
  40c56c:	add	x9, x9, #0x1
  40c570:	str	x9, [x21, #24]
  40c574:	mov	x9, x25
  40c578:	str	xzr, [x23]
  40c57c:	ldr	x10, [x9]
  40c580:	str	x10, [x23, #8]
  40c584:	str	x23, [x9]
  40c588:	mov	x23, x8
  40c58c:	cbz	x8, 40c5c8 <ferror@plt+0x9738>
  40c590:	ldr	x22, [x23]
  40c594:	ldr	x8, [x21, #48]
  40c598:	mov	x0, x22
  40c59c:	blr	x8
  40c5a0:	ldr	x1, [x21, #16]
  40c5a4:	cmp	x0, x1
  40c5a8:	b.cs	40c658 <ferror@plt+0x97c8>  // b.hs, b.nlast
  40c5ac:	ldr	x8, [x21]
  40c5b0:	add	x9, x8, x0, lsl #4
  40c5b4:	ldr	x10, [x9]
  40c5b8:	ldr	x8, [x23, #8]
  40c5bc:	cbz	x10, 40c564 <ferror@plt+0x96d4>
  40c5c0:	add	x9, x9, #0x8
  40c5c4:	b	40c57c <ferror@plt+0x96ec>
  40c5c8:	ldr	x22, [x24]
  40c5cc:	str	xzr, [x24, #8]
  40c5d0:	tbnz	w19, #0, 40c53c <ferror@plt+0x96ac>
  40c5d4:	ldr	x8, [x21, #48]
  40c5d8:	ldr	x1, [x21, #16]
  40c5dc:	mov	x0, x22
  40c5e0:	blr	x8
  40c5e4:	ldr	x8, [x21, #16]
  40c5e8:	cmp	x0, x8
  40c5ec:	b.cs	40c658 <ferror@plt+0x97c8>  // b.hs, b.nlast
  40c5f0:	ldr	x26, [x21]
  40c5f4:	mov	x23, x0
  40c5f8:	add	x8, x26, x0, lsl #4
  40c5fc:	ldr	x9, [x8]
  40c600:	cbz	x9, 40c51c <ferror@plt+0x968c>
  40c604:	ldr	x0, [x25]
  40c608:	cbz	x0, 40c618 <ferror@plt+0x9788>
  40c60c:	ldr	x8, [x0, #8]
  40c610:	str	x8, [x25]
  40c614:	b	40c624 <ferror@plt+0x9794>
  40c618:	mov	w0, #0x10                  	// #16
  40c61c:	bl	402930 <malloc@plt>
  40c620:	cbz	x0, 40c640 <ferror@plt+0x97b0>
  40c624:	str	x22, [x0]
  40c628:	add	x8, x26, x23, lsl #4
  40c62c:	ldr	x9, [x8, #8]
  40c630:	str	x9, [x0, #8]
  40c634:	str	x0, [x8, #8]
  40c638:	b	40c52c <ferror@plt+0x969c>
  40c63c:	mov	w0, #0x1                   	// #1
  40c640:	ldp	x20, x19, [sp, #64]
  40c644:	ldp	x22, x21, [sp, #48]
  40c648:	ldp	x24, x23, [sp, #32]
  40c64c:	ldp	x26, x25, [sp, #16]
  40c650:	ldp	x29, x30, [sp], #80
  40c654:	ret
  40c658:	bl	402ae0 <abort@plt>
  40c65c:	stp	x29, x30, [sp, #-80]!
  40c660:	str	x25, [sp, #16]
  40c664:	stp	x24, x23, [sp, #32]
  40c668:	stp	x22, x21, [sp, #48]
  40c66c:	stp	x20, x19, [sp, #64]
  40c670:	mov	x29, sp
  40c674:	cbz	x1, 40c940 <ferror@plt+0x9ab0>
  40c678:	mov	x20, x1
  40c67c:	ldr	x8, [x0, #48]
  40c680:	ldr	x1, [x0, #16]
  40c684:	mov	x19, x0
  40c688:	mov	x0, x20
  40c68c:	mov	x21, x2
  40c690:	blr	x8
  40c694:	ldr	x8, [x19, #16]
  40c698:	cmp	x0, x8
  40c69c:	b.cs	40c940 <ferror@plt+0x9ab0>  // b.hs, b.nlast
  40c6a0:	ldr	x25, [x19]
  40c6a4:	mov	x22, x0
  40c6a8:	add	x23, x25, x0, lsl #4
  40c6ac:	ldr	x1, [x23]
  40c6b0:	cbz	x1, 40c6d8 <ferror@plt+0x9848>
  40c6b4:	cmp	x1, x20
  40c6b8:	b.eq	40c84c <ferror@plt+0x99bc>  // b.none
  40c6bc:	ldr	x8, [x19, #56]
  40c6c0:	mov	x0, x20
  40c6c4:	blr	x8
  40c6c8:	mov	x24, x23
  40c6cc:	tbz	w0, #0, 40c860 <ferror@plt+0x99d0>
  40c6d0:	ldr	x8, [x24]
  40c6d4:	cbnz	x8, 40c850 <ferror@plt+0x99c0>
  40c6d8:	ldr	x8, [x19, #40]
  40c6dc:	ldp	x10, x9, [x19, #16]
  40c6e0:	ldr	s1, [x8, #8]
  40c6e4:	ucvtf	s0, x10
  40c6e8:	ucvtf	s2, x9
  40c6ec:	fmul	s3, s1, s0
  40c6f0:	fcmp	s3, s2
  40c6f4:	b.pl	40c830 <ferror@plt+0x99a0>  // b.nfrst
  40c6f8:	adrp	x9, 415000 <_obstack_memory_used@@Base+0x31b0>
  40c6fc:	add	x9, x9, #0x34
  40c700:	cmp	x8, x9
  40c704:	b.eq	40c794 <ferror@plt+0x9904>  // b.none
  40c708:	mov	w10, #0xcccd                	// #52429
  40c70c:	movk	w10, #0x3dcc, lsl #16
  40c710:	fmov	s3, w10
  40c714:	fcmp	s1, s3
  40c718:	b.le	40c784 <ferror@plt+0x98f4>
  40c71c:	mov	w10, #0x6666                	// #26214
  40c720:	movk	w10, #0x3f66, lsl #16
  40c724:	fmov	s3, w10
  40c728:	fcmp	s1, s3
  40c72c:	b.pl	40c784 <ferror@plt+0x98f4>  // b.nfrst
  40c730:	ldr	s3, [x8, #12]
  40c734:	mov	w10, #0xcccd                	// #52429
  40c738:	movk	w10, #0x3f8c, lsl #16
  40c73c:	fmov	s4, w10
  40c740:	fcmp	s3, s4
  40c744:	b.le	40c784 <ferror@plt+0x98f4>
  40c748:	ldr	s3, [x8]
  40c74c:	fcmp	s3, #0.0
  40c750:	b.lt	40c784 <ferror@plt+0x98f4>  // b.tstop
  40c754:	mov	w10, #0xcccd                	// #52429
  40c758:	movk	w10, #0x3dcc, lsl #16
  40c75c:	fmov	s4, w10
  40c760:	fadd	s3, s3, s4
  40c764:	fcmp	s3, s1
  40c768:	b.pl	40c784 <ferror@plt+0x98f4>  // b.nfrst
  40c76c:	ldr	s4, [x8, #4]
  40c770:	fmov	s5, #1.000000000000000000e+00
  40c774:	fcmp	s4, s5
  40c778:	b.hi	40c784 <ferror@plt+0x98f4>  // b.pmore
  40c77c:	fcmp	s3, s4
  40c780:	b.mi	40c798 <ferror@plt+0x9908>  // b.first
  40c784:	mov	w8, #0xcccd                	// #52429
  40c788:	movk	w8, #0x3f4c, lsl #16
  40c78c:	fmov	s1, w8
  40c790:	str	x9, [x19, #40]
  40c794:	mov	x8, x9
  40c798:	fmul	s3, s1, s0
  40c79c:	fcmp	s3, s2
  40c7a0:	b.pl	40c830 <ferror@plt+0x99a0>  // b.nfrst
  40c7a4:	ldr	s2, [x8, #12]
  40c7a8:	ldrb	w8, [x8, #16]
  40c7ac:	fmul	s0, s2, s0
  40c7b0:	cmp	w8, #0x0
  40c7b4:	fmul	s1, s1, s0
  40c7b8:	mov	w8, #0x5f800000            	// #1602224128
  40c7bc:	fcsel	s0, s1, s0, eq  // eq = none
  40c7c0:	fmov	s1, w8
  40c7c4:	fcmp	s0, s1
  40c7c8:	b.ge	40c8dc <ferror@plt+0x9a4c>  // b.tcont
  40c7cc:	fcvtzu	x1, s0
  40c7d0:	mov	x0, x19
  40c7d4:	bl	40c2b0 <ferror@plt+0x9420>
  40c7d8:	tbz	w0, #0, 40c8dc <ferror@plt+0x9a4c>
  40c7dc:	ldr	x8, [x19, #48]
  40c7e0:	ldr	x1, [x19, #16]
  40c7e4:	mov	x0, x20
  40c7e8:	blr	x8
  40c7ec:	ldr	x8, [x19, #16]
  40c7f0:	cmp	x0, x8
  40c7f4:	b.cs	40c940 <ferror@plt+0x9ab0>  // b.hs, b.nlast
  40c7f8:	ldr	x22, [x19]
  40c7fc:	mov	x21, x0
  40c800:	add	x23, x22, x0, lsl #4
  40c804:	ldr	x1, [x23]
  40c808:	cbz	x1, 40c830 <ferror@plt+0x99a0>
  40c80c:	cmp	x1, x20
  40c810:	mov	x8, x20
  40c814:	b.eq	40c82c <ferror@plt+0x999c>  // b.none
  40c818:	ldr	x8, [x19, #56]
  40c81c:	mov	x0, x20
  40c820:	blr	x8
  40c824:	tbz	w0, #0, 40c904 <ferror@plt+0x9a74>
  40c828:	ldr	x8, [x23]
  40c82c:	cbnz	x8, 40c940 <ferror@plt+0x9ab0>
  40c830:	ldr	x8, [x23]
  40c834:	cbz	x8, 40c890 <ferror@plt+0x9a00>
  40c838:	ldr	x0, [x19, #72]
  40c83c:	cbz	x0, 40c8ac <ferror@plt+0x9a1c>
  40c840:	ldr	x8, [x0, #8]
  40c844:	str	x8, [x19, #72]
  40c848:	b	40c8b8 <ferror@plt+0x9a28>
  40c84c:	mov	x8, x20
  40c850:	mov	w0, wzr
  40c854:	cbz	x21, 40c8e0 <ferror@plt+0x9a50>
  40c858:	str	x8, [x21]
  40c85c:	b	40c8e0 <ferror@plt+0x9a50>
  40c860:	add	x24, x25, x22, lsl #4
  40c864:	ldr	x8, [x24, #8]!
  40c868:	cbz	x8, 40c6d8 <ferror@plt+0x9848>
  40c86c:	ldr	x1, [x8]
  40c870:	cmp	x1, x20
  40c874:	b.eq	40c8f8 <ferror@plt+0x9a68>  // b.none
  40c878:	ldr	x8, [x19, #56]
  40c87c:	mov	x0, x20
  40c880:	blr	x8
  40c884:	ldr	x24, [x24]
  40c888:	tbz	w0, #0, 40c864 <ferror@plt+0x99d4>
  40c88c:	b	40c6d0 <ferror@plt+0x9840>
  40c890:	str	x20, [x23]
  40c894:	ldur	q0, [x19, #24]
  40c898:	mov	w0, #0x1                   	// #1
  40c89c:	dup	v1.2d, x0
  40c8a0:	add	v0.2d, v0.2d, v1.2d
  40c8a4:	stur	q0, [x19, #24]
  40c8a8:	b	40c8e0 <ferror@plt+0x9a50>
  40c8ac:	mov	w0, #0x10                  	// #16
  40c8b0:	bl	402930 <malloc@plt>
  40c8b4:	cbz	x0, 40c8dc <ferror@plt+0x9a4c>
  40c8b8:	str	x20, [x0]
  40c8bc:	ldr	x8, [x23, #8]
  40c8c0:	str	x8, [x0, #8]
  40c8c4:	str	x0, [x23, #8]
  40c8c8:	ldr	x8, [x19, #32]
  40c8cc:	mov	w0, #0x1                   	// #1
  40c8d0:	add	x8, x8, #0x1
  40c8d4:	str	x8, [x19, #32]
  40c8d8:	b	40c8e0 <ferror@plt+0x9a50>
  40c8dc:	mov	w0, #0xffffffff            	// #-1
  40c8e0:	ldp	x20, x19, [sp, #64]
  40c8e4:	ldp	x22, x21, [sp, #48]
  40c8e8:	ldp	x24, x23, [sp, #32]
  40c8ec:	ldr	x25, [sp, #16]
  40c8f0:	ldp	x29, x30, [sp], #80
  40c8f4:	ret
  40c8f8:	mov	x8, x20
  40c8fc:	cbnz	x8, 40c850 <ferror@plt+0x99c0>
  40c900:	b	40c6d8 <ferror@plt+0x9848>
  40c904:	add	x21, x22, x21, lsl #4
  40c908:	ldr	x8, [x21, #8]!
  40c90c:	cbz	x8, 40c830 <ferror@plt+0x99a0>
  40c910:	ldr	x1, [x8]
  40c914:	cmp	x1, x20
  40c918:	b.eq	40c938 <ferror@plt+0x9aa8>  // b.none
  40c91c:	ldr	x8, [x19, #56]
  40c920:	mov	x0, x20
  40c924:	blr	x8
  40c928:	ldr	x21, [x21]
  40c92c:	tbz	w0, #0, 40c908 <ferror@plt+0x9a78>
  40c930:	ldr	x8, [x21]
  40c934:	b	40c82c <ferror@plt+0x999c>
  40c938:	mov	x8, x20
  40c93c:	b	40c82c <ferror@plt+0x999c>
  40c940:	bl	402ae0 <abort@plt>
  40c944:	stp	x29, x30, [sp, #-32]!
  40c948:	mov	x29, sp
  40c94c:	add	x2, x29, #0x18
  40c950:	str	x19, [sp, #16]
  40c954:	mov	x19, x1
  40c958:	bl	40c65c <ferror@plt+0x97cc>
  40c95c:	ldr	x8, [x29, #24]
  40c960:	cmp	w0, #0x0
  40c964:	csel	x8, x8, x19, eq  // eq = none
  40c968:	ldr	x19, [sp, #16]
  40c96c:	cmn	w0, #0x1
  40c970:	csel	x0, xzr, x8, eq  // eq = none
  40c974:	ldp	x29, x30, [sp], #32
  40c978:	ret
  40c97c:	stp	x29, x30, [sp, #-64]!
  40c980:	stp	x22, x21, [sp, #32]
  40c984:	stp	x20, x19, [sp, #48]
  40c988:	ldr	x8, [x0, #16]
  40c98c:	ldr	x9, [x0, #48]
  40c990:	mov	x20, x0
  40c994:	mov	x19, x1
  40c998:	mov	x0, x1
  40c99c:	mov	x1, x8
  40c9a0:	str	x23, [sp, #16]
  40c9a4:	mov	x29, sp
  40c9a8:	blr	x9
  40c9ac:	ldr	x8, [x20, #16]
  40c9b0:	cmp	x0, x8
  40c9b4:	b.cs	40cbb0 <ferror@plt+0x9d20>  // b.hs, b.nlast
  40c9b8:	ldr	x23, [x20]
  40c9bc:	mov	x21, x0
  40c9c0:	add	x22, x23, x0, lsl #4
  40c9c4:	ldr	x1, [x22]
  40c9c8:	cbz	x1, 40ca38 <ferror@plt+0x9ba8>
  40c9cc:	cmp	x1, x19
  40c9d0:	b.eq	40c9e8 <ferror@plt+0x9b58>  // b.none
  40c9d4:	ldr	x8, [x20, #56]
  40c9d8:	mov	x0, x19
  40c9dc:	blr	x8
  40c9e0:	tbz	w0, #0, 40ca00 <ferror@plt+0x9b70>
  40c9e4:	ldr	x19, [x22]
  40c9e8:	add	x8, x23, x21, lsl #4
  40c9ec:	ldr	x8, [x8, #8]
  40c9f0:	cbz	x8, 40ca40 <ferror@plt+0x9bb0>
  40c9f4:	ldr	q0, [x8]
  40c9f8:	str	q0, [x22]
  40c9fc:	b	40ca60 <ferror@plt+0x9bd0>
  40ca00:	add	x21, x23, x21, lsl #4
  40ca04:	ldr	x9, [x21, #8]!
  40ca08:	cbz	x9, 40ca38 <ferror@plt+0x9ba8>
  40ca0c:	ldr	x1, [x9]
  40ca10:	cmp	x1, x19
  40ca14:	b.eq	40ca4c <ferror@plt+0x9bbc>  // b.none
  40ca18:	ldr	x8, [x20, #56]
  40ca1c:	mov	x0, x19
  40ca20:	blr	x8
  40ca24:	ldr	x8, [x21]
  40ca28:	tbnz	w0, #0, 40ca54 <ferror@plt+0x9bc4>
  40ca2c:	ldr	x9, [x8, #8]!
  40ca30:	mov	x21, x8
  40ca34:	cbnz	x9, 40ca0c <ferror@plt+0x9b7c>
  40ca38:	mov	x19, xzr
  40ca3c:	b	40cb98 <ferror@plt+0x9d08>
  40ca40:	str	xzr, [x22]
  40ca44:	cbnz	x19, 40ca74 <ferror@plt+0x9be4>
  40ca48:	b	40cb98 <ferror@plt+0x9d08>
  40ca4c:	mov	x8, x9
  40ca50:	b	40ca58 <ferror@plt+0x9bc8>
  40ca54:	ldr	x19, [x8]
  40ca58:	ldr	x9, [x8, #8]
  40ca5c:	str	x9, [x21]
  40ca60:	str	xzr, [x8]
  40ca64:	ldr	x9, [x20, #72]
  40ca68:	str	x9, [x8, #8]
  40ca6c:	str	x8, [x20, #72]
  40ca70:	cbz	x19, 40cb98 <ferror@plt+0x9d08>
  40ca74:	ldr	x8, [x20, #32]
  40ca78:	sub	x8, x8, #0x1
  40ca7c:	str	x8, [x20, #32]
  40ca80:	ldr	x8, [x22]
  40ca84:	cbnz	x8, 40cb98 <ferror@plt+0x9d08>
  40ca88:	ldp	x10, x9, [x20, #16]
  40ca8c:	ldr	x8, [x20, #40]
  40ca90:	sub	x9, x9, #0x1
  40ca94:	str	x9, [x20, #24]
  40ca98:	ldr	s2, [x8]
  40ca9c:	ucvtf	s0, x10
  40caa0:	ucvtf	s1, x9
  40caa4:	fmul	s3, s2, s0
  40caa8:	fcmp	s3, s1
  40caac:	b.le	40cb98 <ferror@plt+0x9d08>
  40cab0:	adrp	x9, 415000 <_obstack_memory_used@@Base+0x31b0>
  40cab4:	add	x9, x9, #0x34
  40cab8:	cmp	x8, x9
  40cabc:	b.eq	40cb44 <ferror@plt+0x9cb4>  // b.none
  40cac0:	ldr	s3, [x8, #8]
  40cac4:	mov	w10, #0xcccd                	// #52429
  40cac8:	movk	w10, #0x3dcc, lsl #16
  40cacc:	fmov	s4, w10
  40cad0:	fcmp	s3, s4
  40cad4:	b.le	40cb3c <ferror@plt+0x9cac>
  40cad8:	mov	w10, #0x6666                	// #26214
  40cadc:	movk	w10, #0x3f66, lsl #16
  40cae0:	fmov	s4, w10
  40cae4:	fcmp	s3, s4
  40cae8:	b.pl	40cb3c <ferror@plt+0x9cac>  // b.nfrst
  40caec:	fcmp	s2, #0.0
  40caf0:	b.lt	40cb3c <ferror@plt+0x9cac>  // b.tstop
  40caf4:	ldr	s4, [x8, #12]
  40caf8:	mov	w10, #0xcccd                	// #52429
  40cafc:	movk	w10, #0x3f8c, lsl #16
  40cb00:	fmov	s5, w10
  40cb04:	fcmp	s4, s5
  40cb08:	b.le	40cb3c <ferror@plt+0x9cac>
  40cb0c:	mov	w10, #0xcccd                	// #52429
  40cb10:	movk	w10, #0x3dcc, lsl #16
  40cb14:	fmov	s4, w10
  40cb18:	fadd	s4, s2, s4
  40cb1c:	fcmp	s4, s3
  40cb20:	b.pl	40cb3c <ferror@plt+0x9cac>  // b.nfrst
  40cb24:	ldr	s3, [x8, #4]
  40cb28:	fmov	s5, #1.000000000000000000e+00
  40cb2c:	fcmp	s3, s5
  40cb30:	b.hi	40cb3c <ferror@plt+0x9cac>  // b.pmore
  40cb34:	fcmp	s4, s3
  40cb38:	b.mi	40cb48 <ferror@plt+0x9cb8>  // b.first
  40cb3c:	fmov	s2, wzr
  40cb40:	str	x9, [x20, #40]
  40cb44:	mov	x8, x9
  40cb48:	fmul	s2, s2, s0
  40cb4c:	fcmp	s2, s1
  40cb50:	b.le	40cb98 <ferror@plt+0x9d08>
  40cb54:	ldr	s1, [x8, #4]
  40cb58:	ldrb	w9, [x8, #16]
  40cb5c:	fmul	s0, s1, s0
  40cb60:	cbnz	w9, 40cb6c <ferror@plt+0x9cdc>
  40cb64:	ldr	s1, [x8, #8]
  40cb68:	fmul	s0, s0, s1
  40cb6c:	fcvtzu	x1, s0
  40cb70:	mov	x0, x20
  40cb74:	bl	40c2b0 <ferror@plt+0x9420>
  40cb78:	tbnz	w0, #0, 40cb98 <ferror@plt+0x9d08>
  40cb7c:	ldr	x0, [x20, #72]
  40cb80:	cbz	x0, 40cb94 <ferror@plt+0x9d04>
  40cb84:	ldr	x21, [x0, #8]
  40cb88:	bl	402c00 <free@plt>
  40cb8c:	mov	x0, x21
  40cb90:	cbnz	x21, 40cb84 <ferror@plt+0x9cf4>
  40cb94:	str	xzr, [x20, #72]
  40cb98:	mov	x0, x19
  40cb9c:	ldp	x20, x19, [sp, #48]
  40cba0:	ldp	x22, x21, [sp, #32]
  40cba4:	ldr	x23, [sp, #16]
  40cba8:	ldp	x29, x30, [sp], #64
  40cbac:	ret
  40cbb0:	bl	402ae0 <abort@plt>
  40cbb4:	stp	x29, x30, [sp, #-48]!
  40cbb8:	stp	x20, x19, [sp, #32]
  40cbbc:	mov	x19, x0
  40cbc0:	mov	w0, #0x20                  	// #32
  40cbc4:	str	x21, [sp, #16]
  40cbc8:	mov	x29, sp
  40cbcc:	mov	x20, x1
  40cbd0:	bl	41078c <ferror@plt+0xd8fc>
  40cbd4:	cmp	x20, #0x0
  40cbd8:	csinc	x21, x20, xzr, ne  // ne = any
  40cbdc:	lsr	x8, x21, #60
  40cbe0:	cbnz	x8, 40cc20 <ferror@plt+0x9d90>
  40cbe4:	mov	x20, x0
  40cbe8:	lsl	x0, x21, #3
  40cbec:	bl	41078c <ferror@plt+0xd8fc>
  40cbf0:	adrp	x8, 40c000 <ferror@plt+0x9170>
  40cbf4:	add	x8, x8, #0xc24
  40cbf8:	cmp	x19, #0x0
  40cbfc:	csel	x8, x8, x19, eq  // eq = none
  40cc00:	str	xzr, [x0]
  40cc04:	stp	x0, x21, [x20]
  40cc08:	stp	xzr, x8, [x20, #16]
  40cc0c:	mov	x0, x20
  40cc10:	ldp	x20, x19, [sp, #32]
  40cc14:	ldr	x21, [sp, #16]
  40cc18:	ldp	x29, x30, [sp], #48
  40cc1c:	ret
  40cc20:	bl	410aa0 <ferror@plt+0xdc10>
  40cc24:	mov	w0, wzr
  40cc28:	ret
  40cc2c:	stp	x29, x30, [sp, #-32]!
  40cc30:	str	x19, [sp, #16]
  40cc34:	mov	x19, x0
  40cc38:	ldr	x0, [x0]
  40cc3c:	mov	x29, sp
  40cc40:	bl	402c00 <free@plt>
  40cc44:	mov	x0, x19
  40cc48:	ldr	x19, [sp, #16]
  40cc4c:	ldp	x29, x30, [sp], #32
  40cc50:	b	402c00 <free@plt>
  40cc54:	stp	x29, x30, [sp, #-64]!
  40cc58:	str	x23, [sp, #16]
  40cc5c:	stp	x22, x21, [sp, #32]
  40cc60:	stp	x20, x19, [sp, #48]
  40cc64:	ldp	x8, x9, [x0, #8]
  40cc68:	mov	x19, x0
  40cc6c:	mov	x20, x1
  40cc70:	mov	x29, sp
  40cc74:	sub	x10, x8, #0x1
  40cc78:	cmp	x10, x9
  40cc7c:	b.ls	40cc88 <ferror@plt+0x9df8>  // b.plast
  40cc80:	ldr	x0, [x19]
  40cc84:	b	40ccd4 <ferror@plt+0x9e44>
  40cc88:	ldr	x0, [x19]
  40cc8c:	cbz	x0, 40ccac <ferror@plt+0x9e1c>
  40cc90:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  40cc94:	movk	x9, #0xaaa, lsl #48
  40cc98:	cmp	x8, x9
  40cc9c:	b.cs	40ccb8 <ferror@plt+0x9e28>  // b.hs, b.nlast
  40cca0:	add	x8, x8, x8, lsr #1
  40cca4:	add	x8, x8, #0x1
  40cca8:	b	40ccc0 <ferror@plt+0x9e30>
  40ccac:	cbz	x8, 40ccbc <ferror@plt+0x9e2c>
  40ccb0:	lsr	x9, x8, #60
  40ccb4:	cbz	x9, 40ccc0 <ferror@plt+0x9e30>
  40ccb8:	bl	410aa0 <ferror@plt+0xdc10>
  40ccbc:	mov	w8, #0x10                  	// #16
  40ccc0:	lsl	x1, x8, #3
  40ccc4:	str	x8, [x19, #8]
  40ccc8:	bl	41080c <ferror@plt+0xd97c>
  40cccc:	ldr	x9, [x19, #16]
  40ccd0:	str	x0, [x19]
  40ccd4:	add	x21, x9, #0x1
  40ccd8:	lsl	x8, x21, #3
  40ccdc:	str	x21, [x19, #16]
  40cce0:	str	x20, [x0, x8]
  40cce4:	ldr	x22, [x19]
  40cce8:	ldr	x20, [x22, x8]
  40ccec:	cbz	x9, 40cd24 <ferror@plt+0x9e94>
  40ccf0:	ldr	x19, [x19, #24]
  40ccf4:	lsr	x23, x21, #1
  40ccf8:	ldr	x0, [x22, x23, lsl #3]
  40ccfc:	mov	x1, x20
  40cd00:	blr	x19
  40cd04:	cmp	w0, #0x0
  40cd08:	b.gt	40cd28 <ferror@plt+0x9e98>
  40cd0c:	ldr	x8, [x22, x23, lsl #3]
  40cd10:	cmp	x23, #0x1
  40cd14:	str	x8, [x22, x21, lsl #3]
  40cd18:	mov	x21, x23
  40cd1c:	b.ne	40ccf4 <ferror@plt+0x9e64>  // b.any
  40cd20:	b	40cd28 <ferror@plt+0x9e98>
  40cd24:	mov	w21, #0x1                   	// #1
  40cd28:	str	x20, [x22, x21, lsl #3]
  40cd2c:	ldp	x20, x19, [sp, #48]
  40cd30:	ldp	x22, x21, [sp, #32]
  40cd34:	ldr	x23, [sp, #16]
  40cd38:	mov	w0, wzr
  40cd3c:	ldp	x29, x30, [sp], #64
  40cd40:	ret
  40cd44:	stp	x29, x30, [sp, #-96]!
  40cd48:	stp	x26, x25, [sp, #32]
  40cd4c:	stp	x24, x23, [sp, #48]
  40cd50:	stp	x22, x21, [sp, #64]
  40cd54:	stp	x20, x19, [sp, #80]
  40cd58:	ldr	x8, [x0, #16]
  40cd5c:	str	x27, [sp, #16]
  40cd60:	mov	x29, sp
  40cd64:	cbz	x8, 40cde8 <ferror@plt+0x9f58>
  40cd68:	ldr	x9, [x0]
  40cd6c:	sub	x22, x8, #0x1
  40cd70:	lsr	x23, x22, #1
  40cd74:	ldr	x19, [x9, #8]
  40cd78:	str	x22, [x0, #16]
  40cd7c:	ldr	x8, [x9, x8, lsl #3]
  40cd80:	str	x8, [x9, #8]
  40cd84:	ldr	x21, [x0]
  40cd88:	ldr	x20, [x21, #8]
  40cd8c:	cbz	x23, 40cdf0 <ferror@plt+0x9f60>
  40cd90:	ldr	x25, [x0, #24]
  40cd94:	mov	w26, #0x1                   	// #1
  40cd98:	lsl	x24, x26, #1
  40cd9c:	cmp	x24, x22
  40cda0:	b.cs	40cdbc <ferror@plt+0x9f2c>  // b.hs, b.nlast
  40cda4:	orr	x27, x24, #0x1
  40cda8:	ldr	x0, [x21, x24, lsl #3]
  40cdac:	ldr	x1, [x21, x27, lsl #3]
  40cdb0:	blr	x25
  40cdb4:	cmp	w0, #0x0
  40cdb8:	csel	x24, x27, x24, lt  // lt = tstop
  40cdbc:	ldr	x0, [x21, x24, lsl #3]
  40cdc0:	mov	x1, x20
  40cdc4:	blr	x25
  40cdc8:	cmp	w0, #0x1
  40cdcc:	b.lt	40cdf8 <ferror@plt+0x9f68>  // b.tstop
  40cdd0:	ldr	x8, [x21, x24, lsl #3]
  40cdd4:	cmp	x24, x23
  40cdd8:	str	x8, [x21, x26, lsl #3]
  40cddc:	mov	x26, x24
  40cde0:	b.ls	40cd98 <ferror@plt+0x9f08>  // b.plast
  40cde4:	b	40cdfc <ferror@plt+0x9f6c>
  40cde8:	mov	x19, xzr
  40cdec:	b	40ce00 <ferror@plt+0x9f70>
  40cdf0:	mov	w24, #0x1                   	// #1
  40cdf4:	b	40cdfc <ferror@plt+0x9f6c>
  40cdf8:	mov	x24, x26
  40cdfc:	str	x20, [x21, x24, lsl #3]
  40ce00:	mov	x0, x19
  40ce04:	ldp	x20, x19, [sp, #80]
  40ce08:	ldp	x22, x21, [sp, #64]
  40ce0c:	ldp	x24, x23, [sp, #48]
  40ce10:	ldp	x26, x25, [sp, #32]
  40ce14:	ldr	x27, [sp, #16]
  40ce18:	ldp	x29, x30, [sp], #96
  40ce1c:	ret
  40ce20:	mov	w8, w0
  40ce24:	mov	x0, x1
  40ce28:	strb	wzr, [x0, #11]!
  40ce2c:	tbnz	w8, #31, 40ce6c <ferror@plt+0x9fdc>
  40ce30:	mov	w9, #0x6667                	// #26215
  40ce34:	movk	w9, #0x6666, lsl #16
  40ce38:	mov	w10, #0xa                   	// #10
  40ce3c:	smull	x11, w8, w9
  40ce40:	lsr	x13, x11, #63
  40ce44:	asr	x11, x11, #34
  40ce48:	add	w11, w11, w13
  40ce4c:	add	w12, w8, #0x9
  40ce50:	msub	w8, w11, w10, w8
  40ce54:	add	w8, w8, #0x30
  40ce58:	cmp	w12, #0x12
  40ce5c:	strb	w8, [x0, #-1]!
  40ce60:	mov	w8, w11
  40ce64:	b.hi	40ce3c <ferror@plt+0x9fac>  // b.pmore
  40ce68:	ret
  40ce6c:	mov	w9, #0x6667                	// #26215
  40ce70:	add	x0, x1, #0xa
  40ce74:	movk	w9, #0x6666, lsl #16
  40ce78:	mov	w10, #0xa                   	// #10
  40ce7c:	smull	x11, w8, w9
  40ce80:	lsr	x13, x11, #63
  40ce84:	asr	x11, x11, #34
  40ce88:	neg	w12, w8
  40ce8c:	add	w11, w11, w13
  40ce90:	madd	w12, w11, w10, w12
  40ce94:	add	w8, w8, #0x9
  40ce98:	add	w12, w12, #0x30
  40ce9c:	cmp	w8, #0x12
  40cea0:	strb	w12, [x0], #-1
  40cea4:	mov	w8, w11
  40cea8:	b.hi	40ce7c <ferror@plt+0x9fec>  // b.pmore
  40ceac:	mov	w8, #0x2d                  	// #45
  40ceb0:	strb	w8, [x0]
  40ceb4:	ret
  40ceb8:	mov	w8, #0xcccd                	// #52429
  40cebc:	movk	w8, #0xcccc, lsl #16
  40cec0:	strb	wzr, [x1, #10]!
  40cec4:	mov	w9, #0xa                   	// #10
  40cec8:	umull	x10, w0, w8
  40cecc:	lsr	x10, x10, #35
  40ced0:	msub	w11, w10, w9, w0
  40ced4:	orr	w11, w11, #0x30
  40ced8:	cmp	w0, #0x9
  40cedc:	strb	w11, [x1, #-1]!
  40cee0:	mov	w0, w10
  40cee4:	b.hi	40cec8 <ferror@plt+0xa038>  // b.pmore
  40cee8:	mov	x0, x1
  40ceec:	ret
  40cef0:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  40cef4:	movk	x8, #0xcccd
  40cef8:	strb	wzr, [x1, #20]!
  40cefc:	mov	w9, #0xa                   	// #10
  40cf00:	umulh	x10, x0, x8
  40cf04:	lsr	x10, x10, #3
  40cf08:	msub	w11, w10, w9, w0
  40cf0c:	orr	w11, w11, #0x30
  40cf10:	cmp	x0, #0x9
  40cf14:	strb	w11, [x1, #-1]!
  40cf18:	mov	x0, x10
  40cf1c:	b.hi	40cf00 <ferror@plt+0xa070>  // b.pmore
  40cf20:	mov	x0, x1
  40cf24:	ret
  40cf28:	stp	x29, x30, [sp, #-32]!
  40cf2c:	stp	x20, x19, [sp, #16]
  40cf30:	mov	x29, sp
  40cf34:	mov	w19, w1
  40cf38:	mov	x20, x0
  40cf3c:	bl	4027c0 <strlen@plt>
  40cf40:	mov	x1, x0
  40cf44:	mov	x0, x20
  40cf48:	mov	w2, w19
  40cf4c:	ldp	x20, x19, [sp, #16]
  40cf50:	ldp	x29, x30, [sp], #32
  40cf54:	b	40cf58 <ferror@plt+0xa0c8>
  40cf58:	sub	sp, sp, #0x60
  40cf5c:	stp	x29, x30, [sp, #16]
  40cf60:	str	x25, [sp, #32]
  40cf64:	stp	x24, x23, [sp, #48]
  40cf68:	stp	x22, x21, [sp, #64]
  40cf6c:	stp	x20, x19, [sp, #80]
  40cf70:	add	x29, sp, #0x10
  40cf74:	mov	w19, w2
  40cf78:	mov	x21, x1
  40cf7c:	mov	x20, x0
  40cf80:	add	x23, x0, x1
  40cf84:	bl	402c10 <__ctype_get_mb_cur_max@plt>
  40cf88:	cmp	x0, #0x1
  40cf8c:	b.ls	40d07c <ferror@plt+0xa1ec>  // b.plast
  40cf90:	cmp	x21, #0x1
  40cf94:	b.lt	40d0c4 <ferror@plt+0xa234>  // b.tstop
  40cf98:	adrp	x25, 415000 <_obstack_memory_used@@Base+0x31b0>
  40cf9c:	mov	w21, wzr
  40cfa0:	mov	w24, #0x7fffffff            	// #2147483647
  40cfa4:	add	x25, x25, #0x48
  40cfa8:	ldrb	w8, [x20]
  40cfac:	sub	w8, w8, #0x20
  40cfb0:	cmp	w8, #0x5e
  40cfb4:	b.hi	40cfdc <ferror@plt+0xa14c>  // b.pmore
  40cfb8:	adr	x9, 40cfc8 <ferror@plt+0xa138>
  40cfbc:	ldrb	w10, [x25, x8]
  40cfc0:	add	x9, x9, x10, lsl #2
  40cfc4:	br	x9
  40cfc8:	add	x20, x20, #0x1
  40cfcc:	add	w21, w21, #0x1
  40cfd0:	cmp	x20, x23
  40cfd4:	b.cc	40cfa8 <ferror@plt+0xa118>  // b.lo, b.ul, b.last
  40cfd8:	b	40d0d0 <ferror@plt+0xa240>
  40cfdc:	str	xzr, [x29, #24]
  40cfe0:	b	40d004 <ferror@plt+0xa174>
  40cfe4:	sub	w8, w24, w21
  40cfe8:	cmp	w0, w8
  40cfec:	b.gt	40d0cc <ferror@plt+0xa23c>
  40cff0:	add	w21, w0, w21
  40cff4:	add	x0, x29, #0x18
  40cff8:	add	x20, x20, x22
  40cffc:	bl	402b20 <mbsinit@plt>
  40d000:	cbnz	w0, 40cfd0 <ferror@plt+0xa140>
  40d004:	sub	x2, x23, x20
  40d008:	sub	x0, x29, #0x4
  40d00c:	add	x3, x29, #0x18
  40d010:	mov	x1, x20
  40d014:	bl	4119c4 <ferror@plt+0xeb34>
  40d018:	cbz	x0, 40d034 <ferror@plt+0xa1a4>
  40d01c:	mov	x22, x0
  40d020:	cmn	x0, #0x2
  40d024:	b.eq	40d064 <ferror@plt+0xa1d4>  // b.none
  40d028:	cmn	x22, #0x1
  40d02c:	b.ne	40d038 <ferror@plt+0xa1a8>  // b.any
  40d030:	b	40d070 <ferror@plt+0xa1e0>
  40d034:	mov	w22, #0x1                   	// #1
  40d038:	ldur	w0, [x29, #-4]
  40d03c:	bl	402940 <wcwidth@plt>
  40d040:	tbz	w0, #31, 40cfe4 <ferror@plt+0xa154>
  40d044:	tbnz	w19, #1, 40d074 <ferror@plt+0xa1e4>
  40d048:	ldur	w0, [x29, #-4]
  40d04c:	bl	402840 <iswcntrl@plt>
  40d050:	cbnz	w0, 40cff4 <ferror@plt+0xa164>
  40d054:	cmp	w21, w24
  40d058:	b.eq	40d0cc <ferror@plt+0xa23c>  // b.none
  40d05c:	add	w21, w21, #0x1
  40d060:	b	40cff4 <ferror@plt+0xa164>
  40d064:	mov	x20, x23
  40d068:	tbz	w19, #0, 40cfcc <ferror@plt+0xa13c>
  40d06c:	b	40d074 <ferror@plt+0xa1e4>
  40d070:	tbz	w19, #0, 40cfc8 <ferror@plt+0xa138>
  40d074:	mov	w21, #0xffffffff            	// #-1
  40d078:	b	40d0d0 <ferror@plt+0xa240>
  40d07c:	cmp	x21, #0x1
  40d080:	b.lt	40d0c4 <ferror@plt+0xa234>  // b.tstop
  40d084:	bl	402bc0 <__ctype_b_loc@plt>
  40d088:	ldr	x8, [x0]
  40d08c:	mov	w21, wzr
  40d090:	b	40d09c <ferror@plt+0xa20c>
  40d094:	cmp	x20, x23
  40d098:	b.cs	40d0d0 <ferror@plt+0xa240>  // b.hs, b.nlast
  40d09c:	ldrb	w9, [x20], #1
  40d0a0:	ldrh	w9, [x8, x9, lsl #1]
  40d0a4:	tbnz	w9, #14, 40d0b0 <ferror@plt+0xa220>
  40d0a8:	tbnz	w19, #1, 40d074 <ferror@plt+0xa1e4>
  40d0ac:	tbnz	w9, #1, 40d094 <ferror@plt+0xa204>
  40d0b0:	mov	w9, #0x7fffffff            	// #2147483647
  40d0b4:	cmp	w21, w9
  40d0b8:	b.eq	40d0cc <ferror@plt+0xa23c>  // b.none
  40d0bc:	add	w21, w21, #0x1
  40d0c0:	b	40d094 <ferror@plt+0xa204>
  40d0c4:	mov	w21, wzr
  40d0c8:	b	40d0d0 <ferror@plt+0xa240>
  40d0cc:	mov	w21, #0x7fffffff            	// #2147483647
  40d0d0:	mov	w0, w21
  40d0d4:	ldp	x20, x19, [sp, #80]
  40d0d8:	ldp	x22, x21, [sp, #64]
  40d0dc:	ldp	x24, x23, [sp, #48]
  40d0e0:	ldr	x25, [sp, #32]
  40d0e4:	ldp	x29, x30, [sp, #16]
  40d0e8:	add	sp, sp, #0x60
  40d0ec:	ret
  40d0f0:	sub	sp, sp, #0xa0
  40d0f4:	cmp	w0, #0x1
  40d0f8:	stp	x29, x30, [sp, #128]
  40d0fc:	stp	x20, x19, [sp, #144]
  40d100:	add	x29, sp, #0x80
  40d104:	b.eq	40d228 <ferror@plt+0xa398>  // b.none
  40d108:	cmp	w0, #0x2
  40d10c:	b.ne	40d230 <ferror@plt+0xa3a0>  // b.any
  40d110:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x31b0>
  40d114:	add	x0, x0, #0xa7
  40d118:	bl	402e20 <getenv@plt>
  40d11c:	cbnz	x0, 40d128 <ferror@plt+0xa298>
  40d120:	b	40d198 <ferror@plt+0xa308>
  40d124:	add	x0, x0, #0x1
  40d128:	ldrb	w8, [x0]
  40d12c:	sub	w9, w8, #0x9
  40d130:	cmp	w9, #0x5
  40d134:	b.cc	40d124 <ferror@plt+0xa294>  // b.lo, b.ul, b.last
  40d138:	cmp	w8, #0x20
  40d13c:	b.eq	40d124 <ferror@plt+0xa294>  // b.none
  40d140:	sub	w8, w8, #0x30
  40d144:	cmp	w8, #0x9
  40d148:	b.hi	40d198 <ferror@plt+0xa308>  // b.pmore
  40d14c:	mov	x1, sp
  40d150:	mov	w2, #0xa                   	// #10
  40d154:	str	xzr, [sp]
  40d158:	bl	4027b0 <strtoul@plt>
  40d15c:	ldr	x8, [sp]
  40d160:	cbz	x8, 40d198 <ferror@plt+0xa308>
  40d164:	mov	x19, x0
  40d168:	b	40d170 <ferror@plt+0xa2e0>
  40d16c:	add	x8, x8, #0x1
  40d170:	ldrb	w9, [x8]
  40d174:	sub	w10, w9, #0x9
  40d178:	cmp	w10, #0x5
  40d17c:	b.cc	40d16c <ferror@plt+0xa2dc>  // b.lo, b.ul, b.last
  40d180:	cmp	w9, #0x20
  40d184:	b.eq	40d16c <ferror@plt+0xa2dc>  // b.none
  40d188:	cbz	w9, 40d19c <ferror@plt+0xa30c>
  40d18c:	cmp	w9, #0x2c
  40d190:	b.eq	40d19c <ferror@plt+0xa30c>  // b.none
  40d194:	str	x8, [sp]
  40d198:	mov	x19, xzr
  40d19c:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x31b0>
  40d1a0:	add	x0, x0, #0xb7
  40d1a4:	bl	402e20 <getenv@plt>
  40d1a8:	cbnz	x0, 40d1b4 <ferror@plt+0xa324>
  40d1ac:	b	40d284 <ferror@plt+0xa3f4>
  40d1b0:	add	x0, x0, #0x1
  40d1b4:	ldrb	w8, [x0]
  40d1b8:	sub	w9, w8, #0x9
  40d1bc:	cmp	w9, #0x5
  40d1c0:	b.cc	40d1b0 <ferror@plt+0xa320>  // b.lo, b.ul, b.last
  40d1c4:	cmp	w8, #0x20
  40d1c8:	b.eq	40d1b0 <ferror@plt+0xa320>  // b.none
  40d1cc:	sub	w8, w8, #0x30
  40d1d0:	cmp	w8, #0x9
  40d1d4:	b.hi	40d284 <ferror@plt+0xa3f4>  // b.pmore
  40d1d8:	mov	x1, sp
  40d1dc:	mov	w2, #0xa                   	// #10
  40d1e0:	str	xzr, [sp]
  40d1e4:	bl	4027b0 <strtoul@plt>
  40d1e8:	ldr	x8, [sp]
  40d1ec:	cbz	x8, 40d284 <ferror@plt+0xa3f4>
  40d1f0:	mov	x20, x0
  40d1f4:	b	40d1fc <ferror@plt+0xa36c>
  40d1f8:	add	x8, x8, #0x1
  40d1fc:	ldrb	w9, [x8]
  40d200:	sub	w10, w9, #0x9
  40d204:	cmp	w10, #0x5
  40d208:	b.cc	40d1f8 <ferror@plt+0xa368>  // b.lo, b.ul, b.last
  40d20c:	cmp	w9, #0x20
  40d210:	b.eq	40d1f8 <ferror@plt+0xa368>  // b.none
  40d214:	cbz	w9, 40d220 <ferror@plt+0xa390>
  40d218:	cmp	w9, #0x2c
  40d21c:	b.ne	40d280 <ferror@plt+0xa3f0>  // b.any
  40d220:	cbnz	x20, 40d288 <ferror@plt+0xa3f8>
  40d224:	b	40d284 <ferror@plt+0xa3f4>
  40d228:	mov	x20, #0xffffffffffffffff    	// #-1
  40d22c:	b	40d294 <ferror@plt+0xa404>
  40d230:	mov	w0, #0x53                  	// #83
  40d234:	bl	402d50 <sysconf@plt>
  40d238:	cmp	x0, #0x1
  40d23c:	b.ne	40d270 <ferror@plt+0xa3e0>  // b.any
  40d240:	mov	x2, sp
  40d244:	mov	w1, #0x80                  	// #128
  40d248:	mov	w0, wzr
  40d24c:	bl	402b00 <sched_getaffinity@plt>
  40d250:	cbz	w0, 40d25c <ferror@plt+0xa3cc>
  40d254:	mov	x20, #0xffffffffffffffff    	// #-1
  40d258:	b	40d2b8 <ferror@plt+0xa428>
  40d25c:	mov	x1, sp
  40d260:	mov	w0, #0x80                  	// #128
  40d264:	bl	402c90 <__sched_cpucount@plt>
  40d268:	cbz	w0, 40d254 <ferror@plt+0xa3c4>
  40d26c:	sxtw	x0, w0
  40d270:	cmp	x0, #0x0
  40d274:	mov	x20, #0xffffffffffffffff    	// #-1
  40d278:	b.gt	40d2d4 <ferror@plt+0xa444>
  40d27c:	b	40d2b8 <ferror@plt+0xa428>
  40d280:	str	x8, [sp]
  40d284:	mov	x20, #0xffffffffffffffff    	// #-1
  40d288:	cmp	x19, x20
  40d28c:	csel	x0, x19, x20, cc  // cc = lo, ul, last
  40d290:	cbnz	x19, 40d2dc <ferror@plt+0xa44c>
  40d294:	mov	x2, sp
  40d298:	mov	w1, #0x80                  	// #128
  40d29c:	mov	w0, wzr
  40d2a0:	bl	402b00 <sched_getaffinity@plt>
  40d2a4:	cbz	w0, 40d2c0 <ferror@plt+0xa430>
  40d2a8:	mov	w0, #0x54                  	// #84
  40d2ac:	bl	402d50 <sysconf@plt>
  40d2b0:	cmp	x0, #0x0
  40d2b4:	b.gt	40d2d4 <ferror@plt+0xa444>
  40d2b8:	mov	w0, #0x1                   	// #1
  40d2bc:	b	40d2d4 <ferror@plt+0xa444>
  40d2c0:	mov	x1, sp
  40d2c4:	mov	w0, #0x80                  	// #128
  40d2c8:	bl	402c90 <__sched_cpucount@plt>
  40d2cc:	cbz	w0, 40d2a8 <ferror@plt+0xa418>
  40d2d0:	sxtw	x0, w0
  40d2d4:	cmp	x0, x20
  40d2d8:	csel	x0, x0, x20, cc  // cc = lo, ul, last
  40d2dc:	ldp	x20, x19, [sp, #144]
  40d2e0:	ldp	x29, x30, [sp, #128]
  40d2e4:	add	sp, sp, #0xa0
  40d2e8:	ret
  40d2ec:	sub	sp, sp, #0x90
  40d2f0:	mov	w0, #0x55                  	// #85
  40d2f4:	stp	x29, x30, [sp, #112]
  40d2f8:	str	x19, [sp, #128]
  40d2fc:	add	x29, sp, #0x70
  40d300:	bl	402d50 <sysconf@plt>
  40d304:	mov	x19, x0
  40d308:	mov	w0, #0x1e                  	// #30
  40d30c:	bl	402d50 <sysconf@plt>
  40d310:	orr	x8, x0, x19
  40d314:	tbnz	x8, #63, 40d328 <ferror@plt+0xa498>
  40d318:	scvtf	d0, x0
  40d31c:	scvtf	d1, x19
  40d320:	fmul	d0, d1, d0
  40d324:	b	40d354 <ferror@plt+0xa4c4>
  40d328:	mov	x0, sp
  40d32c:	bl	402800 <sysinfo@plt>
  40d330:	cbz	w0, 40d340 <ferror@plt+0xa4b0>
  40d334:	mov	x8, #0x4190000000000000    	// #4724276009111650304
  40d338:	fmov	d0, x8
  40d33c:	b	40d354 <ferror@plt+0xa4c4>
  40d340:	ldr	d0, [sp, #32]
  40d344:	ldr	s1, [sp, #104]
  40d348:	ucvtf	d0, d0
  40d34c:	ucvtf	d1, d1
  40d350:	fmul	d0, d0, d1
  40d354:	ldr	x19, [sp, #128]
  40d358:	ldp	x29, x30, [sp, #112]
  40d35c:	add	sp, sp, #0x90
  40d360:	ret
  40d364:	sub	sp, sp, #0x90
  40d368:	mov	w0, #0x56                  	// #86
  40d36c:	stp	x29, x30, [sp, #112]
  40d370:	str	x19, [sp, #128]
  40d374:	add	x29, sp, #0x70
  40d378:	bl	402d50 <sysconf@plt>
  40d37c:	mov	x19, x0
  40d380:	mov	w0, #0x1e                  	// #30
  40d384:	bl	402d50 <sysconf@plt>
  40d388:	orr	x8, x0, x19
  40d38c:	tbnz	x8, #63, 40d3a0 <ferror@plt+0xa510>
  40d390:	scvtf	d0, x0
  40d394:	scvtf	d1, x19
  40d398:	fmul	d0, d1, d0
  40d39c:	b	40d42c <ferror@plt+0xa59c>
  40d3a0:	mov	x0, sp
  40d3a4:	bl	402800 <sysinfo@plt>
  40d3a8:	cbz	w0, 40d3d8 <ferror@plt+0xa548>
  40d3ac:	mov	w0, #0x55                  	// #85
  40d3b0:	bl	402d50 <sysconf@plt>
  40d3b4:	mov	x19, x0
  40d3b8:	mov	w0, #0x1e                  	// #30
  40d3bc:	bl	402d50 <sysconf@plt>
  40d3c0:	orr	x8, x0, x19
  40d3c4:	tbnz	x8, #63, 40d3f8 <ferror@plt+0xa568>
  40d3c8:	scvtf	d0, x0
  40d3cc:	scvtf	d1, x19
  40d3d0:	fmul	d0, d1, d0
  40d3d4:	b	40d424 <ferror@plt+0xa594>
  40d3d8:	ldr	d0, [sp, #40]
  40d3dc:	ldr	d1, [sp, #56]
  40d3e0:	ldr	s2, [sp, #104]
  40d3e4:	ucvtf	d0, d0
  40d3e8:	ucvtf	d1, d1
  40d3ec:	fadd	d0, d0, d1
  40d3f0:	ucvtf	d1, d2
  40d3f4:	b	40d428 <ferror@plt+0xa598>
  40d3f8:	mov	x0, sp
  40d3fc:	bl	402800 <sysinfo@plt>
  40d400:	cbz	w0, 40d410 <ferror@plt+0xa580>
  40d404:	mov	x8, #0x4190000000000000    	// #4724276009111650304
  40d408:	fmov	d0, x8
  40d40c:	b	40d424 <ferror@plt+0xa594>
  40d410:	ldr	d0, [sp, #32]
  40d414:	ldr	s1, [sp, #104]
  40d418:	ucvtf	d0, d0
  40d41c:	ucvtf	d1, d1
  40d420:	fmul	d0, d0, d1
  40d424:	fmov	d1, #2.500000000000000000e-01
  40d428:	fmul	d0, d0, d1
  40d42c:	ldr	x19, [sp, #128]
  40d430:	ldp	x29, x30, [sp, #112]
  40d434:	add	sp, sp, #0x90
  40d438:	ret
  40d43c:	stp	x29, x30, [sp, #-64]!
  40d440:	str	x23, [sp, #16]
  40d444:	stp	x22, x21, [sp, #32]
  40d448:	stp	x20, x19, [sp, #48]
  40d44c:	adrp	x23, 426000 <_obstack_memory_used@@Base+0x141b0>
  40d450:	ldr	w8, [x23, #2988]
  40d454:	ldr	x22, [x0]
  40d458:	mov	x19, x0
  40d45c:	mov	w20, w1
  40d460:	mov	x29, sp
  40d464:	tbnz	w8, #31, 40d494 <ferror@plt+0xa604>
  40d468:	mov	x0, x19
  40d46c:	mov	w1, w20
  40d470:	bl	402b40 <pipe2@plt>
  40d474:	mov	w21, w0
  40d478:	tbz	w0, #31, 40d4b8 <ferror@plt+0xa628>
  40d47c:	bl	402e00 <__errno_location@plt>
  40d480:	ldr	w8, [x0]
  40d484:	cmp	w8, #0x26
  40d488:	b.ne	40d4b8 <ferror@plt+0xa628>  // b.any
  40d48c:	mov	w8, #0xffffffff            	// #-1
  40d490:	str	w8, [x23, #2988]
  40d494:	mov	w8, #0xf7ff                	// #63487
  40d498:	movk	w8, #0xfff7, lsl #16
  40d49c:	tst	w20, w8
  40d4a0:	b.eq	40d4d8 <ferror@plt+0xa648>  // b.none
  40d4a4:	bl	402e00 <__errno_location@plt>
  40d4a8:	mov	w8, #0x16                  	// #22
  40d4ac:	str	w8, [x0]
  40d4b0:	mov	w21, #0xffffffff            	// #-1
  40d4b4:	b	40d4c0 <ferror@plt+0xa630>
  40d4b8:	mov	w8, #0x1                   	// #1
  40d4bc:	str	w8, [x23, #2988]
  40d4c0:	mov	w0, w21
  40d4c4:	ldp	x20, x19, [sp, #48]
  40d4c8:	ldp	x22, x21, [sp, #32]
  40d4cc:	ldr	x23, [sp, #16]
  40d4d0:	ldp	x29, x30, [sp], #64
  40d4d4:	ret
  40d4d8:	mov	x0, x19
  40d4dc:	bl	402820 <pipe@plt>
  40d4e0:	tbnz	w0, #31, 40d4b0 <ferror@plt+0xa620>
  40d4e4:	tbnz	w20, #11, 40d4f4 <ferror@plt+0xa664>
  40d4e8:	tbnz	w20, #19, 40d558 <ferror@plt+0xa6c8>
  40d4ec:	mov	w21, wzr
  40d4f0:	b	40d4c0 <ferror@plt+0xa630>
  40d4f4:	ldr	w0, [x19, #4]
  40d4f8:	mov	w1, #0x3                   	// #3
  40d4fc:	mov	w2, wzr
  40d500:	bl	411634 <ferror@plt+0xe7a4>
  40d504:	tbnz	w0, #31, 40d5b8 <ferror@plt+0xa728>
  40d508:	ldr	w8, [x19, #4]
  40d50c:	orr	w2, w0, #0x800
  40d510:	mov	w1, #0x4                   	// #4
  40d514:	mov	w0, w8
  40d518:	bl	411634 <ferror@plt+0xe7a4>
  40d51c:	cmn	w0, #0x1
  40d520:	b.eq	40d5b8 <ferror@plt+0xa728>  // b.none
  40d524:	ldr	w0, [x19]
  40d528:	mov	w1, #0x3                   	// #3
  40d52c:	mov	w2, wzr
  40d530:	bl	411634 <ferror@plt+0xe7a4>
  40d534:	tbnz	w0, #31, 40d5b8 <ferror@plt+0xa728>
  40d538:	ldr	w8, [x19]
  40d53c:	orr	w2, w0, #0x800
  40d540:	mov	w1, #0x4                   	// #4
  40d544:	mov	w0, w8
  40d548:	bl	411634 <ferror@plt+0xe7a4>
  40d54c:	cmn	w0, #0x1
  40d550:	b.ne	40d4e8 <ferror@plt+0xa658>  // b.any
  40d554:	b	40d5b8 <ferror@plt+0xa728>
  40d558:	ldr	w0, [x19, #4]
  40d55c:	mov	w1, #0x1                   	// #1
  40d560:	mov	w2, wzr
  40d564:	bl	411634 <ferror@plt+0xe7a4>
  40d568:	tbnz	w0, #31, 40d5b8 <ferror@plt+0xa728>
  40d56c:	ldr	w8, [x19, #4]
  40d570:	orr	w2, w0, #0x1
  40d574:	mov	w1, #0x2                   	// #2
  40d578:	mov	w0, w8
  40d57c:	bl	411634 <ferror@plt+0xe7a4>
  40d580:	cmn	w0, #0x1
  40d584:	b.eq	40d5b8 <ferror@plt+0xa728>  // b.none
  40d588:	ldr	w0, [x19]
  40d58c:	mov	w1, #0x1                   	// #1
  40d590:	mov	w2, wzr
  40d594:	bl	411634 <ferror@plt+0xe7a4>
  40d598:	tbnz	w0, #31, 40d5b8 <ferror@plt+0xa728>
  40d59c:	ldr	w8, [x19]
  40d5a0:	orr	w2, w0, #0x1
  40d5a4:	mov	w1, #0x2                   	// #2
  40d5a8:	mov	w0, w8
  40d5ac:	bl	411634 <ferror@plt+0xe7a4>
  40d5b0:	cmn	w0, #0x1
  40d5b4:	b.ne	40d4ec <ferror@plt+0xa65c>  // b.any
  40d5b8:	bl	402e00 <__errno_location@plt>
  40d5bc:	mov	x20, x0
  40d5c0:	ldr	w21, [x0]
  40d5c4:	ldr	w0, [x19]
  40d5c8:	bl	402a70 <close@plt>
  40d5cc:	ldr	w0, [x19, #4]
  40d5d0:	bl	402a70 <close@plt>
  40d5d4:	str	x22, [x19]
  40d5d8:	str	w21, [x20]
  40d5dc:	b	40d4b0 <ferror@plt+0xa620>
  40d5e0:	stp	x29, x30, [sp, #-32]!
  40d5e4:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x31b0>
  40d5e8:	str	x19, [sp, #16]
  40d5ec:	mov	w19, #0x1069                	// #4201
  40d5f0:	add	x0, x0, #0xc8
  40d5f4:	mov	x29, sp
  40d5f8:	movk	w19, #0x3, lsl #16
  40d5fc:	bl	402e20 <getenv@plt>
  40d600:	cbz	x0, 40d64c <ferror@plt+0xa7bc>
  40d604:	ldrb	w8, [x0]
  40d608:	cbz	w8, 40d64c <ferror@plt+0xa7bc>
  40d60c:	add	x1, x29, #0x18
  40d610:	mov	w2, #0xa                   	// #10
  40d614:	bl	402bd0 <strtol@plt>
  40d618:	ldr	x8, [x29, #24]
  40d61c:	ldrb	w8, [x8]
  40d620:	cbnz	w8, 40d64c <ferror@plt+0xa7bc>
  40d624:	mov	w8, #0x7ffffffe            	// #2147483646
  40d628:	cmp	x0, x8
  40d62c:	b.gt	40d648 <ferror@plt+0xa7b8>
  40d630:	mov	x8, #0xffffffff80000001    	// #-2147483647
  40d634:	cmp	x0, x8
  40d638:	mov	x19, x0
  40d63c:	b.ge	40d64c <ferror@plt+0xa7bc>  // b.tcont
  40d640:	mov	x19, #0xffffffff80000000    	// #-2147483648
  40d644:	b	40d64c <ferror@plt+0xa7bc>
  40d648:	mov	w19, #0x7fffffff            	// #2147483647
  40d64c:	mov	w0, w19
  40d650:	ldr	x19, [sp, #16]
  40d654:	ldp	x29, x30, [sp], #32
  40d658:	ret
  40d65c:	stp	x29, x30, [sp, #-32]!
  40d660:	stp	x20, x19, [sp, #16]
  40d664:	mov	x29, sp
  40d668:	cbz	x0, 40d6e8 <ferror@plt+0xa858>
  40d66c:	mov	w1, #0x2f                  	// #47
  40d670:	mov	x19, x0
  40d674:	bl	402a90 <strrchr@plt>
  40d678:	cmp	x0, #0x0
  40d67c:	csinc	x20, x19, x0, eq  // eq = none
  40d680:	sub	x8, x20, x19
  40d684:	cmp	x8, #0x7
  40d688:	b.lt	40d6cc <ferror@plt+0xa83c>  // b.tstop
  40d68c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x31b0>
  40d690:	sub	x0, x20, #0x7
  40d694:	add	x1, x1, #0x110
  40d698:	mov	w2, #0x7                   	// #7
  40d69c:	bl	402990 <strncmp@plt>
  40d6a0:	cbnz	w0, 40d6cc <ferror@plt+0xa83c>
  40d6a4:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x31b0>
  40d6a8:	add	x1, x1, #0x118
  40d6ac:	mov	w2, #0x3                   	// #3
  40d6b0:	mov	x0, x20
  40d6b4:	bl	402990 <strncmp@plt>
  40d6b8:	mov	x19, x20
  40d6bc:	cbnz	w0, 40d6cc <ferror@plt+0xa83c>
  40d6c0:	add	x19, x20, #0x3
  40d6c4:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  40d6c8:	str	x19, [x8, #1352]
  40d6cc:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  40d6d0:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x141b0>
  40d6d4:	str	x19, [x8, #2992]
  40d6d8:	str	x19, [x9, #1304]
  40d6dc:	ldp	x20, x19, [sp, #16]
  40d6e0:	ldp	x29, x30, [sp], #32
  40d6e4:	ret
  40d6e8:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  40d6ec:	ldr	x3, [x8, #1312]
  40d6f0:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x31b0>
  40d6f4:	add	x0, x0, #0xd8
  40d6f8:	mov	w1, #0x37                  	// #55
  40d6fc:	mov	w2, #0x1                   	// #1
  40d700:	bl	402c70 <fwrite@plt>
  40d704:	bl	402ae0 <abort@plt>
  40d708:	stp	x29, x30, [sp, #-48]!
  40d70c:	str	x21, [sp, #16]
  40d710:	stp	x20, x19, [sp, #32]
  40d714:	mov	x29, sp
  40d718:	mov	x19, x0
  40d71c:	bl	402e00 <__errno_location@plt>
  40d720:	ldr	w21, [x0]
  40d724:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  40d728:	add	x8, x8, #0xbb8
  40d72c:	cmp	x19, #0x0
  40d730:	mov	x20, x0
  40d734:	csel	x0, x8, x19, eq  // eq = none
  40d738:	mov	w1, #0x38                  	// #56
  40d73c:	bl	4109f4 <ferror@plt+0xdb64>
  40d740:	str	w21, [x20]
  40d744:	ldp	x20, x19, [sp, #32]
  40d748:	ldr	x21, [sp, #16]
  40d74c:	ldp	x29, x30, [sp], #48
  40d750:	ret
  40d754:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  40d758:	add	x8, x8, #0xbb8
  40d75c:	cmp	x0, #0x0
  40d760:	csel	x8, x8, x0, eq  // eq = none
  40d764:	ldr	w0, [x8]
  40d768:	ret
  40d76c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  40d770:	add	x8, x8, #0xbb8
  40d774:	cmp	x0, #0x0
  40d778:	csel	x8, x8, x0, eq  // eq = none
  40d77c:	str	w1, [x8]
  40d780:	ret
  40d784:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  40d788:	add	x8, x8, #0xbb8
  40d78c:	cmp	x0, #0x0
  40d790:	ubfx	w9, w1, #5, #3
  40d794:	csel	x8, x8, x0, eq  // eq = none
  40d798:	add	x8, x8, w9, uxtw #2
  40d79c:	ldr	w9, [x8, #8]
  40d7a0:	lsr	w10, w9, w1
  40d7a4:	and	w0, w10, #0x1
  40d7a8:	and	w10, w2, #0x1
  40d7ac:	eor	w10, w0, w10
  40d7b0:	lsl	w10, w10, w1
  40d7b4:	eor	w9, w10, w9
  40d7b8:	str	w9, [x8, #8]
  40d7bc:	ret
  40d7c0:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  40d7c4:	add	x8, x8, #0xbb8
  40d7c8:	cmp	x0, #0x0
  40d7cc:	csel	x8, x8, x0, eq  // eq = none
  40d7d0:	ldr	w0, [x8, #4]
  40d7d4:	str	w1, [x8, #4]
  40d7d8:	ret
  40d7dc:	stp	x29, x30, [sp, #-16]!
  40d7e0:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  40d7e4:	add	x8, x8, #0xbb8
  40d7e8:	cmp	x0, #0x0
  40d7ec:	csel	x8, x8, x0, eq  // eq = none
  40d7f0:	mov	w9, #0xa                   	// #10
  40d7f4:	mov	x29, sp
  40d7f8:	str	w9, [x8]
  40d7fc:	cbz	x1, 40d810 <ferror@plt+0xa980>
  40d800:	cbz	x2, 40d810 <ferror@plt+0xa980>
  40d804:	stp	x1, x2, [x8, #40]
  40d808:	ldp	x29, x30, [sp], #16
  40d80c:	ret
  40d810:	bl	402ae0 <abort@plt>
  40d814:	sub	sp, sp, #0x60
  40d818:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  40d81c:	add	x8, x8, #0xbb8
  40d820:	cmp	x4, #0x0
  40d824:	stp	x29, x30, [sp, #16]
  40d828:	str	x25, [sp, #32]
  40d82c:	stp	x24, x23, [sp, #48]
  40d830:	stp	x22, x21, [sp, #64]
  40d834:	stp	x20, x19, [sp, #80]
  40d838:	add	x29, sp, #0x10
  40d83c:	mov	x19, x3
  40d840:	mov	x20, x2
  40d844:	mov	x21, x1
  40d848:	mov	x22, x0
  40d84c:	csel	x24, x8, x4, eq  // eq = none
  40d850:	bl	402e00 <__errno_location@plt>
  40d854:	ldp	w4, w5, [x24]
  40d858:	ldp	x7, x8, [x24, #40]
  40d85c:	ldr	w25, [x0]
  40d860:	mov	x23, x0
  40d864:	add	x6, x24, #0x8
  40d868:	mov	x0, x22
  40d86c:	mov	x1, x21
  40d870:	mov	x2, x20
  40d874:	mov	x3, x19
  40d878:	str	x8, [sp]
  40d87c:	bl	40d8a0 <ferror@plt+0xaa10>
  40d880:	str	w25, [x23]
  40d884:	ldp	x20, x19, [sp, #80]
  40d888:	ldp	x22, x21, [sp, #64]
  40d88c:	ldp	x24, x23, [sp, #48]
  40d890:	ldr	x25, [sp, #32]
  40d894:	ldp	x29, x30, [sp, #16]
  40d898:	add	sp, sp, #0x60
  40d89c:	ret
  40d8a0:	sub	sp, sp, #0x120
  40d8a4:	stp	x29, x30, [sp, #192]
  40d8a8:	add	x29, sp, #0xc0
  40d8ac:	ldr	x8, [x29, #96]
  40d8b0:	stp	x28, x27, [sp, #208]
  40d8b4:	stp	x26, x25, [sp, #224]
  40d8b8:	stp	x24, x23, [sp, #240]
  40d8bc:	stp	x22, x21, [sp, #256]
  40d8c0:	stp	x20, x19, [sp, #272]
  40d8c4:	str	x7, [sp, #88]
  40d8c8:	stur	x6, [x29, #-40]
  40d8cc:	mov	w19, w5
  40d8d0:	mov	w22, w4
  40d8d4:	mov	x28, x3
  40d8d8:	mov	x20, x2
  40d8dc:	mov	x24, x1
  40d8e0:	stur	x8, [x29, #-88]
  40d8e4:	mov	x21, x0
  40d8e8:	bl	402c10 <__ctype_get_mb_cur_max@plt>
  40d8ec:	mov	w4, w22
  40d8f0:	mov	w8, wzr
  40d8f4:	mov	w14, wzr
  40d8f8:	str	w19, [sp, #80]
  40d8fc:	ubfx	w19, w19, #1, #1
  40d900:	add	x9, x20, #0x1
  40d904:	mov	w25, #0x1                   	// #1
  40d908:	str	x0, [sp, #48]
  40d90c:	str	xzr, [sp, #64]
  40d910:	stur	xzr, [x29, #-64]
  40d914:	stur	xzr, [x29, #-32]
  40d918:	str	wzr, [sp, #72]
  40d91c:	stur	x20, [x29, #-80]
  40d920:	str	x9, [sp, #96]
  40d924:	cmp	w4, #0xa
  40d928:	b.hi	40e4f4 <ferror@plt+0xb664>  // b.pmore
  40d92c:	adrp	x12, 415000 <_obstack_memory_used@@Base+0x31b0>
  40d930:	mov	w9, w4
  40d934:	add	x12, x12, #0x120
  40d938:	mov	x22, x24
  40d93c:	adr	x10, 40d95c <ferror@plt+0xaacc>
  40d940:	ldrb	w11, [x12, x9]
  40d944:	add	x10, x10, x11, lsl #2
  40d948:	ldur	x24, [x29, #-80]
  40d94c:	mov	x20, xzr
  40d950:	mov	w16, wzr
  40d954:	mov	w9, #0x1                   	// #1
  40d958:	br	x10
  40d95c:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x31b0>
  40d960:	add	x0, x0, #0x27c
  40d964:	mov	w1, w4
  40d968:	mov	w20, w4
  40d96c:	mov	w23, w14
  40d970:	bl	40ee40 <ferror@plt+0xbfb0>
  40d974:	str	x0, [sp, #88]
  40d978:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x21b0>
  40d97c:	add	x0, x0, #0x4a4
  40d980:	mov	w1, w20
  40d984:	bl	40ee40 <ferror@plt+0xbfb0>
  40d988:	mov	w14, w23
  40d98c:	mov	w4, w20
  40d990:	stur	x0, [x29, #-88]
  40d994:	tbnz	w19, #0, 40d9d8 <ferror@plt+0xab48>
  40d998:	ldr	x8, [sp, #88]
  40d99c:	ldrb	w9, [x8]
  40d9a0:	cbz	w9, 40d9d8 <ferror@plt+0xab48>
  40d9a4:	mov	w27, w14
  40d9a8:	mov	w26, w4
  40d9ac:	mov	x10, xzr
  40d9b0:	add	x8, x8, #0x1
  40d9b4:	b	40d9c8 <ferror@plt+0xab38>
  40d9b8:	ldrb	w9, [x8, x10]
  40d9bc:	add	x20, x10, #0x1
  40d9c0:	mov	x10, x20
  40d9c4:	cbz	w9, 40d9e4 <ferror@plt+0xab54>
  40d9c8:	cmp	x10, x22
  40d9cc:	b.cs	40d9b8 <ferror@plt+0xab28>  // b.hs, b.nlast
  40d9d0:	strb	w9, [x21, x10]
  40d9d4:	b	40d9b8 <ferror@plt+0xab28>
  40d9d8:	mov	w27, w14
  40d9dc:	mov	w26, w4
  40d9e0:	mov	x20, xzr
  40d9e4:	ldur	x23, [x29, #-88]
  40d9e8:	mov	x0, x23
  40d9ec:	bl	4027c0 <strlen@plt>
  40d9f0:	stur	x0, [x29, #-32]
  40d9f4:	stur	x23, [x29, #-64]
  40d9f8:	mov	w9, #0x1                   	// #1
  40d9fc:	mov	w16, w19
  40da00:	mov	w4, w26
  40da04:	mov	w14, w27
  40da08:	b	40dab0 <ferror@plt+0xac20>
  40da0c:	mov	w8, #0x1                   	// #1
  40da10:	b	40da8c <ferror@plt+0xabfc>
  40da14:	mov	w4, wzr
  40da18:	mov	x20, xzr
  40da1c:	mov	w16, wzr
  40da20:	mov	w9, w8
  40da24:	b	40dab0 <ferror@plt+0xac20>
  40da28:	tbnz	w19, #0, 40da8c <ferror@plt+0xabfc>
  40da2c:	mov	w9, w8
  40da30:	mov	w16, wzr
  40da34:	cbz	x22, 40da40 <ferror@plt+0xabb0>
  40da38:	mov	w8, #0x27                  	// #39
  40da3c:	strb	w8, [x21]
  40da40:	adrp	x8, 414000 <_obstack_memory_used@@Base+0x21b0>
  40da44:	add	x8, x8, #0x4a4
  40da48:	stur	x8, [x29, #-64]
  40da4c:	mov	w8, #0x1                   	// #1
  40da50:	mov	w4, #0x2                   	// #2
  40da54:	mov	w20, #0x1                   	// #1
  40da58:	stur	x8, [x29, #-32]
  40da5c:	b	40dab0 <ferror@plt+0xac20>
  40da60:	tbz	w19, #0, 40e38c <ferror@plt+0xb4fc>
  40da64:	mov	w8, #0x1                   	// #1
  40da68:	stur	x8, [x29, #-32]
  40da6c:	adrp	x8, 414000 <_obstack_memory_used@@Base+0x21b0>
  40da70:	add	x8, x8, #0xb91
  40da74:	mov	x20, xzr
  40da78:	mov	w4, #0x5                   	// #5
  40da7c:	stur	x8, [x29, #-64]
  40da80:	mov	w9, #0x1                   	// #1
  40da84:	b	40daac <ferror@plt+0xac1c>
  40da88:	tbz	w19, #0, 40e3c0 <ferror@plt+0xb530>
  40da8c:	mov	w9, #0x1                   	// #1
  40da90:	stur	x9, [x29, #-32]
  40da94:	adrp	x9, 414000 <_obstack_memory_used@@Base+0x21b0>
  40da98:	add	x9, x9, #0x4a4
  40da9c:	mov	x20, xzr
  40daa0:	mov	w4, #0x2                   	// #2
  40daa4:	stur	x9, [x29, #-64]
  40daa8:	mov	w9, w8
  40daac:	mov	w16, #0x1                   	// #1
  40dab0:	mov	w15, w9
  40dab4:	ldp	x8, x9, [x29, #-40]
  40dab8:	eor	w17, w16, #0x1
  40dabc:	stur	w17, [x29, #-68]
  40dac0:	mov	x23, xzr
  40dac4:	cmp	x8, #0x0
  40dac8:	cset	w8, eq  // eq = none
  40dacc:	cmp	x9, #0x0
  40dad0:	cset	w9, ne  // ne = any
  40dad4:	cmp	w4, #0x2
  40dad8:	cset	w10, ne  // ne = any
  40dadc:	and	w13, w10, w15
  40dae0:	and	w12, w9, w16
  40dae4:	orr	w10, w10, w17
  40dae8:	and	w17, w9, w13
  40daec:	orr	w9, w13, w16
  40daf0:	eor	w9, w9, #0x1
  40daf4:	cset	w11, eq  // eq = none
  40daf8:	orr	w8, w8, w9
  40dafc:	and	w12, w15, w12
  40db00:	str	w10, [sp, #84]
  40db04:	and	w10, w11, w16
  40db08:	stur	w8, [x29, #-24]
  40db0c:	eor	w8, w15, #0x1
  40db10:	str	w12, [sp, #56]
  40db14:	str	w10, [sp, #76]
  40db18:	stur	w15, [x29, #-72]
  40db1c:	str	w8, [sp, #60]
  40db20:	stp	w16, w4, [x29, #-48]
  40db24:	stur	w17, [x29, #-52]
  40db28:	cmn	x28, #0x1
  40db2c:	b.eq	40db3c <ferror@plt+0xacac>  // b.none
  40db30:	cmp	x23, x28
  40db34:	b.ne	40db44 <ferror@plt+0xacb4>  // b.any
  40db38:	b	40e31c <ferror@plt+0xb48c>
  40db3c:	ldrb	w8, [x24, x23]
  40db40:	cbz	w8, 40e324 <ferror@plt+0xb494>
  40db44:	cbz	w17, 40db84 <ferror@plt+0xacf4>
  40db48:	ldur	x8, [x29, #-32]
  40db4c:	cmp	x8, #0x2
  40db50:	add	x19, x23, x8
  40db54:	b.cc	40db7c <ferror@plt+0xacec>  // b.lo, b.ul, b.last
  40db58:	cmn	x28, #0x1
  40db5c:	b.ne	40db7c <ferror@plt+0xacec>  // b.any
  40db60:	mov	x0, x24
  40db64:	mov	w26, w14
  40db68:	bl	4027c0 <strlen@plt>
  40db6c:	ldp	w17, w16, [x29, #-52]
  40db70:	ldur	w4, [x29, #-44]
  40db74:	mov	w14, w26
  40db78:	mov	x28, x0
  40db7c:	cmp	x19, x28
  40db80:	b.ls	40db8c <ferror@plt+0xacfc>  // b.plast
  40db84:	mov	w27, wzr
  40db88:	b	40dbc4 <ferror@plt+0xad34>
  40db8c:	ldur	x1, [x29, #-64]
  40db90:	ldur	x2, [x29, #-32]
  40db94:	add	x0, x24, x23
  40db98:	mov	w19, w14
  40db9c:	bl	402a30 <bcmp@plt>
  40dba0:	ldur	w9, [x29, #-68]
  40dba4:	cmp	w0, #0x0
  40dba8:	cset	w8, ne  // ne = any
  40dbac:	cset	w27, eq  // eq = none
  40dbb0:	orr	w8, w8, w9
  40dbb4:	tbz	w8, #0, 40e3f8 <ferror@plt+0xb568>
  40dbb8:	ldp	w16, w4, [x29, #-48]
  40dbbc:	ldur	w17, [x29, #-52]
  40dbc0:	mov	w14, w19
  40dbc4:	ldrb	w19, [x24, x23]
  40dbc8:	cmp	w19, #0x7e
  40dbcc:	b.hi	40de0c <ferror@plt+0xaf7c>  // b.pmore
  40dbd0:	adrp	x13, 415000 <_obstack_memory_used@@Base+0x31b0>
  40dbd4:	add	x13, x13, #0x12b
  40dbd8:	adr	x12, 40dbfc <ferror@plt+0xad6c>
  40dbdc:	ldrb	w9, [x13, x19]
  40dbe0:	add	x12, x12, x9, lsl #2
  40dbe4:	mov	w10, wzr
  40dbe8:	mov	w8, wzr
  40dbec:	mov	w26, #0x1                   	// #1
  40dbf0:	mov	w11, #0x6e                  	// #110
  40dbf4:	mov	w9, #0x61                  	// #97
  40dbf8:	br	x12
  40dbfc:	ldur	w9, [x29, #-24]
  40dc00:	tbnz	w9, #0, 40dc20 <ferror@plt+0xad90>
  40dc04:	ldur	x10, [x29, #-40]
  40dc08:	lsr	w9, w19, #5
  40dc0c:	ldr	w9, [x10, w9, uxtw #2]
  40dc10:	lsr	w9, w9, w19
  40dc14:	tbz	w9, #0, 40dc20 <ferror@plt+0xad90>
  40dc18:	mov	w9, w19
  40dc1c:	b	40dc28 <ferror@plt+0xad98>
  40dc20:	mov	w9, w19
  40dc24:	cbz	w27, 40de70 <ferror@plt+0xafe0>
  40dc28:	tbnz	w16, #0, 40e3d0 <ferror@plt+0xb540>
  40dc2c:	cmp	w4, #0x2
  40dc30:	cset	w8, ne  // ne = any
  40dc34:	orr	w8, w8, w14
  40dc38:	tbnz	w8, #0, 40dc7c <ferror@plt+0xadec>
  40dc3c:	cmp	x20, x22
  40dc40:	b.cs	40dc4c <ferror@plt+0xadbc>  // b.hs, b.nlast
  40dc44:	mov	w8, #0x27                  	// #39
  40dc48:	strb	w8, [x21, x20]
  40dc4c:	add	x8, x20, #0x1
  40dc50:	cmp	x8, x22
  40dc54:	b.cs	40dc60 <ferror@plt+0xadd0>  // b.hs, b.nlast
  40dc58:	mov	w10, #0x24                  	// #36
  40dc5c:	strb	w10, [x21, x8]
  40dc60:	add	x8, x20, #0x2
  40dc64:	cmp	x8, x22
  40dc68:	b.cs	40dc74 <ferror@plt+0xade4>  // b.hs, b.nlast
  40dc6c:	mov	w10, #0x27                  	// #39
  40dc70:	strb	w10, [x21, x8]
  40dc74:	add	x20, x20, #0x3
  40dc78:	mov	w14, #0x1                   	// #1
  40dc7c:	cmp	x20, x22
  40dc80:	b.cs	40dc8c <ferror@plt+0xadfc>  // b.hs, b.nlast
  40dc84:	mov	w8, #0x5c                  	// #92
  40dc88:	strb	w8, [x21, x20]
  40dc8c:	add	x20, x20, #0x1
  40dc90:	cmp	x20, x22
  40dc94:	b.cs	40dc9c <ferror@plt+0xae0c>  // b.hs, b.nlast
  40dc98:	strb	w9, [x21, x20]
  40dc9c:	add	x20, x20, #0x1
  40dca0:	and	w25, w25, w26
  40dca4:	add	x23, x23, #0x1
  40dca8:	cmn	x28, #0x1
  40dcac:	b.ne	40db30 <ferror@plt+0xaca0>  // b.any
  40dcb0:	b	40db3c <ferror@plt+0xacac>
  40dcb4:	cmp	x28, #0x1
  40dcb8:	b.eq	40dcdc <ferror@plt+0xae4c>  // b.none
  40dcbc:	cmn	x28, #0x1
  40dcc0:	b.ne	40dce0 <ferror@plt+0xae50>  // b.any
  40dcc4:	ldrb	w8, [x24, #1]
  40dcc8:	cbz	w8, 40dcdc <ferror@plt+0xae4c>
  40dccc:	mov	w8, wzr
  40dcd0:	mov	w26, wzr
  40dcd4:	mov	x28, #0xffffffffffffffff    	// #-1
  40dcd8:	b	40dbfc <ferror@plt+0xad6c>
  40dcdc:	cbz	x23, 40dcec <ferror@plt+0xae5c>
  40dce0:	mov	w8, wzr
  40dce4:	mov	w26, wzr
  40dce8:	b	40dbfc <ferror@plt+0xad6c>
  40dcec:	mov	w10, #0x1                   	// #1
  40dcf0:	cmp	w4, #0x2
  40dcf4:	b.ne	40dcfc <ferror@plt+0xae6c>  // b.any
  40dcf8:	tbnz	w16, #0, 40e3d0 <ferror@plt+0xb540>
  40dcfc:	mov	w8, wzr
  40dd00:	mov	w26, w10
  40dd04:	b	40dbfc <ferror@plt+0xad6c>
  40dd08:	cmp	w4, #0x2
  40dd0c:	b.ne	40de58 <ferror@plt+0xafc8>  // b.any
  40dd10:	tbz	w16, #0, 40de64 <ferror@plt+0xafd4>
  40dd14:	b	40e3d0 <ferror@plt+0xb540>
  40dd18:	mov	w9, #0x66                  	// #102
  40dd1c:	b	40deb4 <ferror@plt+0xb024>
  40dd20:	mov	w11, #0x74                  	// #116
  40dd24:	b	40dd34 <ferror@plt+0xaea4>
  40dd28:	mov	w9, #0x62                  	// #98
  40dd2c:	b	40deb4 <ferror@plt+0xb024>
  40dd30:	mov	w11, #0x72                  	// #114
  40dd34:	ldr	w8, [sp, #84]
  40dd38:	mov	w9, w11
  40dd3c:	tbnz	w8, #0, 40deb4 <ferror@plt+0xb024>
  40dd40:	b	40e3d0 <ferror@plt+0xb540>
  40dd44:	ldur	w8, [x29, #-72]
  40dd48:	tbz	w8, #0, 40dec8 <ferror@plt+0xb038>
  40dd4c:	cmp	w4, #0x2
  40dd50:	tbnz	w16, #0, 40e4e8 <ferror@plt+0xb658>
  40dd54:	cset	w8, ne  // ne = any
  40dd58:	orr	w8, w8, w14
  40dd5c:	tbz	w8, #0, 40e1f8 <ferror@plt+0xb368>
  40dd60:	mov	x8, x20
  40dd64:	cmp	x8, x22
  40dd68:	b.cc	40e240 <ferror@plt+0xb3b0>  // b.lo, b.ul, b.last
  40dd6c:	b	40e248 <ferror@plt+0xb3b8>
  40dd70:	cmp	w4, #0x5
  40dd74:	b.eq	40dff4 <ferror@plt+0xb164>  // b.none
  40dd78:	cmp	w4, #0x2
  40dd7c:	b.ne	40e0a4 <ferror@plt+0xb214>  // b.any
  40dd80:	tbz	w16, #0, 40e0a4 <ferror@plt+0xb214>
  40dd84:	b	40e3d0 <ferror@plt+0xb540>
  40dd88:	mov	w9, #0x76                  	// #118
  40dd8c:	b	40deb4 <ferror@plt+0xb024>
  40dd90:	cmp	w4, #0x2
  40dd94:	b.ne	40ded8 <ferror@plt+0xb048>  // b.any
  40dd98:	tbnz	w16, #0, 40e3d0 <ferror@plt+0xb540>
  40dd9c:	ldr	x10, [sp, #64]
  40dda0:	cmp	x22, #0x0
  40dda4:	cset	w8, eq  // eq = none
  40dda8:	cmp	x10, #0x0
  40ddac:	cset	w9, ne  // ne = any
  40ddb0:	orr	w8, w9, w8
  40ddb4:	cmp	w8, #0x0
  40ddb8:	csel	x10, x10, x22, ne  // ne = any
  40ddbc:	csel	x22, x22, xzr, ne  // ne = any
  40ddc0:	cmp	x20, x22
  40ddc4:	str	x10, [sp, #64]
  40ddc8:	b.cs	40ddd4 <ferror@plt+0xaf44>  // b.hs, b.nlast
  40ddcc:	mov	w8, #0x27                  	// #39
  40ddd0:	strb	w8, [x21, x20]
  40ddd4:	add	x8, x20, #0x1
  40ddd8:	cmp	x8, x22
  40dddc:	b.cs	40dde8 <ferror@plt+0xaf58>  // b.hs, b.nlast
  40dde0:	mov	w9, #0x5c                  	// #92
  40dde4:	strb	w9, [x21, x8]
  40dde8:	add	x8, x20, #0x2
  40ddec:	cmp	x8, x22
  40ddf0:	b.cs	40ddfc <ferror@plt+0xaf6c>  // b.hs, b.nlast
  40ddf4:	mov	w9, #0x27                  	// #39
  40ddf8:	strb	w9, [x21, x8]
  40ddfc:	mov	w14, wzr
  40de00:	mov	w8, wzr
  40de04:	add	x20, x20, #0x3
  40de08:	b	40dedc <ferror@plt+0xb04c>
  40de0c:	ldr	x8, [sp, #48]
  40de10:	str	w14, [sp, #28]
  40de14:	cmp	x8, #0x1
  40de18:	b.ne	40def0 <ferror@plt+0xb060>  // b.any
  40de1c:	bl	402bc0 <__ctype_b_loc@plt>
  40de20:	ldr	x8, [x0]
  40de24:	mov	w11, #0x1                   	// #1
  40de28:	ldrh	w8, [x8, x19, lsl #1]
  40de2c:	ubfx	w26, w8, #14, #1
  40de30:	ldr	w8, [sp, #60]
  40de34:	ldp	w16, w4, [x29, #-48]
  40de38:	ldr	w14, [sp, #28]
  40de3c:	ldur	w17, [x29, #-52]
  40de40:	cmp	x11, #0x1
  40de44:	orr	w8, w26, w8
  40de48:	b.hi	40e0b4 <ferror@plt+0xb224>  // b.pmore
  40de4c:	tbz	w8, #0, 40e0b4 <ferror@plt+0xb224>
  40de50:	mov	w8, wzr
  40de54:	b	40dbfc <ferror@plt+0xad6c>
  40de58:	ldr	w8, [sp, #56]
  40de5c:	mov	w9, #0x5c                  	// #92
  40de60:	tbz	w8, #0, 40deb4 <ferror@plt+0xb024>
  40de64:	mov	w8, wzr
  40de68:	mov	w26, wzr
  40de6c:	mov	w19, #0x5c                  	// #92
  40de70:	tbnz	w8, #0, 40dea4 <ferror@plt+0xb014>
  40de74:	tbz	w14, #0, 40dea4 <ferror@plt+0xb014>
  40de78:	cmp	x20, x22
  40de7c:	b.cs	40de88 <ferror@plt+0xaff8>  // b.hs, b.nlast
  40de80:	mov	w8, #0x27                  	// #39
  40de84:	strb	w8, [x21, x20]
  40de88:	add	x8, x20, #0x1
  40de8c:	cmp	x8, x22
  40de90:	b.cs	40de9c <ferror@plt+0xb00c>  // b.hs, b.nlast
  40de94:	mov	w9, #0x27                  	// #39
  40de98:	strb	w9, [x21, x8]
  40de9c:	mov	w14, wzr
  40dea0:	add	x20, x20, #0x2
  40dea4:	mov	w9, w19
  40dea8:	cmp	x20, x22
  40deac:	b.cc	40dc98 <ferror@plt+0xae08>  // b.lo, b.ul, b.last
  40deb0:	b	40dc9c <ferror@plt+0xae0c>
  40deb4:	ldur	w10, [x29, #-72]
  40deb8:	mov	w8, wzr
  40debc:	mov	w26, wzr
  40dec0:	tbz	w10, #0, 40dbfc <ferror@plt+0xad6c>
  40dec4:	b	40dc28 <ferror@plt+0xad98>
  40dec8:	ldr	w8, [sp, #80]
  40decc:	tbnz	w8, #0, 40dca4 <ferror@plt+0xae14>
  40ded0:	mov	w19, wzr
  40ded4:	b	40dce0 <ferror@plt+0xae50>
  40ded8:	mov	w8, wzr
  40dedc:	mov	w9, #0x1                   	// #1
  40dee0:	mov	w19, #0x27                  	// #39
  40dee4:	str	w9, [sp, #72]
  40dee8:	mov	w26, #0x1                   	// #1
  40deec:	b	40dbfc <ferror@plt+0xad6c>
  40def0:	cmn	x28, #0x1
  40def4:	stur	xzr, [x29, #-16]
  40def8:	b.ne	40df08 <ferror@plt+0xb078>  // b.any
  40defc:	mov	x0, x24
  40df00:	bl	4027c0 <strlen@plt>
  40df04:	mov	x28, x0
  40df08:	ldr	x8, [sp, #96]
  40df0c:	mov	x11, xzr
  40df10:	mov	w26, #0x1                   	// #1
  40df14:	str	x21, [sp, #32]
  40df18:	add	x8, x8, x23
  40df1c:	str	x8, [sp, #16]
  40df20:	b	40df58 <ferror@plt+0xb0c8>
  40df24:	ldur	w0, [x29, #-20]
  40df28:	bl	402de0 <iswprint@plt>
  40df2c:	ldr	x21, [sp, #40]
  40df30:	cmp	w0, #0x0
  40df34:	cset	w8, ne  // ne = any
  40df38:	sub	x0, x29, #0x10
  40df3c:	and	w26, w26, w8
  40df40:	add	x21, x24, x21
  40df44:	bl	402b20 <mbsinit@plt>
  40df48:	mov	x11, x21
  40df4c:	ldr	x21, [sp, #32]
  40df50:	ldur	x24, [x29, #-80]
  40df54:	cbnz	w0, 40de30 <ferror@plt+0xafa0>
  40df58:	add	x21, x11, x23
  40df5c:	add	x1, x24, x21
  40df60:	sub	x2, x28, x21
  40df64:	sub	x0, x29, #0x14
  40df68:	sub	x3, x29, #0x10
  40df6c:	str	x11, [sp, #40]
  40df70:	bl	4119c4 <ferror@plt+0xeb34>
  40df74:	cbz	x0, 40e2fc <ferror@plt+0xb46c>
  40df78:	mov	x24, x0
  40df7c:	cmn	x0, #0x1
  40df80:	b.eq	40e2f8 <ferror@plt+0xb468>  // b.none
  40df84:	cmn	x24, #0x2
  40df88:	b.eq	40e2bc <ferror@plt+0xb42c>  // b.none
  40df8c:	ldr	w9, [sp, #76]
  40df90:	ldr	x21, [sp, #32]
  40df94:	cmp	x24, #0x2
  40df98:	cset	w8, cc  // cc = lo, ul, last
  40df9c:	eor	w9, w9, #0x1
  40dfa0:	mov	x12, #0x2b                  	// #43
  40dfa4:	orr	w8, w9, w8
  40dfa8:	mov	w11, #0x1                   	// #1
  40dfac:	movk	x12, #0x2, lsl #32
  40dfb0:	tbnz	w8, #0, 40df24 <ferror@plt+0xb094>
  40dfb4:	ldr	x9, [sp, #40]
  40dfb8:	ldr	x10, [sp, #16]
  40dfbc:	sub	x8, x24, #0x1
  40dfc0:	add	x9, x10, x9
  40dfc4:	b	40dfd4 <ferror@plt+0xb144>
  40dfc8:	subs	x8, x8, #0x1
  40dfcc:	add	x9, x9, #0x1
  40dfd0:	b.eq	40df24 <ferror@plt+0xb094>  // b.none
  40dfd4:	ldrb	w10, [x9]
  40dfd8:	sub	w10, w10, #0x5b
  40dfdc:	cmp	w10, #0x21
  40dfe0:	b.hi	40dfc8 <ferror@plt+0xb138>  // b.pmore
  40dfe4:	lsl	x10, x11, x10
  40dfe8:	tst	x10, x12
  40dfec:	b.eq	40dfc8 <ferror@plt+0xb138>  // b.none
  40dff0:	b	40e404 <ferror@plt+0xb574>
  40dff4:	ldr	w8, [sp, #80]
  40dff8:	tbz	w8, #2, 40e0a4 <ferror@plt+0xb214>
  40dffc:	add	x9, x23, #0x2
  40e000:	cmp	x9, x28
  40e004:	b.cs	40e0a4 <ferror@plt+0xb214>  // b.hs, b.nlast
  40e008:	add	x8, x23, x24
  40e00c:	ldrb	w8, [x8, #1]
  40e010:	cmp	w8, #0x3f
  40e014:	b.ne	40e0a4 <ferror@plt+0xb214>  // b.any
  40e018:	ldrb	w19, [x24, x9]
  40e01c:	mov	w8, wzr
  40e020:	cmp	w19, #0x3e
  40e024:	b.hi	40e310 <ferror@plt+0xb480>  // b.pmore
  40e028:	mov	w10, #0x1                   	// #1
  40e02c:	mov	x11, #0xa38200000000        	// #179778741075968
  40e030:	lsl	x10, x10, x19
  40e034:	movk	x11, #0x7000, lsl #48
  40e038:	tst	x10, x11
  40e03c:	b.eq	40e310 <ferror@plt+0xb480>  // b.none
  40e040:	tbnz	w16, #0, 40e3d0 <ferror@plt+0xb540>
  40e044:	cmp	x20, x22
  40e048:	b.cs	40e054 <ferror@plt+0xb1c4>  // b.hs, b.nlast
  40e04c:	mov	w8, #0x3f                  	// #63
  40e050:	strb	w8, [x21, x20]
  40e054:	add	x8, x20, #0x1
  40e058:	cmp	x8, x22
  40e05c:	b.cs	40e068 <ferror@plt+0xb1d8>  // b.hs, b.nlast
  40e060:	mov	w10, #0x22                  	// #34
  40e064:	strb	w10, [x21, x8]
  40e068:	add	x8, x20, #0x2
  40e06c:	cmp	x8, x22
  40e070:	b.cs	40e07c <ferror@plt+0xb1ec>  // b.hs, b.nlast
  40e074:	mov	w10, #0x22                  	// #34
  40e078:	strb	w10, [x21, x8]
  40e07c:	add	x8, x20, #0x3
  40e080:	cmp	x8, x22
  40e084:	b.cs	40e090 <ferror@plt+0xb200>  // b.hs, b.nlast
  40e088:	mov	w10, #0x3f                  	// #63
  40e08c:	strb	w10, [x21, x8]
  40e090:	mov	w8, wzr
  40e094:	mov	w26, wzr
  40e098:	add	x20, x20, #0x4
  40e09c:	mov	x23, x9
  40e0a0:	b	40dbfc <ferror@plt+0xad6c>
  40e0a4:	mov	w8, wzr
  40e0a8:	mov	w26, wzr
  40e0ac:	mov	w19, #0x3f                  	// #63
  40e0b0:	b	40dbfc <ferror@plt+0xad6c>
  40e0b4:	mov	w10, wzr
  40e0b8:	add	x9, x11, x23
  40e0bc:	b	40e0d0 <ferror@plt+0xb240>
  40e0c0:	ldr	x12, [sp, #96]
  40e0c4:	add	x20, x20, #0x1
  40e0c8:	ldrb	w19, [x12, x23]
  40e0cc:	mov	x23, x11
  40e0d0:	tbz	w8, #0, 40e0f4 <ferror@plt+0xb264>
  40e0d4:	tbz	w27, #0, 40e1a0 <ferror@plt+0xb310>
  40e0d8:	cmp	x20, x22
  40e0dc:	b.cs	40e0e8 <ferror@plt+0xb258>  // b.hs, b.nlast
  40e0e0:	mov	w11, #0x5c                  	// #92
  40e0e4:	strb	w11, [x21, x20]
  40e0e8:	mov	w27, wzr
  40e0ec:	add	x20, x20, #0x1
  40e0f0:	b	40e1a4 <ferror@plt+0xb314>
  40e0f4:	tbnz	w16, #0, 40e3d0 <ferror@plt+0xb540>
  40e0f8:	cmp	w4, #0x2
  40e0fc:	cset	w10, ne  // ne = any
  40e100:	orr	w10, w10, w14
  40e104:	tbnz	w10, #0, 40e148 <ferror@plt+0xb2b8>
  40e108:	cmp	x20, x22
  40e10c:	b.cs	40e118 <ferror@plt+0xb288>  // b.hs, b.nlast
  40e110:	mov	w10, #0x27                  	// #39
  40e114:	strb	w10, [x21, x20]
  40e118:	add	x10, x20, #0x1
  40e11c:	cmp	x10, x22
  40e120:	b.cs	40e12c <ferror@plt+0xb29c>  // b.hs, b.nlast
  40e124:	mov	w11, #0x24                  	// #36
  40e128:	strb	w11, [x21, x10]
  40e12c:	add	x10, x20, #0x2
  40e130:	cmp	x10, x22
  40e134:	b.cs	40e140 <ferror@plt+0xb2b0>  // b.hs, b.nlast
  40e138:	mov	w11, #0x27                  	// #39
  40e13c:	strb	w11, [x21, x10]
  40e140:	add	x20, x20, #0x3
  40e144:	mov	w14, #0x1                   	// #1
  40e148:	cmp	x20, x22
  40e14c:	b.cs	40e158 <ferror@plt+0xb2c8>  // b.hs, b.nlast
  40e150:	mov	w10, #0x5c                  	// #92
  40e154:	strb	w10, [x21, x20]
  40e158:	add	x10, x20, #0x1
  40e15c:	cmp	x10, x22
  40e160:	b.cs	40e170 <ferror@plt+0xb2e0>  // b.hs, b.nlast
  40e164:	mov	w11, #0x30                  	// #48
  40e168:	bfxil	w11, w19, #6, #2
  40e16c:	strb	w11, [x21, x10]
  40e170:	add	x10, x20, #0x2
  40e174:	cmp	x10, x22
  40e178:	b.cs	40e188 <ferror@plt+0xb2f8>  // b.hs, b.nlast
  40e17c:	mov	w11, #0x30                  	// #48
  40e180:	bfxil	w11, w19, #3, #3
  40e184:	strb	w11, [x21, x10]
  40e188:	mov	w11, #0x30                  	// #48
  40e18c:	bfxil	w11, w19, #0, #3
  40e190:	add	x20, x20, #0x3
  40e194:	mov	w10, #0x1                   	// #1
  40e198:	mov	w19, w11
  40e19c:	b	40e1a4 <ferror@plt+0xb314>
  40e1a0:	mov	w27, wzr
  40e1a4:	add	x11, x23, #0x1
  40e1a8:	cmp	x9, x11
  40e1ac:	b.ls	40e2b0 <ferror@plt+0xb420>  // b.plast
  40e1b0:	and	w12, w10, #0x1
  40e1b4:	orn	w12, w12, w14
  40e1b8:	tbnz	w12, #0, 40e1e8 <ferror@plt+0xb358>
  40e1bc:	cmp	x20, x22
  40e1c0:	b.cs	40e1cc <ferror@plt+0xb33c>  // b.hs, b.nlast
  40e1c4:	mov	w12, #0x27                  	// #39
  40e1c8:	strb	w12, [x21, x20]
  40e1cc:	add	x12, x20, #0x1
  40e1d0:	cmp	x12, x22
  40e1d4:	b.cs	40e1e0 <ferror@plt+0xb350>  // b.hs, b.nlast
  40e1d8:	mov	w13, #0x27                  	// #39
  40e1dc:	strb	w13, [x21, x12]
  40e1e0:	mov	w14, wzr
  40e1e4:	add	x20, x20, #0x2
  40e1e8:	cmp	x20, x22
  40e1ec:	b.cs	40e0c0 <ferror@plt+0xb230>  // b.hs, b.nlast
  40e1f0:	strb	w19, [x21, x20]
  40e1f4:	b	40e0c0 <ferror@plt+0xb230>
  40e1f8:	cmp	x20, x22
  40e1fc:	b.cs	40e208 <ferror@plt+0xb378>  // b.hs, b.nlast
  40e200:	mov	w8, #0x27                  	// #39
  40e204:	strb	w8, [x21, x20]
  40e208:	add	x8, x20, #0x1
  40e20c:	cmp	x8, x22
  40e210:	b.cs	40e21c <ferror@plt+0xb38c>  // b.hs, b.nlast
  40e214:	mov	w9, #0x24                  	// #36
  40e218:	strb	w9, [x21, x8]
  40e21c:	add	x8, x20, #0x2
  40e220:	cmp	x8, x22
  40e224:	b.cs	40e230 <ferror@plt+0xb3a0>  // b.hs, b.nlast
  40e228:	mov	w9, #0x27                  	// #39
  40e22c:	strb	w9, [x21, x8]
  40e230:	add	x8, x20, #0x3
  40e234:	mov	w14, #0x1                   	// #1
  40e238:	cmp	x8, x22
  40e23c:	b.cs	40e248 <ferror@plt+0xb3b8>  // b.hs, b.nlast
  40e240:	mov	w9, #0x5c                  	// #92
  40e244:	strb	w9, [x21, x8]
  40e248:	cmp	w4, #0x2
  40e24c:	add	x20, x8, #0x1
  40e250:	b.eq	40e2a0 <ferror@plt+0xb410>  // b.none
  40e254:	add	x9, x23, #0x1
  40e258:	cmp	x9, x28
  40e25c:	b.cs	40e2a0 <ferror@plt+0xb410>  // b.hs, b.nlast
  40e260:	ldrb	w9, [x24, x9]
  40e264:	sub	w9, w9, #0x30
  40e268:	cmp	w9, #0x9
  40e26c:	b.hi	40e2a0 <ferror@plt+0xb410>  // b.pmore
  40e270:	cmp	x20, x22
  40e274:	b.cs	40e280 <ferror@plt+0xb3f0>  // b.hs, b.nlast
  40e278:	mov	w9, #0x30                  	// #48
  40e27c:	strb	w9, [x21, x20]
  40e280:	add	x9, x8, #0x2
  40e284:	cmp	x9, x22
  40e288:	b.cs	40e294 <ferror@plt+0xb404>  // b.hs, b.nlast
  40e28c:	mov	w10, #0x30                  	// #48
  40e290:	strb	w10, [x21, x9]
  40e294:	mov	w26, wzr
  40e298:	add	x20, x8, #0x3
  40e29c:	b	40e2a4 <ferror@plt+0xb414>
  40e2a0:	mov	w26, wzr
  40e2a4:	mov	w8, #0x1                   	// #1
  40e2a8:	mov	w19, #0x30                  	// #48
  40e2ac:	b	40dbfc <ferror@plt+0xad6c>
  40e2b0:	and	w8, w10, #0x1
  40e2b4:	tbz	w8, #0, 40de74 <ferror@plt+0xafe4>
  40e2b8:	b	40dea4 <ferror@plt+0xb014>
  40e2bc:	cmp	x28, x21
  40e2c0:	b.ls	40e2f8 <ferror@plt+0xb468>  // b.plast
  40e2c4:	ldur	x24, [x29, #-80]
  40e2c8:	ldp	x21, x11, [sp, #32]
  40e2cc:	sub	x8, x28, x23
  40e2d0:	add	x9, x24, x23
  40e2d4:	ldrb	w10, [x9, x11]
  40e2d8:	cbz	w10, 40e308 <ferror@plt+0xb478>
  40e2dc:	add	x11, x11, #0x1
  40e2e0:	add	x10, x23, x11
  40e2e4:	cmp	x10, x28
  40e2e8:	b.cc	40e2d4 <ferror@plt+0xb444>  // b.lo, b.ul, b.last
  40e2ec:	mov	w26, wzr
  40e2f0:	mov	x11, x8
  40e2f4:	b	40de30 <ferror@plt+0xafa0>
  40e2f8:	mov	w26, wzr
  40e2fc:	ldp	x21, x11, [sp, #32]
  40e300:	ldur	x24, [x29, #-80]
  40e304:	b	40de30 <ferror@plt+0xafa0>
  40e308:	mov	w26, wzr
  40e30c:	b	40de30 <ferror@plt+0xafa0>
  40e310:	mov	w19, #0x3f                  	// #63
  40e314:	mov	w26, w8
  40e318:	b	40dbfc <ferror@plt+0xad6c>
  40e31c:	mov	x28, x23
  40e320:	b	40e328 <ferror@plt+0xb498>
  40e324:	mov	x28, #0xffffffffffffffff    	// #-1
  40e328:	cmp	w4, #0x2
  40e32c:	ldur	w10, [x29, #-72]
  40e330:	cset	w8, eq  // eq = none
  40e334:	cmp	x20, #0x0
  40e338:	cset	w9, eq  // eq = none
  40e33c:	and	w8, w8, w9
  40e340:	and	w8, w16, w8
  40e344:	tbnz	w8, #0, 40e3d4 <ferror@plt+0xb544>
  40e348:	cmp	w4, #0x2
  40e34c:	cset	w8, ne  // ne = any
  40e350:	orr	w8, w16, w8
  40e354:	tbnz	w8, #0, 40e4a0 <ferror@plt+0xb610>
  40e358:	ldr	w8, [sp, #72]
  40e35c:	eor	w8, w8, #0x1
  40e360:	tbnz	w8, #0, 40e4a0 <ferror@plt+0xb610>
  40e364:	tbnz	w25, #0, 40e470 <ferror@plt+0xb5e0>
  40e368:	ldr	x24, [sp, #64]
  40e36c:	mov	w19, wzr
  40e370:	cbz	x24, 40e49c <ferror@plt+0xb60c>
  40e374:	mov	w4, #0x2                   	// #2
  40e378:	mov	w8, w10
  40e37c:	mov	w25, w19
  40e380:	mov	w16, w19
  40e384:	cbz	x22, 40d924 <ferror@plt+0xaa94>
  40e388:	b	40e4a0 <ferror@plt+0xb610>
  40e38c:	mov	w16, wzr
  40e390:	cbz	x22, 40e39c <ferror@plt+0xb50c>
  40e394:	mov	w8, #0x22                  	// #34
  40e398:	strb	w8, [x21]
  40e39c:	adrp	x8, 414000 <_obstack_memory_used@@Base+0x21b0>
  40e3a0:	add	x8, x8, #0xb91
  40e3a4:	stur	x8, [x29, #-64]
  40e3a8:	mov	w8, #0x1                   	// #1
  40e3ac:	mov	w20, #0x1                   	// #1
  40e3b0:	mov	w4, #0x5                   	// #5
  40e3b4:	stur	x8, [x29, #-32]
  40e3b8:	mov	w9, #0x1                   	// #1
  40e3bc:	b	40dab0 <ferror@plt+0xac20>
  40e3c0:	mov	w9, #0x1                   	// #1
  40e3c4:	mov	w16, wzr
  40e3c8:	cbnz	x22, 40da38 <ferror@plt+0xaba8>
  40e3cc:	b	40da40 <ferror@plt+0xabb0>
  40e3d0:	ldur	w10, [x29, #-72]
  40e3d4:	tst	w10, #0x1
  40e3d8:	mov	w8, #0x2                   	// #2
  40e3dc:	mov	w9, #0x4                   	// #4
  40e3e0:	csel	w8, w9, w8, ne  // ne = any
  40e3e4:	cmp	w4, #0x2
  40e3e8:	b.ne	40e3f0 <ferror@plt+0xb560>  // b.any
  40e3ec:	mov	w4, w8
  40e3f0:	ldr	x7, [sp, #88]
  40e3f4:	b	40e420 <ferror@plt+0xb590>
  40e3f8:	ldr	x7, [sp, #88]
  40e3fc:	ldur	w4, [x29, #-44]
  40e400:	b	40e420 <ferror@plt+0xb590>
  40e404:	ldur	w8, [x29, #-72]
  40e408:	ldr	x7, [sp, #88]
  40e40c:	ldur	x24, [x29, #-80]
  40e410:	mov	w9, #0x4                   	// #4
  40e414:	tst	w8, #0x1
  40e418:	mov	w8, #0x2                   	// #2
  40e41c:	csel	w4, w9, w8, ne  // ne = any
  40e420:	ldr	w8, [sp, #80]
  40e424:	mov	x0, x21
  40e428:	mov	x1, x22
  40e42c:	mov	x2, x24
  40e430:	and	w5, w8, #0xfffffffd
  40e434:	ldur	x8, [x29, #-88]
  40e438:	mov	x3, x28
  40e43c:	mov	x6, xzr
  40e440:	str	x8, [sp]
  40e444:	bl	40d8a0 <ferror@plt+0xaa10>
  40e448:	mov	x20, x0
  40e44c:	mov	x0, x20
  40e450:	ldp	x20, x19, [sp, #272]
  40e454:	ldp	x22, x21, [sp, #256]
  40e458:	ldp	x24, x23, [sp, #240]
  40e45c:	ldp	x26, x25, [sp, #224]
  40e460:	ldp	x28, x27, [sp, #208]
  40e464:	ldp	x29, x30, [sp, #192]
  40e468:	add	sp, sp, #0x120
  40e46c:	ret
  40e470:	ldur	x8, [x29, #-88]
  40e474:	ldr	x1, [sp, #64]
  40e478:	ldur	x2, [x29, #-80]
  40e47c:	ldr	w5, [sp, #80]
  40e480:	ldur	x6, [x29, #-40]
  40e484:	ldr	x7, [sp, #88]
  40e488:	mov	w4, #0x5                   	// #5
  40e48c:	str	x8, [sp]
  40e490:	mov	x0, x21
  40e494:	mov	x3, x28
  40e498:	b	40e444 <ferror@plt+0xb5b4>
  40e49c:	mov	w16, w19
  40e4a0:	ldur	x8, [x29, #-64]
  40e4a4:	cbz	x8, 40e4d8 <ferror@plt+0xb648>
  40e4a8:	tbnz	w16, #0, 40e4d8 <ferror@plt+0xb648>
  40e4ac:	ldrb	w9, [x8]
  40e4b0:	cbz	w9, 40e4d8 <ferror@plt+0xb648>
  40e4b4:	add	x8, x8, #0x1
  40e4b8:	b	40e4c8 <ferror@plt+0xb638>
  40e4bc:	ldrb	w9, [x8], #1
  40e4c0:	add	x20, x20, #0x1
  40e4c4:	cbz	w9, 40e4d8 <ferror@plt+0xb648>
  40e4c8:	cmp	x20, x22
  40e4cc:	b.cs	40e4bc <ferror@plt+0xb62c>  // b.hs, b.nlast
  40e4d0:	strb	w9, [x21, x20]
  40e4d4:	b	40e4bc <ferror@plt+0xb62c>
  40e4d8:	cmp	x20, x22
  40e4dc:	b.cs	40e44c <ferror@plt+0xb5bc>  // b.hs, b.nlast
  40e4e0:	strb	wzr, [x21, x20]
  40e4e4:	b	40e44c <ferror@plt+0xb5bc>
  40e4e8:	b.ne	40e3f0 <ferror@plt+0xb560>  // b.any
  40e4ec:	mov	w4, #0x4                   	// #4
  40e4f0:	b	40e3f0 <ferror@plt+0xb560>
  40e4f4:	bl	402ae0 <abort@plt>
  40e4f8:	sub	sp, sp, #0x60
  40e4fc:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  40e500:	add	x8, x8, #0xbb8
  40e504:	cmp	x2, #0x0
  40e508:	stp	x29, x30, [sp, #16]
  40e50c:	stp	x26, x25, [sp, #32]
  40e510:	stp	x24, x23, [sp, #48]
  40e514:	stp	x22, x21, [sp, #64]
  40e518:	stp	x20, x19, [sp, #80]
  40e51c:	add	x29, sp, #0x10
  40e520:	mov	x19, x1
  40e524:	mov	x20, x0
  40e528:	csel	x25, x8, x2, eq  // eq = none
  40e52c:	bl	402e00 <__errno_location@plt>
  40e530:	ldp	w4, w8, [x25]
  40e534:	ldp	x7, x9, [x25, #40]
  40e538:	ldr	w26, [x0]
  40e53c:	add	x23, x25, #0x8
  40e540:	orr	w22, w8, #0x1
  40e544:	mov	x21, x0
  40e548:	mov	x0, xzr
  40e54c:	mov	x1, xzr
  40e550:	mov	x2, x20
  40e554:	mov	x3, x19
  40e558:	mov	w5, w22
  40e55c:	mov	x6, x23
  40e560:	str	x9, [sp]
  40e564:	bl	40d8a0 <ferror@plt+0xaa10>
  40e568:	add	x24, x0, #0x1
  40e56c:	mov	x0, x24
  40e570:	bl	41078c <ferror@plt+0xd8fc>
  40e574:	ldr	w4, [x25]
  40e578:	ldp	x7, x8, [x25, #40]
  40e57c:	mov	x1, x24
  40e580:	mov	x2, x20
  40e584:	mov	x3, x19
  40e588:	mov	w5, w22
  40e58c:	mov	x6, x23
  40e590:	mov	x25, x0
  40e594:	str	x8, [sp]
  40e598:	bl	40d8a0 <ferror@plt+0xaa10>
  40e59c:	str	w26, [x21]
  40e5a0:	mov	x0, x25
  40e5a4:	ldp	x20, x19, [sp, #80]
  40e5a8:	ldp	x22, x21, [sp, #64]
  40e5ac:	ldp	x24, x23, [sp, #48]
  40e5b0:	ldp	x26, x25, [sp, #32]
  40e5b4:	ldp	x29, x30, [sp, #16]
  40e5b8:	add	sp, sp, #0x60
  40e5bc:	ret
  40e5c0:	sub	sp, sp, #0x70
  40e5c4:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  40e5c8:	add	x8, x8, #0xbb8
  40e5cc:	cmp	x3, #0x0
  40e5d0:	stp	x29, x30, [sp, #16]
  40e5d4:	stp	x28, x27, [sp, #32]
  40e5d8:	stp	x26, x25, [sp, #48]
  40e5dc:	stp	x24, x23, [sp, #64]
  40e5e0:	stp	x22, x21, [sp, #80]
  40e5e4:	stp	x20, x19, [sp, #96]
  40e5e8:	add	x29, sp, #0x10
  40e5ec:	mov	x19, x2
  40e5f0:	mov	x22, x1
  40e5f4:	mov	x23, x0
  40e5f8:	csel	x21, x8, x3, eq  // eq = none
  40e5fc:	bl	402e00 <__errno_location@plt>
  40e600:	ldp	w4, w8, [x21]
  40e604:	cmp	x19, #0x0
  40e608:	ldp	x7, x9, [x21, #40]
  40e60c:	ldr	w28, [x0]
  40e610:	cset	w10, eq  // eq = none
  40e614:	orr	w25, w8, w10
  40e618:	add	x26, x21, #0x8
  40e61c:	mov	x24, x0
  40e620:	mov	x0, xzr
  40e624:	mov	x1, xzr
  40e628:	mov	x2, x23
  40e62c:	mov	x3, x22
  40e630:	mov	w5, w25
  40e634:	mov	x6, x26
  40e638:	str	x9, [sp]
  40e63c:	bl	40d8a0 <ferror@plt+0xaa10>
  40e640:	add	x27, x0, #0x1
  40e644:	mov	x20, x0
  40e648:	mov	x0, x27
  40e64c:	bl	41078c <ferror@plt+0xd8fc>
  40e650:	ldr	w4, [x21]
  40e654:	ldp	x7, x8, [x21, #40]
  40e658:	mov	x1, x27
  40e65c:	mov	x2, x23
  40e660:	mov	x3, x22
  40e664:	mov	w5, w25
  40e668:	mov	x6, x26
  40e66c:	mov	x21, x0
  40e670:	str	x8, [sp]
  40e674:	bl	40d8a0 <ferror@plt+0xaa10>
  40e678:	str	w28, [x24]
  40e67c:	cbz	x19, 40e684 <ferror@plt+0xb7f4>
  40e680:	str	x20, [x19]
  40e684:	mov	x0, x21
  40e688:	ldp	x20, x19, [sp, #96]
  40e68c:	ldp	x22, x21, [sp, #80]
  40e690:	ldp	x24, x23, [sp, #64]
  40e694:	ldp	x26, x25, [sp, #48]
  40e698:	ldp	x28, x27, [sp, #32]
  40e69c:	ldp	x29, x30, [sp, #16]
  40e6a0:	add	sp, sp, #0x70
  40e6a4:	ret
  40e6a8:	stp	x29, x30, [sp, #-64]!
  40e6ac:	stp	x20, x19, [sp, #48]
  40e6b0:	adrp	x20, 426000 <_obstack_memory_used@@Base+0x141b0>
  40e6b4:	stp	x22, x21, [sp, #32]
  40e6b8:	ldr	w8, [x20, #1216]
  40e6bc:	adrp	x21, 426000 <_obstack_memory_used@@Base+0x141b0>
  40e6c0:	ldr	x19, [x21, #1208]
  40e6c4:	str	x23, [sp, #16]
  40e6c8:	cmp	w8, #0x2
  40e6cc:	mov	x29, sp
  40e6d0:	b.lt	40e6f4 <ferror@plt+0xb864>  // b.tstop
  40e6d4:	add	x22, x19, #0x18
  40e6d8:	mov	w23, #0x1                   	// #1
  40e6dc:	ldr	x0, [x22], #16
  40e6e0:	bl	402c00 <free@plt>
  40e6e4:	ldrsw	x8, [x20, #1216]
  40e6e8:	add	x23, x23, #0x1
  40e6ec:	cmp	x23, x8
  40e6f0:	b.lt	40e6dc <ferror@plt+0xb84c>  // b.tstop
  40e6f4:	ldr	x0, [x19, #8]
  40e6f8:	adrp	x23, 426000 <_obstack_memory_used@@Base+0x141b0>
  40e6fc:	add	x23, x23, #0xbf0
  40e700:	adrp	x22, 426000 <_obstack_memory_used@@Base+0x141b0>
  40e704:	cmp	x0, x23
  40e708:	add	x22, x22, #0x4c8
  40e70c:	b.eq	40e71c <ferror@plt+0xb88c>  // b.none
  40e710:	bl	402c00 <free@plt>
  40e714:	mov	w8, #0x100                 	// #256
  40e718:	stp	x8, x23, [x22]
  40e71c:	cmp	x19, x22
  40e720:	b.eq	40e730 <ferror@plt+0xb8a0>  // b.none
  40e724:	mov	x0, x19
  40e728:	bl	402c00 <free@plt>
  40e72c:	str	x22, [x21, #1208]
  40e730:	mov	w8, #0x1                   	// #1
  40e734:	str	w8, [x20, #1216]
  40e738:	ldp	x20, x19, [sp, #48]
  40e73c:	ldp	x22, x21, [sp, #32]
  40e740:	ldr	x23, [sp, #16]
  40e744:	ldp	x29, x30, [sp], #64
  40e748:	ret
  40e74c:	adrp	x3, 426000 <_obstack_memory_used@@Base+0x141b0>
  40e750:	add	x3, x3, #0xbb8
  40e754:	mov	x2, #0xffffffffffffffff    	// #-1
  40e758:	b	40e75c <ferror@plt+0xb8cc>
  40e75c:	sub	sp, sp, #0x80
  40e760:	stp	x29, x30, [sp, #32]
  40e764:	add	x29, sp, #0x20
  40e768:	stp	x28, x27, [sp, #48]
  40e76c:	stp	x26, x25, [sp, #64]
  40e770:	stp	x24, x23, [sp, #80]
  40e774:	stp	x22, x21, [sp, #96]
  40e778:	stp	x20, x19, [sp, #112]
  40e77c:	mov	x22, x3
  40e780:	stur	x2, [x29, #-8]
  40e784:	mov	x21, x1
  40e788:	mov	w23, w0
  40e78c:	bl	402e00 <__errno_location@plt>
  40e790:	tbnz	w23, #31, 40e8e0 <ferror@plt+0xba50>
  40e794:	adrp	x25, 426000 <_obstack_memory_used@@Base+0x141b0>
  40e798:	ldr	w8, [x25, #1216]
  40e79c:	adrp	x28, 426000 <_obstack_memory_used@@Base+0x141b0>
  40e7a0:	ldr	w20, [x0]
  40e7a4:	ldr	x27, [x28, #1208]
  40e7a8:	mov	x19, x0
  40e7ac:	cmp	w8, w23
  40e7b0:	b.gt	40e81c <ferror@plt+0xb98c>
  40e7b4:	mov	w8, #0x7fffffff            	// #2147483647
  40e7b8:	cmp	w23, w8
  40e7bc:	stur	w20, [x29, #-12]
  40e7c0:	b.eq	40e8e4 <ferror@plt+0xba54>  // b.none
  40e7c4:	adrp	x20, 426000 <_obstack_memory_used@@Base+0x141b0>
  40e7c8:	add	x20, x20, #0x4c8
  40e7cc:	add	w26, w23, #0x1
  40e7d0:	cmp	x27, x20
  40e7d4:	csel	x0, xzr, x27, eq  // eq = none
  40e7d8:	sbfiz	x1, x26, #4, #32
  40e7dc:	bl	41080c <ferror@plt+0xd97c>
  40e7e0:	mov	x24, x0
  40e7e4:	cmp	x27, x20
  40e7e8:	str	x0, [x28, #1208]
  40e7ec:	b.ne	40e7f8 <ferror@plt+0xb968>  // b.any
  40e7f0:	ldr	q0, [x20]
  40e7f4:	str	q0, [x24]
  40e7f8:	ldrsw	x8, [x25, #1216]
  40e7fc:	mov	w1, wzr
  40e800:	add	x0, x24, x8, lsl #4
  40e804:	sub	w8, w26, w8
  40e808:	sbfiz	x2, x8, #4, #32
  40e80c:	bl	4029e0 <memset@plt>
  40e810:	ldur	w20, [x29, #-12]
  40e814:	mov	x27, x24
  40e818:	str	w26, [x25, #1216]
  40e81c:	add	x28, x27, w23, uxtw #4
  40e820:	mov	x27, x28
  40e824:	ldr	x26, [x28]
  40e828:	ldr	x23, [x27, #8]!
  40e82c:	ldp	w4, w8, [x22]
  40e830:	ldp	x7, x9, [x22, #40]
  40e834:	ldur	x3, [x29, #-8]
  40e838:	add	x24, x22, #0x8
  40e83c:	orr	w25, w8, #0x1
  40e840:	mov	x0, x23
  40e844:	mov	x1, x26
  40e848:	mov	x2, x21
  40e84c:	mov	w5, w25
  40e850:	mov	x6, x24
  40e854:	str	x9, [sp]
  40e858:	bl	40d8a0 <ferror@plt+0xaa10>
  40e85c:	cmp	x26, x0
  40e860:	b.hi	40e8b8 <ferror@plt+0xba28>  // b.pmore
  40e864:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  40e868:	add	x8, x8, #0xbf0
  40e86c:	add	x26, x0, #0x1
  40e870:	cmp	x23, x8
  40e874:	str	x26, [x28]
  40e878:	b.eq	40e884 <ferror@plt+0xb9f4>  // b.none
  40e87c:	mov	x0, x23
  40e880:	bl	402c00 <free@plt>
  40e884:	mov	x0, x26
  40e888:	bl	41078c <ferror@plt+0xd8fc>
  40e88c:	str	x0, [x27]
  40e890:	ldr	w4, [x22]
  40e894:	ldp	x7, x8, [x22, #40]
  40e898:	ldur	x3, [x29, #-8]
  40e89c:	mov	x1, x26
  40e8a0:	mov	x2, x21
  40e8a4:	mov	w5, w25
  40e8a8:	mov	x6, x24
  40e8ac:	mov	x23, x0
  40e8b0:	str	x8, [sp]
  40e8b4:	bl	40d8a0 <ferror@plt+0xaa10>
  40e8b8:	str	w20, [x19]
  40e8bc:	mov	x0, x23
  40e8c0:	ldp	x20, x19, [sp, #112]
  40e8c4:	ldp	x22, x21, [sp, #96]
  40e8c8:	ldp	x24, x23, [sp, #80]
  40e8cc:	ldp	x26, x25, [sp, #64]
  40e8d0:	ldp	x28, x27, [sp, #48]
  40e8d4:	ldp	x29, x30, [sp, #32]
  40e8d8:	add	sp, sp, #0x80
  40e8dc:	ret
  40e8e0:	bl	402ae0 <abort@plt>
  40e8e4:	bl	410aa0 <ferror@plt+0xdc10>
  40e8e8:	adrp	x3, 426000 <_obstack_memory_used@@Base+0x141b0>
  40e8ec:	add	x3, x3, #0xbb8
  40e8f0:	b	40e75c <ferror@plt+0xb8cc>
  40e8f4:	adrp	x3, 426000 <_obstack_memory_used@@Base+0x141b0>
  40e8f8:	add	x3, x3, #0xbb8
  40e8fc:	mov	x2, #0xffffffffffffffff    	// #-1
  40e900:	mov	x1, x0
  40e904:	mov	w0, wzr
  40e908:	b	40e75c <ferror@plt+0xb8cc>
  40e90c:	adrp	x3, 426000 <_obstack_memory_used@@Base+0x141b0>
  40e910:	mov	x2, x1
  40e914:	add	x3, x3, #0xbb8
  40e918:	mov	x1, x0
  40e91c:	mov	w0, wzr
  40e920:	b	40e75c <ferror@plt+0xb8cc>
  40e924:	sub	sp, sp, #0x50
  40e928:	movi	v0.2d, #0x0
  40e92c:	cmp	w1, #0xa
  40e930:	stp	x29, x30, [sp, #64]
  40e934:	add	x29, sp, #0x40
  40e938:	str	xzr, [sp, #48]
  40e93c:	stp	q0, q0, [sp, #16]
  40e940:	str	q0, [sp]
  40e944:	b.eq	40e96c <ferror@plt+0xbadc>  // b.none
  40e948:	mov	x8, x2
  40e94c:	str	w1, [sp]
  40e950:	mov	x3, sp
  40e954:	mov	x2, #0xffffffffffffffff    	// #-1
  40e958:	mov	x1, x8
  40e95c:	bl	40e75c <ferror@plt+0xb8cc>
  40e960:	ldp	x29, x30, [sp, #64]
  40e964:	add	sp, sp, #0x50
  40e968:	ret
  40e96c:	bl	402ae0 <abort@plt>
  40e970:	sub	sp, sp, #0x50
  40e974:	movi	v0.2d, #0x0
  40e978:	cmp	w1, #0xa
  40e97c:	stp	x29, x30, [sp, #64]
  40e980:	add	x29, sp, #0x40
  40e984:	str	xzr, [sp, #48]
  40e988:	stp	q0, q0, [sp, #16]
  40e98c:	str	q0, [sp]
  40e990:	b.eq	40e9b8 <ferror@plt+0xbb28>  // b.none
  40e994:	mov	x8, x3
  40e998:	str	w1, [sp]
  40e99c:	mov	x3, sp
  40e9a0:	mov	x1, x2
  40e9a4:	mov	x2, x8
  40e9a8:	bl	40e75c <ferror@plt+0xb8cc>
  40e9ac:	ldp	x29, x30, [sp, #64]
  40e9b0:	add	sp, sp, #0x50
  40e9b4:	ret
  40e9b8:	bl	402ae0 <abort@plt>
  40e9bc:	sub	sp, sp, #0x50
  40e9c0:	movi	v0.2d, #0x0
  40e9c4:	cmp	w0, #0xa
  40e9c8:	stp	x29, x30, [sp, #64]
  40e9cc:	add	x29, sp, #0x40
  40e9d0:	str	xzr, [sp, #48]
  40e9d4:	stp	q0, q0, [sp, #16]
  40e9d8:	str	q0, [sp]
  40e9dc:	b.eq	40ea00 <ferror@plt+0xbb70>  // b.none
  40e9e0:	str	w0, [sp]
  40e9e4:	mov	x3, sp
  40e9e8:	mov	x2, #0xffffffffffffffff    	// #-1
  40e9ec:	mov	w0, wzr
  40e9f0:	bl	40e75c <ferror@plt+0xb8cc>
  40e9f4:	ldp	x29, x30, [sp, #64]
  40e9f8:	add	sp, sp, #0x50
  40e9fc:	ret
  40ea00:	bl	402ae0 <abort@plt>
  40ea04:	sub	sp, sp, #0x50
  40ea08:	movi	v0.2d, #0x0
  40ea0c:	cmp	w0, #0xa
  40ea10:	stp	x29, x30, [sp, #64]
  40ea14:	add	x29, sp, #0x40
  40ea18:	str	xzr, [sp, #48]
  40ea1c:	stp	q0, q0, [sp, #16]
  40ea20:	str	q0, [sp]
  40ea24:	b.eq	40ea44 <ferror@plt+0xbbb4>  // b.none
  40ea28:	str	w0, [sp]
  40ea2c:	mov	x3, sp
  40ea30:	mov	w0, wzr
  40ea34:	bl	40e75c <ferror@plt+0xb8cc>
  40ea38:	ldp	x29, x30, [sp, #64]
  40ea3c:	add	sp, sp, #0x50
  40ea40:	ret
  40ea44:	bl	402ae0 <abort@plt>
  40ea48:	sub	sp, sp, #0x50
  40ea4c:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x141b0>
  40ea50:	add	x9, x9, #0xbb8
  40ea54:	ldp	q0, q1, [x9]
  40ea58:	ubfx	w10, w2, #5, #3
  40ea5c:	mov	x11, sp
  40ea60:	mov	x8, x1
  40ea64:	stp	q0, q1, [sp]
  40ea68:	ldr	q0, [x9, #32]
  40ea6c:	ldr	x9, [x9, #48]
  40ea70:	mov	x1, x0
  40ea74:	mov	x3, sp
  40ea78:	str	q0, [sp, #32]
  40ea7c:	str	x9, [sp, #48]
  40ea80:	add	x9, x11, w10, uxtw #2
  40ea84:	ldr	w10, [x9, #8]
  40ea88:	mov	w0, wzr
  40ea8c:	stp	x29, x30, [sp, #64]
  40ea90:	add	x29, sp, #0x40
  40ea94:	lsr	w11, w10, w2
  40ea98:	mvn	w11, w11
  40ea9c:	and	w11, w11, #0x1
  40eaa0:	lsl	w11, w11, w2
  40eaa4:	eor	w10, w11, w10
  40eaa8:	mov	x2, x8
  40eaac:	str	w10, [x9, #8]
  40eab0:	bl	40e75c <ferror@plt+0xb8cc>
  40eab4:	ldp	x29, x30, [sp, #64]
  40eab8:	add	sp, sp, #0x50
  40eabc:	ret
  40eac0:	sub	sp, sp, #0x50
  40eac4:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x141b0>
  40eac8:	add	x9, x9, #0xbb8
  40eacc:	ldp	q0, q1, [x9]
  40ead0:	ubfx	w10, w1, #5, #3
  40ead4:	mov	x11, sp
  40ead8:	mov	x8, x0
  40eadc:	stp	q0, q1, [sp]
  40eae0:	ldr	q0, [x9, #32]
  40eae4:	ldr	x9, [x9, #48]
  40eae8:	mov	x3, sp
  40eaec:	mov	x2, #0xffffffffffffffff    	// #-1
  40eaf0:	str	q0, [sp, #32]
  40eaf4:	str	x9, [sp, #48]
  40eaf8:	add	x9, x11, w10, uxtw #2
  40eafc:	ldr	w10, [x9, #8]
  40eb00:	mov	w0, wzr
  40eb04:	stp	x29, x30, [sp, #64]
  40eb08:	add	x29, sp, #0x40
  40eb0c:	lsr	w11, w10, w1
  40eb10:	mvn	w11, w11
  40eb14:	and	w11, w11, #0x1
  40eb18:	lsl	w11, w11, w1
  40eb1c:	eor	w10, w11, w10
  40eb20:	mov	x1, x8
  40eb24:	str	w10, [x9, #8]
  40eb28:	bl	40e75c <ferror@plt+0xb8cc>
  40eb2c:	ldp	x29, x30, [sp, #64]
  40eb30:	add	sp, sp, #0x50
  40eb34:	ret
  40eb38:	sub	sp, sp, #0x50
  40eb3c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  40eb40:	add	x8, x8, #0xbb8
  40eb44:	ldp	q0, q1, [x8]
  40eb48:	ldr	q2, [x8, #32]
  40eb4c:	ldr	x8, [x8, #48]
  40eb50:	mov	x1, x0
  40eb54:	stp	q0, q1, [sp]
  40eb58:	ldr	w9, [sp, #12]
  40eb5c:	str	x8, [sp, #48]
  40eb60:	mov	x3, sp
  40eb64:	mov	x2, #0xffffffffffffffff    	// #-1
  40eb68:	orr	w8, w9, #0x4000000
  40eb6c:	mov	w0, wzr
  40eb70:	stp	x29, x30, [sp, #64]
  40eb74:	add	x29, sp, #0x40
  40eb78:	str	q2, [sp, #32]
  40eb7c:	str	w8, [sp, #12]
  40eb80:	bl	40e75c <ferror@plt+0xb8cc>
  40eb84:	ldp	x29, x30, [sp, #64]
  40eb88:	add	sp, sp, #0x50
  40eb8c:	ret
  40eb90:	sub	sp, sp, #0x50
  40eb94:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  40eb98:	add	x8, x8, #0xbb8
  40eb9c:	ldp	q0, q1, [x8]
  40eba0:	ldr	q2, [x8, #32]
  40eba4:	ldr	x8, [x8, #48]
  40eba8:	mov	x2, x1
  40ebac:	stp	q0, q1, [sp]
  40ebb0:	ldr	w9, [sp, #12]
  40ebb4:	mov	x1, x0
  40ebb8:	str	x8, [sp, #48]
  40ebbc:	mov	x3, sp
  40ebc0:	orr	w8, w9, #0x4000000
  40ebc4:	mov	w0, wzr
  40ebc8:	stp	x29, x30, [sp, #64]
  40ebcc:	add	x29, sp, #0x40
  40ebd0:	str	q2, [sp, #32]
  40ebd4:	str	w8, [sp, #12]
  40ebd8:	bl	40e75c <ferror@plt+0xb8cc>
  40ebdc:	ldp	x29, x30, [sp, #64]
  40ebe0:	add	sp, sp, #0x50
  40ebe4:	ret
  40ebe8:	sub	sp, sp, #0x80
  40ebec:	movi	v0.2d, #0x0
  40ebf0:	cmp	w1, #0xa
  40ebf4:	stp	x29, x30, [sp, #112]
  40ebf8:	add	x29, sp, #0x70
  40ebfc:	str	wzr, [sp, #48]
  40ec00:	stp	q0, q0, [sp, #16]
  40ec04:	str	q0, [sp]
  40ec08:	b.eq	40ec58 <ferror@plt+0xbdc8>  // b.none
  40ec0c:	ldp	q0, q1, [sp]
  40ec10:	ldr	w9, [sp, #48]
  40ec14:	ldr	q2, [sp, #32]
  40ec18:	mov	x8, x2
  40ec1c:	stur	q0, [sp, #60]
  40ec20:	ldr	w10, [sp, #68]
  40ec24:	str	w1, [sp, #56]
  40ec28:	str	w9, [sp, #108]
  40ec2c:	add	x3, sp, #0x38
  40ec30:	orr	w9, w10, #0x4000000
  40ec34:	mov	x2, #0xffffffffffffffff    	// #-1
  40ec38:	mov	x1, x8
  40ec3c:	stur	q1, [sp, #76]
  40ec40:	stur	q2, [sp, #92]
  40ec44:	str	w9, [sp, #68]
  40ec48:	bl	40e75c <ferror@plt+0xb8cc>
  40ec4c:	ldp	x29, x30, [sp, #112]
  40ec50:	add	sp, sp, #0x80
  40ec54:	ret
  40ec58:	bl	402ae0 <abort@plt>
  40ec5c:	sub	sp, sp, #0x50
  40ec60:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x141b0>
  40ec64:	add	x9, x9, #0xbb8
  40ec68:	ldp	q0, q1, [x9]
  40ec6c:	ldr	q2, [x9, #32]
  40ec70:	ldr	x9, [x9, #48]
  40ec74:	mov	w10, #0xa                   	// #10
  40ec78:	stp	x29, x30, [sp, #64]
  40ec7c:	add	x29, sp, #0x40
  40ec80:	stp	q0, q1, [sp]
  40ec84:	str	q2, [sp, #32]
  40ec88:	str	x9, [sp, #48]
  40ec8c:	str	w10, [sp]
  40ec90:	cbz	x1, 40ecbc <ferror@plt+0xbe2c>
  40ec94:	cbz	x2, 40ecbc <ferror@plt+0xbe2c>
  40ec98:	mov	x8, x3
  40ec9c:	stp	x1, x2, [sp, #40]
  40eca0:	mov	x3, sp
  40eca4:	mov	x2, #0xffffffffffffffff    	// #-1
  40eca8:	mov	x1, x8
  40ecac:	bl	40e75c <ferror@plt+0xb8cc>
  40ecb0:	ldp	x29, x30, [sp, #64]
  40ecb4:	add	sp, sp, #0x50
  40ecb8:	ret
  40ecbc:	bl	402ae0 <abort@plt>
  40ecc0:	sub	sp, sp, #0x50
  40ecc4:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x141b0>
  40ecc8:	add	x9, x9, #0xbb8
  40eccc:	ldp	q0, q1, [x9]
  40ecd0:	ldr	x10, [x9, #48]
  40ecd4:	stp	x29, x30, [sp, #64]
  40ecd8:	add	x29, sp, #0x40
  40ecdc:	stp	q0, q1, [sp]
  40ece0:	ldr	q0, [x9, #32]
  40ece4:	mov	w9, #0xa                   	// #10
  40ece8:	str	x10, [sp, #48]
  40ecec:	str	w9, [sp]
  40ecf0:	str	q0, [sp, #32]
  40ecf4:	cbz	x1, 40ed20 <ferror@plt+0xbe90>
  40ecf8:	cbz	x2, 40ed20 <ferror@plt+0xbe90>
  40ecfc:	mov	x8, x3
  40ed00:	stp	x1, x2, [sp, #40]
  40ed04:	mov	x3, sp
  40ed08:	mov	x1, x8
  40ed0c:	mov	x2, x4
  40ed10:	bl	40e75c <ferror@plt+0xb8cc>
  40ed14:	ldp	x29, x30, [sp, #64]
  40ed18:	add	sp, sp, #0x50
  40ed1c:	ret
  40ed20:	bl	402ae0 <abort@plt>
  40ed24:	sub	sp, sp, #0x50
  40ed28:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x141b0>
  40ed2c:	add	x9, x9, #0xbb8
  40ed30:	ldp	q0, q1, [x9]
  40ed34:	ldr	q2, [x9, #32]
  40ed38:	ldr	x9, [x9, #48]
  40ed3c:	mov	w10, #0xa                   	// #10
  40ed40:	stp	x29, x30, [sp, #64]
  40ed44:	add	x29, sp, #0x40
  40ed48:	stp	q0, q1, [sp]
  40ed4c:	str	q2, [sp, #32]
  40ed50:	str	x9, [sp, #48]
  40ed54:	str	w10, [sp]
  40ed58:	cbz	x0, 40ed88 <ferror@plt+0xbef8>
  40ed5c:	cbz	x1, 40ed88 <ferror@plt+0xbef8>
  40ed60:	mov	x8, x2
  40ed64:	stp	x0, x1, [sp, #40]
  40ed68:	mov	x3, sp
  40ed6c:	mov	x2, #0xffffffffffffffff    	// #-1
  40ed70:	mov	w0, wzr
  40ed74:	mov	x1, x8
  40ed78:	bl	40e75c <ferror@plt+0xb8cc>
  40ed7c:	ldp	x29, x30, [sp, #64]
  40ed80:	add	sp, sp, #0x50
  40ed84:	ret
  40ed88:	bl	402ae0 <abort@plt>
  40ed8c:	sub	sp, sp, #0x50
  40ed90:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x141b0>
  40ed94:	add	x9, x9, #0xbb8
  40ed98:	ldp	q0, q1, [x9]
  40ed9c:	ldr	q2, [x9, #32]
  40eda0:	ldr	x9, [x9, #48]
  40eda4:	mov	w10, #0xa                   	// #10
  40eda8:	stp	x29, x30, [sp, #64]
  40edac:	add	x29, sp, #0x40
  40edb0:	stp	q0, q1, [sp]
  40edb4:	str	q2, [sp, #32]
  40edb8:	str	x9, [sp, #48]
  40edbc:	str	w10, [sp]
  40edc0:	cbz	x0, 40edf0 <ferror@plt+0xbf60>
  40edc4:	cbz	x1, 40edf0 <ferror@plt+0xbf60>
  40edc8:	mov	x8, x3
  40edcc:	stp	x0, x1, [sp, #40]
  40edd0:	mov	x3, sp
  40edd4:	mov	w0, wzr
  40edd8:	mov	x1, x2
  40eddc:	mov	x2, x8
  40ede0:	bl	40e75c <ferror@plt+0xb8cc>
  40ede4:	ldp	x29, x30, [sp, #64]
  40ede8:	add	sp, sp, #0x50
  40edec:	ret
  40edf0:	bl	402ae0 <abort@plt>
  40edf4:	adrp	x3, 426000 <_obstack_memory_used@@Base+0x141b0>
  40edf8:	add	x3, x3, #0x4d8
  40edfc:	b	40e75c <ferror@plt+0xb8cc>
  40ee00:	adrp	x3, 426000 <_obstack_memory_used@@Base+0x141b0>
  40ee04:	mov	x2, x1
  40ee08:	add	x3, x3, #0x4d8
  40ee0c:	mov	x1, x0
  40ee10:	mov	w0, wzr
  40ee14:	b	40e75c <ferror@plt+0xb8cc>
  40ee18:	adrp	x3, 426000 <_obstack_memory_used@@Base+0x141b0>
  40ee1c:	add	x3, x3, #0x4d8
  40ee20:	mov	x2, #0xffffffffffffffff    	// #-1
  40ee24:	b	40e75c <ferror@plt+0xb8cc>
  40ee28:	adrp	x3, 426000 <_obstack_memory_used@@Base+0x141b0>
  40ee2c:	add	x3, x3, #0x4d8
  40ee30:	mov	x2, #0xffffffffffffffff    	// #-1
  40ee34:	mov	x1, x0
  40ee38:	mov	w0, wzr
  40ee3c:	b	40e75c <ferror@plt+0xb8cc>
  40ee40:	stp	x29, x30, [sp, #-32]!
  40ee44:	stp	x20, x19, [sp, #16]
  40ee48:	mov	x20, x0
  40ee4c:	mov	w19, w1
  40ee50:	mov	w2, #0x5                   	// #5
  40ee54:	mov	x0, xzr
  40ee58:	mov	x1, x20
  40ee5c:	mov	x29, sp
  40ee60:	bl	402d70 <dcgettext@plt>
  40ee64:	cmp	x0, x20
  40ee68:	b.ne	40ef4c <ferror@plt+0xc0bc>  // b.any
  40ee6c:	bl	412288 <_obstack_memory_used@@Base+0x438>
  40ee70:	ldrb	w8, [x0]
  40ee74:	and	w8, w8, #0xffffffdf
  40ee78:	cmp	w8, #0x47
  40ee7c:	b.eq	40eee0 <ferror@plt+0xc050>  // b.none
  40ee80:	cmp	w8, #0x55
  40ee84:	b.ne	40ef34 <ferror@plt+0xc0a4>  // b.any
  40ee88:	ldrb	w8, [x0, #1]
  40ee8c:	and	w8, w8, #0xffffffdf
  40ee90:	cmp	w8, #0x54
  40ee94:	b.ne	40ef34 <ferror@plt+0xc0a4>  // b.any
  40ee98:	ldrb	w8, [x0, #2]
  40ee9c:	and	w8, w8, #0xffffffdf
  40eea0:	cmp	w8, #0x46
  40eea4:	b.ne	40ef34 <ferror@plt+0xc0a4>  // b.any
  40eea8:	ldrb	w8, [x0, #3]
  40eeac:	cmp	w8, #0x2d
  40eeb0:	b.ne	40ef34 <ferror@plt+0xc0a4>  // b.any
  40eeb4:	ldrb	w8, [x0, #4]
  40eeb8:	cmp	w8, #0x38
  40eebc:	b.ne	40ef34 <ferror@plt+0xc0a4>  // b.any
  40eec0:	ldrb	w8, [x0, #5]
  40eec4:	cbnz	w8, 40ef34 <ferror@plt+0xc0a4>
  40eec8:	ldrb	w8, [x20]
  40eecc:	adrp	x9, 415000 <_obstack_memory_used@@Base+0x31b0>
  40eed0:	adrp	x10, 415000 <_obstack_memory_used@@Base+0x31b0>
  40eed4:	add	x9, x9, #0x282
  40eed8:	add	x10, x10, #0x27e
  40eedc:	b	40ef6c <ferror@plt+0xc0dc>
  40eee0:	ldrb	w8, [x0, #1]
  40eee4:	and	w8, w8, #0xffffffdf
  40eee8:	cmp	w8, #0x42
  40eeec:	b.ne	40ef34 <ferror@plt+0xc0a4>  // b.any
  40eef0:	ldrb	w8, [x0, #2]
  40eef4:	cmp	w8, #0x31
  40eef8:	b.ne	40ef34 <ferror@plt+0xc0a4>  // b.any
  40eefc:	ldrb	w8, [x0, #3]
  40ef00:	cmp	w8, #0x38
  40ef04:	b.ne	40ef34 <ferror@plt+0xc0a4>  // b.any
  40ef08:	ldrb	w8, [x0, #4]
  40ef0c:	cmp	w8, #0x30
  40ef10:	b.ne	40ef34 <ferror@plt+0xc0a4>  // b.any
  40ef14:	ldrb	w8, [x0, #5]
  40ef18:	cmp	w8, #0x33
  40ef1c:	b.ne	40ef34 <ferror@plt+0xc0a4>  // b.any
  40ef20:	ldrb	w8, [x0, #6]
  40ef24:	cmp	w8, #0x30
  40ef28:	b.ne	40ef34 <ferror@plt+0xc0a4>  // b.any
  40ef2c:	ldrb	w8, [x0, #7]
  40ef30:	cbz	w8, 40ef58 <ferror@plt+0xc0c8>
  40ef34:	adrp	x8, 414000 <_obstack_memory_used@@Base+0x21b0>
  40ef38:	adrp	x9, 414000 <_obstack_memory_used@@Base+0x21b0>
  40ef3c:	add	x8, x8, #0x4a4
  40ef40:	add	x9, x9, #0xb91
  40ef44:	cmp	w19, #0x9
  40ef48:	csel	x0, x9, x8, eq  // eq = none
  40ef4c:	ldp	x20, x19, [sp, #16]
  40ef50:	ldp	x29, x30, [sp], #32
  40ef54:	ret
  40ef58:	ldrb	w8, [x20]
  40ef5c:	adrp	x9, 415000 <_obstack_memory_used@@Base+0x31b0>
  40ef60:	adrp	x10, 415000 <_obstack_memory_used@@Base+0x31b0>
  40ef64:	add	x9, x9, #0x28a
  40ef68:	add	x10, x10, #0x286
  40ef6c:	cmp	w8, #0x60
  40ef70:	csel	x0, x10, x9, eq  // eq = none
  40ef74:	b	40ef4c <ferror@plt+0xc0bc>
  40ef78:	sub	sp, sp, #0x40
  40ef7c:	stp	x29, x30, [sp, #16]
  40ef80:	stp	x22, x21, [sp, #32]
  40ef84:	stp	x20, x19, [sp, #48]
  40ef88:	add	x29, sp, #0x10
  40ef8c:	cbz	x1, 40efbc <ferror@plt+0xc12c>
  40ef90:	mov	x21, x1
  40ef94:	mov	x20, x0
  40ef98:	cbz	x0, 40efdc <ferror@plt+0xc14c>
  40ef9c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x31b0>
  40efa0:	add	x1, x1, #0x28d
  40efa4:	mov	x0, x20
  40efa8:	bl	4121dc <_obstack_memory_used@@Base+0x38c>
  40efac:	mov	x22, x0
  40efb0:	cbnz	x0, 40efe0 <ferror@plt+0xc150>
  40efb4:	mov	x19, xzr
  40efb8:	b	40f190 <ferror@plt+0xc300>
  40efbc:	mov	w0, #0x1038                	// #4152
  40efc0:	bl	41078c <ferror@plt+0xd8fc>
  40efc4:	adrp	x8, 40f000 <ferror@plt+0xc170>
  40efc8:	add	x8, x8, #0x358
  40efcc:	mov	x19, x0
  40efd0:	stp	xzr, x8, [x0]
  40efd4:	str	xzr, [x0, #16]
  40efd8:	b	40f190 <ferror@plt+0xc300>
  40efdc:	mov	x22, xzr
  40efe0:	mov	w0, #0x1038                	// #4152
  40efe4:	bl	41078c <ferror@plt+0xd8fc>
  40efe8:	adrp	x8, 40f000 <ferror@plt+0xc170>
  40efec:	mov	x19, x0
  40eff0:	add	x8, x8, #0x358
  40eff4:	stp	x22, x8, [x0]
  40eff8:	str	x20, [x0, #16]
  40effc:	cbz	x22, 40f020 <ferror@plt+0xc190>
  40f000:	cmp	x21, #0x1, lsl #12
  40f004:	mov	w8, #0x1000                	// #4096
  40f008:	add	x1, x19, #0x18
  40f00c:	csel	x3, x21, x8, cc  // cc = lo, ul, last
  40f010:	mov	x0, x22
  40f014:	mov	w2, wzr
  40f018:	bl	402860 <setvbuf@plt>
  40f01c:	b	40f190 <ferror@plt+0xc300>
  40f020:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x31b0>
  40f024:	add	x0, x0, #0x2af
  40f028:	mov	w1, wzr
  40f02c:	str	xzr, [x19, #24]
  40f030:	add	x20, x19, #0x20
  40f034:	bl	402950 <open@plt>
  40f038:	tbnz	w0, #31, 40f074 <ferror@plt+0xc1e4>
  40f03c:	cmp	x21, #0x800
  40f040:	mov	w8, #0x800                 	// #2048
  40f044:	csel	x2, x21, x8, cc  // cc = lo, ul, last
  40f048:	mov	x1, x20
  40f04c:	mov	w22, w0
  40f050:	bl	402d20 <read@plt>
  40f054:	mov	x21, x0
  40f058:	mov	w0, w22
  40f05c:	bl	402a70 <close@plt>
  40f060:	cmp	x21, #0x1
  40f064:	b.lt	40f074 <ferror@plt+0xc1e4>  // b.tstop
  40f068:	cmp	x21, #0x7ff
  40f06c:	b.ls	40f078 <ferror@plt+0xc1e8>  // b.plast
  40f070:	b	40f188 <ferror@plt+0xc2f8>
  40f074:	mov	x21, xzr
  40f078:	mov	w8, #0x800                 	// #2048
  40f07c:	sub	x8, x8, x21
  40f080:	cmp	x8, #0x10
  40f084:	mov	w9, #0x10                  	// #16
  40f088:	mov	x0, sp
  40f08c:	mov	x1, xzr
  40f090:	csel	x22, x8, x9, cc  // cc = lo, ul, last
  40f094:	bl	402a00 <gettimeofday@plt>
  40f098:	add	x0, x20, x21
  40f09c:	mov	x1, sp
  40f0a0:	mov	x2, x22
  40f0a4:	bl	402760 <memcpy@plt>
  40f0a8:	add	x22, x22, x21
  40f0ac:	cmp	x22, #0x7ff
  40f0b0:	b.hi	40f188 <ferror@plt+0xc2f8>  // b.pmore
  40f0b4:	mov	w8, #0x800                 	// #2048
  40f0b8:	sub	x8, x8, x22
  40f0bc:	cmp	x8, #0x4
  40f0c0:	mov	w9, #0x4                   	// #4
  40f0c4:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  40f0c8:	bl	402900 <getpid@plt>
  40f0cc:	str	w0, [sp]
  40f0d0:	add	x0, x20, x22
  40f0d4:	mov	x1, sp
  40f0d8:	mov	x2, x21
  40f0dc:	bl	402760 <memcpy@plt>
  40f0e0:	add	x22, x21, x22
  40f0e4:	cmp	x22, #0x7ff
  40f0e8:	b.hi	40f188 <ferror@plt+0xc2f8>  // b.pmore
  40f0ec:	mov	w8, #0x800                 	// #2048
  40f0f0:	sub	x8, x8, x22
  40f0f4:	cmp	x8, #0x4
  40f0f8:	mov	w9, #0x4                   	// #4
  40f0fc:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  40f100:	bl	402960 <getppid@plt>
  40f104:	str	w0, [sp]
  40f108:	add	x0, x20, x22
  40f10c:	mov	x1, sp
  40f110:	mov	x2, x21
  40f114:	bl	402760 <memcpy@plt>
  40f118:	add	x22, x21, x22
  40f11c:	cmp	x22, #0x7ff
  40f120:	b.hi	40f188 <ferror@plt+0xc2f8>  // b.pmore
  40f124:	mov	w8, #0x800                 	// #2048
  40f128:	sub	x8, x8, x22
  40f12c:	cmp	x8, #0x4
  40f130:	mov	w9, #0x4                   	// #4
  40f134:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  40f138:	bl	402810 <getuid@plt>
  40f13c:	str	w0, [sp]
  40f140:	add	x0, x20, x22
  40f144:	mov	x1, sp
  40f148:	mov	x2, x21
  40f14c:	bl	402760 <memcpy@plt>
  40f150:	add	x22, x21, x22
  40f154:	cmp	x22, #0x7ff
  40f158:	b.hi	40f188 <ferror@plt+0xc2f8>  // b.pmore
  40f15c:	mov	w8, #0x800                 	// #2048
  40f160:	sub	x8, x8, x22
  40f164:	cmp	x8, #0x4
  40f168:	mov	w9, #0x4                   	// #4
  40f16c:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  40f170:	bl	402c20 <getgid@plt>
  40f174:	str	w0, [sp]
  40f178:	add	x0, x20, x22
  40f17c:	mov	x1, sp
  40f180:	mov	x2, x21
  40f184:	bl	402760 <memcpy@plt>
  40f188:	mov	x0, x20
  40f18c:	bl	40f610 <ferror@plt+0xc780>
  40f190:	mov	x0, x19
  40f194:	ldp	x20, x19, [sp, #48]
  40f198:	ldp	x22, x21, [sp, #32]
  40f19c:	ldp	x29, x30, [sp, #16]
  40f1a0:	add	sp, sp, #0x40
  40f1a4:	ret
  40f1a8:	str	x1, [x0, #8]
  40f1ac:	ret
  40f1b0:	str	x1, [x0, #16]
  40f1b4:	ret
  40f1b8:	stp	x29, x30, [sp, #-80]!
  40f1bc:	stp	x24, x23, [sp, #32]
  40f1c0:	stp	x22, x21, [sp, #48]
  40f1c4:	stp	x20, x19, [sp, #64]
  40f1c8:	ldr	x3, [x0]
  40f1cc:	mov	x21, x2
  40f1d0:	mov	x19, x0
  40f1d4:	mov	x20, x1
  40f1d8:	str	x25, [sp, #16]
  40f1dc:	mov	x29, sp
  40f1e0:	cbz	x3, 40f250 <ferror@plt+0xc3c0>
  40f1e4:	mov	w1, #0x1                   	// #1
  40f1e8:	mov	x0, x20
  40f1ec:	mov	x2, x21
  40f1f0:	bl	402b50 <fread_unlocked@plt>
  40f1f4:	mov	x23, x0
  40f1f8:	bl	402e00 <__errno_location@plt>
  40f1fc:	subs	x21, x21, x23
  40f200:	b.eq	40f2f4 <ferror@plt+0xc464>  // b.none
  40f204:	mov	x22, x0
  40f208:	ldr	x8, [x19]
  40f20c:	ldr	w9, [x22]
  40f210:	add	x20, x20, x23
  40f214:	ldr	w8, [x8]
  40f218:	lsl	w8, w8, #26
  40f21c:	and	w8, w9, w8, asr #31
  40f220:	str	w8, [x22]
  40f224:	ldp	x8, x0, [x19, #8]
  40f228:	blr	x8
  40f22c:	ldr	x3, [x19]
  40f230:	mov	w1, #0x1                   	// #1
  40f234:	mov	x0, x20
  40f238:	mov	x2, x21
  40f23c:	bl	402b50 <fread_unlocked@plt>
  40f240:	mov	x23, x0
  40f244:	subs	x21, x21, x0
  40f248:	b.ne	40f208 <ferror@plt+0xc378>  // b.any
  40f24c:	b	40f2f4 <ferror@plt+0xc464>
  40f250:	ldr	x24, [x19, #24]
  40f254:	add	x22, x19, #0x838
  40f258:	sub	x8, x22, x24
  40f25c:	cmp	x24, x21
  40f260:	add	x1, x8, #0x800
  40f264:	b.cs	40f2d4 <ferror@plt+0xc444>  // b.hs, b.nlast
  40f268:	add	x23, x19, #0x20
  40f26c:	mov	w25, #0x800                 	// #2048
  40f270:	b	40f290 <ferror@plt+0xc400>
  40f274:	mov	x0, x23
  40f278:	mov	x1, x22
  40f27c:	bl	40f3c8 <ferror@plt+0xc538>
  40f280:	cmp	x21, #0x800
  40f284:	mov	x1, x22
  40f288:	mov	w24, #0x800                 	// #2048
  40f28c:	b.ls	40f2dc <ferror@plt+0xc44c>  // b.plast
  40f290:	mov	x0, x20
  40f294:	mov	x2, x24
  40f298:	bl	402760 <memcpy@plt>
  40f29c:	add	x20, x20, x24
  40f2a0:	tst	x20, #0x7
  40f2a4:	sub	x21, x21, x24
  40f2a8:	b.ne	40f274 <ferror@plt+0xc3e4>  // b.any
  40f2ac:	cmp	x21, #0x800
  40f2b0:	b.cc	40f274 <ferror@plt+0xc3e4>  // b.lo, b.ul, b.last
  40f2b4:	mov	x0, x23
  40f2b8:	mov	x1, x20
  40f2bc:	bl	40f3c8 <ferror@plt+0xc538>
  40f2c0:	subs	x21, x21, #0x800
  40f2c4:	add	x20, x20, #0x800
  40f2c8:	b.ne	40f2ac <ferror@plt+0xc41c>  // b.any
  40f2cc:	mov	x8, xzr
  40f2d0:	b	40f2f0 <ferror@plt+0xc460>
  40f2d4:	mov	x25, x24
  40f2d8:	mov	x22, x1
  40f2dc:	mov	x0, x20
  40f2e0:	mov	x1, x22
  40f2e4:	mov	x2, x21
  40f2e8:	bl	402760 <memcpy@plt>
  40f2ec:	sub	x8, x25, x21
  40f2f0:	str	x8, [x19, #24]
  40f2f4:	ldp	x20, x19, [sp, #64]
  40f2f8:	ldp	x22, x21, [sp, #48]
  40f2fc:	ldp	x24, x23, [sp, #32]
  40f300:	ldr	x25, [sp, #16]
  40f304:	ldp	x29, x30, [sp], #80
  40f308:	ret
  40f30c:	stp	x29, x30, [sp, #-32]!
  40f310:	stp	x20, x19, [sp, #16]
  40f314:	ldr	x19, [x0]
  40f318:	mov	w1, #0x1038                	// #4152
  40f31c:	mov	x2, #0xffffffffffffffff    	// #-1
  40f320:	mov	x29, sp
  40f324:	mov	x20, x0
  40f328:	bl	402d10 <__explicit_bzero_chk@plt>
  40f32c:	mov	x0, x20
  40f330:	bl	402c00 <free@plt>
  40f334:	cbz	x19, 40f348 <ferror@plt+0xc4b8>
  40f338:	mov	x0, x19
  40f33c:	ldp	x20, x19, [sp, #16]
  40f340:	ldp	x29, x30, [sp], #32
  40f344:	b	4115a0 <ferror@plt+0xe710>
  40f348:	ldp	x20, x19, [sp, #16]
  40f34c:	mov	w0, wzr
  40f350:	ldp	x29, x30, [sp], #32
  40f354:	ret
  40f358:	stp	x29, x30, [sp, #-48]!
  40f35c:	stp	x22, x21, [sp, #16]
  40f360:	stp	x20, x19, [sp, #32]
  40f364:	mov	x29, sp
  40f368:	cbz	x0, 40f3c4 <ferror@plt+0xc534>
  40f36c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  40f370:	ldr	w20, [x8, #1200]
  40f374:	mov	x19, x0
  40f378:	bl	402e00 <__errno_location@plt>
  40f37c:	ldr	w21, [x0]
  40f380:	adrp	x8, 415000 <_obstack_memory_used@@Base+0x31b0>
  40f384:	adrp	x9, 415000 <_obstack_memory_used@@Base+0x31b0>
  40f388:	add	x8, x8, #0x2a0
  40f38c:	add	x9, x9, #0x290
  40f390:	cmp	w21, #0x0
  40f394:	csel	x1, x9, x8, eq  // eq = none
  40f398:	mov	w2, #0x5                   	// #5
  40f39c:	mov	x0, xzr
  40f3a0:	bl	402d70 <dcgettext@plt>
  40f3a4:	mov	x22, x0
  40f3a8:	mov	x0, x19
  40f3ac:	bl	40ee28 <ferror@plt+0xbf98>
  40f3b0:	mov	x3, x0
  40f3b4:	mov	w0, w20
  40f3b8:	mov	w1, w21
  40f3bc:	mov	x2, x22
  40f3c0:	bl	4027f0 <error@plt>
  40f3c4:	bl	402ae0 <abort@plt>
  40f3c8:	ldr	x9, [x0, #2064]
  40f3cc:	ldr	x10, [x0, #2056]
  40f3d0:	ldr	x13, [x0, #2048]
  40f3d4:	mov	x8, xzr
  40f3d8:	add	x9, x9, #0x1
  40f3dc:	add	x15, x9, x10
  40f3e0:	add	x10, x0, #0x400
  40f3e4:	str	x9, [x0, #2064]
  40f3e8:	add	x9, x0, x8
  40f3ec:	ldr	x11, [x9]
  40f3f0:	ldr	x12, [x9, #1024]
  40f3f4:	eon	x13, x13, x13, lsl #21
  40f3f8:	and	x14, x11, #0x7f8
  40f3fc:	ldr	x14, [x0, x14]
  40f400:	add	x12, x13, x12
  40f404:	add	x13, x12, x15
  40f408:	eor	x12, x12, x12, lsr #5
  40f40c:	add	x13, x13, x14
  40f410:	str	x13, [x9]
  40f414:	lsr	x13, x13, #8
  40f418:	and	x13, x13, #0x7f8
  40f41c:	ldr	x13, [x0, x13]
  40f420:	add	x14, x1, x8
  40f424:	add	x8, x8, #0x20
  40f428:	add	x11, x13, x11
  40f42c:	str	x11, [x14]
  40f430:	ldr	x13, [x9, #8]
  40f434:	ldr	x15, [x9, #1032]
  40f438:	and	x16, x13, #0x7f8
  40f43c:	ldr	x16, [x0, x16]
  40f440:	add	x12, x15, x12
  40f444:	add	x11, x12, x11
  40f448:	eor	x12, x12, x12, lsl #12
  40f44c:	add	x11, x11, x16
  40f450:	str	x11, [x9, #8]
  40f454:	lsr	x11, x11, #8
  40f458:	and	x11, x11, #0x7f8
  40f45c:	ldr	x11, [x0, x11]
  40f460:	add	x11, x11, x13
  40f464:	str	x11, [x14, #8]
  40f468:	ldr	x13, [x9, #16]
  40f46c:	ldr	x15, [x9, #1040]
  40f470:	and	x16, x13, #0x7f8
  40f474:	ldr	x16, [x0, x16]
  40f478:	add	x12, x15, x12
  40f47c:	add	x11, x12, x11
  40f480:	eor	x12, x12, x12, lsr #33
  40f484:	add	x11, x11, x16
  40f488:	str	x11, [x9, #16]
  40f48c:	lsr	x11, x11, #8
  40f490:	and	x11, x11, #0x7f8
  40f494:	ldr	x11, [x0, x11]
  40f498:	add	x11, x11, x13
  40f49c:	str	x11, [x14, #16]
  40f4a0:	ldr	x15, [x9, #24]
  40f4a4:	ldr	x13, [x9, #1048]
  40f4a8:	and	x16, x15, #0x7f8
  40f4ac:	ldr	x16, [x0, x16]
  40f4b0:	add	x13, x13, x12
  40f4b4:	add	x11, x13, x11
  40f4b8:	add	x11, x11, x16
  40f4bc:	str	x11, [x9, #24]
  40f4c0:	lsr	x9, x11, #8
  40f4c4:	and	x9, x9, #0x7f8
  40f4c8:	ldr	x11, [x0, x9]
  40f4cc:	add	x9, x0, x8
  40f4d0:	cmp	x9, x10
  40f4d4:	add	x15, x11, x15
  40f4d8:	str	x15, [x14, #24]
  40f4dc:	b.cc	40f3e8 <ferror@plt+0xc558>  // b.lo, b.ul, b.last
  40f4e0:	mov	x10, xzr
  40f4e4:	add	x11, x0, #0x800
  40f4e8:	add	x12, x1, x8
  40f4ec:	ldr	x16, [x9, x10]
  40f4f0:	add	x14, x9, x10
  40f4f4:	sub	x17, x14, #0x400
  40f4f8:	ldr	x17, [x17]
  40f4fc:	and	x18, x16, #0x7f8
  40f500:	ldr	x18, [x0, x18]
  40f504:	eon	x13, x13, x13, lsl #21
  40f508:	add	x13, x13, x17
  40f50c:	add	x15, x13, x15
  40f510:	add	x15, x15, x18
  40f514:	str	x15, [x9, x10]
  40f518:	lsr	x15, x15, #8
  40f51c:	and	x15, x15, #0x7f8
  40f520:	ldr	x15, [x0, x15]
  40f524:	add	x17, x0, x10
  40f528:	add	x17, x17, x8
  40f52c:	sub	x18, x14, #0x3f8
  40f530:	add	x15, x15, x16
  40f534:	str	x15, [x12, x10]
  40f538:	ldr	x16, [x17, #8]
  40f53c:	ldr	x18, [x18]
  40f540:	eor	x13, x13, x13, lsr #5
  40f544:	and	x2, x16, #0x7f8
  40f548:	ldr	x2, [x0, x2]
  40f54c:	add	x13, x18, x13
  40f550:	add	x15, x13, x15
  40f554:	add	x18, x1, x10
  40f558:	add	x15, x15, x2
  40f55c:	str	x15, [x17, #8]
  40f560:	lsr	x15, x15, #8
  40f564:	and	x15, x15, #0x7f8
  40f568:	ldr	x15, [x0, x15]
  40f56c:	add	x18, x18, x8
  40f570:	sub	x2, x14, #0x3f0
  40f574:	eor	x13, x13, x13, lsl #12
  40f578:	add	x15, x15, x16
  40f57c:	str	x15, [x18, #8]
  40f580:	ldr	x16, [x17, #16]
  40f584:	ldr	x2, [x2]
  40f588:	and	x3, x16, #0x7f8
  40f58c:	ldr	x3, [x0, x3]
  40f590:	add	x13, x2, x13
  40f594:	add	x15, x13, x15
  40f598:	eor	x13, x13, x13, lsr #33
  40f59c:	add	x15, x15, x3
  40f5a0:	str	x15, [x17, #16]
  40f5a4:	lsr	x15, x15, #8
  40f5a8:	and	x15, x15, #0x7f8
  40f5ac:	ldr	x15, [x0, x15]
  40f5b0:	add	x15, x15, x16
  40f5b4:	str	x15, [x18, #16]
  40f5b8:	ldr	x16, [x17, #24]
  40f5bc:	sub	x18, x14, #0x3e8
  40f5c0:	ldr	x18, [x18]
  40f5c4:	add	x14, x14, #0x20
  40f5c8:	and	x2, x16, #0x7f8
  40f5cc:	ldr	x2, [x0, x2]
  40f5d0:	add	x13, x18, x13
  40f5d4:	add	x15, x13, x15
  40f5d8:	cmp	x14, x11
  40f5dc:	add	x15, x15, x2
  40f5e0:	str	x15, [x17, #24]
  40f5e4:	lsr	x15, x15, #8
  40f5e8:	and	x15, x15, #0x7f8
  40f5ec:	ldr	x15, [x0, x15]
  40f5f0:	add	x17, x12, x10
  40f5f4:	add	x10, x10, #0x20
  40f5f8:	add	x15, x15, x16
  40f5fc:	str	x15, [x17, #24]
  40f600:	b.cc	40f4ec <ferror@plt+0xc65c>  // b.lo, b.ul, b.last
  40f604:	str	x13, [x0, #2048]
  40f608:	str	x15, [x0, #2056]
  40f60c:	ret
  40f610:	mov	x11, #0x4b7c                	// #19324
  40f614:	mov	x12, #0xc862                	// #51298
  40f618:	mov	x15, #0x12a0                	// #4768
  40f61c:	mov	x13, #0x5524                	// #21796
  40f620:	mov	x16, #0xe0ce                	// #57550
  40f624:	mov	x14, #0x9315                	// #37653
  40f628:	mov	x17, #0x89ed                	// #35309
  40f62c:	mov	x8, #0xc0ab                	// #49323
  40f630:	movk	x11, #0xa288, lsl #16
  40f634:	movk	x12, #0xc73a, lsl #16
  40f638:	movk	x15, #0x3d47, lsl #16
  40f63c:	movk	x13, #0x4a59, lsl #16
  40f640:	movk	x16, #0x8355, lsl #16
  40f644:	movk	x14, #0xa5a0, lsl #16
  40f648:	movk	x17, #0xcbfc, lsl #16
  40f64c:	movk	x8, #0x6c44, lsl #16
  40f650:	movk	x11, #0x4677, lsl #32
  40f654:	movk	x12, #0xb322, lsl #32
  40f658:	movk	x15, #0xa505, lsl #32
  40f65c:	movk	x13, #0x2e82, lsl #32
  40f660:	movk	x16, #0x53db, lsl #32
  40f664:	movk	x14, #0x4a0f, lsl #32
  40f668:	movk	x17, #0x5bf2, lsl #32
  40f66c:	movk	x8, #0x704f, lsl #32
  40f670:	add	x9, x0, #0x20
  40f674:	movk	x11, #0x647c, lsl #48
  40f678:	movk	x12, #0xb9f8, lsl #48
  40f67c:	movk	x15, #0x8c0e, lsl #48
  40f680:	movk	x13, #0xb29b, lsl #48
  40f684:	movk	x16, #0x82f0, lsl #48
  40f688:	movk	x14, #0x48fe, lsl #48
  40f68c:	movk	x17, #0xae98, lsl #48
  40f690:	movk	x8, #0x98f5, lsl #48
  40f694:	mov	x10, #0xfffffffffffffff8    	// #-8
  40f698:	ldp	x18, x1, [x9, #-32]
  40f69c:	add	x10, x10, #0x8
  40f6a0:	cmp	x10, #0xf8
  40f6a4:	add	x11, x18, x11
  40f6a8:	ldp	x2, x18, [x9, #-16]
  40f6ac:	add	x12, x1, x12
  40f6b0:	add	x15, x2, x15
  40f6b4:	ldp	x1, x2, [x9]
  40f6b8:	add	x13, x18, x13
  40f6bc:	add	x16, x1, x16
  40f6c0:	ldp	x18, x1, [x9, #16]
  40f6c4:	add	x14, x2, x14
  40f6c8:	sub	x11, x11, x16
  40f6cc:	add	x8, x1, x8
  40f6d0:	add	x17, x18, x17
  40f6d4:	eor	x14, x14, x8, lsr #9
  40f6d8:	add	x8, x8, x11
  40f6dc:	sub	x12, x12, x14
  40f6e0:	eor	x17, x17, x11, lsl #9
  40f6e4:	add	x11, x12, x11
  40f6e8:	sub	x15, x15, x17
  40f6ec:	eor	x8, x8, x12, lsr #23
  40f6f0:	add	x12, x12, x15
  40f6f4:	sub	x13, x13, x8
  40f6f8:	eor	x11, x11, x15, lsl #15
  40f6fc:	sub	x16, x16, x11
  40f700:	eor	x12, x12, x13, lsr #14
  40f704:	add	x15, x13, x15
  40f708:	add	x13, x13, x16
  40f70c:	sub	x14, x14, x12
  40f710:	eor	x15, x15, x16, lsl #20
  40f714:	eor	x13, x13, x14, lsr #17
  40f718:	add	x16, x14, x16
  40f71c:	sub	x17, x17, x15
  40f720:	sub	x8, x8, x13
  40f724:	add	x14, x14, x17
  40f728:	eor	x16, x16, x17, lsl #14
  40f72c:	add	x17, x8, x17
  40f730:	stp	x11, x12, [x9, #-32]
  40f734:	stp	x15, x13, [x9, #-16]
  40f738:	stp	x16, x14, [x9]
  40f73c:	stp	x17, x8, [x9, #16]
  40f740:	add	x9, x9, #0x40
  40f744:	b.cc	40f698 <ferror@plt+0xc808>  // b.lo, b.ul, b.last
  40f748:	add	x9, x0, #0x20
  40f74c:	mov	x10, #0xfffffffffffffff8    	// #-8
  40f750:	ldp	x18, x1, [x9, #-32]
  40f754:	add	x10, x10, #0x8
  40f758:	cmp	x10, #0xf8
  40f75c:	add	x11, x18, x11
  40f760:	ldp	x2, x18, [x9, #-16]
  40f764:	add	x12, x1, x12
  40f768:	add	x15, x2, x15
  40f76c:	ldp	x1, x2, [x9]
  40f770:	add	x13, x18, x13
  40f774:	add	x16, x1, x16
  40f778:	ldp	x18, x1, [x9, #16]
  40f77c:	add	x14, x2, x14
  40f780:	sub	x11, x11, x16
  40f784:	add	x8, x1, x8
  40f788:	add	x17, x18, x17
  40f78c:	eor	x14, x14, x8, lsr #9
  40f790:	add	x8, x8, x11
  40f794:	sub	x12, x12, x14
  40f798:	eor	x17, x17, x11, lsl #9
  40f79c:	add	x11, x12, x11
  40f7a0:	sub	x15, x15, x17
  40f7a4:	eor	x8, x8, x12, lsr #23
  40f7a8:	add	x12, x12, x15
  40f7ac:	sub	x13, x13, x8
  40f7b0:	eor	x11, x11, x15, lsl #15
  40f7b4:	sub	x16, x16, x11
  40f7b8:	eor	x12, x12, x13, lsr #14
  40f7bc:	add	x15, x13, x15
  40f7c0:	add	x13, x13, x16
  40f7c4:	sub	x14, x14, x12
  40f7c8:	eor	x15, x15, x16, lsl #20
  40f7cc:	eor	x13, x13, x14, lsr #17
  40f7d0:	add	x16, x14, x16
  40f7d4:	sub	x17, x17, x15
  40f7d8:	sub	x8, x8, x13
  40f7dc:	add	x14, x14, x17
  40f7e0:	eor	x16, x16, x17, lsl #14
  40f7e4:	add	x17, x8, x17
  40f7e8:	stp	x11, x12, [x9, #-32]
  40f7ec:	stp	x15, x13, [x9, #-16]
  40f7f0:	stp	x16, x14, [x9]
  40f7f4:	stp	x17, x8, [x9, #16]
  40f7f8:	add	x9, x9, #0x40
  40f7fc:	b.cc	40f750 <ferror@plt+0xc8c0>  // b.lo, b.ul, b.last
  40f800:	movi	v0.2d, #0x0
  40f804:	str	xzr, [x0, #2064]
  40f808:	str	q0, [x0, #2048]
  40f80c:	ret
  40f810:	stp	x29, x30, [sp, #-48]!
  40f814:	str	x21, [sp, #16]
  40f818:	stp	x20, x19, [sp, #32]
  40f81c:	adrp	x20, 402000 <mbrtowc@plt-0x750>
  40f820:	adrp	x21, 402000 <mbrtowc@plt-0x750>
  40f824:	add	x20, x20, #0x930
  40f828:	add	x21, x21, #0xc00
  40f82c:	mov	x19, x0
  40f830:	add	x0, x0, #0x18
  40f834:	mov	x1, xzr
  40f838:	mov	x2, xzr
  40f83c:	mov	x3, x20
  40f840:	mov	x4, x21
  40f844:	mov	x29, sp
  40f848:	stp	xzr, xzr, [x19]
  40f84c:	str	xzr, [x19, #16]
  40f850:	bl	411ae8 <_obstack_begin@@Base>
  40f854:	add	x0, x19, #0x70
  40f858:	mov	x1, xzr
  40f85c:	mov	x2, xzr
  40f860:	mov	x3, x20
  40f864:	mov	x4, x21
  40f868:	bl	411ae8 <_obstack_begin@@Base>
  40f86c:	add	x0, x19, #0xc8
  40f870:	mov	x3, x20
  40f874:	mov	x4, x21
  40f878:	ldp	x20, x19, [sp, #32]
  40f87c:	ldr	x21, [sp, #16]
  40f880:	mov	x1, xzr
  40f884:	mov	x2, xzr
  40f888:	ldp	x29, x30, [sp], #48
  40f88c:	b	411ae8 <_obstack_begin@@Base>
  40f890:	stp	x29, x30, [sp, #-32]!
  40f894:	str	x19, [sp, #16]
  40f898:	mov	x19, x0
  40f89c:	add	x0, x0, #0x18
  40f8a0:	mov	x1, xzr
  40f8a4:	mov	x29, sp
  40f8a8:	bl	411db4 <_obstack_free@@Base>
  40f8ac:	add	x0, x19, #0x70
  40f8b0:	mov	x1, xzr
  40f8b4:	bl	411db4 <_obstack_free@@Base>
  40f8b8:	add	x0, x19, #0xc8
  40f8bc:	ldr	x19, [sp, #16]
  40f8c0:	mov	x1, xzr
  40f8c4:	ldp	x29, x30, [sp], #32
  40f8c8:	b	411db4 <_obstack_free@@Base>
  40f8cc:	stp	x29, x30, [sp, #-48]!
  40f8d0:	stp	x22, x21, [sp, #16]
  40f8d4:	stp	x20, x19, [sp, #32]
  40f8d8:	mov	x29, sp
  40f8dc:	mov	x20, x1
  40f8e0:	mov	x19, x0
  40f8e4:	bl	4029c0 <fgetc@plt>
  40f8e8:	cmn	w0, #0x1
  40f8ec:	b.eq	40f94c <ferror@plt+0xcabc>  // b.none
  40f8f0:	mov	w22, w0
  40f8f4:	add	x21, x20, #0x18
  40f8f8:	b	40f920 <ferror@plt+0xca90>
  40f8fc:	add	x9, x8, #0x1
  40f900:	str	x9, [x20, #48]
  40f904:	strb	w22, [x8]
  40f908:	cbz	w22, 40f940 <ferror@plt+0xcab0>
  40f90c:	mov	x0, x19
  40f910:	bl	4029c0 <fgetc@plt>
  40f914:	mov	w22, w0
  40f918:	cmn	w0, #0x1
  40f91c:	b.eq	40f94c <ferror@plt+0xcabc>  // b.none
  40f920:	ldp	x8, x9, [x20, #48]
  40f924:	cmp	x9, x8
  40f928:	b.ne	40f8fc <ferror@plt+0xca6c>  // b.any
  40f92c:	mov	w1, #0x1                   	// #1
  40f930:	mov	x0, x21
  40f934:	bl	411c3c <_obstack_newchunk@@Base>
  40f938:	ldr	x8, [x20, #48]
  40f93c:	b	40f8fc <ferror@plt+0xca6c>
  40f940:	mov	x0, x20
  40f944:	bl	40fa74 <ferror@plt+0xcbe4>
  40f948:	b	40f90c <ferror@plt+0xca7c>
  40f94c:	ldp	x9, x8, [x20, #40]
  40f950:	cmp	x8, x9
  40f954:	b.eq	40f988 <ferror@plt+0xcaf8>  // b.none
  40f958:	ldr	x9, [x20, #56]
  40f95c:	cmp	x9, x8
  40f960:	b.ne	40f974 <ferror@plt+0xcae4>  // b.any
  40f964:	add	x0, x20, #0x18
  40f968:	mov	w1, #0x1                   	// #1
  40f96c:	bl	411c3c <_obstack_newchunk@@Base>
  40f970:	ldr	x8, [x20, #48]
  40f974:	add	x9, x8, #0x1
  40f978:	mov	x0, x20
  40f97c:	str	x9, [x20, #48]
  40f980:	strb	wzr, [x8]
  40f984:	bl	40fa74 <ferror@plt+0xcbe4>
  40f988:	ldp	x8, x9, [x20, #136]
  40f98c:	sub	x9, x9, x8
  40f990:	cmp	x9, #0x8
  40f994:	b.cs	40f9a8 <ferror@plt+0xcb18>  // b.hs, b.nlast
  40f998:	add	x0, x20, #0x70
  40f99c:	mov	w1, #0x8                   	// #8
  40f9a0:	bl	411c3c <_obstack_newchunk@@Base>
  40f9a4:	ldr	x8, [x20, #136]
  40f9a8:	str	xzr, [x8]
  40f9ac:	ldp	x8, x9, [x20, #128]
  40f9b0:	add	x9, x9, #0x8
  40f9b4:	cmp	x9, x8
  40f9b8:	str	x9, [x20, #136]
  40f9bc:	b.ne	40f9cc <ferror@plt+0xcb3c>  // b.any
  40f9c0:	ldrb	w10, [x20, #192]
  40f9c4:	orr	w10, w10, #0x2
  40f9c8:	strb	w10, [x20, #192]
  40f9cc:	ldr	x11, [x20, #160]
  40f9d0:	ldr	x12, [x20, #120]
  40f9d4:	ldr	x10, [x20, #144]
  40f9d8:	add	x9, x11, x9
  40f9dc:	bic	x11, x9, x11
  40f9e0:	sub	x9, x11, x12
  40f9e4:	sub	x12, x10, x12
  40f9e8:	cmp	x9, x12
  40f9ec:	str	x11, [x20, #136]
  40f9f0:	b.ls	40f9fc <ferror@plt+0xcb6c>  // b.plast
  40f9f4:	mov	x11, x10
  40f9f8:	str	x10, [x20, #136]
  40f9fc:	ldp	x9, x10, [x20, #216]
  40fa00:	str	x11, [x20, #128]
  40fa04:	str	x8, [x20, #8]
  40fa08:	cmp	x10, x9
  40fa0c:	b.ne	40fa1c <ferror@plt+0xcb8c>  // b.any
  40fa10:	ldrb	w8, [x20, #280]
  40fa14:	orr	w8, w8, #0x2
  40fa18:	strb	w8, [x20, #280]
  40fa1c:	ldr	x11, [x20, #248]
  40fa20:	ldr	x12, [x20, #208]
  40fa24:	ldr	x8, [x20, #232]
  40fa28:	add	x10, x11, x10
  40fa2c:	bic	x10, x10, x11
  40fa30:	sub	x11, x10, x12
  40fa34:	sub	x12, x8, x12
  40fa38:	cmp	x11, x12
  40fa3c:	str	x10, [x20, #224]
  40fa40:	b.ls	40fa4c <ferror@plt+0xcbbc>  // b.plast
  40fa44:	mov	x10, x8
  40fa48:	str	x8, [x20, #224]
  40fa4c:	mov	x0, x19
  40fa50:	str	x10, [x20, #216]
  40fa54:	str	x9, [x20, #16]
  40fa58:	bl	402e90 <ferror@plt>
  40fa5c:	ldp	x20, x19, [sp, #32]
  40fa60:	ldp	x22, x21, [sp, #16]
  40fa64:	cmp	w0, #0x0
  40fa68:	cset	w0, eq  // eq = none
  40fa6c:	ldp	x29, x30, [sp], #48
  40fa70:	ret
  40fa74:	sub	sp, sp, #0x30
  40fa78:	stp	x29, x30, [sp, #16]
  40fa7c:	stp	x20, x19, [sp, #32]
  40fa80:	ldp	x20, x8, [x0, #40]
  40fa84:	mov	x19, x0
  40fa88:	add	x29, sp, #0x10
  40fa8c:	mvn	x9, x20
  40fa90:	add	x9, x8, x9
  40fa94:	cmp	x8, x20
  40fa98:	str	x9, [sp, #8]
  40fa9c:	b.ne	40faac <ferror@plt+0xcc1c>  // b.any
  40faa0:	ldrb	w9, [x19, #104]
  40faa4:	orr	w9, w9, #0x2
  40faa8:	strb	w9, [x19, #104]
  40faac:	ldr	x9, [x19, #72]
  40fab0:	ldr	x11, [x19, #32]
  40fab4:	ldr	x10, [x19, #56]
  40fab8:	add	x8, x9, x8
  40fabc:	bic	x9, x8, x9
  40fac0:	sub	x8, x9, x11
  40fac4:	sub	x11, x10, x11
  40fac8:	cmp	x8, x11
  40facc:	str	x9, [x19, #48]
  40fad0:	b.ls	40fadc <ferror@plt+0xcc4c>  // b.plast
  40fad4:	mov	x9, x10
  40fad8:	str	x10, [x19, #48]
  40fadc:	ldp	x8, x10, [x19, #136]
  40fae0:	str	x9, [x19, #40]
  40fae4:	sub	x10, x10, x8
  40fae8:	cmp	x10, #0x8
  40faec:	b.cs	40fb00 <ferror@plt+0xcc70>  // b.hs, b.nlast
  40faf0:	add	x0, x19, #0x70
  40faf4:	mov	w1, #0x8                   	// #8
  40faf8:	bl	411c3c <_obstack_newchunk@@Base>
  40fafc:	ldr	x8, [x19, #136]
  40fb00:	str	x20, [x8]
  40fb04:	ldp	x8, x10, [x19, #224]
  40fb08:	ldr	x9, [x19, #136]
  40fb0c:	sub	x10, x10, x8
  40fb10:	add	x9, x9, #0x8
  40fb14:	cmp	x10, #0x7
  40fb18:	str	x9, [x19, #136]
  40fb1c:	b.hi	40fb30 <ferror@plt+0xcca0>  // b.pmore
  40fb20:	add	x0, x19, #0xc8
  40fb24:	mov	w1, #0x8                   	// #8
  40fb28:	bl	411c3c <_obstack_newchunk@@Base>
  40fb2c:	ldr	x8, [x19, #224]
  40fb30:	ldr	x9, [sp, #8]
  40fb34:	str	x9, [x8]
  40fb38:	ldr	x8, [x19, #224]
  40fb3c:	ldr	x9, [x19]
  40fb40:	add	x8, x8, #0x8
  40fb44:	add	x9, x9, #0x1
  40fb48:	str	x8, [x19, #224]
  40fb4c:	str	x9, [x19]
  40fb50:	ldp	x20, x19, [sp, #32]
  40fb54:	ldp	x29, x30, [sp, #16]
  40fb58:	add	sp, sp, #0x30
  40fb5c:	ret
  40fb60:	stp	x29, x30, [sp, #-16]!
  40fb64:	mov	x29, sp
  40fb68:	bl	402d40 <mkstemp@plt>
  40fb6c:	ldp	x29, x30, [sp], #16
  40fb70:	b	410018 <ferror@plt+0xd188>
  40fb74:	stp	x29, x30, [sp, #-32]!
  40fb78:	str	x19, [sp, #16]
  40fb7c:	mov	x29, sp
  40fb80:	mov	w19, w1
  40fb84:	bl	402af0 <mkostemp@plt>
  40fb88:	mov	w1, w19
  40fb8c:	ldr	x19, [sp, #16]
  40fb90:	ldp	x29, x30, [sp], #32
  40fb94:	b	41216c <_obstack_memory_used@@Base+0x31c>
  40fb98:	ldrb	w8, [x0]
  40fb9c:	ldrb	w9, [x1]
  40fba0:	cmp	w8, #0x2d
  40fba4:	b.ne	40fca4 <ferror@plt+0xce14>  // b.any
  40fba8:	ldrb	w8, [x0, #1]!
  40fbac:	subs	w11, w8, #0x30
  40fbb0:	b.eq	40fba8 <ferror@plt+0xcd18>  // b.none
  40fbb4:	cmp	w8, w3
  40fbb8:	b.eq	40fba8 <ferror@plt+0xcd18>  // b.none
  40fbbc:	cmp	w9, #0x2d
  40fbc0:	b.ne	40fe24 <ferror@plt+0xcf94>  // b.any
  40fbc4:	ldrb	w9, [x1, #1]!
  40fbc8:	cmp	w9, #0x30
  40fbcc:	b.eq	40fbc4 <ferror@plt+0xcd34>  // b.none
  40fbd0:	cmp	w9, w3
  40fbd4:	b.eq	40fbc4 <ferror@plt+0xcd34>  // b.none
  40fbd8:	b	40fbf8 <ferror@plt+0xcd68>
  40fbdc:	ldrb	w8, [x0, #1]!
  40fbe0:	cmp	w8, w3
  40fbe4:	b.eq	40fbdc <ferror@plt+0xcd4c>  // b.none
  40fbe8:	ldrb	w9, [x1, #1]!
  40fbec:	cmp	w9, w3
  40fbf0:	b.eq	40fbe8 <ferror@plt+0xcd58>  // b.none
  40fbf4:	sub	w11, w8, #0x30
  40fbf8:	cmp	w11, #0xa
  40fbfc:	cset	w10, cc  // cc = lo, ul, last
  40fc00:	cmp	w11, #0x9
  40fc04:	b.hi	40fc10 <ferror@plt+0xcd80>  // b.pmore
  40fc08:	cmp	w9, w8
  40fc0c:	b.eq	40fbdc <ferror@plt+0xcd4c>  // b.none
  40fc10:	cmp	w8, w2
  40fc14:	sub	w11, w9, #0x30
  40fc18:	cset	w12, ne  // ne = any
  40fc1c:	cmp	w11, #0xa
  40fc20:	cset	w13, cc  // cc = lo, ul, last
  40fc24:	cmp	w9, w2
  40fc28:	cset	w14, eq  // eq = none
  40fc2c:	eor	w10, w10, #0x1
  40fc30:	and	w10, w14, w10
  40fc34:	tbnz	w10, #0, 40fe90 <ferror@plt+0xd000>
  40fc38:	orr	w10, w13, w12
  40fc3c:	tbz	w10, #0, 40fe90 <ferror@plt+0xd000>
  40fc40:	sub	w10, w8, #0x30
  40fc44:	cmp	w10, #0x9
  40fc48:	b.hi	40ff10 <ferror@plt+0xd080>  // b.pmore
  40fc4c:	mov	x10, xzr
  40fc50:	ldrb	w12, [x0, #1]!
  40fc54:	cmp	w12, w3
  40fc58:	b.eq	40fc50 <ferror@plt+0xcdc0>  // b.none
  40fc5c:	sub	w12, w12, #0x30
  40fc60:	cmp	w12, #0xa
  40fc64:	add	x10, x10, #0x1
  40fc68:	b.cc	40fc50 <ferror@plt+0xcdc0>  // b.lo, b.ul, b.last
  40fc6c:	cmp	w11, #0x9
  40fc70:	b.hi	40ff1c <ferror@plt+0xd08c>  // b.pmore
  40fc74:	mov	x11, xzr
  40fc78:	ldrb	w12, [x1, #1]!
  40fc7c:	cmp	w12, w3
  40fc80:	b.eq	40fc78 <ferror@plt+0xcde8>  // b.none
  40fc84:	sub	w12, w12, #0x30
  40fc88:	cmp	w12, #0xa
  40fc8c:	add	x11, x11, #0x1
  40fc90:	b.cc	40fc78 <ferror@plt+0xcde8>  // b.lo, b.ul, b.last
  40fc94:	cmp	x10, x11
  40fc98:	b.ne	40ff28 <ferror@plt+0xd098>  // b.any
  40fc9c:	sub	w8, w9, w8
  40fca0:	b	40fde4 <ferror@plt+0xcf54>
  40fca4:	cmp	w9, #0x2d
  40fca8:	b.ne	40fcf4 <ferror@plt+0xce64>  // b.any
  40fcac:	ldrb	w9, [x1, #1]!
  40fcb0:	cmp	w9, #0x30
  40fcb4:	b.eq	40fcac <ferror@plt+0xce1c>  // b.none
  40fcb8:	cmp	w9, w3
  40fcbc:	b.eq	40fcac <ferror@plt+0xce1c>  // b.none
  40fcc0:	cmp	w9, w2
  40fcc4:	b.ne	40fcdc <ferror@plt+0xce4c>  // b.any
  40fcc8:	mov	w10, #0x1                   	// #1
  40fccc:	ldrb	w9, [x1, x10]
  40fcd0:	add	x10, x10, #0x1
  40fcd4:	cmp	w9, #0x30
  40fcd8:	b.eq	40fccc <ferror@plt+0xce3c>  // b.none
  40fcdc:	sub	w9, w9, #0x30
  40fce0:	cmp	w9, #0xa
  40fce4:	b.cs	40fdf4 <ferror@plt+0xcf64>  // b.hs, b.nlast
  40fce8:	mov	w0, #0x1                   	// #1
  40fcec:	ret
  40fcf0:	ldrb	w8, [x0, #1]!
  40fcf4:	cmp	w8, #0x30
  40fcf8:	b.eq	40fcf0 <ferror@plt+0xce60>  // b.none
  40fcfc:	cmp	w8, w3
  40fd00:	b.eq	40fcf0 <ferror@plt+0xce60>  // b.none
  40fd04:	b	40fd0c <ferror@plt+0xce7c>
  40fd08:	ldrb	w9, [x1, #1]!
  40fd0c:	cmp	w9, #0x30
  40fd10:	b.eq	40fd08 <ferror@plt+0xce78>  // b.none
  40fd14:	cmp	w9, w3
  40fd18:	b.eq	40fd08 <ferror@plt+0xce78>  // b.none
  40fd1c:	b	40fd38 <ferror@plt+0xcea8>
  40fd20:	ldrb	w8, [x0, #1]!
  40fd24:	cmp	w8, w3
  40fd28:	b.eq	40fd20 <ferror@plt+0xce90>  // b.none
  40fd2c:	ldrb	w9, [x1, #1]!
  40fd30:	cmp	w9, w3
  40fd34:	b.eq	40fd2c <ferror@plt+0xce9c>  // b.none
  40fd38:	sub	w11, w8, #0x30
  40fd3c:	cmp	w11, #0xa
  40fd40:	cset	w10, cc  // cc = lo, ul, last
  40fd44:	cmp	w11, #0x9
  40fd48:	b.hi	40fd54 <ferror@plt+0xcec4>  // b.pmore
  40fd4c:	cmp	w8, w9
  40fd50:	b.eq	40fd20 <ferror@plt+0xce90>  // b.none
  40fd54:	cmp	w8, w2
  40fd58:	sub	w11, w9, #0x30
  40fd5c:	cset	w12, ne  // ne = any
  40fd60:	cmp	w11, #0xa
  40fd64:	cset	w13, cc  // cc = lo, ul, last
  40fd68:	cmp	w9, w2
  40fd6c:	cset	w14, eq  // eq = none
  40fd70:	eor	w10, w10, #0x1
  40fd74:	and	w10, w14, w10
  40fd78:	tbnz	w10, #0, 40fed0 <ferror@plt+0xd040>
  40fd7c:	orr	w10, w13, w12
  40fd80:	tbz	w10, #0, 40fed0 <ferror@plt+0xd040>
  40fd84:	sub	w10, w8, #0x30
  40fd88:	cmp	w10, #0x9
  40fd8c:	b.hi	40ff34 <ferror@plt+0xd0a4>  // b.pmore
  40fd90:	mov	x10, xzr
  40fd94:	ldrb	w12, [x0, #1]!
  40fd98:	cmp	w12, w3
  40fd9c:	b.eq	40fd94 <ferror@plt+0xcf04>  // b.none
  40fda0:	sub	w12, w12, #0x30
  40fda4:	cmp	w12, #0xa
  40fda8:	add	x10, x10, #0x1
  40fdac:	b.cc	40fd94 <ferror@plt+0xcf04>  // b.lo, b.ul, b.last
  40fdb0:	cmp	w11, #0x9
  40fdb4:	b.hi	40ff40 <ferror@plt+0xd0b0>  // b.pmore
  40fdb8:	mov	x11, xzr
  40fdbc:	ldrb	w12, [x1, #1]!
  40fdc0:	cmp	w12, w3
  40fdc4:	b.eq	40fdbc <ferror@plt+0xcf2c>  // b.none
  40fdc8:	sub	w12, w12, #0x30
  40fdcc:	cmp	w12, #0xa
  40fdd0:	add	x11, x11, #0x1
  40fdd4:	b.cc	40fdbc <ferror@plt+0xcf2c>  // b.lo, b.ul, b.last
  40fdd8:	cmp	x10, x11
  40fddc:	b.ne	40ff4c <ferror@plt+0xd0bc>  // b.any
  40fde0:	sub	w8, w8, w9
  40fde4:	cmp	x10, #0x0
  40fde8:	csel	w0, wzr, w8, eq  // eq = none
  40fdec:	ret
  40fdf0:	ldrb	w8, [x0, #1]!
  40fdf4:	cmp	w8, #0x30
  40fdf8:	b.eq	40fdf0 <ferror@plt+0xcf60>  // b.none
  40fdfc:	cmp	w8, w3
  40fe00:	b.eq	40fdf0 <ferror@plt+0xcf60>  // b.none
  40fe04:	cmp	w8, w2
  40fe08:	b.ne	40fe1c <ferror@plt+0xcf8c>  // b.any
  40fe0c:	add	x9, x0, #0x1
  40fe10:	ldrb	w8, [x9], #1
  40fe14:	cmp	w8, #0x30
  40fe18:	b.eq	40fe10 <ferror@plt+0xcf80>  // b.none
  40fe1c:	sub	w8, w8, #0x30
  40fe20:	b	40ffd4 <ferror@plt+0xd144>
  40fe24:	cmp	w8, w2
  40fe28:	b.ne	40fe40 <ferror@plt+0xcfb0>  // b.any
  40fe2c:	mov	w10, #0x1                   	// #1
  40fe30:	ldrb	w8, [x0, x10]
  40fe34:	add	x10, x10, #0x1
  40fe38:	cmp	w8, #0x30
  40fe3c:	b.eq	40fe30 <ferror@plt+0xcfa0>  // b.none
  40fe40:	sub	w8, w8, #0x30
  40fe44:	cmp	w8, #0xa
  40fe48:	b.cs	40fe58 <ferror@plt+0xcfc8>  // b.hs, b.nlast
  40fe4c:	mov	w0, #0xffffffff            	// #-1
  40fe50:	ret
  40fe54:	ldrb	w9, [x1, #1]!
  40fe58:	cmp	w9, #0x30
  40fe5c:	b.eq	40fe54 <ferror@plt+0xcfc4>  // b.none
  40fe60:	cmp	w9, w3
  40fe64:	b.eq	40fe54 <ferror@plt+0xcfc4>  // b.none
  40fe68:	cmp	w9, w2
  40fe6c:	b.ne	40fe80 <ferror@plt+0xcff0>  // b.any
  40fe70:	add	x8, x1, #0x1
  40fe74:	ldrb	w9, [x8], #1
  40fe78:	cmp	w9, #0x30
  40fe7c:	b.eq	40fe74 <ferror@plt+0xcfe4>  // b.none
  40fe80:	sub	w8, w9, #0x30
  40fe84:	cmp	w8, #0xa
  40fe88:	csetm	w0, cc  // cc = lo, ul, last
  40fe8c:	ret
  40fe90:	cmp	w9, w2, uxtb
  40fe94:	b.ne	40ff58 <ferror@plt+0xd0c8>  // b.any
  40fe98:	add	x9, x1, #0x1
  40fe9c:	cmp	w8, w2, uxtb
  40fea0:	b.ne	40ffc8 <ferror@plt+0xd138>  // b.any
  40fea4:	add	x8, x0, #0x1
  40fea8:	ldrb	w10, [x9]
  40feac:	ldrb	w11, [x8]
  40feb0:	subs	w0, w10, w11
  40feb4:	sub	w10, w10, #0x30
  40feb8:	b.ne	40ffac <ferror@plt+0xd11c>  // b.any
  40febc:	add	x9, x9, #0x1
  40fec0:	cmp	w10, #0xa
  40fec4:	add	x8, x8, #0x1
  40fec8:	b.cc	40fea8 <ferror@plt+0xd018>  // b.lo, b.ul, b.last
  40fecc:	b	40fdec <ferror@plt+0xcf5c>
  40fed0:	cmp	w8, w2, uxtb
  40fed4:	b.ne	40ff74 <ferror@plt+0xd0e4>  // b.any
  40fed8:	cmp	w9, w8
  40fedc:	b.ne	40ff98 <ferror@plt+0xd108>  // b.any
  40fee0:	add	x9, x0, #0x1
  40fee4:	add	x8, x1, #0x1
  40fee8:	ldrb	w10, [x9]
  40feec:	ldrb	w11, [x8]
  40fef0:	subs	w0, w10, w11
  40fef4:	sub	w10, w10, #0x30
  40fef8:	b.ne	40ffe0 <ferror@plt+0xd150>  // b.any
  40fefc:	add	x9, x9, #0x1
  40ff00:	cmp	w10, #0xa
  40ff04:	add	x8, x8, #0x1
  40ff08:	b.cc	40fee8 <ferror@plt+0xd058>  // b.lo, b.ul, b.last
  40ff0c:	b	40fdec <ferror@plt+0xcf5c>
  40ff10:	mov	x10, xzr
  40ff14:	cmp	w11, #0x9
  40ff18:	b.ls	40fc74 <ferror@plt+0xcde4>  // b.plast
  40ff1c:	mov	x11, xzr
  40ff20:	cmp	x10, x11
  40ff24:	b.eq	40fc9c <ferror@plt+0xce0c>  // b.none
  40ff28:	mov	w8, #0x1                   	// #1
  40ff2c:	cneg	w0, w8, cs  // cs = hs, nlast
  40ff30:	ret
  40ff34:	mov	x10, xzr
  40ff38:	cmp	w11, #0x9
  40ff3c:	b.ls	40fdb8 <ferror@plt+0xcf28>  // b.plast
  40ff40:	mov	x11, xzr
  40ff44:	cmp	x10, x11
  40ff48:	b.eq	40fde0 <ferror@plt+0xcf50>  // b.none
  40ff4c:	mov	w8, #0xffffffff            	// #-1
  40ff50:	cneg	w0, w8, cs  // cs = hs, nlast
  40ff54:	ret
  40ff58:	cmp	w8, w2, uxtb
  40ff5c:	b.ne	410010 <ferror@plt+0xd180>  // b.any
  40ff60:	add	x8, x0, #0x1
  40ff64:	ldrb	w9, [x8], #1
  40ff68:	subs	w9, w9, #0x30
  40ff6c:	b.eq	40ff64 <ferror@plt+0xd0d4>  // b.none
  40ff70:	b	40ff8c <ferror@plt+0xd0fc>
  40ff74:	cmp	w9, w2, uxtb
  40ff78:	b.ne	410010 <ferror@plt+0xd180>  // b.any
  40ff7c:	add	x8, x1, #0x1
  40ff80:	ldrb	w9, [x8], #1
  40ff84:	subs	w9, w9, #0x30
  40ff88:	b.eq	40ff80 <ferror@plt+0xd0f0>  // b.none
  40ff8c:	cmp	w9, #0xa
  40ff90:	csetm	w0, cc  // cc = lo, ul, last
  40ff94:	ret
  40ff98:	add	x9, x0, #0x1
  40ff9c:	ldrb	w8, [x9], #1
  40ffa0:	subs	w8, w8, #0x30
  40ffa4:	b.eq	40ff9c <ferror@plt+0xd10c>  // b.none
  40ffa8:	b	40ffd4 <ferror@plt+0xd144>
  40ffac:	cmp	w10, #0x9
  40ffb0:	sub	w11, w11, #0x30
  40ffb4:	b.hi	40ffc0 <ferror@plt+0xd130>  // b.pmore
  40ffb8:	cmp	w11, #0x9
  40ffbc:	b.ls	40fdec <ferror@plt+0xcf5c>  // b.plast
  40ffc0:	cmp	w10, #0xa
  40ffc4:	b.cs	410008 <ferror@plt+0xd178>  // b.hs, b.nlast
  40ffc8:	ldrb	w8, [x9], #1
  40ffcc:	subs	w8, w8, #0x30
  40ffd0:	b.eq	40ffc8 <ferror@plt+0xd138>  // b.none
  40ffd4:	cmp	w8, #0xa
  40ffd8:	cset	w0, cc  // cc = lo, ul, last
  40ffdc:	ret
  40ffe0:	cmp	w10, #0x9
  40ffe4:	sub	w11, w11, #0x30
  40ffe8:	b.hi	40fff4 <ferror@plt+0xd164>  // b.pmore
  40ffec:	cmp	w11, #0x9
  40fff0:	b.ls	40fdec <ferror@plt+0xcf5c>  // b.plast
  40fff4:	cmp	w10, #0xa
  40fff8:	b.cc	40ff9c <ferror@plt+0xd10c>  // b.lo, b.ul, b.last
  40fffc:	cmp	w11, #0xa
  410000:	b.cc	40ff80 <ferror@plt+0xd0f0>  // b.lo, b.ul, b.last
  410004:	b	410010 <ferror@plt+0xd180>
  410008:	cmp	w11, #0xa
  41000c:	b.cc	40ff64 <ferror@plt+0xd0d4>  // b.lo, b.ul, b.last
  410010:	mov	w0, wzr
  410014:	ret
  410018:	stp	x29, x30, [sp, #-48]!
  41001c:	stp	x20, x19, [sp, #32]
  410020:	mov	w19, w0
  410024:	cmp	w0, #0x2
  410028:	stp	x22, x21, [sp, #16]
  41002c:	mov	x29, sp
  410030:	b.hi	410060 <ferror@plt+0xd1d0>  // b.pmore
  410034:	mov	w0, w19
  410038:	bl	41249c <_obstack_memory_used@@Base+0x64c>
  41003c:	mov	w20, w0
  410040:	bl	402e00 <__errno_location@plt>
  410044:	ldr	w22, [x0]
  410048:	mov	x21, x0
  41004c:	mov	w0, w19
  410050:	bl	402a70 <close@plt>
  410054:	str	w22, [x21]
  410058:	mov	w0, w20
  41005c:	b	410064 <ferror@plt+0xd1d4>
  410060:	mov	w0, w19
  410064:	ldp	x20, x19, [sp, #32]
  410068:	ldp	x22, x21, [sp, #16]
  41006c:	ldp	x29, x30, [sp], #48
  410070:	ret
  410074:	sub	sp, sp, #0x50
  410078:	str	x21, [sp, #48]
  41007c:	stp	x20, x19, [sp, #64]
  410080:	mov	x21, x5
  410084:	mov	x20, x4
  410088:	mov	x5, x3
  41008c:	mov	x4, x2
  410090:	mov	x19, x0
  410094:	stp	x29, x30, [sp, #32]
  410098:	add	x29, sp, #0x20
  41009c:	cbz	x1, 4100bc <ferror@plt+0xd22c>
  4100a0:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x31b0>
  4100a4:	mov	x3, x1
  4100a8:	add	x2, x2, #0x2c6
  4100ac:	mov	w1, #0x1                   	// #1
  4100b0:	mov	x0, x19
  4100b4:	bl	402b90 <__fprintf_chk@plt>
  4100b8:	b	4100d8 <ferror@plt+0xd248>
  4100bc:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x31b0>
  4100c0:	add	x2, x2, #0x2d2
  4100c4:	mov	w1, #0x1                   	// #1
  4100c8:	mov	x0, x19
  4100cc:	mov	x3, x4
  4100d0:	mov	x4, x5
  4100d4:	bl	402b90 <__fprintf_chk@plt>
  4100d8:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x31b0>
  4100dc:	add	x1, x1, #0x2d9
  4100e0:	mov	w2, #0x5                   	// #5
  4100e4:	mov	x0, xzr
  4100e8:	bl	402d70 <dcgettext@plt>
  4100ec:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x31b0>
  4100f0:	mov	x3, x0
  4100f4:	add	x2, x2, #0x5a4
  4100f8:	mov	w1, #0x1                   	// #1
  4100fc:	mov	w4, #0x7e3                 	// #2019
  410100:	mov	x0, x19
  410104:	bl	402b90 <__fprintf_chk@plt>
  410108:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x31b0>
  41010c:	add	x1, x1, #0x2dd
  410110:	mov	w2, #0x5                   	// #5
  410114:	mov	x0, xzr
  410118:	bl	402d70 <dcgettext@plt>
  41011c:	mov	x1, x19
  410120:	bl	402d80 <fputs_unlocked@plt>
  410124:	cmp	x21, #0x9
  410128:	b.hi	41017c <ferror@plt+0xd2ec>  // b.pmore
  41012c:	adrp	x8, 415000 <_obstack_memory_used@@Base+0x31b0>
  410130:	add	x8, x8, #0x2bc
  410134:	adr	x9, 410144 <ferror@plt+0xd2b4>
  410138:	ldrb	w10, [x8, x21]
  41013c:	add	x9, x9, x10, lsl #2
  410140:	br	x9
  410144:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x31b0>
  410148:	add	x1, x1, #0x3a9
  41014c:	mov	w2, #0x5                   	// #5
  410150:	mov	x0, xzr
  410154:	bl	402d70 <dcgettext@plt>
  410158:	ldr	x3, [x20]
  41015c:	mov	x2, x0
  410160:	mov	x0, x19
  410164:	ldp	x20, x19, [sp, #64]
  410168:	ldr	x21, [sp, #48]
  41016c:	ldp	x29, x30, [sp, #32]
  410170:	mov	w1, #0x1                   	// #1
  410174:	add	sp, sp, #0x50
  410178:	b	402b90 <__fprintf_chk@plt>
  41017c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x31b0>
  410180:	add	x1, x1, #0x4e8
  410184:	b	4102e0 <ferror@plt+0xd450>
  410188:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x31b0>
  41018c:	add	x1, x1, #0x3b9
  410190:	mov	w2, #0x5                   	// #5
  410194:	mov	x0, xzr
  410198:	bl	402d70 <dcgettext@plt>
  41019c:	ldp	x3, x4, [x20]
  4101a0:	mov	x2, x0
  4101a4:	mov	x0, x19
  4101a8:	ldp	x20, x19, [sp, #64]
  4101ac:	ldr	x21, [sp, #48]
  4101b0:	ldp	x29, x30, [sp, #32]
  4101b4:	mov	w1, #0x1                   	// #1
  4101b8:	add	sp, sp, #0x50
  4101bc:	b	402b90 <__fprintf_chk@plt>
  4101c0:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x31b0>
  4101c4:	add	x1, x1, #0x3d0
  4101c8:	mov	w2, #0x5                   	// #5
  4101cc:	mov	x0, xzr
  4101d0:	bl	402d70 <dcgettext@plt>
  4101d4:	ldp	x3, x4, [x20]
  4101d8:	ldr	x5, [x20, #16]
  4101dc:	mov	x2, x0
  4101e0:	mov	x0, x19
  4101e4:	ldp	x20, x19, [sp, #64]
  4101e8:	ldr	x21, [sp, #48]
  4101ec:	ldp	x29, x30, [sp, #32]
  4101f0:	mov	w1, #0x1                   	// #1
  4101f4:	add	sp, sp, #0x50
  4101f8:	b	402b90 <__fprintf_chk@plt>
  4101fc:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x31b0>
  410200:	add	x1, x1, #0x3ec
  410204:	mov	w2, #0x5                   	// #5
  410208:	mov	x0, xzr
  41020c:	bl	402d70 <dcgettext@plt>
  410210:	ldp	x3, x4, [x20]
  410214:	ldp	x5, x6, [x20, #16]
  410218:	mov	x2, x0
  41021c:	mov	x0, x19
  410220:	ldp	x20, x19, [sp, #64]
  410224:	ldr	x21, [sp, #48]
  410228:	ldp	x29, x30, [sp, #32]
  41022c:	mov	w1, #0x1                   	// #1
  410230:	add	sp, sp, #0x50
  410234:	b	402b90 <__fprintf_chk@plt>
  410238:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x31b0>
  41023c:	add	x1, x1, #0x40c
  410240:	mov	w2, #0x5                   	// #5
  410244:	mov	x0, xzr
  410248:	bl	402d70 <dcgettext@plt>
  41024c:	ldp	x3, x4, [x20]
  410250:	ldp	x5, x6, [x20, #16]
  410254:	ldr	x7, [x20, #32]
  410258:	mov	x2, x0
  41025c:	mov	x0, x19
  410260:	ldp	x20, x19, [sp, #64]
  410264:	ldr	x21, [sp, #48]
  410268:	ldp	x29, x30, [sp, #32]
  41026c:	mov	w1, #0x1                   	// #1
  410270:	add	sp, sp, #0x50
  410274:	b	402b90 <__fprintf_chk@plt>
  410278:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x31b0>
  41027c:	add	x1, x1, #0x430
  410280:	mov	w2, #0x5                   	// #5
  410284:	mov	x0, xzr
  410288:	bl	402d70 <dcgettext@plt>
  41028c:	ldp	x3, x4, [x20]
  410290:	ldp	x5, x6, [x20, #16]
  410294:	ldp	x7, x8, [x20, #32]
  410298:	mov	x2, x0
  41029c:	b	4102cc <ferror@plt+0xd43c>
  4102a0:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x31b0>
  4102a4:	add	x1, x1, #0x458
  4102a8:	mov	w2, #0x5                   	// #5
  4102ac:	mov	x0, xzr
  4102b0:	bl	402d70 <dcgettext@plt>
  4102b4:	ldr	x9, [x20, #48]
  4102b8:	ldp	x3, x4, [x20]
  4102bc:	ldp	x5, x6, [x20, #16]
  4102c0:	ldp	x7, x8, [x20, #32]
  4102c4:	mov	x2, x0
  4102c8:	str	x9, [sp, #8]
  4102cc:	mov	w1, #0x1                   	// #1
  4102d0:	str	x8, [sp]
  4102d4:	b	410344 <ferror@plt+0xd4b4>
  4102d8:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x31b0>
  4102dc:	add	x1, x1, #0x4b4
  4102e0:	mov	w2, #0x5                   	// #5
  4102e4:	mov	x0, xzr
  4102e8:	bl	402d70 <dcgettext@plt>
  4102ec:	ldp	x8, x9, [x20, #56]
  4102f0:	ldp	x3, x4, [x20]
  4102f4:	ldp	x5, x6, [x20, #16]
  4102f8:	ldr	x7, [x20, #32]
  4102fc:	ldur	q0, [x20, #40]
  410300:	mov	x2, x0
  410304:	str	x9, [sp, #24]
  410308:	b	410338 <ferror@plt+0xd4a8>
  41030c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x31b0>
  410310:	add	x1, x1, #0x484
  410314:	mov	w2, #0x5                   	// #5
  410318:	mov	x0, xzr
  41031c:	bl	402d70 <dcgettext@plt>
  410320:	ldp	x3, x4, [x20]
  410324:	ldp	x5, x6, [x20, #16]
  410328:	ldr	x7, [x20, #32]
  41032c:	ldur	q0, [x20, #40]
  410330:	ldr	x8, [x20, #56]
  410334:	mov	x2, x0
  410338:	str	x8, [sp, #16]
  41033c:	mov	w1, #0x1                   	// #1
  410340:	str	q0, [sp]
  410344:	mov	x0, x19
  410348:	bl	402b90 <__fprintf_chk@plt>
  41034c:	ldp	x20, x19, [sp, #64]
  410350:	ldr	x21, [sp, #48]
  410354:	ldp	x29, x30, [sp, #32]
  410358:	add	sp, sp, #0x50
  41035c:	ret
  410360:	mov	x8, xzr
  410364:	ldr	x9, [x4, x8, lsl #3]
  410368:	add	x8, x8, #0x1
  41036c:	cbnz	x9, 410364 <ferror@plt+0xd4d4>
  410370:	sub	x5, x8, #0x1
  410374:	b	410074 <ferror@plt+0xd1e4>
  410378:	sub	sp, sp, #0x60
  41037c:	stp	x29, x30, [sp, #80]
  410380:	ldr	w9, [x4, #24]
  410384:	add	x29, sp, #0x50
  410388:	mov	w8, w9
  41038c:	tbz	w9, #31, 4103b0 <ferror@plt+0xd520>
  410390:	add	w8, w9, #0x8
  410394:	cmn	w9, #0x8
  410398:	str	w8, [x4, #24]
  41039c:	b.gt	4103b0 <ferror@plt+0xd520>
  4103a0:	ldr	x10, [x4, #8]
  4103a4:	sxtw	x9, w9
  4103a8:	add	x9, x10, x9
  4103ac:	b	4103bc <ferror@plt+0xd52c>
  4103b0:	ldr	x9, [x4]
  4103b4:	add	x10, x9, #0x8
  4103b8:	str	x10, [x4]
  4103bc:	ldr	x9, [x9]
  4103c0:	str	x9, [sp]
  4103c4:	cbz	x9, 4103d4 <ferror@plt+0xd544>
  4103c8:	tbnz	w8, #31, 4103dc <ferror@plt+0xd54c>
  4103cc:	mov	w9, w8
  4103d0:	b	4103f8 <ferror@plt+0xd568>
  4103d4:	mov	x5, xzr
  4103d8:	b	410650 <ferror@plt+0xd7c0>
  4103dc:	add	w9, w8, #0x8
  4103e0:	cmn	w8, #0x8
  4103e4:	str	w9, [x4, #24]
  4103e8:	b.gt	4103f8 <ferror@plt+0xd568>
  4103ec:	ldr	x10, [x4, #8]
  4103f0:	add	x8, x10, w8, sxtw
  4103f4:	b	410404 <ferror@plt+0xd574>
  4103f8:	ldr	x8, [x4]
  4103fc:	add	x10, x8, #0x8
  410400:	str	x10, [x4]
  410404:	ldr	x8, [x8]
  410408:	str	x8, [sp, #8]
  41040c:	cbz	x8, 41041c <ferror@plt+0xd58c>
  410410:	tbnz	w9, #31, 410424 <ferror@plt+0xd594>
  410414:	mov	w8, w9
  410418:	b	410440 <ferror@plt+0xd5b0>
  41041c:	mov	w5, #0x1                   	// #1
  410420:	b	410650 <ferror@plt+0xd7c0>
  410424:	add	w8, w9, #0x8
  410428:	cmn	w9, #0x8
  41042c:	str	w8, [x4, #24]
  410430:	b.gt	410440 <ferror@plt+0xd5b0>
  410434:	ldr	x10, [x4, #8]
  410438:	add	x9, x10, w9, sxtw
  41043c:	b	41044c <ferror@plt+0xd5bc>
  410440:	ldr	x9, [x4]
  410444:	add	x10, x9, #0x8
  410448:	str	x10, [x4]
  41044c:	ldr	x9, [x9]
  410450:	str	x9, [sp, #16]
  410454:	cbz	x9, 410464 <ferror@plt+0xd5d4>
  410458:	tbnz	w8, #31, 41046c <ferror@plt+0xd5dc>
  41045c:	mov	w9, w8
  410460:	b	410488 <ferror@plt+0xd5f8>
  410464:	mov	w5, #0x2                   	// #2
  410468:	b	410650 <ferror@plt+0xd7c0>
  41046c:	add	w9, w8, #0x8
  410470:	cmn	w8, #0x8
  410474:	str	w9, [x4, #24]
  410478:	b.gt	410488 <ferror@plt+0xd5f8>
  41047c:	ldr	x10, [x4, #8]
  410480:	add	x8, x10, w8, sxtw
  410484:	b	410494 <ferror@plt+0xd604>
  410488:	ldr	x8, [x4]
  41048c:	add	x10, x8, #0x8
  410490:	str	x10, [x4]
  410494:	ldr	x8, [x8]
  410498:	str	x8, [sp, #24]
  41049c:	cbz	x8, 4104ac <ferror@plt+0xd61c>
  4104a0:	tbnz	w9, #31, 4104b4 <ferror@plt+0xd624>
  4104a4:	mov	w8, w9
  4104a8:	b	4104d0 <ferror@plt+0xd640>
  4104ac:	mov	w5, #0x3                   	// #3
  4104b0:	b	410650 <ferror@plt+0xd7c0>
  4104b4:	add	w8, w9, #0x8
  4104b8:	cmn	w9, #0x8
  4104bc:	str	w8, [x4, #24]
  4104c0:	b.gt	4104d0 <ferror@plt+0xd640>
  4104c4:	ldr	x10, [x4, #8]
  4104c8:	add	x9, x10, w9, sxtw
  4104cc:	b	4104dc <ferror@plt+0xd64c>
  4104d0:	ldr	x9, [x4]
  4104d4:	add	x10, x9, #0x8
  4104d8:	str	x10, [x4]
  4104dc:	ldr	x9, [x9]
  4104e0:	str	x9, [sp, #32]
  4104e4:	cbz	x9, 4104f4 <ferror@plt+0xd664>
  4104e8:	tbnz	w8, #31, 4104fc <ferror@plt+0xd66c>
  4104ec:	mov	w9, w8
  4104f0:	b	410518 <ferror@plt+0xd688>
  4104f4:	mov	w5, #0x4                   	// #4
  4104f8:	b	410650 <ferror@plt+0xd7c0>
  4104fc:	add	w9, w8, #0x8
  410500:	cmn	w8, #0x8
  410504:	str	w9, [x4, #24]
  410508:	b.gt	410518 <ferror@plt+0xd688>
  41050c:	ldr	x10, [x4, #8]
  410510:	add	x8, x10, w8, sxtw
  410514:	b	410524 <ferror@plt+0xd694>
  410518:	ldr	x8, [x4]
  41051c:	add	x10, x8, #0x8
  410520:	str	x10, [x4]
  410524:	ldr	x8, [x8]
  410528:	str	x8, [sp, #40]
  41052c:	cbz	x8, 41053c <ferror@plt+0xd6ac>
  410530:	tbnz	w9, #31, 410544 <ferror@plt+0xd6b4>
  410534:	mov	w8, w9
  410538:	b	410560 <ferror@plt+0xd6d0>
  41053c:	mov	w5, #0x5                   	// #5
  410540:	b	410650 <ferror@plt+0xd7c0>
  410544:	add	w8, w9, #0x8
  410548:	cmn	w9, #0x8
  41054c:	str	w8, [x4, #24]
  410550:	b.gt	410560 <ferror@plt+0xd6d0>
  410554:	ldr	x10, [x4, #8]
  410558:	add	x9, x10, w9, sxtw
  41055c:	b	41056c <ferror@plt+0xd6dc>
  410560:	ldr	x9, [x4]
  410564:	add	x10, x9, #0x8
  410568:	str	x10, [x4]
  41056c:	ldr	x9, [x9]
  410570:	str	x9, [sp, #48]
  410574:	cbz	x9, 410584 <ferror@plt+0xd6f4>
  410578:	tbnz	w8, #31, 41058c <ferror@plt+0xd6fc>
  41057c:	mov	w9, w8
  410580:	b	4105a8 <ferror@plt+0xd718>
  410584:	mov	w5, #0x6                   	// #6
  410588:	b	410650 <ferror@plt+0xd7c0>
  41058c:	add	w9, w8, #0x8
  410590:	cmn	w8, #0x8
  410594:	str	w9, [x4, #24]
  410598:	b.gt	4105a8 <ferror@plt+0xd718>
  41059c:	ldr	x10, [x4, #8]
  4105a0:	add	x8, x10, w8, sxtw
  4105a4:	b	4105b4 <ferror@plt+0xd724>
  4105a8:	ldr	x8, [x4]
  4105ac:	add	x10, x8, #0x8
  4105b0:	str	x10, [x4]
  4105b4:	ldr	x8, [x8]
  4105b8:	str	x8, [sp, #56]
  4105bc:	cbz	x8, 4105cc <ferror@plt+0xd73c>
  4105c0:	tbnz	w9, #31, 4105d4 <ferror@plt+0xd744>
  4105c4:	mov	w8, w9
  4105c8:	b	4105f0 <ferror@plt+0xd760>
  4105cc:	mov	w5, #0x7                   	// #7
  4105d0:	b	410650 <ferror@plt+0xd7c0>
  4105d4:	add	w8, w9, #0x8
  4105d8:	cmn	w9, #0x8
  4105dc:	str	w8, [x4, #24]
  4105e0:	b.gt	4105f0 <ferror@plt+0xd760>
  4105e4:	ldr	x10, [x4, #8]
  4105e8:	add	x9, x10, w9, sxtw
  4105ec:	b	4105fc <ferror@plt+0xd76c>
  4105f0:	ldr	x9, [x4]
  4105f4:	add	x10, x9, #0x8
  4105f8:	str	x10, [x4]
  4105fc:	ldr	x9, [x9]
  410600:	str	x9, [sp, #64]
  410604:	cbz	x9, 41064c <ferror@plt+0xd7bc>
  410608:	tbz	w8, #31, 410628 <ferror@plt+0xd798>
  41060c:	add	w9, w8, #0x8
  410610:	cmn	w8, #0x8
  410614:	str	w9, [x4, #24]
  410618:	b.gt	410628 <ferror@plt+0xd798>
  41061c:	ldr	x9, [x4, #8]
  410620:	add	x8, x9, w8, sxtw
  410624:	b	410634 <ferror@plt+0xd7a4>
  410628:	ldr	x8, [x4]
  41062c:	add	x9, x8, #0x8
  410630:	str	x9, [x4]
  410634:	ldr	x8, [x8]
  410638:	str	x8, [sp, #72]
  41063c:	cmp	x8, #0x0
  410640:	mov	w8, #0x9                   	// #9
  410644:	cinc	x5, x8, ne  // ne = any
  410648:	b	410650 <ferror@plt+0xd7c0>
  41064c:	mov	w5, #0x8                   	// #8
  410650:	mov	x4, sp
  410654:	bl	410074 <ferror@plt+0xd1e4>
  410658:	ldp	x29, x30, [sp, #80]
  41065c:	add	sp, sp, #0x60
  410660:	ret
  410664:	sub	sp, sp, #0xf0
  410668:	stp	x29, x30, [sp, #224]
  41066c:	add	x29, sp, #0xe0
  410670:	mov	x8, #0xffffffffffffffe0    	// #-32
  410674:	mov	x9, sp
  410678:	sub	x10, x29, #0x60
  41067c:	movk	x8, #0xff80, lsl #32
  410680:	add	x11, x29, #0x10
  410684:	add	x9, x9, #0x80
  410688:	add	x10, x10, #0x20
  41068c:	stp	x9, x8, [x29, #-16]
  410690:	stp	x11, x10, [x29, #-32]
  410694:	stp	x4, x5, [x29, #-96]
  410698:	stp	x6, x7, [x29, #-80]
  41069c:	stp	q0, q1, [sp]
  4106a0:	ldp	q0, q1, [x29, #-32]
  4106a4:	sub	x4, x29, #0x40
  4106a8:	stp	q2, q3, [sp, #32]
  4106ac:	stp	q4, q5, [sp, #64]
  4106b0:	stp	q6, q7, [sp, #96]
  4106b4:	stp	q0, q1, [x29, #-64]
  4106b8:	bl	410378 <ferror@plt+0xd4e8>
  4106bc:	ldp	x29, x30, [sp, #224]
  4106c0:	add	sp, sp, #0xf0
  4106c4:	ret
  4106c8:	stp	x29, x30, [sp, #-16]!
  4106cc:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x31b0>
  4106d0:	add	x1, x1, #0x524
  4106d4:	mov	w2, #0x5                   	// #5
  4106d8:	mov	x0, xzr
  4106dc:	mov	x29, sp
  4106e0:	bl	402d70 <dcgettext@plt>
  4106e4:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x31b0>
  4106e8:	mov	x1, x0
  4106ec:	add	x2, x2, #0x539
  4106f0:	mov	w0, #0x1                   	// #1
  4106f4:	bl	4029d0 <__printf_chk@plt>
  4106f8:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x31b0>
  4106fc:	add	x1, x1, #0x54f
  410700:	mov	w2, #0x5                   	// #5
  410704:	mov	x0, xzr
  410708:	bl	402d70 <dcgettext@plt>
  41070c:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x21b0>
  410710:	adrp	x3, 414000 <_obstack_memory_used@@Base+0x21b0>
  410714:	mov	x1, x0
  410718:	add	x2, x2, #0x51e
  41071c:	add	x3, x3, #0x7cb
  410720:	mov	w0, #0x1                   	// #1
  410724:	bl	4029d0 <__printf_chk@plt>
  410728:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x31b0>
  41072c:	add	x1, x1, #0x563
  410730:	mov	w2, #0x5                   	// #5
  410734:	mov	x0, xzr
  410738:	bl	402d70 <dcgettext@plt>
  41073c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  410740:	ldr	x1, [x8, #1336]
  410744:	ldp	x29, x30, [sp], #16
  410748:	b	402d80 <fputs_unlocked@plt>
  41074c:	stp	x29, x30, [sp, #-32]!
  410750:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  410754:	udiv	x8, x8, x1
  410758:	cmp	x8, x0
  41075c:	str	x19, [sp, #16]
  410760:	mov	x29, sp
  410764:	b.cc	410788 <ferror@plt+0xd8f8>  // b.lo, b.ul, b.last
  410768:	mul	x19, x1, x0
  41076c:	mov	x0, x19
  410770:	bl	402930 <malloc@plt>
  410774:	cbz	x19, 41077c <ferror@plt+0xd8ec>
  410778:	cbz	x0, 410788 <ferror@plt+0xd8f8>
  41077c:	ldr	x19, [sp, #16]
  410780:	ldp	x29, x30, [sp], #32
  410784:	ret
  410788:	bl	410aa0 <ferror@plt+0xdc10>
  41078c:	stp	x29, x30, [sp, #-32]!
  410790:	str	x19, [sp, #16]
  410794:	mov	x29, sp
  410798:	mov	x19, x0
  41079c:	bl	402930 <malloc@plt>
  4107a0:	cbz	x19, 4107a8 <ferror@plt+0xd918>
  4107a4:	cbz	x0, 4107b4 <ferror@plt+0xd924>
  4107a8:	ldr	x19, [sp, #16]
  4107ac:	ldp	x29, x30, [sp], #32
  4107b0:	ret
  4107b4:	bl	410aa0 <ferror@plt+0xdc10>
  4107b8:	stp	x29, x30, [sp, #-32]!
  4107bc:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  4107c0:	udiv	x8, x8, x2
  4107c4:	cmp	x8, x1
  4107c8:	str	x19, [sp, #16]
  4107cc:	mov	x29, sp
  4107d0:	b.cc	410808 <ferror@plt+0xd978>  // b.lo, b.ul, b.last
  4107d4:	mul	x19, x2, x1
  4107d8:	cbz	x0, 4107ec <ferror@plt+0xd95c>
  4107dc:	cbnz	x19, 4107ec <ferror@plt+0xd95c>
  4107e0:	bl	402c00 <free@plt>
  4107e4:	mov	x0, xzr
  4107e8:	b	4107fc <ferror@plt+0xd96c>
  4107ec:	mov	x1, x19
  4107f0:	bl	402a40 <realloc@plt>
  4107f4:	cbz	x19, 4107fc <ferror@plt+0xd96c>
  4107f8:	cbz	x0, 410808 <ferror@plt+0xd978>
  4107fc:	ldr	x19, [sp, #16]
  410800:	ldp	x29, x30, [sp], #32
  410804:	ret
  410808:	bl	410aa0 <ferror@plt+0xdc10>
  41080c:	stp	x29, x30, [sp, #-32]!
  410810:	str	x19, [sp, #16]
  410814:	mov	x19, x1
  410818:	mov	x29, sp
  41081c:	cbz	x0, 410830 <ferror@plt+0xd9a0>
  410820:	cbnz	x19, 410830 <ferror@plt+0xd9a0>
  410824:	bl	402c00 <free@plt>
  410828:	mov	x0, xzr
  41082c:	b	410840 <ferror@plt+0xd9b0>
  410830:	mov	x1, x19
  410834:	bl	402a40 <realloc@plt>
  410838:	cbz	x19, 410840 <ferror@plt+0xd9b0>
  41083c:	cbz	x0, 41084c <ferror@plt+0xd9bc>
  410840:	ldr	x19, [sp, #16]
  410844:	ldp	x29, x30, [sp], #32
  410848:	ret
  41084c:	bl	410aa0 <ferror@plt+0xdc10>
  410850:	stp	x29, x30, [sp, #-32]!
  410854:	ldr	x8, [x1]
  410858:	str	x19, [sp, #16]
  41085c:	mov	x29, sp
  410860:	cbz	x0, 410898 <ferror@plt+0xda08>
  410864:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  410868:	movk	x9, #0x5554
  41086c:	udiv	x9, x9, x2
  410870:	cmp	x9, x8
  410874:	b.ls	4108e0 <ferror@plt+0xda50>  // b.plast
  410878:	add	x8, x8, x8, lsr #1
  41087c:	add	x8, x8, #0x1
  410880:	mul	x19, x8, x2
  410884:	str	x8, [x1]
  410888:	cbnz	x19, 4108c4 <ferror@plt+0xda34>
  41088c:	bl	402c00 <free@plt>
  410890:	mov	x0, xzr
  410894:	b	4108d4 <ferror@plt+0xda44>
  410898:	cbnz	x8, 4108ac <ferror@plt+0xda1c>
  41089c:	mov	w8, #0x80                  	// #128
  4108a0:	udiv	x8, x8, x2
  4108a4:	cmp	x2, #0x80
  4108a8:	cinc	x8, x8, hi  // hi = pmore
  4108ac:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  4108b0:	udiv	x9, x9, x2
  4108b4:	cmp	x9, x8
  4108b8:	b.cc	4108e0 <ferror@plt+0xda50>  // b.lo, b.ul, b.last
  4108bc:	mul	x19, x8, x2
  4108c0:	str	x8, [x1]
  4108c4:	mov	x1, x19
  4108c8:	bl	402a40 <realloc@plt>
  4108cc:	cbz	x19, 4108d4 <ferror@plt+0xda44>
  4108d0:	cbz	x0, 4108e0 <ferror@plt+0xda50>
  4108d4:	ldr	x19, [sp, #16]
  4108d8:	ldp	x29, x30, [sp], #32
  4108dc:	ret
  4108e0:	bl	410aa0 <ferror@plt+0xdc10>
  4108e4:	stp	x29, x30, [sp, #-32]!
  4108e8:	str	x19, [sp, #16]
  4108ec:	mov	x29, sp
  4108f0:	mov	x19, x0
  4108f4:	bl	402930 <malloc@plt>
  4108f8:	cbz	x19, 410900 <ferror@plt+0xda70>
  4108fc:	cbz	x0, 41090c <ferror@plt+0xda7c>
  410900:	ldr	x19, [sp, #16]
  410904:	ldp	x29, x30, [sp], #32
  410908:	ret
  41090c:	bl	410aa0 <ferror@plt+0xdc10>
  410910:	stp	x29, x30, [sp, #-32]!
  410914:	str	x19, [sp, #16]
  410918:	ldr	x19, [x1]
  41091c:	mov	x29, sp
  410920:	cbz	x0, 410950 <ferror@plt+0xdac0>
  410924:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  410928:	movk	x8, #0x5554
  41092c:	cmp	x19, x8
  410930:	b.cs	410980 <ferror@plt+0xdaf0>  // b.hs, b.nlast
  410934:	add	x8, x19, x19, lsr #1
  410938:	adds	x19, x8, #0x1
  41093c:	str	x19, [x1]
  410940:	b.ne	410964 <ferror@plt+0xdad4>  // b.any
  410944:	bl	402c00 <free@plt>
  410948:	mov	x0, xzr
  41094c:	b	410974 <ferror@plt+0xdae4>
  410950:	cbz	x19, 41095c <ferror@plt+0xdacc>
  410954:	tbz	x19, #63, 410960 <ferror@plt+0xdad0>
  410958:	b	410980 <ferror@plt+0xdaf0>
  41095c:	mov	w19, #0x80                  	// #128
  410960:	str	x19, [x1]
  410964:	mov	x1, x19
  410968:	bl	402a40 <realloc@plt>
  41096c:	cbz	x19, 410974 <ferror@plt+0xdae4>
  410970:	cbz	x0, 410980 <ferror@plt+0xdaf0>
  410974:	ldr	x19, [sp, #16]
  410978:	ldp	x29, x30, [sp], #32
  41097c:	ret
  410980:	bl	410aa0 <ferror@plt+0xdc10>
  410984:	stp	x29, x30, [sp, #-32]!
  410988:	stp	x20, x19, [sp, #16]
  41098c:	mov	x29, sp
  410990:	mov	x19, x0
  410994:	bl	402930 <malloc@plt>
  410998:	mov	x20, x0
  41099c:	cbz	x19, 4109a4 <ferror@plt+0xdb14>
  4109a0:	cbz	x20, 4109c4 <ferror@plt+0xdb34>
  4109a4:	mov	x0, x20
  4109a8:	mov	w1, wzr
  4109ac:	mov	x2, x19
  4109b0:	bl	4029e0 <memset@plt>
  4109b4:	mov	x0, x20
  4109b8:	ldp	x20, x19, [sp, #16]
  4109bc:	ldp	x29, x30, [sp], #32
  4109c0:	ret
  4109c4:	bl	410aa0 <ferror@plt+0xdc10>
  4109c8:	stp	x29, x30, [sp, #-16]!
  4109cc:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  4109d0:	udiv	x8, x8, x1
  4109d4:	cmp	x8, x0
  4109d8:	mov	x29, sp
  4109dc:	b.cc	4109f0 <ferror@plt+0xdb60>  // b.lo, b.ul, b.last
  4109e0:	bl	411554 <ferror@plt+0xe6c4>
  4109e4:	cbz	x0, 4109f0 <ferror@plt+0xdb60>
  4109e8:	ldp	x29, x30, [sp], #16
  4109ec:	ret
  4109f0:	bl	410aa0 <ferror@plt+0xdc10>
  4109f4:	stp	x29, x30, [sp, #-48]!
  4109f8:	stp	x20, x19, [sp, #32]
  4109fc:	mov	x20, x0
  410a00:	mov	x0, x1
  410a04:	str	x21, [sp, #16]
  410a08:	mov	x29, sp
  410a0c:	mov	x19, x1
  410a10:	bl	402930 <malloc@plt>
  410a14:	mov	x21, x0
  410a18:	cbz	x19, 410a20 <ferror@plt+0xdb90>
  410a1c:	cbz	x21, 410a44 <ferror@plt+0xdbb4>
  410a20:	mov	x0, x21
  410a24:	mov	x1, x20
  410a28:	mov	x2, x19
  410a2c:	bl	402760 <memcpy@plt>
  410a30:	mov	x0, x21
  410a34:	ldp	x20, x19, [sp, #32]
  410a38:	ldr	x21, [sp, #16]
  410a3c:	ldp	x29, x30, [sp], #48
  410a40:	ret
  410a44:	bl	410aa0 <ferror@plt+0xdc10>
  410a48:	stp	x29, x30, [sp, #-48]!
  410a4c:	str	x21, [sp, #16]
  410a50:	stp	x20, x19, [sp, #32]
  410a54:	mov	x29, sp
  410a58:	mov	x19, x0
  410a5c:	bl	4027c0 <strlen@plt>
  410a60:	add	x20, x0, #0x1
  410a64:	mov	x0, x20
  410a68:	bl	402930 <malloc@plt>
  410a6c:	mov	x21, x0
  410a70:	cbz	x20, 410a78 <ferror@plt+0xdbe8>
  410a74:	cbz	x21, 410a9c <ferror@plt+0xdc0c>
  410a78:	mov	x0, x21
  410a7c:	mov	x1, x19
  410a80:	mov	x2, x20
  410a84:	bl	402760 <memcpy@plt>
  410a88:	mov	x0, x21
  410a8c:	ldp	x20, x19, [sp, #32]
  410a90:	ldr	x21, [sp, #16]
  410a94:	ldp	x29, x30, [sp], #48
  410a98:	ret
  410a9c:	bl	410aa0 <ferror@plt+0xdc10>
  410aa0:	stp	x29, x30, [sp, #-32]!
  410aa4:	str	x19, [sp, #16]
  410aa8:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  410aac:	ldr	w19, [x8, #1200]
  410ab0:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x31b0>
  410ab4:	add	x1, x1, #0x5d3
  410ab8:	mov	w2, #0x5                   	// #5
  410abc:	mov	x0, xzr
  410ac0:	mov	x29, sp
  410ac4:	bl	402d70 <dcgettext@plt>
  410ac8:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x21b0>
  410acc:	mov	x3, x0
  410ad0:	add	x2, x2, #0xf52
  410ad4:	mov	w0, w19
  410ad8:	mov	w1, wzr
  410adc:	bl	4027f0 <error@plt>
  410ae0:	bl	402ae0 <abort@plt>
  410ae4:	stp	x29, x30, [sp, #-80]!
  410ae8:	str	x25, [sp, #16]
  410aec:	stp	x24, x23, [sp, #32]
  410af0:	stp	x22, x21, [sp, #48]
  410af4:	stp	x20, x19, [sp, #64]
  410af8:	mov	x29, sp
  410afc:	mov	x20, x3
  410b00:	mov	x21, x2
  410b04:	mov	x22, x1
  410b08:	mov	x23, x0
  410b0c:	bl	4122c4 <_obstack_memory_used@@Base+0x474>
  410b10:	mov	w19, w0
  410b14:	bl	402e00 <__errno_location@plt>
  410b18:	ldr	w24, [x0]
  410b1c:	cbz	w24, 410bcc <ferror@plt+0xdd3c>
  410b20:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x31b0>
  410b24:	add	x1, x1, #0x5e4
  410b28:	mov	w2, #0x5                   	// #5
  410b2c:	mov	x0, xzr
  410b30:	bl	402d70 <dcgettext@plt>
  410b34:	mov	x2, x0
  410b38:	mov	w0, wzr
  410b3c:	mov	w1, w24
  410b40:	bl	4027f0 <error@plt>
  410b44:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x31b0>
  410b48:	add	x1, x1, #0x5fd
  410b4c:	mov	w2, #0x5                   	// #5
  410b50:	mov	x0, xzr
  410b54:	bl	402d70 <dcgettext@plt>
  410b58:	mov	x2, x0
  410b5c:	mov	w0, wzr
  410b60:	mov	w1, wzr
  410b64:	bl	4027f0 <error@plt>
  410b68:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  410b6c:	ldr	w24, [x8, #1200]
  410b70:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x31b0>
  410b74:	add	x1, x1, #0x628
  410b78:	mov	w2, #0x5                   	// #5
  410b7c:	mov	x0, xzr
  410b80:	bl	402d70 <dcgettext@plt>
  410b84:	mov	x25, x0
  410b88:	mov	w1, #0x8                   	// #8
  410b8c:	mov	w0, wzr
  410b90:	mov	x2, x23
  410b94:	mov	x3, x22
  410b98:	bl	40e970 <ferror@plt+0xbae0>
  410b9c:	mov	x22, x0
  410ba0:	mov	w0, #0x1                   	// #1
  410ba4:	mov	w1, #0x8                   	// #8
  410ba8:	mov	x2, x21
  410bac:	mov	x3, x20
  410bb0:	bl	40e970 <ferror@plt+0xbae0>
  410bb4:	mov	x4, x0
  410bb8:	mov	w0, w24
  410bbc:	mov	w1, wzr
  410bc0:	mov	x2, x25
  410bc4:	mov	x3, x22
  410bc8:	bl	4027f0 <error@plt>
  410bcc:	mov	w0, w19
  410bd0:	ldp	x20, x19, [sp, #64]
  410bd4:	ldp	x22, x21, [sp, #48]
  410bd8:	ldp	x24, x23, [sp, #32]
  410bdc:	ldr	x25, [sp, #16]
  410be0:	ldp	x29, x30, [sp], #80
  410be4:	ret
  410be8:	stp	x29, x30, [sp, #-80]!
  410bec:	str	x25, [sp, #16]
  410bf0:	stp	x24, x23, [sp, #32]
  410bf4:	stp	x22, x21, [sp, #48]
  410bf8:	stp	x20, x19, [sp, #64]
  410bfc:	mov	x29, sp
  410c00:	mov	x22, x3
  410c04:	mov	x20, x2
  410c08:	mov	x24, x1
  410c0c:	mov	x21, x0
  410c10:	bl	4123d8 <_obstack_memory_used@@Base+0x588>
  410c14:	mov	w19, w0
  410c18:	bl	402e00 <__errno_location@plt>
  410c1c:	ldr	w23, [x0]
  410c20:	cbz	w23, 410cd8 <ferror@plt+0xde48>
  410c24:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x31b0>
  410c28:	add	x1, x1, #0x5e4
  410c2c:	mov	w2, #0x5                   	// #5
  410c30:	mov	x0, xzr
  410c34:	sub	x24, x24, #0x1
  410c38:	sub	x22, x22, #0x1
  410c3c:	bl	402d70 <dcgettext@plt>
  410c40:	mov	x2, x0
  410c44:	mov	w0, wzr
  410c48:	mov	w1, w23
  410c4c:	bl	4027f0 <error@plt>
  410c50:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x31b0>
  410c54:	add	x1, x1, #0x5fd
  410c58:	mov	w2, #0x5                   	// #5
  410c5c:	mov	x0, xzr
  410c60:	bl	402d70 <dcgettext@plt>
  410c64:	mov	x2, x0
  410c68:	mov	w0, wzr
  410c6c:	mov	w1, wzr
  410c70:	bl	4027f0 <error@plt>
  410c74:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  410c78:	ldr	w23, [x8, #1200]
  410c7c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x31b0>
  410c80:	add	x1, x1, #0x628
  410c84:	mov	w2, #0x5                   	// #5
  410c88:	mov	x0, xzr
  410c8c:	bl	402d70 <dcgettext@plt>
  410c90:	mov	x25, x0
  410c94:	mov	w1, #0x8                   	// #8
  410c98:	mov	w0, wzr
  410c9c:	mov	x2, x21
  410ca0:	mov	x3, x24
  410ca4:	bl	40e970 <ferror@plt+0xbae0>
  410ca8:	mov	x21, x0
  410cac:	mov	w0, #0x1                   	// #1
  410cb0:	mov	w1, #0x8                   	// #8
  410cb4:	mov	x2, x20
  410cb8:	mov	x3, x22
  410cbc:	bl	40e970 <ferror@plt+0xbae0>
  410cc0:	mov	x4, x0
  410cc4:	mov	w0, w23
  410cc8:	mov	w1, wzr
  410ccc:	mov	x2, x25
  410cd0:	mov	x3, x21
  410cd4:	bl	4027f0 <error@plt>
  410cd8:	mov	w0, w19
  410cdc:	ldp	x20, x19, [sp, #64]
  410ce0:	ldp	x22, x21, [sp, #48]
  410ce4:	ldp	x24, x23, [sp, #32]
  410ce8:	ldr	x25, [sp, #16]
  410cec:	ldp	x29, x30, [sp], #80
  410cf0:	ret
  410cf4:	sub	sp, sp, #0x30
  410cf8:	stp	x29, x30, [sp, #16]
  410cfc:	str	x19, [sp, #32]
  410d00:	add	x29, sp, #0x10
  410d04:	bl	4120dc <_obstack_memory_used@@Base+0x28c>
  410d08:	stp	x0, x1, [sp]
  410d0c:	bl	402e00 <__errno_location@plt>
  410d10:	mov	x19, x0
  410d14:	str	wzr, [x0]
  410d18:	mov	x0, sp
  410d1c:	mov	x1, xzr
  410d20:	bl	411a34 <ferror@plt+0xeba4>
  410d24:	cbz	w0, 410d44 <ferror@plt+0xdeb4>
  410d28:	ldr	w8, [x19]
  410d2c:	orr	w8, w8, #0x4
  410d30:	cmp	w8, #0x4
  410d34:	b.ne	410d40 <ferror@plt+0xdeb0>  // b.any
  410d38:	str	wzr, [x19]
  410d3c:	b	410d18 <ferror@plt+0xde88>
  410d40:	mov	w0, #0xffffffff            	// #-1
  410d44:	ldr	x19, [sp, #32]
  410d48:	ldp	x29, x30, [sp, #16]
  410d4c:	add	sp, sp, #0x30
  410d50:	ret
  410d54:	stp	x29, x30, [sp, #-80]!
  410d58:	cmp	w2, #0x25
  410d5c:	str	x25, [sp, #16]
  410d60:	stp	x24, x23, [sp, #32]
  410d64:	stp	x22, x21, [sp, #48]
  410d68:	stp	x20, x19, [sp, #64]
  410d6c:	mov	x29, sp
  410d70:	b.cs	4110d0 <ferror@plt+0xe240>  // b.hs, b.nlast
  410d74:	mov	x23, x4
  410d78:	mov	x19, x3
  410d7c:	mov	w22, w2
  410d80:	mov	x21, x1
  410d84:	mov	x20, x0
  410d88:	bl	402e00 <__errno_location@plt>
  410d8c:	mov	x24, x0
  410d90:	str	wzr, [x0]
  410d94:	bl	402bc0 <__ctype_b_loc@plt>
  410d98:	ldr	x8, [x0]
  410d9c:	mov	x10, x20
  410da0:	ldrb	w9, [x10], #1
  410da4:	ldrh	w11, [x8, x9, lsl #1]
  410da8:	tbnz	w11, #13, 410da0 <ferror@plt+0xdf10>
  410dac:	cmp	x21, #0x0
  410db0:	add	x8, x29, #0x18
  410db4:	csel	x21, x8, x21, eq  // eq = none
  410db8:	cmp	w9, #0x2d
  410dbc:	b.ne	410dc8 <ferror@plt+0xdf38>  // b.any
  410dc0:	mov	w20, #0x4                   	// #4
  410dc4:	b	4110a0 <ferror@plt+0xe210>
  410dc8:	mov	x0, x20
  410dcc:	mov	x1, x21
  410dd0:	mov	w2, w22
  410dd4:	bl	4027b0 <strtoul@plt>
  410dd8:	ldr	x25, [x21]
  410ddc:	cmp	x25, x20
  410de0:	b.eq	410e0c <ferror@plt+0xdf7c>  // b.none
  410de4:	ldr	w20, [x24]
  410de8:	mov	x22, x0
  410dec:	cbz	w20, 410dfc <ferror@plt+0xdf6c>
  410df0:	cmp	w20, #0x22
  410df4:	b.ne	410dc0 <ferror@plt+0xdf30>  // b.any
  410df8:	mov	w20, #0x1                   	// #1
  410dfc:	cbz	x23, 41109c <ferror@plt+0xe20c>
  410e00:	ldrb	w24, [x25]
  410e04:	cbnz	w24, 410e34 <ferror@plt+0xdfa4>
  410e08:	b	41109c <ferror@plt+0xe20c>
  410e0c:	cbz	x23, 410dc0 <ferror@plt+0xdf30>
  410e10:	ldrb	w1, [x20]
  410e14:	cbz	w1, 410dc0 <ferror@plt+0xdf30>
  410e18:	mov	x0, x23
  410e1c:	bl	402c60 <strchr@plt>
  410e20:	cbz	x0, 410dc0 <ferror@plt+0xdf30>
  410e24:	mov	w20, wzr
  410e28:	mov	w22, #0x1                   	// #1
  410e2c:	ldrb	w24, [x25]
  410e30:	cbz	w24, 41109c <ferror@plt+0xe20c>
  410e34:	mov	x0, x23
  410e38:	mov	w1, w24
  410e3c:	bl	402c60 <strchr@plt>
  410e40:	cbz	x0, 410f0c <ferror@plt+0xe07c>
  410e44:	sub	w10, w24, #0x45
  410e48:	mov	w8, #0x1                   	// #1
  410e4c:	cmp	w10, #0x2f
  410e50:	mov	w9, #0x400                 	// #1024
  410e54:	b.hi	410ecc <ferror@plt+0xe03c>  // b.pmore
  410e58:	mov	w11, #0x1                   	// #1
  410e5c:	lsl	x10, x11, x10
  410e60:	mov	x11, #0x8945                	// #35141
  410e64:	movk	x11, #0x30, lsl #16
  410e68:	movk	x11, #0x8144, lsl #32
  410e6c:	tst	x10, x11
  410e70:	b.eq	410ecc <ferror@plt+0xe03c>  // b.none
  410e74:	mov	w1, #0x30                  	// #48
  410e78:	mov	x0, x23
  410e7c:	bl	402c60 <strchr@plt>
  410e80:	cbz	x0, 410eb8 <ferror@plt+0xe028>
  410e84:	ldrb	w8, [x25, #1]
  410e88:	cmp	w8, #0x42
  410e8c:	b.eq	410ec4 <ferror@plt+0xe034>  // b.none
  410e90:	cmp	w8, #0x44
  410e94:	b.eq	410ec4 <ferror@plt+0xe034>  // b.none
  410e98:	cmp	w8, #0x69
  410e9c:	b.ne	410eb8 <ferror@plt+0xe028>  // b.any
  410ea0:	ldrb	w8, [x25, #2]
  410ea4:	mov	w9, #0x3                   	// #3
  410ea8:	cmp	w8, #0x42
  410eac:	csinc	x8, x9, xzr, eq  // eq = none
  410eb0:	mov	w9, #0x400                 	// #1024
  410eb4:	b	410ecc <ferror@plt+0xe03c>
  410eb8:	mov	w8, #0x1                   	// #1
  410ebc:	mov	w9, #0x400                 	// #1024
  410ec0:	b	410ecc <ferror@plt+0xe03c>
  410ec4:	mov	w8, #0x2                   	// #2
  410ec8:	mov	w9, #0x3e8                 	// #1000
  410ecc:	sub	w10, w24, #0x42
  410ed0:	cmp	w10, #0x35
  410ed4:	b.hi	410f0c <ferror@plt+0xe07c>  // b.pmore
  410ed8:	adrp	x11, 415000 <_obstack_memory_used@@Base+0x31b0>
  410edc:	add	x11, x11, #0x64d
  410ee0:	adr	x12, 410ef4 <ferror@plt+0xe064>
  410ee4:	ldrb	w13, [x11, x10]
  410ee8:	add	x12, x12, x13, lsl #2
  410eec:	mov	w10, wzr
  410ef0:	br	x12
  410ef4:	umulh	x10, x9, x22
  410ef8:	mul	x11, x22, x9
  410efc:	cmp	xzr, x10
  410f00:	cset	w10, ne  // ne = any
  410f04:	csinv	x11, x11, xzr, eq  // eq = none
  410f08:	b	411038 <ferror@plt+0xe1a8>
  410f0c:	str	x22, [x19]
  410f10:	orr	w20, w20, #0x2
  410f14:	b	4110a0 <ferror@plt+0xe210>
  410f18:	umulh	x10, x9, x22
  410f1c:	mul	x9, x22, x9
  410f20:	cmp	xzr, x10
  410f24:	b	411074 <ferror@plt+0xe1e4>
  410f28:	umulh	x10, x9, x22
  410f2c:	mul	x11, x22, x9
  410f30:	cmp	xzr, x10
  410f34:	cset	w10, ne  // ne = any
  410f38:	csinv	x11, x11, xzr, eq  // eq = none
  410f3c:	b	411050 <ferror@plt+0xe1c0>
  410f40:	umulh	x10, x9, x22
  410f44:	mul	x11, x22, x9
  410f48:	cmp	xzr, x10
  410f4c:	cset	w10, ne  // ne = any
  410f50:	csinv	x11, x11, xzr, eq  // eq = none
  410f54:	b	411020 <ferror@plt+0xe190>
  410f58:	umulh	x10, x9, x22
  410f5c:	mul	x11, x22, x9
  410f60:	cmp	xzr, x10
  410f64:	cset	w10, ne  // ne = any
  410f68:	csinv	x11, x11, xzr, eq  // eq = none
  410f6c:	b	410fd8 <ferror@plt+0xe148>
  410f70:	cmp	xzr, x22, lsr #54
  410f74:	lsl	x9, x22, #10
  410f78:	b	411074 <ferror@plt+0xe1e4>
  410f7c:	umulh	x10, x9, x22
  410f80:	mul	x11, x22, x9
  410f84:	cmp	xzr, x10
  410f88:	cset	w10, ne  // ne = any
  410f8c:	csinv	x11, x11, xzr, eq  // eq = none
  410f90:	b	410ff0 <ferror@plt+0xe160>
  410f94:	umulh	x10, x9, x22
  410f98:	mul	x11, x22, x9
  410f9c:	cmp	xzr, x10
  410fa0:	cset	w10, ne  // ne = any
  410fa4:	csinv	x11, x11, xzr, eq  // eq = none
  410fa8:	b	411008 <ferror@plt+0xe178>
  410fac:	umulh	x10, x9, x22
  410fb0:	mul	x11, x22, x9
  410fb4:	cmp	xzr, x10
  410fb8:	csinv	x11, x11, xzr, eq  // eq = none
  410fbc:	umulh	x12, x9, x11
  410fc0:	cset	w10, ne  // ne = any
  410fc4:	cmp	xzr, x12
  410fc8:	mul	x11, x11, x9
  410fcc:	cset	w12, ne  // ne = any
  410fd0:	csinv	x11, x11, xzr, eq  // eq = none
  410fd4:	orr	w10, w10, w12
  410fd8:	umulh	x12, x9, x11
  410fdc:	cmp	xzr, x12
  410fe0:	mul	x11, x11, x9
  410fe4:	cset	w12, ne  // ne = any
  410fe8:	csinv	x11, x11, xzr, eq  // eq = none
  410fec:	orr	w10, w10, w12
  410ff0:	umulh	x12, x9, x11
  410ff4:	cmp	xzr, x12
  410ff8:	mul	x11, x11, x9
  410ffc:	cset	w12, ne  // ne = any
  411000:	csinv	x11, x11, xzr, eq  // eq = none
  411004:	orr	w10, w10, w12
  411008:	umulh	x12, x9, x11
  41100c:	cmp	xzr, x12
  411010:	mul	x11, x11, x9
  411014:	cset	w12, ne  // ne = any
  411018:	csinv	x11, x11, xzr, eq  // eq = none
  41101c:	orr	w10, w10, w12
  411020:	umulh	x12, x9, x11
  411024:	cmp	xzr, x12
  411028:	mul	x11, x11, x9
  41102c:	cset	w12, ne  // ne = any
  411030:	csinv	x11, x11, xzr, eq  // eq = none
  411034:	orr	w10, w10, w12
  411038:	umulh	x12, x9, x11
  41103c:	cmp	xzr, x12
  411040:	mul	x11, x11, x9
  411044:	cset	w12, ne  // ne = any
  411048:	csinv	x11, x11, xzr, eq  // eq = none
  41104c:	orr	w10, w10, w12
  411050:	umulh	x12, x9, x11
  411054:	cmp	xzr, x12
  411058:	mul	x9, x11, x9
  41105c:	cset	w11, ne  // ne = any
  411060:	csinv	x22, x9, xzr, eq  // eq = none
  411064:	orr	w10, w10, w11
  411068:	b	41107c <ferror@plt+0xe1ec>
  41106c:	cmp	xzr, x22, lsr #55
  411070:	lsl	x9, x22, #9
  411074:	cset	w10, ne  // ne = any
  411078:	csinv	x22, x9, xzr, eq  // eq = none
  41107c:	add	x9, x25, x8
  411080:	str	x9, [x21]
  411084:	ldrb	w8, [x25, x8]
  411088:	and	w9, w10, #0x1
  41108c:	orr	w9, w20, w9
  411090:	orr	w10, w9, #0x2
  411094:	cmp	w8, #0x0
  411098:	csel	w20, w9, w10, eq  // eq = none
  41109c:	str	x22, [x19]
  4110a0:	mov	w0, w20
  4110a4:	ldp	x20, x19, [sp, #64]
  4110a8:	ldp	x22, x21, [sp, #48]
  4110ac:	ldp	x24, x23, [sp, #32]
  4110b0:	ldr	x25, [sp, #16]
  4110b4:	ldp	x29, x30, [sp], #80
  4110b8:	ret
  4110bc:	cmn	x22, x22
  4110c0:	lsl	x9, x22, #1
  4110c4:	cset	w10, cs  // cs = hs, nlast
  4110c8:	csinv	x22, x9, xzr, cc  // cc = lo, ul, last
  4110cc:	b	41107c <ferror@plt+0xe1ec>
  4110d0:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x31b0>
  4110d4:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x31b0>
  4110d8:	adrp	x3, 415000 <_obstack_memory_used@@Base+0x31b0>
  4110dc:	add	x0, x0, #0x683
  4110e0:	add	x1, x1, #0x6a9
  4110e4:	add	x3, x3, #0x6b9
  4110e8:	mov	w2, #0x54                  	// #84
  4110ec:	bl	402df0 <__assert_fail@plt>
  4110f0:	stp	x29, x30, [sp, #-16]!
  4110f4:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  4110f8:	ldr	w5, [x8, #1200]
  4110fc:	mov	x29, sp
  411100:	bl	411108 <ferror@plt+0xe278>
  411104:	bl	402ae0 <abort@plt>
  411108:	sub	sp, sp, #0x40
  41110c:	sub	w9, w0, #0x1
  411110:	cmp	w9, #0x4
  411114:	stp	x29, x30, [sp, #16]
  411118:	stp	x22, x21, [sp, #32]
  41111c:	stp	x20, x19, [sp, #48]
  411120:	add	x29, sp, #0x10
  411124:	b.cs	4111b0 <ferror@plt+0xe320>  // b.hs, b.nlast
  411128:	adrp	x10, 415000 <_obstack_memory_used@@Base+0x31b0>
  41112c:	add	x10, x10, #0x770
  411130:	mov	w8, w1
  411134:	ldr	x1, [x10, w9, sxtw #3]
  411138:	mov	w20, w5
  41113c:	mov	x19, x4
  411140:	sxtw	x9, w8
  411144:	tbnz	w8, #31, 41115c <ferror@plt+0xe2cc>
  411148:	lsl	x8, x9, #5
  41114c:	ldr	x21, [x3, x8]
  411150:	adrp	x22, 415000 <_obstack_memory_used@@Base+0x31b0>
  411154:	add	x22, x22, #0x70a
  411158:	b	411174 <ferror@plt+0xe2e4>
  41115c:	adrp	x8, 415000 <_obstack_memory_used@@Base+0x31b0>
  411160:	add	x8, x8, #0x70a
  411164:	sub	x21, x29, #0x4
  411168:	sturb	w2, [x29, #-4]
  41116c:	sub	x22, x8, x9
  411170:	sturb	wzr, [x29, #-3]
  411174:	mov	w2, #0x5                   	// #5
  411178:	mov	x0, xzr
  41117c:	bl	402d70 <dcgettext@plt>
  411180:	mov	x2, x0
  411184:	mov	w0, w20
  411188:	mov	w1, wzr
  41118c:	mov	x3, x22
  411190:	mov	x4, x21
  411194:	mov	x5, x19
  411198:	bl	4027f0 <error@plt>
  41119c:	ldp	x20, x19, [sp, #48]
  4111a0:	ldp	x22, x21, [sp, #32]
  4111a4:	ldp	x29, x30, [sp, #16]
  4111a8:	add	sp, sp, #0x40
  4111ac:	ret
  4111b0:	bl	402ae0 <abort@plt>
  4111b4:	stp	x29, x30, [sp, #-80]!
  4111b8:	cmp	w2, #0x25
  4111bc:	str	x25, [sp, #16]
  4111c0:	stp	x24, x23, [sp, #32]
  4111c4:	stp	x22, x21, [sp, #48]
  4111c8:	stp	x20, x19, [sp, #64]
  4111cc:	mov	x29, sp
  4111d0:	b.cs	411534 <ferror@plt+0xe6a4>  // b.hs, b.nlast
  4111d4:	mov	x23, x4
  4111d8:	mov	x19, x3
  4111dc:	mov	w22, w2
  4111e0:	mov	x21, x1
  4111e4:	mov	x20, x0
  4111e8:	bl	402e00 <__errno_location@plt>
  4111ec:	mov	x24, x0
  4111f0:	str	wzr, [x0]
  4111f4:	bl	402bc0 <__ctype_b_loc@plt>
  4111f8:	ldr	x8, [x0]
  4111fc:	mov	x10, x20
  411200:	ldrb	w9, [x10], #1
  411204:	ldrh	w11, [x8, x9, lsl #1]
  411208:	tbnz	w11, #13, 411200 <ferror@plt+0xe370>
  41120c:	cmp	x21, #0x0
  411210:	add	x8, x29, #0x18
  411214:	csel	x21, x8, x21, eq  // eq = none
  411218:	cmp	w9, #0x2d
  41121c:	b.ne	411228 <ferror@plt+0xe398>  // b.any
  411220:	mov	w20, #0x4                   	// #4
  411224:	b	411504 <ferror@plt+0xe674>
  411228:	mov	x0, x20
  41122c:	mov	x1, x21
  411230:	mov	w2, w22
  411234:	mov	w3, wzr
  411238:	bl	402a10 <__strtoul_internal@plt>
  41123c:	ldr	x25, [x21]
  411240:	cmp	x25, x20
  411244:	b.eq	411270 <ferror@plt+0xe3e0>  // b.none
  411248:	ldr	w20, [x24]
  41124c:	mov	x22, x0
  411250:	cbz	w20, 411260 <ferror@plt+0xe3d0>
  411254:	cmp	w20, #0x22
  411258:	b.ne	411220 <ferror@plt+0xe390>  // b.any
  41125c:	mov	w20, #0x1                   	// #1
  411260:	cbz	x23, 411500 <ferror@plt+0xe670>
  411264:	ldrb	w24, [x25]
  411268:	cbnz	w24, 411298 <ferror@plt+0xe408>
  41126c:	b	411500 <ferror@plt+0xe670>
  411270:	cbz	x23, 411220 <ferror@plt+0xe390>
  411274:	ldrb	w1, [x20]
  411278:	cbz	w1, 411220 <ferror@plt+0xe390>
  41127c:	mov	x0, x23
  411280:	bl	402c60 <strchr@plt>
  411284:	cbz	x0, 411220 <ferror@plt+0xe390>
  411288:	mov	w20, wzr
  41128c:	mov	w22, #0x1                   	// #1
  411290:	ldrb	w24, [x25]
  411294:	cbz	w24, 411500 <ferror@plt+0xe670>
  411298:	mov	x0, x23
  41129c:	mov	w1, w24
  4112a0:	bl	402c60 <strchr@plt>
  4112a4:	cbz	x0, 411370 <ferror@plt+0xe4e0>
  4112a8:	sub	w10, w24, #0x45
  4112ac:	mov	w8, #0x1                   	// #1
  4112b0:	cmp	w10, #0x2f
  4112b4:	mov	w9, #0x400                 	// #1024
  4112b8:	b.hi	411330 <ferror@plt+0xe4a0>  // b.pmore
  4112bc:	mov	w11, #0x1                   	// #1
  4112c0:	lsl	x10, x11, x10
  4112c4:	mov	x11, #0x8945                	// #35141
  4112c8:	movk	x11, #0x30, lsl #16
  4112cc:	movk	x11, #0x8144, lsl #32
  4112d0:	tst	x10, x11
  4112d4:	b.eq	411330 <ferror@plt+0xe4a0>  // b.none
  4112d8:	mov	w1, #0x30                  	// #48
  4112dc:	mov	x0, x23
  4112e0:	bl	402c60 <strchr@plt>
  4112e4:	cbz	x0, 41131c <ferror@plt+0xe48c>
  4112e8:	ldrb	w8, [x25, #1]
  4112ec:	cmp	w8, #0x42
  4112f0:	b.eq	411328 <ferror@plt+0xe498>  // b.none
  4112f4:	cmp	w8, #0x44
  4112f8:	b.eq	411328 <ferror@plt+0xe498>  // b.none
  4112fc:	cmp	w8, #0x69
  411300:	b.ne	41131c <ferror@plt+0xe48c>  // b.any
  411304:	ldrb	w8, [x25, #2]
  411308:	mov	w9, #0x3                   	// #3
  41130c:	cmp	w8, #0x42
  411310:	csinc	x8, x9, xzr, eq  // eq = none
  411314:	mov	w9, #0x400                 	// #1024
  411318:	b	411330 <ferror@plt+0xe4a0>
  41131c:	mov	w8, #0x1                   	// #1
  411320:	mov	w9, #0x400                 	// #1024
  411324:	b	411330 <ferror@plt+0xe4a0>
  411328:	mov	w8, #0x2                   	// #2
  41132c:	mov	w9, #0x3e8                 	// #1000
  411330:	sub	w10, w24, #0x42
  411334:	cmp	w10, #0x35
  411338:	b.hi	411370 <ferror@plt+0xe4e0>  // b.pmore
  41133c:	adrp	x11, 415000 <_obstack_memory_used@@Base+0x31b0>
  411340:	add	x11, x11, #0x790
  411344:	adr	x12, 411358 <ferror@plt+0xe4c8>
  411348:	ldrb	w13, [x11, x10]
  41134c:	add	x12, x12, x13, lsl #2
  411350:	mov	w10, wzr
  411354:	br	x12
  411358:	umulh	x10, x9, x22
  41135c:	mul	x11, x22, x9
  411360:	cmp	xzr, x10
  411364:	cset	w10, ne  // ne = any
  411368:	csinv	x11, x11, xzr, eq  // eq = none
  41136c:	b	41149c <ferror@plt+0xe60c>
  411370:	str	x22, [x19]
  411374:	orr	w20, w20, #0x2
  411378:	b	411504 <ferror@plt+0xe674>
  41137c:	umulh	x10, x9, x22
  411380:	mul	x9, x22, x9
  411384:	cmp	xzr, x10
  411388:	b	4114d8 <ferror@plt+0xe648>
  41138c:	umulh	x10, x9, x22
  411390:	mul	x11, x22, x9
  411394:	cmp	xzr, x10
  411398:	cset	w10, ne  // ne = any
  41139c:	csinv	x11, x11, xzr, eq  // eq = none
  4113a0:	b	4114b4 <ferror@plt+0xe624>
  4113a4:	umulh	x10, x9, x22
  4113a8:	mul	x11, x22, x9
  4113ac:	cmp	xzr, x10
  4113b0:	cset	w10, ne  // ne = any
  4113b4:	csinv	x11, x11, xzr, eq  // eq = none
  4113b8:	b	411484 <ferror@plt+0xe5f4>
  4113bc:	umulh	x10, x9, x22
  4113c0:	mul	x11, x22, x9
  4113c4:	cmp	xzr, x10
  4113c8:	cset	w10, ne  // ne = any
  4113cc:	csinv	x11, x11, xzr, eq  // eq = none
  4113d0:	b	41143c <ferror@plt+0xe5ac>
  4113d4:	cmp	xzr, x22, lsr #54
  4113d8:	lsl	x9, x22, #10
  4113dc:	b	4114d8 <ferror@plt+0xe648>
  4113e0:	umulh	x10, x9, x22
  4113e4:	mul	x11, x22, x9
  4113e8:	cmp	xzr, x10
  4113ec:	cset	w10, ne  // ne = any
  4113f0:	csinv	x11, x11, xzr, eq  // eq = none
  4113f4:	b	411454 <ferror@plt+0xe5c4>
  4113f8:	umulh	x10, x9, x22
  4113fc:	mul	x11, x22, x9
  411400:	cmp	xzr, x10
  411404:	cset	w10, ne  // ne = any
  411408:	csinv	x11, x11, xzr, eq  // eq = none
  41140c:	b	41146c <ferror@plt+0xe5dc>
  411410:	umulh	x10, x9, x22
  411414:	mul	x11, x22, x9
  411418:	cmp	xzr, x10
  41141c:	csinv	x11, x11, xzr, eq  // eq = none
  411420:	umulh	x12, x9, x11
  411424:	cset	w10, ne  // ne = any
  411428:	cmp	xzr, x12
  41142c:	mul	x11, x11, x9
  411430:	cset	w12, ne  // ne = any
  411434:	csinv	x11, x11, xzr, eq  // eq = none
  411438:	orr	w10, w10, w12
  41143c:	umulh	x12, x9, x11
  411440:	cmp	xzr, x12
  411444:	mul	x11, x11, x9
  411448:	cset	w12, ne  // ne = any
  41144c:	csinv	x11, x11, xzr, eq  // eq = none
  411450:	orr	w10, w10, w12
  411454:	umulh	x12, x9, x11
  411458:	cmp	xzr, x12
  41145c:	mul	x11, x11, x9
  411460:	cset	w12, ne  // ne = any
  411464:	csinv	x11, x11, xzr, eq  // eq = none
  411468:	orr	w10, w10, w12
  41146c:	umulh	x12, x9, x11
  411470:	cmp	xzr, x12
  411474:	mul	x11, x11, x9
  411478:	cset	w12, ne  // ne = any
  41147c:	csinv	x11, x11, xzr, eq  // eq = none
  411480:	orr	w10, w10, w12
  411484:	umulh	x12, x9, x11
  411488:	cmp	xzr, x12
  41148c:	mul	x11, x11, x9
  411490:	cset	w12, ne  // ne = any
  411494:	csinv	x11, x11, xzr, eq  // eq = none
  411498:	orr	w10, w10, w12
  41149c:	umulh	x12, x9, x11
  4114a0:	cmp	xzr, x12
  4114a4:	mul	x11, x11, x9
  4114a8:	cset	w12, ne  // ne = any
  4114ac:	csinv	x11, x11, xzr, eq  // eq = none
  4114b0:	orr	w10, w10, w12
  4114b4:	umulh	x12, x9, x11
  4114b8:	cmp	xzr, x12
  4114bc:	mul	x9, x11, x9
  4114c0:	cset	w11, ne  // ne = any
  4114c4:	csinv	x22, x9, xzr, eq  // eq = none
  4114c8:	orr	w10, w10, w11
  4114cc:	b	4114e0 <ferror@plt+0xe650>
  4114d0:	cmp	xzr, x22, lsr #55
  4114d4:	lsl	x9, x22, #9
  4114d8:	cset	w10, ne  // ne = any
  4114dc:	csinv	x22, x9, xzr, eq  // eq = none
  4114e0:	add	x9, x25, x8
  4114e4:	str	x9, [x21]
  4114e8:	ldrb	w8, [x25, x8]
  4114ec:	and	w9, w10, #0x1
  4114f0:	orr	w9, w20, w9
  4114f4:	orr	w10, w9, #0x2
  4114f8:	cmp	w8, #0x0
  4114fc:	csel	w20, w9, w10, eq  // eq = none
  411500:	str	x22, [x19]
  411504:	mov	w0, w20
  411508:	ldp	x20, x19, [sp, #64]
  41150c:	ldp	x22, x21, [sp, #48]
  411510:	ldp	x24, x23, [sp, #32]
  411514:	ldr	x25, [sp, #16]
  411518:	ldp	x29, x30, [sp], #80
  41151c:	ret
  411520:	cmn	x22, x22
  411524:	lsl	x9, x22, #1
  411528:	cset	w10, cs  // cs = hs, nlast
  41152c:	csinv	x22, x9, xzr, cc  // cc = lo, ul, last
  411530:	b	4114e0 <ferror@plt+0xe650>
  411534:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x31b0>
  411538:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x31b0>
  41153c:	adrp	x3, 415000 <_obstack_memory_used@@Base+0x31b0>
  411540:	add	x0, x0, #0x683
  411544:	add	x1, x1, #0x6a9
  411548:	add	x3, x3, #0x7c6
  41154c:	mov	w2, #0x54                  	// #84
  411550:	bl	402df0 <__assert_fail@plt>
  411554:	mov	x8, x1
  411558:	mov	w1, #0x1                   	// #1
  41155c:	mov	w9, #0x1                   	// #1
  411560:	cbz	x0, 411598 <ferror@plt+0xe708>
  411564:	cbz	x8, 411598 <ferror@plt+0xe708>
  411568:	umulh	x10, x8, x0
  41156c:	mov	x1, x8
  411570:	mov	x9, x0
  411574:	cbz	x10, 411598 <ferror@plt+0xe708>
  411578:	stp	x29, x30, [sp, #-16]!
  41157c:	mov	x29, sp
  411580:	bl	402e00 <__errno_location@plt>
  411584:	mov	w8, #0xc                   	// #12
  411588:	str	w8, [x0]
  41158c:	mov	x0, xzr
  411590:	ldp	x29, x30, [sp], #16
  411594:	ret
  411598:	mov	x0, x9
  41159c:	b	402a20 <calloc@plt>
  4115a0:	stp	x29, x30, [sp, #-48]!
  4115a4:	str	x21, [sp, #16]
  4115a8:	stp	x20, x19, [sp, #32]
  4115ac:	mov	x29, sp
  4115b0:	mov	x19, x0
  4115b4:	bl	4028d0 <fileno@plt>
  4115b8:	tbnz	w0, #31, 411620 <ferror@plt+0xe790>
  4115bc:	mov	x0, x19
  4115c0:	bl	402da0 <__freading@plt>
  4115c4:	cbz	w0, 4115e4 <ferror@plt+0xe754>
  4115c8:	mov	x0, x19
  4115cc:	bl	4028d0 <fileno@plt>
  4115d0:	mov	w2, #0x1                   	// #1
  4115d4:	mov	x1, xzr
  4115d8:	bl	402890 <lseek@plt>
  4115dc:	cmn	x0, #0x1
  4115e0:	b.eq	411620 <ferror@plt+0xe790>  // b.none
  4115e4:	mov	x0, x19
  4115e8:	bl	4118e0 <ferror@plt+0xea50>
  4115ec:	cbz	w0, 411620 <ferror@plt+0xe790>
  4115f0:	bl	402e00 <__errno_location@plt>
  4115f4:	ldr	w21, [x0]
  4115f8:	mov	x20, x0
  4115fc:	mov	x0, x19
  411600:	bl	4028f0 <fclose@plt>
  411604:	cbz	w21, 411610 <ferror@plt+0xe780>
  411608:	mov	w0, #0xffffffff            	// #-1
  41160c:	str	w21, [x20]
  411610:	ldp	x20, x19, [sp, #32]
  411614:	ldr	x21, [sp, #16]
  411618:	ldp	x29, x30, [sp], #48
  41161c:	ret
  411620:	mov	x0, x19
  411624:	ldp	x20, x19, [sp, #32]
  411628:	ldr	x21, [sp, #16]
  41162c:	ldp	x29, x30, [sp], #48
  411630:	b	4028f0 <fclose@plt>
  411634:	sub	sp, sp, #0x100
  411638:	stp	x29, x30, [sp, #208]
  41163c:	add	x29, sp, #0xd0
  411640:	mov	x8, #0xffffffffffffffd0    	// #-48
  411644:	mov	x9, sp
  411648:	sub	x10, x29, #0x50
  41164c:	stp	x20, x19, [sp, #240]
  411650:	mov	w19, w0
  411654:	movk	x8, #0xff80, lsl #32
  411658:	add	x11, x29, #0x30
  41165c:	cmp	w1, #0xb
  411660:	add	x9, x9, #0x80
  411664:	add	x10, x10, #0x30
  411668:	stp	x22, x21, [sp, #224]
  41166c:	stp	x2, x3, [x29, #-80]
  411670:	stp	x4, x5, [x29, #-64]
  411674:	stp	x6, x7, [x29, #-48]
  411678:	stp	q1, q2, [sp, #16]
  41167c:	stp	q3, q4, [sp, #48]
  411680:	str	q0, [sp]
  411684:	stp	q5, q6, [sp, #80]
  411688:	str	q7, [sp, #112]
  41168c:	stp	x9, x8, [x29, #-16]
  411690:	stp	x11, x10, [x29, #-32]
  411694:	b.hi	4116e0 <ferror@plt+0xe850>  // b.pmore
  411698:	mov	w8, #0x1                   	// #1
  41169c:	lsl	w8, w8, w1
  4116a0:	mov	w9, #0x514                 	// #1300
  4116a4:	tst	w8, w9
  4116a8:	b.ne	411718 <ferror@plt+0xe888>  // b.any
  4116ac:	mov	w9, #0xa0a                 	// #2570
  4116b0:	tst	w8, w9
  4116b4:	b.ne	41170c <ferror@plt+0xe87c>  // b.any
  4116b8:	cbnz	w1, 4116e0 <ferror@plt+0xe850>
  4116bc:	ldursw	x8, [x29, #-8]
  4116c0:	tbz	w8, #31, 4117c0 <ferror@plt+0xe930>
  4116c4:	add	w9, w8, #0x8
  4116c8:	cmn	w8, #0x8
  4116cc:	stur	w9, [x29, #-8]
  4116d0:	b.gt	4117c0 <ferror@plt+0xe930>
  4116d4:	ldur	x9, [x29, #-24]
  4116d8:	add	x8, x9, x8
  4116dc:	b	4117cc <ferror@plt+0xe93c>
  4116e0:	sub	w8, w1, #0x400
  4116e4:	cmp	w8, #0xa
  4116e8:	b.hi	41179c <ferror@plt+0xe90c>  // b.pmore
  4116ec:	mov	w9, #0x1                   	// #1
  4116f0:	lsl	w9, w9, w8
  4116f4:	mov	w10, #0x285                 	// #645
  4116f8:	tst	w9, w10
  4116fc:	b.ne	411718 <ferror@plt+0xe888>  // b.any
  411700:	mov	w10, #0x502                 	// #1282
  411704:	tst	w9, w10
  411708:	b.eq	411770 <ferror@plt+0xe8e0>  // b.none
  41170c:	mov	w0, w19
  411710:	bl	402ca0 <fcntl@plt>
  411714:	b	411754 <ferror@plt+0xe8c4>
  411718:	ldursw	x8, [x29, #-8]
  41171c:	tbz	w8, #31, 41173c <ferror@plt+0xe8ac>
  411720:	add	w9, w8, #0x8
  411724:	cmn	w8, #0x8
  411728:	stur	w9, [x29, #-8]
  41172c:	b.gt	41173c <ferror@plt+0xe8ac>
  411730:	ldur	x9, [x29, #-24]
  411734:	add	x8, x9, x8
  411738:	b	411748 <ferror@plt+0xe8b8>
  41173c:	ldur	x8, [x29, #-32]
  411740:	add	x9, x8, #0x8
  411744:	stur	x9, [x29, #-32]
  411748:	ldr	w2, [x8]
  41174c:	mov	w0, w19
  411750:	bl	402ca0 <fcntl@plt>
  411754:	mov	w20, w0
  411758:	mov	w0, w20
  41175c:	ldp	x20, x19, [sp, #240]
  411760:	ldp	x22, x21, [sp, #224]
  411764:	ldp	x29, x30, [sp, #208]
  411768:	add	sp, sp, #0x100
  41176c:	ret
  411770:	cmp	w8, #0x6
  411774:	b.ne	41179c <ferror@plt+0xe90c>  // b.any
  411778:	ldursw	x8, [x29, #-8]
  41177c:	tbz	w8, #31, 4117dc <ferror@plt+0xe94c>
  411780:	add	w9, w8, #0x8
  411784:	cmn	w8, #0x8
  411788:	stur	w9, [x29, #-8]
  41178c:	b.gt	4117dc <ferror@plt+0xe94c>
  411790:	ldur	x9, [x29, #-24]
  411794:	add	x8, x9, x8
  411798:	b	4117e8 <ferror@plt+0xe958>
  41179c:	ldursw	x8, [x29, #-8]
  4117a0:	tbz	w8, #31, 411848 <ferror@plt+0xe9b8>
  4117a4:	add	w9, w8, #0x8
  4117a8:	cmn	w8, #0x8
  4117ac:	stur	w9, [x29, #-8]
  4117b0:	b.gt	411848 <ferror@plt+0xe9b8>
  4117b4:	ldur	x9, [x29, #-24]
  4117b8:	add	x8, x9, x8
  4117bc:	b	411854 <ferror@plt+0xe9c4>
  4117c0:	ldur	x8, [x29, #-32]
  4117c4:	add	x9, x8, #0x8
  4117c8:	stur	x9, [x29, #-32]
  4117cc:	ldr	w2, [x8]
  4117d0:	mov	w0, w19
  4117d4:	mov	w1, wzr
  4117d8:	b	411750 <ferror@plt+0xe8c0>
  4117dc:	ldur	x8, [x29, #-32]
  4117e0:	add	x9, x8, #0x8
  4117e4:	stur	x9, [x29, #-32]
  4117e8:	adrp	x22, 426000 <_obstack_memory_used@@Base+0x141b0>
  4117ec:	ldr	w9, [x22, #3312]
  4117f0:	ldr	w21, [x8]
  4117f4:	tbnz	w9, #31, 411870 <ferror@plt+0xe9e0>
  4117f8:	mov	w1, #0x406                 	// #1030
  4117fc:	mov	w0, w19
  411800:	mov	w2, w21
  411804:	bl	402ca0 <fcntl@plt>
  411808:	mov	w20, w0
  41180c:	tbz	w0, #31, 411864 <ferror@plt+0xe9d4>
  411810:	bl	402e00 <__errno_location@plt>
  411814:	ldr	w8, [x0]
  411818:	cmp	w8, #0x16
  41181c:	b.ne	411864 <ferror@plt+0xe9d4>  // b.any
  411820:	mov	w0, w19
  411824:	mov	w1, wzr
  411828:	mov	w2, w21
  41182c:	bl	402ca0 <fcntl@plt>
  411830:	mov	w20, w0
  411834:	tbnz	w0, #31, 411758 <ferror@plt+0xe8c8>
  411838:	mov	w8, #0xffffffff            	// #-1
  41183c:	str	w8, [x22, #3312]
  411840:	mov	w8, #0x1                   	// #1
  411844:	b	411890 <ferror@plt+0xea00>
  411848:	ldur	x8, [x29, #-32]
  41184c:	add	x9, x8, #0x8
  411850:	stur	x9, [x29, #-32]
  411854:	ldr	x2, [x8]
  411858:	mov	w0, w19
  41185c:	bl	402ca0 <fcntl@plt>
  411860:	b	411754 <ferror@plt+0xe8c4>
  411864:	mov	w8, #0x1                   	// #1
  411868:	str	w8, [x22, #3312]
  41186c:	b	411758 <ferror@plt+0xe8c8>
  411870:	mov	w0, w19
  411874:	mov	w1, wzr
  411878:	mov	w2, w21
  41187c:	bl	402ca0 <fcntl@plt>
  411880:	ldr	w8, [x22, #3312]
  411884:	mov	w20, w0
  411888:	cmn	w8, #0x1
  41188c:	cset	w8, eq  // eq = none
  411890:	cbz	w8, 411758 <ferror@plt+0xe8c8>
  411894:	tbnz	w20, #31, 411758 <ferror@plt+0xe8c8>
  411898:	mov	w1, #0x1                   	// #1
  41189c:	mov	w0, w20
  4118a0:	bl	402ca0 <fcntl@plt>
  4118a4:	tbnz	w0, #31, 4118c0 <ferror@plt+0xea30>
  4118a8:	orr	w2, w0, #0x1
  4118ac:	mov	w1, #0x2                   	// #2
  4118b0:	mov	w0, w20
  4118b4:	bl	402ca0 <fcntl@plt>
  4118b8:	cmn	w0, #0x1
  4118bc:	b.ne	411758 <ferror@plt+0xe8c8>  // b.any
  4118c0:	bl	402e00 <__errno_location@plt>
  4118c4:	ldr	w21, [x0]
  4118c8:	mov	x19, x0
  4118cc:	mov	w0, w20
  4118d0:	bl	402a70 <close@plt>
  4118d4:	str	w21, [x19]
  4118d8:	mov	w20, #0xffffffff            	// #-1
  4118dc:	b	411758 <ferror@plt+0xe8c8>
  4118e0:	stp	x29, x30, [sp, #-32]!
  4118e4:	str	x19, [sp, #16]
  4118e8:	mov	x19, x0
  4118ec:	mov	x29, sp
  4118f0:	cbz	x0, 411918 <ferror@plt+0xea88>
  4118f4:	mov	x0, x19
  4118f8:	bl	402da0 <__freading@plt>
  4118fc:	cbz	w0, 411918 <ferror@plt+0xea88>
  411900:	ldrb	w8, [x19, #1]
  411904:	tbz	w8, #0, 411918 <ferror@plt+0xea88>
  411908:	mov	w2, #0x1                   	// #1
  41190c:	mov	x0, x19
  411910:	mov	x1, xzr
  411914:	bl	411928 <ferror@plt+0xea98>
  411918:	mov	x0, x19
  41191c:	ldr	x19, [sp, #16]
  411920:	ldp	x29, x30, [sp], #32
  411924:	b	402cd0 <fflush@plt>
  411928:	stp	x29, x30, [sp, #-48]!
  41192c:	str	x21, [sp, #16]
  411930:	stp	x20, x19, [sp, #32]
  411934:	ldp	x9, x8, [x0, #8]
  411938:	mov	w20, w2
  41193c:	mov	x19, x0
  411940:	mov	x21, x1
  411944:	cmp	x8, x9
  411948:	mov	x29, sp
  41194c:	b.ne	411964 <ferror@plt+0xead4>  // b.any
  411950:	ldp	x9, x8, [x19, #32]
  411954:	cmp	x8, x9
  411958:	b.ne	411964 <ferror@plt+0xead4>  // b.any
  41195c:	ldr	x8, [x19, #72]
  411960:	cbz	x8, 411980 <ferror@plt+0xeaf0>
  411964:	mov	x0, x19
  411968:	mov	x1, x21
  41196c:	mov	w2, w20
  411970:	ldp	x20, x19, [sp, #32]
  411974:	ldr	x21, [sp, #16]
  411978:	ldp	x29, x30, [sp], #48
  41197c:	b	402be0 <fseeko@plt>
  411980:	mov	x0, x19
  411984:	bl	4028d0 <fileno@plt>
  411988:	mov	x1, x21
  41198c:	mov	w2, w20
  411990:	bl	402890 <lseek@plt>
  411994:	cmn	x0, #0x1
  411998:	b.eq	4119b4 <ferror@plt+0xeb24>  // b.none
  41199c:	ldr	w9, [x19]
  4119a0:	mov	x8, x0
  4119a4:	mov	w0, wzr
  4119a8:	str	x8, [x19, #144]
  4119ac:	and	w9, w9, #0xffffffef
  4119b0:	str	w9, [x19]
  4119b4:	ldp	x20, x19, [sp, #32]
  4119b8:	ldr	x21, [sp, #16]
  4119bc:	ldp	x29, x30, [sp], #48
  4119c0:	ret
  4119c4:	sub	sp, sp, #0x40
  4119c8:	stp	x29, x30, [sp, #16]
  4119cc:	add	x29, sp, #0x10
  4119d0:	cmp	x0, #0x0
  4119d4:	sub	x8, x29, #0x4
  4119d8:	stp	x20, x19, [sp, #48]
  4119dc:	csel	x20, x8, x0, eq  // eq = none
  4119e0:	mov	x0, x20
  4119e4:	stp	x22, x21, [sp, #32]
  4119e8:	mov	x22, x2
  4119ec:	mov	x19, x1
  4119f0:	bl	402750 <mbrtowc@plt>
  4119f4:	mov	x21, x0
  4119f8:	cbz	x22, 411a1c <ferror@plt+0xeb8c>
  4119fc:	cmn	x21, #0x2
  411a00:	b.cc	411a1c <ferror@plt+0xeb8c>  // b.lo, b.ul, b.last
  411a04:	mov	w0, wzr
  411a08:	bl	40ba40 <ferror@plt+0x8bb0>
  411a0c:	tbnz	w0, #0, 411a1c <ferror@plt+0xeb8c>
  411a10:	ldrb	w8, [x19]
  411a14:	mov	w21, #0x1                   	// #1
  411a18:	str	w8, [x20]
  411a1c:	mov	x0, x21
  411a20:	ldp	x20, x19, [sp, #48]
  411a24:	ldp	x22, x21, [sp, #32]
  411a28:	ldp	x29, x30, [sp, #16]
  411a2c:	add	sp, sp, #0x40
  411a30:	ret
  411a34:	sub	sp, sp, #0x40
  411a38:	stp	x29, x30, [sp, #16]
  411a3c:	stp	x22, x21, [sp, #32]
  411a40:	stp	x20, x19, [sp, #48]
  411a44:	ldr	x8, [x0, #8]
  411a48:	mov	w9, #0xca00                	// #51712
  411a4c:	movk	w9, #0x3b9a, lsl #16
  411a50:	add	x29, sp, #0x10
  411a54:	cmp	x8, x9
  411a58:	b.cc	411a70 <ferror@plt+0xebe0>  // b.lo, b.ul, b.last
  411a5c:	bl	402e00 <__errno_location@plt>
  411a60:	mov	w8, #0x16                  	// #22
  411a64:	str	w8, [x0]
  411a68:	mov	w0, #0xffffffff            	// #-1
  411a6c:	b	411ad4 <ferror@plt+0xec44>
  411a70:	ldr	x20, [x0]
  411a74:	mov	w21, #0xa400                	// #41984
  411a78:	mov	x22, #0xffffffffffff5c00    	// #-41984
  411a7c:	mov	x19, x1
  411a80:	movk	w21, #0x1f, lsl #16
  411a84:	movk	x22, #0xffe0, lsl #16
  411a88:	cmp	x20, x21
  411a8c:	str	x8, [sp, #8]
  411a90:	b.le	411ac4 <ferror@plt+0xec34>
  411a94:	mov	x0, sp
  411a98:	mov	x1, x19
  411a9c:	str	x21, [sp]
  411aa0:	bl	402c40 <nanosleep@plt>
  411aa4:	mov	x8, xzr
  411aa8:	add	x20, x20, x22
  411aac:	cbz	w0, 411a88 <ferror@plt+0xebf8>
  411ab0:	cbz	x19, 411ad4 <ferror@plt+0xec44>
  411ab4:	ldr	x8, [x19]
  411ab8:	add	x8, x8, x20
  411abc:	str	x8, [x19]
  411ac0:	b	411ad4 <ferror@plt+0xec44>
  411ac4:	mov	x0, sp
  411ac8:	mov	x1, x19
  411acc:	str	x20, [sp]
  411ad0:	bl	402c40 <nanosleep@plt>
  411ad4:	ldp	x20, x19, [sp, #48]
  411ad8:	ldp	x22, x21, [sp, #32]
  411adc:	ldp	x29, x30, [sp, #16]
  411ae0:	add	sp, sp, #0x40
  411ae4:	ret

0000000000411ae8 <_obstack_begin@@Base>:
  411ae8:	stp	x29, x30, [sp, #-48]!
  411aec:	stp	x20, x19, [sp, #32]
  411af0:	ldrb	w8, [x0, #80]
  411af4:	cmp	x2, #0x0
  411af8:	mov	w9, #0x10                  	// #16
  411afc:	csel	x20, x9, x2, eq  // eq = none
  411b00:	mov	w9, #0xfe0                 	// #4064
  411b04:	cmp	x1, #0x0
  411b08:	str	x21, [sp, #16]
  411b0c:	mov	x19, x0
  411b10:	str	x4, [x0, #64]
  411b14:	csel	x0, x9, x1, eq  // eq = none
  411b18:	and	w8, w8, #0xfe
  411b1c:	sub	x21, x20, #0x1
  411b20:	mov	x29, sp
  411b24:	strb	w8, [x19, #80]
  411b28:	str	x0, [x19]
  411b2c:	stp	x21, x3, [x19, #48]
  411b30:	blr	x3
  411b34:	str	x0, [x19, #8]
  411b38:	cbz	x0, 411b84 <_obstack_begin@@Base+0x9c>
  411b3c:	ldr	x10, [x19]
  411b40:	add	x8, x0, x21
  411b44:	neg	x9, x20
  411b48:	add	x8, x8, #0x10
  411b4c:	and	x8, x8, x9
  411b50:	stp	x8, x8, [x19, #16]
  411b54:	add	x8, x0, x10
  411b58:	str	x8, [x0]
  411b5c:	str	x8, [x19, #32]
  411b60:	str	xzr, [x0, #8]
  411b64:	ldrb	w8, [x19, #80]
  411b68:	ldr	x21, [sp, #16]
  411b6c:	mov	w0, #0x1                   	// #1
  411b70:	and	w8, w8, #0xfffffff9
  411b74:	strb	w8, [x19, #80]
  411b78:	ldp	x20, x19, [sp, #32]
  411b7c:	ldp	x29, x30, [sp], #48
  411b80:	ret
  411b84:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  411b88:	ldr	x8, [x8, #1296]
  411b8c:	blr	x8

0000000000411b90 <_obstack_begin_1@@Base>:
  411b90:	stp	x29, x30, [sp, #-48]!
  411b94:	stp	x20, x19, [sp, #32]
  411b98:	ldrb	w8, [x0, #80]
  411b9c:	cmp	x2, #0x0
  411ba0:	mov	w9, #0x10                  	// #16
  411ba4:	csel	x20, x9, x2, eq  // eq = none
  411ba8:	mov	w9, #0xfe0                 	// #4064
  411bac:	cmp	x1, #0x0
  411bb0:	str	x21, [sp, #16]
  411bb4:	csel	x1, x9, x1, eq  // eq = none
  411bb8:	orr	w8, w8, #0x1
  411bbc:	sub	x21, x20, #0x1
  411bc0:	mov	x19, x0
  411bc4:	stp	x4, x5, [x0, #64]
  411bc8:	strb	w8, [x0, #80]
  411bcc:	str	x1, [x0]
  411bd0:	stp	x21, x3, [x0, #48]
  411bd4:	mov	x0, x5
  411bd8:	mov	x29, sp
  411bdc:	blr	x3
  411be0:	str	x0, [x19, #8]
  411be4:	cbz	x0, 411c30 <_obstack_begin_1@@Base+0xa0>
  411be8:	ldr	x10, [x19]
  411bec:	add	x8, x0, x21
  411bf0:	neg	x9, x20
  411bf4:	add	x8, x8, #0x10
  411bf8:	and	x8, x8, x9
  411bfc:	stp	x8, x8, [x19, #16]
  411c00:	add	x8, x0, x10
  411c04:	str	x8, [x0]
  411c08:	str	x8, [x19, #32]
  411c0c:	str	xzr, [x0, #8]
  411c10:	ldrb	w8, [x19, #80]
  411c14:	ldr	x21, [sp, #16]
  411c18:	mov	w0, #0x1                   	// #1
  411c1c:	and	w8, w8, #0xfffffff9
  411c20:	strb	w8, [x19, #80]
  411c24:	ldp	x20, x19, [sp, #32]
  411c28:	ldp	x29, x30, [sp], #48
  411c2c:	ret
  411c30:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  411c34:	ldr	x8, [x8, #1296]
  411c38:	blr	x8

0000000000411c3c <_obstack_newchunk@@Base>:
  411c3c:	stp	x29, x30, [sp, #-64]!
  411c40:	str	x23, [sp, #16]
  411c44:	stp	x22, x21, [sp, #32]
  411c48:	stp	x20, x19, [sp, #48]
  411c4c:	ldp	x9, x8, [x0, #16]
  411c50:	ldr	x10, [x0, #48]
  411c54:	ldr	x11, [x0]
  411c58:	mov	x29, sp
  411c5c:	sub	x20, x8, x9
  411c60:	adds	x8, x20, x1
  411c64:	lsr	x9, x20, #3
  411c68:	cset	w12, cs  // cs = hs, nlast
  411c6c:	adds	x10, x8, x10
  411c70:	add	x9, x9, #0x64
  411c74:	cset	w8, cs  // cs = hs, nlast
  411c78:	adds	x9, x9, x10
  411c7c:	csel	x9, x10, x9, cs  // cs = hs, nlast
  411c80:	cmp	x9, x11
  411c84:	csel	x23, x11, x9, cc  // cc = lo, ul, last
  411c88:	tbnz	w12, #0, 411d74 <_obstack_newchunk@@Base+0x138>
  411c8c:	tbnz	w8, #0, 411d74 <_obstack_newchunk@@Base+0x138>
  411c90:	ldrb	w8, [x0, #80]
  411c94:	ldr	x21, [x0, #8]
  411c98:	mov	x19, x0
  411c9c:	tbnz	w8, #0, 411cb0 <_obstack_newchunk@@Base+0x74>
  411ca0:	ldr	x8, [x19, #56]
  411ca4:	mov	x0, x23
  411ca8:	blr	x8
  411cac:	b	411cc0 <_obstack_newchunk@@Base+0x84>
  411cb0:	ldr	x8, [x19, #56]
  411cb4:	ldr	x0, [x19, #72]
  411cb8:	mov	x1, x23
  411cbc:	blr	x8
  411cc0:	mov	x22, x0
  411cc4:	cbz	x0, 411d74 <_obstack_newchunk@@Base+0x138>
  411cc8:	add	x8, x22, x23
  411ccc:	str	x22, [x19, #8]
  411cd0:	str	x21, [x22, #8]
  411cd4:	str	x8, [x19, #32]
  411cd8:	str	x8, [x22]
  411cdc:	ldr	x8, [x19, #48]
  411ce0:	ldr	x1, [x19, #16]
  411ce4:	mov	x2, x20
  411ce8:	add	x9, x22, x8
  411cec:	add	x9, x9, #0x10
  411cf0:	bic	x23, x9, x8
  411cf4:	mov	x0, x23
  411cf8:	bl	402760 <memcpy@plt>
  411cfc:	ldrb	w8, [x19, #80]
  411d00:	tbnz	w8, #1, 411d4c <_obstack_newchunk@@Base+0x110>
  411d04:	ldr	x8, [x19, #48]
  411d08:	ldr	x9, [x19, #16]
  411d0c:	add	x10, x21, x8
  411d10:	add	x10, x10, #0x10
  411d14:	bic	x8, x10, x8
  411d18:	cmp	x9, x8
  411d1c:	b.ne	411d4c <_obstack_newchunk@@Base+0x110>  // b.any
  411d20:	ldr	x8, [x21, #8]
  411d24:	str	x8, [x22, #8]
  411d28:	ldrb	w8, [x19, #80]
  411d2c:	tbnz	w8, #0, 411d40 <_obstack_newchunk@@Base+0x104>
  411d30:	ldr	x8, [x19, #64]
  411d34:	mov	x0, x21
  411d38:	blr	x8
  411d3c:	b	411d4c <_obstack_newchunk@@Base+0x110>
  411d40:	ldp	x8, x0, [x19, #64]
  411d44:	mov	x1, x21
  411d48:	blr	x8
  411d4c:	ldrb	w8, [x19, #80]
  411d50:	add	x9, x23, x20
  411d54:	stp	x23, x9, [x19, #16]
  411d58:	ldr	x23, [sp, #16]
  411d5c:	and	w8, w8, #0xfffffffd
  411d60:	strb	w8, [x19, #80]
  411d64:	ldp	x20, x19, [sp, #48]
  411d68:	ldp	x22, x21, [sp, #32]
  411d6c:	ldp	x29, x30, [sp], #64
  411d70:	ret
  411d74:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  411d78:	ldr	x8, [x8, #1296]
  411d7c:	blr	x8

0000000000411d80 <_obstack_allocated_p@@Base>:
  411d80:	ldr	x8, [x0, #8]
  411d84:	cbnz	x8, 411d98 <_obstack_allocated_p@@Base+0x18>
  411d88:	mov	w0, wzr
  411d8c:	ret
  411d90:	ldr	x8, [x8, #8]
  411d94:	cbz	x8, 411d88 <_obstack_allocated_p@@Base+0x8>
  411d98:	cmp	x8, x1
  411d9c:	b.cs	411d90 <_obstack_allocated_p@@Base+0x10>  // b.hs, b.nlast
  411da0:	ldr	x9, [x8]
  411da4:	cmp	x9, x1
  411da8:	b.cc	411d90 <_obstack_allocated_p@@Base+0x10>  // b.lo, b.ul, b.last
  411dac:	mov	w0, #0x1                   	// #1
  411db0:	ret

0000000000411db4 <_obstack_free@@Base>:
  411db4:	stp	x29, x30, [sp, #-48]!
  411db8:	stp	x20, x19, [sp, #32]
  411dbc:	ldr	x8, [x0, #8]
  411dc0:	mov	x20, x1
  411dc4:	str	x21, [sp, #16]
  411dc8:	mov	x29, sp
  411dcc:	cbz	x8, 411e28 <_obstack_free@@Base+0x74>
  411dd0:	mov	x19, x0
  411dd4:	b	411df8 <_obstack_free@@Base+0x44>
  411dd8:	ldr	x9, [x19, #64]
  411ddc:	mov	x0, x8
  411de0:	blr	x9
  411de4:	ldrb	w8, [x19, #80]
  411de8:	orr	w8, w8, #0x2
  411dec:	strb	w8, [x19, #80]
  411df0:	mov	x8, x21
  411df4:	cbz	x21, 411e28 <_obstack_free@@Base+0x74>
  411df8:	cmp	x8, x20
  411dfc:	b.cs	411e0c <_obstack_free@@Base+0x58>  // b.hs, b.nlast
  411e00:	ldr	x9, [x8]
  411e04:	cmp	x9, x20
  411e08:	b.cs	411e30 <_obstack_free@@Base+0x7c>  // b.hs, b.nlast
  411e0c:	ldrb	w9, [x19, #80]
  411e10:	ldr	x21, [x8, #8]
  411e14:	tbz	w9, #0, 411dd8 <_obstack_free@@Base+0x24>
  411e18:	ldp	x9, x0, [x19, #64]
  411e1c:	mov	x1, x8
  411e20:	blr	x9
  411e24:	b	411de4 <_obstack_free@@Base+0x30>
  411e28:	cbz	x20, 411e40 <_obstack_free@@Base+0x8c>
  411e2c:	bl	402ae0 <abort@plt>
  411e30:	stp	x20, x20, [x19, #16]
  411e34:	ldr	x9, [x8]
  411e38:	str	x8, [x19, #8]
  411e3c:	str	x9, [x19, #32]
  411e40:	ldp	x20, x19, [sp, #32]
  411e44:	ldr	x21, [sp, #16]
  411e48:	ldp	x29, x30, [sp], #48
  411e4c:	ret

0000000000411e50 <_obstack_memory_used@@Base>:
  411e50:	ldr	x8, [x0, #8]
  411e54:	cbz	x8, 411e70 <_obstack_memory_used@@Base+0x20>
  411e58:	mov	x0, xzr
  411e5c:	sub	x10, x0, x8
  411e60:	ldp	x9, x8, [x8]
  411e64:	add	x0, x10, x9
  411e68:	cbnz	x8, 411e5c <_obstack_memory_used@@Base+0xc>
  411e6c:	ret
  411e70:	mov	x0, xzr
  411e74:	ret
  411e78:	stp	x29, x30, [sp, #-32]!
  411e7c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  411e80:	str	x19, [sp, #16]
  411e84:	ldr	x19, [x8, #1312]
  411e88:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x31b0>
  411e8c:	add	x1, x1, #0x5d3
  411e90:	mov	w2, #0x5                   	// #5
  411e94:	mov	x0, xzr
  411e98:	mov	x29, sp
  411e9c:	bl	402d70 <dcgettext@plt>
  411ea0:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x31b0>
  411ea4:	mov	x3, x0
  411ea8:	add	x2, x2, #0x2ce
  411eac:	mov	w1, #0x1                   	// #1
  411eb0:	mov	x0, x19
  411eb4:	bl	402b90 <__fprintf_chk@plt>
  411eb8:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x141b0>
  411ebc:	ldr	w0, [x8, #1200]
  411ec0:	bl	4027d0 <exit@plt>
  411ec4:	sub	w9, w0, #0x41
  411ec8:	mov	w8, w0
  411ecc:	cmp	w9, #0x39
  411ed0:	mov	w0, #0x1                   	// #1
  411ed4:	b.hi	411eec <_obstack_memory_used@@Base+0x9c>  // b.pmore
  411ed8:	mov	w10, #0x1                   	// #1
  411edc:	lsl	x9, x10, x9
  411ee0:	tst	x9, #0x3ffffff03ffffff
  411ee4:	b.eq	411eec <_obstack_memory_used@@Base+0x9c>  // b.none
  411ee8:	ret
  411eec:	sub	w8, w8, #0x30
  411ef0:	cmp	w8, #0xa
  411ef4:	b.cc	411ee8 <_obstack_memory_used@@Base+0x98>  // b.lo, b.ul, b.last
  411ef8:	mov	w0, wzr
  411efc:	ret
  411f00:	sub	w8, w0, #0x41
  411f04:	cmp	w8, #0x39
  411f08:	b.hi	411f1c <_obstack_memory_used@@Base+0xcc>  // b.pmore
  411f0c:	mov	x9, #0x3ffffff03ffffff     	// #288230371923853311
  411f10:	lsr	x8, x9, x8
  411f14:	and	w0, w8, #0x1
  411f18:	ret
  411f1c:	mov	w0, wzr
  411f20:	ret
  411f24:	cmp	w0, #0x80
  411f28:	cset	w0, cc  // cc = lo, ul, last
  411f2c:	ret
  411f30:	cmp	w0, #0x20
  411f34:	cset	w8, eq  // eq = none
  411f38:	cmp	w0, #0x9
  411f3c:	cset	w9, eq  // eq = none
  411f40:	orr	w0, w8, w9
  411f44:	ret
  411f48:	mov	w8, w0
  411f4c:	cmp	w0, #0x20
  411f50:	mov	w0, #0x1                   	// #1
  411f54:	b.cs	411f5c <_obstack_memory_used@@Base+0x10c>  // b.hs, b.nlast
  411f58:	ret
  411f5c:	cmp	w8, #0x7f
  411f60:	b.eq	411f58 <_obstack_memory_used@@Base+0x108>  // b.none
  411f64:	mov	w0, wzr
  411f68:	ret
  411f6c:	sub	w8, w0, #0x30
  411f70:	cmp	w8, #0xa
  411f74:	cset	w0, cc  // cc = lo, ul, last
  411f78:	ret
  411f7c:	sub	w8, w0, #0x21
  411f80:	cmp	w8, #0x5e
  411f84:	cset	w0, cc  // cc = lo, ul, last
  411f88:	ret
  411f8c:	sub	w8, w0, #0x61
  411f90:	cmp	w8, #0x1a
  411f94:	cset	w0, cc  // cc = lo, ul, last
  411f98:	ret
  411f9c:	sub	w8, w0, #0x20
  411fa0:	cmp	w8, #0x5f
  411fa4:	cset	w0, cc  // cc = lo, ul, last
  411fa8:	ret
  411fac:	sub	w8, w0, #0x21
  411fb0:	cmp	w8, #0x5d
  411fb4:	b.hi	411fd8 <_obstack_memory_used@@Base+0x188>  // b.pmore
  411fb8:	adrp	x9, 415000 <_obstack_memory_used@@Base+0x31b0>
  411fbc:	add	x9, x9, #0x815
  411fc0:	adr	x10, 411fd4 <_obstack_memory_used@@Base+0x184>
  411fc4:	ldrb	w11, [x9, x8]
  411fc8:	add	x10, x10, x11, lsl #2
  411fcc:	mov	w0, #0x1                   	// #1
  411fd0:	br	x10
  411fd4:	ret
  411fd8:	mov	w0, wzr
  411fdc:	ret
  411fe0:	sub	w8, w0, #0x9
  411fe4:	cmp	w8, #0x17
  411fe8:	b.hi	412000 <_obstack_memory_used@@Base+0x1b0>  // b.pmore
  411fec:	mov	w9, #0x1f                  	// #31
  411ff0:	movk	w9, #0x80, lsl #16
  411ff4:	lsr	w8, w9, w8
  411ff8:	and	w0, w8, #0x1
  411ffc:	ret
  412000:	mov	w0, wzr
  412004:	ret
  412008:	sub	w8, w0, #0x41
  41200c:	cmp	w8, #0x1a
  412010:	cset	w0, cc  // cc = lo, ul, last
  412014:	ret
  412018:	sub	w8, w0, #0x30
  41201c:	cmp	w8, #0x36
  412020:	b.hi	412038 <_obstack_memory_used@@Base+0x1e8>  // b.pmore
  412024:	mov	x9, #0x7e0000007e0000      	// #35465847073800192
  412028:	movk	x9, #0x3ff
  41202c:	lsr	x8, x9, x8
  412030:	and	w0, w8, #0x1
  412034:	ret
  412038:	mov	w0, wzr
  41203c:	ret
  412040:	sub	w8, w0, #0x41
  412044:	add	w9, w0, #0x20
  412048:	cmp	w8, #0x1a
  41204c:	csel	w0, w9, w0, cc  // cc = lo, ul, last
  412050:	ret
  412054:	sub	w8, w0, #0x61
  412058:	sub	w9, w0, #0x20
  41205c:	cmp	w8, #0x1a
  412060:	csel	w0, w9, w0, cc  // cc = lo, ul, last
  412064:	ret
  412068:	stp	x29, x30, [sp, #-48]!
  41206c:	str	x21, [sp, #16]
  412070:	stp	x20, x19, [sp, #32]
  412074:	mov	x29, sp
  412078:	mov	x20, x0
  41207c:	bl	4028a0 <__fpending@plt>
  412080:	ldr	w21, [x20]
  412084:	mov	x19, x0
  412088:	mov	x0, x20
  41208c:	bl	4115a0 <ferror@plt+0xe710>
  412090:	mov	w8, w0
  412094:	tbnz	w21, #5, 4120bc <_obstack_memory_used@@Base+0x26c>
  412098:	cmp	w8, #0x0
  41209c:	csetm	w0, ne  // ne = any
  4120a0:	cbnz	x19, 4120cc <_obstack_memory_used@@Base+0x27c>
  4120a4:	cbz	w8, 4120cc <_obstack_memory_used@@Base+0x27c>
  4120a8:	bl	402e00 <__errno_location@plt>
  4120ac:	ldr	w8, [x0]
  4120b0:	cmp	w8, #0x9
  4120b4:	csetm	w0, ne  // ne = any
  4120b8:	b	4120cc <_obstack_memory_used@@Base+0x27c>
  4120bc:	cbnz	w8, 4120c8 <_obstack_memory_used@@Base+0x278>
  4120c0:	bl	402e00 <__errno_location@plt>
  4120c4:	str	wzr, [x0]
  4120c8:	mov	w0, #0xffffffff            	// #-1
  4120cc:	ldp	x20, x19, [sp, #32]
  4120d0:	ldr	x21, [sp, #16]
  4120d4:	ldp	x29, x30, [sp], #48
  4120d8:	ret
  4120dc:	mov	x8, #0xc3e0000000000000    	// #-4332462841530417152
  4120e0:	fmov	d1, x8
  4120e4:	fcmp	d0, d1
  4120e8:	b.le	412154 <_obstack_memory_used@@Base+0x304>
  4120ec:	mov	x8, #0x43e0000000000000    	// #4890909195324358656
  4120f0:	fmov	d1, x8
  4120f4:	mov	w8, #0xca00                	// #51712
  4120f8:	fcmp	d0, d1
  4120fc:	movk	w8, #0x3b9a, lsl #16
  412100:	b.pl	412160 <_obstack_memory_used@@Base+0x310>  // b.nfrst
  412104:	fcvtzs	x9, d0
  412108:	mov	x10, #0xcd6500000000        	// #225833675390976
  41210c:	movk	x10, #0x41cd, lsl #48
  412110:	scvtf	d1, x9
  412114:	fsub	d0, d0, d1
  412118:	fmov	d1, x10
  41211c:	fmul	d0, d0, d1
  412120:	fcvtzs	x10, d0
  412124:	scvtf	d1, x10
  412128:	fcmp	d0, d1
  41212c:	cset	w11, gt
  412130:	add	x10, x11, x10
  412134:	sdiv	x11, x10, x8
  412138:	msub	x10, x11, x8, x10
  41213c:	add	x9, x11, x9
  412140:	add	x8, x10, x8
  412144:	cmp	x10, #0x0
  412148:	add	x0, x9, x10, asr #63
  41214c:	csel	x1, x8, x10, lt  // lt = tstop
  412150:	ret
  412154:	mov	x1, xzr
  412158:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  41215c:	ret
  412160:	sub	x1, x8, #0x1
  412164:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  412168:	ret
  41216c:	stp	x29, x30, [sp, #-48]!
  412170:	stp	x20, x19, [sp, #32]
  412174:	mov	w19, w0
  412178:	cmp	w0, #0x2
  41217c:	stp	x22, x21, [sp, #16]
  412180:	mov	x29, sp
  412184:	b.hi	4121b4 <_obstack_memory_used@@Base+0x364>  // b.pmore
  412188:	mov	w0, w19
  41218c:	bl	4121c8 <_obstack_memory_used@@Base+0x378>
  412190:	mov	w20, w0
  412194:	bl	402e00 <__errno_location@plt>
  412198:	ldr	w22, [x0]
  41219c:	mov	x21, x0
  4121a0:	mov	w0, w19
  4121a4:	bl	402a70 <close@plt>
  4121a8:	str	w22, [x21]
  4121ac:	mov	w0, w20
  4121b0:	b	4121b8 <_obstack_memory_used@@Base+0x368>
  4121b4:	mov	w0, w19
  4121b8:	ldp	x20, x19, [sp, #32]
  4121bc:	ldp	x22, x21, [sp, #16]
  4121c0:	ldp	x29, x30, [sp], #48
  4121c4:	ret
  4121c8:	lsl	w8, w1, #12
  4121cc:	mov	w9, #0x406                 	// #1030
  4121d0:	and	w1, w9, w8, asr #31
  4121d4:	mov	w2, #0x3                   	// #3
  4121d8:	b	411634 <ferror@plt+0xe7a4>
  4121dc:	stp	x29, x30, [sp, #-48]!
  4121e0:	stp	x22, x21, [sp, #16]
  4121e4:	stp	x20, x19, [sp, #32]
  4121e8:	mov	x29, sp
  4121ec:	mov	x20, x1
  4121f0:	bl	402920 <fopen@plt>
  4121f4:	mov	x19, x0
  4121f8:	cbz	x0, 412274 <_obstack_memory_used@@Base+0x424>
  4121fc:	mov	x0, x19
  412200:	bl	4028d0 <fileno@plt>
  412204:	cmp	w0, #0x2
  412208:	b.hi	412274 <_obstack_memory_used@@Base+0x424>  // b.pmore
  41220c:	bl	41249c <_obstack_memory_used@@Base+0x64c>
  412210:	tbnz	w0, #31, 412258 <_obstack_memory_used@@Base+0x408>
  412214:	mov	w21, w0
  412218:	mov	x0, x19
  41221c:	bl	4115a0 <ferror@plt+0xe710>
  412220:	cbnz	w0, 412238 <_obstack_memory_used@@Base+0x3e8>
  412224:	mov	w0, w21
  412228:	mov	x1, x20
  41222c:	bl	4029f0 <fdopen@plt>
  412230:	mov	x19, x0
  412234:	cbnz	x0, 412274 <_obstack_memory_used@@Base+0x424>
  412238:	bl	402e00 <__errno_location@plt>
  41223c:	ldr	w22, [x0]
  412240:	mov	x20, x0
  412244:	mov	w0, w21
  412248:	bl	402a70 <close@plt>
  41224c:	mov	x19, xzr
  412250:	str	w22, [x20]
  412254:	b	412274 <_obstack_memory_used@@Base+0x424>
  412258:	bl	402e00 <__errno_location@plt>
  41225c:	ldr	w21, [x0]
  412260:	mov	x20, x0
  412264:	mov	x0, x19
  412268:	bl	4115a0 <ferror@plt+0xe710>
  41226c:	mov	x19, xzr
  412270:	str	w21, [x20]
  412274:	mov	x0, x19
  412278:	ldp	x20, x19, [sp, #32]
  41227c:	ldp	x22, x21, [sp, #16]
  412280:	ldp	x29, x30, [sp], #48
  412284:	ret
  412288:	stp	x29, x30, [sp, #-16]!
  41228c:	mov	w0, #0xe                   	// #14
  412290:	mov	x29, sp
  412294:	bl	402910 <nl_langinfo@plt>
  412298:	adrp	x8, 415000 <_obstack_memory_used@@Base+0x31b0>
  41229c:	add	x8, x8, #0x3a8
  4122a0:	cmp	x0, #0x0
  4122a4:	csel	x8, x8, x0, eq  // eq = none
  4122a8:	ldrb	w9, [x8]
  4122ac:	adrp	x10, 415000 <_obstack_memory_used@@Base+0x31b0>
  4122b0:	add	x10, x10, #0x873
  4122b4:	cmp	w9, #0x0
  4122b8:	csel	x0, x10, x8, eq  // eq = none
  4122bc:	ldp	x29, x30, [sp], #16
  4122c0:	ret
  4122c4:	sub	sp, sp, #0x70
  4122c8:	stp	x22, x21, [sp, #80]
  4122cc:	stp	x20, x19, [sp, #96]
  4122d0:	mov	x19, x3
  4122d4:	mov	x20, x2
  4122d8:	mov	x21, x1
  4122dc:	cmp	x1, x3
  4122e0:	mov	x22, x0
  4122e4:	stp	x29, x30, [sp, #16]
  4122e8:	stp	x28, x27, [sp, #32]
  4122ec:	stp	x26, x25, [sp, #48]
  4122f0:	stp	x24, x23, [sp, #64]
  4122f4:	add	x29, sp, #0x10
  4122f8:	b.ne	412310 <_obstack_memory_used@@Base+0x4c0>  // b.any
  4122fc:	mov	x0, x22
  412300:	mov	x1, x20
  412304:	mov	x2, x21
  412308:	bl	402a30 <bcmp@plt>
  41230c:	cbz	w0, 4123a8 <_obstack_memory_used@@Base+0x558>
  412310:	ldrb	w8, [x22, x21]
  412314:	add	x28, x21, #0x1
  412318:	add	x26, x19, #0x1
  41231c:	stur	w8, [x29, #-4]
  412320:	ldrb	w8, [x20, x19]
  412324:	strb	wzr, [x22, x21]
  412328:	strb	wzr, [x20, x19]
  41232c:	str	w8, [sp, #8]
  412330:	bl	402e00 <__errno_location@plt>
  412334:	mov	x23, x0
  412338:	mov	x24, x20
  41233c:	mov	x25, x22
  412340:	mov	x0, x25
  412344:	mov	x1, x24
  412348:	str	wzr, [x23]
  41234c:	bl	402d90 <strcoll@plt>
  412350:	cbnz	w0, 412394 <_obstack_memory_used@@Base+0x544>
  412354:	mov	x0, x25
  412358:	bl	4027c0 <strlen@plt>
  41235c:	add	x27, x0, #0x1
  412360:	mov	x0, x24
  412364:	bl	4027c0 <strlen@plt>
  412368:	add	x8, x0, #0x1
  41236c:	sub	x28, x28, x27
  412370:	sub	x26, x26, x8
  412374:	cbz	x28, 41238c <_obstack_memory_used@@Base+0x53c>
  412378:	add	x24, x24, x8
  41237c:	add	x25, x25, x27
  412380:	cbnz	x26, 412340 <_obstack_memory_used@@Base+0x4f0>
  412384:	mov	w0, #0x1                   	// #1
  412388:	b	412394 <_obstack_memory_used@@Base+0x544>
  41238c:	cmp	x26, #0x0
  412390:	csetm	w0, ne  // ne = any
  412394:	ldur	w8, [x29, #-4]
  412398:	ldr	w9, [sp, #8]
  41239c:	strb	w8, [x22, x21]
  4123a0:	strb	w9, [x20, x19]
  4123a4:	b	4123b8 <_obstack_memory_used@@Base+0x568>
  4123a8:	bl	402e00 <__errno_location@plt>
  4123ac:	mov	x8, x0
  4123b0:	mov	w0, wzr
  4123b4:	str	wzr, [x8]
  4123b8:	ldp	x20, x19, [sp, #96]
  4123bc:	ldp	x22, x21, [sp, #80]
  4123c0:	ldp	x24, x23, [sp, #64]
  4123c4:	ldp	x26, x25, [sp, #48]
  4123c8:	ldp	x28, x27, [sp, #32]
  4123cc:	ldp	x29, x30, [sp, #16]
  4123d0:	add	sp, sp, #0x70
  4123d4:	ret
  4123d8:	stp	x29, x30, [sp, #-64]!
  4123dc:	stp	x22, x21, [sp, #32]
  4123e0:	stp	x20, x19, [sp, #48]
  4123e4:	mov	x19, x3
  4123e8:	mov	x20, x2
  4123ec:	mov	x21, x1
  4123f0:	cmp	x1, x3
  4123f4:	mov	x22, x0
  4123f8:	stp	x24, x23, [sp, #16]
  4123fc:	mov	x29, sp
  412400:	b.ne	412418 <_obstack_memory_used@@Base+0x5c8>  // b.any
  412404:	mov	x0, x22
  412408:	mov	x1, x20
  41240c:	mov	x2, x21
  412410:	bl	402a30 <bcmp@plt>
  412414:	cbz	w0, 412478 <_obstack_memory_used@@Base+0x628>
  412418:	bl	402e00 <__errno_location@plt>
  41241c:	mov	x23, x0
  412420:	mov	x0, x22
  412424:	mov	x1, x20
  412428:	str	wzr, [x23]
  41242c:	bl	402d90 <strcoll@plt>
  412430:	cbnz	w0, 412488 <_obstack_memory_used@@Base+0x638>
  412434:	mov	x0, x22
  412438:	bl	4027c0 <strlen@plt>
  41243c:	add	x24, x0, #0x1
  412440:	mov	x0, x20
  412444:	bl	4027c0 <strlen@plt>
  412448:	add	x8, x0, #0x1
  41244c:	sub	x21, x21, x24
  412450:	sub	x19, x19, x8
  412454:	cbz	x21, 41246c <_obstack_memory_used@@Base+0x61c>
  412458:	add	x20, x20, x8
  41245c:	add	x22, x22, x24
  412460:	cbnz	x19, 412420 <_obstack_memory_used@@Base+0x5d0>
  412464:	mov	w0, #0x1                   	// #1
  412468:	b	412488 <_obstack_memory_used@@Base+0x638>
  41246c:	cmp	x19, #0x0
  412470:	csetm	w0, ne  // ne = any
  412474:	b	412488 <_obstack_memory_used@@Base+0x638>
  412478:	bl	402e00 <__errno_location@plt>
  41247c:	mov	x8, x0
  412480:	mov	w0, wzr
  412484:	str	wzr, [x8]
  412488:	ldp	x20, x19, [sp, #48]
  41248c:	ldp	x22, x21, [sp, #32]
  412490:	ldp	x24, x23, [sp, #16]
  412494:	ldp	x29, x30, [sp], #64
  412498:	ret
  41249c:	mov	w2, #0x3                   	// #3
  4124a0:	mov	w1, wzr
  4124a4:	b	411634 <ferror@plt+0xe7a4>
  4124a8:	stp	x29, x30, [sp, #-48]!
  4124ac:	mov	x29, sp
  4124b0:	str	q0, [sp, #16]
  4124b4:	str	q1, [sp, #32]
  4124b8:	ldp	x6, x1, [sp, #16]
  4124bc:	ldp	x7, x0, [sp, #32]
  4124c0:	mrs	x2, fpcr
  4124c4:	ubfx	x4, x1, #48, #15
  4124c8:	lsr	x2, x1, #63
  4124cc:	lsr	x3, x0, #63
  4124d0:	ubfx	x9, x0, #0, #48
  4124d4:	mov	x5, #0x7fff                	// #32767
  4124d8:	mov	x10, x6
  4124dc:	cmp	x4, x5
  4124e0:	and	w2, w2, #0xff
  4124e4:	ubfx	x1, x1, #0, #48
  4124e8:	and	w3, w3, #0xff
  4124ec:	ubfx	x0, x0, #48, #15
  4124f0:	b.eq	412524 <_obstack_memory_used@@Base+0x6d4>  // b.none
  4124f4:	cmp	x0, x5
  4124f8:	b.eq	412510 <_obstack_memory_used@@Base+0x6c0>  // b.none
  4124fc:	cmp	x4, x0
  412500:	mov	w0, #0x1                   	// #1
  412504:	b.eq	41253c <_obstack_memory_used@@Base+0x6ec>  // b.none
  412508:	ldp	x29, x30, [sp], #48
  41250c:	ret
  412510:	orr	x8, x9, x7
  412514:	cbnz	x8, 4125a0 <_obstack_memory_used@@Base+0x750>
  412518:	mov	w0, #0x1                   	// #1
  41251c:	ldp	x29, x30, [sp], #48
  412520:	ret
  412524:	orr	x5, x1, x6
  412528:	cbnz	x5, 412570 <_obstack_memory_used@@Base+0x720>
  41252c:	cmp	x0, x4
  412530:	b.ne	412518 <_obstack_memory_used@@Base+0x6c8>  // b.any
  412534:	orr	x8, x9, x7
  412538:	cbnz	x8, 4125a0 <_obstack_memory_used@@Base+0x750>
  41253c:	cmp	x1, x9
  412540:	mov	w0, #0x1                   	// #1
  412544:	ccmp	x6, x7, #0x0, eq  // eq = none
  412548:	b.ne	412508 <_obstack_memory_used@@Base+0x6b8>  // b.any
  41254c:	cmp	w2, w3
  412550:	mov	w0, #0x0                   	// #0
  412554:	b.eq	412508 <_obstack_memory_used@@Base+0x6b8>  // b.none
  412558:	mov	w0, #0x1                   	// #1
  41255c:	cbnz	x4, 412508 <_obstack_memory_used@@Base+0x6b8>
  412560:	orr	x1, x1, x10
  412564:	cmp	x1, #0x0
  412568:	cset	w0, ne  // ne = any
  41256c:	b	412508 <_obstack_memory_used@@Base+0x6b8>
  412570:	tst	x1, #0x800000000000
  412574:	b.ne	41258c <_obstack_memory_used@@Base+0x73c>  // b.any
  412578:	mov	w0, #0x1                   	// #1
  41257c:	bl	412908 <_obstack_memory_used@@Base+0xab8>
  412580:	mov	w0, #0x1                   	// #1
  412584:	ldp	x29, x30, [sp], #48
  412588:	ret
  41258c:	cmp	x0, x4
  412590:	mov	w0, #0x1                   	// #1
  412594:	b.ne	412508 <_obstack_memory_used@@Base+0x6b8>  // b.any
  412598:	orr	x8, x9, x7
  41259c:	cbz	x8, 412508 <_obstack_memory_used@@Base+0x6b8>
  4125a0:	tst	x9, #0x800000000000
  4125a4:	b.eq	412578 <_obstack_memory_used@@Base+0x728>  // b.none
  4125a8:	b	412518 <_obstack_memory_used@@Base+0x6c8>
  4125ac:	nop
  4125b0:	stp	x29, x30, [sp, #-48]!
  4125b4:	mov	x29, sp
  4125b8:	str	q0, [sp, #16]
  4125bc:	str	q1, [sp, #32]
  4125c0:	ldp	x8, x1, [sp, #16]
  4125c4:	ldp	x9, x0, [sp, #32]
  4125c8:	mrs	x2, fpcr
  4125cc:	ubfx	x4, x1, #48, #15
  4125d0:	ubfx	x10, x1, #0, #48
  4125d4:	lsr	x2, x1, #63
  4125d8:	mov	x7, #0x7fff                	// #32767
  4125dc:	mov	x5, x8
  4125e0:	cmp	x4, x7
  4125e4:	ubfx	x11, x0, #0, #48
  4125e8:	ubfx	x6, x0, #48, #15
  4125ec:	lsr	x1, x0, #63
  4125f0:	mov	x3, x9
  4125f4:	b.eq	412630 <_obstack_memory_used@@Base+0x7e0>  // b.none
  4125f8:	cmp	x6, x7
  4125fc:	b.eq	412640 <_obstack_memory_used@@Base+0x7f0>  // b.none
  412600:	cbnz	x4, 412668 <_obstack_memory_used@@Base+0x818>
  412604:	orr	x5, x10, x8
  412608:	cmp	x5, #0x0
  41260c:	cset	w0, eq  // eq = none
  412610:	cbnz	x6, 41261c <_obstack_memory_used@@Base+0x7cc>
  412614:	orr	x3, x11, x9
  412618:	cbz	x3, 412688 <_obstack_memory_used@@Base+0x838>
  41261c:	cbz	w0, 41264c <_obstack_memory_used@@Base+0x7fc>
  412620:	cmp	x1, #0x0
  412624:	csinv	w0, w0, wzr, ne  // ne = any
  412628:	ldp	x29, x30, [sp], #48
  41262c:	ret
  412630:	orr	x0, x10, x8
  412634:	cbnz	x0, 412694 <_obstack_memory_used@@Base+0x844>
  412638:	cmp	x6, x4
  41263c:	b.ne	412668 <_obstack_memory_used@@Base+0x818>  // b.any
  412640:	orr	x3, x11, x3
  412644:	cbnz	x3, 412694 <_obstack_memory_used@@Base+0x844>
  412648:	cbz	x4, 412678 <_obstack_memory_used@@Base+0x828>
  41264c:	cmp	x2, x1
  412650:	b.eq	4126a8 <_obstack_memory_used@@Base+0x858>  // b.none
  412654:	cmp	x2, #0x0
  412658:	mov	w0, #0xffffffff            	// #-1
  41265c:	cneg	w0, w0, eq  // eq = none
  412660:	ldp	x29, x30, [sp], #48
  412664:	ret
  412668:	cbnz	x6, 41264c <_obstack_memory_used@@Base+0x7fc>
  41266c:	orr	x3, x11, x3
  412670:	cbnz	x3, 41264c <_obstack_memory_used@@Base+0x7fc>
  412674:	b	412654 <_obstack_memory_used@@Base+0x804>
  412678:	orr	x5, x10, x5
  41267c:	cmp	x5, #0x0
  412680:	cset	w0, eq  // eq = none
  412684:	b	41261c <_obstack_memory_used@@Base+0x7cc>
  412688:	mov	w0, #0x0                   	// #0
  41268c:	cbz	x5, 412628 <_obstack_memory_used@@Base+0x7d8>
  412690:	b	412654 <_obstack_memory_used@@Base+0x804>
  412694:	mov	w0, #0x1                   	// #1
  412698:	bl	412908 <_obstack_memory_used@@Base+0xab8>
  41269c:	mov	w0, #0xfffffffe            	// #-2
  4126a0:	ldp	x29, x30, [sp], #48
  4126a4:	ret
  4126a8:	cmp	x4, x6
  4126ac:	b.gt	412654 <_obstack_memory_used@@Base+0x804>
  4126b0:	b.lt	4126e8 <_obstack_memory_used@@Base+0x898>  // b.tstop
  4126b4:	cmp	x10, x11
  4126b8:	b.hi	412654 <_obstack_memory_used@@Base+0x804>  // b.pmore
  4126bc:	cset	w0, eq  // eq = none
  4126c0:	cmp	w0, #0x0
  4126c4:	ccmp	x8, x9, #0x0, ne  // ne = any
  4126c8:	b.hi	412654 <_obstack_memory_used@@Base+0x804>  // b.pmore
  4126cc:	cmp	x10, x11
  4126d0:	b.cc	4126e8 <_obstack_memory_used@@Base+0x898>  // b.lo, b.ul, b.last
  4126d4:	cmp	w0, #0x0
  4126d8:	mov	w0, #0x0                   	// #0
  4126dc:	ccmp	x8, x9, #0x2, ne  // ne = any
  4126e0:	b.cs	412628 <_obstack_memory_used@@Base+0x7d8>  // b.hs, b.nlast
  4126e4:	nop
  4126e8:	cmp	x2, #0x0
  4126ec:	mov	w0, #0x1                   	// #1
  4126f0:	cneg	w0, w0, eq  // eq = none
  4126f4:	b	412628 <_obstack_memory_used@@Base+0x7d8>
  4126f8:	stp	x29, x30, [sp, #-48]!
  4126fc:	mov	x29, sp
  412700:	str	q0, [sp, #16]
  412704:	str	q1, [sp, #32]
  412708:	ldp	x8, x1, [sp, #16]
  41270c:	ldp	x9, x0, [sp, #32]
  412710:	mrs	x2, fpcr
  412714:	ubfx	x4, x1, #48, #15
  412718:	ubfx	x10, x1, #0, #48
  41271c:	lsr	x2, x1, #63
  412720:	mov	x5, #0x7fff                	// #32767
  412724:	mov	x6, x8
  412728:	cmp	x4, x5
  41272c:	ubfx	x11, x0, #0, #48
  412730:	ubfx	x7, x0, #48, #15
  412734:	lsr	x1, x0, #63
  412738:	mov	x3, x9
  41273c:	b.eq	412774 <_obstack_memory_used@@Base+0x924>  // b.none
  412740:	cmp	x7, x5
  412744:	b.eq	412784 <_obstack_memory_used@@Base+0x934>  // b.none
  412748:	cbnz	x4, 4127b0 <_obstack_memory_used@@Base+0x960>
  41274c:	orr	x6, x10, x8
  412750:	cmp	x6, #0x0
  412754:	cset	w0, eq  // eq = none
  412758:	cbnz	x7, 41279c <_obstack_memory_used@@Base+0x94c>
  41275c:	orr	x3, x11, x9
  412760:	cbnz	x3, 41279c <_obstack_memory_used@@Base+0x94c>
  412764:	mov	w0, #0x0                   	// #0
  412768:	cbnz	x6, 4127c4 <_obstack_memory_used@@Base+0x974>
  41276c:	ldp	x29, x30, [sp], #48
  412770:	ret
  412774:	orr	x0, x10, x8
  412778:	cbnz	x0, 4127d8 <_obstack_memory_used@@Base+0x988>
  41277c:	cmp	x7, x4
  412780:	b.ne	4127b0 <_obstack_memory_used@@Base+0x960>  // b.any
  412784:	orr	x3, x11, x3
  412788:	cbnz	x3, 4127d8 <_obstack_memory_used@@Base+0x988>
  41278c:	cbnz	x4, 4127bc <_obstack_memory_used@@Base+0x96c>
  412790:	orr	x6, x10, x6
  412794:	cmp	x6, #0x0
  412798:	cset	w0, eq  // eq = none
  41279c:	cbz	w0, 4127bc <_obstack_memory_used@@Base+0x96c>
  4127a0:	cmp	x1, #0x0
  4127a4:	csinv	w0, w0, wzr, ne  // ne = any
  4127a8:	ldp	x29, x30, [sp], #48
  4127ac:	ret
  4127b0:	cbnz	x7, 4127bc <_obstack_memory_used@@Base+0x96c>
  4127b4:	orr	x3, x11, x3
  4127b8:	cbz	x3, 4127c4 <_obstack_memory_used@@Base+0x974>
  4127bc:	cmp	x2, x1
  4127c0:	b.eq	4127ec <_obstack_memory_used@@Base+0x99c>  // b.none
  4127c4:	cmp	x2, #0x0
  4127c8:	mov	w0, #0xffffffff            	// #-1
  4127cc:	cneg	w0, w0, eq  // eq = none
  4127d0:	ldp	x29, x30, [sp], #48
  4127d4:	ret
  4127d8:	mov	w0, #0x1                   	// #1
  4127dc:	bl	412908 <_obstack_memory_used@@Base+0xab8>
  4127e0:	mov	w0, #0x2                   	// #2
  4127e4:	ldp	x29, x30, [sp], #48
  4127e8:	ret
  4127ec:	cmp	x4, x7
  4127f0:	b.gt	4127c4 <_obstack_memory_used@@Base+0x974>
  4127f4:	b.lt	412828 <_obstack_memory_used@@Base+0x9d8>  // b.tstop
  4127f8:	cmp	x10, x11
  4127fc:	b.hi	4127c4 <_obstack_memory_used@@Base+0x974>  // b.pmore
  412800:	cset	w0, eq  // eq = none
  412804:	cmp	w0, #0x0
  412808:	ccmp	x8, x9, #0x0, ne  // ne = any
  41280c:	b.hi	4127c4 <_obstack_memory_used@@Base+0x974>  // b.pmore
  412810:	cmp	x10, x11
  412814:	b.cc	412828 <_obstack_memory_used@@Base+0x9d8>  // b.lo, b.ul, b.last
  412818:	cmp	w0, #0x0
  41281c:	mov	w0, #0x0                   	// #0
  412820:	ccmp	x8, x9, #0x2, ne  // ne = any
  412824:	b.cs	41276c <_obstack_memory_used@@Base+0x91c>  // b.hs, b.nlast
  412828:	cmp	x2, #0x0
  41282c:	mov	w0, #0x1                   	// #1
  412830:	cneg	w0, w0, eq  // eq = none
  412834:	b	41276c <_obstack_memory_used@@Base+0x91c>
  412838:	stp	x29, x30, [sp, #-48]!
  41283c:	mov	x29, sp
  412840:	str	q0, [sp, #16]
  412844:	str	q1, [sp, #32]
  412848:	ldp	x3, x1, [sp, #16]
  41284c:	ldp	x2, x0, [sp, #32]
  412850:	mrs	x4, fpcr
  412854:	ubfx	x5, x1, #48, #15
  412858:	mov	x4, x3
  41285c:	mov	x3, x2
  412860:	ubfx	x2, x1, #0, #48
  412864:	mov	x1, #0x7fff                	// #32767
  412868:	ubfx	x7, x0, #0, #48
  41286c:	cmp	x5, x1
  412870:	ubfx	x1, x0, #48, #15
  412874:	b.eq	412890 <_obstack_memory_used@@Base+0xa40>  // b.none
  412878:	mov	x6, #0x7fff                	// #32767
  41287c:	mov	w0, #0x0                   	// #0
  412880:	cmp	x1, x6
  412884:	b.eq	4128b4 <_obstack_memory_used@@Base+0xa64>  // b.none
  412888:	ldp	x29, x30, [sp], #48
  41288c:	ret
  412890:	orr	x0, x4, x2
  412894:	cbz	x0, 412878 <_obstack_memory_used@@Base+0xa28>
  412898:	tst	x2, #0x800000000000
  41289c:	b.ne	4128d4 <_obstack_memory_used@@Base+0xa84>  // b.any
  4128a0:	mov	w0, #0x1                   	// #1
  4128a4:	bl	412908 <_obstack_memory_used@@Base+0xab8>
  4128a8:	mov	w0, #0x1                   	// #1
  4128ac:	ldp	x29, x30, [sp], #48
  4128b0:	ret
  4128b4:	orr	x3, x7, x3
  4128b8:	cbz	x3, 412888 <_obstack_memory_used@@Base+0xa38>
  4128bc:	cmp	x5, x1
  4128c0:	b.eq	4128e8 <_obstack_memory_used@@Base+0xa98>  // b.none
  4128c4:	tst	x7, #0x800000000000
  4128c8:	mov	w0, #0x1                   	// #1
  4128cc:	b.ne	412888 <_obstack_memory_used@@Base+0xa38>  // b.any
  4128d0:	b	4128a0 <_obstack_memory_used@@Base+0xa50>
  4128d4:	cmp	x1, x5
  4128d8:	mov	w0, #0x1                   	// #1
  4128dc:	b.ne	412888 <_obstack_memory_used@@Base+0xa38>  // b.any
  4128e0:	orr	x3, x7, x3
  4128e4:	b	4128f8 <_obstack_memory_used@@Base+0xaa8>
  4128e8:	orr	x4, x4, x2
  4128ec:	cbz	x4, 4128c4 <_obstack_memory_used@@Base+0xa74>
  4128f0:	tst	x2, #0x800000000000
  4128f4:	b.eq	4128a0 <_obstack_memory_used@@Base+0xa50>  // b.none
  4128f8:	mov	w0, #0x1                   	// #1
  4128fc:	cbz	x3, 412888 <_obstack_memory_used@@Base+0xa38>
  412900:	b	4128c4 <_obstack_memory_used@@Base+0xa74>
  412904:	nop
  412908:	tbz	w0, #0, 412918 <_obstack_memory_used@@Base+0xac8>
  41290c:	movi	v1.2s, #0x0
  412910:	fdiv	s0, s1, s1
  412914:	mrs	x1, fpsr
  412918:	tbz	w0, #1, 41292c <_obstack_memory_used@@Base+0xadc>
  41291c:	fmov	s1, #1.000000000000000000e+00
  412920:	movi	v2.2s, #0x0
  412924:	fdiv	s0, s1, s2
  412928:	mrs	x1, fpsr
  41292c:	tbz	w0, #2, 41294c <_obstack_memory_used@@Base+0xafc>
  412930:	mov	w2, #0xc5ae                	// #50606
  412934:	mov	w1, #0x7f7fffff            	// #2139095039
  412938:	movk	w2, #0x749d, lsl #16
  41293c:	fmov	s1, w1
  412940:	fmov	s2, w2
  412944:	fadd	s0, s1, s2
  412948:	mrs	x1, fpsr
  41294c:	tbz	w0, #3, 41295c <_obstack_memory_used@@Base+0xb0c>
  412950:	movi	v1.2s, #0x80, lsl #16
  412954:	fmul	s0, s1, s1
  412958:	mrs	x1, fpsr
  41295c:	tbz	w0, #4, 412974 <_obstack_memory_used@@Base+0xb24>
  412960:	mov	w0, #0x7f7fffff            	// #2139095039
  412964:	fmov	s2, #1.000000000000000000e+00
  412968:	fmov	s1, w0
  41296c:	fsub	s0, s1, s2
  412970:	mrs	x0, fpsr
  412974:	ret
  412978:	stp	x29, x30, [sp, #-64]!
  41297c:	mov	x29, sp
  412980:	stp	x19, x20, [sp, #16]
  412984:	adrp	x20, 425000 <_obstack_memory_used@@Base+0x131b0>
  412988:	add	x20, x20, #0xde0
  41298c:	stp	x21, x22, [sp, #32]
  412990:	adrp	x21, 425000 <_obstack_memory_used@@Base+0x131b0>
  412994:	add	x21, x21, #0xdd8
  412998:	sub	x20, x20, x21
  41299c:	mov	w22, w0
  4129a0:	stp	x23, x24, [sp, #48]
  4129a4:	mov	x23, x1
  4129a8:	mov	x24, x2
  4129ac:	bl	402710 <mbrtowc@plt-0x40>
  4129b0:	cmp	xzr, x20, asr #3
  4129b4:	b.eq	4129e0 <_obstack_memory_used@@Base+0xb90>  // b.none
  4129b8:	asr	x20, x20, #3
  4129bc:	mov	x19, #0x0                   	// #0
  4129c0:	ldr	x3, [x21, x19, lsl #3]
  4129c4:	mov	x2, x24
  4129c8:	add	x19, x19, #0x1
  4129cc:	mov	x1, x23
  4129d0:	mov	w0, w22
  4129d4:	blr	x3
  4129d8:	cmp	x20, x19
  4129dc:	b.ne	4129c0 <_obstack_memory_used@@Base+0xb70>  // b.any
  4129e0:	ldp	x19, x20, [sp, #16]
  4129e4:	ldp	x21, x22, [sp, #32]
  4129e8:	ldp	x23, x24, [sp, #48]
  4129ec:	ldp	x29, x30, [sp], #64
  4129f0:	ret
  4129f4:	nop
  4129f8:	ret
  4129fc:	nop
  412a00:	adrp	x2, 426000 <_obstack_memory_used@@Base+0x141b0>
  412a04:	mov	x1, #0x0                   	// #0
  412a08:	ldr	x2, [x2, #944]
  412a0c:	b	402830 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000412a10 <.fini>:
  412a10:	stp	x29, x30, [sp, #-16]!
  412a14:	mov	x29, sp
  412a18:	ldp	x29, x30, [sp], #16
  412a1c:	ret
