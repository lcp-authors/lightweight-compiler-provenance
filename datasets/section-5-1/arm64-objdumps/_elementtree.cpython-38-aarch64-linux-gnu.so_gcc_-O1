
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_elementtree.cpython-38-aarch64-linux-gnu.so_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000003be8 <.init>:
    3be8:	stp	x29, x30, [sp, #-16]!
    3bec:	mov	x29, sp
    3bf0:	bl	4250 <PySequence_Fast@plt+0x10>
    3bf4:	ldp	x29, x30, [sp], #16
    3bf8:	ret

Disassembly of section .plt:

0000000000003c00 <memcpy@plt-0x20>:
    3c00:	stp	x16, x30, [sp, #-16]!
    3c04:	adrp	x16, 1f000 <PyInit__elementtree@@Base+0x126c8>
    3c08:	ldr	x17, [x16, #4088]
    3c0c:	add	x16, x16, #0xff8
    3c10:	br	x17
    3c14:	nop
    3c18:	nop
    3c1c:	nop

0000000000003c20 <memcpy@plt>:
    3c20:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3c24:	ldr	x17, [x16]
    3c28:	add	x16, x16, #0x0
    3c2c:	br	x17

0000000000003c30 <PyUnicode_FromFormat@plt>:
    3c30:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3c34:	ldr	x17, [x16, #8]
    3c38:	add	x16, x16, #0x8
    3c3c:	br	x17

0000000000003c40 <memmove@plt>:
    3c40:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3c44:	ldr	x17, [x16, #16]
    3c48:	add	x16, x16, #0x10
    3c4c:	br	x17

0000000000003c50 <PyList_New@plt>:
    3c50:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3c54:	ldr	x17, [x16, #24]
    3c58:	add	x16, x16, #0x18
    3c5c:	br	x17

0000000000003c60 <_PyUnicode_Ready@plt>:
    3c60:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3c64:	ldr	x17, [x16, #32]
    3c68:	add	x16, x16, #0x20
    3c6c:	br	x17

0000000000003c70 <strlen@plt>:
    3c70:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3c74:	ldr	x17, [x16, #40]
    3c78:	add	x16, x16, #0x28
    3c7c:	br	x17

0000000000003c80 <PyDict_Items@plt>:
    3c80:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3c84:	ldr	x17, [x16, #48]
    3c88:	add	x16, x16, #0x30
    3c8c:	br	x17

0000000000003c90 <_PyObject_LookupAttrId@plt>:
    3c90:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3c94:	ldr	x17, [x16, #56]
    3c98:	add	x16, x16, #0x38
    3c9c:	br	x17

0000000000003ca0 <_PyBytes_Resize@plt>:
    3ca0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3ca4:	ldr	x17, [x16, #64]
    3ca8:	add	x16, x16, #0x40
    3cac:	br	x17

0000000000003cb0 <PyObject_ClearWeakRefs@plt>:
    3cb0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3cb4:	ldr	x17, [x16, #72]
    3cb8:	add	x16, x16, #0x48
    3cbc:	br	x17

0000000000003cc0 <PyNumber_AsSsize_t@plt>:
    3cc0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3cc4:	ldr	x17, [x16, #80]
    3cc8:	add	x16, x16, #0x50
    3ccc:	br	x17

0000000000003cd0 <PyMem_Free@plt>:
    3cd0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3cd4:	ldr	x17, [x16, #88]
    3cd8:	add	x16, x16, #0x58
    3cdc:	br	x17

0000000000003ce0 <PyBuffer_Release@plt>:
    3ce0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3ce4:	ldr	x17, [x16, #96]
    3ce8:	add	x16, x16, #0x60
    3cec:	br	x17

0000000000003cf0 <PyNumber_Add@plt>:
    3cf0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3cf4:	ldr	x17, [x16, #104]
    3cf8:	add	x16, x16, #0x68
    3cfc:	br	x17

0000000000003d00 <PyObject_GetAttrString@plt>:
    3d00:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3d04:	ldr	x17, [x16, #112]
    3d08:	add	x16, x16, #0x70
    3d0c:	br	x17

0000000000003d10 <__cxa_finalize@plt>:
    3d10:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3d14:	ldr	x17, [x16, #120]
    3d18:	add	x16, x16, #0x78
    3d1c:	br	x17

0000000000003d20 <PyUnicode_Join@plt>:
    3d20:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3d24:	ldr	x17, [x16, #128]
    3d28:	add	x16, x16, #0x80
    3d2c:	br	x17

0000000000003d30 <PyList_SetSlice@plt>:
    3d30:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3d34:	ldr	x17, [x16, #136]
    3d38:	add	x16, x16, #0x88
    3d3c:	br	x17

0000000000003d40 <PyBytes_FromStringAndSize@plt>:
    3d40:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3d44:	ldr	x17, [x16, #144]
    3d48:	add	x16, x16, #0x90
    3d4c:	br	x17

0000000000003d50 <PyObject_SetAttrString@plt>:
    3d50:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3d54:	ldr	x17, [x16, #152]
    3d58:	add	x16, x16, #0x98
    3d5c:	br	x17

0000000000003d60 <PyErr_WarnEx@plt>:
    3d60:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3d64:	ldr	x17, [x16, #160]
    3d68:	add	x16, x16, #0xa0
    3d6c:	br	x17

0000000000003d70 <_Py_Dealloc@plt>:
    3d70:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3d74:	ldr	x17, [x16, #168]
    3d78:	add	x16, x16, #0xa8
    3d7c:	br	x17

0000000000003d80 <PyErr_NoMemory@plt>:
    3d80:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3d84:	ldr	x17, [x16, #176]
    3d88:	add	x16, x16, #0xb0
    3d8c:	br	x17

0000000000003d90 <PyErr_SetObject@plt>:
    3d90:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3d94:	ldr	x17, [x16, #184]
    3d98:	add	x16, x16, #0xb8
    3d9c:	br	x17

0000000000003da0 <PyObject_GC_Del@plt>:
    3da0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3da4:	ldr	x17, [x16, #192]
    3da8:	add	x16, x16, #0xc0
    3dac:	br	x17

0000000000003db0 <_PyObject_CallFunction_SizeT@plt>:
    3db0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3db4:	ldr	x17, [x16, #200]
    3db8:	add	x16, x16, #0xc8
    3dbc:	br	x17

0000000000003dc0 <PyObject_GC_Track@plt>:
    3dc0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3dc4:	ldr	x17, [x16, #208]
    3dc8:	add	x16, x16, #0xd0
    3dcc:	br	x17

0000000000003dd0 <_PyArg_UnpackKeywords@plt>:
    3dd0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3dd4:	ldr	x17, [x16, #216]
    3dd8:	add	x16, x16, #0xd8
    3ddc:	br	x17

0000000000003de0 <PyErr_SetString@plt>:
    3de0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3de4:	ldr	x17, [x16, #224]
    3de8:	add	x16, x16, #0xe0
    3dec:	br	x17

0000000000003df0 <_PyObject_GC_New@plt>:
    3df0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3df4:	ldr	x17, [x16, #232]
    3df8:	add	x16, x16, #0xe8
    3dfc:	br	x17

0000000000003e00 <PyObject_Malloc@plt>:
    3e00:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3e04:	ldr	x17, [x16, #240]
    3e08:	add	x16, x16, #0xf0
    3e0c:	br	x17

0000000000003e10 <PyModule_GetState@plt>:
    3e10:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3e14:	ldr	x17, [x16, #248]
    3e18:	add	x16, x16, #0xf8
    3e1c:	br	x17

0000000000003e20 <PyUnicode_AsEncodedString@plt>:
    3e20:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3e24:	ldr	x17, [x16, #256]
    3e28:	add	x16, x16, #0x100
    3e2c:	br	x17

0000000000003e30 <PyMem_Realloc@plt>:
    3e30:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3e34:	ldr	x17, [x16, #264]
    3e38:	add	x16, x16, #0x108
    3e3c:	br	x17

0000000000003e40 <PyErr_SetNone@plt>:
    3e40:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3e44:	ldr	x17, [x16, #272]
    3e48:	add	x16, x16, #0x110
    3e4c:	br	x17

0000000000003e50 <PyErr_ExceptionMatches@plt>:
    3e50:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3e54:	ldr	x17, [x16, #280]
    3e58:	add	x16, x16, #0x118
    3e5c:	br	x17

0000000000003e60 <PyObject_Free@plt>:
    3e60:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3e64:	ldr	x17, [x16, #288]
    3e68:	add	x16, x16, #0x120
    3e6c:	br	x17

0000000000003e70 <PyLong_FromSsize_t@plt>:
    3e70:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3e74:	ldr	x17, [x16, #296]
    3e78:	add	x16, x16, #0x128
    3e7c:	br	x17

0000000000003e80 <PyCapsule_Import@plt>:
    3e80:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3e84:	ldr	x17, [x16, #304]
    3e88:	add	x16, x16, #0x130
    3e8c:	br	x17

0000000000003e90 <PyType_Ready@plt>:
    3e90:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3e94:	ldr	x17, [x16, #312]
    3e98:	add	x16, x16, #0x138
    3e9c:	br	x17

0000000000003ea0 <PyLong_FromLong@plt>:
    3ea0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3ea4:	ldr	x17, [x16, #320]
    3ea8:	add	x16, x16, #0x140
    3eac:	br	x17

0000000000003eb0 <PyLong_AsSsize_t@plt>:
    3eb0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3eb4:	ldr	x17, [x16, #328]
    3eb8:	add	x16, x16, #0x148
    3ebc:	br	x17

0000000000003ec0 <PyObject_RichCompareBool@plt>:
    3ec0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3ec4:	ldr	x17, [x16, #336]
    3ec8:	add	x16, x16, #0x150
    3ecc:	br	x17

0000000000003ed0 <_PyArg_BadArgument@plt>:
    3ed0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3ed4:	ldr	x17, [x16, #344]
    3ed8:	add	x16, x16, #0x158
    3edc:	br	x17

0000000000003ee0 <PyErr_NewException@plt>:
    3ee0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3ee4:	ldr	x17, [x16, #352]
    3ee8:	add	x16, x16, #0x160
    3eec:	br	x17

0000000000003ef0 <PyErr_Clear@plt>:
    3ef0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3ef4:	ldr	x17, [x16, #360]
    3ef8:	add	x16, x16, #0x168
    3efc:	br	x17

0000000000003f00 <PyList_Append@plt>:
    3f00:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3f04:	ldr	x17, [x16, #368]
    3f08:	add	x16, x16, #0x170
    3f0c:	br	x17

0000000000003f10 <PySlice_AdjustIndices@plt>:
    3f10:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3f14:	ldr	x17, [x16, #376]
    3f18:	add	x16, x16, #0x178
    3f1c:	br	x17

0000000000003f20 <PyDict_Update@plt>:
    3f20:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3f24:	ldr	x17, [x16, #384]
    3f28:	add	x16, x16, #0x180
    3f2c:	br	x17

0000000000003f30 <__gmon_start__@plt>:
    3f30:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3f34:	ldr	x17, [x16, #392]
    3f38:	add	x16, x16, #0x188
    3f3c:	br	x17

0000000000003f40 <PyTuple_New@plt>:
    3f40:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3f44:	ldr	x17, [x16, #400]
    3f48:	add	x16, x16, #0x190
    3f4c:	br	x17

0000000000003f50 <PyThreadState_Get@plt>:
    3f50:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3f54:	ldr	x17, [x16, #408]
    3f58:	add	x16, x16, #0x198
    3f5c:	br	x17

0000000000003f60 <_PyArg_CheckPositional@plt>:
    3f60:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3f64:	ldr	x17, [x16, #416]
    3f68:	add	x16, x16, #0x1a0
    3f6c:	br	x17

0000000000003f70 <PyDict_DelItem@plt>:
    3f70:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3f74:	ldr	x17, [x16, #424]
    3f78:	add	x16, x16, #0x1a8
    3f7c:	br	x17

0000000000003f80 <PyErr_Occurred@plt>:
    3f80:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3f84:	ldr	x17, [x16, #432]
    3f88:	add	x16, x16, #0x1b0
    3f8c:	br	x17

0000000000003f90 <PyModule_Create2@plt>:
    3f90:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3f94:	ldr	x17, [x16, #440]
    3f98:	add	x16, x16, #0x1b8
    3f9c:	br	x17

0000000000003fa0 <PyImport_ImportModule@plt>:
    3fa0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3fa4:	ldr	x17, [x16, #448]
    3fa8:	add	x16, x16, #0x1c0
    3fac:	br	x17

0000000000003fb0 <PyList_SetItem@plt>:
    3fb0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3fb4:	ldr	x17, [x16, #456]
    3fb8:	add	x16, x16, #0x1c8
    3fbc:	br	x17

0000000000003fc0 <PyState_FindModule@plt>:
    3fc0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3fc4:	ldr	x17, [x16, #464]
    3fc8:	add	x16, x16, #0x1d0
    3fcc:	br	x17

0000000000003fd0 <PyObject_CallFunctionObjArgs@plt>:
    3fd0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3fd4:	ldr	x17, [x16, #472]
    3fd8:	add	x16, x16, #0x1d8
    3fdc:	br	x17

0000000000003fe0 <Py_ReprEnter@plt>:
    3fe0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3fe4:	ldr	x17, [x16, #480]
    3fe8:	add	x16, x16, #0x1e0
    3fec:	br	x17

0000000000003ff0 <strcmp@plt>:
    3ff0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3ff4:	ldr	x17, [x16, #488]
    3ff8:	add	x16, x16, #0x1e8
    3ffc:	br	x17

0000000000004000 <_PyObject_SetAttrId@plt>:
    4000:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4004:	ldr	x17, [x16, #496]
    4008:	add	x16, x16, #0x1f0
    400c:	br	x17

0000000000004010 <_PyArg_ParseTuple_SizeT@plt>:
    4010:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4014:	ldr	x17, [x16, #504]
    4018:	add	x16, x16, #0x1f8
    401c:	br	x17

0000000000004020 <_Py_CheckFunctionResult@plt>:
    4020:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4024:	ldr	x17, [x16, #512]
    4028:	add	x16, x16, #0x200
    402c:	br	x17

0000000000004030 <PyUnicode_DecodeUTF8@plt>:
    4030:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4034:	ldr	x17, [x16, #520]
    4038:	add	x16, x16, #0x208
    403c:	br	x17

0000000000004040 <_PyTrash_thread_deposit_object@plt>:
    4040:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4044:	ldr	x17, [x16, #528]
    4048:	add	x16, x16, #0x210
    404c:	br	x17

0000000000004050 <PyObject_IsTrue@plt>:
    4050:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4054:	ldr	x17, [x16, #536]
    4058:	add	x16, x16, #0x218
    405c:	br	x17

0000000000004060 <PyObject_Realloc@plt>:
    4060:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4064:	ldr	x17, [x16, #544]
    4068:	add	x16, x16, #0x220
    406c:	br	x17

0000000000004070 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
    4070:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4074:	ldr	x17, [x16, #552]
    4078:	add	x16, x16, #0x228
    407c:	br	x17

0000000000004080 <PyDict_New@plt>:
    4080:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4084:	ldr	x17, [x16, #560]
    4088:	add	x16, x16, #0x230
    408c:	br	x17

0000000000004090 <PyCallable_Check@plt>:
    4090:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4094:	ldr	x17, [x16, #568]
    4098:	add	x16, x16, #0x238
    409c:	br	x17

00000000000040a0 <PyObject_GetBuffer@plt>:
    40a0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    40a4:	ldr	x17, [x16, #576]
    40a8:	add	x16, x16, #0x240
    40ac:	br	x17

00000000000040b0 <PyDict_Next@plt>:
    40b0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    40b4:	ldr	x17, [x16, #584]
    40b8:	add	x16, x16, #0x248
    40bc:	br	x17

00000000000040c0 <PyUnicode_AsUTF8@plt>:
    40c0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    40c4:	ldr	x17, [x16, #592]
    40c8:	add	x16, x16, #0x250
    40cc:	br	x17

00000000000040d0 <strncat@plt>:
    40d0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    40d4:	ldr	x17, [x16, #600]
    40d8:	add	x16, x16, #0x258
    40dc:	br	x17

00000000000040e0 <PyDict_Keys@plt>:
    40e0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    40e4:	ldr	x17, [x16, #608]
    40e8:	add	x16, x16, #0x260
    40ec:	br	x17

00000000000040f0 <_PyObject_GetAttrId@plt>:
    40f0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    40f4:	ldr	x17, [x16, #616]
    40f8:	add	x16, x16, #0x268
    40fc:	br	x17

0000000000004100 <PyUnicode_FromString@plt>:
    4100:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4104:	ldr	x17, [x16, #624]
    4108:	add	x16, x16, #0x270
    410c:	br	x17

0000000000004110 <_PyObject_CallMethodIdObjArgs@plt>:
    4110:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4114:	ldr	x17, [x16, #632]
    4118:	add	x16, x16, #0x278
    411c:	br	x17

0000000000004120 <PyModule_AddObject@plt>:
    4120:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4124:	ldr	x17, [x16, #640]
    4128:	add	x16, x16, #0x280
    412c:	br	x17

0000000000004130 <PySlice_Unpack@plt>:
    4130:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4134:	ldr	x17, [x16, #648]
    4138:	add	x16, x16, #0x288
    413c:	br	x17

0000000000004140 <PyDict_SetItem@plt>:
    4140:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4144:	ldr	x17, [x16, #656]
    4148:	add	x16, x16, #0x290
    414c:	br	x17

0000000000004150 <PyDict_Copy@plt>:
    4150:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4154:	ldr	x17, [x16, #664]
    4158:	add	x16, x16, #0x298
    415c:	br	x17

0000000000004160 <PyType_IsSubtype@plt>:
    4160:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4164:	ldr	x17, [x16, #672]
    4168:	add	x16, x16, #0x2a0
    416c:	br	x17

0000000000004170 <PyUnicode_AsUTF8AndSize@plt>:
    4170:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4174:	ldr	x17, [x16, #680]
    4178:	add	x16, x16, #0x2a8
    417c:	br	x17

0000000000004180 <PyErr_Format@plt>:
    4180:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4184:	ldr	x17, [x16, #688]
    4188:	add	x16, x16, #0x2b0
    418c:	br	x17

0000000000004190 <_Py_BuildValue_SizeT@plt>:
    4190:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4194:	ldr	x17, [x16, #696]
    4198:	add	x16, x16, #0x2b8
    419c:	br	x17

00000000000041a0 <Py_ReprLeave@plt>:
    41a0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    41a4:	ldr	x17, [x16, #704]
    41a8:	add	x16, x16, #0x2c0
    41ac:	br	x17

00000000000041b0 <PyUnicode_FromStringAndSize@plt>:
    41b0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    41b4:	ldr	x17, [x16, #712]
    41b8:	add	x16, x16, #0x2c8
    41bc:	br	x17

00000000000041c0 <_PyTrash_thread_destroy_chain@plt>:
    41c0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    41c4:	ldr	x17, [x16, #720]
    41c8:	add	x16, x16, #0x2d0
    41cc:	br	x17

00000000000041d0 <_PyObject_MakeTpCall@plt>:
    41d0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    41d4:	ldr	x17, [x16, #728]
    41d8:	add	x16, x16, #0x2d8
    41dc:	br	x17

00000000000041e0 <PyNumber_Index@plt>:
    41e0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    41e4:	ldr	x17, [x16, #736]
    41e8:	add	x16, x16, #0x2e0
    41ec:	br	x17

00000000000041f0 <PyMem_Malloc@plt>:
    41f0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    41f4:	ldr	x17, [x16, #744]
    41f8:	add	x16, x16, #0x2e8
    41fc:	br	x17

0000000000004200 <PyUnicode_New@plt>:
    4200:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4204:	ldr	x17, [x16, #752]
    4208:	add	x16, x16, #0x2f0
    420c:	br	x17

0000000000004210 <PyTuple_Pack@plt>:
    4210:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4214:	ldr	x17, [x16, #760]
    4218:	add	x16, x16, #0x2f8
    421c:	br	x17

0000000000004220 <PyObject_GC_UnTrack@plt>:
    4220:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4224:	ldr	x17, [x16, #768]
    4228:	add	x16, x16, #0x300
    422c:	br	x17

0000000000004230 <PyDict_GetItemWithError@plt>:
    4230:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4234:	ldr	x17, [x16, #776]
    4238:	add	x16, x16, #0x308
    423c:	br	x17

0000000000004240 <PySequence_Fast@plt>:
    4240:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4244:	ldr	x17, [x16, #784]
    4248:	add	x16, x16, #0x310
    424c:	br	x17

Disassembly of section .text:

0000000000004250 <PyInit__elementtree@@Base-0x86e8>:
    4250:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    4254:	ldr	x0, [x0, #3960]
    4258:	cbz	x0, 4260 <PySequence_Fast@plt+0x20>
    425c:	b	3f30 <__gmon_start__@plt>
    4260:	ret
    4264:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x146c8>
    4268:	add	x0, x0, #0x428
    426c:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x146c8>
    4270:	add	x1, x1, #0x428
    4274:	cmp	x0, x1
    4278:	b.eq	42a4 <PySequence_Fast@plt+0x64>  // b.none
    427c:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    4280:	ldr	x1, [x1, #3888]
    4284:	cbz	x1, 42a4 <PySequence_Fast@plt+0x64>
    4288:	stp	x29, x30, [sp, #-16]!
    428c:	mov	x29, sp
    4290:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x146c8>
    4294:	add	x0, x0, #0x428
    4298:	blr	x1
    429c:	ldp	x29, x30, [sp], #16
    42a0:	ret
    42a4:	ret
    42a8:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x146c8>
    42ac:	add	x0, x0, #0x428
    42b0:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x146c8>
    42b4:	add	x1, x1, #0x428
    42b8:	sub	x0, x0, x1
    42bc:	lsr	x1, x0, #63
    42c0:	add	x0, x1, x0, asr #3
    42c4:	cmp	xzr, x0, asr #1
    42c8:	b.eq	42f8 <PySequence_Fast@plt+0xb8>  // b.none
    42cc:	asr	x1, x0, #1
    42d0:	adrp	x2, 1f000 <PyInit__elementtree@@Base+0x126c8>
    42d4:	ldr	x2, [x2, #4048]
    42d8:	cbz	x2, 42f8 <PySequence_Fast@plt+0xb8>
    42dc:	stp	x29, x30, [sp, #-16]!
    42e0:	mov	x29, sp
    42e4:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x146c8>
    42e8:	add	x0, x0, #0x428
    42ec:	blr	x2
    42f0:	ldp	x29, x30, [sp], #16
    42f4:	ret
    42f8:	ret
    42fc:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x146c8>
    4300:	ldrb	w0, [x0, #1064]
    4304:	cbnz	w0, 4340 <PySequence_Fast@plt+0x100>
    4308:	stp	x29, x30, [sp, #-16]!
    430c:	mov	x29, sp
    4310:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    4314:	ldr	x0, [x0, #3904]
    4318:	cbz	x0, 4328 <PySequence_Fast@plt+0xe8>
    431c:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x136c8>
    4320:	ldr	x0, [x0, #792]
    4324:	bl	3d10 <__cxa_finalize@plt>
    4328:	bl	4264 <PySequence_Fast@plt+0x24>
    432c:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x146c8>
    4330:	mov	w1, #0x1                   	// #1
    4334:	strb	w1, [x0, #1064]
    4338:	ldp	x29, x30, [sp], #16
    433c:	ret
    4340:	ret
    4344:	stp	x29, x30, [sp, #-16]!
    4348:	mov	x29, sp
    434c:	bl	42a8 <PySequence_Fast@plt+0x68>
    4350:	ldp	x29, x30, [sp], #16
    4354:	ret
    4358:	stp	x29, x30, [sp, #-16]!
    435c:	mov	x29, sp
    4360:	ldr	x2, [x0, #304]
    4364:	mov	x1, #0x0                   	// #0
    4368:	blr	x2
    436c:	cbz	x0, 4398 <PySequence_Fast@plt+0x158>
    4370:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    4374:	ldr	x1, [x1, #3976]
    4378:	ldr	x2, [x1]
    437c:	str	x1, [x0, #16]
    4380:	str	x1, [x0, #24]
    4384:	add	x2, x2, #0x3
    4388:	str	x2, [x1]
    438c:	str	x1, [x0, #32]
    4390:	str	xzr, [x0, #40]
    4394:	str	xzr, [x0, #48]
    4398:	ldp	x29, x30, [sp], #16
    439c:	ret
    43a0:	stp	x29, x30, [sp, #-48]!
    43a4:	mov	x29, sp
    43a8:	stp	x19, x20, [sp, #16]
    43ac:	stp	x21, x22, [sp, #32]
    43b0:	mov	x20, x0
    43b4:	mov	x21, x1
    43b8:	mov	x22, x2
    43bc:	ldr	x0, [x0, #16]
    43c0:	cbz	x0, 43d0 <PySequence_Fast@plt+0x190>
    43c4:	mov	x1, x2
    43c8:	blr	x21
    43cc:	cbnz	w0, 446c <PySequence_Fast@plt+0x22c>
    43d0:	ldr	x0, [x20, #24]
    43d4:	ands	x0, x0, #0xfffffffffffffffe
    43d8:	b.eq	43e8 <PySequence_Fast@plt+0x1a8>  // b.none
    43dc:	mov	x1, x22
    43e0:	blr	x21
    43e4:	cbnz	w0, 446c <PySequence_Fast@plt+0x22c>
    43e8:	ldr	x0, [x20, #32]
    43ec:	ands	x0, x0, #0xfffffffffffffffe
    43f0:	b.eq	4400 <PySequence_Fast@plt+0x1c0>  // b.none
    43f4:	mov	x1, x22
    43f8:	blr	x21
    43fc:	cbnz	w0, 446c <PySequence_Fast@plt+0x22c>
    4400:	ldr	x1, [x20, #40]
    4404:	mov	w0, #0x0                   	// #0
    4408:	cbz	x1, 446c <PySequence_Fast@plt+0x22c>
    440c:	ldr	x0, [x1]
    4410:	cbz	x0, 4420 <PySequence_Fast@plt+0x1e0>
    4414:	mov	x1, x22
    4418:	blr	x21
    441c:	cbnz	w0, 446c <PySequence_Fast@plt+0x22c>
    4420:	ldr	x0, [x20, #40]
    4424:	ldr	x1, [x0, #8]
    4428:	cmp	x1, #0x0
    442c:	b.le	447c <PySequence_Fast@plt+0x23c>
    4430:	mov	x19, #0x0                   	// #0
    4434:	b	444c <PySequence_Fast@plt+0x20c>
    4438:	add	x19, x19, #0x1
    443c:	ldr	x0, [x20, #40]
    4440:	ldr	x1, [x0, #8]
    4444:	cmp	x1, x19
    4448:	b.le	4468 <PySequence_Fast@plt+0x228>
    444c:	ldr	x0, [x0, #24]
    4450:	ldr	x0, [x0, x19, lsl #3]
    4454:	cbz	x0, 4438 <PySequence_Fast@plt+0x1f8>
    4458:	mov	x1, x22
    445c:	blr	x21
    4460:	cbz	w0, 4438 <PySequence_Fast@plt+0x1f8>
    4464:	b	446c <PySequence_Fast@plt+0x22c>
    4468:	mov	w0, #0x0                   	// #0
    446c:	ldp	x19, x20, [sp, #16]
    4470:	ldp	x21, x22, [sp, #32]
    4474:	ldp	x29, x30, [sp], #48
    4478:	ret
    447c:	mov	w0, #0x0                   	// #0
    4480:	b	446c <PySequence_Fast@plt+0x22c>
    4484:	mov	x3, x0
    4488:	ldr	x0, [x0, #8]
    448c:	ldr	x1, [x0, #168]
    4490:	tbz	w1, #28, 4674 <PySequence_Fast@plt+0x434>
    4494:	ldr	x5, [x3, #16]
    4498:	ldrb	w1, [x3, #32]
    449c:	tbz	w1, #5, 44e8 <PySequence_Fast@plt+0x2a8>
    44a0:	add	x4, x3, #0x30
    44a4:	add	x0, x3, #0x48
    44a8:	tst	x1, #0x40
    44ac:	csel	x4, x0, x4, eq  // eq = none
    44b0:	ldrb	w3, [x3, #32]
    44b4:	ubfx	x3, x3, #2, #3
    44b8:	cmp	x5, #0x2
    44bc:	b.le	458c <PySequence_Fast@plt+0x34c>
    44c0:	cmp	w3, #0x1
    44c4:	b.eq	44f0 <PySequence_Fast@plt+0x2b0>  // b.none
    44c8:	cmp	w3, #0x2
    44cc:	b.eq	452c <PySequence_Fast@plt+0x2ec>  // b.none
    44d0:	ldr	w0, [x4]
    44d4:	cmp	w0, #0x7b
    44d8:	b.eq	4568 <PySequence_Fast@plt+0x328>  // b.none
    44dc:	mov	w0, #0x1                   	// #1
    44e0:	mov	x1, #0x0                   	// #0
    44e4:	b	459c <PySequence_Fast@plt+0x35c>
    44e8:	ldr	x4, [x3, #72]
    44ec:	b	44b0 <PySequence_Fast@plt+0x270>
    44f0:	ldrb	w0, [x4]
    44f4:	cmp	w0, #0x7b
    44f8:	b.ne	4520 <PySequence_Fast@plt+0x2e0>  // b.any
    44fc:	ldrb	w1, [x4, #1]
    4500:	mov	w0, #0x1                   	// #1
    4504:	cmp	w1, #0x7d
    4508:	b.eq	4670 <PySequence_Fast@plt+0x430>  // b.none
    450c:	cmp	w1, #0x2a
    4510:	b.eq	45b4 <PySequence_Fast@plt+0x374>  // b.none
    4514:	mov	w0, #0x1                   	// #1
    4518:	mov	x1, #0x0                   	// #0
    451c:	b	459c <PySequence_Fast@plt+0x35c>
    4520:	mov	w0, #0x1                   	// #1
    4524:	mov	x1, #0x0                   	// #0
    4528:	b	459c <PySequence_Fast@plt+0x35c>
    452c:	ldrh	w0, [x4]
    4530:	cmp	w0, #0x7b
    4534:	b.eq	4544 <PySequence_Fast@plt+0x304>  // b.none
    4538:	mov	w0, #0x1                   	// #1
    453c:	mov	x1, #0x0                   	// #0
    4540:	b	459c <PySequence_Fast@plt+0x35c>
    4544:	ldrh	w1, [x4, #2]
    4548:	mov	w0, #0x1                   	// #1
    454c:	cmp	w1, #0x7d
    4550:	b.eq	4670 <PySequence_Fast@plt+0x430>  // b.none
    4554:	cmp	w1, #0x2a
    4558:	b.eq	45cc <PySequence_Fast@plt+0x38c>  // b.none
    455c:	mov	w0, #0x1                   	// #1
    4560:	mov	x1, #0x0                   	// #0
    4564:	b	459c <PySequence_Fast@plt+0x35c>
    4568:	ldr	w1, [x4, #4]
    456c:	mov	w0, #0x1                   	// #1
    4570:	cmp	w1, #0x7d
    4574:	b.eq	4670 <PySequence_Fast@plt+0x430>  // b.none
    4578:	cmp	w1, #0x2a
    457c:	b.eq	45e4 <PySequence_Fast@plt+0x3a4>  // b.none
    4580:	mov	w0, #0x1                   	// #1
    4584:	mov	x1, #0x0                   	// #0
    4588:	b	459c <PySequence_Fast@plt+0x35c>
    458c:	mov	w0, #0x1                   	// #1
    4590:	mov	x1, #0x0                   	// #0
    4594:	cmp	x5, #0x0
    4598:	b.le	45ac <PySequence_Fast@plt+0x36c>
    459c:	mov	w7, #0x0                   	// #0
    45a0:	mov	w8, #0x1                   	// #1
    45a4:	mov	w9, #0x40                  	// #64
    45a8:	b	461c <PySequence_Fast@plt+0x3dc>
    45ac:	mov	w0, #0x0                   	// #0
    45b0:	b	4670 <PySequence_Fast@plt+0x430>
    45b4:	ldrb	w1, [x4, #2]
    45b8:	mov	w0, #0x1                   	// #1
    45bc:	cmp	w1, #0x7d
    45c0:	b.eq	4670 <PySequence_Fast@plt+0x430>  // b.none
    45c4:	mov	x1, #0x0                   	// #0
    45c8:	b	459c <PySequence_Fast@plt+0x35c>
    45cc:	ldrh	w1, [x4, #4]
    45d0:	mov	w0, #0x1                   	// #1
    45d4:	cmp	w1, #0x7d
    45d8:	b.eq	4670 <PySequence_Fast@plt+0x430>  // b.none
    45dc:	mov	x1, #0x0                   	// #0
    45e0:	b	459c <PySequence_Fast@plt+0x35c>
    45e4:	ldr	w1, [x4, #8]
    45e8:	mov	w0, #0x1                   	// #1
    45ec:	cmp	w1, #0x7d
    45f0:	b.eq	4670 <PySequence_Fast@plt+0x430>  // b.none
    45f4:	mov	x1, #0x0                   	// #0
    45f8:	b	459c <PySequence_Fast@plt+0x35c>
    45fc:	ldrb	w2, [x4, x1]
    4600:	b	4630 <PySequence_Fast@plt+0x3f0>
    4604:	ldrh	w2, [x4, x1, lsl #1]
    4608:	b	4630 <PySequence_Fast@plt+0x3f0>
    460c:	mov	w0, w7
    4610:	add	x1, x1, #0x1
    4614:	cmp	x5, x1
    4618:	b.le	466c <PySequence_Fast@plt+0x42c>
    461c:	cmp	w3, #0x1
    4620:	b.eq	45fc <PySequence_Fast@plt+0x3bc>  // b.none
    4624:	cmp	w3, #0x2
    4628:	b.eq	4604 <PySequence_Fast@plt+0x3c4>  // b.none
    462c:	ldr	w2, [x4, x1, lsl #2]
    4630:	cmp	w2, #0x7b
    4634:	b.eq	460c <PySequence_Fast@plt+0x3cc>  // b.none
    4638:	cmp	w2, #0x7d
    463c:	b.eq	4664 <PySequence_Fast@plt+0x424>  // b.none
    4640:	cbz	w0, 4610 <PySequence_Fast@plt+0x3d0>
    4644:	cmp	w2, #0x2a
    4648:	b.eq	4670 <PySequence_Fast@plt+0x430>  // b.none
    464c:	sub	w6, w2, #0x2e
    4650:	cmp	w2, #0x5b
    4654:	ccmp	w2, w9, #0x4, ne  // ne = any
    4658:	ccmp	w6, #0x1, #0x0, ne  // ne = any
    465c:	b.hi	4610 <PySequence_Fast@plt+0x3d0>  // b.pmore
    4660:	b	4670 <PySequence_Fast@plt+0x430>
    4664:	mov	w0, w8
    4668:	b	4610 <PySequence_Fast@plt+0x3d0>
    466c:	mov	w0, #0x0                   	// #0
    4670:	ret
    4674:	mov	w0, #0x1                   	// #1
    4678:	tbz	w1, #27, 4670 <PySequence_Fast@plt+0x430>
    467c:	ldr	x4, [x3, #16]
    4680:	cmp	x4, #0x2
    4684:	b.le	46b4 <PySequence_Fast@plt+0x474>
    4688:	ldrb	w2, [x3, #32]
    468c:	mov	x1, #0x0                   	// #0
    4690:	cmp	w2, #0x7b
    4694:	b.ne	46c4 <PySequence_Fast@plt+0x484>  // b.any
    4698:	ldrb	w1, [x3, #33]
    469c:	cmp	w1, #0x7d
    46a0:	b.eq	4670 <PySequence_Fast@plt+0x430>  // b.none
    46a4:	cmp	w1, #0x2a
    46a8:	b.eq	46d8 <PySequence_Fast@plt+0x498>  // b.none
    46ac:	mov	x1, #0x0                   	// #0
    46b0:	b	46c4 <PySequence_Fast@plt+0x484>
    46b4:	cmp	x4, #0x0
    46b8:	b.le	4750 <PySequence_Fast@plt+0x510>
    46bc:	mov	w0, #0x1                   	// #1
    46c0:	mov	x1, #0x0                   	// #0
    46c4:	add	x3, x3, #0x20
    46c8:	mov	w6, #0x0                   	// #0
    46cc:	mov	w7, #0x1                   	// #1
    46d0:	mov	w8, #0x5b                  	// #91
    46d4:	b	4700 <PySequence_Fast@plt+0x4c0>
    46d8:	ldrb	w1, [x3, #34]
    46dc:	mov	w0, #0x1                   	// #1
    46e0:	cmp	w1, #0x7d
    46e4:	b.eq	4670 <PySequence_Fast@plt+0x430>  // b.none
    46e8:	mov	x1, #0x0                   	// #0
    46ec:	b	46c4 <PySequence_Fast@plt+0x484>
    46f0:	mov	w0, w6
    46f4:	add	x1, x1, #0x1
    46f8:	cmp	x4, x1
    46fc:	b.le	4748 <PySequence_Fast@plt+0x508>
    4700:	ldrb	w2, [x3, x1]
    4704:	cmp	w2, #0x7b
    4708:	b.eq	46f0 <PySequence_Fast@plt+0x4b0>  // b.none
    470c:	cmp	w2, #0x7d
    4710:	b.eq	4740 <PySequence_Fast@plt+0x500>  // b.none
    4714:	cbz	w0, 46f4 <PySequence_Fast@plt+0x4b4>
    4718:	sub	w5, w2, #0x2e
    471c:	and	w5, w5, #0xff
    4720:	cmp	w2, #0x40
    4724:	ccmp	w5, #0x1, #0x0, ne  // ne = any
    4728:	cset	w5, ls  // ls = plast
    472c:	cmp	w2, #0x2a
    4730:	ccmp	w2, w8, #0x4, ne  // ne = any
    4734:	csinc	w2, w5, wzr, ne  // ne = any
    4738:	cbz	w2, 46f4 <PySequence_Fast@plt+0x4b4>
    473c:	b	4670 <PySequence_Fast@plt+0x430>
    4740:	mov	w0, w7
    4744:	b	46f4 <PySequence_Fast@plt+0x4b4>
    4748:	mov	w0, #0x0                   	// #0
    474c:	b	4670 <PySequence_Fast@plt+0x430>
    4750:	mov	w0, #0x0                   	// #0
    4754:	b	4670 <PySequence_Fast@plt+0x430>
    4758:	ldr	x0, [x0, #40]
    475c:	cbz	x0, 4768 <PySequence_Fast@plt+0x528>
    4760:	ldr	x0, [x0, #8]
    4764:	ret
    4768:	mov	x0, #0x0                   	// #0
    476c:	b	4764 <PySequence_Fast@plt+0x524>
    4770:	ldr	x0, [x0, #16]
    4774:	ldr	x1, [x0]
    4778:	add	x1, x1, #0x1
    477c:	str	x1, [x0]
    4780:	ret
    4784:	stp	x29, x30, [sp, #-48]!
    4788:	mov	x29, sp
    478c:	stp	x19, x20, [sp, #16]
    4790:	stp	x21, x22, [sp, #32]
    4794:	mov	x20, x0
    4798:	mov	x21, x1
    479c:	mov	x22, x2
    47a0:	ldr	x0, [x0, #24]
    47a4:	sub	x19, x0, #0x1
    47a8:	cbnz	x0, 47e8 <PySequence_Fast@plt+0x5a8>
    47ac:	ldr	x0, [x20, #40]
    47b0:	cbz	x0, 47c0 <PySequence_Fast@plt+0x580>
    47b4:	mov	x1, x22
    47b8:	blr	x21
    47bc:	cbnz	w0, 4804 <PySequence_Fast@plt+0x5c4>
    47c0:	ldr	x2, [x20, #48]
    47c4:	mov	w0, #0x0                   	// #0
    47c8:	cbz	x2, 4804 <PySequence_Fast@plt+0x5c4>
    47cc:	mov	x1, x22
    47d0:	mov	x0, x2
    47d4:	blr	x21
    47d8:	b	4804 <PySequence_Fast@plt+0x5c4>
    47dc:	sub	x0, x19, #0x1
    47e0:	cbz	x19, 47ac <PySequence_Fast@plt+0x56c>
    47e4:	mov	x19, x0
    47e8:	ldr	x4, [x20, #16]
    47ec:	lsl	x3, x19, #4
    47f0:	ldr	x0, [x4, x3]
    47f4:	cbz	x0, 47dc <PySequence_Fast@plt+0x59c>
    47f8:	mov	x1, x22
    47fc:	blr	x21
    4800:	cbz	w0, 47dc <PySequence_Fast@plt+0x59c>
    4804:	ldp	x19, x20, [sp, #16]
    4808:	ldp	x21, x22, [sp, #32]
    480c:	ldp	x29, x30, [sp], #48
    4810:	ret
    4814:	stp	x29, x30, [sp, #-48]!
    4818:	mov	x29, sp
    481c:	stp	x19, x20, [sp, #16]
    4820:	str	x21, [sp, #32]
    4824:	mov	x19, x0
    4828:	mov	x20, x1
    482c:	mov	x21, x2
    4830:	ldr	x0, [x0, #144]
    4834:	cbz	x0, 4844 <PySequence_Fast@plt+0x604>
    4838:	mov	x1, x2
    483c:	blr	x20
    4840:	cbnz	w0, 4974 <PySequence_Fast@plt+0x734>
    4844:	ldr	x0, [x19, #136]
    4848:	cbz	x0, 4858 <PySequence_Fast@plt+0x618>
    484c:	mov	x1, x21
    4850:	blr	x20
    4854:	cbnz	w0, 4974 <PySequence_Fast@plt+0x734>
    4858:	ldr	x0, [x19, #128]
    485c:	cbz	x0, 486c <PySequence_Fast@plt+0x62c>
    4860:	mov	x1, x21
    4864:	blr	x20
    4868:	cbnz	w0, 4974 <PySequence_Fast@plt+0x734>
    486c:	ldr	x0, [x19, #120]
    4870:	cbz	x0, 4880 <PySequence_Fast@plt+0x640>
    4874:	mov	x1, x21
    4878:	blr	x20
    487c:	cbnz	w0, 4974 <PySequence_Fast@plt+0x734>
    4880:	ldr	x0, [x19, #112]
    4884:	cbz	x0, 4894 <PySequence_Fast@plt+0x654>
    4888:	mov	x1, x21
    488c:	blr	x20
    4890:	cbnz	w0, 4974 <PySequence_Fast@plt+0x734>
    4894:	ldr	x0, [x19, #104]
    4898:	cbz	x0, 48a8 <PySequence_Fast@plt+0x668>
    489c:	mov	x1, x21
    48a0:	blr	x20
    48a4:	cbnz	w0, 4974 <PySequence_Fast@plt+0x734>
    48a8:	ldr	x0, [x19, #96]
    48ac:	cbz	x0, 48bc <PySequence_Fast@plt+0x67c>
    48b0:	mov	x1, x21
    48b4:	blr	x20
    48b8:	cbnz	w0, 4974 <PySequence_Fast@plt+0x734>
    48bc:	ldr	x0, [x19, #16]
    48c0:	cbz	x0, 48d0 <PySequence_Fast@plt+0x690>
    48c4:	mov	x1, x21
    48c8:	blr	x20
    48cc:	cbnz	w0, 4974 <PySequence_Fast@plt+0x734>
    48d0:	ldr	x0, [x19, #24]
    48d4:	cbz	x0, 48e4 <PySequence_Fast@plt+0x6a4>
    48d8:	mov	x1, x21
    48dc:	blr	x20
    48e0:	cbnz	w0, 4974 <PySequence_Fast@plt+0x734>
    48e4:	ldr	x0, [x19, #32]
    48e8:	cbz	x0, 48f8 <PySequence_Fast@plt+0x6b8>
    48ec:	mov	x1, x21
    48f0:	blr	x20
    48f4:	cbnz	w0, 4974 <PySequence_Fast@plt+0x734>
    48f8:	ldr	x0, [x19, #40]
    48fc:	cbz	x0, 490c <PySequence_Fast@plt+0x6cc>
    4900:	mov	x1, x21
    4904:	blr	x20
    4908:	cbnz	w0, 4974 <PySequence_Fast@plt+0x734>
    490c:	ldr	x0, [x19, #48]
    4910:	cbz	x0, 4920 <PySequence_Fast@plt+0x6e0>
    4914:	mov	x1, x21
    4918:	blr	x20
    491c:	cbnz	w0, 4974 <PySequence_Fast@plt+0x734>
    4920:	ldr	x0, [x19, #56]
    4924:	cbz	x0, 4934 <PySequence_Fast@plt+0x6f4>
    4928:	mov	x1, x21
    492c:	blr	x20
    4930:	cbnz	w0, 4974 <PySequence_Fast@plt+0x734>
    4934:	ldr	x0, [x19, #88]
    4938:	cbz	x0, 4948 <PySequence_Fast@plt+0x708>
    493c:	mov	x1, x21
    4940:	blr	x20
    4944:	cbnz	w0, 4974 <PySequence_Fast@plt+0x734>
    4948:	ldr	x0, [x19, #80]
    494c:	cbz	x0, 495c <PySequence_Fast@plt+0x71c>
    4950:	mov	x1, x21
    4954:	blr	x20
    4958:	cbnz	w0, 4974 <PySequence_Fast@plt+0x734>
    495c:	ldr	x2, [x19, #72]
    4960:	mov	w0, #0x0                   	// #0
    4964:	cbz	x2, 4974 <PySequence_Fast@plt+0x734>
    4968:	mov	x1, x21
    496c:	mov	x0, x2
    4970:	blr	x20
    4974:	ldp	x19, x20, [sp, #16]
    4978:	ldr	x21, [sp, #32]
    497c:	ldp	x29, x30, [sp], #48
    4980:	ret
    4984:	stp	x29, x30, [sp, #-16]!
    4988:	mov	x29, sp
    498c:	ldr	x2, [x0, #304]
    4990:	mov	x1, #0x0                   	// #0
    4994:	blr	x2
    4998:	cbz	x0, 49d0 <PySequence_Fast@plt+0x790>
    499c:	str	xzr, [x0, #16]
    49a0:	str	xzr, [x0, #40]
    49a4:	str	xzr, [x0, #32]
    49a8:	str	xzr, [x0, #24]
    49ac:	str	xzr, [x0, #56]
    49b0:	str	xzr, [x0, #48]
    49b4:	str	xzr, [x0, #80]
    49b8:	str	xzr, [x0, #72]
    49bc:	str	xzr, [x0, #64]
    49c0:	str	xzr, [x0, #112]
    49c4:	str	xzr, [x0, #96]
    49c8:	str	xzr, [x0, #88]
    49cc:	str	xzr, [x0, #104]
    49d0:	ldp	x29, x30, [sp], #16
    49d4:	ret
    49d8:	stp	x29, x30, [sp, #-48]!
    49dc:	mov	x29, sp
    49e0:	stp	x19, x20, [sp, #16]
    49e4:	str	x21, [sp, #32]
    49e8:	mov	x19, x0
    49ec:	mov	x20, x1
    49f0:	mov	x21, x2
    49f4:	ldr	x0, [x0, #112]
    49f8:	cbz	x0, 4a08 <PySequence_Fast@plt+0x7c8>
    49fc:	mov	x1, x2
    4a00:	blr	x20
    4a04:	cbnz	w0, 4ae8 <PySequence_Fast@plt+0x8a8>
    4a08:	ldr	x0, [x19, #96]
    4a0c:	cbz	x0, 4a1c <PySequence_Fast@plt+0x7dc>
    4a10:	mov	x1, x21
    4a14:	blr	x20
    4a18:	cbnz	w0, 4ae8 <PySequence_Fast@plt+0x8a8>
    4a1c:	ldr	x0, [x19, #88]
    4a20:	cbz	x0, 4a30 <PySequence_Fast@plt+0x7f0>
    4a24:	mov	x1, x21
    4a28:	blr	x20
    4a2c:	cbnz	w0, 4ae8 <PySequence_Fast@plt+0x8a8>
    4a30:	ldr	x0, [x19, #80]
    4a34:	cbz	x0, 4a44 <PySequence_Fast@plt+0x804>
    4a38:	mov	x1, x21
    4a3c:	blr	x20
    4a40:	cbnz	w0, 4ae8 <PySequence_Fast@plt+0x8a8>
    4a44:	ldr	x0, [x19, #72]
    4a48:	cbz	x0, 4a58 <PySequence_Fast@plt+0x818>
    4a4c:	mov	x1, x21
    4a50:	blr	x20
    4a54:	cbnz	w0, 4ae8 <PySequence_Fast@plt+0x8a8>
    4a58:	ldr	x0, [x19, #64]
    4a5c:	cbz	x0, 4a6c <PySequence_Fast@plt+0x82c>
    4a60:	mov	x1, x21
    4a64:	blr	x20
    4a68:	cbnz	w0, 4ae8 <PySequence_Fast@plt+0x8a8>
    4a6c:	ldr	x0, [x19, #48]
    4a70:	cbz	x0, 4a80 <PySequence_Fast@plt+0x840>
    4a74:	mov	x1, x21
    4a78:	blr	x20
    4a7c:	cbnz	w0, 4ae8 <PySequence_Fast@plt+0x8a8>
    4a80:	ldr	x0, [x19, #56]
    4a84:	cbz	x0, 4a94 <PySequence_Fast@plt+0x854>
    4a88:	mov	x1, x21
    4a8c:	blr	x20
    4a90:	cbnz	w0, 4ae8 <PySequence_Fast@plt+0x8a8>
    4a94:	ldr	x0, [x19, #104]
    4a98:	cbz	x0, 4aa8 <PySequence_Fast@plt+0x868>
    4a9c:	mov	x1, x21
    4aa0:	blr	x20
    4aa4:	cbnz	w0, 4ae8 <PySequence_Fast@plt+0x8a8>
    4aa8:	ldr	x0, [x19, #24]
    4aac:	cbz	x0, 4abc <PySequence_Fast@plt+0x87c>
    4ab0:	mov	x1, x21
    4ab4:	blr	x20
    4ab8:	cbnz	w0, 4ae8 <PySequence_Fast@plt+0x8a8>
    4abc:	ldr	x0, [x19, #32]
    4ac0:	cbz	x0, 4ad0 <PySequence_Fast@plt+0x890>
    4ac4:	mov	x1, x21
    4ac8:	blr	x20
    4acc:	cbnz	w0, 4ae8 <PySequence_Fast@plt+0x8a8>
    4ad0:	ldr	x2, [x19, #40]
    4ad4:	mov	w0, #0x0                   	// #0
    4ad8:	cbz	x2, 4ae8 <PySequence_Fast@plt+0x8a8>
    4adc:	mov	x1, x21
    4ae0:	mov	x0, x2
    4ae4:	blr	x20
    4ae8:	ldp	x19, x20, [sp, #16]
    4aec:	ldr	x21, [sp, #32]
    4af0:	ldp	x29, x30, [sp], #48
    4af4:	ret
    4af8:	ldr	x0, [x0, #16]
    4afc:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    4b00:	ldr	x1, [x1, #3976]
    4b04:	cmp	x0, #0x0
    4b08:	csel	x0, x1, x0, eq  // eq = none
    4b0c:	ldr	x1, [x0]
    4b10:	add	x1, x1, #0x1
    4b14:	str	x1, [x0]
    4b18:	ret
    4b1c:	stp	x29, x30, [sp, #-48]!
    4b20:	mov	x29, sp
    4b24:	stp	x19, x20, [sp, #16]
    4b28:	str	x21, [sp, #32]
    4b2c:	mov	x20, x1
    4b30:	mov	x21, x2
    4b34:	bl	3e10 <PyModule_GetState@plt>
    4b38:	mov	x19, x0
    4b3c:	ldr	x0, [x0]
    4b40:	cbz	x0, 4b50 <PySequence_Fast@plt+0x910>
    4b44:	mov	x1, x21
    4b48:	blr	x20
    4b4c:	cbnz	w0, 4ba4 <PySequence_Fast@plt+0x964>
    4b50:	ldr	x0, [x19, #8]
    4b54:	cbz	x0, 4b64 <PySequence_Fast@plt+0x924>
    4b58:	mov	x1, x21
    4b5c:	blr	x20
    4b60:	cbnz	w0, 4ba4 <PySequence_Fast@plt+0x964>
    4b64:	ldr	x0, [x19, #16]
    4b68:	cbz	x0, 4b78 <PySequence_Fast@plt+0x938>
    4b6c:	mov	x1, x21
    4b70:	blr	x20
    4b74:	cbnz	w0, 4ba4 <PySequence_Fast@plt+0x964>
    4b78:	ldr	x0, [x19, #24]
    4b7c:	cbz	x0, 4b8c <PySequence_Fast@plt+0x94c>
    4b80:	mov	x1, x21
    4b84:	blr	x20
    4b88:	cbnz	w0, 4ba4 <PySequence_Fast@plt+0x964>
    4b8c:	ldr	x2, [x19, #32]
    4b90:	mov	w0, #0x0                   	// #0
    4b94:	cbz	x2, 4ba4 <PySequence_Fast@plt+0x964>
    4b98:	mov	x1, x21
    4b9c:	mov	x0, x2
    4ba0:	blr	x20
    4ba4:	ldp	x19, x20, [sp, #16]
    4ba8:	ldr	x21, [sp, #32]
    4bac:	ldp	x29, x30, [sp], #48
    4bb0:	ret
    4bb4:	ldr	x2, [x0, #40]
    4bb8:	cmp	x1, #0x0
    4bbc:	ccmp	x2, #0x0, #0x4, ge  // ge = tcont
    4bc0:	b.eq	4bf4 <PySequence_Fast@plt+0x9b4>  // b.none
    4bc4:	ldr	x3, [x2, #8]
    4bc8:	cmp	x3, x1
    4bcc:	b.le	4bf4 <PySequence_Fast@plt+0x9b4>
    4bd0:	ldr	x2, [x2, #24]
    4bd4:	ldr	x3, [x2, x1, lsl #3]
    4bd8:	ldr	x2, [x3]
    4bdc:	add	x2, x2, #0x1
    4be0:	str	x2, [x3]
    4be4:	ldr	x0, [x0, #40]
    4be8:	ldr	x0, [x0, #24]
    4bec:	ldr	x0, [x0, x1, lsl #3]
    4bf0:	ret
    4bf4:	stp	x29, x30, [sp, #-16]!
    4bf8:	mov	x29, sp
    4bfc:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    4c00:	add	x1, x1, #0xbc8
    4c04:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    4c08:	ldr	x0, [x0, #3984]
    4c0c:	ldr	x0, [x0]
    4c10:	bl	3de0 <PyErr_SetString@plt>
    4c14:	mov	x0, #0x0                   	// #0
    4c18:	ldp	x29, x30, [sp], #16
    4c1c:	ret
    4c20:	sub	sp, sp, #0x40
    4c24:	stp	x29, x30, [sp, #16]
    4c28:	add	x29, sp, #0x10
    4c2c:	stp	x19, x20, [sp, #32]
    4c30:	mov	x20, x0
    4c34:	mov	x0, x1
    4c38:	mov	x1, x2
    4c3c:	cbz	x3, 4cd0 <PySequence_Fast@plt+0xa90>
    4c40:	ldr	x19, [x3, #16]
    4c44:	add	x19, x2, x19
    4c48:	add	x2, sp, #0x30
    4c4c:	str	x2, [sp]
    4c50:	mov	w7, #0x0                   	// #0
    4c54:	mov	w6, #0x2                   	// #2
    4c58:	mov	w5, #0x1                   	// #1
    4c5c:	adrp	x4, 20000 <PyInit__elementtree@@Base+0x136c8>
    4c60:	add	x4, x4, #0x9b8
    4c64:	mov	x2, #0x0                   	// #0
    4c68:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    4c6c:	cbz	x0, 4d0c <PySequence_Fast@plt+0xacc>
    4c70:	cmp	x19, #0x1
    4c74:	b.eq	4cf0 <PySequence_Fast@plt+0xab0>  // b.none
    4c78:	ldr	x19, [x0, #8]
    4c7c:	ldr	x1, [x20, #40]
    4c80:	cbz	x1, 4cb0 <PySequence_Fast@plt+0xa70>
    4c84:	ldr	x2, [x1]
    4c88:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    4c8c:	ldr	x1, [x1, #3976]
    4c90:	cmp	x2, x1
    4c94:	b.eq	4cb0 <PySequence_Fast@plt+0xa70>  // b.none
    4c98:	ldr	x1, [x0]
    4c9c:	mov	x0, x2
    4ca0:	bl	4230 <PyDict_GetItemWithError@plt>
    4ca4:	mov	x20, x0
    4ca8:	cbz	x0, 4cfc <PySequence_Fast@plt+0xabc>
    4cac:	mov	x19, x0
    4cb0:	ldr	x0, [x19]
    4cb4:	add	x0, x0, #0x1
    4cb8:	str	x0, [x19]
    4cbc:	mov	x0, x19
    4cc0:	ldp	x19, x20, [sp, #32]
    4cc4:	ldp	x29, x30, [sp, #16]
    4cc8:	add	sp, sp, #0x40
    4ccc:	ret
    4cd0:	sub	x2, x2, #0x1
    4cd4:	cmp	x2, #0x1
    4cd8:	b.hi	4ce8 <PySequence_Fast@plt+0xaa8>  // b.pmore
    4cdc:	mov	x19, x1
    4ce0:	cbz	x0, 4c48 <PySequence_Fast@plt+0xa08>
    4ce4:	b	4c70 <PySequence_Fast@plt+0xa30>
    4ce8:	mov	x19, x1
    4cec:	b	4c48 <PySequence_Fast@plt+0xa08>
    4cf0:	adrp	x19, 1f000 <PyInit__elementtree@@Base+0x126c8>
    4cf4:	ldr	x19, [x19, #3976]
    4cf8:	b	4c7c <PySequence_Fast@plt+0xa3c>
    4cfc:	bl	3f80 <PyErr_Occurred@plt>
    4d00:	cbz	x0, 4cb0 <PySequence_Fast@plt+0xa70>
    4d04:	mov	x19, x20
    4d08:	b	4cbc <PySequence_Fast@plt+0xa7c>
    4d0c:	mov	x19, x0
    4d10:	b	4cbc <PySequence_Fast@plt+0xa7c>
    4d14:	sub	sp, sp, #0x50
    4d18:	stp	x29, x30, [sp, #16]
    4d1c:	add	x29, sp, #0x10
    4d20:	stp	x19, x20, [sp, #32]
    4d24:	mov	x20, x0
    4d28:	mov	x0, x1
    4d2c:	mov	x1, x2
    4d30:	cbz	x3, 4dc0 <PySequence_Fast@plt+0xb80>
    4d34:	ldr	x19, [x3, #16]
    4d38:	add	x19, x2, x19
    4d3c:	add	x2, sp, #0x40
    4d40:	str	x2, [sp]
    4d44:	mov	w7, #0x0                   	// #0
    4d48:	mov	w6, #0x2                   	// #2
    4d4c:	mov	w5, #0x1                   	// #1
    4d50:	adrp	x4, 20000 <PyInit__elementtree@@Base+0x136c8>
    4d54:	add	x4, x4, #0x9b8
    4d58:	add	x4, x4, #0x40
    4d5c:	mov	x2, #0x0                   	// #0
    4d60:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    4d64:	cbz	x0, 4db0 <PySequence_Fast@plt+0xb70>
    4d68:	stp	x21, x22, [sp, #48]
    4d6c:	ldr	x22, [x0]
    4d70:	cmp	x19, #0x1
    4d74:	b.eq	4de4 <PySequence_Fast@plt+0xba4>  // b.none
    4d78:	ldr	x21, [x0, #8]
    4d7c:	adrp	x19, 20000 <PyInit__elementtree@@Base+0x136c8>
    4d80:	add	x19, x19, #0x9b8
    4d84:	add	x0, x19, #0x80
    4d88:	bl	3fc0 <PyState_FindModule@plt>
    4d8c:	bl	3e10 <PyModule_GetState@plt>
    4d90:	mov	x5, #0x0                   	// #0
    4d94:	mov	x4, x21
    4d98:	mov	x3, x22
    4d9c:	mov	x2, x20
    4da0:	add	x1, x19, #0xe8
    4da4:	ldr	x0, [x0, #16]
    4da8:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    4dac:	ldp	x21, x22, [sp, #48]
    4db0:	ldp	x19, x20, [sp, #32]
    4db4:	ldp	x29, x30, [sp, #16]
    4db8:	add	sp, sp, #0x50
    4dbc:	ret
    4dc0:	sub	x2, x2, #0x1
    4dc4:	cmp	x2, #0x1
    4dc8:	b.hi	4ddc <PySequence_Fast@plt+0xb9c>  // b.pmore
    4dcc:	mov	x19, x1
    4dd0:	cbz	x0, 4d3c <PySequence_Fast@plt+0xafc>
    4dd4:	stp	x21, x22, [sp, #48]
    4dd8:	b	4d6c <PySequence_Fast@plt+0xb2c>
    4ddc:	mov	x19, x1
    4de0:	b	4d3c <PySequence_Fast@plt+0xafc>
    4de4:	adrp	x21, 1f000 <PyInit__elementtree@@Base+0x126c8>
    4de8:	ldr	x21, [x21, #3976]
    4dec:	b	4d7c <PySequence_Fast@plt+0xb3c>
    4df0:	stp	x29, x30, [sp, #-16]!
    4df4:	mov	x29, sp
    4df8:	ldr	x0, [x0, #8]
    4dfc:	ldr	x2, [x0, #24]
    4e00:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    4e04:	add	x1, x1, #0xbe8
    4e08:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    4e0c:	ldr	x0, [x0, #3944]
    4e10:	ldr	x0, [x0]
    4e14:	bl	4180 <PyErr_Format@plt>
    4e18:	ldp	x29, x30, [sp], #16
    4e1c:	ret
    4e20:	stp	x29, x30, [sp, #-32]!
    4e24:	mov	x29, sp
    4e28:	stp	x19, x20, [sp, #16]
    4e2c:	mov	x20, x0
    4e30:	mov	x19, x1
    4e34:	mov	x0, #0x40                  	// #64
    4e38:	bl	3e00 <PyObject_Malloc@plt>
    4e3c:	str	x0, [x20, #40]
    4e40:	cbz	x0, 4e98 <PySequence_Fast@plt+0xc58>
    4e44:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    4e48:	ldr	x0, [x0, #3976]
    4e4c:	cmp	x19, #0x0
    4e50:	csel	x19, x0, x19, eq  // eq = none
    4e54:	ldr	x0, [x19]
    4e58:	add	x0, x0, #0x1
    4e5c:	str	x0, [x19]
    4e60:	ldr	x0, [x20, #40]
    4e64:	str	x19, [x0]
    4e68:	ldr	x0, [x20, #40]
    4e6c:	str	xzr, [x0, #8]
    4e70:	ldr	x0, [x20, #40]
    4e74:	mov	x1, #0x4                   	// #4
    4e78:	str	x1, [x0, #16]
    4e7c:	ldr	x0, [x20, #40]
    4e80:	add	x1, x0, #0x20
    4e84:	str	x1, [x0, #24]
    4e88:	mov	w0, #0x0                   	// #0
    4e8c:	ldp	x19, x20, [sp, #16]
    4e90:	ldp	x29, x30, [sp], #32
    4e94:	ret
    4e98:	bl	3d80 <PyErr_NoMemory@plt>
    4e9c:	mov	w0, #0xffffffff            	// #-1
    4ea0:	b	4e8c <PySequence_Fast@plt+0xc4c>
    4ea4:	stp	x29, x30, [sp, #-48]!
    4ea8:	mov	x29, sp
    4eac:	stp	x19, x20, [sp, #16]
    4eb0:	mov	x20, x0
    4eb4:	mov	x19, x1
    4eb8:	ldr	x0, [x0, #40]
    4ebc:	cbz	x0, 4f10 <PySequence_Fast@plt+0xcd0>
    4ec0:	ldr	x2, [x20, #40]
    4ec4:	ldr	x1, [x2, #8]
    4ec8:	add	x1, x19, x1
    4ecc:	ldr	x3, [x2, #16]
    4ed0:	mov	w0, #0x0                   	// #0
    4ed4:	cmp	x3, x1
    4ed8:	b.ge	4f6c <PySequence_Fast@plt+0xd2c>  // b.tcont
    4edc:	cmp	x1, #0x9
    4ee0:	mov	x19, #0x3                   	// #3
    4ee4:	mov	x0, #0x6                   	// #6
    4ee8:	csel	x19, x19, x0, lt  // lt = tstop
    4eec:	add	x1, x1, x1, asr #3
    4ef0:	adds	x19, x19, x1
    4ef4:	b.eq	4f28 <PySequence_Fast@plt+0xce8>  // b.none
    4ef8:	mov	x1, x19
    4efc:	mov	x0, #0xfffffffffffffff     	// #1152921504606846975
    4f00:	cmp	x19, x0
    4f04:	b.hi	4f7c <PySequence_Fast@plt+0xd3c>  // b.pmore
    4f08:	str	x21, [sp, #32]
    4f0c:	b	4f34 <PySequence_Fast@plt+0xcf4>
    4f10:	mov	x1, #0x0                   	// #0
    4f14:	mov	x0, x20
    4f18:	bl	4e20 <PySequence_Fast@plt+0xbe0>
    4f1c:	tbz	w0, #31, 4ec0 <PySequence_Fast@plt+0xc80>
    4f20:	mov	w0, #0xffffffff            	// #-1
    4f24:	b	4f6c <PySequence_Fast@plt+0xd2c>
    4f28:	str	x21, [sp, #32]
    4f2c:	mov	x19, #0x1                   	// #1
    4f30:	mov	x1, x19
    4f34:	ldr	x0, [x2, #24]
    4f38:	add	x2, x2, #0x20
    4f3c:	cmp	x0, x2
    4f40:	b.eq	4f88 <PySequence_Fast@plt+0xd48>  // b.none
    4f44:	lsl	x1, x1, #3
    4f48:	bl	4060 <PyObject_Realloc@plt>
    4f4c:	mov	x21, x0
    4f50:	cbz	x0, 4f78 <PySequence_Fast@plt+0xd38>
    4f54:	ldr	x0, [x20, #40]
    4f58:	str	x21, [x0, #24]
    4f5c:	ldr	x0, [x20, #40]
    4f60:	str	x19, [x0, #16]
    4f64:	mov	w0, #0x0                   	// #0
    4f68:	ldr	x21, [sp, #32]
    4f6c:	ldp	x19, x20, [sp, #16]
    4f70:	ldp	x29, x30, [sp], #48
    4f74:	ret
    4f78:	ldr	x21, [sp, #32]
    4f7c:	bl	3d80 <PyErr_NoMemory@plt>
    4f80:	mov	w0, #0xffffffff            	// #-1
    4f84:	b	4f6c <PySequence_Fast@plt+0xd2c>
    4f88:	lsl	x0, x1, #3
    4f8c:	bl	3e00 <PyObject_Malloc@plt>
    4f90:	mov	x21, x0
    4f94:	cbz	x0, 4fb4 <PySequence_Fast@plt+0xd74>
    4f98:	ldr	x0, [x20, #40]
    4f9c:	ldr	x2, [x0, #8]
    4fa0:	lsl	x2, x2, #3
    4fa4:	ldr	x1, [x0, #24]
    4fa8:	mov	x0, x21
    4fac:	bl	3c20 <memcpy@plt>
    4fb0:	b	4f54 <PySequence_Fast@plt+0xd14>
    4fb4:	ldr	x21, [sp, #32]
    4fb8:	b	4f7c <PySequence_Fast@plt+0xd3c>
    4fbc:	stp	x29, x30, [sp, #-32]!
    4fc0:	mov	x29, sp
    4fc4:	stp	x19, x20, [sp, #16]
    4fc8:	mov	x20, x0
    4fcc:	mov	x19, x1
    4fd0:	ldr	x0, [x1, #8]
    4fd4:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x136c8>
    4fd8:	add	x1, x1, #0x320
    4fdc:	cmp	x0, x1
    4fe0:	b.eq	4ff4 <PySequence_Fast@plt+0xdb4>  // b.none
    4fe4:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x136c8>
    4fe8:	add	x1, x1, #0x320
    4fec:	bl	4160 <PyType_IsSubtype@plt>
    4ff0:	cbz	w0, 5040 <PySequence_Fast@plt+0xe00>
    4ff4:	mov	x1, #0x1                   	// #1
    4ff8:	mov	x0, x20
    4ffc:	bl	4ea4 <PySequence_Fast@plt+0xc64>
    5000:	tbnz	w0, #31, 5050 <PySequence_Fast@plt+0xe10>
    5004:	ldr	x1, [x19]
    5008:	add	x1, x1, #0x1
    500c:	str	x1, [x19]
    5010:	ldr	x1, [x20, #40]
    5014:	ldr	x2, [x1, #8]
    5018:	ldr	x0, [x1, #24]
    501c:	str	x19, [x0, x2, lsl #3]
    5020:	ldr	x1, [x20, #40]
    5024:	ldr	x0, [x1, #8]
    5028:	add	x0, x0, #0x1
    502c:	str	x0, [x1, #8]
    5030:	mov	w0, #0x0                   	// #0
    5034:	ldp	x19, x20, [sp, #16]
    5038:	ldp	x29, x30, [sp], #32
    503c:	ret
    5040:	mov	x0, x19
    5044:	bl	4df0 <PySequence_Fast@plt+0xbb0>
    5048:	mov	w0, #0xffffffff            	// #-1
    504c:	b	5034 <PySequence_Fast@plt+0xdf4>
    5050:	mov	w0, #0xffffffff            	// #-1
    5054:	b	5034 <PySequence_Fast@plt+0xdf4>
    5058:	stp	x29, x30, [sp, #-32]!
    505c:	mov	x29, sp
    5060:	stp	x19, x20, [sp, #16]
    5064:	mov	x20, x0
    5068:	mov	x19, x1
    506c:	ldr	x0, [x1, #8]
    5070:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x136c8>
    5074:	add	x1, x1, #0x320
    5078:	cmp	x0, x1
    507c:	b.eq	5090 <PySequence_Fast@plt+0xe50>  // b.none
    5080:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x136c8>
    5084:	add	x1, x1, #0x320
    5088:	bl	4160 <PyType_IsSubtype@plt>
    508c:	cbz	w0, 50c0 <PySequence_Fast@plt+0xe80>
    5090:	mov	x1, x19
    5094:	mov	x0, x20
    5098:	bl	4fbc <PySequence_Fast@plt+0xd7c>
    509c:	tbnz	w0, #31, 50e8 <PySequence_Fast@plt+0xea8>
    50a0:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    50a4:	ldr	x0, [x0, #3976]
    50a8:	ldr	x1, [x0]
    50ac:	add	x1, x1, #0x1
    50b0:	str	x1, [x0]
    50b4:	ldp	x19, x20, [sp, #16]
    50b8:	ldp	x29, x30, [sp], #32
    50bc:	ret
    50c0:	mov	x3, x19
    50c4:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x136c8>
    50c8:	ldr	x2, [x0, #824]
    50cc:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    50d0:	add	x1, x1, #0xc10
    50d4:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    50d8:	add	x0, x0, #0xc20
    50dc:	bl	3ed0 <_PyArg_BadArgument@plt>
    50e0:	mov	x0, #0x0                   	// #0
    50e4:	b	50b4 <PySequence_Fast@plt+0xe74>
    50e8:	mov	x0, #0x0                   	// #0
    50ec:	b	50b4 <PySequence_Fast@plt+0xe74>
    50f0:	stp	x29, x30, [sp, #-48]!
    50f4:	mov	x29, sp
    50f8:	stp	x19, x20, [sp, #16]
    50fc:	mov	x19, x0
    5100:	mov	x20, x1
    5104:	ldr	x0, [x0, #48]
    5108:	cbz	x0, 5180 <PySequence_Fast@plt+0xf40>
    510c:	ldr	x2, [x0, #8]
    5110:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    5114:	ldr	x1, [x1, #3912]
    5118:	cmp	x2, x1
    511c:	b.eq	51c0 <PySequence_Fast@plt+0xf80>  // b.none
    5120:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    5124:	ldr	x1, [x1, #4064]
    5128:	cmp	x2, x1
    512c:	b.eq	521c <PySequence_Fast@plt+0xfdc>  // b.none
    5130:	mov	x0, #0x2                   	// #2
    5134:	bl	3c50 <PyList_New@plt>
    5138:	cbz	x0, 5174 <PySequence_Fast@plt+0xf34>
    513c:	ldr	x1, [x0, #24]
    5140:	ldr	x2, [x19, #48]
    5144:	str	x2, [x1]
    5148:	ldr	x1, [x20]
    514c:	add	x1, x1, #0x1
    5150:	str	x1, [x20]
    5154:	ldr	x1, [x0, #24]
    5158:	str	x20, [x1, #8]
    515c:	str	x0, [x19, #48]
    5160:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    5164:	ldr	x0, [x0, #3976]
    5168:	ldr	x1, [x0]
    516c:	add	x1, x1, #0x1
    5170:	str	x1, [x0]
    5174:	ldp	x19, x20, [sp, #16]
    5178:	ldp	x29, x30, [sp], #48
    517c:	ret
    5180:	ldr	x0, [x19, #32]
    5184:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    5188:	ldr	x1, [x1, #3976]
    518c:	cmp	x0, x1
    5190:	b.eq	51a8 <PySequence_Fast@plt+0xf68>  // b.none
    5194:	ldr	x0, [x20]
    5198:	add	x0, x0, #0x1
    519c:	str	x0, [x20]
    51a0:	str	x20, [x19, #48]
    51a4:	b	5160 <PySequence_Fast@plt+0xf20>
    51a8:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    51ac:	ldr	x1, [x1, #3976]
    51b0:	ldr	x2, [x1]
    51b4:	add	x2, x2, #0x1
    51b8:	str	x2, [x1]
    51bc:	b	5174 <PySequence_Fast@plt+0xf34>
    51c0:	ldr	x1, [x0]
    51c4:	cmp	x1, #0x1
    51c8:	b.ne	5120 <PySequence_Fast@plt+0xee0>  // b.any
    51cc:	ldr	x3, [x20, #8]
    51d0:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    51d4:	ldr	x1, [x1, #3912]
    51d8:	cmp	x3, x1
    51dc:	b.ne	5120 <PySequence_Fast@plt+0xee0>  // b.any
    51e0:	ldr	x1, [x20, #16]
    51e4:	cmp	x1, #0x1
    51e8:	b.ne	5120 <PySequence_Fast@plt+0xee0>  // b.any
    51ec:	str	x21, [sp, #32]
    51f0:	ldr	x21, [x0, #16]
    51f4:	add	x1, x21, #0x1
    51f8:	add	x0, x19, #0x30
    51fc:	bl	3ca0 <_PyBytes_Resize@plt>
    5200:	tbnz	w0, #31, 5230 <PySequence_Fast@plt+0xff0>
    5204:	ldrb	w1, [x20, #32]
    5208:	ldr	x0, [x19, #48]
    520c:	add	x0, x0, x21
    5210:	strb	w1, [x0, #32]
    5214:	ldr	x21, [sp, #32]
    5218:	b	5160 <PySequence_Fast@plt+0xf20>
    521c:	mov	x1, x20
    5220:	bl	3f00 <PyList_Append@plt>
    5224:	tbz	w0, #31, 5160 <PySequence_Fast@plt+0xf20>
    5228:	mov	x0, #0x0                   	// #0
    522c:	b	5174 <PySequence_Fast@plt+0xf34>
    5230:	mov	x0, #0x0                   	// #0
    5234:	ldr	x21, [sp, #32]
    5238:	b	5174 <PySequence_Fast@plt+0xf34>
    523c:	stp	x29, x30, [sp, #-16]!
    5240:	mov	x29, sp
    5244:	bl	50f0 <PySequence_Fast@plt+0xeb0>
    5248:	ldp	x29, x30, [sp], #16
    524c:	ret
    5250:	stp	x29, x30, [sp, #-32]!
    5254:	mov	x29, sp
    5258:	str	x19, [sp, #16]
    525c:	mov	x19, x0
    5260:	mov	x2, #0x1                   	// #1
    5264:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    5268:	add	x1, x1, #0xc28
    526c:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    5270:	ldr	x0, [x0, #3936]
    5274:	ldr	x0, [x0]
    5278:	bl	3d60 <PyErr_WarnEx@plt>
    527c:	tbnz	w0, #31, 52ec <PySequence_Fast@plt+0x10ac>
    5280:	ldr	x0, [x19, #40]
    5284:	cbz	x0, 52e4 <PySequence_Fast@plt+0x10a4>
    5288:	ldr	x0, [x0, #8]
    528c:	bl	3c50 <PyList_New@plt>
    5290:	cbz	x0, 52d8 <PySequence_Fast@plt+0x1098>
    5294:	ldr	x2, [x19, #40]
    5298:	ldr	x1, [x2, #8]
    529c:	cmp	x1, #0x0
    52a0:	b.le	52d8 <PySequence_Fast@plt+0x1098>
    52a4:	mov	x1, #0x0                   	// #0
    52a8:	ldr	x2, [x2, #24]
    52ac:	ldr	x2, [x2, x1, lsl #3]
    52b0:	ldr	x3, [x2]
    52b4:	add	x3, x3, #0x1
    52b8:	str	x3, [x2]
    52bc:	ldr	x3, [x0, #24]
    52c0:	str	x2, [x3, x1, lsl #3]
    52c4:	add	x1, x1, #0x1
    52c8:	ldr	x2, [x19, #40]
    52cc:	ldr	x3, [x2, #8]
    52d0:	cmp	x1, x3
    52d4:	b.lt	52a8 <PySequence_Fast@plt+0x1068>  // b.tstop
    52d8:	ldr	x19, [sp, #16]
    52dc:	ldp	x29, x30, [sp], #32
    52e0:	ret
    52e4:	bl	3c50 <PyList_New@plt>
    52e8:	b	52d8 <PySequence_Fast@plt+0x1098>
    52ec:	mov	x0, #0x0                   	// #0
    52f0:	b	52d8 <PySequence_Fast@plt+0x1098>
    52f4:	stp	x29, x30, [sp, #-16]!
    52f8:	mov	x29, sp
    52fc:	mov	w3, #0x9                   	// #9
    5300:	mov	w2, #0x2                   	// #2
    5304:	mov	w1, w2
    5308:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    530c:	add	x0, x0, #0xc90
    5310:	bl	3c30 <PyUnicode_FromFormat@plt>
    5314:	ldp	x29, x30, [sp], #16
    5318:	ret
    531c:	stp	x29, x30, [sp, #-80]!
    5320:	mov	x29, sp
    5324:	stp	x19, x20, [sp, #16]
    5328:	stp	x21, x22, [sp, #32]
    532c:	stp	x23, x24, [sp, #48]
    5330:	mov	x23, x0
    5334:	mov	x21, x1
    5338:	mov	x0, x1
    533c:	bl	3c70 <strlen@plt>
    5340:	mov	x22, x0
    5344:	mov	x24, x0
    5348:	mov	x1, x0
    534c:	mov	x0, x21
    5350:	bl	3d40 <PyBytes_FromStringAndSize@plt>
    5354:	mov	x19, x0
    5358:	cbz	x0, 5530 <PySequence_Fast@plt+0x12f0>
    535c:	mov	x1, x0
    5360:	ldr	x0, [x23, #40]
    5364:	bl	4230 <PyDict_GetItemWithError@plt>
    5368:	mov	x20, x0
    536c:	cbz	x0, 53a4 <PySequence_Fast@plt+0x1164>
    5370:	ldr	x0, [x0]
    5374:	add	x0, x0, #0x1
    5378:	str	x0, [x20]
    537c:	ldr	x0, [x19]
    5380:	sub	x0, x0, #0x1
    5384:	str	x0, [x19]
    5388:	cbz	x0, 5524 <PySequence_Fast@plt+0x12e4>
    538c:	mov	x0, x20
    5390:	ldp	x19, x20, [sp, #16]
    5394:	ldp	x21, x22, [sp, #32]
    5398:	ldp	x23, x24, [sp, #48]
    539c:	ldp	x29, x30, [sp], #80
    53a0:	ret
    53a4:	stp	x25, x26, [sp, #64]
    53a8:	bl	3f80 <PyErr_Occurred@plt>
    53ac:	mov	x25, x0
    53b0:	cbz	x0, 53bc <PySequence_Fast@plt+0x117c>
    53b4:	ldp	x25, x26, [sp, #64]
    53b8:	b	537c <PySequence_Fast@plt+0x113c>
    53bc:	cmp	x22, #0x0
    53c0:	b.le	5438 <PySequence_Fast@plt+0x11f8>
    53c4:	mov	x1, #0x0                   	// #0
    53c8:	ldrb	w2, [x21, x1]
    53cc:	cmp	w2, #0x7d
    53d0:	b.eq	543c <PySequence_Fast@plt+0x11fc>  // b.none
    53d4:	add	x1, x1, #0x1
    53d8:	cmp	x24, x1
    53dc:	b.ne	53c8 <PySequence_Fast@plt+0x1188>  // b.any
    53e0:	ldr	x0, [x19]
    53e4:	add	x0, x0, #0x1
    53e8:	str	x0, [x19]
    53ec:	mov	x26, x19
    53f0:	adrp	x2, c000 <PySequence_Fast@plt+0x7dc0>
    53f4:	add	x2, x2, #0xca0
    53f8:	mov	x1, x24
    53fc:	add	x0, x26, #0x20
    5400:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    5404:	mov	x20, x0
    5408:	ldr	x0, [x26]
    540c:	sub	x0, x0, #0x1
    5410:	str	x0, [x26]
    5414:	cbz	x0, 54a4 <PySequence_Fast@plt+0x1264>
    5418:	cbz	x20, 54b0 <PySequence_Fast@plt+0x1270>
    541c:	mov	x2, x20
    5420:	mov	x1, x19
    5424:	ldr	x0, [x23, #40]
    5428:	bl	4140 <PyDict_SetItem@plt>
    542c:	tbnz	w0, #31, 54d8 <PySequence_Fast@plt+0x1298>
    5430:	ldp	x25, x26, [sp, #64]
    5434:	b	537c <PySequence_Fast@plt+0x113c>
    5438:	mov	x1, #0x0                   	// #0
    543c:	cmp	x22, x1
    5440:	b.eq	53e0 <PySequence_Fast@plt+0x11a0>  // b.none
    5444:	add	x24, x22, #0x1
    5448:	mov	x1, x24
    544c:	mov	x0, #0x0                   	// #0
    5450:	bl	3d40 <PyBytes_FromStringAndSize@plt>
    5454:	mov	x26, x0
    5458:	cbz	x0, 5478 <PySequence_Fast@plt+0x1238>
    545c:	mov	w0, #0x7b                  	// #123
    5460:	strb	w0, [x26, #32]
    5464:	mov	x2, x22
    5468:	mov	x1, x21
    546c:	add	x0, x26, #0x21
    5470:	bl	3c20 <memcpy@plt>
    5474:	b	53f0 <PySequence_Fast@plt+0x11b0>
    5478:	ldr	x0, [x19]
    547c:	sub	x0, x0, #0x1
    5480:	str	x0, [x19]
    5484:	mov	x20, x26
    5488:	cbz	x0, 5494 <PySequence_Fast@plt+0x1254>
    548c:	ldp	x25, x26, [sp, #64]
    5490:	b	538c <PySequence_Fast@plt+0x114c>
    5494:	mov	x0, x19
    5498:	bl	3d70 <_Py_Dealloc@plt>
    549c:	ldp	x25, x26, [sp, #64]
    54a0:	b	538c <PySequence_Fast@plt+0x114c>
    54a4:	mov	x0, x26
    54a8:	bl	3d70 <_Py_Dealloc@plt>
    54ac:	b	5418 <PySequence_Fast@plt+0x11d8>
    54b0:	ldr	x0, [x19]
    54b4:	sub	x0, x0, #0x1
    54b8:	str	x0, [x19]
    54bc:	cbz	x0, 54c8 <PySequence_Fast@plt+0x1288>
    54c0:	ldp	x25, x26, [sp, #64]
    54c4:	b	538c <PySequence_Fast@plt+0x114c>
    54c8:	mov	x0, x19
    54cc:	bl	3d70 <_Py_Dealloc@plt>
    54d0:	ldp	x25, x26, [sp, #64]
    54d4:	b	538c <PySequence_Fast@plt+0x114c>
    54d8:	ldr	x0, [x19]
    54dc:	sub	x0, x0, #0x1
    54e0:	str	x0, [x19]
    54e4:	cbz	x0, 5504 <PySequence_Fast@plt+0x12c4>
    54e8:	ldr	x0, [x20]
    54ec:	sub	x0, x0, #0x1
    54f0:	str	x0, [x20]
    54f4:	cbz	x0, 5510 <PySequence_Fast@plt+0x12d0>
    54f8:	mov	x20, x25
    54fc:	ldp	x25, x26, [sp, #64]
    5500:	b	538c <PySequence_Fast@plt+0x114c>
    5504:	mov	x0, x19
    5508:	bl	3d70 <_Py_Dealloc@plt>
    550c:	b	54e8 <PySequence_Fast@plt+0x12a8>
    5510:	mov	x0, x20
    5514:	bl	3d70 <_Py_Dealloc@plt>
    5518:	mov	x20, x25
    551c:	ldp	x25, x26, [sp, #64]
    5520:	b	538c <PySequence_Fast@plt+0x114c>
    5524:	mov	x0, x19
    5528:	bl	3d70 <_Py_Dealloc@plt>
    552c:	b	538c <PySequence_Fast@plt+0x114c>
    5530:	mov	x20, x0
    5534:	b	538c <PySequence_Fast@plt+0x114c>
    5538:	stp	x29, x30, [sp, #-32]!
    553c:	mov	x29, sp
    5540:	stp	x19, x20, [sp, #16]
    5544:	mov	x20, x0
    5548:	mov	x1, #0x0                   	// #0
    554c:	adrp	x0, d000 <PyInit__elementtree@@Base+0x6c8>
    5550:	add	x0, x0, #0x600
    5554:	bl	41b0 <PyUnicode_FromStringAndSize@plt>
    5558:	mov	x19, x0
    555c:	cbz	x0, 5598 <PySequence_Fast@plt+0x1358>
    5560:	mov	x1, x20
    5564:	bl	3d20 <PyUnicode_Join@plt>
    5568:	mov	x20, x0
    556c:	ldr	x1, [x19]
    5570:	sub	x1, x1, #0x1
    5574:	str	x1, [x19]
    5578:	cbz	x1, 558c <PySequence_Fast@plt+0x134c>
    557c:	mov	x0, x20
    5580:	ldp	x19, x20, [sp, #16]
    5584:	ldp	x29, x30, [sp], #32
    5588:	ret
    558c:	mov	x0, x19
    5590:	bl	3d70 <_Py_Dealloc@plt>
    5594:	b	557c <PySequence_Fast@plt+0x133c>
    5598:	mov	x20, x0
    559c:	b	557c <PySequence_Fast@plt+0x133c>
    55a0:	stp	x29, x30, [sp, #-64]!
    55a4:	mov	x29, sp
    55a8:	stp	x19, x20, [sp, #16]
    55ac:	stp	x23, x24, [sp, #48]
    55b0:	mov	x20, x0
    55b4:	mov	x19, x1
    55b8:	mov	x24, x3
    55bc:	ldr	x1, [x0, #8]
    55c0:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x136c8>
    55c4:	add	x0, x0, #0x320
    55c8:	cmp	x1, x0
    55cc:	b.eq	5698 <PySequence_Fast@plt+0x1458>  // b.none
    55d0:	stp	x21, x22, [sp, #32]
    55d4:	mov	x1, x24
    55d8:	mov	x0, x20
    55dc:	bl	40f0 <_PyObject_GetAttrId@plt>
    55e0:	mov	x21, x0
    55e4:	cbz	x0, 57e8 <PySequence_Fast@plt+0x15a8>
    55e8:	ldr	x0, [x19]
    55ec:	bl	5538 <PySequence_Fast@plt+0x12f8>
    55f0:	mov	x22, x0
    55f4:	cbz	x0, 5750 <PySequence_Fast@plt+0x1510>
    55f8:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    55fc:	ldr	x0, [x0, #3976]
    5600:	cmp	x21, x0
    5604:	b.eq	5798 <PySequence_Fast@plt+0x1558>  // b.none
    5608:	mov	x1, x22
    560c:	mov	x0, x21
    5610:	bl	3cf0 <PyNumber_Add@plt>
    5614:	mov	x23, x0
    5618:	ldr	x0, [x22]
    561c:	sub	x0, x0, #0x1
    5620:	str	x0, [x22]
    5624:	cbz	x0, 5780 <PySequence_Fast@plt+0x1540>
    5628:	ldr	x0, [x21]
    562c:	sub	x0, x0, #0x1
    5630:	str	x0, [x21]
    5634:	cbz	x0, 578c <PySequence_Fast@plt+0x154c>
    5638:	cbz	x23, 57f4 <PySequence_Fast@plt+0x15b4>
    563c:	mov	x2, x23
    5640:	mov	x1, x24
    5644:	mov	x0, x20
    5648:	bl	4000 <_PyObject_SetAttrId@plt>
    564c:	mov	w20, w0
    5650:	ldr	x1, [x23]
    5654:	sub	x1, x1, #0x1
    5658:	str	x1, [x23]
    565c:	cbz	x1, 57c0 <PySequence_Fast@plt+0x1580>
    5660:	tbnz	w20, #31, 5800 <PySequence_Fast@plt+0x15c0>
    5664:	ldr	x1, [x19]
    5668:	mov	w0, #0x0                   	// #0
    566c:	cbz	x1, 580c <PySequence_Fast@plt+0x15cc>
    5670:	str	xzr, [x19]
    5674:	ldr	x2, [x1]
    5678:	sub	x2, x2, #0x1
    567c:	str	x2, [x1]
    5680:	cbz	x2, 57cc <PySequence_Fast@plt+0x158c>
    5684:	ldp	x21, x22, [sp, #32]
    5688:	ldp	x19, x20, [sp, #16]
    568c:	ldp	x23, x24, [sp, #48]
    5690:	ldp	x29, x30, [sp], #64
    5694:	ret
    5698:	ldr	x3, [x2]
    569c:	and	x0, x3, #0xfffffffffffffffe
    56a0:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    56a4:	ldr	x1, [x1, #3976]
    56a8:	cmp	x0, x1
    56ac:	b.eq	56f8 <PySequence_Fast@plt+0x14b8>  // b.none
    56b0:	tbz	w3, #0, 55d0 <PySequence_Fast@plt+0x1390>
    56b4:	ldr	x3, [x19]
    56b8:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
    56bc:	mov	x1, x2
    56c0:	bl	3d30 <PyList_SetSlice@plt>
    56c4:	tbnz	w0, #31, 57e0 <PySequence_Fast@plt+0x15a0>
    56c8:	ldr	x1, [x19]
    56cc:	mov	w0, #0x0                   	// #0
    56d0:	cbz	x1, 5688 <PySequence_Fast@plt+0x1448>
    56d4:	str	xzr, [x19]
    56d8:	ldr	x2, [x1]
    56dc:	sub	x2, x2, #0x1
    56e0:	str	x2, [x1]
    56e4:	cbnz	x2, 5688 <PySequence_Fast@plt+0x1448>
    56e8:	mov	x0, x1
    56ec:	bl	3d70 <_Py_Dealloc@plt>
    56f0:	mov	w0, #0x0                   	// #0
    56f4:	b	5688 <PySequence_Fast@plt+0x1448>
    56f8:	ldr	x0, [x19]
    56fc:	ldr	x3, [x0, #8]
    5700:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    5704:	ldr	x1, [x1, #4064]
    5708:	cmp	x3, x1
    570c:	cset	x1, eq  // eq = none
    5710:	and	x0, x0, #0xfffffffffffffffe
    5714:	orr	x0, x1, x0
    5718:	str	x0, [x2]
    571c:	str	xzr, [x19]
    5720:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    5724:	ldr	x0, [x0, #3976]
    5728:	ldr	x1, [x0]
    572c:	sub	x1, x1, #0x1
    5730:	str	x1, [x0]
    5734:	mov	w0, #0x0                   	// #0
    5738:	cbnz	x1, 5688 <PySequence_Fast@plt+0x1448>
    573c:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    5740:	ldr	x0, [x0, #3976]
    5744:	bl	3d70 <_Py_Dealloc@plt>
    5748:	mov	w0, #0x0                   	// #0
    574c:	b	5688 <PySequence_Fast@plt+0x1448>
    5750:	ldr	x1, [x21]
    5754:	sub	x1, x1, #0x1
    5758:	str	x1, [x21]
    575c:	mov	w0, #0xffffffff            	// #-1
    5760:	cbz	x1, 576c <PySequence_Fast@plt+0x152c>
    5764:	ldp	x21, x22, [sp, #32]
    5768:	b	5688 <PySequence_Fast@plt+0x1448>
    576c:	mov	x0, x21
    5770:	bl	3d70 <_Py_Dealloc@plt>
    5774:	mov	w0, #0xffffffff            	// #-1
    5778:	ldp	x21, x22, [sp, #32]
    577c:	b	5688 <PySequence_Fast@plt+0x1448>
    5780:	mov	x0, x22
    5784:	bl	3d70 <_Py_Dealloc@plt>
    5788:	b	5628 <PySequence_Fast@plt+0x13e8>
    578c:	mov	x0, x21
    5790:	bl	3d70 <_Py_Dealloc@plt>
    5794:	b	5638 <PySequence_Fast@plt+0x13f8>
    5798:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    579c:	ldr	x1, [x1, #3976]
    57a0:	ldr	x0, [x1]
    57a4:	sub	x0, x0, #0x1
    57a8:	str	x0, [x1]
    57ac:	mov	x23, x22
    57b0:	cbnz	x0, 563c <PySequence_Fast@plt+0x13fc>
    57b4:	mov	x0, x1
    57b8:	bl	3d70 <_Py_Dealloc@plt>
    57bc:	b	563c <PySequence_Fast@plt+0x13fc>
    57c0:	mov	x0, x23
    57c4:	bl	3d70 <_Py_Dealloc@plt>
    57c8:	b	5660 <PySequence_Fast@plt+0x1420>
    57cc:	mov	x0, x1
    57d0:	bl	3d70 <_Py_Dealloc@plt>
    57d4:	mov	w0, #0x0                   	// #0
    57d8:	ldp	x21, x22, [sp, #32]
    57dc:	b	5688 <PySequence_Fast@plt+0x1448>
    57e0:	mov	w0, #0xffffffff            	// #-1
    57e4:	b	5688 <PySequence_Fast@plt+0x1448>
    57e8:	mov	w0, #0xffffffff            	// #-1
    57ec:	ldp	x21, x22, [sp, #32]
    57f0:	b	5688 <PySequence_Fast@plt+0x1448>
    57f4:	mov	w0, #0xffffffff            	// #-1
    57f8:	ldp	x21, x22, [sp, #32]
    57fc:	b	5688 <PySequence_Fast@plt+0x1448>
    5800:	mov	w0, #0xffffffff            	// #-1
    5804:	ldp	x21, x22, [sp, #32]
    5808:	b	5688 <PySequence_Fast@plt+0x1448>
    580c:	ldp	x21, x22, [sp, #32]
    5810:	b	5688 <PySequence_Fast@plt+0x1448>
    5814:	mov	x1, x0
    5818:	ldr	x0, [x0, #48]
    581c:	cbz	x0, 5870 <PySequence_Fast@plt+0x1630>
    5820:	stp	x29, x30, [sp, #-16]!
    5824:	mov	x29, sp
    5828:	ldr	x0, [x1, #40]
    582c:	cbz	x0, 5850 <PySequence_Fast@plt+0x1610>
    5830:	adrp	x3, 20000 <PyInit__elementtree@@Base+0x136c8>
    5834:	add	x3, x3, #0x9b8
    5838:	add	x3, x3, #0x118
    583c:	add	x2, x0, #0x20
    5840:	add	x1, x1, #0x30
    5844:	bl	55a0 <PySequence_Fast@plt+0x1360>
    5848:	ldp	x29, x30, [sp], #16
    584c:	ret
    5850:	ldr	x0, [x1, #32]
    5854:	adrp	x3, 20000 <PyInit__elementtree@@Base+0x136c8>
    5858:	add	x3, x3, #0x9b8
    585c:	add	x3, x3, #0x100
    5860:	add	x2, x0, #0x18
    5864:	add	x1, x1, #0x30
    5868:	bl	55a0 <PySequence_Fast@plt+0x1360>
    586c:	b	5848 <PySequence_Fast@plt+0x1608>
    5870:	mov	w0, #0x0                   	// #0
    5874:	ret
    5878:	stp	x29, x30, [sp, #-16]!
    587c:	mov	x29, sp
    5880:	mov	x2, x1
    5884:	ldr	x1, [x0, #8]
    5888:	adrp	x3, 20000 <PyInit__elementtree@@Base+0x136c8>
    588c:	add	x3, x3, #0x320
    5890:	cmp	x1, x3
    5894:	b.eq	58d0 <PySequence_Fast@plt+0x1690>  // b.none
    5898:	mov	x3, #0x0                   	// #0
    589c:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x136c8>
    58a0:	add	x1, x1, #0x9b8
    58a4:	add	x1, x1, #0x130
    58a8:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    58ac:	mov	x1, x0
    58b0:	cbz	x0, 58ec <PySequence_Fast@plt+0x16ac>
    58b4:	ldr	x2, [x0]
    58b8:	sub	x2, x2, #0x1
    58bc:	str	x2, [x0]
    58c0:	mov	w0, #0x0                   	// #0
    58c4:	cbz	x2, 58dc <PySequence_Fast@plt+0x169c>
    58c8:	ldp	x29, x30, [sp], #16
    58cc:	ret
    58d0:	mov	x1, x2
    58d4:	bl	4fbc <PySequence_Fast@plt+0xd7c>
    58d8:	b	58c8 <PySequence_Fast@plt+0x1688>
    58dc:	mov	x0, x1
    58e0:	bl	3d70 <_Py_Dealloc@plt>
    58e4:	mov	w0, #0x0                   	// #0
    58e8:	b	58c8 <PySequence_Fast@plt+0x1688>
    58ec:	mov	w0, #0xffffffff            	// #-1
    58f0:	b	58c8 <PySequence_Fast@plt+0x1688>
    58f4:	stp	x29, x30, [sp, #-48]!
    58f8:	mov	x29, sp
    58fc:	stp	x19, x20, [sp, #16]
    5900:	str	x21, [sp, #32]
    5904:	mov	x20, x0
    5908:	mov	x21, x1
    590c:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x136c8>
    5910:	add	x0, x0, #0x320
    5914:	bl	3df0 <_PyObject_GC_New@plt>
    5918:	mov	x19, x0
    591c:	cbz	x0, 5988 <PySequence_Fast@plt+0x1748>
    5920:	str	xzr, [x0, #40]
    5924:	ldr	x0, [x20]
    5928:	add	x0, x0, #0x1
    592c:	str	x0, [x20]
    5930:	str	x20, [x19, #16]
    5934:	adrp	x20, 1f000 <PyInit__elementtree@@Base+0x126c8>
    5938:	ldr	x20, [x20, #3976]
    593c:	ldr	x0, [x20]
    5940:	str	x20, [x19, #24]
    5944:	add	x0, x0, #0x2
    5948:	str	x0, [x20]
    594c:	str	x20, [x19, #32]
    5950:	str	xzr, [x19, #48]
    5954:	mov	x0, x19
    5958:	bl	3dc0 <PyObject_GC_Track@plt>
    595c:	cmp	x21, x20
    5960:	b.eq	5988 <PySequence_Fast@plt+0x1748>  // b.none
    5964:	ldr	x1, [x21, #8]
    5968:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    596c:	ldr	x0, [x0, #3992]
    5970:	cmp	x1, x0
    5974:	b.eq	599c <PySequence_Fast@plt+0x175c>  // b.none
    5978:	mov	x1, x21
    597c:	mov	x0, x19
    5980:	bl	4e20 <PySequence_Fast@plt+0xbe0>
    5984:	tbnz	w0, #31, 59a8 <PySequence_Fast@plt+0x1768>
    5988:	mov	x0, x19
    598c:	ldp	x19, x20, [sp, #16]
    5990:	ldr	x21, [sp, #32]
    5994:	ldp	x29, x30, [sp], #48
    5998:	ret
    599c:	ldr	x0, [x21, #16]
    59a0:	cbz	x0, 5988 <PySequence_Fast@plt+0x1748>
    59a4:	b	5978 <PySequence_Fast@plt+0x1738>
    59a8:	ldr	x0, [x19]
    59ac:	sub	x0, x0, #0x1
    59b0:	str	x0, [x19]
    59b4:	cbz	x0, 59c0 <PySequence_Fast@plt+0x1780>
    59b8:	mov	x19, #0x0                   	// #0
    59bc:	b	5988 <PySequence_Fast@plt+0x1748>
    59c0:	mov	x0, x19
    59c4:	bl	3d70 <_Py_Dealloc@plt>
    59c8:	mov	x19, #0x0                   	// #0
    59cc:	b	5988 <PySequence_Fast@plt+0x1748>
    59d0:	stp	x29, x30, [sp, #-32]!
    59d4:	mov	x29, sp
    59d8:	stp	x19, x20, [sp, #16]
    59dc:	ldr	x2, [x0, #304]
    59e0:	mov	x1, #0x0                   	// #0
    59e4:	blr	x2
    59e8:	mov	x19, x0
    59ec:	cbz	x0, 5a5c <PySequence_Fast@plt+0x181c>
    59f0:	str	xzr, [x0, #16]
    59f4:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    59f8:	ldr	x0, [x0, #3976]
    59fc:	ldr	x1, [x0]
    5a00:	str	x0, [x19, #24]
    5a04:	add	x1, x1, #0x2
    5a08:	str	x1, [x0]
    5a0c:	str	x0, [x19, #32]
    5a10:	str	xzr, [x19, #48]
    5a14:	str	xzr, [x19, #72]
    5a18:	str	xzr, [x19, #80]
    5a1c:	str	xzr, [x19, #88]
    5a20:	mov	x0, #0x14                  	// #20
    5a24:	bl	3c50 <PyList_New@plt>
    5a28:	mov	x20, x0
    5a2c:	str	x0, [x19, #56]
    5a30:	cbz	x0, 5a6c <PySequence_Fast@plt+0x182c>
    5a34:	str	xzr, [x19, #64]
    5a38:	str	xzr, [x19, #96]
    5a3c:	str	xzr, [x19, #112]
    5a40:	str	xzr, [x19, #104]
    5a44:	str	xzr, [x19, #128]
    5a48:	str	xzr, [x19, #120]
    5a4c:	str	xzr, [x19, #144]
    5a50:	str	xzr, [x19, #136]
    5a54:	strb	wzr, [x19, #153]
    5a58:	strb	wzr, [x19, #152]
    5a5c:	mov	x0, x19
    5a60:	ldp	x19, x20, [sp, #16]
    5a64:	ldp	x29, x30, [sp], #32
    5a68:	ret
    5a6c:	ldr	x0, [x19, #24]
    5a70:	ldr	x1, [x0]
    5a74:	sub	x1, x1, #0x1
    5a78:	str	x1, [x0]
    5a7c:	cbz	x1, 5aac <PySequence_Fast@plt+0x186c>
    5a80:	ldr	x0, [x19, #32]
    5a84:	ldr	x1, [x0]
    5a88:	sub	x1, x1, #0x1
    5a8c:	str	x1, [x0]
    5a90:	cbz	x1, 5ab4 <PySequence_Fast@plt+0x1874>
    5a94:	ldr	x0, [x19]
    5a98:	sub	x0, x0, #0x1
    5a9c:	str	x0, [x19]
    5aa0:	cbz	x0, 5abc <PySequence_Fast@plt+0x187c>
    5aa4:	mov	x19, x20
    5aa8:	b	5a5c <PySequence_Fast@plt+0x181c>
    5aac:	bl	3d70 <_Py_Dealloc@plt>
    5ab0:	b	5a80 <PySequence_Fast@plt+0x1840>
    5ab4:	bl	3d70 <_Py_Dealloc@plt>
    5ab8:	b	5a94 <PySequence_Fast@plt+0x1854>
    5abc:	mov	x0, x19
    5ac0:	bl	3d70 <_Py_Dealloc@plt>
    5ac4:	mov	x19, x20
    5ac8:	b	5a5c <PySequence_Fast@plt+0x181c>
    5acc:	stp	x29, x30, [sp, #-32]!
    5ad0:	mov	x29, sp
    5ad4:	str	x19, [sp, #16]
    5ad8:	mov	x19, x0
    5adc:	ldr	x0, [x0, #16]
    5ae0:	cbz	x0, 5af8 <PySequence_Fast@plt+0x18b8>
    5ae4:	str	xzr, [x19, #16]
    5ae8:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x146c8>
    5aec:	ldr	x1, [x1, #1072]
    5af0:	ldr	x1, [x1, #72]
    5af4:	blr	x1
    5af8:	ldr	x0, [x19, #112]
    5afc:	cbz	x0, 5b14 <PySequence_Fast@plt+0x18d4>
    5b00:	str	xzr, [x19, #112]
    5b04:	ldr	x1, [x0]
    5b08:	sub	x1, x1, #0x1
    5b0c:	str	x1, [x0]
    5b10:	cbz	x1, 5c58 <PySequence_Fast@plt+0x1a18>
    5b14:	ldr	x0, [x19, #96]
    5b18:	cbz	x0, 5b30 <PySequence_Fast@plt+0x18f0>
    5b1c:	str	xzr, [x19, #96]
    5b20:	ldr	x1, [x0]
    5b24:	sub	x1, x1, #0x1
    5b28:	str	x1, [x0]
    5b2c:	cbz	x1, 5c60 <PySequence_Fast@plt+0x1a20>
    5b30:	ldr	x0, [x19, #88]
    5b34:	cbz	x0, 5b4c <PySequence_Fast@plt+0x190c>
    5b38:	str	xzr, [x19, #88]
    5b3c:	ldr	x1, [x0]
    5b40:	sub	x1, x1, #0x1
    5b44:	str	x1, [x0]
    5b48:	cbz	x1, 5c68 <PySequence_Fast@plt+0x1a28>
    5b4c:	ldr	x0, [x19, #80]
    5b50:	cbz	x0, 5b68 <PySequence_Fast@plt+0x1928>
    5b54:	str	xzr, [x19, #80]
    5b58:	ldr	x1, [x0]
    5b5c:	sub	x1, x1, #0x1
    5b60:	str	x1, [x0]
    5b64:	cbz	x1, 5c70 <PySequence_Fast@plt+0x1a30>
    5b68:	ldr	x0, [x19, #72]
    5b6c:	cbz	x0, 5b84 <PySequence_Fast@plt+0x1944>
    5b70:	str	xzr, [x19, #72]
    5b74:	ldr	x1, [x0]
    5b78:	sub	x1, x1, #0x1
    5b7c:	str	x1, [x0]
    5b80:	cbz	x1, 5c78 <PySequence_Fast@plt+0x1a38>
    5b84:	ldr	x0, [x19, #64]
    5b88:	cbz	x0, 5ba0 <PySequence_Fast@plt+0x1960>
    5b8c:	str	xzr, [x19, #64]
    5b90:	ldr	x1, [x0]
    5b94:	sub	x1, x1, #0x1
    5b98:	str	x1, [x0]
    5b9c:	cbz	x1, 5c80 <PySequence_Fast@plt+0x1a40>
    5ba0:	ldr	x0, [x19, #48]
    5ba4:	cbz	x0, 5bbc <PySequence_Fast@plt+0x197c>
    5ba8:	str	xzr, [x19, #48]
    5bac:	ldr	x1, [x0]
    5bb0:	sub	x1, x1, #0x1
    5bb4:	str	x1, [x0]
    5bb8:	cbz	x1, 5c88 <PySequence_Fast@plt+0x1a48>
    5bbc:	ldr	x0, [x19, #56]
    5bc0:	cbz	x0, 5bd8 <PySequence_Fast@plt+0x1998>
    5bc4:	str	xzr, [x19, #56]
    5bc8:	ldr	x1, [x0]
    5bcc:	sub	x1, x1, #0x1
    5bd0:	str	x1, [x0]
    5bd4:	cbz	x1, 5c90 <PySequence_Fast@plt+0x1a50>
    5bd8:	ldr	x0, [x19, #104]
    5bdc:	cbz	x0, 5bf4 <PySequence_Fast@plt+0x19b4>
    5be0:	str	xzr, [x19, #104]
    5be4:	ldr	x1, [x0]
    5be8:	sub	x1, x1, #0x1
    5bec:	str	x1, [x0]
    5bf0:	cbz	x1, 5c98 <PySequence_Fast@plt+0x1a58>
    5bf4:	ldr	x0, [x19, #24]
    5bf8:	cbz	x0, 5c10 <PySequence_Fast@plt+0x19d0>
    5bfc:	str	xzr, [x19, #24]
    5c00:	ldr	x1, [x0]
    5c04:	sub	x1, x1, #0x1
    5c08:	str	x1, [x0]
    5c0c:	cbz	x1, 5ca0 <PySequence_Fast@plt+0x1a60>
    5c10:	ldr	x0, [x19, #32]
    5c14:	cbz	x0, 5c2c <PySequence_Fast@plt+0x19ec>
    5c18:	str	xzr, [x19, #32]
    5c1c:	ldr	x1, [x0]
    5c20:	sub	x1, x1, #0x1
    5c24:	str	x1, [x0]
    5c28:	cbz	x1, 5ca8 <PySequence_Fast@plt+0x1a68>
    5c2c:	ldr	x0, [x19, #40]
    5c30:	cbz	x0, 5c48 <PySequence_Fast@plt+0x1a08>
    5c34:	str	xzr, [x19, #40]
    5c38:	ldr	x1, [x0]
    5c3c:	sub	x1, x1, #0x1
    5c40:	str	x1, [x0]
    5c44:	cbz	x1, 5cb0 <PySequence_Fast@plt+0x1a70>
    5c48:	mov	w0, #0x0                   	// #0
    5c4c:	ldr	x19, [sp, #16]
    5c50:	ldp	x29, x30, [sp], #32
    5c54:	ret
    5c58:	bl	3d70 <_Py_Dealloc@plt>
    5c5c:	b	5b14 <PySequence_Fast@plt+0x18d4>
    5c60:	bl	3d70 <_Py_Dealloc@plt>
    5c64:	b	5b30 <PySequence_Fast@plt+0x18f0>
    5c68:	bl	3d70 <_Py_Dealloc@plt>
    5c6c:	b	5b4c <PySequence_Fast@plt+0x190c>
    5c70:	bl	3d70 <_Py_Dealloc@plt>
    5c74:	b	5b68 <PySequence_Fast@plt+0x1928>
    5c78:	bl	3d70 <_Py_Dealloc@plt>
    5c7c:	b	5b84 <PySequence_Fast@plt+0x1944>
    5c80:	bl	3d70 <_Py_Dealloc@plt>
    5c84:	b	5ba0 <PySequence_Fast@plt+0x1960>
    5c88:	bl	3d70 <_Py_Dealloc@plt>
    5c8c:	b	5bbc <PySequence_Fast@plt+0x197c>
    5c90:	bl	3d70 <_Py_Dealloc@plt>
    5c94:	b	5bd8 <PySequence_Fast@plt+0x1998>
    5c98:	bl	3d70 <_Py_Dealloc@plt>
    5c9c:	b	5bf4 <PySequence_Fast@plt+0x19b4>
    5ca0:	bl	3d70 <_Py_Dealloc@plt>
    5ca4:	b	5c10 <PySequence_Fast@plt+0x19d0>
    5ca8:	bl	3d70 <_Py_Dealloc@plt>
    5cac:	b	5c2c <PySequence_Fast@plt+0x19ec>
    5cb0:	bl	3d70 <_Py_Dealloc@plt>
    5cb4:	b	5c48 <PySequence_Fast@plt+0x1a08>
    5cb8:	stp	x29, x30, [sp, #-16]!
    5cbc:	mov	x29, sp
    5cc0:	cbz	x1, 5cf8 <PySequence_Fast@plt+0x1ab8>
    5cc4:	ldr	x2, [x1]
    5cc8:	add	x2, x2, #0x1
    5ccc:	str	x2, [x1]
    5cd0:	ldr	x2, [x0, #32]
    5cd4:	and	x2, x2, #0xfffffffffffffffe
    5cd8:	str	x1, [x0, #32]
    5cdc:	ldr	x1, [x2]
    5ce0:	sub	x1, x1, #0x1
    5ce4:	str	x1, [x2]
    5ce8:	mov	w0, #0x0                   	// #0
    5cec:	cbz	x1, 5d18 <PySequence_Fast@plt+0x1ad8>
    5cf0:	ldp	x29, x30, [sp], #16
    5cf4:	ret
    5cf8:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    5cfc:	add	x1, x1, #0xca8
    5d00:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    5d04:	ldr	x0, [x0, #4008]
    5d08:	ldr	x0, [x0]
    5d0c:	bl	3de0 <PyErr_SetString@plt>
    5d10:	mov	w0, #0xffffffff            	// #-1
    5d14:	b	5cf0 <PySequence_Fast@plt+0x1ab0>
    5d18:	mov	x0, x2
    5d1c:	bl	3d70 <_Py_Dealloc@plt>
    5d20:	mov	w0, #0x0                   	// #0
    5d24:	b	5cf0 <PySequence_Fast@plt+0x1ab0>
    5d28:	stp	x29, x30, [sp, #-16]!
    5d2c:	mov	x29, sp
    5d30:	cbz	x1, 5d68 <PySequence_Fast@plt+0x1b28>
    5d34:	ldr	x2, [x1]
    5d38:	add	x2, x2, #0x1
    5d3c:	str	x2, [x1]
    5d40:	ldr	x2, [x0, #24]
    5d44:	and	x2, x2, #0xfffffffffffffffe
    5d48:	str	x1, [x0, #24]
    5d4c:	ldr	x1, [x2]
    5d50:	sub	x1, x1, #0x1
    5d54:	str	x1, [x2]
    5d58:	mov	w0, #0x0                   	// #0
    5d5c:	cbz	x1, 5d88 <PySequence_Fast@plt+0x1b48>
    5d60:	ldp	x29, x30, [sp], #16
    5d64:	ret
    5d68:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    5d6c:	add	x1, x1, #0xca8
    5d70:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    5d74:	ldr	x0, [x0, #4008]
    5d78:	ldr	x0, [x0]
    5d7c:	bl	3de0 <PyErr_SetString@plt>
    5d80:	mov	w0, #0xffffffff            	// #-1
    5d84:	b	5d60 <PySequence_Fast@plt+0x1b20>
    5d88:	mov	x0, x2
    5d8c:	bl	3d70 <_Py_Dealloc@plt>
    5d90:	mov	w0, #0x0                   	// #0
    5d94:	b	5d60 <PySequence_Fast@plt+0x1b20>
    5d98:	ldr	x1, [x0]
    5d9c:	cbz	x1, 5dbc <PySequence_Fast@plt+0x1b7c>
    5da0:	mov	x2, x0
    5da4:	and	x0, x1, #0xfffffffffffffffe
    5da8:	str	xzr, [x2]
    5dac:	ldr	x1, [x0]
    5db0:	sub	x1, x1, #0x1
    5db4:	str	x1, [x0]
    5db8:	cbz	x1, 5dc0 <PySequence_Fast@plt+0x1b80>
    5dbc:	ret
    5dc0:	stp	x29, x30, [sp, #-16]!
    5dc4:	mov	x29, sp
    5dc8:	bl	3d70 <_Py_Dealloc@plt>
    5dcc:	ldp	x29, x30, [sp], #16
    5dd0:	ret
    5dd4:	stp	x29, x30, [sp, #-32]!
    5dd8:	mov	x29, sp
    5ddc:	cbz	x1, 5e2c <PySequence_Fast@plt+0x1bec>
    5de0:	stp	x19, x20, [sp, #16]
    5de4:	mov	x20, x0
    5de8:	mov	x19, x1
    5dec:	ldr	x0, [x0, #40]
    5df0:	cbz	x0, 5e4c <PySequence_Fast@plt+0x1c0c>
    5df4:	ldr	x0, [x19]
    5df8:	add	x0, x0, #0x1
    5dfc:	str	x0, [x19]
    5e00:	ldr	x0, [x20, #40]
    5e04:	ldr	x2, [x0]
    5e08:	str	x19, [x0]
    5e0c:	ldr	x1, [x2]
    5e10:	sub	x1, x1, #0x1
    5e14:	str	x1, [x2]
    5e18:	mov	w0, #0x0                   	// #0
    5e1c:	cbz	x1, 5e68 <PySequence_Fast@plt+0x1c28>
    5e20:	ldp	x19, x20, [sp, #16]
    5e24:	ldp	x29, x30, [sp], #32
    5e28:	ret
    5e2c:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    5e30:	add	x1, x1, #0xca8
    5e34:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    5e38:	ldr	x0, [x0, #4008]
    5e3c:	ldr	x0, [x0]
    5e40:	bl	3de0 <PyErr_SetString@plt>
    5e44:	mov	w0, #0xffffffff            	// #-1
    5e48:	b	5e24 <PySequence_Fast@plt+0x1be4>
    5e4c:	mov	x1, #0x0                   	// #0
    5e50:	mov	x0, x20
    5e54:	bl	4e20 <PySequence_Fast@plt+0xbe0>
    5e58:	tbz	w0, #31, 5df4 <PySequence_Fast@plt+0x1bb4>
    5e5c:	mov	w0, #0xffffffff            	// #-1
    5e60:	ldp	x19, x20, [sp, #16]
    5e64:	b	5e24 <PySequence_Fast@plt+0x1be4>
    5e68:	mov	x0, x2
    5e6c:	bl	3d70 <_Py_Dealloc@plt>
    5e70:	mov	w0, #0x0                   	// #0
    5e74:	ldp	x19, x20, [sp, #16]
    5e78:	b	5e24 <PySequence_Fast@plt+0x1be4>
    5e7c:	stp	x29, x30, [sp, #-32]!
    5e80:	mov	x29, sp
    5e84:	stp	x19, x20, [sp, #16]
    5e88:	mov	x19, x0
    5e8c:	ldr	x0, [x0, #40]
    5e90:	ldr	x20, [x0]
    5e94:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    5e98:	ldr	x1, [x1, #3976]
    5e9c:	cmp	x20, x1
    5ea0:	b.eq	5eb4 <PySequence_Fast@plt+0x1c74>  // b.none
    5ea4:	mov	x0, x20
    5ea8:	ldp	x19, x20, [sp, #16]
    5eac:	ldp	x29, x30, [sp], #32
    5eb0:	ret
    5eb4:	bl	4080 <PyDict_New@plt>
    5eb8:	mov	x20, x0
    5ebc:	cbz	x0, 5ea4 <PySequence_Fast@plt+0x1c64>
    5ec0:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    5ec4:	ldr	x1, [x1, #3976]
    5ec8:	ldr	x0, [x1]
    5ecc:	sub	x0, x0, #0x1
    5ed0:	str	x0, [x1]
    5ed4:	cbz	x0, 5ee4 <PySequence_Fast@plt+0x1ca4>
    5ed8:	ldr	x0, [x19, #40]
    5edc:	str	x20, [x0]
    5ee0:	b	5ea4 <PySequence_Fast@plt+0x1c64>
    5ee4:	mov	x0, x1
    5ee8:	bl	3d70 <_Py_Dealloc@plt>
    5eec:	b	5ed8 <PySequence_Fast@plt+0x1c98>
    5ef0:	stp	x29, x30, [sp, #-32]!
    5ef4:	mov	x29, sp
    5ef8:	stp	x19, x20, [sp, #16]
    5efc:	mov	x20, x0
    5f00:	ldr	x19, [x0, #40]
    5f04:	cbz	x19, 5f34 <PySequence_Fast@plt+0x1cf4>
    5f08:	mov	x0, x20
    5f0c:	bl	5e7c <PySequence_Fast@plt+0x1c3c>
    5f10:	mov	x19, x0
    5f14:	cbz	x0, 5f24 <PySequence_Fast@plt+0x1ce4>
    5f18:	ldr	x0, [x0]
    5f1c:	add	x0, x0, #0x1
    5f20:	str	x0, [x19]
    5f24:	mov	x0, x19
    5f28:	ldp	x19, x20, [sp, #16]
    5f2c:	ldp	x29, x30, [sp], #32
    5f30:	ret
    5f34:	mov	x1, #0x0                   	// #0
    5f38:	bl	4e20 <PySequence_Fast@plt+0xbe0>
    5f3c:	tbz	w0, #31, 5f08 <PySequence_Fast@plt+0x1cc8>
    5f40:	b	5f24 <PySequence_Fast@plt+0x1ce4>
    5f44:	stp	x29, x30, [sp, #-48]!
    5f48:	mov	x29, sp
    5f4c:	stp	x19, x20, [sp, #16]
    5f50:	ldr	x19, [x0, #32]
    5f54:	tbz	w19, #0, 5f74 <PySequence_Fast@plt+0x1d34>
    5f58:	mov	x20, x0
    5f5c:	and	x19, x19, #0xfffffffffffffffe
    5f60:	ldr	x1, [x19, #8]
    5f64:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    5f68:	ldr	x0, [x0, #4064]
    5f6c:	cmp	x1, x0
    5f70:	b.eq	5f84 <PySequence_Fast@plt+0x1d44>  // b.none
    5f74:	mov	x0, x19
    5f78:	ldp	x19, x20, [sp, #16]
    5f7c:	ldp	x29, x30, [sp], #48
    5f80:	ret
    5f84:	str	x21, [sp, #32]
    5f88:	mov	x0, x19
    5f8c:	bl	5538 <PySequence_Fast@plt+0x12f8>
    5f90:	mov	x21, x0
    5f94:	cbz	x0, 5fcc <PySequence_Fast@plt+0x1d8c>
    5f98:	str	x0, [x20, #32]
    5f9c:	ldr	x0, [x19]
    5fa0:	sub	x0, x0, #0x1
    5fa4:	str	x0, [x19]
    5fa8:	cbz	x0, 5fb8 <PySequence_Fast@plt+0x1d78>
    5fac:	mov	x19, x21
    5fb0:	ldr	x21, [sp, #32]
    5fb4:	b	5f74 <PySequence_Fast@plt+0x1d34>
    5fb8:	mov	x0, x19
    5fbc:	bl	3d70 <_Py_Dealloc@plt>
    5fc0:	mov	x19, x21
    5fc4:	ldr	x21, [sp, #32]
    5fc8:	b	5f74 <PySequence_Fast@plt+0x1d34>
    5fcc:	mov	x19, x0
    5fd0:	ldr	x21, [sp, #32]
    5fd4:	b	5f74 <PySequence_Fast@plt+0x1d34>
    5fd8:	stp	x29, x30, [sp, #-16]!
    5fdc:	mov	x29, sp
    5fe0:	bl	5f44 <PySequence_Fast@plt+0x1d04>
    5fe4:	cbz	x0, 5ff4 <PySequence_Fast@plt+0x1db4>
    5fe8:	ldr	x1, [x0]
    5fec:	add	x1, x1, #0x1
    5ff0:	str	x1, [x0]
    5ff4:	ldp	x29, x30, [sp], #16
    5ff8:	ret
    5ffc:	stp	x29, x30, [sp, #-48]!
    6000:	mov	x29, sp
    6004:	stp	x19, x20, [sp, #16]
    6008:	ldr	x19, [x0, #24]
    600c:	tbz	w19, #0, 602c <PySequence_Fast@plt+0x1dec>
    6010:	mov	x20, x0
    6014:	and	x19, x19, #0xfffffffffffffffe
    6018:	ldr	x1, [x19, #8]
    601c:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    6020:	ldr	x0, [x0, #4064]
    6024:	cmp	x1, x0
    6028:	b.eq	603c <PySequence_Fast@plt+0x1dfc>  // b.none
    602c:	mov	x0, x19
    6030:	ldp	x19, x20, [sp, #16]
    6034:	ldp	x29, x30, [sp], #48
    6038:	ret
    603c:	str	x21, [sp, #32]
    6040:	mov	x0, x19
    6044:	bl	5538 <PySequence_Fast@plt+0x12f8>
    6048:	mov	x21, x0
    604c:	cbz	x0, 6084 <PySequence_Fast@plt+0x1e44>
    6050:	str	x0, [x20, #24]
    6054:	ldr	x0, [x19]
    6058:	sub	x0, x0, #0x1
    605c:	str	x0, [x19]
    6060:	cbz	x0, 6070 <PySequence_Fast@plt+0x1e30>
    6064:	mov	x19, x21
    6068:	ldr	x21, [sp, #32]
    606c:	b	602c <PySequence_Fast@plt+0x1dec>
    6070:	mov	x0, x19
    6074:	bl	3d70 <_Py_Dealloc@plt>
    6078:	mov	x19, x21
    607c:	ldr	x21, [sp, #32]
    6080:	b	602c <PySequence_Fast@plt+0x1dec>
    6084:	mov	x19, x0
    6088:	ldr	x21, [sp, #32]
    608c:	b	602c <PySequence_Fast@plt+0x1dec>
    6090:	stp	x29, x30, [sp, #-16]!
    6094:	mov	x29, sp
    6098:	bl	5ffc <PySequence_Fast@plt+0x1dbc>
    609c:	cbz	x0, 60ac <PySequence_Fast@plt+0x1e6c>
    60a0:	ldr	x1, [x0]
    60a4:	add	x1, x1, #0x1
    60a8:	str	x1, [x0]
    60ac:	ldp	x29, x30, [sp], #16
    60b0:	ret
    60b4:	stp	x29, x30, [sp, #-16]!
    60b8:	mov	x29, sp
    60bc:	cbz	x1, 60f4 <PySequence_Fast@plt+0x1eb4>
    60c0:	mov	x2, x0
    60c4:	ldr	x0, [x1]
    60c8:	add	x0, x0, #0x1
    60cc:	str	x0, [x1]
    60d0:	ldr	x3, [x2, #16]
    60d4:	str	x1, [x2, #16]
    60d8:	ldr	x1, [x3]
    60dc:	sub	x1, x1, #0x1
    60e0:	str	x1, [x3]
    60e4:	mov	w0, #0x0                   	// #0
    60e8:	cbz	x1, 6114 <PySequence_Fast@plt+0x1ed4>
    60ec:	ldp	x29, x30, [sp], #16
    60f0:	ret
    60f4:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    60f8:	add	x1, x1, #0xca8
    60fc:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    6100:	ldr	x0, [x0, #4008]
    6104:	ldr	x0, [x0]
    6108:	bl	3de0 <PyErr_SetString@plt>
    610c:	mov	w0, #0xffffffff            	// #-1
    6110:	b	60ec <PySequence_Fast@plt+0x1eac>
    6114:	mov	x0, x3
    6118:	bl	3d70 <_Py_Dealloc@plt>
    611c:	mov	w0, #0x0                   	// #0
    6120:	b	60ec <PySequence_Fast@plt+0x1eac>
    6124:	cbz	x0, 61c0 <PySequence_Fast@plt+0x1f80>
    6128:	stp	x29, x30, [sp, #-32]!
    612c:	mov	x29, sp
    6130:	stp	x19, x20, [sp, #16]
    6134:	mov	x20, x0
    6138:	ldr	x0, [x0]
    613c:	ldr	x1, [x0]
    6140:	sub	x1, x1, #0x1
    6144:	str	x1, [x0]
    6148:	cbz	x1, 6160 <PySequence_Fast@plt+0x1f20>
    614c:	ldr	x0, [x20, #8]
    6150:	cmp	x0, #0x0
    6154:	b.le	6198 <PySequence_Fast@plt+0x1f58>
    6158:	mov	x19, #0x0                   	// #0
    615c:	b	617c <PySequence_Fast@plt+0x1f3c>
    6160:	bl	3d70 <_Py_Dealloc@plt>
    6164:	b	614c <PySequence_Fast@plt+0x1f0c>
    6168:	bl	3d70 <_Py_Dealloc@plt>
    616c:	add	x19, x19, #0x1
    6170:	ldr	x0, [x20, #8]
    6174:	cmp	x0, x19
    6178:	b.le	6198 <PySequence_Fast@plt+0x1f58>
    617c:	ldr	x0, [x20, #24]
    6180:	ldr	x0, [x0, x19, lsl #3]
    6184:	ldr	x1, [x0]
    6188:	sub	x1, x1, #0x1
    618c:	str	x1, [x0]
    6190:	cbnz	x1, 616c <PySequence_Fast@plt+0x1f2c>
    6194:	b	6168 <PySequence_Fast@plt+0x1f28>
    6198:	ldr	x0, [x20, #24]
    619c:	add	x1, x20, #0x20
    61a0:	cmp	x0, x1
    61a4:	b.eq	61ac <PySequence_Fast@plt+0x1f6c>  // b.none
    61a8:	bl	3e60 <PyObject_Free@plt>
    61ac:	mov	x0, x20
    61b0:	bl	3e60 <PyObject_Free@plt>
    61b4:	ldp	x19, x20, [sp, #16]
    61b8:	ldp	x29, x30, [sp], #32
    61bc:	ret
    61c0:	ret
    61c4:	stp	x29, x30, [sp, #-32]!
    61c8:	mov	x29, sp
    61cc:	str	x19, [sp, #16]
    61d0:	mov	x19, x0
    61d4:	ldr	x0, [x0, #40]
    61d8:	cbz	x0, 61e4 <PySequence_Fast@plt+0x1fa4>
    61dc:	str	xzr, [x19, #40]
    61e0:	bl	6124 <PySequence_Fast@plt+0x1ee4>
    61e4:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    61e8:	ldr	x1, [x1, #3976]
    61ec:	ldr	x0, [x1]
    61f0:	add	x0, x0, #0x1
    61f4:	str	x0, [x1]
    61f8:	ldr	x0, [x19, #24]
    61fc:	and	x0, x0, #0xfffffffffffffffe
    6200:	str	x1, [x19, #24]
    6204:	ldr	x1, [x0]
    6208:	sub	x1, x1, #0x1
    620c:	str	x1, [x0]
    6210:	cbz	x1, 6264 <PySequence_Fast@plt+0x2024>
    6214:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    6218:	ldr	x1, [x1, #3976]
    621c:	ldr	x0, [x1]
    6220:	add	x0, x0, #0x1
    6224:	str	x0, [x1]
    6228:	ldr	x0, [x19, #32]
    622c:	and	x0, x0, #0xfffffffffffffffe
    6230:	str	x1, [x19, #32]
    6234:	ldr	x1, [x0]
    6238:	sub	x1, x1, #0x1
    623c:	str	x1, [x0]
    6240:	cbz	x1, 626c <PySequence_Fast@plt+0x202c>
    6244:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    6248:	ldr	x0, [x0, #3976]
    624c:	ldr	x1, [x0]
    6250:	add	x1, x1, #0x1
    6254:	str	x1, [x0]
    6258:	ldr	x19, [sp, #16]
    625c:	ldp	x29, x30, [sp], #32
    6260:	ret
    6264:	bl	3d70 <_Py_Dealloc@plt>
    6268:	b	6214 <PySequence_Fast@plt+0x1fd4>
    626c:	bl	3d70 <_Py_Dealloc@plt>
    6270:	b	6244 <PySequence_Fast@plt+0x2004>
    6274:	sub	sp, sp, #0x50
    6278:	stp	x29, x30, [sp, #32]
    627c:	add	x29, sp, #0x20
    6280:	stp	x19, x20, [sp, #48]
    6284:	mov	x20, x0
    6288:	ldr	x1, [x0, #40]
    628c:	mov	x0, #0x0                   	// #0
    6290:	cbz	x1, 6298 <PySequence_Fast@plt+0x2058>
    6294:	ldr	x0, [x1, #8]
    6298:	bl	3c50 <PyList_New@plt>
    629c:	mov	x19, x0
    62a0:	cbz	x0, 6458 <PySequence_Fast@plt+0x2218>
    62a4:	ldr	x0, [x0, #16]
    62a8:	cmp	x0, #0x0
    62ac:	b.le	62e4 <PySequence_Fast@plt+0x20a4>
    62b0:	mov	x0, #0x0                   	// #0
    62b4:	ldr	x1, [x20, #40]
    62b8:	ldr	x1, [x1, #24]
    62bc:	ldr	x1, [x1, x0, lsl #3]
    62c0:	ldr	x2, [x1]
    62c4:	add	x2, x2, #0x1
    62c8:	str	x2, [x1]
    62cc:	ldr	x2, [x19, #24]
    62d0:	str	x1, [x2, x0, lsl #3]
    62d4:	add	x0, x0, #0x1
    62d8:	ldr	x1, [x19, #16]
    62dc:	cmp	x0, x1
    62e0:	b.lt	62b4 <PySequence_Fast@plt+0x2074>  // b.tstop
    62e4:	ldr	x0, [x20, #40]
    62e8:	cbz	x0, 6360 <PySequence_Fast@plt+0x2120>
    62ec:	ldr	x6, [x0]
    62f0:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    62f4:	ldr	x0, [x0, #3976]
    62f8:	cmp	x6, x0
    62fc:	b.eq	6360 <PySequence_Fast@plt+0x2120>  // b.none
    6300:	ldr	x0, [x20, #32]
    6304:	and	x0, x0, #0xfffffffffffffffe
    6308:	str	x0, [sp, #16]
    630c:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    6310:	add	x0, x0, #0xd00
    6314:	str	x0, [sp, #8]
    6318:	ldr	x0, [x20, #24]
    631c:	and	x0, x0, #0xfffffffffffffffe
    6320:	str	x0, [sp]
    6324:	adrp	x7, c000 <PySequence_Fast@plt+0x7dc0>
    6328:	add	x7, x7, #0xcc8
    632c:	adrp	x5, c000 <PySequence_Fast@plt+0x7dc0>
    6330:	add	x5, x5, #0xcd0
    6334:	mov	x4, x19
    6338:	adrp	x3, c000 <PySequence_Fast@plt+0x7dc0>
    633c:	add	x3, x3, #0xcd8
    6340:	ldr	x2, [x20, #16]
    6344:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    6348:	add	x1, x1, #0xce8
    634c:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    6350:	add	x0, x0, #0xcf0
    6354:	bl	4190 <_Py_BuildValue_SizeT@plt>
    6358:	mov	x20, x0
    635c:	b	63b8 <PySequence_Fast@plt+0x2178>
    6360:	ldr	x7, [x20, #24]
    6364:	ldr	x0, [x20, #32]
    6368:	and	x0, x0, #0xfffffffffffffffe
    636c:	str	x0, [sp, #8]
    6370:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    6374:	add	x0, x0, #0xd00
    6378:	str	x0, [sp]
    637c:	and	x7, x7, #0xfffffffffffffffe
    6380:	adrp	x6, c000 <PySequence_Fast@plt+0x7dc0>
    6384:	add	x6, x6, #0xcc8
    6388:	adrp	x5, c000 <PySequence_Fast@plt+0x7dc0>
    638c:	add	x5, x5, #0xcd0
    6390:	mov	x4, x19
    6394:	adrp	x3, c000 <PySequence_Fast@plt+0x7dc0>
    6398:	add	x3, x3, #0xcd8
    639c:	ldr	x2, [x20, #16]
    63a0:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    63a4:	add	x1, x1, #0xce8
    63a8:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    63ac:	add	x0, x0, #0xd08
    63b0:	bl	4190 <_Py_BuildValue_SizeT@plt>
    63b4:	mov	x20, x0
    63b8:	cbz	x20, 63e0 <PySequence_Fast@plt+0x21a0>
    63bc:	ldr	x0, [x19]
    63c0:	sub	x0, x0, #0x1
    63c4:	str	x0, [x19]
    63c8:	cbz	x0, 640c <PySequence_Fast@plt+0x21cc>
    63cc:	mov	x0, x20
    63d0:	ldp	x19, x20, [sp, #48]
    63d4:	ldp	x29, x30, [sp, #32]
    63d8:	add	sp, sp, #0x50
    63dc:	ret
    63e0:	str	x21, [sp, #64]
    63e4:	ldr	x0, [x19, #16]
    63e8:	mov	x21, #0x0                   	// #0
    63ec:	cmp	x0, #0x0
    63f0:	b.gt	642c <PySequence_Fast@plt+0x21ec>
    63f4:	ldr	x0, [x19]
    63f8:	sub	x0, x0, #0x1
    63fc:	str	x0, [x19]
    6400:	cbz	x0, 6448 <PySequence_Fast@plt+0x2208>
    6404:	ldr	x21, [sp, #64]
    6408:	b	63cc <PySequence_Fast@plt+0x218c>
    640c:	mov	x0, x19
    6410:	bl	3d70 <_Py_Dealloc@plt>
    6414:	b	63cc <PySequence_Fast@plt+0x218c>
    6418:	bl	3d70 <_Py_Dealloc@plt>
    641c:	add	x21, x21, #0x1
    6420:	ldr	x0, [x19, #16]
    6424:	cmp	x21, x0
    6428:	b.ge	63f4 <PySequence_Fast@plt+0x21b4>  // b.tcont
    642c:	ldr	x0, [x19, #24]
    6430:	ldr	x0, [x0, x21, lsl #3]
    6434:	ldr	x1, [x0]
    6438:	sub	x1, x1, #0x1
    643c:	str	x1, [x0]
    6440:	cbnz	x1, 641c <PySequence_Fast@plt+0x21dc>
    6444:	b	6418 <PySequence_Fast@plt+0x21d8>
    6448:	mov	x0, x19
    644c:	bl	3d70 <_Py_Dealloc@plt>
    6450:	ldr	x21, [sp, #64]
    6454:	b	63cc <PySequence_Fast@plt+0x218c>
    6458:	mov	x20, x0
    645c:	b	63cc <PySequence_Fast@plt+0x218c>
    6460:	stp	x29, x30, [sp, #-32]!
    6464:	mov	x29, sp
    6468:	stp	x19, x20, [sp, #16]
    646c:	mov	x19, x0
    6470:	ldr	x0, [x0, #16]
    6474:	ldr	x1, [x19, #40]
    6478:	cbz	x1, 6578 <PySequence_Fast@plt+0x2338>
    647c:	ldr	x1, [x1]
    6480:	bl	58f4 <PySequence_Fast@plt+0x16b4>
    6484:	mov	x20, x0
    6488:	cbz	x0, 6568 <PySequence_Fast@plt+0x2328>
    648c:	ldr	x0, [x19, #24]
    6490:	and	x0, x0, #0xfffffffffffffffe
    6494:	ldr	x1, [x0]
    6498:	add	x1, x1, #0x1
    649c:	str	x1, [x0]
    64a0:	ldr	x1, [x19, #24]
    64a4:	ldr	x0, [x20, #24]
    64a8:	and	x0, x0, #0xfffffffffffffffe
    64ac:	str	x1, [x20, #24]
    64b0:	ldr	x1, [x0]
    64b4:	sub	x1, x1, #0x1
    64b8:	str	x1, [x0]
    64bc:	cbz	x1, 6584 <PySequence_Fast@plt+0x2344>
    64c0:	ldr	x0, [x19, #32]
    64c4:	and	x0, x0, #0xfffffffffffffffe
    64c8:	ldr	x1, [x0]
    64cc:	add	x1, x1, #0x1
    64d0:	str	x1, [x0]
    64d4:	ldr	x1, [x19, #32]
    64d8:	ldr	x0, [x20, #32]
    64dc:	and	x0, x0, #0xfffffffffffffffe
    64e0:	str	x1, [x20, #32]
    64e4:	ldr	x1, [x0]
    64e8:	sub	x1, x1, #0x1
    64ec:	str	x1, [x0]
    64f0:	cbz	x1, 658c <PySequence_Fast@plt+0x234c>
    64f4:	ldr	x0, [x19, #40]
    64f8:	cbz	x0, 6568 <PySequence_Fast@plt+0x2328>
    64fc:	ldr	x1, [x0, #8]
    6500:	mov	x0, x20
    6504:	bl	4ea4 <PySequence_Fast@plt+0xc64>
    6508:	tbnz	w0, #31, 6594 <PySequence_Fast@plt+0x2354>
    650c:	ldr	x1, [x19, #40]
    6510:	ldr	x2, [x1, #8]
    6514:	mov	x0, #0x0                   	// #0
    6518:	cmp	x2, #0x0
    651c:	b.le	6560 <PySequence_Fast@plt+0x2320>
    6520:	ldr	x1, [x1, #24]
    6524:	ldr	x2, [x1, x0, lsl #3]
    6528:	ldr	x1, [x2]
    652c:	add	x1, x1, #0x1
    6530:	str	x1, [x2]
    6534:	ldr	x1, [x19, #40]
    6538:	ldr	x1, [x1, #24]
    653c:	ldr	x2, [x1, x0, lsl #3]
    6540:	ldr	x1, [x20, #40]
    6544:	ldr	x1, [x1, #24]
    6548:	str	x2, [x1, x0, lsl #3]
    654c:	add	x0, x0, #0x1
    6550:	ldr	x1, [x19, #40]
    6554:	ldr	x2, [x1, #8]
    6558:	cmp	x0, x2
    655c:	b.lt	6520 <PySequence_Fast@plt+0x22e0>  // b.tstop
    6560:	ldr	x0, [x20, #40]
    6564:	str	x2, [x0, #8]
    6568:	mov	x0, x20
    656c:	ldp	x19, x20, [sp, #16]
    6570:	ldp	x29, x30, [sp], #32
    6574:	ret
    6578:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    657c:	ldr	x1, [x1, #3976]
    6580:	b	6480 <PySequence_Fast@plt+0x2240>
    6584:	bl	3d70 <_Py_Dealloc@plt>
    6588:	b	64c0 <PySequence_Fast@plt+0x2280>
    658c:	bl	3d70 <_Py_Dealloc@plt>
    6590:	b	64f4 <PySequence_Fast@plt+0x22b4>
    6594:	ldr	x0, [x20]
    6598:	sub	x0, x0, #0x1
    659c:	str	x0, [x20]
    65a0:	cbz	x0, 65ac <PySequence_Fast@plt+0x236c>
    65a4:	mov	x20, #0x0                   	// #0
    65a8:	b	6568 <PySequence_Fast@plt+0x2328>
    65ac:	mov	x0, x20
    65b0:	bl	3d70 <_Py_Dealloc@plt>
    65b4:	mov	x20, #0x0                   	// #0
    65b8:	b	6568 <PySequence_Fast@plt+0x2328>
    65bc:	stp	x29, x30, [sp, #-48]!
    65c0:	mov	x29, sp
    65c4:	stp	x19, x20, [sp, #16]
    65c8:	mov	x20, x0
    65cc:	ldr	x0, [x0, #40]
    65d0:	cmp	x1, #0x0
    65d4:	ccmp	x0, #0x0, #0x4, ge  // ge = tcont
    65d8:	b.eq	6664 <PySequence_Fast@plt+0x2424>  // b.none
    65dc:	stp	x21, x22, [sp, #32]
    65e0:	mov	x21, x2
    65e4:	ldr	x2, [x0, #8]
    65e8:	cmp	x2, x1
    65ec:	b.le	6660 <PySequence_Fast@plt+0x2420>
    65f0:	lsl	x19, x1, #3
    65f4:	ldr	x3, [x0, #24]
    65f8:	ldr	x22, [x3, x1, lsl #3]
    65fc:	cbz	x21, 6698 <PySequence_Fast@plt+0x2458>
    6600:	ldr	x0, [x21, #8]
    6604:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x136c8>
    6608:	add	x1, x1, #0x320
    660c:	cmp	x0, x1
    6610:	b.eq	6624 <PySequence_Fast@plt+0x23e4>  // b.none
    6614:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x136c8>
    6618:	add	x1, x1, #0x320
    661c:	bl	4160 <PyType_IsSubtype@plt>
    6620:	cbz	w0, 6684 <PySequence_Fast@plt+0x2444>
    6624:	ldr	x0, [x21]
    6628:	add	x0, x0, #0x1
    662c:	str	x0, [x21]
    6630:	ldr	x0, [x20, #40]
    6634:	ldr	x0, [x0, #24]
    6638:	str	x21, [x0, x19]
    663c:	ldr	x1, [x22]
    6640:	sub	x1, x1, #0x1
    6644:	str	x1, [x22]
    6648:	mov	w0, #0x0                   	// #0
    664c:	cbz	x1, 66dc <PySequence_Fast@plt+0x249c>
    6650:	ldp	x21, x22, [sp, #32]
    6654:	ldp	x19, x20, [sp, #16]
    6658:	ldp	x29, x30, [sp], #48
    665c:	ret
    6660:	ldp	x21, x22, [sp, #32]
    6664:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    6668:	add	x1, x1, #0xd18
    666c:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    6670:	ldr	x0, [x0, #3984]
    6674:	ldr	x0, [x0]
    6678:	bl	3de0 <PyErr_SetString@plt>
    667c:	mov	w0, #0xffffffff            	// #-1
    6680:	b	6654 <PySequence_Fast@plt+0x2414>
    6684:	mov	x0, x21
    6688:	bl	4df0 <PySequence_Fast@plt+0xbb0>
    668c:	mov	w0, #0xffffffff            	// #-1
    6690:	ldp	x21, x22, [sp, #32]
    6694:	b	6654 <PySequence_Fast@plt+0x2414>
    6698:	sub	x2, x2, #0x1
    669c:	str	x2, [x0, #8]
    66a0:	ldr	x3, [x20, #40]
    66a4:	ldr	x0, [x3, #8]
    66a8:	cmp	x1, x0
    66ac:	b.ge	663c <PySequence_Fast@plt+0x23fc>  // b.tcont
    66b0:	add	x2, x19, #0x8
    66b4:	ldr	x0, [x3, #24]
    66b8:	ldr	x3, [x0, x2]
    66bc:	str	x3, [x0, x1, lsl #3]
    66c0:	add	x1, x1, #0x1
    66c4:	ldr	x3, [x20, #40]
    66c8:	add	x2, x2, #0x8
    66cc:	ldr	x0, [x3, #8]
    66d0:	cmp	x0, x1
    66d4:	b.gt	66b4 <PySequence_Fast@plt+0x2474>
    66d8:	b	663c <PySequence_Fast@plt+0x23fc>
    66dc:	mov	x0, x22
    66e0:	bl	3d70 <_Py_Dealloc@plt>
    66e4:	mov	w0, #0x0                   	// #0
    66e8:	ldp	x21, x22, [sp, #32]
    66ec:	b	6654 <PySequence_Fast@plt+0x2414>
    66f0:	stp	x29, x30, [sp, #-32]!
    66f4:	mov	x29, sp
    66f8:	str	x19, [sp, #16]
    66fc:	mov	x19, x0
    6700:	ldr	x0, [x0, #144]
    6704:	cbz	x0, 671c <PySequence_Fast@plt+0x24dc>
    6708:	str	xzr, [x19, #144]
    670c:	ldr	x1, [x0]
    6710:	sub	x1, x1, #0x1
    6714:	str	x1, [x0]
    6718:	cbz	x1, 68d0 <PySequence_Fast@plt+0x2690>
    671c:	ldr	x0, [x19, #136]
    6720:	cbz	x0, 6738 <PySequence_Fast@plt+0x24f8>
    6724:	str	xzr, [x19, #136]
    6728:	ldr	x1, [x0]
    672c:	sub	x1, x1, #0x1
    6730:	str	x1, [x0]
    6734:	cbz	x1, 68d8 <PySequence_Fast@plt+0x2698>
    6738:	ldr	x0, [x19, #128]
    673c:	cbz	x0, 6754 <PySequence_Fast@plt+0x2514>
    6740:	str	xzr, [x19, #128]
    6744:	ldr	x1, [x0]
    6748:	sub	x1, x1, #0x1
    674c:	str	x1, [x0]
    6750:	cbz	x1, 68e0 <PySequence_Fast@plt+0x26a0>
    6754:	ldr	x0, [x19, #120]
    6758:	cbz	x0, 6770 <PySequence_Fast@plt+0x2530>
    675c:	str	xzr, [x19, #120]
    6760:	ldr	x1, [x0]
    6764:	sub	x1, x1, #0x1
    6768:	str	x1, [x0]
    676c:	cbz	x1, 68e8 <PySequence_Fast@plt+0x26a8>
    6770:	ldr	x0, [x19, #112]
    6774:	cbz	x0, 678c <PySequence_Fast@plt+0x254c>
    6778:	str	xzr, [x19, #112]
    677c:	ldr	x1, [x0]
    6780:	sub	x1, x1, #0x1
    6784:	str	x1, [x0]
    6788:	cbz	x1, 68f0 <PySequence_Fast@plt+0x26b0>
    678c:	ldr	x0, [x19, #104]
    6790:	cbz	x0, 67a8 <PySequence_Fast@plt+0x2568>
    6794:	str	xzr, [x19, #104]
    6798:	ldr	x1, [x0]
    679c:	sub	x1, x1, #0x1
    67a0:	str	x1, [x0]
    67a4:	cbz	x1, 68f8 <PySequence_Fast@plt+0x26b8>
    67a8:	ldr	x0, [x19, #96]
    67ac:	cbz	x0, 67c4 <PySequence_Fast@plt+0x2584>
    67b0:	str	xzr, [x19, #96]
    67b4:	ldr	x1, [x0]
    67b8:	sub	x1, x1, #0x1
    67bc:	str	x1, [x0]
    67c0:	cbz	x1, 6900 <PySequence_Fast@plt+0x26c0>
    67c4:	ldr	x0, [x19, #56]
    67c8:	cbz	x0, 67e0 <PySequence_Fast@plt+0x25a0>
    67cc:	str	xzr, [x19, #56]
    67d0:	ldr	x1, [x0]
    67d4:	sub	x1, x1, #0x1
    67d8:	str	x1, [x0]
    67dc:	cbz	x1, 6908 <PySequence_Fast@plt+0x26c8>
    67e0:	ldr	x0, [x19, #48]
    67e4:	cbz	x0, 67fc <PySequence_Fast@plt+0x25bc>
    67e8:	str	xzr, [x19, #48]
    67ec:	ldr	x1, [x0]
    67f0:	sub	x1, x1, #0x1
    67f4:	str	x1, [x0]
    67f8:	cbz	x1, 6910 <PySequence_Fast@plt+0x26d0>
    67fc:	ldr	x0, [x19, #32]
    6800:	cbz	x0, 6818 <PySequence_Fast@plt+0x25d8>
    6804:	str	xzr, [x19, #32]
    6808:	ldr	x1, [x0]
    680c:	sub	x1, x1, #0x1
    6810:	str	x1, [x0]
    6814:	cbz	x1, 6918 <PySequence_Fast@plt+0x26d8>
    6818:	ldr	x0, [x19, #40]
    681c:	cbz	x0, 6834 <PySequence_Fast@plt+0x25f4>
    6820:	str	xzr, [x19, #40]
    6824:	ldr	x1, [x0]
    6828:	sub	x1, x1, #0x1
    682c:	str	x1, [x0]
    6830:	cbz	x1, 6920 <PySequence_Fast@plt+0x26e0>
    6834:	ldr	x0, [x19, #24]
    6838:	cbz	x0, 6850 <PySequence_Fast@plt+0x2610>
    683c:	str	xzr, [x19, #24]
    6840:	ldr	x1, [x0]
    6844:	sub	x1, x1, #0x1
    6848:	str	x1, [x0]
    684c:	cbz	x1, 6928 <PySequence_Fast@plt+0x26e8>
    6850:	ldr	x0, [x19, #88]
    6854:	cbz	x0, 686c <PySequence_Fast@plt+0x262c>
    6858:	str	xzr, [x19, #88]
    685c:	ldr	x1, [x0]
    6860:	sub	x1, x1, #0x1
    6864:	str	x1, [x0]
    6868:	cbz	x1, 6930 <PySequence_Fast@plt+0x26f0>
    686c:	ldr	x0, [x19, #80]
    6870:	cbz	x0, 6888 <PySequence_Fast@plt+0x2648>
    6874:	str	xzr, [x19, #80]
    6878:	ldr	x1, [x0]
    687c:	sub	x1, x1, #0x1
    6880:	str	x1, [x0]
    6884:	cbz	x1, 6938 <PySequence_Fast@plt+0x26f8>
    6888:	ldr	x0, [x19, #72]
    688c:	cbz	x0, 68a4 <PySequence_Fast@plt+0x2664>
    6890:	str	xzr, [x19, #72]
    6894:	ldr	x1, [x0]
    6898:	sub	x1, x1, #0x1
    689c:	str	x1, [x0]
    68a0:	cbz	x1, 6940 <PySequence_Fast@plt+0x2700>
    68a4:	ldr	x0, [x19, #16]
    68a8:	cbz	x0, 68c0 <PySequence_Fast@plt+0x2680>
    68ac:	str	xzr, [x19, #16]
    68b0:	ldr	x1, [x0]
    68b4:	sub	x1, x1, #0x1
    68b8:	str	x1, [x0]
    68bc:	cbz	x1, 6948 <PySequence_Fast@plt+0x2708>
    68c0:	mov	w0, #0x0                   	// #0
    68c4:	ldr	x19, [sp, #16]
    68c8:	ldp	x29, x30, [sp], #32
    68cc:	ret
    68d0:	bl	3d70 <_Py_Dealloc@plt>
    68d4:	b	671c <PySequence_Fast@plt+0x24dc>
    68d8:	bl	3d70 <_Py_Dealloc@plt>
    68dc:	b	6738 <PySequence_Fast@plt+0x24f8>
    68e0:	bl	3d70 <_Py_Dealloc@plt>
    68e4:	b	6754 <PySequence_Fast@plt+0x2514>
    68e8:	bl	3d70 <_Py_Dealloc@plt>
    68ec:	b	6770 <PySequence_Fast@plt+0x2530>
    68f0:	bl	3d70 <_Py_Dealloc@plt>
    68f4:	b	678c <PySequence_Fast@plt+0x254c>
    68f8:	bl	3d70 <_Py_Dealloc@plt>
    68fc:	b	67a8 <PySequence_Fast@plt+0x2568>
    6900:	bl	3d70 <_Py_Dealloc@plt>
    6904:	b	67c4 <PySequence_Fast@plt+0x2584>
    6908:	bl	3d70 <_Py_Dealloc@plt>
    690c:	b	67e0 <PySequence_Fast@plt+0x25a0>
    6910:	bl	3d70 <_Py_Dealloc@plt>
    6914:	b	67fc <PySequence_Fast@plt+0x25bc>
    6918:	bl	3d70 <_Py_Dealloc@plt>
    691c:	b	6818 <PySequence_Fast@plt+0x25d8>
    6920:	bl	3d70 <_Py_Dealloc@plt>
    6924:	b	6834 <PySequence_Fast@plt+0x25f4>
    6928:	bl	3d70 <_Py_Dealloc@plt>
    692c:	b	6850 <PySequence_Fast@plt+0x2610>
    6930:	bl	3d70 <_Py_Dealloc@plt>
    6934:	b	686c <PySequence_Fast@plt+0x262c>
    6938:	bl	3d70 <_Py_Dealloc@plt>
    693c:	b	6888 <PySequence_Fast@plt+0x2648>
    6940:	bl	3d70 <_Py_Dealloc@plt>
    6944:	b	68a4 <PySequence_Fast@plt+0x2664>
    6948:	bl	3d70 <_Py_Dealloc@plt>
    694c:	b	68c0 <PySequence_Fast@plt+0x2680>
    6950:	stp	x29, x30, [sp, #-32]!
    6954:	mov	x29, sp
    6958:	str	x19, [sp, #16]
    695c:	bl	3e10 <PyModule_GetState@plt>
    6960:	mov	x19, x0
    6964:	ldr	x0, [x0]
    6968:	cbz	x0, 6980 <PySequence_Fast@plt+0x2740>
    696c:	str	xzr, [x19]
    6970:	ldr	x1, [x0]
    6974:	sub	x1, x1, #0x1
    6978:	str	x1, [x0]
    697c:	cbz	x1, 6a00 <PySequence_Fast@plt+0x27c0>
    6980:	ldr	x0, [x19, #8]
    6984:	cbz	x0, 699c <PySequence_Fast@plt+0x275c>
    6988:	str	xzr, [x19, #8]
    698c:	ldr	x1, [x0]
    6990:	sub	x1, x1, #0x1
    6994:	str	x1, [x0]
    6998:	cbz	x1, 6a08 <PySequence_Fast@plt+0x27c8>
    699c:	ldr	x0, [x19, #16]
    69a0:	cbz	x0, 69b8 <PySequence_Fast@plt+0x2778>
    69a4:	str	xzr, [x19, #16]
    69a8:	ldr	x1, [x0]
    69ac:	sub	x1, x1, #0x1
    69b0:	str	x1, [x0]
    69b4:	cbz	x1, 6a10 <PySequence_Fast@plt+0x27d0>
    69b8:	ldr	x0, [x19, #24]
    69bc:	cbz	x0, 69d4 <PySequence_Fast@plt+0x2794>
    69c0:	str	xzr, [x19, #24]
    69c4:	ldr	x1, [x0]
    69c8:	sub	x1, x1, #0x1
    69cc:	str	x1, [x0]
    69d0:	cbz	x1, 6a18 <PySequence_Fast@plt+0x27d8>
    69d4:	ldr	x0, [x19, #32]
    69d8:	cbz	x0, 69f0 <PySequence_Fast@plt+0x27b0>
    69dc:	str	xzr, [x19, #32]
    69e0:	ldr	x1, [x0]
    69e4:	sub	x1, x1, #0x1
    69e8:	str	x1, [x0]
    69ec:	cbz	x1, 6a20 <PySequence_Fast@plt+0x27e0>
    69f0:	mov	w0, #0x0                   	// #0
    69f4:	ldr	x19, [sp, #16]
    69f8:	ldp	x29, x30, [sp], #32
    69fc:	ret
    6a00:	bl	3d70 <_Py_Dealloc@plt>
    6a04:	b	6980 <PySequence_Fast@plt+0x2740>
    6a08:	bl	3d70 <_Py_Dealloc@plt>
    6a0c:	b	699c <PySequence_Fast@plt+0x275c>
    6a10:	bl	3d70 <_Py_Dealloc@plt>
    6a14:	b	69b8 <PySequence_Fast@plt+0x2778>
    6a18:	bl	3d70 <_Py_Dealloc@plt>
    6a1c:	b	69d4 <PySequence_Fast@plt+0x2794>
    6a20:	bl	3d70 <_Py_Dealloc@plt>
    6a24:	b	69f0 <PySequence_Fast@plt+0x27b0>
    6a28:	stp	x29, x30, [sp, #-16]!
    6a2c:	mov	x29, sp
    6a30:	bl	6950 <PySequence_Fast@plt+0x2710>
    6a34:	ldp	x29, x30, [sp], #16
    6a38:	ret
    6a3c:	stp	x29, x30, [sp, #-64]!
    6a40:	mov	x29, sp
    6a44:	stp	x19, x20, [sp, #16]
    6a48:	stp	x21, x22, [sp, #32]
    6a4c:	mov	x22, x0
    6a50:	mov	x20, x1
    6a54:	mov	x19, x2
    6a58:	mov	x21, x3
    6a5c:	bl	3f80 <PyErr_Occurred@plt>
    6a60:	cbz	x0, 6a74 <PySequence_Fast@plt+0x2834>
    6a64:	ldp	x19, x20, [sp, #16]
    6a68:	ldp	x21, x22, [sp, #32]
    6a6c:	ldp	x29, x30, [sp], #64
    6a70:	ret
    6a74:	mov	x1, x20
    6a78:	mov	x0, x22
    6a7c:	bl	531c <PySequence_Fast@plt+0x10dc>
    6a80:	mov	x20, x0
    6a84:	cbz	x0, 6a64 <PySequence_Fast@plt+0x2824>
    6a88:	cbz	x19, 6abc <PySequence_Fast@plt+0x287c>
    6a8c:	mov	x1, x19
    6a90:	mov	x0, x22
    6a94:	bl	531c <PySequence_Fast@plt+0x10dc>
    6a98:	mov	x19, x0
    6a9c:	cbnz	x0, 6ad0 <PySequence_Fast@plt+0x2890>
    6aa0:	ldr	x0, [x20]
    6aa4:	sub	x0, x0, #0x1
    6aa8:	str	x0, [x20]
    6aac:	cbnz	x0, 6a64 <PySequence_Fast@plt+0x2824>
    6ab0:	mov	x0, x20
    6ab4:	bl	3d70 <_Py_Dealloc@plt>
    6ab8:	b	6a64 <PySequence_Fast@plt+0x2824>
    6abc:	adrp	x19, 1f000 <PyInit__elementtree@@Base+0x126c8>
    6ac0:	ldr	x19, [x19, #3976]
    6ac4:	ldr	x0, [x19]
    6ac8:	add	x0, x0, #0x1
    6acc:	str	x0, [x19]
    6ad0:	cbz	x21, 6b20 <PySequence_Fast@plt+0x28e0>
    6ad4:	mov	x1, x21
    6ad8:	mov	x0, x22
    6adc:	bl	531c <PySequence_Fast@plt+0x10dc>
    6ae0:	mov	x21, x0
    6ae4:	cbnz	x0, 6b34 <PySequence_Fast@plt+0x28f4>
    6ae8:	ldr	x0, [x20]
    6aec:	sub	x0, x0, #0x1
    6af0:	str	x0, [x20]
    6af4:	cbz	x0, 6b14 <PySequence_Fast@plt+0x28d4>
    6af8:	ldr	x0, [x19]
    6afc:	sub	x0, x0, #0x1
    6b00:	str	x0, [x19]
    6b04:	cbnz	x0, 6a64 <PySequence_Fast@plt+0x2824>
    6b08:	mov	x0, x19
    6b0c:	bl	3d70 <_Py_Dealloc@plt>
    6b10:	b	6a64 <PySequence_Fast@plt+0x2824>
    6b14:	mov	x0, x20
    6b18:	bl	3d70 <_Py_Dealloc@plt>
    6b1c:	b	6af8 <PySequence_Fast@plt+0x28b8>
    6b20:	adrp	x21, 1f000 <PyInit__elementtree@@Base+0x126c8>
    6b24:	ldr	x21, [x21, #3976]
    6b28:	ldr	x0, [x21]
    6b2c:	add	x0, x0, #0x1
    6b30:	str	x0, [x21]
    6b34:	ldr	x0, [x22, #104]
    6b38:	cbz	x0, 6bac <PySequence_Fast@plt+0x296c>
    6b3c:	mov	x4, #0x0                   	// #0
    6b40:	mov	x3, x19
    6b44:	mov	x2, x21
    6b48:	mov	x1, x20
    6b4c:	bl	3fd0 <PyObject_CallFunctionObjArgs@plt>
    6b50:	str	x0, [sp, #56]
    6b54:	cbz	x0, 6b68 <PySequence_Fast@plt+0x2928>
    6b58:	ldr	x1, [x0]
    6b5c:	sub	x1, x1, #0x1
    6b60:	str	x1, [x0]
    6b64:	cbz	x1, 6ba4 <PySequence_Fast@plt+0x2964>
    6b68:	ldr	x0, [x20]
    6b6c:	sub	x0, x0, #0x1
    6b70:	str	x0, [x20]
    6b74:	cbz	x0, 6c04 <PySequence_Fast@plt+0x29c4>
    6b78:	ldr	x0, [x21]
    6b7c:	sub	x0, x0, #0x1
    6b80:	str	x0, [x21]
    6b84:	cbz	x0, 6c10 <PySequence_Fast@plt+0x29d0>
    6b88:	ldr	x0, [x19]
    6b8c:	sub	x0, x0, #0x1
    6b90:	str	x0, [x19]
    6b94:	cbnz	x0, 6a64 <PySequence_Fast@plt+0x2824>
    6b98:	mov	x0, x19
    6b9c:	bl	3d70 <_Py_Dealloc@plt>
    6ba0:	b	6a64 <PySequence_Fast@plt+0x2824>
    6ba4:	bl	3d70 <_Py_Dealloc@plt>
    6ba8:	b	6b68 <PySequence_Fast@plt+0x2928>
    6bac:	add	x2, sp, #0x38
    6bb0:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x136c8>
    6bb4:	add	x1, x1, #0x9b8
    6bb8:	add	x1, x1, #0x148
    6bbc:	mov	x0, x22
    6bc0:	bl	3c90 <_PyObject_LookupAttrId@plt>
    6bc4:	cmp	w0, #0x0
    6bc8:	b.le	6b68 <PySequence_Fast@plt+0x2928>
    6bcc:	mov	x2, #0x1                   	// #1
    6bd0:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    6bd4:	add	x1, x1, #0xd40
    6bd8:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    6bdc:	ldr	x0, [x0, #4024]
    6be0:	ldr	x0, [x0]
    6be4:	bl	3d60 <PyErr_WarnEx@plt>
    6be8:	ldr	x0, [sp, #56]
    6bec:	ldr	x1, [x0]
    6bf0:	sub	x1, x1, #0x1
    6bf4:	str	x1, [x0]
    6bf8:	cbnz	x1, 6b68 <PySequence_Fast@plt+0x2928>
    6bfc:	bl	3d70 <_Py_Dealloc@plt>
    6c00:	b	6b68 <PySequence_Fast@plt+0x2928>
    6c04:	mov	x0, x20
    6c08:	bl	3d70 <_Py_Dealloc@plt>
    6c0c:	b	6b78 <PySequence_Fast@plt+0x2938>
    6c10:	mov	x0, x21
    6c14:	bl	3d70 <_Py_Dealloc@plt>
    6c18:	b	6b88 <PySequence_Fast@plt+0x2948>
    6c1c:	cbz	x0, 6c28 <PySequence_Fast@plt+0x29e8>
    6c20:	mov	w0, #0x0                   	// #0
    6c24:	ret
    6c28:	stp	x29, x30, [sp, #-16]!
    6c2c:	mov	x29, sp
    6c30:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    6c34:	ldr	x0, [x0, #4008]
    6c38:	ldr	x0, [x0]
    6c3c:	bl	3e50 <PyErr_ExceptionMatches@plt>
    6c40:	cbz	w0, 6c54 <PySequence_Fast@plt+0x2a14>
    6c44:	bl	3ef0 <PyErr_Clear@plt>
    6c48:	mov	w0, #0x0                   	// #0
    6c4c:	ldp	x29, x30, [sp], #16
    6c50:	ret
    6c54:	mov	w0, #0xffffffff            	// #-1
    6c58:	b	6c4c <PySequence_Fast@plt+0x2a0c>
    6c5c:	sub	sp, sp, #0x60
    6c60:	stp	x29, x30, [sp, #16]
    6c64:	add	x29, sp, #0x10
    6c68:	stp	x19, x20, [sp, #32]
    6c6c:	str	x21, [sp, #48]
    6c70:	mov	x19, x0
    6c74:	mov	x8, x1
    6c78:	mov	x20, x2
    6c7c:	ldr	x1, [x1, #16]
    6c80:	cbz	x2, 6fb8 <PySequence_Fast@plt+0x2d78>
    6c84:	ldr	x21, [x2, #16]
    6c88:	add	x21, x1, x21
    6c8c:	add	x0, sp, #0x50
    6c90:	str	x0, [sp]
    6c94:	mov	w7, #0x0                   	// #0
    6c98:	mov	w6, #0x0                   	// #0
    6c9c:	mov	w5, #0x0                   	// #0
    6ca0:	adrp	x4, 20000 <PyInit__elementtree@@Base+0x136c8>
    6ca4:	add	x4, x4, #0x9b8
    6ca8:	add	x4, x4, #0x160
    6cac:	mov	x3, #0x0                   	// #0
    6cb0:	mov	x2, x20
    6cb4:	add	x0, x8, #0x18
    6cb8:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    6cbc:	cbz	x0, 7128 <PySequence_Fast@plt+0x2ee8>
    6cc0:	cbz	x21, 7010 <PySequence_Fast@plt+0x2dd0>
    6cc4:	ldr	x20, [x0]
    6cc8:	cbz	x20, 6cd4 <PySequence_Fast@plt+0x2a94>
    6ccc:	cmp	x21, #0x1
    6cd0:	b.eq	701c <PySequence_Fast@plt+0x2ddc>  // b.none
    6cd4:	ldr	x0, [x0, #8]
    6cd8:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    6cdc:	ldr	x1, [x1, #3976]
    6ce0:	cmp	x0, x1
    6ce4:	b.eq	7024 <PySequence_Fast@plt+0x2de4>  // b.none
    6ce8:	ldr	x1, [x0, #8]
    6cec:	ldr	x1, [x1, #168]
    6cf0:	tbz	w1, #28, 6fe8 <PySequence_Fast@plt+0x2da8>
    6cf4:	add	x1, sp, #0x48
    6cf8:	bl	4170 <PyUnicode_AsUTF8AndSize@plt>
    6cfc:	mov	x21, x0
    6d00:	cbz	x0, 6fe0 <PySequence_Fast@plt+0x2da0>
    6d04:	bl	3c70 <strlen@plt>
    6d08:	ldr	x1, [sp, #72]
    6d0c:	cmp	x0, x1
    6d10:	b.ne	6fc8 <PySequence_Fast@plt+0x2d88>  // b.any
    6d14:	bl	4080 <PyDict_New@plt>
    6d18:	str	x0, [x19, #32]
    6d1c:	cbz	x0, 7130 <PySequence_Fast@plt+0x2ef0>
    6d20:	bl	4080 <PyDict_New@plt>
    6d24:	str	x0, [x19, #40]
    6d28:	cbz	x0, 702c <PySequence_Fast@plt+0x2dec>
    6d2c:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x146c8>
    6d30:	ldr	x0, [x0, #1072]
    6d34:	ldr	x3, [x0, #64]
    6d38:	adrp	x2, c000 <PySequence_Fast@plt+0x7dc0>
    6d3c:	add	x2, x2, #0xdf8
    6d40:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x136c8>
    6d44:	add	x1, x1, #0x320
    6d48:	add	x1, x1, #0x1a0
    6d4c:	mov	x0, x21
    6d50:	blr	x3
    6d54:	str	x0, [x19, #16]
    6d58:	cbz	x0, 7054 <PySequence_Fast@plt+0x2e14>
    6d5c:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x146c8>
    6d60:	ldr	x1, [x1, #1072]
    6d64:	ldr	x2, [x1, #168]
    6d68:	cbz	x2, 6d7c <PySequence_Fast@plt+0x2b3c>
    6d6c:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    6d70:	ldr	x1, [x1, #4040]
    6d74:	ldr	x1, [x1, #16]
    6d78:	blr	x2
    6d7c:	cbz	x20, 70a8 <PySequence_Fast@plt+0x2e68>
    6d80:	ldr	x0, [x20]
    6d84:	add	x0, x0, #0x1
    6d88:	str	x0, [x20]
    6d8c:	str	x20, [x19, #24]
    6d90:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    6d94:	add	x1, x1, #0xe00
    6d98:	mov	x0, x20
    6d9c:	bl	3d00 <PyObject_GetAttrString@plt>
    6da0:	str	x0, [x19, #48]
    6da4:	bl	6c1c <PySequence_Fast@plt+0x29dc>
    6da8:	cbnz	w0, 7140 <PySequence_Fast@plt+0x2f00>
    6dac:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    6db0:	add	x1, x1, #0xe10
    6db4:	mov	x0, x20
    6db8:	bl	3d00 <PyObject_GetAttrString@plt>
    6dbc:	str	x0, [x19, #56]
    6dc0:	bl	6c1c <PySequence_Fast@plt+0x29dc>
    6dc4:	cbnz	w0, 7148 <PySequence_Fast@plt+0x2f08>
    6dc8:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    6dcc:	add	x1, x1, #0xe18
    6dd0:	mov	x0, x20
    6dd4:	bl	3d00 <PyObject_GetAttrString@plt>
    6dd8:	str	x0, [x19, #64]
    6ddc:	bl	6c1c <PySequence_Fast@plt+0x29dc>
    6de0:	cbnz	w0, 7150 <PySequence_Fast@plt+0x2f10>
    6de4:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    6de8:	add	x1, x1, #0xe20
    6dec:	mov	x0, x20
    6df0:	bl	3d00 <PyObject_GetAttrString@plt>
    6df4:	str	x0, [x19, #72]
    6df8:	bl	6c1c <PySequence_Fast@plt+0x29dc>
    6dfc:	cbnz	w0, 7158 <PySequence_Fast@plt+0x2f18>
    6e00:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    6e04:	add	x1, x1, #0xe28
    6e08:	mov	x0, x20
    6e0c:	bl	3d00 <PyObject_GetAttrString@plt>
    6e10:	str	x0, [x19, #80]
    6e14:	bl	6c1c <PySequence_Fast@plt+0x29dc>
    6e18:	cbnz	w0, 7160 <PySequence_Fast@plt+0x2f20>
    6e1c:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    6e20:	add	x1, x1, #0xe30
    6e24:	mov	x0, x20
    6e28:	bl	3d00 <PyObject_GetAttrString@plt>
    6e2c:	str	x0, [x19, #88]
    6e30:	bl	6c1c <PySequence_Fast@plt+0x29dc>
    6e34:	cbnz	w0, 7168 <PySequence_Fast@plt+0x2f28>
    6e38:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    6e3c:	add	x1, x1, #0xe38
    6e40:	mov	x0, x20
    6e44:	bl	3d00 <PyObject_GetAttrString@plt>
    6e48:	str	x0, [x19, #96]
    6e4c:	bl	6c1c <PySequence_Fast@plt+0x29dc>
    6e50:	cbnz	w0, 7170 <PySequence_Fast@plt+0x2f30>
    6e54:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    6e58:	add	x1, x1, #0xe40
    6e5c:	mov	x0, x20
    6e60:	bl	3d00 <PyObject_GetAttrString@plt>
    6e64:	str	x0, [x19, #112]
    6e68:	bl	6c1c <PySequence_Fast@plt+0x29dc>
    6e6c:	cbnz	w0, 7178 <PySequence_Fast@plt+0x2f38>
    6e70:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    6e74:	add	x1, x1, #0xe48
    6e78:	mov	x0, x20
    6e7c:	bl	3d00 <PyObject_GetAttrString@plt>
    6e80:	str	x0, [x19, #104]
    6e84:	bl	6c1c <PySequence_Fast@plt+0x29dc>
    6e88:	mov	w20, w0
    6e8c:	cbnz	w0, 7180 <PySequence_Fast@plt+0x2f40>
    6e90:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x146c8>
    6e94:	ldr	x0, [x0, #1072]
    6e98:	ldr	x2, [x0, #136]
    6e9c:	mov	x1, x19
    6ea0:	ldr	x0, [x19, #16]
    6ea4:	blr	x2
    6ea8:	ldr	x0, [x19, #48]
    6eac:	cbz	x0, 711c <PySequence_Fast@plt+0x2edc>
    6eb0:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x146c8>
    6eb4:	ldr	x0, [x0, #1072]
    6eb8:	ldr	x3, [x0, #112]
    6ebc:	adrp	x2, b000 <PySequence_Fast@plt+0x6dc0>
    6ec0:	add	x2, x2, #0x518
    6ec4:	adrp	x1, b000 <PySequence_Fast@plt+0x6dc0>
    6ec8:	add	x1, x1, #0x808
    6ecc:	ldr	x0, [x19, #16]
    6ed0:	blr	x3
    6ed4:	adrp	x21, 21000 <PyInit__elementtree@@Base+0x146c8>
    6ed8:	ldr	x0, [x21, #1072]
    6edc:	ldr	x3, [x0, #104]
    6ee0:	adrp	x2, b000 <PySequence_Fast@plt+0x6dc0>
    6ee4:	add	x2, x2, #0x2dc
    6ee8:	adrp	x1, 9000 <PySequence_Fast@plt+0x4dc0>
    6eec:	add	x1, x1, #0xff4
    6ef0:	ldr	x0, [x19, #16]
    6ef4:	blr	x3
    6ef8:	ldr	x0, [x21, #1072]
    6efc:	ldr	x2, [x0, #96]
    6f00:	adrp	x1, b000 <PySequence_Fast@plt+0x6dc0>
    6f04:	add	x1, x1, #0xec
    6f08:	ldr	x0, [x19, #16]
    6f0c:	blr	x2
    6f10:	ldr	x0, [x21, #1072]
    6f14:	ldr	x2, [x0, #80]
    6f18:	adrp	x1, b000 <PySequence_Fast@plt+0x6dc0>
    6f1c:	add	x1, x1, #0x3e8
    6f20:	ldr	x0, [x19, #16]
    6f24:	blr	x2
    6f28:	ldr	x0, [x19, #88]
    6f2c:	cbz	x0, 6f48 <PySequence_Fast@plt+0x2d08>
    6f30:	ldr	x0, [x21, #1072]
    6f34:	ldr	x2, [x0, #88]
    6f38:	adrp	x1, b000 <PySequence_Fast@plt+0x6dc0>
    6f3c:	add	x1, x1, #0x66c
    6f40:	ldr	x0, [x19, #16]
    6f44:	blr	x2
    6f48:	ldr	x0, [x19, #96]
    6f4c:	cbz	x0, 6f6c <PySequence_Fast@plt+0x2d2c>
    6f50:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x146c8>
    6f54:	ldr	x0, [x0, #1072]
    6f58:	ldr	x2, [x0, #120]
    6f5c:	adrp	x1, b000 <PySequence_Fast@plt+0x6dc0>
    6f60:	add	x1, x1, #0xb40
    6f64:	ldr	x0, [x19, #16]
    6f68:	blr	x2
    6f6c:	adrp	x21, 21000 <PyInit__elementtree@@Base+0x146c8>
    6f70:	ldr	x0, [x21, #1072]
    6f74:	ldr	x2, [x0, #144]
    6f78:	adrp	x1, 6000 <PySequence_Fast@plt+0x1dc0>
    6f7c:	add	x1, x1, #0xa3c
    6f80:	ldr	x0, [x19, #16]
    6f84:	blr	x2
    6f88:	ldr	x0, [x21, #1072]
    6f8c:	ldr	x3, [x0, #128]
    6f90:	mov	x2, #0x0                   	// #0
    6f94:	ldr	x1, [x0, #160]
    6f98:	ldr	x0, [x19, #16]
    6f9c:	blr	x3
    6fa0:	mov	w0, w20
    6fa4:	ldp	x19, x20, [sp, #32]
    6fa8:	ldr	x21, [sp, #48]
    6fac:	ldp	x29, x30, [sp, #16]
    6fb0:	add	sp, sp, #0x60
    6fb4:	ret
    6fb8:	mov	x21, x2
    6fbc:	cbz	x1, 6d14 <PySequence_Fast@plt+0x2ad4>
    6fc0:	mov	x21, x1
    6fc4:	b	6c8c <PySequence_Fast@plt+0x2a4c>
    6fc8:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    6fcc:	add	x1, x1, #0xda8
    6fd0:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    6fd4:	ldr	x0, [x0, #3928]
    6fd8:	ldr	x0, [x0]
    6fdc:	bl	3de0 <PyErr_SetString@plt>
    6fe0:	mov	w20, #0xffffffff            	// #-1
    6fe4:	b	6fa0 <PySequence_Fast@plt+0x2d60>
    6fe8:	mov	x3, x0
    6fec:	adrp	x2, c000 <PySequence_Fast@plt+0x7dc0>
    6ff0:	add	x2, x2, #0xdc0
    6ff4:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    6ff8:	add	x1, x1, #0xdd0
    6ffc:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    7000:	add	x0, x0, #0xde8
    7004:	bl	3ed0 <_PyArg_BadArgument@plt>
    7008:	mov	w20, #0xffffffff            	// #-1
    700c:	b	6fa0 <PySequence_Fast@plt+0x2d60>
    7010:	mov	x21, #0x0                   	// #0
    7014:	mov	x20, #0x0                   	// #0
    7018:	b	6d14 <PySequence_Fast@plt+0x2ad4>
    701c:	mov	x21, #0x0                   	// #0
    7020:	b	6d14 <PySequence_Fast@plt+0x2ad4>
    7024:	mov	x21, #0x0                   	// #0
    7028:	b	6d14 <PySequence_Fast@plt+0x2ad4>
    702c:	ldr	x0, [x19, #32]
    7030:	mov	w20, #0xffffffff            	// #-1
    7034:	cbz	x0, 6fa0 <PySequence_Fast@plt+0x2d60>
    7038:	str	xzr, [x19, #32]
    703c:	ldr	x1, [x0]
    7040:	sub	x1, x1, #0x1
    7044:	str	x1, [x0]
    7048:	cbnz	x1, 6fa0 <PySequence_Fast@plt+0x2d60>
    704c:	bl	3d70 <_Py_Dealloc@plt>
    7050:	b	6fa0 <PySequence_Fast@plt+0x2d60>
    7054:	ldr	x0, [x19, #32]
    7058:	cbz	x0, 7070 <PySequence_Fast@plt+0x2e30>
    705c:	str	xzr, [x19, #32]
    7060:	ldr	x1, [x0]
    7064:	sub	x1, x1, #0x1
    7068:	str	x1, [x0]
    706c:	cbz	x1, 7098 <PySequence_Fast@plt+0x2e58>
    7070:	ldr	x0, [x19, #40]
    7074:	cbz	x0, 708c <PySequence_Fast@plt+0x2e4c>
    7078:	str	xzr, [x19, #40]
    707c:	ldr	x1, [x0]
    7080:	sub	x1, x1, #0x1
    7084:	str	x1, [x0]
    7088:	cbz	x1, 70a0 <PySequence_Fast@plt+0x2e60>
    708c:	bl	3d80 <PyErr_NoMemory@plt>
    7090:	mov	w20, #0xffffffff            	// #-1
    7094:	b	6fa0 <PySequence_Fast@plt+0x2d60>
    7098:	bl	3d70 <_Py_Dealloc@plt>
    709c:	b	7070 <PySequence_Fast@plt+0x2e30>
    70a0:	bl	3d70 <_Py_Dealloc@plt>
    70a4:	b	708c <PySequence_Fast@plt+0x2e4c>
    70a8:	mov	x2, #0x0                   	// #0
    70ac:	mov	x1, #0x0                   	// #0
    70b0:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x136c8>
    70b4:	add	x0, x0, #0x320
    70b8:	add	x0, x0, #0x1b8
    70bc:	bl	59d0 <PySequence_Fast@plt+0x1790>
    70c0:	mov	x20, x0
    70c4:	cbnz	x0, 6d8c <PySequence_Fast@plt+0x2b4c>
    70c8:	ldr	x0, [x19, #32]
    70cc:	cbz	x0, 70e4 <PySequence_Fast@plt+0x2ea4>
    70d0:	str	xzr, [x19, #32]
    70d4:	ldr	x1, [x0]
    70d8:	sub	x1, x1, #0x1
    70dc:	str	x1, [x0]
    70e0:	cbz	x1, 7108 <PySequence_Fast@plt+0x2ec8>
    70e4:	ldr	x0, [x19, #40]
    70e8:	cbz	x0, 7138 <PySequence_Fast@plt+0x2ef8>
    70ec:	str	xzr, [x19, #40]
    70f0:	ldr	x1, [x0]
    70f4:	sub	x1, x1, #0x1
    70f8:	str	x1, [x0]
    70fc:	cbz	x1, 7110 <PySequence_Fast@plt+0x2ed0>
    7100:	mov	w20, #0xffffffff            	// #-1
    7104:	b	6fa0 <PySequence_Fast@plt+0x2d60>
    7108:	bl	3d70 <_Py_Dealloc@plt>
    710c:	b	70e4 <PySequence_Fast@plt+0x2ea4>
    7110:	bl	3d70 <_Py_Dealloc@plt>
    7114:	mov	w20, #0xffffffff            	// #-1
    7118:	b	6fa0 <PySequence_Fast@plt+0x2d60>
    711c:	ldr	x0, [x19, #56]
    7120:	cbnz	x0, 6eb0 <PySequence_Fast@plt+0x2c70>
    7124:	b	6ed4 <PySequence_Fast@plt+0x2c94>
    7128:	mov	w20, #0xffffffff            	// #-1
    712c:	b	6fa0 <PySequence_Fast@plt+0x2d60>
    7130:	mov	w20, #0xffffffff            	// #-1
    7134:	b	6fa0 <PySequence_Fast@plt+0x2d60>
    7138:	mov	w20, #0xffffffff            	// #-1
    713c:	b	6fa0 <PySequence_Fast@plt+0x2d60>
    7140:	mov	w20, #0xffffffff            	// #-1
    7144:	b	6fa0 <PySequence_Fast@plt+0x2d60>
    7148:	mov	w20, #0xffffffff            	// #-1
    714c:	b	6fa0 <PySequence_Fast@plt+0x2d60>
    7150:	mov	w20, #0xffffffff            	// #-1
    7154:	b	6fa0 <PySequence_Fast@plt+0x2d60>
    7158:	mov	w20, #0xffffffff            	// #-1
    715c:	b	6fa0 <PySequence_Fast@plt+0x2d60>
    7160:	mov	w20, #0xffffffff            	// #-1
    7164:	b	6fa0 <PySequence_Fast@plt+0x2d60>
    7168:	mov	w20, #0xffffffff            	// #-1
    716c:	b	6fa0 <PySequence_Fast@plt+0x2d60>
    7170:	mov	w20, #0xffffffff            	// #-1
    7174:	b	6fa0 <PySequence_Fast@plt+0x2d60>
    7178:	mov	w20, #0xffffffff            	// #-1
    717c:	b	6fa0 <PySequence_Fast@plt+0x2d60>
    7180:	mov	w20, #0xffffffff            	// #-1
    7184:	b	6fa0 <PySequence_Fast@plt+0x2d60>
    7188:	stp	x29, x30, [sp, #-48]!
    718c:	mov	x29, sp
    7190:	stp	x19, x20, [sp, #16]
    7194:	mov	x20, x0
    7198:	mov	x19, x1
    719c:	cmp	x2, #0x2
    71a0:	b.eq	71c0 <PySequence_Fast@plt+0x2f80>  // b.none
    71a4:	mov	x1, x2
    71a8:	mov	x3, #0x2                   	// #2
    71ac:	mov	x2, x3
    71b0:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    71b4:	add	x0, x0, #0xe50
    71b8:	bl	3f60 <_PyArg_CheckPositional@plt>
    71bc:	cbz	w0, 7234 <PySequence_Fast@plt+0x2ff4>
    71c0:	stp	x21, x22, [sp, #32]
    71c4:	ldr	x21, [x19]
    71c8:	ldr	x22, [x19, #8]
    71cc:	ldr	x19, [x20, #40]
    71d0:	cbz	x19, 721c <PySequence_Fast@plt+0x2fdc>
    71d4:	mov	x0, x20
    71d8:	bl	5e7c <PySequence_Fast@plt+0x1c3c>
    71dc:	mov	x19, x0
    71e0:	cbz	x0, 7248 <PySequence_Fast@plt+0x3008>
    71e4:	mov	x2, x22
    71e8:	mov	x1, x21
    71ec:	bl	4140 <PyDict_SetItem@plt>
    71f0:	tbnz	w0, #31, 723c <PySequence_Fast@plt+0x2ffc>
    71f4:	adrp	x19, 1f000 <PyInit__elementtree@@Base+0x126c8>
    71f8:	ldr	x19, [x19, #3976]
    71fc:	ldr	x0, [x19]
    7200:	add	x0, x0, #0x1
    7204:	str	x0, [x19]
    7208:	ldp	x21, x22, [sp, #32]
    720c:	mov	x0, x19
    7210:	ldp	x19, x20, [sp, #16]
    7214:	ldp	x29, x30, [sp], #48
    7218:	ret
    721c:	mov	x1, #0x0                   	// #0
    7220:	mov	x0, x20
    7224:	bl	4e20 <PySequence_Fast@plt+0xbe0>
    7228:	tbz	w0, #31, 71d4 <PySequence_Fast@plt+0x2f94>
    722c:	ldp	x21, x22, [sp, #32]
    7230:	b	720c <PySequence_Fast@plt+0x2fcc>
    7234:	mov	x19, #0x0                   	// #0
    7238:	b	720c <PySequence_Fast@plt+0x2fcc>
    723c:	mov	x19, #0x0                   	// #0
    7240:	ldp	x21, x22, [sp, #32]
    7244:	b	720c <PySequence_Fast@plt+0x2fcc>
    7248:	ldp	x21, x22, [sp, #32]
    724c:	b	720c <PySequence_Fast@plt+0x2fcc>
    7250:	stp	x29, x30, [sp, #-64]!
    7254:	mov	x29, sp
    7258:	stp	x19, x20, [sp, #16]
    725c:	stp	x21, x22, [sp, #32]
    7260:	mov	x22, x0
    7264:	mov	x19, x1
    7268:	adrp	x1, d000 <PyInit__elementtree@@Base+0x6c8>
    726c:	add	x1, x1, #0x600
    7270:	mov	x0, x19
    7274:	bl	4240 <PySequence_Fast@plt>
    7278:	mov	x20, x0
    727c:	cbz	x0, 72d4 <PySequence_Fast@plt+0x3094>
    7280:	str	x23, [sp, #48]
    7284:	ldr	x0, [x0, #16]
    7288:	mov	x21, #0x0                   	// #0
    728c:	add	x23, x20, #0x18
    7290:	cmp	x0, #0x0
    7294:	b.gt	7338 <PySequence_Fast@plt+0x30f8>
    7298:	ldr	x0, [x20]
    729c:	sub	x0, x0, #0x1
    72a0:	str	x0, [x20]
    72a4:	cbz	x0, 73a4 <PySequence_Fast@plt+0x3164>
    72a8:	adrp	x20, 1f000 <PyInit__elementtree@@Base+0x126c8>
    72ac:	ldr	x20, [x20, #3976]
    72b0:	ldr	x0, [x20]
    72b4:	add	x0, x0, #0x1
    72b8:	str	x0, [x20]
    72bc:	ldr	x23, [sp, #48]
    72c0:	mov	x0, x20
    72c4:	ldp	x19, x20, [sp, #16]
    72c8:	ldp	x21, x22, [sp, #32]
    72cc:	ldp	x29, x30, [sp], #64
    72d0:	ret
    72d4:	ldr	x0, [x19, #8]
    72d8:	ldr	x2, [x0, #24]
    72dc:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    72e0:	add	x1, x1, #0xe58
    72e4:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    72e8:	ldr	x0, [x0, #3944]
    72ec:	ldr	x0, [x0]
    72f0:	bl	4180 <PyErr_Format@plt>
    72f4:	b	72c0 <PySequence_Fast@plt+0x3080>
    72f8:	ldr	x19, [x23, x21, lsl #3]
    72fc:	ldr	x1, [x19]
    7300:	add	x1, x1, #0x1
    7304:	str	x1, [x19]
    7308:	mov	x1, x19
    730c:	mov	x0, x22
    7310:	bl	4fbc <PySequence_Fast@plt+0xd7c>
    7314:	tbnz	w0, #31, 7350 <PySequence_Fast@plt+0x3110>
    7318:	ldr	x1, [x19]
    731c:	sub	x1, x1, #0x1
    7320:	str	x1, [x19]
    7324:	cbz	x1, 7398 <PySequence_Fast@plt+0x3158>
    7328:	add	x21, x21, #0x1
    732c:	ldr	x0, [x20, #16]
    7330:	cmp	x0, x21
    7334:	b.le	7298 <PySequence_Fast@plt+0x3058>
    7338:	ldr	x0, [x20, #8]
    733c:	ldr	x0, [x0, #168]
    7340:	tbz	w0, #25, 72f8 <PySequence_Fast@plt+0x30b8>
    7344:	ldr	x0, [x20, #24]
    7348:	ldr	x19, [x0, x21, lsl #3]
    734c:	b	72fc <PySequence_Fast@plt+0x30bc>
    7350:	ldr	x0, [x20]
    7354:	sub	x0, x0, #0x1
    7358:	str	x0, [x20]
    735c:	cbz	x0, 737c <PySequence_Fast@plt+0x313c>
    7360:	ldr	x0, [x19]
    7364:	sub	x0, x0, #0x1
    7368:	str	x0, [x19]
    736c:	mov	x20, #0x0                   	// #0
    7370:	cbz	x0, 7388 <PySequence_Fast@plt+0x3148>
    7374:	ldr	x23, [sp, #48]
    7378:	b	72c0 <PySequence_Fast@plt+0x3080>
    737c:	mov	x0, x20
    7380:	bl	3d70 <_Py_Dealloc@plt>
    7384:	b	7360 <PySequence_Fast@plt+0x3120>
    7388:	mov	x0, x19
    738c:	bl	3d70 <_Py_Dealloc@plt>
    7390:	ldr	x23, [sp, #48]
    7394:	b	72c0 <PySequence_Fast@plt+0x3080>
    7398:	mov	x0, x19
    739c:	bl	3d70 <_Py_Dealloc@plt>
    73a0:	b	7328 <PySequence_Fast@plt+0x30e8>
    73a4:	mov	x0, x20
    73a8:	bl	3d70 <_Py_Dealloc@plt>
    73ac:	b	72a8 <PySequence_Fast@plt+0x3068>
    73b0:	stp	x29, x30, [sp, #-96]!
    73b4:	mov	x29, sp
    73b8:	stp	x19, x20, [sp, #16]
    73bc:	stp	x21, x22, [sp, #32]
    73c0:	stp	x23, x24, [sp, #48]
    73c4:	mov	x24, x0
    73c8:	mov	x21, x1
    73cc:	mov	x19, x2
    73d0:	sub	x0, x2, #0x1
    73d4:	cmp	x0, #0x1
    73d8:	b.hi	7534 <PySequence_Fast@plt+0x32f4>  // b.pmore
    73dc:	cmp	x19, #0x1
    73e0:	b.le	7558 <PySequence_Fast@plt+0x3318>
    73e4:	ldr	x20, [x21, #8]
    73e8:	ldr	x19, [x24, #24]
    73ec:	adrp	x2, 20000 <PyInit__elementtree@@Base+0x136c8>
    73f0:	add	x2, x2, #0x320
    73f4:	ldr	x0, [x19, #8]
    73f8:	add	x2, x2, #0x1b8
    73fc:	cmp	x0, x2
    7400:	b.ne	7564 <PySequence_Fast@plt+0x3324>  // b.any
    7404:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    7408:	add	x1, x1, #0xc20
    740c:	ldr	x0, [x21]
    7410:	bl	3d00 <PyObject_GetAttrString@plt>
    7414:	cbz	x0, 7908 <PySequence_Fast@plt+0x36c8>
    7418:	ldr	x1, [x19, #96]
    741c:	str	x0, [x19, #96]
    7420:	cbz	x1, 7434 <PySequence_Fast@plt+0x31f4>
    7424:	ldr	x0, [x1]
    7428:	sub	x0, x0, #0x1
    742c:	str	x0, [x1]
    7430:	cbz	x0, 7598 <PySequence_Fast@plt+0x3358>
    7434:	ldr	x0, [x19, #104]
    7438:	cbz	x0, 7450 <PySequence_Fast@plt+0x3210>
    743c:	str	xzr, [x19, #104]
    7440:	ldr	x1, [x0]
    7444:	sub	x1, x1, #0x1
    7448:	str	x1, [x0]
    744c:	cbz	x1, 75a4 <PySequence_Fast@plt+0x3364>
    7450:	ldr	x0, [x19, #112]
    7454:	cbz	x0, 746c <PySequence_Fast@plt+0x322c>
    7458:	str	xzr, [x19, #112]
    745c:	ldr	x1, [x0]
    7460:	sub	x1, x1, #0x1
    7464:	str	x1, [x0]
    7468:	cbz	x1, 75ac <PySequence_Fast@plt+0x336c>
    746c:	ldr	x0, [x19, #120]
    7470:	cbz	x0, 7488 <PySequence_Fast@plt+0x3248>
    7474:	str	xzr, [x19, #120]
    7478:	ldr	x1, [x0]
    747c:	sub	x1, x1, #0x1
    7480:	str	x1, [x0]
    7484:	cbz	x1, 75b4 <PySequence_Fast@plt+0x3374>
    7488:	ldr	x0, [x19, #128]
    748c:	cbz	x0, 74a4 <PySequence_Fast@plt+0x3264>
    7490:	str	xzr, [x19, #128]
    7494:	ldr	x1, [x0]
    7498:	sub	x1, x1, #0x1
    749c:	str	x1, [x0]
    74a0:	cbz	x1, 75bc <PySequence_Fast@plt+0x337c>
    74a4:	ldr	x0, [x19, #136]
    74a8:	cbz	x0, 74c0 <PySequence_Fast@plt+0x3280>
    74ac:	str	xzr, [x19, #136]
    74b0:	ldr	x1, [x0]
    74b4:	sub	x1, x1, #0x1
    74b8:	str	x1, [x0]
    74bc:	cbz	x1, 75c4 <PySequence_Fast@plt+0x3384>
    74c0:	ldr	x0, [x19, #144]
    74c4:	cbz	x0, 74dc <PySequence_Fast@plt+0x329c>
    74c8:	str	xzr, [x19, #144]
    74cc:	ldr	x1, [x0]
    74d0:	sub	x1, x1, #0x1
    74d4:	str	x1, [x0]
    74d8:	cbz	x1, 75cc <PySequence_Fast@plt+0x338c>
    74dc:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    74e0:	ldr	x0, [x0, #3976]
    74e4:	cmp	x20, x0
    74e8:	b.eq	75d4 <PySequence_Fast@plt+0x3394>  // b.none
    74ec:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    74f0:	add	x1, x1, #0xed0
    74f4:	mov	x0, x20
    74f8:	bl	4240 <PySequence_Fast@plt>
    74fc:	mov	x20, x0
    7500:	cbz	x0, 7580 <PySequence_Fast@plt+0x3340>
    7504:	ldr	x0, [x0, #16]
    7508:	cmp	x0, #0x0
    750c:	b.le	78d4 <PySequence_Fast@plt+0x3694>
    7510:	stp	x25, x26, [sp, #64]
    7514:	stp	x27, x28, [sp, #80]
    7518:	mov	x23, #0x0                   	// #0
    751c:	add	x27, x20, #0x18
    7520:	adrp	x26, c000 <PySequence_Fast@plt+0x7dc0>
    7524:	add	x26, x26, #0xe18
    7528:	adrp	x25, c000 <PySequence_Fast@plt+0x7dc0>
    752c:	add	x25, x25, #0xe28
    7530:	b	76f0 <PySequence_Fast@plt+0x34b0>
    7534:	mov	x3, #0x2                   	// #2
    7538:	mov	x2, #0x1                   	// #1
    753c:	mov	x1, x19
    7540:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    7544:	add	x0, x0, #0xe78
    7548:	bl	3f60 <_PyArg_CheckPositional@plt>
    754c:	cbnz	w0, 73dc <PySequence_Fast@plt+0x319c>
    7550:	mov	x20, #0x0                   	// #0
    7554:	b	7580 <PySequence_Fast@plt+0x3340>
    7558:	adrp	x20, 1f000 <PyInit__elementtree@@Base+0x126c8>
    755c:	ldr	x20, [x20, #3976]
    7560:	b	73e8 <PySequence_Fast@plt+0x31a8>
    7564:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    7568:	add	x1, x1, #0xe88
    756c:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    7570:	ldr	x0, [x0, #3944]
    7574:	ldr	x0, [x0]
    7578:	bl	3de0 <PyErr_SetString@plt>
    757c:	mov	x20, #0x0                   	// #0
    7580:	mov	x0, x20
    7584:	ldp	x19, x20, [sp, #16]
    7588:	ldp	x21, x22, [sp, #32]
    758c:	ldp	x23, x24, [sp, #48]
    7590:	ldp	x29, x30, [sp], #96
    7594:	ret
    7598:	mov	x0, x1
    759c:	bl	3d70 <_Py_Dealloc@plt>
    75a0:	b	7434 <PySequence_Fast@plt+0x31f4>
    75a4:	bl	3d70 <_Py_Dealloc@plt>
    75a8:	b	7450 <PySequence_Fast@plt+0x3210>
    75ac:	bl	3d70 <_Py_Dealloc@plt>
    75b0:	b	746c <PySequence_Fast@plt+0x322c>
    75b4:	bl	3d70 <_Py_Dealloc@plt>
    75b8:	b	7488 <PySequence_Fast@plt+0x3248>
    75bc:	bl	3d70 <_Py_Dealloc@plt>
    75c0:	b	74a4 <PySequence_Fast@plt+0x3264>
    75c4:	bl	3d70 <_Py_Dealloc@plt>
    75c8:	b	74c0 <PySequence_Fast@plt+0x3280>
    75cc:	bl	3d70 <_Py_Dealloc@plt>
    75d0:	b	74dc <PySequence_Fast@plt+0x329c>
    75d4:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    75d8:	add	x0, x0, #0xe28
    75dc:	bl	4100 <PyUnicode_FromString@plt>
    75e0:	str	x0, [x19, #112]
    75e4:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    75e8:	ldr	x0, [x0, #3976]
    75ec:	ldr	x1, [x0]
    75f0:	add	x1, x1, #0x1
    75f4:	str	x1, [x0]
    75f8:	b	7580 <PySequence_Fast@plt+0x3340>
    75fc:	ldr	x21, [x27, x23, lsl #3]
    7600:	b	7704 <PySequence_Fast@plt+0x34c4>
    7604:	mov	x0, x21
    7608:	bl	40c0 <PyUnicode_AsUTF8@plt>
    760c:	mov	x22, x0
    7610:	cbnz	x0, 7718 <PySequence_Fast@plt+0x34d8>
    7614:	ldr	x0, [x20]
    7618:	sub	x0, x0, #0x1
    761c:	str	x0, [x20]
    7620:	cbz	x0, 764c <PySequence_Fast@plt+0x340c>
    7624:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    7628:	add	x1, x1, #0xef0
    762c:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    7630:	ldr	x0, [x0, #3928]
    7634:	ldr	x0, [x0]
    7638:	bl	4180 <PyErr_Format@plt>
    763c:	mov	x20, #0x0                   	// #0
    7640:	ldp	x25, x26, [sp, #64]
    7644:	ldp	x27, x28, [sp, #80]
    7648:	b	7580 <PySequence_Fast@plt+0x3340>
    764c:	mov	x0, x20
    7650:	bl	3d70 <_Py_Dealloc@plt>
    7654:	b	7624 <PySequence_Fast@plt+0x33e4>
    7658:	mov	x1, x25
    765c:	mov	x0, x22
    7660:	bl	3ff0 <strcmp@plt>
    7664:	cbnz	w0, 768c <PySequence_Fast@plt+0x344c>
    7668:	ldr	x0, [x19, #112]
    766c:	str	x21, [x19, #112]
    7670:	cbz	x0, 76e0 <PySequence_Fast@plt+0x34a0>
    7674:	ldr	x1, [x0]
    7678:	sub	x1, x1, #0x1
    767c:	str	x1, [x0]
    7680:	cbnz	x1, 76e0 <PySequence_Fast@plt+0x34a0>
    7684:	bl	3d70 <_Py_Dealloc@plt>
    7688:	b	76e0 <PySequence_Fast@plt+0x34a0>
    768c:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    7690:	add	x1, x1, #0xf08
    7694:	mov	x0, x22
    7698:	bl	3ff0 <strcmp@plt>
    769c:	cbnz	w0, 7760 <PySequence_Fast@plt+0x3520>
    76a0:	ldr	x0, [x19, #120]
    76a4:	str	x21, [x19, #120]
    76a8:	cbz	x0, 76bc <PySequence_Fast@plt+0x347c>
    76ac:	ldr	x1, [x0]
    76b0:	sub	x1, x1, #0x1
    76b4:	str	x1, [x0]
    76b8:	cbz	x1, 7758 <PySequence_Fast@plt+0x3518>
    76bc:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x146c8>
    76c0:	ldr	x0, [x0, #1072]
    76c4:	ldr	x3, [x0, #112]
    76c8:	adrp	x2, b000 <PySequence_Fast@plt+0x6dc0>
    76cc:	add	x2, x2, #0x518
    76d0:	adrp	x1, b000 <PySequence_Fast@plt+0x6dc0>
    76d4:	add	x1, x1, #0x808
    76d8:	ldr	x0, [x24, #16]
    76dc:	blr	x3
    76e0:	add	x23, x23, #0x1
    76e4:	ldr	x0, [x20, #16]
    76e8:	cmp	x23, x0
    76ec:	b.ge	78cc <PySequence_Fast@plt+0x368c>  // b.tcont
    76f0:	ldr	x0, [x20, #8]
    76f4:	ldr	x0, [x0, #168]
    76f8:	tbz	w0, #25, 75fc <PySequence_Fast@plt+0x33bc>
    76fc:	ldr	x0, [x20, #24]
    7700:	ldr	x21, [x0, x23, lsl #3]
    7704:	ldr	x0, [x21, #8]
    7708:	ldr	x0, [x0, #168]
    770c:	tbnz	w0, #28, 7604 <PySequence_Fast@plt+0x33c4>
    7710:	tbz	w0, #27, 7614 <PySequence_Fast@plt+0x33d4>
    7714:	add	x22, x21, #0x20
    7718:	ldr	x28, [x21]
    771c:	add	x0, x28, #0x1
    7720:	str	x0, [x21]
    7724:	mov	x1, x26
    7728:	mov	x0, x22
    772c:	bl	3ff0 <strcmp@plt>
    7730:	cbnz	w0, 7658 <PySequence_Fast@plt+0x3418>
    7734:	ldr	x0, [x19, #104]
    7738:	str	x21, [x19, #104]
    773c:	cbz	x0, 76e0 <PySequence_Fast@plt+0x34a0>
    7740:	ldr	x1, [x0]
    7744:	sub	x1, x1, #0x1
    7748:	str	x1, [x0]
    774c:	cbnz	x1, 76e0 <PySequence_Fast@plt+0x34a0>
    7750:	bl	3d70 <_Py_Dealloc@plt>
    7754:	b	76e0 <PySequence_Fast@plt+0x34a0>
    7758:	bl	3d70 <_Py_Dealloc@plt>
    775c:	b	76bc <PySequence_Fast@plt+0x347c>
    7760:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    7764:	add	x1, x1, #0xf18
    7768:	mov	x0, x22
    776c:	bl	3ff0 <strcmp@plt>
    7770:	cbnz	w0, 77c0 <PySequence_Fast@plt+0x3580>
    7774:	ldr	x0, [x19, #128]
    7778:	str	x21, [x19, #128]
    777c:	cbz	x0, 7790 <PySequence_Fast@plt+0x3550>
    7780:	ldr	x1, [x0]
    7784:	sub	x1, x1, #0x1
    7788:	str	x1, [x0]
    778c:	cbz	x1, 77b8 <PySequence_Fast@plt+0x3578>
    7790:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x146c8>
    7794:	ldr	x0, [x0, #1072]
    7798:	ldr	x3, [x0, #112]
    779c:	adrp	x2, b000 <PySequence_Fast@plt+0x6dc0>
    77a0:	add	x2, x2, #0x518
    77a4:	adrp	x1, b000 <PySequence_Fast@plt+0x6dc0>
    77a8:	add	x1, x1, #0x808
    77ac:	ldr	x0, [x24, #16]
    77b0:	blr	x3
    77b4:	b	76e0 <PySequence_Fast@plt+0x34a0>
    77b8:	bl	3d70 <_Py_Dealloc@plt>
    77bc:	b	7790 <PySequence_Fast@plt+0x3550>
    77c0:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    77c4:	add	x1, x1, #0xe30
    77c8:	mov	x0, x22
    77cc:	bl	3ff0 <strcmp@plt>
    77d0:	cbnz	w0, 7818 <PySequence_Fast@plt+0x35d8>
    77d4:	ldr	x0, [x19, #136]
    77d8:	str	x21, [x19, #136]
    77dc:	cbz	x0, 77f0 <PySequence_Fast@plt+0x35b0>
    77e0:	ldr	x1, [x0]
    77e4:	sub	x1, x1, #0x1
    77e8:	str	x1, [x0]
    77ec:	cbz	x1, 7810 <PySequence_Fast@plt+0x35d0>
    77f0:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x146c8>
    77f4:	ldr	x0, [x0, #1072]
    77f8:	ldr	x2, [x0, #88]
    77fc:	adrp	x1, b000 <PySequence_Fast@plt+0x6dc0>
    7800:	add	x1, x1, #0x66c
    7804:	ldr	x0, [x24, #16]
    7808:	blr	x2
    780c:	b	76e0 <PySequence_Fast@plt+0x34a0>
    7810:	bl	3d70 <_Py_Dealloc@plt>
    7814:	b	77f0 <PySequence_Fast@plt+0x35b0>
    7818:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    781c:	add	x1, x1, #0xe38
    7820:	mov	x0, x22
    7824:	bl	3ff0 <strcmp@plt>
    7828:	cbnz	w0, 7870 <PySequence_Fast@plt+0x3630>
    782c:	ldr	x0, [x19, #144]
    7830:	str	x21, [x19, #144]
    7834:	cbz	x0, 7848 <PySequence_Fast@plt+0x3608>
    7838:	ldr	x1, [x0]
    783c:	sub	x1, x1, #0x1
    7840:	str	x1, [x0]
    7844:	cbz	x1, 7868 <PySequence_Fast@plt+0x3628>
    7848:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x146c8>
    784c:	ldr	x0, [x0, #1072]
    7850:	ldr	x2, [x0, #120]
    7854:	adrp	x1, b000 <PySequence_Fast@plt+0x6dc0>
    7858:	add	x1, x1, #0xb40
    785c:	ldr	x0, [x24, #16]
    7860:	blr	x2
    7864:	b	76e0 <PySequence_Fast@plt+0x34a0>
    7868:	bl	3d70 <_Py_Dealloc@plt>
    786c:	b	7848 <PySequence_Fast@plt+0x3608>
    7870:	str	x28, [x21]
    7874:	cbz	x28, 78b4 <PySequence_Fast@plt+0x3674>
    7878:	ldr	x0, [x20]
    787c:	sub	x0, x0, #0x1
    7880:	str	x0, [x20]
    7884:	cbz	x0, 78c0 <PySequence_Fast@plt+0x3680>
    7888:	mov	x2, x22
    788c:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    7890:	add	x1, x1, #0xf20
    7894:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    7898:	ldr	x0, [x0, #3928]
    789c:	ldr	x0, [x0]
    78a0:	bl	4180 <PyErr_Format@plt>
    78a4:	mov	x20, #0x0                   	// #0
    78a8:	ldp	x25, x26, [sp, #64]
    78ac:	ldp	x27, x28, [sp, #80]
    78b0:	b	7580 <PySequence_Fast@plt+0x3340>
    78b4:	mov	x0, x21
    78b8:	bl	3d70 <_Py_Dealloc@plt>
    78bc:	b	7878 <PySequence_Fast@plt+0x3638>
    78c0:	mov	x0, x20
    78c4:	bl	3d70 <_Py_Dealloc@plt>
    78c8:	b	7888 <PySequence_Fast@plt+0x3648>
    78cc:	ldp	x25, x26, [sp, #64]
    78d0:	ldp	x27, x28, [sp, #80]
    78d4:	ldr	x0, [x20]
    78d8:	sub	x0, x0, #0x1
    78dc:	str	x0, [x20]
    78e0:	cbz	x0, 78fc <PySequence_Fast@plt+0x36bc>
    78e4:	adrp	x20, 1f000 <PyInit__elementtree@@Base+0x126c8>
    78e8:	ldr	x20, [x20, #3976]
    78ec:	ldr	x0, [x20]
    78f0:	add	x0, x0, #0x1
    78f4:	str	x0, [x20]
    78f8:	b	7580 <PySequence_Fast@plt+0x3340>
    78fc:	mov	x0, x20
    7900:	bl	3d70 <_Py_Dealloc@plt>
    7904:	b	78e4 <PySequence_Fast@plt+0x36a4>
    7908:	mov	x20, x0
    790c:	b	7580 <PySequence_Fast@plt+0x3340>
    7910:	stp	x29, x30, [sp, #-32]!
    7914:	mov	x29, sp
    7918:	str	x19, [sp, #16]
    791c:	mov	x19, x0
    7920:	bl	4220 <PyObject_GC_UnTrack@plt>
    7924:	mov	x0, x19
    7928:	bl	5acc <PySequence_Fast@plt+0x188c>
    792c:	ldr	x0, [x19, #8]
    7930:	ldr	x1, [x0, #320]
    7934:	mov	x0, x19
    7938:	blr	x1
    793c:	ldr	x19, [sp, #16]
    7940:	ldp	x29, x30, [sp], #32
    7944:	ret
    7948:	stp	x29, x30, [sp, #-32]!
    794c:	mov	x29, sp
    7950:	str	x19, [sp, #16]
    7954:	mov	x19, x0
    7958:	bl	4220 <PyObject_GC_UnTrack@plt>
    795c:	mov	x0, x19
    7960:	bl	66f0 <PySequence_Fast@plt+0x24b0>
    7964:	ldr	x0, [x19, #8]
    7968:	ldr	x1, [x0, #320]
    796c:	mov	x0, x19
    7970:	blr	x1
    7974:	ldr	x19, [sp, #16]
    7978:	ldp	x29, x30, [sp], #32
    797c:	ret
    7980:	stp	x29, x30, [sp, #-32]!
    7984:	mov	x29, sp
    7988:	stp	x19, x20, [sp, #16]
    798c:	mov	x19, x1
    7990:	cmp	x2, #0x2
    7994:	b.eq	79b4 <PySequence_Fast@plt+0x3774>  // b.none
    7998:	mov	x1, x2
    799c:	mov	x3, #0x2                   	// #2
    79a0:	mov	x2, x3
    79a4:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    79a8:	add	x0, x0, #0xf38
    79ac:	bl	3f60 <_PyArg_CheckPositional@plt>
    79b0:	cbz	w0, 7a04 <PySequence_Fast@plt+0x37c4>
    79b4:	ldr	x20, [x19]
    79b8:	ldr	x0, [x19, #8]
    79bc:	bl	4150 <PyDict_Copy@plt>
    79c0:	mov	x19, x0
    79c4:	cbz	x0, 7a0c <PySequence_Fast@plt+0x37cc>
    79c8:	mov	x1, x0
    79cc:	mov	x0, x20
    79d0:	bl	58f4 <PySequence_Fast@plt+0x16b4>
    79d4:	mov	x20, x0
    79d8:	ldr	x1, [x19]
    79dc:	sub	x1, x1, #0x1
    79e0:	str	x1, [x19]
    79e4:	cbz	x1, 79f8 <PySequence_Fast@plt+0x37b8>
    79e8:	mov	x0, x20
    79ec:	ldp	x19, x20, [sp, #16]
    79f0:	ldp	x29, x30, [sp], #32
    79f4:	ret
    79f8:	mov	x0, x19
    79fc:	bl	3d70 <_Py_Dealloc@plt>
    7a00:	b	79e8 <PySequence_Fast@plt+0x37a8>
    7a04:	mov	x20, #0x0                   	// #0
    7a08:	b	79e8 <PySequence_Fast@plt+0x37a8>
    7a0c:	mov	x20, x0
    7a10:	b	79e8 <PySequence_Fast@plt+0x37a8>
    7a14:	stp	x29, x30, [sp, #-48]!
    7a18:	mov	x29, sp
    7a1c:	stp	x19, x20, [sp, #16]
    7a20:	str	x21, [sp, #32]
    7a24:	mov	x21, x0
    7a28:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    7a2c:	add	x0, x0, #0xcd0
    7a30:	bl	4100 <PyUnicode_FromString@plt>
    7a34:	mov	x19, x0
    7a38:	cbz	x0, 7b58 <PySequence_Fast@plt+0x3918>
    7a3c:	mov	x1, x0
    7a40:	mov	x0, x21
    7a44:	bl	4230 <PyDict_GetItemWithError@plt>
    7a48:	mov	x20, x0
    7a4c:	cbz	x0, 7af4 <PySequence_Fast@plt+0x38b4>
    7a50:	ldr	x0, [x0, #8]
    7a54:	ldr	x0, [x0, #168]
    7a58:	tbz	w0, #29, 7a94 <PySequence_Fast@plt+0x3854>
    7a5c:	mov	x0, x20
    7a60:	bl	4150 <PyDict_Copy@plt>
    7a64:	mov	x20, x0
    7a68:	cbz	x0, 7afc <PySequence_Fast@plt+0x38bc>
    7a6c:	mov	x1, x19
    7a70:	mov	x0, x21
    7a74:	bl	3f70 <PyDict_DelItem@plt>
    7a78:	tbnz	w0, #31, 7ad8 <PySequence_Fast@plt+0x3898>
    7a7c:	ldr	x0, [x19]
    7a80:	sub	x0, x0, #0x1
    7a84:	str	x0, [x19]
    7a88:	cbz	x0, 7b38 <PySequence_Fast@plt+0x38f8>
    7a8c:	mov	x19, x20
    7a90:	b	7b48 <PySequence_Fast@plt+0x3908>
    7a94:	ldr	x0, [x19]
    7a98:	sub	x0, x0, #0x1
    7a9c:	str	x0, [x19]
    7aa0:	cbz	x0, 7acc <PySequence_Fast@plt+0x388c>
    7aa4:	ldr	x0, [x20, #8]
    7aa8:	ldr	x2, [x0, #24]
    7aac:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    7ab0:	add	x1, x1, #0xf48
    7ab4:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    7ab8:	ldr	x0, [x0, #3944]
    7abc:	ldr	x0, [x0]
    7ac0:	bl	4180 <PyErr_Format@plt>
    7ac4:	mov	x19, #0x0                   	// #0
    7ac8:	b	7b58 <PySequence_Fast@plt+0x3918>
    7acc:	mov	x0, x19
    7ad0:	bl	3d70 <_Py_Dealloc@plt>
    7ad4:	b	7aa4 <PySequence_Fast@plt+0x3864>
    7ad8:	ldr	x0, [x20]
    7adc:	sub	x0, x0, #0x1
    7ae0:	str	x0, [x20]
    7ae4:	cbnz	x0, 7afc <PySequence_Fast@plt+0x38bc>
    7ae8:	mov	x0, x20
    7aec:	bl	3d70 <_Py_Dealloc@plt>
    7af0:	b	7afc <PySequence_Fast@plt+0x38bc>
    7af4:	bl	3f80 <PyErr_Occurred@plt>
    7af8:	cbz	x0, 7b18 <PySequence_Fast@plt+0x38d8>
    7afc:	ldr	x1, [x19]
    7b00:	sub	x1, x1, #0x1
    7b04:	str	x1, [x19]
    7b08:	mov	x20, #0x0                   	// #0
    7b0c:	cbz	x1, 7b38 <PySequence_Fast@plt+0x38f8>
    7b10:	mov	x19, #0x0                   	// #0
    7b14:	b	7b58 <PySequence_Fast@plt+0x3918>
    7b18:	bl	4080 <PyDict_New@plt>
    7b1c:	mov	x20, x0
    7b20:	ldr	x0, [x19]
    7b24:	sub	x0, x0, #0x1
    7b28:	str	x0, [x19]
    7b2c:	cbz	x0, 7b38 <PySequence_Fast@plt+0x38f8>
    7b30:	mov	x19, x20
    7b34:	b	7b44 <PySequence_Fast@plt+0x3904>
    7b38:	mov	x0, x19
    7b3c:	bl	3d70 <_Py_Dealloc@plt>
    7b40:	mov	x19, x20
    7b44:	cbz	x19, 7b58 <PySequence_Fast@plt+0x3918>
    7b48:	mov	x1, x21
    7b4c:	mov	x0, x19
    7b50:	bl	3f20 <PyDict_Update@plt>
    7b54:	tbnz	w0, #31, 7b6c <PySequence_Fast@plt+0x392c>
    7b58:	mov	x0, x19
    7b5c:	ldp	x19, x20, [sp, #16]
    7b60:	ldr	x21, [sp, #32]
    7b64:	ldp	x29, x30, [sp], #48
    7b68:	ret
    7b6c:	ldr	x0, [x19]
    7b70:	sub	x0, x0, #0x1
    7b74:	str	x0, [x19]
    7b78:	cbz	x0, 7b84 <PySequence_Fast@plt+0x3944>
    7b7c:	mov	x19, #0x0                   	// #0
    7b80:	b	7b58 <PySequence_Fast@plt+0x3918>
    7b84:	mov	x0, x19
    7b88:	bl	3d70 <_Py_Dealloc@plt>
    7b8c:	mov	x19, #0x0                   	// #0
    7b90:	b	7b58 <PySequence_Fast@plt+0x3918>
    7b94:	stp	x29, x30, [sp, #-64]!
    7b98:	mov	x29, sp
    7b9c:	stp	x19, x20, [sp, #16]
    7ba0:	mov	x0, x1
    7ba4:	mov	x20, x2
    7ba8:	str	xzr, [sp, #40]
    7bac:	add	x6, sp, #0x28
    7bb0:	adrp	x5, 1f000 <PyInit__elementtree@@Base+0x126c8>
    7bb4:	ldr	x5, [x5, #3992]
    7bb8:	add	x4, sp, #0x30
    7bbc:	add	x3, sp, #0x38
    7bc0:	adrp	x2, 20000 <PyInit__elementtree@@Base+0x136c8>
    7bc4:	add	x2, x2, #0x320
    7bc8:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    7bcc:	add	x1, x1, #0xf68
    7bd0:	bl	4010 <_PyArg_ParseTuple_SizeT@plt>
    7bd4:	cbz	w0, 7cd0 <PySequence_Fast@plt+0x3a90>
    7bd8:	ldr	x0, [sp, #40]
    7bdc:	cbz	x0, 7c68 <PySequence_Fast@plt+0x3a28>
    7be0:	bl	4150 <PyDict_Copy@plt>
    7be4:	mov	x19, x0
    7be8:	str	x0, [sp, #40]
    7bec:	cbz	x0, 7c38 <PySequence_Fast@plt+0x39f8>
    7bf0:	cbz	x20, 7c00 <PySequence_Fast@plt+0x39c0>
    7bf4:	mov	x1, x20
    7bf8:	bl	3f20 <PyDict_Update@plt>
    7bfc:	tbnz	w0, #31, 7c48 <PySequence_Fast@plt+0x3a08>
    7c00:	ldr	x1, [sp, #40]
    7c04:	ldr	x0, [sp, #48]
    7c08:	bl	58f4 <PySequence_Fast@plt+0x16b4>
    7c0c:	mov	x19, x0
    7c10:	ldr	x0, [sp, #40]
    7c14:	ldr	x1, [x0]
    7c18:	sub	x1, x1, #0x1
    7c1c:	str	x1, [x0]
    7c20:	cbz	x1, 7ca0 <PySequence_Fast@plt+0x3a60>
    7c24:	cbz	x19, 7c38 <PySequence_Fast@plt+0x39f8>
    7c28:	mov	x1, x19
    7c2c:	ldr	x0, [sp, #56]
    7c30:	bl	4fbc <PySequence_Fast@plt+0xd7c>
    7c34:	tbnz	w0, #31, 7ca8 <PySequence_Fast@plt+0x3a68>
    7c38:	mov	x0, x19
    7c3c:	ldp	x19, x20, [sp, #16]
    7c40:	ldp	x29, x30, [sp], #64
    7c44:	ret
    7c48:	ldr	x0, [sp, #40]
    7c4c:	ldr	x1, [x0]
    7c50:	sub	x1, x1, #0x1
    7c54:	str	x1, [x0]
    7c58:	mov	x19, #0x0                   	// #0
    7c5c:	cbnz	x1, 7c38 <PySequence_Fast@plt+0x39f8>
    7c60:	bl	3d70 <_Py_Dealloc@plt>
    7c64:	b	7c38 <PySequence_Fast@plt+0x39f8>
    7c68:	cbz	x20, 7c84 <PySequence_Fast@plt+0x3a44>
    7c6c:	mov	x0, x20
    7c70:	bl	7a14 <PySequence_Fast@plt+0x37d4>
    7c74:	mov	x19, x0
    7c78:	str	x0, [sp, #40]
    7c7c:	cbnz	x0, 7c00 <PySequence_Fast@plt+0x39c0>
    7c80:	b	7c38 <PySequence_Fast@plt+0x39f8>
    7c84:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    7c88:	ldr	x0, [x0, #3976]
    7c8c:	ldr	x1, [x0]
    7c90:	add	x1, x1, #0x1
    7c94:	str	x1, [x0]
    7c98:	str	x0, [sp, #40]
    7c9c:	b	7c00 <PySequence_Fast@plt+0x39c0>
    7ca0:	bl	3d70 <_Py_Dealloc@plt>
    7ca4:	b	7c24 <PySequence_Fast@plt+0x39e4>
    7ca8:	ldr	x0, [x19]
    7cac:	sub	x0, x0, #0x1
    7cb0:	str	x0, [x19]
    7cb4:	cbz	x0, 7cc0 <PySequence_Fast@plt+0x3a80>
    7cb8:	mov	x19, #0x0                   	// #0
    7cbc:	b	7c38 <PySequence_Fast@plt+0x39f8>
    7cc0:	mov	x0, x19
    7cc4:	bl	3d70 <_Py_Dealloc@plt>
    7cc8:	mov	x19, #0x0                   	// #0
    7ccc:	b	7c38 <PySequence_Fast@plt+0x39f8>
    7cd0:	mov	x19, #0x0                   	// #0
    7cd4:	b	7c38 <PySequence_Fast@plt+0x39f8>
    7cd8:	stp	x29, x30, [sp, #-32]!
    7cdc:	mov	x29, sp
    7ce0:	str	x19, [sp, #16]
    7ce4:	ldr	x1, [x0, #8]
    7ce8:	ldr	x19, [x1, #32]
    7cec:	ldr	x0, [x0, #40]
    7cf0:	cbz	x0, 7d10 <PySequence_Fast@plt+0x3ad0>
    7cf4:	add	x19, x19, #0x40
    7cf8:	add	x1, x0, #0x20
    7cfc:	ldr	x2, [x0, #24]
    7d00:	cmp	x2, x1
    7d04:	b.eq	7d10 <PySequence_Fast@plt+0x3ad0>  // b.none
    7d08:	ldr	x0, [x0, #16]
    7d0c:	add	x19, x19, x0, lsl #3
    7d10:	cmn	x19, #0x1
    7d14:	b.eq	7d2c <PySequence_Fast@plt+0x3aec>  // b.none
    7d18:	mov	x0, x19
    7d1c:	bl	3e70 <PyLong_FromSsize_t@plt>
    7d20:	ldr	x19, [sp, #16]
    7d24:	ldp	x29, x30, [sp], #32
    7d28:	ret
    7d2c:	bl	3f80 <PyErr_Occurred@plt>
    7d30:	mov	x1, x0
    7d34:	mov	x0, #0x0                   	// #0
    7d38:	cbz	x1, 7d18 <PySequence_Fast@plt+0x3ad8>
    7d3c:	b	7d20 <PySequence_Fast@plt+0x3ae0>
    7d40:	stp	x29, x30, [sp, #-16]!
    7d44:	mov	x29, sp
    7d48:	ldr	x0, [x0, #40]
    7d4c:	cbz	x0, 7d70 <PySequence_Fast@plt+0x3b30>
    7d50:	ldr	x0, [x0]
    7d54:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    7d58:	ldr	x1, [x1, #3976]
    7d5c:	cmp	x0, x1
    7d60:	b.eq	7d70 <PySequence_Fast@plt+0x3b30>  // b.none
    7d64:	bl	40e0 <PyDict_Keys@plt>
    7d68:	ldp	x29, x30, [sp], #16
    7d6c:	ret
    7d70:	mov	x0, #0x0                   	// #0
    7d74:	bl	3c50 <PyList_New@plt>
    7d78:	b	7d68 <PySequence_Fast@plt+0x3b28>
    7d7c:	stp	x29, x30, [sp, #-16]!
    7d80:	mov	x29, sp
    7d84:	ldr	x0, [x0, #40]
    7d88:	cbz	x0, 7dac <PySequence_Fast@plt+0x3b6c>
    7d8c:	ldr	x0, [x0]
    7d90:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    7d94:	ldr	x1, [x1, #3976]
    7d98:	cmp	x0, x1
    7d9c:	b.eq	7dac <PySequence_Fast@plt+0x3b6c>  // b.none
    7da0:	bl	3c80 <PyDict_Items@plt>
    7da4:	ldp	x29, x30, [sp], #16
    7da8:	ret
    7dac:	mov	x0, #0x0                   	// #0
    7db0:	bl	3c50 <PyList_New@plt>
    7db4:	b	7da4 <PySequence_Fast@plt+0x3b64>
    7db8:	stp	x29, x30, [sp, #-48]!
    7dbc:	mov	x29, sp
    7dc0:	stp	x19, x20, [sp, #16]
    7dc4:	stp	x21, x22, [sp, #32]
    7dc8:	mov	x20, x0
    7dcc:	mov	x21, x1
    7dd0:	mov	w22, w2
    7dd4:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x136c8>
    7dd8:	add	x0, x0, #0x320
    7ddc:	add	x0, x0, #0x358
    7de0:	bl	3df0 <_PyObject_GC_New@plt>
    7de4:	mov	x19, x0
    7de8:	cbz	x0, 7e38 <PySequence_Fast@plt+0x3bf8>
    7dec:	ldr	x0, [x21]
    7df0:	add	x0, x0, #0x1
    7df4:	str	x0, [x21]
    7df8:	str	x21, [x19, #48]
    7dfc:	str	w22, [x19, #56]
    7e00:	ldr	x0, [x20]
    7e04:	add	x0, x0, #0x1
    7e08:	str	x0, [x20]
    7e0c:	str	x20, [x19, #40]
    7e10:	mov	x0, x19
    7e14:	bl	3dc0 <PyObject_GC_Track@plt>
    7e18:	mov	x0, #0x80                  	// #128
    7e1c:	bl	41f0 <PyMem_Malloc@plt>
    7e20:	mov	x20, x0
    7e24:	str	x0, [x19, #16]
    7e28:	cbz	x0, 7e4c <PySequence_Fast@plt+0x3c0c>
    7e2c:	str	xzr, [x19, #24]
    7e30:	mov	x0, #0x8                   	// #8
    7e34:	str	x0, [x19, #32]
    7e38:	mov	x0, x19
    7e3c:	ldp	x19, x20, [sp, #16]
    7e40:	ldp	x21, x22, [sp, #32]
    7e44:	ldp	x29, x30, [sp], #48
    7e48:	ret
    7e4c:	ldr	x0, [x19]
    7e50:	sub	x0, x0, #0x1
    7e54:	str	x0, [x19]
    7e58:	cbz	x0, 7e68 <PySequence_Fast@plt+0x3c28>
    7e5c:	bl	3d80 <PyErr_NoMemory@plt>
    7e60:	mov	x19, x20
    7e64:	b	7e38 <PySequence_Fast@plt+0x3bf8>
    7e68:	mov	x0, x19
    7e6c:	bl	3d70 <_Py_Dealloc@plt>
    7e70:	b	7e5c <PySequence_Fast@plt+0x3c1c>
    7e74:	stp	x29, x30, [sp, #-32]!
    7e78:	mov	x29, sp
    7e7c:	stp	x19, x20, [sp, #16]
    7e80:	mov	x20, x0
    7e84:	mov	x19, x1
    7e88:	ldr	x1, [x1, #8]
    7e8c:	ldr	x1, [x1, #168]
    7e90:	tbz	w1, #28, 7f84 <PySequence_Fast@plt+0x3d44>
    7e94:	ldrsb	w0, [x19, #32]
    7e98:	tbz	w0, #31, 7ec4 <PySequence_Fast@plt+0x3c84>
    7e9c:	ldr	x0, [x19, #16]
    7ea0:	cmp	x0, #0x1
    7ea4:	b.eq	7ed8 <PySequence_Fast@plt+0x3c98>  // b.none
    7ea8:	mov	w2, #0x0                   	// #0
    7eac:	mov	x1, x19
    7eb0:	mov	x0, x20
    7eb4:	bl	7db8 <PySequence_Fast@plt+0x3b78>
    7eb8:	ldp	x19, x20, [sp, #16]
    7ebc:	ldp	x29, x30, [sp], #32
    7ec0:	ret
    7ec4:	mov	x0, x19
    7ec8:	bl	3c60 <_PyUnicode_Ready@plt>
    7ecc:	tbz	w0, #31, 7e9c <PySequence_Fast@plt+0x3c5c>
    7ed0:	mov	x0, #0x0                   	// #0
    7ed4:	b	7eb8 <PySequence_Fast@plt+0x3c78>
    7ed8:	ldrb	w0, [x19, #32]
    7edc:	and	w1, w0, #0x1c
    7ee0:	cmp	w1, #0x4
    7ee4:	b.eq	7f24 <PySequence_Fast@plt+0x3ce4>  // b.none
    7ee8:	cmp	w1, #0x8
    7eec:	b.eq	7f50 <PySequence_Fast@plt+0x3d10>  // b.none
    7ef0:	tbz	w0, #5, 7f7c <PySequence_Fast@plt+0x3d3c>
    7ef4:	add	x2, x19, #0x30
    7ef8:	add	x1, x19, #0x48
    7efc:	tst	x0, #0x40
    7f00:	csel	x0, x1, x2, eq  // eq = none
    7f04:	ldr	w0, [x0]
    7f08:	cmp	w0, #0x2a
    7f0c:	cset	w1, eq  // eq = none
    7f10:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    7f14:	ldr	x0, [x0, #3976]
    7f18:	cmp	w1, #0x0
    7f1c:	csel	x19, x0, x19, ne  // ne = any
    7f20:	b	7ea8 <PySequence_Fast@plt+0x3c68>
    7f24:	tbz	w0, #5, 7f48 <PySequence_Fast@plt+0x3d08>
    7f28:	add	x2, x19, #0x30
    7f2c:	add	x1, x19, #0x48
    7f30:	tst	x0, #0x40
    7f34:	csel	x0, x1, x2, eq  // eq = none
    7f38:	ldrb	w0, [x0]
    7f3c:	cmp	w0, #0x2a
    7f40:	cset	w1, eq  // eq = none
    7f44:	b	7f10 <PySequence_Fast@plt+0x3cd0>
    7f48:	ldr	x0, [x19, #72]
    7f4c:	b	7f38 <PySequence_Fast@plt+0x3cf8>
    7f50:	tbz	w0, #5, 7f74 <PySequence_Fast@plt+0x3d34>
    7f54:	add	x2, x19, #0x30
    7f58:	add	x1, x19, #0x48
    7f5c:	tst	x0, #0x40
    7f60:	csel	x0, x1, x2, eq  // eq = none
    7f64:	ldrh	w0, [x0]
    7f68:	cmp	w0, #0x2a
    7f6c:	cset	w1, eq  // eq = none
    7f70:	b	7f10 <PySequence_Fast@plt+0x3cd0>
    7f74:	ldr	x0, [x19, #72]
    7f78:	b	7f64 <PySequence_Fast@plt+0x3d24>
    7f7c:	ldr	x0, [x19, #72]
    7f80:	b	7f04 <PySequence_Fast@plt+0x3cc4>
    7f84:	tbz	w1, #27, 7ea8 <PySequence_Fast@plt+0x3c68>
    7f88:	ldr	x0, [x19, #16]
    7f8c:	cmp	x0, #0x1
    7f90:	b.ne	7ea8 <PySequence_Fast@plt+0x3c68>  // b.any
    7f94:	ldrb	w1, [x19, #32]
    7f98:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    7f9c:	ldr	x0, [x0, #3976]
    7fa0:	cmp	w1, #0x2a
    7fa4:	csel	x19, x0, x19, eq  // eq = none
    7fa8:	b	7ea8 <PySequence_Fast@plt+0x3c68>
    7fac:	sub	sp, sp, #0x40
    7fb0:	stp	x29, x30, [sp, #16]
    7fb4:	add	x29, sp, #0x10
    7fb8:	stp	x19, x20, [sp, #32]
    7fbc:	mov	x19, x0
    7fc0:	mov	x0, x1
    7fc4:	mov	x1, x2
    7fc8:	cbz	x3, 804c <PySequence_Fast@plt+0x3e0c>
    7fcc:	ldr	x20, [x3, #16]
    7fd0:	add	x20, x2, x20
    7fd4:	add	x2, sp, #0x38
    7fd8:	str	x2, [sp]
    7fdc:	mov	w7, #0x0                   	// #0
    7fe0:	mov	w6, #0x1                   	// #1
    7fe4:	mov	w5, #0x0                   	// #0
    7fe8:	adrp	x4, 20000 <PyInit__elementtree@@Base+0x136c8>
    7fec:	add	x4, x4, #0x9b8
    7ff0:	add	x4, x4, #0x1a0
    7ff4:	mov	x2, #0x0                   	// #0
    7ff8:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    7ffc:	cbz	x0, 803c <PySequence_Fast@plt+0x3dfc>
    8000:	cbz	x20, 8068 <PySequence_Fast@plt+0x3e28>
    8004:	ldr	x20, [x0]
    8008:	mov	x2, #0x1                   	// #1
    800c:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    8010:	add	x1, x1, #0xf80
    8014:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    8018:	ldr	x0, [x0, #3936]
    801c:	ldr	x0, [x0]
    8020:	bl	3d60 <PyErr_WarnEx@plt>
    8024:	mov	w1, w0
    8028:	mov	x0, #0x0                   	// #0
    802c:	tbnz	w1, #31, 803c <PySequence_Fast@plt+0x3dfc>
    8030:	mov	x1, x20
    8034:	mov	x0, x19
    8038:	bl	7e74 <PySequence_Fast@plt+0x3c34>
    803c:	ldp	x19, x20, [sp, #32]
    8040:	ldp	x29, x30, [sp, #16]
    8044:	add	sp, sp, #0x40
    8048:	ret
    804c:	cmp	x0, #0x0
    8050:	ccmp	x2, #0x1, #0x2, ne  // ne = any
    8054:	b.ls	8060 <PySequence_Fast@plt+0x3e20>  // b.plast
    8058:	mov	x20, x2
    805c:	b	7fd4 <PySequence_Fast@plt+0x3d94>
    8060:	mov	x20, x2
    8064:	b	8000 <PySequence_Fast@plt+0x3dc0>
    8068:	adrp	x20, 1f000 <PyInit__elementtree@@Base+0x126c8>
    806c:	ldr	x20, [x20, #3976]
    8070:	b	8008 <PySequence_Fast@plt+0x3dc8>
    8074:	sub	sp, sp, #0x40
    8078:	stp	x29, x30, [sp, #16]
    807c:	add	x29, sp, #0x10
    8080:	stp	x19, x20, [sp, #32]
    8084:	mov	x19, x0
    8088:	mov	x0, x1
    808c:	mov	x1, x2
    8090:	cbz	x3, 80e8 <PySequence_Fast@plt+0x3ea8>
    8094:	ldr	x20, [x3, #16]
    8098:	add	x20, x2, x20
    809c:	add	x2, sp, #0x38
    80a0:	str	x2, [sp]
    80a4:	mov	w7, #0x0                   	// #0
    80a8:	mov	w6, #0x1                   	// #1
    80ac:	mov	w5, #0x0                   	// #0
    80b0:	adrp	x4, 20000 <PyInit__elementtree@@Base+0x136c8>
    80b4:	add	x4, x4, #0x9b8
    80b8:	add	x4, x4, #0x1e0
    80bc:	mov	x2, #0x0                   	// #0
    80c0:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    80c4:	cbz	x0, 80d8 <PySequence_Fast@plt+0x3e98>
    80c8:	cbz	x20, 8104 <PySequence_Fast@plt+0x3ec4>
    80cc:	ldr	x1, [x0]
    80d0:	mov	x0, x19
    80d4:	bl	7e74 <PySequence_Fast@plt+0x3c34>
    80d8:	ldp	x19, x20, [sp, #32]
    80dc:	ldp	x29, x30, [sp, #16]
    80e0:	add	sp, sp, #0x40
    80e4:	ret
    80e8:	cmp	x0, #0x0
    80ec:	ccmp	x2, #0x1, #0x2, ne  // ne = any
    80f0:	b.ls	80fc <PySequence_Fast@plt+0x3ebc>  // b.plast
    80f4:	mov	x20, x2
    80f8:	b	809c <PySequence_Fast@plt+0x3e5c>
    80fc:	mov	x20, x2
    8100:	b	80c8 <PySequence_Fast@plt+0x3e88>
    8104:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    8108:	ldr	x1, [x1, #3976]
    810c:	b	80d0 <PySequence_Fast@plt+0x3e90>
    8110:	stp	x29, x30, [sp, #-16]!
    8114:	mov	x29, sp
    8118:	mov	w2, #0x1                   	// #1
    811c:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    8120:	ldr	x1, [x1, #3976]
    8124:	bl	7db8 <PySequence_Fast@plt+0x3b78>
    8128:	ldp	x29, x30, [sp], #16
    812c:	ret
    8130:	stp	x29, x30, [sp, #-64]!
    8134:	mov	x29, sp
    8138:	stp	x19, x20, [sp, #16]
    813c:	stp	x21, x22, [sp, #32]
    8140:	mov	x21, x0
    8144:	mov	x22, x1
    8148:	ldr	x0, [x1, #8]
    814c:	adrp	x2, 20000 <PyInit__elementtree@@Base+0x136c8>
    8150:	add	x2, x2, #0x320
    8154:	cmp	x0, x2
    8158:	b.eq	8168 <PySequence_Fast@plt+0x3f28>  // b.none
    815c:	mov	x1, x2
    8160:	bl	4160 <PyType_IsSubtype@plt>
    8164:	cbz	w0, 81ec <PySequence_Fast@plt+0x3fac>
    8168:	ldr	x19, [x21, #40]
    816c:	cbz	x19, 8214 <PySequence_Fast@plt+0x3fd4>
    8170:	stp	x23, x24, [sp, #48]
    8174:	ldr	x0, [x19, #8]
    8178:	mov	x20, #0x0                   	// #0
    817c:	mov	w24, #0x2                   	// #2
    8180:	cmp	x0, #0x0
    8184:	b.le	81c8 <PySequence_Fast@plt+0x3f88>
    8188:	lsl	x23, x20, #3
    818c:	ldr	x0, [x19, #24]
    8190:	ldr	x0, [x0, x20, lsl #3]
    8194:	cmp	x22, x0
    8198:	b.eq	8230 <PySequence_Fast@plt+0x3ff0>  // b.none
    819c:	mov	w2, w24
    81a0:	mov	x1, x22
    81a4:	bl	3ec0 <PyObject_RichCompareBool@plt>
    81a8:	cmp	w0, #0x0
    81ac:	b.gt	8230 <PySequence_Fast@plt+0x3ff0>
    81b0:	tbnz	w0, #31, 82cc <PySequence_Fast@plt+0x408c>
    81b4:	add	x20, x20, #0x1
    81b8:	ldr	x19, [x21, #40]
    81bc:	ldr	x0, [x19, #8]
    81c0:	cmp	x20, x0
    81c4:	b.lt	8188 <PySequence_Fast@plt+0x3f48>  // b.tstop
    81c8:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    81cc:	add	x1, x1, #0xff0
    81d0:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    81d4:	ldr	x0, [x0, #3928]
    81d8:	ldr	x0, [x0]
    81dc:	bl	3de0 <PyErr_SetString@plt>
    81e0:	mov	x19, #0x0                   	// #0
    81e4:	ldp	x23, x24, [sp, #48]
    81e8:	b	82b0 <PySequence_Fast@plt+0x4070>
    81ec:	mov	x3, x22
    81f0:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x136c8>
    81f4:	ldr	x2, [x0, #824]
    81f8:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    81fc:	add	x1, x1, #0xc10
    8200:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    8204:	add	x0, x0, #0xfe8
    8208:	bl	3ed0 <_PyArg_BadArgument@plt>
    820c:	mov	x19, #0x0                   	// #0
    8210:	b	82b0 <PySequence_Fast@plt+0x4070>
    8214:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    8218:	add	x1, x1, #0xff0
    821c:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    8220:	ldr	x0, [x0, #3928]
    8224:	ldr	x0, [x0]
    8228:	bl	3de0 <PyErr_SetString@plt>
    822c:	b	82b0 <PySequence_Fast@plt+0x4070>
    8230:	ldr	x2, [x21, #40]
    8234:	ldr	x1, [x2, #8]
    8238:	cmp	x1, x20
    823c:	b.le	81c8 <PySequence_Fast@plt+0x3f88>
    8240:	ldr	x0, [x2, #24]
    8244:	ldr	x0, [x0, x23]
    8248:	sub	x1, x1, #0x1
    824c:	str	x1, [x2, #8]
    8250:	ldr	x2, [x21, #40]
    8254:	ldr	x1, [x2, #8]
    8258:	cmp	x1, x20
    825c:	b.le	8288 <PySequence_Fast@plt+0x4048>
    8260:	add	x1, x23, #0x8
    8264:	ldr	x2, [x2, #24]
    8268:	ldr	x3, [x2, x1]
    826c:	str	x3, [x2, x20, lsl #3]
    8270:	add	x20, x20, #0x1
    8274:	ldr	x2, [x21, #40]
    8278:	add	x1, x1, #0x8
    827c:	ldr	x3, [x2, #8]
    8280:	cmp	x20, x3
    8284:	b.lt	8264 <PySequence_Fast@plt+0x4024>  // b.tstop
    8288:	ldr	x1, [x0]
    828c:	sub	x1, x1, #0x1
    8290:	str	x1, [x0]
    8294:	cbz	x1, 82c4 <PySequence_Fast@plt+0x4084>
    8298:	adrp	x19, 1f000 <PyInit__elementtree@@Base+0x126c8>
    829c:	ldr	x19, [x19, #3976]
    82a0:	ldr	x0, [x19]
    82a4:	add	x0, x0, #0x1
    82a8:	str	x0, [x19]
    82ac:	ldp	x23, x24, [sp, #48]
    82b0:	mov	x0, x19
    82b4:	ldp	x19, x20, [sp, #16]
    82b8:	ldp	x21, x22, [sp, #32]
    82bc:	ldp	x29, x30, [sp], #64
    82c0:	ret
    82c4:	bl	3d70 <_Py_Dealloc@plt>
    82c8:	b	8298 <PySequence_Fast@plt+0x4058>
    82cc:	mov	x19, #0x0                   	// #0
    82d0:	ldp	x23, x24, [sp, #48]
    82d4:	b	82b0 <PySequence_Fast@plt+0x4070>
    82d8:	sub	sp, sp, #0x60
    82dc:	stp	x29, x30, [sp, #16]
    82e0:	add	x29, sp, #0x10
    82e4:	stp	x19, x20, [sp, #32]
    82e8:	stp	x21, x22, [sp, #48]
    82ec:	mov	x21, x0
    82f0:	mov	x0, x1
    82f4:	mov	x1, x2
    82f8:	cbz	x3, 83bc <PySequence_Fast@plt+0x417c>
    82fc:	ldr	x19, [x3, #16]
    8300:	add	x19, x2, x19
    8304:	add	x2, sp, #0x50
    8308:	str	x2, [sp]
    830c:	mov	w7, #0x0                   	// #0
    8310:	mov	w6, #0x2                   	// #2
    8314:	mov	w5, #0x1                   	// #1
    8318:	adrp	x4, 20000 <PyInit__elementtree@@Base+0x136c8>
    831c:	add	x4, x4, #0x9b8
    8320:	add	x4, x4, #0x220
    8324:	mov	x2, #0x0                   	// #0
    8328:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    832c:	cbz	x0, 84dc <PySequence_Fast@plt+0x429c>
    8330:	stp	x23, x24, [sp, #64]
    8334:	ldr	x23, [x0]
    8338:	cmp	x19, #0x1
    833c:	b.eq	83e0 <PySequence_Fast@plt+0x41a0>  // b.none
    8340:	ldr	x20, [x0, #8]
    8344:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x136c8>
    8348:	add	x0, x0, #0x9b8
    834c:	add	x0, x0, #0x80
    8350:	bl	3fc0 <PyState_FindModule@plt>
    8354:	bl	3e10 <PyModule_GetState@plt>
    8358:	mov	x19, x0
    835c:	mov	x0, x23
    8360:	bl	4484 <PySequence_Fast@plt+0x244>
    8364:	cmp	w0, #0x0
    8368:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    836c:	ldr	x1, [x1, #3976]
    8370:	ccmp	x20, x1, #0x0, eq  // eq = none
    8374:	b.eq	83ec <PySequence_Fast@plt+0x41ac>  // b.none
    8378:	mov	x5, #0x0                   	// #0
    837c:	mov	x4, x20
    8380:	mov	x3, x23
    8384:	mov	x2, x21
    8388:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x136c8>
    838c:	add	x1, x1, #0x9b8
    8390:	add	x1, x1, #0x260
    8394:	ldr	x0, [x19, #16]
    8398:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    839c:	mov	x19, x0
    83a0:	ldp	x23, x24, [sp, #64]
    83a4:	mov	x0, x19
    83a8:	ldp	x19, x20, [sp, #32]
    83ac:	ldp	x21, x22, [sp, #48]
    83b0:	ldp	x29, x30, [sp, #16]
    83b4:	add	sp, sp, #0x60
    83b8:	ret
    83bc:	sub	x2, x2, #0x1
    83c0:	cmp	x2, #0x1
    83c4:	b.hi	83d8 <PySequence_Fast@plt+0x4198>  // b.pmore
    83c8:	mov	x19, x1
    83cc:	cbz	x0, 8304 <PySequence_Fast@plt+0x40c4>
    83d0:	stp	x23, x24, [sp, #64]
    83d4:	b	8334 <PySequence_Fast@plt+0x40f4>
    83d8:	mov	x19, x1
    83dc:	b	8304 <PySequence_Fast@plt+0x40c4>
    83e0:	adrp	x20, 1f000 <PyInit__elementtree@@Base+0x126c8>
    83e4:	ldr	x20, [x20, #3976]
    83e8:	b	8344 <PySequence_Fast@plt+0x4104>
    83ec:	mov	x0, #0x0                   	// #0
    83f0:	bl	3c50 <PyList_New@plt>
    83f4:	mov	x19, x0
    83f8:	cbz	x0, 84e4 <PySequence_Fast@plt+0x42a4>
    83fc:	ldr	x0, [x21, #40]
    8400:	cbz	x0, 84ec <PySequence_Fast@plt+0x42ac>
    8404:	ldr	x1, [x0, #8]
    8408:	cmp	x1, #0x0
    840c:	b.le	84f4 <PySequence_Fast@plt+0x42b4>
    8410:	mov	x22, #0x0                   	// #0
    8414:	mov	w24, #0x2                   	// #2
    8418:	b	8460 <PySequence_Fast@plt+0x4220>
    841c:	mov	x0, x20
    8420:	bl	3d70 <_Py_Dealloc@plt>
    8424:	b	84ac <PySequence_Fast@plt+0x426c>
    8428:	mov	x0, x19
    842c:	bl	3d70 <_Py_Dealloc@plt>
    8430:	mov	x19, #0x0                   	// #0
    8434:	ldp	x23, x24, [sp, #64]
    8438:	b	83a4 <PySequence_Fast@plt+0x4164>
    843c:	ldr	x0, [x20]
    8440:	sub	x0, x0, #0x1
    8444:	str	x0, [x20]
    8448:	cbz	x0, 84c8 <PySequence_Fast@plt+0x4288>
    844c:	add	x22, x22, #0x1
    8450:	ldr	x0, [x21, #40]
    8454:	ldr	x1, [x0, #8]
    8458:	cmp	x22, x1
    845c:	b.ge	84d4 <PySequence_Fast@plt+0x4294>  // b.tcont
    8460:	ldr	x0, [x0, #24]
    8464:	ldr	x20, [x0, x22, lsl #3]
    8468:	ldr	x0, [x20]
    846c:	add	x0, x0, #0x1
    8470:	str	x0, [x20]
    8474:	mov	w2, w24
    8478:	mov	x1, x23
    847c:	ldr	x0, [x20, #16]
    8480:	bl	3ec0 <PyObject_RichCompareBool@plt>
    8484:	cbz	w0, 843c <PySequence_Fast@plt+0x41fc>
    8488:	tbnz	w0, #31, 849c <PySequence_Fast@plt+0x425c>
    848c:	mov	x1, x20
    8490:	mov	x0, x19
    8494:	bl	3f00 <PyList_Append@plt>
    8498:	tbz	w0, #31, 843c <PySequence_Fast@plt+0x41fc>
    849c:	ldr	x0, [x20]
    84a0:	sub	x0, x0, #0x1
    84a4:	str	x0, [x20]
    84a8:	cbz	x0, 841c <PySequence_Fast@plt+0x41dc>
    84ac:	ldr	x0, [x19]
    84b0:	sub	x0, x0, #0x1
    84b4:	str	x0, [x19]
    84b8:	cbz	x0, 8428 <PySequence_Fast@plt+0x41e8>
    84bc:	mov	x19, #0x0                   	// #0
    84c0:	ldp	x23, x24, [sp, #64]
    84c4:	b	83a4 <PySequence_Fast@plt+0x4164>
    84c8:	mov	x0, x20
    84cc:	bl	3d70 <_Py_Dealloc@plt>
    84d0:	b	844c <PySequence_Fast@plt+0x420c>
    84d4:	ldp	x23, x24, [sp, #64]
    84d8:	b	83a4 <PySequence_Fast@plt+0x4164>
    84dc:	mov	x19, x0
    84e0:	b	83a4 <PySequence_Fast@plt+0x4164>
    84e4:	ldp	x23, x24, [sp, #64]
    84e8:	b	83a4 <PySequence_Fast@plt+0x4164>
    84ec:	ldp	x23, x24, [sp, #64]
    84f0:	b	83a4 <PySequence_Fast@plt+0x4164>
    84f4:	ldp	x23, x24, [sp, #64]
    84f8:	b	83a4 <PySequence_Fast@plt+0x4164>
    84fc:	sub	sp, sp, #0x60
    8500:	stp	x29, x30, [sp, #16]
    8504:	add	x29, sp, #0x10
    8508:	stp	x19, x20, [sp, #32]
    850c:	stp	x21, x22, [sp, #48]
    8510:	mov	x21, x0
    8514:	mov	x0, x1
    8518:	mov	x1, x2
    851c:	cbz	x3, 85e0 <PySequence_Fast@plt+0x43a0>
    8520:	ldr	x19, [x3, #16]
    8524:	add	x19, x2, x19
    8528:	add	x2, sp, #0x50
    852c:	str	x2, [sp]
    8530:	mov	w7, #0x0                   	// #0
    8534:	mov	w6, #0x2                   	// #2
    8538:	mov	w5, #0x1                   	// #1
    853c:	adrp	x4, 20000 <PyInit__elementtree@@Base+0x136c8>
    8540:	add	x4, x4, #0x9b8
    8544:	add	x4, x4, #0x278
    8548:	mov	x2, #0x0                   	// #0
    854c:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    8550:	cbz	x0, 86c8 <PySequence_Fast@plt+0x4488>
    8554:	stp	x23, x24, [sp, #64]
    8558:	ldr	x23, [x0]
    855c:	cmp	x19, #0x1
    8560:	b.eq	8604 <PySequence_Fast@plt+0x43c4>  // b.none
    8564:	ldr	x20, [x0, #8]
    8568:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x136c8>
    856c:	add	x0, x0, #0x9b8
    8570:	add	x0, x0, #0x80
    8574:	bl	3fc0 <PyState_FindModule@plt>
    8578:	bl	3e10 <PyModule_GetState@plt>
    857c:	mov	x19, x0
    8580:	mov	x0, x23
    8584:	bl	4484 <PySequence_Fast@plt+0x244>
    8588:	cmp	w0, #0x0
    858c:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    8590:	ldr	x1, [x1, #3976]
    8594:	ccmp	x20, x1, #0x0, eq  // eq = none
    8598:	b.eq	8610 <PySequence_Fast@plt+0x43d0>  // b.none
    859c:	mov	x5, #0x0                   	// #0
    85a0:	mov	x4, x20
    85a4:	mov	x3, x23
    85a8:	mov	x2, x21
    85ac:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x136c8>
    85b0:	add	x1, x1, #0x9b8
    85b4:	add	x1, x1, #0x2b8
    85b8:	ldr	x0, [x19, #16]
    85bc:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    85c0:	mov	x19, x0
    85c4:	ldp	x23, x24, [sp, #64]
    85c8:	mov	x0, x19
    85cc:	ldp	x19, x20, [sp, #32]
    85d0:	ldp	x21, x22, [sp, #48]
    85d4:	ldp	x29, x30, [sp, #16]
    85d8:	add	sp, sp, #0x60
    85dc:	ret
    85e0:	sub	x2, x2, #0x1
    85e4:	cmp	x2, #0x1
    85e8:	b.hi	85fc <PySequence_Fast@plt+0x43bc>  // b.pmore
    85ec:	mov	x19, x1
    85f0:	cbz	x0, 8528 <PySequence_Fast@plt+0x42e8>
    85f4:	stp	x23, x24, [sp, #64]
    85f8:	b	8558 <PySequence_Fast@plt+0x4318>
    85fc:	mov	x19, x1
    8600:	b	8528 <PySequence_Fast@plt+0x42e8>
    8604:	adrp	x20, 1f000 <PyInit__elementtree@@Base+0x126c8>
    8608:	ldr	x20, [x20, #3976]
    860c:	b	8568 <PySequence_Fast@plt+0x4328>
    8610:	ldr	x0, [x21, #40]
    8614:	cbz	x0, 8648 <PySequence_Fast@plt+0x4408>
    8618:	ldr	x1, [x0, #8]
    861c:	mov	x22, #0x0                   	// #0
    8620:	mov	w24, #0x2                   	// #2
    8624:	cmp	x1, #0x0
    8628:	b.gt	8684 <PySequence_Fast@plt+0x4444>
    862c:	adrp	x19, 1f000 <PyInit__elementtree@@Base+0x126c8>
    8630:	ldr	x19, [x19, #3976]
    8634:	ldr	x0, [x19]
    8638:	add	x0, x0, #0x1
    863c:	str	x0, [x19]
    8640:	ldp	x23, x24, [sp, #64]
    8644:	b	85c8 <PySequence_Fast@plt+0x4388>
    8648:	adrp	x19, 1f000 <PyInit__elementtree@@Base+0x126c8>
    864c:	ldr	x19, [x19, #3976]
    8650:	ldr	x0, [x19]
    8654:	add	x0, x0, #0x1
    8658:	str	x0, [x19]
    865c:	ldp	x23, x24, [sp, #64]
    8660:	b	85c8 <PySequence_Fast@plt+0x4388>
    8664:	mov	x0, x19
    8668:	bl	3d70 <_Py_Dealloc@plt>
    866c:	tbnz	w20, #31, 86d0 <PySequence_Fast@plt+0x4490>
    8670:	add	x22, x22, #0x1
    8674:	ldr	x0, [x21, #40]
    8678:	ldr	x1, [x0, #8]
    867c:	cmp	x22, x1
    8680:	b.ge	862c <PySequence_Fast@plt+0x43ec>  // b.tcont
    8684:	ldr	x0, [x0, #24]
    8688:	ldr	x19, [x0, x22, lsl #3]
    868c:	ldr	x0, [x19]
    8690:	add	x0, x0, #0x1
    8694:	str	x0, [x19]
    8698:	mov	w2, w24
    869c:	mov	x1, x23
    86a0:	ldr	x0, [x19, #16]
    86a4:	bl	3ec0 <PyObject_RichCompareBool@plt>
    86a8:	mov	w20, w0
    86ac:	cmp	w0, #0x0
    86b0:	b.gt	86dc <PySequence_Fast@plt+0x449c>
    86b4:	ldr	x0, [x19]
    86b8:	sub	x0, x0, #0x1
    86bc:	str	x0, [x19]
    86c0:	cbnz	x0, 866c <PySequence_Fast@plt+0x442c>
    86c4:	b	8664 <PySequence_Fast@plt+0x4424>
    86c8:	mov	x19, x0
    86cc:	b	85c8 <PySequence_Fast@plt+0x4388>
    86d0:	mov	x19, #0x0                   	// #0
    86d4:	ldp	x23, x24, [sp, #64]
    86d8:	b	85c8 <PySequence_Fast@plt+0x4388>
    86dc:	ldp	x23, x24, [sp, #64]
    86e0:	b	85c8 <PySequence_Fast@plt+0x4388>
    86e4:	stp	x29, x30, [sp, #-48]!
    86e8:	mov	x29, sp
    86ec:	stp	x19, x20, [sp, #16]
    86f0:	stp	x21, x22, [sp, #32]
    86f4:	mov	x19, x0
    86f8:	mov	x20, x1
    86fc:	cmp	x2, #0x2
    8700:	b.ne	883c <PySequence_Fast@plt+0x45fc>  // b.any
    8704:	ldr	x0, [x20]
    8708:	ldr	x0, [x0, #8]
    870c:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    8710:	ldr	x1, [x1, #3896]
    8714:	cmp	x0, x1
    8718:	b.eq	8860 <PySequence_Fast@plt+0x4620>  // b.none
    871c:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    8720:	ldr	x1, [x1, #3896]
    8724:	bl	4160 <PyType_IsSubtype@plt>
    8728:	cbnz	w0, 8860 <PySequence_Fast@plt+0x4620>
    872c:	ldr	x0, [x20]
    8730:	bl	41e0 <PyNumber_Index@plt>
    8734:	mov	x21, x0
    8738:	cbz	x0, 888c <PySequence_Fast@plt+0x464c>
    873c:	bl	3eb0 <PyLong_AsSsize_t@plt>
    8740:	mov	x22, x0
    8744:	ldr	x0, [x21]
    8748:	sub	x0, x0, #0x1
    874c:	str	x0, [x21]
    8750:	cbz	x0, 8880 <PySequence_Fast@plt+0x4640>
    8754:	cmn	x22, #0x1
    8758:	b.eq	888c <PySequence_Fast@plt+0x464c>  // b.none
    875c:	ldr	x0, [x20, #8]
    8760:	ldr	x0, [x0, #8]
    8764:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x136c8>
    8768:	add	x1, x1, #0x320
    876c:	cmp	x0, x1
    8770:	b.eq	8784 <PySequence_Fast@plt+0x4544>  // b.none
    8774:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x136c8>
    8778:	add	x1, x1, #0x320
    877c:	bl	4160 <PyType_IsSubtype@plt>
    8780:	cbz	w0, 88a0 <PySequence_Fast@plt+0x4660>
    8784:	ldr	x20, [x20, #8]
    8788:	ldr	x21, [x19, #40]
    878c:	cbz	x21, 88c8 <PySequence_Fast@plt+0x4688>
    8790:	tbnz	x22, #63, 88dc <PySequence_Fast@plt+0x469c>
    8794:	ldr	x0, [x19, #40]
    8798:	ldr	x0, [x0, #8]
    879c:	cmp	x0, x22
    87a0:	csel	x22, x0, x22, le
    87a4:	mov	x1, #0x1                   	// #1
    87a8:	mov	x0, x19
    87ac:	bl	4ea4 <PySequence_Fast@plt+0xc64>
    87b0:	tbnz	w0, #31, 88f0 <PySequence_Fast@plt+0x46b0>
    87b4:	ldr	x0, [x19, #40]
    87b8:	ldr	x0, [x0, #8]
    87bc:	cmp	x22, x0
    87c0:	b.ge	87ec <PySequence_Fast@plt+0x45ac>  // b.tcont
    87c4:	lsl	x1, x0, #3
    87c8:	sub	x1, x1, #0x8
    87cc:	ldr	x2, [x19, #40]
    87d0:	ldr	x2, [x2, #24]
    87d4:	ldr	x3, [x2, x1]
    87d8:	str	x3, [x2, x0, lsl #3]
    87dc:	sub	x0, x0, #0x1
    87e0:	sub	x1, x1, #0x8
    87e4:	cmp	x22, x0
    87e8:	b.ne	87cc <PySequence_Fast@plt+0x458c>  // b.any
    87ec:	ldr	x0, [x20]
    87f0:	add	x0, x0, #0x1
    87f4:	str	x0, [x20]
    87f8:	ldr	x0, [x19, #40]
    87fc:	ldr	x0, [x0, #24]
    8800:	str	x20, [x0, x22, lsl #3]
    8804:	ldr	x1, [x19, #40]
    8808:	ldr	x0, [x1, #8]
    880c:	add	x0, x0, #0x1
    8810:	str	x0, [x1, #8]
    8814:	adrp	x21, 1f000 <PyInit__elementtree@@Base+0x126c8>
    8818:	ldr	x21, [x21, #3976]
    881c:	ldr	x0, [x21]
    8820:	add	x0, x0, #0x1
    8824:	str	x0, [x21]
    8828:	mov	x0, x21
    882c:	ldp	x19, x20, [sp, #16]
    8830:	ldp	x21, x22, [sp, #32]
    8834:	ldp	x29, x30, [sp], #48
    8838:	ret
    883c:	mov	x1, x2
    8840:	mov	x3, #0x2                   	// #2
    8844:	mov	x2, x3
    8848:	adrp	x0, d000 <PyInit__elementtree@@Base+0x6c8>
    884c:	add	x0, x0, #0x10
    8850:	bl	3f60 <_PyArg_CheckPositional@plt>
    8854:	cbnz	w0, 8704 <PySequence_Fast@plt+0x44c4>
    8858:	mov	x21, #0x0                   	// #0
    885c:	b	8828 <PySequence_Fast@plt+0x45e8>
    8860:	adrp	x1, d000 <PyInit__elementtree@@Base+0x6c8>
    8864:	add	x1, x1, #0x18
    8868:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    886c:	ldr	x0, [x0, #3944]
    8870:	ldr	x0, [x0]
    8874:	bl	3de0 <PyErr_SetString@plt>
    8878:	mov	x21, #0x0                   	// #0
    887c:	b	8828 <PySequence_Fast@plt+0x45e8>
    8880:	mov	x0, x21
    8884:	bl	3d70 <_Py_Dealloc@plt>
    8888:	b	8754 <PySequence_Fast@plt+0x4514>
    888c:	bl	3f80 <PyErr_Occurred@plt>
    8890:	mov	x21, #0x0                   	// #0
    8894:	cbnz	x0, 8828 <PySequence_Fast@plt+0x45e8>
    8898:	mov	x22, #0xffffffffffffffff    	// #-1
    889c:	b	875c <PySequence_Fast@plt+0x451c>
    88a0:	ldr	x3, [x20, #8]
    88a4:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x136c8>
    88a8:	ldr	x2, [x0, #824]
    88ac:	adrp	x1, d000 <PyInit__elementtree@@Base+0x6c8>
    88b0:	add	x1, x1, #0x40
    88b4:	adrp	x0, d000 <PyInit__elementtree@@Base+0x6c8>
    88b8:	add	x0, x0, #0x10
    88bc:	bl	3ed0 <_PyArg_BadArgument@plt>
    88c0:	mov	x21, #0x0                   	// #0
    88c4:	b	8828 <PySequence_Fast@plt+0x45e8>
    88c8:	mov	x1, #0x0                   	// #0
    88cc:	mov	x0, x19
    88d0:	bl	4e20 <PySequence_Fast@plt+0xbe0>
    88d4:	tbz	w0, #31, 8790 <PySequence_Fast@plt+0x4550>
    88d8:	b	8828 <PySequence_Fast@plt+0x45e8>
    88dc:	ldr	x0, [x19, #40]
    88e0:	ldr	x0, [x0, #8]
    88e4:	adds	x22, x22, x0
    88e8:	csel	x22, x22, xzr, pl  // pl = nfrst
    88ec:	b	8794 <PySequence_Fast@plt+0x4554>
    88f0:	mov	x21, #0x0                   	// #0
    88f4:	b	8828 <PySequence_Fast@plt+0x45e8>
    88f8:	sub	sp, sp, #0x80
    88fc:	stp	x29, x30, [sp, #16]
    8900:	add	x29, sp, #0x10
    8904:	stp	x19, x20, [sp, #32]
    8908:	stp	x21, x22, [sp, #48]
    890c:	mov	x21, x0
    8910:	mov	x0, x1
    8914:	mov	x1, x2
    8918:	cbz	x3, 89f0 <PySequence_Fast@plt+0x47b0>
    891c:	ldr	x19, [x3, #16]
    8920:	add	x19, x2, x19
    8924:	add	x2, sp, #0x68
    8928:	str	x2, [sp]
    892c:	mov	w7, #0x0                   	// #0
    8930:	mov	w6, #0x3                   	// #3
    8934:	mov	w5, #0x1                   	// #1
    8938:	adrp	x4, 20000 <PyInit__elementtree@@Base+0x136c8>
    893c:	add	x4, x4, #0x9b8
    8940:	add	x4, x4, #0x2d0
    8944:	mov	x2, #0x0                   	// #0
    8948:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    894c:	cbz	x0, 8b80 <PySequence_Fast@plt+0x4940>
    8950:	stp	x23, x24, [sp, #64]
    8954:	ldr	x24, [x0]
    8958:	cmp	x19, #0x1
    895c:	b.eq	8a20 <PySequence_Fast@plt+0x47e0>  // b.none
    8960:	ldr	x20, [x0, #8]
    8964:	cbz	x20, 8a14 <PySequence_Fast@plt+0x47d4>
    8968:	cmp	x19, #0x2
    896c:	b.eq	8a30 <PySequence_Fast@plt+0x47f0>  // b.none
    8970:	ldr	x19, [x0, #16]
    8974:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x136c8>
    8978:	add	x0, x0, #0x9b8
    897c:	add	x0, x0, #0x80
    8980:	bl	3fc0 <PyState_FindModule@plt>
    8984:	bl	3e10 <PyModule_GetState@plt>
    8988:	mov	x22, x0
    898c:	mov	x0, x24
    8990:	bl	4484 <PySequence_Fast@plt+0x244>
    8994:	cmp	w0, #0x0
    8998:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    899c:	ldr	x1, [x1, #3976]
    89a0:	ccmp	x19, x1, #0x0, eq  // eq = none
    89a4:	b.eq	8a3c <PySequence_Fast@plt+0x47fc>  // b.none
    89a8:	mov	x6, #0x0                   	// #0
    89ac:	mov	x5, x19
    89b0:	mov	x4, x20
    89b4:	mov	x3, x24
    89b8:	mov	x2, x21
    89bc:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x136c8>
    89c0:	add	x1, x1, #0x9b8
    89c4:	add	x1, x1, #0x310
    89c8:	ldr	x0, [x22, #16]
    89cc:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    89d0:	mov	x20, x0
    89d4:	ldp	x23, x24, [sp, #64]
    89d8:	mov	x0, x20
    89dc:	ldp	x19, x20, [sp, #32]
    89e0:	ldp	x21, x22, [sp, #48]
    89e4:	ldp	x29, x30, [sp, #16]
    89e8:	add	sp, sp, #0x80
    89ec:	ret
    89f0:	sub	x2, x2, #0x1
    89f4:	cmp	x2, #0x2
    89f8:	b.hi	8a0c <PySequence_Fast@plt+0x47cc>  // b.pmore
    89fc:	mov	x19, x1
    8a00:	cbz	x0, 8924 <PySequence_Fast@plt+0x46e4>
    8a04:	stp	x23, x24, [sp, #64]
    8a08:	b	8954 <PySequence_Fast@plt+0x4714>
    8a0c:	mov	x19, x1
    8a10:	b	8924 <PySequence_Fast@plt+0x46e4>
    8a14:	adrp	x20, 1f000 <PyInit__elementtree@@Base+0x126c8>
    8a18:	ldr	x20, [x20, #3976]
    8a1c:	b	8970 <PySequence_Fast@plt+0x4730>
    8a20:	adrp	x19, 1f000 <PyInit__elementtree@@Base+0x126c8>
    8a24:	ldr	x19, [x19, #3976]
    8a28:	mov	x20, x19
    8a2c:	b	8974 <PySequence_Fast@plt+0x4734>
    8a30:	adrp	x19, 1f000 <PyInit__elementtree@@Base+0x126c8>
    8a34:	ldr	x19, [x19, #3976]
    8a38:	b	8974 <PySequence_Fast@plt+0x4734>
    8a3c:	ldr	x0, [x21, #40]
    8a40:	cbz	x0, 8a74 <PySequence_Fast@plt+0x4834>
    8a44:	str	x25, [sp, #80]
    8a48:	ldr	x1, [x0, #8]
    8a4c:	mov	x23, #0x0                   	// #0
    8a50:	mov	w25, #0x2                   	// #2
    8a54:	cmp	x1, #0x0
    8a58:	b.gt	8b3c <PySequence_Fast@plt+0x48fc>
    8a5c:	ldr	x0, [x20]
    8a60:	add	x0, x0, #0x1
    8a64:	str	x0, [x20]
    8a68:	ldp	x23, x24, [sp, #64]
    8a6c:	ldr	x25, [sp, #80]
    8a70:	b	89d8 <PySequence_Fast@plt+0x4798>
    8a74:	ldr	x0, [x20]
    8a78:	add	x0, x0, #0x1
    8a7c:	str	x0, [x20]
    8a80:	ldp	x23, x24, [sp, #64]
    8a84:	b	89d8 <PySequence_Fast@plt+0x4798>
    8a88:	mov	x0, x19
    8a8c:	bl	5ffc <PySequence_Fast@plt+0x1dbc>
    8a90:	mov	x20, x0
    8a94:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    8a98:	ldr	x0, [x0, #3976]
    8a9c:	cmp	x20, x0
    8aa0:	b.eq	8ad0 <PySequence_Fast@plt+0x4890>  // b.none
    8aa4:	cbz	x20, 8ab4 <PySequence_Fast@plt+0x4874>
    8aa8:	ldr	x0, [x20]
    8aac:	add	x0, x0, #0x1
    8ab0:	str	x0, [x20]
    8ab4:	ldr	x0, [x19]
    8ab8:	sub	x0, x0, #0x1
    8abc:	str	x0, [x19]
    8ac0:	cbz	x0, 8b08 <PySequence_Fast@plt+0x48c8>
    8ac4:	ldp	x23, x24, [sp, #64]
    8ac8:	ldr	x25, [sp, #80]
    8acc:	b	89d8 <PySequence_Fast@plt+0x4798>
    8ad0:	ldr	x0, [x19]
    8ad4:	sub	x0, x0, #0x1
    8ad8:	str	x0, [x19]
    8adc:	cbz	x0, 8afc <PySequence_Fast@plt+0x48bc>
    8ae0:	mov	w1, #0x0                   	// #0
    8ae4:	mov	x0, #0x0                   	// #0
    8ae8:	bl	4200 <PyUnicode_New@plt>
    8aec:	mov	x20, x0
    8af0:	ldp	x23, x24, [sp, #64]
    8af4:	ldr	x25, [sp, #80]
    8af8:	b	89d8 <PySequence_Fast@plt+0x4798>
    8afc:	mov	x0, x19
    8b00:	bl	3d70 <_Py_Dealloc@plt>
    8b04:	b	8ae0 <PySequence_Fast@plt+0x48a0>
    8b08:	mov	x0, x19
    8b0c:	bl	3d70 <_Py_Dealloc@plt>
    8b10:	ldp	x23, x24, [sp, #64]
    8b14:	ldr	x25, [sp, #80]
    8b18:	b	89d8 <PySequence_Fast@plt+0x4798>
    8b1c:	mov	x0, x19
    8b20:	bl	3d70 <_Py_Dealloc@plt>
    8b24:	tbnz	w22, #31, 8b88 <PySequence_Fast@plt+0x4948>
    8b28:	add	x23, x23, #0x1
    8b2c:	ldr	x0, [x21, #40]
    8b30:	ldr	x1, [x0, #8]
    8b34:	cmp	x23, x1
    8b38:	b.ge	8a5c <PySequence_Fast@plt+0x481c>  // b.tcont
    8b3c:	ldr	x0, [x0, #24]
    8b40:	ldr	x19, [x0, x23, lsl #3]
    8b44:	ldr	x0, [x19]
    8b48:	add	x0, x0, #0x1
    8b4c:	str	x0, [x19]
    8b50:	mov	w2, w25
    8b54:	mov	x1, x24
    8b58:	ldr	x0, [x19, #16]
    8b5c:	bl	3ec0 <PyObject_RichCompareBool@plt>
    8b60:	mov	w22, w0
    8b64:	cmp	w0, #0x0
    8b68:	b.gt	8a88 <PySequence_Fast@plt+0x4848>
    8b6c:	ldr	x0, [x19]
    8b70:	sub	x0, x0, #0x1
    8b74:	str	x0, [x19]
    8b78:	cbnz	x0, 8b24 <PySequence_Fast@plt+0x48e4>
    8b7c:	b	8b1c <PySequence_Fast@plt+0x48dc>
    8b80:	mov	x20, x0
    8b84:	b	89d8 <PySequence_Fast@plt+0x4798>
    8b88:	mov	x20, #0x0                   	// #0
    8b8c:	ldp	x23, x24, [sp, #64]
    8b90:	ldr	x25, [sp, #80]
    8b94:	b	89d8 <PySequence_Fast@plt+0x4798>
    8b98:	stp	x29, x30, [sp, #-64]!
    8b9c:	mov	x29, sp
    8ba0:	stp	x19, x20, [sp, #16]
    8ba4:	mov	x19, x0
    8ba8:	mov	x0, x1
    8bac:	ldr	x2, [x1, #8]
    8bb0:	ldr	x1, [x2, #96]
    8bb4:	cbz	x1, 8c1c <PySequence_Fast@plt+0x49dc>
    8bb8:	ldr	x1, [x1, #264]
    8bbc:	cbz	x1, 8c1c <PySequence_Fast@plt+0x49dc>
    8bc0:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    8bc4:	ldr	x1, [x1, #3984]
    8bc8:	ldr	x1, [x1]
    8bcc:	bl	3cc0 <PyNumber_AsSsize_t@plt>
    8bd0:	mov	x20, x0
    8bd4:	cmn	x0, #0x1
    8bd8:	b.eq	8bf8 <PySequence_Fast@plt+0x49b8>  // b.none
    8bdc:	tbnz	x0, #63, 8c08 <PySequence_Fast@plt+0x49c8>
    8be0:	mov	x1, x20
    8be4:	mov	x0, x19
    8be8:	bl	4bb4 <PySequence_Fast@plt+0x974>
    8bec:	ldp	x19, x20, [sp, #16]
    8bf0:	ldp	x29, x30, [sp], #64
    8bf4:	ret
    8bf8:	bl	3f80 <PyErr_Occurred@plt>
    8bfc:	mov	x1, x0
    8c00:	mov	x0, #0x0                   	// #0
    8c04:	cbnz	x1, 8bec <PySequence_Fast@plt+0x49ac>
    8c08:	ldr	x0, [x19, #40]
    8c0c:	cbz	x0, 8be0 <PySequence_Fast@plt+0x49a0>
    8c10:	ldr	x0, [x0, #8]
    8c14:	add	x20, x20, x0
    8c18:	b	8be0 <PySequence_Fast@plt+0x49a0>
    8c1c:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    8c20:	ldr	x1, [x1, #3952]
    8c24:	cmp	x2, x1
    8c28:	b.ne	8cd4 <PySequence_Fast@plt+0x4a94>  // b.any
    8c2c:	ldr	x1, [x19, #40]
    8c30:	cbz	x1, 8cbc <PySequence_Fast@plt+0x4a7c>
    8c34:	add	x3, sp, #0x38
    8c38:	add	x2, sp, #0x30
    8c3c:	add	x1, sp, #0x28
    8c40:	bl	4130 <PySlice_Unpack@plt>
    8c44:	mov	w1, w0
    8c48:	mov	x0, #0x0                   	// #0
    8c4c:	tbnz	w1, #31, 8bec <PySequence_Fast@plt+0x49ac>
    8c50:	ldr	x0, [x19, #40]
    8c54:	ldr	x3, [sp, #56]
    8c58:	add	x2, sp, #0x30
    8c5c:	add	x1, sp, #0x28
    8c60:	ldr	x0, [x0, #8]
    8c64:	bl	3f10 <PySlice_AdjustIndices@plt>
    8c68:	mov	x20, x0
    8c6c:	cmp	x0, #0x0
    8c70:	b.le	8cc8 <PySequence_Fast@plt+0x4a88>
    8c74:	bl	3c50 <PyList_New@plt>
    8c78:	cbz	x0, 8bec <PySequence_Fast@plt+0x49ac>
    8c7c:	ldr	x4, [sp, #40]
    8c80:	mov	x1, #0x0                   	// #0
    8c84:	ldr	x2, [x19, #40]
    8c88:	ldr	x2, [x2, #24]
    8c8c:	ldr	x2, [x2, x4, lsl #3]
    8c90:	ldr	x3, [x2]
    8c94:	add	x3, x3, #0x1
    8c98:	str	x3, [x2]
    8c9c:	ldr	x3, [x0, #24]
    8ca0:	str	x2, [x3, x1, lsl #3]
    8ca4:	ldr	x2, [sp, #56]
    8ca8:	add	x4, x4, x2
    8cac:	add	x1, x1, #0x1
    8cb0:	cmp	x20, x1
    8cb4:	b.ne	8c84 <PySequence_Fast@plt+0x4a44>  // b.any
    8cb8:	b	8bec <PySequence_Fast@plt+0x49ac>
    8cbc:	mov	x0, #0x0                   	// #0
    8cc0:	bl	3c50 <PyList_New@plt>
    8cc4:	b	8bec <PySequence_Fast@plt+0x49ac>
    8cc8:	mov	x0, #0x0                   	// #0
    8ccc:	bl	3c50 <PyList_New@plt>
    8cd0:	b	8bec <PySequence_Fast@plt+0x49ac>
    8cd4:	adrp	x1, d000 <PyInit__elementtree@@Base+0x6c8>
    8cd8:	add	x1, x1, #0x50
    8cdc:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    8ce0:	ldr	x0, [x0, #3944]
    8ce4:	ldr	x0, [x0]
    8ce8:	bl	3de0 <PyErr_SetString@plt>
    8cec:	mov	x0, #0x0                   	// #0
    8cf0:	b	8bec <PySequence_Fast@plt+0x49ac>
    8cf4:	stp	x29, x30, [sp, #-112]!
    8cf8:	mov	x29, sp
    8cfc:	stp	x19, x20, [sp, #16]
    8d00:	stp	x21, x22, [sp, #32]
    8d04:	mov	x19, x0
    8d08:	mov	x20, x1
    8d0c:	mov	x21, x2
    8d10:	ldr	x1, [x1, #8]
    8d14:	ldr	x0, [x1, #96]
    8d18:	cbz	x0, 8d84 <PySequence_Fast@plt+0x4b44>
    8d1c:	ldr	x0, [x0, #264]
    8d20:	cbz	x0, 8d84 <PySequence_Fast@plt+0x4b44>
    8d24:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    8d28:	ldr	x0, [x0, #3984]
    8d2c:	ldr	x1, [x0]
    8d30:	mov	x0, x20
    8d34:	bl	3cc0 <PyNumber_AsSsize_t@plt>
    8d38:	mov	x20, x0
    8d3c:	cmn	x0, #0x1
    8d40:	b.eq	8d68 <PySequence_Fast@plt+0x4b28>  // b.none
    8d44:	tbnz	x0, #63, 8d70 <PySequence_Fast@plt+0x4b30>
    8d48:	mov	x2, x21
    8d4c:	mov	x1, x20
    8d50:	mov	x0, x19
    8d54:	bl	65bc <PySequence_Fast@plt+0x237c>
    8d58:	ldp	x19, x20, [sp, #16]
    8d5c:	ldp	x21, x22, [sp, #32]
    8d60:	ldp	x29, x30, [sp], #112
    8d64:	ret
    8d68:	bl	3f80 <PyErr_Occurred@plt>
    8d6c:	cbnz	x0, 92e0 <PySequence_Fast@plt+0x50a0>
    8d70:	ldr	x0, [x19, #40]
    8d74:	cbz	x0, 8d48 <PySequence_Fast@plt+0x4b08>
    8d78:	ldr	x0, [x0, #8]
    8d7c:	add	x20, x20, x0
    8d80:	b	8d48 <PySequence_Fast@plt+0x4b08>
    8d84:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    8d88:	ldr	x0, [x0, #3952]
    8d8c:	cmp	x1, x0
    8d90:	b.ne	92c0 <PySequence_Fast@plt+0x5080>  // b.any
    8d94:	ldr	x0, [x19, #40]
    8d98:	cbz	x0, 8e7c <PySequence_Fast@plt+0x4c3c>
    8d9c:	add	x3, sp, #0x68
    8da0:	add	x2, sp, #0x60
    8da4:	add	x1, sp, #0x58
    8da8:	mov	x0, x20
    8dac:	bl	4130 <PySlice_Unpack@plt>
    8db0:	mov	w1, w0
    8db4:	mov	w0, #0xffffffff            	// #-1
    8db8:	tbnz	w1, #31, 8d58 <PySequence_Fast@plt+0x4b18>
    8dbc:	stp	x23, x24, [sp, #48]
    8dc0:	ldr	x0, [x19, #40]
    8dc4:	ldr	x3, [sp, #104]
    8dc8:	add	x2, sp, #0x60
    8dcc:	add	x1, sp, #0x58
    8dd0:	ldr	x0, [x0, #8]
    8dd4:	bl	3f10 <PySlice_AdjustIndices@plt>
    8dd8:	mov	x23, x0
    8ddc:	cbz	x21, 8e98 <PySequence_Fast@plt+0x4c58>
    8de0:	adrp	x1, d000 <PyInit__elementtree@@Base+0x6c8>
    8de4:	add	x1, x1, #0x600
    8de8:	mov	x0, x21
    8dec:	bl	4240 <PySequence_Fast@plt>
    8df0:	mov	x22, x0
    8df4:	cbz	x0, 8fe0 <PySequence_Fast@plt+0x4da0>
    8df8:	ldr	x21, [x0, #16]
    8dfc:	ldr	x0, [sp, #104]
    8e00:	cmp	x0, #0x1
    8e04:	ccmp	x23, x21, #0x4, ne  // ne = any
    8e08:	b.ne	900c <PySequence_Fast@plt+0x4dcc>  // b.any
    8e0c:	cmp	x23, x21
    8e10:	b.lt	9054 <PySequence_Fast@plt+0x4e14>  // b.tstop
    8e14:	stp	x25, x26, [sp, #64]
    8e18:	mov	x20, #0x0                   	// #0
    8e1c:	add	x26, x22, #0x18
    8e20:	adrp	x25, 20000 <PyInit__elementtree@@Base+0x136c8>
    8e24:	add	x25, x25, #0x320
    8e28:	cmp	x21, #0x0
    8e2c:	b.gt	90bc <PySequence_Fast@plt+0x4e7c>
    8e30:	cmp	x23, #0x0
    8e34:	b.le	914c <PySequence_Fast@plt+0x4f0c>
    8e38:	mov	x0, x23
    8e3c:	bl	3c50 <PyList_New@plt>
    8e40:	mov	x20, x0
    8e44:	cbz	x0, 9114 <PySequence_Fast@plt+0x4ed4>
    8e48:	ldr	x1, [sp, #88]
    8e4c:	mov	x0, #0x0                   	// #0
    8e50:	ldr	x2, [x19, #40]
    8e54:	ldr	x2, [x2, #24]
    8e58:	ldr	x3, [x2, x1, lsl #3]
    8e5c:	ldr	x2, [x20, #24]
    8e60:	str	x3, [x2, x0, lsl #3]
    8e64:	ldr	x2, [sp, #104]
    8e68:	add	x1, x1, x2
    8e6c:	add	x0, x0, #0x1
    8e70:	cmp	x23, x0
    8e74:	b.ne	8e50 <PySequence_Fast@plt+0x4c10>  // b.any
    8e78:	b	9150 <PySequence_Fast@plt+0x4f10>
    8e7c:	mov	x1, #0x0                   	// #0
    8e80:	mov	x0, x19
    8e84:	bl	4e20 <PySequence_Fast@plt+0xbe0>
    8e88:	mov	w1, w0
    8e8c:	mov	w0, #0xffffffff            	// #-1
    8e90:	tbz	w1, #31, 8d9c <PySequence_Fast@plt+0x4b5c>
    8e94:	b	8d58 <PySequence_Fast@plt+0x4b18>
    8e98:	mov	w0, #0x0                   	// #0
    8e9c:	cmp	x23, #0x0
    8ea0:	b.le	92e8 <PySequence_Fast@plt+0x50a8>
    8ea4:	ldr	x0, [sp, #104]
    8ea8:	tbnz	x0, #63, 8f88 <PySequence_Fast@plt+0x4d48>
    8eac:	mov	x0, x23
    8eb0:	bl	3c50 <PyList_New@plt>
    8eb4:	mov	x21, x0
    8eb8:	mov	w0, #0xffffffff            	// #-1
    8ebc:	cbz	x21, 92f0 <PySequence_Fast@plt+0x50b0>
    8ec0:	ldr	x20, [sp, #88]
    8ec4:	ldr	x0, [sp, #96]
    8ec8:	cmp	x20, x0
    8ecc:	b.cs	8f40 <PySequence_Fast@plt+0x4d00>  // b.hs, b.nlast
    8ed0:	mov	x22, #0x0                   	// #0
    8ed4:	ldr	x2, [sp, #104]
    8ed8:	ldr	x0, [x19, #40]
    8edc:	ldr	x3, [x0, #8]
    8ee0:	add	x4, x2, x20
    8ee4:	sub	x1, x2, #0x1
    8ee8:	sub	x2, x3, #0x1
    8eec:	sub	x2, x2, x20
    8ef0:	cmp	x4, x3
    8ef4:	csel	x2, x2, x1, cs  // cs = hs, nlast
    8ef8:	ldr	x0, [x0, #24]
    8efc:	ldr	x1, [x0, x20, lsl #3]
    8f00:	ldr	x0, [x21, #24]
    8f04:	str	x1, [x0, x22, lsl #3]
    8f08:	ldr	x0, [x19, #40]
    8f0c:	ldr	x0, [x0, #24]
    8f10:	add	x1, x0, x20, lsl #3
    8f14:	sub	x3, x20, x22
    8f18:	lsl	x2, x2, #3
    8f1c:	add	x1, x1, #0x8
    8f20:	add	x0, x0, x3, lsl #3
    8f24:	bl	3c40 <memmove@plt>
    8f28:	ldr	x0, [sp, #104]
    8f2c:	add	x20, x20, x0
    8f30:	add	x22, x22, #0x1
    8f34:	ldr	x0, [sp, #96]
    8f38:	cmp	x0, x20
    8f3c:	b.hi	8ed4 <PySequence_Fast@plt+0x4c94>  // b.pmore
    8f40:	ldr	x1, [sp, #104]
    8f44:	ldr	x0, [sp, #88]
    8f48:	madd	x1, x23, x1, x0
    8f4c:	ldr	x0, [x19, #40]
    8f50:	ldr	x2, [x0, #8]
    8f54:	cmp	x2, x1
    8f58:	b.hi	8fac <PySequence_Fast@plt+0x4d6c>  // b.pmore
    8f5c:	ldr	x1, [x19, #40]
    8f60:	ldr	x0, [x1, #8]
    8f64:	sub	x23, x0, x23
    8f68:	str	x23, [x1, #8]
    8f6c:	ldr	x1, [x21]
    8f70:	sub	x1, x1, #0x1
    8f74:	str	x1, [x21]
    8f78:	mov	w0, #0x0                   	// #0
    8f7c:	cbz	x1, 8fcc <PySequence_Fast@plt+0x4d8c>
    8f80:	ldp	x23, x24, [sp, #48]
    8f84:	b	8d58 <PySequence_Fast@plt+0x4b18>
    8f88:	ldr	x2, [sp, #88]
    8f8c:	add	x1, x2, #0x1
    8f90:	str	x1, [sp, #96]
    8f94:	sub	x1, x23, #0x1
    8f98:	madd	x1, x1, x0, x2
    8f9c:	str	x1, [sp, #88]
    8fa0:	neg	x0, x0
    8fa4:	str	x0, [sp, #104]
    8fa8:	b	8eac <PySequence_Fast@plt+0x4c6c>
    8fac:	ldr	x0, [x0, #24]
    8fb0:	sub	x2, x2, x1
    8fb4:	sub	x3, x1, x23
    8fb8:	lsl	x2, x2, #3
    8fbc:	add	x1, x0, x1, lsl #3
    8fc0:	add	x0, x0, x3, lsl #3
    8fc4:	bl	3c40 <memmove@plt>
    8fc8:	b	8f5c <PySequence_Fast@plt+0x4d1c>
    8fcc:	mov	x0, x21
    8fd0:	bl	3d70 <_Py_Dealloc@plt>
    8fd4:	mov	w0, #0x0                   	// #0
    8fd8:	ldp	x23, x24, [sp, #48]
    8fdc:	b	8d58 <PySequence_Fast@plt+0x4b18>
    8fe0:	ldr	x0, [x21, #8]
    8fe4:	ldr	x2, [x0, #24]
    8fe8:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    8fec:	add	x1, x1, #0xe58
    8ff0:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    8ff4:	ldr	x0, [x0, #3944]
    8ff8:	ldr	x0, [x0]
    8ffc:	bl	4180 <PyErr_Format@plt>
    9000:	mov	w0, #0xffffffff            	// #-1
    9004:	ldp	x23, x24, [sp, #48]
    9008:	b	8d58 <PySequence_Fast@plt+0x4b18>
    900c:	ldr	x0, [x22]
    9010:	sub	x0, x0, #0x1
    9014:	str	x0, [x22]
    9018:	cbz	x0, 9048 <PySequence_Fast@plt+0x4e08>
    901c:	mov	x3, x23
    9020:	mov	x2, x21
    9024:	adrp	x1, d000 <PyInit__elementtree@@Base+0x6c8>
    9028:	add	x1, x1, #0x78
    902c:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    9030:	ldr	x0, [x0, #3928]
    9034:	ldr	x0, [x0]
    9038:	bl	4180 <PyErr_Format@plt>
    903c:	mov	w0, #0xffffffff            	// #-1
    9040:	ldp	x23, x24, [sp, #48]
    9044:	b	8d58 <PySequence_Fast@plt+0x4b18>
    9048:	mov	x0, x22
    904c:	bl	3d70 <_Py_Dealloc@plt>
    9050:	b	901c <PySequence_Fast@plt+0x4ddc>
    9054:	sub	x1, x21, x23
    9058:	mov	x0, x19
    905c:	bl	4ea4 <PySequence_Fast@plt+0xc64>
    9060:	tbz	w0, #31, 8e14 <PySequence_Fast@plt+0x4bd4>
    9064:	ldr	x1, [x22]
    9068:	sub	x1, x1, #0x1
    906c:	str	x1, [x22]
    9070:	mov	w0, #0xffffffff            	// #-1
    9074:	cbz	x1, 9080 <PySequence_Fast@plt+0x4e40>
    9078:	ldp	x23, x24, [sp, #48]
    907c:	b	8d58 <PySequence_Fast@plt+0x4b18>
    9080:	mov	x0, x22
    9084:	bl	3d70 <_Py_Dealloc@plt>
    9088:	mov	w0, #0xffffffff            	// #-1
    908c:	ldp	x23, x24, [sp, #48]
    9090:	b	8d58 <PySequence_Fast@plt+0x4b18>
    9094:	ldr	x24, [x26, x20, lsl #3]
    9098:	ldr	x0, [x24, #8]
    909c:	cmp	x0, x25
    90a0:	b.eq	90b0 <PySequence_Fast@plt+0x4e70>  // b.none
    90a4:	mov	x1, x25
    90a8:	bl	4160 <PyType_IsSubtype@plt>
    90ac:	cbz	w0, 90d4 <PySequence_Fast@plt+0x4e94>
    90b0:	add	x20, x20, #0x1
    90b4:	cmp	x21, x20
    90b8:	b.eq	8e30 <PySequence_Fast@plt+0x4bf0>  // b.none
    90bc:	ldr	x0, [x22, #8]
    90c0:	ldr	x0, [x0, #168]
    90c4:	tbz	w0, #25, 9094 <PySequence_Fast@plt+0x4e54>
    90c8:	ldr	x0, [x22, #24]
    90cc:	ldr	x24, [x0, x20, lsl #3]
    90d0:	b	9098 <PySequence_Fast@plt+0x4e58>
    90d4:	mov	x0, x24
    90d8:	bl	4df0 <PySequence_Fast@plt+0xbb0>
    90dc:	ldr	x1, [x22]
    90e0:	sub	x1, x1, #0x1
    90e4:	str	x1, [x22]
    90e8:	mov	w0, #0xffffffff            	// #-1
    90ec:	cbz	x1, 90fc <PySequence_Fast@plt+0x4ebc>
    90f0:	ldp	x23, x24, [sp, #48]
    90f4:	ldp	x25, x26, [sp, #64]
    90f8:	b	8d58 <PySequence_Fast@plt+0x4b18>
    90fc:	mov	x0, x22
    9100:	bl	3d70 <_Py_Dealloc@plt>
    9104:	mov	w0, #0xffffffff            	// #-1
    9108:	ldp	x23, x24, [sp, #48]
    910c:	ldp	x25, x26, [sp, #64]
    9110:	b	8d58 <PySequence_Fast@plt+0x4b18>
    9114:	ldr	x1, [x22]
    9118:	sub	x1, x1, #0x1
    911c:	str	x1, [x22]
    9120:	mov	w0, #0xffffffff            	// #-1
    9124:	cbz	x1, 9134 <PySequence_Fast@plt+0x4ef4>
    9128:	ldp	x23, x24, [sp, #48]
    912c:	ldp	x25, x26, [sp, #64]
    9130:	b	8d58 <PySequence_Fast@plt+0x4b18>
    9134:	mov	x0, x22
    9138:	bl	3d70 <_Py_Dealloc@plt>
    913c:	mov	w0, #0xffffffff            	// #-1
    9140:	ldp	x23, x24, [sp, #48]
    9144:	ldp	x25, x26, [sp, #64]
    9148:	b	8d58 <PySequence_Fast@plt+0x4b18>
    914c:	mov	x20, #0x0                   	// #0
    9150:	cmp	x23, x21
    9154:	b.le	91b8 <PySequence_Fast@plt+0x4f78>
    9158:	ldr	x2, [sp, #96]
    915c:	ldr	x0, [x19, #40]
    9160:	ldr	x1, [x0, #8]
    9164:	cmp	x2, x1
    9168:	b.ge	91a0 <PySequence_Fast@plt+0x4f60>  // b.tcont
    916c:	lsl	x1, x2, #3
    9170:	sub	x4, x21, x23
    9174:	lsl	x4, x4, #3
    9178:	ldr	x0, [x0, #24]
    917c:	ldr	x3, [x0, x1]
    9180:	add	x0, x0, x4
    9184:	str	x3, [x0, x1]
    9188:	add	x2, x2, #0x1
    918c:	ldr	x0, [x19, #40]
    9190:	add	x1, x1, #0x8
    9194:	ldr	x3, [x0, #8]
    9198:	cmp	x3, x2
    919c:	b.gt	9178 <PySequence_Fast@plt+0x4f38>
    91a0:	ldr	x0, [sp, #88]
    91a4:	cmp	x21, #0x0
    91a8:	b.le	9254 <PySequence_Fast@plt+0x5014>
    91ac:	mov	x1, #0x0                   	// #0
    91b0:	add	x4, x22, #0x18
    91b4:	b	923c <PySequence_Fast@plt+0x4ffc>
    91b8:	b.ge	91a0 <PySequence_Fast@plt+0x4f60>  // b.tcont
    91bc:	ldr	x0, [x19, #40]
    91c0:	ldr	x2, [x0, #8]
    91c4:	sub	x2, x2, #0x1
    91c8:	ldr	x0, [sp, #96]
    91cc:	cmp	x2, x0
    91d0:	b.lt	91a0 <PySequence_Fast@plt+0x4f60>  // b.tstop
    91d4:	lsl	x1, x2, #3
    91d8:	sub	x4, x21, x23
    91dc:	lsl	x4, x4, #3
    91e0:	ldr	x0, [x19, #40]
    91e4:	ldr	x0, [x0, #24]
    91e8:	ldr	x3, [x0, x1]
    91ec:	add	x0, x0, x1
    91f0:	str	x3, [x0, x4]
    91f4:	sub	x2, x2, #0x1
    91f8:	sub	x1, x1, #0x8
    91fc:	ldr	x0, [sp, #96]
    9200:	cmp	x0, x2
    9204:	b.le	91e0 <PySequence_Fast@plt+0x4fa0>
    9208:	b	91a0 <PySequence_Fast@plt+0x4f60>
    920c:	ldr	x3, [x4, x1, lsl #3]
    9210:	ldr	x2, [x3]
    9214:	add	x2, x2, #0x1
    9218:	str	x2, [x3]
    921c:	ldr	x2, [x19, #40]
    9220:	ldr	x2, [x2, #24]
    9224:	str	x3, [x2, x0, lsl #3]
    9228:	ldr	x2, [sp, #104]
    922c:	add	x0, x0, x2
    9230:	add	x1, x1, #0x1
    9234:	cmp	x21, x1
    9238:	b.eq	9254 <PySequence_Fast@plt+0x5014>  // b.none
    923c:	ldr	x2, [x22, #8]
    9240:	ldr	x2, [x2, #168]
    9244:	tbz	w2, #25, 920c <PySequence_Fast@plt+0x4fcc>
    9248:	ldr	x2, [x22, #24]
    924c:	ldr	x3, [x2, x1, lsl #3]
    9250:	b	9210 <PySequence_Fast@plt+0x4fd0>
    9254:	ldr	x1, [x19, #40]
    9258:	ldr	x0, [x1, #8]
    925c:	sub	x23, x0, x23
    9260:	add	x21, x23, x21
    9264:	str	x21, [x1, #8]
    9268:	ldr	x0, [x22]
    926c:	sub	x0, x0, #0x1
    9270:	str	x0, [x22]
    9274:	cbz	x0, 929c <PySequence_Fast@plt+0x505c>
    9278:	mov	w0, #0x0                   	// #0
    927c:	cbz	x20, 92f8 <PySequence_Fast@plt+0x50b8>
    9280:	ldr	x1, [x20]
    9284:	sub	x1, x1, #0x1
    9288:	str	x1, [x20]
    928c:	cbz	x1, 92a8 <PySequence_Fast@plt+0x5068>
    9290:	ldp	x23, x24, [sp, #48]
    9294:	ldp	x25, x26, [sp, #64]
    9298:	b	8d58 <PySequence_Fast@plt+0x4b18>
    929c:	mov	x0, x22
    92a0:	bl	3d70 <_Py_Dealloc@plt>
    92a4:	b	9278 <PySequence_Fast@plt+0x5038>
    92a8:	mov	x0, x20
    92ac:	bl	3d70 <_Py_Dealloc@plt>
    92b0:	mov	w0, #0x0                   	// #0
    92b4:	ldp	x23, x24, [sp, #48]
    92b8:	ldp	x25, x26, [sp, #64]
    92bc:	b	8d58 <PySequence_Fast@plt+0x4b18>
    92c0:	adrp	x1, d000 <PyInit__elementtree@@Base+0x6c8>
    92c4:	add	x1, x1, #0x50
    92c8:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    92cc:	ldr	x0, [x0, #3944]
    92d0:	ldr	x0, [x0]
    92d4:	bl	3de0 <PyErr_SetString@plt>
    92d8:	mov	w0, #0xffffffff            	// #-1
    92dc:	b	8d58 <PySequence_Fast@plt+0x4b18>
    92e0:	mov	w0, #0xffffffff            	// #-1
    92e4:	b	8d58 <PySequence_Fast@plt+0x4b18>
    92e8:	ldp	x23, x24, [sp, #48]
    92ec:	b	8d58 <PySequence_Fast@plt+0x4b18>
    92f0:	ldp	x23, x24, [sp, #48]
    92f4:	b	8d58 <PySequence_Fast@plt+0x4b18>
    92f8:	ldp	x23, x24, [sp, #48]
    92fc:	ldp	x25, x26, [sp, #64]
    9300:	b	8d58 <PySequence_Fast@plt+0x4b18>
    9304:	stp	x29, x30, [sp, #-32]!
    9308:	mov	x29, sp
    930c:	stp	x19, x20, [sp, #16]
    9310:	mov	x19, x0
    9314:	ldr	x0, [x0, #16]
    9318:	cbz	x0, 9344 <PySequence_Fast@plt+0x5104>
    931c:	mov	x0, x19
    9320:	bl	3fe0 <Py_ReprEnter@plt>
    9324:	cbz	w0, 935c <PySequence_Fast@plt+0x511c>
    9328:	mov	x20, #0x0                   	// #0
    932c:	cmp	w0, #0x0
    9330:	b.gt	9380 <PySequence_Fast@plt+0x5140>
    9334:	mov	x0, x20
    9338:	ldp	x19, x20, [sp, #16]
    933c:	ldp	x29, x30, [sp], #32
    9340:	ret
    9344:	mov	x1, x19
    9348:	adrp	x0, d000 <PyInit__elementtree@@Base+0x6c8>
    934c:	add	x0, x0, #0xc0
    9350:	bl	3c30 <PyUnicode_FromFormat@plt>
    9354:	mov	x20, x0
    9358:	b	9334 <PySequence_Fast@plt+0x50f4>
    935c:	mov	x2, x19
    9360:	ldr	x1, [x19, #16]
    9364:	adrp	x0, d000 <PyInit__elementtree@@Base+0x6c8>
    9368:	add	x0, x0, #0xd0
    936c:	bl	3c30 <PyUnicode_FromFormat@plt>
    9370:	mov	x20, x0
    9374:	mov	x0, x19
    9378:	bl	41a0 <Py_ReprLeave@plt>
    937c:	b	9334 <PySequence_Fast@plt+0x50f4>
    9380:	ldr	x0, [x19, #8]
    9384:	ldr	x2, [x0, #24]
    9388:	adrp	x1, d000 <PyInit__elementtree@@Base+0x6c8>
    938c:	add	x1, x1, #0xe8
    9390:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    9394:	ldr	x0, [x0, #3920]
    9398:	ldr	x0, [x0]
    939c:	bl	4180 <PyErr_Format@plt>
    93a0:	b	9334 <PySequence_Fast@plt+0x50f4>
    93a4:	sub	sp, sp, #0x90
    93a8:	stp	x29, x30, [sp, #16]
    93ac:	add	x29, sp, #0x10
    93b0:	stp	x19, x20, [sp, #32]
    93b4:	stp	x21, x22, [sp, #48]
    93b8:	mov	x20, x0
    93bc:	mov	x19, x1
    93c0:	ldr	x1, [x1, #16]
    93c4:	cbz	x2, 9544 <PySequence_Fast@plt+0x5304>
    93c8:	ldr	x22, [x2, #16]
    93cc:	add	x22, x1, x22
    93d0:	add	x0, sp, #0x68
    93d4:	str	x0, [sp]
    93d8:	mov	w7, #0x0                   	// #0
    93dc:	mov	w6, #0x1                   	// #1
    93e0:	mov	w5, #0x0                   	// #0
    93e4:	adrp	x4, 20000 <PyInit__elementtree@@Base+0x136c8>
    93e8:	add	x4, x4, #0x9b8
    93ec:	add	x4, x4, #0x328
    93f0:	mov	x3, #0x0                   	// #0
    93f4:	add	x0, x19, #0x18
    93f8:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    93fc:	mov	x19, x0
    9400:	cbz	x0, 96c0 <PySequence_Fast@plt+0x5480>
    9404:	stp	x23, x24, [sp, #64]
    9408:	str	x25, [sp, #80]
    940c:	cbz	x22, 95dc <PySequence_Fast@plt+0x539c>
    9410:	ldr	x24, [x19]
    9414:	cbz	x24, 9568 <PySequence_Fast@plt+0x5328>
    9418:	subs	x22, x22, #0x1
    941c:	b.eq	9594 <PySequence_Fast@plt+0x5354>  // b.none
    9420:	ldr	x23, [x19, #8]
    9424:	cbz	x23, 9574 <PySequence_Fast@plt+0x5334>
    9428:	subs	x22, x22, #0x1
    942c:	b.eq	95ac <PySequence_Fast@plt+0x536c>  // b.none
    9430:	ldr	x21, [x19, #16]
    9434:	cbz	x21, 9580 <PySequence_Fast@plt+0x5340>
    9438:	subs	x22, x22, #0x1
    943c:	b.eq	95c0 <PySequence_Fast@plt+0x5380>  // b.none
    9440:	ldr	x0, [x19, #24]
    9444:	cbz	x0, 958c <PySequence_Fast@plt+0x534c>
    9448:	bl	4050 <PyObject_IsTrue@plt>
    944c:	mov	w25, w0
    9450:	tbnz	w0, #31, 96c8 <PySequence_Fast@plt+0x5488>
    9454:	cmp	x22, #0x1
    9458:	b.eq	95cc <PySequence_Fast@plt+0x538c>  // b.none
    945c:	ldr	x0, [x19, #32]
    9460:	bl	4050 <PyObject_IsTrue@plt>
    9464:	mov	w19, w0
    9468:	tbnz	w0, #31, 96d8 <PySequence_Fast@plt+0x5498>
    946c:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    9470:	ldr	x0, [x0, #3976]
    9474:	cmp	x24, x0
    9478:	b.eq	95f0 <PySequence_Fast@plt+0x53b0>  // b.none
    947c:	ldr	x0, [x24]
    9480:	add	x0, x0, #0x1
    9484:	str	x0, [x24]
    9488:	ldr	x0, [x20, #72]
    948c:	str	x24, [x20, #72]
    9490:	cbz	x0, 94a4 <PySequence_Fast@plt+0x5264>
    9494:	ldr	x1, [x0]
    9498:	sub	x1, x1, #0x1
    949c:	str	x1, [x0]
    94a0:	cbz	x1, 95d4 <PySequence_Fast@plt+0x5394>
    94a4:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    94a8:	ldr	x1, [x1, #3976]
    94ac:	cmp	x23, x1
    94b0:	b.eq	9614 <PySequence_Fast@plt+0x53d4>  // b.none
    94b4:	cbz	x23, 9638 <PySequence_Fast@plt+0x53f8>
    94b8:	ldr	x0, [x23]
    94bc:	add	x0, x0, #0x1
    94c0:	str	x0, [x23]
    94c4:	ldr	x0, [x20, #80]
    94c8:	str	x23, [x20, #80]
    94cc:	cbz	x0, 94e0 <PySequence_Fast@plt+0x52a0>
    94d0:	ldr	x1, [x0]
    94d4:	sub	x1, x1, #0x1
    94d8:	str	x1, [x0]
    94dc:	cbz	x1, 9630 <PySequence_Fast@plt+0x53f0>
    94e0:	strb	w25, [x20, #152]
    94e4:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    94e8:	ldr	x1, [x1, #3976]
    94ec:	cmp	x21, x1
    94f0:	b.eq	9664 <PySequence_Fast@plt+0x5424>  // b.none
    94f4:	cbz	x21, 9688 <PySequence_Fast@plt+0x5448>
    94f8:	ldr	x1, [x21]
    94fc:	add	x1, x1, #0x1
    9500:	str	x1, [x21]
    9504:	ldr	x0, [x20, #88]
    9508:	str	x21, [x20, #88]
    950c:	cbz	x0, 9520 <PySequence_Fast@plt+0x52e0>
    9510:	ldr	x1, [x0]
    9514:	sub	x1, x1, #0x1
    9518:	str	x1, [x0]
    951c:	cbz	x1, 9680 <PySequence_Fast@plt+0x5440>
    9520:	strb	w19, [x20, #153]
    9524:	mov	w0, #0x0                   	// #0
    9528:	ldp	x23, x24, [sp, #64]
    952c:	ldr	x25, [sp, #80]
    9530:	ldp	x19, x20, [sp, #32]
    9534:	ldp	x21, x22, [sp, #48]
    9538:	ldp	x29, x30, [sp, #16]
    953c:	add	sp, sp, #0x90
    9540:	ret
    9544:	cmp	x1, #0x1
    9548:	b.hi	9560 <PySequence_Fast@plt+0x5320>  // b.pmore
    954c:	stp	x23, x24, [sp, #64]
    9550:	str	x25, [sp, #80]
    9554:	add	x19, x19, #0x18
    9558:	mov	x22, x1
    955c:	b	940c <PySequence_Fast@plt+0x51cc>
    9560:	mov	x22, x1
    9564:	b	93d0 <PySequence_Fast@plt+0x5190>
    9568:	adrp	x24, 1f000 <PyInit__elementtree@@Base+0x126c8>
    956c:	ldr	x24, [x24, #3976]
    9570:	b	9420 <PySequence_Fast@plt+0x51e0>
    9574:	adrp	x23, 1f000 <PyInit__elementtree@@Base+0x126c8>
    9578:	ldr	x23, [x23, #3976]
    957c:	b	9430 <PySequence_Fast@plt+0x51f0>
    9580:	adrp	x21, 1f000 <PyInit__elementtree@@Base+0x126c8>
    9584:	ldr	x21, [x21, #3976]
    9588:	b	9440 <PySequence_Fast@plt+0x5200>
    958c:	mov	w25, #0x0                   	// #0
    9590:	b	945c <PySequence_Fast@plt+0x521c>
    9594:	mov	w19, #0x0                   	// #0
    9598:	mov	w25, #0x0                   	// #0
    959c:	adrp	x21, 1f000 <PyInit__elementtree@@Base+0x126c8>
    95a0:	ldr	x21, [x21, #3976]
    95a4:	mov	x23, x21
    95a8:	b	946c <PySequence_Fast@plt+0x522c>
    95ac:	mov	w19, #0x0                   	// #0
    95b0:	mov	w25, #0x0                   	// #0
    95b4:	adrp	x21, 1f000 <PyInit__elementtree@@Base+0x126c8>
    95b8:	ldr	x21, [x21, #3976]
    95bc:	b	946c <PySequence_Fast@plt+0x522c>
    95c0:	mov	w19, #0x0                   	// #0
    95c4:	mov	w25, #0x0                   	// #0
    95c8:	b	946c <PySequence_Fast@plt+0x522c>
    95cc:	mov	w19, #0x0                   	// #0
    95d0:	b	946c <PySequence_Fast@plt+0x522c>
    95d4:	bl	3d70 <_Py_Dealloc@plt>
    95d8:	b	94a4 <PySequence_Fast@plt+0x5264>
    95dc:	mov	w19, #0x0                   	// #0
    95e0:	mov	w25, #0x0                   	// #0
    95e4:	adrp	x21, 1f000 <PyInit__elementtree@@Base+0x126c8>
    95e8:	ldr	x21, [x21, #3976]
    95ec:	mov	x23, x21
    95f0:	ldr	x0, [x20, #72]
    95f4:	cbz	x0, 94a4 <PySequence_Fast@plt+0x5264>
    95f8:	str	xzr, [x20, #72]
    95fc:	ldr	x1, [x0]
    9600:	sub	x1, x1, #0x1
    9604:	str	x1, [x0]
    9608:	cbnz	x1, 94a4 <PySequence_Fast@plt+0x5264>
    960c:	bl	3d70 <_Py_Dealloc@plt>
    9610:	b	94a4 <PySequence_Fast@plt+0x5264>
    9614:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x136c8>
    9618:	add	x0, x0, #0x9b8
    961c:	add	x0, x0, #0x80
    9620:	bl	3fc0 <PyState_FindModule@plt>
    9624:	bl	3e10 <PyModule_GetState@plt>
    9628:	ldr	x23, [x0, #24]
    962c:	b	94b4 <PySequence_Fast@plt+0x5274>
    9630:	bl	3d70 <_Py_Dealloc@plt>
    9634:	b	94e0 <PySequence_Fast@plt+0x52a0>
    9638:	ldr	x0, [x20, #80]
    963c:	cbz	x0, 9654 <PySequence_Fast@plt+0x5414>
    9640:	str	xzr, [x20, #80]
    9644:	ldr	x1, [x0]
    9648:	sub	x1, x1, #0x1
    964c:	str	x1, [x0]
    9650:	cbz	x1, 965c <PySequence_Fast@plt+0x541c>
    9654:	strb	wzr, [x20, #152]
    9658:	b	94e4 <PySequence_Fast@plt+0x52a4>
    965c:	bl	3d70 <_Py_Dealloc@plt>
    9660:	b	9654 <PySequence_Fast@plt+0x5414>
    9664:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x136c8>
    9668:	add	x0, x0, #0x9b8
    966c:	add	x0, x0, #0x80
    9670:	bl	3fc0 <PyState_FindModule@plt>
    9674:	bl	3e10 <PyModule_GetState@plt>
    9678:	ldr	x21, [x0, #32]
    967c:	b	94f4 <PySequence_Fast@plt+0x52b4>
    9680:	bl	3d70 <_Py_Dealloc@plt>
    9684:	b	9520 <PySequence_Fast@plt+0x52e0>
    9688:	ldr	x0, [x20, #88]
    968c:	cbz	x0, 96a4 <PySequence_Fast@plt+0x5464>
    9690:	str	xzr, [x20, #88]
    9694:	ldr	x1, [x0]
    9698:	sub	x1, x1, #0x1
    969c:	str	x1, [x0]
    96a0:	cbz	x1, 96b8 <PySequence_Fast@plt+0x5478>
    96a4:	strb	wzr, [x20, #153]
    96a8:	mov	w0, #0x0                   	// #0
    96ac:	ldp	x23, x24, [sp, #64]
    96b0:	ldr	x25, [sp, #80]
    96b4:	b	9530 <PySequence_Fast@plt+0x52f0>
    96b8:	bl	3d70 <_Py_Dealloc@plt>
    96bc:	b	96a4 <PySequence_Fast@plt+0x5464>
    96c0:	mov	w0, #0xffffffff            	// #-1
    96c4:	b	9530 <PySequence_Fast@plt+0x52f0>
    96c8:	mov	w0, #0xffffffff            	// #-1
    96cc:	ldp	x23, x24, [sp, #64]
    96d0:	ldr	x25, [sp, #80]
    96d4:	b	9530 <PySequence_Fast@plt+0x52f0>
    96d8:	mov	w0, #0xffffffff            	// #-1
    96dc:	ldp	x23, x24, [sp, #64]
    96e0:	ldr	x25, [sp, #80]
    96e4:	b	9530 <PySequence_Fast@plt+0x52f0>
    96e8:	stp	x29, x30, [sp, #-80]!
    96ec:	mov	x29, sp
    96f0:	stp	x19, x20, [sp, #16]
    96f4:	stp	x21, x22, [sp, #32]
    96f8:	stp	x23, x24, [sp, #48]
    96fc:	str	x25, [sp, #64]
    9700:	mov	x19, x0
    9704:	adrp	x21, 1f000 <PyInit__elementtree@@Base+0x126c8>
    9708:	ldr	x24, [x21, #3976]
    970c:	mov	x21, x24
    9710:	mov	w22, #0x2                   	// #2
    9714:	mov	x23, #0x7ffffffffffffff     	// #576460752303423487
    9718:	b	982c <PySequence_Fast@plt+0x55ec>
    971c:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    9720:	ldr	x0, [x0, #4016]
    9724:	ldr	x0, [x0]
    9728:	bl	3e40 <PyErr_SetNone@plt>
    972c:	b	9954 <PySequence_Fast@plt+0x5714>
    9730:	lsl	x1, x0, #4
    9734:	sub	x1, x1, #0x10
    9738:	ldr	x2, [x19, #16]
    973c:	add	x3, x2, x1
    9740:	ldr	x20, [x2, x1]
    9744:	ldr	x1, [x20, #40]
    9748:	cbz	x1, 975c <PySequence_Fast@plt+0x551c>
    974c:	ldr	x2, [x3, #8]
    9750:	ldr	x4, [x1, #8]
    9754:	cmp	x4, x2
    9758:	b.gt	97a0 <PySequence_Fast@plt+0x5560>
    975c:	sub	x0, x0, #0x1
    9760:	str	x0, [x19, #24]
    9764:	ldr	w1, [x19, #56]
    9768:	cmp	w1, #0x0
    976c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    9770:	b.ne	9790 <PySequence_Fast@plt+0x5550>  // b.any
    9774:	ldr	x0, [x20]
    9778:	sub	x0, x0, #0x1
    977c:	str	x0, [x20]
    9780:	cbnz	x0, 982c <PySequence_Fast@plt+0x55ec>
    9784:	mov	x0, x20
    9788:	bl	3d70 <_Py_Dealloc@plt>
    978c:	b	982c <PySequence_Fast@plt+0x55ec>
    9790:	mov	x0, x20
    9794:	bl	5f44 <PySequence_Fast@plt+0x1d04>
    9798:	mov	x25, x0
    979c:	b	9890 <PySequence_Fast@plt+0x5650>
    97a0:	ldr	x0, [x1, #24]
    97a4:	ldr	x20, [x0, x2, lsl #3]
    97a8:	add	x2, x2, #0x1
    97ac:	str	x2, [x3, #8]
    97b0:	ldr	x0, [x20]
    97b4:	add	x0, x0, #0x1
    97b8:	str	x0, [x20]
    97bc:	b	9840 <PySequence_Fast@plt+0x5600>
    97c0:	ldr	x2, [x19, #16]
    97c4:	ldr	x0, [x19, #24]
    97c8:	add	x1, x0, #0x1
    97cc:	str	x1, [x19, #24]
    97d0:	lsl	x0, x0, #4
    97d4:	add	x3, x2, x0
    97d8:	ldr	x1, [x20]
    97dc:	add	x1, x1, #0x1
    97e0:	str	x1, [x20]
    97e4:	str	x20, [x2, x0]
    97e8:	str	xzr, [x3, #8]
    97ec:	ldr	w0, [x19, #56]
    97f0:	cbnz	w0, 9884 <PySequence_Fast@plt+0x5644>
    97f4:	ldr	x1, [x19, #48]
    97f8:	cmp	x1, x21
    97fc:	b.eq	9954 <PySequence_Fast@plt+0x5714>  // b.none
    9800:	mov	w2, w22
    9804:	ldr	x0, [x20, #16]
    9808:	bl	3ec0 <PyObject_RichCompareBool@plt>
    980c:	mov	w25, w0
    9810:	cmp	w0, #0x0
    9814:	b.gt	9954 <PySequence_Fast@plt+0x5714>
    9818:	ldr	x0, [x20]
    981c:	sub	x0, x0, #0x1
    9820:	str	x0, [x20]
    9824:	cbz	x0, 98e8 <PySequence_Fast@plt+0x56a8>
    9828:	tbnz	w25, #31, 9950 <PySequence_Fast@plt+0x5710>
    982c:	ldr	x0, [x19, #24]
    9830:	cbnz	x0, 9730 <PySequence_Fast@plt+0x54f0>
    9834:	ldr	x20, [x19, #40]
    9838:	cbz	x20, 971c <PySequence_Fast@plt+0x54dc>
    983c:	str	xzr, [x19, #40]
    9840:	ldr	x1, [x19, #32]
    9844:	ldr	x0, [x19, #24]
    9848:	cmp	x0, x1
    984c:	b.lt	97c0 <PySequence_Fast@plt+0x5580>  // b.tstop
    9850:	lsl	x25, x1, #1
    9854:	ldr	x0, [x19, #16]
    9858:	cmp	x23, x1, lsl #1
    985c:	b.cc	9978 <PySequence_Fast@plt+0x5738>  // b.lo, b.ul, b.last
    9860:	lsl	x1, x25, #4
    9864:	bl	3e30 <PyMem_Realloc@plt>
    9868:	cbz	x0, 9978 <PySequence_Fast@plt+0x5738>
    986c:	str	x0, [x19, #16]
    9870:	str	x25, [x19, #32]
    9874:	b	97c0 <PySequence_Fast@plt+0x5580>
    9878:	mov	x0, x20
    987c:	bl	3d70 <_Py_Dealloc@plt>
    9880:	b	9988 <PySequence_Fast@plt+0x5748>
    9884:	mov	x0, x20
    9888:	bl	5ffc <PySequence_Fast@plt+0x1dbc>
    988c:	mov	x25, x0
    9890:	cbz	x25, 98f4 <PySequence_Fast@plt+0x56b4>
    9894:	cmp	x25, x24
    9898:	b.eq	991c <PySequence_Fast@plt+0x56dc>  // b.none
    989c:	ldr	x0, [x25]
    98a0:	add	x0, x0, #0x1
    98a4:	str	x0, [x25]
    98a8:	ldr	x0, [x20]
    98ac:	sub	x0, x0, #0x1
    98b0:	str	x0, [x20]
    98b4:	cbz	x0, 9938 <PySequence_Fast@plt+0x56f8>
    98b8:	mov	x0, x25
    98bc:	bl	4050 <PyObject_IsTrue@plt>
    98c0:	mov	w20, w0
    98c4:	cmp	w0, #0x0
    98c8:	b.gt	9970 <PySequence_Fast@plt+0x5730>
    98cc:	ldr	x0, [x25]
    98d0:	sub	x0, x0, #0x1
    98d4:	str	x0, [x25]
    98d8:	cbz	x0, 9944 <PySequence_Fast@plt+0x5704>
    98dc:	tbz	w20, #31, 982c <PySequence_Fast@plt+0x55ec>
    98e0:	mov	x20, #0x0                   	// #0
    98e4:	b	9954 <PySequence_Fast@plt+0x5714>
    98e8:	mov	x0, x20
    98ec:	bl	3d70 <_Py_Dealloc@plt>
    98f0:	b	9828 <PySequence_Fast@plt+0x55e8>
    98f4:	ldr	x0, [x20]
    98f8:	sub	x0, x0, #0x1
    98fc:	str	x0, [x20]
    9900:	cbz	x0, 990c <PySequence_Fast@plt+0x56cc>
    9904:	mov	x20, x25
    9908:	b	9954 <PySequence_Fast@plt+0x5714>
    990c:	mov	x0, x20
    9910:	bl	3d70 <_Py_Dealloc@plt>
    9914:	mov	x20, x25
    9918:	b	9954 <PySequence_Fast@plt+0x5714>
    991c:	ldr	x0, [x20]
    9920:	sub	x0, x0, #0x1
    9924:	str	x0, [x20]
    9928:	cbnz	x0, 982c <PySequence_Fast@plt+0x55ec>
    992c:	mov	x0, x20
    9930:	bl	3d70 <_Py_Dealloc@plt>
    9934:	b	982c <PySequence_Fast@plt+0x55ec>
    9938:	mov	x0, x20
    993c:	bl	3d70 <_Py_Dealloc@plt>
    9940:	b	98b8 <PySequence_Fast@plt+0x5678>
    9944:	mov	x0, x25
    9948:	bl	3d70 <_Py_Dealloc@plt>
    994c:	b	98dc <PySequence_Fast@plt+0x569c>
    9950:	mov	x20, #0x0                   	// #0
    9954:	mov	x0, x20
    9958:	ldp	x19, x20, [sp, #16]
    995c:	ldp	x21, x22, [sp, #32]
    9960:	ldp	x23, x24, [sp, #48]
    9964:	ldr	x25, [sp, #64]
    9968:	ldp	x29, x30, [sp], #80
    996c:	ret
    9970:	mov	x20, x25
    9974:	b	9954 <PySequence_Fast@plt+0x5714>
    9978:	ldr	x0, [x20]
    997c:	sub	x0, x0, #0x1
    9980:	str	x0, [x20]
    9984:	cbz	x0, 9878 <PySequence_Fast@plt+0x5638>
    9988:	bl	3d80 <PyErr_NoMemory@plt>
    998c:	mov	x20, #0x0                   	// #0
    9990:	b	9954 <PySequence_Fast@plt+0x5714>
    9994:	stp	x29, x30, [sp, #-48]!
    9998:	mov	x29, sp
    999c:	stp	x19, x20, [sp, #16]
    99a0:	str	x21, [sp, #32]
    99a4:	mov	x20, x0
    99a8:	ldr	x21, [x0, #24]
    99ac:	str	xzr, [x0, #24]
    99b0:	bl	4220 <PyObject_GC_UnTrack@plt>
    99b4:	sub	x19, x21, #0x1
    99b8:	cbnz	x21, 9a1c <PySequence_Fast@plt+0x57dc>
    99bc:	ldr	x0, [x20, #16]
    99c0:	bl	3cd0 <PyMem_Free@plt>
    99c4:	ldr	x0, [x20, #48]
    99c8:	cbz	x0, 99dc <PySequence_Fast@plt+0x579c>
    99cc:	ldr	x1, [x0]
    99d0:	sub	x1, x1, #0x1
    99d4:	str	x1, [x0]
    99d8:	cbz	x1, 9a40 <PySequence_Fast@plt+0x5800>
    99dc:	ldr	x0, [x20, #40]
    99e0:	cbz	x0, 99f4 <PySequence_Fast@plt+0x57b4>
    99e4:	ldr	x1, [x0]
    99e8:	sub	x1, x1, #0x1
    99ec:	str	x1, [x0]
    99f0:	cbz	x1, 9a48 <PySequence_Fast@plt+0x5808>
    99f4:	mov	x0, x20
    99f8:	bl	3da0 <PyObject_GC_Del@plt>
    99fc:	ldp	x19, x20, [sp, #16]
    9a00:	ldr	x21, [sp, #32]
    9a04:	ldp	x29, x30, [sp], #48
    9a08:	ret
    9a0c:	bl	3d70 <_Py_Dealloc@plt>
    9a10:	sub	x19, x19, #0x1
    9a14:	cmn	x19, #0x1
    9a18:	b.eq	99bc <PySequence_Fast@plt+0x577c>  // b.none
    9a1c:	ldr	x1, [x20, #16]
    9a20:	lsl	x0, x19, #4
    9a24:	ldr	x0, [x1, x0]
    9a28:	cbz	x0, 9a10 <PySequence_Fast@plt+0x57d0>
    9a2c:	ldr	x1, [x0]
    9a30:	sub	x1, x1, #0x1
    9a34:	str	x1, [x0]
    9a38:	cbnz	x1, 9a10 <PySequence_Fast@plt+0x57d0>
    9a3c:	b	9a0c <PySequence_Fast@plt+0x57cc>
    9a40:	bl	3d70 <_Py_Dealloc@plt>
    9a44:	b	99dc <PySequence_Fast@plt+0x579c>
    9a48:	bl	3d70 <_Py_Dealloc@plt>
    9a4c:	b	99f4 <PySequence_Fast@plt+0x57b4>
    9a50:	stp	x29, x30, [sp, #-48]!
    9a54:	mov	x29, sp
    9a58:	stp	x19, x20, [sp, #16]
    9a5c:	stp	x21, x22, [sp, #32]
    9a60:	mov	x19, x1
    9a64:	cmp	x2, #0x2
    9a68:	b.eq	9a88 <PySequence_Fast@plt+0x5848>  // b.none
    9a6c:	mov	x1, x2
    9a70:	mov	x3, #0x2                   	// #2
    9a74:	mov	x2, x3
    9a78:	adrp	x0, d000 <PyInit__elementtree@@Base+0x6c8>
    9a7c:	add	x0, x0, #0x110
    9a80:	bl	3f60 <_PyArg_CheckPositional@plt>
    9a84:	cbz	w0, 9c40 <PySequence_Fast@plt+0x5a00>
    9a88:	ldr	x20, [x19]
    9a8c:	ldr	x21, [x19, #8]
    9a90:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x136c8>
    9a94:	add	x0, x0, #0x9b8
    9a98:	add	x0, x0, #0x80
    9a9c:	bl	3fc0 <PyState_FindModule@plt>
    9aa0:	bl	3e10 <PyModule_GetState@plt>
    9aa4:	mov	x19, x0
    9aa8:	mov	x0, x20
    9aac:	bl	4090 <PyCallable_Check@plt>
    9ab0:	cmp	w0, #0x0
    9ab4:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    9ab8:	ldr	x0, [x0, #3976]
    9abc:	ccmp	x20, x0, #0x4, eq  // eq = none
    9ac0:	b.ne	9b98 <PySequence_Fast@plt+0x5958>  // b.any
    9ac4:	mov	x0, x21
    9ac8:	bl	4090 <PyCallable_Check@plt>
    9acc:	cmp	w0, #0x0
    9ad0:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    9ad4:	ldr	x0, [x0, #3976]
    9ad8:	ccmp	x21, x0, #0x4, eq  // eq = none
    9adc:	b.ne	9bc0 <PySequence_Fast@plt+0x5980>  // b.any
    9ae0:	ldr	x1, [x19, #24]
    9ae4:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    9ae8:	ldr	x0, [x0, #3976]
    9aec:	cmp	x1, #0x0
    9af0:	csel	x1, x0, x1, eq  // eq = none
    9af4:	ldr	x2, [x19, #32]
    9af8:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    9afc:	ldr	x0, [x0, #3976]
    9b00:	cmp	x2, #0x0
    9b04:	csel	x2, x0, x2, eq  // eq = none
    9b08:	mov	x0, #0x2                   	// #2
    9b0c:	bl	4210 <PyTuple_Pack@plt>
    9b10:	mov	x22, x0
    9b14:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    9b18:	ldr	x0, [x0, #3976]
    9b1c:	cmp	x20, x0
    9b20:	b.eq	9be8 <PySequence_Fast@plt+0x59a8>  // b.none
    9b24:	ldr	x0, [x20]
    9b28:	add	x0, x0, #0x1
    9b2c:	str	x0, [x20]
    9b30:	ldr	x0, [x19, #24]
    9b34:	str	x20, [x19, #24]
    9b38:	cbz	x0, 9b4c <PySequence_Fast@plt+0x590c>
    9b3c:	ldr	x1, [x0]
    9b40:	sub	x1, x1, #0x1
    9b44:	str	x1, [x0]
    9b48:	cbz	x1, 9c0c <PySequence_Fast@plt+0x59cc>
    9b4c:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    9b50:	ldr	x0, [x0, #3976]
    9b54:	cmp	x21, x0
    9b58:	b.eq	9c14 <PySequence_Fast@plt+0x59d4>  // b.none
    9b5c:	ldr	x0, [x21]
    9b60:	add	x0, x0, #0x1
    9b64:	str	x0, [x21]
    9b68:	ldr	x0, [x19, #32]
    9b6c:	str	x21, [x19, #32]
    9b70:	cbz	x0, 9b84 <PySequence_Fast@plt+0x5944>
    9b74:	ldr	x1, [x0]
    9b78:	sub	x1, x1, #0x1
    9b7c:	str	x1, [x0]
    9b80:	cbz	x1, 9c38 <PySequence_Fast@plt+0x59f8>
    9b84:	mov	x0, x22
    9b88:	ldp	x19, x20, [sp, #16]
    9b8c:	ldp	x21, x22, [sp, #32]
    9b90:	ldp	x29, x30, [sp], #48
    9b94:	ret
    9b98:	ldr	x0, [x20, #8]
    9b9c:	ldr	x2, [x0, #24]
    9ba0:	adrp	x1, d000 <PyInit__elementtree@@Base+0x6c8>
    9ba4:	add	x1, x1, #0x120
    9ba8:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    9bac:	ldr	x0, [x0, #3944]
    9bb0:	ldr	x0, [x0]
    9bb4:	bl	4180 <PyErr_Format@plt>
    9bb8:	mov	x22, #0x0                   	// #0
    9bbc:	b	9b84 <PySequence_Fast@plt+0x5944>
    9bc0:	ldr	x0, [x21, #8]
    9bc4:	ldr	x2, [x0, #24]
    9bc8:	adrp	x1, d000 <PyInit__elementtree@@Base+0x6c8>
    9bcc:	add	x1, x1, #0x150
    9bd0:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    9bd4:	ldr	x0, [x0, #3944]
    9bd8:	ldr	x0, [x0]
    9bdc:	bl	4180 <PyErr_Format@plt>
    9be0:	mov	x22, #0x0                   	// #0
    9be4:	b	9b84 <PySequence_Fast@plt+0x5944>
    9be8:	ldr	x0, [x19, #24]
    9bec:	cbz	x0, 9b4c <PySequence_Fast@plt+0x590c>
    9bf0:	str	xzr, [x19, #24]
    9bf4:	ldr	x1, [x0]
    9bf8:	sub	x1, x1, #0x1
    9bfc:	str	x1, [x0]
    9c00:	cbnz	x1, 9b4c <PySequence_Fast@plt+0x590c>
    9c04:	bl	3d70 <_Py_Dealloc@plt>
    9c08:	b	9b4c <PySequence_Fast@plt+0x590c>
    9c0c:	bl	3d70 <_Py_Dealloc@plt>
    9c10:	b	9b4c <PySequence_Fast@plt+0x590c>
    9c14:	ldr	x0, [x19, #32]
    9c18:	cbz	x0, 9b84 <PySequence_Fast@plt+0x5944>
    9c1c:	str	xzr, [x19, #32]
    9c20:	ldr	x1, [x0]
    9c24:	sub	x1, x1, #0x1
    9c28:	str	x1, [x0]
    9c2c:	cbnz	x1, 9b84 <PySequence_Fast@plt+0x5944>
    9c30:	bl	3d70 <_Py_Dealloc@plt>
    9c34:	b	9b84 <PySequence_Fast@plt+0x5944>
    9c38:	bl	3d70 <_Py_Dealloc@plt>
    9c3c:	b	9b84 <PySequence_Fast@plt+0x5944>
    9c40:	mov	x22, #0x0                   	// #0
    9c44:	b	9b84 <PySequence_Fast@plt+0x5944>
    9c48:	cbz	x1, 9d20 <PySequence_Fast@plt+0x5ae0>
    9c4c:	stp	x29, x30, [sp, #-48]!
    9c50:	mov	x29, sp
    9c54:	str	x19, [sp, #16]
    9c58:	mov	x19, x0
    9c5c:	mov	x0, #0x2                   	// #2
    9c60:	bl	4210 <PyTuple_Pack@plt>
    9c64:	str	x0, [sp, #40]
    9c68:	cbz	x0, 9d18 <PySequence_Fast@plt+0x5ad8>
    9c6c:	ldr	x19, [x19, #96]
    9c70:	ldr	x0, [x19, #8]
    9c74:	ldr	x1, [x0, #56]
    9c78:	ldr	x0, [x0, #168]
    9c7c:	tbz	w0, #11, 9ce8 <PySequence_Fast@plt+0x5aa8>
    9c80:	ldr	x4, [x19, x1]
    9c84:	cbz	x4, 9ce8 <PySequence_Fast@plt+0x5aa8>
    9c88:	mov	x3, #0x0                   	// #0
    9c8c:	mov	x2, #0x1                   	// #1
    9c90:	add	x1, sp, #0x28
    9c94:	mov	x0, x19
    9c98:	blr	x4
    9c9c:	mov	x2, #0x0                   	// #0
    9ca0:	mov	x1, x0
    9ca4:	mov	x0, x19
    9ca8:	bl	4020 <_Py_CheckFunctionResult@plt>
    9cac:	mov	x19, x0
    9cb0:	ldr	x0, [sp, #40]
    9cb4:	ldr	x1, [x0]
    9cb8:	sub	x1, x1, #0x1
    9cbc:	str	x1, [x0]
    9cc0:	cbz	x1, 9d04 <PySequence_Fast@plt+0x5ac4>
    9cc4:	cbz	x19, 9d18 <PySequence_Fast@plt+0x5ad8>
    9cc8:	ldr	x0, [x19]
    9ccc:	sub	x0, x0, #0x1
    9cd0:	str	x0, [x19]
    9cd4:	cbz	x0, 9d0c <PySequence_Fast@plt+0x5acc>
    9cd8:	mov	w0, #0x0                   	// #0
    9cdc:	ldr	x19, [sp, #16]
    9ce0:	ldp	x29, x30, [sp], #48
    9ce4:	ret
    9ce8:	mov	x3, #0x0                   	// #0
    9cec:	mov	x2, #0x1                   	// #1
    9cf0:	add	x1, sp, #0x28
    9cf4:	mov	x0, x19
    9cf8:	bl	41d0 <_PyObject_MakeTpCall@plt>
    9cfc:	mov	x19, x0
    9d00:	b	9cb0 <PySequence_Fast@plt+0x5a70>
    9d04:	bl	3d70 <_Py_Dealloc@plt>
    9d08:	b	9cc4 <PySequence_Fast@plt+0x5a84>
    9d0c:	mov	x0, x19
    9d10:	bl	3d70 <_Py_Dealloc@plt>
    9d14:	b	9cd8 <PySequence_Fast@plt+0x5a98>
    9d18:	mov	w0, #0xffffffff            	// #-1
    9d1c:	b	9cdc <PySequence_Fast@plt+0x5a9c>
    9d20:	mov	w0, #0x0                   	// #0
    9d24:	ret
    9d28:	stp	x29, x30, [sp, #-64]!
    9d2c:	mov	x29, sp
    9d30:	stp	x19, x20, [sp, #16]
    9d34:	stp	x21, x22, [sp, #32]
    9d38:	mov	x19, x0
    9d3c:	mov	x21, x1
    9d40:	mov	x20, x2
    9d44:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x136c8>
    9d48:	add	x0, x0, #0x9b8
    9d4c:	add	x0, x0, #0x80
    9d50:	bl	3fc0 <PyState_FindModule@plt>
    9d54:	bl	3e10 <PyModule_GetState@plt>
    9d58:	mov	x22, x0
    9d5c:	mov	x0, x19
    9d60:	bl	5814 <PySequence_Fast@plt+0x15d4>
    9d64:	tbnz	w0, #31, 9f60 <PySequence_Fast@plt+0x5d20>
    9d68:	ldr	x0, [x19, #72]
    9d6c:	cbz	x0, 9e70 <PySequence_Fast@plt+0x5c30>
    9d70:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    9d74:	ldr	x1, [x1, #3976]
    9d78:	cmp	x20, x1
    9d7c:	b.eq	9e84 <PySequence_Fast@plt+0x5c44>  // b.none
    9d80:	mov	x3, #0x0                   	// #0
    9d84:	mov	x2, x20
    9d88:	mov	x1, x21
    9d8c:	bl	3fd0 <PyObject_CallFunctionObjArgs@plt>
    9d90:	mov	x20, x0
    9d94:	cbz	x20, 9f1c <PySequence_Fast@plt+0x5cdc>
    9d98:	ldr	x21, [x19, #24]
    9d9c:	ldr	x0, [x19, #40]
    9da0:	cbz	x0, 9db8 <PySequence_Fast@plt+0x5b78>
    9da4:	str	xzr, [x19, #40]
    9da8:	ldr	x1, [x0]
    9dac:	sub	x1, x1, #0x1
    9db0:	str	x1, [x0]
    9db4:	cbz	x1, 9ed4 <PySequence_Fast@plt+0x5c94>
    9db8:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    9dbc:	ldr	x0, [x0, #3976]
    9dc0:	cmp	x21, x0
    9dc4:	b.eq	9edc <PySequence_Fast@plt+0x5c9c>  // b.none
    9dc8:	mov	x1, x20
    9dcc:	mov	x0, x21
    9dd0:	bl	5878 <PySequence_Fast@plt+0x1638>
    9dd4:	tbnz	w0, #31, 9f08 <PySequence_Fast@plt+0x5cc8>
    9dd8:	ldr	x1, [x19, #64]
    9ddc:	ldr	x0, [x19, #56]
    9de0:	ldr	x2, [x0, #16]
    9de4:	cmp	x1, x2
    9de8:	b.ge	9f30 <PySequence_Fast@plt+0x5cf0>  // b.tcont
    9dec:	mov	x2, x21
    9df0:	bl	3fb0 <PyList_SetItem@plt>
    9df4:	tbnz	w0, #31, 9f08 <PySequence_Fast@plt+0x5cc8>
    9df8:	ldr	x0, [x21]
    9dfc:	add	x0, x0, #0x1
    9e00:	str	x0, [x21]
    9e04:	ldr	x0, [x19, #64]
    9e08:	add	x0, x0, #0x1
    9e0c:	str	x0, [x19, #64]
    9e10:	ldr	x0, [x20]
    9e14:	add	x0, x0, #0x1
    9e18:	str	x0, [x20]
    9e1c:	ldr	x0, [x19, #24]
    9e20:	str	x20, [x19, #24]
    9e24:	ldr	x1, [x0]
    9e28:	sub	x1, x1, #0x1
    9e2c:	str	x1, [x0]
    9e30:	cbz	x1, 9f40 <PySequence_Fast@plt+0x5d00>
    9e34:	ldr	x0, [x20]
    9e38:	add	x0, x0, #0x1
    9e3c:	str	x0, [x20]
    9e40:	ldr	x0, [x19, #32]
    9e44:	str	x20, [x19, #32]
    9e48:	ldr	x1, [x0]
    9e4c:	sub	x1, x1, #0x1
    9e50:	str	x1, [x0]
    9e54:	cbz	x1, 9f48 <PySequence_Fast@plt+0x5d08>
    9e58:	mov	x2, x20
    9e5c:	ldr	x1, [x19, #104]
    9e60:	mov	x0, x19
    9e64:	bl	9c48 <PySequence_Fast@plt+0x5a08>
    9e68:	tbz	w0, #31, 9f1c <PySequence_Fast@plt+0x5cdc>
    9e6c:	b	9f08 <PySequence_Fast@plt+0x5cc8>
    9e70:	mov	x1, x20
    9e74:	mov	x0, x21
    9e78:	bl	58f4 <PySequence_Fast@plt+0x16b4>
    9e7c:	mov	x20, x0
    9e80:	b	9d94 <PySequence_Fast@plt+0x5b54>
    9e84:	str	x23, [sp, #48]
    9e88:	bl	4080 <PyDict_New@plt>
    9e8c:	mov	x23, x0
    9e90:	cbz	x0, 9f68 <PySequence_Fast@plt+0x5d28>
    9e94:	mov	x3, #0x0                   	// #0
    9e98:	mov	x2, x0
    9e9c:	mov	x1, x21
    9ea0:	ldr	x0, [x19, #72]
    9ea4:	bl	3fd0 <PyObject_CallFunctionObjArgs@plt>
    9ea8:	mov	x20, x0
    9eac:	ldr	x0, [x23]
    9eb0:	sub	x0, x0, #0x1
    9eb4:	str	x0, [x23]
    9eb8:	cbz	x0, 9ec4 <PySequence_Fast@plt+0x5c84>
    9ebc:	ldr	x23, [sp, #48]
    9ec0:	b	9d94 <PySequence_Fast@plt+0x5b54>
    9ec4:	mov	x0, x23
    9ec8:	bl	3d70 <_Py_Dealloc@plt>
    9ecc:	ldr	x23, [sp, #48]
    9ed0:	b	9d94 <PySequence_Fast@plt+0x5b54>
    9ed4:	bl	3d70 <_Py_Dealloc@plt>
    9ed8:	b	9db8 <PySequence_Fast@plt+0x5b78>
    9edc:	ldr	x0, [x19, #16]
    9ee0:	cbnz	x0, 9ef8 <PySequence_Fast@plt+0x5cb8>
    9ee4:	ldr	x0, [x20]
    9ee8:	add	x0, x0, #0x1
    9eec:	str	x0, [x20]
    9ef0:	str	x20, [x19, #16]
    9ef4:	b	9dd8 <PySequence_Fast@plt+0x5b98>
    9ef8:	adrp	x1, d000 <PyInit__elementtree@@Base+0x6c8>
    9efc:	add	x1, x1, #0x178
    9f00:	ldr	x0, [x22]
    9f04:	bl	3de0 <PyErr_SetString@plt>
    9f08:	ldr	x0, [x20]
    9f0c:	sub	x0, x0, #0x1
    9f10:	str	x0, [x20]
    9f14:	cbz	x0, 9f50 <PySequence_Fast@plt+0x5d10>
    9f18:	mov	x20, #0x0                   	// #0
    9f1c:	mov	x0, x20
    9f20:	ldp	x19, x20, [sp, #16]
    9f24:	ldp	x21, x22, [sp, #32]
    9f28:	ldp	x29, x30, [sp], #64
    9f2c:	ret
    9f30:	mov	x1, x21
    9f34:	bl	3f00 <PyList_Append@plt>
    9f38:	tbz	w0, #31, 9e04 <PySequence_Fast@plt+0x5bc4>
    9f3c:	b	9f08 <PySequence_Fast@plt+0x5cc8>
    9f40:	bl	3d70 <_Py_Dealloc@plt>
    9f44:	b	9e34 <PySequence_Fast@plt+0x5bf4>
    9f48:	bl	3d70 <_Py_Dealloc@plt>
    9f4c:	b	9e58 <PySequence_Fast@plt+0x5c18>
    9f50:	mov	x0, x20
    9f54:	bl	3d70 <_Py_Dealloc@plt>
    9f58:	mov	x20, #0x0                   	// #0
    9f5c:	b	9f1c <PySequence_Fast@plt+0x5cdc>
    9f60:	mov	x20, #0x0                   	// #0
    9f64:	b	9f1c <PySequence_Fast@plt+0x5cdc>
    9f68:	mov	x20, x0
    9f6c:	ldr	x23, [sp, #48]
    9f70:	b	9f1c <PySequence_Fast@plt+0x5cdc>
    9f74:	stp	x29, x30, [sp, #-48]!
    9f78:	mov	x29, sp
    9f7c:	stp	x19, x20, [sp, #16]
    9f80:	str	x21, [sp, #32]
    9f84:	mov	x21, x0
    9f88:	mov	x20, x1
    9f8c:	mov	x19, x2
    9f90:	sub	x1, x2, #0x1
    9f94:	cmp	x1, #0x1
    9f98:	b.hi	9fc4 <PySequence_Fast@plt+0x5d84>  // b.pmore
    9f9c:	ldr	x1, [x20]
    9fa0:	cmp	x19, #0x1
    9fa4:	b.le	9fe8 <PySequence_Fast@plt+0x5da8>
    9fa8:	ldr	x2, [x20, #8]
    9fac:	mov	x0, x21
    9fb0:	bl	9d28 <PySequence_Fast@plt+0x5ae8>
    9fb4:	ldp	x19, x20, [sp, #16]
    9fb8:	ldr	x21, [sp, #32]
    9fbc:	ldp	x29, x30, [sp], #48
    9fc0:	ret
    9fc4:	mov	x3, #0x2                   	// #2
    9fc8:	mov	x2, #0x1                   	// #1
    9fcc:	mov	x1, x19
    9fd0:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    9fd4:	add	x0, x0, #0xe18
    9fd8:	bl	3f60 <_PyArg_CheckPositional@plt>
    9fdc:	cbnz	w0, 9f9c <PySequence_Fast@plt+0x5d5c>
    9fe0:	mov	x0, #0x0                   	// #0
    9fe4:	b	9fb4 <PySequence_Fast@plt+0x5d74>
    9fe8:	adrp	x2, 1f000 <PyInit__elementtree@@Base+0x126c8>
    9fec:	ldr	x2, [x2, #3976]
    9ff0:	b	9fac <PySequence_Fast@plt+0x5d6c>
    9ff4:	stp	x29, x30, [sp, #-80]!
    9ff8:	mov	x29, sp
    9ffc:	stp	x19, x20, [sp, #16]
    a000:	stp	x21, x22, [sp, #32]
    a004:	mov	x22, x0
    a008:	mov	x20, x1
    a00c:	mov	x19, x2
    a010:	bl	3f80 <PyErr_Occurred@plt>
    a014:	cbz	x0, a028 <PySequence_Fast@plt+0x5de8>
    a018:	ldp	x19, x20, [sp, #16]
    a01c:	ldp	x21, x22, [sp, #32]
    a020:	ldp	x29, x30, [sp], #80
    a024:	ret
    a028:	stp	x25, x26, [sp, #64]
    a02c:	mov	x1, x20
    a030:	mov	x0, x22
    a034:	bl	531c <PySequence_Fast@plt+0x10dc>
    a038:	mov	x25, x0
    a03c:	cbz	x0, a348 <PySequence_Fast@plt+0x6108>
    a040:	stp	x23, x24, [sp, #48]
    a044:	ldr	x0, [x19]
    a048:	cbz	x0, a20c <PySequence_Fast@plt+0x5fcc>
    a04c:	bl	4080 <PyDict_New@plt>
    a050:	mov	x24, x0
    a054:	cbz	x0, a06c <PySequence_Fast@plt+0x5e2c>
    a058:	ldr	x1, [x19]
    a05c:	adrp	x26, c000 <PySequence_Fast@plt+0x7dc0>
    a060:	add	x26, x26, #0xca0
    a064:	cbnz	x1, a148 <PySequence_Fast@plt+0x5f08>
    a068:	b	a220 <PySequence_Fast@plt+0x5fe0>
    a06c:	ldr	x0, [x25]
    a070:	sub	x0, x0, #0x1
    a074:	str	x0, [x25]
    a078:	cbz	x0, a088 <PySequence_Fast@plt+0x5e48>
    a07c:	ldp	x23, x24, [sp, #48]
    a080:	ldp	x25, x26, [sp, #64]
    a084:	b	a018 <PySequence_Fast@plt+0x5dd8>
    a088:	mov	x0, x25
    a08c:	bl	3d70 <_Py_Dealloc@plt>
    a090:	ldp	x23, x24, [sp, #48]
    a094:	ldp	x25, x26, [sp, #64]
    a098:	b	a018 <PySequence_Fast@plt+0x5dd8>
    a09c:	cbz	x0, a0b0 <PySequence_Fast@plt+0x5e70>
    a0a0:	ldr	x0, [x0]
    a0a4:	sub	x0, x0, #0x1
    a0a8:	str	x0, [x21]
    a0ac:	cbz	x0, a0f0 <PySequence_Fast@plt+0x5eb0>
    a0b0:	cbz	x20, a0c4 <PySequence_Fast@plt+0x5e84>
    a0b4:	ldr	x0, [x20]
    a0b8:	sub	x0, x0, #0x1
    a0bc:	str	x0, [x20]
    a0c0:	cbz	x0, a0fc <PySequence_Fast@plt+0x5ebc>
    a0c4:	ldr	x0, [x24]
    a0c8:	sub	x0, x0, #0x1
    a0cc:	str	x0, [x24]
    a0d0:	cbz	x0, a108 <PySequence_Fast@plt+0x5ec8>
    a0d4:	ldr	x0, [x25]
    a0d8:	sub	x0, x0, #0x1
    a0dc:	str	x0, [x25]
    a0e0:	cbz	x0, a114 <PySequence_Fast@plt+0x5ed4>
    a0e4:	ldp	x23, x24, [sp, #48]
    a0e8:	ldp	x25, x26, [sp, #64]
    a0ec:	b	a018 <PySequence_Fast@plt+0x5dd8>
    a0f0:	mov	x0, x21
    a0f4:	bl	3d70 <_Py_Dealloc@plt>
    a0f8:	b	a0b0 <PySequence_Fast@plt+0x5e70>
    a0fc:	mov	x0, x20
    a100:	bl	3d70 <_Py_Dealloc@plt>
    a104:	b	a0c4 <PySequence_Fast@plt+0x5e84>
    a108:	mov	x0, x24
    a10c:	bl	3d70 <_Py_Dealloc@plt>
    a110:	b	a0d4 <PySequence_Fast@plt+0x5e94>
    a114:	mov	x0, x25
    a118:	bl	3d70 <_Py_Dealloc@plt>
    a11c:	ldp	x23, x24, [sp, #48]
    a120:	ldp	x25, x26, [sp, #64]
    a124:	b	a018 <PySequence_Fast@plt+0x5dd8>
    a128:	mov	x0, x21
    a12c:	bl	3d70 <_Py_Dealloc@plt>
    a130:	b	a1ac <PySequence_Fast@plt+0x5f6c>
    a134:	mov	x0, x20
    a138:	bl	3d70 <_Py_Dealloc@plt>
    a13c:	tbnz	w23, #31, a1c0 <PySequence_Fast@plt+0x5f80>
    a140:	ldr	x1, [x19, #16]!
    a144:	cbz	x1, a220 <PySequence_Fast@plt+0x5fe0>
    a148:	ldr	x0, [x19, #8]
    a14c:	cbz	x0, a220 <PySequence_Fast@plt+0x5fe0>
    a150:	mov	x0, x22
    a154:	bl	531c <PySequence_Fast@plt+0x10dc>
    a158:	mov	x20, x0
    a15c:	ldr	x21, [x19, #8]
    a160:	mov	x0, x21
    a164:	bl	3c70 <strlen@plt>
    a168:	mov	x2, x26
    a16c:	mov	x1, x0
    a170:	mov	x0, x21
    a174:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    a178:	mov	x21, x0
    a17c:	cmp	x20, #0x0
    a180:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    a184:	b.eq	a09c <PySequence_Fast@plt+0x5e5c>  // b.none
    a188:	mov	x2, x0
    a18c:	mov	x1, x20
    a190:	mov	x0, x24
    a194:	bl	4140 <PyDict_SetItem@plt>
    a198:	mov	w23, w0
    a19c:	ldr	x0, [x21]
    a1a0:	sub	x0, x0, #0x1
    a1a4:	str	x0, [x21]
    a1a8:	cbz	x0, a128 <PySequence_Fast@plt+0x5ee8>
    a1ac:	ldr	x1, [x20]
    a1b0:	sub	x1, x1, #0x1
    a1b4:	str	x1, [x20]
    a1b8:	cbnz	x1, a13c <PySequence_Fast@plt+0x5efc>
    a1bc:	b	a134 <PySequence_Fast@plt+0x5ef4>
    a1c0:	ldr	x0, [x24]
    a1c4:	sub	x0, x0, #0x1
    a1c8:	str	x0, [x24]
    a1cc:	cbz	x0, a1ec <PySequence_Fast@plt+0x5fac>
    a1d0:	ldr	x0, [x25]
    a1d4:	sub	x0, x0, #0x1
    a1d8:	str	x0, [x25]
    a1dc:	cbz	x0, a1f8 <PySequence_Fast@plt+0x5fb8>
    a1e0:	ldp	x23, x24, [sp, #48]
    a1e4:	ldp	x25, x26, [sp, #64]
    a1e8:	b	a018 <PySequence_Fast@plt+0x5dd8>
    a1ec:	mov	x0, x24
    a1f0:	bl	3d70 <_Py_Dealloc@plt>
    a1f4:	b	a1d0 <PySequence_Fast@plt+0x5f90>
    a1f8:	mov	x0, x25
    a1fc:	bl	3d70 <_Py_Dealloc@plt>
    a200:	ldp	x23, x24, [sp, #48]
    a204:	ldp	x25, x26, [sp, #64]
    a208:	b	a018 <PySequence_Fast@plt+0x5dd8>
    a20c:	adrp	x24, 1f000 <PyInit__elementtree@@Base+0x126c8>
    a210:	ldr	x24, [x24, #3976]
    a214:	ldr	x0, [x24]
    a218:	add	x0, x0, #0x1
    a21c:	str	x0, [x24]
    a220:	ldr	x0, [x22, #24]
    a224:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x136c8>
    a228:	add	x1, x1, #0x320
    a22c:	ldr	x2, [x0, #8]
    a230:	add	x1, x1, #0x1b8
    a234:	cmp	x2, x1
    a238:	b.eq	a2ac <PySequence_Fast@plt+0x606c>  // b.none
    a23c:	ldr	x19, [x22, #64]
    a240:	cbz	x19, a26c <PySequence_Fast@plt+0x602c>
    a244:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    a248:	ldr	x0, [x0, #3976]
    a24c:	cmp	x24, x0
    a250:	b.eq	a2c0 <PySequence_Fast@plt+0x6080>  // b.none
    a254:	mov	x3, #0x0                   	// #0
    a258:	mov	x2, x24
    a25c:	mov	x1, x25
    a260:	ldr	x0, [x22, #64]
    a264:	bl	3fd0 <PyObject_CallFunctionObjArgs@plt>
    a268:	mov	x19, x0
    a26c:	ldr	x0, [x25]
    a270:	sub	x0, x0, #0x1
    a274:	str	x0, [x25]
    a278:	cbz	x0, a31c <PySequence_Fast@plt+0x60dc>
    a27c:	ldr	x0, [x24]
    a280:	sub	x0, x0, #0x1
    a284:	str	x0, [x24]
    a288:	cbz	x0, a328 <PySequence_Fast@plt+0x60e8>
    a28c:	cbz	x19, a350 <PySequence_Fast@plt+0x6110>
    a290:	ldr	x0, [x19]
    a294:	sub	x0, x0, #0x1
    a298:	str	x0, [x19]
    a29c:	cbz	x0, a334 <PySequence_Fast@plt+0x60f4>
    a2a0:	ldp	x23, x24, [sp, #48]
    a2a4:	ldp	x25, x26, [sp, #64]
    a2a8:	b	a018 <PySequence_Fast@plt+0x5dd8>
    a2ac:	mov	x2, x24
    a2b0:	mov	x1, x25
    a2b4:	bl	9d28 <PySequence_Fast@plt+0x5ae8>
    a2b8:	mov	x19, x0
    a2bc:	b	a26c <PySequence_Fast@plt+0x602c>
    a2c0:	mov	x1, x0
    a2c4:	ldr	x0, [x0]
    a2c8:	sub	x0, x0, #0x1
    a2cc:	str	x0, [x1]
    a2d0:	cbz	x0, a2fc <PySequence_Fast@plt+0x60bc>
    a2d4:	bl	4080 <PyDict_New@plt>
    a2d8:	mov	x24, x0
    a2dc:	cbnz	x0, a254 <PySequence_Fast@plt+0x6014>
    a2e0:	ldr	x0, [x25]
    a2e4:	sub	x0, x0, #0x1
    a2e8:	str	x0, [x25]
    a2ec:	cbz	x0, a308 <PySequence_Fast@plt+0x60c8>
    a2f0:	ldp	x23, x24, [sp, #48]
    a2f4:	ldp	x25, x26, [sp, #64]
    a2f8:	b	a018 <PySequence_Fast@plt+0x5dd8>
    a2fc:	mov	x0, x1
    a300:	bl	3d70 <_Py_Dealloc@plt>
    a304:	b	a2d4 <PySequence_Fast@plt+0x6094>
    a308:	mov	x0, x25
    a30c:	bl	3d70 <_Py_Dealloc@plt>
    a310:	ldp	x23, x24, [sp, #48]
    a314:	ldp	x25, x26, [sp, #64]
    a318:	b	a018 <PySequence_Fast@plt+0x5dd8>
    a31c:	mov	x0, x25
    a320:	bl	3d70 <_Py_Dealloc@plt>
    a324:	b	a27c <PySequence_Fast@plt+0x603c>
    a328:	mov	x0, x24
    a32c:	bl	3d70 <_Py_Dealloc@plt>
    a330:	b	a28c <PySequence_Fast@plt+0x604c>
    a334:	mov	x0, x19
    a338:	bl	3d70 <_Py_Dealloc@plt>
    a33c:	ldp	x23, x24, [sp, #48]
    a340:	ldp	x25, x26, [sp, #64]
    a344:	b	a018 <PySequence_Fast@plt+0x5dd8>
    a348:	ldp	x25, x26, [sp, #64]
    a34c:	b	a018 <PySequence_Fast@plt+0x5dd8>
    a350:	ldp	x23, x24, [sp, #48]
    a354:	ldp	x25, x26, [sp, #64]
    a358:	b	a018 <PySequence_Fast@plt+0x5dd8>
    a35c:	stp	x29, x30, [sp, #-32]!
    a360:	mov	x29, sp
    a364:	stp	x19, x20, [sp, #16]
    a368:	mov	x19, x0
    a36c:	bl	5814 <PySequence_Fast@plt+0x15d4>
    a370:	tbnz	w0, #31, a454 <PySequence_Fast@plt+0x6214>
    a374:	ldr	x0, [x19, #64]
    a378:	cbz	x0, a420 <PySequence_Fast@plt+0x61e0>
    a37c:	ldr	x20, [x19, #32]
    a380:	ldr	x0, [x19, #24]
    a384:	str	x0, [x19, #32]
    a388:	ldr	x1, [x0]
    a38c:	add	x1, x1, #0x1
    a390:	str	x1, [x0]
    a394:	ldr	x0, [x19, #40]
    a398:	ldr	x1, [x19, #32]
    a39c:	str	x1, [x19, #40]
    a3a0:	cbz	x0, a3b4 <PySequence_Fast@plt+0x6174>
    a3a4:	ldr	x1, [x0]
    a3a8:	sub	x1, x1, #0x1
    a3ac:	str	x1, [x0]
    a3b0:	cbz	x1, a440 <PySequence_Fast@plt+0x6200>
    a3b4:	ldr	x0, [x19, #64]
    a3b8:	sub	x0, x0, #0x1
    a3bc:	str	x0, [x19, #64]
    a3c0:	ldr	x1, [x19, #56]
    a3c4:	ldr	x1, [x1, #24]
    a3c8:	ldr	x0, [x1, x0, lsl #3]
    a3cc:	str	x0, [x19, #24]
    a3d0:	ldr	x1, [x0]
    a3d4:	add	x1, x1, #0x1
    a3d8:	str	x1, [x0]
    a3dc:	ldr	x0, [x20]
    a3e0:	sub	x0, x0, #0x1
    a3e4:	str	x0, [x20]
    a3e8:	cbz	x0, a448 <PySequence_Fast@plt+0x6208>
    a3ec:	ldr	x2, [x19, #32]
    a3f0:	ldr	x1, [x19, #112]
    a3f4:	mov	x0, x19
    a3f8:	bl	9c48 <PySequence_Fast@plt+0x5a08>
    a3fc:	tbnz	w0, #31, a45c <PySequence_Fast@plt+0x621c>
    a400:	ldr	x1, [x19, #32]
    a404:	ldr	x0, [x1]
    a408:	add	x0, x0, #0x1
    a40c:	str	x0, [x1]
    a410:	ldr	x0, [x19, #32]
    a414:	ldp	x19, x20, [sp, #16]
    a418:	ldp	x29, x30, [sp], #32
    a41c:	ret
    a420:	adrp	x1, d000 <PyInit__elementtree@@Base+0x6c8>
    a424:	add	x1, x1, #0x198
    a428:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    a42c:	ldr	x0, [x0, #3984]
    a430:	ldr	x0, [x0]
    a434:	bl	3de0 <PyErr_SetString@plt>
    a438:	mov	x0, #0x0                   	// #0
    a43c:	b	a414 <PySequence_Fast@plt+0x61d4>
    a440:	bl	3d70 <_Py_Dealloc@plt>
    a444:	b	a3b4 <PySequence_Fast@plt+0x6174>
    a448:	mov	x0, x20
    a44c:	bl	3d70 <_Py_Dealloc@plt>
    a450:	b	a3ec <PySequence_Fast@plt+0x61ac>
    a454:	mov	x0, #0x0                   	// #0
    a458:	b	a414 <PySequence_Fast@plt+0x61d4>
    a45c:	mov	x0, #0x0                   	// #0
    a460:	b	a414 <PySequence_Fast@plt+0x61d4>
    a464:	stp	x29, x30, [sp, #-16]!
    a468:	mov	x29, sp
    a46c:	bl	a35c <PySequence_Fast@plt+0x611c>
    a470:	ldp	x29, x30, [sp], #16
    a474:	ret
    a478:	stp	x29, x30, [sp, #-128]!
    a47c:	mov	x29, sp
    a480:	stp	x19, x20, [sp, #16]
    a484:	mov	x19, x0
    a488:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    a48c:	ldr	x0, [x0, #3976]
    a490:	cmp	x19, x0
    a494:	b.eq	a560 <PySequence_Fast@plt+0x6320>  // b.none
    a498:	stp	x21, x22, [sp, #32]
    a49c:	mov	x21, x1
    a4a0:	ldr	x1, [x19, #8]
    a4a4:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    a4a8:	ldr	x0, [x0, #4032]
    a4ac:	cmp	x1, x0
    a4b0:	b.eq	a55c <PySequence_Fast@plt+0x631c>  // b.none
    a4b4:	ldr	x0, [x19]
    a4b8:	cmp	x0, #0x1
    a4bc:	b.ne	a4e0 <PySequence_Fast@plt+0x62a0>  // b.any
    a4c0:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    a4c4:	ldr	x0, [x0, #3992]
    a4c8:	cmp	x1, x0
    a4cc:	b.eq	a574 <PySequence_Fast@plt+0x6334>  // b.none
    a4d0:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x136c8>
    a4d4:	add	x0, x0, #0x320
    a4d8:	cmp	x1, x0
    a4dc:	b.eq	a5dc <PySequence_Fast@plt+0x639c>  // b.none
    a4e0:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x136c8>
    a4e4:	add	x0, x0, #0x9b8
    a4e8:	add	x0, x0, #0x80
    a4ec:	bl	3fc0 <PyState_FindModule@plt>
    a4f0:	bl	3e10 <PyModule_GetState@plt>
    a4f4:	ldr	x20, [x0, #8]
    a4f8:	cbz	x20, a600 <PySequence_Fast@plt+0x63c0>
    a4fc:	str	x19, [sp, #112]
    a500:	str	x21, [sp, #120]
    a504:	ldr	x19, [x0, #8]
    a508:	ldr	x0, [x19, #8]
    a50c:	ldr	x1, [x0, #56]
    a510:	ldr	x0, [x0, #168]
    a514:	tbz	w0, #11, a620 <PySequence_Fast@plt+0x63e0>
    a518:	ldr	x4, [x19, x1]
    a51c:	cbz	x4, a620 <PySequence_Fast@plt+0x63e0>
    a520:	mov	x3, #0x0                   	// #0
    a524:	mov	x2, #0x2                   	// #2
    a528:	add	x1, sp, #0x70
    a52c:	mov	x0, x19
    a530:	blr	x4
    a534:	mov	x2, #0x0                   	// #0
    a538:	mov	x1, x0
    a53c:	mov	x0, x19
    a540:	bl	4020 <_Py_CheckFunctionResult@plt>
    a544:	mov	x20, x0
    a548:	ldp	x21, x22, [sp, #32]
    a54c:	mov	x0, x20
    a550:	ldp	x19, x20, [sp, #16]
    a554:	ldp	x29, x30, [sp], #128
    a558:	ret
    a55c:	ldp	x21, x22, [sp, #32]
    a560:	ldr	x0, [x19]
    a564:	add	x0, x0, #0x1
    a568:	str	x0, [x19]
    a56c:	mov	x20, x19
    a570:	b	a54c <PySequence_Fast@plt+0x630c>
    a574:	stp	x23, x24, [sp, #48]
    a578:	str	x25, [sp, #64]
    a57c:	str	xzr, [sp, #104]
    a580:	add	x24, sp, #0x60
    a584:	add	x23, sp, #0x58
    a588:	add	x22, sp, #0x68
    a58c:	adrp	x20, 1f000 <PyInit__elementtree@@Base+0x126c8>
    a590:	ldr	x25, [x20, #4032]
    a594:	mov	x3, x24
    a598:	mov	x2, x23
    a59c:	mov	x1, x22
    a5a0:	mov	x0, x19
    a5a4:	bl	40b0 <PyDict_Next@plt>
    a5a8:	cbz	w0, a640 <PySequence_Fast@plt+0x6400>
    a5ac:	ldr	x0, [sp, #88]
    a5b0:	ldr	x0, [x0, #8]
    a5b4:	cmp	x0, x25
    a5b8:	b.ne	a5f4 <PySequence_Fast@plt+0x63b4>  // b.any
    a5bc:	ldr	x0, [x20, #4032]
    a5c0:	ldr	x1, [sp, #96]
    a5c4:	ldr	x1, [x1, #8]
    a5c8:	cmp	x1, x0
    a5cc:	b.eq	a594 <PySequence_Fast@plt+0x6354>  // b.none
    a5d0:	ldp	x23, x24, [sp, #48]
    a5d4:	ldr	x25, [sp, #64]
    a5d8:	b	a4e0 <PySequence_Fast@plt+0x62a0>
    a5dc:	mov	x1, x21
    a5e0:	mov	x0, x19
    a5e4:	bl	a65c <PySequence_Fast@plt+0x641c>
    a5e8:	mov	x20, x0
    a5ec:	ldp	x21, x22, [sp, #32]
    a5f0:	b	a54c <PySequence_Fast@plt+0x630c>
    a5f4:	ldp	x23, x24, [sp, #48]
    a5f8:	ldr	x25, [sp, #64]
    a5fc:	b	a4e0 <PySequence_Fast@plt+0x62a0>
    a600:	adrp	x1, d000 <PyInit__elementtree@@Base+0x6c8>
    a604:	add	x1, x1, #0x1b0
    a608:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    a60c:	ldr	x0, [x0, #3920]
    a610:	ldr	x0, [x0]
    a614:	bl	3de0 <PyErr_SetString@plt>
    a618:	ldp	x21, x22, [sp, #32]
    a61c:	b	a54c <PySequence_Fast@plt+0x630c>
    a620:	mov	x3, #0x0                   	// #0
    a624:	mov	x2, #0x2                   	// #2
    a628:	add	x1, sp, #0x70
    a62c:	mov	x0, x19
    a630:	bl	41d0 <_PyObject_MakeTpCall@plt>
    a634:	mov	x20, x0
    a638:	ldp	x21, x22, [sp, #32]
    a63c:	b	a54c <PySequence_Fast@plt+0x630c>
    a640:	mov	x0, x19
    a644:	bl	4150 <PyDict_Copy@plt>
    a648:	mov	x20, x0
    a64c:	ldp	x21, x22, [sp, #32]
    a650:	ldp	x23, x24, [sp, #48]
    a654:	ldr	x25, [sp, #64]
    a658:	b	a54c <PySequence_Fast@plt+0x630c>
    a65c:	stp	x29, x30, [sp, #-80]!
    a660:	mov	x29, sp
    a664:	stp	x19, x20, [sp, #16]
    a668:	stp	x21, x22, [sp, #32]
    a66c:	stp	x23, x24, [sp, #48]
    a670:	mov	x22, x0
    a674:	mov	x23, x1
    a678:	ldr	x0, [x0, #16]
    a67c:	bl	a478 <PySequence_Fast@plt+0x6238>
    a680:	mov	x20, x0
    a684:	cbz	x0, a900 <PySequence_Fast@plt+0x66c0>
    a688:	ldr	x0, [x22, #40]
    a68c:	cbz	x0, a7ac <PySequence_Fast@plt+0x656c>
    a690:	mov	x1, x23
    a694:	ldr	x0, [x0]
    a698:	bl	a478 <PySequence_Fast@plt+0x6238>
    a69c:	mov	x19, x0
    a6a0:	cbz	x0, a78c <PySequence_Fast@plt+0x654c>
    a6a4:	mov	x1, x19
    a6a8:	mov	x0, x20
    a6ac:	bl	58f4 <PySequence_Fast@plt+0x16b4>
    a6b0:	mov	x21, x0
    a6b4:	ldr	x1, [x20]
    a6b8:	sub	x1, x1, #0x1
    a6bc:	str	x1, [x20]
    a6c0:	cbz	x1, a7c4 <PySequence_Fast@plt+0x6584>
    a6c4:	ldr	x0, [x19]
    a6c8:	sub	x0, x0, #0x1
    a6cc:	str	x0, [x19]
    a6d0:	cbz	x0, a7d0 <PySequence_Fast@plt+0x6590>
    a6d4:	cbz	x21, a884 <PySequence_Fast@plt+0x6644>
    a6d8:	ldr	x0, [x22, #24]
    a6dc:	mov	x1, x23
    a6e0:	and	x0, x0, #0xfffffffffffffffe
    a6e4:	bl	a478 <PySequence_Fast@plt+0x6238>
    a6e8:	mov	x1, x0
    a6ec:	cbz	x0, a870 <PySequence_Fast@plt+0x6630>
    a6f0:	ldr	x0, [x21, #24]
    a6f4:	and	x0, x0, #0xfffffffffffffffe
    a6f8:	ldr	x2, [x22, #24]
    a6fc:	bfxil	x1, x2, #0, #1
    a700:	str	x1, [x21, #24]
    a704:	ldr	x1, [x0]
    a708:	sub	x1, x1, #0x1
    a70c:	str	x1, [x0]
    a710:	cbz	x1, a7dc <PySequence_Fast@plt+0x659c>
    a714:	ldr	x0, [x22, #32]
    a718:	mov	x1, x23
    a71c:	and	x0, x0, #0xfffffffffffffffe
    a720:	bl	a478 <PySequence_Fast@plt+0x6238>
    a724:	mov	x1, x0
    a728:	cbz	x0, a870 <PySequence_Fast@plt+0x6630>
    a72c:	ldr	x0, [x21, #32]
    a730:	and	x0, x0, #0xfffffffffffffffe
    a734:	ldr	x2, [x22, #32]
    a738:	bfxil	x1, x2, #0, #1
    a73c:	str	x1, [x21, #32]
    a740:	ldr	x1, [x0]
    a744:	sub	x1, x1, #0x1
    a748:	str	x1, [x0]
    a74c:	cbz	x1, a7e4 <PySequence_Fast@plt+0x65a4>
    a750:	ldr	x0, [x22, #40]
    a754:	cbz	x0, a8a8 <PySequence_Fast@plt+0x6668>
    a758:	ldr	x1, [x0, #8]
    a75c:	mov	x0, x21
    a760:	bl	4ea4 <PySequence_Fast@plt+0xc64>
    a764:	tbnz	w0, #31, a870 <PySequence_Fast@plt+0x6630>
    a768:	ldr	x2, [x22, #40]
    a76c:	ldr	x3, [x2, #8]
    a770:	cmp	x3, #0x0
    a774:	b.le	a8a0 <PySequence_Fast@plt+0x6660>
    a778:	str	x25, [sp, #64]
    a77c:	mov	x20, #0x0                   	// #0
    a780:	adrp	x24, 20000 <PyInit__elementtree@@Base+0x136c8>
    a784:	add	x24, x24, #0x320
    a788:	b	a818 <PySequence_Fast@plt+0x65d8>
    a78c:	ldr	x0, [x20]
    a790:	sub	x0, x0, #0x1
    a794:	str	x0, [x20]
    a798:	mov	x21, x19
    a79c:	cbnz	x0, a884 <PySequence_Fast@plt+0x6644>
    a7a0:	mov	x0, x20
    a7a4:	bl	3d70 <_Py_Dealloc@plt>
    a7a8:	b	a884 <PySequence_Fast@plt+0x6644>
    a7ac:	adrp	x19, 1f000 <PyInit__elementtree@@Base+0x126c8>
    a7b0:	ldr	x19, [x19, #3976]
    a7b4:	ldr	x0, [x19]
    a7b8:	add	x0, x0, #0x1
    a7bc:	str	x0, [x19]
    a7c0:	b	a6a4 <PySequence_Fast@plt+0x6464>
    a7c4:	mov	x0, x20
    a7c8:	bl	3d70 <_Py_Dealloc@plt>
    a7cc:	b	a6c4 <PySequence_Fast@plt+0x6484>
    a7d0:	mov	x0, x19
    a7d4:	bl	3d70 <_Py_Dealloc@plt>
    a7d8:	b	a6d4 <PySequence_Fast@plt+0x6494>
    a7dc:	bl	3d70 <_Py_Dealloc@plt>
    a7e0:	b	a714 <PySequence_Fast@plt+0x64d4>
    a7e4:	bl	3d70 <_Py_Dealloc@plt>
    a7e8:	b	a750 <PySequence_Fast@plt+0x6510>
    a7ec:	mov	x0, x19
    a7f0:	bl	3d70 <_Py_Dealloc@plt>
    a7f4:	b	a864 <PySequence_Fast@plt+0x6624>
    a7f8:	ldr	x0, [x21, #40]
    a7fc:	ldr	x0, [x0, #24]
    a800:	str	x19, [x0, x25]
    a804:	add	x20, x20, #0x1
    a808:	ldr	x2, [x22, #40]
    a80c:	ldr	x3, [x2, #8]
    a810:	cmp	x3, x20
    a814:	b.le	a89c <PySequence_Fast@plt+0x665c>
    a818:	lsl	x25, x20, #3
    a81c:	ldr	x0, [x2, #24]
    a820:	mov	x1, x23
    a824:	ldr	x0, [x0, x20, lsl #3]
    a828:	bl	a478 <PySequence_Fast@plt+0x6238>
    a82c:	mov	x19, x0
    a830:	cbz	x0, a864 <PySequence_Fast@plt+0x6624>
    a834:	ldr	x0, [x0, #8]
    a838:	cmp	x0, x24
    a83c:	b.eq	a7f8 <PySequence_Fast@plt+0x65b8>  // b.none
    a840:	mov	x1, x24
    a844:	bl	4160 <PyType_IsSubtype@plt>
    a848:	cbnz	w0, a7f8 <PySequence_Fast@plt+0x65b8>
    a84c:	mov	x0, x19
    a850:	bl	4df0 <PySequence_Fast@plt+0xbb0>
    a854:	ldr	x0, [x19]
    a858:	sub	x0, x0, #0x1
    a85c:	str	x0, [x19]
    a860:	cbz	x0, a7ec <PySequence_Fast@plt+0x65ac>
    a864:	ldr	x0, [x21, #40]
    a868:	str	x20, [x0, #8]
    a86c:	ldr	x25, [sp, #64]
    a870:	ldr	x0, [x21]
    a874:	sub	x0, x0, #0x1
    a878:	str	x0, [x21]
    a87c:	cbz	x0, a8f0 <PySequence_Fast@plt+0x66b0>
    a880:	mov	x21, #0x0                   	// #0
    a884:	mov	x0, x21
    a888:	ldp	x19, x20, [sp, #16]
    a88c:	ldp	x21, x22, [sp, #32]
    a890:	ldp	x23, x24, [sp, #48]
    a894:	ldp	x29, x30, [sp], #80
    a898:	ret
    a89c:	ldr	x25, [sp, #64]
    a8a0:	ldr	x0, [x21, #40]
    a8a4:	str	x3, [x0, #8]
    a8a8:	mov	x0, x22
    a8ac:	bl	3e70 <PyLong_FromSsize_t@plt>
    a8b0:	mov	x19, x0
    a8b4:	cbz	x0, a870 <PySequence_Fast@plt+0x6630>
    a8b8:	mov	x2, x21
    a8bc:	mov	x1, x0
    a8c0:	mov	x0, x23
    a8c4:	bl	4140 <PyDict_SetItem@plt>
    a8c8:	mov	w20, w0
    a8cc:	ldr	x1, [x19]
    a8d0:	sub	x1, x1, #0x1
    a8d4:	str	x1, [x19]
    a8d8:	cbz	x1, a8e4 <PySequence_Fast@plt+0x66a4>
    a8dc:	tbz	w20, #31, a884 <PySequence_Fast@plt+0x6644>
    a8e0:	b	a870 <PySequence_Fast@plt+0x6630>
    a8e4:	mov	x0, x19
    a8e8:	bl	3d70 <_Py_Dealloc@plt>
    a8ec:	b	a8dc <PySequence_Fast@plt+0x669c>
    a8f0:	mov	x0, x21
    a8f4:	bl	3d70 <_Py_Dealloc@plt>
    a8f8:	mov	x21, #0x0                   	// #0
    a8fc:	b	a884 <PySequence_Fast@plt+0x6644>
    a900:	mov	x21, x0
    a904:	b	a884 <PySequence_Fast@plt+0x6644>
    a908:	stp	x29, x30, [sp, #-16]!
    a90c:	mov	x29, sp
    a910:	ldr	x2, [x1, #8]
    a914:	ldr	x2, [x2, #168]
    a918:	tbz	w2, #29, a928 <PySequence_Fast@plt+0x66e8>
    a91c:	bl	a65c <PySequence_Fast@plt+0x641c>
    a920:	ldp	x29, x30, [sp], #16
    a924:	ret
    a928:	mov	x3, x1
    a92c:	adrp	x2, d000 <PyInit__elementtree@@Base+0x6c8>
    a930:	add	x2, x2, #0x1d0
    a934:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    a938:	add	x1, x1, #0xc10
    a93c:	adrp	x0, d000 <PyInit__elementtree@@Base+0x6c8>
    a940:	add	x0, x0, #0x1d8
    a944:	bl	3ed0 <_PyArg_BadArgument@plt>
    a948:	mov	x0, #0x0                   	// #0
    a94c:	b	a920 <PySequence_Fast@plt+0x66e0>
    a950:	stp	x29, x30, [sp, #-64]!
    a954:	mov	x29, sp
    a958:	stp	x19, x20, [sp, #16]
    a95c:	stp	x21, x22, [sp, #32]
    a960:	mov	x19, x0
    a964:	mov	x20, x1
    a968:	mov	x21, x2
    a96c:	str	x1, [sp, #48]
    a970:	str	x2, [sp, #56]
    a974:	bl	5814 <PySequence_Fast@plt+0x15d4>
    a978:	tbnz	w0, #31, aab4 <PySequence_Fast@plt+0x6874>
    a97c:	ldr	x22, [x19, #88]
    a980:	cbz	x22, aa70 <PySequence_Fast@plt+0x6830>
    a984:	ldr	x0, [x22, #8]
    a988:	ldr	x1, [x0, #56]
    a98c:	ldr	x0, [x0, #168]
    a990:	tbz	w0, #11, aa18 <PySequence_Fast@plt+0x67d8>
    a994:	ldr	x4, [x22, x1]
    a998:	cbz	x4, aa18 <PySequence_Fast@plt+0x67d8>
    a99c:	mov	x3, #0x0                   	// #0
    a9a0:	mov	x2, #0x2                   	// #2
    a9a4:	add	x1, sp, #0x30
    a9a8:	mov	x0, x22
    a9ac:	blr	x4
    a9b0:	mov	x2, #0x0                   	// #0
    a9b4:	mov	x1, x0
    a9b8:	mov	x0, x22
    a9bc:	bl	4020 <_Py_CheckFunctionResult@plt>
    a9c0:	mov	x20, x0
    a9c4:	cbz	x20, aa04 <PySequence_Fast@plt+0x67c4>
    a9c8:	ldr	x0, [x19, #24]
    a9cc:	ldrb	w1, [x19, #153]
    a9d0:	cmp	w1, #0x0
    a9d4:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    a9d8:	ldr	x1, [x1, #3976]
    a9dc:	ccmp	x0, x1, #0x4, ne  // ne = any
    a9e0:	b.ne	aa34 <PySequence_Fast@plt+0x67f4>  // b.any
    a9e4:	ldr	x0, [x19, #96]
    a9e8:	cbz	x0, aa04 <PySequence_Fast@plt+0x67c4>
    a9ec:	ldr	x1, [x19, #144]
    a9f0:	cbz	x1, aa04 <PySequence_Fast@plt+0x67c4>
    a9f4:	mov	x2, x20
    a9f8:	mov	x0, x19
    a9fc:	bl	9c48 <PySequence_Fast@plt+0x5a08>
    aa00:	tbnz	w0, #31, aa8c <PySequence_Fast@plt+0x684c>
    aa04:	mov	x0, x20
    aa08:	ldp	x19, x20, [sp, #16]
    aa0c:	ldp	x21, x22, [sp, #32]
    aa10:	ldp	x29, x30, [sp], #64
    aa14:	ret
    aa18:	mov	x3, #0x0                   	// #0
    aa1c:	mov	x2, #0x2                   	// #2
    aa20:	add	x1, sp, #0x30
    aa24:	mov	x0, x22
    aa28:	bl	41d0 <_PyObject_MakeTpCall@plt>
    aa2c:	mov	x20, x0
    aa30:	b	a9c4 <PySequence_Fast@plt+0x6784>
    aa34:	mov	x1, x20
    aa38:	bl	5878 <PySequence_Fast@plt+0x1638>
    aa3c:	tbnz	w0, #31, aa8c <PySequence_Fast@plt+0x684c>
    aa40:	ldr	x0, [x20]
    aa44:	add	x0, x0, #0x1
    aa48:	str	x0, [x20]
    aa4c:	ldr	x0, [x19, #40]
    aa50:	str	x20, [x19, #40]
    aa54:	cbz	x0, a9e4 <PySequence_Fast@plt+0x67a4>
    aa58:	ldr	x1, [x0]
    aa5c:	sub	x1, x1, #0x1
    aa60:	str	x1, [x0]
    aa64:	cbnz	x1, a9e4 <PySequence_Fast@plt+0x67a4>
    aa68:	bl	3d70 <_Py_Dealloc@plt>
    aa6c:	b	a9e4 <PySequence_Fast@plt+0x67a4>
    aa70:	mov	x2, x21
    aa74:	mov	x1, x20
    aa78:	mov	x0, #0x2                   	// #2
    aa7c:	bl	4210 <PyTuple_Pack@plt>
    aa80:	mov	x20, x0
    aa84:	cbnz	x0, a9e4 <PySequence_Fast@plt+0x67a4>
    aa88:	b	aa04 <PySequence_Fast@plt+0x67c4>
    aa8c:	ldr	x0, [x20]
    aa90:	sub	x0, x0, #0x1
    aa94:	str	x0, [x20]
    aa98:	cbz	x0, aaa4 <PySequence_Fast@plt+0x6864>
    aa9c:	mov	x20, #0x0                   	// #0
    aaa0:	b	aa04 <PySequence_Fast@plt+0x67c4>
    aaa4:	mov	x0, x20
    aaa8:	bl	3d70 <_Py_Dealloc@plt>
    aaac:	mov	x20, #0x0                   	// #0
    aab0:	b	aa04 <PySequence_Fast@plt+0x67c4>
    aab4:	mov	x20, #0x0                   	// #0
    aab8:	b	aa04 <PySequence_Fast@plt+0x67c4>
    aabc:	stp	x29, x30, [sp, #-48]!
    aac0:	mov	x29, sp
    aac4:	stp	x19, x20, [sp, #16]
    aac8:	str	x21, [sp, #32]
    aacc:	mov	x21, x0
    aad0:	mov	x20, x1
    aad4:	mov	x19, x2
    aad8:	sub	x1, x2, #0x1
    aadc:	cmp	x1, #0x1
    aae0:	b.hi	ab0c <PySequence_Fast@plt+0x68cc>  // b.pmore
    aae4:	ldr	x1, [x20]
    aae8:	cmp	x19, #0x1
    aaec:	b.le	ab30 <PySequence_Fast@plt+0x68f0>
    aaf0:	ldr	x2, [x20, #8]
    aaf4:	mov	x0, x21
    aaf8:	bl	a950 <PySequence_Fast@plt+0x6710>
    aafc:	ldp	x19, x20, [sp, #16]
    ab00:	ldr	x21, [sp, #32]
    ab04:	ldp	x29, x30, [sp], #48
    ab08:	ret
    ab0c:	mov	x3, #0x2                   	// #2
    ab10:	mov	x2, #0x1                   	// #1
    ab14:	mov	x1, x19
    ab18:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    ab1c:	add	x0, x0, #0xe38
    ab20:	bl	3f60 <_PyArg_CheckPositional@plt>
    ab24:	cbnz	w0, aae4 <PySequence_Fast@plt+0x68a4>
    ab28:	mov	x0, #0x0                   	// #0
    ab2c:	b	aafc <PySequence_Fast@plt+0x68bc>
    ab30:	adrp	x2, 1f000 <PyInit__elementtree@@Base+0x126c8>
    ab34:	ldr	x2, [x2, #3976]
    ab38:	b	aaf4 <PySequence_Fast@plt+0x68b4>
    ab3c:	stp	x29, x30, [sp, #-48]!
    ab40:	mov	x29, sp
    ab44:	stp	x19, x20, [sp, #16]
    ab48:	mov	x19, x0
    ab4c:	str	x1, [sp, #40]
    ab50:	bl	5814 <PySequence_Fast@plt+0x15d4>
    ab54:	tbnz	w0, #31, ac84 <PySequence_Fast@plt+0x6a44>
    ab58:	ldr	x20, [x19, #80]
    ab5c:	cbz	x20, ac18 <PySequence_Fast@plt+0x69d8>
    ab60:	ldr	x0, [x20, #8]
    ab64:	ldr	x1, [x0, #56]
    ab68:	ldr	x0, [x0, #168]
    ab6c:	tbz	w0, #11, abfc <PySequence_Fast@plt+0x69bc>
    ab70:	ldr	x4, [x20, x1]
    ab74:	cbz	x4, abfc <PySequence_Fast@plt+0x69bc>
    ab78:	mov	x3, #0x0                   	// #0
    ab7c:	mov	x2, #0x1                   	// #1
    ab80:	add	x1, sp, #0x28
    ab84:	mov	x0, x20
    ab88:	blr	x4
    ab8c:	mov	x2, #0x0                   	// #0
    ab90:	mov	x1, x0
    ab94:	mov	x0, x20
    ab98:	bl	4020 <_Py_CheckFunctionResult@plt>
    ab9c:	mov	x20, x0
    aba0:	cbz	x20, ac4c <PySequence_Fast@plt+0x6a0c>
    aba4:	ldr	x0, [x19, #24]
    aba8:	ldrb	w1, [x19, #152]
    abac:	cmp	w1, #0x0
    abb0:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    abb4:	ldr	x1, [x1, #3976]
    abb8:	ccmp	x0, x1, #0x4, ne  // ne = any
    abbc:	b.eq	ac2c <PySequence_Fast@plt+0x69ec>  // b.none
    abc0:	mov	x1, x20
    abc4:	bl	5878 <PySequence_Fast@plt+0x1638>
    abc8:	tbnz	w0, #31, ac5c <PySequence_Fast@plt+0x6a1c>
    abcc:	ldr	x0, [x20]
    abd0:	add	x0, x0, #0x1
    abd4:	str	x0, [x20]
    abd8:	ldr	x0, [x19, #40]
    abdc:	str	x20, [x19, #40]
    abe0:	cbz	x0, ac2c <PySequence_Fast@plt+0x69ec>
    abe4:	ldr	x1, [x0]
    abe8:	sub	x1, x1, #0x1
    abec:	str	x1, [x0]
    abf0:	cbnz	x1, ac2c <PySequence_Fast@plt+0x69ec>
    abf4:	bl	3d70 <_Py_Dealloc@plt>
    abf8:	b	ac2c <PySequence_Fast@plt+0x69ec>
    abfc:	mov	x3, #0x0                   	// #0
    ac00:	mov	x2, #0x1                   	// #1
    ac04:	add	x1, sp, #0x28
    ac08:	mov	x0, x20
    ac0c:	bl	41d0 <_PyObject_MakeTpCall@plt>
    ac10:	mov	x20, x0
    ac14:	b	aba0 <PySequence_Fast@plt+0x6960>
    ac18:	ldr	x1, [sp, #40]
    ac1c:	ldr	x0, [x1]
    ac20:	add	x0, x0, #0x1
    ac24:	str	x0, [x1]
    ac28:	ldr	x20, [sp, #40]
    ac2c:	ldr	x0, [x19, #96]
    ac30:	cbz	x0, ac4c <PySequence_Fast@plt+0x6a0c>
    ac34:	ldr	x1, [x19, #136]
    ac38:	cbz	x1, ac4c <PySequence_Fast@plt+0x6a0c>
    ac3c:	mov	x2, x20
    ac40:	mov	x0, x19
    ac44:	bl	9c48 <PySequence_Fast@plt+0x5a08>
    ac48:	tbnz	w0, #31, ac5c <PySequence_Fast@plt+0x6a1c>
    ac4c:	mov	x0, x20
    ac50:	ldp	x19, x20, [sp, #16]
    ac54:	ldp	x29, x30, [sp], #48
    ac58:	ret
    ac5c:	ldr	x0, [x20]
    ac60:	sub	x0, x0, #0x1
    ac64:	str	x0, [x20]
    ac68:	cbz	x0, ac74 <PySequence_Fast@plt+0x6a34>
    ac6c:	mov	x20, #0x0                   	// #0
    ac70:	b	ac4c <PySequence_Fast@plt+0x6a0c>
    ac74:	mov	x0, x20
    ac78:	bl	3d70 <_Py_Dealloc@plt>
    ac7c:	mov	x20, #0x0                   	// #0
    ac80:	b	ac4c <PySequence_Fast@plt+0x6a0c>
    ac84:	mov	x20, #0x0                   	// #0
    ac88:	b	ac4c <PySequence_Fast@plt+0x6a0c>
    ac8c:	stp	x29, x30, [sp, #-16]!
    ac90:	mov	x29, sp
    ac94:	bl	ab3c <PySequence_Fast@plt+0x68fc>
    ac98:	ldp	x29, x30, [sp], #16
    ac9c:	ret
    aca0:	stp	x29, x30, [sp, #-80]!
    aca4:	mov	x29, sp
    aca8:	stp	x19, x20, [sp, #16]
    acac:	stp	x21, x22, [sp, #32]
    acb0:	str	x23, [sp, #48]
    acb4:	mov	w22, w0
    acb8:	mov	x20, x1
    acbc:	mov	x21, x2
    acc0:	mov	x19, x3
    acc4:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x136c8>
    acc8:	add	x1, x1, #0x9b8
    accc:	add	x0, x1, #0x80
    acd0:	bl	3fc0 <PyState_FindModule@plt>
    acd4:	bl	3e10 <PyModule_GetState@plt>
    acd8:	mov	x23, x0
    acdc:	cbz	x19, ae08 <PySequence_Fast@plt+0x6bc8>
    ace0:	mov	x3, x21
    ace4:	mov	x2, x20
    ace8:	mov	x1, x19
    acec:	adrp	x0, d000 <PyInit__elementtree@@Base+0x6c8>
    acf0:	add	x0, x0, #0x1e8
    acf4:	bl	3c30 <PyUnicode_FromFormat@plt>
    acf8:	str	x0, [sp, #72]
    acfc:	cbz	x0, ae58 <PySequence_Fast@plt+0x6c18>
    ad00:	ldr	x19, [x23]
    ad04:	ldr	x0, [x19, #8]
    ad08:	ldr	x1, [x0, #56]
    ad0c:	ldr	x0, [x0, #168]
    ad10:	tbz	w0, #11, ae24 <PySequence_Fast@plt+0x6be4>
    ad14:	ldr	x4, [x19, x1]
    ad18:	cbz	x4, ae24 <PySequence_Fast@plt+0x6be4>
    ad1c:	mov	x3, #0x0                   	// #0
    ad20:	mov	x2, #0x1                   	// #1
    ad24:	add	x1, sp, #0x48
    ad28:	mov	x0, x19
    ad2c:	blr	x4
    ad30:	mov	x2, #0x0                   	// #0
    ad34:	mov	x1, x0
    ad38:	mov	x0, x19
    ad3c:	bl	4020 <_Py_CheckFunctionResult@plt>
    ad40:	mov	x19, x0
    ad44:	ldr	x0, [sp, #72]
    ad48:	ldr	x1, [x0]
    ad4c:	sub	x1, x1, #0x1
    ad50:	str	x1, [x0]
    ad54:	cbz	x1, ae40 <PySequence_Fast@plt+0x6c00>
    ad58:	cbz	x19, ae58 <PySequence_Fast@plt+0x6c18>
    ad5c:	mov	w0, w22
    ad60:	bl	3ea0 <PyLong_FromLong@plt>
    ad64:	mov	x22, x0
    ad68:	cbz	x0, ae48 <PySequence_Fast@plt+0x6c08>
    ad6c:	mov	x2, x0
    ad70:	adrp	x1, d000 <PyInit__elementtree@@Base+0x6c8>
    ad74:	add	x1, x1, #0x208
    ad78:	mov	x0, x19
    ad7c:	bl	3d50 <PyObject_SetAttrString@plt>
    ad80:	cmn	w0, #0x1
    ad84:	b.eq	ae78 <PySequence_Fast@plt+0x6c38>  // b.none
    ad88:	ldr	x0, [x22]
    ad8c:	sub	x0, x0, #0x1
    ad90:	str	x0, [x22]
    ad94:	cbz	x0, aeb0 <PySequence_Fast@plt+0x6c70>
    ad98:	mov	x2, x21
    ad9c:	mov	x1, x20
    ada0:	adrp	x0, d000 <PyInit__elementtree@@Base+0x6c8>
    ada4:	add	x0, x0, #0x210
    ada8:	bl	4190 <_Py_BuildValue_SizeT@plt>
    adac:	mov	x20, x0
    adb0:	cbz	x0, aebc <PySequence_Fast@plt+0x6c7c>
    adb4:	mov	x2, x0
    adb8:	adrp	x1, d000 <PyInit__elementtree@@Base+0x6c8>
    adbc:	add	x1, x1, #0x218
    adc0:	mov	x0, x19
    adc4:	bl	3d50 <PyObject_SetAttrString@plt>
    adc8:	cmn	w0, #0x1
    adcc:	b.eq	aed8 <PySequence_Fast@plt+0x6c98>  // b.none
    add0:	ldr	x0, [x20]
    add4:	sub	x0, x0, #0x1
    add8:	str	x0, [x20]
    addc:	cbz	x0, af10 <PySequence_Fast@plt+0x6cd0>
    ade0:	mov	x1, x19
    ade4:	ldr	x0, [x23]
    ade8:	bl	3d90 <PyErr_SetObject@plt>
    adec:	ldr	x0, [x19]
    adf0:	sub	x0, x0, #0x1
    adf4:	str	x0, [x19]
    adf8:	cbnz	x0, ae58 <PySequence_Fast@plt+0x6c18>
    adfc:	mov	x0, x19
    ae00:	bl	3d70 <_Py_Dealloc@plt>
    ae04:	b	ae58 <PySequence_Fast@plt+0x6c18>
    ae08:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x146c8>
    ae0c:	ldr	x0, [x0, #1072]
    ae10:	ldr	x1, [x0, #24]
    ae14:	mov	w0, w22
    ae18:	blr	x1
    ae1c:	mov	x19, x0
    ae20:	b	ace0 <PySequence_Fast@plt+0x6aa0>
    ae24:	mov	x3, #0x0                   	// #0
    ae28:	mov	x2, #0x1                   	// #1
    ae2c:	add	x1, sp, #0x48
    ae30:	mov	x0, x19
    ae34:	bl	41d0 <_PyObject_MakeTpCall@plt>
    ae38:	mov	x19, x0
    ae3c:	b	ad44 <PySequence_Fast@plt+0x6b04>
    ae40:	bl	3d70 <_Py_Dealloc@plt>
    ae44:	b	ad58 <PySequence_Fast@plt+0x6b18>
    ae48:	ldr	x0, [x19]
    ae4c:	sub	x0, x0, #0x1
    ae50:	str	x0, [x19]
    ae54:	cbz	x0, ae6c <PySequence_Fast@plt+0x6c2c>
    ae58:	ldp	x19, x20, [sp, #16]
    ae5c:	ldp	x21, x22, [sp, #32]
    ae60:	ldr	x23, [sp, #48]
    ae64:	ldp	x29, x30, [sp], #80
    ae68:	ret
    ae6c:	mov	x0, x19
    ae70:	bl	3d70 <_Py_Dealloc@plt>
    ae74:	b	ae58 <PySequence_Fast@plt+0x6c18>
    ae78:	ldr	x0, [x19]
    ae7c:	sub	x0, x0, #0x1
    ae80:	str	x0, [x19]
    ae84:	cbz	x0, aea4 <PySequence_Fast@plt+0x6c64>
    ae88:	ldr	x0, [x22]
    ae8c:	sub	x0, x0, #0x1
    ae90:	str	x0, [x22]
    ae94:	cbnz	x0, ae58 <PySequence_Fast@plt+0x6c18>
    ae98:	mov	x0, x22
    ae9c:	bl	3d70 <_Py_Dealloc@plt>
    aea0:	b	ae58 <PySequence_Fast@plt+0x6c18>
    aea4:	mov	x0, x19
    aea8:	bl	3d70 <_Py_Dealloc@plt>
    aeac:	b	ae88 <PySequence_Fast@plt+0x6c48>
    aeb0:	mov	x0, x22
    aeb4:	bl	3d70 <_Py_Dealloc@plt>
    aeb8:	b	ad98 <PySequence_Fast@plt+0x6b58>
    aebc:	ldr	x0, [x19]
    aec0:	sub	x0, x0, #0x1
    aec4:	str	x0, [x19]
    aec8:	cbnz	x0, ae58 <PySequence_Fast@plt+0x6c18>
    aecc:	mov	x0, x19
    aed0:	bl	3d70 <_Py_Dealloc@plt>
    aed4:	b	ae58 <PySequence_Fast@plt+0x6c18>
    aed8:	ldr	x0, [x19]
    aedc:	sub	x0, x0, #0x1
    aee0:	str	x0, [x19]
    aee4:	cbz	x0, af04 <PySequence_Fast@plt+0x6cc4>
    aee8:	ldr	x0, [x20]
    aeec:	sub	x0, x0, #0x1
    aef0:	str	x0, [x20]
    aef4:	cbnz	x0, ae58 <PySequence_Fast@plt+0x6c18>
    aef8:	mov	x0, x20
    aefc:	bl	3d70 <_Py_Dealloc@plt>
    af00:	b	ae58 <PySequence_Fast@plt+0x6c18>
    af04:	mov	x0, x19
    af08:	bl	3d70 <_Py_Dealloc@plt>
    af0c:	b	aee8 <PySequence_Fast@plt+0x6ca8>
    af10:	mov	x0, x20
    af14:	bl	3d70 <_Py_Dealloc@plt>
    af18:	b	ade0 <PySequence_Fast@plt+0x6ba0>
    af1c:	stp	x29, x30, [sp, #-64]!
    af20:	mov	x29, sp
    af24:	stp	x19, x20, [sp, #16]
    af28:	stp	x21, x22, [sp, #32]
    af2c:	mov	x21, x0
    af30:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x146c8>
    af34:	ldr	x0, [x0, #1072]
    af38:	ldr	x4, [x0, #56]
    af3c:	ldr	x0, [x21, #16]
    af40:	blr	x4
    af44:	mov	w20, w0
    af48:	bl	3f80 <PyErr_Occurred@plt>
    af4c:	mov	x19, #0x0                   	// #0
    af50:	cbnz	x0, af70 <PySequence_Fast@plt+0x6d30>
    af54:	mov	x19, x0
    af58:	cbz	w20, af84 <PySequence_Fast@plt+0x6d44>
    af5c:	adrp	x19, 1f000 <PyInit__elementtree@@Base+0x126c8>
    af60:	ldr	x19, [x19, #3976]
    af64:	ldr	x0, [x19]
    af68:	add	x0, x0, #0x1
    af6c:	str	x0, [x19]
    af70:	mov	x0, x19
    af74:	ldp	x19, x20, [sp, #16]
    af78:	ldp	x21, x22, [sp, #32]
    af7c:	ldp	x29, x30, [sp], #64
    af80:	ret
    af84:	str	x23, [sp, #48]
    af88:	adrp	x23, 21000 <PyInit__elementtree@@Base+0x146c8>
    af8c:	ldr	x0, [x23, #1072]
    af90:	ldr	x1, [x0, #32]
    af94:	ldr	x0, [x21, #16]
    af98:	blr	x1
    af9c:	mov	w20, w0
    afa0:	ldr	x0, [x23, #1072]
    afa4:	ldr	x1, [x0, #48]
    afa8:	ldr	x0, [x21, #16]
    afac:	blr	x1
    afb0:	mov	x22, x0
    afb4:	ldr	x0, [x23, #1072]
    afb8:	ldr	x1, [x0, #40]
    afbc:	ldr	x0, [x21, #16]
    afc0:	blr	x1
    afc4:	mov	x3, #0x0                   	// #0
    afc8:	mov	x2, x0
    afcc:	mov	x1, x22
    afd0:	mov	w0, w20
    afd4:	bl	aca0 <PySequence_Fast@plt+0x6a60>
    afd8:	ldr	x23, [sp, #48]
    afdc:	b	af70 <PySequence_Fast@plt+0x6d30>
    afe0:	stp	x29, x30, [sp, #-112]!
    afe4:	mov	x29, sp
    afe8:	stp	x19, x20, [sp, #16]
    afec:	mov	x20, x0
    aff0:	mov	x0, x1
    aff4:	ldr	x1, [x1, #8]
    aff8:	ldr	x1, [x1, #168]
    affc:	tbz	w1, #28, b084 <PySequence_Fast@plt+0x6e44>
    b000:	add	x1, sp, #0x20
    b004:	bl	4170 <PyUnicode_AsUTF8AndSize@plt>
    b008:	mov	x19, x0
    b00c:	cbz	x0, b054 <PySequence_Fast@plt+0x6e14>
    b010:	ldr	x1, [sp, #32]
    b014:	mov	x0, #0x7fffffff            	// #2147483647
    b018:	cmp	x1, x0
    b01c:	b.gt	b064 <PySequence_Fast@plt+0x6e24>
    b020:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x146c8>
    b024:	ldr	x0, [x0, #1072]
    b028:	ldr	x2, [x0, #152]
    b02c:	adrp	x1, d000 <PyInit__elementtree@@Base+0x6c8>
    b030:	add	x1, x1, #0x248
    b034:	ldr	x0, [x20, #16]
    b038:	blr	x2
    b03c:	mov	w3, #0x0                   	// #0
    b040:	ldr	w2, [sp, #32]
    b044:	mov	x1, x19
    b048:	mov	x0, x20
    b04c:	bl	af1c <PySequence_Fast@plt+0x6cdc>
    b050:	mov	x19, x0
    b054:	mov	x0, x19
    b058:	ldp	x19, x20, [sp, #16]
    b05c:	ldp	x29, x30, [sp], #112
    b060:	ret
    b064:	adrp	x1, d000 <PyInit__elementtree@@Base+0x6c8>
    b068:	add	x1, x1, #0x228
    b06c:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    b070:	ldr	x0, [x0, #3968]
    b074:	ldr	x0, [x0]
    b078:	bl	3de0 <PyErr_SetString@plt>
    b07c:	mov	x19, #0x0                   	// #0
    b080:	b	b054 <PySequence_Fast@plt+0x6e14>
    b084:	mov	w2, #0x0                   	// #0
    b088:	add	x1, sp, #0x20
    b08c:	bl	40a0 <PyObject_GetBuffer@plt>
    b090:	mov	x19, #0x0                   	// #0
    b094:	tbnz	w0, #31, b054 <PySequence_Fast@plt+0x6e14>
    b098:	ldr	x2, [sp, #48]
    b09c:	mov	x0, #0x7fffffff            	// #2147483647
    b0a0:	cmp	x2, x0
    b0a4:	b.le	b0cc <PySequence_Fast@plt+0x6e8c>
    b0a8:	add	x0, sp, #0x20
    b0ac:	bl	3ce0 <PyBuffer_Release@plt>
    b0b0:	adrp	x1, d000 <PyInit__elementtree@@Base+0x6c8>
    b0b4:	add	x1, x1, #0x228
    b0b8:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    b0bc:	ldr	x0, [x0, #3968]
    b0c0:	ldr	x0, [x0]
    b0c4:	bl	3de0 <PyErr_SetString@plt>
    b0c8:	b	b054 <PySequence_Fast@plt+0x6e14>
    b0cc:	mov	w3, #0x0                   	// #0
    b0d0:	ldr	x1, [sp, #32]
    b0d4:	mov	x0, x20
    b0d8:	bl	af1c <PySequence_Fast@plt+0x6cdc>
    b0dc:	mov	x19, x0
    b0e0:	add	x0, sp, #0x20
    b0e4:	bl	3ce0 <PyBuffer_Release@plt>
    b0e8:	b	b054 <PySequence_Fast@plt+0x6e14>
    b0ec:	cmp	w2, #0x1
    b0f0:	b.le	b2d8 <PySequence_Fast@plt+0x7098>
    b0f4:	stp	x29, x30, [sp, #-208]!
    b0f8:	mov	x29, sp
    b0fc:	stp	x19, x20, [sp, #16]
    b100:	stp	x21, x22, [sp, #32]
    b104:	mov	x21, x0
    b108:	mov	x20, x1
    b10c:	mov	w19, w2
    b110:	ldrb	w0, [x1]
    b114:	cmp	w0, #0x26
    b118:	b.eq	b12c <PySequence_Fast@plt+0x6eec>  // b.none
    b11c:	ldp	x19, x20, [sp, #16]
    b120:	ldp	x21, x22, [sp, #32]
    b124:	ldp	x29, x30, [sp], #208
    b128:	ret
    b12c:	bl	3f80 <PyErr_Occurred@plt>
    b130:	cbnz	x0, b11c <PySequence_Fast@plt+0x6edc>
    b134:	sub	w1, w19, #0x2
    b138:	adrp	x2, c000 <PySequence_Fast@plt+0x7dc0>
    b13c:	add	x2, x2, #0xca0
    b140:	sxtw	x1, w1
    b144:	add	x0, x20, #0x1
    b148:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    b14c:	mov	x22, x0
    b150:	cbz	x0, b11c <PySequence_Fast@plt+0x6edc>
    b154:	mov	x1, x0
    b158:	ldr	x0, [x21, #32]
    b15c:	bl	4230 <PyDict_GetItemWithError@plt>
    b160:	mov	x1, x0
    b164:	str	x0, [sp, #200]
    b168:	cbz	x0, b224 <PySequence_Fast@plt+0x6fe4>
    b16c:	ldr	x0, [x21, #24]
    b170:	adrp	x2, 20000 <PyInit__elementtree@@Base+0x136c8>
    b174:	add	x2, x2, #0x320
    b178:	ldr	x3, [x0, #8]
    b17c:	add	x2, x2, #0x1b8
    b180:	cmp	x3, x2
    b184:	b.eq	b1fc <PySequence_Fast@plt+0x6fbc>  // b.none
    b188:	ldr	x19, [x21, #72]
    b18c:	cbz	x19, b1e0 <PySequence_Fast@plt+0x6fa0>
    b190:	ldr	x0, [x19, #8]
    b194:	ldr	x1, [x0, #56]
    b198:	ldr	x0, [x0, #168]
    b19c:	tbz	w0, #11, b204 <PySequence_Fast@plt+0x6fc4>
    b1a0:	ldr	x4, [x19, x1]
    b1a4:	cbz	x4, b204 <PySequence_Fast@plt+0x6fc4>
    b1a8:	mov	x3, #0x0                   	// #0
    b1ac:	mov	x2, #0x1                   	// #1
    b1b0:	add	x1, sp, #0xc8
    b1b4:	mov	x0, x19
    b1b8:	blr	x4
    b1bc:	mov	x2, #0x0                   	// #0
    b1c0:	mov	x1, x0
    b1c4:	mov	x0, x19
    b1c8:	bl	4020 <_Py_CheckFunctionResult@plt>
    b1cc:	cbz	x0, b1e0 <PySequence_Fast@plt+0x6fa0>
    b1d0:	ldr	x1, [x0]
    b1d4:	sub	x1, x1, #0x1
    b1d8:	str	x1, [x0]
    b1dc:	cbz	x1, b21c <PySequence_Fast@plt+0x6fdc>
    b1e0:	ldr	x0, [x22]
    b1e4:	sub	x0, x0, #0x1
    b1e8:	str	x0, [x22]
    b1ec:	cbnz	x0, b11c <PySequence_Fast@plt+0x6edc>
    b1f0:	mov	x0, x22
    b1f4:	bl	3d70 <_Py_Dealloc@plt>
    b1f8:	b	b11c <PySequence_Fast@plt+0x6edc>
    b1fc:	bl	50f0 <PySequence_Fast@plt+0xeb0>
    b200:	b	b1cc <PySequence_Fast@plt+0x6f8c>
    b204:	mov	x3, #0x0                   	// #0
    b208:	mov	x2, #0x1                   	// #1
    b20c:	add	x1, sp, #0xc8
    b210:	mov	x0, x19
    b214:	bl	41d0 <_PyObject_MakeTpCall@plt>
    b218:	b	b1cc <PySequence_Fast@plt+0x6f8c>
    b21c:	bl	3d70 <_Py_Dealloc@plt>
    b220:	b	b1e0 <PySequence_Fast@plt+0x6fa0>
    b224:	bl	3f80 <PyErr_Occurred@plt>
    b228:	cbnz	x0, b1e0 <PySequence_Fast@plt+0x6fa0>
    b22c:	str	x23, [sp, #48]
    b230:	adrp	x0, d000 <PyInit__elementtree@@Base+0x6c8>
    b234:	add	x0, x0, #0x6e0
    b238:	add	x3, sp, #0x48
    b23c:	ldp	x4, x5, [x0]
    b240:	stp	x4, x5, [sp, #72]
    b244:	ldrh	w0, [x0, #16]
    b248:	strh	w0, [sp, #88]
    b24c:	add	x0, sp, #0x2
    b250:	stp	xzr, xzr, [x0, #88]
    b254:	stp	xzr, xzr, [x0, #104]
    b258:	stp	xzr, xzr, [x0, #120]
    b25c:	stp	xzr, xzr, [x0, #136]
    b260:	stp	xzr, xzr, [x0, #152]
    b264:	stp	xzr, xzr, [x0, #168]
    b268:	stur	xzr, [sp, #186]
    b26c:	stur	wzr, [sp, #194]
    b270:	strh	wzr, [sp, #198]
    b274:	cmp	w19, #0x64
    b278:	mov	w2, #0x64                  	// #100
    b27c:	csel	w2, w19, w2, le
    b280:	sxtw	x2, w2
    b284:	mov	x1, x20
    b288:	mov	x19, x3
    b28c:	mov	x0, x3
    b290:	bl	40d0 <strncat@plt>
    b294:	adrp	x23, 21000 <PyInit__elementtree@@Base+0x146c8>
    b298:	ldr	x0, [x23, #1072]
    b29c:	ldr	x1, [x0, #48]
    b2a0:	ldr	x0, [x21, #16]
    b2a4:	blr	x1
    b2a8:	mov	x20, x0
    b2ac:	ldr	x0, [x23, #1072]
    b2b0:	ldr	x1, [x0, #40]
    b2b4:	ldr	x0, [x21, #16]
    b2b8:	blr	x1
    b2bc:	mov	x3, x19
    b2c0:	mov	x2, x0
    b2c4:	mov	x1, x20
    b2c8:	mov	w0, #0xb                   	// #11
    b2cc:	bl	aca0 <PySequence_Fast@plt+0x6a60>
    b2d0:	ldr	x23, [sp, #48]
    b2d4:	b	b1e0 <PySequence_Fast@plt+0x6fa0>
    b2d8:	ret
    b2dc:	stp	x29, x30, [sp, #-48]!
    b2e0:	mov	x29, sp
    b2e4:	stp	x19, x20, [sp, #16]
    b2e8:	mov	x19, x0
    b2ec:	mov	x20, x1
    b2f0:	bl	3f80 <PyErr_Occurred@plt>
    b2f4:	cbz	x0, b304 <PySequence_Fast@plt+0x70c4>
    b2f8:	ldp	x19, x20, [sp, #16]
    b2fc:	ldp	x29, x30, [sp], #48
    b300:	ret
    b304:	ldr	x0, [x19, #24]
    b308:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x136c8>
    b30c:	add	x1, x1, #0x320
    b310:	ldr	x2, [x0, #8]
    b314:	add	x1, x1, #0x1b8
    b318:	cmp	x2, x1
    b31c:	b.eq	b39c <PySequence_Fast@plt+0x715c>  // b.none
    b320:	ldr	x0, [x19, #80]
    b324:	cbz	x0, b2f8 <PySequence_Fast@plt+0x70b8>
    b328:	mov	x1, x20
    b32c:	mov	x0, x19
    b330:	bl	531c <PySequence_Fast@plt+0x10dc>
    b334:	str	x0, [sp, #40]
    b338:	cbz	x0, b2f8 <PySequence_Fast@plt+0x70b8>
    b33c:	ldr	x19, [x19, #80]
    b340:	ldr	x0, [x19, #8]
    b344:	ldr	x1, [x0, #56]
    b348:	ldr	x0, [x0, #168]
    b34c:	tbz	w0, #11, b3cc <PySequence_Fast@plt+0x718c>
    b350:	ldr	x4, [x19, x1]
    b354:	cbz	x4, b3cc <PySequence_Fast@plt+0x718c>
    b358:	mov	x3, #0x0                   	// #0
    b35c:	mov	x2, #0x1                   	// #1
    b360:	add	x1, sp, #0x28
    b364:	mov	x0, x19
    b368:	blr	x4
    b36c:	mov	x2, #0x0                   	// #0
    b370:	mov	x1, x0
    b374:	mov	x0, x19
    b378:	bl	4020 <_Py_CheckFunctionResult@plt>
    b37c:	mov	x19, x0
    b380:	ldr	x0, [sp, #40]
    b384:	ldr	x1, [x0]
    b388:	sub	x1, x1, #0x1
    b38c:	str	x1, [x0]
    b390:	cbnz	x1, b3ac <PySequence_Fast@plt+0x716c>
    b394:	bl	3d70 <_Py_Dealloc@plt>
    b398:	b	b3ac <PySequence_Fast@plt+0x716c>
    b39c:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    b3a0:	ldr	x1, [x1, #3976]
    b3a4:	bl	a35c <PySequence_Fast@plt+0x611c>
    b3a8:	mov	x19, x0
    b3ac:	cbz	x19, b2f8 <PySequence_Fast@plt+0x70b8>
    b3b0:	ldr	x0, [x19]
    b3b4:	sub	x0, x0, #0x1
    b3b8:	str	x0, [x19]
    b3bc:	cbnz	x0, b2f8 <PySequence_Fast@plt+0x70b8>
    b3c0:	mov	x0, x19
    b3c4:	bl	3d70 <_Py_Dealloc@plt>
    b3c8:	b	b2f8 <PySequence_Fast@plt+0x70b8>
    b3cc:	mov	x3, #0x0                   	// #0
    b3d0:	mov	x2, #0x1                   	// #1
    b3d4:	add	x1, sp, #0x28
    b3d8:	mov	x0, x19
    b3dc:	bl	41d0 <_PyObject_MakeTpCall@plt>
    b3e0:	mov	x19, x0
    b3e4:	b	b380 <PySequence_Fast@plt+0x7140>
    b3e8:	stp	x29, x30, [sp, #-64]!
    b3ec:	mov	x29, sp
    b3f0:	stp	x19, x20, [sp, #16]
    b3f4:	str	x21, [sp, #32]
    b3f8:	mov	x21, x0
    b3fc:	mov	x19, x1
    b400:	mov	w20, w2
    b404:	bl	3f80 <PyErr_Occurred@plt>
    b408:	cbz	x0, b41c <PySequence_Fast@plt+0x71dc>
    b40c:	ldp	x19, x20, [sp, #16]
    b410:	ldr	x21, [sp, #32]
    b414:	ldp	x29, x30, [sp], #64
    b418:	ret
    b41c:	adrp	x2, c000 <PySequence_Fast@plt+0x7dc0>
    b420:	add	x2, x2, #0xca0
    b424:	sxtw	x1, w20
    b428:	mov	x0, x19
    b42c:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    b430:	mov	x1, x0
    b434:	str	x0, [sp, #56]
    b438:	cbz	x0, b40c <PySequence_Fast@plt+0x71cc>
    b43c:	ldr	x0, [x21, #24]
    b440:	adrp	x2, 20000 <PyInit__elementtree@@Base+0x136c8>
    b444:	add	x2, x2, #0x320
    b448:	ldr	x3, [x0, #8]
    b44c:	add	x2, x2, #0x1b8
    b450:	cmp	x3, x2
    b454:	b.eq	b4d4 <PySequence_Fast@plt+0x7294>  // b.none
    b458:	ldr	x19, [x21, #72]
    b45c:	cbz	x19, b4fc <PySequence_Fast@plt+0x72bc>
    b460:	ldr	x0, [x19, #8]
    b464:	ldr	x1, [x0, #56]
    b468:	ldr	x0, [x0, #168]
    b46c:	tbz	w0, #11, b4e0 <PySequence_Fast@plt+0x72a0>
    b470:	ldr	x4, [x19, x1]
    b474:	cbz	x4, b4e0 <PySequence_Fast@plt+0x72a0>
    b478:	mov	x3, #0x0                   	// #0
    b47c:	mov	x2, #0x1                   	// #1
    b480:	add	x1, sp, #0x38
    b484:	mov	x0, x19
    b488:	blr	x4
    b48c:	mov	x2, #0x0                   	// #0
    b490:	mov	x1, x0
    b494:	mov	x0, x19
    b498:	bl	4020 <_Py_CheckFunctionResult@plt>
    b49c:	mov	x19, x0
    b4a0:	ldr	x1, [sp, #56]
    b4a4:	ldr	x0, [x1]
    b4a8:	sub	x0, x0, #0x1
    b4ac:	str	x0, [x1]
    b4b0:	cbz	x0, b50c <PySequence_Fast@plt+0x72cc>
    b4b4:	cbz	x19, b40c <PySequence_Fast@plt+0x71cc>
    b4b8:	ldr	x0, [x19]
    b4bc:	sub	x0, x0, #0x1
    b4c0:	str	x0, [x19]
    b4c4:	cbnz	x0, b40c <PySequence_Fast@plt+0x71cc>
    b4c8:	mov	x0, x19
    b4cc:	bl	3d70 <_Py_Dealloc@plt>
    b4d0:	b	b40c <PySequence_Fast@plt+0x71cc>
    b4d4:	bl	50f0 <PySequence_Fast@plt+0xeb0>
    b4d8:	mov	x19, x0
    b4dc:	b	b4a0 <PySequence_Fast@plt+0x7260>
    b4e0:	mov	x3, #0x0                   	// #0
    b4e4:	mov	x2, #0x1                   	// #1
    b4e8:	add	x1, sp, #0x38
    b4ec:	mov	x0, x19
    b4f0:	bl	41d0 <_PyObject_MakeTpCall@plt>
    b4f4:	mov	x19, x0
    b4f8:	b	b4a0 <PySequence_Fast@plt+0x7260>
    b4fc:	ldr	x0, [x1]
    b500:	sub	x0, x0, #0x1
    b504:	str	x0, [x1]
    b508:	cbnz	x0, b40c <PySequence_Fast@plt+0x71cc>
    b50c:	mov	x0, x1
    b510:	bl	3d70 <_Py_Dealloc@plt>
    b514:	b	b4b4 <PySequence_Fast@plt+0x7274>
    b518:	stp	x29, x30, [sp, #-48]!
    b51c:	mov	x29, sp
    b520:	stp	x19, x20, [sp, #16]
    b524:	mov	x20, x0
    b528:	mov	x19, x1
    b52c:	bl	3f80 <PyErr_Occurred@plt>
    b530:	cbz	x0, b540 <PySequence_Fast@plt+0x7300>
    b534:	ldp	x19, x20, [sp, #16]
    b538:	ldp	x29, x30, [sp], #48
    b53c:	ret
    b540:	adrp	x0, d000 <PyInit__elementtree@@Base+0x6c8>
    b544:	add	x0, x0, #0x600
    b548:	cmp	x19, #0x0
    b54c:	csel	x19, x0, x19, eq  // eq = none
    b550:	ldr	x0, [x20, #24]
    b554:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x136c8>
    b558:	add	x1, x1, #0x320
    b55c:	ldr	x2, [x0, #8]
    b560:	add	x1, x1, #0x1b8
    b564:	cmp	x2, x1
    b568:	b.eq	b610 <PySequence_Fast@plt+0x73d0>  // b.none
    b56c:	ldr	x0, [x20, #56]
    b570:	cbz	x0, b534 <PySequence_Fast@plt+0x72f4>
    b574:	mov	x0, x19
    b578:	bl	3c70 <strlen@plt>
    b57c:	adrp	x2, c000 <PySequence_Fast@plt+0x7dc0>
    b580:	add	x2, x2, #0xca0
    b584:	mov	x1, x0
    b588:	mov	x0, x19
    b58c:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    b590:	str	x0, [sp, #40]
    b594:	cbz	x0, b534 <PySequence_Fast@plt+0x72f4>
    b598:	ldr	x19, [x20, #56]
    b59c:	ldr	x0, [x19, #8]
    b5a0:	ldr	x1, [x0, #56]
    b5a4:	ldr	x0, [x0, #168]
    b5a8:	tbz	w0, #11, b648 <PySequence_Fast@plt+0x7408>
    b5ac:	ldr	x4, [x19, x1]
    b5b0:	cbz	x4, b648 <PySequence_Fast@plt+0x7408>
    b5b4:	mov	x3, #0x0                   	// #0
    b5b8:	mov	x2, #0x1                   	// #1
    b5bc:	add	x1, sp, #0x28
    b5c0:	mov	x0, x19
    b5c4:	blr	x4
    b5c8:	mov	x2, #0x0                   	// #0
    b5cc:	mov	x1, x0
    b5d0:	mov	x0, x19
    b5d4:	bl	4020 <_Py_CheckFunctionResult@plt>
    b5d8:	mov	x19, x0
    b5dc:	ldr	x0, [sp, #40]
    b5e0:	ldr	x1, [x0]
    b5e4:	sub	x1, x1, #0x1
    b5e8:	str	x1, [x0]
    b5ec:	cbz	x1, b664 <PySequence_Fast@plt+0x7424>
    b5f0:	cbz	x19, b534 <PySequence_Fast@plt+0x72f4>
    b5f4:	ldr	x0, [x19]
    b5f8:	sub	x0, x0, #0x1
    b5fc:	str	x0, [x19]
    b600:	cbnz	x0, b534 <PySequence_Fast@plt+0x72f4>
    b604:	mov	x0, x19
    b608:	bl	3d70 <_Py_Dealloc@plt>
    b60c:	b	b534 <PySequence_Fast@plt+0x72f4>
    b610:	ldr	x1, [x0, #96]
    b614:	cbz	x1, b534 <PySequence_Fast@plt+0x72f4>
    b618:	ldr	x1, [x0, #128]
    b61c:	cbz	x1, b534 <PySequence_Fast@plt+0x72f4>
    b620:	adrp	x2, 1f000 <PyInit__elementtree@@Base+0x126c8>
    b624:	ldr	x2, [x2, #3976]
    b628:	bl	9c48 <PySequence_Fast@plt+0x5a08>
    b62c:	tbnz	w0, #31, b534 <PySequence_Fast@plt+0x72f4>
    b630:	adrp	x19, 1f000 <PyInit__elementtree@@Base+0x126c8>
    b634:	ldr	x19, [x19, #3976]
    b638:	ldr	x0, [x19]
    b63c:	add	x0, x0, #0x1
    b640:	str	x0, [x19]
    b644:	b	b5f4 <PySequence_Fast@plt+0x73b4>
    b648:	mov	x3, #0x0                   	// #0
    b64c:	mov	x2, #0x1                   	// #1
    b650:	add	x1, sp, #0x28
    b654:	mov	x0, x19
    b658:	bl	41d0 <_PyObject_MakeTpCall@plt>
    b65c:	mov	x19, x0
    b660:	b	b5dc <PySequence_Fast@plt+0x739c>
    b664:	bl	3d70 <_Py_Dealloc@plt>
    b668:	b	b5f0 <PySequence_Fast@plt+0x73b0>
    b66c:	stp	x29, x30, [sp, #-64]!
    b670:	mov	x29, sp
    b674:	stp	x19, x20, [sp, #16]
    b678:	mov	x20, x0
    b67c:	mov	x19, x1
    b680:	bl	3f80 <PyErr_Occurred@plt>
    b684:	cbz	x0, b694 <PySequence_Fast@plt+0x7454>
    b688:	ldp	x19, x20, [sp, #16]
    b68c:	ldp	x29, x30, [sp], #64
    b690:	ret
    b694:	str	x21, [sp, #32]
    b698:	ldr	x21, [x20, #24]
    b69c:	adrp	x2, 20000 <PyInit__elementtree@@Base+0x136c8>
    b6a0:	add	x2, x2, #0x320
    b6a4:	ldr	x0, [x21, #8]
    b6a8:	add	x2, x2, #0x1b8
    b6ac:	cmp	x0, x2
    b6b0:	b.eq	b750 <PySequence_Fast@plt+0x7510>  // b.none
    b6b4:	ldr	x0, [x20, #88]
    b6b8:	cbz	x0, b7f8 <PySequence_Fast@plt+0x75b8>
    b6bc:	mov	x0, x19
    b6c0:	bl	3c70 <strlen@plt>
    b6c4:	adrp	x2, c000 <PySequence_Fast@plt+0x7dc0>
    b6c8:	add	x2, x2, #0xca0
    b6cc:	mov	x1, x0
    b6d0:	mov	x0, x19
    b6d4:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    b6d8:	str	x0, [sp, #56]
    b6dc:	cbz	x0, b800 <PySequence_Fast@plt+0x75c0>
    b6e0:	ldr	x19, [x20, #88]
    b6e4:	ldr	x0, [x19, #8]
    b6e8:	ldr	x1, [x0, #56]
    b6ec:	ldr	x0, [x0, #168]
    b6f0:	tbz	w0, #11, b7c4 <PySequence_Fast@plt+0x7584>
    b6f4:	ldr	x4, [x19, x1]
    b6f8:	cbz	x4, b7c4 <PySequence_Fast@plt+0x7584>
    b6fc:	mov	x3, #0x0                   	// #0
    b700:	mov	x2, #0x1                   	// #1
    b704:	add	x1, sp, #0x38
    b708:	mov	x0, x19
    b70c:	blr	x4
    b710:	mov	x2, #0x0                   	// #0
    b714:	mov	x1, x0
    b718:	mov	x0, x19
    b71c:	bl	4020 <_Py_CheckFunctionResult@plt>
    b720:	cbz	x0, b734 <PySequence_Fast@plt+0x74f4>
    b724:	ldr	x1, [x0]
    b728:	sub	x1, x1, #0x1
    b72c:	str	x1, [x0]
    b730:	cbz	x1, b7dc <PySequence_Fast@plt+0x759c>
    b734:	ldr	x0, [sp, #56]
    b738:	ldr	x1, [x0]
    b73c:	sub	x1, x1, #0x1
    b740:	str	x1, [x0]
    b744:	cbz	x1, b7e4 <PySequence_Fast@plt+0x75a4>
    b748:	ldr	x21, [sp, #32]
    b74c:	b	b688 <PySequence_Fast@plt+0x7448>
    b750:	mov	x0, x19
    b754:	bl	3c70 <strlen@plt>
    b758:	adrp	x2, c000 <PySequence_Fast@plt+0x7dc0>
    b75c:	add	x2, x2, #0xca0
    b760:	mov	x1, x0
    b764:	mov	x0, x19
    b768:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    b76c:	mov	x1, x0
    b770:	str	x0, [sp, #56]
    b774:	cbz	x0, b7f0 <PySequence_Fast@plt+0x75b0>
    b778:	mov	x0, x21
    b77c:	bl	ab3c <PySequence_Fast@plt+0x68fc>
    b780:	cbz	x0, b794 <PySequence_Fast@plt+0x7554>
    b784:	ldr	x1, [x0]
    b788:	sub	x1, x1, #0x1
    b78c:	str	x1, [x0]
    b790:	cbz	x1, b7b0 <PySequence_Fast@plt+0x7570>
    b794:	ldr	x0, [sp, #56]
    b798:	ldr	x1, [x0]
    b79c:	sub	x1, x1, #0x1
    b7a0:	str	x1, [x0]
    b7a4:	cbz	x1, b7b8 <PySequence_Fast@plt+0x7578>
    b7a8:	ldr	x21, [sp, #32]
    b7ac:	b	b688 <PySequence_Fast@plt+0x7448>
    b7b0:	bl	3d70 <_Py_Dealloc@plt>
    b7b4:	b	b794 <PySequence_Fast@plt+0x7554>
    b7b8:	bl	3d70 <_Py_Dealloc@plt>
    b7bc:	ldr	x21, [sp, #32]
    b7c0:	b	b688 <PySequence_Fast@plt+0x7448>
    b7c4:	mov	x3, #0x0                   	// #0
    b7c8:	mov	x2, #0x1                   	// #1
    b7cc:	add	x1, sp, #0x38
    b7d0:	mov	x0, x19
    b7d4:	bl	41d0 <_PyObject_MakeTpCall@plt>
    b7d8:	b	b720 <PySequence_Fast@plt+0x74e0>
    b7dc:	bl	3d70 <_Py_Dealloc@plt>
    b7e0:	b	b734 <PySequence_Fast@plt+0x74f4>
    b7e4:	bl	3d70 <_Py_Dealloc@plt>
    b7e8:	ldr	x21, [sp, #32]
    b7ec:	b	b688 <PySequence_Fast@plt+0x7448>
    b7f0:	ldr	x21, [sp, #32]
    b7f4:	b	b688 <PySequence_Fast@plt+0x7448>
    b7f8:	ldr	x21, [sp, #32]
    b7fc:	b	b688 <PySequence_Fast@plt+0x7448>
    b800:	ldr	x21, [sp, #32]
    b804:	b	b688 <PySequence_Fast@plt+0x7448>
    b808:	stp	x29, x30, [sp, #-80]!
    b80c:	mov	x29, sp
    b810:	stp	x19, x20, [sp, #16]
    b814:	stp	x21, x22, [sp, #32]
    b818:	mov	x22, x0
    b81c:	mov	x19, x1
    b820:	mov	x20, x2
    b824:	bl	3f80 <PyErr_Occurred@plt>
    b828:	cbz	x0, b83c <PySequence_Fast@plt+0x75fc>
    b82c:	ldp	x19, x20, [sp, #16]
    b830:	ldp	x21, x22, [sp, #32]
    b834:	ldp	x29, x30, [sp], #80
    b838:	ret
    b83c:	str	x23, [sp, #48]
    b840:	mov	x21, x0
    b844:	adrp	x0, d000 <PyInit__elementtree@@Base+0x6c8>
    b848:	add	x0, x0, #0x600
    b84c:	cmp	x20, #0x0
    b850:	csel	x20, x0, x20, eq  // eq = none
    b854:	adrp	x0, d000 <PyInit__elementtree@@Base+0x6c8>
    b858:	add	x0, x0, #0x600
    b85c:	cmp	x19, #0x0
    b860:	csel	x19, x0, x19, eq  // eq = none
    b864:	ldr	x23, [x22, #24]
    b868:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x136c8>
    b86c:	add	x1, x1, #0x320
    b870:	ldr	x0, [x23, #8]
    b874:	add	x1, x1, #0x1b8
    b878:	cmp	x0, x1
    b87c:	b.eq	b958 <PySequence_Fast@plt+0x7718>  // b.none
    b880:	ldr	x0, [x22, #48]
    b884:	cbz	x0, bb28 <PySequence_Fast@plt+0x78e8>
    b888:	mov	x0, x19
    b88c:	bl	3c70 <strlen@plt>
    b890:	adrp	x2, c000 <PySequence_Fast@plt+0x7dc0>
    b894:	add	x2, x2, #0xca0
    b898:	mov	x1, x0
    b89c:	mov	x0, x19
    b8a0:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    b8a4:	mov	x19, x0
    b8a8:	cbz	x0, bb30 <PySequence_Fast@plt+0x78f0>
    b8ac:	mov	x0, x20
    b8b0:	bl	3c70 <strlen@plt>
    b8b4:	adrp	x2, c000 <PySequence_Fast@plt+0x7dc0>
    b8b8:	add	x2, x2, #0xca0
    b8bc:	mov	x1, x0
    b8c0:	mov	x0, x20
    b8c4:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    b8c8:	mov	x20, x0
    b8cc:	cbz	x0, baa4 <PySequence_Fast@plt+0x7864>
    b8d0:	str	x19, [sp, #64]
    b8d4:	str	x0, [sp, #72]
    b8d8:	ldr	x21, [x22, #48]
    b8dc:	ldr	x0, [x21, #8]
    b8e0:	ldr	x1, [x0, #56]
    b8e4:	ldr	x0, [x0, #168]
    b8e8:	tbz	w0, #11, bacc <PySequence_Fast@plt+0x788c>
    b8ec:	ldr	x4, [x21, x1]
    b8f0:	cbz	x4, bacc <PySequence_Fast@plt+0x788c>
    b8f4:	mov	x3, #0x0                   	// #0
    b8f8:	mov	x2, #0x2                   	// #2
    b8fc:	add	x1, sp, #0x40
    b900:	mov	x0, x21
    b904:	blr	x4
    b908:	mov	x2, #0x0                   	// #0
    b90c:	mov	x1, x0
    b910:	mov	x0, x21
    b914:	bl	4020 <_Py_CheckFunctionResult@plt>
    b918:	mov	x22, x0
    b91c:	ldr	x0, [x20]
    b920:	sub	x0, x0, #0x1
    b924:	str	x0, [x20]
    b928:	cbz	x0, bae8 <PySequence_Fast@plt+0x78a8>
    b92c:	ldr	x0, [x19]
    b930:	sub	x0, x0, #0x1
    b934:	str	x0, [x19]
    b938:	cbz	x0, baf4 <PySequence_Fast@plt+0x78b4>
    b93c:	cbz	x22, bb38 <PySequence_Fast@plt+0x78f8>
    b940:	ldr	x0, [x22]
    b944:	sub	x0, x0, #0x1
    b948:	str	x0, [x22]
    b94c:	cbz	x0, bb00 <PySequence_Fast@plt+0x78c0>
    b950:	ldr	x23, [sp, #48]
    b954:	b	b82c <PySequence_Fast@plt+0x75ec>
    b958:	ldr	x0, [x23, #96]
    b95c:	cbz	x0, bb10 <PySequence_Fast@plt+0x78d0>
    b960:	ldr	x0, [x23, #120]
    b964:	cbz	x0, bb18 <PySequence_Fast@plt+0x78d8>
    b968:	mov	x0, x19
    b96c:	bl	3c70 <strlen@plt>
    b970:	adrp	x2, c000 <PySequence_Fast@plt+0x7dc0>
    b974:	add	x2, x2, #0xca0
    b978:	mov	x1, x0
    b97c:	mov	x0, x19
    b980:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    b984:	mov	x19, x0
    b988:	cbz	x0, bb20 <PySequence_Fast@plt+0x78e0>
    b98c:	mov	x0, x20
    b990:	bl	3c70 <strlen@plt>
    b994:	adrp	x2, c000 <PySequence_Fast@plt+0x7dc0>
    b998:	add	x2, x2, #0xca0
    b99c:	mov	x1, x0
    b9a0:	mov	x0, x20
    b9a4:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    b9a8:	mov	x20, x0
    b9ac:	cbz	x0, ba3c <PySequence_Fast@plt+0x77fc>
    b9b0:	ldr	x0, [x23, #96]
    b9b4:	cbz	x0, b9fc <PySequence_Fast@plt+0x77bc>
    b9b8:	ldr	x0, [x23, #120]
    b9bc:	cbz	x0, b9fc <PySequence_Fast@plt+0x77bc>
    b9c0:	mov	x2, x20
    b9c4:	mov	x1, x19
    b9c8:	mov	x0, #0x2                   	// #2
    b9cc:	bl	4210 <PyTuple_Pack@plt>
    b9d0:	mov	x22, x0
    b9d4:	cbz	x0, ba10 <PySequence_Fast@plt+0x77d0>
    b9d8:	mov	x2, x0
    b9dc:	ldr	x1, [x23, #120]
    b9e0:	mov	x0, x23
    b9e4:	bl	9c48 <PySequence_Fast@plt+0x5a08>
    b9e8:	tbnz	w0, #31, ba64 <PySequence_Fast@plt+0x7824>
    b9ec:	ldr	x0, [x22]
    b9f0:	sub	x0, x0, #0x1
    b9f4:	str	x0, [x22]
    b9f8:	cbz	x0, ba8c <PySequence_Fast@plt+0x784c>
    b9fc:	adrp	x22, 1f000 <PyInit__elementtree@@Base+0x126c8>
    ba00:	ldr	x22, [x22, #3976]
    ba04:	ldr	x0, [x22]
    ba08:	add	x0, x0, #0x1
    ba0c:	str	x0, [x22]
    ba10:	ldr	x0, [x20]
    ba14:	sub	x0, x0, #0x1
    ba18:	str	x0, [x20]
    ba1c:	cbz	x0, ba98 <PySequence_Fast@plt+0x7858>
    ba20:	ldr	x0, [x19]
    ba24:	sub	x0, x0, #0x1
    ba28:	str	x0, [x19]
    ba2c:	cbnz	x0, b93c <PySequence_Fast@plt+0x76fc>
    ba30:	mov	x0, x19
    ba34:	bl	3d70 <_Py_Dealloc@plt>
    ba38:	b	b93c <PySequence_Fast@plt+0x76fc>
    ba3c:	ldr	x0, [x19]
    ba40:	sub	x0, x0, #0x1
    ba44:	str	x0, [x19]
    ba48:	cbz	x0, ba54 <PySequence_Fast@plt+0x7814>
    ba4c:	ldr	x23, [sp, #48]
    ba50:	b	b82c <PySequence_Fast@plt+0x75ec>
    ba54:	mov	x0, x19
    ba58:	bl	3d70 <_Py_Dealloc@plt>
    ba5c:	ldr	x23, [sp, #48]
    ba60:	b	b82c <PySequence_Fast@plt+0x75ec>
    ba64:	ldr	x0, [x22]
    ba68:	sub	x0, x0, #0x1
    ba6c:	str	x0, [x22]
    ba70:	cbz	x0, ba7c <PySequence_Fast@plt+0x783c>
    ba74:	mov	x22, x21
    ba78:	b	ba10 <PySequence_Fast@plt+0x77d0>
    ba7c:	mov	x0, x22
    ba80:	bl	3d70 <_Py_Dealloc@plt>
    ba84:	mov	x22, x21
    ba88:	b	ba10 <PySequence_Fast@plt+0x77d0>
    ba8c:	mov	x0, x22
    ba90:	bl	3d70 <_Py_Dealloc@plt>
    ba94:	b	b9fc <PySequence_Fast@plt+0x77bc>
    ba98:	mov	x0, x20
    ba9c:	bl	3d70 <_Py_Dealloc@plt>
    baa0:	b	ba20 <PySequence_Fast@plt+0x77e0>
    baa4:	ldr	x0, [x19]
    baa8:	sub	x0, x0, #0x1
    baac:	str	x0, [x19]
    bab0:	cbz	x0, babc <PySequence_Fast@plt+0x787c>
    bab4:	ldr	x23, [sp, #48]
    bab8:	b	b82c <PySequence_Fast@plt+0x75ec>
    babc:	mov	x0, x19
    bac0:	bl	3d70 <_Py_Dealloc@plt>
    bac4:	ldr	x23, [sp, #48]
    bac8:	b	b82c <PySequence_Fast@plt+0x75ec>
    bacc:	mov	x3, #0x0                   	// #0
    bad0:	mov	x2, #0x2                   	// #2
    bad4:	add	x1, sp, #0x40
    bad8:	mov	x0, x21
    badc:	bl	41d0 <_PyObject_MakeTpCall@plt>
    bae0:	mov	x22, x0
    bae4:	b	b91c <PySequence_Fast@plt+0x76dc>
    bae8:	mov	x0, x20
    baec:	bl	3d70 <_Py_Dealloc@plt>
    baf0:	b	b92c <PySequence_Fast@plt+0x76ec>
    baf4:	mov	x0, x19
    baf8:	bl	3d70 <_Py_Dealloc@plt>
    bafc:	b	b93c <PySequence_Fast@plt+0x76fc>
    bb00:	mov	x0, x22
    bb04:	bl	3d70 <_Py_Dealloc@plt>
    bb08:	ldr	x23, [sp, #48]
    bb0c:	b	b82c <PySequence_Fast@plt+0x75ec>
    bb10:	ldr	x23, [sp, #48]
    bb14:	b	b82c <PySequence_Fast@plt+0x75ec>
    bb18:	ldr	x23, [sp, #48]
    bb1c:	b	b82c <PySequence_Fast@plt+0x75ec>
    bb20:	ldr	x23, [sp, #48]
    bb24:	b	b82c <PySequence_Fast@plt+0x75ec>
    bb28:	ldr	x23, [sp, #48]
    bb2c:	b	b82c <PySequence_Fast@plt+0x75ec>
    bb30:	ldr	x23, [sp, #48]
    bb34:	b	b82c <PySequence_Fast@plt+0x75ec>
    bb38:	ldr	x23, [sp, #48]
    bb3c:	b	b82c <PySequence_Fast@plt+0x75ec>
    bb40:	stp	x29, x30, [sp, #-64]!
    bb44:	mov	x29, sp
    bb48:	stp	x19, x20, [sp, #16]
    bb4c:	stp	x21, x22, [sp, #32]
    bb50:	mov	x21, x0
    bb54:	mov	x20, x1
    bb58:	mov	x19, x2
    bb5c:	bl	3f80 <PyErr_Occurred@plt>
    bb60:	cbz	x0, bb74 <PySequence_Fast@plt+0x7934>
    bb64:	ldp	x19, x20, [sp, #16]
    bb68:	ldp	x21, x22, [sp, #32]
    bb6c:	ldp	x29, x30, [sp], #64
    bb70:	ret
    bb74:	ldr	x22, [x21, #24]
    bb78:	adrp	x3, 20000 <PyInit__elementtree@@Base+0x136c8>
    bb7c:	add	x3, x3, #0x320
    bb80:	ldr	x0, [x22, #8]
    bb84:	add	x3, x3, #0x1b8
    bb88:	cmp	x0, x3
    bb8c:	b.eq	bc68 <PySequence_Fast@plt+0x7a28>  // b.none
    bb90:	ldr	x0, [x21, #96]
    bb94:	cbz	x0, bb64 <PySequence_Fast@plt+0x7924>
    bb98:	mov	x0, x20
    bb9c:	bl	3c70 <strlen@plt>
    bba0:	adrp	x2, c000 <PySequence_Fast@plt+0x7dc0>
    bba4:	add	x2, x2, #0xca0
    bba8:	mov	x1, x0
    bbac:	mov	x0, x20
    bbb0:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    bbb4:	mov	x20, x0
    bbb8:	cbz	x0, bb64 <PySequence_Fast@plt+0x7924>
    bbbc:	mov	x0, x19
    bbc0:	bl	3c70 <strlen@plt>
    bbc4:	adrp	x2, c000 <PySequence_Fast@plt+0x7dc0>
    bbc8:	add	x2, x2, #0xca0
    bbcc:	mov	x1, x0
    bbd0:	mov	x0, x19
    bbd4:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    bbd8:	mov	x19, x0
    bbdc:	cbz	x0, bd5c <PySequence_Fast@plt+0x7b1c>
    bbe0:	str	x20, [sp, #48]
    bbe4:	str	x0, [sp, #56]
    bbe8:	ldr	x21, [x21, #96]
    bbec:	ldr	x0, [x21, #8]
    bbf0:	ldr	x1, [x0, #56]
    bbf4:	ldr	x0, [x0, #168]
    bbf8:	tbz	w0, #11, bd30 <PySequence_Fast@plt+0x7af0>
    bbfc:	ldr	x4, [x21, x1]
    bc00:	cbz	x4, bd30 <PySequence_Fast@plt+0x7af0>
    bc04:	mov	x3, #0x0                   	// #0
    bc08:	mov	x2, #0x2                   	// #2
    bc0c:	add	x1, sp, #0x30
    bc10:	mov	x0, x21
    bc14:	blr	x4
    bc18:	mov	x2, #0x0                   	// #0
    bc1c:	mov	x1, x0
    bc20:	mov	x0, x21
    bc24:	bl	4020 <_Py_CheckFunctionResult@plt>
    bc28:	cbz	x0, bc3c <PySequence_Fast@plt+0x79fc>
    bc2c:	ldr	x1, [x0]
    bc30:	sub	x1, x1, #0x1
    bc34:	str	x1, [x0]
    bc38:	cbz	x1, bd48 <PySequence_Fast@plt+0x7b08>
    bc3c:	ldr	x0, [x19]
    bc40:	sub	x0, x0, #0x1
    bc44:	str	x0, [x19]
    bc48:	cbz	x0, bd50 <PySequence_Fast@plt+0x7b10>
    bc4c:	ldr	x0, [x20]
    bc50:	sub	x0, x0, #0x1
    bc54:	str	x0, [x20]
    bc58:	cbnz	x0, bb64 <PySequence_Fast@plt+0x7924>
    bc5c:	mov	x0, x20
    bc60:	bl	3d70 <_Py_Dealloc@plt>
    bc64:	b	bb64 <PySequence_Fast@plt+0x7924>
    bc68:	ldr	x0, [x22, #96]
    bc6c:	cbz	x0, bd10 <PySequence_Fast@plt+0x7ad0>
    bc70:	ldr	x0, [x22, #144]
    bc74:	cbz	x0, bd10 <PySequence_Fast@plt+0x7ad0>
    bc78:	mov	x0, x20
    bc7c:	bl	3c70 <strlen@plt>
    bc80:	adrp	x2, c000 <PySequence_Fast@plt+0x7dc0>
    bc84:	add	x2, x2, #0xca0
    bc88:	mov	x1, x0
    bc8c:	mov	x0, x20
    bc90:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    bc94:	mov	x20, x0
    bc98:	cbz	x0, bb64 <PySequence_Fast@plt+0x7924>
    bc9c:	mov	x0, x19
    bca0:	bl	3c70 <strlen@plt>
    bca4:	adrp	x2, c000 <PySequence_Fast@plt+0x7dc0>
    bca8:	add	x2, x2, #0xca0
    bcac:	mov	x1, x0
    bcb0:	mov	x0, x19
    bcb4:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    bcb8:	mov	x19, x0
    bcbc:	cbz	x0, bd5c <PySequence_Fast@plt+0x7b1c>
    bcc0:	mov	x2, x0
    bcc4:	mov	x1, x20
    bcc8:	mov	x0, x22
    bccc:	bl	a950 <PySequence_Fast@plt+0x6710>
    bcd0:	cbz	x0, bce4 <PySequence_Fast@plt+0x7aa4>
    bcd4:	ldr	x1, [x0]
    bcd8:	sub	x1, x1, #0x1
    bcdc:	str	x1, [x0]
    bce0:	cbz	x1, bd1c <PySequence_Fast@plt+0x7adc>
    bce4:	ldr	x0, [x19]
    bce8:	sub	x0, x0, #0x1
    bcec:	str	x0, [x19]
    bcf0:	cbz	x0, bd24 <PySequence_Fast@plt+0x7ae4>
    bcf4:	ldr	x0, [x20]
    bcf8:	sub	x0, x0, #0x1
    bcfc:	str	x0, [x20]
    bd00:	cbnz	x0, bb64 <PySequence_Fast@plt+0x7924>
    bd04:	mov	x0, x20
    bd08:	bl	3d70 <_Py_Dealloc@plt>
    bd0c:	b	bb64 <PySequence_Fast@plt+0x7924>
    bd10:	ldrb	w0, [x22, #153]
    bd14:	cbz	w0, bb64 <PySequence_Fast@plt+0x7924>
    bd18:	b	bc78 <PySequence_Fast@plt+0x7a38>
    bd1c:	bl	3d70 <_Py_Dealloc@plt>
    bd20:	b	bce4 <PySequence_Fast@plt+0x7aa4>
    bd24:	mov	x0, x19
    bd28:	bl	3d70 <_Py_Dealloc@plt>
    bd2c:	b	bcf4 <PySequence_Fast@plt+0x7ab4>
    bd30:	mov	x3, #0x0                   	// #0
    bd34:	mov	x2, #0x2                   	// #2
    bd38:	add	x1, sp, #0x30
    bd3c:	mov	x0, x21
    bd40:	bl	41d0 <_PyObject_MakeTpCall@plt>
    bd44:	b	bc28 <PySequence_Fast@plt+0x79e8>
    bd48:	bl	3d70 <_Py_Dealloc@plt>
    bd4c:	b	bc3c <PySequence_Fast@plt+0x79fc>
    bd50:	mov	x0, x19
    bd54:	bl	3d70 <_Py_Dealloc@plt>
    bd58:	b	bc4c <PySequence_Fast@plt+0x7a0c>
    bd5c:	ldr	x0, [x20]
    bd60:	sub	x0, x0, #0x1
    bd64:	str	x0, [x20]
    bd68:	cbnz	x0, bb64 <PySequence_Fast@plt+0x7924>
    bd6c:	mov	x0, x20
    bd70:	bl	3d70 <_Py_Dealloc@plt>
    bd74:	b	bb64 <PySequence_Fast@plt+0x7924>
    bd78:	stp	x29, x30, [sp, #-80]!
    bd7c:	mov	x29, sp
    bd80:	stp	x19, x20, [sp, #16]
    bd84:	stp	x21, x22, [sp, #32]
    bd88:	mov	x22, x0
    bd8c:	mov	x0, x1
    bd90:	adrp	x1, d000 <PyInit__elementtree@@Base+0x6c8>
    bd94:	add	x1, x1, #0x250
    bd98:	bl	3d00 <PyObject_GetAttrString@plt>
    bd9c:	mov	x21, x0
    bda0:	cbz	x0, c098 <PySequence_Fast@plt+0x7e58>
    bda4:	stp	x23, x24, [sp, #48]
    bda8:	stp	x25, x26, [sp, #64]
    bdac:	adrp	x23, d000 <PyInit__elementtree@@Base+0x6c8>
    bdb0:	add	x23, x23, #0x258
    bdb4:	adrp	x24, 1f000 <PyInit__elementtree@@Base+0x126c8>
    bdb8:	ldr	x24, [x24, #4032]
    bdbc:	adrp	x26, 1f000 <PyInit__elementtree@@Base+0x126c8>
    bdc0:	b	bfbc <PySequence_Fast@plt+0x7d7c>
    bdc4:	ldr	x0, [x21]
    bdc8:	sub	x0, x0, #0x1
    bdcc:	str	x0, [x21]
    bdd0:	cbz	x0, bde0 <PySequence_Fast@plt+0x7ba0>
    bdd4:	ldp	x23, x24, [sp, #48]
    bdd8:	ldp	x25, x26, [sp, #64]
    bddc:	b	bef4 <PySequence_Fast@plt+0x7cb4>
    bde0:	mov	x0, x21
    bde4:	bl	3d70 <_Py_Dealloc@plt>
    bde8:	ldp	x23, x24, [sp, #48]
    bdec:	ldp	x25, x26, [sp, #64]
    bdf0:	b	bef4 <PySequence_Fast@plt+0x7cb4>
    bdf4:	ldr	x0, [x19, #16]
    bdf8:	cbz	x0, be34 <PySequence_Fast@plt+0x7bf4>
    bdfc:	adrp	x2, d000 <PyInit__elementtree@@Base+0x6c8>
    be00:	add	x2, x2, #0x260
    be04:	adrp	x1, d000 <PyInit__elementtree@@Base+0x6c8>
    be08:	add	x1, x1, #0x248
    be0c:	mov	x0, x19
    be10:	bl	3e20 <PyUnicode_AsEncodedString@plt>
    be14:	mov	x20, x0
    be18:	ldr	x0, [x19]
    be1c:	sub	x0, x0, #0x1
    be20:	str	x0, [x19]
    be24:	cbz	x0, be50 <PySequence_Fast@plt+0x7c10>
    be28:	cbz	x20, be5c <PySequence_Fast@plt+0x7c1c>
    be2c:	mov	x19, x20
    be30:	b	bff4 <PySequence_Fast@plt+0x7db4>
    be34:	ldr	x0, [x19]
    be38:	sub	x0, x0, #0x1
    be3c:	str	x0, [x19]
    be40:	cbnz	x0, bea0 <PySequence_Fast@plt+0x7c60>
    be44:	mov	x0, x19
    be48:	bl	3d70 <_Py_Dealloc@plt>
    be4c:	b	bea0 <PySequence_Fast@plt+0x7c60>
    be50:	mov	x0, x19
    be54:	bl	3d70 <_Py_Dealloc@plt>
    be58:	b	be28 <PySequence_Fast@plt+0x7be8>
    be5c:	ldr	x0, [x21]
    be60:	sub	x0, x0, #0x1
    be64:	str	x0, [x21]
    be68:	mov	x19, x20
    be6c:	cbz	x0, be7c <PySequence_Fast@plt+0x7c3c>
    be70:	ldp	x23, x24, [sp, #48]
    be74:	ldp	x25, x26, [sp, #64]
    be78:	b	bef4 <PySequence_Fast@plt+0x7cb4>
    be7c:	mov	x0, x21
    be80:	bl	3d70 <_Py_Dealloc@plt>
    be84:	ldp	x23, x24, [sp, #48]
    be88:	ldp	x25, x26, [sp, #64]
    be8c:	b	bef4 <PySequence_Fast@plt+0x7cb4>
    be90:	ldr	x0, [x19]
    be94:	sub	x0, x0, #0x1
    be98:	str	x0, [x19]
    be9c:	cbz	x0, bf08 <PySequence_Fast@plt+0x7cc8>
    bea0:	ldr	x0, [x21]
    bea4:	sub	x0, x0, #0x1
    bea8:	str	x0, [x21]
    beac:	cbz	x0, c040 <PySequence_Fast@plt+0x7e00>
    beb0:	mov	w3, #0x1                   	// #1
    beb4:	mov	w2, #0x0                   	// #0
    beb8:	adrp	x1, d000 <PyInit__elementtree@@Base+0x6c8>
    bebc:	add	x1, x1, #0x600
    bec0:	mov	x0, x22
    bec4:	bl	af1c <PySequence_Fast@plt+0x6cdc>
    bec8:	mov	x19, x0
    becc:	cbz	x0, c0a0 <PySequence_Fast@plt+0x7e60>
    bed0:	ldr	x1, [x22, #24]
    bed4:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x136c8>
    bed8:	add	x0, x0, #0x320
    bedc:	ldr	x1, [x1, #8]
    bee0:	add	x0, x0, #0x1b8
    bee4:	cmp	x1, x0
    bee8:	b.eq	c04c <PySequence_Fast@plt+0x7e0c>  // b.none
    beec:	ldp	x23, x24, [sp, #48]
    bef0:	ldp	x25, x26, [sp, #64]
    bef4:	mov	x0, x19
    bef8:	ldp	x19, x20, [sp, #16]
    befc:	ldp	x21, x22, [sp, #32]
    bf00:	ldp	x29, x30, [sp], #80
    bf04:	ret
    bf08:	mov	x0, x19
    bf0c:	bl	3d70 <_Py_Dealloc@plt>
    bf10:	b	bea0 <PySequence_Fast@plt+0x7c60>
    bf14:	ldr	x0, [x19]
    bf18:	sub	x0, x0, #0x1
    bf1c:	str	x0, [x19]
    bf20:	cbz	x0, bf5c <PySequence_Fast@plt+0x7d1c>
    bf24:	ldr	x0, [x21]
    bf28:	sub	x0, x0, #0x1
    bf2c:	str	x0, [x21]
    bf30:	cbz	x0, bf68 <PySequence_Fast@plt+0x7d28>
    bf34:	adrp	x1, d000 <PyInit__elementtree@@Base+0x6c8>
    bf38:	add	x1, x1, #0x228
    bf3c:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    bf40:	ldr	x0, [x0, #3968]
    bf44:	ldr	x0, [x0]
    bf48:	bl	3de0 <PyErr_SetString@plt>
    bf4c:	mov	x19, #0x0                   	// #0
    bf50:	ldp	x23, x24, [sp, #48]
    bf54:	ldp	x25, x26, [sp, #64]
    bf58:	b	bef4 <PySequence_Fast@plt+0x7cb4>
    bf5c:	mov	x0, x19
    bf60:	bl	3d70 <_Py_Dealloc@plt>
    bf64:	b	bf24 <PySequence_Fast@plt+0x7ce4>
    bf68:	mov	x0, x21
    bf6c:	bl	3d70 <_Py_Dealloc@plt>
    bf70:	b	bf34 <PySequence_Fast@plt+0x7cf4>
    bf74:	mov	x0, x19
    bf78:	bl	3d70 <_Py_Dealloc@plt>
    bf7c:	b	c028 <PySequence_Fast@plt+0x7de8>
    bf80:	ldr	x0, [x21]
    bf84:	sub	x0, x0, #0x1
    bf88:	str	x0, [x21]
    bf8c:	mov	x19, x20
    bf90:	cbz	x0, bfa0 <PySequence_Fast@plt+0x7d60>
    bf94:	ldp	x23, x24, [sp, #48]
    bf98:	ldp	x25, x26, [sp, #64]
    bf9c:	b	bef4 <PySequence_Fast@plt+0x7cb4>
    bfa0:	mov	x0, x21
    bfa4:	bl	3d70 <_Py_Dealloc@plt>
    bfa8:	ldp	x23, x24, [sp, #48]
    bfac:	ldp	x25, x26, [sp, #64]
    bfb0:	b	bef4 <PySequence_Fast@plt+0x7cb4>
    bfb4:	mov	x0, x20
    bfb8:	bl	3d70 <_Py_Dealloc@plt>
    bfbc:	ldr	x25, [x26, #3912]
    bfc0:	mov	w2, #0x10000               	// #65536
    bfc4:	mov	x1, x23
    bfc8:	mov	x0, x21
    bfcc:	bl	3db0 <_PyObject_CallFunction_SizeT@plt>
    bfd0:	mov	x19, x0
    bfd4:	cbz	x0, bdc4 <PySequence_Fast@plt+0x7b84>
    bfd8:	ldr	x0, [x0, #8]
    bfdc:	cmp	x0, x24
    bfe0:	b.eq	bdf4 <PySequence_Fast@plt+0x7bb4>  // b.none
    bfe4:	cmp	x0, x25
    bfe8:	b.ne	be90 <PySequence_Fast@plt+0x7c50>  // b.any
    bfec:	ldr	x0, [x19, #16]
    bff0:	cbz	x0, be90 <PySequence_Fast@plt+0x7c50>
    bff4:	ldr	x2, [x19, #16]
    bff8:	mov	x0, #0x7fffffff            	// #2147483647
    bffc:	cmp	x2, x0
    c000:	b.gt	bf14 <PySequence_Fast@plt+0x7cd4>
    c004:	mov	w3, #0x0                   	// #0
    c008:	add	x1, x19, #0x20
    c00c:	mov	x0, x22
    c010:	bl	af1c <PySequence_Fast@plt+0x6cdc>
    c014:	mov	x20, x0
    c018:	ldr	x1, [x19]
    c01c:	sub	x1, x1, #0x1
    c020:	str	x1, [x19]
    c024:	cbz	x1, bf74 <PySequence_Fast@plt+0x7d34>
    c028:	cbz	x20, bf80 <PySequence_Fast@plt+0x7d40>
    c02c:	ldr	x0, [x20]
    c030:	sub	x0, x0, #0x1
    c034:	str	x0, [x20]
    c038:	cbnz	x0, bfc0 <PySequence_Fast@plt+0x7d80>
    c03c:	b	bfb4 <PySequence_Fast@plt+0x7d74>
    c040:	mov	x0, x21
    c044:	bl	3d70 <_Py_Dealloc@plt>
    c048:	b	beb0 <PySequence_Fast@plt+0x7c70>
    c04c:	ldr	x0, [x19]
    c050:	sub	x0, x0, #0x1
    c054:	str	x0, [x19]
    c058:	cbz	x0, c08c <PySequence_Fast@plt+0x7e4c>
    c05c:	ldr	x0, [x22, #24]
    c060:	ldr	x19, [x0, #16]
    c064:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    c068:	ldr	x0, [x0, #3976]
    c06c:	cmp	x19, #0x0
    c070:	csel	x19, x0, x19, eq  // eq = none
    c074:	ldr	x0, [x19]
    c078:	add	x0, x0, #0x1
    c07c:	str	x0, [x19]
    c080:	ldp	x23, x24, [sp, #48]
    c084:	ldp	x25, x26, [sp, #64]
    c088:	b	bef4 <PySequence_Fast@plt+0x7cb4>
    c08c:	mov	x0, x19
    c090:	bl	3d70 <_Py_Dealloc@plt>
    c094:	b	c05c <PySequence_Fast@plt+0x7e1c>
    c098:	mov	x19, x0
    c09c:	b	bef4 <PySequence_Fast@plt+0x7cb4>
    c0a0:	ldp	x23, x24, [sp, #48]
    c0a4:	ldp	x25, x26, [sp, #64]
    c0a8:	b	bef4 <PySequence_Fast@plt+0x7cb4>
    c0ac:	stp	x29, x30, [sp, #-32]!
    c0b0:	mov	x29, sp
    c0b4:	str	x19, [sp, #16]
    c0b8:	mov	x19, x0
    c0bc:	mov	w3, #0x1                   	// #1
    c0c0:	mov	w2, #0x0                   	// #0
    c0c4:	adrp	x1, d000 <PyInit__elementtree@@Base+0x6c8>
    c0c8:	add	x1, x1, #0x600
    c0cc:	bl	af1c <PySequence_Fast@plt+0x6cdc>
    c0d0:	cbz	x0, c148 <PySequence_Fast@plt+0x7f08>
    c0d4:	ldr	x2, [x19, #24]
    c0d8:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x136c8>
    c0dc:	add	x1, x1, #0x320
    c0e0:	ldr	x2, [x2, #8]
    c0e4:	add	x1, x1, #0x1b8
    c0e8:	cmp	x2, x1
    c0ec:	b.eq	c154 <PySequence_Fast@plt+0x7f14>  // b.none
    c0f0:	ldr	x1, [x19, #112]
    c0f4:	cbz	x1, c148 <PySequence_Fast@plt+0x7f08>
    c0f8:	ldr	x1, [x0]
    c0fc:	sub	x1, x1, #0x1
    c100:	str	x1, [x0]
    c104:	cbz	x1, c194 <PySequence_Fast@plt+0x7f54>
    c108:	ldr	x19, [x19, #112]
    c10c:	ldr	x0, [x19, #8]
    c110:	ldr	x1, [x0, #56]
    c114:	ldr	x0, [x0, #168]
    c118:	tbz	w0, #11, c19c <PySequence_Fast@plt+0x7f5c>
    c11c:	ldr	x4, [x19, x1]
    c120:	cbz	x4, c19c <PySequence_Fast@plt+0x7f5c>
    c124:	mov	x3, #0x0                   	// #0
    c128:	mov	x2, #0x0                   	// #0
    c12c:	mov	x1, #0x0                   	// #0
    c130:	mov	x0, x19
    c134:	blr	x4
    c138:	mov	x2, #0x0                   	// #0
    c13c:	mov	x1, x0
    c140:	mov	x0, x19
    c144:	bl	4020 <_Py_CheckFunctionResult@plt>
    c148:	ldr	x19, [sp, #16]
    c14c:	ldp	x29, x30, [sp], #32
    c150:	ret
    c154:	ldr	x1, [x0]
    c158:	sub	x1, x1, #0x1
    c15c:	str	x1, [x0]
    c160:	cbz	x1, c18c <PySequence_Fast@plt+0x7f4c>
    c164:	ldr	x0, [x19, #24]
    c168:	ldr	x0, [x0, #16]
    c16c:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    c170:	ldr	x1, [x1, #3976]
    c174:	cmp	x0, #0x0
    c178:	csel	x0, x1, x0, eq  // eq = none
    c17c:	ldr	x1, [x0]
    c180:	add	x1, x1, #0x1
    c184:	str	x1, [x0]
    c188:	b	c148 <PySequence_Fast@plt+0x7f08>
    c18c:	bl	3d70 <_Py_Dealloc@plt>
    c190:	b	c164 <PySequence_Fast@plt+0x7f24>
    c194:	bl	3d70 <_Py_Dealloc@plt>
    c198:	b	c108 <PySequence_Fast@plt+0x7ec8>
    c19c:	mov	x3, #0x0                   	// #0
    c1a0:	mov	x2, #0x0                   	// #0
    c1a4:	mov	x1, #0x0                   	// #0
    c1a8:	mov	x0, x19
    c1ac:	bl	41d0 <_PyObject_MakeTpCall@plt>
    c1b0:	b	c148 <PySequence_Fast@plt+0x7f08>
    c1b4:	sub	sp, sp, #0xa0
    c1b8:	stp	x29, x30, [sp, #16]
    c1bc:	add	x29, sp, #0x10
    c1c0:	stp	x19, x20, [sp, #32]
    c1c4:	mov	x20, x0
    c1c8:	mov	x19, x1
    c1cc:	ldr	x1, [x1, #8]
    c1d0:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    c1d4:	ldr	x0, [x0, #3992]
    c1d8:	cmp	x1, x0
    c1dc:	b.ne	c260 <PySequence_Fast@plt+0x8020>  // b.any
    c1e0:	stp	x21, x22, [sp, #48]
    c1e4:	str	xzr, [sp, #152]
    c1e8:	str	xzr, [sp, #144]
    c1ec:	str	xzr, [sp, #136]
    c1f0:	str	xzr, [sp, #128]
    c1f4:	str	xzr, [sp, #120]
    c1f8:	mov	x0, #0x0                   	// #0
    c1fc:	bl	3f40 <PyTuple_New@plt>
    c200:	mov	x21, x0
    c204:	cbz	x0, c5bc <PySequence_Fast@plt+0x837c>
    c208:	add	x0, sp, #0x98
    c20c:	str	x0, [sp]
    c210:	add	x7, sp, #0x90
    c214:	add	x6, sp, #0x88
    c218:	add	x5, sp, #0x80
    c21c:	add	x4, sp, #0x78
    c220:	adrp	x3, 20000 <PyInit__elementtree@@Base+0x136c8>
    c224:	add	x3, x3, #0x9b8
    c228:	add	x3, x3, #0x368
    c22c:	adrp	x2, d000 <PyInit__elementtree@@Base+0x6c8>
    c230:	add	x2, x2, #0x2a8
    c234:	mov	x1, x19
    c238:	mov	x0, x21
    c23c:	bl	4070 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    c240:	mov	x19, #0x0                   	// #0
    c244:	cbnz	w0, c294 <PySequence_Fast@plt+0x8054>
    c248:	ldr	x0, [x21]
    c24c:	sub	x0, x0, #0x1
    c250:	str	x0, [x21]
    c254:	cbz	x0, c5ac <PySequence_Fast@plt+0x836c>
    c258:	ldp	x21, x22, [sp, #48]
    c25c:	b	c280 <PySequence_Fast@plt+0x8040>
    c260:	mov	x2, x19
    c264:	adrp	x1, d000 <PyInit__elementtree@@Base+0x6c8>
    c268:	add	x1, x1, #0x270
    c26c:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    c270:	ldr	x0, [x0, #3944]
    c274:	ldr	x0, [x0]
    c278:	bl	4180 <PyErr_Format@plt>
    c27c:	mov	x19, #0x0                   	// #0
    c280:	mov	x0, x19
    c284:	ldp	x19, x20, [sp, #32]
    c288:	ldp	x29, x30, [sp, #16]
    c28c:	add	sp, sp, #0xa0
    c290:	ret
    c294:	stp	x23, x24, [sp, #64]
    c298:	stp	x27, x28, [sp, #96]
    c29c:	ldr	x19, [sp, #120]
    c2a0:	ldr	x27, [sp, #128]
    c2a4:	ldr	x23, [sp, #136]
    c2a8:	ldr	x22, [sp, #144]
    c2ac:	ldr	x24, [sp, #152]
    c2b0:	cbz	x19, c3e0 <PySequence_Fast@plt+0x81a0>
    c2b4:	ldr	x0, [x19]
    c2b8:	add	x0, x0, #0x1
    c2bc:	str	x0, [x19]
    c2c0:	ldr	x0, [x20, #16]
    c2c4:	str	x19, [x20, #16]
    c2c8:	cbz	x0, c2dc <PySequence_Fast@plt+0x809c>
    c2cc:	ldr	x1, [x0]
    c2d0:	sub	x1, x1, #0x1
    c2d4:	str	x1, [x0]
    c2d8:	cbz	x1, c404 <PySequence_Fast@plt+0x81c4>
    c2dc:	cbz	x23, c40c <PySequence_Fast@plt+0x81cc>
    c2e0:	ldr	x1, [x23, #8]
    c2e4:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    c2e8:	ldr	x0, [x0, #4064]
    c2ec:	cmp	x1, x0
    c2f0:	cset	x1, eq  // eq = none
    c2f4:	and	x23, x23, #0xfffffffffffffffe
    c2f8:	orr	x1, x1, x23
    c2fc:	and	x2, x1, #0xfffffffffffffffe
    c300:	ldr	x0, [x2]
    c304:	add	x0, x0, #0x1
    c308:	str	x0, [x2]
    c30c:	ldr	x0, [x20, #24]
    c310:	and	x0, x0, #0xfffffffffffffffe
    c314:	str	x1, [x20, #24]
    c318:	ldr	x1, [x0]
    c31c:	sub	x1, x1, #0x1
    c320:	str	x1, [x0]
    c324:	cbz	x1, c418 <PySequence_Fast@plt+0x81d8>
    c328:	cbz	x22, c420 <PySequence_Fast@plt+0x81e0>
    c32c:	ldr	x1, [x22, #8]
    c330:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    c334:	ldr	x0, [x0, #4064]
    c338:	cmp	x1, x0
    c33c:	cset	x1, eq  // eq = none
    c340:	and	x22, x22, #0xfffffffffffffffe
    c344:	orr	x1, x1, x22
    c348:	and	x2, x1, #0xfffffffffffffffe
    c34c:	ldr	x0, [x2]
    c350:	add	x0, x0, #0x1
    c354:	str	x0, [x2]
    c358:	ldr	x0, [x20, #32]
    c35c:	and	x0, x0, #0xfffffffffffffffe
    c360:	str	x1, [x20, #32]
    c364:	ldr	x1, [x0]
    c368:	sub	x1, x1, #0x1
    c36c:	str	x1, [x0]
    c370:	cbz	x1, c42c <PySequence_Fast@plt+0x81ec>
    c374:	orr	x0, x27, x24
    c378:	cbz	x0, c434 <PySequence_Fast@plt+0x81f4>
    c37c:	cbz	x24, c57c <PySequence_Fast@plt+0x833c>
    c380:	ldr	x0, [x24, #8]
    c384:	ldr	x0, [x0, #168]
    c388:	tbz	w0, #25, c454 <PySequence_Fast@plt+0x8214>
    c38c:	stp	x25, x26, [sp, #80]
    c390:	ldr	x26, [x24, #16]
    c394:	ldr	x28, [x20, #40]
    c398:	str	xzr, [x20, #40]
    c39c:	mov	x1, x26
    c3a0:	mov	x0, x20
    c3a4:	bl	4ea4 <PySequence_Fast@plt+0xc64>
    c3a8:	cbnz	w0, c47c <PySequence_Fast@plt+0x823c>
    c3ac:	cbz	x28, c3c8 <PySequence_Fast@plt+0x8188>
    c3b0:	ldr	x0, [x20, #40]
    c3b4:	ldr	x1, [x28]
    c3b8:	str	x1, [x0]
    c3bc:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    c3c0:	ldr	x0, [x0, #3976]
    c3c4:	str	x0, [x28]
    c3c8:	cmp	x26, #0x0
    c3cc:	b.le	c518 <PySequence_Fast@plt+0x82d8>
    c3d0:	mov	x19, #0x0                   	// #0
    c3d4:	adrp	x25, 20000 <PyInit__elementtree@@Base+0x136c8>
    c3d8:	add	x25, x25, #0x320
    c3dc:	b	c4c8 <PySequence_Fast@plt+0x8288>
    c3e0:	adrp	x1, d000 <PyInit__elementtree@@Base+0x6c8>
    c3e4:	add	x1, x1, #0x2b0
    c3e8:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    c3ec:	ldr	x0, [x0, #3944]
    c3f0:	ldr	x0, [x0]
    c3f4:	bl	3de0 <PyErr_SetString@plt>
    c3f8:	ldp	x23, x24, [sp, #64]
    c3fc:	ldp	x27, x28, [sp, #96]
    c400:	b	c248 <PySequence_Fast@plt+0x8008>
    c404:	bl	3d70 <_Py_Dealloc@plt>
    c408:	b	c2dc <PySequence_Fast@plt+0x809c>
    c40c:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    c410:	ldr	x1, [x1, #3976]
    c414:	b	c2fc <PySequence_Fast@plt+0x80bc>
    c418:	bl	3d70 <_Py_Dealloc@plt>
    c41c:	b	c328 <PySequence_Fast@plt+0x80e8>
    c420:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    c424:	ldr	x1, [x1, #3976]
    c428:	b	c348 <PySequence_Fast@plt+0x8108>
    c42c:	bl	3d70 <_Py_Dealloc@plt>
    c430:	b	c374 <PySequence_Fast@plt+0x8134>
    c434:	adrp	x19, 1f000 <PyInit__elementtree@@Base+0x126c8>
    c438:	ldr	x19, [x19, #3976]
    c43c:	ldr	x0, [x19]
    c440:	add	x0, x0, #0x1
    c444:	str	x0, [x19]
    c448:	ldp	x23, x24, [sp, #64]
    c44c:	ldp	x27, x28, [sp, #96]
    c450:	b	c248 <PySequence_Fast@plt+0x8008>
    c454:	adrp	x1, d000 <PyInit__elementtree@@Base+0x6c8>
    c458:	add	x1, x1, #0x2c8
    c45c:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    c460:	ldr	x0, [x0, #3944]
    c464:	ldr	x0, [x0]
    c468:	bl	3de0 <PyErr_SetString@plt>
    c46c:	mov	x19, #0x0                   	// #0
    c470:	ldp	x23, x24, [sp, #64]
    c474:	ldp	x27, x28, [sp, #96]
    c478:	b	c248 <PySequence_Fast@plt+0x8008>
    c47c:	ldr	x0, [x20, #40]
    c480:	cbz	x0, c48c <PySequence_Fast@plt+0x824c>
    c484:	str	xzr, [x20, #40]
    c488:	bl	6124 <PySequence_Fast@plt+0x1ee4>
    c48c:	str	x28, [x20, #40]
    c490:	mov	x19, #0x0                   	// #0
    c494:	ldp	x23, x24, [sp, #64]
    c498:	ldp	x25, x26, [sp, #80]
    c49c:	ldp	x27, x28, [sp, #96]
    c4a0:	b	c248 <PySequence_Fast@plt+0x8008>
    c4a4:	ldr	x0, [x22]
    c4a8:	add	x0, x0, #0x1
    c4ac:	str	x0, [x22]
    c4b0:	ldr	x0, [x20, #40]
    c4b4:	ldr	x0, [x0, #24]
    c4b8:	str	x22, [x0, x23]
    c4bc:	add	x19, x19, #0x1
    c4c0:	cmp	x26, x19
    c4c4:	b.eq	c518 <PySequence_Fast@plt+0x82d8>  // b.none
    c4c8:	lsl	x23, x19, #3
    c4cc:	ldr	x0, [x24, #24]
    c4d0:	ldr	x22, [x0, x19, lsl #3]
    c4d4:	ldr	x0, [x22, #8]
    c4d8:	cmp	x0, x25
    c4dc:	b.eq	c4a4 <PySequence_Fast@plt+0x8264>  // b.none
    c4e0:	mov	x1, x25
    c4e4:	bl	4160 <PyType_IsSubtype@plt>
    c4e8:	cbnz	w0, c4a4 <PySequence_Fast@plt+0x8264>
    c4ec:	mov	x0, x22
    c4f0:	bl	4df0 <PySequence_Fast@plt+0xbb0>
    c4f4:	ldr	x0, [x20, #40]
    c4f8:	str	x19, [x0, #8]
    c4fc:	mov	x0, x28
    c500:	bl	6124 <PySequence_Fast@plt+0x1ee4>
    c504:	mov	x19, #0x0                   	// #0
    c508:	ldp	x23, x24, [sp, #64]
    c50c:	ldp	x25, x26, [sp, #80]
    c510:	ldp	x27, x28, [sp, #96]
    c514:	b	c248 <PySequence_Fast@plt+0x8008>
    c518:	ldr	x0, [x20, #40]
    c51c:	str	x26, [x0, #8]
    c520:	ldp	x25, x26, [sp, #80]
    c524:	cbz	x27, c554 <PySequence_Fast@plt+0x8314>
    c528:	ldr	x0, [x27]
    c52c:	add	x0, x0, #0x1
    c530:	str	x0, [x27]
    c534:	ldr	x1, [x20, #40]
    c538:	ldr	x0, [x1]
    c53c:	str	x27, [x1]
    c540:	cbz	x0, c554 <PySequence_Fast@plt+0x8314>
    c544:	ldr	x1, [x0]
    c548:	sub	x1, x1, #0x1
    c54c:	str	x1, [x0]
    c550:	cbz	x1, c594 <PySequence_Fast@plt+0x8354>
    c554:	mov	x0, x28
    c558:	bl	6124 <PySequence_Fast@plt+0x1ee4>
    c55c:	adrp	x19, 1f000 <PyInit__elementtree@@Base+0x126c8>
    c560:	ldr	x19, [x19, #3976]
    c564:	ldr	x0, [x19]
    c568:	add	x0, x0, #0x1
    c56c:	str	x0, [x19]
    c570:	ldp	x23, x24, [sp, #64]
    c574:	ldp	x27, x28, [sp, #96]
    c578:	b	c248 <PySequence_Fast@plt+0x8008>
    c57c:	mov	x1, #0x0                   	// #0
    c580:	mov	x0, x20
    c584:	bl	4ea4 <PySequence_Fast@plt+0xc64>
    c588:	cbnz	w0, c59c <PySequence_Fast@plt+0x835c>
    c58c:	mov	x28, x24
    c590:	b	c524 <PySequence_Fast@plt+0x82e4>
    c594:	bl	3d70 <_Py_Dealloc@plt>
    c598:	b	c554 <PySequence_Fast@plt+0x8314>
    c59c:	mov	x19, x24
    c5a0:	ldp	x23, x24, [sp, #64]
    c5a4:	ldp	x27, x28, [sp, #96]
    c5a8:	b	c248 <PySequence_Fast@plt+0x8008>
    c5ac:	mov	x0, x21
    c5b0:	bl	3d70 <_Py_Dealloc@plt>
    c5b4:	ldp	x21, x22, [sp, #48]
    c5b8:	b	c280 <PySequence_Fast@plt+0x8040>
    c5bc:	mov	x19, x0
    c5c0:	ldp	x21, x22, [sp, #48]
    c5c4:	b	c280 <PySequence_Fast@plt+0x8040>
    c5c8:	stp	x29, x30, [sp, #-32]!
    c5cc:	mov	x29, sp
    c5d0:	str	x19, [sp, #16]
    c5d4:	mov	x19, x0
    c5d8:	ldr	x0, [x0, #16]
    c5dc:	cbz	x0, c5f4 <PySequence_Fast@plt+0x83b4>
    c5e0:	str	xzr, [x19, #16]
    c5e4:	ldr	x1, [x0]
    c5e8:	sub	x1, x1, #0x1
    c5ec:	str	x1, [x0]
    c5f0:	cbz	x1, c624 <PySequence_Fast@plt+0x83e4>
    c5f4:	add	x0, x19, #0x18
    c5f8:	bl	5d98 <PySequence_Fast@plt+0x1b58>
    c5fc:	add	x0, x19, #0x20
    c600:	bl	5d98 <PySequence_Fast@plt+0x1b58>
    c604:	ldr	x0, [x19, #40]
    c608:	cbz	x0, c614 <PySequence_Fast@plt+0x83d4>
    c60c:	str	xzr, [x19, #40]
    c610:	bl	6124 <PySequence_Fast@plt+0x1ee4>
    c614:	mov	w0, #0x0                   	// #0
    c618:	ldr	x19, [sp, #16]
    c61c:	ldp	x29, x30, [sp], #32
    c620:	ret
    c624:	bl	3d70 <_Py_Dealloc@plt>
    c628:	b	c5f4 <PySequence_Fast@plt+0x83b4>
    c62c:	stp	x29, x30, [sp, #-32]!
    c630:	mov	x29, sp
    c634:	stp	x19, x20, [sp, #16]
    c638:	mov	x19, x0
    c63c:	bl	4220 <PyObject_GC_UnTrack@plt>
    c640:	ldr	x0, [x19, #8]
    c644:	ldr	x1, [x0, #48]
    c648:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    c64c:	add	x0, x0, #0x62c
    c650:	cmp	x1, x0
    c654:	b.eq	c684 <PySequence_Fast@plt+0x8444>  // b.none
    c658:	ldr	x0, [x19, #48]
    c65c:	cbz	x0, c6fc <PySequence_Fast@plt+0x84bc>
    c660:	mov	x0, x19
    c664:	bl	3cb0 <PyObject_ClearWeakRefs@plt>
    c668:	mov	x0, x19
    c66c:	bl	c5c8 <PySequence_Fast@plt+0x8388>
    c670:	ldr	x0, [x19, #8]
    c674:	ldr	x1, [x0, #320]
    c678:	mov	x0, x19
    c67c:	blr	x1
    c680:	b	c6dc <PySequence_Fast@plt+0x849c>
    c684:	bl	3f50 <PyThreadState_Get@plt>
    c688:	mov	x20, x0
    c68c:	ldr	w0, [x0, #184]
    c690:	cmp	w0, #0x31
    c694:	b.gt	c6e8 <PySequence_Fast@plt+0x84a8>
    c698:	add	w0, w0, #0x1
    c69c:	str	w0, [x20, #184]
    c6a0:	ldr	x0, [x19, #48]
    c6a4:	cbnz	x0, c718 <PySequence_Fast@plt+0x84d8>
    c6a8:	mov	x0, x19
    c6ac:	bl	c5c8 <PySequence_Fast@plt+0x8388>
    c6b0:	ldr	x0, [x19, #8]
    c6b4:	ldr	x1, [x0, #320]
    c6b8:	mov	x0, x19
    c6bc:	blr	x1
    c6c0:	ldr	w1, [x20, #184]
    c6c4:	sub	w1, w1, #0x1
    c6c8:	str	w1, [x20, #184]
    c6cc:	ldr	x0, [x20, #192]
    c6d0:	cmp	x0, #0x0
    c6d4:	ccmp	w1, #0x0, #0x0, ne  // ne = any
    c6d8:	b.le	c6f4 <PySequence_Fast@plt+0x84b4>
    c6dc:	ldp	x19, x20, [sp, #16]
    c6e0:	ldp	x29, x30, [sp], #32
    c6e4:	ret
    c6e8:	mov	x0, x19
    c6ec:	bl	4040 <_PyTrash_thread_deposit_object@plt>
    c6f0:	b	c6dc <PySequence_Fast@plt+0x849c>
    c6f4:	bl	41c0 <_PyTrash_thread_destroy_chain@plt>
    c6f8:	b	c6dc <PySequence_Fast@plt+0x849c>
    c6fc:	mov	x0, x19
    c700:	bl	c5c8 <PySequence_Fast@plt+0x8388>
    c704:	ldr	x0, [x19, #8]
    c708:	ldr	x1, [x0, #320]
    c70c:	mov	x0, x19
    c710:	blr	x1
    c714:	b	c6dc <PySequence_Fast@plt+0x849c>
    c718:	mov	x0, x19
    c71c:	bl	3cb0 <PyObject_ClearWeakRefs@plt>
    c720:	mov	x0, x19
    c724:	bl	c5c8 <PySequence_Fast@plt+0x8388>
    c728:	ldr	x0, [x19, #8]
    c72c:	ldr	x1, [x0, #320]
    c730:	mov	x0, x19
    c734:	blr	x1
    c738:	b	c6c0 <PySequence_Fast@plt+0x8480>
    c73c:	stp	x29, x30, [sp, #-48]!
    c740:	mov	x29, sp
    c744:	stp	x19, x20, [sp, #16]
    c748:	mov	x19, x0
    c74c:	mov	x0, x1
    c750:	mov	x20, x2
    c754:	str	xzr, [sp, #32]
    c758:	add	x4, sp, #0x20
    c75c:	adrp	x3, 1f000 <PyInit__elementtree@@Base+0x126c8>
    c760:	ldr	x3, [x3, #3992]
    c764:	add	x2, sp, #0x28
    c768:	adrp	x1, d000 <PyInit__elementtree@@Base+0x6c8>
    c76c:	add	x1, x1, #0x2e8
    c770:	bl	4010 <_PyArg_ParseTuple_SizeT@plt>
    c774:	cbz	w0, c920 <PySequence_Fast@plt+0x86e0>
    c778:	ldr	x0, [sp, #32]
    c77c:	cbz	x0, c7d0 <PySequence_Fast@plt+0x8590>
    c780:	bl	4150 <PyDict_Copy@plt>
    c784:	str	x0, [sp, #32]
    c788:	cbz	x0, c928 <PySequence_Fast@plt+0x86e8>
    c78c:	cbz	x20, c7e4 <PySequence_Fast@plt+0x85a4>
    c790:	mov	x1, x20
    c794:	bl	3f20 <PyDict_Update@plt>
    c798:	tbnz	w0, #31, c7a8 <PySequence_Fast@plt+0x8568>
    c79c:	ldr	x1, [sp, #32]
    c7a0:	cbnz	x1, c7e8 <PySequence_Fast@plt+0x85a8>
    c7a4:	b	c830 <PySequence_Fast@plt+0x85f0>
    c7a8:	ldr	x2, [sp, #32]
    c7ac:	ldr	x1, [x2]
    c7b0:	sub	x1, x1, #0x1
    c7b4:	str	x1, [x2]
    c7b8:	mov	w0, #0xffffffff            	// #-1
    c7bc:	cbnz	x1, c8c4 <PySequence_Fast@plt+0x8684>
    c7c0:	mov	x0, x2
    c7c4:	bl	3d70 <_Py_Dealloc@plt>
    c7c8:	mov	w0, #0xffffffff            	// #-1
    c7cc:	b	c8c4 <PySequence_Fast@plt+0x8684>
    c7d0:	cbz	x20, c830 <PySequence_Fast@plt+0x85f0>
    c7d4:	mov	x0, x20
    c7d8:	bl	7a14 <PySequence_Fast@plt+0x37d4>
    c7dc:	str	x0, [sp, #32]
    c7e0:	cbz	x0, c930 <PySequence_Fast@plt+0x86f0>
    c7e4:	ldr	x1, [sp, #32]
    c7e8:	ldr	x2, [x1, #8]
    c7ec:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    c7f0:	ldr	x0, [x0, #3992]
    c7f4:	cmp	x2, x0
    c7f8:	b.eq	c814 <PySequence_Fast@plt+0x85d4>  // b.none
    c7fc:	mov	x0, x19
    c800:	bl	4e20 <PySequence_Fast@plt+0xbe0>
    c804:	tbnz	w0, #31, c8d0 <PySequence_Fast@plt+0x8690>
    c808:	ldr	x0, [sp, #32]
    c80c:	cbnz	x0, c820 <PySequence_Fast@plt+0x85e0>
    c810:	b	c830 <PySequence_Fast@plt+0x85f0>
    c814:	ldr	x0, [x1, #16]
    c818:	cbnz	x0, c7fc <PySequence_Fast@plt+0x85bc>
    c81c:	ldr	x0, [sp, #32]
    c820:	ldr	x1, [x0]
    c824:	sub	x1, x1, #0x1
    c828:	str	x1, [x0]
    c82c:	cbz	x1, c8f8 <PySequence_Fast@plt+0x86b8>
    c830:	ldr	x1, [sp, #40]
    c834:	ldr	x0, [x1]
    c838:	add	x0, x0, #0x1
    c83c:	str	x0, [x1]
    c840:	ldr	x0, [x19, #16]
    c844:	ldr	x1, [sp, #40]
    c848:	str	x1, [x19, #16]
    c84c:	cbz	x0, c860 <PySequence_Fast@plt+0x8620>
    c850:	ldr	x1, [x0]
    c854:	sub	x1, x1, #0x1
    c858:	str	x1, [x0]
    c85c:	cbz	x1, c900 <PySequence_Fast@plt+0x86c0>
    c860:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    c864:	ldr	x1, [x1, #3976]
    c868:	ldr	x0, [x1]
    c86c:	add	x0, x0, #0x1
    c870:	str	x0, [x1]
    c874:	ldr	x0, [x19, #24]
    c878:	and	x0, x0, #0xfffffffffffffffe
    c87c:	str	x1, [x19, #24]
    c880:	ldr	x1, [x0]
    c884:	sub	x1, x1, #0x1
    c888:	str	x1, [x0]
    c88c:	cbz	x1, c908 <PySequence_Fast@plt+0x86c8>
    c890:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x126c8>
    c894:	ldr	x1, [x1, #3976]
    c898:	ldr	x0, [x1]
    c89c:	add	x0, x0, #0x1
    c8a0:	str	x0, [x1]
    c8a4:	ldr	x2, [x19, #32]
    c8a8:	and	x2, x2, #0xfffffffffffffffe
    c8ac:	str	x1, [x19, #32]
    c8b0:	ldr	x1, [x2]
    c8b4:	sub	x1, x1, #0x1
    c8b8:	str	x1, [x2]
    c8bc:	mov	w0, #0x0                   	// #0
    c8c0:	cbz	x1, c910 <PySequence_Fast@plt+0x86d0>
    c8c4:	ldp	x19, x20, [sp, #16]
    c8c8:	ldp	x29, x30, [sp], #48
    c8cc:	ret
    c8d0:	ldr	x2, [sp, #32]
    c8d4:	ldr	x1, [x2]
    c8d8:	sub	x1, x1, #0x1
    c8dc:	str	x1, [x2]
    c8e0:	mov	w0, #0xffffffff            	// #-1
    c8e4:	cbnz	x1, c8c4 <PySequence_Fast@plt+0x8684>
    c8e8:	mov	x0, x2
    c8ec:	bl	3d70 <_Py_Dealloc@plt>
    c8f0:	mov	w0, #0xffffffff            	// #-1
    c8f4:	b	c8c4 <PySequence_Fast@plt+0x8684>
    c8f8:	bl	3d70 <_Py_Dealloc@plt>
    c8fc:	b	c830 <PySequence_Fast@plt+0x85f0>
    c900:	bl	3d70 <_Py_Dealloc@plt>
    c904:	b	c860 <PySequence_Fast@plt+0x8620>
    c908:	bl	3d70 <_Py_Dealloc@plt>
    c90c:	b	c890 <PySequence_Fast@plt+0x8650>
    c910:	mov	x0, x2
    c914:	bl	3d70 <_Py_Dealloc@plt>
    c918:	mov	w0, #0x0                   	// #0
    c91c:	b	c8c4 <PySequence_Fast@plt+0x8684>
    c920:	mov	w0, #0xffffffff            	// #-1
    c924:	b	c8c4 <PySequence_Fast@plt+0x8684>
    c928:	mov	w0, #0xffffffff            	// #-1
    c92c:	b	c8c4 <PySequence_Fast@plt+0x8684>
    c930:	mov	w0, #0xffffffff            	// #-1
    c934:	b	c8c4 <PySequence_Fast@plt+0x8684>

000000000000c938 <PyInit__elementtree@@Base>:
    c938:	stp	x29, x30, [sp, #-48]!
    c93c:	mov	x29, sp
    c940:	stp	x19, x20, [sp, #16]
    c944:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x136c8>
    c948:	add	x0, x0, #0x9b8
    c94c:	add	x0, x0, #0x80
    c950:	bl	3fc0 <PyState_FindModule@plt>
    c954:	mov	x19, x0
    c958:	cbz	x0, c978 <PyInit__elementtree@@Base+0x40>
    c95c:	ldr	x0, [x0]
    c960:	add	x0, x0, #0x1
    c964:	str	x0, [x19]
    c968:	mov	x0, x19
    c96c:	ldp	x19, x20, [sp, #16]
    c970:	ldp	x29, x30, [sp], #48
    c974:	ret
    c978:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x136c8>
    c97c:	add	x0, x0, #0x320
    c980:	add	x0, x0, #0x358
    c984:	bl	3e90 <PyType_Ready@plt>
    c988:	tbnz	w0, #31, c968 <PyInit__elementtree@@Base+0x30>
    c98c:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x136c8>
    c990:	add	x0, x0, #0x320
    c994:	add	x0, x0, #0x1b8
    c998:	bl	3e90 <PyType_Ready@plt>
    c99c:	tbnz	w0, #31, c968 <PyInit__elementtree@@Base+0x30>
    c9a0:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x136c8>
    c9a4:	add	x0, x0, #0x320
    c9a8:	bl	3e90 <PyType_Ready@plt>
    c9ac:	tbnz	w0, #31, c968 <PyInit__elementtree@@Base+0x30>
    c9b0:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x136c8>
    c9b4:	add	x0, x0, #0x320
    c9b8:	add	x0, x0, #0x4f8
    c9bc:	bl	3e90 <PyType_Ready@plt>
    c9c0:	tbnz	w0, #31, c968 <PyInit__elementtree@@Base+0x30>
    c9c4:	stp	x21, x22, [sp, #32]
    c9c8:	mov	w1, #0x3f5                 	// #1013
    c9cc:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x136c8>
    c9d0:	add	x0, x0, #0x9b8
    c9d4:	add	x0, x0, #0x80
    c9d8:	bl	3f90 <PyModule_Create2@plt>
    c9dc:	mov	x21, x0
    c9e0:	cbz	x0, cb7c <PyInit__elementtree@@Base+0x244>
    c9e4:	bl	3e10 <PyModule_GetState@plt>
    c9e8:	mov	x22, x0
    c9ec:	adrp	x0, d000 <PyInit__elementtree@@Base+0x6c8>
    c9f0:	add	x0, x0, #0x2f8
    c9f4:	bl	3fa0 <PyImport_ImportModule@plt>
    c9f8:	mov	x20, x0
    c9fc:	cbz	x0, cb88 <PyInit__elementtree@@Base+0x250>
    ca00:	adrp	x1, d000 <PyInit__elementtree@@Base+0x6c8>
    ca04:	add	x1, x1, #0x300
    ca08:	bl	3d00 <PyObject_GetAttrString@plt>
    ca0c:	str	x0, [x22, #8]
    ca10:	ldr	x0, [x20]
    ca14:	sub	x0, x0, #0x1
    ca18:	str	x0, [x20]
    ca1c:	cbz	x0, cb50 <PyInit__elementtree@@Base+0x218>
    ca20:	ldr	x0, [x22, #8]
    ca24:	cbz	x0, cb94 <PyInit__elementtree@@Base+0x25c>
    ca28:	adrp	x0, d000 <PyInit__elementtree@@Base+0x6c8>
    ca2c:	add	x0, x0, #0x310
    ca30:	bl	3fa0 <PyImport_ImportModule@plt>
    ca34:	str	x0, [x22, #16]
    ca38:	cbz	x0, cba0 <PyInit__elementtree@@Base+0x268>
    ca3c:	mov	w1, #0x0                   	// #0
    ca40:	adrp	x0, d000 <PyInit__elementtree@@Base+0x6c8>
    ca44:	add	x0, x0, #0x328
    ca48:	bl	3e80 <PyCapsule_Import@plt>
    ca4c:	mov	x20, x0
    ca50:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x146c8>
    ca54:	str	x20, [x0, #1072]
    ca58:	cbz	x20, cbac <PyInit__elementtree@@Base+0x274>
    ca5c:	adrp	x1, d000 <PyInit__elementtree@@Base+0x6c8>
    ca60:	add	x1, x1, #0x340
    ca64:	ldr	x0, [x20]
    ca68:	bl	3ff0 <strcmp@plt>
    ca6c:	cbnz	w0, cb5c <PyInit__elementtree@@Base+0x224>
    ca70:	ldr	w0, [x20, #8]
    ca74:	cmp	w0, #0xaf
    ca78:	b.ls	cb5c <PyInit__elementtree@@Base+0x224>  // b.plast
    ca7c:	ldr	w0, [x20, #12]
    ca80:	cmp	w0, #0x2
    ca84:	b.ne	cb5c <PyInit__elementtree@@Base+0x224>  // b.any
    ca88:	ldr	x1, [x20, #16]
    ca8c:	mov	x0, #0x2                   	// #2
    ca90:	movk	x0, #0x9, lsl #32
    ca94:	cmp	x1, x0
    ca98:	b.ne	cb5c <PyInit__elementtree@@Base+0x224>  // b.any
    ca9c:	mov	x2, #0x0                   	// #0
    caa0:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    caa4:	ldr	x0, [x0, #4056]
    caa8:	ldr	x1, [x0]
    caac:	adrp	x0, d000 <PyInit__elementtree@@Base+0x6c8>
    cab0:	add	x0, x0, #0x378
    cab4:	bl	3ee0 <PyErr_NewException@plt>
    cab8:	str	x0, [x22]
    cabc:	ldr	x1, [x0]
    cac0:	add	x1, x1, #0x1
    cac4:	str	x1, [x0]
    cac8:	ldr	x2, [x22]
    cacc:	adrp	x1, d000 <PyInit__elementtree@@Base+0x6c8>
    cad0:	add	x1, x1, #0x3a0
    cad4:	mov	x0, x21
    cad8:	bl	4120 <PyModule_AddObject@plt>
    cadc:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x136c8>
    cae0:	add	x19, x0, #0x320
    cae4:	ldr	x1, [x0, #800]
    cae8:	add	x1, x1, #0x1
    caec:	str	x1, [x0, #800]
    caf0:	mov	x2, x19
    caf4:	adrp	x1, d000 <PyInit__elementtree@@Base+0x6c8>
    caf8:	add	x1, x1, #0x3b0
    cafc:	mov	x0, x21
    cb00:	bl	4120 <PyModule_AddObject@plt>
    cb04:	ldr	x0, [x19, #440]
    cb08:	add	x0, x0, #0x1
    cb0c:	str	x0, [x19, #440]
    cb10:	add	x2, x19, #0x1b8
    cb14:	adrp	x1, d000 <PyInit__elementtree@@Base+0x6c8>
    cb18:	add	x1, x1, #0x3b8
    cb1c:	mov	x0, x21
    cb20:	bl	4120 <PyModule_AddObject@plt>
    cb24:	ldr	x0, [x19, #1272]
    cb28:	add	x0, x0, #0x1
    cb2c:	str	x0, [x19, #1272]
    cb30:	add	x2, x19, #0x4f8
    cb34:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    cb38:	add	x1, x1, #0xde8
    cb3c:	mov	x0, x21
    cb40:	bl	4120 <PyModule_AddObject@plt>
    cb44:	mov	x19, x21
    cb48:	ldp	x21, x22, [sp, #32]
    cb4c:	b	c968 <PyInit__elementtree@@Base+0x30>
    cb50:	mov	x0, x20
    cb54:	bl	3d70 <_Py_Dealloc@plt>
    cb58:	b	ca20 <PyInit__elementtree@@Base+0xe8>
    cb5c:	adrp	x1, d000 <PyInit__elementtree@@Base+0x6c8>
    cb60:	add	x1, x1, #0x358
    cb64:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x126c8>
    cb68:	ldr	x0, [x0, #4000]
    cb6c:	ldr	x0, [x0]
    cb70:	bl	3de0 <PyErr_SetString@plt>
    cb74:	ldp	x21, x22, [sp, #32]
    cb78:	b	c968 <PyInit__elementtree@@Base+0x30>
    cb7c:	mov	x19, x0
    cb80:	ldp	x21, x22, [sp, #32]
    cb84:	b	c968 <PyInit__elementtree@@Base+0x30>
    cb88:	mov	x19, x0
    cb8c:	ldp	x21, x22, [sp, #32]
    cb90:	b	c968 <PyInit__elementtree@@Base+0x30>
    cb94:	mov	x19, x0
    cb98:	ldp	x21, x22, [sp, #32]
    cb9c:	b	c968 <PyInit__elementtree@@Base+0x30>
    cba0:	mov	x19, x0
    cba4:	ldp	x21, x22, [sp, #32]
    cba8:	b	c968 <PyInit__elementtree@@Base+0x30>
    cbac:	mov	x19, x20
    cbb0:	ldp	x21, x22, [sp, #32]
    cbb4:	b	c968 <PyInit__elementtree@@Base+0x30>

Disassembly of section .fini:

000000000000cbb8 <.fini>:
    cbb8:	stp	x29, x30, [sp, #-16]!
    cbbc:	mov	x29, sp
    cbc0:	ldp	x29, x30, [sp], #16
    cbc4:	ret
