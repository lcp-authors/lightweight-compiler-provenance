In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMInterpreter.a_gcc_-Os:

Execution.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZL14getShiftAmountmN4llvm5APIntE>:
       0:	ldr	w2, [x1, #8]
       4:	sub	w1, w2, #0x1
       8:	cmp	x0, w2, uxtw
       c:	orr	x1, x1, x1, lsr #1
      10:	orr	x1, x1, x1, lsr #2
      14:	orr	x1, x1, x1, lsr #4
      18:	orr	x1, x1, x1, lsr #8
      1c:	orr	x1, x1, x1, lsr #16
      20:	and	w1, w1, w0
      24:	csel	w0, w0, w1, cc  // cc = lo, ul, last
      28:	ret

000000000000002c <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>:
      2c:	stp	x29, x30, [sp, #-16]!
      30:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
      34:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
      38:	mov	x29, sp
      3c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
      40:	add	x3, x3, #0x0
      44:	add	x1, x1, #0x0
      48:	add	x0, x0, #0x0
      4c:	mov	w2, #0x8b                  	// #139
      50:	bl	0 <__assert_fail>

0000000000000054 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>:
      54:	cbz	x0, 5c <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0+0x8>
      58:	b	0 <_ZdlPv>
      5c:	ret

0000000000000060 <_ZNR4llvm14PointerIntPairIPNS_11InstructionELj2EiNS_21PointerLikeTypeTraitsIS2_EENS_18PointerIntPairInfoIS2_Lj2ES4_EEE16setPointerAndIntES2_i.isra.0>:
      60:	stp	x29, x30, [sp, #-16]!
      64:	tst	x1, #0x7
      68:	mov	x29, sp
      6c:	b.eq	90 <_ZNR4llvm14PointerIntPairIPNS_11InstructionELj2EiNS_21PointerLikeTypeTraitsIS2_EENS_18PointerIntPairInfoIS2_Lj2ES4_EEE16setPointerAndIntES2_i.isra.0+0x30>  // b.none
      70:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
      74:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
      78:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
      7c:	add	x3, x3, #0x0
      80:	add	x1, x1, #0x0
      84:	add	x0, x0, #0x0
      88:	mov	w2, #0xb2                  	// #178
      8c:	bl	0 <__assert_fail>
      90:	sxtw	x2, w2
      94:	tst	x2, #0xfffffffffffffffc
      98:	b.eq	bc <_ZNR4llvm14PointerIntPairIPNS_11InstructionELj2EiNS_21PointerLikeTypeTraitsIS2_EENS_18PointerIntPairInfoIS2_Lj2ES4_EEE16setPointerAndIntES2_i.isra.0+0x5c>  // b.none
      9c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
      a0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
      a4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
      a8:	add	x3, x3, #0x0
      ac:	add	x1, x1, #0x0
      b0:	add	x0, x0, #0x0
      b4:	mov	w2, #0xba                  	// #186
      b8:	b	8c <_ZNR4llvm14PointerIntPairIPNS_11InstructionELj2EiNS_21PointerLikeTypeTraitsIS2_EENS_18PointerIntPairInfoIS2_Lj2ES4_EEE16setPointerAndIntES2_i.isra.0+0x2c>
      bc:	and	x1, x1, #0xfffffffffffffff9
      c0:	orr	x2, x1, x2, lsl #1
      c4:	str	x2, [x0]
      c8:	ldp	x29, x30, [sp], #16
      cc:	ret

00000000000000d0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE11_M_allocateEm.isra.0>:
      d0:	cbz	x0, 100 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE11_M_allocateEm.isra.0+0x30>
      d4:	mov	x1, x0
      d8:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
      dc:	movk	x0, #0x2aa, lsl #48
      e0:	cmp	x1, x0
      e4:	b.ls	f4 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE11_M_allocateEm.isra.0+0x24>  // b.plast
      e8:	stp	x29, x30, [sp, #-16]!
      ec:	mov	x29, sp
      f0:	bl	0 <_ZSt17__throw_bad_allocv>
      f4:	mov	x0, #0x30                  	// #48
      f8:	mul	x0, x1, x0
      fc:	b	0 <_Znwm>
     100:	ret

0000000000000104 <_ZN4llvm11Interpreter16visitInstructionERNS_11InstructionE.isra.0>:
     104:	stp	x29, x30, [sp, #-32]!
     108:	mov	x29, sp
     10c:	stp	x19, x20, [sp, #16]
     110:	mov	x20, x0
     114:	bl	0 <_ZN4llvm4errsEv>
     118:	mov	w2, #0x0                   	// #0
     11c:	mov	x1, x0
     120:	mov	x19, x0
     124:	mov	x0, x20
     128:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
     12c:	mov	x0, x19
     130:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     134:	add	x1, x1, #0x0
     138:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     13c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     140:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     144:	add	x1, x1, #0x0
     148:	add	x0, x0, #0x0
     14c:	mov	w2, #0xac                  	// #172
     150:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000000154 <_ZL15executeFAddInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>:
     154:	stp	x29, x30, [sp, #-32]!
     158:	mov	x29, sp
     15c:	str	x19, [sp, #16]
     160:	mov	x19, x0
     164:	bl	0 <_ZN4llvm4dbgsEv>
     168:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     16c:	add	x1, x1, #0x0
     170:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     174:	mov	x1, x19
     178:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     17c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     180:	add	x1, x1, #0x0
     184:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     188:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     18c:	mov	w2, #0x73                  	// #115
     190:	add	x1, x1, #0x0
     194:	mov	x0, #0x0                   	// #0
     198:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000019c <_ZL15executeFSubInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>:
     19c:	stp	x29, x30, [sp, #-32]!
     1a0:	mov	x29, sp
     1a4:	str	x19, [sp, #16]
     1a8:	mov	x19, x0
     1ac:	bl	0 <_ZN4llvm4dbgsEv>
     1b0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     1b4:	add	x1, x1, #0x0
     1b8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     1bc:	mov	x1, x19
     1c0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     1c4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     1c8:	add	x1, x1, #0x0
     1cc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     1d0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     1d4:	mov	w2, #0x7e                  	// #126
     1d8:	add	x1, x1, #0x0
     1dc:	mov	x0, #0x0                   	// #0
     1e0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

00000000000001e4 <_ZL15executeFMulInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>:
     1e4:	stp	x29, x30, [sp, #-32]!
     1e8:	mov	x29, sp
     1ec:	str	x19, [sp, #16]
     1f0:	mov	x19, x0
     1f4:	bl	0 <_ZN4llvm4dbgsEv>
     1f8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     1fc:	add	x1, x1, #0x0
     200:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     204:	mov	x1, x19
     208:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     20c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     210:	add	x1, x1, #0x0
     214:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     218:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     21c:	mov	w2, #0x89                  	// #137
     220:	add	x1, x1, #0x0
     224:	mov	x0, #0x0                   	// #0
     228:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000022c <_ZL15executeFDivInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>:
     22c:	stp	x29, x30, [sp, #-32]!
     230:	mov	x29, sp
     234:	str	x19, [sp, #16]
     238:	mov	x19, x0
     23c:	bl	0 <_ZN4llvm4dbgsEv>
     240:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     244:	add	x1, x1, #0x0
     248:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     24c:	mov	x1, x19
     250:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     254:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     258:	add	x1, x1, #0x0
     25c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     260:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     264:	mov	w2, #0x94                  	// #148
     268:	add	x1, x1, #0x0
     26c:	mov	x0, #0x0                   	// #0
     270:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000000274 <_ZL15executeFRemInstRN4llvm12GenericValueES0_S0_PNS_4TypeE>:
     274:	stp	x29, x30, [sp, #-32]!
     278:	mov	x29, sp
     27c:	stp	x19, x20, [sp, #16]
     280:	mov	x20, x0
     284:	ldrb	w0, [x3, #8]
     288:	cmp	w0, #0x2
     28c:	b.eq	2d4 <_ZL15executeFRemInstRN4llvm12GenericValueES0_S0_PNS_4TypeE+0x60>  // b.none
     290:	cmp	w0, #0x3
     294:	b.eq	2fc <_ZL15executeFRemInstRN4llvm12GenericValueES0_S0_PNS_4TypeE+0x88>  // b.none
     298:	mov	x19, x3
     29c:	bl	0 <_ZN4llvm4dbgsEv>
     2a0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     2a4:	add	x1, x1, #0x0
     2a8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     2ac:	mov	x1, x19
     2b0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     2b4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     2b8:	add	x1, x1, #0x0
     2bc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     2c0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     2c4:	mov	w2, #0xa3                  	// #163
     2c8:	add	x1, x1, #0x0
     2cc:	mov	x0, #0x0                   	// #0
     2d0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     2d4:	ldr	s0, [x1]
     2d8:	ldr	s1, [x2]
     2dc:	fcvt	d0, s0
     2e0:	fcvt	d1, s1
     2e4:	bl	0 <fmod>
     2e8:	fcvt	s0, d0
     2ec:	str	s0, [x20]
     2f0:	ldp	x19, x20, [sp, #16]
     2f4:	ldp	x29, x30, [sp], #32
     2f8:	ret
     2fc:	ldr	d0, [x1]
     300:	ldr	d1, [x2]
     304:	bl	0 <fmod>
     308:	str	d0, [x20]
     30c:	b	2f0 <_ZL15executeFRemInstRN4llvm12GenericValueES0_S0_PNS_4TypeE+0x7c>

0000000000000310 <_ZN4llvm11Interpreter20visitUnreachableInstERNS_15UnreachableInstE>:
     310:	stp	x29, x30, [sp, #-16]!
     314:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     318:	mov	w1, #0x1                   	// #1
     31c:	mov	x29, sp
     320:	add	x0, x0, #0x0
     324:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>

0000000000000328 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE>:
     328:	stp	x29, x30, [sp, #-80]!
     32c:	mov	x29, sp
     330:	stp	x21, x22, [sp, #32]
     334:	mov	x21, x1
     338:	ldr	x22, [x0, #696]
     33c:	str	x23, [sp, #48]
     340:	ldr	x23, [x0, #704]
     344:	stp	x19, x20, [sp, #16]
     348:	mov	x19, x0
     34c:	cmp	x22, x23
     350:	b.eq	370 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x48>  // b.none
     354:	mov	x20, x22
     358:	mov	x0, x20
     35c:	add	x20, x20, #0x80
     360:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     364:	cmp	x23, x20
     368:	b.ne	358 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x30>  // b.any
     36c:	str	x22, [x19, #704]
     370:	mov	x0, x19
     374:	add	x19, sp, #0x40
     378:	bl	0 <_ZN4llvm11Interpreter17runAtExitHandlersEv>
     37c:	mov	x8, x19
     380:	mov	w1, #0x20                  	// #32
     384:	add	x0, x21, #0x8
     388:	bl	0 <_ZNK4llvm5APInt11zextOrTruncEj>
     38c:	mov	x0, x19
     390:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     394:	bl	0 <exit>

0000000000000398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>:
     398:	stp	x29, x30, [sp, #-48]!
     39c:	mov	x29, sp
     3a0:	str	x19, [sp, #16]
     3a4:	mov	x19, x1
     3a8:	add	x1, sp, #0x28
     3ac:	str	x0, [sp, #40]
     3b0:	add	x0, x2, #0x20
     3b4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     3b8:	mov	x1, x19
     3bc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     3c0:	ldr	x19, [sp, #16]
     3c4:	ldp	x29, x30, [sp], #48
     3c8:	ret

00000000000003cc <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE>:
     3cc:	stp	x29, x30, [sp, #-112]!
     3d0:	mov	x29, sp
     3d4:	stp	x21, x22, [sp, #32]
     3d8:	mov	x22, x2
     3dc:	mov	x21, x0
     3e0:	mov	x0, x8
     3e4:	stp	x19, x20, [sp, #16]
     3e8:	mov	x19, x8
     3ec:	mov	x20, x1
     3f0:	stp	x23, x24, [sp, #48]
     3f4:	stp	x25, x26, [sp, #64]
     3f8:	str	x27, [sp, #80]
     3fc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     400:	ldrb	w0, [x22, #8]
     404:	cmp	w0, #0xf
     408:	b.eq	540 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x174>  // b.none
     40c:	cmp	w0, #0x10
     410:	b.eq	470 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0xa4>  // b.none
     414:	cmp	w0, #0xb
     418:	b.ne	55c <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x190>  // b.any
     41c:	add	x1, x20, #0x8
     420:	add	x0, x21, #0x8
     424:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     428:	and	x0, x0, #0xff
     42c:	mov	w1, #0x1                   	// #1
     430:	str	w1, [sp, #104]
     434:	add	x20, sp, #0x60
     438:	str	x0, [sp, #96]
     43c:	mov	x1, x20
     440:	add	x0, x19, #0x8
     444:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     448:	mov	x0, x20
     44c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     450:	mov	x0, x19
     454:	ldp	x19, x20, [sp, #16]
     458:	ldp	x21, x22, [sp, #32]
     45c:	ldp	x23, x24, [sp, #48]
     460:	ldp	x25, x26, [sp, #64]
     464:	ldr	x27, [sp, #80]
     468:	ldp	x29, x30, [sp], #112
     46c:	ret
     470:	ldr	x1, [x21, #24]
     474:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     478:	ldr	x0, [x21, #32]
     47c:	movk	x25, #0xaaab
     480:	ldp	x3, x2, [x20, #24]
     484:	sub	x0, x0, x1
     488:	add	x26, x21, #0x18
     48c:	asr	x1, x0, #4
     490:	sub	x2, x2, x3
     494:	mul	x1, x1, x25
     498:	cmp	x2, x0
     49c:	b.eq	4c0 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0xf4>  // b.none
     4a0:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     4a4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     4a8:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     4ac:	add	x3, x3, #0x0
     4b0:	add	x1, x1, #0x0
     4b4:	add	x0, x0, #0x0
     4b8:	mov	w2, #0xc4                  	// #196
     4bc:	bl	0 <__assert_fail>
     4c0:	add	x22, sp, #0x60
     4c4:	mov	w24, #0x0                   	// #0
     4c8:	mov	w27, #0x30                  	// #48
     4cc:	mov	w23, #0x1                   	// #1
     4d0:	add	x0, x19, #0x18
     4d4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     4d8:	ldp	x0, x1, [x26]
     4dc:	sub	x1, x1, x0
     4e0:	asr	x1, x1, #4
     4e4:	mul	x1, x1, x25
     4e8:	cmp	x1, w24, uxtw
     4ec:	b.ls	450 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x84>  // b.plast
     4f0:	umull	x2, w24, w27
     4f4:	add	w24, w24, #0x1
     4f8:	ldr	x1, [x20, #24]
     4fc:	add	x0, x0, x2
     500:	ldr	x21, [x19, #24]
     504:	add	x1, x1, x2
     508:	add	x1, x1, #0x8
     50c:	add	x0, x0, #0x8
     510:	add	x21, x21, x2
     514:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     518:	mov	x1, x22
     51c:	add	x21, x21, #0x8
     520:	and	x0, x0, #0xff
     524:	str	x0, [sp, #96]
     528:	mov	x0, x21
     52c:	str	w23, [sp, #104]
     530:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     534:	mov	x0, x22
     538:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     53c:	b	4d8 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x10c>
     540:	ldr	x0, [x20]
     544:	ldr	x1, [x21]
     548:	cmp	x1, x0
     54c:	mov	w1, #0x1                   	// #1
     550:	cset	x0, eq  // eq = none
     554:	str	w1, [sp, #104]
     558:	b	434 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x68>
     55c:	bl	0 <_ZN4llvm4dbgsEv>
     560:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     564:	add	x1, x1, #0x0
     568:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     56c:	mov	x1, x22
     570:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     574:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     578:	add	x1, x1, #0x0
     57c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     580:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     584:	mov	w2, #0xc8                  	// #200
     588:	add	x1, x1, #0x0
     58c:	mov	x0, #0x0                   	// #0
     590:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000000594 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE>:
     594:	stp	x29, x30, [sp, #-112]!
     598:	mov	x29, sp
     59c:	stp	x21, x22, [sp, #32]
     5a0:	mov	x22, x2
     5a4:	mov	x21, x0
     5a8:	mov	x0, x8
     5ac:	stp	x19, x20, [sp, #16]
     5b0:	mov	x19, x8
     5b4:	mov	x20, x1
     5b8:	stp	x23, x24, [sp, #48]
     5bc:	stp	x25, x26, [sp, #64]
     5c0:	str	x27, [sp, #80]
     5c4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     5c8:	ldrb	w0, [x22, #8]
     5cc:	cmp	w0, #0xf
     5d0:	b.eq	710 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x17c>  // b.none
     5d4:	cmp	w0, #0x10
     5d8:	b.eq	63c <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0xa8>  // b.none
     5dc:	cmp	w0, #0xb
     5e0:	b.ne	72c <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x198>  // b.any
     5e4:	add	x1, x20, #0x8
     5e8:	add	x0, x21, #0x8
     5ec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     5f0:	and	x0, x0, #0xff
     5f4:	eor	x0, x0, #0x1
     5f8:	mov	w1, #0x1                   	// #1
     5fc:	str	w1, [sp, #104]
     600:	add	x20, sp, #0x60
     604:	str	x0, [sp, #96]
     608:	mov	x1, x20
     60c:	add	x0, x19, #0x8
     610:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     614:	mov	x0, x20
     618:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     61c:	mov	x0, x19
     620:	ldp	x19, x20, [sp, #16]
     624:	ldp	x21, x22, [sp, #32]
     628:	ldp	x23, x24, [sp, #48]
     62c:	ldp	x25, x26, [sp, #64]
     630:	ldr	x27, [sp, #80]
     634:	ldp	x29, x30, [sp], #112
     638:	ret
     63c:	ldr	x1, [x21, #24]
     640:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     644:	ldr	x0, [x21, #32]
     648:	movk	x25, #0xaaab
     64c:	ldp	x3, x2, [x20, #24]
     650:	sub	x0, x0, x1
     654:	add	x26, x21, #0x18
     658:	asr	x1, x0, #4
     65c:	sub	x2, x2, x3
     660:	mul	x1, x1, x25
     664:	cmp	x0, x2
     668:	b.eq	68c <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0xf8>  // b.none
     66c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     670:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     674:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     678:	add	x3, x3, #0x0
     67c:	add	x1, x1, #0x0
     680:	add	x0, x0, #0x0
     684:	mov	w2, #0xd2                  	// #210
     688:	bl	0 <__assert_fail>
     68c:	add	x22, sp, #0x60
     690:	mov	w24, #0x0                   	// #0
     694:	mov	w27, #0x30                  	// #48
     698:	mov	w23, #0x1                   	// #1
     69c:	add	x0, x19, #0x18
     6a0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     6a4:	ldp	x0, x1, [x26]
     6a8:	sub	x1, x1, x0
     6ac:	asr	x1, x1, #4
     6b0:	mul	x1, x1, x25
     6b4:	cmp	x1, w24, uxtw
     6b8:	b.ls	61c <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x88>  // b.plast
     6bc:	umull	x2, w24, w27
     6c0:	add	w24, w24, #0x1
     6c4:	ldr	x1, [x20, #24]
     6c8:	add	x0, x0, x2
     6cc:	ldr	x21, [x19, #24]
     6d0:	add	x1, x1, x2
     6d4:	add	x1, x1, #0x8
     6d8:	add	x0, x0, #0x8
     6dc:	add	x21, x21, x2
     6e0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     6e4:	mov	x1, x22
     6e8:	and	x0, x0, #0xff
     6ec:	add	x21, x21, #0x8
     6f0:	eor	x0, x0, #0x1
     6f4:	str	x0, [sp, #96]
     6f8:	mov	x0, x21
     6fc:	str	w23, [sp, #104]
     700:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     704:	mov	x0, x22
     708:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     70c:	b	6a4 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x110>
     710:	ldr	x0, [x20]
     714:	ldr	x1, [x21]
     718:	cmp	x1, x0
     71c:	mov	w1, #0x1                   	// #1
     720:	cset	x0, ne  // ne = any
     724:	str	w1, [sp, #104]
     728:	b	600 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x6c>
     72c:	bl	0 <_ZN4llvm4dbgsEv>
     730:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     734:	add	x1, x1, #0x0
     738:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     73c:	mov	x1, x22
     740:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     744:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     748:	add	x1, x1, #0x0
     74c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     750:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     754:	mov	w2, #0xd6                  	// #214
     758:	add	x1, x1, #0x0
     75c:	mov	x0, #0x0                   	// #0
     760:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000000764 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE>:
     764:	stp	x29, x30, [sp, #-112]!
     768:	mov	x29, sp
     76c:	stp	x21, x22, [sp, #32]
     770:	mov	x22, x2
     774:	mov	x21, x0
     778:	mov	x0, x8
     77c:	stp	x19, x20, [sp, #16]
     780:	mov	x19, x8
     784:	mov	x20, x1
     788:	stp	x23, x24, [sp, #48]
     78c:	stp	x25, x26, [sp, #64]
     790:	str	x27, [sp, #80]
     794:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     798:	ldrb	w0, [x22, #8]
     79c:	cmp	w0, #0xf
     7a0:	b.eq	8d8 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x174>  // b.none
     7a4:	cmp	w0, #0x10
     7a8:	b.eq	808 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0xa4>  // b.none
     7ac:	cmp	w0, #0xb
     7b0:	b.ne	8f4 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x190>  // b.any
     7b4:	add	x1, x20, #0x8
     7b8:	add	x0, x21, #0x8
     7bc:	bl	0 <_ZNK4llvm5APInt7compareERKS0_>
     7c0:	lsr	w0, w0, #31
     7c4:	mov	w1, #0x1                   	// #1
     7c8:	str	w1, [sp, #104]
     7cc:	add	x20, sp, #0x60
     7d0:	str	x0, [sp, #96]
     7d4:	mov	x1, x20
     7d8:	add	x0, x19, #0x8
     7dc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     7e0:	mov	x0, x20
     7e4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     7e8:	mov	x0, x19
     7ec:	ldp	x19, x20, [sp, #16]
     7f0:	ldp	x21, x22, [sp, #32]
     7f4:	ldp	x23, x24, [sp, #48]
     7f8:	ldp	x25, x26, [sp, #64]
     7fc:	ldr	x27, [sp, #80]
     800:	ldp	x29, x30, [sp], #112
     804:	ret
     808:	ldr	x1, [x21, #24]
     80c:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     810:	ldr	x0, [x21, #32]
     814:	movk	x25, #0xaaab
     818:	ldp	x3, x2, [x20, #24]
     81c:	sub	x0, x0, x1
     820:	add	x26, x21, #0x18
     824:	asr	x1, x0, #4
     828:	sub	x2, x2, x3
     82c:	mul	x1, x1, x25
     830:	cmp	x0, x2
     834:	b.eq	858 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0xf4>  // b.none
     838:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     83c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     840:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     844:	add	x3, x3, #0x0
     848:	add	x1, x1, #0x0
     84c:	add	x0, x0, #0x0
     850:	mov	w2, #0xe0                  	// #224
     854:	bl	0 <__assert_fail>
     858:	add	x22, sp, #0x60
     85c:	mov	w24, #0x0                   	// #0
     860:	mov	w27, #0x30                  	// #48
     864:	mov	w23, #0x1                   	// #1
     868:	add	x0, x19, #0x18
     86c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     870:	ldp	x0, x1, [x26]
     874:	sub	x1, x1, x0
     878:	asr	x1, x1, #4
     87c:	mul	x1, x1, x25
     880:	cmp	x1, w24, uxtw
     884:	b.ls	7e8 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x84>  // b.plast
     888:	umull	x2, w24, w27
     88c:	add	w24, w24, #0x1
     890:	ldr	x1, [x20, #24]
     894:	add	x0, x0, x2
     898:	ldr	x21, [x19, #24]
     89c:	add	x1, x1, x2
     8a0:	add	x1, x1, #0x8
     8a4:	add	x0, x0, #0x8
     8a8:	add	x21, x21, x2
     8ac:	bl	0 <_ZNK4llvm5APInt7compareERKS0_>
     8b0:	mov	x1, x22
     8b4:	add	x21, x21, #0x8
     8b8:	lsr	w0, w0, #31
     8bc:	str	x0, [sp, #96]
     8c0:	mov	x0, x21
     8c4:	str	w23, [sp, #104]
     8c8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     8cc:	mov	x0, x22
     8d0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     8d4:	b	870 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x10c>
     8d8:	ldr	x0, [x20]
     8dc:	ldr	x1, [x21]
     8e0:	cmp	x1, x0
     8e4:	mov	w1, #0x1                   	// #1
     8e8:	cset	x0, cc  // cc = lo, ul, last
     8ec:	str	w1, [sp, #104]
     8f0:	b	7cc <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x68>
     8f4:	bl	0 <_ZN4llvm4dbgsEv>
     8f8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     8fc:	add	x1, x1, #0x0
     900:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     904:	mov	x1, x22
     908:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     90c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     910:	add	x1, x1, #0x0
     914:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     918:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     91c:	mov	w2, #0xe4                  	// #228
     920:	add	x1, x1, #0x0
     924:	mov	x0, #0x0                   	// #0
     928:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000092c <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE>:
     92c:	stp	x29, x30, [sp, #-112]!
     930:	mov	x29, sp
     934:	stp	x21, x22, [sp, #32]
     938:	mov	x22, x2
     93c:	mov	x21, x0
     940:	mov	x0, x8
     944:	stp	x19, x20, [sp, #16]
     948:	mov	x19, x8
     94c:	mov	x20, x1
     950:	stp	x23, x24, [sp, #48]
     954:	stp	x25, x26, [sp, #64]
     958:	str	x27, [sp, #80]
     95c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     960:	ldrb	w0, [x22, #8]
     964:	cmp	w0, #0xf
     968:	b.eq	aa0 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0x174>  // b.none
     96c:	cmp	w0, #0x10
     970:	b.eq	9d0 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0xa4>  // b.none
     974:	cmp	w0, #0xb
     978:	b.ne	abc <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0x190>  // b.any
     97c:	add	x1, x20, #0x8
     980:	add	x0, x21, #0x8
     984:	bl	0 <_ZNK4llvm5APInt13compareSignedERKS0_>
     988:	lsr	w0, w0, #31
     98c:	mov	w1, #0x1                   	// #1
     990:	str	w1, [sp, #104]
     994:	add	x20, sp, #0x60
     998:	str	x0, [sp, #96]
     99c:	mov	x1, x20
     9a0:	add	x0, x19, #0x8
     9a4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     9a8:	mov	x0, x20
     9ac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     9b0:	mov	x0, x19
     9b4:	ldp	x19, x20, [sp, #16]
     9b8:	ldp	x21, x22, [sp, #32]
     9bc:	ldp	x23, x24, [sp, #48]
     9c0:	ldp	x25, x26, [sp, #64]
     9c4:	ldr	x27, [sp, #80]
     9c8:	ldp	x29, x30, [sp], #112
     9cc:	ret
     9d0:	ldr	x1, [x21, #24]
     9d4:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     9d8:	ldr	x0, [x21, #32]
     9dc:	movk	x25, #0xaaab
     9e0:	ldp	x3, x2, [x20, #24]
     9e4:	sub	x0, x0, x1
     9e8:	add	x26, x21, #0x18
     9ec:	asr	x1, x0, #4
     9f0:	sub	x2, x2, x3
     9f4:	mul	x1, x1, x25
     9f8:	cmp	x0, x2
     9fc:	b.eq	a20 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0xf4>  // b.none
     a00:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     a04:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     a08:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     a0c:	add	x3, x3, #0x0
     a10:	add	x1, x1, #0x0
     a14:	add	x0, x0, #0x0
     a18:	mov	w2, #0xee                  	// #238
     a1c:	bl	0 <__assert_fail>
     a20:	add	x22, sp, #0x60
     a24:	mov	w24, #0x0                   	// #0
     a28:	mov	w27, #0x30                  	// #48
     a2c:	mov	w23, #0x1                   	// #1
     a30:	add	x0, x19, #0x18
     a34:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     a38:	ldp	x0, x1, [x26]
     a3c:	sub	x1, x1, x0
     a40:	asr	x1, x1, #4
     a44:	mul	x1, x1, x25
     a48:	cmp	x1, w24, uxtw
     a4c:	b.ls	9b0 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0x84>  // b.plast
     a50:	umull	x2, w24, w27
     a54:	add	w24, w24, #0x1
     a58:	ldr	x1, [x20, #24]
     a5c:	add	x0, x0, x2
     a60:	ldr	x21, [x19, #24]
     a64:	add	x1, x1, x2
     a68:	add	x1, x1, #0x8
     a6c:	add	x0, x0, #0x8
     a70:	add	x21, x21, x2
     a74:	bl	0 <_ZNK4llvm5APInt13compareSignedERKS0_>
     a78:	mov	x1, x22
     a7c:	add	x21, x21, #0x8
     a80:	lsr	w0, w0, #31
     a84:	str	x0, [sp, #96]
     a88:	mov	x0, x21
     a8c:	str	w23, [sp, #104]
     a90:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     a94:	mov	x0, x22
     a98:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     a9c:	b	a38 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0x10c>
     aa0:	ldr	x0, [x20]
     aa4:	ldr	x1, [x21]
     aa8:	cmp	x1, x0
     aac:	mov	w1, #0x1                   	// #1
     ab0:	cset	x0, cc  // cc = lo, ul, last
     ab4:	str	w1, [sp, #104]
     ab8:	b	994 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0x68>
     abc:	bl	0 <_ZN4llvm4dbgsEv>
     ac0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     ac4:	add	x1, x1, #0x0
     ac8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     acc:	mov	x1, x22
     ad0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     ad4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     ad8:	add	x1, x1, #0x0
     adc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     ae0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     ae4:	mov	w2, #0xf2                  	// #242
     ae8:	add	x1, x1, #0x0
     aec:	mov	x0, #0x0                   	// #0
     af0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000000af4 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE>:
     af4:	stp	x29, x30, [sp, #-112]!
     af8:	mov	x29, sp
     afc:	stp	x21, x22, [sp, #32]
     b00:	mov	x22, x2
     b04:	mov	x21, x0
     b08:	mov	x0, x8
     b0c:	stp	x19, x20, [sp, #16]
     b10:	mov	x19, x8
     b14:	mov	x20, x1
     b18:	stp	x23, x24, [sp, #48]
     b1c:	stp	x25, x26, [sp, #64]
     b20:	str	x27, [sp, #80]
     b24:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     b28:	ldrb	w0, [x22, #8]
     b2c:	cmp	w0, #0xf
     b30:	b.eq	c70 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x17c>  // b.none
     b34:	cmp	w0, #0x10
     b38:	b.eq	b9c <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0xa8>  // b.none
     b3c:	cmp	w0, #0xb
     b40:	b.ne	c8c <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x198>  // b.any
     b44:	add	x1, x20, #0x8
     b48:	add	x0, x21, #0x8
     b4c:	bl	0 <_ZNK4llvm5APInt7compareERKS0_>
     b50:	cmp	w0, #0x0
     b54:	cset	x0, gt
     b58:	mov	w1, #0x1                   	// #1
     b5c:	str	w1, [sp, #104]
     b60:	add	x20, sp, #0x60
     b64:	str	x0, [sp, #96]
     b68:	mov	x1, x20
     b6c:	add	x0, x19, #0x8
     b70:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     b74:	mov	x0, x20
     b78:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     b7c:	mov	x0, x19
     b80:	ldp	x19, x20, [sp, #16]
     b84:	ldp	x21, x22, [sp, #32]
     b88:	ldp	x23, x24, [sp, #48]
     b8c:	ldp	x25, x26, [sp, #64]
     b90:	ldr	x27, [sp, #80]
     b94:	ldp	x29, x30, [sp], #112
     b98:	ret
     b9c:	ldr	x1, [x21, #24]
     ba0:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     ba4:	ldr	x0, [x21, #32]
     ba8:	movk	x25, #0xaaab
     bac:	ldp	x3, x2, [x20, #24]
     bb0:	sub	x0, x0, x1
     bb4:	add	x26, x21, #0x18
     bb8:	asr	x1, x0, #4
     bbc:	sub	x2, x2, x3
     bc0:	mul	x1, x1, x25
     bc4:	cmp	x0, x2
     bc8:	b.eq	bec <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0xf8>  // b.none
     bcc:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     bd0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     bd4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     bd8:	add	x3, x3, #0x0
     bdc:	add	x1, x1, #0x0
     be0:	add	x0, x0, #0x0
     be4:	mov	w2, #0xfc                  	// #252
     be8:	bl	0 <__assert_fail>
     bec:	add	x22, sp, #0x60
     bf0:	mov	w24, #0x0                   	// #0
     bf4:	mov	w27, #0x30                  	// #48
     bf8:	mov	w23, #0x1                   	// #1
     bfc:	add	x0, x19, #0x18
     c00:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     c04:	ldp	x0, x1, [x26]
     c08:	sub	x1, x1, x0
     c0c:	asr	x1, x1, #4
     c10:	mul	x1, x1, x25
     c14:	cmp	x1, w24, uxtw
     c18:	b.ls	b7c <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x88>  // b.plast
     c1c:	umull	x2, w24, w27
     c20:	add	w24, w24, #0x1
     c24:	ldr	x1, [x20, #24]
     c28:	add	x0, x0, x2
     c2c:	ldr	x21, [x19, #24]
     c30:	add	x1, x1, x2
     c34:	add	x1, x1, #0x8
     c38:	add	x0, x0, #0x8
     c3c:	add	x21, x21, x2
     c40:	bl	0 <_ZNK4llvm5APInt7compareERKS0_>
     c44:	cmp	w0, #0x0
     c48:	mov	x1, x22
     c4c:	cset	x0, gt
     c50:	add	x21, x21, #0x8
     c54:	str	x0, [sp, #96]
     c58:	mov	x0, x21
     c5c:	str	w23, [sp, #104]
     c60:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     c64:	mov	x0, x22
     c68:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     c6c:	b	c04 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x110>
     c70:	ldr	x0, [x20]
     c74:	ldr	x1, [x21]
     c78:	cmp	x1, x0
     c7c:	mov	w1, #0x1                   	// #1
     c80:	cset	x0, hi  // hi = pmore
     c84:	str	w1, [sp, #104]
     c88:	b	b60 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x6c>
     c8c:	bl	0 <_ZN4llvm4dbgsEv>
     c90:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     c94:	add	x1, x1, #0x0
     c98:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     c9c:	mov	x1, x22
     ca0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     ca4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     ca8:	add	x1, x1, #0x0
     cac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     cb0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     cb4:	mov	w2, #0x100                 	// #256
     cb8:	add	x1, x1, #0x0
     cbc:	mov	x0, #0x0                   	// #0
     cc0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000000cc4 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE>:
     cc4:	stp	x29, x30, [sp, #-112]!
     cc8:	mov	x29, sp
     ccc:	stp	x21, x22, [sp, #32]
     cd0:	mov	x22, x2
     cd4:	mov	x21, x0
     cd8:	mov	x0, x8
     cdc:	stp	x19, x20, [sp, #16]
     ce0:	mov	x19, x8
     ce4:	mov	x20, x1
     ce8:	stp	x23, x24, [sp, #48]
     cec:	stp	x25, x26, [sp, #64]
     cf0:	str	x27, [sp, #80]
     cf4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     cf8:	ldrb	w0, [x22, #8]
     cfc:	cmp	w0, #0xf
     d00:	b.eq	e40 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0x17c>  // b.none
     d04:	cmp	w0, #0x10
     d08:	b.eq	d6c <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0xa8>  // b.none
     d0c:	cmp	w0, #0xb
     d10:	b.ne	e5c <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0x198>  // b.any
     d14:	add	x1, x20, #0x8
     d18:	add	x0, x21, #0x8
     d1c:	bl	0 <_ZNK4llvm5APInt13compareSignedERKS0_>
     d20:	cmp	w0, #0x0
     d24:	cset	x0, gt
     d28:	mov	w1, #0x1                   	// #1
     d2c:	str	w1, [sp, #104]
     d30:	add	x20, sp, #0x60
     d34:	str	x0, [sp, #96]
     d38:	mov	x1, x20
     d3c:	add	x0, x19, #0x8
     d40:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     d44:	mov	x0, x20
     d48:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     d4c:	mov	x0, x19
     d50:	ldp	x19, x20, [sp, #16]
     d54:	ldp	x21, x22, [sp, #32]
     d58:	ldp	x23, x24, [sp, #48]
     d5c:	ldp	x25, x26, [sp, #64]
     d60:	ldr	x27, [sp, #80]
     d64:	ldp	x29, x30, [sp], #112
     d68:	ret
     d6c:	ldr	x1, [x21, #24]
     d70:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     d74:	ldr	x0, [x21, #32]
     d78:	movk	x25, #0xaaab
     d7c:	ldp	x3, x2, [x20, #24]
     d80:	sub	x0, x0, x1
     d84:	add	x26, x21, #0x18
     d88:	asr	x1, x0, #4
     d8c:	sub	x2, x2, x3
     d90:	mul	x1, x1, x25
     d94:	cmp	x0, x2
     d98:	b.eq	dbc <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0xf8>  // b.none
     d9c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     da0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     da4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     da8:	add	x3, x3, #0x0
     dac:	add	x1, x1, #0x0
     db0:	add	x0, x0, #0x0
     db4:	mov	w2, #0x10a                 	// #266
     db8:	bl	0 <__assert_fail>
     dbc:	add	x22, sp, #0x60
     dc0:	mov	w24, #0x0                   	// #0
     dc4:	mov	w27, #0x30                  	// #48
     dc8:	mov	w23, #0x1                   	// #1
     dcc:	add	x0, x19, #0x18
     dd0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     dd4:	ldp	x0, x1, [x26]
     dd8:	sub	x1, x1, x0
     ddc:	asr	x1, x1, #4
     de0:	mul	x1, x1, x25
     de4:	cmp	x1, w24, uxtw
     de8:	b.ls	d4c <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0x88>  // b.plast
     dec:	umull	x2, w24, w27
     df0:	add	w24, w24, #0x1
     df4:	ldr	x1, [x20, #24]
     df8:	add	x0, x0, x2
     dfc:	ldr	x21, [x19, #24]
     e00:	add	x1, x1, x2
     e04:	add	x1, x1, #0x8
     e08:	add	x0, x0, #0x8
     e0c:	add	x21, x21, x2
     e10:	bl	0 <_ZNK4llvm5APInt13compareSignedERKS0_>
     e14:	cmp	w0, #0x0
     e18:	mov	x1, x22
     e1c:	cset	x0, gt
     e20:	add	x21, x21, #0x8
     e24:	str	x0, [sp, #96]
     e28:	mov	x0, x21
     e2c:	str	w23, [sp, #104]
     e30:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     e34:	mov	x0, x22
     e38:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     e3c:	b	dd4 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0x110>
     e40:	ldr	x0, [x20]
     e44:	ldr	x1, [x21]
     e48:	cmp	x1, x0
     e4c:	mov	w1, #0x1                   	// #1
     e50:	cset	x0, hi  // hi = pmore
     e54:	str	w1, [sp, #104]
     e58:	b	d30 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0x6c>
     e5c:	bl	0 <_ZN4llvm4dbgsEv>
     e60:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     e64:	add	x1, x1, #0x0
     e68:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     e6c:	mov	x1, x22
     e70:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     e74:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     e78:	add	x1, x1, #0x0
     e7c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     e80:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     e84:	mov	w2, #0x10e                 	// #270
     e88:	add	x1, x1, #0x0
     e8c:	mov	x0, #0x0                   	// #0
     e90:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000000e94 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE>:
     e94:	stp	x29, x30, [sp, #-112]!
     e98:	mov	x29, sp
     e9c:	stp	x21, x22, [sp, #32]
     ea0:	mov	x22, x2
     ea4:	mov	x21, x0
     ea8:	mov	x0, x8
     eac:	stp	x19, x20, [sp, #16]
     eb0:	mov	x19, x8
     eb4:	mov	x20, x1
     eb8:	stp	x23, x24, [sp, #48]
     ebc:	stp	x25, x26, [sp, #64]
     ec0:	str	x27, [sp, #80]
     ec4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     ec8:	ldrb	w0, [x22, #8]
     ecc:	cmp	w0, #0xf
     ed0:	b.eq	1010 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x17c>  // b.none
     ed4:	cmp	w0, #0x10
     ed8:	b.eq	f3c <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0xa8>  // b.none
     edc:	cmp	w0, #0xb
     ee0:	b.ne	102c <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x198>  // b.any
     ee4:	add	x1, x20, #0x8
     ee8:	add	x0, x21, #0x8
     eec:	bl	0 <_ZNK4llvm5APInt7compareERKS0_>
     ef0:	cmp	w0, #0x0
     ef4:	cset	x0, le
     ef8:	mov	w1, #0x1                   	// #1
     efc:	str	w1, [sp, #104]
     f00:	add	x20, sp, #0x60
     f04:	str	x0, [sp, #96]
     f08:	mov	x1, x20
     f0c:	add	x0, x19, #0x8
     f10:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     f14:	mov	x0, x20
     f18:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     f1c:	mov	x0, x19
     f20:	ldp	x19, x20, [sp, #16]
     f24:	ldp	x21, x22, [sp, #32]
     f28:	ldp	x23, x24, [sp, #48]
     f2c:	ldp	x25, x26, [sp, #64]
     f30:	ldr	x27, [sp, #80]
     f34:	ldp	x29, x30, [sp], #112
     f38:	ret
     f3c:	ldr	x1, [x21, #24]
     f40:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     f44:	ldr	x0, [x21, #32]
     f48:	movk	x25, #0xaaab
     f4c:	ldp	x3, x2, [x20, #24]
     f50:	sub	x0, x0, x1
     f54:	add	x26, x21, #0x18
     f58:	asr	x1, x0, #4
     f5c:	sub	x2, x2, x3
     f60:	mul	x1, x1, x25
     f64:	cmp	x0, x2
     f68:	b.eq	f8c <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0xf8>  // b.none
     f6c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     f70:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     f74:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     f78:	add	x3, x3, #0x0
     f7c:	add	x1, x1, #0x0
     f80:	add	x0, x0, #0x0
     f84:	mov	w2, #0x118                 	// #280
     f88:	bl	0 <__assert_fail>
     f8c:	add	x22, sp, #0x60
     f90:	mov	w24, #0x0                   	// #0
     f94:	mov	w27, #0x30                  	// #48
     f98:	mov	w23, #0x1                   	// #1
     f9c:	add	x0, x19, #0x18
     fa0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     fa4:	ldp	x0, x1, [x26]
     fa8:	sub	x1, x1, x0
     fac:	asr	x1, x1, #4
     fb0:	mul	x1, x1, x25
     fb4:	cmp	x1, w24, uxtw
     fb8:	b.ls	f1c <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x88>  // b.plast
     fbc:	umull	x2, w24, w27
     fc0:	add	w24, w24, #0x1
     fc4:	ldr	x1, [x20, #24]
     fc8:	add	x0, x0, x2
     fcc:	ldr	x21, [x19, #24]
     fd0:	add	x1, x1, x2
     fd4:	add	x1, x1, #0x8
     fd8:	add	x0, x0, #0x8
     fdc:	add	x21, x21, x2
     fe0:	bl	0 <_ZNK4llvm5APInt7compareERKS0_>
     fe4:	cmp	w0, #0x0
     fe8:	mov	x1, x22
     fec:	cset	x0, le
     ff0:	add	x21, x21, #0x8
     ff4:	str	x0, [sp, #96]
     ff8:	mov	x0, x21
     ffc:	str	w23, [sp, #104]
    1000:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1004:	mov	x0, x22
    1008:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    100c:	b	fa4 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x110>
    1010:	ldr	x0, [x20]
    1014:	ldr	x1, [x21]
    1018:	cmp	x1, x0
    101c:	mov	w1, #0x1                   	// #1
    1020:	cset	x0, ls  // ls = plast
    1024:	str	w1, [sp, #104]
    1028:	b	f00 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x6c>
    102c:	bl	0 <_ZN4llvm4dbgsEv>
    1030:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1034:	add	x1, x1, #0x0
    1038:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    103c:	mov	x1, x22
    1040:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1044:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1048:	add	x1, x1, #0x0
    104c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1050:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1054:	mov	w2, #0x11c                 	// #284
    1058:	add	x1, x1, #0x0
    105c:	mov	x0, #0x0                   	// #0
    1060:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000001064 <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE>:
    1064:	stp	x29, x30, [sp, #-112]!
    1068:	mov	x29, sp
    106c:	stp	x21, x22, [sp, #32]
    1070:	mov	x22, x2
    1074:	mov	x21, x0
    1078:	mov	x0, x8
    107c:	stp	x19, x20, [sp, #16]
    1080:	mov	x19, x8
    1084:	mov	x20, x1
    1088:	stp	x23, x24, [sp, #48]
    108c:	stp	x25, x26, [sp, #64]
    1090:	str	x27, [sp, #80]
    1094:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1098:	ldrb	w0, [x22, #8]
    109c:	cmp	w0, #0xf
    10a0:	b.eq	11e0 <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0x17c>  // b.none
    10a4:	cmp	w0, #0x10
    10a8:	b.eq	110c <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0xa8>  // b.none
    10ac:	cmp	w0, #0xb
    10b0:	b.ne	11fc <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0x198>  // b.any
    10b4:	add	x1, x20, #0x8
    10b8:	add	x0, x21, #0x8
    10bc:	bl	0 <_ZNK4llvm5APInt13compareSignedERKS0_>
    10c0:	cmp	w0, #0x0
    10c4:	cset	x0, le
    10c8:	mov	w1, #0x1                   	// #1
    10cc:	str	w1, [sp, #104]
    10d0:	add	x20, sp, #0x60
    10d4:	str	x0, [sp, #96]
    10d8:	mov	x1, x20
    10dc:	add	x0, x19, #0x8
    10e0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    10e4:	mov	x0, x20
    10e8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    10ec:	mov	x0, x19
    10f0:	ldp	x19, x20, [sp, #16]
    10f4:	ldp	x21, x22, [sp, #32]
    10f8:	ldp	x23, x24, [sp, #48]
    10fc:	ldp	x25, x26, [sp, #64]
    1100:	ldr	x27, [sp, #80]
    1104:	ldp	x29, x30, [sp], #112
    1108:	ret
    110c:	ldr	x1, [x21, #24]
    1110:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1114:	ldr	x0, [x21, #32]
    1118:	movk	x25, #0xaaab
    111c:	ldp	x3, x2, [x20, #24]
    1120:	sub	x0, x0, x1
    1124:	add	x26, x21, #0x18
    1128:	asr	x1, x0, #4
    112c:	sub	x2, x2, x3
    1130:	mul	x1, x1, x25
    1134:	cmp	x0, x2
    1138:	b.eq	115c <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0xf8>  // b.none
    113c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1140:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1144:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1148:	add	x3, x3, #0x0
    114c:	add	x1, x1, #0x0
    1150:	add	x0, x0, #0x0
    1154:	mov	w2, #0x126                 	// #294
    1158:	bl	0 <__assert_fail>
    115c:	add	x22, sp, #0x60
    1160:	mov	w24, #0x0                   	// #0
    1164:	mov	w27, #0x30                  	// #48
    1168:	mov	w23, #0x1                   	// #1
    116c:	add	x0, x19, #0x18
    1170:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1174:	ldp	x0, x1, [x26]
    1178:	sub	x1, x1, x0
    117c:	asr	x1, x1, #4
    1180:	mul	x1, x1, x25
    1184:	cmp	x1, w24, uxtw
    1188:	b.ls	10ec <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0x88>  // b.plast
    118c:	umull	x2, w24, w27
    1190:	add	w24, w24, #0x1
    1194:	ldr	x1, [x20, #24]
    1198:	add	x0, x0, x2
    119c:	ldr	x21, [x19, #24]
    11a0:	add	x1, x1, x2
    11a4:	add	x1, x1, #0x8
    11a8:	add	x0, x0, #0x8
    11ac:	add	x21, x21, x2
    11b0:	bl	0 <_ZNK4llvm5APInt13compareSignedERKS0_>
    11b4:	cmp	w0, #0x0
    11b8:	mov	x1, x22
    11bc:	cset	x0, le
    11c0:	add	x21, x21, #0x8
    11c4:	str	x0, [sp, #96]
    11c8:	mov	x0, x21
    11cc:	str	w23, [sp, #104]
    11d0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    11d4:	mov	x0, x22
    11d8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    11dc:	b	1174 <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0x110>
    11e0:	ldr	x0, [x20]
    11e4:	ldr	x1, [x21]
    11e8:	cmp	x1, x0
    11ec:	mov	w1, #0x1                   	// #1
    11f0:	cset	x0, ls  // ls = plast
    11f4:	str	w1, [sp, #104]
    11f8:	b	10d0 <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0x6c>
    11fc:	bl	0 <_ZN4llvm4dbgsEv>
    1200:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1204:	add	x1, x1, #0x0
    1208:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    120c:	mov	x1, x22
    1210:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1214:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1218:	add	x1, x1, #0x0
    121c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1220:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1224:	mov	w2, #0x12a                 	// #298
    1228:	add	x1, x1, #0x0
    122c:	mov	x0, #0x0                   	// #0
    1230:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000001234 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE>:
    1234:	stp	x29, x30, [sp, #-112]!
    1238:	mov	x29, sp
    123c:	stp	x21, x22, [sp, #32]
    1240:	mov	x22, x2
    1244:	mov	x21, x0
    1248:	mov	x0, x8
    124c:	stp	x19, x20, [sp, #16]
    1250:	mov	x19, x8
    1254:	mov	x20, x1
    1258:	stp	x23, x24, [sp, #48]
    125c:	stp	x25, x26, [sp, #64]
    1260:	str	x27, [sp, #80]
    1264:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1268:	ldrb	w0, [x22, #8]
    126c:	cmp	w0, #0xf
    1270:	b.eq	13b0 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x17c>  // b.none
    1274:	cmp	w0, #0x10
    1278:	b.eq	12dc <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0xa8>  // b.none
    127c:	cmp	w0, #0xb
    1280:	b.ne	13cc <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x198>  // b.any
    1284:	add	x1, x20, #0x8
    1288:	add	x0, x21, #0x8
    128c:	bl	0 <_ZNK4llvm5APInt7compareERKS0_>
    1290:	eor	x0, x0, #0x80000000
    1294:	mov	w1, #0x1                   	// #1
    1298:	str	w1, [sp, #104]
    129c:	lsr	w0, w0, #31
    12a0:	add	x20, sp, #0x60
    12a4:	str	x0, [sp, #96]
    12a8:	mov	x1, x20
    12ac:	add	x0, x19, #0x8
    12b0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    12b4:	mov	x0, x20
    12b8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    12bc:	mov	x0, x19
    12c0:	ldp	x19, x20, [sp, #16]
    12c4:	ldp	x21, x22, [sp, #32]
    12c8:	ldp	x23, x24, [sp, #48]
    12cc:	ldp	x25, x26, [sp, #64]
    12d0:	ldr	x27, [sp, #80]
    12d4:	ldp	x29, x30, [sp], #112
    12d8:	ret
    12dc:	ldr	x1, [x21, #24]
    12e0:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    12e4:	ldr	x0, [x21, #32]
    12e8:	movk	x25, #0xaaab
    12ec:	ldp	x3, x2, [x20, #24]
    12f0:	sub	x0, x0, x1
    12f4:	add	x26, x21, #0x18
    12f8:	asr	x1, x0, #4
    12fc:	sub	x2, x2, x3
    1300:	mul	x1, x1, x25
    1304:	cmp	x0, x2
    1308:	b.eq	132c <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0xf8>  // b.none
    130c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1310:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1314:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1318:	add	x3, x3, #0x0
    131c:	add	x1, x1, #0x0
    1320:	add	x0, x0, #0x0
    1324:	mov	w2, #0x134                 	// #308
    1328:	bl	0 <__assert_fail>
    132c:	add	x22, sp, #0x60
    1330:	mov	w24, #0x0                   	// #0
    1334:	mov	w27, #0x30                  	// #48
    1338:	mov	w23, #0x1                   	// #1
    133c:	add	x0, x19, #0x18
    1340:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1344:	ldp	x0, x1, [x26]
    1348:	sub	x1, x1, x0
    134c:	asr	x1, x1, #4
    1350:	mul	x1, x1, x25
    1354:	cmp	x1, w24, uxtw
    1358:	b.ls	12bc <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x88>  // b.plast
    135c:	umull	x2, w24, w27
    1360:	add	w24, w24, #0x1
    1364:	ldr	x1, [x20, #24]
    1368:	add	x0, x0, x2
    136c:	ldr	x21, [x19, #24]
    1370:	add	x1, x1, x2
    1374:	add	x1, x1, #0x8
    1378:	add	x0, x0, #0x8
    137c:	add	x21, x21, x2
    1380:	bl	0 <_ZNK4llvm5APInt7compareERKS0_>
    1384:	eor	x0, x0, #0x80000000
    1388:	mov	x1, x22
    138c:	add	x21, x21, #0x8
    1390:	str	w23, [sp, #104]
    1394:	lsr	w0, w0, #31
    1398:	str	x0, [sp, #96]
    139c:	mov	x0, x21
    13a0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    13a4:	mov	x0, x22
    13a8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    13ac:	b	1344 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x110>
    13b0:	ldr	x0, [x20]
    13b4:	ldr	x1, [x21]
    13b8:	cmp	x1, x0
    13bc:	mov	w1, #0x1                   	// #1
    13c0:	cset	x0, cs  // cs = hs, nlast
    13c4:	str	w1, [sp, #104]
    13c8:	b	12a0 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x6c>
    13cc:	bl	0 <_ZN4llvm4dbgsEv>
    13d0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    13d4:	add	x1, x1, #0x0
    13d8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    13dc:	mov	x1, x22
    13e0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    13e4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    13e8:	add	x1, x1, #0x0
    13ec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    13f0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    13f4:	mov	w2, #0x138                 	// #312
    13f8:	add	x1, x1, #0x0
    13fc:	mov	x0, #0x0                   	// #0
    1400:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000001404 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE>:
    1404:	stp	x29, x30, [sp, #-112]!
    1408:	mov	x29, sp
    140c:	stp	x21, x22, [sp, #32]
    1410:	mov	x22, x2
    1414:	mov	x21, x0
    1418:	mov	x0, x8
    141c:	stp	x19, x20, [sp, #16]
    1420:	mov	x19, x8
    1424:	mov	x20, x1
    1428:	stp	x23, x24, [sp, #48]
    142c:	stp	x25, x26, [sp, #64]
    1430:	str	x27, [sp, #80]
    1434:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1438:	ldrb	w0, [x22, #8]
    143c:	cmp	w0, #0xf
    1440:	b.eq	1580 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0x17c>  // b.none
    1444:	cmp	w0, #0x10
    1448:	b.eq	14ac <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0xa8>  // b.none
    144c:	cmp	w0, #0xb
    1450:	b.ne	159c <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0x198>  // b.any
    1454:	add	x1, x20, #0x8
    1458:	add	x0, x21, #0x8
    145c:	bl	0 <_ZNK4llvm5APInt13compareSignedERKS0_>
    1460:	eor	x0, x0, #0x80000000
    1464:	mov	w1, #0x1                   	// #1
    1468:	str	w1, [sp, #104]
    146c:	lsr	w0, w0, #31
    1470:	add	x20, sp, #0x60
    1474:	str	x0, [sp, #96]
    1478:	mov	x1, x20
    147c:	add	x0, x19, #0x8
    1480:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1484:	mov	x0, x20
    1488:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    148c:	mov	x0, x19
    1490:	ldp	x19, x20, [sp, #16]
    1494:	ldp	x21, x22, [sp, #32]
    1498:	ldp	x23, x24, [sp, #48]
    149c:	ldp	x25, x26, [sp, #64]
    14a0:	ldr	x27, [sp, #80]
    14a4:	ldp	x29, x30, [sp], #112
    14a8:	ret
    14ac:	ldr	x1, [x21, #24]
    14b0:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    14b4:	ldr	x0, [x21, #32]
    14b8:	movk	x25, #0xaaab
    14bc:	ldp	x3, x2, [x20, #24]
    14c0:	sub	x0, x0, x1
    14c4:	add	x26, x21, #0x18
    14c8:	asr	x1, x0, #4
    14cc:	sub	x2, x2, x3
    14d0:	mul	x1, x1, x25
    14d4:	cmp	x0, x2
    14d8:	b.eq	14fc <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0xf8>  // b.none
    14dc:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    14e0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    14e4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    14e8:	add	x3, x3, #0x0
    14ec:	add	x1, x1, #0x0
    14f0:	add	x0, x0, #0x0
    14f4:	mov	w2, #0x142                 	// #322
    14f8:	bl	0 <__assert_fail>
    14fc:	add	x22, sp, #0x60
    1500:	mov	w24, #0x0                   	// #0
    1504:	mov	w27, #0x30                  	// #48
    1508:	mov	w23, #0x1                   	// #1
    150c:	add	x0, x19, #0x18
    1510:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1514:	ldp	x0, x1, [x26]
    1518:	sub	x1, x1, x0
    151c:	asr	x1, x1, #4
    1520:	mul	x1, x1, x25
    1524:	cmp	x1, w24, uxtw
    1528:	b.ls	148c <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0x88>  // b.plast
    152c:	umull	x2, w24, w27
    1530:	add	w24, w24, #0x1
    1534:	ldr	x1, [x20, #24]
    1538:	add	x0, x0, x2
    153c:	ldr	x21, [x19, #24]
    1540:	add	x1, x1, x2
    1544:	add	x1, x1, #0x8
    1548:	add	x0, x0, #0x8
    154c:	add	x21, x21, x2
    1550:	bl	0 <_ZNK4llvm5APInt13compareSignedERKS0_>
    1554:	eor	x0, x0, #0x80000000
    1558:	mov	x1, x22
    155c:	add	x21, x21, #0x8
    1560:	str	w23, [sp, #104]
    1564:	lsr	w0, w0, #31
    1568:	str	x0, [sp, #96]
    156c:	mov	x0, x21
    1570:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1574:	mov	x0, x22
    1578:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    157c:	b	1514 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0x110>
    1580:	ldr	x0, [x20]
    1584:	ldr	x1, [x21]
    1588:	cmp	x1, x0
    158c:	mov	w1, #0x1                   	// #1
    1590:	cset	x0, cs  // cs = hs, nlast
    1594:	str	w1, [sp, #104]
    1598:	b	1470 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0x6c>
    159c:	bl	0 <_ZN4llvm4dbgsEv>
    15a0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    15a4:	add	x1, x1, #0x0
    15a8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    15ac:	mov	x1, x22
    15b0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    15b4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    15b8:	add	x1, x1, #0x0
    15bc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    15c0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    15c4:	mov	w2, #0x146                 	// #326
    15c8:	add	x1, x1, #0x0
    15cc:	mov	x0, #0x0                   	// #0
    15d0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

00000000000015d4 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb>:
    15d4:	stp	x29, x30, [sp, #-96]!
    15d8:	mov	x29, sp
    15dc:	stp	x23, x24, [sp, #48]
    15e0:	mov	x23, x2
    15e4:	stp	x19, x20, [sp, #16]
    15e8:	mov	x19, x8
    15ec:	and	w20, w3, #0xff
    15f0:	stp	x21, x22, [sp, #32]
    15f4:	mov	x22, x0
    15f8:	mov	x21, x1
    15fc:	mov	x0, x8
    1600:	stp	x25, x26, [sp, #64]
    1604:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1608:	ldrb	w0, [x23, #8]
    160c:	cmp	w0, #0x10
    1610:	b.ne	16c8 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb+0xf4>  // b.any
    1614:	ldr	x0, [x22, #24]
    1618:	add	x23, x22, #0x18
    161c:	ldr	x2, [x23, #8]
    1620:	mov	x22, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1624:	ldr	x3, [x21, #24]
    1628:	sub	x0, x2, x0
    162c:	ldr	x2, [x21, #32]
    1630:	asr	x1, x0, #4
    1634:	movk	x22, #0xaaab
    1638:	sub	x2, x2, x3
    163c:	mul	x1, x1, x22
    1640:	cmp	x2, x0
    1644:	b.eq	1668 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb+0x94>  // b.none
    1648:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    164c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1650:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1654:	add	x3, x3, #0x0
    1658:	add	x1, x1, #0x0
    165c:	add	x0, x0, #0x0
    1660:	mov	w2, #0x28c                 	// #652
    1664:	bl	0 <__assert_fail>
    1668:	and	x20, x20, #0xff
    166c:	add	x24, sp, #0x50
    1670:	mov	x21, #0x0                   	// #0
    1674:	mov	x26, #0x30                  	// #48
    1678:	mov	w25, #0x1                   	// #1
    167c:	add	x0, x19, #0x18
    1680:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1684:	ldp	x1, x0, [x23]
    1688:	sub	x0, x0, x1
    168c:	asr	x0, x0, #4
    1690:	mul	x0, x0, x22
    1694:	cmp	x21, x0
    1698:	b.cs	16f0 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb+0x11c>  // b.hs, b.nlast
    169c:	ldr	x0, [x19, #24]
    16a0:	mov	x1, x24
    16a4:	str	x20, [sp, #80]
    16a8:	str	w25, [sp, #88]
    16ac:	madd	x0, x21, x26, x0
    16b0:	add	x21, x21, #0x1
    16b4:	add	x0, x0, #0x8
    16b8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    16bc:	mov	x0, x24
    16c0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    16c4:	b	1684 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb+0xb0>
    16c8:	and	x20, x20, #0xff
    16cc:	str	x20, [sp, #80]
    16d0:	add	x20, sp, #0x50
    16d4:	mov	w0, #0x1                   	// #1
    16d8:	mov	x1, x20
    16dc:	str	w0, [sp, #88]
    16e0:	add	x0, x19, #0x8
    16e4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    16e8:	mov	x0, x20
    16ec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    16f0:	mov	x0, x19
    16f4:	ldp	x19, x20, [sp, #16]
    16f8:	ldp	x21, x22, [sp, #32]
    16fc:	ldp	x23, x24, [sp, #48]
    1700:	ldp	x25, x26, [sp, #64]
    1704:	ldp	x29, x30, [sp], #96
    1708:	ret

000000000000170c <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE>:
    170c:	stp	x29, x30, [sp, #-96]!
    1710:	mov	x29, sp
    1714:	stp	x23, x24, [sp, #48]
    1718:	mov	x23, x2
    171c:	stp	x19, x20, [sp, #16]
    1720:	mov	x20, x1
    1724:	mov	x19, x8
    1728:	stp	x21, x22, [sp, #32]
    172c:	mov	x21, x0
    1730:	mov	x0, x8
    1734:	stp	x25, x26, [sp, #64]
    1738:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    173c:	ldrb	w1, [x23, #8]
    1740:	cmp	w1, #0x10
    1744:	b.ne	18a8 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x19c>  // b.any
    1748:	ldr	x1, [x21, #24]
    174c:	add	x22, x21, #0x18
    1750:	ldr	x0, [x22, #8]
    1754:	mov	x21, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1758:	ldp	x3, x2, [x20, #24]
    175c:	sub	x0, x0, x1
    1760:	movk	x21, #0xaaab
    1764:	asr	x1, x0, #4
    1768:	sub	x2, x2, x3
    176c:	mul	x1, x1, x21
    1770:	cmp	x2, x0
    1774:	b.eq	1798 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x8c>  // b.none
    1778:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    177c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1780:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1784:	add	x3, x3, #0x0
    1788:	add	x1, x1, #0x0
    178c:	add	x0, x0, #0x0
    1790:	mov	w2, #0x24e                 	// #590
    1794:	bl	0 <__assert_fail>
    1798:	add	x0, x19, #0x18
    179c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    17a0:	mov	x0, x23
    17a4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    17a8:	ldr	x0, [x0, #24]
    17ac:	add	x24, sp, #0x50
    17b0:	mov	x23, #0x0                   	// #0
    17b4:	mov	x26, #0x30                  	// #48
    17b8:	mov	w25, #0x1                   	// #1
    17bc:	ldrb	w0, [x0, #8]
    17c0:	cmp	w0, #0x2
    17c4:	b.ne	1838 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x12c>  // b.any
    17c8:	ldp	x1, x0, [x22]
    17cc:	sub	x0, x0, x1
    17d0:	asr	x0, x0, #4
    17d4:	mul	x0, x0, x21
    17d8:	cmp	x23, x0
    17dc:	b.cs	18f0 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x1e4>  // b.hs, b.nlast
    17e0:	mul	x2, x23, x26
    17e4:	ldr	x0, [x19, #24]
    17e8:	ldr	s0, [x1, x2]
    17ec:	add	x0, x0, x2
    17f0:	add	x0, x0, #0x8
    17f4:	fcmp	s0, s0
    17f8:	b.ne	1830 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x124>  // b.any
    17fc:	ldr	x1, [x20, #24]
    1800:	ldr	s0, [x1, x2]
    1804:	fcmp	s0, s0
    1808:	cset	w2, eq  // eq = none
    180c:	and	x2, x2, #0xff
    1810:	mov	x1, x24
    1814:	str	x2, [sp, #80]
    1818:	add	x23, x23, #0x1
    181c:	str	w25, [sp, #88]
    1820:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1824:	mov	x0, x24
    1828:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    182c:	b	17c8 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0xbc>
    1830:	mov	w2, #0x0                   	// #0
    1834:	b	180c <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x100>
    1838:	ldp	x1, x0, [x22]
    183c:	sub	x0, x0, x1
    1840:	asr	x0, x0, #4
    1844:	mul	x0, x0, x21
    1848:	cmp	x23, x0
    184c:	b.cs	18f0 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x1e4>  // b.hs, b.nlast
    1850:	mul	x2, x23, x26
    1854:	ldr	x0, [x19, #24]
    1858:	ldr	d0, [x1, x2]
    185c:	add	x0, x0, x2
    1860:	add	x0, x0, #0x8
    1864:	fcmp	d0, d0
    1868:	b.ne	18a0 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x194>  // b.any
    186c:	ldr	x1, [x20, #24]
    1870:	ldr	d0, [x1, x2]
    1874:	fcmp	d0, d0
    1878:	cset	w2, eq  // eq = none
    187c:	and	x2, x2, #0xff
    1880:	mov	x1, x24
    1884:	str	x2, [sp, #80]
    1888:	add	x23, x23, #0x1
    188c:	str	w25, [sp, #88]
    1890:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1894:	mov	x0, x24
    1898:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    189c:	b	1838 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x12c>
    18a0:	mov	w2, #0x0                   	// #0
    18a4:	b	187c <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x170>
    18a8:	add	x0, x19, #0x8
    18ac:	cmp	w1, #0x2
    18b0:	add	x22, sp, #0x50
    18b4:	b.ne	190c <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x200>  // b.any
    18b8:	ldr	s0, [x21]
    18bc:	fcmp	s0, s0
    18c0:	b.ne	1924 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x218>  // b.any
    18c4:	ldr	s0, [x20]
    18c8:	fcmp	s0, s0
    18cc:	cset	w1, eq  // eq = none
    18d0:	and	x1, x1, #0xff
    18d4:	mov	w2, #0x1                   	// #1
    18d8:	str	x1, [sp, #80]
    18dc:	mov	x1, x22
    18e0:	str	w2, [sp, #88]
    18e4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    18e8:	mov	x0, x22
    18ec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    18f0:	mov	x0, x19
    18f4:	ldp	x19, x20, [sp, #16]
    18f8:	ldp	x21, x22, [sp, #32]
    18fc:	ldp	x23, x24, [sp, #48]
    1900:	ldp	x25, x26, [sp, #64]
    1904:	ldp	x29, x30, [sp], #96
    1908:	ret
    190c:	ldr	d0, [x21]
    1910:	fcmp	d0, d0
    1914:	b.ne	1924 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x218>  // b.any
    1918:	ldr	d0, [x20]
    191c:	fcmp	d0, d0
    1920:	b	18cc <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x1c0>
    1924:	mov	w1, #0x0                   	// #0
    1928:	b	18d0 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x1c4>

000000000000192c <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE>:
    192c:	stp	x29, x30, [sp, #-96]!
    1930:	mov	x29, sp
    1934:	stp	x23, x24, [sp, #48]
    1938:	mov	x23, x2
    193c:	stp	x19, x20, [sp, #16]
    1940:	mov	x20, x1
    1944:	mov	x19, x8
    1948:	stp	x21, x22, [sp, #32]
    194c:	mov	x21, x0
    1950:	mov	x0, x8
    1954:	stp	x25, x26, [sp, #64]
    1958:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    195c:	ldrb	w1, [x23, #8]
    1960:	cmp	w1, #0x10
    1964:	b.ne	1ac8 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x19c>  // b.any
    1968:	ldr	x1, [x21, #24]
    196c:	add	x22, x21, #0x18
    1970:	ldr	x0, [x22, #8]
    1974:	mov	x21, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1978:	ldp	x3, x2, [x20, #24]
    197c:	sub	x0, x0, x1
    1980:	movk	x21, #0xaaab
    1984:	asr	x1, x0, #4
    1988:	sub	x2, x2, x3
    198c:	mul	x1, x1, x21
    1990:	cmp	x2, x0
    1994:	b.eq	19b8 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x8c>  // b.none
    1998:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    199c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    19a0:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    19a4:	add	x3, x3, #0x0
    19a8:	add	x1, x1, #0x0
    19ac:	add	x0, x0, #0x0
    19b0:	mov	w2, #0x26d                 	// #621
    19b4:	bl	0 <__assert_fail>
    19b8:	add	x0, x19, #0x18
    19bc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    19c0:	mov	x0, x23
    19c4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    19c8:	ldr	x0, [x0, #24]
    19cc:	add	x24, sp, #0x50
    19d0:	mov	x23, #0x0                   	// #0
    19d4:	mov	x26, #0x30                  	// #48
    19d8:	mov	w25, #0x1                   	// #1
    19dc:	ldrb	w0, [x0, #8]
    19e0:	cmp	w0, #0x2
    19e4:	b.ne	1a58 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x12c>  // b.any
    19e8:	ldp	x1, x0, [x22]
    19ec:	sub	x0, x0, x1
    19f0:	asr	x0, x0, #4
    19f4:	mul	x0, x0, x21
    19f8:	cmp	x23, x0
    19fc:	b.cs	1b10 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x1e4>  // b.hs, b.nlast
    1a00:	mul	x2, x23, x26
    1a04:	ldr	x0, [x19, #24]
    1a08:	ldr	s0, [x1, x2]
    1a0c:	add	x0, x0, x2
    1a10:	add	x0, x0, #0x8
    1a14:	fcmp	s0, s0
    1a18:	b.ne	1a50 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x124>  // b.any
    1a1c:	ldr	x1, [x20, #24]
    1a20:	ldr	s0, [x1, x2]
    1a24:	fcmp	s0, s0
    1a28:	cset	w2, ne  // ne = any
    1a2c:	and	x2, x2, #0xff
    1a30:	mov	x1, x24
    1a34:	str	x2, [sp, #80]
    1a38:	add	x23, x23, #0x1
    1a3c:	str	w25, [sp, #88]
    1a40:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1a44:	mov	x0, x24
    1a48:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1a4c:	b	19e8 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0xbc>
    1a50:	mov	w2, #0x1                   	// #1
    1a54:	b	1a2c <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x100>
    1a58:	ldp	x1, x0, [x22]
    1a5c:	sub	x0, x0, x1
    1a60:	asr	x0, x0, #4
    1a64:	mul	x0, x0, x21
    1a68:	cmp	x23, x0
    1a6c:	b.cs	1b10 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x1e4>  // b.hs, b.nlast
    1a70:	mul	x2, x23, x26
    1a74:	ldr	x0, [x19, #24]
    1a78:	ldr	d0, [x1, x2]
    1a7c:	add	x0, x0, x2
    1a80:	add	x0, x0, #0x8
    1a84:	fcmp	d0, d0
    1a88:	b.ne	1ac0 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x194>  // b.any
    1a8c:	ldr	x1, [x20, #24]
    1a90:	ldr	d0, [x1, x2]
    1a94:	fcmp	d0, d0
    1a98:	cset	w2, ne  // ne = any
    1a9c:	and	x2, x2, #0xff
    1aa0:	mov	x1, x24
    1aa4:	str	x2, [sp, #80]
    1aa8:	add	x23, x23, #0x1
    1aac:	str	w25, [sp, #88]
    1ab0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1ab4:	mov	x0, x24
    1ab8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1abc:	b	1a58 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x12c>
    1ac0:	mov	w2, #0x1                   	// #1
    1ac4:	b	1a9c <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x170>
    1ac8:	add	x0, x19, #0x8
    1acc:	cmp	w1, #0x2
    1ad0:	add	x22, sp, #0x50
    1ad4:	b.ne	1b2c <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x200>  // b.any
    1ad8:	ldr	s0, [x21]
    1adc:	fcmp	s0, s0
    1ae0:	b.ne	1b44 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x218>  // b.any
    1ae4:	ldr	s0, [x20]
    1ae8:	fcmp	s0, s0
    1aec:	cset	w1, ne  // ne = any
    1af0:	and	x1, x1, #0xff
    1af4:	mov	w2, #0x1                   	// #1
    1af8:	str	x1, [sp, #80]
    1afc:	mov	x1, x22
    1b00:	str	w2, [sp, #88]
    1b04:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1b08:	mov	x0, x22
    1b0c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1b10:	mov	x0, x19
    1b14:	ldp	x19, x20, [sp, #16]
    1b18:	ldp	x21, x22, [sp, #32]
    1b1c:	ldp	x23, x24, [sp, #48]
    1b20:	ldp	x25, x26, [sp, #64]
    1b24:	ldp	x29, x30, [sp], #96
    1b28:	ret
    1b2c:	ldr	d0, [x21]
    1b30:	fcmp	d0, d0
    1b34:	b.ne	1b44 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x218>  // b.any
    1b38:	ldr	d0, [x20]
    1b3c:	fcmp	d0, d0
    1b40:	b	1aec <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x1c0>
    1b44:	mov	w1, #0x1                   	// #1
    1b48:	b	1af0 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x1c4>

0000000000001b4c <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE>:
    1b4c:	stp	x29, x30, [sp, #-96]!
    1b50:	mov	x29, sp
    1b54:	stp	x21, x22, [sp, #32]
    1b58:	mov	x22, x2
    1b5c:	mov	x21, x0
    1b60:	mov	x0, x8
    1b64:	stp	x19, x20, [sp, #16]
    1b68:	mov	x19, x8
    1b6c:	mov	x20, x1
    1b70:	stp	x23, x24, [sp, #48]
    1b74:	stp	x25, x26, [sp, #64]
    1b78:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1b7c:	ldrb	w0, [x22, #8]
    1b80:	cmp	w0, #0x3
    1b84:	b.eq	1be8 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x9c>  // b.none
    1b88:	cmp	w0, #0x10
    1b8c:	b.eq	1bf8 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0xac>  // b.none
    1b90:	cmp	w0, #0x2
    1b94:	b.ne	1d4c <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x200>  // b.any
    1b98:	ldr	s0, [x20]
    1b9c:	ldr	s1, [x21]
    1ba0:	fcmp	s1, s0
    1ba4:	add	x20, sp, #0x50
    1ba8:	mov	w1, #0x1                   	// #1
    1bac:	str	w1, [sp, #88]
    1bb0:	mov	x1, x20
    1bb4:	cset	x0, eq  // eq = none
    1bb8:	str	x0, [sp, #80]
    1bbc:	add	x0, x19, #0x8
    1bc0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1bc4:	mov	x0, x20
    1bc8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1bcc:	mov	x0, x19
    1bd0:	ldp	x19, x20, [sp, #16]
    1bd4:	ldp	x21, x22, [sp, #32]
    1bd8:	ldp	x23, x24, [sp, #48]
    1bdc:	ldp	x25, x26, [sp, #64]
    1be0:	ldp	x29, x30, [sp], #96
    1be4:	ret
    1be8:	ldr	d0, [x20]
    1bec:	ldr	d1, [x21]
    1bf0:	fcmp	d1, d0
    1bf4:	b	1ba4 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x58>
    1bf8:	mov	x0, x22
    1bfc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1c00:	ldp	x1, x3, [x20, #24]
    1c04:	add	x22, x21, #0x18
    1c08:	ldr	x2, [x22, #8]
    1c0c:	ldr	x0, [x0, #24]
    1c10:	sub	x3, x3, x1
    1c14:	ldr	x1, [x21, #24]
    1c18:	mov	x21, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1c1c:	ldrb	w0, [x0, #8]
    1c20:	movk	x21, #0xaaab
    1c24:	sub	x2, x2, x1
    1c28:	cmp	w0, #0x2
    1c2c:	add	x0, x19, #0x18
    1c30:	asr	x1, x2, #4
    1c34:	mul	x1, x1, x21
    1c38:	b.ne	1cd4 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x188>  // b.any
    1c3c:	cmp	x2, x3
    1c40:	b.eq	1c64 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x118>  // b.none
    1c44:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1c48:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1c4c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1c50:	add	x3, x3, #0x0
    1c54:	add	x1, x1, #0x0
    1c58:	add	x0, x0, #0x0
    1c5c:	mov	w2, #0x180                 	// #384
    1c60:	bl	0 <__assert_fail>
    1c64:	add	x24, sp, #0x50
    1c68:	mov	w23, #0x0                   	// #0
    1c6c:	mov	w26, #0x30                  	// #48
    1c70:	mov	w25, #0x1                   	// #1
    1c74:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1c78:	ldp	x1, x0, [x22]
    1c7c:	sub	x0, x0, x1
    1c80:	asr	x0, x0, #4
    1c84:	mul	x0, x0, x21
    1c88:	cmp	x0, w23, uxtw
    1c8c:	b.ls	1bcc <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x80>  // b.plast
    1c90:	umull	x2, w23, w26
    1c94:	str	w25, [sp, #88]
    1c98:	ldr	x3, [x20, #24]
    1c9c:	add	w23, w23, #0x1
    1ca0:	ldr	x0, [x19, #24]
    1ca4:	ldr	s0, [x1, x2]
    1ca8:	ldr	s1, [x3, x2]
    1cac:	add	x0, x0, x2
    1cb0:	add	x0, x0, #0x8
    1cb4:	fcmp	s1, s0
    1cb8:	cset	x1, eq  // eq = none
    1cbc:	str	x1, [sp, #80]
    1cc0:	mov	x1, x24
    1cc4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1cc8:	mov	x0, x24
    1ccc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1cd0:	b	1c78 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x12c>
    1cd4:	cmp	x2, x3
    1cd8:	b.ne	1c44 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0xf8>  // b.any
    1cdc:	add	x24, sp, #0x50
    1ce0:	mov	w23, #0x0                   	// #0
    1ce4:	mov	w26, #0x30                  	// #48
    1ce8:	mov	w25, #0x1                   	// #1
    1cec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1cf0:	ldp	x1, x0, [x22]
    1cf4:	sub	x0, x0, x1
    1cf8:	asr	x0, x0, #4
    1cfc:	mul	x0, x0, x21
    1d00:	cmp	x0, w23, uxtw
    1d04:	b.ls	1bcc <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x80>  // b.plast
    1d08:	umull	x2, w23, w26
    1d0c:	str	w25, [sp, #88]
    1d10:	ldr	x3, [x20, #24]
    1d14:	add	w23, w23, #0x1
    1d18:	ldr	x0, [x19, #24]
    1d1c:	ldr	d0, [x1, x2]
    1d20:	ldr	d1, [x3, x2]
    1d24:	add	x0, x0, x2
    1d28:	add	x0, x0, #0x8
    1d2c:	fcmp	d1, d0
    1d30:	cset	x1, eq  // eq = none
    1d34:	str	x1, [sp, #80]
    1d38:	mov	x1, x24
    1d3c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1d40:	mov	x0, x24
    1d44:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1d48:	b	1cf0 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x1a4>
    1d4c:	bl	0 <_ZN4llvm4dbgsEv>
    1d50:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1d54:	add	x1, x1, #0x0
    1d58:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1d5c:	mov	x1, x22
    1d60:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1d64:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1d68:	add	x1, x1, #0x0
    1d6c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1d70:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1d74:	mov	w2, #0x183                 	// #387
    1d78:	add	x1, x1, #0x0
    1d7c:	mov	x0, #0x0                   	// #0
    1d80:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000001d84 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE>:
    1d84:	stp	x29, x30, [sp, #-352]!
    1d88:	mov	x29, sp
    1d8c:	stp	x23, x24, [sp, #48]
    1d90:	mov	x24, x2
    1d94:	mov	x23, x8
    1d98:	stp	x19, x20, [sp, #16]
    1d9c:	add	x20, sp, #0x70
    1da0:	add	x19, sp, #0x130
    1da4:	stp	x21, x22, [sp, #32]
    1da8:	mov	x22, x0
    1dac:	mov	x21, x1
    1db0:	mov	x0, x20
    1db4:	stp	x25, x26, [sp, #64]
    1db8:	stp	x27, x28, [sp, #80]
    1dbc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1dc0:	ldrb	w0, [x24, #8]
    1dc4:	cmp	w0, #0x2
    1dc8:	b.ne	1e3c <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0xb8>  // b.any
    1dcc:	ldr	s0, [x22]
    1dd0:	fcmp	s0, s0
    1dd4:	b.ne	1de4 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x60>  // b.any
    1dd8:	ldr	s0, [x21]
    1ddc:	fcmp	s0, s0
    1de0:	b.eq	20f8 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x374>  // b.none
    1de4:	mov	x1, x19
    1de8:	mov	w0, #0x1                   	// #1
    1dec:	str	w0, [sp, #312]
    1df0:	mov	x0, #0x1                   	// #1
    1df4:	str	x0, [sp, #304]
    1df8:	add	x0, x20, #0x8
    1dfc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1e00:	mov	x0, x19
    1e04:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1e08:	mov	x1, x20
    1e0c:	mov	x0, x23
    1e10:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1e14:	mov	x0, x20
    1e18:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1e1c:	mov	x0, x23
    1e20:	ldp	x19, x20, [sp, #16]
    1e24:	ldp	x21, x22, [sp, #32]
    1e28:	ldp	x23, x24, [sp, #48]
    1e2c:	ldp	x25, x26, [sp, #64]
    1e30:	ldp	x27, x28, [sp, #80]
    1e34:	ldp	x29, x30, [sp], #352
    1e38:	ret
    1e3c:	ldr	d0, [x22]
    1e40:	fcmp	d0, d0
    1e44:	b.ne	1de4 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x60>  // b.any
    1e48:	ldr	d0, [x21]
    1e4c:	fcmp	d0, d0
    1e50:	b.ne	1de4 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x60>  // b.any
    1e54:	cmp	w0, #0x10
    1e58:	b.ne	20f8 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x374>  // b.any
    1e5c:	mov	x0, x24
    1e60:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1e64:	ldp	x1, x3, [x21, #24]
    1e68:	mov	x26, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1e6c:	ldr	x2, [x22, #32]
    1e70:	movk	x26, #0xaaab
    1e74:	ldr	x0, [x0, #24]
    1e78:	add	x25, x22, #0x18
    1e7c:	sub	x3, x3, x1
    1e80:	ldr	x1, [x22, #24]
    1e84:	ldrb	w0, [x0, #8]
    1e88:	sub	x2, x2, x1
    1e8c:	cmp	w0, #0x2
    1e90:	add	x0, x20, #0x18
    1e94:	asr	x1, x2, #4
    1e98:	mul	x1, x1, x26
    1e9c:	b.ne	1f54 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x1d0>  // b.any
    1ea0:	cmp	x3, x2
    1ea4:	b.eq	1ec8 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x144>  // b.none
    1ea8:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1eac:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1eb0:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1eb4:	add	x3, x3, #0x0
    1eb8:	add	x1, x1, #0x0
    1ebc:	add	x0, x0, #0x0
    1ec0:	mov	w2, #0x217                 	// #535
    1ec4:	bl	0 <__assert_fail>
    1ec8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1ecc:	mov	w27, #0x0                   	// #0
    1ed0:	mov	x28, #0x1                   	// #1
    1ed4:	str	x26, [sp, #104]
    1ed8:	mov	w26, #0x1                   	// #1
    1edc:	ldp	x3, x0, [x25]
    1ee0:	ldr	x1, [sp, #104]
    1ee4:	sub	x0, x0, x3
    1ee8:	asr	x0, x0, #4
    1eec:	mul	x0, x0, x1
    1ef0:	cmp	x0, w27, uxtw
    1ef4:	b.ls	1fe8 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x264>  // b.plast
    1ef8:	mov	w0, #0x30                  	// #48
    1efc:	umull	x1, w27, w0
    1f00:	ldr	x0, [sp, #136]
    1f04:	ldr	s0, [x3, x1]
    1f08:	add	x0, x0, x1
    1f0c:	add	x0, x0, #0x8
    1f10:	fcmp	s0, s0
    1f14:	b.ne	1f28 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x1a4>  // b.any
    1f18:	ldr	x3, [x21, #24]
    1f1c:	ldr	s0, [x3, x1]
    1f20:	fcmp	s0, s0
    1f24:	b.eq	1f48 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x1c4>  // b.none
    1f28:	str	x28, [sp, #304]
    1f2c:	str	w26, [sp, #312]
    1f30:	mov	x1, x19
    1f34:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1f38:	mov	x0, x19
    1f3c:	add	w27, w27, #0x1
    1f40:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1f44:	b	1edc <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x158>
    1f48:	str	xzr, [sp, #304]
    1f4c:	str	w26, [sp, #312]
    1f50:	b	1f30 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x1ac>
    1f54:	cmp	x3, x2
    1f58:	b.ne	1ea8 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x124>  // b.any
    1f5c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1f60:	mov	w27, #0x0                   	// #0
    1f64:	mov	x28, #0x1                   	// #1
    1f68:	str	x26, [sp, #104]
    1f6c:	mov	w26, #0x1                   	// #1
    1f70:	ldp	x3, x0, [x25]
    1f74:	ldr	x1, [sp, #104]
    1f78:	sub	x0, x0, x3
    1f7c:	asr	x0, x0, #4
    1f80:	mul	x0, x0, x1
    1f84:	cmp	x0, w27, uxtw
    1f88:	b.ls	1fe8 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x264>  // b.plast
    1f8c:	mov	w0, #0x30                  	// #48
    1f90:	umull	x1, w27, w0
    1f94:	ldr	x0, [sp, #136]
    1f98:	ldr	d0, [x3, x1]
    1f9c:	add	x0, x0, x1
    1fa0:	add	x0, x0, #0x8
    1fa4:	fcmp	d0, d0
    1fa8:	b.ne	1fdc <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x258>  // b.any
    1fac:	ldr	x3, [x21, #24]
    1fb0:	ldr	d0, [x3, x1]
    1fb4:	fcmp	d0, d0
    1fb8:	b.ne	1fdc <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x258>  // b.any
    1fbc:	str	xzr, [sp, #304]
    1fc0:	str	w26, [sp, #312]
    1fc4:	mov	x1, x19
    1fc8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1fcc:	mov	x0, x19
    1fd0:	add	w27, w27, #0x1
    1fd4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1fd8:	b	1f70 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x1ec>
    1fdc:	str	x28, [sp, #304]
    1fe0:	str	w26, [sp, #312]
    1fe4:	b	1fc4 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x240>
    1fe8:	ldrb	w0, [x24, #8]
    1fec:	cmp	w0, #0x10
    1ff0:	b.ne	20f8 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x374>  // b.any
    1ff4:	add	x26, sp, #0xa0
    1ff8:	mov	x1, x20
    1ffc:	mov	x0, x26
    2000:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2004:	add	x0, sp, #0xd0
    2008:	mov	x1, x22
    200c:	mov	x22, x0
    2010:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2014:	add	x0, sp, #0x100
    2018:	mov	x1, x21
    201c:	mov	x21, x0
    2020:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2024:	mov	x2, x24
    2028:	mov	x8, x19
    202c:	mov	x1, x21
    2030:	mov	x0, x22
    2034:	bl	1b4c <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE>
    2038:	mov	x28, #0x0                   	// #0
    203c:	mov	x1, x19
    2040:	mov	x0, x20
    2044:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2048:	mov	x24, #0x30                  	// #48
    204c:	mov	x0, x19
    2050:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2054:	mov	x0, x21
    2058:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    205c:	mov	x0, x22
    2060:	mov	x21, #0x1                   	// #1
    2064:	mov	x22, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2068:	mov	w27, w21
    206c:	movk	x22, #0xaaab
    2070:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2074:	ldp	x1, x0, [x25]
    2078:	sub	x0, x0, x1
    207c:	asr	x0, x0, #4
    2080:	mul	x0, x0, x22
    2084:	cmp	x28, x0
    2088:	b.cs	20e0 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x35c>  // b.hs, b.nlast
    208c:	mul	x2, x28, x24
    2090:	mov	x1, #0x1                   	// #1
    2094:	ldr	x0, [sp, #184]
    2098:	str	x2, [sp, #104]
    209c:	add	x0, x0, x2
    20a0:	add	x0, x0, #0x8
    20a4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    20a8:	tst	w0, #0xff
    20ac:	ldr	x2, [sp, #104]
    20b0:	b.eq	20d8 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x354>  // b.none
    20b4:	ldr	x0, [sp, #136]
    20b8:	mov	x1, x19
    20bc:	str	x21, [sp, #304]
    20c0:	add	x0, x0, x2
    20c4:	str	w27, [sp, #312]
    20c8:	add	x0, x0, #0x8
    20cc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    20d0:	mov	x0, x19
    20d4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    20d8:	add	x28, x28, #0x1
    20dc:	b	2074 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x2f0>
    20e0:	mov	x0, x23
    20e4:	mov	x1, x20
    20e8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    20ec:	mov	x0, x26
    20f0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    20f4:	b	1e14 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x90>
    20f8:	add	x0, sp, #0x100
    20fc:	mov	x1, x22
    2100:	mov	x22, x0
    2104:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2108:	mov	x1, x21
    210c:	mov	x0, x19
    2110:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2114:	mov	x8, x23
    2118:	mov	x2, x24
    211c:	mov	x1, x19
    2120:	mov	x0, x22
    2124:	bl	1b4c <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE>
    2128:	mov	x0, x19
    212c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2130:	mov	x0, x22
    2134:	b	20f0 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x36c>

0000000000002138 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE>:
    2138:	stp	x29, x30, [sp, #-160]!
    213c:	mov	x29, sp
    2140:	stp	x23, x24, [sp, #48]
    2144:	mov	x23, x2
    2148:	stp	x19, x20, [sp, #16]
    214c:	mov	x19, x8
    2150:	add	x20, sp, #0x70
    2154:	stp	x21, x22, [sp, #32]
    2158:	mov	x22, x0
    215c:	mov	x21, x1
    2160:	mov	x0, x8
    2164:	stp	x25, x26, [sp, #64]
    2168:	stp	x27, x28, [sp, #80]
    216c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2170:	ldrb	w0, [x23, #8]
    2174:	cmp	w0, #0x2
    2178:	b.ne	21d4 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x9c>  // b.any
    217c:	ldr	s0, [x22]
    2180:	fcmp	s0, s0
    2184:	b.ne	2194 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x5c>  // b.any
    2188:	ldr	s0, [x21]
    218c:	fcmp	s0, s0
    2190:	b.eq	2370 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x238>  // b.none
    2194:	mov	x1, x20
    2198:	mov	w0, #0x1                   	// #1
    219c:	str	xzr, [sp, #112]
    21a0:	str	w0, [sp, #120]
    21a4:	add	x0, x19, #0x8
    21a8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    21ac:	mov	x0, x20
    21b0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    21b4:	mov	x0, x19
    21b8:	ldp	x19, x20, [sp, #16]
    21bc:	ldp	x21, x22, [sp, #32]
    21c0:	ldp	x23, x24, [sp, #48]
    21c4:	ldp	x25, x26, [sp, #64]
    21c8:	ldp	x27, x28, [sp, #80]
    21cc:	ldp	x29, x30, [sp], #160
    21d0:	ret
    21d4:	ldr	d0, [x22]
    21d8:	fcmp	d0, d0
    21dc:	b.ne	2194 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x5c>  // b.any
    21e0:	ldr	d0, [x21]
    21e4:	fcmp	d0, d0
    21e8:	b.ne	2194 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x5c>  // b.any
    21ec:	cmp	w0, #0x10
    21f0:	b.ne	2370 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x238>  // b.any
    21f4:	add	x25, x22, #0x18
    21f8:	mov	x0, x23
    21fc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2200:	mov	x24, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2204:	ldr	x1, [x22, #24]
    2208:	movk	x24, #0xaaab
    220c:	ldr	x2, [x25, #8]
    2210:	ldp	x4, x3, [x21, #24]
    2214:	sub	x2, x2, x1
    2218:	ldr	x0, [x0, #24]
    221c:	asr	x1, x2, #4
    2220:	ldrb	w0, [x0, #8]
    2224:	mul	x1, x1, x24
    2228:	sub	x3, x3, x4
    222c:	cmp	w0, #0x2
    2230:	add	x0, x19, #0x18
    2234:	b.ne	22e4 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x1ac>  // b.any
    2238:	cmp	x2, x3
    223c:	b.eq	2260 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x128>  // b.none
    2240:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2244:	add	x3, x3, #0x0
    2248:	mov	w2, #0x1b3                 	// #435
    224c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2250:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2254:	add	x1, x1, #0x0
    2258:	add	x0, x0, #0x0
    225c:	bl	0 <__assert_fail>
    2260:	mov	w27, #0x0                   	// #0
    2264:	mov	w26, #0x1                   	// #1
    2268:	mov	x28, #0x1                   	// #1
    226c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2270:	ldp	x3, x0, [x25]
    2274:	sub	x0, x0, x3
    2278:	asr	x0, x0, #4
    227c:	mul	x0, x0, x24
    2280:	cmp	x0, w27, uxtw
    2284:	b.ls	2370 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x238>  // b.plast
    2288:	mov	w0, #0x30                  	// #48
    228c:	umull	x1, w27, w0
    2290:	ldr	x0, [x19, #24]
    2294:	ldr	s0, [x3, x1]
    2298:	add	x0, x0, x1
    229c:	add	x0, x0, #0x8
    22a0:	fcmp	s0, s0
    22a4:	b.ne	22b8 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x180>  // b.any
    22a8:	ldr	x3, [x21, #24]
    22ac:	ldr	s0, [x3, x1]
    22b0:	fcmp	s0, s0
    22b4:	b.eq	22d8 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x1a0>  // b.none
    22b8:	str	xzr, [sp, #112]
    22bc:	str	w26, [sp, #120]
    22c0:	mov	x1, x20
    22c4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    22c8:	mov	x0, x20
    22cc:	add	w27, w27, #0x1
    22d0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    22d4:	b	2270 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x138>
    22d8:	str	x28, [sp, #112]
    22dc:	str	w26, [sp, #120]
    22e0:	b	22c0 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x188>
    22e4:	cmp	x2, x3
    22e8:	b.ne	2240 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x108>  // b.any
    22ec:	mov	w27, #0x0                   	// #0
    22f0:	mov	w26, #0x1                   	// #1
    22f4:	mov	x28, #0x1                   	// #1
    22f8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    22fc:	ldp	x3, x0, [x25]
    2300:	sub	x0, x0, x3
    2304:	asr	x0, x0, #4
    2308:	mul	x0, x0, x24
    230c:	cmp	x0, w27, uxtw
    2310:	b.ls	2370 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x238>  // b.plast
    2314:	mov	w0, #0x30                  	// #48
    2318:	umull	x1, w27, w0
    231c:	ldr	x0, [x19, #24]
    2320:	ldr	d0, [x3, x1]
    2324:	add	x0, x0, x1
    2328:	add	x0, x0, #0x8
    232c:	fcmp	d0, d0
    2330:	b.ne	2364 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x22c>  // b.any
    2334:	ldr	x3, [x21, #24]
    2338:	ldr	d0, [x3, x1]
    233c:	fcmp	d0, d0
    2340:	b.ne	2364 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x22c>  // b.any
    2344:	str	x28, [sp, #112]
    2348:	str	w26, [sp, #120]
    234c:	mov	x1, x20
    2350:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2354:	mov	x0, x20
    2358:	add	w27, w27, #0x1
    235c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2360:	b	22fc <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x1c4>
    2364:	str	xzr, [sp, #112]
    2368:	str	w26, [sp, #120]
    236c:	b	234c <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x214>
    2370:	mov	x0, x20
    2374:	mov	x1, x19
    2378:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    237c:	ldrb	w0, [x23, #8]
    2380:	cmp	w0, #0x3
    2384:	b.eq	2454 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x31c>  // b.none
    2388:	cmp	w0, #0x10
    238c:	b.eq	2464 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x32c>  // b.none
    2390:	cmp	w0, #0x2
    2394:	b.ne	25b0 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x478>  // b.any
    2398:	ldr	s0, [x21]
    239c:	ldr	s1, [x22]
    23a0:	fcmp	s1, s0
    23a4:	add	x21, sp, #0x60
    23a8:	mov	w1, #0x1                   	// #1
    23ac:	str	w1, [sp, #104]
    23b0:	mov	x1, x21
    23b4:	cset	x0, ne  // ne = any
    23b8:	str	x0, [sp, #96]
    23bc:	add	x0, x19, #0x8
    23c0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    23c4:	mov	x0, x21
    23c8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    23cc:	ldrb	w0, [x23, #8]
    23d0:	cmp	w0, #0x10
    23d4:	b.ne	25e8 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x4b0>  // b.any
    23d8:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    23dc:	add	x21, sp, #0x60
    23e0:	mov	x26, #0x0                   	// #0
    23e4:	movk	x23, #0xaaab
    23e8:	mov	x24, #0x30                  	// #48
    23ec:	mov	w25, #0x1                   	// #1
    23f0:	ldp	x1, x0, [x22, #24]
    23f4:	sub	x0, x0, x1
    23f8:	asr	x0, x0, #4
    23fc:	mul	x0, x0, x23
    2400:	cmp	x26, x0
    2404:	b.cs	25e8 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x4b0>  // b.hs, b.nlast
    2408:	ldr	x0, [sp, #136]
    240c:	mul	x27, x26, x24
    2410:	mov	x1, #0x0                   	// #0
    2414:	add	x0, x0, x27
    2418:	add	x0, x0, #0x8
    241c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2420:	tst	w0, #0xff
    2424:	b.eq	244c <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x314>  // b.none
    2428:	ldr	x0, [x19, #24]
    242c:	mov	x1, x21
    2430:	str	xzr, [sp, #96]
    2434:	add	x0, x0, x27
    2438:	str	w25, [sp, #104]
    243c:	add	x0, x0, #0x8
    2440:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2444:	mov	x0, x21
    2448:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    244c:	add	x26, x26, #0x1
    2450:	b	23f0 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x2b8>
    2454:	ldr	d0, [x21]
    2458:	ldr	d1, [x22]
    245c:	fcmp	d1, d0
    2460:	b	23a4 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x26c>
    2464:	mov	x0, x23
    2468:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    246c:	ldp	x1, x3, [x21, #24]
    2470:	mov	x24, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2474:	ldr	x2, [x22, #32]
    2478:	movk	x24, #0xaaab
    247c:	ldr	x0, [x0, #24]
    2480:	add	x25, x22, #0x18
    2484:	sub	x3, x3, x1
    2488:	ldr	x1, [x22, #24]
    248c:	ldrb	w0, [x0, #8]
    2490:	sub	x2, x2, x1
    2494:	cmp	w0, #0x2
    2498:	add	x0, x19, #0x18
    249c:	asr	x1, x2, #4
    24a0:	mul	x1, x1, x24
    24a4:	b.ne	2534 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x3fc>  // b.any
    24a8:	cmp	x3, x2
    24ac:	b.eq	24c0 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x388>  // b.none
    24b0:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    24b4:	mov	w2, #0x1b8                 	// #440
    24b8:	add	x3, x3, #0x0
    24bc:	b	224c <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x114>
    24c0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    24c4:	add	x27, sp, #0x60
    24c8:	mov	w26, #0x0                   	// #0
    24cc:	mov	w4, #0x30                  	// #48
    24d0:	mov	w28, #0x1                   	// #1
    24d4:	ldp	x1, x0, [x25]
    24d8:	sub	x0, x0, x1
    24dc:	asr	x0, x0, #4
    24e0:	mul	x0, x0, x24
    24e4:	cmp	x0, w26, uxtw
    24e8:	b.ls	23cc <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x294>  // b.plast
    24ec:	umull	x2, w26, w4
    24f0:	str	w28, [sp, #104]
    24f4:	ldr	x3, [x21, #24]
    24f8:	add	w26, w26, #0x1
    24fc:	ldr	x0, [x19, #24]
    2500:	ldr	s0, [x1, x2]
    2504:	ldr	s1, [x3, x2]
    2508:	add	x0, x0, x2
    250c:	add	x0, x0, #0x8
    2510:	fcmp	s1, s0
    2514:	cset	x1, ne  // ne = any
    2518:	str	x1, [sp, #96]
    251c:	mov	x1, x27
    2520:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2524:	mov	x0, x27
    2528:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    252c:	mov	w4, #0x30                  	// #48
    2530:	b	24d4 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x39c>
    2534:	cmp	x3, x2
    2538:	b.ne	24b0 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x378>  // b.any
    253c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2540:	add	x27, sp, #0x60
    2544:	mov	w26, #0x0                   	// #0
    2548:	mov	w4, #0x30                  	// #48
    254c:	mov	w28, #0x1                   	// #1
    2550:	ldp	x1, x0, [x25]
    2554:	sub	x0, x0, x1
    2558:	asr	x0, x0, #4
    255c:	mul	x0, x0, x24
    2560:	cmp	x0, w26, uxtw
    2564:	b.ls	23cc <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x294>  // b.plast
    2568:	umull	x2, w26, w4
    256c:	str	w28, [sp, #104]
    2570:	ldr	x3, [x21, #24]
    2574:	add	w26, w26, #0x1
    2578:	ldr	x0, [x19, #24]
    257c:	ldr	d0, [x1, x2]
    2580:	ldr	d1, [x3, x2]
    2584:	add	x0, x0, x2
    2588:	add	x0, x0, #0x8
    258c:	fcmp	d1, d0
    2590:	cset	x1, ne  // ne = any
    2594:	str	x1, [sp, #96]
    2598:	mov	x1, x27
    259c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    25a0:	mov	x0, x27
    25a4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    25a8:	mov	w4, #0x30                  	// #48
    25ac:	b	2550 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x418>
    25b0:	bl	0 <_ZN4llvm4dbgsEv>
    25b4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    25b8:	add	x1, x1, #0x0
    25bc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    25c0:	mov	x1, x23
    25c4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    25c8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    25cc:	add	x1, x1, #0x0
    25d0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    25d4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    25d8:	mov	w2, #0x1bb                 	// #443
    25dc:	add	x1, x1, #0x0
    25e0:	mov	x0, #0x0                   	// #0
    25e4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    25e8:	mov	x0, x20
    25ec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    25f0:	b	21b4 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x7c>

00000000000025f4 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE>:
    25f4:	stp	x29, x30, [sp, #-352]!
    25f8:	mov	x29, sp
    25fc:	stp	x23, x24, [sp, #48]
    2600:	mov	x24, x2
    2604:	mov	x23, x8
    2608:	stp	x19, x20, [sp, #16]
    260c:	add	x20, sp, #0x70
    2610:	add	x19, sp, #0x130
    2614:	stp	x21, x22, [sp, #32]
    2618:	mov	x22, x0
    261c:	mov	x21, x1
    2620:	mov	x0, x20
    2624:	stp	x25, x26, [sp, #64]
    2628:	stp	x27, x28, [sp, #80]
    262c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2630:	ldrb	w0, [x24, #8]
    2634:	cmp	w0, #0x2
    2638:	b.ne	26ac <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0xb8>  // b.any
    263c:	ldr	s0, [x22]
    2640:	fcmp	s0, s0
    2644:	b.ne	2654 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x60>  // b.any
    2648:	ldr	s0, [x21]
    264c:	fcmp	s0, s0
    2650:	b.eq	2968 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x374>  // b.none
    2654:	mov	x1, x19
    2658:	mov	w0, #0x1                   	// #1
    265c:	str	w0, [sp, #312]
    2660:	mov	x0, #0x1                   	// #1
    2664:	str	x0, [sp, #304]
    2668:	add	x0, x20, #0x8
    266c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2670:	mov	x0, x19
    2674:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2678:	mov	x1, x20
    267c:	mov	x0, x23
    2680:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2684:	mov	x0, x20
    2688:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    268c:	mov	x0, x23
    2690:	ldp	x19, x20, [sp, #16]
    2694:	ldp	x21, x22, [sp, #32]
    2698:	ldp	x23, x24, [sp, #48]
    269c:	ldp	x25, x26, [sp, #64]
    26a0:	ldp	x27, x28, [sp, #80]
    26a4:	ldp	x29, x30, [sp], #352
    26a8:	ret
    26ac:	ldr	d0, [x22]
    26b0:	fcmp	d0, d0
    26b4:	b.ne	2654 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x60>  // b.any
    26b8:	ldr	d0, [x21]
    26bc:	fcmp	d0, d0
    26c0:	b.ne	2654 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x60>  // b.any
    26c4:	cmp	w0, #0x10
    26c8:	b.ne	2968 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x374>  // b.any
    26cc:	mov	x0, x24
    26d0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    26d4:	ldp	x1, x3, [x21, #24]
    26d8:	mov	x26, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    26dc:	ldr	x2, [x22, #32]
    26e0:	movk	x26, #0xaaab
    26e4:	ldr	x0, [x0, #24]
    26e8:	add	x25, x22, #0x18
    26ec:	sub	x3, x3, x1
    26f0:	ldr	x1, [x22, #24]
    26f4:	ldrb	w0, [x0, #8]
    26f8:	sub	x2, x2, x1
    26fc:	cmp	w0, #0x2
    2700:	add	x0, x20, #0x18
    2704:	asr	x1, x2, #4
    2708:	mul	x1, x1, x26
    270c:	b.ne	27c4 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x1d0>  // b.any
    2710:	cmp	x3, x2
    2714:	b.eq	2738 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x144>  // b.none
    2718:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    271c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2720:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2724:	add	x3, x3, #0x0
    2728:	add	x1, x1, #0x0
    272c:	add	x0, x0, #0x0
    2730:	mov	w2, #0x221                 	// #545
    2734:	bl	0 <__assert_fail>
    2738:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    273c:	mov	w27, #0x0                   	// #0
    2740:	mov	x28, #0x1                   	// #1
    2744:	str	x26, [sp, #104]
    2748:	mov	w26, #0x1                   	// #1
    274c:	ldp	x3, x0, [x25]
    2750:	ldr	x1, [sp, #104]
    2754:	sub	x0, x0, x3
    2758:	asr	x0, x0, #4
    275c:	mul	x0, x0, x1
    2760:	cmp	x0, w27, uxtw
    2764:	b.ls	2858 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x264>  // b.plast
    2768:	mov	w0, #0x30                  	// #48
    276c:	umull	x1, w27, w0
    2770:	ldr	x0, [sp, #136]
    2774:	ldr	s0, [x3, x1]
    2778:	add	x0, x0, x1
    277c:	add	x0, x0, #0x8
    2780:	fcmp	s0, s0
    2784:	b.ne	2798 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x1a4>  // b.any
    2788:	ldr	x3, [x21, #24]
    278c:	ldr	s0, [x3, x1]
    2790:	fcmp	s0, s0
    2794:	b.eq	27b8 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x1c4>  // b.none
    2798:	str	x28, [sp, #304]
    279c:	str	w26, [sp, #312]
    27a0:	mov	x1, x19
    27a4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    27a8:	mov	x0, x19
    27ac:	add	w27, w27, #0x1
    27b0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    27b4:	b	274c <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x158>
    27b8:	str	xzr, [sp, #304]
    27bc:	str	w26, [sp, #312]
    27c0:	b	27a0 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x1ac>
    27c4:	cmp	x3, x2
    27c8:	b.ne	2718 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x124>  // b.any
    27cc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    27d0:	mov	w27, #0x0                   	// #0
    27d4:	mov	x28, #0x1                   	// #1
    27d8:	str	x26, [sp, #104]
    27dc:	mov	w26, #0x1                   	// #1
    27e0:	ldp	x3, x0, [x25]
    27e4:	ldr	x1, [sp, #104]
    27e8:	sub	x0, x0, x3
    27ec:	asr	x0, x0, #4
    27f0:	mul	x0, x0, x1
    27f4:	cmp	x0, w27, uxtw
    27f8:	b.ls	2858 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x264>  // b.plast
    27fc:	mov	w0, #0x30                  	// #48
    2800:	umull	x1, w27, w0
    2804:	ldr	x0, [sp, #136]
    2808:	ldr	d0, [x3, x1]
    280c:	add	x0, x0, x1
    2810:	add	x0, x0, #0x8
    2814:	fcmp	d0, d0
    2818:	b.ne	284c <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x258>  // b.any
    281c:	ldr	x3, [x21, #24]
    2820:	ldr	d0, [x3, x1]
    2824:	fcmp	d0, d0
    2828:	b.ne	284c <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x258>  // b.any
    282c:	str	xzr, [sp, #304]
    2830:	str	w26, [sp, #312]
    2834:	mov	x1, x19
    2838:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    283c:	mov	x0, x19
    2840:	add	w27, w27, #0x1
    2844:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2848:	b	27e0 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x1ec>
    284c:	str	x28, [sp, #304]
    2850:	str	w26, [sp, #312]
    2854:	b	2834 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x240>
    2858:	ldrb	w0, [x24, #8]
    285c:	cmp	w0, #0x10
    2860:	b.ne	2968 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x374>  // b.any
    2864:	add	x26, sp, #0xa0
    2868:	mov	x1, x20
    286c:	mov	x0, x26
    2870:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2874:	add	x0, sp, #0xd0
    2878:	mov	x1, x22
    287c:	mov	x22, x0
    2880:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2884:	add	x0, sp, #0x100
    2888:	mov	x1, x21
    288c:	mov	x21, x0
    2890:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2894:	mov	x2, x24
    2898:	mov	x8, x19
    289c:	mov	x1, x21
    28a0:	mov	x0, x22
    28a4:	bl	2138 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE>
    28a8:	mov	x28, #0x0                   	// #0
    28ac:	mov	x1, x19
    28b0:	mov	x0, x20
    28b4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    28b8:	mov	x24, #0x30                  	// #48
    28bc:	mov	x0, x19
    28c0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    28c4:	mov	x0, x21
    28c8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    28cc:	mov	x0, x22
    28d0:	mov	x21, #0x1                   	// #1
    28d4:	mov	x22, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    28d8:	mov	w27, w21
    28dc:	movk	x22, #0xaaab
    28e0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    28e4:	ldp	x1, x0, [x25]
    28e8:	sub	x0, x0, x1
    28ec:	asr	x0, x0, #4
    28f0:	mul	x0, x0, x22
    28f4:	cmp	x28, x0
    28f8:	b.cs	2950 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x35c>  // b.hs, b.nlast
    28fc:	mul	x2, x28, x24
    2900:	mov	x1, #0x1                   	// #1
    2904:	ldr	x0, [sp, #184]
    2908:	str	x2, [sp, #104]
    290c:	add	x0, x0, x2
    2910:	add	x0, x0, #0x8
    2914:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2918:	tst	w0, #0xff
    291c:	ldr	x2, [sp, #104]
    2920:	b.eq	2948 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x354>  // b.none
    2924:	ldr	x0, [sp, #136]
    2928:	mov	x1, x19
    292c:	str	x21, [sp, #304]
    2930:	add	x0, x0, x2
    2934:	str	w27, [sp, #312]
    2938:	add	x0, x0, #0x8
    293c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2940:	mov	x0, x19
    2944:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2948:	add	x28, x28, #0x1
    294c:	b	28e4 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x2f0>
    2950:	mov	x0, x23
    2954:	mov	x1, x20
    2958:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    295c:	mov	x0, x26
    2960:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2964:	b	2684 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x90>
    2968:	add	x0, sp, #0x100
    296c:	mov	x1, x22
    2970:	mov	x22, x0
    2974:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2978:	mov	x1, x21
    297c:	mov	x0, x19
    2980:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2984:	mov	x8, x23
    2988:	mov	x2, x24
    298c:	mov	x1, x19
    2990:	mov	x0, x22
    2994:	bl	2138 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE>
    2998:	mov	x0, x19
    299c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    29a0:	mov	x0, x22
    29a4:	b	2960 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x36c>

00000000000029a8 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE>:
    29a8:	stp	x29, x30, [sp, #-96]!
    29ac:	mov	x29, sp
    29b0:	stp	x21, x22, [sp, #32]
    29b4:	mov	x22, x2
    29b8:	mov	x21, x0
    29bc:	mov	x0, x8
    29c0:	stp	x19, x20, [sp, #16]
    29c4:	mov	x19, x8
    29c8:	mov	x20, x1
    29cc:	stp	x23, x24, [sp, #48]
    29d0:	stp	x25, x26, [sp, #64]
    29d4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    29d8:	ldrb	w0, [x22, #8]
    29dc:	cmp	w0, #0x3
    29e0:	b.eq	2a44 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x9c>  // b.none
    29e4:	cmp	w0, #0x10
    29e8:	b.eq	2a54 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0xac>  // b.none
    29ec:	cmp	w0, #0x2
    29f0:	b.ne	2ba8 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x200>  // b.any
    29f4:	ldr	s0, [x20]
    29f8:	ldr	s1, [x21]
    29fc:	fcmpe	s1, s0
    2a00:	add	x20, sp, #0x50
    2a04:	mov	w1, #0x1                   	// #1
    2a08:	str	w1, [sp, #88]
    2a0c:	mov	x1, x20
    2a10:	cset	x0, mi  // mi = first
    2a14:	str	x0, [sp, #80]
    2a18:	add	x0, x19, #0x8
    2a1c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2a20:	mov	x0, x20
    2a24:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2a28:	mov	x0, x19
    2a2c:	ldp	x19, x20, [sp, #16]
    2a30:	ldp	x21, x22, [sp, #32]
    2a34:	ldp	x23, x24, [sp, #48]
    2a38:	ldp	x25, x26, [sp, #64]
    2a3c:	ldp	x29, x30, [sp], #96
    2a40:	ret
    2a44:	ldr	d0, [x20]
    2a48:	ldr	d1, [x21]
    2a4c:	fcmpe	d1, d0
    2a50:	b	2a00 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x58>
    2a54:	mov	x0, x22
    2a58:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2a5c:	ldp	x1, x3, [x20, #24]
    2a60:	add	x22, x21, #0x18
    2a64:	ldr	x2, [x22, #8]
    2a68:	ldr	x0, [x0, #24]
    2a6c:	sub	x3, x3, x1
    2a70:	ldr	x1, [x21, #24]
    2a74:	mov	x21, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2a78:	ldrb	w0, [x0, #8]
    2a7c:	movk	x21, #0xaaab
    2a80:	sub	x2, x2, x1
    2a84:	cmp	w0, #0x2
    2a88:	add	x0, x19, #0x18
    2a8c:	asr	x1, x2, #4
    2a90:	mul	x1, x1, x21
    2a94:	b.ne	2b30 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x188>  // b.any
    2a98:	cmp	x2, x3
    2a9c:	b.eq	2ac0 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x118>  // b.none
    2aa0:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2aa4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2aa8:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2aac:	add	x3, x3, #0x0
    2ab0:	add	x1, x1, #0x0
    2ab4:	add	x0, x0, #0x0
    2ab8:	mov	w2, #0x1e8                 	// #488
    2abc:	bl	0 <__assert_fail>
    2ac0:	add	x24, sp, #0x50
    2ac4:	mov	w23, #0x0                   	// #0
    2ac8:	mov	w26, #0x30                  	// #48
    2acc:	mov	w25, #0x1                   	// #1
    2ad0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2ad4:	ldp	x1, x0, [x22]
    2ad8:	sub	x0, x0, x1
    2adc:	asr	x0, x0, #4
    2ae0:	mul	x0, x0, x21
    2ae4:	cmp	x0, w23, uxtw
    2ae8:	b.ls	2a28 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x80>  // b.plast
    2aec:	umull	x2, w23, w26
    2af0:	str	w25, [sp, #88]
    2af4:	ldr	x3, [x20, #24]
    2af8:	add	w23, w23, #0x1
    2afc:	ldr	x0, [x19, #24]
    2b00:	ldr	s1, [x1, x2]
    2b04:	ldr	s0, [x3, x2]
    2b08:	add	x0, x0, x2
    2b0c:	add	x0, x0, #0x8
    2b10:	fcmpe	s1, s0
    2b14:	cset	x1, mi  // mi = first
    2b18:	str	x1, [sp, #80]
    2b1c:	mov	x1, x24
    2b20:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2b24:	mov	x0, x24
    2b28:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2b2c:	b	2ad4 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x12c>
    2b30:	cmp	x2, x3
    2b34:	b.ne	2aa0 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0xf8>  // b.any
    2b38:	add	x24, sp, #0x50
    2b3c:	mov	w23, #0x0                   	// #0
    2b40:	mov	w26, #0x30                  	// #48
    2b44:	mov	w25, #0x1                   	// #1
    2b48:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2b4c:	ldp	x1, x0, [x22]
    2b50:	sub	x0, x0, x1
    2b54:	asr	x0, x0, #4
    2b58:	mul	x0, x0, x21
    2b5c:	cmp	x0, w23, uxtw
    2b60:	b.ls	2a28 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x80>  // b.plast
    2b64:	umull	x2, w23, w26
    2b68:	str	w25, [sp, #88]
    2b6c:	ldr	x3, [x20, #24]
    2b70:	add	w23, w23, #0x1
    2b74:	ldr	x0, [x19, #24]
    2b78:	ldr	d1, [x1, x2]
    2b7c:	ldr	d0, [x3, x2]
    2b80:	add	x0, x0, x2
    2b84:	add	x0, x0, #0x8
    2b88:	fcmpe	d1, d0
    2b8c:	cset	x1, mi  // mi = first
    2b90:	str	x1, [sp, #80]
    2b94:	mov	x1, x24
    2b98:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2b9c:	mov	x0, x24
    2ba0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2ba4:	b	2b4c <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x1a4>
    2ba8:	bl	0 <_ZN4llvm4dbgsEv>
    2bac:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2bb0:	add	x1, x1, #0x0
    2bb4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2bb8:	mov	x1, x22
    2bbc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2bc0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2bc4:	add	x1, x1, #0x0
    2bc8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2bcc:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2bd0:	mov	w2, #0x1eb                 	// #491
    2bd4:	add	x1, x1, #0x0
    2bd8:	mov	x0, #0x0                   	// #0
    2bdc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000002be0 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE>:
    2be0:	stp	x29, x30, [sp, #-352]!
    2be4:	mov	x29, sp
    2be8:	stp	x23, x24, [sp, #48]
    2bec:	mov	x24, x2
    2bf0:	mov	x23, x8
    2bf4:	stp	x19, x20, [sp, #16]
    2bf8:	add	x20, sp, #0x70
    2bfc:	add	x19, sp, #0x130
    2c00:	stp	x21, x22, [sp, #32]
    2c04:	mov	x22, x0
    2c08:	mov	x21, x1
    2c0c:	mov	x0, x20
    2c10:	stp	x25, x26, [sp, #64]
    2c14:	stp	x27, x28, [sp, #80]
    2c18:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2c1c:	ldrb	w0, [x24, #8]
    2c20:	cmp	w0, #0x2
    2c24:	b.ne	2c98 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0xb8>  // b.any
    2c28:	ldr	s0, [x22]
    2c2c:	fcmp	s0, s0
    2c30:	b.ne	2c40 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x60>  // b.any
    2c34:	ldr	s0, [x21]
    2c38:	fcmp	s0, s0
    2c3c:	b.eq	2f54 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x374>  // b.none
    2c40:	mov	x1, x19
    2c44:	mov	w0, #0x1                   	// #1
    2c48:	str	w0, [sp, #312]
    2c4c:	mov	x0, #0x1                   	// #1
    2c50:	str	x0, [sp, #304]
    2c54:	add	x0, x20, #0x8
    2c58:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2c5c:	mov	x0, x19
    2c60:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2c64:	mov	x1, x20
    2c68:	mov	x0, x23
    2c6c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2c70:	mov	x0, x20
    2c74:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2c78:	mov	x0, x23
    2c7c:	ldp	x19, x20, [sp, #16]
    2c80:	ldp	x21, x22, [sp, #32]
    2c84:	ldp	x23, x24, [sp, #48]
    2c88:	ldp	x25, x26, [sp, #64]
    2c8c:	ldp	x27, x28, [sp, #80]
    2c90:	ldp	x29, x30, [sp], #352
    2c94:	ret
    2c98:	ldr	d0, [x22]
    2c9c:	fcmp	d0, d0
    2ca0:	b.ne	2c40 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x60>  // b.any
    2ca4:	ldr	d0, [x21]
    2ca8:	fcmp	d0, d0
    2cac:	b.ne	2c40 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x60>  // b.any
    2cb0:	cmp	w0, #0x10
    2cb4:	b.ne	2f54 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x374>  // b.any
    2cb8:	mov	x0, x24
    2cbc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2cc0:	ldp	x1, x3, [x21, #24]
    2cc4:	mov	x26, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2cc8:	ldr	x2, [x22, #32]
    2ccc:	movk	x26, #0xaaab
    2cd0:	ldr	x0, [x0, #24]
    2cd4:	add	x25, x22, #0x18
    2cd8:	sub	x3, x3, x1
    2cdc:	ldr	x1, [x22, #24]
    2ce0:	ldrb	w0, [x0, #8]
    2ce4:	sub	x2, x2, x1
    2ce8:	cmp	w0, #0x2
    2cec:	add	x0, x20, #0x18
    2cf0:	asr	x1, x2, #4
    2cf4:	mul	x1, x1, x26
    2cf8:	b.ne	2db0 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x1d0>  // b.any
    2cfc:	cmp	x3, x2
    2d00:	b.eq	2d24 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x144>  // b.none
    2d04:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2d08:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2d0c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2d10:	add	x3, x3, #0x0
    2d14:	add	x1, x1, #0x0
    2d18:	add	x0, x0, #0x0
    2d1c:	mov	w2, #0x23c                 	// #572
    2d20:	bl	0 <__assert_fail>
    2d24:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2d28:	mov	w27, #0x0                   	// #0
    2d2c:	mov	x28, #0x1                   	// #1
    2d30:	str	x26, [sp, #104]
    2d34:	mov	w26, #0x1                   	// #1
    2d38:	ldp	x3, x0, [x25]
    2d3c:	ldr	x1, [sp, #104]
    2d40:	sub	x0, x0, x3
    2d44:	asr	x0, x0, #4
    2d48:	mul	x0, x0, x1
    2d4c:	cmp	x0, w27, uxtw
    2d50:	b.ls	2e44 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x264>  // b.plast
    2d54:	mov	w0, #0x30                  	// #48
    2d58:	umull	x1, w27, w0
    2d5c:	ldr	x0, [sp, #136]
    2d60:	ldr	s0, [x3, x1]
    2d64:	add	x0, x0, x1
    2d68:	add	x0, x0, #0x8
    2d6c:	fcmp	s0, s0
    2d70:	b.ne	2d84 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x1a4>  // b.any
    2d74:	ldr	x3, [x21, #24]
    2d78:	ldr	s0, [x3, x1]
    2d7c:	fcmp	s0, s0
    2d80:	b.eq	2da4 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x1c4>  // b.none
    2d84:	str	x28, [sp, #304]
    2d88:	str	w26, [sp, #312]
    2d8c:	mov	x1, x19
    2d90:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2d94:	mov	x0, x19
    2d98:	add	w27, w27, #0x1
    2d9c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2da0:	b	2d38 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x158>
    2da4:	str	xzr, [sp, #304]
    2da8:	str	w26, [sp, #312]
    2dac:	b	2d8c <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x1ac>
    2db0:	cmp	x3, x2
    2db4:	b.ne	2d04 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x124>  // b.any
    2db8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2dbc:	mov	w27, #0x0                   	// #0
    2dc0:	mov	x28, #0x1                   	// #1
    2dc4:	str	x26, [sp, #104]
    2dc8:	mov	w26, #0x1                   	// #1
    2dcc:	ldp	x3, x0, [x25]
    2dd0:	ldr	x1, [sp, #104]
    2dd4:	sub	x0, x0, x3
    2dd8:	asr	x0, x0, #4
    2ddc:	mul	x0, x0, x1
    2de0:	cmp	x0, w27, uxtw
    2de4:	b.ls	2e44 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x264>  // b.plast
    2de8:	mov	w0, #0x30                  	// #48
    2dec:	umull	x1, w27, w0
    2df0:	ldr	x0, [sp, #136]
    2df4:	ldr	d0, [x3, x1]
    2df8:	add	x0, x0, x1
    2dfc:	add	x0, x0, #0x8
    2e00:	fcmp	d0, d0
    2e04:	b.ne	2e38 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x258>  // b.any
    2e08:	ldr	x3, [x21, #24]
    2e0c:	ldr	d0, [x3, x1]
    2e10:	fcmp	d0, d0
    2e14:	b.ne	2e38 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x258>  // b.any
    2e18:	str	xzr, [sp, #304]
    2e1c:	str	w26, [sp, #312]
    2e20:	mov	x1, x19
    2e24:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2e28:	mov	x0, x19
    2e2c:	add	w27, w27, #0x1
    2e30:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2e34:	b	2dcc <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x1ec>
    2e38:	str	x28, [sp, #304]
    2e3c:	str	w26, [sp, #312]
    2e40:	b	2e20 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x240>
    2e44:	ldrb	w0, [x24, #8]
    2e48:	cmp	w0, #0x10
    2e4c:	b.ne	2f54 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x374>  // b.any
    2e50:	add	x26, sp, #0xa0
    2e54:	mov	x1, x20
    2e58:	mov	x0, x26
    2e5c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2e60:	add	x0, sp, #0xd0
    2e64:	mov	x1, x22
    2e68:	mov	x22, x0
    2e6c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2e70:	add	x0, sp, #0x100
    2e74:	mov	x1, x21
    2e78:	mov	x21, x0
    2e7c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2e80:	mov	x2, x24
    2e84:	mov	x8, x19
    2e88:	mov	x1, x21
    2e8c:	mov	x0, x22
    2e90:	bl	29a8 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE>
    2e94:	mov	x28, #0x0                   	// #0
    2e98:	mov	x1, x19
    2e9c:	mov	x0, x20
    2ea0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2ea4:	mov	x24, #0x30                  	// #48
    2ea8:	mov	x0, x19
    2eac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2eb0:	mov	x0, x21
    2eb4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2eb8:	mov	x0, x22
    2ebc:	mov	x21, #0x1                   	// #1
    2ec0:	mov	x22, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2ec4:	mov	w27, w21
    2ec8:	movk	x22, #0xaaab
    2ecc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2ed0:	ldp	x1, x0, [x25]
    2ed4:	sub	x0, x0, x1
    2ed8:	asr	x0, x0, #4
    2edc:	mul	x0, x0, x22
    2ee0:	cmp	x28, x0
    2ee4:	b.cs	2f3c <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x35c>  // b.hs, b.nlast
    2ee8:	mul	x2, x28, x24
    2eec:	mov	x1, #0x1                   	// #1
    2ef0:	ldr	x0, [sp, #184]
    2ef4:	str	x2, [sp, #104]
    2ef8:	add	x0, x0, x2
    2efc:	add	x0, x0, #0x8
    2f00:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2f04:	tst	w0, #0xff
    2f08:	ldr	x2, [sp, #104]
    2f0c:	b.eq	2f34 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x354>  // b.none
    2f10:	ldr	x0, [sp, #136]
    2f14:	mov	x1, x19
    2f18:	str	x21, [sp, #304]
    2f1c:	add	x0, x0, x2
    2f20:	str	w27, [sp, #312]
    2f24:	add	x0, x0, #0x8
    2f28:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2f2c:	mov	x0, x19
    2f30:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2f34:	add	x28, x28, #0x1
    2f38:	b	2ed0 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x2f0>
    2f3c:	mov	x0, x23
    2f40:	mov	x1, x20
    2f44:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2f48:	mov	x0, x26
    2f4c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2f50:	b	2c70 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x90>
    2f54:	add	x0, sp, #0x100
    2f58:	mov	x1, x22
    2f5c:	mov	x22, x0
    2f60:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2f64:	mov	x1, x21
    2f68:	mov	x0, x19
    2f6c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2f70:	mov	x8, x23
    2f74:	mov	x2, x24
    2f78:	mov	x1, x19
    2f7c:	mov	x0, x22
    2f80:	bl	29a8 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE>
    2f84:	mov	x0, x19
    2f88:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2f8c:	mov	x0, x22
    2f90:	b	2f4c <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x36c>

0000000000002f94 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE>:
    2f94:	stp	x29, x30, [sp, #-96]!
    2f98:	mov	x29, sp
    2f9c:	stp	x21, x22, [sp, #32]
    2fa0:	mov	x22, x2
    2fa4:	mov	x21, x0
    2fa8:	mov	x0, x8
    2fac:	stp	x19, x20, [sp, #16]
    2fb0:	mov	x19, x8
    2fb4:	mov	x20, x1
    2fb8:	stp	x23, x24, [sp, #48]
    2fbc:	stp	x25, x26, [sp, #64]
    2fc0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2fc4:	ldrb	w0, [x22, #8]
    2fc8:	cmp	w0, #0x3
    2fcc:	b.eq	3030 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x9c>  // b.none
    2fd0:	cmp	w0, #0x10
    2fd4:	b.eq	3040 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0xac>  // b.none
    2fd8:	cmp	w0, #0x2
    2fdc:	b.ne	3194 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x200>  // b.any
    2fe0:	ldr	s0, [x20]
    2fe4:	ldr	s1, [x21]
    2fe8:	fcmpe	s1, s0
    2fec:	add	x20, sp, #0x50
    2ff0:	mov	w1, #0x1                   	// #1
    2ff4:	str	w1, [sp, #88]
    2ff8:	mov	x1, x20
    2ffc:	cset	x0, gt
    3000:	str	x0, [sp, #80]
    3004:	add	x0, x19, #0x8
    3008:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    300c:	mov	x0, x20
    3010:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3014:	mov	x0, x19
    3018:	ldp	x19, x20, [sp, #16]
    301c:	ldp	x21, x22, [sp, #32]
    3020:	ldp	x23, x24, [sp, #48]
    3024:	ldp	x25, x26, [sp, #64]
    3028:	ldp	x29, x30, [sp], #96
    302c:	ret
    3030:	ldr	d0, [x20]
    3034:	ldr	d1, [x21]
    3038:	fcmpe	d1, d0
    303c:	b	2fec <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x58>
    3040:	mov	x0, x22
    3044:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3048:	ldp	x1, x3, [x20, #24]
    304c:	add	x22, x21, #0x18
    3050:	ldr	x2, [x22, #8]
    3054:	ldr	x0, [x0, #24]
    3058:	sub	x3, x3, x1
    305c:	ldr	x1, [x21, #24]
    3060:	mov	x21, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3064:	ldrb	w0, [x0, #8]
    3068:	movk	x21, #0xaaab
    306c:	sub	x2, x2, x1
    3070:	cmp	w0, #0x2
    3074:	add	x0, x19, #0x18
    3078:	asr	x1, x2, #4
    307c:	mul	x1, x1, x21
    3080:	b.ne	311c <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x188>  // b.any
    3084:	cmp	x2, x3
    3088:	b.eq	30ac <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x118>  // b.none
    308c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3090:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3094:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3098:	add	x3, x3, #0x0
    309c:	add	x1, x1, #0x0
    30a0:	add	x0, x0, #0x0
    30a4:	mov	w2, #0x1f6                 	// #502
    30a8:	bl	0 <__assert_fail>
    30ac:	add	x24, sp, #0x50
    30b0:	mov	w23, #0x0                   	// #0
    30b4:	mov	w26, #0x30                  	// #48
    30b8:	mov	w25, #0x1                   	// #1
    30bc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    30c0:	ldp	x1, x0, [x22]
    30c4:	sub	x0, x0, x1
    30c8:	asr	x0, x0, #4
    30cc:	mul	x0, x0, x21
    30d0:	cmp	x0, w23, uxtw
    30d4:	b.ls	3014 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x80>  // b.plast
    30d8:	umull	x2, w23, w26
    30dc:	str	w25, [sp, #88]
    30e0:	ldr	x3, [x20, #24]
    30e4:	add	w23, w23, #0x1
    30e8:	ldr	x0, [x19, #24]
    30ec:	ldr	s1, [x1, x2]
    30f0:	ldr	s0, [x3, x2]
    30f4:	add	x0, x0, x2
    30f8:	add	x0, x0, #0x8
    30fc:	fcmpe	s1, s0
    3100:	cset	x1, gt
    3104:	str	x1, [sp, #80]
    3108:	mov	x1, x24
    310c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3110:	mov	x0, x24
    3114:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3118:	b	30c0 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x12c>
    311c:	cmp	x2, x3
    3120:	b.ne	308c <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0xf8>  // b.any
    3124:	add	x24, sp, #0x50
    3128:	mov	w23, #0x0                   	// #0
    312c:	mov	w26, #0x30                  	// #48
    3130:	mov	w25, #0x1                   	// #1
    3134:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3138:	ldp	x1, x0, [x22]
    313c:	sub	x0, x0, x1
    3140:	asr	x0, x0, #4
    3144:	mul	x0, x0, x21
    3148:	cmp	x0, w23, uxtw
    314c:	b.ls	3014 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x80>  // b.plast
    3150:	umull	x2, w23, w26
    3154:	str	w25, [sp, #88]
    3158:	ldr	x3, [x20, #24]
    315c:	add	w23, w23, #0x1
    3160:	ldr	x0, [x19, #24]
    3164:	ldr	d1, [x1, x2]
    3168:	ldr	d0, [x3, x2]
    316c:	add	x0, x0, x2
    3170:	add	x0, x0, #0x8
    3174:	fcmpe	d1, d0
    3178:	cset	x1, gt
    317c:	str	x1, [sp, #80]
    3180:	mov	x1, x24
    3184:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3188:	mov	x0, x24
    318c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3190:	b	3138 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x1a4>
    3194:	bl	0 <_ZN4llvm4dbgsEv>
    3198:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    319c:	add	x1, x1, #0x0
    31a0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    31a4:	mov	x1, x22
    31a8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    31ac:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    31b0:	add	x1, x1, #0x0
    31b4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    31b8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    31bc:	mov	w2, #0x1f9                 	// #505
    31c0:	add	x1, x1, #0x0
    31c4:	mov	x0, #0x0                   	// #0
    31c8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

00000000000031cc <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE>:
    31cc:	stp	x29, x30, [sp, #-352]!
    31d0:	mov	x29, sp
    31d4:	stp	x23, x24, [sp, #48]
    31d8:	mov	x24, x2
    31dc:	mov	x23, x8
    31e0:	stp	x19, x20, [sp, #16]
    31e4:	add	x20, sp, #0x70
    31e8:	add	x19, sp, #0x130
    31ec:	stp	x21, x22, [sp, #32]
    31f0:	mov	x22, x0
    31f4:	mov	x21, x1
    31f8:	mov	x0, x20
    31fc:	stp	x25, x26, [sp, #64]
    3200:	stp	x27, x28, [sp, #80]
    3204:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3208:	ldrb	w0, [x24, #8]
    320c:	cmp	w0, #0x2
    3210:	b.ne	3284 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0xb8>  // b.any
    3214:	ldr	s0, [x22]
    3218:	fcmp	s0, s0
    321c:	b.ne	322c <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x60>  // b.any
    3220:	ldr	s0, [x21]
    3224:	fcmp	s0, s0
    3228:	b.eq	3540 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x374>  // b.none
    322c:	mov	x1, x19
    3230:	mov	w0, #0x1                   	// #1
    3234:	str	w0, [sp, #312]
    3238:	mov	x0, #0x1                   	// #1
    323c:	str	x0, [sp, #304]
    3240:	add	x0, x20, #0x8
    3244:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3248:	mov	x0, x19
    324c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3250:	mov	x1, x20
    3254:	mov	x0, x23
    3258:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    325c:	mov	x0, x20
    3260:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3264:	mov	x0, x23
    3268:	ldp	x19, x20, [sp, #16]
    326c:	ldp	x21, x22, [sp, #32]
    3270:	ldp	x23, x24, [sp, #48]
    3274:	ldp	x25, x26, [sp, #64]
    3278:	ldp	x27, x28, [sp, #80]
    327c:	ldp	x29, x30, [sp], #352
    3280:	ret
    3284:	ldr	d0, [x22]
    3288:	fcmp	d0, d0
    328c:	b.ne	322c <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x60>  // b.any
    3290:	ldr	d0, [x21]
    3294:	fcmp	d0, d0
    3298:	b.ne	322c <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x60>  // b.any
    329c:	cmp	w0, #0x10
    32a0:	b.ne	3540 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x374>  // b.any
    32a4:	mov	x0, x24
    32a8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    32ac:	ldp	x1, x3, [x21, #24]
    32b0:	mov	x26, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    32b4:	ldr	x2, [x22, #32]
    32b8:	movk	x26, #0xaaab
    32bc:	ldr	x0, [x0, #24]
    32c0:	add	x25, x22, #0x18
    32c4:	sub	x3, x3, x1
    32c8:	ldr	x1, [x22, #24]
    32cc:	ldrb	w0, [x0, #8]
    32d0:	sub	x2, x2, x1
    32d4:	cmp	w0, #0x2
    32d8:	add	x0, x20, #0x18
    32dc:	asr	x1, x2, #4
    32e0:	mul	x1, x1, x26
    32e4:	b.ne	339c <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x1d0>  // b.any
    32e8:	cmp	x3, x2
    32ec:	b.eq	3310 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x144>  // b.none
    32f0:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    32f4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    32f8:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    32fc:	add	x3, x3, #0x0
    3300:	add	x1, x1, #0x0
    3304:	add	x0, x0, #0x0
    3308:	mov	w2, #0x245                 	// #581
    330c:	bl	0 <__assert_fail>
    3310:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3314:	mov	w27, #0x0                   	// #0
    3318:	mov	x28, #0x1                   	// #1
    331c:	str	x26, [sp, #104]
    3320:	mov	w26, #0x1                   	// #1
    3324:	ldp	x3, x0, [x25]
    3328:	ldr	x1, [sp, #104]
    332c:	sub	x0, x0, x3
    3330:	asr	x0, x0, #4
    3334:	mul	x0, x0, x1
    3338:	cmp	x0, w27, uxtw
    333c:	b.ls	3430 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x264>  // b.plast
    3340:	mov	w0, #0x30                  	// #48
    3344:	umull	x1, w27, w0
    3348:	ldr	x0, [sp, #136]
    334c:	ldr	s0, [x3, x1]
    3350:	add	x0, x0, x1
    3354:	add	x0, x0, #0x8
    3358:	fcmp	s0, s0
    335c:	b.ne	3370 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x1a4>  // b.any
    3360:	ldr	x3, [x21, #24]
    3364:	ldr	s0, [x3, x1]
    3368:	fcmp	s0, s0
    336c:	b.eq	3390 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x1c4>  // b.none
    3370:	str	x28, [sp, #304]
    3374:	str	w26, [sp, #312]
    3378:	mov	x1, x19
    337c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3380:	mov	x0, x19
    3384:	add	w27, w27, #0x1
    3388:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    338c:	b	3324 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x158>
    3390:	str	xzr, [sp, #304]
    3394:	str	w26, [sp, #312]
    3398:	b	3378 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x1ac>
    339c:	cmp	x3, x2
    33a0:	b.ne	32f0 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x124>  // b.any
    33a4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    33a8:	mov	w27, #0x0                   	// #0
    33ac:	mov	x28, #0x1                   	// #1
    33b0:	str	x26, [sp, #104]
    33b4:	mov	w26, #0x1                   	// #1
    33b8:	ldp	x3, x0, [x25]
    33bc:	ldr	x1, [sp, #104]
    33c0:	sub	x0, x0, x3
    33c4:	asr	x0, x0, #4
    33c8:	mul	x0, x0, x1
    33cc:	cmp	x0, w27, uxtw
    33d0:	b.ls	3430 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x264>  // b.plast
    33d4:	mov	w0, #0x30                  	// #48
    33d8:	umull	x1, w27, w0
    33dc:	ldr	x0, [sp, #136]
    33e0:	ldr	d0, [x3, x1]
    33e4:	add	x0, x0, x1
    33e8:	add	x0, x0, #0x8
    33ec:	fcmp	d0, d0
    33f0:	b.ne	3424 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x258>  // b.any
    33f4:	ldr	x3, [x21, #24]
    33f8:	ldr	d0, [x3, x1]
    33fc:	fcmp	d0, d0
    3400:	b.ne	3424 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x258>  // b.any
    3404:	str	xzr, [sp, #304]
    3408:	str	w26, [sp, #312]
    340c:	mov	x1, x19
    3410:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3414:	mov	x0, x19
    3418:	add	w27, w27, #0x1
    341c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3420:	b	33b8 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x1ec>
    3424:	str	x28, [sp, #304]
    3428:	str	w26, [sp, #312]
    342c:	b	340c <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x240>
    3430:	ldrb	w0, [x24, #8]
    3434:	cmp	w0, #0x10
    3438:	b.ne	3540 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x374>  // b.any
    343c:	add	x26, sp, #0xa0
    3440:	mov	x1, x20
    3444:	mov	x0, x26
    3448:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    344c:	add	x0, sp, #0xd0
    3450:	mov	x1, x22
    3454:	mov	x22, x0
    3458:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    345c:	add	x0, sp, #0x100
    3460:	mov	x1, x21
    3464:	mov	x21, x0
    3468:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    346c:	mov	x2, x24
    3470:	mov	x8, x19
    3474:	mov	x1, x21
    3478:	mov	x0, x22
    347c:	bl	2f94 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE>
    3480:	mov	x28, #0x0                   	// #0
    3484:	mov	x1, x19
    3488:	mov	x0, x20
    348c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3490:	mov	x24, #0x30                  	// #48
    3494:	mov	x0, x19
    3498:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    349c:	mov	x0, x21
    34a0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    34a4:	mov	x0, x22
    34a8:	mov	x21, #0x1                   	// #1
    34ac:	mov	x22, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    34b0:	mov	w27, w21
    34b4:	movk	x22, #0xaaab
    34b8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    34bc:	ldp	x1, x0, [x25]
    34c0:	sub	x0, x0, x1
    34c4:	asr	x0, x0, #4
    34c8:	mul	x0, x0, x22
    34cc:	cmp	x28, x0
    34d0:	b.cs	3528 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x35c>  // b.hs, b.nlast
    34d4:	mul	x2, x28, x24
    34d8:	mov	x1, #0x1                   	// #1
    34dc:	ldr	x0, [sp, #184]
    34e0:	str	x2, [sp, #104]
    34e4:	add	x0, x0, x2
    34e8:	add	x0, x0, #0x8
    34ec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    34f0:	tst	w0, #0xff
    34f4:	ldr	x2, [sp, #104]
    34f8:	b.eq	3520 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x354>  // b.none
    34fc:	ldr	x0, [sp, #136]
    3500:	mov	x1, x19
    3504:	str	x21, [sp, #304]
    3508:	add	x0, x0, x2
    350c:	str	w27, [sp, #312]
    3510:	add	x0, x0, #0x8
    3514:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3518:	mov	x0, x19
    351c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3520:	add	x28, x28, #0x1
    3524:	b	34bc <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x2f0>
    3528:	mov	x0, x23
    352c:	mov	x1, x20
    3530:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3534:	mov	x0, x26
    3538:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    353c:	b	325c <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x90>
    3540:	add	x0, sp, #0x100
    3544:	mov	x1, x22
    3548:	mov	x22, x0
    354c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3550:	mov	x1, x21
    3554:	mov	x0, x19
    3558:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    355c:	mov	x8, x23
    3560:	mov	x2, x24
    3564:	mov	x1, x19
    3568:	mov	x0, x22
    356c:	bl	2f94 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE>
    3570:	mov	x0, x19
    3574:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3578:	mov	x0, x22
    357c:	b	3538 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x36c>

0000000000003580 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE>:
    3580:	stp	x29, x30, [sp, #-96]!
    3584:	mov	x29, sp
    3588:	stp	x21, x22, [sp, #32]
    358c:	mov	x22, x2
    3590:	mov	x21, x0
    3594:	mov	x0, x8
    3598:	stp	x19, x20, [sp, #16]
    359c:	mov	x19, x8
    35a0:	mov	x20, x1
    35a4:	stp	x23, x24, [sp, #48]
    35a8:	stp	x25, x26, [sp, #64]
    35ac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    35b0:	ldrb	w0, [x22, #8]
    35b4:	cmp	w0, #0x3
    35b8:	b.eq	361c <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x9c>  // b.none
    35bc:	cmp	w0, #0x10
    35c0:	b.eq	362c <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0xac>  // b.none
    35c4:	cmp	w0, #0x2
    35c8:	b.ne	3780 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x200>  // b.any
    35cc:	ldr	s0, [x20]
    35d0:	ldr	s1, [x21]
    35d4:	fcmpe	s1, s0
    35d8:	add	x20, sp, #0x50
    35dc:	mov	w1, #0x1                   	// #1
    35e0:	str	w1, [sp, #88]
    35e4:	mov	x1, x20
    35e8:	cset	x0, ls  // ls = plast
    35ec:	str	x0, [sp, #80]
    35f0:	add	x0, x19, #0x8
    35f4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    35f8:	mov	x0, x20
    35fc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3600:	mov	x0, x19
    3604:	ldp	x19, x20, [sp, #16]
    3608:	ldp	x21, x22, [sp, #32]
    360c:	ldp	x23, x24, [sp, #48]
    3610:	ldp	x25, x26, [sp, #64]
    3614:	ldp	x29, x30, [sp], #96
    3618:	ret
    361c:	ldr	d0, [x20]
    3620:	ldr	d1, [x21]
    3624:	fcmpe	d1, d0
    3628:	b	35d8 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x58>
    362c:	mov	x0, x22
    3630:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3634:	ldp	x1, x3, [x20, #24]
    3638:	add	x22, x21, #0x18
    363c:	ldr	x2, [x22, #8]
    3640:	ldr	x0, [x0, #24]
    3644:	sub	x3, x3, x1
    3648:	ldr	x1, [x21, #24]
    364c:	mov	x21, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3650:	ldrb	w0, [x0, #8]
    3654:	movk	x21, #0xaaab
    3658:	sub	x2, x2, x1
    365c:	cmp	w0, #0x2
    3660:	add	x0, x19, #0x18
    3664:	asr	x1, x2, #4
    3668:	mul	x1, x1, x21
    366c:	b.ne	3708 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x188>  // b.any
    3670:	cmp	x2, x3
    3674:	b.eq	3698 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x118>  // b.none
    3678:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    367c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3680:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3684:	add	x3, x3, #0x0
    3688:	add	x1, x1, #0x0
    368c:	add	x0, x0, #0x0
    3690:	mov	w2, #0x1cc                 	// #460
    3694:	bl	0 <__assert_fail>
    3698:	add	x24, sp, #0x50
    369c:	mov	w23, #0x0                   	// #0
    36a0:	mov	w26, #0x30                  	// #48
    36a4:	mov	w25, #0x1                   	// #1
    36a8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    36ac:	ldp	x1, x0, [x22]
    36b0:	sub	x0, x0, x1
    36b4:	asr	x0, x0, #4
    36b8:	mul	x0, x0, x21
    36bc:	cmp	x0, w23, uxtw
    36c0:	b.ls	3600 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x80>  // b.plast
    36c4:	umull	x2, w23, w26
    36c8:	str	w25, [sp, #88]
    36cc:	ldr	x3, [x20, #24]
    36d0:	add	w23, w23, #0x1
    36d4:	ldr	x0, [x19, #24]
    36d8:	ldr	s1, [x1, x2]
    36dc:	ldr	s0, [x3, x2]
    36e0:	add	x0, x0, x2
    36e4:	add	x0, x0, #0x8
    36e8:	fcmpe	s1, s0
    36ec:	cset	x1, ls  // ls = plast
    36f0:	str	x1, [sp, #80]
    36f4:	mov	x1, x24
    36f8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    36fc:	mov	x0, x24
    3700:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3704:	b	36ac <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x12c>
    3708:	cmp	x2, x3
    370c:	b.ne	3678 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0xf8>  // b.any
    3710:	add	x24, sp, #0x50
    3714:	mov	w23, #0x0                   	// #0
    3718:	mov	w26, #0x30                  	// #48
    371c:	mov	w25, #0x1                   	// #1
    3720:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3724:	ldp	x1, x0, [x22]
    3728:	sub	x0, x0, x1
    372c:	asr	x0, x0, #4
    3730:	mul	x0, x0, x21
    3734:	cmp	x0, w23, uxtw
    3738:	b.ls	3600 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x80>  // b.plast
    373c:	umull	x2, w23, w26
    3740:	str	w25, [sp, #88]
    3744:	ldr	x3, [x20, #24]
    3748:	add	w23, w23, #0x1
    374c:	ldr	x0, [x19, #24]
    3750:	ldr	d1, [x1, x2]
    3754:	ldr	d0, [x3, x2]
    3758:	add	x0, x0, x2
    375c:	add	x0, x0, #0x8
    3760:	fcmpe	d1, d0
    3764:	cset	x1, ls  // ls = plast
    3768:	str	x1, [sp, #80]
    376c:	mov	x1, x24
    3770:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3774:	mov	x0, x24
    3778:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    377c:	b	3724 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x1a4>
    3780:	bl	0 <_ZN4llvm4dbgsEv>
    3784:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3788:	add	x1, x1, #0x0
    378c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3790:	mov	x1, x22
    3794:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3798:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    379c:	add	x1, x1, #0x0
    37a0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    37a4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    37a8:	mov	w2, #0x1cf                 	// #463
    37ac:	add	x1, x1, #0x0
    37b0:	mov	x0, #0x0                   	// #0
    37b4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

00000000000037b8 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE>:
    37b8:	stp	x29, x30, [sp, #-352]!
    37bc:	mov	x29, sp
    37c0:	stp	x23, x24, [sp, #48]
    37c4:	mov	x24, x2
    37c8:	mov	x23, x8
    37cc:	stp	x19, x20, [sp, #16]
    37d0:	add	x20, sp, #0x70
    37d4:	add	x19, sp, #0x130
    37d8:	stp	x21, x22, [sp, #32]
    37dc:	mov	x22, x0
    37e0:	mov	x21, x1
    37e4:	mov	x0, x20
    37e8:	stp	x25, x26, [sp, #64]
    37ec:	stp	x27, x28, [sp, #80]
    37f0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    37f4:	ldrb	w0, [x24, #8]
    37f8:	cmp	w0, #0x2
    37fc:	b.ne	3870 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0xb8>  // b.any
    3800:	ldr	s0, [x22]
    3804:	fcmp	s0, s0
    3808:	b.ne	3818 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x60>  // b.any
    380c:	ldr	s0, [x21]
    3810:	fcmp	s0, s0
    3814:	b.eq	3b2c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x374>  // b.none
    3818:	mov	x1, x19
    381c:	mov	w0, #0x1                   	// #1
    3820:	str	w0, [sp, #312]
    3824:	mov	x0, #0x1                   	// #1
    3828:	str	x0, [sp, #304]
    382c:	add	x0, x20, #0x8
    3830:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3834:	mov	x0, x19
    3838:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    383c:	mov	x1, x20
    3840:	mov	x0, x23
    3844:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3848:	mov	x0, x20
    384c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3850:	mov	x0, x23
    3854:	ldp	x19, x20, [sp, #16]
    3858:	ldp	x21, x22, [sp, #32]
    385c:	ldp	x23, x24, [sp, #48]
    3860:	ldp	x25, x26, [sp, #64]
    3864:	ldp	x27, x28, [sp, #80]
    3868:	ldp	x29, x30, [sp], #352
    386c:	ret
    3870:	ldr	d0, [x22]
    3874:	fcmp	d0, d0
    3878:	b.ne	3818 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x60>  // b.any
    387c:	ldr	d0, [x21]
    3880:	fcmp	d0, d0
    3884:	b.ne	3818 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x60>  // b.any
    3888:	cmp	w0, #0x10
    388c:	b.ne	3b2c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x374>  // b.any
    3890:	mov	x0, x24
    3894:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3898:	ldp	x1, x3, [x21, #24]
    389c:	mov	x26, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    38a0:	ldr	x2, [x22, #32]
    38a4:	movk	x26, #0xaaab
    38a8:	ldr	x0, [x0, #24]
    38ac:	add	x25, x22, #0x18
    38b0:	sub	x3, x3, x1
    38b4:	ldr	x1, [x22, #24]
    38b8:	ldrb	w0, [x0, #8]
    38bc:	sub	x2, x2, x1
    38c0:	cmp	w0, #0x2
    38c4:	add	x0, x20, #0x18
    38c8:	asr	x1, x2, #4
    38cc:	mul	x1, x1, x26
    38d0:	b.ne	3988 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x1d0>  // b.any
    38d4:	cmp	x3, x2
    38d8:	b.eq	38fc <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x144>  // b.none
    38dc:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    38e0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    38e4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    38e8:	add	x3, x3, #0x0
    38ec:	add	x1, x1, #0x0
    38f0:	add	x0, x0, #0x0
    38f4:	mov	w2, #0x22a                 	// #554
    38f8:	bl	0 <__assert_fail>
    38fc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3900:	mov	w27, #0x0                   	// #0
    3904:	mov	x28, #0x1                   	// #1
    3908:	str	x26, [sp, #104]
    390c:	mov	w26, #0x1                   	// #1
    3910:	ldp	x3, x0, [x25]
    3914:	ldr	x1, [sp, #104]
    3918:	sub	x0, x0, x3
    391c:	asr	x0, x0, #4
    3920:	mul	x0, x0, x1
    3924:	cmp	x0, w27, uxtw
    3928:	b.ls	3a1c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x264>  // b.plast
    392c:	mov	w0, #0x30                  	// #48
    3930:	umull	x1, w27, w0
    3934:	ldr	x0, [sp, #136]
    3938:	ldr	s0, [x3, x1]
    393c:	add	x0, x0, x1
    3940:	add	x0, x0, #0x8
    3944:	fcmp	s0, s0
    3948:	b.ne	395c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x1a4>  // b.any
    394c:	ldr	x3, [x21, #24]
    3950:	ldr	s0, [x3, x1]
    3954:	fcmp	s0, s0
    3958:	b.eq	397c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x1c4>  // b.none
    395c:	str	x28, [sp, #304]
    3960:	str	w26, [sp, #312]
    3964:	mov	x1, x19
    3968:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    396c:	mov	x0, x19
    3970:	add	w27, w27, #0x1
    3974:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3978:	b	3910 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x158>
    397c:	str	xzr, [sp, #304]
    3980:	str	w26, [sp, #312]
    3984:	b	3964 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x1ac>
    3988:	cmp	x3, x2
    398c:	b.ne	38dc <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x124>  // b.any
    3990:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3994:	mov	w27, #0x0                   	// #0
    3998:	mov	x28, #0x1                   	// #1
    399c:	str	x26, [sp, #104]
    39a0:	mov	w26, #0x1                   	// #1
    39a4:	ldp	x3, x0, [x25]
    39a8:	ldr	x1, [sp, #104]
    39ac:	sub	x0, x0, x3
    39b0:	asr	x0, x0, #4
    39b4:	mul	x0, x0, x1
    39b8:	cmp	x0, w27, uxtw
    39bc:	b.ls	3a1c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x264>  // b.plast
    39c0:	mov	w0, #0x30                  	// #48
    39c4:	umull	x1, w27, w0
    39c8:	ldr	x0, [sp, #136]
    39cc:	ldr	d0, [x3, x1]
    39d0:	add	x0, x0, x1
    39d4:	add	x0, x0, #0x8
    39d8:	fcmp	d0, d0
    39dc:	b.ne	3a10 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x258>  // b.any
    39e0:	ldr	x3, [x21, #24]
    39e4:	ldr	d0, [x3, x1]
    39e8:	fcmp	d0, d0
    39ec:	b.ne	3a10 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x258>  // b.any
    39f0:	str	xzr, [sp, #304]
    39f4:	str	w26, [sp, #312]
    39f8:	mov	x1, x19
    39fc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3a00:	mov	x0, x19
    3a04:	add	w27, w27, #0x1
    3a08:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3a0c:	b	39a4 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x1ec>
    3a10:	str	x28, [sp, #304]
    3a14:	str	w26, [sp, #312]
    3a18:	b	39f8 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x240>
    3a1c:	ldrb	w0, [x24, #8]
    3a20:	cmp	w0, #0x10
    3a24:	b.ne	3b2c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x374>  // b.any
    3a28:	add	x26, sp, #0xa0
    3a2c:	mov	x1, x20
    3a30:	mov	x0, x26
    3a34:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3a38:	add	x0, sp, #0xd0
    3a3c:	mov	x1, x22
    3a40:	mov	x22, x0
    3a44:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3a48:	add	x0, sp, #0x100
    3a4c:	mov	x1, x21
    3a50:	mov	x21, x0
    3a54:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3a58:	mov	x2, x24
    3a5c:	mov	x8, x19
    3a60:	mov	x1, x21
    3a64:	mov	x0, x22
    3a68:	bl	3580 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE>
    3a6c:	mov	x28, #0x0                   	// #0
    3a70:	mov	x1, x19
    3a74:	mov	x0, x20
    3a78:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3a7c:	mov	x24, #0x30                  	// #48
    3a80:	mov	x0, x19
    3a84:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3a88:	mov	x0, x21
    3a8c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3a90:	mov	x0, x22
    3a94:	mov	x21, #0x1                   	// #1
    3a98:	mov	x22, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3a9c:	mov	w27, w21
    3aa0:	movk	x22, #0xaaab
    3aa4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3aa8:	ldp	x1, x0, [x25]
    3aac:	sub	x0, x0, x1
    3ab0:	asr	x0, x0, #4
    3ab4:	mul	x0, x0, x22
    3ab8:	cmp	x28, x0
    3abc:	b.cs	3b14 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x35c>  // b.hs, b.nlast
    3ac0:	mul	x2, x28, x24
    3ac4:	mov	x1, #0x1                   	// #1
    3ac8:	ldr	x0, [sp, #184]
    3acc:	str	x2, [sp, #104]
    3ad0:	add	x0, x0, x2
    3ad4:	add	x0, x0, #0x8
    3ad8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3adc:	tst	w0, #0xff
    3ae0:	ldr	x2, [sp, #104]
    3ae4:	b.eq	3b0c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x354>  // b.none
    3ae8:	ldr	x0, [sp, #136]
    3aec:	mov	x1, x19
    3af0:	str	x21, [sp, #304]
    3af4:	add	x0, x0, x2
    3af8:	str	w27, [sp, #312]
    3afc:	add	x0, x0, #0x8
    3b00:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3b04:	mov	x0, x19
    3b08:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3b0c:	add	x28, x28, #0x1
    3b10:	b	3aa8 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x2f0>
    3b14:	mov	x0, x23
    3b18:	mov	x1, x20
    3b1c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3b20:	mov	x0, x26
    3b24:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3b28:	b	3848 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x90>
    3b2c:	add	x0, sp, #0x100
    3b30:	mov	x1, x22
    3b34:	mov	x22, x0
    3b38:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3b3c:	mov	x1, x21
    3b40:	mov	x0, x19
    3b44:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3b48:	mov	x8, x23
    3b4c:	mov	x2, x24
    3b50:	mov	x1, x19
    3b54:	mov	x0, x22
    3b58:	bl	3580 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE>
    3b5c:	mov	x0, x19
    3b60:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3b64:	mov	x0, x22
    3b68:	b	3b24 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x36c>

0000000000003b6c <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE>:
    3b6c:	stp	x29, x30, [sp, #-96]!
    3b70:	mov	x29, sp
    3b74:	stp	x21, x22, [sp, #32]
    3b78:	mov	x22, x2
    3b7c:	mov	x21, x0
    3b80:	mov	x0, x8
    3b84:	stp	x19, x20, [sp, #16]
    3b88:	mov	x19, x8
    3b8c:	mov	x20, x1
    3b90:	stp	x23, x24, [sp, #48]
    3b94:	stp	x25, x26, [sp, #64]
    3b98:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3b9c:	ldrb	w0, [x22, #8]
    3ba0:	cmp	w0, #0x3
    3ba4:	b.eq	3c08 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x9c>  // b.none
    3ba8:	cmp	w0, #0x10
    3bac:	b.eq	3c18 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0xac>  // b.none
    3bb0:	cmp	w0, #0x2
    3bb4:	b.ne	3d6c <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x200>  // b.any
    3bb8:	ldr	s0, [x20]
    3bbc:	ldr	s1, [x21]
    3bc0:	fcmpe	s1, s0
    3bc4:	add	x20, sp, #0x50
    3bc8:	mov	w1, #0x1                   	// #1
    3bcc:	str	w1, [sp, #88]
    3bd0:	mov	x1, x20
    3bd4:	cset	x0, ge  // ge = tcont
    3bd8:	str	x0, [sp, #80]
    3bdc:	add	x0, x19, #0x8
    3be0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3be4:	mov	x0, x20
    3be8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3bec:	mov	x0, x19
    3bf0:	ldp	x19, x20, [sp, #16]
    3bf4:	ldp	x21, x22, [sp, #32]
    3bf8:	ldp	x23, x24, [sp, #48]
    3bfc:	ldp	x25, x26, [sp, #64]
    3c00:	ldp	x29, x30, [sp], #96
    3c04:	ret
    3c08:	ldr	d0, [x20]
    3c0c:	ldr	d1, [x21]
    3c10:	fcmpe	d1, d0
    3c14:	b	3bc4 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x58>
    3c18:	mov	x0, x22
    3c1c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3c20:	ldp	x1, x3, [x20, #24]
    3c24:	add	x22, x21, #0x18
    3c28:	ldr	x2, [x22, #8]
    3c2c:	ldr	x0, [x0, #24]
    3c30:	sub	x3, x3, x1
    3c34:	ldr	x1, [x21, #24]
    3c38:	mov	x21, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3c3c:	ldrb	w0, [x0, #8]
    3c40:	movk	x21, #0xaaab
    3c44:	sub	x2, x2, x1
    3c48:	cmp	w0, #0x2
    3c4c:	add	x0, x19, #0x18
    3c50:	asr	x1, x2, #4
    3c54:	mul	x1, x1, x21
    3c58:	b.ne	3cf4 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x188>  // b.any
    3c5c:	cmp	x2, x3
    3c60:	b.eq	3c84 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x118>  // b.none
    3c64:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3c68:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3c6c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3c70:	add	x3, x3, #0x0
    3c74:	add	x1, x1, #0x0
    3c78:	add	x0, x0, #0x0
    3c7c:	mov	w2, #0x1da                 	// #474
    3c80:	bl	0 <__assert_fail>
    3c84:	add	x24, sp, #0x50
    3c88:	mov	w23, #0x0                   	// #0
    3c8c:	mov	w26, #0x30                  	// #48
    3c90:	mov	w25, #0x1                   	// #1
    3c94:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3c98:	ldp	x1, x0, [x22]
    3c9c:	sub	x0, x0, x1
    3ca0:	asr	x0, x0, #4
    3ca4:	mul	x0, x0, x21
    3ca8:	cmp	x0, w23, uxtw
    3cac:	b.ls	3bec <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x80>  // b.plast
    3cb0:	umull	x2, w23, w26
    3cb4:	str	w25, [sp, #88]
    3cb8:	ldr	x3, [x20, #24]
    3cbc:	add	w23, w23, #0x1
    3cc0:	ldr	x0, [x19, #24]
    3cc4:	ldr	s1, [x1, x2]
    3cc8:	ldr	s0, [x3, x2]
    3ccc:	add	x0, x0, x2
    3cd0:	add	x0, x0, #0x8
    3cd4:	fcmpe	s1, s0
    3cd8:	cset	x1, ge  // ge = tcont
    3cdc:	str	x1, [sp, #80]
    3ce0:	mov	x1, x24
    3ce4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3ce8:	mov	x0, x24
    3cec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3cf0:	b	3c98 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x12c>
    3cf4:	cmp	x2, x3
    3cf8:	b.ne	3c64 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0xf8>  // b.any
    3cfc:	add	x24, sp, #0x50
    3d00:	mov	w23, #0x0                   	// #0
    3d04:	mov	w26, #0x30                  	// #48
    3d08:	mov	w25, #0x1                   	// #1
    3d0c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3d10:	ldp	x1, x0, [x22]
    3d14:	sub	x0, x0, x1
    3d18:	asr	x0, x0, #4
    3d1c:	mul	x0, x0, x21
    3d20:	cmp	x0, w23, uxtw
    3d24:	b.ls	3bec <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x80>  // b.plast
    3d28:	umull	x2, w23, w26
    3d2c:	str	w25, [sp, #88]
    3d30:	ldr	x3, [x20, #24]
    3d34:	add	w23, w23, #0x1
    3d38:	ldr	x0, [x19, #24]
    3d3c:	ldr	d1, [x1, x2]
    3d40:	ldr	d0, [x3, x2]
    3d44:	add	x0, x0, x2
    3d48:	add	x0, x0, #0x8
    3d4c:	fcmpe	d1, d0
    3d50:	cset	x1, ge  // ge = tcont
    3d54:	str	x1, [sp, #80]
    3d58:	mov	x1, x24
    3d5c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3d60:	mov	x0, x24
    3d64:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3d68:	b	3d10 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x1a4>
    3d6c:	bl	0 <_ZN4llvm4dbgsEv>
    3d70:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3d74:	add	x1, x1, #0x0
    3d78:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3d7c:	mov	x1, x22
    3d80:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3d84:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3d88:	add	x1, x1, #0x0
    3d8c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3d90:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3d94:	mov	w2, #0x1dd                 	// #477
    3d98:	add	x1, x1, #0x0
    3d9c:	mov	x0, #0x0                   	// #0
    3da0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000003da4 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE>:
    3da4:	stp	x29, x30, [sp, #-352]!
    3da8:	mov	x29, sp
    3dac:	stp	x23, x24, [sp, #48]
    3db0:	mov	x24, x2
    3db4:	mov	x23, x8
    3db8:	stp	x19, x20, [sp, #16]
    3dbc:	add	x20, sp, #0x70
    3dc0:	add	x19, sp, #0x130
    3dc4:	stp	x21, x22, [sp, #32]
    3dc8:	mov	x22, x0
    3dcc:	mov	x21, x1
    3dd0:	mov	x0, x20
    3dd4:	stp	x25, x26, [sp, #64]
    3dd8:	stp	x27, x28, [sp, #80]
    3ddc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3de0:	ldrb	w0, [x24, #8]
    3de4:	cmp	w0, #0x2
    3de8:	b.ne	3e5c <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0xb8>  // b.any
    3dec:	ldr	s0, [x22]
    3df0:	fcmp	s0, s0
    3df4:	b.ne	3e04 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x60>  // b.any
    3df8:	ldr	s0, [x21]
    3dfc:	fcmp	s0, s0
    3e00:	b.eq	4118 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x374>  // b.none
    3e04:	mov	x1, x19
    3e08:	mov	w0, #0x1                   	// #1
    3e0c:	str	w0, [sp, #312]
    3e10:	mov	x0, #0x1                   	// #1
    3e14:	str	x0, [sp, #304]
    3e18:	add	x0, x20, #0x8
    3e1c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3e20:	mov	x0, x19
    3e24:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3e28:	mov	x1, x20
    3e2c:	mov	x0, x23
    3e30:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3e34:	mov	x0, x20
    3e38:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3e3c:	mov	x0, x23
    3e40:	ldp	x19, x20, [sp, #16]
    3e44:	ldp	x21, x22, [sp, #32]
    3e48:	ldp	x23, x24, [sp, #48]
    3e4c:	ldp	x25, x26, [sp, #64]
    3e50:	ldp	x27, x28, [sp, #80]
    3e54:	ldp	x29, x30, [sp], #352
    3e58:	ret
    3e5c:	ldr	d0, [x22]
    3e60:	fcmp	d0, d0
    3e64:	b.ne	3e04 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x60>  // b.any
    3e68:	ldr	d0, [x21]
    3e6c:	fcmp	d0, d0
    3e70:	b.ne	3e04 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x60>  // b.any
    3e74:	cmp	w0, #0x10
    3e78:	b.ne	4118 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x374>  // b.any
    3e7c:	mov	x0, x24
    3e80:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3e84:	ldp	x1, x3, [x21, #24]
    3e88:	mov	x26, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3e8c:	ldr	x2, [x22, #32]
    3e90:	movk	x26, #0xaaab
    3e94:	ldr	x0, [x0, #24]
    3e98:	add	x25, x22, #0x18
    3e9c:	sub	x3, x3, x1
    3ea0:	ldr	x1, [x22, #24]
    3ea4:	ldrb	w0, [x0, #8]
    3ea8:	sub	x2, x2, x1
    3eac:	cmp	w0, #0x2
    3eb0:	add	x0, x20, #0x18
    3eb4:	asr	x1, x2, #4
    3eb8:	mul	x1, x1, x26
    3ebc:	b.ne	3f74 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x1d0>  // b.any
    3ec0:	cmp	x3, x2
    3ec4:	b.eq	3ee8 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x144>  // b.none
    3ec8:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3ecc:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3ed0:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3ed4:	add	x3, x3, #0x0
    3ed8:	add	x1, x1, #0x0
    3edc:	add	x0, x0, #0x0
    3ee0:	mov	w2, #0x233                 	// #563
    3ee4:	bl	0 <__assert_fail>
    3ee8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3eec:	mov	w27, #0x0                   	// #0
    3ef0:	mov	x28, #0x1                   	// #1
    3ef4:	str	x26, [sp, #104]
    3ef8:	mov	w26, #0x1                   	// #1
    3efc:	ldp	x3, x0, [x25]
    3f00:	ldr	x1, [sp, #104]
    3f04:	sub	x0, x0, x3
    3f08:	asr	x0, x0, #4
    3f0c:	mul	x0, x0, x1
    3f10:	cmp	x0, w27, uxtw
    3f14:	b.ls	4008 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x264>  // b.plast
    3f18:	mov	w0, #0x30                  	// #48
    3f1c:	umull	x1, w27, w0
    3f20:	ldr	x0, [sp, #136]
    3f24:	ldr	s0, [x3, x1]
    3f28:	add	x0, x0, x1
    3f2c:	add	x0, x0, #0x8
    3f30:	fcmp	s0, s0
    3f34:	b.ne	3f48 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x1a4>  // b.any
    3f38:	ldr	x3, [x21, #24]
    3f3c:	ldr	s0, [x3, x1]
    3f40:	fcmp	s0, s0
    3f44:	b.eq	3f68 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x1c4>  // b.none
    3f48:	str	x28, [sp, #304]
    3f4c:	str	w26, [sp, #312]
    3f50:	mov	x1, x19
    3f54:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3f58:	mov	x0, x19
    3f5c:	add	w27, w27, #0x1
    3f60:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3f64:	b	3efc <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x158>
    3f68:	str	xzr, [sp, #304]
    3f6c:	str	w26, [sp, #312]
    3f70:	b	3f50 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x1ac>
    3f74:	cmp	x3, x2
    3f78:	b.ne	3ec8 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x124>  // b.any
    3f7c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3f80:	mov	w27, #0x0                   	// #0
    3f84:	mov	x28, #0x1                   	// #1
    3f88:	str	x26, [sp, #104]
    3f8c:	mov	w26, #0x1                   	// #1
    3f90:	ldp	x3, x0, [x25]
    3f94:	ldr	x1, [sp, #104]
    3f98:	sub	x0, x0, x3
    3f9c:	asr	x0, x0, #4
    3fa0:	mul	x0, x0, x1
    3fa4:	cmp	x0, w27, uxtw
    3fa8:	b.ls	4008 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x264>  // b.plast
    3fac:	mov	w0, #0x30                  	// #48
    3fb0:	umull	x1, w27, w0
    3fb4:	ldr	x0, [sp, #136]
    3fb8:	ldr	d0, [x3, x1]
    3fbc:	add	x0, x0, x1
    3fc0:	add	x0, x0, #0x8
    3fc4:	fcmp	d0, d0
    3fc8:	b.ne	3ffc <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x258>  // b.any
    3fcc:	ldr	x3, [x21, #24]
    3fd0:	ldr	d0, [x3, x1]
    3fd4:	fcmp	d0, d0
    3fd8:	b.ne	3ffc <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x258>  // b.any
    3fdc:	str	xzr, [sp, #304]
    3fe0:	str	w26, [sp, #312]
    3fe4:	mov	x1, x19
    3fe8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3fec:	mov	x0, x19
    3ff0:	add	w27, w27, #0x1
    3ff4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3ff8:	b	3f90 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x1ec>
    3ffc:	str	x28, [sp, #304]
    4000:	str	w26, [sp, #312]
    4004:	b	3fe4 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x240>
    4008:	ldrb	w0, [x24, #8]
    400c:	cmp	w0, #0x10
    4010:	b.ne	4118 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x374>  // b.any
    4014:	add	x26, sp, #0xa0
    4018:	mov	x1, x20
    401c:	mov	x0, x26
    4020:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4024:	add	x0, sp, #0xd0
    4028:	mov	x1, x22
    402c:	mov	x22, x0
    4030:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4034:	add	x0, sp, #0x100
    4038:	mov	x1, x21
    403c:	mov	x21, x0
    4040:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4044:	mov	x2, x24
    4048:	mov	x8, x19
    404c:	mov	x1, x21
    4050:	mov	x0, x22
    4054:	bl	3b6c <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE>
    4058:	mov	x28, #0x0                   	// #0
    405c:	mov	x1, x19
    4060:	mov	x0, x20
    4064:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4068:	mov	x24, #0x30                  	// #48
    406c:	mov	x0, x19
    4070:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4074:	mov	x0, x21
    4078:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    407c:	mov	x0, x22
    4080:	mov	x21, #0x1                   	// #1
    4084:	mov	x22, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    4088:	mov	w27, w21
    408c:	movk	x22, #0xaaab
    4090:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4094:	ldp	x1, x0, [x25]
    4098:	sub	x0, x0, x1
    409c:	asr	x0, x0, #4
    40a0:	mul	x0, x0, x22
    40a4:	cmp	x28, x0
    40a8:	b.cs	4100 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x35c>  // b.hs, b.nlast
    40ac:	mul	x2, x28, x24
    40b0:	mov	x1, #0x1                   	// #1
    40b4:	ldr	x0, [sp, #184]
    40b8:	str	x2, [sp, #104]
    40bc:	add	x0, x0, x2
    40c0:	add	x0, x0, #0x8
    40c4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    40c8:	tst	w0, #0xff
    40cc:	ldr	x2, [sp, #104]
    40d0:	b.eq	40f8 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x354>  // b.none
    40d4:	ldr	x0, [sp, #136]
    40d8:	mov	x1, x19
    40dc:	str	x21, [sp, #304]
    40e0:	add	x0, x0, x2
    40e4:	str	w27, [sp, #312]
    40e8:	add	x0, x0, #0x8
    40ec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    40f0:	mov	x0, x19
    40f4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    40f8:	add	x28, x28, #0x1
    40fc:	b	4094 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x2f0>
    4100:	mov	x0, x23
    4104:	mov	x1, x20
    4108:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    410c:	mov	x0, x26
    4110:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4114:	b	3e34 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x90>
    4118:	add	x0, sp, #0x100
    411c:	mov	x1, x22
    4120:	mov	x22, x0
    4124:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4128:	mov	x1, x21
    412c:	mov	x0, x19
    4130:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4134:	mov	x8, x23
    4138:	mov	x2, x24
    413c:	mov	x1, x19
    4140:	mov	x0, x22
    4144:	bl	3b6c <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE>
    4148:	mov	x0, x19
    414c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4150:	mov	x0, x22
    4154:	b	4110 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x36c>

0000000000004158 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE>:
    4158:	stp	x29, x30, [sp, #-96]!
    415c:	mov	x29, sp
    4160:	stp	x23, x24, [sp, #48]
    4164:	mov	x23, x3
    4168:	stp	x19, x20, [sp, #16]
    416c:	mov	x19, x8
    4170:	mov	x20, x0
    4174:	mov	x0, x8
    4178:	stp	x21, x22, [sp, #32]
    417c:	mov	x21, x1
    4180:	mov	x22, x2
    4184:	stp	x25, x26, [sp, #64]
    4188:	str	x27, [sp, #80]
    418c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4190:	ldrb	w0, [x23, #8]
    4194:	cmp	w0, #0x10
    4198:	b.ne	4288 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x130>  // b.any
    419c:	ldr	x1, [x20, #24]
    41a0:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    41a4:	ldr	x0, [x20, #32]
    41a8:	movk	x23, #0xaaab
    41ac:	ldp	x3, x2, [x21, #24]
    41b0:	sub	x0, x0, x1
    41b4:	add	x27, x20, #0x18
    41b8:	asr	x1, x0, #4
    41bc:	sub	x2, x2, x3
    41c0:	mul	x1, x1, x23
    41c4:	cmp	x0, x2
    41c8:	b.eq	41ec <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x94>  // b.none
    41cc:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    41d0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    41d4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    41d8:	add	x3, x3, #0x0
    41dc:	add	x1, x1, #0x0
    41e0:	add	x0, x0, #0x0
    41e4:	mov	w2, #0x34f                 	// #847
    41e8:	bl	0 <__assert_fail>
    41ec:	ldp	x3, x2, [x22, #24]
    41f0:	sub	x2, x2, x3
    41f4:	cmp	x0, x2
    41f8:	b.eq	421c <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0xc4>  // b.none
    41fc:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4200:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4204:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4208:	add	x3, x3, #0x0
    420c:	add	x1, x1, #0x0
    4210:	add	x0, x0, #0x0
    4214:	mov	w2, #0x350                 	// #848
    4218:	b	41e8 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x90>
    421c:	mov	x25, #0x0                   	// #0
    4220:	mov	x24, #0x30                  	// #48
    4224:	add	x0, x19, #0x18
    4228:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    422c:	ldp	x0, x3, [x27]
    4230:	sub	x3, x3, x0
    4234:	asr	x3, x3, #4
    4238:	mul	x3, x3, x23
    423c:	cmp	x25, x3
    4240:	b.cs	42a4 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x14c>  // b.hs, b.nlast
    4244:	mul	x20, x25, x24
    4248:	mov	x1, #0x0                   	// #0
    424c:	add	x0, x0, x20
    4250:	add	x0, x0, #0x8
    4254:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4258:	ldr	x26, [x19, #24]
    425c:	tst	w0, #0xff
    4260:	add	x26, x26, x20
    4264:	b.eq	4280 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x128>  // b.none
    4268:	ldr	x1, [x22, #24]
    426c:	add	x1, x1, x20
    4270:	mov	x0, x26
    4274:	add	x25, x25, #0x1
    4278:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    427c:	b	422c <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0xd4>
    4280:	ldr	x1, [x21, #24]
    4284:	b	426c <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x114>
    4288:	mov	x1, #0x0                   	// #0
    428c:	add	x0, x20, #0x8
    4290:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4294:	tst	w0, #0xff
    4298:	csel	x1, x22, x21, ne  // ne = any
    429c:	mov	x0, x19
    42a0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    42a4:	mov	x0, x19
    42a8:	ldp	x19, x20, [sp, #16]
    42ac:	ldp	x21, x22, [sp, #32]
    42b0:	ldp	x23, x24, [sp, #48]
    42b4:	ldp	x25, x26, [sp, #64]
    42b8:	ldr	x27, [sp, #80]
    42bc:	ldp	x29, x30, [sp], #96
    42c0:	ret

00000000000042c4 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE>:
    42c4:	stp	x29, x30, [sp, #-384]!
    42c8:	mov	x29, sp
    42cc:	stp	x19, x20, [sp, #16]
    42d0:	mov	x20, x0
    42d4:	ldrh	w0, [x1, #18]
    42d8:	stp	x21, x22, [sp, #32]
    42dc:	mov	x19, x1
    42e0:	sub	w0, w0, #0x22
    42e4:	stp	x23, x24, [sp, #48]
    42e8:	mov	x21, x8
    42ec:	mov	x24, x2
    42f0:	stp	x25, x26, [sp, #64]
    42f4:	cmp	w0, #0x17
    42f8:	b.hi	4c30 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x96c>  // b.pmore
    42fc:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4300:	add	x1, x1, #0x0
    4304:	ldrh	w0, [x1, w0, uxtw #1]
    4308:	adr	x1, 4314 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x50>
    430c:	add	x0, x1, w0, sxth #2
    4310:	br	x0
    4314:	mov	w1, #0x0                   	// #0
    4318:	mov	x0, x19
    431c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4320:	mov	x1, x0
    4324:	ldr	x2, [x19]
    4328:	mov	x8, x21
    432c:	mov	x3, x24
    4330:	mov	x0, x20
    4334:	bl	85a4 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    4338:	mov	x0, x21
    433c:	ldp	x19, x20, [sp, #16]
    4340:	ldp	x21, x22, [sp, #32]
    4344:	ldp	x23, x24, [sp, #48]
    4348:	ldp	x25, x26, [sp, #64]
    434c:	ldp	x29, x30, [sp], #384
    4350:	ret
    4354:	mov	x0, x19
    4358:	mov	w1, #0x0                   	// #0
    435c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4360:	mov	x1, x0
    4364:	ldr	x2, [x19]
    4368:	mov	x8, x21
    436c:	mov	x3, x24
    4370:	mov	x0, x20
    4374:	bl	890c <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    4378:	b	4338 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x74>
    437c:	mov	x0, x19
    4380:	mov	w1, #0x0                   	// #0
    4384:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4388:	mov	x1, x0
    438c:	ldr	x2, [x19]
    4390:	mov	x8, x21
    4394:	mov	x3, x24
    4398:	mov	x0, x20
    439c:	bl	8758 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    43a0:	b	4338 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x74>
    43a4:	mov	x0, x19
    43a8:	mov	w1, #0x0                   	// #0
    43ac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    43b0:	mov	x1, x0
    43b4:	ldr	x2, [x19]
    43b8:	mov	x8, x21
    43bc:	mov	x3, x24
    43c0:	mov	x0, x20
    43c4:	bl	8ac0 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    43c8:	b	4338 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x74>
    43cc:	mov	x0, x19
    43d0:	mov	w1, #0x0                   	// #0
    43d4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    43d8:	mov	x1, x0
    43dc:	ldr	x2, [x19]
    43e0:	mov	x8, x21
    43e4:	mov	x3, x24
    43e8:	mov	x0, x20
    43ec:	bl	8c84 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    43f0:	b	4338 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x74>
    43f4:	mov	x0, x19
    43f8:	mov	w1, #0x0                   	// #0
    43fc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4400:	mov	x1, x0
    4404:	ldr	x2, [x19]
    4408:	mov	x8, x21
    440c:	mov	x3, x24
    4410:	mov	x0, x20
    4414:	bl	9390 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    4418:	b	4338 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x74>
    441c:	mov	x0, x19
    4420:	mov	w1, #0x0                   	// #0
    4424:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4428:	mov	x1, x0
    442c:	ldr	x2, [x19]
    4430:	mov	x8, x21
    4434:	mov	x3, x24
    4438:	mov	x0, x20
    443c:	bl	95bc <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    4440:	b	4338 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x74>
    4444:	mov	x0, x19
    4448:	mov	w1, #0x0                   	// #0
    444c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4450:	mov	x1, x0
    4454:	ldr	x2, [x19]
    4458:	mov	x8, x21
    445c:	mov	x3, x24
    4460:	mov	x0, x20
    4464:	bl	8e48 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    4468:	b	4338 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x74>
    446c:	mov	x0, x19
    4470:	mov	w1, #0x0                   	// #0
    4474:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4478:	mov	x1, x0
    447c:	ldr	x2, [x19]
    4480:	mov	x8, x21
    4484:	mov	x3, x24
    4488:	mov	x0, x20
    448c:	bl	90ec <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    4490:	b	4338 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x74>
    4494:	mov	x0, x19
    4498:	mov	w1, #0x0                   	// #0
    449c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    44a0:	mov	x1, x0
    44a4:	ldr	x2, [x19]
    44a8:	mov	x8, x21
    44ac:	mov	x3, x24
    44b0:	mov	x0, x20
    44b4:	bl	97e8 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    44b8:	b	4338 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x74>
    44bc:	mov	x0, x19
    44c0:	mov	w1, #0x0                   	// #0
    44c4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    44c8:	mov	x1, x0
    44cc:	ldr	x2, [x19]
    44d0:	mov	x8, x21
    44d4:	mov	x3, x24
    44d8:	mov	x0, x20
    44dc:	bl	9968 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    44e0:	b	4338 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x74>
    44e4:	mov	x0, x19
    44e8:	mov	w1, #0x0                   	// #0
    44ec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    44f0:	mov	x1, x0
    44f4:	ldr	x2, [x19]
    44f8:	mov	x8, x21
    44fc:	mov	x3, x24
    4500:	mov	x0, x20
    4504:	bl	9abc <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    4508:	b	4338 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x74>
    450c:	mov	w1, #0x0                   	// #0
    4510:	mov	x0, x19
    4514:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4518:	mov	x23, x0
    451c:	mov	x0, x19
    4520:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4524:	tst	w0, #0xff
    4528:	b.ne	454c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x288>  // b.any
    452c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4530:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4534:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4538:	add	x3, x3, #0x0
    453c:	add	x1, x1, #0x0
    4540:	add	x0, x0, #0x0
    4544:	mov	w2, #0x108                 	// #264
    4548:	bl	0 <__assert_fail>
    454c:	mov	x0, x19
    4550:	bl	0 <_ZNK4llvm11GEPOperator20getSourceElementTypeEv>
    4554:	mov	x26, x0
    4558:	mov	x0, x19
    455c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4560:	mov	x25, #0xffffffffffffffff    	// #-1
    4564:	mov	x1, x26
    4568:	mov	x22, x0
    456c:	add	x0, sp, #0x128
    4570:	stp	xzr, x25, [sp, #296]
    4574:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4578:	add	x22, x22, #0x18
    457c:	mov	x0, x19
    4580:	str	x22, [sp, #288]
    4584:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4588:	ldr	w1, [x19, #20]
    458c:	mov	w2, #0x18                  	// #24
    4590:	mov	x8, x21
    4594:	mov	x4, x24
    4598:	add	x3, sp, #0x50
    459c:	str	x25, [sp, #96]
    45a0:	ubfx	x1, x1, #0, #28
    45a4:	str	x25, [sp, #352]
    45a8:	umaddl	x1, w1, w2, x0
    45ac:	add	x2, sp, #0x70
    45b0:	stp	x1, xzr, [sp, #336]
    45b4:	ldp	x0, x1, [sp, #288]
    45b8:	stp	x0, x1, [sp, #112]
    45bc:	ldr	x0, [sp, #304]
    45c0:	str	x0, [sp, #128]
    45c4:	ldp	x0, x1, [sp, #336]
    45c8:	stp	x0, x1, [sp, #80]
    45cc:	mov	x1, x23
    45d0:	mov	x0, x20
    45d4:	bl	778c <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE>
    45d8:	b	4338 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x74>
    45dc:	mov	x0, x19
    45e0:	bl	0 <_ZNK4llvm12ConstantExpr12getPredicateEv>
    45e4:	mov	w1, #0x0                   	// #0
    45e8:	mov	w25, w0
    45ec:	add	x22, sp, #0x90
    45f0:	mov	x0, x19
    45f4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    45f8:	mov	x1, x0
    45fc:	mov	x2, x24
    4600:	mov	x8, x22
    4604:	mov	x0, x20
    4608:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    460c:	mov	w1, #0x1                   	// #1
    4610:	mov	x0, x19
    4614:	add	x23, sp, #0xc0
    4618:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    461c:	mov	x2, x24
    4620:	mov	x8, x23
    4624:	mov	x1, x0
    4628:	mov	x0, x20
    462c:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    4630:	add	x26, sp, #0xf0
    4634:	mov	w1, #0x0                   	// #0
    4638:	mov	x0, x19
    463c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4640:	ldr	x24, [x0]
    4644:	mov	x0, x26
    4648:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    464c:	cmp	w25, #0x29
    4650:	b.hi	4b74 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x8b0>  // b.pmore
    4654:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4658:	add	x20, sp, #0x120
    465c:	add	x0, x0, #0x0
    4660:	add	x19, sp, #0x150
    4664:	ldrh	w0, [x0, w25, uxtw #1]
    4668:	adr	x1, 4674 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x3b0>
    466c:	add	x0, x1, w0, sxth #2
    4670:	br	x0
    4674:	mov	x1, x22
    4678:	mov	x0, x19
    467c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4680:	mov	x1, x23
    4684:	mov	x0, x20
    4688:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    468c:	mov	x8, x21
    4690:	mov	x2, x24
    4694:	mov	x1, x20
    4698:	mov	x0, x19
    469c:	bl	3cc <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE>
    46a0:	mov	x0, x20
    46a4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    46a8:	mov	x0, x19
    46ac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    46b0:	mov	x0, x26
    46b4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    46b8:	mov	x0, x23
    46bc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    46c0:	mov	x0, x22
    46c4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    46c8:	b	4338 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x74>
    46cc:	mov	x1, x22
    46d0:	mov	x0, x19
    46d4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    46d8:	mov	x1, x23
    46dc:	mov	x0, x20
    46e0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    46e4:	mov	x8, x21
    46e8:	mov	x2, x24
    46ec:	mov	x1, x20
    46f0:	mov	x0, x19
    46f4:	bl	594 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE>
    46f8:	b	46a0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x3dc>
    46fc:	mov	x1, x22
    4700:	mov	x0, x19
    4704:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4708:	mov	x1, x23
    470c:	mov	x0, x20
    4710:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4714:	mov	x8, x21
    4718:	mov	x2, x24
    471c:	mov	x1, x20
    4720:	mov	x0, x19
    4724:	bl	af4 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE>
    4728:	b	46a0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x3dc>
    472c:	mov	x1, x22
    4730:	mov	x0, x19
    4734:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4738:	mov	x1, x23
    473c:	mov	x0, x20
    4740:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4744:	mov	x8, x21
    4748:	mov	x2, x24
    474c:	mov	x1, x20
    4750:	mov	x0, x19
    4754:	bl	cc4 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE>
    4758:	b	46a0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x3dc>
    475c:	mov	x1, x22
    4760:	mov	x0, x19
    4764:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4768:	mov	x1, x23
    476c:	mov	x0, x20
    4770:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4774:	mov	x8, x21
    4778:	mov	x2, x24
    477c:	mov	x1, x20
    4780:	mov	x0, x19
    4784:	bl	764 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE>
    4788:	b	46a0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x3dc>
    478c:	mov	x1, x22
    4790:	mov	x0, x19
    4794:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4798:	mov	x1, x23
    479c:	mov	x0, x20
    47a0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    47a4:	mov	x8, x21
    47a8:	mov	x2, x24
    47ac:	mov	x1, x20
    47b0:	mov	x0, x19
    47b4:	bl	92c <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE>
    47b8:	b	46a0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x3dc>
    47bc:	mov	x1, x22
    47c0:	mov	x0, x19
    47c4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    47c8:	mov	x1, x23
    47cc:	mov	x0, x20
    47d0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    47d4:	mov	x8, x21
    47d8:	mov	x2, x24
    47dc:	mov	x1, x20
    47e0:	mov	x0, x19
    47e4:	bl	1234 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE>
    47e8:	b	46a0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x3dc>
    47ec:	mov	x1, x22
    47f0:	mov	x0, x19
    47f4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    47f8:	mov	x1, x23
    47fc:	mov	x0, x20
    4800:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4804:	mov	x8, x21
    4808:	mov	x2, x24
    480c:	mov	x1, x20
    4810:	mov	x0, x19
    4814:	bl	1404 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE>
    4818:	b	46a0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x3dc>
    481c:	mov	x1, x22
    4820:	mov	x0, x19
    4824:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4828:	mov	x1, x23
    482c:	mov	x0, x20
    4830:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4834:	mov	x8, x21
    4838:	mov	x2, x24
    483c:	mov	x1, x20
    4840:	mov	x0, x19
    4844:	bl	e94 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE>
    4848:	b	46a0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x3dc>
    484c:	mov	x1, x22
    4850:	mov	x0, x19
    4854:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4858:	mov	x1, x23
    485c:	mov	x0, x20
    4860:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4864:	mov	x8, x21
    4868:	mov	x2, x24
    486c:	mov	x1, x20
    4870:	mov	x0, x19
    4874:	bl	1064 <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE>
    4878:	b	46a0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x3dc>
    487c:	mov	x1, x22
    4880:	mov	x0, x19
    4884:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4888:	mov	x1, x23
    488c:	mov	x0, x20
    4890:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4894:	mov	x8, x21
    4898:	mov	x2, x24
    489c:	mov	x1, x20
    48a0:	mov	x0, x19
    48a4:	bl	170c <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE>
    48a8:	b	46a0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x3dc>
    48ac:	mov	x1, x22
    48b0:	mov	x0, x19
    48b4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    48b8:	mov	x1, x23
    48bc:	mov	x0, x20
    48c0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    48c4:	mov	x8, x21
    48c8:	mov	x2, x24
    48cc:	mov	x1, x20
    48d0:	mov	x0, x19
    48d4:	bl	192c <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE>
    48d8:	b	46a0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x3dc>
    48dc:	mov	x1, x22
    48e0:	mov	x0, x19
    48e4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    48e8:	mov	x1, x23
    48ec:	mov	x0, x20
    48f0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    48f4:	mov	x8, x21
    48f8:	mov	x2, x24
    48fc:	mov	x1, x20
    4900:	mov	x0, x19
    4904:	bl	1b4c <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE>
    4908:	b	46a0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x3dc>
    490c:	mov	x1, x22
    4910:	mov	x0, x19
    4914:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4918:	mov	x1, x23
    491c:	mov	x0, x20
    4920:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4924:	mov	x8, x21
    4928:	mov	x2, x24
    492c:	mov	x1, x20
    4930:	mov	x0, x19
    4934:	bl	1d84 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE>
    4938:	b	46a0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x3dc>
    493c:	mov	x1, x22
    4940:	mov	x0, x19
    4944:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4948:	mov	x1, x23
    494c:	mov	x0, x20
    4950:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4954:	mov	x8, x21
    4958:	mov	x2, x24
    495c:	mov	x1, x20
    4960:	mov	x0, x19
    4964:	bl	2138 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE>
    4968:	b	46a0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x3dc>
    496c:	mov	x1, x22
    4970:	mov	x0, x19
    4974:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4978:	mov	x1, x23
    497c:	mov	x0, x20
    4980:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4984:	mov	x8, x21
    4988:	mov	x2, x24
    498c:	mov	x1, x20
    4990:	mov	x0, x19
    4994:	bl	25f4 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE>
    4998:	b	46a0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x3dc>
    499c:	mov	x1, x22
    49a0:	mov	x0, x19
    49a4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    49a8:	mov	x1, x23
    49ac:	mov	x0, x20
    49b0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    49b4:	mov	x8, x21
    49b8:	mov	x2, x24
    49bc:	mov	x1, x20
    49c0:	mov	x0, x19
    49c4:	bl	29a8 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE>
    49c8:	b	46a0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x3dc>
    49cc:	mov	x1, x22
    49d0:	mov	x0, x19
    49d4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    49d8:	mov	x1, x23
    49dc:	mov	x0, x20
    49e0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    49e4:	mov	x8, x21
    49e8:	mov	x2, x24
    49ec:	mov	x1, x20
    49f0:	mov	x0, x19
    49f4:	bl	2be0 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE>
    49f8:	b	46a0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x3dc>
    49fc:	mov	x1, x22
    4a00:	mov	x0, x19
    4a04:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4a08:	mov	x1, x23
    4a0c:	mov	x0, x20
    4a10:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4a14:	mov	x8, x21
    4a18:	mov	x2, x24
    4a1c:	mov	x1, x20
    4a20:	mov	x0, x19
    4a24:	bl	2f94 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE>
    4a28:	b	46a0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x3dc>
    4a2c:	mov	x1, x22
    4a30:	mov	x0, x19
    4a34:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4a38:	mov	x1, x23
    4a3c:	mov	x0, x20
    4a40:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4a44:	mov	x8, x21
    4a48:	mov	x2, x24
    4a4c:	mov	x1, x20
    4a50:	mov	x0, x19
    4a54:	bl	31cc <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE>
    4a58:	b	46a0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x3dc>
    4a5c:	mov	x1, x22
    4a60:	mov	x0, x19
    4a64:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4a68:	mov	x1, x23
    4a6c:	mov	x0, x20
    4a70:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4a74:	mov	x8, x21
    4a78:	mov	x2, x24
    4a7c:	mov	x1, x20
    4a80:	mov	x0, x19
    4a84:	bl	3580 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE>
    4a88:	b	46a0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x3dc>
    4a8c:	mov	x1, x22
    4a90:	mov	x0, x19
    4a94:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4a98:	mov	x1, x23
    4a9c:	mov	x0, x20
    4aa0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4aa4:	mov	x8, x21
    4aa8:	mov	x2, x24
    4aac:	mov	x1, x20
    4ab0:	mov	x0, x19
    4ab4:	bl	37b8 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE>
    4ab8:	b	46a0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x3dc>
    4abc:	mov	x1, x22
    4ac0:	mov	x0, x19
    4ac4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4ac8:	mov	x1, x23
    4acc:	mov	x0, x20
    4ad0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4ad4:	mov	x8, x21
    4ad8:	mov	x2, x24
    4adc:	mov	x1, x20
    4ae0:	mov	x0, x19
    4ae4:	bl	3b6c <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE>
    4ae8:	b	46a0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x3dc>
    4aec:	mov	x1, x22
    4af0:	mov	x0, x19
    4af4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4af8:	mov	x1, x23
    4afc:	mov	x0, x20
    4b00:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4b04:	mov	x8, x21
    4b08:	mov	x2, x24
    4b0c:	mov	x1, x20
    4b10:	mov	x0, x19
    4b14:	bl	3da4 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE>
    4b18:	b	46a0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x3dc>
    4b1c:	mov	x1, x22
    4b20:	mov	x0, x19
    4b24:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4b28:	mov	x1, x23
    4b2c:	mov	x0, x20
    4b30:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4b34:	mov	x8, x21
    4b38:	mov	w3, #0x0                   	// #0
    4b3c:	mov	x2, x24
    4b40:	mov	x1, x20
    4b44:	mov	x0, x19
    4b48:	bl	15d4 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb>
    4b4c:	b	46a0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x3dc>
    4b50:	mov	x1, x22
    4b54:	mov	x0, x19
    4b58:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4b5c:	mov	x1, x23
    4b60:	mov	x0, x20
    4b64:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4b68:	mov	x8, x21
    4b6c:	mov	w3, #0x1                   	// #1
    4b70:	b	4b3c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x878>
    4b74:	bl	0 <_ZN4llvm4dbgsEv>
    4b78:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4b7c:	add	x1, x1, #0x0
    4b80:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4b84:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4b88:	add	x1, x1, #0x0
    4b8c:	mov	w2, #0x2da                 	// #730
    4b90:	mov	x0, #0x0                   	// #0
    4b94:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    4b98:	add	x22, sp, #0xf0
    4b9c:	mov	w1, #0x0                   	// #0
    4ba0:	mov	x0, x19
    4ba4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4ba8:	mov	x8, x22
    4bac:	mov	x2, x24
    4bb0:	mov	x1, x0
    4bb4:	mov	x0, x20
    4bb8:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    4bbc:	add	x23, sp, #0x120
    4bc0:	mov	w1, #0x1                   	// #1
    4bc4:	mov	x0, x19
    4bc8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4bcc:	mov	x1, x0
    4bd0:	mov	x8, x23
    4bd4:	mov	x2, x24
    4bd8:	mov	x0, x20
    4bdc:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    4be0:	add	x25, sp, #0x150
    4be4:	mov	w1, #0x2                   	// #2
    4be8:	mov	x0, x19
    4bec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4bf0:	mov	x8, x25
    4bf4:	mov	x2, x24
    4bf8:	mov	x1, x0
    4bfc:	mov	x0, x20
    4c00:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    4c04:	mov	w1, #0x0                   	// #0
    4c08:	mov	x0, x19
    4c0c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4c10:	ldr	x3, [x0]
    4c14:	mov	x8, x21
    4c18:	mov	x0, x22
    4c1c:	mov	x2, x25
    4c20:	mov	x1, x23
    4c24:	bl	4158 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE>
    4c28:	mov	x0, x25
    4c2c:	b	46b4 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x3f0>
    4c30:	mov	w1, #0x0                   	// #0
    4c34:	mov	x0, x19
    4c38:	add	x22, sp, #0x90
    4c3c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4c40:	mov	x2, x24
    4c44:	mov	x8, x22
    4c48:	mov	x1, x0
    4c4c:	mov	x0, x20
    4c50:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    4c54:	add	x23, sp, #0xc0
    4c58:	mov	w1, #0x1                   	// #1
    4c5c:	mov	x0, x19
    4c60:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4c64:	mov	x1, x0
    4c68:	mov	x2, x24
    4c6c:	mov	x8, x23
    4c70:	mov	x0, x20
    4c74:	add	x20, sp, #0xf0
    4c78:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    4c7c:	mov	x0, x20
    4c80:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4c84:	mov	x0, x19
    4c88:	mov	w1, #0x0                   	// #0
    4c8c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4c90:	ldr	x24, [x0]
    4c94:	ldrh	w0, [x19, #18]
    4c98:	sub	w0, w0, #0xd
    4c9c:	cmp	w0, #0x11
    4ca0:	b.hi	5040 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xd7c>  // b.pmore
    4ca4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4ca8:	add	x19, sp, #0x150
    4cac:	add	x1, x1, #0x0
    4cb0:	ldrh	w0, [x1, w0, uxtw #1]
    4cb4:	adr	x1, 4cc0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x9fc>
    4cb8:	add	x0, x1, w0, sxth #2
    4cbc:	br	x0
    4cc0:	add	x24, sp, #0x120
    4cc4:	add	x1, x22, #0x8
    4cc8:	mov	x0, x24
    4ccc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4cd0:	add	x1, x23, #0x8
    4cd4:	mov	x0, x24
    4cd8:	bl	0 <_ZN4llvm5APIntpLERKS0_>
    4cdc:	ldr	w0, [sp, #296]
    4ce0:	str	w0, [sp, #344]
    4ce4:	ldr	x0, [sp, #288]
    4ce8:	str	wzr, [sp, #296]
    4cec:	str	x0, [sp, #336]
    4cf0:	mov	x1, x19
    4cf4:	add	x0, x20, #0x8
    4cf8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4cfc:	mov	x0, x19
    4d00:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4d04:	mov	x0, x24
    4d08:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4d0c:	b	4dac <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xae8>
    4d10:	add	x24, sp, #0x120
    4d14:	add	x1, x22, #0x8
    4d18:	mov	x0, x24
    4d1c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4d20:	add	x1, x23, #0x8
    4d24:	mov	x0, x24
    4d28:	bl	0 <_ZN4llvm5APIntmIERKS0_>
    4d2c:	b	4cdc <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xa18>
    4d30:	mov	x8, x19
    4d34:	add	x1, x23, #0x8
    4d38:	add	x0, x22, #0x8
    4d3c:	bl	0 <_ZNK4llvm5APIntmlERKS0_>
    4d40:	mov	x1, x19
    4d44:	add	x0, x20, #0x8
    4d48:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4d4c:	mov	x0, x19
    4d50:	b	4d08 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xa44>
    4d54:	add	x25, sp, #0x120
    4d58:	mov	x1, x22
    4d5c:	mov	x0, x25
    4d60:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4d64:	mov	x0, x19
    4d68:	mov	x1, x23
    4d6c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4d70:	ldrb	w0, [x24, #8]
    4d74:	cmp	w0, #0x2
    4d78:	b.eq	4d8c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xac8>  // b.none
    4d7c:	cmp	w0, #0x3
    4d80:	b.eq	4dc0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xafc>  // b.none
    4d84:	mov	x0, x24
    4d88:	bl	154 <_ZL15executeFAddInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>
    4d8c:	ldr	s0, [sp, #288]
    4d90:	ldr	s1, [sp, #336]
    4d94:	fadd	s0, s0, s1
    4d98:	str	s0, [sp, #240]
    4d9c:	mov	x0, x19
    4da0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4da4:	mov	x0, x25
    4da8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4dac:	mov	x0, x21
    4db0:	mov	x1, x20
    4db4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4db8:	mov	x0, x20
    4dbc:	b	46b4 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x3f0>
    4dc0:	ldr	d0, [sp, #288]
    4dc4:	ldr	d1, [sp, #336]
    4dc8:	fadd	d0, d0, d1
    4dcc:	str	d0, [sp, #240]
    4dd0:	b	4d9c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xad8>
    4dd4:	add	x25, sp, #0x120
    4dd8:	mov	x1, x22
    4ddc:	mov	x0, x25
    4de0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4de4:	mov	x0, x19
    4de8:	mov	x1, x23
    4dec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4df0:	ldrb	w0, [x24, #8]
    4df4:	cmp	w0, #0x2
    4df8:	b.eq	4e0c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb48>  // b.none
    4dfc:	cmp	w0, #0x3
    4e00:	b.eq	4e1c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb58>  // b.none
    4e04:	mov	x0, x24
    4e08:	bl	19c <_ZL15executeFSubInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>
    4e0c:	ldr	s0, [sp, #288]
    4e10:	ldr	s1, [sp, #336]
    4e14:	fsub	s0, s0, s1
    4e18:	b	4d98 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xad4>
    4e1c:	ldr	d0, [sp, #288]
    4e20:	ldr	d1, [sp, #336]
    4e24:	fsub	d0, d0, d1
    4e28:	b	4dcc <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb08>
    4e2c:	add	x25, sp, #0x120
    4e30:	mov	x1, x22
    4e34:	mov	x0, x25
    4e38:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4e3c:	mov	x0, x19
    4e40:	mov	x1, x23
    4e44:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4e48:	ldrb	w0, [x24, #8]
    4e4c:	cmp	w0, #0x2
    4e50:	b.eq	4e64 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xba0>  // b.none
    4e54:	cmp	w0, #0x3
    4e58:	b.eq	4e74 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xbb0>  // b.none
    4e5c:	mov	x0, x24
    4e60:	bl	1e4 <_ZL15executeFMulInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>
    4e64:	ldr	s0, [sp, #288]
    4e68:	ldr	s1, [sp, #336]
    4e6c:	fmul	s0, s0, s1
    4e70:	b	4d98 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xad4>
    4e74:	ldr	d0, [sp, #288]
    4e78:	ldr	d1, [sp, #336]
    4e7c:	fmul	d0, d0, d1
    4e80:	b	4dcc <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb08>
    4e84:	add	x25, sp, #0x120
    4e88:	mov	x1, x22
    4e8c:	mov	x0, x25
    4e90:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4e94:	mov	x0, x19
    4e98:	mov	x1, x23
    4e9c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4ea0:	ldrb	w0, [x24, #8]
    4ea4:	cmp	w0, #0x2
    4ea8:	b.eq	4ebc <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xbf8>  // b.none
    4eac:	cmp	w0, #0x3
    4eb0:	b.eq	4ecc <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xc08>  // b.none
    4eb4:	mov	x0, x24
    4eb8:	bl	22c <_ZL15executeFDivInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>
    4ebc:	ldr	s0, [sp, #288]
    4ec0:	ldr	s1, [sp, #336]
    4ec4:	fdiv	s0, s0, s1
    4ec8:	b	4d98 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xad4>
    4ecc:	ldr	d0, [sp, #288]
    4ed0:	ldr	d1, [sp, #336]
    4ed4:	fdiv	d0, d0, d1
    4ed8:	b	4dcc <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb08>
    4edc:	add	x25, sp, #0x120
    4ee0:	mov	x1, x22
    4ee4:	mov	x0, x25
    4ee8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4eec:	mov	x1, x23
    4ef0:	mov	x0, x19
    4ef4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4ef8:	mov	x3, x24
    4efc:	mov	x2, x19
    4f00:	mov	x1, x25
    4f04:	mov	x0, x20
    4f08:	bl	274 <_ZL15executeFRemInstRN4llvm12GenericValueES0_S0_PNS_4TypeE>
    4f0c:	b	4d9c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xad8>
    4f10:	mov	x8, x19
    4f14:	add	x1, x23, #0x8
    4f18:	add	x0, x22, #0x8
    4f1c:	bl	0 <_ZNK4llvm5APInt4sdivERKS0_>
    4f20:	b	4d40 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xa7c>
    4f24:	mov	x8, x19
    4f28:	add	x1, x23, #0x8
    4f2c:	add	x0, x22, #0x8
    4f30:	bl	0 <_ZNK4llvm5APInt4udivERKS0_>
    4f34:	b	4d40 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xa7c>
    4f38:	mov	x8, x19
    4f3c:	add	x1, x23, #0x8
    4f40:	add	x0, x22, #0x8
    4f44:	bl	0 <_ZNK4llvm5APInt4uremERKS0_>
    4f48:	b	4d40 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xa7c>
    4f4c:	mov	x8, x19
    4f50:	add	x1, x23, #0x8
    4f54:	add	x0, x22, #0x8
    4f58:	bl	0 <_ZNK4llvm5APInt4sremERKS0_>
    4f5c:	b	4d40 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xa7c>
    4f60:	add	x24, sp, #0x120
    4f64:	add	x1, x22, #0x8
    4f68:	mov	x0, x24
    4f6c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4f70:	mov	x8, x19
    4f74:	add	x1, x23, #0x8
    4f78:	mov	x0, x24
    4f7c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4f80:	b	4cf0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xa2c>
    4f84:	add	x24, sp, #0x120
    4f88:	add	x1, x22, #0x8
    4f8c:	mov	x0, x24
    4f90:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4f94:	add	x1, x23, #0x8
    4f98:	mov	x0, x24
    4f9c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4fa0:	b	4cdc <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xa18>
    4fa4:	add	x24, sp, #0x120
    4fa8:	add	x1, x22, #0x8
    4fac:	mov	x0, x24
    4fb0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4fb4:	mov	x8, x19
    4fb8:	add	x1, x23, #0x8
    4fbc:	mov	x0, x24
    4fc0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4fc4:	b	4cf0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xa2c>
    4fc8:	add	x0, x23, #0x8
    4fcc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4fd0:	add	x1, x22, #0x8
    4fd4:	mov	x24, x0
    4fd8:	mov	x0, x19
    4fdc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4fe0:	mov	w1, w24
    4fe4:	mov	x0, x19
    4fe8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4fec:	b	4d40 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xa7c>
    4ff0:	add	x0, x23, #0x8
    4ff4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4ff8:	add	x1, x22, #0x8
    4ffc:	mov	x24, x0
    5000:	mov	x0, x19
    5004:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5008:	mov	w1, w24
    500c:	mov	x0, x19
    5010:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5014:	b	4d40 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xa7c>
    5018:	add	x0, x23, #0x8
    501c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5020:	add	x1, x22, #0x8
    5024:	mov	x24, x0
    5028:	mov	x0, x19
    502c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5030:	mov	w1, w24
    5034:	mov	x0, x19
    5038:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    503c:	b	4d40 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xa7c>
    5040:	bl	0 <_ZN4llvm4dbgsEv>
    5044:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5048:	add	x1, x1, #0x0
    504c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5050:	mov	x1, x0
    5054:	mov	w2, #0x0                   	// #0
    5058:	mov	x20, x0
    505c:	mov	x0, x19
    5060:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    5064:	mov	x0, x20
    5068:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    506c:	add	x1, x1, #0x0
    5070:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5074:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5078:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    507c:	add	x1, x1, #0x0
    5080:	add	x0, x0, #0x0
    5084:	mov	w2, #0x833                 	// #2099
    5088:	b	4b94 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x8d0>

000000000000508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>:
    508c:	stp	x29, x30, [sp, #-64]!
    5090:	mov	x29, sp
    5094:	stp	x19, x20, [sp, #16]
    5098:	mov	x19, x8
    509c:	mov	x20, x1
    50a0:	stp	x21, x22, [sp, #32]
    50a4:	mov	x21, x0
    50a8:	mov	x22, x2
    50ac:	mov	x0, x1
    50b0:	str	x1, [sp, #56]
    50b4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    50b8:	tst	w0, #0xff
    50bc:	b.eq	50ec <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0x60>  // b.none
    50c0:	cbz	x20, 50ec <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0x60>
    50c4:	mov	x8, x19
    50c8:	mov	x2, x22
    50cc:	mov	x1, x20
    50d0:	mov	x0, x21
    50d4:	bl	42c4 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE>
    50d8:	mov	x0, x19
    50dc:	ldp	x19, x20, [sp, #16]
    50e0:	ldp	x21, x22, [sp, #32]
    50e4:	ldp	x29, x30, [sp], #64
    50e8:	ret
    50ec:	mov	x0, x20
    50f0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    50f4:	tst	w0, #0xff
    50f8:	b.eq	511c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0x90>  // b.none
    50fc:	mov	x0, x20
    5100:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5104:	mov	x1, x0
    5108:	cbz	x0, 511c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0x90>
    510c:	mov	x8, x19
    5110:	mov	x0, x21
    5114:	bl	0 <_ZN4llvm15ExecutionEngine16getConstantValueEPKNS_8ConstantE>
    5118:	b	50d8 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0x4c>
    511c:	mov	x0, x20
    5120:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5124:	tst	w0, #0xff
    5128:	b.eq	5164 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0xd8>  // b.none
    512c:	cbz	x20, 5164 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0xd8>
    5130:	mov	x1, x20
    5134:	mov	x0, x21
    5138:	bl	0 <_ZN4llvm15ExecutionEngine18getPointerToGlobalEPKNS_11GlobalValueE>
    513c:	mov	x1, x0
    5140:	mov	x0, x19
    5144:	str	x1, [x0], #8
    5148:	mov	w1, #0x1                   	// #1
    514c:	str	w1, [x0, #8]
    5150:	str	xzr, [x19, #8]
    5154:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5158:	stp	xzr, xzr, [x19, #24]
    515c:	str	xzr, [x19, #40]
    5160:	b	50d8 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0x4c>
    5164:	add	x1, sp, #0x38
    5168:	add	x0, x22, #0x20
    516c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5170:	mov	x1, x0
    5174:	mov	x0, x19
    5178:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    517c:	b	50d8 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0x4c>

0000000000005180 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE>:
    5180:	stp	x29, x30, [sp, #-208]!
    5184:	mov	x29, sp
    5188:	stp	x21, x22, [sp, #32]
    518c:	add	x21, sp, #0x70
    5190:	ldr	x22, [x0, #704]
    5194:	stp	x19, x20, [sp, #16]
    5198:	mov	x20, x1
    519c:	mov	x19, x0
    51a0:	mov	w1, #0x0                   	// #0
    51a4:	sub	x22, x22, #0x80
    51a8:	mov	x0, x20
    51ac:	stp	x23, x24, [sp, #48]
    51b0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    51b4:	add	x23, sp, #0x40
    51b8:	mov	x1, x0
    51bc:	mov	x8, x23
    51c0:	mov	x2, x22
    51c4:	ldr	x24, [x0]
    51c8:	mov	x0, x19
    51cc:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    51d0:	mov	x0, x21
    51d4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    51d8:	ldrb	w0, [x24, #8]
    51dc:	cmp	w0, #0x10
    51e0:	b.ne	52d8 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x158>  // b.any
    51e4:	ldp	x0, x1, [sp, #88]
    51e8:	mov	x19, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    51ec:	movk	x19, #0xaaab
    51f0:	sub	x1, x1, x0
    51f4:	add	x0, x21, #0x18
    51f8:	asr	x1, x1, #4
    51fc:	mul	x1, x1, x19
    5200:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5204:	ldrb	w0, [x20, #16]
    5208:	cmp	w0, #0x24
    520c:	b.eq	5228 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0xa8>  // b.none
    5210:	mov	w2, #0x4a                  	// #74
    5214:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5218:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    521c:	add	x1, x1, #0x0
    5220:	add	x0, x0, #0x0
    5224:	b	52d4 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x154>
    5228:	mov	x0, x24
    522c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5230:	ldr	x0, [x0, #24]
    5234:	ldrb	w0, [x0, #8]
    5238:	cmp	w0, #0x2
    523c:	b.ne	527c <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0xfc>  // b.any
    5240:	mov	w1, #0x0                   	// #0
    5244:	mov	w4, #0x30                  	// #48
    5248:	ldp	x2, x0, [sp, #136]
    524c:	sub	x0, x0, x2
    5250:	asr	x0, x0, #4
    5254:	mul	x0, x0, x19
    5258:	cmp	x0, w1, uxtw
    525c:	b.ls	532c <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x1ac>  // b.plast
    5260:	umull	x0, w1, w4
    5264:	add	w1, w1, #0x1
    5268:	ldr	x3, [sp, #88]
    526c:	ldr	s0, [x3, x0]
    5270:	fneg	s0, s0
    5274:	str	s0, [x2, x0]
    5278:	b	5248 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0xc8>
    527c:	cmp	w0, #0x3
    5280:	b.ne	52c0 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x140>  // b.any
    5284:	mov	w1, #0x0                   	// #0
    5288:	mov	w4, #0x30                  	// #48
    528c:	ldp	x2, x0, [sp, #136]
    5290:	sub	x0, x0, x2
    5294:	asr	x0, x0, #4
    5298:	mul	x0, x0, x19
    529c:	cmp	x0, w1, uxtw
    52a0:	b.ls	532c <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x1ac>  // b.plast
    52a4:	umull	x0, w1, w4
    52a8:	add	w1, w1, #0x1
    52ac:	ldr	x3, [sp, #88]
    52b0:	ldr	d0, [x3, x0]
    52b4:	fneg	d0, d0
    52b8:	str	d0, [x2, x0]
    52bc:	b	528c <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x10c>
    52c0:	mov	w2, #0x54                  	// #84
    52c4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    52c8:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    52cc:	add	x1, x1, #0x0
    52d0:	add	x0, x0, #0x0
    52d4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    52d8:	ldrb	w0, [x20, #16]
    52dc:	cmp	w0, #0x24
    52e0:	b.eq	52ec <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x16c>  // b.none
    52e4:	mov	w2, #0x5b                  	// #91
    52e8:	b	5214 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x94>
    52ec:	add	x19, sp, #0xa0
    52f0:	mov	x1, x23
    52f4:	mov	x0, x19
    52f8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    52fc:	ldrb	w0, [x24, #8]
    5300:	cmp	w0, #0x2
    5304:	b.eq	5318 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x198>  // b.none
    5308:	cmp	w0, #0x3
    530c:	b.eq	5378 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x1f8>  // b.none
    5310:	mov	w2, #0x3a                  	// #58
    5314:	b	52c4 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x144>
    5318:	ldr	s0, [sp, #160]
    531c:	fneg	s0, s0
    5320:	str	s0, [sp, #112]
    5324:	mov	x0, x19
    5328:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    532c:	add	x19, sp, #0xa0
    5330:	mov	x1, x21
    5334:	mov	x0, x19
    5338:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    533c:	mov	x2, x22
    5340:	mov	x1, x19
    5344:	mov	x0, x20
    5348:	bl	398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    534c:	mov	x0, x19
    5350:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5354:	mov	x0, x21
    5358:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    535c:	mov	x0, x23
    5360:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5364:	ldp	x19, x20, [sp, #16]
    5368:	ldp	x21, x22, [sp, #32]
    536c:	ldp	x23, x24, [sp, #48]
    5370:	ldp	x29, x30, [sp], #208
    5374:	ret
    5378:	ldr	d0, [sp, #160]
    537c:	fneg	d0, d0
    5380:	str	d0, [sp, #112]
    5384:	b	5324 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x1a4>

0000000000005388 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE>:
    5388:	stp	x29, x30, [sp, #-384]!
    538c:	mov	x29, sp
    5390:	stp	x19, x20, [sp, #16]
    5394:	mov	x19, x0
    5398:	str	x27, [sp, #80]
    539c:	ldr	x27, [x0, #704]
    53a0:	stp	x25, x26, [sp, #64]
    53a4:	mov	x26, x1
    53a8:	ldur	x0, [x1, #-48]
    53ac:	sub	x27, x27, #0x80
    53b0:	stp	x21, x22, [sp, #32]
    53b4:	add	x22, sp, #0xc0
    53b8:	stp	x23, x24, [sp, #48]
    53bc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    53c0:	add	x23, sp, #0x60
    53c4:	mov	x1, x0
    53c8:	mov	x8, x23
    53cc:	mov	x2, x27
    53d0:	add	x24, sp, #0x90
    53d4:	ldr	x25, [x0]
    53d8:	mov	x0, x19
    53dc:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    53e0:	ldur	x0, [x26, #-24]
    53e4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    53e8:	mov	x1, x0
    53ec:	mov	x8, x24
    53f0:	mov	x2, x27
    53f4:	mov	x0, x19
    53f8:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    53fc:	mov	x0, x22
    5400:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5404:	ldrh	w0, [x26, #18]
    5408:	and	w0, w0, #0xffff7fff
    540c:	sub	w0, w0, #0x20
    5410:	cmp	w0, #0x9
    5414:	b.hi	5694 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x30c>  // b.pmore
    5418:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    541c:	add	x20, sp, #0xf0
    5420:	add	x1, x1, #0x0
    5424:	add	x21, sp, #0x120
    5428:	add	x19, sp, #0x150
    542c:	ldrh	w0, [x1, w0, uxtw #1]
    5430:	adr	x1, 543c <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0xb4>
    5434:	add	x0, x1, w0, sxth #2
    5438:	br	x0
    543c:	mov	x1, x23
    5440:	mov	x0, x20
    5444:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5448:	mov	x1, x24
    544c:	mov	x0, x21
    5450:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5454:	mov	x8, x19
    5458:	mov	x2, x25
    545c:	mov	x1, x21
    5460:	mov	x0, x20
    5464:	bl	3cc <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE>
    5468:	mov	x1, x19
    546c:	mov	x0, x22
    5470:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5474:	mov	x0, x19
    5478:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    547c:	mov	x0, x21
    5480:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5484:	mov	x0, x20
    5488:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    548c:	mov	x1, x22
    5490:	mov	x0, x19
    5494:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5498:	mov	x2, x27
    549c:	mov	x1, x19
    54a0:	mov	x0, x26
    54a4:	bl	398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    54a8:	mov	x0, x19
    54ac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    54b0:	mov	x0, x22
    54b4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    54b8:	mov	x0, x24
    54bc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    54c0:	mov	x0, x23
    54c4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    54c8:	ldp	x19, x20, [sp, #16]
    54cc:	ldp	x21, x22, [sp, #32]
    54d0:	ldp	x23, x24, [sp, #48]
    54d4:	ldp	x25, x26, [sp, #64]
    54d8:	ldr	x27, [sp, #80]
    54dc:	ldp	x29, x30, [sp], #384
    54e0:	ret
    54e4:	mov	x1, x23
    54e8:	mov	x0, x20
    54ec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    54f0:	mov	x1, x24
    54f4:	mov	x0, x21
    54f8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    54fc:	mov	x8, x19
    5500:	mov	x2, x25
    5504:	mov	x1, x21
    5508:	mov	x0, x20
    550c:	bl	594 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE>
    5510:	b	5468 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0xe0>
    5514:	mov	x1, x23
    5518:	mov	x0, x20
    551c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5520:	mov	x1, x24
    5524:	mov	x0, x21
    5528:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    552c:	mov	x8, x19
    5530:	mov	x2, x25
    5534:	mov	x1, x21
    5538:	mov	x0, x20
    553c:	bl	764 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE>
    5540:	b	5468 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0xe0>
    5544:	mov	x1, x23
    5548:	mov	x0, x20
    554c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5550:	mov	x1, x24
    5554:	mov	x0, x21
    5558:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    555c:	mov	x8, x19
    5560:	mov	x2, x25
    5564:	mov	x1, x21
    5568:	mov	x0, x20
    556c:	bl	92c <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE>
    5570:	b	5468 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0xe0>
    5574:	mov	x1, x23
    5578:	mov	x0, x20
    557c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5580:	mov	x1, x24
    5584:	mov	x0, x21
    5588:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    558c:	mov	x8, x19
    5590:	mov	x2, x25
    5594:	mov	x1, x21
    5598:	mov	x0, x20
    559c:	bl	af4 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE>
    55a0:	b	5468 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0xe0>
    55a4:	mov	x1, x23
    55a8:	mov	x0, x20
    55ac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    55b0:	mov	x1, x24
    55b4:	mov	x0, x21
    55b8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    55bc:	mov	x8, x19
    55c0:	mov	x2, x25
    55c4:	mov	x1, x21
    55c8:	mov	x0, x20
    55cc:	bl	cc4 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE>
    55d0:	b	5468 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0xe0>
    55d4:	mov	x1, x23
    55d8:	mov	x0, x20
    55dc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    55e0:	mov	x1, x24
    55e4:	mov	x0, x21
    55e8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    55ec:	mov	x8, x19
    55f0:	mov	x2, x25
    55f4:	mov	x1, x21
    55f8:	mov	x0, x20
    55fc:	bl	e94 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE>
    5600:	b	5468 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0xe0>
    5604:	mov	x1, x23
    5608:	mov	x0, x20
    560c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5610:	mov	x1, x24
    5614:	mov	x0, x21
    5618:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    561c:	mov	x8, x19
    5620:	mov	x2, x25
    5624:	mov	x1, x21
    5628:	mov	x0, x20
    562c:	bl	1064 <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE>
    5630:	b	5468 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0xe0>
    5634:	mov	x1, x23
    5638:	mov	x0, x20
    563c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5640:	mov	x1, x24
    5644:	mov	x0, x21
    5648:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    564c:	mov	x8, x19
    5650:	mov	x2, x25
    5654:	mov	x1, x21
    5658:	mov	x0, x20
    565c:	bl	1234 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE>
    5660:	b	5468 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0xe0>
    5664:	mov	x1, x23
    5668:	mov	x0, x20
    566c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5670:	mov	x1, x24
    5674:	mov	x0, x21
    5678:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    567c:	mov	x8, x19
    5680:	mov	x2, x25
    5684:	mov	x1, x21
    5688:	mov	x0, x20
    568c:	bl	1404 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE>
    5690:	b	5468 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0xe0>
    5694:	bl	0 <_ZN4llvm4dbgsEv>
    5698:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    569c:	add	x1, x1, #0x0
    56a0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    56a4:	mov	x1, x0
    56a8:	mov	w2, #0x0                   	// #0
    56ac:	mov	x0, x26
    56b0:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    56b4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    56b8:	mov	w2, #0x15f                 	// #351
    56bc:	add	x1, x1, #0x0
    56c0:	mov	x0, #0x0                   	// #0
    56c4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

00000000000056c8 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE>:
    56c8:	stp	x29, x30, [sp, #-384]!
    56cc:	mov	x29, sp
    56d0:	stp	x19, x20, [sp, #16]
    56d4:	mov	x19, x0
    56d8:	str	x27, [sp, #80]
    56dc:	ldr	x27, [x0, #704]
    56e0:	stp	x25, x26, [sp, #64]
    56e4:	mov	x26, x1
    56e8:	ldur	x0, [x1, #-48]
    56ec:	sub	x27, x27, #0x80
    56f0:	stp	x21, x22, [sp, #32]
    56f4:	add	x22, sp, #0xc0
    56f8:	stp	x23, x24, [sp, #48]
    56fc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5700:	add	x23, sp, #0x60
    5704:	mov	x1, x0
    5708:	mov	x8, x23
    570c:	mov	x2, x27
    5710:	add	x24, sp, #0x90
    5714:	ldr	x25, [x0]
    5718:	mov	x0, x19
    571c:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    5720:	ldur	x0, [x26, #-24]
    5724:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5728:	mov	x1, x0
    572c:	mov	x8, x24
    5730:	mov	x2, x27
    5734:	mov	x0, x19
    5738:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    573c:	mov	x0, x22
    5740:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5744:	ldrh	w0, [x26, #18]
    5748:	and	w0, w0, #0xffff7fff
    574c:	cmp	w0, #0xf
    5750:	b.hi	5778 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0xb0>  // b.pmore
    5754:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5758:	add	x20, sp, #0xf0
    575c:	add	x1, x1, #0x0
    5760:	add	x21, sp, #0x120
    5764:	add	x19, sp, #0x150
    5768:	ldrh	w0, [x1, w0, uxtw #1]
    576c:	adr	x1, 5778 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0xb0>
    5770:	add	x0, x1, w0, sxth #2
    5774:	br	x0
    5778:	bl	0 <_ZN4llvm4dbgsEv>
    577c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5780:	add	x1, x1, #0x0
    5784:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5788:	mov	x1, x0
    578c:	mov	w2, #0x0                   	// #0
    5790:	mov	x0, x26
    5794:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    5798:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    579c:	mov	w2, #0x2a1                 	// #673
    57a0:	add	x1, x1, #0x0
    57a4:	mov	x0, #0x0                   	// #0
    57a8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    57ac:	mov	x1, x23
    57b0:	mov	x0, x20
    57b4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    57b8:	mov	x1, x24
    57bc:	mov	x0, x21
    57c0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    57c4:	mov	x8, x19
    57c8:	mov	w3, #0x0                   	// #0
    57cc:	mov	x2, x25
    57d0:	mov	x1, x21
    57d4:	mov	x0, x20
    57d8:	bl	15d4 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb>
    57dc:	mov	x1, x19
    57e0:	mov	x0, x22
    57e4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    57e8:	mov	x0, x19
    57ec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    57f0:	mov	x0, x21
    57f4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    57f8:	mov	x0, x20
    57fc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5800:	mov	x1, x22
    5804:	mov	x0, x19
    5808:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    580c:	mov	x2, x27
    5810:	mov	x1, x19
    5814:	mov	x0, x26
    5818:	bl	398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    581c:	mov	x0, x19
    5820:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5824:	mov	x0, x22
    5828:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    582c:	mov	x0, x24
    5830:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5834:	mov	x0, x23
    5838:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    583c:	ldp	x19, x20, [sp, #16]
    5840:	ldp	x21, x22, [sp, #32]
    5844:	ldp	x23, x24, [sp, #48]
    5848:	ldp	x25, x26, [sp, #64]
    584c:	ldr	x27, [sp, #80]
    5850:	ldp	x29, x30, [sp], #384
    5854:	ret
    5858:	mov	x1, x23
    585c:	mov	x0, x20
    5860:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5864:	mov	x1, x24
    5868:	mov	x0, x21
    586c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5870:	mov	x8, x19
    5874:	mov	w3, #0x1                   	// #1
    5878:	b	57cc <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x104>
    587c:	mov	x1, x23
    5880:	mov	x0, x20
    5884:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5888:	mov	x1, x24
    588c:	mov	x0, x21
    5890:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5894:	mov	x8, x19
    5898:	mov	x2, x25
    589c:	mov	x1, x21
    58a0:	mov	x0, x20
    58a4:	bl	170c <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE>
    58a8:	b	57dc <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x114>
    58ac:	mov	x1, x23
    58b0:	mov	x0, x20
    58b4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    58b8:	mov	x1, x24
    58bc:	mov	x0, x21
    58c0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    58c4:	mov	x8, x19
    58c8:	mov	x2, x25
    58cc:	mov	x1, x21
    58d0:	mov	x0, x20
    58d4:	bl	192c <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE>
    58d8:	b	57dc <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x114>
    58dc:	mov	x1, x23
    58e0:	mov	x0, x20
    58e4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    58e8:	mov	x1, x24
    58ec:	mov	x0, x21
    58f0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    58f4:	mov	x8, x19
    58f8:	mov	x2, x25
    58fc:	mov	x1, x21
    5900:	mov	x0, x20
    5904:	bl	1d84 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE>
    5908:	b	57dc <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x114>
    590c:	mov	x1, x23
    5910:	mov	x0, x20
    5914:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5918:	mov	x1, x24
    591c:	mov	x0, x21
    5920:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5924:	mov	x8, x19
    5928:	mov	x2, x25
    592c:	mov	x1, x21
    5930:	mov	x0, x20
    5934:	bl	1b4c <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE>
    5938:	b	57dc <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x114>
    593c:	mov	x1, x23
    5940:	mov	x0, x20
    5944:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5948:	mov	x1, x24
    594c:	mov	x0, x21
    5950:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5954:	mov	x8, x19
    5958:	mov	x2, x25
    595c:	mov	x1, x21
    5960:	mov	x0, x20
    5964:	bl	25f4 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE>
    5968:	b	57dc <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x114>
    596c:	mov	x1, x23
    5970:	mov	x0, x20
    5974:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5978:	mov	x1, x24
    597c:	mov	x0, x21
    5980:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5984:	mov	x8, x19
    5988:	mov	x2, x25
    598c:	mov	x1, x21
    5990:	mov	x0, x20
    5994:	bl	2138 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE>
    5998:	b	57dc <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x114>
    599c:	mov	x1, x23
    59a0:	mov	x0, x20
    59a4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    59a8:	mov	x1, x24
    59ac:	mov	x0, x21
    59b0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    59b4:	mov	x8, x19
    59b8:	mov	x2, x25
    59bc:	mov	x1, x21
    59c0:	mov	x0, x20
    59c4:	bl	2be0 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE>
    59c8:	b	57dc <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x114>
    59cc:	mov	x1, x23
    59d0:	mov	x0, x20
    59d4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    59d8:	mov	x1, x24
    59dc:	mov	x0, x21
    59e0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    59e4:	mov	x8, x19
    59e8:	mov	x2, x25
    59ec:	mov	x1, x21
    59f0:	mov	x0, x20
    59f4:	bl	29a8 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE>
    59f8:	b	57dc <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x114>
    59fc:	mov	x1, x23
    5a00:	mov	x0, x20
    5a04:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5a08:	mov	x1, x24
    5a0c:	mov	x0, x21
    5a10:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5a14:	mov	x8, x19
    5a18:	mov	x2, x25
    5a1c:	mov	x1, x21
    5a20:	mov	x0, x20
    5a24:	bl	31cc <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE>
    5a28:	b	57dc <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x114>
    5a2c:	mov	x1, x23
    5a30:	mov	x0, x20
    5a34:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5a38:	mov	x1, x24
    5a3c:	mov	x0, x21
    5a40:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5a44:	mov	x8, x19
    5a48:	mov	x2, x25
    5a4c:	mov	x1, x21
    5a50:	mov	x0, x20
    5a54:	bl	2f94 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE>
    5a58:	b	57dc <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x114>
    5a5c:	mov	x1, x23
    5a60:	mov	x0, x20
    5a64:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5a68:	mov	x1, x24
    5a6c:	mov	x0, x21
    5a70:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5a74:	mov	x8, x19
    5a78:	mov	x2, x25
    5a7c:	mov	x1, x21
    5a80:	mov	x0, x20
    5a84:	bl	37b8 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE>
    5a88:	b	57dc <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x114>
    5a8c:	mov	x1, x23
    5a90:	mov	x0, x20
    5a94:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5a98:	mov	x1, x24
    5a9c:	mov	x0, x21
    5aa0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5aa4:	mov	x8, x19
    5aa8:	mov	x2, x25
    5aac:	mov	x1, x21
    5ab0:	mov	x0, x20
    5ab4:	bl	3580 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE>
    5ab8:	b	57dc <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x114>
    5abc:	mov	x1, x23
    5ac0:	mov	x0, x20
    5ac4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5ac8:	mov	x1, x24
    5acc:	mov	x0, x21
    5ad0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5ad4:	mov	x8, x19
    5ad8:	mov	x2, x25
    5adc:	mov	x1, x21
    5ae0:	mov	x0, x20
    5ae4:	bl	3da4 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE>
    5ae8:	b	57dc <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x114>
    5aec:	mov	x1, x23
    5af0:	mov	x0, x20
    5af4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5af8:	mov	x1, x24
    5afc:	mov	x0, x21
    5b00:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5b04:	mov	x8, x19
    5b08:	mov	x2, x25
    5b0c:	mov	x1, x21
    5b10:	mov	x0, x20
    5b14:	bl	3b6c <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE>
    5b18:	b	57dc <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x114>

0000000000005b1c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE>:
    5b1c:	stp	x29, x30, [sp, #-336]!
    5b20:	mov	x29, sp
    5b24:	stp	x19, x20, [sp, #16]
    5b28:	mov	x19, x0
    5b2c:	stp	x25, x26, [sp, #64]
    5b30:	ldr	x25, [x0, #704]
    5b34:	stp	x23, x24, [sp, #48]
    5b38:	mov	x24, x1
    5b3c:	ldur	x0, [x1, #-48]
    5b40:	sub	x25, x25, #0x80
    5b44:	stp	x21, x22, [sp, #32]
    5b48:	add	x21, sp, #0x60
    5b4c:	add	x22, sp, #0x90
    5b50:	stp	x27, x28, [sp, #80]
    5b54:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5b58:	mov	x8, x21
    5b5c:	mov	x1, x0
    5b60:	mov	x2, x25
    5b64:	ldr	x20, [x0]
    5b68:	mov	x0, x19
    5b6c:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    5b70:	add	x23, sp, #0xc0
    5b74:	ldur	x0, [x24, #-24]
    5b78:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5b7c:	mov	x1, x0
    5b80:	mov	x8, x22
    5b84:	mov	x2, x25
    5b88:	mov	x0, x19
    5b8c:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    5b90:	mov	x0, x23
    5b94:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5b98:	ldrb	w0, [x20, #8]
    5b9c:	cmp	w0, #0x10
    5ba0:	b.ne	6644 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xb28>  // b.any
    5ba4:	ldp	x1, x0, [sp, #120]
    5ba8:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5bac:	movk	x2, #0xaaab
    5bb0:	ldr	x3, [sp, #168]
    5bb4:	sub	x0, x0, x1
    5bb8:	asr	x1, x0, #4
    5bbc:	mul	x1, x1, x2
    5bc0:	ldr	x2, [sp, #176]
    5bc4:	sub	x2, x2, x3
    5bc8:	cmp	x0, x2
    5bcc:	b.eq	5bf0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xd4>  // b.none
    5bd0:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5bd4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5bd8:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5bdc:	add	x3, x3, #0x0
    5be0:	add	x1, x1, #0x0
    5be4:	add	x0, x0, #0x0
    5be8:	mov	w2, #0x2e7                 	// #743
    5bec:	bl	0 <__assert_fail>
    5bf0:	add	x0, x23, #0x18
    5bf4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5bf8:	ldrb	w0, [x24, #16]
    5bfc:	sub	w0, w0, #0x25
    5c00:	cmp	w0, #0x11
    5c04:	b.hi	5c20 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x104>  // b.pmore
    5c08:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5c0c:	add	x1, x1, #0x0
    5c10:	ldrh	w0, [x1, w0, uxtw #1]
    5c14:	adr	x1, 5c20 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x104>
    5c18:	add	x0, x1, w0, sxth #2
    5c1c:	br	x0
    5c20:	bl	0 <_ZN4llvm4dbgsEv>
    5c24:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5c28:	add	x1, x1, #0x0
    5c2c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5c30:	mov	x1, x0
    5c34:	mov	w2, #0x0                   	// #0
    5c38:	mov	x0, x24
    5c3c:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    5c40:	mov	w2, #0x310                 	// #784
    5c44:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5c48:	mov	x0, #0x0                   	// #0
    5c4c:	add	x1, x1, #0x0
    5c50:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    5c54:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5c58:	add	x27, sp, #0xf0
    5c5c:	add	x19, sp, #0x120
    5c60:	mov	w20, #0x0                   	// #0
    5c64:	movk	x3, #0xaaab
    5c68:	mov	w2, #0x30                  	// #48
    5c6c:	ldp	x26, x1, [sp, #216]
    5c70:	sub	x1, x1, x26
    5c74:	asr	x1, x1, #4
    5c78:	mul	x1, x1, x3
    5c7c:	cmp	x1, w20, uxtw
    5c80:	b.ls	676c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc50>  // b.plast
    5c84:	ldr	x1, [sp, #120]
    5c88:	umull	x28, w20, w2
    5c8c:	mov	x0, x27
    5c90:	add	w20, w20, #0x1
    5c94:	add	x1, x1, x28
    5c98:	add	x1, x1, #0x8
    5c9c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5ca0:	ldr	x1, [sp, #168]
    5ca4:	mov	x0, x27
    5ca8:	add	x1, x1, x28
    5cac:	add	x1, x1, #0x8
    5cb0:	bl	0 <_ZN4llvm5APIntpLERKS0_>
    5cb4:	ldr	w0, [sp, #248]
    5cb8:	mov	x1, x19
    5cbc:	str	w0, [sp, #296]
    5cc0:	ldr	x0, [sp, #240]
    5cc4:	str	x0, [sp, #288]
    5cc8:	add	x0, x26, x28
    5ccc:	str	wzr, [sp, #248]
    5cd0:	add	x0, x0, #0x8
    5cd4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5cd8:	mov	x0, x19
    5cdc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5ce0:	mov	x0, x27
    5ce4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5ce8:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5cec:	mov	w2, #0x30                  	// #48
    5cf0:	movk	x3, #0xaaab
    5cf4:	b	5c6c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x150>
    5cf8:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5cfc:	add	x27, sp, #0xf0
    5d00:	add	x19, sp, #0x120
    5d04:	mov	w20, #0x0                   	// #0
    5d08:	movk	x3, #0xaaab
    5d0c:	mov	w2, #0x30                  	// #48
    5d10:	ldp	x26, x1, [sp, #216]
    5d14:	sub	x1, x1, x26
    5d18:	asr	x1, x1, #4
    5d1c:	mul	x1, x1, x3
    5d20:	cmp	x1, w20, uxtw
    5d24:	b.ls	676c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc50>  // b.plast
    5d28:	ldr	x1, [sp, #120]
    5d2c:	umull	x28, w20, w2
    5d30:	mov	x0, x27
    5d34:	add	w20, w20, #0x1
    5d38:	add	x1, x1, x28
    5d3c:	add	x1, x1, #0x8
    5d40:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5d44:	ldr	x1, [sp, #168]
    5d48:	mov	x0, x27
    5d4c:	add	x1, x1, x28
    5d50:	add	x1, x1, #0x8
    5d54:	bl	0 <_ZN4llvm5APIntmIERKS0_>
    5d58:	ldr	w0, [sp, #248]
    5d5c:	mov	x1, x19
    5d60:	str	w0, [sp, #296]
    5d64:	ldr	x0, [sp, #240]
    5d68:	str	x0, [sp, #288]
    5d6c:	add	x0, x26, x28
    5d70:	str	wzr, [sp, #248]
    5d74:	add	x0, x0, #0x8
    5d78:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5d7c:	mov	x0, x19
    5d80:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5d84:	mov	x0, x27
    5d88:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5d8c:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5d90:	mov	w2, #0x30                  	// #48
    5d94:	movk	x3, #0xaaab
    5d98:	b	5d10 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1f4>
    5d9c:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5da0:	add	x26, sp, #0x120
    5da4:	mov	w19, #0x0                   	// #0
    5da8:	movk	x2, #0xaaab
    5dac:	mov	w28, #0x30                  	// #48
    5db0:	ldp	x20, x1, [sp, #216]
    5db4:	sub	x1, x1, x20
    5db8:	asr	x1, x1, #4
    5dbc:	mul	x1, x1, x2
    5dc0:	cmp	x1, w19, uxtw
    5dc4:	b.ls	676c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc50>  // b.plast
    5dc8:	ldr	x0, [sp, #120]
    5dcc:	umull	x27, w19, w28
    5dd0:	ldr	x1, [sp, #168]
    5dd4:	add	x0, x0, x27
    5dd8:	mov	x8, x26
    5ddc:	add	x0, x0, #0x8
    5de0:	add	x1, x1, x27
    5de4:	add	w19, w19, #0x1
    5de8:	add	x1, x1, #0x8
    5dec:	bl	0 <_ZNK4llvm5APIntmlERKS0_>
    5df0:	mov	x1, x26
    5df4:	add	x0, x20, x27
    5df8:	add	x0, x0, #0x8
    5dfc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5e00:	mov	x0, x26
    5e04:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5e08:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5e0c:	movk	x2, #0xaaab
    5e10:	b	5db0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x294>
    5e14:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5e18:	add	x26, sp, #0x120
    5e1c:	mov	w19, #0x0                   	// #0
    5e20:	movk	x2, #0xaaab
    5e24:	mov	w28, #0x30                  	// #48
    5e28:	ldp	x20, x1, [sp, #216]
    5e2c:	sub	x1, x1, x20
    5e30:	asr	x1, x1, #4
    5e34:	mul	x1, x1, x2
    5e38:	cmp	x1, w19, uxtw
    5e3c:	b.ls	676c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc50>  // b.plast
    5e40:	ldr	x0, [sp, #120]
    5e44:	umull	x27, w19, w28
    5e48:	ldr	x1, [sp, #168]
    5e4c:	add	x0, x0, x27
    5e50:	mov	x8, x26
    5e54:	add	x0, x0, #0x8
    5e58:	add	x1, x1, x27
    5e5c:	add	w19, w19, #0x1
    5e60:	add	x1, x1, #0x8
    5e64:	bl	0 <_ZNK4llvm5APInt4udivERKS0_>
    5e68:	mov	x1, x26
    5e6c:	add	x0, x20, x27
    5e70:	add	x0, x0, #0x8
    5e74:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5e78:	mov	x0, x26
    5e7c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5e80:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5e84:	movk	x2, #0xaaab
    5e88:	b	5e28 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x30c>
    5e8c:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5e90:	add	x26, sp, #0x120
    5e94:	mov	w19, #0x0                   	// #0
    5e98:	movk	x2, #0xaaab
    5e9c:	mov	w28, #0x30                  	// #48
    5ea0:	ldp	x20, x1, [sp, #216]
    5ea4:	sub	x1, x1, x20
    5ea8:	asr	x1, x1, #4
    5eac:	mul	x1, x1, x2
    5eb0:	cmp	x1, w19, uxtw
    5eb4:	b.ls	676c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc50>  // b.plast
    5eb8:	ldr	x0, [sp, #120]
    5ebc:	umull	x27, w19, w28
    5ec0:	ldr	x1, [sp, #168]
    5ec4:	add	x0, x0, x27
    5ec8:	mov	x8, x26
    5ecc:	add	x0, x0, #0x8
    5ed0:	add	x1, x1, x27
    5ed4:	add	w19, w19, #0x1
    5ed8:	add	x1, x1, #0x8
    5edc:	bl	0 <_ZNK4llvm5APInt4sdivERKS0_>
    5ee0:	mov	x1, x26
    5ee4:	add	x0, x20, x27
    5ee8:	add	x0, x0, #0x8
    5eec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5ef0:	mov	x0, x26
    5ef4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5ef8:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5efc:	movk	x2, #0xaaab
    5f00:	b	5ea0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x384>
    5f04:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5f08:	add	x26, sp, #0x120
    5f0c:	mov	w19, #0x0                   	// #0
    5f10:	movk	x2, #0xaaab
    5f14:	mov	w28, #0x30                  	// #48
    5f18:	ldp	x20, x1, [sp, #216]
    5f1c:	sub	x1, x1, x20
    5f20:	asr	x1, x1, #4
    5f24:	mul	x1, x1, x2
    5f28:	cmp	x1, w19, uxtw
    5f2c:	b.ls	676c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc50>  // b.plast
    5f30:	ldr	x0, [sp, #120]
    5f34:	umull	x27, w19, w28
    5f38:	ldr	x1, [sp, #168]
    5f3c:	add	x0, x0, x27
    5f40:	mov	x8, x26
    5f44:	add	x0, x0, #0x8
    5f48:	add	x1, x1, x27
    5f4c:	add	w19, w19, #0x1
    5f50:	add	x1, x1, #0x8
    5f54:	bl	0 <_ZNK4llvm5APInt4uremERKS0_>
    5f58:	mov	x1, x26
    5f5c:	add	x0, x20, x27
    5f60:	add	x0, x0, #0x8
    5f64:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5f68:	mov	x0, x26
    5f6c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5f70:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5f74:	movk	x2, #0xaaab
    5f78:	b	5f18 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x3fc>
    5f7c:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5f80:	add	x26, sp, #0x120
    5f84:	mov	w19, #0x0                   	// #0
    5f88:	movk	x2, #0xaaab
    5f8c:	mov	w28, #0x30                  	// #48
    5f90:	ldp	x20, x1, [sp, #216]
    5f94:	sub	x1, x1, x20
    5f98:	asr	x1, x1, #4
    5f9c:	mul	x1, x1, x2
    5fa0:	cmp	x1, w19, uxtw
    5fa4:	b.ls	676c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc50>  // b.plast
    5fa8:	ldr	x0, [sp, #120]
    5fac:	umull	x27, w19, w28
    5fb0:	ldr	x1, [sp, #168]
    5fb4:	add	x0, x0, x27
    5fb8:	mov	x8, x26
    5fbc:	add	x0, x0, #0x8
    5fc0:	add	x1, x1, x27
    5fc4:	add	w19, w19, #0x1
    5fc8:	add	x1, x1, #0x8
    5fcc:	bl	0 <_ZNK4llvm5APInt4sremERKS0_>
    5fd0:	mov	x1, x26
    5fd4:	add	x0, x20, x27
    5fd8:	add	x0, x0, #0x8
    5fdc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5fe0:	mov	x0, x26
    5fe4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5fe8:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5fec:	movk	x2, #0xaaab
    5ff0:	b	5f90 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x474>
    5ff4:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5ff8:	add	x27, sp, #0xf0
    5ffc:	add	x19, sp, #0x120
    6000:	mov	w20, #0x0                   	// #0
    6004:	movk	x3, #0xaaab
    6008:	mov	w2, #0x30                  	// #48
    600c:	ldp	x26, x1, [sp, #216]
    6010:	sub	x1, x1, x26
    6014:	asr	x1, x1, #4
    6018:	mul	x1, x1, x3
    601c:	cmp	x1, w20, uxtw
    6020:	b.ls	676c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc50>  // b.plast
    6024:	ldr	x1, [sp, #120]
    6028:	umull	x28, w20, w2
    602c:	mov	x0, x27
    6030:	add	w20, w20, #0x1
    6034:	add	x1, x1, x28
    6038:	add	x1, x1, #0x8
    603c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6040:	ldr	x1, [sp, #168]
    6044:	mov	x8, x19
    6048:	mov	x0, x27
    604c:	add	x1, x1, x28
    6050:	add	x1, x1, #0x8
    6054:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6058:	mov	x1, x19
    605c:	add	x0, x26, x28
    6060:	add	x0, x0, #0x8
    6064:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6068:	mov	x0, x19
    606c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6070:	mov	x0, x27
    6074:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6078:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    607c:	mov	w2, #0x30                  	// #48
    6080:	movk	x3, #0xaaab
    6084:	b	600c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x4f0>
    6088:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    608c:	add	x27, sp, #0xf0
    6090:	add	x19, sp, #0x120
    6094:	mov	w20, #0x0                   	// #0
    6098:	movk	x3, #0xaaab
    609c:	mov	w2, #0x30                  	// #48
    60a0:	ldp	x26, x1, [sp, #216]
    60a4:	sub	x1, x1, x26
    60a8:	asr	x1, x1, #4
    60ac:	mul	x1, x1, x3
    60b0:	cmp	x1, w20, uxtw
    60b4:	b.ls	676c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc50>  // b.plast
    60b8:	ldr	x1, [sp, #120]
    60bc:	umull	x28, w20, w2
    60c0:	mov	x0, x27
    60c4:	add	w20, w20, #0x1
    60c8:	add	x1, x1, x28
    60cc:	add	x1, x1, #0x8
    60d0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    60d4:	ldr	x1, [sp, #168]
    60d8:	mov	x0, x27
    60dc:	add	x1, x1, x28
    60e0:	add	x1, x1, #0x8
    60e4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    60e8:	ldr	w0, [sp, #248]
    60ec:	mov	x1, x19
    60f0:	str	w0, [sp, #296]
    60f4:	ldr	x0, [sp, #240]
    60f8:	str	x0, [sp, #288]
    60fc:	add	x0, x26, x28
    6100:	str	wzr, [sp, #248]
    6104:	add	x0, x0, #0x8
    6108:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    610c:	mov	x0, x19
    6110:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6114:	mov	x0, x27
    6118:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    611c:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    6120:	mov	w2, #0x30                  	// #48
    6124:	movk	x3, #0xaaab
    6128:	b	60a0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x584>
    612c:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    6130:	add	x27, sp, #0xf0
    6134:	add	x19, sp, #0x120
    6138:	mov	w20, #0x0                   	// #0
    613c:	movk	x3, #0xaaab
    6140:	mov	w2, #0x30                  	// #48
    6144:	ldp	x26, x1, [sp, #216]
    6148:	sub	x1, x1, x26
    614c:	asr	x1, x1, #4
    6150:	mul	x1, x1, x3
    6154:	cmp	x1, w20, uxtw
    6158:	b.ls	676c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc50>  // b.plast
    615c:	ldr	x1, [sp, #120]
    6160:	umull	x28, w20, w2
    6164:	mov	x0, x27
    6168:	add	w20, w20, #0x1
    616c:	add	x1, x1, x28
    6170:	add	x1, x1, #0x8
    6174:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6178:	ldr	x1, [sp, #168]
    617c:	mov	x8, x19
    6180:	mov	x0, x27
    6184:	add	x1, x1, x28
    6188:	add	x1, x1, #0x8
    618c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6190:	mov	x1, x19
    6194:	add	x0, x26, x28
    6198:	add	x0, x0, #0x8
    619c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    61a0:	mov	x0, x19
    61a4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    61a8:	mov	x0, x27
    61ac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    61b0:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    61b4:	mov	w2, #0x30                  	// #48
    61b8:	movk	x3, #0xaaab
    61bc:	b	6144 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x628>
    61c0:	mov	x0, x20
    61c4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    61c8:	ldr	x0, [x0, #24]
    61cc:	ldrb	w0, [x0, #8]
    61d0:	cmp	w0, #0x2
    61d4:	b.ne	6224 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x708>  // b.any
    61d8:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    61dc:	mov	w1, #0x0                   	// #0
    61e0:	movk	x5, #0xaaab
    61e4:	mov	w4, #0x30                  	// #48
    61e8:	ldp	x2, x0, [sp, #216]
    61ec:	sub	x0, x0, x2
    61f0:	asr	x0, x0, #4
    61f4:	mul	x0, x0, x5
    61f8:	cmp	x0, w1, uxtw
    61fc:	b.ls	676c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc50>  // b.plast
    6200:	umull	x0, w1, w4
    6204:	add	w1, w1, #0x1
    6208:	ldr	x3, [sp, #120]
    620c:	ldr	s0, [x3, x0]
    6210:	ldr	x3, [sp, #168]
    6214:	ldr	s1, [x3, x0]
    6218:	fadd	s0, s0, s1
    621c:	str	s0, [x2, x0]
    6220:	b	61e8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x6cc>
    6224:	cmp	w0, #0x3
    6228:	b.ne	6278 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x75c>  // b.any
    622c:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    6230:	mov	w1, #0x0                   	// #0
    6234:	movk	x5, #0xaaab
    6238:	mov	w4, #0x30                  	// #48
    623c:	ldp	x2, x0, [sp, #216]
    6240:	sub	x0, x0, x2
    6244:	asr	x0, x0, #4
    6248:	mul	x0, x0, x5
    624c:	cmp	x0, w1, uxtw
    6250:	b.ls	676c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc50>  // b.plast
    6254:	umull	x0, w1, w4
    6258:	add	w1, w1, #0x1
    625c:	ldr	x3, [sp, #120]
    6260:	ldr	d0, [x3, x0]
    6264:	ldr	x3, [sp, #168]
    6268:	ldr	d1, [x3, x0]
    626c:	fadd	d0, d0, d1
    6270:	str	d0, [x2, x0]
    6274:	b	623c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x720>
    6278:	bl	0 <_ZN4llvm4dbgsEv>
    627c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6280:	add	x1, x1, #0x0
    6284:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6288:	mov	x1, x20
    628c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6290:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6294:	add	x1, x1, #0x0
    6298:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    629c:	mov	w2, #0x31c                 	// #796
    62a0:	b	5c44 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x128>
    62a4:	mov	x0, x20
    62a8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    62ac:	ldr	x0, [x0, #24]
    62b0:	ldrb	w0, [x0, #8]
    62b4:	cmp	w0, #0x2
    62b8:	b.ne	6308 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x7ec>  // b.any
    62bc:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    62c0:	mov	w1, #0x0                   	// #0
    62c4:	movk	x5, #0xaaab
    62c8:	mov	w4, #0x30                  	// #48
    62cc:	ldp	x2, x0, [sp, #216]
    62d0:	sub	x0, x0, x2
    62d4:	asr	x0, x0, #4
    62d8:	mul	x0, x0, x5
    62dc:	cmp	x0, w1, uxtw
    62e0:	b.ls	676c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc50>  // b.plast
    62e4:	umull	x0, w1, w4
    62e8:	add	w1, w1, #0x1
    62ec:	ldr	x3, [sp, #120]
    62f0:	ldr	s0, [x3, x0]
    62f4:	ldr	x3, [sp, #168]
    62f8:	ldr	s1, [x3, x0]
    62fc:	fsub	s0, s0, s1
    6300:	str	s0, [x2, x0]
    6304:	b	62cc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x7b0>
    6308:	cmp	w0, #0x3
    630c:	b.ne	635c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x840>  // b.any
    6310:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    6314:	mov	w1, #0x0                   	// #0
    6318:	movk	x5, #0xaaab
    631c:	mov	w4, #0x30                  	// #48
    6320:	ldp	x2, x0, [sp, #216]
    6324:	sub	x0, x0, x2
    6328:	asr	x0, x0, #4
    632c:	mul	x0, x0, x5
    6330:	cmp	x0, w1, uxtw
    6334:	b.ls	676c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc50>  // b.plast
    6338:	umull	x0, w1, w4
    633c:	add	w1, w1, #0x1
    6340:	ldr	x3, [sp, #120]
    6344:	ldr	d0, [x3, x0]
    6348:	ldr	x3, [sp, #168]
    634c:	ldr	d1, [x3, x0]
    6350:	fsub	d0, d0, d1
    6354:	str	d0, [x2, x0]
    6358:	b	6320 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x804>
    635c:	bl	0 <_ZN4llvm4dbgsEv>
    6360:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6364:	add	x1, x1, #0x0
    6368:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    636c:	mov	x1, x20
    6370:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6374:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6378:	add	x1, x1, #0x0
    637c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6380:	mov	w2, #0x31d                 	// #797
    6384:	b	5c44 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x128>
    6388:	mov	x0, x20
    638c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6390:	ldr	x0, [x0, #24]
    6394:	ldrb	w0, [x0, #8]
    6398:	cmp	w0, #0x2
    639c:	b.ne	63ec <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x8d0>  // b.any
    63a0:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    63a4:	mov	w1, #0x0                   	// #0
    63a8:	movk	x5, #0xaaab
    63ac:	mov	w4, #0x30                  	// #48
    63b0:	ldp	x2, x0, [sp, #216]
    63b4:	sub	x0, x0, x2
    63b8:	asr	x0, x0, #4
    63bc:	mul	x0, x0, x5
    63c0:	cmp	x0, w1, uxtw
    63c4:	b.ls	676c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc50>  // b.plast
    63c8:	umull	x0, w1, w4
    63cc:	add	w1, w1, #0x1
    63d0:	ldr	x3, [sp, #120]
    63d4:	ldr	s0, [x3, x0]
    63d8:	ldr	x3, [sp, #168]
    63dc:	ldr	s1, [x3, x0]
    63e0:	fmul	s0, s0, s1
    63e4:	str	s0, [x2, x0]
    63e8:	b	63b0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x894>
    63ec:	cmp	w0, #0x3
    63f0:	b.ne	6440 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x924>  // b.any
    63f4:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    63f8:	mov	w1, #0x0                   	// #0
    63fc:	movk	x5, #0xaaab
    6400:	mov	w4, #0x30                  	// #48
    6404:	ldp	x2, x0, [sp, #216]
    6408:	sub	x0, x0, x2
    640c:	asr	x0, x0, #4
    6410:	mul	x0, x0, x5
    6414:	cmp	x0, w1, uxtw
    6418:	b.ls	676c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc50>  // b.plast
    641c:	umull	x0, w1, w4
    6420:	add	w1, w1, #0x1
    6424:	ldr	x3, [sp, #120]
    6428:	ldr	d0, [x3, x0]
    642c:	ldr	x3, [sp, #168]
    6430:	ldr	d1, [x3, x0]
    6434:	fmul	d0, d0, d1
    6438:	str	d0, [x2, x0]
    643c:	b	6404 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x8e8>
    6440:	bl	0 <_ZN4llvm4dbgsEv>
    6444:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6448:	add	x1, x1, #0x0
    644c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6450:	mov	x1, x20
    6454:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6458:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    645c:	add	x1, x1, #0x0
    6460:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6464:	mov	w2, #0x31e                 	// #798
    6468:	b	5c44 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x128>
    646c:	mov	x0, x20
    6470:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6474:	ldr	x0, [x0, #24]
    6478:	ldrb	w0, [x0, #8]
    647c:	cmp	w0, #0x2
    6480:	b.ne	64d0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x9b4>  // b.any
    6484:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    6488:	mov	w1, #0x0                   	// #0
    648c:	movk	x5, #0xaaab
    6490:	mov	w4, #0x30                  	// #48
    6494:	ldp	x2, x0, [sp, #216]
    6498:	sub	x0, x0, x2
    649c:	asr	x0, x0, #4
    64a0:	mul	x0, x0, x5
    64a4:	cmp	x0, w1, uxtw
    64a8:	b.ls	676c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc50>  // b.plast
    64ac:	umull	x0, w1, w4
    64b0:	add	w1, w1, #0x1
    64b4:	ldr	x3, [sp, #168]
    64b8:	ldr	s1, [x3, x0]
    64bc:	ldr	x3, [sp, #120]
    64c0:	ldr	s0, [x3, x0]
    64c4:	fdiv	s0, s0, s1
    64c8:	str	s0, [x2, x0]
    64cc:	b	6494 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x978>
    64d0:	cmp	w0, #0x3
    64d4:	b.ne	6524 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xa08>  // b.any
    64d8:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    64dc:	mov	w1, #0x0                   	// #0
    64e0:	movk	x5, #0xaaab
    64e4:	mov	w4, #0x30                  	// #48
    64e8:	ldp	x2, x0, [sp, #216]
    64ec:	sub	x0, x0, x2
    64f0:	asr	x0, x0, #4
    64f4:	mul	x0, x0, x5
    64f8:	cmp	x0, w1, uxtw
    64fc:	b.ls	676c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc50>  // b.plast
    6500:	umull	x0, w1, w4
    6504:	add	w1, w1, #0x1
    6508:	ldr	x3, [sp, #168]
    650c:	ldr	d1, [x3, x0]
    6510:	ldr	x3, [sp, #120]
    6514:	ldr	d0, [x3, x0]
    6518:	fdiv	d0, d0, d1
    651c:	str	d0, [x2, x0]
    6520:	b	64e8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x9cc>
    6524:	bl	0 <_ZN4llvm4dbgsEv>
    6528:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    652c:	add	x1, x1, #0x0
    6530:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6534:	mov	x1, x20
    6538:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    653c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6540:	add	x1, x1, #0x0
    6544:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6548:	mov	w2, #0x31f                 	// #799
    654c:	b	5c44 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x128>
    6550:	mov	x0, x20
    6554:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6558:	ldr	x0, [x0, #24]
    655c:	ldrb	w0, [x0, #8]
    6560:	cmp	w0, #0x2
    6564:	b.ne	65c4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xaa8>  // b.any
    6568:	mov	x27, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    656c:	mov	w19, #0x0                   	// #0
    6570:	movk	x27, #0xaaab
    6574:	mov	w26, #0x30                  	// #48
    6578:	ldp	x1, x0, [sp, #216]
    657c:	sub	x0, x0, x1
    6580:	asr	x0, x0, #4
    6584:	mul	x0, x0, x27
    6588:	cmp	x0, w19, uxtw
    658c:	b.ls	676c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc50>  // b.plast
    6590:	umull	x20, w19, w26
    6594:	add	w19, w19, #0x1
    6598:	ldr	x0, [sp, #168]
    659c:	ldr	s1, [x0, x20]
    65a0:	ldr	x0, [sp, #120]
    65a4:	fcvt	d1, s1
    65a8:	ldr	s0, [x0, x20]
    65ac:	fcvt	d0, s0
    65b0:	bl	0 <fmod>
    65b4:	fcvt	s0, d0
    65b8:	ldr	x0, [sp, #216]
    65bc:	str	s0, [x0, x20]
    65c0:	b	6578 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xa5c>
    65c4:	cmp	w0, #0x3
    65c8:	b.ne	6618 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xafc>  // b.any
    65cc:	mov	x28, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    65d0:	mov	w19, #0x0                   	// #0
    65d4:	movk	x28, #0xaaab
    65d8:	mov	w27, #0x30                  	// #48
    65dc:	ldp	x26, x0, [sp, #216]
    65e0:	sub	x0, x0, x26
    65e4:	asr	x0, x0, #4
    65e8:	mul	x0, x0, x28
    65ec:	cmp	x0, w19, uxtw
    65f0:	b.ls	676c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc50>  // b.plast
    65f4:	umull	x20, w19, w27
    65f8:	add	w19, w19, #0x1
    65fc:	ldr	x0, [sp, #168]
    6600:	ldr	d1, [x0, x20]
    6604:	ldr	x0, [sp, #120]
    6608:	ldr	d0, [x0, x20]
    660c:	bl	0 <fmod>
    6610:	str	d0, [x26, x20]
    6614:	b	65dc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xac0>
    6618:	bl	0 <_ZN4llvm4dbgsEv>
    661c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6620:	add	x1, x1, #0x0
    6624:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6628:	mov	x1, x20
    662c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6630:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6634:	add	x1, x1, #0x0
    6638:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    663c:	mov	w2, #0x32c                 	// #812
    6640:	b	5c44 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x128>
    6644:	ldrb	w0, [x24, #16]
    6648:	sub	w0, w0, #0x25
    664c:	cmp	w0, #0x11
    6650:	b.hi	6670 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xb54>  // b.pmore
    6654:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6658:	add	x19, sp, #0x120
    665c:	add	x1, x1, #0x0
    6660:	ldrh	w0, [x1, w0, uxtw #1]
    6664:	adr	x1, 6670 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xb54>
    6668:	add	x0, x1, w0, sxth #2
    666c:	br	x0
    6670:	bl	0 <_ZN4llvm4dbgsEv>
    6674:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6678:	add	x1, x1, #0x0
    667c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6680:	mov	x1, x0
    6684:	mov	w2, #0x0                   	// #0
    6688:	mov	x0, x24
    668c:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    6690:	mov	w2, #0x335                 	// #821
    6694:	b	5c44 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x128>
    6698:	add	x20, sp, #0xf0
    669c:	add	x1, x21, #0x8
    66a0:	mov	x0, x20
    66a4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    66a8:	add	x1, x22, #0x8
    66ac:	mov	x0, x20
    66b0:	bl	0 <_ZN4llvm5APIntpLERKS0_>
    66b4:	ldr	w0, [sp, #248]
    66b8:	str	w0, [sp, #296]
    66bc:	ldr	x0, [sp, #240]
    66c0:	str	wzr, [sp, #248]
    66c4:	str	x0, [sp, #288]
    66c8:	b	6988 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe6c>
    66cc:	add	x20, sp, #0xf0
    66d0:	add	x1, x21, #0x8
    66d4:	mov	x0, x20
    66d8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    66dc:	add	x1, x22, #0x8
    66e0:	mov	x0, x20
    66e4:	bl	0 <_ZN4llvm5APIntmIERKS0_>
    66e8:	b	66b4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xb98>
    66ec:	mov	x8, x19
    66f0:	add	x1, x22, #0x8
    66f4:	add	x0, x21, #0x8
    66f8:	bl	0 <_ZNK4llvm5APIntmlERKS0_>
    66fc:	mov	x1, x19
    6700:	add	x0, x23, #0x8
    6704:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6708:	mov	x0, x19
    670c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6710:	b	676c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc50>
    6714:	add	x26, sp, #0xf0
    6718:	mov	x1, x21
    671c:	mov	x0, x26
    6720:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6724:	mov	x0, x19
    6728:	mov	x1, x22
    672c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6730:	ldrb	w0, [x20, #8]
    6734:	cmp	w0, #0x2
    6738:	b.eq	674c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc30>  // b.none
    673c:	cmp	w0, #0x3
    6740:	b.eq	67c8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xcac>  // b.none
    6744:	mov	x0, x20
    6748:	bl	154 <_ZL15executeFAddInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>
    674c:	ldr	s0, [sp, #240]
    6750:	ldr	s1, [sp, #288]
    6754:	fadd	s0, s0, s1
    6758:	str	s0, [sp, #192]
    675c:	mov	x0, x19
    6760:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6764:	mov	x0, x26
    6768:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    676c:	add	x19, sp, #0x120
    6770:	mov	x1, x23
    6774:	mov	x0, x19
    6778:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    677c:	mov	x2, x25
    6780:	mov	x1, x19
    6784:	mov	x0, x24
    6788:	bl	398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    678c:	mov	x0, x19
    6790:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6794:	mov	x0, x23
    6798:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    679c:	mov	x0, x22
    67a0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    67a4:	mov	x0, x21
    67a8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    67ac:	ldp	x19, x20, [sp, #16]
    67b0:	ldp	x21, x22, [sp, #32]
    67b4:	ldp	x23, x24, [sp, #48]
    67b8:	ldp	x25, x26, [sp, #64]
    67bc:	ldp	x27, x28, [sp, #80]
    67c0:	ldp	x29, x30, [sp], #336
    67c4:	ret
    67c8:	ldr	d0, [sp, #240]
    67cc:	ldr	d1, [sp, #288]
    67d0:	fadd	d0, d0, d1
    67d4:	str	d0, [sp, #192]
    67d8:	b	675c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc40>
    67dc:	add	x26, sp, #0xf0
    67e0:	mov	x1, x21
    67e4:	mov	x0, x26
    67e8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    67ec:	mov	x0, x19
    67f0:	mov	x1, x22
    67f4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    67f8:	ldrb	w0, [x20, #8]
    67fc:	cmp	w0, #0x2
    6800:	b.eq	6814 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xcf8>  // b.none
    6804:	cmp	w0, #0x3
    6808:	b.eq	6824 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xd08>  // b.none
    680c:	mov	x0, x20
    6810:	bl	19c <_ZL15executeFSubInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>
    6814:	ldr	s0, [sp, #240]
    6818:	ldr	s1, [sp, #288]
    681c:	fsub	s0, s0, s1
    6820:	b	6758 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc3c>
    6824:	ldr	d0, [sp, #240]
    6828:	ldr	d1, [sp, #288]
    682c:	fsub	d0, d0, d1
    6830:	b	67d4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xcb8>
    6834:	add	x26, sp, #0xf0
    6838:	mov	x1, x21
    683c:	mov	x0, x26
    6840:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6844:	mov	x0, x19
    6848:	mov	x1, x22
    684c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6850:	ldrb	w0, [x20, #8]
    6854:	cmp	w0, #0x2
    6858:	b.eq	686c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xd50>  // b.none
    685c:	cmp	w0, #0x3
    6860:	b.eq	687c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xd60>  // b.none
    6864:	mov	x0, x20
    6868:	bl	1e4 <_ZL15executeFMulInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>
    686c:	ldr	s0, [sp, #240]
    6870:	ldr	s1, [sp, #288]
    6874:	fmul	s0, s0, s1
    6878:	b	6758 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc3c>
    687c:	ldr	d0, [sp, #240]
    6880:	ldr	d1, [sp, #288]
    6884:	fmul	d0, d0, d1
    6888:	b	67d4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xcb8>
    688c:	add	x26, sp, #0xf0
    6890:	mov	x1, x21
    6894:	mov	x0, x26
    6898:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    689c:	mov	x0, x19
    68a0:	mov	x1, x22
    68a4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    68a8:	ldrb	w0, [x20, #8]
    68ac:	cmp	w0, #0x2
    68b0:	b.eq	68c4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xda8>  // b.none
    68b4:	cmp	w0, #0x3
    68b8:	b.eq	68d4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xdb8>  // b.none
    68bc:	mov	x0, x20
    68c0:	bl	22c <_ZL15executeFDivInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>
    68c4:	ldr	s0, [sp, #240]
    68c8:	ldr	s1, [sp, #288]
    68cc:	fdiv	s0, s0, s1
    68d0:	b	6758 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc3c>
    68d4:	ldr	d0, [sp, #240]
    68d8:	ldr	d1, [sp, #288]
    68dc:	fdiv	d0, d0, d1
    68e0:	b	67d4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xcb8>
    68e4:	add	x26, sp, #0xf0
    68e8:	mov	x1, x21
    68ec:	mov	x0, x26
    68f0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    68f4:	mov	x1, x22
    68f8:	mov	x0, x19
    68fc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6900:	mov	x3, x20
    6904:	mov	x2, x19
    6908:	mov	x1, x26
    690c:	mov	x0, x23
    6910:	bl	274 <_ZL15executeFRemInstRN4llvm12GenericValueES0_S0_PNS_4TypeE>
    6914:	b	675c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc40>
    6918:	mov	x8, x19
    691c:	add	x1, x22, #0x8
    6920:	add	x0, x21, #0x8
    6924:	bl	0 <_ZNK4llvm5APInt4udivERKS0_>
    6928:	b	66fc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xbe0>
    692c:	mov	x8, x19
    6930:	add	x1, x22, #0x8
    6934:	add	x0, x21, #0x8
    6938:	bl	0 <_ZNK4llvm5APInt4sdivERKS0_>
    693c:	b	66fc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xbe0>
    6940:	mov	x8, x19
    6944:	add	x1, x22, #0x8
    6948:	add	x0, x21, #0x8
    694c:	bl	0 <_ZNK4llvm5APInt4uremERKS0_>
    6950:	b	66fc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xbe0>
    6954:	mov	x8, x19
    6958:	add	x1, x22, #0x8
    695c:	add	x0, x21, #0x8
    6960:	bl	0 <_ZNK4llvm5APInt4sremERKS0_>
    6964:	b	66fc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xbe0>
    6968:	add	x20, sp, #0xf0
    696c:	add	x1, x21, #0x8
    6970:	mov	x0, x20
    6974:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6978:	mov	x8, x19
    697c:	add	x1, x22, #0x8
    6980:	mov	x0, x20
    6984:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6988:	mov	x1, x19
    698c:	add	x0, x23, #0x8
    6990:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6994:	mov	x0, x19
    6998:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    699c:	mov	x0, x20
    69a0:	b	670c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xbf0>
    69a4:	add	x20, sp, #0xf0
    69a8:	add	x1, x21, #0x8
    69ac:	mov	x0, x20
    69b0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    69b4:	add	x1, x22, #0x8
    69b8:	mov	x0, x20
    69bc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    69c0:	b	66b4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xb98>
    69c4:	add	x20, sp, #0xf0
    69c8:	add	x1, x21, #0x8
    69cc:	mov	x0, x20
    69d0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    69d4:	mov	x8, x19
    69d8:	add	x1, x22, #0x8
    69dc:	mov	x0, x20
    69e0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    69e4:	b	6988 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe6c>

00000000000069e8 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE>:
    69e8:	stp	x29, x30, [sp, #-432]!
    69ec:	mov	x29, sp
    69f0:	stp	x19, x20, [sp, #16]
    69f4:	mov	x19, x0
    69f8:	mov	x20, x1
    69fc:	stp	x21, x22, [sp, #32]
    6a00:	add	x22, sp, #0x120
    6a04:	ldr	x21, [x0, #704]
    6a08:	stp	x23, x24, [sp, #48]
    6a0c:	add	x24, sp, #0x60
    6a10:	ldur	x0, [x1, #-72]
    6a14:	stp	x25, x26, [sp, #64]
    6a18:	sub	x21, x21, #0x80
    6a1c:	stp	x27, x28, [sp, #80]
    6a20:	add	x25, sp, #0x90
    6a24:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6a28:	mov	x1, x0
    6a2c:	mov	x8, x24
    6a30:	mov	x2, x21
    6a34:	mov	x0, x19
    6a38:	add	x26, sp, #0xc0
    6a3c:	add	x23, sp, #0x150
    6a40:	ldr	x28, [x1]
    6a44:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    6a48:	ldur	x0, [x20, #-48]
    6a4c:	add	x27, sp, #0xf0
    6a50:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6a54:	mov	x1, x0
    6a58:	mov	x8, x25
    6a5c:	mov	x2, x21
    6a60:	mov	x0, x19
    6a64:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    6a68:	ldur	x0, [x20, #-24]
    6a6c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6a70:	mov	x1, x0
    6a74:	mov	x8, x26
    6a78:	mov	x2, x21
    6a7c:	mov	x0, x19
    6a80:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    6a84:	mov	x1, x24
    6a88:	mov	x0, x22
    6a8c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6a90:	add	x19, sp, #0x180
    6a94:	mov	x1, x25
    6a98:	mov	x0, x23
    6a9c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6aa0:	mov	x1, x26
    6aa4:	mov	x0, x19
    6aa8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6aac:	mov	x8, x27
    6ab0:	mov	x3, x28
    6ab4:	mov	x2, x19
    6ab8:	mov	x1, x23
    6abc:	mov	x0, x22
    6ac0:	bl	4158 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE>
    6ac4:	mov	x0, x19
    6ac8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6acc:	mov	x0, x23
    6ad0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6ad4:	mov	x0, x22
    6ad8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6adc:	mov	x1, x27
    6ae0:	mov	x0, x19
    6ae4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6ae8:	mov	x2, x21
    6aec:	mov	x1, x19
    6af0:	mov	x0, x20
    6af4:	bl	398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    6af8:	mov	x0, x19
    6afc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6b00:	mov	x0, x27
    6b04:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6b08:	mov	x0, x26
    6b0c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6b10:	mov	x0, x25
    6b14:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6b18:	mov	x0, x24
    6b1c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6b20:	ldp	x19, x20, [sp, #16]
    6b24:	ldp	x21, x22, [sp, #32]
    6b28:	ldp	x23, x24, [sp, #48]
    6b2c:	ldp	x25, x26, [sp, #64]
    6b30:	ldp	x27, x28, [sp, #80]
    6b34:	ldp	x29, x30, [sp], #432
    6b38:	ret

0000000000006b3c <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE>:
    6b3c:	stp	x29, x30, [sp, #-192]!
    6b40:	mov	x29, sp
    6b44:	stp	x21, x22, [sp, #32]
    6b48:	mov	x21, x2
    6b4c:	stp	x19, x20, [sp, #16]
    6b50:	mov	x19, x2
    6b54:	stp	x23, x24, [sp, #48]
    6b58:	mov	x24, x0
    6b5c:	stp	x25, x26, [sp, #64]
    6b60:	stp	x27, x28, [sp, #80]
    6b64:	ldr	x25, [x2, #8]
    6b68:	ldr	x0, [x1, #48]
    6b6c:	str	x1, [x2, #8]
    6b70:	str	x0, [x21, #16]!
    6b74:	mov	x0, x21
    6b78:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6b7c:	tst	w0, #0xff
    6b80:	b.eq	6d10 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x1d4>  // b.none
    6b84:	add	x23, sp, #0x90
    6b88:	mov	w26, #0x18                  	// #24
    6b8c:	mov	x27, #0x8                   	// #8
    6b90:	stp	xzr, xzr, [sp, #120]
    6b94:	str	xzr, [sp, #136]
    6b98:	mov	x0, x21
    6b9c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6ba0:	tst	w0, #0xff
    6ba4:	b.eq	6c98 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x15c>  // b.none
    6ba8:	mov	x0, x21
    6bac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6bb0:	mov	x22, x0
    6bb4:	cbz	x0, 6c98 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x15c>
    6bb8:	ldr	w28, [x0, #20]
    6bbc:	mov	x20, #0x0                   	// #0
    6bc0:	ubfx	x28, x28, #0, #28
    6bc4:	str	w20, [sp, #108]
    6bc8:	cmp	w28, w20
    6bcc:	b.eq	6c00 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0xc4>  // b.none
    6bd0:	mov	x0, x22
    6bd4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6bd8:	ldr	w1, [x22, #56]
    6bdc:	add	x3, x0, x20, lsl #3
    6be0:	ldr	w2, [sp, #108]
    6be4:	add	x4, x20, #0x1
    6be8:	umaddl	x1, w1, w26, x27
    6bec:	ldr	x1, [x3, x1]
    6bf0:	cmp	x25, x1
    6bf4:	b.ne	6c20 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0xe4>  // b.any
    6bf8:	cmn	w20, #0x1
    6bfc:	b.ne	6c28 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0xec>  // b.any
    6c00:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6c04:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6c08:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6c0c:	add	x3, x3, #0x0
    6c10:	add	x1, x1, #0x0
    6c14:	add	x0, x0, #0x0
    6c18:	mov	w2, #0x3e4                 	// #996
    6c1c:	bl	0 <__assert_fail>
    6c20:	mov	x20, x4
    6c24:	b	6bc4 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x88>
    6c28:	cmp	w28, w2
    6c2c:	b.hi	6c50 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x114>  // b.pmore
    6c30:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6c34:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6c38:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6c3c:	add	x3, x3, #0x0
    6c40:	add	x1, x1, #0x0
    6c44:	add	x0, x0, #0x0
    6c48:	mov	w2, #0xadf                 	// #2783
    6c4c:	b	6c1c <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0xe0>
    6c50:	mov	x1, #0x18                  	// #24
    6c54:	mul	x20, x20, x1
    6c58:	ldr	x0, [x0, x20]
    6c5c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6c60:	mov	x1, x0
    6c64:	mov	x8, x23
    6c68:	mov	x2, x19
    6c6c:	mov	x0, x24
    6c70:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    6c74:	mov	x1, x23
    6c78:	add	x0, sp, #0x78
    6c7c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6c80:	mov	x0, x23
    6c84:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6c88:	ldr	x0, [x19, #16]
    6c8c:	ldr	x0, [x0, #8]
    6c90:	str	x0, [x19, #16]
    6c94:	b	6b98 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x5c>
    6c98:	ldr	x0, [x19, #8]
    6c9c:	add	x22, sp, #0x90
    6ca0:	mov	w20, #0x0                   	// #0
    6ca4:	mov	w24, #0x30                  	// #48
    6ca8:	ldr	x0, [x0, #48]
    6cac:	str	x0, [x19, #16]
    6cb0:	mov	x0, x21
    6cb4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6cb8:	tst	w0, #0xff
    6cbc:	b.eq	6d08 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x1cc>  // b.none
    6cc0:	mov	x0, x21
    6cc4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6cc8:	ldr	x1, [sp, #120]
    6ccc:	mov	x23, x0
    6cd0:	mov	x0, x22
    6cd4:	umaddl	x1, w20, w24, x1
    6cd8:	add	w20, w20, #0x1
    6cdc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6ce0:	mov	x2, x19
    6ce4:	mov	x1, x22
    6ce8:	mov	x0, x23
    6cec:	bl	398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    6cf0:	mov	x0, x22
    6cf4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6cf8:	ldr	x0, [x19, #16]
    6cfc:	ldr	x0, [x0, #8]
    6d00:	str	x0, [x19, #16]
    6d04:	b	6cb0 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x174>
    6d08:	add	x0, sp, #0x78
    6d0c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6d10:	ldp	x19, x20, [sp, #16]
    6d14:	ldp	x21, x22, [sp, #32]
    6d18:	ldp	x23, x24, [sp, #48]
    6d1c:	ldp	x25, x26, [sp, #64]
    6d20:	ldp	x27, x28, [sp, #80]
    6d24:	ldp	x29, x30, [sp], #192
    6d28:	ret

0000000000006d2c <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE>:
    6d2c:	stp	x29, x30, [sp, #-112]!
    6d30:	mov	x29, sp
    6d34:	stp	x19, x20, [sp, #16]
    6d38:	mov	x19, x0
    6d3c:	mov	x20, x1
    6d40:	ldr	x0, [x0, #704]
    6d44:	stp	x21, x22, [sp, #32]
    6d48:	stp	x23, x24, [sp, #48]
    6d4c:	sub	x0, x0, #0x80
    6d50:	mov	x23, x2
    6d54:	str	x0, [x19, #704]
    6d58:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6d5c:	ldr	x0, [x19, #696]
    6d60:	ldr	x22, [x19, #704]
    6d64:	cmp	x22, x0
    6d68:	b.ne	6da0 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x74>  // b.any
    6d6c:	add	x0, x19, #0x280
    6d70:	cbz	x20, 6d98 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x6c>
    6d74:	ldrb	w1, [x20, #8]
    6d78:	cbz	w1, 6d98 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x6c>
    6d7c:	mov	x1, x23
    6d80:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6d84:	ldp	x19, x20, [sp, #16]
    6d88:	ldp	x21, x22, [sp, #32]
    6d8c:	ldp	x23, x24, [sp, #48]
    6d90:	ldp	x29, x30, [sp], #112
    6d94:	ret
    6d98:	str	xzr, [x19, #640]
    6d9c:	b	6d84 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x58>
    6da0:	ldur	x20, [x22, #-104]
    6da4:	ands	x20, x20, #0xfffffffffffffff8
    6da8:	b.eq	6d84 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x58>  // b.none
    6dac:	ldr	x0, [x20]
    6db0:	sub	x24, x22, #0x80
    6db4:	ldrb	w0, [x0, #8]
    6db8:	cbz	w0, 6de4 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0xb8>
    6dbc:	add	x21, sp, #0x40
    6dc0:	mov	x1, x23
    6dc4:	mov	x0, x21
    6dc8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6dcc:	mov	x2, x24
    6dd0:	mov	x1, x21
    6dd4:	mov	x0, x20
    6dd8:	bl	398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    6ddc:	mov	x0, x21
    6de0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6de4:	mov	x0, x20
    6de8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6dec:	tst	w0, #0xff
    6df0:	b.eq	6e60 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x134>  // b.none
    6df4:	mov	x0, x20
    6df8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6dfc:	cbz	x0, 6e60 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x134>
    6e00:	ldur	x1, [x0, #-72]
    6e04:	cbnz	x1, 6e28 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0xfc>
    6e08:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6e0c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6e10:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6e14:	add	x3, x3, #0x0
    6e18:	add	x1, x1, #0x0
    6e1c:	add	x0, x0, #0x0
    6e20:	mov	w2, #0x5b                  	// #91
    6e24:	bl	0 <__assert_fail>
    6e28:	ldrb	w0, [x1, #16]
    6e2c:	cmp	w0, #0x12
    6e30:	b.eq	6e54 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x128>  // b.none
    6e34:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6e38:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6e3c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6e40:	add	x3, x3, #0x0
    6e44:	add	x1, x1, #0x0
    6e48:	add	x0, x0, #0x0
    6e4c:	mov	w2, #0xfa                  	// #250
    6e50:	b	6e24 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0xf8>
    6e54:	mov	x2, x24
    6e58:	mov	x0, x19
    6e5c:	bl	6b3c <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE>
    6e60:	stur	xzr, [x22, #-104]
    6e64:	b	6d84 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x58>

0000000000006e68 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE>:
    6e68:	stp	x29, x30, [sp, #-176]!
    6e6c:	mov	x29, sp
    6e70:	stp	x19, x20, [sp, #16]
    6e74:	mov	x20, x0
    6e78:	mov	x19, x1
    6e7c:	ldr	x0, [x0, #704]
    6e80:	stp	x21, x22, [sp, #32]
    6e84:	mov	x22, x3
    6e88:	ldr	x1, [x20, #696]
    6e8c:	stp	x23, x24, [sp, #48]
    6e90:	mov	x23, x2
    6e94:	stp	x25, x26, [sp, #64]
    6e98:	cmp	x0, x1
    6e9c:	b.eq	6edc <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x74>  // b.none
    6ea0:	ldur	x1, [x0, #-104]
    6ea4:	tst	x1, #0xfffffffffffffff8
    6ea8:	b.eq	6edc <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x74>  // b.none
    6eac:	sub	x0, x0, #0x68
    6eb0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6eb4:	cmp	x22, w0, uxtw
    6eb8:	b.eq	6edc <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x74>  // b.none
    6ebc:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6ec0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6ec4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6ec8:	add	x3, x3, #0x0
    6ecc:	add	x1, x1, #0x0
    6ed0:	add	x0, x0, #0x0
    6ed4:	mov	w2, #0x84c                 	// #2124
    6ed8:	bl	0 <__assert_fail>
    6edc:	add	x0, x20, #0x2b8
    6ee0:	ldp	x1, x2, [x0, #8]
    6ee4:	cmp	x1, x2
    6ee8:	b.eq	6fa8 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x140>  // b.none
    6eec:	add	x4, x1, #0x28
    6ef0:	stp	xzr, xzr, [x1]
    6ef4:	stp	xzr, xzr, [x1, #16]
    6ef8:	str	wzr, [x1, #40]
    6efc:	str	xzr, [x1, #48]
    6f00:	stp	x4, x4, [x4, #16]
    6f04:	str	xzr, [x4, #32]
    6f08:	stp	xzr, xzr, [x1, #80]
    6f0c:	stp	xzr, xzr, [x1, #96]
    6f10:	stp	xzr, xzr, [x1, #112]
    6f14:	add	x1, x1, #0x80
    6f18:	str	x1, [x0, #8]
    6f1c:	ldr	x21, [x20, #704]
    6f20:	mov	x0, x19
    6f24:	stur	x19, [x21, #-128]
    6f28:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
    6f2c:	tst	w0, #0xff
    6f30:	b.eq	6fb0 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x148>  // b.none
    6f34:	add	x21, sp, #0x50
    6f38:	mov	x3, x22
    6f3c:	mov	x8, x21
    6f40:	mov	x2, x23
    6f44:	mov	x1, x19
    6f48:	mov	x0, x20
    6f4c:	bl	0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE>
    6f50:	ldr	x0, [x19, #24]
    6f54:	add	x19, sp, #0x80
    6f58:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6f5c:	ldr	x0, [x0, #16]
    6f60:	mov	x1, x21
    6f64:	ldr	x22, [x0]
    6f68:	mov	x0, x19
    6f6c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6f70:	mov	x2, x19
    6f74:	mov	x1, x22
    6f78:	mov	x0, x20
    6f7c:	bl	6d2c <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE>
    6f80:	mov	x0, x19
    6f84:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6f88:	mov	x0, x21
    6f8c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6f90:	ldp	x19, x20, [sp, #16]
    6f94:	ldp	x21, x22, [sp, #32]
    6f98:	ldp	x23, x24, [sp, #48]
    6f9c:	ldp	x25, x26, [sp, #64]
    6fa0:	ldp	x29, x30, [sp], #176
    6fa4:	ret
    6fa8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6fac:	b	6f1c <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xb4>
    6fb0:	ldr	x0, [x19, #80]
    6fb4:	ldr	x1, [x0]
    6fb8:	tst	w1, #0x4
    6fbc:	b.eq	6fe0 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x178>  // b.none
    6fc0:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6fc4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6fc8:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6fcc:	add	x3, x3, #0x0
    6fd0:	add	x1, x1, #0x0
    6fd4:	add	x0, x0, #0x0
    6fd8:	mov	w2, #0x8b                  	// #139
    6fdc:	b	6ed8 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x70>
    6fe0:	sub	x1, x0, #0x18
    6fe4:	ldr	x0, [x0, #24]
    6fe8:	stp	x1, x0, [x21, #-120]
    6fec:	ldr	x0, [x19, #96]
    6ff0:	cmp	x0, x22
    6ff4:	b.eq	7030 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1c8>  // b.none
    6ff8:	b.cs	7010 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1a8>  // b.hs, b.nlast
    6ffc:	ldr	x0, [x19, #24]
    7000:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7004:	ldr	w0, [x0, #8]
    7008:	cmp	wzr, w0, lsr #8
    700c:	b.ne	7030 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1c8>  // b.any
    7010:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7014:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7018:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    701c:	add	x3, x3, #0x0
    7020:	add	x1, x1, #0x0
    7024:	add	x0, x0, #0x0
    7028:	mov	w2, #0x861                 	// #2145
    702c:	b	6ed8 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x70>
    7030:	ldrb	w0, [x19, #18]
    7034:	tbz	w0, #0, 7040 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1d8>
    7038:	mov	x0, x19
    703c:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    7040:	ldrb	w0, [x19, #18]
    7044:	ldr	x20, [x19, #88]
    7048:	tbz	w0, #0, 7054 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1ec>
    704c:	mov	x0, x19
    7050:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    7054:	ldp	x0, x25, [x19, #88]
    7058:	mov	x1, #0x28                  	// #40
    705c:	sub	x21, x21, #0x80
    7060:	add	x24, sp, #0x80
    7064:	mov	w26, #0x30                  	// #48
    7068:	mov	w19, #0x0                   	// #0
    706c:	madd	x25, x25, x1, x0
    7070:	mov	w0, w19
    7074:	cmp	x20, x25
    7078:	b.eq	70d4 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x26c>  // b.none
    707c:	cmp	x22, x0
    7080:	b.hi	70a4 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x23c>  // b.pmore
    7084:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7088:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    708c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7090:	add	x3, x3, #0x0
    7094:	add	x1, x1, #0x0
    7098:	add	x0, x0, #0x0
    709c:	mov	w2, #0xfa                  	// #250
    70a0:	b	6ed8 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x70>
    70a4:	umaddl	x1, w19, w26, x23
    70a8:	mov	x0, x24
    70ac:	add	w19, w19, #0x1
    70b0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    70b4:	mov	x2, x21
    70b8:	mov	x1, x24
    70bc:	mov	x0, x20
    70c0:	bl	398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    70c4:	mov	x0, x24
    70c8:	add	x20, x20, #0x28
    70cc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    70d0:	b	7070 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x208>
    70d4:	mov	x2, #0x30                  	// #48
    70d8:	add	x0, x21, #0x50
    70dc:	mov	w3, #0x0                   	// #0
    70e0:	umull	x1, w19, w2
    70e4:	madd	x2, x22, x2, x23
    70e8:	add	x1, x23, x1
    70ec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    70f0:	b	6f90 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x128>

00000000000070f4 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE>:
    70f4:	stp	x29, x30, [sp, #-160]!
    70f8:	mov	x29, sp
    70fc:	stp	x21, x22, [sp, #32]
    7100:	mov	x21, x1
    7104:	add	x22, sp, #0x40
    7108:	stp	x19, x20, [sp, #16]
    710c:	mov	x20, x0
    7110:	add	x19, sp, #0x70
    7114:	stp	x23, x24, [sp, #48]
    7118:	ldr	x24, [x0, #704]
    711c:	mov	x0, x1
    7120:	bl	0 <_ZNK4llvm5Value10getContextEv>
    7124:	bl	0 <_ZN4llvm4Type9getVoidTyERNS_11LLVMContextE>
    7128:	mov	x23, x0
    712c:	mov	x0, x22
    7130:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7134:	ldr	w3, [x21, #20]
    7138:	ubfx	x2, x3, #0, #28
    713c:	cbz	w2, 717c <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x88>
    7140:	mov	w1, #0x18                  	// #24
    7144:	umsubl	x2, w2, w1, x21
    7148:	ldr	x0, [x2]
    714c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7150:	mov	x1, x0
    7154:	mov	x8, x19
    7158:	sub	x2, x24, #0x80
    715c:	mov	x0, x20
    7160:	ldr	x23, [x1]
    7164:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    7168:	mov	x1, x19
    716c:	mov	x0, x22
    7170:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7174:	mov	x0, x19
    7178:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    717c:	mov	x1, x22
    7180:	mov	x0, x19
    7184:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7188:	mov	x2, x19
    718c:	mov	x1, x23
    7190:	mov	x0, x20
    7194:	bl	6d2c <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE>
    7198:	mov	x0, x19
    719c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    71a0:	mov	x0, x22
    71a4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    71a8:	ldp	x19, x20, [sp, #16]
    71ac:	ldp	x21, x22, [sp, #32]
    71b0:	ldp	x23, x24, [sp, #48]
    71b4:	ldp	x29, x30, [sp], #160
    71b8:	ret

00000000000071bc <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE>:
    71bc:	stp	x29, x30, [sp, #-112]!
    71c0:	mov	x29, sp
    71c4:	stp	x19, x20, [sp, #16]
    71c8:	mov	x20, x1
    71cc:	mov	w1, #0x0                   	// #0
    71d0:	stp	x21, x22, [sp, #32]
    71d4:	mov	x21, x0
    71d8:	stp	x23, x24, [sp, #48]
    71dc:	ldr	x22, [x0, #704]
    71e0:	mov	x0, x20
    71e4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    71e8:	mov	x19, x0
    71ec:	ldr	w0, [x20, #20]
    71f0:	sub	x22, x22, #0x80
    71f4:	ubfx	x0, x0, #0, #28
    71f8:	cmp	w0, #0x1
    71fc:	b.eq	726c <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0xb0>  // b.none
    7200:	cmp	w0, #0x3
    7204:	b.eq	7228 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0x6c>  // b.none
    7208:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    720c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7210:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7214:	add	x3, x3, #0x0
    7218:	add	x1, x1, #0x0
    721c:	add	x0, x0, #0x0
    7220:	mov	w2, #0xbf7                 	// #3063
    7224:	bl	0 <__assert_fail>
    7228:	ldur	x1, [x20, #-72]
    722c:	add	x24, sp, #0x40
    7230:	mov	x8, x24
    7234:	mov	x2, x22
    7238:	mov	x0, x21
    723c:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    7240:	mov	x1, #0x0                   	// #0
    7244:	add	x0, x24, #0x8
    7248:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    724c:	and	w23, w0, #0xff
    7250:	mov	x0, x24
    7254:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7258:	cbz	w23, 726c <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0xb0>
    725c:	mov	x0, x20
    7260:	mov	w1, #0x1                   	// #1
    7264:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7268:	mov	x19, x0
    726c:	mov	x2, x22
    7270:	mov	x1, x19
    7274:	mov	x0, x21
    7278:	bl	6b3c <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE>
    727c:	ldp	x19, x20, [sp, #16]
    7280:	ldp	x21, x22, [sp, #32]
    7284:	ldp	x23, x24, [sp, #48]
    7288:	ldp	x29, x30, [sp], #112
    728c:	ret

0000000000007290 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE>:
    7290:	stp	x29, x30, [sp, #-384]!
    7294:	mov	x29, sp
    7298:	stp	x19, x20, [sp, #16]
    729c:	mov	x19, x0
    72a0:	stp	x27, x28, [sp, #80]
    72a4:	mov	x27, x1
    72a8:	mov	x0, x27
    72ac:	mov	w1, #0x0                   	// #0
    72b0:	stp	x21, x22, [sp, #32]
    72b4:	add	x22, sp, #0xc0
    72b8:	stp	x23, x24, [sp, #48]
    72bc:	add	x23, sp, #0x90
    72c0:	add	x24, sp, #0xf0
    72c4:	stp	x25, x26, [sp, #64]
    72c8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    72cc:	mov	x1, x0
    72d0:	ldr	x20, [x19, #704]
    72d4:	mov	x8, x23
    72d8:	ldr	x0, [x0]
    72dc:	sub	x20, x20, #0x80
    72e0:	mov	x2, x20
    72e4:	str	x0, [sp, #104]
    72e8:	mov	x0, x19
    72ec:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    72f0:	ldr	w21, [x27, #20]
    72f4:	add	x26, sp, #0x150
    72f8:	add	x25, sp, #0x120
    72fc:	add	x28, x26, #0x8
    7300:	ubfx	x21, x21, #1, #27
    7304:	sub	w0, w21, #0x1
    7308:	mov	x21, #0x0                   	// #0
    730c:	str	x0, [sp, #112]
    7310:	ldr	x0, [sp, #112]
    7314:	cmp	x0, x21
    7318:	b.eq	7494 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x204>  // b.none
    731c:	ldr	w0, [x27, #20]
    7320:	stp	x27, x21, [sp, #128]
    7324:	ubfx	x0, x0, #1, #27
    7328:	sub	w0, w0, #0x1
    732c:	cmp	w0, w21
    7330:	b.hi	7354 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0xc4>  // b.pmore
    7334:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7338:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    733c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7340:	add	x3, x3, #0x0
    7344:	add	x1, x1, #0x0
    7348:	add	x0, x0, #0x0
    734c:	mov	w2, #0xc78                 	// #3192
    7350:	bl	0 <__assert_fail>
    7354:	add	x21, x21, #0x1
    7358:	mov	x0, x27
    735c:	str	w21, [sp, #120]
    7360:	lsl	w1, w21, #1
    7364:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7368:	mov	x8, x22
    736c:	mov	x2, x20
    7370:	mov	x1, x0
    7374:	mov	x0, x19
    7378:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    737c:	mov	x1, x23
    7380:	mov	x0, x24
    7384:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7388:	mov	x1, x22
    738c:	mov	x0, x25
    7390:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7394:	ldr	x2, [sp, #104]
    7398:	mov	x8, x26
    739c:	mov	x1, x25
    73a0:	mov	x0, x24
    73a4:	bl	3cc <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE>
    73a8:	mov	x1, #0x0                   	// #0
    73ac:	mov	x0, x28
    73b0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    73b4:	and	w1, w0, #0xff
    73b8:	mov	x0, x26
    73bc:	str	w1, [sp, #124]
    73c0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    73c4:	mov	x0, x25
    73c8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    73cc:	mov	x0, x24
    73d0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    73d4:	ldr	w1, [sp, #124]
    73d8:	cbnz	w1, 7448 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x1b8>
    73dc:	add	x0, sp, #0x80
    73e0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    73e4:	mov	x21, x0
    73e8:	cbnz	x0, 740c <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x17c>
    73ec:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    73f0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    73f4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    73f8:	add	x3, x3, #0x0
    73fc:	add	x1, x1, #0x0
    7400:	add	x0, x0, #0x0
    7404:	mov	w2, #0x69                  	// #105
    7408:	b	7350 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0xc0>
    740c:	mov	x0, x22
    7410:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7414:	mov	x2, x20
    7418:	mov	x1, x21
    741c:	mov	x0, x19
    7420:	bl	6b3c <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE>
    7424:	mov	x0, x23
    7428:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    742c:	ldp	x19, x20, [sp, #16]
    7430:	ldp	x21, x22, [sp, #32]
    7434:	ldp	x23, x24, [sp, #48]
    7438:	ldp	x25, x26, [sp, #64]
    743c:	ldp	x27, x28, [sp, #80]
    7440:	ldp	x29, x30, [sp], #384
    7444:	ret
    7448:	mov	x0, x22
    744c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7450:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    7454:	cmp	x21, x0
    7458:	b.eq	7474 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x1e4>  // b.none
    745c:	ldr	w0, [x27, #20]
    7460:	ldr	w1, [sp, #120]
    7464:	ubfx	x0, x0, #1, #27
    7468:	sub	w0, w0, #0x1
    746c:	cmp	w1, w0
    7470:	b.ls	7310 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x80>  // b.plast
    7474:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7478:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    747c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7480:	add	x3, x3, #0x0
    7484:	add	x1, x1, #0x0
    7488:	add	x0, x0, #0x0
    748c:	mov	w2, #0xcd2                 	// #3282
    7490:	b	7350 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0xc0>
    7494:	mov	w1, #0x1                   	// #1
    7498:	mov	x0, x27
    749c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    74a0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    74a4:	mov	x21, x0
    74a8:	b	7414 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x184>

00000000000074ac <_ZN4llvm11Interpreter19visitIndirectBrInstERNS_14IndirectBrInstE>:
    74ac:	stp	x29, x30, [sp, #-96]!
    74b0:	mov	x29, sp
    74b4:	stp	x19, x20, [sp, #16]
    74b8:	mov	x19, x0
    74bc:	mov	x0, x1
    74c0:	ldr	w1, [x1, #20]
    74c4:	stp	x21, x22, [sp, #32]
    74c8:	tst	x1, #0xfffffff
    74cc:	ldr	x20, [x19, #704]
    74d0:	b.ne	74f4 <_ZN4llvm11Interpreter19visitIndirectBrInstERNS_14IndirectBrInstE+0x48>  // b.any
    74d4:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    74d8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    74dc:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    74e0:	add	x3, x3, #0x0
    74e4:	add	x1, x1, #0x0
    74e8:	add	x0, x0, #0x0
    74ec:	mov	w2, #0xe45                 	// #3653
    74f0:	bl	0 <__assert_fail>
    74f4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    74f8:	add	x21, sp, #0x30
    74fc:	ldr	x0, [x0]
    7500:	sub	x20, x20, #0x80
    7504:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7508:	mov	x1, x0
    750c:	mov	x8, x21
    7510:	mov	x2, x20
    7514:	mov	x0, x19
    7518:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    751c:	ldr	x22, [sp, #48]
    7520:	mov	x0, x21
    7524:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7528:	mov	x2, x20
    752c:	mov	x1, x22
    7530:	mov	x0, x19
    7534:	bl	6b3c <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE>
    7538:	ldp	x19, x20, [sp, #16]
    753c:	ldp	x21, x22, [sp, #32]
    7540:	ldp	x29, x30, [sp], #96
    7544:	ret

0000000000007548 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE>:
    7548:	stp	x29, x30, [sp, #-192]!
    754c:	mov	x29, sp
    7550:	stp	x21, x22, [sp, #32]
    7554:	mov	x21, x0
    7558:	mov	x22, x1
    755c:	stp	x23, x24, [sp, #48]
    7560:	ldr	x24, [x0, #704]
    7564:	stp	x19, x20, [sp, #16]
    7568:	add	x19, sp, #0x90
    756c:	ldr	x0, [x1]
    7570:	stp	x25, x26, [sp, #64]
    7574:	sub	x24, x24, #0x80
    7578:	stp	x27, x28, [sp, #80]
    757c:	mov	w28, #0x1                   	// #1
    7580:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7584:	mov	w1, #0x0                   	// #0
    7588:	ldr	x27, [x0, #24]
    758c:	mov	x0, x22
    7590:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7594:	mov	x1, x0
    7598:	mov	x8, x19
    759c:	mov	x2, x24
    75a0:	mov	x0, x21
    75a4:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    75a8:	add	x0, x19, #0x8
    75ac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    75b0:	mov	x25, x0
    75b4:	mov	x0, x19
    75b8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    75bc:	mov	x1, x27
    75c0:	add	x0, x21, #0x58
    75c4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    75c8:	stp	x0, x1, [sp, #144]
    75cc:	mov	x0, x19
    75d0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    75d4:	mul	w23, w25, w0
    75d8:	mov	x26, x0
    75dc:	cmp	w23, #0x0
    75e0:	csel	w23, w23, w28, ne  // ne = any
    75e4:	mov	x0, x23
    75e8:	bl	0 <malloc>
    75ec:	mov	x20, x0
    75f0:	cbnz	x0, 7604 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0xbc>
    75f4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    75f8:	mov	w1, w28
    75fc:	add	x0, x0, #0x0
    7600:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    7604:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    7608:	ldr	x0, [x0]
    760c:	ldrb	w0, [x0]
    7610:	cbz	w0, 76a8 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x160>
    7614:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7618:	add	x0, x0, #0x0
    761c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    7620:	tst	w0, #0xff
    7624:	b.eq	76a8 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x160>  // b.none
    7628:	bl	0 <_ZN4llvm4dbgsEv>
    762c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7630:	add	x1, x1, #0x0
    7634:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7638:	mov	x1, x27
    763c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7640:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7644:	add	x1, x1, #0x0
    7648:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    764c:	mov	w1, w26
    7650:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    7654:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7658:	add	x1, x1, #0x0
    765c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7660:	mov	w1, w25
    7664:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    7668:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    766c:	add	x1, x1, #0x0
    7670:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7674:	mov	x1, x23
    7678:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    767c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7680:	add	x1, x1, #0x0
    7684:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7688:	mov	x1, x20
    768c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    7690:	ldp	x3, x2, [x0, #16]
    7694:	mov	x1, x0
    7698:	cmp	x2, x3
    769c:	b.cc	76f0 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x1a8>  // b.lo, b.ul, b.last
    76a0:	mov	w1, #0xa                   	// #10
    76a4:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    76a8:	mov	w0, #0x1                   	// #1
    76ac:	add	x23, sp, #0x60
    76b0:	stp	x20, xzr, [sp, #96]
    76b4:	str	w0, [sp, #112]
    76b8:	add	x0, x23, #0x8
    76bc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    76c0:	stp	xzr, xzr, [sp, #120]
    76c4:	ldr	x0, [sp, #96]
    76c8:	str	xzr, [sp, #136]
    76cc:	cbnz	x0, 7704 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x1bc>
    76d0:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    76d4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    76d8:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    76dc:	add	x3, x3, #0x0
    76e0:	add	x1, x1, #0x0
    76e4:	add	x0, x0, #0x0
    76e8:	mov	w2, #0x40d                 	// #1037
    76ec:	bl	0 <__assert_fail>
    76f0:	add	x0, x2, #0x1
    76f4:	str	x0, [x1, #24]
    76f8:	mov	w0, #0xa                   	// #10
    76fc:	strb	w0, [x2]
    7700:	b	76a8 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x160>
    7704:	mov	x1, x23
    7708:	mov	x0, x19
    770c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7710:	mov	x2, x24
    7714:	mov	x1, x19
    7718:	mov	x0, x22
    771c:	bl	398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    7720:	mov	x0, x19
    7724:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7728:	ldrb	w0, [x22, #16]
    772c:	cmp	w0, #0x37
    7730:	b.ne	775c <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x214>  // b.any
    7734:	ldr	x2, [x21, #704]
    7738:	str	x20, [sp, #144]
    773c:	sub	x0, x2, #0x18
    7740:	ldp	x1, x3, [x2, #-16]
    7744:	cmp	x1, x3
    7748:	b.eq	7780 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x238>  // b.none
    774c:	str	x20, [x1]
    7750:	ldur	x0, [x2, #-16]
    7754:	add	x0, x0, #0x8
    7758:	stur	x0, [x2, #-16]
    775c:	mov	x0, x23
    7760:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7764:	ldp	x19, x20, [sp, #16]
    7768:	ldp	x21, x22, [sp, #32]
    776c:	ldp	x23, x24, [sp, #48]
    7770:	ldp	x25, x26, [sp, #64]
    7774:	ldp	x27, x28, [sp, #80]
    7778:	ldp	x29, x30, [sp], #192
    777c:	ret
    7780:	mov	x2, x19
    7784:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7788:	b	775c <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x214>

000000000000778c <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE>:
    778c:	stp	x29, x30, [sp, #-176]!
    7790:	mov	x29, sp
    7794:	stp	x21, x22, [sp, #32]
    7798:	mov	x22, x0
    779c:	ldr	x0, [x1]
    77a0:	stp	x19, x20, [sp, #16]
    77a4:	stp	x23, x24, [sp, #48]
    77a8:	ldrb	w0, [x0, #8]
    77ac:	stp	x25, x26, [sp, #64]
    77b0:	cmp	w0, #0xf
    77b4:	stp	x27, x28, [sp, #80]
    77b8:	str	x3, [sp, #96]
    77bc:	b.ne	784c <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0xc0>  // b.any
    77c0:	add	x26, sp, #0x80
    77c4:	mov	x21, x8
    77c8:	mov	x23, x1
    77cc:	mov	x19, x2
    77d0:	mov	x24, x4
    77d4:	add	x27, x22, #0x58
    77d8:	add	x28, x26, #0x8
    77dc:	add	x0, sp, #0x70
    77e0:	mov	x20, #0x0                   	// #0
    77e4:	str	x0, [sp, #104]
    77e8:	ldr	x0, [sp, #96]
    77ec:	ldr	x25, [x19]
    77f0:	ldr	x0, [x0]
    77f4:	cmp	x0, x25
    77f8:	b.eq	7a20 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x294>  // b.none
    77fc:	ldr	x0, [x19, #8]
    7800:	tbnz	w0, #2, 791c <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x190>
    7804:	add	x0, x19, #0x8
    7808:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    780c:	mov	x1, x0
    7810:	cbz	x0, 791c <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x190>
    7814:	mov	x0, x27
    7818:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
    781c:	mov	x25, x0
    7820:	ldr	x0, [x19]
    7824:	ldr	x0, [x0]
    7828:	cbnz	x0, 786c <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0xe0>
    782c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7830:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7834:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7838:	add	x3, x3, #0x0
    783c:	add	x1, x1, #0x0
    7840:	add	x0, x0, #0x0
    7844:	mov	w2, #0x69                  	// #105
    7848:	b	7868 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0xdc>
    784c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7850:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7854:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7858:	add	x3, x3, #0x0
    785c:	add	x1, x1, #0x0
    7860:	add	x0, x0, #0x0
    7864:	mov	w2, #0x419                 	// #1049
    7868:	bl	0 <__assert_fail>
    786c:	ldrb	w2, [x0, #16]
    7870:	cmp	w2, #0xd
    7874:	b.eq	7898 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x10c>  // b.none
    7878:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    787c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7880:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7884:	add	x3, x3, #0x0
    7888:	add	x1, x1, #0x0
    788c:	add	x0, x0, #0x0
    7890:	mov	w2, #0x108                 	// #264
    7894:	b	7868 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0xdc>
    7898:	add	x0, x0, #0x18
    789c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    78a0:	ldr	w2, [x25, #12]
    78a4:	ubfx	x2, x2, #0, #31
    78a8:	cmp	w0, w2
    78ac:	b.cc	78d0 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x144>  // b.lo, b.ul, b.last
    78b0:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    78b4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    78b8:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    78bc:	add	x3, x3, #0x0
    78c0:	add	x1, x1, #0x0
    78c4:	add	x0, x0, #0x0
    78c8:	mov	w2, #0x260                 	// #608
    78cc:	b	7868 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0xdc>
    78d0:	add	x0, x25, w0, uxtw #3
    78d4:	ldr	x0, [x0, #16]
    78d8:	add	x20, x20, x0
    78dc:	mov	x0, x19
    78e0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    78e4:	mov	x25, x0
    78e8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    78ec:	tst	w0, #0xff
    78f0:	b.eq	79cc <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x240>  // b.none
    78f4:	cbz	x25, 79cc <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x240>
    78f8:	ldr	x1, [x25, #24]
    78fc:	add	x0, x19, #0x8
    7900:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7904:	ldr	x0, [x25, #32]
    7908:	str	x0, [x19, #16]
    790c:	ldr	x0, [x19]
    7910:	add	x0, x0, #0x18
    7914:	str	x0, [x19]
    7918:	b	77e8 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x5c>
    791c:	ldr	x1, [x25]
    7920:	mov	x8, x26
    7924:	mov	x2, x24
    7928:	mov	x0, x22
    792c:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    7930:	ldr	x0, [x19]
    7934:	ldr	x0, [x0]
    7938:	ldr	x0, [x0]
    793c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7940:	ldr	w0, [x0, #8]
    7944:	lsr	w0, w0, #8
    7948:	cmp	w0, #0x20
    794c:	b.ne	7994 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x208>  // b.any
    7950:	mov	x0, x28
    7954:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7958:	sxtw	x25, w0
    795c:	mov	x0, x19
    7960:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7964:	mov	x1, x0
    7968:	mov	x0, x27
    796c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7970:	mul	x0, x25, x0
    7974:	str	x0, [sp, #112]
    7978:	ldr	x0, [sp, #104]
    797c:	strb	w1, [sp, #120]
    7980:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7984:	add	x20, x20, x0
    7988:	mov	x0, x26
    798c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7990:	b	78dc <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x150>
    7994:	cmp	w0, #0x40
    7998:	b.eq	79bc <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x230>  // b.none
    799c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    79a0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    79a4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    79a8:	add	x3, x3, #0x0
    79ac:	add	x1, x1, #0x0
    79b0:	add	x0, x0, #0x0
    79b4:	mov	w2, #0x430                 	// #1072
    79b8:	b	7868 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0xdc>
    79bc:	mov	x0, x28
    79c0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    79c4:	mov	x25, x0
    79c8:	b	795c <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x1d0>
    79cc:	mov	x0, x25
    79d0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    79d4:	tst	w0, #0xff
    79d8:	b.eq	7a0c <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x280>  // b.none
    79dc:	mov	x0, x25
    79e0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    79e4:	tst	x0, #0x7
    79e8:	b.eq	7a10 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x284>  // b.none
    79ec:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    79f0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    79f4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    79f8:	add	x3, x3, #0x0
    79fc:	add	x1, x1, #0x0
    7a00:	add	x0, x0, #0x0
    7a04:	mov	w2, #0xb2                  	// #178
    7a08:	b	7868 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0xdc>
    7a0c:	mov	x0, #0x0                   	// #0
    7a10:	mov	x1, #0x0                   	// #0
    7a14:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7a18:	str	x0, [x19, #8]
    7a1c:	b	790c <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x180>
    7a20:	mov	x0, x21
    7a24:	add	x19, sp, #0x80
    7a28:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7a2c:	mov	x8, x19
    7a30:	mov	x2, x24
    7a34:	mov	x1, x23
    7a38:	mov	x0, x22
    7a3c:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    7a40:	ldr	x0, [sp, #128]
    7a44:	add	x0, x0, x20
    7a48:	str	x0, [x21]
    7a4c:	mov	x0, x19
    7a50:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7a54:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    7a58:	ldr	x0, [x0]
    7a5c:	ldrb	w0, [x0]
    7a60:	cbz	w0, 7a9c <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x310>
    7a64:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7a68:	add	x0, x0, #0x0
    7a6c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    7a70:	tst	w0, #0xff
    7a74:	b.eq	7a9c <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x310>  // b.none
    7a78:	bl	0 <_ZN4llvm4dbgsEv>
    7a7c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7a80:	add	x1, x1, #0x0
    7a84:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7a88:	mov	x1, x20
    7a8c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    7a90:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7a94:	add	x1, x1, #0x0
    7a98:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7a9c:	mov	x0, x21
    7aa0:	ldp	x19, x20, [sp, #16]
    7aa4:	ldp	x21, x22, [sp, #32]
    7aa8:	ldp	x23, x24, [sp, #48]
    7aac:	ldp	x25, x26, [sp, #64]
    7ab0:	ldp	x27, x28, [sp, #80]
    7ab4:	ldp	x29, x30, [sp], #176
    7ab8:	ret

0000000000007abc <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE>:
    7abc:	stp	x29, x30, [sp, #-240]!
    7ac0:	mov	x29, sp
    7ac4:	stp	x19, x20, [sp, #16]
    7ac8:	mov	x19, x1
    7acc:	ldr	w1, [x1, #20]
    7ad0:	stp	x21, x22, [sp, #32]
    7ad4:	stp	x23, x24, [sp, #48]
    7ad8:	ubfx	x1, x1, #0, #28
    7adc:	stp	x25, x26, [sp, #64]
    7ae0:	ldr	x21, [x0, #704]
    7ae4:	cbnz	w1, 7b08 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x4c>
    7ae8:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7aec:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7af0:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7af4:	add	x3, x3, #0x0
    7af8:	add	x1, x1, #0x0
    7afc:	add	x0, x0, #0x0
    7b00:	mov	w2, #0x47c                 	// #1148
    7b04:	bl	0 <__assert_fail>
    7b08:	mov	w22, #0x18                  	// #24
    7b0c:	mov	x24, x0
    7b10:	umsubl	x1, w1, w22, x19
    7b14:	ldr	x0, [x1]
    7b18:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7b1c:	mov	x23, x0
    7b20:	mov	x0, x19
    7b24:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7b28:	tst	w0, #0xff
    7b2c:	b.ne	7b50 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x94>  // b.any
    7b30:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7b34:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7b38:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7b3c:	add	x3, x3, #0x0
    7b40:	add	x1, x1, #0x0
    7b44:	add	x0, x0, #0x0
    7b48:	mov	w2, #0x101                 	// #257
    7b4c:	b	7b04 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x48>
    7b50:	mov	x0, x19
    7b54:	bl	0 <_ZNK4llvm11GEPOperator20getSourceElementTypeEv>
    7b58:	mov	x25, x0
    7b5c:	mov	x0, x19
    7b60:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7b64:	mov	x26, #0xffffffffffffffff    	// #-1
    7b68:	mov	x1, x25
    7b6c:	mov	x20, x0
    7b70:	add	x0, sp, #0x98
    7b74:	stp	xzr, x26, [sp, #152]
    7b78:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7b7c:	add	x20, x20, #0x18
    7b80:	mov	x0, x19
    7b84:	str	x20, [sp, #144]
    7b88:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7b8c:	ldr	w1, [x19, #20]
    7b90:	add	x20, sp, #0xc0
    7b94:	sub	x21, x21, #0x80
    7b98:	mov	x8, x20
    7b9c:	mov	x4, x21
    7ba0:	add	x3, sp, #0x50
    7ba4:	ubfx	x1, x1, #0, #28
    7ba8:	add	x2, sp, #0x70
    7bac:	str	x26, [sp, #96]
    7bb0:	umaddl	x1, w1, w22, x0
    7bb4:	stp	x1, xzr, [sp, #168]
    7bb8:	ldp	x0, x1, [sp, #144]
    7bbc:	stp	x0, x1, [sp, #112]
    7bc0:	ldr	x0, [sp, #160]
    7bc4:	str	x0, [sp, #128]
    7bc8:	ldp	x0, x1, [sp, #168]
    7bcc:	stp	x0, x1, [sp, #80]
    7bd0:	mov	x1, x23
    7bd4:	mov	x0, x24
    7bd8:	bl	778c <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE>
    7bdc:	mov	x2, x21
    7be0:	mov	x1, x20
    7be4:	mov	x0, x19
    7be8:	bl	398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    7bec:	mov	x0, x20
    7bf0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7bf4:	ldp	x19, x20, [sp, #16]
    7bf8:	ldp	x21, x22, [sp, #32]
    7bfc:	ldp	x23, x24, [sp, #48]
    7c00:	ldp	x25, x26, [sp, #64]
    7c04:	ldp	x29, x30, [sp], #240
    7c08:	ret

0000000000007c0c <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE>:
    7c0c:	stp	x29, x30, [sp, #-208]!
    7c10:	mov	x29, sp
    7c14:	stp	x21, x22, [sp, #32]
    7c18:	add	x21, sp, #0x70
    7c1c:	ldr	x22, [x0, #704]
    7c20:	stp	x19, x20, [sp, #16]
    7c24:	mov	x19, x1
    7c28:	mov	x20, x0
    7c2c:	sub	x22, x22, #0x80
    7c30:	mov	w1, #0x0                   	// #0
    7c34:	mov	x0, x19
    7c38:	stp	x23, x24, [sp, #48]
    7c3c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7c40:	add	x23, sp, #0x40
    7c44:	mov	x8, x23
    7c48:	mov	x1, x0
    7c4c:	mov	x2, x22
    7c50:	mov	x0, x20
    7c54:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    7c58:	mov	x0, x21
    7c5c:	ldr	x24, [sp, #64]
    7c60:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7c64:	ldr	x3, [x19]
    7c68:	mov	x2, x24
    7c6c:	mov	x0, x20
    7c70:	mov	x1, x21
    7c74:	add	x20, sp, #0xa0
    7c78:	bl	0 <_ZN4llvm15ExecutionEngine19LoadValueFromMemoryERNS_12GenericValueEPS1_PNS_4TypeE>
    7c7c:	mov	x1, x21
    7c80:	mov	x0, x20
    7c84:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7c88:	mov	x2, x22
    7c8c:	mov	x1, x20
    7c90:	mov	x0, x19
    7c94:	bl	398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    7c98:	mov	x0, x20
    7c9c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7ca0:	ldrb	w0, [x19, #18]
    7ca4:	tbz	w0, #0, 7cd4 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0xc8>
    7ca8:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7cac:	ldrb	w0, [x0]
    7cb0:	cbz	w0, 7cd4 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0xc8>
    7cb4:	bl	0 <_ZN4llvm4dbgsEv>
    7cb8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7cbc:	add	x1, x1, #0x0
    7cc0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7cc4:	mov	x1, x0
    7cc8:	mov	w2, #0x0                   	// #0
    7ccc:	mov	x0, x19
    7cd0:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    7cd4:	mov	x0, x21
    7cd8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7cdc:	mov	x0, x23
    7ce0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7ce4:	ldp	x19, x20, [sp, #16]
    7ce8:	ldp	x21, x22, [sp, #32]
    7cec:	ldp	x23, x24, [sp, #48]
    7cf0:	ldp	x29, x30, [sp], #208
    7cf4:	ret

0000000000007cf8 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE>:
    7cf8:	stp	x29, x30, [sp, #-160]!
    7cfc:	mov	x29, sp
    7d00:	stp	x19, x20, [sp, #16]
    7d04:	mov	x20, x0
    7d08:	mov	x19, x1
    7d0c:	stp	x21, x22, [sp, #32]
    7d10:	add	x22, sp, #0x40
    7d14:	ldr	x21, [x0, #704]
    7d18:	ldur	x0, [x1, #-48]
    7d1c:	sub	x21, x21, #0x80
    7d20:	str	x23, [sp, #48]
    7d24:	add	x23, sp, #0x70
    7d28:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7d2c:	mov	x1, x0
    7d30:	mov	x8, x22
    7d34:	mov	x2, x21
    7d38:	mov	x0, x20
    7d3c:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    7d40:	ldur	x0, [x19, #-24]
    7d44:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7d48:	mov	x1, x0
    7d4c:	mov	x8, x23
    7d50:	mov	x2, x21
    7d54:	mov	x0, x20
    7d58:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    7d5c:	ldur	x0, [x19, #-48]
    7d60:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7d64:	ldr	x3, [x0]
    7d68:	mov	x1, x22
    7d6c:	ldr	x2, [sp, #112]
    7d70:	mov	x0, x20
    7d74:	bl	0 <_ZN4llvm15ExecutionEngine18StoreValueToMemoryERKNS_12GenericValueEPS1_PNS_4TypeE>
    7d78:	ldrb	w0, [x19, #18]
    7d7c:	tbz	w0, #0, 7dac <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0xb4>
    7d80:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7d84:	ldrb	w0, [x0]
    7d88:	cbz	w0, 7dac <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0xb4>
    7d8c:	bl	0 <_ZN4llvm4dbgsEv>
    7d90:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7d94:	add	x1, x1, #0x0
    7d98:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7d9c:	mov	x1, x0
    7da0:	mov	w2, #0x0                   	// #0
    7da4:	mov	x0, x19
    7da8:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    7dac:	mov	x0, x23
    7db0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7db4:	mov	x0, x22
    7db8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7dbc:	ldp	x19, x20, [sp, #16]
    7dc0:	ldp	x21, x22, [sp, #32]
    7dc4:	ldr	x23, [sp, #48]
    7dc8:	ldp	x29, x30, [sp], #160
    7dcc:	ret

0000000000007dd0 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE>:
    7dd0:	stp	x29, x30, [sp, #-368]!
    7dd4:	mov	x29, sp
    7dd8:	stp	x19, x20, [sp, #16]
    7ddc:	mov	x19, x0
    7de0:	mov	x20, x1
    7de4:	stp	x21, x22, [sp, #32]
    7de8:	add	x21, sp, #0x110
    7dec:	ldr	x22, [x0, #704]
    7df0:	stp	x23, x24, [sp, #48]
    7df4:	ldur	x0, [x1, #-48]
    7df8:	sub	x22, x22, #0x80
    7dfc:	stp	x25, x26, [sp, #64]
    7e00:	add	x25, sp, #0xb0
    7e04:	add	x26, sp, #0xe0
    7e08:	stp	x27, x28, [sp, #80]
    7e0c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7e10:	mov	x8, x25
    7e14:	mov	x1, x0
    7e18:	mov	x2, x22
    7e1c:	mov	x0, x19
    7e20:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    7e24:	ldur	x0, [x20, #-24]
    7e28:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7e2c:	mov	x1, x0
    7e30:	mov	x8, x26
    7e34:	mov	x2, x22
    7e38:	mov	x0, x19
    7e3c:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    7e40:	mov	x0, x21
    7e44:	add	x19, sp, #0x140
    7e48:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7e4c:	ldr	x0, [x20]
    7e50:	ldrb	w0, [x0, #8]
    7e54:	cmp	w0, #0x10
    7e58:	b.ne	7fa0 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x1d0>  // b.any
    7e5c:	ldp	x1, x0, [sp, #200]
    7e60:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    7e64:	ldr	x3, [sp, #248]
    7e68:	movk	x2, #0xaaab
    7e6c:	mov	x28, #0x0                   	// #0
    7e70:	sub	x0, x0, x1
    7e74:	ldr	x1, [sp, #256]
    7e78:	asr	x0, x0, #4
    7e7c:	sub	x1, x1, x3
    7e80:	mul	x0, x0, x2
    7e84:	asr	x1, x1, #4
    7e88:	mov	w4, w0
    7e8c:	mul	x1, x1, x2
    7e90:	cmp	x1, w0, uxtw
    7e94:	b.ne	7f80 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x1b0>  // b.any
    7e98:	add	x23, sp, #0x80
    7e9c:	add	x27, sp, #0x90
    7ea0:	add	x24, sp, #0xa0
    7ea4:	add	x0, x19, #0x8
    7ea8:	str	x0, [sp, #96]
    7eac:	str	w4, [sp, #124]
    7eb0:	cmp	w4, w28
    7eb4:	b.ls	8018 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x248>  // b.plast
    7eb8:	mov	x0, x19
    7ebc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7ec0:	mov	x0, #0x30                  	// #48
    7ec4:	mul	x5, x28, x0
    7ec8:	add	x28, x28, #0x1
    7ecc:	ldr	x0, [sp, #248]
    7ed0:	str	x5, [sp, #112]
    7ed4:	add	x0, x0, x5
    7ed8:	add	x0, x0, #0x8
    7edc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7ee0:	ldr	x5, [sp, #112]
    7ee4:	mov	x3, x0
    7ee8:	ldr	x1, [sp, #200]
    7eec:	mov	x0, x23
    7ef0:	str	x3, [sp, #104]
    7ef4:	add	x1, x1, x5
    7ef8:	add	x1, x1, #0x8
    7efc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7f00:	mov	x1, x23
    7f04:	mov	x0, x27
    7f08:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7f0c:	ldr	x3, [sp, #104]
    7f10:	mov	x1, x27
    7f14:	mov	x0, x3
    7f18:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7f1c:	mov	w3, w0
    7f20:	mov	x1, x23
    7f24:	mov	x0, x24
    7f28:	str	w3, [sp, #104]
    7f2c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7f30:	ldr	w3, [sp, #104]
    7f34:	mov	x0, x24
    7f38:	mov	w1, w3
    7f3c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7f40:	ldr	x0, [sp, #96]
    7f44:	mov	x1, x24
    7f48:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7f4c:	mov	x0, x24
    7f50:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7f54:	mov	x0, x27
    7f58:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7f5c:	mov	x1, x19
    7f60:	add	x0, x21, #0x18
    7f64:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7f68:	mov	x0, x23
    7f6c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7f70:	mov	x0, x19
    7f74:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7f78:	ldr	w4, [sp, #124]
    7f7c:	b	7eac <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0xdc>
    7f80:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7f84:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7f88:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7f8c:	add	x3, x3, #0x0
    7f90:	add	x1, x1, #0x0
    7f94:	add	x0, x0, #0x0
    7f98:	mov	w2, #0x4ae                 	// #1198
    7f9c:	bl	0 <__assert_fail>
    7fa0:	add	x23, sp, #0x90
    7fa4:	add	x0, x26, #0x8
    7fa8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7fac:	add	x24, sp, #0xa0
    7fb0:	mov	x27, x0
    7fb4:	add	x1, x25, #0x8
    7fb8:	mov	x0, x23
    7fbc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7fc0:	mov	x1, x23
    7fc4:	mov	x0, x24
    7fc8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7fcc:	mov	x1, x24
    7fd0:	mov	x0, x27
    7fd4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7fd8:	mov	w27, w0
    7fdc:	mov	x1, x23
    7fe0:	mov	x0, x19
    7fe4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7fe8:	mov	w1, w27
    7fec:	mov	x0, x19
    7ff0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7ff4:	mov	x1, x19
    7ff8:	add	x0, x21, #0x8
    7ffc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8000:	mov	x0, x19
    8004:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8008:	mov	x0, x24
    800c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8010:	mov	x0, x23
    8014:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8018:	mov	x1, x21
    801c:	mov	x0, x19
    8020:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8024:	mov	x2, x22
    8028:	mov	x1, x19
    802c:	mov	x0, x20
    8030:	bl	398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    8034:	mov	x0, x19
    8038:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    803c:	mov	x0, x21
    8040:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8044:	mov	x0, x26
    8048:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    804c:	mov	x0, x25
    8050:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8054:	ldp	x19, x20, [sp, #16]
    8058:	ldp	x21, x22, [sp, #32]
    805c:	ldp	x23, x24, [sp, #48]
    8060:	ldp	x25, x26, [sp, #64]
    8064:	ldp	x27, x28, [sp, #80]
    8068:	ldp	x29, x30, [sp], #368
    806c:	ret

0000000000008070 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE>:
    8070:	stp	x29, x30, [sp, #-368]!
    8074:	mov	x29, sp
    8078:	stp	x19, x20, [sp, #16]
    807c:	mov	x19, x0
    8080:	mov	x20, x1
    8084:	stp	x21, x22, [sp, #32]
    8088:	add	x21, sp, #0x110
    808c:	ldr	x22, [x0, #704]
    8090:	stp	x23, x24, [sp, #48]
    8094:	ldur	x0, [x1, #-48]
    8098:	sub	x22, x22, #0x80
    809c:	stp	x25, x26, [sp, #64]
    80a0:	add	x25, sp, #0xb0
    80a4:	add	x26, sp, #0xe0
    80a8:	stp	x27, x28, [sp, #80]
    80ac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    80b0:	mov	x8, x25
    80b4:	mov	x1, x0
    80b8:	mov	x2, x22
    80bc:	mov	x0, x19
    80c0:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    80c4:	ldur	x0, [x20, #-24]
    80c8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    80cc:	mov	x1, x0
    80d0:	mov	x8, x26
    80d4:	mov	x2, x22
    80d8:	mov	x0, x19
    80dc:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    80e0:	mov	x0, x21
    80e4:	add	x19, sp, #0x140
    80e8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    80ec:	ldr	x0, [x20]
    80f0:	ldrb	w0, [x0, #8]
    80f4:	cmp	w0, #0x10
    80f8:	b.ne	8240 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x1d0>  // b.any
    80fc:	ldp	x1, x0, [sp, #200]
    8100:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    8104:	ldr	x3, [sp, #248]
    8108:	movk	x2, #0xaaab
    810c:	mov	x28, #0x0                   	// #0
    8110:	sub	x0, x0, x1
    8114:	ldr	x1, [sp, #256]
    8118:	asr	x0, x0, #4
    811c:	sub	x1, x1, x3
    8120:	mul	x0, x0, x2
    8124:	asr	x1, x1, #4
    8128:	mov	w4, w0
    812c:	mul	x1, x1, x2
    8130:	cmp	x1, w0, uxtw
    8134:	b.ne	8220 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x1b0>  // b.any
    8138:	add	x23, sp, #0x80
    813c:	add	x27, sp, #0x90
    8140:	add	x24, sp, #0xa0
    8144:	add	x0, x19, #0x8
    8148:	str	x0, [sp, #96]
    814c:	str	w4, [sp, #124]
    8150:	cmp	w4, w28
    8154:	b.ls	82b8 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x248>  // b.plast
    8158:	mov	x0, x19
    815c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8160:	mov	x0, #0x30                  	// #48
    8164:	mul	x5, x28, x0
    8168:	add	x28, x28, #0x1
    816c:	ldr	x0, [sp, #248]
    8170:	str	x5, [sp, #112]
    8174:	add	x0, x0, x5
    8178:	add	x0, x0, #0x8
    817c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8180:	ldr	x5, [sp, #112]
    8184:	mov	x3, x0
    8188:	ldr	x1, [sp, #200]
    818c:	mov	x0, x23
    8190:	str	x3, [sp, #104]
    8194:	add	x1, x1, x5
    8198:	add	x1, x1, #0x8
    819c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    81a0:	mov	x1, x23
    81a4:	mov	x0, x27
    81a8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    81ac:	ldr	x3, [sp, #104]
    81b0:	mov	x1, x27
    81b4:	mov	x0, x3
    81b8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    81bc:	mov	w3, w0
    81c0:	mov	x1, x23
    81c4:	mov	x0, x24
    81c8:	str	w3, [sp, #104]
    81cc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    81d0:	ldr	w3, [sp, #104]
    81d4:	mov	x0, x24
    81d8:	mov	w1, w3
    81dc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    81e0:	ldr	x0, [sp, #96]
    81e4:	mov	x1, x24
    81e8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    81ec:	mov	x0, x24
    81f0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    81f4:	mov	x0, x27
    81f8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    81fc:	mov	x1, x19
    8200:	add	x0, x21, #0x18
    8204:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8208:	mov	x0, x23
    820c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8210:	mov	x0, x19
    8214:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8218:	ldr	w4, [sp, #124]
    821c:	b	814c <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0xdc>
    8220:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8224:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8228:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    822c:	add	x3, x3, #0x0
    8230:	add	x1, x1, #0x0
    8234:	add	x0, x0, #0x0
    8238:	mov	w2, #0x4c9                 	// #1225
    823c:	bl	0 <__assert_fail>
    8240:	add	x23, sp, #0x90
    8244:	add	x0, x26, #0x8
    8248:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    824c:	add	x24, sp, #0xa0
    8250:	mov	x27, x0
    8254:	add	x1, x25, #0x8
    8258:	mov	x0, x23
    825c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8260:	mov	x1, x23
    8264:	mov	x0, x24
    8268:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    826c:	mov	x1, x24
    8270:	mov	x0, x27
    8274:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8278:	mov	w27, w0
    827c:	mov	x1, x23
    8280:	mov	x0, x19
    8284:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8288:	mov	w1, w27
    828c:	mov	x0, x19
    8290:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8294:	mov	x1, x19
    8298:	add	x0, x21, #0x8
    829c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    82a0:	mov	x0, x19
    82a4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    82a8:	mov	x0, x24
    82ac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    82b0:	mov	x0, x23
    82b4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    82b8:	mov	x1, x21
    82bc:	mov	x0, x19
    82c0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    82c4:	mov	x2, x22
    82c8:	mov	x1, x19
    82cc:	mov	x0, x20
    82d0:	bl	398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    82d4:	mov	x0, x19
    82d8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    82dc:	mov	x0, x21
    82e0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    82e4:	mov	x0, x26
    82e8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    82ec:	mov	x0, x25
    82f0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    82f4:	ldp	x19, x20, [sp, #16]
    82f8:	ldp	x21, x22, [sp, #32]
    82fc:	ldp	x23, x24, [sp, #48]
    8300:	ldp	x25, x26, [sp, #64]
    8304:	ldp	x27, x28, [sp, #80]
    8308:	ldp	x29, x30, [sp], #368
    830c:	ret

0000000000008310 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE>:
    8310:	stp	x29, x30, [sp, #-368]!
    8314:	mov	x29, sp
    8318:	stp	x19, x20, [sp, #16]
    831c:	mov	x19, x0
    8320:	mov	x20, x1
    8324:	stp	x21, x22, [sp, #32]
    8328:	add	x21, sp, #0x110
    832c:	ldr	x22, [x0, #704]
    8330:	stp	x23, x24, [sp, #48]
    8334:	ldur	x0, [x1, #-48]
    8338:	sub	x22, x22, #0x80
    833c:	stp	x25, x26, [sp, #64]
    8340:	add	x25, sp, #0xb0
    8344:	add	x26, sp, #0xe0
    8348:	stp	x27, x28, [sp, #80]
    834c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8350:	mov	x8, x25
    8354:	mov	x1, x0
    8358:	mov	x2, x22
    835c:	mov	x0, x19
    8360:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    8364:	ldur	x0, [x20, #-24]
    8368:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    836c:	mov	x1, x0
    8370:	mov	x8, x26
    8374:	mov	x2, x22
    8378:	mov	x0, x19
    837c:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    8380:	mov	x0, x21
    8384:	add	x19, sp, #0x140
    8388:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    838c:	ldr	x0, [x20]
    8390:	ldrb	w0, [x0, #8]
    8394:	cmp	w0, #0x10
    8398:	b.ne	84d4 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x1c4>  // b.any
    839c:	ldp	x1, x0, [sp, #200]
    83a0:	mov	w28, #0x0                   	// #0
    83a4:	ldr	x2, [sp, #248]
    83a8:	sub	x0, x0, x1
    83ac:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    83b0:	movk	x1, #0xaaab
    83b4:	asr	x4, x0, #4
    83b8:	mul	x4, x4, x1
    83bc:	ldr	x1, [sp, #256]
    83c0:	sub	x1, x1, x2
    83c4:	cmp	x0, x1
    83c8:	b.ne	84b4 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x1a4>  // b.any
    83cc:	add	x23, sp, #0x80
    83d0:	add	x27, sp, #0x90
    83d4:	add	x24, sp, #0xa0
    83d8:	add	x0, x19, #0x8
    83dc:	str	x0, [sp, #96]
    83e0:	str	x4, [sp, #120]
    83e4:	cmp	x4, w28, uxtw
    83e8:	b.ls	854c <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x23c>  // b.plast
    83ec:	mov	x0, x19
    83f0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    83f4:	mov	w0, #0x30                  	// #48
    83f8:	umull	x5, w28, w0
    83fc:	add	w28, w28, #0x1
    8400:	ldr	x0, [sp, #248]
    8404:	str	x5, [sp, #112]
    8408:	add	x0, x0, x5
    840c:	add	x0, x0, #0x8
    8410:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8414:	ldr	x5, [sp, #112]
    8418:	mov	x3, x0
    841c:	ldr	x1, [sp, #200]
    8420:	mov	x0, x23
    8424:	str	x3, [sp, #104]
    8428:	add	x1, x1, x5
    842c:	add	x1, x1, #0x8
    8430:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8434:	mov	x1, x23
    8438:	mov	x0, x27
    843c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8440:	ldr	x3, [sp, #104]
    8444:	mov	x1, x27
    8448:	mov	x0, x3
    844c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8450:	mov	w3, w0
    8454:	mov	x1, x23
    8458:	mov	x0, x24
    845c:	str	w3, [sp, #104]
    8460:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8464:	ldr	w3, [sp, #104]
    8468:	mov	x0, x24
    846c:	mov	w1, w3
    8470:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8474:	ldr	x0, [sp, #96]
    8478:	mov	x1, x24
    847c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8480:	mov	x0, x24
    8484:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8488:	mov	x0, x27
    848c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8490:	mov	x1, x19
    8494:	add	x0, x21, #0x18
    8498:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    849c:	mov	x0, x23
    84a0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    84a4:	mov	x0, x19
    84a8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    84ac:	ldr	x4, [sp, #120]
    84b0:	b	83e0 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0xd0>
    84b4:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    84b8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    84bc:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    84c0:	add	x3, x3, #0x0
    84c4:	add	x1, x1, #0x0
    84c8:	add	x0, x0, #0x0
    84cc:	mov	w2, #0x4e4                 	// #1252
    84d0:	bl	0 <__assert_fail>
    84d4:	add	x23, sp, #0x90
    84d8:	add	x0, x26, #0x8
    84dc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    84e0:	add	x24, sp, #0xa0
    84e4:	mov	x27, x0
    84e8:	add	x1, x25, #0x8
    84ec:	mov	x0, x23
    84f0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    84f4:	mov	x1, x23
    84f8:	mov	x0, x24
    84fc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8500:	mov	x1, x24
    8504:	mov	x0, x27
    8508:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    850c:	mov	w27, w0
    8510:	mov	x1, x23
    8514:	mov	x0, x19
    8518:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    851c:	mov	w1, w27
    8520:	mov	x0, x19
    8524:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8528:	mov	x1, x19
    852c:	add	x0, x21, #0x8
    8530:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8534:	mov	x0, x19
    8538:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    853c:	mov	x0, x24
    8540:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8544:	mov	x0, x23
    8548:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    854c:	mov	x1, x21
    8550:	mov	x0, x19
    8554:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8558:	mov	x2, x22
    855c:	mov	x1, x19
    8560:	mov	x0, x20
    8564:	bl	398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    8568:	mov	x0, x19
    856c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8570:	mov	x0, x21
    8574:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8578:	mov	x0, x26
    857c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8580:	mov	x0, x25
    8584:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8588:	ldp	x19, x20, [sp, #16]
    858c:	ldp	x21, x22, [sp, #32]
    8590:	ldp	x23, x24, [sp, #48]
    8594:	ldp	x25, x26, [sp, #64]
    8598:	ldp	x27, x28, [sp, #80]
    859c:	ldp	x29, x30, [sp], #368
    85a0:	ret

00000000000085a4 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    85a4:	stp	x29, x30, [sp, #-144]!
    85a8:	mov	x29, sp
    85ac:	stp	x21, x22, [sp, #32]
    85b0:	mov	x22, x1
    85b4:	add	x21, sp, #0x60
    85b8:	stp	x19, x20, [sp, #16]
    85bc:	mov	x20, x2
    85c0:	mov	x19, x8
    85c4:	stp	x23, x24, [sp, #48]
    85c8:	mov	x24, x3
    85cc:	mov	x23, x0
    85d0:	mov	x0, x8
    85d4:	stp	x25, x26, [sp, #64]
    85d8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    85dc:	mov	x0, x23
    85e0:	mov	x8, x21
    85e4:	mov	x2, x24
    85e8:	mov	x1, x22
    85ec:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    85f0:	ldr	x0, [x22]
    85f4:	ldrb	w0, [x0, #8]
    85f8:	cmp	w0, #0x10
    85fc:	mov	x0, x20
    8600:	b.ne	8694 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xf0>  // b.any
    8604:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8608:	add	x24, sp, #0x50
    860c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8610:	ldr	w22, [x0, #8]
    8614:	ldp	x0, x1, [sp, #120]
    8618:	mov	x23, #0x0                   	// #0
    861c:	lsr	w22, w22, #8
    8620:	mov	x26, #0x30                  	// #48
    8624:	sub	x1, x1, x0
    8628:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    862c:	movk	x0, #0xaaab
    8630:	asr	x1, x1, #4
    8634:	mul	x1, x1, x0
    8638:	add	x0, x19, #0x18
    863c:	mov	w25, w1
    8640:	mov	w1, w1
    8644:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8648:	cmp	w25, w23
    864c:	b.ls	86c4 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x120>  // b.plast
    8650:	ldr	x0, [sp, #120]
    8654:	mul	x1, x23, x26
    8658:	ldr	x20, [x19, #24]
    865c:	add	x0, x0, x1
    8660:	mov	x8, x24
    8664:	add	x0, x0, #0x8
    8668:	add	x20, x20, x1
    866c:	mov	w1, w22
    8670:	bl	0 <_ZNK4llvm5APInt5truncEj>
    8674:	add	x20, x20, #0x8
    8678:	mov	x1, x24
    867c:	mov	x0, x20
    8680:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8684:	add	x23, x23, #0x1
    8688:	mov	x0, x24
    868c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8690:	b	8648 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa4>
    8694:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8698:	ldr	w1, [x0, #8]
    869c:	add	x20, sp, #0x50
    86a0:	add	x0, x21, #0x8
    86a4:	mov	x8, x20
    86a8:	lsr	w1, w1, #8
    86ac:	bl	0 <_ZNK4llvm5APInt5truncEj>
    86b0:	mov	x1, x20
    86b4:	add	x0, x19, #0x8
    86b8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    86bc:	mov	x0, x20
    86c0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    86c4:	mov	x0, x21
    86c8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    86cc:	mov	x0, x19
    86d0:	ldp	x19, x20, [sp, #16]
    86d4:	ldp	x21, x22, [sp, #32]
    86d8:	ldp	x23, x24, [sp, #48]
    86dc:	ldp	x25, x26, [sp, #64]
    86e0:	ldp	x29, x30, [sp], #144
    86e4:	ret

00000000000086e8 <_ZN4llvm11Interpreter14visitTruncInstERNS_9TruncInstE>:
    86e8:	stp	x29, x30, [sp, #-96]!
    86ec:	mov	x29, sp
    86f0:	stp	x19, x20, [sp, #16]
    86f4:	mov	x19, x1
    86f8:	mov	w1, #0x0                   	// #0
    86fc:	stp	x21, x22, [sp, #32]
    8700:	mov	x21, x0
    8704:	mov	x0, x19
    8708:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    870c:	add	x22, sp, #0x30
    8710:	ldr	x2, [x19]
    8714:	mov	x8, x22
    8718:	ldr	x20, [x21, #704]
    871c:	mov	x1, x0
    8720:	mov	x0, x21
    8724:	sub	x20, x20, #0x80
    8728:	mov	x3, x20
    872c:	bl	85a4 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    8730:	mov	x2, x20
    8734:	mov	x1, x22
    8738:	mov	x0, x19
    873c:	bl	398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    8740:	mov	x0, x22
    8744:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8748:	ldp	x19, x20, [sp, #16]
    874c:	ldp	x21, x22, [sp, #32]
    8750:	ldp	x29, x30, [sp], #96
    8754:	ret

0000000000008758 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    8758:	stp	x29, x30, [sp, #-144]!
    875c:	mov	x29, sp
    8760:	stp	x25, x26, [sp, #64]
    8764:	ldr	x25, [x1]
    8768:	stp	x19, x20, [sp, #16]
    876c:	mov	x20, x2
    8770:	mov	x19, x8
    8774:	stp	x21, x22, [sp, #32]
    8778:	mov	x22, x1
    877c:	add	x21, sp, #0x60
    8780:	stp	x23, x24, [sp, #48]
    8784:	mov	x24, x3
    8788:	mov	x23, x0
    878c:	mov	x0, x8
    8790:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8794:	mov	x0, x23
    8798:	mov	x8, x21
    879c:	mov	x2, x24
    87a0:	mov	x1, x22
    87a4:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    87a8:	ldrb	w0, [x25, #8]
    87ac:	cmp	w0, #0x10
    87b0:	mov	x0, x20
    87b4:	b.ne	8848 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xf0>  // b.any
    87b8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    87bc:	add	x24, sp, #0x50
    87c0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    87c4:	ldr	w22, [x0, #8]
    87c8:	ldp	x0, x1, [sp, #120]
    87cc:	mov	x23, #0x0                   	// #0
    87d0:	lsr	w22, w22, #8
    87d4:	mov	x26, #0x30                  	// #48
    87d8:	sub	x1, x1, x0
    87dc:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    87e0:	movk	x0, #0xaaab
    87e4:	asr	x1, x1, #4
    87e8:	mul	x1, x1, x0
    87ec:	add	x0, x19, #0x18
    87f0:	mov	w25, w1
    87f4:	mov	w1, w1
    87f8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    87fc:	cmp	w25, w23
    8800:	b.ls	8878 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x120>  // b.plast
    8804:	ldr	x0, [sp, #120]
    8808:	mul	x1, x23, x26
    880c:	ldr	x20, [x19, #24]
    8810:	add	x0, x0, x1
    8814:	mov	x8, x24
    8818:	add	x0, x0, #0x8
    881c:	add	x20, x20, x1
    8820:	mov	w1, w22
    8824:	bl	0 <_ZNK4llvm5APInt4sextEj>
    8828:	add	x20, x20, #0x8
    882c:	mov	x1, x24
    8830:	mov	x0, x20
    8834:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8838:	add	x23, x23, #0x1
    883c:	mov	x0, x24
    8840:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8844:	b	87fc <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa4>
    8848:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    884c:	ldr	w1, [x0, #8]
    8850:	add	x20, sp, #0x50
    8854:	add	x0, x21, #0x8
    8858:	mov	x8, x20
    885c:	lsr	w1, w1, #8
    8860:	bl	0 <_ZNK4llvm5APInt4sextEj>
    8864:	mov	x1, x20
    8868:	add	x0, x19, #0x8
    886c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8870:	mov	x0, x20
    8874:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8878:	mov	x0, x21
    887c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8880:	mov	x0, x19
    8884:	ldp	x19, x20, [sp, #16]
    8888:	ldp	x21, x22, [sp, #32]
    888c:	ldp	x23, x24, [sp, #48]
    8890:	ldp	x25, x26, [sp, #64]
    8894:	ldp	x29, x30, [sp], #144
    8898:	ret

000000000000889c <_ZN4llvm11Interpreter13visitSExtInstERNS_8SExtInstE>:
    889c:	stp	x29, x30, [sp, #-96]!
    88a0:	mov	x29, sp
    88a4:	stp	x19, x20, [sp, #16]
    88a8:	mov	x19, x1
    88ac:	mov	w1, #0x0                   	// #0
    88b0:	stp	x21, x22, [sp, #32]
    88b4:	mov	x21, x0
    88b8:	mov	x0, x19
    88bc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    88c0:	add	x22, sp, #0x30
    88c4:	ldr	x2, [x19]
    88c8:	mov	x8, x22
    88cc:	ldr	x20, [x21, #704]
    88d0:	mov	x1, x0
    88d4:	mov	x0, x21
    88d8:	sub	x20, x20, #0x80
    88dc:	mov	x3, x20
    88e0:	bl	8758 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    88e4:	mov	x2, x20
    88e8:	mov	x1, x22
    88ec:	mov	x0, x19
    88f0:	bl	398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    88f4:	mov	x0, x22
    88f8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    88fc:	ldp	x19, x20, [sp, #16]
    8900:	ldp	x21, x22, [sp, #32]
    8904:	ldp	x29, x30, [sp], #96
    8908:	ret

000000000000890c <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    890c:	stp	x29, x30, [sp, #-144]!
    8910:	mov	x29, sp
    8914:	stp	x25, x26, [sp, #64]
    8918:	ldr	x25, [x1]
    891c:	stp	x19, x20, [sp, #16]
    8920:	mov	x20, x2
    8924:	mov	x19, x8
    8928:	stp	x21, x22, [sp, #32]
    892c:	mov	x22, x1
    8930:	add	x21, sp, #0x60
    8934:	stp	x23, x24, [sp, #48]
    8938:	mov	x24, x3
    893c:	mov	x23, x0
    8940:	mov	x0, x8
    8944:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8948:	mov	x0, x23
    894c:	mov	x8, x21
    8950:	mov	x2, x24
    8954:	mov	x1, x22
    8958:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    895c:	ldrb	w0, [x25, #8]
    8960:	cmp	w0, #0x10
    8964:	mov	x0, x20
    8968:	b.ne	89fc <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xf0>  // b.any
    896c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8970:	add	x24, sp, #0x50
    8974:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8978:	ldr	w22, [x0, #8]
    897c:	ldp	x0, x1, [sp, #120]
    8980:	mov	x23, #0x0                   	// #0
    8984:	lsr	w22, w22, #8
    8988:	mov	x26, #0x30                  	// #48
    898c:	sub	x1, x1, x0
    8990:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    8994:	movk	x0, #0xaaab
    8998:	asr	x1, x1, #4
    899c:	mul	x1, x1, x0
    89a0:	add	x0, x19, #0x18
    89a4:	mov	w25, w1
    89a8:	mov	w1, w1
    89ac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    89b0:	cmp	w25, w23
    89b4:	b.ls	8a2c <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x120>  // b.plast
    89b8:	ldr	x0, [sp, #120]
    89bc:	mul	x1, x23, x26
    89c0:	ldr	x20, [x19, #24]
    89c4:	add	x0, x0, x1
    89c8:	mov	x8, x24
    89cc:	add	x0, x0, #0x8
    89d0:	add	x20, x20, x1
    89d4:	mov	w1, w22
    89d8:	bl	0 <_ZNK4llvm5APInt4zextEj>
    89dc:	add	x20, x20, #0x8
    89e0:	mov	x1, x24
    89e4:	mov	x0, x20
    89e8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    89ec:	add	x23, x23, #0x1
    89f0:	mov	x0, x24
    89f4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    89f8:	b	89b0 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa4>
    89fc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8a00:	ldr	w1, [x0, #8]
    8a04:	add	x20, sp, #0x50
    8a08:	add	x0, x21, #0x8
    8a0c:	mov	x8, x20
    8a10:	lsr	w1, w1, #8
    8a14:	bl	0 <_ZNK4llvm5APInt4zextEj>
    8a18:	mov	x1, x20
    8a1c:	add	x0, x19, #0x8
    8a20:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8a24:	mov	x0, x20
    8a28:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8a2c:	mov	x0, x21
    8a30:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8a34:	mov	x0, x19
    8a38:	ldp	x19, x20, [sp, #16]
    8a3c:	ldp	x21, x22, [sp, #32]
    8a40:	ldp	x23, x24, [sp, #48]
    8a44:	ldp	x25, x26, [sp, #64]
    8a48:	ldp	x29, x30, [sp], #144
    8a4c:	ret

0000000000008a50 <_ZN4llvm11Interpreter13visitZExtInstERNS_8ZExtInstE>:
    8a50:	stp	x29, x30, [sp, #-96]!
    8a54:	mov	x29, sp
    8a58:	stp	x19, x20, [sp, #16]
    8a5c:	mov	x19, x1
    8a60:	mov	w1, #0x0                   	// #0
    8a64:	stp	x21, x22, [sp, #32]
    8a68:	mov	x21, x0
    8a6c:	mov	x0, x19
    8a70:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8a74:	add	x22, sp, #0x30
    8a78:	ldr	x2, [x19]
    8a7c:	mov	x8, x22
    8a80:	ldr	x20, [x21, #704]
    8a84:	mov	x1, x0
    8a88:	mov	x0, x21
    8a8c:	sub	x20, x20, #0x80
    8a90:	mov	x3, x20
    8a94:	bl	890c <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    8a98:	mov	x2, x20
    8a9c:	mov	x1, x22
    8aa0:	mov	x0, x19
    8aa4:	bl	398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    8aa8:	mov	x0, x22
    8aac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8ab0:	ldp	x19, x20, [sp, #16]
    8ab4:	ldp	x21, x22, [sp, #32]
    8ab8:	ldp	x29, x30, [sp], #96
    8abc:	ret

0000000000008ac0 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    8ac0:	stp	x29, x30, [sp, #-112]!
    8ac4:	mov	x29, sp
    8ac8:	stp	x21, x22, [sp, #32]
    8acc:	mov	x21, x1
    8ad0:	mov	x22, x0
    8ad4:	mov	x0, x8
    8ad8:	stp	x19, x20, [sp, #16]
    8adc:	mov	x19, x8
    8ae0:	mov	x20, x2
    8ae4:	stp	x23, x24, [sp, #48]
    8ae8:	mov	x24, x3
    8aec:	add	x23, sp, #0x40
    8af0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8af4:	mov	x1, x21
    8af8:	mov	x0, x22
    8afc:	mov	x8, x23
    8b00:	mov	x2, x24
    8b04:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    8b08:	ldr	x0, [x21]
    8b0c:	ldrb	w1, [x0, #8]
    8b10:	cmp	w1, #0x10
    8b14:	b.ne	8bb4 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xf4>  // b.any
    8b18:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8b1c:	ldrb	w0, [x0, #8]
    8b20:	cmp	w0, #0x3
    8b24:	b.ne	8b3c <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x7c>  // b.any
    8b28:	mov	x0, x20
    8b2c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8b30:	ldrb	w0, [x0, #8]
    8b34:	cmp	w0, #0x2
    8b38:	b.eq	8b5c <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x9c>  // b.none
    8b3c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8b40:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8b44:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8b48:	add	x3, x3, #0x0
    8b4c:	add	x1, x1, #0x0
    8b50:	add	x0, x0, #0x0
    8b54:	mov	w2, #0x538                 	// #1336
    8b58:	bl	0 <__assert_fail>
    8b5c:	ldp	x0, x1, [sp, #88]
    8b60:	sub	x1, x1, x0
    8b64:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    8b68:	movk	x0, #0xaaab
    8b6c:	asr	x1, x1, #4
    8b70:	mul	x1, x1, x0
    8b74:	add	x0, x19, #0x18
    8b78:	mov	w20, w1
    8b7c:	mov	w1, w1
    8b80:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8b84:	mov	x0, #0x0                   	// #0
    8b88:	mov	x4, #0x30                  	// #48
    8b8c:	cmp	w20, w0
    8b90:	b.ls	8bf4 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x134>  // b.plast
    8b94:	mul	x1, x0, x4
    8b98:	add	x0, x0, #0x1
    8b9c:	ldr	x3, [sp, #88]
    8ba0:	ldr	x2, [x19, #24]
    8ba4:	ldr	d0, [x3, x1]
    8ba8:	fcvt	s0, d0
    8bac:	str	s0, [x2, x1]
    8bb0:	b	8b8c <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xcc>
    8bb4:	cmp	w1, #0x3
    8bb8:	b.ne	8bc8 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x108>  // b.any
    8bbc:	ldrb	w0, [x20, #8]
    8bc0:	cmp	w0, #0x2
    8bc4:	b.eq	8be8 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x128>  // b.none
    8bc8:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8bcc:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8bd0:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8bd4:	add	x3, x3, #0x0
    8bd8:	add	x1, x1, #0x0
    8bdc:	add	x0, x0, #0x0
    8be0:	mov	w2, #0x542                 	// #1346
    8be4:	b	8b58 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x98>
    8be8:	ldr	d0, [sp, #64]
    8bec:	fcvt	s0, d0
    8bf0:	str	s0, [x19]
    8bf4:	mov	x0, x23
    8bf8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8bfc:	mov	x0, x19
    8c00:	ldp	x19, x20, [sp, #16]
    8c04:	ldp	x21, x22, [sp, #32]
    8c08:	ldp	x23, x24, [sp, #48]
    8c0c:	ldp	x29, x30, [sp], #112
    8c10:	ret

0000000000008c14 <_ZN4llvm11Interpreter16visitFPTruncInstERNS_11FPTruncInstE>:
    8c14:	stp	x29, x30, [sp, #-96]!
    8c18:	mov	x29, sp
    8c1c:	stp	x19, x20, [sp, #16]
    8c20:	mov	x19, x1
    8c24:	mov	w1, #0x0                   	// #0
    8c28:	stp	x21, x22, [sp, #32]
    8c2c:	mov	x21, x0
    8c30:	mov	x0, x19
    8c34:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8c38:	add	x22, sp, #0x30
    8c3c:	ldr	x2, [x19]
    8c40:	mov	x8, x22
    8c44:	ldr	x20, [x21, #704]
    8c48:	mov	x1, x0
    8c4c:	mov	x0, x21
    8c50:	sub	x20, x20, #0x80
    8c54:	mov	x3, x20
    8c58:	bl	8ac0 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    8c5c:	mov	x2, x20
    8c60:	mov	x1, x22
    8c64:	mov	x0, x19
    8c68:	bl	398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    8c6c:	mov	x0, x22
    8c70:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8c74:	ldp	x19, x20, [sp, #16]
    8c78:	ldp	x21, x22, [sp, #32]
    8c7c:	ldp	x29, x30, [sp], #96
    8c80:	ret

0000000000008c84 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    8c84:	stp	x29, x30, [sp, #-112]!
    8c88:	mov	x29, sp
    8c8c:	stp	x21, x22, [sp, #32]
    8c90:	mov	x21, x1
    8c94:	mov	x22, x0
    8c98:	mov	x0, x8
    8c9c:	stp	x19, x20, [sp, #16]
    8ca0:	mov	x19, x8
    8ca4:	mov	x20, x2
    8ca8:	stp	x23, x24, [sp, #48]
    8cac:	mov	x24, x3
    8cb0:	add	x23, sp, #0x40
    8cb4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8cb8:	mov	x1, x21
    8cbc:	mov	x0, x22
    8cc0:	mov	x8, x23
    8cc4:	mov	x2, x24
    8cc8:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    8ccc:	ldr	x0, [x21]
    8cd0:	ldrb	w1, [x0, #8]
    8cd4:	cmp	w1, #0x10
    8cd8:	b.ne	8d78 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xf4>  // b.any
    8cdc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8ce0:	ldrb	w0, [x0, #8]
    8ce4:	cmp	w0, #0x2
    8ce8:	b.ne	8d00 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x7c>  // b.any
    8cec:	mov	x0, x20
    8cf0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8cf4:	ldrb	w0, [x0, #8]
    8cf8:	cmp	w0, #0x3
    8cfc:	b.eq	8d20 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x9c>  // b.none
    8d00:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8d04:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8d08:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8d0c:	add	x3, x3, #0x0
    8d10:	add	x1, x1, #0x0
    8d14:	add	x0, x0, #0x0
    8d18:	mov	w2, #0x54f                 	// #1359
    8d1c:	bl	0 <__assert_fail>
    8d20:	ldp	x0, x1, [sp, #88]
    8d24:	sub	x1, x1, x0
    8d28:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    8d2c:	movk	x0, #0xaaab
    8d30:	asr	x1, x1, #4
    8d34:	mul	x1, x1, x0
    8d38:	add	x0, x19, #0x18
    8d3c:	mov	w20, w1
    8d40:	mov	w1, w1
    8d44:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8d48:	mov	x0, #0x0                   	// #0
    8d4c:	mov	x4, #0x30                  	// #48
    8d50:	cmp	w20, w0
    8d54:	b.ls	8db8 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x134>  // b.plast
    8d58:	mul	x1, x0, x4
    8d5c:	add	x0, x0, #0x1
    8d60:	ldr	x3, [sp, #88]
    8d64:	ldr	x2, [x19, #24]
    8d68:	ldr	s0, [x3, x1]
    8d6c:	fcvt	d0, s0
    8d70:	str	d0, [x2, x1]
    8d74:	b	8d50 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xcc>
    8d78:	cmp	w1, #0x2
    8d7c:	b.ne	8d8c <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x108>  // b.any
    8d80:	ldrb	w0, [x20, #8]
    8d84:	cmp	w0, #0x3
    8d88:	b.eq	8dac <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x128>  // b.none
    8d8c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8d90:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8d94:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8d98:	add	x3, x3, #0x0
    8d9c:	add	x1, x1, #0x0
    8da0:	add	x0, x0, #0x0
    8da4:	mov	w2, #0x558                 	// #1368
    8da8:	b	8d1c <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x98>
    8dac:	ldr	s0, [sp, #64]
    8db0:	fcvt	d0, s0
    8db4:	str	d0, [x19]
    8db8:	mov	x0, x23
    8dbc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8dc0:	mov	x0, x19
    8dc4:	ldp	x19, x20, [sp, #16]
    8dc8:	ldp	x21, x22, [sp, #32]
    8dcc:	ldp	x23, x24, [sp, #48]
    8dd0:	ldp	x29, x30, [sp], #112
    8dd4:	ret

0000000000008dd8 <_ZN4llvm11Interpreter14visitFPExtInstERNS_9FPExtInstE>:
    8dd8:	stp	x29, x30, [sp, #-96]!
    8ddc:	mov	x29, sp
    8de0:	stp	x19, x20, [sp, #16]
    8de4:	mov	x19, x1
    8de8:	mov	w1, #0x0                   	// #0
    8dec:	stp	x21, x22, [sp, #32]
    8df0:	mov	x21, x0
    8df4:	mov	x0, x19
    8df8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8dfc:	add	x22, sp, #0x30
    8e00:	ldr	x2, [x19]
    8e04:	mov	x8, x22
    8e08:	ldr	x20, [x21, #704]
    8e0c:	mov	x1, x0
    8e10:	mov	x0, x21
    8e14:	sub	x20, x20, #0x80
    8e18:	mov	x3, x20
    8e1c:	bl	8c84 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    8e20:	mov	x2, x20
    8e24:	mov	x1, x22
    8e28:	mov	x0, x19
    8e2c:	bl	398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    8e30:	mov	x0, x22
    8e34:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8e38:	ldp	x19, x20, [sp, #16]
    8e3c:	ldp	x21, x22, [sp, #32]
    8e40:	ldp	x29, x30, [sp], #96
    8e44:	ret

0000000000008e48 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    8e48:	stp	x29, x30, [sp, #-144]!
    8e4c:	mov	x29, sp
    8e50:	stp	x23, x24, [sp, #48]
    8e54:	mov	x24, x0
    8e58:	mov	x0, x8
    8e5c:	ldr	x23, [x1]
    8e60:	stp	x19, x20, [sp, #16]
    8e64:	mov	x20, x2
    8e68:	mov	x19, x8
    8e6c:	stp	x21, x22, [sp, #32]
    8e70:	mov	x22, x1
    8e74:	add	x21, sp, #0x60
    8e78:	stp	x25, x26, [sp, #64]
    8e7c:	mov	x25, x3
    8e80:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8e84:	mov	x0, x24
    8e88:	mov	x8, x21
    8e8c:	mov	x2, x25
    8e90:	mov	x1, x22
    8e94:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    8e98:	ldrb	w24, [x23, #8]
    8e9c:	mov	x0, x20
    8ea0:	cmp	w24, #0x10
    8ea4:	b.ne	8fdc <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x194>  // b.any
    8ea8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8eac:	mov	x22, x0
    8eb0:	mov	x0, x23
    8eb4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8eb8:	mov	x20, x0
    8ebc:	mov	x0, x22
    8ec0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8ec4:	ldr	w22, [x0, #8]
    8ec8:	ldp	x0, x1, [sp, #120]
    8ecc:	lsr	w22, w22, #8
    8ed0:	sub	x1, x1, x0
    8ed4:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    8ed8:	movk	x0, #0xaaab
    8edc:	asr	x1, x1, #4
    8ee0:	mul	x1, x1, x0
    8ee4:	add	x0, x19, #0x18
    8ee8:	mov	w23, w1
    8eec:	mov	w1, w1
    8ef0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8ef4:	ldrb	w0, [x20, #8]
    8ef8:	cmp	w0, #0x2
    8efc:	b.ne	8f88 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x140>  // b.any
    8f00:	mov	x0, x20
    8f04:	mov	x24, #0x0                   	// #0
    8f08:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8f0c:	tst	w0, #0xff
    8f10:	b.eq	8f68 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x120>  // b.none
    8f14:	add	x25, sp, #0x50
    8f18:	mov	x26, #0x30                  	// #48
    8f1c:	cmp	w23, w24
    8f20:	b.ls	9050 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x208>  // b.plast
    8f24:	mul	x0, x24, x26
    8f28:	mov	x8, x25
    8f2c:	ldr	x1, [sp, #120]
    8f30:	add	x24, x24, #0x1
    8f34:	ldr	x20, [x19, #24]
    8f38:	ldr	s0, [x1, x0]
    8f3c:	add	x20, x20, x0
    8f40:	mov	w0, w22
    8f44:	add	x20, x20, #0x8
    8f48:	fcvt	d0, s0
    8f4c:	bl	0 <_ZN4llvm8APIntOps18RoundDoubleToAPIntEdj>
    8f50:	mov	x1, x25
    8f54:	mov	x0, x20
    8f58:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8f5c:	mov	x0, x25
    8f60:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8f64:	b	8f1c <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd4>
    8f68:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8f6c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8f70:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8f74:	add	x3, x3, #0x0
    8f78:	add	x1, x1, #0x0
    8f7c:	add	x0, x0, #0x0
    8f80:	mov	w2, #0x56e                 	// #1390
    8f84:	bl	0 <__assert_fail>
    8f88:	add	x25, sp, #0x50
    8f8c:	mov	x24, #0x0                   	// #0
    8f90:	mov	x26, #0x30                  	// #48
    8f94:	cmp	w23, w24
    8f98:	b.ls	9050 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x208>  // b.plast
    8f9c:	mul	x1, x24, x26
    8fa0:	mov	x8, x25
    8fa4:	ldr	x2, [sp, #120]
    8fa8:	mov	w0, w22
    8fac:	ldr	x20, [x19, #24]
    8fb0:	add	x24, x24, #0x1
    8fb4:	ldr	d0, [x2, x1]
    8fb8:	add	x20, x20, x1
    8fbc:	add	x20, x20, #0x8
    8fc0:	bl	0 <_ZN4llvm8APIntOps18RoundDoubleToAPIntEdj>
    8fc4:	mov	x1, x25
    8fc8:	mov	x0, x20
    8fcc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8fd0:	mov	x0, x25
    8fd4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8fd8:	b	8f94 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x14c>
    8fdc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8fe0:	ldr	w22, [x0, #8]
    8fe4:	mov	x0, x23
    8fe8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8fec:	tst	w0, #0xff
    8ff0:	lsr	w22, w22, #8
    8ff4:	b.ne	9018 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1d0>  // b.any
    8ff8:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8ffc:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9000:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9004:	add	x3, x3, #0x0
    9008:	add	x1, x1, #0x0
    900c:	add	x0, x0, #0x0
    9010:	mov	w2, #0x57a                 	// #1402
    9014:	b	8f84 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x13c>
    9018:	add	x20, sp, #0x50
    901c:	add	x23, x19, #0x8
    9020:	cmp	w24, #0x2
    9024:	mov	x8, x20
    9028:	mov	w0, w22
    902c:	b.ne	9074 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x22c>  // b.any
    9030:	ldr	s0, [sp, #96]
    9034:	fcvt	d0, s0
    9038:	bl	0 <_ZN4llvm8APIntOps18RoundDoubleToAPIntEdj>
    903c:	mov	x1, x20
    9040:	mov	x0, x23
    9044:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9048:	mov	x0, x20
    904c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9050:	mov	x0, x21
    9054:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9058:	mov	x0, x19
    905c:	ldp	x19, x20, [sp, #16]
    9060:	ldp	x21, x22, [sp, #32]
    9064:	ldp	x23, x24, [sp, #48]
    9068:	ldp	x25, x26, [sp, #64]
    906c:	ldp	x29, x30, [sp], #144
    9070:	ret
    9074:	ldr	d0, [sp, #96]
    9078:	b	9038 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1f0>

000000000000907c <_ZN4llvm11Interpreter15visitFPToUIInstERNS_10FPToUIInstE>:
    907c:	stp	x29, x30, [sp, #-96]!
    9080:	mov	x29, sp
    9084:	stp	x19, x20, [sp, #16]
    9088:	mov	x19, x1
    908c:	mov	w1, #0x0                   	// #0
    9090:	stp	x21, x22, [sp, #32]
    9094:	mov	x21, x0
    9098:	mov	x0, x19
    909c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    90a0:	add	x22, sp, #0x30
    90a4:	ldr	x2, [x19]
    90a8:	mov	x8, x22
    90ac:	ldr	x20, [x21, #704]
    90b0:	mov	x1, x0
    90b4:	mov	x0, x21
    90b8:	sub	x20, x20, #0x80
    90bc:	mov	x3, x20
    90c0:	bl	8e48 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    90c4:	mov	x2, x20
    90c8:	mov	x1, x22
    90cc:	mov	x0, x19
    90d0:	bl	398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    90d4:	mov	x0, x22
    90d8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    90dc:	ldp	x19, x20, [sp, #16]
    90e0:	ldp	x21, x22, [sp, #32]
    90e4:	ldp	x29, x30, [sp], #96
    90e8:	ret

00000000000090ec <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    90ec:	stp	x29, x30, [sp, #-144]!
    90f0:	mov	x29, sp
    90f4:	stp	x23, x24, [sp, #48]
    90f8:	mov	x24, x0
    90fc:	mov	x0, x8
    9100:	ldr	x23, [x1]
    9104:	stp	x19, x20, [sp, #16]
    9108:	mov	x20, x2
    910c:	mov	x19, x8
    9110:	stp	x21, x22, [sp, #32]
    9114:	mov	x22, x1
    9118:	add	x21, sp, #0x60
    911c:	stp	x25, x26, [sp, #64]
    9120:	mov	x25, x3
    9124:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9128:	mov	x0, x24
    912c:	mov	x8, x21
    9130:	mov	x2, x25
    9134:	mov	x1, x22
    9138:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    913c:	ldrb	w24, [x23, #8]
    9140:	mov	x0, x20
    9144:	cmp	w24, #0x10
    9148:	b.ne	9280 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x194>  // b.any
    914c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9150:	mov	x22, x0
    9154:	mov	x0, x23
    9158:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    915c:	mov	x20, x0
    9160:	mov	x0, x22
    9164:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9168:	ldr	w22, [x0, #8]
    916c:	ldp	x0, x1, [sp, #120]
    9170:	lsr	w22, w22, #8
    9174:	sub	x1, x1, x0
    9178:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    917c:	movk	x0, #0xaaab
    9180:	asr	x1, x1, #4
    9184:	mul	x1, x1, x0
    9188:	add	x0, x19, #0x18
    918c:	mov	w23, w1
    9190:	mov	w1, w1
    9194:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9198:	ldrb	w0, [x20, #8]
    919c:	cmp	w0, #0x2
    91a0:	b.ne	922c <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x140>  // b.any
    91a4:	mov	x0, x20
    91a8:	mov	x24, #0x0                   	// #0
    91ac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    91b0:	tst	w0, #0xff
    91b4:	b.eq	920c <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x120>  // b.none
    91b8:	add	x25, sp, #0x50
    91bc:	mov	x26, #0x30                  	// #48
    91c0:	cmp	w23, w24
    91c4:	b.ls	92f4 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x208>  // b.plast
    91c8:	mul	x0, x24, x26
    91cc:	mov	x8, x25
    91d0:	ldr	x1, [sp, #120]
    91d4:	add	x24, x24, #0x1
    91d8:	ldr	x20, [x19, #24]
    91dc:	ldr	s0, [x1, x0]
    91e0:	add	x20, x20, x0
    91e4:	mov	w0, w22
    91e8:	add	x20, x20, #0x8
    91ec:	fcvt	d0, s0
    91f0:	bl	0 <_ZN4llvm8APIntOps18RoundDoubleToAPIntEdj>
    91f4:	mov	x1, x25
    91f8:	mov	x0, x20
    91fc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9200:	mov	x0, x25
    9204:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9208:	b	91c0 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd4>
    920c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9210:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9214:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9218:	add	x3, x3, #0x0
    921c:	add	x1, x1, #0x0
    9220:	add	x0, x0, #0x0
    9224:	mov	w2, #0x594                 	// #1428
    9228:	bl	0 <__assert_fail>
    922c:	add	x25, sp, #0x50
    9230:	mov	x24, #0x0                   	// #0
    9234:	mov	x26, #0x30                  	// #48
    9238:	cmp	w23, w24
    923c:	b.ls	92f4 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x208>  // b.plast
    9240:	mul	x1, x24, x26
    9244:	mov	x8, x25
    9248:	ldr	x2, [sp, #120]
    924c:	mov	w0, w22
    9250:	ldr	x20, [x19, #24]
    9254:	add	x24, x24, #0x1
    9258:	ldr	d0, [x2, x1]
    925c:	add	x20, x20, x1
    9260:	add	x20, x20, #0x8
    9264:	bl	0 <_ZN4llvm8APIntOps18RoundDoubleToAPIntEdj>
    9268:	mov	x1, x25
    926c:	mov	x0, x20
    9270:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9274:	mov	x0, x25
    9278:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    927c:	b	9238 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x14c>
    9280:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9284:	ldr	w22, [x0, #8]
    9288:	mov	x0, x23
    928c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9290:	tst	w0, #0xff
    9294:	lsr	w22, w22, #8
    9298:	b.ne	92bc <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1d0>  // b.any
    929c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    92a0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    92a4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    92a8:	add	x3, x3, #0x0
    92ac:	add	x1, x1, #0x0
    92b0:	add	x0, x0, #0x0
    92b4:	mov	w2, #0x5a0                 	// #1440
    92b8:	b	9228 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x13c>
    92bc:	add	x20, sp, #0x50
    92c0:	add	x23, x19, #0x8
    92c4:	cmp	w24, #0x2
    92c8:	mov	x8, x20
    92cc:	mov	w0, w22
    92d0:	b.ne	9318 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x22c>  // b.any
    92d4:	ldr	s0, [sp, #96]
    92d8:	fcvt	d0, s0
    92dc:	bl	0 <_ZN4llvm8APIntOps18RoundDoubleToAPIntEdj>
    92e0:	mov	x1, x20
    92e4:	mov	x0, x23
    92e8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    92ec:	mov	x0, x20
    92f0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    92f4:	mov	x0, x21
    92f8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    92fc:	mov	x0, x19
    9300:	ldp	x19, x20, [sp, #16]
    9304:	ldp	x21, x22, [sp, #32]
    9308:	ldp	x23, x24, [sp, #48]
    930c:	ldp	x25, x26, [sp, #64]
    9310:	ldp	x29, x30, [sp], #144
    9314:	ret
    9318:	ldr	d0, [sp, #96]
    931c:	b	92dc <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1f0>

0000000000009320 <_ZN4llvm11Interpreter15visitFPToSIInstERNS_10FPToSIInstE>:
    9320:	stp	x29, x30, [sp, #-96]!
    9324:	mov	x29, sp
    9328:	stp	x19, x20, [sp, #16]
    932c:	mov	x19, x1
    9330:	mov	w1, #0x0                   	// #0
    9334:	stp	x21, x22, [sp, #32]
    9338:	mov	x21, x0
    933c:	mov	x0, x19
    9340:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9344:	add	x22, sp, #0x30
    9348:	ldr	x2, [x19]
    934c:	mov	x8, x22
    9350:	ldr	x20, [x21, #704]
    9354:	mov	x1, x0
    9358:	mov	x0, x21
    935c:	sub	x20, x20, #0x80
    9360:	mov	x3, x20
    9364:	bl	90ec <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    9368:	mov	x2, x20
    936c:	mov	x1, x22
    9370:	mov	x0, x19
    9374:	bl	398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    9378:	mov	x0, x22
    937c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9380:	ldp	x19, x20, [sp, #16]
    9384:	ldp	x21, x22, [sp, #32]
    9388:	ldp	x29, x30, [sp], #96
    938c:	ret

0000000000009390 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    9390:	stp	x29, x30, [sp, #-128]!
    9394:	mov	x29, sp
    9398:	stp	x21, x22, [sp, #32]
    939c:	mov	x22, x1
    93a0:	add	x21, sp, #0x50
    93a4:	stp	x19, x20, [sp, #16]
    93a8:	mov	x20, x2
    93ac:	mov	x19, x8
    93b0:	stp	x23, x24, [sp, #48]
    93b4:	mov	x24, x3
    93b8:	mov	x23, x0
    93bc:	mov	x0, x8
    93c0:	str	x25, [sp, #64]
    93c4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    93c8:	mov	x0, x23
    93cc:	mov	x8, x21
    93d0:	mov	x2, x24
    93d4:	mov	x1, x22
    93d8:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    93dc:	ldr	x0, [x22]
    93e0:	ldrb	w0, [x0, #8]
    93e4:	cmp	w0, #0x10
    93e8:	mov	x0, x20
    93ec:	b.ne	94d0 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x140>  // b.any
    93f0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    93f4:	mov	x20, x0
    93f8:	ldp	x0, x1, [sp, #104]
    93fc:	sub	x1, x1, x0
    9400:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    9404:	movk	x0, #0xaaab
    9408:	asr	x1, x1, #4
    940c:	mul	x1, x1, x0
    9410:	add	x0, x19, #0x18
    9414:	mov	w22, w1
    9418:	mov	w1, w1
    941c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9420:	ldrb	w0, [x20, #8]
    9424:	cmp	w0, #0x2
    9428:	b.ne	9498 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x108>  // b.any
    942c:	mov	x0, x20
    9430:	mov	x20, #0x0                   	// #0
    9434:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9438:	tst	w0, #0xff
    943c:	b.eq	9478 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xe8>  // b.none
    9440:	mov	x25, #0x30                  	// #48
    9444:	cmp	w22, w20
    9448:	b.ls	951c <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x18c>  // b.plast
    944c:	ldr	x0, [sp, #104]
    9450:	mul	x23, x20, x25
    9454:	mov	w1, #0x0                   	// #0
    9458:	add	x20, x20, #0x1
    945c:	add	x0, x0, x23
    9460:	add	x0, x0, #0x8
    9464:	ldr	x24, [x19, #24]
    9468:	bl	0 <_ZNK4llvm5APInt13roundToDoubleEb>
    946c:	fcvt	s0, d0
    9470:	str	s0, [x24, x23]
    9474:	b	9444 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb4>
    9478:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    947c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9480:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9484:	add	x3, x3, #0x0
    9488:	add	x1, x1, #0x0
    948c:	add	x0, x0, #0x0
    9490:	mov	w2, #0x5b6                 	// #1462
    9494:	bl	0 <__assert_fail>
    9498:	mov	x20, #0x0                   	// #0
    949c:	mov	x25, #0x30                  	// #48
    94a0:	cmp	w22, w20
    94a4:	b.ls	951c <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x18c>  // b.plast
    94a8:	mul	x23, x20, x25
    94ac:	mov	w1, #0x0                   	// #0
    94b0:	ldr	x24, [x19, #24]
    94b4:	add	x20, x20, #0x1
    94b8:	ldr	x0, [sp, #104]
    94bc:	add	x0, x0, x23
    94c0:	add	x0, x0, #0x8
    94c4:	bl	0 <_ZNK4llvm5APInt13roundToDoubleEb>
    94c8:	str	d0, [x24, x23]
    94cc:	b	94a0 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x110>
    94d0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    94d4:	tst	w0, #0xff
    94d8:	b.ne	94fc <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x16c>  // b.any
    94dc:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    94e0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    94e4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    94e8:	add	x3, x3, #0x0
    94ec:	add	x1, x1, #0x0
    94f0:	add	x0, x0, #0x0
    94f4:	mov	w2, #0x5c1                 	// #1473
    94f8:	b	9494 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x104>
    94fc:	ldrb	w0, [x20, #8]
    9500:	mov	w1, #0x0                   	// #0
    9504:	cmp	w0, #0x2
    9508:	add	x0, x21, #0x8
    950c:	b.ne	9540 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1b0>  // b.any
    9510:	bl	0 <_ZNK4llvm5APInt13roundToDoubleEb>
    9514:	fcvt	s0, d0
    9518:	str	s0, [x19]
    951c:	mov	x0, x21
    9520:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9524:	mov	x0, x19
    9528:	ldp	x19, x20, [sp, #16]
    952c:	ldp	x21, x22, [sp, #32]
    9530:	ldp	x23, x24, [sp, #48]
    9534:	ldr	x25, [sp, #64]
    9538:	ldp	x29, x30, [sp], #128
    953c:	ret
    9540:	bl	0 <_ZNK4llvm5APInt13roundToDoubleEb>
    9544:	str	d0, [x19]
    9548:	b	951c <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x18c>

000000000000954c <_ZN4llvm11Interpreter15visitUIToFPInstERNS_10UIToFPInstE>:
    954c:	stp	x29, x30, [sp, #-96]!
    9550:	mov	x29, sp
    9554:	stp	x19, x20, [sp, #16]
    9558:	mov	x19, x1
    955c:	mov	w1, #0x0                   	// #0
    9560:	stp	x21, x22, [sp, #32]
    9564:	mov	x21, x0
    9568:	mov	x0, x19
    956c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9570:	add	x22, sp, #0x30
    9574:	ldr	x2, [x19]
    9578:	mov	x8, x22
    957c:	ldr	x20, [x21, #704]
    9580:	mov	x1, x0
    9584:	mov	x0, x21
    9588:	sub	x20, x20, #0x80
    958c:	mov	x3, x20
    9590:	bl	9390 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    9594:	mov	x2, x20
    9598:	mov	x1, x22
    959c:	mov	x0, x19
    95a0:	bl	398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    95a4:	mov	x0, x22
    95a8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    95ac:	ldp	x19, x20, [sp, #16]
    95b0:	ldp	x21, x22, [sp, #32]
    95b4:	ldp	x29, x30, [sp], #96
    95b8:	ret

00000000000095bc <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    95bc:	stp	x29, x30, [sp, #-128]!
    95c0:	mov	x29, sp
    95c4:	stp	x21, x22, [sp, #32]
    95c8:	mov	x22, x1
    95cc:	add	x21, sp, #0x50
    95d0:	stp	x19, x20, [sp, #16]
    95d4:	mov	x20, x2
    95d8:	mov	x19, x8
    95dc:	stp	x23, x24, [sp, #48]
    95e0:	mov	x24, x3
    95e4:	mov	x23, x0
    95e8:	mov	x0, x8
    95ec:	str	x25, [sp, #64]
    95f0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    95f4:	mov	x0, x23
    95f8:	mov	x8, x21
    95fc:	mov	x2, x24
    9600:	mov	x1, x22
    9604:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    9608:	ldr	x0, [x22]
    960c:	ldrb	w0, [x0, #8]
    9610:	cmp	w0, #0x10
    9614:	mov	x0, x20
    9618:	b.ne	96fc <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x140>  // b.any
    961c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9620:	mov	x20, x0
    9624:	ldp	x0, x1, [sp, #104]
    9628:	sub	x1, x1, x0
    962c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    9630:	movk	x0, #0xaaab
    9634:	asr	x1, x1, #4
    9638:	mul	x1, x1, x0
    963c:	add	x0, x19, #0x18
    9640:	mov	w22, w1
    9644:	mov	w1, w1
    9648:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    964c:	ldrb	w0, [x20, #8]
    9650:	cmp	w0, #0x2
    9654:	b.ne	96c4 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x108>  // b.any
    9658:	mov	x0, x20
    965c:	mov	x20, #0x0                   	// #0
    9660:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9664:	tst	w0, #0xff
    9668:	b.eq	96a4 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xe8>  // b.none
    966c:	mov	x25, #0x30                  	// #48
    9670:	cmp	w22, w20
    9674:	b.ls	9748 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x18c>  // b.plast
    9678:	ldr	x0, [sp, #104]
    967c:	mul	x23, x20, x25
    9680:	mov	w1, #0x1                   	// #1
    9684:	add	x20, x20, #0x1
    9688:	add	x0, x0, x23
    968c:	add	x0, x0, #0x8
    9690:	ldr	x24, [x19, #24]
    9694:	bl	0 <_ZNK4llvm5APInt13roundToDoubleEb>
    9698:	fcvt	s0, d0
    969c:	str	s0, [x24, x23]
    96a0:	b	9670 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb4>
    96a4:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    96a8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    96ac:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    96b0:	add	x3, x3, #0x0
    96b4:	add	x1, x1, #0x0
    96b8:	add	x0, x0, #0x0
    96bc:	mov	w2, #0x5d6                 	// #1494
    96c0:	bl	0 <__assert_fail>
    96c4:	mov	x20, #0x0                   	// #0
    96c8:	mov	x25, #0x30                  	// #48
    96cc:	cmp	w22, w20
    96d0:	b.ls	9748 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x18c>  // b.plast
    96d4:	mul	x23, x20, x25
    96d8:	mov	w1, #0x1                   	// #1
    96dc:	ldr	x24, [x19, #24]
    96e0:	add	x20, x20, #0x1
    96e4:	ldr	x0, [sp, #104]
    96e8:	add	x0, x0, x23
    96ec:	add	x0, x0, #0x8
    96f0:	bl	0 <_ZNK4llvm5APInt13roundToDoubleEb>
    96f4:	str	d0, [x24, x23]
    96f8:	b	96cc <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x110>
    96fc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9700:	tst	w0, #0xff
    9704:	b.ne	9728 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x16c>  // b.any
    9708:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    970c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9710:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9714:	add	x3, x3, #0x0
    9718:	add	x1, x1, #0x0
    971c:	add	x0, x0, #0x0
    9720:	mov	w2, #0x5e1                 	// #1505
    9724:	b	96c0 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x104>
    9728:	ldrb	w0, [x20, #8]
    972c:	mov	w1, #0x1                   	// #1
    9730:	cmp	w0, #0x2
    9734:	add	x0, x21, #0x8
    9738:	b.ne	976c <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1b0>  // b.any
    973c:	bl	0 <_ZNK4llvm5APInt13roundToDoubleEb>
    9740:	fcvt	s0, d0
    9744:	str	s0, [x19]
    9748:	mov	x0, x21
    974c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9750:	mov	x0, x19
    9754:	ldp	x19, x20, [sp, #16]
    9758:	ldp	x21, x22, [sp, #32]
    975c:	ldp	x23, x24, [sp, #48]
    9760:	ldr	x25, [sp, #64]
    9764:	ldp	x29, x30, [sp], #128
    9768:	ret
    976c:	bl	0 <_ZNK4llvm5APInt13roundToDoubleEb>
    9770:	str	d0, [x19]
    9774:	b	9748 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x18c>

0000000000009778 <_ZN4llvm11Interpreter15visitSIToFPInstERNS_10SIToFPInstE>:
    9778:	stp	x29, x30, [sp, #-96]!
    977c:	mov	x29, sp
    9780:	stp	x19, x20, [sp, #16]
    9784:	mov	x19, x1
    9788:	mov	w1, #0x0                   	// #0
    978c:	stp	x21, x22, [sp, #32]
    9790:	mov	x21, x0
    9794:	mov	x0, x19
    9798:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    979c:	add	x22, sp, #0x30
    97a0:	ldr	x2, [x19]
    97a4:	mov	x8, x22
    97a8:	ldr	x20, [x21, #704]
    97ac:	mov	x1, x0
    97b0:	mov	x0, x21
    97b4:	sub	x20, x20, #0x80
    97b8:	mov	x3, x20
    97bc:	bl	95bc <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    97c0:	mov	x2, x20
    97c4:	mov	x1, x22
    97c8:	mov	x0, x19
    97cc:	bl	398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    97d0:	mov	x0, x22
    97d4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    97d8:	ldp	x19, x20, [sp, #16]
    97dc:	ldp	x21, x22, [sp, #32]
    97e0:	ldp	x29, x30, [sp], #96
    97e4:	ret

00000000000097e8 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    97e8:	stp	x29, x30, [sp, #-128]!
    97ec:	mov	x29, sp
    97f0:	stp	x19, x20, [sp, #16]
    97f4:	mov	x19, x8
    97f8:	stp	x21, x22, [sp, #32]
    97fc:	mov	x21, x1
    9800:	mov	x22, x0
    9804:	mov	x0, x2
    9808:	stp	x23, x24, [sp, #48]
    980c:	mov	x23, x3
    9810:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9814:	add	x24, sp, #0x50
    9818:	ldr	w20, [x0, #8]
    981c:	mov	x0, x19
    9820:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9824:	mov	x0, x22
    9828:	mov	x8, x24
    982c:	mov	x2, x23
    9830:	mov	x1, x21
    9834:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    9838:	ldr	x0, [x21]
    983c:	ldrb	w0, [x0, #8]
    9840:	cmp	w0, #0xf
    9844:	b.eq	9868 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x80>  // b.none
    9848:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    984c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9850:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9854:	add	x3, x3, #0x0
    9858:	add	x1, x1, #0x0
    985c:	add	x0, x0, #0x0
    9860:	mov	w2, #0x5f1                 	// #1521
    9864:	bl	0 <__assert_fail>
    9868:	lsr	w20, w20, #8
    986c:	str	w20, [sp, #72]
    9870:	add	x21, x19, #0x8
    9874:	ldr	x1, [sp, #80]
    9878:	cbnz	w20, 989c <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb4>
    987c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9880:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9884:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9888:	add	x3, x3, #0x0
    988c:	add	x1, x1, #0x0
    9890:	add	x0, x0, #0x0
    9894:	mov	w2, #0x117                 	// #279
    9898:	b	9864 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x7c>
    989c:	cmp	w20, #0x40
    98a0:	add	x20, sp, #0x40
    98a4:	b.hi	98e8 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x100>  // b.pmore
    98a8:	mov	x0, x20
    98ac:	str	x1, [sp, #64]
    98b0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    98b4:	mov	x1, x20
    98b8:	mov	x0, x21
    98bc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    98c0:	mov	x0, x20
    98c4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    98c8:	mov	x0, x24
    98cc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    98d0:	mov	x0, x19
    98d4:	ldp	x19, x20, [sp, #16]
    98d8:	ldp	x21, x22, [sp, #32]
    98dc:	ldp	x23, x24, [sp, #48]
    98e0:	ldp	x29, x30, [sp], #128
    98e4:	ret
    98e8:	mov	x0, x20
    98ec:	mov	w2, #0x0                   	// #0
    98f0:	bl	0 <_ZN4llvm5APInt12initSlowCaseEmb>
    98f4:	b	98b4 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xcc>

00000000000098f8 <_ZN4llvm11Interpreter17visitPtrToIntInstERNS_12PtrToIntInstE>:
    98f8:	stp	x29, x30, [sp, #-96]!
    98fc:	mov	x29, sp
    9900:	stp	x19, x20, [sp, #16]
    9904:	mov	x19, x1
    9908:	mov	w1, #0x0                   	// #0
    990c:	stp	x21, x22, [sp, #32]
    9910:	mov	x21, x0
    9914:	mov	x0, x19
    9918:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    991c:	add	x22, sp, #0x30
    9920:	ldr	x2, [x19]
    9924:	mov	x8, x22
    9928:	ldr	x20, [x21, #704]
    992c:	mov	x1, x0
    9930:	mov	x0, x21
    9934:	sub	x20, x20, #0x80
    9938:	mov	x3, x20
    993c:	bl	97e8 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    9940:	mov	x2, x20
    9944:	mov	x1, x22
    9948:	mov	x0, x19
    994c:	bl	398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    9950:	mov	x0, x22
    9954:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9958:	ldp	x19, x20, [sp, #16]
    995c:	ldp	x21, x22, [sp, #32]
    9960:	ldp	x29, x30, [sp], #96
    9964:	ret

0000000000009968 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    9968:	stp	x29, x30, [sp, #-128]!
    996c:	mov	x29, sp
    9970:	stp	x21, x22, [sp, #32]
    9974:	mov	x22, x2
    9978:	mov	x21, x0
    997c:	mov	x0, x8
    9980:	stp	x19, x20, [sp, #16]
    9984:	mov	x19, x8
    9988:	add	x20, sp, #0x50
    998c:	stp	x23, x24, [sp, #48]
    9990:	mov	x24, x3
    9994:	mov	x23, x1
    9998:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    999c:	mov	x0, x21
    99a0:	mov	x8, x20
    99a4:	mov	x2, x24
    99a8:	mov	x1, x23
    99ac:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    99b0:	ldrb	w0, [x22, #8]
    99b4:	cmp	w0, #0xf
    99b8:	b.eq	99dc <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x74>  // b.none
    99bc:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    99c0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    99c4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    99c8:	add	x3, x3, #0x0
    99cc:	add	x1, x1, #0x0
    99d0:	add	x0, x0, #0x0
    99d4:	mov	w2, #0x5fa                 	// #1530
    99d8:	bl	0 <__assert_fail>
    99dc:	mov	w1, #0x0                   	// #0
    99e0:	add	x0, x21, #0x58
    99e4:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
    99e8:	lsl	w1, w0, #3
    99ec:	ldr	w2, [sp, #96]
    99f0:	cmp	w2, w0, lsl #3
    99f4:	b.eq	9a20 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb8>  // b.none
    99f8:	add	x22, sp, #0x40
    99fc:	add	x21, x20, #0x8
    9a00:	mov	x8, x22
    9a04:	mov	x0, x21
    9a08:	bl	0 <_ZNK4llvm5APInt11zextOrTruncEj>
    9a0c:	mov	x1, x22
    9a10:	mov	x0, x21
    9a14:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9a18:	mov	x0, x22
    9a1c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9a20:	add	x0, x20, #0x8
    9a24:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9a28:	str	x0, [x19]
    9a2c:	mov	x0, x20
    9a30:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9a34:	mov	x0, x19
    9a38:	ldp	x19, x20, [sp, #16]
    9a3c:	ldp	x21, x22, [sp, #32]
    9a40:	ldp	x23, x24, [sp, #48]
    9a44:	ldp	x29, x30, [sp], #128
    9a48:	ret

0000000000009a4c <_ZN4llvm11Interpreter17visitIntToPtrInstERNS_12IntToPtrInstE>:
    9a4c:	stp	x29, x30, [sp, #-96]!
    9a50:	mov	x29, sp
    9a54:	stp	x19, x20, [sp, #16]
    9a58:	mov	x19, x1
    9a5c:	mov	w1, #0x0                   	// #0
    9a60:	stp	x21, x22, [sp, #32]
    9a64:	mov	x21, x0
    9a68:	mov	x0, x19
    9a6c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9a70:	add	x22, sp, #0x30
    9a74:	ldr	x2, [x19]
    9a78:	mov	x8, x22
    9a7c:	ldr	x20, [x21, #704]
    9a80:	mov	x1, x0
    9a84:	mov	x0, x21
    9a88:	sub	x20, x20, #0x80
    9a8c:	mov	x3, x20
    9a90:	bl	9968 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    9a94:	mov	x2, x20
    9a98:	mov	x1, x22
    9a9c:	mov	x0, x19
    9aa0:	bl	398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    9aa4:	mov	x0, x22
    9aa8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9aac:	ldp	x19, x20, [sp, #16]
    9ab0:	ldp	x21, x22, [sp, #32]
    9ab4:	ldp	x29, x30, [sp], #96
    9ab8:	ret

0000000000009abc <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    9abc:	stp	x29, x30, [sp, #-464]!
    9ac0:	mov	x29, sp
    9ac4:	stp	x25, x26, [sp, #64]
    9ac8:	add	x26, sp, #0xe0
    9acc:	ldr	x25, [x1]
    9ad0:	stp	x19, x20, [sp, #16]
    9ad4:	mov	x20, x8
    9ad8:	mov	x19, x0
    9adc:	mov	x0, x8
    9ae0:	stp	x21, x22, [sp, #32]
    9ae4:	mov	x22, x3
    9ae8:	mov	x21, x1
    9aec:	stp	x23, x24, [sp, #48]
    9af0:	mov	x24, x2
    9af4:	stp	x27, x28, [sp, #80]
    9af8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9afc:	mov	x1, x21
    9b00:	mov	x8, x26
    9b04:	mov	x2, x22
    9b08:	mov	x0, x19
    9b0c:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    9b10:	ldrb	w1, [x25, #8]
    9b14:	cmp	w1, #0x10
    9b18:	b.eq	9b28 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6c>  // b.none
    9b1c:	ldrb	w2, [x24, #8]
    9b20:	cmp	w2, #0x10
    9b24:	b.ne	9bf8 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x13c>  // b.any
    9b28:	add	x27, sp, #0x110
    9b2c:	ldrb	w28, [x19, #88]
    9b30:	mov	x0, x27
    9b34:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9b38:	add	x0, sp, #0x140
    9b3c:	str	x0, [sp, #144]
    9b40:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9b44:	add	x0, sp, #0x170
    9b48:	str	x0, [sp, #120]
    9b4c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9b50:	ldrb	w0, [x25, #8]
    9b54:	cmp	w0, #0x10
    9b58:	b.ne	9c28 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x16c>  // b.any
    9b5c:	mov	x0, x25
    9b60:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9b64:	mov	x21, x0
    9b68:	mov	x0, x25
    9b6c:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    9b70:	mov	w22, w0
    9b74:	ldp	x0, x19, [sp, #248]
    9b78:	mov	x1, x26
    9b7c:	mov	x25, x21
    9b80:	sub	x19, x19, x0
    9b84:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    9b88:	movk	x0, #0xaaab
    9b8c:	asr	x19, x19, #4
    9b90:	mul	w19, w19, w0
    9b94:	ldr	x0, [sp, #120]
    9b98:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9b9c:	mul	w0, w22, w19
    9ba0:	str	w0, [sp, #104]
    9ba4:	ldrb	w0, [x24, #8]
    9ba8:	cmp	w0, #0x10
    9bac:	mov	x0, x24
    9bb0:	b.ne	9c58 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x19c>  // b.any
    9bb4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9bb8:	str	x0, [sp, #152]
    9bbc:	mov	x0, x24
    9bc0:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    9bc4:	mov	w21, w0
    9bc8:	mul	w0, w22, w19
    9bcc:	udiv	w23, w0, w21
    9bd0:	mul	w0, w21, w23
    9bd4:	mul	w1, w22, w19
    9bd8:	cmp	w0, w1
    9bdc:	b.eq	9c78 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1bc>  // b.none
    9be0:	mov	w2, #0x631                 	// #1585
    9be4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9be8:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9bec:	add	x1, x1, #0x0
    9bf0:	add	x0, x0, #0x0
    9bf4:	b	9db0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2f4>
    9bf8:	cmp	w2, #0xf
    9bfc:	b.ne	a20c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x750>  // b.any
    9c00:	cmp	w1, #0xf
    9c04:	b.eq	a200 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x744>  // b.none
    9c08:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9c0c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9c10:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9c14:	add	x3, x3, #0x0
    9c18:	add	x1, x1, #0x0
    9c1c:	add	x0, x0, #0x0
    9c20:	mov	w2, #0x68b                 	// #1675
    9c24:	bl	0 <__assert_fail>
    9c28:	mov	x0, x25
    9c2c:	bl	0 <_ZNK4llvm4Type22getPrimitiveSizeInBitsEv>
    9c30:	stp	x0, x1, [sp, #416]
    9c34:	add	x0, sp, #0x1a0
    9c38:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9c3c:	mov	w22, w0
    9c40:	mov	x1, x26
    9c44:	ldr	x0, [sp, #120]
    9c48:	mov	w19, #0x1                   	// #1
    9c4c:	add	x0, x0, #0x18
    9c50:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9c54:	b	9b9c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xe0>
    9c58:	bl	0 <_ZNK4llvm4Type22getPrimitiveSizeInBitsEv>
    9c5c:	mov	w23, #0x1                   	// #1
    9c60:	stp	x0, x1, [sp, #416]
    9c64:	add	x0, sp, #0x1a0
    9c68:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9c6c:	mov	w21, w0
    9c70:	str	x24, [sp, #152]
    9c74:	b	9bd0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x114>
    9c78:	ldr	x0, [sp, #144]
    9c7c:	mov	w1, w19
    9c80:	add	x0, x0, #0x18
    9c84:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9c88:	ldrb	w0, [x25, #8]
    9c8c:	cmp	w0, #0x2
    9c90:	b.ne	9cf4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x238>  // b.any
    9c94:	add	x1, sp, #0x1a0
    9c98:	mov	x25, #0x0                   	// #0
    9c9c:	mov	x5, #0x30                  	// #48
    9ca0:	mov	w3, #0x20                  	// #32
    9ca4:	cmp	w19, w25
    9ca8:	b.ls	9db4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2f8>  // b.plast
    9cac:	mul	x2, x25, x5
    9cb0:	str	x1, [sp, #104]
    9cb4:	ldr	x4, [sp, #392]
    9cb8:	add	x25, x25, #0x1
    9cbc:	ldr	x0, [sp, #344]
    9cc0:	add	x0, x0, x2
    9cc4:	ldr	w2, [x4, x2]
    9cc8:	add	x0, x0, #0x8
    9ccc:	str	x2, [sp, #416]
    9cd0:	str	w3, [sp, #424]
    9cd4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9cd8:	ldr	x1, [sp, #104]
    9cdc:	mov	x0, x1
    9ce0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9ce4:	mov	w3, #0x20                  	// #32
    9ce8:	mov	x5, #0x30                  	// #48
    9cec:	ldr	x1, [sp, #104]
    9cf0:	b	9ca4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1e8>
    9cf4:	cmp	w0, #0x3
    9cf8:	b.ne	9d5c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2a0>  // b.any
    9cfc:	add	x1, sp, #0x1a0
    9d00:	mov	x25, #0x0                   	// #0
    9d04:	mov	x5, #0x30                  	// #48
    9d08:	mov	w3, #0x40                  	// #64
    9d0c:	cmp	w19, w25
    9d10:	b.ls	9db4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2f8>  // b.plast
    9d14:	mul	x2, x25, x5
    9d18:	str	x1, [sp, #104]
    9d1c:	ldr	x4, [sp, #392]
    9d20:	add	x25, x25, #0x1
    9d24:	ldr	x0, [sp, #344]
    9d28:	add	x0, x0, x2
    9d2c:	ldr	x2, [x4, x2]
    9d30:	add	x0, x0, #0x8
    9d34:	str	x2, [sp, #416]
    9d38:	str	w3, [sp, #424]
    9d3c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9d40:	ldr	x1, [sp, #104]
    9d44:	mov	x0, x1
    9d48:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9d4c:	mov	w3, #0x40                  	// #64
    9d50:	mov	x5, #0x30                  	// #48
    9d54:	ldr	x1, [sp, #104]
    9d58:	b	9d0c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x250>
    9d5c:	cmp	w0, #0xb
    9d60:	b.ne	9d9c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2e0>  // b.any
    9d64:	mov	x25, #0x0                   	// #0
    9d68:	cmp	w19, w25
    9d6c:	mov	x3, #0x30                  	// #48
    9d70:	b.ls	9db4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2f8>  // b.plast
    9d74:	mul	x2, x25, x3
    9d78:	add	x25, x25, #0x1
    9d7c:	ldr	x0, [sp, #344]
    9d80:	ldr	x1, [sp, #392]
    9d84:	add	x0, x0, x2
    9d88:	add	x0, x0, #0x8
    9d8c:	add	x1, x1, x2
    9d90:	add	x1, x1, #0x8
    9d94:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9d98:	b	9d68 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2ac>
    9d9c:	mov	w2, #0x643                 	// #1603
    9da0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9da4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9da8:	add	x1, x1, #0x0
    9dac:	add	x0, x0, #0x0
    9db0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    9db4:	cmp	w19, w23
    9db8:	b.ls	9f98 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x4dc>  // b.plast
    9dbc:	udiv	w0, w19, w23
    9dc0:	cmp	w28, #0x0
    9dc4:	add	x19, sp, #0xd0
    9dc8:	add	x28, sp, #0x1a0
    9dcc:	add	x25, sp, #0xc0
    9dd0:	stp	w0, wzr, [sp, #128]
    9dd4:	sub	w0, w0, #0x1
    9dd8:	mul	w0, w0, w22
    9ddc:	csel	w0, w0, wzr, ne  // ne = any
    9de0:	str	w0, [sp, #160]
    9de4:	cneg	w0, w22, ne  // ne = any
    9de8:	str	w0, [sp, #184]
    9dec:	ldr	w0, [sp, #128]
    9df0:	str	w0, [sp, #104]
    9df4:	add	x0, x28, #0x8
    9df8:	str	x0, [sp, #176]
    9dfc:	ldr	w0, [sp, #104]
    9e00:	ldr	w1, [sp, #128]
    9e04:	sub	w0, w0, w1
    9e08:	str	w0, [sp, #112]
    9e0c:	ldr	w0, [sp, #132]
    9e10:	cmp	w23, w0
    9e14:	b.eq	a0d0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x614>  // b.none
    9e18:	mov	x0, x28
    9e1c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9e20:	ldr	w0, [sp, #432]
    9e24:	cmp	w0, #0x40
    9e28:	b.hi	9f38 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x47c>  // b.pmore
    9e2c:	ldr	x0, [sp, #176]
    9e30:	str	xzr, [sp, #424]
    9e34:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9e38:	add	x2, x28, #0x8
    9e3c:	mov	x8, x19
    9e40:	mov	x0, x2
    9e44:	mov	w1, w21
    9e48:	str	x2, [sp, #136]
    9e4c:	bl	0 <_ZNK4llvm5APInt4zextEj>
    9e50:	ldr	x2, [sp, #136]
    9e54:	mov	x1, x19
    9e58:	str	x2, [sp, #168]
    9e5c:	mov	x0, x2
    9e60:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9e64:	mov	x0, x19
    9e68:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9e6c:	ldr	w0, [sp, #160]
    9e70:	str	w0, [sp, #136]
    9e74:	ldr	w0, [sp, #104]
    9e78:	mov	w3, #0x1                   	// #1
    9e7c:	ldr	w1, [sp, #112]
    9e80:	cmp	w0, w1
    9e84:	b.eq	9f68 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x4ac>  // b.none
    9e88:	mov	x8, x19
    9e8c:	mov	w1, w22
    9e90:	mov	x0, x25
    9e94:	str	xzr, [sp, #192]
    9e98:	str	w3, [sp, #200]
    9e9c:	bl	0 <_ZNK4llvm5APInt4zextEj>
    9ea0:	mov	x1, x19
    9ea4:	mov	x0, x25
    9ea8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9eac:	mov	x0, x19
    9eb0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9eb4:	ldr	w0, [sp, #112]
    9eb8:	ldr	x1, [sp, #344]
    9ebc:	add	w2, w0, #0x1
    9ec0:	str	w2, [sp, #188]
    9ec4:	mov	w2, #0x30                  	// #48
    9ec8:	umaddl	x1, w0, w2, x1
    9ecc:	mov	x0, x25
    9ed0:	add	x1, x1, #0x8
    9ed4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9ed8:	mov	x8, x19
    9edc:	mov	w1, w21
    9ee0:	mov	x0, x25
    9ee4:	bl	0 <_ZNK4llvm5APInt4zextEj>
    9ee8:	mov	x1, x19
    9eec:	mov	x0, x25
    9ef0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9ef4:	mov	x0, x19
    9ef8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9efc:	ldr	w1, [sp, #136]
    9f00:	mov	x0, x25
    9f04:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9f08:	ldr	w0, [sp, #136]
    9f0c:	ldr	w1, [sp, #184]
    9f10:	add	w0, w0, w1
    9f14:	str	w0, [sp, #136]
    9f18:	ldr	x0, [sp, #168]
    9f1c:	mov	x1, x25
    9f20:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9f24:	mov	x0, x25
    9f28:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9f2c:	ldr	w2, [sp, #188]
    9f30:	str	w2, [sp, #112]
    9f34:	b	9e74 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x3b8>
    9f38:	ldr	x1, [sp, #424]
    9f3c:	mov	w2, w0
    9f40:	add	x2, x2, #0x3f
    9f44:	str	xzr, [x1]
    9f48:	lsr	x2, x2, #6
    9f4c:	sub	w2, w2, #0x1
    9f50:	mov	w1, #0x0                   	// #0
    9f54:	ldr	x0, [sp, #424]
    9f58:	lsl	w2, w2, #3
    9f5c:	add	x0, x0, #0x8
    9f60:	bl	0 <memset>
    9f64:	b	9e38 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x37c>
    9f68:	mov	x1, x28
    9f6c:	add	x0, x27, #0x18
    9f70:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9f74:	mov	x0, x28
    9f78:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9f7c:	ldp	w1, w0, [sp, #128]
    9f80:	add	w0, w0, #0x1
    9f84:	str	w0, [sp, #132]
    9f88:	ldr	w0, [sp, #104]
    9f8c:	add	w0, w0, w1
    9f90:	str	w0, [sp, #104]
    9f94:	b	9dfc <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x340>
    9f98:	udiv	w0, w23, w19
    9f9c:	cmp	w28, #0x0
    9fa0:	add	x28, sp, #0xd0
    9fa4:	str	xzr, [sp, #104]
    9fa8:	str	w0, [sp, #184]
    9fac:	sub	w0, w0, #0x1
    9fb0:	mul	w0, w0, w21
    9fb4:	csel	w0, w0, wzr, ne  // ne = any
    9fb8:	str	w0, [sp, #168]
    9fbc:	cneg	w0, w21, ne  // ne = any
    9fc0:	str	w0, [sp, #136]
    9fc4:	add	x0, sp, #0x1a0
    9fc8:	str	x0, [sp, #112]
    9fcc:	add	x25, x0, #0x8
    9fd0:	ldr	w0, [sp, #104]
    9fd4:	cmp	w19, w0
    9fd8:	b.ls	a0d0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x614>  // b.plast
    9fdc:	ldr	x1, [sp, #104]
    9fe0:	mov	x0, #0x30                  	// #48
    9fe4:	str	wzr, [sp, #132]
    9fe8:	mul	x0, x1, x0
    9fec:	str	x0, [sp, #160]
    9ff0:	ldr	w0, [sp, #168]
    9ff4:	str	w0, [sp, #128]
    9ff8:	add	x0, x27, #0x18
    9ffc:	str	x0, [sp, #176]
    a000:	ldr	w0, [sp, #132]
    a004:	ldr	w1, [sp, #184]
    a008:	cmp	w0, w1
    a00c:	b.eq	a0c0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x604>  // b.none
    a010:	ldr	x0, [sp, #112]
    a014:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a018:	mov	x8, x28
    a01c:	mov	w1, w22
    a020:	mov	x0, x25
    a024:	bl	0 <_ZNK4llvm5APInt4zextEj>
    a028:	mov	x1, x28
    a02c:	mov	x0, x25
    a030:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a034:	mov	x0, x28
    a038:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a03c:	ldr	x0, [sp, #160]
    a040:	ldr	x1, [sp, #344]
    a044:	add	x1, x1, x0
    a048:	mov	x0, x25
    a04c:	add	x1, x1, #0x8
    a050:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a054:	ldr	w1, [sp, #128]
    a058:	mov	x0, x25
    a05c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a060:	cmp	w22, w21
    a064:	b.ls	a08c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x5d0>  // b.plast
    a068:	mov	x8, x28
    a06c:	mov	w1, w21
    a070:	mov	x0, x25
    a074:	bl	0 <_ZNK4llvm5APInt5truncEj>
    a078:	mov	x1, x28
    a07c:	mov	x0, x25
    a080:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a084:	mov	x0, x28
    a088:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a08c:	ldr	w0, [sp, #128]
    a090:	ldr	w1, [sp, #136]
    a094:	add	w0, w0, w1
    a098:	str	w0, [sp, #128]
    a09c:	ldr	x1, [sp, #112]
    a0a0:	ldr	x0, [sp, #176]
    a0a4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a0a8:	ldr	x0, [sp, #112]
    a0ac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a0b0:	ldr	w0, [sp, #132]
    a0b4:	add	w0, w0, #0x1
    a0b8:	str	w0, [sp, #132]
    a0bc:	b	a000 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x544>
    a0c0:	ldr	x0, [sp, #104]
    a0c4:	add	x0, x0, #0x1
    a0c8:	str	x0, [sp, #104]
    a0cc:	b	9fd0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x514>
    a0d0:	ldr	x0, [sp, #152]
    a0d4:	ldrb	w1, [x0, #8]
    a0d8:	ldrb	w0, [x24, #8]
    a0dc:	cmp	w0, #0x10
    a0e0:	b.ne	a1c0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x704>  // b.any
    a0e4:	cmp	w1, #0x3
    a0e8:	b.ne	a12c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x670>  // b.any
    a0ec:	mov	x19, #0x0                   	// #0
    a0f0:	mov	x24, #0x30                  	// #48
    a0f4:	mov	w1, w23
    a0f8:	add	x0, x20, #0x18
    a0fc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a100:	cmp	w23, w19
    a104:	b.ls	a180 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6c4>  // b.plast
    a108:	mul	x21, x19, x24
    a10c:	add	x19, x19, #0x1
    a110:	ldr	x22, [x20, #24]
    a114:	ldr	x0, [sp, #296]
    a118:	add	x0, x0, x21
    a11c:	add	x0, x0, #0x8
    a120:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a124:	str	d0, [x22, x21]
    a128:	b	a100 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x644>
    a12c:	cmp	w1, #0x2
    a130:	b.ne	a174 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6b8>  // b.any
    a134:	mov	x19, #0x0                   	// #0
    a138:	mov	x24, #0x30                  	// #48
    a13c:	mov	w1, w23
    a140:	add	x0, x20, #0x18
    a144:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a148:	cmp	w23, w19
    a14c:	b.ls	a180 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6c4>  // b.plast
    a150:	mul	x21, x19, x24
    a154:	add	x19, x19, #0x1
    a158:	ldr	x22, [x20, #24]
    a15c:	ldr	x0, [sp, #296]
    a160:	add	x0, x0, x21
    a164:	add	x0, x0, #0x8
    a168:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a16c:	str	s0, [x22, x21]
    a170:	b	a148 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x68c>
    a174:	mov	x1, x27
    a178:	mov	x0, x20
    a17c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a180:	ldr	x0, [sp, #120]
    a184:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a188:	ldr	x0, [sp, #144]
    a18c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a190:	mov	x0, x27
    a194:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a198:	mov	x0, x26
    a19c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a1a0:	mov	x0, x20
    a1a4:	ldp	x19, x20, [sp, #16]
    a1a8:	ldp	x21, x22, [sp, #32]
    a1ac:	ldp	x23, x24, [sp, #48]
    a1b0:	ldp	x25, x26, [sp, #64]
    a1b4:	ldp	x27, x28, [sp, #80]
    a1b8:	ldp	x29, x30, [sp], #464
    a1bc:	ret
    a1c0:	ldr	x0, [sp, #296]
    a1c4:	cmp	w1, #0x3
    a1c8:	add	x0, x0, #0x8
    a1cc:	b.ne	a1dc <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x720>  // b.any
    a1d0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a1d4:	str	d0, [x20]
    a1d8:	b	a180 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6c4>
    a1dc:	cmp	w1, #0x2
    a1e0:	b.ne	a1f0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x734>  // b.any
    a1e4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a1e8:	str	s0, [x20]
    a1ec:	b	a180 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6c4>
    a1f0:	mov	x1, x0
    a1f4:	add	x0, x20, #0x8
    a1f8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a1fc:	b	a180 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6c4>
    a200:	ldr	x0, [sp, #224]
    a204:	str	x0, [x20]
    a208:	b	a198 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6dc>
    a20c:	cmp	w2, #0xb
    a210:	b.ne	a27c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x7c0>  // b.any
    a214:	cmp	w1, #0x2
    a218:	add	x0, x20, #0x8
    a21c:	b.ne	a248 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x78c>  // b.any
    a220:	ldr	w1, [sp, #224]
    a224:	mov	w2, #0x20                  	// #32
    a228:	str	w2, [sp, #424]
    a22c:	add	x19, sp, #0x1a0
    a230:	str	x1, [sp, #416]
    a234:	mov	x1, x19
    a238:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a23c:	mov	x0, x19
    a240:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a244:	b	a198 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6dc>
    a248:	cmp	w1, #0x3
    a24c:	b.ne	a260 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x7a4>  // b.any
    a250:	mov	w1, #0x40                  	// #64
    a254:	str	w1, [sp, #424]
    a258:	ldr	x1, [sp, #224]
    a25c:	b	a22c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x770>
    a260:	cmp	w1, #0xb
    a264:	b.ne	a274 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x7b8>  // b.any
    a268:	add	x1, x26, #0x8
    a26c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a270:	b	a198 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6dc>
    a274:	mov	w2, #0x695                 	// #1685
    a278:	b	9be4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x128>
    a27c:	cmp	w2, #0x2
    a280:	b.ne	a2a4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x7e8>  // b.any
    a284:	cmp	w1, #0xb
    a288:	b.ne	a29c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x7e0>  // b.any
    a28c:	add	x0, x26, #0x8
    a290:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a294:	str	s0, [x20]
    a298:	b	a198 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6dc>
    a29c:	ldr	s0, [sp, #224]
    a2a0:	b	a294 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x7d8>
    a2a4:	cmp	w2, #0x3
    a2a8:	b.ne	a2cc <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x810>  // b.any
    a2ac:	cmp	w1, #0xb
    a2b0:	b.ne	a2c4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x808>  // b.any
    a2b4:	add	x0, x26, #0x8
    a2b8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a2bc:	str	d0, [x20]
    a2c0:	b	a198 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6dc>
    a2c4:	ldr	d0, [sp, #224]
    a2c8:	b	a2bc <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x800>
    a2cc:	mov	w2, #0x6a4                 	// #1700
    a2d0:	b	9da0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2e4>

000000000000a2d4 <_ZN4llvm11Interpreter16visitBitCastInstERNS_11BitCastInstE>:
    a2d4:	stp	x29, x30, [sp, #-96]!
    a2d8:	mov	x29, sp
    a2dc:	stp	x19, x20, [sp, #16]
    a2e0:	mov	x19, x1
    a2e4:	mov	w1, #0x0                   	// #0
    a2e8:	stp	x21, x22, [sp, #32]
    a2ec:	mov	x21, x0
    a2f0:	mov	x0, x19
    a2f4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a2f8:	add	x22, sp, #0x30
    a2fc:	ldr	x2, [x19]
    a300:	mov	x8, x22
    a304:	ldr	x20, [x21, #704]
    a308:	mov	x1, x0
    a30c:	mov	x0, x21
    a310:	sub	x20, x20, #0x80
    a314:	mov	x3, x20
    a318:	bl	9abc <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    a31c:	mov	x2, x20
    a320:	mov	x1, x22
    a324:	mov	x0, x19
    a328:	bl	398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    a32c:	mov	x0, x22
    a330:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a334:	ldp	x19, x20, [sp, #16]
    a338:	ldp	x21, x22, [sp, #32]
    a33c:	ldp	x29, x30, [sp], #96
    a340:	ret

000000000000a344 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE>:
    a344:	stp	x29, x30, [sp, #-256]!
    a348:	mov	x29, sp
    a34c:	stp	x21, x22, [sp, #32]
    a350:	add	x21, sp, #0x70
    a354:	ldr	x22, [x0, #704]
    a358:	stp	x19, x20, [sp, #16]
    a35c:	mov	x20, x1
    a360:	mov	x19, x0
    a364:	mov	w1, #0x0                   	// #0
    a368:	sub	x22, x22, #0x80
    a36c:	mov	x0, x20
    a370:	stp	x23, x24, [sp, #48]
    a374:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a378:	add	x24, sp, #0x40
    a37c:	mov	x1, x0
    a380:	mov	x8, x24
    a384:	mov	x2, x22
    a388:	mov	x0, x19
    a38c:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    a390:	add	x23, sp, #0xa0
    a394:	mov	x0, x21
    a398:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a39c:	ldp	w0, w2, [sp, #64]
    a3a0:	ldr	x1, [x19, #696]
    a3a4:	add	x0, x1, x0, lsl #7
    a3a8:	mov	w1, #0x30                  	// #48
    a3ac:	ldr	x0, [x0, #80]
    a3b0:	umaddl	x1, w2, w1, x0
    a3b4:	mov	x0, x23
    a3b8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a3bc:	ldr	x19, [x20]
    a3c0:	ldrb	w0, [x19, #8]
    a3c4:	cmp	w0, #0xb
    a3c8:	b.eq	a42c <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0xe8>  // b.none
    a3cc:	b.hi	a418 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0xd4>  // b.pmore
    a3d0:	cmp	w0, #0x2
    a3d4:	b.eq	a498 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x154>  // b.none
    a3d8:	cmp	w0, #0x3
    a3dc:	b.eq	a4a4 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x160>  // b.none
    a3e0:	bl	0 <_ZN4llvm4dbgsEv>
    a3e4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a3e8:	add	x1, x1, #0x0
    a3ec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a3f0:	mov	x1, x19
    a3f4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a3f8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a3fc:	add	x1, x1, #0x0
    a400:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a404:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a408:	mov	w2, #0x6fd                 	// #1789
    a40c:	add	x1, x1, #0x0
    a410:	mov	x0, #0x0                   	// #0
    a414:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    a418:	cmp	w0, #0xf
    a41c:	b.ne	a3e0 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x9c>  // b.any
    a420:	ldr	x0, [sp, #160]
    a424:	str	x0, [sp, #112]
    a428:	b	a438 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0xf4>
    a42c:	add	x1, x23, #0x8
    a430:	add	x0, x21, #0x8
    a434:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a438:	add	x19, sp, #0xd0
    a43c:	mov	x1, x21
    a440:	mov	x0, x19
    a444:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a448:	mov	x2, x22
    a44c:	mov	x1, x19
    a450:	mov	x0, x20
    a454:	bl	398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    a458:	mov	x0, x19
    a45c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a460:	ldr	w0, [sp, #68]
    a464:	add	w0, w0, #0x1
    a468:	str	w0, [sp, #68]
    a46c:	mov	x0, x23
    a470:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a474:	mov	x0, x21
    a478:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a47c:	mov	x0, x24
    a480:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a484:	ldp	x19, x20, [sp, #16]
    a488:	ldp	x21, x22, [sp, #32]
    a48c:	ldp	x23, x24, [sp, #48]
    a490:	ldp	x29, x30, [sp], #256
    a494:	ret
    a498:	ldr	s0, [sp, #160]
    a49c:	str	s0, [sp, #112]
    a4a0:	b	a438 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0xf4>
    a4a4:	ldr	d0, [sp, #160]
    a4a8:	str	d0, [sp, #112]
    a4ac:	b	a438 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0xf4>

000000000000a4b0 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE>:
    a4b0:	stp	x29, x30, [sp, #-256]!
    a4b4:	mov	x29, sp
    a4b8:	stp	x19, x20, [sp, #16]
    a4bc:	mov	x19, x1
    a4c0:	stp	x21, x22, [sp, #32]
    a4c4:	mov	x21, x0
    a4c8:	add	x22, sp, #0x70
    a4cc:	ldr	x20, [x0, #704]
    a4d0:	stp	x23, x24, [sp, #48]
    a4d4:	add	x23, sp, #0x40
    a4d8:	ldur	x0, [x1, #-48]
    a4dc:	sub	x20, x20, #0x80
    a4e0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a4e4:	mov	x1, x0
    a4e8:	mov	x8, x23
    a4ec:	mov	x2, x20
    a4f0:	mov	x0, x21
    a4f4:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    a4f8:	ldur	x0, [x19, #-24]
    a4fc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a500:	mov	x1, x0
    a504:	mov	x8, x22
    a508:	mov	x2, x20
    a50c:	mov	x0, x21
    a510:	add	x21, sp, #0xa0
    a514:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    a518:	mov	x0, x21
    a51c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a520:	add	x0, x22, #0x8
    a524:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a528:	ldp	x1, x3, [sp, #88]
    a52c:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    a530:	movk	x4, #0xaaab
    a534:	sub	x3, x3, x1
    a538:	asr	x3, x3, #4
    a53c:	mul	x3, x3, x4
    a540:	cmp	x3, w0, uxtw
    a544:	b.ls	a62c <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x17c>  // b.plast
    a548:	ldr	x24, [x19]
    a54c:	mov	w2, w0
    a550:	mov	x0, #0x30                  	// #48
    a554:	ldrb	w3, [x24, #8]
    a558:	cmp	w3, #0x3
    a55c:	b.eq	a61c <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x16c>  // b.none
    a560:	cmp	w3, #0xb
    a564:	b.eq	a5a8 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0xf8>  // b.none
    a568:	cmp	w3, #0x2
    a56c:	b.eq	a60c <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x15c>  // b.none
    a570:	bl	0 <_ZN4llvm4dbgsEv>
    a574:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a578:	add	x1, x1, #0x0
    a57c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a580:	mov	x1, x24
    a584:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a588:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a58c:	add	x1, x1, #0x0
    a590:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a594:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a598:	mov	w2, #0x715                 	// #1813
    a59c:	add	x1, x1, #0x0
    a5a0:	mov	x0, #0x0                   	// #0
    a5a4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    a5a8:	madd	x1, x2, x0, x1
    a5ac:	add	x0, x21, #0x8
    a5b0:	add	x1, x1, #0x8
    a5b4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a5b8:	add	x24, sp, #0xd0
    a5bc:	mov	x1, x21
    a5c0:	mov	x0, x24
    a5c4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a5c8:	mov	x2, x20
    a5cc:	mov	x1, x24
    a5d0:	mov	x0, x19
    a5d4:	bl	398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    a5d8:	mov	x0, x24
    a5dc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a5e0:	mov	x0, x21
    a5e4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a5e8:	mov	x0, x22
    a5ec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a5f0:	mov	x0, x23
    a5f4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a5f8:	ldp	x19, x20, [sp, #16]
    a5fc:	ldp	x21, x22, [sp, #32]
    a600:	ldp	x23, x24, [sp, #48]
    a604:	ldp	x29, x30, [sp], #256
    a608:	ret
    a60c:	mul	x2, x2, x0
    a610:	ldr	s0, [x1, x2]
    a614:	str	s0, [sp, #160]
    a618:	b	a5b8 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x108>
    a61c:	mul	x2, x2, x0
    a620:	ldr	d0, [x1, x2]
    a624:	str	d0, [sp, #160]
    a628:	b	a5b8 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x108>
    a62c:	bl	0 <_ZN4llvm4dbgsEv>
    a630:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a634:	add	x1, x1, #0x0
    a638:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a63c:	b	a5b8 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x108>

000000000000a640 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE>:
    a640:	stp	x29, x30, [sp, #-320]!
    a644:	mov	x29, sp
    a648:	stp	x19, x20, [sp, #16]
    a64c:	mov	x19, x1
    a650:	stp	x21, x22, [sp, #32]
    a654:	mov	x21, x0
    a658:	add	x22, sp, #0x50
    a65c:	ldr	x20, [x0, #704]
    a660:	stp	x23, x24, [sp, #48]
    a664:	add	x23, sp, #0x80
    a668:	ldr	x0, [x1]
    a66c:	stp	x25, x26, [sp, #64]
    a670:	sub	x20, x20, #0x80
    a674:	add	x24, sp, #0xb0
    a678:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a67c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a680:	mov	x25, x0
    a684:	ldur	x0, [x19, #-72]
    a688:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a68c:	mov	x1, x0
    a690:	mov	x8, x22
    a694:	mov	x2, x20
    a698:	mov	x0, x21
    a69c:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    a6a0:	ldur	x0, [x19, #-48]
    a6a4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a6a8:	mov	x1, x0
    a6ac:	mov	x8, x23
    a6b0:	mov	x2, x20
    a6b4:	mov	x0, x21
    a6b8:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    a6bc:	ldur	x0, [x19, #-24]
    a6c0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a6c4:	mov	x1, x0
    a6c8:	mov	x8, x24
    a6cc:	mov	x2, x20
    a6d0:	mov	x0, x21
    a6d4:	add	x21, sp, #0xe0
    a6d8:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    a6dc:	mov	x0, x21
    a6e0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a6e4:	add	x0, x24, #0x8
    a6e8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a6ec:	add	x1, x22, #0x18
    a6f0:	ldr	x26, [x25, #24]
    a6f4:	mov	x25, x0
    a6f8:	add	x0, x21, #0x18
    a6fc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a700:	ldp	x0, x1, [sp, #104]
    a704:	sub	x1, x1, x0
    a708:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    a70c:	movk	x0, #0xaaab
    a710:	asr	x1, x1, #4
    a714:	mul	x1, x1, x0
    a718:	cmp	x1, w25, uxtw
    a71c:	b.hi	a738 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0xf8>  // b.pmore
    a720:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a724:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a728:	add	x1, x1, #0x0
    a72c:	add	x0, x0, #0x0
    a730:	mov	w2, #0x737                 	// #1847
    a734:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    a738:	ldrb	w1, [x26, #8]
    a73c:	and	x2, x25, #0xffffffff
    a740:	mov	x0, #0x30                  	// #48
    a744:	cmp	w1, #0x3
    a748:	b.eq	a7fc <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x1bc>  // b.none
    a74c:	cmp	w1, #0xb
    a750:	b.eq	a774 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x134>  // b.none
    a754:	cmp	w1, #0x2
    a758:	b.eq	a7e8 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x1a8>  // b.none
    a75c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a760:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a764:	add	x1, x1, #0x0
    a768:	add	x0, x0, #0x0
    a76c:	mov	w2, #0x73a                 	// #1850
    a770:	b	a734 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0xf4>
    a774:	ldr	x1, [sp, #248]
    a778:	madd	x0, x2, x0, x1
    a77c:	add	x1, x23, #0x8
    a780:	add	x0, x0, #0x8
    a784:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a788:	add	x25, sp, #0x110
    a78c:	mov	x1, x21
    a790:	mov	x0, x25
    a794:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a798:	mov	x2, x20
    a79c:	mov	x1, x25
    a7a0:	mov	x0, x19
    a7a4:	bl	398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    a7a8:	mov	x0, x25
    a7ac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a7b0:	mov	x0, x21
    a7b4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a7b8:	mov	x0, x24
    a7bc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a7c0:	mov	x0, x23
    a7c4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a7c8:	mov	x0, x22
    a7cc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a7d0:	ldp	x19, x20, [sp, #16]
    a7d4:	ldp	x21, x22, [sp, #32]
    a7d8:	ldp	x23, x24, [sp, #48]
    a7dc:	ldp	x25, x26, [sp, #64]
    a7e0:	ldp	x29, x30, [sp], #320
    a7e4:	ret
    a7e8:	mul	x2, x2, x0
    a7ec:	ldr	s0, [sp, #128]
    a7f0:	ldr	x0, [sp, #248]
    a7f4:	str	s0, [x0, x2]
    a7f8:	b	a788 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x148>
    a7fc:	mul	x2, x2, x0
    a800:	ldr	d0, [sp, #128]
    a804:	ldr	x0, [sp, #248]
    a808:	str	d0, [x0, x2]
    a80c:	b	a788 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x148>

000000000000a810 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE>:
    a810:	stp	x29, x30, [sp, #-352]!
    a814:	mov	x29, sp
    a818:	stp	x19, x20, [sp, #16]
    a81c:	mov	x19, x0
    a820:	mov	x20, x1
    a824:	stp	x21, x22, [sp, #32]
    a828:	add	x22, sp, #0x100
    a82c:	ldr	x21, [x0, #704]
    a830:	stp	x23, x24, [sp, #48]
    a834:	ldr	x0, [x1]
    a838:	stp	x25, x26, [sp, #64]
    a83c:	sub	x21, x21, #0x80
    a840:	stp	x27, x28, [sp, #80]
    a844:	add	x26, sp, #0x70
    a848:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a84c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a850:	mov	x23, x0
    a854:	ldur	x0, [x20, #-72]
    a858:	add	x27, sp, #0xa0
    a85c:	add	x28, sp, #0xd0
    a860:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a864:	mov	x1, x0
    a868:	mov	x8, x26
    a86c:	mov	x2, x21
    a870:	mov	x0, x19
    a874:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    a878:	ldur	x0, [x20, #-48]
    a87c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a880:	mov	x1, x0
    a884:	mov	x8, x27
    a888:	mov	x2, x21
    a88c:	mov	x0, x19
    a890:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    a894:	ldur	x0, [x20, #-24]
    a898:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a89c:	mov	x1, x0
    a8a0:	mov	x8, x28
    a8a4:	mov	x2, x21
    a8a8:	mov	x0, x19
    a8ac:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    a8b0:	mov	x0, x22
    a8b4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a8b8:	ldp	x1, x2, [sp, #184]
    a8bc:	ldp	x0, x19, [sp, #136]
    a8c0:	ldr	x3, [sp, #232]
    a8c4:	sub	x2, x2, x1
    a8c8:	ldr	x1, [sp, #240]
    a8cc:	sub	x19, x19, x0
    a8d0:	asr	x2, x2, #4
    a8d4:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    a8d8:	sub	x1, x1, x3
    a8dc:	movk	x0, #0xaaab
    a8e0:	asr	x19, x19, #4
    a8e4:	asr	x1, x1, #4
    a8e8:	mul	w2, w2, w0
    a8ec:	ldr	x23, [x23, #24]
    a8f0:	mul	w19, w19, w0
    a8f4:	mul	x1, x1, x0
    a8f8:	add	x0, x22, #0x18
    a8fc:	str	w2, [sp, #96]
    a900:	mov	w24, w1
    a904:	mov	w1, w1
    a908:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a90c:	ldrb	w0, [x23, #8]
    a910:	ldr	w2, [sp, #96]
    a914:	cmp	w0, #0x3
    a918:	b.eq	aa5c <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x24c>  // b.none
    a91c:	cmp	w0, #0xb
    a920:	b.eq	a944 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x134>  // b.none
    a924:	cmp	w0, #0x2
    a928:	b.eq	a9e0 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x1d0>  // b.none
    a92c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a930:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a934:	add	x1, x1, #0x0
    a938:	add	x0, x0, #0x0
    a93c:	mov	w2, #0x75f                 	// #1887
    a940:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    a944:	add	w0, w19, w2
    a948:	mov	x23, #0x0                   	// #0
    a94c:	mov	x25, #0x30                  	// #48
    a950:	str	w0, [sp, #96]
    a954:	cmp	w24, w23
    a958:	b.ls	aad8 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x2c8>  // b.plast
    a95c:	mul	x2, x23, x25
    a960:	ldr	x0, [sp, #232]
    a964:	str	x2, [sp, #104]
    a968:	add	x0, x0, x2
    a96c:	add	x0, x0, #0x8
    a970:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a974:	cmp	w19, w0
    a978:	ldr	x2, [sp, #104]
    a97c:	b.ls	a9a8 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x198>  // b.plast
    a980:	ldr	x1, [sp, #136]
    a984:	and	x0, x0, #0xffffffff
    a988:	madd	x1, x0, x25, x1
    a98c:	ldr	x0, [sp, #280]
    a990:	add	x1, x1, #0x8
    a994:	add	x23, x23, #0x1
    a998:	add	x0, x0, x2
    a99c:	add	x0, x0, #0x8
    a9a0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a9a4:	b	a954 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x144>
    a9a8:	ldr	w1, [sp, #96]
    a9ac:	cmp	w1, w0
    a9b0:	b.ls	a9c8 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x1b8>  // b.plast
    a9b4:	sub	w0, w0, w19
    a9b8:	ldr	x1, [sp, #184]
    a9bc:	umull	x0, w0, w25
    a9c0:	add	x1, x1, x0
    a9c4:	b	a98c <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x17c>
    a9c8:	mov	w2, #0x76e                 	// #1902
    a9cc:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a9d0:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a9d4:	add	x1, x1, #0x0
    a9d8:	add	x0, x0, #0x0
    a9dc:	b	a940 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x130>
    a9e0:	add	w23, w19, w2
    a9e4:	mov	x25, #0x0                   	// #0
    a9e8:	mov	x1, #0x30                  	// #48
    a9ec:	cmp	w24, w25
    a9f0:	b.ls	aad8 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x2c8>  // b.plast
    a9f4:	mul	x2, x25, x1
    a9f8:	ldr	x0, [sp, #232]
    a9fc:	str	x2, [sp, #96]
    aa00:	add	x0, x0, x2
    aa04:	add	x0, x0, #0x8
    aa08:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    aa0c:	mov	x1, #0x30                  	// #48
    aa10:	cmp	w19, w0
    aa14:	ldr	x2, [sp, #96]
    aa18:	b.ls	aa3c <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x22c>  // b.plast
    aa1c:	and	x0, x0, #0xffffffff
    aa20:	ldr	x3, [sp, #136]
    aa24:	mul	x0, x0, x1
    aa28:	ldr	s0, [x3, x0]
    aa2c:	add	x25, x25, #0x1
    aa30:	ldr	x0, [sp, #280]
    aa34:	str	s0, [x0, x2]
    aa38:	b	a9ec <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x1dc>
    aa3c:	cmp	w23, w0
    aa40:	b.ls	aa54 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x244>  // b.plast
    aa44:	sub	w0, w0, w19
    aa48:	ldr	x3, [sp, #184]
    aa4c:	umull	x0, w0, w1
    aa50:	b	aa28 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x218>
    aa54:	mov	w2, #0x779                 	// #1913
    aa58:	b	a9cc <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x1bc>
    aa5c:	add	w23, w19, w2
    aa60:	mov	x25, #0x0                   	// #0
    aa64:	mov	x1, #0x30                  	// #48
    aa68:	cmp	w24, w25
    aa6c:	b.ls	aad8 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x2c8>  // b.plast
    aa70:	mul	x2, x25, x1
    aa74:	ldr	x0, [sp, #232]
    aa78:	str	x2, [sp, #96]
    aa7c:	add	x0, x0, x2
    aa80:	add	x0, x0, #0x8
    aa84:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    aa88:	mov	x1, #0x30                  	// #48
    aa8c:	cmp	w19, w0
    aa90:	ldr	x2, [sp, #96]
    aa94:	b.ls	aab8 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x2a8>  // b.plast
    aa98:	and	x0, x0, #0xffffffff
    aa9c:	ldr	x3, [sp, #136]
    aaa0:	mul	x0, x0, x1
    aaa4:	ldr	d0, [x3, x0]
    aaa8:	add	x25, x25, #0x1
    aaac:	ldr	x0, [sp, #280]
    aab0:	str	d0, [x0, x2]
    aab4:	b	aa68 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x258>
    aab8:	cmp	w23, w0
    aabc:	b.ls	aad0 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x2c0>  // b.plast
    aac0:	sub	w0, w0, w19
    aac4:	ldr	x3, [sp, #184]
    aac8:	umull	x0, w0, w1
    aacc:	b	aaa4 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x294>
    aad0:	mov	w2, #0x785                 	// #1925
    aad4:	b	a9cc <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x1bc>
    aad8:	add	x19, sp, #0x130
    aadc:	mov	x1, x22
    aae0:	mov	x0, x19
    aae4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    aae8:	mov	x2, x21
    aaec:	mov	x1, x19
    aaf0:	mov	x0, x20
    aaf4:	bl	398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    aaf8:	mov	x0, x19
    aafc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ab00:	mov	x0, x22
    ab04:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ab08:	mov	x0, x28
    ab0c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ab10:	mov	x0, x27
    ab14:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ab18:	mov	x0, x26
    ab1c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ab20:	ldp	x19, x20, [sp, #16]
    ab24:	ldp	x21, x22, [sp, #32]
    ab28:	ldp	x23, x24, [sp, #48]
    ab2c:	ldp	x25, x26, [sp, #64]
    ab30:	ldp	x27, x28, [sp, #80]
    ab34:	ldp	x29, x30, [sp], #352
    ab38:	ret

000000000000ab3c <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE>:
    ab3c:	stp	x29, x30, [sp, #-208]!
    ab40:	mov	x29, sp
    ab44:	stp	x19, x20, [sp, #16]
    ab48:	mov	x19, x0
    ab4c:	mov	x20, x1
    ab50:	mov	x0, x20
    ab54:	mov	w1, #0x0                   	// #0
    ab58:	stp	x21, x22, [sp, #32]
    ab5c:	add	x21, sp, #0x40
    ab60:	stp	x23, x24, [sp, #48]
    ab64:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ab68:	add	x23, sp, #0x70
    ab6c:	ldr	x22, [x19, #704]
    ab70:	mov	x24, x0
    ab74:	mov	x0, x21
    ab78:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ab7c:	sub	x22, x22, #0x80
    ab80:	mov	x0, x19
    ab84:	mov	x2, x22
    ab88:	mov	x1, x24
    ab8c:	mov	x8, x23
    ab90:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    ab94:	ldr	w2, [x20, #64]
    ab98:	mov	x19, x23
    ab9c:	ldr	x1, [x20, #56]
    aba0:	mov	x0, #0x0                   	// #0
    aba4:	mov	w3, #0x30                  	// #48
    aba8:	cmp	w2, w0
    abac:	b.ls	abc4 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x88>  // b.plast
    abb0:	ldr	w4, [x1, x0, lsl #2]
    abb4:	add	x0, x0, #0x1
    abb8:	ldr	x19, [x19, #24]
    abbc:	umaddl	x19, w4, w3, x19
    abc0:	b	aba8 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x6c>
    abc4:	ldr	x0, [x24]
    abc8:	mov	w2, w2
    abcc:	bl	0 <_ZN4llvm16ExtractValueInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIjEE>
    abd0:	ldrb	w0, [x0, #8]
    abd4:	sub	w0, w0, #0x2
    abd8:	cmp	w0, #0xe
    abdc:	b.hi	abf8 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0xbc>  // b.pmore
    abe0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    abe4:	add	x1, x1, #0x0
    abe8:	ldrb	w0, [x1, w0, uxtw]
    abec:	adr	x1, abf8 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0xbc>
    abf0:	add	x0, x1, w0, sxtb #2
    abf4:	br	x0
    abf8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    abfc:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ac00:	add	x1, x1, #0x0
    ac04:	add	x0, x0, #0x0
    ac08:	mov	w2, #0x79e                 	// #1950
    ac0c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    ac10:	add	x1, x19, #0x8
    ac14:	add	x0, x21, #0x8
    ac18:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ac1c:	add	x19, sp, #0xa0
    ac20:	mov	x1, x21
    ac24:	mov	x0, x19
    ac28:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ac2c:	mov	x2, x22
    ac30:	mov	x1, x19
    ac34:	mov	x0, x20
    ac38:	bl	398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    ac3c:	mov	x0, x19
    ac40:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ac44:	mov	x0, x23
    ac48:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ac4c:	mov	x0, x21
    ac50:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ac54:	ldp	x19, x20, [sp, #16]
    ac58:	ldp	x21, x22, [sp, #32]
    ac5c:	ldp	x23, x24, [sp, #48]
    ac60:	ldp	x29, x30, [sp], #208
    ac64:	ret
    ac68:	ldr	s0, [x19]
    ac6c:	str	s0, [sp, #64]
    ac70:	b	ac1c <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0xe0>
    ac74:	ldr	d0, [x19]
    ac78:	str	d0, [sp, #64]
    ac7c:	b	ac1c <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0xe0>
    ac80:	add	x1, x19, #0x18
    ac84:	add	x0, x21, #0x18
    ac88:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ac8c:	b	ac1c <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0xe0>
    ac90:	ldr	x0, [x19]
    ac94:	str	x0, [sp, #64]
    ac98:	b	ac1c <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0xe0>

000000000000ac9c <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE>:
    ac9c:	stp	x29, x30, [sp, #-272]!
    aca0:	mov	x29, sp
    aca4:	stp	x19, x20, [sp, #16]
    aca8:	mov	x19, x0
    acac:	mov	x20, x1
    acb0:	stp	x21, x22, [sp, #32]
    acb4:	add	x22, sp, #0x80
    acb8:	ldr	x21, [x0, #704]
    acbc:	stp	x23, x24, [sp, #48]
    acc0:	add	x24, sp, #0x50
    acc4:	ldur	x0, [x1, #-48]
    acc8:	sub	x21, x21, #0x80
    accc:	str	x25, [sp, #64]
    acd0:	add	x23, sp, #0xb0
    acd4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    acd8:	mov	x1, x0
    acdc:	mov	x8, x24
    ace0:	mov	x2, x21
    ace4:	mov	x25, x0
    ace8:	mov	x0, x19
    acec:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    acf0:	ldur	x0, [x20, #-24]
    acf4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    acf8:	mov	x1, x0
    acfc:	mov	x2, x21
    ad00:	mov	x8, x22
    ad04:	mov	x0, x19
    ad08:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    ad0c:	mov	x1, x24
    ad10:	mov	x0, x23
    ad14:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ad18:	mov	x19, x23
    ad1c:	ldr	w2, [x20, #64]
    ad20:	mov	x0, #0x0                   	// #0
    ad24:	ldr	x1, [x20, #56]
    ad28:	mov	w3, #0x30                  	// #48
    ad2c:	cmp	w2, w0
    ad30:	b.ls	ad48 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0xac>  // b.plast
    ad34:	ldr	w4, [x1, x0, lsl #2]
    ad38:	add	x0, x0, #0x1
    ad3c:	ldr	x19, [x19, #24]
    ad40:	umaddl	x19, w4, w3, x19
    ad44:	b	ad2c <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x90>
    ad48:	ldr	x0, [x25]
    ad4c:	mov	w2, w2
    ad50:	bl	0 <_ZN4llvm16ExtractValueInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIjEE>
    ad54:	ldrb	w0, [x0, #8]
    ad58:	sub	w0, w0, #0x2
    ad5c:	cmp	w0, #0xe
    ad60:	b.hi	ad7c <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0xe0>  // b.pmore
    ad64:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ad68:	add	x1, x1, #0x0
    ad6c:	ldrb	w0, [x1, w0, uxtw]
    ad70:	adr	x1, ad7c <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0xe0>
    ad74:	add	x0, x1, w0, sxtb #2
    ad78:	br	x0
    ad7c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ad80:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ad84:	add	x1, x1, #0x0
    ad88:	add	x0, x0, #0x0
    ad8c:	mov	w2, #0x7cd                 	// #1997
    ad90:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    ad94:	add	x1, x22, #0x8
    ad98:	add	x0, x19, #0x8
    ad9c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ada0:	add	x19, sp, #0xe0
    ada4:	mov	x1, x23
    ada8:	mov	x0, x19
    adac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    adb0:	mov	x2, x21
    adb4:	mov	x1, x19
    adb8:	mov	x0, x20
    adbc:	bl	398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    adc0:	mov	x0, x19
    adc4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    adc8:	mov	x0, x23
    adcc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    add0:	mov	x0, x22
    add4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    add8:	mov	x0, x24
    addc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ade0:	ldp	x19, x20, [sp, #16]
    ade4:	ldp	x21, x22, [sp, #32]
    ade8:	ldp	x23, x24, [sp, #48]
    adec:	ldr	x25, [sp, #64]
    adf0:	ldp	x29, x30, [sp], #272
    adf4:	ret
    adf8:	ldr	s0, [sp, #128]
    adfc:	str	s0, [x19]
    ae00:	b	ada0 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x104>
    ae04:	ldr	d0, [sp, #128]
    ae08:	str	d0, [x19]
    ae0c:	b	ada0 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x104>
    ae10:	add	x1, x22, #0x18
    ae14:	add	x0, x19, #0x18
    ae18:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ae1c:	b	ada0 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x104>
    ae20:	ldr	x0, [sp, #128]
    ae24:	str	x0, [x19]
    ae28:	b	ada0 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x104>

000000000000ae2c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE>:
    ae2c:	stp	x29, x30, [sp, #-192]!
    ae30:	mov	x29, sp
    ae34:	stp	x19, x20, [sp, #16]
    ae38:	mov	x19, x0
    ae3c:	ldr	x20, [x0, #704]
    ae40:	stp	x23, x24, [sp, #48]
    ae44:	add	x23, sp, #0x58
    ae48:	mov	x0, x23
    ae4c:	stp	x21, x22, [sp, #32]
    ae50:	sub	x21, x20, #0x80
    ae54:	stp	x25, x26, [sp, #64]
    ae58:	str	x1, [sp, #88]
    ae5c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ae60:	mov	x22, x0
    ae64:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ae68:	tst	w0, #0xff
    ae6c:	b.eq	afc0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x194>  // b.none
    ae70:	mov	x0, x22
    ae74:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ae78:	mov	x22, x0
    ae7c:	cbz	x0, afc0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x194>
    ae80:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
    ae84:	tst	w0, #0xff
    ae88:	b.eq	afc0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x194>  // b.none
    ae8c:	ldr	w0, [x22, #36]
    ae90:	cmp	w0, #0x106
    ae94:	b.eq	af58 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x12c>  // b.none
    ae98:	b.hi	aef4 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0xc8>  // b.pmore
    ae9c:	cbz	w0, afc0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x194>
    aea0:	cmp	w0, #0x105
    aea4:	b.eq	af70 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x144>  // b.none
    aea8:	ldr	x0, [sp, #88]
    aeac:	ands	x0, x0, #0xfffffffffffffff8
    aeb0:	add	x22, x0, #0x18
    aeb4:	csel	x22, x22, xzr, ne  // ne = any
    aeb8:	ldr	x24, [x0, #40]
    aebc:	ldr	x23, [x24, #48]
    aec0:	cmp	x23, x22
    aec4:	b.eq	afac <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x180>  // b.none
    aec8:	ldr	x21, [x22]
    aecc:	and	x21, x21, #0xfffffffffffffff8
    aed0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    aed4:	mov	x1, x0
    aed8:	ldr	x0, [x19, #688]
    aedc:	bl	0 <_ZN4llvm17IntrinsicLowering18LowerIntrinsicCallEPNS_8CallInstE>
    aee0:	cmp	x23, x22
    aee4:	b.ne	afb4 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x188>  // b.any
    aee8:	ldr	x0, [x24, #48]
    aeec:	stur	x0, [x20, #-112]
    aef0:	b	af58 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x12c>
    aef4:	cmp	w0, #0x107
    aef8:	b.ne	aea8 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x7c>  // b.any
    aefc:	add	x20, sp, #0x60
    af00:	mov	x0, x20
    af04:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    af08:	ldr	x1, [x19, #696]
    af0c:	ldr	x0, [x19, #704]
    af10:	add	x19, sp, #0x90
    af14:	ldr	x22, [sp, #88]
    af18:	sub	x0, x0, x1
    af1c:	mov	x1, x20
    af20:	asr	x0, x0, #7
    af24:	and	x22, x22, #0xfffffffffffffff8
    af28:	sub	w0, w0, #0x1
    af2c:	stp	w0, wzr, [sp, #96]
    af30:	mov	x0, x19
    af34:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    af38:	mov	x2, x21
    af3c:	mov	x1, x19
    af40:	mov	x0, x22
    af44:	bl	398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    af48:	mov	x0, x19
    af4c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    af50:	mov	x0, x20
    af54:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    af58:	ldp	x19, x20, [sp, #16]
    af5c:	ldp	x21, x22, [sp, #32]
    af60:	ldp	x23, x24, [sp, #48]
    af64:	ldp	x25, x26, [sp, #64]
    af68:	ldp	x29, x30, [sp], #192
    af6c:	ret
    af70:	mov	x0, x23
    af74:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    af78:	ldr	x1, [x0]
    af7c:	add	x20, sp, #0x90
    af80:	ldr	x22, [sp, #88]
    af84:	mov	x8, x20
    af88:	mov	x2, x21
    af8c:	mov	x0, x19
    af90:	and	x22, x22, #0xfffffffffffffff8
    af94:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    af98:	mov	x2, x21
    af9c:	mov	x1, x20
    afa0:	mov	x0, x22
    afa4:	bl	398 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    afa8:	b	af50 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x124>
    afac:	mov	x21, x23
    afb0:	b	aed0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0xa4>
    afb4:	stur	x21, [x20, #-112]
    afb8:	ldr	x0, [x21, #8]
    afbc:	b	aeec <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0xc0>
    afc0:	ldr	x0, [sp, #88]
    afc4:	stur	x0, [x20, #-104]
    afc8:	add	x22, x21, #0x18
    afcc:	stp	xzr, xzr, [sp, #96]
    afd0:	mov	x0, x22
    afd4:	str	xzr, [sp, #112]
    afd8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    afdc:	ldr	x25, [sp, #96]
    afe0:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    afe4:	ldr	x1, [sp, #112]
    afe8:	movk	x2, #0xaaab
    afec:	mov	w20, w0
    aff0:	mov	w0, w0
    aff4:	sub	x1, x1, x25
    aff8:	asr	x1, x1, #4
    affc:	mul	x1, x1, x2
    b000:	cmp	x1, w20, uxtw
    b004:	b.cs	b04c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x220>  // b.hs, b.nlast
    b008:	ldr	x26, [sp, #104]
    b00c:	bl	d0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE11_M_allocateEm.isra.0>
    b010:	mov	x2, x0
    b014:	mov	x23, x0
    b018:	mov	x1, x26
    b01c:	mov	x0, x25
    b020:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b024:	sub	x24, x26, x25
    b028:	ldp	x0, x1, [sp, #96]
    b02c:	add	x24, x23, x24
    b030:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b034:	ldr	x0, [sp, #96]
    b038:	bl	54 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
    b03c:	stp	x23, x24, [sp, #96]
    b040:	mov	w2, #0x30                  	// #48
    b044:	umaddl	x20, w20, w2, x23
    b048:	str	x20, [sp, #112]
    b04c:	mov	x0, x22
    b050:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b054:	add	x25, sp, #0x60
    b058:	mov	x23, x0
    b05c:	add	x20, sp, #0x90
    b060:	mov	x0, x22
    b064:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b068:	mov	x24, x0
    b06c:	cmp	x23, x24
    b070:	b.eq	b0a0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x274>  // b.none
    b074:	ldr	x1, [x23], #24
    b078:	mov	x8, x20
    b07c:	mov	x2, x21
    b080:	mov	x0, x19
    b084:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    b088:	mov	x1, x20
    b08c:	mov	x0, x25
    b090:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b094:	mov	x0, x20
    b098:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b09c:	b	b06c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x240>
    b0a0:	mov	x0, x22
    b0a4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b0a8:	mov	x8, x20
    b0ac:	mov	x2, x21
    b0b0:	mov	x1, x0
    b0b4:	mov	x0, x19
    b0b8:	bl	508c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    b0bc:	ldp	x2, x0, [sp, #96]
    b0c0:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    b0c4:	movk	x3, #0xaaab
    b0c8:	ldr	x1, [sp, #144]
    b0cc:	sub	x0, x0, x2
    b0d0:	asr	x0, x0, #4
    b0d4:	mul	x3, x0, x3
    b0d8:	mov	x0, x19
    b0dc:	bl	6e68 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE>
    b0e0:	mov	x0, x20
    b0e4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b0e8:	mov	x0, x25
    b0ec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b0f0:	b	af58 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x12c>

000000000000b0f4 <_ZN4llvm11Interpreter3runEv>:
    b0f4:	stp	x29, x30, [sp, #-64]!
    b0f8:	mov	x29, sp
    b0fc:	stp	x23, x24, [sp, #48]
    b100:	adrp	x23, 0 <_ZN4llvm9DebugFlagE>
    b104:	ldr	x23, [x23]
    b108:	stp	x21, x22, [sp, #32]
    b10c:	adrp	x22, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b110:	add	x22, x22, #0x0
    b114:	mov	x21, x0
    b118:	add	x24, x22, #0xc8
    b11c:	stp	x19, x20, [sp, #16]
    b120:	ldr	x1, [x21, #696]
    b124:	ldr	x0, [x21, #704]
    b128:	cmp	x0, x1
    b12c:	b.eq	b1dc <_ZN4llvm11Interpreter3runEv+0xe8>  // b.none
    b130:	ldur	x1, [x0, #-112]
    b134:	ldr	x2, [x1, #8]
    b138:	stur	x2, [x0, #-112]
    b13c:	ldr	x0, [x1]
    b140:	tst	w0, #0x4
    b144:	b.eq	b14c <_ZN4llvm11Interpreter3runEv+0x58>  // b.none
    b148:	bl	2c <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    b14c:	sub	x20, x1, #0x18
    b150:	add	x0, x22, #0xe0
    b154:	ldxr	w1, [x0]
    b158:	add	w1, w1, #0x1
    b15c:	stxr	w2, w1, [x0]
    b160:	cbnz	w2, b154 <_ZN4llvm11Interpreter3runEv+0x60>
    b164:	add	x0, x22, #0xe4
    b168:	ldarb	w0, [x0]
    b16c:	tst	w0, #0xff
    b170:	b.ne	b17c <_ZN4llvm11Interpreter3runEv+0x88>  // b.any
    b174:	mov	x0, x24
    b178:	bl	0 <_ZN4llvm17TrackingStatistic17RegisterStatisticEv>
    b17c:	ldrb	w0, [x23]
    b180:	cbz	w0, b1cc <_ZN4llvm11Interpreter3runEv+0xd8>
    b184:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b188:	add	x0, x0, #0x0
    b18c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    b190:	tst	w0, #0xff
    b194:	b.eq	b1cc <_ZN4llvm11Interpreter3runEv+0xd8>  // b.none
    b198:	bl	0 <_ZN4llvm4dbgsEv>
    b19c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b1a0:	add	x1, x1, #0x0
    b1a4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b1a8:	mov	x1, x0
    b1ac:	mov	w2, #0x0                   	// #0
    b1b0:	mov	x19, x0
    b1b4:	mov	x0, x20
    b1b8:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    b1bc:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b1c0:	mov	x0, x19
    b1c4:	add	x1, x1, #0x0
    b1c8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b1cc:	mov	x1, x20
    b1d0:	mov	x0, x21
    b1d4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b1d8:	b	b120 <_ZN4llvm11Interpreter3runEv+0x2c>
    b1dc:	ldp	x19, x20, [sp, #16]
    b1e0:	ldp	x21, x22, [sp, #32]
    b1e4:	ldp	x23, x24, [sp, #48]
    b1e8:	ldp	x29, x30, [sp], #64
    b1ec:	ret

Disassembly of section .text._ZNSt17_Function_handlerIFvRKbEN4llvm2cl3optIbLb0ENS4_6parserIbEEE8CallbackMUlS1_E_EE9_M_invokeERKSt9_Any_dataS1_:

0000000000000000 <_ZNSt17_Function_handlerIFvRKbEN4llvm2cl3optIbLb0ENS4_6parserIbEEE8CallbackMUlS1_E_EE9_M_invokeERKSt9_Any_dataS1_>:
   0:	ret

Disassembly of section .text._ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIbLb0ENS2_6parserIbEEE8CallbackMUlRKbE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation:

0000000000000000 <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIbLb0ENS2_6parserIbEEE8CallbackMUlRKbE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation>:
   0:	cmp	w2, #0x1
   4:	b.ne	c <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIbLb0ENS2_6parserIbEEE8CallbackMUlRKbE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0xc>  // b.any
   8:	str	x1, [x0]
   c:	mov	w0, #0x0                   	// #0
  10:	ret

Disassembly of section .text._ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE:

0000000000000000 <_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE>:
   0:	mov	x2, x0
   4:	ldrb	w0, [x1, #9]
   8:	cbz	w0, 24 <_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE+0x24>
   c:	ldrb	w0, [x2, #9]
  10:	cbz	w0, 24 <_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE+0x24>
  14:	ldrb	w0, [x1, #8]
  18:	ldrb	w2, [x2, #8]
  1c:	cmp	w2, w0
  20:	cset	w0, ne  // ne = any
  24:	ret

Disassembly of section .text._ZNK4llvm8TypeSize12getFixedSizeEv:

0000000000000000 <_ZNK4llvm8TypeSize12getFixedSizeEv>:
   0:	ldrb	w1, [x0, #8]
   4:	cbz	w1, 30 <_ZNK4llvm8TypeSize12getFixedSizeEv+0x30>
   8:	stp	x29, x30, [sp, #-16]!
   c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv>
  10:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv>
  14:	mov	x29, sp
  18:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv>
  1c:	add	x3, x3, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0x7d                  	// #125
  2c:	bl	0 <__assert_fail>
  30:	ldr	x0, [x0]
  34:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	str	x21, [sp, #32]
  14:	mov	x21, x1
  18:	cbz	x1, 54 <_ZN4llvm11raw_ostreamlsEPKc+0x54>
  1c:	mov	x0, x1
  20:	bl	0 <strlen>
  24:	mov	x20, x0
  28:	ldp	x1, x0, [x19, #16]
  2c:	sub	x1, x1, x0
  30:	cmp	x1, x20
  34:	b.cs	5c <_ZN4llvm11raw_ostreamlsEPKc+0x5c>  // b.hs, b.nlast
  38:	mov	x2, x20
  3c:	mov	x1, x21
  40:	mov	x0, x19
  44:	ldp	x19, x20, [sp, #16]
  48:	ldr	x21, [sp, #32]
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  54:	mov	x20, #0x0                   	// #0
  58:	b	28 <_ZN4llvm11raw_ostreamlsEPKc+0x28>
  5c:	cbz	x20, 78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  60:	mov	x2, x20
  64:	mov	x1, x21
  68:	bl	0 <memcpy>
  6c:	ldr	x0, [x19, #24]
  70:	add	x0, x0, x20
  74:	str	x0, [x19, #24]
  78:	mov	x0, x19
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldr	x21, [sp, #32]
  84:	ldp	x29, x30, [sp], #48
  88:	ret

Disassembly of section .text._ZN4llvm5APInt15clearUnusedBitsEv:

0000000000000000 <_ZN4llvm5APInt15clearUnusedBitsEv>:
   0:	ldr	w1, [x0, #8]
   4:	mov	x2, #0xffffffffffffffff    	// #-1
   8:	neg	w3, w1
   c:	cmp	w1, #0x40
  10:	lsr	x3, x2, x3
  14:	ldr	x2, [x0]
  18:	b.hi	28 <_ZN4llvm5APInt15clearUnusedBitsEv+0x28>  // b.pmore
  1c:	and	x2, x2, x3
  20:	str	x2, [x0]
  24:	ret
  28:	mov	w1, w1
  2c:	add	x1, x1, #0x3f
  30:	lsr	x1, x1, #6
  34:	sub	w1, w1, #0x1
  38:	lsl	x1, x1, #3
  3c:	ldr	x4, [x2, x1]
  40:	and	x3, x4, x3
  44:	str	x3, [x2, x1]
  48:	b	24 <_ZN4llvm5APInt15clearUnusedBitsEv+0x24>

Disassembly of section .text._ZN4llvm5APIntC2ERKS0_:

0000000000000000 <_ZN4llvm5APIntC1ERKS0_>:
   0:	ldr	w4, [x1, #8]
   4:	mov	x2, x0
   8:	str	w4, [x0, #8]
   c:	cmp	w4, #0x40
  10:	b.hi	20 <_ZN4llvm5APIntC1ERKS0_+0x20>  // b.pmore
  14:	ldr	x0, [x1]
  18:	str	x0, [x2]
  1c:	ret
  20:	b	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>

Disassembly of section .text._ZN4llvm5APIntD2Ev:

0000000000000000 <_ZN4llvm5APIntD1Ev>:
   0:	ldr	w1, [x0, #8]
   4:	cmp	w1, #0x40
   8:	b.ls	18 <_ZN4llvm5APIntD1Ev+0x18>  // b.plast
   c:	ldr	x0, [x0]
  10:	cbz	x0, 18 <_ZN4llvm5APIntD1Ev+0x18>
  14:	b	0 <_ZdaPv>
  18:	ret

Disassembly of section .text._ZN4llvm5APIntaSERKS0_:

0000000000000000 <_ZN4llvm5APIntaSERKS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	ldr	w2, [x0, #8]
   c:	str	x19, [sp, #16]
  10:	mov	x19, x0
  14:	cmp	w2, #0x40
  18:	b.hi	40 <_ZN4llvm5APIntaSERKS0_+0x40>  // b.pmore
  1c:	ldr	w2, [x1, #8]
  20:	cmp	w2, #0x40
  24:	b.hi	40 <_ZN4llvm5APIntaSERKS0_+0x40>  // b.pmore
  28:	ldr	x1, [x1]
  2c:	str	x1, [x0]
  30:	str	w2, [x0, #8]
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	b	0 <_ZN4llvm5APIntaSERKS0_>
  40:	mov	x0, x19
  44:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
  48:	mov	x0, x19
  4c:	ldr	x19, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	ret

Disassembly of section .text._ZN4llvm5APIntaSEOS0_:

0000000000000000 <_ZN4llvm5APIntaSEOS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	b.ne	34 <_ZN4llvm5APIntaSEOS0_+0x34>  // b.any
  14:	adrp	x3, 0 <_ZN4llvm5APIntaSEOS0_>
  18:	adrp	x1, 0 <_ZN4llvm5APIntaSEOS0_>
  1c:	adrp	x0, 0 <_ZN4llvm5APIntaSEOS0_>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x302                 	// #770
  30:	bl	0 <__assert_fail>
  34:	mov	x19, x0
  38:	ldr	w0, [x0, #8]
  3c:	mov	x20, x1
  40:	cmp	w0, #0x40
  44:	b.ls	54 <_ZN4llvm5APIntaSEOS0_+0x54>  // b.plast
  48:	ldr	x0, [x19]
  4c:	cbz	x0, 54 <_ZN4llvm5APIntaSEOS0_+0x54>
  50:	bl	0 <_ZdaPv>
  54:	ldr	x0, [x20]
  58:	str	x0, [x19]
  5c:	ldr	w0, [x20, #8]
  60:	str	w0, [x19, #8]
  64:	mov	x0, x19
  68:	str	wzr, [x20, #8]
  6c:	ldp	x19, x20, [sp, #16]
  70:	ldp	x29, x30, [sp], #32
  74:	ret

Disassembly of section .text._ZN4llvm5APIntoRERKS0_:

0000000000000000 <_ZN4llvm5APIntoRERKS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	ldr	w3, [x0, #8]
   c:	ldr	w4, [x1, #8]
  10:	str	x19, [sp, #16]
  14:	cmp	w3, w4
  18:	b.eq	3c <_ZN4llvm5APIntoRERKS0_+0x3c>  // b.none
  1c:	adrp	x3, 0 <_ZN4llvm5APIntoRERKS0_>
  20:	adrp	x1, 0 <_ZN4llvm5APIntoRERKS0_>
  24:	adrp	x0, 0 <_ZN4llvm5APIntoRERKS0_>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x347                 	// #839
  38:	bl	0 <__assert_fail>
  3c:	mov	x19, x0
  40:	cmp	w3, #0x40
  44:	b.hi	68 <_ZN4llvm5APIntoRERKS0_+0x68>  // b.pmore
  48:	ldr	x1, [x1]
  4c:	ldr	x0, [x0]
  50:	orr	x0, x0, x1
  54:	str	x0, [x19]
  58:	mov	x0, x19
  5c:	ldr	x19, [sp, #16]
  60:	ldp	x29, x30, [sp], #32
  64:	ret
  68:	bl	0 <_ZN4llvm5APInt16OrAssignSlowCaseERKS0_>
  6c:	b	58 <_ZN4llvm5APIntoRERKS0_+0x58>

Disassembly of section .text._ZN4llvm5APIntlSEj:

0000000000000000 <_ZN4llvm5APIntlSEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	ldr	w3, [x0, #8]
   c:	str	x19, [sp, #16]
  10:	cmp	w3, w1
  14:	b.cs	38 <_ZN4llvm5APIntlSEj+0x38>  // b.hs, b.nlast
  18:	adrp	x3, 0 <_ZN4llvm5APIntlSEj>
  1c:	adrp	x1, 0 <_ZN4llvm5APIntlSEj>
  20:	adrp	x0, 0 <_ZN4llvm5APIntlSEj>
  24:	add	x3, x3, #0x0
  28:	add	x1, x1, #0x0
  2c:	add	x0, x0, #0x0
  30:	mov	w2, #0x39a                 	// #922
  34:	bl	0 <__assert_fail>
  38:	mov	x19, x0
  3c:	cmp	w3, #0x40
  40:	b.hi	74 <_ZN4llvm5APIntlSEj+0x74>  // b.pmore
  44:	mov	w2, w1
  48:	cmp	w3, w1
  4c:	b.eq	6c <_ZN4llvm5APIntlSEj+0x6c>  // b.none
  50:	ldr	x1, [x0]
  54:	lsl	x2, x1, x2
  58:	str	x2, [x19]
  5c:	mov	x0, x19
  60:	ldr	x19, [sp, #16]
  64:	ldp	x29, x30, [sp], #32
  68:	b	0 <_ZN4llvm5APIntlSEj>
  6c:	mov	x2, #0x0                   	// #0
  70:	b	58 <_ZN4llvm5APIntlSEj+0x58>
  74:	bl	0 <_ZN4llvm5APInt11shlSlowCaseEj>
  78:	mov	x0, x19
  7c:	ldr	x19, [sp, #16]
  80:	ldp	x29, x30, [sp], #32
  84:	ret

Disassembly of section .text._ZN4llvm5APInt11ashrInPlaceEj:

0000000000000000 <_ZN4llvm5APInt11ashrInPlaceEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w5, [x0, #8]
   c:	cmp	w5, w1
  10:	b.cs	34 <_ZN4llvm5APInt11ashrInPlaceEj+0x34>  // b.hs, b.nlast
  14:	adrp	x3, 0 <_ZN4llvm5APInt11ashrInPlaceEj>
  18:	adrp	x1, 0 <_ZN4llvm5APInt11ashrInPlaceEj>
  1c:	adrp	x0, 0 <_ZN4llvm5APInt11ashrInPlaceEj>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x3cb                 	// #971
  30:	bl	0 <__assert_fail>
  34:	cmp	w5, #0x40
  38:	b.hi	94 <_ZN4llvm5APInt11ashrInPlaceEj+0x94>  // b.pmore
  3c:	ldr	x2, [x0]
  40:	cbnz	w5, 64 <_ZN4llvm5APInt11ashrInPlaceEj+0x64>
  44:	adrp	x3, 0 <_ZN4llvm5APInt11ashrInPlaceEj>
  48:	adrp	x1, 0 <_ZN4llvm5APInt11ashrInPlaceEj>
  4c:	adrp	x0, 0 <_ZN4llvm5APInt11ashrInPlaceEj>
  50:	add	x3, x3, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x0, x0, #0x0
  5c:	mov	w2, #0x307                 	// #775
  60:	b	30 <_ZN4llvm5APInt11ashrInPlaceEj+0x30>
  64:	mov	w4, w1
  68:	mov	w1, #0x40                  	// #64
  6c:	sub	w1, w1, w5
  70:	cmp	w5, w4
  74:	lsl	x2, x2, x1
  78:	asr	x2, x2, x1
  7c:	asr	x1, x2, #63
  80:	asr	x2, x2, x4
  84:	csel	x2, x2, x1, ne  // ne = any
  88:	str	x2, [x0]
  8c:	ldp	x29, x30, [sp], #16
  90:	b	0 <_ZN4llvm5APInt11ashrInPlaceEj>
  94:	ldp	x29, x30, [sp], #16
  98:	b	0 <_ZN4llvm5APInt12ashrSlowCaseEj>

Disassembly of section .text._ZN4llvm5APInt11lshrInPlaceEj:

0000000000000000 <_ZN4llvm5APInt11lshrInPlaceEj>:
   0:	ldr	w4, [x0, #8]
   4:	cmp	w4, w1
   8:	b.cs	34 <_ZN4llvm5APInt11lshrInPlaceEj+0x34>  // b.hs, b.nlast
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZN4llvm5APInt11lshrInPlaceEj>
  14:	adrp	x1, 0 <_ZN4llvm5APInt11lshrInPlaceEj>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZN4llvm5APInt11lshrInPlaceEj>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x3e3                 	// #995
  30:	bl	0 <__assert_fail>
  34:	cmp	w4, #0x40
  38:	b.hi	60 <_ZN4llvm5APInt11lshrInPlaceEj+0x60>  // b.pmore
  3c:	mov	w3, w1
  40:	cmp	w4, w1
  44:	b.ne	50 <_ZN4llvm5APInt11lshrInPlaceEj+0x50>  // b.any
  48:	str	xzr, [x0]
  4c:	ret
  50:	ldr	x1, [x0]
  54:	lsr	x3, x1, x3
  58:	str	x3, [x0]
  5c:	ret
  60:	b	0 <_ZN4llvm5APInt12lshrSlowCaseEj>

Disassembly of section .text._ZNK4llvm5APInteqERKS0_:

0000000000000000 <_ZNK4llvm5APInteqERKS0_>:
   0:	ldr	w4, [x0, #8]
   4:	ldr	w5, [x1, #8]
   8:	cmp	w4, w5
   c:	b.eq	38 <_ZNK4llvm5APInteqERKS0_+0x38>  // b.none
  10:	stp	x29, x30, [sp, #-16]!
  14:	adrp	x3, 0 <_ZNK4llvm5APInteqERKS0_>
  18:	adrp	x1, 0 <_ZNK4llvm5APInteqERKS0_>
  1c:	mov	x29, sp
  20:	adrp	x0, 0 <_ZNK4llvm5APInteqERKS0_>
  24:	add	x3, x3, #0x0
  28:	add	x1, x1, #0x0
  2c:	add	x0, x0, #0x0
  30:	mov	w2, #0x47f                 	// #1151
  34:	bl	0 <__assert_fail>
  38:	cmp	w4, #0x40
  3c:	b.hi	58 <_ZNK4llvm5APInteqERKS0_+0x58>  // b.pmore
  40:	mov	x3, x0
  44:	ldr	x0, [x1]
  48:	ldr	x1, [x3]
  4c:	cmp	x1, x0
  50:	cset	w0, eq  // eq = none
  54:	ret
  58:	b	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>

Disassembly of section .text._ZNK4llvm5APInt17countLeadingZerosEv:

0000000000000000 <_ZNK4llvm5APInt17countLeadingZerosEv>:
   0:	ldr	w1, [x0, #8]
   4:	mov	x2, x0
   8:	cmp	w1, #0x40
   c:	b.hi	30 <_ZNK4llvm5APInt17countLeadingZerosEv+0x30>  // b.pmore
  10:	ldr	x2, [x2]
  14:	sub	w1, w1, #0x40
  18:	mov	w0, #0x40                  	// #64
  1c:	clz	x3, x2
  20:	cmp	x2, #0x0
  24:	csel	w0, w0, w3, eq  // eq = none
  28:	add	w0, w1, w0
  2c:	ret
  30:	b	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>

Disassembly of section .text._ZNK4llvm5APInt12getZExtValueEv:

0000000000000000 <_ZNK4llvm5APInt12getZExtValueEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	w20, [x0, #8]
  14:	cmp	w20, #0x40
  18:	b.hi	2c <_ZNK4llvm5APInt12getZExtValueEv+0x2c>  // b.pmore
  1c:	ldr	x0, [x0]
  20:	ldp	x19, x20, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	ret
  2c:	bl	0 <_ZNK4llvm5APInt12getZExtValueEv>
  30:	sub	w20, w20, w0
  34:	cmp	w20, #0x40
  38:	b.ls	5c <_ZNK4llvm5APInt12getZExtValueEv+0x5c>  // b.plast
  3c:	adrp	x3, 0 <_ZNK4llvm5APInt12getZExtValueEv>
  40:	adrp	x1, 0 <_ZNK4llvm5APInt12getZExtValueEv>
  44:	adrp	x0, 0 <_ZNK4llvm5APInt12getZExtValueEv>
  48:	add	x3, x3, #0x0
  4c:	add	x1, x1, #0x0
  50:	add	x0, x0, #0x0
  54:	mov	w2, #0x657                 	// #1623
  58:	bl	0 <__assert_fail>
  5c:	ldr	x0, [x19]
  60:	ldr	x0, [x0]
  64:	b	20 <_ZNK4llvm5APInt12getZExtValueEv+0x20>

Disassembly of section .text._ZNK4llvm5APInteqEm:

0000000000000000 <_ZNK4llvm5APInteqEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	w20, [x0, #8]
  14:	str	x21, [sp, #32]
  18:	mov	x21, x1
  1c:	cmp	w20, #0x40
  20:	b.ls	34 <_ZNK4llvm5APInteqEm+0x34>  // b.plast
  24:	bl	0 <_ZNK4llvm5APInteqEm>
  28:	sub	w20, w20, w0
  2c:	cmp	w20, #0x40
  30:	b.hi	54 <_ZNK4llvm5APInteqEm+0x54>  // b.pmore
  34:	mov	x0, x19
  38:	bl	0 <_ZNK4llvm5APInteqEm>
  3c:	cmp	x0, x21
  40:	cset	w0, eq  // eq = none
  44:	ldp	x19, x20, [sp, #16]
  48:	ldr	x21, [sp, #32]
  4c:	ldp	x29, x30, [sp], #48
  50:	ret
  54:	mov	w0, #0x0                   	// #0
  58:	b	44 <_ZNK4llvm5APInteqEm+0x44>

Disassembly of section .text._ZNK4llvm5APInt12bitsToDoubleEv:

0000000000000000 <_ZNK4llvm5APInt12bitsToDoubleEv>:
   0:	mov	x1, x0
   4:	ldr	x0, [x0]
   8:	ldr	w1, [x1, #8]
   c:	cmp	w1, #0x40
  10:	b.ls	18 <_ZNK4llvm5APInt12bitsToDoubleEv+0x18>  // b.plast
  14:	ldr	x0, [x0]
  18:	fmov	d0, x0
  1c:	ret

Disassembly of section .text._ZNK4llvm5APInt11bitsToFloatEv:

0000000000000000 <_ZNK4llvm5APInt11bitsToFloatEv>:
   0:	mov	x1, x0
   4:	ldr	x0, [x0]
   8:	ldr	w1, [x1, #8]
   c:	cmp	w1, #0x40
  10:	b.ls	18 <_ZNK4llvm5APInt11bitsToFloatEv+0x18>  // b.plast
  14:	ldr	x0, [x0]
  18:	fmov	s0, w0
  1c:	ret

Disassembly of section .text._ZN4llvmanENS_5APIntERKS0_:

0000000000000000 <_ZN4llvmanENS_5APIntERKS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	ldr	w3, [x0, #8]
   c:	ldr	w4, [x1, #8]
  10:	stp	x19, x20, [sp, #16]
  14:	cmp	w3, w4
  18:	b.eq	3c <_ZN4llvmanENS_5APIntERKS0_+0x3c>  // b.none
  1c:	adrp	x3, 0 <_ZN4llvmanENS_5APIntERKS0_>
  20:	adrp	x1, 0 <_ZN4llvmanENS_5APIntERKS0_>
  24:	adrp	x0, 0 <_ZN4llvmanENS_5APIntERKS0_>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x329                 	// #809
  38:	bl	0 <__assert_fail>
  3c:	mov	x20, x8
  40:	mov	x19, x0
  44:	cmp	w3, #0x40
  48:	b.hi	80 <_ZN4llvmanENS_5APIntERKS0_+0x80>  // b.pmore
  4c:	ldr	x0, [x0]
  50:	ldr	x1, [x1]
  54:	and	x0, x0, x1
  58:	str	x0, [x19]
  5c:	ldr	w0, [x19, #8]
  60:	str	w0, [x20, #8]
  64:	ldr	x0, [x19]
  68:	str	x0, [x20]
  6c:	str	wzr, [x19, #8]
  70:	mov	x0, x20
  74:	ldp	x19, x20, [sp, #16]
  78:	ldp	x29, x30, [sp], #32
  7c:	ret
  80:	bl	0 <_ZN4llvm5APInt17AndAssignSlowCaseERKS0_>
  84:	b	5c <_ZN4llvmanENS_5APIntERKS0_+0x5c>

Disassembly of section .text._ZN4llvmeoENS_5APIntERKS0_:

0000000000000000 <_ZN4llvmeoENS_5APIntERKS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	ldr	w3, [x0, #8]
   c:	ldr	w4, [x1, #8]
  10:	stp	x19, x20, [sp, #16]
  14:	cmp	w3, w4
  18:	b.eq	3c <_ZN4llvmeoENS_5APIntERKS0_+0x3c>  // b.none
  1c:	adrp	x3, 0 <_ZN4llvmeoENS_5APIntERKS0_>
  20:	adrp	x1, 0 <_ZN4llvmeoENS_5APIntERKS0_>
  24:	adrp	x0, 0 <_ZN4llvmeoENS_5APIntERKS0_>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x365                 	// #869
  38:	bl	0 <__assert_fail>
  3c:	mov	x20, x8
  40:	mov	x19, x0
  44:	cmp	w3, #0x40
  48:	b.hi	80 <_ZN4llvmeoENS_5APIntERKS0_+0x80>  // b.pmore
  4c:	ldr	x0, [x0]
  50:	ldr	x1, [x1]
  54:	eor	x0, x0, x1
  58:	str	x0, [x19]
  5c:	ldr	w0, [x19, #8]
  60:	str	w0, [x20, #8]
  64:	ldr	x0, [x19]
  68:	str	x0, [x20]
  6c:	str	wzr, [x19, #8]
  70:	mov	x0, x20
  74:	ldp	x19, x20, [sp, #16]
  78:	ldp	x29, x30, [sp], #32
  7c:	ret
  80:	bl	0 <_ZN4llvm5APInt17XorAssignSlowCaseERKS0_>
  84:	b	5c <_ZN4llvmeoENS_5APIntERKS0_+0x5c>

Disassembly of section .text._ZNK4llvm4Type17isFloatingPointTyEv:

0000000000000000 <_ZNK4llvm4Type17isFloatingPointTyEv>:
   0:	ldrb	w0, [x0, #8]
   4:	sub	w0, w0, #0x1
   8:	and	w0, w0, #0xff
   c:	cmp	w0, #0x5
  10:	cset	w0, ls  // ls = plast
  14:	ret

Disassembly of section .text._ZNK4llvm4Type13getScalarTypeEv:

0000000000000000 <_ZNK4llvm4Type13getScalarTypeEv>:
   0:	ldrb	w1, [x0, #8]
   4:	cmp	w1, #0x10
   8:	b.ne	14 <_ZNK4llvm4Type13getScalarTypeEv+0x14>  // b.any
   c:	ldr	x0, [x0, #16]
  10:	ldr	x0, [x0]
  14:	ret

Disassembly of section .text._ZN4llvmlsERNS_11raw_ostreamERKNS_4TypeE:

0000000000000000 <_ZN4llvmlsERNS_11raw_ostreamERKNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	w3, #0x0                   	// #0
   8:	mov	w2, #0x0                   	// #0
   c:	mov	x29, sp
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	mov	x0, x1
  1c:	mov	x1, x19
  20:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
  24:	mov	x0, x19
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	ret

Disassembly of section .text._ZNK4llvm4User14getOperandListEv:

0000000000000000 <_ZNK4llvm4User14getOperandListEv>:
   0:	ldrb	w1, [x0, #23]
   4:	tbz	w1, #6, 10 <_ZNK4llvm4User14getOperandListEv+0x10>
   8:	ldur	x0, [x0, #-8]
   c:	ret
  10:	ldr	w1, [x0, #20]
  14:	mov	w2, #0x18                  	// #24
  18:	ubfx	x1, x1, #0, #28
  1c:	umsubl	x0, w1, w2, x0
  20:	b	c <_ZNK4llvm4User14getOperandListEv+0xc>

Disassembly of section .text._ZN4llvm12GenericValueC2Ev:

0000000000000000 <_ZN4llvm12GenericValueC1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	w1, #0x1                   	// #1
   8:	mov	x29, sp
   c:	str	x19, [sp, #16]
  10:	mov	x19, x0
  14:	str	w1, [x0, #16]
  18:	add	x0, x0, #0x8
  1c:	str	xzr, [x19, #8]
  20:	bl	0 <_ZN4llvm12GenericValueC1Ev>
  24:	str	xzr, [x19]
  28:	stp	xzr, xzr, [x19, #24]
  2c:	str	xzr, [x19, #40]
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret

Disassembly of section .text._ZN4llvm12GenericValueC2EOS0_:

0000000000000000 <_ZN4llvm12GenericValueC1EOS0_>:
   0:	mov	x2, x1
   4:	mov	x3, x0
   8:	ldr	x4, [x2], #8
   c:	str	x4, [x3], #8
  10:	ldr	w4, [x2, #8]
  14:	str	w4, [x3, #8]
  18:	ldr	x3, [x1, #8]
  1c:	str	x3, [x0, #8]
  20:	add	x3, x0, #0x18
  24:	ldr	x4, [x1, #24]
  28:	str	wzr, [x2, #8]
  2c:	str	x4, [x0, #24]
  30:	ldr	x0, [x1, #32]
  34:	str	x0, [x3, #8]
  38:	ldr	x0, [x1, #40]
  3c:	str	x0, [x3, #16]
  40:	stp	xzr, xzr, [x1, #24]
  44:	str	xzr, [x1, #40]
  48:	ret

Disassembly of section .text._ZN4llvm8CallBase18bundle_op_info_endEv:

0000000000000000 <_ZN4llvm8CallBase18bundle_op_info_endEv>:
   0:	ldrsb	w1, [x0, #23]
   4:	tbz	w1, #31, 20 <_ZN4llvm8CallBase18bundle_op_info_endEv+0x20>
   8:	stp	x29, x30, [sp, #-16]!
   c:	mov	x29, sp
  10:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  14:	add	x0, x0, x1
  18:	ldp	x29, x30, [sp], #16
  1c:	ret
  20:	mov	x0, #0x0                   	// #0
  24:	ret

Disassembly of section .text._ZNK4llvm8CallBase20getNumOperandBundlesEv:

0000000000000000 <_ZNK4llvm8CallBase20getNumOperandBundlesEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	ldrsb	w1, [x0, #23]
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x20, x0
  14:	tbz	w1, #31, 3c <_ZNK4llvm8CallBase20getNumOperandBundlesEv+0x3c>
  18:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  1c:	mov	x19, x0
  20:	mov	x0, x20
  24:	bl	0 <_ZNK4llvm8CallBase20getNumOperandBundlesEv>
  28:	sub	x0, x0, x19
  2c:	ldp	x19, x20, [sp, #16]
  30:	ubfx	x0, x0, #4, #32
  34:	ldp	x29, x30, [sp], #32
  38:	ret
  3c:	mov	x19, #0x0                   	// #0
  40:	b	20 <_ZNK4llvm8CallBase20getNumOperandBundlesEv+0x20>

Disassembly of section .text._ZN4llvm8CallBase7arg_endEv:

0000000000000000 <_ZN4llvm8CallBase7arg_endEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	str	x21, [sp, #32]
  14:	ldrb	w2, [x0, #16]
  18:	cmp	w2, #0x23
  1c:	b.eq	3c <_ZN4llvm8CallBase7arg_endEv+0x3c>  // b.none
  20:	sub	w1, w2, #0x18
  24:	cmp	w1, #0x38
  28:	b.eq	9c <_ZN4llvm8CallBase7arg_endEv+0x9c>  // b.none
  2c:	cmp	w1, #0x5
  30:	b.ne	84 <_ZN4llvm8CallBase7arg_endEv+0x84>  // b.any
  34:	mov	w0, #0x2                   	// #2
  38:	b	40 <_ZN4llvm8CallBase7arg_endEv+0x40>
  3c:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
  40:	mov	w20, #0x18                  	// #24
  44:	mov	x1, #0xffffffffffffffe8    	// #-24
  48:	umsubl	x20, w0, w20, x1
  4c:	mov	x0, x19
  50:	bl	0 <_ZN4llvm8CallBase7arg_endEv>
  54:	cbz	w0, 108 <_ZN4llvm8CallBase7arg_endEv+0x108>
  58:	mov	x0, x19
  5c:	bl	0 <_ZN4llvm8CallBase7arg_endEv>
  60:	cbnz	w0, a4 <_ZN4llvm8CallBase7arg_endEv+0xa4>
  64:	adrp	x3, 0 <_ZN4llvm8CallBase7arg_endEv>
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0x6ed                 	// #1773
  70:	adrp	x1, 0 <_ZN4llvm8CallBase7arg_endEv>
  74:	adrp	x0, 0 <_ZN4llvm8CallBase7arg_endEv>
  78:	add	x1, x1, #0x0
  7c:	add	x0, x0, #0x0
  80:	bl	0 <__assert_fail>
  84:	adrp	x1, 0 <_ZN4llvm8CallBase7arg_endEv>
  88:	adrp	x0, 0 <_ZN4llvm8CallBase7arg_endEv>
  8c:	add	x1, x1, #0x0
  90:	add	x0, x0, #0x0
  94:	mov	w2, #0x46a                 	// #1130
  98:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  9c:	mov	w0, #0x0                   	// #0
  a0:	b	40 <_ZN4llvm8CallBase7arg_endEv+0x40>
  a4:	ldrsb	w0, [x19, #23]
  a8:	tbz	w0, #31, 124 <_ZN4llvm8CallBase7arg_endEv+0x124>
  ac:	mov	x0, x19
  b0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  b4:	ldr	w21, [x0, #8]
  b8:	mov	x0, x19
  bc:	bl	0 <_ZN4llvm8CallBase7arg_endEv>
  c0:	cbnz	w0, d4 <_ZN4llvm8CallBase7arg_endEv+0xd4>
  c4:	adrp	x3, 0 <_ZN4llvm8CallBase7arg_endEv>
  c8:	mov	w2, #0x6f3                 	// #1779
  cc:	add	x3, x3, #0x0
  d0:	b	70 <_ZN4llvm8CallBase7arg_endEv+0x70>
  d4:	mov	x0, x19
  d8:	bl	0 <_ZN4llvm8CallBase7arg_endEv>
  dc:	ldur	w1, [x0, #-4]
  e0:	subs	w0, w1, w21
  e4:	b.cs	108 <_ZN4llvm8CallBase7arg_endEv+0x108>  // b.hs, b.nlast
  e8:	adrp	x3, 0 <_ZN4llvm8CallBase7arg_endEv>
  ec:	adrp	x1, 0 <_ZN4llvm8CallBase7arg_endEv>
  f0:	adrp	x0, 0 <_ZN4llvm8CallBase7arg_endEv>
  f4:	add	x3, x3, #0x0
  f8:	add	x1, x1, #0x0
  fc:	add	x0, x0, #0x0
 100:	mov	w2, #0x710                 	// #1808
 104:	b	80 <_ZN4llvm8CallBase7arg_endEv+0x80>
 108:	mov	w1, #0x18                  	// #24
 10c:	ldr	x21, [sp, #32]
 110:	umsubl	x0, w0, w1, x20
 114:	add	x0, x19, x0
 118:	ldp	x19, x20, [sp, #16]
 11c:	ldp	x29, x30, [sp], #48
 120:	ret
 124:	mov	x0, #0x0                   	// #0
 128:	ldr	w0, [x0, #8]
 12c:	brk	#0x3e8

Disassembly of section .text._ZN4llvm12GenericValueC2ERKS0_:

0000000000000000 <_ZN4llvm12GenericValueC1ERKS0_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x21, x1
  14:	mov	x22, x0
  18:	stp	x23, x24, [sp, #48]
  1c:	add	x23, x22, #0x18
  20:	ldr	x2, [x1], #8
  24:	str	x2, [x0], #8
  28:	bl	0 <_ZN4llvm12GenericValueC1ERKS0_>
  2c:	ldp	x0, x19, [x21, #24]
  30:	str	xzr, [x22, #24]
  34:	stp	xzr, xzr, [x23, #8]
  38:	sub	x19, x19, x0
  3c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  40:	movk	x0, #0xaaab
  44:	asr	x1, x19, #4
  48:	mul	x0, x1, x0
  4c:	bl	0 <_ZN4llvm12GenericValueC1ERKS0_>
  50:	str	x0, [x22, #24]
  54:	add	x19, x0, x19
  58:	stp	x0, x19, [x23, #8]
  5c:	mov	x20, x0
  60:	ldp	x24, x19, [x21, #24]
  64:	mov	x22, x0
  68:	mov	x21, x24
  6c:	cmp	x19, x21
  70:	b.eq	8c <_ZN4llvm12GenericValueC1ERKS0_+0x8c>  // b.none
  74:	mov	x1, x21
  78:	mov	x0, x22
  7c:	add	x21, x21, #0x30
  80:	add	x22, x22, #0x30
  84:	bl	0 <_ZN4llvm12GenericValueC1ERKS0_>
  88:	b	6c <_ZN4llvm12GenericValueC1ERKS0_+0x6c>
  8c:	sub	x19, x19, x24
  90:	mov	x0, #0xaaab                	// #43691
  94:	movk	x0, #0xaaaa, lsl #16
  98:	lsr	x19, x19, #4
  9c:	movk	x0, #0xaaaa, lsl #32
  a0:	movk	x0, #0xaaa, lsl #48
  a4:	ldp	x21, x22, [sp, #32]
  a8:	mul	x19, x19, x0
  ac:	mov	x0, #0x30                  	// #48
  b0:	and	x19, x19, #0xfffffffffffffff
  b4:	madd	x0, x19, x0, x20
  b8:	ldp	x19, x20, [sp, #16]
  bc:	str	x0, [x23, #8]
  c0:	ldp	x23, x24, [sp, #48]
  c4:	ldp	x29, x30, [sp], #64
  c8:	ret

Disassembly of section .text._ZN4llvm4castINS_11PointerTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm4castINS_11PointerTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbnz	x0, 2c <_ZN4llvm4castINS_11PointerTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x2c>
   c:	adrp	x3, 0 <_ZN4llvm4castINS_11PointerTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  10:	adrp	x1, 0 <_ZN4llvm4castINS_11PointerTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  14:	adrp	x0, 0 <_ZN4llvm4castINS_11PointerTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w1, [x0, #8]
  30:	cmp	w1, #0xf
  34:	b.eq	58 <_ZN4llvm4castINS_11PointerTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x58>  // b.none
  38:	adrp	x3, 0 <_ZN4llvm4castINS_11PointerTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  3c:	adrp	x1, 0 <_ZN4llvm4castINS_11PointerTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  40:	adrp	x0, 0 <_ZN4llvm4castINS_11PointerTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  44:	add	x3, x3, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x0, x0, #0x0
  50:	mov	w2, #0x108                 	// #264
  54:	b	28 <_ZN4llvm4castINS_11PointerTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x28>
  58:	ldp	x29, x30, [sp], #16
  5c:	ret

Disassembly of section .text._ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbnz	x0, 2c <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x2c>
   c:	adrp	x3, 0 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  10:	adrp	x1, 0 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  14:	adrp	x0, 0 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w1, [x0, #8]
  30:	cmp	w1, #0x10
  34:	b.eq	58 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x58>  // b.none
  38:	adrp	x3, 0 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  3c:	adrp	x1, 0 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  40:	adrp	x0, 0 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  44:	add	x3, x3, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x0, x0, #0x0
  50:	mov	w2, #0x108                 	// #264
  54:	b	28 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x28>
  58:	ldp	x29, x30, [sp], #16
  5c:	ret

Disassembly of section .text._ZN4llvm4castINS_12FunctionTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm4castINS_12FunctionTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbnz	x0, 2c <_ZN4llvm4castINS_12FunctionTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x2c>
   c:	adrp	x3, 0 <_ZN4llvm4castINS_12FunctionTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  10:	adrp	x1, 0 <_ZN4llvm4castINS_12FunctionTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  14:	adrp	x0, 0 <_ZN4llvm4castINS_12FunctionTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w1, [x0, #8]
  30:	cmp	w1, #0xc
  34:	b.eq	58 <_ZN4llvm4castINS_12FunctionTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x58>  // b.none
  38:	adrp	x3, 0 <_ZN4llvm4castINS_12FunctionTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  3c:	adrp	x1, 0 <_ZN4llvm4castINS_12FunctionTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  40:	adrp	x0, 0 <_ZN4llvm4castINS_12FunctionTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  44:	add	x3, x3, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x0, x0, #0x0
  50:	mov	w2, #0x108                 	// #264
  54:	b	28 <_ZN4llvm4castINS_12FunctionTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x28>
  58:	ldp	x29, x30, [sp], #16
  5c:	ret

Disassembly of section .text._ZN4llvm12cast_or_nullINS_5ValueES1_EENS_10cast_rettyIT_PT0_E8ret_typeES5_:

0000000000000000 <_ZN4llvm12cast_or_nullINS_5ValueES1_EENS_10cast_rettyIT_PT0_E8ret_typeES5_>:
   0:	ret

Disassembly of section .text._ZNK4llvm16UnaryInstruction10getOperandEj:

0000000000000000 <_ZNK4llvm16UnaryInstruction10getOperandEj>:
   0:	cbz	w1, 2c <_ZNK4llvm16UnaryInstruction10getOperandEj+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZNK4llvm16UnaryInstruction10getOperandEj>
   c:	adrp	x1, 0 <_ZNK4llvm16UnaryInstruction10getOperandEj>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZNK4llvm16UnaryInstruction10getOperandEj>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x61                  	// #97
  28:	bl	0 <__assert_fail>
  2c:	ldur	x0, [x0, #-24]
  30:	b	0 <_ZNK4llvm16UnaryInstruction10getOperandEj>

Disassembly of section .text._ZNK4llvm10SwitchInst10getOperandEj:

0000000000000000 <_ZNK4llvm10SwitchInst10getOperandEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	w19, w1
  10:	ldr	w1, [x0, #20]
  14:	ubfx	x1, x1, #0, #28
  18:	cmp	w19, w1
  1c:	b.cc	40 <_ZNK4llvm10SwitchInst10getOperandEj+0x40>  // b.lo, b.ul, b.last
  20:	adrp	x3, 0 <_ZNK4llvm10SwitchInst10getOperandEj>
  24:	adrp	x1, 0 <_ZNK4llvm10SwitchInst10getOperandEj>
  28:	adrp	x0, 0 <_ZNK4llvm10SwitchInst10getOperandEj>
  2c:	add	x3, x3, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x0, x0, #0x0
  38:	mov	w2, #0xdbe                 	// #3518
  3c:	bl	0 <__assert_fail>
  40:	bl	0 <_ZNK4llvm10SwitchInst10getOperandEj>
  44:	mov	w1, #0x18                  	// #24
  48:	umull	x19, w19, w1
  4c:	ldr	x0, [x0, x19]
  50:	ldr	x19, [sp, #16]
  54:	ldp	x29, x30, [sp], #32
  58:	b	0 <_ZNK4llvm10SwitchInst10getOperandEj>

Disassembly of section .text._ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14getCalledValueEv:

0000000000000000 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14getCalledValueEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x1, [x0]
   c:	ands	x1, x1, #0xfffffffffffffff8
  10:	b.ne	34 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14getCalledValueEv+0x34>  // b.any
  14:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14getCalledValueEv>
  18:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14getCalledValueEv>
  1c:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14getCalledValueEv>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x69                  	// #105
  30:	bl	0 <__assert_fail>
  34:	ldrb	w0, [x1, #16]
  38:	sub	w0, w0, #0x1d
  3c:	and	w0, w0, #0xff
  40:	cmp	w0, #0x33
  44:	b.hi	58 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14getCalledValueEv+0x58>  // b.pmore
  48:	mov	x2, #0x41                  	// #65
  4c:	movk	x2, #0x8, lsl #48
  50:	lsr	x0, x2, x0
  54:	tbnz	w0, #0, 78 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14getCalledValueEv+0x78>
  58:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14getCalledValueEv>
  5c:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14getCalledValueEv>
  60:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14getCalledValueEv>
  64:	add	x3, x3, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x0, x0, #0x0
  70:	mov	w2, #0x108                 	// #264
  74:	b	30 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14getCalledValueEv+0x30>
  78:	ldp	x29, x30, [sp], #16
  7c:	ldur	x0, [x1, #-24]
  80:	ret

Disassembly of section .text._ZN4llvm2cl6OptionD2Ev:

0000000000000000 <_ZN4llvm2cl6OptionD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	x0, [x0, #104]
  14:	ldr	x1, [x19, #96]
  18:	cmp	x0, x1
  1c:	b.eq	24 <_ZN4llvm2cl6OptionD1Ev+0x24>  // b.none
  20:	bl	0 <free>
  24:	ldr	x0, [x19, #64]
  28:	add	x19, x19, #0x50
  2c:	cmp	x0, x19
  30:	b.eq	40 <_ZN4llvm2cl6OptionD1Ev+0x40>  // b.none
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	b	0 <free>
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED2Ev:

0000000000000000 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x2, 0 <_ZTVN4llvm2cl3optIbLb0ENS0_6parserIbEEEE>
   8:	mov	x1, x0
   c:	mov	x29, sp
  10:	ldr	x2, [x2]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	add	x2, x2, #0x10
  20:	str	x2, [x1], #168
  24:	ldr	x3, [x1, #16]
  28:	cbz	x3, 38 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED1Ev+0x38>
  2c:	mov	x0, x1
  30:	mov	w2, #0x3                   	// #3
  34:	blr	x3
  38:	mov	x0, x19
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	b	0 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED1Ev>

Disassembly of section .text._ZN4llvm2cl6OptionD0Ev:

0000000000000000 <_ZN4llvm2cl6OptionD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm2cl6OptionD0Ev>
  14:	mov	x0, x19
  18:	mov	x1, #0x88                  	// #136
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm4castINS_8CallInstENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm4castINS_8CallInstENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbnz	x0, 2c <_ZN4llvm4castINS_8CallInstENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x2c>
   c:	adrp	x3, 0 <_ZN4llvm4castINS_8CallInstENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  10:	adrp	x1, 0 <_ZN4llvm4castINS_8CallInstENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  14:	adrp	x0, 0 <_ZN4llvm4castINS_8CallInstENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w1, [x0, #16]
  30:	cmp	w1, #0x50
  34:	b.eq	58 <_ZN4llvm4castINS_8CallInstENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x58>  // b.none
  38:	adrp	x3, 0 <_ZN4llvm4castINS_8CallInstENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  3c:	adrp	x1, 0 <_ZN4llvm4castINS_8CallInstENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  40:	adrp	x0, 0 <_ZN4llvm4castINS_8CallInstENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  44:	add	x3, x3, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x0, x0, #0x0
  50:	mov	w2, #0x108                 	// #264
  54:	b	28 <_ZN4llvm4castINS_8CallInstENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x28>
  58:	ldp	x29, x30, [sp], #16
  5c:	ret

Disassembly of section .text._ZN4llvm4castINS_10VectorTypeES1_EENS_10cast_rettyIT_PT0_E8ret_typeES5_:

0000000000000000 <_ZN4llvm4castINS_10VectorTypeES1_EENS_10cast_rettyIT_PT0_E8ret_typeES5_>:
   0:	cbnz	x0, 2c <_ZN4llvm4castINS_10VectorTypeES1_EENS_10cast_rettyIT_PT0_E8ret_typeES5_+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm4castINS_10VectorTypeES1_EENS_10cast_rettyIT_PT0_E8ret_typeES5_>
   c:	adrp	x1, 0 <_ZN4llvm4castINS_10VectorTypeES1_EENS_10cast_rettyIT_PT0_E8ret_typeES5_>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm4castINS_10VectorTypeES1_EENS_10cast_rettyIT_PT0_E8ret_typeES5_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ret

Disassembly of section .text._ZN4llvm4castINS_10CallBrInstENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm4castINS_10CallBrInstENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbnz	x0, 2c <_ZN4llvm4castINS_10CallBrInstENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x2c>
   c:	adrp	x3, 0 <_ZN4llvm4castINS_10CallBrInstENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  10:	adrp	x1, 0 <_ZN4llvm4castINS_10CallBrInstENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  14:	adrp	x0, 0 <_ZN4llvm4castINS_10CallBrInstENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w1, [x0, #16]
  30:	cmp	w1, #0x23
  34:	b.eq	58 <_ZN4llvm4castINS_10CallBrInstENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x58>  // b.none
  38:	adrp	x3, 0 <_ZN4llvm4castINS_10CallBrInstENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  3c:	adrp	x1, 0 <_ZN4llvm4castINS_10CallBrInstENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  40:	adrp	x0, 0 <_ZN4llvm4castINS_10CallBrInstENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  44:	add	x3, x3, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x0, x0, #0x0
  50:	mov	w2, #0x108                 	// #264
  54:	b	28 <_ZN4llvm4castINS_10CallBrInstENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x28>
  58:	ldp	x29, x30, [sp], #16
  5c:	ret

Disassembly of section .text._ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_:

0000000000000000 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x23, x24, [sp, #48]
   c:	ldp	x24, x23, [x0]
  10:	stp	x19, x20, [sp, #16]
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x22, x0
  1c:	mov	x0, #0xfffffffffffffff     	// #1152921504606846975
  20:	stp	x25, x26, [sp, #64]
  24:	mov	x25, x1
  28:	sub	x1, x23, x24
  2c:	cmp	x0, x1, asr #3
  30:	b.ne	40 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0x40>  // b.any
  34:	adrp	x0, 0 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>
  38:	add	x0, x0, #0x0
  3c:	bl	0 <_ZSt20__throw_length_errorPKc>
  40:	asr	x19, x1, #3
  44:	mov	x26, x2
  48:	cmp	x19, #0x0
  4c:	sub	x20, x25, x24
  50:	csinc	x1, x19, xzr, ne  // ne = any
  54:	adds	x19, x19, x1
  58:	b.cs	f0 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xf0>  // b.hs, b.nlast
  5c:	mov	x21, #0x0                   	// #0
  60:	cbz	x19, 78 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0x78>
  64:	cmp	x19, x0
  68:	csel	x19, x19, x0, ls  // ls = plast
  6c:	lsl	x0, x19, #3
  70:	bl	0 <_Znwm>
  74:	mov	x21, x0
  78:	ldr	x0, [x26]
  7c:	str	x0, [x21, x20]
  80:	cmp	x20, #0x0
  84:	b.le	98 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0x98>
  88:	mov	x2, x20
  8c:	mov	x1, x24
  90:	mov	x0, x21
  94:	bl	0 <memmove>
  98:	add	x20, x20, #0x8
  9c:	sub	x23, x23, x25
  a0:	add	x20, x21, x20
  a4:	cmp	x23, #0x0
  a8:	b.le	bc <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xbc>
  ac:	mov	x2, x23
  b0:	mov	x1, x25
  b4:	mov	x0, x20
  b8:	bl	0 <memcpy>
  bc:	add	x20, x20, x23
  c0:	cbz	x24, cc <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xcc>
  c4:	mov	x0, x24
  c8:	bl	0 <_ZdlPv>
  cc:	add	x19, x21, x19, lsl #3
  d0:	ldp	x23, x24, [sp, #48]
  d4:	ldp	x25, x26, [sp, #64]
  d8:	stp	x21, x20, [x22]
  dc:	str	x19, [x22, #16]
  e0:	ldp	x19, x20, [sp, #16]
  e4:	ldp	x21, x22, [sp, #32]
  e8:	ldp	x29, x30, [sp], #80
  ec:	ret
  f0:	mov	x19, x0
  f4:	b	6c <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0x6c>

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_7PHINodeEKNS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEEPS5_E4doitERS8_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_7PHINodeEKNS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEEPS5_E4doitERS8_>:
   0:	ldr	x0, [x0]
   4:	ldr	x1, [x0]
   8:	tst	w1, #0x4
   c:	b.eq	1c <_ZN4llvm13isa_impl_wrapINS_7PHINodeEKNS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEEPS5_E4doitERS8_+0x1c>  // b.none
  10:	stp	x29, x30, [sp, #-16]!
  14:	mov	x29, sp
  18:	bl	0 <_ZN4llvm13isa_impl_wrapINS_7PHINodeEKNS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEEPS5_E4doitERS8_>
  1c:	ldurb	w0, [x0, #-8]
  20:	cmp	w0, #0x4f
  24:	cset	w0, eq  // eq = none
  28:	ret

Disassembly of section .text._ZN4llvm4castINS_7PHINodeENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEEEENS_10cast_rettyIT_T0_E8ret_typeERSA_:

0000000000000000 <_ZN4llvm4castINS_7PHINodeENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEEEENS_10cast_rettyIT_T0_E8ret_typeERSA_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4castINS_7PHINodeENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEEEENS_10cast_rettyIT_T0_E8ret_typeERSA_>
  14:	tst	w0, #0xff
  18:	b.ne	3c <_ZN4llvm4castINS_7PHINodeENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEEEENS_10cast_rettyIT_T0_E8ret_typeERSA_+0x3c>  // b.any
  1c:	adrp	x3, 0 <_ZN4llvm4castINS_7PHINodeENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEEEENS_10cast_rettyIT_T0_E8ret_typeERSA_>
  20:	adrp	x1, 0 <_ZN4llvm4castINS_7PHINodeENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEEEENS_10cast_rettyIT_T0_E8ret_typeERSA_>
  24:	adrp	x0, 0 <_ZN4llvm4castINS_7PHINodeENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEEEENS_10cast_rettyIT_T0_E8ret_typeERSA_>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x101                 	// #257
  38:	bl	0 <__assert_fail>
  3c:	ldr	x0, [x19]
  40:	ldr	x1, [x0]
  44:	tst	w1, #0x4
  48:	b.eq	50 <_ZN4llvm4castINS_7PHINodeENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEEEENS_10cast_rettyIT_T0_E8ret_typeERSA_+0x50>  // b.none
  4c:	bl	0 <_ZN4llvm4castINS_7PHINodeENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEEEENS_10cast_rettyIT_T0_E8ret_typeERSA_>
  50:	sub	x0, x0, #0x18
  54:	ldr	x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZNK4llvm12PointerUnionIJPNS_10StructTypeEPNS_4TypeEEE3getIS2_EET_v:

0000000000000000 <_ZNK4llvm12PointerUnionIJPNS_10StructTypeEPNS_4TypeEEE3getIS2_EET_v>:
   0:	ldr	x0, [x0]
   4:	tbz	w0, #2, 30 <_ZNK4llvm12PointerUnionIJPNS_10StructTypeEPNS_4TypeEEE3getIS2_EET_v+0x30>
   8:	stp	x29, x30, [sp, #-16]!
   c:	adrp	x3, 0 <_ZNK4llvm12PointerUnionIJPNS_10StructTypeEPNS_4TypeEEE3getIS2_EET_v>
  10:	adrp	x1, 0 <_ZNK4llvm12PointerUnionIJPNS_10StructTypeEPNS_4TypeEEE3getIS2_EET_v>
  14:	mov	x29, sp
  18:	adrp	x0, 0 <_ZNK4llvm12PointerUnionIJPNS_10StructTypeEPNS_4TypeEEE3getIS2_EET_v>
  1c:	add	x3, x3, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0xc3                  	// #195
  2c:	bl	0 <__assert_fail>
  30:	and	x0, x0, #0xfffffffffffffff8
  34:	ret

Disassembly of section .text._ZNK4llvm25generic_gep_type_iteratorIPKNS_3UseEE14getIndexedTypeEv:

0000000000000000 <_ZNK4llvm25generic_gep_type_iteratorIPKNS_3UseEE14getIndexedTypeEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	ldr	x1, [x0, #8]
   c:	str	x19, [sp, #16]
  10:	mov	x19, x0
  14:	tst	w1, #0x4
  18:	b.eq	24 <_ZNK4llvm25generic_gep_type_iteratorIPKNS_3UseEE14getIndexedTypeEv+0x24>  // b.none
  1c:	ands	x0, x1, #0xfffffffffffffff8
  20:	b.ne	40 <_ZNK4llvm25generic_gep_type_iteratorIPKNS_3UseEE14getIndexedTypeEv+0x40>  // b.any
  24:	add	x0, x19, #0x8
  28:	bl	0 <_ZNK4llvm25generic_gep_type_iteratorIPKNS_3UseEE14getIndexedTypeEv>
  2c:	ldr	x1, [x19]
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ldr	x1, [x1]
  3c:	b	0 <_ZNK4llvm13CompositeType14getTypeAtIndexEPKNS_5ValueE>
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZNKSt6vectorIN4llvm12GenericValueESaIS1_EE12_M_check_lenEmPKc:

0000000000000000 <_ZNKSt6vectorIN4llvm12GenericValueESaIS1_EE12_M_check_lenEmPKc>:
   0:	mov	x4, x0
   4:	mov	x0, x2
   8:	ldp	x2, x3, [x4]
   c:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  10:	movk	x4, #0x2aa, lsl #48
  14:	sub	x3, x3, x2
  18:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  1c:	movk	x2, #0xaaab
  20:	asr	x3, x3, #4
  24:	mul	x3, x3, x2
  28:	sub	x2, x4, x3
  2c:	cmp	x2, x1
  30:	b.cs	40 <_ZNKSt6vectorIN4llvm12GenericValueESaIS1_EE12_M_check_lenEmPKc+0x40>  // b.hs, b.nlast
  34:	stp	x29, x30, [sp, #-16]!
  38:	mov	x29, sp
  3c:	bl	0 <_ZSt20__throw_length_errorPKc>
  40:	cmp	x1, x3
  44:	csel	x1, x1, x3, cs  // cs = hs, nlast
  48:	adds	x3, x3, x1
  4c:	b.cs	5c <_ZNKSt6vectorIN4llvm12GenericValueESaIS1_EE12_M_check_lenEmPKc+0x5c>  // b.hs, b.nlast
  50:	cmp	x3, x4
  54:	csel	x0, x3, x4, ls  // ls = plast
  58:	ret
  5c:	mov	x0, x4
  60:	ret

Disassembly of section .text._ZN4llvm11isa_impl_clINS_8ConstantEPKNS_5ValueEE4doitES4_:

0000000000000000 <_ZN4llvm11isa_impl_clINS_8ConstantEPKNS_5ValueEE4doitES4_>:
   0:	cbnz	x0, 2c <_ZN4llvm11isa_impl_clINS_8ConstantEPKNS_5ValueEE4doitES4_+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm11isa_impl_clINS_8ConstantEPKNS_5ValueEE4doitES4_>
   c:	adrp	x1, 0 <_ZN4llvm11isa_impl_clINS_8ConstantEPKNS_5ValueEE4doitES4_>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm11isa_impl_clINS_8ConstantEPKNS_5ValueEE4doitES4_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w0, [x0, #16]
  30:	cmp	w0, #0x10
  34:	cset	w0, ls  // ls = plast
  38:	ret

Disassembly of section .text._ZN4llvm4castINS_8ConstantENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm4castINS_8ConstantENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4castINS_8ConstantENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  14:	tst	w0, #0xff
  18:	b.ne	3c <_ZN4llvm4castINS_8ConstantENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x3c>  // b.any
  1c:	adrp	x3, 0 <_ZN4llvm4castINS_8ConstantENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  20:	adrp	x1, 0 <_ZN4llvm4castINS_8ConstantENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  24:	adrp	x0, 0 <_ZN4llvm4castINS_8ConstantENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x108                 	// #264
  38:	bl	0 <__assert_fail>
  3c:	mov	x0, x19
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZNK4llvm12ConstantExpr10getOperandEj:

0000000000000000 <_ZNK4llvm12ConstantExpr10getOperandEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	ldr	w2, [x0, #20]
   c:	str	x19, [sp, #16]
  10:	ubfx	x2, x2, #0, #28
  14:	cmp	w1, w2
  18:	b.cc	3c <_ZNK4llvm12ConstantExpr10getOperandEj+0x3c>  // b.lo, b.ul, b.last
  1c:	adrp	x3, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  20:	adrp	x1, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  24:	adrp	x0, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x4fa                 	// #1274
  38:	bl	0 <__assert_fail>
  3c:	mov	w2, w2
  40:	mov	w1, w1
  44:	sub	x1, x1, x2
  48:	mov	x2, #0x18                  	// #24
  4c:	mul	x1, x1, x2
  50:	ldr	x19, [x0, x1]
  54:	cbz	x19, 98 <_ZNK4llvm12ConstantExpr10getOperandEj+0x98>
  58:	mov	x0, x19
  5c:	bl	0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  60:	tst	w0, #0xff
  64:	b.ne	88 <_ZNK4llvm12ConstantExpr10getOperandEj+0x88>  // b.any
  68:	adrp	x3, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  6c:	adrp	x1, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  70:	adrp	x0, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  74:	add	x3, x3, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x0, x0, #0x0
  80:	mov	w2, #0x134                 	// #308
  84:	b	38 <_ZNK4llvm12ConstantExpr10getOperandEj+0x38>
  88:	mov	x0, x19
  8c:	ldr	x19, [sp, #16]
  90:	ldp	x29, x30, [sp], #32
  94:	b	0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  98:	mov	x0, #0x0                   	// #0
  9c:	ldr	x19, [sp, #16]
  a0:	ldp	x29, x30, [sp], #32
  a4:	ret

Disassembly of section .text._ZN4llvm11isa_impl_clINS_11GlobalValueEPKNS_5ValueEE4doitES4_:

0000000000000000 <_ZN4llvm11isa_impl_clINS_11GlobalValueEPKNS_5ValueEE4doitES4_>:
   0:	cbnz	x0, 2c <_ZN4llvm11isa_impl_clINS_11GlobalValueEPKNS_5ValueEE4doitES4_+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm11isa_impl_clINS_11GlobalValueEPKNS_5ValueEE4doitES4_>
   c:	adrp	x1, 0 <_ZN4llvm11isa_impl_clINS_11GlobalValueEPKNS_5ValueEE4doitES4_>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm11isa_impl_clINS_11GlobalValueEPKNS_5ValueEE4doitES4_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w0, [x0, #16]
  30:	cmp	w0, #0x3
  34:	cset	w0, ls  // ls = plast
  38:	ret

Disassembly of section .text._ZN4llvm11isa_impl_clINS_11InstructionEPKNS_5ValueEE4doitES4_:

0000000000000000 <_ZN4llvm11isa_impl_clINS_11InstructionEPKNS_5ValueEE4doitES4_>:
   0:	cbnz	x0, 2c <_ZN4llvm11isa_impl_clINS_11InstructionEPKNS_5ValueEE4doitES4_+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm11isa_impl_clINS_11InstructionEPKNS_5ValueEE4doitES4_>
   c:	adrp	x1, 0 <_ZN4llvm11isa_impl_clINS_11InstructionEPKNS_5ValueEE4doitES4_>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm11isa_impl_clINS_11InstructionEPKNS_5ValueEE4doitES4_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w0, [x0, #16]
  30:	cmp	w0, #0x17
  34:	cset	w0, hi  // hi = pmore
  38:	ret

Disassembly of section .text._ZNSt12_Destroy_auxILb0EE9__destroyIPN4llvm12GenericValueEEEvT_S5_:

0000000000000000 <_ZNSt12_Destroy_auxILb0EE9__destroyIPN4llvm12GenericValueEEEvT_S5_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	cmp	x19, x20
  18:	b.eq	2c <_ZNSt12_Destroy_auxILb0EE9__destroyIPN4llvm12GenericValueEEEvT_S5_+0x2c>  // b.none
  1c:	mov	x0, x19
  20:	add	x19, x19, #0x30
  24:	bl	0 <_ZNSt12_Destroy_auxILb0EE9__destroyIPN4llvm12GenericValueEEEvT_S5_>
  28:	b	14 <_ZNSt12_Destroy_auxILb0EE9__destroyIPN4llvm12GenericValueEEEvT_S5_+0x14>
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EED2Ev:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	ldp	x0, x1, [x0]
  14:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev>
  18:	ldr	x0, [x19]
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	b	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev>

Disassembly of section .text._ZN4llvm12GenericValueD2Ev:

0000000000000000 <_ZN4llvm12GenericValueD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	add	x0, x0, #0x18
  14:	bl	0 <_ZN4llvm12GenericValueD1Ev>
  18:	add	x0, x19, #0x8
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	b	0 <_ZN4llvm12GenericValueD1Ev>

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	str	x21, [sp, #32]
  18:	cbz	x19, 44 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x44>
  1c:	ldr	x1, [x19, #24]
  20:	mov	x0, x20
  24:	bl	0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>
  28:	ldr	x21, [x19, #16]
  2c:	add	x0, x19, #0x28
  30:	bl	0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>
  34:	mov	x0, x19
  38:	mov	x19, x21
  3c:	bl	0 <_ZdlPv>
  40:	b	18 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x18>
  44:	ldp	x19, x20, [sp, #16]
  48:	ldr	x21, [sp, #32]
  4c:	ldp	x29, x30, [sp], #48
  50:	ret

Disassembly of section .text._ZN4llvm12GenericValueaSEOS0_:

0000000000000000 <_ZN4llvm12GenericValueaSEOS0_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	mov	x19, x0
  14:	ldr	x2, [x1], #8
  18:	str	x2, [x0], #8
  1c:	bl	0 <_ZN4llvm12GenericValueaSEOS0_>
  20:	ldp	x4, x3, [x19, #24]
  24:	add	x0, sp, #0x28
  28:	ldr	x5, [x20, #24]
  2c:	str	x5, [x19, #24]
  30:	ldr	x5, [x20, #32]
  34:	str	x5, [x19, #32]
  38:	ldr	x2, [x19, #40]
  3c:	stp	x4, x3, [sp, #40]
  40:	ldr	x5, [x20, #40]
  44:	str	x5, [x19, #40]
  48:	stp	xzr, xzr, [x20, #24]
  4c:	str	xzr, [x20, #40]
  50:	str	x2, [sp, #56]
  54:	bl	0 <_ZN4llvm12GenericValueaSEOS0_>
  58:	mov	x0, x19
  5c:	ldp	x19, x20, [sp, #16]
  60:	ldp	x29, x30, [sp], #64
  64:	ret

Disassembly of section .text._ZN4llvm16ExecutionContextD2Ev:

0000000000000000 <_ZN4llvm16ExecutionContextD1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	x20, [x0, #104]
  14:	str	x21, [sp, #32]
  18:	ldr	x21, [x0, #112]
  1c:	cmp	x21, x20
  20:	b.eq	30 <_ZN4llvm16ExecutionContextD1Ev+0x30>  // b.none
  24:	ldr	x0, [x20], #8
  28:	bl	0 <free>
  2c:	b	1c <_ZN4llvm16ExecutionContextD1Ev+0x1c>
  30:	ldr	x0, [x19, #104]
  34:	cbz	x0, 3c <_ZN4llvm16ExecutionContextD1Ev+0x3c>
  38:	bl	0 <_ZdlPv>
  3c:	add	x0, x19, #0x50
  40:	bl	0 <_ZN4llvm16ExecutionContextD1Ev>
  44:	add	x0, x19, #0x20
  48:	ldr	x21, [sp, #32]
  4c:	ldr	x1, [x19, #48]
  50:	ldp	x19, x20, [sp, #16]
  54:	ldp	x29, x30, [sp], #48
  58:	b	0 <_ZN4llvm16ExecutionContextD1Ev>

Disassembly of section .text._ZSt14__relocate_a_1IPN4llvm16ExecutionContextES2_SaIS1_EET0_T_S5_S4_RT1_.isra.0:

0000000000000000 <_ZSt14__relocate_a_1IPN4llvm16ExecutionContextES2_SaIS1_EET0_T_S5_S4_RT1_.isra.0>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x2
  10:	mov	x19, x0
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x22, x0
  1c:	mov	x21, x2
  20:	str	x23, [sp, #48]
  24:	mov	x23, x1
  28:	cmp	x19, x23
  2c:	b.eq	f4 <_ZSt14__relocate_a_1IPN4llvm16ExecutionContextES2_SaIS1_EET0_T_S5_S4_RT1_.isra.0+0xf4>  // b.none
  30:	ldr	x0, [x19]
  34:	add	x1, x20, #0x28
  38:	ldr	x2, [x19, #48]
  3c:	str	x0, [x20]
  40:	ldr	x0, [x19, #8]
  44:	str	x0, [x20, #8]
  48:	ldr	x0, [x19, #16]
  4c:	str	x0, [x20, #16]
  50:	ldr	x0, [x19, #24]
  54:	str	x0, [x20, #24]
  58:	cbz	x2, e4 <_ZSt14__relocate_a_1IPN4llvm16ExecutionContextES2_SaIS1_EET0_T_S5_S4_RT1_.isra.0+0xe4>
  5c:	ldr	w3, [x19, #40]
  60:	add	x0, x19, #0x28
  64:	str	x2, [x20, #48]
  68:	str	w3, [x20, #40]
  6c:	ldr	x3, [x19, #56]
  70:	str	x3, [x20, #56]
  74:	ldr	x3, [x19, #64]
  78:	str	x3, [x20, #64]
  7c:	str	x1, [x2, #8]
  80:	ldr	x1, [x19, #72]
  84:	str	x1, [x20, #72]
  88:	stp	xzr, x0, [x19, #48]
  8c:	stp	x0, xzr, [x19, #64]
  90:	add	x20, x20, #0x80
  94:	ldr	x0, [x19, #80]
  98:	stur	x0, [x20, #-48]
  9c:	ldr	x0, [x19, #88]
  a0:	stur	x0, [x20, #-40]
  a4:	ldr	x0, [x19, #96]
  a8:	stur	x0, [x20, #-32]
  ac:	stp	xzr, xzr, [x19, #80]
  b0:	str	xzr, [x19, #96]
  b4:	ldr	x0, [x19, #104]
  b8:	stur	x0, [x20, #-24]
  bc:	ldr	x0, [x19, #112]
  c0:	stur	x0, [x20, #-16]
  c4:	ldr	x0, [x19, #120]
  c8:	stur	x0, [x20, #-8]
  cc:	stp	xzr, xzr, [x19, #104]
  d0:	mov	x0, x19
  d4:	add	x19, x19, #0x80
  d8:	stur	xzr, [x19, #-8]
  dc:	bl	0 <_ZSt14__relocate_a_1IPN4llvm16ExecutionContextES2_SaIS1_EET0_T_S5_S4_RT1_.isra.0>
  e0:	b	28 <_ZSt14__relocate_a_1IPN4llvm16ExecutionContextES2_SaIS1_EET0_T_S5_S4_RT1_.isra.0+0x28>
  e4:	str	wzr, [x20, #40]
  e8:	stp	xzr, x1, [x20, #48]
  ec:	stp	x1, xzr, [x20, #64]
  f0:	b	90 <_ZSt14__relocate_a_1IPN4llvm16ExecutionContextES2_SaIS1_EET0_T_S5_S4_RT1_.isra.0+0x90>
  f4:	sub	x0, x19, x22
  f8:	add	x0, x21, x0
  fc:	ldp	x19, x20, [sp, #16]
 100:	ldp	x21, x22, [sp, #32]
 104:	ldr	x23, [sp, #48]
 108:	ldp	x29, x30, [sp], #64
 10c:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x23, x24, [sp, #48]
   c:	ldp	x24, x23, [x0]
  10:	stp	x19, x20, [sp, #16]
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x22, x1
  1c:	mov	x21, x0
  20:	str	x25, [sp, #64]
  24:	mov	x0, #0xffffffffffffff      	// #72057594037927935
  28:	sub	x1, x23, x24
  2c:	cmp	x0, x1, asr #7
  30:	b.ne	40 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x40>  // b.any
  34:	adrp	x0, 0 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
  38:	add	x0, x0, #0x0
  3c:	bl	0 <_ZSt20__throw_length_errorPKc>
  40:	asr	x19, x1, #7
  44:	sub	x25, x22, x24
  48:	cmp	x19, #0x0
  4c:	csinc	x1, x19, xzr, ne  // ne = any
  50:	adds	x19, x19, x1
  54:	b.cs	f8 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf8>  // b.hs, b.nlast
  58:	mov	x20, #0x0                   	// #0
  5c:	cbz	x19, 74 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x74>
  60:	cmp	x19, x0
  64:	csel	x19, x19, x0, ls  // ls = plast
  68:	lsl	x0, x19, #7
  6c:	bl	0 <_Znwm>
  70:	mov	x20, x0
  74:	add	x2, x20, x25
  78:	str	xzr, [x20, x25]
  7c:	add	x0, x2, #0x28
  80:	mov	x1, x22
  84:	stp	xzr, xzr, [x2, #8]
  88:	str	xzr, [x2, #24]
  8c:	str	wzr, [x2, #40]
  90:	str	xzr, [x2, #48]
  94:	stp	x0, x0, [x0, #16]
  98:	str	xzr, [x0, #32]
  9c:	mov	x0, x24
  a0:	stp	xzr, xzr, [x2, #80]
  a4:	stp	xzr, xzr, [x2, #96]
  a8:	stp	xzr, xzr, [x2, #112]
  ac:	mov	x2, x20
  b0:	bl	0 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
  b4:	add	x2, x0, #0x80
  b8:	mov	x1, x23
  bc:	mov	x0, x22
  c0:	bl	0 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
  c4:	mov	x22, x0
  c8:	cbz	x24, d4 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xd4>
  cc:	mov	x0, x24
  d0:	bl	0 <_ZdlPv>
  d4:	add	x19, x20, x19, lsl #7
  d8:	ldp	x23, x24, [sp, #48]
  dc:	ldr	x25, [sp, #64]
  e0:	stp	x20, x22, [x21]
  e4:	str	x19, [x21, #16]
  e8:	ldp	x19, x20, [sp, #16]
  ec:	ldp	x21, x22, [sp, #32]
  f0:	ldp	x29, x30, [sp], #80
  f4:	ret
  f8:	mov	x19, x0
  fc:	b	68 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x68>

Disassembly of section .text._ZN4llvm11isa_impl_clINS_12ConstantExprEPKNS_5ValueEE4doitES4_:

0000000000000000 <_ZN4llvm11isa_impl_clINS_12ConstantExprEPKNS_5ValueEE4doitES4_>:
   0:	cbnz	x0, 2c <_ZN4llvm11isa_impl_clINS_12ConstantExprEPKNS_5ValueEE4doitES4_+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm11isa_impl_clINS_12ConstantExprEPKNS_5ValueEE4doitES4_>
   c:	adrp	x1, 0 <_ZN4llvm11isa_impl_clINS_12ConstantExprEPKNS_5ValueEE4doitES4_>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm11isa_impl_clINS_12ConstantExprEPKNS_5ValueEE4doitES4_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w0, [x0, #16]
  30:	cmp	w0, #0x5
  34:	cset	w0, eq  // eq = none
  38:	ret

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE24_M_get_insert_unique_posERS4_:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE24_M_get_insert_unique_posERS4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	ldr	x2, [x0, #16]
   c:	stp	x19, x20, [sp, #16]
  10:	add	x19, x0, #0x8
  14:	mov	x20, x1
  18:	mov	w1, #0x1                   	// #1
  1c:	cbz	x2, 50 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE24_M_get_insert_unique_posERS4_+0x50>
  20:	ldr	x1, [x20]
  24:	ldr	x3, [x2, #32]
  28:	cmp	x3, x1
  2c:	b.ls	44 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE24_M_get_insert_unique_posERS4_+0x44>  // b.plast
  30:	ldr	x3, [x2, #16]
  34:	mov	w1, #0x1                   	// #1
  38:	mov	x19, x2
  3c:	mov	x2, x3
  40:	b	1c <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE24_M_get_insert_unique_posERS4_+0x1c>
  44:	mov	w1, #0x0                   	// #0
  48:	ldr	x3, [x2, #24]
  4c:	b	38 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE24_M_get_insert_unique_posERS4_+0x38>
  50:	cbz	w1, 94 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE24_M_get_insert_unique_posERS4_+0x94>
  54:	ldr	x0, [x0, #24]
  58:	cmp	x0, x19
  5c:	b.ne	74 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE24_M_get_insert_unique_posERS4_+0x74>  // b.any
  60:	mov	x1, x19
  64:	mov	x0, #0x0                   	// #0
  68:	ldp	x19, x20, [sp, #16]
  6c:	ldp	x29, x30, [sp], #32
  70:	ret
  74:	mov	x0, x19
  78:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  7c:	ldr	x1, [x20]
  80:	ldr	x2, [x0, #32]
  84:	cmp	x2, x1
  88:	csel	x0, x0, xzr, cs  // cs = hs, nlast
  8c:	csel	x1, x19, xzr, cc  // cc = lo, ul, last
  90:	b	68 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE24_M_get_insert_unique_posERS4_+0x68>
  94:	mov	x0, x19
  98:	b	7c <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE24_M_get_insert_unique_posERS4_+0x7c>

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	add	x0, x0, #0x8
  14:	stp	x21, x22, [sp, #32]
  18:	cmp	x1, x0
  1c:	mov	x21, x2
  20:	b.ne	4c <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0x4c>  // b.any
  24:	ldr	x0, [x20, #40]
  28:	cbz	x0, e0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0xe0>
  2c:	ldr	x19, [x20, #32]
  30:	ldr	x1, [x2]
  34:	ldr	x0, [x19, #32]
  38:	cmp	x1, x0
  3c:	b.ls	e0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0xe0>  // b.plast
  40:	mov	x1, x19
  44:	mov	x0, #0x0                   	// #0
  48:	b	b0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0xb0>
  4c:	ldr	x22, [x2]
  50:	mov	x19, x1
  54:	ldr	x0, [x1, #32]
  58:	cmp	x0, x22
  5c:	b.ls	9c <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0x9c>  // b.plast
  60:	ldr	x0, [x20, #24]
  64:	cmp	x0, x1
  68:	b.ne	74 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0x74>  // b.any
  6c:	mov	x1, x0
  70:	b	b0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0xb0>
  74:	mov	x0, x1
  78:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  7c:	mov	x1, x0
  80:	ldr	x0, [x0, #32]
  84:	cmp	x0, x22
  88:	b.cs	e0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0xe0>  // b.hs, b.nlast
  8c:	ldr	x0, [x1, #24]
  90:	cbz	x0, b0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0xb0>
  94:	mov	x0, x19
  98:	b	6c <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0x6c>
  9c:	b.cs	f8 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0xf8>  // b.hs, b.nlast
  a0:	ldr	x1, [x20, #32]
  a4:	cmp	x1, x19
  a8:	b.ne	c0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0xc0>  // b.any
  ac:	mov	x0, #0x0                   	// #0
  b0:	ldp	x19, x20, [sp, #16]
  b4:	ldp	x21, x22, [sp, #32]
  b8:	ldp	x29, x30, [sp], #48
  bc:	ret
  c0:	mov	x0, x19
  c4:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
  c8:	ldr	x1, [x0, #32]
  cc:	cmp	x1, x22
  d0:	b.ls	e0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0xe0>  // b.plast
  d4:	ldr	x1, [x19, #24]
  d8:	cbnz	x1, 6c <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0x6c>
  dc:	b	40 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0x40>
  e0:	mov	x1, x21
  e4:	mov	x0, x20
  e8:	ldp	x19, x20, [sp, #16]
  ec:	ldp	x21, x22, [sp, #32]
  f0:	ldp	x29, x30, [sp], #48
  f4:	b	0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_>
  f8:	mov	x0, x1
  fc:	mov	x1, #0x0                   	// #0
 100:	b	b0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0xb0>

Disassembly of section .text._ZNSt3mapIPN4llvm5ValueENS0_12GenericValueESt4lessIS2_ESaISt4pairIKS2_S3_EEEixERS7_:

0000000000000000 <_ZNSt3mapIPN4llvm5ValueENS0_12GenericValueESt4lessIS2_ESaISt4pairIKS2_S3_EEEixERS7_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	add	x22, x0, #0x8
  10:	mov	x21, x1
  14:	stp	x19, x20, [sp, #16]
  18:	mov	x19, x22
  1c:	mov	x20, x0
  20:	stp	x23, x24, [sp, #48]
  24:	ldr	x0, [x0, #16]
  28:	str	x25, [sp, #64]
  2c:	cbz	x0, 54 <_ZNSt3mapIPN4llvm5ValueENS0_12GenericValueESt4lessIS2_ESaISt4pairIKS2_S3_EEEixERS7_+0x54>
  30:	ldr	x1, [x21]
  34:	ldr	x2, [x0, #32]
  38:	cmp	x2, x1
  3c:	b.cc	4c <_ZNSt3mapIPN4llvm5ValueENS0_12GenericValueESt4lessIS2_ESaISt4pairIKS2_S3_EEEixERS7_+0x4c>  // b.lo, b.ul, b.last
  40:	mov	x19, x0
  44:	ldr	x0, [x0, #16]
  48:	b	2c <_ZNSt3mapIPN4llvm5ValueENS0_12GenericValueESt4lessIS2_ESaISt4pairIKS2_S3_EEEixERS7_+0x2c>
  4c:	ldr	x0, [x0, #24]
  50:	b	2c <_ZNSt3mapIPN4llvm5ValueENS0_12GenericValueESt4lessIS2_ESaISt4pairIKS2_S3_EEEixERS7_+0x2c>
  54:	cmp	x22, x19
  58:	b.eq	6c <_ZNSt3mapIPN4llvm5ValueENS0_12GenericValueESt4lessIS2_ESaISt4pairIKS2_S3_EEEixERS7_+0x6c>  // b.none
  5c:	ldr	x1, [x21]
  60:	ldr	x0, [x19, #32]
  64:	cmp	x1, x0
  68:	b.cs	e4 <_ZNSt3mapIPN4llvm5ValueENS0_12GenericValueESt4lessIS2_ESaISt4pairIKS2_S3_EEEixERS7_+0xe4>  // b.hs, b.nlast
  6c:	mov	x24, x19
  70:	mov	x0, #0x58                  	// #88
  74:	bl	0 <_Znwm>
  78:	mov	x19, x0
  7c:	add	x25, x0, #0x20
  80:	add	x23, x0, #0x28
  84:	ldr	x0, [x21]
  88:	str	x0, [x19, #32]
  8c:	mov	x0, x23
  90:	bl	0 <_ZNSt3mapIPN4llvm5ValueENS0_12GenericValueESt4lessIS2_ESaISt4pairIKS2_S3_EEEixERS7_>
  94:	mov	x2, x25
  98:	mov	x1, x24
  9c:	mov	x0, x20
  a0:	bl	0 <_ZNSt3mapIPN4llvm5ValueENS0_12GenericValueESt4lessIS2_ESaISt4pairIKS2_S3_EEEixERS7_>
  a4:	mov	x21, x0
  a8:	mov	x2, x1
  ac:	cbz	x1, 108 <_ZNSt3mapIPN4llvm5ValueENS0_12GenericValueESt4lessIS2_ESaISt4pairIKS2_S3_EEEixERS7_+0x108>
  b0:	cbnz	x0, 100 <_ZNSt3mapIPN4llvm5ValueENS0_12GenericValueESt4lessIS2_ESaISt4pairIKS2_S3_EEEixERS7_+0x100>
  b4:	cmp	x22, x1
  b8:	b.eq	100 <_ZNSt3mapIPN4llvm5ValueENS0_12GenericValueESt4lessIS2_ESaISt4pairIKS2_S3_EEEixERS7_+0x100>  // b.none
  bc:	ldr	x0, [x1, #32]
  c0:	ldr	x1, [x19, #32]
  c4:	cmp	x1, x0
  c8:	cset	w0, cc  // cc = lo, ul, last
  cc:	mov	x3, x22
  d0:	mov	x1, x19
  d4:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  d8:	ldr	x0, [x20, #40]
  dc:	add	x0, x0, #0x1
  e0:	str	x0, [x20, #40]
  e4:	add	x0, x19, #0x28
  e8:	ldp	x19, x20, [sp, #16]
  ec:	ldp	x21, x22, [sp, #32]
  f0:	ldp	x23, x24, [sp, #48]
  f4:	ldr	x25, [sp, #64]
  f8:	ldp	x29, x30, [sp], #80
  fc:	ret
 100:	mov	w0, #0x1                   	// #1
 104:	b	cc <_ZNSt3mapIPN4llvm5ValueENS0_12GenericValueESt4lessIS2_ESaISt4pairIKS2_S3_EEEixERS7_+0xcc>
 108:	mov	x0, x23
 10c:	bl	0 <_ZNSt3mapIPN4llvm5ValueENS0_12GenericValueESt4lessIS2_ESaISt4pairIKS2_S3_EEEixERS7_>
 110:	mov	x0, x19
 114:	mov	x19, x21
 118:	bl	0 <_ZdlPv>
 11c:	b	e4 <_ZNSt3mapIPN4llvm5ValueENS0_12GenericValueESt4lessIS2_ESaISt4pairIKS2_S3_EEEixERS7_+0xe4>

Disassembly of section .text._ZN4llvm11isa_impl_clINS_11IntegerTypeEPKNS_4TypeEE4doitES4_:

0000000000000000 <_ZN4llvm11isa_impl_clINS_11IntegerTypeEPKNS_4TypeEE4doitES4_>:
   0:	cbnz	x0, 2c <_ZN4llvm11isa_impl_clINS_11IntegerTypeEPKNS_4TypeEE4doitES4_+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm11isa_impl_clINS_11IntegerTypeEPKNS_4TypeEE4doitES4_>
   c:	adrp	x1, 0 <_ZN4llvm11isa_impl_clINS_11IntegerTypeEPKNS_4TypeEE4doitES4_>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm11isa_impl_clINS_11IntegerTypeEPKNS_4TypeEE4doitES4_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w0, [x0, #8]
  30:	cmp	w0, #0xb
  34:	cset	w0, eq  // eq = none
  38:	ret

Disassembly of section .text._ZN4llvm4castINS_11IntegerTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm4castINS_11IntegerTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4castINS_11IntegerTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  14:	tst	w0, #0xff
  18:	b.ne	3c <_ZN4llvm4castINS_11IntegerTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x3c>  // b.any
  1c:	adrp	x3, 0 <_ZN4llvm4castINS_11IntegerTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  20:	adrp	x1, 0 <_ZN4llvm4castINS_11IntegerTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  24:	adrp	x0, 0 <_ZN4llvm4castINS_11IntegerTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x108                 	// #264
  38:	bl	0 <__assert_fail>
  3c:	mov	x0, x19
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZN4llvm11isa_impl_clINS_10StructTypeEPKNS_4TypeEE4doitES4_:

0000000000000000 <_ZN4llvm11isa_impl_clINS_10StructTypeEPKNS_4TypeEE4doitES4_>:
   0:	cbnz	x0, 2c <_ZN4llvm11isa_impl_clINS_10StructTypeEPKNS_4TypeEE4doitES4_+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm11isa_impl_clINS_10StructTypeEPKNS_4TypeEE4doitES4_>
   c:	adrp	x1, 0 <_ZN4llvm11isa_impl_clINS_10StructTypeEPKNS_4TypeEE4doitES4_>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm11isa_impl_clINS_10StructTypeEPKNS_4TypeEE4doitES4_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w0, [x0, #8]
  30:	cmp	w0, #0xd
  34:	cset	w0, eq  // eq = none
  38:	ret

Disassembly of section .text._ZN4llvm4castINS_10StructTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm4castINS_10StructTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4castINS_10StructTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  14:	tst	w0, #0xff
  18:	b.ne	3c <_ZN4llvm4castINS_10StructTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x3c>  // b.any
  1c:	adrp	x3, 0 <_ZN4llvm4castINS_10StructTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  20:	adrp	x1, 0 <_ZN4llvm4castINS_10StructTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  24:	adrp	x0, 0 <_ZN4llvm4castINS_10StructTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x108                 	// #264
  38:	bl	0 <__assert_fail>
  3c:	mov	x0, x19
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	ldrb	w19, [x1, #8]
  14:	str	x21, [sp, #32]
  18:	cmp	w19, #0xb
  1c:	b.eq	138 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x138>  // b.none
  20:	mov	x21, x0
  24:	mov	x0, x1
  28:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  2c:	tst	w0, #0xff
  30:	b.ne	90 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x90>  // b.any
  34:	cmp	w19, #0xf
  38:	b.eq	d0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xd0>  // b.none
  3c:	cmp	w19, #0x9
  40:	b.eq	184 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x184>  // b.none
  44:	sub	w0, w19, #0xd
  48:	and	w0, w0, #0xff
  4c:	cmp	w0, #0x1
  50:	b.ls	7c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x7c>  // b.plast
  54:	cmp	w19, #0x10
  58:	b.eq	7c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x7c>  // b.none
  5c:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  60:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  64:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  68:	add	x3, x3, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x0, x0, #0x0
  74:	mov	w2, #0x271                 	// #625
  78:	bl	0 <__assert_fail>
  7c:	mov	x0, x20
  80:	mov	x1, #0x0                   	// #0
  84:	bl	0 <_ZNK4llvm4Type18isSizedDerivedTypeEPNS_15SmallPtrSetImplIPS0_EE>
  88:	tst	w0, #0xff
  8c:	b.eq	5c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x5c>  // b.none
  90:	ldrb	w0, [x20, #8]
  94:	sub	w0, w0, #0x1
  98:	cmp	w0, #0xf
  9c:	b.hi	200 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x200>  // b.pmore
  a0:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  a4:	add	x1, x1, #0x0
  a8:	ldrb	w0, [x1, w0, uxtw]
  ac:	adr	x1, b8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xb8>
  b0:	add	x0, x1, w0, sxtb #2
  b4:	br	x0
  b8:	mov	w1, #0x0                   	// #0
  bc:	mov	x0, x21
  c0:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
  c4:	lsl	w0, w0, #3
  c8:	mov	x1, #0x0                   	// #0
  cc:	b	108 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x108>
  d0:	mov	x0, x20
  d4:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  d8:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  dc:	ldr	w1, [x0, #8]
  e0:	lsr	w1, w1, #8
  e4:	b	bc <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xbc>
  e8:	ldp	x1, x19, [x20, #24]
  ec:	mov	x0, x21
  f0:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  f4:	mul	x0, x19, x0
  f8:	and	w2, w1, #0xff
  fc:	mov	x1, #0x0                   	// #0
 100:	lsl	x0, x0, #3
 104:	bfxil	x1, x2, #0, #8
 108:	ldp	x19, x20, [sp, #16]
 10c:	ldr	x21, [sp, #32]
 110:	ldp	x29, x30, [sp], #64
 114:	ret
 118:	mov	x0, x20
 11c:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 120:	mov	x1, x0
 124:	mov	x0, x21
 128:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 12c:	ldr	x0, [x0]
 130:	lsl	x0, x0, #3
 134:	b	c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xc8>
 138:	mov	x0, x20
 13c:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 140:	tst	w0, #0xff
 144:	b.ne	168 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x168>  // b.any
 148:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 14c:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 150:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 154:	add	x3, x3, #0x0
 158:	add	x1, x1, #0x0
 15c:	add	x0, x0, #0x0
 160:	mov	w2, #0x108                 	// #264
 164:	b	78 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x78>
 168:	ldr	w0, [x20, #8]
 16c:	lsr	w0, w0, #8
 170:	b	c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xc8>
 174:	mov	x0, #0x10                  	// #16
 178:	b	c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xc8>
 17c:	mov	x0, #0x20                  	// #32
 180:	b	c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xc8>
 184:	mov	x0, #0x40                  	// #64
 188:	b	c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xc8>
 18c:	mov	x0, #0x80                  	// #128
 190:	b	c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xc8>
 194:	mov	x0, #0x50                  	// #80
 198:	b	c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xc8>
 19c:	mov	x0, x20
 1a0:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1a4:	ldr	x19, [x0, #32]
 1a8:	mov	x1, #0xffffffff            	// #4294967295
 1ac:	cmp	x19, x1
 1b0:	b.ls	1d4 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1d4>  // b.plast
 1b4:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1b8:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1bc:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1c0:	add	x3, x3, #0x0
 1c4:	add	x1, x1, #0x0
 1c8:	add	x0, x0, #0x0
 1cc:	mov	w2, #0x220                 	// #544
 1d0:	b	78 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x78>
 1d4:	ldr	x1, [x0, #24]
 1d8:	ldrb	w20, [x0, #40]
 1dc:	mov	x0, x21
 1e0:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1e4:	stp	x0, x1, [sp, #48]
 1e8:	add	x0, sp, #0x30
 1ec:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1f0:	mul	x0, x0, x19
 1f4:	mov	x1, #0x0                   	// #0
 1f8:	bfxil	x1, x20, #0, #8
 1fc:	b	108 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x108>
 200:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 204:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 208:	add	x1, x1, #0x0
 20c:	add	x0, x0, #0x0
 210:	mov	w2, #0x298                 	// #664
 214:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x21, x0
  14:	mov	x22, x1
  18:	bl	0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  1c:	add	x19, x0, #0x7
  20:	and	w20, w1, #0xff
  24:	mov	x0, x21
  28:	mov	x1, x22
  2c:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
  30:	cbnz	w0, 54 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE+0x54>
  34:	adrp	x3, 0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  38:	adrp	x1, 0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  3c:	adrp	x0, 0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  40:	add	x3, x3, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x0, x0, #0x0
  4c:	mov	w2, #0xc7                  	// #199
  50:	bl	0 <__assert_fail>
  54:	lsr	x19, x19, #3
  58:	mov	w1, w0
  5c:	sub	x19, x19, #0x1
  60:	add	x19, x19, x1
  64:	ldp	x21, x22, [sp, #32]
  68:	udiv	x19, x19, x1
  6c:	mul	x0, x19, x1
  70:	and	x1, x20, #0xff
  74:	ldp	x19, x20, [sp, #16]
  78:	ldp	x29, x30, [sp], #48
  7c:	ret

Disassembly of section .text._ZN4llvm11isa_impl_clINS_14SequentialTypeEPKNS_4TypeEE4doitES4_:

0000000000000000 <_ZN4llvm11isa_impl_clINS_14SequentialTypeEPKNS_4TypeEE4doitES4_>:
   0:	cbnz	x0, 2c <_ZN4llvm11isa_impl_clINS_14SequentialTypeEPKNS_4TypeEE4doitES4_+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm11isa_impl_clINS_14SequentialTypeEPKNS_4TypeEE4doitES4_>
   c:	adrp	x1, 0 <_ZN4llvm11isa_impl_clINS_14SequentialTypeEPKNS_4TypeEE4doitES4_>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm11isa_impl_clINS_14SequentialTypeEPKNS_4TypeEE4doitES4_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w0, [x0, #8]
  30:	cmp	w0, #0xe
  34:	b.eq	44 <_ZN4llvm11isa_impl_clINS_14SequentialTypeEPKNS_4TypeEE4doitES4_+0x44>  // b.none
  38:	cmp	w0, #0x10
  3c:	cset	w0, eq  // eq = none
  40:	ret
  44:	mov	w0, #0x1                   	// #1
  48:	ret

Disassembly of section .text._ZN4llvm11isa_impl_clINS_8FunctionEPKNS_5ValueEE4doitES4_:

0000000000000000 <_ZN4llvm11isa_impl_clINS_8FunctionEPKNS_5ValueEE4doitES4_>:
   0:	cbnz	x0, 2c <_ZN4llvm11isa_impl_clINS_8FunctionEPKNS_5ValueEE4doitES4_+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm11isa_impl_clINS_8FunctionEPKNS_5ValueEE4doitES4_>
   c:	adrp	x1, 0 <_ZN4llvm11isa_impl_clINS_8FunctionEPKNS_5ValueEE4doitES4_>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm11isa_impl_clINS_8FunctionEPKNS_5ValueEE4doitES4_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w0, [x0, #16]
  30:	cmp	w0, #0x0
  34:	cset	w0, eq  // eq = none
  38:	ret

Disassembly of section .text._ZN4llvm4castINS_8FunctionENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm4castINS_8FunctionENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4castINS_8FunctionENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  14:	tst	w0, #0xff
  18:	b.ne	3c <_ZN4llvm4castINS_8FunctionENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x3c>  // b.any
  1c:	adrp	x3, 0 <_ZN4llvm4castINS_8FunctionENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  20:	adrp	x1, 0 <_ZN4llvm4castINS_8FunctionENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  24:	adrp	x0, 0 <_ZN4llvm4castINS_8FunctionENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x108                 	// #264
  38:	bl	0 <__assert_fail>
  3c:	mov	x0, x19
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZN4llvm11isa_impl_clINS_10BasicBlockEPKNS_5ValueEE4doitES4_:

0000000000000000 <_ZN4llvm11isa_impl_clINS_10BasicBlockEPKNS_5ValueEE4doitES4_>:
   0:	cbnz	x0, 2c <_ZN4llvm11isa_impl_clINS_10BasicBlockEPKNS_5ValueEE4doitES4_+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm11isa_impl_clINS_10BasicBlockEPKNS_5ValueEE4doitES4_>
   c:	adrp	x1, 0 <_ZN4llvm11isa_impl_clINS_10BasicBlockEPKNS_5ValueEE4doitES4_>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm11isa_impl_clINS_10BasicBlockEPKNS_5ValueEE4doitES4_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w0, [x0, #16]
  30:	cmp	w0, #0x12
  34:	cset	w0, eq  // eq = none
  38:	ret

Disassembly of section .text._ZN4llvm4castINS_10BasicBlockENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm4castINS_10BasicBlockENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4castINS_10BasicBlockENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  14:	tst	w0, #0xff
  18:	b.ne	3c <_ZN4llvm4castINS_10BasicBlockENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x3c>  // b.any
  1c:	adrp	x3, 0 <_ZN4llvm4castINS_10BasicBlockENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  20:	adrp	x1, 0 <_ZN4llvm4castINS_10BasicBlockENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  24:	adrp	x0, 0 <_ZN4llvm4castINS_10BasicBlockENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x108                 	// #264
  38:	bl	0 <__assert_fail>
  3c:	mov	x0, x19
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE16getCaseSuccessorEv:

0000000000000000 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE16getCaseSuccessorEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x3, [x0, #8]
   c:	ldr	x0, [x0]
  10:	ldr	w2, [x0, #20]
  14:	ubfx	x2, x2, #1, #27
  18:	sub	w1, w2, #0x1
  1c:	cmp	w3, w1
  20:	b.cc	90 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE16getCaseSuccessorEv+0x90>  // b.lo, b.ul, b.last
  24:	cmn	w3, #0x2
  28:	mov	w1, #0x0                   	// #0
  2c:	b.eq	54 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE16getCaseSuccessorEv+0x54>  // b.none
  30:	adrp	x3, 0 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE16getCaseSuccessorEv>
  34:	adrp	x1, 0 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE16getCaseSuccessorEv>
  38:	adrp	x0, 0 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE16getCaseSuccessorEv>
  3c:	add	x3, x3, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x0, x0, #0x0
  48:	mov	w2, #0xc7f                 	// #3199
  4c:	bl	0 <__assert_fail>
  50:	add	w1, w3, #0x1
  54:	cmp	w2, w1
  58:	b.hi	7c <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE16getCaseSuccessorEv+0x7c>  // b.pmore
  5c:	adrp	x3, 0 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE16getCaseSuccessorEv>
  60:	adrp	x1, 0 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE16getCaseSuccessorEv>
  64:	adrp	x0, 0 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE16getCaseSuccessorEv>
  68:	add	x3, x3, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x0, x0, #0x0
  74:	mov	w2, #0xd7c                 	// #3452
  78:	b	4c <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE16getCaseSuccessorEv+0x4c>
  7c:	lsl	w1, w1, #1
  80:	add	w1, w1, #0x1
  84:	bl	0 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE16getCaseSuccessorEv>
  88:	ldp	x29, x30, [sp], #16
  8c:	b	0 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE16getCaseSuccessorEv>
  90:	cmn	w3, #0x2
  94:	b.ne	50 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE16getCaseSuccessorEv+0x50>  // b.any
  98:	mov	w1, #0x0                   	// #0
  9c:	b	54 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE16getCaseSuccessorEv+0x54>

Disassembly of section .text._ZNK4llvm10BranchInst12getSuccessorEj:

0000000000000000 <_ZNK4llvm10BranchInst12getSuccessorEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	ldr	w2, [x0, #20]
   c:	str	x19, [sp, #16]
  10:	ubfx	x2, x2, #0, #28
  14:	cmp	w2, #0x3
  18:	cset	w2, eq  // eq = none
  1c:	add	w2, w2, #0x1
  20:	cmp	w1, w2
  24:	b.cc	48 <_ZNK4llvm10BranchInst12getSuccessorEj+0x48>  // b.lo, b.ul, b.last
  28:	adrp	x3, 0 <_ZNK4llvm10BranchInst12getSuccessorEj>
  2c:	adrp	x1, 0 <_ZNK4llvm10BranchInst12getSuccessorEj>
  30:	adrp	x0, 0 <_ZNK4llvm10BranchInst12getSuccessorEj>
  34:	add	x3, x3, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x0, x0, #0x0
  40:	mov	w2, #0xc03                 	// #3075
  44:	bl	0 <__assert_fail>
  48:	mov	w2, #0x18                  	// #24
  4c:	umsubl	x1, w1, w2, x0
  50:	ldur	x19, [x1, #-24]
  54:	cbz	x19, 98 <_ZNK4llvm10BranchInst12getSuccessorEj+0x98>
  58:	mov	x0, x19
  5c:	bl	0 <_ZNK4llvm10BranchInst12getSuccessorEj>
  60:	tst	w0, #0xff
  64:	b.ne	88 <_ZNK4llvm10BranchInst12getSuccessorEj+0x88>  // b.any
  68:	adrp	x3, 0 <_ZNK4llvm10BranchInst12getSuccessorEj>
  6c:	adrp	x1, 0 <_ZNK4llvm10BranchInst12getSuccessorEj>
  70:	adrp	x0, 0 <_ZNK4llvm10BranchInst12getSuccessorEj>
  74:	add	x3, x3, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x0, x0, #0x0
  80:	mov	w2, #0x134                 	// #308
  84:	b	44 <_ZNK4llvm10BranchInst12getSuccessorEj+0x44>
  88:	mov	x0, x19
  8c:	ldr	x19, [sp, #16]
  90:	ldp	x29, x30, [sp], #32
  94:	b	0 <_ZNK4llvm10BranchInst12getSuccessorEj>
  98:	mov	x0, #0x0                   	// #0
  9c:	ldr	x19, [sp, #16]
  a0:	ldp	x29, x30, [sp], #32
  a4:	ret

Disassembly of section .text._ZN4llvm18PointerIntPairInfoIPvLj1ENS_20pointer_union_detail22PointerUnionUIntTraitsIJPNS_10StructTypeEPNS_4TypeEEEEE9updateIntEll:

0000000000000000 <_ZN4llvm18PointerIntPairInfoIPvLj1ENS_20pointer_union_detail22PointerUnionUIntTraitsIJPNS_10StructTypeEPNS_4TypeEEEEE9updateIntEll>:
   0:	tst	x1, #0xfffffffffffffffe
   4:	b.eq	30 <_ZN4llvm18PointerIntPairInfoIPvLj1ENS_20pointer_union_detail22PointerUnionUIntTraitsIJPNS_10StructTypeEPNS_4TypeEEEEE9updateIntEll+0x30>  // b.none
   8:	stp	x29, x30, [sp, #-16]!
   c:	adrp	x3, 0 <_ZN4llvm18PointerIntPairInfoIPvLj1ENS_20pointer_union_detail22PointerUnionUIntTraitsIJPNS_10StructTypeEPNS_4TypeEEEEE9updateIntEll>
  10:	adrp	x1, 0 <_ZN4llvm18PointerIntPairInfoIPvLj1ENS_20pointer_union_detail22PointerUnionUIntTraitsIJPNS_10StructTypeEPNS_4TypeEEEEE9updateIntEll>
  14:	mov	x29, sp
  18:	adrp	x0, 0 <_ZN4llvm18PointerIntPairInfoIPvLj1ENS_20pointer_union_detail22PointerUnionUIntTraitsIJPNS_10StructTypeEPNS_4TypeEEEEE9updateIntEll>
  1c:	add	x3, x3, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0xba                  	// #186
  2c:	bl	0 <__assert_fail>
  30:	and	x0, x0, #0xfffffffffffffffb
  34:	orr	x0, x0, x1, lsl #2
  38:	ret

Disassembly of section .text._ZN4llvm20pointer_union_detail19PointerUnionMembersINS_12PointerUnionIJPNS_10StructTypeEPNS_4TypeEEEENS_14PointerIntPairIPvLj1EiNS0_22PointerUnionUIntTraitsIJS4_S6_EEENS_18PointerIntPairInfoIS9_Lj1ESB_EEEELi1EJS6_EEaSES6_:

0000000000000000 <_ZN4llvm20pointer_union_detail19PointerUnionMembersINS_12PointerUnionIJPNS_10StructTypeEPNS_4TypeEEEENS_14PointerIntPairIPvLj1EiNS0_22PointerUnionUIntTraitsIJS4_S6_EEENS_18PointerIntPairInfoIS9_Lj1ESB_EEEELi1EJS6_EEaSES6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	tst	x1, #0x7
   8:	mov	x29, sp
   c:	str	x19, [sp, #16]
  10:	b.eq	34 <_ZN4llvm20pointer_union_detail19PointerUnionMembersINS_12PointerUnionIJPNS_10StructTypeEPNS_4TypeEEEENS_14PointerIntPairIPvLj1EiNS0_22PointerUnionUIntTraitsIJS4_S6_EEENS_18PointerIntPairInfoIS9_Lj1ESB_EEEELi1EJS6_EEaSES6_+0x34>  // b.none
  14:	adrp	x3, 0 <_ZN4llvm20pointer_union_detail19PointerUnionMembersINS_12PointerUnionIJPNS_10StructTypeEPNS_4TypeEEEENS_14PointerIntPairIPvLj1EiNS0_22PointerUnionUIntTraitsIJS4_S6_EEENS_18PointerIntPairInfoIS9_Lj1ESB_EEEELi1EJS6_EEaSES6_>
  18:	adrp	x1, 0 <_ZN4llvm20pointer_union_detail19PointerUnionMembersINS_12PointerUnionIJPNS_10StructTypeEPNS_4TypeEEEENS_14PointerIntPairIPvLj1EiNS0_22PointerUnionUIntTraitsIJS4_S6_EEENS_18PointerIntPairInfoIS9_Lj1ESB_EEEELi1EJS6_EEaSES6_>
  1c:	adrp	x0, 0 <_ZN4llvm20pointer_union_detail19PointerUnionMembersINS_12PointerUnionIJPNS_10StructTypeEPNS_4TypeEEEENS_14PointerIntPairIPvLj1EiNS0_22PointerUnionUIntTraitsIJS4_S6_EEENS_18PointerIntPairInfoIS9_Lj1ESB_EEEELi1EJS6_EEaSES6_>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0xb2                  	// #178
  30:	bl	0 <__assert_fail>
  34:	mov	x19, x0
  38:	mov	x0, x1
  3c:	mov	x1, #0x1                   	// #1
  40:	bl	0 <_ZN4llvm20pointer_union_detail19PointerUnionMembersINS_12PointerUnionIJPNS_10StructTypeEPNS_4TypeEEEENS_14PointerIntPairIPvLj1EiNS0_22PointerUnionUIntTraitsIJS4_S6_EEENS_18PointerIntPairInfoIS9_Lj1ESB_EEEELi1EJS6_EEaSES6_>
  44:	str	x0, [x19]
  48:	mov	x0, x19
  4c:	ldr	x19, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	ret

Disassembly of section .text._ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKN4llvm12GenericValueEPS4_EET0_T_S9_S8_:

0000000000000000 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKN4llvm12GenericValueEPS4_EET0_T_S9_S8_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	sub	x19, x1, x0
  10:	mov	x20, x0
  14:	asr	x19, x19, #4
  18:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  1c:	movk	x0, #0xaaab
  20:	stp	x21, x22, [sp, #32]
  24:	mov	x21, x2
  28:	mul	x19, x19, x0
  2c:	str	x23, [sp, #48]
  30:	mov	x23, x2
  34:	mov	x22, x19
  38:	cmp	x22, #0x0
  3c:	b.le	5c <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKN4llvm12GenericValueEPS4_EET0_T_S9_S8_+0x5c>
  40:	mov	x1, x20
  44:	mov	x0, x23
  48:	add	x20, x20, #0x30
  4c:	add	x23, x23, #0x30
  50:	sub	x22, x22, #0x1
  54:	bl	0 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKN4llvm12GenericValueEPS4_EET0_T_S9_S8_>
  58:	b	38 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKN4llvm12GenericValueEPS4_EET0_T_S9_S8_+0x38>
  5c:	cmp	x19, #0x0
  60:	mov	x0, #0x30                  	// #48
  64:	csel	x19, x19, xzr, ge  // ge = tcont
  68:	ldr	x23, [sp, #48]
  6c:	madd	x0, x19, x0, x21
  70:	ldp	x19, x20, [sp, #16]
  74:	ldp	x21, x22, [sp, #32]
  78:	ldp	x29, x30, [sp], #64
  7c:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	cmp	x1, x0
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	stp	x21, x22, [sp, #32]
  18:	stp	x23, x24, [sp, #48]
  1c:	str	x25, [sp, #64]
  20:	b.eq	b0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0xb0>  // b.none
  24:	mov	x22, x1
  28:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  2c:	ldr	x24, [x0]
  30:	movk	x2, #0xaaab
  34:	ldp	x21, x25, [x22]
  38:	ldr	x1, [x0, #16]
  3c:	sub	x1, x1, x24
  40:	sub	x23, x25, x21
  44:	asr	x1, x1, #4
  48:	asr	x0, x23, #4
  4c:	mul	x1, x1, x2
  50:	mul	x0, x0, x2
  54:	cmp	x1, x0
  58:	b.cs	cc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0xcc>  // b.hs, b.nlast
  5c:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
  60:	mov	x20, x0
  64:	mov	x22, x0
  68:	cmp	x25, x21
  6c:	b.eq	88 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x88>  // b.none
  70:	mov	x1, x21
  74:	mov	x0, x22
  78:	add	x21, x21, #0x30
  7c:	add	x22, x22, #0x30
  80:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
  84:	b	68 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x68>
  88:	ldp	x0, x1, [x19]
  8c:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
  90:	ldr	x0, [x19]
  94:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
  98:	str	x20, [x19]
  9c:	add	x20, x20, x23
  a0:	str	x20, [x19, #16]
  a4:	ldr	x0, [x19]
  a8:	add	x23, x0, x23
  ac:	str	x23, [x19, #8]
  b0:	mov	x0, x19
  b4:	ldp	x19, x20, [sp, #16]
  b8:	ldp	x21, x22, [sp, #32]
  bc:	ldp	x23, x24, [sp, #48]
  c0:	ldr	x25, [sp, #64]
  c4:	ldp	x29, x30, [sp], #80
  c8:	ret
  cc:	ldr	x20, [x19, #8]
  d0:	sub	x20, x20, x24
  d4:	asr	x20, x20, #4
  d8:	mul	x20, x20, x2
  dc:	cmp	x0, x20
  e0:	b.hi	114 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x114>  // b.pmore
  e4:	mov	x0, x21
  e8:	mov	x2, x24
  ec:	mov	x1, x25
  f0:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
  f4:	ldr	x21, [x19, #8]
  f8:	mov	x20, x0
  fc:	cmp	x21, x20
 100:	b.eq	a4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0xa4>  // b.none
 104:	mov	x0, x20
 108:	add	x20, x20, #0x30
 10c:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 110:	b	fc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0xfc>
 114:	cmp	x20, #0x0
 118:	b.le	138 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x138>
 11c:	mov	x1, x21
 120:	mov	x0, x24
 124:	add	x21, x21, #0x30
 128:	add	x24, x24, #0x30
 12c:	sub	x20, x20, #0x1
 130:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 134:	b	114 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x114>
 138:	ldp	x1, x21, [x19]
 13c:	ldp	x20, x22, [x22]
 140:	sub	x1, x21, x1
 144:	add	x20, x20, x1
 148:	cmp	x22, x20
 14c:	b.eq	a4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0xa4>  // b.none
 150:	mov	x1, x20
 154:	mov	x0, x21
 158:	add	x20, x20, #0x30
 15c:	add	x21, x21, #0x30
 160:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 164:	b	148 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x148>

Disassembly of section .text._ZN4llvm12GenericValueaSERKS0_:

0000000000000000 <_ZN4llvm12GenericValueaSERKS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	mov	x19, x0
  14:	ldr	x2, [x1], #8
  18:	str	x2, [x0], #8
  1c:	bl	0 <_ZN4llvm12GenericValueaSERKS0_>
  20:	add	x1, x20, #0x18
  24:	add	x0, x19, #0x18
  28:	bl	0 <_ZN4llvm12GenericValueaSERKS0_>
  2c:	mov	x0, x19
  30:	ldp	x19, x20, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret

Disassembly of section .text._ZN4llvm11isa_impl_clINS_10InvokeInstEPKNS_11InstructionEE4doitES4_:

0000000000000000 <_ZN4llvm11isa_impl_clINS_10InvokeInstEPKNS_11InstructionEE4doitES4_>:
   0:	cbnz	x0, 2c <_ZN4llvm11isa_impl_clINS_10InvokeInstEPKNS_11InstructionEE4doitES4_+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm11isa_impl_clINS_10InvokeInstEPKNS_11InstructionEE4doitES4_>
   c:	adrp	x1, 0 <_ZN4llvm11isa_impl_clINS_10InvokeInstEPKNS_11InstructionEE4doitES4_>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm11isa_impl_clINS_10InvokeInstEPKNS_11InstructionEE4doitES4_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w0, [x0, #16]
  30:	cmp	w0, #0x1d
  34:	cset	w0, eq  // eq = none
  38:	ret

Disassembly of section .text._ZN4llvm4castINS_10InvokeInstENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm4castINS_10InvokeInstENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4castINS_10InvokeInstENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  14:	tst	w0, #0xff
  18:	b.ne	3c <_ZN4llvm4castINS_10InvokeInstENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x3c>  // b.any
  1c:	adrp	x3, 0 <_ZN4llvm4castINS_10InvokeInstENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  20:	adrp	x1, 0 <_ZN4llvm4castINS_10InvokeInstENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  24:	adrp	x0, 0 <_ZN4llvm4castINS_10InvokeInstENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x108                 	// #264
  38:	bl	0 <__assert_fail>
  3c:	mov	x0, x19
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E9arg_beginEv:

0000000000000000 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E9arg_beginEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x1, [x0]
   c:	and	x0, x1, #0xfffffffffffffff8
  10:	ubfx	x1, x1, #1, #2
  14:	cmp	x1, #0x1
  18:	b.ne	38 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E9arg_beginEv+0x38>  // b.any
  1c:	bl	0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E9arg_beginEv>
  20:	ldr	w1, [x0, #20]
  24:	mov	w2, #0x18                  	// #24
  28:	ldp	x29, x30, [sp], #16
  2c:	ubfx	x1, x1, #0, #28
  30:	umsubl	x0, w1, w2, x0
  34:	ret
  38:	cmp	x1, #0x2
  3c:	b.ne	48 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E9arg_beginEv+0x48>  // b.any
  40:	bl	0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E9arg_beginEv>
  44:	b	20 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E9arg_beginEv+0x20>
  48:	bl	0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E9arg_beginEv>
  4c:	b	20 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E9arg_beginEv+0x20>

Disassembly of section .text._ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv:

0000000000000000 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x1, [x0]
   c:	and	x0, x1, #0xfffffffffffffff8
  10:	ubfx	x1, x1, #1, #2
  14:	cmp	x1, #0x1
  18:	b.ne	28 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x28>  // b.any
  1c:	bl	0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
  20:	ldp	x29, x30, [sp], #16
  24:	b	0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
  28:	cmp	x1, #0x2
  2c:	b.ne	38 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x38>  // b.any
  30:	bl	0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
  34:	b	20 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x20>
  38:	bl	0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
  3c:	b	20 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x20>

Disassembly of section .text._ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E8arg_sizeEv:

0000000000000000 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E8arg_sizeEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	bl	0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E8arg_sizeEv>
  14:	mov	x19, x0
  18:	mov	x0, x20
  1c:	bl	0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E8arg_sizeEv>
  20:	sub	x19, x19, x0
  24:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  28:	asr	x19, x19, #3
  2c:	movk	x0, #0xaaab
  30:	mul	w0, w19, w0
  34:	ldp	x19, x20, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret

Disassembly of section .text._ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN4llvm12GenericValueEPS3_EET0_T_S8_S7_:

0000000000000000 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN4llvm12GenericValueEPS3_EET0_T_S8_S7_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x2
  10:	mov	x19, x0
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x21, x0
  1c:	mov	x22, x2
  20:	str	x23, [sp, #48]
  24:	mov	x23, x1
  28:	cmp	x19, x23
  2c:	b.eq	48 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN4llvm12GenericValueEPS3_EET0_T_S8_S7_+0x48>  // b.none
  30:	mov	x1, x19
  34:	mov	x0, x22
  38:	add	x19, x19, #0x30
  3c:	add	x22, x22, #0x30
  40:	bl	0 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN4llvm12GenericValueEPS3_EET0_T_S8_S7_>
  44:	b	28 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN4llvm12GenericValueEPS3_EET0_T_S8_S7_+0x28>
  48:	sub	x19, x19, x21
  4c:	mov	x0, #0xaaab                	// #43691
  50:	movk	x0, #0xaaaa, lsl #16
  54:	lsr	x19, x19, #4
  58:	movk	x0, #0xaaaa, lsl #32
  5c:	movk	x0, #0xaaa, lsl #48
  60:	ldp	x21, x22, [sp, #32]
  64:	mul	x19, x19, x0
  68:	mov	x0, #0x30                  	// #48
  6c:	and	x19, x19, #0xfffffffffffffff
  70:	ldr	x23, [sp, #48]
  74:	madd	x0, x19, x0, x20
  78:	ldp	x19, x20, [sp, #16]
  7c:	ldp	x29, x30, [sp], #64
  80:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm>:
   0:	cbz	x1, 100 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x100>
   4:	stp	x29, x30, [sp, #-80]!
   8:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   c:	movk	x3, #0xaaab
  10:	mov	x29, sp
  14:	stp	x21, x22, [sp, #32]
  18:	ldp	x21, x22, [x0]
  1c:	stp	x23, x24, [sp, #48]
  20:	ldr	x2, [x0, #16]
  24:	stp	x19, x20, [sp, #16]
  28:	mov	x19, x0
  2c:	sub	x2, x2, x22
  30:	sub	x21, x22, x21
  34:	str	x25, [sp, #64]
  38:	mov	x20, x1
  3c:	asr	x2, x2, #4
  40:	asr	x23, x21, #4
  44:	mul	x2, x2, x3
  48:	mul	x23, x23, x3
  4c:	cmp	x2, x1
  50:	b.cc	94 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x94>  // b.lo, b.ul, b.last
  54:	mov	x23, x22
  58:	mov	x21, x1
  5c:	mov	x0, x23
  60:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm>
  64:	add	x23, x23, #0x30
  68:	subs	x21, x21, #0x1
  6c:	b.ne	5c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x5c>  // b.any
  70:	mov	x1, #0x30                  	// #48
  74:	madd	x20, x20, x1, x22
  78:	str	x20, [x19, #8]
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldp	x21, x22, [sp, #32]
  84:	ldp	x23, x24, [sp, #48]
  88:	ldr	x25, [sp, #64]
  8c:	ldp	x29, x30, [sp], #80
  90:	ret
  94:	adrp	x2, 0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm>
  98:	add	x2, x2, #0x0
  9c:	mov	x25, x20
  a0:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm>
  a4:	mov	x24, x0
  a8:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm>
  ac:	mov	x22, x0
  b0:	add	x21, x0, x21
  b4:	mov	x0, x21
  b8:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm>
  bc:	add	x21, x21, #0x30
  c0:	subs	x25, x25, #0x1
  c4:	b.ne	b4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0xb4>  // b.any
  c8:	ldp	x0, x1, [x19]
  cc:	mov	x2, x22
  d0:	add	x20, x20, x23
  d4:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm>
  d8:	ldp	x0, x1, [x19]
  dc:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm>
  e0:	ldr	x0, [x19]
  e4:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm>
  e8:	mov	x2, #0x30                  	// #48
  ec:	madd	x20, x20, x2, x22
  f0:	stp	x22, x20, [x19]
  f4:	madd	x22, x24, x2, x22
  f8:	str	x22, [x19, #16]
  fc:	b	7c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x7c>
 100:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   8:	movk	x4, #0xaaab
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x19, x1
  18:	ldp	x3, x1, [x0]
  1c:	sub	x2, x1, x3
  20:	asr	x2, x2, #4
  24:	mul	x2, x2, x4
  28:	cmp	x19, x2
  2c:	b.ls	40 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm+0x40>  // b.plast
  30:	sub	x1, x19, x2
  34:	ldp	x19, x20, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	b	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm>
  40:	b.cs	64 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm+0x64>  // b.hs, b.nlast
  44:	mov	x20, x0
  48:	mov	x0, #0x30                  	// #48
  4c:	madd	x19, x19, x0, x3
  50:	cmp	x19, x1
  54:	b.eq	64 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm+0x64>  // b.none
  58:	mov	x0, x19
  5c:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm>
  60:	str	x19, [x20, #8]
  64:	ldp	x19, x20, [sp, #16]
  68:	ldp	x29, x30, [sp], #32
  6c:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldp	x20, x2, [x0, #8]
  14:	stp	x21, x22, [sp, #32]
  18:	stp	x23, x24, [sp, #48]
  1c:	str	x25, [sp, #64]
  20:	cmp	x20, x2
  24:	b.eq	54 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x54>  // b.none
  28:	mov	x0, x20
  2c:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>
  30:	ldr	x0, [x19, #8]
  34:	add	x0, x0, #0x30
  38:	str	x0, [x19, #8]
  3c:	ldp	x19, x20, [sp, #16]
  40:	ldp	x21, x22, [sp, #32]
  44:	ldp	x23, x24, [sp, #48]
  48:	ldr	x25, [sp, #64]
  4c:	ldp	x29, x30, [sp], #80
  50:	ret
  54:	mov	x24, x1
  58:	adrp	x2, 0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>
  5c:	mov	x1, #0x1                   	// #1
  60:	add	x2, x2, #0x0
  64:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>
  68:	mov	x22, x0
  6c:	ldr	x23, [x19]
  70:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>
  74:	mov	x1, x24
  78:	mov	x21, x0
  7c:	sub	x25, x20, x23
  80:	add	x0, x0, x25
  84:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>
  88:	mov	x2, x21
  8c:	mov	x1, x20
  90:	mov	x0, x23
  94:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>
  98:	mov	x1, x20
  9c:	add	x2, x0, #0x30
  a0:	mov	x0, x20
  a4:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>
  a8:	mov	x1, x20
  ac:	mov	x24, x0
  b0:	mov	x0, x23
  b4:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>
  b8:	mov	x0, x23
  bc:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>
  c0:	stp	x21, x24, [x19]
  c4:	mov	x0, #0x30                  	// #48
  c8:	madd	x21, x22, x0, x21
  cc:	str	x21, [x19, #16]
  d0:	b	3c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x3c>

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EE9push_backERKS1_:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE9push_backERKS1_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldp	x20, x2, [x0, #8]
  14:	stp	x21, x22, [sp, #32]
  18:	stp	x23, x24, [sp, #48]
  1c:	str	x25, [sp, #64]
  20:	cmp	x20, x2
  24:	b.eq	54 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE9push_backERKS1_+0x54>  // b.none
  28:	mov	x0, x20
  2c:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE9push_backERKS1_>
  30:	ldr	x0, [x19, #8]
  34:	add	x0, x0, #0x30
  38:	str	x0, [x19, #8]
  3c:	ldp	x19, x20, [sp, #16]
  40:	ldp	x21, x22, [sp, #32]
  44:	ldp	x23, x24, [sp, #48]
  48:	ldr	x25, [sp, #64]
  4c:	ldp	x29, x30, [sp], #80
  50:	ret
  54:	mov	x24, x1
  58:	adrp	x2, 0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE9push_backERKS1_>
  5c:	mov	x1, #0x1                   	// #1
  60:	add	x2, x2, #0x0
  64:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE9push_backERKS1_>
  68:	mov	x22, x0
  6c:	ldr	x23, [x19]
  70:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE9push_backERKS1_>
  74:	mov	x1, x24
  78:	mov	x21, x0
  7c:	sub	x25, x20, x23
  80:	add	x0, x0, x25
  84:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE9push_backERKS1_>
  88:	mov	x2, x21
  8c:	mov	x1, x20
  90:	mov	x0, x23
  94:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE9push_backERKS1_>
  98:	mov	x1, x20
  9c:	add	x2, x0, #0x30
  a0:	mov	x0, x20
  a4:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE9push_backERKS1_>
  a8:	mov	x1, x20
  ac:	mov	x24, x0
  b0:	mov	x0, x23
  b4:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE9push_backERKS1_>
  b8:	mov	x0, x23
  bc:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE9push_backERKS1_>
  c0:	stp	x21, x24, [x19]
  c4:	mov	x0, #0x30                  	// #48
  c8:	madd	x21, x22, x0, x21
  cc:	str	x21, [x19, #16]
  d0:	b	3c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE9push_backERKS1_+0x3c>

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   8:	movk	x3, #0xaaab
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x19, x0
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x21, x1
  20:	mov	x22, x2
  24:	str	x23, [sp, #48]
  28:	sub	x23, x2, x1
  2c:	ldr	x2, [x19]
  30:	asr	x0, x23, #4
  34:	ldr	x1, [x19, #16]
  38:	mul	x0, x0, x3
  3c:	sub	x1, x1, x2
  40:	asr	x1, x1, #4
  44:	mul	x1, x1, x3
  48:	cmp	x0, x1
  4c:	b.ls	b4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0xb4>  // b.plast
  50:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  54:	movk	x1, #0x2aa, lsl #48
  58:	cmp	x0, x1
  5c:	b.ls	6c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x6c>  // b.plast
  60:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
  64:	add	x0, x0, #0x0
  68:	bl	0 <_ZSt20__throw_length_errorPKc>
  6c:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
  70:	mov	x2, x0
  74:	mov	x20, x0
  78:	mov	x1, x22
  7c:	mov	x0, x21
  80:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
  84:	ldp	x0, x1, [x19]
  88:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
  8c:	ldr	x0, [x19]
  90:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
  94:	str	x20, [x19]
  98:	add	x20, x20, x23
  9c:	stp	x20, x20, [x19, #8]
  a0:	ldp	x19, x20, [sp, #16]
  a4:	ldp	x21, x22, [sp, #32]
  a8:	ldr	x23, [sp, #48]
  ac:	ldp	x29, x30, [sp], #64
  b0:	ret
  b4:	ldr	x20, [x19, #8]
  b8:	sub	x20, x20, x2
  bc:	asr	x1, x20, #4
  c0:	mul	x1, x1, x3
  c4:	cmp	x0, x1
  c8:	b.hi	f4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0xf4>  // b.pmore
  cc:	mov	x1, x22
  d0:	mov	x0, x21
  d4:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
  d8:	mov	x20, x0
  dc:	ldr	x1, [x19, #8]
  e0:	cmp	x0, x1
  e4:	b.eq	a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0xa0>  // b.none
  e8:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
  ec:	str	x20, [x19, #8]
  f0:	b	a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0xa0>
  f4:	add	x20, x21, x20
  f8:	mov	x0, x21
  fc:	mov	x1, x20
 100:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
 104:	ldr	x2, [x19, #8]
 108:	mov	x1, x22
 10c:	mov	x0, x20
 110:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
 114:	str	x0, [x19, #8]
 118:	b	a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0xa0>

Disassembly of section .text._ZN4llvm16ConcreteOperatorINS_8OperatorELj34EE7classofEPKNS_5ValueE:

0000000000000000 <_ZN4llvm16ConcreteOperatorINS_8OperatorELj34EE7classofEPKNS_5ValueE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm16ConcreteOperatorINS_8OperatorELj34EE7classofEPKNS_5ValueE>
  14:	ands	w0, w0, #0xff
  18:	b.eq	28 <_ZN4llvm16ConcreteOperatorINS_8OperatorELj34EE7classofEPKNS_5ValueE+0x28>  // b.none
  1c:	ldrb	w1, [x19, #16]
  20:	cmp	w1, #0x3a
  24:	b.eq	44 <_ZN4llvm16ConcreteOperatorINS_8OperatorELj34EE7classofEPKNS_5ValueE+0x44>  // b.none
  28:	mov	x0, x19
  2c:	bl	0 <_ZN4llvm16ConcreteOperatorINS_8OperatorELj34EE7classofEPKNS_5ValueE>
  30:	ands	w0, w0, #0xff
  34:	b.eq	44 <_ZN4llvm16ConcreteOperatorINS_8OperatorELj34EE7classofEPKNS_5ValueE+0x44>  // b.none
  38:	ldrh	w0, [x19, #18]
  3c:	cmp	w0, #0x22
  40:	cset	w0, eq  // eq = none
  44:	ldr	x19, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	ret

Disassembly of section .text._ZN4llvm11Interpreter13visitCallInstERNS_8CallInstE:

0000000000000000 <_ZN4llvm11Interpreter13visitCallInstERNS_8CallInstE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	w2, #0x1                   	// #1
   8:	mov	x29, sp
   c:	str	x19, [sp, #16]
  10:	mov	x19, x0
  14:	add	x0, sp, #0x28
  18:	str	xzr, [sp, #40]
  1c:	bl	0 <_ZN4llvm11Interpreter13visitCallInstERNS_8CallInstE>
  20:	ldr	x1, [sp, #40]
  24:	mov	x0, x19
  28:	bl	ae2c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE>
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #48
  34:	ret

Disassembly of section .text._ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE:

0000000000000000 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x21, [sp, #32]
   c:	ldur	x21, [x1, #-24]
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x20, x0
  18:	mov	x19, x1
  1c:	cbz	x21, 38 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x38>
  20:	mov	x0, x21
  24:	bl	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE>
  28:	tst	w0, #0xff
  2c:	b.eq	38 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x38>  // b.none
  30:	mov	x0, x21
  34:	bl	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE>
  38:	mov	x1, x19
  3c:	mov	x0, x20
  40:	ldp	x19, x20, [sp, #16]
  44:	ldr	x21, [sp, #32]
  48:	ldp	x29, x30, [sp], #48
  4c:	b	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE>

Disassembly of section .text._ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE:

0000000000000000 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	ldrb	w0, [x1, #16]
  14:	sub	w0, w0, #0x19
  18:	cmp	w0, #0x42
  1c:	b.hi	38 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x38>  // b.pmore
  20:	adrp	x2, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
  24:	add	x2, x2, #0x0
  28:	ldrh	w0, [x2, w0, uxtw #1]
  2c:	adr	x2, 38 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x38>
  30:	add	x0, x2, w0, sxth #2
  34:	br	x0
  38:	adrp	x1, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
  3c:	adrp	x0, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
  40:	add	x1, x1, #0x0
  44:	add	x0, x0, #0x0
  48:	mov	w2, #0x7a                  	// #122
  4c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  50:	mov	x0, x19
  54:	bl	70f4 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE>
  58:	ldr	x19, [sp, #16]
  5c:	ldp	x29, x30, [sp], #48
  60:	ret
  64:	mov	x0, x19
  68:	bl	71bc <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE>
  6c:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
  70:	mov	x0, x19
  74:	bl	7290 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE>
  78:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
  7c:	mov	x0, x19
  80:	bl	74ac <_ZN4llvm11Interpreter19visitIndirectBrInstERNS_14IndirectBrInstE>
  84:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
  88:	mov	w2, #0x0                   	// #0
  8c:	str	xzr, [sp, #40]
  90:	add	x0, sp, #0x28
  94:	bl	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
  98:	ldr	x1, [sp, #40]
  9c:	mov	x0, x19
  a0:	bl	ae2c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE>
  a4:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
  a8:	mov	x0, x19
  ac:	bl	310 <_ZN4llvm11Interpreter20visitUnreachableInstERNS_15UnreachableInstE>
  b0:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
  b4:	mov	w2, #0x2                   	// #2
  b8:	str	xzr, [sp, #40]
  bc:	b	90 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x90>
  c0:	mov	x0, x19
  c4:	bl	5180 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE>
  c8:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
  cc:	mov	x0, x19
  d0:	bl	5b1c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE>
  d4:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
  d8:	mov	x0, x19
  dc:	bl	7dd0 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE>
  e0:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
  e4:	mov	x0, x19
  e8:	bl	8070 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE>
  ec:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
  f0:	mov	x0, x19
  f4:	bl	8310 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE>
  f8:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
  fc:	mov	x0, x19
 100:	bl	7548 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE>
 104:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
 108:	mov	x0, x19
 10c:	bl	7c0c <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE>
 110:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
 114:	mov	x0, x19
 118:	bl	7cf8 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE>
 11c:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
 120:	mov	x0, x19
 124:	bl	7abc <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE>
 128:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
 12c:	mov	x0, x19
 130:	bl	86e8 <_ZN4llvm11Interpreter14visitTruncInstERNS_9TruncInstE>
 134:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
 138:	mov	x0, x19
 13c:	bl	8a50 <_ZN4llvm11Interpreter13visitZExtInstERNS_8ZExtInstE>
 140:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
 144:	mov	x0, x19
 148:	bl	889c <_ZN4llvm11Interpreter13visitSExtInstERNS_8SExtInstE>
 14c:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
 150:	mov	x0, x19
 154:	bl	907c <_ZN4llvm11Interpreter15visitFPToUIInstERNS_10FPToUIInstE>
 158:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
 15c:	mov	x0, x19
 160:	bl	9320 <_ZN4llvm11Interpreter15visitFPToSIInstERNS_10FPToSIInstE>
 164:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
 168:	mov	x0, x19
 16c:	bl	954c <_ZN4llvm11Interpreter15visitUIToFPInstERNS_10UIToFPInstE>
 170:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
 174:	mov	x0, x19
 178:	bl	9778 <_ZN4llvm11Interpreter15visitSIToFPInstERNS_10SIToFPInstE>
 17c:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
 180:	mov	x0, x19
 184:	bl	8c14 <_ZN4llvm11Interpreter16visitFPTruncInstERNS_11FPTruncInstE>
 188:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
 18c:	mov	x0, x19
 190:	bl	8dd8 <_ZN4llvm11Interpreter14visitFPExtInstERNS_9FPExtInstE>
 194:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
 198:	mov	x0, x19
 19c:	bl	98f8 <_ZN4llvm11Interpreter17visitPtrToIntInstERNS_12PtrToIntInstE>
 1a0:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
 1a4:	mov	x0, x19
 1a8:	bl	9a4c <_ZN4llvm11Interpreter17visitIntToPtrInstERNS_12IntToPtrInstE>
 1ac:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
 1b0:	mov	x0, x19
 1b4:	bl	a2d4 <_ZN4llvm11Interpreter16visitBitCastInstERNS_11BitCastInstE>
 1b8:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
 1bc:	mov	x0, x19
 1c0:	bl	5388 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE>
 1c4:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
 1c8:	mov	x0, x19
 1cc:	bl	56c8 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE>
 1d0:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
 1d4:	adrp	x1, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
 1d8:	adrp	x0, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
 1dc:	add	x1, x1, #0x0
 1e0:	add	x0, x0, #0x0
 1e4:	mov	w2, #0x88                  	// #136
 1e8:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 1ec:	mov	x0, x19
 1f0:	bl	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
 1f4:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
 1f8:	mov	x0, x19
 1fc:	bl	69e8 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE>
 200:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
 204:	mov	x0, x1
 208:	bl	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
 20c:	mov	x0, x19
 210:	bl	a344 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE>
 214:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
 218:	mov	x0, x19
 21c:	bl	a4b0 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE>
 220:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
 224:	mov	x0, x19
 228:	bl	a640 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE>
 22c:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
 230:	mov	x0, x19
 234:	bl	a810 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE>
 238:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
 23c:	mov	x0, x19
 240:	bl	ab3c <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE>
 244:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>
 248:	mov	x0, x19
 24c:	bl	ac9c <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE>
 250:	b	58 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x58>

Disassembly of section .text._ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED0Ev:

0000000000000000 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED0Ev>
  14:	mov	x0, x19
  18:	mov	x1, #0xc8                  	// #200
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	b	0 <_ZdlPvm>

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_Execution.cpp>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x2, 0 <_GLOBAL__sub_I_Execution.cpp>
   8:	adrp	x1, 0 <_GLOBAL__sub_I_Execution.cpp>
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	add	x19, x2, #0x0
  18:	add	x1, x1, #0x0
  1c:	mov	w20, #0x1                   	// #1
  20:	ldr	x0, [x19, #8]
  24:	str	x1, [x19, #200]
  28:	adrp	x1, 0 <_GLOBAL__sub_I_Execution.cpp>
  2c:	add	x1, x1, #0x0
  30:	and	x0, x0, #0x80000000
  34:	stp	x0, xzr, [x19, #8]
  38:	add	x0, x19, #0x50
  3c:	str	x0, [x19, #64]
  40:	add	x0, x19, #0x80
  44:	stp	x0, x0, [x19, #96]
  48:	adrp	x0, 0 <_ZN4llvm2cl15GeneralCategoryE>
  4c:	ldr	x0, [x0]
  50:	str	x0, [x19, #80]
  54:	adrp	x0, 0 <_GLOBAL__sub_I_Execution.cpp>
  58:	str	x1, [x19, #208]
  5c:	adrp	x1, 0 <_GLOBAL__sub_I_Execution.cpp>
  60:	add	x1, x1, #0x0
  64:	ldr	x0, [x0]
  68:	stp	xzr, xzr, [x19, #24]
  6c:	add	x0, x0, #0x10
  70:	str	x0, [x19, #144]
  74:	mov	w0, #0x100                 	// #256
  78:	strh	w0, [x19, #152]
  7c:	adrp	x0, 0 <_ZTVN4llvm2cl3optIbLb0ENS0_6parserIbEEEE>
  80:	stp	xzr, xzr, [x19, #40]
  84:	str	xzr, [x19, #56]
  88:	str	w20, [x19, #76]
  8c:	str	xzr, [x19, #88]
  90:	str	wzr, [x19, #120]
  94:	strb	wzr, [x19, #136]
  98:	str	x1, [x19, #216]
  9c:	mov	x1, #0x1                   	// #1
  a0:	str	w1, [x19, #72]
  a4:	str	x1, [x19, #112]
  a8:	adrp	x1, 0 <_GLOBAL__sub_I_Execution.cpp>
  ac:	str	wzr, [x19, #224]
  b0:	add	x1, x1, #0x0
  b4:	strb	wzr, [x19, #228]
  b8:	ldr	x0, [x0]
  bc:	add	x0, x0, #0x10
  c0:	str	x0, [x2]
  c4:	adrp	x0, 0 <_ZTVN4llvm2cl6parserIbEE>
  c8:	mov	x2, #0x1a                  	// #26
  cc:	ldr	x0, [x0]
  d0:	add	x0, x0, #0x10
  d4:	str	x0, [x19, #160]
  d8:	adrp	x0, 0 <_GLOBAL__sub_I_Execution.cpp>
  dc:	ldr	x0, [x0]
  e0:	str	x0, [x19, #192]
  e4:	adrp	x0, 0 <_GLOBAL__sub_I_Execution.cpp>
  e8:	ldr	x0, [x0]
  ec:	str	x0, [x19, #184]
  f0:	mov	x0, x19
  f4:	bl	0 <_ZN4llvm2cl6Option9setArgStrENS_9StringRefE>
  f8:	ldrb	w0, [x19, #10]
  fc:	bfi	w0, w20, #5, #2
 100:	strb	w0, [x19, #10]
 104:	adrp	x0, 0 <_GLOBAL__sub_I_Execution.cpp>
 108:	add	x0, x0, #0x0
 10c:	str	x0, [x19, #32]
 110:	mov	x0, #0x38                  	// #56
 114:	str	x0, [x19, #40]
 118:	mov	x0, x19
 11c:	bl	0 <_ZN4llvm2cl6Option11addArgumentEv>
 120:	mov	x1, x19
 124:	adrp	x2, 0 <__dso_handle>
 128:	ldp	x19, x20, [sp, #16]
 12c:	add	x2, x2, #0x0
 130:	ldp	x29, x30, [sp], #32
 134:	adrp	x0, 0 <_GLOBAL__sub_I_Execution.cpp>
 138:	add	x0, x0, #0x0
 13c:	b	0 <__cxa_atexit>

ExternalFunctions.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>:
       0:	cbz	x0, 8 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0+0x8>
       4:	b	0 <_ZdlPv>
       8:	ret

000000000000000c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0>:
       c:	stp	x29, x30, [sp, #-64]!
      10:	mov	x29, sp
      14:	stp	x19, x20, [sp, #16]
      18:	mov	x19, x0
      1c:	add	x0, x0, #0x10
      20:	mov	x20, x1
      24:	str	x0, [x19]
      28:	mov	x0, x1
      2c:	str	x21, [sp, #32]
      30:	bl	0 <strlen>
      34:	str	x0, [sp, #56]
      38:	add	x21, x20, x0
      3c:	cmp	x0, #0xf
      40:	b.ls	60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0+0x54>  // b.plast
      44:	add	x1, sp, #0x38
      48:	mov	x0, x19
      4c:	mov	x2, #0x0                   	// #0
      50:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
      54:	str	x0, [x19]
      58:	ldr	x0, [sp, #56]
      5c:	str	x0, [x19, #16]
      60:	ldr	x0, [x19]
      64:	mov	x2, x21
      68:	mov	x1, x20
      6c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>
      70:	ldr	x1, [x19]
      74:	ldr	x0, [sp, #56]
      78:	str	x0, [x19, #8]
      7c:	strb	wzr, [x1, x0]
      80:	ldp	x19, x20, [sp, #16]
      84:	ldr	x21, [sp, #32]
      88:	ldp	x29, x30, [sp], #64
      8c:	ret

0000000000000090 <_ZL9getTypeIDPN4llvm4TypeE>:
      90:	ldrb	w2, [x0, #8]
      94:	cmp	w2, #0xf
      98:	b.hi	12c <_ZL9getTypeIDPN4llvm4TypeE+0x9c>  // b.pmore
      9c:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
      a0:	add	x1, x1, #0x0
      a4:	ldrb	w1, [x1, w2, uxtw]
      a8:	adr	x2, b4 <_ZL9getTypeIDPN4llvm4TypeE+0x24>
      ac:	add	x1, x2, w1, sxtb #2
      b0:	br	x1
      b4:	mov	w0, #0x46                  	// #70
      b8:	ret
      bc:	ldr	w0, [x0, #8]
      c0:	lsr	w0, w0, #8
      c4:	cmp	w0, #0x10
      c8:	b.eq	13c <_ZL9getTypeIDPN4llvm4TypeE+0xac>  // b.none
      cc:	b.hi	ec <_ZL9getTypeIDPN4llvm4TypeE+0x5c>  // b.pmore
      d0:	cmp	w0, #0x1
      d4:	b.eq	144 <_ZL9getTypeIDPN4llvm4TypeE+0xb4>  // b.none
      d8:	cmp	w0, #0x8
      dc:	mov	w1, #0x42                  	// #66
      e0:	mov	w0, #0x4e                  	// #78
      e4:	csel	w0, w0, w1, ne  // ne = any
      e8:	b	b8 <_ZL9getTypeIDPN4llvm4TypeE+0x28>
      ec:	cmp	w0, #0x20
      f0:	b.eq	14c <_ZL9getTypeIDPN4llvm4TypeE+0xbc>  // b.none
      f4:	cmp	w0, #0x40
      f8:	mov	w1, #0x4c                  	// #76
      fc:	mov	w0, #0x4e                  	// #78
     100:	b	e4 <_ZL9getTypeIDPN4llvm4TypeE+0x54>
     104:	mov	w0, #0x44                  	// #68
     108:	b	b8 <_ZL9getTypeIDPN4llvm4TypeE+0x28>
     10c:	mov	w0, #0x50                  	// #80
     110:	b	b8 <_ZL9getTypeIDPN4llvm4TypeE+0x28>
     114:	mov	w0, #0x4d                  	// #77
     118:	b	b8 <_ZL9getTypeIDPN4llvm4TypeE+0x28>
     11c:	mov	w0, #0x54                  	// #84
     120:	b	b8 <_ZL9getTypeIDPN4llvm4TypeE+0x28>
     124:	mov	w0, #0x41                  	// #65
     128:	b	b8 <_ZL9getTypeIDPN4llvm4TypeE+0x28>
     12c:	mov	w0, #0x55                  	// #85
     130:	b	b8 <_ZL9getTypeIDPN4llvm4TypeE+0x28>
     134:	mov	w0, #0x56                  	// #86
     138:	b	b8 <_ZL9getTypeIDPN4llvm4TypeE+0x28>
     13c:	mov	w0, #0x53                  	// #83
     140:	b	b8 <_ZL9getTypeIDPN4llvm4TypeE+0x28>
     144:	mov	w0, #0x6f                  	// #111
     148:	b	b8 <_ZL9getTypeIDPN4llvm4TypeE+0x28>
     14c:	mov	w0, #0x49                  	// #73
     150:	b	b8 <_ZL9getTypeIDPN4llvm4TypeE+0x28>

0000000000000154 <_ZN9__gnu_cxx13new_allocatorIN4llvm12GenericValueEE8allocateEmPKv.isra.0>:
     154:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     158:	movk	x1, #0x2aa, lsl #48
     15c:	cmp	x0, x1
     160:	b.ls	170 <_ZN9__gnu_cxx13new_allocatorIN4llvm12GenericValueEE8allocateEmPKv.isra.0+0x1c>  // b.plast
     164:	stp	x29, x30, [sp, #-16]!
     168:	mov	x29, sp
     16c:	bl	0 <_ZSt17__throw_bad_allocv>
     170:	mov	x1, #0x30                  	// #48
     174:	mul	x0, x0, x1
     178:	b	0 <_Znwm>

000000000000017c <_ZL11lle_X_abortPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
     17c:	stp	x29, x30, [sp, #-32]!
     180:	mov	w0, #0x6                   	// #6
     184:	mov	x29, sp
     188:	str	x19, [sp, #16]
     18c:	mov	x19, x8
     190:	bl	0 <raise>
     194:	mov	x0, x19
     198:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     19c:	mov	x0, x19
     1a0:	ldr	x19, [sp, #16]
     1a4:	ldp	x29, x30, [sp], #32
     1a8:	ret

00000000000001ac <_ZL12lle_X_memcpyPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
     1ac:	stp	x29, x30, [sp, #-80]!
     1b0:	mov	x29, sp
     1b4:	stp	x19, x20, [sp, #16]
     1b8:	add	x20, sp, #0x40
     1bc:	mov	x19, x8
     1c0:	mov	x0, x20
     1c4:	stp	x21, x22, [sp, #32]
     1c8:	str	x23, [sp, #48]
     1cc:	stp	x1, x2, [sp, #64]
     1d0:	mov	x1, #0x0                   	// #0
     1d4:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     1d8:	mov	x1, #0x1                   	// #1
     1dc:	ldr	x21, [x0]
     1e0:	mov	x0, x20
     1e4:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     1e8:	mov	x1, #0x2                   	// #2
     1ec:	ldr	x22, [x0]
     1f0:	mov	x0, x20
     1f4:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     1f8:	ldr	w20, [x0, #16]
     1fc:	add	x23, x0, #0x8
     200:	cmp	w20, #0x40
     204:	b.ls	21c <_ZL12lle_X_memcpyPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x70>  // b.plast
     208:	mov	x0, x23
     20c:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     210:	sub	w20, w20, w0
     214:	cmp	w20, #0x40
     218:	b.hi	268 <_ZL12lle_X_memcpyPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xbc>  // b.pmore
     21c:	mov	x0, x23
     220:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     224:	mov	x0, x23
     228:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     22c:	mov	x2, x0
     230:	mov	x1, x22
     234:	mov	x0, x21
     238:	bl	0 <memcpy>
     23c:	mov	x0, x19
     240:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     244:	add	x0, x19, #0x8
     248:	mov	x1, #0x0                   	// #0
     24c:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     250:	mov	x0, x19
     254:	ldp	x19, x20, [sp, #16]
     258:	ldp	x21, x22, [sp, #32]
     25c:	ldr	x23, [sp, #48]
     260:	ldp	x29, x30, [sp], #80
     264:	ret
     268:	mov	x2, #0xffffffffffffffff    	// #-1
     26c:	b	230 <_ZL12lle_X_memcpyPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x84>

0000000000000270 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
     270:	stp	x29, x30, [sp, #-64]!
     274:	mov	x29, sp
     278:	stp	x21, x22, [sp, #32]
     27c:	add	x22, sp, #0x30
     280:	mov	x0, x22
     284:	stp	x1, x2, [sp, #48]
     288:	mov	x1, #0x1                   	// #1
     28c:	stp	x19, x20, [sp, #16]
     290:	mov	x20, x8
     294:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     298:	ldr	w1, [x0, #16]
     29c:	mov	x19, x0
     2a0:	cmp	w1, #0x40
     2a4:	b.hi	33c <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xcc>  // b.pmore
     2a8:	ldr	x19, [x0, #8]
     2ac:	cbnz	w1, 2d0 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x60>
     2b0:	adrp	x3, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     2b4:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     2b8:	adrp	x0, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     2bc:	add	x3, x3, #0x0
     2c0:	add	x1, x1, #0x0
     2c4:	add	x0, x0, #0x0
     2c8:	mov	w2, #0x307                 	// #775
     2cc:	bl	0 <__assert_fail>
     2d0:	mov	w0, #0x40                  	// #64
     2d4:	sub	w0, w0, w1
     2d8:	lsl	x19, x19, x0
     2dc:	asr	x19, x19, x0
     2e0:	mov	x1, #0x2                   	// #2
     2e4:	mov	x0, x22
     2e8:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     2ec:	add	x0, x0, #0x8
     2f0:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     2f4:	mov	x21, x0
     2f8:	mov	x1, #0x0                   	// #0
     2fc:	mov	x0, x22
     300:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     304:	ldr	x0, [x0]
     308:	mov	x2, x21
     30c:	mov	w1, w19
     310:	bl	0 <memset>
     314:	mov	x0, x20
     318:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     31c:	add	x0, x20, #0x8
     320:	mov	x1, #0x0                   	// #0
     324:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     328:	mov	x0, x20
     32c:	ldp	x19, x20, [sp, #16]
     330:	ldp	x21, x22, [sp, #32]
     334:	ldp	x29, x30, [sp], #64
     338:	ret
     33c:	add	x0, x0, #0x8
     340:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     344:	cmp	w0, #0x40
     348:	b.ls	36c <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xfc>  // b.plast
     34c:	adrp	x3, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     350:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     354:	adrp	x0, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     358:	add	x3, x3, #0x0
     35c:	add	x1, x1, #0x0
     360:	add	x0, x0, #0x0
     364:	mov	w2, #0x663                 	// #1635
     368:	b	2cc <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x5c>
     36c:	ldr	x0, [x19, #8]
     370:	ldr	x19, [x0]
     374:	b	2e0 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x70>

0000000000000378 <_ZL11lle_X_scanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
     378:	sub	sp, sp, #0xc0
     37c:	stp	x29, x30, [sp, #16]
     380:	add	x29, sp, #0x10
     384:	stp	x1, x2, [sp, #80]
     388:	stp	x21, x22, [sp, #48]
     38c:	ldr	x21, [sp, #88]
     390:	stp	x19, x20, [sp, #32]
     394:	str	x23, [sp, #64]
     398:	cmp	x21, #0x9
     39c:	b.hi	3d4 <_ZL11lle_X_scanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x5c>  // b.pmore
     3a0:	mov	x19, x8
     3a4:	add	x23, sp, #0x50
     3a8:	add	x22, sp, #0x70
     3ac:	mov	x20, #0x0                   	// #0
     3b0:	cmp	x21, x20
     3b4:	b.eq	3f4 <_ZL11lle_X_scanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x7c>  // b.none
     3b8:	mov	x1, x20
     3bc:	mov	x0, x23
     3c0:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     3c4:	ldr	x0, [x0]
     3c8:	str	x0, [x22, x20, lsl #3]
     3cc:	add	x20, x20, #0x1
     3d0:	b	3b0 <_ZL11lle_X_scanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x38>
     3d4:	adrp	x3, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     3d8:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     3dc:	adrp	x0, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     3e0:	add	x3, x3, #0x0
     3e4:	add	x1, x1, #0x0
     3e8:	add	x0, x0, #0x0
     3ec:	mov	w2, #0x1bd                 	// #445
     3f0:	bl	0 <__assert_fail>
     3f4:	mov	x0, x19
     3f8:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     3fc:	ldp	x1, x2, [sp, #120]
     400:	add	x20, sp, #0x60
     404:	ldp	x3, x4, [sp, #136]
     408:	ldp	x5, x6, [sp, #152]
     40c:	ldr	x0, [sp, #184]
     410:	str	x0, [sp, #8]
     414:	ldr	x0, [sp, #176]
     418:	str	x0, [sp]
     41c:	ldr	x0, [sp, #112]
     420:	ldr	x7, [sp, #168]
     424:	bl	0 <__isoc99_scanf>
     428:	mov	w0, w0
     42c:	mov	w1, #0x20                  	// #32
     430:	str	w1, [sp, #104]
     434:	mov	x1, x20
     438:	str	x0, [sp, #96]
     43c:	add	x0, x19, #0x8
     440:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     444:	mov	x0, x20
     448:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     44c:	mov	x0, x19
     450:	ldp	x29, x30, [sp, #16]
     454:	ldp	x19, x20, [sp, #32]
     458:	ldp	x21, x22, [sp, #48]
     45c:	ldr	x23, [sp, #64]
     460:	add	sp, sp, #0xc0
     464:	ret

0000000000000468 <_ZL12lle_X_sscanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
     468:	sub	sp, sp, #0xc0
     46c:	stp	x29, x30, [sp, #16]
     470:	add	x29, sp, #0x10
     474:	stp	x1, x2, [sp, #80]
     478:	stp	x21, x22, [sp, #48]
     47c:	ldr	x21, [sp, #88]
     480:	stp	x19, x20, [sp, #32]
     484:	str	x23, [sp, #64]
     488:	cmp	x21, #0x9
     48c:	b.hi	4c4 <_ZL12lle_X_sscanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x5c>  // b.pmore
     490:	mov	x19, x8
     494:	add	x23, sp, #0x50
     498:	add	x22, sp, #0x70
     49c:	mov	x20, #0x0                   	// #0
     4a0:	cmp	x21, x20
     4a4:	b.eq	4e4 <_ZL12lle_X_sscanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x7c>  // b.none
     4a8:	mov	x1, x20
     4ac:	mov	x0, x23
     4b0:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     4b4:	ldr	x0, [x0]
     4b8:	str	x0, [x22, x20, lsl #3]
     4bc:	add	x20, x20, #0x1
     4c0:	b	4a0 <_ZL12lle_X_sscanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x38>
     4c4:	adrp	x3, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     4c8:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     4cc:	adrp	x0, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     4d0:	add	x3, x3, #0x0
     4d4:	add	x1, x1, #0x0
     4d8:	add	x0, x0, #0x0
     4dc:	mov	w2, #0x1af                 	// #431
     4e0:	bl	0 <__assert_fail>
     4e4:	mov	x0, x19
     4e8:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     4ec:	ldp	x1, x2, [sp, #120]
     4f0:	add	x20, sp, #0x60
     4f4:	ldp	x3, x4, [sp, #136]
     4f8:	ldp	x5, x6, [sp, #152]
     4fc:	ldr	x0, [sp, #184]
     500:	str	x0, [sp, #8]
     504:	ldr	x0, [sp, #176]
     508:	str	x0, [sp]
     50c:	ldr	x0, [sp, #112]
     510:	ldr	x7, [sp, #168]
     514:	bl	0 <__isoc99_sscanf>
     518:	mov	w0, w0
     51c:	mov	w1, #0x20                  	// #32
     520:	str	w1, [sp, #104]
     524:	mov	x1, x20
     528:	str	x0, [sp, #96]
     52c:	add	x0, x19, #0x8
     530:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     534:	mov	x0, x20
     538:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     53c:	mov	x0, x19
     540:	ldp	x29, x30, [sp, #16]
     544:	ldp	x19, x20, [sp, #32]
     548:	ldp	x21, x22, [sp, #48]
     54c:	ldr	x23, [sp, #64]
     550:	add	sp, sp, #0xc0
     554:	ret

0000000000000558 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
     558:	sub	sp, sp, #0x4d0
     55c:	stp	x29, x30, [sp]
     560:	mov	x29, sp
     564:	stp	x23, x24, [sp, #48]
     568:	add	x23, sp, #0x70
     56c:	mov	x0, x23
     570:	stp	x19, x20, [sp, #16]
     574:	add	x20, sp, #0xe8
     578:	add	x24, sp, #0x80
     57c:	stp	x21, x22, [sp, #32]
     580:	mov	w19, #0x2                   	// #2
     584:	stp	x25, x26, [sp, #64]
     588:	mov	x25, x8
     58c:	add	x26, sp, #0xf8
     590:	stp	x27, x28, [sp, #80]
     594:	mov	x27, #0x5                   	// #5
     598:	movk	x27, #0xc008, lsl #16
     59c:	stp	x1, x2, [sp, #112]
     5a0:	mov	x1, #0x0                   	// #0
     5a4:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     5a8:	mov	x1, #0x1                   	// #1
     5ac:	movk	x27, #0x4c17, lsl #32
     5b0:	ldr	x21, [x0]
     5b4:	mov	x0, x23
     5b8:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     5bc:	movk	x27, #0x9, lsl #48
     5c0:	ldr	x28, [x0]
     5c4:	mov	x0, x25
     5c8:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     5cc:	mov	x0, x28
     5d0:	bl	0 <strlen>
     5d4:	mov	w1, #0x20                  	// #32
     5d8:	str	w1, [sp, #240]
     5dc:	mov	x1, x20
     5e0:	mov	w0, w0
     5e4:	str	x0, [sp, #232]
     5e8:	add	x0, x25, #0x8
     5ec:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     5f0:	mov	x0, x20
     5f4:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     5f8:	ldrb	w2, [x28]
     5fc:	cmp	w2, #0x25
     600:	b.eq	65c <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x104>  // b.none
     604:	cmp	w2, #0x5c
     608:	b.eq	63c <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xe4>  // b.none
     60c:	cbz	w2, 898 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x340>
     610:	add	x3, x21, #0x1
     614:	mov	x0, x21
     618:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     61c:	add	x1, x1, #0x0
     620:	str	x3, [sp, #104]
     624:	add	x22, x28, #0x1
     628:	bl	0 <sprintf>
     62c:	ldr	x3, [sp, #104]
     630:	mov	x21, x3
     634:	mov	x28, x22
     638:	b	5f8 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xa0>
     63c:	ldrb	w3, [x28, #1]
     640:	mov	x0, x21
     644:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     648:	add	x22, x28, #0x2
     64c:	add	x1, x1, #0x0
     650:	add	x21, x21, #0x2
     654:	bl	0 <sprintf>
     658:	b	634 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xdc>
     65c:	mov	x22, x28
     660:	mov	x2, #0x3d8                 	// #984
     664:	mov	x0, x26
     668:	mov	w1, #0x0                   	// #0
     66c:	stp	xzr, xzr, [sp, #128]
     670:	stp	xzr, xzr, [sp, #144]
     674:	stp	xzr, xzr, [sp, #160]
     678:	stp	xzr, xzr, [sp, #176]
     67c:	stp	xzr, xzr, [sp, #192]
     680:	stp	xzr, xzr, [sp, #208]
     684:	str	wzr, [sp, #224]
     688:	stp	xzr, xzr, [sp, #232]
     68c:	bl	0 <memset>
     690:	ldrb	w0, [x22], #2
     694:	add	x3, x24, #0x2
     698:	strb	w0, [sp, #128]
     69c:	ldrb	w0, [x28, #1]
     6a0:	mov	w2, #0x0                   	// #0
     6a4:	strb	w0, [sp, #129]
     6a8:	sub	w1, w0, #0x45
     6ac:	and	w1, w1, #0xff
     6b0:	cmp	w1, #0x33
     6b4:	b.ls	708 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1b0>  // b.plast
     6b8:	cmp	w0, #0x25
     6bc:	b.ne	710 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1b8>  // b.any
     6c0:	strb	wzr, [x3]
     6c4:	cmp	w0, #0x57
     6c8:	b.hi	728 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1d0>  // b.pmore
     6cc:	cmp	w0, #0x25
     6d0:	b.eq	750 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1f8>  // b.none
     6d4:	and	w0, w0, #0xfffffffd
     6d8:	and	w0, w0, #0xff
     6dc:	cmp	w0, #0x45
     6e0:	b.ne	844 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x2ec>  // b.any
     6e4:	mov	w1, w19
     6e8:	mov	x0, x23
     6ec:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     6f0:	ldr	d0, [x0]
     6f4:	add	w28, w19, #0x1
     6f8:	mov	x1, x24
     6fc:	mov	x0, x20
     700:	bl	0 <sprintf>
     704:	b	79c <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x244>
     708:	lsr	x1, x27, x1
     70c:	tbnz	w1, #0, 6c0 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x168>
     710:	and	w0, w0, #0xffffffdf
     714:	cmp	w0, #0x4c
     718:	ldrb	w0, [x22], #1
     71c:	cinc	w2, w2, eq  // eq = none
     720:	strb	w0, [x3], #1
     724:	b	6a8 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x150>
     728:	sub	w0, w0, #0x58
     72c:	cmp	w0, #0x20
     730:	b.hi	844 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x2ec>  // b.pmore
     734:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     738:	add	w28, w19, #0x1
     73c:	add	x1, x1, #0x0
     740:	ldrb	w0, [x1, w0, uxtw]
     744:	adr	x1, 750 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1f8>
     748:	add	x0, x1, w0, sxtb #2
     74c:	br	x0
     750:	strh	w0, [x20]
     754:	mov	x0, x20
     758:	bl	0 <strlen>
     75c:	mov	x28, x0
     760:	add	x2, x0, #0x1
     764:	mov	x1, x20
     768:	mov	x0, x21
     76c:	add	x21, x21, x28
     770:	bl	0 <memcpy>
     774:	b	634 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xdc>
     778:	mov	w1, w19
     77c:	mov	x0, x23
     780:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     784:	add	x0, x0, #0x8
     788:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     78c:	mov	w2, w0
     790:	mov	x1, x24
     794:	mov	x0, x20
     798:	bl	0 <sprintf>
     79c:	mov	w19, w28
     7a0:	b	754 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1fc>
     7a4:	mov	w3, w19
     7a8:	mov	w19, w28
     7ac:	cbz	w2, 7fc <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x2a4>
     7b0:	cmp	w2, #0x1
     7b4:	b.ne	7d4 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x27c>  // b.any
     7b8:	adrp	x0, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     7bc:	mov	w1, #0x0                   	// #0
     7c0:	str	x3, [sp, #104]
     7c4:	ldr	x0, [x0]
     7c8:	add	x0, x0, #0x58
     7cc:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
     7d0:	ldr	x3, [sp, #104]
     7d4:	mov	x1, x3
     7d8:	mov	x0, x23
     7dc:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     7e0:	add	x0, x0, #0x8
     7e4:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     7e8:	mov	x2, x0
     7ec:	mov	x1, x24
     7f0:	mov	x0, x20
     7f4:	bl	0 <sprintf>
     7f8:	b	754 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1fc>
     7fc:	mov	x1, x3
     800:	mov	x0, x23
     804:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     808:	add	x0, x0, #0x8
     80c:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     810:	mov	w2, w0
     814:	mov	x1, x24
     818:	mov	x0, x20
     81c:	bl	0 <sprintf>
     820:	b	754 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1fc>
     824:	mov	w1, w19
     828:	mov	x0, x23
     82c:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     830:	ldr	x2, [x0]
     834:	mov	x1, x24
     838:	mov	x0, x20
     83c:	bl	0 <sprintf>
     840:	b	79c <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x244>
     844:	bl	0 <_ZN4llvm4errsEv>
     848:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     84c:	add	x1, x1, #0x0
     850:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     854:	mov	x2, x0
     858:	ldp	x4, x3, [x0, #16]
     85c:	ldrb	w1, [x22]
     860:	cmp	x3, x4
     864:	b.cc	888 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x330>  // b.lo, b.ul, b.last
     868:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     86c:	mov	x2, x0
     870:	mov	x0, x2
     874:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     878:	add	w19, w19, #0x1
     87c:	add	x1, x1, #0x0
     880:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     884:	b	754 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1fc>
     888:	add	x0, x3, #0x1
     88c:	str	x0, [x2, #24]
     890:	strb	w1, [x3]
     894:	b	870 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x318>
     898:	mov	x0, x25
     89c:	ldp	x29, x30, [sp]
     8a0:	ldp	x19, x20, [sp, #16]
     8a4:	ldp	x21, x22, [sp, #32]
     8a8:	ldp	x23, x24, [sp, #48]
     8ac:	ldp	x25, x26, [sp, #64]
     8b0:	ldp	x27, x28, [sp, #80]
     8b4:	add	sp, sp, #0x4d0
     8b8:	ret

00000000000008bc <_ZL12lle_X_atexitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
     8bc:	stp	x29, x30, [sp, #-64]!
     8c0:	mov	x29, sp
     8c4:	stp	x1, x2, [sp, #32]
     8c8:	ldr	x0, [sp, #40]
     8cc:	stp	x19, x20, [sp, #16]
     8d0:	cmp	x0, #0x1
     8d4:	b.eq	8f8 <_ZL12lle_X_atexitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x3c>  // b.none
     8d8:	adrp	x3, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     8dc:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     8e0:	adrp	x0, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     8e4:	add	x3, x3, #0x0
     8e8:	add	x1, x1, #0x0
     8ec:	add	x0, x0, #0x0
     8f0:	mov	w2, #0x138                 	// #312
     8f4:	bl	0 <__assert_fail>
     8f8:	adrp	x0, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     8fc:	mov	x1, #0x0                   	// #0
     900:	mov	x20, x8
     904:	ldr	x19, [x0]
     908:	add	x0, sp, #0x20
     90c:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     910:	ldr	x2, [x0]
     914:	add	x0, x19, #0x2d0
     918:	str	x2, [sp, #56]
     91c:	ldp	x1, x3, [x0, #8]
     920:	cmp	x1, x3
     924:	b.eq	954 <_ZL12lle_X_atexitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x98>  // b.none
     928:	str	x2, [x1], #8
     92c:	str	x1, [x0, #8]
     930:	mov	x0, x20
     934:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     938:	add	x0, x20, #0x8
     93c:	mov	x1, #0x0                   	// #0
     940:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     944:	mov	x0, x20
     948:	ldp	x19, x20, [sp, #16]
     94c:	ldp	x29, x30, [sp], #64
     950:	ret
     954:	add	x2, sp, #0x38
     958:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     95c:	b	930 <_ZL12lle_X_atexitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x74>

0000000000000960 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
     960:	stp	x29, x30, [sp, #-112]!
     964:	adrp	x0, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     968:	mov	x29, sp
     96c:	stp	x19, x20, [sp, #16]
     970:	mov	x20, x8
     974:	add	x19, sp, #0x40
     978:	str	x21, [sp, #32]
     97c:	ldr	x21, [x0]
     980:	add	x0, sp, #0x30
     984:	stp	x1, x2, [sp, #48]
     988:	mov	x1, #0x0                   	// #0
     98c:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     990:	mov	x1, x0
     994:	mov	x0, x19
     998:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     99c:	mov	x1, x19
     9a0:	mov	x0, x21
     9a4:	bl	0 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE>
     9a8:	mov	x0, x19
     9ac:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     9b0:	mov	x0, x20
     9b4:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     9b8:	mov	x0, x20
     9bc:	ldp	x19, x20, [sp, #16]
     9c0:	ldr	x21, [sp, #32]
     9c4:	ldp	x29, x30, [sp], #112
     9c8:	ret

00000000000009cc <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE>:
     9cc:	stp	x29, x30, [sp, #-256]!
     9d0:	mov	x29, sp
     9d4:	stp	x21, x22, [sp, #32]
     9d8:	adrp	x21, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     9dc:	stp	x19, x20, [sp, #16]
     9e0:	add	x20, x21, #0x0
     9e4:	mov	x19, x1
     9e8:	str	x0, [x21]
     9ec:	add	x0, x20, #0x8
     9f0:	stp	x23, x24, [sp, #48]
     9f4:	stp	x25, x26, [sp, #64]
     9f8:	mov	x25, x8
     9fc:	stp	x27, x28, [sp, #80]
     a00:	stp	x2, x3, [sp, #104]
     a04:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     a08:	str	x0, [sp, #136]
     a0c:	strb	wzr, [sp, #144]
     a10:	cbnz	x0, a1c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x50>
     a14:	mov	w0, #0x1                   	// #1
     a18:	bl	0 <_ZSt20__throw_system_errori>
     a1c:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     a20:	mov	w0, #0x1                   	// #1
     a24:	strb	w0, [sp, #144]
     a28:	add	x0, x20, #0x20
     a2c:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     a30:	add	x0, x0, #0x8
     a34:	ldr	x1, [x0, #8]
     a38:	mov	x20, x0
     a3c:	cbz	x1, a60 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x94>
     a40:	ldr	x2, [x1, #32]
     a44:	cmp	x2, x19
     a48:	b.cc	a58 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x8c>  // b.lo, b.ul, b.last
     a4c:	mov	x20, x1
     a50:	ldr	x1, [x1, #16]
     a54:	b	a3c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x70>
     a58:	ldr	x1, [x1, #24]
     a5c:	b	a3c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x70>
     a60:	cmp	x0, x20
     a64:	b.eq	a74 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xa8>  // b.none
     a68:	ldr	x1, [x20, #32]
     a6c:	cmp	x19, x1
     a70:	csel	x20, x20, x0, cs  // cs = hs, nlast
     a74:	add	x0, x21, #0x0
     a78:	add	x0, x0, #0x20
     a7c:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     a80:	add	x0, x0, #0x8
     a84:	cmp	x20, x0
     a88:	b.ne	d54 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x388>  // b.any
     a8c:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     a90:	add	x1, x1, #0x0
     a94:	add	x23, sp, #0xc0
     a98:	mov	x0, x23
     a9c:	bl	c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0>
     aa0:	mov	x0, x19
     aa4:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     aa8:	mov	x22, x0
     aac:	ldr	x0, [x0, #16]
     ab0:	ldr	x0, [x0]
     ab4:	bl	90 <_ZL9getTypeIDPN4llvm4TypeE>
     ab8:	mov	w1, w0
     abc:	mov	x0, x23
     ac0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
     ac4:	ldr	x20, [x22, #16]
     ac8:	ldr	w22, [x22, #12]
     acc:	add	x22, x20, x22, lsl #3
     ad0:	add	x20, x20, #0x8
     ad4:	cmp	x20, x22
     ad8:	b.eq	af4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x128>  // b.none
     adc:	ldr	x0, [x20], #8
     ae0:	bl	90 <_ZL9getTypeIDPN4llvm4TypeE>
     ae4:	mov	w1, w0
     ae8:	mov	x0, x23
     aec:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
     af0:	b	ad4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x108>
     af4:	mov	x0, x19
     af8:	add	x28, sp, #0x98
     afc:	bl	0 <_ZNK4llvm5Value7getNameEv>
     b00:	stp	x0, x1, [sp, #152]
     b04:	mov	x2, x28
     b08:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     b0c:	add	x1, x1, #0x0
     b10:	add	x24, sp, #0xa8
     b14:	add	x22, sp, #0xe0
     b18:	mov	x0, x24
     b1c:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     b20:	mov	x8, x22
     b24:	mov	x0, x24
     b28:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
     b2c:	add	x20, x21, #0x0
     b30:	mov	x1, x22
     b34:	mov	x0, x23
     b38:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_>
     b3c:	mov	x0, x22
     b40:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
     b44:	add	x0, x20, #0x8
     b48:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     b4c:	str	x0, [sp, #96]
     b50:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     b54:	add	x0, x20, #0x38
     b58:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     b5c:	add	x27, x0, #0x8
     b60:	mov	x20, x0
     b64:	ldr	x2, [x0, #16]
     b68:	mov	x26, x27
     b6c:	cbz	x2, ba0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1d4>
     b70:	add	x0, x2, #0x20
     b74:	mov	x1, x23
     b78:	str	x2, [sp, #120]
     b7c:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     b80:	tst	w0, #0xff
     b84:	ldr	x2, [sp, #120]
     b88:	b.ne	b98 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1cc>  // b.any
     b8c:	mov	x26, x2
     b90:	ldr	x2, [x2, #16]
     b94:	b	b6c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1a0>
     b98:	ldr	x2, [x2, #24]
     b9c:	b	b6c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1a0>
     ba0:	cmp	x27, x26
     ba4:	b.eq	bbc <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1f0>  // b.none
     ba8:	add	x1, x26, #0x20
     bac:	mov	x0, x23
     bb0:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     bb4:	tst	w0, #0xff
     bb8:	b.eq	c18 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x24c>  // b.none
     bbc:	mov	x0, #0x48                  	// #72
     bc0:	bl	0 <_Znwm>
     bc4:	add	x5, x0, #0x20
     bc8:	mov	x1, x23
     bcc:	mov	x27, x0
     bd0:	mov	x0, x5
     bd4:	str	x5, [sp, #120]
     bd8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
     bdc:	ldr	x5, [sp, #120]
     be0:	mov	x1, x26
     be4:	mov	x0, x20
     be8:	mov	x2, x5
     bec:	str	xzr, [x5, #32]
     bf0:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     bf4:	mov	x2, x1
     bf8:	mov	x26, x0
     bfc:	ldr	x5, [sp, #120]
     c00:	cbz	x1, d40 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x374>
     c04:	mov	x1, x0
     c08:	mov	x3, x27
     c0c:	mov	x0, x20
     c10:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     c14:	mov	x26, x0
     c18:	ldr	x20, [x26, #64]
     c1c:	cbnz	x20, cbc <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x2f0>
     c20:	add	x0, x21, #0x0
     c24:	add	x0, x0, #0x38
     c28:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     c2c:	mov	x20, x0
     c30:	mov	x0, x19
     c34:	bl	0 <_ZNK4llvm5Value7getNameEv>
     c38:	stp	x0, x1, [sp, #152]
     c3c:	adrp	x3, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     c40:	add	x26, x3, #0x0
     c44:	mov	x2, x28
     c48:	mov	x1, x26
     c4c:	mov	x0, x24
     c50:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     c54:	mov	x8, x22
     c58:	mov	x0, x24
     c5c:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
     c60:	mov	x0, x20
     c64:	mov	x1, x22
     c68:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     c6c:	ldr	x20, [x0]
     c70:	mov	x0, x22
     c74:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
     c78:	cbnz	x20, cbc <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x2f0>
     c7c:	mov	x0, x19
     c80:	bl	0 <_ZNK4llvm5Value7getNameEv>
     c84:	mov	x2, x28
     c88:	stp	x0, x1, [sp, #152]
     c8c:	mov	x1, x26
     c90:	mov	x0, x24
     c94:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     c98:	mov	x8, x22
     c9c:	mov	x0, x24
     ca0:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
     ca4:	ldr	x0, [sp, #224]
     ca8:	bl	0 <_ZN4llvm3sys14DynamicLibrary24SearchForAddressOfSymbolEPKc>
     cac:	mov	x20, x0
     cb0:	mov	x0, x22
     cb4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
     cb8:	cbz	x20, cd4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x308>
     cbc:	add	x0, x21, #0x0
     cc0:	add	x0, x0, #0x20
     cc4:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     cc8:	mov	x1, x22
     ccc:	stp	x19, x20, [sp, #224]
     cd0:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     cd4:	adrp	x0, 0 <__pthread_key_create>
     cd8:	ldr	x0, [x0]
     cdc:	cbz	x0, ce8 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x31c>
     ce0:	ldr	x0, [sp, #96]
     ce4:	bl	0 <pthread_mutex_unlock>
     ce8:	mov	x0, x23
     cec:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
     cf0:	cbz	x20, d5c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x390>
     cf4:	add	x0, sp, #0x88
     cf8:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     cfc:	mov	x0, x19
     d00:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     d04:	ldp	x1, x2, [sp, #104]
     d08:	mov	x8, x25
     d0c:	blr	x20
     d10:	ldrb	w0, [sp, #144]
     d14:	cbz	w0, d20 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x354>
     d18:	add	x0, sp, #0x88
     d1c:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     d20:	mov	x0, x25
     d24:	ldp	x19, x20, [sp, #16]
     d28:	ldp	x21, x22, [sp, #32]
     d2c:	ldp	x23, x24, [sp, #48]
     d30:	ldp	x25, x26, [sp, #64]
     d34:	ldp	x27, x28, [sp, #80]
     d38:	ldp	x29, x30, [sp], #256
     d3c:	ret
     d40:	mov	x0, x5
     d44:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
     d48:	mov	x0, x27
     d4c:	bl	0 <_ZdlPv>
     d50:	b	c18 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x24c>
     d54:	ldr	x20, [x20, #40]
     d58:	b	cf0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x324>
     d5c:	mov	x0, x19
     d60:	adrp	x20, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     d64:	bl	0 <_ZNK4llvm5Value7getNameEv>
     d68:	mov	x2, x1
     d6c:	cmp	x1, #0x6
     d70:	b.eq	da0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x3d4>  // b.none
     d74:	mov	x0, x19
     d78:	bl	0 <_ZNK4llvm5Value7getNameEv>
     d7c:	add	x2, sp, #0xc0
     d80:	add	x19, sp, #0xe0
     d84:	stp	x0, x1, [sp, #192]
     d88:	add	x1, x20, #0x0
     d8c:	mov	x0, x19
     d90:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     d94:	mov	x0, x19
     d98:	mov	w1, #0x1                   	// #1
     d9c:	bl	0 <_ZN4llvm18report_fatal_errorERKNS_5TwineEb>
     da0:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     da4:	add	x1, x1, #0x0
     da8:	bl	0 <memcmp>
     dac:	cbnz	w0, d74 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x3a8>
     db0:	bl	0 <_ZN4llvm4errsEv>
     db4:	add	x1, x20, #0x0
     db8:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     dbc:	mov	x20, x0
     dc0:	ldr	x0, [x19]
     dc4:	cbnz	x0, de8 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x41c>
     dc8:	adrp	x3, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     dcc:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     dd0:	adrp	x0, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     dd4:	add	x3, x3, #0x0
     dd8:	add	x1, x1, #0x0
     ddc:	add	x0, x0, #0x0
     de0:	mov	w2, #0x69                  	// #105
     de4:	bl	0 <__assert_fail>
     de8:	ldrb	w1, [x0, #8]
     dec:	cmp	w1, #0xf
     df0:	b.eq	e14 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x448>  // b.none
     df4:	adrp	x3, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     df8:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     dfc:	adrp	x0, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     e00:	add	x3, x3, #0x0
     e04:	add	x1, x1, #0x0
     e08:	add	x0, x0, #0x0
     e0c:	mov	w2, #0x108                 	// #264
     e10:	b	de4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x418>
     e14:	mov	w3, #0x0                   	// #0
     e18:	mov	w2, #0x0                   	// #0
     e1c:	mov	x1, x20
     e20:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
     e24:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     e28:	add	x1, x1, #0x0
     e2c:	mov	x0, x20
     e30:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     e34:	bl	0 <_ZN4llvm4errsEv>
     e38:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     e3c:	add	x1, x1, #0x0
     e40:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     e44:	mov	x0, x25
     e48:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     e4c:	b	d10 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x344>

0000000000000e50 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv>:
     e50:	stp	x29, x30, [sp, #-80]!
     e54:	mov	x29, sp
     e58:	stp	x19, x20, [sp, #16]
     e5c:	adrp	x20, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     e60:	add	x20, x20, #0x0
     e64:	add	x0, x20, #0x8
     e68:	add	x20, x20, #0x38
     e6c:	stp	x21, x22, [sp, #32]
     e70:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     e74:	mov	x21, x0
     e78:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     e7c:	add	x19, sp, #0x30
     e80:	mov	x0, x20
     e84:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     e88:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     e8c:	mov	x22, x0
     e90:	add	x1, x1, #0x0
     e94:	mov	x0, x19
     e98:	bl	c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0>
     e9c:	mov	x1, x19
     ea0:	mov	x0, x22
     ea4:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     ea8:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     eac:	add	x1, x1, #0x0
     eb0:	str	x1, [x0]
     eb4:	mov	x0, x19
     eb8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
     ebc:	mov	x0, x20
     ec0:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     ec4:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     ec8:	mov	x22, x0
     ecc:	add	x1, x1, #0x0
     ed0:	mov	x0, x19
     ed4:	bl	c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0>
     ed8:	mov	x1, x19
     edc:	mov	x0, x22
     ee0:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     ee4:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     ee8:	add	x1, x1, #0x0
     eec:	str	x1, [x0]
     ef0:	mov	x0, x19
     ef4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
     ef8:	mov	x0, x20
     efc:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     f00:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     f04:	mov	x22, x0
     f08:	add	x1, x1, #0x0
     f0c:	mov	x0, x19
     f10:	bl	c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0>
     f14:	mov	x1, x19
     f18:	mov	x0, x22
     f1c:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     f20:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     f24:	add	x1, x1, #0x0
     f28:	str	x1, [x0]
     f2c:	mov	x0, x19
     f30:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
     f34:	mov	x0, x20
     f38:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     f3c:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     f40:	mov	x22, x0
     f44:	add	x1, x1, #0x0
     f48:	mov	x0, x19
     f4c:	bl	c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0>
     f50:	mov	x1, x19
     f54:	mov	x0, x22
     f58:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     f5c:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     f60:	add	x1, x1, #0x0
     f64:	str	x1, [x0]
     f68:	mov	x0, x19
     f6c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
     f70:	mov	x0, x20
     f74:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     f78:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     f7c:	mov	x22, x0
     f80:	add	x1, x1, #0x0
     f84:	mov	x0, x19
     f88:	bl	c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0>
     f8c:	mov	x1, x19
     f90:	mov	x0, x22
     f94:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     f98:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     f9c:	add	x1, x1, #0x0
     fa0:	str	x1, [x0]
     fa4:	mov	x0, x19
     fa8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
     fac:	mov	x0, x20
     fb0:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     fb4:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     fb8:	mov	x22, x0
     fbc:	add	x1, x1, #0x0
     fc0:	mov	x0, x19
     fc4:	bl	c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0>
     fc8:	mov	x1, x19
     fcc:	mov	x0, x22
     fd0:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     fd4:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     fd8:	add	x1, x1, #0x0
     fdc:	str	x1, [x0]
     fe0:	mov	x0, x19
     fe4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
     fe8:	mov	x0, x20
     fec:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     ff0:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
     ff4:	mov	x22, x0
     ff8:	add	x1, x1, #0x0
     ffc:	mov	x0, x19
    1000:	bl	c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0>
    1004:	mov	x1, x19
    1008:	mov	x0, x22
    100c:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
    1010:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
    1014:	add	x1, x1, #0x0
    1018:	str	x1, [x0]
    101c:	mov	x0, x19
    1020:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
    1024:	mov	x0, x20
    1028:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
    102c:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
    1030:	mov	x22, x0
    1034:	add	x1, x1, #0x0
    1038:	mov	x0, x19
    103c:	bl	c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0>
    1040:	mov	x1, x19
    1044:	mov	x0, x22
    1048:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
    104c:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
    1050:	add	x1, x1, #0x0
    1054:	str	x1, [x0]
    1058:	mov	x0, x19
    105c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
    1060:	mov	x0, x20
    1064:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
    1068:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
    106c:	mov	x22, x0
    1070:	add	x1, x1, #0x0
    1074:	mov	x0, x19
    1078:	bl	c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0>
    107c:	mov	x1, x19
    1080:	mov	x0, x22
    1084:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
    1088:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
    108c:	add	x1, x1, #0x0
    1090:	str	x1, [x0]
    1094:	mov	x0, x19
    1098:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
    109c:	mov	x0, x20
    10a0:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
    10a4:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
    10a8:	mov	x20, x0
    10ac:	add	x1, x1, #0x0
    10b0:	mov	x0, x19
    10b4:	bl	c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0>
    10b8:	mov	x1, x19
    10bc:	mov	x0, x20
    10c0:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
    10c4:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
    10c8:	add	x1, x1, #0x0
    10cc:	str	x1, [x0]
    10d0:	mov	x0, x19
    10d4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
    10d8:	adrp	x0, 0 <__pthread_key_create>
    10dc:	ldr	x0, [x0]
    10e0:	cbz	x0, 10ec <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x29c>
    10e4:	mov	x0, x21
    10e8:	bl	0 <pthread_mutex_unlock>
    10ec:	ldp	x19, x20, [sp, #16]
    10f0:	ldp	x21, x22, [sp, #32]
    10f4:	ldp	x29, x30, [sp], #80
    10f8:	ret

00000000000010fc <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
    10fc:	mov	x12, #0x27b0                	// #10160
    1100:	sub	sp, sp, x12
    1104:	stp	x29, x30, [sp]
    1108:	mov	x29, sp
    110c:	stp	x1, x2, [sp, #64]
    1110:	stp	x23, x24, [sp, #48]
    1114:	ldr	x24, [sp, #72]
    1118:	stp	x19, x20, [sp, #16]
    111c:	stp	x21, x22, [sp, #32]
    1120:	cmp	x24, #0x1
    1124:	b.hi	1148 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x4c>  // b.pmore
    1128:	adrp	x3, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
    112c:	adrp	x1, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
    1130:	adrp	x0, 0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
    1134:	add	x3, x3, #0x0
    1138:	add	x1, x1, #0x0
    113c:	add	x0, x0, #0x0
    1140:	mov	w2, #0x1cd                 	// #461
    1144:	bl	0 <__assert_fail>
    1148:	mov	x21, x0
    114c:	mov	w0, #0x1                   	// #1
    1150:	mov	x20, x8
    1154:	add	x23, sp, #0xa0
    1158:	add	x22, sp, #0x70
    115c:	stp	xzr, xzr, [sp, #88]
    1160:	add	x19, sp, #0x58
    1164:	stp	xzr, x23, [sp, #104]
    1168:	str	xzr, [sp, #120]
    116c:	str	w0, [sp, #128]
    1170:	add	x0, sp, #0x78
    1174:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
    1178:	stp	xzr, xzr, [sp, #136]
    117c:	mov	x1, x22
    1180:	mov	x0, x19
    1184:	str	xzr, [sp, #152]
    1188:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
    118c:	mov	x0, x22
    1190:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
    1194:	ldr	x2, [sp, #64]
    1198:	mov	x3, #0x30                  	// #48
    119c:	ldr	x1, [sp, #96]
    11a0:	mov	w4, #0x0                   	// #0
    11a4:	madd	x3, x24, x3, x2
    11a8:	mov	x0, x19
    11ac:	add	x2, x2, #0x30
    11b0:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
    11b4:	ldp	x1, x2, [sp, #88]
    11b8:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    11bc:	movk	x0, #0xaaab
    11c0:	mov	x8, x20
    11c4:	sub	x2, x2, x1
    11c8:	asr	x2, x2, #4
    11cc:	mul	x2, x2, x0
    11d0:	mov	x0, x21
    11d4:	bl	558 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>
    11d8:	mov	x1, #0x0                   	// #0
    11dc:	add	x0, sp, #0x40
    11e0:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
    11e4:	ldr	x1, [x0]
    11e8:	mov	x0, x23
    11ec:	bl	0 <fputs>
    11f0:	mov	x0, x19
    11f4:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
    11f8:	mov	x0, x20
    11fc:	mov	x12, #0x27b0                	// #10160
    1200:	ldp	x29, x30, [sp]
    1204:	ldp	x19, x20, [sp, #16]
    1208:	ldp	x21, x22, [sp, #32]
    120c:	ldp	x23, x24, [sp, #48]
    1210:	add	sp, sp, x12
    1214:	ret

0000000000001218 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
    1218:	mov	x12, #0x27b0                	// #10160
    121c:	sub	sp, sp, x12
    1220:	stp	x29, x30, [sp]
    1224:	mov	x29, sp
    1228:	stp	x21, x22, [sp, #32]
    122c:	mov	x22, x0
    1230:	mov	w0, #0x1                   	// #1
    1234:	mov	x21, x1
    1238:	stp	x19, x20, [sp, #16]
    123c:	mov	x20, x8
    1240:	stp	x23, x24, [sp, #48]
    1244:	mov	x23, x2
    1248:	add	x24, sp, #0x70
    124c:	str	x25, [sp, #64]
    1250:	add	x25, sp, #0xa0
    1254:	stp	xzr, xzr, [sp, #88]
    1258:	add	x19, sp, #0x58
    125c:	str	xzr, [sp, #104]
    1260:	str	x25, [sp, #112]
    1264:	str	xzr, [sp, #120]
    1268:	str	w0, [sp, #128]
    126c:	add	x0, sp, #0x78
    1270:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
    1274:	stp	xzr, xzr, [sp, #136]
    1278:	mov	x1, x24
    127c:	mov	x0, x19
    1280:	str	xzr, [sp, #152]
    1284:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
    1288:	mov	x0, x24
    128c:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
    1290:	mov	x3, #0x30                  	// #48
    1294:	mov	w4, #0x0                   	// #0
    1298:	ldr	x1, [sp, #96]
    129c:	madd	x3, x23, x3, x21
    12a0:	mov	x2, x21
    12a4:	mov	x0, x19
    12a8:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
    12ac:	ldp	x1, x2, [sp, #88]
    12b0:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    12b4:	movk	x0, #0xaaab
    12b8:	mov	x8, x20
    12bc:	sub	x2, x2, x1
    12c0:	asr	x2, x2, #4
    12c4:	mul	x2, x2, x0
    12c8:	mov	x0, x22
    12cc:	bl	558 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>
    12d0:	bl	0 <_ZN4llvm4outsEv>
    12d4:	mov	x1, x25
    12d8:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
    12dc:	mov	x0, x19
    12e0:	bl	0 <_ZNSt12_Vector_baseIN4llvm12GenericValueESaIS1_EE13_M_deallocateEPS1_m.isra.0>
    12e4:	mov	x0, x20
    12e8:	mov	x12, #0x27b0                	// #10160
    12ec:	ldp	x29, x30, [sp]
    12f0:	ldp	x19, x20, [sp, #16]
    12f4:	ldp	x21, x22, [sp, #32]
    12f8:	ldp	x23, x24, [sp, #48]
    12fc:	ldr	x25, [sp, #64]
    1300:	add	sp, sp, x12
    1304:	ret

Disassembly of section .text._ZN4llvm14object_deleterINS_3sys10SmartMutexILb0EEEE4callEPv:

0000000000000000 <_ZN4llvm14object_deleterINS_3sys10SmartMutexILb0EEEE4callEPv>:
   0:	cbz	x0, c <_ZN4llvm14object_deleterINS_3sys10SmartMutexILb0EEEE4callEPv+0xc>
   4:	mov	x1, #0x38                  	// #56
   8:	b	0 <_ZdlPvm>
   c:	ret

Disassembly of section .text._ZN4llvm14object_creatorINS_3sys10SmartMutexILb0EEEE4callEv:

0000000000000000 <_ZN4llvm14object_creatorINS_3sys10SmartMutexILb0EEEE4callEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x0, #0x38                  	// #56
   8:	mov	x29, sp
   c:	bl	0 <_Znwm>
  10:	stp	xzr, xzr, [x0, #16]
  14:	mov	w2, #0x1                   	// #1
  18:	stp	xzr, xzr, [x0]
  1c:	str	w2, [x0, #16]
  20:	stp	xzr, xzr, [x0, #32]
  24:	str	xzr, [x0, #48]
  28:	ldp	x29, x30, [sp], #16
  2c:	ret

Disassembly of section .text._ZN4llvm14object_creatorISt3mapIPKNS_8FunctionEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS5_EEESt4lessIS4_ESaISt4pairIKS4_SB_EEEE4callEv:

0000000000000000 <_ZN4llvm14object_creatorISt3mapIPKNS_8FunctionEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS5_EEESt4lessIS4_ESaISt4pairIKS4_SB_EEEE4callEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x0, #0x30                  	// #48
   8:	mov	x29, sp
   c:	bl	0 <_Znwm>
  10:	add	x1, x0, #0x8
  14:	str	wzr, [x0, #8]
  18:	str	xzr, [x0, #16]
  1c:	stp	x1, x1, [x1, #16]
  20:	str	xzr, [x1, #32]
  24:	ldp	x29, x30, [sp], #16
  28:	ret

Disassembly of section .text._ZN4llvm14object_creatorISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS8_EEESt4lessIS7_ESaISt4pairIKS7_SE_EEEE4callEv:

0000000000000000 <_ZN4llvm14object_creatorISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS8_EEESt4lessIS7_ESaISt4pairIKS7_SE_EEEE4callEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x0, #0x30                  	// #48
   8:	mov	x29, sp
   c:	bl	0 <_Znwm>
  10:	add	x1, x0, #0x8
  14:	str	wzr, [x0, #8]
  18:	str	xzr, [x0, #16]
  1c:	stp	x1, x1, [x1, #16]
  20:	str	xzr, [x1, #32]
  24:	ldp	x29, x30, [sp], #16
  28:	ret

Disassembly of section .text._ZN4llvm5TwineC2EPKcRKNS_9StringRefE:

0000000000000000 <_ZN4llvm5TwineC1EPKcRKNS_9StringRefE>:
   0:	mov	w3, #0x503                 	// #1283
   4:	stp	x1, x2, [x0]
   8:	strh	w3, [x0, #16]
   c:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	str	x21, [sp, #32]
  14:	mov	x21, x1
  18:	cbz	x1, 54 <_ZN4llvm11raw_ostreamlsEPKc+0x54>
  1c:	mov	x0, x1
  20:	bl	0 <strlen>
  24:	mov	x20, x0
  28:	ldp	x1, x0, [x19, #16]
  2c:	sub	x1, x1, x0
  30:	cmp	x1, x20
  34:	b.cs	5c <_ZN4llvm11raw_ostreamlsEPKc+0x5c>  // b.hs, b.nlast
  38:	mov	x2, x20
  3c:	mov	x1, x21
  40:	mov	x0, x19
  44:	ldp	x19, x20, [sp, #16]
  48:	ldr	x21, [sp, #32]
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  54:	mov	x20, #0x0                   	// #0
  58:	b	28 <_ZN4llvm11raw_ostreamlsEPKc+0x28>
  5c:	cbz	x20, 78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  60:	mov	x2, x20
  64:	mov	x1, x21
  68:	bl	0 <memcpy>
  6c:	ldr	x0, [x19, #24]
  70:	add	x0, x0, x20
  74:	str	x0, [x19, #24]
  78:	mov	x0, x19
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldr	x21, [sp, #32]
  84:	ldp	x29, x30, [sp], #48
  88:	ret

Disassembly of section .text._ZN4llvm5APInt15clearUnusedBitsEv:

0000000000000000 <_ZN4llvm5APInt15clearUnusedBitsEv>:
   0:	ldr	w1, [x0, #8]
   4:	mov	x2, #0xffffffffffffffff    	// #-1
   8:	neg	w3, w1
   c:	cmp	w1, #0x40
  10:	lsr	x3, x2, x3
  14:	ldr	x2, [x0]
  18:	b.hi	28 <_ZN4llvm5APInt15clearUnusedBitsEv+0x28>  // b.pmore
  1c:	and	x2, x2, x3
  20:	str	x2, [x0]
  24:	ret
  28:	mov	w1, w1
  2c:	add	x1, x1, #0x3f
  30:	lsr	x1, x1, #6
  34:	sub	w1, w1, #0x1
  38:	lsl	x1, x1, #3
  3c:	ldr	x4, [x2, x1]
  40:	and	x3, x4, x3
  44:	str	x3, [x2, x1]
  48:	b	24 <_ZN4llvm5APInt15clearUnusedBitsEv+0x24>

Disassembly of section .text._ZN4llvm5APIntD2Ev:

0000000000000000 <_ZN4llvm5APIntD1Ev>:
   0:	ldr	w1, [x0, #8]
   4:	cmp	w1, #0x40
   8:	b.ls	18 <_ZN4llvm5APIntD1Ev+0x18>  // b.plast
   c:	ldr	x0, [x0]
  10:	cbz	x0, 18 <_ZN4llvm5APIntD1Ev+0x18>
  14:	b	0 <_ZdaPv>
  18:	ret

Disassembly of section .text._ZN4llvm5APIntaSERKS0_:

0000000000000000 <_ZN4llvm5APIntaSERKS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	ldr	w2, [x0, #8]
   c:	str	x19, [sp, #16]
  10:	mov	x19, x0
  14:	cmp	w2, #0x40
  18:	b.hi	40 <_ZN4llvm5APIntaSERKS0_+0x40>  // b.pmore
  1c:	ldr	w2, [x1, #8]
  20:	cmp	w2, #0x40
  24:	b.hi	40 <_ZN4llvm5APIntaSERKS0_+0x40>  // b.pmore
  28:	ldr	x1, [x1]
  2c:	str	x1, [x0]
  30:	str	w2, [x0, #8]
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	b	0 <_ZN4llvm5APIntaSERKS0_>
  40:	mov	x0, x19
  44:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
  48:	mov	x0, x19
  4c:	ldr	x19, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	ret

Disassembly of section .text._ZN4llvm5APIntaSEOS0_:

0000000000000000 <_ZN4llvm5APIntaSEOS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	b.ne	34 <_ZN4llvm5APIntaSEOS0_+0x34>  // b.any
  14:	adrp	x3, 0 <_ZN4llvm5APIntaSEOS0_>
  18:	adrp	x1, 0 <_ZN4llvm5APIntaSEOS0_>
  1c:	adrp	x0, 0 <_ZN4llvm5APIntaSEOS0_>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x302                 	// #770
  30:	bl	0 <__assert_fail>
  34:	mov	x19, x0
  38:	ldr	w0, [x0, #8]
  3c:	mov	x20, x1
  40:	cmp	w0, #0x40
  44:	b.ls	54 <_ZN4llvm5APIntaSEOS0_+0x54>  // b.plast
  48:	ldr	x0, [x19]
  4c:	cbz	x0, 54 <_ZN4llvm5APIntaSEOS0_+0x54>
  50:	bl	0 <_ZdaPv>
  54:	ldr	x0, [x20]
  58:	str	x0, [x19]
  5c:	ldr	w0, [x20, #8]
  60:	str	w0, [x19, #8]
  64:	mov	x0, x19
  68:	str	wzr, [x20, #8]
  6c:	ldp	x19, x20, [sp, #16]
  70:	ldp	x29, x30, [sp], #32
  74:	ret

Disassembly of section .text._ZN4llvm5APIntaSEm:

0000000000000000 <_ZN4llvm5APIntaSEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	ldr	w2, [x0, #8]
   c:	str	x19, [sp, #16]
  10:	mov	x19, x0
  14:	cmp	w2, #0x40
  18:	b.hi	34 <_ZN4llvm5APIntaSEm+0x34>  // b.pmore
  1c:	str	x1, [x0]
  20:	bl	0 <_ZN4llvm5APIntaSEm>
  24:	mov	x0, x19
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	ret
  34:	ldr	x0, [x0]
  38:	mov	w2, w2
  3c:	add	x2, x2, #0x3f
  40:	str	x1, [x0]
  44:	lsr	x2, x2, #6
  48:	sub	w2, w2, #0x1
  4c:	mov	w1, #0x0                   	// #0
  50:	ldr	x0, [x19]
  54:	lsl	w2, w2, #3
  58:	add	x0, x0, #0x8
  5c:	bl	0 <memset>
  60:	b	24 <_ZN4llvm5APIntaSEm+0x24>

Disassembly of section .text._ZNK4llvm5APInt17countLeadingZerosEv:

0000000000000000 <_ZNK4llvm5APInt17countLeadingZerosEv>:
   0:	ldr	w1, [x0, #8]
   4:	mov	x2, x0
   8:	cmp	w1, #0x40
   c:	b.hi	30 <_ZNK4llvm5APInt17countLeadingZerosEv+0x30>  // b.pmore
  10:	ldr	x2, [x2]
  14:	sub	w1, w1, #0x40
  18:	mov	w0, #0x40                  	// #64
  1c:	clz	x3, x2
  20:	cmp	x2, #0x0
  24:	csel	w0, w0, w3, eq  // eq = none
  28:	add	w0, w1, w0
  2c:	ret
  30:	b	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>

Disassembly of section .text._ZNK4llvm5APInt16getMinSignedBitsEv:

0000000000000000 <_ZNK4llvm5APInt16getMinSignedBitsEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	ldr	w1, [x0, #8]
   c:	str	x19, [sp, #16]
  10:	subs	w3, w1, #0x1
  14:	cbnz	w1, 38 <_ZNK4llvm5APInt16getMinSignedBitsEv+0x38>
  18:	adrp	x3, 0 <_ZNK4llvm5APInt16getMinSignedBitsEv>
  1c:	adrp	x1, 0 <_ZNK4llvm5APInt16getMinSignedBitsEv>
  20:	adrp	x0, 0 <_ZNK4llvm5APInt16getMinSignedBitsEv>
  24:	add	x3, x3, #0x0
  28:	add	x1, x1, #0x0
  2c:	add	x0, x0, #0x0
  30:	mov	w2, #0x472                 	// #1138
  34:	bl	0 <__assert_fail>
  38:	mov	x4, #0x1                   	// #1
  3c:	cmp	w1, #0x40
  40:	lsl	x4, x4, x3
  44:	ldr	x2, [x0]
  48:	b.hi	90 <_ZNK4llvm5APInt16getMinSignedBitsEv+0x90>  // b.pmore
  4c:	mov	x3, x2
  50:	add	w19, w1, #0x1
  54:	tst	x4, x3
  58:	b.eq	a4 <_ZNK4llvm5APInt16getMinSignedBitsEv+0xa4>  // b.none
  5c:	cmp	w1, #0x40
  60:	b.hi	9c <_ZNK4llvm5APInt16getMinSignedBitsEv+0x9c>  // b.pmore
  64:	mov	w0, #0x40                  	// #64
  68:	sub	w1, w0, w1
  6c:	lsl	x1, x2, x1
  70:	mvn	x1, x1
  74:	clz	x2, x1
  78:	cmp	x1, #0x0
  7c:	csel	w0, w0, w2, eq  // eq = none
  80:	sub	w0, w19, w0
  84:	ldr	x19, [sp, #16]
  88:	ldp	x29, x30, [sp], #32
  8c:	ret
  90:	lsr	w3, w3, #6
  94:	ldr	x3, [x2, x3, lsl #3]
  98:	b	50 <_ZNK4llvm5APInt16getMinSignedBitsEv+0x50>
  9c:	bl	0 <_ZNK4llvm5APInt24countLeadingOnesSlowCaseEv>
  a0:	b	80 <_ZNK4llvm5APInt16getMinSignedBitsEv+0x80>
  a4:	bl	0 <_ZNK4llvm5APInt16getMinSignedBitsEv>
  a8:	b	80 <_ZNK4llvm5APInt16getMinSignedBitsEv+0x80>

Disassembly of section .text._ZNK4llvm5APInt12getZExtValueEv:

0000000000000000 <_ZNK4llvm5APInt12getZExtValueEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	w20, [x0, #8]
  14:	cmp	w20, #0x40
  18:	b.hi	2c <_ZNK4llvm5APInt12getZExtValueEv+0x2c>  // b.pmore
  1c:	ldr	x0, [x0]
  20:	ldp	x19, x20, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	ret
  2c:	bl	0 <_ZNK4llvm5APInt12getZExtValueEv>
  30:	sub	w20, w20, w0
  34:	cmp	w20, #0x40
  38:	b.ls	5c <_ZNK4llvm5APInt12getZExtValueEv+0x5c>  // b.plast
  3c:	adrp	x3, 0 <_ZNK4llvm5APInt12getZExtValueEv>
  40:	adrp	x1, 0 <_ZNK4llvm5APInt12getZExtValueEv>
  44:	adrp	x0, 0 <_ZNK4llvm5APInt12getZExtValueEv>
  48:	add	x3, x3, #0x0
  4c:	add	x1, x1, #0x0
  50:	add	x0, x0, #0x0
  54:	mov	w2, #0x657                 	// #1623
  58:	bl	0 <__assert_fail>
  5c:	ldr	x0, [x19]
  60:	ldr	x0, [x0]
  64:	b	20 <_ZNK4llvm5APInt12getZExtValueEv+0x20>

Disassembly of section .text._ZNK4llvm8Function15getFunctionTypeEv:

0000000000000000 <_ZNK4llvm8Function15getFunctionTypeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0, #24]
   c:	cbnz	x0, 30 <_ZNK4llvm8Function15getFunctionTypeEv+0x30>
  10:	adrp	x3, 0 <_ZNK4llvm8Function15getFunctionTypeEv>
  14:	adrp	x1, 0 <_ZNK4llvm8Function15getFunctionTypeEv>
  18:	adrp	x0, 0 <_ZNK4llvm8Function15getFunctionTypeEv>
  1c:	add	x3, x3, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0x69                  	// #105
  2c:	bl	0 <__assert_fail>
  30:	ldrb	w1, [x0, #8]
  34:	cmp	w1, #0xc
  38:	b.eq	5c <_ZNK4llvm8Function15getFunctionTypeEv+0x5c>  // b.none
  3c:	adrp	x3, 0 <_ZNK4llvm8Function15getFunctionTypeEv>
  40:	adrp	x1, 0 <_ZNK4llvm8Function15getFunctionTypeEv>
  44:	adrp	x0, 0 <_ZNK4llvm8Function15getFunctionTypeEv>
  48:	add	x3, x3, #0x0
  4c:	add	x1, x1, #0x0
  50:	add	x0, x0, #0x0
  54:	mov	w2, #0x108                 	// #264
  58:	b	2c <_ZNK4llvm8Function15getFunctionTypeEv+0x2c>
  5c:	ldp	x29, x30, [sp], #16
  60:	ret

Disassembly of section .text._ZNSt15recursive_mutex4lockEv:

0000000000000000 <_ZNSt15recursive_mutex4lockEv>:
   0:	adrp	x1, 0 <__pthread_key_create>
   4:	ldr	x1, [x1]
   8:	cbz	x1, 28 <_ZNSt15recursive_mutex4lockEv+0x28>
   c:	stp	x29, x30, [sp, #-16]!
  10:	mov	x29, sp
  14:	bl	0 <pthread_mutex_lock>
  18:	cbz	w0, 20 <_ZNSt15recursive_mutex4lockEv+0x20>
  1c:	bl	0 <_ZSt20__throw_system_errori>
  20:	ldp	x29, x30, [sp], #16
  24:	ret
  28:	ret

Disassembly of section .text._ZN4llvm12GenericValueC2Ev:

0000000000000000 <_ZN4llvm12GenericValueC1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	w1, #0x1                   	// #1
   8:	mov	x29, sp
   c:	str	x19, [sp, #16]
  10:	mov	x19, x0
  14:	str	w1, [x0, #16]
  18:	add	x0, x0, #0x8
  1c:	str	xzr, [x19, #8]
  20:	bl	0 <_ZN4llvm12GenericValueC1Ev>
  24:	str	xzr, [x19]
  28:	stp	xzr, xzr, [x19, #24]
  2c:	str	xzr, [x19, #40]
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret

Disassembly of section .text._ZN4llvm12GenericValueC2EOS0_:

0000000000000000 <_ZN4llvm12GenericValueC1EOS0_>:
   0:	mov	x2, x1
   4:	mov	x3, x0
   8:	ldr	x4, [x2], #8
   c:	str	x4, [x3], #8
  10:	ldr	w4, [x2, #8]
  14:	str	w4, [x3, #8]
  18:	ldr	x3, [x1, #8]
  1c:	str	x3, [x0, #8]
  20:	add	x3, x0, #0x18
  24:	ldr	x4, [x1, #24]
  28:	str	wzr, [x2, #8]
  2c:	str	x4, [x0, #24]
  30:	ldr	x0, [x1, #32]
  34:	str	x0, [x3, #8]
  38:	ldr	x0, [x1, #40]
  3c:	str	x0, [x3, #16]
  40:	stp	xzr, xzr, [x1, #24]
  44:	str	xzr, [x1, #40]
  48:	ret

Disassembly of section .text._ZSt22__uninitialized_move_aIPN4llvm12GenericValueES2_SaIS1_EET0_T_S5_S4_RT1_.isra.0:

0000000000000000 <_ZSt22__uninitialized_move_aIPN4llvm12GenericValueES2_SaIS1_EET0_T_S5_S4_RT1_.isra.0>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x1
  10:	mov	x20, x2
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x21, x0
  1c:	mov	x22, x0
  20:	str	x23, [sp, #48]
  24:	mov	x23, x2
  28:	cmp	x19, x22
  2c:	b.eq	48 <_ZSt22__uninitialized_move_aIPN4llvm12GenericValueES2_SaIS1_EET0_T_S5_S4_RT1_.isra.0+0x48>  // b.none
  30:	mov	x1, x22
  34:	mov	x0, x23
  38:	add	x22, x22, #0x30
  3c:	add	x23, x23, #0x30
  40:	bl	0 <_ZSt22__uninitialized_move_aIPN4llvm12GenericValueES2_SaIS1_EET0_T_S5_S4_RT1_.isra.0>
  44:	b	28 <_ZSt22__uninitialized_move_aIPN4llvm12GenericValueES2_SaIS1_EET0_T_S5_S4_RT1_.isra.0+0x28>
  48:	sub	x19, x19, x21
  4c:	mov	x0, #0xaaab                	// #43691
  50:	movk	x0, #0xaaaa, lsl #16
  54:	lsr	x19, x19, #4
  58:	movk	x0, #0xaaaa, lsl #32
  5c:	movk	x0, #0xaaa, lsl #48
  60:	ldp	x21, x22, [sp, #32]
  64:	mul	x19, x19, x0
  68:	mov	x0, #0x30                  	// #48
  6c:	and	x19, x19, #0xfffffffffffffff
  70:	ldr	x23, [sp, #48]
  74:	madd	x0, x19, x0, x20
  78:	ldp	x19, x20, [sp, #16]
  7c:	ldp	x29, x30, [sp], #64
  80:	ret

Disassembly of section .text._ZN4llvm12GenericValueC2ERKS0_:

0000000000000000 <_ZN4llvm12GenericValueC1ERKS0_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x21, x1
  18:	stp	x23, x24, [sp, #48]
  1c:	ldr	x2, [x1], #8
  20:	str	x2, [x0], #8
  24:	ldr	w2, [x1, #8]
  28:	str	w2, [x0, #8]
  2c:	cmp	w2, #0x40
  30:	b.hi	a4 <_ZN4llvm12GenericValueC1ERKS0_+0xa4>  // b.pmore
  34:	ldr	x0, [x21, #8]
  38:	str	x0, [x19, #8]
  3c:	ldp	x0, x22, [x21, #24]
  40:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  44:	movk	x1, #0xaaab
  48:	add	x23, x19, #0x18
  4c:	str	xzr, [x19, #24]
  50:	stp	xzr, xzr, [x23, #8]
  54:	sub	x22, x22, x0
  58:	asr	x0, x22, #4
  5c:	mul	x0, x0, x1
  60:	cbz	x0, ac <_ZN4llvm12GenericValueC1ERKS0_+0xac>
  64:	bl	0 <_ZN4llvm12GenericValueC1ERKS0_>
  68:	mov	x20, x0
  6c:	str	x20, [x19, #24]
  70:	add	x22, x20, x22
  74:	stp	x20, x22, [x23, #8]
  78:	mov	x22, x20
  7c:	ldp	x24, x19, [x21, #24]
  80:	mov	x21, x24
  84:	cmp	x19, x21
  88:	b.eq	b4 <_ZN4llvm12GenericValueC1ERKS0_+0xb4>  // b.none
  8c:	mov	x1, x21
  90:	mov	x0, x22
  94:	add	x21, x21, #0x30
  98:	add	x22, x22, #0x30
  9c:	bl	0 <_ZN4llvm12GenericValueC1ERKS0_>
  a0:	b	84 <_ZN4llvm12GenericValueC1ERKS0_+0x84>
  a4:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
  a8:	b	3c <_ZN4llvm12GenericValueC1ERKS0_+0x3c>
  ac:	mov	x20, #0x0                   	// #0
  b0:	b	6c <_ZN4llvm12GenericValueC1ERKS0_+0x6c>
  b4:	sub	x19, x19, x24
  b8:	mov	x0, #0xaaab                	// #43691
  bc:	movk	x0, #0xaaaa, lsl #16
  c0:	lsr	x19, x19, #4
  c4:	movk	x0, #0xaaaa, lsl #32
  c8:	movk	x0, #0xaaa, lsl #48
  cc:	ldp	x21, x22, [sp, #32]
  d0:	mul	x19, x19, x0
  d4:	mov	x0, #0x30                  	// #48
  d8:	and	x19, x19, #0xfffffffffffffff
  dc:	madd	x0, x19, x0, x20
  e0:	ldp	x19, x20, [sp, #16]
  e4:	str	x0, [x23, #8]
  e8:	ldp	x23, x24, [sp, #48]
  ec:	ldp	x29, x30, [sp], #64
  f0:	ret

Disassembly of section .text._ZN4llvm13ManagedStaticINS_3sys10SmartMutexILb0EEENS_14object_creatorIS3_EENS_14object_deleterIS3_EEEdeEv:

0000000000000000 <_ZN4llvm13ManagedStaticINS_3sys10SmartMutexILb0EEENS_14object_creatorIS3_EENS_14object_deleterIS3_EEEdeEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	ldar	x1, [x0]
  14:	cbnz	x1, 2c <_ZN4llvm13ManagedStaticINS_3sys10SmartMutexILb0EEENS_14object_creatorIS3_EENS_14object_deleterIS3_EEEdeEv+0x2c>
  18:	adrp	x2, 0 <_ZN4llvm13ManagedStaticINS_3sys10SmartMutexILb0EEENS_14object_creatorIS3_EENS_14object_deleterIS3_EEEdeEv>
  1c:	adrp	x1, 0 <_ZN4llvm13ManagedStaticINS_3sys10SmartMutexILb0EEENS_14object_creatorIS3_EENS_14object_deleterIS3_EEEdeEv>
  20:	add	x2, x2, #0x0
  24:	add	x1, x1, #0x0
  28:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
  2c:	ldr	x0, [x19]
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret

Disassembly of section .text._ZN4llvm13ManagedStaticISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS8_EEESt4lessIS7_ESaISt4pairIKS7_SE_EEENS_14object_creatorISL_EENS_14object_deleterISL_EEEdeEv:

0000000000000000 <_ZN4llvm13ManagedStaticISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS8_EEESt4lessIS7_ESaISt4pairIKS7_SE_EEENS_14object_creatorISL_EENS_14object_deleterISL_EEEdeEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	ldar	x1, [x0]
  14:	cbnz	x1, 2c <_ZN4llvm13ManagedStaticISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS8_EEESt4lessIS7_ESaISt4pairIKS7_SE_EEENS_14object_creatorISL_EENS_14object_deleterISL_EEEdeEv+0x2c>
  18:	adrp	x2, 0 <_ZN4llvm13ManagedStaticISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS8_EEESt4lessIS7_ESaISt4pairIKS7_SE_EEENS_14object_creatorISL_EENS_14object_deleterISL_EEEdeEv>
  1c:	adrp	x1, 0 <_ZN4llvm13ManagedStaticISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS8_EEESt4lessIS7_ESaISt4pairIKS7_SE_EEENS_14object_creatorISL_EENS_14object_deleterISL_EEEdeEv>
  20:	add	x2, x2, #0x0
  24:	add	x1, x1, #0x0
  28:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
  2c:	ldr	x0, [x19]
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret

Disassembly of section .text._ZNSt11unique_lockIN4llvm3sys10SmartMutexILb0EEEE6unlockEv:

0000000000000000 <_ZNSt11unique_lockIN4llvm3sys10SmartMutexILb0EEEE6unlockEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	ldrb	w0, [x0, #8]
  14:	cbnz	w0, 20 <_ZNSt11unique_lockIN4llvm3sys10SmartMutexILb0EEEE6unlockEv+0x20>
  18:	mov	w0, #0x1                   	// #1
  1c:	bl	0 <_ZSt20__throw_system_errori>
  20:	ldr	x0, [x19]
  24:	cbz	x0, 3c <_ZNSt11unique_lockIN4llvm3sys10SmartMutexILb0EEEE6unlockEv+0x3c>
  28:	adrp	x1, 0 <__pthread_key_create>
  2c:	ldr	x1, [x1]
  30:	cbz	x1, 38 <_ZNSt11unique_lockIN4llvm3sys10SmartMutexILb0EEEE6unlockEv+0x38>
  34:	bl	0 <pthread_mutex_unlock>
  38:	strb	wzr, [x19, #8]
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	ret

Disassembly of section .text._ZNK4llvm8ArrayRefINS_12GenericValueEEixEm:

0000000000000000 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm>:
   0:	ldr	x2, [x0, #8]
   4:	cmp	x2, x1
   8:	b.hi	34 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm+0x34>  // b.pmore
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm>
  14:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0xfa                  	// #250
  30:	bl	0 <__assert_fail>
  34:	ldr	x0, [x0]
  38:	mov	x2, #0x30                  	// #48
  3c:	madd	x0, x1, x2, x0
  40:	ret

Disassembly of section .text._ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x23, x24, [sp, #48]
   c:	ldp	x24, x23, [x0]
  10:	stp	x19, x20, [sp, #16]
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x22, x0
  1c:	mov	x0, #0xfffffffffffffff     	// #1152921504606846975
  20:	stp	x25, x26, [sp, #64]
  24:	mov	x25, x1
  28:	sub	x1, x23, x24
  2c:	cmp	x0, x1, asr #3
  30:	b.ne	40 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x40>  // b.any
  34:	adrp	x0, 0 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  38:	add	x0, x0, #0x0
  3c:	bl	0 <_ZSt20__throw_length_errorPKc>
  40:	asr	x19, x1, #3
  44:	mov	x26, x2
  48:	cmp	x19, #0x0
  4c:	sub	x20, x25, x24
  50:	csinc	x1, x19, xzr, ne  // ne = any
  54:	adds	x19, x19, x1
  58:	b.cs	f0 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xf0>  // b.hs, b.nlast
  5c:	mov	x21, #0x0                   	// #0
  60:	cbz	x19, 78 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x78>
  64:	cmp	x19, x0
  68:	csel	x19, x19, x0, ls  // ls = plast
  6c:	lsl	x0, x19, #3
  70:	bl	0 <_Znwm>
  74:	mov	x21, x0
  78:	ldr	x0, [x26]
  7c:	str	x0, [x21, x20]
  80:	cmp	x20, #0x0
  84:	b.le	98 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x98>
  88:	mov	x2, x20
  8c:	mov	x1, x24
  90:	mov	x0, x21
  94:	bl	0 <memmove>
  98:	add	x20, x20, #0x8
  9c:	sub	x23, x23, x25
  a0:	add	x20, x21, x20
  a4:	cmp	x23, #0x0
  a8:	b.le	bc <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xbc>
  ac:	mov	x2, x23
  b0:	mov	x1, x25
  b4:	mov	x0, x20
  b8:	bl	0 <memcpy>
  bc:	add	x20, x20, x23
  c0:	cbz	x24, cc <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xcc>
  c4:	mov	x0, x24
  c8:	bl	0 <_ZdlPv>
  cc:	add	x19, x21, x19, lsl #3
  d0:	ldp	x23, x24, [sp, #48]
  d4:	ldp	x25, x26, [sp, #64]
  d8:	stp	x21, x20, [x22]
  dc:	str	x19, [x22, #16]
  e0:	ldp	x19, x20, [sp, #16]
  e4:	ldp	x21, x22, [sp, #32]
  e8:	ldp	x29, x30, [sp], #80
  ec:	ret
  f0:	mov	x19, x0
  f4:	b	6c <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x6c>

Disassembly of section .text._ZN4llvm13ManagedStaticISt3mapIPKNS_8FunctionEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS5_EEESt4lessIS4_ESaISt4pairIKS4_SB_EEENS_14object_creatorISI_EENS_14object_deleterISI_EEEdeEv:

0000000000000000 <_ZN4llvm13ManagedStaticISt3mapIPKNS_8FunctionEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS5_EEESt4lessIS4_ESaISt4pairIKS4_SB_EEENS_14object_creatorISI_EENS_14object_deleterISI_EEEdeEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	ldar	x1, [x0]
  14:	cbnz	x1, 2c <_ZN4llvm13ManagedStaticISt3mapIPKNS_8FunctionEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS5_EEESt4lessIS4_ESaISt4pairIKS4_SB_EEENS_14object_creatorISI_EENS_14object_deleterISI_EEEdeEv+0x2c>
  18:	adrp	x2, 0 <_ZN4llvm13ManagedStaticISt3mapIPKNS_8FunctionEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS5_EEESt4lessIS4_ESaISt4pairIKS4_SB_EEENS_14object_creatorISI_EENS_14object_deleterISI_EEEdeEv>
  1c:	adrp	x1, 0 <_ZN4llvm13ManagedStaticISt3mapIPKNS_8FunctionEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS5_EEESt4lessIS4_ESaISt4pairIKS4_SB_EEENS_14object_creatorISI_EENS_14object_deleterISI_EEEdeEv>
  20:	add	x2, x2, #0x0
  24:	add	x1, x1, #0x0
  28:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
  2c:	ldr	x0, [x19]
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret

Disassembly of section .text._ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_:

0000000000000000 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x21, x0
  18:	mov	x0, #0x30                  	// #48
  1c:	stp	x23, x24, [sp, #48]
  20:	bl	0 <_Znwm>
  24:	mov	x19, x0
  28:	ldr	x23, [x20]
  2c:	str	x23, [x0, #32]
  30:	ldr	x0, [x20, #8]
  34:	add	x24, x21, #0x8
  38:	str	x0, [x19, #40]
  3c:	mov	x20, x24
  40:	ldr	x0, [x21, #16]
  44:	mov	w1, #0x1                   	// #1
  48:	cbz	x0, 78 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x78>
  4c:	ldr	x1, [x0, #32]
  50:	cmp	x23, x1
  54:	b.cs	6c <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x6c>  // b.hs, b.nlast
  58:	ldr	x2, [x0, #16]
  5c:	mov	w1, #0x1                   	// #1
  60:	mov	x20, x0
  64:	mov	x0, x2
  68:	b	48 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x48>
  6c:	mov	w1, #0x0                   	// #0
  70:	ldr	x2, [x0, #24]
  74:	b	60 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x60>
  78:	cbz	w1, c4 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0xc4>
  7c:	ldr	x0, [x21, #24]
  80:	cmp	x0, x20
  84:	b.eq	108 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x108>  // b.none
  88:	mov	x0, x20
  8c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  90:	mov	x22, x0
  94:	ldr	x0, [x22, #32]
  98:	cmp	x0, x23
  9c:	b.cc	108 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x108>  // b.lo, b.ul, b.last
  a0:	mov	x0, x19
  a4:	bl	0 <_ZdlPv>
  a8:	mov	x0, x22
  ac:	mov	x1, #0x0                   	// #0
  b0:	ldp	x19, x20, [sp, #16]
  b4:	ldp	x21, x22, [sp, #32]
  b8:	ldp	x23, x24, [sp, #48]
  bc:	ldp	x29, x30, [sp], #64
  c0:	ret
  c4:	mov	x22, x20
  c8:	b	94 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x94>
  cc:	ldr	x0, [x20, #32]
  d0:	cmp	x23, x0
  d4:	cset	w0, cc  // cc = lo, ul, last
  d8:	mov	x2, x20
  dc:	mov	x1, x19
  e0:	mov	x3, x24
  e4:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  e8:	ldr	x0, [x21, #40]
  ec:	mov	x1, #0x0                   	// #0
  f0:	mov	x2, #0x1                   	// #1
  f4:	add	x0, x0, #0x1
  f8:	bfxil	x1, x2, #0, #8
  fc:	str	x0, [x21, #40]
 100:	mov	x0, x19
 104:	b	b0 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0xb0>
 108:	cmp	x24, x20
 10c:	b.ne	cc <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0xcc>  // b.any
 110:	mov	w0, #0x1                   	// #1
 114:	b	d8 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0xd8>

Disassembly of section .text._ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_:

0000000000000000 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
   c:	lsr	w0, w0, #31
  10:	ldp	x29, x30, [sp], #16
  14:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSO_PSt13_Rb_tree_nodeISG_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSO_PSt13_Rb_tree_nodeISG_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x3
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x21, x2
  1c:	add	x22, x0, #0x8
  20:	cbnz	x1, 6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSO_PSt13_Rb_tree_nodeISG_E+0x6c>
  24:	cmp	x2, x22
  28:	b.eq	6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSO_PSt13_Rb_tree_nodeISG_E+0x6c>  // b.none
  2c:	add	x1, x2, #0x20
  30:	add	x0, x3, #0x20
  34:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSO_PSt13_Rb_tree_nodeISG_E>
  38:	and	w0, w0, #0xff
  3c:	mov	x3, x22
  40:	mov	x2, x21
  44:	mov	x1, x19
  48:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  4c:	ldr	x0, [x20, #40]
  50:	ldp	x21, x22, [sp, #32]
  54:	add	x0, x0, #0x1
  58:	str	x0, [x20, #40]
  5c:	mov	x0, x19
  60:	ldp	x19, x20, [sp, #16]
  64:	ldp	x29, x30, [sp], #48
  68:	ret
  6c:	mov	w0, #0x1                   	// #1
  70:	b	3c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSO_PSt13_Rb_tree_nodeISG_E+0x3c>

Disassembly of section .text._ZNSt12_Destroy_auxILb0EE9__destroyIPN4llvm12GenericValueEEEvT_S5_:

0000000000000000 <_ZNSt12_Destroy_auxILb0EE9__destroyIPN4llvm12GenericValueEEEvT_S5_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	cmp	x19, x20
  18:	b.eq	2c <_ZNSt12_Destroy_auxILb0EE9__destroyIPN4llvm12GenericValueEEEvT_S5_+0x2c>  // b.none
  1c:	mov	x0, x19
  20:	add	x19, x19, #0x30
  24:	bl	0 <_ZNSt12_Destroy_auxILb0EE9__destroyIPN4llvm12GenericValueEEEvT_S5_>
  28:	b	14 <_ZNSt12_Destroy_auxILb0EE9__destroyIPN4llvm12GenericValueEEEvT_S5_+0x14>
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EED2Ev:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	ldp	x0, x1, [x0]
  14:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev>
  18:	ldr	x0, [x19]
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	b	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev>

Disassembly of section .text._ZN4llvm12GenericValueD2Ev:

0000000000000000 <_ZN4llvm12GenericValueD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	add	x0, x0, #0x18
  14:	bl	0 <_ZN4llvm12GenericValueD1Ev>
  18:	add	x0, x19, #0x8
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	b	0 <_ZN4llvm12GenericValueD1Ev>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	str	x21, [sp, #32]
  18:	cbz	x19, 44 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E+0x44>
  1c:	ldr	x1, [x19, #24]
  20:	mov	x0, x20
  24:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E>
  28:	ldr	x21, [x19, #16]
  2c:	add	x0, x19, #0x20
  30:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
  34:	mov	x0, x19
  38:	mov	x19, x21
  3c:	bl	0 <_ZdlPv>
  40:	b	18 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E+0x18>
  44:	ldp	x19, x20, [sp, #16]
  48:	ldr	x21, [sp, #32]
  4c:	ldp	x29, x30, [sp], #48
  50:	ret

Disassembly of section .text._ZN4llvm14object_deleterISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS8_EEESt4lessIS7_ESaISt4pairIKS7_SE_EEEE4callEPv:

0000000000000000 <_ZN4llvm14object_deleterISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS8_EEESt4lessIS7_ESaISt4pairIKS7_SE_EEEE4callEPv>:
   0:	cbz	x0, 30 <_ZN4llvm14object_deleterISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS8_EEESt4lessIS7_ESaISt4pairIKS7_SE_EEEE4callEPv+0x30>
   4:	stp	x29, x30, [sp, #-32]!
   8:	mov	x29, sp
   c:	ldr	x1, [x0, #16]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	bl	0 <_ZN4llvm14object_deleterISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS8_EEESt4lessIS7_ESaISt4pairIKS7_SE_EEEE4callEPv>
  1c:	mov	x0, x19
  20:	mov	x1, #0x30                  	// #48
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	b	0 <_ZdlPvm>
  30:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x22, x1
  10:	mov	x21, x0
  14:	stp	x19, x20, [sp, #16]
  18:	add	x19, x0, #0x8
  1c:	ldr	x20, [x0, #16]
  20:	mov	w0, #0x1                   	// #1
  24:	cbz	x20, 54 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x54>
  28:	add	x1, x20, #0x20
  2c:	mov	x0, x22
  30:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_>
  34:	ands	w0, w0, #0xff
  38:	b.eq	4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x4c>  // b.none
  3c:	ldr	x1, [x20, #16]
  40:	mov	x19, x20
  44:	mov	x20, x1
  48:	b	24 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x24>
  4c:	ldr	x1, [x20, #24]
  50:	b	40 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x40>
  54:	cbz	w0, a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0xa8>
  58:	ldr	x0, [x21, #24]
  5c:	cmp	x0, x19
  60:	b.ne	7c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x7c>  // b.any
  64:	mov	x1, x19
  68:	mov	x0, #0x0                   	// #0
  6c:	ldp	x19, x20, [sp, #16]
  70:	ldp	x21, x22, [sp, #32]
  74:	ldp	x29, x30, [sp], #48
  78:	ret
  7c:	mov	x0, x19
  80:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  84:	mov	x20, x0
  88:	mov	x1, x22
  8c:	add	x0, x20, #0x20
  90:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_>
  94:	ands	w1, w0, #0xff
  98:	csel	x0, x20, xzr, eq  // eq = none
  9c:	cmp	w1, #0x0
  a0:	csel	x1, x19, xzr, ne  // ne = any
  a4:	b	6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x6c>
  a8:	mov	x20, x19
  ac:	b	88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x88>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x21, x0
  14:	add	x0, x0, #0x8
  18:	mov	x22, x2
  1c:	cmp	x1, x0
  20:	b.ne	50 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x50>  // b.any
  24:	ldr	x0, [x21, #40]
  28:	cbz	x0, 11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x11c>
  2c:	ldr	x19, [x21, #32]
  30:	mov	x1, x2
  34:	add	x0, x19, #0x20
  38:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_>
  3c:	tst	w0, #0xff
  40:	b.eq	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x11c>  // b.none
  44:	mov	x0, #0x0                   	// #0
  48:	mov	x1, x19
  4c:	b	ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xac>
  50:	add	x20, x1, #0x20
  54:	mov	x19, x1
  58:	mov	x0, x2
  5c:	mov	x1, x20
  60:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_>
  64:	tst	w0, #0xff
  68:	b.eq	c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xc4>  // b.none
  6c:	ldr	x0, [x21, #24]
  70:	cmp	x0, x19
  74:	b.ne	80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x80>  // b.any
  78:	mov	x1, x0
  7c:	b	ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xac>
  80:	mov	x0, x19
  84:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  88:	mov	x1, x22
  8c:	mov	x20, x0
  90:	add	x0, x0, #0x20
  94:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_>
  98:	tst	w0, #0xff
  9c:	b.eq	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x11c>  // b.none
  a0:	ldr	x0, [x20, #24]
  a4:	cbnz	x0, bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xbc>
  a8:	mov	x1, x20
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x21, x22, [sp, #32]
  b4:	ldp	x29, x30, [sp], #48
  b8:	ret
  bc:	mov	x0, x19
  c0:	b	78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x78>
  c4:	mov	x1, x22
  c8:	mov	x0, x20
  cc:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_>
  d0:	tst	w0, #0xff
  d4:	b.eq	134 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x134>  // b.none
  d8:	ldr	x1, [x21, #32]
  dc:	cmp	x1, x19
  e0:	b.ne	ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xec>  // b.any
  e4:	mov	x0, #0x0                   	// #0
  e8:	b	ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xac>
  ec:	mov	x0, x19
  f0:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
  f4:	add	x1, x0, #0x20
  f8:	mov	x20, x0
  fc:	mov	x0, x22
 100:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_>
 104:	tst	w0, #0xff
 108:	b.eq	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x11c>  // b.none
 10c:	ldr	x0, [x19, #24]
 110:	cbz	x0, 48 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x48>
 114:	mov	x0, x20
 118:	b	78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x78>
 11c:	mov	x1, x22
 120:	mov	x0, x21
 124:	ldp	x19, x20, [sp, #16]
 128:	ldp	x21, x22, [sp, #32]
 12c:	ldp	x29, x30, [sp], #48
 130:	b	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_>
 134:	mov	x0, x19
 138:	mov	x1, #0x0                   	// #0
 13c:	b	ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xac>

Disassembly of section .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFN4llvm12GenericValueEPNS6_12FunctionTypeENS6_8ArrayRefIS7_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEEixEOS5_:

0000000000000000 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFN4llvm12GenericValueEPNS6_12FunctionTypeENS6_8ArrayRefIS7_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEEixEOS5_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	ldr	x20, [x0, #16]
  10:	str	x23, [sp, #48]
  14:	add	x23, x0, #0x8
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x19, x23
  20:	mov	x21, x0
  24:	mov	x22, x1
  28:	cbz	x20, 54 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFN4llvm12GenericValueEPNS6_12FunctionTypeENS6_8ArrayRefIS7_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEEixEOS5_+0x54>
  2c:	mov	x1, x22
  30:	add	x0, x20, #0x20
  34:	bl	0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFN4llvm12GenericValueEPNS6_12FunctionTypeENS6_8ArrayRefIS7_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEEixEOS5_>
  38:	tst	w0, #0xff
  3c:	b.ne	4c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFN4llvm12GenericValueEPNS6_12FunctionTypeENS6_8ArrayRefIS7_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEEixEOS5_+0x4c>  // b.any
  40:	mov	x19, x20
  44:	ldr	x20, [x20, #16]
  48:	b	28 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFN4llvm12GenericValueEPNS6_12FunctionTypeENS6_8ArrayRefIS7_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEEixEOS5_+0x28>
  4c:	ldr	x20, [x20, #24]
  50:	b	28 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFN4llvm12GenericValueEPNS6_12FunctionTypeENS6_8ArrayRefIS7_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEEixEOS5_+0x28>
  54:	cmp	x23, x19
  58:	b.eq	70 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFN4llvm12GenericValueEPNS6_12FunctionTypeENS6_8ArrayRefIS7_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEEixEOS5_+0x70>  // b.none
  5c:	add	x1, x19, #0x20
  60:	mov	x0, x22
  64:	bl	0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFN4llvm12GenericValueEPNS6_12FunctionTypeENS6_8ArrayRefIS7_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEEixEOS5_>
  68:	tst	w0, #0xff
  6c:	b.eq	c0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFN4llvm12GenericValueEPNS6_12FunctionTypeENS6_8ArrayRefIS7_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEEixEOS5_+0xc0>  // b.none
  70:	mov	x0, #0x48                  	// #72
  74:	bl	0 <_Znwm>
  78:	add	x23, x0, #0x20
  7c:	mov	x1, x22
  80:	mov	x20, x0
  84:	mov	x0, x23
  88:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
  8c:	str	xzr, [x23, #32]
  90:	mov	x2, x23
  94:	mov	x1, x19
  98:	mov	x0, x21
  9c:	bl	0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFN4llvm12GenericValueEPNS6_12FunctionTypeENS6_8ArrayRefIS7_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEEixEOS5_>
  a0:	mov	x2, x1
  a4:	mov	x19, x0
  a8:	cbz	x1, d8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFN4llvm12GenericValueEPNS6_12FunctionTypeENS6_8ArrayRefIS7_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEEixEOS5_+0xd8>
  ac:	mov	x1, x0
  b0:	mov	x3, x20
  b4:	mov	x0, x21
  b8:	bl	0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFN4llvm12GenericValueEPNS6_12FunctionTypeENS6_8ArrayRefIS7_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEEixEOS5_>
  bc:	mov	x19, x0
  c0:	add	x0, x19, #0x40
  c4:	ldp	x19, x20, [sp, #16]
  c8:	ldp	x21, x22, [sp, #32]
  cc:	ldr	x23, [sp, #48]
  d0:	ldp	x29, x30, [sp], #64
  d4:	ret
  d8:	mov	x0, x23
  dc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
  e0:	mov	x0, x20
  e4:	bl	0 <_ZdlPv>
  e8:	b	c0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFN4llvm12GenericValueEPNS6_12FunctionTypeENS6_8ArrayRefIS7_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEEixEOS5_+0xc0>

Disassembly of section .text._ZNKSt6vectorIN4llvm12GenericValueESaIS1_EE12_M_check_lenEmPKc:

0000000000000000 <_ZNKSt6vectorIN4llvm12GenericValueESaIS1_EE12_M_check_lenEmPKc>:
   0:	mov	x4, x0
   4:	mov	x0, x2
   8:	ldp	x2, x3, [x4]
   c:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  10:	movk	x4, #0x2aa, lsl #48
  14:	sub	x3, x3, x2
  18:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  1c:	movk	x2, #0xaaab
  20:	asr	x3, x3, #4
  24:	mul	x3, x3, x2
  28:	sub	x2, x4, x3
  2c:	cmp	x2, x1
  30:	b.cs	40 <_ZNKSt6vectorIN4llvm12GenericValueESaIS1_EE12_M_check_lenEmPKc+0x40>  // b.hs, b.nlast
  34:	stp	x29, x30, [sp, #-16]!
  38:	mov	x29, sp
  3c:	bl	0 <_ZSt20__throw_length_errorPKc>
  40:	cmp	x1, x3
  44:	csel	x1, x1, x3, cs  // cs = hs, nlast
  48:	adds	x3, x3, x1
  4c:	b.cs	5c <_ZNKSt6vectorIN4llvm12GenericValueESaIS1_EE12_M_check_lenEmPKc+0x5c>  // b.hs, b.nlast
  50:	cmp	x3, x4
  54:	csel	x0, x3, x4, ls  // ls = plast
  58:	ret
  5c:	mov	x0, x4
  60:	ret

Disassembly of section .text._ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE8_M_eraseEPSt13_Rb_tree_nodeISD_E:

0000000000000000 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE8_M_eraseEPSt13_Rb_tree_nodeISD_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	str	x21, [sp, #32]
  18:	cbz	x19, 3c <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE8_M_eraseEPSt13_Rb_tree_nodeISD_E+0x3c>
  1c:	ldr	x1, [x19, #24]
  20:	mov	x0, x20
  24:	bl	0 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE8_M_eraseEPSt13_Rb_tree_nodeISD_E>
  28:	ldr	x21, [x19, #16]
  2c:	mov	x0, x19
  30:	bl	0 <_ZdlPv>
  34:	mov	x19, x21
  38:	b	18 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE8_M_eraseEPSt13_Rb_tree_nodeISD_E+0x18>
  3c:	ldp	x19, x20, [sp, #16]
  40:	ldr	x21, [sp, #32]
  44:	ldp	x29, x30, [sp], #48
  48:	ret

Disassembly of section .text._ZN4llvm14object_deleterISt3mapIPKNS_8FunctionEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS5_EEESt4lessIS4_ESaISt4pairIKS4_SB_EEEE4callEPv:

0000000000000000 <_ZN4llvm14object_deleterISt3mapIPKNS_8FunctionEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS5_EEESt4lessIS4_ESaISt4pairIKS4_SB_EEEE4callEPv>:
   0:	cbz	x0, 30 <_ZN4llvm14object_deleterISt3mapIPKNS_8FunctionEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS5_EEESt4lessIS4_ESaISt4pairIKS4_SB_EEEE4callEPv+0x30>
   4:	stp	x29, x30, [sp, #-32]!
   8:	mov	x29, sp
   c:	ldr	x1, [x0, #16]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	bl	0 <_ZN4llvm14object_deleterISt3mapIPKNS_8FunctionEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS5_EEESt4lessIS4_ESaISt4pairIKS4_SB_EEEE4callEPv>
  1c:	mov	x0, x19
  20:	mov	x1, #0x30                  	// #48
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	b	0 <_ZdlPvm>
  30:	ret

Disassembly of section .text._ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN4llvm12GenericValueEPS3_EET0_T_S8_S7_:

0000000000000000 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN4llvm12GenericValueEPS3_EET0_T_S8_S7_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x2
  10:	mov	x19, x0
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x21, x0
  1c:	mov	x22, x2
  20:	str	x23, [sp, #48]
  24:	mov	x23, x1
  28:	cmp	x19, x23
  2c:	b.eq	48 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN4llvm12GenericValueEPS3_EET0_T_S8_S7_+0x48>  // b.none
  30:	mov	x1, x19
  34:	mov	x0, x22
  38:	add	x19, x19, #0x30
  3c:	add	x22, x22, #0x30
  40:	bl	0 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN4llvm12GenericValueEPS3_EET0_T_S8_S7_>
  44:	b	28 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN4llvm12GenericValueEPS3_EET0_T_S8_S7_+0x28>
  48:	sub	x19, x19, x21
  4c:	mov	x0, #0xaaab                	// #43691
  50:	movk	x0, #0xaaaa, lsl #16
  54:	lsr	x19, x19, #4
  58:	movk	x0, #0xaaaa, lsl #32
  5c:	movk	x0, #0xaaa, lsl #48
  60:	ldp	x21, x22, [sp, #32]
  64:	mul	x19, x19, x0
  68:	mov	x0, #0x30                  	// #48
  6c:	and	x19, x19, #0xfffffffffffffff
  70:	ldr	x23, [sp, #48]
  74:	madd	x0, x19, x0, x20
  78:	ldp	x19, x20, [sp, #16]
  7c:	ldp	x29, x30, [sp], #64
  80:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	ldp	x21, x2, [x0, #8]
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x19, x0
  18:	stp	x23, x24, [sp, #48]
  1c:	str	x25, [sp, #64]
  20:	cmp	x21, x2
  24:	b.eq	54 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x54>  // b.none
  28:	mov	x0, x21
  2c:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>
  30:	ldr	x0, [x19, #8]
  34:	add	x0, x0, #0x30
  38:	str	x0, [x19, #8]
  3c:	ldp	x19, x20, [sp, #16]
  40:	ldp	x21, x22, [sp, #32]
  44:	ldp	x23, x24, [sp, #48]
  48:	ldr	x25, [sp, #64]
  4c:	ldp	x29, x30, [sp], #80
  50:	ret
  54:	mov	x24, x1
  58:	adrp	x2, 0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>
  5c:	mov	x1, #0x1                   	// #1
  60:	add	x2, x2, #0x0
  64:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>
  68:	mov	x22, x0
  6c:	ldr	x23, [x19]
  70:	sub	x25, x21, x23
  74:	cbz	x0, d8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0xd8>
  78:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>
  7c:	mov	x20, x0
  80:	mov	x1, x24
  84:	add	x0, x20, x25
  88:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>
  8c:	mov	x2, x20
  90:	mov	x1, x21
  94:	mov	x0, x23
  98:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>
  9c:	mov	x1, x21
  a0:	add	x2, x0, #0x30
  a4:	mov	x0, x21
  a8:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>
  ac:	mov	x1, x21
  b0:	mov	x24, x0
  b4:	mov	x0, x23
  b8:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>
  bc:	mov	x0, x23
  c0:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>
  c4:	stp	x20, x24, [x19]
  c8:	mov	x0, #0x30                  	// #48
  cc:	madd	x20, x22, x0, x20
  d0:	str	x20, [x19, #16]
  d4:	b	3c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x3c>
  d8:	mov	x20, #0x0                   	// #0
  dc:	b	80 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x80>

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	cmp	x1, x0
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	stp	x21, x22, [sp, #32]
  18:	stp	x23, x24, [sp, #48]
  1c:	str	x25, [sp, #64]
  20:	b.eq	bc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0xbc>  // b.none
  24:	mov	x24, x1
  28:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  2c:	ldr	x2, [x0]
  30:	movk	x3, #0xaaab
  34:	ldp	x20, x25, [x24]
  38:	ldr	x1, [x0, #16]
  3c:	sub	x1, x1, x2
  40:	sub	x23, x25, x20
  44:	asr	x1, x1, #4
  48:	asr	x0, x23, #4
  4c:	mul	x1, x1, x3
  50:	mul	x0, x0, x3
  54:	cmp	x1, x0
  58:	b.cs	d8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0xd8>  // b.hs, b.nlast
  5c:	cbz	x0, 8c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x8c>
  60:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
  64:	mov	x21, x0
  68:	mov	x22, x21
  6c:	cmp	x25, x20
  70:	b.eq	94 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x94>  // b.none
  74:	mov	x1, x20
  78:	mov	x0, x22
  7c:	add	x20, x20, #0x30
  80:	add	x22, x22, #0x30
  84:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
  88:	b	6c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x6c>
  8c:	mov	x21, #0x0                   	// #0
  90:	b	68 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x68>
  94:	ldp	x0, x1, [x19]
  98:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
  9c:	ldr	x0, [x19]
  a0:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
  a4:	str	x21, [x19]
  a8:	add	x21, x21, x23
  ac:	str	x21, [x19, #16]
  b0:	ldr	x0, [x19]
  b4:	add	x23, x0, x23
  b8:	str	x23, [x19, #8]
  bc:	mov	x0, x19
  c0:	ldp	x19, x20, [sp, #16]
  c4:	ldp	x21, x22, [sp, #32]
  c8:	ldp	x23, x24, [sp, #48]
  cc:	ldr	x25, [sp, #64]
  d0:	ldp	x29, x30, [sp], #80
  d4:	ret
  d8:	ldr	x22, [x19, #8]
  dc:	sub	x22, x22, x2
  e0:	asr	x22, x22, #4
  e4:	mul	x22, x22, x3
  e8:	cmp	x0, x22
  ec:	b.ls	130 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x130>  // b.plast
  f0:	add	x21, x2, #0x8
  f4:	add	x20, x20, #0x8
  f8:	cmp	x22, #0x0
  fc:	b.le	15c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x15c>
 100:	ldur	x0, [x20, #-8]
 104:	stur	x0, [x21, #-8]
 108:	mov	x1, x20
 10c:	mov	x0, x21
 110:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 114:	sub	x22, x22, #0x1
 118:	add	x1, x20, #0x10
 11c:	add	x0, x21, #0x10
 120:	add	x20, x20, #0x30
 124:	add	x21, x21, #0x30
 128:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 12c:	b	f8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0xf8>
 130:	mov	x0, x20
 134:	mov	x1, x25
 138:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 13c:	mov	x20, x0
 140:	ldr	x21, [x19, #8]
 144:	cmp	x21, x20
 148:	b.eq	b0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0xb0>  // b.none
 14c:	mov	x0, x20
 150:	add	x20, x20, #0x30
 154:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 158:	b	144 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x144>
 15c:	ldp	x1, x21, [x19]
 160:	ldp	x20, x22, [x24]
 164:	sub	x1, x21, x1
 168:	add	x20, x20, x1
 16c:	cmp	x22, x20
 170:	b.eq	b0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0xb0>  // b.none
 174:	mov	x1, x20
 178:	mov	x0, x21
 17c:	add	x20, x20, #0x30
 180:	add	x21, x21, #0x30
 184:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 188:	b	16c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x16c>

Disassembly of section .text._ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKN4llvm12GenericValueEPS4_EET0_T_S9_S8_:

0000000000000000 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKN4llvm12GenericValueEPS4_EET0_T_S9_S8_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	sub	x19, x1, x0
  10:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  14:	asr	x19, x19, #4
  18:	movk	x1, #0xaaab
  1c:	add	x20, x0, #0x8
  20:	stp	x21, x22, [sp, #32]
  24:	mov	x22, x2
  28:	mul	x19, x19, x1
  2c:	add	x21, x2, #0x8
  30:	str	x23, [sp, #48]
  34:	mov	x23, x19
  38:	cmp	x23, #0x0
  3c:	b.le	70 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKN4llvm12GenericValueEPS4_EET0_T_S9_S8_+0x70>
  40:	ldur	x0, [x20, #-8]
  44:	stur	x0, [x21, #-8]
  48:	mov	x1, x20
  4c:	mov	x0, x21
  50:	bl	0 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKN4llvm12GenericValueEPS4_EET0_T_S9_S8_>
  54:	sub	x23, x23, #0x1
  58:	add	x1, x20, #0x10
  5c:	add	x0, x21, #0x10
  60:	add	x20, x20, #0x30
  64:	add	x21, x21, #0x30
  68:	bl	0 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKN4llvm12GenericValueEPS4_EET0_T_S9_S8_>
  6c:	b	38 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKN4llvm12GenericValueEPS4_EET0_T_S9_S8_+0x38>
  70:	cmp	x19, #0x0
  74:	mov	x0, #0x30                  	// #48
  78:	csel	x19, x19, xzr, ge  // ge = tcont
  7c:	ldr	x23, [sp, #48]
  80:	madd	x0, x19, x0, x22
  84:	ldp	x19, x20, [sp, #16]
  88:	ldp	x21, x22, [sp, #32]
  8c:	ldp	x29, x30, [sp], #64
  90:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>:
   0:	cmp	x2, x3
   4:	b.eq	200 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x200>  // b.none
   8:	stp	x29, x30, [sp, #-128]!
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x19, x0
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x22, x1
  20:	ldp	x20, x1, [x0, #8]
  24:	stp	x27, x28, [sp, #80]
  28:	sub	x28, x3, x2
  2c:	stp	x25, x26, [sp, #64]
  30:	mov	x26, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  34:	asr	x21, x28, #4
  38:	movk	x26, #0xaaab
  3c:	stp	x23, x24, [sp, #48]
  40:	sub	x1, x1, x20
  44:	mul	x21, x21, x26
  48:	mov	x23, x2
  4c:	asr	x1, x1, #4
  50:	mov	x24, x3
  54:	mul	x1, x1, x26
  58:	cmp	x1, x21
  5c:	b.cc	180 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x180>  // b.lo, b.ul, b.last
  60:	sub	x27, x20, x22
  64:	asr	x25, x27, #4
  68:	mul	x25, x25, x26
  6c:	cmp	x21, x25
  70:	b.cs	134 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x134>  // b.hs, b.nlast
  74:	sub	x21, x20, x28
  78:	mov	x2, x20
  7c:	mov	x1, x20
  80:	mov	x0, x21
  84:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
  88:	add	x25, sp, #0x68
  8c:	ldr	x0, [x19, #8]
  90:	add	x0, x0, x28
  94:	str	x0, [x19, #8]
  98:	sub	x19, x21, x22
  9c:	asr	x19, x19, #4
  a0:	mul	x19, x19, x26
  a4:	cmp	x19, #0x0
  a8:	b.le	108 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x108>
  ac:	sub	x21, x21, #0x30
  b0:	sub	x20, x20, #0x30
  b4:	mov	x1, x21
  b8:	mov	x0, x20
  bc:	sub	x19, x19, #0x1
  c0:	ldr	x2, [x1], #8
  c4:	str	x2, [x0], #8
  c8:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
  cc:	ldr	x3, [x21, #24]
  d0:	ldp	x2, x1, [x20, #24]
  d4:	str	x3, [x20, #24]
  d8:	ldr	x0, [x20, #40]
  dc:	ldr	x3, [x21, #32]
  e0:	str	x3, [x20, #32]
  e4:	ldr	x3, [x21, #40]
  e8:	str	x3, [x20, #40]
  ec:	stp	x2, x1, [sp, #104]
  f0:	str	x0, [sp, #120]
  f4:	mov	x0, x25
  f8:	stp	xzr, xzr, [x21, #24]
  fc:	str	xzr, [x21, #40]
 100:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 104:	b	a4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0xa4>
 108:	mov	x2, x22
 10c:	mov	x1, x24
 110:	mov	x0, x23
 114:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 118:	ldp	x19, x20, [sp, #16]
 11c:	ldp	x21, x22, [sp, #32]
 120:	ldp	x23, x24, [sp, #48]
 124:	ldp	x25, x26, [sp, #64]
 128:	ldp	x27, x28, [sp, #80]
 12c:	ldp	x29, x30, [sp], #128
 130:	ret
 134:	add	x26, x2, x27
 138:	mov	x1, x3
 13c:	mov	x2, x20
 140:	mov	x0, x26
 144:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 148:	sub	x21, x21, x25
 14c:	ldr	x2, [x19, #8]
 150:	mov	x0, #0x30                  	// #48
 154:	mov	x1, x20
 158:	madd	x2, x21, x0, x2
 15c:	mov	x0, x22
 160:	str	x2, [x19, #8]
 164:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 168:	ldr	x0, [x19, #8]
 16c:	mov	x2, x22
 170:	mov	x1, x26
 174:	add	x0, x0, x27
 178:	str	x0, [x19, #8]
 17c:	b	110 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x110>
 180:	mov	x1, x21
 184:	adrp	x2, 0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 188:	add	x2, x2, #0x0
 18c:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 190:	mov	x20, x0
 194:	cbz	x0, 1f8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x1f8>
 198:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 19c:	mov	x21, x0
 1a0:	ldr	x0, [x19]
 1a4:	mov	x1, x22
 1a8:	mov	x2, x21
 1ac:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 1b0:	mov	x2, x0
 1b4:	mov	x1, x24
 1b8:	mov	x0, x23
 1bc:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 1c0:	mov	x2, x0
 1c4:	ldr	x1, [x19, #8]
 1c8:	mov	x0, x22
 1cc:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 1d0:	mov	x22, x0
 1d4:	ldp	x0, x1, [x19]
 1d8:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 1dc:	ldr	x0, [x19]
 1e0:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 1e4:	stp	x21, x22, [x19]
 1e8:	mov	x0, #0x30                  	// #48
 1ec:	madd	x20, x20, x0, x21
 1f0:	str	x20, [x19, #16]
 1f4:	b	118 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x118>
 1f8:	mov	x21, #0x0                   	// #0
 1fc:	b	1a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x1a0>
 200:	ret

Interpreter.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>:
   0:	cbz	x0, 14 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0+0x14>
   4:	ldr	x1, [x0]
   8:	ldr	x1, [x1, #8]
   c:	mov	x16, x1
  10:	br	x16
  14:	ret

0000000000000018 <LLVMLinkInInterpreter>:
  18:	ret

000000000000001c <_ZN4llvm11Interpreter17runAtExitHandlersEv>:
  1c:	stp	x29, x30, [sp, #-32]!
  20:	mov	x29, sp
  24:	str	x19, [sp, #16]
  28:	mov	x19, x0
  2c:	ldr	x1, [x19, #720]
  30:	ldr	x0, [x19, #728]
  34:	cmp	x0, x1
  38:	b.eq	68 <_ZN4llvm11Interpreter17runAtExitHandlersEv+0x4c>  // b.none
  3c:	ldur	x1, [x0, #-8]
  40:	mov	x2, #0x0                   	// #0
  44:	mov	x0, x19
  48:	mov	x3, #0x0                   	// #0
  4c:	bl	0 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE>
  50:	ldr	x0, [x19, #728]
  54:	sub	x0, x0, #0x8
  58:	str	x0, [x19, #728]
  5c:	mov	x0, x19
  60:	bl	0 <_ZN4llvm11Interpreter3runEv>
  64:	b	2c <_ZN4llvm11Interpreter17runAtExitHandlersEv+0x10>
  68:	ldr	x19, [sp, #16]
  6c:	ldp	x29, x30, [sp], #32
  70:	ret

0000000000000074 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE>:
  74:	stp	x29, x30, [sp, #-32]!
  78:	mov	x29, sp
  7c:	stp	x19, x20, [sp, #16]
  80:	cbnz	x1, a4 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x30>
  84:	adrp	x3, 0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
  88:	adrp	x1, 0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
  8c:	adrp	x0, 0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
  90:	add	x3, x3, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x0, x0, #0x0
  9c:	mov	w2, #0x52                  	// #82
  a0:	bl	0 <__assert_fail>
  a4:	ldr	x4, [x1, #24]
  a8:	cbnz	x4, cc <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x58>
  ac:	adrp	x3, 0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
  b0:	adrp	x1, 0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
  b4:	adrp	x0, 0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
  b8:	add	x3, x3, #0x0
  bc:	add	x1, x1, #0x0
  c0:	add	x0, x0, #0x0
  c4:	mov	w2, #0x69                  	// #105
  c8:	b	a0 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x2c>
  cc:	ldrb	w5, [x4, #8]
  d0:	cmp	w5, #0xc
  d4:	b.eq	f8 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x84>  // b.none
  d8:	adrp	x3, 0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
  dc:	adrp	x1, 0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
  e0:	adrp	x0, 0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
  e4:	add	x3, x3, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x0, x0, #0x0
  f0:	mov	w2, #0x108                 	// #264
  f4:	b	a0 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x2c>
  f8:	ldr	w4, [x4, #12]
  fc:	mov	x19, x8
 100:	mov	x20, x0
 104:	sub	w4, w4, #0x1
 108:	cmp	x4, x3
 10c:	csel	x3, x4, x3, ls  // ls = plast
 110:	bl	0 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE>
 114:	mov	x0, x20
 118:	bl	0 <_ZN4llvm11Interpreter3runEv>
 11c:	add	x1, x20, #0x280
 120:	mov	x0, x19
 124:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 128:	mov	x0, x19
 12c:	ldp	x19, x20, [sp, #16]
 130:	ldp	x29, x30, [sp], #32
 134:	ret

0000000000000138 <_ZN4llvm11InterpreterC1ESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE>:
 138:	stp	x29, x30, [sp, #-48]!
 13c:	mov	x29, sp
 140:	ldr	x2, [x1]
 144:	stp	x19, x20, [sp, #16]
 148:	add	x20, sp, #0x28
 14c:	str	xzr, [x1]
 150:	mov	x1, x20
 154:	mov	x19, x0
 158:	str	x2, [sp, #40]
 15c:	bl	0 <_ZN4llvm15ExecutionEngineC2ESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE>
 160:	mov	x0, x20
 164:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 168:	adrp	x0, 0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 16c:	add	x1, x19, #0x2b8
 170:	ldr	x0, [x0]
 174:	add	x0, x0, #0x10
 178:	str	x0, [x19]
 17c:	add	x0, x19, #0x280
 180:	stp	xzr, xzr, [x0]
 184:	stp	xzr, xzr, [x0, #24]
 188:	mov	w0, #0x1                   	// #1
 18c:	str	xzr, [x19, #680]
 190:	stp	xzr, xzr, [x1]
 194:	stp	xzr, xzr, [x1, #16]
 198:	str	w0, [x19, #656]
 19c:	mov	x0, x19
 1a0:	str	xzr, [x19, #728]
 1a4:	str	xzr, [x19, #736]
 1a8:	bl	0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv>
 1ac:	mov	x0, x19
 1b0:	bl	0 <_ZN4llvm15ExecutionEngine11emitGlobalsEv>
 1b4:	mov	x0, #0x10                  	// #16
 1b8:	bl	0 <_Znwm>
 1bc:	add	x1, x19, #0x58
 1c0:	str	x1, [x0]
 1c4:	strb	wzr, [x0, #8]
 1c8:	str	x0, [x19, #688]
 1cc:	ldp	x19, x20, [sp, #16]
 1d0:	ldp	x29, x30, [sp], #48
 1d4:	ret

00000000000001d8 <_ZN4llvm11InterpreterD1Ev>:
 1d8:	stp	x29, x30, [sp, #-64]!
 1dc:	mov	x29, sp
 1e0:	stp	x19, x20, [sp, #16]
 1e4:	mov	x19, x0
 1e8:	adrp	x0, 0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 1ec:	stp	x21, x22, [sp, #32]
 1f0:	ldr	x0, [x0]
 1f4:	add	x0, x0, #0x10
 1f8:	str	x0, [x19]
 1fc:	ldr	x0, [x19, #688]
 200:	str	x23, [sp, #48]
 204:	cbz	x0, 210 <_ZN4llvm11InterpreterD1Ev+0x38>
 208:	mov	x1, #0x10                  	// #16
 20c:	bl	0 <_ZdlPvm>
 210:	ldr	x0, [x19, #720]
 214:	cbz	x0, 21c <_ZN4llvm11InterpreterD1Ev+0x44>
 218:	bl	0 <_ZdlPv>
 21c:	ldr	x20, [x19, #696]
 220:	ldr	x22, [x19, #704]
 224:	cmp	x22, x20
 228:	b.eq	26c <_ZN4llvm11InterpreterD1Ev+0x94>  // b.none
 22c:	ldp	x21, x23, [x20, #104]
 230:	cmp	x23, x21
 234:	b.eq	244 <_ZN4llvm11InterpreterD1Ev+0x6c>  // b.none
 238:	ldr	x0, [x21], #8
 23c:	bl	0 <free>
 240:	b	230 <_ZN4llvm11InterpreterD1Ev+0x58>
 244:	ldr	x0, [x20, #104]
 248:	cbz	x0, 250 <_ZN4llvm11InterpreterD1Ev+0x78>
 24c:	bl	0 <_ZdlPv>
 250:	add	x0, x20, #0x50
 254:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 258:	ldr	x1, [x20, #48]
 25c:	add	x0, x20, #0x20
 260:	add	x20, x20, #0x80
 264:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 268:	b	224 <_ZN4llvm11InterpreterD1Ev+0x4c>
 26c:	ldr	x0, [x19, #696]
 270:	cbz	x0, 278 <_ZN4llvm11InterpreterD1Ev+0xa0>
 274:	bl	0 <_ZdlPv>
 278:	add	x0, x19, #0x298
 27c:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 280:	add	x0, x19, #0x288
 284:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 288:	mov	x0, x19
 28c:	ldp	x19, x20, [sp, #16]
 290:	ldp	x21, x22, [sp, #32]
 294:	ldr	x23, [sp, #48]
 298:	ldp	x29, x30, [sp], #64
 29c:	b	0 <_ZN4llvm15ExecutionEngineD2Ev>

00000000000002a0 <_ZN4llvm11InterpreterD0Ev>:
 2a0:	stp	x29, x30, [sp, #-32]!
 2a4:	mov	x29, sp
 2a8:	str	x19, [sp, #16]
 2ac:	mov	x19, x0
 2b0:	bl	1d8 <_ZN4llvm11InterpreterD1Ev>
 2b4:	mov	x0, x19
 2b8:	mov	x1, #0x2e8                 	// #744
 2bc:	ldr	x19, [sp, #16]
 2c0:	ldp	x29, x30, [sp], #32
 2c4:	b	0 <_ZdlPvm>

00000000000002c8 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>:
 2c8:	stp	x29, x30, [sp, #-112]!
 2cc:	mov	x29, sp
 2d0:	stp	x19, x20, [sp, #16]
 2d4:	mov	x19, x0
 2d8:	add	x20, sp, #0x50
 2dc:	ldr	x0, [x0]
 2e0:	stp	x21, x22, [sp, #32]
 2e4:	mov	x21, x8
 2e8:	mov	x22, x1
 2ec:	str	x23, [sp, #48]
 2f0:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 2f4:	tst	w0, #0xff
 2f8:	ldr	x0, [x19]
 2fc:	str	xzr, [x19]
 300:	add	x23, sp, #0x48
 304:	b.eq	3a0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0xd8>  // b.none
 308:	str	x0, [sp, #72]
 30c:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 310:	tst	w0, #0xff
 314:	b.ne	338 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x70>  // b.any
 318:	adrp	x3, 0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 31c:	adrp	x1, 0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 320:	adrp	x0, 0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 324:	add	x3, x3, #0x0
 328:	add	x1, x1, #0x0
 32c:	add	x0, x0, #0x0
 330:	mov	w2, #0x329                 	// #809
 334:	bl	0 <__assert_fail>
 338:	ldr	x0, [sp, #72]
 33c:	mov	x8, x20
 340:	ldr	x19, [x22]
 344:	ldr	x1, [x0]
 348:	ldr	x1, [x1, #24]
 34c:	blr	x1
 350:	mov	x1, x20
 354:	mov	x0, x19
 358:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 35c:	mov	x0, x20
 360:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 364:	mov	x1, x20
 368:	mov	x0, #0x1                   	// #1
 36c:	str	x0, [sp, #80]
 370:	mov	x0, x21
 374:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 378:	mov	x0, x20
 37c:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 380:	mov	x0, x23
 384:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 388:	mov	x0, x21
 38c:	ldp	x19, x20, [sp, #16]
 390:	ldp	x21, x22, [sp, #32]
 394:	ldr	x23, [sp, #48]
 398:	ldp	x29, x30, [sp], #112
 39c:	ret
 3a0:	orr	x0, x0, #0x1
 3a4:	str	x0, [x21]
 3a8:	mov	x0, x20
 3ac:	stp	xzr, xzr, [sp, #72]
 3b0:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 3b4:	b	380 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0xb8>

00000000000003b8 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
 3b8:	stp	x29, x30, [sp, #-304]!
 3bc:	mov	x29, sp
 3c0:	stp	x19, x20, [sp, #16]
 3c4:	mov	x19, x0
 3c8:	add	x20, sp, #0x80
 3cc:	ldr	x0, [x0]
 3d0:	mov	x8, x20
 3d4:	stp	x21, x22, [sp, #32]
 3d8:	stp	x23, x24, [sp, #48]
 3dc:	stp	x25, x26, [sp, #64]
 3e0:	stp	x27, x28, [sp, #80]
 3e4:	str	x1, [sp, #104]
 3e8:	bl	0 <_ZN4llvm6Module14materializeAllEv>
 3ec:	mov	x0, x20
 3f0:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 3f4:	tst	w0, #0xff
 3f8:	b.eq	680 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c8>  // b.none
 3fc:	add	x21, sp, #0xc0
 400:	add	x24, sp, #0x90
 404:	add	x0, x21, #0x10
 408:	mov	x1, x20
 40c:	stp	x0, xzr, [sp, #192]
 410:	mov	x0, x24
 414:	add	x25, sp, #0x98
 418:	strb	wzr, [sp, #208]
 41c:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 420:	mov	x1, x24
 424:	mov	x0, x25
 428:	str	x21, [sp, #136]
 42c:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 430:	mov	x0, x25
 434:	add	x19, sp, #0xb8
 438:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 43c:	tst	w0, #0xff
 440:	b.ne	518 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x160>  // b.any
 444:	add	x23, sp, #0x100
 448:	mov	x0, #0x1                   	// #1
 44c:	mov	x1, x23
 450:	str	x0, [sp, #256]
 454:	mov	x0, x19
 458:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 45c:	mov	x0, x23
 460:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 464:	mov	x0, x19
 468:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 46c:	tst	w0, #0xff
 470:	b.eq	624 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x26c>  // b.none
 474:	add	x0, sp, #0xf0
 478:	stp	x0, xzr, [sp, #224]
 47c:	mov	w0, #0x1                   	// #1
 480:	str	w0, [sp, #288]
 484:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
 488:	add	x1, sp, #0xe0
 48c:	add	x19, sp, #0x100
 490:	ldr	x0, [x0]
 494:	strb	wzr, [sp, #240]
 498:	stp	xzr, xzr, [sp, #264]
 49c:	add	x0, x0, #0x10
 4a0:	str	x0, [sp, #256]
 4a4:	mov	x0, x19
 4a8:	str	xzr, [sp, #280]
 4ac:	str	x1, [sp, #296]
 4b0:	adrp	x1, 0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 4b4:	add	x1, x1, #0x0
 4b8:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 4bc:	adrp	x1, 0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 4c0:	add	x1, x1, #0x0
 4c4:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 4c8:	mov	x1, x0
 4cc:	ldr	x2, [sp, #184]
 4d0:	ands	x2, x2, #0xfffffffffffffffe
 4d4:	b.eq	614 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x25c>  // b.none
 4d8:	ldr	x0, [x2]
 4dc:	ldr	x3, [x0, #16]
 4e0:	mov	x0, x2
 4e4:	blr	x3
 4e8:	ldr	x0, [sp, #264]
 4ec:	ldr	x1, [sp, #280]
 4f0:	cmp	x1, x0
 4f4:	b.eq	500 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x148>  // b.none
 4f8:	mov	x0, x19
 4fc:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 500:	ldr	x0, [sp, #296]
 504:	adrp	x1, 0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 508:	mov	w2, #0x2c9                 	// #713
 50c:	add	x1, x1, #0x0
 510:	ldr	x0, [x0]
 514:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 518:	ldr	x0, [sp, #152]
 51c:	and	x0, x0, #0xfffffffffffffffe
 520:	stp	xzr, x0, [sp, #152]
 524:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 528:	tst	w0, #0xff
 52c:	ldr	x0, [sp, #160]
 530:	b.eq	5ec <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x234>  // b.none
 534:	add	x23, sp, #0xa8
 538:	add	x28, sp, #0xe0
 53c:	add	x27, sp, #0xb0
 540:	add	x26, sp, #0x100
 544:	mov	x1, #0x1                   	// #1
 548:	str	x1, [sp, #168]
 54c:	ldp	x22, x4, [x0, #8]
 550:	add	x0, sp, #0x88
 554:	str	x0, [sp, #112]
 558:	str	x4, [sp, #120]
 55c:	mov	x1, x23
 560:	cmp	x4, x22
 564:	b.eq	5d0 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x218>  // b.none
 568:	mov	x0, x28
 56c:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 570:	ldr	x1, [sp, #112]
 574:	mov	x8, x19
 578:	ldr	x0, [x22]
 57c:	str	xzr, [x22], #8
 580:	str	x0, [sp, #176]
 584:	mov	x0, x27
 588:	bl	2c8 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 58c:	mov	x8, x26
 590:	mov	x1, x19
 594:	mov	x0, x28
 598:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 59c:	mov	x1, x26
 5a0:	mov	x0, x23
 5a4:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 5a8:	mov	x0, x26
 5ac:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 5b0:	mov	x0, x19
 5b4:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 5b8:	mov	x0, x27
 5bc:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 5c0:	mov	x0, x28
 5c4:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 5c8:	ldr	x4, [sp, #120]
 5cc:	b	558 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1a0>
 5d0:	mov	x0, x19
 5d4:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 5d8:	mov	x0, x23
 5dc:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 5e0:	add	x0, sp, #0xa0
 5e4:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 5e8:	b	464 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xac>
 5ec:	mov	x8, x19
 5f0:	add	x1, sp, #0x88
 5f4:	add	x23, sp, #0x100
 5f8:	str	xzr, [sp, #160]
 5fc:	str	x0, [sp, #256]
 600:	mov	x0, x23
 604:	bl	2c8 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 608:	mov	x0, x23
 60c:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 610:	b	5e0 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x228>
 614:	adrp	x1, 0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 618:	add	x1, x1, #0x0
 61c:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 620:	b	4e8 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x130>
 624:	mov	x0, x19
 628:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 62c:	mov	x0, x25
 630:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 634:	mov	x0, x24
 638:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 63c:	ldr	x0, [sp, #104]
 640:	cbz	x0, 64c <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x294>
 644:	mov	x1, x21
 648:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
 64c:	mov	x19, #0x0                   	// #0
 650:	mov	x0, x21
 654:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 658:	mov	x0, x20
 65c:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 660:	mov	x0, x19
 664:	ldp	x19, x20, [sp, #16]
 668:	ldp	x21, x22, [sp, #32]
 66c:	ldp	x23, x24, [sp, #48]
 670:	ldp	x25, x26, [sp, #64]
 674:	ldp	x27, x28, [sp, #80]
 678:	ldp	x29, x30, [sp], #304
 67c:	ret
 680:	mov	x0, x20
 684:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 688:	ldr	x0, [x19]
 68c:	str	xzr, [x19]
 690:	add	x20, sp, #0x100
 694:	str	x0, [sp, #256]
 698:	mov	x0, #0x2e8                 	// #744
 69c:	bl	0 <_Znwm>
 6a0:	mov	x1, x20
 6a4:	mov	x19, x0
 6a8:	bl	138 <_ZN4llvm11InterpreterC1ESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE>
 6ac:	mov	x0, x20
 6b0:	bl	0 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>
 6b4:	b	660 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2a8>

Disassembly of section .text._ZN4llvm15ExecutionEngine21generateCodeForModuleEPNS_6ModuleE:

0000000000000000 <_ZN4llvm15ExecutionEngine21generateCodeForModuleEPNS_6ModuleE>:
   0:	ret

Disassembly of section .text._ZN4llvm15ExecutionEngine14finalizeObjectEv:

0000000000000000 <_ZN4llvm15ExecutionEngine14finalizeObjectEv>:
   0:	ret

Disassembly of section .text._ZN4llvm15ExecutionEngine26getPointerToFunctionOrStubEPNS_8FunctionE:

0000000000000000 <_ZN4llvm15ExecutionEngine26getPointerToFunctionOrStubEPNS_8FunctionE>:
   0:	ldr	x2, [x0]
   4:	ldr	x2, [x2, #128]
   8:	mov	x16, x2
   c:	br	x16

Disassembly of section .text._ZN4llvm15ExecutionEngine21getGlobalValueAddressERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:

0000000000000000 <_ZN4llvm15ExecutionEngine21getGlobalValueAddressERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm15ExecutionEngine18getFunctionAddressERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:

0000000000000000 <_ZN4llvm15ExecutionEngine18getFunctionAddressERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm15ExecutionEngine24RegisterJITEventListenerEPNS_16JITEventListenerE:

0000000000000000 <_ZN4llvm15ExecutionEngine24RegisterJITEventListenerEPNS_16JITEventListenerE>:
   0:	ret

Disassembly of section .text._ZN4llvm15ExecutionEngine26UnregisterJITEventListenerEPNS_16JITEventListenerE:

0000000000000000 <_ZN4llvm15ExecutionEngine26UnregisterJITEventListenerEPNS_16JITEventListenerE>:
   0:	ret

Disassembly of section .text._ZN4llvm15ExecutionEngine16getTargetMachineEv:

0000000000000000 <_ZN4llvm15ExecutionEngine16getTargetMachineEv>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm11Interpreter25getPointerToNamedFunctionENS_9StringRefEb:

0000000000000000 <_ZN4llvm11Interpreter25getPointerToNamedFunctionENS_9StringRefEb>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm11Interpreter20getPointerToFunctionEPNS_8FunctionE:

0000000000000000 <_ZN4llvm11Interpreter20getPointerToFunctionEPNS_8FunctionE>:
   0:	mov	x0, x1
   4:	ret

Disassembly of section .text._ZN4llvm15ExecutionEngine21setProcessAllSectionsEb:

0000000000000000 <_ZN4llvm15ExecutionEngine21setProcessAllSectionsEb>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	adrp	x1, 0 <_ZN4llvm15ExecutionEngine21setProcessAllSectionsEb>
   8:	adrp	x0, 0 <_ZN4llvm15ExecutionEngine21setProcessAllSectionsEb>
   c:	mov	x29, sp
  10:	add	x1, x1, #0x0
  14:	add	x0, x0, #0x0
  18:	mov	w2, #0x1af                 	// #431
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm15ExecutionEngine14setObjectCacheEPNS_11ObjectCacheE:

0000000000000000 <_ZN4llvm15ExecutionEngine14setObjectCacheEPNS_11ObjectCacheE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	adrp	x1, 0 <_ZN4llvm15ExecutionEngine14setObjectCacheEPNS_11ObjectCacheE>
   8:	adrp	x0, 0 <_ZN4llvm15ExecutionEngine14setObjectCacheEPNS_11ObjectCacheE>
   c:	mov	x29, sp
  10:	add	x1, x1, #0x0
  14:	add	x0, x0, #0x0
  18:	mov	w2, #0x1a0                 	// #416
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm15ExecutionEngine17mapSectionAddressEPKvm:

0000000000000000 <_ZN4llvm15ExecutionEngine17mapSectionAddressEPKvm>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	adrp	x1, 0 <_ZN4llvm15ExecutionEngine17mapSectionAddressEPKvm>
   8:	adrp	x0, 0 <_ZN4llvm15ExecutionEngine17mapSectionAddressEPKvm>
   c:	mov	x29, sp
  10:	add	x1, x1, #0x0
  14:	add	x0, x0, #0x0
  18:	mov	w2, #0xfa                  	// #250
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm15ExecutionEngine23getOrEmitGlobalVariableEPKNS_14GlobalVariableE:

0000000000000000 <_ZN4llvm15ExecutionEngine23getOrEmitGlobalVariableEPKNS_14GlobalVariableE>:
   0:	b	0 <_ZN4llvm15ExecutionEngine18getPointerToGlobalEPKNS_11GlobalValueE>

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	str	x21, [sp, #32]
  14:	mov	x21, x1
  18:	cbz	x1, 54 <_ZN4llvm11raw_ostreamlsEPKc+0x54>
  1c:	mov	x0, x1
  20:	bl	0 <strlen>
  24:	mov	x20, x0
  28:	ldp	x1, x0, [x19, #16]
  2c:	sub	x1, x1, x0
  30:	cmp	x1, x20
  34:	b.cs	5c <_ZN4llvm11raw_ostreamlsEPKc+0x5c>  // b.hs, b.nlast
  38:	mov	x2, x20
  3c:	mov	x1, x21
  40:	mov	x0, x19
  44:	ldp	x19, x20, [sp, #16]
  48:	ldr	x21, [sp, #32]
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  54:	mov	x20, #0x0                   	// #0
  58:	b	28 <_ZN4llvm11raw_ostreamlsEPKc+0x28>
  5c:	cbz	x20, 78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  60:	mov	x2, x20
  64:	mov	x1, x21
  68:	bl	0 <memcpy>
  6c:	ldr	x0, [x19, #24]
  70:	add	x0, x0, x20
  74:	str	x0, [x19, #24]
  78:	mov	x0, x19
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldr	x21, [sp, #32]
  84:	ldp	x29, x30, [sp], #48
  88:	ret

Disassembly of section .text._ZN4llvm5ErrorcvbEv:

0000000000000000 <_ZN4llvm5ErrorcvbEv>:
   0:	ldr	x1, [x0]
   4:	ands	x2, x1, #0xfffffffffffffffe
   8:	cset	x1, ne  // ne = any
   c:	orr	x1, x1, x2
  10:	str	x1, [x0]
  14:	tst	x1, #0xfffffffffffffffe
  18:	cset	w0, ne  // ne = any
  1c:	ret

Disassembly of section .text._ZN4llvm5Error15assertIsCheckedEv:

0000000000000000 <_ZN4llvm5Error15assertIsCheckedEv>:
   0:	ldr	x1, [x0]
   4:	tbnz	w1, #0, 10 <_ZN4llvm5Error15assertIsCheckedEv+0x10>
   8:	tst	x1, #0xfffffffffffffffe
   c:	b.eq	1c <_ZN4llvm5Error15assertIsCheckedEv+0x1c>  // b.none
  10:	stp	x29, x30, [sp, #-16]!
  14:	mov	x29, sp
  18:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
  1c:	ret

Disassembly of section .text._ZN4llvm5ErrorD2Ev:

0000000000000000 <_ZN4llvm5ErrorD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm5ErrorD1Ev>
  14:	ldr	x0, [x19]
  18:	ands	x0, x0, #0xfffffffffffffffe
  1c:	b.eq	38 <_ZN4llvm5ErrorD1Ev+0x38>  // b.none
  20:	ldr	x1, [x0]
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ldr	x1, [x1, #8]
  30:	mov	x16, x1
  34:	br	x16
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZN4llvm5ErroraSEOS0_:

0000000000000000 <_ZN4llvm5ErroraSEOS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	mov	x19, x0
  14:	bl	0 <_ZN4llvm5ErroraSEOS0_>
  18:	ldr	x0, [x20]
  1c:	orr	x0, x0, #0x1
  20:	str	x0, [x19]
  24:	str	xzr, [x20]
  28:	mov	x0, x19
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret

Disassembly of section .text._ZN4llvm5ErrorC2EOS0_:

0000000000000000 <_ZN4llvm5ErrorC1EOS0_>:
   0:	str	xzr, [x0]
   4:	b	0 <_ZN4llvm5ErrorC1EOS0_>

Disassembly of section .text._ZN4llvm5APIntD2Ev:

0000000000000000 <_ZN4llvm5APIntD1Ev>:
   0:	ldr	w1, [x0, #8]
   4:	cmp	w1, #0x40
   8:	b.ls	18 <_ZN4llvm5APIntD1Ev+0x18>  // b.plast
   c:	ldr	x0, [x0]
  10:	cbz	x0, 18 <_ZN4llvm5APIntD1Ev+0x18>
  14:	b	0 <_ZdaPv>
  18:	ret

Disassembly of section .text._ZN4llvm12GenericValueC2ERKS0_:

0000000000000000 <_ZN4llvm12GenericValueC1ERKS0_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x21, x1
  14:	mov	x22, x0
  18:	stp	x23, x24, [sp, #48]
  1c:	ldr	x2, [x1], #8
  20:	str	x2, [x0], #8
  24:	ldr	w2, [x1, #8]
  28:	str	w2, [x0, #8]
  2c:	cmp	w2, #0x40
  30:	b.hi	78 <_ZN4llvm12GenericValueC1ERKS0_+0x78>  // b.pmore
  34:	ldr	x0, [x21, #8]
  38:	str	x0, [x22, #8]
  3c:	ldp	x0, x19, [x21, #24]
  40:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  44:	movk	x1, #0xaaab
  48:	add	x23, x22, #0x18
  4c:	str	xzr, [x22, #24]
  50:	stp	xzr, xzr, [x23, #8]
  54:	sub	x19, x19, x0
  58:	asr	x0, x19, #4
  5c:	mul	x0, x0, x1
  60:	cbz	x0, c4 <_ZN4llvm12GenericValueC1ERKS0_+0xc4>
  64:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  68:	movk	x1, #0x2aa, lsl #48
  6c:	cmp	x0, x1
  70:	b.ls	80 <_ZN4llvm12GenericValueC1ERKS0_+0x80>  // b.plast
  74:	bl	0 <_ZSt17__throw_bad_allocv>
  78:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
  7c:	b	3c <_ZN4llvm12GenericValueC1ERKS0_+0x3c>
  80:	mov	x0, x19
  84:	bl	0 <_Znwm>
  88:	mov	x20, x0
  8c:	str	x20, [x22, #24]
  90:	add	x19, x20, x19
  94:	stp	x20, x19, [x23, #8]
  98:	mov	x22, x20
  9c:	ldp	x24, x19, [x21, #24]
  a0:	mov	x21, x24
  a4:	cmp	x19, x21
  a8:	b.eq	cc <_ZN4llvm12GenericValueC1ERKS0_+0xcc>  // b.none
  ac:	mov	x1, x21
  b0:	mov	x0, x22
  b4:	add	x21, x21, #0x30
  b8:	add	x22, x22, #0x30
  bc:	bl	0 <_ZN4llvm12GenericValueC1ERKS0_>
  c0:	b	a4 <_ZN4llvm12GenericValueC1ERKS0_+0xa4>
  c4:	mov	x20, #0x0                   	// #0
  c8:	b	8c <_ZN4llvm12GenericValueC1ERKS0_+0x8c>
  cc:	sub	x19, x19, x24
  d0:	mov	x0, #0xaaab                	// #43691
  d4:	movk	x0, #0xaaaa, lsl #16
  d8:	lsr	x19, x19, #4
  dc:	movk	x0, #0xaaaa, lsl #32
  e0:	movk	x0, #0xaaa, lsl #48
  e4:	ldp	x21, x22, [sp, #32]
  e8:	mul	x19, x19, x0
  ec:	mov	x0, #0x30                  	// #48
  f0:	and	x19, x19, #0xfffffffffffffff
  f4:	madd	x0, x19, x0, x20
  f8:	ldp	x19, x20, [sp, #16]
  fc:	str	x0, [x23, #8]
 100:	ldp	x23, x24, [sp, #48]
 104:	ldp	x29, x30, [sp], #64
 108:	ret

Disassembly of section .text._ZNSt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS1_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS1_EED1Ev>:
   0:	ldr	x0, [x0]
   4:	cbz	x0, c <_ZNSt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS1_EED1Ev+0xc>
   8:	b	0 <_ZNSt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS1_EED1Ev>
   c:	ret

Disassembly of section .text._ZNK4llvm13ErrorInfoBase3isAINS_9ErrorListEEEbv:

0000000000000000 <_ZNK4llvm13ErrorInfoBase3isAINS_9ErrorListEEEbv>:
   0:	ldr	x1, [x0]
   4:	ldr	x2, [x1, #48]
   8:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
   c:	ldr	x1, [x1]
  10:	mov	x16, x2
  14:	br	x16

Disassembly of section .text._ZNK4llvm5Error3isAINS_9ErrorListEEEbv:

0000000000000000 <_ZNK4llvm5Error3isAINS_9ErrorListEEEbv>:
   0:	ldr	x0, [x0]
   4:	ands	x0, x0, #0xfffffffffffffffe
   8:	b.eq	24 <_ZNK4llvm5Error3isAINS_9ErrorListEEEbv+0x24>  // b.none
   c:	ldr	x1, [x0]
  10:	ldr	x2, [x1, #48]
  14:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  18:	ldr	x1, [x1]
  1c:	mov	x16, x2
  20:	br	x16
  24:	mov	w0, #0x0                   	// #0
  28:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EED2Ev:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	x20, [x0]
  14:	str	x21, [sp, #32]
  18:	ldr	x21, [x0, #8]
  1c:	cmp	x21, x20
  20:	b.eq	3c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x3c>  // b.none
  24:	add	x0, x20, #0x18
  28:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev>
  2c:	add	x0, x20, #0x8
  30:	add	x20, x20, #0x30
  34:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev>
  38:	b	1c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x1c>
  3c:	ldr	x0, [x19]
  40:	cbz	x0, 54 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x54>
  44:	ldp	x19, x20, [sp, #16]
  48:	ldr	x21, [sp, #32]
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZdlPv>
  54:	ldp	x19, x20, [sp, #16]
  58:	ldr	x21, [sp, #32]
  5c:	ldp	x29, x30, [sp], #48
  60:	ret

Disassembly of section .text._ZNSt10unique_ptrIN4llvm6ModuleESt14default_deleteIS1_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIN4llvm6ModuleESt14default_deleteIS1_EED1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	ldr	x19, [x0]
  10:	cbz	x19, 30 <_ZNSt10unique_ptrIN4llvm6ModuleESt14default_deleteIS1_EED1Ev+0x30>
  14:	mov	x0, x19
  18:	bl	0 <_ZN4llvm6ModuleD1Ev>
  1c:	mov	x0, x19
  20:	mov	x1, #0x2c8                 	// #712
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	b	0 <_ZdlPvm>
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret

Disassembly of section .text._ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE:

0000000000000000 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	ldr	w2, [x0, #540]
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x20, x0
  14:	ldr	w0, [x0, #536]
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x19, x1
  20:	cmp	w0, w2
  24:	stp	x23, x24, [sp, #48]
  28:	b.cc	108 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x108>  // b.lo, b.ul, b.last
  2c:	mov	w2, w2
  30:	add	x1, sp, #0x48
  34:	add	x2, x2, #0x2
  38:	orr	x2, x2, x2, lsr #1
  3c:	orr	x2, x2, x2, lsr #2
  40:	orr	x2, x2, x2, lsr #4
  44:	orr	x2, x2, x2, lsr #8
  48:	orr	x0, x2, x2, lsr #16
  4c:	orr	x2, x0, x2, lsr #32
  50:	mov	x0, #0xffffffff            	// #4294967295
  54:	add	x2, x2, #0x1
  58:	stp	x2, x0, [sp, #64]
  5c:	cmp	x2, x0
  60:	add	x0, sp, #0x40
  64:	csel	x0, x0, x1, ls  // ls = plast
  68:	ldr	x23, [x0]
  6c:	lsl	x21, x23, #3
  70:	mov	x0, x21
  74:	bl	0 <malloc>
  78:	mov	x22, x0
  7c:	cbnz	x0, 94 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x94>
  80:	cbz	x21, c0 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0xc0>
  84:	adrp	x0, 0 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE>
  88:	mov	w1, #0x1                   	// #1
  8c:	add	x0, x0, #0x0
  90:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  94:	ldr	x1, [x20, #528]
  98:	mov	x2, x22
  9c:	ldr	w0, [x20, #536]
  a0:	lsl	x21, x0, #3
  a4:	add	x0, x1, x0, lsl #3
  a8:	cmp	x0, x1
  ac:	b.eq	c8 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0xc8>  // b.none
  b0:	ldr	x3, [x1]
  b4:	str	xzr, [x1], #8
  b8:	str	x3, [x2], #8
  bc:	b	a8 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0xa8>
  c0:	mov	x21, #0x1                   	// #1
  c4:	b	70 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x70>
  c8:	ldr	x24, [x20, #528]
  cc:	add	x21, x24, x21
  d0:	cmp	x24, x21
  d4:	b.eq	e8 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0xe8>  // b.none
  d8:	sub	x21, x21, #0x8
  dc:	mov	x0, x21
  e0:	bl	0 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE>
  e4:	b	d0 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0xd0>
  e8:	ldr	x0, [x20, #528]
  ec:	add	x1, x20, #0x220
  f0:	add	x21, x20, #0x200
  f4:	cmp	x0, x1
  f8:	b.eq	100 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x100>  // b.none
  fc:	bl	0 <free>
 100:	str	x22, [x21, #16]
 104:	str	w23, [x21, #28]
 108:	ldr	w0, [x20, #536]
 10c:	ldr	x2, [x20, #528]
 110:	mov	w1, w0
 114:	ldr	x3, [x19]
 118:	str	xzr, [x19]
 11c:	str	x3, [x2, w0, uxtw #3]
 120:	add	x1, x1, #0x1
 124:	ldr	w2, [x20, #540]
 128:	cmp	x1, x2
 12c:	b.ls	150 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x150>  // b.plast
 130:	adrp	x3, 0 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE>
 134:	adrp	x1, 0 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE>
 138:	adrp	x0, 0 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE>
 13c:	add	x3, x3, #0x0
 140:	add	x1, x1, #0x0
 144:	add	x0, x0, #0x0
 148:	mov	w2, #0x43                  	// #67
 14c:	bl	0 <__assert_fail>
 150:	add	w0, w0, #0x1
 154:	ldp	x21, x22, [sp, #32]
 158:	ldp	x23, x24, [sp, #48]
 15c:	str	w0, [x20, #536]
 160:	ldp	x19, x20, [sp, #16]
 164:	ldp	x29, x30, [sp], #80
 168:	ret

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	str	x21, [sp, #32]
  18:	cbz	x19, 4c <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x4c>
  1c:	ldr	x1, [x19, #24]
  20:	mov	x0, x20
  24:	bl	0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>
  28:	ldr	x21, [x19, #16]
  2c:	add	x0, x19, #0x40
  30:	bl	0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>
  34:	add	x0, x19, #0x30
  38:	bl	0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>
  3c:	mov	x0, x19
  40:	mov	x19, x21
  44:	bl	0 <_ZdlPv>
  48:	b	18 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x18>
  4c:	ldp	x19, x20, [sp, #16]
  50:	ldr	x21, [sp, #32]
  54:	ldp	x29, x30, [sp], #48
  58:	ret

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x25, x26, [sp, #64]
   c:	ldp	x26, x25, [x0]
  10:	stp	x19, x20, [sp, #16]
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x21, x2
  1c:	stp	x23, x24, [sp, #48]
  20:	mov	x23, x0
  24:	sub	x2, x25, x26
  28:	str	x27, [sp, #80]
  2c:	mov	x0, #0xfffffffffffffff     	// #1152921504606846975
  30:	cmp	x0, x2, asr #3
  34:	b.ne	44 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x44>  // b.any
  38:	adrp	x0, 0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  3c:	add	x0, x0, #0x0
  40:	bl	0 <_ZSt20__throw_length_errorPKc>
  44:	mov	x20, x1
  48:	asr	x1, x2, #3
  4c:	cmp	x1, #0x0
  50:	sub	x24, x20, x26
  54:	csinc	x19, x1, xzr, ne  // ne = any
  58:	adds	x19, x19, x1
  5c:	b.cs	12c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x12c>  // b.hs, b.nlast
  60:	mov	x22, #0x0                   	// #0
  64:	cbz	x19, 7c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x7c>
  68:	cmp	x19, x0
  6c:	csel	x19, x19, x0, ls  // ls = plast
  70:	lsl	x0, x19, #3
  74:	bl	0 <_Znwm>
  78:	mov	x22, x0
  7c:	ldr	x0, [x21]
  80:	str	x0, [x22, x24]
  84:	mov	x24, x22
  88:	str	xzr, [x21]
  8c:	mov	x21, x26
  90:	add	x24, x24, #0x8
  94:	cmp	x20, x21
  98:	b.ne	d4 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xd4>  // b.any
  9c:	sub	x24, x21, x26
  a0:	mov	x20, x21
  a4:	add	x24, x24, #0x8
  a8:	add	x24, x22, x24
  ac:	mov	x27, x24
  b0:	cmp	x20, x25
  b4:	b.eq	f0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xf0>  // b.none
  b8:	ldr	x0, [x20]
  bc:	str	xzr, [x20]
  c0:	str	x0, [x27], #8
  c4:	mov	x0, x20
  c8:	add	x20, x20, #0x8
  cc:	bl	0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  d0:	b	b0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xb0>
  d4:	ldr	x0, [x21]
  d8:	str	xzr, [x21]
  dc:	stur	x0, [x24, #-8]
  e0:	mov	x0, x21
  e4:	add	x21, x21, #0x8
  e8:	bl	0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  ec:	b	90 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x90>
  f0:	sub	x20, x20, x21
  f4:	add	x20, x24, x20
  f8:	cbz	x26, 104 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x104>
  fc:	mov	x0, x26
 100:	bl	0 <_ZdlPv>
 104:	add	x19, x22, x19, lsl #3
 108:	ldp	x25, x26, [sp, #64]
 10c:	ldr	x27, [sp, #80]
 110:	stp	x22, x20, [x23]
 114:	str	x19, [x23, #16]
 118:	ldp	x19, x20, [sp, #16]
 11c:	ldp	x21, x22, [sp, #32]
 120:	ldp	x23, x24, [sp, #48]
 124:	ldp	x29, x30, [sp], #96
 128:	ret
 12c:	mov	x19, x0
 130:	b	70 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x70>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_>:
   0:	mov	x2, x1
   4:	mov	x3, x0
   8:	ldp	x1, x4, [x0, #8]
   c:	cmp	x1, x4
  10:	b.eq	28 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_+0x28>  // b.none
  14:	ldr	x0, [x2]
  18:	str	xzr, [x2]
  1c:	str	x0, [x1], #8
  20:	str	x1, [x3, #8]
  24:	ret
  28:	b	0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_>

Disassembly of section .text._ZN4llvm9ErrorList4joinENS_5ErrorES1_:

0000000000000000 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x21, x8
  1c:	str	x23, [sp, #48]
  20:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
  24:	tst	w0, #0xff
  28:	b.ne	34 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x34>  // b.any
  2c:	mov	x1, x19
  30:	b	48 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x48>
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
  3c:	tst	w0, #0xff
  40:	b.ne	68 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x68>  // b.any
  44:	mov	x1, x20
  48:	mov	x0, x21
  4c:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
  50:	mov	x0, x21
  54:	ldp	x19, x20, [sp, #16]
  58:	ldp	x21, x22, [sp, #32]
  5c:	ldr	x23, [sp, #48]
  60:	ldp	x29, x30, [sp], #96
  64:	ret
  68:	mov	x0, x20
  6c:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
  70:	tst	w0, #0xff
  74:	b.eq	e8 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xe8>  // b.none
  78:	mov	x0, x19
  7c:	ldr	x22, [x20]
  80:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
  84:	ldr	x1, [x19]
  88:	and	x22, x22, #0xfffffffffffffffe
  8c:	tst	w0, #0xff
  90:	and	x1, x1, #0xfffffffffffffffe
  94:	str	x1, [sp, #88]
  98:	str	xzr, [x19]
  9c:	b.eq	d0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xd0>  // b.none
  a0:	ldp	x19, x23, [x1, #8]
  a4:	add	x22, x22, #0x8
  a8:	cmp	x23, x19
  ac:	b.eq	c4 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xc4>  // b.none
  b0:	mov	x1, x19
  b4:	mov	x0, x22
  b8:	add	x19, x19, #0x8
  bc:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
  c0:	b	a8 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xa8>
  c4:	add	x0, sp, #0x58
  c8:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
  cc:	b	44 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x44>
  d0:	add	x19, sp, #0x58
  d4:	add	x0, x22, #0x8
  d8:	mov	x1, x19
  dc:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
  e0:	mov	x0, x19
  e4:	b	c8 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xc8>
  e8:	mov	x0, x19
  ec:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
  f0:	tst	w0, #0xff
  f4:	ldr	x2, [x19]
  f8:	ldr	x3, [x20]
  fc:	b.eq	1b0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1b0>  // b.none
 100:	and	x2, x2, #0xfffffffffffffffe
 104:	and	x3, x3, #0xfffffffffffffffe
 108:	mov	x0, x2
 10c:	ldr	x22, [x0, #8]!
 110:	ldp	x4, x1, [x0, #8]
 114:	str	xzr, [x20]
 118:	str	x3, [sp, #88]
 11c:	cmp	x4, x1
 120:	b.eq	1a0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1a0>  // b.none
 124:	add	x1, x4, #0x8
 128:	cmp	x22, x4
 12c:	b.ne	148 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x148>  // b.any
 130:	str	xzr, [sp, #88]
 134:	str	x3, [x22]
 138:	str	x1, [x0, #8]
 13c:	add	x0, sp, #0x58
 140:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 144:	b	2c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x2c>
 148:	sub	x20, x4, #0x8
 14c:	sub	x23, x20, x22
 150:	ldur	x0, [x4, #-8]
 154:	asr	x23, x23, #3
 158:	stp	xzr, x0, [x4, #-8]
 15c:	str	x1, [x2, #16]
 160:	cmp	x23, #0x0
 164:	b.le	184 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x184>
 168:	ldr	x1, [x20, #-8]!
 16c:	ldr	x0, [x20, #8]
 170:	stp	xzr, x1, [x20]
 174:	cbz	x0, 17c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x17c>
 178:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 17c:	sub	x23, x23, #0x1
 180:	b	160 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x160>
 184:	ldr	x1, [sp, #88]
 188:	str	xzr, [sp, #88]
 18c:	ldr	x0, [x22]
 190:	str	x1, [x22]
 194:	cbz	x0, 13c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x13c>
 198:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 19c:	b	13c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x13c>
 1a0:	add	x2, sp, #0x58
 1a4:	mov	x1, x22
 1a8:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 1ac:	b	13c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x13c>
 1b0:	and	x3, x3, #0xfffffffffffffffe
 1b4:	and	x2, x2, #0xfffffffffffffffe
 1b8:	str	xzr, [x19]
 1bc:	mov	x0, #0x20                  	// #32
 1c0:	str	xzr, [x20]
 1c4:	stp	x3, x2, [sp, #72]
 1c8:	bl	0 <_Znwm>
 1cc:	mov	x20, x0
 1d0:	mov	x19, x0
 1d4:	adrp	x0, 0 <_ZTVN4llvm9ErrorListE>
 1d8:	ldr	x0, [x0]
 1dc:	add	x0, x0, #0x10
 1e0:	str	x0, [x20], #8
 1e4:	ldr	x0, [sp, #72]
 1e8:	str	xzr, [x19, #8]
 1ec:	stp	xzr, xzr, [x20, #8]
 1f0:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 1f4:	tst	w0, #0xff
 1f8:	b.eq	21c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x21c>  // b.none
 1fc:	adrp	x3, 0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 200:	adrp	x1, 0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 204:	adrp	x0, 0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 208:	add	x3, x3, #0x0
 20c:	add	x1, x1, #0x0
 210:	add	x0, x0, #0x0
 214:	mov	w2, #0x181                 	// #385
 218:	bl	0 <__assert_fail>
 21c:	ldr	x0, [sp, #80]
 220:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 224:	tst	w0, #0xff
 228:	b.ne	1fc <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1fc>  // b.any
 22c:	add	x22, sp, #0x48
 230:	mov	x0, x20
 234:	mov	x1, x22
 238:	add	x23, sp, #0x50
 23c:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 240:	orr	x19, x19, #0x1
 244:	mov	x1, x23
 248:	mov	x0, x20
 24c:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 250:	str	x19, [x21]
 254:	add	x0, sp, #0x58
 258:	str	xzr, [sp, #88]
 25c:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 260:	mov	x0, x23
 264:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 268:	mov	x0, x22
 26c:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 270:	b	50 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x50>

Disassembly of section .text._ZNK4llvm13ErrorInfoBase3isAIS0_EEbv:

0000000000000000 <_ZNK4llvm13ErrorInfoBase3isAIS0_EEbv>:
   0:	ldr	x1, [x0]
   4:	ldr	x2, [x1, #48]
   8:	adrp	x1, 0 <_ZN4llvm13ErrorInfoBase2IDE>
   c:	ldr	x1, [x1]
  10:	mov	x16, x2
  14:	br	x16

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_Interpreter.cpp>:
   0:	adrp	x0, 0 <_ZN4llvm15ExecutionEngine10InterpCtorB5cxx11E>
   4:	adrp	x1, 3b8 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
   8:	ldr	x0, [x0]
   c:	ldr	x1, [x1]
  10:	str	x1, [x0]
  14:	ret
