
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libgomp.so.1.0.0_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000008548 <.init>:
    8548:	stp	x29, x30, [sp, #-16]!
    854c:	mov	x29, sp
    8550:	bl	b224 <fprintf@plt+0x2764>
    8554:	ldp	x29, x30, [sp], #16
    8558:	ret

Disassembly of section .plt:

0000000000008560 <memcpy@plt-0x20>:
    8560:	stp	x16, x30, [sp, #-16]!
    8564:	adrp	x16, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    8568:	ldr	x17, [x16, #4088]
    856c:	add	x16, x16, #0xff8
    8570:	br	x17
    8574:	nop
    8578:	nop
    857c:	nop

0000000000008580 <memcpy@plt>:
    8580:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8584:	ldr	x17, [x16]
    8588:	add	x16, x16, #0x0
    858c:	br	x17

0000000000008590 <memmove@plt>:
    8590:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8594:	ldr	x17, [x16, #8]
    8598:	add	x16, x16, #0x8
    859c:	br	x17

00000000000085a0 <strtoul@plt>:
    85a0:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    85a4:	ldr	x17, [x16, #16]
    85a8:	add	x16, x16, #0x10
    85ac:	br	x17

00000000000085b0 <strlen@plt>:
    85b0:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    85b4:	ldr	x17, [x16, #24]
    85b8:	add	x16, x16, #0x18
    85bc:	br	x17

00000000000085c0 <exit@plt>:
    85c0:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    85c4:	ldr	x17, [x16, #32]
    85c8:	add	x16, x16, #0x20
    85cc:	br	x17

00000000000085d0 <acc_wait_all@plt>:
    85d0:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    85d4:	ldr	x17, [x16, #40]
    85d8:	add	x16, x16, #0x28
    85dc:	br	x17

00000000000085e0 <secure_getenv@plt>:
    85e0:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    85e4:	ldr	x17, [x16, #48]
    85e8:	add	x16, x16, #0x30
    85ec:	br	x17

00000000000085f0 <pthread_key_create@plt>:
    85f0:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    85f4:	ldr	x17, [x16, #56]
    85f8:	add	x16, x16, #0x38
    85fc:	br	x17

0000000000008600 <acc_copyout_finalize@plt>:
    8600:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8604:	ldr	x17, [x16, #64]
    8608:	add	x16, x16, #0x40
    860c:	br	x17

0000000000008610 <__cxa_finalize@plt>:
    8610:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8614:	ldr	x17, [x16, #72]
    8618:	add	x16, x16, #0x48
    861c:	br	x17

0000000000008620 <sprintf@plt>:
    8620:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8624:	ldr	x17, [x16, #80]
    8628:	add	x16, x16, #0x50
    862c:	br	x17

0000000000008630 <getloadavg@plt>:
    8630:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8634:	ldr	x17, [x16, #88]
    8638:	add	x16, x16, #0x58
    863c:	br	x17

0000000000008640 <__cxa_atexit@plt>:
    8640:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8644:	ldr	x17, [x16, #96]
    8648:	add	x16, x16, #0x60
    864c:	br	x17

0000000000008650 <pthread_attr_init@plt>:
    8650:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8654:	ldr	x17, [x16, #104]
    8658:	add	x16, x16, #0x68
    865c:	br	x17

0000000000008660 <fputc@plt>:
    8660:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8664:	ldr	x17, [x16, #112]
    8668:	add	x16, x16, #0x70
    866c:	br	x17

0000000000008670 <clock_gettime@plt>:
    8670:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8674:	ldr	x17, [x16, #120]
    8678:	add	x16, x16, #0x78
    867c:	br	x17

0000000000008680 <acc_copyin@plt>:
    8680:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8684:	ldr	x17, [x16, #128]
    8688:	add	x16, x16, #0x80
    868c:	br	x17

0000000000008690 <acc_delete_finalize@plt>:
    8690:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8694:	ldr	x17, [x16, #136]
    8698:	add	x16, x16, #0x88
    869c:	br	x17

00000000000086a0 <__ctype_tolower_loc@plt>:
    86a0:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    86a4:	ldr	x17, [x16, #144]
    86a8:	add	x16, x16, #0x90
    86ac:	br	x17

00000000000086b0 <acc_create@plt>:
    86b0:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    86b4:	ldr	x17, [x16, #152]
    86b8:	add	x16, x16, #0x98
    86bc:	br	x17

00000000000086c0 <acc_unmap_data@plt>:
    86c0:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    86c4:	ldr	x17, [x16, #160]
    86c8:	add	x16, x16, #0xa0
    86cc:	br	x17

00000000000086d0 <acc_wait_async@plt>:
    86d0:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    86d4:	ldr	x17, [x16, #168]
    86d8:	add	x16, x16, #0xa8
    86dc:	br	x17

00000000000086e0 <fclose@plt>:
    86e0:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    86e4:	ldr	x17, [x16, #176]
    86e8:	add	x16, x16, #0xb0
    86ec:	br	x17

00000000000086f0 <getpid@plt>:
    86f0:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    86f4:	ldr	x17, [x16, #184]
    86f8:	add	x16, x16, #0xb8
    86fc:	br	x17

0000000000008700 <fopen@plt>:
    8700:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8704:	ldr	x17, [x16, #192]
    8708:	add	x16, x16, #0xc0
    870c:	br	x17

0000000000008710 <malloc@plt>:
    8710:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8714:	ldr	x17, [x16, #200]
    8718:	add	x16, x16, #0xc8
    871c:	br	x17

0000000000008720 <acc_async_test@plt>:
    8720:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8724:	ldr	x17, [x16, #208]
    8728:	add	x16, x16, #0xd0
    872c:	br	x17

0000000000008730 <pthread_attr_destroy@plt>:
    8730:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8734:	ldr	x17, [x16, #216]
    8738:	add	x16, x16, #0xd8
    873c:	br	x17

0000000000008740 <strncmp@plt>:
    8740:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8744:	ldr	x17, [x16, #224]
    8748:	add	x16, x16, #0xe0
    874c:	br	x17

0000000000008750 <aligned_alloc@plt>:
    8750:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8754:	ldr	x17, [x16, #232]
    8758:	add	x16, x16, #0xe8
    875c:	br	x17

0000000000008760 <pthread_detach@plt>:
    8760:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8764:	ldr	x17, [x16, #240]
    8768:	add	x16, x16, #0xf0
    876c:	br	x17

0000000000008770 <memset@plt>:
    8770:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8774:	ldr	x17, [x16, #248]
    8778:	add	x16, x16, #0xf8
    877c:	br	x17

0000000000008780 <pthread_attr_setstacksize@plt>:
    8780:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8784:	ldr	x17, [x16, #256]
    8788:	add	x16, x16, #0x100
    878c:	br	x17

0000000000008790 <calloc@plt>:
    8790:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8794:	ldr	x17, [x16, #264]
    8798:	add	x16, x16, #0x108
    879c:	br	x17

00000000000087a0 <acc_is_present@plt>:
    87a0:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    87a4:	ldr	x17, [x16, #272]
    87a8:	add	x16, x16, #0x110
    87ac:	br	x17

00000000000087b0 <strcasecmp@plt>:
    87b0:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    87b4:	ldr	x17, [x16, #280]
    87b8:	add	x16, x16, #0x118
    87bc:	br	x17

00000000000087c0 <realloc@plt>:
    87c0:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    87c4:	ldr	x17, [x16, #288]
    87c8:	add	x16, x16, #0x120
    87cc:	br	x17

00000000000087d0 <strdup@plt>:
    87d0:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    87d4:	ldr	x17, [x16, #296]
    87d8:	add	x16, x16, #0x128
    87dc:	br	x17

00000000000087e0 <strerror@plt>:
    87e0:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    87e4:	ldr	x17, [x16, #304]
    87e8:	add	x16, x16, #0x130
    87ec:	br	x17

00000000000087f0 <pthread_create@plt>:
    87f0:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    87f4:	ldr	x17, [x16, #312]
    87f8:	add	x16, x16, #0x138
    87fc:	br	x17

0000000000008800 <__gmon_start__@plt>:
    8800:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8804:	ldr	x17, [x16, #320]
    8808:	add	x16, x16, #0x140
    880c:	br	x17

0000000000008810 <pthread_join@plt>:
    8810:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8814:	ldr	x17, [x16, #328]
    8818:	add	x16, x16, #0x148
    881c:	br	x17

0000000000008820 <abort@plt>:
    8820:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8824:	ldr	x17, [x16, #336]
    8828:	add	x16, x16, #0x150
    882c:	br	x17

0000000000008830 <pthread_exit@plt>:
    8830:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8834:	ldr	x17, [x16, #344]
    8838:	add	x16, x16, #0x158
    883c:	br	x17

0000000000008840 <memcmp@plt>:
    8840:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8844:	ldr	x17, [x16, #352]
    8848:	add	x16, x16, #0x160
    884c:	br	x17

0000000000008850 <strcmp@plt>:
    8850:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8854:	ldr	x17, [x16, #360]
    8858:	add	x16, x16, #0x168
    885c:	br	x17

0000000000008860 <__ctype_b_loc@plt>:
    8860:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8864:	ldr	x17, [x16, #368]
    8868:	add	x16, x16, #0x170
    886c:	br	x17

0000000000008870 <strtol@plt>:
    8870:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8874:	ldr	x17, [x16, #376]
    8878:	add	x16, x16, #0x178
    887c:	br	x17

0000000000008880 <acc_wait_all_async@plt>:
    8880:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8884:	ldr	x17, [x16, #384]
    8888:	add	x16, x16, #0x180
    888c:	br	x17

0000000000008890 <acc_deviceptr@plt>:
    8890:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8894:	ldr	x17, [x16, #392]
    8898:	add	x16, x16, #0x188
    889c:	br	x17

00000000000088a0 <clock_getres@plt>:
    88a0:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    88a4:	ldr	x17, [x16, #400]
    88a8:	add	x16, x16, #0x190
    88ac:	br	x17

00000000000088b0 <free@plt>:
    88b0:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    88b4:	ldr	x17, [x16, #408]
    88b8:	add	x16, x16, #0x198
    88bc:	br	x17

00000000000088c0 <acc_delete@plt>:
    88c0:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    88c4:	ldr	x17, [x16, #416]
    88c8:	add	x16, x16, #0x1a0
    88cc:	br	x17

00000000000088d0 <GOMP_offload_unregister_ver@plt>:
    88d0:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    88d4:	ldr	x17, [x16, #424]
    88d8:	add	x16, x16, #0x1a8
    88dc:	br	x17

00000000000088e0 <pthread_key_delete@plt>:
    88e0:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    88e4:	ldr	x17, [x16, #432]
    88e8:	add	x16, x16, #0x1b0
    88ec:	br	x17

00000000000088f0 <strncasecmp@plt>:
    88f0:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    88f4:	ldr	x17, [x16, #440]
    88f8:	add	x16, x16, #0x1b8
    88fc:	br	x17

0000000000008900 <pthread_once@plt>:
    8900:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8904:	ldr	x17, [x16, #448]
    8908:	add	x16, x16, #0x1c0
    890c:	br	x17

0000000000008910 <pthread_getaffinity_np@plt>:
    8910:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8914:	ldr	x17, [x16, #456]
    8918:	add	x16, x16, #0x1c8
    891c:	br	x17

0000000000008920 <acc_init@plt>:
    8920:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8924:	ldr	x17, [x16, #464]
    8928:	add	x16, x16, #0x1d0
    892c:	br	x17

0000000000008930 <acc_copyout@plt>:
    8930:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8934:	ldr	x17, [x16, #472]
    8938:	add	x16, x16, #0x1d8
    893c:	br	x17

0000000000008940 <acc_wait@plt>:
    8940:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8944:	ldr	x17, [x16, #480]
    8948:	add	x16, x16, #0x1e0
    894c:	br	x17

0000000000008950 <strchr@plt>:
    8950:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8954:	ldr	x17, [x16, #488]
    8958:	add	x16, x16, #0x1e8
    895c:	br	x17

0000000000008960 <pthread_setspecific@plt>:
    8960:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8964:	ldr	x17, [x16, #496]
    8968:	add	x16, x16, #0x1f0
    896c:	br	x17

0000000000008970 <strtoull@plt>:
    8970:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8974:	ldr	x17, [x16, #504]
    8978:	add	x16, x16, #0x1f8
    897c:	br	x17

0000000000008980 <fwrite@plt>:
    8980:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8984:	ldr	x17, [x16, #512]
    8988:	add	x16, x16, #0x200
    898c:	br	x17

0000000000008990 <__sched_cpucount@plt>:
    8990:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8994:	ldr	x17, [x16, #520]
    8998:	add	x16, x16, #0x208
    899c:	br	x17

00000000000089a0 <acc_update_self@plt>:
    89a0:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    89a4:	ldr	x17, [x16, #528]
    89a8:	add	x16, x16, #0x210
    89ac:	br	x17

00000000000089b0 <pthread_attr_getstacksize@plt>:
    89b0:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    89b4:	ldr	x17, [x16, #536]
    89b8:	add	x16, x16, #0x218
    89bc:	br	x17

00000000000089c0 <GOMP_offload_register_ver@plt>:
    89c0:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    89c4:	ldr	x17, [x16, #544]
    89c8:	add	x16, x16, #0x220
    89cc:	br	x17

00000000000089d0 <GOACC_enter_exit_data@plt>:
    89d0:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    89d4:	ldr	x17, [x16, #552]
    89d8:	add	x16, x16, #0x228
    89dc:	br	x17

00000000000089e0 <sysconf@plt>:
    89e0:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    89e4:	ldr	x17, [x16, #560]
    89e8:	add	x16, x16, #0x230
    89ec:	br	x17

00000000000089f0 <gethostname@plt>:
    89f0:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    89f4:	ldr	x17, [x16, #568]
    89f8:	add	x16, x16, #0x238
    89fc:	br	x17

0000000000008a00 <omp_get_team_num@plt>:
    8a00:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8a04:	ldr	x17, [x16, #576]
    8a08:	add	x16, x16, #0x240
    8a0c:	br	x17

0000000000008a10 <pthread_attr_setaffinity_np@plt>:
    8a10:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8a14:	ldr	x17, [x16, #584]
    8a18:	add	x16, x16, #0x248
    8a1c:	br	x17

0000000000008a20 <pthread_setaffinity_np@plt>:
    8a20:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8a24:	ldr	x17, [x16, #592]
    8a28:	add	x16, x16, #0x250
    8a2c:	br	x17

0000000000008a30 <omp_get_num_teams@plt>:
    8a30:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8a34:	ldr	x17, [x16, #600]
    8a38:	add	x16, x16, #0x258
    8a3c:	br	x17

0000000000008a40 <pthread_self@plt>:
    8a40:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8a44:	ldr	x17, [x16, #608]
    8a48:	add	x16, x16, #0x260
    8a4c:	br	x17

0000000000008a50 <vfprintf@plt>:
    8a50:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8a54:	ldr	x17, [x16, #616]
    8a58:	add	x16, x16, #0x268
    8a5c:	br	x17

0000000000008a60 <__assert_fail@plt>:
    8a60:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8a64:	ldr	x17, [x16, #624]
    8a68:	add	x16, x16, #0x270
    8a6c:	br	x17

0000000000008a70 <__errno_location@plt>:
    8a70:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8a74:	ldr	x17, [x16, #632]
    8a78:	add	x16, x16, #0x278
    8a7c:	br	x17

0000000000008a80 <getenv@plt>:
    8a80:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8a84:	ldr	x17, [x16, #640]
    8a88:	add	x16, x16, #0x280
    8a8c:	br	x17

0000000000008a90 <syscall@plt>:
    8a90:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8a94:	ldr	x17, [x16, #648]
    8a98:	add	x16, x16, #0x288
    8a9c:	br	x17

0000000000008aa0 <__getdelim@plt>:
    8aa0:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8aa4:	ldr	x17, [x16, #656]
    8aa8:	add	x16, x16, #0x290
    8aac:	br	x17

0000000000008ab0 <acc_update_device@plt>:
    8ab0:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8ab4:	ldr	x17, [x16, #664]
    8ab8:	add	x16, x16, #0x298
    8abc:	br	x17

0000000000008ac0 <fprintf@plt>:
    8ac0:	adrp	x16, 46000 <memcpy@GLIBC_2.17>
    8ac4:	ldr	x17, [x16, #672]
    8ac8:	add	x16, x16, #0x2a0
    8acc:	br	x17

Disassembly of section .text:

0000000000008ad0 <GOMP_atomic_start@@GOMP_1.0-0x2920>:
    8ad0:	sub	sp, sp, #0x250
    8ad4:	mov	x4, x1
    8ad8:	mov	x3, x0
    8adc:	stp	x29, x30, [sp]
    8ae0:	mov	x29, sp
    8ae4:	stp	x23, x24, [sp, #48]
    8ae8:	adrp	x24, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    8aec:	mov	x23, x1
    8af0:	stp	x25, x26, [sp, #64]
    8af4:	mov	w25, w2
    8af8:	add	x26, sp, #0x50
    8afc:	ldr	x2, [x24, #816]
    8b00:	mov	w5, w25
    8b04:	mov	x1, #0x200                 	// #512
    8b08:	stp	x19, x20, [sp, #16]
    8b0c:	adrp	x19, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    8b10:	stp	x21, x22, [sp, #32]
    8b14:	mov	x21, x0
    8b18:	mov	x0, x26
    8b1c:	bl	2c178 <omp_get_affinity_format@@OMP_5.0+0x110>
    8b20:	mov	x20, x0
    8b24:	cmp	x0, #0x1ff
    8b28:	add	x22, x0, #0x1
    8b2c:	b.hi	8b6c <fprintf@plt+0xac>  // b.pmore
    8b30:	ldr	x19, [x19, #4040]
    8b34:	mov	w3, #0xa                   	// #10
    8b38:	strb	w3, [x26, x20]
    8b3c:	mov	x2, x22
    8b40:	mov	x0, x26
    8b44:	mov	x1, #0x1                   	// #1
    8b48:	ldr	x3, [x19]
    8b4c:	bl	8980 <fwrite@plt>
    8b50:	ldp	x29, x30, [sp]
    8b54:	ldp	x19, x20, [sp, #16]
    8b58:	ldp	x21, x22, [sp, #32]
    8b5c:	ldp	x23, x24, [sp, #48]
    8b60:	ldp	x25, x26, [sp, #64]
    8b64:	add	sp, sp, #0x250
    8b68:	ret
    8b6c:	mov	x0, x22
    8b70:	bl	b2f8 <fprintf@plt+0x2838>
    8b74:	ldr	x2, [x24, #816]
    8b78:	mov	w5, w25
    8b7c:	mov	x4, x23
    8b80:	mov	x3, x21
    8b84:	mov	x1, x22
    8b88:	mov	x21, x0
    8b8c:	bl	2c178 <omp_get_affinity_format@@OMP_5.0+0x110>
    8b90:	ldr	x19, [x19, #4040]
    8b94:	mov	w3, #0xa                   	// #10
    8b98:	strb	w3, [x21, x20]
    8b9c:	mov	x2, x22
    8ba0:	mov	x0, x21
    8ba4:	mov	x1, #0x1                   	// #1
    8ba8:	ldr	x3, [x19]
    8bac:	bl	8980 <fwrite@plt>
    8bb0:	mov	x0, x21
    8bb4:	ldp	x29, x30, [sp]
    8bb8:	ldp	x19, x20, [sp, #16]
    8bbc:	ldp	x21, x22, [sp, #32]
    8bc0:	ldp	x23, x24, [sp, #48]
    8bc4:	ldp	x25, x26, [sp, #64]
    8bc8:	add	sp, sp, #0x250
    8bcc:	b	88b0 <free@plt>
    8bd0:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    8bd4:	ldr	w0, [x0, #1712]
    8bd8:	b	88e0 <pthread_key_delete@plt>
    8bdc:	nop
    8be0:	stp	x29, x30, [sp, #-48]!
    8be4:	mov	x29, sp
    8be8:	stp	x21, x22, [sp, #32]
    8bec:	mov	x22, x1
    8bf0:	mov	x21, x0
    8bf4:	bl	8a80 <getenv@plt>
    8bf8:	cbz	x0, 8c88 <fprintf@plt+0x1c8>
    8bfc:	stp	x19, x20, [sp, #16]
    8c00:	mov	x19, x0
    8c04:	bl	8860 <__ctype_b_loc@plt>
    8c08:	ldr	x20, [x0]
    8c0c:	ldrb	w1, [x19]
    8c10:	ldrh	w0, [x20, x1, lsl #1]
    8c14:	tbz	w0, #13, 8c24 <fprintf@plt+0x164>
    8c18:	ldrb	w0, [x19, #1]!
    8c1c:	ldrh	w2, [x20, x0, lsl #1]
    8c20:	tbnz	w2, #13, 8c18 <fprintf@plt+0x158>
    8c24:	adrp	x1, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    8c28:	mov	x0, x19
    8c2c:	add	x1, x1, #0xd30
    8c30:	mov	x2, #0x4                   	// #4
    8c34:	bl	88f0 <strncasecmp@plt>
    8c38:	cbz	w0, 8c94 <fprintf@plt+0x1d4>
    8c3c:	adrp	x1, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    8c40:	mov	x0, x19
    8c44:	add	x1, x1, #0xd38
    8c48:	mov	x2, #0x5                   	// #5
    8c4c:	bl	88f0 <strncasecmp@plt>
    8c50:	cbnz	w0, 8cc0 <fprintf@plt+0x200>
    8c54:	add	x19, x19, #0x5
    8c58:	strb	wzr, [x22]
    8c5c:	ldrb	w1, [x19]
    8c60:	ubfiz	x0, x1, #1, #8
    8c64:	ldrh	w0, [x20, x0]
    8c68:	tbz	w0, #13, 8c80 <fprintf@plt+0x1c0>
    8c6c:	nop
    8c70:	ldrb	w1, [x19, #1]!
    8c74:	ubfiz	x2, x1, #1, #8
    8c78:	ldrh	w2, [x20, x2]
    8c7c:	tbnz	w2, #13, 8c70 <fprintf@plt+0x1b0>
    8c80:	cbnz	w1, 8ca4 <fprintf@plt+0x1e4>
    8c84:	ldp	x19, x20, [sp, #16]
    8c88:	ldp	x21, x22, [sp, #32]
    8c8c:	ldp	x29, x30, [sp], #48
    8c90:	ret
    8c94:	mov	w0, #0x1                   	// #1
    8c98:	add	x19, x19, #0x4
    8c9c:	strb	w0, [x22]
    8ca0:	b	8c5c <fprintf@plt+0x19c>
    8ca4:	mov	x1, x21
    8ca8:	adrp	x0, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    8cac:	ldp	x19, x20, [sp, #16]
    8cb0:	add	x0, x0, #0xd40
    8cb4:	ldp	x21, x22, [sp, #32]
    8cb8:	ldp	x29, x30, [sp], #48
    8cbc:	b	b670 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    8cc0:	adrp	x19, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    8cc4:	add	x19, x19, #0xd28
    8cc8:	b	8c5c <fprintf@plt+0x19c>
    8ccc:	nop
    8cd0:	stp	x29, x30, [sp, #-80]!
    8cd4:	tst	w3, #0xff
    8cd8:	mov	x29, sp
    8cdc:	stp	x19, x20, [sp, #16]
    8ce0:	mov	x20, x0
    8ce4:	stp	x21, x22, [sp, #32]
    8ce8:	mov	x21, x1
    8cec:	and	w22, w2, #0xff
    8cf0:	b.eq	8d5c <fprintf@plt+0x29c>  // b.none
    8cf4:	bl	85e0 <secure_getenv@plt>
    8cf8:	mov	x19, x0
    8cfc:	cbz	x19, 8d68 <fprintf@plt+0x2a8>
    8d00:	stp	x23, x24, [sp, #48]
    8d04:	bl	8860 <__ctype_b_loc@plt>
    8d08:	mov	x23, x0
    8d0c:	ldrb	w2, [x19]
    8d10:	ldr	x4, [x23]
    8d14:	ubfiz	x0, x2, #1, #8
    8d18:	ldrh	w0, [x4, x0]
    8d1c:	tbz	w0, #13, 8d30 <fprintf@plt+0x270>
    8d20:	ldrb	w2, [x19, #1]!
    8d24:	ubfiz	x3, x2, #1, #8
    8d28:	ldrh	w3, [x4, x3]
    8d2c:	tbnz	w3, #13, 8d20 <fprintf@plt+0x260>
    8d30:	cbnz	w2, 8d70 <fprintf@plt+0x2b0>
    8d34:	mov	x1, x20
    8d38:	adrp	x0, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    8d3c:	add	x0, x0, #0xd40
    8d40:	bl	b670 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    8d44:	ldp	x23, x24, [sp, #48]
    8d48:	mov	w0, #0x0                   	// #0
    8d4c:	ldp	x19, x20, [sp, #16]
    8d50:	ldp	x21, x22, [sp, #32]
    8d54:	ldp	x29, x30, [sp], #80
    8d58:	ret
    8d5c:	bl	8a80 <getenv@plt>
    8d60:	mov	x19, x0
    8d64:	cbnz	x19, 8d00 <fprintf@plt+0x240>
    8d68:	mov	w0, #0x0                   	// #0
    8d6c:	b	8d4c <fprintf@plt+0x28c>
    8d70:	bl	8a70 <__errno_location@plt>
    8d74:	mov	x24, x0
    8d78:	add	x1, sp, #0x48
    8d7c:	mov	x0, x19
    8d80:	mov	w2, #0xa                   	// #10
    8d84:	str	wzr, [x24]
    8d88:	bl	85a0 <strtoul@plt>
    8d8c:	mov	x5, x0
    8d90:	ldr	w1, [x24]
    8d94:	cbnz	w1, 8d34 <fprintf@plt+0x274>
    8d98:	neg	w22, w22
    8d9c:	cmp	x0, w22, sxtw
    8da0:	b.le	8d34 <fprintf@plt+0x274>
    8da4:	ldr	x2, [sp, #72]
    8da8:	ldr	x4, [x23]
    8dac:	ldrb	w0, [x2]
    8db0:	ldrb	w1, [x2]
    8db4:	ldrh	w0, [x4, x0, lsl #1]
    8db8:	tbz	w0, #13, 8dd4 <fprintf@plt+0x314>
    8dbc:	add	x2, x2, #0x1
    8dc0:	str	x2, [sp, #72]
    8dc4:	ldrb	w1, [x2], #1
    8dc8:	ubfiz	x3, x1, #1, #8
    8dcc:	ldrh	w3, [x4, x3]
    8dd0:	tbnz	w3, #13, 8dc0 <fprintf@plt+0x300>
    8dd4:	cbnz	w1, 8d34 <fprintf@plt+0x274>
    8dd8:	mov	w0, #0x1                   	// #1
    8ddc:	ldp	x23, x24, [sp, #48]
    8de0:	str	x5, [x21]
    8de4:	b	8d4c <fprintf@plt+0x28c>
    8de8:	stp	x29, x30, [sp, #-160]!
    8dec:	mov	x29, sp
    8df0:	stp	x21, x22, [sp, #32]
    8df4:	adrp	x22, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    8df8:	stp	x25, x26, [sp, #64]
    8dfc:	ldr	x25, [x22, #1584]
    8e00:	stp	x19, x20, [sp, #16]
    8e04:	ldr	x20, [x0]
    8e08:	str	x1, [sp, #96]
    8e0c:	stp	x0, x2, [sp, #112]
    8e10:	str	x3, [sp, #128]
    8e14:	str	x20, [sp, #152]
    8e18:	cbz	x25, 8e28 <fprintf@plt+0x368>
    8e1c:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    8e20:	ldr	x0, [x0, #1624]
    8e24:	ldr	x25, [x25, x0, lsl #3]
    8e28:	ldr	x0, [sp, #96]
    8e2c:	strb	wzr, [x0]
    8e30:	bl	8860 <__ctype_b_loc@plt>
    8e34:	mov	x19, x0
    8e38:	ldrb	w1, [x20]
    8e3c:	ldr	x2, [x19]
    8e40:	ubfiz	x0, x1, #1, #8
    8e44:	ldrh	w0, [x2, x0]
    8e48:	tbz	w0, #13, 8e68 <fprintf@plt+0x3a8>
    8e4c:	add	x0, x20, #0x1
    8e50:	str	x0, [sp, #152]
    8e54:	mov	x20, x0
    8e58:	ldrb	w1, [x0], #1
    8e5c:	ubfiz	x3, x1, #1, #8
    8e60:	ldrh	w3, [x2, x3]
    8e64:	tbnz	w3, #13, 8e50 <fprintf@plt+0x390>
    8e68:	cmp	w1, #0x21
    8e6c:	b.eq	9104 <fprintf@plt+0x644>  // b.none
    8e70:	cmp	w1, #0x7b
    8e74:	b.ne	8fdc <fprintf@plt+0x51c>  // b.any
    8e78:	add	x21, x20, #0x1
    8e7c:	stp	x23, x24, [sp, #48]
    8e80:	stp	x27, x28, [sp, #80]
    8e84:	str	x21, [sp, #152]
    8e88:	ldrb	w0, [x20, #1]
    8e8c:	ldrh	w0, [x2, x0, lsl #1]
    8e90:	tbz	w0, #13, 8eb0 <fprintf@plt+0x3f0>
    8e94:	add	x20, x20, #0x2
    8e98:	mov	x21, x20
    8e9c:	str	x20, [sp, #152]
    8ea0:	add	x20, x20, #0x1
    8ea4:	ldrb	w0, [x21]
    8ea8:	ldrh	w0, [x2, x0, lsl #1]
    8eac:	tbnz	w0, #13, 8e98 <fprintf@plt+0x3d8>
    8eb0:	add	x23, sp, #0x98
    8eb4:	mov	w28, #0x0                   	// #0
    8eb8:	mov	w24, #0x0                   	// #0
    8ebc:	str	x21, [sp, #152]
    8ec0:	bl	8a70 <__errno_location@plt>
    8ec4:	mov	x27, x0
    8ec8:	mov	x0, x21
    8ecc:	ldrb	w26, [x0]
    8ed0:	cmp	w26, #0x21
    8ed4:	cset	w20, eq  // eq = none
    8ed8:	b.eq	8f78 <fprintf@plt+0x4b8>  // b.none
    8edc:	nop
    8ee0:	str	wzr, [x27]
    8ee4:	mov	x1, x23
    8ee8:	mov	w2, #0xa                   	// #10
    8eec:	bl	85a0 <strtoul@plt>
    8ef0:	mov	x8, x0
    8ef4:	ldr	w1, [x27]
    8ef8:	cbnz	w1, 8fd4 <fprintf@plt+0x514>
    8efc:	ldr	x2, [sp, #152]
    8f00:	ldr	x5, [x19]
    8f04:	ldrb	w4, [x2]
    8f08:	ubfiz	x0, x4, #1, #8
    8f0c:	ldrh	w0, [x5, x0]
    8f10:	tbz	w0, #13, 8f30 <fprintf@plt+0x470>
    8f14:	add	x1, x2, #0x1
    8f18:	str	x1, [sp, #152]
    8f1c:	mov	x2, x1
    8f20:	ldrb	w4, [x1], #1
    8f24:	ubfiz	x3, x4, #1, #8
    8f28:	ldrh	w3, [x5, x3]
    8f2c:	tbnz	w3, #13, 8f18 <fprintf@plt+0x458>
    8f30:	mov	x3, #0x1                   	// #1
    8f34:	cmp	w4, #0x3a
    8f38:	mov	x9, x3
    8f3c:	b.eq	9038 <fprintf@plt+0x578>  // b.none
    8f40:	ldr	x1, [x22, #1584]
    8f44:	cbz	x1, 8f50 <fprintf@plt+0x490>
    8f48:	cmp	w20, w24
    8f4c:	b.eq	8ff4 <fprintf@plt+0x534>  // b.none
    8f50:	cmp	w4, #0x7d
    8f54:	b.eq	9028 <fprintf@plt+0x568>  // b.none
    8f58:	cmp	w4, #0x2c
    8f5c:	b.ne	8fd4 <fprintf@plt+0x514>  // b.any
    8f60:	add	x0, x2, #0x1
    8f64:	str	x0, [sp, #152]
    8f68:	ldrb	w26, [x0]
    8f6c:	cmp	w26, #0x21
    8f70:	cset	w20, eq  // eq = none
    8f74:	b.ne	8ee0 <fprintf@plt+0x420>  // b.any
    8f78:	add	x1, x0, #0x1
    8f7c:	str	x1, [sp, #152]
    8f80:	ldr	x3, [x19]
    8f84:	ldrb	w2, [x0, #1]
    8f88:	ldr	x4, [x22, #1584]
    8f8c:	ldrh	w2, [x3, x2, lsl #1]
    8f90:	cmp	x4, #0x0
    8f94:	csinc	w28, w28, wzr, eq  // eq = none
    8f98:	tbz	w2, #13, 91e4 <fprintf@plt+0x724>
    8f9c:	add	x1, x0, #0x2
    8fa0:	mov	x0, x1
    8fa4:	str	x1, [sp, #152]
    8fa8:	add	x1, x1, #0x1
    8fac:	ldrb	w2, [x0]
    8fb0:	ldrh	w2, [x3, x2, lsl #1]
    8fb4:	tbnz	w2, #13, 8fa0 <fprintf@plt+0x4e0>
    8fb8:	str	wzr, [x27]
    8fbc:	mov	x1, x23
    8fc0:	mov	w2, #0xa                   	// #10
    8fc4:	bl	85a0 <strtoul@plt>
    8fc8:	mov	x8, x0
    8fcc:	ldr	w1, [x27]
    8fd0:	cbz	w1, 8efc <fprintf@plt+0x43c>
    8fd4:	ldp	x23, x24, [sp, #48]
    8fd8:	ldp	x27, x28, [sp, #80]
    8fdc:	mov	w0, #0x0                   	// #0
    8fe0:	ldp	x19, x20, [sp, #16]
    8fe4:	ldp	x21, x22, [sp, #32]
    8fe8:	ldp	x25, x26, [sp, #64]
    8fec:	ldp	x29, x30, [sp], #160
    8ff0:	ret
    8ff4:	cmp	w26, #0x21
    8ff8:	b.eq	90ec <fprintf@plt+0x62c>  // b.none
    8ffc:	mov	x2, x9
    9000:	mov	x1, x8
    9004:	mov	x0, x25
    9008:	mov	w4, #0x0                   	// #0
    900c:	bl	1e838 <omp_pause_resource_all_@@OMP_5.0+0x550>
    9010:	tst	w0, #0xff
    9014:	b.eq	8fd4 <fprintf@plt+0x514>  // b.none
    9018:	ldr	x2, [sp, #152]
    901c:	ldrb	w4, [x2]
    9020:	cmp	w4, #0x7d
    9024:	b.ne	8f58 <fprintf@plt+0x498>  // b.any
    9028:	cbz	w28, 91f4 <fprintf@plt+0x734>
    902c:	cbnz	w24, 91f4 <fprintf@plt+0x734>
    9030:	mov	w24, #0x1                   	// #1
    9034:	b	8ebc <fprintf@plt+0x3fc>
    9038:	add	x0, x2, x3
    903c:	str	x0, [sp, #152]
    9040:	ldrb	w1, [x2, #1]
    9044:	ldrh	w1, [x5, x1, lsl #1]
    9048:	tbz	w1, #13, 9068 <fprintf@plt+0x5a8>
    904c:	add	x2, x2, #0x2
    9050:	mov	x0, x2
    9054:	str	x2, [sp, #152]
    9058:	add	x2, x2, #0x1
    905c:	ldrb	w1, [x0]
    9060:	ldrh	w1, [x5, x1, lsl #1]
    9064:	tbnz	w1, #13, 9050 <fprintf@plt+0x590>
    9068:	str	wzr, [x27]
    906c:	mov	x1, x23
    9070:	mov	w2, #0xa                   	// #10
    9074:	str	x8, [sp, #104]
    9078:	bl	85a0 <strtoul@plt>
    907c:	mov	x9, x0
    9080:	ldr	w1, [x27]
    9084:	cmp	w1, #0x0
    9088:	ccmp	x0, #0x0, #0x4, eq  // eq = none
    908c:	b.eq	8fd4 <fprintf@plt+0x514>  // b.none
    9090:	ldr	x2, [sp, #152]
    9094:	ldr	x5, [x19]
    9098:	ldrb	w4, [x2]
    909c:	ldr	x8, [sp, #104]
    90a0:	ubfiz	x0, x4, #1, #8
    90a4:	ldrh	w0, [x5, x0]
    90a8:	tbz	w0, #13, 90c8 <fprintf@plt+0x608>
    90ac:	add	x1, x2, #0x1
    90b0:	str	x1, [sp, #152]
    90b4:	mov	x2, x1
    90b8:	ldrb	w4, [x1], #1
    90bc:	ubfiz	x3, x4, #1, #8
    90c0:	ldrh	w3, [x5, x3]
    90c4:	tbnz	w3, #13, 90b0 <fprintf@plt+0x5f0>
    90c8:	cmp	w4, #0x3a
    90cc:	mov	x3, #0x1                   	// #1
    90d0:	b.eq	914c <fprintf@plt+0x68c>  // b.none
    90d4:	cmp	w20, #0x0
    90d8:	ccmp	x9, #0x1, #0x4, ne  // ne = any
    90dc:	b.eq	8f40 <fprintf@plt+0x480>  // b.none
    90e0:	ldp	x23, x24, [sp, #48]
    90e4:	ldp	x27, x28, [sp, #80]
    90e8:	b	8fdc <fprintf@plt+0x51c>
    90ec:	mov	x1, x8
    90f0:	mov	x0, x25
    90f4:	bl	1e9b0 <omp_pause_resource_all_@@OMP_5.0+0x6c8>
    90f8:	tst	w0, #0xff
    90fc:	b.ne	9018 <fprintf@plt+0x558>  // b.any
    9100:	b	8fd4 <fprintf@plt+0x514>
    9104:	ldr	x3, [sp, #96]
    9108:	mov	w1, #0x1                   	// #1
    910c:	add	x0, x20, #0x1
    9110:	str	x0, [sp, #152]
    9114:	strb	w1, [x3]
    9118:	ldrb	w1, [x20, #1]
    911c:	ubfiz	x3, x1, #1, #8
    9120:	ldrh	w3, [x2, x3]
    9124:	tbz	w3, #13, 91ec <fprintf@plt+0x72c>
    9128:	add	x0, x20, #0x2
    912c:	nop
    9130:	str	x0, [sp, #152]
    9134:	mov	x20, x0
    9138:	ldrb	w1, [x0], #1
    913c:	ubfiz	x3, x1, #1, #8
    9140:	ldrh	w3, [x2, x3]
    9144:	tbnz	w3, #13, 9130 <fprintf@plt+0x670>
    9148:	b	8e70 <fprintf@plt+0x3b0>
    914c:	add	x0, x2, x3
    9150:	str	x0, [sp, #152]
    9154:	ldrb	w1, [x2, #1]
    9158:	ldrh	w1, [x5, x1, lsl #1]
    915c:	tbz	w1, #13, 9180 <fprintf@plt+0x6c0>
    9160:	add	x2, x2, #0x2
    9164:	nop
    9168:	mov	x0, x2
    916c:	str	x2, [sp, #152]
    9170:	add	x2, x2, #0x1
    9174:	ldrb	w1, [x0]
    9178:	ldrh	w1, [x5, x1, lsl #1]
    917c:	tbnz	w1, #13, 9168 <fprintf@plt+0x6a8>
    9180:	str	wzr, [x27]
    9184:	mov	x1, x23
    9188:	mov	w2, #0xa                   	// #10
    918c:	str	x8, [sp, #104]
    9190:	str	x9, [sp, #136]
    9194:	bl	8870 <strtol@plt>
    9198:	ldr	w1, [x27]
    919c:	mov	x3, x0
    91a0:	cbnz	w1, 8fd4 <fprintf@plt+0x514>
    91a4:	ldr	x2, [sp, #152]
    91a8:	ldr	x5, [x19]
    91ac:	ldrb	w4, [x2]
    91b0:	ldr	x8, [sp, #104]
    91b4:	ubfiz	x0, x4, #1, #8
    91b8:	ldr	x9, [sp, #136]
    91bc:	ldrh	w0, [x5, x0]
    91c0:	tbz	w0, #13, 90d4 <fprintf@plt+0x614>
    91c4:	add	x0, x2, #0x1
    91c8:	str	x0, [sp, #152]
    91cc:	mov	x2, x0
    91d0:	ldrb	w4, [x0], #1
    91d4:	ubfiz	x1, x4, #1, #8
    91d8:	ldrh	w1, [x5, x1]
    91dc:	tbnz	w1, #13, 91c8 <fprintf@plt+0x708>
    91e0:	b	90d4 <fprintf@plt+0x614>
    91e4:	mov	x0, x1
    91e8:	b	8ee0 <fprintf@plt+0x420>
    91ec:	mov	x20, x0
    91f0:	b	8e70 <fprintf@plt+0x3b0>
    91f4:	ldr	x1, [sp, #152]
    91f8:	ldr	x3, [x19]
    91fc:	add	x0, x1, #0x1
    9200:	str	x0, [sp, #152]
    9204:	ldrb	w2, [x1, #1]
    9208:	ubfiz	x4, x2, #1, #8
    920c:	ldrh	w4, [x3, x4]
    9210:	tbz	w4, #13, 9230 <fprintf@plt+0x770>
    9214:	add	x1, x1, #0x2
    9218:	str	x1, [sp, #152]
    921c:	mov	x0, x1
    9220:	ldrb	w2, [x1], #1
    9224:	ubfiz	x4, x2, #1, #8
    9228:	ldrh	w4, [x3, x4]
    922c:	tbnz	w4, #13, 9218 <fprintf@plt+0x758>
    9230:	cmp	w2, #0x3a
    9234:	mov	x2, #0x1                   	// #1
    9238:	mov	x20, x2
    923c:	b.eq	9264 <fprintf@plt+0x7a4>  // b.none
    9240:	ldr	x1, [sp, #112]
    9244:	ldp	x23, x24, [sp, #48]
    9248:	ldp	x27, x28, [sp, #80]
    924c:	str	x0, [x1]
    9250:	ldp	x0, x1, [sp, #120]
    9254:	str	x20, [x0]
    9258:	mov	w0, #0x1                   	// #1
    925c:	str	x2, [x1]
    9260:	b	8fe0 <fprintf@plt+0x520>
    9264:	add	x20, x0, x2
    9268:	str	x20, [sp, #152]
    926c:	ldrb	w1, [x0, #1]
    9270:	ldrh	w1, [x3, x1, lsl #1]
    9274:	tbz	w1, #13, 9294 <fprintf@plt+0x7d4>
    9278:	add	x0, x0, #0x2
    927c:	mov	x20, x0
    9280:	str	x0, [sp, #152]
    9284:	add	x0, x0, #0x1
    9288:	ldrb	w1, [x20]
    928c:	ldrh	w1, [x3, x1, lsl #1]
    9290:	tbnz	w1, #13, 927c <fprintf@plt+0x7bc>
    9294:	bl	8a70 <__errno_location@plt>
    9298:	mov	x21, x0
    929c:	mov	x1, x23
    92a0:	mov	x0, x20
    92a4:	mov	w2, #0xa                   	// #10
    92a8:	str	wzr, [x21]
    92ac:	bl	85a0 <strtoul@plt>
    92b0:	mov	x20, x0
    92b4:	ldr	w1, [x21]
    92b8:	cbnz	w1, 8fd4 <fprintf@plt+0x514>
    92bc:	sub	x1, x0, #0x1
    92c0:	mov	x0, #0xfffe                	// #65534
    92c4:	cmp	x1, x0
    92c8:	b.hi	8fd4 <fprintf@plt+0x514>  // b.pmore
    92cc:	ldr	x1, [sp, #152]
    92d0:	ldr	x3, [x19]
    92d4:	ldrb	w0, [x1]
    92d8:	ubfiz	x2, x0, #1, #8
    92dc:	ldrh	w2, [x3, x2]
    92e0:	tbz	w2, #13, 9300 <fprintf@plt+0x840>
    92e4:	add	x2, x1, #0x1
    92e8:	str	x2, [sp, #152]
    92ec:	mov	x1, x2
    92f0:	ldrb	w0, [x2], #1
    92f4:	ubfiz	x4, x0, #1, #8
    92f8:	ldrh	w4, [x3, x4]
    92fc:	tbnz	w4, #13, 92e8 <fprintf@plt+0x828>
    9300:	cmp	w0, #0x3a
    9304:	mov	x2, #0x1                   	// #1
    9308:	b.eq	9328 <fprintf@plt+0x868>  // b.none
    930c:	ldr	x0, [sp, #96]
    9310:	ldrb	w0, [x0]
    9314:	cbz	w0, 9320 <fprintf@plt+0x860>
    9318:	cmp	x20, #0x1
    931c:	b.ne	8fd4 <fprintf@plt+0x514>  // b.any
    9320:	ldr	x0, [sp, #152]
    9324:	b	9240 <fprintf@plt+0x780>
    9328:	add	x0, x1, x2
    932c:	str	x0, [sp, #152]
    9330:	ldrb	w2, [x1, #1]
    9334:	ldrh	w2, [x3, x2, lsl #1]
    9338:	tbz	w2, #13, 9358 <fprintf@plt+0x898>
    933c:	add	x1, x1, #0x2
    9340:	mov	x0, x1
    9344:	str	x1, [sp, #152]
    9348:	add	x1, x1, #0x1
    934c:	ldrb	w2, [x0]
    9350:	ldrh	w2, [x3, x2, lsl #1]
    9354:	tbnz	w2, #13, 9340 <fprintf@plt+0x880>
    9358:	str	wzr, [x21]
    935c:	mov	x1, x23
    9360:	mov	w2, #0xa                   	// #10
    9364:	bl	8870 <strtol@plt>
    9368:	mov	x2, x0
    936c:	ldr	w1, [x21]
    9370:	cbnz	w1, 8fd4 <fprintf@plt+0x514>
    9374:	ldr	x0, [sp, #152]
    9378:	ldr	x3, [x19]
    937c:	ldrb	w1, [x0]
    9380:	ldrh	w1, [x3, x1, lsl #1]
    9384:	tbz	w1, #13, 930c <fprintf@plt+0x84c>
    9388:	add	x0, x0, #0x1
    938c:	str	x0, [sp, #152]
    9390:	add	x0, x0, #0x1
    9394:	ldurb	w1, [x0, #-1]
    9398:	ldrh	w1, [x3, x1, lsl #1]
    939c:	tbnz	w1, #13, 938c <fprintf@plt+0x8cc>
    93a0:	b	930c <fprintf@plt+0x84c>
    93a4:	nop
    93a8:	stp	x29, x30, [sp, #-80]!
    93ac:	mov	x29, sp
    93b0:	stp	x19, x20, [sp, #16]
    93b4:	mov	x20, x0
    93b8:	stp	x21, x22, [sp, #32]
    93bc:	mov	x21, x1
    93c0:	bl	8a80 <getenv@plt>
    93c4:	cbz	x0, 951c <fprintf@plt+0xa5c>
    93c8:	mov	x19, x0
    93cc:	bl	8860 <__ctype_b_loc@plt>
    93d0:	mov	x22, x0
    93d4:	ldrb	w2, [x19]
    93d8:	ldr	x4, [x22]
    93dc:	ubfiz	x0, x2, #1, #8
    93e0:	ldrh	w0, [x4, x0]
    93e4:	tbz	w0, #13, 93f8 <fprintf@plt+0x938>
    93e8:	ldrb	w2, [x19, #1]!
    93ec:	ubfiz	x3, x2, #1, #8
    93f0:	ldrh	w3, [x4, x3]
    93f4:	tbnz	w3, #13, 93e8 <fprintf@plt+0x928>
    93f8:	cbnz	w2, 9420 <fprintf@plt+0x960>
    93fc:	mov	x1, x20
    9400:	adrp	x0, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    9404:	add	x0, x0, #0xd40
    9408:	bl	b670 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    940c:	mov	w0, #0x0                   	// #0
    9410:	ldp	x19, x20, [sp, #16]
    9414:	ldp	x21, x22, [sp, #32]
    9418:	ldp	x29, x30, [sp], #80
    941c:	ret
    9420:	stp	x23, x24, [sp, #48]
    9424:	bl	8a70 <__errno_location@plt>
    9428:	mov	x23, x0
    942c:	add	x1, sp, #0x48
    9430:	mov	x0, x19
    9434:	mov	w2, #0xa                   	// #10
    9438:	str	wzr, [x23]
    943c:	bl	85a0 <strtoul@plt>
    9440:	mov	x24, x0
    9444:	ldr	w1, [x23]
    9448:	cbnz	w1, 94f0 <fprintf@plt+0xa30>
    944c:	ldr	x19, [sp, #72]
    9450:	ldr	x22, [x22]
    9454:	ldrb	w0, [x19]
    9458:	ldrb	w3, [x19]
    945c:	mov	x23, x0
    9460:	ldrh	w0, [x22, x0, lsl #1]
    9464:	tbz	w0, #13, 948c <fprintf@plt+0x9cc>
    9468:	add	x2, x19, #0x1
    946c:	nop
    9470:	str	x2, [sp, #72]
    9474:	mov	x19, x2
    9478:	ldrb	w3, [x2], #1
    947c:	and	x23, x3, #0xff
    9480:	ubfiz	x1, x3, #1, #8
    9484:	ldrh	w1, [x22, x1]
    9488:	tbnz	w1, #13, 9470 <fprintf@plt+0x9b0>
    948c:	cbz	w3, 94f8 <fprintf@plt+0xa38>
    9490:	bl	86a0 <__ctype_tolower_loc@plt>
    9494:	ldr	x0, [x0]
    9498:	ldr	w0, [x0, x23, lsl #2]
    949c:	cmp	w0, #0x6b
    94a0:	b.eq	953c <fprintf@plt+0xa7c>  // b.none
    94a4:	b.gt	9524 <fprintf@plt+0xa64>
    94a8:	cmp	w0, #0x62
    94ac:	b.eq	9534 <fprintf@plt+0xa74>  // b.none
    94b0:	cmp	w0, #0x67
    94b4:	mov	x0, #0x1e                  	// #30
    94b8:	b.ne	94f0 <fprintf@plt+0xa30>  // b.any
    94bc:	add	x1, x19, #0x1
    94c0:	str	x1, [sp, #72]
    94c4:	ldrb	w2, [x19, #1]
    94c8:	ldrb	w1, [x19, #1]
    94cc:	ldrh	w2, [x22, x2, lsl #1]
    94d0:	tbz	w2, #13, 94ec <fprintf@plt+0xa2c>
    94d4:	add	x19, x19, #0x2
    94d8:	str	x19, [sp, #72]
    94dc:	ldrb	w1, [x19], #1
    94e0:	ubfiz	x2, x1, #1, #8
    94e4:	ldrh	w2, [x22, x2]
    94e8:	tbnz	w2, #13, 94d8 <fprintf@plt+0xa18>
    94ec:	cbz	w1, 94fc <fprintf@plt+0xa3c>
    94f0:	ldp	x23, x24, [sp, #48]
    94f4:	b	93fc <fprintf@plt+0x93c>
    94f8:	mov	x0, #0xa                   	// #10
    94fc:	lsl	x1, x24, x0
    9500:	lsr	x0, x1, x0
    9504:	cmp	x0, x24
    9508:	b.ne	94f0 <fprintf@plt+0xa30>  // b.any
    950c:	mov	w0, #0x1                   	// #1
    9510:	ldp	x23, x24, [sp, #48]
    9514:	str	x1, [x21]
    9518:	b	9410 <fprintf@plt+0x950>
    951c:	mov	w0, #0x0                   	// #0
    9520:	b	9410 <fprintf@plt+0x950>
    9524:	cmp	w0, #0x6d
    9528:	b.ne	94f0 <fprintf@plt+0xa30>  // b.any
    952c:	mov	x0, #0x14                  	// #20
    9530:	b	94bc <fprintf@plt+0x9fc>
    9534:	mov	x0, #0x0                   	// #0
    9538:	b	94bc <fprintf@plt+0x9fc>
    953c:	mov	x0, #0xa                   	// #10
    9540:	b	94bc <fprintf@plt+0x9fc>
    9544:	nop
    9548:	stp	x29, x30, [sp, #-48]!
    954c:	mov	w3, w2
    9550:	mov	w2, #0x1                   	// #1
    9554:	mov	x29, sp
    9558:	stp	x19, x20, [sp, #16]
    955c:	mov	x19, x1
    9560:	mov	x20, x0
    9564:	add	x1, sp, #0x28
    9568:	bl	8cd0 <fprintf@plt+0x210>
    956c:	ands	w0, w0, #0xff
    9570:	b.eq	9588 <fprintf@plt+0xac8>  // b.none
    9574:	ldr	x1, [sp, #40]
    9578:	mov	x2, #0x7fffffff            	// #2147483647
    957c:	cmp	x1, x2
    9580:	b.hi	9594 <fprintf@plt+0xad4>  // b.pmore
    9584:	str	w1, [x19]
    9588:	ldp	x19, x20, [sp, #16]
    958c:	ldp	x29, x30, [sp], #48
    9590:	ret
    9594:	mov	x1, x20
    9598:	adrp	x0, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    959c:	add	x0, x0, #0xd40
    95a0:	bl	b670 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    95a4:	mov	w0, #0x0                   	// #0
    95a8:	b	9588 <fprintf@plt+0xac8>
    95ac:	nop
    95b0:	stp	x29, x30, [sp, #-208]!
    95b4:	adrp	x0, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    95b8:	add	x0, x0, #0xd90
    95bc:	mov	x29, sp
    95c0:	stp	x19, x20, [sp, #16]
    95c4:	adrp	x19, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    95c8:	stp	x21, x22, [sp, #32]
    95cc:	stp	x23, x24, [sp, #48]
    95d0:	stp	x25, x26, [sp, #64]
    95d4:	stp	x27, x28, [sp, #80]
    95d8:	str	xzr, [sp, #168]
    95dc:	bl	8a80 <getenv@plt>
    95e0:	cbz	x0, 9680 <fprintf@plt+0xbc0>
    95e4:	mov	x20, x0
    95e8:	bl	8860 <__ctype_b_loc@plt>
    95ec:	mov	x23, x0
    95f0:	ldrb	w0, [x20]
    95f4:	ldr	x22, [x23]
    95f8:	ldrh	w0, [x22, x0, lsl #1]
    95fc:	tbz	w0, #13, 960c <fprintf@plt+0xb4c>
    9600:	ldrb	w0, [x20, #1]!
    9604:	ldrh	w0, [x22, x0, lsl #1]
    9608:	tbnz	w0, #13, 9600 <fprintf@plt+0xb40>
    960c:	adrp	x1, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    9610:	mov	x0, x20
    9614:	add	x1, x1, #0xda0
    9618:	mov	x2, #0x9                   	// #9
    961c:	bl	88f0 <strncasecmp@plt>
    9620:	cbz	w0, 9aa0 <fprintf@plt+0xfe0>
    9624:	adrp	x1, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    9628:	mov	x0, x20
    962c:	add	x1, x1, #0xdb0
    9630:	mov	x2, #0xc                   	// #12
    9634:	bl	88f0 <strncasecmp@plt>
    9638:	cbnz	w0, a9d4 <fprintf@plt+0x1f14>
    963c:	add	x20, x20, #0xc
    9640:	mov	w21, #0xffffffff            	// #-1
    9644:	ldrb	w0, [x20]
    9648:	ldrb	w1, [x20]
    964c:	ldrh	w0, [x22, x0, lsl #1]
    9650:	tbz	w0, #13, 9668 <fprintf@plt+0xba8>
    9654:	nop
    9658:	ldrb	w1, [x20, #1]!
    965c:	ubfiz	x0, x1, #1, #8
    9660:	ldrh	w0, [x22, x0]
    9664:	tbnz	w0, #13, 9658 <fprintf@plt+0xb98>
    9668:	cmp	w1, #0x3a
    966c:	b.eq	a768 <fprintf@plt+0x1ca8>  // b.none
    9670:	adrp	x19, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    9674:	adrp	x0, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    9678:	add	x0, x0, #0xde0
    967c:	bl	b670 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    9680:	add	x21, x19, #0x2b0
    9684:	adrp	x0, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    9688:	add	x1, x21, #0x18
    968c:	add	x0, x0, #0xe60
    9690:	bl	8be0 <fprintf@plt+0x120>
    9694:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    9698:	add	x1, x21, #0x19
    969c:	add	x20, x2, #0x54c
    96a0:	adrp	x0, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    96a4:	add	x0, x0, #0xe70
    96a8:	bl	8be0 <fprintf@plt+0x120>
    96ac:	mov	x1, x20
    96b0:	adrp	x0, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    96b4:	add	x0, x0, #0xe80
    96b8:	bl	8be0 <fprintf@plt+0x120>
    96bc:	adrp	x0, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    96c0:	adrp	x1, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    96c4:	add	x0, x0, #0xe98
    96c8:	add	x1, x1, #0x600
    96cc:	bl	8be0 <fprintf@plt+0x120>
    96d0:	add	x1, x21, #0x10
    96d4:	mov	w2, #0x0                   	// #0
    96d8:	adrp	x0, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    96dc:	add	x0, x0, #0xeb0
    96e0:	bl	9548 <fprintf@plt+0xa88>
    96e4:	add	x1, x20, #0x4
    96e8:	mov	w2, #0x0                   	// #0
    96ec:	adrp	x0, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    96f0:	add	x0, x0, #0xec8
    96f4:	bl	9548 <fprintf@plt+0xa88>
    96f8:	add	x1, x21, #0x28
    96fc:	mov	w3, #0x0                   	// #0
    9700:	mov	w2, #0x1                   	// #1
    9704:	adrp	x0, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    9708:	add	x0, x0, #0xee0
    970c:	bl	8cd0 <fprintf@plt+0x210>
    9710:	add	x1, sp, #0xa0
    9714:	mov	w3, #0x0                   	// #0
    9718:	adrp	x0, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    971c:	mov	w2, #0x0                   	// #0
    9720:	add	x0, x0, #0xef8
    9724:	bl	8cd0 <fprintf@plt+0x210>
    9728:	tst	w0, #0xff
    972c:	b.eq	9748 <fprintf@plt+0xc88>  // b.none
    9730:	ldr	x0, [sp, #160]
    9734:	mov	x2, #0x7fffffff            	// #2147483647
    9738:	mov	x1, #0xffffffff            	// #4294967295
    973c:	cmp	x0, x2
    9740:	csel	x0, x0, x1, ls  // ls = plast
    9744:	str	w0, [x21, #20]
    9748:	adrp	x1, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    974c:	add	x1, x1, #0x610
    9750:	mov	w2, #0x1                   	// #1
    9754:	adrp	x0, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    9758:	add	x0, x0, #0xf10
    975c:	bl	9548 <fprintf@plt+0xa88>
    9760:	bl	1c908 <omp_test_nest_lock@OMP_1.0+0x320>
    9764:	adrp	x22, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    9768:	ldr	x2, [x19, #688]
    976c:	add	x1, x19, #0x2b0
    9770:	add	x0, x22, #0xf20
    9774:	str	x2, [x1, #48]
    9778:	bl	8a80 <getenv@plt>
    977c:	mov	x20, x0
    9780:	cbz	x0, 97d0 <fprintf@plt+0xd10>
    9784:	bl	8860 <__ctype_b_loc@plt>
    9788:	mov	x26, x0
    978c:	ldrb	w1, [x20]
    9790:	ldr	x2, [x26]
    9794:	ubfiz	x0, x1, #1, #8
    9798:	ldrh	w0, [x2, x0]
    979c:	tbz	w0, #13, 97b0 <fprintf@plt+0xcf0>
    97a0:	ldrb	w1, [x20, #1]!
    97a4:	ubfiz	x0, x1, #1, #8
    97a8:	ldrh	w0, [x2, x0]
    97ac:	tbnz	w0, #13, 97a0 <fprintf@plt+0xce0>
    97b0:	cbnz	w1, 9aac <fprintf@plt+0xfec>
    97b4:	mov	x24, #0x0                   	// #0
    97b8:	mov	x0, x24
    97bc:	bl	88b0 <free@plt>
    97c0:	adrp	x0, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    97c4:	add	x1, x22, #0xf20
    97c8:	add	x0, x0, #0xd40
    97cc:	bl	b670 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    97d0:	add	x0, x19, #0x2b0
    97d4:	ldr	x0, [x0, #48]
    97d8:	str	x0, [x19, #688]
    97dc:	adrp	x26, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    97e0:	add	x0, x26, #0xf70
    97e4:	bl	8a80 <getenv@plt>
    97e8:	mov	x25, x0
    97ec:	cbz	x0, ac90 <fprintf@plt+0x21d0>
    97f0:	bl	8860 <__ctype_b_loc@plt>
    97f4:	ldrb	w1, [x25]
    97f8:	ldr	x20, [x0]
    97fc:	ubfiz	x0, x1, #1, #8
    9800:	ldrh	w0, [x20, x0]
    9804:	tbz	w0, #13, 9818 <fprintf@plt+0xd58>
    9808:	ldrb	w1, [x25, #1]!
    980c:	ubfiz	x0, x1, #1, #8
    9810:	ldrh	w0, [x20, x0]
    9814:	tbnz	w0, #13, 9808 <fprintf@plt+0xd48>
    9818:	cbz	w1, a688 <fprintf@plt+0x1bc8>
    981c:	add	x22, x19, #0x2b0
    9820:	mov	x0, x25
    9824:	add	x23, x22, #0x38
    9828:	mov	x1, x23
    982c:	ldrb	w21, [x22, #63]
    9830:	mov	x2, x21
    9834:	bl	88f0 <strncasecmp@plt>
    9838:	cbz	w0, a634 <fprintf@plt+0x1b74>
    983c:	ldrb	w21, [x22, #75]
    9840:	add	x1, x22, #0x44
    9844:	mov	x0, x25
    9848:	mov	x2, x21
    984c:	bl	88f0 <strncasecmp@plt>
    9850:	cbz	w0, af3c <fprintf@plt+0x247c>
    9854:	ldrb	w21, [x22, #87]
    9858:	add	x1, x22, #0x50
    985c:	mov	x0, x25
    9860:	mov	x2, x21
    9864:	bl	88f0 <strncasecmp@plt>
    9868:	cbz	w0, afd0 <fprintf@plt+0x2510>
    986c:	ldrb	w21, [x22, #99]
    9870:	add	x1, x22, #0x5c
    9874:	mov	x0, x25
    9878:	mov	x2, x21
    987c:	bl	88f0 <strncasecmp@plt>
    9880:	cbz	w0, a630 <fprintf@plt+0x1b70>
    9884:	ldrb	w21, [x22, #111]
    9888:	add	x1, x22, #0x68
    988c:	mov	x0, x25
    9890:	mov	x22, #0x0                   	// #0
    9894:	mov	x2, x21
    9898:	bl	88f0 <strncasecmp@plt>
    989c:	cbz	w0, afd8 <fprintf@plt+0x2518>
    98a0:	mov	x0, x22
    98a4:	bl	88b0 <free@plt>
    98a8:	adrp	x0, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    98ac:	add	x1, x26, #0xf70
    98b0:	add	x0, x0, #0xd40
    98b4:	mov	w25, #0x0                   	// #0
    98b8:	bl	b670 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    98bc:	adrp	x20, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    98c0:	add	x0, x20, #0xf80
    98c4:	bl	8a80 <getenv@plt>
    98c8:	str	x0, [sp, #176]
    98cc:	mov	x28, x0
    98d0:	cbz	x0, 99a8 <fprintf@plt+0xee8>
    98d4:	bl	8860 <__ctype_b_loc@plt>
    98d8:	mov	x21, x0
    98dc:	ldrb	w2, [x28]
    98e0:	ldr	x23, [x21]
    98e4:	ubfiz	x0, x2, #1, #8
    98e8:	ldrh	w0, [x23, x0]
    98ec:	tbz	w0, #13, 9910 <fprintf@plt+0xe50>
    98f0:	add	x1, x28, #0x1
    98f4:	nop
    98f8:	str	x1, [sp, #176]
    98fc:	mov	x28, x1
    9900:	ldrb	w2, [x1], #1
    9904:	ubfiz	x0, x2, #1, #8
    9908:	ldrh	w0, [x23, x0]
    990c:	tbnz	w0, #13, 98f8 <fprintf@plt+0xe38>
    9910:	cbz	w2, 9980 <fprintf@plt+0xec0>
    9914:	adrp	x1, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    9918:	mov	x0, x28
    991c:	add	x1, x1, #0xf90
    9920:	mov	x2, #0x7                   	// #7
    9924:	bl	88f0 <strncasecmp@plt>
    9928:	cbnz	w0, a88c <fprintf@plt+0x1dcc>
    992c:	add	x0, x28, #0x7
    9930:	mov	w26, #0x1                   	// #1
    9934:	str	x0, [sp, #176]
    9938:	ldr	x1, [sp, #176]
    993c:	mov	x2, x1
    9940:	ldrb	w0, [x2], #1
    9944:	ubfiz	x3, x0, #1, #8
    9948:	ldrh	w3, [x23, x3]
    994c:	tbz	w3, #13, 9968 <fprintf@plt+0xea8>
    9950:	str	x2, [sp, #176]
    9954:	mov	x1, x2
    9958:	ldrb	w0, [x2], #1
    995c:	ubfiz	x3, x0, #1, #8
    9960:	ldrh	w3, [x23, x3]
    9964:	tbnz	w3, #13, 9950 <fprintf@plt+0xe90>
    9968:	cbz	w0, a938 <fprintf@plt+0x1e78>
    996c:	add	x22, x1, #0x1
    9970:	str	x22, [sp, #176]
    9974:	ldrb	w0, [x1]
    9978:	cmp	w0, #0x28
    997c:	b.eq	aa14 <fprintf@plt+0x1f54>  // b.none
    9980:	adrp	x24, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    9984:	adrp	x23, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    9988:	ldr	x0, [x23, #1584]
    998c:	bl	88b0 <free@plt>
    9990:	str	xzr, [x23, #1584]
    9994:	adrp	x0, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    9998:	add	x1, x20, #0xf80
    999c:	add	x0, x0, #0xd40
    99a0:	str	xzr, [x24, #1624]
    99a4:	bl	b670 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    99a8:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    99ac:	add	x0, x0, #0x8
    99b0:	bl	8a80 <getenv@plt>
    99b4:	mov	x22, x0
    99b8:	cbz	x0, 9e78 <fprintf@plt+0x13b8>
    99bc:	bl	8860 <__ctype_b_loc@plt>
    99c0:	add	x21, sp, #0xc8
    99c4:	str	x0, [sp, #104]
    99c8:	bl	8a70 <__errno_location@plt>
    99cc:	mov	x20, x0
    99d0:	mov	x27, #0x0                   	// #0
    99d4:	mov	w26, #0x0                   	// #0
    99d8:	mov	x28, #0xffff                	// #65535
    99dc:	ldr	x2, [sp, #104]
    99e0:	mov	x0, x22
    99e4:	ldrb	w1, [x22]
    99e8:	adrp	x23, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    99ec:	ldr	x3, [x2]
    99f0:	ldrh	w1, [x3, x1, lsl #1]
    99f4:	and	w4, w1, #0x2000
    99f8:	cbnz	w4, 9a88 <fprintf@plt+0xfc8>
    99fc:	nop
    9a00:	str	wzr, [x20]
    9a04:	mov	x1, x21
    9a08:	mov	w2, #0x0                   	// #0
    9a0c:	bl	85a0 <strtoul@plt>
    9a10:	mov	x24, x0
    9a14:	ldr	w1, [x20]
    9a18:	cmp	w1, #0x0
    9a1c:	ccmp	x0, x28, #0x2, eq  // eq = none
    9a20:	b.hi	9ec4 <fprintf@plt+0x1404>  // b.pmore
    9a24:	ldr	x6, [sp, #200]
    9a28:	ldrb	w2, [x6]
    9a2c:	cmp	w2, #0x2d
    9a30:	b.eq	9dfc <fprintf@plt+0x133c>  // b.none
    9a34:	mov	x1, #0x1                   	// #1
    9a38:	mov	x5, #0x0                   	// #0
    9a3c:	mov	x8, x1
    9a40:	cbnz	w26, 9be0 <fprintf@plt+0x1120>
    9a44:	add	x27, x27, x1
    9a48:	ldr	x0, [sp, #104]
    9a4c:	ldr	x3, [x0]
    9a50:	ubfiz	x0, x2, #1, #8
    9a54:	ldrh	w1, [x3, x0]
    9a58:	and	w4, w1, #0x2000
    9a5c:	tbz	w1, #13, 9a74 <fprintf@plt+0xfb4>
    9a60:	ldrb	w2, [x6, #1]!
    9a64:	ubfiz	x0, x2, #1, #8
    9a68:	ldrh	w1, [x3, x0]
    9a6c:	and	w4, w1, #0x2000
    9a70:	tbnz	w1, #13, 9a60 <fprintf@plt+0xfa0>
    9a74:	cmp	w2, #0x2c
    9a78:	b.eq	9e50 <fprintf@plt+0x1390>  // b.none
    9a7c:	cbz	w2, 9c48 <fprintf@plt+0x1188>
    9a80:	mov	x0, x6
    9a84:	cbz	w4, 9a00 <fprintf@plt+0xf40>
    9a88:	ldrb	w1, [x0, #1]
    9a8c:	add	x6, x0, #0x1
    9a90:	mov	x0, x6
    9a94:	ldrh	w1, [x3, x1, lsl #1]
    9a98:	and	w4, w1, #0x2000
    9a9c:	b	9a84 <fprintf@plt+0xfc4>
    9aa0:	add	x20, x20, #0x9
    9aa4:	mov	w21, #0x1                   	// #1
    9aa8:	b	9644 <fprintf@plt+0xb84>
    9aac:	bl	8a70 <__errno_location@plt>
    9ab0:	mov	x28, x0
    9ab4:	add	x21, sp, #0xc8
    9ab8:	mov	x0, x20
    9abc:	mov	x1, x21
    9ac0:	mov	w2, #0xa                   	// #10
    9ac4:	str	wzr, [x28]
    9ac8:	bl	85a0 <strtoul@plt>
    9acc:	mov	x27, x0
    9ad0:	ldr	w1, [x28]
    9ad4:	cbnz	w1, 97b4 <fprintf@plt+0xcf4>
    9ad8:	cmp	x0, #0x0
    9adc:	b.le	97b4 <fprintf@plt+0xcf4>
    9ae0:	ldr	x1, [sp, #200]
    9ae4:	ldr	x4, [x26]
    9ae8:	ldrb	w0, [x1]
    9aec:	ldrb	w2, [x1]
    9af0:	ldrh	w0, [x4, x0, lsl #1]
    9af4:	tbz	w0, #13, 9b14 <fprintf@plt+0x1054>
    9af8:	add	x1, x1, #0x1
    9afc:	nop
    9b00:	str	x1, [sp, #200]
    9b04:	ldrb	w2, [x1], #1
    9b08:	ubfiz	x0, x2, #1, #8
    9b0c:	ldrh	w0, [x4, x0]
    9b10:	tbnz	w0, #13, 9b00 <fprintf@plt+0x1040>
    9b14:	cbz	w2, adc0 <fprintf@plt+0x2300>
    9b18:	cmp	w2, #0x2c
    9b1c:	b.ne	97b4 <fprintf@plt+0xcf4>  // b.any
    9b20:	mov	x20, #0x0                   	// #0
    9b24:	mov	x24, #0x0                   	// #0
    9b28:	str	xzr, [sp, #104]
    9b2c:	ldr	x0, [sp, #104]
    9b30:	ldr	x25, [sp, #200]
    9b34:	cmp	x20, x0
    9b38:	add	x23, x25, #0x1
    9b3c:	b.eq	af64 <fprintf@plt+0x24a4>  // b.none
    9b40:	ldrb	w0, [x25, #1]
    9b44:	ldrb	w1, [x25, #1]
    9b48:	ldrh	w0, [x4, x0, lsl #1]
    9b4c:	tbz	w0, #13, 9b60 <fprintf@plt+0x10a0>
    9b50:	ldrb	w1, [x23, #1]!
    9b54:	ubfiz	x0, x1, #1, #8
    9b58:	ldrh	w0, [x4, x0]
    9b5c:	tbnz	w0, #13, 9b50 <fprintf@plt+0x1090>
    9b60:	cbz	w1, 97b8 <fprintf@plt+0xcf8>
    9b64:	str	wzr, [x28]
    9b68:	mov	x1, x21
    9b6c:	mov	x0, x23
    9b70:	mov	w2, #0xa                   	// #10
    9b74:	bl	85a0 <strtoul@plt>
    9b78:	mov	x27, x0
    9b7c:	ldr	w1, [x28]
    9b80:	cbnz	w1, 97b8 <fprintf@plt+0xcf8>
    9b84:	cmp	x0, #0x0
    9b88:	b.le	97b8 <fprintf@plt+0xcf8>
    9b8c:	ldr	x1, [sp, #200]
    9b90:	str	x0, [x24, x20, lsl #3]
    9b94:	ldr	x4, [x26]
    9b98:	add	x3, x20, #0x1
    9b9c:	ldrb	w0, [x1]
    9ba0:	ldrb	w2, [x1]
    9ba4:	ldrh	w0, [x4, x0, lsl #1]
    9ba8:	tbz	w0, #13, 9bc4 <fprintf@plt+0x1104>
    9bac:	add	x1, x1, #0x1
    9bb0:	str	x1, [sp, #200]
    9bb4:	ldrb	w2, [x1], #1
    9bb8:	ubfiz	x0, x2, #1, #8
    9bbc:	ldrh	w0, [x4, x0]
    9bc0:	tbnz	w0, #13, 9bb0 <fprintf@plt+0x10f0>
    9bc4:	cbz	w2, b0e4 <fprintf@plt+0x2624>
    9bc8:	cmp	w2, #0x2c
    9bcc:	b.ne	97b8 <fprintf@plt+0xcf8>  // b.any
    9bd0:	mov	x20, x3
    9bd4:	b	9b2c <fprintf@plt+0x106c>
    9bd8:	cbz	x1, 9c40 <fprintf@plt+0x1180>
    9bdc:	nop
    9be0:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    9be4:	sub	x5, x5, #0x1
    9be8:	ldr	x1, [x23, #1624]
    9bec:	stp	x8, x6, [sp, #128]
    9bf0:	ldr	x0, [x0, #1584]
    9bf4:	ldr	x0, [x0, x1, lsl #3]
    9bf8:	stp	x0, x5, [sp, #112]
    9bfc:	bl	1e828 <omp_pause_resource_all_@@OMP_5.0+0x540>
    9c00:	ldr	x0, [sp, #112]
    9c04:	mov	x1, x24
    9c08:	mov	w4, #0x1                   	// #1
    9c0c:	mov	x3, #0x0                   	// #0
    9c10:	mov	x2, #0x1                   	// #1
    9c14:	bl	1e838 <omp_pause_resource_all_@@OMP_5.0+0x550>
    9c18:	tst	w0, #0xff
    9c1c:	ldp	x5, x8, [sp, #120]
    9c20:	ldr	x6, [sp, #136]
    9c24:	add	x24, x24, x8
    9c28:	b.eq	9c38 <fprintf@plt+0x1178>  // b.none
    9c2c:	ldr	x1, [x23, #1624]
    9c30:	add	x1, x1, #0x1
    9c34:	str	x1, [x23, #1624]
    9c38:	cmn	x5, #0x1
    9c3c:	b.ne	9be0 <fprintf@plt+0x1120>  // b.any
    9c40:	ldrb	w2, [x6]
    9c44:	b	9a48 <fprintf@plt+0xf88>
    9c48:	cbz	w26, ad50 <fprintf@plt+0x2290>
    9c4c:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    9c50:	ldr	x0, [x0, #1624]
    9c54:	cbz	x0, 9e68 <fprintf@plt+0x13a8>
    9c58:	add	x0, x19, #0x2b0
    9c5c:	ldrb	w1, [x0, #26]
    9c60:	cbnz	w1, 9c68 <fprintf@plt+0x11a8>
    9c64:	strb	w26, [x0, #26]
    9c68:	bl	1efa0 <omp_pause_resource_all_@@OMP_5.0+0xcb8>
    9c6c:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    9c70:	add	x0, x0, #0x58
    9c74:	bl	8a80 <getenv@plt>
    9c78:	mov	x20, x0
    9c7c:	cbz	x0, 9c90 <fprintf@plt+0x11d0>
    9c80:	bl	85b0 <strlen@plt>
    9c84:	mov	x1, x0
    9c88:	mov	x0, x20
    9c8c:	bl	2bee8 <acc_set_cuda_stream@@OACC_2.0+0xee0>
    9c90:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    9c94:	add	x0, x0, #0x70
    9c98:	bl	8a80 <getenv@plt>
    9c9c:	mov	x20, x0
    9ca0:	cbz	x0, 9d18 <fprintf@plt+0x1258>
    9ca4:	bl	8860 <__ctype_b_loc@plt>
    9ca8:	ldrb	w1, [x20]
    9cac:	ldr	x21, [x0]
    9cb0:	ldrh	w0, [x21, x1, lsl #1]
    9cb4:	tbz	w0, #13, 9cc4 <fprintf@plt+0x1204>
    9cb8:	ldrb	w0, [x20, #1]!
    9cbc:	ldrh	w0, [x21, x0, lsl #1]
    9cc0:	tbnz	w0, #13, 9cb8 <fprintf@plt+0x11f8>
    9cc4:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    9cc8:	mov	x0, x20
    9ccc:	add	x1, x1, #0x90
    9cd0:	mov	x2, #0x6                   	// #6
    9cd4:	bl	88f0 <strncasecmp@plt>
    9cd8:	cbnz	w0, a6a8 <fprintf@plt+0x1be8>
    9cdc:	add	x20, x20, #0x6
    9ce0:	mov	w22, #0x1                   	// #1
    9ce4:	ldrb	w0, [x20]
    9ce8:	ubfiz	x1, x0, #1, #8
    9cec:	ldrh	w1, [x21, x1]
    9cf0:	tbz	w1, #13, 9d08 <fprintf@plt+0x1248>
    9cf4:	nop
    9cf8:	ldrb	w0, [x20, #1]!
    9cfc:	ubfiz	x1, x0, #1, #8
    9d00:	ldrh	w1, [x21, x1]
    9d04:	tbnz	w1, #13, 9cf8 <fprintf@plt+0x1238>
    9d08:	cbz	w0, a690 <fprintf@plt+0x1bd0>
    9d0c:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    9d10:	add	x0, x0, #0xa0
    9d14:	bl	b670 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    9d18:	adrp	x21, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    9d1c:	add	x0, x21, #0x80
    9d20:	bl	8a80 <getenv@plt>
    9d24:	mov	x20, x0
    9d28:	cbz	x0, ac68 <fprintf@plt+0x21a8>
    9d2c:	mov	w22, #0xffffffff            	// #-1
    9d30:	bl	8860 <__ctype_b_loc@plt>
    9d34:	mov	x25, x0
    9d38:	ldrb	w1, [x20]
    9d3c:	ldr	x23, [x25]
    9d40:	ubfiz	x0, x1, #1, #8
    9d44:	ldrh	w0, [x23, x0]
    9d48:	tbz	w0, #13, 9d60 <fprintf@plt+0x12a0>
    9d4c:	nop
    9d50:	ldrb	w1, [x20, #1]!
    9d54:	ubfiz	x0, x1, #1, #8
    9d58:	ldrh	w0, [x23, x0]
    9d5c:	tbnz	w0, #13, 9d50 <fprintf@plt+0x1290>
    9d60:	cbz	w1, 9f60 <fprintf@plt+0x14a0>
    9d64:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    9d68:	mov	x0, x20
    9d6c:	add	x1, x1, #0xd8
    9d70:	mov	x2, #0x8                   	// #8
    9d74:	bl	88f0 <strncasecmp@plt>
    9d78:	cbz	w0, 9d94 <fprintf@plt+0x12d4>
    9d7c:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    9d80:	mov	x0, x20
    9d84:	add	x1, x1, #0xe8
    9d88:	mov	x2, #0x8                   	// #8
    9d8c:	bl	88f0 <strncasecmp@plt>
    9d90:	cbnz	w0, 9ed4 <fprintf@plt+0x1414>
    9d94:	add	x20, x20, #0x8
    9d98:	mov	x0, #0x1                   	// #1
    9d9c:	mov	x26, #0xffffffffffffffff    	// #-1
    9da0:	str	x20, [sp, #200]
    9da4:	ldr	x1, [sp, #200]
    9da8:	ldrb	w2, [x1], #1
    9dac:	ubfiz	x3, x2, #1, #8
    9db0:	ldrh	w3, [x23, x3]
    9db4:	tbz	w3, #13, 9dcc <fprintf@plt+0x130c>
    9db8:	str	x1, [sp, #200]
    9dbc:	ldrb	w2, [x1], #1
    9dc0:	ubfiz	x3, x2, #1, #8
    9dc4:	ldrh	w3, [x23, x3]
    9dc8:	tbnz	w3, #13, 9db8 <fprintf@plt+0x12f8>
    9dcc:	cbnz	w2, 9f60 <fprintf@plt+0x14a0>
    9dd0:	umulh	x1, x26, x0
    9dd4:	cbnz	x1, af5c <fprintf@plt+0x249c>
    9dd8:	mul	x0, x26, x0
    9ddc:	adrp	x26, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    9de0:	cmp	w22, #0x1
    9de4:	str	x0, [x26, #1600]
    9de8:	b.eq	9f8c <fprintf@plt+0x14cc>  // b.none
    9dec:	cbnz	w22, ac78 <fprintf@plt+0x21b8>
    9df0:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    9df4:	ldr	x2, [x0, #1616]
    9df8:	b	9fa0 <fprintf@plt+0x14e0>
    9dfc:	mov	x1, x21
    9e00:	add	x0, x6, #0x1
    9e04:	mov	w2, #0x0                   	// #0
    9e08:	bl	85a0 <strtoul@plt>
    9e0c:	ldr	w1, [x20]
    9e10:	mov	x5, x0
    9e14:	cbnz	w1, 9ec4 <fprintf@plt+0x1404>
    9e18:	cmp	x0, x28
    9e1c:	ccmp	x24, x0, #0x2, ls  // ls = plast
    9e20:	b.hi	9ec4 <fprintf@plt+0x1404>  // b.pmore
    9e24:	ldr	x6, [sp, #200]
    9e28:	mov	x8, #0x1                   	// #1
    9e2c:	ldrb	w0, [x6]
    9e30:	cmp	w0, #0x3a
    9e34:	b.eq	9e88 <fprintf@plt+0x13c8>  // b.none
    9e38:	sub	x5, x5, x24
    9e3c:	udiv	x5, x5, x8
    9e40:	add	x1, x5, #0x1
    9e44:	cbnz	w26, 9bd8 <fprintf@plt+0x1118>
    9e48:	ldrb	w2, [x6]
    9e4c:	b	9a44 <fprintf@plt+0xf84>
    9e50:	ldrb	w0, [x6, #1]
    9e54:	add	x6, x6, #0x1
    9e58:	ldrh	w1, [x3, x0, lsl #1]
    9e5c:	mov	x0, x6
    9e60:	and	w4, w1, #0x2000
    9e64:	b	9a84 <fprintf@plt+0xfc4>
    9e68:	adrp	x23, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    9e6c:	ldr	x0, [x23, #1584]
    9e70:	bl	88b0 <free@plt>
    9e74:	str	xzr, [x23, #1584]
    9e78:	add	x0, x19, #0x2b0
    9e7c:	ldrb	w0, [x0, #26]
    9e80:	cbz	w0, 9c6c <fprintf@plt+0x11ac>
    9e84:	b	9c68 <fprintf@plt+0x11a8>
    9e88:	add	x0, x6, x8
    9e8c:	mov	x1, x21
    9e90:	mov	w2, #0x0                   	// #0
    9e94:	str	x5, [sp, #112]
    9e98:	bl	85a0 <strtoul@plt>
    9e9c:	mov	x8, x0
    9ea0:	ldr	w1, [x20]
    9ea4:	cbnz	w1, 9ec4 <fprintf@plt+0x1404>
    9ea8:	sub	x1, x0, #0x1
    9eac:	mov	x0, #0xfffe                	// #65534
    9eb0:	cmp	x1, x0
    9eb4:	b.hi	9ec4 <fprintf@plt+0x1404>  // b.pmore
    9eb8:	ldr	x5, [sp, #112]
    9ebc:	ldr	x6, [sp, #200]
    9ec0:	b	9e38 <fprintf@plt+0x1378>
    9ec4:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    9ec8:	add	x0, x0, #0x20
    9ecc:	bl	b670 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    9ed0:	b	9e78 <fprintf@plt+0x13b8>
    9ed4:	bl	8a70 <__errno_location@plt>
    9ed8:	mov	x23, x0
    9edc:	add	x1, sp, #0xc8
    9ee0:	mov	x0, x20
    9ee4:	mov	w2, #0xa                   	// #10
    9ee8:	str	wzr, [x23]
    9eec:	bl	8970 <strtoull@plt>
    9ef0:	mov	x26, x0
    9ef4:	ldr	w1, [x23]
    9ef8:	cbnz	w1, 9f60 <fprintf@plt+0x14a0>
    9efc:	ldr	x20, [sp, #200]
    9f00:	ldr	x23, [x25]
    9f04:	ldrb	w0, [x20]
    9f08:	ldrb	w2, [x20]
    9f0c:	mov	x25, x0
    9f10:	ldrh	w0, [x23, x0, lsl #1]
    9f14:	tbz	w0, #13, 9f3c <fprintf@plt+0x147c>
    9f18:	add	x1, x20, #0x1
    9f1c:	nop
    9f20:	str	x1, [sp, #200]
    9f24:	mov	x20, x1
    9f28:	ldrb	w2, [x1], #1
    9f2c:	and	x25, x2, #0xff
    9f30:	ubfiz	x0, x2, #1, #8
    9f34:	ldrh	w0, [x23, x0]
    9f38:	tbnz	w0, #13, 9f20 <fprintf@plt+0x1460>
    9f3c:	cbz	w2, af08 <fprintf@plt+0x2448>
    9f40:	bl	86a0 <__ctype_tolower_loc@plt>
    9f44:	ldr	x0, [x0]
    9f48:	ldr	w0, [x0, x25, lsl #2]
    9f4c:	cmp	w0, #0x6d
    9f50:	b.eq	af50 <fprintf@plt+0x2490>  // b.none
    9f54:	b.le	ac38 <fprintf@plt+0x2178>
    9f58:	cmp	w0, #0x74
    9f5c:	b.eq	af2c <fprintf@plt+0x246c>  // b.none
    9f60:	adrp	x0, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    9f64:	add	x1, x21, #0x80
    9f68:	add	x0, x0, #0xd40
    9f6c:	bl	b670 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    9f70:	cmp	w22, #0x1
    9f74:	b.ne	ad3c <fprintf@plt+0x227c>  // b.any
    9f78:	adrp	x26, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    9f7c:	mov	x0, #0xac00                	// #44032
    9f80:	movk	x0, #0xfc23, lsl #16
    9f84:	movk	x0, #0x6, lsl #32
    9f88:	str	x0, [x26, #1600]
    9f8c:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    9f90:	mov	x1, #0x3e8                 	// #1000
    9f94:	mov	x2, x1
    9f98:	mov	w22, #0x1                   	// #1
    9f9c:	str	x1, [x0, #1616]
    9fa0:	ldr	x1, [x26, #1600]
    9fa4:	cmp	x2, x1
    9fa8:	b.ls	9fb0 <fprintf@plt+0x14f0>  // b.plast
    9fac:	str	x1, [x0, #1616]
    9fb0:	add	x20, sp, #0xa8
    9fb4:	adrp	x21, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    9fb8:	add	x0, x21, #0x670
    9fbc:	bl	8650 <pthread_attr_init@plt>
    9fc0:	mov	x1, x20
    9fc4:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    9fc8:	add	x0, x0, #0xf8
    9fcc:	bl	93a8 <fprintf@plt+0x8e8>
    9fd0:	tst	w0, #0xff
    9fd4:	b.ne	9ff0 <fprintf@plt+0x1530>  // b.any
    9fd8:	mov	x1, x20
    9fdc:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    9fe0:	add	x0, x0, #0x108
    9fe4:	bl	93a8 <fprintf@plt+0x8e8>
    9fe8:	tst	w0, #0xff
    9fec:	b.eq	a008 <fprintf@plt+0x1548>  // b.none
    9ff0:	ldr	x1, [sp, #168]
    9ff4:	add	x0, x21, #0x670
    9ff8:	bl	8780 <pthread_attr_setstacksize@plt>
    9ffc:	cmp	w0, #0x16
    a000:	b.eq	a914 <fprintf@plt+0x1e54>  // b.none
    a004:	cbnz	w0, acfc <fprintf@plt+0x223c>
    a008:	ldr	x1, [sp, #168]
    a00c:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a010:	add	x0, x0, #0x188
    a014:	str	x1, [sp, #104]
    a018:	bl	8a80 <getenv@plt>
    a01c:	mov	x20, x0
    a020:	cbz	x0, a4ac <fprintf@plt+0x19ec>
    a024:	bl	8860 <__ctype_b_loc@plt>
    a028:	ldrb	w1, [x20]
    a02c:	ldr	x21, [x0]
    a030:	ldrh	w0, [x21, x1, lsl #1]
    a034:	tbz	w0, #13, a044 <fprintf@plt+0x1584>
    a038:	ldrb	w0, [x20, #1]!
    a03c:	ldrh	w0, [x21, x0, lsl #1]
    a040:	tbnz	w0, #13, a038 <fprintf@plt+0x1578>
    a044:	adrp	x1, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    a048:	mov	x0, x20
    a04c:	add	x1, x1, #0xd30
    a050:	mov	x2, #0x4                   	// #4
    a054:	bl	88f0 <strncasecmp@plt>
    a058:	cbnz	w0, a6cc <fprintf@plt+0x1c0c>
    a05c:	add	x20, x20, #0x4
    a060:	mov	w23, #0x1                   	// #1
    a064:	str	wzr, [sp, #112]
    a068:	ldrb	w0, [x20]
    a06c:	ubfiz	x1, x0, #1, #8
    a070:	ldrh	w1, [x21, x1]
    a074:	tbz	w1, #13, a088 <fprintf@plt+0x15c8>
    a078:	ldrb	w0, [x20, #1]!
    a07c:	ubfiz	x1, x0, #1, #8
    a080:	ldrh	w1, [x21, x1]
    a084:	tbnz	w1, #13, a078 <fprintf@plt+0x15b8>
    a088:	cbnz	w0, a5a4 <fprintf@plt+0x1ae4>
    a08c:	cbz	w23, a4ac <fprintf@plt+0x19ec>
    a090:	adrp	x20, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    a094:	mov	x2, #0x22                  	// #34
    a098:	mov	x1, #0x1                   	// #1
    a09c:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a0a0:	ldr	x21, [x20, #4040]
    a0a4:	add	x0, x0, #0x1d8
    a0a8:	add	x27, x19, #0x2b0
    a0ac:	adrp	x23, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    a0b0:	adrp	x25, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    a0b4:	add	x23, x23, #0xd78
    a0b8:	ldr	x3, [x21]
    a0bc:	add	x25, x25, #0xd70
    a0c0:	adrp	x24, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    a0c4:	bl	8980 <fwrite@plt>
    a0c8:	ldr	x3, [x21]
    a0cc:	mov	x2, #0x15                  	// #21
    a0d0:	mov	x1, #0x1                   	// #1
    a0d4:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a0d8:	add	x0, x0, #0x200
    a0dc:	bl	8980 <fwrite@plt>
    a0e0:	ldrb	w1, [x27, #24]
    a0e4:	ldr	x0, [x21]
    a0e8:	cmp	w1, #0x0
    a0ec:	csel	x2, x25, x23, ne  // ne = any
    a0f0:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a0f4:	add	x1, x1, #0x218
    a0f8:	bl	8ac0 <fprintf@plt>
    a0fc:	ldrb	w2, [x27, #25]
    a100:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a104:	ldr	x0, [x21]
    a108:	cmp	w2, #0x0
    a10c:	csel	x2, x25, x23, ne  // ne = any
    a110:	add	x1, x1, #0x230
    a114:	bl	8ac0 <fprintf@plt>
    a118:	ldr	x2, [x19, #688]
    a11c:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a120:	ldr	x0, [x21]
    a124:	add	x1, x1, #0x248
    a128:	bl	8ac0 <fprintf@plt>
    a12c:	ldr	x0, [x24, #1640]
    a130:	cmp	x0, #0x1
    a134:	b.ls	a174 <fprintf@plt+0x16b4>  // b.plast
    a138:	adrp	x25, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a13c:	add	x25, x25, #0x280
    a140:	mov	x23, x21
    a144:	adrp	x27, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    a148:	mov	x21, #0x1                   	// #1
    a14c:	nop
    a150:	ldr	x2, [x27, #1520]
    a154:	mov	x1, x25
    a158:	ldr	x0, [x23]
    a15c:	ldr	x2, [x2, x21, lsl #3]
    a160:	add	x21, x21, #0x1
    a164:	bl	8ac0 <fprintf@plt>
    a168:	ldr	x0, [x24, #1640]
    a16c:	cmp	x0, x21
    a170:	b.hi	a150 <fprintf@plt+0x1690>  // b.pmore
    a174:	ldr	x21, [x20, #4040]
    a178:	mov	x2, #0x2                   	// #2
    a17c:	mov	x1, #0x1                   	// #1
    a180:	adrp	x28, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a184:	add	x0, x28, #0x3e0
    a188:	ldr	x3, [x21]
    a18c:	bl	8980 <fwrite@plt>
    a190:	ldr	x3, [x21]
    a194:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a198:	mov	x2, #0x12                  	// #18
    a19c:	add	x0, x0, #0x268
    a1a0:	mov	x1, #0x1                   	// #1
    a1a4:	bl	8980 <fwrite@plt>
    a1a8:	add	x0, x19, #0x2b0
    a1ac:	ldr	w0, [x0, #8]
    a1b0:	tbnz	w0, #31, acb4 <fprintf@plt+0x21f4>
    a1b4:	cmp	w0, #0x1
    a1b8:	b.eq	af10 <fprintf@plt+0x2450>  // b.none
    a1bc:	add	x21, x19, #0x2b0
    a1c0:	ldr	x23, [x20, #4040]
    a1c4:	ldr	w1, [x21, #8]
    a1c8:	and	w0, w1, #0x7fffffff
    a1cc:	cmp	w0, #0x3
    a1d0:	ldr	x3, [x23]
    a1d4:	b.eq	aec8 <fprintf@plt+0x2408>  // b.none
    a1d8:	tst	w1, #0x7ffffffc
    a1dc:	b.ne	a748 <fprintf@plt+0x1c88>  // b.any
    a1e0:	cmp	w0, #0x2
    a1e4:	b.eq	aeb8 <fprintf@plt+0x23f8>  // b.none
    a1e8:	cmp	w0, #0x3
    a1ec:	b.ne	a5b4 <fprintf@plt+0x1af4>  // b.any
    a1f0:	ldr	x21, [x20, #4040]
    a1f4:	mov	x2, #0x2                   	// #2
    a1f8:	mov	x1, #0x1                   	// #1
    a1fc:	add	x0, x28, #0x3e0
    a200:	ldr	x3, [x21]
    a204:	bl	8980 <fwrite@plt>
    a208:	ldr	x3, [x21]
    a20c:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a210:	mov	x2, #0x13                  	// #19
    a214:	add	x0, x0, #0x2d8
    a218:	mov	x1, #0x1                   	// #1
    a21c:	bl	8980 <fwrite@plt>
    a220:	add	x0, x19, #0x2b0
    a224:	ldrb	w0, [x0, #26]
    a228:	cmp	w0, #0x2
    a22c:	b.eq	ae80 <fprintf@plt+0x23c0>  // b.none
    a230:	b.hi	a710 <fprintf@plt+0x1c50>  // b.pmore
    a234:	cbz	w0, ae9c <fprintf@plt+0x23dc>
    a238:	ldr	x3, [x21]
    a23c:	adrp	x0, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    a240:	mov	x2, #0x4                   	// #4
    a244:	add	x0, x0, #0xd70
    a248:	mov	x1, #0x1                   	// #1
    a24c:	bl	8980 <fwrite@plt>
    a250:	adrp	x23, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    a254:	ldr	x1, [x20, #4040]
    a258:	ldr	x0, [x23, #1544]
    a25c:	ldr	x3, [x1]
    a260:	cmp	x0, #0x1
    a264:	b.ls	a2d8 <fprintf@plt+0x1818>  // b.plast
    a268:	adrp	x27, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a26c:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a270:	add	x27, x27, #0x310
    a274:	add	x24, x1, #0x318
    a278:	mov	x21, #0x1                   	// #1
    a27c:	adrp	x25, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    a280:	b	a298 <fprintf@plt+0x17d8>
    a284:	cmp	w1, #0x2
    a288:	b.eq	a60c <fprintf@plt+0x1b4c>  // b.none
    a28c:	add	x21, x21, #0x1
    a290:	cmp	x21, x0
    a294:	b.cs	a2d8 <fprintf@plt+0x1818>  // b.hs, b.nlast
    a298:	ldr	x1, [x25, #1560]
    a29c:	ldrb	w1, [x1, x21]
    a2a0:	cmp	w1, #0x3
    a2a4:	b.eq	a5ec <fprintf@plt+0x1b2c>  // b.none
    a2a8:	cmp	w1, #0x4
    a2ac:	b.ne	a284 <fprintf@plt+0x17c4>  // b.any
    a2b0:	mov	x1, #0x1                   	// #1
    a2b4:	mov	x0, x24
    a2b8:	mov	x2, #0x7                   	// #7
    a2bc:	bl	8980 <fwrite@plt>
    a2c0:	ldr	x1, [x20, #4040]
    a2c4:	add	x21, x21, #0x1
    a2c8:	ldr	x0, [x23, #1544]
    a2cc:	ldr	x3, [x1]
    a2d0:	cmp	x21, x0
    a2d4:	b.cc	a298 <fprintf@plt+0x17d8>  // b.lo, b.ul, b.last
    a2d8:	ldr	x25, [x20, #4040]
    a2dc:	mov	x2, #0x2                   	// #2
    a2e0:	mov	x1, #0x1                   	// #1
    a2e4:	add	x0, x28, #0x3e0
    a2e8:	adrp	x24, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    a2ec:	ldr	x3, [x25]
    a2f0:	bl	8980 <fwrite@plt>
    a2f4:	ldr	x3, [x25]
    a2f8:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a2fc:	mov	x2, #0x10                  	// #16
    a300:	add	x0, x0, #0x320
    a304:	mov	x1, #0x1                   	// #1
    a308:	bl	8980 <fwrite@plt>
    a30c:	ldr	x0, [x24, #1624]
    a310:	cbz	x0, a370 <fprintf@plt+0x18b0>
    a314:	adrp	x27, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a318:	add	x27, x27, #0x358
    a31c:	mov	x21, #0x0                   	// #0
    a320:	adrp	x23, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    a324:	nop
    a328:	ldr	x1, [x25]
    a32c:	mov	w0, #0x7b                  	// #123
    a330:	bl	8660 <fputc@plt>
    a334:	ldr	x0, [x23, #1584]
    a338:	ldr	x0, [x0, x21, lsl #3]
    a33c:	add	x21, x21, #0x1
    a340:	bl	1f020 <omp_pause_resource_all_@@OMP_5.0+0xd38>
    a344:	ldr	x3, [x24, #1624]
    a348:	mov	x0, x27
    a34c:	mov	x2, #0x2                   	// #2
    a350:	mov	x1, #0x1                   	// #1
    a354:	cmp	x3, x21
    a358:	b.eq	a6f4 <fprintf@plt+0x1c34>  // b.none
    a35c:	ldr	x3, [x25]
    a360:	bl	8980 <fwrite@plt>
    a364:	ldr	x0, [x24, #1624]
    a368:	cmp	x0, x21
    a36c:	b.hi	a328 <fprintf@plt+0x1868>  // b.pmore
    a370:	ldr	x21, [x20, #4040]
    a374:	mov	x2, #0x2                   	// #2
    a378:	mov	x1, #0x1                   	// #1
    a37c:	add	x0, x28, #0x3e0
    a380:	add	x19, x19, #0x2b0
    a384:	adrp	x23, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    a388:	ldr	x3, [x21]
    a38c:	add	x23, x23, #0xd70
    a390:	bl	8980 <fwrite@plt>
    a394:	ldr	x0, [x21]
    a398:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a39c:	ldr	x2, [sp, #104]
    a3a0:	add	x1, x1, #0x338
    a3a4:	bl	8ac0 <fprintf@plt>
    a3a8:	ldr	x0, [x21]
    a3ac:	cmp	w22, #0x1
    a3b0:	adrp	x3, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    a3b4:	add	x3, x3, #0xd88
    a3b8:	adrp	x2, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    a3bc:	add	x2, x2, #0xd80
    a3c0:	csel	x2, x2, x3, eq  // eq = none
    a3c4:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a3c8:	add	x1, x1, #0x360
    a3cc:	bl	8ac0 <fprintf@plt>
    a3d0:	ldr	w2, [x19, #20]
    a3d4:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a3d8:	ldr	x0, [x21]
    a3dc:	add	x1, x1, #0x380
    a3e0:	adrp	x22, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    a3e4:	add	x22, x22, #0xd78
    a3e8:	bl	8ac0 <fprintf@plt>
    a3ec:	ldr	x0, [x21]
    a3f0:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a3f4:	ldr	x2, [x19, #40]
    a3f8:	add	x1, x1, #0x3a0
    a3fc:	bl	8ac0 <fprintf@plt>
    a400:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    a404:	ldrb	w1, [x0, #1356]
    a408:	ldr	x0, [x21]
    a40c:	cmp	w1, #0x0
    a410:	csel	x2, x23, x22, ne  // ne = any
    a414:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a418:	add	x1, x1, #0x3c8
    a41c:	bl	8ac0 <fprintf@plt>
    a420:	ldr	w2, [x19, #16]
    a424:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a428:	ldr	x0, [x21]
    a42c:	add	x1, x1, #0x3e8
    a430:	bl	8ac0 <fprintf@plt>
    a434:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    a438:	add	x24, x0, #0x54c
    a43c:	ldr	x0, [x21]
    a440:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a444:	ldr	w2, [x24, #4]
    a448:	add	x1, x1, #0x408
    a44c:	bl	8ac0 <fprintf@plt>
    a450:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    a454:	ldrb	w1, [x0, #1536]
    a458:	ldr	x0, [x21]
    a45c:	cmp	w1, #0x0
    a460:	csel	x2, x23, x22, ne  // ne = any
    a464:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a468:	add	x1, x1, #0x428
    a46c:	bl	8ac0 <fprintf@plt>
    a470:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    a474:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a478:	ldr	x0, [x21]
    a47c:	add	x1, x1, #0x448
    a480:	ldr	x2, [x2, #816]
    a484:	bl	8ac0 <fprintf@plt>
    a488:	ldr	w0, [sp, #112]
    a48c:	cbnz	w0, ad7c <fprintf@plt+0x22bc>
    a490:	ldr	x20, [x20, #4040]
    a494:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a498:	mov	x2, #0x1f                  	// #31
    a49c:	add	x0, x0, #0x4c8
    a4a0:	mov	x1, #0x1                   	// #1
    a4a4:	ldr	x3, [x20]
    a4a8:	bl	8980 <fwrite@plt>
    a4ac:	adrp	x19, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    a4b0:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a4b4:	add	x1, x19, #0x660
    a4b8:	add	x0, x0, #0x4e8
    a4bc:	mov	w2, #0x0                   	// #0
    a4c0:	bl	9548 <fprintf@plt+0xa88>
    a4c4:	tst	w0, #0xff
    a4c8:	b.ne	a4d0 <fprintf@plt+0x1a10>  // b.any
    a4cc:	str	wzr, [x19, #1632]
    a4d0:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a4d4:	add	x0, x0, #0x4f8
    a4d8:	bl	8a80 <getenv@plt>
    a4dc:	cbz	x0, a4e8 <fprintf@plt+0x1a28>
    a4e0:	ldrb	w1, [x0]
    a4e4:	cbnz	w1, a948 <fprintf@plt+0x1e88>
    a4e8:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    a4ec:	str	xzr, [x0, #1528]
    a4f0:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a4f4:	add	x0, x0, #0x508
    a4f8:	bl	8a80 <getenv@plt>
    a4fc:	mov	x19, x0
    a500:	cbz	x0, a584 <fprintf@plt+0x1ac4>
    a504:	ldrb	w0, [x0]
    a508:	mov	x21, #0x1                   	// #1
    a50c:	cbz	w0, a584 <fprintf@plt+0x1ac4>
    a510:	adrp	x22, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    a514:	add	x23, sp, #0xc8
    a518:	add	x22, x22, #0x61c
    a51c:	ldrb	w0, [x19]
    a520:	cmp	w0, #0x3a
    a524:	b.eq	a564 <fprintf@plt+0x1aa4>  // b.none
    a528:	bl	8a70 <__errno_location@plt>
    a52c:	mov	x20, x0
    a530:	mov	x1, x23
    a534:	mov	x0, x19
    a538:	mov	w2, #0xa                   	// #10
    a53c:	str	wzr, [x20]
    a540:	bl	8870 <strtol@plt>
    a544:	ldr	w1, [x20]
    a548:	cmp	w1, #0x0
    a54c:	ccmp	x0, #0x0, #0x1, eq  // eq = none
    a550:	b.lt	a584 <fprintf@plt+0x1ac4>  // b.tstop
    a554:	tst	x0, #0xffffffff00000000
    a558:	b.ne	a584 <fprintf@plt+0x1ac4>  // b.any
    a55c:	ldr	x19, [sp, #200]
    a560:	str	w0, [x22, x21, lsl #2]
    a564:	ldrb	w0, [x19]
    a568:	add	x19, x19, #0x1
    a56c:	cmp	w0, #0x0
    a570:	ccmp	w21, #0x3, #0x4, ne  // ne = any
    a574:	b.eq	a584 <fprintf@plt+0x1ac4>  // b.none
    a578:	add	x21, x21, #0x1
    a57c:	cmp	w0, #0x3a
    a580:	b.eq	a51c <fprintf@plt+0x1a5c>  // b.none
    a584:	bl	27f50 <acc_on_device@@OACC_2.0+0x10>
    a588:	ldp	x19, x20, [sp, #16]
    a58c:	ldp	x21, x22, [sp, #32]
    a590:	ldp	x23, x24, [sp, #48]
    a594:	ldp	x25, x26, [sp, #64]
    a598:	ldp	x27, x28, [sp, #80]
    a59c:	ldp	x29, x30, [sp], #208
    a5a0:	ret
    a5a4:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a5a8:	add	x0, x0, #0x1a0
    a5ac:	bl	b670 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    a5b0:	b	a08c <fprintf@plt+0x15cc>
    a5b4:	cbnz	w0, a73c <fprintf@plt+0x1c7c>
    a5b8:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a5bc:	add	x0, x0, #0x2a8
    a5c0:	mov	x2, #0x7                   	// #7
    a5c4:	mov	x1, #0x1                   	// #1
    a5c8:	bl	8980 <fwrite@plt>
    a5cc:	ldr	w2, [x21, #12]
    a5d0:	cmp	w2, #0x1
    a5d4:	b.eq	a1f0 <fprintf@plt+0x1730>  // b.none
    a5d8:	ldr	x0, [x23]
    a5dc:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a5e0:	add	x1, x1, #0x2b0
    a5e4:	bl	8ac0 <fprintf@plt>
    a5e8:	b	a1f0 <fprintf@plt+0x1730>
    a5ec:	mov	x1, #0x1                   	// #1
    a5f0:	mov	x0, x27
    a5f4:	mov	x2, #0x6                   	// #6
    a5f8:	bl	8980 <fwrite@plt>
    a5fc:	ldr	x1, [x20, #4040]
    a600:	ldr	x0, [x23, #1544]
    a604:	ldr	x3, [x1]
    a608:	b	a28c <fprintf@plt+0x17cc>
    a60c:	mov	x1, #0x1                   	// #1
    a610:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a614:	mov	x2, #0x7                   	// #7
    a618:	add	x0, x0, #0x308
    a61c:	bl	8980 <fwrite@plt>
    a620:	ldr	x1, [x20, #4040]
    a624:	ldr	x0, [x23, #1544]
    a628:	ldr	x3, [x1]
    a62c:	b	a28c <fprintf@plt+0x17cc>
    a630:	mov	w0, #0x3                   	// #3
    a634:	ldrb	w4, [x25, x21]
    a638:	sxtw	x1, w0
    a63c:	add	x0, x19, #0x2b0
    a640:	mov	x5, #0xc                   	// #12
    a644:	ldrb	w2, [x25, x21]
    a648:	add	x3, x25, x21
    a64c:	madd	x0, x1, x5, x0
    a650:	ldrh	w1, [x20, x4, lsl #1]
    a654:	ldrb	w24, [x0, #64]
    a658:	tbz	w1, #13, a670 <fprintf@plt+0x1bb0>
    a65c:	nop
    a660:	ldrb	w2, [x3, #1]!
    a664:	ubfiz	x0, x2, #1, #8
    a668:	ldrh	w0, [x20, x0]
    a66c:	tbnz	w0, #13, a660 <fprintf@plt+0x1ba0>
    a670:	cbz	w2, a97c <fprintf@plt+0x1ebc>
    a674:	cmp	w24, #0x1
    a678:	cset	w25, ls  // ls = plast
    a67c:	cmp	w2, #0x2c
    a680:	csinc	w25, w25, wzr, eq  // eq = none
    a684:	cbz	w25, ab20 <fprintf@plt+0x2060>
    a688:	mov	x22, #0x0                   	// #0
    a68c:	b	98a0 <fprintf@plt+0xde0>
    a690:	adrp	x21, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a694:	add	x0, x21, #0x80
    a698:	bl	8a80 <getenv@plt>
    a69c:	mov	x20, x0
    a6a0:	cbnz	x0, 9d30 <fprintf@plt+0x1270>
    a6a4:	b	9f70 <fprintf@plt+0x14b0>
    a6a8:	mov	x0, x20
    a6ac:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a6b0:	mov	x2, #0x7                   	// #7
    a6b4:	add	x1, x1, #0x98
    a6b8:	bl	88f0 <strncasecmp@plt>
    a6bc:	mov	w22, w0
    a6c0:	cbnz	w0, a998 <fprintf@plt+0x1ed8>
    a6c4:	add	x20, x20, #0x7
    a6c8:	b	9ce4 <fprintf@plt+0x1224>
    a6cc:	adrp	x1, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    a6d0:	mov	x0, x20
    a6d4:	add	x1, x1, #0xd38
    a6d8:	mov	x2, #0x5                   	// #5
    a6dc:	bl	88f0 <strncasecmp@plt>
    a6e0:	cbnz	w0, a9a8 <fprintf@plt+0x1ee8>
    a6e4:	add	x20, x20, #0x5
    a6e8:	mov	w23, #0x0                   	// #0
    a6ec:	str	wzr, [sp, #112]
    a6f0:	b	a068 <fprintf@plt+0x15a8>
    a6f4:	ldr	x1, [x25]
    a6f8:	mov	w0, #0x7d                  	// #125
    a6fc:	bl	8660 <fputc@plt>
    a700:	ldr	x0, [x24, #1624]
    a704:	cmp	x0, x21
    a708:	b.hi	a328 <fprintf@plt+0x1868>  // b.pmore
    a70c:	b	a370 <fprintf@plt+0x18b0>
    a710:	cmp	w0, #0x3
    a714:	b.eq	ae64 <fprintf@plt+0x23a4>  // b.none
    a718:	cmp	w0, #0x4
    a71c:	b.ne	a250 <fprintf@plt+0x1790>  // b.any
    a720:	ldr	x3, [x21]
    a724:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a728:	mov	x2, #0x6                   	// #6
    a72c:	mov	x1, #0x1                   	// #1
    a730:	add	x0, x0, #0x300
    a734:	bl	8980 <fwrite@plt>
    a738:	b	a250 <fprintf@plt+0x1790>
    a73c:	cmp	w0, #0x1
    a740:	b.ne	a1f0 <fprintf@plt+0x1730>  // b.any
    a744:	b	acc0 <fprintf@plt+0x2200>
    a748:	cmp	w0, #0x4
    a74c:	b.ne	a1f0 <fprintf@plt+0x1730>  // b.any
    a750:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a754:	mov	x2, #0x4                   	// #4
    a758:	mov	x1, #0x1                   	// #1
    a75c:	add	x0, x0, #0x2d0
    a760:	bl	8980 <fwrite@plt>
    a764:	b	a1f0 <fprintf@plt+0x1730>
    a768:	ldrb	w0, [x20, #1]
    a76c:	add	x20, x20, #0x1
    a770:	ldrh	w0, [x22, x0, lsl #1]
    a774:	tbz	w0, #13, a784 <fprintf@plt+0x1cc4>
    a778:	ldrb	w0, [x20, #1]!
    a77c:	ldrh	w0, [x22, x0, lsl #1]
    a780:	tbnz	w0, #13, a778 <fprintf@plt+0x1cb8>
    a784:	adrp	x1, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    a788:	mov	x0, x20
    a78c:	add	x1, x1, #0xdc0
    a790:	mov	x2, #0x6                   	// #6
    a794:	bl	88f0 <strncasecmp@plt>
    a798:	cbnz	w0, a8cc <fprintf@plt+0x1e0c>
    a79c:	adrp	x19, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    a7a0:	add	x0, x19, #0x2b0
    a7a4:	add	x20, x20, #0x6
    a7a8:	mov	w1, #0x1                   	// #1
    a7ac:	str	w1, [x0, #8]
    a7b0:	cmp	w21, #0x1
    a7b4:	b.eq	a968 <fprintf@plt+0x1ea8>  // b.none
    a7b8:	cbz	w21, a958 <fprintf@plt+0x1e98>
    a7bc:	ldrb	w0, [x20]
    a7c0:	ldrb	w1, [x20]
    a7c4:	ldrh	w0, [x22, x0, lsl #1]
    a7c8:	tbz	w0, #13, a7e0 <fprintf@plt+0x1d20>
    a7cc:	nop
    a7d0:	ldrb	w1, [x20, #1]!
    a7d4:	ubfiz	x0, x1, #1, #8
    a7d8:	ldrh	w0, [x22, x0]
    a7dc:	tbnz	w0, #13, a7d0 <fprintf@plt+0x1d10>
    a7e0:	cbz	w1, ac98 <fprintf@plt+0x21d8>
    a7e4:	cmp	w1, #0x2c
    a7e8:	b.ne	9674 <fprintf@plt+0xbb4>  // b.any
    a7ec:	ldrb	w0, [x20, #1]
    a7f0:	add	x21, x20, #0x1
    a7f4:	ldrb	w1, [x20, #1]
    a7f8:	ldrh	w0, [x22, x0, lsl #1]
    a7fc:	tbz	w0, #13, a810 <fprintf@plt+0x1d50>
    a800:	ldrb	w1, [x21, #1]!
    a804:	ubfiz	x0, x1, #1, #8
    a808:	ldrh	w0, [x22, x0]
    a80c:	tbnz	w0, #13, a800 <fprintf@plt+0x1d40>
    a810:	cbz	w1, ac58 <fprintf@plt+0x2198>
    a814:	bl	8a70 <__errno_location@plt>
    a818:	mov	x20, x0
    a81c:	add	x1, sp, #0xc8
    a820:	mov	x0, x21
    a824:	mov	w2, #0xa                   	// #10
    a828:	str	wzr, [x20]
    a82c:	bl	85a0 <strtoul@plt>
    a830:	ldr	w1, [x20]
    a834:	cbnz	w1, ac58 <fprintf@plt+0x2198>
    a838:	ldr	x5, [x23]
    a83c:	b	a844 <fprintf@plt+0x1d84>
    a840:	str	x3, [sp, #200]
    a844:	ldr	x1, [sp, #200]
    a848:	add	x3, x1, #0x1
    a84c:	ldrb	w2, [x1]
    a850:	ldrb	w4, [x1]
    a854:	ldrh	w1, [x5, x2, lsl #1]
    a858:	tbnz	w1, #13, a840 <fprintf@plt+0x1d80>
    a85c:	cbnz	w4, ac58 <fprintf@plt+0x2198>
    a860:	cmp	x0, w0, sxtw
    a864:	b.ne	ac58 <fprintf@plt+0x2198>  // b.any
    a868:	cbnz	x0, a880 <fprintf@plt+0x1dc0>
    a86c:	add	x0, x19, #0x2b0
    a870:	ldr	w0, [x0, #8]
    a874:	and	w0, w0, #0x7fffffff
    a878:	cmp	w0, #0x1
    a87c:	cset	x0, ne  // ne = any
    a880:	add	x1, x19, #0x2b0
    a884:	str	w0, [x1, #12]
    a888:	b	9680 <fprintf@plt+0xbc0>
    a88c:	adrp	x1, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    a890:	mov	x0, x28
    a894:	add	x1, x1, #0xf98
    a898:	mov	x2, #0x5                   	// #5
    a89c:	bl	88f0 <strncasecmp@plt>
    a8a0:	cbz	w0, a9dc <fprintf@plt+0x1f1c>
    a8a4:	adrp	x1, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    a8a8:	mov	x0, x28
    a8ac:	add	x1, x1, #0xfa0
    a8b0:	mov	x2, #0x7                   	// #7
    a8b4:	bl	88f0 <strncasecmp@plt>
    a8b8:	cbnz	w0, ade4 <fprintf@plt+0x2324>
    a8bc:	add	x0, x28, #0x7
    a8c0:	mov	w26, #0x3                   	// #3
    a8c4:	str	x0, [sp, #176]
    a8c8:	b	9938 <fprintf@plt+0xe78>
    a8cc:	adrp	x1, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    a8d0:	mov	x0, x20
    a8d4:	add	x1, x1, #0xdc8
    a8d8:	mov	x2, #0x7                   	// #7
    a8dc:	bl	88f0 <strncasecmp@plt>
    a8e0:	cbz	w0, a9ec <fprintf@plt+0x1f2c>
    a8e4:	adrp	x1, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    a8e8:	mov	x0, x20
    a8ec:	add	x1, x1, #0xdd0
    a8f0:	mov	x2, #0x6                   	// #6
    a8f4:	bl	88f0 <strncasecmp@plt>
    a8f8:	cbnz	w0, aed8 <fprintf@plt+0x2418>
    a8fc:	adrp	x19, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    a900:	add	x0, x19, #0x2b0
    a904:	mov	w1, #0x3                   	// #3
    a908:	add	x20, x20, #0x6
    a90c:	str	w1, [x0, #8]
    a910:	b	a7b0 <fprintf@plt+0x1cf0>
    a914:	ldr	x1, [sp, #168]
    a918:	mov	x0, #0x1ffff               	// #131071
    a91c:	cmp	x1, x0
    a920:	b.hi	aa04 <fprintf@plt+0x1f44>  // b.pmore
    a924:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a928:	mov	x1, #0x80                  	// #128
    a92c:	add	x0, x0, #0x118
    a930:	bl	b670 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    a934:	b	a008 <fprintf@plt+0x1548>
    a938:	mov	x1, #0xffffffffffffffff    	// #-1
    a93c:	cbz	w25, aaf0 <fprintf@plt+0x2030>
    a940:	mov	w25, #0x1                   	// #1
    a944:	b	99a8 <fprintf@plt+0xee8>
    a948:	bl	87d0 <strdup@plt>
    a94c:	adrp	x1, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    a950:	str	x0, [x1, #1528]
    a954:	b	a4f0 <fprintf@plt+0x1a30>
    a958:	add	x0, x19, #0x2b0
    a95c:	ldr	w0, [x0, #8]
    a960:	cmp	w0, #0x1
    a964:	b.ne	a7bc <fprintf@plt+0x1cfc>  // b.any
    a968:	add	x1, x19, #0x2b0
    a96c:	ldr	w0, [x1, #8]
    a970:	orr	w0, w0, #0x80000000
    a974:	str	w0, [x1, #8]
    a978:	b	a7bc <fprintf@plt+0x1cfc>
    a97c:	add	x0, x19, #0x2b0
    a980:	strb	w24, [x0, #26]
    a984:	add	x0, x19, #0x2b0
    a988:	ldrb	w0, [x0, #26]
    a98c:	cmp	w0, #0x0
    a990:	cset	w25, eq  // eq = none
    a994:	b	98bc <fprintf@plt+0xdfc>
    a998:	adrp	x20, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    a99c:	mov	w22, #0xffffffff            	// #-1
    a9a0:	add	x20, x20, #0xd28
    a9a4:	b	9ce4 <fprintf@plt+0x1224>
    a9a8:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    a9ac:	mov	x0, x20
    a9b0:	add	x1, x1, #0x198
    a9b4:	mov	x2, #0x7                   	// #7
    a9b8:	bl	88f0 <strncasecmp@plt>
    a9bc:	cbnz	w0, aadc <fprintf@plt+0x201c>
    a9c0:	mov	w0, #0x1                   	// #1
    a9c4:	add	x20, x20, #0x7
    a9c8:	mov	w23, w0
    a9cc:	str	w0, [sp, #112]
    a9d0:	b	a068 <fprintf@plt+0x15a8>
    a9d4:	mov	w21, #0x0                   	// #0
    a9d8:	b	a784 <fprintf@plt+0x1cc4>
    a9dc:	add	x0, x28, #0x5
    a9e0:	mov	w26, #0x2                   	// #2
    a9e4:	str	x0, [sp, #176]
    a9e8:	b	9938 <fprintf@plt+0xe78>
    a9ec:	adrp	x19, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    a9f0:	add	x0, x19, #0x2b0
    a9f4:	mov	w1, #0x2                   	// #2
    a9f8:	add	x20, x20, #0x7
    a9fc:	str	w1, [x0, #8]
    aa00:	b	a7b0 <fprintf@plt+0x1cf0>
    aa04:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    aa08:	add	x0, x0, #0x140
    aa0c:	bl	b670 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    aa10:	b	a008 <fprintf@plt+0x1548>
    aa14:	ldrb	w0, [x1, #1]
    aa18:	ldrh	w0, [x23, x0, lsl #1]
    aa1c:	tbz	w0, #13, aa40 <fprintf@plt+0x1f80>
    aa20:	add	x1, x1, #0x2
    aa24:	nop
    aa28:	mov	x22, x1
    aa2c:	str	x1, [sp, #176]
    aa30:	add	x1, x1, #0x1
    aa34:	ldrb	w0, [x22]
    aa38:	ldrh	w0, [x23, x0, lsl #1]
    aa3c:	tbnz	w0, #13, aa28 <fprintf@plt+0x1f68>
    aa40:	bl	8a70 <__errno_location@plt>
    aa44:	mov	x23, x0
    aa48:	add	x1, sp, #0xb8
    aa4c:	mov	w2, #0xa                   	// #10
    aa50:	mov	x0, x22
    aa54:	str	wzr, [x23]
    aa58:	bl	85a0 <strtoul@plt>
    aa5c:	mov	x1, x0
    aa60:	ldr	w2, [x23]
    aa64:	cbnz	w2, 9980 <fprintf@plt+0xec0>
    aa68:	ldr	x6, [sp, #184]
    aa6c:	str	x6, [sp, #176]
    aa70:	ldr	x5, [x21]
    aa74:	ldrb	w0, [x6]
    aa78:	ldrb	w3, [x6]
    aa7c:	ldrh	w0, [x5, x0, lsl #1]
    aa80:	tbz	w0, #13, aaa0 <fprintf@plt+0x1fe0>
    aa84:	add	x2, x6, #0x1
    aa88:	str	x2, [sp, #176]
    aa8c:	mov	x6, x2
    aa90:	ldrb	w3, [x2], #1
    aa94:	ubfiz	x4, x3, #1, #8
    aa98:	ldrh	w4, [x5, x4]
    aa9c:	tbnz	w4, #13, aa88 <fprintf@plt+0x1fc8>
    aaa0:	cmp	w3, #0x29
    aaa4:	b.ne	9980 <fprintf@plt+0xec0>  // b.any
    aaa8:	add	x6, x6, #0x1
    aaac:	str	x6, [sp, #176]
    aab0:	b	aab8 <fprintf@plt+0x1ff8>
    aab4:	str	x0, [sp, #176]
    aab8:	ldr	x2, [sp, #176]
    aabc:	add	x0, x2, #0x1
    aac0:	ldrb	w3, [x2]
    aac4:	ldrb	w4, [x2]
    aac8:	ldrh	w2, [x5, x3, lsl #1]
    aacc:	tbnz	w2, #13, aab4 <fprintf@plt+0x1ff4>
    aad0:	cbnz	w4, 9980 <fprintf@plt+0xec0>
    aad4:	cbnz	w25, a940 <fprintf@plt+0x1e80>
    aad8:	b	aaf0 <fprintf@plt+0x2030>
    aadc:	adrp	x20, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    aae0:	mov	w23, #0x0                   	// #0
    aae4:	add	x20, x20, #0xd28
    aae8:	str	wzr, [sp, #112]
    aaec:	b	a068 <fprintf@plt+0x15a8>
    aaf0:	mov	w0, w26
    aaf4:	mov	w2, #0x0                   	// #0
    aaf8:	bl	1edd8 <omp_pause_resource_all_@@OMP_5.0+0xaf0>
    aafc:	ands	w25, w0, #0xff
    ab00:	b.eq	99a8 <fprintf@plt+0xee8>  // b.none
    ab04:	add	x0, x19, #0x2b0
    ab08:	ldrb	w1, [x0, #26]
    ab0c:	cbnz	w1, a940 <fprintf@plt+0x1e80>
    ab10:	mov	w1, #0x1                   	// #1
    ab14:	mov	w25, #0x1                   	// #1
    ab18:	strb	w1, [x0, #26]
    ab1c:	b	99a8 <fprintf@plt+0xee8>
    ab20:	add	x0, x19, #0x2b0
    ab24:	str	x0, [sp, #104]
    ab28:	add	x23, x0, #0x38
    ab2c:	add	x0, x0, #0x50
    ab30:	str	x0, [sp, #120]
    ab34:	mov	x27, #0x0                   	// #0
    ab38:	mov	x21, #0x0                   	// #0
    ab3c:	add	x28, x3, #0x1
    ab40:	cmp	x21, x27
    ab44:	mov	x22, #0x0                   	// #0
    ab48:	b.eq	ac10 <fprintf@plt+0x2150>  // b.none
    ab4c:	nop
    ab50:	ldrb	w0, [x3, #1]
    ab54:	ubfiz	x1, x0, #1, #8
    ab58:	ldrh	w1, [x20, x1]
    ab5c:	tbz	w1, #13, ab70 <fprintf@plt+0x20b0>
    ab60:	ldrb	w0, [x28, #1]!
    ab64:	ubfiz	x1, x0, #1, #8
    ab68:	ldrh	w1, [x20, x1]
    ab6c:	tbnz	w1, #13, ab60 <fprintf@plt+0x20a0>
    ab70:	cbz	w0, 98a0 <fprintf@plt+0xde0>
    ab74:	ldr	x1, [sp, #120]
    ab78:	mov	x0, x28
    ab7c:	ldrb	w24, [x23, #31]
    ab80:	mov	x2, x24
    ab84:	bl	88f0 <strncasecmp@plt>
    ab88:	cbz	w0, afb8 <fprintf@plt+0x24f8>
    ab8c:	ldr	x0, [sp, #104]
    ab90:	ldrb	w24, [x23, #43]
    ab94:	add	x1, x0, #0x5c
    ab98:	mov	x0, x28
    ab9c:	mov	x2, x24
    aba0:	bl	88f0 <strncasecmp@plt>
    aba4:	cbz	w0, afc4 <fprintf@plt+0x2504>
    aba8:	ldrb	w2, [x23, #55]
    abac:	ldr	x0, [sp, #104]
    abb0:	str	x2, [sp, #112]
    abb4:	add	x1, x0, #0x68
    abb8:	mov	x0, x28
    abbc:	bl	88f0 <strncasecmp@plt>
    abc0:	ldr	x2, [sp, #112]
    abc4:	cbnz	w0, 98a0 <fprintf@plt+0xde0>
    abc8:	ldrb	w24, [x23, #56]
    abcc:	add	x3, x28, x2
    abd0:	strb	w24, [x22, x21]
    abd4:	add	x21, x21, #0x1
    abd8:	ldrb	w0, [x3]
    abdc:	ubfiz	x1, x0, #1, #8
    abe0:	ldrh	w1, [x20, x1]
    abe4:	tbz	w1, #13, abf8 <fprintf@plt+0x2138>
    abe8:	ldrb	w0, [x3, #1]!
    abec:	ubfiz	x1, x0, #1, #8
    abf0:	ldrh	w1, [x20, x1]
    abf4:	tbnz	w1, #13, abe8 <fprintf@plt+0x2128>
    abf8:	cbz	w0, afe0 <fprintf@plt+0x2520>
    abfc:	cmp	w0, #0x2c
    ac00:	b.ne	98a0 <fprintf@plt+0xde0>  // b.any
    ac04:	add	x28, x3, #0x1
    ac08:	cmp	x21, x27
    ac0c:	b.ne	ab50 <fprintf@plt+0x2090>  // b.any
    ac10:	str	x3, [sp, #112]
    ac14:	cbz	x27, ad14 <fprintf@plt+0x2254>
    ac18:	lsl	x27, x27, #1
    ac1c:	mov	x0, x22
    ac20:	mov	x1, x27
    ac24:	bl	87c0 <realloc@plt>
    ac28:	ldr	x3, [sp, #112]
    ac2c:	cbz	x0, b1b8 <fprintf@plt+0x26f8>
    ac30:	mov	x22, x0
    ac34:	b	ab50 <fprintf@plt+0x2090>
    ac38:	cmp	w0, #0x67
    ac3c:	b.eq	af44 <fprintf@plt+0x2484>  // b.none
    ac40:	cmp	w0, #0x6b
    ac44:	mov	x0, #0x3e8                 	// #1000
    ac48:	b.ne	9f60 <fprintf@plt+0x14a0>  // b.any
    ac4c:	add	x20, x20, #0x1
    ac50:	str	x20, [sp, #200]
    ac54:	b	9da4 <fprintf@plt+0x12e4>
    ac58:	adrp	x0, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    ac5c:	add	x0, x0, #0xe18
    ac60:	bl	b670 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    ac64:	b	9680 <fprintf@plt+0xbc0>
    ac68:	adrp	x26, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    ac6c:	mov	x0, #0x93e0                	// #37856
    ac70:	movk	x0, #0x4, lsl #16
    ac74:	str	x0, [x26, #1600]
    ac78:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    ac7c:	mov	x1, #0x64                  	// #100
    ac80:	mov	w22, #0xffffffff            	// #-1
    ac84:	mov	x2, x1
    ac88:	str	x1, [x0, #1616]
    ac8c:	b	9fa0 <fprintf@plt+0x14e0>
    ac90:	mov	w25, #0x0                   	// #0
    ac94:	b	98bc <fprintf@plt+0xdfc>
    ac98:	add	x1, x19, #0x2b0
    ac9c:	ldr	w0, [x1, #8]
    aca0:	and	w0, w0, #0x7fffffff
    aca4:	cmp	w0, #0x1
    aca8:	cset	w0, ne  // ne = any
    acac:	str	w0, [x1, #12]
    acb0:	b	9680 <fprintf@plt+0xbc0>
    acb4:	mov	w1, #0x80000001            	// #-2147483647
    acb8:	cmp	w0, w1
    acbc:	b.ne	adc8 <fprintf@plt+0x2308>  // b.any
    acc0:	ldr	x21, [x20, #4040]
    acc4:	mov	x2, #0x6                   	// #6
    acc8:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    accc:	mov	x1, #0x1                   	// #1
    acd0:	add	x0, x0, #0x2b8
    acd4:	ldr	x3, [x21]
    acd8:	bl	8980 <fwrite@plt>
    acdc:	add	x0, x19, #0x2b0
    ace0:	ldr	w2, [x0, #12]
    ace4:	cbz	w2, a1f0 <fprintf@plt+0x1730>
    ace8:	ldr	x0, [x21]
    acec:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    acf0:	add	x1, x1, #0x2b0
    acf4:	bl	8ac0 <fprintf@plt>
    acf8:	b	a1f0 <fprintf@plt+0x1730>
    acfc:	bl	87e0 <strerror@plt>
    ad00:	mov	x1, x0
    ad04:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    ad08:	add	x0, x0, #0x168
    ad0c:	bl	b670 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    ad10:	b	a008 <fprintf@plt+0x1548>
    ad14:	mov	x0, x22
    ad18:	mov	x1, #0x10                  	// #16
    ad1c:	bl	87c0 <realloc@plt>
    ad20:	cbz	x0, b1b8 <fprintf@plt+0x26f8>
    ad24:	mov	x22, x0
    ad28:	mov	x27, #0x10                  	// #16
    ad2c:	mov	x21, #0x1                   	// #1
    ad30:	strb	w24, [x0]
    ad34:	ldr	x3, [sp, #112]
    ad38:	b	ab50 <fprintf@plt+0x2090>
    ad3c:	cbnz	w22, ac68 <fprintf@plt+0x21a8>
    ad40:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    ad44:	adrp	x26, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    ad48:	ldr	x2, [x0, #1616]
    ad4c:	b	9fa0 <fprintf@plt+0x14e0>
    ad50:	cbnz	w25, 9e78 <fprintf@plt+0x13b8>
    ad54:	adrp	x24, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    ad58:	adrp	x23, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    ad5c:	mov	x0, x27
    ad60:	mov	w1, #0x1                   	// #1
    ad64:	str	xzr, [x24, #1624]
    ad68:	bl	1e770 <omp_pause_resource_all_@@OMP_5.0+0x488>
    ad6c:	str	x0, [x23, #1584]
    ad70:	mov	w26, #0x1                   	// #1
    ad74:	cbnz	x0, 99dc <fprintf@plt+0xf1c>
    ad78:	b	9e78 <fprintf@plt+0x13b8>
    ad7c:	ldr	x3, [x21]
    ad80:	mov	x2, #0x19                  	// #25
    ad84:	mov	x1, #0x1                   	// #1
    ad88:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    ad8c:	add	x0, x0, #0x468
    ad90:	bl	8980 <fwrite@plt>
    ad94:	ldr	x0, [x21]
    ad98:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    ad9c:	ldr	x2, [sp, #104]
    ada0:	add	x1, x1, #0x488
    ada4:	bl	8ac0 <fprintf@plt>
    ada8:	ldr	x2, [x26, #1600]
    adac:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    adb0:	ldr	x0, [x21]
    adb4:	add	x1, x1, #0x4a8
    adb8:	bl	8ac0 <fprintf@plt>
    adbc:	b	a490 <fprintf@plt+0x19d0>
    adc0:	str	x27, [x19, #688]
    adc4:	b	97dc <fprintf@plt+0xd1c>
    adc8:	ldr	x3, [x21]
    adcc:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    add0:	mov	x2, #0xa                   	// #10
    add4:	mov	x1, #0x1                   	// #1
    add8:	add	x0, x0, #0x288
    addc:	bl	8980 <fwrite@plt>
    ade0:	b	a1bc <fprintf@plt+0x16fc>
    ade4:	add	x21, sp, #0xc8
    ade8:	add	x23, sp, #0xb8
    adec:	add	x26, sp, #0xc0
    adf0:	add	x22, sp, #0x9f
    adf4:	mov	x27, #0x0                   	// #0
    adf8:	mov	w24, #0x0                   	// #0
    adfc:	str	x28, [sp, #184]
    ae00:	b	ae34 <fprintf@plt+0x2374>
    ae04:	cbnz	w24, ae18 <fprintf@plt+0x2358>
    ae08:	add	x27, x27, #0x1
    ae0c:	mov	w24, w0
    ae10:	cmp	x27, #0x10, lsl #12
    ae14:	b.hi	9980 <fprintf@plt+0xec0>  // b.pmore
    ae18:	ldr	x0, [sp, #184]
    ae1c:	add	x1, x0, #0x1
    ae20:	ldrb	w0, [x0]
    ae24:	cmp	w0, #0x2c
    ae28:	cbz	w0, b000 <fprintf@plt+0x2540>
    ae2c:	b.ne	9980 <fprintf@plt+0xec0>  // b.any
    ae30:	str	x1, [sp, #184]
    ae34:	mov	x3, x21
    ae38:	mov	x2, x26
    ae3c:	mov	x1, x22
    ae40:	mov	x0, x23
    ae44:	bl	8de8 <fprintf@plt+0x328>
    ae48:	tst	w0, #0xff
    ae4c:	b.eq	9980 <fprintf@plt+0xec0>  // b.none
    ae50:	ldrb	w0, [sp, #159]
    ae54:	cbnz	w0, ae04 <fprintf@plt+0x2344>
    ae58:	ldr	x0, [sp, #192]
    ae5c:	add	x27, x27, x0
    ae60:	b	ae10 <fprintf@plt+0x2350>
    ae64:	ldr	x3, [x21]
    ae68:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    ae6c:	mov	x2, #0x5                   	// #5
    ae70:	mov	x1, #0x1                   	// #1
    ae74:	add	x0, x0, #0x2f8
    ae78:	bl	8980 <fwrite@plt>
    ae7c:	b	a250 <fprintf@plt+0x1790>
    ae80:	ldr	x3, [x21]
    ae84:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    ae88:	mov	x2, #0x6                   	// #6
    ae8c:	mov	x1, #0x1                   	// #1
    ae90:	add	x0, x0, #0x2f0
    ae94:	bl	8980 <fwrite@plt>
    ae98:	b	a250 <fprintf@plt+0x1790>
    ae9c:	ldr	x3, [x21]
    aea0:	adrp	x0, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    aea4:	mov	x2, #0x5                   	// #5
    aea8:	mov	x1, #0x1                   	// #1
    aeac:	add	x0, x0, #0xd78
    aeb0:	bl	8980 <fwrite@plt>
    aeb4:	b	a250 <fprintf@plt+0x1790>
    aeb8:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    aebc:	mov	x2, #0x7                   	// #7
    aec0:	add	x0, x0, #0x2c0
    aec4:	b	a5c4 <fprintf@plt+0x1b04>
    aec8:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    aecc:	mov	x2, #0x6                   	// #6
    aed0:	add	x0, x0, #0x2c8
    aed4:	b	a5c4 <fprintf@plt+0x1b04>
    aed8:	mov	x0, x20
    aedc:	adrp	x1, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    aee0:	mov	x2, #0x4                   	// #4
    aee4:	add	x1, x1, #0xdd8
    aee8:	adrp	x19, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    aeec:	bl	88f0 <strncasecmp@plt>
    aef0:	cbnz	w0, 9674 <fprintf@plt+0xbb4>
    aef4:	add	x0, x19, #0x2b0
    aef8:	mov	w1, #0x4                   	// #4
    aefc:	add	x20, x20, #0x4
    af00:	str	w1, [x0, #8]
    af04:	b	a7b0 <fprintf@plt+0x1cf0>
    af08:	mov	x0, #0x1                   	// #1
    af0c:	b	9dd8 <fprintf@plt+0x1318>
    af10:	ldr	x3, [x21]
    af14:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    af18:	mov	x2, #0xd                   	// #13
    af1c:	mov	x1, #0x1                   	// #1
    af20:	add	x0, x0, #0x298
    af24:	bl	8980 <fwrite@plt>
    af28:	b	a1bc <fprintf@plt+0x16fc>
    af2c:	mov	x0, #0x1000                	// #4096
    af30:	movk	x0, #0xd4a5, lsl #16
    af34:	movk	x0, #0xe8, lsl #32
    af38:	b	ac4c <fprintf@plt+0x218c>
    af3c:	mov	w0, #0x1                   	// #1
    af40:	b	a634 <fprintf@plt+0x1b74>
    af44:	mov	x0, #0xca00                	// #51712
    af48:	movk	x0, #0x3b9a, lsl #16
    af4c:	b	ac4c <fprintf@plt+0x218c>
    af50:	mov	x0, #0x4240                	// #16960
    af54:	movk	x0, #0xf, lsl #16
    af58:	b	ac4c <fprintf@plt+0x218c>
    af5c:	mov	x0, #0xffffffffffffffff    	// #-1
    af60:	b	9ddc <fprintf@plt+0x131c>
    af64:	cbz	x20, af8c <fprintf@plt+0x24cc>
    af68:	lsl	x1, x20, #4
    af6c:	mov	x0, x24
    af70:	bl	87c0 <realloc@plt>
    af74:	lsl	x1, x20, #1
    af78:	cbz	x0, b1d4 <fprintf@plt+0x2714>
    af7c:	mov	x24, x0
    af80:	str	x1, [sp, #104]
    af84:	ldr	x4, [x26]
    af88:	b	9b40 <fprintf@plt+0x1080>
    af8c:	mov	x0, x24
    af90:	mov	x1, #0x80                  	// #128
    af94:	bl	87c0 <realloc@plt>
    af98:	cbz	x0, b1d4 <fprintf@plt+0x2714>
    af9c:	mov	x1, #0x10                  	// #16
    afa0:	mov	x24, x0
    afa4:	mov	x20, #0x1                   	// #1
    afa8:	str	x27, [x0]
    afac:	str	x1, [sp, #104]
    afb0:	ldr	x4, [x26]
    afb4:	b	9b40 <fprintf@plt+0x1080>
    afb8:	add	x3, x28, x24
    afbc:	ldrb	w24, [x23, #32]
    afc0:	b	abd0 <fprintf@plt+0x2110>
    afc4:	add	x3, x28, x24
    afc8:	ldrb	w24, [x23, #44]
    afcc:	b	abd0 <fprintf@plt+0x2110>
    afd0:	mov	w0, #0x2                   	// #2
    afd4:	b	a634 <fprintf@plt+0x1b74>
    afd8:	mov	w0, #0x4                   	// #4
    afdc:	b	a634 <fprintf@plt+0x1b74>
    afe0:	add	x0, x19, #0x2b0
    afe4:	adrp	x25, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    afe8:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    afec:	ldrb	w1, [x22]
    aff0:	str	x22, [x25, #1560]
    aff4:	str	x21, [x2, #1544]
    aff8:	strb	w1, [x0, #26]
    affc:	b	a984 <fprintf@plt+0x1ec4>
    b000:	cbnz	w25, a940 <fprintf@plt+0x1e80>
    b004:	adrp	x24, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    b008:	adrp	x23, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    b00c:	mov	x0, x27
    b010:	mov	w1, #0x0                   	// #0
    b014:	str	xzr, [x24, #1624]
    b018:	bl	1e770 <omp_pause_resource_all_@@OMP_5.0+0x488>
    b01c:	str	x0, [x23, #1584]
    b020:	cbz	x0, 99a8 <fprintf@plt+0xee8>
    b024:	add	x27, sp, #0xb0
    b028:	ldr	x1, [x24, #1624]
    b02c:	add	x28, x24, #0x658
    b030:	ldr	x0, [x23, #1584]
    b034:	ldr	x0, [x0, x1, lsl #3]
    b038:	bl	1e828 <omp_pause_resource_all_@@OMP_5.0+0x540>
    b03c:	mov	x3, x21
    b040:	mov	x2, x26
    b044:	mov	x1, x22
    b048:	mov	x0, x27
    b04c:	bl	8de8 <fprintf@plt+0x328>
    b050:	tst	w0, #0xff
    b054:	b.eq	9988 <fprintf@plt+0xec8>  // b.none
    b058:	ldrb	w0, [sp, #159]
    b05c:	cbnz	w0, b100 <fprintf@plt+0x2640>
    b060:	ldr	x2, [sp, #192]
    b064:	cmp	x2, #0x1
    b068:	b.ne	b090 <fprintf@plt+0x25d0>  // b.any
    b06c:	ldr	x0, [x28]
    b070:	add	x0, x0, #0x1
    b074:	str	x0, [x28]
    b078:	ldr	x0, [sp, #176]
    b07c:	ldrb	w1, [x0]
    b080:	cbz	w1, b17c <fprintf@plt+0x26bc>
    b084:	add	x0, x0, #0x1
    b088:	str	x0, [sp, #176]
    b08c:	b	b028 <fprintf@plt+0x2568>
    b090:	mov	x28, #0x0                   	// #0
    b094:	b	b0c4 <fprintf@plt+0x2604>
    b098:	ldr	x3, [x23, #1584]
    b09c:	add	x1, x28, x1
    b0a0:	add	x0, x1, #0x1
    b0a4:	add	x28, x28, #0x1
    b0a8:	ldr	x2, [sp, #200]
    b0ac:	ldr	x0, [x3, x0, lsl #3]
    b0b0:	ldr	x1, [x3, x1, lsl #3]
    b0b4:	bl	1ea40 <omp_pause_resource_all_@@OMP_5.0+0x758>
    b0b8:	tst	w0, #0xff
    b0bc:	b.eq	9988 <fprintf@plt+0xec8>  // b.none
    b0c0:	ldr	x2, [sp, #192]
    b0c4:	sub	x0, x2, #0x1
    b0c8:	ldr	x1, [x24, #1624]
    b0cc:	add	x3, x24, #0x658
    b0d0:	cmp	x28, x0
    b0d4:	b.cc	b098 <fprintf@plt+0x25d8>  // b.lo, b.ul, b.last
    b0d8:	add	x1, x2, x1
    b0dc:	str	x1, [x3]
    b0e0:	b	b078 <fprintf@plt+0x25b8>
    b0e4:	adrp	x27, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    b0e8:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    b0ec:	ldr	x1, [x24]
    b0f0:	str	x24, [x27, #1520]
    b0f4:	str	x3, [x0, #1640]
    b0f8:	str	x1, [x19, #688]
    b0fc:	b	97dc <fprintf@plt+0xd1c>
    b100:	mov	x28, #0x0                   	// #0
    b104:	b	b124 <fprintf@plt+0x2664>
    b108:	ldr	x2, [x23, #1584]
    b10c:	ldr	x1, [x2, x0, lsl #3]
    b110:	ldr	x0, [x2, x28, lsl #3]
    b114:	bl	1ebd0 <omp_pause_resource_all_@@OMP_5.0+0x8e8>
    b118:	tst	w0, #0xff
    b11c:	b.ne	b130 <fprintf@plt+0x2670>  // b.any
    b120:	add	x28, x28, #0x1
    b124:	ldr	x0, [x24, #1624]
    b128:	cmp	x28, x0
    b12c:	b.cc	b108 <fprintf@plt+0x2648>  // b.lo, b.ul, b.last
    b130:	ldr	x0, [x24, #1624]
    b134:	cmp	x28, x0
    b138:	b.eq	b1a8 <fprintf@plt+0x26e8>  // b.none
    b13c:	ldr	x3, [x23, #1584]
    b140:	lsl	x4, x28, #3
    b144:	sub	x0, x0, #0x1
    b148:	add	x1, x4, #0x8
    b14c:	sub	x2, x0, x28
    b150:	add	x1, x3, x1
    b154:	add	x0, x3, x28, lsl #3
    b158:	lsl	x2, x2, #3
    b15c:	ldr	x28, [x3, x4]
    b160:	bl	8590 <memmove@plt>
    b164:	ldr	x0, [x24, #1624]
    b168:	ldr	x1, [x23, #1584]
    b16c:	sub	x0, x0, #0x1
    b170:	str	x0, [x24, #1624]
    b174:	str	x28, [x1, x0, lsl #3]
    b178:	b	b078 <fprintf@plt+0x25b8>
    b17c:	ldr	x0, [x24, #1624]
    b180:	cbz	x0, b198 <fprintf@plt+0x26d8>
    b184:	mov	w0, #0x0                   	// #0
    b188:	bl	1ebf8 <omp_pause_resource_all_@@OMP_5.0+0x910>
    b18c:	tst	w0, #0xff
    b190:	b.ne	ab04 <fprintf@plt+0x2044>  // b.any
    b194:	b	9988 <fprintf@plt+0xec8>
    b198:	adrp	x0, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    b19c:	add	x0, x0, #0xfe8
    b1a0:	bl	b670 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    b1a4:	b	9988 <fprintf@plt+0xec8>
    b1a8:	adrp	x0, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    b1ac:	add	x0, x0, #0xfa8
    b1b0:	bl	b670 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    b1b4:	b	9988 <fprintf@plt+0xec8>
    b1b8:	mov	x0, x22
    b1bc:	bl	88b0 <free@plt>
    b1c0:	add	x1, x26, #0xf70
    b1c4:	adrp	x0, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    b1c8:	add	x0, x0, #0xf30
    b1cc:	bl	b670 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    b1d0:	b	98bc <fprintf@plt+0xdfc>
    b1d4:	mov	x0, x24
    b1d8:	bl	88b0 <free@plt>
    b1dc:	add	x1, x22, #0xf20
    b1e0:	adrp	x0, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    b1e4:	add	x0, x0, #0xf30
    b1e8:	bl	b670 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    b1ec:	b	97d0 <fprintf@plt+0xd10>
    b1f0:	stp	x29, x30, [sp, #-16]!
    b1f4:	adrp	x1, 1b000 <omp_in_final@@OMP_3.1+0xd10>
    b1f8:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    b1fc:	mov	x29, sp
    b200:	add	x1, x1, #0x7d0
    b204:	add	x0, x0, #0x6b0
    b208:	bl	85f0 <pthread_key_create@plt>
    b20c:	cbnz	w0, b218 <fprintf@plt+0x2758>
    b210:	ldp	x29, x30, [sp], #16
    b214:	ret
    b218:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    b21c:	add	x0, x0, #0x7e0
    b220:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
    b224:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    b228:	ldr	x0, [x0, #4056]
    b22c:	cbz	x0, b234 <fprintf@plt+0x2774>
    b230:	b	8800 <__gmon_start__@plt>
    b234:	ret
    b238:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    b23c:	add	x0, x0, #0x540
    b240:	adrp	x1, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    b244:	add	x1, x1, #0x540
    b248:	cmp	x1, x0
    b24c:	b.eq	b264 <fprintf@plt+0x27a4>  // b.none
    b250:	adrp	x1, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    b254:	ldr	x1, [x1, #4024]
    b258:	cbz	x1, b264 <fprintf@plt+0x27a4>
    b25c:	mov	x16, x1
    b260:	br	x16
    b264:	ret
    b268:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    b26c:	add	x0, x0, #0x540
    b270:	adrp	x1, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    b274:	add	x1, x1, #0x540
    b278:	sub	x1, x1, x0
    b27c:	lsr	x2, x1, #63
    b280:	add	x1, x2, x1, asr #3
    b284:	cmp	xzr, x1, asr #1
    b288:	asr	x1, x1, #1
    b28c:	b.eq	b2a4 <fprintf@plt+0x27e4>  // b.none
    b290:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    b294:	ldr	x2, [x2, #4064]
    b298:	cbz	x2, b2a4 <fprintf@plt+0x27e4>
    b29c:	mov	x16, x2
    b2a0:	br	x16
    b2a4:	ret
    b2a8:	stp	x29, x30, [sp, #-32]!
    b2ac:	mov	x29, sp
    b2b0:	str	x19, [sp, #16]
    b2b4:	adrp	x19, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    b2b8:	ldrb	w0, [x19, #1344]
    b2bc:	cbnz	w0, b2e4 <fprintf@plt+0x2824>
    b2c0:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    b2c4:	ldr	x0, [x0, #4032]
    b2c8:	cbz	x0, b2d8 <fprintf@plt+0x2818>
    b2cc:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    b2d0:	ldr	x0, [x0, #680]
    b2d4:	bl	8610 <__cxa_finalize@plt>
    b2d8:	bl	b238 <fprintf@plt+0x2778>
    b2dc:	mov	w0, #0x1                   	// #1
    b2e0:	strb	w0, [x19, #1344]
    b2e4:	ldr	x19, [sp, #16]
    b2e8:	ldp	x29, x30, [sp], #32
    b2ec:	ret
    b2f0:	b	b268 <fprintf@plt+0x27a8>
    b2f4:	nop
    b2f8:	stp	x29, x30, [sp, #-32]!
    b2fc:	mov	x29, sp
    b300:	str	x19, [sp, #16]
    b304:	mov	x19, x0
    b308:	bl	8710 <malloc@plt>
    b30c:	cbz	x0, b31c <fprintf@plt+0x285c>
    b310:	ldr	x19, [sp, #16]
    b314:	ldp	x29, x30, [sp], #32
    b318:	ret
    b31c:	adrp	x0, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    b320:	mov	x1, x19
    b324:	add	x0, x0, #0xd00
    b328:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
    b32c:	nop
    b330:	stp	x29, x30, [sp, #-32]!
    b334:	mov	x29, sp
    b338:	str	x19, [sp, #16]
    b33c:	mov	x19, x0
    b340:	mov	x1, x19
    b344:	mov	x0, #0x1                   	// #1
    b348:	bl	8790 <calloc@plt>
    b34c:	cbz	x0, b35c <fprintf@plt+0x289c>
    b350:	ldr	x19, [sp, #16]
    b354:	ldp	x29, x30, [sp], #32
    b358:	ret
    b35c:	adrp	x0, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    b360:	mov	x1, x19
    b364:	add	x0, x0, #0xd00
    b368:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
    b36c:	nop
    b370:	stp	x29, x30, [sp, #-32]!
    b374:	mov	x29, sp
    b378:	str	x19, [sp, #16]
    b37c:	mov	x19, x1
    b380:	bl	87c0 <realloc@plt>
    b384:	cbz	x0, b394 <fprintf@plt+0x28d4>
    b388:	ldr	x19, [sp, #16]
    b38c:	ldp	x29, x30, [sp], #32
    b390:	ret
    b394:	adrp	x0, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    b398:	mov	x1, x19
    b39c:	add	x0, x0, #0xd00
    b3a0:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
    b3a4:	nop
    b3a8:	stp	x29, x30, [sp, #-32]!
    b3ac:	mov	x2, #0x8                   	// #8
    b3b0:	cmp	x0, x2
    b3b4:	mov	x29, sp
    b3b8:	csel	x0, x0, x2, cs  // cs = hs, nlast
    b3bc:	str	x19, [sp, #16]
    b3c0:	mov	x19, x1
    b3c4:	bl	8750 <aligned_alloc@plt>
    b3c8:	cbz	x0, b3d8 <fprintf@plt+0x2918>
    b3cc:	ldr	x19, [sp, #16]
    b3d0:	ldp	x29, x30, [sp], #32
    b3d4:	ret
    b3d8:	adrp	x0, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
    b3dc:	mov	x1, x19
    b3e0:	add	x0, x0, #0xd00
    b3e4:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
    b3e8:	b	88b0 <free@plt>
    b3ec:	nop

000000000000b3f0 <GOMP_atomic_start@@GOMP_1.0>:
    b3f0:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    b3f4:	add	x0, x0, #0x544
    b3f8:	mov	w2, #0x1                   	// #1
    b3fc:	ldaxr	w1, [x0]
    b400:	cbnz	w1, b40c <GOMP_atomic_start@@GOMP_1.0+0x1c>
    b404:	stxr	w3, w2, [x0]
    b408:	cbnz	w3, b3fc <GOMP_atomic_start@@GOMP_1.0+0xc>
    b40c:	cmp	w1, #0x0
    b410:	b.ne	b418 <GOMP_atomic_start@@GOMP_1.0+0x28>  // b.any
    b414:	ret
    b418:	b	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
    b41c:	nop

000000000000b420 <GOMP_atomic_end@@GOMP_1.0>:
    b420:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    b424:	add	x0, x0, #0x544
    b428:	ldxr	w1, [x0]
    b42c:	stlxr	w2, wzr, [x0]
    b430:	cbnz	w2, b428 <GOMP_atomic_end@@GOMP_1.0+0x8>
    b434:	tbnz	w1, #31, b43c <GOMP_atomic_end@@GOMP_1.0+0x1c>
    b438:	ret
    b43c:	b	1c868 <omp_test_nest_lock@OMP_1.0+0x280>

000000000000b440 <GOMP_barrier@@GOMP_1.0>:
    b440:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    b444:	ldr	x0, [x0, #4016]
    b448:	mrs	x1, tpidr_el0
    b44c:	add	x0, x1, x0
    b450:	ldr	x0, [x0, #16]
    b454:	cbz	x0, b460 <GOMP_barrier@@GOMP_1.0+0x20>
    b458:	add	x0, x0, #0x80
    b45c:	b	1d3e0 <omp_get_num_procs@@OMP_1.0+0x830>
    b460:	ret
    b464:	nop

000000000000b468 <GOMP_barrier_cancel@@GOMP_4.0>:
    b468:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    b46c:	ldr	x0, [x0, #4016]
    b470:	mrs	x1, tpidr_el0
    b474:	add	x0, x1, x0
    b478:	ldr	x0, [x0, #16]
    b47c:	add	x0, x0, #0x80
    b480:	b	1d658 <omp_get_num_procs@@OMP_1.0+0xaa8>
    b484:	nop

000000000000b488 <GOMP_critical_start@@GOMP_1.0>:
    b488:	dmb	ish
    b48c:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    b490:	add	x0, x0, #0x548
    b494:	mov	w2, #0x1                   	// #1
    b498:	ldaxr	w1, [x0]
    b49c:	cbnz	w1, b4a8 <GOMP_critical_start@@GOMP_1.0+0x20>
    b4a0:	stxr	w3, w2, [x0]
    b4a4:	cbnz	w3, b498 <GOMP_critical_start@@GOMP_1.0+0x10>
    b4a8:	cmp	w1, #0x0
    b4ac:	b.ne	b4b4 <GOMP_critical_start@@GOMP_1.0+0x2c>  // b.any
    b4b0:	ret
    b4b4:	b	1c678 <omp_test_nest_lock@OMP_1.0+0x90>

000000000000b4b8 <GOMP_critical_end@@GOMP_1.0>:
    b4b8:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    b4bc:	add	x0, x0, #0x548
    b4c0:	ldxr	w1, [x0]
    b4c4:	stlxr	w2, wzr, [x0]
    b4c8:	cbnz	w2, b4c0 <GOMP_critical_end@@GOMP_1.0+0x8>
    b4cc:	tbnz	w1, #31, b4d4 <GOMP_critical_end@@GOMP_1.0+0x1c>
    b4d0:	ret
    b4d4:	b	1c868 <omp_test_nest_lock@OMP_1.0+0x280>

000000000000b4d8 <GOMP_critical_name_start@@GOMP_1.0>:
    b4d8:	mov	x2, x0
    b4dc:	mov	w3, #0x1                   	// #1
    b4e0:	ldaxr	w1, [x2]
    b4e4:	cbnz	w1, b4f0 <GOMP_critical_name_start@@GOMP_1.0+0x18>
    b4e8:	stxr	w4, w3, [x2]
    b4ec:	cbnz	w4, b4e0 <GOMP_critical_name_start@@GOMP_1.0+0x8>
    b4f0:	cmp	w1, #0x0
    b4f4:	b.ne	b4fc <GOMP_critical_name_start@@GOMP_1.0+0x24>  // b.any
    b4f8:	ret
    b4fc:	b	1c678 <omp_test_nest_lock@OMP_1.0+0x90>

000000000000b500 <GOMP_critical_name_end@@GOMP_1.0>:
    b500:	mov	x1, x0
    b504:	ldxr	w2, [x1]
    b508:	stlxr	w3, wzr, [x1]
    b50c:	cbnz	w3, b504 <GOMP_critical_name_end@@GOMP_1.0+0x4>
    b510:	tbnz	w2, #31, b518 <GOMP_critical_name_end@@GOMP_1.0+0x18>
    b514:	ret
    b518:	b	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
    b51c:	nop
    b520:	adrp	x3, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    b524:	mov	x0, x2
    b528:	ldr	w2, [x3, #1552]
    b52c:	cbnz	w2, b534 <GOMP_critical_name_end@@GOMP_1.0+0x34>
    b530:	ret
    b534:	stp	x29, x30, [sp, #-48]!
    b538:	adrp	x3, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    b53c:	mov	x29, sp
    b540:	ldp	x4, x5, [x0]
    b544:	stp	x4, x5, [sp, #16]
    b548:	add	x2, sp, #0x10
    b54c:	ldr	x3, [x3, #4040]
    b550:	ldp	x4, x5, [x0, #16]
    b554:	stp	x4, x5, [sp, #32]
    b558:	ldr	x0, [x3]
    b55c:	bl	8a50 <vfprintf@plt>
    b560:	ldp	x29, x30, [sp], #48
    b564:	ret
    b568:	stp	x29, x30, [sp, #-288]!
    b56c:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    b570:	mov	w9, #0xffffffd0            	// #-48
    b574:	mov	x29, sp
    b578:	add	x10, sp, #0xf0
    b57c:	add	x11, sp, #0x120
    b580:	mov	w8, #0xffffff80            	// #-128
    b584:	stp	x11, x11, [sp, #48]
    b588:	ldr	w0, [x0, #1552]
    b58c:	str	x10, [sp, #64]
    b590:	stp	w9, w8, [sp, #72]
    b594:	ldp	x10, x11, [sp, #48]
    b598:	stp	x10, x11, [sp, #80]
    b59c:	ldp	x8, x9, [sp, #64]
    b5a0:	stp	x8, x9, [sp, #96]
    b5a4:	str	q0, [sp, #112]
    b5a8:	str	q1, [sp, #128]
    b5ac:	str	q2, [sp, #144]
    b5b0:	str	q3, [sp, #160]
    b5b4:	str	q4, [sp, #176]
    b5b8:	str	q5, [sp, #192]
    b5bc:	str	q6, [sp, #208]
    b5c0:	str	q7, [sp, #224]
    b5c4:	stp	x2, x3, [sp, #240]
    b5c8:	stp	x4, x5, [sp, #256]
    b5cc:	stp	x6, x7, [sp, #272]
    b5d0:	cbnz	w0, b5dc <GOMP_critical_name_end@@GOMP_1.0+0xdc>
    b5d4:	ldp	x29, x30, [sp], #288
    b5d8:	ret
    b5dc:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    b5e0:	stp	x10, x11, [sp, #16]
    b5e4:	add	x2, sp, #0x10
    b5e8:	ldr	x0, [x0, #4040]
    b5ec:	stp	x8, x9, [sp, #32]
    b5f0:	ldr	x0, [x0]
    b5f4:	bl	8a50 <vfprintf@plt>
    b5f8:	ldp	x29, x30, [sp], #288
    b5fc:	ret
    b600:	stp	x29, x30, [sp, #-80]!
    b604:	mov	x2, #0xa                   	// #10
    b608:	mov	x29, sp
    b60c:	stp	x19, x20, [sp, #16]
    b610:	adrp	x19, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    b614:	mov	x20, x1
    b618:	ldr	x19, [x19, #4040]
    b61c:	mov	x1, #0x1                   	// #1
    b620:	ldr	x3, [x19]
    b624:	str	x21, [sp, #32]
    b628:	mov	x21, x0
    b62c:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    b630:	add	x0, x0, #0x540
    b634:	bl	8980 <fwrite@plt>
    b638:	ldp	x6, x7, [x20]
    b63c:	mov	x1, x21
    b640:	ldp	x4, x5, [x20, #16]
    b644:	add	x2, sp, #0x30
    b648:	ldr	x0, [x19]
    b64c:	stp	x6, x7, [sp, #48]
    b650:	stp	x4, x5, [sp, #64]
    b654:	bl	8a50 <vfprintf@plt>
    b658:	ldr	x1, [x19]
    b65c:	mov	w0, #0xa                   	// #10
    b660:	ldp	x19, x20, [sp, #16]
    b664:	ldr	x21, [sp, #32]
    b668:	ldp	x29, x30, [sp], #80
    b66c:	b	8660 <fputc@plt>
    b670:	stp	x29, x30, [sp, #-320]!
    b674:	mov	w9, #0xffffffc8            	// #-56
    b678:	mov	w8, #0xffffff80            	// #-128
    b67c:	mov	x29, sp
    b680:	stp	x19, x20, [sp, #16]
    b684:	adrp	x19, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    b688:	add	x10, sp, #0x100
    b68c:	ldr	x19, [x19, #4040]
    b690:	str	x10, [sp, #80]
    b694:	stp	w9, w8, [sp, #88]
    b698:	mov	x20, x0
    b69c:	str	x3, [sp, #280]
    b6a0:	add	x3, sp, #0x140
    b6a4:	stp	x3, x3, [sp, #64]
    b6a8:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
    b6ac:	add	x0, x0, #0x540
    b6b0:	ldp	x10, x11, [sp, #64]
    b6b4:	stp	x10, x11, [sp, #96]
    b6b8:	ldp	x8, x9, [sp, #80]
    b6bc:	stp	x8, x9, [sp, #112]
    b6c0:	ldr	x3, [x19]
    b6c4:	str	q0, [sp, #128]
    b6c8:	str	q1, [sp, #144]
    b6cc:	str	q2, [sp, #160]
    b6d0:	str	q3, [sp, #176]
    b6d4:	str	q4, [sp, #192]
    b6d8:	str	q5, [sp, #208]
    b6dc:	str	q6, [sp, #224]
    b6e0:	str	q7, [sp, #240]
    b6e4:	stp	x1, x2, [sp, #264]
    b6e8:	mov	x1, #0x1                   	// #1
    b6ec:	mov	x2, #0xa                   	// #10
    b6f0:	stp	x4, x5, [sp, #288]
    b6f4:	stp	x6, x7, [sp, #304]
    b6f8:	bl	8980 <fwrite@plt>
    b6fc:	add	x2, sp, #0x20
    b700:	ldp	x6, x7, [sp, #96]
    b704:	mov	x1, x20
    b708:	ldp	x4, x5, [sp, #112]
    b70c:	ldr	x0, [x19]
    b710:	stp	x6, x7, [sp, #32]
    b714:	stp	x4, x5, [sp, #48]
    b718:	bl	8a50 <vfprintf@plt>
    b71c:	ldr	x1, [x19]
    b720:	mov	w0, #0xa                   	// #10
    b724:	bl	8660 <fputc@plt>
    b728:	ldp	x19, x20, [sp, #16]
    b72c:	ldp	x29, x30, [sp], #320
    b730:	ret
    b734:	nop
    b738:	mov	x2, x1
    b73c:	stp	x29, x30, [sp, #-48]!
    b740:	mov	x29, sp
    b744:	ldp	x4, x5, [x2]
    b748:	stp	x4, x5, [sp, #16]
    b74c:	add	x1, sp, #0x10
    b750:	ldp	x2, x3, [x2, #16]
    b754:	stp	x2, x3, [sp, #32]
    b758:	bl	b600 <GOMP_critical_name_end@@GOMP_1.0+0x100>
    b75c:	mov	w0, #0x1                   	// #1
    b760:	bl	85c0 <exit@plt>
    b764:	nop
    b768:	stp	x29, x30, [sp, #-272]!
    b76c:	mov	w9, #0xffffffc8            	// #-56
    b770:	mov	w8, #0xffffff80            	// #-128
    b774:	mov	x29, sp
    b778:	add	x10, sp, #0xd0
    b77c:	add	x11, sp, #0x110
    b780:	stp	x11, x11, [sp, #48]
    b784:	str	x10, [sp, #64]
    b788:	stp	w9, w8, [sp, #72]
    b78c:	ldp	x10, x11, [sp, #48]
    b790:	stp	x10, x11, [sp, #16]
    b794:	ldp	x8, x9, [sp, #64]
    b798:	stp	x8, x9, [sp, #32]
    b79c:	str	q0, [sp, #80]
    b7a0:	str	q1, [sp, #96]
    b7a4:	str	q2, [sp, #112]
    b7a8:	str	q3, [sp, #128]
    b7ac:	str	q4, [sp, #144]
    b7b0:	str	q5, [sp, #160]
    b7b4:	str	q6, [sp, #176]
    b7b8:	str	q7, [sp, #192]
    b7bc:	stp	x1, x2, [sp, #216]
    b7c0:	add	x1, sp, #0x10
    b7c4:	stp	x3, x4, [sp, #232]
    b7c8:	stp	x5, x6, [sp, #248]
    b7cc:	str	x7, [sp, #264]
    b7d0:	bl	b738 <GOMP_critical_name_end@@GOMP_1.0+0x238>
    b7d4:	nop

000000000000b7d8 <omp_set_num_threads@@OMP_1.0>:
    b7d8:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    b7dc:	ldr	x2, [x2, #4016]
    b7e0:	mrs	x1, tpidr_el0
    b7e4:	stp	x29, x30, [sp, #-32]!
    b7e8:	add	x1, x1, x2
    b7ec:	mov	x29, sp
    b7f0:	str	x19, [sp, #16]
    b7f4:	mov	w19, w0
    b7f8:	ldr	x0, [x1, #80]
    b7fc:	cbz	x0, b820 <omp_set_num_threads@@OMP_1.0+0x48>
    b800:	add	x0, x0, #0x90
    b804:	cmp	w19, #0x0
    b808:	csinc	w19, w19, wzr, gt
    b80c:	sxtw	x19, w19
    b810:	str	x19, [x0]
    b814:	ldr	x19, [sp, #16]
    b818:	ldp	x29, x30, [sp], #32
    b81c:	ret
    b820:	bl	1ba40 <omp_in_final@@OMP_3.1+0x1750>
    b824:	cmp	w19, #0x0
    b828:	csinc	w19, w19, wzr, gt
    b82c:	sxtw	x19, w19
    b830:	str	x19, [x0]
    b834:	ldr	x19, [sp, #16]
    b838:	ldp	x29, x30, [sp], #32
    b83c:	ret

000000000000b840 <omp_set_dynamic@@OMP_1.0>:
    b840:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    b844:	ldr	x2, [x2, #4016]
    b848:	mrs	x1, tpidr_el0
    b84c:	stp	x29, x30, [sp, #-32]!
    b850:	add	x1, x1, x2
    b854:	mov	x29, sp
    b858:	ldr	x1, [x1, #80]
    b85c:	str	x19, [sp, #16]
    b860:	mov	w19, w0
    b864:	cbz	x1, b884 <omp_set_dynamic@@OMP_1.0+0x44>
    b868:	add	x1, x1, #0x90
    b86c:	cmp	w19, #0x0
    b870:	cset	w0, ne  // ne = any
    b874:	ldr	x19, [sp, #16]
    b878:	strb	w0, [x1, #24]
    b87c:	ldp	x29, x30, [sp], #32
    b880:	ret
    b884:	bl	1ba40 <omp_in_final@@OMP_3.1+0x1750>
    b888:	mov	x1, x0
    b88c:	cmp	w19, #0x0
    b890:	cset	w0, ne  // ne = any
    b894:	strb	w0, [x1, #24]
    b898:	ldr	x19, [sp, #16]
    b89c:	ldp	x29, x30, [sp], #32
    b8a0:	ret
    b8a4:	nop

000000000000b8a8 <omp_get_dynamic@@OMP_1.0>:
    b8a8:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    b8ac:	ldr	x2, [x2, #4016]
    b8b0:	mrs	x1, tpidr_el0
    b8b4:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    b8b8:	add	x0, x0, #0x2b0
    b8bc:	add	x1, x1, x2
    b8c0:	ldr	x1, [x1, #80]
    b8c4:	cmp	x1, #0x0
    b8c8:	add	x1, x1, #0x90
    b8cc:	csel	x0, x0, x1, eq  // eq = none
    b8d0:	ldrb	w0, [x0, #24]
    b8d4:	ret

000000000000b8d8 <omp_set_nested@@OMP_1.0>:
    b8d8:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    b8dc:	ldr	x2, [x2, #4016]
    b8e0:	mrs	x1, tpidr_el0
    b8e4:	stp	x29, x30, [sp, #-32]!
    b8e8:	add	x1, x1, x2
    b8ec:	mov	x29, sp
    b8f0:	ldr	x1, [x1, #80]
    b8f4:	str	x19, [sp, #16]
    b8f8:	mov	w19, w0
    b8fc:	cbz	x1, b91c <omp_set_nested@@OMP_1.0+0x44>
    b900:	add	x1, x1, #0x90
    b904:	cmp	w19, #0x0
    b908:	cset	w0, ne  // ne = any
    b90c:	ldr	x19, [sp, #16]
    b910:	strb	w0, [x1, #25]
    b914:	ldp	x29, x30, [sp], #32
    b918:	ret
    b91c:	bl	1ba40 <omp_in_final@@OMP_3.1+0x1750>
    b920:	mov	x1, x0
    b924:	cmp	w19, #0x0
    b928:	cset	w0, ne  // ne = any
    b92c:	strb	w0, [x1, #25]
    b930:	ldr	x19, [sp, #16]
    b934:	ldp	x29, x30, [sp], #32
    b938:	ret
    b93c:	nop

000000000000b940 <omp_get_nested@@OMP_1.0>:
    b940:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    b944:	ldr	x2, [x2, #4016]
    b948:	mrs	x1, tpidr_el0
    b94c:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    b950:	add	x0, x0, #0x2b0
    b954:	add	x1, x1, x2
    b958:	ldr	x1, [x1, #80]
    b95c:	cmp	x1, #0x0
    b960:	add	x1, x1, #0x90
    b964:	csel	x0, x0, x1, eq  // eq = none
    b968:	ldrb	w0, [x0, #25]
    b96c:	ret

000000000000b970 <omp_set_schedule@@OMP_3.0>:
    b970:	adrp	x3, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    b974:	ldr	x3, [x3, #4016]
    b978:	mrs	x2, tpidr_el0
    b97c:	stp	x29, x30, [sp, #-32]!
    b980:	add	x2, x2, x3
    b984:	mov	x29, sp
    b988:	stp	x19, x20, [sp, #16]
    b98c:	mov	w19, w0
    b990:	mov	w20, w1
    b994:	ldr	x0, [x2, #80]
    b998:	cbz	x0, b9ec <omp_set_schedule@@OMP_3.0+0x7c>
    b99c:	add	x0, x0, #0x90
    b9a0:	tst	w19, #0x7ffffffc
    b9a4:	and	w1, w19, #0x7fffffff
    b9a8:	b.ne	b9d8 <omp_set_schedule@@OMP_3.0+0x68>  // b.any
    b9ac:	tst	w19, #0x7ffffffe
    b9b0:	b.ne	b9f4 <omp_set_schedule@@OMP_3.0+0x84>  // b.any
    b9b4:	cmp	w1, #0x1
    b9b8:	b.ne	b9cc <omp_set_schedule@@OMP_3.0+0x5c>  // b.any
    b9bc:	cmp	w20, #0x0
    b9c0:	csel	w20, w20, wzr, ge  // ge = tcont
    b9c4:	str	w20, [x0, #12]
    b9c8:	str	w19, [x0, #8]
    b9cc:	ldp	x19, x20, [sp, #16]
    b9d0:	ldp	x29, x30, [sp], #32
    b9d4:	ret
    b9d8:	cmp	w1, #0x4
    b9dc:	b.eq	b9c8 <omp_set_schedule@@OMP_3.0+0x58>  // b.none
    b9e0:	ldp	x19, x20, [sp, #16]
    b9e4:	ldp	x29, x30, [sp], #32
    b9e8:	ret
    b9ec:	bl	1ba40 <omp_in_final@@OMP_3.1+0x1750>
    b9f0:	b	b9a0 <omp_set_schedule@@OMP_3.0+0x30>
    b9f4:	cmp	w20, #0x0
    b9f8:	csinc	w20, w20, wzr, gt
    b9fc:	str	w20, [x0, #12]
    ba00:	b	b9c8 <omp_set_schedule@@OMP_3.0+0x58>
    ba04:	nop

000000000000ba08 <omp_get_schedule@@OMP_3.0>:
    ba08:	adrp	x4, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    ba0c:	ldr	x4, [x4, #4016]
    ba10:	mrs	x3, tpidr_el0
    ba14:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    ba18:	add	x2, x2, #0x2b0
    ba1c:	add	x3, x3, x4
    ba20:	ldr	x3, [x3, #80]
    ba24:	cmp	x3, #0x0
    ba28:	add	x3, x3, #0x90
    ba2c:	csel	x2, x2, x3, eq  // eq = none
    ba30:	ldr	w3, [x2, #8]
    ba34:	str	w3, [x0]
    ba38:	ldr	w0, [x2, #12]
    ba3c:	str	w0, [x1]
    ba40:	ret
    ba44:	nop

000000000000ba48 <omp_get_max_threads@@OMP_1.0>:
    ba48:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    ba4c:	ldr	x2, [x2, #4016]
    ba50:	mrs	x1, tpidr_el0
    ba54:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    ba58:	add	x0, x0, #0x2b0
    ba5c:	add	x1, x1, x2
    ba60:	ldr	x1, [x1, #80]
    ba64:	cmp	x1, #0x0
    ba68:	add	x1, x1, #0x90
    ba6c:	csel	x0, x0, x1, eq  // eq = none
    ba70:	ldr	w0, [x0]
    ba74:	ret

000000000000ba78 <omp_get_thread_limit@@OMP_3.0>:
    ba78:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    ba7c:	ldr	x0, [x0, #4016]
    ba80:	mrs	x2, tpidr_el0
    ba84:	adrp	x1, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    ba88:	add	x1, x1, #0x2b0
    ba8c:	add	x2, x2, x0
    ba90:	mov	w3, #0x7fffffff            	// #2147483647
    ba94:	ldr	x2, [x2, #80]
    ba98:	cmp	x2, #0x0
    ba9c:	add	x2, x2, #0x90
    baa0:	csel	x1, x1, x2, eq  // eq = none
    baa4:	ldr	w0, [x1, #20]
    baa8:	cmp	w0, #0x0
    baac:	csel	w0, w0, w3, ge  // ge = tcont
    bab0:	ret
    bab4:	nop

000000000000bab8 <omp_set_max_active_levels@@OMP_3.0>:
    bab8:	tbnz	w0, #31, bac8 <omp_set_max_active_levels@@OMP_3.0+0x10>
    babc:	adrp	x1, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    bac0:	sxtw	x0, w0
    bac4:	str	x0, [x1, #728]
    bac8:	ret
    bacc:	nop

000000000000bad0 <omp_get_max_active_levels@@OMP_3.0>:
    bad0:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    bad4:	ldr	w0, [x0, #728]
    bad8:	ret
    badc:	nop

000000000000bae0 <omp_get_cancellation@@OMP_4.0>:
    bae0:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    bae4:	ldrb	w0, [x0, #1356]
    bae8:	ret
    baec:	nop

000000000000baf0 <omp_get_max_task_priority@@OMP_4.5>:
    baf0:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    baf4:	ldr	w0, [x0, #1360]
    baf8:	ret
    bafc:	nop

000000000000bb00 <omp_get_proc_bind@@OMP_4.0>:
    bb00:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    bb04:	ldr	x2, [x2, #4016]
    bb08:	mrs	x1, tpidr_el0
    bb0c:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    bb10:	add	x0, x0, #0x2b0
    bb14:	add	x1, x1, x2
    bb18:	ldr	x1, [x1, #80]
    bb1c:	cmp	x1, #0x0
    bb20:	add	x1, x1, #0x90
    bb24:	csel	x0, x0, x1, eq  // eq = none
    bb28:	ldrb	w0, [x0, #26]
    bb2c:	ret

000000000000bb30 <omp_get_initial_device@@OMP_4.5>:
    bb30:	mov	w0, #0xfffffffe            	// #-2
    bb34:	ret

000000000000bb38 <omp_get_num_places@@OMP_4.5>:
    bb38:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    bb3c:	ldr	w0, [x0, #1624]
    bb40:	ret
    bb44:	nop

000000000000bb48 <omp_get_place_num@@OMP_4.5>:
    bb48:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    bb4c:	ldr	x0, [x0, #1584]
    bb50:	cbz	x0, bba0 <omp_get_place_num@@OMP_4.5+0x58>
    bb54:	stp	x29, x30, [sp, #-32]!
    bb58:	mrs	x0, tpidr_el0
    bb5c:	mov	x29, sp
    bb60:	str	x19, [sp, #16]
    bb64:	adrp	x19, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    bb68:	ldr	x19, [x19, #4016]
    bb6c:	add	x19, x0, x19
    bb70:	ldr	w0, [x19, #92]
    bb74:	cbz	w0, bb88 <omp_get_place_num@@OMP_4.5+0x40>
    bb78:	sub	w0, w0, #0x1
    bb7c:	ldr	x19, [sp, #16]
    bb80:	ldp	x29, x30, [sp], #32
    bb84:	ret
    bb88:	bl	1efa0 <omp_pause_resource_all_@@OMP_5.0+0xcb8>
    bb8c:	ldr	w0, [x19, #92]
    bb90:	ldr	x19, [sp, #16]
    bb94:	sub	w0, w0, #0x1
    bb98:	ldp	x29, x30, [sp], #32
    bb9c:	ret
    bba0:	mov	w0, #0xffffffff            	// #-1
    bba4:	ret

000000000000bba8 <omp_get_partition_num_places@@OMP_4.5>:
    bba8:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    bbac:	ldr	x0, [x0, #1584]
    bbb0:	cbz	x0, bc04 <omp_get_partition_num_places@@OMP_4.5+0x5c>
    bbb4:	stp	x29, x30, [sp, #-32]!
    bbb8:	mov	x29, sp
    bbbc:	stp	x19, x20, [sp, #16]
    bbc0:	mrs	x19, tpidr_el0
    bbc4:	adrp	x20, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    bbc8:	ldr	x20, [x20, #4016]
    bbcc:	add	x0, x19, x20
    bbd0:	ldr	w0, [x0, #92]
    bbd4:	cbz	w0, bbec <omp_get_partition_num_places@@OMP_4.5+0x44>
    bbd8:	add	x19, x19, x20
    bbdc:	ldr	w0, [x19, #56]
    bbe0:	ldp	x19, x20, [sp, #16]
    bbe4:	ldp	x29, x30, [sp], #32
    bbe8:	ret
    bbec:	add	x19, x19, x20
    bbf0:	bl	1efa0 <omp_pause_resource_all_@@OMP_5.0+0xcb8>
    bbf4:	ldr	w0, [x19, #56]
    bbf8:	ldp	x19, x20, [sp, #16]
    bbfc:	ldp	x29, x30, [sp], #32
    bc00:	ret
    bc04:	mov	w0, #0x0                   	// #0
    bc08:	ret
    bc0c:	nop

000000000000bc10 <omp_get_partition_place_nums@@OMP_4.5>:
    bc10:	stp	x29, x30, [sp, #-48]!
    bc14:	adrp	x1, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    bc18:	mov	x29, sp
    bc1c:	stp	x19, x20, [sp, #16]
    bc20:	mov	x20, x0
    bc24:	ldr	x0, [x1, #1584]
    bc28:	cbz	x0, bc78 <omp_get_partition_place_nums@@OMP_4.5+0x68>
    bc2c:	str	x21, [sp, #32]
    bc30:	mrs	x19, tpidr_el0
    bc34:	adrp	x21, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    bc38:	ldr	x21, [x21, #4016]
    bc3c:	add	x0, x19, x21
    bc40:	ldr	w0, [x0, #92]
    bc44:	cbz	w0, bc84 <omp_get_partition_place_nums@@OMP_4.5+0x74>
    bc48:	add	x3, x19, x21
    bc4c:	ldr	w0, [x3, #56]
    bc50:	cbz	w0, bc74 <omp_get_partition_place_nums@@OMP_4.5+0x64>
    bc54:	mov	x1, #0x0                   	// #0
    bc58:	ldr	w2, [x3, #52]
    bc5c:	add	w2, w2, w1
    bc60:	str	w2, [x20, x1, lsl #2]
    bc64:	add	x1, x1, #0x1
    bc68:	ldr	w2, [x3, #56]
    bc6c:	cmp	w2, w1
    bc70:	b.hi	bc58 <omp_get_partition_place_nums@@OMP_4.5+0x48>  // b.pmore
    bc74:	ldr	x21, [sp, #32]
    bc78:	ldp	x19, x20, [sp, #16]
    bc7c:	ldp	x29, x30, [sp], #48
    bc80:	ret
    bc84:	bl	1efa0 <omp_pause_resource_all_@@OMP_5.0+0xcb8>
    bc88:	b	bc48 <omp_get_partition_place_nums@@OMP_4.5+0x38>
    bc8c:	nop

000000000000bc90 <omp_set_default_device@@OMP_4.0>:
    bc90:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    bc94:	ldr	x2, [x2, #4016]
    bc98:	mrs	x1, tpidr_el0
    bc9c:	stp	x29, x30, [sp, #-32]!
    bca0:	add	x1, x1, x2
    bca4:	mov	x29, sp
    bca8:	str	x19, [sp, #16]
    bcac:	mov	w19, w0
    bcb0:	ldr	x0, [x1, #80]
    bcb4:	cbz	x0, bcd4 <omp_set_default_device@@OMP_4.0+0x44>
    bcb8:	add	x0, x0, #0x90
    bcbc:	cmp	w19, #0x0
    bcc0:	csel	w19, w19, wzr, ge  // ge = tcont
    bcc4:	str	w19, [x0, #16]
    bcc8:	ldr	x19, [sp, #16]
    bccc:	ldp	x29, x30, [sp], #32
    bcd0:	ret
    bcd4:	bl	1ba40 <omp_in_final@@OMP_3.1+0x1750>
    bcd8:	cmp	w19, #0x0
    bcdc:	csel	w19, w19, wzr, ge  // ge = tcont
    bce0:	str	w19, [x0, #16]
    bce4:	ldr	x19, [sp, #16]
    bce8:	ldp	x29, x30, [sp], #32
    bcec:	ret

000000000000bcf0 <omp_get_default_device@@OMP_4.0>:
    bcf0:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    bcf4:	ldr	x2, [x2, #4016]
    bcf8:	mrs	x1, tpidr_el0
    bcfc:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    bd00:	add	x0, x0, #0x2b0
    bd04:	add	x1, x1, x2
    bd08:	ldr	x1, [x1, #80]
    bd0c:	cmp	x1, #0x0
    bd10:	add	x1, x1, #0x90
    bd14:	csel	x0, x0, x1, eq  // eq = none
    bd18:	ldr	w0, [x0, #16]
    bd1c:	ret

000000000000bd20 <omp_get_num_devices@@OMP_4.0>:
    bd20:	b	20c48 <omp_get_place_proc_ids@@OMP_4.5+0x1a88>
    bd24:	nop

000000000000bd28 <omp_is_initial_device@@OMP_4.0>:
    bd28:	mov	w0, #0x1                   	// #1
    bd2c:	ret
    bd30:	adrp	x5, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    bd34:	ldr	x5, [x5, #4016]
    bd38:	mrs	x10, tpidr_el0
    bd3c:	mov	x8, x0
    bd40:	add	x2, x10, x5
    bd44:	ldp	x6, x4, [x2, #16]
    bd48:	ldr	x7, [x2, #72]
    bd4c:	cbz	x6, be48 <omp_is_initial_device@@OMP_4.0+0x120>
    bd50:	ldr	w3, [x6]
    bd54:	cmn	x7, #0x1
    bd58:	mov	w0, #0xffffffff            	// #-1
    bd5c:	b.eq	bdd8 <omp_is_initial_device@@OMP_4.0+0xb0>  // b.none
    bd60:	cmp	x3, #0x1
    bd64:	b.eq	be54 <omp_is_initial_device@@OMP_4.0+0x12c>  // b.none
    bd68:	ldr	x6, [x4, #8]
    bd6c:	cbnz	x6, bddc <omp_is_initial_device@@OMP_4.0+0xb4>
    bd70:	mov	w0, #0x1                   	// #1
    bd74:	cbnz	x7, bdd8 <omp_is_initial_device@@OMP_4.0+0xb0>
    bd78:	ldp	x0, x7, [x4, #16]
    bd7c:	mov	x6, #0x1                   	// #1
    bd80:	ldr	x9, [x4, #72]
    bd84:	ldr	w4, [x2, #40]
    bd88:	cmp	x7, #0x0
    bd8c:	sub	x0, x0, x9
    bd90:	cneg	x6, x6, gt
    bd94:	add	x6, x7, x6
    bd98:	add	x0, x0, x6
    bd9c:	sdiv	x0, x0, x7
    bda0:	udiv	x2, x0, x3
    bda4:	msub	x3, x2, x3, x0
    bda8:	cmp	x4, x3
    bdac:	b.cs	bdb8 <omp_is_initial_device@@OMP_4.0+0x90>  // b.hs, b.nlast
    bdb0:	add	x2, x2, #0x1
    bdb4:	mov	x3, #0x0                   	// #0
    bdb8:	madd	x3, x2, x4, x3
    bdbc:	add	x2, x2, x3
    bdc0:	cmp	x3, x2
    bdc4:	b.cc	be80 <omp_is_initial_device@@OMP_4.0+0x158>  // b.lo, b.ul, b.last
    bdc8:	add	x5, x10, x5
    bdcc:	mov	x1, #0x1                   	// #1
    bdd0:	mov	w0, w1
    bdd4:	str	x1, [x5, #72]
    bdd8:	ret
    bddc:	ldp	x5, x9, [x4, #16]
    bde0:	mov	x0, #0x1                   	// #1
    bde4:	ldr	x11, [x4, #72]
    bde8:	ldr	w12, [x2, #40]
    bdec:	cmp	x9, #0x0
    bdf0:	cneg	x4, x0, gt
    bdf4:	add	x10, x9, x4
    bdf8:	sub	x4, x5, x11
    bdfc:	add	x4, x4, x10
    be00:	madd	x3, x3, x7, x12
    be04:	sdiv	x4, x4, x9
    be08:	mul	x3, x3, x6
    be0c:	cmp	x4, x3
    be10:	b.ls	bdd8 <omp_is_initial_device@@OMP_4.0+0xb0>  // b.plast
    be14:	add	x6, x6, x3
    be18:	madd	x3, x3, x9, x11
    be1c:	cmp	x4, x6
    be20:	str	x3, [x8]
    be24:	csel	x0, x4, x6, ls  // ls = plast
    be28:	madd	x9, x0, x9, x11
    be2c:	str	x9, [x1]
    be30:	b.ls	beac <omp_is_initial_device@@OMP_4.0+0x184>  // b.plast
    be34:	ldr	x1, [x2, #72]
    be38:	mov	w0, #0x0                   	// #0
    be3c:	add	x1, x1, #0x1
    be40:	str	x1, [x2, #72]
    be44:	ret
    be48:	cmn	x7, #0x1
    be4c:	mov	w0, #0xffffffff            	// #-1
    be50:	b.eq	bdd8 <omp_is_initial_device@@OMP_4.0+0xb0>  // b.none
    be54:	ldr	x0, [x4, #72]
    be58:	str	x0, [x8]
    be5c:	add	x5, x10, x5
    be60:	mov	x2, #0xffffffffffffffff    	// #-1
    be64:	ldr	x0, [x4, #16]
    be68:	str	x0, [x1]
    be6c:	ldr	x1, [x4, #72]
    be70:	str	x2, [x5, #72]
    be74:	cmp	x1, x0
    be78:	cset	w0, eq  // eq = none
    be7c:	ret
    be80:	madd	x3, x3, x7, x9
    be84:	add	x5, x10, x5
    be88:	madd	x7, x2, x7, x9
    be8c:	str	x3, [x8]
    be90:	cmp	x0, x2
    be94:	str	x7, [x1]
    be98:	mov	w0, #0x0                   	// #0
    be9c:	mov	x1, #0x1                   	// #1
    bea0:	cneg	x1, x1, eq  // eq = none
    bea4:	str	x1, [x5, #72]
    bea8:	ret
    beac:	mov	x1, #0xffffffffffffffff    	// #-1
    beb0:	mov	w0, #0x0                   	// #0
    beb4:	str	x1, [x2, #72]
    beb8:	ret
    bebc:	nop
    bec0:	adrp	x3, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    bec4:	ldr	x3, [x3, #4016]
    bec8:	mrs	x2, tpidr_el0
    becc:	add	x2, x2, x3
    bed0:	ldr	x3, [x2, #24]
    bed4:	ldr	x2, [x3, #16]
    bed8:	ldr	x4, [x3, #72]
    bedc:	cmp	x2, x4
    bee0:	b.eq	bf34 <omp_is_initial_device@@OMP_4.0+0x20c>  // b.none
    bee4:	ldr	x6, [x3, #8]
    bee8:	sub	x2, x2, x4
    beec:	ldr	x7, [x3, #24]
    bef0:	cmp	x6, x2
    bef4:	csel	x5, x6, x2, le
    bef8:	tbnz	x7, #63, bf14 <omp_is_initial_device@@OMP_4.0+0x1ec>
    befc:	add	x2, x5, x4
    bf00:	str	x2, [x3, #72]
    bf04:	str	x4, [x0]
    bf08:	mov	w0, #0x1                   	// #1
    bf0c:	str	x2, [x1]
    bf10:	ret
    bf14:	cmp	x6, x2
    bf18:	csel	x5, x6, x2, ge  // ge = tcont
    bf1c:	add	x2, x5, x4
    bf20:	str	x2, [x3, #72]
    bf24:	str	x4, [x0]
    bf28:	mov	w0, #0x1                   	// #1
    bf2c:	str	x2, [x1]
    bf30:	b	bf10 <omp_is_initial_device@@OMP_4.0+0x1e8>
    bf34:	mov	w0, #0x0                   	// #0
    bf38:	ret
    bf3c:	nop
    bf40:	adrp	x3, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    bf44:	ldr	x3, [x3, #4016]
    bf48:	mrs	x2, tpidr_el0
    bf4c:	add	x2, x2, x3
    bf50:	ldr	x2, [x2, #24]
    bf54:	add	x4, x2, #0x48
    bf58:	ldr	w7, [x2, #4]
    bf5c:	ldr	x3, [x2, #8]
    bf60:	ldp	x5, x6, [x2, #16]
    bf64:	cbz	w7, bfd4 <omp_is_initial_device@@OMP_4.0+0x2ac>
    bf68:	ldxr	x2, [x4]
    bf6c:	add	x7, x2, x3
    bf70:	stlxr	w8, x7, [x4]
    bf74:	cbnz	w8, bf68 <omp_is_initial_device@@OMP_4.0+0x240>
    bf78:	dmb	ish
    bf7c:	cmp	x6, #0x0
    bf80:	b.le	bfb0 <omp_is_initial_device@@OMP_4.0+0x288>
    bf84:	cmp	x5, x2
    bf88:	b.gt	bf94 <omp_is_initial_device@@OMP_4.0+0x26c>
    bf8c:	mov	w0, #0x0                   	// #0
    bf90:	ret
    bf94:	add	x3, x3, x2
    bf98:	str	x2, [x0]
    bf9c:	cmp	x5, x3
    bfa0:	mov	w0, #0x1                   	// #1
    bfa4:	csel	x3, x5, x3, le
    bfa8:	str	x3, [x1]
    bfac:	ret
    bfb0:	cmp	x5, x2
    bfb4:	b.ge	bf8c <omp_is_initial_device@@OMP_4.0+0x264>  // b.tcont
    bfb8:	add	x3, x3, x2
    bfbc:	str	x2, [x0]
    bfc0:	cmp	x5, x3
    bfc4:	mov	w0, #0x1                   	// #1
    bfc8:	csel	x3, x5, x3, ge  // ge = tcont
    bfcc:	str	x3, [x1]
    bfd0:	ret
    bfd4:	ldr	x2, [x4]
    bfd8:	tbnz	x6, #63, c028 <omp_is_initial_device@@OMP_4.0+0x300>
    bfdc:	cmp	x2, x5
    bfe0:	sub	x6, x5, x2
    bfe4:	b.eq	bf8c <omp_is_initial_device@@OMP_4.0+0x264>  // b.none
    bfe8:	cmp	x3, x6
    bfec:	csel	x3, x3, x6, le
    bff0:	add	x6, x3, x2
    bff4:	ldxr	x7, [x4]
    bff8:	cmp	x7, x2
    bffc:	b.ne	c008 <omp_is_initial_device@@OMP_4.0+0x2e0>  // b.any
    c000:	stlxr	w8, x6, [x4]
    c004:	cbnz	w8, bff4 <omp_is_initial_device@@OMP_4.0+0x2cc>
    c008:	dmb	ish
    c00c:	cmp	x2, x7
    c010:	mov	x2, x7
    c014:	b.ne	bfdc <omp_is_initial_device@@OMP_4.0+0x2b4>  // b.any
    c018:	str	x2, [x0]
    c01c:	mov	w0, #0x1                   	// #1
    c020:	str	x6, [x1]
    c024:	ret
    c028:	cmp	x2, x5
    c02c:	sub	x6, x5, x2
    c030:	b.eq	bf8c <omp_is_initial_device@@OMP_4.0+0x264>  // b.none
    c034:	cmp	x3, x6
    c038:	csel	x3, x3, x6, ge  // ge = tcont
    c03c:	add	x6, x2, x3
    c040:	ldxr	x7, [x4]
    c044:	cmp	x7, x2
    c048:	b.ne	c054 <omp_is_initial_device@@OMP_4.0+0x32c>  // b.any
    c04c:	stlxr	w8, x6, [x4]
    c050:	cbnz	w8, c040 <omp_is_initial_device@@OMP_4.0+0x318>
    c054:	dmb	ish
    c058:	cmp	x2, x7
    c05c:	mov	x2, x7
    c060:	b.eq	c018 <omp_is_initial_device@@OMP_4.0+0x2f0>  // b.none
    c064:	mov	x2, x7
    c068:	cmp	x2, x5
    c06c:	sub	x6, x5, x2
    c070:	b.ne	c034 <omp_is_initial_device@@OMP_4.0+0x30c>  // b.any
    c074:	mov	w0, #0x0                   	// #0
    c078:	b	bf90 <omp_is_initial_device@@OMP_4.0+0x268>
    c07c:	nop
    c080:	sub	sp, sp, #0x10
    c084:	adrp	x3, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    c088:	ldr	x3, [x3, #4016]
    c08c:	mrs	x2, tpidr_el0
    c090:	mov	x9, #0x1                   	// #1
    c094:	str	x1, [sp, #8]
    c098:	add	x1, x2, x3
    c09c:	ldr	x8, [sp, #8]
    c0a0:	ldp	x2, x3, [x1, #16]
    c0a4:	cbz	x2, c0ac <omp_is_initial_device@@OMP_4.0+0x384>
    c0a8:	ldr	w9, [x2]
    c0ac:	ldr	x1, [x3, #16]
    c0b0:	mov	w10, #0x0                   	// #0
    c0b4:	ldr	x5, [x3, #72]
    c0b8:	cmp	x5, x1
    c0bc:	b.eq	c100 <omp_is_initial_device@@OMP_4.0+0x3d8>  // b.none
    c0c0:	ldr	x6, [x3, #24]
    c0c4:	sub	x7, x1, x5
    c0c8:	ldr	x4, [x3, #8]
    c0cc:	mov	w10, #0x1                   	// #1
    c0d0:	sdiv	x7, x7, x6
    c0d4:	sub	x2, x7, #0x1
    c0d8:	add	x2, x2, x9
    c0dc:	udiv	x2, x2, x9
    c0e0:	cmp	x4, x2
    c0e4:	csel	x2, x4, x2, cs  // cs = hs, nlast
    c0e8:	cmp	x2, x7
    c0ec:	madd	x2, x6, x2, x5
    c0f0:	csel	x1, x2, x1, ls  // ls = plast
    c0f4:	str	x1, [x3, #72]
    c0f8:	str	x5, [x0]
    c0fc:	str	x1, [x8]
    c100:	mov	w0, w10
    c104:	add	sp, sp, #0x10
    c108:	ret
    c10c:	nop
    c110:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    c114:	ldr	x2, [x2, #4016]
    c118:	mrs	x3, tpidr_el0
    c11c:	mov	x6, #0x1                   	// #1
    c120:	add	x2, x3, x2
    c124:	ldp	x3, x2, [x2, #16]
    c128:	cbz	x3, c130 <omp_is_initial_device@@OMP_4.0+0x408>
    c12c:	ldr	w6, [x3]
    c130:	add	x5, x2, #0x48
    c134:	ldr	x3, [x5]
    c138:	ldp	x8, x7, [x2, #8]
    c13c:	sub	x10, x6, #0x1
    c140:	ldr	x9, [x2, #24]
    c144:	sub	x4, x7, x3
    c148:	cmp	x3, x7
    c14c:	b.eq	c1d0 <omp_is_initial_device@@OMP_4.0+0x4a8>  // b.none
    c150:	sdiv	x4, x4, x9
    c154:	add	x2, x10, x4
    c158:	udiv	x2, x2, x6
    c15c:	cmp	x8, x2
    c160:	csel	x2, x8, x2, cs  // cs = hs, nlast
    c164:	cmp	x2, x4
    c168:	b.hi	c1a0 <omp_is_initial_device@@OMP_4.0+0x478>  // b.pmore
    c16c:	madd	x2, x9, x2, x3
    c170:	ldxr	x4, [x5]
    c174:	cmp	x4, x3
    c178:	b.ne	c184 <omp_is_initial_device@@OMP_4.0+0x45c>  // b.any
    c17c:	stlxr	w11, x2, [x5]
    c180:	cbnz	w11, c170 <omp_is_initial_device@@OMP_4.0+0x448>
    c184:	dmb	ish
    c188:	cmp	x4, x3
    c18c:	b.ne	c1c8 <omp_is_initial_device@@OMP_4.0+0x4a0>  // b.any
    c190:	str	x4, [x0]
    c194:	mov	w0, #0x1                   	// #1
    c198:	str	x2, [x1]
    c19c:	ret
    c1a0:	ldxr	x4, [x5]
    c1a4:	cmp	x4, x3
    c1a8:	b.ne	c1b4 <omp_is_initial_device@@OMP_4.0+0x48c>  // b.any
    c1ac:	stlxr	w2, x7, [x5]
    c1b0:	cbnz	w2, c1a0 <omp_is_initial_device@@OMP_4.0+0x478>
    c1b4:	dmb	ish
    c1b8:	cmp	x3, x4
    c1bc:	b.ne	c1c8 <omp_is_initial_device@@OMP_4.0+0x4a0>  // b.any
    c1c0:	mov	x2, x7
    c1c4:	b	c190 <omp_is_initial_device@@OMP_4.0+0x468>
    c1c8:	mov	x3, x4
    c1cc:	b	c144 <omp_is_initial_device@@OMP_4.0+0x41c>
    c1d0:	mov	w0, #0x0                   	// #0
    c1d4:	ret
    c1d8:	adrp	x5, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    c1dc:	ldr	x5, [x5, #4016]
    c1e0:	mrs	x4, tpidr_el0
    c1e4:	mov	x9, x0
    c1e8:	add	x2, x4, x5
    c1ec:	ldp	x7, x3, [x2, #16]
    c1f0:	ldr	x6, [x2, #72]
    c1f4:	cbz	x7, c2f0 <omp_is_initial_device@@OMP_4.0+0x5c8>
    c1f8:	ldr	w2, [x7]
    c1fc:	cmn	x6, #0x1
    c200:	mov	w0, #0xffffffff            	// #-1
    c204:	b.eq	c280 <omp_is_initial_device@@OMP_4.0+0x558>  // b.none
    c208:	cmp	x2, #0x1
    c20c:	b.eq	c2fc <omp_is_initial_device@@OMP_4.0+0x5d4>  // b.none
    c210:	ldr	x8, [x3, #8]
    c214:	cbz	x8, c284 <omp_is_initial_device@@OMP_4.0+0x55c>
    c218:	ldp	x7, x10, [x3, #16]
    c21c:	ldr	w12, [x3, #4]
    c220:	ldr	x11, [x3, #72]
    c224:	add	x0, x10, x7
    c228:	cbnz	w12, c378 <omp_is_initial_device@@OMP_4.0+0x650>
    c22c:	mvn	x3, x11
    c230:	add	x3, x3, x0
    c234:	udiv	x3, x3, x10
    c238:	add	x4, x4, x5
    c23c:	mov	w0, #0x1                   	// #1
    c240:	ldr	w5, [x4, #40]
    c244:	madd	x2, x2, x6, x5
    c248:	mul	x2, x2, x8
    c24c:	cmp	x3, x2
    c250:	b.ls	c280 <omp_is_initial_device@@OMP_4.0+0x558>  // b.plast
    c254:	add	x8, x8, x2
    c258:	madd	x2, x2, x10, x11
    c25c:	cmp	x3, x8
    c260:	str	x2, [x9]
    c264:	csel	x0, x3, x8, ls  // ls = plast
    c268:	madd	x10, x0, x10, x11
    c26c:	str	x10, [x1]
    c270:	b.ls	c354 <omp_is_initial_device@@OMP_4.0+0x62c>  // b.plast
    c274:	add	x6, x6, #0x1
    c278:	mov	w0, #0x0                   	// #0
    c27c:	str	x6, [x4, #72]
    c280:	ret
    c284:	mov	w0, #0x1                   	// #1
    c288:	cbnz	x6, c280 <omp_is_initial_device@@OMP_4.0+0x558>
    c28c:	ldp	x0, x7, [x3, #16]
    c290:	ldr	w10, [x3, #4]
    c294:	ldr	x8, [x3, #72]
    c298:	add	x6, x7, x0
    c29c:	cbnz	w10, c364 <omp_is_initial_device@@OMP_4.0+0x63c>
    c2a0:	mvn	x3, x8
    c2a4:	add	x3, x3, x6
    c2a8:	udiv	x3, x3, x7
    c2ac:	add	x6, x4, x5
    c2b0:	udiv	x0, x3, x2
    c2b4:	ldr	w6, [x6, #40]
    c2b8:	msub	x2, x0, x2, x3
    c2bc:	cmp	x6, x2
    c2c0:	b.cs	c2cc <omp_is_initial_device@@OMP_4.0+0x5a4>  // b.hs, b.nlast
    c2c4:	add	x0, x0, #0x1
    c2c8:	mov	x2, #0x0                   	// #0
    c2cc:	madd	x2, x0, x6, x2
    c2d0:	add	x0, x0, x2
    c2d4:	cmp	x2, x0
    c2d8:	b.cc	c328 <omp_is_initial_device@@OMP_4.0+0x600>  // b.lo, b.ul, b.last
    c2dc:	add	x4, x4, x5
    c2e0:	mov	x1, #0x1                   	// #1
    c2e4:	mov	w0, w1
    c2e8:	str	x1, [x4, #72]
    c2ec:	ret
    c2f0:	cmn	x6, #0x1
    c2f4:	mov	w0, #0xffffffff            	// #-1
    c2f8:	b.eq	c280 <omp_is_initial_device@@OMP_4.0+0x558>  // b.none
    c2fc:	ldr	x0, [x3, #72]
    c300:	str	x0, [x9]
    c304:	add	x4, x4, x5
    c308:	mov	x2, #0xffffffffffffffff    	// #-1
    c30c:	ldr	x0, [x3, #16]
    c310:	str	x0, [x1]
    c314:	ldr	x1, [x3, #72]
    c318:	str	x2, [x4, #72]
    c31c:	cmp	x1, x0
    c320:	cset	w0, eq  // eq = none
    c324:	ret
    c328:	madd	x2, x7, x2, x8
    c32c:	add	x4, x4, x5
    c330:	madd	x7, x7, x0, x8
    c334:	str	x2, [x9]
    c338:	cmp	x3, x0
    c33c:	str	x7, [x1]
    c340:	mov	w0, #0x0                   	// #0
    c344:	mov	x1, #0x1                   	// #1
    c348:	cneg	x1, x1, eq  // eq = none
    c34c:	str	x1, [x4, #72]
    c350:	ret
    c354:	mov	x1, #0xffffffffffffffff    	// #-1
    c358:	mov	w0, #0x0                   	// #0
    c35c:	str	x1, [x4, #72]
    c360:	ret
    c364:	sub	x0, x8, #0x1
    c368:	neg	x3, x7
    c36c:	sub	x0, x0, x6
    c370:	udiv	x3, x0, x3
    c374:	b	c2ac <omp_is_initial_device@@OMP_4.0+0x584>
    c378:	sub	x7, x11, #0x1
    c37c:	neg	x3, x10
    c380:	sub	x7, x7, x0
    c384:	udiv	x3, x7, x3
    c388:	b	c238 <omp_is_initial_device@@OMP_4.0+0x510>
    c38c:	nop
    c390:	adrp	x3, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    c394:	ldr	x3, [x3, #4016]
    c398:	mrs	x2, tpidr_el0
    c39c:	add	x2, x2, x3
    c3a0:	ldr	x2, [x2, #24]
    c3a4:	ldr	x3, [x2, #16]
    c3a8:	ldr	x4, [x2, #72]
    c3ac:	cmp	x3, x4
    c3b0:	b.eq	c3e4 <omp_is_initial_device@@OMP_4.0+0x6bc>  // b.none
    c3b4:	ldr	x6, [x2, #8]
    c3b8:	sub	x3, x3, x4
    c3bc:	ldr	w7, [x2, #4]
    c3c0:	cmp	x6, x3
    c3c4:	csel	x5, x6, x3, ls  // ls = plast
    c3c8:	tbnz	w7, #1, c3ec <omp_is_initial_device@@OMP_4.0+0x6c4>
    c3cc:	add	x3, x5, x4
    c3d0:	str	x3, [x2, #72]
    c3d4:	str	x4, [x0]
    c3d8:	mov	w0, #0x1                   	// #1
    c3dc:	str	x3, [x1]
    c3e0:	ret
    c3e4:	mov	w0, #0x0                   	// #0
    c3e8:	ret
    c3ec:	cmp	x6, x3
    c3f0:	csel	x5, x6, x3, cs  // cs = hs, nlast
    c3f4:	b	c3cc <omp_is_initial_device@@OMP_4.0+0x6a4>
    c3f8:	adrp	x3, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    c3fc:	ldr	x3, [x3, #4016]
    c400:	mrs	x2, tpidr_el0
    c404:	add	x2, x2, x3
    c408:	ldr	x2, [x2, #24]
    c40c:	add	x4, x2, #0x48
    c410:	ldr	w6, [x2, #4]
    c414:	ldp	x3, x5, [x2, #8]
    c418:	tbz	w6, #0, c464 <omp_is_initial_device@@OMP_4.0+0x73c>
    c41c:	ldxr	x6, [x4]
    c420:	add	x7, x6, x3
    c424:	stlxr	w8, x7, [x4]
    c428:	cbnz	w8, c41c <omp_is_initial_device@@OMP_4.0+0x6f4>
    c42c:	dmb	ish
    c430:	ldr	w2, [x2, #4]
    c434:	tbnz	w2, #1, c4b8 <omp_is_initial_device@@OMP_4.0+0x790>
    c438:	cmp	x5, x6
    c43c:	b.hi	c448 <omp_is_initial_device@@OMP_4.0+0x720>  // b.pmore
    c440:	mov	w0, #0x0                   	// #0
    c444:	ret
    c448:	add	x3, x3, x6
    c44c:	str	x6, [x0]
    c450:	cmp	x5, x3
    c454:	mov	w0, #0x1                   	// #1
    c458:	csel	x3, x5, x3, ls  // ls = plast
    c45c:	str	x3, [x1]
    c460:	ret
    c464:	ldr	x6, [x4]
    c468:	cmp	x6, x5
    c46c:	sub	x7, x5, x6
    c470:	b.eq	c440 <omp_is_initial_device@@OMP_4.0+0x718>  // b.none
    c474:	ldr	w8, [x2, #4]
    c478:	tbnz	w8, #1, c4dc <omp_is_initial_device@@OMP_4.0+0x7b4>
    c47c:	cmp	x3, x7
    c480:	csel	x3, x3, x7, ls  // ls = plast
    c484:	add	x8, x3, x6
    c488:	ldxr	x7, [x4]
    c48c:	cmp	x7, x6
    c490:	b.ne	c49c <omp_is_initial_device@@OMP_4.0+0x774>  // b.any
    c494:	stlxr	w9, x8, [x4]
    c498:	cbnz	w9, c488 <omp_is_initial_device@@OMP_4.0+0x760>
    c49c:	dmb	ish
    c4a0:	cmp	x6, x7
    c4a4:	b.ne	c508 <omp_is_initial_device@@OMP_4.0+0x7e0>  // b.any
    c4a8:	str	x7, [x0]
    c4ac:	mov	w0, #0x1                   	// #1
    c4b0:	str	x8, [x1]
    c4b4:	ret
    c4b8:	cmp	x5, x6
    c4bc:	b.cs	c440 <omp_is_initial_device@@OMP_4.0+0x718>  // b.hs, b.nlast
    c4c0:	add	x2, x3, x6
    c4c4:	str	x6, [x0]
    c4c8:	cmp	x5, x2
    c4cc:	mov	w0, #0x1                   	// #1
    c4d0:	csel	x3, x5, x2, cs  // cs = hs, nlast
    c4d4:	str	x3, [x1]
    c4d8:	ret
    c4dc:	cmp	x3, x7
    c4e0:	csel	x3, x3, x7, cs  // cs = hs, nlast
    c4e4:	add	x8, x3, x6
    c4e8:	ldxr	x7, [x4]
    c4ec:	cmp	x7, x6
    c4f0:	b.ne	c4fc <omp_is_initial_device@@OMP_4.0+0x7d4>  // b.any
    c4f4:	stlxr	w9, x8, [x4]
    c4f8:	cbnz	w9, c4e8 <omp_is_initial_device@@OMP_4.0+0x7c0>
    c4fc:	dmb	ish
    c500:	cmp	x7, x6
    c504:	b.eq	c4a8 <omp_is_initial_device@@OMP_4.0+0x780>  // b.none
    c508:	mov	x6, x7
    c50c:	b	c468 <omp_is_initial_device@@OMP_4.0+0x740>
    c510:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    c514:	ldr	x2, [x2, #4016]
    c518:	mrs	x3, tpidr_el0
    c51c:	mov	x8, #0x1                   	// #1
    c520:	add	x2, x3, x2
    c524:	ldp	x4, x3, [x2, #16]
    c528:	cbz	x4, c530 <omp_is_initial_device@@OMP_4.0+0x808>
    c52c:	ldr	w8, [x4]
    c530:	ldr	x4, [x3, #16]
    c534:	mov	w9, #0x0                   	// #0
    c538:	ldr	x6, [x3, #72]
    c53c:	cmp	x6, x4
    c540:	b.eq	c58c <omp_is_initial_device@@OMP_4.0+0x864>  // b.none
    c544:	ldr	w2, [x3, #4]
    c548:	ldr	x10, [x3, #24]
    c54c:	cbnz	w2, c594 <omp_is_initial_device@@OMP_4.0+0x86c>
    c550:	sub	x7, x4, x6
    c554:	udiv	x7, x7, x10
    c558:	sub	x5, x8, #0x1
    c55c:	mov	w9, #0x1                   	// #1
    c560:	add	x5, x5, x7
    c564:	ldr	x2, [x3, #8]
    c568:	udiv	x5, x5, x8
    c56c:	cmp	x2, x5
    c570:	csel	x2, x2, x5, cs  // cs = hs, nlast
    c574:	cmp	x7, x2
    c578:	madd	x2, x2, x10, x6
    c57c:	csel	x4, x2, x4, cs  // cs = hs, nlast
    c580:	str	x4, [x3, #72]
    c584:	str	x6, [x0]
    c588:	str	x4, [x1]
    c58c:	mov	w0, w9
    c590:	ret
    c594:	sub	x7, x6, x4
    c598:	neg	x2, x10
    c59c:	udiv	x7, x7, x2
    c5a0:	b	c558 <omp_is_initial_device@@OMP_4.0+0x830>
    c5a4:	nop
    c5a8:	sub	sp, sp, #0x10
    c5ac:	adrp	x3, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    c5b0:	ldr	x3, [x3, #4016]
    c5b4:	mrs	x2, tpidr_el0
    c5b8:	mov	x5, x1
    c5bc:	mov	x8, #0x1                   	// #1
    c5c0:	stp	x0, x1, [sp]
    c5c4:	add	x0, x2, x3
    c5c8:	ldr	x6, [sp]
    c5cc:	ldp	x1, x3, [x0, #16]
    c5d0:	cbz	x1, c5d8 <omp_is_initial_device@@OMP_4.0+0x8b0>
    c5d4:	ldr	w8, [x1]
    c5d8:	add	x4, x3, #0x48
    c5dc:	ldr	x2, [x4]
    c5e0:	ldp	x10, x9, [x3, #8]
    c5e4:	sub	x11, x8, #0x1
    c5e8:	ldr	x7, [x3, #24]
    c5ec:	neg	x12, x7
    c5f0:	sub	x1, x9, x2
    c5f4:	cmp	x2, x9
    c5f8:	b.eq	c6a8 <omp_is_initial_device@@OMP_4.0+0x980>  // b.none
    c5fc:	ldr	w0, [x3, #4]
    c600:	cbnz	w0, c658 <omp_is_initial_device@@OMP_4.0+0x930>
    c604:	udiv	x1, x1, x7
    c608:	add	x0, x11, x1
    c60c:	udiv	x0, x0, x8
    c610:	cmp	x10, x0
    c614:	csel	x0, x10, x0, cs  // cs = hs, nlast
    c618:	cmp	x1, x0
    c61c:	b.cc	c678 <omp_is_initial_device@@OMP_4.0+0x950>  // b.lo, b.ul, b.last
    c620:	madd	x1, x0, x7, x2
    c624:	ldxr	x0, [x4]
    c628:	cmp	x0, x2
    c62c:	b.ne	c638 <omp_is_initial_device@@OMP_4.0+0x910>  // b.any
    c630:	stlxr	w13, x1, [x4]
    c634:	cbnz	w13, c624 <omp_is_initial_device@@OMP_4.0+0x8fc>
    c638:	dmb	ish
    c63c:	cmp	x2, x0
    c640:	b.ne	c6a0 <omp_is_initial_device@@OMP_4.0+0x978>  // b.any
    c644:	str	x0, [x6]
    c648:	mov	w0, #0x1                   	// #1
    c64c:	str	x1, [x5]
    c650:	add	sp, sp, #0x10
    c654:	ret
    c658:	sub	x1, x2, x9
    c65c:	udiv	x1, x1, x12
    c660:	add	x0, x11, x1
    c664:	udiv	x0, x0, x8
    c668:	cmp	x10, x0
    c66c:	csel	x0, x10, x0, cs  // cs = hs, nlast
    c670:	cmp	x1, x0
    c674:	b.cs	c620 <omp_is_initial_device@@OMP_4.0+0x8f8>  // b.hs, b.nlast
    c678:	ldxr	x0, [x4]
    c67c:	cmp	x0, x2
    c680:	b.ne	c68c <omp_is_initial_device@@OMP_4.0+0x964>  // b.any
    c684:	stlxr	w1, x9, [x4]
    c688:	cbnz	w1, c678 <omp_is_initial_device@@OMP_4.0+0x950>
    c68c:	dmb	ish
    c690:	cmp	x2, x0
    c694:	b.ne	c6a0 <omp_is_initial_device@@OMP_4.0+0x978>  // b.any
    c698:	mov	x1, x9
    c69c:	b	c644 <omp_is_initial_device@@OMP_4.0+0x91c>
    c6a0:	mov	x2, x0
    c6a4:	b	c5f0 <omp_is_initial_device@@OMP_4.0+0x8c8>
    c6a8:	mov	w0, #0x0                   	// #0
    c6ac:	b	c650 <omp_is_initial_device@@OMP_4.0+0x928>

000000000000c6b0 <GOMP_loop_static_start@@GOMP_1.0>:
    c6b0:	stp	x29, x30, [sp, #-96]!
    c6b4:	mov	x29, sp
    c6b8:	stp	x25, x26, [sp, #64]
    c6bc:	mov	x25, x3
    c6c0:	adrp	x26, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    c6c4:	ldr	x26, [x26, #4016]
    c6c8:	stp	x23, x24, [sp, #48]
    c6cc:	mrs	x24, tpidr_el0
    c6d0:	mov	x23, x5
    c6d4:	str	x27, [sp, #80]
    c6d8:	add	x27, x24, x26
    c6dc:	stp	x19, x20, [sp, #16]
    c6e0:	mov	x20, x0
    c6e4:	mov	x19, x1
    c6e8:	stp	x21, x22, [sp, #32]
    c6ec:	mov	x0, #0x0                   	// #0
    c6f0:	mov	x21, x2
    c6f4:	mov	x22, x4
    c6f8:	str	xzr, [x27, #72]
    c6fc:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
    c700:	tst	w0, #0xff
    c704:	b.eq	c760 <GOMP_loop_static_start@@GOMP_1.0+0xb0>  // b.none
    c708:	ldr	x1, [x27, #24]
    c70c:	mov	w0, #0x1                   	// #1
    c710:	cmp	x21, #0x0
    c714:	ccmp	x20, x19, #0x4, gt
    c718:	str	w0, [x1]
    c71c:	str	x25, [x1, #8]
    c720:	b.gt	c790 <GOMP_loop_static_start@@GOMP_1.0+0xe0>
    c724:	cmp	x21, #0x0
    c728:	ccmp	x20, x19, #0x0, lt  // lt = tstop
    c72c:	csel	x19, x19, x20, ge  // ge = tcont
    c730:	add	x24, x24, x26
    c734:	str	x20, [x1, #72]
    c738:	ldr	x0, [x24, #32]
    c73c:	stp	x19, x21, [x1, #16]
    c740:	cbz	x0, c760 <GOMP_loop_static_start@@GOMP_1.0+0xb0>
    c744:	add	x0, x0, #0x50
    c748:	ldxr	x2, [x0]
    c74c:	stlxr	w3, x1, [x0]
    c750:	cbnz	w3, c748 <GOMP_loop_static_start@@GOMP_1.0+0x98>
    c754:	cmp	x2, #0x1
    c758:	b.eq	c760 <GOMP_loop_static_start@@GOMP_1.0+0xb0>  // b.none
    c75c:	bl	1d8a0 <omp_get_num_procs@@OMP_1.0+0xcf0>
    c760:	mov	x1, x23
    c764:	mov	x0, x22
    c768:	bl	bd30 <omp_is_initial_device@@OMP_4.0+0x8>
    c76c:	cmp	w0, #0x0
    c770:	cset	w0, eq  // eq = none
    c774:	ldp	x19, x20, [sp, #16]
    c778:	ldp	x21, x22, [sp, #32]
    c77c:	ldp	x23, x24, [sp, #48]
    c780:	ldp	x25, x26, [sp, #64]
    c784:	ldr	x27, [sp, #80]
    c788:	ldp	x29, x30, [sp], #96
    c78c:	ret
    c790:	mov	x19, x20
    c794:	b	c730 <GOMP_loop_static_start@@GOMP_1.0+0x80>

000000000000c798 <GOMP_loop_dynamic_start@@GOMP_1.0>:
    c798:	stp	x29, x30, [sp, #-64]!
    c79c:	mov	x29, sp
    c7a0:	stp	x19, x20, [sp, #16]
    c7a4:	mov	x19, x1
    c7a8:	mov	x20, x2
    c7ac:	stp	x21, x22, [sp, #32]
    c7b0:	mov	x21, x0
    c7b4:	mov	x22, x5
    c7b8:	mov	x0, #0x0                   	// #0
    c7bc:	stp	x23, x24, [sp, #48]
    c7c0:	mov	x23, x3
    c7c4:	mov	x24, x4
    c7c8:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
    c7cc:	tst	w0, #0xff
    c7d0:	b.ne	c7f0 <GOMP_loop_dynamic_start@@GOMP_1.0+0x58>  // b.any
    c7d4:	mov	x1, x22
    c7d8:	mov	x0, x24
    c7dc:	ldp	x19, x20, [sp, #16]
    c7e0:	ldp	x21, x22, [sp, #32]
    c7e4:	ldp	x23, x24, [sp, #48]
    c7e8:	ldp	x29, x30, [sp], #64
    c7ec:	b	bf40 <omp_is_initial_device@@OMP_4.0+0x218>
    c7f0:	adrp	x5, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    c7f4:	ldr	x5, [x5, #4016]
    c7f8:	mrs	x3, tpidr_el0
    c7fc:	mov	w4, #0x2                   	// #2
    c800:	cmp	x20, #0x0
    c804:	add	x2, x3, x5
    c808:	mul	x0, x20, x23
    c80c:	ccmp	x21, x19, #0x4, gt
    c810:	ldr	x1, [x2, #24]
    c814:	ldr	x2, [x2, #16]
    c818:	str	w4, [x1]
    c81c:	str	x23, [x1, #8]
    c820:	b.le	c8b4 <GOMP_loop_dynamic_start@@GOMP_1.0+0x11c>
    c824:	stp	x0, x21, [x1, #8]
    c828:	mov	x19, x21
    c82c:	mov	x4, #0x1                   	// #1
    c830:	str	x20, [x1, #24]
    c834:	str	x21, [x1, #72]
    c838:	cbz	x2, c848 <GOMP_loop_dynamic_start@@GOMP_1.0+0xb0>
    c83c:	ldr	w4, [x2]
    c840:	cmp	x20, #0x0
    c844:	b.le	c8d8 <GOMP_loop_dynamic_start@@GOMP_1.0+0x140>
    c848:	orr	x6, x0, x4
    c84c:	mov	x2, #0x7fffffff            	// #2147483647
    c850:	cmp	x6, x2
    c854:	b.hi	c90c <GOMP_loop_dynamic_start@@GOMP_1.0+0x174>  // b.pmore
    c858:	madd	x0, x4, x0, x0
    c85c:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
    c860:	sub	x0, x2, x0
    c864:	cmp	x0, x19
    c868:	cset	w0, gt
    c86c:	str	w0, [x1, #4]
    c870:	add	x3, x3, x5
    c874:	ldr	x0, [x3, #32]
    c878:	cbz	x0, c7d4 <GOMP_loop_dynamic_start@@GOMP_1.0+0x3c>
    c87c:	add	x0, x0, #0x50
    c880:	ldxr	x2, [x0]
    c884:	stlxr	w3, x1, [x0]
    c888:	cbnz	w3, c880 <GOMP_loop_dynamic_start@@GOMP_1.0+0xe8>
    c88c:	cmp	x2, #0x1
    c890:	b.eq	c7d4 <GOMP_loop_dynamic_start@@GOMP_1.0+0x3c>  // b.none
    c894:	bl	1d8a0 <omp_get_num_procs@@OMP_1.0+0xcf0>
    c898:	mov	x1, x22
    c89c:	mov	x0, x24
    c8a0:	ldp	x19, x20, [sp, #16]
    c8a4:	ldp	x21, x22, [sp, #32]
    c8a8:	ldp	x23, x24, [sp, #48]
    c8ac:	ldp	x29, x30, [sp], #64
    c8b0:	b	bf40 <omp_is_initial_device@@OMP_4.0+0x218>
    c8b4:	cmp	x20, #0x0
    c8b8:	str	x20, [x1, #24]
    c8bc:	ccmp	x21, x19, #0x0, lt  // lt = tstop
    c8c0:	str	x21, [x1, #72]
    c8c4:	csel	x19, x19, x21, ge  // ge = tcont
    c8c8:	stp	x0, x19, [x1, #8]
    c8cc:	mov	x4, #0x1                   	// #1
    c8d0:	cbnz	x2, c83c <GOMP_loop_dynamic_start@@GOMP_1.0+0xa4>
    c8d4:	b	c840 <GOMP_loop_dynamic_start@@GOMP_1.0+0xa8>
    c8d8:	neg	x2, x0
    c8dc:	mov	x0, #0x7fffffff            	// #2147483647
    c8e0:	orr	x6, x4, x2
    c8e4:	cmp	x6, x0
    c8e8:	b.hi	c90c <GOMP_loop_dynamic_start@@GOMP_1.0+0x174>  // b.pmore
    c8ec:	madd	x0, x4, x2, x2
    c8f0:	mov	x2, #0x2                   	// #2
    c8f4:	movk	x2, #0x8000, lsl #48
    c8f8:	add	x0, x0, x2
    c8fc:	cmp	x0, x19
    c900:	cset	w0, le
    c904:	str	w0, [x1, #4]
    c908:	b	c870 <GOMP_loop_dynamic_start@@GOMP_1.0+0xd8>
    c90c:	str	wzr, [x1, #4]
    c910:	b	c870 <GOMP_loop_dynamic_start@@GOMP_1.0+0xd8>
    c914:	nop

000000000000c918 <GOMP_loop_guided_start@@GOMP_1.0>:
    c918:	stp	x29, x30, [sp, #-64]!
    c91c:	mov	x29, sp
    c920:	stp	x19, x20, [sp, #16]
    c924:	mov	x20, x0
    c928:	mov	x19, x1
    c92c:	mov	x0, #0x0                   	// #0
    c930:	stp	x21, x22, [sp, #32]
    c934:	mov	x21, x2
    c938:	mov	x22, x4
    c93c:	stp	x23, x24, [sp, #48]
    c940:	mov	x24, x3
    c944:	mov	x23, x5
    c948:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
    c94c:	tst	w0, #0xff
    c950:	b.eq	c9bc <GOMP_loop_guided_start@@GOMP_1.0+0xa4>  // b.none
    c954:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    c958:	ldr	x2, [x2, #4016]
    c95c:	mrs	x0, tpidr_el0
    c960:	mov	w3, #0x3                   	// #3
    c964:	cmp	x21, #0x0
    c968:	add	x1, x0, x2
    c96c:	ccmp	x20, x19, #0x4, gt
    c970:	ldr	x1, [x1, #24]
    c974:	str	w3, [x1]
    c978:	str	x24, [x1, #8]
    c97c:	b.gt	c9d8 <GOMP_loop_guided_start@@GOMP_1.0+0xc0>
    c980:	cmp	x21, #0x0
    c984:	ccmp	x20, x19, #0x0, lt  // lt = tstop
    c988:	csel	x19, x19, x20, ge  // ge = tcont
    c98c:	add	x0, x0, x2
    c990:	str	x20, [x1, #72]
    c994:	ldr	x0, [x0, #32]
    c998:	stp	x19, x21, [x1, #16]
    c99c:	cbz	x0, c9bc <GOMP_loop_guided_start@@GOMP_1.0+0xa4>
    c9a0:	add	x0, x0, #0x50
    c9a4:	ldxr	x2, [x0]
    c9a8:	stlxr	w3, x1, [x0]
    c9ac:	cbnz	w3, c9a4 <GOMP_loop_guided_start@@GOMP_1.0+0x8c>
    c9b0:	cmp	x2, #0x1
    c9b4:	b.eq	c9bc <GOMP_loop_guided_start@@GOMP_1.0+0xa4>  // b.none
    c9b8:	bl	1d8a0 <omp_get_num_procs@@OMP_1.0+0xcf0>
    c9bc:	mov	x1, x23
    c9c0:	mov	x0, x22
    c9c4:	ldp	x19, x20, [sp, #16]
    c9c8:	ldp	x21, x22, [sp, #32]
    c9cc:	ldp	x23, x24, [sp, #48]
    c9d0:	ldp	x29, x30, [sp], #64
    c9d4:	b	c110 <omp_is_initial_device@@OMP_4.0+0x3e8>
    c9d8:	mov	x19, x20
    c9dc:	b	c98c <GOMP_loop_guided_start@@GOMP_1.0+0x74>

000000000000c9e0 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0>:
    c9e0:	stp	x29, x30, [sp, #-96]!
    c9e4:	adrp	x6, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    c9e8:	add	x6, x6, #0x2b0
    c9ec:	mov	x29, sp
    c9f0:	stp	x25, x26, [sp, #64]
    c9f4:	adrp	x26, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    c9f8:	ldr	x26, [x26, #4016]
    c9fc:	stp	x27, x28, [sp, #80]
    ca00:	mrs	x27, tpidr_el0
    ca04:	add	x25, x27, x26
    ca08:	stp	x19, x20, [sp, #16]
    ca0c:	mov	x20, x3
    ca10:	ldr	x7, [x25, #80]
    ca14:	stp	x21, x22, [sp, #32]
    ca18:	mov	x21, x4
    ca1c:	cmp	x7, #0x0
    ca20:	add	x7, x7, #0x90
    ca24:	csel	x6, x6, x7, eq  // eq = none
    ca28:	stp	x23, x24, [sp, #48]
    ca2c:	mov	x22, x2
    ca30:	mov	x24, x0
    ca34:	mov	x23, x1
    ca38:	ldr	w3, [x6, #8]
    ca3c:	and	w19, w3, #0x7fffffff
    ca40:	cmp	w19, #0x3
    ca44:	b.eq	caf0 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x110>  // b.none
    ca48:	tst	w3, #0x7ffffffc
    ca4c:	b.ne	cac0 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0xe0>  // b.any
    ca50:	cmp	w19, #0x1
    ca54:	b.ne	ca80 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0xa0>  // b.any
    ca58:	mov	x5, x4
    ca5c:	mov	x4, x20
    ca60:	ldp	x19, x20, [sp, #16]
    ca64:	ldp	x21, x22, [sp, #32]
    ca68:	ldp	x23, x24, [sp, #48]
    ca6c:	ldp	x25, x26, [sp, #64]
    ca70:	ldp	x27, x28, [sp, #80]
    ca74:	ldp	x29, x30, [sp], #96
    ca78:	ldrsw	x3, [x6, #12]
    ca7c:	b	c6b0 <GOMP_loop_static_start@@GOMP_1.0>
    ca80:	cmp	w19, #0x2
    ca84:	b.ne	cc88 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x2a8>  // b.any
    ca88:	ldr	w28, [x6, #12]
    ca8c:	mov	x0, #0x0                   	// #0
    ca90:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
    ca94:	tst	w0, #0xff
    ca98:	b.ne	cb80 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x1a0>  // b.any
    ca9c:	mov	x1, x21
    caa0:	mov	x0, x20
    caa4:	ldp	x19, x20, [sp, #16]
    caa8:	ldp	x21, x22, [sp, #32]
    caac:	ldp	x23, x24, [sp, #48]
    cab0:	ldp	x25, x26, [sp, #64]
    cab4:	ldp	x27, x28, [sp, #80]
    cab8:	ldp	x29, x30, [sp], #96
    cabc:	b	bf40 <omp_is_initial_device@@OMP_4.0+0x218>
    cac0:	cmp	w19, #0x4
    cac4:	b.ne	cc88 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x2a8>  // b.any
    cac8:	mov	x5, x4
    cacc:	mov	x4, x20
    cad0:	ldp	x19, x20, [sp, #16]
    cad4:	mov	x3, #0x0                   	// #0
    cad8:	ldp	x21, x22, [sp, #32]
    cadc:	ldp	x23, x24, [sp, #48]
    cae0:	ldp	x25, x26, [sp, #64]
    cae4:	ldp	x27, x28, [sp, #80]
    cae8:	ldp	x29, x30, [sp], #96
    caec:	b	c6b0 <GOMP_loop_static_start@@GOMP_1.0>
    caf0:	ldr	w28, [x6, #12]
    caf4:	mov	x0, #0x0                   	// #0
    caf8:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
    cafc:	tst	w0, #0xff
    cb00:	b.eq	cb5c <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x17c>  // b.none
    cb04:	ldr	x1, [x25, #24]
    cb08:	sxtw	x28, w28
    cb0c:	cmp	x22, #0x0
    cb10:	ccmp	x24, x23, #0x4, gt
    cb14:	str	w19, [x1]
    cb18:	str	x28, [x1, #8]
    cb1c:	b.gt	cc1c <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x23c>
    cb20:	cmp	x22, #0x0
    cb24:	ccmp	x24, x23, #0x0, lt  // lt = tstop
    cb28:	csel	x23, x23, x24, ge  // ge = tcont
    cb2c:	add	x26, x27, x26
    cb30:	str	x24, [x1, #72]
    cb34:	ldr	x0, [x26, #32]
    cb38:	stp	x23, x22, [x1, #16]
    cb3c:	cbz	x0, cb5c <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x17c>
    cb40:	add	x0, x0, #0x50
    cb44:	ldxr	x2, [x0]
    cb48:	stlxr	w3, x1, [x0]
    cb4c:	cbnz	w3, cb44 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x164>
    cb50:	cmp	x2, #0x1
    cb54:	b.eq	cb5c <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x17c>  // b.none
    cb58:	bl	1d8a0 <omp_get_num_procs@@OMP_1.0+0xcf0>
    cb5c:	mov	x1, x21
    cb60:	mov	x0, x20
    cb64:	ldp	x19, x20, [sp, #16]
    cb68:	ldp	x21, x22, [sp, #32]
    cb6c:	ldp	x23, x24, [sp, #48]
    cb70:	ldp	x25, x26, [sp, #64]
    cb74:	ldp	x27, x28, [sp, #80]
    cb78:	ldp	x29, x30, [sp], #96
    cb7c:	b	c110 <omp_is_initial_device@@OMP_4.0+0x3e8>
    cb80:	ldr	x1, [x25, #24]
    cb84:	sxtw	x28, w28
    cb88:	cmp	x22, #0x0
    cb8c:	ccmp	x24, x23, #0x4, gt
    cb90:	str	w19, [x1]
    cb94:	mul	x0, x28, x22
    cb98:	str	x28, [x1, #8]
    cb9c:	b.le	cc24 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x244>
    cba0:	ldr	x2, [x25, #16]
    cba4:	stp	x0, x24, [x1, #8]
    cba8:	mov	x23, x24
    cbac:	str	x22, [x1, #24]
    cbb0:	mov	x3, #0x1                   	// #1
    cbb4:	str	x24, [x1, #72]
    cbb8:	cbz	x2, cbc8 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x1e8>
    cbbc:	ldr	w3, [x2]
    cbc0:	cmp	x22, #0x0
    cbc4:	b.le	cc4c <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x26c>
    cbc8:	orr	x4, x0, x3
    cbcc:	mov	x2, #0x7fffffff            	// #2147483647
    cbd0:	cmp	x4, x2
    cbd4:	b.hi	cc80 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x2a0>  // b.pmore
    cbd8:	madd	x0, x3, x0, x0
    cbdc:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
    cbe0:	sub	x0, x2, x0
    cbe4:	cmp	x0, x23
    cbe8:	cset	w0, gt
    cbec:	str	w0, [x1, #4]
    cbf0:	add	x26, x27, x26
    cbf4:	ldr	x0, [x26, #32]
    cbf8:	cbz	x0, ca9c <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0xbc>
    cbfc:	add	x0, x0, #0x50
    cc00:	ldxr	x2, [x0]
    cc04:	stlxr	w3, x1, [x0]
    cc08:	cbnz	w3, cc00 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x220>
    cc0c:	cmp	x2, #0x1
    cc10:	b.eq	ca9c <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0xbc>  // b.none
    cc14:	bl	1d8a0 <omp_get_num_procs@@OMP_1.0+0xcf0>
    cc18:	b	ca9c <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0xbc>
    cc1c:	mov	x23, x24
    cc20:	b	cb2c <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x14c>
    cc24:	cmp	x22, #0x0
    cc28:	str	x22, [x1, #24]
    cc2c:	ldr	x2, [x25, #16]
    cc30:	ccmp	x24, x23, #0x0, lt  // lt = tstop
    cc34:	csel	x23, x23, x24, ge  // ge = tcont
    cc38:	stp	x0, x23, [x1, #8]
    cc3c:	mov	x3, #0x1                   	// #1
    cc40:	str	x24, [x1, #72]
    cc44:	cbnz	x2, cbbc <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x1dc>
    cc48:	b	cbc0 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x1e0>
    cc4c:	neg	x2, x0
    cc50:	mov	x0, #0x7fffffff            	// #2147483647
    cc54:	orr	x4, x3, x2
    cc58:	cmp	x4, x0
    cc5c:	b.hi	cc80 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x2a0>  // b.pmore
    cc60:	madd	x0, x3, x2, x2
    cc64:	mov	x2, #0x2                   	// #2
    cc68:	movk	x2, #0x8000, lsl #48
    cc6c:	add	x0, x0, x2
    cc70:	cmp	x0, x23
    cc74:	cset	w0, le
    cc78:	str	w0, [x1, #4]
    cc7c:	b	cbf0 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x210>
    cc80:	str	wzr, [x1, #4]
    cc84:	b	cbf0 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x210>
    cc88:	bl	8820 <abort@plt>
    cc8c:	nop

000000000000cc90 <GOMP_loop_start@@GOMP_5.0>:
    cc90:	stp	x29, x30, [sp, #-112]!
    cc94:	mov	x29, sp
    cc98:	stp	x25, x26, [sp, #64]
    cc9c:	mov	x25, x6
    cca0:	adrp	x26, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    cca4:	ldr	x26, [x26, #4016]
    cca8:	stp	x19, x20, [sp, #16]
    ccac:	mrs	x19, tpidr_el0
    ccb0:	mov	x20, x3
    ccb4:	stp	x21, x22, [sp, #32]
    ccb8:	add	x22, x19, x26
    ccbc:	mov	x21, x7
    ccc0:	stp	x23, x24, [sp, #48]
    ccc4:	mov	x24, x0
    ccc8:	mov	x23, x5
    cccc:	stp	x27, x28, [sp, #80]
    ccd0:	mov	x28, x1
    ccd4:	str	xzr, [x22, #72]
    ccd8:	stp	x2, x4, [sp, #96]
    ccdc:	ldr	x27, [sp, #112]
    cce0:	cbz	x7, cd64 <GOMP_loop_start@@GOMP_5.0+0xd4>
    cce4:	bl	1a1e0 <GOMP_task_reduction_remap@@GOMP_5.0+0x570>
    cce8:	mov	x0, #0x0                   	// #0
    ccec:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
    ccf0:	tst	w0, #0xff
    ccf4:	b.ne	cd74 <GOMP_loop_start@@GOMP_5.0+0xe4>  // b.any
    ccf8:	ldr	x1, [x22, #24]
    ccfc:	mov	x0, x21
    cd00:	ldr	x1, [x1, #88]
    cd04:	bl	19f80 <GOMP_task_reduction_remap@@GOMP_5.0+0x310>
    cd08:	cbz	x27, cd1c <GOMP_loop_start@@GOMP_5.0+0x8c>
    cd0c:	add	x0, x19, x26
    cd10:	ldr	x0, [x0, #24]
    cd14:	ldr	x0, [x0, #32]
    cd18:	str	x0, [x27]
    cd1c:	cbz	x23, cecc <GOMP_loop_start@@GOMP_5.0+0x23c>
    cd20:	add	x19, x19, x26
    cd24:	ldr	x0, [x19, #24]
    cd28:	ldr	w0, [x0]
    cd2c:	cmp	w0, #0x2
    cd30:	b.eq	cf8c <GOMP_loop_start@@GOMP_5.0+0x2fc>  // b.none
    cd34:	b.ls	cf74 <GOMP_loop_start@@GOMP_5.0+0x2e4>  // b.plast
    cd38:	cmp	w0, #0x3
    cd3c:	b.ne	cf3c <GOMP_loop_start@@GOMP_5.0+0x2ac>  // b.any
    cd40:	mov	x1, x25
    cd44:	mov	x0, x23
    cd48:	ldp	x19, x20, [sp, #16]
    cd4c:	ldp	x21, x22, [sp, #32]
    cd50:	ldp	x23, x24, [sp, #48]
    cd54:	ldp	x25, x26, [sp, #64]
    cd58:	ldp	x27, x28, [sp, #80]
    cd5c:	ldp	x29, x30, [sp], #112
    cd60:	b	c110 <omp_is_initial_device@@OMP_4.0+0x3e8>
    cd64:	mov	x0, #0x0                   	// #0
    cd68:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
    cd6c:	tst	w0, #0xff
    cd70:	b.eq	cd08 <GOMP_loop_start@@GOMP_5.0+0x78>  // b.none
    cd74:	tst	x20, #0x7ffffffc
    cd78:	and	x20, x20, #0x7fffffff
    cd7c:	b.ne	cf80 <GOMP_loop_start@@GOMP_5.0+0x2f0>  // b.any
    cd80:	cbnz	x20, cfd8 <GOMP_loop_start@@GOMP_5.0+0x348>
    cd84:	add	x2, x19, x26
    cd88:	adrp	x1, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    cd8c:	add	x1, x1, #0x2b0
    cd90:	ldr	x0, [x2, #80]
    cd94:	cmp	x0, #0x0
    cd98:	add	x0, x0, #0x90
    cd9c:	csel	x1, x1, x0, eq  // eq = none
    cda0:	ldr	w0, [x1, #8]
    cda4:	tst	w0, #0x7ffffffc
    cda8:	and	w0, w0, #0x7fffffff
    cdac:	b.ne	ceec <GOMP_loop_start@@GOMP_5.0+0x25c>  // b.any
    cdb0:	cbz	w0, cf7c <GOMP_loop_start@@GOMP_5.0+0x2ec>
    cdb4:	ldrsw	x1, [x1, #12]
    cdb8:	mov	w20, w0
    cdbc:	str	x1, [sp, #104]
    cdc0:	add	x3, x19, x26
    cdc4:	ldr	x1, [sp, #96]
    cdc8:	ldr	x22, [x3, #24]
    cdcc:	cmp	x1, #0x0
    cdd0:	cset	w1, gt
    cdd4:	cmp	x24, x28
    cdd8:	cset	w2, gt
    cddc:	str	w0, [x22]
    cde0:	ands	w2, w1, w2
    cde4:	ldr	x0, [sp, #104]
    cde8:	str	x0, [x22, #8]
    cdec:	b.eq	cf24 <GOMP_loop_start@@GOMP_5.0+0x294>  // b.none
    cdf0:	mov	w1, w2
    cdf4:	mov	x28, x24
    cdf8:	ldr	x2, [sp, #96]
    cdfc:	stp	x28, x2, [x22, #16]
    ce00:	cmp	x20, #0x2
    ce04:	str	x24, [x22, #72]
    ce08:	b.ne	ce58 <GOMP_loop_start@@GOMP_5.0+0x1c8>  // b.any
    ce0c:	add	x0, x19, x26
    ce10:	ldr	x3, [sp, #104]
    ce14:	ldr	x0, [x0, #16]
    ce18:	mul	x24, x2, x3
    ce1c:	mov	x2, #0x1                   	// #1
    ce20:	str	x24, [x22, #8]
    ce24:	cbz	x0, ce2c <GOMP_loop_start@@GOMP_5.0+0x19c>
    ce28:	ldr	w2, [x0]
    ce2c:	cbz	w1, cfe0 <GOMP_loop_start@@GOMP_5.0+0x350>
    ce30:	orr	x1, x24, x2
    ce34:	mov	x0, #0x7fffffff            	// #2147483647
    ce38:	cmp	x1, x0
    ce3c:	b.hi	d014 <GOMP_loop_start@@GOMP_5.0+0x384>  // b.pmore
    ce40:	madd	x24, x2, x24, x24
    ce44:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    ce48:	sub	x24, x0, x24
    ce4c:	cmp	x28, x24
    ce50:	cset	w0, lt  // lt = tstop
    ce54:	str	w0, [x22, #4]
    ce58:	cbz	x21, ce80 <GOMP_loop_start@@GOMP_5.0+0x1f0>
    ce5c:	mov	x0, x21
    ce60:	bl	17c48 <GOMP_taskgroup_reduction_register@@GOMP_5.0>
    ce64:	add	x0, x19, x26
    ce68:	mov	w1, #0x1                   	// #1
    ce6c:	ldr	x2, [x0, #80]
    ce70:	ldr	x22, [x0, #24]
    ce74:	ldr	x0, [x2, #40]
    ce78:	strb	w1, [x0, #50]
    ce7c:	str	x21, [x22, #88]
    ce80:	cbz	x27, ce9c <GOMP_loop_start@@GOMP_5.0+0x20c>
    ce84:	ldr	x0, [x27]
    ce88:	cmp	x0, #0x20
    ce8c:	b.ls	cfc0 <GOMP_loop_start@@GOMP_5.0+0x330>  // b.plast
    ce90:	bl	b330 <fprintf@plt+0x2870>
    ce94:	str	x0, [x22, #32]
    ce98:	str	x0, [x27]
    ce9c:	add	x1, x19, x26
    cea0:	ldr	x0, [x1, #32]
    cea4:	cbz	x0, cd1c <GOMP_loop_start@@GOMP_5.0+0x8c>
    cea8:	ldr	x2, [x1, #24]
    ceac:	add	x0, x0, #0x50
    ceb0:	ldxr	x1, [x0]
    ceb4:	stlxr	w3, x2, [x0]
    ceb8:	cbnz	w3, ceb0 <GOMP_loop_start@@GOMP_5.0+0x220>
    cebc:	cmp	x1, #0x1
    cec0:	b.eq	cd1c <GOMP_loop_start@@GOMP_5.0+0x8c>  // b.none
    cec4:	bl	1d8a0 <omp_get_num_procs@@OMP_1.0+0xcf0>
    cec8:	cbnz	x23, cd20 <GOMP_loop_start@@GOMP_5.0+0x90>
    cecc:	mov	w0, #0x1                   	// #1
    ced0:	ldp	x19, x20, [sp, #16]
    ced4:	ldp	x21, x22, [sp, #32]
    ced8:	ldp	x23, x24, [sp, #48]
    cedc:	ldp	x25, x26, [sp, #64]
    cee0:	ldp	x27, x28, [sp, #80]
    cee4:	ldp	x29, x30, [sp], #112
    cee8:	ret
    ceec:	cmp	w0, #0x4
    cef0:	b.ne	cf7c <GOMP_loop_start@@GOMP_5.0+0x2ec>  // b.any
    cef4:	ldr	x22, [x2, #24]
    cef8:	ldr	x0, [sp, #96]
    cefc:	str	xzr, [x22, #8]
    cf00:	cmp	x0, #0x0
    cf04:	mov	w0, #0x1                   	// #1
    cf08:	cset	w1, gt
    cf0c:	str	w0, [x22]
    cf10:	cmp	w1, #0x0
    cf14:	ccmp	x24, x28, #0x4, ne  // ne = any
    cf18:	b.gt	cfb0 <GOMP_loop_start@@GOMP_5.0+0x320>
    cf1c:	mov	x20, #0x1                   	// #1
    cf20:	str	xzr, [sp, #104]
    cf24:	ldr	x0, [sp, #96]
    cf28:	cmp	x0, #0x0
    cf2c:	mov	x2, x0
    cf30:	ccmp	x24, x28, #0x0, lt  // lt = tstop
    cf34:	csel	x28, x28, x24, ge  // ge = tcont
    cf38:	b	cdfc <GOMP_loop_start@@GOMP_5.0+0x16c>
    cf3c:	cmp	w0, #0x4
    cf40:	b.ne	cf7c <GOMP_loop_start@@GOMP_5.0+0x2ec>  // b.any
    cf44:	mov	x1, x25
    cf48:	mov	x0, x23
    cf4c:	bl	bd30 <omp_is_initial_device@@OMP_4.0+0x8>
    cf50:	cmp	w0, #0x0
    cf54:	cset	w0, eq  // eq = none
    cf58:	ldp	x19, x20, [sp, #16]
    cf5c:	ldp	x21, x22, [sp, #32]
    cf60:	ldp	x23, x24, [sp, #48]
    cf64:	ldp	x25, x26, [sp, #64]
    cf68:	ldp	x27, x28, [sp, #80]
    cf6c:	ldp	x29, x30, [sp], #112
    cf70:	ret
    cf74:	cmp	w0, #0x1
    cf78:	b.eq	cf44 <GOMP_loop_start@@GOMP_5.0+0x2b4>  // b.none
    cf7c:	bl	8820 <abort@plt>
    cf80:	cmp	x20, #0x4
    cf84:	b.eq	cd84 <GOMP_loop_start@@GOMP_5.0+0xf4>  // b.none
    cf88:	bl	8820 <abort@plt>
    cf8c:	mov	x1, x25
    cf90:	mov	x0, x23
    cf94:	ldp	x19, x20, [sp, #16]
    cf98:	ldp	x21, x22, [sp, #32]
    cf9c:	ldp	x23, x24, [sp, #48]
    cfa0:	ldp	x25, x26, [sp, #64]
    cfa4:	ldp	x27, x28, [sp, #80]
    cfa8:	ldp	x29, x30, [sp], #112
    cfac:	b	bf40 <omp_is_initial_device@@OMP_4.0+0x218>
    cfb0:	ldr	x0, [sp, #96]
    cfb4:	stp	x24, x0, [x22, #16]
    cfb8:	str	x24, [x22, #72]
    cfbc:	b	ce58 <GOMP_loop_start@@GOMP_5.0+0x1c8>
    cfc0:	mov	x2, x0
    cfc4:	mov	w1, #0x0                   	// #0
    cfc8:	add	x0, x22, #0x60
    cfcc:	bl	8770 <memset@plt>
    cfd0:	str	x0, [x27]
    cfd4:	b	ce9c <GOMP_loop_start@@GOMP_5.0+0x20c>
    cfd8:	mov	w0, w20
    cfdc:	b	cdc0 <GOMP_loop_start@@GOMP_5.0+0x130>
    cfe0:	neg	x3, x24
    cfe4:	mov	x0, #0x7fffffff            	// #2147483647
    cfe8:	orr	x1, x2, x3
    cfec:	cmp	x1, x0
    cff0:	b.hi	d014 <GOMP_loop_start@@GOMP_5.0+0x384>  // b.pmore
    cff4:	madd	x24, x2, x3, x3
    cff8:	mov	x0, #0x2                   	// #2
    cffc:	movk	x0, #0x8000, lsl #48
    d000:	add	x0, x24, x0
    d004:	cmp	x28, x0
    d008:	cset	w0, ge  // ge = tcont
    d00c:	str	w0, [x22, #4]
    d010:	b	ce58 <GOMP_loop_start@@GOMP_5.0+0x1c8>
    d014:	str	wzr, [x22, #4]
    d018:	b	ce58 <GOMP_loop_start@@GOMP_5.0+0x1c8>
    d01c:	nop

000000000000d020 <GOMP_loop_ordered_static_start@@GOMP_1.0>:
    d020:	stp	x29, x30, [sp, #-96]!
    d024:	mov	x29, sp
    d028:	stp	x25, x26, [sp, #64]
    d02c:	mov	x26, x3
    d030:	adrp	x25, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    d034:	ldr	x25, [x25, #4016]
    d038:	stp	x23, x24, [sp, #48]
    d03c:	mrs	x24, tpidr_el0
    d040:	mov	x23, x5
    d044:	str	x27, [sp, #80]
    d048:	add	x27, x24, x25
    d04c:	stp	x19, x20, [sp, #16]
    d050:	mov	x20, x0
    d054:	mov	x19, x1
    d058:	stp	x21, x22, [sp, #32]
    d05c:	mov	x0, #0x1                   	// #1
    d060:	mov	x21, x2
    d064:	mov	x22, x4
    d068:	str	xzr, [x27, #72]
    d06c:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
    d070:	tst	w0, #0xff
    d074:	b.eq	d0d8 <GOMP_loop_ordered_static_start@@GOMP_1.0+0xb8>  // b.none
    d078:	ldr	x0, [x27, #24]
    d07c:	mov	w1, #0x1                   	// #1
    d080:	cmp	x21, #0x0
    d084:	ccmp	x20, x19, #0x4, gt
    d088:	str	w1, [x0]
    d08c:	str	x26, [x0, #8]
    d090:	b.gt	d108 <GOMP_loop_ordered_static_start@@GOMP_1.0+0xe8>
    d094:	cmp	x21, #0x0
    d098:	ccmp	x20, x19, #0x0, lt  // lt = tstop
    d09c:	csel	x19, x19, x20, ge  // ge = tcont
    d0a0:	add	x24, x24, x25
    d0a4:	stp	x19, x21, [x0, #16]
    d0a8:	str	x20, [x0, #72]
    d0ac:	bl	11320 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x418>
    d0b0:	ldr	x0, [x24, #32]
    d0b4:	cbz	x0, d0d8 <GOMP_loop_ordered_static_start@@GOMP_1.0+0xb8>
    d0b8:	ldr	x2, [x24, #24]
    d0bc:	add	x0, x0, #0x50
    d0c0:	ldxr	x1, [x0]
    d0c4:	stlxr	w3, x2, [x0]
    d0c8:	cbnz	w3, d0c0 <GOMP_loop_ordered_static_start@@GOMP_1.0+0xa0>
    d0cc:	cmp	x1, #0x1
    d0d0:	b.eq	d0d8 <GOMP_loop_ordered_static_start@@GOMP_1.0+0xb8>  // b.none
    d0d4:	bl	1d8a0 <omp_get_num_procs@@OMP_1.0+0xcf0>
    d0d8:	mov	x1, x23
    d0dc:	mov	x0, x22
    d0e0:	bl	bd30 <omp_is_initial_device@@OMP_4.0+0x8>
    d0e4:	cmp	w0, #0x0
    d0e8:	cset	w0, eq  // eq = none
    d0ec:	ldp	x19, x20, [sp, #16]
    d0f0:	ldp	x21, x22, [sp, #32]
    d0f4:	ldp	x23, x24, [sp, #48]
    d0f8:	ldp	x25, x26, [sp, #64]
    d0fc:	ldr	x27, [sp, #80]
    d100:	ldp	x29, x30, [sp], #96
    d104:	ret
    d108:	mov	x19, x20
    d10c:	b	d0a0 <GOMP_loop_ordered_static_start@@GOMP_1.0+0x80>

000000000000d110 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0>:
    d110:	stp	x29, x30, [sp, #-80]!
    d114:	mov	x29, sp
    d118:	stp	x19, x20, [sp, #16]
    d11c:	mov	x20, x1
    d120:	adrp	x19, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    d124:	ldr	x19, [x19, #4016]
    d128:	stp	x21, x22, [sp, #32]
    d12c:	mov	x22, x0
    d130:	mov	x21, x2
    d134:	mov	x0, #0x1                   	// #1
    d138:	stp	x23, x24, [sp, #48]
    d13c:	mov	x23, x3
    d140:	mov	x24, x4
    d144:	stp	x25, x26, [sp, #64]
    d148:	mov	x25, x5
    d14c:	mrs	x26, tpidr_el0
    d150:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
    d154:	tst	w0, #0xff
    d158:	b.ne	d1d4 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0xc4>  // b.any
    d15c:	add	x0, x26, x19
    d160:	mov	w2, #0x1                   	// #1
    d164:	ldr	x0, [x0, #24]
    d168:	add	x0, x0, #0x40
    d16c:	ldaxr	w1, [x0]
    d170:	cbnz	w1, d17c <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x6c>
    d174:	stxr	w3, w2, [x0]
    d178:	cbnz	w3, d16c <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x5c>
    d17c:	cmp	w1, #0x0
    d180:	b.ne	d33c <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x22c>  // b.any
    d184:	mov	x1, x25
    d188:	mov	x0, x24
    d18c:	bl	bec0 <omp_is_initial_device@@OMP_4.0+0x198>
    d190:	mov	w20, w0
    d194:	tst	w0, #0xff
    d198:	b.ne	d2b0 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x1a0>  // b.any
    d19c:	add	x19, x26, x19
    d1a0:	ldr	x1, [x19, #24]
    d1a4:	add	x1, x1, #0x40
    d1a8:	ldxr	w0, [x1]
    d1ac:	stlxr	w2, wzr, [x1]
    d1b0:	cbnz	w2, d1a8 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x98>
    d1b4:	tbnz	w0, #31, d2dc <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x1cc>
    d1b8:	mov	w0, w20
    d1bc:	ldp	x19, x20, [sp, #16]
    d1c0:	ldp	x21, x22, [sp, #32]
    d1c4:	ldp	x23, x24, [sp, #48]
    d1c8:	ldp	x25, x26, [sp, #64]
    d1cc:	ldp	x29, x30, [sp], #80
    d1d0:	ret
    d1d4:	add	x2, x26, x19
    d1d8:	mov	w3, #0x2                   	// #2
    d1dc:	cmp	x21, #0x0
    d1e0:	mul	x1, x21, x23
    d1e4:	ccmp	x22, x20, #0x4, gt
    d1e8:	ldr	x0, [x2, #24]
    d1ec:	ldr	x2, [x2, #16]
    d1f0:	str	w3, [x0]
    d1f4:	str	x23, [x0, #8]
    d1f8:	b.le	d2b8 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x1a8>
    d1fc:	stp	x1, x22, [x0, #8]
    d200:	mov	x20, x22
    d204:	mov	x3, #0x1                   	// #1
    d208:	str	x21, [x0, #24]
    d20c:	str	x22, [x0, #72]
    d210:	cbz	x2, d220 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x110>
    d214:	ldr	w3, [x2]
    d218:	cmp	x21, #0x0
    d21c:	b.le	d300 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x1f0>
    d220:	orr	x4, x1, x3
    d224:	mov	x2, #0x7fffffff            	// #2147483647
    d228:	cmp	x4, x2
    d22c:	b.hi	d334 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x224>  // b.pmore
    d230:	madd	x1, x3, x1, x1
    d234:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
    d238:	sub	x1, x2, x1
    d23c:	cmp	x1, x20
    d240:	cset	w1, gt
    d244:	str	w1, [x0, #4]
    d248:	add	x0, x0, #0x40
    d24c:	mov	w2, #0x1                   	// #1
    d250:	ldaxr	w1, [x0]
    d254:	cbnz	w1, d260 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x150>
    d258:	stxr	w3, w2, [x0]
    d25c:	cbnz	w3, d250 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x140>
    d260:	cmp	w1, #0x0
    d264:	b.ne	d344 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x234>  // b.any
    d268:	add	x1, x26, x19
    d26c:	ldr	x0, [x1, #32]
    d270:	cbz	x0, d184 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x74>
    d274:	ldr	x2, [x1, #24]
    d278:	add	x0, x0, #0x50
    d27c:	ldxr	x1, [x0]
    d280:	stlxr	w3, x2, [x0]
    d284:	cbnz	w3, d27c <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x16c>
    d288:	cmp	x1, #0x1
    d28c:	b.eq	d184 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x74>  // b.none
    d290:	bl	1d8a0 <omp_get_num_procs@@OMP_1.0+0xcf0>
    d294:	mov	x1, x25
    d298:	mov	x0, x24
    d29c:	bl	bec0 <omp_is_initial_device@@OMP_4.0+0x198>
    d2a0:	mov	w20, w0
    d2a4:	tst	w0, #0xff
    d2a8:	b.eq	d19c <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x8c>  // b.none
    d2ac:	nop
    d2b0:	bl	110e0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1d8>
    d2b4:	b	d19c <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x8c>
    d2b8:	cmp	x21, #0x0
    d2bc:	str	x21, [x0, #24]
    d2c0:	ccmp	x22, x20, #0x0, lt  // lt = tstop
    d2c4:	str	x22, [x0, #72]
    d2c8:	csel	x20, x20, x22, ge  // ge = tcont
    d2cc:	stp	x1, x20, [x0, #8]
    d2d0:	mov	x3, #0x1                   	// #1
    d2d4:	cbnz	x2, d214 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x104>
    d2d8:	b	d218 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x108>
    d2dc:	mov	x0, x1
    d2e0:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
    d2e4:	mov	w0, w20
    d2e8:	ldp	x19, x20, [sp, #16]
    d2ec:	ldp	x21, x22, [sp, #32]
    d2f0:	ldp	x23, x24, [sp, #48]
    d2f4:	ldp	x25, x26, [sp, #64]
    d2f8:	ldp	x29, x30, [sp], #80
    d2fc:	ret
    d300:	neg	x2, x1
    d304:	mov	x1, #0x7fffffff            	// #2147483647
    d308:	orr	x4, x3, x2
    d30c:	cmp	x4, x1
    d310:	b.hi	d334 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x224>  // b.pmore
    d314:	madd	x1, x3, x2, x2
    d318:	mov	x2, #0x2                   	// #2
    d31c:	movk	x2, #0x8000, lsl #48
    d320:	add	x1, x1, x2
    d324:	cmp	x1, x20
    d328:	cset	w1, le
    d32c:	str	w1, [x0, #4]
    d330:	b	d248 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x138>
    d334:	str	wzr, [x0, #4]
    d338:	b	d248 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x138>
    d33c:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
    d340:	b	d184 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x74>
    d344:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
    d348:	b	d268 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x158>
    d34c:	nop

000000000000d350 <GOMP_loop_ordered_guided_start@@GOMP_1.0>:
    d350:	stp	x29, x30, [sp, #-80]!
    d354:	mov	x29, sp
    d358:	stp	x19, x20, [sp, #16]
    d35c:	mov	x20, x1
    d360:	mrs	x19, tpidr_el0
    d364:	stp	x21, x22, [sp, #32]
    d368:	mov	x21, x0
    d36c:	mov	x22, x2
    d370:	mov	x0, #0x1                   	// #1
    d374:	stp	x23, x24, [sp, #48]
    d378:	mov	x23, x4
    d37c:	mov	x24, x5
    d380:	stp	x25, x26, [sp, #64]
    d384:	mov	x26, x3
    d388:	adrp	x25, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    d38c:	ldr	x25, [x25, #4016]
    d390:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
    d394:	tst	w0, #0xff
    d398:	b.eq	d43c <GOMP_loop_ordered_guided_start@@GOMP_1.0+0xec>  // b.none
    d39c:	add	x1, x19, x25
    d3a0:	mov	w0, #0x3                   	// #3
    d3a4:	cmp	x22, #0x0
    d3a8:	ccmp	x21, x20, #0x4, gt
    d3ac:	ldr	x1, [x1, #24]
    d3b0:	str	w0, [x1]
    d3b4:	str	x26, [x1, #8]
    d3b8:	b.gt	d4b4 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x164>
    d3bc:	cmp	x22, #0x0
    d3c0:	ccmp	x21, x20, #0x0, lt  // lt = tstop
    d3c4:	csel	x20, x20, x21, ge  // ge = tcont
    d3c8:	add	x0, x1, #0x40
    d3cc:	mov	w2, #0x1                   	// #1
    d3d0:	stp	x20, x22, [x1, #16]
    d3d4:	str	x21, [x1, #72]
    d3d8:	ldaxr	w1, [x0]
    d3dc:	cbnz	w1, d3e8 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x98>
    d3e0:	stxr	w3, w2, [x0]
    d3e4:	cbnz	w3, d3d8 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x88>
    d3e8:	cmp	w1, #0x0
    d3ec:	b.ne	d4e8 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x198>  // b.any
    d3f0:	add	x1, x19, x25
    d3f4:	ldr	x0, [x1, #32]
    d3f8:	cbz	x0, d464 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x114>
    d3fc:	ldr	x2, [x1, #24]
    d400:	add	x0, x0, #0x50
    d404:	ldxr	x1, [x0]
    d408:	stlxr	w3, x2, [x0]
    d40c:	cbnz	w3, d404 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0xb4>
    d410:	cmp	x1, #0x1
    d414:	b.eq	d464 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x114>  // b.none
    d418:	bl	1d8a0 <omp_get_num_procs@@OMP_1.0+0xcf0>
    d41c:	mov	x1, x24
    d420:	mov	x0, x23
    d424:	bl	c080 <omp_is_initial_device@@OMP_4.0+0x358>
    d428:	mov	w20, w0
    d42c:	tst	w0, #0xff
    d430:	b.eq	d47c <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x12c>  // b.none
    d434:	bl	110e0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1d8>
    d438:	b	d47c <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x12c>
    d43c:	add	x0, x19, x25
    d440:	mov	w2, #0x1                   	// #1
    d444:	ldr	x0, [x0, #24]
    d448:	add	x0, x0, #0x40
    d44c:	ldaxr	w1, [x0]
    d450:	cbnz	w1, d45c <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x10c>
    d454:	stxr	w3, w2, [x0]
    d458:	cbnz	w3, d44c <GOMP_loop_ordered_guided_start@@GOMP_1.0+0xfc>
    d45c:	cmp	w1, #0x0
    d460:	b.ne	d4e0 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x190>  // b.any
    d464:	mov	x1, x24
    d468:	mov	x0, x23
    d46c:	bl	c080 <omp_is_initial_device@@OMP_4.0+0x358>
    d470:	mov	w20, w0
    d474:	tst	w0, #0xff
    d478:	b.ne	d434 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0xe4>  // b.any
    d47c:	add	x19, x19, x25
    d480:	ldr	x1, [x19, #24]
    d484:	add	x1, x1, #0x40
    d488:	ldxr	w0, [x1]
    d48c:	stlxr	w2, wzr, [x1]
    d490:	cbnz	w2, d488 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x138>
    d494:	tbnz	w0, #31, d4bc <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x16c>
    d498:	mov	w0, w20
    d49c:	ldp	x19, x20, [sp, #16]
    d4a0:	ldp	x21, x22, [sp, #32]
    d4a4:	ldp	x23, x24, [sp, #48]
    d4a8:	ldp	x25, x26, [sp, #64]
    d4ac:	ldp	x29, x30, [sp], #80
    d4b0:	ret
    d4b4:	mov	x20, x21
    d4b8:	b	d3c8 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x78>
    d4bc:	mov	x0, x1
    d4c0:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
    d4c4:	mov	w0, w20
    d4c8:	ldp	x19, x20, [sp, #16]
    d4cc:	ldp	x21, x22, [sp, #32]
    d4d0:	ldp	x23, x24, [sp, #48]
    d4d4:	ldp	x25, x26, [sp, #64]
    d4d8:	ldp	x29, x30, [sp], #80
    d4dc:	ret
    d4e0:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
    d4e4:	b	d464 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x114>
    d4e8:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
    d4ec:	b	d3f0 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0xa0>

000000000000d4f0 <GOMP_loop_ordered_runtime_start@@GOMP_1.0>:
    d4f0:	adrp	x5, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    d4f4:	ldr	x5, [x5, #4016]
    d4f8:	mrs	x7, tpidr_el0
    d4fc:	adrp	x6, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    d500:	add	x6, x6, #0x2b0
    d504:	add	x7, x7, x5
    d508:	mov	x8, x3
    d50c:	mov	x5, x4
    d510:	ldr	x7, [x7, #80]
    d514:	cmp	x7, #0x0
    d518:	add	x7, x7, #0x90
    d51c:	csel	x6, x6, x7, eq  // eq = none
    d520:	ldr	w3, [x6, #8]
    d524:	and	w7, w3, #0x7fffffff
    d528:	cmp	w7, #0x3
    d52c:	b.eq	d574 <GOMP_loop_ordered_runtime_start@@GOMP_1.0+0x84>  // b.none
    d530:	tst	w3, #0x7ffffffc
    d534:	b.ne	d54c <GOMP_loop_ordered_runtime_start@@GOMP_1.0+0x5c>  // b.any
    d538:	cmp	w7, #0x1
    d53c:	b.ne	d560 <GOMP_loop_ordered_runtime_start@@GOMP_1.0+0x70>  // b.any
    d540:	ldrsw	x3, [x6, #12]
    d544:	mov	x4, x8
    d548:	b	d020 <GOMP_loop_ordered_static_start@@GOMP_1.0>
    d54c:	cmp	w7, #0x4
    d550:	b.ne	d580 <GOMP_loop_ordered_runtime_start@@GOMP_1.0+0x90>  // b.any
    d554:	mov	x4, x8
    d558:	mov	x3, #0x0                   	// #0
    d55c:	b	d020 <GOMP_loop_ordered_static_start@@GOMP_1.0>
    d560:	cmp	w7, #0x2
    d564:	b.ne	d580 <GOMP_loop_ordered_runtime_start@@GOMP_1.0+0x90>  // b.any
    d568:	ldrsw	x3, [x6, #12]
    d56c:	mov	x4, x8
    d570:	b	d110 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0>
    d574:	ldrsw	x3, [x6, #12]
    d578:	mov	x4, x8
    d57c:	b	d350 <GOMP_loop_ordered_guided_start@@GOMP_1.0>
    d580:	stp	x29, x30, [sp, #-16]!
    d584:	mov	x29, sp
    d588:	bl	8820 <abort@plt>
    d58c:	nop

000000000000d590 <GOMP_loop_ordered_start@@GOMP_5.0>:
    d590:	stp	x29, x30, [sp, #-112]!
    d594:	mov	x29, sp
    d598:	stp	x19, x20, [sp, #16]
    d59c:	mov	x19, x3
    d5a0:	adrp	x20, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    d5a4:	ldr	x20, [x20, #4016]
    d5a8:	stp	x21, x22, [sp, #32]
    d5ac:	mrs	x21, tpidr_el0
    d5b0:	add	x8, x21, x20
    d5b4:	stp	x23, x24, [sp, #48]
    d5b8:	mov	x24, x1
    d5bc:	mov	x23, x4
    d5c0:	stp	x25, x26, [sp, #64]
    d5c4:	mov	x25, x0
    d5c8:	mov	x26, x5
    d5cc:	stp	x27, x28, [sp, #80]
    d5d0:	mov	x27, x6
    d5d4:	mov	x28, x7
    d5d8:	str	xzr, [x8, #72]
    d5dc:	str	x2, [sp, #104]
    d5e0:	ldr	x22, [sp, #112]
    d5e4:	cbz	x7, d5ec <GOMP_loop_ordered_start@@GOMP_5.0+0x5c>
    d5e8:	bl	1a1e0 <GOMP_task_reduction_remap@@GOMP_5.0+0x570>
    d5ec:	mov	x0, #0x1                   	// #1
    d5f0:	cbz	x22, d5fc <GOMP_loop_ordered_start@@GOMP_5.0+0x6c>
    d5f4:	ldr	x0, [x22]
    d5f8:	add	x0, x0, #0x1
    d5fc:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
    d600:	tst	w0, #0xff
    d604:	b.ne	d76c <GOMP_loop_ordered_start@@GOMP_5.0+0x1dc>  // b.any
    d608:	add	x19, x21, x20
    d60c:	ldr	x1, [x19, #24]
    d610:	cbz	x28, d624 <GOMP_loop_ordered_start@@GOMP_5.0+0x94>
    d614:	ldr	x1, [x1, #88]
    d618:	mov	x0, x28
    d61c:	bl	19f80 <GOMP_task_reduction_remap@@GOMP_5.0+0x310>
    d620:	ldr	x1, [x19, #24]
    d624:	ldr	w19, [x1]
    d628:	cmp	x19, #0x1
    d62c:	b.eq	d6ec <GOMP_loop_ordered_start@@GOMP_5.0+0x15c>  // b.none
    d630:	add	x0, x1, #0x40
    d634:	mov	w2, #0x1                   	// #1
    d638:	ldaxr	w1, [x0]
    d63c:	cbnz	w1, d648 <GOMP_loop_ordered_start@@GOMP_5.0+0xb8>
    d640:	stxr	w3, w2, [x0]
    d644:	cbnz	w3, d638 <GOMP_loop_ordered_start@@GOMP_5.0+0xa8>
    d648:	cmp	w1, #0x0
    d64c:	b.ne	d968 <GOMP_loop_ordered_start@@GOMP_5.0+0x3d8>  // b.any
    d650:	cbz	x22, d688 <GOMP_loop_ordered_start@@GOMP_5.0+0xf8>
    d654:	add	x0, x21, x20
    d658:	ldr	x1, [x0, #24]
    d65c:	add	x3, x21, x20
    d660:	ldr	x0, [x1, #32]
    d664:	mov	x2, #0x4                   	// #4
    d668:	ldr	x1, [x3, #16]
    d66c:	cbz	x1, d678 <GOMP_loop_ordered_start@@GOMP_5.0+0xe8>
    d670:	ldr	w2, [x1]
    d674:	lsl	x2, x2, #2
    d678:	add	x0, x0, x2
    d67c:	add	x0, x0, #0x7
    d680:	and	x0, x0, #0xfffffffffffffff8
    d684:	str	x0, [x22]
    d688:	cmp	x19, #0x2
    d68c:	b.eq	d750 <GOMP_loop_ordered_start@@GOMP_5.0+0x1c0>  // b.none
    d690:	b.le	d730 <GOMP_loop_ordered_start@@GOMP_5.0+0x1a0>
    d694:	cmp	x19, #0x3
    d698:	b.ne	d724 <GOMP_loop_ordered_start@@GOMP_5.0+0x194>  // b.any
    d69c:	mov	x1, x27
    d6a0:	mov	x0, x26
    d6a4:	bl	c080 <omp_is_initial_device@@OMP_4.0+0x358>
    d6a8:	and	w19, w0, #0xff
    d6ac:	cbnz	w19, d764 <GOMP_loop_ordered_start@@GOMP_5.0+0x1d4>
    d6b0:	add	x20, x21, x20
    d6b4:	ldr	x0, [x20, #24]
    d6b8:	add	x0, x0, #0x40
    d6bc:	ldxr	w1, [x0]
    d6c0:	stlxr	w2, wzr, [x0]
    d6c4:	cbnz	w2, d6bc <GOMP_loop_ordered_start@@GOMP_5.0+0x12c>
    d6c8:	tbnz	w1, #31, d960 <GOMP_loop_ordered_start@@GOMP_5.0+0x3d0>
    d6cc:	mov	w0, w19
    d6d0:	ldp	x19, x20, [sp, #16]
    d6d4:	ldp	x21, x22, [sp, #32]
    d6d8:	ldp	x23, x24, [sp, #48]
    d6dc:	ldp	x25, x26, [sp, #64]
    d6e0:	ldp	x27, x28, [sp, #80]
    d6e4:	ldp	x29, x30, [sp], #112
    d6e8:	ret
    d6ec:	cbnz	x22, d65c <GOMP_loop_ordered_start@@GOMP_5.0+0xcc>
    d6f0:	mov	x1, x27
    d6f4:	mov	x0, x26
    d6f8:	bl	bd30 <omp_is_initial_device@@OMP_4.0+0x8>
    d6fc:	cmp	w0, #0x0
    d700:	cset	w19, eq  // eq = none
    d704:	mov	w0, w19
    d708:	ldp	x19, x20, [sp, #16]
    d70c:	ldp	x21, x22, [sp, #32]
    d710:	ldp	x23, x24, [sp, #48]
    d714:	ldp	x25, x26, [sp, #64]
    d718:	ldp	x27, x28, [sp, #80]
    d71c:	ldp	x29, x30, [sp], #112
    d720:	ret
    d724:	cmp	x19, #0x4
    d728:	b.eq	d6f0 <GOMP_loop_ordered_start@@GOMP_5.0+0x160>  // b.none
    d72c:	bl	8820 <abort@plt>
    d730:	cmp	x19, #0x1
    d734:	b.ne	d72c <GOMP_loop_ordered_start@@GOMP_5.0+0x19c>  // b.any
    d738:	mov	x1, x27
    d73c:	mov	x0, x26
    d740:	bl	bd30 <omp_is_initial_device@@OMP_4.0+0x8>
    d744:	cmp	w0, #0x0
    d748:	cset	w19, eq  // eq = none
    d74c:	b	d704 <GOMP_loop_ordered_start@@GOMP_5.0+0x174>
    d750:	mov	x1, x27
    d754:	mov	x0, x26
    d758:	bl	bec0 <omp_is_initial_device@@OMP_4.0+0x198>
    d75c:	and	w19, w0, #0xff
    d760:	cbz	w19, d6b0 <GOMP_loop_ordered_start@@GOMP_5.0+0x120>
    d764:	bl	110e0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1d8>
    d768:	b	d6b0 <GOMP_loop_ordered_start@@GOMP_5.0+0x120>
    d76c:	tst	x19, #0x7ffffffc
    d770:	and	x19, x19, #0x7fffffff
    d774:	b.ne	d90c <GOMP_loop_ordered_start@@GOMP_5.0+0x37c>  // b.any
    d778:	cbnz	x19, d94c <GOMP_loop_ordered_start@@GOMP_5.0+0x3bc>
    d77c:	add	x2, x21, x20
    d780:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    d784:	add	x0, x0, #0x2b0
    d788:	ldr	x1, [x2, #80]
    d78c:	cmp	x1, #0x0
    d790:	add	x1, x1, #0x90
    d794:	csel	x0, x0, x1, eq  // eq = none
    d798:	ldr	w1, [x0, #8]
    d79c:	tst	w1, #0x7ffffffc
    d7a0:	and	w1, w1, #0x7fffffff
    d7a4:	b.ne	d84c <GOMP_loop_ordered_start@@GOMP_5.0+0x2bc>  // b.any
    d7a8:	cbz	w1, d72c <GOMP_loop_ordered_start@@GOMP_5.0+0x19c>
    d7ac:	ldrsw	x23, [x0, #12]
    d7b0:	mov	w19, w1
    d7b4:	add	x0, x21, x20
    d7b8:	ldr	x2, [sp, #104]
    d7bc:	ldr	x0, [x0, #24]
    d7c0:	cmp	x2, #0x0
    d7c4:	cset	w2, gt
    d7c8:	cmp	x25, x24
    d7cc:	cset	w3, gt
    d7d0:	str	w1, [x0]
    d7d4:	ands	w3, w2, w3
    d7d8:	str	x23, [x0, #8]
    d7dc:	b.eq	d920 <GOMP_loop_ordered_start@@GOMP_5.0+0x390>  // b.none
    d7e0:	mov	w2, w3
    d7e4:	mov	x24, x25
    d7e8:	ldr	x3, [sp, #104]
    d7ec:	stp	x24, x3, [x0, #16]
    d7f0:	cmp	x19, #0x2
    d7f4:	str	x25, [x0, #72]
    d7f8:	b.ne	d944 <GOMP_loop_ordered_start@@GOMP_5.0+0x3b4>  // b.any
    d7fc:	add	x1, x21, x20
    d800:	mul	x23, x3, x23
    d804:	mov	x3, #0x1                   	// #1
    d808:	ldr	x1, [x1, #16]
    d80c:	str	x23, [x0, #8]
    d810:	cbz	x1, d818 <GOMP_loop_ordered_start@@GOMP_5.0+0x288>
    d814:	ldr	w3, [x1]
    d818:	cbz	w2, d97c <GOMP_loop_ordered_start@@GOMP_5.0+0x3ec>
    d81c:	orr	x2, x23, x3
    d820:	mov	x1, #0x7fffffff            	// #2147483647
    d824:	cmp	x2, x1
    d828:	b.hi	d970 <GOMP_loop_ordered_start@@GOMP_5.0+0x3e0>  // b.pmore
    d82c:	madd	x23, x3, x23, x23
    d830:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
    d834:	sub	x23, x1, x23
    d838:	cmp	x24, x23
    d83c:	cset	w1, lt  // lt = tstop
    d840:	str	w1, [x0, #4]
    d844:	cbnz	x28, d890 <GOMP_loop_ordered_start@@GOMP_5.0+0x300>
    d848:	b	d8bc <GOMP_loop_ordered_start@@GOMP_5.0+0x32c>
    d84c:	cmp	w1, #0x4
    d850:	b.ne	d72c <GOMP_loop_ordered_start@@GOMP_5.0+0x19c>  // b.any
    d854:	ldr	x0, [x2, #24]
    d858:	ldr	x1, [sp, #104]
    d85c:	str	xzr, [x0, #8]
    d860:	cmp	x1, #0x0
    d864:	mov	w1, #0x1                   	// #1
    d868:	cset	w2, gt
    d86c:	str	w1, [x0]
    d870:	cmp	w2, #0x0
    d874:	ccmp	x25, x24, #0x4, ne  // ne = any
    d878:	b.le	d918 <GOMP_loop_ordered_start@@GOMP_5.0+0x388>
    d87c:	ldr	x1, [sp, #104]
    d880:	stp	x25, x1, [x0, #16]
    d884:	mov	x19, #0x1                   	// #1
    d888:	str	x25, [x0, #72]
    d88c:	cbz	x28, d954 <GOMP_loop_ordered_start@@GOMP_5.0+0x3c4>
    d890:	mov	x0, x28
    d894:	bl	17c48 <GOMP_taskgroup_reduction_register@@GOMP_5.0>
    d898:	add	x0, x21, x20
    d89c:	mov	w2, #0x1                   	// #1
    d8a0:	ldr	x1, [x0, #80]
    d8a4:	ldr	x0, [x0, #24]
    d8a8:	ldr	x1, [x1, #40]
    d8ac:	strb	w2, [x1, #50]
    d8b0:	str	x28, [x0, #88]
    d8b4:	cmp	x19, #0x1
    d8b8:	b.eq	d954 <GOMP_loop_ordered_start@@GOMP_5.0+0x3c4>  // b.none
    d8bc:	add	x0, x0, #0x40
    d8c0:	mov	w2, #0x1                   	// #1
    d8c4:	ldaxr	w1, [x0]
    d8c8:	cbnz	w1, d8d4 <GOMP_loop_ordered_start@@GOMP_5.0+0x344>
    d8cc:	stxr	w3, w2, [x0]
    d8d0:	cbnz	w3, d8c4 <GOMP_loop_ordered_start@@GOMP_5.0+0x334>
    d8d4:	cmp	w1, #0x0
    d8d8:	b.ne	d9b4 <GOMP_loop_ordered_start@@GOMP_5.0+0x424>  // b.any
    d8dc:	add	x1, x21, x20
    d8e0:	ldr	x0, [x1, #32]
    d8e4:	cbz	x0, d650 <GOMP_loop_ordered_start@@GOMP_5.0+0xc0>
    d8e8:	ldr	x2, [x1, #24]
    d8ec:	add	x0, x0, #0x50
    d8f0:	ldxr	x1, [x0]
    d8f4:	stlxr	w3, x2, [x0]
    d8f8:	cbnz	w3, d8f0 <GOMP_loop_ordered_start@@GOMP_5.0+0x360>
    d8fc:	cmp	x1, #0x1
    d900:	b.eq	d650 <GOMP_loop_ordered_start@@GOMP_5.0+0xc0>  // b.none
    d904:	bl	1d8a0 <omp_get_num_procs@@OMP_1.0+0xcf0>
    d908:	b	d650 <GOMP_loop_ordered_start@@GOMP_5.0+0xc0>
    d90c:	cmp	x19, #0x4
    d910:	b.eq	d77c <GOMP_loop_ordered_start@@GOMP_5.0+0x1ec>  // b.none
    d914:	bl	8820 <abort@plt>
    d918:	mov	x23, #0x0                   	// #0
    d91c:	mov	x19, #0x1                   	// #1
    d920:	ldr	x1, [sp, #104]
    d924:	str	x25, [x0, #72]
    d928:	cmp	x1, #0x0
    d92c:	mov	x3, x1
    d930:	ccmp	x25, x24, #0x0, lt  // lt = tstop
    d934:	csel	x24, x24, x25, ge  // ge = tcont
    d938:	stp	x24, x3, [x0, #16]
    d93c:	cmp	x19, #0x2
    d940:	b.eq	d7fc <GOMP_loop_ordered_start@@GOMP_5.0+0x26c>  // b.none
    d944:	cbnz	x28, d890 <GOMP_loop_ordered_start@@GOMP_5.0+0x300>
    d948:	b	d8b4 <GOMP_loop_ordered_start@@GOMP_5.0+0x324>
    d94c:	mov	w1, w19
    d950:	b	d7b4 <GOMP_loop_ordered_start@@GOMP_5.0+0x224>
    d954:	mov	x19, #0x1                   	// #1
    d958:	bl	11320 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x418>
    d95c:	b	d8dc <GOMP_loop_ordered_start@@GOMP_5.0+0x34c>
    d960:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
    d964:	b	d6cc <GOMP_loop_ordered_start@@GOMP_5.0+0x13c>
    d968:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
    d96c:	b	d650 <GOMP_loop_ordered_start@@GOMP_5.0+0xc0>
    d970:	str	wzr, [x0, #4]
    d974:	cbnz	x28, d890 <GOMP_loop_ordered_start@@GOMP_5.0+0x300>
    d978:	b	d8bc <GOMP_loop_ordered_start@@GOMP_5.0+0x32c>
    d97c:	neg	x4, x23
    d980:	mov	x1, #0x7fffffff            	// #2147483647
    d984:	orr	x2, x3, x4
    d988:	cmp	x2, x1
    d98c:	b.hi	d970 <GOMP_loop_ordered_start@@GOMP_5.0+0x3e0>  // b.pmore
    d990:	madd	x23, x3, x4, x4
    d994:	mov	x1, #0x2                   	// #2
    d998:	movk	x1, #0x8000, lsl #48
    d99c:	add	x1, x23, x1
    d9a0:	cmp	x24, x1
    d9a4:	cset	w1, ge  // ge = tcont
    d9a8:	str	w1, [x0, #4]
    d9ac:	cbnz	x28, d890 <GOMP_loop_ordered_start@@GOMP_5.0+0x300>
    d9b0:	b	d8bc <GOMP_loop_ordered_start@@GOMP_5.0+0x32c>
    d9b4:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
    d9b8:	b	d8dc <GOMP_loop_ordered_start@@GOMP_5.0+0x34c>
    d9bc:	nop

000000000000d9c0 <GOMP_loop_doacross_static_start@@GOMP_4.5>:
    d9c0:	stp	x29, x30, [sp, #-64]!
    d9c4:	mrs	x5, tpidr_el0
    d9c8:	mov	x29, sp
    d9cc:	stp	x19, x20, [sp, #16]
    d9d0:	mov	x20, x3
    d9d4:	adrp	x19, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    d9d8:	ldr	x19, [x19, #4016]
    d9dc:	stp	x21, x22, [sp, #32]
    d9e0:	mov	x22, x1
    d9e4:	add	x19, x5, x19
    d9e8:	stp	x23, x24, [sp, #48]
    d9ec:	mov	x21, x4
    d9f0:	mov	w23, w0
    d9f4:	mov	x24, x2
    d9f8:	mov	x0, #0x0                   	// #0
    d9fc:	str	xzr, [x19, #72]
    da00:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
    da04:	tst	w0, #0xff
    da08:	b.ne	da34 <GOMP_loop_doacross_static_start@@GOMP_4.5+0x74>  // b.any
    da0c:	mov	x1, x21
    da10:	mov	x0, x20
    da14:	bl	bd30 <omp_is_initial_device@@OMP_4.0+0x8>
    da18:	cmp	w0, #0x0
    da1c:	cset	w0, eq  // eq = none
    da20:	ldp	x19, x20, [sp, #16]
    da24:	ldp	x21, x22, [sp, #32]
    da28:	ldp	x23, x24, [sp, #48]
    da2c:	ldp	x29, x30, [sp], #64
    da30:	ret
    da34:	ldr	x0, [x22]
    da38:	mov	w2, #0x1                   	// #1
    da3c:	ldr	x4, [x19, #24]
    da40:	cmp	x0, #0x0
    da44:	csel	x5, x0, xzr, ge  // ge = tcont
    da48:	mov	x6, #0x1                   	// #1
    da4c:	mov	w0, w23
    da50:	mov	x1, x22
    da54:	str	w2, [x4]
    da58:	mov	x3, #0x0                   	// #0
    da5c:	stp	x24, x5, [x4, #8]
    da60:	mov	x2, x24
    da64:	str	x6, [x4, #24]
    da68:	str	xzr, [x4, #72]
    da6c:	bl	114d8 <GOMP_ordered_end@@GOMP_1.0+0x8>
    da70:	ldr	x0, [x19, #32]
    da74:	cbz	x0, da0c <GOMP_loop_doacross_static_start@@GOMP_4.5+0x4c>
    da78:	ldr	x2, [x19, #24]
    da7c:	add	x0, x0, #0x50
    da80:	ldxr	x1, [x0]
    da84:	stlxr	w3, x2, [x0]
    da88:	cbnz	w3, da80 <GOMP_loop_doacross_static_start@@GOMP_4.5+0xc0>
    da8c:	cmp	x1, #0x1
    da90:	b.eq	da0c <GOMP_loop_doacross_static_start@@GOMP_4.5+0x4c>  // b.none
    da94:	bl	1d8a0 <omp_get_num_procs@@OMP_1.0+0xcf0>
    da98:	b	da0c <GOMP_loop_doacross_static_start@@GOMP_4.5+0x4c>
    da9c:	nop

000000000000daa0 <GOMP_loop_doacross_dynamic_start@@GOMP_4.5>:
    daa0:	stp	x29, x30, [sp, #-80]!
    daa4:	mov	x29, sp
    daa8:	stp	x19, x20, [sp, #16]
    daac:	mov	x19, x2
    dab0:	mov	x20, x3
    dab4:	stp	x21, x22, [sp, #32]
    dab8:	mov	x22, x1
    dabc:	mov	x21, x4
    dac0:	stp	x23, x24, [sp, #48]
    dac4:	mov	w23, w0
    dac8:	mov	x0, #0x0                   	// #0
    dacc:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
    dad0:	tst	w0, #0xff
    dad4:	b.ne	daf4 <GOMP_loop_doacross_dynamic_start@@GOMP_4.5+0x54>  // b.any
    dad8:	mov	x1, x21
    dadc:	mov	x0, x20
    dae0:	ldp	x19, x20, [sp, #16]
    dae4:	ldp	x21, x22, [sp, #32]
    dae8:	ldp	x23, x24, [sp, #48]
    daec:	ldp	x29, x30, [sp], #80
    daf0:	b	bf40 <omp_is_initial_device@@OMP_4.0+0x218>
    daf4:	ldr	x0, [x22]
    daf8:	str	x25, [sp, #64]
    dafc:	adrp	x25, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    db00:	ldr	x25, [x25, #4016]
    db04:	mrs	x24, tpidr_el0
    db08:	cmp	x0, #0x0
    db0c:	mov	x3, #0x1                   	// #1
    db10:	add	x4, x24, x25
    db14:	csel	x0, x0, xzr, ge  // ge = tcont
    db18:	mov	w5, #0x2                   	// #2
    db1c:	mov	x2, x3
    db20:	ldr	x1, [x4, #24]
    db24:	ldr	x4, [x4, #16]
    db28:	str	w5, [x1]
    db2c:	stp	x19, x0, [x1, #8]
    db30:	str	x3, [x1, #24]
    db34:	str	xzr, [x1, #72]
    db38:	cbz	x4, db40 <GOMP_loop_doacross_dynamic_start@@GOMP_4.5+0xa0>
    db3c:	ldr	w2, [x4]
    db40:	orr	x4, x19, x2
    db44:	mov	x3, #0x7fffffff            	// #2147483647
    db48:	cmp	x4, x3
    db4c:	b.hi	dbe8 <GOMP_loop_doacross_dynamic_start@@GOMP_4.5+0x148>  // b.pmore
    db50:	madd	x2, x2, x19, x19
    db54:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
    db58:	sub	x2, x3, x2
    db5c:	cmp	x2, x0
    db60:	cset	w0, gt
    db64:	add	x24, x24, x25
    db68:	str	w0, [x1, #4]
    db6c:	mov	x2, x19
    db70:	mov	w0, w23
    db74:	mov	x1, x22
    db78:	mov	x3, #0x0                   	// #0
    db7c:	bl	114d8 <GOMP_ordered_end@@GOMP_1.0+0x8>
    db80:	ldr	x0, [x24, #32]
    db84:	cbz	x0, dbc8 <GOMP_loop_doacross_dynamic_start@@GOMP_4.5+0x128>
    db88:	ldr	x2, [x24, #24]
    db8c:	add	x0, x0, #0x50
    db90:	ldxr	x1, [x0]
    db94:	stlxr	w3, x2, [x0]
    db98:	cbnz	w3, db90 <GOMP_loop_doacross_dynamic_start@@GOMP_4.5+0xf0>
    db9c:	cmp	x1, #0x1
    dba0:	b.eq	dbc8 <GOMP_loop_doacross_dynamic_start@@GOMP_4.5+0x128>  // b.none
    dba4:	bl	1d8a0 <omp_get_num_procs@@OMP_1.0+0xcf0>
    dba8:	mov	x1, x21
    dbac:	mov	x0, x20
    dbb0:	ldp	x19, x20, [sp, #16]
    dbb4:	ldp	x21, x22, [sp, #32]
    dbb8:	ldp	x23, x24, [sp, #48]
    dbbc:	ldr	x25, [sp, #64]
    dbc0:	ldp	x29, x30, [sp], #80
    dbc4:	b	bf40 <omp_is_initial_device@@OMP_4.0+0x218>
    dbc8:	mov	x1, x21
    dbcc:	mov	x0, x20
    dbd0:	ldp	x19, x20, [sp, #16]
    dbd4:	ldp	x21, x22, [sp, #32]
    dbd8:	ldp	x23, x24, [sp, #48]
    dbdc:	ldr	x25, [sp, #64]
    dbe0:	ldp	x29, x30, [sp], #80
    dbe4:	b	bf40 <omp_is_initial_device@@OMP_4.0+0x218>
    dbe8:	mov	w0, #0x0                   	// #0
    dbec:	b	db64 <GOMP_loop_doacross_dynamic_start@@GOMP_4.5+0xc4>

000000000000dbf0 <GOMP_loop_doacross_guided_start@@GOMP_4.5>:
    dbf0:	stp	x29, x30, [sp, #-64]!
    dbf4:	mov	x29, sp
    dbf8:	stp	x19, x20, [sp, #16]
    dbfc:	mov	x19, x3
    dc00:	mov	x20, x4
    dc04:	stp	x21, x22, [sp, #32]
    dc08:	mov	x21, x1
    dc0c:	stp	x23, x24, [sp, #48]
    dc10:	mov	w23, w0
    dc14:	mov	x24, x2
    dc18:	mov	x0, #0x0                   	// #0
    dc1c:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
    dc20:	tst	w0, #0xff
    dc24:	b.ne	dc44 <GOMP_loop_doacross_guided_start@@GOMP_4.5+0x54>  // b.any
    dc28:	mov	x1, x20
    dc2c:	mov	x0, x19
    dc30:	ldp	x19, x20, [sp, #16]
    dc34:	ldp	x21, x22, [sp, #32]
    dc38:	ldp	x23, x24, [sp, #48]
    dc3c:	ldp	x29, x30, [sp], #64
    dc40:	b	c110 <omp_is_initial_device@@OMP_4.0+0x3e8>
    dc44:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    dc48:	ldr	x0, [x0, #4016]
    dc4c:	mrs	x22, tpidr_el0
    dc50:	ldr	x1, [x21]
    dc54:	add	x22, x22, x0
    dc58:	mov	w7, #0x3                   	// #3
    dc5c:	mov	x6, #0x1                   	// #1
    dc60:	cmp	x1, #0x0
    dc64:	mov	w0, w23
    dc68:	ldr	x4, [x22, #24]
    dc6c:	csel	x5, x1, xzr, ge  // ge = tcont
    dc70:	mov	x2, x24
    dc74:	mov	x1, x21
    dc78:	mov	x3, #0x0                   	// #0
    dc7c:	str	w7, [x4]
    dc80:	stp	x24, x5, [x4, #8]
    dc84:	str	x6, [x4, #24]
    dc88:	str	xzr, [x4, #72]
    dc8c:	bl	114d8 <GOMP_ordered_end@@GOMP_1.0+0x8>
    dc90:	ldr	x0, [x22, #32]
    dc94:	cbz	x0, dc28 <GOMP_loop_doacross_guided_start@@GOMP_4.5+0x38>
    dc98:	ldr	x2, [x22, #24]
    dc9c:	add	x0, x0, #0x50
    dca0:	ldxr	x1, [x0]
    dca4:	stlxr	w3, x2, [x0]
    dca8:	cbnz	w3, dca0 <GOMP_loop_doacross_guided_start@@GOMP_4.5+0xb0>
    dcac:	cmp	x1, #0x1
    dcb0:	b.eq	dc28 <GOMP_loop_doacross_guided_start@@GOMP_4.5+0x38>  // b.none
    dcb4:	bl	1d8a0 <omp_get_num_procs@@OMP_1.0+0xcf0>
    dcb8:	mov	x1, x20
    dcbc:	mov	x0, x19
    dcc0:	ldp	x19, x20, [sp, #16]
    dcc4:	ldp	x21, x22, [sp, #32]
    dcc8:	ldp	x23, x24, [sp, #48]
    dccc:	ldp	x29, x30, [sp], #64
    dcd0:	b	c110 <omp_is_initial_device@@OMP_4.0+0x3e8>
    dcd4:	nop

000000000000dcd8 <GOMP_loop_doacross_runtime_start@@GOMP_4.5>:
    dcd8:	stp	x29, x30, [sp, #-96]!
    dcdc:	adrp	x5, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    dce0:	add	x5, x5, #0x2b0
    dce4:	mov	x29, sp
    dce8:	stp	x25, x26, [sp, #64]
    dcec:	adrp	x25, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    dcf0:	ldr	x25, [x25, #4016]
    dcf4:	stp	x23, x24, [sp, #48]
    dcf8:	mrs	x24, tpidr_el0
    dcfc:	add	x26, x24, x25
    dd00:	stp	x19, x20, [sp, #16]
    dd04:	mov	x20, x2
    dd08:	mov	w23, w0
    dd0c:	ldr	x6, [x26, #80]
    dd10:	stp	x21, x22, [sp, #32]
    dd14:	mov	x21, x3
    dd18:	cmp	x6, #0x0
    dd1c:	add	x6, x6, #0x90
    dd20:	csel	x5, x5, x6, eq  // eq = none
    dd24:	mov	x22, x1
    dd28:	ldr	w2, [x5, #8]
    dd2c:	and	w19, w2, #0x7fffffff
    dd30:	cmp	w19, #0x3
    dd34:	b.eq	dddc <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x104>  // b.none
    dd38:	tst	w2, #0x7ffffffc
    dd3c:	b.ne	ddb0 <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0xd8>  // b.any
    dd40:	cmp	w19, #0x1
    dd44:	b.ne	dd6c <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x94>  // b.any
    dd48:	mov	x4, x3
    dd4c:	mov	x3, x20
    dd50:	ldp	x19, x20, [sp, #16]
    dd54:	ldp	x21, x22, [sp, #32]
    dd58:	ldp	x23, x24, [sp, #48]
    dd5c:	ldp	x25, x26, [sp, #64]
    dd60:	ldp	x29, x30, [sp], #96
    dd64:	ldrsw	x2, [x5, #12]
    dd68:	b	d9c0 <GOMP_loop_doacross_static_start@@GOMP_4.5>
    dd6c:	str	x27, [sp, #80]
    dd70:	cmp	w19, #0x2
    dd74:	b.ne	df1c <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x244>  // b.any
    dd78:	ldr	w27, [x5, #12]
    dd7c:	mov	x0, #0x0                   	// #0
    dd80:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
    dd84:	tst	w0, #0xff
    dd88:	b.ne	de74 <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x19c>  // b.any
    dd8c:	mov	x1, x21
    dd90:	mov	x0, x20
    dd94:	ldp	x19, x20, [sp, #16]
    dd98:	ldp	x21, x22, [sp, #32]
    dd9c:	ldp	x23, x24, [sp, #48]
    dda0:	ldp	x25, x26, [sp, #64]
    dda4:	ldr	x27, [sp, #80]
    dda8:	ldp	x29, x30, [sp], #96
    ddac:	b	bf40 <omp_is_initial_device@@OMP_4.0+0x218>
    ddb0:	cmp	w19, #0x4
    ddb4:	b.ne	df18 <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x240>  // b.any
    ddb8:	mov	x4, x3
    ddbc:	mov	x3, x20
    ddc0:	ldp	x19, x20, [sp, #16]
    ddc4:	mov	x2, #0x0                   	// #0
    ddc8:	ldp	x21, x22, [sp, #32]
    ddcc:	ldp	x23, x24, [sp, #48]
    ddd0:	ldp	x25, x26, [sp, #64]
    ddd4:	ldp	x29, x30, [sp], #96
    ddd8:	b	d9c0 <GOMP_loop_doacross_static_start@@GOMP_4.5>
    dddc:	ldr	w24, [x5, #12]
    dde0:	mov	x0, #0x0                   	// #0
    dde4:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
    dde8:	tst	w0, #0xff
    ddec:	b.ne	de10 <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x138>  // b.any
    ddf0:	mov	x1, x21
    ddf4:	mov	x0, x20
    ddf8:	ldp	x19, x20, [sp, #16]
    ddfc:	ldp	x21, x22, [sp, #32]
    de00:	ldp	x23, x24, [sp, #48]
    de04:	ldp	x25, x26, [sp, #64]
    de08:	ldp	x29, x30, [sp], #96
    de0c:	b	c110 <omp_is_initial_device@@OMP_4.0+0x3e8>
    de10:	ldr	x0, [x22]
    de14:	sxtw	x2, w24
    de18:	ldr	x4, [x26, #24]
    de1c:	cmp	x0, #0x0
    de20:	csel	x5, x0, xzr, ge  // ge = tcont
    de24:	mov	x6, #0x1                   	// #1
    de28:	mov	w0, w23
    de2c:	mov	x1, x22
    de30:	str	w19, [x4]
    de34:	mov	x3, #0x0                   	// #0
    de38:	stp	x2, x5, [x4, #8]
    de3c:	str	x6, [x4, #24]
    de40:	str	xzr, [x4, #72]
    de44:	bl	114d8 <GOMP_ordered_end@@GOMP_1.0+0x8>
    de48:	ldr	x0, [x26, #32]
    de4c:	cbz	x0, ddf0 <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x118>
    de50:	ldr	x2, [x26, #24]
    de54:	add	x0, x0, #0x50
    de58:	ldxr	x1, [x0]
    de5c:	stlxr	w3, x2, [x0]
    de60:	cbnz	w3, de58 <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x180>
    de64:	cmp	x1, #0x1
    de68:	b.eq	ddf0 <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x118>  // b.none
    de6c:	bl	1d8a0 <omp_get_num_procs@@OMP_1.0+0xcf0>
    de70:	b	ddf0 <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x118>
    de74:	ldp	x5, x0, [x26, #16]
    de78:	mov	x4, #0x1                   	// #1
    de7c:	ldr	x1, [x22]
    de80:	sxtw	x2, w27
    de84:	mov	x3, x4
    de88:	cmp	x1, #0x0
    de8c:	csel	x1, x1, xzr, ge  // ge = tcont
    de90:	str	w19, [x0]
    de94:	stp	x2, x1, [x0, #8]
    de98:	str	x4, [x0, #24]
    de9c:	str	xzr, [x0, #72]
    dea0:	cbz	x5, dea8 <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x1d0>
    dea4:	ldr	w3, [x5]
    dea8:	orr	x5, x2, x3
    deac:	mov	x4, #0x7fffffff            	// #2147483647
    deb0:	cmp	x5, x4
    deb4:	b.hi	df10 <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x238>  // b.pmore
    deb8:	madd	x3, x3, x2, x2
    debc:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
    dec0:	sub	x3, x4, x3
    dec4:	cmp	x3, x1
    dec8:	cset	w1, gt
    decc:	str	w1, [x0, #4]
    ded0:	mov	x3, #0x0                   	// #0
    ded4:	mov	x1, x22
    ded8:	mov	w0, w23
    dedc:	bl	114d8 <GOMP_ordered_end@@GOMP_1.0+0x8>
    dee0:	add	x1, x24, x25
    dee4:	ldr	x0, [x1, #32]
    dee8:	cbz	x0, dd8c <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0xb4>
    deec:	ldr	x2, [x1, #24]
    def0:	add	x0, x0, #0x50
    def4:	ldxr	x1, [x0]
    def8:	stlxr	w3, x2, [x0]
    defc:	cbnz	w3, def4 <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x21c>
    df00:	cmp	x1, #0x1
    df04:	b.eq	dd8c <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0xb4>  // b.none
    df08:	bl	1d8a0 <omp_get_num_procs@@OMP_1.0+0xcf0>
    df0c:	b	dd8c <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0xb4>
    df10:	mov	w1, #0x0                   	// #0
    df14:	b	decc <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x1f4>
    df18:	str	x27, [sp, #80]
    df1c:	bl	8820 <abort@plt>

000000000000df20 <GOMP_loop_doacross_start@@GOMP_5.0>:
    df20:	stp	x29, x30, [sp, #-112]!
    df24:	mov	x29, sp
    df28:	stp	x23, x24, [sp, #48]
    df2c:	mov	x24, x4
    df30:	adrp	x23, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    df34:	ldr	x23, [x23, #4016]
    df38:	stp	x19, x20, [sp, #16]
    df3c:	mrs	x20, tpidr_el0
    df40:	mov	x19, x2
    df44:	stp	x27, x28, [sp, #80]
    df48:	add	x28, x20, x23
    df4c:	mov	x27, x3
    df50:	stp	x21, x22, [sp, #32]
    df54:	mov	x22, x6
    df58:	mov	x21, x7
    df5c:	stp	x25, x26, [sp, #64]
    df60:	mov	w26, w0
    df64:	mov	x25, x5
    df68:	str	xzr, [x28, #72]
    df6c:	str	x1, [sp, #104]
    df70:	cbz	x6, e1b8 <GOMP_loop_doacross_start@@GOMP_5.0+0x298>
    df74:	bl	1a1e0 <GOMP_task_reduction_remap@@GOMP_5.0+0x570>
    df78:	mov	x0, #0x0                   	// #0
    df7c:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
    df80:	tst	w0, #0xff
    df84:	ldr	x1, [sp, #104]
    df88:	b.eq	e074 <GOMP_loop_doacross_start@@GOMP_5.0+0x154>  // b.none
    df8c:	mov	x3, #0x0                   	// #0
    df90:	cbz	x21, df98 <GOMP_loop_doacross_start@@GOMP_5.0+0x78>
    df94:	ldr	x3, [x21]
    df98:	tst	x19, #0x7ffffffc
    df9c:	and	x8, x19, #0x7fffffff
    dfa0:	b.ne	dfb0 <GOMP_loop_doacross_start@@GOMP_5.0+0x90>  // b.any
    dfa4:	cbz	x8, dfb8 <GOMP_loop_doacross_start@@GOMP_5.0+0x98>
    dfa8:	mov	w0, w8
    dfac:	b	dff0 <GOMP_loop_doacross_start@@GOMP_5.0+0xd0>
    dfb0:	cmp	x8, #0x4
    dfb4:	b.ne	e1b4 <GOMP_loop_doacross_start@@GOMP_5.0+0x294>  // b.any
    dfb8:	add	x4, x20, x23
    dfbc:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    dfc0:	add	x2, x2, #0x2b0
    dfc4:	ldr	x0, [x4, #80]
    dfc8:	cmp	x0, #0x0
    dfcc:	add	x0, x0, #0x90
    dfd0:	csel	x2, x2, x0, eq  // eq = none
    dfd4:	ldr	w0, [x2, #8]
    dfd8:	tst	w0, #0x7ffffffc
    dfdc:	and	w0, w0, #0x7fffffff
    dfe0:	b.ne	e0dc <GOMP_loop_doacross_start@@GOMP_5.0+0x1bc>  // b.any
    dfe4:	cbz	w0, e1b4 <GOMP_loop_doacross_start@@GOMP_5.0+0x294>
    dfe8:	ldrsw	x27, [x2, #12]
    dfec:	mov	w8, w0
    dff0:	add	x6, x20, x23
    dff4:	mov	x2, #0x1                   	// #1
    dff8:	ldr	x5, [x1]
    dffc:	ldr	x4, [x6, #24]
    e000:	cmp	x5, #0x0
    e004:	csel	x5, x5, xzr, ge  // ge = tcont
    e008:	cmp	x8, #0x2
    e00c:	str	w0, [x4]
    e010:	stp	x27, x5, [x4, #8]
    e014:	str	x2, [x4, #24]
    e018:	str	xzr, [x4, #72]
    e01c:	b.ne	e110 <GOMP_loop_doacross_start@@GOMP_5.0+0x1f0>  // b.any
    e020:	ldr	x6, [x6, #16]
    e024:	mov	x0, x2
    e028:	cbz	x6, e030 <GOMP_loop_doacross_start@@GOMP_5.0+0x110>
    e02c:	ldr	w0, [x6]
    e030:	orr	x6, x0, x27
    e034:	mov	x2, #0x7fffffff            	// #2147483647
    e038:	cmp	x6, x2
    e03c:	b.hi	e1fc <GOMP_loop_doacross_start@@GOMP_5.0+0x2dc>  // b.pmore
    e040:	madd	x0, x0, x27, x27
    e044:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
    e048:	sub	x0, x2, x0
    e04c:	mov	x2, x27
    e050:	cmp	x0, x5
    e054:	cset	w0, gt
    e058:	str	w0, [x4, #4]
    e05c:	mov	w0, w26
    e060:	bl	114d8 <GOMP_ordered_end@@GOMP_1.0+0x8>
    e064:	cbnz	x22, e120 <GOMP_loop_doacross_start@@GOMP_5.0+0x200>
    e068:	add	x0, x20, x23
    e06c:	ldr	x1, [x0, #24]
    e070:	b	e144 <GOMP_loop_doacross_start@@GOMP_5.0+0x224>
    e074:	ldr	x1, [x28, #24]
    e078:	mov	x0, x22
    e07c:	ldr	x1, [x1, #88]
    e080:	bl	19f80 <GOMP_task_reduction_remap@@GOMP_5.0+0x310>
    e084:	ldr	x1, [x28, #24]
    e088:	cbz	x21, e0a0 <GOMP_loop_doacross_start@@GOMP_5.0+0x180>
    e08c:	ldr	x0, [x1, #32]
    e090:	add	x20, x20, x23
    e094:	ldr	x0, [x0, #48]
    e098:	str	x0, [x21]
    e09c:	ldr	x1, [x20, #24]
    e0a0:	ldr	w0, [x1]
    e0a4:	cmp	w0, #0x2
    e0a8:	b.eq	e1d8 <GOMP_loop_doacross_start@@GOMP_5.0+0x2b8>  // b.none
    e0ac:	b.ls	e1ac <GOMP_loop_doacross_start@@GOMP_5.0+0x28c>  // b.plast
    e0b0:	cmp	w0, #0x3
    e0b4:	b.ne	e174 <GOMP_loop_doacross_start@@GOMP_5.0+0x254>  // b.any
    e0b8:	mov	x1, x25
    e0bc:	mov	x0, x24
    e0c0:	ldp	x19, x20, [sp, #16]
    e0c4:	ldp	x21, x22, [sp, #32]
    e0c8:	ldp	x23, x24, [sp, #48]
    e0cc:	ldp	x25, x26, [sp, #64]
    e0d0:	ldp	x27, x28, [sp, #80]
    e0d4:	ldp	x29, x30, [sp], #112
    e0d8:	b	c110 <omp_is_initial_device@@OMP_4.0+0x3e8>
    e0dc:	cmp	w0, #0x4
    e0e0:	b.ne	e1b4 <GOMP_loop_doacross_start@@GOMP_5.0+0x294>  // b.any
    e0e4:	ldr	x2, [x1]
    e0e8:	mov	w5, #0x1                   	// #1
    e0ec:	ldr	x0, [x4, #24]
    e0f0:	cmp	x2, #0x0
    e0f4:	csel	x2, x2, xzr, ge  // ge = tcont
    e0f8:	mov	x4, #0x1                   	// #1
    e0fc:	mov	x27, #0x0                   	// #0
    e100:	str	w5, [x0]
    e104:	stp	xzr, x2, [x0, #8]
    e108:	str	x4, [x0, #24]
    e10c:	str	xzr, [x0, #72]
    e110:	mov	x2, x27
    e114:	mov	w0, w26
    e118:	bl	114d8 <GOMP_ordered_end@@GOMP_1.0+0x8>
    e11c:	cbz	x22, e068 <GOMP_loop_doacross_start@@GOMP_5.0+0x148>
    e120:	mov	x0, x22
    e124:	bl	17c48 <GOMP_taskgroup_reduction_register@@GOMP_5.0>
    e128:	add	x0, x20, x23
    e12c:	mov	w2, #0x1                   	// #1
    e130:	ldr	x3, [x0, #80]
    e134:	ldr	x1, [x0, #24]
    e138:	ldr	x0, [x3, #40]
    e13c:	strb	w2, [x0, #50]
    e140:	str	x22, [x1, #88]
    e144:	add	x19, x20, x23
    e148:	ldr	x0, [x19, #32]
    e14c:	cbz	x0, e088 <GOMP_loop_doacross_start@@GOMP_5.0+0x168>
    e150:	add	x0, x0, #0x50
    e154:	ldxr	x2, [x0]
    e158:	stlxr	w3, x1, [x0]
    e15c:	cbnz	w3, e154 <GOMP_loop_doacross_start@@GOMP_5.0+0x234>
    e160:	cmp	x2, #0x1
    e164:	b.eq	e16c <GOMP_loop_doacross_start@@GOMP_5.0+0x24c>  // b.none
    e168:	bl	1d8a0 <omp_get_num_procs@@OMP_1.0+0xcf0>
    e16c:	ldr	x1, [x19, #24]
    e170:	b	e088 <GOMP_loop_doacross_start@@GOMP_5.0+0x168>
    e174:	cmp	w0, #0x4
    e178:	b.ne	e1b4 <GOMP_loop_doacross_start@@GOMP_5.0+0x294>  // b.any
    e17c:	mov	x1, x25
    e180:	mov	x0, x24
    e184:	bl	bd30 <omp_is_initial_device@@OMP_4.0+0x8>
    e188:	cmp	w0, #0x0
    e18c:	cset	w0, eq  // eq = none
    e190:	ldp	x19, x20, [sp, #16]
    e194:	ldp	x21, x22, [sp, #32]
    e198:	ldp	x23, x24, [sp, #48]
    e19c:	ldp	x25, x26, [sp, #64]
    e1a0:	ldp	x27, x28, [sp, #80]
    e1a4:	ldp	x29, x30, [sp], #112
    e1a8:	ret
    e1ac:	cmp	w0, #0x1
    e1b0:	b.eq	e17c <GOMP_loop_doacross_start@@GOMP_5.0+0x25c>  // b.none
    e1b4:	bl	8820 <abort@plt>
    e1b8:	mov	x0, #0x0                   	// #0
    e1bc:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
    e1c0:	tst	w0, #0xff
    e1c4:	ldr	x1, [sp, #104]
    e1c8:	b.eq	e084 <GOMP_loop_doacross_start@@GOMP_5.0+0x164>  // b.none
    e1cc:	mov	x3, #0x0                   	// #0
    e1d0:	cbnz	x21, df94 <GOMP_loop_doacross_start@@GOMP_5.0+0x74>
    e1d4:	b	df98 <GOMP_loop_doacross_start@@GOMP_5.0+0x78>
    e1d8:	mov	x1, x25
    e1dc:	mov	x0, x24
    e1e0:	ldp	x19, x20, [sp, #16]
    e1e4:	ldp	x21, x22, [sp, #32]
    e1e8:	ldp	x23, x24, [sp, #48]
    e1ec:	ldp	x25, x26, [sp, #64]
    e1f0:	ldp	x27, x28, [sp, #80]
    e1f4:	ldp	x29, x30, [sp], #112
    e1f8:	b	bf40 <omp_is_initial_device@@OMP_4.0+0x218>
    e1fc:	str	wzr, [x4, #4]
    e200:	b	e110 <GOMP_loop_doacross_start@@GOMP_5.0+0x1f0>
    e204:	nop

000000000000e208 <GOMP_loop_static_next@@GOMP_1.0>:
    e208:	stp	x29, x30, [sp, #-16]!
    e20c:	mov	x29, sp
    e210:	bl	bd30 <omp_is_initial_device@@OMP_4.0+0x8>
    e214:	cmp	w0, #0x0
    e218:	cset	w0, eq  // eq = none
    e21c:	ldp	x29, x30, [sp], #16
    e220:	ret
    e224:	nop

000000000000e228 <GOMP_loop_dynamic_next@@GOMP_1.0>:
    e228:	b	bf40 <omp_is_initial_device@@OMP_4.0+0x218>
    e22c:	nop

000000000000e230 <GOMP_loop_guided_next@@GOMP_1.0>:
    e230:	b	c110 <omp_is_initial_device@@OMP_4.0+0x3e8>
    e234:	nop

000000000000e238 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0>:
    e238:	adrp	x3, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    e23c:	ldr	x3, [x3, #4016]
    e240:	mrs	x2, tpidr_el0
    e244:	add	x2, x2, x3
    e248:	ldr	x2, [x2, #24]
    e24c:	ldr	w2, [x2]
    e250:	cmp	w2, #0x2
    e254:	b.eq	e2ac <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x74>  // b.none
    e258:	stp	x29, x30, [sp, #-16]!
    e25c:	mov	x3, x0
    e260:	mov	x4, x1
    e264:	mov	x29, sp
    e268:	b.ls	e27c <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x44>  // b.plast
    e26c:	cmp	w2, #0x3
    e270:	b.ne	e2a0 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x68>  // b.any
    e274:	ldp	x29, x30, [sp], #16
    e278:	b	c110 <omp_is_initial_device@@OMP_4.0+0x3e8>
    e27c:	cmp	w2, #0x1
    e280:	b.ne	e2a8 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x70>  // b.any
    e284:	mov	x1, x4
    e288:	mov	x0, x3
    e28c:	bl	bd30 <omp_is_initial_device@@OMP_4.0+0x8>
    e290:	cmp	w0, #0x0
    e294:	cset	w0, eq  // eq = none
    e298:	ldp	x29, x30, [sp], #16
    e29c:	ret
    e2a0:	cmp	w2, #0x4
    e2a4:	b.eq	e284 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x4c>  // b.none
    e2a8:	bl	8820 <abort@plt>
    e2ac:	b	bf40 <omp_is_initial_device@@OMP_4.0+0x218>

000000000000e2b0 <GOMP_loop_ordered_static_next@@GOMP_1.0>:
    e2b0:	stp	x29, x30, [sp, #-48]!
    e2b4:	mov	x29, sp
    e2b8:	stp	x21, x22, [sp, #32]
    e2bc:	mov	x21, x1
    e2c0:	adrp	x22, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    e2c4:	ldr	x22, [x22, #4016]
    e2c8:	stp	x19, x20, [sp, #16]
    e2cc:	mov	x19, x0
    e2d0:	mrs	x20, tpidr_el0
    e2d4:	bl	11418 <GOMP_ordered_start@@GOMP_1.0>
    e2d8:	add	x1, x20, x22
    e2dc:	mov	w0, #0x1                   	// #1
    e2e0:	ldr	x2, [x1, #24]
    e2e4:	add	x2, x2, #0x40
    e2e8:	ldaxr	w1, [x2]
    e2ec:	cbnz	w1, e2f8 <GOMP_loop_ordered_static_next@@GOMP_1.0+0x48>
    e2f0:	stxr	w3, w0, [x2]
    e2f4:	cbnz	w3, e2e8 <GOMP_loop_ordered_static_next@@GOMP_1.0+0x38>
    e2f8:	cmp	w1, #0x0
    e2fc:	b.ne	e36c <GOMP_loop_ordered_static_next@@GOMP_1.0+0xbc>  // b.any
    e300:	mov	x0, x19
    e304:	mov	x1, x21
    e308:	bl	bd30 <omp_is_initial_device@@OMP_4.0+0x8>
    e30c:	mov	w19, w0
    e310:	tbnz	w0, #31, e318 <GOMP_loop_ordered_static_next@@GOMP_1.0+0x68>
    e314:	bl	11380 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x478>
    e318:	add	x20, x20, x22
    e31c:	ldr	x1, [x20, #24]
    e320:	add	x1, x1, #0x40
    e324:	ldxr	w0, [x1]
    e328:	stlxr	w2, wzr, [x1]
    e32c:	cbnz	w2, e324 <GOMP_loop_ordered_static_next@@GOMP_1.0+0x74>
    e330:	tbnz	w0, #31, e34c <GOMP_loop_ordered_static_next@@GOMP_1.0+0x9c>
    e334:	cmp	w19, #0x0
    e338:	cset	w0, eq  // eq = none
    e33c:	ldp	x19, x20, [sp, #16]
    e340:	ldp	x21, x22, [sp, #32]
    e344:	ldp	x29, x30, [sp], #48
    e348:	ret
    e34c:	mov	x0, x1
    e350:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
    e354:	cmp	w19, #0x0
    e358:	cset	w0, eq  // eq = none
    e35c:	ldp	x19, x20, [sp, #16]
    e360:	ldp	x21, x22, [sp, #32]
    e364:	ldp	x29, x30, [sp], #48
    e368:	ret
    e36c:	mov	x0, x2
    e370:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
    e374:	b	e300 <GOMP_loop_ordered_static_next@@GOMP_1.0+0x50>

000000000000e378 <GOMP_loop_ordered_dynamic_next@@GOMP_1.0>:
    e378:	stp	x29, x30, [sp, #-48]!
    e37c:	mov	x29, sp
    e380:	stp	x21, x22, [sp, #32]
    e384:	mov	x21, x1
    e388:	adrp	x22, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    e38c:	ldr	x22, [x22, #4016]
    e390:	stp	x19, x20, [sp, #16]
    e394:	mov	x19, x0
    e398:	mrs	x20, tpidr_el0
    e39c:	bl	11418 <GOMP_ordered_start@@GOMP_1.0>
    e3a0:	add	x1, x20, x22
    e3a4:	mov	w0, #0x1                   	// #1
    e3a8:	ldr	x2, [x1, #24]
    e3ac:	add	x2, x2, #0x40
    e3b0:	ldaxr	w1, [x2]
    e3b4:	cbnz	w1, e3c0 <GOMP_loop_ordered_dynamic_next@@GOMP_1.0+0x48>
    e3b8:	stxr	w3, w0, [x2]
    e3bc:	cbnz	w3, e3b0 <GOMP_loop_ordered_dynamic_next@@GOMP_1.0+0x38>
    e3c0:	cmp	w1, #0x0
    e3c4:	b.ne	e438 <GOMP_loop_ordered_dynamic_next@@GOMP_1.0+0xc0>  // b.any
    e3c8:	mov	x0, x19
    e3cc:	mov	x1, x21
    e3d0:	bl	bec0 <omp_is_initial_device@@OMP_4.0+0x198>
    e3d4:	mov	w19, w0
    e3d8:	tst	w0, #0xff
    e3dc:	b.eq	e414 <GOMP_loop_ordered_dynamic_next@@GOMP_1.0+0x9c>  // b.none
    e3e0:	bl	11220 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x318>
    e3e4:	add	x20, x20, x22
    e3e8:	ldr	x1, [x20, #24]
    e3ec:	add	x1, x1, #0x40
    e3f0:	ldxr	w0, [x1]
    e3f4:	stlxr	w2, wzr, [x1]
    e3f8:	cbnz	w2, e3f0 <GOMP_loop_ordered_dynamic_next@@GOMP_1.0+0x78>
    e3fc:	tbnz	w0, #31, e41c <GOMP_loop_ordered_dynamic_next@@GOMP_1.0+0xa4>
    e400:	mov	w0, w19
    e404:	ldp	x19, x20, [sp, #16]
    e408:	ldp	x21, x22, [sp, #32]
    e40c:	ldp	x29, x30, [sp], #48
    e410:	ret
    e414:	bl	11178 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x270>
    e418:	b	e3e4 <GOMP_loop_ordered_dynamic_next@@GOMP_1.0+0x6c>
    e41c:	mov	x0, x1
    e420:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
    e424:	mov	w0, w19
    e428:	ldp	x19, x20, [sp, #16]
    e42c:	ldp	x21, x22, [sp, #32]
    e430:	ldp	x29, x30, [sp], #48
    e434:	ret
    e438:	mov	x0, x2
    e43c:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
    e440:	b	e3c8 <GOMP_loop_ordered_dynamic_next@@GOMP_1.0+0x50>
    e444:	nop

000000000000e448 <GOMP_loop_ordered_guided_next@@GOMP_1.0>:
    e448:	stp	x29, x30, [sp, #-48]!
    e44c:	mov	x29, sp
    e450:	stp	x21, x22, [sp, #32]
    e454:	mov	x21, x1
    e458:	adrp	x22, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    e45c:	ldr	x22, [x22, #4016]
    e460:	stp	x19, x20, [sp, #16]
    e464:	mov	x19, x0
    e468:	mrs	x20, tpidr_el0
    e46c:	bl	11418 <GOMP_ordered_start@@GOMP_1.0>
    e470:	add	x1, x20, x22
    e474:	mov	w0, #0x1                   	// #1
    e478:	ldr	x2, [x1, #24]
    e47c:	add	x2, x2, #0x40
    e480:	ldaxr	w1, [x2]
    e484:	cbnz	w1, e490 <GOMP_loop_ordered_guided_next@@GOMP_1.0+0x48>
    e488:	stxr	w3, w0, [x2]
    e48c:	cbnz	w3, e480 <GOMP_loop_ordered_guided_next@@GOMP_1.0+0x38>
    e490:	cmp	w1, #0x0
    e494:	b.ne	e508 <GOMP_loop_ordered_guided_next@@GOMP_1.0+0xc0>  // b.any
    e498:	mov	x0, x19
    e49c:	mov	x1, x21
    e4a0:	bl	c080 <omp_is_initial_device@@OMP_4.0+0x358>
    e4a4:	mov	w19, w0
    e4a8:	tst	w0, #0xff
    e4ac:	b.eq	e4e4 <GOMP_loop_ordered_guided_next@@GOMP_1.0+0x9c>  // b.none
    e4b0:	bl	11220 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x318>
    e4b4:	add	x20, x20, x22
    e4b8:	ldr	x1, [x20, #24]
    e4bc:	add	x1, x1, #0x40
    e4c0:	ldxr	w0, [x1]
    e4c4:	stlxr	w2, wzr, [x1]
    e4c8:	cbnz	w2, e4c0 <GOMP_loop_ordered_guided_next@@GOMP_1.0+0x78>
    e4cc:	tbnz	w0, #31, e4ec <GOMP_loop_ordered_guided_next@@GOMP_1.0+0xa4>
    e4d0:	mov	w0, w19
    e4d4:	ldp	x19, x20, [sp, #16]
    e4d8:	ldp	x21, x22, [sp, #32]
    e4dc:	ldp	x29, x30, [sp], #48
    e4e0:	ret
    e4e4:	bl	11178 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x270>
    e4e8:	b	e4b4 <GOMP_loop_ordered_guided_next@@GOMP_1.0+0x6c>
    e4ec:	mov	x0, x1
    e4f0:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
    e4f4:	mov	w0, w19
    e4f8:	ldp	x19, x20, [sp, #16]
    e4fc:	ldp	x21, x22, [sp, #32]
    e500:	ldp	x29, x30, [sp], #48
    e504:	ret
    e508:	mov	x0, x2
    e50c:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
    e510:	b	e498 <GOMP_loop_ordered_guided_next@@GOMP_1.0+0x50>
    e514:	nop

000000000000e518 <GOMP_loop_ordered_runtime_next@@GOMP_1.0>:
    e518:	stp	x29, x30, [sp, #-64]!
    e51c:	mov	x29, sp
    e520:	stp	x19, x20, [sp, #16]
    e524:	mov	x20, x0
    e528:	adrp	x19, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    e52c:	ldr	x19, [x19, #4016]
    e530:	stp	x21, x22, [sp, #32]
    e534:	mrs	x22, tpidr_el0
    e538:	mov	x21, x1
    e53c:	str	x23, [sp, #48]
    e540:	add	x23, x22, x19
    e544:	ldr	x0, [x23, #24]
    e548:	ldr	w2, [x0]
    e54c:	cmp	w2, #0x2
    e550:	b.eq	e654 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x13c>  // b.none
    e554:	b.ls	e5c4 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0xac>  // b.plast
    e558:	cmp	w2, #0x3
    e55c:	b.ne	e648 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x130>  // b.any
    e560:	bl	11418 <GOMP_ordered_start@@GOMP_1.0>
    e564:	ldr	x0, [x23, #24]
    e568:	mov	w2, #0x1                   	// #1
    e56c:	add	x0, x0, #0x40
    e570:	ldaxr	w1, [x0]
    e574:	cbnz	w1, e580 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x68>
    e578:	stxr	w3, w2, [x0]
    e57c:	cbnz	w3, e570 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x58>
    e580:	cmp	w1, #0x0
    e584:	b.ne	e6e4 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x1cc>  // b.any
    e588:	mov	x0, x20
    e58c:	mov	x1, x21
    e590:	bl	c080 <omp_is_initial_device@@OMP_4.0+0x358>
    e594:	ands	w20, w0, #0xff
    e598:	b.ne	e6b8 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x1a0>  // b.any
    e59c:	bl	11178 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x270>
    e5a0:	add	x19, x22, x19
    e5a4:	ldr	x0, [x19, #24]
    e5a8:	add	x0, x0, #0x40
    e5ac:	ldxr	w1, [x0]
    e5b0:	stlxr	w2, wzr, [x0]
    e5b4:	cbnz	w2, e5ac <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x94>
    e5b8:	tbz	w1, #31, e630 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x118>
    e5bc:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
    e5c0:	b	e630 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x118>
    e5c4:	cmp	w2, #0x1
    e5c8:	b.ne	e650 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x138>  // b.any
    e5cc:	bl	11418 <GOMP_ordered_start@@GOMP_1.0>
    e5d0:	add	x0, x22, x19
    e5d4:	mov	w2, #0x1                   	// #1
    e5d8:	ldr	x0, [x0, #24]
    e5dc:	add	x0, x0, #0x40
    e5e0:	ldaxr	w1, [x0]
    e5e4:	cbnz	w1, e5f0 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0xd8>
    e5e8:	stxr	w3, w2, [x0]
    e5ec:	cbnz	w3, e5e0 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0xc8>
    e5f0:	cmp	w1, #0x0
    e5f4:	b.ne	e6d4 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x1bc>  // b.any
    e5f8:	mov	x0, x20
    e5fc:	mov	x1, x21
    e600:	bl	bd30 <omp_is_initial_device@@OMP_4.0+0x8>
    e604:	mov	w20, w0
    e608:	tbz	w0, #31, e6c0 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x1a8>
    e60c:	add	x19, x22, x19
    e610:	ldr	x1, [x19, #24]
    e614:	add	x1, x1, #0x40
    e618:	ldxr	w0, [x1]
    e61c:	stlxr	w2, wzr, [x1]
    e620:	cbnz	w2, e618 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x100>
    e624:	tbnz	w0, #31, e6c8 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x1b0>
    e628:	cmp	w20, #0x0
    e62c:	cset	w20, eq  // eq = none
    e630:	mov	w0, w20
    e634:	ldp	x19, x20, [sp, #16]
    e638:	ldp	x21, x22, [sp, #32]
    e63c:	ldr	x23, [sp, #48]
    e640:	ldp	x29, x30, [sp], #64
    e644:	ret
    e648:	cmp	w2, #0x4
    e64c:	b.eq	e5cc <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0xb4>  // b.none
    e650:	bl	8820 <abort@plt>
    e654:	bl	11418 <GOMP_ordered_start@@GOMP_1.0>
    e658:	ldr	x0, [x23, #24]
    e65c:	mov	w2, #0x1                   	// #1
    e660:	add	x0, x0, #0x40
    e664:	ldaxr	w1, [x0]
    e668:	cbnz	w1, e674 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x15c>
    e66c:	stxr	w3, w2, [x0]
    e670:	cbnz	w3, e664 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x14c>
    e674:	cmp	w1, #0x0
    e678:	b.ne	e6dc <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x1c4>  // b.any
    e67c:	mov	x0, x20
    e680:	mov	x1, x21
    e684:	bl	bec0 <omp_is_initial_device@@OMP_4.0+0x198>
    e688:	ands	w20, w0, #0xff
    e68c:	b.ne	e6b0 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x198>  // b.any
    e690:	bl	11178 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x270>
    e694:	add	x19, x22, x19
    e698:	ldr	x0, [x19, #24]
    e69c:	add	x0, x0, #0x40
    e6a0:	ldxr	w1, [x0]
    e6a4:	stlxr	w2, wzr, [x0]
    e6a8:	cbz	w2, e5b8 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0xa0>
    e6ac:	b	e6a0 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x188>
    e6b0:	bl	11220 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x318>
    e6b4:	b	e694 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x17c>
    e6b8:	bl	11220 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x318>
    e6bc:	b	e5a0 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x88>
    e6c0:	bl	11380 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x478>
    e6c4:	b	e60c <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0xf4>
    e6c8:	mov	x0, x1
    e6cc:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
    e6d0:	b	e628 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x110>
    e6d4:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
    e6d8:	b	e5f8 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0xe0>
    e6dc:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
    e6e0:	b	e67c <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x164>
    e6e4:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
    e6e8:	b	e588 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x70>
    e6ec:	nop

000000000000e6f0 <GOMP_parallel_loop_static_start@@GOMP_1.0>:
    e6f0:	stp	x29, x30, [sp, #-80]!
    e6f4:	mov	x29, sp
    e6f8:	stp	x23, x24, [sp, #48]
    e6fc:	mov	x23, x1
    e700:	mov	w1, #0x0                   	// #0
    e704:	stp	x19, x20, [sp, #16]
    e708:	mov	x20, x3
    e70c:	mov	x19, x4
    e710:	stp	x21, x22, [sp, #32]
    e714:	mov	x21, x5
    e718:	mov	x22, x0
    e71c:	mov	w0, w2
    e720:	str	x25, [sp, #64]
    e724:	mov	x25, x6
    e728:	bl	12318 <GOMP_doacross_ull_wait@@GOMP_4.5+0x260>
    e72c:	mov	w24, w0
    e730:	bl	1a4c0 <omp_in_final@@OMP_3.1+0x1d0>
    e734:	add	x3, x0, #0x100
    e738:	mov	w1, #0x1                   	// #1
    e73c:	str	w1, [x0, #256]
    e740:	cmp	x21, #0x0
    e744:	mov	x4, x0
    e748:	ccmp	x20, x19, #0x4, gt
    e74c:	str	x25, [x3, #8]
    e750:	b.gt	e794 <GOMP_parallel_loop_static_start@@GOMP_1.0+0xa4>
    e754:	cmp	x21, #0x0
    e758:	ccmp	x20, x19, #0x0, lt  // lt = tstop
    e75c:	csel	x19, x19, x20, ge  // ge = tcont
    e760:	mov	w2, w24
    e764:	mov	x1, x23
    e768:	ldp	x23, x24, [sp, #48]
    e76c:	mov	x0, x22
    e770:	ldr	x25, [sp, #64]
    e774:	stp	x19, x21, [x3, #16]
    e778:	mov	x5, #0x0                   	// #0
    e77c:	str	x20, [x3, #72]
    e780:	mov	w3, #0x0                   	// #0
    e784:	ldp	x19, x20, [sp, #16]
    e788:	ldp	x21, x22, [sp, #32]
    e78c:	ldp	x29, x30, [sp], #80
    e790:	b	1a618 <omp_in_final@@OMP_3.1+0x328>
    e794:	mov	x19, x20
    e798:	b	e760 <GOMP_parallel_loop_static_start@@GOMP_1.0+0x70>
    e79c:	nop

000000000000e7a0 <GOMP_parallel_loop_dynamic_start@@GOMP_1.0>:
    e7a0:	stp	x29, x30, [sp, #-80]!
    e7a4:	mov	x29, sp
    e7a8:	str	x25, [sp, #64]
    e7ac:	mov	x25, x1
    e7b0:	mov	w1, #0x0                   	// #0
    e7b4:	stp	x19, x20, [sp, #16]
    e7b8:	mov	x20, x5
    e7bc:	mov	x19, x4
    e7c0:	stp	x21, x22, [sp, #32]
    e7c4:	mov	x21, x3
    e7c8:	mov	x22, x6
    e7cc:	stp	x23, x24, [sp, #48]
    e7d0:	mov	x24, x0
    e7d4:	mov	w0, w2
    e7d8:	bl	12318 <GOMP_doacross_ull_wait@@GOMP_4.5+0x260>
    e7dc:	mov	w23, w0
    e7e0:	bl	1a4c0 <omp_in_final@@OMP_3.1+0x1d0>
    e7e4:	add	x5, x0, #0x100
    e7e8:	mov	w1, #0x2                   	// #2
    e7ec:	str	w1, [x0, #256]
    e7f0:	cmp	x20, #0x0
    e7f4:	mul	x3, x20, x22
    e7f8:	mov	x4, x0
    e7fc:	str	x22, [x5, #8]
    e800:	ccmp	x21, x19, #0x4, gt
    e804:	b.gt	e89c <GOMP_parallel_loop_dynamic_start@@GOMP_1.0+0xfc>
    e808:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    e80c:	ldr	x0, [x0, #4016]
    e810:	mrs	x1, tpidr_el0
    e814:	cmp	x20, #0x0
    e818:	str	x20, [x5, #24]
    e81c:	add	x1, x1, x0
    e820:	ccmp	x21, x19, #0x0, lt  // lt = tstop
    e824:	csel	x19, x19, x21, ge  // ge = tcont
    e828:	stp	x3, x19, [x5, #8]
    e82c:	mov	x0, #0x1                   	// #1
    e830:	ldr	x1, [x1, #16]
    e834:	str	x21, [x5, #72]
    e838:	cbz	x1, e840 <GOMP_parallel_loop_dynamic_start@@GOMP_1.0+0xa0>
    e83c:	ldr	w0, [x1]
    e840:	cmp	x20, #0x0
    e844:	b.le	e8cc <GOMP_parallel_loop_dynamic_start@@GOMP_1.0+0x12c>
    e848:	orr	x2, x3, x0
    e84c:	mov	x1, #0x7fffffff            	// #2147483647
    e850:	cmp	x2, x1
    e854:	b.hi	e900 <GOMP_parallel_loop_dynamic_start@@GOMP_1.0+0x160>  // b.pmore
    e858:	madd	x3, x0, x3, x3
    e85c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    e860:	sub	x3, x0, x3
    e864:	cmp	x3, x19
    e868:	cset	w0, gt
    e86c:	str	w0, [x5, #4]
    e870:	mov	w2, w23
    e874:	mov	x1, x25
    e878:	mov	x0, x24
    e87c:	mov	x5, #0x0                   	// #0
    e880:	ldp	x19, x20, [sp, #16]
    e884:	mov	w3, #0x0                   	// #0
    e888:	ldp	x21, x22, [sp, #32]
    e88c:	ldp	x23, x24, [sp, #48]
    e890:	ldr	x25, [sp, #64]
    e894:	ldp	x29, x30, [sp], #80
    e898:	b	1a618 <omp_in_final@@OMP_3.1+0x328>
    e89c:	adrp	x1, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    e8a0:	ldr	x1, [x1, #4016]
    e8a4:	mrs	x0, tpidr_el0
    e8a8:	stp	x3, x21, [x5, #8]
    e8ac:	mov	x19, x21
    e8b0:	add	x0, x0, x1
    e8b4:	str	x20, [x5, #24]
    e8b8:	str	x21, [x5, #72]
    e8bc:	ldr	x1, [x0, #16]
    e8c0:	mov	x0, #0x1                   	// #1
    e8c4:	cbnz	x1, e83c <GOMP_parallel_loop_dynamic_start@@GOMP_1.0+0x9c>
    e8c8:	b	e848 <GOMP_parallel_loop_dynamic_start@@GOMP_1.0+0xa8>
    e8cc:	neg	x6, x3
    e8d0:	mov	x1, #0x7fffffff            	// #2147483647
    e8d4:	orr	x2, x0, x6
    e8d8:	cmp	x2, x1
    e8dc:	b.hi	e900 <GOMP_parallel_loop_dynamic_start@@GOMP_1.0+0x160>  // b.pmore
    e8e0:	madd	x6, x0, x6, x6
    e8e4:	mov	x0, #0x2                   	// #2
    e8e8:	movk	x0, #0x8000, lsl #48
    e8ec:	add	x6, x6, x0
    e8f0:	cmp	x6, x19
    e8f4:	cset	w0, le
    e8f8:	str	w0, [x5, #4]
    e8fc:	b	e870 <GOMP_parallel_loop_dynamic_start@@GOMP_1.0+0xd0>
    e900:	str	wzr, [x5, #4]
    e904:	b	e870 <GOMP_parallel_loop_dynamic_start@@GOMP_1.0+0xd0>

000000000000e908 <GOMP_parallel_loop_guided_start@@GOMP_1.0>:
    e908:	stp	x29, x30, [sp, #-80]!
    e90c:	mov	x29, sp
    e910:	stp	x23, x24, [sp, #48]
    e914:	mov	x23, x1
    e918:	mov	w1, #0x0                   	// #0
    e91c:	stp	x19, x20, [sp, #16]
    e920:	mov	x20, x3
    e924:	mov	x19, x4
    e928:	stp	x21, x22, [sp, #32]
    e92c:	mov	x21, x5
    e930:	mov	x22, x0
    e934:	mov	w0, w2
    e938:	str	x25, [sp, #64]
    e93c:	mov	x25, x6
    e940:	bl	12318 <GOMP_doacross_ull_wait@@GOMP_4.5+0x260>
    e944:	mov	w24, w0
    e948:	bl	1a4c0 <omp_in_final@@OMP_3.1+0x1d0>
    e94c:	add	x3, x0, #0x100
    e950:	mov	w1, #0x3                   	// #3
    e954:	str	w1, [x0, #256]
    e958:	cmp	x21, #0x0
    e95c:	mov	x4, x0
    e960:	ccmp	x20, x19, #0x4, gt
    e964:	str	x25, [x3, #8]
    e968:	b.gt	e9ac <GOMP_parallel_loop_guided_start@@GOMP_1.0+0xa4>
    e96c:	cmp	x21, #0x0
    e970:	ccmp	x20, x19, #0x0, lt  // lt = tstop
    e974:	csel	x19, x19, x20, ge  // ge = tcont
    e978:	mov	w2, w24
    e97c:	mov	x1, x23
    e980:	ldp	x23, x24, [sp, #48]
    e984:	mov	x0, x22
    e988:	ldr	x25, [sp, #64]
    e98c:	stp	x19, x21, [x3, #16]
    e990:	mov	x5, #0x0                   	// #0
    e994:	str	x20, [x3, #72]
    e998:	mov	w3, #0x0                   	// #0
    e99c:	ldp	x19, x20, [sp, #16]
    e9a0:	ldp	x21, x22, [sp, #32]
    e9a4:	ldp	x29, x30, [sp], #80
    e9a8:	b	1a618 <omp_in_final@@OMP_3.1+0x328>
    e9ac:	mov	x19, x20
    e9b0:	b	e978 <GOMP_parallel_loop_guided_start@@GOMP_1.0+0x70>
    e9b4:	nop

000000000000e9b8 <GOMP_parallel_loop_runtime_start@@GOMP_1.0>:
    e9b8:	stp	x29, x30, [sp, #-96]!
    e9bc:	adrp	x6, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    e9c0:	add	x6, x6, #0x2b0
    e9c4:	mov	x29, sp
    e9c8:	stp	x27, x28, [sp, #80]
    e9cc:	mrs	x27, tpidr_el0
    e9d0:	adrp	x28, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    e9d4:	ldr	x28, [x28, #4016]
    e9d8:	stp	x25, x26, [sp, #64]
    e9dc:	mov	x25, x1
    e9e0:	add	x7, x27, x28
    e9e4:	mov	w1, #0x0                   	// #0
    e9e8:	stp	x19, x20, [sp, #16]
    e9ec:	mov	x20, x3
    e9f0:	ldr	x7, [x7, #80]
    e9f4:	mov	x19, x4
    e9f8:	stp	x21, x22, [sp, #32]
    e9fc:	mov	x21, x5
    ea00:	cmp	x7, #0x0
    ea04:	add	x7, x7, #0x90
    ea08:	stp	x23, x24, [sp, #48]
    ea0c:	csel	x6, x6, x7, eq  // eq = none
    ea10:	mov	x24, x0
    ea14:	mov	w0, w2
    ea18:	ldrsw	x23, [x6, #12]
    ea1c:	ldr	w22, [x6, #8]
    ea20:	bl	12318 <GOMP_doacross_ull_wait@@GOMP_4.5+0x260>
    ea24:	mov	w26, w0
    ea28:	bl	1a4c0 <omp_in_final@@OMP_3.1+0x1d0>
    ea2c:	add	x3, x0, #0x100
    ea30:	and	w22, w22, #0x7fffffff
    ea34:	str	w22, [x0, #256]
    ea38:	cmp	x21, #0x0
    ea3c:	mov	x4, x0
    ea40:	ccmp	x20, x19, #0x4, gt
    ea44:	str	x23, [x3, #8]
    ea48:	b.gt	ea98 <GOMP_parallel_loop_runtime_start@@GOMP_1.0+0xe0>
    ea4c:	cmp	x21, #0x0
    ea50:	str	x20, [x3, #72]
    ea54:	ccmp	x20, x19, #0x0, lt  // lt = tstop
    ea58:	csel	x19, x19, x20, ge  // ge = tcont
    ea5c:	stp	x19, x21, [x3, #16]
    ea60:	cmp	w22, #0x2
    ea64:	b.eq	eaac <GOMP_parallel_loop_runtime_start@@GOMP_1.0+0xf4>  // b.none
    ea68:	mov	w2, w26
    ea6c:	mov	x1, x25
    ea70:	mov	x0, x24
    ea74:	mov	x5, #0x0                   	// #0
    ea78:	ldp	x19, x20, [sp, #16]
    ea7c:	mov	w3, #0x0                   	// #0
    ea80:	ldp	x21, x22, [sp, #32]
    ea84:	ldp	x23, x24, [sp, #48]
    ea88:	ldp	x25, x26, [sp, #64]
    ea8c:	ldp	x27, x28, [sp, #80]
    ea90:	ldp	x29, x30, [sp], #96
    ea94:	b	1a618 <omp_in_final@@OMP_3.1+0x328>
    ea98:	mov	x19, x20
    ea9c:	stp	x19, x21, [x3, #16]
    eaa0:	cmp	w22, #0x2
    eaa4:	str	x20, [x3, #72]
    eaa8:	b.ne	ea68 <GOMP_parallel_loop_runtime_start@@GOMP_1.0+0xb0>  // b.any
    eaac:	add	x27, x27, x28
    eab0:	mul	x23, x23, x21
    eab4:	str	x23, [x3, #8]
    eab8:	mov	x0, #0x1                   	// #1
    eabc:	ldr	x1, [x27, #16]
    eac0:	cbz	x1, eac8 <GOMP_parallel_loop_runtime_start@@GOMP_1.0+0x110>
    eac4:	ldr	w0, [x1]
    eac8:	cmp	x21, #0x0
    eacc:	b.le	eafc <GOMP_parallel_loop_runtime_start@@GOMP_1.0+0x144>
    ead0:	orr	x2, x23, x0
    ead4:	mov	x1, #0x7fffffff            	// #2147483647
    ead8:	cmp	x2, x1
    eadc:	b.hi	eb30 <GOMP_parallel_loop_runtime_start@@GOMP_1.0+0x178>  // b.pmore
    eae0:	madd	x23, x0, x23, x23
    eae4:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    eae8:	sub	x23, x0, x23
    eaec:	cmp	x19, x23
    eaf0:	cset	w0, lt  // lt = tstop
    eaf4:	str	w0, [x3, #4]
    eaf8:	b	ea68 <GOMP_parallel_loop_runtime_start@@GOMP_1.0+0xb0>
    eafc:	neg	x5, x23
    eb00:	mov	x1, #0x7fffffff            	// #2147483647
    eb04:	orr	x2, x0, x5
    eb08:	cmp	x2, x1
    eb0c:	b.hi	eb30 <GOMP_parallel_loop_runtime_start@@GOMP_1.0+0x178>  // b.pmore
    eb10:	madd	x5, x0, x5, x5
    eb14:	mov	x0, #0x2                   	// #2
    eb18:	movk	x0, #0x8000, lsl #48
    eb1c:	add	x5, x5, x0
    eb20:	cmp	x19, x5
    eb24:	cset	w0, ge  // ge = tcont
    eb28:	str	w0, [x3, #4]
    eb2c:	b	ea68 <GOMP_parallel_loop_runtime_start@@GOMP_1.0+0xb0>
    eb30:	str	wzr, [x3, #4]
    eb34:	b	ea68 <GOMP_parallel_loop_runtime_start@@GOMP_1.0+0xb0>

000000000000eb38 <GOMP_parallel_loop_static@@GOMP_4.0>:
    eb38:	stp	x29, x30, [sp, #-80]!
    eb3c:	mov	x29, sp
    eb40:	stp	x23, x24, [sp, #48]
    eb44:	mov	x23, x1
    eb48:	mov	w1, #0x0                   	// #0
    eb4c:	stp	x19, x20, [sp, #16]
    eb50:	mov	x19, x4
    eb54:	mov	x20, x3
    eb58:	stp	x21, x22, [sp, #32]
    eb5c:	mov	x21, x5
    eb60:	mov	x22, x0
    eb64:	mov	w0, w2
    eb68:	stp	x25, x26, [sp, #64]
    eb6c:	mov	x26, x6
    eb70:	mov	w25, w7
    eb74:	bl	12318 <GOMP_doacross_ull_wait@@GOMP_4.5+0x260>
    eb78:	mov	w24, w0
    eb7c:	bl	1a4c0 <omp_in_final@@OMP_3.1+0x1d0>
    eb80:	add	x8, x0, #0x100
    eb84:	mov	w1, #0x1                   	// #1
    eb88:	str	w1, [x0, #256]
    eb8c:	cmp	x21, #0x0
    eb90:	mov	x4, x0
    eb94:	ccmp	x20, x19, #0x4, gt
    eb98:	str	x26, [x8, #8]
    eb9c:	b.gt	ebec <GOMP_parallel_loop_static@@GOMP_4.0+0xb4>
    eba0:	cmp	x21, #0x0
    eba4:	ccmp	x20, x19, #0x0, lt  // lt = tstop
    eba8:	csel	x19, x19, x20, ge  // ge = tcont
    ebac:	mov	w3, w25
    ebb0:	mov	w2, w24
    ebb4:	mov	x1, x23
    ebb8:	stp	x19, x21, [x8, #16]
    ebbc:	mov	x5, #0x0                   	// #0
    ebc0:	str	x20, [x8, #72]
    ebc4:	mov	x0, x22
    ebc8:	bl	1a618 <omp_in_final@@OMP_3.1+0x328>
    ebcc:	mov	x0, x23
    ebd0:	blr	x22
    ebd4:	ldp	x19, x20, [sp, #16]
    ebd8:	ldp	x21, x22, [sp, #32]
    ebdc:	ldp	x23, x24, [sp, #48]
    ebe0:	ldp	x25, x26, [sp, #64]
    ebe4:	ldp	x29, x30, [sp], #80
    ebe8:	b	126b0 <GOMP_parallel_end@@GOMP_1.0>
    ebec:	mov	x19, x20
    ebf0:	b	ebac <GOMP_parallel_loop_static@@GOMP_4.0+0x74>
    ebf4:	nop

000000000000ebf8 <GOMP_parallel_loop_dynamic@@GOMP_4.0>:
    ebf8:	stp	x29, x30, [sp, #-80]!
    ebfc:	mov	x29, sp
    ec00:	stp	x23, x24, [sp, #48]
    ec04:	mov	x23, x1
    ec08:	mov	w1, #0x0                   	// #0
    ec0c:	mov	x24, x6
    ec10:	stp	x19, x20, [sp, #16]
    ec14:	mov	x20, x5
    ec18:	mov	x19, x4
    ec1c:	stp	x21, x22, [sp, #32]
    ec20:	mov	x21, x3
    ec24:	mov	x22, x0
    ec28:	mov	w0, w2
    ec2c:	stp	x25, x26, [sp, #64]
    ec30:	mov	w26, w7
    ec34:	bl	12318 <GOMP_doacross_ull_wait@@GOMP_4.5+0x260>
    ec38:	mov	w25, w0
    ec3c:	bl	1a4c0 <omp_in_final@@OMP_3.1+0x1d0>
    ec40:	add	x5, x0, #0x100
    ec44:	mov	w1, #0x2                   	// #2
    ec48:	str	w1, [x0, #256]
    ec4c:	cmp	x20, #0x0
    ec50:	mul	x8, x20, x24
    ec54:	mov	x4, x0
    ec58:	str	x24, [x5, #8]
    ec5c:	ccmp	x21, x19, #0x4, gt
    ec60:	b.gt	ed04 <GOMP_parallel_loop_dynamic@@GOMP_4.0+0x10c>
    ec64:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    ec68:	ldr	x0, [x0, #4016]
    ec6c:	mrs	x1, tpidr_el0
    ec70:	cmp	x20, #0x0
    ec74:	str	x20, [x5, #24]
    ec78:	add	x1, x1, x0
    ec7c:	ccmp	x21, x19, #0x0, lt  // lt = tstop
    ec80:	csel	x19, x19, x21, ge  // ge = tcont
    ec84:	stp	x8, x19, [x5, #8]
    ec88:	mov	x0, #0x1                   	// #1
    ec8c:	ldr	x1, [x1, #16]
    ec90:	str	x21, [x5, #72]
    ec94:	cbz	x1, ec9c <GOMP_parallel_loop_dynamic@@GOMP_4.0+0xa4>
    ec98:	ldr	w0, [x1]
    ec9c:	cmp	x20, #0x0
    eca0:	b.le	ed34 <GOMP_parallel_loop_dynamic@@GOMP_4.0+0x13c>
    eca4:	orr	x2, x8, x0
    eca8:	mov	x1, #0x7fffffff            	// #2147483647
    ecac:	cmp	x2, x1
    ecb0:	b.hi	ed68 <GOMP_parallel_loop_dynamic@@GOMP_4.0+0x170>  // b.pmore
    ecb4:	madd	x8, x0, x8, x8
    ecb8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    ecbc:	sub	x8, x0, x8
    ecc0:	cmp	x8, x19
    ecc4:	cset	w0, gt
    ecc8:	str	w0, [x5, #4]
    eccc:	mov	w3, w26
    ecd0:	mov	w2, w25
    ecd4:	mov	x1, x23
    ecd8:	mov	x5, #0x0                   	// #0
    ecdc:	mov	x0, x22
    ece0:	bl	1a618 <omp_in_final@@OMP_3.1+0x328>
    ece4:	mov	x0, x23
    ece8:	blr	x22
    ecec:	ldp	x19, x20, [sp, #16]
    ecf0:	ldp	x21, x22, [sp, #32]
    ecf4:	ldp	x23, x24, [sp, #48]
    ecf8:	ldp	x25, x26, [sp, #64]
    ecfc:	ldp	x29, x30, [sp], #80
    ed00:	b	126b0 <GOMP_parallel_end@@GOMP_1.0>
    ed04:	adrp	x1, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    ed08:	ldr	x1, [x1, #4016]
    ed0c:	mrs	x0, tpidr_el0
    ed10:	stp	x8, x21, [x5, #8]
    ed14:	mov	x19, x21
    ed18:	add	x0, x0, x1
    ed1c:	str	x20, [x5, #24]
    ed20:	str	x21, [x5, #72]
    ed24:	ldr	x1, [x0, #16]
    ed28:	mov	x0, #0x1                   	// #1
    ed2c:	cbnz	x1, ec98 <GOMP_parallel_loop_dynamic@@GOMP_4.0+0xa0>
    ed30:	b	eca4 <GOMP_parallel_loop_dynamic@@GOMP_4.0+0xac>
    ed34:	neg	x6, x8
    ed38:	mov	x1, #0x7fffffff            	// #2147483647
    ed3c:	orr	x2, x0, x6
    ed40:	cmp	x2, x1
    ed44:	b.hi	ed68 <GOMP_parallel_loop_dynamic@@GOMP_4.0+0x170>  // b.pmore
    ed48:	madd	x6, x0, x6, x6
    ed4c:	mov	x0, #0x2                   	// #2
    ed50:	movk	x0, #0x8000, lsl #48
    ed54:	add	x6, x6, x0
    ed58:	cmp	x6, x19
    ed5c:	cset	w0, le
    ed60:	str	w0, [x5, #4]
    ed64:	b	eccc <GOMP_parallel_loop_dynamic@@GOMP_4.0+0xd4>
    ed68:	str	wzr, [x5, #4]
    ed6c:	b	eccc <GOMP_parallel_loop_dynamic@@GOMP_4.0+0xd4>

000000000000ed70 <GOMP_parallel_loop_guided@@GOMP_4.0>:
    ed70:	stp	x29, x30, [sp, #-80]!
    ed74:	mov	x29, sp
    ed78:	stp	x23, x24, [sp, #48]
    ed7c:	mov	x23, x1
    ed80:	mov	w1, #0x0                   	// #0
    ed84:	stp	x19, x20, [sp, #16]
    ed88:	mov	x19, x4
    ed8c:	mov	x20, x3
    ed90:	stp	x21, x22, [sp, #32]
    ed94:	mov	x21, x5
    ed98:	mov	x22, x0
    ed9c:	mov	w0, w2
    eda0:	stp	x25, x26, [sp, #64]
    eda4:	mov	x26, x6
    eda8:	mov	w25, w7
    edac:	bl	12318 <GOMP_doacross_ull_wait@@GOMP_4.5+0x260>
    edb0:	mov	w24, w0
    edb4:	bl	1a4c0 <omp_in_final@@OMP_3.1+0x1d0>
    edb8:	add	x8, x0, #0x100
    edbc:	mov	w1, #0x3                   	// #3
    edc0:	str	w1, [x0, #256]
    edc4:	cmp	x21, #0x0
    edc8:	mov	x4, x0
    edcc:	ccmp	x20, x19, #0x4, gt
    edd0:	str	x26, [x8, #8]
    edd4:	b.gt	ee24 <GOMP_parallel_loop_guided@@GOMP_4.0+0xb4>
    edd8:	cmp	x21, #0x0
    eddc:	ccmp	x20, x19, #0x0, lt  // lt = tstop
    ede0:	csel	x19, x19, x20, ge  // ge = tcont
    ede4:	mov	w3, w25
    ede8:	mov	w2, w24
    edec:	mov	x1, x23
    edf0:	stp	x19, x21, [x8, #16]
    edf4:	mov	x5, #0x0                   	// #0
    edf8:	str	x20, [x8, #72]
    edfc:	mov	x0, x22
    ee00:	bl	1a618 <omp_in_final@@OMP_3.1+0x328>
    ee04:	mov	x0, x23
    ee08:	blr	x22
    ee0c:	ldp	x19, x20, [sp, #16]
    ee10:	ldp	x21, x22, [sp, #32]
    ee14:	ldp	x23, x24, [sp, #48]
    ee18:	ldp	x25, x26, [sp, #64]
    ee1c:	ldp	x29, x30, [sp], #80
    ee20:	b	126b0 <GOMP_parallel_end@@GOMP_1.0>
    ee24:	mov	x19, x20
    ee28:	b	ede4 <GOMP_parallel_loop_guided@@GOMP_4.0+0x74>
    ee2c:	nop

000000000000ee30 <GOMP_parallel_loop_maybe_nonmonotonic_runtime@@GOMP_5.0>:
    ee30:	stp	x29, x30, [sp, #-112]!
    ee34:	adrp	x7, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    ee38:	add	x7, x7, #0x2b0
    ee3c:	mov	x29, sp
    ee40:	stp	x27, x28, [sp, #80]
    ee44:	adrp	x27, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    ee48:	ldr	x27, [x27, #4016]
    ee4c:	stp	x25, x26, [sp, #64]
    ee50:	mrs	x26, tpidr_el0
    ee54:	add	x8, x26, x27
    ee58:	stp	x23, x24, [sp, #48]
    ee5c:	mov	x23, x1
    ee60:	mov	w1, #0x0                   	// #0
    ee64:	ldr	x8, [x8, #80]
    ee68:	stp	x19, x20, [sp, #16]
    ee6c:	mov	x20, x3
    ee70:	cmp	x8, #0x0
    ee74:	add	x8, x8, #0x90
    ee78:	csel	x7, x7, x8, eq  // eq = none
    ee7c:	mov	x19, x4
    ee80:	stp	x21, x22, [sp, #32]
    ee84:	mov	x21, x5
    ee88:	mov	x22, x0
    ee8c:	ldrsw	x25, [x7, #12]
    ee90:	mov	w0, w2
    ee94:	ldr	w24, [x7, #8]
    ee98:	str	w6, [sp, #108]
    ee9c:	bl	12318 <GOMP_doacross_ull_wait@@GOMP_4.5+0x260>
    eea0:	mov	w28, w0
    eea4:	bl	1a4c0 <omp_in_final@@OMP_3.1+0x1d0>
    eea8:	add	x5, x0, #0x100
    eeac:	and	w24, w24, #0x7fffffff
    eeb0:	str	w24, [x0, #256]
    eeb4:	cmp	x21, #0x0
    eeb8:	ldr	w3, [sp, #108]
    eebc:	mov	x4, x0
    eec0:	str	x25, [x5, #8]
    eec4:	ccmp	x20, x19, #0x4, gt
    eec8:	b.gt	ef20 <GOMP_parallel_loop_maybe_nonmonotonic_runtime@@GOMP_5.0+0xf0>
    eecc:	cmp	x21, #0x0
    eed0:	str	x20, [x5, #72]
    eed4:	ccmp	x20, x19, #0x0, lt  // lt = tstop
    eed8:	csel	x19, x19, x20, ge  // ge = tcont
    eedc:	stp	x19, x21, [x5, #16]
    eee0:	cmp	w24, #0x2
    eee4:	b.eq	ef34 <GOMP_parallel_loop_maybe_nonmonotonic_runtime@@GOMP_5.0+0x104>  // b.none
    eee8:	mov	w2, w28
    eeec:	mov	x1, x23
    eef0:	mov	x5, #0x0                   	// #0
    eef4:	mov	x0, x22
    eef8:	bl	1a618 <omp_in_final@@OMP_3.1+0x328>
    eefc:	mov	x0, x23
    ef00:	blr	x22
    ef04:	ldp	x19, x20, [sp, #16]
    ef08:	ldp	x21, x22, [sp, #32]
    ef0c:	ldp	x23, x24, [sp, #48]
    ef10:	ldp	x25, x26, [sp, #64]
    ef14:	ldp	x27, x28, [sp, #80]
    ef18:	ldp	x29, x30, [sp], #112
    ef1c:	b	126b0 <GOMP_parallel_end@@GOMP_1.0>
    ef20:	mov	x19, x20
    ef24:	stp	x19, x21, [x5, #16]
    ef28:	cmp	w24, #0x2
    ef2c:	str	x20, [x5, #72]
    ef30:	b.ne	eee8 <GOMP_parallel_loop_maybe_nonmonotonic_runtime@@GOMP_5.0+0xb8>  // b.any
    ef34:	add	x26, x26, x27
    ef38:	mul	x25, x25, x21
    ef3c:	str	x25, [x5, #8]
    ef40:	mov	x0, #0x1                   	// #1
    ef44:	ldr	x1, [x26, #16]
    ef48:	cbz	x1, ef50 <GOMP_parallel_loop_maybe_nonmonotonic_runtime@@GOMP_5.0+0x120>
    ef4c:	ldr	w0, [x1]
    ef50:	cmp	x21, #0x0
    ef54:	b.le	ef84 <GOMP_parallel_loop_maybe_nonmonotonic_runtime@@GOMP_5.0+0x154>
    ef58:	orr	x2, x25, x0
    ef5c:	mov	x1, #0x7fffffff            	// #2147483647
    ef60:	cmp	x2, x1
    ef64:	b.hi	efb8 <GOMP_parallel_loop_maybe_nonmonotonic_runtime@@GOMP_5.0+0x188>  // b.pmore
    ef68:	madd	x25, x0, x25, x25
    ef6c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    ef70:	sub	x25, x0, x25
    ef74:	cmp	x19, x25
    ef78:	cset	w0, lt  // lt = tstop
    ef7c:	str	w0, [x5, #4]
    ef80:	b	eee8 <GOMP_parallel_loop_maybe_nonmonotonic_runtime@@GOMP_5.0+0xb8>
    ef84:	neg	x1, x25
    ef88:	mov	x2, #0x7fffffff            	// #2147483647
    ef8c:	orr	x6, x0, x1
    ef90:	cmp	x6, x2
    ef94:	b.hi	efb8 <GOMP_parallel_loop_maybe_nonmonotonic_runtime@@GOMP_5.0+0x188>  // b.pmore
    ef98:	madd	x1, x0, x1, x1
    ef9c:	mov	x0, #0x2                   	// #2
    efa0:	movk	x0, #0x8000, lsl #48
    efa4:	add	x1, x1, x0
    efa8:	cmp	x19, x1
    efac:	cset	w0, ge  // ge = tcont
    efb0:	str	w0, [x5, #4]
    efb4:	b	eee8 <GOMP_parallel_loop_maybe_nonmonotonic_runtime@@GOMP_5.0+0xb8>
    efb8:	str	wzr, [x5, #4]
    efbc:	b	eee8 <GOMP_parallel_loop_maybe_nonmonotonic_runtime@@GOMP_5.0+0xb8>

000000000000efc0 <GOMP_loop_end@@GOMP_1.0>:
    efc0:	b	1bf38 <omp_in_final@@OMP_3.1+0x1c48>
    efc4:	nop

000000000000efc8 <GOMP_loop_end_cancel@@GOMP_4.0>:
    efc8:	b	1c048 <omp_in_final@@OMP_3.1+0x1d58>
    efcc:	nop

000000000000efd0 <GOMP_loop_end_nowait@@GOMP_1.0>:
    efd0:	b	1c118 <omp_in_final@@OMP_3.1+0x1e28>
    efd4:	nop

000000000000efd8 <GOMP_loop_ull_static_start@@GOMP_2.0>:
    efd8:	stp	x29, x30, [sp, #-96]!
    efdc:	mov	x29, sp
    efe0:	stp	x27, x28, [sp, #80]
    efe4:	and	w27, w0, #0xff
    efe8:	adrp	x28, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    efec:	ldr	x28, [x28, #4016]
    eff0:	stp	x23, x24, [sp, #48]
    eff4:	mrs	x24, tpidr_el0
    eff8:	mov	x23, x3
    effc:	stp	x25, x26, [sp, #64]
    f000:	add	x26, x24, x28
    f004:	mov	x25, x4
    f008:	stp	x19, x20, [sp, #16]
    f00c:	mov	x0, #0x0                   	// #0
    f010:	mov	x19, x1
    f014:	stp	x21, x22, [sp, #32]
    f018:	mov	x20, x5
    f01c:	mov	x22, x2
    f020:	mov	x21, x6
    f024:	str	xzr, [x26, #72]
    f028:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
    f02c:	tst	w0, #0xff
    f030:	b.eq	f084 <GOMP_loop_ull_static_start@@GOMP_2.0+0xac>  // b.none
    f034:	ldr	x7, [x26, #24]
    f038:	mov	w0, #0x1                   	// #1
    f03c:	cmp	w27, #0x0
    f040:	ccmp	x19, x22, #0x0, ne  // ne = any
    f044:	str	w0, [x7]
    f048:	str	x25, [x7, #8]
    f04c:	b.ls	f0b4 <GOMP_loop_ull_static_start@@GOMP_2.0+0xdc>  // b.plast
    f050:	str	wzr, [x7, #4]
    f054:	stp	x19, x23, [x7, #16]
    f058:	str	x19, [x7, #72]
    f05c:	add	x24, x24, x28
    f060:	ldr	x0, [x24, #32]
    f064:	cbz	x0, f084 <GOMP_loop_ull_static_start@@GOMP_2.0+0xac>
    f068:	add	x0, x0, #0x50
    f06c:	ldxr	x1, [x0]
    f070:	stlxr	w2, x7, [x0]
    f074:	cbnz	w2, f06c <GOMP_loop_ull_static_start@@GOMP_2.0+0x94>
    f078:	cmp	x1, #0x1
    f07c:	b.eq	f084 <GOMP_loop_ull_static_start@@GOMP_2.0+0xac>  // b.none
    f080:	bl	1d8a0 <omp_get_num_procs@@OMP_1.0+0xcf0>
    f084:	mov	x1, x21
    f088:	mov	x0, x20
    f08c:	bl	c1d8 <omp_is_initial_device@@OMP_4.0+0x4b0>
    f090:	cmp	w0, #0x0
    f094:	cset	w0, eq  // eq = none
    f098:	ldp	x19, x20, [sp, #16]
    f09c:	ldp	x21, x22, [sp, #32]
    f0a0:	ldp	x23, x24, [sp, #48]
    f0a4:	ldp	x25, x26, [sp, #64]
    f0a8:	ldp	x27, x28, [sp, #80]
    f0ac:	ldp	x29, x30, [sp], #96
    f0b0:	ret
    f0b4:	cmp	x19, x22
    f0b8:	eor	w0, w27, w0
    f0bc:	cset	w1, cc  // cc = lo, ul, last
    f0c0:	tst	w1, w0
    f0c4:	b.ne	f0e4 <GOMP_loop_ull_static_start@@GOMP_2.0+0x10c>  // b.any
    f0c8:	str	wzr, [x7, #4]
    f0cc:	stp	x22, x23, [x7, #16]
    f0d0:	str	x19, [x7, #72]
    f0d4:	cbnz	w27, f05c <GOMP_loop_ull_static_start@@GOMP_2.0+0x84>
    f0d8:	mov	w0, #0x2                   	// #2
    f0dc:	str	w0, [x7, #4]
    f0e0:	b	f05c <GOMP_loop_ull_static_start@@GOMP_2.0+0x84>
    f0e4:	stp	x19, x23, [x7, #16]
    f0e8:	str	x19, [x7, #72]
    f0ec:	b	f0d8 <GOMP_loop_ull_static_start@@GOMP_2.0+0x100>

000000000000f0f0 <GOMP_loop_ull_dynamic_start@@GOMP_2.0>:
    f0f0:	stp	x29, x30, [sp, #-80]!
    f0f4:	mov	x29, sp
    f0f8:	stp	x19, x20, [sp, #16]
    f0fc:	mov	x19, x1
    f100:	mov	x20, x5
    f104:	stp	x21, x22, [sp, #32]
    f108:	mov	x22, x4
    f10c:	mov	x21, x6
    f110:	stp	x23, x24, [sp, #48]
    f114:	mov	x24, x2
    f118:	mov	x23, x3
    f11c:	str	x25, [sp, #64]
    f120:	and	w25, w0, #0xff
    f124:	mov	x0, #0x0                   	// #0
    f128:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
    f12c:	tst	w0, #0xff
    f130:	b.ne	f154 <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x64>  // b.any
    f134:	mov	x1, x21
    f138:	mov	x0, x20
    f13c:	ldp	x19, x20, [sp, #16]
    f140:	ldp	x21, x22, [sp, #32]
    f144:	ldp	x23, x24, [sp, #48]
    f148:	ldr	x25, [sp, #64]
    f14c:	ldp	x29, x30, [sp], #80
    f150:	b	c3f8 <omp_is_initial_device@@OMP_4.0+0x6d0>
    f154:	adrp	x3, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    f158:	ldr	x3, [x3, #4016]
    f15c:	mrs	x6, tpidr_el0
    f160:	mov	w4, #0x2                   	// #2
    f164:	cmp	w25, #0x0
    f168:	add	x2, x6, x3
    f16c:	mul	x0, x23, x22
    f170:	ccmp	x19, x24, #0x0, ne  // ne = any
    f174:	ldr	x1, [x2, #24]
    f178:	ldr	x2, [x2, #16]
    f17c:	str	w4, [x1]
    f180:	str	x22, [x1, #8]
    f184:	b.hi	f22c <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x13c>  // b.pmore
    f188:	cmp	x19, x24
    f18c:	str	wzr, [x1, #4]
    f190:	str	x0, [x1, #8]
    f194:	eor	w4, w25, #0x1
    f198:	cset	w5, cc  // cc = lo, ul, last
    f19c:	tst	w5, w4
    f1a0:	b.ne	f24c <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x15c>  // b.any
    f1a4:	stp	x24, x23, [x1, #16]
    f1a8:	str	x19, [x1, #72]
    f1ac:	mov	x19, x24
    f1b0:	cbz	x2, f290 <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x1a0>
    f1b4:	ldr	w5, [x2]
    f1b8:	mov	x4, x5
    f1bc:	cbz	w25, f260 <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x170>
    f1c0:	orr	x4, x0, x4
    f1c4:	mov	x2, #0x7fffffff            	// #2147483647
    f1c8:	cmp	x4, x2
    f1cc:	b.hi	f1e4 <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0xf4>  // b.pmore
    f1d0:	madd	x0, x5, x0, x0
    f1d4:	mvn	x0, x0
    f1d8:	cmp	x0, x19
    f1dc:	cset	w0, hi  // hi = pmore
    f1e0:	str	w0, [x1, #4]
    f1e4:	add	x3, x6, x3
    f1e8:	ldr	x0, [x3, #32]
    f1ec:	cbz	x0, f134 <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x44>
    f1f0:	add	x0, x0, #0x50
    f1f4:	ldxr	x2, [x0]
    f1f8:	stlxr	w3, x1, [x0]
    f1fc:	cbnz	w3, f1f4 <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x104>
    f200:	cmp	x2, #0x1
    f204:	b.eq	f134 <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x44>  // b.none
    f208:	bl	1d8a0 <omp_get_num_procs@@OMP_1.0+0xcf0>
    f20c:	mov	x1, x21
    f210:	mov	x0, x20
    f214:	ldp	x19, x20, [sp, #16]
    f218:	ldp	x21, x22, [sp, #32]
    f21c:	ldp	x23, x24, [sp, #48]
    f220:	ldr	x25, [sp, #64]
    f224:	ldp	x29, x30, [sp], #80
    f228:	b	c3f8 <omp_is_initial_device@@OMP_4.0+0x6d0>
    f22c:	str	wzr, [x1, #4]
    f230:	stp	x0, x19, [x1, #8]
    f234:	str	x23, [x1, #24]
    f238:	str	x19, [x1, #72]
    f23c:	cbnz	x2, f1b4 <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0xc4>
    f240:	mov	x4, #0x1                   	// #1
    f244:	mov	x5, x4
    f248:	b	f1c0 <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0xd0>
    f24c:	stp	x19, x23, [x1, #16]
    f250:	mov	x4, #0x1                   	// #1
    f254:	mov	x5, x4
    f258:	str	x19, [x1, #72]
    f25c:	cbnz	x2, f1b4 <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0xc4>
    f260:	neg	x2, x0
    f264:	mov	x0, #0x7fffffff            	// #2147483647
    f268:	orr	x4, x4, x2
    f26c:	cmp	x4, x0
    f270:	b.hi	f29c <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x1ac>  // b.pmore
    f274:	madd	x0, x5, x2, x2
    f278:	add	x0, x0, #0x1
    f27c:	cmp	x0, x19
    f280:	cset	w0, cc  // cc = lo, ul, last
    f284:	orr	w0, w0, #0x2
    f288:	str	w0, [x1, #4]
    f28c:	b	f1e4 <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0xf4>
    f290:	mov	x4, #0x1                   	// #1
    f294:	mov	x5, x4
    f298:	b	f1bc <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0xcc>
    f29c:	ldr	w0, [x1, #4]
    f2a0:	b	f284 <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x194>
    f2a4:	nop

000000000000f2a8 <GOMP_loop_ull_guided_start@@GOMP_2.0>:
    f2a8:	stp	x29, x30, [sp, #-80]!
    f2ac:	mov	x29, sp
    f2b0:	stp	x19, x20, [sp, #16]
    f2b4:	mov	x19, x1
    f2b8:	mov	x20, x5
    f2bc:	stp	x21, x22, [sp, #32]
    f2c0:	mov	x22, x2
    f2c4:	mov	x21, x6
    f2c8:	stp	x23, x24, [sp, #48]
    f2cc:	mov	x23, x3
    f2d0:	mov	x24, x4
    f2d4:	str	x25, [sp, #64]
    f2d8:	and	w25, w0, #0xff
    f2dc:	mov	x0, #0x0                   	// #0
    f2e0:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
    f2e4:	tst	w0, #0xff
    f2e8:	b.eq	f34c <GOMP_loop_ull_guided_start@@GOMP_2.0+0xa4>  // b.none
    f2ec:	adrp	x1, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    f2f0:	ldr	x1, [x1, #4016]
    f2f4:	mrs	x0, tpidr_el0
    f2f8:	mov	w2, #0x3                   	// #3
    f2fc:	cmp	w25, #0x0
    f300:	add	x3, x0, x1
    f304:	ccmp	x19, x22, #0x0, ne  // ne = any
    f308:	ldr	x7, [x3, #24]
    f30c:	str	w2, [x7]
    f310:	str	x24, [x7, #8]
    f314:	b.ls	f36c <GOMP_loop_ull_guided_start@@GOMP_2.0+0xc4>  // b.plast
    f318:	str	wzr, [x7, #4]
    f31c:	stp	x19, x23, [x7, #16]
    f320:	str	x19, [x7, #72]
    f324:	add	x0, x0, x1
    f328:	ldr	x0, [x0, #32]
    f32c:	cbz	x0, f34c <GOMP_loop_ull_guided_start@@GOMP_2.0+0xa4>
    f330:	add	x0, x0, #0x50
    f334:	ldxr	x1, [x0]
    f338:	stlxr	w2, x7, [x0]
    f33c:	cbnz	w2, f334 <GOMP_loop_ull_guided_start@@GOMP_2.0+0x8c>
    f340:	cmp	x1, #0x1
    f344:	b.eq	f34c <GOMP_loop_ull_guided_start@@GOMP_2.0+0xa4>  // b.none
    f348:	bl	1d8a0 <omp_get_num_procs@@OMP_1.0+0xcf0>
    f34c:	mov	x1, x21
    f350:	mov	x0, x20
    f354:	ldp	x19, x20, [sp, #16]
    f358:	ldp	x21, x22, [sp, #32]
    f35c:	ldp	x23, x24, [sp, #48]
    f360:	ldr	x25, [sp, #64]
    f364:	ldp	x29, x30, [sp], #80
    f368:	b	c5a8 <omp_is_initial_device@@OMP_4.0+0x880>
    f36c:	cmp	x19, x22
    f370:	eor	w2, w25, #0x1
    f374:	cset	w3, cc  // cc = lo, ul, last
    f378:	tst	w3, w2
    f37c:	b.ne	f39c <GOMP_loop_ull_guided_start@@GOMP_2.0+0xf4>  // b.any
    f380:	str	wzr, [x7, #4]
    f384:	stp	x22, x23, [x7, #16]
    f388:	str	x19, [x7, #72]
    f38c:	cbnz	w25, f324 <GOMP_loop_ull_guided_start@@GOMP_2.0+0x7c>
    f390:	mov	w2, #0x2                   	// #2
    f394:	str	w2, [x7, #4]
    f398:	b	f324 <GOMP_loop_ull_guided_start@@GOMP_2.0+0x7c>
    f39c:	stp	x19, x23, [x7, #16]
    f3a0:	str	x19, [x7, #72]
    f3a4:	b	f390 <GOMP_loop_ull_guided_start@@GOMP_2.0+0xe8>

000000000000f3a8 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0>:
    f3a8:	stp	x29, x30, [sp, #-112]!
    f3ac:	adrp	x7, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    f3b0:	add	x7, x7, #0x2b0
    f3b4:	mov	x29, sp
    f3b8:	stp	x23, x24, [sp, #48]
    f3bc:	adrp	x24, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    f3c0:	ldr	x24, [x24, #4016]
    f3c4:	stp	x25, x26, [sp, #64]
    f3c8:	mrs	x26, tpidr_el0
    f3cc:	add	x25, x26, x24
    f3d0:	str	x4, [sp, #104]
    f3d4:	stp	x27, x28, [sp, #80]
    f3d8:	and	w27, w0, #0xff
    f3dc:	ldr	x8, [x25, #80]
    f3e0:	stp	x19, x20, [sp, #16]
    f3e4:	mov	x20, x5
    f3e8:	cmp	x8, #0x0
    f3ec:	add	x4, x8, #0x90
    f3f0:	csel	x4, x7, x4, eq  // eq = none
    f3f4:	ldr	w0, [x4, #8]
    f3f8:	and	w19, w0, #0x7fffffff
    f3fc:	cmp	w19, #0x3
    f400:	b.eq	f4bc <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x114>  // b.none
    f404:	tst	w0, #0x7ffffffc
    f408:	b.ne	f48c <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0xe4>  // b.any
    f40c:	cmp	w19, #0x1
    f410:	b.ne	f43c <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x94>  // b.any
    f414:	ldrsw	x4, [x4, #12]
    f418:	mov	x6, x5
    f41c:	mov	w0, w27
    f420:	ldp	x19, x20, [sp, #16]
    f424:	ldp	x23, x24, [sp, #48]
    f428:	ldp	x25, x26, [sp, #64]
    f42c:	ldp	x27, x28, [sp, #80]
    f430:	ldr	x5, [sp, #104]
    f434:	ldp	x29, x30, [sp], #112
    f438:	b	efd8 <GOMP_loop_ull_static_start@@GOMP_2.0>
    f43c:	stp	x21, x22, [sp, #32]
    f440:	cmp	w19, #0x2
    f444:	b.ne	f608 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x260>  // b.any
    f448:	ldr	w28, [x4, #12]
    f44c:	mov	x23, x1
    f450:	mov	x22, x2
    f454:	mov	x21, x3
    f458:	mov	x0, #0x0                   	// #0
    f45c:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
    f460:	tst	w0, #0xff
    f464:	b.ne	f4e4 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x13c>  // b.any
    f468:	mov	x1, x20
    f46c:	ldp	x19, x20, [sp, #16]
    f470:	ldp	x21, x22, [sp, #32]
    f474:	ldp	x23, x24, [sp, #48]
    f478:	ldp	x25, x26, [sp, #64]
    f47c:	ldp	x27, x28, [sp, #80]
    f480:	ldr	x0, [sp, #104]
    f484:	ldp	x29, x30, [sp], #112
    f488:	b	c3f8 <omp_is_initial_device@@OMP_4.0+0x6d0>
    f48c:	cmp	w19, #0x4
    f490:	b.ne	f604 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x25c>  // b.any
    f494:	mov	x6, x5
    f498:	mov	w0, w27
    f49c:	ldp	x19, x20, [sp, #16]
    f4a0:	mov	x4, #0x0                   	// #0
    f4a4:	ldp	x23, x24, [sp, #48]
    f4a8:	ldp	x25, x26, [sp, #64]
    f4ac:	ldp	x27, x28, [sp, #80]
    f4b0:	ldr	x5, [sp, #104]
    f4b4:	ldp	x29, x30, [sp], #112
    f4b8:	b	efd8 <GOMP_loop_ull_static_start@@GOMP_2.0>
    f4bc:	ldrsw	x4, [x4, #12]
    f4c0:	mov	x6, x5
    f4c4:	mov	w0, w27
    f4c8:	ldp	x19, x20, [sp, #16]
    f4cc:	ldp	x23, x24, [sp, #48]
    f4d0:	ldp	x25, x26, [sp, #64]
    f4d4:	ldp	x27, x28, [sp, #80]
    f4d8:	ldr	x5, [sp, #104]
    f4dc:	ldp	x29, x30, [sp], #112
    f4e0:	b	f2a8 <GOMP_loop_ull_guided_start@@GOMP_2.0>
    f4e4:	ldp	x2, x1, [x25, #16]
    f4e8:	sxtw	x28, w28
    f4ec:	cmp	w27, #0x0
    f4f0:	ccmp	x23, x22, #0x0, ne  // ne = any
    f4f4:	mul	x0, x28, x21
    f4f8:	str	w19, [x1]
    f4fc:	str	x28, [x1, #8]
    f500:	b.hi	f58c <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x1e4>  // b.pmore
    f504:	cmp	x23, x22
    f508:	str	wzr, [x1, #4]
    f50c:	str	x0, [x1, #8]
    f510:	eor	w3, w27, #0x1
    f514:	cset	w4, cc  // cc = lo, ul, last
    f518:	tst	w4, w3
    f51c:	b.ne	f5ac <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x204>  // b.any
    f520:	stp	x22, x21, [x1, #16]
    f524:	str	x23, [x1, #72]
    f528:	mov	x23, x22
    f52c:	cbz	x2, f5f0 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x248>
    f530:	ldr	w4, [x2]
    f534:	mov	x3, x4
    f538:	cbz	w27, f5c0 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x218>
    f53c:	orr	x3, x0, x3
    f540:	mov	x2, #0x7fffffff            	// #2147483647
    f544:	cmp	x3, x2
    f548:	b.hi	f560 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x1b8>  // b.pmore
    f54c:	madd	x0, x4, x0, x0
    f550:	mvn	x0, x0
    f554:	cmp	x0, x23
    f558:	cset	w0, hi  // hi = pmore
    f55c:	str	w0, [x1, #4]
    f560:	add	x24, x26, x24
    f564:	ldr	x0, [x24, #32]
    f568:	cbz	x0, f468 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0xc0>
    f56c:	add	x0, x0, #0x50
    f570:	ldxr	x2, [x0]
    f574:	stlxr	w3, x1, [x0]
    f578:	cbnz	w3, f570 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x1c8>
    f57c:	cmp	x2, #0x1
    f580:	b.eq	f468 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0xc0>  // b.none
    f584:	bl	1d8a0 <omp_get_num_procs@@OMP_1.0+0xcf0>
    f588:	b	f468 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0xc0>
    f58c:	str	wzr, [x1, #4]
    f590:	mov	x3, #0x1                   	// #1
    f594:	stp	x0, x23, [x1, #8]
    f598:	mov	x4, x3
    f59c:	str	x21, [x1, #24]
    f5a0:	str	x23, [x1, #72]
    f5a4:	cbnz	x2, f530 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x188>
    f5a8:	b	f53c <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x194>
    f5ac:	stp	x23, x21, [x1, #16]
    f5b0:	str	x23, [x1, #72]
    f5b4:	cbnz	x2, f530 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x188>
    f5b8:	mov	x3, #0x1                   	// #1
    f5bc:	mov	x4, x3
    f5c0:	neg	x2, x0
    f5c4:	mov	x0, #0x7fffffff            	// #2147483647
    f5c8:	orr	x3, x3, x2
    f5cc:	cmp	x3, x0
    f5d0:	b.hi	f5fc <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x254>  // b.pmore
    f5d4:	madd	x0, x4, x2, x2
    f5d8:	add	x0, x0, #0x1
    f5dc:	cmp	x0, x23
    f5e0:	cset	w0, cc  // cc = lo, ul, last
    f5e4:	orr	w0, w0, #0x2
    f5e8:	str	w0, [x1, #4]
    f5ec:	b	f560 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x1b8>
    f5f0:	mov	x3, #0x1                   	// #1
    f5f4:	mov	x4, x3
    f5f8:	b	f538 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x190>
    f5fc:	ldr	w0, [x1, #4]
    f600:	b	f5e4 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x23c>
    f604:	stp	x21, x22, [sp, #32]
    f608:	bl	8820 <abort@plt>
    f60c:	nop

000000000000f610 <GOMP_loop_ull_start@@GOMP_5.0>:
    f610:	stp	x29, x30, [sp, #-128]!
    f614:	mov	x29, sp
    f618:	stp	x19, x20, [sp, #16]
    f61c:	mov	x19, x4
    f620:	adrp	x20, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    f624:	ldr	x20, [x20, #4016]
    f628:	stp	x23, x24, [sp, #48]
    f62c:	mrs	x24, tpidr_el0
    f630:	add	x10, x24, x20
    f634:	stp	x25, x26, [sp, #64]
    f638:	mov	x23, x7
    f63c:	ldp	x25, x26, [sp, #128]
    f640:	stp	x21, x22, [sp, #32]
    f644:	mov	x21, x3
    f648:	stp	x27, x28, [sp, #80]
    f64c:	mov	x22, x6
    f650:	mov	x28, x1
    f654:	str	xzr, [x10, #72]
    f658:	and	w27, w0, #0xff
    f65c:	stp	x2, x10, [sp, #104]
    f660:	str	x5, [sp, #120]
    f664:	cbz	x25, f6e4 <GOMP_loop_ull_start@@GOMP_5.0+0xd4>
    f668:	bl	1a1e0 <GOMP_task_reduction_remap@@GOMP_5.0+0x570>
    f66c:	mov	x0, #0x0                   	// #0
    f670:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
    f674:	tst	w0, #0xff
    f678:	ldr	x10, [sp, #112]
    f67c:	b.ne	f6f4 <GOMP_loop_ull_start@@GOMP_5.0+0xe4>  // b.any
    f680:	ldr	x1, [x10, #24]
    f684:	mov	x0, x25
    f688:	ldr	x1, [x1, #88]
    f68c:	bl	19f80 <GOMP_task_reduction_remap@@GOMP_5.0+0x310>
    f690:	add	x20, x24, x20
    f694:	ldr	x19, [x20, #24]
    f698:	cbz	x26, f6a8 <GOMP_loop_ull_start@@GOMP_5.0+0x98>
    f69c:	ldr	x0, [x19, #32]
    f6a0:	str	x0, [x26]
    f6a4:	ldr	x19, [x20, #24]
    f6a8:	ldr	w0, [x19]
    f6ac:	cmp	w0, #0x2
    f6b0:	b.eq	f840 <GOMP_loop_ull_start@@GOMP_5.0+0x230>  // b.none
    f6b4:	b.ls	f908 <GOMP_loop_ull_start@@GOMP_5.0+0x2f8>  // b.plast
    f6b8:	cmp	w0, #0x3
    f6bc:	b.ne	f8d0 <GOMP_loop_ull_start@@GOMP_5.0+0x2c0>  // b.any
    f6c0:	mov	x1, x23
    f6c4:	mov	x0, x22
    f6c8:	ldp	x19, x20, [sp, #16]
    f6cc:	ldp	x21, x22, [sp, #32]
    f6d0:	ldp	x23, x24, [sp, #48]
    f6d4:	ldp	x25, x26, [sp, #64]
    f6d8:	ldp	x27, x28, [sp, #80]
    f6dc:	ldp	x29, x30, [sp], #128
    f6e0:	b	c5a8 <omp_is_initial_device@@OMP_4.0+0x880>
    f6e4:	mov	x0, #0x0                   	// #0
    f6e8:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
    f6ec:	tst	w0, #0xff
    f6f0:	b.eq	f690 <GOMP_loop_ull_start@@GOMP_5.0+0x80>  // b.none
    f6f4:	tst	x19, #0x7ffffffc
    f6f8:	and	x4, x19, #0x7fffffff
    f6fc:	b.ne	f914 <GOMP_loop_ull_start@@GOMP_5.0+0x304>  // b.any
    f700:	cbnz	x4, f950 <GOMP_loop_ull_start@@GOMP_5.0+0x340>
    f704:	add	x2, x24, x20
    f708:	adrp	x1, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    f70c:	add	x1, x1, #0x2b0
    f710:	ldr	x0, [x2, #80]
    f714:	cmp	x0, #0x0
    f718:	add	x0, x0, #0x90
    f71c:	csel	x1, x1, x0, eq  // eq = none
    f720:	ldr	w0, [x1, #8]
    f724:	tst	w0, #0x7ffffffc
    f728:	and	w0, w0, #0x7fffffff
    f72c:	b.ne	f864 <GOMP_loop_ull_start@@GOMP_5.0+0x254>  // b.any
    f730:	cbz	w0, f910 <GOMP_loop_ull_start@@GOMP_5.0+0x300>
    f734:	ldrsw	x1, [x1, #12]
    f738:	mov	w4, w0
    f73c:	str	x1, [sp, #120]
    f740:	add	x1, x24, x20
    f744:	cmp	w27, #0x0
    f748:	ldr	x2, [sp, #104]
    f74c:	ldr	x19, [x1, #24]
    f750:	ccmp	x28, x2, #0x0, ne  // ne = any
    f754:	str	w0, [x19]
    f758:	ldr	x0, [sp, #120]
    f75c:	str	x0, [x19, #8]
    f760:	b.ls	f978 <GOMP_loop_ull_start@@GOMP_5.0+0x368>  // b.plast
    f764:	str	wzr, [x19, #4]
    f768:	cmp	x4, #0x2
    f76c:	stp	x28, x21, [x19, #16]
    f770:	str	x28, [x19, #72]
    f774:	b.ne	f7bc <GOMP_loop_ull_start@@GOMP_5.0+0x1ac>  // b.any
    f778:	ldr	x0, [x1, #16]
    f77c:	ldr	x1, [sp, #120]
    f780:	mul	x21, x21, x1
    f784:	str	x21, [x19, #8]
    f788:	cbz	x0, f96c <GOMP_loop_ull_start@@GOMP_5.0+0x35c>
    f78c:	ldr	w1, [x0]
    f790:	mov	x0, x1
    f794:	cbz	w27, f9c0 <GOMP_loop_ull_start@@GOMP_5.0+0x3b0>
    f798:	orr	x0, x21, x0
    f79c:	mov	x2, #0x7fffffff            	// #2147483647
    f7a0:	cmp	x0, x2
    f7a4:	b.hi	f7bc <GOMP_loop_ull_start@@GOMP_5.0+0x1ac>  // b.pmore
    f7a8:	madd	x21, x1, x21, x21
    f7ac:	mvn	x21, x21
    f7b0:	cmp	x21, x28
    f7b4:	cset	w0, hi  // hi = pmore
    f7b8:	str	w0, [x19, #4]
    f7bc:	cbz	x25, f7e4 <GOMP_loop_ull_start@@GOMP_5.0+0x1d4>
    f7c0:	mov	x0, x25
    f7c4:	bl	17c48 <GOMP_taskgroup_reduction_register@@GOMP_5.0>
    f7c8:	add	x0, x24, x20
    f7cc:	mov	w1, #0x1                   	// #1
    f7d0:	ldr	x2, [x0, #80]
    f7d4:	ldr	x19, [x0, #24]
    f7d8:	ldr	x0, [x2, #40]
    f7dc:	strb	w1, [x0, #50]
    f7e0:	str	x25, [x19, #88]
    f7e4:	cbz	x26, f808 <GOMP_loop_ull_start@@GOMP_5.0+0x1f8>
    f7e8:	ldr	x0, [x26]
    f7ec:	cmp	x0, #0x20
    f7f0:	b.ls	f930 <GOMP_loop_ull_start@@GOMP_5.0+0x320>  // b.plast
    f7f4:	bl	b330 <fprintf@plt+0x2870>
    f7f8:	str	x0, [x19, #32]
    f7fc:	add	x1, x24, x20
    f800:	str	x0, [x26]
    f804:	ldr	x19, [x1, #24]
    f808:	add	x20, x24, x20
    f80c:	ldr	x0, [x20, #32]
    f810:	cbz	x0, f6a8 <GOMP_loop_ull_start@@GOMP_5.0+0x98>
    f814:	add	x0, x0, #0x50
    f818:	ldxr	x1, [x0]
    f81c:	stlxr	w2, x19, [x0]
    f820:	cbnz	w2, f818 <GOMP_loop_ull_start@@GOMP_5.0+0x208>
    f824:	cmp	x1, #0x1
    f828:	b.eq	f6a4 <GOMP_loop_ull_start@@GOMP_5.0+0x94>  // b.none
    f82c:	bl	1d8a0 <omp_get_num_procs@@OMP_1.0+0xcf0>
    f830:	ldr	x19, [x20, #24]
    f834:	ldr	w0, [x19]
    f838:	cmp	w0, #0x2
    f83c:	b.ne	f6b4 <GOMP_loop_ull_start@@GOMP_5.0+0xa4>  // b.any
    f840:	mov	x1, x23
    f844:	mov	x0, x22
    f848:	ldp	x19, x20, [sp, #16]
    f84c:	ldp	x21, x22, [sp, #32]
    f850:	ldp	x23, x24, [sp, #48]
    f854:	ldp	x25, x26, [sp, #64]
    f858:	ldp	x27, x28, [sp, #80]
    f85c:	ldp	x29, x30, [sp], #128
    f860:	b	c3f8 <omp_is_initial_device@@OMP_4.0+0x6d0>
    f864:	cmp	w0, #0x4
    f868:	b.ne	f910 <GOMP_loop_ull_start@@GOMP_5.0+0x300>  // b.any
    f86c:	ldr	x19, [x2, #24]
    f870:	mov	w0, #0x1                   	// #1
    f874:	ldr	x1, [sp, #104]
    f878:	cmp	w27, #0x0
    f87c:	str	w0, [x19]
    f880:	str	xzr, [x19, #8]
    f884:	ccmp	x28, x1, #0x0, ne  // ne = any
    f888:	b.hi	f920 <GOMP_loop_ull_start@@GOMP_5.0+0x310>  // b.pmore
    f88c:	cmp	x28, x1
    f890:	eor	w0, w27, #0x1
    f894:	cset	w1, cc  // cc = lo, ul, last
    f898:	tst	w1, w0
    f89c:	b.ne	f958 <GOMP_loop_ull_start@@GOMP_5.0+0x348>  // b.any
    f8a0:	mov	x4, #0x1                   	// #1
    f8a4:	str	xzr, [sp, #120]
    f8a8:	ldr	x0, [sp, #104]
    f8ac:	str	wzr, [x19, #4]
    f8b0:	stp	x0, x21, [x19, #16]
    f8b4:	cmp	x4, #0x2
    f8b8:	str	x28, [x19, #72]
    f8bc:	b.eq	f9f4 <GOMP_loop_ull_start@@GOMP_5.0+0x3e4>  // b.none
    f8c0:	cbnz	w27, f7bc <GOMP_loop_ull_start@@GOMP_5.0+0x1ac>
    f8c4:	mov	w0, #0x2                   	// #2
    f8c8:	str	w0, [x19, #4]
    f8cc:	b	f7bc <GOMP_loop_ull_start@@GOMP_5.0+0x1ac>
    f8d0:	cmp	w0, #0x4
    f8d4:	b.ne	f910 <GOMP_loop_ull_start@@GOMP_5.0+0x300>  // b.any
    f8d8:	mov	x1, x23
    f8dc:	mov	x0, x22
    f8e0:	bl	c1d8 <omp_is_initial_device@@OMP_4.0+0x4b0>
    f8e4:	cmp	w0, #0x0
    f8e8:	cset	w0, eq  // eq = none
    f8ec:	ldp	x19, x20, [sp, #16]
    f8f0:	ldp	x21, x22, [sp, #32]
    f8f4:	ldp	x23, x24, [sp, #48]
    f8f8:	ldp	x25, x26, [sp, #64]
    f8fc:	ldp	x27, x28, [sp, #80]
    f900:	ldp	x29, x30, [sp], #128
    f904:	ret
    f908:	cmp	w0, #0x1
    f90c:	b.eq	f8d8 <GOMP_loop_ull_start@@GOMP_5.0+0x2c8>  // b.none
    f910:	bl	8820 <abort@plt>
    f914:	cmp	x4, #0x4
    f918:	b.eq	f704 <GOMP_loop_ull_start@@GOMP_5.0+0xf4>  // b.none
    f91c:	bl	8820 <abort@plt>
    f920:	str	wzr, [x19, #4]
    f924:	stp	x28, x21, [x19, #16]
    f928:	str	x28, [x19, #72]
    f92c:	b	f7bc <GOMP_loop_ull_start@@GOMP_5.0+0x1ac>
    f930:	mov	x2, x0
    f934:	mov	w1, #0x0                   	// #0
    f938:	add	x0, x19, #0x60
    f93c:	bl	8770 <memset@plt>
    f940:	add	x1, x24, x20
    f944:	str	x0, [x26]
    f948:	ldr	x19, [x1, #24]
    f94c:	b	f808 <GOMP_loop_ull_start@@GOMP_5.0+0x1f8>
    f950:	mov	w0, w4
    f954:	b	f740 <GOMP_loop_ull_start@@GOMP_5.0+0x130>
    f958:	mov	w0, #0x2                   	// #2
    f95c:	str	wzr, [x19, #4]
    f960:	stp	x28, x21, [x19, #16]
    f964:	str	x28, [x19, #72]
    f968:	b	f8c8 <GOMP_loop_ull_start@@GOMP_5.0+0x2b8>
    f96c:	mov	x0, #0x1                   	// #1
    f970:	mov	x1, x0
    f974:	b	f798 <GOMP_loop_ull_start@@GOMP_5.0+0x188>
    f978:	cmp	x28, x2
    f97c:	eor	w0, w27, #0x1
    f980:	cset	w2, cc  // cc = lo, ul, last
    f984:	tst	w2, w0
    f988:	b.eq	f8a8 <GOMP_loop_ull_start@@GOMP_5.0+0x298>  // b.none
    f98c:	str	wzr, [x19, #4]
    f990:	cmp	x4, #0x2
    f994:	stp	x28, x21, [x19, #16]
    f998:	str	x28, [x19, #72]
    f99c:	b.ne	f8c4 <GOMP_loop_ull_start@@GOMP_5.0+0x2b4>  // b.any
    f9a0:	ldr	x0, [x1, #16]
    f9a4:	ldr	x1, [sp, #120]
    f9a8:	mul	x21, x21, x1
    f9ac:	str	x21, [x19, #8]
    f9b0:	cbnz	x0, f78c <GOMP_loop_ull_start@@GOMP_5.0+0x17c>
    f9b4:	mov	x0, #0x1                   	// #1
    f9b8:	mov	x1, x0
    f9bc:	nop
    f9c0:	neg	x3, x21
    f9c4:	mov	x2, #0x7fffffff            	// #2147483647
    f9c8:	orr	x0, x3, x0
    f9cc:	cmp	x0, x2
    f9d0:	b.hi	fa1c <GOMP_loop_ull_start@@GOMP_5.0+0x40c>  // b.pmore
    f9d4:	madd	x21, x1, x3, x3
    f9d8:	add	x0, x21, #0x1
    f9dc:	cmp	x28, x0
    f9e0:	cset	w0, hi  // hi = pmore
    f9e4:	str	w0, [x19, #4]
    f9e8:	orr	w0, w0, #0x2
    f9ec:	str	w0, [x19, #4]
    f9f0:	b	f7bc <GOMP_loop_ull_start@@GOMP_5.0+0x1ac>
    f9f4:	add	x0, x24, x20
    f9f8:	ldr	x1, [sp, #120]
    f9fc:	ldr	x0, [x0, #16]
    fa00:	mul	x21, x21, x1
    fa04:	str	x21, [x19, #8]
    fa08:	ldr	x28, [sp, #104]
    fa0c:	cbnz	x0, f78c <GOMP_loop_ull_start@@GOMP_5.0+0x17c>
    fa10:	mov	x0, #0x1                   	// #1
    fa14:	mov	x1, x0
    fa18:	b	f794 <GOMP_loop_ull_start@@GOMP_5.0+0x184>
    fa1c:	ldr	w0, [x19, #4]
    fa20:	orr	w0, w0, #0x2
    fa24:	str	w0, [x19, #4]
    fa28:	b	f7bc <GOMP_loop_ull_start@@GOMP_5.0+0x1ac>
    fa2c:	nop

000000000000fa30 <GOMP_loop_ull_ordered_static_start@@GOMP_2.0>:
    fa30:	stp	x29, x30, [sp, #-96]!
    fa34:	mov	x29, sp
    fa38:	stp	x25, x26, [sp, #64]
    fa3c:	mov	x25, x4
    fa40:	adrp	x26, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    fa44:	ldr	x26, [x26, #4016]
    fa48:	stp	x21, x22, [sp, #32]
    fa4c:	mrs	x22, tpidr_el0
    fa50:	mov	x21, x6
    fa54:	stp	x27, x28, [sp, #80]
    fa58:	add	x28, x22, x26
    fa5c:	and	w27, w0, #0xff
    fa60:	stp	x19, x20, [sp, #16]
    fa64:	mov	x0, #0x1                   	// #1
    fa68:	mov	x19, x1
    fa6c:	stp	x23, x24, [sp, #48]
    fa70:	mov	x20, x5
    fa74:	mov	x23, x2
    fa78:	mov	x24, x3
    fa7c:	str	xzr, [x28, #72]
    fa80:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
    fa84:	tst	w0, #0xff
    fa88:	b.eq	fae4 <GOMP_loop_ull_ordered_static_start@@GOMP_2.0+0xb4>  // b.none
    fa8c:	ldr	x0, [x28, #24]
    fa90:	mov	w1, #0x1                   	// #1
    fa94:	cmp	w27, #0x0
    fa98:	ccmp	x19, x23, #0x0, ne  // ne = any
    fa9c:	str	w1, [x0]
    faa0:	str	x25, [x0, #8]
    faa4:	b.ls	fb14 <GOMP_loop_ull_ordered_static_start@@GOMP_2.0+0xe4>  // b.plast
    faa8:	str	wzr, [x0, #4]
    faac:	stp	x19, x24, [x0, #16]
    fab0:	str	x19, [x0, #72]
    fab4:	add	x22, x22, x26
    fab8:	bl	11320 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x418>
    fabc:	ldr	x0, [x22, #32]
    fac0:	cbz	x0, fae4 <GOMP_loop_ull_ordered_static_start@@GOMP_2.0+0xb4>
    fac4:	ldr	x2, [x22, #24]
    fac8:	add	x0, x0, #0x50
    facc:	ldxr	x1, [x0]
    fad0:	stlxr	w3, x2, [x0]
    fad4:	cbnz	w3, facc <GOMP_loop_ull_ordered_static_start@@GOMP_2.0+0x9c>
    fad8:	cmp	x1, #0x1
    fadc:	b.eq	fae4 <GOMP_loop_ull_ordered_static_start@@GOMP_2.0+0xb4>  // b.none
    fae0:	bl	1d8a0 <omp_get_num_procs@@OMP_1.0+0xcf0>
    fae4:	mov	x1, x21
    fae8:	mov	x0, x20
    faec:	bl	c1d8 <omp_is_initial_device@@OMP_4.0+0x4b0>
    faf0:	cmp	w0, #0x0
    faf4:	cset	w0, eq  // eq = none
    faf8:	ldp	x19, x20, [sp, #16]
    fafc:	ldp	x21, x22, [sp, #32]
    fb00:	ldp	x23, x24, [sp, #48]
    fb04:	ldp	x25, x26, [sp, #64]
    fb08:	ldp	x27, x28, [sp, #80]
    fb0c:	ldp	x29, x30, [sp], #96
    fb10:	ret
    fb14:	cmp	x19, x23
    fb18:	eor	w1, w27, w1
    fb1c:	cset	w2, cc  // cc = lo, ul, last
    fb20:	tst	w2, w1
    fb24:	b.ne	fb44 <GOMP_loop_ull_ordered_static_start@@GOMP_2.0+0x114>  // b.any
    fb28:	str	wzr, [x0, #4]
    fb2c:	stp	x23, x24, [x0, #16]
    fb30:	str	x19, [x0, #72]
    fb34:	cbnz	w27, fab4 <GOMP_loop_ull_ordered_static_start@@GOMP_2.0+0x84>
    fb38:	mov	w1, #0x2                   	// #2
    fb3c:	str	w1, [x0, #4]
    fb40:	b	fab4 <GOMP_loop_ull_ordered_static_start@@GOMP_2.0+0x84>
    fb44:	stp	x19, x24, [x0, #16]
    fb48:	str	x19, [x0, #72]
    fb4c:	b	fb38 <GOMP_loop_ull_ordered_static_start@@GOMP_2.0+0x108>

000000000000fb50 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0>:
    fb50:	stp	x29, x30, [sp, #-96]!
    fb54:	mov	x29, sp
    fb58:	stp	x19, x20, [sp, #16]
    fb5c:	mov	x20, x1
    fb60:	adrp	x19, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    fb64:	ldr	x19, [x19, #4016]
    fb68:	stp	x21, x22, [sp, #32]
    fb6c:	mov	x21, x2
    fb70:	mov	x22, x3
    fb74:	stp	x23, x24, [sp, #48]
    fb78:	mov	x23, x4
    fb7c:	mov	x24, x5
    fb80:	stp	x25, x26, [sp, #64]
    fb84:	mov	x26, x6
    fb88:	and	w25, w0, #0xff
    fb8c:	mov	x0, #0x1                   	// #1
    fb90:	str	x27, [sp, #80]
    fb94:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
    fb98:	mrs	x27, tpidr_el0
    fb9c:	tst	w0, #0xff
    fba0:	b.ne	fc20 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0xd0>  // b.any
    fba4:	add	x0, x27, x19
    fba8:	mov	w2, #0x1                   	// #1
    fbac:	ldr	x0, [x0, #24]
    fbb0:	add	x0, x0, #0x40
    fbb4:	ldaxr	w1, [x0]
    fbb8:	cbnz	w1, fbc4 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x74>
    fbbc:	stxr	w3, w2, [x0]
    fbc0:	cbnz	w3, fbb4 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x64>
    fbc4:	cmp	w1, #0x0
    fbc8:	b.ne	fdb0 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x260>  // b.any
    fbcc:	mov	x1, x26
    fbd0:	mov	x0, x24
    fbd4:	bl	c390 <omp_is_initial_device@@OMP_4.0+0x668>
    fbd8:	mov	w20, w0
    fbdc:	tst	w0, #0xff
    fbe0:	b.ne	fd08 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x1b8>  // b.any
    fbe4:	add	x19, x27, x19
    fbe8:	ldr	x1, [x19, #24]
    fbec:	add	x1, x1, #0x40
    fbf0:	ldxr	w0, [x1]
    fbf4:	stlxr	w2, wzr, [x1]
    fbf8:	cbnz	w2, fbf0 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0xa0>
    fbfc:	tbnz	w0, #31, fd30 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x1e0>
    fc00:	mov	w0, w20
    fc04:	ldp	x19, x20, [sp, #16]
    fc08:	ldp	x21, x22, [sp, #32]
    fc0c:	ldp	x23, x24, [sp, #48]
    fc10:	ldp	x25, x26, [sp, #64]
    fc14:	ldr	x27, [sp, #80]
    fc18:	ldp	x29, x30, [sp], #96
    fc1c:	ret
    fc20:	add	x2, x27, x19
    fc24:	mov	w3, #0x2                   	// #2
    fc28:	cmp	w25, #0x0
    fc2c:	mul	x1, x22, x23
    fc30:	ccmp	x20, x21, #0x0, ne  // ne = any
    fc34:	ldr	x0, [x2, #24]
    fc38:	ldr	x2, [x2, #16]
    fc3c:	str	w3, [x0]
    fc40:	str	x23, [x0, #8]
    fc44:	b.hi	fd10 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x1c0>  // b.pmore
    fc48:	cmp	x20, x21
    fc4c:	str	wzr, [x0, #4]
    fc50:	str	x1, [x0, #8]
    fc54:	eor	w3, w25, #0x1
    fc58:	cset	w4, cc  // cc = lo, ul, last
    fc5c:	tst	w4, w3
    fc60:	b.ne	fd58 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x208>  // b.any
    fc64:	stp	x21, x22, [x0, #16]
    fc68:	str	x20, [x0, #72]
    fc6c:	mov	x20, x21
    fc70:	cbz	x2, fd9c <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x24c>
    fc74:	ldr	w4, [x2]
    fc78:	mov	x3, x4
    fc7c:	cbz	w25, fd6c <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x21c>
    fc80:	orr	x3, x1, x3
    fc84:	mov	x2, #0x7fffffff            	// #2147483647
    fc88:	cmp	x3, x2
    fc8c:	b.hi	fca4 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x154>  // b.pmore
    fc90:	madd	x1, x4, x1, x1
    fc94:	mvn	x1, x1
    fc98:	cmp	x1, x20
    fc9c:	cset	w1, hi  // hi = pmore
    fca0:	str	w1, [x0, #4]
    fca4:	add	x0, x0, #0x40
    fca8:	mov	w2, #0x1                   	// #1
    fcac:	ldaxr	w1, [x0]
    fcb0:	cbnz	w1, fcbc <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x16c>
    fcb4:	stxr	w3, w2, [x0]
    fcb8:	cbnz	w3, fcac <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x15c>
    fcbc:	cmp	w1, #0x0
    fcc0:	b.ne	fdb8 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x268>  // b.any
    fcc4:	add	x1, x27, x19
    fcc8:	ldr	x0, [x1, #32]
    fccc:	cbz	x0, fbcc <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x7c>
    fcd0:	ldr	x2, [x1, #24]
    fcd4:	add	x0, x0, #0x50
    fcd8:	ldxr	x1, [x0]
    fcdc:	stlxr	w3, x2, [x0]
    fce0:	cbnz	w3, fcd8 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x188>
    fce4:	cmp	x1, #0x1
    fce8:	b.eq	fbcc <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x7c>  // b.none
    fcec:	bl	1d8a0 <omp_get_num_procs@@OMP_1.0+0xcf0>
    fcf0:	mov	x1, x26
    fcf4:	mov	x0, x24
    fcf8:	bl	c390 <omp_is_initial_device@@OMP_4.0+0x668>
    fcfc:	mov	w20, w0
    fd00:	tst	w0, #0xff
    fd04:	b.eq	fbe4 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x94>  // b.none
    fd08:	bl	110e0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1d8>
    fd0c:	b	fbe4 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x94>
    fd10:	str	wzr, [x0, #4]
    fd14:	stp	x1, x20, [x0, #8]
    fd18:	str	x22, [x0, #24]
    fd1c:	str	x20, [x0, #72]
    fd20:	cbnz	x2, fc74 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x124>
    fd24:	mov	x3, #0x1                   	// #1
    fd28:	mov	x4, x3
    fd2c:	b	fc80 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x130>
    fd30:	mov	x0, x1
    fd34:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
    fd38:	mov	w0, w20
    fd3c:	ldp	x19, x20, [sp, #16]
    fd40:	ldp	x21, x22, [sp, #32]
    fd44:	ldp	x23, x24, [sp, #48]
    fd48:	ldp	x25, x26, [sp, #64]
    fd4c:	ldr	x27, [sp, #80]
    fd50:	ldp	x29, x30, [sp], #96
    fd54:	ret
    fd58:	stp	x20, x22, [x0, #16]
    fd5c:	mov	x3, #0x1                   	// #1
    fd60:	mov	x4, x3
    fd64:	str	x20, [x0, #72]
    fd68:	cbnz	x2, fc74 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x124>
    fd6c:	neg	x2, x1
    fd70:	mov	x1, #0x7fffffff            	// #2147483647
    fd74:	orr	x3, x2, x3
    fd78:	cmp	x3, x1
    fd7c:	b.hi	fda8 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x258>  // b.pmore
    fd80:	madd	x1, x4, x2, x2
    fd84:	add	x1, x1, #0x1
    fd88:	cmp	x1, x20
    fd8c:	cset	w1, cc  // cc = lo, ul, last
    fd90:	orr	w1, w1, #0x2
    fd94:	str	w1, [x0, #4]
    fd98:	b	fca4 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x154>
    fd9c:	mov	x3, #0x1                   	// #1
    fda0:	mov	x4, x3
    fda4:	b	fc7c <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x12c>
    fda8:	ldr	w1, [x0, #4]
    fdac:	b	fd90 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x240>
    fdb0:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
    fdb4:	b	fbcc <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x7c>
    fdb8:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
    fdbc:	b	fcc4 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x174>

000000000000fdc0 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0>:
    fdc0:	stp	x29, x30, [sp, #-96]!
    fdc4:	mov	x29, sp
    fdc8:	stp	x19, x20, [sp, #16]
    fdcc:	mov	x20, x1
    fdd0:	mrs	x19, tpidr_el0
    fdd4:	stp	x21, x22, [sp, #32]
    fdd8:	mov	x22, x5
    fddc:	mov	x21, x6
    fde0:	stp	x23, x24, [sp, #48]
    fde4:	mov	x23, x2
    fde8:	mov	x24, x3
    fdec:	stp	x25, x26, [sp, #64]
    fdf0:	mov	x25, x4
    fdf4:	and	w26, w0, #0xff
    fdf8:	mov	x0, #0x1                   	// #1
    fdfc:	str	x27, [sp, #80]
    fe00:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
    fe04:	adrp	x27, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    fe08:	ldr	x27, [x27, #4016]
    fe0c:	tst	w0, #0xff
    fe10:	b.eq	feac <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0xec>  // b.none
    fe14:	add	x0, x19, x27
    fe18:	mov	w1, #0x3                   	// #3
    fe1c:	cmp	w26, #0x0
    fe20:	ccmp	x20, x23, #0x0, ne  // ne = any
    fe24:	ldr	x0, [x0, #24]
    fe28:	str	w1, [x0]
    fe2c:	str	x25, [x0, #8]
    fe30:	b.ls	ff28 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x168>  // b.plast
    fe34:	str	wzr, [x0, #4]
    fe38:	stp	x20, x24, [x0, #16]
    fe3c:	str	x20, [x0, #72]
    fe40:	add	x0, x0, #0x40
    fe44:	mov	w2, #0x1                   	// #1
    fe48:	ldaxr	w1, [x0]
    fe4c:	cbnz	w1, fe58 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x98>
    fe50:	stxr	w3, w2, [x0]
    fe54:	cbnz	w3, fe48 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x88>
    fe58:	cmp	w1, #0x0
    fe5c:	b.ne	ff94 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x1d4>  // b.any
    fe60:	add	x1, x19, x27
    fe64:	ldr	x0, [x1, #32]
    fe68:	cbz	x0, fed4 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x114>
    fe6c:	ldr	x2, [x1, #24]
    fe70:	add	x0, x0, #0x50
    fe74:	ldxr	x1, [x0]
    fe78:	stlxr	w3, x2, [x0]
    fe7c:	cbnz	w3, fe74 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0xb4>
    fe80:	cmp	x1, #0x1
    fe84:	b.eq	fed4 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x114>  // b.none
    fe88:	bl	1d8a0 <omp_get_num_procs@@OMP_1.0+0xcf0>
    fe8c:	mov	x1, x21
    fe90:	mov	x0, x22
    fe94:	bl	c510 <omp_is_initial_device@@OMP_4.0+0x7e8>
    fe98:	mov	w20, w0
    fe9c:	tst	w0, #0xff
    fea0:	b.eq	feec <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x12c>  // b.none
    fea4:	bl	110e0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1d8>
    fea8:	b	feec <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x12c>
    feac:	add	x0, x19, x27
    feb0:	mov	w2, #0x1                   	// #1
    feb4:	ldr	x0, [x0, #24]
    feb8:	add	x0, x0, #0x40
    febc:	ldaxr	w1, [x0]
    fec0:	cbnz	w1, fecc <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x10c>
    fec4:	stxr	w3, w2, [x0]
    fec8:	cbnz	w3, febc <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0xfc>
    fecc:	cmp	w1, #0x0
    fed0:	b.ne	ff8c <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x1cc>  // b.any
    fed4:	mov	x1, x21
    fed8:	mov	x0, x22
    fedc:	bl	c510 <omp_is_initial_device@@OMP_4.0+0x7e8>
    fee0:	mov	w20, w0
    fee4:	tst	w0, #0xff
    fee8:	b.ne	fea4 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0xe4>  // b.any
    feec:	add	x19, x19, x27
    fef0:	ldr	x1, [x19, #24]
    fef4:	add	x1, x1, #0x40
    fef8:	ldxr	w0, [x1]
    fefc:	stlxr	w2, wzr, [x1]
    ff00:	cbnz	w2, fef8 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x138>
    ff04:	tbnz	w0, #31, ff64 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x1a4>
    ff08:	mov	w0, w20
    ff0c:	ldp	x19, x20, [sp, #16]
    ff10:	ldp	x21, x22, [sp, #32]
    ff14:	ldp	x23, x24, [sp, #48]
    ff18:	ldp	x25, x26, [sp, #64]
    ff1c:	ldr	x27, [sp, #80]
    ff20:	ldp	x29, x30, [sp], #96
    ff24:	ret
    ff28:	cmp	x20, x23
    ff2c:	eor	w1, w26, #0x1
    ff30:	cset	w2, cc  // cc = lo, ul, last
    ff34:	tst	w2, w1
    ff38:	b.ne	ff58 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x198>  // b.any
    ff3c:	str	wzr, [x0, #4]
    ff40:	stp	x23, x24, [x0, #16]
    ff44:	str	x20, [x0, #72]
    ff48:	cbnz	w26, fe40 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x80>
    ff4c:	mov	w1, #0x2                   	// #2
    ff50:	str	w1, [x0, #4]
    ff54:	b	fe40 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x80>
    ff58:	stp	x20, x24, [x0, #16]
    ff5c:	str	x20, [x0, #72]
    ff60:	b	ff4c <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x18c>
    ff64:	mov	x0, x1
    ff68:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
    ff6c:	mov	w0, w20
    ff70:	ldp	x19, x20, [sp, #16]
    ff74:	ldp	x21, x22, [sp, #32]
    ff78:	ldp	x23, x24, [sp, #48]
    ff7c:	ldp	x25, x26, [sp, #64]
    ff80:	ldr	x27, [sp, #80]
    ff84:	ldp	x29, x30, [sp], #96
    ff88:	ret
    ff8c:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
    ff90:	b	fed4 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x114>
    ff94:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
    ff98:	b	fe60 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0xa0>
    ff9c:	nop

000000000000ffa0 <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0>:
    ffa0:	adrp	x6, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
    ffa4:	ldr	x6, [x6, #4016]
    ffa8:	mrs	x8, tpidr_el0
    ffac:	adrp	x7, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
    ffb0:	add	x7, x7, #0x2b0
    ffb4:	add	x8, x8, x6
    ffb8:	mov	x9, x4
    ffbc:	mov	x6, x5
    ffc0:	and	w0, w0, #0xff
    ffc4:	ldr	x8, [x8, #80]
    ffc8:	cmp	x8, #0x0
    ffcc:	add	x8, x8, #0x90
    ffd0:	csel	x7, x7, x8, eq  // eq = none
    ffd4:	ldr	w4, [x7, #8]
    ffd8:	and	w8, w4, #0x7fffffff
    ffdc:	cmp	w8, #0x3
    ffe0:	b.eq	10028 <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0+0x88>  // b.none
    ffe4:	tst	w4, #0x7ffffffc
    ffe8:	b.ne	10000 <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0+0x60>  // b.any
    ffec:	cmp	w8, #0x1
    fff0:	b.ne	10014 <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0+0x74>  // b.any
    fff4:	ldrsw	x4, [x7, #12]
    fff8:	mov	x5, x9
    fffc:	b	fa30 <GOMP_loop_ull_ordered_static_start@@GOMP_2.0>
   10000:	cmp	w8, #0x4
   10004:	b.ne	10034 <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0+0x94>  // b.any
   10008:	mov	x5, x9
   1000c:	mov	x4, #0x0                   	// #0
   10010:	b	fa30 <GOMP_loop_ull_ordered_static_start@@GOMP_2.0>
   10014:	cmp	w8, #0x2
   10018:	b.ne	10034 <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0+0x94>  // b.any
   1001c:	ldrsw	x4, [x7, #12]
   10020:	mov	x5, x9
   10024:	b	fb50 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0>
   10028:	ldrsw	x4, [x7, #12]
   1002c:	mov	x5, x9
   10030:	b	fdc0 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0>
   10034:	stp	x29, x30, [sp, #-16]!
   10038:	mov	x29, sp
   1003c:	bl	8820 <abort@plt>

0000000000010040 <GOMP_loop_ull_ordered_start@@GOMP_5.0>:
   10040:	stp	x29, x30, [sp, #-112]!
   10044:	mov	x29, sp
   10048:	stp	x21, x22, [sp, #32]
   1004c:	adrp	x21, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   10050:	ldr	x21, [x21, #4016]
   10054:	stp	x19, x20, [sp, #16]
   10058:	mrs	x20, tpidr_el0
   1005c:	add	x8, x20, x21
   10060:	stp	x25, x26, [sp, #64]
   10064:	mov	x19, x4
   10068:	mov	x25, x7
   1006c:	ldp	x26, x22, [sp, #112]
   10070:	stp	x23, x24, [sp, #48]
   10074:	mov	x23, x1
   10078:	stp	x27, x28, [sp, #80]
   1007c:	mov	x24, x6
   10080:	mov	x27, x2
   10084:	str	xzr, [x8, #72]
   10088:	and	w28, w0, #0xff
   1008c:	stp	x5, x3, [sp, #96]
   10090:	cbz	x26, 10098 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x58>
   10094:	bl	1a1e0 <GOMP_task_reduction_remap@@GOMP_5.0+0x570>
   10098:	mov	x0, #0x1                   	// #1
   1009c:	cbz	x22, 100a8 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x68>
   100a0:	ldr	x0, [x22]
   100a4:	add	x0, x0, #0x1
   100a8:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
   100ac:	tst	w0, #0xff
   100b0:	b.ne	10218 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x1d8>  // b.any
   100b4:	add	x19, x20, x21
   100b8:	ldr	x1, [x19, #24]
   100bc:	cbz	x26, 100d0 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x90>
   100c0:	ldr	x1, [x1, #88]
   100c4:	mov	x0, x26
   100c8:	bl	19f80 <GOMP_task_reduction_remap@@GOMP_5.0+0x310>
   100cc:	ldr	x1, [x19, #24]
   100d0:	ldr	w19, [x1]
   100d4:	cmp	x19, #0x1
   100d8:	b.eq	10198 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x158>  // b.none
   100dc:	add	x0, x1, #0x40
   100e0:	mov	w2, #0x1                   	// #1
   100e4:	ldaxr	w1, [x0]
   100e8:	cbnz	w1, 100f4 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0xb4>
   100ec:	stxr	w3, w2, [x0]
   100f0:	cbnz	w3, 100e4 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0xa4>
   100f4:	cmp	w1, #0x0
   100f8:	b.ne	1042c <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x3ec>  // b.any
   100fc:	cbz	x22, 10134 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0xf4>
   10100:	add	x0, x20, x21
   10104:	ldr	x1, [x0, #24]
   10108:	add	x3, x20, x21
   1010c:	ldr	x0, [x1, #32]
   10110:	mov	x2, #0x4                   	// #4
   10114:	ldr	x1, [x3, #16]
   10118:	cbz	x1, 10124 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0xe4>
   1011c:	ldr	w2, [x1]
   10120:	lsl	x2, x2, #2
   10124:	add	x0, x0, x2
   10128:	add	x0, x0, #0x7
   1012c:	and	x0, x0, #0xfffffffffffffff8
   10130:	str	x0, [x22]
   10134:	cmp	x19, #0x2
   10138:	b.eq	101fc <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x1bc>  // b.none
   1013c:	b.le	101dc <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x19c>
   10140:	cmp	x19, #0x3
   10144:	b.ne	101d0 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x190>  // b.any
   10148:	mov	x1, x25
   1014c:	mov	x0, x24
   10150:	bl	c510 <omp_is_initial_device@@OMP_4.0+0x7e8>
   10154:	and	w19, w0, #0xff
   10158:	cbnz	w19, 10210 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x1d0>
   1015c:	add	x20, x20, x21
   10160:	ldr	x0, [x20, #24]
   10164:	add	x0, x0, #0x40
   10168:	ldxr	w1, [x0]
   1016c:	stlxr	w2, wzr, [x0]
   10170:	cbnz	w2, 10168 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x128>
   10174:	tbnz	w1, #31, 10424 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x3e4>
   10178:	mov	w0, w19
   1017c:	ldp	x19, x20, [sp, #16]
   10180:	ldp	x21, x22, [sp, #32]
   10184:	ldp	x23, x24, [sp, #48]
   10188:	ldp	x25, x26, [sp, #64]
   1018c:	ldp	x27, x28, [sp, #80]
   10190:	ldp	x29, x30, [sp], #112
   10194:	ret
   10198:	cbnz	x22, 10108 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0xc8>
   1019c:	mov	x1, x25
   101a0:	mov	x0, x24
   101a4:	bl	c1d8 <omp_is_initial_device@@OMP_4.0+0x4b0>
   101a8:	cmp	w0, #0x0
   101ac:	cset	w19, eq  // eq = none
   101b0:	mov	w0, w19
   101b4:	ldp	x19, x20, [sp, #16]
   101b8:	ldp	x21, x22, [sp, #32]
   101bc:	ldp	x23, x24, [sp, #48]
   101c0:	ldp	x25, x26, [sp, #64]
   101c4:	ldp	x27, x28, [sp, #80]
   101c8:	ldp	x29, x30, [sp], #112
   101cc:	ret
   101d0:	cmp	x19, #0x4
   101d4:	b.eq	1019c <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x15c>  // b.none
   101d8:	bl	8820 <abort@plt>
   101dc:	cmp	x19, #0x1
   101e0:	b.ne	101d8 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x198>  // b.any
   101e4:	mov	x1, x25
   101e8:	mov	x0, x24
   101ec:	bl	c1d8 <omp_is_initial_device@@OMP_4.0+0x4b0>
   101f0:	cmp	w0, #0x0
   101f4:	cset	w19, eq  // eq = none
   101f8:	b	101b0 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x170>
   101fc:	mov	x1, x25
   10200:	mov	x0, x24
   10204:	bl	c390 <omp_is_initial_device@@OMP_4.0+0x668>
   10208:	and	w19, w0, #0xff
   1020c:	cbz	w19, 1015c <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x11c>
   10210:	bl	110e0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1d8>
   10214:	b	1015c <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x11c>
   10218:	tst	x19, #0x7ffffffc
   1021c:	and	x19, x19, #0x7fffffff
   10220:	b.ne	103d4 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x394>  // b.any
   10224:	cbnz	x19, 103fc <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x3bc>
   10228:	add	x2, x20, x21
   1022c:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   10230:	add	x0, x0, #0x2b0
   10234:	ldr	x1, [x2, #80]
   10238:	cmp	x1, #0x0
   1023c:	add	x1, x1, #0x90
   10240:	csel	x0, x0, x1, eq  // eq = none
   10244:	ldr	w1, [x0, #8]
   10248:	tst	w1, #0x7ffffffc
   1024c:	and	w1, w1, #0x7fffffff
   10250:	b.ne	10368 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x328>  // b.any
   10254:	cbz	w1, 101d8 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x198>
   10258:	ldrsw	x0, [x0, #12]
   1025c:	mov	w19, w1
   10260:	str	x0, [sp, #96]
   10264:	add	x0, x20, x21
   10268:	cmp	w28, #0x0
   1026c:	ccmp	x23, x27, #0x0, ne  // ne = any
   10270:	ldr	x0, [x0, #24]
   10274:	str	w1, [x0]
   10278:	ldr	x1, [sp, #96]
   1027c:	str	x1, [x0, #8]
   10280:	b.ls	10478 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x438>  // b.plast
   10284:	ldr	x1, [sp, #104]
   10288:	str	wzr, [x0, #4]
   1028c:	stp	x23, x1, [x0, #16]
   10290:	cmp	x19, #0x2
   10294:	str	x23, [x0, #72]
   10298:	b.ne	103cc <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x38c>  // b.any
   1029c:	ldp	x3, x2, [sp, #96]
   102a0:	add	x1, x20, x21
   102a4:	ldr	x1, [x1, #16]
   102a8:	mul	x3, x2, x3
   102ac:	str	x3, [x0, #8]
   102b0:	cbz	x1, 10434 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x3f4>
   102b4:	ldr	w4, [x1]
   102b8:	mov	x2, x4
   102bc:	cbz	w28, 10440 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x400>
   102c0:	orr	x2, x3, x2
   102c4:	mov	x1, #0x7fffffff            	// #2147483647
   102c8:	cmp	x2, x1
   102cc:	b.hi	102e4 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x2a4>  // b.pmore
   102d0:	madd	x3, x4, x3, x3
   102d4:	mvn	x3, x3
   102d8:	cmp	x23, x3
   102dc:	cset	w1, cc  // cc = lo, ul, last
   102e0:	str	w1, [x0, #4]
   102e4:	mov	x19, #0x2                   	// #2
   102e8:	cbz	x26, 10318 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x2d8>
   102ec:	mov	x0, x26
   102f0:	bl	17c48 <GOMP_taskgroup_reduction_register@@GOMP_5.0>
   102f4:	add	x0, x20, x21
   102f8:	mov	w2, #0x1                   	// #1
   102fc:	ldr	x1, [x0, #80]
   10300:	ldr	x0, [x0, #24]
   10304:	ldr	x1, [x1, #40]
   10308:	strb	w2, [x1, #50]
   1030c:	str	x26, [x0, #88]
   10310:	cmp	x19, #0x1
   10314:	b.eq	1041c <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x3dc>  // b.none
   10318:	add	x0, x0, #0x40
   1031c:	mov	w2, #0x1                   	// #1
   10320:	ldaxr	w1, [x0]
   10324:	cbnz	w1, 10330 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x2f0>
   10328:	stxr	w3, w2, [x0]
   1032c:	cbnz	w3, 10320 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x2e0>
   10330:	cmp	w1, #0x0
   10334:	b.ne	104c4 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x484>  // b.any
   10338:	add	x1, x20, x21
   1033c:	ldr	x0, [x1, #32]
   10340:	cbz	x0, 100fc <GOMP_loop_ull_ordered_start@@GOMP_5.0+0xbc>
   10344:	ldr	x2, [x1, #24]
   10348:	add	x0, x0, #0x50
   1034c:	ldxr	x1, [x0]
   10350:	stlxr	w3, x2, [x0]
   10354:	cbnz	w3, 1034c <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x30c>
   10358:	cmp	x1, #0x1
   1035c:	b.eq	100fc <GOMP_loop_ull_ordered_start@@GOMP_5.0+0xbc>  // b.none
   10360:	bl	1d8a0 <omp_get_num_procs@@OMP_1.0+0xcf0>
   10364:	b	100fc <GOMP_loop_ull_ordered_start@@GOMP_5.0+0xbc>
   10368:	cmp	w1, #0x4
   1036c:	b.ne	101d8 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x198>  // b.any
   10370:	ldr	x0, [x2, #24]
   10374:	mov	w1, #0x1                   	// #1
   10378:	cmp	w28, #0x0
   1037c:	ccmp	x23, x27, #0x0, ne  // ne = any
   10380:	str	w1, [x0]
   10384:	str	xzr, [x0, #8]
   10388:	b.hi	103e0 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x3a0>  // b.pmore
   1038c:	cmp	x23, x27
   10390:	eor	w1, w28, #0x1
   10394:	cset	w2, cc  // cc = lo, ul, last
   10398:	mov	x19, #0x1                   	// #1
   1039c:	tst	w2, w1
   103a0:	b.ne	10404 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x3c4>  // b.any
   103a4:	str	xzr, [sp, #96]
   103a8:	ldr	x1, [sp, #104]
   103ac:	str	wzr, [x0, #4]
   103b0:	stp	x27, x1, [x0, #16]
   103b4:	cmp	x19, #0x2
   103b8:	str	x23, [x0, #72]
   103bc:	b.eq	104ac <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x46c>  // b.none
   103c0:	cbnz	w28, 103cc <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x38c>
   103c4:	mov	w1, #0x2                   	// #2
   103c8:	str	w1, [x0, #4]
   103cc:	cbnz	x26, 102ec <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x2ac>
   103d0:	b	10310 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x2d0>
   103d4:	cmp	x19, #0x4
   103d8:	b.eq	10228 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x1e8>  // b.none
   103dc:	bl	8820 <abort@plt>
   103e0:	ldr	x1, [sp, #104]
   103e4:	str	wzr, [x0, #4]
   103e8:	stp	x23, x1, [x0, #16]
   103ec:	mov	x19, #0x1                   	// #1
   103f0:	str	x23, [x0, #72]
   103f4:	cbnz	x26, 102ec <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x2ac>
   103f8:	b	10310 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x2d0>
   103fc:	mov	w1, w19
   10400:	b	10264 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x224>
   10404:	ldr	x1, [sp, #104]
   10408:	str	wzr, [x0, #4]
   1040c:	stp	x23, x1, [x0, #16]
   10410:	mov	w1, #0x2                   	// #2
   10414:	str	x23, [x0, #72]
   10418:	b	103c8 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x388>
   1041c:	bl	11320 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x418>
   10420:	b	10338 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x2f8>
   10424:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   10428:	b	10178 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x138>
   1042c:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   10430:	b	100fc <GOMP_loop_ull_ordered_start@@GOMP_5.0+0xbc>
   10434:	mov	x2, #0x1                   	// #1
   10438:	mov	x4, x2
   1043c:	b	102bc <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x27c>
   10440:	neg	x1, x3
   10444:	mov	x3, #0x7fffffff            	// #2147483647
   10448:	orr	x2, x1, x2
   1044c:	cmp	x2, x3
   10450:	b.hi	104b4 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x474>  // b.pmore
   10454:	madd	x1, x4, x1, x1
   10458:	mov	x19, #0x2                   	// #2
   1045c:	add	x1, x1, #0x1
   10460:	cmp	x23, x1
   10464:	cset	w1, hi  // hi = pmore
   10468:	str	w1, [x0, #4]
   1046c:	orr	w1, w1, #0x2
   10470:	str	w1, [x0, #4]
   10474:	b	103cc <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x38c>
   10478:	cmp	x23, x27
   1047c:	eor	w1, w28, #0x1
   10480:	cset	w2, cc  // cc = lo, ul, last
   10484:	tst	w2, w1
   10488:	b.eq	103a8 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x368>  // b.none
   1048c:	ldr	x1, [sp, #104]
   10490:	str	wzr, [x0, #4]
   10494:	stp	x23, x1, [x0, #16]
   10498:	cmp	x19, #0x2
   1049c:	str	x23, [x0, #72]
   104a0:	b.eq	1029c <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x25c>  // b.none
   104a4:	mov	w1, #0x2                   	// #2
   104a8:	b	103c8 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x388>
   104ac:	mov	x23, x27
   104b0:	b	1029c <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x25c>
   104b4:	mov	x19, #0x2                   	// #2
   104b8:	mov	w1, w19
   104bc:	str	w1, [x0, #4]
   104c0:	b	103cc <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x38c>
   104c4:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   104c8:	b	10338 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x2f8>
   104cc:	nop

00000000000104d0 <GOMP_loop_ull_doacross_static_start@@GOMP_4.5>:
   104d0:	stp	x29, x30, [sp, #-64]!
   104d4:	mrs	x5, tpidr_el0
   104d8:	mov	x29, sp
   104dc:	stp	x19, x20, [sp, #16]
   104e0:	mov	x20, x3
   104e4:	adrp	x19, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   104e8:	ldr	x19, [x19, #4016]
   104ec:	stp	x21, x22, [sp, #32]
   104f0:	mov	x22, x1
   104f4:	add	x19, x5, x19
   104f8:	stp	x23, x24, [sp, #48]
   104fc:	mov	x21, x4
   10500:	mov	w23, w0
   10504:	mov	x24, x2
   10508:	mov	x0, #0x0                   	// #0
   1050c:	str	xzr, [x19, #72]
   10510:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
   10514:	tst	w0, #0xff
   10518:	b.ne	10544 <GOMP_loop_ull_doacross_static_start@@GOMP_4.5+0x74>  // b.any
   1051c:	mov	x1, x21
   10520:	mov	x0, x20
   10524:	bl	c1d8 <omp_is_initial_device@@OMP_4.0+0x4b0>
   10528:	cmp	w0, #0x0
   1052c:	cset	w0, eq  // eq = none
   10530:	ldp	x19, x20, [sp, #16]
   10534:	ldp	x21, x22, [sp, #32]
   10538:	ldp	x23, x24, [sp, #48]
   1053c:	ldp	x29, x30, [sp], #64
   10540:	ret
   10544:	ldr	x4, [x19, #24]
   10548:	mov	x5, #0x1                   	// #1
   1054c:	ldr	x3, [x22]
   10550:	mov	w0, w23
   10554:	stp	x5, x24, [x4]
   10558:	mov	x2, x24
   1055c:	mov	x1, x22
   10560:	stp	x3, x5, [x4, #16]
   10564:	mov	x3, #0x0                   	// #0
   10568:	str	xzr, [x4, #72]
   1056c:	bl	11bf0 <GOMP_doacross_wait@@GOMP_4.5+0x260>
   10570:	ldr	x0, [x19, #32]
   10574:	cbz	x0, 1051c <GOMP_loop_ull_doacross_static_start@@GOMP_4.5+0x4c>
   10578:	ldr	x2, [x19, #24]
   1057c:	add	x0, x0, #0x50
   10580:	ldxr	x1, [x0]
   10584:	stlxr	w3, x2, [x0]
   10588:	cbnz	w3, 10580 <GOMP_loop_ull_doacross_static_start@@GOMP_4.5+0xb0>
   1058c:	cmp	x1, #0x1
   10590:	b.eq	1051c <GOMP_loop_ull_doacross_static_start@@GOMP_4.5+0x4c>  // b.none
   10594:	bl	1d8a0 <omp_get_num_procs@@OMP_1.0+0xcf0>
   10598:	b	1051c <GOMP_loop_ull_doacross_static_start@@GOMP_4.5+0x4c>
   1059c:	nop

00000000000105a0 <GOMP_loop_ull_doacross_dynamic_start@@GOMP_4.5>:
   105a0:	stp	x29, x30, [sp, #-80]!
   105a4:	mov	x29, sp
   105a8:	stp	x19, x20, [sp, #16]
   105ac:	mov	x19, x2
   105b0:	mov	x20, x3
   105b4:	stp	x21, x22, [sp, #32]
   105b8:	mov	x22, x1
   105bc:	mov	x21, x4
   105c0:	stp	x23, x24, [sp, #48]
   105c4:	mov	w23, w0
   105c8:	mov	x0, #0x0                   	// #0
   105cc:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
   105d0:	tst	w0, #0xff
   105d4:	b.ne	105f4 <GOMP_loop_ull_doacross_dynamic_start@@GOMP_4.5+0x54>  // b.any
   105d8:	mov	x1, x21
   105dc:	mov	x0, x20
   105e0:	ldp	x19, x20, [sp, #16]
   105e4:	ldp	x21, x22, [sp, #32]
   105e8:	ldp	x23, x24, [sp, #48]
   105ec:	ldp	x29, x30, [sp], #80
   105f0:	b	c3f8 <omp_is_initial_device@@OMP_4.0+0x6d0>
   105f4:	ldr	x3, [x22]
   105f8:	str	x25, [sp, #64]
   105fc:	adrp	x25, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   10600:	ldr	x25, [x25, #4016]
   10604:	mrs	x24, tpidr_el0
   10608:	mov	x4, #0x2                   	// #2
   1060c:	mov	x1, #0x1                   	// #1
   10610:	add	x2, x24, x25
   10614:	ldr	x0, [x2, #24]
   10618:	stp	x4, x19, [x0]
   1061c:	ldr	x2, [x2, #16]
   10620:	str	x3, [x0, #16]
   10624:	str	x1, [x0, #24]
   10628:	str	xzr, [x0, #72]
   1062c:	cbz	x2, 106dc <GOMP_loop_ull_doacross_dynamic_start@@GOMP_4.5+0x13c>
   10630:	ldr	w2, [x2]
   10634:	mov	x1, x2
   10638:	orr	x1, x19, x1
   1063c:	mov	x4, #0x7fffffff            	// #2147483647
   10640:	cmp	x1, x4
   10644:	b.hi	1065c <GOMP_loop_ull_doacross_dynamic_start@@GOMP_4.5+0xbc>  // b.pmore
   10648:	madd	x2, x2, x19, x19
   1064c:	mvn	x2, x2
   10650:	cmp	x3, x2
   10654:	cset	w1, cc  // cc = lo, ul, last
   10658:	str	w1, [x0, #4]
   1065c:	add	x24, x24, x25
   10660:	mov	w0, w23
   10664:	mov	x2, x19
   10668:	mov	x1, x22
   1066c:	mov	x3, #0x0                   	// #0
   10670:	bl	11bf0 <GOMP_doacross_wait@@GOMP_4.5+0x260>
   10674:	ldr	x0, [x24, #32]
   10678:	cbz	x0, 106bc <GOMP_loop_ull_doacross_dynamic_start@@GOMP_4.5+0x11c>
   1067c:	ldr	x2, [x24, #24]
   10680:	add	x0, x0, #0x50
   10684:	ldxr	x1, [x0]
   10688:	stlxr	w3, x2, [x0]
   1068c:	cbnz	w3, 10684 <GOMP_loop_ull_doacross_dynamic_start@@GOMP_4.5+0xe4>
   10690:	cmp	x1, #0x1
   10694:	b.eq	106bc <GOMP_loop_ull_doacross_dynamic_start@@GOMP_4.5+0x11c>  // b.none
   10698:	bl	1d8a0 <omp_get_num_procs@@OMP_1.0+0xcf0>
   1069c:	mov	x1, x21
   106a0:	mov	x0, x20
   106a4:	ldp	x19, x20, [sp, #16]
   106a8:	ldp	x21, x22, [sp, #32]
   106ac:	ldp	x23, x24, [sp, #48]
   106b0:	ldr	x25, [sp, #64]
   106b4:	ldp	x29, x30, [sp], #80
   106b8:	b	c3f8 <omp_is_initial_device@@OMP_4.0+0x6d0>
   106bc:	mov	x1, x21
   106c0:	mov	x0, x20
   106c4:	ldp	x19, x20, [sp, #16]
   106c8:	ldp	x21, x22, [sp, #32]
   106cc:	ldp	x23, x24, [sp, #48]
   106d0:	ldr	x25, [sp, #64]
   106d4:	ldp	x29, x30, [sp], #80
   106d8:	b	c3f8 <omp_is_initial_device@@OMP_4.0+0x6d0>
   106dc:	mov	x2, x1
   106e0:	b	10638 <GOMP_loop_ull_doacross_dynamic_start@@GOMP_4.5+0x98>
   106e4:	nop

00000000000106e8 <GOMP_loop_ull_doacross_guided_start@@GOMP_4.5>:
   106e8:	stp	x29, x30, [sp, #-64]!
   106ec:	mov	x29, sp
   106f0:	stp	x19, x20, [sp, #16]
   106f4:	mov	x19, x3
   106f8:	mov	x20, x4
   106fc:	stp	x21, x22, [sp, #32]
   10700:	mov	x22, x2
   10704:	stp	x23, x24, [sp, #48]
   10708:	mov	w23, w0
   1070c:	mov	x24, x1
   10710:	mov	x0, #0x0                   	// #0
   10714:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
   10718:	tst	w0, #0xff
   1071c:	b.ne	1073c <GOMP_loop_ull_doacross_guided_start@@GOMP_4.5+0x54>  // b.any
   10720:	mov	x1, x20
   10724:	mov	x0, x19
   10728:	ldp	x19, x20, [sp, #16]
   1072c:	ldp	x21, x22, [sp, #32]
   10730:	ldp	x23, x24, [sp, #48]
   10734:	ldp	x29, x30, [sp], #64
   10738:	b	c5a8 <omp_is_initial_device@@OMP_4.0+0x880>
   1073c:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   10740:	ldr	x0, [x0, #4016]
   10744:	mrs	x21, tpidr_el0
   10748:	ldr	x6, [x24]
   1074c:	add	x21, x21, x0
   10750:	mov	x5, #0x1                   	// #1
   10754:	mov	x7, #0x3                   	// #3
   10758:	mov	w0, w23
   1075c:	mov	x2, x22
   10760:	ldr	x4, [x21, #24]
   10764:	mov	x1, x24
   10768:	mov	x3, #0x0                   	// #0
   1076c:	stp	x7, x22, [x4]
   10770:	stp	x6, x5, [x4, #16]
   10774:	str	xzr, [x4, #72]
   10778:	bl	11bf0 <GOMP_doacross_wait@@GOMP_4.5+0x260>
   1077c:	ldr	x0, [x21, #32]
   10780:	cbz	x0, 10720 <GOMP_loop_ull_doacross_guided_start@@GOMP_4.5+0x38>
   10784:	ldr	x2, [x21, #24]
   10788:	add	x0, x0, #0x50
   1078c:	ldxr	x1, [x0]
   10790:	stlxr	w3, x2, [x0]
   10794:	cbnz	w3, 1078c <GOMP_loop_ull_doacross_guided_start@@GOMP_4.5+0xa4>
   10798:	cmp	x1, #0x1
   1079c:	b.eq	10720 <GOMP_loop_ull_doacross_guided_start@@GOMP_4.5+0x38>  // b.none
   107a0:	bl	1d8a0 <omp_get_num_procs@@OMP_1.0+0xcf0>
   107a4:	mov	x1, x20
   107a8:	mov	x0, x19
   107ac:	ldp	x19, x20, [sp, #16]
   107b0:	ldp	x21, x22, [sp, #32]
   107b4:	ldp	x23, x24, [sp, #48]
   107b8:	ldp	x29, x30, [sp], #64
   107bc:	b	c5a8 <omp_is_initial_device@@OMP_4.0+0x880>

00000000000107c0 <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5>:
   107c0:	stp	x29, x30, [sp, #-64]!
   107c4:	adrp	x5, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   107c8:	adrp	x4, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   107cc:	ldr	x4, [x4, #4016]
   107d0:	mov	x29, sp
   107d4:	stp	x19, x20, [sp, #16]
   107d8:	mrs	x19, tpidr_el0
   107dc:	add	x19, x19, x4
   107e0:	add	x5, x5, #0x2b0
   107e4:	mov	x20, x2
   107e8:	stp	x21, x22, [sp, #32]
   107ec:	mov	x21, x3
   107f0:	ldr	x6, [x19, #80]
   107f4:	cmp	x6, #0x0
   107f8:	add	x6, x6, #0x90
   107fc:	csel	x5, x5, x6, eq  // eq = none
   10800:	ldr	w2, [x5, #8]
   10804:	and	w6, w2, #0x7fffffff
   10808:	cmp	w6, #0x3
   1080c:	b.eq	10884 <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0xc4>  // b.none
   10810:	tst	w2, #0x7ffffffc
   10814:	b.ne	1083c <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0x7c>  // b.any
   10818:	cmp	w6, #0x1
   1081c:	b.ne	10860 <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0xa0>  // b.any
   10820:	mov	x4, x3
   10824:	mov	x3, x20
   10828:	ldp	x19, x20, [sp, #16]
   1082c:	ldp	x21, x22, [sp, #32]
   10830:	ldp	x29, x30, [sp], #64
   10834:	ldrsw	x2, [x5, #12]
   10838:	b	104d0 <GOMP_loop_ull_doacross_static_start@@GOMP_4.5>
   1083c:	cmp	w6, #0x4
   10840:	b.ne	1091c <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0x15c>  // b.any
   10844:	mov	x4, x3
   10848:	mov	x3, x20
   1084c:	ldp	x19, x20, [sp, #16]
   10850:	mov	x2, #0x0                   	// #0
   10854:	ldp	x21, x22, [sp, #32]
   10858:	ldp	x29, x30, [sp], #64
   1085c:	b	104d0 <GOMP_loop_ull_doacross_static_start@@GOMP_4.5>
   10860:	cmp	w6, #0x2
   10864:	b.ne	1091c <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0x15c>  // b.any
   10868:	mov	x4, x3
   1086c:	mov	x3, x20
   10870:	ldp	x19, x20, [sp, #16]
   10874:	ldp	x21, x22, [sp, #32]
   10878:	ldp	x29, x30, [sp], #64
   1087c:	ldrsw	x2, [x5, #12]
   10880:	b	105a0 <GOMP_loop_ull_doacross_dynamic_start@@GOMP_4.5>
   10884:	mov	x22, x1
   10888:	stp	x23, x24, [sp, #48]
   1088c:	ldr	w24, [x5, #12]
   10890:	mov	w23, w0
   10894:	mov	x0, #0x0                   	// #0
   10898:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
   1089c:	tst	w0, #0xff
   108a0:	b.ne	108c0 <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0x100>  // b.any
   108a4:	mov	x1, x21
   108a8:	mov	x0, x20
   108ac:	ldp	x19, x20, [sp, #16]
   108b0:	ldp	x21, x22, [sp, #32]
   108b4:	ldp	x23, x24, [sp, #48]
   108b8:	ldp	x29, x30, [sp], #64
   108bc:	b	c5a8 <omp_is_initial_device@@OMP_4.0+0x880>
   108c0:	ldr	x3, [x19, #24]
   108c4:	sxtw	x2, w24
   108c8:	ldr	x4, [x22]
   108cc:	mov	x1, #0x1                   	// #1
   108d0:	mov	x0, #0x3                   	// #3
   108d4:	stp	x0, x2, [x3]
   108d8:	mov	w0, w23
   108dc:	stp	x4, x1, [x3, #16]
   108e0:	mov	x1, x22
   108e4:	str	xzr, [x3, #72]
   108e8:	mov	x3, #0x0                   	// #0
   108ec:	bl	11bf0 <GOMP_doacross_wait@@GOMP_4.5+0x260>
   108f0:	ldr	x0, [x19, #32]
   108f4:	cbz	x0, 108a4 <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0xe4>
   108f8:	ldr	x2, [x19, #24]
   108fc:	add	x0, x0, #0x50
   10900:	ldxr	x1, [x0]
   10904:	stlxr	w3, x2, [x0]
   10908:	cbnz	w3, 10900 <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0x140>
   1090c:	cmp	x1, #0x1
   10910:	b.eq	108a4 <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0xe4>  // b.none
   10914:	bl	1d8a0 <omp_get_num_procs@@OMP_1.0+0xcf0>
   10918:	b	108a4 <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0xe4>
   1091c:	stp	x23, x24, [sp, #48]
   10920:	bl	8820 <abort@plt>
   10924:	nop

0000000000010928 <GOMP_loop_ull_doacross_start@@GOMP_5.0>:
   10928:	stp	x29, x30, [sp, #-112]!
   1092c:	mov	x29, sp
   10930:	stp	x23, x24, [sp, #48]
   10934:	mov	x24, x4
   10938:	adrp	x23, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1093c:	ldr	x23, [x23, #4016]
   10940:	stp	x19, x20, [sp, #16]
   10944:	mrs	x20, tpidr_el0
   10948:	mov	x19, x2
   1094c:	stp	x27, x28, [sp, #80]
   10950:	add	x28, x20, x23
   10954:	mov	x27, x3
   10958:	stp	x21, x22, [sp, #32]
   1095c:	mov	x22, x6
   10960:	mov	x21, x7
   10964:	stp	x25, x26, [sp, #64]
   10968:	mov	w26, w0
   1096c:	mov	x25, x5
   10970:	str	xzr, [x28, #72]
   10974:	str	x1, [sp, #104]
   10978:	cbz	x6, 10b70 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x248>
   1097c:	bl	1a1e0 <GOMP_task_reduction_remap@@GOMP_5.0+0x570>
   10980:	mov	x0, #0x0                   	// #0
   10984:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
   10988:	tst	w0, #0xff
   1098c:	ldr	x1, [sp, #104]
   10990:	b.eq	10ad4 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x1ac>  // b.none
   10994:	mov	x3, #0x0                   	// #0
   10998:	cbz	x21, 109a0 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x78>
   1099c:	ldr	x3, [x21]
   109a0:	tst	x19, #0x7ffffffc
   109a4:	and	x8, x19, #0x7fffffff
   109a8:	b.ne	109b8 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x90>  // b.any
   109ac:	cbz	x8, 109c0 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x98>
   109b0:	mov	w2, w8
   109b4:	b	109f8 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0xd0>
   109b8:	cmp	x8, #0x4
   109bc:	b.ne	10b6c <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x244>  // b.any
   109c0:	add	x4, x20, x23
   109c4:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   109c8:	add	x0, x0, #0x2b0
   109cc:	ldr	x2, [x4, #80]
   109d0:	cmp	x2, #0x0
   109d4:	add	x2, x2, #0x90
   109d8:	csel	x0, x0, x2, eq  // eq = none
   109dc:	ldr	w2, [x0, #8]
   109e0:	tst	w2, #0x7ffffffc
   109e4:	and	w2, w2, #0x7fffffff
   109e8:	b.ne	10aec <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x1c4>  // b.any
   109ec:	cbz	w2, 10b6c <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x244>
   109f0:	ldrsw	x27, [x0, #12]
   109f4:	mov	w8, w2
   109f8:	add	x5, x20, x23
   109fc:	mov	x4, #0x1                   	// #1
   10a00:	ldr	x6, [x1]
   10a04:	cmp	x8, #0x2
   10a08:	ldr	x0, [x5, #24]
   10a0c:	stp	w2, wzr, [x0]
   10a10:	stp	x27, x6, [x0, #8]
   10a14:	str	x4, [x0, #24]
   10a18:	str	xzr, [x0, #72]
   10a1c:	b.eq	10bb4 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x28c>  // b.none
   10a20:	mov	x2, x27
   10a24:	mov	w0, w26
   10a28:	bl	11bf0 <GOMP_doacross_wait@@GOMP_4.5+0x260>
   10a2c:	cbz	x22, 10b20 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x1f8>
   10a30:	mov	x0, x22
   10a34:	bl	17c48 <GOMP_taskgroup_reduction_register@@GOMP_5.0>
   10a38:	add	x0, x20, x23
   10a3c:	mov	w2, #0x1                   	// #1
   10a40:	ldr	x3, [x0, #80]
   10a44:	ldr	x1, [x0, #24]
   10a48:	ldr	x0, [x3, #40]
   10a4c:	strb	w2, [x0, #50]
   10a50:	str	x22, [x1, #88]
   10a54:	add	x19, x20, x23
   10a58:	ldr	x0, [x19, #32]
   10a5c:	cbz	x0, 10a80 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x158>
   10a60:	add	x0, x0, #0x50
   10a64:	ldxr	x2, [x0]
   10a68:	stlxr	w3, x1, [x0]
   10a6c:	cbnz	w3, 10a64 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x13c>
   10a70:	cmp	x2, #0x1
   10a74:	b.eq	10a7c <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x154>  // b.none
   10a78:	bl	1d8a0 <omp_get_num_procs@@OMP_1.0+0xcf0>
   10a7c:	ldr	x1, [x19, #24]
   10a80:	cbz	x21, 10a98 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x170>
   10a84:	ldr	x0, [x1, #32]
   10a88:	add	x20, x20, x23
   10a8c:	ldr	x0, [x0, #48]
   10a90:	str	x0, [x21]
   10a94:	ldr	x1, [x20, #24]
   10a98:	ldr	w0, [x1]
   10a9c:	cmp	w0, #0x2
   10aa0:	b.eq	10b90 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x268>  // b.none
   10aa4:	b.ls	10b64 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x23c>  // b.plast
   10aa8:	cmp	w0, #0x3
   10aac:	b.ne	10b2c <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x204>  // b.any
   10ab0:	mov	x1, x25
   10ab4:	mov	x0, x24
   10ab8:	ldp	x19, x20, [sp, #16]
   10abc:	ldp	x21, x22, [sp, #32]
   10ac0:	ldp	x23, x24, [sp, #48]
   10ac4:	ldp	x25, x26, [sp, #64]
   10ac8:	ldp	x27, x28, [sp, #80]
   10acc:	ldp	x29, x30, [sp], #112
   10ad0:	b	c5a8 <omp_is_initial_device@@OMP_4.0+0x880>
   10ad4:	ldr	x1, [x28, #24]
   10ad8:	mov	x0, x22
   10adc:	ldr	x1, [x1, #88]
   10ae0:	bl	19f80 <GOMP_task_reduction_remap@@GOMP_5.0+0x310>
   10ae4:	ldr	x1, [x28, #24]
   10ae8:	b	10a80 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x158>
   10aec:	cmp	w2, #0x4
   10af0:	b.ne	10b6c <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x244>  // b.any
   10af4:	ldr	x0, [x4, #24]
   10af8:	mov	x2, #0x1                   	// #1
   10afc:	ldr	x4, [x1]
   10b00:	mov	x27, #0x0                   	// #0
   10b04:	stp	x2, xzr, [x0]
   10b08:	stp	x4, x2, [x0, #16]
   10b0c:	mov	x2, x27
   10b10:	str	xzr, [x0, #72]
   10b14:	mov	w0, w26
   10b18:	bl	11bf0 <GOMP_doacross_wait@@GOMP_4.5+0x260>
   10b1c:	cbnz	x22, 10a30 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x108>
   10b20:	add	x0, x20, x23
   10b24:	ldr	x1, [x0, #24]
   10b28:	b	10a54 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x12c>
   10b2c:	cmp	w0, #0x4
   10b30:	b.ne	10b6c <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x244>  // b.any
   10b34:	mov	x1, x25
   10b38:	mov	x0, x24
   10b3c:	bl	c1d8 <omp_is_initial_device@@OMP_4.0+0x4b0>
   10b40:	cmp	w0, #0x0
   10b44:	cset	w0, eq  // eq = none
   10b48:	ldp	x19, x20, [sp, #16]
   10b4c:	ldp	x21, x22, [sp, #32]
   10b50:	ldp	x23, x24, [sp, #48]
   10b54:	ldp	x25, x26, [sp, #64]
   10b58:	ldp	x27, x28, [sp, #80]
   10b5c:	ldp	x29, x30, [sp], #112
   10b60:	ret
   10b64:	cmp	w0, #0x1
   10b68:	b.eq	10b34 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x20c>  // b.none
   10b6c:	bl	8820 <abort@plt>
   10b70:	mov	x0, #0x0                   	// #0
   10b74:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
   10b78:	tst	w0, #0xff
   10b7c:	ldr	x1, [sp, #104]
   10b80:	b.eq	10ae4 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x1bc>  // b.none
   10b84:	mov	x3, #0x0                   	// #0
   10b88:	cbnz	x21, 1099c <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x74>
   10b8c:	b	109a0 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x78>
   10b90:	mov	x1, x25
   10b94:	mov	x0, x24
   10b98:	ldp	x19, x20, [sp, #16]
   10b9c:	ldp	x21, x22, [sp, #32]
   10ba0:	ldp	x23, x24, [sp, #48]
   10ba4:	ldp	x25, x26, [sp, #64]
   10ba8:	ldp	x27, x28, [sp, #80]
   10bac:	ldp	x29, x30, [sp], #112
   10bb0:	b	c3f8 <omp_is_initial_device@@OMP_4.0+0x6d0>
   10bb4:	ldr	x2, [x5, #16]
   10bb8:	cbz	x2, 10bec <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x2c4>
   10bbc:	ldr	w2, [x2]
   10bc0:	mov	x4, x2
   10bc4:	orr	x4, x4, x27
   10bc8:	mov	x5, #0x7fffffff            	// #2147483647
   10bcc:	cmp	x4, x5
   10bd0:	b.hi	10a20 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0xf8>  // b.pmore
   10bd4:	madd	x2, x2, x27, x27
   10bd8:	mvn	x2, x2
   10bdc:	cmp	x6, x2
   10be0:	cset	w2, cc  // cc = lo, ul, last
   10be4:	str	w2, [x0, #4]
   10be8:	b	10a20 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0xf8>
   10bec:	mov	x2, x4
   10bf0:	b	10bc4 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x29c>
   10bf4:	nop

0000000000010bf8 <GOMP_loop_ull_static_next@@GOMP_2.0>:
   10bf8:	stp	x29, x30, [sp, #-16]!
   10bfc:	mov	x29, sp
   10c00:	bl	c1d8 <omp_is_initial_device@@OMP_4.0+0x4b0>
   10c04:	cmp	w0, #0x0
   10c08:	cset	w0, eq  // eq = none
   10c0c:	ldp	x29, x30, [sp], #16
   10c10:	ret
   10c14:	nop

0000000000010c18 <GOMP_loop_ull_dynamic_next@@GOMP_2.0>:
   10c18:	b	c3f8 <omp_is_initial_device@@OMP_4.0+0x6d0>
   10c1c:	nop

0000000000010c20 <GOMP_loop_ull_guided_next@@GOMP_2.0>:
   10c20:	b	c5a8 <omp_is_initial_device@@OMP_4.0+0x880>
   10c24:	nop

0000000000010c28 <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0>:
   10c28:	adrp	x3, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   10c2c:	ldr	x3, [x3, #4016]
   10c30:	mrs	x2, tpidr_el0
   10c34:	add	x2, x2, x3
   10c38:	ldr	x2, [x2, #24]
   10c3c:	ldr	w2, [x2]
   10c40:	cmp	w2, #0x2
   10c44:	b.eq	10c9c <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x74>  // b.none
   10c48:	stp	x29, x30, [sp, #-16]!
   10c4c:	mov	x3, x0
   10c50:	mov	x4, x1
   10c54:	mov	x29, sp
   10c58:	b.ls	10c6c <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x44>  // b.plast
   10c5c:	cmp	w2, #0x3
   10c60:	b.ne	10c90 <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x68>  // b.any
   10c64:	ldp	x29, x30, [sp], #16
   10c68:	b	c5a8 <omp_is_initial_device@@OMP_4.0+0x880>
   10c6c:	cmp	w2, #0x1
   10c70:	b.ne	10c98 <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x70>  // b.any
   10c74:	mov	x1, x4
   10c78:	mov	x0, x3
   10c7c:	bl	c1d8 <omp_is_initial_device@@OMP_4.0+0x4b0>
   10c80:	cmp	w0, #0x0
   10c84:	cset	w0, eq  // eq = none
   10c88:	ldp	x29, x30, [sp], #16
   10c8c:	ret
   10c90:	cmp	w2, #0x4
   10c94:	b.eq	10c74 <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x4c>  // b.none
   10c98:	bl	8820 <abort@plt>
   10c9c:	b	c3f8 <omp_is_initial_device@@OMP_4.0+0x6d0>

0000000000010ca0 <GOMP_loop_ull_ordered_static_next@@GOMP_2.0>:
   10ca0:	stp	x29, x30, [sp, #-48]!
   10ca4:	mov	x29, sp
   10ca8:	stp	x21, x22, [sp, #32]
   10cac:	mov	x21, x1
   10cb0:	adrp	x22, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   10cb4:	ldr	x22, [x22, #4016]
   10cb8:	stp	x19, x20, [sp, #16]
   10cbc:	mov	x19, x0
   10cc0:	mrs	x20, tpidr_el0
   10cc4:	bl	11418 <GOMP_ordered_start@@GOMP_1.0>
   10cc8:	add	x1, x20, x22
   10ccc:	mov	w0, #0x1                   	// #1
   10cd0:	ldr	x2, [x1, #24]
   10cd4:	add	x2, x2, #0x40
   10cd8:	ldaxr	w1, [x2]
   10cdc:	cbnz	w1, 10ce8 <GOMP_loop_ull_ordered_static_next@@GOMP_2.0+0x48>
   10ce0:	stxr	w3, w0, [x2]
   10ce4:	cbnz	w3, 10cd8 <GOMP_loop_ull_ordered_static_next@@GOMP_2.0+0x38>
   10ce8:	cmp	w1, #0x0
   10cec:	b.ne	10d5c <GOMP_loop_ull_ordered_static_next@@GOMP_2.0+0xbc>  // b.any
   10cf0:	mov	x0, x19
   10cf4:	mov	x1, x21
   10cf8:	bl	c1d8 <omp_is_initial_device@@OMP_4.0+0x4b0>
   10cfc:	mov	w19, w0
   10d00:	tbnz	w0, #31, 10d08 <GOMP_loop_ull_ordered_static_next@@GOMP_2.0+0x68>
   10d04:	bl	11380 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x478>
   10d08:	add	x20, x20, x22
   10d0c:	ldr	x1, [x20, #24]
   10d10:	add	x1, x1, #0x40
   10d14:	ldxr	w0, [x1]
   10d18:	stlxr	w2, wzr, [x1]
   10d1c:	cbnz	w2, 10d14 <GOMP_loop_ull_ordered_static_next@@GOMP_2.0+0x74>
   10d20:	tbnz	w0, #31, 10d3c <GOMP_loop_ull_ordered_static_next@@GOMP_2.0+0x9c>
   10d24:	cmp	w19, #0x0
   10d28:	cset	w0, eq  // eq = none
   10d2c:	ldp	x19, x20, [sp, #16]
   10d30:	ldp	x21, x22, [sp, #32]
   10d34:	ldp	x29, x30, [sp], #48
   10d38:	ret
   10d3c:	mov	x0, x1
   10d40:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   10d44:	cmp	w19, #0x0
   10d48:	cset	w0, eq  // eq = none
   10d4c:	ldp	x19, x20, [sp, #16]
   10d50:	ldp	x21, x22, [sp, #32]
   10d54:	ldp	x29, x30, [sp], #48
   10d58:	ret
   10d5c:	mov	x0, x2
   10d60:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   10d64:	b	10cf0 <GOMP_loop_ull_ordered_static_next@@GOMP_2.0+0x50>

0000000000010d68 <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0>:
   10d68:	stp	x29, x30, [sp, #-48]!
   10d6c:	mov	x29, sp
   10d70:	stp	x21, x22, [sp, #32]
   10d74:	mov	x21, x1
   10d78:	adrp	x22, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   10d7c:	ldr	x22, [x22, #4016]
   10d80:	stp	x19, x20, [sp, #16]
   10d84:	mov	x19, x0
   10d88:	mrs	x20, tpidr_el0
   10d8c:	bl	11418 <GOMP_ordered_start@@GOMP_1.0>
   10d90:	add	x1, x20, x22
   10d94:	mov	w0, #0x1                   	// #1
   10d98:	ldr	x2, [x1, #24]
   10d9c:	add	x2, x2, #0x40
   10da0:	ldaxr	w1, [x2]
   10da4:	cbnz	w1, 10db0 <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0+0x48>
   10da8:	stxr	w3, w0, [x2]
   10dac:	cbnz	w3, 10da0 <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0+0x38>
   10db0:	cmp	w1, #0x0
   10db4:	b.ne	10e28 <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0+0xc0>  // b.any
   10db8:	mov	x0, x19
   10dbc:	mov	x1, x21
   10dc0:	bl	c390 <omp_is_initial_device@@OMP_4.0+0x668>
   10dc4:	mov	w19, w0
   10dc8:	tst	w0, #0xff
   10dcc:	b.eq	10e04 <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0+0x9c>  // b.none
   10dd0:	bl	11220 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x318>
   10dd4:	add	x20, x20, x22
   10dd8:	ldr	x1, [x20, #24]
   10ddc:	add	x1, x1, #0x40
   10de0:	ldxr	w0, [x1]
   10de4:	stlxr	w2, wzr, [x1]
   10de8:	cbnz	w2, 10de0 <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0+0x78>
   10dec:	tbnz	w0, #31, 10e0c <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0+0xa4>
   10df0:	mov	w0, w19
   10df4:	ldp	x19, x20, [sp, #16]
   10df8:	ldp	x21, x22, [sp, #32]
   10dfc:	ldp	x29, x30, [sp], #48
   10e00:	ret
   10e04:	bl	11178 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x270>
   10e08:	b	10dd4 <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0+0x6c>
   10e0c:	mov	x0, x1
   10e10:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   10e14:	mov	w0, w19
   10e18:	ldp	x19, x20, [sp, #16]
   10e1c:	ldp	x21, x22, [sp, #32]
   10e20:	ldp	x29, x30, [sp], #48
   10e24:	ret
   10e28:	mov	x0, x2
   10e2c:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   10e30:	b	10db8 <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0+0x50>
   10e34:	nop

0000000000010e38 <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0>:
   10e38:	stp	x29, x30, [sp, #-48]!
   10e3c:	mov	x29, sp
   10e40:	stp	x21, x22, [sp, #32]
   10e44:	mov	x21, x1
   10e48:	adrp	x22, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   10e4c:	ldr	x22, [x22, #4016]
   10e50:	stp	x19, x20, [sp, #16]
   10e54:	mov	x19, x0
   10e58:	mrs	x20, tpidr_el0
   10e5c:	bl	11418 <GOMP_ordered_start@@GOMP_1.0>
   10e60:	add	x1, x20, x22
   10e64:	mov	w0, #0x1                   	// #1
   10e68:	ldr	x2, [x1, #24]
   10e6c:	add	x2, x2, #0x40
   10e70:	ldaxr	w1, [x2]
   10e74:	cbnz	w1, 10e80 <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0+0x48>
   10e78:	stxr	w3, w0, [x2]
   10e7c:	cbnz	w3, 10e70 <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0+0x38>
   10e80:	cmp	w1, #0x0
   10e84:	b.ne	10ef8 <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0+0xc0>  // b.any
   10e88:	mov	x0, x19
   10e8c:	mov	x1, x21
   10e90:	bl	c510 <omp_is_initial_device@@OMP_4.0+0x7e8>
   10e94:	mov	w19, w0
   10e98:	tst	w0, #0xff
   10e9c:	b.eq	10ed4 <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0+0x9c>  // b.none
   10ea0:	bl	11220 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x318>
   10ea4:	add	x20, x20, x22
   10ea8:	ldr	x1, [x20, #24]
   10eac:	add	x1, x1, #0x40
   10eb0:	ldxr	w0, [x1]
   10eb4:	stlxr	w2, wzr, [x1]
   10eb8:	cbnz	w2, 10eb0 <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0+0x78>
   10ebc:	tbnz	w0, #31, 10edc <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0+0xa4>
   10ec0:	mov	w0, w19
   10ec4:	ldp	x19, x20, [sp, #16]
   10ec8:	ldp	x21, x22, [sp, #32]
   10ecc:	ldp	x29, x30, [sp], #48
   10ed0:	ret
   10ed4:	bl	11178 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x270>
   10ed8:	b	10ea4 <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0+0x6c>
   10edc:	mov	x0, x1
   10ee0:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   10ee4:	mov	w0, w19
   10ee8:	ldp	x19, x20, [sp, #16]
   10eec:	ldp	x21, x22, [sp, #32]
   10ef0:	ldp	x29, x30, [sp], #48
   10ef4:	ret
   10ef8:	mov	x0, x2
   10efc:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   10f00:	b	10e88 <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0+0x50>
   10f04:	nop

0000000000010f08 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0>:
   10f08:	stp	x29, x30, [sp, #-64]!
   10f0c:	mov	x29, sp
   10f10:	stp	x19, x20, [sp, #16]
   10f14:	mov	x20, x0
   10f18:	adrp	x19, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   10f1c:	ldr	x19, [x19, #4016]
   10f20:	stp	x21, x22, [sp, #32]
   10f24:	mrs	x22, tpidr_el0
   10f28:	mov	x21, x1
   10f2c:	str	x23, [sp, #48]
   10f30:	add	x23, x22, x19
   10f34:	ldr	x0, [x23, #24]
   10f38:	ldr	w2, [x0]
   10f3c:	cmp	w2, #0x2
   10f40:	b.eq	11044 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x13c>  // b.none
   10f44:	b.ls	10fb4 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0xac>  // b.plast
   10f48:	cmp	w2, #0x3
   10f4c:	b.ne	11038 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x130>  // b.any
   10f50:	bl	11418 <GOMP_ordered_start@@GOMP_1.0>
   10f54:	ldr	x0, [x23, #24]
   10f58:	mov	w2, #0x1                   	// #1
   10f5c:	add	x0, x0, #0x40
   10f60:	ldaxr	w1, [x0]
   10f64:	cbnz	w1, 10f70 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x68>
   10f68:	stxr	w3, w2, [x0]
   10f6c:	cbnz	w3, 10f60 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x58>
   10f70:	cmp	w1, #0x0
   10f74:	b.ne	110d4 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1cc>  // b.any
   10f78:	mov	x0, x20
   10f7c:	mov	x1, x21
   10f80:	bl	c510 <omp_is_initial_device@@OMP_4.0+0x7e8>
   10f84:	ands	w20, w0, #0xff
   10f88:	b.ne	110a8 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1a0>  // b.any
   10f8c:	bl	11178 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x270>
   10f90:	add	x19, x22, x19
   10f94:	ldr	x0, [x19, #24]
   10f98:	add	x0, x0, #0x40
   10f9c:	ldxr	w1, [x0]
   10fa0:	stlxr	w2, wzr, [x0]
   10fa4:	cbnz	w2, 10f9c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x94>
   10fa8:	tbz	w1, #31, 11020 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x118>
   10fac:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   10fb0:	b	11020 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x118>
   10fb4:	cmp	w2, #0x1
   10fb8:	b.ne	11040 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x138>  // b.any
   10fbc:	bl	11418 <GOMP_ordered_start@@GOMP_1.0>
   10fc0:	add	x0, x22, x19
   10fc4:	mov	w2, #0x1                   	// #1
   10fc8:	ldr	x0, [x0, #24]
   10fcc:	add	x0, x0, #0x40
   10fd0:	ldaxr	w1, [x0]
   10fd4:	cbnz	w1, 10fe0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0xd8>
   10fd8:	stxr	w3, w2, [x0]
   10fdc:	cbnz	w3, 10fd0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0xc8>
   10fe0:	cmp	w1, #0x0
   10fe4:	b.ne	110c4 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1bc>  // b.any
   10fe8:	mov	x0, x20
   10fec:	mov	x1, x21
   10ff0:	bl	c1d8 <omp_is_initial_device@@OMP_4.0+0x4b0>
   10ff4:	mov	w20, w0
   10ff8:	tbz	w0, #31, 110b0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1a8>
   10ffc:	add	x19, x22, x19
   11000:	ldr	x1, [x19, #24]
   11004:	add	x1, x1, #0x40
   11008:	ldxr	w0, [x1]
   1100c:	stlxr	w2, wzr, [x1]
   11010:	cbnz	w2, 11008 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x100>
   11014:	tbnz	w0, #31, 110b8 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1b0>
   11018:	cmp	w20, #0x0
   1101c:	cset	w20, eq  // eq = none
   11020:	mov	w0, w20
   11024:	ldp	x19, x20, [sp, #16]
   11028:	ldp	x21, x22, [sp, #32]
   1102c:	ldr	x23, [sp, #48]
   11030:	ldp	x29, x30, [sp], #64
   11034:	ret
   11038:	cmp	w2, #0x4
   1103c:	b.eq	10fbc <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0xb4>  // b.none
   11040:	bl	8820 <abort@plt>
   11044:	bl	11418 <GOMP_ordered_start@@GOMP_1.0>
   11048:	ldr	x0, [x23, #24]
   1104c:	mov	w2, #0x1                   	// #1
   11050:	add	x0, x0, #0x40
   11054:	ldaxr	w1, [x0]
   11058:	cbnz	w1, 11064 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x15c>
   1105c:	stxr	w3, w2, [x0]
   11060:	cbnz	w3, 11054 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x14c>
   11064:	cmp	w1, #0x0
   11068:	b.ne	110cc <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1c4>  // b.any
   1106c:	mov	x0, x20
   11070:	mov	x1, x21
   11074:	bl	c390 <omp_is_initial_device@@OMP_4.0+0x668>
   11078:	ands	w20, w0, #0xff
   1107c:	b.ne	110a0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x198>  // b.any
   11080:	bl	11178 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x270>
   11084:	add	x19, x22, x19
   11088:	ldr	x0, [x19, #24]
   1108c:	add	x0, x0, #0x40
   11090:	ldxr	w1, [x0]
   11094:	stlxr	w2, wzr, [x0]
   11098:	cbz	w2, 10fa8 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0xa0>
   1109c:	b	11090 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x188>
   110a0:	bl	11220 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x318>
   110a4:	b	11084 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x17c>
   110a8:	bl	11220 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x318>
   110ac:	b	10f90 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x88>
   110b0:	bl	11380 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x478>
   110b4:	b	10ffc <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0xf4>
   110b8:	mov	x0, x1
   110bc:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   110c0:	b	11018 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x110>
   110c4:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   110c8:	b	10fe8 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0xe0>
   110cc:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   110d0:	b	1106c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x164>
   110d4:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   110d8:	b	10f78 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x70>
   110dc:	nop
   110e0:	adrp	x1, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   110e4:	ldr	x1, [x1, #4016]
   110e8:	mrs	x0, tpidr_el0
   110ec:	add	x1, x0, x1
   110f0:	ldr	x3, [x1, #16]
   110f4:	cbz	x3, 1113c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x234>
   110f8:	ldr	w0, [x3]
   110fc:	cmp	w0, #0x1
   11100:	b.eq	1113c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x234>  // b.none
   11104:	ldr	x2, [x1, #24]
   11108:	ldr	w4, [x1, #40]
   1110c:	ldr	w6, [x2, #40]
   11110:	ldr	w1, [x2, #48]
   11114:	ldr	x5, [x2, #32]
   11118:	add	w1, w1, w6
   1111c:	cmp	w0, w1
   11120:	sub	w0, w1, w0
   11124:	csel	w0, w0, w1, ls  // ls = plast
   11128:	str	w4, [x5, x0, lsl #2]
   1112c:	ldr	w0, [x2, #40]
   11130:	add	w1, w0, #0x1
   11134:	str	w1, [x2, #40]
   11138:	cbz	w0, 11140 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x238>
   1113c:	ret
   11140:	ldr	x0, [x3, #80]
   11144:	ldr	x0, [x0, w4, uxtw #3]
   11148:	ldr	w1, [x0]
   1114c:	add	w2, w1, #0x1
   11150:	and	w2, w2, #0x7fffffff
   11154:	ldxr	w3, [x0]
   11158:	cmp	w3, w1
   1115c:	b.ne	11168 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x260>  // b.any
   11160:	stlxr	w4, w2, [x0]
   11164:	cmp	w4, #0x0
   11168:	mov	w1, w3
   1116c:	b.ne	1114c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x244>  // b.any
   11170:	tbz	w3, #31, 1113c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x234>
   11174:	b	1cef0 <omp_get_num_procs@@OMP_1.0+0x340>
   11178:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1117c:	ldr	x0, [x0, #4016]
   11180:	mrs	x1, tpidr_el0
   11184:	add	x0, x1, x0
   11188:	ldr	x2, [x0, #16]
   1118c:	cbz	x2, 11208 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x300>
   11190:	ldr	w3, [x2]
   11194:	cmp	w3, #0x1
   11198:	b.eq	11208 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x300>  // b.none
   1119c:	ldr	x0, [x0, #24]
   111a0:	mov	w4, #0xffffffff            	// #-1
   111a4:	ldr	w1, [x0, #40]
   111a8:	add	w1, w1, w4
   111ac:	stp	w1, w4, [x0, #40]
   111b0:	cbz	w1, 11208 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x300>
   111b4:	ldr	w1, [x0, #48]
   111b8:	add	w1, w1, #0x1
   111bc:	cmp	w3, w1
   111c0:	b.eq	1120c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x304>  // b.none
   111c4:	ubfiz	x3, x1, #2, #32
   111c8:	ldr	x4, [x0, #32]
   111cc:	str	w1, [x0, #48]
   111d0:	ldr	x0, [x2, #80]
   111d4:	ldr	w1, [x4, x3]
   111d8:	ldr	x0, [x0, x1, lsl #3]
   111dc:	ldr	w1, [x0]
   111e0:	add	w2, w1, #0x1
   111e4:	and	w2, w2, #0x7fffffff
   111e8:	ldxr	w3, [x0]
   111ec:	cmp	w3, w1
   111f0:	b.ne	111fc <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x2f4>  // b.any
   111f4:	stlxr	w4, w2, [x0]
   111f8:	cmp	w4, #0x0
   111fc:	mov	w1, w3
   11200:	b.ne	111e0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x2d8>  // b.any
   11204:	tbnz	w3, #31, 11218 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x310>
   11208:	ret
   1120c:	mov	x3, #0x0                   	// #0
   11210:	mov	w1, #0x0                   	// #0
   11214:	b	111c8 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x2c0>
   11218:	b	1cef0 <omp_get_num_procs@@OMP_1.0+0x340>
   1121c:	nop
   11220:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   11224:	ldr	x0, [x0, #4016]
   11228:	mrs	x1, tpidr_el0
   1122c:	add	x0, x1, x0
   11230:	ldr	x4, [x0, #16]
   11234:	cbz	x4, 112d8 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x3d0>
   11238:	ldr	w1, [x4]
   1123c:	cmp	w1, #0x1
   11240:	b.eq	112d8 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x3d0>  // b.none
   11244:	ldr	x3, [x0, #24]
   11248:	mov	w2, #0xffffffff            	// #-1
   1124c:	ldr	x7, [x4, #80]
   11250:	ldr	w5, [x3, #40]
   11254:	str	w2, [x3, #44]
   11258:	cmp	w5, #0x1
   1125c:	b.eq	112e8 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x3e0>  // b.none
   11260:	ldr	w2, [x3, #48]
   11264:	cmp	w1, w5
   11268:	ldr	x6, [x3, #32]
   1126c:	b.ls	11290 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x388>  // b.plast
   11270:	add	w2, w5, w2
   11274:	ldr	w0, [x0, #40]
   11278:	cmp	w1, w2
   1127c:	sub	w1, w2, w1
   11280:	csel	w1, w1, w2, ls  // ls = plast
   11284:	str	w0, [x6, x1, lsl #2]
   11288:	ldr	w2, [x3, #48]
   1128c:	ldr	w1, [x4]
   11290:	add	w0, w2, #0x1
   11294:	cmp	w1, w0
   11298:	b.eq	112dc <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x3d4>  // b.none
   1129c:	add	x6, x6, w0, uxtw #2
   112a0:	str	w0, [x3, #48]
   112a4:	ldr	w0, [x6]
   112a8:	ldr	x0, [x7, x0, lsl #3]
   112ac:	ldr	w1, [x0]
   112b0:	add	w2, w1, #0x1
   112b4:	and	w2, w2, #0x7fffffff
   112b8:	ldxr	w3, [x0]
   112bc:	cmp	w3, w1
   112c0:	b.ne	112cc <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x3c4>  // b.any
   112c4:	stlxr	w4, w2, [x0]
   112c8:	cmp	w4, #0x0
   112cc:	mov	w1, w3
   112d0:	b.ne	112b0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x3a8>  // b.any
   112d4:	tbnz	w1, #31, 112e4 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x3dc>
   112d8:	ret
   112dc:	mov	w0, #0x0                   	// #0
   112e0:	b	112a0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x398>
   112e4:	b	1cef0 <omp_get_num_procs@@OMP_1.0+0x340>
   112e8:	ldr	w0, [x0, #40]
   112ec:	ldr	x0, [x7, x0, lsl #3]
   112f0:	ldr	w1, [x0]
   112f4:	add	w2, w1, #0x1
   112f8:	and	w2, w2, #0x7fffffff
   112fc:	ldxr	w3, [x0]
   11300:	cmp	w3, w1
   11304:	b.ne	11310 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x408>  // b.any
   11308:	stlxr	w4, w2, [x0]
   1130c:	cmp	w4, #0x0
   11310:	mov	w1, w3
   11314:	b.ne	112f4 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x3ec>  // b.any
   11318:	tbz	w1, #31, 112d8 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x3d0>
   1131c:	b	112e4 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x3dc>
   11320:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   11324:	ldr	x0, [x0, #4016]
   11328:	mrs	x1, tpidr_el0
   1132c:	add	x0, x1, x0
   11330:	ldr	x0, [x0, #16]
   11334:	cbz	x0, 11378 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x470>
   11338:	ldr	w1, [x0]
   1133c:	cmp	w1, #0x1
   11340:	b.eq	11378 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x470>  // b.none
   11344:	ldr	x0, [x0, #80]
   11348:	ldr	x0, [x0]
   1134c:	ldr	w1, [x0]
   11350:	add	w2, w1, #0x1
   11354:	and	w2, w2, #0x7fffffff
   11358:	ldxr	w3, [x0]
   1135c:	cmp	w3, w1
   11360:	b.ne	1136c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x464>  // b.any
   11364:	stlxr	w4, w2, [x0]
   11368:	cmp	w4, #0x0
   1136c:	mov	w1, w3
   11370:	b.ne	11350 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x448>  // b.any
   11374:	tbnz	w3, #31, 1137c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x474>
   11378:	ret
   1137c:	b	1cef0 <omp_get_num_procs@@OMP_1.0+0x340>
   11380:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   11384:	ldr	x0, [x0, #4016]
   11388:	mrs	x1, tpidr_el0
   1138c:	add	x0, x1, x0
   11390:	ldr	x2, [x0, #16]
   11394:	cbz	x2, 11400 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x4f8>
   11398:	ldr	w3, [x2]
   1139c:	cmp	w3, #0x1
   113a0:	b.eq	11400 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x4f8>  // b.none
   113a4:	ldr	x4, [x0, #24]
   113a8:	mov	w5, #0xffffffff            	// #-1
   113ac:	ldr	w1, [x0, #40]
   113b0:	str	w5, [x4, #44]
   113b4:	add	w1, w1, #0x1
   113b8:	cmp	w3, w1
   113bc:	b.eq	11404 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x4fc>  // b.none
   113c0:	ubfiz	x0, x1, #3, #32
   113c4:	ldr	x3, [x2, #80]
   113c8:	ldr	x2, [x4, #32]
   113cc:	ldr	x0, [x3, x0]
   113d0:	str	w1, [x2]
   113d4:	ldr	w1, [x0]
   113d8:	add	w2, w1, #0x1
   113dc:	and	w2, w2, #0x7fffffff
   113e0:	ldxr	w3, [x0]
   113e4:	cmp	w3, w1
   113e8:	b.ne	113f4 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x4ec>  // b.any
   113ec:	stlxr	w4, w2, [x0]
   113f0:	cmp	w4, #0x0
   113f4:	mov	w1, w3
   113f8:	b.ne	113d8 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x4d0>  // b.any
   113fc:	tbnz	w3, #31, 11410 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x508>
   11400:	ret
   11404:	mov	x0, #0x0                   	// #0
   11408:	mov	w1, #0x0                   	// #0
   1140c:	b	113c4 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x4bc>
   11410:	b	1cef0 <omp_get_num_procs@@OMP_1.0+0x340>
   11414:	nop

0000000000011418 <GOMP_ordered_start@@GOMP_1.0>:
   11418:	stp	x29, x30, [sp, #-48]!
   1141c:	mov	x29, sp
   11420:	stp	x19, x20, [sp, #16]
   11424:	mrs	x19, tpidr_el0
   11428:	adrp	x20, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1142c:	ldr	x20, [x20, #4016]
   11430:	add	x1, x19, x20
   11434:	ldr	x0, [x1, #16]
   11438:	cbz	x0, 11468 <GOMP_ordered_start@@GOMP_1.0+0x50>
   1143c:	ldr	w2, [x0]
   11440:	cmp	w2, #0x1
   11444:	b.eq	11468 <GOMP_ordered_start@@GOMP_1.0+0x50>  // b.none
   11448:	str	x21, [sp, #32]
   1144c:	ldr	x21, [x1, #24]
   11450:	dmb	ish
   11454:	ldr	w1, [x1, #40]
   11458:	ldr	w2, [x21, #44]
   1145c:	cmp	w2, w1
   11460:	b.ne	11474 <GOMP_ordered_start@@GOMP_1.0+0x5c>  // b.any
   11464:	ldr	x21, [sp, #32]
   11468:	ldp	x19, x20, [sp, #16]
   1146c:	ldp	x29, x30, [sp], #48
   11470:	ret
   11474:	ldr	x0, [x0, #80]
   11478:	ldr	x0, [x0, w1, uxtw #3]
   1147c:	ldr	w1, [x0]
   11480:	tst	x1, #0x7fffffff
   11484:	b.eq	114c4 <GOMP_ordered_start@@GOMP_1.0+0xac>  // b.none
   11488:	sub	w3, w1, #0x1
   1148c:	ldaxr	w2, [x0]
   11490:	cmp	w2, w1
   11494:	b.ne	114a0 <GOMP_ordered_start@@GOMP_1.0+0x88>  // b.any
   11498:	stxr	w4, w3, [x0]
   1149c:	cmp	w4, #0x0
   114a0:	mov	w1, w2
   114a4:	b.ne	11480 <GOMP_ordered_start@@GOMP_1.0+0x68>  // b.any
   114a8:	add	x19, x19, x20
   114ac:	ldr	w0, [x19, #40]
   114b0:	str	w0, [x21, #44]
   114b4:	ldp	x19, x20, [sp, #16]
   114b8:	ldr	x21, [sp, #32]
   114bc:	ldp	x29, x30, [sp], #48
   114c0:	ret
   114c4:	bl	1cc28 <omp_get_num_procs@@OMP_1.0+0x78>
   114c8:	b	114a8 <GOMP_ordered_start@@GOMP_1.0+0x90>
   114cc:	nop

00000000000114d0 <GOMP_ordered_end@@GOMP_1.0>:
   114d0:	ret
   114d4:	nop
   114d8:	adrp	x4, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   114dc:	ldr	x4, [x4, #4016]
   114e0:	mrs	x5, tpidr_el0
   114e4:	stp	x29, x30, [sp, #-368]!
   114e8:	add	x4, x5, x4
   114ec:	mov	x29, sp
   114f0:	stp	x21, x22, [sp, #32]
   114f4:	stp	x23, x24, [sp, #48]
   114f8:	mov	x23, x1
   114fc:	ldp	x1, x22, [x4, #16]
   11500:	stp	x25, x26, [sp, #64]
   11504:	mov	x25, x3
   11508:	cbz	x1, 116a0 <GOMP_ordered_end@@GOMP_1.0+0x1d0>
   1150c:	ldr	w24, [x1]
   11510:	cmp	w24, #0x1
   11514:	b.eq	116a0 <GOMP_ordered_end@@GOMP_1.0+0x1d0>  // b.none
   11518:	stp	x19, x20, [sp, #16]
   1151c:	mov	x21, x2
   11520:	mov	w20, w0
   11524:	mov	x5, #0x0                   	// #0
   11528:	add	x0, x3, #0x77
   1152c:	mov	w19, #0x0                   	// #0
   11530:	cbz	w20, 117b4 <GOMP_ordered_end@@GOMP_1.0+0x2e4>
   11534:	add	x7, sp, #0x70
   11538:	mov	w2, #0x1                   	// #1
   1153c:	mov	w1, #0x40                  	// #64
   11540:	b	11568 <GOMP_ordered_end@@GOMP_1.0+0x98>
   11544:	add	x5, x5, #0x1
   11548:	mov	w19, #0x41                  	// #65
   1154c:	cmp	w20, w5
   11550:	b.ls	11788 <GOMP_ordered_end@@GOMP_1.0+0x2b8>  // b.plast
   11554:	ldr	x3, [x23, x5, lsl #3]
   11558:	cbz	x3, 1169c <GOMP_ordered_end@@GOMP_1.0+0x1cc>
   1155c:	add	x5, x5, #0x1
   11560:	cmp	w20, w5
   11564:	b.ls	115a8 <GOMP_ordered_end@@GOMP_1.0+0xd8>  // b.plast
   11568:	ldr	x6, [x23, x5, lsl #3]
   1156c:	cmp	w19, #0x40
   11570:	sub	x4, x6, #0x1
   11574:	clz	x4, x4
   11578:	cbz	x6, 1169c <GOMP_ordered_end@@GOMP_1.0+0x1cc>
   1157c:	sub	w4, w1, w4
   11580:	b.hi	1155c <GOMP_ordered_end@@GOMP_1.0+0x8c>  // b.pmore
   11584:	cmp	x6, #0x1
   11588:	csel	w4, w4, w2, ne  // ne = any
   1158c:	add	w19, w19, w4
   11590:	cmp	w19, #0x40
   11594:	b.hi	11544 <GOMP_ordered_end@@GOMP_1.0+0x74>  // b.pmore
   11598:	str	w4, [x7, x5, lsl #2]
   1159c:	add	x5, x5, #0x1
   115a0:	cmp	w20, w5
   115a4:	b.hi	11568 <GOMP_ordered_end@@GOMP_1.0+0x98>  // b.pmore
   115a8:	stp	x27, x28, [sp, #80]
   115ac:	ldr	w1, [x22]
   115b0:	mov	w24, w24
   115b4:	cmp	w1, #0x1
   115b8:	b.eq	115d4 <GOMP_ordered_end@@GOMP_1.0+0x104>  // b.none
   115bc:	cmp	w1, #0x3
   115c0:	ldr	x24, [x23]
   115c4:	b.eq	115d4 <GOMP_ordered_end@@GOMP_1.0+0x104>  // b.none
   115c8:	sub	x24, x24, #0x1
   115cc:	sdiv	x24, x24, x21
   115d0:	add	x24, x24, #0x1
   115d4:	cmp	w19, #0x40
   115d8:	b.ls	116e4 <GOMP_ordered_end@@GOMP_1.0+0x214>  // b.plast
   115dc:	mov	x27, #0x3f                  	// #63
   115e0:	mov	x1, #0x77                  	// #119
   115e4:	add	x27, x27, w20, uxtw #3
   115e8:	str	x1, [sp, #104]
   115ec:	and	x27, x27, #0xffffffffffffffc0
   115f0:	mov	x1, #0x0                   	// #0
   115f4:	mul	x28, x24, x27
   115f8:	add	x1, x28, x1
   115fc:	add	x0, x1, x0
   11600:	bl	b2f8 <fprintf@plt+0x2838>
   11604:	mov	x26, x0
   11608:	strb	wzr, [x0, #20]
   1160c:	ldr	x0, [sp, #104]
   11610:	stp	x21, x27, [x26]
   11614:	add	x0, x26, x0
   11618:	str	w20, [x26, #16]
   1161c:	and	x0, x0, #0xffffffffffffffc0
   11620:	str	x0, [x26, #24]
   11624:	cbnz	x25, 11770 <GOMP_ordered_end@@GOMP_1.0+0x2a0>
   11628:	str	xzr, [x26, #48]
   1162c:	cmp	w19, #0x40
   11630:	b.ls	116f8 <GOMP_ordered_end@@GOMP_1.0+0x228>  // b.plast
   11634:	ubfiz	x20, x20, #3, #32
   11638:	mov	x25, #0x0                   	// #0
   1163c:	mov	x19, #0x0                   	// #0
   11640:	cbz	x24, 1166c <GOMP_ordered_end@@GOMP_1.0+0x19c>
   11644:	nop
   11648:	ldr	x0, [x26, #24]
   1164c:	add	x19, x19, #0x1
   11650:	mov	x2, x20
   11654:	mov	w1, #0x0                   	// #0
   11658:	add	x0, x0, x25
   1165c:	bl	8770 <memset@plt>
   11660:	add	x25, x25, x27
   11664:	cmp	x24, x19
   11668:	b.ne	11648 <GOMP_ordered_end@@GOMP_1.0+0x178>  // b.any
   1166c:	ldr	w0, [x22]
   11670:	cmp	x21, #0x0
   11674:	ccmp	w0, #0x1, #0x0, eq  // eq = none
   11678:	b.eq	11794 <GOMP_ordered_end@@GOMP_1.0+0x2c4>  // b.none
   1167c:	ldp	x19, x20, [sp, #16]
   11680:	ldp	x27, x28, [sp, #80]
   11684:	str	x26, [x22, #32]
   11688:	ldp	x21, x22, [sp, #32]
   1168c:	ldp	x23, x24, [sp, #48]
   11690:	ldp	x25, x26, [sp, #64]
   11694:	ldp	x29, x30, [sp], #368
   11698:	ret
   1169c:	ldp	x19, x20, [sp, #16]
   116a0:	cbnz	x25, 116bc <GOMP_ordered_end@@GOMP_1.0+0x1ec>
   116a4:	str	xzr, [x22, #32]
   116a8:	ldp	x21, x22, [sp, #32]
   116ac:	ldp	x23, x24, [sp, #48]
   116b0:	ldp	x25, x26, [sp, #64]
   116b4:	ldp	x29, x30, [sp], #368
   116b8:	ret
   116bc:	add	x0, x25, #0x38
   116c0:	bl	b330 <fprintf@plt+0x2870>
   116c4:	add	x1, x0, #0x38
   116c8:	str	x1, [x0, #48]
   116cc:	str	x0, [x22, #32]
   116d0:	ldp	x21, x22, [sp, #32]
   116d4:	ldp	x23, x24, [sp, #48]
   116d8:	ldp	x25, x26, [sp, #64]
   116dc:	ldp	x29, x30, [sp], #368
   116e0:	ret
   116e4:	ubfiz	x1, x20, #2, #32
   116e8:	mov	x27, #0x40                  	// #64
   116ec:	add	x2, x1, #0x77
   116f0:	str	x2, [sp, #104]
   116f4:	b	115f4 <GOMP_ordered_end@@GOMP_1.0+0x124>
   116f8:	mov	w0, #0x1                   	// #1
   116fc:	strb	w0, [x26, #20]
   11700:	cbz	w20, 11748 <GOMP_ordered_end@@GOMP_1.0+0x278>
   11704:	sub	w2, w20, #0x1
   11708:	add	x0, sp, #0x70
   1170c:	mvn	x5, x2
   11710:	mov	x1, #0x0                   	// #0
   11714:	lsl	x2, x2, #2
   11718:	mov	w3, #0x0                   	// #0
   1171c:	add	x4, x2, #0x38
   11720:	lsl	x5, x5, #2
   11724:	add	x4, x26, x4
   11728:	add	x2, x0, x2
   1172c:	nop
   11730:	ldr	w0, [x2, x1]
   11734:	str	w3, [x4, x1]
   11738:	sub	x1, x1, #0x4
   1173c:	cmp	x5, x1
   11740:	add	w3, w3, w0
   11744:	b.ne	11730 <GOMP_ordered_end@@GOMP_1.0+0x260>  // b.any
   11748:	cbz	x24, 1166c <GOMP_ordered_end@@GOMP_1.0+0x19c>
   1174c:	ldr	x2, [x26, #24]
   11750:	mov	x1, #0x0                   	// #0
   11754:	nop
   11758:	str	xzr, [x2]
   1175c:	add	x1, x1, #0x1
   11760:	cmp	x24, x1
   11764:	add	x2, x2, x27
   11768:	b.ne	11758 <GOMP_ordered_end@@GOMP_1.0+0x288>  // b.any
   1176c:	b	1166c <GOMP_ordered_end@@GOMP_1.0+0x19c>
   11770:	add	x0, x0, x28
   11774:	mov	x2, x25
   11778:	mov	w1, #0x0                   	// #0
   1177c:	str	x0, [x26, #48]
   11780:	bl	8770 <memset@plt>
   11784:	b	1162c <GOMP_ordered_end@@GOMP_1.0+0x15c>
   11788:	mov	w19, #0x41                  	// #65
   1178c:	stp	x27, x28, [sp, #80]
   11790:	b	115ac <GOMP_ordered_end@@GOMP_1.0+0xdc>
   11794:	ldr	x1, [x23]
   11798:	udiv	x0, x1, x24
   1179c:	msub	x24, x0, x24, x1
   117a0:	str	x0, [x26]
   117a4:	madd	x0, x0, x24, x24
   117a8:	str	x24, [x26, #32]
   117ac:	str	x0, [x26, #40]
   117b0:	b	1167c <GOMP_ordered_end@@GOMP_1.0+0x1ac>
   117b4:	mov	w19, w20
   117b8:	stp	x27, x28, [sp, #80]
   117bc:	b	115ac <GOMP_ordered_end@@GOMP_1.0+0xdc>

00000000000117c0 <GOMP_doacross_post@@GOMP_4.5>:
   117c0:	sub	sp, sp, #0x10
   117c4:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   117c8:	ldr	x2, [x2, #4016]
   117cc:	mrs	x1, tpidr_el0
   117d0:	str	x0, [sp, #8]
   117d4:	add	x0, x1, x2
   117d8:	ldr	x5, [sp, #8]
   117dc:	ldr	x1, [x0, #24]
   117e0:	ldr	x2, [x1, #32]
   117e4:	cbz	x2, 1191c <GOMP_doacross_post@@GOMP_4.5+0x15c>
   117e8:	ldr	x3, [x2, #24]
   117ec:	cbz	x3, 1191c <GOMP_doacross_post@@GOMP_4.5+0x15c>
   117f0:	ldr	w1, [x1]
   117f4:	cmp	w1, #0x1
   117f8:	b.ne	1196c <GOMP_doacross_post@@GOMP_4.5+0x1ac>  // b.any
   117fc:	ldr	w6, [x0, #40]
   11800:	ldrb	w0, [x2, #20]
   11804:	ldr	x1, [x2, #8]
   11808:	madd	x6, x6, x1, x3
   1180c:	cbz	w0, 11928 <GOMP_doacross_post@@GOMP_4.5+0x168>
   11810:	ldr	x3, [x5]
   11814:	ldr	w0, [x2, #56]
   11818:	ldr	w7, [x2, #16]
   1181c:	lsl	x3, x3, x0
   11820:	cmp	w7, #0x1
   11824:	b.ls	118f4 <GOMP_doacross_post@@GOMP_4.5+0x134>  // b.plast
   11828:	sub	w0, w7, #0x2
   1182c:	sub	w8, w7, #0x1
   11830:	cmp	w0, #0x2
   11834:	b.ls	11984 <GOMP_doacross_post@@GOMP_4.5+0x1c4>  // b.plast
   11838:	lsr	w4, w8, #2
   1183c:	add	x1, x2, #0x3c
   11840:	movi	v3.4s, #0x0
   11844:	add	x0, x5, #0x8
   11848:	add	x4, x1, w4, uxtw #4
   1184c:	nop
   11850:	ldr	q1, [x1], #16
   11854:	ldp	q0, q2, [x0]
   11858:	add	x0, x0, #0x20
   1185c:	uxtl	v4.2d, v1.2s
   11860:	cmp	x1, x4
   11864:	uxtl2	v1.2d, v1.4s
   11868:	sshl	v0.2d, v0.2d, v4.2d
   1186c:	sshl	v1.2d, v2.2d, v1.2d
   11870:	orr	v0.16b, v0.16b, v1.16b
   11874:	orr	v3.16b, v3.16b, v0.16b
   11878:	b.ne	11850 <GOMP_doacross_post@@GOMP_4.5+0x90>  // b.any
   1187c:	movi	v0.4s, #0x0
   11880:	and	w1, w8, #0xfffffffc
   11884:	cmp	w1, w8
   11888:	add	w1, w1, #0x1
   1188c:	ext	v0.16b, v3.16b, v0.16b, #8
   11890:	orr	v3.16b, v3.16b, v0.16b
   11894:	mov	x0, v3.d[0]
   11898:	orr	x3, x3, x0
   1189c:	b.eq	118f4 <GOMP_doacross_post@@GOMP_4.5+0x134>  // b.none
   118a0:	add	x4, x2, w1, uxtw #2
   118a4:	add	w8, w1, #0x1
   118a8:	ldr	x0, [x5, w1, uxtw #3]
   118ac:	cmp	w7, w8
   118b0:	ldr	w4, [x4, #56]
   118b4:	lsl	x0, x0, x4
   118b8:	orr	x3, x3, x0
   118bc:	b.ls	118f4 <GOMP_doacross_post@@GOMP_4.5+0x134>  // b.plast
   118c0:	add	x4, x2, w8, uxtw #2
   118c4:	add	w1, w1, #0x2
   118c8:	ldr	x0, [x5, w8, uxtw #3]
   118cc:	cmp	w7, w1
   118d0:	ldr	w4, [x4, #56]
   118d4:	lsl	x0, x0, x4
   118d8:	orr	x3, x3, x0
   118dc:	b.ls	118f4 <GOMP_doacross_post@@GOMP_4.5+0x134>  // b.plast
   118e0:	add	x2, x2, w1, uxtw #2
   118e4:	ldr	x0, [x5, w1, uxtw #3]
   118e8:	ldr	w1, [x2, #56]
   118ec:	lsl	x0, x0, x1
   118f0:	orr	x3, x3, x0
   118f4:	add	x3, x3, #0x1
   118f8:	ldar	x0, [x6]
   118fc:	cmp	x0, x3
   11900:	b.eq	11910 <GOMP_doacross_post@@GOMP_4.5+0x150>  // b.none
   11904:	stlr	x3, [x6]
   11908:	add	sp, sp, #0x10
   1190c:	ret
   11910:	dmb	ish
   11914:	add	sp, sp, #0x10
   11918:	ret
   1191c:	dmb	ish
   11920:	add	sp, sp, #0x10
   11924:	ret
   11928:	dmb	ishld
   1192c:	ldr	w1, [x2, #16]
   11930:	sub	w0, w1, #0x1
   11934:	lsl	x0, x0, #3
   11938:	cbz	w1, 11908 <GOMP_doacross_post@@GOMP_4.5+0x148>
   1193c:	nop
   11940:	ldr	x1, [x5, x0]
   11944:	add	x2, x6, x0
   11948:	add	x1, x1, #0x1
   1194c:	ldr	x3, [x2]
   11950:	cmp	x1, x3
   11954:	b.eq	1195c <GOMP_doacross_post@@GOMP_4.5+0x19c>  // b.none
   11958:	stlr	x1, [x2]
   1195c:	sub	x0, x0, #0x8
   11960:	cmn	x0, #0x8
   11964:	b.ne	11940 <GOMP_doacross_post@@GOMP_4.5+0x180>  // b.any
   11968:	b	11908 <GOMP_doacross_post@@GOMP_4.5+0x148>
   1196c:	cmp	w1, #0x3
   11970:	ldr	x6, [x5]
   11974:	b.eq	11800 <GOMP_doacross_post@@GOMP_4.5+0x40>  // b.none
   11978:	ldr	x0, [x2]
   1197c:	sdiv	x6, x6, x0
   11980:	b	11800 <GOMP_doacross_post@@GOMP_4.5+0x40>
   11984:	mov	w1, #0x1                   	// #1
   11988:	b	118a0 <GOMP_doacross_post@@GOMP_4.5+0xe0>
   1198c:	nop

0000000000011990 <GOMP_doacross_wait@@GOMP_4.5>:
   11990:	sub	sp, sp, #0x60
   11994:	adrp	x9, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   11998:	ldr	x9, [x9, #4016]
   1199c:	mrs	x8, tpidr_el0
   119a0:	stp	x1, x2, [sp, #40]
   119a4:	add	x1, x8, x9
   119a8:	stp	x3, x4, [sp, #56]
   119ac:	ldr	x3, [x1, #24]
   119b0:	stp	x5, x6, [sp, #72]
   119b4:	str	x7, [sp, #88]
   119b8:	ldr	x2, [x3, #32]
   119bc:	cbz	x2, 11bb0 <GOMP_doacross_wait@@GOMP_4.5+0x220>
   119c0:	ldr	x5, [x2, #24]
   119c4:	cbz	x5, 11bb0 <GOMP_doacross_wait@@GOMP_4.5+0x220>
   119c8:	ldr	w4, [x3]
   119cc:	cmp	w4, #0x1
   119d0:	b.ne	11bd0 <GOMP_doacross_wait@@GOMP_4.5+0x240>  // b.any
   119d4:	ldr	x3, [x3, #8]
   119d8:	cbz	x3, 11b88 <GOMP_doacross_wait@@GOMP_4.5+0x1f8>
   119dc:	ldr	x1, [x1, #16]
   119e0:	sdiv	x3, x0, x3
   119e4:	ldr	w1, [x1]
   119e8:	sdiv	x4, x3, x1
   119ec:	msub	x4, x4, x1, x3
   119f0:	ldrb	w7, [x2, #20]
   119f4:	add	x10, sp, #0x20
   119f8:	ldr	x1, [x2, #8]
   119fc:	mov	w9, #0xffffffc8            	// #-56
   11a00:	madd	x4, x4, x1, x5
   11a04:	add	x1, x0, #0x1
   11a08:	cbz	w7, 11afc <GOMP_doacross_wait@@GOMP_4.5+0x16c>
   11a0c:	ldr	w1, [x2, #56]
   11a10:	add	x5, sp, #0x20
   11a14:	ldr	w8, [x2, #16]
   11a18:	add	x6, sp, #0x60
   11a1c:	mov	w3, #0xffffffc8            	// #-56
   11a20:	stp	x6, x6, [sp]
   11a24:	cmp	w8, #0x1
   11a28:	str	x5, [sp, #16]
   11a2c:	lsl	x0, x0, x1
   11a30:	stp	w3, wzr, [sp, #24]
   11a34:	b.ls	11ac8 <GOMP_doacross_wait@@GOMP_4.5+0x138>  // b.plast
   11a38:	sub	w8, w8, #0x2
   11a3c:	add	x5, x2, #0x40
   11a40:	add	x1, x2, #0x3c
   11a44:	mov	x11, x6
   11a48:	add	x8, x5, w8, uxtw #2
   11a4c:	mov	w9, #0x0                   	// #0
   11a50:	mov	x5, x6
   11a54:	mov	w10, #0x0                   	// #0
   11a58:	b	11a80 <GOMP_doacross_wait@@GOMP_4.5+0xf0>
   11a5c:	mov	x2, x5
   11a60:	ldr	w6, [x1], #4
   11a64:	mov	w9, w7
   11a68:	add	x5, x5, #0x8
   11a6c:	cmp	x8, x1
   11a70:	ldr	x2, [x2]
   11a74:	lsl	x2, x2, x6
   11a78:	orr	x0, x0, x2
   11a7c:	b.eq	11ab8 <GOMP_doacross_wait@@GOMP_4.5+0x128>  // b.none
   11a80:	add	w6, w3, #0x8
   11a84:	tbz	w3, #31, 11a5c <GOMP_doacross_wait@@GOMP_4.5+0xcc>
   11a88:	add	x2, x11, w3, sxtw
   11a8c:	mov	w10, w7
   11a90:	mov	w3, w6
   11a94:	cmp	w6, #0x0
   11a98:	b.gt	11a5c <GOMP_doacross_wait@@GOMP_4.5+0xcc>
   11a9c:	ldr	x2, [x2]
   11aa0:	ldr	w6, [x1], #4
   11aa4:	cmp	x8, x1
   11aa8:	lsl	x2, x2, x6
   11aac:	orr	x0, x0, x2
   11ab0:	b.ne	11a80 <GOMP_doacross_wait@@GOMP_4.5+0xf0>  // b.any
   11ab4:	nop
   11ab8:	cbz	w10, 11ac0 <GOMP_doacross_wait@@GOMP_4.5+0x130>
   11abc:	str	w3, [sp, #24]
   11ac0:	cbz	w9, 11ac8 <GOMP_doacross_wait@@GOMP_4.5+0x138>
   11ac4:	str	x5, [sp]
   11ac8:	ldar	x1, [x4]
   11acc:	cmp	x1, x0
   11ad0:	b.hi	11ae4 <GOMP_doacross_wait@@GOMP_4.5+0x154>  // b.pmore
   11ad4:	nop
   11ad8:	ldr	x1, [x4]
   11adc:	cmp	x1, x0
   11ae0:	b.ls	11ad8 <GOMP_doacross_wait@@GOMP_4.5+0x148>  // b.plast
   11ae4:	dmb	ish
   11ae8:	add	sp, sp, #0x60
   11aec:	ret
   11af0:	mov	w0, w6
   11af4:	cmp	w6, w0
   11af8:	b.eq	11bb0 <GOMP_doacross_wait@@GOMP_4.5+0x220>  // b.none
   11afc:	ldr	w6, [x2, #16]
   11b00:	add	x0, sp, #0x60
   11b04:	stp	x0, x0, [sp]
   11b08:	mov	w0, w6
   11b0c:	str	x10, [sp, #16]
   11b10:	stp	w9, wzr, [sp, #24]
   11b14:	cbz	w6, 11af4 <GOMP_doacross_wait@@GOMP_4.5+0x164>
   11b18:	mov	w0, #0x0                   	// #0
   11b1c:	b	11b50 <GOMP_doacross_wait@@GOMP_4.5+0x1c0>
   11b20:	and	x7, x7, #0xfffffffffffffff8
   11b24:	str	x7, [sp]
   11b28:	ldr	x3, [x3]
   11b2c:	add	x3, x3, #0x1
   11b30:	add	x5, x4, w0, uxtw #3
   11b34:	ldr	x5, [x5]
   11b38:	cmp	x3, x5
   11b3c:	b.cc	11af0 <GOMP_doacross_wait@@GOMP_4.5+0x160>  // b.lo, b.ul, b.last
   11b40:	b.hi	11af4 <GOMP_doacross_wait@@GOMP_4.5+0x164>  // b.pmore
   11b44:	add	w0, w0, #0x1
   11b48:	cmp	w6, w0
   11b4c:	b.ls	11af4 <GOMP_doacross_wait@@GOMP_4.5+0x164>  // b.plast
   11b50:	mov	x3, x1
   11b54:	cbz	w0, 11b30 <GOMP_doacross_wait@@GOMP_4.5+0x1a0>
   11b58:	ldr	w5, [sp, #24]
   11b5c:	ldr	x3, [sp]
   11b60:	add	w8, w5, #0x8
   11b64:	add	x7, x3, #0xf
   11b68:	tbz	w5, #31, 11b20 <GOMP_doacross_wait@@GOMP_4.5+0x190>
   11b6c:	str	w8, [sp, #24]
   11b70:	add	x7, x3, #0xf
   11b74:	cmp	w8, #0x0
   11b78:	and	x7, x7, #0xfffffffffffffff8
   11b7c:	b.le	11ba4 <GOMP_doacross_wait@@GOMP_4.5+0x214>
   11b80:	str	x7, [sp]
   11b84:	b	11b28 <GOMP_doacross_wait@@GOMP_4.5+0x198>
   11b88:	ldr	x1, [x2, #40]
   11b8c:	ldr	x4, [x2]
   11b90:	cmp	x1, x0
   11b94:	b.le	11bbc <GOMP_doacross_wait@@GOMP_4.5+0x22c>
   11b98:	add	x4, x4, #0x1
   11b9c:	sdiv	x4, x0, x4
   11ba0:	b	119f0 <GOMP_doacross_wait@@GOMP_4.5+0x60>
   11ba4:	ldr	x3, [sp, #8]
   11ba8:	add	x3, x3, w5, sxtw
   11bac:	b	11b28 <GOMP_doacross_wait@@GOMP_4.5+0x198>
   11bb0:	dmb	ish
   11bb4:	add	sp, sp, #0x60
   11bb8:	ret
   11bbc:	sub	x1, x0, x1
   11bc0:	ldr	x3, [x2, #32]
   11bc4:	sdiv	x4, x1, x4
   11bc8:	add	x4, x4, x3
   11bcc:	b	119f0 <GOMP_doacross_wait@@GOMP_4.5+0x60>
   11bd0:	cmp	w4, #0x3
   11bd4:	b.eq	11be4 <GOMP_doacross_wait@@GOMP_4.5+0x254>  // b.none
   11bd8:	ldr	x1, [x2]
   11bdc:	sdiv	x4, x0, x1
   11be0:	b	119f0 <GOMP_doacross_wait@@GOMP_4.5+0x60>
   11be4:	mov	x4, x0
   11be8:	b	119f0 <GOMP_doacross_wait@@GOMP_4.5+0x60>
   11bec:	nop
   11bf0:	adrp	x4, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   11bf4:	ldr	x4, [x4, #4016]
   11bf8:	mrs	x5, tpidr_el0
   11bfc:	stp	x29, x30, [sp, #-368]!
   11c00:	add	x4, x5, x4
   11c04:	mov	x29, sp
   11c08:	stp	x19, x20, [sp, #16]
   11c0c:	mov	w20, w0
   11c10:	stp	x21, x22, [sp, #32]
   11c14:	ldp	x0, x22, [x4, #16]
   11c18:	stp	x25, x26, [sp, #64]
   11c1c:	mov	x26, x3
   11c20:	cbz	x0, 11db0 <GOMP_doacross_wait@@GOMP_4.5+0x420>
   11c24:	stp	x23, x24, [sp, #48]
   11c28:	ldr	w24, [x0]
   11c2c:	cmp	w24, #0x1
   11c30:	b.eq	11dac <GOMP_doacross_wait@@GOMP_4.5+0x41c>  // b.none
   11c34:	mov	x23, x1
   11c38:	mov	x21, x2
   11c3c:	mov	x5, #0x0                   	// #0
   11c40:	mov	w19, #0x0                   	// #0
   11c44:	cbz	w20, 11ebc <GOMP_doacross_wait@@GOMP_4.5+0x52c>
   11c48:	add	x3, sp, #0x70
   11c4c:	mov	w1, #0x1                   	// #1
   11c50:	mov	w0, #0x40                  	// #64
   11c54:	b	11c7c <GOMP_doacross_wait@@GOMP_4.5+0x2ec>
   11c58:	add	x5, x5, #0x1
   11c5c:	mov	w19, #0x41                  	// #65
   11c60:	cmp	w20, w5
   11c64:	b.ls	11e90 <GOMP_doacross_wait@@GOMP_4.5+0x500>  // b.plast
   11c68:	ldr	x2, [x23, x5, lsl #3]
   11c6c:	cbz	x2, 11dac <GOMP_doacross_wait@@GOMP_4.5+0x41c>
   11c70:	add	x5, x5, #0x1
   11c74:	cmp	w20, w5
   11c78:	b.ls	11cbc <GOMP_doacross_wait@@GOMP_4.5+0x32c>  // b.plast
   11c7c:	ldr	x6, [x23, x5, lsl #3]
   11c80:	cmp	w19, #0x40
   11c84:	sub	x4, x6, #0x1
   11c88:	clz	x4, x4
   11c8c:	cbz	x6, 11dac <GOMP_doacross_wait@@GOMP_4.5+0x41c>
   11c90:	sub	w4, w0, w4
   11c94:	b.hi	11c70 <GOMP_doacross_wait@@GOMP_4.5+0x2e0>  // b.pmore
   11c98:	cmp	x6, #0x1
   11c9c:	csel	w4, w4, w1, ne  // ne = any
   11ca0:	add	w19, w19, w4
   11ca4:	cmp	w19, #0x40
   11ca8:	b.hi	11c58 <GOMP_doacross_wait@@GOMP_4.5+0x2c8>  // b.pmore
   11cac:	str	w4, [x3, x5, lsl #2]
   11cb0:	add	x5, x5, #0x1
   11cb4:	cmp	w20, w5
   11cb8:	b.hi	11c7c <GOMP_doacross_wait@@GOMP_4.5+0x2ec>  // b.pmore
   11cbc:	stp	x27, x28, [sp, #80]
   11cc0:	ldr	w0, [x22]
   11cc4:	mov	w24, w24
   11cc8:	cmp	w0, #0x1
   11ccc:	b.eq	11ce8 <GOMP_doacross_wait@@GOMP_4.5+0x358>  // b.none
   11cd0:	cmp	w0, #0x3
   11cd4:	ldr	x24, [x23]
   11cd8:	b.eq	11ce8 <GOMP_doacross_wait@@GOMP_4.5+0x358>  // b.none
   11cdc:	sub	x24, x24, #0x1
   11ce0:	udiv	x24, x24, x21
   11ce4:	add	x24, x24, #0x1
   11ce8:	cmp	w19, #0x40
   11cec:	b.ls	11df4 <GOMP_doacross_wait@@GOMP_4.5+0x464>  // b.plast
   11cf0:	mov	x27, #0x3f                  	// #63
   11cf4:	mov	x28, #0x77                  	// #119
   11cf8:	add	x27, x27, w20, uxtw #3
   11cfc:	and	x27, x27, #0xffffffffffffffc0
   11d00:	mul	x1, x24, x27
   11d04:	str	x1, [sp, #104]
   11d08:	add	x0, x1, x28
   11d0c:	bl	b2f8 <fprintf@plt+0x2838>
   11d10:	add	x28, x0, x28
   11d14:	and	x28, x28, #0xffffffffffffffc0
   11d18:	stp	x21, x27, [x0]
   11d1c:	mov	x25, x0
   11d20:	str	w20, [x0, #16]
   11d24:	strb	wzr, [x0, #20]
   11d28:	str	x28, [x0, #24]
   11d2c:	str	xzr, [x0, #40]
   11d30:	ldr	x1, [sp, #104]
   11d34:	cbnz	x26, 11e78 <GOMP_doacross_wait@@GOMP_4.5+0x4e8>
   11d38:	str	xzr, [x0, #48]
   11d3c:	cmp	w19, #0x40
   11d40:	b.ls	11e04 <GOMP_doacross_wait@@GOMP_4.5+0x474>  // b.plast
   11d44:	ubfiz	x20, x20, #3, #32
   11d48:	mov	x26, #0x0                   	// #0
   11d4c:	mov	x19, #0x0                   	// #0
   11d50:	cbz	x24, 11d7c <GOMP_doacross_wait@@GOMP_4.5+0x3ec>
   11d54:	nop
   11d58:	ldr	x0, [x25, #24]
   11d5c:	add	x19, x19, #0x1
   11d60:	mov	x2, x20
   11d64:	mov	w1, #0x0                   	// #0
   11d68:	add	x0, x0, x26
   11d6c:	bl	8770 <memset@plt>
   11d70:	add	x26, x26, x27
   11d74:	cmp	x24, x19
   11d78:	b.ne	11d58 <GOMP_doacross_wait@@GOMP_4.5+0x3c8>  // b.any
   11d7c:	ldr	w0, [x22]
   11d80:	cmp	x21, #0x0
   11d84:	ccmp	w0, #0x1, #0x0, eq  // eq = none
   11d88:	b.eq	11e9c <GOMP_doacross_wait@@GOMP_4.5+0x50c>  // b.none
   11d8c:	ldp	x23, x24, [sp, #48]
   11d90:	ldp	x27, x28, [sp, #80]
   11d94:	str	x25, [x22, #32]
   11d98:	ldp	x19, x20, [sp, #16]
   11d9c:	ldp	x21, x22, [sp, #32]
   11da0:	ldp	x25, x26, [sp, #64]
   11da4:	ldp	x29, x30, [sp], #368
   11da8:	ret
   11dac:	ldp	x23, x24, [sp, #48]
   11db0:	cbnz	x26, 11dcc <GOMP_doacross_wait@@GOMP_4.5+0x43c>
   11db4:	str	xzr, [x22, #32]
   11db8:	ldp	x19, x20, [sp, #16]
   11dbc:	ldp	x21, x22, [sp, #32]
   11dc0:	ldp	x25, x26, [sp, #64]
   11dc4:	ldp	x29, x30, [sp], #368
   11dc8:	ret
   11dcc:	add	x0, x26, #0x38
   11dd0:	bl	b330 <fprintf@plt+0x2870>
   11dd4:	add	x1, x0, #0x38
   11dd8:	str	x1, [x0, #48]
   11ddc:	str	x0, [x22, #32]
   11de0:	ldp	x19, x20, [sp, #16]
   11de4:	ldp	x21, x22, [sp, #32]
   11de8:	ldp	x25, x26, [sp, #64]
   11dec:	ldp	x29, x30, [sp], #368
   11df0:	ret
   11df4:	mov	x28, #0x77                  	// #119
   11df8:	mov	x27, #0x40                  	// #64
   11dfc:	add	x28, x28, w20, uxtw #2
   11e00:	b	11d00 <GOMP_doacross_wait@@GOMP_4.5+0x370>
   11e04:	mov	w0, #0x1                   	// #1
   11e08:	strb	w0, [x25, #20]
   11e0c:	cbz	w20, 11e50 <GOMP_doacross_wait@@GOMP_4.5+0x4c0>
   11e10:	sub	w2, w20, #0x1
   11e14:	add	x3, sp, #0x70
   11e18:	mvn	x5, x2
   11e1c:	mov	x1, #0x0                   	// #0
   11e20:	lsl	x2, x2, #2
   11e24:	mov	w0, #0x0                   	// #0
   11e28:	add	x4, x2, #0x38
   11e2c:	lsl	x5, x5, #2
   11e30:	add	x4, x25, x4
   11e34:	add	x3, x3, x2
   11e38:	ldr	w2, [x3, x1]
   11e3c:	str	w0, [x4, x1]
   11e40:	sub	x1, x1, #0x4
   11e44:	cmp	x5, x1
   11e48:	add	w0, w0, w2
   11e4c:	b.ne	11e38 <GOMP_doacross_wait@@GOMP_4.5+0x4a8>  // b.any
   11e50:	cbz	x24, 11d7c <GOMP_doacross_wait@@GOMP_4.5+0x3ec>
   11e54:	ldr	x1, [x25, #24]
   11e58:	mov	x0, #0x0                   	// #0
   11e5c:	nop
   11e60:	str	xzr, [x1]
   11e64:	add	x0, x0, #0x1
   11e68:	cmp	x24, x0
   11e6c:	add	x1, x1, x27
   11e70:	b.ne	11e60 <GOMP_doacross_wait@@GOMP_4.5+0x4d0>  // b.any
   11e74:	b	11d7c <GOMP_doacross_wait@@GOMP_4.5+0x3ec>
   11e78:	add	x0, x28, x1
   11e7c:	mov	x2, x26
   11e80:	mov	w1, #0x0                   	// #0
   11e84:	str	x0, [x25, #48]
   11e88:	bl	8770 <memset@plt>
   11e8c:	b	11d3c <GOMP_doacross_wait@@GOMP_4.5+0x3ac>
   11e90:	mov	w19, #0x41                  	// #65
   11e94:	stp	x27, x28, [sp, #80]
   11e98:	b	11cc0 <GOMP_doacross_wait@@GOMP_4.5+0x330>
   11e9c:	ldr	x1, [x23]
   11ea0:	udiv	x0, x1, x24
   11ea4:	msub	x24, x0, x24, x1
   11ea8:	str	x0, [x25]
   11eac:	madd	x0, x0, x24, x24
   11eb0:	str	x24, [x25, #32]
   11eb4:	str	x0, [x25, #40]
   11eb8:	b	11d8c <GOMP_doacross_wait@@GOMP_4.5+0x3fc>
   11ebc:	mov	w19, w20
   11ec0:	stp	x27, x28, [sp, #80]
   11ec4:	b	11cc0 <GOMP_doacross_wait@@GOMP_4.5+0x330>

0000000000011ec8 <GOMP_doacross_ull_post@@GOMP_4.5>:
   11ec8:	adrp	x1, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   11ecc:	ldr	x1, [x1, #4016]
   11ed0:	mrs	x2, tpidr_el0
   11ed4:	add	x1, x2, x1
   11ed8:	ldr	x2, [x1, #24]
   11edc:	ldr	x3, [x2, #32]
   11ee0:	cbz	x3, 12034 <GOMP_doacross_ull_post@@GOMP_4.5+0x16c>
   11ee4:	ldr	x4, [x3, #24]
   11ee8:	cbz	x4, 12034 <GOMP_doacross_ull_post@@GOMP_4.5+0x16c>
   11eec:	ldr	w2, [x2]
   11ef0:	cmp	w2, #0x1
   11ef4:	b.ne	12094 <GOMP_doacross_ull_post@@GOMP_4.5+0x1cc>  // b.any
   11ef8:	ldr	w1, [x1, #40]
   11efc:	ldrb	w2, [x3, #20]
   11f00:	cbz	w2, 1203c <GOMP_doacross_ull_post@@GOMP_4.5+0x174>
   11f04:	ldr	x5, [x0]
   11f08:	ldr	x9, [x3, #8]
   11f0c:	ldr	w2, [x3, #56]
   11f10:	ldr	w8, [x3, #16]
   11f14:	madd	x9, x1, x9, x4
   11f18:	cmp	w8, #0x1
   11f1c:	lsl	x2, x5, x2
   11f20:	b.ls	12014 <GOMP_doacross_ull_post@@GOMP_4.5+0x14c>  // b.plast
   11f24:	sub	w4, w8, #0x2
   11f28:	sub	w6, w8, #0x1
   11f2c:	cmp	w4, #0x3
   11f30:	b.ls	120ac <GOMP_doacross_ull_post@@GOMP_4.5+0x1e4>  // b.plast
   11f34:	add	x1, x0, #0x8
   11f38:	lsr	w5, w6, #2
   11f3c:	mov	w7, #0x20                  	// #32
   11f40:	add	x4, x3, #0x3c
   11f44:	movi	v3.4s, #0x0
   11f48:	umaddl	x5, w5, w7, x1
   11f4c:	nop
   11f50:	ldr	q1, [x4], #16
   11f54:	ldp	q0, q2, [x1]
   11f58:	add	x1, x1, #0x20
   11f5c:	uxtl	v4.2d, v1.2s
   11f60:	cmp	x1, x5
   11f64:	uxtl2	v1.2d, v1.4s
   11f68:	sshl	v0.2d, v0.2d, v4.2d
   11f6c:	sshl	v1.2d, v2.2d, v1.2d
   11f70:	orr	v0.16b, v0.16b, v1.16b
   11f74:	orr	v3.16b, v3.16b, v0.16b
   11f78:	b.ne	11f50 <GOMP_doacross_ull_post@@GOMP_4.5+0x88>  // b.any
   11f7c:	movi	v0.4s, #0x0
   11f80:	and	w4, w6, #0xfffffffc
   11f84:	cmp	w4, w6
   11f88:	add	w4, w4, #0x1
   11f8c:	ext	v0.16b, v3.16b, v0.16b, #8
   11f90:	orr	v3.16b, v3.16b, v0.16b
   11f94:	mov	x1, v3.d[0]
   11f98:	orr	x2, x2, x1
   11f9c:	b.eq	12014 <GOMP_doacross_ull_post@@GOMP_4.5+0x14c>  // b.none
   11fa0:	add	x6, x3, w4, uxtw #2
   11fa4:	add	w7, w4, #0x1
   11fa8:	ldr	x5, [x0, w4, uxtw #3]
   11fac:	cmp	w8, w7
   11fb0:	ldr	w1, [x6, #56]
   11fb4:	lsl	x5, x5, x1
   11fb8:	orr	x2, x2, x5
   11fbc:	b.ls	12014 <GOMP_doacross_ull_post@@GOMP_4.5+0x14c>  // b.plast
   11fc0:	add	x1, x3, w7, uxtw #2
   11fc4:	add	w6, w4, #0x2
   11fc8:	ldr	x5, [x0, w7, uxtw #3]
   11fcc:	cmp	w8, w6
   11fd0:	ldr	w1, [x1, #56]
   11fd4:	lsl	x5, x5, x1
   11fd8:	orr	x2, x2, x5
   11fdc:	b.ls	12014 <GOMP_doacross_ull_post@@GOMP_4.5+0x14c>  // b.plast
   11fe0:	add	x1, x3, w6, uxtw #2
   11fe4:	add	w4, w4, #0x3
   11fe8:	ldr	x5, [x0, w6, uxtw #3]
   11fec:	cmp	w8, w4
   11ff0:	ldr	w1, [x1, #56]
   11ff4:	lsl	x5, x5, x1
   11ff8:	orr	x2, x2, x5
   11ffc:	b.ls	12014 <GOMP_doacross_ull_post@@GOMP_4.5+0x14c>  // b.plast
   12000:	add	x3, x3, w4, uxtw #2
   12004:	ldr	x0, [x0, w4, uxtw #3]
   12008:	ldr	w1, [x3, #56]
   1200c:	lsl	x0, x0, x1
   12010:	orr	x2, x2, x0
   12014:	add	x2, x2, #0x1
   12018:	ldar	x0, [x9]
   1201c:	cmp	x0, x2
   12020:	b.eq	1202c <GOMP_doacross_ull_post@@GOMP_4.5+0x164>  // b.none
   12024:	stlr	x2, [x9]
   12028:	ret
   1202c:	dmb	ish
   12030:	ret
   12034:	dmb	ish
   12038:	ret
   1203c:	dmb	ishld
   12040:	ldr	w4, [x3, #16]
   12044:	ldr	x2, [x3, #8]
   12048:	ldr	x3, [x3, #24]
   1204c:	mul	x2, x1, x2
   12050:	sub	w1, w4, #0x1
   12054:	cbz	w4, 12028 <GOMP_doacross_ull_post@@GOMP_4.5+0x160>
   12058:	ubfiz	x1, x1, #3, #32
   1205c:	add	x2, x2, x1
   12060:	add	x1, x0, x1
   12064:	add	x3, x3, x2
   12068:	ldr	x2, [x1]
   1206c:	add	x2, x2, #0x1
   12070:	ldr	x4, [x3]
   12074:	cmp	x2, x4
   12078:	b.eq	12080 <GOMP_doacross_ull_post@@GOMP_4.5+0x1b8>  // b.none
   1207c:	stlr	x2, [x3]
   12080:	cmp	x1, x0
   12084:	sub	x3, x3, #0x8
   12088:	sub	x1, x1, #0x8
   1208c:	b.ne	12068 <GOMP_doacross_ull_post@@GOMP_4.5+0x1a0>  // b.any
   12090:	ret
   12094:	cmp	w2, #0x3
   12098:	ldr	x1, [x0]
   1209c:	b.eq	11efc <GOMP_doacross_ull_post@@GOMP_4.5+0x34>  // b.none
   120a0:	ldr	x2, [x3]
   120a4:	udiv	x1, x1, x2
   120a8:	b	11efc <GOMP_doacross_ull_post@@GOMP_4.5+0x34>
   120ac:	mov	w4, #0x1                   	// #1
   120b0:	b	11fa0 <GOMP_doacross_ull_post@@GOMP_4.5+0xd8>
   120b4:	nop

00000000000120b8 <GOMP_doacross_ull_wait@@GOMP_4.5>:
   120b8:	sub	sp, sp, #0x60
   120bc:	adrp	x9, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   120c0:	ldr	x9, [x9, #4016]
   120c4:	mrs	x8, tpidr_el0
   120c8:	stp	x1, x2, [sp, #40]
   120cc:	add	x1, x8, x9
   120d0:	stp	x3, x4, [sp, #56]
   120d4:	ldr	x3, [x1, #24]
   120d8:	stp	x5, x6, [sp, #72]
   120dc:	str	x7, [sp, #88]
   120e0:	ldr	x2, [x3, #32]
   120e4:	cbz	x2, 122dc <GOMP_doacross_ull_wait@@GOMP_4.5+0x224>
   120e8:	ldr	x5, [x2, #24]
   120ec:	cbz	x5, 122dc <GOMP_doacross_ull_wait@@GOMP_4.5+0x224>
   120f0:	ldr	w4, [x3]
   120f4:	cmp	w4, #0x1
   120f8:	b.ne	122fc <GOMP_doacross_ull_wait@@GOMP_4.5+0x244>  // b.any
   120fc:	ldr	x6, [x3, #8]
   12100:	cbz	x6, 122b4 <GOMP_doacross_ull_wait@@GOMP_4.5+0x1fc>
   12104:	ldr	x3, [x1, #16]
   12108:	udiv	x1, x0, x6
   1210c:	ldr	w3, [x3]
   12110:	udiv	x6, x1, x3
   12114:	msub	x6, x6, x3, x1
   12118:	ldrb	w7, [x2, #20]
   1211c:	add	x11, sp, #0x20
   12120:	ldr	x1, [x2, #8]
   12124:	mov	w10, #0xffffffc8            	// #-56
   12128:	mul	x6, x6, x1
   1212c:	add	x1, x0, #0x1
   12130:	cbz	w7, 12224 <GOMP_doacross_ull_wait@@GOMP_4.5+0x16c>
   12134:	add	x8, sp, #0x60
   12138:	ldr	w1, [x2, #56]
   1213c:	add	x4, sp, #0x20
   12140:	mov	w3, #0xffffffc8            	// #-56
   12144:	stp	x8, x8, [sp]
   12148:	add	x5, x5, x6
   1214c:	ldr	w8, [x2, #16]
   12150:	str	x4, [sp, #16]
   12154:	lsl	x0, x0, x1
   12158:	stp	w3, wzr, [sp, #24]
   1215c:	cmp	w8, #0x1
   12160:	b.ls	121f0 <GOMP_doacross_ull_wait@@GOMP_4.5+0x138>  // b.plast
   12164:	sub	w8, w8, #0x2
   12168:	add	x4, x2, #0x40
   1216c:	add	x1, x2, #0x3c
   12170:	mov	w9, #0x0                   	// #0
   12174:	add	x8, x4, w8, uxtw #2
   12178:	add	x4, sp, #0x60
   1217c:	mov	x11, x4
   12180:	mov	w10, #0x0                   	// #0
   12184:	b	121ac <GOMP_doacross_ull_wait@@GOMP_4.5+0xf4>
   12188:	mov	x2, x4
   1218c:	ldr	w6, [x1], #4
   12190:	mov	w9, w7
   12194:	add	x4, x4, #0x8
   12198:	cmp	x1, x8
   1219c:	ldr	x2, [x2]
   121a0:	lsl	x2, x2, x6
   121a4:	orr	x0, x0, x2
   121a8:	b.eq	121e0 <GOMP_doacross_ull_wait@@GOMP_4.5+0x128>  // b.none
   121ac:	add	w6, w3, #0x8
   121b0:	tbz	w3, #31, 12188 <GOMP_doacross_ull_wait@@GOMP_4.5+0xd0>
   121b4:	add	x2, x11, w3, sxtw
   121b8:	mov	w10, w7
   121bc:	mov	w3, w6
   121c0:	cmp	w6, #0x0
   121c4:	b.gt	12188 <GOMP_doacross_ull_wait@@GOMP_4.5+0xd0>
   121c8:	ldr	x2, [x2]
   121cc:	ldr	w6, [x1], #4
   121d0:	cmp	x1, x8
   121d4:	lsl	x2, x2, x6
   121d8:	orr	x0, x0, x2
   121dc:	b.ne	121ac <GOMP_doacross_ull_wait@@GOMP_4.5+0xf4>  // b.any
   121e0:	cbz	w10, 121e8 <GOMP_doacross_ull_wait@@GOMP_4.5+0x130>
   121e4:	str	w3, [sp, #24]
   121e8:	cbz	w9, 121f0 <GOMP_doacross_ull_wait@@GOMP_4.5+0x138>
   121ec:	str	x4, [sp]
   121f0:	ldar	x1, [x5]
   121f4:	cmp	x1, x0
   121f8:	b.hi	1220c <GOMP_doacross_ull_wait@@GOMP_4.5+0x154>  // b.pmore
   121fc:	nop
   12200:	ldr	x1, [x5]
   12204:	cmp	x1, x0
   12208:	b.ls	12200 <GOMP_doacross_ull_wait@@GOMP_4.5+0x148>  // b.plast
   1220c:	dmb	ish
   12210:	add	sp, sp, #0x60
   12214:	ret
   12218:	mov	w0, w7
   1221c:	cmp	w7, w0
   12220:	b.eq	122dc <GOMP_doacross_ull_wait@@GOMP_4.5+0x224>  // b.none
   12224:	ldr	w7, [x2, #16]
   12228:	add	x0, sp, #0x60
   1222c:	stp	x0, x0, [sp]
   12230:	mov	w0, w7
   12234:	str	x11, [sp, #16]
   12238:	stp	w10, wzr, [sp, #24]
   1223c:	cbz	w7, 1221c <GOMP_doacross_ull_wait@@GOMP_4.5+0x164>
   12240:	mov	w0, #0x0                   	// #0
   12244:	b	1227c <GOMP_doacross_ull_wait@@GOMP_4.5+0x1c4>
   12248:	and	x8, x8, #0xfffffffffffffff8
   1224c:	str	x8, [sp]
   12250:	ldr	x4, [x3]
   12254:	add	x4, x4, #0x1
   12258:	add	x3, x6, w0, uxtw #3
   1225c:	add	x3, x5, x3
   12260:	ldr	x3, [x3]
   12264:	cmp	x4, x3
   12268:	b.cc	12218 <GOMP_doacross_ull_wait@@GOMP_4.5+0x160>  // b.lo, b.ul, b.last
   1226c:	b.hi	1221c <GOMP_doacross_ull_wait@@GOMP_4.5+0x164>  // b.pmore
   12270:	add	w0, w0, #0x1
   12274:	cmp	w7, w0
   12278:	b.ls	1221c <GOMP_doacross_ull_wait@@GOMP_4.5+0x164>  // b.plast
   1227c:	mov	x4, x1
   12280:	cbz	w0, 12258 <GOMP_doacross_ull_wait@@GOMP_4.5+0x1a0>
   12284:	ldr	w4, [sp, #24]
   12288:	ldr	x3, [sp]
   1228c:	add	w9, w4, #0x8
   12290:	add	x8, x3, #0xf
   12294:	tbz	w4, #31, 12248 <GOMP_doacross_ull_wait@@GOMP_4.5+0x190>
   12298:	str	w9, [sp, #24]
   1229c:	add	x8, x3, #0xf
   122a0:	cmp	w9, #0x0
   122a4:	and	x8, x8, #0xfffffffffffffff8
   122a8:	b.le	122d0 <GOMP_doacross_ull_wait@@GOMP_4.5+0x218>
   122ac:	str	x8, [sp]
   122b0:	b	12250 <GOMP_doacross_ull_wait@@GOMP_4.5+0x198>
   122b4:	ldr	x1, [x2, #40]
   122b8:	ldr	x3, [x2]
   122bc:	cmp	x1, x0
   122c0:	b.ls	122e8 <GOMP_doacross_ull_wait@@GOMP_4.5+0x230>  // b.plast
   122c4:	add	x6, x3, #0x1
   122c8:	udiv	x6, x0, x6
   122cc:	b	12118 <GOMP_doacross_ull_wait@@GOMP_4.5+0x60>
   122d0:	ldr	x3, [sp, #8]
   122d4:	add	x3, x3, w4, sxtw
   122d8:	b	12250 <GOMP_doacross_ull_wait@@GOMP_4.5+0x198>
   122dc:	dmb	ish
   122e0:	add	sp, sp, #0x60
   122e4:	ret
   122e8:	sub	x6, x0, x1
   122ec:	ldr	x1, [x2, #32]
   122f0:	udiv	x6, x6, x3
   122f4:	add	x6, x6, x1
   122f8:	b	12118 <GOMP_doacross_ull_wait@@GOMP_4.5+0x60>
   122fc:	cmp	w4, #0x3
   12300:	mov	x6, x0
   12304:	b.eq	12118 <GOMP_doacross_ull_wait@@GOMP_4.5+0x60>  // b.none
   12308:	ldr	x6, [x2]
   1230c:	udiv	x6, x0, x6
   12310:	b	12118 <GOMP_doacross_ull_wait@@GOMP_4.5+0x60>
   12314:	nop
   12318:	stp	x29, x30, [sp, #-64]!
   1231c:	mov	x29, sp
   12320:	stp	x21, x22, [sp, #32]
   12324:	mrs	x21, tpidr_el0
   12328:	adrp	x22, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1232c:	ldr	x22, [x22, #4016]
   12330:	stp	x19, x20, [sp, #16]
   12334:	adrp	x20, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   12338:	add	x3, x21, x22
   1233c:	add	x20, x20, #0x2b0
   12340:	ldr	x2, [x3, #80]
   12344:	cmp	x2, #0x0
   12348:	add	x2, x2, #0x90
   1234c:	csel	x20, x20, x2, eq  // eq = none
   12350:	cmp	w0, #0x1
   12354:	b.eq	123bc <GOMP_doacross_ull_wait@@GOMP_4.5+0x304>  // b.none
   12358:	ldr	w2, [x3, #48]
   1235c:	str	x23, [sp, #48]
   12360:	mov	w23, w1
   12364:	cbz	w2, 12370 <GOMP_doacross_ull_wait@@GOMP_4.5+0x2b8>
   12368:	ldrb	w3, [x20, #25]
   1236c:	cbz	w3, 123b8 <GOMP_doacross_ull_wait@@GOMP_4.5+0x300>
   12370:	adrp	x3, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   12374:	ldr	x3, [x3, #728]
   12378:	cmp	x3, w2, uxtw
   1237c:	b.ls	123b8 <GOMP_doacross_ull_wait@@GOMP_4.5+0x300>  // b.plast
   12380:	mov	w19, w0
   12384:	cbnz	w0, 1238c <GOMP_doacross_ull_wait@@GOMP_4.5+0x2d4>
   12388:	ldr	w19, [x20]
   1238c:	ldrb	w0, [x20, #24]
   12390:	cbnz	w0, 123d4 <GOMP_doacross_ull_wait@@GOMP_4.5+0x31c>
   12394:	ldr	w0, [x20, #20]
   12398:	cmn	w0, #0x1
   1239c:	b.ne	123f0 <GOMP_doacross_ull_wait@@GOMP_4.5+0x338>  // b.any
   123a0:	mov	w0, w19
   123a4:	ldp	x19, x20, [sp, #16]
   123a8:	ldp	x21, x22, [sp, #32]
   123ac:	ldr	x23, [sp, #48]
   123b0:	ldp	x29, x30, [sp], #64
   123b4:	ret
   123b8:	ldr	x23, [sp, #48]
   123bc:	mov	w19, #0x1                   	// #1
   123c0:	mov	w0, w19
   123c4:	ldp	x19, x20, [sp, #16]
   123c8:	ldp	x21, x22, [sp, #32]
   123cc:	ldp	x29, x30, [sp], #64
   123d0:	ret
   123d4:	bl	1cac0 <omp_test_nest_lock@OMP_1.0+0x4d8>
   123d8:	cmp	w19, w0
   123dc:	csel	w19, w19, w0, ls  // ls = plast
   123e0:	cmp	w23, #0x0
   123e4:	ccmp	w19, w23, #0x0, ne  // ne = any
   123e8:	csel	w19, w19, w23, ls  // ls = plast
   123ec:	b	12394 <GOMP_doacross_ull_wait@@GOMP_4.5+0x2dc>
   123f0:	cmp	w19, #0x1
   123f4:	b.eq	123b8 <GOMP_doacross_ull_wait@@GOMP_4.5+0x300>  // b.none
   123f8:	add	x21, x21, x22
   123fc:	ldr	x1, [x21, #16]
   12400:	ldr	x10, [x21, #96]
   12404:	cbz	x1, 124bc <GOMP_doacross_ull_wait@@GOMP_4.5+0x404>
   12408:	cbz	x10, 124d8 <GOMP_doacross_ull_wait@@GOMP_4.5+0x420>
   1240c:	ldr	x1, [x10, #24]
   12410:	mov	x6, #0x1                   	// #1
   12414:	mov	w8, w19
   12418:	add	x7, x10, #0x18
   1241c:	sub	x2, x6, x1
   12420:	sub	w3, w6, w1
   12424:	add	x2, x2, w0, uxtw
   12428:	sub	x5, x1, #0x1
   1242c:	add	w9, w3, w0
   12430:	cmp	x2, x8
   12434:	b.cs	12484 <GOMP_doacross_ull_wait@@GOMP_4.5+0x3cc>  // b.hs, b.nlast
   12438:	add	w0, w3, w0
   1243c:	add	x5, x5, x9
   12440:	ldxr	x2, [x7]
   12444:	cmp	x2, x1
   12448:	b.ne	12454 <GOMP_doacross_ull_wait@@GOMP_4.5+0x39c>  // b.any
   1244c:	stlxr	w3, x5, [x7]
   12450:	cbnz	w3, 12440 <GOMP_doacross_ull_wait@@GOMP_4.5+0x388>
   12454:	dmb	ish
   12458:	cmp	x1, x2
   1245c:	b.eq	124b0 <GOMP_doacross_ull_wait@@GOMP_4.5+0x3f8>  // b.none
   12460:	ldr	w0, [x20, #20]
   12464:	ldr	x1, [x10, #24]
   12468:	sub	x2, x6, x1
   1246c:	sub	w3, w6, w1
   12470:	add	x2, x2, w0, uxtw
   12474:	sub	x5, x1, #0x1
   12478:	add	w9, w3, w0
   1247c:	cmp	x2, x8
   12480:	b.cc	12438 <GOMP_doacross_ull_wait@@GOMP_4.5+0x380>  // b.lo, b.ul, b.last
   12484:	add	x4, x5, x8
   12488:	ldxr	x0, [x7]
   1248c:	cmp	x0, x1
   12490:	b.ne	1249c <GOMP_doacross_ull_wait@@GOMP_4.5+0x3e4>  // b.any
   12494:	stlxr	w2, x4, [x7]
   12498:	cbnz	w2, 12488 <GOMP_doacross_ull_wait@@GOMP_4.5+0x3d0>
   1249c:	dmb	ish
   124a0:	cmp	x0, x1
   124a4:	b.eq	123a0 <GOMP_doacross_ull_wait@@GOMP_4.5+0x2e8>  // b.none
   124a8:	ldr	w0, [x20, #20]
   124ac:	b	12464 <GOMP_doacross_ull_wait@@GOMP_4.5+0x3ac>
   124b0:	mov	w19, w0
   124b4:	ldr	x23, [sp, #48]
   124b8:	b	123c0 <GOMP_doacross_ull_wait@@GOMP_4.5+0x308>
   124bc:	cmp	w19, w0
   124c0:	csel	w19, w19, w0, ls  // ls = plast
   124c4:	cbz	x10, 123a0 <GOMP_doacross_ull_wait@@GOMP_4.5+0x2e8>
   124c8:	mov	w0, w19
   124cc:	ldr	x23, [sp, #48]
   124d0:	str	x0, [x10, #24]
   124d4:	b	123c0 <GOMP_doacross_ull_wait@@GOMP_4.5+0x308>
   124d8:	cmp	w19, w0
   124dc:	csel	w19, w19, w0, ls  // ls = plast
   124e0:	ldr	x23, [sp, #48]
   124e4:	b	123c0 <GOMP_doacross_ull_wait@@GOMP_4.5+0x308>

00000000000124e8 <GOMP_parallel_start@@GOMP_1.0>:
   124e8:	stp	x29, x30, [sp, #-64]!
   124ec:	mov	x29, sp
   124f0:	stp	x23, x24, [sp, #48]
   124f4:	mov	x24, x0
   124f8:	adrp	x23, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   124fc:	ldr	x23, [x23, #4016]
   12500:	stp	x21, x22, [sp, #32]
   12504:	mrs	x22, tpidr_el0
   12508:	add	x3, x22, x23
   1250c:	stp	x19, x20, [sp, #16]
   12510:	mov	w19, w2
   12514:	adrp	x20, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   12518:	ldr	x2, [x3, #80]
   1251c:	add	x20, x20, #0x2b0
   12520:	mov	x21, x1
   12524:	cmp	x2, #0x0
   12528:	add	x2, x2, #0x90
   1252c:	csel	x20, x20, x2, eq  // eq = none
   12530:	cmp	w19, #0x1
   12534:	b.eq	12638 <GOMP_parallel_start@@GOMP_1.0+0x150>  // b.none
   12538:	ldr	w1, [x3, #48]
   1253c:	cbz	w1, 12548 <GOMP_parallel_start@@GOMP_1.0+0x60>
   12540:	ldrb	w0, [x20, #25]
   12544:	cbz	w0, 12638 <GOMP_parallel_start@@GOMP_1.0+0x150>
   12548:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1254c:	ldr	x0, [x0, #728]
   12550:	cmp	x0, w1, uxtw
   12554:	b.ls	12638 <GOMP_parallel_start@@GOMP_1.0+0x150>  // b.plast
   12558:	cbnz	w19, 12560 <GOMP_parallel_start@@GOMP_1.0+0x78>
   1255c:	ldr	w19, [x20]
   12560:	ldrb	w0, [x20, #24]
   12564:	cbnz	w0, 12670 <GOMP_parallel_start@@GOMP_1.0+0x188>
   12568:	ldr	w0, [x20, #20]
   1256c:	cmn	w0, #0x1
   12570:	b.eq	1263c <GOMP_parallel_start@@GOMP_1.0+0x154>  // b.none
   12574:	cmp	w19, #0x1
   12578:	b.eq	12638 <GOMP_parallel_start@@GOMP_1.0+0x150>  // b.none
   1257c:	add	x22, x22, x23
   12580:	ldr	x1, [x22, #16]
   12584:	ldr	x10, [x22, #96]
   12588:	cbz	x1, 12688 <GOMP_parallel_start@@GOMP_1.0+0x1a0>
   1258c:	cbz	x10, 126a0 <GOMP_parallel_start@@GOMP_1.0+0x1b8>
   12590:	ldr	x1, [x10, #24]
   12594:	mov	x6, #0x1                   	// #1
   12598:	mov	w8, w19
   1259c:	add	x7, x10, #0x18
   125a0:	sub	x2, x6, x1
   125a4:	sub	w3, w6, w1
   125a8:	add	x2, x2, w0, uxtw
   125ac:	sub	x5, x1, #0x1
   125b0:	add	w9, w3, w0
   125b4:	cmp	x2, x8
   125b8:	b.cs	1260c <GOMP_parallel_start@@GOMP_1.0+0x124>  // b.hs, b.nlast
   125bc:	nop
   125c0:	add	w0, w3, w0
   125c4:	add	x5, x5, x9
   125c8:	ldxr	x2, [x7]
   125cc:	cmp	x2, x1
   125d0:	b.ne	125dc <GOMP_parallel_start@@GOMP_1.0+0xf4>  // b.any
   125d4:	stlxr	w3, x5, [x7]
   125d8:	cbnz	w3, 125c8 <GOMP_parallel_start@@GOMP_1.0+0xe0>
   125dc:	dmb	ish
   125e0:	cmp	x1, x2
   125e4:	b.eq	12680 <GOMP_parallel_start@@GOMP_1.0+0x198>  // b.none
   125e8:	ldr	w0, [x20, #20]
   125ec:	ldr	x1, [x10, #24]
   125f0:	sub	x2, x6, x1
   125f4:	sub	w3, w6, w1
   125f8:	add	x2, x2, w0, uxtw
   125fc:	sub	x5, x1, #0x1
   12600:	add	w9, w3, w0
   12604:	cmp	x2, x8
   12608:	b.cc	125c0 <GOMP_parallel_start@@GOMP_1.0+0xd8>  // b.lo, b.ul, b.last
   1260c:	add	x4, x5, x8
   12610:	ldxr	x0, [x7]
   12614:	cmp	x0, x1
   12618:	b.ne	12624 <GOMP_parallel_start@@GOMP_1.0+0x13c>  // b.any
   1261c:	stlxr	w2, x4, [x7]
   12620:	cbnz	w2, 12610 <GOMP_parallel_start@@GOMP_1.0+0x128>
   12624:	dmb	ish
   12628:	cmp	x1, x0
   1262c:	b.eq	1263c <GOMP_parallel_start@@GOMP_1.0+0x154>  // b.none
   12630:	ldr	w0, [x20, #20]
   12634:	b	125ec <GOMP_parallel_start@@GOMP_1.0+0x104>
   12638:	mov	w19, #0x1                   	// #1
   1263c:	mov	w0, w19
   12640:	bl	1a4c0 <omp_in_final@@OMP_3.1+0x1d0>
   12644:	mov	w2, w19
   12648:	mov	x4, x0
   1264c:	mov	x1, x21
   12650:	mov	x0, x24
   12654:	ldp	x19, x20, [sp, #16]
   12658:	mov	x5, #0x0                   	// #0
   1265c:	ldp	x21, x22, [sp, #32]
   12660:	mov	w3, #0x0                   	// #0
   12664:	ldp	x23, x24, [sp, #48]
   12668:	ldp	x29, x30, [sp], #64
   1266c:	b	1a618 <omp_in_final@@OMP_3.1+0x328>
   12670:	bl	1cac0 <omp_test_nest_lock@OMP_1.0+0x4d8>
   12674:	cmp	w19, w0
   12678:	csel	w19, w19, w0, ls  // ls = plast
   1267c:	b	12568 <GOMP_parallel_start@@GOMP_1.0+0x80>
   12680:	mov	w19, w0
   12684:	b	1263c <GOMP_parallel_start@@GOMP_1.0+0x154>
   12688:	cmp	w19, w0
   1268c:	csel	w19, w19, w0, ls  // ls = plast
   12690:	cbz	x10, 1263c <GOMP_parallel_start@@GOMP_1.0+0x154>
   12694:	mov	w0, w19
   12698:	str	x0, [x10, #24]
   1269c:	b	1263c <GOMP_parallel_start@@GOMP_1.0+0x154>
   126a0:	cmp	w19, w0
   126a4:	csel	w19, w19, w0, ls  // ls = plast
   126a8:	b	1263c <GOMP_parallel_start@@GOMP_1.0+0x154>
   126ac:	nop

00000000000126b0 <GOMP_parallel_end@@GOMP_1.0>:
   126b0:	stp	x29, x30, [sp, #-32]!
   126b4:	mrs	x0, tpidr_el0
   126b8:	adrp	x1, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   126bc:	mov	x29, sp
   126c0:	stp	x19, x20, [sp, #16]
   126c4:	add	x1, x1, #0x2b0
   126c8:	adrp	x19, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   126cc:	ldr	x19, [x19, #4016]
   126d0:	add	x19, x0, x19
   126d4:	ldr	x0, [x19, #80]
   126d8:	cmp	x0, #0x0
   126dc:	add	x0, x0, #0x90
   126e0:	csel	x0, x1, x0, eq  // eq = none
   126e4:	ldr	w0, [x0, #20]
   126e8:	cmn	w0, #0x1
   126ec:	b.ne	126fc <GOMP_parallel_end@@GOMP_1.0+0x4c>  // b.any
   126f0:	ldp	x19, x20, [sp, #16]
   126f4:	ldp	x29, x30, [sp], #32
   126f8:	b	1b618 <omp_in_final@@OMP_3.1+0x1328>
   126fc:	ldr	x0, [x19, #16]
   12700:	cbz	x0, 126f0 <GOMP_parallel_end@@GOMP_1.0+0x40>
   12704:	ldr	w20, [x0]
   12708:	bl	1b618 <omp_in_final@@OMP_3.1+0x1328>
   1270c:	cmp	w20, #0x1
   12710:	b.ls	12740 <GOMP_parallel_end@@GOMP_1.0+0x90>  // b.plast
   12714:	ldr	x0, [x19, #16]
   12718:	cbz	x0, 1274c <GOMP_parallel_end@@GOMP_1.0+0x9c>
   1271c:	ldr	x0, [x19, #96]
   12720:	mov	x1, #0x1                   	// #1
   12724:	sub	x20, x1, w20, uxtw
   12728:	add	x0, x0, #0x18
   1272c:	ldxr	x1, [x0]
   12730:	add	x1, x1, x20
   12734:	stlxr	w2, x1, [x0]
   12738:	cbnz	w2, 1272c <GOMP_parallel_end@@GOMP_1.0+0x7c>
   1273c:	dmb	ish
   12740:	ldp	x19, x20, [sp, #16]
   12744:	ldp	x29, x30, [sp], #32
   12748:	ret
   1274c:	ldr	x0, [x19, #96]
   12750:	mov	x1, #0x1                   	// #1
   12754:	str	x1, [x0, #24]
   12758:	b	12740 <GOMP_parallel_end@@GOMP_1.0+0x90>
   1275c:	nop

0000000000012760 <GOMP_parallel@@GOMP_4.0>:
   12760:	stp	x29, x30, [sp, #-80]!
   12764:	mov	x29, sp
   12768:	stp	x23, x24, [sp, #48]
   1276c:	mrs	x23, tpidr_el0
   12770:	adrp	x24, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   12774:	ldr	x24, [x24, #4016]
   12778:	stp	x19, x20, [sp, #16]
   1277c:	mov	w19, w2
   12780:	add	x4, x23, x24
   12784:	stp	x21, x22, [sp, #32]
   12788:	adrp	x20, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1278c:	add	x20, x20, #0x2b0
   12790:	ldr	x2, [x4, #80]
   12794:	str	x25, [sp, #64]
   12798:	mov	x21, x1
   1279c:	mov	w22, w3
   127a0:	cmp	x2, #0x0
   127a4:	add	x2, x2, #0x90
   127a8:	csel	x20, x20, x2, eq  // eq = none
   127ac:	mov	x25, x0
   127b0:	cmp	w19, #0x1
   127b4:	b.eq	128b8 <GOMP_parallel@@GOMP_4.0+0x158>  // b.none
   127b8:	ldr	w0, [x4, #48]
   127bc:	cbz	w0, 127c8 <GOMP_parallel@@GOMP_4.0+0x68>
   127c0:	ldrb	w1, [x20, #25]
   127c4:	cbz	w1, 128b8 <GOMP_parallel@@GOMP_4.0+0x158>
   127c8:	adrp	x1, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   127cc:	ldr	x1, [x1, #728]
   127d0:	cmp	x1, w0, uxtw
   127d4:	b.ls	128b8 <GOMP_parallel@@GOMP_4.0+0x158>  // b.plast
   127d8:	cbnz	w19, 127e0 <GOMP_parallel@@GOMP_4.0+0x80>
   127dc:	ldr	w19, [x20]
   127e0:	ldrb	w0, [x20, #24]
   127e4:	cbnz	w0, 12928 <GOMP_parallel@@GOMP_4.0+0x1c8>
   127e8:	ldr	w0, [x20, #20]
   127ec:	cmn	w0, #0x1
   127f0:	b.eq	128bc <GOMP_parallel@@GOMP_4.0+0x15c>  // b.none
   127f4:	cmp	w19, #0x1
   127f8:	b.eq	128b8 <GOMP_parallel@@GOMP_4.0+0x158>  // b.none
   127fc:	add	x1, x23, x24
   12800:	ldr	x2, [x1, #16]
   12804:	ldr	x10, [x1, #96]
   12808:	cbz	x2, 129ac <GOMP_parallel@@GOMP_4.0+0x24c>
   1280c:	cbz	x10, 129c4 <GOMP_parallel@@GOMP_4.0+0x264>
   12810:	ldr	x1, [x10, #24]
   12814:	mov	x6, #0x1                   	// #1
   12818:	mov	w8, w19
   1281c:	add	x7, x10, #0x18
   12820:	sub	x2, x6, x1
   12824:	sub	w3, w6, w1
   12828:	add	x2, x2, w0, uxtw
   1282c:	sub	x5, x1, #0x1
   12830:	add	w9, w3, w0
   12834:	cmp	x2, x8
   12838:	b.cs	1288c <GOMP_parallel@@GOMP_4.0+0x12c>  // b.hs, b.nlast
   1283c:	nop
   12840:	add	w0, w3, w0
   12844:	add	x5, x5, x9
   12848:	ldxr	x2, [x7]
   1284c:	cmp	x2, x1
   12850:	b.ne	1285c <GOMP_parallel@@GOMP_4.0+0xfc>  // b.any
   12854:	stlxr	w3, x5, [x7]
   12858:	cbnz	w3, 12848 <GOMP_parallel@@GOMP_4.0+0xe8>
   1285c:	dmb	ish
   12860:	cmp	x1, x2
   12864:	b.eq	12994 <GOMP_parallel@@GOMP_4.0+0x234>  // b.none
   12868:	ldr	w0, [x20, #20]
   1286c:	ldr	x1, [x10, #24]
   12870:	sub	x2, x6, x1
   12874:	sub	w3, w6, w1
   12878:	add	x2, x2, w0, uxtw
   1287c:	sub	x5, x1, #0x1
   12880:	add	w9, w3, w0
   12884:	cmp	x2, x8
   12888:	b.cc	12840 <GOMP_parallel@@GOMP_4.0+0xe0>  // b.lo, b.ul, b.last
   1288c:	add	x4, x5, x8
   12890:	ldxr	x0, [x7]
   12894:	cmp	x0, x1
   12898:	b.ne	128a4 <GOMP_parallel@@GOMP_4.0+0x144>  // b.any
   1289c:	stlxr	w2, x4, [x7]
   128a0:	cbnz	w2, 12890 <GOMP_parallel@@GOMP_4.0+0x130>
   128a4:	dmb	ish
   128a8:	cmp	x1, x0
   128ac:	b.eq	128bc <GOMP_parallel@@GOMP_4.0+0x15c>  // b.none
   128b0:	ldr	w0, [x20, #20]
   128b4:	b	1286c <GOMP_parallel@@GOMP_4.0+0x10c>
   128b8:	mov	w19, #0x1                   	// #1
   128bc:	mov	w0, w19
   128c0:	bl	1a4c0 <omp_in_final@@OMP_3.1+0x1d0>
   128c4:	mov	x1, x21
   128c8:	mov	x4, x0
   128cc:	mov	w3, w22
   128d0:	mov	w2, w19
   128d4:	mov	x5, #0x0                   	// #0
   128d8:	add	x23, x23, x24
   128dc:	mov	x0, x25
   128e0:	bl	1a618 <omp_in_final@@OMP_3.1+0x328>
   128e4:	mov	x0, x21
   128e8:	blr	x25
   128ec:	ldr	x1, [x23, #80]
   128f0:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   128f4:	add	x0, x0, #0x2b0
   128f8:	cmp	x1, #0x0
   128fc:	add	x1, x1, #0x90
   12900:	csel	x0, x0, x1, eq  // eq = none
   12904:	ldr	w0, [x0, #20]
   12908:	cmn	w0, #0x1
   1290c:	b.ne	12938 <GOMP_parallel@@GOMP_4.0+0x1d8>  // b.any
   12910:	ldp	x19, x20, [sp, #16]
   12914:	ldp	x21, x22, [sp, #32]
   12918:	ldp	x23, x24, [sp, #48]
   1291c:	ldr	x25, [sp, #64]
   12920:	ldp	x29, x30, [sp], #80
   12924:	b	1b618 <omp_in_final@@OMP_3.1+0x1328>
   12928:	bl	1cac0 <omp_test_nest_lock@OMP_1.0+0x4d8>
   1292c:	cmp	w19, w0
   12930:	csel	w19, w19, w0, ls  // ls = plast
   12934:	b	127e8 <GOMP_parallel@@GOMP_4.0+0x88>
   12938:	ldr	x0, [x23, #16]
   1293c:	cbz	x0, 12910 <GOMP_parallel@@GOMP_4.0+0x1b0>
   12940:	ldr	w19, [x0]
   12944:	bl	1b618 <omp_in_final@@OMP_3.1+0x1328>
   12948:	cmp	w19, #0x1
   1294c:	b.ls	1297c <GOMP_parallel@@GOMP_4.0+0x21c>  // b.plast
   12950:	ldr	x0, [x23, #16]
   12954:	cbz	x0, 1299c <GOMP_parallel@@GOMP_4.0+0x23c>
   12958:	ldr	x0, [x23, #96]
   1295c:	mov	x1, #0x1                   	// #1
   12960:	sub	x19, x1, w19, uxtw
   12964:	add	x0, x0, #0x18
   12968:	ldxr	x1, [x0]
   1296c:	add	x1, x1, x19
   12970:	stlxr	w2, x1, [x0]
   12974:	cbnz	w2, 12968 <GOMP_parallel@@GOMP_4.0+0x208>
   12978:	dmb	ish
   1297c:	ldp	x19, x20, [sp, #16]
   12980:	ldp	x21, x22, [sp, #32]
   12984:	ldp	x23, x24, [sp, #48]
   12988:	ldr	x25, [sp, #64]
   1298c:	ldp	x29, x30, [sp], #80
   12990:	ret
   12994:	mov	w19, w0
   12998:	b	128bc <GOMP_parallel@@GOMP_4.0+0x15c>
   1299c:	ldr	x0, [x23, #96]
   129a0:	mov	x1, #0x1                   	// #1
   129a4:	str	x1, [x0, #24]
   129a8:	b	1297c <GOMP_parallel@@GOMP_4.0+0x21c>
   129ac:	cmp	w19, w0
   129b0:	csel	w19, w19, w0, ls  // ls = plast
   129b4:	cbz	x10, 128bc <GOMP_parallel@@GOMP_4.0+0x15c>
   129b8:	mov	w0, w19
   129bc:	str	x0, [x10, #24]
   129c0:	b	128bc <GOMP_parallel@@GOMP_4.0+0x15c>
   129c4:	cmp	w19, w0
   129c8:	csel	w19, w19, w0, ls  // ls = plast
   129cc:	b	128bc <GOMP_parallel@@GOMP_4.0+0x15c>

00000000000129d0 <GOMP_parallel_reductions@@GOMP_5.0>:
   129d0:	stp	x29, x30, [sp, #-64]!
   129d4:	mov	x29, sp
   129d8:	stp	x19, x20, [sp, #16]
   129dc:	mov	x20, x1
   129e0:	mov	w1, #0x0                   	// #0
   129e4:	stp	x21, x22, [sp, #32]
   129e8:	mov	x22, x0
   129ec:	mov	w0, w2
   129f0:	str	x23, [sp, #48]
   129f4:	mov	w23, w3
   129f8:	bl	12318 <GOMP_doacross_ull_wait@@GOMP_4.5+0x260>
   129fc:	mov	w1, w0
   12a00:	mov	w19, w0
   12a04:	ldr	x0, [x20]
   12a08:	bl	19de0 <GOMP_task_reduction_remap@@GOMP_5.0+0x170>
   12a0c:	mov	x21, x0
   12a10:	mov	w0, w19
   12a14:	bl	1a4c0 <omp_in_final@@OMP_3.1+0x1d0>
   12a18:	mov	x1, x20
   12a1c:	mov	x4, x0
   12a20:	mov	x5, x21
   12a24:	mov	w3, w23
   12a28:	mov	w2, w19
   12a2c:	mov	x0, x22
   12a30:	bl	1a618 <omp_in_final@@OMP_3.1+0x328>
   12a34:	mov	x0, x20
   12a38:	mrs	x20, tpidr_el0
   12a3c:	blr	x22
   12a40:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   12a44:	ldr	x0, [x0, #4016]
   12a48:	adrp	x1, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   12a4c:	add	x1, x1, #0x2b0
   12a50:	add	x20, x20, x0
   12a54:	ldr	x0, [x20, #80]
   12a58:	cmp	x0, #0x0
   12a5c:	add	x0, x0, #0x90
   12a60:	csel	x1, x1, x0, eq  // eq = none
   12a64:	ldr	w0, [x1, #20]
   12a68:	cmn	w0, #0x1
   12a6c:	b.ne	12a94 <GOMP_parallel_reductions@@GOMP_5.0+0xc4>  // b.any
   12a70:	bl	1b618 <omp_in_final@@OMP_3.1+0x1328>
   12a74:	mov	x0, x21
   12a78:	bl	88b0 <free@plt>
   12a7c:	mov	w0, w19
   12a80:	ldp	x19, x20, [sp, #16]
   12a84:	ldp	x21, x22, [sp, #32]
   12a88:	ldr	x23, [sp, #48]
   12a8c:	ldp	x29, x30, [sp], #64
   12a90:	ret
   12a94:	ldr	x0, [x20, #16]
   12a98:	cbz	x0, 12a70 <GOMP_parallel_reductions@@GOMP_5.0+0xa0>
   12a9c:	ldr	w22, [x0]
   12aa0:	bl	1b618 <omp_in_final@@OMP_3.1+0x1328>
   12aa4:	cmp	w22, #0x1
   12aa8:	b.ls	12a74 <GOMP_parallel_reductions@@GOMP_5.0+0xa4>  // b.plast
   12aac:	ldr	x0, [x20, #16]
   12ab0:	cbz	x0, 12adc <GOMP_parallel_reductions@@GOMP_5.0+0x10c>
   12ab4:	ldr	x0, [x20, #96]
   12ab8:	mov	x1, #0x1                   	// #1
   12abc:	sub	x22, x1, w22, uxtw
   12ac0:	add	x0, x0, #0x18
   12ac4:	ldxr	x1, [x0]
   12ac8:	add	x1, x1, x22
   12acc:	stlxr	w2, x1, [x0]
   12ad0:	cbnz	w2, 12ac4 <GOMP_parallel_reductions@@GOMP_5.0+0xf4>
   12ad4:	dmb	ish
   12ad8:	b	12a74 <GOMP_parallel_reductions@@GOMP_5.0+0xa4>
   12adc:	ldr	x0, [x20, #96]
   12ae0:	mov	x1, #0x1                   	// #1
   12ae4:	str	x1, [x0, #24]
   12ae8:	b	12a74 <GOMP_parallel_reductions@@GOMP_5.0+0xa4>
   12aec:	nop

0000000000012af0 <GOMP_cancellation_point@@GOMP_4.0>:
   12af0:	adrp	x1, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   12af4:	mov	w2, w0
   12af8:	ldrb	w0, [x1, #1356]
   12afc:	cbz	w0, 12b30 <GOMP_cancellation_point@@GOMP_4.0+0x40>
   12b00:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   12b04:	ldr	x0, [x0, #4016]
   12b08:	mrs	x1, tpidr_el0
   12b0c:	tst	w2, #0x6
   12b10:	add	x1, x1, x0
   12b14:	ldr	x3, [x1, #16]
   12b18:	b.eq	12b34 <GOMP_cancellation_point@@GOMP_4.0+0x44>  // b.none
   12b1c:	mov	w0, #0x0                   	// #0
   12b20:	cbz	x3, 12b30 <GOMP_cancellation_point@@GOMP_4.0+0x40>
   12b24:	ldr	w0, [x3, #1332]
   12b28:	cmp	w0, #0x0
   12b2c:	cset	w0, ne  // ne = any
   12b30:	ret
   12b34:	tbz	w2, #3, 12b68 <GOMP_cancellation_point@@GOMP_4.0+0x78>
   12b38:	ldr	x0, [x1, #80]
   12b3c:	ldr	x1, [x0, #40]
   12b40:	cbz	x1, 12b68 <GOMP_cancellation_point@@GOMP_4.0+0x78>
   12b44:	ldrb	w0, [x1, #49]
   12b48:	cbnz	w0, 12b30 <GOMP_cancellation_point@@GOMP_4.0+0x40>
   12b4c:	ldrb	w0, [x1, #50]
   12b50:	cbz	w0, 12b68 <GOMP_cancellation_point@@GOMP_4.0+0x78>
   12b54:	ldr	x0, [x1]
   12b58:	cbz	x0, 12b68 <GOMP_cancellation_point@@GOMP_4.0+0x78>
   12b5c:	ldrb	w0, [x0, #49]
   12b60:	cbnz	w0, 12b30 <GOMP_cancellation_point@@GOMP_4.0+0x40>
   12b64:	nop
   12b68:	mov	w0, #0x0                   	// #0
   12b6c:	cbz	x3, 12b30 <GOMP_cancellation_point@@GOMP_4.0+0x40>
   12b70:	ldr	w0, [x3, #132]
   12b74:	ubfx	x0, x0, #2, #1
   12b78:	ret
   12b7c:	nop

0000000000012b80 <GOMP_cancel@@GOMP_4.0>:
   12b80:	stp	x29, x30, [sp, #-64]!
   12b84:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   12b88:	mov	x29, sp
   12b8c:	stp	x19, x20, [sp, #16]
   12b90:	ldrb	w19, [x2, #1356]
   12b94:	cbz	w19, 12c28 <GOMP_cancel@@GOMP_4.0+0xa8>
   12b98:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   12b9c:	ldr	x2, [x2, #4016]
   12ba0:	and	w20, w1, #0xff
   12ba4:	mrs	x1, tpidr_el0
   12ba8:	and	w3, w0, #0x6
   12bac:	add	x1, x1, x2
   12bb0:	ldr	x2, [x1, #16]
   12bb4:	cbz	w20, 12c7c <GOMP_cancel@@GOMP_4.0+0xfc>
   12bb8:	cbnz	w3, 12c38 <GOMP_cancel@@GOMP_4.0+0xb8>
   12bbc:	tbz	w0, #3, 12c58 <GOMP_cancel@@GOMP_4.0+0xd8>
   12bc0:	ldr	x0, [x1, #80]
   12bc4:	str	x21, [sp, #32]
   12bc8:	ldr	x21, [x0, #40]
   12bcc:	cbz	x21, 12c24 <GOMP_cancel@@GOMP_4.0+0xa4>
   12bd0:	ldrb	w0, [x21, #50]
   12bd4:	cbz	w0, 12be4 <GOMP_cancel@@GOMP_4.0+0x64>
   12bd8:	ldr	x0, [x21]
   12bdc:	cmp	x0, #0x0
   12be0:	csel	x21, x21, x0, eq  // eq = none
   12be4:	ldrb	w0, [x21, #49]
   12be8:	cbnz	w0, 12c24 <GOMP_cancel@@GOMP_4.0+0xa4>
   12bec:	add	x0, x2, #0x500
   12bf0:	mov	w2, #0x1                   	// #1
   12bf4:	ldaxr	w1, [x0]
   12bf8:	cbnz	w1, 12c04 <GOMP_cancel@@GOMP_4.0+0x84>
   12bfc:	stxr	w3, w2, [x0]
   12c00:	cbnz	w3, 12bf4 <GOMP_cancel@@GOMP_4.0+0x74>
   12c04:	cmp	w1, #0x0
   12c08:	b.ne	12cec <GOMP_cancel@@GOMP_4.0+0x16c>  // b.any
   12c0c:	mov	w1, #0x1                   	// #1
   12c10:	strb	w1, [x21, #49]
   12c14:	ldxr	w1, [x0]
   12c18:	stlxr	w2, wzr, [x0]
   12c1c:	cbnz	w2, 12c14 <GOMP_cancel@@GOMP_4.0+0x94>
   12c20:	tbnz	w1, #31, 12cdc <GOMP_cancel@@GOMP_4.0+0x15c>
   12c24:	ldr	x21, [sp, #32]
   12c28:	mov	w0, w19
   12c2c:	ldp	x19, x20, [sp, #16]
   12c30:	ldp	x29, x30, [sp], #64
   12c34:	ret
   12c38:	cbz	x2, 12c28 <GOMP_cancel@@GOMP_4.0+0xa8>
   12c3c:	mov	w0, #0x1                   	// #1
   12c40:	str	w0, [x2, #1332]
   12c44:	mov	w19, w20
   12c48:	mov	w0, w19
   12c4c:	ldp	x19, x20, [sp, #16]
   12c50:	ldp	x29, x30, [sp], #64
   12c54:	ret
   12c58:	mov	w0, #0x1                   	// #1
   12c5c:	str	w0, [x2, #1336]
   12c60:	mov	w19, w20
   12c64:	mov	x0, x2
   12c68:	bl	1d688 <omp_get_num_procs@@OMP_1.0+0xad8>
   12c6c:	mov	w0, w19
   12c70:	ldp	x19, x20, [sp, #16]
   12c74:	ldp	x29, x30, [sp], #64
   12c78:	ret
   12c7c:	cbz	w3, 12c98 <GOMP_cancel@@GOMP_4.0+0x118>
   12c80:	mov	w19, #0x0                   	// #0
   12c84:	cbz	x2, 12c28 <GOMP_cancel@@GOMP_4.0+0xa8>
   12c88:	ldr	w0, [x2, #1332]
   12c8c:	cmp	w0, #0x0
   12c90:	cset	w19, ne  // ne = any
   12c94:	b	12c28 <GOMP_cancel@@GOMP_4.0+0xa8>
   12c98:	tbz	w0, #3, 12cc8 <GOMP_cancel@@GOMP_4.0+0x148>
   12c9c:	ldr	x0, [x1, #80]
   12ca0:	ldr	x0, [x0, #40]
   12ca4:	cbz	x0, 12cc8 <GOMP_cancel@@GOMP_4.0+0x148>
   12ca8:	ldrb	w1, [x0, #49]
   12cac:	cbnz	w1, 12c28 <GOMP_cancel@@GOMP_4.0+0xa8>
   12cb0:	ldrb	w1, [x0, #50]
   12cb4:	cbz	w1, 12cc8 <GOMP_cancel@@GOMP_4.0+0x148>
   12cb8:	ldr	x0, [x0]
   12cbc:	cbz	x0, 12cc8 <GOMP_cancel@@GOMP_4.0+0x148>
   12cc0:	ldrb	w0, [x0, #49]
   12cc4:	cbnz	w0, 12c28 <GOMP_cancel@@GOMP_4.0+0xa8>
   12cc8:	mov	w19, #0x0                   	// #0
   12ccc:	cbz	x2, 12c28 <GOMP_cancel@@GOMP_4.0+0xa8>
   12cd0:	ldr	w19, [x2, #132]
   12cd4:	ubfx	x19, x19, #2, #1
   12cd8:	b	12c28 <GOMP_cancel@@GOMP_4.0+0xa8>
   12cdc:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   12ce0:	mov	w19, w20
   12ce4:	ldr	x21, [sp, #32]
   12ce8:	b	12c28 <GOMP_cancel@@GOMP_4.0+0xa8>
   12cec:	str	x0, [sp, #56]
   12cf0:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   12cf4:	ldr	x0, [sp, #56]
   12cf8:	b	12c0c <GOMP_cancel@@GOMP_4.0+0x8c>
   12cfc:	nop

0000000000012d00 <omp_get_num_threads@@OMP_1.0>:
   12d00:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   12d04:	ldr	x2, [x2, #4016]
   12d08:	mrs	x1, tpidr_el0
   12d0c:	mov	w0, #0x1                   	// #1
   12d10:	add	x1, x1, x2
   12d14:	ldr	x1, [x1, #16]
   12d18:	cbz	x1, 12d20 <omp_get_num_threads@@OMP_1.0+0x20>
   12d1c:	ldr	w0, [x1]
   12d20:	ret
   12d24:	nop

0000000000012d28 <omp_get_thread_num@@OMP_1.0>:
   12d28:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   12d2c:	ldr	x0, [x0, #4016]
   12d30:	mrs	x1, tpidr_el0
   12d34:	add	x0, x1, x0
   12d38:	ldr	w0, [x0, #40]
   12d3c:	ret

0000000000012d40 <omp_in_parallel@@OMP_1.0>:
   12d40:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   12d44:	ldr	x0, [x0, #4016]
   12d48:	mrs	x1, tpidr_el0
   12d4c:	add	x0, x1, x0
   12d50:	ldr	w0, [x0, #48]
   12d54:	cmp	w0, #0x0
   12d58:	cset	w0, ne  // ne = any
   12d5c:	ret

0000000000012d60 <omp_get_level@@OMP_3.0>:
   12d60:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   12d64:	ldr	x0, [x0, #4016]
   12d68:	mrs	x1, tpidr_el0
   12d6c:	add	x0, x1, x0
   12d70:	ldr	w0, [x0, #44]
   12d74:	ret

0000000000012d78 <omp_get_ancestor_thread_num@@OMP_3.0>:
   12d78:	tbnz	w0, #31, 12dc0 <omp_get_ancestor_thread_num@@OMP_3.0+0x48>
   12d7c:	adrp	x1, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   12d80:	ldr	x1, [x1, #4016]
   12d84:	mrs	x2, tpidr_el0
   12d88:	add	x1, x2, x1
   12d8c:	ldr	w2, [x1, #44]
   12d90:	cmp	w2, w0
   12d94:	b.cc	12dc0 <omp_get_ancestor_thread_num@@OMP_3.0+0x48>  // b.lo, b.ul, b.last
   12d98:	sub	w2, w2, w0
   12d9c:	add	x0, x1, #0x10
   12da0:	cmp	w2, #0x0
   12da4:	b.le	12db8 <omp_get_ancestor_thread_num@@OMP_3.0+0x40>
   12da8:	ldr	x0, [x0]
   12dac:	subs	w2, w2, #0x1
   12db0:	add	x0, x0, #0x8
   12db4:	b.ne	12da8 <omp_get_ancestor_thread_num@@OMP_3.0+0x30>  // b.any
   12db8:	ldr	w0, [x0, #24]
   12dbc:	ret
   12dc0:	mov	w0, #0xffffffff            	// #-1
   12dc4:	ret

0000000000012dc8 <omp_get_team_size@@OMP_3.0>:
   12dc8:	sub	sp, sp, #0x10
   12dcc:	mov	w2, w0
   12dd0:	str	w0, [sp, #12]
   12dd4:	tbnz	w2, #31, 12e30 <omp_get_team_size@@OMP_3.0+0x68>
   12dd8:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   12ddc:	ldr	x0, [x0, #4016]
   12de0:	mrs	x1, tpidr_el0
   12de4:	add	x0, x1, x0
   12de8:	ldr	w1, [x0, #44]
   12dec:	cmp	w1, w2
   12df0:	b.cc	12e30 <omp_get_team_size@@OMP_3.0+0x68>  // b.lo, b.ul, b.last
   12df4:	sub	w1, w1, w2
   12df8:	add	x0, x0, #0x10
   12dfc:	cmp	w1, #0x0
   12e00:	b.le	12e18 <omp_get_team_size@@OMP_3.0+0x50>
   12e04:	nop
   12e08:	ldr	x0, [x0]
   12e0c:	subs	w1, w1, #0x1
   12e10:	add	x0, x0, #0x8
   12e14:	b.ne	12e08 <omp_get_team_size@@OMP_3.0+0x40>  // b.any
   12e18:	ldr	x1, [x0]
   12e1c:	mov	w0, #0x1                   	// #1
   12e20:	cbz	x1, 12e28 <omp_get_team_size@@OMP_3.0+0x60>
   12e24:	ldr	w0, [x1]
   12e28:	add	sp, sp, #0x10
   12e2c:	ret
   12e30:	mov	w0, #0xffffffff            	// #-1
   12e34:	b	12e28 <omp_get_team_size@@OMP_3.0+0x60>

0000000000012e38 <omp_get_active_level@@OMP_3.0>:
   12e38:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   12e3c:	ldr	x0, [x0, #4016]
   12e40:	mrs	x1, tpidr_el0
   12e44:	add	x0, x1, x0
   12e48:	ldr	w0, [x0, #48]
   12e4c:	ret

0000000000012e50 <GOMP_sections_start@@GOMP_1.0>:
   12e50:	stp	x29, x30, [sp, #-48]!
   12e54:	mov	x29, sp
   12e58:	str	x19, [sp, #16]
   12e5c:	mov	w19, w0
   12e60:	mov	x0, #0x0                   	// #0
   12e64:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
   12e68:	tst	w0, #0xff
   12e6c:	b.eq	12ec8 <GOMP_sections_start@@GOMP_1.0+0x78>  // b.none
   12e70:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   12e74:	ldr	x2, [x2, #4016]
   12e78:	mrs	x0, tpidr_el0
   12e7c:	mov	x4, #0x2                   	// #2
   12e80:	mov	x3, #0x1                   	// #1
   12e84:	add	x0, x0, x2
   12e88:	movk	x4, #0x1, lsl #32
   12e8c:	mov	w1, w19
   12e90:	add	x1, x1, #0x1
   12e94:	ldr	x2, [x0, #24]
   12e98:	stp	x4, x3, [x2]
   12e9c:	ldr	x0, [x0, #32]
   12ea0:	stp	x1, x3, [x2, #16]
   12ea4:	str	x3, [x2, #72]
   12ea8:	cbz	x0, 12ec8 <GOMP_sections_start@@GOMP_1.0+0x78>
   12eac:	add	x0, x0, #0x50
   12eb0:	ldxr	x1, [x0]
   12eb4:	stlxr	w3, x2, [x0]
   12eb8:	cbnz	w3, 12eb0 <GOMP_sections_start@@GOMP_1.0+0x60>
   12ebc:	cmp	x1, #0x1
   12ec0:	b.eq	12ec8 <GOMP_sections_start@@GOMP_1.0+0x78>  // b.none
   12ec4:	bl	1d8a0 <omp_get_num_procs@@OMP_1.0+0xcf0>
   12ec8:	add	x1, sp, #0x28
   12ecc:	add	x0, sp, #0x20
   12ed0:	bl	bf40 <omp_is_initial_device@@OMP_4.0+0x218>
   12ed4:	sxtb	w0, w0
   12ed8:	ldr	w1, [sp, #32]
   12edc:	cmp	w0, #0x0
   12ee0:	mov	w2, #0x0                   	// #0
   12ee4:	csel	w0, w1, w2, ne  // ne = any
   12ee8:	ldr	x19, [sp, #16]
   12eec:	ldp	x29, x30, [sp], #48
   12ef0:	ret
   12ef4:	nop

0000000000012ef8 <GOMP_sections2_start@@GOMP_5.0>:
   12ef8:	stp	x29, x30, [sp, #-96]!
   12efc:	mov	x29, sp
   12f00:	stp	x19, x20, [sp, #16]
   12f04:	mov	w19, w0
   12f08:	mov	x20, x2
   12f0c:	stp	x21, x22, [sp, #32]
   12f10:	cbz	x1, 1304c <GOMP_sections2_start@@GOMP_5.0+0x154>
   12f14:	mov	x21, x1
   12f18:	bl	1a1e0 <GOMP_task_reduction_remap@@GOMP_5.0+0x570>
   12f1c:	mov	x0, #0x0                   	// #0
   12f20:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
   12f24:	tst	w0, #0xff
   12f28:	b.eq	12fd4 <GOMP_sections2_start@@GOMP_5.0+0xdc>  // b.none
   12f2c:	stp	x23, x24, [sp, #48]
   12f30:	mrs	x22, tpidr_el0
   12f34:	adrp	x23, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   12f38:	ldr	x23, [x23, #4016]
   12f3c:	str	x25, [sp, #64]
   12f40:	mov	x2, #0x2                   	// #2
   12f44:	add	x25, x22, x23
   12f48:	mov	x24, #0x1                   	// #1
   12f4c:	add	x19, x19, #0x1
   12f50:	movk	x2, #0x1, lsl #32
   12f54:	mov	x0, x21
   12f58:	ldr	x1, [x25, #24]
   12f5c:	stp	x2, x24, [x1]
   12f60:	stp	x19, x24, [x1, #16]
   12f64:	str	x24, [x1, #72]
   12f68:	bl	17c48 <GOMP_taskgroup_reduction_register@@GOMP_5.0>
   12f6c:	ldr	x0, [x25, #80]
   12f70:	ldr	x19, [x25, #24]
   12f74:	ldr	x0, [x0, #40]
   12f78:	ldr	x25, [sp, #64]
   12f7c:	strb	w24, [x0, #50]
   12f80:	str	x21, [x19, #88]
   12f84:	cbz	x20, 12fa0 <GOMP_sections2_start@@GOMP_5.0+0xa8>
   12f88:	ldr	x0, [x20]
   12f8c:	cmp	x0, #0x20
   12f90:	b.ls	13098 <GOMP_sections2_start@@GOMP_5.0+0x1a0>  // b.plast
   12f94:	bl	b330 <fprintf@plt+0x2870>
   12f98:	str	x0, [x19, #32]
   12f9c:	str	x0, [x20]
   12fa0:	add	x22, x22, x23
   12fa4:	ldr	x0, [x22, #32]
   12fa8:	cbz	x0, 13044 <GOMP_sections2_start@@GOMP_5.0+0x14c>
   12fac:	ldr	x2, [x22, #24]
   12fb0:	add	x0, x0, #0x50
   12fb4:	ldxr	x1, [x0]
   12fb8:	stlxr	w3, x2, [x0]
   12fbc:	cbnz	w3, 12fb4 <GOMP_sections2_start@@GOMP_5.0+0xbc>
   12fc0:	cmp	x1, #0x1
   12fc4:	b.eq	13044 <GOMP_sections2_start@@GOMP_5.0+0x14c>  // b.none
   12fc8:	bl	1d8a0 <omp_get_num_procs@@OMP_1.0+0xcf0>
   12fcc:	ldp	x23, x24, [sp, #48]
   12fd0:	b	13014 <GOMP_sections2_start@@GOMP_5.0+0x11c>
   12fd4:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   12fd8:	ldr	x2, [x2, #4016]
   12fdc:	mrs	x1, tpidr_el0
   12fe0:	mov	x0, x21
   12fe4:	add	x1, x1, x2
   12fe8:	ldr	x1, [x1, #24]
   12fec:	ldr	x1, [x1, #88]
   12ff0:	bl	19f80 <GOMP_task_reduction_remap@@GOMP_5.0+0x310>
   12ff4:	cbz	x20, 13014 <GOMP_sections2_start@@GOMP_5.0+0x11c>
   12ff8:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   12ffc:	ldr	x0, [x0, #4016]
   13000:	mrs	x1, tpidr_el0
   13004:	add	x0, x1, x0
   13008:	ldr	x0, [x0, #24]
   1300c:	ldr	x0, [x0, #32]
   13010:	str	x0, [x20]
   13014:	add	x1, sp, #0x58
   13018:	add	x0, sp, #0x50
   1301c:	bl	bf40 <omp_is_initial_device@@OMP_4.0+0x218>
   13020:	sxtb	w0, w0
   13024:	ldr	w1, [sp, #80]
   13028:	cmp	w0, #0x0
   1302c:	mov	w2, #0x0                   	// #0
   13030:	csel	w0, w1, w2, ne  // ne = any
   13034:	ldp	x19, x20, [sp, #16]
   13038:	ldp	x21, x22, [sp, #32]
   1303c:	ldp	x29, x30, [sp], #96
   13040:	ret
   13044:	ldp	x23, x24, [sp, #48]
   13048:	b	13014 <GOMP_sections2_start@@GOMP_5.0+0x11c>
   1304c:	mov	x0, #0x0                   	// #0
   13050:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
   13054:	tst	w0, #0xff
   13058:	b.eq	12ff4 <GOMP_sections2_start@@GOMP_5.0+0xfc>  // b.none
   1305c:	stp	x23, x24, [sp, #48]
   13060:	mrs	x22, tpidr_el0
   13064:	adrp	x23, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   13068:	ldr	x23, [x23, #4016]
   1306c:	mov	w0, w19
   13070:	mov	x2, #0x2                   	// #2
   13074:	add	x3, x22, x23
   13078:	mov	x1, #0x1                   	// #1
   1307c:	add	x0, x0, #0x1
   13080:	movk	x2, #0x1, lsl #32
   13084:	ldr	x19, [x3, #24]
   13088:	stp	x2, x1, [x19]
   1308c:	stp	x0, x1, [x19, #16]
   13090:	str	x1, [x19, #72]
   13094:	b	12f84 <GOMP_sections2_start@@GOMP_5.0+0x8c>
   13098:	mov	x2, x0
   1309c:	mov	w1, #0x0                   	// #0
   130a0:	add	x0, x19, #0x60
   130a4:	bl	8770 <memset@plt>
   130a8:	str	x0, [x20]
   130ac:	b	12fa0 <GOMP_sections2_start@@GOMP_5.0+0xa8>

00000000000130b0 <GOMP_sections_next@@GOMP_1.0>:
   130b0:	stp	x29, x30, [sp, #-32]!
   130b4:	mov	x29, sp
   130b8:	add	x1, sp, #0x18
   130bc:	add	x0, sp, #0x10
   130c0:	bl	bf40 <omp_is_initial_device@@OMP_4.0+0x218>
   130c4:	sxtb	w1, w0
   130c8:	ldr	w2, [sp, #16]
   130cc:	cmp	w1, #0x0
   130d0:	mov	w0, #0x0                   	// #0
   130d4:	ldp	x29, x30, [sp], #32
   130d8:	csel	w0, w2, w0, ne  // ne = any
   130dc:	ret

00000000000130e0 <GOMP_parallel_sections_start@@GOMP_1.0>:
   130e0:	stp	x29, x30, [sp, #-48]!
   130e4:	mov	x29, sp
   130e8:	stp	x19, x20, [sp, #16]
   130ec:	mov	w19, w3
   130f0:	mov	x20, x0
   130f4:	stp	x21, x22, [sp, #32]
   130f8:	mov	x21, x1
   130fc:	mov	w1, w19
   13100:	mov	w0, w2
   13104:	bl	12318 <GOMP_doacross_ull_wait@@GOMP_4.5+0x260>
   13108:	mov	w22, w0
   1310c:	add	x19, x19, #0x1
   13110:	bl	1a4c0 <omp_in_final@@OMP_3.1+0x1d0>
   13114:	mov	x4, x0
   13118:	mov	x8, #0x2                   	// #2
   1311c:	mov	x7, #0x1                   	// #1
   13120:	movk	x8, #0x1, lsl #32
   13124:	mov	w2, w22
   13128:	stp	x8, x7, [x4, #256]
   1312c:	mov	x1, x21
   13130:	mov	x0, x20
   13134:	stp	x19, x7, [x4, #272]
   13138:	mov	x5, #0x0                   	// #0
   1313c:	mov	w3, #0x0                   	// #0
   13140:	str	x7, [x4, #328]
   13144:	ldp	x19, x20, [sp, #16]
   13148:	ldp	x21, x22, [sp, #32]
   1314c:	ldp	x29, x30, [sp], #48
   13150:	b	1a618 <omp_in_final@@OMP_3.1+0x328>
   13154:	nop

0000000000013158 <GOMP_parallel_sections@@GOMP_4.0>:
   13158:	stp	x29, x30, [sp, #-64]!
   1315c:	mov	x29, sp
   13160:	stp	x19, x20, [sp, #16]
   13164:	mov	w19, w3
   13168:	mov	x20, x0
   1316c:	stp	x21, x22, [sp, #32]
   13170:	mov	x21, x1
   13174:	mov	w1, w19
   13178:	mov	w0, w2
   1317c:	str	x23, [sp, #48]
   13180:	mov	w23, w4
   13184:	bl	12318 <GOMP_doacross_ull_wait@@GOMP_4.5+0x260>
   13188:	mov	w22, w0
   1318c:	bl	1a4c0 <omp_in_final@@OMP_3.1+0x1d0>
   13190:	mov	x4, x0
   13194:	mov	x8, #0x2                   	// #2
   13198:	mov	x7, #0x1                   	// #1
   1319c:	mov	w3, w23
   131a0:	mov	w2, w22
   131a4:	mov	x1, x21
   131a8:	movk	x8, #0x1, lsl #32
   131ac:	add	x19, x19, #0x1
   131b0:	stp	x8, x7, [x4, #256]
   131b4:	mov	x5, #0x0                   	// #0
   131b8:	mov	x0, x20
   131bc:	stp	x19, x7, [x4, #272]
   131c0:	str	x7, [x4, #328]
   131c4:	bl	1a618 <omp_in_final@@OMP_3.1+0x328>
   131c8:	mov	x0, x21
   131cc:	blr	x20
   131d0:	ldp	x19, x20, [sp, #16]
   131d4:	ldp	x21, x22, [sp, #32]
   131d8:	ldr	x23, [sp, #48]
   131dc:	ldp	x29, x30, [sp], #64
   131e0:	b	126b0 <GOMP_parallel_end@@GOMP_1.0>
   131e4:	nop

00000000000131e8 <GOMP_sections_end@@GOMP_1.0>:
   131e8:	b	1bf38 <omp_in_final@@OMP_3.1+0x1c48>
   131ec:	nop

00000000000131f0 <GOMP_sections_end_cancel@@GOMP_4.0>:
   131f0:	b	1c048 <omp_in_final@@OMP_3.1+0x1d58>
   131f4:	nop

00000000000131f8 <GOMP_sections_end_nowait@@GOMP_1.0>:
   131f8:	b	1c118 <omp_in_final@@OMP_3.1+0x1e28>
   131fc:	nop

0000000000013200 <GOMP_single_start@@GOMP_1.0>:
   13200:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   13204:	ldr	x0, [x0, #4016]
   13208:	mrs	x1, tpidr_el0
   1320c:	add	x0, x1, x0
   13210:	ldr	x1, [x0, #16]
   13214:	cbz	x1, 13248 <GOMP_single_start@@GOMP_1.0+0x48>
   13218:	ldr	x2, [x0, #64]
   1321c:	add	x1, x1, #0x70
   13220:	add	x3, x2, #0x1
   13224:	str	x3, [x0, #64]
   13228:	ldxr	x0, [x1]
   1322c:	cmp	x0, x2
   13230:	b.ne	1323c <GOMP_single_start@@GOMP_1.0+0x3c>  // b.any
   13234:	stlxr	w4, x3, [x1]
   13238:	cbnz	w4, 13228 <GOMP_single_start@@GOMP_1.0+0x28>
   1323c:	cset	w0, eq  // eq = none
   13240:	dmb	ish
   13244:	ret
   13248:	mov	w0, #0x1                   	// #1
   1324c:	ret

0000000000013250 <GOMP_single_copy_start@@GOMP_1.0>:
   13250:	stp	x29, x30, [sp, #-32]!
   13254:	mov	x0, #0x0                   	// #0
   13258:	mov	x29, sp
   1325c:	str	x19, [sp, #16]
   13260:	bl	1bb50 <omp_in_final@@OMP_3.1+0x1860>
   13264:	tst	w0, #0xff
   13268:	b.eq	132cc <GOMP_single_copy_start@@GOMP_1.0+0x7c>  // b.none
   1326c:	adrp	x1, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   13270:	ldr	x1, [x1, #4016]
   13274:	mrs	x0, tpidr_el0
   13278:	add	x1, x0, x1
   1327c:	ldr	x0, [x1, #32]
   13280:	cbz	x0, 132b8 <GOMP_single_copy_start@@GOMP_1.0+0x68>
   13284:	ldr	x2, [x1, #24]
   13288:	add	x0, x0, #0x50
   1328c:	ldxr	x1, [x0]
   13290:	stlxr	w3, x2, [x0]
   13294:	cbnz	w3, 1328c <GOMP_single_copy_start@@GOMP_1.0+0x3c>
   13298:	cmp	x1, #0x1
   1329c:	b.eq	132b8 <GOMP_single_copy_start@@GOMP_1.0+0x68>  // b.none
   132a0:	bl	1d8a0 <omp_get_num_procs@@OMP_1.0+0xcf0>
   132a4:	mov	x19, #0x0                   	// #0
   132a8:	mov	x0, x19
   132ac:	ldr	x19, [sp, #16]
   132b0:	ldp	x29, x30, [sp], #32
   132b4:	ret
   132b8:	mov	x19, #0x0                   	// #0
   132bc:	mov	x0, x19
   132c0:	ldr	x19, [sp, #16]
   132c4:	ldp	x29, x30, [sp], #32
   132c8:	ret
   132cc:	adrp	x19, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   132d0:	ldr	x19, [x19, #4016]
   132d4:	mrs	x0, tpidr_el0
   132d8:	add	x19, x0, x19
   132dc:	ldr	x0, [x19, #16]
   132e0:	add	x0, x0, #0x80
   132e4:	bl	1d3e0 <omp_get_num_procs@@OMP_1.0+0x830>
   132e8:	ldr	x0, [x19, #24]
   132ec:	ldr	x19, [x0, #72]
   132f0:	bl	1c118 <omp_in_final@@OMP_3.1+0x1e28>
   132f4:	mov	x0, x19
   132f8:	ldr	x19, [sp, #16]
   132fc:	ldp	x29, x30, [sp], #32
   13300:	ret
   13304:	nop

0000000000013308 <GOMP_single_copy_end@@GOMP_1.0>:
   13308:	adrp	x1, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1330c:	ldr	x1, [x1, #4016]
   13310:	mrs	x2, tpidr_el0
   13314:	add	x1, x2, x1
   13318:	mov	x2, x0
   1331c:	ldr	x0, [x1, #16]
   13320:	cbz	x0, 13344 <GOMP_single_copy_end@@GOMP_1.0+0x3c>
   13324:	stp	x29, x30, [sp, #-16]!
   13328:	add	x0, x0, #0x80
   1332c:	mov	x29, sp
   13330:	ldr	x1, [x1, #24]
   13334:	str	x2, [x1, #72]
   13338:	bl	1d3e0 <omp_get_num_procs@@OMP_1.0+0x830>
   1333c:	ldp	x29, x30, [sp], #16
   13340:	b	1c118 <omp_in_final@@OMP_3.1+0x1e28>
   13344:	b	1c118 <omp_in_final@@OMP_3.1+0x1e28>
   13348:	ldr	w8, [x0, #24]
   1334c:	adrp	x7, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   13350:	add	x5, x7, #0x5e0
   13354:	mov	x4, x0
   13358:	ldr	x6, [x1]
   1335c:	lsl	x1, x8, #4
   13360:	add	x3, x5, x1
   13364:	eor	x2, x6, x6, lsr #32
   13368:	ldr	w5, [x5, x1]
   1336c:	ldr	w1, [x3, #4]
   13370:	and	x11, x2, #0xffffffff
   13374:	ldr	w10, [x3, #12]
   13378:	mul	x1, x1, x11
   1337c:	lsr	x0, x1, #32
   13380:	sub	w1, w2, w0
   13384:	add	w1, w0, w1, lsr #1
   13388:	lsr	w1, w1, w10
   1338c:	msub	w1, w1, w5, w2
   13390:	add	x0, x4, w1, uxtw #3
   13394:	ldr	x0, [x0, #32]
   13398:	cbz	x0, 1341c <GOMP_single_copy_end@@GOMP_1.0+0x114>
   1339c:	cmp	x0, #0x1
   133a0:	b.eq	133b0 <GOMP_single_copy_end@@GOMP_1.0+0xa8>  // b.none
   133a4:	ldr	x3, [x0]
   133a8:	cmp	x6, x3
   133ac:	b.eq	13418 <GOMP_single_copy_end@@GOMP_1.0+0x110>  // b.none
   133b0:	add	x9, x7, #0x5e0
   133b4:	sub	w7, w5, #0x2
   133b8:	add	x8, x9, x8, lsl #4
   133bc:	add	w9, w2, #0x1
   133c0:	ldr	x5, [x4]
   133c4:	ldr	w0, [x8, #8]
   133c8:	mul	x0, x0, x11
   133cc:	lsr	x0, x0, #32
   133d0:	sub	w3, w2, w0
   133d4:	add	w3, w0, w3, lsr #1
   133d8:	lsr	w3, w3, w10
   133dc:	msub	w3, w3, w7, w9
   133e0:	add	w2, w1, w3
   133e4:	mov	x1, x2
   133e8:	cmp	x5, w2, uxtw
   133ec:	b.hi	133f8 <GOMP_single_copy_end@@GOMP_1.0+0xf0>  // b.pmore
   133f0:	sub	w2, w2, w5
   133f4:	mov	x1, x2
   133f8:	add	x2, x2, #0x4
   133fc:	ldr	x0, [x4, x2, lsl #3]
   13400:	cmp	x0, #0x1
   13404:	cbz	x0, 1341c <GOMP_single_copy_end@@GOMP_1.0+0x114>
   13408:	b.eq	133e0 <GOMP_single_copy_end@@GOMP_1.0+0xd8>  // b.none
   1340c:	ldr	x2, [x0]
   13410:	cmp	x6, x2
   13414:	b.ne	133e0 <GOMP_single_copy_end@@GOMP_1.0+0xd8>  // b.any
   13418:	ret
   1341c:	mov	x0, #0x0                   	// #0
   13420:	ret
   13424:	nop
   13428:	cbz	x1, 1348c <GOMP_single_copy_end@@GOMP_1.0+0x184>
   1342c:	stp	x29, x30, [sp, #-48]!
   13430:	mov	x29, sp
   13434:	stp	x19, x20, [sp, #16]
   13438:	mov	x19, x1
   1343c:	str	x21, [sp, #32]
   13440:	mov	x21, x0
   13444:	ldr	x3, [x19, #8]
   13448:	mov	x0, x19
   1344c:	ldp	x20, x19, [x19, #24]
   13450:	cbz	x3, 13468 <GOMP_single_copy_end@@GOMP_1.0+0x160>
   13454:	mov	x2, x3
   13458:	stur	xzr, [x2, #-112]
   1345c:	ldr	x2, [x2]
   13460:	cmp	x3, x2
   13464:	b.ne	13458 <GOMP_single_copy_end@@GOMP_1.0+0x150>  // b.any
   13468:	bl	88b0 <free@plt>
   1346c:	mov	x1, x20
   13470:	mov	x0, x21
   13474:	bl	13428 <GOMP_single_copy_end@@GOMP_1.0+0x120>
   13478:	cbnz	x19, 13444 <GOMP_single_copy_end@@GOMP_1.0+0x13c>
   1347c:	ldp	x19, x20, [sp, #16]
   13480:	ldr	x21, [sp, #32]
   13484:	ldp	x29, x30, [sp], #48
   13488:	ret
   1348c:	ret
   13490:	add	x4, x0, #0x20
   13494:	mov	x5, x0
   13498:	ldr	w0, [x0, #24]
   1349c:	adrp	x2, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   134a0:	add	x2, x2, #0x5e0
   134a4:	lsl	x0, x0, #4
   134a8:	add	x7, x2, x0
   134ac:	ldr	w6, [x2, x0]
   134b0:	ldr	w2, [x7, #4]
   134b4:	ldr	w8, [x7, #12]
   134b8:	umull	x2, w1, w2
   134bc:	lsr	x3, x2, #32
   134c0:	sub	w2, w1, w3
   134c4:	add	w2, w3, w2, lsr #1
   134c8:	lsr	w2, w2, w8
   134cc:	msub	w2, w2, w6, w1
   134d0:	add	x0, x4, w2, uxtw #3
   134d4:	ldr	x3, [x4, w2, uxtw #3]
   134d8:	cbz	x3, 1353c <GOMP_single_copy_end@@GOMP_1.0+0x234>
   134dc:	cmp	x3, #0x1
   134e0:	b.eq	13540 <GOMP_single_copy_end@@GOMP_1.0+0x238>  // b.none
   134e4:	ldr	w0, [x7, #8]
   134e8:	add	w3, w1, #0x1
   134ec:	sub	w6, w6, #0x2
   134f0:	ldr	x5, [x5]
   134f4:	umull	x0, w1, w0
   134f8:	lsr	x0, x0, #32
   134fc:	sub	w1, w1, w0
   13500:	add	w1, w0, w1, lsr #1
   13504:	lsr	w1, w1, w8
   13508:	msub	w1, w1, w6, w3
   1350c:	b	13518 <GOMP_single_copy_end@@GOMP_1.0+0x210>
   13510:	cmp	x3, #0x1
   13514:	b.eq	13540 <GOMP_single_copy_end@@GOMP_1.0+0x238>  // b.none
   13518:	add	w0, w2, w1
   1351c:	mov	x2, x0
   13520:	cmp	x5, w0, uxtw
   13524:	b.hi	13530 <GOMP_single_copy_end@@GOMP_1.0+0x228>  // b.pmore
   13528:	sub	w0, w0, w5
   1352c:	mov	x2, x0
   13530:	ldr	x3, [x4, x0, lsl #3]
   13534:	add	x0, x4, x0, lsl #3
   13538:	cbnz	x3, 13510 <GOMP_single_copy_end@@GOMP_1.0+0x208>
   1353c:	ret
   13540:	stp	x29, x30, [sp, #-16]!
   13544:	mov	x29, sp
   13548:	bl	8820 <abort@plt>
   1354c:	nop
   13550:	mov	x1, x0
   13554:	ldxr	w2, [x1]
   13558:	stlxr	w3, wzr, [x1]
   1355c:	cbnz	w3, 13554 <GOMP_single_copy_end@@GOMP_1.0+0x24c>
   13560:	tbnz	w2, #31, 13568 <GOMP_single_copy_end@@GOMP_1.0+0x260>
   13564:	ret
   13568:	b	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   1356c:	nop
   13570:	stp	x29, x30, [sp, #-48]!
   13574:	mov	w0, #0x1                   	// #1
   13578:	mov	x29, sp
   1357c:	stp	x19, x20, [sp, #16]
   13580:	mrs	x19, tpidr_el0
   13584:	adrp	x20, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   13588:	ldr	x20, [x20, #4016]
   1358c:	stp	x21, x22, [sp, #32]
   13590:	bl	1a4c0 <omp_in_final@@OMP_3.1+0x1d0>
   13594:	add	x1, x19, x20
   13598:	movi	v0.4s, #0x0
   1359c:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   135a0:	add	x2, x2, #0x2b0
   135a4:	add	x6, x0, #0x5d0
   135a8:	ldr	x21, [x1, #80]
   135ac:	str	xzr, [x0, #1344]
   135b0:	ldp	x4, x5, [x1, #16]
   135b4:	stp	x4, x5, [x0, #8]
   135b8:	add	x3, x21, #0x90
   135bc:	ldp	x4, x5, [x1, #32]
   135c0:	cmp	x21, #0x0
   135c4:	stp	x4, x5, [x0, #24]
   135c8:	csel	x2, x2, x3, eq  // eq = none
   135cc:	add	x3, x0, #0x600
   135d0:	ldp	x4, x5, [x1, #48]
   135d4:	stp	x4, x5, [x0, #40]
   135d8:	add	x22, x0, #0x540
   135dc:	ldp	x4, x5, [x1, #64]
   135e0:	stp	x4, x5, [x0, #56]
   135e4:	add	x9, x0, #0x100
   135e8:	str	q0, [x1, #64]
   135ec:	ldp	x4, x5, [x2]
   135f0:	stp	x4, x5, [x6]
   135f4:	ldp	x4, x5, [x2, #16]
   135f8:	stp	x4, x5, [x6, #16]
   135fc:	ldr	x2, [x2, #32]
   13600:	str	xzr, [x0, #1352]
   13604:	str	x2, [x0, #1520]
   13608:	str	xzr, [x0, #1544]
   1360c:	stp	x0, x9, [x1, #16]
   13610:	stur	q0, [x3, #-168]
   13614:	stur	q0, [x3, #-152]
   13618:	stur	q0, [x3, #-136]
   1361c:	str	xzr, [x1, #32]
   13620:	str	wzr, [x1, #40]
   13624:	str	xzr, [x22, #72]
   13628:	str	x22, [x1, #80]
   1362c:	cbz	x21, 13658 <GOMP_single_copy_end@@GOMP_1.0+0x350>
   13630:	ldr	x0, [x21, #56]
   13634:	cbnz	x0, 13670 <GOMP_single_copy_end@@GOMP_1.0+0x368>
   13638:	add	x19, x19, x20
   1363c:	mov	x0, x21
   13640:	bl	88b0 <free@plt>
   13644:	str	x22, [x19, #80]
   13648:	ldp	x19, x20, [sp, #16]
   1364c:	ldp	x21, x22, [sp, #32]
   13650:	ldp	x29, x30, [sp], #48
   13654:	ret
   13658:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1365c:	ldp	x19, x20, [sp, #16]
   13660:	ldp	x21, x22, [sp, #32]
   13664:	ldp	x29, x30, [sp], #48
   13668:	ldr	w0, [x0, #1712]
   1366c:	b	8960 <pthread_setspecific@plt>
   13670:	bl	88b0 <free@plt>
   13674:	b	13638 <GOMP_single_copy_end@@GOMP_1.0+0x330>
   13678:	ldr	x7, [x0, #72]
   1367c:	ldr	x11, [x0]
   13680:	cbz	x7, 136d0 <GOMP_single_copy_end@@GOMP_1.0+0x3c8>
   13684:	add	x9, x0, #0xd0
   13688:	adrp	x8, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1368c:	mov	x1, x9
   13690:	add	x8, x8, #0x5e0
   13694:	mov	x6, #0x0                   	// #0
   13698:	mov	x10, #0x1                   	// #1
   1369c:	nop
   136a0:	ldrb	w0, [x1, #33]
   136a4:	cbnz	w0, 136c0 <GOMP_single_copy_end@@GOMP_1.0+0x3b8>
   136a8:	ldp	x12, x0, [x1, #8]
   136ac:	cbz	x12, 136b8 <GOMP_single_copy_end@@GOMP_1.0+0x3b0>
   136b0:	str	x0, [x12, #16]
   136b4:	ldr	x0, [x1, #16]
   136b8:	cbz	x0, 136d4 <GOMP_single_copy_end@@GOMP_1.0+0x3cc>
   136bc:	str	x12, [x0, #8]
   136c0:	add	x6, x6, #0x1
   136c4:	add	x1, x1, #0x28
   136c8:	cmp	x7, x6
   136cc:	b.ne	136a0 <GOMP_single_copy_end@@GOMP_1.0+0x398>  // b.any
   136d0:	ret
   136d4:	stp	x29, x30, [sp, #-16]!
   136d8:	mov	x29, sp
   136dc:	ldr	x13, [x11, #56]
   136e0:	ldr	x14, [x1]
   136e4:	ldr	w16, [x13, #24]
   136e8:	eor	x3, x14, x14, lsr #32
   136ec:	lsl	x0, x16, #4
   136f0:	and	x18, x3, #0xffffffff
   136f4:	add	x4, x8, x0
   136f8:	ldr	w15, [x8, x0]
   136fc:	ldr	w0, [x4, #4]
   13700:	ldr	w17, [x4, #12]
   13704:	mul	x0, x0, x18
   13708:	lsr	x0, x0, #32
   1370c:	sub	w2, w3, w0
   13710:	add	w0, w0, w2, lsr #1
   13714:	lsr	w0, w0, w17
   13718:	msub	w2, w0, w15, w3
   1371c:	mov	x0, x2
   13720:	add	x2, x2, #0x4
   13724:	ldr	x4, [x13, x2, lsl #3]
   13728:	cbz	x4, 13844 <GOMP_single_copy_end@@GOMP_1.0+0x53c>
   1372c:	cmp	x4, #0x1
   13730:	ldr	x5, [x13]
   13734:	b.eq	13744 <GOMP_single_copy_end@@GOMP_1.0+0x43c>  // b.none
   13738:	ldr	x4, [x4]
   1373c:	cmp	x14, x4
   13740:	b.eq	137a8 <GOMP_single_copy_end@@GOMP_1.0+0x4a0>  // b.none
   13744:	add	x16, x8, x16, lsl #4
   13748:	sub	w15, w15, #0x2
   1374c:	add	w30, w3, #0x1
   13750:	ldr	w2, [x16, #8]
   13754:	mul	x2, x2, x18
   13758:	lsr	x2, x2, #32
   1375c:	sub	w4, w3, w2
   13760:	add	w4, w2, w4, lsr #1
   13764:	lsr	w4, w4, w17
   13768:	msub	w4, w4, w15, w30
   1376c:	nop
   13770:	add	w2, w0, w4
   13774:	mov	x0, x2
   13778:	cmp	x5, w2, uxtw
   1377c:	b.hi	13788 <GOMP_single_copy_end@@GOMP_1.0+0x480>  // b.pmore
   13780:	sub	w2, w2, w5
   13784:	mov	x0, x2
   13788:	add	x2, x2, #0x4
   1378c:	ldr	x3, [x13, x2, lsl #3]
   13790:	cbz	x3, 13844 <GOMP_single_copy_end@@GOMP_1.0+0x53c>
   13794:	cmp	x3, #0x1
   13798:	b.eq	13770 <GOMP_single_copy_end@@GOMP_1.0+0x468>  // b.none
   1379c:	ldr	x3, [x3]
   137a0:	cmp	x14, x3
   137a4:	b.ne	13770 <GOMP_single_copy_end@@GOMP_1.0+0x468>  // b.any
   137a8:	add	x2, x13, x2, lsl #3
   137ac:	add	x0, x6, x6, lsl #2
   137b0:	add	x0, x9, x0, lsl #3
   137b4:	ldr	x3, [x2]
   137b8:	cmp	x3, x0
   137bc:	b.ne	13840 <GOMP_single_copy_end@@GOMP_1.0+0x538>  // b.any
   137c0:	cbz	x12, 13810 <GOMP_single_copy_end@@GOMP_1.0+0x508>
   137c4:	str	x12, [x2]
   137c8:	add	x6, x6, #0x1
   137cc:	add	x1, x1, #0x28
   137d0:	cmp	x7, x6
   137d4:	b.eq	13808 <GOMP_single_copy_end@@GOMP_1.0+0x500>  // b.none
   137d8:	ldrb	w0, [x1, #33]
   137dc:	cbnz	w0, 137c8 <GOMP_single_copy_end@@GOMP_1.0+0x4c0>
   137e0:	ldp	x12, x0, [x1, #8]
   137e4:	cbz	x12, 137f0 <GOMP_single_copy_end@@GOMP_1.0+0x4e8>
   137e8:	str	x0, [x12, #16]
   137ec:	ldr	x0, [x1, #16]
   137f0:	cbz	x0, 136dc <GOMP_single_copy_end@@GOMP_1.0+0x3d4>
   137f4:	str	x12, [x0, #8]
   137f8:	add	x6, x6, #0x1
   137fc:	add	x1, x1, #0x28
   13800:	cmp	x7, x6
   13804:	b.ne	137d8 <GOMP_single_copy_end@@GOMP_1.0+0x4d0>  // b.any
   13808:	ldp	x29, x30, [sp], #16
   1380c:	ret
   13810:	add	x0, x13, #0x20
   13814:	cmp	x2, x0
   13818:	b.cc	13840 <GOMP_single_copy_end@@GOMP_1.0+0x538>  // b.lo, b.ul, b.last
   1381c:	add	x5, x0, x5, lsl #3
   13820:	cmp	x2, x5
   13824:	ccmp	x3, #0x1, #0x4, cc  // cc = lo, ul, last
   13828:	b.eq	13840 <GOMP_single_copy_end@@GOMP_1.0+0x538>  // b.none
   1382c:	ldr	x0, [x13, #16]
   13830:	str	x10, [x2]
   13834:	add	x0, x0, #0x1
   13838:	str	x0, [x13, #16]
   1383c:	b	137c8 <GOMP_single_copy_end@@GOMP_1.0+0x4c0>
   13840:	bl	8820 <abort@plt>
   13844:	mov	x0, #0x0                   	// #0
   13848:	ldr	x0, [x0]
   1384c:	brk	#0x3e8
   13850:	stp	x29, x30, [sp, #-80]!
   13854:	mov	x29, sp
   13858:	stp	x19, x20, [sp, #16]
   1385c:	mov	x19, x0
   13860:	mov	x20, x2
   13864:	stp	x21, x22, [sp, #32]
   13868:	cbz	x1, 138a4 <GOMP_single_copy_end@@GOMP_1.0+0x59c>
   1386c:	add	x21, x0, #0x70
   13870:	ldr	x0, [x1, #8]
   13874:	cbnz	x0, 139a4 <GOMP_single_copy_end@@GOMP_1.0+0x69c>
   13878:	ldr	x0, [x1, #24]
   1387c:	ldr	x2, [x19, #112]
   13880:	cmp	x21, x0
   13884:	b.eq	13ac4 <GOMP_single_copy_end@@GOMP_1.0+0x7bc>  // b.none
   13888:	cmp	x0, x2
   1388c:	b.eq	1389c <GOMP_single_copy_end@@GOMP_1.0+0x594>  // b.none
   13890:	ldr	w3, [x2, #88]
   13894:	cmp	w3, #0x2
   13898:	b.eq	1395c <GOMP_single_copy_end@@GOMP_1.0+0x654>  // b.none
   1389c:	ldrb	w0, [x19, #207]
   138a0:	cbnz	w0, 13b60 <GOMP_single_copy_end@@GOMP_1.0+0x858>
   138a4:	ldr	x21, [x19, #40]
   138a8:	cbz	x21, 138e4 <GOMP_single_copy_end@@GOMP_1.0+0x5dc>
   138ac:	ldr	x0, [x21, #8]
   138b0:	add	x22, x19, #0x80
   138b4:	cbnz	x0, 13a34 <GOMP_single_copy_end@@GOMP_1.0+0x72c>
   138b8:	ldr	x0, [x21, #24]
   138bc:	ldr	x1, [x19, #128]
   138c0:	cmp	x22, x0
   138c4:	b.eq	13ad4 <GOMP_single_copy_end@@GOMP_1.0+0x7cc>  // b.none
   138c8:	cmp	x1, x0
   138cc:	b.eq	138dc <GOMP_single_copy_end@@GOMP_1.0+0x5d4>  // b.none
   138d0:	ldr	w2, [x1, #72]
   138d4:	cmp	w2, #0x2
   138d8:	b.eq	13980 <GOMP_single_copy_end@@GOMP_1.0+0x678>  // b.none
   138dc:	ldrb	w0, [x19, #207]
   138e0:	cbnz	w0, 13b34 <GOMP_single_copy_end@@GOMP_1.0+0x82c>
   138e4:	ldr	x0, [x20, #1288]
   138e8:	add	x2, x19, #0x60
   138ec:	cbnz	x0, 13ae4 <GOMP_single_copy_end@@GOMP_1.0+0x7dc>
   138f0:	ldp	x0, x1, [x19, #96]
   138f4:	ldr	x4, [x20, #1304]
   138f8:	cmp	x2, x4
   138fc:	str	x0, [x1]
   13900:	str	x1, [x0, #8]
   13904:	b.eq	1394c <GOMP_single_copy_end@@GOMP_1.0+0x644>  // b.none
   13908:	ldr	w0, [x20, #1324]
   1390c:	mov	w1, #0x3                   	// #3
   13910:	stp	xzr, xzr, [x19, #96]
   13914:	sub	w0, w0, #0x1
   13918:	str	w1, [x19, #200]
   1391c:	str	w0, [x20, #1324]
   13920:	cbnz	w0, 13930 <GOMP_single_copy_end@@GOMP_1.0+0x628>
   13924:	ldr	w0, [x20, #132]
   13928:	and	w0, w0, #0xfffffffe
   1392c:	str	w0, [x20, #132]
   13930:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   13934:	ldrb	w0, [x0, #1356]
   13938:	cbnz	w0, 13af4 <GOMP_single_copy_end@@GOMP_1.0+0x7ec>
   1393c:	ldp	x19, x20, [sp, #16]
   13940:	ldp	x21, x22, [sp, #32]
   13944:	ldp	x29, x30, [sp], #80
   13948:	ret
   1394c:	cmp	x2, x0
   13950:	csel	x0, x0, xzr, ne  // ne = any
   13954:	str	x0, [x20, #1304]
   13958:	b	13908 <GOMP_single_copy_end@@GOMP_1.0+0x600>
   1395c:	ldr	x3, [x19, #120]
   13960:	str	x2, [x3]
   13964:	str	x3, [x2, #8]
   13968:	ldr	x2, [x0, #8]
   1396c:	stp	x0, x2, [x19, #112]
   13970:	ldr	x2, [x0, #8]
   13974:	str	x21, [x2]
   13978:	str	x21, [x0, #8]
   1397c:	b	1389c <GOMP_single_copy_end@@GOMP_1.0+0x594>
   13980:	ldr	x2, [x19, #136]
   13984:	str	x1, [x2]
   13988:	str	x2, [x1, #8]
   1398c:	ldr	x1, [x0, #8]
   13990:	stp	x0, x1, [x19, #128]
   13994:	ldr	x1, [x0, #8]
   13998:	str	x22, [x1]
   1399c:	str	x22, [x0, #8]
   139a0:	b	138dc <GOMP_single_copy_end@@GOMP_1.0+0x5d4>
   139a4:	ldr	w2, [x19, #88]
   139a8:	add	x0, x1, #0x8
   139ac:	add	x1, sp, #0x38
   139b0:	str	w2, [sp, #56]
   139b4:	bl	2b798 <acc_set_cuda_stream@@OACC_2.0+0x790>
   139b8:	ldr	x1, [x0, #8]
   139bc:	cmp	x21, x1
   139c0:	b.eq	13b8c <GOMP_single_copy_end@@GOMP_1.0+0x884>  // b.none
   139c4:	ldr	x2, [x19, #112]
   139c8:	cmp	x1, x2
   139cc:	b.eq	13a00 <GOMP_single_copy_end@@GOMP_1.0+0x6f8>  // b.none
   139d0:	ldr	w3, [x2, #88]
   139d4:	cmp	w3, #0x2
   139d8:	b.ne	13a00 <GOMP_single_copy_end@@GOMP_1.0+0x6f8>  // b.any
   139dc:	ldr	x3, [x19, #120]
   139e0:	str	x2, [x3]
   139e4:	ldr	x2, [x19, #112]
   139e8:	str	x3, [x2, #8]
   139ec:	ldr	x2, [x1, #8]
   139f0:	stp	x1, x2, [x19, #112]
   139f4:	ldr	x2, [x1, #8]
   139f8:	str	x21, [x2]
   139fc:	str	x21, [x1, #8]
   13a00:	ldrb	w1, [x19, #207]
   13a04:	cbz	w1, 138a4 <GOMP_single_copy_end@@GOMP_1.0+0x59c>
   13a08:	ldr	x1, [x0, #16]
   13a0c:	cmp	x21, x1
   13a10:	b.ne	138a4 <GOMP_single_copy_end@@GOMP_1.0+0x59c>  // b.any
   13a14:	ldr	x1, [x19, #120]
   13a18:	cmp	x21, x1
   13a1c:	b.eq	13a2c <GOMP_single_copy_end@@GOMP_1.0+0x724>  // b.none
   13a20:	ldr	w3, [x1, #88]
   13a24:	cmp	w3, #0x2
   13a28:	b.eq	13bd4 <GOMP_single_copy_end@@GOMP_1.0+0x8cc>  // b.none
   13a2c:	str	xzr, [x0, #16]
   13a30:	b	138a4 <GOMP_single_copy_end@@GOMP_1.0+0x59c>
   13a34:	ldr	w2, [x19, #88]
   13a38:	add	x1, sp, #0x38
   13a3c:	add	x0, x21, #0x8
   13a40:	str	w2, [sp, #56]
   13a44:	bl	2b798 <acc_set_cuda_stream@@OACC_2.0+0x790>
   13a48:	ldr	x1, [x0, #8]
   13a4c:	cmp	x22, x1
   13a50:	b.eq	13b98 <GOMP_single_copy_end@@GOMP_1.0+0x890>  // b.none
   13a54:	ldr	x2, [x19, #128]
   13a58:	cmp	x1, x2
   13a5c:	b.eq	13a90 <GOMP_single_copy_end@@GOMP_1.0+0x788>  // b.none
   13a60:	ldr	w3, [x2, #72]
   13a64:	cmp	w3, #0x2
   13a68:	b.ne	13a90 <GOMP_single_copy_end@@GOMP_1.0+0x788>  // b.any
   13a6c:	ldr	x3, [x19, #136]
   13a70:	str	x2, [x3]
   13a74:	ldr	x2, [x19, #128]
   13a78:	str	x3, [x2, #8]
   13a7c:	ldr	x2, [x1, #8]
   13a80:	stp	x1, x2, [x19, #128]
   13a84:	ldr	x2, [x1, #8]
   13a88:	str	x22, [x2]
   13a8c:	str	x22, [x1, #8]
   13a90:	ldrb	w1, [x19, #207]
   13a94:	cbz	w1, 138e4 <GOMP_single_copy_end@@GOMP_1.0+0x5dc>
   13a98:	ldr	x1, [x0, #16]
   13a9c:	cmp	x22, x1
   13aa0:	b.ne	138e4 <GOMP_single_copy_end@@GOMP_1.0+0x5dc>  // b.any
   13aa4:	ldr	x1, [x19, #136]
   13aa8:	cmp	x22, x1
   13aac:	b.eq	13abc <GOMP_single_copy_end@@GOMP_1.0+0x7b4>  // b.none
   13ab0:	ldr	w3, [x1, #72]
   13ab4:	cmp	w3, #0x2
   13ab8:	b.eq	13bc4 <GOMP_single_copy_end@@GOMP_1.0+0x8bc>  // b.none
   13abc:	str	xzr, [x0, #16]
   13ac0:	b	138e4 <GOMP_single_copy_end@@GOMP_1.0+0x5dc>
   13ac4:	ldrb	w0, [x19, #207]
   13ac8:	str	x2, [x1, #24]
   13acc:	cbz	w0, 138a4 <GOMP_single_copy_end@@GOMP_1.0+0x59c>
   13ad0:	b	13b60 <GOMP_single_copy_end@@GOMP_1.0+0x858>
   13ad4:	ldrb	w0, [x19, #207]
   13ad8:	str	x1, [x21, #24]
   13adc:	cbz	w0, 138e4 <GOMP_single_copy_end@@GOMP_1.0+0x5dc>
   13ae0:	b	13b34 <GOMP_single_copy_end@@GOMP_1.0+0x82c>
   13ae4:	add	x1, x20, #0x508
   13ae8:	mov	w0, #0x0                   	// #0
   13aec:	bl	2b290 <acc_set_cuda_stream@@OACC_2.0+0x288>
   13af0:	b	13908 <GOMP_single_copy_end@@GOMP_1.0+0x600>
   13af4:	ldrb	w1, [x19, #206]
   13af8:	cbnz	w1, 13b2c <GOMP_single_copy_end@@GOMP_1.0+0x824>
   13afc:	ldr	w1, [x20, #132]
   13b00:	tbnz	w1, #2, 1393c <GOMP_single_copy_end@@GOMP_1.0+0x634>
   13b04:	mov	w0, #0x0                   	// #0
   13b08:	cbz	x21, 1393c <GOMP_single_copy_end@@GOMP_1.0+0x634>
   13b0c:	ldrb	w0, [x21, #49]
   13b10:	cbnz	w0, 1393c <GOMP_single_copy_end@@GOMP_1.0+0x634>
   13b14:	ldrb	w1, [x21, #50]
   13b18:	cbz	w1, 1393c <GOMP_single_copy_end@@GOMP_1.0+0x634>
   13b1c:	ldr	x1, [x21]
   13b20:	cbz	x1, 1393c <GOMP_single_copy_end@@GOMP_1.0+0x634>
   13b24:	ldrb	w0, [x1, #49]
   13b28:	b	1393c <GOMP_single_copy_end@@GOMP_1.0+0x634>
   13b2c:	mov	w0, #0x0                   	// #0
   13b30:	b	1393c <GOMP_single_copy_end@@GOMP_1.0+0x634>
   13b34:	ldr	x0, [x21, #32]
   13b38:	cmp	x22, x0
   13b3c:	b.ne	138e4 <GOMP_single_copy_end@@GOMP_1.0+0x5dc>  // b.any
   13b40:	ldr	x0, [x19, #136]
   13b44:	cmp	x22, x0
   13b48:	b.eq	13b58 <GOMP_single_copy_end@@GOMP_1.0+0x850>  // b.none
   13b4c:	ldr	w2, [x0, #72]
   13b50:	cmp	w2, #0x2
   13b54:	b.eq	13ba4 <GOMP_single_copy_end@@GOMP_1.0+0x89c>  // b.none
   13b58:	str	xzr, [x21, #32]
   13b5c:	b	138e4 <GOMP_single_copy_end@@GOMP_1.0+0x5dc>
   13b60:	ldr	x0, [x1, #32]
   13b64:	cmp	x21, x0
   13b68:	b.ne	138a4 <GOMP_single_copy_end@@GOMP_1.0+0x59c>  // b.any
   13b6c:	ldr	x0, [x19, #120]
   13b70:	cmp	x21, x0
   13b74:	b.eq	13b84 <GOMP_single_copy_end@@GOMP_1.0+0x87c>  // b.none
   13b78:	ldr	w3, [x0, #88]
   13b7c:	cmp	w3, #0x2
   13b80:	b.eq	13bb4 <GOMP_single_copy_end@@GOMP_1.0+0x8ac>  // b.none
   13b84:	str	xzr, [x1, #32]
   13b88:	b	138a4 <GOMP_single_copy_end@@GOMP_1.0+0x59c>
   13b8c:	ldr	x1, [x19, #112]
   13b90:	str	x1, [x0, #8]
   13b94:	b	13a00 <GOMP_single_copy_end@@GOMP_1.0+0x6f8>
   13b98:	ldr	x1, [x19, #128]
   13b9c:	str	x1, [x0, #8]
   13ba0:	b	13a90 <GOMP_single_copy_end@@GOMP_1.0+0x788>
   13ba4:	ldrb	w1, [x0, #79]
   13ba8:	cbz	w1, 13b58 <GOMP_single_copy_end@@GOMP_1.0+0x850>
   13bac:	str	x0, [x21, #32]
   13bb0:	b	138e4 <GOMP_single_copy_end@@GOMP_1.0+0x5dc>
   13bb4:	ldrb	w2, [x0, #95]
   13bb8:	cbz	w2, 13b84 <GOMP_single_copy_end@@GOMP_1.0+0x87c>
   13bbc:	str	x0, [x1, #32]
   13bc0:	b	138a4 <GOMP_single_copy_end@@GOMP_1.0+0x59c>
   13bc4:	ldrb	w2, [x1, #79]
   13bc8:	cbz	w2, 13abc <GOMP_single_copy_end@@GOMP_1.0+0x7b4>
   13bcc:	str	x1, [x0, #16]
   13bd0:	b	138e4 <GOMP_single_copy_end@@GOMP_1.0+0x5dc>
   13bd4:	ldrb	w2, [x1, #95]
   13bd8:	cbz	w2, 13a2c <GOMP_single_copy_end@@GOMP_1.0+0x724>
   13bdc:	str	x1, [x0, #16]
   13be0:	b	138a4 <GOMP_single_copy_end@@GOMP_1.0+0x59c>
   13be4:	nop
   13be8:	stp	x29, x30, [sp, #-176]!
   13bec:	mov	x29, sp
   13bf0:	stp	x23, x24, [sp, #48]
   13bf4:	mov	x24, x0
   13bf8:	ldr	x0, [x0, #48]
   13bfc:	stp	x25, x26, [sp, #64]
   13c00:	stp	x27, x28, [sp, #80]
   13c04:	ldr	x26, [x0]
   13c08:	ldr	x27, [x24]
   13c0c:	cbz	x26, 14190 <GOMP_single_copy_end@@GOMP_1.0+0xe88>
   13c10:	str	d8, [sp, #96]
   13c14:	movi	v8.2s, #0x1
   13c18:	add	x25, x1, #0x508
   13c1c:	mov	x28, #0x0                   	// #0
   13c20:	stp	x19, x20, [sp, #16]
   13c24:	mov	x20, #0x0                   	// #0
   13c28:	stp	x21, x22, [sp, #32]
   13c2c:	mov	x21, x1
   13c30:	add	x1, sp, #0x98
   13c34:	str	x1, [sp, #112]
   13c38:	add	x1, x20, #0x2
   13c3c:	ldr	x19, [x0, x1, lsl #3]
   13c40:	ldr	x2, [x19, #80]
   13c44:	sub	x2, x2, #0x1
   13c48:	str	x2, [x19, #80]
   13c4c:	cbnz	x2, 13d68 <GOMP_single_copy_end@@GOMP_1.0+0xa60>
   13c50:	ldr	w23, [x19, #88]
   13c54:	ldr	x22, [x19, #40]
   13c58:	cbz	x27, 13cd8 <GOMP_single_copy_end@@GOMP_1.0+0x9d0>
   13c5c:	ldr	x0, [x27, #8]
   13c60:	add	x5, x27, #0x8
   13c64:	ldrb	w4, [x19, #207]
   13c68:	add	x2, x19, #0x70
   13c6c:	cbnz	x0, 13f6c <GOMP_single_copy_end@@GOMP_1.0+0xc64>
   13c70:	cmp	w23, #0x0
   13c74:	ldr	x0, [x27, #24]
   13c78:	b.gt	13f1c <GOMP_single_copy_end@@GOMP_1.0+0xc14>
   13c7c:	cbz	x0, 13e7c <GOMP_single_copy_end@@GOMP_1.0+0xb74>
   13c80:	ldr	x1, [x27, #32]
   13c84:	cmp	x1, #0x0
   13c88:	ccmp	w4, #0x0, #0x0, ne  // ne = any
   13c8c:	b.eq	140d0 <GOMP_single_copy_end@@GOMP_1.0+0xdc8>  // b.none
   13c90:	ldr	x1, [x0, #8]
   13c94:	stp	x0, x1, [x19, #112]
   13c98:	str	x2, [x27, #24]
   13c9c:	ldr	x0, [x19, #112]
   13ca0:	str	x2, [x0, #8]
   13ca4:	ldr	x0, [x19, #120]
   13ca8:	str	x2, [x0]
   13cac:	ldr	x0, [x27, #32]
   13cb0:	cmp	x0, #0x0
   13cb4:	ccmp	w4, #0x0, #0x4, eq  // eq = none
   13cb8:	b.ne	13e98 <GOMP_single_copy_end@@GOMP_1.0+0xb90>  // b.any
   13cbc:	ldr	x0, [x27, #64]
   13cc0:	cbz	x0, 13cd4 <GOMP_single_copy_end@@GOMP_1.0+0x9cc>
   13cc4:	ldrb	w1, [x0]
   13cc8:	cbnz	w1, 13ea0 <GOMP_single_copy_end@@GOMP_1.0+0xb98>
   13ccc:	ldrb	w1, [x0, #1]
   13cd0:	cbnz	w1, 13edc <GOMP_single_copy_end@@GOMP_1.0+0xbd4>
   13cd4:	ldr	w23, [x19, #88]
   13cd8:	cbz	x22, 13d24 <GOMP_single_copy_end@@GOMP_1.0+0xa1c>
   13cdc:	ldr	x0, [x22, #8]
   13ce0:	add	x4, x22, #0x8
   13ce4:	add	x2, x19, #0x80
   13ce8:	cbnz	x0, 14024 <GOMP_single_copy_end@@GOMP_1.0+0xd1c>
   13cec:	cmp	w23, #0x0
   13cf0:	ldr	x0, [x22, #24]
   13cf4:	b.gt	13fe4 <GOMP_single_copy_end@@GOMP_1.0+0xcdc>
   13cf8:	cbz	x0, 13e6c <GOMP_single_copy_end@@GOMP_1.0+0xb64>
   13cfc:	ldr	x1, [x0, #8]
   13d00:	stp	x0, x1, [x19, #128]
   13d04:	str	x2, [x22, #24]
   13d08:	ldr	x0, [x19, #128]
   13d0c:	str	x2, [x0, #8]
   13d10:	ldr	x0, [x19, #136]
   13d14:	str	x2, [x0]
   13d18:	ldrb	w0, [x22, #48]
   13d1c:	cbnz	w0, 13db4 <GOMP_single_copy_end@@GOMP_1.0+0xaac>
   13d20:	ldr	w23, [x19, #88]
   13d24:	ldr	x0, [x21, #1288]
   13d28:	add	x22, x19, #0x60
   13d2c:	cbnz	x0, 13e38 <GOMP_single_copy_end@@GOMP_1.0+0xb30>
   13d30:	cmp	w23, #0x0
   13d34:	ldr	x0, [x21, #1304]
   13d38:	b.gt	13e00 <GOMP_single_copy_end@@GOMP_1.0+0xaf8>
   13d3c:	cbz	x0, 13df0 <GOMP_single_copy_end@@GOMP_1.0+0xae8>
   13d40:	ldr	x1, [x0, #8]
   13d44:	stp	x0, x1, [x19, #96]
   13d48:	str	x22, [x0, #8]
   13d4c:	ldr	x0, [x19, #104]
   13d50:	str	x22, [x0]
   13d54:	ldr	d0, [x21, #1320]
   13d58:	add	x28, x28, #0x1
   13d5c:	ldr	x0, [x24, #48]
   13d60:	add	v0.2s, v0.2s, v8.2s
   13d64:	str	d0, [x21, #1320]
   13d68:	add	x20, x20, #0x1
   13d6c:	cmp	x26, x20
   13d70:	b.ne	13c38 <GOMP_single_copy_end@@GOMP_1.0+0x930>  // b.any
   13d74:	bl	88b0 <free@plt>
   13d78:	str	xzr, [x24, #48]
   13d7c:	cmp	x28, #0x1
   13d80:	b.ls	140ac <GOMP_single_copy_end@@GOMP_1.0+0xda4>  // b.plast
   13d84:	ldr	w0, [x21, #132]
   13d88:	ldp	x19, x20, [sp, #16]
   13d8c:	orr	w0, w0, #0x1
   13d90:	ldr	d8, [sp, #96]
   13d94:	str	w0, [x21, #132]
   13d98:	mov	x0, x28
   13d9c:	ldp	x21, x22, [sp, #32]
   13da0:	ldp	x23, x24, [sp, #48]
   13da4:	ldp	x25, x26, [sp, #64]
   13da8:	ldp	x27, x28, [sp, #80]
   13dac:	ldp	x29, x30, [sp], #176
   13db0:	ret
   13db4:	ldr	w1, [x22, #52]
   13db8:	add	x0, x22, #0x34
   13dbc:	strb	wzr, [x22, #48]
   13dc0:	add	w2, w1, #0x1
   13dc4:	and	w2, w2, #0x7fffffff
   13dc8:	ldxr	w4, [x0]
   13dcc:	cmp	w4, w1
   13dd0:	b.ne	13ddc <GOMP_single_copy_end@@GOMP_1.0+0xad4>  // b.any
   13dd4:	stlxr	w3, w2, [x0]
   13dd8:	cmp	w3, #0x0
   13ddc:	mov	w1, w4
   13de0:	b.ne	13dc0 <GOMP_single_copy_end@@GOMP_1.0+0xab8>  // b.any
   13de4:	tbz	w4, #31, 13d20 <GOMP_single_copy_end@@GOMP_1.0+0xa18>
   13de8:	bl	1cef0 <omp_get_num_procs@@OMP_1.0+0x340>
   13dec:	b	13d20 <GOMP_single_copy_end@@GOMP_1.0+0xa18>
   13df0:	dup	v0.2d, x22
   13df4:	str	q0, [x19, #96]
   13df8:	str	x22, [x21, #1304]
   13dfc:	b	13d54 <GOMP_single_copy_end@@GOMP_1.0+0xa4c>
   13e00:	cbz	x0, 14068 <GOMP_single_copy_end@@GOMP_1.0+0xd60>
   13e04:	mov	x0, #0x28                  	// #40
   13e08:	bl	b2f8 <fprintf@plt+0x2838>
   13e0c:	add	x2, x21, #0x600
   13e10:	mov	x1, x0
   13e14:	mov	x0, x25
   13e18:	ldur	q0, [x2, #-232]
   13e1c:	str	wzr, [x1]
   13e20:	stp	xzr, xzr, [x1, #24]
   13e24:	stur	q0, [x1, #8]
   13e28:	bl	2b498 <acc_set_cuda_stream@@OACC_2.0+0x490>
   13e2c:	ldr	x0, [x25]
   13e30:	str	xzr, [x25, #16]
   13e34:	cbz	x0, 14068 <GOMP_single_copy_end@@GOMP_1.0+0xd60>
   13e38:	ldr	x1, [sp, #112]
   13e3c:	mov	x0, x25
   13e40:	str	w23, [sp, #152]
   13e44:	bl	2b798 <acc_set_cuda_stream@@OACC_2.0+0x790>
   13e48:	cbz	x0, 14068 <GOMP_single_copy_end@@GOMP_1.0+0xd60>
   13e4c:	ldr	x1, [x0, #8]
   13e50:	cbz	x1, 1409c <GOMP_single_copy_end@@GOMP_1.0+0xd94>
   13e54:	ldr	x0, [x1, #8]
   13e58:	stp	x1, x0, [x19, #96]
   13e5c:	str	x22, [x1, #8]
   13e60:	ldr	x0, [x19, #104]
   13e64:	str	x22, [x0]
   13e68:	b	13d54 <GOMP_single_copy_end@@GOMP_1.0+0xa4c>
   13e6c:	dup	v0.2d, x2
   13e70:	str	q0, [x19, #128]
   13e74:	str	x2, [x22, #24]
   13e78:	b	13d18 <GOMP_single_copy_end@@GOMP_1.0+0xa10>
   13e7c:	dup	v0.2d, x2
   13e80:	str	q0, [x19, #112]
   13e84:	ldr	x0, [x27, #32]
   13e88:	str	x2, [x27, #24]
   13e8c:	cmp	x0, #0x0
   13e90:	ccmp	w4, #0x0, #0x4, eq  // eq = none
   13e94:	b.eq	13cbc <GOMP_single_copy_end@@GOMP_1.0+0x9b4>  // b.none
   13e98:	str	x2, [x27, #32]
   13e9c:	b	13cbc <GOMP_single_copy_end@@GOMP_1.0+0x9b4>
   13ea0:	ldr	w1, [x0, #16]
   13ea4:	strb	wzr, [x0], #16
   13ea8:	add	w2, w1, #0x1
   13eac:	and	w2, w2, #0x7fffffff
   13eb0:	ldxr	w4, [x0]
   13eb4:	cmp	w4, w1
   13eb8:	b.ne	13ec4 <GOMP_single_copy_end@@GOMP_1.0+0xbbc>  // b.any
   13ebc:	stlxr	w3, w2, [x0]
   13ec0:	cmp	w3, #0x0
   13ec4:	mov	w1, w4
   13ec8:	b.ne	13ea8 <GOMP_single_copy_end@@GOMP_1.0+0xba0>  // b.any
   13ecc:	tbz	w4, #31, 13cd4 <GOMP_single_copy_end@@GOMP_1.0+0x9cc>
   13ed0:	bl	1cef0 <omp_get_num_procs@@OMP_1.0+0x340>
   13ed4:	ldr	w23, [x19, #88]
   13ed8:	b	13cd8 <GOMP_single_copy_end@@GOMP_1.0+0x9d0>
   13edc:	ldr	w1, [x0, #16]
   13ee0:	add	x4, x0, #0x10
   13ee4:	strb	wzr, [x0, #1]
   13ee8:	add	w2, w1, #0x1
   13eec:	and	w2, w2, #0x7fffffff
   13ef0:	ldxr	w0, [x4]
   13ef4:	cmp	w0, w1
   13ef8:	b.ne	13f04 <GOMP_single_copy_end@@GOMP_1.0+0xbfc>  // b.any
   13efc:	stlxr	w3, w2, [x4]
   13f00:	cmp	w3, #0x0
   13f04:	mov	w1, w0
   13f08:	b.ne	13ee8 <GOMP_single_copy_end@@GOMP_1.0+0xbe0>  // b.any
   13f0c:	tbz	w0, #31, 13cd4 <GOMP_single_copy_end@@GOMP_1.0+0x9cc>
   13f10:	mov	x0, x4
   13f14:	bl	1cef0 <omp_get_num_procs@@OMP_1.0+0x340>
   13f18:	b	13ed4 <GOMP_single_copy_end@@GOMP_1.0+0xbcc>
   13f1c:	cbz	x0, 140dc <GOMP_single_copy_end@@GOMP_1.0+0xdd4>
   13f20:	mov	x0, #0x28                  	// #40
   13f24:	str	x5, [sp, #120]
   13f28:	str	w4, [sp, #128]
   13f2c:	str	x2, [sp, #136]
   13f30:	bl	b2f8 <fprintf@plt+0x2838>
   13f34:	mov	x1, x0
   13f38:	ldur	q0, [x27, #24]
   13f3c:	stp	xzr, xzr, [x0, #24]
   13f40:	ldr	x5, [sp, #120]
   13f44:	str	wzr, [x1]
   13f48:	stur	q0, [x1, #8]
   13f4c:	mov	x0, x5
   13f50:	bl	2b498 <acc_set_cuda_stream@@OACC_2.0+0x490>
   13f54:	ldr	x5, [sp, #120]
   13f58:	ldr	x0, [x27, #8]
   13f5c:	str	xzr, [x5, #16]
   13f60:	ldr	w4, [sp, #128]
   13f64:	ldr	x2, [sp, #136]
   13f68:	cbz	x0, 140dc <GOMP_single_copy_end@@GOMP_1.0+0xdd4>
   13f6c:	ldr	x1, [sp, #112]
   13f70:	mov	x0, x5
   13f74:	str	x5, [sp, #120]
   13f78:	str	w4, [sp, #128]
   13f7c:	str	x2, [sp, #136]
   13f80:	str	w23, [sp, #152]
   13f84:	bl	2b798 <acc_set_cuda_stream@@OACC_2.0+0x790>
   13f88:	ldr	w4, [sp, #128]
   13f8c:	ldr	x5, [sp, #120]
   13f90:	ldr	x2, [sp, #136]
   13f94:	cbz	x0, 140dc <GOMP_single_copy_end@@GOMP_1.0+0xdd4>
   13f98:	ldr	x1, [x0, #8]
   13f9c:	cbz	x1, 14128 <GOMP_single_copy_end@@GOMP_1.0+0xe20>
   13fa0:	ldr	x5, [x0, #16]
   13fa4:	cmp	x5, #0x0
   13fa8:	ccmp	w4, #0x0, #0x0, ne  // ne = any
   13fac:	b.eq	14184 <GOMP_single_copy_end@@GOMP_1.0+0xe7c>  // b.none
   13fb0:	ldr	x5, [x1, #8]
   13fb4:	stp	x1, x5, [x19, #112]
   13fb8:	str	x2, [x0, #8]
   13fbc:	ldr	x1, [x19, #112]
   13fc0:	str	x2, [x1, #8]
   13fc4:	ldr	x1, [x19, #120]
   13fc8:	str	x2, [x1]
   13fcc:	ldr	x1, [x0, #16]
   13fd0:	cmp	x1, #0x0
   13fd4:	ccmp	w4, #0x0, #0x4, eq  // eq = none
   13fd8:	b.eq	13cbc <GOMP_single_copy_end@@GOMP_1.0+0x9b4>  // b.none
   13fdc:	str	x2, [x0, #16]
   13fe0:	b	13cbc <GOMP_single_copy_end@@GOMP_1.0+0x9b4>
   13fe4:	cbz	x0, 14138 <GOMP_single_copy_end@@GOMP_1.0+0xe30>
   13fe8:	mov	x0, #0x28                  	// #40
   13fec:	stp	x4, x2, [sp, #120]
   13ff0:	bl	b2f8 <fprintf@plt+0x2838>
   13ff4:	mov	x1, x0
   13ff8:	ldur	q0, [x22, #24]
   13ffc:	stp	xzr, xzr, [x0, #24]
   14000:	ldr	x4, [sp, #120]
   14004:	str	wzr, [x1]
   14008:	stur	q0, [x1, #8]
   1400c:	mov	x0, x4
   14010:	bl	2b498 <acc_set_cuda_stream@@OACC_2.0+0x490>
   14014:	ldr	x0, [x22, #8]
   14018:	ldp	x4, x2, [sp, #120]
   1401c:	str	xzr, [x4, #16]
   14020:	cbz	x0, 14138 <GOMP_single_copy_end@@GOMP_1.0+0xe30>
   14024:	ldr	x1, [sp, #112]
   14028:	mov	x0, x4
   1402c:	stp	x4, x2, [sp, #120]
   14030:	str	w23, [sp, #152]
   14034:	bl	2b798 <acc_set_cuda_stream@@OACC_2.0+0x790>
   14038:	ldp	x4, x2, [sp, #120]
   1403c:	cbz	x0, 14138 <GOMP_single_copy_end@@GOMP_1.0+0xe30>
   14040:	ldr	x1, [x0, #8]
   14044:	cbz	x1, 14174 <GOMP_single_copy_end@@GOMP_1.0+0xe6c>
   14048:	ldr	x4, [x1, #8]
   1404c:	stp	x1, x4, [x19, #128]
   14050:	str	x2, [x0, #8]
   14054:	ldr	x0, [x19, #128]
   14058:	str	x2, [x0, #8]
   1405c:	ldr	x0, [x19, #136]
   14060:	str	x2, [x0]
   14064:	b	13d18 <GOMP_single_copy_end@@GOMP_1.0+0xa10>
   14068:	mov	x0, #0x28                  	// #40
   1406c:	bl	b2f8 <fprintf@plt+0x2838>
   14070:	mov	x1, x0
   14074:	mov	x0, x25
   14078:	str	x1, [sp, #120]
   1407c:	str	w23, [x1]
   14080:	stp	xzr, xzr, [x1, #8]
   14084:	stp	xzr, xzr, [x1, #24]
   14088:	bl	2b498 <acc_set_cuda_stream@@OACC_2.0+0x490>
   1408c:	ldr	x1, [sp, #120]
   14090:	mov	x0, x1
   14094:	ldr	x1, [x0, #8]
   14098:	cbnz	x1, 13e54 <GOMP_single_copy_end@@GOMP_1.0+0xb4c>
   1409c:	dup	v0.2d, x22
   140a0:	str	q0, [x19, #96]
   140a4:	str	x22, [x0, #8]
   140a8:	b	13d54 <GOMP_single_copy_end@@GOMP_1.0+0xa4c>
   140ac:	mov	x0, x28
   140b0:	ldr	d8, [sp, #96]
   140b4:	ldp	x19, x20, [sp, #16]
   140b8:	ldp	x21, x22, [sp, #32]
   140bc:	ldp	x23, x24, [sp, #48]
   140c0:	ldp	x25, x26, [sp, #64]
   140c4:	ldp	x27, x28, [sp, #80]
   140c8:	ldp	x29, x30, [sp], #176
   140cc:	ret
   140d0:	ldr	x0, [x1]
   140d4:	stp	x0, x1, [x19, #112]
   140d8:	b	13ca0 <GOMP_single_copy_end@@GOMP_1.0+0x998>
   140dc:	mov	x0, #0x28                  	// #40
   140e0:	str	x5, [sp, #120]
   140e4:	str	w4, [sp, #128]
   140e8:	str	x2, [sp, #136]
   140ec:	bl	b2f8 <fprintf@plt+0x2838>
   140f0:	mov	x1, x0
   140f4:	stp	xzr, xzr, [x0, #8]
   140f8:	ldr	x5, [sp, #120]
   140fc:	stp	xzr, xzr, [x0, #24]
   14100:	str	w23, [x1]
   14104:	mov	x0, x5
   14108:	str	x1, [sp, #120]
   1410c:	bl	2b498 <acc_set_cuda_stream@@OACC_2.0+0x490>
   14110:	ldr	x1, [sp, #120]
   14114:	ldr	w4, [sp, #128]
   14118:	mov	x0, x1
   1411c:	ldr	x2, [sp, #136]
   14120:	ldr	x1, [x0, #8]
   14124:	cbnz	x1, 13fa0 <GOMP_single_copy_end@@GOMP_1.0+0xc98>
   14128:	dup	v0.2d, x2
   1412c:	str	q0, [x19, #112]
   14130:	str	x2, [x0, #8]
   14134:	b	13fcc <GOMP_single_copy_end@@GOMP_1.0+0xcc4>
   14138:	mov	x0, #0x28                  	// #40
   1413c:	stp	x4, x2, [sp, #120]
   14140:	bl	b2f8 <fprintf@plt+0x2838>
   14144:	mov	x1, x0
   14148:	stp	xzr, xzr, [x0, #8]
   1414c:	ldr	x4, [sp, #120]
   14150:	stp	xzr, xzr, [x0, #24]
   14154:	str	w23, [x1]
   14158:	mov	x0, x4
   1415c:	str	x1, [sp, #120]
   14160:	bl	2b498 <acc_set_cuda_stream@@OACC_2.0+0x490>
   14164:	ldp	x1, x2, [sp, #120]
   14168:	mov	x0, x1
   1416c:	ldr	x1, [x0, #8]
   14170:	cbnz	x1, 14048 <GOMP_single_copy_end@@GOMP_1.0+0xd40>
   14174:	dup	v0.2d, x2
   14178:	str	q0, [x19, #128]
   1417c:	str	x2, [x0, #8]
   14180:	b	13d18 <GOMP_single_copy_end@@GOMP_1.0+0xa10>
   14184:	ldr	x1, [x5]
   14188:	stp	x1, x5, [x19, #112]
   1418c:	b	13fc0 <GOMP_single_copy_end@@GOMP_1.0+0xcb8>
   14190:	bl	88b0 <free@plt>
   14194:	str	xzr, [x24, #48]
   14198:	mov	x28, #0x0                   	// #0
   1419c:	mov	x0, x28
   141a0:	ldp	x23, x24, [sp, #48]
   141a4:	ldp	x25, x26, [sp, #64]
   141a8:	ldp	x27, x28, [sp, #80]
   141ac:	ldp	x29, x30, [sp], #176
   141b0:	ret
   141b4:	nop
   141b8:	stp	x29, x30, [sp, #-96]!
   141bc:	mov	x29, sp
   141c0:	stp	x19, x20, [sp, #16]
   141c4:	ldr	x19, [x0]
   141c8:	stp	x21, x22, [sp, #32]
   141cc:	mov	x22, x0
   141d0:	mov	x21, x1
   141d4:	stp	x23, x24, [sp, #48]
   141d8:	adrp	x24, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   141dc:	ldr	x6, [x1]
   141e0:	ldp	x1, x0, [x19]
   141e4:	eor	x23, x6, x6, lsr #32
   141e8:	add	x2, x1, x1, lsl #1
   141ec:	cmp	x2, x0, lsl #2
   141f0:	b.ls	14314 <GOMP_single_copy_end@@GOMP_1.0+0x100c>  // b.plast
   141f4:	ldr	w7, [x19, #24]
   141f8:	add	x0, x24, #0x5e0
   141fc:	and	x6, x23, #0xffffffff
   14200:	lsl	x4, x7, #4
   14204:	add	x2, x0, x4
   14208:	ldr	w4, [x0, x4]
   1420c:	ldr	w0, [x2, #4]
   14210:	ldr	w8, [x2, #12]
   14214:	mul	x0, x0, x6
   14218:	lsr	x0, x0, #32
   1421c:	sub	w2, w23, w0
   14220:	add	w2, w0, w2, lsr #1
   14224:	lsr	w2, w2, w8
   14228:	msub	w5, w2, w4, w23
   1422c:	add	x3, x5, #0x4
   14230:	mov	x2, x5
   14234:	ldr	x0, [x19, x3, lsl #3]
   14238:	cbz	x0, 14434 <GOMP_single_copy_end@@GOMP_1.0+0x112c>
   1423c:	cmp	x0, #0x1
   14240:	b.eq	1445c <GOMP_single_copy_end@@GOMP_1.0+0x1154>  // b.none
   14244:	ldr	x9, [x0]
   14248:	mov	x0, #0x0                   	// #0
   1424c:	ldr	x5, [x21]
   14250:	cmp	x9, x5
   14254:	b.eq	14464 <GOMP_single_copy_end@@GOMP_1.0+0x115c>  // b.none
   14258:	add	x24, x24, #0x5e0
   1425c:	sub	w4, w4, #0x2
   14260:	add	x24, x24, x7, lsl #4
   14264:	add	w5, w23, #0x1
   14268:	ldr	w3, [x24, #8]
   1426c:	mul	x3, x3, x6
   14270:	lsr	x3, x3, #32
   14274:	sub	w6, w23, w3
   14278:	add	w6, w3, w6, lsr #1
   1427c:	lsr	w6, w6, w8
   14280:	msub	w6, w6, w4, w5
   14284:	nop
   14288:	add	w5, w2, w6
   1428c:	mov	x2, x5
   14290:	cmp	x1, w5, uxtw
   14294:	b.hi	142a0 <GOMP_single_copy_end@@GOMP_1.0+0xf98>  // b.pmore
   14298:	sub	w5, w5, w1
   1429c:	mov	x2, x5
   142a0:	add	x4, x5, #0x4
   142a4:	ldr	x3, [x19, x4, lsl #3]
   142a8:	cbz	x3, 142ec <GOMP_single_copy_end@@GOMP_1.0+0xfe4>
   142ac:	cmp	x3, #0x1
   142b0:	b.eq	142dc <GOMP_single_copy_end@@GOMP_1.0+0xfd4>  // b.none
   142b4:	ldr	x7, [x3]
   142b8:	ldr	x3, [x21]
   142bc:	cmp	x7, x3
   142c0:	b.ne	14288 <GOMP_single_copy_end@@GOMP_1.0+0xf80>  // b.any
   142c4:	add	x0, x19, x4, lsl #3
   142c8:	ldp	x19, x20, [sp, #16]
   142cc:	ldp	x21, x22, [sp, #32]
   142d0:	ldp	x23, x24, [sp, #48]
   142d4:	ldp	x29, x30, [sp], #96
   142d8:	ret
   142dc:	add	x4, x19, x4, lsl #3
   142e0:	cmp	x0, #0x0
   142e4:	csel	x0, x4, x0, eq  // eq = none
   142e8:	b	14288 <GOMP_single_copy_end@@GOMP_1.0+0xf80>
   142ec:	cbz	x0, 14434 <GOMP_single_copy_end@@GOMP_1.0+0x112c>
   142f0:	ldr	x1, [x19, #16]
   142f4:	ldp	x21, x22, [sp, #32]
   142f8:	sub	x1, x1, #0x1
   142fc:	str	x1, [x19, #16]
   14300:	str	xzr, [x0]
   14304:	ldp	x19, x20, [sp, #16]
   14308:	ldp	x23, x24, [sp, #48]
   1430c:	ldp	x29, x30, [sp], #96
   14310:	ret
   14314:	ldr	x2, [x19, #16]
   14318:	stp	x25, x26, [sp, #64]
   1431c:	add	x25, x19, #0x20
   14320:	sub	x0, x0, x2
   14324:	stp	x27, x28, [sp, #80]
   14328:	add	x27, x25, x1, lsl #3
   1432c:	cmp	x1, x0, lsl #1
   14330:	lsl	x4, x0, #1
   14334:	b.cc	1447c <GOMP_single_copy_end@@GOMP_1.0+0x1174>  // b.lo, b.ul, b.last
   14338:	lsl	x0, x0, #3
   1433c:	mov	x2, #0x20                  	// #32
   14340:	cmp	x0, x2
   14344:	csel	x0, x0, x2, cs  // cs = hs, nlast
   14348:	cmp	x1, x0
   1434c:	b.hi	1447c <GOMP_single_copy_end@@GOMP_1.0+0x1174>  // b.pmore
   14350:	sub	x1, x1, #0x1
   14354:	add	x4, x24, #0x5e0
   14358:	mov	w20, #0x1e                  	// #30
   1435c:	mov	w0, #0x0                   	// #0
   14360:	b	14380 <GOMP_single_copy_end@@GOMP_1.0+0x1078>
   14364:	sub	w2, w20, w0
   14368:	add	w2, w0, w2, lsr #1
   1436c:	ubfiz	x3, x2, #4, #32
   14370:	ldr	w3, [x4, x3]
   14374:	cmp	x1, x3
   14378:	b.hi	144d4 <GOMP_single_copy_end@@GOMP_1.0+0x11cc>  // b.pmore
   1437c:	mov	w20, w2
   14380:	cmp	w20, w0
   14384:	b.ne	14364 <GOMP_single_copy_end@@GOMP_1.0+0x105c>  // b.any
   14388:	add	x0, x24, #0x5e0
   1438c:	ubfiz	x2, x20, #4, #32
   14390:	ldr	w28, [x0, x2]
   14394:	cmp	x1, x28
   14398:	b.hi	144c8 <GOMP_single_copy_end@@GOMP_1.0+0x11c0>  // b.pmore
   1439c:	add	x26, x28, #0x4
   143a0:	lsl	x26, x26, #3
   143a4:	mov	x0, x26
   143a8:	bl	b2f8 <fprintf@plt+0x2838>
   143ac:	sub	x2, x26, #0x20
   143b0:	mov	x26, x0
   143b4:	mov	w1, #0x0                   	// #0
   143b8:	add	x0, x0, #0x20
   143bc:	stp	x28, xzr, [x26]
   143c0:	str	xzr, [x26, #16]
   143c4:	str	w20, [x26, #24]
   143c8:	bl	8770 <memset@plt>
   143cc:	ldp	x0, x1, [x19, #8]
   143d0:	sub	x0, x0, x1
   143d4:	str	x0, [x26, #8]
   143d8:	b	143e8 <GOMP_single_copy_end@@GOMP_1.0+0x10e0>
   143dc:	add	x25, x25, #0x8
   143e0:	cmp	x27, x25
   143e4:	b.ls	14414 <GOMP_single_copy_end@@GOMP_1.0+0x110c>  // b.plast
   143e8:	ldr	x20, [x25]
   143ec:	cmp	x20, #0x1
   143f0:	b.ls	143dc <GOMP_single_copy_end@@GOMP_1.0+0x10d4>  // b.plast
   143f4:	ldr	x1, [x20]
   143f8:	mov	x0, x26
   143fc:	add	x25, x25, #0x8
   14400:	eor	x1, x1, x1, lsr #32
   14404:	bl	13490 <GOMP_single_copy_end@@GOMP_1.0+0x188>
   14408:	str	x20, [x0]
   1440c:	cmp	x27, x25
   14410:	b.hi	143e8 <GOMP_single_copy_end@@GOMP_1.0+0x10e0>  // b.pmore
   14414:	mov	x0, x19
   14418:	bl	88b0 <free@plt>
   1441c:	mov	x19, x26
   14420:	ldr	x1, [x26]
   14424:	ldp	x27, x28, [sp, #80]
   14428:	str	x26, [x22]
   1442c:	ldp	x25, x26, [sp, #64]
   14430:	b	141f4 <GOMP_single_copy_end@@GOMP_1.0+0xeec>
   14434:	ldr	x1, [x19, #8]
   14438:	add	x5, x5, #0x4
   1443c:	ldp	x21, x22, [sp, #32]
   14440:	add	x1, x1, #0x1
   14444:	str	x1, [x19, #8]
   14448:	add	x0, x19, x5, lsl #3
   1444c:	ldp	x19, x20, [sp, #16]
   14450:	ldp	x23, x24, [sp, #48]
   14454:	ldp	x29, x30, [sp], #96
   14458:	ret
   1445c:	add	x0, x19, x3, lsl #3
   14460:	b	14258 <GOMP_single_copy_end@@GOMP_1.0+0xf50>
   14464:	add	x0, x19, x3, lsl #3
   14468:	ldp	x19, x20, [sp, #16]
   1446c:	ldp	x21, x22, [sp, #32]
   14470:	ldp	x23, x24, [sp, #48]
   14474:	ldp	x29, x30, [sp], #96
   14478:	ret
   1447c:	adrp	x24, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   14480:	mov	w20, #0x1e                  	// #30
   14484:	add	x1, x24, #0x5e0
   14488:	mov	w3, #0x0                   	// #0
   1448c:	b	144ac <GOMP_single_copy_end@@GOMP_1.0+0x11a4>
   14490:	sub	w2, w20, w3
   14494:	add	w2, w3, w2, lsr #1
   14498:	ubfiz	x0, x2, #4, #32
   1449c:	ldr	w0, [x1, x0]
   144a0:	cmp	x4, x0
   144a4:	b.hi	144cc <GOMP_single_copy_end@@GOMP_1.0+0x11c4>  // b.pmore
   144a8:	mov	w20, w2
   144ac:	cmp	w20, w3
   144b0:	b.ne	14490 <GOMP_single_copy_end@@GOMP_1.0+0x1188>  // b.any
   144b4:	add	x0, x24, #0x5e0
   144b8:	ubfiz	x1, x20, #4, #32
   144bc:	ldr	w28, [x0, x1]
   144c0:	cmp	x4, x28
   144c4:	b.ls	1439c <GOMP_single_copy_end@@GOMP_1.0+0x1094>  // b.plast
   144c8:	bl	8820 <abort@plt>
   144cc:	add	w3, w2, #0x1
   144d0:	b	144ac <GOMP_single_copy_end@@GOMP_1.0+0x11a4>
   144d4:	add	w0, w2, #0x1
   144d8:	b	14380 <GOMP_single_copy_end@@GOMP_1.0+0x1078>
   144dc:	nop
   144e0:	stp	x29, x30, [sp, #-96]!
   144e4:	mov	x29, sp
   144e8:	stp	x21, x22, [sp, #32]
   144ec:	mov	x22, x1
   144f0:	ldp	x1, x6, [x2]
   144f4:	stp	x19, x20, [sp, #16]
   144f8:	mov	x20, x0
   144fc:	stp	x23, x24, [sp, #48]
   14500:	str	x27, [sp, #80]
   14504:	cbz	x1, 14734 <GOMP_single_copy_end@@GOMP_1.0+0x142c>
   14508:	add	x2, x2, #0x10
   1450c:	add	x0, x0, #0xd0
   14510:	mov	x27, #0x0                   	// #0
   14514:	nop
   14518:	cmp	x6, x27
   1451c:	add	x0, x0, #0x28
   14520:	ldr	x4, [x2, x27, lsl #3]
   14524:	cset	w3, ls  // ls = plast
   14528:	stur	x4, [x0, #-40]
   1452c:	add	x27, x27, #0x1
   14530:	sturb	w3, [x0, #-8]
   14534:	cmp	x1, x27
   14538:	b.ne	14518 <GOMP_single_copy_end@@GOMP_1.0+0x1210>  // b.any
   1453c:	ldr	x9, [x22, #56]
   14540:	stp	x27, xzr, [x20, #72]
   14544:	cbz	x9, 14828 <GOMP_single_copy_end@@GOMP_1.0+0x1520>
   14548:	add	x22, x22, #0x38
   1454c:	add	x23, x20, #0xd0
   14550:	mov	x21, #0x0                   	// #0
   14554:	stp	x25, x26, [sp, #64]
   14558:	mov	x1, x23
   1455c:	stp	xzr, xzr, [x23, #8]
   14560:	mov	x0, x22
   14564:	str	x20, [x23, #24]
   14568:	strb	wzr, [x23, #33]
   1456c:	strb	wzr, [x23, #34]
   14570:	bl	141b8 <GOMP_single_copy_end@@GOMP_1.0+0xeb0>
   14574:	mov	x26, x0
   14578:	ldr	x19, [x0]
   1457c:	cbz	x19, 146e0 <GOMP_single_copy_end@@GOMP_1.0+0x13d8>
   14580:	ldr	x0, [x19, #24]
   14584:	cmp	x0, x20
   14588:	b.eq	14720 <GOMP_single_copy_end@@GOMP_1.0+0x1418>  // b.none
   1458c:	ldrb	w3, [x23, #32]
   14590:	mov	x0, #0x0                   	// #0
   14594:	mov	x24, #0x0                   	// #0
   14598:	b	14600 <GOMP_single_copy_end@@GOMP_1.0+0x12f8>
   1459c:	cbnz	w1, 146b0 <GOMP_single_copy_end@@GOMP_1.0+0x13a8>
   145a0:	ldr	x25, [x19, #24]
   145a4:	mov	x24, x19
   145a8:	ldr	x0, [x25, #48]
   145ac:	cbz	x0, 14624 <GOMP_single_copy_end@@GOMP_1.0+0x131c>
   145b0:	ldr	x1, [x0]
   145b4:	mov	x2, #0x1                   	// #1
   145b8:	cbz	x1, 145cc <GOMP_single_copy_end@@GOMP_1.0+0x12c4>
   145bc:	add	x2, x1, #0x1
   145c0:	ldr	x4, [x0, x2, lsl #3]
   145c4:	cmp	x4, x20
   145c8:	b.eq	145f0 <GOMP_single_copy_end@@GOMP_1.0+0x12e8>  // b.none
   145cc:	ldr	x4, [x0, #8]
   145d0:	cmp	x1, x4
   145d4:	b.eq	146b8 <GOMP_single_copy_end@@GOMP_1.0+0x13b0>  // b.none
   145d8:	add	x1, x1, #0x2
   145dc:	str	x2, [x0]
   145e0:	ldr	x2, [x20, #80]
   145e4:	str	x20, [x0, x1, lsl #3]
   145e8:	add	x2, x2, #0x1
   145ec:	str	x2, [x20, #80]
   145f0:	ldr	x1, [x19, #8]
   145f4:	mov	x0, x19
   145f8:	cbz	x1, 14660 <GOMP_single_copy_end@@GOMP_1.0+0x1358>
   145fc:	mov	x19, x1
   14600:	ldrb	w1, [x19, #34]
   14604:	cbnz	w1, 1472c <GOMP_single_copy_end@@GOMP_1.0+0x1424>
   14608:	ldrb	w1, [x19, #32]
   1460c:	cbnz	w3, 1459c <GOMP_single_copy_end@@GOMP_1.0+0x1294>
   14610:	ldr	x25, [x19, #24]
   14614:	cmp	w1, #0x0
   14618:	csel	x24, x24, x19, ne  // ne = any
   1461c:	ldr	x0, [x25, #48]
   14620:	cbnz	x0, 145b0 <GOMP_single_copy_end@@GOMP_1.0+0x12a8>
   14624:	mov	x0, #0x40                  	// #64
   14628:	bl	b2f8 <fprintf@plt+0x2838>
   1462c:	ldr	x1, [x20, #80]
   14630:	adrp	x2, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   14634:	ldrb	w3, [x23, #32]
   14638:	add	x1, x1, #0x1
   1463c:	str	x0, [x25, #48]
   14640:	ldr	q0, [x2, #1488]
   14644:	str	x1, [x20, #80]
   14648:	ldr	x1, [x19, #8]
   1464c:	str	x20, [x0, #16]
   14650:	str	q0, [x0]
   14654:	mov	x0, x19
   14658:	cbnz	x1, 145fc <GOMP_single_copy_end@@GOMP_1.0+0x12f4>
   1465c:	nop
   14660:	ldr	x0, [x26]
   14664:	str	x0, [x23, #8]
   14668:	cmp	x24, #0x0
   1466c:	eor	w3, w3, #0x1
   14670:	cset	w1, ne  // ne = any
   14674:	str	x23, [x0, #16]
   14678:	tst	w1, w3
   1467c:	str	x23, [x26]
   14680:	b.ne	146e8 <GOMP_single_copy_end@@GOMP_1.0+0x13e0>  // b.any
   14684:	add	x21, x21, #0x1
   14688:	add	x23, x23, #0x28
   1468c:	cmp	x27, x21
   14690:	b.hi	14558 <GOMP_single_copy_end@@GOMP_1.0+0x1250>  // b.pmore
   14694:	ldp	x19, x20, [sp, #16]
   14698:	ldp	x21, x22, [sp, #32]
   1469c:	ldp	x23, x24, [sp, #48]
   146a0:	ldp	x25, x26, [sp, #64]
   146a4:	ldr	x27, [sp, #80]
   146a8:	ldp	x29, x30, [sp], #96
   146ac:	ret
   146b0:	mov	w3, w1
   146b4:	b	145f0 <GOMP_single_copy_end@@GOMP_1.0+0x12e8>
   146b8:	lsl	x2, x2, #1
   146bc:	str	x2, [x0, #8]
   146c0:	add	x2, x2, #0x2
   146c4:	lsl	x1, x2, #3
   146c8:	bl	b370 <fprintf@plt+0x28b0>
   146cc:	ldr	x1, [x0]
   146d0:	ldrb	w3, [x23, #32]
   146d4:	add	x2, x1, #0x1
   146d8:	str	x0, [x25, #48]
   146dc:	b	145d8 <GOMP_single_copy_end@@GOMP_1.0+0x12d0>
   146e0:	str	x23, [x0]
   146e4:	b	14684 <GOMP_single_copy_end@@GOMP_1.0+0x137c>
   146e8:	cmp	x19, x24
   146ec:	b.eq	14714 <GOMP_single_copy_end@@GOMP_1.0+0x140c>  // b.none
   146f0:	ldp	x1, x0, [x24, #8]
   146f4:	str	x0, [x1, #16]
   146f8:	str	x1, [x0, #8]
   146fc:	ldr	x0, [x19, #8]
   14700:	stp	x0, x19, [x24, #8]
   14704:	str	x24, [x19, #8]
   14708:	ldr	x0, [x24, #8]
   1470c:	cbz	x0, 14714 <GOMP_single_copy_end@@GOMP_1.0+0x140c>
   14710:	str	x24, [x0, #16]
   14714:	mov	w0, #0x1                   	// #1
   14718:	strb	w0, [x24, #34]
   1471c:	b	14684 <GOMP_single_copy_end@@GOMP_1.0+0x137c>
   14720:	mov	w0, #0x1                   	// #1
   14724:	strb	w0, [x23, #33]
   14728:	b	14684 <GOMP_single_copy_end@@GOMP_1.0+0x137c>
   1472c:	mov	x19, x0
   14730:	b	14660 <GOMP_single_copy_end@@GOMP_1.0+0x1358>
   14734:	ldp	x8, x0, [x2, #16]
   14738:	ldr	x7, [x2, #32]
   1473c:	add	x8, x8, x0
   14740:	add	x7, x7, x8
   14744:	cmp	x7, x6
   14748:	b.cs	148f0 <GOMP_single_copy_end@@GOMP_1.0+0x15e8>  // b.hs, b.nlast
   1474c:	add	x3, x2, #0x28
   14750:	mov	x4, x7
   14754:	mov	x0, #0x0                   	// #0
   14758:	ldr	x5, [x3, x4, lsl #3]
   1475c:	ldr	x2, [x5, #8]
   14760:	cmp	x2, #0x1
   14764:	b.eq	1478c <GOMP_single_copy_end@@GOMP_1.0+0x1484>  // b.none
   14768:	sub	x1, x2, #0x2
   1476c:	cmp	x1, #0x2
   14770:	b.hi	14904 <GOMP_single_copy_end@@GOMP_1.0+0x15fc>  // b.pmore
   14774:	add	x2, x0, x0, lsl #2
   14778:	add	x0, x0, #0x1
   1477c:	ldr	x1, [x5]
   14780:	add	x2, x20, x2, lsl #3
   14784:	str	x1, [x2, #208]
   14788:	strb	wzr, [x2, #240]
   1478c:	add	x4, x4, #0x1
   14790:	cmp	x4, x6
   14794:	b.ne	14758 <GOMP_single_copy_end@@GOMP_1.0+0x1450>  // b.any
   14798:	ldr	x9, [x22, #56]
   1479c:	cbz	x7, 147e8 <GOMP_single_copy_end@@GOMP_1.0+0x14e0>
   147a0:	add	x4, x0, x0, lsl #2
   147a4:	mov	x2, #0x0                   	// #0
   147a8:	add	x4, x20, x4, lsl #3
   147ac:	nop
   147b0:	cmp	x8, x2
   147b4:	add	x4, x4, #0x28
   147b8:	ldr	x5, [x3, x2, lsl #3]
   147bc:	cset	w1, ls  // ls = plast
   147c0:	str	x5, [x4, #168]
   147c4:	add	x2, x2, #0x1
   147c8:	strb	w1, [x4, #200]
   147cc:	cmp	x7, x2
   147d0:	b.hi	147b0 <GOMP_single_copy_end@@GOMP_1.0+0x14a8>  // b.pmore
   147d4:	cmp	x7, #0x0
   147d8:	csinc	x1, x7, xzr, ne  // ne = any
   147dc:	cmp	x7, x6
   147e0:	add	x0, x0, x1
   147e4:	b.cs	148dc <GOMP_single_copy_end@@GOMP_1.0+0x15d4>  // b.hs, b.nlast
   147e8:	ldr	x2, [x3, x7, lsl #3]
   147ec:	ldr	x1, [x2, #8]
   147f0:	cmp	x1, #0x1
   147f4:	b.ne	14810 <GOMP_single_copy_end@@GOMP_1.0+0x1508>  // b.any
   147f8:	add	x4, x0, x0, lsl #2
   147fc:	add	x0, x0, #0x1
   14800:	ldr	x5, [x2]
   14804:	add	x2, x20, x4, lsl #3
   14808:	str	x5, [x2, #208]
   1480c:	strb	w1, [x2, #240]
   14810:	add	x7, x7, #0x1
   14814:	cmp	x7, x6
   14818:	b.cc	147e8 <GOMP_single_copy_end@@GOMP_1.0+0x14e0>  // b.lo, b.ul, b.last
   1481c:	mov	x27, x6
   14820:	stp	x27, xzr, [x20, #72]
   14824:	cbnz	x9, 14548 <GOMP_single_copy_end@@GOMP_1.0+0x1240>
   14828:	lsl	x3, x27, #1
   1482c:	mov	x0, #0xc                   	// #12
   14830:	cmp	x3, x0
   14834:	adrp	x5, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   14838:	csel	x3, x3, x0, cs  // cs = hs, nlast
   1483c:	add	x4, x5, #0x5e0
   14840:	mov	w19, #0x1e                  	// #30
   14844:	mov	w1, #0x0                   	// #0
   14848:	b	14868 <GOMP_single_copy_end@@GOMP_1.0+0x1560>
   1484c:	sub	w0, w19, w1
   14850:	add	w0, w1, w0, lsr #1
   14854:	ubfiz	x2, x0, #4, #32
   14858:	ldr	w2, [x4, x2]
   1485c:	cmp	x3, x2
   14860:	b.hi	148d4 <GOMP_single_copy_end@@GOMP_1.0+0x15cc>  // b.pmore
   14864:	mov	w19, w0
   14868:	cmp	w19, w1
   1486c:	b.ne	1484c <GOMP_single_copy_end@@GOMP_1.0+0x1544>  // b.any
   14870:	add	x5, x5, #0x5e0
   14874:	ubfiz	x0, x19, #4, #32
   14878:	ldr	w23, [x5, x0]
   1487c:	cmp	x3, x23
   14880:	b.hi	14918 <GOMP_single_copy_end@@GOMP_1.0+0x1610>  // b.pmore
   14884:	add	x21, x23, #0x4
   14888:	lsl	x21, x21, #3
   1488c:	mov	x0, x21
   14890:	bl	b2f8 <fprintf@plt+0x2838>
   14894:	sub	x2, x21, #0x20
   14898:	mov	x21, x0
   1489c:	mov	w1, #0x0                   	// #0
   148a0:	add	x0, x0, #0x20
   148a4:	stp	x23, xzr, [x21]
   148a8:	str	xzr, [x21, #16]
   148ac:	str	w19, [x21, #24]
   148b0:	bl	8770 <memset@plt>
   148b4:	str	x21, [x22, #56]
   148b8:	cbnz	x27, 14548 <GOMP_single_copy_end@@GOMP_1.0+0x1240>
   148bc:	ldp	x19, x20, [sp, #16]
   148c0:	ldp	x21, x22, [sp, #32]
   148c4:	ldp	x23, x24, [sp, #48]
   148c8:	ldr	x27, [sp, #80]
   148cc:	ldp	x29, x30, [sp], #96
   148d0:	ret
   148d4:	add	w1, w0, #0x1
   148d8:	b	14868 <GOMP_single_copy_end@@GOMP_1.0+0x1560>
   148dc:	stp	x6, xzr, [x20, #72]
   148e0:	mov	x27, x6
   148e4:	cbz	x9, 14828 <GOMP_single_copy_end@@GOMP_1.0+0x1520>
   148e8:	cbz	x27, 148bc <GOMP_single_copy_end@@GOMP_1.0+0x15b4>
   148ec:	b	14548 <GOMP_single_copy_end@@GOMP_1.0+0x1240>
   148f0:	ldr	x9, [x22, #56]
   148f4:	cbz	x7, 148dc <GOMP_single_copy_end@@GOMP_1.0+0x15d4>
   148f8:	add	x3, x2, #0x28
   148fc:	mov	x0, #0x0                   	// #0
   14900:	b	147a0 <GOMP_single_copy_end@@GOMP_1.0+0x1498>
   14904:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   14908:	mov	w1, w2
   1490c:	add	x0, x0, #0x550
   14910:	stp	x25, x26, [sp, #64]
   14914:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   14918:	stp	x25, x26, [sp, #64]
   1491c:	bl	8820 <abort@plt>
   14920:	stp	x29, x30, [sp, #-112]!
   14924:	mov	x29, sp
   14928:	stp	x21, x22, [sp, #32]
   1492c:	ldr	x21, [x1]
   14930:	stp	x19, x20, [sp, #16]
   14934:	mov	x19, x1
   14938:	stp	x23, x24, [sp, #48]
   1493c:	mov	x24, x0
   14940:	stp	x25, x26, [sp, #64]
   14944:	cbz	x21, 149bc <GOMP_single_copy_end@@GOMP_1.0+0x16b4>
   14948:	mov	x1, x21
   1494c:	ldr	x0, [x1, #8]!
   14950:	add	x3, x1, #0x8
   14954:	cbnz	x0, 14c10 <GOMP_single_copy_end@@GOMP_1.0+0x1908>
   14958:	ldp	x1, x0, [x19, #112]
   1495c:	add	x2, x19, #0x70
   14960:	ldr	x4, [x3, #8]
   14964:	cmp	x2, x4
   14968:	str	x1, [x0]
   1496c:	str	x0, [x1, #8]
   14970:	b.eq	14b9c <GOMP_single_copy_end@@GOMP_1.0+0x1894>  // b.none
   14974:	ldrb	w0, [x19, #207]
   14978:	mov	x1, x4
   1497c:	cbz	x4, 14c68 <GOMP_single_copy_end@@GOMP_1.0+0x1960>
   14980:	ldr	x4, [x3, #16]
   14984:	cmp	x4, #0x0
   14988:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   1498c:	b.eq	14bec <GOMP_single_copy_end@@GOMP_1.0+0x18e4>  // b.none
   14990:	ldr	x4, [x1, #8]
   14994:	stp	x1, x4, [x19, #112]
   14998:	str	x2, [x3, #8]
   1499c:	ldr	x1, [x19, #112]
   149a0:	str	x2, [x1, #8]
   149a4:	ldr	x1, [x19, #120]
   149a8:	str	x2, [x1]
   149ac:	ldr	x1, [x3, #16]
   149b0:	cmp	x1, #0x0
   149b4:	ccmp	w0, #0x0, #0x4, eq  // eq = none
   149b8:	b.ne	14cf0 <GOMP_single_copy_end@@GOMP_1.0+0x19e8>  // b.any
   149bc:	ldr	x20, [x19, #40]
   149c0:	cbz	x20, 14a14 <GOMP_single_copy_end@@GOMP_1.0+0x170c>
   149c4:	mov	x1, x20
   149c8:	ldr	x2, [x1, #8]!
   149cc:	add	x0, x1, #0x8
   149d0:	cbnz	x2, 14bf8 <GOMP_single_copy_end@@GOMP_1.0+0x18f0>
   149d4:	ldp	x1, x3, [x19, #128]
   149d8:	add	x2, x19, #0x80
   149dc:	ldr	x4, [x0, #8]
   149e0:	cmp	x2, x4
   149e4:	str	x1, [x3]
   149e8:	str	x3, [x1, #8]
   149ec:	b.eq	14b34 <GOMP_single_copy_end@@GOMP_1.0+0x182c>  // b.none
   149f0:	mov	x1, x4
   149f4:	cbz	x4, 14b40 <GOMP_single_copy_end@@GOMP_1.0+0x1838>
   149f8:	ldr	x3, [x1, #8]
   149fc:	stp	x1, x3, [x19, #128]
   14a00:	str	x2, [x0, #8]
   14a04:	ldr	x0, [x19, #128]
   14a08:	str	x2, [x0, #8]
   14a0c:	ldr	x0, [x19, #136]
   14a10:	str	x2, [x0]
   14a14:	ldr	x1, [x24, #1288]
   14a18:	add	x26, x24, #0x508
   14a1c:	ldr	w23, [x19, #88]
   14a20:	add	x22, x19, #0x60
   14a24:	cbnz	x1, 14b60 <GOMP_single_copy_end@@GOMP_1.0+0x1858>
   14a28:	cmp	w23, #0x0
   14a2c:	ldr	x1, [x24, #1304]
   14a30:	b.gt	14c78 <GOMP_single_copy_end@@GOMP_1.0+0x1970>
   14a34:	cbz	x1, 14b24 <GOMP_single_copy_end@@GOMP_1.0+0x181c>
   14a38:	ldr	x0, [x1, #8]
   14a3c:	stp	x1, x0, [x19, #96]
   14a40:	str	x22, [x24, #1304]
   14a44:	ldr	x0, [x19, #96]
   14a48:	str	x22, [x0, #8]
   14a4c:	ldr	x0, [x19, #104]
   14a50:	str	x22, [x0]
   14a54:	mov	w1, #0x2                   	// #2
   14a58:	str	w1, [x19, #200]
   14a5c:	cbz	x21, 14a78 <GOMP_single_copy_end@@GOMP_1.0+0x1770>
   14a60:	ldr	x1, [x21, #64]
   14a64:	cbz	x1, 14a78 <GOMP_single_copy_end@@GOMP_1.0+0x1770>
   14a68:	ldrb	w0, [x1]
   14a6c:	cbnz	w0, 14c2c <GOMP_single_copy_end@@GOMP_1.0+0x1924>
   14a70:	ldrb	w0, [x1, #1]
   14a74:	cbnz	w0, 14bb0 <GOMP_single_copy_end@@GOMP_1.0+0x18a8>
   14a78:	cbz	x20, 14a84 <GOMP_single_copy_end@@GOMP_1.0+0x177c>
   14a7c:	ldrb	w0, [x20, #48]
   14a80:	cbnz	w0, 14ac4 <GOMP_single_copy_end@@GOMP_1.0+0x17bc>
   14a84:	ldr	w2, [x24, #132]
   14a88:	ldr	w1, [x24, #1324]
   14a8c:	orr	w2, w2, #0x1
   14a90:	str	w2, [x24, #132]
   14a94:	add	w1, w1, #0x1
   14a98:	ldr	w2, [x24]
   14a9c:	str	w1, [x24, #1324]
   14aa0:	ldr	w1, [x24, #1328]
   14aa4:	cmp	w2, w1
   14aa8:	b.hi	14b00 <GOMP_single_copy_end@@GOMP_1.0+0x17f8>  // b.pmore
   14aac:	ldp	x19, x20, [sp, #16]
   14ab0:	ldp	x21, x22, [sp, #32]
   14ab4:	ldp	x23, x24, [sp, #48]
   14ab8:	ldp	x25, x26, [sp, #64]
   14abc:	ldp	x29, x30, [sp], #112
   14ac0:	ret
   14ac4:	ldr	w1, [x20, #52]
   14ac8:	add	x0, x20, #0x34
   14acc:	strb	wzr, [x20, #48]
   14ad0:	add	w2, w1, #0x1
   14ad4:	and	w2, w2, #0x7fffffff
   14ad8:	ldxr	w3, [x0]
   14adc:	cmp	w3, w1
   14ae0:	b.ne	14aec <GOMP_single_copy_end@@GOMP_1.0+0x17e4>  // b.any
   14ae4:	stlxr	w4, w2, [x0]
   14ae8:	cmp	w4, #0x0
   14aec:	mov	w1, w3
   14af0:	b.ne	14ad0 <GOMP_single_copy_end@@GOMP_1.0+0x17c8>  // b.any
   14af4:	tbz	w3, #31, 14a84 <GOMP_single_copy_end@@GOMP_1.0+0x177c>
   14af8:	bl	1cef0 <omp_get_num_procs@@OMP_1.0+0x340>
   14afc:	b	14a84 <GOMP_single_copy_end@@GOMP_1.0+0x177c>
   14b00:	add	x0, x24, #0x80
   14b04:	mov	w1, #0x1                   	// #1
   14b08:	bl	1d150 <omp_get_num_procs@@OMP_1.0+0x5a0>
   14b0c:	ldp	x19, x20, [sp, #16]
   14b10:	ldp	x21, x22, [sp, #32]
   14b14:	ldp	x23, x24, [sp, #48]
   14b18:	ldp	x25, x26, [sp, #64]
   14b1c:	ldp	x29, x30, [sp], #112
   14b20:	ret
   14b24:	dup	v0.2d, x22
   14b28:	str	q0, [x19, #96]
   14b2c:	str	x22, [x24, #1304]
   14b30:	b	14a54 <GOMP_single_copy_end@@GOMP_1.0+0x174c>
   14b34:	cmp	x2, x1
   14b38:	b.ne	149f8 <GOMP_single_copy_end@@GOMP_1.0+0x16f0>  // b.any
   14b3c:	nop
   14b40:	dup	v0.2d, x2
   14b44:	ldr	w23, [x19, #88]
   14b48:	ldr	x1, [x24, #1288]
   14b4c:	add	x26, x24, #0x508
   14b50:	add	x22, x19, #0x60
   14b54:	str	q0, [x19, #128]
   14b58:	str	x2, [x0, #8]
   14b5c:	cbz	x1, 14a28 <GOMP_single_copy_end@@GOMP_1.0+0x1720>
   14b60:	add	x1, sp, #0x58
   14b64:	mov	x0, x26
   14b68:	str	w23, [sp, #88]
   14b6c:	bl	2b798 <acc_set_cuda_stream@@OACC_2.0+0x790>
   14b70:	cbz	x0, 14cb0 <GOMP_single_copy_end@@GOMP_1.0+0x19a8>
   14b74:	ldr	x1, [x0, #8]
   14b78:	cbz	x1, 14ce0 <GOMP_single_copy_end@@GOMP_1.0+0x19d8>
   14b7c:	ldr	x2, [x1, #8]
   14b80:	stp	x1, x2, [x19, #96]
   14b84:	str	x22, [x0, #8]
   14b88:	ldr	x0, [x19, #96]
   14b8c:	str	x22, [x0, #8]
   14b90:	ldr	x0, [x19, #104]
   14b94:	str	x22, [x0]
   14b98:	b	14a54 <GOMP_single_copy_end@@GOMP_1.0+0x174c>
   14b9c:	ldrb	w0, [x19, #207]
   14ba0:	cmp	x2, x1
   14ba4:	b.eq	14c68 <GOMP_single_copy_end@@GOMP_1.0+0x1960>  // b.none
   14ba8:	str	x1, [x3, #8]
   14bac:	b	14980 <GOMP_single_copy_end@@GOMP_1.0+0x1678>
   14bb0:	ldr	w2, [x1, #16]
   14bb4:	add	x0, x1, #0x10
   14bb8:	strb	wzr, [x1, #1]
   14bbc:	add	w1, w2, #0x1
   14bc0:	and	w1, w1, #0x7fffffff
   14bc4:	ldxr	w3, [x0]
   14bc8:	cmp	w3, w2
   14bcc:	b.ne	14bd8 <GOMP_single_copy_end@@GOMP_1.0+0x18d0>  // b.any
   14bd0:	stlxr	w4, w1, [x0]
   14bd4:	cmp	w4, #0x0
   14bd8:	mov	w2, w3
   14bdc:	b.ne	14bbc <GOMP_single_copy_end@@GOMP_1.0+0x18b4>  // b.any
   14be0:	tbz	w3, #31, 14a78 <GOMP_single_copy_end@@GOMP_1.0+0x1770>
   14be4:	bl	1cef0 <omp_get_num_procs@@OMP_1.0+0x340>
   14be8:	b	14a78 <GOMP_single_copy_end@@GOMP_1.0+0x1770>
   14bec:	ldr	x1, [x4]
   14bf0:	stp	x1, x4, [x19, #112]
   14bf4:	b	149a0 <GOMP_single_copy_end@@GOMP_1.0+0x1698>
   14bf8:	ldr	w2, [x19, #88]
   14bfc:	mov	x0, x1
   14c00:	add	x1, sp, #0x58
   14c04:	str	w2, [sp, #88]
   14c08:	bl	2b798 <acc_set_cuda_stream@@OACC_2.0+0x790>
   14c0c:	b	149d4 <GOMP_single_copy_end@@GOMP_1.0+0x16cc>
   14c10:	ldr	w2, [x19, #88]
   14c14:	mov	x0, x1
   14c18:	add	x1, sp, #0x58
   14c1c:	str	w2, [sp, #88]
   14c20:	bl	2b798 <acc_set_cuda_stream@@OACC_2.0+0x790>
   14c24:	mov	x3, x0
   14c28:	b	14958 <GOMP_single_copy_end@@GOMP_1.0+0x1650>
   14c2c:	ldr	w0, [x1, #16]
   14c30:	strb	wzr, [x1], #16
   14c34:	add	w2, w0, #0x1
   14c38:	and	w2, w2, #0x7fffffff
   14c3c:	ldxr	w3, [x1]
   14c40:	cmp	w3, w0
   14c44:	b.ne	14c50 <GOMP_single_copy_end@@GOMP_1.0+0x1948>  // b.any
   14c48:	stlxr	w4, w2, [x1]
   14c4c:	cmp	w4, #0x0
   14c50:	mov	w0, w3
   14c54:	b.ne	14c34 <GOMP_single_copy_end@@GOMP_1.0+0x192c>  // b.any
   14c58:	tbz	w3, #31, 14a78 <GOMP_single_copy_end@@GOMP_1.0+0x1770>
   14c5c:	mov	x0, x1
   14c60:	bl	1cef0 <omp_get_num_procs@@OMP_1.0+0x340>
   14c64:	b	14a78 <GOMP_single_copy_end@@GOMP_1.0+0x1770>
   14c68:	dup	v0.2d, x2
   14c6c:	str	q0, [x19, #112]
   14c70:	str	x2, [x3, #8]
   14c74:	b	149ac <GOMP_single_copy_end@@GOMP_1.0+0x16a4>
   14c78:	cbz	x1, 14cb0 <GOMP_single_copy_end@@GOMP_1.0+0x19a8>
   14c7c:	mov	x0, #0x28                  	// #40
   14c80:	bl	b2f8 <fprintf@plt+0x2838>
   14c84:	add	x2, x24, #0x600
   14c88:	mov	x1, x0
   14c8c:	mov	x0, x26
   14c90:	ldur	q0, [x2, #-232]
   14c94:	str	wzr, [x1]
   14c98:	stp	xzr, xzr, [x1, #24]
   14c9c:	stur	q0, [x1, #8]
   14ca0:	bl	2b498 <acc_set_cuda_stream@@OACC_2.0+0x490>
   14ca4:	ldr	x0, [x24, #1288]
   14ca8:	str	xzr, [x26, #16]
   14cac:	cbnz	x0, 14b60 <GOMP_single_copy_end@@GOMP_1.0+0x1858>
   14cb0:	mov	x0, #0x28                  	// #40
   14cb4:	bl	b2f8 <fprintf@plt+0x2838>
   14cb8:	movi	v0.4s, #0x0
   14cbc:	mov	x25, x0
   14cc0:	mov	x1, x25
   14cc4:	mov	x0, x26
   14cc8:	str	w23, [x25]
   14ccc:	stur	q0, [x25, #8]
   14cd0:	stur	q0, [x25, #24]
   14cd4:	bl	2b498 <acc_set_cuda_stream@@OACC_2.0+0x490>
   14cd8:	mov	x0, x25
   14cdc:	b	14b74 <GOMP_single_copy_end@@GOMP_1.0+0x186c>
   14ce0:	dup	v0.2d, x22
   14ce4:	str	q0, [x19, #96]
   14ce8:	str	x22, [x0, #8]
   14cec:	b	14a54 <GOMP_single_copy_end@@GOMP_1.0+0x174c>
   14cf0:	str	x2, [x3, #16]
   14cf4:	b	149bc <GOMP_single_copy_end@@GOMP_1.0+0x16b4>
   14cf8:	mov	x3, x0
   14cfc:	ldp	x4, x5, [x2]
   14d00:	movi	v0.4s, #0x0
   14d04:	str	x1, [x3], #144
   14d08:	stp	x4, x5, [x0, #144]
   14d0c:	ldp	x4, x5, [x2, #16]
   14d10:	stp	x4, x5, [x3, #16]
   14d14:	ldr	x1, [x2, #32]
   14d18:	str	x1, [x3, #32]
   14d1c:	str	xzr, [x0, #8]
   14d20:	stur	q0, [x0, #24]
   14d24:	stur	q0, [x0, #40]
   14d28:	stur	q0, [x0, #56]
   14d2c:	str	xzr, [x0, #72]
   14d30:	str	xzr, [x0, #200]
   14d34:	ret
   14d38:	stp	x29, x30, [sp, #-48]!
   14d3c:	mov	x29, sp
   14d40:	str	x21, [sp, #32]
   14d44:	adrp	x21, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   14d48:	ldr	x21, [x21, #4016]
   14d4c:	stp	x19, x20, [sp, #16]
   14d50:	mrs	x19, tpidr_el0
   14d54:	add	x0, x19, x21
   14d58:	ldr	x20, [x0, #80]
   14d5c:	ldr	x0, [x20, #56]
   14d60:	cbnz	x0, 14d80 <GOMP_single_copy_end@@GOMP_1.0+0x1a78>
   14d64:	add	x19, x19, x21
   14d68:	ldr	x0, [x20]
   14d6c:	ldr	x21, [sp, #32]
   14d70:	str	x0, [x19, #80]
   14d74:	ldp	x19, x20, [sp, #16]
   14d78:	ldp	x29, x30, [sp], #48
   14d7c:	ret
   14d80:	add	x19, x19, x21
   14d84:	bl	88b0 <free@plt>
   14d88:	ldr	x0, [x20]
   14d8c:	ldr	x21, [sp, #32]
   14d90:	str	x0, [x19, #80]
   14d94:	ldp	x19, x20, [sp, #16]
   14d98:	ldp	x29, x30, [sp], #48
   14d9c:	ret

0000000000014da0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1>:
   14da0:	stp	x29, x30, [sp, #-48]!
   14da4:	mov	w2, #0x1                   	// #1
   14da8:	mov	x29, sp
   14dac:	stp	x21, x22, [sp, #32]
   14db0:	ldp	x22, x21, [x0, #56]
   14db4:	stp	x19, x20, [sp, #16]
   14db8:	mov	x19, x0
   14dbc:	add	x20, x21, #0x500
   14dc0:	ldaxr	w1, [x20]
   14dc4:	cbnz	w1, 14dd0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x30>
   14dc8:	stxr	w0, w2, [x20]
   14dcc:	cbnz	w0, 14dc0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x20>
   14dd0:	cmp	w1, #0x0
   14dd4:	b.ne	14e3c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x9c>  // b.any
   14dd8:	ldr	w0, [x19, #44]
   14ddc:	cmp	w0, #0x3
   14de0:	mov	w0, #0x5                   	// #5
   14de4:	str	w0, [x19, #44]
   14de8:	b.eq	14e18 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x78>  // b.none
   14dec:	mov	x1, x22
   14df0:	mov	x0, x21
   14df4:	bl	14920 <GOMP_single_copy_end@@GOMP_1.0+0x1618>
   14df8:	ldxr	w0, [x20]
   14dfc:	stlxr	w1, wzr, [x20]
   14e00:	cbnz	w1, 14df8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x58>
   14e04:	tbnz	w0, #31, 14e28 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x88>
   14e08:	ldp	x19, x20, [sp, #16]
   14e0c:	ldp	x21, x22, [sp, #32]
   14e10:	ldp	x29, x30, [sp], #48
   14e14:	ret
   14e18:	ldxr	w0, [x20]
   14e1c:	stlxr	w1, wzr, [x20]
   14e20:	cbnz	w1, 14e18 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x78>
   14e24:	tbz	w0, #31, 14e08 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x68>
   14e28:	mov	x0, x20
   14e2c:	ldp	x19, x20, [sp, #16]
   14e30:	ldp	x21, x22, [sp, #32]
   14e34:	ldp	x29, x30, [sp], #48
   14e38:	b	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   14e3c:	mov	x0, x20
   14e40:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   14e44:	b	14dd8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x38>
   14e48:	adrp	x8, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   14e4c:	ldr	x8, [x8, #4016]
   14e50:	mrs	x9, tpidr_el0
   14e54:	stp	x29, x30, [sp, #-208]!
   14e58:	mov	x13, x1
   14e5c:	add	x10, x9, x8
   14e60:	mov	x29, sp
   14e64:	stp	x25, x26, [sp, #64]
   14e68:	ldr	x26, [x10, #16]
   14e6c:	str	x8, [sp, #128]
   14e70:	adrp	x8, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   14e74:	stp	x21, x22, [sp, #32]
   14e78:	cmp	x26, #0x0
   14e7c:	ldrb	w11, [x8, #1356]
   14e80:	mov	x22, x2
   14e84:	stp	x23, x24, [sp, #48]
   14e88:	mov	x21, x5
   14e8c:	stp	x27, x28, [sp, #80]
   14e90:	mov	x27, x4
   14e94:	stp	x3, x0, [sp, #96]
   14e98:	cset	w0, ne  // ne = any
   14e9c:	tst	w0, w11
   14ea0:	stp	x7, x9, [sp, #112]
   14ea4:	str	w6, [sp, #140]
   14ea8:	b.ne	1555c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x7bc>  // b.any
   14eac:	ldr	x25, [x10, #80]
   14eb0:	stp	x19, x20, [sp, #16]
   14eb4:	ldr	x23, [x25, #40]
   14eb8:	ldr	x0, [sp, #112]
   14ebc:	cbz	x0, 152b4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x514>
   14ec0:	ldr	x7, [x0]
   14ec4:	cbz	x7, 15254 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x4b4>
   14ec8:	add	x7, x7, x7, lsl #2
   14ecc:	lsl	x20, x7, #3
   14ed0:	add	x14, x20, #0xd0
   14ed4:	sub	x10, x20, #0x1
   14ed8:	cbz	x13, 1525c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x4bc>
   14edc:	cbz	x22, 1525c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x4bc>
   14ee0:	mov	x1, #0x0                   	// #0
   14ee4:	mov	x2, #0x0                   	// #0
   14ee8:	mov	x6, #0x0                   	// #0
   14eec:	mov	x15, #0x1                   	// #1
   14ef0:	ldrh	w0, [x21, x1, lsl #1]
   14ef4:	and	w3, w0, #0xff
   14ef8:	cmp	w3, #0xc
   14efc:	b.ne	14f28 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x188>  // b.any
   14f00:	lsr	w0, w0, #8
   14f04:	sub	x2, x2, #0x1
   14f08:	ldr	x16, [x27, x1, lsl #3]
   14f0c:	lsl	x0, x15, x0
   14f10:	add	x2, x2, x0
   14f14:	neg	x3, x0
   14f18:	cmp	x6, x0
   14f1c:	and	x2, x3, x2
   14f20:	csel	x6, x6, x0, cs  // cs = hs, nlast
   14f24:	add	x2, x2, x16
   14f28:	add	x1, x1, #0x1
   14f2c:	cmp	x22, x1
   14f30:	b.ne	14ef0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x150>  // b.any
   14f34:	add	x2, x6, x2
   14f38:	cmp	x6, #0x0
   14f3c:	add	x2, x10, x2
   14f40:	csel	x2, x2, x20, ne  // ne = any
   14f44:	lsl	x10, x22, #3
   14f48:	lsl	x0, x22, #1
   14f4c:	stp	x13, x0, [sp, #160]
   14f50:	add	x0, x10, x22
   14f54:	mov	x28, x10
   14f58:	add	x0, x2, x0, lsl #1
   14f5c:	stp	x6, x14, [sp, #144]
   14f60:	add	x0, x0, #0x120
   14f64:	bl	b2f8 <fprintf@plt+0x2838>
   14f68:	mov	x24, x0
   14f6c:	ldp	x1, x3, [sp, #120]
   14f70:	mov	x16, x0
   14f74:	ldp	x14, x13, [sp, #152]
   14f78:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   14f7c:	add	x2, x2, #0x2b0
   14f80:	str	x25, [x16], #144
   14f84:	mov	x17, #0x2                   	// #2
   14f88:	add	x1, x1, x3
   14f8c:	ldr	x3, [sp, #208]
   14f90:	add	x19, x0, x14
   14f94:	ldr	x0, [x1, #80]
   14f98:	cmp	x0, #0x0
   14f9c:	add	x0, x0, #0x90
   14fa0:	csel	x2, x2, x0, eq  // eq = none
   14fa4:	ldp	x0, x1, [x2]
   14fa8:	stp	x0, x1, [x24, #144]
   14fac:	ldp	x0, x1, [x2, #16]
   14fb0:	stp	x0, x1, [x16, #16]
   14fb4:	ldr	x0, [x2, #32]
   14fb8:	str	x0, [x16, #32]
   14fbc:	str	x17, [x24, #200]
   14fc0:	add	x1, x19, #0x50
   14fc4:	mov	x0, x1
   14fc8:	str	xzr, [x24, #8]
   14fcc:	ldrb	w1, [x25, #204]
   14fd0:	mov	x2, x28
   14fd4:	stp	xzr, xzr, [x24, #24]
   14fd8:	stp	x23, xzr, [x24, #40]
   14fdc:	stp	xzr, xzr, [x24, #56]
   14fe0:	str	xzr, [x24, #72]
   14fe4:	str	wzr, [x24, #88]
   14fe8:	strb	w1, [x24, #204]
   14fec:	ldr	x1, [sp, #104]
   14ff0:	str	x1, [x24, x14]
   14ff4:	ldr	x1, [sp, #96]
   14ff8:	stp	x13, x22, [x19, #8]
   14ffc:	str	x3, [x19, #72]
   15000:	str	x0, [sp, #152]
   15004:	bl	8580 <memcpy@plt>
   15008:	add	x0, x28, #0x50
   1500c:	mov	x2, x28
   15010:	add	x0, x19, x0
   15014:	str	x0, [x19, #24]
   15018:	mov	x1, x27
   1501c:	bl	8580 <memcpy@plt>
   15020:	ldr	x0, [x19, #24]
   15024:	lsl	x2, x22, #1
   15028:	mov	x1, x21
   1502c:	add	x0, x0, x28
   15030:	str	x0, [x19, #32]
   15034:	bl	8580 <memcpy@plt>
   15038:	ldr	x6, [sp, #144]
   1503c:	cbnz	x6, 151b0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x410>
   15040:	ldr	w0, [sp, #140]
   15044:	add	x21, x26, #0x500
   15048:	str	w0, [x19, #40]
   1504c:	ldr	w0, [sp, #216]
   15050:	str	w0, [x19, #44]
   15054:	stp	x24, x26, [x19, #56]
   15058:	mov	w0, #0x1                   	// #1
   1505c:	stp	xzr, x19, [x24, #184]
   15060:	strb	wzr, [x24, #205]
   15064:	ldaxr	w1, [x21]
   15068:	cbnz	w1, 15074 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x2d4>
   1506c:	stxr	w2, w0, [x21]
   15070:	cbnz	w2, 15064 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x2c4>
   15074:	cmp	w1, #0x0
   15078:	b.ne	15774 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x9d4>  // b.any
   1507c:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   15080:	ldrb	w22, [x0, #1356]
   15084:	cbnz	w22, 153d0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x630>
   15088:	cbnz	x20, 15268 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x4c8>
   1508c:	ldr	w0, [sp, #216]
   15090:	cbz	w0, 15434 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x694>
   15094:	cbz	x23, 150a4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x304>
   15098:	ldr	x0, [x23, #56]
   1509c:	add	x0, x0, #0x1
   150a0:	str	x0, [x23, #56]
   150a4:	ldr	x1, [sp, #104]
   150a8:	add	x22, x25, #0x8
   150ac:	add	x20, x24, #0x70
   150b0:	ldr	x0, [x25, #8]
   150b4:	cbz	x1, 150c0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x320>
   150b8:	ldr	w1, [x1, #8]
   150bc:	tbnz	w1, #2, 15300 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x560>
   150c0:	cbnz	x0, 154f4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x754>
   150c4:	ldr	x0, [x25, #24]
   150c8:	cbz	x0, 152f0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x550>
   150cc:	ldr	x1, [x0, #8]
   150d0:	stp	x0, x1, [x24, #112]
   150d4:	str	x20, [x25, #24]
   150d8:	ldr	x0, [x24, #112]
   150dc:	str	x20, [x0, #8]
   150e0:	ldr	x0, [x24, #120]
   150e4:	str	x20, [x0]
   150e8:	cbz	x23, 1511c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x37c>
   150ec:	ldr	x0, [x23, #8]
   150f0:	add	x19, x24, #0x80
   150f4:	cbnz	x0, 15598 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x7f8>
   150f8:	ldr	x0, [x23, #24]
   150fc:	cbz	x0, 15424 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x684>
   15100:	ldr	x1, [x0, #8]
   15104:	stp	x0, x1, [x24, #128]
   15108:	str	x19, [x23, #24]
   1510c:	ldr	x0, [x24, #128]
   15110:	str	x19, [x0, #8]
   15114:	ldr	x0, [x24, #136]
   15118:	str	x19, [x0]
   1511c:	ldr	x0, [x26, #1288]
   15120:	add	x19, x24, #0x60
   15124:	cbnz	x0, 15490 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x6f0>
   15128:	ldr	x0, [x26, #1304]
   1512c:	cbz	x0, 15480 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x6e0>
   15130:	ldr	x1, [x0, #8]
   15134:	stp	x0, x1, [x24, #96]
   15138:	str	x19, [x0, #8]
   1513c:	ldr	x0, [x24, #104]
   15140:	str	x19, [x0]
   15144:	ldr	w0, [x26, #132]
   15148:	movi	v1.2s, #0x1
   1514c:	ldr	d0, [x26, #1320]
   15150:	ldrb	w19, [x25, #204]
   15154:	orr	w0, w0, #0x1
   15158:	str	w0, [x26, #132]
   1515c:	ldr	w0, [x26, #1328]
   15160:	add	v0.2s, v0.2s, v1.2s
   15164:	eor	w19, w19, #0x1
   15168:	ldr	w20, [x26]
   1516c:	add	w19, w19, w0
   15170:	str	d0, [x26, #1320]
   15174:	ldxr	w0, [x21]
   15178:	stlxr	w1, wzr, [x21]
   1517c:	cbnz	w1, 15174 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x3d4>
   15180:	tbnz	w0, #31, 155d8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x838>
   15184:	cmp	w19, w20
   15188:	b.cc	152c0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x520>  // b.lo, b.ul, b.last
   1518c:	ldp	x19, x20, [sp, #16]
   15190:	mov	w22, #0x1                   	// #1
   15194:	mov	w0, w22
   15198:	ldp	x21, x22, [sp, #32]
   1519c:	ldp	x23, x24, [sp, #48]
   151a0:	ldp	x25, x26, [sp, #64]
   151a4:	ldp	x27, x28, [sp, #80]
   151a8:	ldp	x29, x30, [sp], #208
   151ac:	ret
   151b0:	ldr	x13, [x19, #32]
   151b4:	lsl	x1, x22, #1
   151b8:	sub	x0, x6, #0x1
   151bc:	add	x13, x13, x1
   151c0:	ands	x0, x13, x0
   151c4:	sub	x6, x6, x0
   151c8:	add	x6, x13, x6
   151cc:	csel	x13, x6, x13, ne  // ne = any
   151d0:	cbz	x22, 15040 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x2a0>
   151d4:	mov	x28, #0x0                   	// #0
   151d8:	mov	x10, #0x0                   	// #0
   151dc:	b	151ec <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x44c>
   151e0:	add	x28, x28, #0x1
   151e4:	cmp	x22, x28
   151e8:	b.eq	15040 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x2a0>  // b.none
   151ec:	ldrh	w0, [x21, x28, lsl #1]
   151f0:	and	w1, w0, #0xff
   151f4:	cmp	w1, #0xc
   151f8:	b.ne	151e0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x440>  // b.any
   151fc:	lsr	w0, w0, #8
   15200:	mov	x1, #0x1                   	// #1
   15204:	sub	x10, x10, #0x1
   15208:	str	x13, [sp, #144]
   1520c:	lsl	x0, x1, x0
   15210:	add	x10, x10, x0
   15214:	ldr	x1, [sp, #96]
   15218:	neg	x0, x0
   1521c:	and	x10, x0, x10
   15220:	str	x10, [sp, #160]
   15224:	ldr	x2, [x27, x28, lsl #3]
   15228:	add	x14, x13, x10
   1522c:	ldr	x1, [x1, x28, lsl #3]
   15230:	mov	x0, x14
   15234:	bl	8580 <memcpy@plt>
   15238:	mov	x14, x0
   1523c:	ldp	x13, x1, [sp, #144]
   15240:	ldr	x0, [x27, x28, lsl #3]
   15244:	ldr	x10, [sp, #160]
   15248:	str	x14, [x1, x28, lsl #3]
   1524c:	add	x10, x10, x0
   15250:	b	151e0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x440>
   15254:	ldr	x7, [x0, #8]
   15258:	b	14ec8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x128>
   1525c:	mov	x2, x20
   15260:	mov	x6, #0x0                   	// #0
   15264:	b	14f44 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1a4>
   15268:	ldr	x2, [sp, #112]
   1526c:	mov	x0, x24
   15270:	mov	x1, x25
   15274:	bl	144e0 <GOMP_single_copy_end@@GOMP_1.0+0x11d8>
   15278:	ldr	x0, [x24, #80]
   1527c:	cbz	x0, 1508c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x2ec>
   15280:	cbz	x23, 15290 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x4f0>
   15284:	ldr	x0, [x23, #56]
   15288:	add	x0, x0, #0x1
   1528c:	str	x0, [x23, #56]
   15290:	ldxr	w0, [x21]
   15294:	stlxr	w1, wzr, [x21]
   15298:	cbnz	w1, 15290 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x4f0>
   1529c:	tbz	w0, #31, 1518c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x3ec>
   152a0:	mov	x0, x21
   152a4:	mov	w22, #0x1                   	// #1
   152a8:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   152ac:	ldp	x19, x20, [sp, #16]
   152b0:	b	15194 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x3f4>
   152b4:	mov	x14, #0xd0                  	// #208
   152b8:	mov	x20, #0x0                   	// #0
   152bc:	b	14ed4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x134>
   152c0:	add	x0, x26, #0x80
   152c4:	mov	w22, #0x1                   	// #1
   152c8:	mov	w1, w22
   152cc:	bl	1d150 <omp_get_num_procs@@OMP_1.0+0x5a0>
   152d0:	mov	w0, w22
   152d4:	ldp	x19, x20, [sp, #16]
   152d8:	ldp	x21, x22, [sp, #32]
   152dc:	ldp	x23, x24, [sp, #48]
   152e0:	ldp	x25, x26, [sp, #64]
   152e4:	ldp	x27, x28, [sp, #80]
   152e8:	ldp	x29, x30, [sp], #208
   152ec:	ret
   152f0:	dup	v0.2d, x20
   152f4:	str	q0, [x24, #112]
   152f8:	str	x20, [x25, #24]
   152fc:	b	150e8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x348>
   15300:	cbnz	x0, 1567c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x8dc>
   15304:	ldr	x0, [x25, #24]
   15308:	cbz	x0, 1565c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x8bc>
   1530c:	ldr	x1, [x0, #8]
   15310:	stp	x0, x1, [x24, #112]
   15314:	str	x20, [x0, #8]
   15318:	ldr	x0, [x24, #120]
   1531c:	str	x20, [x0]
   15320:	cbz	x23, 1534c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x5ac>
   15324:	ldr	x0, [x23, #8]
   15328:	add	x22, x24, #0x80
   1532c:	cbnz	x0, 156f0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x950>
   15330:	ldr	x0, [x23, #24]
   15334:	cbz	x0, 15624 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x884>
   15338:	ldr	x1, [x0, #8]
   1533c:	stp	x0, x1, [x24, #128]
   15340:	str	x22, [x0, #8]
   15344:	ldr	x0, [x24, #136]
   15348:	str	x22, [x0]
   1534c:	ldr	w0, [x26, #1320]
   15350:	mov	w1, #0x3                   	// #3
   15354:	stp	xzr, xzr, [x24, #96]
   15358:	add	w0, w0, #0x1
   1535c:	str	w1, [x24, #200]
   15360:	str	w0, [x26, #1320]
   15364:	ldxr	w0, [x21]
   15368:	stlxr	w1, wzr, [x21]
   1536c:	cbnz	w1, 15364 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x5c4>
   15370:	tbnz	w0, #31, 1574c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x9ac>
   15374:	ldp	x1, x2, [sp, #120]
   15378:	ldr	x0, [x24, #192]
   1537c:	add	x23, x1, x2
   15380:	str	x24, [x23, #80]
   15384:	bl	243b8 <GOMP_target_enter_exit_data@@GOMP_4.5+0x240>
   15388:	mov	w0, #0x1                   	// #1
   1538c:	str	x25, [x23, #80]
   15390:	ldaxr	w1, [x21]
   15394:	cbnz	w1, 153a0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x600>
   15398:	stxr	w2, w0, [x21]
   1539c:	cbnz	w2, 15390 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x5f0>
   153a0:	cmp	w1, #0x0
   153a4:	b.ne	15780 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x9e0>  // b.any
   153a8:	ldr	w1, [x19, #44]
   153ac:	mov	w0, #0x4                   	// #4
   153b0:	str	w0, [x24, #200]
   153b4:	cmp	w1, #0x5
   153b8:	b.eq	1566c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x8cc>  // b.none
   153bc:	str	w0, [x19, #44]
   153c0:	ldxr	w0, [x21]
   153c4:	stlxr	w1, wzr, [x21]
   153c8:	cbz	w1, 1529c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x4fc>
   153cc:	b	153c0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x620>
   153d0:	ldr	w0, [x26, #132]
   153d4:	tbnz	w0, #2, 153fc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x65c>
   153d8:	cbz	x23, 15088 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x2e8>
   153dc:	ldrb	w0, [x23, #49]
   153e0:	cbnz	w0, 153fc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x65c>
   153e4:	ldrb	w0, [x23, #50]
   153e8:	cbz	w0, 15088 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x2e8>
   153ec:	ldr	x0, [x23]
   153f0:	cbz	x0, 15088 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x2e8>
   153f4:	ldrb	w0, [x0, #49]
   153f8:	cbz	w0, 15088 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x2e8>
   153fc:	ldxr	w0, [x21]
   15400:	stlxr	w1, wzr, [x21]
   15404:	cbnz	w1, 153fc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x65c>
   15408:	tbnz	w0, #31, 15768 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x9c8>
   1540c:	ldr	x0, [x24, #56]
   15410:	cbnz	x0, 15634 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x894>
   15414:	mov	x0, x24
   15418:	bl	88b0 <free@plt>
   1541c:	ldp	x19, x20, [sp, #16]
   15420:	b	15194 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x3f4>
   15424:	dup	v0.2d, x19
   15428:	str	q0, [x24, #128]
   1542c:	str	x19, [x23, #24]
   15430:	b	1511c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x37c>
   15434:	mov	x0, x24
   15438:	bl	13678 <GOMP_single_copy_end@@GOMP_1.0+0x370>
   1543c:	ldxr	w0, [x21]
   15440:	stlxr	w1, wzr, [x21]
   15444:	cbnz	w1, 1543c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x69c>
   15448:	tbnz	w0, #31, 156e4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x944>
   1544c:	ldr	x0, [x24, #56]
   15450:	cbnz	x0, 156dc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x93c>
   15454:	mov	x0, x24
   15458:	mov	w22, #0x0                   	// #0
   1545c:	bl	88b0 <free@plt>
   15460:	mov	w0, w22
   15464:	ldp	x19, x20, [sp, #16]
   15468:	ldp	x21, x22, [sp, #32]
   1546c:	ldp	x23, x24, [sp, #48]
   15470:	ldp	x25, x26, [sp, #64]
   15474:	ldp	x27, x28, [sp, #80]
   15478:	ldp	x29, x30, [sp], #208
   1547c:	ret
   15480:	dup	v0.2d, x19
   15484:	str	q0, [x24, #96]
   15488:	str	x19, [x26, #1304]
   1548c:	b	15144 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x3a4>
   15490:	add	x22, x26, #0x508
   15494:	add	x1, sp, #0xb8
   15498:	mov	x0, x22
   1549c:	str	wzr, [sp, #184]
   154a0:	bl	2b798 <acc_set_cuda_stream@@OACC_2.0+0x790>
   154a4:	cbnz	x0, 154d4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x734>
   154a8:	mov	x0, #0x28                  	// #40
   154ac:	bl	b2f8 <fprintf@plt+0x2838>
   154b0:	movi	v0.4s, #0x0
   154b4:	mov	x20, x0
   154b8:	mov	x1, x20
   154bc:	mov	x0, x22
   154c0:	str	wzr, [x20]
   154c4:	stur	q0, [x20, #8]
   154c8:	stur	q0, [x20, #24]
   154cc:	bl	2b498 <acc_set_cuda_stream@@OACC_2.0+0x490>
   154d0:	mov	x0, x20
   154d4:	ldr	x1, [x0, #8]
   154d8:	cbz	x1, 1564c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x8ac>
   154dc:	ldr	x0, [x1, #8]
   154e0:	stp	x1, x0, [x24, #96]
   154e4:	str	x19, [x1, #8]
   154e8:	ldr	x0, [x24, #104]
   154ec:	str	x19, [x0]
   154f0:	b	15144 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x3a4>
   154f4:	add	x1, sp, #0xb8
   154f8:	mov	x0, x22
   154fc:	str	wzr, [sp, #184]
   15500:	bl	2b798 <acc_set_cuda_stream@@OACC_2.0+0x790>
   15504:	cbnz	x0, 15534 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x794>
   15508:	mov	x0, #0x28                  	// #40
   1550c:	bl	b2f8 <fprintf@plt+0x2838>
   15510:	movi	v0.4s, #0x0
   15514:	mov	x19, x0
   15518:	mov	x1, x19
   1551c:	mov	x0, x22
   15520:	str	wzr, [x19]
   15524:	stur	q0, [x19, #8]
   15528:	stur	q0, [x19, #24]
   1552c:	bl	2b498 <acc_set_cuda_stream@@OACC_2.0+0x490>
   15530:	mov	x0, x19
   15534:	ldr	x1, [x0, #8]
   15538:	cbz	x1, 1563c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x89c>
   1553c:	ldr	x2, [x1, #8]
   15540:	stp	x1, x2, [x24, #112]
   15544:	str	x20, [x0, #8]
   15548:	ldr	x0, [x24, #112]
   1554c:	str	x20, [x0, #8]
   15550:	ldr	x0, [x24, #120]
   15554:	str	x20, [x0]
   15558:	b	150e8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x348>
   1555c:	ldr	w0, [x26, #132]
   15560:	tbnz	w0, #2, 15190 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x3f0>
   15564:	ldr	x25, [x10, #80]
   15568:	ldr	x23, [x25, #40]
   1556c:	cbz	x23, 15590 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x7f0>
   15570:	ldrb	w0, [x23, #49]
   15574:	cbnz	w0, 15190 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x3f0>
   15578:	ldrb	w0, [x23, #50]
   1557c:	cbz	w0, 15590 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x7f0>
   15580:	ldr	x0, [x23]
   15584:	cbz	x0, 15590 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x7f0>
   15588:	ldrb	w0, [x0, #49]
   1558c:	cbnz	w0, 15190 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x3f0>
   15590:	stp	x19, x20, [sp, #16]
   15594:	b	14eb8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x118>
   15598:	add	x23, x23, #0x8
   1559c:	add	x1, sp, #0xb8
   155a0:	mov	x0, x23
   155a4:	str	wzr, [sp, #184]
   155a8:	bl	2b798 <acc_set_cuda_stream@@OACC_2.0+0x790>
   155ac:	cbz	x0, 155e4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x844>
   155b0:	ldr	x1, [x0, #8]
   155b4:	cbz	x1, 15614 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x874>
   155b8:	ldr	x2, [x1, #8]
   155bc:	stp	x1, x2, [x24, #128]
   155c0:	str	x19, [x0, #8]
   155c4:	ldr	x0, [x24, #128]
   155c8:	str	x19, [x0, #8]
   155cc:	ldr	x0, [x24, #136]
   155d0:	str	x19, [x0]
   155d4:	b	1511c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x37c>
   155d8:	mov	x0, x21
   155dc:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   155e0:	b	15184 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x3e4>
   155e4:	mov	x0, #0x28                  	// #40
   155e8:	bl	b2f8 <fprintf@plt+0x2838>
   155ec:	movi	v0.4s, #0x0
   155f0:	mov	x20, x0
   155f4:	mov	x1, x20
   155f8:	mov	x0, x23
   155fc:	str	wzr, [x20]
   15600:	stur	q0, [x20, #8]
   15604:	stur	q0, [x20, #24]
   15608:	bl	2b498 <acc_set_cuda_stream@@OACC_2.0+0x490>
   1560c:	mov	x0, x20
   15610:	b	155b0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x810>
   15614:	dup	v0.2d, x19
   15618:	str	q0, [x24, #128]
   1561c:	str	x19, [x0, #8]
   15620:	b	1511c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x37c>
   15624:	dup	v0.2d, x22
   15628:	str	q0, [x24, #128]
   1562c:	str	x22, [x23, #24]
   15630:	b	1534c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x5ac>
   15634:	bl	88b0 <free@plt>
   15638:	b	15414 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x674>
   1563c:	dup	v0.2d, x20
   15640:	str	q0, [x24, #112]
   15644:	str	x20, [x0, #8]
   15648:	b	150e8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x348>
   1564c:	dup	v0.2d, x19
   15650:	str	q0, [x24, #96]
   15654:	str	x19, [x0, #8]
   15658:	b	15144 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x3a4>
   1565c:	dup	v0.2d, x20
   15660:	str	q0, [x24, #112]
   15664:	str	x20, [x25, #24]
   15668:	b	15320 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x580>
   1566c:	mov	x1, x24
   15670:	mov	x0, x26
   15674:	bl	14920 <GOMP_single_copy_end@@GOMP_1.0+0x1618>
   15678:	b	153c0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x620>
   1567c:	add	x1, sp, #0xb8
   15680:	mov	x0, x22
   15684:	str	wzr, [sp, #184]
   15688:	bl	2b798 <acc_set_cuda_stream@@OACC_2.0+0x790>
   1568c:	cbnz	x0, 156bc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x91c>
   15690:	mov	x0, #0x28                  	// #40
   15694:	bl	b2f8 <fprintf@plt+0x2838>
   15698:	movi	v0.4s, #0x0
   1569c:	mov	x1, x0
   156a0:	mov	x0, x22
   156a4:	mov	x22, x1
   156a8:	str	wzr, [x1]
   156ac:	stur	q0, [x1, #8]
   156b0:	stur	q0, [x1, #24]
   156b4:	bl	2b498 <acc_set_cuda_stream@@OACC_2.0+0x490>
   156b8:	mov	x0, x22
   156bc:	ldr	x1, [x0, #8]
   156c0:	cbz	x1, 15758 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x9b8>
   156c4:	ldr	x0, [x1, #8]
   156c8:	stp	x1, x0, [x24, #112]
   156cc:	str	x20, [x1, #8]
   156d0:	ldr	x0, [x24, #120]
   156d4:	str	x20, [x0]
   156d8:	b	15320 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x580>
   156dc:	bl	88b0 <free@plt>
   156e0:	b	15454 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x6b4>
   156e4:	mov	x0, x21
   156e8:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   156ec:	b	1544c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x6ac>
   156f0:	add	x23, x23, #0x8
   156f4:	add	x1, sp, #0xb8
   156f8:	mov	x0, x23
   156fc:	str	wzr, [sp, #184]
   15700:	bl	2b798 <acc_set_cuda_stream@@OACC_2.0+0x790>
   15704:	mov	x20, x0
   15708:	cbnz	x0, 15734 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x994>
   1570c:	mov	x0, #0x28                  	// #40
   15710:	bl	b2f8 <fprintf@plt+0x2838>
   15714:	movi	v0.4s, #0x0
   15718:	mov	x20, x0
   1571c:	mov	x1, x20
   15720:	mov	x0, x23
   15724:	str	wzr, [x20]
   15728:	stur	q0, [x20, #8]
   1572c:	stur	q0, [x20, #24]
   15730:	bl	2b498 <acc_set_cuda_stream@@OACC_2.0+0x490>
   15734:	ldr	x0, [x20, #8]
   15738:	cbnz	x0, 15338 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x598>
   1573c:	dup	v0.2d, x22
   15740:	str	q0, [x24, #128]
   15744:	str	x22, [x20, #8]
   15748:	b	1534c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x5ac>
   1574c:	mov	x0, x21
   15750:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   15754:	b	15374 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x5d4>
   15758:	dup	v0.2d, x20
   1575c:	str	q0, [x24, #112]
   15760:	str	x20, [x0, #8]
   15764:	b	15320 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x580>
   15768:	mov	x0, x21
   1576c:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   15770:	b	1540c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x66c>
   15774:	mov	x0, x21
   15778:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   1577c:	b	1507c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x2dc>
   15780:	mov	x0, x21
   15784:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   15788:	b	153a8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x608>
   1578c:	nop
   15790:	stp	x29, x30, [sp, #-160]!
   15794:	mov	w2, #0x1                   	// #1
   15798:	mov	x29, sp
   1579c:	stp	x21, x22, [sp, #32]
   157a0:	mrs	x21, tpidr_el0
   157a4:	adrp	x22, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   157a8:	ldr	x22, [x22, #4016]
   157ac:	stp	x27, x28, [sp, #80]
   157b0:	add	x1, x21, x22
   157b4:	stp	x25, x26, [sp, #64]
   157b8:	ldr	x28, [x1, #16]
   157bc:	stp	x19, x20, [sp, #16]
   157c0:	ldr	x25, [x1, #80]
   157c4:	add	x19, x28, #0x500
   157c8:	stp	x23, x24, [sp, #48]
   157cc:	mov	w23, w0
   157d0:	ldaxr	w1, [x19]
   157d4:	cbnz	w1, 157e0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa40>
   157d8:	stxr	w0, w2, [x19]
   157dc:	cbnz	w0, 157d0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa30>
   157e0:	cmp	w1, #0x0
   157e4:	b.ne	15db4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1014>  // b.any
   157e8:	tbz	w23, #0, 15800 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa60>
   157ec:	ldr	w0, [x28, #1320]
   157f0:	cbz	w0, 15bc4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe24>
   157f4:	ldr	w0, [x28, #132]
   157f8:	orr	w0, w0, #0x2
   157fc:	str	w0, [x28, #132]
   15800:	and	w0, w23, #0xfffffff8
   15804:	add	x24, x28, #0x508
   15808:	add	w0, w0, #0x8
   1580c:	str	w0, [sp, #132]
   15810:	add	x0, sp, #0x9f
   15814:	str	x0, [sp, #136]
   15818:	add	x0, x28, #0x80
   1581c:	str	x0, [sp, #120]
   15820:	ldr	x0, [x28, #1288]
   15824:	mov	w23, #0x0                   	// #0
   15828:	mov	x27, #0x0                   	// #0
   1582c:	cbnz	x0, 15a10 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc70>
   15830:	ldr	x26, [x24, #16]
   15834:	cbz	x26, 15870 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xad0>
   15838:	sub	x26, x26, #0x60
   1583c:	mov	w0, #0x1                   	// #1
   15840:	strb	w0, [sp, #159]
   15844:	ldr	x1, [x26]
   15848:	mov	x2, x28
   1584c:	mov	x0, x26
   15850:	bl	13850 <GOMP_single_copy_end@@GOMP_1.0+0x548>
   15854:	ands	w20, w0, #0xff
   15858:	b.ne	15a58 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xcb8>  // b.any
   1585c:	ldr	w0, [x28, #1328]
   15860:	mov	w1, #0x1                   	// #1
   15864:	add	w0, w0, #0x1
   15868:	str	w0, [x28, #1328]
   1586c:	strb	w1, [x26, #204]
   15870:	ldxr	w0, [x19]
   15874:	stlxr	w1, wzr, [x19]
   15878:	cbnz	w1, 15870 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xad0>
   1587c:	tbnz	w0, #31, 15a80 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xce0>
   15880:	cbnz	w23, 15a70 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xcd0>
   15884:	cbz	x27, 15898 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xaf8>
   15888:	ldr	x0, [x27, #56]
   1588c:	cbnz	x0, 15cfc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf5c>
   15890:	mov	x0, x27
   15894:	bl	88b0 <free@plt>
   15898:	cbz	x26, 15bec <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe4c>
   1589c:	ldp	x1, x0, [x26, #184]
   158a0:	add	x20, x21, x22
   158a4:	str	x26, [x20, #80]
   158a8:	cbz	x1, 15c14 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe74>
   158ac:	blr	x1
   158b0:	add	x0, x21, x22
   158b4:	mov	w2, #0x1                   	// #1
   158b8:	str	x25, [x0, #80]
   158bc:	ldaxr	w1, [x19]
   158c0:	cbnz	w1, 158cc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb2c>
   158c4:	stxr	w0, w2, [x19]
   158c8:	cbnz	w0, 158bc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb1c>
   158cc:	cmp	w1, #0x0
   158d0:	b.ne	15dd4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1034>  // b.any
   158d4:	mov	w20, #0x0                   	// #0
   158d8:	mov	w23, #0x0                   	// #0
   158dc:	ldr	x4, [x26, #72]
   158e0:	ldr	x27, [x26]
   158e4:	cbz	x4, 15910 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb70>
   158e8:	cbz	x27, 15b34 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xd94>
   158ec:	mov	x0, x26
   158f0:	bl	13678 <GOMP_single_copy_end@@GOMP_1.0+0x370>
   158f4:	ldr	x0, [x26, #48]
   158f8:	cbz	x0, 15c08 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe68>
   158fc:	mov	x1, x28
   15900:	mov	x0, x26
   15904:	bl	13be8 <GOMP_single_copy_end@@GOMP_1.0+0x8e0>
   15908:	mov	x4, x0
   1590c:	ldr	x27, [x26]
   15910:	cbz	x27, 15944 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xba4>
   15914:	ldrb	w0, [x26, #207]
   15918:	cbnz	w0, 15c78 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xed8>
   1591c:	ldr	x0, [x27, #8]
   15920:	add	x2, x26, #0x70
   15924:	cbnz	x0, 15cd8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf38>
   15928:	ldp	x0, x1, [x26, #112]
   1592c:	ldr	x7, [x27, #24]
   15930:	cmp	x7, x2
   15934:	str	x0, [x1]
   15938:	str	x1, [x0, #8]
   1593c:	b.eq	15a90 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xcf0>  // b.none
   15940:	stp	xzr, xzr, [x26, #112]
   15944:	ldr	x7, [x26, #8]
   15948:	cbnz	x7, 15b48 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xda8>
   1594c:	ldr	x1, [x26, #24]
   15950:	mov	x0, x1
   15954:	cbz	x1, 15968 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xbc8>
   15958:	stur	xzr, [x0, #-112]
   1595c:	ldr	x0, [x0]
   15960:	cmp	x1, x0
   15964:	b.ne	15958 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xbb8>  // b.any
   15968:	ldr	x27, [x26, #40]
   1596c:	cbz	x27, 159c0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc20>
   15970:	ldr	x0, [x27, #8]
   15974:	add	x2, x26, #0x80
   15978:	cbnz	x0, 15d04 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf64>
   1597c:	ldp	x0, x1, [x26, #128]
   15980:	add	x7, x27, #0x10
   15984:	ldr	x9, [x7, #8]
   15988:	mov	w8, #0x0                   	// #0
   1598c:	cmp	x2, x9
   15990:	str	x0, [x1]
   15994:	str	x1, [x0, #8]
   15998:	b.eq	15b9c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xdfc>  // b.none
   1599c:	ldr	x0, [x27, #56]
   159a0:	stp	xzr, xzr, [x26, #128]
   159a4:	cmp	x0, #0x1
   159a8:	b.ls	15bb8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe18>  // b.plast
   159ac:	sub	x0, x0, #0x1
   159b0:	str	x0, [x27, #56]
   159b4:	cbz	w8, 159c0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc20>
   159b8:	ldrb	w0, [x27, #48]
   159bc:	cbnz	w0, 15af0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xd50>
   159c0:	cbnz	w20, 159d0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc30>
   159c4:	ldr	w0, [x28, #1328]
   159c8:	sub	w0, w0, #0x1
   159cc:	str	w0, [x28, #1328]
   159d0:	cmp	x4, #0x1
   159d4:	b.ls	159ec <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc4c>  // b.plast
   159d8:	ldr	w6, [x28]
   159dc:	ldr	w0, [x28, #1328]
   159e0:	sub	w23, w6, w0
   159e4:	cmp	x4, w23, sxtw
   159e8:	csel	w23, w4, w23, cc  // cc = lo, ul, last
   159ec:	ldr	w0, [x28, #1320]
   159f0:	sub	w0, w0, #0x1
   159f4:	str	w0, [x28, #1320]
   159f8:	cbnz	w0, 15a04 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc64>
   159fc:	ldr	w0, [x28, #132]
   15a00:	tbnz	w0, #1, 15aa0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xd00>
   15a04:	mov	x27, x26
   15a08:	ldr	x0, [x28, #1288]
   15a0c:	cbz	x0, 15830 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa90>
   15a10:	ldr	x4, [sp, #136]
   15a14:	mov	x1, x24
   15a18:	mov	x3, #0x0                   	// #0
   15a1c:	mov	w2, #0x3e7                 	// #999
   15a20:	mov	w0, #0x0                   	// #0
   15a24:	bl	2b3a0 <acc_set_cuda_stream@@OACC_2.0+0x398>
   15a28:	mov	x26, x0
   15a2c:	cbnz	x0, 15844 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xaa4>
   15a30:	ldr	x0, [x24]
   15a34:	mov	x2, x28
   15a38:	ldr	x3, [x0, #8]
   15a3c:	sub	x26, x3, #0x60
   15a40:	ldr	x1, [x26]
   15a44:	mov	x0, x26
   15a48:	bl	13850 <GOMP_single_copy_end@@GOMP_1.0+0x548>
   15a4c:	ands	w20, w0, #0xff
   15a50:	b.eq	1585c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xabc>  // b.none
   15a54:	nop
   15a58:	cbz	x27, 158dc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb3c>
   15a5c:	ldr	x0, [x27, #56]
   15a60:	cbnz	x0, 15dc0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1020>
   15a64:	mov	x0, x27
   15a68:	bl	88b0 <free@plt>
   15a6c:	b	158dc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb3c>
   15a70:	ldr	x0, [sp, #120]
   15a74:	mov	w1, w23
   15a78:	bl	1d150 <omp_get_num_procs@@OMP_1.0+0x5a0>
   15a7c:	b	15884 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xae4>
   15a80:	mov	x0, x19
   15a84:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   15a88:	cbz	w23, 15884 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xae4>
   15a8c:	b	15a70 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xcd0>
   15a90:	cmp	x0, x7
   15a94:	b.eq	15d28 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf88>  // b.none
   15a98:	str	x0, [x27, #24]
   15a9c:	b	15940 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xba0>
   15aa0:	ldr	w0, [sp, #132]
   15aa4:	str	w0, [x28, #132]
   15aa8:	ldxr	w0, [x19]
   15aac:	stlxr	w1, wzr, [x19]
   15ab0:	cbnz	w1, 15aa8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xd08>
   15ab4:	tbnz	w0, #31, 15d8c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xfec>
   15ab8:	ldr	x0, [sp, #120]
   15abc:	mov	w1, #0x0                   	// #0
   15ac0:	bl	1d150 <omp_get_num_procs@@OMP_1.0+0x5a0>
   15ac4:	mov	w0, #0x1                   	// #1
   15ac8:	ldaxr	w1, [x19]
   15acc:	cbnz	w1, 15ad8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xd38>
   15ad0:	stxr	w2, w0, [x19]
   15ad4:	cbnz	w2, 15ac8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xd28>
   15ad8:	cmp	w1, #0x0
   15adc:	b.eq	15a04 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc64>  // b.none
   15ae0:	mov	x0, x19
   15ae4:	mov	x27, x26
   15ae8:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   15aec:	b	15a08 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc68>
   15af0:	ldr	w1, [x27, #52]
   15af4:	add	x0, x27, #0x34
   15af8:	strb	wzr, [x27, #48]
   15afc:	add	w2, w1, #0x1
   15b00:	and	w2, w2, #0x7fffffff
   15b04:	ldxr	w7, [x0]
   15b08:	cmp	w7, w1
   15b0c:	b.ne	15b18 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xd78>  // b.any
   15b10:	stlxr	w3, w2, [x0]
   15b14:	cmp	w3, #0x0
   15b18:	mov	w1, w7
   15b1c:	b.ne	15afc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xd5c>  // b.any
   15b20:	tbz	w7, #31, 159c0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc20>
   15b24:	str	x4, [sp, #96]
   15b28:	bl	1cef0 <omp_get_num_procs@@OMP_1.0+0x340>
   15b2c:	ldr	x4, [sp, #96]
   15b30:	b	159c0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc20>
   15b34:	ldr	x0, [x26, #48]
   15b38:	mov	x4, #0x0                   	// #0
   15b3c:	cbnz	x0, 158fc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb5c>
   15b40:	ldr	x7, [x26, #8]
   15b44:	cbz	x7, 1594c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xbac>
   15b48:	add	x27, x26, #0x8
   15b4c:	ldr	x8, [x7, #8]
   15b50:	mov	x0, x7
   15b54:	ldp	x1, x7, [x7, #24]
   15b58:	mov	x2, x8
   15b5c:	cbz	x8, 15b70 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xdd0>
   15b60:	stur	xzr, [x2, #-112]
   15b64:	ldr	x2, [x2]
   15b68:	cmp	x8, x2
   15b6c:	b.ne	15b60 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xdc0>  // b.any
   15b70:	stp	x4, x1, [sp, #96]
   15b74:	str	x7, [sp, #112]
   15b78:	bl	88b0 <free@plt>
   15b7c:	ldr	x1, [sp, #104]
   15b80:	mov	x0, x27
   15b84:	bl	13428 <GOMP_single_copy_end@@GOMP_1.0+0x120>
   15b88:	ldr	x7, [sp, #112]
   15b8c:	ldr	x4, [sp, #96]
   15b90:	cbnz	x7, 15b4c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xdac>
   15b94:	str	xzr, [x27]
   15b98:	b	15968 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xbc8>
   15b9c:	cmp	x2, x0
   15ba0:	b.eq	15d80 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xfe0>  // b.none
   15ba4:	str	x0, [x7, #8]
   15ba8:	ldr	x0, [x27, #56]
   15bac:	stp	xzr, xzr, [x26, #128]
   15bb0:	cmp	x0, #0x1
   15bb4:	b.hi	159ac <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc0c>  // b.pmore
   15bb8:	add	x0, x27, #0x38
   15bbc:	stlr	xzr, [x0]
   15bc0:	b	159b4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc14>
   15bc4:	and	w0, w23, #0xfffffff8
   15bc8:	add	w0, w0, #0x8
   15bcc:	str	w0, [x28, #132]
   15bd0:	ldxr	w0, [x19]
   15bd4:	stlxr	w1, wzr, [x19]
   15bd8:	cbnz	w1, 15bd0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe30>
   15bdc:	tbnz	w0, #31, 15dc8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1028>
   15be0:	add	x0, x28, #0x80
   15be4:	mov	w1, #0x0                   	// #0
   15be8:	bl	1d150 <omp_get_num_procs@@OMP_1.0+0x5a0>
   15bec:	ldp	x19, x20, [sp, #16]
   15bf0:	ldp	x21, x22, [sp, #32]
   15bf4:	ldp	x23, x24, [sp, #48]
   15bf8:	ldp	x25, x26, [sp, #64]
   15bfc:	ldp	x27, x28, [sp, #80]
   15c00:	ldp	x29, x30, [sp], #160
   15c04:	ret
   15c08:	mov	x4, #0x0                   	// #0
   15c0c:	ldr	x27, [x26]
   15c10:	b	15910 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb70>
   15c14:	bl	243b8 <GOMP_target_enter_exit_data@@GOMP_4.5+0x240>
   15c18:	tst	w0, #0xff
   15c1c:	b.eq	158b0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb10>  // b.none
   15c20:	mov	w0, #0x1                   	// #1
   15c24:	str	x25, [x20, #80]
   15c28:	ldaxr	w1, [x19]
   15c2c:	cbnz	w1, 15c38 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe98>
   15c30:	stxr	w2, w0, [x19]
   15c34:	cbnz	w2, 15c28 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe88>
   15c38:	cmp	w1, #0x0
   15c3c:	b.ne	15de8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1048>  // b.any
   15c40:	ldr	x1, [x26, #192]
   15c44:	mov	w2, #0x4                   	// #4
   15c48:	ldr	w0, [x28, #1328]
   15c4c:	str	w2, [x26, #200]
   15c50:	sub	w0, w0, #0x1
   15c54:	str	w0, [x28, #1328]
   15c58:	ldr	w0, [x1, #44]
   15c5c:	cmp	w0, #0x5
   15c60:	b.eq	15d98 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xff8>  // b.none
   15c64:	mov	x26, #0x0                   	// #0
   15c68:	mov	w23, #0x0                   	// #0
   15c6c:	mov	x27, x26
   15c70:	str	w2, [x1, #44]
   15c74:	b	15a08 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc68>
   15c78:	ldr	x1, [x27, #64]
   15c7c:	ldr	x0, [x1, #8]
   15c80:	sub	x0, x0, #0x1
   15c84:	str	x0, [x1, #8]
   15c88:	cbnz	x0, 1591c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb7c>
   15c8c:	ldrb	w0, [x1, #1]
   15c90:	cbz	w0, 1591c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb7c>
   15c94:	ldr	w2, [x1, #16]
   15c98:	add	x0, x1, #0x10
   15c9c:	strb	wzr, [x1, #1]
   15ca0:	add	w1, w2, #0x1
   15ca4:	and	w1, w1, #0x7fffffff
   15ca8:	ldxr	w7, [x0]
   15cac:	cmp	w7, w2
   15cb0:	b.ne	15cbc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf1c>  // b.any
   15cb4:	stlxr	w3, w1, [x0]
   15cb8:	cmp	w3, #0x0
   15cbc:	mov	w2, w7
   15cc0:	b.ne	15ca0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf00>  // b.any
   15cc4:	tbz	w7, #31, 1591c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb7c>
   15cc8:	str	x4, [sp, #96]
   15ccc:	bl	1cef0 <omp_get_num_procs@@OMP_1.0+0x340>
   15cd0:	ldr	x4, [sp, #96]
   15cd4:	b	1591c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb7c>
   15cd8:	add	x1, x27, #0x8
   15cdc:	mov	w0, #0x1                   	// #1
   15ce0:	stp	x1, x4, [sp, #96]
   15ce4:	bl	2b290 <acc_set_cuda_stream@@OACC_2.0+0x288>
   15ce8:	ldr	x0, [x27, #8]
   15cec:	ldp	x1, x4, [sp, #96]
   15cf0:	cbnz	x0, 15940 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xba0>
   15cf4:	stlr	xzr, [x1]
   15cf8:	b	15d30 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf90>
   15cfc:	bl	88b0 <free@plt>
   15d00:	b	15890 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xaf0>
   15d04:	mov	w0, #0x2                   	// #2
   15d08:	add	x1, x27, #0x8
   15d0c:	str	x4, [sp, #96]
   15d10:	bl	2b290 <acc_set_cuda_stream@@OACC_2.0+0x288>
   15d14:	ldr	x0, [x27, #8]
   15d18:	ldr	x4, [sp, #96]
   15d1c:	cmp	x0, #0x0
   15d20:	cset	w8, eq  // eq = none
   15d24:	b	1599c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xbfc>
   15d28:	add	x0, x27, #0x18
   15d2c:	stlr	xzr, [x0]
   15d30:	ldr	x0, [x27, #64]
   15d34:	cbz	x0, 15940 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xba0>
   15d38:	ldrb	w1, [x0]
   15d3c:	cbz	w1, 15940 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xba0>
   15d40:	ldr	w1, [x0, #16]
   15d44:	strb	wzr, [x0], #16
   15d48:	add	w2, w1, #0x1
   15d4c:	and	w2, w2, #0x7fffffff
   15d50:	ldxr	w7, [x0]
   15d54:	cmp	w7, w1
   15d58:	b.ne	15d64 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xfc4>  // b.any
   15d5c:	stlxr	w3, w2, [x0]
   15d60:	cmp	w3, #0x0
   15d64:	mov	w1, w7
   15d68:	b.ne	15d48 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xfa8>  // b.any
   15d6c:	tbz	w7, #31, 15940 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xba0>
   15d70:	str	x4, [sp, #96]
   15d74:	bl	1cef0 <omp_get_num_procs@@OMP_1.0+0x340>
   15d78:	ldr	x4, [sp, #96]
   15d7c:	b	15940 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xba0>
   15d80:	mov	w8, #0x1                   	// #1
   15d84:	str	xzr, [x7, #8]
   15d88:	b	1599c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xbfc>
   15d8c:	mov	x0, x19
   15d90:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   15d94:	b	15ab8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xd18>
   15d98:	mov	x1, x26
   15d9c:	mov	x0, x28
   15da0:	mov	x26, #0x0                   	// #0
   15da4:	mov	w23, #0x0                   	// #0
   15da8:	mov	x27, x26
   15dac:	bl	14920 <GOMP_single_copy_end@@GOMP_1.0+0x1618>
   15db0:	b	15a08 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc68>
   15db4:	mov	x0, x19
   15db8:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   15dbc:	b	157e8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa48>
   15dc0:	bl	88b0 <free@plt>
   15dc4:	b	15a64 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xcc4>
   15dc8:	mov	x0, x19
   15dcc:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   15dd0:	b	15be0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe40>
   15dd4:	mov	x0, x19
   15dd8:	mov	w20, #0x0                   	// #0
   15ddc:	mov	w23, #0x0                   	// #0
   15de0:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   15de4:	b	158dc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb3c>
   15de8:	mov	x0, x19
   15dec:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   15df0:	b	15c40 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xea0>
   15df4:	nop

0000000000015df8 <GOMP_taskwait@@GOMP_2.0>:
   15df8:	stp	x29, x30, [sp, #-176]!
   15dfc:	mov	x29, sp
   15e00:	stp	x21, x22, [sp, #32]
   15e04:	mrs	x22, tpidr_el0
   15e08:	adrp	x21, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   15e0c:	ldr	x21, [x21, #4016]
   15e10:	stp	x27, x28, [sp, #80]
   15e14:	add	x0, x22, x21
   15e18:	ldr	x28, [x0, #80]
   15e1c:	cbz	x28, 15e54 <GOMP_taskwait@@GOMP_2.0+0x5c>
   15e20:	ldr	x1, [x28, #8]
   15e24:	stp	x19, x20, [sp, #16]
   15e28:	stp	x23, x24, [sp, #48]
   15e2c:	add	x23, x28, #0x8
   15e30:	ldr	x20, [x0, #16]
   15e34:	cbnz	x1, 16320 <GOMP_taskwait@@GOMP_2.0+0x528>
   15e38:	add	x0, x28, #0x18
   15e3c:	ldar	x0, [x0]
   15e40:	cmp	x0, #0x0
   15e44:	cset	w0, eq  // eq = none
   15e48:	cbz	w0, 15e64 <GOMP_taskwait@@GOMP_2.0+0x6c>
   15e4c:	ldp	x19, x20, [sp, #16]
   15e50:	ldp	x23, x24, [sp, #48]
   15e54:	ldp	x21, x22, [sp, #32]
   15e58:	ldp	x27, x28, [sp, #80]
   15e5c:	ldp	x29, x30, [sp], #176
   15e60:	ret
   15e64:	add	x19, x20, #0x500
   15e68:	mov	w0, #0x1                   	// #1
   15e6c:	stp	x25, x26, [sp, #64]
   15e70:	strb	wzr, [sp, #151]
   15e74:	stp	xzr, xzr, [sp, #152]
   15e78:	str	xzr, [sp, #168]
   15e7c:	ldaxr	w1, [x19]
   15e80:	cbnz	w1, 15e8c <GOMP_taskwait@@GOMP_2.0+0x94>
   15e84:	stxr	w2, w0, [x19]
   15e88:	cbnz	w2, 15e7c <GOMP_taskwait@@GOMP_2.0+0x84>
   15e8c:	cmp	w1, #0x0
   15e90:	b.ne	163b4 <GOMP_taskwait@@GOMP_2.0+0x5bc>  // b.any
   15e94:	add	x0, sp, #0x98
   15e98:	str	x0, [sp, #112]
   15e9c:	add	x0, sp, #0xa8
   15ea0:	str	x0, [sp, #136]
   15ea4:	add	x0, sp, #0x97
   15ea8:	str	x0, [sp, #128]
   15eac:	add	x0, sp, #0xa8
   15eb0:	str	x0, [sp, #120]
   15eb4:	ldr	x0, [x28, #8]
   15eb8:	mov	w25, #0x0                   	// #0
   15ebc:	mov	x26, #0x0                   	// #0
   15ec0:	cbnz	x0, 16058 <GOMP_taskwait@@GOMP_2.0+0x260>
   15ec4:	nop
   15ec8:	ldr	x3, [x23, #16]
   15ecc:	cbz	x3, 161f0 <GOMP_taskwait@@GOMP_2.0+0x3f8>
   15ed0:	sub	x27, x3, #0x70
   15ed4:	mov	w0, #0x1                   	// #1
   15ed8:	strb	w0, [sp, #151]
   15edc:	ldr	w0, [x27, #200]
   15ee0:	cmp	w0, #0x2
   15ee4:	b.eq	16138 <GOMP_taskwait@@GOMP_2.0+0x340>  // b.none
   15ee8:	ldr	x0, [x28, #64]
   15eec:	cbz	x0, 16124 <GOMP_taskwait@@GOMP_2.0+0x32c>
   15ef0:	mov	w0, #0x1                   	// #1
   15ef4:	mov	x27, #0x0                   	// #0
   15ef8:	strb	w0, [sp, #152]
   15efc:	ldxr	w0, [x19]
   15f00:	stlxr	w1, wzr, [x19]
   15f04:	cbnz	w1, 15efc <GOMP_taskwait@@GOMP_2.0+0x104>
   15f08:	tbnz	w0, #31, 16234 <GOMP_taskwait@@GOMP_2.0+0x43c>
   15f0c:	cbnz	w25, 16088 <GOMP_taskwait@@GOMP_2.0+0x290>
   15f10:	cbz	x26, 15f24 <GOMP_taskwait@@GOMP_2.0+0x12c>
   15f14:	ldr	x0, [x26, #56]
   15f18:	cbnz	x0, 162fc <GOMP_taskwait@@GOMP_2.0+0x504>
   15f1c:	mov	x0, x26
   15f20:	bl	88b0 <free@plt>
   15f24:	cbz	x27, 16168 <GOMP_taskwait@@GOMP_2.0+0x370>
   15f28:	ldp	x1, x0, [x27, #184]
   15f2c:	add	x26, x22, x21
   15f30:	str	x27, [x26, #80]
   15f34:	cbz	x1, 16268 <GOMP_taskwait@@GOMP_2.0+0x470>
   15f38:	blr	x1
   15f3c:	add	x0, x22, x21
   15f40:	mov	w2, #0x1                   	// #1
   15f44:	str	x28, [x0, #80]
   15f48:	ldaxr	w1, [x19]
   15f4c:	cbnz	w1, 15f58 <GOMP_taskwait@@GOMP_2.0+0x160>
   15f50:	stxr	w0, w2, [x19]
   15f54:	cbnz	w0, 15f48 <GOMP_taskwait@@GOMP_2.0+0x150>
   15f58:	cmp	w1, #0x0
   15f5c:	mov	w25, #0x0                   	// #0
   15f60:	b.ne	163a8 <GOMP_taskwait@@GOMP_2.0+0x5b0>  // b.any
   15f64:	ldr	x0, [x27, #72]
   15f68:	cbz	x0, 16098 <GOMP_taskwait@@GOMP_2.0+0x2a0>
   15f6c:	ldr	x0, [x27]
   15f70:	cbz	x0, 15f7c <GOMP_taskwait@@GOMP_2.0+0x184>
   15f74:	mov	x0, x27
   15f78:	bl	13678 <GOMP_single_copy_end@@GOMP_1.0+0x370>
   15f7c:	ldr	x0, [x27, #48]
   15f80:	cbz	x0, 16098 <GOMP_taskwait@@GOMP_2.0+0x2a0>
   15f84:	mov	x1, x20
   15f88:	mov	x0, x27
   15f8c:	bl	13be8 <GOMP_single_copy_end@@GOMP_1.0+0x8e0>
   15f90:	mov	x24, x0
   15f94:	ldrb	w0, [sp, #151]
   15f98:	cbnz	w0, 160a4 <GOMP_taskwait@@GOMP_2.0+0x2ac>
   15f9c:	ldr	x7, [x27, #8]
   15fa0:	cbnz	x7, 160d4 <GOMP_taskwait@@GOMP_2.0+0x2dc>
   15fa4:	ldr	x2, [x27, #24]
   15fa8:	mov	x1, x2
   15fac:	cbz	x2, 15fc0 <GOMP_taskwait@@GOMP_2.0+0x1c8>
   15fb0:	stur	xzr, [x1, #-112]
   15fb4:	ldr	x1, [x1]
   15fb8:	cmp	x2, x1
   15fbc:	b.ne	15fb0 <GOMP_taskwait@@GOMP_2.0+0x1b8>  // b.any
   15fc0:	ldr	x26, [x27, #40]
   15fc4:	cbz	x26, 16018 <GOMP_taskwait@@GOMP_2.0+0x220>
   15fc8:	ldr	x0, [x26, #8]
   15fcc:	add	x2, x27, #0x80
   15fd0:	cbnz	x0, 16304 <GOMP_taskwait@@GOMP_2.0+0x50c>
   15fd4:	ldp	x0, x1, [x27, #128]
   15fd8:	add	x7, x26, #0x10
   15fdc:	ldr	x9, [x7, #8]
   15fe0:	mov	w8, #0x0                   	// #0
   15fe4:	cmp	x2, x9
   15fe8:	str	x0, [x1]
   15fec:	str	x1, [x0, #8]
   15ff0:	b.eq	161c8 <GOMP_taskwait@@GOMP_2.0+0x3d0>  // b.none
   15ff4:	ldr	x0, [x26, #56]
   15ff8:	stp	xzr, xzr, [x27, #128]
   15ffc:	cmp	x0, #0x1
   16000:	b.ls	161e4 <GOMP_taskwait@@GOMP_2.0+0x3ec>  // b.plast
   16004:	sub	x0, x0, #0x1
   16008:	str	x0, [x26, #56]
   1600c:	cbz	w8, 16018 <GOMP_taskwait@@GOMP_2.0+0x220>
   16010:	ldrb	w0, [x26, #48]
   16014:	cbnz	w0, 162c0 <GOMP_taskwait@@GOMP_2.0+0x4c8>
   16018:	ldr	w0, [x20, #1320]
   1601c:	cmp	x24, #0x1
   16020:	sub	w0, w0, #0x1
   16024:	str	w0, [x20, #1320]
   16028:	b.ls	1604c <GOMP_taskwait@@GOMP_2.0+0x254>  // b.plast
   1602c:	ldrb	w0, [x28, #204]
   16030:	ldr	w6, [x20]
   16034:	ldr	w1, [x20, #1328]
   16038:	eor	w0, w0, #0x1
   1603c:	sub	w6, w6, w1
   16040:	sub	w25, w6, w0
   16044:	cmp	x24, w25, sxtw
   16048:	csel	w25, w24, w25, cc  // cc = lo, ul, last
   1604c:	mov	x26, x27
   16050:	ldr	x0, [x28, #8]
   16054:	cbz	x0, 15ec8 <GOMP_taskwait@@GOMP_2.0+0xd0>
   16058:	ldr	x4, [sp, #128]
   1605c:	add	x3, x20, #0x508
   16060:	mov	x1, x23
   16064:	mov	w2, #0x0                   	// #0
   16068:	mov	w0, #0x1                   	// #1
   1606c:	bl	2b3a0 <acc_set_cuda_stream@@OACC_2.0+0x398>
   16070:	mov	x27, x0
   16074:	cbnz	x0, 15edc <GOMP_taskwait@@GOMP_2.0+0xe4>
   16078:	ldr	x0, [x23]
   1607c:	ldr	x3, [x0, #8]
   16080:	sub	x27, x3, #0x70
   16084:	b	15edc <GOMP_taskwait@@GOMP_2.0+0xe4>
   16088:	mov	w1, w25
   1608c:	add	x0, x20, #0x80
   16090:	bl	1d150 <omp_get_num_procs@@OMP_1.0+0x5a0>
   16094:	b	15f10 <GOMP_taskwait@@GOMP_2.0+0x118>
   16098:	ldrb	w0, [sp, #151]
   1609c:	mov	x24, #0x0                   	// #0
   160a0:	cbz	w0, 15f9c <GOMP_taskwait@@GOMP_2.0+0x1a4>
   160a4:	ldr	x0, [x28, #8]
   160a8:	add	x2, x27, #0x70
   160ac:	cbnz	x0, 16350 <GOMP_taskwait@@GOMP_2.0+0x558>
   160b0:	ldp	x0, x1, [x27, #112]
   160b4:	ldr	x8, [x28, #24]
   160b8:	cmp	x8, x2
   160bc:	str	x0, [x1]
   160c0:	str	x1, [x0, #8]
   160c4:	b.eq	16244 <GOMP_taskwait@@GOMP_2.0+0x44c>  // b.none
   160c8:	stp	xzr, xzr, [x27, #112]
   160cc:	ldr	x7, [x27, #8]
   160d0:	cbz	x7, 15fa4 <GOMP_taskwait@@GOMP_2.0+0x1ac>
   160d4:	add	x26, x27, #0x8
   160d8:	ldr	x8, [x7, #8]
   160dc:	mov	x0, x7
   160e0:	ldp	x1, x7, [x7, #24]
   160e4:	mov	x2, x8
   160e8:	cbz	x8, 16100 <GOMP_taskwait@@GOMP_2.0+0x308>
   160ec:	nop
   160f0:	stur	xzr, [x2, #-112]
   160f4:	ldr	x2, [x2]
   160f8:	cmp	x8, x2
   160fc:	b.ne	160f0 <GOMP_taskwait@@GOMP_2.0+0x2f8>  // b.any
   16100:	stp	x7, x1, [sp, #96]
   16104:	bl	88b0 <free@plt>
   16108:	mov	x0, x26
   1610c:	ldr	x1, [sp, #104]
   16110:	bl	13428 <GOMP_single_copy_end@@GOMP_1.0+0x120>
   16114:	ldr	x7, [sp, #96]
   16118:	cbnz	x7, 160d8 <GOMP_taskwait@@GOMP_2.0+0x2e0>
   1611c:	str	xzr, [x26]
   16120:	b	15fc0 <GOMP_taskwait@@GOMP_2.0+0x1c8>
   16124:	ldr	x0, [sp, #112]
   16128:	str	x0, [x28, #64]
   1612c:	strb	wzr, [sp, #153]
   16130:	str	wzr, [sp, #168]
   16134:	b	15ef0 <GOMP_taskwait@@GOMP_2.0+0xf8>
   16138:	mov	x2, x20
   1613c:	mov	x1, x28
   16140:	mov	x0, x27
   16144:	bl	13850 <GOMP_single_copy_end@@GOMP_1.0+0x548>
   16148:	tst	w0, #0xff
   1614c:	b.eq	15efc <GOMP_taskwait@@GOMP_2.0+0x104>  // b.none
   16150:	cbz	x26, 15f64 <GOMP_taskwait@@GOMP_2.0+0x16c>
   16154:	ldr	x0, [x26, #56]
   16158:	cbnz	x0, 16394 <GOMP_taskwait@@GOMP_2.0+0x59c>
   1615c:	mov	x0, x26
   16160:	bl	88b0 <free@plt>
   16164:	b	15f64 <GOMP_taskwait@@GOMP_2.0+0x16c>
   16168:	ldr	w1, [sp, #168]
   1616c:	tst	x1, #0x7fffffff
   16170:	b.eq	16364 <GOMP_taskwait@@GOMP_2.0+0x56c>  // b.none
   16174:	sub	w2, w1, #0x1
   16178:	ldr	x3, [sp, #120]
   1617c:	ldaxr	w0, [x3]
   16180:	cmp	w0, w1
   16184:	b.ne	16190 <GOMP_taskwait@@GOMP_2.0+0x398>  // b.any
   16188:	stxr	w4, w2, [x3]
   1618c:	cmp	w4, #0x0
   16190:	mov	w1, w0
   16194:	b.ne	1616c <GOMP_taskwait@@GOMP_2.0+0x374>  // b.any
   16198:	mov	w0, #0x1                   	// #1
   1619c:	ldaxr	w1, [x19]
   161a0:	cbnz	w1, 161ac <GOMP_taskwait@@GOMP_2.0+0x3b4>
   161a4:	stxr	w2, w0, [x19]
   161a8:	cbnz	w2, 1619c <GOMP_taskwait@@GOMP_2.0+0x3a4>
   161ac:	cmp	w1, #0x0
   161b0:	mov	w25, #0x0                   	// #0
   161b4:	b.eq	1604c <GOMP_taskwait@@GOMP_2.0+0x254>  // b.none
   161b8:	mov	x0, x19
   161bc:	mov	x26, x27
   161c0:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   161c4:	b	16050 <GOMP_taskwait@@GOMP_2.0+0x258>
   161c8:	cmp	x2, x0
   161cc:	b.eq	16344 <GOMP_taskwait@@GOMP_2.0+0x54c>  // b.none
   161d0:	str	x0, [x7, #8]
   161d4:	ldr	x0, [x26, #56]
   161d8:	stp	xzr, xzr, [x27, #128]
   161dc:	cmp	x0, #0x1
   161e0:	b.hi	16004 <GOMP_taskwait@@GOMP_2.0+0x20c>  // b.pmore
   161e4:	add	x0, x26, #0x38
   161e8:	stlr	xzr, [x0]
   161ec:	b	1600c <GOMP_taskwait@@GOMP_2.0+0x214>
   161f0:	str	xzr, [x28, #64]
   161f4:	ldxr	w0, [x19]
   161f8:	stlxr	w1, wzr, [x19]
   161fc:	cbnz	w1, 161f4 <GOMP_taskwait@@GOMP_2.0+0x3fc>
   16200:	tbnz	w0, #31, 16334 <GOMP_taskwait@@GOMP_2.0+0x53c>
   16204:	cbz	x26, 16258 <GOMP_taskwait@@GOMP_2.0+0x460>
   16208:	ldr	x0, [x26, #56]
   1620c:	cbnz	x0, 16370 <GOMP_taskwait@@GOMP_2.0+0x578>
   16210:	mov	x0, x26
   16214:	bl	88b0 <free@plt>
   16218:	ldp	x19, x20, [sp, #16]
   1621c:	ldp	x21, x22, [sp, #32]
   16220:	ldp	x23, x24, [sp, #48]
   16224:	ldp	x25, x26, [sp, #64]
   16228:	ldp	x27, x28, [sp, #80]
   1622c:	ldp	x29, x30, [sp], #176
   16230:	ret
   16234:	mov	x0, x19
   16238:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   1623c:	cbz	w25, 15f10 <GOMP_taskwait@@GOMP_2.0+0x118>
   16240:	b	16088 <GOMP_taskwait@@GOMP_2.0+0x290>
   16244:	cmp	x0, x8
   16248:	csel	x0, x0, xzr, ne  // ne = any
   1624c:	str	x0, [x28, #24]
   16250:	stp	xzr, xzr, [x27, #112]
   16254:	b	160cc <GOMP_taskwait@@GOMP_2.0+0x2d4>
   16258:	ldp	x19, x20, [sp, #16]
   1625c:	ldp	x23, x24, [sp, #48]
   16260:	ldp	x25, x26, [sp, #64]
   16264:	b	15e54 <GOMP_taskwait@@GOMP_2.0+0x5c>
   16268:	bl	243b8 <GOMP_target_enter_exit_data@@GOMP_4.5+0x240>
   1626c:	tst	w0, #0xff
   16270:	b.eq	15f3c <GOMP_taskwait@@GOMP_2.0+0x144>  // b.none
   16274:	mov	w0, #0x1                   	// #1
   16278:	str	x28, [x26, #80]
   1627c:	ldaxr	w1, [x19]
   16280:	cbnz	w1, 1628c <GOMP_taskwait@@GOMP_2.0+0x494>
   16284:	stxr	w2, w0, [x19]
   16288:	cbnz	w2, 1627c <GOMP_taskwait@@GOMP_2.0+0x484>
   1628c:	cmp	w1, #0x0
   16290:	b.ne	1639c <GOMP_taskwait@@GOMP_2.0+0x5a4>  // b.any
   16294:	ldr	x0, [x27, #192]
   16298:	mov	w1, #0x4                   	// #4
   1629c:	ldr	w2, [x0, #44]
   162a0:	str	w1, [x27, #200]
   162a4:	cmp	w2, #0x5
   162a8:	b.eq	16378 <GOMP_taskwait@@GOMP_2.0+0x580>  // b.none
   162ac:	mov	x27, #0x0                   	// #0
   162b0:	mov	w25, #0x0                   	// #0
   162b4:	mov	x26, x27
   162b8:	str	w1, [x0, #44]
   162bc:	b	16050 <GOMP_taskwait@@GOMP_2.0+0x258>
   162c0:	ldr	w1, [x26, #52]
   162c4:	add	x0, x26, #0x34
   162c8:	strb	wzr, [x26, #48]
   162cc:	add	w2, w1, #0x1
   162d0:	and	w2, w2, #0x7fffffff
   162d4:	ldxr	w7, [x0]
   162d8:	cmp	w7, w1
   162dc:	b.ne	162e8 <GOMP_taskwait@@GOMP_2.0+0x4f0>  // b.any
   162e0:	stlxr	w3, w2, [x0]
   162e4:	cmp	w3, #0x0
   162e8:	mov	w1, w7
   162ec:	b.ne	162cc <GOMP_taskwait@@GOMP_2.0+0x4d4>  // b.any
   162f0:	tbz	w7, #31, 16018 <GOMP_taskwait@@GOMP_2.0+0x220>
   162f4:	bl	1cef0 <omp_get_num_procs@@OMP_1.0+0x340>
   162f8:	b	16018 <GOMP_taskwait@@GOMP_2.0+0x220>
   162fc:	bl	88b0 <free@plt>
   16300:	b	15f1c <GOMP_taskwait@@GOMP_2.0+0x124>
   16304:	mov	w0, #0x2                   	// #2
   16308:	add	x1, x26, #0x8
   1630c:	bl	2b290 <acc_set_cuda_stream@@OACC_2.0+0x288>
   16310:	ldr	x0, [x26, #8]
   16314:	cmp	x0, #0x0
   16318:	cset	w8, eq  // eq = none
   1631c:	b	15ff4 <GOMP_taskwait@@GOMP_2.0+0x1fc>
   16320:	ldar	x0, [x23]
   16324:	cmp	x0, #0x0
   16328:	cset	w0, eq  // eq = none
   1632c:	cbnz	w0, 15e4c <GOMP_taskwait@@GOMP_2.0+0x54>
   16330:	b	15e64 <GOMP_taskwait@@GOMP_2.0+0x6c>
   16334:	mov	x0, x19
   16338:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   1633c:	cbnz	x26, 16208 <GOMP_taskwait@@GOMP_2.0+0x410>
   16340:	b	16258 <GOMP_taskwait@@GOMP_2.0+0x460>
   16344:	mov	w8, #0x1                   	// #1
   16348:	str	xzr, [x7, #8]
   1634c:	b	15ff4 <GOMP_taskwait@@GOMP_2.0+0x1fc>
   16350:	mov	x1, x23
   16354:	mov	w0, #0x1                   	// #1
   16358:	bl	2b290 <acc_set_cuda_stream@@OACC_2.0+0x288>
   1635c:	stp	xzr, xzr, [x27, #112]
   16360:	b	160cc <GOMP_taskwait@@GOMP_2.0+0x2d4>
   16364:	ldr	x0, [sp, #136]
   16368:	bl	1cc28 <omp_get_num_procs@@OMP_1.0+0x78>
   1636c:	b	16198 <GOMP_taskwait@@GOMP_2.0+0x3a0>
   16370:	bl	88b0 <free@plt>
   16374:	b	16210 <GOMP_taskwait@@GOMP_2.0+0x418>
   16378:	mov	x1, x27
   1637c:	mov	x0, x20
   16380:	mov	x27, #0x0                   	// #0
   16384:	mov	w25, #0x0                   	// #0
   16388:	mov	x26, x27
   1638c:	bl	14920 <GOMP_single_copy_end@@GOMP_1.0+0x1618>
   16390:	b	16050 <GOMP_taskwait@@GOMP_2.0+0x258>
   16394:	bl	88b0 <free@plt>
   16398:	b	1615c <GOMP_taskwait@@GOMP_2.0+0x364>
   1639c:	mov	x0, x19
   163a0:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   163a4:	b	16294 <GOMP_taskwait@@GOMP_2.0+0x49c>
   163a8:	mov	x0, x19
   163ac:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   163b0:	b	15f64 <GOMP_taskwait@@GOMP_2.0+0x16c>
   163b4:	mov	x0, x19
   163b8:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   163bc:	b	15e94 <GOMP_taskwait@@GOMP_2.0+0x9c>
   163c0:	stp	x29, x30, [sp, #-256]!
   163c4:	adrp	x1, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   163c8:	ldr	x1, [x1, #4016]
   163cc:	mov	x29, sp
   163d0:	stp	x23, x24, [sp, #48]
   163d4:	mov	x24, x0
   163d8:	mrs	x0, tpidr_el0
   163dc:	stp	x19, x20, [sp, #16]
   163e0:	stp	x21, x22, [sp, #32]
   163e4:	ldp	x19, x22, [x24]
   163e8:	stp	x1, x0, [sp, #112]
   163ec:	add	x0, x0, x1
   163f0:	stp	x25, x26, [sp, #64]
   163f4:	stp	x27, x28, [sp, #80]
   163f8:	ldr	x25, [x0, #16]
   163fc:	ldr	x28, [x0, #80]
   16400:	cbz	x19, 16a38 <GOMP_taskwait@@GOMP_2.0+0xc40>
   16404:	add	x0, x25, #0x500
   16408:	mov	x2, x0
   1640c:	mov	w0, #0x1                   	// #1
   16410:	str	x2, [sp, #104]
   16414:	ldaxr	w1, [x2]
   16418:	cbnz	w1, 16424 <GOMP_taskwait@@GOMP_2.0+0x62c>
   1641c:	stxr	w3, w0, [x2]
   16420:	cbnz	w3, 16414 <GOMP_taskwait@@GOMP_2.0+0x61c>
   16424:	cmp	w1, #0x0
   16428:	b.ne	16b4c <GOMP_taskwait@@GOMP_2.0+0xd54>  // b.any
   1642c:	mov	x23, x19
   16430:	mov	x21, #0x2                   	// #2
   16434:	add	x21, x24, x21, lsl #3
   16438:	add	x24, sp, #0xd8
   1643c:	add	x0, sp, #0xc0
   16440:	mov	x26, #0x0                   	// #0
   16444:	mov	x20, #0x0                   	// #0
   16448:	mov	w27, #0x1                   	// #1
   1644c:	str	x0, [sp, #128]
   16450:	cmp	x20, x22
   16454:	ldr	x0, [x21, x20, lsl #3]
   16458:	cset	w1, cs  // cs = hs, nlast
   1645c:	str	x0, [sp, #216]
   16460:	cmp	x19, x20
   16464:	strb	w1, [sp, #248]
   16468:	b.ls	16768 <GOMP_taskwait@@GOMP_2.0+0x970>  // b.plast
   1646c:	ldr	x0, [x28, #56]
   16470:	mov	x1, x24
   16474:	bl	13348 <GOMP_single_copy_end@@GOMP_1.0+0x40>
   16478:	mov	x2, x0
   1647c:	cbz	x0, 164c8 <GOMP_taskwait@@GOMP_2.0+0x6d0>
   16480:	ldrb	w4, [sp, #248]
   16484:	add	x10, x28, #0x8
   16488:	cbz	w4, 16494 <GOMP_taskwait@@GOMP_2.0+0x69c>
   1648c:	ldrb	w0, [x2, #32]
   16490:	cbnz	w0, 164c0 <GOMP_taskwait@@GOMP_2.0+0x6c8>
   16494:	ldr	x3, [x2, #24]
   16498:	ldrb	w0, [x3, #207]
   1649c:	cbnz	w0, 164c0 <GOMP_taskwait@@GOMP_2.0+0x6c8>
   164a0:	ldr	x0, [x3, #80]
   164a4:	strb	w27, [x3, #207]
   164a8:	add	x26, x26, #0x1
   164ac:	cbnz	x0, 164c0 <GOMP_taskwait@@GOMP_2.0+0x6c8>
   164b0:	ldr	w0, [x3, #200]
   164b4:	cmp	w0, #0x2
   164b8:	b.eq	16728 <GOMP_taskwait@@GOMP_2.0+0x930>  // b.none
   164bc:	nop
   164c0:	ldr	x2, [x2, #8]
   164c4:	cbnz	x2, 16488 <GOMP_taskwait@@GOMP_2.0+0x690>
   164c8:	add	x20, x20, #0x1
   164cc:	cmp	x20, x23
   164d0:	b.cc	16450 <GOMP_taskwait@@GOMP_2.0+0x658>  // b.lo, b.ul, b.last
   164d4:	cbz	x26, 16954 <GOMP_taskwait@@GOMP_2.0+0xb5c>
   164d8:	stp	xzr, xzr, [sp, #192]
   164dc:	add	x1, sp, #0xbf
   164e0:	add	x21, x28, #0x8
   164e4:	stp	x26, xzr, [sp, #200]
   164e8:	add	x0, sp, #0xc0
   164ec:	mov	w22, #0x0                   	// #0
   164f0:	mov	x23, #0x0                   	// #0
   164f4:	mov	w19, #0x1                   	// #1
   164f8:	str	x0, [x28, #64]
   164fc:	stp	x1, x0, [sp, #136]
   16500:	add	x1, sp, #0xd0
   16504:	str	x1, [sp, #128]
   16508:	ldr	x0, [x28, #8]
   1650c:	cbnz	x0, 16974 <GOMP_taskwait@@GOMP_2.0+0xb7c>
   16510:	ldr	x3, [x21, #16]
   16514:	strb	w19, [sp, #191]
   16518:	sub	x20, x3, #0x70
   1651c:	ldr	w0, [x20, #200]
   16520:	cmp	w0, #0x2
   16524:	b.eq	167d0 <GOMP_taskwait@@GOMP_2.0+0x9d8>  // b.none
   16528:	mov	x20, #0x0                   	// #0
   1652c:	strb	w19, [sp, #193]
   16530:	ldr	x1, [sp, #104]
   16534:	ldxr	w0, [x1]
   16538:	stlxr	w2, wzr, [x1]
   1653c:	cbnz	w2, 16534 <GOMP_taskwait@@GOMP_2.0+0x73c>
   16540:	tbnz	w0, #31, 16944 <GOMP_taskwait@@GOMP_2.0+0xb4c>
   16544:	cbnz	w22, 16718 <GOMP_taskwait@@GOMP_2.0+0x920>
   16548:	cbz	x23, 1655c <GOMP_taskwait@@GOMP_2.0+0x764>
   1654c:	ldr	x0, [x23, #56]
   16550:	cbnz	x0, 16a90 <GOMP_taskwait@@GOMP_2.0+0xc98>
   16554:	mov	x0, x23
   16558:	bl	88b0 <free@plt>
   1655c:	cbz	x20, 1685c <GOMP_taskwait@@GOMP_2.0+0xa64>
   16560:	ldp	x1, x0, [sp, #112]
   16564:	add	x23, x0, x1
   16568:	ldp	x1, x0, [x20, #184]
   1656c:	str	x20, [x23, #80]
   16570:	cbz	x1, 169a4 <GOMP_taskwait@@GOMP_2.0+0xbac>
   16574:	blr	x1
   16578:	ldp	x1, x0, [sp, #112]
   1657c:	mov	w2, #0x1                   	// #1
   16580:	add	x0, x0, x1
   16584:	str	x28, [x0, #80]
   16588:	ldr	x0, [sp, #104]
   1658c:	ldaxr	w1, [x0]
   16590:	cbnz	w1, 1659c <GOMP_taskwait@@GOMP_2.0+0x7a4>
   16594:	stxr	w3, w2, [x0]
   16598:	cbnz	w3, 1658c <GOMP_taskwait@@GOMP_2.0+0x794>
   1659c:	cmp	w1, #0x0
   165a0:	mov	w22, #0x0                   	// #0
   165a4:	b.ne	16b60 <GOMP_taskwait@@GOMP_2.0+0xd68>  // b.any
   165a8:	ldr	x0, [x20, #72]
   165ac:	cbz	x0, 167c8 <GOMP_taskwait@@GOMP_2.0+0x9d0>
   165b0:	ldr	x0, [x20]
   165b4:	cbz	x0, 165c0 <GOMP_taskwait@@GOMP_2.0+0x7c8>
   165b8:	mov	x0, x20
   165bc:	bl	13678 <GOMP_single_copy_end@@GOMP_1.0+0x370>
   165c0:	ldr	x0, [x20, #48]
   165c4:	cbz	x0, 167c8 <GOMP_taskwait@@GOMP_2.0+0x9d0>
   165c8:	mov	x1, x25
   165cc:	mov	x0, x20
   165d0:	bl	13be8 <GOMP_single_copy_end@@GOMP_1.0+0x8e0>
   165d4:	mov	x26, x0
   165d8:	ldrb	w0, [x20, #207]
   165dc:	cbz	w0, 165ec <GOMP_taskwait@@GOMP_2.0+0x7f4>
   165e0:	ldr	x0, [sp, #200]
   165e4:	sub	x0, x0, #0x1
   165e8:	str	x0, [sp, #200]
   165ec:	ldr	x0, [x28, #8]
   165f0:	add	x2, x20, #0x70
   165f4:	cbnz	x0, 16a80 <GOMP_taskwait@@GOMP_2.0+0xc88>
   165f8:	ldp	x0, x1, [x20, #112]
   165fc:	ldr	x8, [x28, #24]
   16600:	cmp	x8, x2
   16604:	str	x0, [x1]
   16608:	str	x1, [x0, #8]
   1660c:	b.eq	16800 <GOMP_taskwait@@GOMP_2.0+0xa08>  // b.none
   16610:	ldr	x27, [x20, #8]
   16614:	stp	xzr, xzr, [x20, #112]
   16618:	cbnz	x27, 16818 <GOMP_taskwait@@GOMP_2.0+0xa20>
   1661c:	ldr	x2, [x20, #24]
   16620:	mov	x1, x2
   16624:	cbz	x2, 16638 <GOMP_taskwait@@GOMP_2.0+0x840>
   16628:	stur	xzr, [x1, #-112]
   1662c:	ldr	x1, [x1]
   16630:	cmp	x2, x1
   16634:	b.ne	16628 <GOMP_taskwait@@GOMP_2.0+0x830>  // b.any
   16638:	ldr	x23, [x20, #40]
   1663c:	cbz	x23, 16690 <GOMP_taskwait@@GOMP_2.0+0x898>
   16640:	ldr	x0, [x23, #8]
   16644:	add	x2, x20, #0x80
   16648:	cbnz	x0, 16adc <GOMP_taskwait@@GOMP_2.0+0xce4>
   1664c:	ldp	x0, x1, [x20, #128]
   16650:	add	x8, x23, #0x10
   16654:	ldr	x9, [x8, #8]
   16658:	mov	w7, #0x0                   	// #0
   1665c:	cmp	x2, x9
   16660:	str	x0, [x1]
   16664:	str	x1, [x0, #8]
   16668:	b.eq	1691c <GOMP_taskwait@@GOMP_2.0+0xb24>  // b.none
   1666c:	ldr	x0, [x23, #56]
   16670:	stp	xzr, xzr, [x20, #128]
   16674:	cmp	x0, #0x1
   16678:	b.ls	16938 <GOMP_taskwait@@GOMP_2.0+0xb40>  // b.plast
   1667c:	sub	x0, x0, #0x1
   16680:	str	x0, [x23, #56]
   16684:	cbz	w7, 16690 <GOMP_taskwait@@GOMP_2.0+0x898>
   16688:	ldrb	w0, [x23, #48]
   1668c:	cbnz	w0, 169fc <GOMP_taskwait@@GOMP_2.0+0xc04>
   16690:	ldr	w0, [x25, #1320]
   16694:	cmp	x26, #0x1
   16698:	sub	w0, w0, #0x1
   1669c:	str	w0, [x25, #1320]
   166a0:	b.ls	166c4 <GOMP_taskwait@@GOMP_2.0+0x8cc>  // b.plast
   166a4:	ldrb	w0, [x28, #204]
   166a8:	ldr	w6, [x25]
   166ac:	ldr	w1, [x25, #1328]
   166b0:	eor	w0, w0, #0x1
   166b4:	sub	w6, w6, w1
   166b8:	sub	w22, w6, w0
   166bc:	cmp	x26, w22, sxtw
   166c0:	csel	w22, w26, w22, cc  // cc = lo, ul, last
   166c4:	mov	x23, x20
   166c8:	ldr	x0, [sp, #200]
   166cc:	cbnz	x0, 16508 <GOMP_taskwait@@GOMP_2.0+0x710>
   166d0:	ldr	x1, [sp, #104]
   166d4:	str	xzr, [x28, #64]
   166d8:	ldxr	w0, [x1]
   166dc:	stlxr	w2, wzr, [x1]
   166e0:	cbnz	w2, 166d8 <GOMP_taskwait@@GOMP_2.0+0x8e0>
   166e4:	tbnz	w0, #31, 16af8 <GOMP_taskwait@@GOMP_2.0+0xd00>
   166e8:	cbz	x23, 166fc <GOMP_taskwait@@GOMP_2.0+0x904>
   166ec:	ldr	x0, [x23, #56]
   166f0:	cbnz	x0, 16b04 <GOMP_taskwait@@GOMP_2.0+0xd0c>
   166f4:	mov	x0, x23
   166f8:	bl	88b0 <free@plt>
   166fc:	ldp	x19, x20, [sp, #16]
   16700:	ldp	x21, x22, [sp, #32]
   16704:	ldp	x23, x24, [sp, #48]
   16708:	ldp	x25, x26, [sp, #64]
   1670c:	ldp	x27, x28, [sp, #80]
   16710:	ldp	x29, x30, [sp], #256
   16714:	ret
   16718:	mov	w1, w22
   1671c:	add	x0, x25, #0x80
   16720:	bl	1d150 <omp_get_num_procs@@OMP_1.0+0x5a0>
   16724:	b	16548 <GOMP_taskwait@@GOMP_2.0+0x750>
   16728:	ldr	x0, [x28, #8]
   1672c:	add	x9, x3, #0x70
   16730:	cbnz	x0, 168bc <GOMP_taskwait@@GOMP_2.0+0xac4>
   16734:	ldr	x0, [x28, #32]
   16738:	cbz	x0, 16790 <GOMP_taskwait@@GOMP_2.0+0x998>
   1673c:	ldp	x11, x1, [x3, #112]
   16740:	str	x11, [x1]
   16744:	ldr	x12, [x3, #112]
   16748:	ldr	x11, [x0]
   1674c:	str	x1, [x12, #8]
   16750:	stp	x11, x0, [x3, #112]
   16754:	str	x9, [x0]
   16758:	ldr	x0, [x3, #112]
   1675c:	str	x9, [x0, #8]
   16760:	str	x9, [x28, #32]
   16764:	b	164c0 <GOMP_taskwait@@GOMP_2.0+0x6c8>
   16768:	ldr	x1, [x0, #8]
   1676c:	cmp	x1, #0x1
   16770:	b.eq	16784 <GOMP_taskwait@@GOMP_2.0+0x98c>  // b.none
   16774:	sub	x2, x1, #0x2
   16778:	cmp	x2, #0x2
   1677c:	b.hi	16b40 <GOMP_taskwait@@GOMP_2.0+0xd48>  // b.pmore
   16780:	strb	wzr, [sp, #248]
   16784:	ldr	x0, [x0]
   16788:	str	x0, [sp, #216]
   1678c:	b	1646c <GOMP_taskwait@@GOMP_2.0+0x674>
   16790:	ldr	x0, [x28, #24]
   16794:	cmp	x9, x0
   16798:	b.eq	16760 <GOMP_taskwait@@GOMP_2.0+0x968>  // b.none
   1679c:	ldp	x1, x11, [x3, #112]
   167a0:	str	x1, [x11]
   167a4:	str	x11, [x1, #8]
   167a8:	ldr	x1, [x0, #8]
   167ac:	stp	x0, x1, [x3, #112]
   167b0:	str	x9, [x28, #24]
   167b4:	str	x9, [x1]
   167b8:	ldr	x0, [x3, #112]
   167bc:	str	x9, [x0, #8]
   167c0:	str	x9, [x28, #32]
   167c4:	b	164c0 <GOMP_taskwait@@GOMP_2.0+0x6c8>
   167c8:	mov	x26, #0x0                   	// #0
   167cc:	b	165d8 <GOMP_taskwait@@GOMP_2.0+0x7e0>
   167d0:	mov	x2, x25
   167d4:	mov	x1, x28
   167d8:	mov	x0, x20
   167dc:	bl	13850 <GOMP_single_copy_end@@GOMP_1.0+0x548>
   167e0:	tst	w0, #0xff
   167e4:	b.eq	16530 <GOMP_taskwait@@GOMP_2.0+0x738>  // b.none
   167e8:	cbz	x23, 165a8 <GOMP_taskwait@@GOMP_2.0+0x7b0>
   167ec:	ldr	x0, [x23, #56]
   167f0:	cbnz	x0, 16b2c <GOMP_taskwait@@GOMP_2.0+0xd34>
   167f4:	mov	x0, x23
   167f8:	bl	88b0 <free@plt>
   167fc:	b	165a8 <GOMP_taskwait@@GOMP_2.0+0x7b0>
   16800:	cmp	x0, x8
   16804:	ldr	x27, [x20, #8]
   16808:	csel	x0, x0, xzr, ne  // ne = any
   1680c:	str	x0, [x28, #24]
   16810:	stp	xzr, xzr, [x20, #112]
   16814:	cbz	x27, 1661c <GOMP_taskwait@@GOMP_2.0+0x824>
   16818:	add	x23, x20, #0x8
   1681c:	ldr	x8, [x27, #8]
   16820:	mov	x0, x27
   16824:	ldp	x24, x27, [x27, #24]
   16828:	mov	x2, x8
   1682c:	cbz	x8, 16840 <GOMP_taskwait@@GOMP_2.0+0xa48>
   16830:	stur	xzr, [x2, #-112]
   16834:	ldr	x2, [x2]
   16838:	cmp	x8, x2
   1683c:	b.ne	16830 <GOMP_taskwait@@GOMP_2.0+0xa38>  // b.any
   16840:	bl	88b0 <free@plt>
   16844:	mov	x1, x24
   16848:	mov	x0, x23
   1684c:	bl	13428 <GOMP_single_copy_end@@GOMP_1.0+0x120>
   16850:	cbnz	x27, 1681c <GOMP_taskwait@@GOMP_2.0+0xa24>
   16854:	str	xzr, [x23]
   16858:	b	16638 <GOMP_taskwait@@GOMP_2.0+0x840>
   1685c:	ldr	w1, [sp, #208]
   16860:	tst	x1, #0x7fffffff
   16864:	b.eq	16b0c <GOMP_taskwait@@GOMP_2.0+0xd14>  // b.none
   16868:	sub	w2, w1, #0x1
   1686c:	ldr	x3, [sp, #128]
   16870:	ldaxr	w0, [x3]
   16874:	cmp	w0, w1
   16878:	b.ne	16884 <GOMP_taskwait@@GOMP_2.0+0xa8c>  // b.any
   1687c:	stxr	w4, w2, [x3]
   16880:	cmp	w4, #0x0
   16884:	mov	w1, w0
   16888:	b.ne	16860 <GOMP_taskwait@@GOMP_2.0+0xa68>  // b.any
   1688c:	ldr	x2, [sp, #104]
   16890:	mov	w0, #0x1                   	// #1
   16894:	ldaxr	w1, [x2]
   16898:	cbnz	w1, 168a4 <GOMP_taskwait@@GOMP_2.0+0xaac>
   1689c:	stxr	w3, w0, [x2]
   168a0:	cbnz	w3, 16894 <GOMP_taskwait@@GOMP_2.0+0xa9c>
   168a4:	cmp	w1, #0x0
   168a8:	mov	w22, #0x0                   	// #0
   168ac:	b.eq	166c4 <GOMP_taskwait@@GOMP_2.0+0x8cc>  // b.none
   168b0:	ldr	x0, [sp, #104]
   168b4:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   168b8:	b	166c4 <GOMP_taskwait@@GOMP_2.0+0x8cc>
   168bc:	ldr	x1, [sp, #128]
   168c0:	stp	x10, x3, [sp, #136]
   168c4:	ldr	w0, [x3, #88]
   168c8:	str	w4, [sp, #156]
   168cc:	stp	x2, x9, [sp, #160]
   168d0:	str	w0, [sp, #192]
   168d4:	mov	x0, x10
   168d8:	bl	2b798 <acc_set_cuda_stream@@OACC_2.0+0x790>
   168dc:	ldr	x1, [x0, #16]
   168e0:	ldr	w4, [sp, #156]
   168e4:	ldp	x10, x3, [sp, #136]
   168e8:	ldp	x2, x9, [sp, #160]
   168ec:	cbz	x1, 16a98 <GOMP_taskwait@@GOMP_2.0+0xca0>
   168f0:	ldp	x12, x11, [x3, #112]
   168f4:	str	x12, [x11]
   168f8:	ldr	x13, [x3, #112]
   168fc:	ldr	x12, [x1]
   16900:	str	x11, [x13, #8]
   16904:	stp	x12, x1, [x3, #112]
   16908:	str	x9, [x1]
   1690c:	ldr	x1, [x3, #112]
   16910:	str	x9, [x1, #8]
   16914:	str	x9, [x0, #16]
   16918:	b	164c0 <GOMP_taskwait@@GOMP_2.0+0x6c8>
   1691c:	cmp	x2, x0
   16920:	b.eq	16ad0 <GOMP_taskwait@@GOMP_2.0+0xcd8>  // b.none
   16924:	str	x0, [x8, #8]
   16928:	ldr	x0, [x23, #56]
   1692c:	stp	xzr, xzr, [x20, #128]
   16930:	cmp	x0, #0x1
   16934:	b.hi	1667c <GOMP_taskwait@@GOMP_2.0+0x884>  // b.pmore
   16938:	add	x0, x23, #0x38
   1693c:	stlr	xzr, [x0]
   16940:	b	16684 <GOMP_taskwait@@GOMP_2.0+0x88c>
   16944:	ldr	x0, [sp, #104]
   16948:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   1694c:	cbz	w22, 16548 <GOMP_taskwait@@GOMP_2.0+0x750>
   16950:	b	16718 <GOMP_taskwait@@GOMP_2.0+0x920>
   16954:	ldr	x1, [sp, #104]
   16958:	ldxr	w0, [x1]
   1695c:	stlxr	w2, wzr, [x1]
   16960:	cbnz	w2, 16958 <GOMP_taskwait@@GOMP_2.0+0xb60>
   16964:	tbz	w0, #31, 166fc <GOMP_taskwait@@GOMP_2.0+0x904>
   16968:	ldr	x0, [sp, #104]
   1696c:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   16970:	b	166fc <GOMP_taskwait@@GOMP_2.0+0x904>
   16974:	ldr	x4, [sp, #136]
   16978:	mov	x1, x21
   1697c:	mov	x3, #0x0                   	// #0
   16980:	mov	w2, #0x3e7                 	// #999
   16984:	mov	w0, #0x1                   	// #1
   16988:	bl	2b3a0 <acc_set_cuda_stream@@OACC_2.0+0x398>
   1698c:	mov	x20, x0
   16990:	cbnz	x0, 1651c <GOMP_taskwait@@GOMP_2.0+0x724>
   16994:	ldr	x0, [x21]
   16998:	ldr	x3, [x0, #8]
   1699c:	sub	x20, x3, #0x70
   169a0:	b	1651c <GOMP_taskwait@@GOMP_2.0+0x724>
   169a4:	bl	243b8 <GOMP_target_enter_exit_data@@GOMP_4.5+0x240>
   169a8:	tst	w0, #0xff
   169ac:	b.eq	16578 <GOMP_taskwait@@GOMP_2.0+0x780>  // b.none
   169b0:	ldr	x2, [sp, #104]
   169b4:	mov	w0, #0x1                   	// #1
   169b8:	str	x28, [x23, #80]
   169bc:	ldaxr	w1, [x2]
   169c0:	cbnz	w1, 169cc <GOMP_taskwait@@GOMP_2.0+0xbd4>
   169c4:	stxr	w3, w0, [x2]
   169c8:	cbnz	w3, 169bc <GOMP_taskwait@@GOMP_2.0+0xbc4>
   169cc:	cmp	w1, #0x0
   169d0:	b.ne	16b34 <GOMP_taskwait@@GOMP_2.0+0xd3c>  // b.any
   169d4:	ldr	x0, [x20, #192]
   169d8:	mov	w1, #0x4                   	// #4
   169dc:	ldr	w2, [x0, #44]
   169e0:	str	w1, [x20, #200]
   169e4:	cmp	w2, #0x5
   169e8:	b.eq	16b1c <GOMP_taskwait@@GOMP_2.0+0xd24>  // b.none
   169ec:	str	w1, [x0, #44]
   169f0:	mov	w22, #0x0                   	// #0
   169f4:	mov	x23, #0x0                   	// #0
   169f8:	b	166c8 <GOMP_taskwait@@GOMP_2.0+0x8d0>
   169fc:	ldr	w1, [x23, #52]
   16a00:	add	x0, x23, #0x34
   16a04:	strb	wzr, [x23, #48]
   16a08:	add	w2, w1, #0x1
   16a0c:	and	w2, w2, #0x7fffffff
   16a10:	ldxr	w7, [x0]
   16a14:	cmp	w7, w1
   16a18:	b.ne	16a24 <GOMP_taskwait@@GOMP_2.0+0xc2c>  // b.any
   16a1c:	stlxr	w3, w2, [x0]
   16a20:	cmp	w3, #0x0
   16a24:	mov	w1, w7
   16a28:	b.ne	16a08 <GOMP_taskwait@@GOMP_2.0+0xc10>  // b.any
   16a2c:	tbz	w7, #31, 16690 <GOMP_taskwait@@GOMP_2.0+0x898>
   16a30:	bl	1cef0 <omp_get_num_procs@@OMP_1.0+0x340>
   16a34:	b	16690 <GOMP_taskwait@@GOMP_2.0+0x898>
   16a38:	ldp	x2, x1, [x24, #16]
   16a3c:	add	x3, x25, #0x500
   16a40:	ldr	x19, [x24, #32]
   16a44:	mov	w0, #0x1                   	// #1
   16a48:	str	x3, [sp, #104]
   16a4c:	add	x20, x2, x1
   16a50:	add	x19, x19, x20
   16a54:	ldaxr	w1, [x3]
   16a58:	cbnz	w1, 16a64 <GOMP_taskwait@@GOMP_2.0+0xc6c>
   16a5c:	stxr	w2, w0, [x3]
   16a60:	cbnz	w2, 16a54 <GOMP_taskwait@@GOMP_2.0+0xc5c>
   16a64:	cmp	w1, #0x0
   16a68:	b.ne	16b6c <GOMP_taskwait@@GOMP_2.0+0xd74>  // b.any
   16a6c:	cbz	x22, 16954 <GOMP_taskwait@@GOMP_2.0+0xb5c>
   16a70:	mov	x23, x22
   16a74:	mov	x21, #0x5                   	// #5
   16a78:	mov	x22, x20
   16a7c:	b	16434 <GOMP_taskwait@@GOMP_2.0+0x63c>
   16a80:	mov	x1, x21
   16a84:	mov	w0, #0x1                   	// #1
   16a88:	bl	2b290 <acc_set_cuda_stream@@OACC_2.0+0x288>
   16a8c:	b	16610 <GOMP_taskwait@@GOMP_2.0+0x818>
   16a90:	bl	88b0 <free@plt>
   16a94:	b	16554 <GOMP_taskwait@@GOMP_2.0+0x75c>
   16a98:	ldr	x1, [x0, #8]
   16a9c:	cmp	x9, x1
   16aa0:	b.eq	16914 <GOMP_taskwait@@GOMP_2.0+0xb1c>  // b.none
   16aa4:	ldp	x11, x12, [x3, #112]
   16aa8:	str	x11, [x12]
   16aac:	str	x12, [x11, #8]
   16ab0:	ldr	x11, [x1, #8]
   16ab4:	stp	x1, x11, [x3, #112]
   16ab8:	str	x9, [x0, #8]
   16abc:	str	x9, [x11]
   16ac0:	ldr	x1, [x3, #112]
   16ac4:	str	x9, [x1, #8]
   16ac8:	str	x9, [x0, #16]
   16acc:	b	164c0 <GOMP_taskwait@@GOMP_2.0+0x6c8>
   16ad0:	mov	w7, #0x1                   	// #1
   16ad4:	str	xzr, [x8, #8]
   16ad8:	b	1666c <GOMP_taskwait@@GOMP_2.0+0x874>
   16adc:	mov	w0, #0x2                   	// #2
   16ae0:	add	x1, x23, #0x8
   16ae4:	bl	2b290 <acc_set_cuda_stream@@OACC_2.0+0x288>
   16ae8:	ldr	x0, [x23, #8]
   16aec:	cmp	x0, #0x0
   16af0:	cset	w7, eq  // eq = none
   16af4:	b	1666c <GOMP_taskwait@@GOMP_2.0+0x874>
   16af8:	ldr	x0, [sp, #104]
   16afc:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   16b00:	b	166e8 <GOMP_taskwait@@GOMP_2.0+0x8f0>
   16b04:	bl	88b0 <free@plt>
   16b08:	b	166f4 <GOMP_taskwait@@GOMP_2.0+0x8fc>
   16b0c:	ldr	x0, [sp, #144]
   16b10:	add	x0, x0, #0x10
   16b14:	bl	1cc28 <omp_get_num_procs@@OMP_1.0+0x78>
   16b18:	b	1688c <GOMP_taskwait@@GOMP_2.0+0xa94>
   16b1c:	mov	x1, x20
   16b20:	mov	x0, x25
   16b24:	bl	14920 <GOMP_single_copy_end@@GOMP_1.0+0x1618>
   16b28:	b	169f0 <GOMP_taskwait@@GOMP_2.0+0xbf8>
   16b2c:	bl	88b0 <free@plt>
   16b30:	b	167f4 <GOMP_taskwait@@GOMP_2.0+0x9fc>
   16b34:	ldr	x0, [sp, #104]
   16b38:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   16b3c:	b	169d4 <GOMP_taskwait@@GOMP_2.0+0xbdc>
   16b40:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   16b44:	add	x0, x0, #0x550
   16b48:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   16b4c:	ldr	x0, [sp, #104]
   16b50:	mov	x23, x19
   16b54:	mov	x21, #0x2                   	// #2
   16b58:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   16b5c:	b	16434 <GOMP_taskwait@@GOMP_2.0+0x63c>
   16b60:	ldr	x0, [sp, #104]
   16b64:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   16b68:	b	165a8 <GOMP_taskwait@@GOMP_2.0+0x7b0>
   16b6c:	ldr	x0, [sp, #104]
   16b70:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   16b74:	cbz	x22, 16954 <GOMP_taskwait@@GOMP_2.0+0xb5c>
   16b78:	mov	x23, x22
   16b7c:	mov	x21, #0x5                   	// #5
   16b80:	mov	x22, x20
   16b84:	b	16434 <GOMP_taskwait@@GOMP_2.0+0x63c>

0000000000016b88 <GOMP_task@@GOMP_2.0>:
   16b88:	stp	x29, x30, [sp, #-352]!
   16b8c:	adrp	x10, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   16b90:	mov	x9, x1
   16b94:	mov	x29, sp
   16b98:	stp	x21, x22, [sp, #32]
   16b9c:	and	w5, w5, #0xff
   16ba0:	adrp	x21, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   16ba4:	ldr	x21, [x21, #4016]
   16ba8:	stp	x23, x24, [sp, #48]
   16bac:	mrs	x24, tpidr_el0
   16bb0:	add	x11, x24, x21
   16bb4:	stp	x19, x20, [sp, #16]
   16bb8:	mov	w22, w6
   16bbc:	ldrb	w12, [x10, #1356]
   16bc0:	ldr	x20, [x11, #16]
   16bc4:	stp	x25, x26, [sp, #64]
   16bc8:	mov	x26, x2
   16bcc:	cmp	x20, #0x0
   16bd0:	stp	x27, x28, [sp, #80]
   16bd4:	mov	x28, x0
   16bd8:	cset	w0, ne  // ne = any
   16bdc:	mov	x27, x4
   16be0:	tst	w0, w12
   16be4:	b.ne	17154 <GOMP_task@@GOMP_2.0+0x5cc>  // b.any
   16be8:	ldr	x19, [x11, #80]
   16bec:	mov	w25, #0x0                   	// #0
   16bf0:	tbnz	w22, #4, 16d74 <GOMP_task@@GOMP_2.0+0x1ec>
   16bf4:	cmp	x20, #0x0
   16bf8:	eor	w5, w5, #0x1
   16bfc:	cset	w0, eq  // eq = none
   16c00:	and	w1, w22, #0x8
   16c04:	orr	w5, w0, w5
   16c08:	cbnz	w5, 16cf0 <GOMP_task@@GOMP_2.0+0x168>
   16c0c:	cbz	x19, 16ce0 <GOMP_task@@GOMP_2.0+0x158>
   16c10:	ldrb	w0, [x19, #205]
   16c14:	cbz	w0, 16ce0 <GOMP_task@@GOMP_2.0+0x158>
   16c18:	cbnz	w1, 16cf8 <GOMP_task@@GOMP_2.0+0x170>
   16c1c:	nop
   16c20:	ldp	x0, x1, [x19, #144]
   16c24:	stp	x0, x1, [x29, #288]
   16c28:	mov	x4, #0x1                   	// #1
   16c2c:	ldp	x0, x1, [x19, #160]
   16c30:	stp	x0, x1, [x29, #304]
   16c34:	movi	v0.4s, #0x0
   16c38:	ldr	x1, [x19, #176]
   16c3c:	str	x4, [x29, #344]
   16c40:	stp	x19, xzr, [x29, #144]
   16c44:	stur	q0, [x29, #168]
   16c48:	stur	q0, [x29, #184]
   16c4c:	stur	q0, [x29, #200]
   16c50:	ldrb	w0, [x19, #205]
   16c54:	str	xzr, [x29, #216]
   16c58:	str	x1, [x29, #320]
   16c5c:	cbnz	w0, 16c64 <GOMP_task@@GOMP_2.0+0xdc>
   16c60:	tbz	w22, #1, 17000 <GOMP_task@@GOMP_2.0+0x478>
   16c64:	str	w25, [x29, #232]
   16c68:	strb	w4, [x29, #349]
   16c6c:	ldrb	w0, [x19, #204]
   16c70:	ldr	x1, [x19, #40]
   16c74:	str	x1, [x29, #184]
   16c78:	strb	w0, [x29, #348]
   16c7c:	add	x0, x24, x21
   16c80:	add	x19, x29, #0x90
   16c84:	str	x19, [x0, #80]
   16c88:	cbnz	x26, 17008 <GOMP_task@@GOMP_2.0+0x480>
   16c8c:	mov	x0, x9
   16c90:	blr	x28
   16c94:	ldr	x0, [x29, #152]
   16c98:	cbnz	x0, 16da4 <GOMP_task@@GOMP_2.0+0x21c>
   16c9c:	ldr	x0, [x29, #168]
   16ca0:	cbnz	x0, 16da4 <GOMP_task@@GOMP_2.0+0x21c>
   16ca4:	add	x0, x24, x21
   16ca8:	ldr	x19, [x0, #80]
   16cac:	ldr	x0, [x19, #56]
   16cb0:	cbnz	x0, 17048 <GOMP_task@@GOMP_2.0+0x4c0>
   16cb4:	add	x21, x24, x21
   16cb8:	ldr	x0, [x19]
   16cbc:	str	x0, [x21, #80]
   16cc0:	mov	sp, x29
   16cc4:	ldp	x19, x20, [sp, #16]
   16cc8:	ldp	x21, x22, [sp, #32]
   16ccc:	ldp	x23, x24, [sp, #48]
   16cd0:	ldp	x25, x26, [sp, #64]
   16cd4:	ldp	x27, x28, [sp, #80]
   16cd8:	ldp	x29, x30, [sp], #352
   16cdc:	ret
   16ce0:	ldr	w2, [x20]
   16ce4:	ldr	w0, [x20, #1320]
   16ce8:	cmp	w0, w2, lsl #6
   16cec:	b.ls	16e10 <GOMP_task@@GOMP_2.0+0x288>  // b.plast
   16cf0:	cbz	w1, 16d18 <GOMP_task@@GOMP_2.0+0x190>
   16cf4:	cbz	x19, 16d1c <GOMP_task@@GOMP_2.0+0x194>
   16cf8:	ldr	x0, [x19, #56]
   16cfc:	cbz	x0, 16c20 <GOMP_task@@GOMP_2.0+0x98>
   16d00:	mov	x0, x7
   16d04:	stp	x3, x9, [x29, #128]
   16d08:	bl	163c0 <GOMP_taskwait@@GOMP_2.0+0x5c8>
   16d0c:	add	x0, x24, x21
   16d10:	ldp	x3, x9, [x29, #128]
   16d14:	ldr	x19, [x0, #80]
   16d18:	cbnz	x19, 16c20 <GOMP_task@@GOMP_2.0+0x98>
   16d1c:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   16d20:	add	x0, x0, #0x2b0
   16d24:	movi	v0.4s, #0x0
   16d28:	mov	w1, #0x1                   	// #1
   16d2c:	stp	xzr, xzr, [x29, #144]
   16d30:	ldp	x6, x7, [x0]
   16d34:	str	xzr, [x29, #216]
   16d38:	ldp	x4, x5, [x0, #16]
   16d3c:	stp	x6, x7, [x29, #288]
   16d40:	ldr	x0, [x0, #32]
   16d44:	stp	x4, x5, [x29, #304]
   16d48:	str	x0, [x29, #320]
   16d4c:	str	w1, [x29, #344]
   16d50:	strb	wzr, [x29, #348]
   16d54:	strh	wzr, [x29, #350]
   16d58:	stur	q0, [x29, #168]
   16d5c:	stur	q0, [x29, #184]
   16d60:	stur	q0, [x29, #200]
   16d64:	tbz	w22, #1, 16e04 <GOMP_task@@GOMP_2.0+0x27c>
   16d68:	str	w25, [x29, #232]
   16d6c:	strb	w1, [x29, #349]
   16d70:	b	16c7c <GOMP_task@@GOMP_2.0+0xf4>
   16d74:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   16d78:	eor	w5, w5, #0x1
   16d7c:	and	w1, w22, #0x8
   16d80:	ldr	w25, [x0, #1360]
   16d84:	ldr	w0, [x29, #352]
   16d88:	cmp	w25, w0
   16d8c:	csel	w25, w25, w0, le
   16d90:	cmp	x20, #0x0
   16d94:	cset	w0, eq  // eq = none
   16d98:	orr	w5, w0, w5
   16d9c:	cbnz	w5, 16cf0 <GOMP_task@@GOMP_2.0+0x168>
   16da0:	b	16c0c <GOMP_task@@GOMP_2.0+0x84>
   16da4:	add	x20, x20, #0x500
   16da8:	mov	w0, #0x1                   	// #1
   16dac:	ldaxr	w1, [x20]
   16db0:	cbnz	w1, 16dbc <GOMP_task@@GOMP_2.0+0x234>
   16db4:	stxr	w2, w0, [x20]
   16db8:	cbnz	w2, 16dac <GOMP_task@@GOMP_2.0+0x224>
   16dbc:	cmp	w1, #0x0
   16dc0:	b.ne	17464 <GOMP_task@@GOMP_2.0+0x8dc>  // b.any
   16dc4:	ldr	x22, [x29, #152]
   16dc8:	cbnz	x22, 17210 <GOMP_task@@GOMP_2.0+0x688>
   16dcc:	ldr	x1, [x29, #168]
   16dd0:	mov	x0, x1
   16dd4:	cbz	x1, 16de8 <GOMP_task@@GOMP_2.0+0x260>
   16dd8:	stur	xzr, [x0, #-112]
   16ddc:	ldr	x0, [x0]
   16de0:	cmp	x1, x0
   16de4:	b.ne	16dd8 <GOMP_task@@GOMP_2.0+0x250>  // b.any
   16de8:	ldxr	w0, [x20]
   16dec:	stlxr	w1, wzr, [x20]
   16df0:	cbnz	w1, 16de8 <GOMP_task@@GOMP_2.0+0x260>
   16df4:	tbz	w0, #31, 16ca4 <GOMP_task@@GOMP_2.0+0x11c>
   16df8:	mov	x0, x20
   16dfc:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   16e00:	b	16ca4 <GOMP_task@@GOMP_2.0+0x11c>
   16e04:	str	w25, [x29, #232]
   16e08:	strb	wzr, [x29, #349]
   16e0c:	b	16c7c <GOMP_task@@GOMP_2.0+0xf4>
   16e10:	mov	x5, #0x0                   	// #0
   16e14:	ldr	x11, [x19, #40]
   16e18:	cbz	w1, 16e2c <GOMP_task@@GOMP_2.0+0x2a4>
   16e1c:	ldr	x5, [x7]
   16e20:	cbz	x5, 17298 <GOMP_task@@GOMP_2.0+0x710>
   16e24:	add	x5, x5, x5, lsl #2
   16e28:	lsl	x5, x5, #3
   16e2c:	add	x1, x27, #0xcf
   16e30:	stp	x7, x9, [x29, #96]
   16e34:	add	x0, x3, x1
   16e38:	add	x0, x0, x5
   16e3c:	stp	x11, x1, [x29, #112]
   16e40:	neg	x27, x27
   16e44:	stp	x3, x5, [x29, #128]
   16e48:	bl	b2f8 <fprintf@plt+0x2838>
   16e4c:	add	x12, x24, x21
   16e50:	ldp	x11, x1, [x29, #112]
   16e54:	mov	x23, x0
   16e58:	ldp	x3, x5, [x29, #128]
   16e5c:	mov	x6, x0
   16e60:	ldr	x0, [x12, #80]
   16e64:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   16e68:	add	x2, x2, #0x2b0
   16e6c:	str	x19, [x6], #144
   16e70:	cmp	x0, #0x0
   16e74:	add	x0, x0, #0x90
   16e78:	csel	x2, x2, x0, eq  // eq = none
   16e7c:	add	x1, x5, x1
   16e80:	add	x1, x23, x1
   16e84:	and	x27, x1, x27
   16e88:	ldp	x0, x1, [x2]
   16e8c:	stp	x0, x1, [x23, #144]
   16e90:	ldp	x0, x1, [x2, #16]
   16e94:	stp	x0, x1, [x6, #16]
   16e98:	ldr	x0, [x2, #32]
   16e9c:	str	x0, [x6, #32]
   16ea0:	mov	x0, #0x1                   	// #1
   16ea4:	str	x0, [x23, #200]
   16ea8:	ldp	x7, x9, [x29, #96]
   16eac:	str	xzr, [x23, #8]
   16eb0:	ldrb	w0, [x19, #204]
   16eb4:	stp	xzr, xzr, [x23, #24]
   16eb8:	stp	x11, xzr, [x23, #40]
   16ebc:	stp	xzr, xzr, [x23, #56]
   16ec0:	str	xzr, [x23, #72]
   16ec4:	str	x23, [x12, #80]
   16ec8:	str	w25, [x23, #88]
   16ecc:	stp	x7, x11, [x29, #120]
   16ed0:	strb	w0, [x23, #204]
   16ed4:	cbz	x26, 17274 <GOMP_task@@GOMP_2.0+0x6ec>
   16ed8:	mov	x0, x27
   16edc:	mov	x1, x9
   16ee0:	blr	x26
   16ee4:	ldp	x7, x11, [x29, #120]
   16ee8:	mov	w0, #0x1                   	// #1
   16eec:	ldr	x5, [x29, #136]
   16ef0:	adrp	x10, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   16ef4:	strb	w0, [x23, #206]
   16ef8:	add	x21, x24, x21
   16efc:	add	x26, x20, #0x500
   16f00:	ubfx	x22, x22, #1, #1
   16f04:	mov	w1, #0x2                   	// #2
   16f08:	mov	w0, #0x1                   	// #1
   16f0c:	stp	x28, x27, [x23, #184]
   16f10:	str	x19, [x21, #80]
   16f14:	str	w1, [x23, #200]
   16f18:	strb	w22, [x23, #205]
   16f1c:	ldaxr	w1, [x26]
   16f20:	cbnz	w1, 16f2c <GOMP_task@@GOMP_2.0+0x3a4>
   16f24:	stxr	w2, w0, [x26]
   16f28:	cbnz	w2, 16f1c <GOMP_task@@GOMP_2.0+0x394>
   16f2c:	cmp	w1, #0x0
   16f30:	b.ne	17484 <GOMP_task@@GOMP_2.0+0x8fc>  // b.any
   16f34:	ldrb	w0, [x10, #1356]
   16f38:	cbnz	w0, 1719c <GOMP_task@@GOMP_2.0+0x614>
   16f3c:	cbz	x11, 16f4c <GOMP_task@@GOMP_2.0+0x3c4>
   16f40:	ldr	x0, [x11, #56]
   16f44:	add	x0, x0, #0x1
   16f48:	str	x0, [x11, #56]
   16f4c:	cbz	x5, 16f70 <GOMP_task@@GOMP_2.0+0x3e8>
   16f50:	mov	x0, x23
   16f54:	mov	x2, x7
   16f58:	mov	x1, x19
   16f5c:	str	x11, [x29, #136]
   16f60:	bl	144e0 <GOMP_single_copy_end@@GOMP_1.0+0x11d8>
   16f64:	ldr	x0, [x23, #80]
   16f68:	ldr	x11, [x29, #136]
   16f6c:	cbnz	x0, 171f4 <GOMP_task@@GOMP_2.0+0x66c>
   16f70:	ldr	x0, [x19, #8]
   16f74:	add	x24, x19, #0x8
   16f78:	add	x21, x23, #0x70
   16f7c:	cbnz	x0, 172dc <GOMP_task@@GOMP_2.0+0x754>
   16f80:	cmp	w25, #0x0
   16f84:	ldr	x0, [x19, #24]
   16f88:	b.gt	172a0 <GOMP_task@@GOMP_2.0+0x718>
   16f8c:	cbz	x0, 17254 <GOMP_task@@GOMP_2.0+0x6cc>
   16f90:	ldr	x1, [x0, #8]
   16f94:	stp	x0, x1, [x23, #112]
   16f98:	str	x21, [x19, #24]
   16f9c:	ldr	x0, [x23, #112]
   16fa0:	str	x21, [x0, #8]
   16fa4:	ldr	x0, [x23, #120]
   16fa8:	str	x21, [x0]
   16fac:	cbz	x11, 170c8 <GOMP_task@@GOMP_2.0+0x540>
   16fb0:	ldr	x0, [x11, #8]
   16fb4:	add	x24, x11, #0x8
   16fb8:	add	x21, x23, #0x80
   16fbc:	cbnz	x0, 17090 <GOMP_task@@GOMP_2.0+0x508>
   16fc0:	cmp	w25, #0x0
   16fc4:	ldr	x0, [x11, #24]
   16fc8:	b.gt	17050 <GOMP_task@@GOMP_2.0+0x4c8>
   16fcc:	cbz	x0, 1718c <GOMP_task@@GOMP_2.0+0x604>
   16fd0:	ldr	x1, [x0, #8]
   16fd4:	stp	x0, x1, [x23, #128]
   16fd8:	str	x21, [x11, #24]
   16fdc:	ldr	x0, [x23, #128]
   16fe0:	str	x21, [x0, #8]
   16fe4:	ldr	x0, [x23, #136]
   16fe8:	str	x21, [x0]
   16fec:	ldr	x0, [x20, #1288]
   16ff0:	add	x22, x20, #0x508
   16ff4:	cbnz	x0, 17358 <GOMP_task@@GOMP_2.0+0x7d0>
   16ff8:	ldr	x0, [x20, #1304]
   16ffc:	b	170e0 <GOMP_task@@GOMP_2.0+0x558>
   17000:	str	w25, [x29, #232]
   17004:	b	16c6c <GOMP_task@@GOMP_2.0+0xe4>
   17008:	add	x3, x3, x27
   1700c:	mov	x22, sp
   17010:	add	x3, x3, #0xe
   17014:	sub	x0, x27, #0x1
   17018:	and	x3, x3, #0xfffffffffffffff0
   1701c:	mov	x1, x9
   17020:	sub	sp, sp, x3
   17024:	neg	x27, x27
   17028:	add	x0, sp, x0
   1702c:	and	x27, x0, x27
   17030:	mov	x0, x27
   17034:	blr	x26
   17038:	mov	x0, x27
   1703c:	blr	x28
   17040:	mov	sp, x22
   17044:	b	16c94 <GOMP_task@@GOMP_2.0+0x10c>
   17048:	bl	88b0 <free@plt>
   1704c:	b	16cb4 <GOMP_task@@GOMP_2.0+0x12c>
   17050:	cbz	x0, 17424 <GOMP_task@@GOMP_2.0+0x89c>
   17054:	mov	x0, #0x28                  	// #40
   17058:	str	x11, [x29, #136]
   1705c:	bl	b2f8 <fprintf@plt+0x2838>
   17060:	mov	x1, x0
   17064:	ldr	x11, [x29, #136]
   17068:	mov	x0, x24
   1706c:	ldur	q0, [x11, #24]
   17070:	str	wzr, [x1]
   17074:	stp	xzr, xzr, [x1, #24]
   17078:	stur	q0, [x1, #8]
   1707c:	bl	2b498 <acc_set_cuda_stream@@OACC_2.0+0x490>
   17080:	ldr	x11, [x29, #136]
   17084:	ldr	x0, [x11, #8]
   17088:	str	xzr, [x24, #16]
   1708c:	cbz	x0, 17424 <GOMP_task@@GOMP_2.0+0x89c>
   17090:	add	x1, x29, #0x90
   17094:	mov	x0, x24
   17098:	str	w25, [x29, #144]
   1709c:	bl	2b798 <acc_set_cuda_stream@@OACC_2.0+0x790>
   170a0:	cbz	x0, 17424 <GOMP_task@@GOMP_2.0+0x89c>
   170a4:	ldr	x1, [x0, #8]
   170a8:	cbz	x1, 17454 <GOMP_task@@GOMP_2.0+0x8cc>
   170ac:	ldr	x2, [x1, #8]
   170b0:	stp	x1, x2, [x23, #128]
   170b4:	str	x21, [x0, #8]
   170b8:	ldr	x0, [x23, #128]
   170bc:	str	x21, [x0, #8]
   170c0:	ldr	x0, [x23, #136]
   170c4:	str	x21, [x0]
   170c8:	ldr	x0, [x20, #1288]
   170cc:	add	x22, x20, #0x508
   170d0:	cbnz	x0, 17358 <GOMP_task@@GOMP_2.0+0x7d0>
   170d4:	cmp	w25, #0x0
   170d8:	ldr	x0, [x22, #16]
   170dc:	b.gt	17320 <GOMP_task@@GOMP_2.0+0x798>
   170e0:	add	x1, x23, #0x60
   170e4:	cbz	x0, 17264 <GOMP_task@@GOMP_2.0+0x6dc>
   170e8:	ldr	x2, [x0, #8]
   170ec:	stp	x0, x2, [x23, #96]
   170f0:	str	x1, [x0, #8]
   170f4:	ldr	x0, [x23, #104]
   170f8:	str	x1, [x0]
   170fc:	ldr	w0, [x20, #132]
   17100:	movi	v1.2s, #0x1
   17104:	ldr	d0, [x20, #1320]
   17108:	ldrb	w19, [x19, #204]
   1710c:	orr	w0, w0, #0x1
   17110:	str	w0, [x20, #132]
   17114:	ldr	w0, [x20, #1328]
   17118:	add	v0.2s, v0.2s, v1.2s
   1711c:	eor	w19, w19, #0x1
   17120:	ldr	w21, [x20]
   17124:	add	w19, w19, w0
   17128:	str	d0, [x20, #1320]
   1712c:	ldxr	w0, [x26]
   17130:	stlxr	w1, wzr, [x26]
   17134:	cbnz	w1, 1712c <GOMP_task@@GOMP_2.0+0x5a4>
   17138:	tbnz	w0, #31, 17390 <GOMP_task@@GOMP_2.0+0x808>
   1713c:	cmp	w19, w21
   17140:	b.cs	16cc0 <GOMP_task@@GOMP_2.0+0x138>  // b.hs, b.nlast
   17144:	add	x0, x20, #0x80
   17148:	mov	w1, #0x1                   	// #1
   1714c:	bl	1d150 <omp_get_num_procs@@OMP_1.0+0x5a0>
   17150:	b	16cc0 <GOMP_task@@GOMP_2.0+0x138>
   17154:	ldr	w0, [x20, #132]
   17158:	tbnz	w0, #2, 16cc0 <GOMP_task@@GOMP_2.0+0x138>
   1715c:	ldr	x19, [x11, #80]
   17160:	ldr	x0, [x19, #40]
   17164:	cbz	x0, 16bec <GOMP_task@@GOMP_2.0+0x64>
   17168:	ldrb	w1, [x0, #49]
   1716c:	cbnz	w1, 16cc0 <GOMP_task@@GOMP_2.0+0x138>
   17170:	ldrb	w1, [x0, #50]
   17174:	cbz	w1, 16bec <GOMP_task@@GOMP_2.0+0x64>
   17178:	ldr	x0, [x0]
   1717c:	cbz	x0, 16bec <GOMP_task@@GOMP_2.0+0x64>
   17180:	ldrb	w0, [x0, #49]
   17184:	cbz	w0, 16bec <GOMP_task@@GOMP_2.0+0x64>
   17188:	b	16cc0 <GOMP_task@@GOMP_2.0+0x138>
   1718c:	dup	v0.2d, x21
   17190:	str	q0, [x23, #128]
   17194:	str	x21, [x11, #24]
   17198:	b	16fec <GOMP_task@@GOMP_2.0+0x464>
   1719c:	ldrb	w0, [x23, #206]
   171a0:	cbnz	w0, 16f3c <GOMP_task@@GOMP_2.0+0x3b4>
   171a4:	ldr	w0, [x20, #132]
   171a8:	tbnz	w0, #2, 171d0 <GOMP_task@@GOMP_2.0+0x648>
   171ac:	cbz	x11, 16f4c <GOMP_task@@GOMP_2.0+0x3c4>
   171b0:	ldrb	w0, [x11, #49]
   171b4:	cbnz	w0, 171d0 <GOMP_task@@GOMP_2.0+0x648>
   171b8:	ldrb	w0, [x11, #50]
   171bc:	cbz	w0, 16f40 <GOMP_task@@GOMP_2.0+0x3b8>
   171c0:	ldr	x0, [x11]
   171c4:	cbz	x0, 16f40 <GOMP_task@@GOMP_2.0+0x3b8>
   171c8:	ldrb	w0, [x0, #49]
   171cc:	cbz	w0, 16f40 <GOMP_task@@GOMP_2.0+0x3b8>
   171d0:	ldxr	w0, [x26]
   171d4:	stlxr	w1, wzr, [x26]
   171d8:	cbnz	w1, 171d0 <GOMP_task@@GOMP_2.0+0x648>
   171dc:	tbnz	w0, #31, 17478 <GOMP_task@@GOMP_2.0+0x8f0>
   171e0:	ldr	x0, [x23, #56]
   171e4:	cbnz	x0, 17470 <GOMP_task@@GOMP_2.0+0x8e8>
   171e8:	mov	x0, x23
   171ec:	bl	88b0 <free@plt>
   171f0:	b	16cc0 <GOMP_task@@GOMP_2.0+0x138>
   171f4:	ldxr	w0, [x26]
   171f8:	stlxr	w1, wzr, [x26]
   171fc:	cbnz	w1, 171f4 <GOMP_task@@GOMP_2.0+0x66c>
   17200:	tbz	w0, #31, 16cc0 <GOMP_task@@GOMP_2.0+0x138>
   17204:	mov	x0, x26
   17208:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   1720c:	b	16cc0 <GOMP_task@@GOMP_2.0+0x138>
   17210:	add	x19, x19, #0x8
   17214:	ldr	x3, [x22, #8]
   17218:	mov	x0, x22
   1721c:	ldp	x23, x22, [x22, #24]
   17220:	mov	x2, x3
   17224:	cbz	x3, 17238 <GOMP_task@@GOMP_2.0+0x6b0>
   17228:	stur	xzr, [x2, #-112]
   1722c:	ldr	x2, [x2]
   17230:	cmp	x3, x2
   17234:	b.ne	17228 <GOMP_task@@GOMP_2.0+0x6a0>  // b.any
   17238:	bl	88b0 <free@plt>
   1723c:	mov	x1, x23
   17240:	mov	x0, x19
   17244:	bl	13428 <GOMP_single_copy_end@@GOMP_1.0+0x120>
   17248:	cbnz	x22, 17214 <GOMP_task@@GOMP_2.0+0x68c>
   1724c:	str	xzr, [x29, #152]
   17250:	b	16de8 <GOMP_task@@GOMP_2.0+0x260>
   17254:	dup	v0.2d, x21
   17258:	str	q0, [x23, #112]
   1725c:	str	x21, [x19, #24]
   17260:	b	16fac <GOMP_task@@GOMP_2.0+0x424>
   17264:	dup	v0.2d, x1
   17268:	str	q0, [x23, #96]
   1726c:	str	x1, [x20, #1304]
   17270:	b	170fc <GOMP_task@@GOMP_2.0+0x574>
   17274:	mov	x2, x3
   17278:	mov	x1, x9
   1727c:	mov	x0, x27
   17280:	str	x5, [x29, #136]
   17284:	bl	8580 <memcpy@plt>
   17288:	adrp	x10, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1728c:	ldp	x7, x11, [x29, #120]
   17290:	ldr	x5, [x29, #136]
   17294:	b	16ef8 <GOMP_task@@GOMP_2.0+0x370>
   17298:	ldr	x5, [x7, #8]
   1729c:	b	16e24 <GOMP_task@@GOMP_2.0+0x29c>
   172a0:	cbz	x0, 1739c <GOMP_task@@GOMP_2.0+0x814>
   172a4:	mov	x0, #0x28                  	// #40
   172a8:	str	x11, [x29, #136]
   172ac:	bl	b2f8 <fprintf@plt+0x2838>
   172b0:	mov	x1, x0
   172b4:	ldur	q0, [x19, #24]
   172b8:	mov	x0, x24
   172bc:	str	wzr, [x1]
   172c0:	stp	xzr, xzr, [x1, #24]
   172c4:	stur	q0, [x1, #8]
   172c8:	bl	2b498 <acc_set_cuda_stream@@OACC_2.0+0x490>
   172cc:	ldr	x0, [x24]
   172d0:	str	xzr, [x24, #16]
   172d4:	ldr	x11, [x29, #136]
   172d8:	cbz	x0, 1739c <GOMP_task@@GOMP_2.0+0x814>
   172dc:	add	x1, x29, #0x90
   172e0:	mov	x0, x24
   172e4:	str	x11, [x29, #136]
   172e8:	str	w25, [x29, #144]
   172ec:	bl	2b798 <acc_set_cuda_stream@@OACC_2.0+0x790>
   172f0:	ldr	x11, [x29, #136]
   172f4:	cbz	x0, 1739c <GOMP_task@@GOMP_2.0+0x814>
   172f8:	ldr	x1, [x0, #8]
   172fc:	cbz	x1, 17414 <GOMP_task@@GOMP_2.0+0x88c>
   17300:	ldr	x2, [x1, #8]
   17304:	stp	x1, x2, [x23, #112]
   17308:	str	x21, [x0, #8]
   1730c:	ldr	x0, [x23, #112]
   17310:	str	x21, [x0, #8]
   17314:	ldr	x0, [x23, #120]
   17318:	str	x21, [x0]
   1731c:	b	16fac <GOMP_task@@GOMP_2.0+0x424>
   17320:	cbz	x0, 173d4 <GOMP_task@@GOMP_2.0+0x84c>
   17324:	mov	x0, #0x28                  	// #40
   17328:	bl	b2f8 <fprintf@plt+0x2838>
   1732c:	add	x2, x20, #0x600
   17330:	mov	x1, x0
   17334:	mov	x0, x22
   17338:	ldur	q0, [x2, #-232]
   1733c:	str	wzr, [x1]
   17340:	stp	xzr, xzr, [x1, #24]
   17344:	stur	q0, [x1, #8]
   17348:	bl	2b498 <acc_set_cuda_stream@@OACC_2.0+0x490>
   1734c:	ldr	x0, [x20, #1288]
   17350:	str	xzr, [x22, #16]
   17354:	cbz	x0, 173d4 <GOMP_task@@GOMP_2.0+0x84c>
   17358:	add	x1, x29, #0x90
   1735c:	mov	x0, x22
   17360:	str	w25, [x29, #144]
   17364:	bl	2b798 <acc_set_cuda_stream@@OACC_2.0+0x790>
   17368:	cbz	x0, 173d4 <GOMP_task@@GOMP_2.0+0x84c>
   1736c:	ldr	x1, [x0, #8]
   17370:	add	x2, x23, #0x60
   17374:	cbz	x1, 17404 <GOMP_task@@GOMP_2.0+0x87c>
   17378:	ldr	x0, [x1, #8]
   1737c:	stp	x1, x0, [x23, #96]
   17380:	str	x2, [x1, #8]
   17384:	ldr	x0, [x23, #104]
   17388:	str	x2, [x0]
   1738c:	b	170fc <GOMP_task@@GOMP_2.0+0x574>
   17390:	mov	x0, x26
   17394:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   17398:	b	1713c <GOMP_task@@GOMP_2.0+0x5b4>
   1739c:	mov	x0, #0x28                  	// #40
   173a0:	str	x11, [x29, #136]
   173a4:	bl	b2f8 <fprintf@plt+0x2838>
   173a8:	mov	x22, x0
   173ac:	movi	v0.4s, #0x0
   173b0:	mov	x0, x24
   173b4:	mov	x1, x22
   173b8:	str	w25, [x22]
   173bc:	stur	q0, [x22, #8]
   173c0:	stur	q0, [x22, #24]
   173c4:	bl	2b498 <acc_set_cuda_stream@@OACC_2.0+0x490>
   173c8:	mov	x0, x22
   173cc:	ldr	x11, [x29, #136]
   173d0:	b	172f8 <GOMP_task@@GOMP_2.0+0x770>
   173d4:	mov	x0, #0x28                  	// #40
   173d8:	bl	b2f8 <fprintf@plt+0x2838>
   173dc:	movi	v0.4s, #0x0
   173e0:	mov	x21, x0
   173e4:	mov	x1, x21
   173e8:	mov	x0, x22
   173ec:	str	w25, [x21]
   173f0:	stur	q0, [x21, #8]
   173f4:	stur	q0, [x21, #24]
   173f8:	bl	2b498 <acc_set_cuda_stream@@OACC_2.0+0x490>
   173fc:	mov	x0, x21
   17400:	b	1736c <GOMP_task@@GOMP_2.0+0x7e4>
   17404:	dup	v0.2d, x2
   17408:	str	q0, [x23, #96]
   1740c:	str	x2, [x0, #8]
   17410:	b	170fc <GOMP_task@@GOMP_2.0+0x574>
   17414:	dup	v0.2d, x21
   17418:	str	q0, [x23, #112]
   1741c:	str	x21, [x0, #8]
   17420:	b	16fac <GOMP_task@@GOMP_2.0+0x424>
   17424:	mov	x0, #0x28                  	// #40
   17428:	bl	b2f8 <fprintf@plt+0x2838>
   1742c:	movi	v0.4s, #0x0
   17430:	mov	x22, x0
   17434:	mov	x1, x22
   17438:	mov	x0, x24
   1743c:	str	w25, [x22]
   17440:	stur	q0, [x22, #8]
   17444:	stur	q0, [x22, #24]
   17448:	bl	2b498 <acc_set_cuda_stream@@OACC_2.0+0x490>
   1744c:	mov	x0, x22
   17450:	b	170a4 <GOMP_task@@GOMP_2.0+0x51c>
   17454:	dup	v0.2d, x21
   17458:	str	q0, [x23, #128]
   1745c:	str	x21, [x0, #8]
   17460:	b	170c8 <GOMP_task@@GOMP_2.0+0x540>
   17464:	mov	x0, x20
   17468:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   1746c:	b	16dc4 <GOMP_task@@GOMP_2.0+0x23c>
   17470:	bl	88b0 <free@plt>
   17474:	b	171e8 <GOMP_task@@GOMP_2.0+0x660>
   17478:	mov	x0, x26
   1747c:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   17480:	b	171e0 <GOMP_task@@GOMP_2.0+0x658>
   17484:	mov	x0, x26
   17488:	stp	x7, x11, [x29, #120]
   1748c:	str	x5, [x29, #136]
   17490:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   17494:	adrp	x10, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   17498:	ldp	x7, x11, [x29, #120]
   1749c:	ldr	x5, [x29, #136]
   174a0:	b	16f34 <GOMP_task@@GOMP_2.0+0x3ac>
   174a4:	nop

00000000000174a8 <GOMP_taskwait_depend@@GOMP_5.0>:
   174a8:	adrp	x1, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   174ac:	ldr	x1, [x1, #4016]
   174b0:	mrs	x2, tpidr_el0
   174b4:	adrp	x3, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   174b8:	add	x1, x2, x1
   174bc:	ldrb	w3, [x3, #1356]
   174c0:	ldr	x2, [x1, #16]
   174c4:	cmp	x2, #0x0
   174c8:	cset	w4, ne  // ne = any
   174cc:	tst	w4, w3
   174d0:	b.ne	174e8 <GOMP_taskwait_depend@@GOMP_5.0+0x40>  // b.any
   174d4:	ldr	x1, [x1, #80]
   174d8:	cbz	x1, 1751c <GOMP_taskwait_depend@@GOMP_5.0+0x74>
   174dc:	ldr	x1, [x1, #56]
   174e0:	cbz	x1, 1751c <GOMP_taskwait_depend@@GOMP_5.0+0x74>
   174e4:	b	163c0 <GOMP_taskwait@@GOMP_2.0+0x5c8>
   174e8:	ldr	w2, [x2, #132]
   174ec:	tbnz	w2, #2, 1751c <GOMP_taskwait_depend@@GOMP_5.0+0x74>
   174f0:	ldr	x1, [x1, #80]
   174f4:	ldr	x2, [x1, #40]
   174f8:	cbz	x2, 174dc <GOMP_taskwait_depend@@GOMP_5.0+0x34>
   174fc:	ldrb	w3, [x2, #49]
   17500:	cbnz	w3, 1751c <GOMP_taskwait_depend@@GOMP_5.0+0x74>
   17504:	ldrb	w3, [x2, #50]
   17508:	cbz	w3, 174dc <GOMP_taskwait_depend@@GOMP_5.0+0x34>
   1750c:	ldr	x2, [x2]
   17510:	cbz	x2, 174dc <GOMP_taskwait_depend@@GOMP_5.0+0x34>
   17514:	ldrb	w2, [x2, #49]
   17518:	cbz	w2, 174dc <GOMP_taskwait_depend@@GOMP_5.0+0x34>
   1751c:	ret

0000000000017520 <GOMP_taskyield@@GOMP_3.0>:
   17520:	ret
   17524:	nop

0000000000017528 <GOMP_taskgroup_start@@GOMP_4.0>:
   17528:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1752c:	ldr	x0, [x0, #4016]
   17530:	mrs	x1, tpidr_el0
   17534:	add	x0, x1, x0
   17538:	ldr	x1, [x0, #16]
   1753c:	cbz	x1, 17590 <GOMP_taskgroup_start@@GOMP_4.0+0x68>
   17540:	stp	x29, x30, [sp, #-32]!
   17544:	mov	x29, sp
   17548:	stp	x19, x20, [sp, #16]
   1754c:	ldr	x20, [x0, #80]
   17550:	mov	x0, #0x40                  	// #64
   17554:	ldr	x19, [x20, #40]
   17558:	bl	b2f8 <fprintf@plt+0x2838>
   1755c:	stp	x19, xzr, [x0]
   17560:	stp	xzr, xzr, [x0, #24]
   17564:	cbz	x19, 1756c <GOMP_taskgroup_start@@GOMP_4.0+0x44>
   17568:	ldr	x19, [x19, #40]
   1756c:	str	x19, [x0, #40]
   17570:	strh	wzr, [x0, #48]
   17574:	strb	wzr, [x0, #50]
   17578:	str	wzr, [x0, #52]
   1757c:	str	xzr, [x0, #56]
   17580:	str	x0, [x20, #40]
   17584:	ldp	x19, x20, [sp, #16]
   17588:	ldp	x29, x30, [sp], #32
   1758c:	ret
   17590:	ret
   17594:	nop

0000000000017598 <GOMP_taskgroup_end@@GOMP_4.0>:
   17598:	stp	x29, x30, [sp, #-160]!
   1759c:	mov	x29, sp
   175a0:	stp	x23, x24, [sp, #48]
   175a4:	mrs	x24, tpidr_el0
   175a8:	adrp	x23, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   175ac:	ldr	x23, [x23, #4016]
   175b0:	stp	x21, x22, [sp, #32]
   175b4:	add	x0, x24, x23
   175b8:	ldr	x21, [x0, #16]
   175bc:	cbz	x21, 17858 <GOMP_taskgroup_end@@GOMP_4.0+0x2c0>
   175c0:	ldr	x22, [x0, #80]
   175c4:	stp	x19, x20, [sp, #16]
   175c8:	ldr	x20, [x22, #40]
   175cc:	cbz	x20, 17bd4 <GOMP_taskgroup_end@@GOMP_4.0+0x63c>
   175d0:	add	x0, x20, #0x38
   175d4:	ldar	x0, [x0]
   175d8:	cbz	x0, 17844 <GOMP_taskgroup_end@@GOMP_4.0+0x2ac>
   175dc:	add	x19, x21, #0x500
   175e0:	mov	w0, #0x1                   	// #1
   175e4:	stp	x25, x26, [sp, #64]
   175e8:	stp	x27, x28, [sp, #80]
   175ec:	ldaxr	w1, [x19]
   175f0:	cbnz	w1, 175fc <GOMP_taskgroup_end@@GOMP_4.0+0x64>
   175f4:	stxr	w2, w0, [x19]
   175f8:	cbnz	w2, 175ec <GOMP_taskgroup_end@@GOMP_4.0+0x54>
   175fc:	cmp	w1, #0x0
   17600:	b.ne	17c2c <GOMP_taskgroup_end@@GOMP_4.0+0x694>  // b.any
   17604:	add	x0, sp, #0x9f
   17608:	str	x0, [sp, #128]
   1760c:	add	x0, x21, #0x508
   17610:	str	x0, [sp, #136]
   17614:	ldr	x0, [x20, #8]
   17618:	add	x25, x20, #0x8
   1761c:	mov	w28, #0x0                   	// #0
   17620:	mov	x27, #0x0                   	// #0
   17624:	cbnz	x0, 177e0 <GOMP_taskgroup_end@@GOMP_4.0+0x248>
   17628:	ldr	x3, [x25, #16]
   1762c:	cbnz	x3, 17898 <GOMP_taskgroup_end@@GOMP_4.0+0x300>
   17630:	ldr	x0, [x20, #56]
   17634:	cbz	x0, 1780c <GOMP_taskgroup_end@@GOMP_4.0+0x274>
   17638:	ldr	x0, [x22, #8]
   1763c:	cbnz	x0, 17b84 <GOMP_taskgroup_end@@GOMP_4.0+0x5ec>
   17640:	ldr	x3, [x22, #24]
   17644:	cbnz	x3, 178e0 <GOMP_taskgroup_end@@GOMP_4.0+0x348>
   17648:	mov	w0, #0x1                   	// #1
   1764c:	mov	x26, #0x0                   	// #0
   17650:	strb	w0, [x20, #48]
   17654:	ldxr	w0, [x19]
   17658:	stlxr	w1, wzr, [x19]
   1765c:	cbnz	w1, 17654 <GOMP_taskgroup_end@@GOMP_4.0+0xbc>
   17660:	tbnz	w0, #31, 17878 <GOMP_taskgroup_end@@GOMP_4.0+0x2e0>
   17664:	cbnz	w28, 17868 <GOMP_taskgroup_end@@GOMP_4.0+0x2d0>
   17668:	cbz	x27, 1767c <GOMP_taskgroup_end@@GOMP_4.0+0xe4>
   1766c:	ldr	x0, [x27, #56]
   17670:	cbnz	x0, 17a88 <GOMP_taskgroup_end@@GOMP_4.0+0x4f0>
   17674:	mov	x0, x27
   17678:	bl	88b0 <free@plt>
   1767c:	cbz	x26, 17958 <GOMP_taskgroup_end@@GOMP_4.0+0x3c0>
   17680:	ldp	x1, x0, [x26, #184]
   17684:	add	x27, x24, x23
   17688:	str	x26, [x27, #80]
   1768c:	cbz	x1, 179e0 <GOMP_taskgroup_end@@GOMP_4.0+0x448>
   17690:	blr	x1
   17694:	add	x0, x24, x23
   17698:	str	x22, [x0, #80]
   1769c:	mov	w0, #0x1                   	// #1
   176a0:	ldaxr	w1, [x19]
   176a4:	cbnz	w1, 176b0 <GOMP_taskgroup_end@@GOMP_4.0+0x118>
   176a8:	stxr	w2, w0, [x19]
   176ac:	cbnz	w2, 176a0 <GOMP_taskgroup_end@@GOMP_4.0+0x108>
   176b0:	cmp	w1, #0x0
   176b4:	mov	w28, #0x0                   	// #0
   176b8:	b.ne	17c38 <GOMP_taskgroup_end@@GOMP_4.0+0x6a0>  // b.any
   176bc:	ldr	x4, [x26, #72]
   176c0:	ldr	x27, [x26]
   176c4:	cbz	x4, 176f0 <GOMP_taskgroup_end@@GOMP_4.0+0x158>
   176c8:	cbz	x27, 178f0 <GOMP_taskgroup_end@@GOMP_4.0+0x358>
   176cc:	mov	x0, x26
   176d0:	bl	13678 <GOMP_single_copy_end@@GOMP_1.0+0x370>
   176d4:	ldr	x0, [x26, #48]
   176d8:	cbz	x0, 17a7c <GOMP_taskgroup_end@@GOMP_4.0+0x4e4>
   176dc:	mov	x1, x21
   176e0:	mov	x0, x26
   176e4:	bl	13be8 <GOMP_single_copy_end@@GOMP_1.0+0x8e0>
   176e8:	mov	x4, x0
   176ec:	ldr	x27, [x26]
   176f0:	cbz	x27, 17724 <GOMP_taskgroup_end@@GOMP_4.0+0x18c>
   176f4:	ldrb	w0, [x26, #207]
   176f8:	cbnz	w0, 17a90 <GOMP_taskgroup_end@@GOMP_4.0+0x4f8>
   176fc:	ldr	x0, [x27, #8]
   17700:	add	x2, x26, #0x70
   17704:	cbnz	x0, 17af0 <GOMP_taskgroup_end@@GOMP_4.0+0x558>
   17708:	ldp	x0, x1, [x26, #112]
   1770c:	ldr	x6, [x27, #24]
   17710:	cmp	x6, x2
   17714:	str	x0, [x1]
   17718:	str	x1, [x0, #8]
   1771c:	b.eq	17888 <GOMP_taskgroup_end@@GOMP_4.0+0x2f0>  // b.none
   17720:	stp	xzr, xzr, [x26, #112]
   17724:	ldr	x6, [x26, #8]
   17728:	cbnz	x6, 17908 <GOMP_taskgroup_end@@GOMP_4.0+0x370>
   1772c:	ldr	x0, [x26, #24]
   17730:	mov	x1, x0
   17734:	cbz	x0, 17748 <GOMP_taskgroup_end@@GOMP_4.0+0x1b0>
   17738:	stur	xzr, [x1, #-112]
   1773c:	ldr	x1, [x1]
   17740:	cmp	x0, x1
   17744:	b.ne	17738 <GOMP_taskgroup_end@@GOMP_4.0+0x1a0>  // b.any
   17748:	ldr	x27, [x26, #40]
   1774c:	cbz	x27, 177a0 <GOMP_taskgroup_end@@GOMP_4.0+0x208>
   17750:	ldr	x0, [x27, #8]
   17754:	add	x2, x26, #0x80
   17758:	cbnz	x0, 17b60 <GOMP_taskgroup_end@@GOMP_4.0+0x5c8>
   1775c:	ldp	x0, x1, [x26, #128]
   17760:	add	x7, x27, #0x10
   17764:	ldr	x6, [x7, #8]
   17768:	mov	w8, #0x0                   	// #0
   1776c:	cmp	x6, x2
   17770:	str	x0, [x1]
   17774:	str	x1, [x0, #8]
   17778:	b.eq	179b8 <GOMP_taskgroup_end@@GOMP_4.0+0x420>  // b.none
   1777c:	ldr	x0, [x27, #56]
   17780:	stp	xzr, xzr, [x26, #128]
   17784:	cmp	x0, #0x1
   17788:	b.ls	179d4 <GOMP_taskgroup_end@@GOMP_4.0+0x43c>  // b.plast
   1778c:	sub	x0, x0, #0x1
   17790:	str	x0, [x27, #56]
   17794:	cbz	w8, 177a0 <GOMP_taskgroup_end@@GOMP_4.0+0x208>
   17798:	ldrb	w0, [x27, #48]
   1779c:	cbnz	w0, 17a38 <GOMP_taskgroup_end@@GOMP_4.0+0x4a0>
   177a0:	ldr	w0, [x21, #1320]
   177a4:	cmp	x4, #0x1
   177a8:	sub	w0, w0, #0x1
   177ac:	str	w0, [x21, #1320]
   177b0:	b.ls	177d4 <GOMP_taskgroup_end@@GOMP_4.0+0x23c>  // b.plast
   177b4:	ldrb	w0, [x22, #204]
   177b8:	ldr	w5, [x21]
   177bc:	ldr	w1, [x21, #1328]
   177c0:	eor	w0, w0, #0x1
   177c4:	sub	w5, w5, w1
   177c8:	sub	w28, w5, w0
   177cc:	cmp	x4, w28, sxtw
   177d0:	csel	w28, w4, w28, cc  // cc = lo, ul, last
   177d4:	mov	x27, x26
   177d8:	ldr	x0, [x20, #8]
   177dc:	cbz	x0, 17628 <GOMP_taskgroup_end@@GOMP_4.0+0x90>
   177e0:	ldp	x4, x3, [sp, #128]
   177e4:	mov	x1, x25
   177e8:	mov	w2, #0x0                   	// #0
   177ec:	mov	w0, #0x2                   	// #2
   177f0:	bl	2b3a0 <acc_set_cuda_stream@@OACC_2.0+0x398>
   177f4:	mov	x26, x0
   177f8:	cbnz	x0, 178a4 <GOMP_taskgroup_end@@GOMP_4.0+0x30c>
   177fc:	ldr	x0, [x25]
   17800:	ldr	x3, [x0, #8]
   17804:	sub	x26, x3, #0x80
   17808:	b	178a4 <GOMP_taskgroup_end@@GOMP_4.0+0x30c>
   1780c:	ldxr	w0, [x19]
   17810:	stlxr	w1, wzr, [x19]
   17814:	cbnz	w1, 1780c <GOMP_taskgroup_end@@GOMP_4.0+0x274>
   17818:	tbz	w0, #31, 17828 <GOMP_taskgroup_end@@GOMP_4.0+0x290>
   1781c:	mov	x0, x19
   17820:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   17824:	nop
   17828:	cbz	x27, 17bbc <GOMP_taskgroup_end@@GOMP_4.0+0x624>
   1782c:	ldr	x0, [x27, #56]
   17830:	cbnz	x0, 17bf4 <GOMP_taskgroup_end@@GOMP_4.0+0x65c>
   17834:	mov	x0, x27
   17838:	bl	88b0 <free@plt>
   1783c:	ldp	x25, x26, [sp, #64]
   17840:	ldp	x27, x28, [sp, #80]
   17844:	ldr	x0, [x20]
   17848:	str	x0, [x22, #40]
   1784c:	mov	x0, x20
   17850:	bl	88b0 <free@plt>
   17854:	ldp	x19, x20, [sp, #16]
   17858:	ldp	x21, x22, [sp, #32]
   1785c:	ldp	x23, x24, [sp, #48]
   17860:	ldp	x29, x30, [sp], #160
   17864:	ret
   17868:	mov	w1, w28
   1786c:	add	x0, x21, #0x80
   17870:	bl	1d150 <omp_get_num_procs@@OMP_1.0+0x5a0>
   17874:	b	17668 <GOMP_taskgroup_end@@GOMP_4.0+0xd0>
   17878:	mov	x0, x19
   1787c:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   17880:	cbz	w28, 17668 <GOMP_taskgroup_end@@GOMP_4.0+0xd0>
   17884:	b	17868 <GOMP_taskgroup_end@@GOMP_4.0+0x2d0>
   17888:	cmp	x0, x6
   1788c:	b.eq	17bb0 <GOMP_taskgroup_end@@GOMP_4.0+0x618>  // b.none
   17890:	str	x0, [x27, #24]
   17894:	b	17720 <GOMP_taskgroup_end@@GOMP_4.0+0x188>
   17898:	sub	x26, x3, #0x80
   1789c:	mov	w0, #0x1                   	// #1
   178a0:	strb	w0, [sp, #159]
   178a4:	ldr	w0, [x26, #200]
   178a8:	cmp	w0, #0x2
   178ac:	b.ne	17648 <GOMP_taskgroup_end@@GOMP_4.0+0xb0>  // b.any
   178b0:	ldr	x1, [x26]
   178b4:	mov	x2, x21
   178b8:	mov	x0, x26
   178bc:	bl	13850 <GOMP_single_copy_end@@GOMP_1.0+0x548>
   178c0:	tst	w0, #0xff
   178c4:	b.eq	17654 <GOMP_taskgroup_end@@GOMP_4.0+0xbc>  // b.none
   178c8:	cbz	x27, 176bc <GOMP_taskgroup_end@@GOMP_4.0+0x124>
   178cc:	ldr	x0, [x27, #56]
   178d0:	cbnz	x0, 17c18 <GOMP_taskgroup_end@@GOMP_4.0+0x680>
   178d4:	mov	x0, x27
   178d8:	bl	88b0 <free@plt>
   178dc:	b	176bc <GOMP_taskgroup_end@@GOMP_4.0+0x124>
   178e0:	mov	w0, #0x1                   	// #1
   178e4:	sub	x26, x3, #0x70
   178e8:	strb	w0, [sp, #159]
   178ec:	b	178a4 <GOMP_taskgroup_end@@GOMP_4.0+0x30c>
   178f0:	ldr	x0, [x26, #48]
   178f4:	mov	x4, #0x0                   	// #0
   178f8:	cbnz	x0, 176dc <GOMP_taskgroup_end@@GOMP_4.0+0x144>
   178fc:	ldr	x6, [x26, #8]
   17900:	cbz	x6, 1772c <GOMP_taskgroup_end@@GOMP_4.0+0x194>
   17904:	nop
   17908:	add	x27, x26, #0x8
   1790c:	ldr	x7, [x6, #8]
   17910:	mov	x0, x6
   17914:	ldp	x1, x6, [x6, #24]
   17918:	mov	x2, x7
   1791c:	cbz	x7, 17930 <GOMP_taskgroup_end@@GOMP_4.0+0x398>
   17920:	stur	xzr, [x2, #-112]
   17924:	ldr	x2, [x2]
   17928:	cmp	x7, x2
   1792c:	b.ne	17920 <GOMP_taskgroup_end@@GOMP_4.0+0x388>  // b.any
   17930:	stp	x4, x6, [sp, #104]
   17934:	str	x1, [sp, #120]
   17938:	bl	88b0 <free@plt>
   1793c:	ldr	x1, [sp, #120]
   17940:	mov	x0, x27
   17944:	bl	13428 <GOMP_single_copy_end@@GOMP_1.0+0x120>
   17948:	ldp	x4, x6, [sp, #104]
   1794c:	cbnz	x6, 1790c <GOMP_taskgroup_end@@GOMP_4.0+0x374>
   17950:	str	xzr, [x27]
   17954:	b	17748 <GOMP_taskgroup_end@@GOMP_4.0+0x1b0>
   17958:	ldr	w1, [x20, #52]
   1795c:	add	x0, x20, #0x34
   17960:	tst	x1, #0x7fffffff
   17964:	b.eq	17bec <GOMP_taskgroup_end@@GOMP_4.0+0x654>  // b.none
   17968:	sub	w4, w1, #0x1
   1796c:	ldaxr	w2, [x0]
   17970:	cmp	w2, w1
   17974:	b.ne	17980 <GOMP_taskgroup_end@@GOMP_4.0+0x3e8>  // b.any
   17978:	stxr	w3, w4, [x0]
   1797c:	cmp	w3, #0x0
   17980:	mov	w1, w2
   17984:	b.ne	17960 <GOMP_taskgroup_end@@GOMP_4.0+0x3c8>  // b.any
   17988:	mov	w0, #0x1                   	// #1
   1798c:	ldaxr	w1, [x19]
   17990:	cbnz	w1, 1799c <GOMP_taskgroup_end@@GOMP_4.0+0x404>
   17994:	stxr	w2, w0, [x19]
   17998:	cbnz	w2, 1798c <GOMP_taskgroup_end@@GOMP_4.0+0x3f4>
   1799c:	cmp	w1, #0x0
   179a0:	mov	w28, #0x0                   	// #0
   179a4:	b.eq	177d4 <GOMP_taskgroup_end@@GOMP_4.0+0x23c>  // b.none
   179a8:	mov	x0, x19
   179ac:	mov	x27, x26
   179b0:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   179b4:	b	177d8 <GOMP_taskgroup_end@@GOMP_4.0+0x240>
   179b8:	cmp	x0, x6
   179bc:	b.eq	17bc8 <GOMP_taskgroup_end@@GOMP_4.0+0x630>  // b.none
   179c0:	str	x0, [x7, #8]
   179c4:	ldr	x0, [x27, #56]
   179c8:	stp	xzr, xzr, [x26, #128]
   179cc:	cmp	x0, #0x1
   179d0:	b.hi	1778c <GOMP_taskgroup_end@@GOMP_4.0+0x1f4>  // b.pmore
   179d4:	add	x0, x27, #0x38
   179d8:	stlr	xzr, [x0]
   179dc:	b	17794 <GOMP_taskgroup_end@@GOMP_4.0+0x1fc>
   179e0:	bl	243b8 <GOMP_target_enter_exit_data@@GOMP_4.5+0x240>
   179e4:	tst	w0, #0xff
   179e8:	b.eq	17694 <GOMP_taskgroup_end@@GOMP_4.0+0xfc>  // b.none
   179ec:	mov	w0, #0x1                   	// #1
   179f0:	str	x22, [x27, #80]
   179f4:	ldaxr	w1, [x19]
   179f8:	cbnz	w1, 17a04 <GOMP_taskgroup_end@@GOMP_4.0+0x46c>
   179fc:	stxr	w2, w0, [x19]
   17a00:	cbnz	w2, 179f4 <GOMP_taskgroup_end@@GOMP_4.0+0x45c>
   17a04:	cmp	w1, #0x0
   17a08:	b.ne	17c20 <GOMP_taskgroup_end@@GOMP_4.0+0x688>  // b.any
   17a0c:	ldr	x0, [x26, #192]
   17a10:	mov	w1, #0x4                   	// #4
   17a14:	ldr	w2, [x0, #44]
   17a18:	str	w1, [x26, #200]
   17a1c:	cmp	w2, #0x5
   17a20:	b.eq	17bfc <GOMP_taskgroup_end@@GOMP_4.0+0x664>  // b.none
   17a24:	mov	x26, #0x0                   	// #0
   17a28:	mov	w28, #0x0                   	// #0
   17a2c:	mov	x27, x26
   17a30:	str	w1, [x0, #44]
   17a34:	b	177d8 <GOMP_taskgroup_end@@GOMP_4.0+0x240>
   17a38:	ldr	w1, [x27, #52]
   17a3c:	add	x0, x27, #0x34
   17a40:	strb	wzr, [x27, #48]
   17a44:	add	w2, w1, #0x1
   17a48:	and	w2, w2, #0x7fffffff
   17a4c:	ldxr	w6, [x0]
   17a50:	cmp	w6, w1
   17a54:	b.ne	17a60 <GOMP_taskgroup_end@@GOMP_4.0+0x4c8>  // b.any
   17a58:	stlxr	w3, w2, [x0]
   17a5c:	cmp	w3, #0x0
   17a60:	mov	w1, w6
   17a64:	b.ne	17a44 <GOMP_taskgroup_end@@GOMP_4.0+0x4ac>  // b.any
   17a68:	tbz	w6, #31, 177a0 <GOMP_taskgroup_end@@GOMP_4.0+0x208>
   17a6c:	str	x4, [sp, #104]
   17a70:	bl	1cef0 <omp_get_num_procs@@OMP_1.0+0x340>
   17a74:	ldr	x4, [sp, #104]
   17a78:	b	177a0 <GOMP_taskgroup_end@@GOMP_4.0+0x208>
   17a7c:	mov	x4, #0x0                   	// #0
   17a80:	ldr	x27, [x26]
   17a84:	b	176f0 <GOMP_taskgroup_end@@GOMP_4.0+0x158>
   17a88:	bl	88b0 <free@plt>
   17a8c:	b	17674 <GOMP_taskgroup_end@@GOMP_4.0+0xdc>
   17a90:	ldr	x1, [x27, #64]
   17a94:	ldr	x0, [x1, #8]
   17a98:	sub	x0, x0, #0x1
   17a9c:	str	x0, [x1, #8]
   17aa0:	cbnz	x0, 176fc <GOMP_taskgroup_end@@GOMP_4.0+0x164>
   17aa4:	ldrb	w0, [x1, #1]
   17aa8:	cbz	w0, 176fc <GOMP_taskgroup_end@@GOMP_4.0+0x164>
   17aac:	ldr	w2, [x1, #16]
   17ab0:	add	x0, x1, #0x10
   17ab4:	strb	wzr, [x1, #1]
   17ab8:	add	w1, w2, #0x1
   17abc:	and	w1, w1, #0x7fffffff
   17ac0:	ldxr	w6, [x0]
   17ac4:	cmp	w6, w2
   17ac8:	b.ne	17ad4 <GOMP_taskgroup_end@@GOMP_4.0+0x53c>  // b.any
   17acc:	stlxr	w3, w1, [x0]
   17ad0:	cmp	w3, #0x0
   17ad4:	mov	w2, w6
   17ad8:	b.ne	17ab8 <GOMP_taskgroup_end@@GOMP_4.0+0x520>  // b.any
   17adc:	tbz	w6, #31, 176fc <GOMP_taskgroup_end@@GOMP_4.0+0x164>
   17ae0:	str	x4, [sp, #104]
   17ae4:	bl	1cef0 <omp_get_num_procs@@OMP_1.0+0x340>
   17ae8:	ldr	x4, [sp, #104]
   17aec:	b	176fc <GOMP_taskgroup_end@@GOMP_4.0+0x164>
   17af0:	add	x1, x27, #0x8
   17af4:	mov	w0, #0x1                   	// #1
   17af8:	stp	x1, x4, [sp, #104]
   17afc:	bl	2b290 <acc_set_cuda_stream@@OACC_2.0+0x288>
   17b00:	ldr	x0, [x27, #8]
   17b04:	ldp	x1, x4, [sp, #104]
   17b08:	cbnz	x0, 17720 <GOMP_taskgroup_end@@GOMP_4.0+0x188>
   17b0c:	stlr	xzr, [x1]
   17b10:	ldr	x0, [x27, #64]
   17b14:	cbz	x0, 17720 <GOMP_taskgroup_end@@GOMP_4.0+0x188>
   17b18:	ldrb	w1, [x0]
   17b1c:	cbz	w1, 17720 <GOMP_taskgroup_end@@GOMP_4.0+0x188>
   17b20:	ldr	w1, [x0, #16]
   17b24:	strb	wzr, [x0], #16
   17b28:	add	w2, w1, #0x1
   17b2c:	and	w2, w2, #0x7fffffff
   17b30:	ldxr	w6, [x0]
   17b34:	cmp	w6, w1
   17b38:	b.ne	17b44 <GOMP_taskgroup_end@@GOMP_4.0+0x5ac>  // b.any
   17b3c:	stlxr	w3, w2, [x0]
   17b40:	cmp	w3, #0x0
   17b44:	mov	w1, w6
   17b48:	b.ne	17b28 <GOMP_taskgroup_end@@GOMP_4.0+0x590>  // b.any
   17b4c:	tbz	w6, #31, 17720 <GOMP_taskgroup_end@@GOMP_4.0+0x188>
   17b50:	str	x4, [sp, #104]
   17b54:	bl	1cef0 <omp_get_num_procs@@OMP_1.0+0x340>
   17b58:	ldr	x4, [sp, #104]
   17b5c:	b	17720 <GOMP_taskgroup_end@@GOMP_4.0+0x188>
   17b60:	mov	w0, #0x2                   	// #2
   17b64:	add	x1, x27, #0x8
   17b68:	str	x4, [sp, #104]
   17b6c:	bl	2b290 <acc_set_cuda_stream@@OACC_2.0+0x288>
   17b70:	ldr	x0, [x27, #8]
   17b74:	ldr	x4, [sp, #104]
   17b78:	cmp	x0, #0x0
   17b7c:	cset	w8, eq  // eq = none
   17b80:	b	1777c <GOMP_taskgroup_end@@GOMP_4.0+0x1e4>
   17b84:	ldp	x4, x3, [sp, #128]
   17b88:	add	x1, x22, #0x8
   17b8c:	mov	w2, #0x0                   	// #0
   17b90:	mov	w0, #0x1                   	// #1
   17b94:	bl	2b3a0 <acc_set_cuda_stream@@OACC_2.0+0x398>
   17b98:	mov	x26, x0
   17b9c:	cbnz	x0, 178a4 <GOMP_taskgroup_end@@GOMP_4.0+0x30c>
   17ba0:	ldr	x0, [x22, #8]
   17ba4:	ldr	x3, [x0, #8]
   17ba8:	sub	x26, x3, #0x70
   17bac:	b	178a4 <GOMP_taskgroup_end@@GOMP_4.0+0x30c>
   17bb0:	add	x0, x27, #0x18
   17bb4:	stlr	xzr, [x0]
   17bb8:	b	17b10 <GOMP_taskgroup_end@@GOMP_4.0+0x578>
   17bbc:	ldp	x25, x26, [sp, #64]
   17bc0:	ldp	x27, x28, [sp, #80]
   17bc4:	b	17844 <GOMP_taskgroup_end@@GOMP_4.0+0x2ac>
   17bc8:	mov	w8, #0x1                   	// #1
   17bcc:	str	xzr, [x7, #8]
   17bd0:	b	1777c <GOMP_taskgroup_end@@GOMP_4.0+0x1e4>
   17bd4:	ldr	w0, [x0, #44]
   17bd8:	cbnz	w0, 175d0 <GOMP_taskgroup_end@@GOMP_4.0+0x38>
   17bdc:	add	x0, x21, #0x80
   17be0:	bl	1d3e0 <omp_get_num_procs@@OMP_1.0+0x830>
   17be4:	ldp	x19, x20, [sp, #16]
   17be8:	b	17858 <GOMP_taskgroup_end@@GOMP_4.0+0x2c0>
   17bec:	bl	1cc28 <omp_get_num_procs@@OMP_1.0+0x78>
   17bf0:	b	17988 <GOMP_taskgroup_end@@GOMP_4.0+0x3f0>
   17bf4:	bl	88b0 <free@plt>
   17bf8:	b	17834 <GOMP_taskgroup_end@@GOMP_4.0+0x29c>
   17bfc:	mov	x1, x26
   17c00:	mov	x0, x21
   17c04:	mov	x26, #0x0                   	// #0
   17c08:	mov	w28, #0x0                   	// #0
   17c0c:	mov	x27, x26
   17c10:	bl	14920 <GOMP_single_copy_end@@GOMP_1.0+0x1618>
   17c14:	b	177d8 <GOMP_taskgroup_end@@GOMP_4.0+0x240>
   17c18:	bl	88b0 <free@plt>
   17c1c:	b	178d4 <GOMP_taskgroup_end@@GOMP_4.0+0x33c>
   17c20:	mov	x0, x19
   17c24:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   17c28:	b	17a0c <GOMP_taskgroup_end@@GOMP_4.0+0x474>
   17c2c:	mov	x0, x19
   17c30:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   17c34:	b	17604 <GOMP_taskgroup_end@@GOMP_4.0+0x6c>
   17c38:	mov	x0, x19
   17c3c:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   17c40:	b	176bc <GOMP_taskgroup_end@@GOMP_4.0+0x124>
   17c44:	nop

0000000000017c48 <GOMP_taskgroup_reduction_register@@GOMP_5.0>:
   17c48:	stp	x29, x30, [sp, #-112]!
   17c4c:	mov	x29, sp
   17c50:	stp	x21, x22, [sp, #32]
   17c54:	adrp	x21, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   17c58:	ldr	x21, [x21, #4016]
   17c5c:	stp	x19, x20, [sp, #16]
   17c60:	mrs	x20, tpidr_el0
   17c64:	add	x19, x20, x21
   17c68:	stp	x23, x24, [sp, #48]
   17c6c:	mov	x24, x0
   17c70:	ldr	x0, [x19, #16]
   17c74:	stp	x25, x26, [sp, #64]
   17c78:	str	x27, [sp, #80]
   17c7c:	cbz	x0, 17e70 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x228>
   17c80:	ldr	x25, [x19, #80]
   17c84:	mov	x19, x24
   17c88:	ldr	x1, [x25, #40]
   17c8c:	mov	x26, #0x0                   	// #0
   17c90:	ldr	w23, [x0]
   17c94:	ldr	x21, [x1, #40]
   17c98:	b	17ca0 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x58>
   17c9c:	mov	x19, x0
   17ca0:	ldp	x20, x0, [x19, #8]
   17ca4:	mul	x20, x23, x20
   17ca8:	mov	x1, x20
   17cac:	bl	b3a8 <fprintf@plt+0x28e8>
   17cb0:	mov	x2, x20
   17cb4:	mov	x22, x0
   17cb8:	mov	w1, #0x0                   	// #0
   17cbc:	bl	8770 <memset@plt>
   17cc0:	ldr	x0, [x19, #32]
   17cc4:	add	x20, x20, x22
   17cc8:	ldr	x1, [x19]
   17ccc:	str	x22, [x19, #16]
   17cd0:	stp	xzr, x20, [x19, #40]
   17cd4:	add	x26, x26, x1
   17cd8:	cbnz	x0, 17c9c <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x54>
   17cdc:	str	x21, [x19, #32]
   17ce0:	mov	x23, x21
   17ce4:	cbz	x21, 17cf4 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0xac>
   17ce8:	ldr	x0, [x21, #40]
   17cec:	mov	x21, #0x0                   	// #0
   17cf0:	cbnz	x0, 17e5c <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x214>
   17cf4:	adrp	x4, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   17cf8:	mov	w19, #0x1e                  	// #30
   17cfc:	add	x3, x4, #0x5e0
   17d00:	mov	w0, #0x0                   	// #0
   17d04:	b	17d24 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0xdc>
   17d08:	sub	w1, w19, w0
   17d0c:	add	w1, w0, w1, lsr #1
   17d10:	ubfiz	x2, x1, #4, #32
   17d14:	ldr	w2, [x3, x2]
   17d18:	cmp	x26, x2
   17d1c:	b.hi	17e54 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x20c>  // b.pmore
   17d20:	mov	w19, w1
   17d24:	cmp	w19, w0
   17d28:	b.ne	17d08 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0xc0>  // b.any
   17d2c:	add	x4, x4, #0x5e0
   17d30:	ubfiz	x0, x19, #4, #32
   17d34:	ldr	w27, [x4, x0]
   17d38:	cmp	x26, x27
   17d3c:	b.hi	17ec4 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x27c>  // b.pmore
   17d40:	add	x20, x27, #0x4
   17d44:	lsl	x20, x20, #3
   17d48:	mov	x0, x20
   17d4c:	bl	b2f8 <fprintf@plt+0x2838>
   17d50:	mov	x22, x0
   17d54:	sub	x2, x20, #0x20
   17d58:	add	x0, x0, #0x20
   17d5c:	mov	w1, #0x0                   	// #0
   17d60:	stp	x27, xzr, [x22]
   17d64:	str	xzr, [x22, #16]
   17d68:	str	w19, [x22, #24]
   17d6c:	bl	8770 <memset@plt>
   17d70:	str	x22, [sp, #104]
   17d74:	cbz	x21, 17dcc <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x184>
   17d78:	mov	x19, x21
   17d7c:	ldp	x1, x2, [x21, #8]
   17d80:	ldr	x0, [x19], #32
   17d84:	add	x21, x19, x0, lsl #3
   17d88:	sub	x0, x1, x2
   17d8c:	str	x0, [x22, #8]
   17d90:	b	17da0 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x158>
   17d94:	add	x19, x19, #0x8
   17d98:	cmp	x21, x19
   17d9c:	b.ls	17dcc <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x184>  // b.plast
   17da0:	ldr	x20, [x19]
   17da4:	cmp	x20, #0x1
   17da8:	b.ls	17d94 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x14c>  // b.plast
   17dac:	ldr	x1, [x20]
   17db0:	mov	x0, x22
   17db4:	add	x19, x19, #0x8
   17db8:	eor	x1, x1, x1, lsr #32
   17dbc:	bl	13490 <GOMP_single_copy_end@@GOMP_1.0+0x188>
   17dc0:	str	x20, [x0]
   17dc4:	cmp	x21, x19
   17dc8:	b.hi	17da0 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x158>  // b.pmore
   17dcc:	mov	x22, x24
   17dd0:	add	x26, sp, #0x68
   17dd4:	nop
   17dd8:	ldr	x0, [x22]
   17ddc:	add	x20, x22, #0x38
   17de0:	mov	x21, #0x0                   	// #0
   17de4:	cbz	x0, 17e14 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x1cc>
   17de8:	str	x22, [x20, #16]
   17dec:	mov	x19, x20
   17df0:	mov	x0, x26
   17df4:	add	x21, x21, #0x1
   17df8:	mov	x1, x19
   17dfc:	bl	141b8 <GOMP_single_copy_end@@GOMP_1.0+0xeb0>
   17e00:	ldr	x1, [x22]
   17e04:	str	x19, [x0]
   17e08:	add	x20, x20, #0x18
   17e0c:	cmp	x21, x1
   17e10:	b.cc	17de8 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x1a0>  // b.lo, b.ul, b.last
   17e14:	ldr	x0, [x22, #32]
   17e18:	cmp	x23, x0
   17e1c:	b.eq	17e28 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x1e0>  // b.none
   17e20:	mov	x22, x0
   17e24:	b	17dd8 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x190>
   17e28:	ldr	x0, [x25, #40]
   17e2c:	ldr	x1, [sp, #104]
   17e30:	ldp	x19, x20, [sp, #16]
   17e34:	ldp	x25, x26, [sp, #64]
   17e38:	ldr	x27, [sp, #80]
   17e3c:	str	x1, [x22, #40]
   17e40:	ldp	x21, x22, [sp, #32]
   17e44:	str	x24, [x0, #40]
   17e48:	ldp	x23, x24, [sp, #48]
   17e4c:	ldp	x29, x30, [sp], #112
   17e50:	ret
   17e54:	add	w0, w1, #0x1
   17e58:	b	17d24 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0xdc>
   17e5c:	mov	x21, x0
   17e60:	ldp	x0, x1, [x0, #8]
   17e64:	sub	x0, x0, x1
   17e68:	add	x26, x26, x0
   17e6c:	b	17cf4 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0xac>
   17e70:	bl	13570 <GOMP_single_copy_end@@GOMP_1.0+0x268>
   17e74:	ldr	x0, [x19, #16]
   17e78:	ldr	x25, [x19, #80]
   17e7c:	cbz	x0, 17c84 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x3c>
   17e80:	ldr	x19, [x25, #40]
   17e84:	mov	x0, #0x40                  	// #64
   17e88:	bl	b2f8 <fprintf@plt+0x2838>
   17e8c:	stp	x19, xzr, [x0]
   17e90:	stp	xzr, xzr, [x0, #24]
   17e94:	cbz	x19, 17e9c <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x254>
   17e98:	ldr	x19, [x19, #40]
   17e9c:	add	x20, x20, x21
   17ea0:	str	x19, [x0, #40]
   17ea4:	strh	wzr, [x0, #48]
   17ea8:	strb	wzr, [x0, #50]
   17eac:	str	wzr, [x0, #52]
   17eb0:	str	xzr, [x0, #56]
   17eb4:	str	x0, [x25, #40]
   17eb8:	ldr	x0, [x20, #16]
   17ebc:	ldr	x25, [x20, #80]
   17ec0:	b	17c84 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x3c>
   17ec4:	bl	8820 <abort@plt>

0000000000017ec8 <GOMP_taskloop@@GOMP_4.5>:
   17ec8:	adrp	x11, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   17ecc:	ldr	x11, [x11, #4016]
   17ed0:	mrs	x10, tpidr_el0
   17ed4:	stp	x29, x30, [sp, #-416]!
   17ed8:	add	x8, x10, x11
   17edc:	mov	x29, sp
   17ee0:	stp	x21, x22, [sp, #32]
   17ee4:	mov	w22, w5
   17ee8:	ldr	x21, [x8, #16]
   17eec:	stp	x19, x20, [sp, #16]
   17ef0:	mov	w19, w7
   17ef4:	stp	x23, x24, [sp, #48]
   17ef8:	stp	x25, x26, [sp, #64]
   17efc:	mov	x26, x1
   17f00:	stp	x27, x28, [sp, #80]
   17f04:	mov	x28, x2
   17f08:	str	x3, [x29, #184]
   17f0c:	str	x0, [x29, #200]
   17f10:	ldr	x24, [x29, #416]
   17f14:	ldr	x3, [x29, #424]
   17f18:	cbz	x21, 17f24 <GOMP_taskloop@@GOMP_4.5+0x5c>
   17f1c:	ldr	w0, [x21, #132]
   17f20:	tbnz	w0, #2, 18174 <GOMP_taskloop@@GOMP_4.5+0x2ac>
   17f24:	ldr	x0, [x29, #432]
   17f28:	cmp	x0, #0x0
   17f2c:	b.le	18194 <GOMP_taskloop@@GOMP_4.5+0x2cc>
   17f30:	cmp	x24, x3
   17f34:	b.ge	18174 <GOMP_taskloop@@GOMP_4.5+0x2ac>  // b.tcont
   17f38:	sub	x20, x0, #0x1
   17f3c:	sub	x27, x3, x24
   17f40:	add	x20, x27, x20
   17f44:	sdiv	x20, x20, x0
   17f48:	tbz	w22, #9, 181b0 <GOMP_taskloop@@GOMP_4.5+0x2e8>
   17f4c:	udiv	x23, x20, x6
   17f50:	cmp	x23, #0x1
   17f54:	b.ls	1841c <GOMP_taskloop@@GOMP_4.5+0x554>  // b.plast
   17f58:	mov	x1, x0
   17f5c:	cmp	x6, x23
   17f60:	b.hi	18498 <GOMP_taskloop@@GOMP_4.5+0x5d0>  // b.pmore
   17f64:	mul	x0, x6, x23
   17f68:	mul	x27, x6, x1
   17f6c:	cmp	x20, x0
   17f70:	b.eq	17f80 <GOMP_taskloop@@GOMP_4.5+0xb8>  // b.none
   17f74:	sub	x20, x20, x0
   17f78:	add	x27, x27, x1
   17f7c:	sub	x20, x20, #0x1
   17f80:	and	w0, w22, #0x800
   17f84:	str	w0, [x29, #164]
   17f88:	tbz	w22, #11, 18394 <GOMP_taskloop@@GOMP_4.5+0x4cc>
   17f8c:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   17f90:	ldrb	w0, [x0, #1356]
   17f94:	cbnz	w0, 18b98 <GOMP_taskloop@@GOMP_4.5+0xcd0>
   17f98:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   17f9c:	ldr	w0, [x0, #1360]
   17fa0:	cmp	w0, w19
   17fa4:	csel	w0, w0, w19, le
   17fa8:	str	w0, [x29, #192]
   17fac:	tst	x22, #0x400
   17fb0:	ccmp	x21, #0x0, #0x4, ne  // ne = any
   17fb4:	b.ne	181e8 <GOMP_taskloop@@GOMP_4.5+0x320>  // b.any
   17fb8:	cbnz	x28, 18894 <GOMP_taskloop@@GOMP_4.5+0x9cc>
   17fbc:	cbz	x23, 18168 <GOMP_taskloop@@GOMP_4.5+0x2a0>
   17fc0:	add	x11, x10, x11
   17fc4:	adrp	x25, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   17fc8:	and	w0, w22, #0x2
   17fcc:	add	x1, x25, #0x2b0
   17fd0:	add	x25, x29, #0x160
   17fd4:	mov	x22, #0x0                   	// #0
   17fd8:	mov	x28, x25
   17fdc:	mov	x25, x11
   17fe0:	movi	v0.4s, #0x0
   17fe4:	str	w0, [x29, #168]
   17fe8:	str	x1, [x29, #176]
   17fec:	add	x1, x29, #0xd0
   17ff0:	str	x1, [x29, #184]
   17ff4:	ldr	x0, [x11, #80]
   17ff8:	b	1801c <GOMP_taskloop@@GOMP_4.5+0x154>
   17ffc:	ldr	x19, [x25, #80]
   18000:	ldr	x0, [x19, #56]
   18004:	cbnz	x0, 18148 <GOMP_taskloop@@GOMP_4.5+0x280>
   18008:	ldr	x0, [x19]
   1800c:	str	x0, [x25, #80]
   18010:	add	x22, x22, #0x1
   18014:	cmp	x23, x22
   18018:	b.eq	18168 <GOMP_taskloop@@GOMP_4.5+0x2a0>  // b.none
   1801c:	ldr	x2, [x29, #176]
   18020:	cmp	x0, #0x0
   18024:	add	x1, x0, #0x90
   18028:	csel	x1, x2, x1, eq  // eq = none
   1802c:	ldp	x2, x3, [x1]
   18030:	stp	x2, x3, [x28]
   18034:	ldp	x2, x3, [x1, #16]
   18038:	stp	x2, x3, [x28, #16]
   1803c:	ldr	w2, [x29, #192]
   18040:	ldr	x1, [x1, #32]
   18044:	stp	x0, xzr, [x29, #208]
   18048:	str	w2, [x29, #296]
   1804c:	mov	x2, #0x1                   	// #1
   18050:	str	x2, [x29, #408]
   18054:	str	x1, [x28, #32]
   18058:	add	x1, x29, #0x200
   1805c:	str	xzr, [x29, #280]
   18060:	stur	q0, [x29, #232]
   18064:	stur	q0, [x29, #248]
   18068:	stur	q0, [x1, #-248]
   1806c:	cbz	x0, 18424 <GOMP_taskloop@@GOMP_4.5+0x55c>
   18070:	ldrb	w1, [x0, #205]
   18074:	cbnz	w1, 18080 <GOMP_taskloop@@GOMP_4.5+0x1b8>
   18078:	ldr	w1, [x29, #168]
   1807c:	cbz	w1, 18088 <GOMP_taskloop@@GOMP_4.5+0x1c0>
   18080:	mov	w1, #0x1                   	// #1
   18084:	strb	w1, [x29, #413]
   18088:	ldrb	w1, [x0, #204]
   1808c:	ldr	x0, [x0, #40]
   18090:	str	x0, [x29, #248]
   18094:	strb	w1, [x29, #412]
   18098:	ldr	x0, [x29, #184]
   1809c:	str	x0, [x25, #80]
   180a0:	ldr	x1, [x29, #200]
   180a4:	cmp	x20, x22
   180a8:	ldr	x0, [x29, #432]
   180ac:	str	x24, [x26]
   180b0:	add	x24, x24, x27
   180b4:	str	x24, [x26, #8]
   180b8:	sub	x0, x27, x0
   180bc:	csel	x27, x0, x27, eq  // eq = none
   180c0:	mov	x0, x26
   180c4:	blr	x1
   180c8:	ldr	x0, [x29, #216]
   180cc:	movi	v0.4s, #0x0
   180d0:	cbnz	x0, 180dc <GOMP_taskloop@@GOMP_4.5+0x214>
   180d4:	ldr	x0, [x29, #232]
   180d8:	cbz	x0, 17ffc <GOMP_taskloop@@GOMP_4.5+0x134>
   180dc:	add	x3, x21, #0x500
   180e0:	mov	w0, #0x1                   	// #1
   180e4:	ldaxr	w1, [x3]
   180e8:	cbnz	w1, 180f4 <GOMP_taskloop@@GOMP_4.5+0x22c>
   180ec:	stxr	w2, w0, [x3]
   180f0:	cbnz	w2, 180e4 <GOMP_taskloop@@GOMP_4.5+0x21c>
   180f4:	cmp	w1, #0x0
   180f8:	b.ne	18d2c <GOMP_taskloop@@GOMP_4.5+0xe64>  // b.any
   180fc:	ldr	x5, [x29, #216]
   18100:	cbnz	x5, 18438 <GOMP_taskloop@@GOMP_4.5+0x570>
   18104:	ldr	x1, [x29, #232]
   18108:	mov	x0, x1
   1810c:	cbz	x1, 18120 <GOMP_taskloop@@GOMP_4.5+0x258>
   18110:	stur	xzr, [x0, #-112]
   18114:	ldr	x0, [x0]
   18118:	cmp	x1, x0
   1811c:	b.ne	18110 <GOMP_taskloop@@GOMP_4.5+0x248>  // b.any
   18120:	ldxr	w0, [x3]
   18124:	stlxr	w1, wzr, [x3]
   18128:	cbnz	w1, 18120 <GOMP_taskloop@@GOMP_4.5+0x258>
   1812c:	tbz	w0, #31, 17ffc <GOMP_taskloop@@GOMP_4.5+0x134>
   18130:	mov	x0, x3
   18134:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   18138:	ldr	x19, [x25, #80]
   1813c:	movi	v0.4s, #0x0
   18140:	ldr	x0, [x19, #56]
   18144:	cbz	x0, 18008 <GOMP_taskloop@@GOMP_4.5+0x140>
   18148:	bl	88b0 <free@plt>
   1814c:	add	x22, x22, #0x1
   18150:	ldr	x0, [x19]
   18154:	str	x0, [x25, #80]
   18158:	movi	v0.4s, #0x0
   1815c:	cmp	x23, x22
   18160:	b.ne	1801c <GOMP_taskloop@@GOMP_4.5+0x154>  // b.any
   18164:	nop
   18168:	ldr	w0, [x29, #164]
   1816c:	cbnz	w0, 18174 <GOMP_taskloop@@GOMP_4.5+0x2ac>
   18170:	bl	17598 <GOMP_taskgroup_end@@GOMP_4.0>
   18174:	mov	sp, x29
   18178:	ldp	x19, x20, [sp, #16]
   1817c:	ldp	x21, x22, [sp, #32]
   18180:	ldp	x23, x24, [sp, #48]
   18184:	ldp	x25, x26, [sp, #64]
   18188:	ldp	x27, x28, [sp, #80]
   1818c:	ldp	x29, x30, [sp], #416
   18190:	ret
   18194:	cmp	x24, x3
   18198:	b.le	18174 <GOMP_taskloop@@GOMP_4.5+0x2ac>
   1819c:	add	x20, x0, #0x1
   181a0:	sub	x27, x3, x24
   181a4:	add	x20, x27, x20
   181a8:	sdiv	x20, x20, x0
   181ac:	tbnz	w22, #9, 17f4c <GOMP_taskloop@@GOMP_4.5+0x84>
   181b0:	cbnz	x6, 181bc <GOMP_taskloop@@GOMP_4.5+0x2f4>
   181b4:	cbz	x21, 18850 <GOMP_taskloop@@GOMP_4.5+0x988>
   181b8:	ldr	w6, [x21]
   181bc:	cmp	x6, x20
   181c0:	b.cs	18380 <GOMP_taskloop@@GOMP_4.5+0x4b8>  // b.hs, b.nlast
   181c4:	udiv	x3, x20, x6
   181c8:	mov	x23, x6
   181cc:	ldr	x0, [x29, #432]
   181d0:	msub	x6, x3, x6, x20
   181d4:	mul	x27, x3, x0
   181d8:	cbz	x6, 17f80 <GOMP_taskloop@@GOMP_4.5+0xb8>
   181dc:	add	x27, x27, x0
   181e0:	sub	x20, x6, #0x1
   181e4:	b	17f80 <GOMP_taskloop@@GOMP_4.5+0xb8>
   181e8:	add	x0, x10, x11
   181ec:	ldr	x25, [x0, #80]
   181f0:	cbz	x25, 181fc <GOMP_taskloop@@GOMP_4.5+0x334>
   181f4:	ldrb	w0, [x25, #205]
   181f8:	cbnz	w0, 17fb8 <GOMP_taskloop@@GOMP_4.5+0xf0>
   181fc:	ldr	w0, [x21]
   18200:	ldr	w1, [x21, #1320]
   18204:	lsl	w0, w0, #6
   18208:	add	x1, x1, x23
   1820c:	cmp	x1, x0
   18210:	b.hi	17fb8 <GOMP_taskloop@@GOMP_4.5+0xf0>  // b.pmore
   18214:	lsl	x0, x23, #3
   18218:	mov	x1, sp
   1821c:	add	x0, x0, #0xf
   18220:	str	x1, [x29, #104]
   18224:	and	x0, x0, #0xfffffffffffffff0
   18228:	sub	sp, sp, x0
   1822c:	mov	x0, sp
   18230:	str	x0, [x29, #176]
   18234:	ldr	x0, [x25, #40]
   18238:	str	x0, [x29, #168]
   1823c:	cbz	x23, 184bc <GOMP_taskloop@@GOMP_4.5+0x5f4>
   18240:	ubfx	x1, x22, #1, #1
   18244:	stp	x1, x23, [x29, #144]
   18248:	neg	x1, x4
   1824c:	str	x1, [x29, #136]
   18250:	add	x0, x4, #0xcf
   18254:	ldr	x1, [x29, #184]
   18258:	add	x10, x10, x11
   1825c:	mov	x22, #0x0                   	// #0
   18260:	str	x21, [x29, #96]
   18264:	add	x19, x1, x0
   18268:	mov	x21, x27
   1826c:	mov	x27, x10
   18270:	str	x20, [x29, #112]
   18274:	str	x0, [x29, #128]
   18278:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1827c:	add	x0, x0, #0x2b0
   18280:	str	x0, [x29, #120]
   18284:	b	182e0 <GOMP_taskloop@@GOMP_4.5+0x418>
   18288:	blr	x28
   1828c:	mov	w0, #0x1                   	// #1
   18290:	strb	w0, [x20, #206]
   18294:	ldr	x0, [x29, #112]
   18298:	str	x24, [x23]
   1829c:	add	x24, x24, x21
   182a0:	str	x24, [x23, #8]
   182a4:	cmp	x22, x0
   182a8:	add	x22, x22, #0x1
   182ac:	ldr	x0, [x29, #200]
   182b0:	stp	x0, x23, [x20, #184]
   182b4:	ldr	x0, [x29, #432]
   182b8:	str	x25, [x27, #80]
   182bc:	sub	x0, x21, x0
   182c0:	csel	x21, x0, x21, eq  // eq = none
   182c4:	mov	w0, #0x2                   	// #2
   182c8:	str	w0, [x20, #200]
   182cc:	ldr	x0, [x29, #152]
   182d0:	cmp	x22, x0
   182d4:	ldrb	w0, [x29, #144]
   182d8:	strb	w0, [x20, #205]
   182dc:	b.eq	184b4 <GOMP_taskloop@@GOMP_4.5+0x5ec>  // b.none
   182e0:	mov	x0, x19
   182e4:	bl	b2f8 <fprintf@plt+0x2838>
   182e8:	mov	x20, x0
   182ec:	mov	x8, x0
   182f0:	ldp	x3, x0, [x29, #168]
   182f4:	mov	x1, x26
   182f8:	ldr	x2, [x27, #80]
   182fc:	str	x25, [x8], #144
   18300:	cmp	x2, #0x0
   18304:	add	x2, x2, #0x90
   18308:	str	x20, [x0, x22, lsl #3]
   1830c:	ldr	x0, [x29, #120]
   18310:	csel	x2, x0, x2, eq  // eq = none
   18314:	ldr	x0, [x29, #128]
   18318:	ldp	x6, x7, [x2]
   1831c:	stp	x6, x7, [x20, #144]
   18320:	add	x4, x20, x0
   18324:	ldp	x6, x7, [x2, #16]
   18328:	stp	x6, x7, [x8, #16]
   1832c:	ldr	x2, [x2, #32]
   18330:	str	x2, [x8, #32]
   18334:	mov	x2, #0x1                   	// #1
   18338:	str	x2, [x20, #200]
   1833c:	ldr	x0, [x29, #136]
   18340:	str	xzr, [x20, #8]
   18344:	ldrb	w2, [x25, #204]
   18348:	stp	x3, xzr, [x20, #40]
   1834c:	and	x23, x4, x0
   18350:	ldr	w3, [x29, #192]
   18354:	stp	xzr, xzr, [x20, #24]
   18358:	mov	x0, x23
   1835c:	stp	xzr, xzr, [x20, #56]
   18360:	str	xzr, [x20, #72]
   18364:	str	x20, [x27, #80]
   18368:	str	w3, [x20, #88]
   1836c:	strb	w2, [x20, #204]
   18370:	cbnz	x28, 18288 <GOMP_taskloop@@GOMP_4.5+0x3c0>
   18374:	ldr	x2, [x29, #184]
   18378:	bl	8580 <memcpy@plt>
   1837c:	b	18294 <GOMP_taskloop@@GOMP_4.5+0x3cc>
   18380:	and	w0, w22, #0x800
   18384:	str	w0, [x29, #164]
   18388:	mov	x23, x20
   1838c:	ldr	x27, [x29, #432]
   18390:	tbnz	w22, #11, 17f8c <GOMP_taskloop@@GOMP_4.5+0xc4>
   18394:	and	w0, w22, #0x1000
   18398:	str	w0, [x29, #164]
   1839c:	cbz	x21, 18874 <GOMP_taskloop@@GOMP_4.5+0x9ac>
   183a0:	add	x1, x10, x11
   183a4:	mov	x0, #0x40                  	// #64
   183a8:	str	x4, [x29, #152]
   183ac:	stp	x11, x10, [x29, #168]
   183b0:	ldr	x1, [x1, #80]
   183b4:	str	x1, [x29, #192]
   183b8:	ldr	x25, [x1, #40]
   183bc:	bl	b2f8 <fprintf@plt+0x2838>
   183c0:	stp	x25, xzr, [x0]
   183c4:	stp	xzr, xzr, [x0, #24]
   183c8:	ldr	x4, [x29, #152]
   183cc:	ldp	x11, x10, [x29, #168]
   183d0:	ldr	x1, [x29, #192]
   183d4:	cbz	x25, 183dc <GOMP_taskloop@@GOMP_4.5+0x514>
   183d8:	ldr	x25, [x25, #40]
   183dc:	str	x25, [x0, #40]
   183e0:	strh	wzr, [x0, #48]
   183e4:	strb	wzr, [x0, #50]
   183e8:	str	wzr, [x0, #52]
   183ec:	str	xzr, [x0, #56]
   183f0:	str	x0, [x1, #40]
   183f4:	and	w0, w22, #0x1000
   183f8:	cbz	w0, 17f98 <GOMP_taskloop@@GOMP_4.5+0xd0>
   183fc:	ldr	x0, [x26, #16]
   18400:	str	wzr, [x29, #164]
   18404:	stp	x11, x10, [x29, #168]
   18408:	str	x4, [x29, #192]
   1840c:	bl	17c48 <GOMP_taskgroup_reduction_register@@GOMP_5.0>
   18410:	ldp	x11, x10, [x29, #168]
   18414:	ldr	x4, [x29, #192]
   18418:	b	17f98 <GOMP_taskloop@@GOMP_4.5+0xd0>
   1841c:	mov	x23, #0x1                   	// #1
   18420:	b	17f80 <GOMP_taskloop@@GOMP_4.5+0xb8>
   18424:	ldr	w0, [x29, #168]
   18428:	cbz	w0, 18098 <GOMP_taskloop@@GOMP_4.5+0x1d0>
   1842c:	mov	w0, #0x1                   	// #1
   18430:	strb	w0, [x29, #413]
   18434:	b	18098 <GOMP_taskloop@@GOMP_4.5+0x1d0>
   18438:	ldr	x0, [x29, #184]
   1843c:	add	x19, x0, #0x8
   18440:	ldr	x6, [x5, #8]
   18444:	mov	x0, x5
   18448:	ldp	x1, x5, [x5, #24]
   1844c:	mov	x2, x6
   18450:	cbz	x6, 18468 <GOMP_taskloop@@GOMP_4.5+0x5a0>
   18454:	nop
   18458:	stur	xzr, [x2, #-112]
   1845c:	ldr	x2, [x2]
   18460:	cmp	x6, x2
   18464:	b.ne	18458 <GOMP_taskloop@@GOMP_4.5+0x590>  // b.any
   18468:	stp	x5, x1, [x29, #136]
   1846c:	str	x3, [x29, #152]
   18470:	bl	88b0 <free@plt>
   18474:	ldr	x1, [x29, #144]
   18478:	mov	x0, x19
   1847c:	bl	13428 <GOMP_single_copy_end@@GOMP_1.0+0x120>
   18480:	ldr	x5, [x29, #136]
   18484:	movi	v0.4s, #0x0
   18488:	ldr	x3, [x29, #152]
   1848c:	cbnz	x5, 18440 <GOMP_taskloop@@GOMP_4.5+0x578>
   18490:	str	xzr, [x29, #216]
   18494:	b	18120 <GOMP_taskloop@@GOMP_4.5+0x258>
   18498:	udiv	x3, x20, x23
   1849c:	msub	x0, x3, x23, x20
   184a0:	mul	x27, x3, x1
   184a4:	cbz	x0, 17f80 <GOMP_taskloop@@GOMP_4.5+0xb8>
   184a8:	add	x27, x27, x1
   184ac:	sub	x20, x0, #0x1
   184b0:	b	17f80 <GOMP_taskloop@@GOMP_4.5+0xb8>
   184b4:	ldr	x21, [x29, #96]
   184b8:	ldr	x23, [x29, #152]
   184bc:	add	x22, x21, #0x500
   184c0:	mov	w0, #0x1                   	// #1
   184c4:	ldaxr	w1, [x22]
   184c8:	cbnz	w1, 184d4 <GOMP_taskloop@@GOMP_4.5+0x60c>
   184cc:	stxr	w2, w0, [x22]
   184d0:	cbnz	w2, 184c4 <GOMP_taskloop@@GOMP_4.5+0x5fc>
   184d4:	cmp	w1, #0x0
   184d8:	b.ne	18d44 <GOMP_taskloop@@GOMP_4.5+0xe7c>  // b.any
   184dc:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   184e0:	cmp	x28, #0x0
   184e4:	cset	w1, eq  // eq = none
   184e8:	ldrb	w0, [x0, #1356]
   184ec:	tst	w1, w0
   184f0:	b.ne	18c94 <GOMP_taskloop@@GOMP_4.5+0xdcc>  // b.any
   184f4:	ldr	x0, [x29, #168]
   184f8:	cbz	x0, 1850c <GOMP_taskloop@@GOMP_4.5+0x644>
   184fc:	ldr	x1, [x29, #168]
   18500:	ldr	x0, [x1, #56]
   18504:	add	x0, x0, x23
   18508:	str	x0, [x1, #56]
   1850c:	add	x24, x25, #0x8
   18510:	mov	x28, #0x0                   	// #0
   18514:	cbz	x23, 18608 <GOMP_taskloop@@GOMP_4.5+0x740>
   18518:	add	x26, x29, #0xd0
   1851c:	add	x20, x21, #0x508
   18520:	str	x22, [x29, #184]
   18524:	add	x0, x21, #0x600
   18528:	ldr	w22, [x29, #192]
   1852c:	str	x26, [x29, #200]
   18530:	mov	x26, x24
   18534:	mov	x24, x20
   18538:	str	x0, [x29, #152]
   1853c:	ldr	x20, [x29, #168]
   18540:	ldr	x1, [x29, #176]
   18544:	ldr	x0, [x25, #8]
   18548:	ldr	x19, [x1, x28, lsl #3]
   1854c:	add	x27, x19, #0x70
   18550:	cbnz	x0, 18804 <GOMP_taskloop@@GOMP_4.5+0x93c>
   18554:	cmp	w22, #0x0
   18558:	ldr	x0, [x25, #24]
   1855c:	b.gt	187d0 <GOMP_taskloop@@GOMP_4.5+0x908>
   18560:	cbz	x0, 18788 <GOMP_taskloop@@GOMP_4.5+0x8c0>
   18564:	ldr	x1, [x0, #8]
   18568:	stp	x0, x1, [x19, #112]
   1856c:	str	x27, [x25, #24]
   18570:	ldr	x0, [x19, #112]
   18574:	str	x27, [x0, #8]
   18578:	ldr	x0, [x19, #120]
   1857c:	str	x27, [x0]
   18580:	cbz	x20, 18700 <GOMP_taskloop@@GOMP_4.5+0x838>
   18584:	ldr	x0, [x20, #8]
   18588:	add	x5, x20, #0x8
   1858c:	add	x27, x19, #0x80
   18590:	cbnz	x0, 186bc <GOMP_taskloop@@GOMP_4.5+0x7f4>
   18594:	cmp	w22, #0x0
   18598:	ldr	x0, [x20, #24]
   1859c:	b.gt	1867c <GOMP_taskloop@@GOMP_4.5+0x7b4>
   185a0:	cbz	x0, 18840 <GOMP_taskloop@@GOMP_4.5+0x978>
   185a4:	ldr	x1, [x0, #8]
   185a8:	stp	x0, x1, [x19, #128]
   185ac:	str	x27, [x20, #24]
   185b0:	ldr	x0, [x19, #128]
   185b4:	str	x27, [x0, #8]
   185b8:	ldr	x0, [x19, #136]
   185bc:	str	x27, [x0]
   185c0:	ldr	x0, [x21, #1288]
   185c4:	cbnz	x0, 18798 <GOMP_taskloop@@GOMP_4.5+0x8d0>
   185c8:	ldr	x0, [x21, #1304]
   185cc:	add	x1, x19, #0x60
   185d0:	cbz	x0, 18778 <GOMP_taskloop@@GOMP_4.5+0x8b0>
   185d4:	ldr	x5, [x0, #8]
   185d8:	stp	x0, x5, [x19, #96]
   185dc:	str	x1, [x0, #8]
   185e0:	ldr	x0, [x19, #104]
   185e4:	str	x1, [x0]
   185e8:	movi	v1.2s, #0x1
   185ec:	ldr	d0, [x21, #1320]
   185f0:	add	x28, x28, #0x1
   185f4:	cmp	x28, x23
   185f8:	add	v0.2s, v0.2s, v1.2s
   185fc:	str	d0, [x21, #1320]
   18600:	b.ne	18540 <GOMP_taskloop@@GOMP_4.5+0x678>  // b.any
   18604:	ldr	x22, [x29, #184]
   18608:	ldr	w0, [x21, #132]
   1860c:	ldrb	w1, [x25, #204]
   18610:	orr	w0, w0, #0x1
   18614:	ldr	w2, [x21, #1328]
   18618:	eor	w1, w1, #0x1
   1861c:	str	w0, [x21, #132]
   18620:	ldr	w0, [x21]
   18624:	add	w3, w2, w1
   18628:	cmp	w3, w0
   1862c:	b.cs	18660 <GOMP_taskloop@@GOMP_4.5+0x798>  // b.hs, b.nlast
   18630:	sub	w0, w0, w2
   18634:	sub	w1, w0, w1
   18638:	cmp	x23, w1, sxtw
   1863c:	csel	w1, w23, w1, cc  // cc = lo, ul, last
   18640:	ldxr	w0, [x22]
   18644:	stlxr	w2, wzr, [x22]
   18648:	cbnz	w2, 18640 <GOMP_taskloop@@GOMP_4.5+0x778>
   1864c:	tbnz	w0, #31, 18a14 <GOMP_taskloop@@GOMP_4.5+0xb4c>
   18650:	cbz	w1, 18670 <GOMP_taskloop@@GOMP_4.5+0x7a8>
   18654:	add	x0, x21, #0x80
   18658:	bl	1d150 <omp_get_num_procs@@OMP_1.0+0x5a0>
   1865c:	b	18670 <GOMP_taskloop@@GOMP_4.5+0x7a8>
   18660:	ldxr	w0, [x22]
   18664:	stlxr	w1, wzr, [x22]
   18668:	cbnz	w1, 18660 <GOMP_taskloop@@GOMP_4.5+0x798>
   1866c:	tbnz	w0, #31, 18c88 <GOMP_taskloop@@GOMP_4.5+0xdc0>
   18670:	ldr	x0, [x29, #104]
   18674:	mov	sp, x0
   18678:	b	18168 <GOMP_taskloop@@GOMP_4.5+0x2a0>
   1867c:	cbz	x0, 18c1c <GOMP_taskloop@@GOMP_4.5+0xd54>
   18680:	mov	x0, #0x28                  	// #40
   18684:	str	x5, [x29, #192]
   18688:	bl	b2f8 <fprintf@plt+0x2838>
   1868c:	mov	x1, x0
   18690:	ldur	q0, [x20, #24]
   18694:	stp	xzr, xzr, [x0, #24]
   18698:	ldr	x5, [x29, #192]
   1869c:	str	wzr, [x1]
   186a0:	stur	q0, [x1, #8]
   186a4:	mov	x0, x5
   186a8:	bl	2b498 <acc_set_cuda_stream@@OACC_2.0+0x490>
   186ac:	ldr	x5, [x29, #192]
   186b0:	ldr	x0, [x20, #8]
   186b4:	str	xzr, [x5, #16]
   186b8:	cbz	x0, 18c1c <GOMP_taskloop@@GOMP_4.5+0xd54>
   186bc:	ldr	x1, [x29, #200]
   186c0:	mov	x0, x5
   186c4:	str	x5, [x29, #192]
   186c8:	str	w22, [x29, #208]
   186cc:	bl	2b798 <acc_set_cuda_stream@@OACC_2.0+0x790>
   186d0:	ldr	x5, [x29, #192]
   186d4:	cbz	x0, 18c1c <GOMP_taskloop@@GOMP_4.5+0xd54>
   186d8:	ldr	x1, [x0, #8]
   186dc:	cbz	x1, 18c54 <GOMP_taskloop@@GOMP_4.5+0xd8c>
   186e0:	ldr	x5, [x1, #8]
   186e4:	stp	x1, x5, [x19, #128]
   186e8:	str	x27, [x0, #8]
   186ec:	ldr	x0, [x19, #128]
   186f0:	str	x27, [x0, #8]
   186f4:	ldr	x0, [x19, #136]
   186f8:	str	x27, [x0]
   186fc:	nop
   18700:	ldr	x0, [x21, #1288]
   18704:	cbnz	x0, 18798 <GOMP_taskloop@@GOMP_4.5+0x8d0>
   18708:	cmp	w22, #0x0
   1870c:	ldr	x0, [x24, #16]
   18710:	b.le	185cc <GOMP_taskloop@@GOMP_4.5+0x704>
   18714:	cbz	x0, 1874c <GOMP_taskloop@@GOMP_4.5+0x884>
   18718:	mov	x0, #0x28                  	// #40
   1871c:	bl	b2f8 <fprintf@plt+0x2838>
   18720:	ldr	x2, [x29, #152]
   18724:	mov	x1, x0
   18728:	mov	x0, x24
   1872c:	ldur	q0, [x2, #-232]
   18730:	str	wzr, [x1]
   18734:	stp	xzr, xzr, [x1, #24]
   18738:	stur	q0, [x1, #8]
   1873c:	bl	2b498 <acc_set_cuda_stream@@OACC_2.0+0x490>
   18740:	ldr	x0, [x24]
   18744:	str	xzr, [x24, #16]
   18748:	cbnz	x0, 18798 <GOMP_taskloop@@GOMP_4.5+0x8d0>
   1874c:	mov	x0, #0x28                  	// #40
   18750:	bl	b2f8 <fprintf@plt+0x2838>
   18754:	mov	x27, x0
   18758:	mov	x0, x24
   1875c:	mov	x1, x27
   18760:	str	w22, [x27]
   18764:	stp	xzr, xzr, [x27, #8]
   18768:	stp	xzr, xzr, [x27, #24]
   1876c:	bl	2b498 <acc_set_cuda_stream@@OACC_2.0+0x490>
   18770:	mov	x0, x27
   18774:	b	187ac <GOMP_taskloop@@GOMP_4.5+0x8e4>
   18778:	dup	v0.2d, x1
   1877c:	str	q0, [x19, #96]
   18780:	str	x1, [x21, #1304]
   18784:	b	185e8 <GOMP_taskloop@@GOMP_4.5+0x720>
   18788:	dup	v0.2d, x27
   1878c:	str	q0, [x19, #112]
   18790:	str	x27, [x25, #24]
   18794:	b	18580 <GOMP_taskloop@@GOMP_4.5+0x6b8>
   18798:	ldr	x1, [x29, #200]
   1879c:	mov	x0, x24
   187a0:	str	w22, [x29, #208]
   187a4:	bl	2b798 <acc_set_cuda_stream@@OACC_2.0+0x790>
   187a8:	cbz	x0, 1874c <GOMP_taskloop@@GOMP_4.5+0x884>
   187ac:	ldr	x1, [x0, #8]
   187b0:	add	x5, x19, #0x60
   187b4:	cbz	x1, 18c00 <GOMP_taskloop@@GOMP_4.5+0xd38>
   187b8:	ldr	x0, [x1, #8]
   187bc:	stp	x1, x0, [x19, #96]
   187c0:	str	x5, [x1, #8]
   187c4:	ldr	x0, [x19, #104]
   187c8:	str	x5, [x0]
   187cc:	b	185e8 <GOMP_taskloop@@GOMP_4.5+0x720>
   187d0:	cbz	x0, 18b68 <GOMP_taskloop@@GOMP_4.5+0xca0>
   187d4:	mov	x0, #0x28                  	// #40
   187d8:	bl	b2f8 <fprintf@plt+0x2838>
   187dc:	mov	x1, x0
   187e0:	mov	x0, x26
   187e4:	ldur	q0, [x25, #24]
   187e8:	str	wzr, [x1]
   187ec:	stp	xzr, xzr, [x1, #24]
   187f0:	stur	q0, [x1, #8]
   187f4:	bl	2b498 <acc_set_cuda_stream@@OACC_2.0+0x490>
   187f8:	ldr	x0, [x26]
   187fc:	str	xzr, [x26, #16]
   18800:	cbz	x0, 18b68 <GOMP_taskloop@@GOMP_4.5+0xca0>
   18804:	ldr	x1, [x29, #200]
   18808:	mov	x0, x26
   1880c:	str	w22, [x29, #208]
   18810:	bl	2b798 <acc_set_cuda_stream@@OACC_2.0+0x790>
   18814:	cbz	x0, 18b68 <GOMP_taskloop@@GOMP_4.5+0xca0>
   18818:	ldr	x1, [x0, #8]
   1881c:	cbz	x1, 18bf0 <GOMP_taskloop@@GOMP_4.5+0xd28>
   18820:	ldr	x5, [x1, #8]
   18824:	stp	x1, x5, [x19, #112]
   18828:	str	x27, [x0, #8]
   1882c:	ldr	x0, [x19, #112]
   18830:	str	x27, [x0, #8]
   18834:	ldr	x0, [x19, #120]
   18838:	str	x27, [x0]
   1883c:	b	18580 <GOMP_taskloop@@GOMP_4.5+0x6b8>
   18840:	dup	v0.2d, x27
   18844:	str	q0, [x19, #128]
   18848:	str	x27, [x20, #24]
   1884c:	b	185c0 <GOMP_taskloop@@GOMP_4.5+0x6f8>
   18850:	cmp	x20, #0x1
   18854:	b.hi	18c10 <GOMP_taskloop@@GOMP_4.5+0xd48>  // b.pmore
   18858:	mov	x27, x0
   1885c:	mov	x23, x20
   18860:	and	w0, w22, #0x800
   18864:	str	w0, [x29, #164]
   18868:	tbnz	w22, #11, 17f8c <GOMP_taskloop@@GOMP_4.5+0xc4>
   1886c:	and	w0, w22, #0x1000
   18870:	str	w0, [x29, #164]
   18874:	ldr	w0, [x29, #164]
   18878:	cbnz	w0, 183fc <GOMP_taskloop@@GOMP_4.5+0x534>
   1887c:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   18880:	ldr	w0, [x0, #1360]
   18884:	cmp	w0, w19
   18888:	csel	w0, w0, w19, le
   1888c:	str	w0, [x29, #192]
   18890:	b	17fb8 <GOMP_taskloop@@GOMP_4.5+0xf0>
   18894:	ldr	x0, [x29, #184]
   18898:	neg	x2, x4
   1889c:	sub	x3, x4, #0x1
   188a0:	add	x12, x10, x11
   188a4:	add	x0, x0, x4
   188a8:	mov	x4, sp
   188ac:	sub	x0, x0, #0x1
   188b0:	str	x4, [x29, #152]
   188b4:	and	x1, x0, x2
   188b8:	add	x0, x23, x23, lsl #1
   188bc:	str	x1, [x29, #184]
   188c0:	add	x0, x23, x0, lsl #2
   188c4:	madd	x1, x1, x23, x3
   188c8:	sub	x4, x4, x0, lsl #4
   188cc:	str	x4, [x29, #168]
   188d0:	add	x1, x1, #0xf
   188d4:	mov	sp, x4
   188d8:	and	x1, x1, #0xfffffffffffffff0
   188dc:	lsl	x0, x0, #4
   188e0:	sub	sp, sp, x1
   188e4:	add	x1, sp, x3
   188e8:	and	x19, x1, x2
   188ec:	ldr	x1, [x12, #80]
   188f0:	mov	x3, x1
   188f4:	cbz	x23, 18a08 <GOMP_taskloop@@GOMP_4.5+0xb40>
   188f8:	mov	x25, x4
   188fc:	add	x2, x0, x4
   18900:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   18904:	add	x4, x0, #0x2b0
   18908:	and	w1, w22, #0x2
   1890c:	mov	x22, x2
   18910:	stp	x11, x10, [x29, #104]
   18914:	stp	x19, x23, [x29, #120]
   18918:	ldr	w23, [x29, #192]
   1891c:	stp	x27, x20, [x29, #136]
   18920:	mov	x27, x3
   18924:	str	w1, [x29, #176]
   18928:	str	x21, [x29, #192]
   1892c:	mov	x21, x25
   18930:	mov	x25, x4
   18934:	str	x24, [x29, #416]
   18938:	mov	x24, x26
   1893c:	mov	x26, x12
   18940:	ldr	x20, [x29, #184]
   18944:	b	18994 <GOMP_taskloop@@GOMP_4.5+0xacc>
   18948:	ldrb	w4, [x3, #205]
   1894c:	cbnz	w4, 18958 <GOMP_taskloop@@GOMP_4.5+0xa90>
   18950:	ldr	w0, [x29, #176]
   18954:	cbz	w0, 18960 <GOMP_taskloop@@GOMP_4.5+0xa98>
   18958:	mov	w0, #0x1                   	// #1
   1895c:	strb	w0, [x21, #205]
   18960:	ldrb	w4, [x3, #204]
   18964:	ldr	x3, [x3, #40]
   18968:	str	x3, [x21, #40]
   1896c:	strb	w4, [x21, #204]
   18970:	str	x21, [x26, #80]
   18974:	mov	x0, x19
   18978:	mov	x1, x24
   1897c:	add	x21, x21, #0xd0
   18980:	blr	x28
   18984:	add	x19, x19, x20
   18988:	cmp	x22, x21
   1898c:	b.eq	18a28 <GOMP_taskloop@@GOMP_4.5+0xb60>  // b.none
   18990:	ldr	x3, [x26, #80]
   18994:	mov	x5, x21
   18998:	cmp	x3, #0x0
   1899c:	add	x4, x3, #0x90
   189a0:	csel	x4, x25, x4, eq  // eq = none
   189a4:	mov	w0, #0x1                   	// #1
   189a8:	str	x27, [x5], #144
   189ac:	ldp	x6, x7, [x4]
   189b0:	stp	x6, x7, [x21, #144]
   189b4:	ldp	x6, x7, [x4, #16]
   189b8:	stp	x6, x7, [x5, #16]
   189bc:	ldr	x4, [x4, #32]
   189c0:	str	x4, [x5, #32]
   189c4:	str	xzr, [x21, #8]
   189c8:	stp	xzr, xzr, [x21, #24]
   189cc:	stp	xzr, xzr, [x21, #40]
   189d0:	stp	xzr, xzr, [x21, #56]
   189d4:	str	xzr, [x21, #72]
   189d8:	str	w23, [x21, #88]
   189dc:	str	w0, [x21, #200]
   189e0:	strb	wzr, [x21, #204]
   189e4:	strb	wzr, [x21, #205]
   189e8:	strb	wzr, [x21, #206]
   189ec:	strb	wzr, [x21, #207]
   189f0:	cbnz	x3, 18948 <GOMP_taskloop@@GOMP_4.5+0xa80>
   189f4:	ldr	w0, [x29, #176]
   189f8:	cbz	w0, 18970 <GOMP_taskloop@@GOMP_4.5+0xaa8>
   189fc:	mov	w0, #0x1                   	// #1
   18a00:	strb	w0, [x21, #205]
   18a04:	b	18970 <GOMP_taskloop@@GOMP_4.5+0xaa8>
   18a08:	ldr	x0, [x29, #152]
   18a0c:	mov	sp, x0
   18a10:	b	18168 <GOMP_taskloop@@GOMP_4.5+0x2a0>
   18a14:	mov	x0, x22
   18a18:	str	w1, [x29, #200]
   18a1c:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   18a20:	ldr	w1, [x29, #200]
   18a24:	b	18650 <GOMP_taskloop@@GOMP_4.5+0x788>
   18a28:	ldp	x11, x10, [x29, #104]
   18a2c:	mov	x25, #0x0                   	// #0
   18a30:	ldr	x0, [x29, #168]
   18a34:	ldr	x21, [x29, #192]
   18a38:	add	x22, x0, #0x8
   18a3c:	add	x26, x10, x11
   18a40:	add	x21, x21, #0x500
   18a44:	ldp	x19, x23, [x29, #120]
   18a48:	ldp	x27, x20, [x29, #136]
   18a4c:	ldr	x24, [x29, #416]
   18a50:	b	18a78 <GOMP_taskloop@@GOMP_4.5+0xbb0>
   18a54:	ldr	x28, [x26, #80]
   18a58:	ldr	x0, [x28, #56]
   18a5c:	cbnz	x0, 18b60 <GOMP_taskloop@@GOMP_4.5+0xc98>
   18a60:	ldr	x0, [x28]
   18a64:	str	x0, [x26, #80]
   18a68:	add	x25, x25, #0x1
   18a6c:	add	x22, x22, #0xd0
   18a70:	cmp	x23, x25
   18a74:	b.eq	18a08 <GOMP_taskloop@@GOMP_4.5+0xb40>  // b.none
   18a78:	sub	x0, x22, #0x8
   18a7c:	str	x0, [x26, #80]
   18a80:	ldr	x0, [x29, #432]
   18a84:	cmp	x20, x25
   18a88:	ldr	x1, [x29, #184]
   18a8c:	sub	x0, x27, x0
   18a90:	str	x24, [x19]
   18a94:	add	x24, x24, x27
   18a98:	csel	x27, x0, x27, eq  // eq = none
   18a9c:	mov	x0, x19
   18aa0:	str	x24, [x19, #8]
   18aa4:	add	x19, x19, x1
   18aa8:	ldr	x1, [x29, #200]
   18aac:	blr	x1
   18ab0:	ldr	x0, [x22]
   18ab4:	cbnz	x0, 18ac0 <GOMP_taskloop@@GOMP_4.5+0xbf8>
   18ab8:	ldr	x0, [x22, #16]
   18abc:	cbz	x0, 18a54 <GOMP_taskloop@@GOMP_4.5+0xb8c>
   18ac0:	mov	w0, #0x1                   	// #1
   18ac4:	ldaxr	w1, [x21]
   18ac8:	cbnz	w1, 18ad4 <GOMP_taskloop@@GOMP_4.5+0xc0c>
   18acc:	stxr	w2, w0, [x21]
   18ad0:	cbnz	w2, 18ac4 <GOMP_taskloop@@GOMP_4.5+0xbfc>
   18ad4:	cmp	w1, #0x0
   18ad8:	b.ne	18d50 <GOMP_taskloop@@GOMP_4.5+0xe88>  // b.any
   18adc:	ldr	x28, [x22]
   18ae0:	cbnz	x28, 18b1c <GOMP_taskloop@@GOMP_4.5+0xc54>
   18ae4:	ldr	x1, [x22, #16]
   18ae8:	mov	x0, x1
   18aec:	cbz	x1, 18b00 <GOMP_taskloop@@GOMP_4.5+0xc38>
   18af0:	stur	xzr, [x0, #-112]
   18af4:	ldr	x0, [x0]
   18af8:	cmp	x1, x0
   18afc:	b.ne	18af0 <GOMP_taskloop@@GOMP_4.5+0xc28>  // b.any
   18b00:	ldxr	w0, [x21]
   18b04:	stlxr	w1, wzr, [x21]
   18b08:	cbnz	w1, 18b00 <GOMP_taskloop@@GOMP_4.5+0xc38>
   18b0c:	tbz	w0, #31, 18a54 <GOMP_taskloop@@GOMP_4.5+0xb8c>
   18b10:	mov	x0, x21
   18b14:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   18b18:	b	18a54 <GOMP_taskloop@@GOMP_4.5+0xb8c>
   18b1c:	ldr	x3, [x28, #8]
   18b20:	mov	x0, x28
   18b24:	ldp	x1, x28, [x28, #24]
   18b28:	mov	x2, x3
   18b2c:	cbz	x3, 18b40 <GOMP_taskloop@@GOMP_4.5+0xc78>
   18b30:	stur	xzr, [x2, #-112]
   18b34:	ldr	x2, [x2]
   18b38:	cmp	x3, x2
   18b3c:	b.ne	18b30 <GOMP_taskloop@@GOMP_4.5+0xc68>  // b.any
   18b40:	str	x1, [x29, #192]
   18b44:	bl	88b0 <free@plt>
   18b48:	ldr	x1, [x29, #192]
   18b4c:	mov	x0, x22
   18b50:	bl	13428 <GOMP_single_copy_end@@GOMP_1.0+0x120>
   18b54:	cbnz	x28, 18b1c <GOMP_taskloop@@GOMP_4.5+0xc54>
   18b58:	str	xzr, [x22]
   18b5c:	b	18b00 <GOMP_taskloop@@GOMP_4.5+0xc38>
   18b60:	bl	88b0 <free@plt>
   18b64:	b	18a60 <GOMP_taskloop@@GOMP_4.5+0xb98>
   18b68:	mov	x0, #0x28                  	// #40
   18b6c:	bl	b2f8 <fprintf@plt+0x2838>
   18b70:	mov	x1, x0
   18b74:	mov	x0, x26
   18b78:	str	x1, [x29, #192]
   18b7c:	str	w22, [x1]
   18b80:	stp	xzr, xzr, [x1, #8]
   18b84:	stp	xzr, xzr, [x1, #24]
   18b88:	bl	2b498 <acc_set_cuda_stream@@OACC_2.0+0x490>
   18b8c:	ldr	x1, [x29, #192]
   18b90:	mov	x0, x1
   18b94:	b	18818 <GOMP_taskloop@@GOMP_4.5+0x950>
   18b98:	add	x0, x10, x11
   18b9c:	ldr	x25, [x0, #80]
   18ba0:	cbz	x25, 18c64 <GOMP_taskloop@@GOMP_4.5+0xd9c>
   18ba4:	ldr	x0, [x25, #40]
   18ba8:	cbz	x0, 18bcc <GOMP_taskloop@@GOMP_4.5+0xd04>
   18bac:	ldrb	w1, [x0, #49]
   18bb0:	cbnz	w1, 18174 <GOMP_taskloop@@GOMP_4.5+0x2ac>
   18bb4:	ldrb	w1, [x0, #50]
   18bb8:	cbz	w1, 18bcc <GOMP_taskloop@@GOMP_4.5+0xd04>
   18bbc:	ldr	x0, [x0]
   18bc0:	cbz	x0, 18bcc <GOMP_taskloop@@GOMP_4.5+0xd04>
   18bc4:	ldrb	w0, [x0, #49]
   18bc8:	cbnz	w0, 18174 <GOMP_taskloop@@GOMP_4.5+0x2ac>
   18bcc:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   18bd0:	ldr	w0, [x0, #1360]
   18bd4:	cmp	w0, w19
   18bd8:	csel	w0, w0, w19, le
   18bdc:	str	w0, [x29, #192]
   18be0:	tst	x22, #0x400
   18be4:	ccmp	x21, #0x0, #0x4, ne  // ne = any
   18be8:	b.eq	17fb8 <GOMP_taskloop@@GOMP_4.5+0xf0>  // b.none
   18bec:	b	181f4 <GOMP_taskloop@@GOMP_4.5+0x32c>
   18bf0:	dup	v0.2d, x27
   18bf4:	str	q0, [x19, #112]
   18bf8:	str	x27, [x0, #8]
   18bfc:	b	18580 <GOMP_taskloop@@GOMP_4.5+0x6b8>
   18c00:	dup	v0.2d, x5
   18c04:	str	q0, [x19, #96]
   18c08:	str	x5, [x0, #8]
   18c0c:	b	185e8 <GOMP_taskloop@@GOMP_4.5+0x720>
   18c10:	mul	x27, x20, x0
   18c14:	mov	x23, #0x1                   	// #1
   18c18:	b	18860 <GOMP_taskloop@@GOMP_4.5+0x998>
   18c1c:	mov	x0, #0x28                  	// #40
   18c20:	str	x5, [x29, #192]
   18c24:	bl	b2f8 <fprintf@plt+0x2838>
   18c28:	mov	x1, x0
   18c2c:	ldr	x5, [x29, #192]
   18c30:	stp	xzr, xzr, [x0, #8]
   18c34:	stp	xzr, xzr, [x0, #24]
   18c38:	mov	x0, x5
   18c3c:	str	w22, [x1]
   18c40:	str	x1, [x29, #192]
   18c44:	bl	2b498 <acc_set_cuda_stream@@OACC_2.0+0x490>
   18c48:	ldr	x1, [x29, #192]
   18c4c:	mov	x0, x1
   18c50:	b	186d8 <GOMP_taskloop@@GOMP_4.5+0x810>
   18c54:	dup	v0.2d, x27
   18c58:	str	q0, [x19, #128]
   18c5c:	str	x27, [x0, #8]
   18c60:	b	18700 <GOMP_taskloop@@GOMP_4.5+0x838>
   18c64:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   18c68:	ldr	w0, [x0, #1360]
   18c6c:	cmp	w0, w19
   18c70:	csel	w0, w0, w19, le
   18c74:	str	w0, [x29, #192]
   18c78:	tst	x22, #0x400
   18c7c:	ccmp	x21, #0x0, #0x4, ne  // ne = any
   18c80:	b.eq	17fb8 <GOMP_taskloop@@GOMP_4.5+0xf0>  // b.none
   18c84:	b	181fc <GOMP_taskloop@@GOMP_4.5+0x334>
   18c88:	mov	x0, x22
   18c8c:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   18c90:	b	18670 <GOMP_taskloop@@GOMP_4.5+0x7a8>
   18c94:	ldr	w0, [x21, #132]
   18c98:	tbnz	w0, #2, 18cc4 <GOMP_taskloop@@GOMP_4.5+0xdfc>
   18c9c:	ldr	x1, [x29, #168]
   18ca0:	cbz	x1, 1850c <GOMP_taskloop@@GOMP_4.5+0x644>
   18ca4:	ldrb	w0, [x1, #49]
   18ca8:	cbnz	w0, 18cc4 <GOMP_taskloop@@GOMP_4.5+0xdfc>
   18cac:	ldrb	w0, [x1, #50]
   18cb0:	cbz	w0, 184fc <GOMP_taskloop@@GOMP_4.5+0x634>
   18cb4:	ldr	x0, [x1]
   18cb8:	cbz	x0, 184fc <GOMP_taskloop@@GOMP_4.5+0x634>
   18cbc:	ldrb	w0, [x0, #49]
   18cc0:	cbz	w0, 184fc <GOMP_taskloop@@GOMP_4.5+0x634>
   18cc4:	mov	x0, x22
   18cc8:	mov	x19, #0x0                   	// #0
   18ccc:	bl	13550 <GOMP_single_copy_end@@GOMP_1.0+0x248>
   18cd0:	cbnz	x23, 18ce8 <GOMP_taskloop@@GOMP_4.5+0xe20>
   18cd4:	b	18d18 <GOMP_taskloop@@GOMP_4.5+0xe50>
   18cd8:	add	x19, x19, #0x1
   18cdc:	bl	88b0 <free@plt>
   18ce0:	cmp	x19, x23
   18ce4:	b.eq	18d18 <GOMP_taskloop@@GOMP_4.5+0xe50>  // b.none
   18ce8:	ldr	x0, [x29, #176]
   18cec:	ldr	x20, [x0, x19, lsl #3]
   18cf0:	mov	x0, x20
   18cf4:	ldr	x1, [x20, #56]
   18cf8:	cbz	x1, 18cd8 <GOMP_taskloop@@GOMP_4.5+0xe10>
   18cfc:	mov	x0, x1
   18d00:	bl	88b0 <free@plt>
   18d04:	add	x19, x19, #0x1
   18d08:	mov	x0, x20
   18d0c:	bl	88b0 <free@plt>
   18d10:	cmp	x23, x19
   18d14:	b.ne	18ce8 <GOMP_taskloop@@GOMP_4.5+0xe20>  // b.any
   18d18:	ldr	w0, [x29, #164]
   18d1c:	cbz	w0, 18d5c <GOMP_taskloop@@GOMP_4.5+0xe94>
   18d20:	ldr	x0, [x29, #104]
   18d24:	mov	sp, x0
   18d28:	b	18174 <GOMP_taskloop@@GOMP_4.5+0x2ac>
   18d2c:	mov	x0, x3
   18d30:	str	x3, [x29, #152]
   18d34:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   18d38:	movi	v0.4s, #0x0
   18d3c:	ldr	x3, [x29, #152]
   18d40:	b	180fc <GOMP_taskloop@@GOMP_4.5+0x234>
   18d44:	mov	x0, x22
   18d48:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   18d4c:	b	184dc <GOMP_taskloop@@GOMP_4.5+0x614>
   18d50:	mov	x0, x21
   18d54:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   18d58:	b	18adc <GOMP_taskloop@@GOMP_4.5+0xc14>
   18d5c:	bl	17598 <GOMP_taskgroup_end@@GOMP_4.0>
   18d60:	b	18d20 <GOMP_taskloop@@GOMP_4.5+0xe58>
   18d64:	nop

0000000000018d68 <GOMP_taskloop_ull@@GOMP_4.5>:
   18d68:	stp	x29, x30, [sp, #-432]!
   18d6c:	mrs	x10, tpidr_el0
   18d70:	adrp	x11, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   18d74:	ldr	x11, [x11, #4016]
   18d78:	mov	x29, sp
   18d7c:	add	x8, x10, x11
   18d80:	stp	x19, x20, [sp, #16]
   18d84:	mov	w20, w5
   18d88:	stp	x21, x22, [sp, #32]
   18d8c:	mov	w19, w7
   18d90:	stp	x23, x24, [sp, #48]
   18d94:	stp	x25, x26, [sp, #64]
   18d98:	mov	x26, x1
   18d9c:	stp	x27, x28, [sp, #80]
   18da0:	mov	x28, x2
   18da4:	str	x3, [x29, #200]
   18da8:	str	x0, [x29, #216]
   18dac:	ldp	x3, x0, [x29, #440]
   18db0:	ldr	x22, [x8, #16]
   18db4:	ldr	x24, [x29, #432]
   18db8:	sub	x1, x0, #0x1
   18dbc:	cbz	x22, 18dc8 <GOMP_taskloop_ull@@GOMP_4.5+0x60>
   18dc0:	ldr	w0, [x22, #132]
   18dc4:	tbnz	w0, #2, 19014 <GOMP_taskloop_ull@@GOMP_4.5+0x2ac>
   18dc8:	tbz	w20, #8, 19034 <GOMP_taskloop_ull@@GOMP_4.5+0x2cc>
   18dcc:	cmp	x24, x3
   18dd0:	b.cs	19014 <GOMP_taskloop_ull@@GOMP_4.5+0x2ac>  // b.hs, b.nlast
   18dd4:	sub	x21, x3, x24
   18dd8:	ldr	x0, [x29, #448]
   18ddc:	add	x21, x21, x1
   18de0:	udiv	x21, x21, x0
   18de4:	tbz	w20, #9, 1905c <GOMP_taskloop_ull@@GOMP_4.5+0x2f4>
   18de8:	udiv	x23, x21, x6
   18dec:	cmp	x23, #0x1
   18df0:	b.ls	192d0 <GOMP_taskloop_ull@@GOMP_4.5+0x568>  // b.plast
   18df4:	cmp	x6, x23
   18df8:	ccmn	x23, #0x1, #0x4, ls  // ls = plast
   18dfc:	b.eq	19350 <GOMP_taskloop_ull@@GOMP_4.5+0x5e8>  // b.none
   18e00:	ldr	x1, [x29, #448]
   18e04:	mul	x0, x6, x23
   18e08:	cmp	x21, x0
   18e0c:	mul	x27, x1, x6
   18e10:	b.eq	18e20 <GOMP_taskloop_ull@@GOMP_4.5+0xb8>  // b.none
   18e14:	sub	x21, x21, x0
   18e18:	add	x27, x27, x1
   18e1c:	sub	x21, x21, #0x1
   18e20:	and	w0, w20, #0x800
   18e24:	str	w0, [x29, #180]
   18e28:	tbz	w20, #11, 1924c <GOMP_taskloop_ull@@GOMP_4.5+0x4e4>
   18e2c:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   18e30:	ldrb	w0, [x0, #1356]
   18e34:	cbnz	w0, 19a60 <GOMP_taskloop_ull@@GOMP_4.5+0xcf8>
   18e38:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   18e3c:	ldr	w0, [x0, #1360]
   18e40:	cmp	w0, w19
   18e44:	csel	w0, w0, w19, le
   18e48:	str	w0, [x29, #208]
   18e4c:	tst	x20, #0x400
   18e50:	ccmp	x22, #0x0, #0x4, ne  // ne = any
   18e54:	b.ne	19094 <GOMP_taskloop_ull@@GOMP_4.5+0x32c>  // b.any
   18e58:	cbnz	x28, 19758 <GOMP_taskloop_ull@@GOMP_4.5+0x9f0>
   18e5c:	cbz	x23, 19008 <GOMP_taskloop_ull@@GOMP_4.5+0x2a0>
   18e60:	add	x11, x10, x11
   18e64:	adrp	x25, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   18e68:	and	w0, w20, #0x2
   18e6c:	add	x1, x25, #0x2b0
   18e70:	add	x25, x29, #0x170
   18e74:	mov	x20, #0x0                   	// #0
   18e78:	mov	x28, x25
   18e7c:	mov	x25, x11
   18e80:	movi	v0.4s, #0x0
   18e84:	str	w0, [x29, #184]
   18e88:	str	x1, [x29, #192]
   18e8c:	add	x1, x29, #0xe0
   18e90:	str	x1, [x29, #200]
   18e94:	ldr	x0, [x11, #80]
   18e98:	b	18ebc <GOMP_taskloop_ull@@GOMP_4.5+0x154>
   18e9c:	ldr	x19, [x25, #80]
   18ea0:	ldr	x0, [x19, #56]
   18ea4:	cbnz	x0, 18fe8 <GOMP_taskloop_ull@@GOMP_4.5+0x280>
   18ea8:	ldr	x0, [x19]
   18eac:	str	x0, [x25, #80]
   18eb0:	add	x20, x20, #0x1
   18eb4:	cmp	x23, x20
   18eb8:	b.eq	19008 <GOMP_taskloop_ull@@GOMP_4.5+0x2a0>  // b.none
   18ebc:	ldr	x2, [x29, #192]
   18ec0:	cmp	x0, #0x0
   18ec4:	add	x1, x0, #0x90
   18ec8:	csel	x1, x2, x1, eq  // eq = none
   18ecc:	ldp	x2, x3, [x1]
   18ed0:	stp	x2, x3, [x28]
   18ed4:	ldp	x2, x3, [x1, #16]
   18ed8:	stp	x2, x3, [x28, #16]
   18edc:	ldr	w2, [x29, #208]
   18ee0:	ldr	x1, [x1, #32]
   18ee4:	stp	x0, xzr, [x29, #224]
   18ee8:	str	w2, [x29, #312]
   18eec:	mov	x2, #0x1                   	// #1
   18ef0:	str	x2, [x29, #424]
   18ef4:	str	x1, [x28, #32]
   18ef8:	add	x1, x29, #0x200
   18efc:	str	xzr, [x29, #296]
   18f00:	stur	q0, [x29, #248]
   18f04:	stur	q0, [x1, #-248]
   18f08:	stur	q0, [x1, #-232]
   18f0c:	cbz	x0, 192dc <GOMP_taskloop_ull@@GOMP_4.5+0x574>
   18f10:	ldrb	w1, [x0, #205]
   18f14:	cbnz	w1, 18f20 <GOMP_taskloop_ull@@GOMP_4.5+0x1b8>
   18f18:	ldr	w1, [x29, #184]
   18f1c:	cbz	w1, 18f28 <GOMP_taskloop_ull@@GOMP_4.5+0x1c0>
   18f20:	mov	w1, #0x1                   	// #1
   18f24:	strb	w1, [x29, #429]
   18f28:	ldrb	w1, [x0, #204]
   18f2c:	ldr	x0, [x0, #40]
   18f30:	str	x0, [x29, #264]
   18f34:	strb	w1, [x29, #428]
   18f38:	ldr	x0, [x29, #200]
   18f3c:	str	x0, [x25, #80]
   18f40:	ldr	x1, [x29, #216]
   18f44:	cmp	x20, x21
   18f48:	ldr	x0, [x29, #448]
   18f4c:	str	x24, [x26]
   18f50:	add	x24, x24, x27
   18f54:	str	x24, [x26, #8]
   18f58:	sub	x0, x27, x0
   18f5c:	csel	x27, x0, x27, eq  // eq = none
   18f60:	mov	x0, x26
   18f64:	blr	x1
   18f68:	ldr	x0, [x29, #232]
   18f6c:	movi	v0.4s, #0x0
   18f70:	cbnz	x0, 18f7c <GOMP_taskloop_ull@@GOMP_4.5+0x214>
   18f74:	ldr	x0, [x29, #248]
   18f78:	cbz	x0, 18e9c <GOMP_taskloop_ull@@GOMP_4.5+0x134>
   18f7c:	add	x3, x22, #0x500
   18f80:	mov	w0, #0x1                   	// #1
   18f84:	ldaxr	w1, [x3]
   18f88:	cbnz	w1, 18f94 <GOMP_taskloop_ull@@GOMP_4.5+0x22c>
   18f8c:	stxr	w2, w0, [x3]
   18f90:	cbnz	w2, 18f84 <GOMP_taskloop_ull@@GOMP_4.5+0x21c>
   18f94:	cmp	w1, #0x0
   18f98:	b.ne	19bf8 <GOMP_taskloop_ull@@GOMP_4.5+0xe90>  // b.any
   18f9c:	ldr	x5, [x29, #232]
   18fa0:	cbnz	x5, 192f0 <GOMP_taskloop_ull@@GOMP_4.5+0x588>
   18fa4:	ldr	x1, [x29, #248]
   18fa8:	mov	x0, x1
   18fac:	cbz	x1, 18fc0 <GOMP_taskloop_ull@@GOMP_4.5+0x258>
   18fb0:	stur	xzr, [x0, #-112]
   18fb4:	ldr	x0, [x0]
   18fb8:	cmp	x1, x0
   18fbc:	b.ne	18fb0 <GOMP_taskloop_ull@@GOMP_4.5+0x248>  // b.any
   18fc0:	ldxr	w0, [x3]
   18fc4:	stlxr	w1, wzr, [x3]
   18fc8:	cbnz	w1, 18fc0 <GOMP_taskloop_ull@@GOMP_4.5+0x258>
   18fcc:	tbz	w0, #31, 18e9c <GOMP_taskloop_ull@@GOMP_4.5+0x134>
   18fd0:	mov	x0, x3
   18fd4:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   18fd8:	ldr	x19, [x25, #80]
   18fdc:	movi	v0.4s, #0x0
   18fe0:	ldr	x0, [x19, #56]
   18fe4:	cbz	x0, 18ea8 <GOMP_taskloop_ull@@GOMP_4.5+0x140>
   18fe8:	bl	88b0 <free@plt>
   18fec:	add	x20, x20, #0x1
   18ff0:	ldr	x0, [x19]
   18ff4:	str	x0, [x25, #80]
   18ff8:	movi	v0.4s, #0x0
   18ffc:	cmp	x23, x20
   19000:	b.ne	18ebc <GOMP_taskloop_ull@@GOMP_4.5+0x154>  // b.any
   19004:	nop
   19008:	ldr	w0, [x29, #180]
   1900c:	cbnz	w0, 19014 <GOMP_taskloop_ull@@GOMP_4.5+0x2ac>
   19010:	bl	17598 <GOMP_taskgroup_end@@GOMP_4.0>
   19014:	mov	sp, x29
   19018:	ldp	x19, x20, [sp, #16]
   1901c:	ldp	x21, x22, [sp, #32]
   19020:	ldp	x23, x24, [sp, #48]
   19024:	ldp	x25, x26, [sp, #64]
   19028:	ldp	x27, x28, [sp, #80]
   1902c:	ldp	x29, x30, [sp], #432
   19030:	ret
   19034:	cmp	x24, x3
   19038:	b.ls	19014 <GOMP_taskloop_ull@@GOMP_4.5+0x2ac>  // b.plast
   1903c:	ldr	x0, [x29, #448]
   19040:	sub	x21, x24, x3
   19044:	mvn	x0, x0
   19048:	add	x21, x21, x0
   1904c:	ldr	x0, [x29, #448]
   19050:	neg	x0, x0
   19054:	udiv	x21, x21, x0
   19058:	tbnz	w20, #9, 18de8 <GOMP_taskloop_ull@@GOMP_4.5+0x80>
   1905c:	cbnz	x6, 19068 <GOMP_taskloop_ull@@GOMP_4.5+0x300>
   19060:	cbz	x22, 19714 <GOMP_taskloop_ull@@GOMP_4.5+0x9ac>
   19064:	ldr	w6, [x22]
   19068:	cmp	x21, x6
   1906c:	b.ls	19238 <GOMP_taskloop_ull@@GOMP_4.5+0x4d0>  // b.plast
   19070:	udiv	x3, x21, x6
   19074:	mov	x23, x6
   19078:	ldr	x0, [x29, #448]
   1907c:	msub	x6, x3, x6, x21
   19080:	mul	x27, x3, x0
   19084:	cbz	x6, 18e20 <GOMP_taskloop_ull@@GOMP_4.5+0xb8>
   19088:	add	x27, x27, x0
   1908c:	sub	x21, x6, #0x1
   19090:	b	18e20 <GOMP_taskloop_ull@@GOMP_4.5+0xb8>
   19094:	add	x0, x10, x11
   19098:	ldr	x25, [x0, #80]
   1909c:	cbz	x25, 190a8 <GOMP_taskloop_ull@@GOMP_4.5+0x340>
   190a0:	ldrb	w0, [x25, #205]
   190a4:	cbnz	w0, 18e58 <GOMP_taskloop_ull@@GOMP_4.5+0xf0>
   190a8:	ldr	w0, [x22]
   190ac:	ldr	w1, [x22, #1320]
   190b0:	lsl	w0, w0, #6
   190b4:	add	x1, x1, x23
   190b8:	cmp	x1, x0
   190bc:	b.hi	18e58 <GOMP_taskloop_ull@@GOMP_4.5+0xf0>  // b.pmore
   190c0:	lsl	x0, x23, #3
   190c4:	mov	x1, sp
   190c8:	add	x0, x0, #0xf
   190cc:	str	x1, [x29, #112]
   190d0:	and	x0, x0, #0xfffffffffffffff0
   190d4:	sub	sp, sp, x0
   190d8:	mov	x0, sp
   190dc:	str	x0, [x29, #192]
   190e0:	ldr	x0, [x25, #40]
   190e4:	str	x0, [x29, #168]
   190e8:	cbz	x23, 19378 <GOMP_taskloop_ull@@GOMP_4.5+0x610>
   190ec:	ubfx	x1, x20, #1, #1
   190f0:	add	x0, x4, #0xcf
   190f4:	stp	x0, x1, [x29, #144]
   190f8:	neg	x1, x4
   190fc:	mov	x20, #0x0                   	// #0
   19100:	str	x1, [x29, #136]
   19104:	add	x10, x10, x11
   19108:	ldr	x1, [x29, #200]
   1910c:	str	x22, [x29, #104]
   19110:	mov	x22, x20
   19114:	mov	x20, x27
   19118:	add	x19, x1, x0
   1911c:	mov	x27, x10
   19120:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   19124:	add	x0, x0, #0x2b0
   19128:	str	x21, [x29, #120]
   1912c:	str	x0, [x29, #128]
   19130:	str	x23, [x29, #160]
   19134:	b	19190 <GOMP_taskloop_ull@@GOMP_4.5+0x428>
   19138:	blr	x28
   1913c:	mov	w0, #0x1                   	// #1
   19140:	strb	w0, [x21, #206]
   19144:	ldr	x0, [x29, #120]
   19148:	str	x24, [x23]
   1914c:	add	x24, x24, x20
   19150:	str	x24, [x23, #8]
   19154:	cmp	x22, x0
   19158:	add	x22, x22, #0x1
   1915c:	ldr	x0, [x29, #216]
   19160:	stp	x0, x23, [x21, #184]
   19164:	ldr	x0, [x29, #448]
   19168:	str	x25, [x27, #80]
   1916c:	sub	x0, x20, x0
   19170:	csel	x20, x0, x20, eq  // eq = none
   19174:	mov	w0, #0x2                   	// #2
   19178:	str	w0, [x21, #200]
   1917c:	ldr	x0, [x29, #160]
   19180:	cmp	x0, x22
   19184:	ldrb	w0, [x29, #152]
   19188:	strb	w0, [x21, #205]
   1918c:	b.eq	19370 <GOMP_taskloop_ull@@GOMP_4.5+0x608>  // b.none
   19190:	mov	x0, x19
   19194:	bl	b2f8 <fprintf@plt+0x2838>
   19198:	mov	x21, x0
   1919c:	mov	x8, x0
   191a0:	str	x0, [x29, #184]
   191a4:	mov	x1, x26
   191a8:	ldr	x0, [x29, #192]
   191ac:	str	x25, [x8], #144
   191b0:	ldr	x2, [x27, #80]
   191b4:	str	x21, [x0, x22, lsl #3]
   191b8:	ldr	x0, [x29, #128]
   191bc:	cmp	x2, #0x0
   191c0:	add	x2, x2, #0x90
   191c4:	csel	x2, x0, x2, eq  // eq = none
   191c8:	ldr	x0, [x29, #144]
   191cc:	ldp	x6, x7, [x2]
   191d0:	stp	x6, x7, [x21, #144]
   191d4:	add	x4, x21, x0
   191d8:	ldp	x6, x7, [x2, #16]
   191dc:	stp	x6, x7, [x8, #16]
   191e0:	ldr	x2, [x2, #32]
   191e4:	str	x2, [x8, #32]
   191e8:	mov	x2, #0x1                   	// #1
   191ec:	str	x2, [x21, #200]
   191f0:	ldr	x0, [x29, #136]
   191f4:	str	xzr, [x21, #8]
   191f8:	ldr	x3, [x29, #168]
   191fc:	str	x21, [x27, #80]
   19200:	ldrb	w2, [x25, #204]
   19204:	and	x23, x4, x0
   19208:	stp	x3, xzr, [x21, #40]
   1920c:	mov	x0, x23
   19210:	ldr	w3, [x29, #208]
   19214:	stp	xzr, xzr, [x21, #24]
   19218:	stp	xzr, xzr, [x21, #56]
   1921c:	str	xzr, [x21, #72]
   19220:	str	w3, [x21, #88]
   19224:	strb	w2, [x21, #204]
   19228:	cbnz	x28, 19138 <GOMP_taskloop_ull@@GOMP_4.5+0x3d0>
   1922c:	ldr	x2, [x29, #200]
   19230:	bl	8580 <memcpy@plt>
   19234:	b	19144 <GOMP_taskloop_ull@@GOMP_4.5+0x3dc>
   19238:	and	w0, w20, #0x800
   1923c:	str	w0, [x29, #180]
   19240:	mov	x23, x21
   19244:	ldr	x27, [x29, #448]
   19248:	tbnz	w20, #11, 18e2c <GOMP_taskloop_ull@@GOMP_4.5+0xc4>
   1924c:	and	w0, w20, #0x1000
   19250:	str	w0, [x29, #180]
   19254:	cbz	x22, 19738 <GOMP_taskloop_ull@@GOMP_4.5+0x9d0>
   19258:	add	x1, x10, x11
   1925c:	mov	x0, #0x40                  	// #64
   19260:	stp	x4, x11, [x29, #160]
   19264:	ldr	x1, [x1, #80]
   19268:	stp	x10, x1, [x29, #184]
   1926c:	ldr	x25, [x1, #40]
   19270:	bl	b2f8 <fprintf@plt+0x2838>
   19274:	stp	x25, xzr, [x0]
   19278:	stp	xzr, xzr, [x0, #24]
   1927c:	str	x0, [x29, #208]
   19280:	ldp	x4, x11, [x29, #160]
   19284:	ldp	x10, x1, [x29, #184]
   19288:	cbz	x25, 19290 <GOMP_taskloop_ull@@GOMP_4.5+0x528>
   1928c:	ldr	x25, [x25, #40]
   19290:	str	x25, [x0, #40]
   19294:	strh	wzr, [x0, #48]
   19298:	strb	wzr, [x0, #50]
   1929c:	str	wzr, [x0, #52]
   192a0:	str	xzr, [x0, #56]
   192a4:	str	x0, [x1, #40]
   192a8:	and	w0, w20, #0x1000
   192ac:	cbz	w0, 18e38 <GOMP_taskloop_ull@@GOMP_4.5+0xd0>
   192b0:	ldr	x0, [x26, #16]
   192b4:	str	wzr, [x29, #180]
   192b8:	stp	x11, x10, [x29, #184]
   192bc:	str	x4, [x29, #208]
   192c0:	bl	17c48 <GOMP_taskgroup_reduction_register@@GOMP_5.0>
   192c4:	ldp	x11, x10, [x29, #184]
   192c8:	ldr	x4, [x29, #208]
   192cc:	b	18e38 <GOMP_taskloop_ull@@GOMP_4.5+0xd0>
   192d0:	sub	x27, x3, x24
   192d4:	mov	x23, #0x1                   	// #1
   192d8:	b	18e20 <GOMP_taskloop_ull@@GOMP_4.5+0xb8>
   192dc:	ldr	w0, [x29, #184]
   192e0:	cbz	w0, 18f38 <GOMP_taskloop_ull@@GOMP_4.5+0x1d0>
   192e4:	mov	w0, #0x1                   	// #1
   192e8:	strb	w0, [x29, #429]
   192ec:	b	18f38 <GOMP_taskloop_ull@@GOMP_4.5+0x1d0>
   192f0:	ldr	x0, [x29, #200]
   192f4:	add	x19, x0, #0x8
   192f8:	ldr	x6, [x5, #8]
   192fc:	mov	x0, x5
   19300:	ldp	x1, x5, [x5, #24]
   19304:	mov	x2, x6
   19308:	cbz	x6, 19320 <GOMP_taskloop_ull@@GOMP_4.5+0x5b8>
   1930c:	nop
   19310:	stur	xzr, [x2, #-112]
   19314:	ldr	x2, [x2]
   19318:	cmp	x6, x2
   1931c:	b.ne	19310 <GOMP_taskloop_ull@@GOMP_4.5+0x5a8>  // b.any
   19320:	stp	x5, x1, [x29, #152]
   19324:	str	x3, [x29, #168]
   19328:	bl	88b0 <free@plt>
   1932c:	ldr	x1, [x29, #160]
   19330:	mov	x0, x19
   19334:	bl	13428 <GOMP_single_copy_end@@GOMP_1.0+0x120>
   19338:	ldr	x5, [x29, #152]
   1933c:	movi	v0.4s, #0x0
   19340:	ldr	x3, [x29, #168]
   19344:	cbnz	x5, 192f8 <GOMP_taskloop_ull@@GOMP_4.5+0x590>
   19348:	str	xzr, [x29, #232]
   1934c:	b	18fc0 <GOMP_taskloop_ull@@GOMP_4.5+0x258>
   19350:	udiv	x3, x21, x23
   19354:	ldr	x1, [x29, #448]
   19358:	msub	x0, x3, x23, x21
   1935c:	mul	x27, x3, x1
   19360:	cbz	x0, 18e20 <GOMP_taskloop_ull@@GOMP_4.5+0xb8>
   19364:	add	x27, x27, x1
   19368:	sub	x21, x0, #0x1
   1936c:	b	18e20 <GOMP_taskloop_ull@@GOMP_4.5+0xb8>
   19370:	ldr	x22, [x29, #104]
   19374:	ldr	x23, [x29, #160]
   19378:	add	x21, x22, #0x500
   1937c:	mov	w0, #0x1                   	// #1
   19380:	ldaxr	w1, [x21]
   19384:	cbnz	w1, 19390 <GOMP_taskloop_ull@@GOMP_4.5+0x628>
   19388:	stxr	w2, w0, [x21]
   1938c:	cbnz	w2, 19380 <GOMP_taskloop_ull@@GOMP_4.5+0x618>
   19390:	cmp	w1, #0x0
   19394:	b.ne	19c10 <GOMP_taskloop_ull@@GOMP_4.5+0xea8>  // b.any
   19398:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1939c:	cmp	x28, #0x0
   193a0:	cset	w1, eq  // eq = none
   193a4:	ldrb	w0, [x0, #1356]
   193a8:	tst	w1, w0
   193ac:	b.ne	19b60 <GOMP_taskloop_ull@@GOMP_4.5+0xdf8>  // b.any
   193b0:	ldr	x0, [x29, #168]
   193b4:	cbz	x0, 193c8 <GOMP_taskloop_ull@@GOMP_4.5+0x660>
   193b8:	ldr	x1, [x29, #168]
   193bc:	ldr	x0, [x1, #56]
   193c0:	add	x0, x0, x23
   193c4:	str	x0, [x1, #56]
   193c8:	add	x24, x25, #0x8
   193cc:	mov	x28, #0x0                   	// #0
   193d0:	cbz	x23, 194c8 <GOMP_taskloop_ull@@GOMP_4.5+0x760>
   193d4:	add	x26, x29, #0xe0
   193d8:	add	x20, x22, #0x508
   193dc:	str	x21, [x29, #200]
   193e0:	add	x0, x22, #0x600
   193e4:	ldr	w21, [x29, #208]
   193e8:	str	x26, [x29, #216]
   193ec:	mov	x26, x24
   193f0:	mov	x24, x20
   193f4:	str	x0, [x29, #184]
   193f8:	ldr	x20, [x29, #168]
   193fc:	nop
   19400:	ldr	x1, [x29, #192]
   19404:	ldr	x0, [x25, #8]
   19408:	ldr	x19, [x1, x28, lsl #3]
   1940c:	add	x27, x19, #0x70
   19410:	cbnz	x0, 196c8 <GOMP_taskloop_ull@@GOMP_4.5+0x960>
   19414:	cmp	w21, #0x0
   19418:	ldr	x0, [x25, #24]
   1941c:	b.gt	19690 <GOMP_taskloop_ull@@GOMP_4.5+0x928>
   19420:	cbz	x0, 19648 <GOMP_taskloop_ull@@GOMP_4.5+0x8e0>
   19424:	ldr	x1, [x0, #8]
   19428:	stp	x0, x1, [x19, #112]
   1942c:	str	x27, [x25, #24]
   19430:	ldr	x0, [x19, #112]
   19434:	str	x27, [x0, #8]
   19438:	ldr	x0, [x19, #120]
   1943c:	str	x27, [x0]
   19440:	cbz	x20, 195c0 <GOMP_taskloop_ull@@GOMP_4.5+0x858>
   19444:	ldr	x0, [x20, #8]
   19448:	add	x5, x20, #0x8
   1944c:	add	x27, x19, #0x80
   19450:	cbnz	x0, 1957c <GOMP_taskloop_ull@@GOMP_4.5+0x814>
   19454:	cmp	w21, #0x0
   19458:	ldr	x0, [x20, #24]
   1945c:	b.gt	1953c <GOMP_taskloop_ull@@GOMP_4.5+0x7d4>
   19460:	cbz	x0, 19704 <GOMP_taskloop_ull@@GOMP_4.5+0x99c>
   19464:	ldr	x1, [x0, #8]
   19468:	stp	x0, x1, [x19, #128]
   1946c:	str	x27, [x20, #24]
   19470:	ldr	x0, [x19, #128]
   19474:	str	x27, [x0, #8]
   19478:	ldr	x0, [x19, #136]
   1947c:	str	x27, [x0]
   19480:	ldr	x0, [x22, #1288]
   19484:	cbnz	x0, 19658 <GOMP_taskloop_ull@@GOMP_4.5+0x8f0>
   19488:	ldr	x0, [x22, #1304]
   1948c:	add	x1, x19, #0x60
   19490:	cbz	x0, 19638 <GOMP_taskloop_ull@@GOMP_4.5+0x8d0>
   19494:	ldr	x5, [x0, #8]
   19498:	stp	x0, x5, [x19, #96]
   1949c:	str	x1, [x0, #8]
   194a0:	ldr	x0, [x19, #104]
   194a4:	str	x1, [x0]
   194a8:	movi	v1.2s, #0x1
   194ac:	ldr	d0, [x22, #1320]
   194b0:	add	x28, x28, #0x1
   194b4:	cmp	x23, x28
   194b8:	add	v0.2s, v0.2s, v1.2s
   194bc:	str	d0, [x22, #1320]
   194c0:	b.ne	19400 <GOMP_taskloop_ull@@GOMP_4.5+0x698>  // b.any
   194c4:	ldr	x21, [x29, #200]
   194c8:	ldr	w0, [x22, #132]
   194cc:	ldrb	w1, [x25, #204]
   194d0:	orr	w0, w0, #0x1
   194d4:	ldr	w2, [x22, #1328]
   194d8:	eor	w1, w1, #0x1
   194dc:	str	w0, [x22, #132]
   194e0:	ldr	w0, [x22]
   194e4:	add	w3, w2, w1
   194e8:	cmp	w3, w0
   194ec:	b.cs	19520 <GOMP_taskloop_ull@@GOMP_4.5+0x7b8>  // b.hs, b.nlast
   194f0:	sub	w0, w0, w2
   194f4:	sub	w1, w0, w1
   194f8:	cmp	x23, w1, sxtw
   194fc:	csel	w1, w23, w1, cc  // cc = lo, ul, last
   19500:	ldxr	w0, [x21]
   19504:	stlxr	w2, wzr, [x21]
   19508:	cbnz	w2, 19500 <GOMP_taskloop_ull@@GOMP_4.5+0x798>
   1950c:	tbnz	w0, #31, 198d8 <GOMP_taskloop_ull@@GOMP_4.5+0xb70>
   19510:	cbz	w1, 19530 <GOMP_taskloop_ull@@GOMP_4.5+0x7c8>
   19514:	add	x0, x22, #0x80
   19518:	bl	1d150 <omp_get_num_procs@@OMP_1.0+0x5a0>
   1951c:	b	19530 <GOMP_taskloop_ull@@GOMP_4.5+0x7c8>
   19520:	ldxr	w0, [x21]
   19524:	stlxr	w1, wzr, [x21]
   19528:	cbnz	w1, 19520 <GOMP_taskloop_ull@@GOMP_4.5+0x7b8>
   1952c:	tbnz	w0, #31, 19b54 <GOMP_taskloop_ull@@GOMP_4.5+0xdec>
   19530:	ldr	x0, [x29, #112]
   19534:	mov	sp, x0
   19538:	b	19008 <GOMP_taskloop_ull@@GOMP_4.5+0x2a0>
   1953c:	cbz	x0, 19ae8 <GOMP_taskloop_ull@@GOMP_4.5+0xd80>
   19540:	mov	x0, #0x28                  	// #40
   19544:	str	x5, [x29, #208]
   19548:	bl	b2f8 <fprintf@plt+0x2838>
   1954c:	mov	x1, x0
   19550:	ldur	q0, [x20, #24]
   19554:	stp	xzr, xzr, [x0, #24]
   19558:	ldr	x5, [x29, #208]
   1955c:	str	wzr, [x1]
   19560:	stur	q0, [x1, #8]
   19564:	mov	x0, x5
   19568:	bl	2b498 <acc_set_cuda_stream@@OACC_2.0+0x490>
   1956c:	ldr	x5, [x29, #208]
   19570:	ldr	x0, [x20, #8]
   19574:	str	xzr, [x5, #16]
   19578:	cbz	x0, 19ae8 <GOMP_taskloop_ull@@GOMP_4.5+0xd80>
   1957c:	ldr	x1, [x29, #216]
   19580:	mov	x0, x5
   19584:	str	x5, [x29, #208]
   19588:	str	w21, [x29, #224]
   1958c:	bl	2b798 <acc_set_cuda_stream@@OACC_2.0+0x790>
   19590:	ldr	x5, [x29, #208]
   19594:	cbz	x0, 19ae8 <GOMP_taskloop_ull@@GOMP_4.5+0xd80>
   19598:	ldr	x1, [x0, #8]
   1959c:	cbz	x1, 19b20 <GOMP_taskloop_ull@@GOMP_4.5+0xdb8>
   195a0:	ldr	x5, [x1, #8]
   195a4:	stp	x1, x5, [x19, #128]
   195a8:	str	x27, [x0, #8]
   195ac:	ldr	x0, [x19, #128]
   195b0:	str	x27, [x0, #8]
   195b4:	ldr	x0, [x19, #136]
   195b8:	str	x27, [x0]
   195bc:	nop
   195c0:	ldr	x0, [x22, #1288]
   195c4:	cbnz	x0, 19658 <GOMP_taskloop_ull@@GOMP_4.5+0x8f0>
   195c8:	cmp	w21, #0x0
   195cc:	ldr	x0, [x24, #16]
   195d0:	b.le	1948c <GOMP_taskloop_ull@@GOMP_4.5+0x724>
   195d4:	cbz	x0, 1960c <GOMP_taskloop_ull@@GOMP_4.5+0x8a4>
   195d8:	mov	x0, #0x28                  	// #40
   195dc:	bl	b2f8 <fprintf@plt+0x2838>
   195e0:	ldr	x2, [x29, #184]
   195e4:	mov	x1, x0
   195e8:	mov	x0, x24
   195ec:	ldur	q0, [x2, #-232]
   195f0:	str	wzr, [x1]
   195f4:	stp	xzr, xzr, [x1, #24]
   195f8:	stur	q0, [x1, #8]
   195fc:	bl	2b498 <acc_set_cuda_stream@@OACC_2.0+0x490>
   19600:	ldr	x0, [x24]
   19604:	str	xzr, [x24, #16]
   19608:	cbnz	x0, 19658 <GOMP_taskloop_ull@@GOMP_4.5+0x8f0>
   1960c:	mov	x0, #0x28                  	// #40
   19610:	bl	b2f8 <fprintf@plt+0x2838>
   19614:	mov	x27, x0
   19618:	mov	x0, x24
   1961c:	mov	x1, x27
   19620:	str	w21, [x27]
   19624:	stp	xzr, xzr, [x27, #8]
   19628:	stp	xzr, xzr, [x27, #24]
   1962c:	bl	2b498 <acc_set_cuda_stream@@OACC_2.0+0x490>
   19630:	mov	x0, x27
   19634:	b	1966c <GOMP_taskloop_ull@@GOMP_4.5+0x904>
   19638:	dup	v0.2d, x1
   1963c:	str	q0, [x19, #96]
   19640:	str	x1, [x22, #1304]
   19644:	b	194a8 <GOMP_taskloop_ull@@GOMP_4.5+0x740>
   19648:	dup	v0.2d, x27
   1964c:	str	q0, [x19, #112]
   19650:	str	x27, [x25, #24]
   19654:	b	19440 <GOMP_taskloop_ull@@GOMP_4.5+0x6d8>
   19658:	ldr	x1, [x29, #216]
   1965c:	mov	x0, x24
   19660:	str	w21, [x29, #224]
   19664:	bl	2b798 <acc_set_cuda_stream@@OACC_2.0+0x790>
   19668:	cbz	x0, 1960c <GOMP_taskloop_ull@@GOMP_4.5+0x8a4>
   1966c:	ldr	x1, [x0, #8]
   19670:	add	x5, x19, #0x60
   19674:	cbz	x1, 19ac8 <GOMP_taskloop_ull@@GOMP_4.5+0xd60>
   19678:	ldr	x0, [x1, #8]
   1967c:	stp	x1, x0, [x19, #96]
   19680:	str	x5, [x1, #8]
   19684:	ldr	x0, [x19, #104]
   19688:	str	x5, [x0]
   1968c:	b	194a8 <GOMP_taskloop_ull@@GOMP_4.5+0x740>
   19690:	cbz	x0, 19a30 <GOMP_taskloop_ull@@GOMP_4.5+0xcc8>
   19694:	mov	x0, #0x28                  	// #40
   19698:	bl	b2f8 <fprintf@plt+0x2838>
   1969c:	str	x0, [x29, #208]
   196a0:	mov	x0, x26
   196a4:	ldur	q0, [x25, #24]
   196a8:	ldr	x1, [x29, #208]
   196ac:	str	wzr, [x1]
   196b0:	stp	xzr, xzr, [x1, #24]
   196b4:	stur	q0, [x1, #8]
   196b8:	bl	2b498 <acc_set_cuda_stream@@OACC_2.0+0x490>
   196bc:	ldr	x0, [x26]
   196c0:	str	xzr, [x26, #16]
   196c4:	cbz	x0, 19a30 <GOMP_taskloop_ull@@GOMP_4.5+0xcc8>
   196c8:	ldr	x1, [x29, #216]
   196cc:	mov	x0, x26
   196d0:	str	w21, [x29, #224]
   196d4:	bl	2b798 <acc_set_cuda_stream@@OACC_2.0+0x790>
   196d8:	cbz	x0, 19a30 <GOMP_taskloop_ull@@GOMP_4.5+0xcc8>
   196dc:	ldr	x1, [x0, #8]
   196e0:	cbz	x1, 19ab8 <GOMP_taskloop_ull@@GOMP_4.5+0xd50>
   196e4:	ldr	x5, [x1, #8]
   196e8:	stp	x1, x5, [x19, #112]
   196ec:	str	x27, [x0, #8]
   196f0:	ldr	x0, [x19, #112]
   196f4:	str	x27, [x0, #8]
   196f8:	ldr	x0, [x19, #120]
   196fc:	str	x27, [x0]
   19700:	b	19440 <GOMP_taskloop_ull@@GOMP_4.5+0x6d8>
   19704:	dup	v0.2d, x27
   19708:	str	q0, [x19, #128]
   1970c:	str	x27, [x20, #24]
   19710:	b	19480 <GOMP_taskloop_ull@@GOMP_4.5+0x718>
   19714:	cmp	x21, #0x1
   19718:	b.hi	19ad8 <GOMP_taskloop_ull@@GOMP_4.5+0xd70>  // b.pmore
   1971c:	ldr	x27, [x29, #448]
   19720:	mov	x23, x21
   19724:	and	w0, w20, #0x800
   19728:	str	w0, [x29, #180]
   1972c:	tbnz	w20, #11, 18e2c <GOMP_taskloop_ull@@GOMP_4.5+0xc4>
   19730:	and	w0, w20, #0x1000
   19734:	str	w0, [x29, #180]
   19738:	ldr	w0, [x29, #180]
   1973c:	cbnz	w0, 192b0 <GOMP_taskloop_ull@@GOMP_4.5+0x548>
   19740:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   19744:	ldr	w0, [x0, #1360]
   19748:	cmp	w0, w19
   1974c:	csel	w0, w0, w19, le
   19750:	str	w0, [x29, #208]
   19754:	b	18e58 <GOMP_taskloop_ull@@GOMP_4.5+0xf0>
   19758:	ldr	x0, [x29, #200]
   1975c:	neg	x2, x4
   19760:	mov	x3, sp
   19764:	add	x12, x10, x11
   19768:	add	x0, x0, x4
   1976c:	sub	x4, x4, #0x1
   19770:	sub	x0, x0, #0x1
   19774:	str	x3, [x29, #168]
   19778:	and	x1, x0, x2
   1977c:	add	x0, x23, x23, lsl #1
   19780:	str	x1, [x29, #200]
   19784:	add	x0, x23, x0, lsl #2
   19788:	madd	x1, x1, x23, x4
   1978c:	sub	x3, x3, x0, lsl #4
   19790:	str	x3, [x29, #184]
   19794:	add	x1, x1, #0xf
   19798:	mov	sp, x3
   1979c:	and	x1, x1, #0xfffffffffffffff0
   197a0:	lsl	x0, x0, #4
   197a4:	sub	sp, sp, x1
   197a8:	ldr	x1, [x12, #80]
   197ac:	add	x4, sp, x4
   197b0:	and	x19, x4, x2
   197b4:	mov	x3, x1
   197b8:	cbz	x23, 198cc <GOMP_taskloop_ull@@GOMP_4.5+0xb64>
   197bc:	ldr	x25, [x29, #184]
   197c0:	and	w1, w20, #0x2
   197c4:	stp	x11, x10, [x29, #120]
   197c8:	add	x2, x0, x25
   197cc:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   197d0:	add	x4, x0, #0x2b0
   197d4:	mov	x20, x2
   197d8:	stp	x19, x21, [x29, #136]
   197dc:	stp	x23, x27, [x29, #152]
   197e0:	mov	x27, x3
   197e4:	ldr	w23, [x29, #208]
   197e8:	str	w1, [x29, #192]
   197ec:	str	x22, [x29, #208]
   197f0:	mov	x22, x25
   197f4:	mov	x25, x4
   197f8:	str	x24, [x29, #432]
   197fc:	mov	x24, x26
   19800:	mov	x26, x12
   19804:	ldr	x21, [x29, #200]
   19808:	b	19858 <GOMP_taskloop_ull@@GOMP_4.5+0xaf0>
   1980c:	ldrb	w4, [x3, #205]
   19810:	cbnz	w4, 1981c <GOMP_taskloop_ull@@GOMP_4.5+0xab4>
   19814:	ldr	w0, [x29, #192]
   19818:	cbz	w0, 19824 <GOMP_taskloop_ull@@GOMP_4.5+0xabc>
   1981c:	mov	w0, #0x1                   	// #1
   19820:	strb	w0, [x22, #205]
   19824:	ldrb	w4, [x3, #204]
   19828:	ldr	x3, [x3, #40]
   1982c:	str	x3, [x22, #40]
   19830:	strb	w4, [x22, #204]
   19834:	str	x22, [x26, #80]
   19838:	mov	x0, x19
   1983c:	mov	x1, x24
   19840:	add	x22, x22, #0xd0
   19844:	blr	x28
   19848:	add	x19, x19, x21
   1984c:	cmp	x20, x22
   19850:	b.eq	198ec <GOMP_taskloop_ull@@GOMP_4.5+0xb84>  // b.none
   19854:	ldr	x3, [x26, #80]
   19858:	mov	x5, x22
   1985c:	cmp	x3, #0x0
   19860:	add	x4, x3, #0x90
   19864:	csel	x4, x25, x4, eq  // eq = none
   19868:	mov	w0, #0x1                   	// #1
   1986c:	str	x27, [x5], #144
   19870:	ldp	x6, x7, [x4]
   19874:	stp	x6, x7, [x22, #144]
   19878:	ldp	x6, x7, [x4, #16]
   1987c:	stp	x6, x7, [x5, #16]
   19880:	ldr	x4, [x4, #32]
   19884:	str	x4, [x5, #32]
   19888:	str	xzr, [x22, #8]
   1988c:	stp	xzr, xzr, [x22, #24]
   19890:	stp	xzr, xzr, [x22, #40]
   19894:	stp	xzr, xzr, [x22, #56]
   19898:	str	xzr, [x22, #72]
   1989c:	str	w23, [x22, #88]
   198a0:	str	w0, [x22, #200]
   198a4:	strb	wzr, [x22, #204]
   198a8:	strb	wzr, [x22, #205]
   198ac:	strb	wzr, [x22, #206]
   198b0:	strb	wzr, [x22, #207]
   198b4:	cbnz	x3, 1980c <GOMP_taskloop_ull@@GOMP_4.5+0xaa4>
   198b8:	ldr	w0, [x29, #192]
   198bc:	cbz	w0, 19834 <GOMP_taskloop_ull@@GOMP_4.5+0xacc>
   198c0:	mov	w0, #0x1                   	// #1
   198c4:	strb	w0, [x22, #205]
   198c8:	b	19834 <GOMP_taskloop_ull@@GOMP_4.5+0xacc>
   198cc:	ldr	x0, [x29, #168]
   198d0:	mov	sp, x0
   198d4:	b	19008 <GOMP_taskloop_ull@@GOMP_4.5+0x2a0>
   198d8:	mov	x0, x21
   198dc:	str	w1, [x29, #216]
   198e0:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   198e4:	ldr	w1, [x29, #216]
   198e8:	b	19510 <GOMP_taskloop_ull@@GOMP_4.5+0x7a8>
   198ec:	ldp	x11, x10, [x29, #120]
   198f0:	mov	x25, #0x0                   	// #0
   198f4:	ldr	x0, [x29, #184]
   198f8:	ldr	x22, [x29, #208]
   198fc:	add	x20, x0, #0x8
   19900:	add	x26, x10, x11
   19904:	add	x22, x22, #0x500
   19908:	ldp	x19, x21, [x29, #136]
   1990c:	ldp	x23, x27, [x29, #152]
   19910:	ldr	x24, [x29, #432]
   19914:	b	1993c <GOMP_taskloop_ull@@GOMP_4.5+0xbd4>
   19918:	ldr	x28, [x26, #80]
   1991c:	ldr	x0, [x28, #56]
   19920:	cbnz	x0, 19a28 <GOMP_taskloop_ull@@GOMP_4.5+0xcc0>
   19924:	ldr	x0, [x28]
   19928:	str	x0, [x26, #80]
   1992c:	add	x25, x25, #0x1
   19930:	add	x20, x20, #0xd0
   19934:	cmp	x23, x25
   19938:	b.eq	198cc <GOMP_taskloop_ull@@GOMP_4.5+0xb64>  // b.none
   1993c:	sub	x0, x20, #0x8
   19940:	str	x0, [x26, #80]
   19944:	ldr	x0, [x29, #448]
   19948:	cmp	x25, x21
   1994c:	ldr	x1, [x29, #200]
   19950:	sub	x0, x27, x0
   19954:	str	x24, [x19]
   19958:	add	x24, x24, x27
   1995c:	csel	x27, x0, x27, eq  // eq = none
   19960:	mov	x0, x19
   19964:	str	x24, [x19, #8]
   19968:	add	x19, x19, x1
   1996c:	ldr	x1, [x29, #216]
   19970:	blr	x1
   19974:	ldr	x0, [x20]
   19978:	cbnz	x0, 19984 <GOMP_taskloop_ull@@GOMP_4.5+0xc1c>
   1997c:	ldr	x0, [x20, #16]
   19980:	cbz	x0, 19918 <GOMP_taskloop_ull@@GOMP_4.5+0xbb0>
   19984:	mov	w0, #0x1                   	// #1
   19988:	ldaxr	w1, [x22]
   1998c:	cbnz	w1, 19998 <GOMP_taskloop_ull@@GOMP_4.5+0xc30>
   19990:	stxr	w2, w0, [x22]
   19994:	cbnz	w2, 19988 <GOMP_taskloop_ull@@GOMP_4.5+0xc20>
   19998:	cmp	w1, #0x0
   1999c:	b.ne	19c1c <GOMP_taskloop_ull@@GOMP_4.5+0xeb4>  // b.any
   199a0:	ldr	x28, [x20]
   199a4:	cbnz	x28, 199e4 <GOMP_taskloop_ull@@GOMP_4.5+0xc7c>
   199a8:	ldr	x1, [x20, #16]
   199ac:	mov	x0, x1
   199b0:	cbz	x1, 199c8 <GOMP_taskloop_ull@@GOMP_4.5+0xc60>
   199b4:	nop
   199b8:	stur	xzr, [x0, #-112]
   199bc:	ldr	x0, [x0]
   199c0:	cmp	x1, x0
   199c4:	b.ne	199b8 <GOMP_taskloop_ull@@GOMP_4.5+0xc50>  // b.any
   199c8:	ldxr	w0, [x22]
   199cc:	stlxr	w1, wzr, [x22]
   199d0:	cbnz	w1, 199c8 <GOMP_taskloop_ull@@GOMP_4.5+0xc60>
   199d4:	tbz	w0, #31, 19918 <GOMP_taskloop_ull@@GOMP_4.5+0xbb0>
   199d8:	mov	x0, x22
   199dc:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   199e0:	b	19918 <GOMP_taskloop_ull@@GOMP_4.5+0xbb0>
   199e4:	ldr	x3, [x28, #8]
   199e8:	mov	x0, x28
   199ec:	ldp	x1, x28, [x28, #24]
   199f0:	mov	x2, x3
   199f4:	cbz	x3, 19a08 <GOMP_taskloop_ull@@GOMP_4.5+0xca0>
   199f8:	stur	xzr, [x2, #-112]
   199fc:	ldr	x2, [x2]
   19a00:	cmp	x3, x2
   19a04:	b.ne	199f8 <GOMP_taskloop_ull@@GOMP_4.5+0xc90>  // b.any
   19a08:	str	x1, [x29, #208]
   19a0c:	bl	88b0 <free@plt>
   19a10:	ldr	x1, [x29, #208]
   19a14:	mov	x0, x20
   19a18:	bl	13428 <GOMP_single_copy_end@@GOMP_1.0+0x120>
   19a1c:	cbnz	x28, 199e4 <GOMP_taskloop_ull@@GOMP_4.5+0xc7c>
   19a20:	str	xzr, [x20]
   19a24:	b	199c8 <GOMP_taskloop_ull@@GOMP_4.5+0xc60>
   19a28:	bl	88b0 <free@plt>
   19a2c:	b	19924 <GOMP_taskloop_ull@@GOMP_4.5+0xbbc>
   19a30:	mov	x0, #0x28                  	// #40
   19a34:	bl	b2f8 <fprintf@plt+0x2838>
   19a38:	mov	x1, x0
   19a3c:	mov	x0, x26
   19a40:	str	x1, [x29, #208]
   19a44:	str	w21, [x1]
   19a48:	stp	xzr, xzr, [x1, #8]
   19a4c:	stp	xzr, xzr, [x1, #24]
   19a50:	bl	2b498 <acc_set_cuda_stream@@OACC_2.0+0x490>
   19a54:	ldr	x1, [x29, #208]
   19a58:	mov	x0, x1
   19a5c:	b	196dc <GOMP_taskloop_ull@@GOMP_4.5+0x974>
   19a60:	add	x0, x10, x11
   19a64:	ldr	x25, [x0, #80]
   19a68:	cbz	x25, 19b30 <GOMP_taskloop_ull@@GOMP_4.5+0xdc8>
   19a6c:	ldr	x0, [x25, #40]
   19a70:	cbz	x0, 19a94 <GOMP_taskloop_ull@@GOMP_4.5+0xd2c>
   19a74:	ldrb	w1, [x0, #49]
   19a78:	cbnz	w1, 19014 <GOMP_taskloop_ull@@GOMP_4.5+0x2ac>
   19a7c:	ldrb	w1, [x0, #50]
   19a80:	cbz	w1, 19a94 <GOMP_taskloop_ull@@GOMP_4.5+0xd2c>
   19a84:	ldr	x0, [x0]
   19a88:	cbz	x0, 19a94 <GOMP_taskloop_ull@@GOMP_4.5+0xd2c>
   19a8c:	ldrb	w0, [x0, #49]
   19a90:	cbnz	w0, 19014 <GOMP_taskloop_ull@@GOMP_4.5+0x2ac>
   19a94:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   19a98:	ldr	w0, [x0, #1360]
   19a9c:	cmp	w0, w19
   19aa0:	csel	w0, w0, w19, le
   19aa4:	str	w0, [x29, #208]
   19aa8:	tst	x20, #0x400
   19aac:	ccmp	x22, #0x0, #0x4, ne  // ne = any
   19ab0:	b.eq	18e58 <GOMP_taskloop_ull@@GOMP_4.5+0xf0>  // b.none
   19ab4:	b	190a0 <GOMP_taskloop_ull@@GOMP_4.5+0x338>
   19ab8:	dup	v0.2d, x27
   19abc:	str	q0, [x19, #112]
   19ac0:	str	x27, [x0, #8]
   19ac4:	b	19440 <GOMP_taskloop_ull@@GOMP_4.5+0x6d8>
   19ac8:	dup	v0.2d, x5
   19acc:	str	q0, [x19, #96]
   19ad0:	str	x5, [x0, #8]
   19ad4:	b	194a8 <GOMP_taskloop_ull@@GOMP_4.5+0x740>
   19ad8:	ldr	x0, [x29, #448]
   19adc:	mov	x23, #0x1                   	// #1
   19ae0:	mul	x27, x21, x0
   19ae4:	b	19724 <GOMP_taskloop_ull@@GOMP_4.5+0x9bc>
   19ae8:	mov	x0, #0x28                  	// #40
   19aec:	str	x5, [x29, #208]
   19af0:	bl	b2f8 <fprintf@plt+0x2838>
   19af4:	mov	x1, x0
   19af8:	ldr	x5, [x29, #208]
   19afc:	stp	xzr, xzr, [x0, #8]
   19b00:	stp	xzr, xzr, [x0, #24]
   19b04:	mov	x0, x5
   19b08:	str	w21, [x1]
   19b0c:	str	x1, [x29, #208]
   19b10:	bl	2b498 <acc_set_cuda_stream@@OACC_2.0+0x490>
   19b14:	ldr	x1, [x29, #208]
   19b18:	mov	x0, x1
   19b1c:	b	19598 <GOMP_taskloop_ull@@GOMP_4.5+0x830>
   19b20:	dup	v0.2d, x27
   19b24:	str	q0, [x19, #128]
   19b28:	str	x27, [x0, #8]
   19b2c:	b	195c0 <GOMP_taskloop_ull@@GOMP_4.5+0x858>
   19b30:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   19b34:	ldr	w0, [x0, #1360]
   19b38:	cmp	w0, w19
   19b3c:	csel	w0, w0, w19, le
   19b40:	str	w0, [x29, #208]
   19b44:	tst	x20, #0x400
   19b48:	ccmp	x22, #0x0, #0x4, ne  // ne = any
   19b4c:	b.eq	18e58 <GOMP_taskloop_ull@@GOMP_4.5+0xf0>  // b.none
   19b50:	b	190a8 <GOMP_taskloop_ull@@GOMP_4.5+0x340>
   19b54:	mov	x0, x21
   19b58:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   19b5c:	b	19530 <GOMP_taskloop_ull@@GOMP_4.5+0x7c8>
   19b60:	ldr	w0, [x22, #132]
   19b64:	tbnz	w0, #2, 19b90 <GOMP_taskloop_ull@@GOMP_4.5+0xe28>
   19b68:	ldr	x1, [x29, #168]
   19b6c:	cbz	x1, 193c8 <GOMP_taskloop_ull@@GOMP_4.5+0x660>
   19b70:	ldrb	w0, [x1, #49]
   19b74:	cbnz	w0, 19b90 <GOMP_taskloop_ull@@GOMP_4.5+0xe28>
   19b78:	ldrb	w0, [x1, #50]
   19b7c:	cbz	w0, 193b8 <GOMP_taskloop_ull@@GOMP_4.5+0x650>
   19b80:	ldr	x0, [x1]
   19b84:	cbz	x0, 193b8 <GOMP_taskloop_ull@@GOMP_4.5+0x650>
   19b88:	ldrb	w0, [x0, #49]
   19b8c:	cbz	w0, 193b8 <GOMP_taskloop_ull@@GOMP_4.5+0x650>
   19b90:	mov	x0, x21
   19b94:	mov	x19, #0x0                   	// #0
   19b98:	bl	13550 <GOMP_single_copy_end@@GOMP_1.0+0x248>
   19b9c:	cbnz	x23, 19bb4 <GOMP_taskloop_ull@@GOMP_4.5+0xe4c>
   19ba0:	b	19be4 <GOMP_taskloop_ull@@GOMP_4.5+0xe7c>
   19ba4:	add	x19, x19, #0x1
   19ba8:	bl	88b0 <free@plt>
   19bac:	cmp	x23, x19
   19bb0:	b.eq	19be4 <GOMP_taskloop_ull@@GOMP_4.5+0xe7c>  // b.none
   19bb4:	ldr	x0, [x29, #192]
   19bb8:	ldr	x20, [x0, x19, lsl #3]
   19bbc:	mov	x0, x20
   19bc0:	ldr	x1, [x20, #56]
   19bc4:	cbz	x1, 19ba4 <GOMP_taskloop_ull@@GOMP_4.5+0xe3c>
   19bc8:	mov	x0, x1
   19bcc:	bl	88b0 <free@plt>
   19bd0:	add	x19, x19, #0x1
   19bd4:	mov	x0, x20
   19bd8:	bl	88b0 <free@plt>
   19bdc:	cmp	x23, x19
   19be0:	b.ne	19bb4 <GOMP_taskloop_ull@@GOMP_4.5+0xe4c>  // b.any
   19be4:	ldr	w0, [x29, #180]
   19be8:	cbz	w0, 19c28 <GOMP_taskloop_ull@@GOMP_4.5+0xec0>
   19bec:	ldr	x0, [x29, #112]
   19bf0:	mov	sp, x0
   19bf4:	b	19014 <GOMP_taskloop_ull@@GOMP_4.5+0x2ac>
   19bf8:	mov	x0, x3
   19bfc:	str	x3, [x29, #168]
   19c00:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   19c04:	movi	v0.4s, #0x0
   19c08:	ldr	x3, [x29, #168]
   19c0c:	b	18f9c <GOMP_taskloop_ull@@GOMP_4.5+0x234>
   19c10:	mov	x0, x21
   19c14:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   19c18:	b	19398 <GOMP_taskloop_ull@@GOMP_4.5+0x630>
   19c1c:	mov	x0, x22
   19c20:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   19c24:	b	199a0 <GOMP_taskloop_ull@@GOMP_4.5+0xc38>
   19c28:	bl	17598 <GOMP_taskgroup_end@@GOMP_4.0>
   19c2c:	b	19bec <GOMP_taskloop_ull@@GOMP_4.5+0xe84>

0000000000019c30 <GOMP_taskgroup_reduction_unregister@@GOMP_5.0>:
   19c30:	stp	x29, x30, [sp, #-32]!
   19c34:	mov	x29, sp
   19c38:	str	x19, [sp, #16]
   19c3c:	mov	x19, x0
   19c40:	ldr	x0, [x0, #40]
   19c44:	bl	88b0 <free@plt>
   19c48:	b	19c54 <GOMP_taskgroup_reduction_unregister@@GOMP_5.0+0x24>
   19c4c:	ldr	x0, [x19, #40]
   19c50:	cbnz	x0, 19c64 <GOMP_taskgroup_reduction_unregister@@GOMP_5.0+0x34>
   19c54:	ldr	x0, [x19, #16]
   19c58:	bl	b3e8 <fprintf@plt+0x2928>
   19c5c:	ldr	x19, [x19, #32]
   19c60:	cbnz	x19, 19c4c <GOMP_taskgroup_reduction_unregister@@GOMP_5.0+0x1c>
   19c64:	ldr	x19, [sp, #16]
   19c68:	ldp	x29, x30, [sp], #32
   19c6c:	ret

0000000000019c70 <GOMP_task_reduction_remap@@GOMP_5.0>:
   19c70:	adrp	x4, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   19c74:	ldr	x4, [x4, #4016]
   19c78:	mrs	x3, tpidr_el0
   19c7c:	stp	x29, x30, [sp, #-32]!
   19c80:	mov	x14, x0
   19c84:	add	x3, x3, x4
   19c88:	mov	x29, sp
   19c8c:	stp	x19, x20, [sp, #16]
   19c90:	ldr	w15, [x3, #40]
   19c94:	ldr	x0, [x3, #80]
   19c98:	ldr	x0, [x0, #40]
   19c9c:	ldr	x20, [x0, #40]
   19ca0:	ldr	x19, [x20, #40]
   19ca4:	cbz	x14, 19dc8 <GOMP_task_reduction_remap@@GOMP_5.0+0x158>
   19ca8:	mov	x18, x1
   19cac:	mov	x12, x2
   19cb0:	mov	w15, w15
   19cb4:	mov	x13, #0x0                   	// #0
   19cb8:	b	19ce8 <GOMP_task_reduction_remap@@GOMP_5.0+0x78>
   19cbc:	ldp	x4, x3, [x0, #8]
   19cc0:	cmp	x13, x18
   19cc4:	ldp	x1, x2, [x3, #8]
   19cc8:	add	x2, x2, x4
   19ccc:	madd	x1, x15, x1, x2
   19cd0:	str	x1, [x12]
   19cd4:	b.cc	19db0 <GOMP_task_reduction_remap@@GOMP_5.0+0x140>  // b.lo, b.ul, b.last
   19cd8:	add	x13, x13, #0x1
   19cdc:	add	x12, x12, #0x8
   19ce0:	cmp	x14, x13
   19ce4:	b.eq	19dc8 <GOMP_task_reduction_remap@@GOMP_5.0+0x158>  // b.none
   19ce8:	mov	x1, x12
   19cec:	mov	x0, x19
   19cf0:	bl	13348 <GOMP_single_copy_end@@GOMP_1.0+0x40>
   19cf4:	cbnz	x0, 19cbc <GOMP_task_reduction_remap@@GOMP_5.0+0x4c>
   19cf8:	ldr	x4, [x12]
   19cfc:	mov	x2, x20
   19d00:	ldr	x3, [x2, #16]
   19d04:	cmp	x4, x3
   19d08:	b.cc	19d18 <GOMP_task_reduction_remap@@GOMP_5.0+0xa8>  // b.lo, b.ul, b.last
   19d0c:	ldr	x0, [x2, #48]
   19d10:	cmp	x4, x0
   19d14:	b.cc	19d30 <GOMP_task_reduction_remap@@GOMP_5.0+0xc0>  // b.lo, b.ul, b.last
   19d18:	ldr	x2, [x2, #32]
   19d1c:	cbnz	x2, 19d00 <GOMP_task_reduction_remap@@GOMP_5.0+0x90>
   19d20:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   19d24:	mov	x1, x4
   19d28:	add	x0, x0, #0x578
   19d2c:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   19d30:	ldr	x0, [x2, #8]
   19d34:	sub	x4, x4, x3
   19d38:	cmp	x13, x18
   19d3c:	udiv	x1, x4, x0
   19d40:	msub	x4, x1, x0, x4
   19d44:	madd	x0, x15, x0, x4
   19d48:	add	x3, x0, x3
   19d4c:	str	x3, [x12]
   19d50:	b.cs	19cd8 <GOMP_task_reduction_remap@@GOMP_5.0+0x68>  // b.hs, b.nlast
   19d54:	ldr	x5, [x2]
   19d58:	mov	x6, #0x0                   	// #0
   19d5c:	sub	x5, x5, #0x1
   19d60:	b	19d70 <GOMP_task_reduction_remap@@GOMP_5.0+0x100>
   19d64:	add	x6, x1, #0x1
   19d68:	cmp	x5, x6
   19d6c:	b.cc	19da0 <GOMP_task_reduction_remap@@GOMP_5.0+0x130>  // b.lo, b.ul, b.last
   19d70:	add	x1, x6, x5
   19d74:	and	x0, x1, #0xfffffffffffffffe
   19d78:	lsr	x1, x1, #1
   19d7c:	add	x0, x0, x1
   19d80:	add	x0, x2, x0, lsl #3
   19d84:	ldr	x7, [x0, #64]
   19d88:	cmp	x7, x4
   19d8c:	b.cc	19d64 <GOMP_task_reduction_remap@@GOMP_5.0+0xf4>  // b.lo, b.ul, b.last
   19d90:	b.eq	19dd4 <GOMP_task_reduction_remap@@GOMP_5.0+0x164>  // b.none
   19d94:	sub	x5, x1, #0x1
   19d98:	cmp	x5, x6
   19d9c:	b.cs	19d70 <GOMP_task_reduction_remap@@GOMP_5.0+0x100>  // b.hs, b.nlast
   19da0:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   19da4:	mov	x1, x3
   19da8:	add	x0, x0, #0x578
   19dac:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   19db0:	ldr	x0, [x0]
   19db4:	str	x0, [x12, x14, lsl #3]
   19db8:	add	x13, x13, #0x1
   19dbc:	add	x12, x12, #0x8
   19dc0:	cmp	x14, x13
   19dc4:	b.ne	19ce8 <GOMP_task_reduction_remap@@GOMP_5.0+0x78>  // b.any
   19dc8:	ldp	x19, x20, [sp, #16]
   19dcc:	ldp	x29, x30, [sp], #32
   19dd0:	ret
   19dd4:	ldr	x0, [x0, #56]
   19dd8:	str	x0, [x12, x14, lsl #3]
   19ddc:	b	19cd8 <GOMP_task_reduction_remap@@GOMP_5.0+0x68>
   19de0:	stp	x29, x30, [sp, #-96]!
   19de4:	mov	x29, sp
   19de8:	stp	x19, x20, [sp, #16]
   19dec:	stp	x21, x22, [sp, #32]
   19df0:	mov	x22, #0x0                   	// #0
   19df4:	stp	x23, x24, [sp, #48]
   19df8:	mov	x24, x0
   19dfc:	mov	x0, #0x40                  	// #64
   19e00:	str	x25, [sp, #64]
   19e04:	mov	w25, w1
   19e08:	bl	b2f8 <fprintf@plt+0x2838>
   19e0c:	mov	x20, x24
   19e10:	movi	v0.4s, #0x0
   19e14:	mov	x23, x0
   19e18:	str	xzr, [x0, #40]
   19e1c:	strh	wzr, [x0, #48]
   19e20:	strb	wzr, [x0, #50]
   19e24:	str	q0, [x0]
   19e28:	stur	q0, [x0, #24]
   19e2c:	str	wzr, [x0, #52]
   19e30:	str	xzr, [x0, #56]
   19e34:	b	19e3c <GOMP_task_reduction_remap@@GOMP_5.0+0x1cc>
   19e38:	mov	x20, x0
   19e3c:	ldp	x19, x0, [x20, #8]
   19e40:	mul	x19, x25, x19
   19e44:	mov	x1, x19
   19e48:	bl	b3a8 <fprintf@plt+0x28e8>
   19e4c:	mov	x2, x19
   19e50:	mov	x21, x0
   19e54:	mov	w1, #0x0                   	// #0
   19e58:	bl	8770 <memset@plt>
   19e5c:	ldr	x0, [x20, #32]
   19e60:	add	x19, x19, x21
   19e64:	ldr	x1, [x20]
   19e68:	str	x21, [x20, #16]
   19e6c:	stp	xzr, x19, [x20, #40]
   19e70:	add	x22, x22, x1
   19e74:	cbnz	x0, 19e38 <GOMP_task_reduction_remap@@GOMP_5.0+0x1c8>
   19e78:	adrp	x4, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   19e7c:	mov	w19, #0x1e                  	// #30
   19e80:	add	x3, x4, #0x5e0
   19e84:	mov	w0, #0x0                   	// #0
   19e88:	b	19ea8 <GOMP_task_reduction_remap@@GOMP_5.0+0x238>
   19e8c:	sub	w1, w19, w0
   19e90:	add	w1, w0, w1, lsr #1
   19e94:	ubfiz	x2, x1, #4, #32
   19e98:	ldr	w2, [x3, x2]
   19e9c:	cmp	x22, x2
   19ea0:	b.hi	19f74 <GOMP_task_reduction_remap@@GOMP_5.0+0x304>  // b.pmore
   19ea4:	mov	w19, w1
   19ea8:	cmp	w19, w0
   19eac:	b.ne	19e8c <GOMP_task_reduction_remap@@GOMP_5.0+0x21c>  // b.any
   19eb0:	add	x4, x4, #0x5e0
   19eb4:	ubfiz	x0, x19, #4, #32
   19eb8:	ldr	w21, [x4, x0]
   19ebc:	cmp	x22, x21
   19ec0:	b.hi	19f7c <GOMP_task_reduction_remap@@GOMP_5.0+0x30c>  // b.pmore
   19ec4:	add	x20, x21, #0x4
   19ec8:	mov	x22, x24
   19ecc:	add	x25, sp, #0x58
   19ed0:	lsl	x20, x20, #3
   19ed4:	mov	x0, x20
   19ed8:	bl	b2f8 <fprintf@plt+0x2838>
   19edc:	sub	x2, x20, #0x20
   19ee0:	mov	x20, x0
   19ee4:	mov	w1, #0x0                   	// #0
   19ee8:	add	x0, x0, #0x20
   19eec:	stp	x21, xzr, [x20]
   19ef0:	str	xzr, [x20, #16]
   19ef4:	str	w19, [x20, #24]
   19ef8:	bl	8770 <memset@plt>
   19efc:	str	x20, [sp, #88]
   19f00:	ldr	x0, [x22]
   19f04:	add	x20, x22, #0x38
   19f08:	mov	x21, #0x0                   	// #0
   19f0c:	cbz	x0, 19f3c <GOMP_task_reduction_remap@@GOMP_5.0+0x2cc>
   19f10:	str	x22, [x20, #16]
   19f14:	mov	x19, x20
   19f18:	mov	x0, x25
   19f1c:	add	x21, x21, #0x1
   19f20:	mov	x1, x19
   19f24:	bl	141b8 <GOMP_single_copy_end@@GOMP_1.0+0xeb0>
   19f28:	ldr	x1, [x22]
   19f2c:	str	x19, [x0]
   19f30:	add	x20, x20, #0x18
   19f34:	cmp	x21, x1
   19f38:	b.cc	19f10 <GOMP_task_reduction_remap@@GOMP_5.0+0x2a0>  // b.lo, b.ul, b.last
   19f3c:	ldr	x0, [x22, #32]
   19f40:	cbz	x0, 19f4c <GOMP_task_reduction_remap@@GOMP_5.0+0x2dc>
   19f44:	mov	x22, x0
   19f48:	b	19f00 <GOMP_task_reduction_remap@@GOMP_5.0+0x290>
   19f4c:	ldr	x0, [sp, #88]
   19f50:	ldp	x19, x20, [sp, #16]
   19f54:	ldr	x25, [sp, #64]
   19f58:	str	x0, [x22, #40]
   19f5c:	str	x24, [x23, #40]
   19f60:	mov	x0, x23
   19f64:	ldp	x21, x22, [sp, #32]
   19f68:	ldp	x23, x24, [sp, #48]
   19f6c:	ldp	x29, x30, [sp], #96
   19f70:	ret
   19f74:	add	w0, w1, #0x1
   19f78:	b	19ea8 <GOMP_task_reduction_remap@@GOMP_5.0+0x238>
   19f7c:	bl	8820 <abort@plt>
   19f80:	adrp	x3, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   19f84:	ldr	x3, [x3, #4016]
   19f88:	mrs	x2, tpidr_el0
   19f8c:	stp	x29, x30, [sp, #-112]!
   19f90:	add	x2, x2, x3
   19f94:	mov	x29, sp
   19f98:	stp	x25, x26, [sp, #64]
   19f9c:	mov	x26, #0x0                   	// #0
   19fa0:	ldr	x25, [x2, #80]
   19fa4:	stp	x19, x20, [sp, #16]
   19fa8:	mov	x19, x0
   19fac:	stp	x23, x24, [sp, #48]
   19fb0:	mov	x24, x0
   19fb4:	ldr	x2, [x2, #16]
   19fb8:	stp	x21, x22, [sp, #32]
   19fbc:	ldr	x0, [x25, #40]
   19fc0:	ldr	w23, [x2]
   19fc4:	ldr	x21, [x0, #40]
   19fc8:	str	x27, [sp, #80]
   19fcc:	cbnz	x1, 1a194 <GOMP_task_reduction_remap@@GOMP_5.0+0x524>
   19fd0:	mov	w23, w23
   19fd4:	b	19fdc <GOMP_task_reduction_remap@@GOMP_5.0+0x36c>
   19fd8:	mov	x19, x0
   19fdc:	ldp	x20, x0, [x19, #8]
   19fe0:	mul	x20, x23, x20
   19fe4:	mov	x1, x20
   19fe8:	bl	b3a8 <fprintf@plt+0x28e8>
   19fec:	mov	x2, x20
   19ff0:	mov	x22, x0
   19ff4:	mov	w1, #0x0                   	// #0
   19ff8:	bl	8770 <memset@plt>
   19ffc:	ldr	x0, [x19, #32]
   1a000:	add	x20, x20, x22
   1a004:	ldr	x1, [x19]
   1a008:	str	x22, [x19, #16]
   1a00c:	stp	xzr, x20, [x19, #40]
   1a010:	add	x26, x26, x1
   1a014:	cbnz	x0, 19fd8 <GOMP_task_reduction_remap@@GOMP_5.0+0x368>
   1a018:	str	x21, [x19, #32]
   1a01c:	mov	x23, x21
   1a020:	cbz	x21, 1a030 <GOMP_task_reduction_remap@@GOMP_5.0+0x3c0>
   1a024:	ldr	x0, [x21, #40]
   1a028:	mov	x21, #0x0                   	// #0
   1a02c:	cbnz	x0, 1a1c4 <GOMP_task_reduction_remap@@GOMP_5.0+0x554>
   1a030:	adrp	x4, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1a034:	mov	w19, #0x1e                  	// #30
   1a038:	add	x3, x4, #0x5e0
   1a03c:	mov	w0, #0x0                   	// #0
   1a040:	b	1a060 <GOMP_task_reduction_remap@@GOMP_5.0+0x3f0>
   1a044:	sub	w1, w19, w0
   1a048:	add	w1, w0, w1, lsr #1
   1a04c:	ubfiz	x2, x1, #4, #32
   1a050:	ldr	w2, [x3, x2]
   1a054:	cmp	x26, x2
   1a058:	b.hi	1a18c <GOMP_task_reduction_remap@@GOMP_5.0+0x51c>  // b.pmore
   1a05c:	mov	w19, w1
   1a060:	cmp	w19, w0
   1a064:	b.ne	1a044 <GOMP_task_reduction_remap@@GOMP_5.0+0x3d4>  // b.any
   1a068:	add	x4, x4, #0x5e0
   1a06c:	ubfiz	x0, x19, #4, #32
   1a070:	ldr	w27, [x4, x0]
   1a074:	cmp	x26, x27
   1a078:	b.hi	1a1d8 <GOMP_task_reduction_remap@@GOMP_5.0+0x568>  // b.pmore
   1a07c:	add	x20, x27, #0x4
   1a080:	lsl	x20, x20, #3
   1a084:	mov	x0, x20
   1a088:	bl	b2f8 <fprintf@plt+0x2838>
   1a08c:	mov	x22, x0
   1a090:	sub	x2, x20, #0x20
   1a094:	add	x0, x0, #0x20
   1a098:	mov	w1, #0x0                   	// #0
   1a09c:	stp	x27, xzr, [x22]
   1a0a0:	str	xzr, [x22, #16]
   1a0a4:	str	w19, [x22, #24]
   1a0a8:	bl	8770 <memset@plt>
   1a0ac:	str	x22, [sp, #104]
   1a0b0:	cbz	x21, 1a108 <GOMP_task_reduction_remap@@GOMP_5.0+0x498>
   1a0b4:	mov	x19, x21
   1a0b8:	ldp	x1, x2, [x21, #8]
   1a0bc:	ldr	x0, [x19], #32
   1a0c0:	add	x21, x19, x0, lsl #3
   1a0c4:	sub	x0, x1, x2
   1a0c8:	str	x0, [x22, #8]
   1a0cc:	b	1a0dc <GOMP_task_reduction_remap@@GOMP_5.0+0x46c>
   1a0d0:	add	x19, x19, #0x8
   1a0d4:	cmp	x21, x19
   1a0d8:	b.ls	1a108 <GOMP_task_reduction_remap@@GOMP_5.0+0x498>  // b.plast
   1a0dc:	ldr	x20, [x19]
   1a0e0:	cmp	x20, #0x1
   1a0e4:	b.ls	1a0d0 <GOMP_task_reduction_remap@@GOMP_5.0+0x460>  // b.plast
   1a0e8:	ldr	x1, [x20]
   1a0ec:	mov	x0, x22
   1a0f0:	add	x19, x19, #0x8
   1a0f4:	eor	x1, x1, x1, lsr #32
   1a0f8:	bl	13490 <GOMP_single_copy_end@@GOMP_1.0+0x188>
   1a0fc:	str	x20, [x0]
   1a100:	cmp	x21, x19
   1a104:	b.hi	1a0dc <GOMP_task_reduction_remap@@GOMP_5.0+0x46c>  // b.pmore
   1a108:	mov	x22, x24
   1a10c:	add	x26, sp, #0x68
   1a110:	ldr	x0, [x22]
   1a114:	add	x20, x22, #0x38
   1a118:	mov	x21, #0x0                   	// #0
   1a11c:	cbz	x0, 1a14c <GOMP_task_reduction_remap@@GOMP_5.0+0x4dc>
   1a120:	str	x22, [x20, #16]
   1a124:	mov	x19, x20
   1a128:	mov	x0, x26
   1a12c:	add	x21, x21, #0x1
   1a130:	mov	x1, x19
   1a134:	bl	141b8 <GOMP_single_copy_end@@GOMP_1.0+0xeb0>
   1a138:	ldr	x1, [x22]
   1a13c:	str	x19, [x0]
   1a140:	add	x20, x20, #0x18
   1a144:	cmp	x21, x1
   1a148:	b.cc	1a120 <GOMP_task_reduction_remap@@GOMP_5.0+0x4b0>  // b.lo, b.ul, b.last
   1a14c:	ldr	x0, [x22, #32]
   1a150:	cmp	x23, x0
   1a154:	b.eq	1a160 <GOMP_task_reduction_remap@@GOMP_5.0+0x4f0>  // b.none
   1a158:	mov	x22, x0
   1a15c:	b	1a110 <GOMP_task_reduction_remap@@GOMP_5.0+0x4a0>
   1a160:	ldr	x0, [x25, #40]
   1a164:	ldr	x1, [sp, #104]
   1a168:	ldp	x19, x20, [sp, #16]
   1a16c:	ldp	x25, x26, [sp, #64]
   1a170:	ldr	x27, [sp, #80]
   1a174:	str	x1, [x22, #40]
   1a178:	ldp	x21, x22, [sp, #32]
   1a17c:	str	x24, [x0, #40]
   1a180:	ldp	x23, x24, [sp, #48]
   1a184:	ldp	x29, x30, [sp], #112
   1a188:	ret
   1a18c:	add	w0, w1, #0x1
   1a190:	b	1a060 <GOMP_task_reduction_remap@@GOMP_5.0+0x3f0>
   1a194:	ldr	x0, [x1, #16]
   1a198:	str	x0, [x19, #16]
   1a19c:	ldr	x0, [x19, #32]
   1a1a0:	ldr	x2, [x1, #48]
   1a1a4:	str	x2, [x19, #48]
   1a1a8:	ldr	x2, [x19]
   1a1ac:	ldr	x1, [x1, #32]
   1a1b0:	str	xzr, [x19, #40]
   1a1b4:	add	x26, x26, x2
   1a1b8:	cbz	x0, 1a018 <GOMP_task_reduction_remap@@GOMP_5.0+0x3a8>
   1a1bc:	mov	x19, x0
   1a1c0:	b	19fcc <GOMP_task_reduction_remap@@GOMP_5.0+0x35c>
   1a1c4:	mov	x21, x0
   1a1c8:	ldp	x0, x1, [x0, #8]
   1a1cc:	sub	x0, x0, x1
   1a1d0:	add	x26, x26, x0
   1a1d4:	b	1a030 <GOMP_task_reduction_remap@@GOMP_5.0+0x3c0>
   1a1d8:	bl	8820 <abort@plt>
   1a1dc:	nop
   1a1e0:	stp	x29, x30, [sp, #-32]!
   1a1e4:	mov	x29, sp
   1a1e8:	stp	x19, x20, [sp, #16]
   1a1ec:	mrs	x19, tpidr_el0
   1a1f0:	adrp	x20, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1a1f4:	ldr	x20, [x20, #4016]
   1a1f8:	add	x0, x19, x20
   1a1fc:	ldr	x0, [x0, #16]
   1a200:	cbz	x0, 1a250 <GOMP_task_reduction_remap@@GOMP_5.0+0x5e0>
   1a204:	add	x19, x19, x20
   1a208:	mov	x0, #0x40                  	// #64
   1a20c:	ldr	x20, [x19, #80]
   1a210:	ldr	x19, [x20, #40]
   1a214:	bl	b2f8 <fprintf@plt+0x2838>
   1a218:	stp	x19, xzr, [x0]
   1a21c:	stp	xzr, xzr, [x0, #24]
   1a220:	cbz	x19, 1a228 <GOMP_task_reduction_remap@@GOMP_5.0+0x5b8>
   1a224:	ldr	x19, [x19, #40]
   1a228:	str	x19, [x0, #40]
   1a22c:	strh	wzr, [x0, #48]
   1a230:	mov	w1, #0x1                   	// #1
   1a234:	str	wzr, [x0, #52]
   1a238:	str	xzr, [x0, #56]
   1a23c:	str	x0, [x20, #40]
   1a240:	strb	w1, [x0, #50]
   1a244:	ldp	x19, x20, [sp, #16]
   1a248:	ldp	x29, x30, [sp], #32
   1a24c:	ret
   1a250:	bl	13570 <GOMP_single_copy_end@@GOMP_1.0+0x268>
   1a254:	b	1a204 <GOMP_task_reduction_remap@@GOMP_5.0+0x594>

000000000001a258 <GOMP_workshare_task_reduction_unregister@@GOMP_5.0>:
   1a258:	stp	x29, x30, [sp, #-48]!
   1a25c:	mrs	x1, tpidr_el0
   1a260:	mov	x29, sp
   1a264:	stp	x19, x20, [sp, #16]
   1a268:	adrp	x19, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1a26c:	ldr	x19, [x19, #4016]
   1a270:	stp	x21, x22, [sp, #32]
   1a274:	and	w21, w0, #0xff
   1a278:	add	x19, x1, x19
   1a27c:	ldr	x0, [x19, #80]
   1a280:	ldr	x22, [x19, #16]
   1a284:	ldr	x0, [x0, #40]
   1a288:	ldr	x20, [x0, #40]
   1a28c:	bl	17598 <GOMP_taskgroup_end@@GOMP_4.0>
   1a290:	ldr	w0, [x19, #40]
   1a294:	cbnz	w0, 1a2d0 <GOMP_workshare_task_reduction_unregister@@GOMP_5.0+0x78>
   1a298:	ldr	x0, [x20, #40]
   1a29c:	bl	88b0 <free@plt>
   1a2a0:	b	1a2ac <GOMP_workshare_task_reduction_unregister@@GOMP_5.0+0x54>
   1a2a4:	ldr	x0, [x20, #40]
   1a2a8:	cbnz	x0, 1a2bc <GOMP_workshare_task_reduction_unregister@@GOMP_5.0+0x64>
   1a2ac:	ldr	x0, [x20, #16]
   1a2b0:	bl	b3e8 <fprintf@plt+0x2928>
   1a2b4:	ldr	x20, [x20, #32]
   1a2b8:	cbnz	x20, 1a2a4 <GOMP_workshare_task_reduction_unregister@@GOMP_5.0+0x4c>
   1a2bc:	cbz	w21, 1a2dc <GOMP_workshare_task_reduction_unregister@@GOMP_5.0+0x84>
   1a2c0:	ldp	x19, x20, [sp, #16]
   1a2c4:	ldp	x21, x22, [sp, #32]
   1a2c8:	ldp	x29, x30, [sp], #48
   1a2cc:	ret
   1a2d0:	ldr	x0, [x20, #40]
   1a2d4:	bl	88b0 <free@plt>
   1a2d8:	cbnz	w21, 1a2c0 <GOMP_workshare_task_reduction_unregister@@GOMP_5.0+0x68>
   1a2dc:	add	x0, x22, #0x80
   1a2e0:	ldp	x19, x20, [sp, #16]
   1a2e4:	ldp	x21, x22, [sp, #32]
   1a2e8:	ldp	x29, x30, [sp], #48
   1a2ec:	b	1d3e0 <omp_get_num_procs@@OMP_1.0+0x830>

000000000001a2f0 <omp_in_final@@OMP_3.1>:
   1a2f0:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1a2f4:	ldr	x2, [x2, #4016]
   1a2f8:	mrs	x1, tpidr_el0
   1a2fc:	mov	w0, #0x0                   	// #0
   1a300:	add	x1, x1, x2
   1a304:	ldr	x1, [x1, #80]
   1a308:	cbz	x1, 1a310 <omp_in_final@@OMP_3.1+0x20>
   1a30c:	ldrb	w0, [x1, #205]
   1a310:	ret
   1a314:	nop
   1a318:	stp	x29, x30, [sp, #-16]!
   1a31c:	add	x0, x0, #0x40
   1a320:	mov	x29, sp
   1a324:	bl	1d120 <omp_get_num_procs@@OMP_1.0+0x570>
   1a328:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1a32c:	ldr	x0, [x0, #3992]
   1a330:	mrs	x1, tpidr_el0
   1a334:	add	x0, x1, x0
   1a338:	str	xzr, [x0, #80]
   1a33c:	str	xzr, [x0, #96]
   1a340:	bl	8a40 <pthread_self@plt>
   1a344:	bl	8760 <pthread_detach@plt>
   1a348:	mov	x0, #0x0                   	// #0
   1a34c:	bl	8830 <pthread_exit@plt>
   1a350:	stp	x29, x30, [sp, #-16]!
   1a354:	add	x0, x0, #0x40
   1a358:	mov	x29, sp
   1a35c:	bl	1d120 <omp_get_num_procs@@OMP_1.0+0x570>
   1a360:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1a364:	ldr	x2, [x2, #3992]
   1a368:	mrs	x1, tpidr_el0
   1a36c:	mov	x0, #0x0                   	// #0
   1a370:	add	x1, x1, x2
   1a374:	str	xzr, [x1, #80]
   1a378:	str	xzr, [x1, #96]
   1a37c:	bl	8830 <pthread_exit@plt>
   1a380:	stp	x29, x30, [sp, #-80]!
   1a384:	mov	x29, sp
   1a388:	stp	x23, x24, [sp, #48]
   1a38c:	adrp	x24, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1a390:	ldr	x24, [x24, #3992]
   1a394:	ldr	w11, [x0, #96]
   1a398:	stp	x19, x20, [sp, #16]
   1a39c:	stp	x21, x22, [sp, #32]
   1a3a0:	ldp	x20, x21, [x0]
   1a3a4:	ldp	x2, x3, [x0, #16]
   1a3a8:	ldp	x8, x9, [x0, #32]
   1a3ac:	ldp	x23, x22, [x0, #80]
   1a3b0:	str	x25, [sp, #64]
   1a3b4:	mrs	x25, tpidr_el0
   1a3b8:	mov	x4, x2
   1a3bc:	add	x1, x25, x24
   1a3c0:	add	x10, x1, #0x58
   1a3c4:	stp	x8, x9, [x1, #32]
   1a3c8:	ldrb	w8, [x0, #100]
   1a3cc:	ldr	w7, [x1, #40]
   1a3d0:	ldr	x9, [x2, #80]
   1a3d4:	stp	x2, x3, [x1, #16]
   1a3d8:	ldp	x2, x3, [x0, #48]
   1a3dc:	stp	x2, x3, [x1, #48]
   1a3e0:	ldp	x2, x3, [x0, #64]
   1a3e4:	stp	x2, x3, [x1, #64]
   1a3e8:	str	x23, [x1, #80]
   1a3ec:	str	wzr, [x1, #88]
   1a3f0:	str	w11, [x1, #92]
   1a3f4:	str	x22, [x1, #96]
   1a3f8:	str	x10, [x9, x7, lsl #3]
   1a3fc:	cbz	w8, 1a45c <omp_in_final@@OMP_3.1+0x16c>
   1a400:	add	x19, x4, #0x80
   1a404:	mov	x0, x19
   1a408:	bl	1d0f0 <omp_get_num_procs@@OMP_1.0+0x540>
   1a40c:	mov	x0, x21
   1a410:	blr	x20
   1a414:	mov	x0, x19
   1a418:	bl	1d410 <omp_get_num_procs@@OMP_1.0+0x860>
   1a41c:	ldr	x0, [x23, #56]
   1a420:	cbnz	x0, 1a4b8 <omp_in_final@@OMP_3.1+0x1c8>
   1a424:	mov	x0, x19
   1a428:	bl	1d120 <omp_get_num_procs@@OMP_1.0+0x570>
   1a42c:	add	x24, x25, x24
   1a430:	bl	8a40 <pthread_self@plt>
   1a434:	bl	8760 <pthread_detach@plt>
   1a438:	ldp	x19, x20, [sp, #16]
   1a43c:	mov	x0, #0x0                   	// #0
   1a440:	ldp	x21, x22, [sp, #32]
   1a444:	ldr	x25, [sp, #64]
   1a448:	str	xzr, [x24, #80]
   1a44c:	str	xzr, [x24, #96]
   1a450:	ldp	x23, x24, [sp, #48]
   1a454:	ldp	x29, x30, [sp], #80
   1a458:	ret
   1a45c:	ldr	x2, [x22], #64
   1a460:	mov	x19, x1
   1a464:	mov	x0, x22
   1a468:	str	x1, [x2, x7, lsl #3]
   1a46c:	bl	1d0f0 <omp_get_num_procs@@OMP_1.0+0x540>
   1a470:	b	1a484 <omp_in_final@@OMP_3.1+0x194>
   1a474:	bl	1d0f0 <omp_get_num_procs@@OMP_1.0+0x540>
   1a478:	ldp	x20, x21, [x19]
   1a47c:	str	xzr, [x19]
   1a480:	cbz	x20, 1a42c <omp_in_final@@OMP_3.1+0x13c>
   1a484:	mov	x0, x21
   1a488:	ldr	x21, [x19, #16]
   1a48c:	ldr	x23, [x19, #80]
   1a490:	blr	x20
   1a494:	add	x0, x21, #0x80
   1a498:	bl	1d410 <omp_get_num_procs@@OMP_1.0+0x860>
   1a49c:	mov	x0, x22
   1a4a0:	ldr	x1, [x23, #56]
   1a4a4:	cbz	x1, 1a474 <omp_in_final@@OMP_3.1+0x184>
   1a4a8:	mov	x0, x1
   1a4ac:	bl	88b0 <free@plt>
   1a4b0:	mov	x0, x22
   1a4b4:	b	1a474 <omp_in_final@@OMP_3.1+0x184>
   1a4b8:	bl	88b0 <free@plt>
   1a4bc:	b	1a424 <omp_in_final@@OMP_3.1+0x134>
   1a4c0:	stp	x29, x30, [sp, #-48]!
   1a4c4:	mrs	x1, tpidr_el0
   1a4c8:	mov	x29, sp
   1a4cc:	stp	x19, x20, [sp, #16]
   1a4d0:	adrp	x19, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1a4d4:	ldr	x19, [x19, #3992]
   1a4d8:	stp	x21, x22, [sp, #32]
   1a4dc:	mov	w22, w0
   1a4e0:	add	x19, x1, x19
   1a4e4:	mov	x20, x22
   1a4e8:	ldr	x0, [x19, #16]
   1a4ec:	cbz	x0, 1a5c4 <omp_in_final@@OMP_3.1+0x2d4>
   1a4f0:	mov	w1, #0xd8                  	// #216
   1a4f4:	mov	x0, #0x540                 	// #1344
   1a4f8:	umaddl	x0, w20, w1, x0
   1a4fc:	bl	b2f8 <fprintf@plt+0x2838>
   1a500:	mov	x19, x0
   1a504:	dup	v0.2s, w20
   1a508:	str	w20, [x0]
   1a50c:	stp	w20, wzr, [x0, #128]
   1a510:	str	wzr, [x0, #1280]
   1a514:	str	d0, [x0, #192]
   1a518:	add	x0, x19, #0x100
   1a51c:	mov	w1, #0x8                   	// #8
   1a520:	str	w1, [x19, #4]
   1a524:	mov	w2, w20
   1a528:	str	x0, [x19, #88]
   1a52c:	mov	x1, #0x0                   	// #0
   1a530:	str	xzr, [x19, #112]
   1a534:	bl	1ba98 <omp_in_final@@OMP_3.1+0x17a8>
   1a538:	str	wzr, [x19, #72]
   1a53c:	mov	w1, #0xd0                  	// #208
   1a540:	mov	x2, #0x540                 	// #1344
   1a544:	add	x0, x19, #0x180
   1a548:	add	x8, x19, #0x200
   1a54c:	umaddl	x20, w20, w1, x2
   1a550:	add	x7, x19, #0x280
   1a554:	add	x6, x19, #0x300
   1a558:	add	x5, x19, #0x380
   1a55c:	add	x4, x19, #0x400
   1a560:	add	x2, x19, x20
   1a564:	add	x3, x19, #0x480
   1a568:	add	x1, x19, #0x600
   1a56c:	str	x2, [x19, #80]
   1a570:	add	x2, x19, #0x48
   1a574:	stp	x0, xzr, [x19, #96]
   1a578:	mov	x0, x19
   1a57c:	str	xzr, [x19, #312]
   1a580:	str	x8, [x19, #464]
   1a584:	str	x7, [x19, #592]
   1a588:	str	x6, [x19, #720]
   1a58c:	str	x5, [x19, #848]
   1a590:	str	x4, [x19, #976]
   1a594:	str	x3, [x19, #1104]
   1a598:	str	xzr, [x19, #1232]
   1a59c:	str	x2, [x19, x20]
   1a5a0:	str	xzr, [x19, #1288]
   1a5a4:	stp	xzr, xzr, [x1, #-232]
   1a5a8:	str	xzr, [x19, #1320]
   1a5ac:	str	xzr, [x19, #1328]
   1a5b0:	str	wzr, [x19, #1336]
   1a5b4:	ldp	x19, x20, [sp, #16]
   1a5b8:	ldp	x21, x22, [sp, #32]
   1a5bc:	ldp	x29, x30, [sp], #48
   1a5c0:	ret
   1a5c4:	ldr	x21, [x19, #96]
   1a5c8:	cbz	x21, 1a5e8 <omp_in_final@@OMP_3.1+0x2f8>
   1a5cc:	ldr	x19, [x21, #16]
   1a5d0:	cbz	x19, 1a4f0 <omp_in_final@@OMP_3.1+0x200>
   1a5d4:	ldr	w0, [x19]
   1a5d8:	cmp	w20, w0
   1a5dc:	b.ne	1a4f0 <omp_in_final@@OMP_3.1+0x200>  // b.any
   1a5e0:	str	xzr, [x21, #16]
   1a5e4:	b	1a518 <omp_in_final@@OMP_3.1+0x228>
   1a5e8:	mov	x0, #0xc0                  	// #192
   1a5ec:	bl	b2f8 <fprintf@plt+0x2838>
   1a5f0:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1a5f4:	mov	x21, x0
   1a5f8:	mov	x1, x19
   1a5fc:	str	x21, [x19, #96]
   1a600:	ldr	w0, [x2, #1712]
   1a604:	str	xzr, [x21]
   1a608:	str	xzr, [x21, #8]
   1a60c:	stp	xzr, x22, [x21, #16]
   1a610:	bl	8960 <pthread_setspecific@plt>
   1a614:	b	1a5cc <omp_in_final@@OMP_3.1+0x2dc>
   1a618:	stp	x29, x30, [sp, #-336]!
   1a61c:	mrs	x7, tpidr_el0
   1a620:	adrp	x6, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1a624:	ldr	x6, [x6, #3992]
   1a628:	mov	x29, sp
   1a62c:	stp	x25, x26, [sp, #64]
   1a630:	add	x25, x7, x6
   1a634:	mov	x26, x4
   1a638:	stp	x19, x20, [sp, #16]
   1a63c:	adrp	x20, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1a640:	adrp	x19, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1a644:	stp	x21, x22, [sp, #32]
   1a648:	add	x19, x19, #0x2b0
   1a64c:	stp	x23, x24, [sp, #48]
   1a650:	stp	x27, x28, [sp, #80]
   1a654:	stp	x6, x7, [x29, #168]
   1a658:	ldr	w6, [x25, #44]
   1a65c:	ldr	x7, [x20, #1584]
   1a660:	cmp	w6, #0x0
   1a664:	ldr	x22, [x25, #80]
   1a668:	cset	w8, ne  // ne = any
   1a66c:	str	w6, [x29, #136]
   1a670:	str	w8, [x29, #196]
   1a674:	add	x9, x22, #0x90
   1a678:	stp	x1, x0, [x29, #208]
   1a67c:	cmp	x22, #0x0
   1a680:	csel	x19, x19, x9, eq  // eq = none
   1a684:	str	x5, [x29, #232]
   1a688:	mov	w5, w6
   1a68c:	str	w2, [x29, #252]
   1a690:	ldr	x21, [x25, #96]
   1a694:	cbnz	x7, 1aff4 <omp_in_final@@OMP_3.1+0xd04>
   1a698:	ldp	x1, x0, [x29, #168]
   1a69c:	add	w5, w5, #0x1
   1a6a0:	ldr	w2, [x29, #252]
   1a6a4:	cmp	w2, #0x1
   1a6a8:	add	x0, x0, x1
   1a6ac:	add	x7, x0, #0x10
   1a6b0:	ldp	x8, x9, [x0, #16]
   1a6b4:	stp	x8, x9, [x26, #8]
   1a6b8:	ldp	x8, x9, [x7, #16]
   1a6bc:	stp	x8, x9, [x26, #24]
   1a6c0:	ldp	x8, x9, [x7, #32]
   1a6c4:	stp	x8, x9, [x26, #40]
   1a6c8:	ldp	x6, x7, [x7, #48]
   1a6cc:	str	x26, [x0, #16]
   1a6d0:	stp	wzr, w5, [x0, #40]
   1a6d4:	stp	x6, x7, [x26, #56]
   1a6d8:	b.ls	1a6e8 <omp_in_final@@OMP_3.1+0x3f8>  // b.plast
   1a6dc:	ldr	w1, [x0, #48]
   1a6e0:	add	w1, w1, #0x1
   1a6e4:	str	w1, [x0, #48]
   1a6e8:	ldp	x1, x0, [x29, #168]
   1a6ec:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1a6f0:	add	x4, x26, #0x100
   1a6f4:	str	x4, [x29, #224]
   1a6f8:	ldr	x2, [x2, #1520]
   1a6fc:	add	x1, x0, x1
   1a700:	add	x0, x26, #0x540
   1a704:	stp	xzr, xzr, [x1, #64]
   1a708:	stp	x4, xzr, [x1, #24]
   1a70c:	str	x0, [x1, #80]
   1a710:	ldr	x1, [x19]
   1a714:	str	x1, [x29, #240]
   1a718:	cbnz	x2, 1b028 <omp_in_final@@OMP_3.1+0xd38>
   1a71c:	ldrb	w1, [x19, #26]
   1a720:	str	w1, [x29, #192]
   1a724:	cbz	w1, 1a738 <omp_in_final@@OMP_3.1+0x448>
   1a728:	tst	x3, #0x7
   1a72c:	and	w24, w3, #0x7
   1a730:	csel	w1, w24, w1, ne  // ne = any
   1a734:	str	w1, [x29, #192]
   1a738:	adrp	x1, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1a73c:	ldr	w2, [x29, #192]
   1a740:	str	w2, [x29, #248]
   1a744:	ldr	x1, [x1, #1560]
   1a748:	cbnz	x1, 1b048 <omp_in_final@@OMP_3.1+0xd58>
   1a74c:	mov	x2, x19
   1a750:	mov	x1, x22
   1a754:	bl	14cf8 <GOMP_single_copy_end@@GOMP_1.0+0x19f0>
   1a758:	ldp	x1, x0, [x29, #168]
   1a75c:	ldr	x2, [x29, #232]
   1a760:	add	x1, x0, x1
   1a764:	ldr	w0, [x29, #252]
   1a768:	cmp	w0, #0x1
   1a76c:	ldr	x0, [x1, #80]
   1a770:	str	x2, [x0, #40]
   1a774:	ldr	x0, [x29, #240]
   1a778:	str	x0, [x26, #1488]
   1a77c:	ldrb	w0, [x29, #248]
   1a780:	strb	w0, [x26, #1514]
   1a784:	b.eq	1a9d0 <omp_in_final@@OMP_3.1+0x6e0>  // b.none
   1a788:	ldr	x0, [x20, #1584]
   1a78c:	cbnz	x0, 1b06c <omp_in_final@@OMP_3.1+0xd7c>
   1a790:	str	wzr, [x29, #124]
   1a794:	str	wzr, [x29, #140]
   1a798:	stp	wzr, wzr, [x29, #160]
   1a79c:	str	wzr, [x29, #192]
   1a7a0:	ldr	w1, [x29, #136]
   1a7a4:	cbz	w1, 1a9f0 <omp_in_final@@OMP_3.1+0x700>
   1a7a8:	ldr	w1, [x29, #252]
   1a7ac:	cbnz	w1, 1b308 <omp_in_final@@OMP_3.1+0x1018>
   1a7b0:	mov	w25, #0x1                   	// #1
   1a7b4:	str	wzr, [x29, #112]
   1a7b8:	stp	wzr, wzr, [x29, #144]
   1a7bc:	str	xzr, [x29, #152]
   1a7c0:	cbnz	x0, 1b190 <omp_in_final@@OMP_3.1+0xea0>
   1a7c4:	ldr	w2, [x29, #252]
   1a7c8:	adrp	x27, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1a7cc:	mov	w1, #0x70                  	// #112
   1a7d0:	sub	w0, w2, w25
   1a7d4:	cmp	w25, w2
   1a7d8:	add	x2, x27, #0x670
   1a7dc:	str	x2, [x29, #128]
   1a7e0:	mov	x2, sp
   1a7e4:	umsubl	x0, w0, w1, x2
   1a7e8:	mov	sp, x0
   1a7ec:	mov	x23, sp
   1a7f0:	b.cs	1a980 <omp_in_final@@OMP_3.1+0x690>  // b.hs, b.nlast
   1a7f4:	adrp	x28, 1a000 <GOMP_task_reduction_remap@@GOMP_5.0+0x390>
   1a7f8:	add	x0, x28, #0x380
   1a7fc:	str	x0, [x29, #184]
   1a800:	mov	w7, #0xd0                  	// #208
   1a804:	ldr	x1, [x29, #168]
   1a808:	umaddl	x7, w25, w7, x26
   1a80c:	ldr	x0, [x29, #176]
   1a810:	add	x24, x7, #0x540
   1a814:	ubfiz	x27, x25, #3, #32
   1a818:	str	x21, [x29, #200]
   1a81c:	add	x28, x0, x1
   1a820:	ldr	w1, [x29, #124]
   1a824:	ldr	w0, [x29, #252]
   1a828:	mov	x21, x26
   1a82c:	mov	x26, x28
   1a830:	mov	x28, x24
   1a834:	sub	w0, w0, w1
   1a838:	str	w0, [x29, #104]
   1a83c:	mov	w0, w25
   1a840:	mov	x24, x19
   1a844:	mov	x25, x22
   1a848:	mov	x22, x23
   1a84c:	mov	w23, w0
   1a850:	ldr	x19, [x29, #128]
   1a854:	b	1a8f8 <omp_in_final@@OMP_3.1+0x608>
   1a858:	ldp	x0, x3, [x29, #216]
   1a85c:	str	x0, [x22]
   1a860:	ldr	w6, [x21, #36]
   1a864:	mov	x2, x24
   1a868:	ldr	w10, [x26, #48]
   1a86c:	mov	x1, x25
   1a870:	add	w6, w6, #0x1
   1a874:	stp	x21, x3, [x22, #16]
   1a878:	ldr	x0, [x29, #208]
   1a87c:	str	x0, [x22, #8]
   1a880:	str	xzr, [x22, #32]
   1a884:	mov	x0, x28
   1a888:	stp	w23, w6, [x22, #40]
   1a88c:	str	w10, [x22, #48]
   1a890:	stp	xzr, xzr, [x22, #64]
   1a894:	str	x28, [x22, #80]
   1a898:	bl	14cf8 <GOMP_single_copy_end@@GOMP_1.0+0x19f0>
   1a89c:	ldr	x0, [x22, #80]
   1a8a0:	mov	x3, x22
   1a8a4:	ldp	x4, x1, [x29, #232]
   1a8a8:	str	x1, [x28, #144]
   1a8ac:	ldrb	w1, [x29, #248]
   1a8b0:	strb	w1, [x28, #170]
   1a8b4:	mov	x1, x19
   1a8b8:	str	x4, [x0, #40]
   1a8bc:	add	x0, x22, #0x68
   1a8c0:	ldr	x4, [x29, #200]
   1a8c4:	str	x4, [x22, #88]
   1a8c8:	ldrb	w4, [x29, #196]
   1a8cc:	add	x22, x22, #0x70
   1a8d0:	ldr	x2, [x29, #184]
   1a8d4:	sturb	w4, [x22, #-12]
   1a8d8:	bl	87f0 <pthread_create@plt>
   1a8dc:	cbnz	w0, 1b540 <omp_in_final@@OMP_3.1+0x1250>
   1a8e0:	ldr	w0, [x29, #252]
   1a8e4:	add	w23, w23, #0x1
   1a8e8:	add	x27, x27, #0x8
   1a8ec:	add	x28, x28, #0xd0
   1a8f0:	cmp	w0, w23
   1a8f4:	b.eq	1a95c <omp_in_final@@OMP_3.1+0x66c>  // b.none
   1a8f8:	ldr	x0, [x20, #1584]
   1a8fc:	str	wzr, [x22, #96]
   1a900:	ldur	d0, [x26, #52]
   1a904:	stur	d0, [x22, #52]
   1a908:	cbz	x0, 1a858 <omp_in_final@@OMP_3.1+0x568>
   1a90c:	ldr	w0, [x29, #192]
   1a910:	cmp	w0, #0x3
   1a914:	b.eq	1abb4 <omp_in_final@@OMP_3.1+0x8c4>  // b.none
   1a918:	cmp	w0, #0x4
   1a91c:	b.eq	1abdc <omp_in_final@@OMP_3.1+0x8ec>  // b.none
   1a920:	cmp	w0, #0x1
   1a924:	b.eq	1abb4 <omp_in_final@@OMP_3.1+0x8c4>  // b.none
   1a928:	ldr	w0, [x29, #164]
   1a92c:	add	w0, w0, #0x1
   1a930:	str	w0, [x22, #96]
   1a934:	ldr	x0, [x29, #152]
   1a938:	cbz	x0, 1a94c <omp_in_final@@OMP_3.1+0x65c>
   1a93c:	ldr	x0, [x29, #200]
   1a940:	ldr	x0, [x0]
   1a944:	ldr	x0, [x0, x27]
   1a948:	cbnz	x0, 1a8e0 <omp_in_final@@OMP_3.1+0x5f0>
   1a94c:	ldr	w1, [x29, #164]
   1a950:	mov	x0, x19
   1a954:	bl	1e750 <omp_pause_resource_all_@@OMP_5.0+0x468>
   1a958:	b	1a858 <omp_in_final@@OMP_3.1+0x568>
   1a95c:	ldr	x0, [x29, #128]
   1a960:	add	x28, x29, #0x110
   1a964:	mov	x26, x21
   1a968:	mov	x23, x22
   1a96c:	cmp	x0, x28
   1a970:	ldr	x21, [x29, #200]
   1a974:	b.ne	1a980 <omp_in_final@@OMP_3.1+0x690>  // b.any
   1a978:	mov	x0, x28
   1a97c:	bl	8730 <pthread_attr_destroy@plt>
   1a980:	ldr	w0, [x29, #136]
   1a984:	cbz	w0, 1ac30 <omp_in_final@@OMP_3.1+0x940>
   1a988:	add	x0, x26, #0x80
   1a98c:	bl	1d0f0 <omp_get_num_procs@@OMP_1.0+0x540>
   1a990:	ldr	w1, [x29, #144]
   1a994:	ldr	w0, [x29, #252]
   1a998:	cmp	w0, w1
   1a99c:	b.cc	1b0a4 <omp_in_final@@OMP_3.1+0xdb4>  // b.lo, b.ul, b.last
   1a9a0:	ldr	w0, [x29, #148]
   1a9a4:	cbnz	w0, 1b184 <omp_in_final@@OMP_3.1+0xe94>
   1a9a8:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1a9ac:	ldrb	w0, [x0, #1536]
   1a9b0:	cbnz	w0, 1b0fc <omp_in_final@@OMP_3.1+0xe0c>
   1a9b4:	ldr	x0, [x29, #152]
   1a9b8:	cbz	x0, 1a9d0 <omp_in_final@@OMP_3.1+0x6e0>
   1a9bc:	ldr	w0, [x26, #48]
   1a9c0:	cmp	w0, #0x40
   1a9c4:	b.ls	1a9d0 <omp_in_final@@OMP_3.1+0x6e0>  // b.plast
   1a9c8:	ldr	x0, [x29, #152]
   1a9cc:	bl	88b0 <free@plt>
   1a9d0:	mov	sp, x29
   1a9d4:	ldp	x19, x20, [sp, #16]
   1a9d8:	ldp	x21, x22, [sp, #32]
   1a9dc:	ldp	x23, x24, [sp, #48]
   1a9e0:	ldp	x25, x26, [sp, #64]
   1a9e4:	ldp	x27, x28, [sp, #80]
   1a9e8:	ldp	x29, x30, [sp], #336
   1a9ec:	ret
   1a9f0:	ldr	w0, [x21, #12]
   1a9f4:	ldr	w1, [x29, #252]
   1a9f8:	str	w0, [x29, #144]
   1a9fc:	str	w1, [x29, #200]
   1aa00:	cmp	w1, w0
   1aa04:	b.hi	1ae48 <omp_in_final@@OMP_3.1+0xb58>  // b.pmore
   1aa08:	ldr	w1, [x29, #252]
   1aa0c:	ldr	w0, [x21, #8]
   1aa10:	str	w1, [x21, #12]
   1aa14:	cmp	w0, w1
   1aa18:	b.ls	1ae74 <omp_in_final@@OMP_3.1+0xb84>  // b.plast
   1aa1c:	ldr	w0, [x29, #200]
   1aa20:	cmp	w0, #0x1
   1aa24:	b.ls	1b3f8 <omp_in_final@@OMP_3.1+0x1108>  // b.plast
   1aa28:	ldr	w1, [x29, #144]
   1aa2c:	mov	w25, #0x1                   	// #1
   1aa30:	ldr	w0, [x29, #252]
   1aa34:	ldr	x3, [x29, #168]
   1aa38:	sub	w0, w0, w1
   1aa3c:	ubfiz	x2, x1, #3, #32
   1aa40:	sub	w1, w1, #0x1
   1aa44:	lsl	x0, x0, #3
   1aa48:	stp	x0, x2, [x29, #96]
   1aa4c:	ldr	x2, [x29, #176]
   1aa50:	str	wzr, [x29, #112]
   1aa54:	str	w1, [x29, #128]
   1aa58:	add	x24, x2, x3
   1aa5c:	str	wzr, [x29, #148]
   1aa60:	mov	x0, x24
   1aa64:	mov	w24, w25
   1aa68:	mov	x25, x26
   1aa6c:	mov	x26, x0
   1aa70:	str	xzr, [x29, #152]
   1aa74:	str	x23, [x29, #184]
   1aa78:	b	1ab28 <omp_in_final@@OMP_3.1+0x838>
   1aa7c:	ldr	x0, [x21]
   1aa80:	mov	w7, w24
   1aa84:	ubfiz	x28, x24, #3, #32
   1aa88:	mov	w13, #0x0                   	// #0
   1aa8c:	ldr	x27, [x0, x7, lsl #3]
   1aa90:	add	x4, x7, x7, lsl #1
   1aa94:	ldr	w1, [x25, #36]
   1aa98:	mov	x2, x19
   1aa9c:	add	x4, x7, x4, lsl #2
   1aaa0:	str	xzr, [x27, #32]
   1aaa4:	add	w1, w1, #0x1
   1aaa8:	stp	w24, w1, [x27, #40]
   1aaac:	lsl	x23, x4, #4
   1aab0:	ldr	w1, [x26, #48]
   1aab4:	ldr	x0, [x29, #224]
   1aab8:	stp	x25, x0, [x27, #16]
   1aabc:	add	x0, x23, #0x540
   1aac0:	add	x0, x25, x0
   1aac4:	str	w1, [x27, #48]
   1aac8:	stp	w9, w12, [x27, #52]
   1aacc:	mov	x1, x22
   1aad0:	stp	xzr, xzr, [x27, #64]
   1aad4:	str	x0, [x27, #80]
   1aad8:	str	w13, [x27, #92]
   1aadc:	bl	14cf8 <GOMP_single_copy_end@@GOMP_1.0+0x19f0>
   1aae0:	add	x4, x25, x23
   1aae4:	ldrb	w0, [x29, #248]
   1aae8:	add	x1, x27, #0x58
   1aaec:	strb	w0, [x4, #1514]
   1aaf0:	ldp	x3, x0, [x29, #232]
   1aaf4:	ldr	x2, [x27, #80]
   1aaf8:	str	x0, [x4, #1488]
   1aafc:	ldr	x0, [x25, #80]
   1ab00:	str	x3, [x2, #40]
   1ab04:	ldr	x2, [x29, #216]
   1ab08:	str	x2, [x27]
   1ab0c:	ldr	x2, [x29, #208]
   1ab10:	str	x2, [x27, #8]
   1ab14:	str	x1, [x0, x28]
   1ab18:	ldr	w0, [x29, #200]
   1ab1c:	add	w24, w24, #0x1
   1ab20:	cmp	w0, w24
   1ab24:	b.ls	1ac3c <omp_in_final@@OMP_3.1+0x94c>  // b.plast
   1ab28:	ldr	x0, [x20, #1584]
   1ab2c:	ldp	w9, w12, [x26, #52]
   1ab30:	cbz	x0, 1aa7c <omp_in_final@@OMP_3.1+0x78c>
   1ab34:	ldr	w0, [x29, #192]
   1ab38:	cmp	w0, #0x3
   1ab3c:	b.eq	1adb0 <omp_in_final@@OMP_3.1+0xac0>  // b.none
   1ab40:	cmp	w0, #0x4
   1ab44:	b.eq	1ac80 <omp_in_final@@OMP_3.1+0x990>  // b.none
   1ab48:	cmp	w0, #0x1
   1ab4c:	b.eq	1adb0 <omp_in_final@@OMP_3.1+0xac0>  // b.none
   1ab50:	ldr	x0, [x29, #152]
   1ab54:	cbz	x0, 1add4 <omp_in_final@@OMP_3.1+0xae4>
   1ab58:	ldr	w0, [x29, #148]
   1ab5c:	cbz	w0, 1b2b4 <omp_in_final@@OMP_3.1+0xfc4>
   1ab60:	ldr	w2, [x25, #44]
   1ab64:	ldr	w0, [x29, #164]
   1ab68:	ldr	x3, [x29, #152]
   1ab6c:	sub	w0, w0, w2
   1ab70:	ldr	x27, [x3, x0, lsl #3]
   1ab74:	add	x1, x3, x0, lsl #3
   1ab78:	cbz	x27, 1af54 <omp_in_final@@OMP_3.1+0xc64>
   1ab7c:	ldr	w2, [x29, #148]
   1ab80:	mov	w7, w24
   1ab84:	ldr	x0, [x21]
   1ab88:	sub	w2, w2, #0x1
   1ab8c:	ubfiz	x28, x24, #3, #32
   1ab90:	str	w2, [x29, #148]
   1ab94:	ldr	x2, [x27, #8]
   1ab98:	str	x2, [x1]
   1ab9c:	mov	w1, #0x1                   	// #1
   1aba0:	str	x27, [x0, x7, lsl #3]
   1aba4:	str	w1, [x29, #112]
   1aba8:	ldr	w0, [x29, #164]
   1abac:	add	w13, w0, #0x1
   1abb0:	b	1aa90 <omp_in_final@@OMP_3.1+0x7a0>
   1abb4:	ldr	w0, [x29, #140]
   1abb8:	ldr	w1, [x29, #160]
   1abbc:	cmp	w0, w1
   1abc0:	ldr	w0, [x29, #164]
   1abc4:	add	w0, w0, #0x1
   1abc8:	b.eq	1afc0 <omp_in_final@@OMP_3.1+0xcd0>  // b.none
   1abcc:	ldr	w1, [x29, #160]
   1abd0:	add	w1, w1, #0x1
   1abd4:	str	w1, [x29, #160]
   1abd8:	b	1a930 <omp_in_final@@OMP_3.1+0x640>
   1abdc:	ldr	w0, [x29, #160]
   1abe0:	cbnz	w0, 1ae10 <omp_in_final@@OMP_3.1+0xb20>
   1abe4:	ldr	w1, [x29, #164]
   1abe8:	ldp	w2, w0, [x21, #44]
   1abec:	ldr	w3, [x29, #124]
   1abf0:	ldr	w4, [x29, #140]
   1abf4:	add	w0, w2, w0
   1abf8:	cmp	w3, w1
   1abfc:	add	w1, w4, w1
   1ac00:	cinc	w1, w1, hi  // hi = pmore
   1ac04:	cmp	w0, w1
   1ac08:	csel	w1, w1, w2, ne  // ne = any
   1ac0c:	str	w1, [x22, #52]
   1ac10:	str	w1, [x29, #164]
   1ac14:	cmp	w3, w1
   1ac18:	add	w0, w1, #0x1
   1ac1c:	b.ls	1aed4 <omp_in_final@@OMP_3.1+0xbe4>  // b.plast
   1ac20:	add	w1, w4, #0x1
   1ac24:	str	w1, [x22, #56]
   1ac28:	b	1a930 <omp_in_final@@OMP_3.1+0x640>
   1ac2c:	str	xzr, [x29, #152]
   1ac30:	add	x0, x21, #0x40
   1ac34:	bl	1d0f0 <omp_get_num_procs@@OMP_1.0+0x540>
   1ac38:	b	1a990 <omp_in_final@@OMP_3.1+0x6a0>
   1ac3c:	ldr	x0, [x29, #152]
   1ac40:	mov	x26, x25
   1ac44:	mov	w25, w24
   1ac48:	ldr	x23, [x29, #184]
   1ac4c:	cbnz	x0, 1b2c8 <omp_in_final@@OMP_3.1+0xfd8>
   1ac50:	ldr	w0, [x29, #252]
   1ac54:	cmp	w0, w25
   1ac58:	b.eq	1ac2c <omp_in_final@@OMP_3.1+0x93c>  // b.none
   1ac5c:	ldr	w1, [x29, #148]
   1ac60:	ldr	w0, [x29, #252]
   1ac64:	str	xzr, [x29, #152]
   1ac68:	add	w0, w0, w1
   1ac6c:	ldr	w1, [x29, #144]
   1ac70:	cmp	w1, w0
   1ac74:	b.cc	1b20c <omp_in_final@@OMP_3.1+0xf1c>  // b.lo, b.ul, b.last
   1ac78:	ldr	x0, [x20, #1584]
   1ac7c:	b	1a7c0 <omp_in_final@@OMP_3.1+0x4d0>
   1ac80:	ldr	w0, [x29, #160]
   1ac84:	cbz	w0, 1ae9c <omp_in_final@@OMP_3.1+0xbac>
   1ac88:	ldr	w1, [x29, #140]
   1ac8c:	ldr	w0, [x29, #160]
   1ac90:	cmp	w0, w1
   1ac94:	b.eq	1b328 <omp_in_final@@OMP_3.1+0x1038>  // b.none
   1ac98:	ldr	w0, [x29, #160]
   1ac9c:	mov	w12, #0x1                   	// #1
   1aca0:	add	w0, w0, #0x1
   1aca4:	str	w0, [x29, #160]
   1aca8:	ldr	x0, [x29, #152]
   1acac:	ldr	w9, [x29, #164]
   1acb0:	cbnz	x0, 1ab58 <omp_in_final@@OMP_3.1+0x868>
   1acb4:	ldr	x0, [x21]
   1acb8:	mov	w7, w24
   1acbc:	ubfiz	x28, x24, #3, #32
   1acc0:	ldr	x27, [x0, x7, lsl #3]
   1acc4:	ldr	w0, [x27, #92]
   1acc8:	ldr	w1, [x29, #164]
   1accc:	add	w1, w1, #0x1
   1acd0:	cmp	w1, w0
   1acd4:	b.eq	1adf4 <omp_in_final@@OMP_3.1+0xb04>  // b.none
   1acd8:	ldr	w23, [x25, #48]
   1acdc:	cmp	w23, #0x40
   1ace0:	ubfiz	x2, x23, #3, #32
   1ace4:	b.hi	1b36c <omp_in_final@@OMP_3.1+0x107c>  // b.pmore
   1ace8:	add	x0, x2, #0xf
   1acec:	and	x0, x0, #0xfffffffffffffff0
   1acf0:	sub	sp, sp, x0
   1acf4:	mov	x0, sp
   1acf8:	str	x0, [x29, #152]
   1acfc:	mov	w1, #0x0                   	// #0
   1ad00:	str	x7, [x29, #112]
   1ad04:	str	w12, [x29, #148]
   1ad08:	str	w9, [x29, #200]
   1ad0c:	bl	8770 <memset@plt>
   1ad10:	ldp	w0, w12, [x29, #144]
   1ad14:	ldr	w9, [x29, #200]
   1ad18:	cmp	w0, w24
   1ad1c:	ldr	x7, [x29, #112]
   1ad20:	b.ls	1ad88 <omp_in_final@@OMP_3.1+0xa98>  // b.plast
   1ad24:	ldr	w0, [x29, #128]
   1ad28:	ldr	x4, [x21]
   1ad2c:	sub	w2, w0, w24
   1ad30:	ldr	w3, [x25, #44]
   1ad34:	add	x2, x2, x7
   1ad38:	add	x0, x4, #0x8
   1ad3c:	ldr	x5, [x29, #152]
   1ad40:	add	x4, x4, x7, lsl #3
   1ad44:	mvn	w13, w3
   1ad48:	add	x2, x0, x2, lsl #3
   1ad4c:	add	w7, w3, w23
   1ad50:	ldr	x1, [x4]
   1ad54:	ldr	w0, [x1, #92]
   1ad58:	cmp	w0, w3
   1ad5c:	b.ls	1ad7c <omp_in_final@@OMP_3.1+0xa8c>  // b.plast
   1ad60:	cmp	w0, w7
   1ad64:	b.hi	1ad7c <omp_in_final@@OMP_3.1+0xa8c>  // b.pmore
   1ad68:	add	w0, w13, w0
   1ad6c:	ldr	x6, [x5, x0, lsl #3]
   1ad70:	str	x6, [x1, #8]
   1ad74:	ldr	x1, [x4]
   1ad78:	str	x1, [x5, x0, lsl #3]
   1ad7c:	str	xzr, [x4], #8
   1ad80:	cmp	x2, x4
   1ad84:	b.ne	1ad50 <omp_in_final@@OMP_3.1+0xa60>  // b.any
   1ad88:	ldr	w1, [x29, #144]
   1ad8c:	ldr	w0, [x29, #252]
   1ad90:	cmp	w0, w1
   1ad94:	b.hi	1b39c <omp_in_final@@OMP_3.1+0x10ac>  // b.pmore
   1ad98:	ldr	w0, [x29, #144]
   1ad9c:	sub	w0, w0, w24
   1ada0:	str	w0, [x29, #148]
   1ada4:	ldr	w0, [x29, #252]
   1ada8:	str	w0, [x29, #200]
   1adac:	b	1ab58 <omp_in_final@@OMP_3.1+0x868>
   1adb0:	ldr	w1, [x29, #140]
   1adb4:	ldr	w0, [x29, #160]
   1adb8:	cmp	w0, w1
   1adbc:	b.eq	1aee0 <omp_in_final@@OMP_3.1+0xbf0>  // b.none
   1adc0:	ldr	w0, [x29, #160]
   1adc4:	add	w0, w0, #0x1
   1adc8:	str	w0, [x29, #160]
   1adcc:	ldr	x0, [x29, #152]
   1add0:	cbnz	x0, 1ab58 <omp_in_final@@OMP_3.1+0x868>
   1add4:	ldr	x0, [x21]
   1add8:	mov	w7, w24
   1addc:	ldr	w1, [x29, #192]
   1ade0:	ubfiz	x28, x24, #3, #32
   1ade4:	ldr	x27, [x0, x7, lsl #3]
   1ade8:	cmp	w1, #0x1
   1adec:	ldr	w0, [x27, #92]
   1adf0:	b.ne	1acc8 <omp_in_final@@OMP_3.1+0x9d8>  // b.any
   1adf4:	cmp	w9, w0
   1adf8:	b.cs	1acd8 <omp_in_final@@OMP_3.1+0x9e8>  // b.hs, b.nlast
   1adfc:	add	w1, w9, w12
   1ae00:	cmp	w1, w0
   1ae04:	b.cc	1acd8 <omp_in_final@@OMP_3.1+0x9e8>  // b.lo, b.ul, b.last
   1ae08:	str	xzr, [x29, #152]
   1ae0c:	b	1aba8 <omp_in_final@@OMP_3.1+0x8b8>
   1ae10:	ldr	w0, [x29, #140]
   1ae14:	ldr	w1, [x29, #160]
   1ae18:	cmp	w0, w1
   1ae1c:	ldr	w0, [x29, #164]
   1ae20:	add	w0, w0, #0x1
   1ae24:	b.eq	1af20 <omp_in_final@@OMP_3.1+0xc30>  // b.none
   1ae28:	ldr	w1, [x29, #160]
   1ae2c:	add	w1, w1, #0x1
   1ae30:	str	w1, [x29, #160]
   1ae34:	ldr	w1, [x29, #164]
   1ae38:	str	w1, [x22, #52]
   1ae3c:	mov	w1, #0x1                   	// #1
   1ae40:	str	w1, [x22, #56]
   1ae44:	b	1a930 <omp_in_final@@OMP_3.1+0x640>
   1ae48:	cbnz	w0, 1b1dc <omp_in_final@@OMP_3.1+0xeec>
   1ae4c:	fmov	s0, w1
   1ae50:	stp	w1, wzr, [x21, #64]
   1ae54:	ldr	w1, [x29, #252]
   1ae58:	dup	v0.2s, v0.s[0]
   1ae5c:	ldr	w0, [x21, #8]
   1ae60:	str	w1, [x21, #12]
   1ae64:	str	wzr, [x29, #200]
   1ae68:	cmp	w0, w1
   1ae6c:	str	d0, [x21, #128]
   1ae70:	b.hi	1aa1c <omp_in_final@@OMP_3.1+0x72c>  // b.pmore
   1ae74:	ldr	x0, [x21]
   1ae78:	add	w1, w1, #0x1
   1ae7c:	str	w1, [x21, #8]
   1ae80:	ubfiz	x1, x1, #3, #32
   1ae84:	bl	b370 <fprintf@plt+0x28b0>
   1ae88:	str	x0, [x21]
   1ae8c:	ldp	x2, x1, [x29, #168]
   1ae90:	add	x1, x1, x2
   1ae94:	str	x1, [x0]
   1ae98:	b	1aa1c <omp_in_final@@OMP_3.1+0x72c>
   1ae9c:	ldr	w2, [x29, #164]
   1aea0:	ldp	w1, w0, [x25, #44]
   1aea4:	ldr	w3, [x29, #124]
   1aea8:	ldr	w4, [x29, #140]
   1aeac:	add	w0, w1, w0
   1aeb0:	cmp	w3, w2
   1aeb4:	add	w2, w2, w4
   1aeb8:	cinc	w2, w2, hi  // hi = pmore
   1aebc:	cmp	w0, w2
   1aec0:	csel	w0, w2, w1, ne  // ne = any
   1aec4:	str	w0, [x29, #164]
   1aec8:	cmp	w3, w0
   1aecc:	cinc	w12, w4, hi  // hi = pmore
   1aed0:	b	1aca8 <omp_in_final@@OMP_3.1+0x9b8>
   1aed4:	ldr	w1, [x29, #140]
   1aed8:	str	w1, [x22, #56]
   1aedc:	b	1a930 <omp_in_final@@OMP_3.1+0x640>
   1aee0:	ldr	w0, [x29, #164]
   1aee4:	ldp	w2, w1, [x25, #44]
   1aee8:	add	w3, w0, #0x1
   1aeec:	ldr	w4, [x29, #124]
   1aef0:	ldr	w0, [x29, #252]
   1aef4:	add	w1, w2, w1
   1aef8:	cmp	w1, w3
   1aefc:	mov	w1, #0x1                   	// #1
   1af00:	sub	w0, w0, w4
   1af04:	csel	w2, w3, w2, ne  // ne = any
   1af08:	cmp	w0, w24
   1af0c:	ldr	w0, [x29, #140]
   1af10:	stp	w1, w2, [x29, #160]
   1af14:	csel	w0, w0, w1, ne  // ne = any
   1af18:	str	w0, [x29, #140]
   1af1c:	b	1ab50 <omp_in_final@@OMP_3.1+0x860>
   1af20:	ldp	w2, w1, [x21, #44]
   1af24:	mov	w3, #0x1                   	// #1
   1af28:	add	w1, w2, w1
   1af2c:	cmp	w1, w0
   1af30:	ldr	w1, [x29, #104]
   1af34:	csel	w0, w2, w0, eq  // eq = none
   1af38:	stp	w3, w0, [x29, #160]
   1af3c:	cmp	w1, w23
   1af40:	ldr	w1, [x29, #140]
   1af44:	add	w0, w0, w3
   1af48:	csel	w1, w1, w3, ne  // ne = any
   1af4c:	str	w1, [x29, #140]
   1af50:	b	1ae34 <omp_in_final@@OMP_3.1+0xb44>
   1af54:	ldr	w0, [x29, #192]
   1af58:	cmp	w0, #0x1
   1af5c:	mov	w0, #0x1                   	// #1
   1af60:	str	w0, [x29, #112]
   1af64:	b.ne	1ab18 <omp_in_final@@OMP_3.1+0x828>  // b.any
   1af68:	add	w10, w9, w12
   1af6c:	cmp	w9, w10
   1af70:	b.cs	1b554 <omp_in_final@@OMP_3.1+0x1264>  // b.hs, b.nlast
   1af74:	sub	w0, w9, w2
   1af78:	sub	w7, w10, w2
   1af7c:	add	w4, w2, #0x1
   1af80:	ldr	x27, [x3, w0, uxtw #3]
   1af84:	add	x1, x3, w0, uxtw #3
   1af88:	cbnz	x27, 1ab7c <omp_in_final@@OMP_3.1+0x88c>
   1af8c:	add	w1, w4, w0
   1af90:	add	w0, w0, #0x1
   1af94:	cmp	w7, w0
   1af98:	b.ne	1af80 <omp_in_final@@OMP_3.1+0xc90>  // b.any
   1af9c:	mov	w0, #0x1                   	// #1
   1afa0:	str	w0, [x29, #112]
   1afa4:	cmp	w1, w10
   1afa8:	b.eq	1ab18 <omp_in_final@@OMP_3.1+0x828>  // b.none
   1afac:	ldr	x0, [x29, #152]
   1afb0:	sub	w2, w1, w2
   1afb4:	add	x1, x0, x2, lsl #3
   1afb8:	ldr	x27, [x0, x2, lsl #3]
   1afbc:	b	1ab7c <omp_in_final@@OMP_3.1+0x88c>
   1afc0:	ldp	w2, w1, [x21, #44]
   1afc4:	mov	w3, #0x1                   	// #1
   1afc8:	add	w1, w2, w1
   1afcc:	cmp	w1, w0
   1afd0:	ldr	w1, [x29, #104]
   1afd4:	csel	w0, w2, w0, eq  // eq = none
   1afd8:	stp	w3, w0, [x29, #160]
   1afdc:	cmp	w1, w23
   1afe0:	ldr	w1, [x29, #140]
   1afe4:	add	w0, w0, w3
   1afe8:	csel	w1, w1, w3, ne  // ne = any
   1afec:	str	w1, [x29, #140]
   1aff0:	b	1a930 <omp_in_final@@OMP_3.1+0x640>
   1aff4:	ldr	w0, [x25, #92]
   1aff8:	cbnz	w0, 1a698 <omp_in_final@@OMP_3.1+0x3a8>
   1affc:	str	w3, [x29, #248]
   1b000:	bl	1efa0 <omp_pause_resource_all_@@OMP_5.0+0xcb8>
   1b004:	ldp	w3, w1, [x29, #248]
   1b008:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1b00c:	cmp	w1, #0x1
   1b010:	ldrb	w0, [x0, #1536]
   1b014:	cset	w1, eq  // eq = none
   1b018:	tst	w1, w0
   1b01c:	b.ne	1b55c <omp_in_final@@OMP_3.1+0x126c>  // b.any
   1b020:	ldr	w5, [x25, #44]
   1b024:	b	1a698 <omp_in_final@@OMP_3.1+0x3a8>
   1b028:	adrp	x1, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1b02c:	mov	w4, w5
   1b030:	ldr	x1, [x1, #1640]
   1b034:	cmp	x1, w5, uxtw
   1b038:	b.ls	1a71c <omp_in_final@@OMP_3.1+0x42c>  // b.plast
   1b03c:	ldr	x1, [x2, x4, lsl #3]
   1b040:	str	x1, [x29, #240]
   1b044:	b	1a71c <omp_in_final@@OMP_3.1+0x42c>
   1b048:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1b04c:	ldr	w3, [x29, #192]
   1b050:	str	w3, [x29, #248]
   1b054:	ldr	x2, [x2, #1544]
   1b058:	cmp	x2, w5, uxtw
   1b05c:	b.ls	1a74c <omp_in_final@@OMP_3.1+0x45c>  // b.plast
   1b060:	ldrb	w1, [x1, w5, uxtw]
   1b064:	str	w1, [x29, #248]
   1b068:	b	1a74c <omp_in_final@@OMP_3.1+0x45c>
   1b06c:	ldr	w2, [x1, #92]
   1b070:	ldr	w3, [x29, #192]
   1b074:	sub	w2, w2, #0x1
   1b078:	str	w2, [x29, #164]
   1b07c:	cmp	w3, #0x3
   1b080:	b.eq	1b3c4 <omp_in_final@@OMP_3.1+0x10d4>  // b.none
   1b084:	cmp	w3, #0x4
   1b088:	b.eq	1b23c <omp_in_final@@OMP_3.1+0xf4c>  // b.none
   1b08c:	cmp	w3, #0x1
   1b090:	b.eq	1b3c4 <omp_in_final@@OMP_3.1+0x10d4>  // b.none
   1b094:	str	wzr, [x29, #124]
   1b098:	str	wzr, [x29, #140]
   1b09c:	str	wzr, [x29, #160]
   1b0a0:	b	1a7a0 <omp_in_final@@OMP_3.1+0x4b0>
   1b0a4:	ldr	w0, [x29, #144]
   1b0a8:	ldr	w2, [x29, #252]
   1b0ac:	sub	x2, x2, w0, uxtw
   1b0b0:	ldr	w0, [x29, #148]
   1b0b4:	cbnz	w0, 1b184 <omp_in_final@@OMP_3.1+0xe94>
   1b0b8:	ldr	w1, [x21, #64]
   1b0bc:	add	x0, x21, #0x80
   1b0c0:	ldr	w3, [x29, #252]
   1b0c4:	sub	w1, w3, w1
   1b0c8:	ldaxr	w4, [x0]
   1b0cc:	add	w4, w4, w1
   1b0d0:	stlxr	w5, w4, [x0]
   1b0d4:	cbnz	w5, 1b0c8 <omp_in_final@@OMP_3.1+0xdd8>
   1b0d8:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1b0dc:	add	x0, x0, #0x328
   1b0e0:	str	w3, [x21, #64]
   1b0e4:	ldxr	x1, [x0]
   1b0e8:	add	x1, x1, x2
   1b0ec:	stlxr	w3, x1, [x0]
   1b0f0:	cbnz	w3, 1b0e4 <omp_in_final@@OMP_3.1+0xdf4>
   1b0f4:	dmb	ish
   1b0f8:	b	1a9a8 <omp_in_final@@OMP_3.1+0x6b8>
   1b0fc:	ldr	w0, [x29, #196]
   1b100:	ldr	w1, [x29, #144]
   1b104:	cmp	w0, #0x0
   1b108:	ldr	w0, [x29, #252]
   1b10c:	ccmp	w0, w1, #0x0, eq  // eq = none
   1b110:	b.ne	1b5ac <omp_in_final@@OMP_3.1+0x12bc>  // b.any
   1b114:	ldr	w0, [x29, #112]
   1b118:	cbz	w0, 1a9b4 <omp_in_final@@OMP_3.1+0x6c4>
   1b11c:	bl	8a40 <pthread_self@plt>
   1b120:	mov	x19, x0
   1b124:	ldp	x2, x1, [x29, #168]
   1b128:	add	x2, x1, x2
   1b12c:	add	x1, x2, #0x10
   1b130:	ldr	w2, [x2, #92]
   1b134:	bl	8ad0 <fprintf@plt+0x10>
   1b138:	ldp	x1, x0, [x29, #168]
   1b13c:	mov	x23, #0x8                   	// #8
   1b140:	mov	w22, #0x1                   	// #1
   1b144:	add	x24, x0, x1
   1b148:	sub	x25, x19, x24
   1b14c:	ldr	w0, [x29, #252]
   1b150:	cmp	w22, w0
   1b154:	b.cs	1a9b4 <omp_in_final@@OMP_3.1+0x6c4>  // b.hs, b.nlast
   1b158:	ldr	x0, [x21]
   1b15c:	add	w22, w22, #0x1
   1b160:	ldr	x1, [x0, x23]
   1b164:	add	x23, x23, #0x8
   1b168:	cmp	x24, x1
   1b16c:	add	x0, x1, x25
   1b170:	ldr	w2, [x1, #92]
   1b174:	csel	x0, x0, x19, ne  // ne = any
   1b178:	add	x1, x1, #0x10
   1b17c:	bl	8ad0 <fprintf@plt+0x10>
   1b180:	b	1b14c <omp_in_final@@OMP_3.1+0xe5c>
   1b184:	ldr	w0, [x29, #148]
   1b188:	neg	w2, w0
   1b18c:	b	1b0b8 <omp_in_final@@OMP_3.1+0xdc8>
   1b190:	add	x28, x29, #0x110
   1b194:	mov	x0, x28
   1b198:	bl	8650 <pthread_attr_init@plt>
   1b19c:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1b1a0:	add	x1, x29, #0x108
   1b1a4:	add	x0, x0, #0x670
   1b1a8:	bl	89b0 <pthread_attr_getstacksize@plt>
   1b1ac:	cbz	w0, 1b2a4 <omp_in_final@@OMP_3.1+0xfb4>
   1b1b0:	ldr	w2, [x29, #252]
   1b1b4:	mov	w1, #0x70                  	// #112
   1b1b8:	sub	w0, w2, w25
   1b1bc:	cmp	w25, w2
   1b1c0:	mov	x2, sp
   1b1c4:	umsubl	x0, w0, w1, x2
   1b1c8:	mov	sp, x0
   1b1cc:	mov	x23, sp
   1b1d0:	b.cs	1a978 <omp_in_final@@OMP_3.1+0x688>  // b.hs, b.nlast
   1b1d4:	str	x28, [x29, #128]
   1b1d8:	b	1a7f4 <omp_in_final@@OMP_3.1+0x504>
   1b1dc:	ldr	w1, [x21, #64]
   1b1e0:	add	x0, x21, #0x80
   1b1e4:	ldr	w2, [x29, #252]
   1b1e8:	sub	w1, w2, w1
   1b1ec:	ldaxr	w3, [x0]
   1b1f0:	add	w3, w3, w1
   1b1f4:	stlxr	w4, w3, [x0]
   1b1f8:	cbnz	w4, 1b1ec <omp_in_final@@OMP_3.1+0xefc>
   1b1fc:	ldr	w0, [x29, #144]
   1b200:	str	w2, [x21, #64]
   1b204:	str	w0, [x29, #200]
   1b208:	b	1aa08 <omp_in_final@@OMP_3.1+0x718>
   1b20c:	ldr	w1, [x29, #144]
   1b210:	sub	x0, x0, w1, uxtw
   1b214:	cbz	w1, 1b31c <omp_in_final@@OMP_3.1+0x102c>
   1b218:	adrp	x1, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1b21c:	add	x1, x1, #0x328
   1b220:	ldxr	x2, [x1]
   1b224:	add	x2, x2, x0
   1b228:	stlxr	w3, x2, [x1]
   1b22c:	cbnz	w3, 1b220 <omp_in_final@@OMP_3.1+0xf30>
   1b230:	dmb	ish
   1b234:	ldr	x0, [x20, #1584]
   1b238:	b	1a7c0 <omp_in_final@@OMP_3.1+0x4d0>
   1b23c:	ldr	w2, [x1, #56]
   1b240:	ldr	w3, [x29, #252]
   1b244:	cmp	w2, w3
   1b248:	b.cc	1b480 <omp_in_final@@OMP_3.1+0x1190>  // b.lo, b.ul, b.last
   1b24c:	udiv	w4, w2, w3
   1b250:	ldr	w1, [x1, #52]
   1b254:	msub	w2, w4, w3, w2
   1b258:	add	w3, w4, #0x1
   1b25c:	madd	w2, w4, w2, w2
   1b260:	str	w4, [x29, #140]
   1b264:	ldr	w4, [x29, #164]
   1b268:	add	w2, w2, w1
   1b26c:	str	w2, [x29, #124]
   1b270:	cmp	w4, w2
   1b274:	b.cs	1b4a8 <omp_in_final@@OMP_3.1+0x11b8>  // b.hs, b.nlast
   1b278:	sub	w1, w4, w1
   1b27c:	udiv	w2, w1, w3
   1b280:	msub	w1, w2, w3, w1
   1b284:	sub	w1, w4, w1
   1b288:	str	w1, [x29, #164]
   1b28c:	ldp	x2, x1, [x29, #168]
   1b290:	str	wzr, [x29, #160]
   1b294:	add	x1, x1, x2
   1b298:	ldr	w2, [x29, #164]
   1b29c:	stp	w2, w3, [x1, #52]
   1b2a0:	b	1a7a0 <omp_in_final@@OMP_3.1+0x4b0>
   1b2a4:	ldr	x1, [x29, #264]
   1b2a8:	mov	x0, x28
   1b2ac:	bl	8780 <pthread_attr_setstacksize@plt>
   1b2b0:	b	1b1b0 <omp_in_final@@OMP_3.1+0xec0>
   1b2b4:	ldr	x23, [x29, #184]
   1b2b8:	mov	x26, x25
   1b2bc:	mov	w25, w24
   1b2c0:	mov	w0, #0x1                   	// #1
   1b2c4:	str	w0, [x29, #112]
   1b2c8:	ldr	w1, [x29, #144]
   1b2cc:	ldr	w0, [x29, #252]
   1b2d0:	cmp	w0, w1
   1b2d4:	b.hi	1b45c <omp_in_final@@OMP_3.1+0x116c>  // b.pmore
   1b2d8:	sub	w0, w1, w0
   1b2dc:	ldr	w1, [x29, #148]
   1b2e0:	cmp	w0, w1
   1b2e4:	cset	w0, eq  // eq = none
   1b2e8:	cbz	w0, 1b408 <omp_in_final@@OMP_3.1+0x1118>
   1b2ec:	ldr	w0, [x26, #48]
   1b2f0:	str	wzr, [x29, #148]
   1b2f4:	cmp	w0, #0x40
   1b2f8:	b.ls	1ac50 <omp_in_final@@OMP_3.1+0x960>  // b.plast
   1b2fc:	ldr	x0, [x29, #152]
   1b300:	bl	88b0 <free@plt>
   1b304:	b	1ac50 <omp_in_final@@OMP_3.1+0x960>
   1b308:	ldr	w0, [x29, #252]
   1b30c:	mov	w25, #0x1                   	// #1
   1b310:	str	wzr, [x29, #112]
   1b314:	str	wzr, [x29, #148]
   1b318:	str	xzr, [x29, #152]
   1b31c:	sub	x0, x0, #0x1
   1b320:	str	wzr, [x29, #144]
   1b324:	b	1b218 <omp_in_final@@OMP_3.1+0xf28>
   1b328:	ldr	w0, [x29, #164]
   1b32c:	ldp	w2, w1, [x25, #44]
   1b330:	add	w4, w0, #0x1
   1b334:	ldr	w3, [x29, #124]
   1b338:	ldr	w0, [x29, #252]
   1b33c:	add	w1, w2, w1
   1b340:	cmp	w1, w4
   1b344:	sub	w0, w0, w3
   1b348:	csel	w2, w4, w2, ne  // ne = any
   1b34c:	cmp	w0, w24
   1b350:	ldr	w0, [x29, #140]
   1b354:	mov	w3, #0x1                   	// #1
   1b358:	csel	w12, w3, w3, ne  // ne = any
   1b35c:	csel	w0, w0, w3, ne  // ne = any
   1b360:	str	w0, [x29, #140]
   1b364:	stp	w3, w2, [x29, #160]
   1b368:	b	1aca8 <omp_in_final@@OMP_3.1+0x9b8>
   1b36c:	mov	x0, x2
   1b370:	str	x7, [x29, #112]
   1b374:	str	w12, [x29, #148]
   1b378:	str	w9, [x29, #200]
   1b37c:	bl	b2f8 <fprintf@plt+0x2838>
   1b380:	ldr	w23, [x25, #48]
   1b384:	ldr	w12, [x29, #148]
   1b388:	ldr	w9, [x29, #200]
   1b38c:	ubfiz	x2, x23, #3, #32
   1b390:	str	x0, [x29, #152]
   1b394:	ldr	x7, [x29, #112]
   1b398:	b	1acfc <omp_in_final@@OMP_3.1+0xa0c>
   1b39c:	ldp	x2, x3, [x29, #96]
   1b3a0:	mov	w1, #0x0                   	// #0
   1b3a4:	ldr	x0, [x21]
   1b3a8:	str	w12, [x29, #148]
   1b3ac:	str	w9, [x29, #200]
   1b3b0:	add	x0, x0, x3
   1b3b4:	bl	8770 <memset@plt>
   1b3b8:	ldr	w12, [x29, #148]
   1b3bc:	ldr	w9, [x29, #200]
   1b3c0:	b	1ad98 <omp_in_final@@OMP_3.1+0xaa8>
   1b3c4:	ldp	x2, x1, [x29, #168]
   1b3c8:	add	x1, x1, x2
   1b3cc:	ldr	w2, [x29, #252]
   1b3d0:	ldr	w1, [x1, #56]
   1b3d4:	cmp	w1, w2
   1b3d8:	b.cs	1b46c <omp_in_final@@OMP_3.1+0x117c>  // b.hs, b.nlast
   1b3dc:	udiv	w3, w2, w1
   1b3e0:	mov	w4, #0x1                   	// #1
   1b3e4:	str	w4, [x29, #160]
   1b3e8:	msub	w1, w3, w1, w2
   1b3ec:	str	w3, [x29, #140]
   1b3f0:	str	w1, [x29, #124]
   1b3f4:	b	1a7a0 <omp_in_final@@OMP_3.1+0x4b0>
   1b3f8:	mov	w25, #0x1                   	// #1
   1b3fc:	str	wzr, [x29, #112]
   1b400:	str	wzr, [x29, #148]
   1b404:	b	1ac5c <omp_in_final@@OMP_3.1+0x96c>
   1b408:	ldr	w0, [x29, #192]
   1b40c:	cmp	w0, #0x3
   1b410:	b.eq	1b504 <omp_in_final@@OMP_3.1+0x1214>  // b.none
   1b414:	cmp	w0, #0x4
   1b418:	b.eq	1b4d0 <omp_in_final@@OMP_3.1+0x11e0>  // b.none
   1b41c:	cmp	w0, #0x1
   1b420:	b.eq	1b504 <omp_in_final@@OMP_3.1+0x1214>  // b.none
   1b424:	ldr	w1, [x29, #148]
   1b428:	mov	w25, #0x1                   	// #1
   1b42c:	ldr	w0, [x29, #252]
   1b430:	add	w0, w0, w1
   1b434:	cbz	w1, 1ac6c <omp_in_final@@OMP_3.1+0x97c>
   1b438:	ldr	w2, [x21, #64]
   1b43c:	add	x1, x21, #0x80
   1b440:	sub	w2, w0, w2
   1b444:	ldaxr	w3, [x1]
   1b448:	add	w3, w3, w2
   1b44c:	stlxr	w4, w3, [x1]
   1b450:	cbnz	w4, 1b444 <omp_in_final@@OMP_3.1+0x1154>
   1b454:	str	w0, [x21, #64]
   1b458:	b	1ac6c <omp_in_final@@OMP_3.1+0x97c>
   1b45c:	ldr	w0, [x29, #144]
   1b460:	cmp	w0, w25
   1b464:	cset	w0, eq  // eq = none
   1b468:	b	1b2e8 <omp_in_final@@OMP_3.1+0xff8>
   1b46c:	mov	w1, #0x1                   	// #1
   1b470:	str	wzr, [x29, #124]
   1b474:	str	w1, [x29, #140]
   1b478:	str	w1, [x29, #160]
   1b47c:	b	1a7a0 <omp_in_final@@OMP_3.1+0x4b0>
   1b480:	ldr	w5, [x29, #252]
   1b484:	mov	w3, #0x1                   	// #1
   1b488:	ldr	w6, [x29, #164]
   1b48c:	stp	w6, w3, [x1, #52]
   1b490:	str	w3, [x29, #160]
   1b494:	udiv	w4, w5, w2
   1b498:	msub	w1, w4, w2, w5
   1b49c:	str	w4, [x29, #140]
   1b4a0:	str	w1, [x29, #124]
   1b4a4:	b	1a7a0 <omp_in_final@@OMP_3.1+0x4b0>
   1b4a8:	ldr	w5, [x29, #164]
   1b4ac:	ldr	w1, [x29, #124]
   1b4b0:	ldr	w4, [x29, #140]
   1b4b4:	sub	w2, w5, w1
   1b4b8:	mov	w3, w4
   1b4bc:	udiv	w1, w2, w4
   1b4c0:	msub	w1, w1, w4, w2
   1b4c4:	sub	w1, w5, w1
   1b4c8:	str	w1, [x29, #164]
   1b4cc:	b	1b28c <omp_in_final@@OMP_3.1+0xf9c>
   1b4d0:	ldp	x1, x0, [x29, #168]
   1b4d4:	add	x0, x0, x1
   1b4d8:	ldr	w0, [x0, #52]
   1b4dc:	str	w0, [x29, #164]
   1b4e0:	ldr	w0, [x29, #160]
   1b4e4:	cbz	w0, 1b424 <omp_in_final@@OMP_3.1+0x1134>
   1b4e8:	mov	w1, #0x1                   	// #1
   1b4ec:	ldr	w0, [x26, #48]
   1b4f0:	str	w1, [x29, #160]
   1b4f4:	ldr	w1, [x29, #252]
   1b4f8:	udiv	w0, w1, w0
   1b4fc:	str	w0, [x29, #140]
   1b500:	b	1b424 <omp_in_final@@OMP_3.1+0x1134>
   1b504:	ldp	x1, x0, [x29, #168]
   1b508:	add	x0, x0, x1
   1b50c:	ldr	w1, [x29, #252]
   1b510:	ldr	w0, [x0, #56]
   1b514:	cmp	w0, w1
   1b518:	b.cs	1b524 <omp_in_final@@OMP_3.1+0x1234>  // b.hs, b.nlast
   1b51c:	udiv	w0, w1, w0
   1b520:	str	w0, [x29, #140]
   1b524:	ldp	x1, x0, [x29, #168]
   1b528:	add	x0, x0, x1
   1b52c:	mov	w1, #0x1                   	// #1
   1b530:	ldr	w0, [x0, #92]
   1b534:	sub	w0, w0, #0x1
   1b538:	stp	w1, w0, [x29, #160]
   1b53c:	b	1b424 <omp_in_final@@OMP_3.1+0x1134>
   1b540:	bl	87e0 <strerror@plt>
   1b544:	mov	x1, x0
   1b548:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1b54c:	add	x0, x0, #0x7c0
   1b550:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   1b554:	mov	w1, w9
   1b558:	b	1af9c <omp_in_final@@OMP_3.1+0xcac>
   1b55c:	str	w3, [x29, #248]
   1b560:	bl	8a40 <pthread_self@plt>
   1b564:	ldr	w2, [x25, #92]
   1b568:	add	x24, x25, #0x10
   1b56c:	mov	x1, x24
   1b570:	bl	8ad0 <fprintf@plt+0x10>
   1b574:	ldp	x0, x1, [x25, #16]
   1b578:	stp	x0, x1, [x26, #8]
   1b57c:	ldr	w5, [x25, #44]
   1b580:	ldp	x0, x1, [x25, #32]
   1b584:	stp	x0, x1, [x26, #24]
   1b588:	add	w5, w5, #0x1
   1b58c:	ldp	x0, x1, [x25, #48]
   1b590:	stp	x0, x1, [x26, #40]
   1b594:	ldr	w3, [x29, #248]
   1b598:	ldp	x0, x1, [x25, #64]
   1b59c:	str	x26, [x25, #16]
   1b5a0:	stp	wzr, w5, [x25, #40]
   1b5a4:	stp	x0, x1, [x26, #56]
   1b5a8:	b	1a6e8 <omp_in_final@@OMP_3.1+0x3f8>
   1b5ac:	bl	8a40 <pthread_self@plt>
   1b5b0:	mov	x19, x0
   1b5b4:	ldp	x2, x1, [x29, #168]
   1b5b8:	add	x2, x1, x2
   1b5bc:	add	x1, x2, #0x10
   1b5c0:	ldr	w2, [x2, #92]
   1b5c4:	bl	8ad0 <fprintf@plt+0x10>
   1b5c8:	ldr	w0, [x29, #136]
   1b5cc:	cbz	w0, 1b138 <omp_in_final@@OMP_3.1+0xe48>
   1b5d0:	ldr	w0, [x29, #252]
   1b5d4:	mov	x1, #0x10                  	// #16
   1b5d8:	mov	w21, #0x1                   	// #1
   1b5dc:	sub	w19, w0, #0x1
   1b5e0:	mov	w0, #0x70                  	// #112
   1b5e4:	umsubl	x19, w19, w0, x1
   1b5e8:	add	x19, x23, x19
   1b5ec:	ldr	w0, [x29, #252]
   1b5f0:	cmp	w21, w0
   1b5f4:	b.cs	1a9b4 <omp_in_final@@OMP_3.1+0x6c4>  // b.hs, b.nlast
   1b5f8:	ldr	w2, [x19, #80]
   1b5fc:	mov	x1, x19
   1b600:	ldr	x0, [x19, #88]
   1b604:	add	w21, w21, #0x1
   1b608:	add	x19, x19, #0x70
   1b60c:	bl	8ad0 <fprintf@plt+0x10>
   1b610:	b	1b5ec <omp_in_final@@OMP_3.1+0x12fc>
   1b614:	nop
   1b618:	stp	x29, x30, [sp, #-80]!
   1b61c:	mov	x29, sp
   1b620:	stp	x21, x22, [sp, #32]
   1b624:	adrp	x22, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1b628:	ldr	x22, [x22, #3992]
   1b62c:	stp	x19, x20, [sp, #16]
   1b630:	mrs	x20, tpidr_el0
   1b634:	add	x21, x20, x22
   1b638:	stp	x23, x24, [sp, #48]
   1b63c:	ldr	x19, [x21, #16]
   1b640:	add	x23, x19, #0x80
   1b644:	mov	x0, x23
   1b648:	bl	1d410 <omp_get_num_procs@@OMP_1.0+0x860>
   1b64c:	ldr	w0, [x19, #1336]
   1b650:	cbnz	w0, 1b714 <omp_in_final@@OMP_3.1+0x1424>
   1b654:	ldr	x0, [x21, #24]
   1b658:	bl	1bb38 <omp_in_final@@OMP_3.1+0x1848>
   1b65c:	bl	14d38 <GOMP_single_copy_end@@GOMP_1.0+0x1a30>
   1b660:	add	x0, x20, x22
   1b664:	ldp	x4, x5, [x19, #8]
   1b668:	add	x1, x0, #0x10
   1b66c:	stp	x4, x5, [x0, #16]
   1b670:	ldp	x4, x5, [x19, #24]
   1b674:	stp	x4, x5, [x0, #32]
   1b678:	ldr	w0, [x0, #44]
   1b67c:	ldp	x4, x5, [x19, #40]
   1b680:	stp	x4, x5, [x1, #32]
   1b684:	ldp	x2, x3, [x19, #56]
   1b688:	stp	x2, x3, [x1, #48]
   1b68c:	cbnz	w0, 1b798 <omp_in_final@@OMP_3.1+0x14a8>
   1b690:	ldr	x21, [x19, #312]
   1b694:	cbnz	x21, 1b6d8 <omp_in_final@@OMP_3.1+0x13e8>
   1b698:	add	x20, x20, x22
   1b69c:	ldr	x0, [x20, #16]
   1b6a0:	cbnz	x0, 1b6fc <omp_in_final@@OMP_3.1+0x140c>
   1b6a4:	ldr	w0, [x19]
   1b6a8:	cmp	w0, #0x1
   1b6ac:	b.eq	1b6fc <omp_in_final@@OMP_3.1+0x140c>  // b.none
   1b6b0:	ldr	x20, [x20, #96]
   1b6b4:	ldr	x0, [x20, #16]
   1b6b8:	cbz	x0, 1b6c0 <omp_in_final@@OMP_3.1+0x13d0>
   1b6bc:	bl	88b0 <free@plt>
   1b6c0:	ldp	x21, x22, [sp, #32]
   1b6c4:	ldp	x23, x24, [sp, #48]
   1b6c8:	str	x19, [x20, #16]
   1b6cc:	ldp	x19, x20, [sp, #16]
   1b6d0:	ldp	x29, x30, [sp], #80
   1b6d4:	ret
   1b6d8:	mov	x0, x21
   1b6dc:	ldr	x21, [x21, #56]
   1b6e0:	bl	88b0 <free@plt>
   1b6e4:	cbz	x21, 1b698 <omp_in_final@@OMP_3.1+0x13a8>
   1b6e8:	mov	x0, x21
   1b6ec:	ldr	x21, [x21, #56]
   1b6f0:	bl	88b0 <free@plt>
   1b6f4:	cbnz	x21, 1b6d8 <omp_in_final@@OMP_3.1+0x13e8>
   1b6f8:	b	1b698 <omp_in_final@@OMP_3.1+0x13a8>
   1b6fc:	mov	x0, x19
   1b700:	ldp	x19, x20, [sp, #16]
   1b704:	ldp	x21, x22, [sp, #32]
   1b708:	ldp	x23, x24, [sp, #48]
   1b70c:	ldp	x29, x30, [sp], #80
   1b710:	b	88b0 <free@plt>
   1b714:	ldr	x24, [x19, #88]
   1b718:	str	x25, [sp, #64]
   1b71c:	mov	x25, #0x1                   	// #1
   1b720:	add	x21, x24, #0x50
   1b724:	ldar	x0, [x21]
   1b728:	mov	x1, x0
   1b72c:	cmp	x0, #0x2
   1b730:	b.hi	1b788 <omp_in_final@@OMP_3.1+0x1498>  // b.pmore
   1b734:	ldaxr	x0, [x21]
   1b738:	cbnz	x0, 1b744 <omp_in_final@@OMP_3.1+0x1454>
   1b73c:	stxr	w1, x25, [x21]
   1b740:	cbnz	w1, 1b734 <omp_in_final@@OMP_3.1+0x1444>
   1b744:	cmp	x0, #0x0
   1b748:	b.ne	1b778 <omp_in_final@@OMP_3.1+0x1488>  // b.any
   1b74c:	ldxr	x0, [x21]
   1b750:	stlxr	w1, x24, [x21]
   1b754:	cbnz	w1, 1b74c <omp_in_final@@OMP_3.1+0x145c>
   1b758:	cmp	x0, #0x1
   1b75c:	b.eq	1b768 <omp_in_final@@OMP_3.1+0x1478>  // b.none
   1b760:	mov	x0, x21
   1b764:	bl	1d8a0 <omp_get_num_procs@@OMP_1.0+0xcf0>
   1b768:	mov	x0, x24
   1b76c:	bl	1bb38 <omp_in_final@@OMP_3.1+0x1848>
   1b770:	ldr	x25, [sp, #64]
   1b774:	b	1b65c <omp_in_final@@OMP_3.1+0x136c>
   1b778:	mov	x0, x21
   1b77c:	bl	1d780 <omp_get_num_procs@@OMP_1.0+0xbd0>
   1b780:	mov	x1, x0
   1b784:	cbz	x0, 1b74c <omp_in_final@@OMP_3.1+0x145c>
   1b788:	mov	x0, x24
   1b78c:	mov	x24, x1
   1b790:	bl	1bb38 <omp_in_final@@OMP_3.1+0x1848>
   1b794:	b	1b720 <omp_in_final@@OMP_3.1+0x1430>
   1b798:	ldr	w2, [x19]
   1b79c:	mov	x1, #0x1                   	// #1
   1b7a0:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1b7a4:	add	x0, x0, #0x328
   1b7a8:	sub	x1, x1, x2
   1b7ac:	ldxr	x2, [x0]
   1b7b0:	add	x2, x2, x1
   1b7b4:	stlxr	w3, x2, [x0]
   1b7b8:	cbnz	w3, 1b7ac <omp_in_final@@OMP_3.1+0x14bc>
   1b7bc:	mov	x0, x23
   1b7c0:	dmb	ish
   1b7c4:	bl	1d0f0 <omp_get_num_procs@@OMP_1.0+0x540>
   1b7c8:	b	1b690 <omp_in_final@@OMP_3.1+0x13a0>
   1b7cc:	nop
   1b7d0:	stp	x29, x30, [sp, #-48]!
   1b7d4:	mov	x29, sp
   1b7d8:	stp	x21, x22, [sp, #32]
   1b7dc:	adrp	x21, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1b7e0:	ldr	x21, [x21, #3992]
   1b7e4:	stp	x19, x20, [sp, #16]
   1b7e8:	mrs	x20, tpidr_el0
   1b7ec:	add	x0, x20, x21
   1b7f0:	ldr	x19, [x0, #96]
   1b7f4:	cbz	x19, 1b88c <omp_in_final@@OMP_3.1+0x159c>
   1b7f8:	ldr	w2, [x19, #12]
   1b7fc:	cbz	w2, 1b868 <omp_in_final@@OMP_3.1+0x1578>
   1b800:	cmp	w2, #0x1
   1b804:	b.ls	1b82c <omp_in_final@@OMP_3.1+0x153c>  // b.plast
   1b808:	ldr	x4, [x19]
   1b80c:	adrp	x3, 1a000 <GOMP_task_reduction_remap@@GOMP_5.0+0x390>
   1b810:	add	x3, x3, #0x318
   1b814:	mov	x0, #0x1                   	// #1
   1b818:	ldr	x1, [x4, x0, lsl #3]
   1b81c:	add	x0, x0, #0x1
   1b820:	cmp	w2, w0
   1b824:	stp	x3, x19, [x1]
   1b828:	b.hi	1b818 <omp_in_final@@OMP_3.1+0x1528>  // b.pmore
   1b82c:	add	x22, x19, #0x40
   1b830:	mov	x0, x22
   1b834:	bl	1d0f0 <omp_get_num_procs@@OMP_1.0+0x540>
   1b838:	mov	x0, x22
   1b83c:	bl	1d0f0 <omp_get_num_procs@@OMP_1.0+0x540>
   1b840:	ldr	w2, [x19, #12]
   1b844:	mov	x1, #0x1                   	// #1
   1b848:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1b84c:	add	x0, x0, #0x328
   1b850:	sub	x1, x1, x2
   1b854:	ldxr	x2, [x0]
   1b858:	add	x2, x2, x1
   1b85c:	stlxr	w3, x2, [x0]
   1b860:	cbnz	w3, 1b854 <omp_in_final@@OMP_3.1+0x1564>
   1b864:	dmb	ish
   1b868:	ldr	x0, [x19, #16]
   1b86c:	cbz	x0, 1b874 <omp_in_final@@OMP_3.1+0x1584>
   1b870:	bl	88b0 <free@plt>
   1b874:	ldr	x0, [x19]
   1b878:	bl	88b0 <free@plt>
   1b87c:	mov	x0, x19
   1b880:	bl	88b0 <free@plt>
   1b884:	add	x0, x20, x21
   1b888:	str	xzr, [x0, #96]
   1b88c:	add	x0, x20, x21
   1b890:	ldr	w1, [x0, #44]
   1b894:	cbnz	w1, 1b8a0 <omp_in_final@@OMP_3.1+0x15b0>
   1b898:	ldr	x0, [x0, #16]
   1b89c:	cbnz	x0, 1b8d4 <omp_in_final@@OMP_3.1+0x15e4>
   1b8a0:	add	x20, x20, x21
   1b8a4:	ldr	x19, [x20, #80]
   1b8a8:	cbz	x19, 1b8c4 <omp_in_final@@OMP_3.1+0x15d4>
   1b8ac:	bl	14d38 <GOMP_single_copy_end@@GOMP_1.0+0x1a30>
   1b8b0:	mov	x0, x19
   1b8b4:	ldp	x19, x20, [sp, #16]
   1b8b8:	ldp	x21, x22, [sp, #32]
   1b8bc:	ldp	x29, x30, [sp], #48
   1b8c0:	b	88b0 <free@plt>
   1b8c4:	ldp	x19, x20, [sp, #16]
   1b8c8:	ldp	x21, x22, [sp, #32]
   1b8cc:	ldp	x29, x30, [sp], #48
   1b8d0:	ret
   1b8d4:	bl	1b618 <omp_in_final@@OMP_3.1+0x1328>
   1b8d8:	b	1b8a0 <omp_in_final@@OMP_3.1+0x15b0>
   1b8dc:	nop
   1b8e0:	stp	x29, x30, [sp, #-64]!
   1b8e4:	mov	x29, sp
   1b8e8:	stp	x23, x24, [sp, #48]
   1b8ec:	adrp	x23, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1b8f0:	ldr	x23, [x23, #3992]
   1b8f4:	stp	x21, x22, [sp, #32]
   1b8f8:	mrs	x22, tpidr_el0
   1b8fc:	stp	x19, x20, [sp, #16]
   1b900:	add	x19, x22, x23
   1b904:	ldr	w0, [x19, #44]
   1b908:	ldr	x20, [x19, #96]
   1b90c:	cbnz	w0, 1ba34 <omp_in_final@@OMP_3.1+0x1744>
   1b910:	cbz	x20, 1ba08 <omp_in_final@@OMP_3.1+0x1718>
   1b914:	ldr	w24, [x20, #12]
   1b918:	cbz	w24, 1b9e0 <omp_in_final@@OMP_3.1+0x16f0>
   1b91c:	ubfiz	x0, x24, #3, #32
   1b920:	cmp	w24, #0x1
   1b924:	add	x0, x0, #0xf
   1b928:	and	x0, x0, #0xffffffff0
   1b92c:	sub	sp, sp, x0
   1b930:	mov	x21, sp
   1b934:	b.ls	1b97c <omp_in_final@@OMP_3.1+0x168c>  // b.plast
   1b938:	bl	8a40 <pthread_self@plt>
   1b93c:	sub	x6, x0, x19
   1b940:	ldr	x7, [x20]
   1b944:	adrp	x5, 1a000 <GOMP_task_reduction_remap@@GOMP_5.0+0x390>
   1b948:	mov	x3, x19
   1b94c:	add	x5, x5, #0x350
   1b950:	mov	x1, #0x1                   	// #1
   1b954:	nop
   1b958:	ldr	x2, [x7, x1, lsl #3]
   1b95c:	add	x4, x2, x6
   1b960:	cmp	x3, x2
   1b964:	stp	x5, x20, [x2]
   1b968:	b.eq	1ba20 <omp_in_final@@OMP_3.1+0x1730>  // b.none
   1b96c:	str	x4, [x21, x1, lsl #3]
   1b970:	add	x1, x1, #0x1
   1b974:	cmp	w24, w1
   1b978:	b.hi	1b958 <omp_in_final@@OMP_3.1+0x1668>  // b.pmore
   1b97c:	add	x19, x20, #0x40
   1b980:	mov	x0, x19
   1b984:	bl	1d0f0 <omp_get_num_procs@@OMP_1.0+0x540>
   1b988:	mov	x0, x19
   1b98c:	bl	1d0f0 <omp_get_num_procs@@OMP_1.0+0x540>
   1b990:	ldr	w1, [x20, #12]
   1b994:	mov	x19, #0x1                   	// #1
   1b998:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1b99c:	add	x0, x0, #0x328
   1b9a0:	sub	x1, x19, x1
   1b9a4:	ldxr	x2, [x0]
   1b9a8:	add	x2, x2, x1
   1b9ac:	stlxr	w3, x2, [x0]
   1b9b0:	cbnz	w3, 1b9a4 <omp_in_final@@OMP_3.1+0x16b4>
   1b9b4:	dmb	ish
   1b9b8:	ldr	w0, [x20, #12]
   1b9bc:	cmp	w0, #0x1
   1b9c0:	b.ls	1b9e0 <omp_in_final@@OMP_3.1+0x16f0>  // b.plast
   1b9c4:	ldr	x0, [x21, x19, lsl #3]
   1b9c8:	mov	x1, #0x0                   	// #0
   1b9cc:	add	x19, x19, #0x1
   1b9d0:	bl	8810 <pthread_join@plt>
   1b9d4:	ldr	w0, [x20, #12]
   1b9d8:	cmp	w0, w19
   1b9dc:	b.hi	1b9c4 <omp_in_final@@OMP_3.1+0x16d4>  // b.pmore
   1b9e0:	ldr	x0, [x20, #16]
   1b9e4:	cbz	x0, 1b9ec <omp_in_final@@OMP_3.1+0x16fc>
   1b9e8:	bl	88b0 <free@plt>
   1b9ec:	ldr	x0, [x20]
   1b9f0:	add	x22, x22, x23
   1b9f4:	bl	88b0 <free@plt>
   1b9f8:	mov	x0, x20
   1b9fc:	bl	88b0 <free@plt>
   1ba00:	mov	w0, #0x0                   	// #0
   1ba04:	str	xzr, [x22, #96]
   1ba08:	mov	sp, x29
   1ba0c:	ldp	x19, x20, [sp, #16]
   1ba10:	ldp	x21, x22, [sp, #32]
   1ba14:	ldp	x23, x24, [sp, #48]
   1ba18:	ldp	x29, x30, [sp], #64
   1ba1c:	ret
   1ba20:	str	x0, [x21, x1, lsl #3]
   1ba24:	add	x1, x1, #0x1
   1ba28:	cmp	w24, w1
   1ba2c:	b.hi	1b958 <omp_in_final@@OMP_3.1+0x1668>  // b.pmore
   1ba30:	b	1b97c <omp_in_final@@OMP_3.1+0x168c>
   1ba34:	mov	w0, #0xffffffff            	// #-1
   1ba38:	b	1ba08 <omp_in_final@@OMP_3.1+0x1718>
   1ba3c:	nop
   1ba40:	stp	x29, x30, [sp, #-32]!
   1ba44:	mov	x0, #0xd0                  	// #208
   1ba48:	mov	x29, sp
   1ba4c:	str	x19, [sp, #16]
   1ba50:	bl	b2f8 <fprintf@plt+0x2838>
   1ba54:	mov	x1, #0x0                   	// #0
   1ba58:	mov	x19, x0
   1ba5c:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1ba60:	add	x2, x2, #0x2b0
   1ba64:	bl	14cf8 <GOMP_single_copy_end@@GOMP_1.0+0x19f0>
   1ba68:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1ba6c:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1ba70:	ldr	x2, [x2, #3992]
   1ba74:	mrs	x1, tpidr_el0
   1ba78:	ldr	w0, [x0, #1712]
   1ba7c:	add	x1, x1, x2
   1ba80:	str	x19, [x1, #80]
   1ba84:	bl	8960 <pthread_setspecific@plt>
   1ba88:	add	x0, x19, #0x90
   1ba8c:	ldr	x19, [sp, #16]
   1ba90:	ldp	x29, x30, [sp], #32
   1ba94:	ret
   1ba98:	stp	x29, x30, [sp, #-32]!
   1ba9c:	mov	x29, sp
   1baa0:	stp	x19, x20, [sp, #16]
   1baa4:	mov	x19, x0
   1baa8:	str	wzr, [x0, #64]
   1baac:	cbnz	x1, 1bacc <omp_in_final@@OMP_3.1+0x17dc>
   1bab0:	add	x0, x0, #0x60
   1bab4:	str	x0, [x19, #32]
   1bab8:	str	wzr, [x19, #68]
   1babc:	str	xzr, [x19, #80]
   1bac0:	ldp	x19, x20, [sp, #16]
   1bac4:	ldp	x29, x30, [sp], #32
   1bac8:	ret
   1bacc:	ubfiz	x20, x2, #2, #32
   1bad0:	sub	x2, x1, #0x1
   1bad4:	add	x0, x20, #0x7
   1bad8:	cmp	x1, #0x1
   1badc:	and	x0, x0, #0xfffffffffffffff8
   1bae0:	add	x0, x0, x2
   1bae4:	csel	x20, x20, x0, eq  // eq = none
   1bae8:	cmp	x20, #0x20
   1baec:	b.hi	1bb24 <omp_in_final@@OMP_3.1+0x1834>  // b.pmore
   1baf0:	add	x0, x19, #0x60
   1baf4:	str	x0, [x19, #32]
   1baf8:	mov	x2, x20
   1bafc:	mov	w1, #0x0                   	// #0
   1bb00:	bl	8770 <memset@plt>
   1bb04:	str	wzr, [x19, #48]
   1bb08:	movi	d0, #0xffffffff00000000
   1bb0c:	str	wzr, [x19, #68]
   1bb10:	str	xzr, [x19, #80]
   1bb14:	str	d0, [x19, #40]
   1bb18:	ldp	x19, x20, [sp, #16]
   1bb1c:	ldp	x29, x30, [sp], #32
   1bb20:	ret
   1bb24:	mov	x0, x20
   1bb28:	bl	b2f8 <fprintf@plt+0x2838>
   1bb2c:	str	x0, [x19, #32]
   1bb30:	b	1baf8 <omp_in_final@@OMP_3.1+0x1808>
   1bb34:	nop
   1bb38:	add	x1, x0, #0x60
   1bb3c:	ldr	x0, [x0, #32]
   1bb40:	cmp	x0, x1
   1bb44:	b.eq	1bb4c <omp_in_final@@OMP_3.1+0x185c>  // b.none
   1bb48:	b	88b0 <free@plt>
   1bb4c:	ret
   1bb50:	stp	x29, x30, [sp, #-64]!
   1bb54:	mov	x29, sp
   1bb58:	stp	x19, x20, [sp, #16]
   1bb5c:	mrs	x19, tpidr_el0
   1bb60:	adrp	x20, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1bb64:	ldr	x20, [x20, #4016]
   1bb68:	stp	x21, x22, [sp, #32]
   1bb6c:	add	x2, x19, x20
   1bb70:	ldr	x21, [x2, #16]
   1bb74:	str	x23, [sp, #48]
   1bb78:	mov	x23, x0
   1bb7c:	cbz	x21, 1bc48 <omp_in_final@@OMP_3.1+0x1958>
   1bb80:	ldr	x1, [x2, #24]
   1bb84:	str	x1, [x2, #32]
   1bb88:	add	x1, x1, #0x50
   1bb8c:	ldar	x2, [x1]
   1bb90:	cmp	x2, #0x2
   1bb94:	b.hi	1bc10 <omp_in_final@@OMP_3.1+0x1920>  // b.pmore
   1bb98:	mov	x0, #0x1                   	// #1
   1bb9c:	ldaxr	x2, [x1]
   1bba0:	cbnz	x2, 1bbac <omp_in_final@@OMP_3.1+0x18bc>
   1bba4:	stxr	w3, x0, [x1]
   1bba8:	cbnz	w3, 1bb9c <omp_in_final@@OMP_3.1+0x18ac>
   1bbac:	cmp	x2, #0x0
   1bbb0:	b.ne	1bc00 <omp_in_final@@OMP_3.1+0x1910>  // b.any
   1bbb4:	ldr	x22, [x21, #96]
   1bbb8:	cbz	x22, 1bc30 <omp_in_final@@OMP_3.1+0x1940>
   1bbbc:	ldr	x0, [x22, #80]
   1bbc0:	str	x0, [x21, #96]
   1bbc4:	ldr	w0, [x21]
   1bbc8:	str	wzr, [x22, #64]
   1bbcc:	cbnz	x23, 1beb8 <omp_in_final@@OMP_3.1+0x1bc8>
   1bbd0:	add	x0, x22, #0x60
   1bbd4:	str	x0, [x22, #32]
   1bbd8:	add	x19, x19, x20
   1bbdc:	str	wzr, [x22, #68]
   1bbe0:	str	xzr, [x22, #80]
   1bbe4:	mov	w0, #0x1                   	// #1
   1bbe8:	ldr	x23, [sp, #48]
   1bbec:	str	x22, [x19, #24]
   1bbf0:	ldp	x19, x20, [sp, #16]
   1bbf4:	ldp	x21, x22, [sp, #32]
   1bbf8:	ldp	x29, x30, [sp], #64
   1bbfc:	ret
   1bc00:	mov	x0, x1
   1bc04:	bl	1d780 <omp_get_num_procs@@OMP_1.0+0xbd0>
   1bc08:	mov	x2, x0
   1bc0c:	cbz	x0, 1bbb4 <omp_in_final@@OMP_3.1+0x18c4>
   1bc10:	add	x19, x19, x20
   1bc14:	mov	w0, #0x0                   	// #0
   1bc18:	ldp	x21, x22, [sp, #32]
   1bc1c:	str	x2, [x19, #24]
   1bc20:	ldp	x19, x20, [sp, #16]
   1bc24:	ldr	x23, [sp, #48]
   1bc28:	ldp	x29, x30, [sp], #64
   1bc2c:	ret
   1bc30:	ldr	x0, [x21, #104]
   1bc34:	cbz	x0, 1bc8c <omp_in_final@@OMP_3.1+0x199c>
   1bc38:	ldr	x22, [x0, #80]
   1bc3c:	cbz	x22, 1bc8c <omp_in_final@@OMP_3.1+0x199c>
   1bc40:	str	xzr, [x0, #80]
   1bc44:	b	1bbbc <omp_in_final@@OMP_3.1+0x18cc>
   1bc48:	mov	x0, #0x80                  	// #128
   1bc4c:	bl	b2f8 <fprintf@plt+0x2838>
   1bc50:	str	wzr, [x0, #64]
   1bc54:	mov	x21, x0
   1bc58:	cbnz	x23, 1be88 <omp_in_final@@OMP_3.1+0x1b98>
   1bc5c:	add	x0, x0, #0x60
   1bc60:	str	x0, [x21, #32]
   1bc64:	add	x19, x19, x20
   1bc68:	str	wzr, [x21, #68]
   1bc6c:	str	xzr, [x21, #80]
   1bc70:	mov	w0, #0x1                   	// #1
   1bc74:	ldr	x23, [sp, #48]
   1bc78:	str	x21, [x19, #24]
   1bc7c:	ldp	x19, x20, [sp, #16]
   1bc80:	ldp	x21, x22, [sp, #32]
   1bc84:	ldp	x29, x30, [sp], #64
   1bc88:	ret
   1bc8c:	ldr	w1, [x21, #4]
   1bc90:	mov	x0, #0x40                  	// #64
   1bc94:	lsl	w1, w1, #1
   1bc98:	str	w1, [x21, #4]
   1bc9c:	lsl	x1, x1, #7
   1bca0:	bl	b3a8 <fprintf@plt+0x28e8>
   1bca4:	mov	x22, x0
   1bca8:	ldr	w1, [x21, #4]
   1bcac:	ldr	x2, [x21, #312]
   1bcb0:	add	x0, x0, #0x80
   1bcb4:	str	x2, [x22, #56]
   1bcb8:	sub	w6, w1, #0x1
   1bcbc:	str	x0, [x21, #96]
   1bcc0:	cmp	w6, #0x1
   1bcc4:	str	x22, [x21, #312]
   1bcc8:	b.ls	1be80 <omp_in_final@@OMP_3.1+0x1b90>  // b.plast
   1bccc:	sub	w3, w1, #0x3
   1bcd0:	sub	w5, w1, #0x2
   1bcd4:	cmp	w3, #0xb
   1bcd8:	b.ls	1bf10 <omp_in_final@@OMP_3.1+0x1c20>  // b.plast
   1bcdc:	lsr	w2, w5, #2
   1bce0:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1bce4:	dup	v4.2d, x22
   1bce8:	add	x0, x22, #0xd0
   1bcec:	ubfiz	x2, x2, #9, #30
   1bcf0:	add	x2, x2, #0xd0
   1bcf4:	ldr	q1, [x1, #2064]
   1bcf8:	add	x2, x2, x22
   1bcfc:	movi	v6.4s, #0x4
   1bd00:	movi	v5.4s, #0x1
   1bd04:	movi	v3.4s, #0x80
   1bd08:	mov	v0.16b, v1.16b
   1bd0c:	mov	x1, x0
   1bd10:	mov	v2.16b, v4.16b
   1bd14:	add	x4, x0, #0x180
   1bd18:	mov	v7.16b, v4.16b
   1bd1c:	add	x0, x0, #0x200
   1bd20:	add	v1.4s, v1.4s, v6.4s
   1bd24:	add	v0.4s, v0.4s, v5.4s
   1bd28:	umlal	v2.2d, v0.2s, v3.2s
   1bd2c:	umlal2	v7.2d, v0.4s, v3.4s
   1bd30:	str	d2, [x1], #128
   1bd34:	st1	{v2.d}[1], [x1]
   1bd38:	stur	d7, [x0, #-256]
   1bd3c:	cmp	x0, x2
   1bd40:	st1	{v7.d}[1], [x4]
   1bd44:	b.ne	1bd08 <omp_in_final@@OMP_3.1+0x1a18>  // b.any
   1bd48:	and	w0, w5, #0xfffffffc
   1bd4c:	cmp	w0, w5
   1bd50:	add	w0, w0, #0x1
   1bd54:	b.eq	1be74 <omp_in_final@@OMP_3.1+0x1b84>  // b.none
   1bd58:	ubfiz	x2, x0, #7, #32
   1bd5c:	add	w1, w0, #0x1
   1bd60:	add	x2, x22, x2
   1bd64:	add	w4, w0, #0x1
   1bd68:	add	x1, x22, x1, lsl #7
   1bd6c:	cmp	w6, w4
   1bd70:	str	x1, [x2, #80]
   1bd74:	b.ls	1be74 <omp_in_final@@OMP_3.1+0x1b84>  // b.plast
   1bd78:	add	w2, w0, #0x2
   1bd7c:	add	w4, w0, #0x2
   1bd80:	cmp	w6, w4
   1bd84:	add	x2, x22, x2, lsl #7
   1bd88:	str	x2, [x1, #80]
   1bd8c:	b.ls	1be74 <omp_in_final@@OMP_3.1+0x1b84>  // b.plast
   1bd90:	add	w1, w0, #0x3
   1bd94:	add	w4, w0, #0x3
   1bd98:	cmp	w6, w4
   1bd9c:	add	x1, x22, x1, lsl #7
   1bda0:	str	x1, [x2, #80]
   1bda4:	b.ls	1be74 <omp_in_final@@OMP_3.1+0x1b84>  // b.plast
   1bda8:	add	w2, w0, #0x4
   1bdac:	add	w4, w0, #0x4
   1bdb0:	cmp	w6, w4
   1bdb4:	add	x2, x22, x2, lsl #7
   1bdb8:	str	x2, [x1, #80]
   1bdbc:	b.ls	1be74 <omp_in_final@@OMP_3.1+0x1b84>  // b.plast
   1bdc0:	add	w1, w0, #0x5
   1bdc4:	add	w4, w0, #0x5
   1bdc8:	cmp	w6, w4
   1bdcc:	add	x1, x22, x1, lsl #7
   1bdd0:	str	x1, [x2, #80]
   1bdd4:	b.ls	1be74 <omp_in_final@@OMP_3.1+0x1b84>  // b.plast
   1bdd8:	add	w2, w0, #0x6
   1bddc:	add	w4, w0, #0x6
   1bde0:	cmp	w6, w4
   1bde4:	add	x2, x22, x2, lsl #7
   1bde8:	str	x2, [x1, #80]
   1bdec:	b.ls	1be74 <omp_in_final@@OMP_3.1+0x1b84>  // b.plast
   1bdf0:	add	w1, w0, #0x7
   1bdf4:	add	w4, w0, #0x7
   1bdf8:	cmp	w6, w4
   1bdfc:	add	x1, x22, x1, lsl #7
   1be00:	str	x1, [x2, #80]
   1be04:	b.ls	1be74 <omp_in_final@@OMP_3.1+0x1b84>  // b.plast
   1be08:	add	w2, w0, #0x8
   1be0c:	add	w4, w0, #0x8
   1be10:	cmp	w6, w4
   1be14:	add	x2, x22, x2, lsl #7
   1be18:	str	x2, [x1, #80]
   1be1c:	b.ls	1be74 <omp_in_final@@OMP_3.1+0x1b84>  // b.plast
   1be20:	add	w1, w0, #0x9
   1be24:	add	w4, w0, #0x9
   1be28:	cmp	w6, w4
   1be2c:	add	x1, x22, x1, lsl #7
   1be30:	str	x1, [x2, #80]
   1be34:	b.ls	1be74 <omp_in_final@@OMP_3.1+0x1b84>  // b.plast
   1be38:	add	w2, w0, #0xa
   1be3c:	add	w4, w0, #0xa
   1be40:	cmp	w6, w4
   1be44:	add	x2, x22, x2, lsl #7
   1be48:	str	x2, [x1, #80]
   1be4c:	b.ls	1be74 <omp_in_final@@OMP_3.1+0x1b84>  // b.plast
   1be50:	add	w1, w0, #0xb
   1be54:	add	w4, w0, #0xb
   1be58:	cmp	w6, w4
   1be5c:	add	x1, x22, x1, lsl #7
   1be60:	str	x1, [x2, #80]
   1be64:	b.ls	1be74 <omp_in_final@@OMP_3.1+0x1b84>  // b.plast
   1be68:	add	w0, w0, #0xc
   1be6c:	add	x0, x22, x0, lsl #7
   1be70:	str	x0, [x1, #80]
   1be74:	ubfiz	x0, x3, #7, #32
   1be78:	add	x0, x0, #0x100
   1be7c:	add	x0, x22, x0
   1be80:	str	xzr, [x0, #80]
   1be84:	b	1bbc4 <omp_in_final@@OMP_3.1+0x18d4>
   1be88:	cmp	x23, #0x1
   1be8c:	mov	x22, #0x4                   	// #4
   1be90:	b.ne	1bf18 <omp_in_final@@OMP_3.1+0x1c28>  // b.any
   1be94:	add	x0, x21, #0x60
   1be98:	str	x0, [x21, #32]
   1be9c:	mov	x2, x22
   1bea0:	mov	w1, #0x0                   	// #0
   1bea4:	bl	8770 <memset@plt>
   1bea8:	str	wzr, [x21, #48]
   1beac:	movi	d0, #0xffffffff00000000
   1beb0:	str	d0, [x21, #40]
   1beb4:	b	1bc64 <omp_in_final@@OMP_3.1+0x1974>
   1beb8:	ubfiz	x21, x0, #2, #32
   1bebc:	sub	x1, x23, #0x1
   1bec0:	add	x0, x21, #0x7
   1bec4:	cmp	x23, #0x1
   1bec8:	and	x0, x0, #0xfffffffffffffff8
   1becc:	add	x0, x0, x1
   1bed0:	csel	x21, x21, x0, eq  // eq = none
   1bed4:	cmp	x21, #0x20
   1bed8:	b.hi	1bf00 <omp_in_final@@OMP_3.1+0x1c10>  // b.pmore
   1bedc:	add	x0, x22, #0x60
   1bee0:	str	x0, [x22, #32]
   1bee4:	mov	x2, x21
   1bee8:	mov	w1, #0x0                   	// #0
   1beec:	bl	8770 <memset@plt>
   1bef0:	str	wzr, [x22, #48]
   1bef4:	movi	d0, #0xffffffff00000000
   1bef8:	str	d0, [x22, #40]
   1befc:	b	1bbd8 <omp_in_final@@OMP_3.1+0x18e8>
   1bf00:	mov	x0, x21
   1bf04:	bl	b2f8 <fprintf@plt+0x2838>
   1bf08:	str	x0, [x22, #32]
   1bf0c:	b	1bee4 <omp_in_final@@OMP_3.1+0x1bf4>
   1bf10:	mov	w0, #0x1                   	// #1
   1bf14:	b	1bd58 <omp_in_final@@OMP_3.1+0x1a68>
   1bf18:	add	x22, x23, #0x7
   1bf1c:	cmp	x22, #0x20
   1bf20:	b.ls	1be94 <omp_in_final@@OMP_3.1+0x1ba4>  // b.plast
   1bf24:	mov	x0, x22
   1bf28:	bl	b2f8 <fprintf@plt+0x2838>
   1bf2c:	str	x0, [x21, #32]
   1bf30:	b	1be9c <omp_in_final@@OMP_3.1+0x1bac>
   1bf34:	nop
   1bf38:	stp	x29, x30, [sp, #-80]!
   1bf3c:	mov	x29, sp
   1bf40:	stp	x21, x22, [sp, #32]
   1bf44:	adrp	x21, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1bf48:	ldr	x21, [x21, #4016]
   1bf4c:	stp	x19, x20, [sp, #16]
   1bf50:	mrs	x20, tpidr_el0
   1bf54:	add	x2, x20, x21
   1bf58:	ldr	x19, [x2, #16]
   1bf5c:	cbz	x19, 1c010 <omp_in_final@@OMP_3.1+0x1d20>
   1bf60:	add	x0, x19, #0x84
   1bf64:	str	x23, [sp, #48]
   1bf68:	add	x23, x19, #0x80
   1bf6c:	ldar	w1, [x0]
   1bf70:	and	w1, w1, #0xfffffffc
   1bf74:	add	x0, x19, #0xc0
   1bf78:	ldaxr	w3, [x0]
   1bf7c:	sub	w3, w3, #0x1
   1bf80:	stlxr	w4, w3, [x0]
   1bf84:	cbnz	w4, 1bf78 <omp_in_final@@OMP_3.1+0x1c88>
   1bf88:	cmp	w3, #0x0
   1bf8c:	orr	w0, w1, #0x1
   1bf90:	csel	w1, w0, w1, eq  // eq = none
   1bf94:	tbz	w1, #0, 1bfec <omp_in_final@@OMP_3.1+0x1cfc>
   1bf98:	ldr	x22, [x2, #32]
   1bf9c:	cbz	x22, 1bfec <omp_in_final@@OMP_3.1+0x1cfc>
   1bfa0:	ldr	x0, [x2, #24]
   1bfa4:	str	x0, [x19, #88]
   1bfa8:	ldr	x0, [x22, #32]
   1bfac:	add	x2, x22, #0x60
   1bfb0:	cmp	x0, x2
   1bfb4:	b.eq	1bfc4 <omp_in_final@@OMP_3.1+0x1cd4>  // b.none
   1bfb8:	str	w1, [sp, #76]
   1bfbc:	bl	88b0 <free@plt>
   1bfc0:	ldr	w1, [sp, #76]
   1bfc4:	add	x0, x19, #0x68
   1bfc8:	ldr	x2, [x19, #104]
   1bfcc:	str	x2, [x22, #80]
   1bfd0:	ldxr	x3, [x0]
   1bfd4:	cmp	x3, x2
   1bfd8:	b.ne	1bfe4 <omp_in_final@@OMP_3.1+0x1cf4>  // b.any
   1bfdc:	stlxr	w4, x22, [x0]
   1bfe0:	cbnz	w4, 1bfd0 <omp_in_final@@OMP_3.1+0x1ce0>
   1bfe4:	dmb	ish
   1bfe8:	b.ne	1bfc8 <omp_in_final@@OMP_3.1+0x1cd8>  // b.any
   1bfec:	add	x20, x20, x21
   1bff0:	mov	x0, x23
   1bff4:	bl	1d1e8 <omp_get_num_procs@@OMP_1.0+0x638>
   1bff8:	ldr	x23, [sp, #48]
   1bffc:	str	xzr, [x20, #32]
   1c000:	ldp	x19, x20, [sp, #16]
   1c004:	ldp	x21, x22, [sp, #32]
   1c008:	ldp	x29, x30, [sp], #80
   1c00c:	ret
   1c010:	ldr	x19, [x2, #24]
   1c014:	add	x1, x19, #0x60
   1c018:	ldr	x0, [x19, #32]
   1c01c:	cmp	x0, x1
   1c020:	b.eq	1c028 <omp_in_final@@OMP_3.1+0x1d38>  // b.none
   1c024:	bl	88b0 <free@plt>
   1c028:	add	x20, x20, x21
   1c02c:	mov	x0, x19
   1c030:	bl	88b0 <free@plt>
   1c034:	ldp	x21, x22, [sp, #32]
   1c038:	str	xzr, [x20, #24]
   1c03c:	ldp	x19, x20, [sp, #16]
   1c040:	ldp	x29, x30, [sp], #80
   1c044:	ret
   1c048:	stp	x29, x30, [sp, #-80]!
   1c04c:	mov	x29, sp
   1c050:	stp	x21, x22, [sp, #32]
   1c054:	adrp	x21, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1c058:	ldr	x21, [x21, #4016]
   1c05c:	stp	x19, x20, [sp, #16]
   1c060:	mrs	x20, tpidr_el0
   1c064:	add	x2, x20, x21
   1c068:	ldr	x19, [x2, #16]
   1c06c:	str	x23, [sp, #48]
   1c070:	add	x0, x19, #0x84
   1c074:	add	x23, x19, #0x80
   1c078:	ldar	w1, [x0]
   1c07c:	and	w1, w1, #0xfffffffc
   1c080:	add	x0, x19, #0xc0
   1c084:	ldaxr	w3, [x0]
   1c088:	sub	w3, w3, #0x1
   1c08c:	stlxr	w4, w3, [x0]
   1c090:	cbnz	w4, 1c084 <omp_in_final@@OMP_3.1+0x1d94>
   1c094:	cmp	w3, #0x0
   1c098:	orr	w0, w1, #0x1
   1c09c:	csel	w1, w0, w1, eq  // eq = none
   1c0a0:	tbz	w1, #0, 1c0f8 <omp_in_final@@OMP_3.1+0x1e08>
   1c0a4:	ldr	x22, [x2, #32]
   1c0a8:	cbz	x22, 1c0f8 <omp_in_final@@OMP_3.1+0x1e08>
   1c0ac:	ldr	x0, [x2, #24]
   1c0b0:	str	x0, [x19, #88]
   1c0b4:	ldr	x0, [x22, #32]
   1c0b8:	add	x2, x22, #0x60
   1c0bc:	cmp	x0, x2
   1c0c0:	b.eq	1c0d0 <omp_in_final@@OMP_3.1+0x1de0>  // b.none
   1c0c4:	str	w1, [sp, #76]
   1c0c8:	bl	88b0 <free@plt>
   1c0cc:	ldr	w1, [sp, #76]
   1c0d0:	add	x0, x19, #0x68
   1c0d4:	ldr	x2, [x19, #104]
   1c0d8:	str	x2, [x22, #80]
   1c0dc:	ldxr	x3, [x0]
   1c0e0:	cmp	x3, x2
   1c0e4:	b.ne	1c0f0 <omp_in_final@@OMP_3.1+0x1e00>  // b.any
   1c0e8:	stlxr	w4, x22, [x0]
   1c0ec:	cbnz	w4, 1c0dc <omp_in_final@@OMP_3.1+0x1dec>
   1c0f0:	dmb	ish
   1c0f4:	b.ne	1c0d4 <omp_in_final@@OMP_3.1+0x1de4>  // b.any
   1c0f8:	add	x20, x20, x21
   1c0fc:	mov	x0, x23
   1c100:	ldp	x21, x22, [sp, #32]
   1c104:	ldr	x23, [sp, #48]
   1c108:	str	xzr, [x20, #32]
   1c10c:	ldp	x19, x20, [sp, #16]
   1c110:	ldp	x29, x30, [sp], #80
   1c114:	b	1d448 <omp_get_num_procs@@OMP_1.0+0x898>
   1c118:	stp	x29, x30, [sp, #-48]!
   1c11c:	mov	x29, sp
   1c120:	stp	x21, x22, [sp, #32]
   1c124:	adrp	x22, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1c128:	ldr	x22, [x22, #4016]
   1c12c:	stp	x19, x20, [sp, #16]
   1c130:	mrs	x20, tpidr_el0
   1c134:	add	x1, x20, x22
   1c138:	ldp	x21, x19, [x1, #16]
   1c13c:	cbz	x21, 1c1cc <omp_in_final@@OMP_3.1+0x1edc>
   1c140:	ldr	x0, [x1, #32]
   1c144:	cbz	x0, 1c174 <omp_in_final@@OMP_3.1+0x1e84>
   1c148:	add	x0, x19, #0x44
   1c14c:	ldxr	w2, [x0]
   1c150:	add	w2, w2, #0x1
   1c154:	stlxr	w3, w2, [x0]
   1c158:	cbnz	w3, 1c14c <omp_in_final@@OMP_3.1+0x1e5c>
   1c15c:	dmb	ish
   1c160:	ldr	w0, [x21]
   1c164:	cmp	w0, w2
   1c168:	b.eq	1c184 <omp_in_final@@OMP_3.1+0x1e94>  // b.none
   1c16c:	add	x20, x20, x22
   1c170:	str	xzr, [x20, #32]
   1c174:	ldp	x19, x20, [sp, #16]
   1c178:	ldp	x21, x22, [sp, #32]
   1c17c:	ldp	x29, x30, [sp], #48
   1c180:	ret
   1c184:	ldp	x0, x19, [x1, #24]
   1c188:	str	x0, [x21, #88]
   1c18c:	ldr	x0, [x19, #32]
   1c190:	add	x1, x19, #0x60
   1c194:	cmp	x0, x1
   1c198:	b.eq	1c1a0 <omp_in_final@@OMP_3.1+0x1eb0>  // b.none
   1c19c:	bl	88b0 <free@plt>
   1c1a0:	add	x0, x21, #0x68
   1c1a4:	ldr	x1, [x21, #104]
   1c1a8:	str	x1, [x19, #80]
   1c1ac:	ldxr	x2, [x0]
   1c1b0:	cmp	x2, x1
   1c1b4:	b.ne	1c1c0 <omp_in_final@@OMP_3.1+0x1ed0>  // b.any
   1c1b8:	stlxr	w3, x19, [x0]
   1c1bc:	cbnz	w3, 1c1ac <omp_in_final@@OMP_3.1+0x1ebc>
   1c1c0:	dmb	ish
   1c1c4:	b.eq	1c16c <omp_in_final@@OMP_3.1+0x1e7c>  // b.none
   1c1c8:	b	1c1a4 <omp_in_final@@OMP_3.1+0x1eb4>
   1c1cc:	ldr	x0, [x19, #32]
   1c1d0:	add	x1, x19, #0x60
   1c1d4:	cmp	x0, x1
   1c1d8:	b.eq	1c1e0 <omp_in_final@@OMP_3.1+0x1ef0>  // b.none
   1c1dc:	bl	88b0 <free@plt>
   1c1e0:	add	x20, x20, x22
   1c1e4:	mov	x0, x19
   1c1e8:	bl	88b0 <free@plt>
   1c1ec:	str	xzr, [x20, #24]
   1c1f0:	b	1c174 <omp_in_final@@OMP_3.1+0x1e84>
   1c1f4:	nop

000000000001c1f8 <omp_init_lock@@OMP_3.0>:
   1c1f8:	str	wzr, [x0]
   1c1fc:	ret

000000000001c200 <omp_destroy_lock@OMP_1.0>:
   1c200:	ret
   1c204:	nop

000000000001c208 <omp_set_lock@@OMP_3.0>:
   1c208:	mov	x2, x0
   1c20c:	mov	w3, #0x1                   	// #1
   1c210:	ldaxr	w1, [x2]
   1c214:	cbnz	w1, 1c220 <omp_set_lock@@OMP_3.0+0x18>
   1c218:	stxr	w4, w3, [x2]
   1c21c:	cbnz	w4, 1c210 <omp_set_lock@@OMP_3.0+0x8>
   1c220:	cmp	w1, #0x0
   1c224:	b.ne	1c22c <omp_set_lock@@OMP_3.0+0x24>  // b.any
   1c228:	ret
   1c22c:	b	1c678 <omp_test_nest_lock@OMP_1.0+0x90>

000000000001c230 <omp_unset_lock@@OMP_3.0>:
   1c230:	mov	x1, x0
   1c234:	ldxr	w2, [x1]
   1c238:	stlxr	w3, wzr, [x1]
   1c23c:	cbnz	w3, 1c234 <omp_unset_lock@@OMP_3.0+0x4>
   1c240:	tbnz	w2, #31, 1c248 <omp_unset_lock@@OMP_3.0+0x18>
   1c244:	ret
   1c248:	b	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   1c24c:	nop

000000000001c250 <omp_test_lock@OMP_1.0>:
   1c250:	mov	w1, #0x1                   	// #1
   1c254:	ldaxr	w2, [x0]
   1c258:	cbnz	w2, 1c264 <omp_test_lock@OMP_1.0+0x14>
   1c25c:	stxr	w3, w1, [x0]
   1c260:	cbnz	w3, 1c254 <omp_test_lock@OMP_1.0+0x4>
   1c264:	cmp	w2, #0x0
   1c268:	cset	w0, eq  // eq = none
   1c26c:	ret

000000000001c270 <omp_init_nest_lock@@OMP_3.0>:
   1c270:	stp	xzr, xzr, [x0]
   1c274:	ret

000000000001c278 <omp_destroy_nest_lock@@OMP_3.0>:
   1c278:	ret
   1c27c:	nop

000000000001c280 <omp_set_nest_lock@@OMP_3.0>:
   1c280:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1c284:	ldr	x2, [x2, #4016]
   1c288:	mrs	x1, tpidr_el0
   1c28c:	stp	x29, x30, [sp, #-32]!
   1c290:	add	x1, x1, x2
   1c294:	mov	x29, sp
   1c298:	stp	x19, x20, [sp, #16]
   1c29c:	mov	x19, x0
   1c2a0:	ldr	x20, [x1, #80]
   1c2a4:	cbz	x20, 1c2f0 <omp_set_nest_lock@@OMP_3.0+0x70>
   1c2a8:	add	x20, x20, #0x90
   1c2ac:	ldr	x0, [x19, #8]
   1c2b0:	cmp	x0, x20
   1c2b4:	b.eq	1c2d8 <omp_set_nest_lock@@OMP_3.0+0x58>  // b.none
   1c2b8:	mov	w0, #0x1                   	// #1
   1c2bc:	ldaxr	w1, [x19]
   1c2c0:	cbnz	w1, 1c2cc <omp_set_nest_lock@@OMP_3.0+0x4c>
   1c2c4:	stxr	w2, w0, [x19]
   1c2c8:	cbnz	w2, 1c2bc <omp_set_nest_lock@@OMP_3.0+0x3c>
   1c2cc:	cmp	w1, #0x0
   1c2d0:	b.ne	1c2fc <omp_set_nest_lock@@OMP_3.0+0x7c>  // b.any
   1c2d4:	str	x20, [x19, #8]
   1c2d8:	ldr	w0, [x19, #4]
   1c2dc:	add	w0, w0, #0x1
   1c2e0:	str	w0, [x19, #4]
   1c2e4:	ldp	x19, x20, [sp, #16]
   1c2e8:	ldp	x29, x30, [sp], #32
   1c2ec:	ret
   1c2f0:	bl	1ba40 <omp_in_final@@OMP_3.1+0x1750>
   1c2f4:	mov	x20, x0
   1c2f8:	b	1c2ac <omp_set_nest_lock@@OMP_3.0+0x2c>
   1c2fc:	mov	x0, x19
   1c300:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   1c304:	b	1c2d4 <omp_set_nest_lock@@OMP_3.0+0x54>

000000000001c308 <omp_unset_nest_lock@@OMP_3.0>:
   1c308:	ldr	w2, [x0, #4]
   1c30c:	mov	x1, x0
   1c310:	sub	w2, w2, #0x1
   1c314:	str	w2, [x0, #4]
   1c318:	cbz	w2, 1c320 <omp_unset_nest_lock@@OMP_3.0+0x18>
   1c31c:	ret
   1c320:	str	xzr, [x0, #8]
   1c324:	ldxr	w2, [x1]
   1c328:	stlxr	w3, wzr, [x1]
   1c32c:	cbnz	w3, 1c324 <omp_unset_nest_lock@@OMP_3.0+0x1c>
   1c330:	tbz	w2, #31, 1c31c <omp_unset_nest_lock@@OMP_3.0+0x14>
   1c334:	b	1c868 <omp_test_nest_lock@OMP_1.0+0x280>

000000000001c338 <omp_test_nest_lock@@OMP_3.0>:
   1c338:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1c33c:	ldr	x2, [x2, #4016]
   1c340:	mrs	x1, tpidr_el0
   1c344:	stp	x29, x30, [sp, #-32]!
   1c348:	add	x1, x1, x2
   1c34c:	mov	x29, sp
   1c350:	ldr	x1, [x1, #80]
   1c354:	str	x19, [sp, #16]
   1c358:	mov	x19, x0
   1c35c:	cbz	x1, 1c3a4 <omp_test_nest_lock@@OMP_3.0+0x6c>
   1c360:	ldr	x0, [x19, #8]
   1c364:	add	x1, x1, #0x90
   1c368:	mov	w2, #0x1                   	// #1
   1c36c:	cmp	x0, x1
   1c370:	b.eq	1c3bc <omp_test_nest_lock@@OMP_3.0+0x84>  // b.none
   1c374:	ldaxr	w0, [x19]
   1c378:	cbnz	w0, 1c384 <omp_test_nest_lock@@OMP_3.0+0x4c>
   1c37c:	stxr	w3, w2, [x19]
   1c380:	cbnz	w3, 1c374 <omp_test_nest_lock@@OMP_3.0+0x3c>
   1c384:	cmp	w0, #0x0
   1c388:	b.ne	1c3d4 <omp_test_nest_lock@@OMP_3.0+0x9c>  // b.any
   1c38c:	mov	w0, w2
   1c390:	str	w2, [x19, #4]
   1c394:	str	x1, [x19, #8]
   1c398:	ldr	x19, [sp, #16]
   1c39c:	ldp	x29, x30, [sp], #32
   1c3a0:	ret
   1c3a4:	bl	1ba40 <omp_in_final@@OMP_3.1+0x1750>
   1c3a8:	mov	x1, x0
   1c3ac:	ldr	x0, [x19, #8]
   1c3b0:	mov	w2, #0x1                   	// #1
   1c3b4:	cmp	x0, x1
   1c3b8:	b.ne	1c374 <omp_test_nest_lock@@OMP_3.0+0x3c>  // b.any
   1c3bc:	ldr	w0, [x19, #4]
   1c3c0:	add	w0, w0, #0x1
   1c3c4:	str	w0, [x19, #4]
   1c3c8:	ldr	x19, [sp, #16]
   1c3cc:	ldp	x29, x30, [sp], #32
   1c3d0:	ret
   1c3d4:	mov	w0, #0x0                   	// #0
   1c3d8:	b	1c398 <omp_test_nest_lock@@OMP_3.0+0x60>
   1c3dc:	nop

000000000001c3e0 <omp_init_nest_lock@OMP_1.0>:
   1c3e0:	str	xzr, [x0]
   1c3e4:	ret

000000000001c3e8 <omp_destroy_nest_lock@OMP_1.0>:
   1c3e8:	ret
   1c3ec:	nop

000000000001c3f0 <omp_set_nest_lock@OMP_1.0>:
   1c3f0:	stp	x29, x30, [sp, #-64]!
   1c3f4:	mov	x29, sp
   1c3f8:	stp	x21, x22, [sp, #32]
   1c3fc:	mrs	x22, tpidr_el0
   1c400:	adrp	x21, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1c404:	ldr	x21, [x21, #4000]
   1c408:	stp	x19, x20, [sp, #16]
   1c40c:	mov	x19, x0
   1c410:	stp	x23, x24, [sp, #48]
   1c414:	ldr	w20, [x22, x21]
   1c418:	cbz	w20, 1c45c <omp_set_nest_lock@OMP_1.0+0x6c>
   1c41c:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1c420:	add	x21, x0, #0x328
   1c424:	adrp	x23, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1c428:	ldaxr	w0, [x19]
   1c42c:	cbnz	w0, 1c438 <omp_set_nest_lock@OMP_1.0+0x48>
   1c430:	stxr	w1, w20, [x19]
   1c434:	cbnz	w1, 1c428 <omp_set_nest_lock@OMP_1.0+0x38>
   1c438:	cmp	w0, #0x0
   1c43c:	b.ne	1c470 <omp_set_nest_lock@OMP_1.0+0x80>  // b.any
   1c440:	mov	w0, #0x1                   	// #1
   1c444:	str	w0, [x19, #4]
   1c448:	ldp	x19, x20, [sp, #16]
   1c44c:	ldp	x21, x22, [sp, #32]
   1c450:	ldp	x23, x24, [sp, #48]
   1c454:	ldp	x29, x30, [sp], #64
   1c458:	ret
   1c45c:	mov	x0, #0xb2                  	// #178
   1c460:	bl	8a90 <syscall@plt>
   1c464:	mov	x20, x0
   1c468:	str	w0, [x22, x21]
   1c46c:	b	1c41c <omp_set_nest_lock@OMP_1.0+0x2c>
   1c470:	mov	w22, w0
   1c474:	adrp	x4, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1c478:	adrp	x3, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1c47c:	cmp	w20, w22
   1c480:	b.eq	1c548 <omp_set_nest_lock@OMP_1.0+0x158>  // b.none
   1c484:	ldr	x1, [x23, #1600]
   1c488:	ldr	x2, [x21]
   1c48c:	ldr	x0, [x4, #736]
   1c490:	cmp	x2, x0
   1c494:	b.hi	1c540 <omp_set_nest_lock@OMP_1.0+0x150>  // b.pmore
   1c498:	cbz	x1, 1c4dc <omp_set_nest_lock@OMP_1.0+0xec>
   1c49c:	mov	x0, #0x0                   	// #0
   1c4a0:	b	1c4b0 <omp_set_nest_lock@OMP_1.0+0xc0>
   1c4a4:	add	x0, x0, #0x1
   1c4a8:	cmp	x0, x1
   1c4ac:	b.eq	1c4dc <omp_set_nest_lock@OMP_1.0+0xec>  // b.none
   1c4b0:	ldr	w2, [x19]
   1c4b4:	cmp	w22, w2
   1c4b8:	b.eq	1c4a4 <omp_set_nest_lock@OMP_1.0+0xb4>  // b.none
   1c4bc:	ldaxr	w0, [x19]
   1c4c0:	cbnz	w0, 1c4cc <omp_set_nest_lock@OMP_1.0+0xdc>
   1c4c4:	stxr	w1, w20, [x19]
   1c4c8:	cbnz	w1, 1c4bc <omp_set_nest_lock@OMP_1.0+0xcc>
   1c4cc:	cmp	w0, #0x0
   1c4d0:	mov	w22, w0
   1c4d4:	b.eq	1c440 <omp_set_nest_lock@OMP_1.0+0x50>  // b.none
   1c4d8:	b	1c47c <omp_set_nest_lock@OMP_1.0+0x8c>
   1c4dc:	adrp	x24, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1c4e0:	mov	w3, w22
   1c4e4:	mov	x1, x19
   1c4e8:	mov	x4, #0x0                   	// #0
   1c4ec:	ldr	w2, [x24, #824]
   1c4f0:	mov	x0, #0x62                  	// #98
   1c4f4:	bl	8a90 <syscall@plt>
   1c4f8:	tbz	w0, #31, 1c428 <omp_set_nest_lock@OMP_1.0+0x38>
   1c4fc:	bl	8a70 <__errno_location@plt>
   1c500:	ldr	w0, [x0]
   1c504:	cmp	w0, #0x26
   1c508:	b.ne	1c428 <omp_set_nest_lock@OMP_1.0+0x38>  // b.any
   1c50c:	adrp	x5, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1c510:	ldr	w2, [x24, #824]
   1c514:	mov	w3, w22
   1c518:	mov	x1, x19
   1c51c:	ldr	w0, [x5, #828]
   1c520:	and	w2, w2, #0xffffff7f
   1c524:	mov	x4, #0x0                   	// #0
   1c528:	str	w2, [x24, #824]
   1c52c:	and	w0, w0, #0xffffff7f
   1c530:	str	w0, [x5, #828]
   1c534:	mov	x0, #0x62                  	// #98
   1c538:	bl	8a90 <syscall@plt>
   1c53c:	b	1c428 <omp_set_nest_lock@OMP_1.0+0x38>
   1c540:	ldr	x1, [x3, #1616]
   1c544:	b	1c498 <omp_set_nest_lock@OMP_1.0+0xa8>
   1c548:	ldr	w0, [x19, #4]
   1c54c:	add	w0, w0, #0x1
   1c550:	str	w0, [x19, #4]
   1c554:	b	1c448 <omp_set_nest_lock@OMP_1.0+0x58>

000000000001c558 <omp_unset_nest_lock@OMP_1.0>:
   1c558:	stp	x29, x30, [sp, #-32]!
   1c55c:	mov	x29, sp
   1c560:	stp	x19, x20, [sp, #16]
   1c564:	mov	x19, x0
   1c568:	ldr	w0, [x0, #4]
   1c56c:	sub	w0, w0, #0x1
   1c570:	str	w0, [x19, #4]
   1c574:	cbz	w0, 1c584 <omp_unset_nest_lock@OMP_1.0+0x2c>
   1c578:	ldp	x19, x20, [sp, #16]
   1c57c:	ldp	x29, x30, [sp], #32
   1c580:	ret
   1c584:	stlr	wzr, [x19]
   1c588:	mov	x1, x19
   1c58c:	adrp	x20, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1c590:	mov	w3, #0x1                   	// #1
   1c594:	mov	x0, #0x62                  	// #98
   1c598:	ldr	w2, [x20, #828]
   1c59c:	bl	8a90 <syscall@plt>
   1c5a0:	tbz	w0, #31, 1c578 <omp_unset_nest_lock@OMP_1.0+0x20>
   1c5a4:	bl	8a70 <__errno_location@plt>
   1c5a8:	ldr	w0, [x0]
   1c5ac:	cmp	w0, #0x26
   1c5b0:	b.ne	1c578 <omp_unset_nest_lock@OMP_1.0+0x20>  // b.any
   1c5b4:	ldr	w2, [x20, #828]
   1c5b8:	mov	x1, x19
   1c5bc:	adrp	x5, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1c5c0:	mov	w3, #0x1                   	// #1
   1c5c4:	and	w2, w2, #0xffffff7f
   1c5c8:	str	w2, [x20, #828]
   1c5cc:	ldp	x19, x20, [sp, #16]
   1c5d0:	mov	x0, #0x62                  	// #98
   1c5d4:	ldp	x29, x30, [sp], #32
   1c5d8:	ldr	w4, [x5, #824]
   1c5dc:	and	w4, w4, #0xffffff7f
   1c5e0:	str	w4, [x5, #824]
   1c5e4:	b	8a90 <syscall@plt>

000000000001c5e8 <omp_test_nest_lock@OMP_1.0>:
   1c5e8:	stp	x29, x30, [sp, #-48]!
   1c5ec:	mov	x29, sp
   1c5f0:	stp	x19, x20, [sp, #16]
   1c5f4:	mov	x19, x0
   1c5f8:	adrp	x20, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1c5fc:	ldr	x20, [x20, #4000]
   1c600:	str	x21, [sp, #32]
   1c604:	mrs	x21, tpidr_el0
   1c608:	ldr	w0, [x21, x20]
   1c60c:	cbz	w0, 1c644 <omp_test_nest_lock@OMP_1.0+0x5c>
   1c610:	ldaxr	w1, [x19]
   1c614:	cbnz	w1, 1c620 <omp_test_nest_lock@OMP_1.0+0x38>
   1c618:	stxr	w2, w0, [x19]
   1c61c:	cbnz	w2, 1c610 <omp_test_nest_lock@OMP_1.0+0x28>
   1c620:	cmp	w1, #0x0
   1c624:	b.ne	1c654 <omp_test_nest_lock@OMP_1.0+0x6c>  // b.any
   1c628:	mov	w1, #0x1                   	// #1
   1c62c:	mov	w0, w1
   1c630:	str	w1, [x19, #4]
   1c634:	ldp	x19, x20, [sp, #16]
   1c638:	ldr	x21, [sp, #32]
   1c63c:	ldp	x29, x30, [sp], #48
   1c640:	ret
   1c644:	mov	x0, #0xb2                  	// #178
   1c648:	bl	8a90 <syscall@plt>
   1c64c:	str	w0, [x21, x20]
   1c650:	b	1c610 <omp_test_nest_lock@OMP_1.0+0x28>
   1c654:	cmp	w0, w1
   1c658:	b.eq	1c664 <omp_test_nest_lock@OMP_1.0+0x7c>  // b.none
   1c65c:	mov	w0, #0x0                   	// #0
   1c660:	b	1c634 <omp_test_nest_lock@OMP_1.0+0x4c>
   1c664:	ldr	w0, [x19, #4]
   1c668:	add	w0, w0, #0x1
   1c66c:	str	w0, [x19, #4]
   1c670:	b	1c634 <omp_test_nest_lock@OMP_1.0+0x4c>
   1c674:	nop
   1c678:	stp	x29, x30, [sp, #-64]!
   1c67c:	adrp	x6, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1c680:	adrp	x5, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1c684:	mov	x29, sp
   1c688:	stp	x19, x20, [sp, #16]
   1c68c:	mov	x19, x0
   1c690:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1c694:	add	x2, x0, #0x328
   1c698:	adrp	x4, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1c69c:	mov	w7, #0x1                   	// #1
   1c6a0:	cmp	w1, #0x1
   1c6a4:	b.ne	1c858 <omp_test_nest_lock@OMP_1.0+0x270>  // b.any
   1c6a8:	ldr	x0, [x6, #1600]
   1c6ac:	ldr	x8, [x2]
   1c6b0:	ldr	x3, [x5, #736]
   1c6b4:	ldr	x1, [x4, #1616]
   1c6b8:	cmp	x8, x3
   1c6bc:	csel	x0, x1, x0, hi  // hi = pmore
   1c6c0:	cbz	x0, 1c708 <omp_test_nest_lock@OMP_1.0+0x120>
   1c6c4:	mov	x1, #0x0                   	// #0
   1c6c8:	b	1c6d8 <omp_test_nest_lock@OMP_1.0+0xf0>
   1c6cc:	add	x1, x1, #0x1
   1c6d0:	cmp	x1, x0
   1c6d4:	b.eq	1c708 <omp_test_nest_lock@OMP_1.0+0x120>  // b.none
   1c6d8:	ldr	w3, [x19]
   1c6dc:	cmp	w3, #0x1
   1c6e0:	b.eq	1c6cc <omp_test_nest_lock@OMP_1.0+0xe4>  // b.none
   1c6e4:	ldaxr	w1, [x19]
   1c6e8:	cbnz	w1, 1c6f4 <omp_test_nest_lock@OMP_1.0+0x10c>
   1c6ec:	stxr	w0, w7, [x19]
   1c6f0:	cbnz	w0, 1c6e4 <omp_test_nest_lock@OMP_1.0+0xfc>
   1c6f4:	cmp	w1, #0x0
   1c6f8:	b.ne	1c6a0 <omp_test_nest_lock@OMP_1.0+0xb8>  // b.any
   1c6fc:	ldp	x19, x20, [sp, #16]
   1c700:	ldp	x29, x30, [sp], #64
   1c704:	ret
   1c708:	mov	w20, #0xffffffff            	// #-1
   1c70c:	ldaxr	w0, [x19]
   1c710:	stxr	w1, w20, [x19]
   1c714:	cbnz	w1, 1c70c <omp_test_nest_lock@OMP_1.0+0x124>
   1c718:	cbz	w0, 1c6fc <omp_test_nest_lock@OMP_1.0+0x114>
   1c71c:	stp	x21, x22, [sp, #32]
   1c720:	adrp	x21, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1c724:	mov	w3, w20
   1c728:	ldr	w2, [x21, #824]
   1c72c:	mov	x1, x19
   1c730:	add	x22, x21, #0x338
   1c734:	mov	x4, #0x0                   	// #0
   1c738:	mov	x0, #0x62                  	// #98
   1c73c:	str	x23, [sp, #48]
   1c740:	bl	8a90 <syscall@plt>
   1c744:	tbnz	w0, #31, 1c818 <omp_test_nest_lock@OMP_1.0+0x230>
   1c748:	adrp	x20, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1c74c:	add	x20, x20, #0x328
   1c750:	adrp	x22, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1c754:	mov	w4, #0xffffffff            	// #-1
   1c758:	adrp	x6, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1c75c:	adrp	x5, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1c760:	ldaxr	w0, [x19]
   1c764:	stxr	w1, w4, [x19]
   1c768:	cbnz	w1, 1c760 <omp_test_nest_lock@OMP_1.0+0x178>
   1c76c:	cbz	w0, 1c80c <omp_test_nest_lock@OMP_1.0+0x224>
   1c770:	ldr	x0, [x22, #1600]
   1c774:	ldr	x3, [x20]
   1c778:	ldr	x2, [x6, #736]
   1c77c:	ldr	x1, [x5, #1616]
   1c780:	cmp	x3, x2
   1c784:	csel	x0, x1, x0, hi  // hi = pmore
   1c788:	cbz	x0, 1c7a8 <omp_test_nest_lock@OMP_1.0+0x1c0>
   1c78c:	mov	x1, #0x0                   	// #0
   1c790:	ldr	w2, [x19]
   1c794:	cmn	w2, #0x1
   1c798:	b.ne	1c760 <omp_test_nest_lock@OMP_1.0+0x178>  // b.any
   1c79c:	add	x1, x1, #0x1
   1c7a0:	cmp	x1, x0
   1c7a4:	b.ne	1c790 <omp_test_nest_lock@OMP_1.0+0x1a8>  // b.any
   1c7a8:	adrp	x21, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1c7ac:	mov	x1, x19
   1c7b0:	add	x23, x21, #0x338
   1c7b4:	mov	x4, #0x0                   	// #0
   1c7b8:	ldr	w2, [x21, #824]
   1c7bc:	mov	w3, #0xffffffff            	// #-1
   1c7c0:	mov	x0, #0x62                  	// #98
   1c7c4:	bl	8a90 <syscall@plt>
   1c7c8:	tbz	w0, #31, 1c754 <omp_test_nest_lock@OMP_1.0+0x16c>
   1c7cc:	bl	8a70 <__errno_location@plt>
   1c7d0:	ldr	w0, [x0]
   1c7d4:	cmp	w0, #0x26
   1c7d8:	b.ne	1c754 <omp_test_nest_lock@OMP_1.0+0x16c>  // b.any
   1c7dc:	ldr	w5, [x23, #4]
   1c7e0:	mov	x1, x19
   1c7e4:	ldr	w2, [x21, #824]
   1c7e8:	mov	x4, #0x0                   	// #0
   1c7ec:	and	w5, w5, #0xffffff7f
   1c7f0:	mov	w3, #0xffffffff            	// #-1
   1c7f4:	and	w2, w2, #0xffffff7f
   1c7f8:	mov	x0, #0x62                  	// #98
   1c7fc:	str	w2, [x21, #824]
   1c800:	str	w5, [x23, #4]
   1c804:	bl	8a90 <syscall@plt>
   1c808:	b	1c754 <omp_test_nest_lock@OMP_1.0+0x16c>
   1c80c:	ldp	x21, x22, [sp, #32]
   1c810:	ldr	x23, [sp, #48]
   1c814:	b	1c6fc <omp_test_nest_lock@OMP_1.0+0x114>
   1c818:	bl	8a70 <__errno_location@plt>
   1c81c:	ldr	w0, [x0]
   1c820:	cmp	w0, #0x26
   1c824:	b.ne	1c748 <omp_test_nest_lock@OMP_1.0+0x160>  // b.any
   1c828:	ldr	w5, [x22, #4]
   1c82c:	mov	w3, w20
   1c830:	ldr	w2, [x21, #824]
   1c834:	mov	x1, x19
   1c838:	and	w5, w5, #0xffffff7f
   1c83c:	mov	x4, #0x0                   	// #0
   1c840:	and	w2, w2, #0xffffff7f
   1c844:	mov	x0, #0x62                  	// #98
   1c848:	str	w2, [x21, #824]
   1c84c:	str	w5, [x22, #4]
   1c850:	bl	8a90 <syscall@plt>
   1c854:	b	1c748 <omp_test_nest_lock@OMP_1.0+0x160>
   1c858:	stp	x21, x22, [sp, #32]
   1c85c:	str	x23, [sp, #48]
   1c860:	b	1c748 <omp_test_nest_lock@OMP_1.0+0x160>
   1c864:	nop
   1c868:	stp	x29, x30, [sp, #-48]!
   1c86c:	mov	w3, #0x1                   	// #1
   1c870:	mov	x29, sp
   1c874:	stp	x19, x20, [sp, #16]
   1c878:	mov	x19, x0
   1c87c:	mov	x1, x19
   1c880:	str	x21, [sp, #32]
   1c884:	adrp	x21, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1c888:	add	x20, x21, #0x338
   1c88c:	mov	x0, #0x62                  	// #98
   1c890:	ldr	w2, [x20, #4]
   1c894:	bl	8a90 <syscall@plt>
   1c898:	tbnz	w0, #31, 1c8ac <omp_test_nest_lock@OMP_1.0+0x2c4>
   1c89c:	ldp	x19, x20, [sp, #16]
   1c8a0:	ldr	x21, [sp, #32]
   1c8a4:	ldp	x29, x30, [sp], #48
   1c8a8:	ret
   1c8ac:	bl	8a70 <__errno_location@plt>
   1c8b0:	ldr	w0, [x0]
   1c8b4:	cmp	w0, #0x26
   1c8b8:	b.ne	1c89c <omp_test_nest_lock@OMP_1.0+0x2b4>  // b.any
   1c8bc:	ldr	w4, [x21, #824]
   1c8c0:	mov	x1, x19
   1c8c4:	ldr	w2, [x20, #4]
   1c8c8:	mov	w3, #0x1                   	// #1
   1c8cc:	and	w4, w4, #0xffffff7f
   1c8d0:	str	w4, [x21, #824]
   1c8d4:	and	w2, w2, #0xffffff7f
   1c8d8:	str	w2, [x20, #4]
   1c8dc:	ldp	x19, x20, [sp, #16]
   1c8e0:	mov	x0, #0x62                  	// #98
   1c8e4:	ldr	x21, [sp, #32]
   1c8e8:	ldp	x29, x30, [sp], #48
   1c8ec:	b	8a90 <syscall@plt>
   1c8f0:	stp	x29, x30, [sp, #-16]!
   1c8f4:	mov	x29, sp
   1c8f8:	bl	8990 <__sched_cpucount@plt>
   1c8fc:	sxtw	x0, w0
   1c900:	ldp	x29, x30, [sp], #16
   1c904:	ret
   1c908:	stp	x29, x30, [sp, #-80]!
   1c90c:	mov	w0, #0x53                  	// #83
   1c910:	mov	x29, sp
   1c914:	stp	x19, x20, [sp, #16]
   1c918:	adrp	x19, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1c91c:	adrp	x20, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1c920:	stp	x21, x22, [sp, #32]
   1c924:	mov	x21, #0x80                  	// #128
   1c928:	stp	x23, x24, [sp, #48]
   1c92c:	bl	89e0 <sysconf@plt>
   1c930:	add	x0, x0, #0x3f
   1c934:	lsr	x0, x0, #6
   1c938:	lsl	x0, x0, #3
   1c93c:	str	x0, [x19, #1720]
   1c940:	bl	b2f8 <fprintf@plt+0x2838>
   1c944:	str	x0, [x20, #1728]
   1c948:	str	x0, [sp, #72]
   1c94c:	bl	8a40 <pthread_self@plt>
   1c950:	ldr	x2, [sp, #72]
   1c954:	mov	x22, x0
   1c958:	ldr	x1, [x19, #1720]
   1c95c:	mov	x0, x22
   1c960:	add	x24, x19, #0x6b8
   1c964:	add	x23, x20, #0x6c0
   1c968:	bl	8910 <pthread_getaffinity_np@plt>
   1c96c:	cbz	w0, 1c9c8 <omp_test_nest_lock@OMP_1.0+0x3e0>
   1c970:	ldr	x2, [x20, #1728]
   1c974:	cmp	w0, #0x16
   1c978:	mov	x1, #0x80                  	// #128
   1c97c:	b.ne	1ca38 <omp_test_nest_lock@OMP_1.0+0x450>  // b.any
   1c980:	ldr	x3, [x19, #1720]
   1c984:	mov	x0, x2
   1c988:	cmp	x3, #0x7f
   1c98c:	b.ls	1ca20 <omp_test_nest_lock@OMP_1.0+0x438>  // b.plast
   1c990:	lsl	x1, x3, #1
   1c994:	str	x1, [x19, #1720]
   1c998:	cmp	x1, #0x3ff
   1c99c:	b.ls	1ca24 <omp_test_nest_lock@OMP_1.0+0x43c>  // b.plast
   1c9a0:	bl	87c0 <realloc@plt>
   1c9a4:	mov	x2, x0
   1c9a8:	cbz	x0, 1cab0 <omp_test_nest_lock@OMP_1.0+0x4c8>
   1c9ac:	ldr	x1, [x19, #1720]
   1c9b0:	str	x0, [x20, #1728]
   1c9b4:	add	x24, x19, #0x6b8
   1c9b8:	mov	x0, x22
   1c9bc:	add	x23, x20, #0x6c0
   1c9c0:	bl	8910 <pthread_getaffinity_np@plt>
   1c9c4:	cbnz	w0, 1c970 <omp_test_nest_lock@OMP_1.0+0x388>
   1c9c8:	ldr	x1, [x20, #1728]
   1c9cc:	adrp	x21, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1c9d0:	ldr	x0, [x24]
   1c9d4:	bl	8990 <__sched_cpucount@plt>
   1c9d8:	sxtw	x0, w0
   1c9dc:	str	x0, [x21, #688]
   1c9e0:	cbnz	x0, 1ca40 <omp_test_nest_lock@OMP_1.0+0x458>
   1c9e4:	ldr	x2, [x20, #1728]
   1c9e8:	mov	x1, #0x1                   	// #1
   1c9ec:	mov	x0, x2
   1c9f0:	str	x1, [x21, #688]
   1c9f4:	str	xzr, [x19, #1720]
   1c9f8:	bl	88b0 <free@plt>
   1c9fc:	mov	w0, #0x54                  	// #84
   1ca00:	str	xzr, [x20, #1728]
   1ca04:	bl	89e0 <sysconf@plt>
   1ca08:	str	x0, [x21, #688]
   1ca0c:	ldp	x19, x20, [sp, #16]
   1ca10:	ldp	x21, x22, [sp, #32]
   1ca14:	ldp	x23, x24, [sp, #48]
   1ca18:	ldp	x29, x30, [sp], #80
   1ca1c:	ret
   1ca20:	str	x21, [x19, #1720]
   1ca24:	mov	x0, x2
   1ca28:	bl	b370 <fprintf@plt+0x28b0>
   1ca2c:	mov	x2, x0
   1ca30:	str	x0, [x20, #1728]
   1ca34:	b	1c958 <omp_test_nest_lock@OMP_1.0+0x370>
   1ca38:	adrp	x21, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1ca3c:	b	1c9e8 <omp_test_nest_lock@OMP_1.0+0x400>
   1ca40:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1ca44:	ldr	x2, [x24]
   1ca48:	str	x2, [x0, #1368]
   1ca4c:	cmp	xzr, x2, lsl #3
   1ca50:	lsl	x0, x2, #3
   1ca54:	b.eq	1ca84 <omp_test_nest_lock@OMP_1.0+0x49c>  // b.none
   1ca58:	ldr	x4, [x20, #1728]
   1ca5c:	nop
   1ca60:	mov	x3, x0
   1ca64:	sub	x0, x0, #0x1
   1ca68:	lsr	x1, x0, #6
   1ca6c:	cmp	x2, x0, lsr #3
   1ca70:	b.ls	1ca80 <omp_test_nest_lock@OMP_1.0+0x498>  // b.plast
   1ca74:	ldr	x1, [x4, x1, lsl #3]
   1ca78:	lsr	x1, x1, x0
   1ca7c:	tbnz	w1, #0, 1ca9c <omp_test_nest_lock@OMP_1.0+0x4b4>
   1ca80:	cbnz	x0, 1ca60 <omp_test_nest_lock@OMP_1.0+0x478>
   1ca84:	str	x0, [x19, #1720]
   1ca88:	ldp	x19, x20, [sp, #16]
   1ca8c:	ldp	x21, x22, [sp, #32]
   1ca90:	ldp	x23, x24, [sp, #48]
   1ca94:	ldp	x29, x30, [sp], #80
   1ca98:	ret
   1ca9c:	add	x0, x3, #0x3f
   1caa0:	lsr	x0, x0, #6
   1caa4:	lsl	x0, x0, #3
   1caa8:	str	x0, [x19, #1720]
   1caac:	b	1ca88 <omp_test_nest_lock@OMP_1.0+0x4a0>
   1cab0:	adrp	x21, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1cab4:	ldr	x2, [x23]
   1cab8:	b	1c9e8 <omp_test_nest_lock@OMP_1.0+0x400>
   1cabc:	nop
   1cac0:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1cac4:	ldr	x2, [x2, #4016]
   1cac8:	mrs	x1, tpidr_el0
   1cacc:	stp	x29, x30, [sp, #-80]!
   1cad0:	adrp	x3, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1cad4:	add	x1, x1, x2
   1cad8:	mov	x29, sp
   1cadc:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1cae0:	add	x0, x0, #0x2b0
   1cae4:	ldr	x1, [x1, #80]
   1cae8:	stp	x19, x20, [sp, #16]
   1caec:	cmp	x1, #0x0
   1caf0:	add	x1, x1, #0x90
   1caf4:	ldr	x2, [x3, #1584]
   1caf8:	csel	x0, x0, x1, eq  // eq = none
   1cafc:	ldr	x19, [x0]
   1cb00:	cbz	x2, 1cb58 <omp_test_nest_lock@OMP_1.0+0x570>
   1cb04:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1cb08:	ldr	w0, [x0, #736]
   1cb0c:	cmp	w19, w0
   1cb10:	mov	w1, #0x3                   	// #3
   1cb14:	csel	w19, w19, w0, ls  // ls = plast
   1cb18:	add	x0, sp, #0x38
   1cb1c:	bl	8630 <getloadavg@plt>
   1cb20:	cmp	w0, #0x3
   1cb24:	mov	w0, #0x0                   	// #0
   1cb28:	b.ne	1cb40 <omp_test_nest_lock@OMP_1.0+0x558>  // b.any
   1cb2c:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1cb30:	ldr	d0, [sp, #72]
   1cb34:	ldr	d1, [x0, #2080]
   1cb38:	fadd	d0, d0, d1
   1cb3c:	fcvtzu	w0, d0
   1cb40:	cmp	w0, w19
   1cb44:	sub	w0, w19, w0
   1cb48:	csinc	w0, w0, wzr, cc  // cc = lo, ul, last
   1cb4c:	ldp	x19, x20, [sp, #16]
   1cb50:	ldp	x29, x30, [sp], #80
   1cb54:	ret
   1cb58:	str	x21, [sp, #32]
   1cb5c:	adrp	x21, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1cb60:	ldr	x20, [x21, #1728]
   1cb64:	cbz	x20, 1cb84 <omp_test_nest_lock@OMP_1.0+0x59c>
   1cb68:	bl	8a40 <pthread_self@plt>
   1cb6c:	adrp	x1, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1cb70:	mov	x2, x20
   1cb74:	ldr	x20, [x1, #1368]
   1cb78:	mov	x1, x20
   1cb7c:	bl	8910 <pthread_getaffinity_np@plt>
   1cb80:	cbz	w0, 1cb94 <omp_test_nest_lock@OMP_1.0+0x5ac>
   1cb84:	mov	w0, #0x54                  	// #84
   1cb88:	bl	89e0 <sysconf@plt>
   1cb8c:	ldr	x21, [sp, #32]
   1cb90:	b	1cb0c <omp_test_nest_lock@OMP_1.0+0x524>
   1cb94:	ldr	x1, [x21, #1728]
   1cb98:	mov	x0, x20
   1cb9c:	bl	8990 <__sched_cpucount@plt>
   1cba0:	cmp	w0, #0x0
   1cba4:	csinc	w0, w0, wzr, ne  // ne = any
   1cba8:	ldr	x21, [sp, #32]
   1cbac:	b	1cb0c <omp_test_nest_lock@OMP_1.0+0x524>

000000000001cbb0 <omp_get_num_procs@@OMP_1.0>:
   1cbb0:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1cbb4:	ldr	x0, [x0, #1584]
   1cbb8:	cbz	x0, 1cbc8 <omp_get_num_procs@@OMP_1.0+0x18>
   1cbbc:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1cbc0:	ldr	w0, [x0, #736]
   1cbc4:	ret
   1cbc8:	stp	x29, x30, [sp, #-32]!
   1cbcc:	mov	x29, sp
   1cbd0:	stp	x19, x20, [sp, #16]
   1cbd4:	adrp	x20, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1cbd8:	ldr	x19, [x20, #1728]
   1cbdc:	cbz	x19, 1cbfc <omp_get_num_procs@@OMP_1.0+0x4c>
   1cbe0:	bl	8a40 <pthread_self@plt>
   1cbe4:	adrp	x1, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1cbe8:	mov	x2, x19
   1cbec:	ldr	x19, [x1, #1368]
   1cbf0:	mov	x1, x19
   1cbf4:	bl	8910 <pthread_getaffinity_np@plt>
   1cbf8:	cbz	w0, 1cc10 <omp_get_num_procs@@OMP_1.0+0x60>
   1cbfc:	mov	w0, #0x54                  	// #84
   1cc00:	bl	89e0 <sysconf@plt>
   1cc04:	ldp	x19, x20, [sp, #16]
   1cc08:	ldp	x29, x30, [sp], #32
   1cc0c:	ret
   1cc10:	ldr	x1, [x20, #1728]
   1cc14:	mov	x0, x19
   1cc18:	bl	8990 <__sched_cpucount@plt>
   1cc1c:	cmp	w0, #0x0
   1cc20:	csinc	w0, w0, wzr, ne  // ne = any
   1cc24:	b	1cc04 <omp_get_num_procs@@OMP_1.0+0x54>
   1cc28:	stp	x29, x30, [sp, #-64]!
   1cc2c:	mov	w2, w1
   1cc30:	mov	x29, sp
   1cc34:	stp	x19, x20, [sp, #16]
   1cc38:	mov	x19, x0
   1cc3c:	cbnz	w1, 1ccc8 <omp_get_num_procs@@OMP_1.0+0x118>
   1cc40:	adrp	x3, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1cc44:	add	x3, x3, #0x328
   1cc48:	adrp	x7, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1cc4c:	adrp	x6, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1cc50:	adrp	x5, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1cc54:	mov	w8, #0x80000000            	// #-2147483648
   1cc58:	ldr	x1, [x7, #1600]
   1cc5c:	ldr	x4, [x3]
   1cc60:	ldr	x2, [x6, #736]
   1cc64:	ldr	x0, [x5, #1616]
   1cc68:	cmp	x4, x2
   1cc6c:	csel	x1, x0, x1, hi  // hi = pmore
   1cc70:	cbz	x1, 1ccd4 <omp_get_num_procs@@OMP_1.0+0x124>
   1cc74:	mov	x0, #0x0                   	// #0
   1cc78:	b	1cc88 <omp_get_num_procs@@OMP_1.0+0xd8>
   1cc7c:	add	x0, x0, #0x1
   1cc80:	cmp	x0, x1
   1cc84:	b.eq	1ccd4 <omp_get_num_procs@@OMP_1.0+0x124>  // b.none
   1cc88:	ldr	w2, [x19]
   1cc8c:	cbz	w2, 1cc7c <omp_get_num_procs@@OMP_1.0+0xcc>
   1cc90:	ldr	w2, [x19]
   1cc94:	cmp	w2, #0x0
   1cc98:	b.lt	1ccc8 <omp_get_num_procs@@OMP_1.0+0x118>  // b.tstop
   1cc9c:	b.eq	1cc58 <omp_get_num_procs@@OMP_1.0+0xa8>  // b.none
   1cca0:	sub	w0, w2, #0x1
   1cca4:	ldaxr	w1, [x19]
   1cca8:	cmp	w1, w2
   1ccac:	b.ne	1ccb8 <omp_get_num_procs@@OMP_1.0+0x108>  // b.any
   1ccb0:	stxr	w4, w0, [x19]
   1ccb4:	cbnz	w4, 1cca4 <omp_get_num_procs@@OMP_1.0+0xf4>
   1ccb8:	b.eq	1cd68 <omp_get_num_procs@@OMP_1.0+0x1b8>  // b.none
   1ccbc:	mov	w2, w1
   1ccc0:	cbz	w1, 1cc58 <omp_get_num_procs@@OMP_1.0+0xa8>
   1ccc4:	nop
   1ccc8:	stp	x21, x22, [sp, #32]
   1cccc:	str	x23, [sp, #48]
   1ccd0:	b	1cd18 <omp_get_num_procs@@OMP_1.0+0x168>
   1ccd4:	ldaxr	w0, [x19]
   1ccd8:	cbnz	w0, 1cce4 <omp_get_num_procs@@OMP_1.0+0x134>
   1ccdc:	stxr	w1, w8, [x19]
   1cce0:	cbnz	w1, 1ccd4 <omp_get_num_procs@@OMP_1.0+0x124>
   1cce4:	cmp	w0, #0x0
   1cce8:	b.ne	1cc90 <omp_get_num_procs@@OMP_1.0+0xe0>  // b.any
   1ccec:	adrp	x20, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1ccf0:	mov	x1, x19
   1ccf4:	mov	x4, #0x0                   	// #0
   1ccf8:	mov	w3, #0x80000000            	// #-2147483648
   1ccfc:	ldr	w2, [x20, #824]
   1cd00:	mov	x0, #0x62                  	// #98
   1cd04:	stp	x21, x22, [sp, #32]
   1cd08:	str	x23, [sp, #48]
   1cd0c:	bl	8a90 <syscall@plt>
   1cd10:	tbnz	w0, #31, 1ceac <omp_get_num_procs@@OMP_1.0+0x2fc>
   1cd14:	ldr	w2, [x19]
   1cd18:	adrp	x21, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1cd1c:	add	x21, x21, #0x328
   1cd20:	mov	w20, #0x80000000            	// #-2147483648
   1cd24:	adrp	x22, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1cd28:	mov	w1, w2
   1cd2c:	ands	w0, w2, #0x7fffffff
   1cd30:	b.eq	1cd74 <omp_get_num_procs@@OMP_1.0+0x1c4>  // b.none
   1cd34:	sub	w0, w0, #0x1
   1cd38:	orr	w0, w0, #0x80000000
   1cd3c:	ldaxr	w3, [x19]
   1cd40:	cmp	w3, w2
   1cd44:	b.ne	1cd50 <omp_get_num_procs@@OMP_1.0+0x1a0>  // b.any
   1cd48:	stxr	w4, w0, [x19]
   1cd4c:	cbnz	w4, 1cd3c <omp_get_num_procs@@OMP_1.0+0x18c>
   1cd50:	mov	w2, w3
   1cd54:	b.ne	1cd28 <omp_get_num_procs@@OMP_1.0+0x178>  // b.any
   1cd58:	tst	w1, #0x7ffffffe
   1cd5c:	b.ne	1ce44 <omp_get_num_procs@@OMP_1.0+0x294>  // b.any
   1cd60:	ldp	x21, x22, [sp, #32]
   1cd64:	ldr	x23, [sp, #48]
   1cd68:	ldp	x19, x20, [sp, #16]
   1cd6c:	ldp	x29, x30, [sp], #64
   1cd70:	ret
   1cd74:	ldaxr	w0, [x19]
   1cd78:	cmp	w0, w2
   1cd7c:	b.ne	1cd88 <omp_get_num_procs@@OMP_1.0+0x1d8>  // b.any
   1cd80:	stxr	w1, w20, [x19]
   1cd84:	cbnz	w1, 1cd74 <omp_get_num_procs@@OMP_1.0+0x1c4>
   1cd88:	mov	w2, w0
   1cd8c:	b.ne	1cd28 <omp_get_num_procs@@OMP_1.0+0x178>  // b.any
   1cd90:	ldr	x0, [x22, #1600]
   1cd94:	ldr	x3, [x21]
   1cd98:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1cd9c:	adrp	x1, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1cda0:	ldr	x2, [x2, #736]
   1cda4:	ldr	x1, [x1, #1616]
   1cda8:	cmp	x3, x2
   1cdac:	csel	x0, x1, x0, hi  // hi = pmore
   1cdb0:	cbz	x0, 1cddc <omp_get_num_procs@@OMP_1.0+0x22c>
   1cdb4:	mov	x1, #0x0                   	// #0
   1cdb8:	b	1cdc8 <omp_get_num_procs@@OMP_1.0+0x218>
   1cdbc:	add	x1, x1, #0x1
   1cdc0:	cmp	x1, x0
   1cdc4:	b.eq	1cddc <omp_get_num_procs@@OMP_1.0+0x22c>  // b.none
   1cdc8:	ldr	w2, [x19]
   1cdcc:	cmp	w2, w20
   1cdd0:	b.eq	1cdbc <omp_get_num_procs@@OMP_1.0+0x20c>  // b.none
   1cdd4:	ldr	w2, [x19]
   1cdd8:	b	1cd28 <omp_get_num_procs@@OMP_1.0+0x178>
   1cddc:	adrp	x23, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1cde0:	mov	x1, x19
   1cde4:	mov	x4, #0x0                   	// #0
   1cde8:	mov	w3, #0x80000000            	// #-2147483648
   1cdec:	ldr	w2, [x23, #824]
   1cdf0:	mov	x0, #0x62                  	// #98
   1cdf4:	bl	8a90 <syscall@plt>
   1cdf8:	tbz	w0, #31, 1cdd4 <omp_get_num_procs@@OMP_1.0+0x224>
   1cdfc:	bl	8a70 <__errno_location@plt>
   1ce00:	ldr	w0, [x0]
   1ce04:	cmp	w0, #0x26
   1ce08:	b.ne	1cdd4 <omp_get_num_procs@@OMP_1.0+0x224>  // b.any
   1ce0c:	adrp	x5, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1ce10:	ldr	w2, [x23, #824]
   1ce14:	mov	x1, x19
   1ce18:	mov	x4, #0x0                   	// #0
   1ce1c:	ldr	w0, [x5, #828]
   1ce20:	and	w2, w2, #0xffffff7f
   1ce24:	mov	w3, #0x80000000            	// #-2147483648
   1ce28:	str	w2, [x23, #824]
   1ce2c:	and	w0, w0, #0xffffff7f
   1ce30:	str	w0, [x5, #828]
   1ce34:	mov	x0, #0x62                  	// #98
   1ce38:	bl	8a90 <syscall@plt>
   1ce3c:	ldr	w2, [x19]
   1ce40:	b	1cd28 <omp_get_num_procs@@OMP_1.0+0x178>
   1ce44:	adrp	x20, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1ce48:	mov	x1, x19
   1ce4c:	mov	w3, #0x1                   	// #1
   1ce50:	mov	x0, #0x62                  	// #98
   1ce54:	ldr	w2, [x20, #828]
   1ce58:	bl	8a90 <syscall@plt>
   1ce5c:	tbz	w0, #31, 1cd60 <omp_get_num_procs@@OMP_1.0+0x1b0>
   1ce60:	bl	8a70 <__errno_location@plt>
   1ce64:	ldr	w0, [x0]
   1ce68:	cmp	w0, #0x26
   1ce6c:	b.ne	1cd60 <omp_get_num_procs@@OMP_1.0+0x1b0>  // b.any
   1ce70:	ldr	w2, [x20, #828]
   1ce74:	mov	x1, x19
   1ce78:	ldp	x21, x22, [sp, #32]
   1ce7c:	and	w2, w2, #0xffffff7f
   1ce80:	str	w2, [x20, #828]
   1ce84:	adrp	x5, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1ce88:	ldp	x19, x20, [sp, #16]
   1ce8c:	mov	w3, #0x1                   	// #1
   1ce90:	ldr	x23, [sp, #48]
   1ce94:	mov	x0, #0x62                  	// #98
   1ce98:	ldp	x29, x30, [sp], #64
   1ce9c:	ldr	w4, [x5, #824]
   1cea0:	and	w4, w4, #0xffffff7f
   1cea4:	str	w4, [x5, #824]
   1cea8:	b	8a90 <syscall@plt>
   1ceac:	bl	8a70 <__errno_location@plt>
   1ceb0:	ldr	w0, [x0]
   1ceb4:	cmp	w0, #0x26
   1ceb8:	b.ne	1cd14 <omp_get_num_procs@@OMP_1.0+0x164>  // b.any
   1cebc:	adrp	x5, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1cec0:	ldr	w2, [x20, #824]
   1cec4:	mov	x1, x19
   1cec8:	mov	x4, #0x0                   	// #0
   1cecc:	ldr	w0, [x5, #828]
   1ced0:	and	w2, w2, #0xffffff7f
   1ced4:	mov	w3, #0x80000000            	// #-2147483648
   1ced8:	str	w2, [x20, #824]
   1cedc:	and	w0, w0, #0xffffff7f
   1cee0:	str	w0, [x5, #828]
   1cee4:	mov	x0, #0x62                  	// #98
   1cee8:	bl	8a90 <syscall@plt>
   1ceec:	b	1cd14 <omp_get_num_procs@@OMP_1.0+0x164>
   1cef0:	stp	x29, x30, [sp, #-32]!
   1cef4:	mov	x1, x0
   1cef8:	mov	w3, #0x1                   	// #1
   1cefc:	mov	x29, sp
   1cf00:	stp	x19, x20, [sp, #16]
   1cf04:	adrp	x20, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1cf08:	mov	x19, x0
   1cf0c:	ldr	w2, [x20, #828]
   1cf10:	mov	x0, #0x62                  	// #98
   1cf14:	bl	8a90 <syscall@plt>
   1cf18:	tbnz	w0, #31, 1cf28 <omp_get_num_procs@@OMP_1.0+0x378>
   1cf1c:	ldp	x19, x20, [sp, #16]
   1cf20:	ldp	x29, x30, [sp], #32
   1cf24:	ret
   1cf28:	bl	8a70 <__errno_location@plt>
   1cf2c:	ldr	w0, [x0]
   1cf30:	cmp	w0, #0x26
   1cf34:	b.ne	1cf1c <omp_get_num_procs@@OMP_1.0+0x36c>  // b.any
   1cf38:	ldr	w2, [x20, #828]
   1cf3c:	mov	x1, x19
   1cf40:	adrp	x5, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1cf44:	mov	w3, #0x1                   	// #1
   1cf48:	and	w2, w2, #0xffffff7f
   1cf4c:	str	w2, [x20, #828]
   1cf50:	ldp	x19, x20, [sp, #16]
   1cf54:	mov	x0, #0x62                  	// #98
   1cf58:	ldp	x29, x30, [sp], #32
   1cf5c:	ldr	w4, [x5, #824]
   1cf60:	and	w4, w4, #0xffffff7f
   1cf64:	str	w4, [x5, #824]
   1cf68:	b	8a90 <syscall@plt>
   1cf6c:	nop
   1cf70:	stp	x29, x30, [sp, #-80]!
   1cf74:	mov	x29, sp
   1cf78:	stp	x19, x20, [sp, #16]
   1cf7c:	mov	w19, w1
   1cf80:	stp	x23, x24, [sp, #48]
   1cf84:	add	x23, x0, #0x4
   1cf88:	tbnz	w19, #0, 1d078 <omp_get_num_procs@@OMP_1.0+0x4c8>
   1cf8c:	adrp	x20, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1cf90:	add	x20, x20, #0x338
   1cf94:	stp	x21, x22, [sp, #32]
   1cf98:	adrp	x22, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1cf9c:	adrp	x21, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1cfa0:	add	x22, x22, #0x328
   1cfa4:	add	x21, x21, #0x33c
   1cfa8:	adrp	x24, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1cfac:	str	x25, [sp, #64]
   1cfb0:	adrp	x25, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1cfb4:	nop
   1cfb8:	ldr	x0, [x24, #1600]
   1cfbc:	ldr	x4, [x22]
   1cfc0:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1cfc4:	ldr	x3, [x25, #736]
   1cfc8:	ldr	x2, [x2, #1616]
   1cfcc:	cmp	x4, x3
   1cfd0:	csel	x0, x2, x0, hi  // hi = pmore
   1cfd4:	cbz	x0, 1d01c <omp_get_num_procs@@OMP_1.0+0x46c>
   1cfd8:	mov	x2, #0x0                   	// #0
   1cfdc:	b	1cfec <omp_get_num_procs@@OMP_1.0+0x43c>
   1cfe0:	add	x2, x2, #0x1
   1cfe4:	cmp	x2, x0
   1cfe8:	b.eq	1d01c <omp_get_num_procs@@OMP_1.0+0x46c>  // b.none
   1cfec:	ldr	w3, [x23]
   1cff0:	cmp	w19, w3
   1cff4:	b.eq	1cfe0 <omp_get_num_procs@@OMP_1.0+0x430>  // b.none
   1cff8:	ldar	w0, [x23]
   1cffc:	cmp	w0, w19
   1d000:	b.eq	1cfb8 <omp_get_num_procs@@OMP_1.0+0x408>  // b.none
   1d004:	ldp	x21, x22, [sp, #32]
   1d008:	ldr	x25, [sp, #64]
   1d00c:	ldp	x19, x20, [sp, #16]
   1d010:	ldp	x23, x24, [sp, #48]
   1d014:	ldp	x29, x30, [sp], #80
   1d018:	ret
   1d01c:	ldr	w2, [x20]
   1d020:	mov	w3, w19
   1d024:	mov	x1, x23
   1d028:	mov	x4, #0x0                   	// #0
   1d02c:	mov	x0, #0x62                  	// #98
   1d030:	bl	8a90 <syscall@plt>
   1d034:	tbz	w0, #31, 1cff8 <omp_get_num_procs@@OMP_1.0+0x448>
   1d038:	bl	8a70 <__errno_location@plt>
   1d03c:	ldr	w0, [x0]
   1d040:	cmp	w0, #0x26
   1d044:	b.ne	1cff8 <omp_get_num_procs@@OMP_1.0+0x448>  // b.any
   1d048:	ldr	w5, [x21]
   1d04c:	mov	w3, w19
   1d050:	ldr	w2, [x20]
   1d054:	mov	x1, x23
   1d058:	and	w5, w5, #0xffffff7f
   1d05c:	mov	x4, #0x0                   	// #0
   1d060:	and	w2, w2, #0xffffff7f
   1d064:	mov	x0, #0x62                  	// #98
   1d068:	str	w2, [x20]
   1d06c:	str	w5, [x21]
   1d070:	bl	8a90 <syscall@plt>
   1d074:	b	1cff8 <omp_get_num_procs@@OMP_1.0+0x448>
   1d078:	ldp	w2, w1, [x0]
   1d07c:	str	w2, [x0, #64]
   1d080:	add	w1, w1, #0x8
   1d084:	stlr	w1, [x23]
   1d088:	mov	x1, x23
   1d08c:	adrp	x19, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1d090:	mov	w3, #0x7fffffff            	// #2147483647
   1d094:	mov	x0, #0x62                  	// #98
   1d098:	ldr	w2, [x19, #828]
   1d09c:	bl	8a90 <syscall@plt>
   1d0a0:	tbz	w0, #31, 1d00c <omp_get_num_procs@@OMP_1.0+0x45c>
   1d0a4:	bl	8a70 <__errno_location@plt>
   1d0a8:	ldr	w0, [x0]
   1d0ac:	cmp	w0, #0x26
   1d0b0:	b.ne	1d00c <omp_get_num_procs@@OMP_1.0+0x45c>  // b.any
   1d0b4:	ldr	w2, [x19, #828]
   1d0b8:	mov	x1, x23
   1d0bc:	ldp	x23, x24, [sp, #48]
   1d0c0:	and	w2, w2, #0xffffff7f
   1d0c4:	str	w2, [x19, #828]
   1d0c8:	adrp	x5, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1d0cc:	ldp	x19, x20, [sp, #16]
   1d0d0:	mov	w3, #0x7fffffff            	// #2147483647
   1d0d4:	ldp	x29, x30, [sp], #80
   1d0d8:	mov	x0, #0x62                  	// #98
   1d0dc:	ldr	w4, [x5, #824]
   1d0e0:	and	w4, w4, #0xffffff7f
   1d0e4:	str	w4, [x5, #824]
   1d0e8:	b	8a90 <syscall@plt>
   1d0ec:	nop
   1d0f0:	add	x1, x0, #0x4
   1d0f4:	ldar	w1, [x1]
   1d0f8:	and	w1, w1, #0xfffffffc
   1d0fc:	add	x2, x0, #0x40
   1d100:	ldaxr	w3, [x2]
   1d104:	sub	w3, w3, #0x1
   1d108:	stlxr	w4, w3, [x2]
   1d10c:	cbnz	w4, 1d100 <omp_get_num_procs@@OMP_1.0+0x550>
   1d110:	cmp	w3, #0x0
   1d114:	orr	w2, w1, #0x1
   1d118:	csel	w1, w2, w1, eq  // eq = none
   1d11c:	b	1cf70 <omp_get_num_procs@@OMP_1.0+0x3c0>
   1d120:	add	x1, x0, #0x4
   1d124:	ldar	w1, [x1]
   1d128:	add	x2, x0, #0x40
   1d12c:	ldaxr	w3, [x2]
   1d130:	sub	w3, w3, #0x1
   1d134:	stlxr	w4, w3, [x2]
   1d138:	cbnz	w4, 1d12c <omp_get_num_procs@@OMP_1.0+0x57c>
   1d13c:	cbnz	w3, 1d14c <omp_get_num_procs@@OMP_1.0+0x59c>
   1d140:	and	w1, w1, #0xfffffffc
   1d144:	orr	w1, w1, #0x1
   1d148:	b	1cf70 <omp_get_num_procs@@OMP_1.0+0x3c0>
   1d14c:	ret
   1d150:	stp	x29, x30, [sp, #-48]!
   1d154:	cmp	w1, #0x0
   1d158:	mov	x29, sp
   1d15c:	str	x21, [sp, #32]
   1d160:	adrp	x21, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1d164:	stp	x19, x20, [sp, #16]
   1d168:	add	x20, x0, #0x4
   1d16c:	ldr	w2, [x21, #828]
   1d170:	mov	w0, #0x7fffffff            	// #2147483647
   1d174:	csel	w19, w1, w0, ne  // ne = any
   1d178:	mov	w3, w19
   1d17c:	mov	x1, x20
   1d180:	mov	x0, #0x62                  	// #98
   1d184:	bl	8a90 <syscall@plt>
   1d188:	tbnz	w0, #31, 1d19c <omp_get_num_procs@@OMP_1.0+0x5ec>
   1d18c:	ldp	x19, x20, [sp, #16]
   1d190:	ldr	x21, [sp, #32]
   1d194:	ldp	x29, x30, [sp], #48
   1d198:	ret
   1d19c:	bl	8a70 <__errno_location@plt>
   1d1a0:	ldr	w0, [x0]
   1d1a4:	cmp	w0, #0x26
   1d1a8:	b.ne	1d18c <omp_get_num_procs@@OMP_1.0+0x5dc>  // b.any
   1d1ac:	ldr	w2, [x21, #828]
   1d1b0:	mov	w3, w19
   1d1b4:	mov	x1, x20
   1d1b8:	adrp	x5, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1d1bc:	and	w2, w2, #0xffffff7f
   1d1c0:	str	w2, [x21, #828]
   1d1c4:	ldp	x19, x20, [sp, #16]
   1d1c8:	mov	x0, #0x62                  	// #98
   1d1cc:	ldr	x21, [sp, #32]
   1d1d0:	ldp	x29, x30, [sp], #48
   1d1d4:	ldr	w4, [x5, #824]
   1d1d8:	and	w4, w4, #0xffffff7f
   1d1dc:	str	w4, [x5, #824]
   1d1e0:	b	8a90 <syscall@plt>
   1d1e4:	nop
   1d1e8:	stp	x29, x30, [sp, #-96]!
   1d1ec:	mov	x29, sp
   1d1f0:	stp	x19, x20, [sp, #16]
   1d1f4:	mov	w19, w1
   1d1f8:	str	x27, [sp, #80]
   1d1fc:	add	x27, x0, #0x4
   1d200:	tbnz	w19, #0, 1d328 <omp_get_num_procs@@OMP_1.0+0x778>
   1d204:	stp	x21, x22, [sp, #32]
   1d208:	stp	x23, x24, [sp, #48]
   1d20c:	stp	x25, x26, [sp, #64]
   1d210:	and	w22, w19, #0xfffffffb
   1d214:	adrp	x23, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1d218:	adrp	x20, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1d21c:	adrp	x21, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1d220:	add	w26, w22, #0x8
   1d224:	add	x23, x23, #0x328
   1d228:	add	x20, x20, #0x338
   1d22c:	add	x21, x21, #0x33c
   1d230:	adrp	x25, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1d234:	adrp	x24, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1d238:	ldr	x0, [x25, #1600]
   1d23c:	ldr	x4, [x23]
   1d240:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1d244:	ldr	x3, [x24, #736]
   1d248:	ldr	x2, [x2, #1616]
   1d24c:	cmp	x4, x3
   1d250:	csel	x0, x2, x0, hi  // hi = pmore
   1d254:	cbz	x0, 1d2ac <omp_get_num_procs@@OMP_1.0+0x6fc>
   1d258:	mov	x2, #0x0                   	// #0
   1d25c:	b	1d26c <omp_get_num_procs@@OMP_1.0+0x6bc>
   1d260:	add	x2, x2, #0x1
   1d264:	cmp	x2, x0
   1d268:	b.eq	1d2ac <omp_get_num_procs@@OMP_1.0+0x6fc>  // b.none
   1d26c:	ldr	w3, [x27]
   1d270:	cmp	w19, w3
   1d274:	b.eq	1d260 <omp_get_num_procs@@OMP_1.0+0x6b0>  // b.none
   1d278:	ldar	w0, [x27]
   1d27c:	tbnz	w0, #0, 1d308 <omp_get_num_procs@@OMP_1.0+0x758>
   1d280:	and	w2, w0, #0x2
   1d284:	cmp	w0, w26
   1d288:	orr	w19, w19, w2
   1d28c:	b.ne	1d238 <omp_get_num_procs@@OMP_1.0+0x688>  // b.any
   1d290:	ldp	x21, x22, [sp, #32]
   1d294:	ldp	x23, x24, [sp, #48]
   1d298:	ldp	x25, x26, [sp, #64]
   1d29c:	ldp	x19, x20, [sp, #16]
   1d2a0:	ldr	x27, [sp, #80]
   1d2a4:	ldp	x29, x30, [sp], #96
   1d2a8:	ret
   1d2ac:	ldr	w2, [x20]
   1d2b0:	mov	w3, w19
   1d2b4:	mov	x1, x27
   1d2b8:	mov	x4, #0x0                   	// #0
   1d2bc:	mov	x0, #0x62                  	// #98
   1d2c0:	bl	8a90 <syscall@plt>
   1d2c4:	tbz	w0, #31, 1d278 <omp_get_num_procs@@OMP_1.0+0x6c8>
   1d2c8:	bl	8a70 <__errno_location@plt>
   1d2cc:	ldr	w0, [x0]
   1d2d0:	cmp	w0, #0x26
   1d2d4:	b.ne	1d278 <omp_get_num_procs@@OMP_1.0+0x6c8>  // b.any
   1d2d8:	ldr	w5, [x21]
   1d2dc:	mov	w3, w19
   1d2e0:	ldr	w2, [x20]
   1d2e4:	mov	x1, x27
   1d2e8:	and	w5, w5, #0xffffff7f
   1d2ec:	mov	x4, #0x0                   	// #0
   1d2f0:	and	w2, w2, #0xffffff7f
   1d2f4:	mov	x0, #0x62                  	// #98
   1d2f8:	str	w2, [x20]
   1d2fc:	str	w5, [x21]
   1d300:	bl	8a90 <syscall@plt>
   1d304:	b	1d278 <omp_get_num_procs@@OMP_1.0+0x6c8>
   1d308:	mov	w0, w22
   1d30c:	bl	15790 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x9f0>
   1d310:	ldar	w0, [x27]
   1d314:	and	w1, w0, #0x2
   1d318:	cmp	w0, w26
   1d31c:	orr	w19, w19, w1
   1d320:	b.ne	1d238 <omp_get_num_procs@@OMP_1.0+0x688>  // b.any
   1d324:	b	1d290 <omp_get_num_procs@@OMP_1.0+0x6e0>
   1d328:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1d32c:	ldr	x2, [x2, #4016]
   1d330:	mrs	x1, tpidr_el0
   1d334:	ldr	w3, [x0]
   1d338:	add	x1, x1, x2
   1d33c:	str	w3, [x0, #64]
   1d340:	ldr	x0, [x1, #16]
   1d344:	ldr	w1, [x0, #1320]
   1d348:	str	wzr, [x0, #1332]
   1d34c:	cbnz	w1, 1d3c0 <omp_get_num_procs@@OMP_1.0+0x810>
   1d350:	and	w0, w19, #0xfffffffb
   1d354:	add	w0, w0, #0x7
   1d358:	stlr	w0, [x27]
   1d35c:	mov	x1, x27
   1d360:	adrp	x19, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1d364:	mov	w3, #0x7fffffff            	// #2147483647
   1d368:	mov	x0, #0x62                  	// #98
   1d36c:	ldr	w2, [x19, #828]
   1d370:	bl	8a90 <syscall@plt>
   1d374:	tbz	w0, #31, 1d29c <omp_get_num_procs@@OMP_1.0+0x6ec>
   1d378:	bl	8a70 <__errno_location@plt>
   1d37c:	ldr	w0, [x0]
   1d380:	cmp	w0, #0x26
   1d384:	b.ne	1d29c <omp_get_num_procs@@OMP_1.0+0x6ec>  // b.any
   1d388:	ldr	w2, [x19, #828]
   1d38c:	mov	x1, x27
   1d390:	ldr	x27, [sp, #80]
   1d394:	and	w2, w2, #0xffffff7f
   1d398:	str	w2, [x19, #828]
   1d39c:	adrp	x5, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1d3a0:	ldp	x19, x20, [sp, #16]
   1d3a4:	mov	w3, #0x7fffffff            	// #2147483647
   1d3a8:	ldp	x29, x30, [sp], #96
   1d3ac:	mov	x0, #0x62                  	// #98
   1d3b0:	ldr	w4, [x5, #824]
   1d3b4:	and	w4, w4, #0xffffff7f
   1d3b8:	str	w4, [x5, #824]
   1d3bc:	b	8a90 <syscall@plt>
   1d3c0:	mov	w0, w19
   1d3c4:	and	w19, w19, #0xfffffffe
   1d3c8:	stp	x21, x22, [sp, #32]
   1d3cc:	stp	x23, x24, [sp, #48]
   1d3d0:	stp	x25, x26, [sp, #64]
   1d3d4:	bl	15790 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x9f0>
   1d3d8:	b	1d210 <omp_get_num_procs@@OMP_1.0+0x660>
   1d3dc:	nop
   1d3e0:	add	x1, x0, #0x4
   1d3e4:	ldar	w1, [x1]
   1d3e8:	and	w1, w1, #0xfffffffc
   1d3ec:	add	x2, x0, #0x40
   1d3f0:	ldaxr	w3, [x2]
   1d3f4:	sub	w3, w3, #0x1
   1d3f8:	stlxr	w4, w3, [x2]
   1d3fc:	cbnz	w4, 1d3f0 <omp_get_num_procs@@OMP_1.0+0x840>
   1d400:	cmp	w3, #0x0
   1d404:	orr	w2, w1, #0x1
   1d408:	csel	w1, w2, w1, eq  // eq = none
   1d40c:	b	1d1e8 <omp_get_num_procs@@OMP_1.0+0x638>
   1d410:	add	x1, x0, #0x4
   1d414:	ldar	w1, [x1]
   1d418:	and	w1, w1, #0xfffffffc
   1d41c:	add	x2, x0, #0x44
   1d420:	ldaxr	w3, [x2]
   1d424:	sub	w3, w3, #0x1
   1d428:	stlxr	w4, w3, [x2]
   1d42c:	cbnz	w4, 1d420 <omp_get_num_procs@@OMP_1.0+0x870>
   1d430:	cbnz	w3, 1d440 <omp_get_num_procs@@OMP_1.0+0x890>
   1d434:	ldr	w2, [x0]
   1d438:	orr	w1, w1, #0x1
   1d43c:	str	w2, [x0, #68]
   1d440:	b	1d1e8 <omp_get_num_procs@@OMP_1.0+0x638>
   1d444:	nop
   1d448:	stp	x29, x30, [sp, #-80]!
   1d44c:	mov	x29, sp
   1d450:	stp	x19, x20, [sp, #16]
   1d454:	mov	x19, x0
   1d458:	stp	x23, x24, [sp, #48]
   1d45c:	mov	w23, w1
   1d460:	tbnz	w23, #0, 1d5b0 <omp_get_num_procs@@OMP_1.0+0xa00>
   1d464:	tbnz	w23, #2, 1d578 <omp_get_num_procs@@OMP_1.0+0x9c8>
   1d468:	adrp	x24, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1d46c:	add	x19, x19, #0x4
   1d470:	add	x24, x24, #0x328
   1d474:	mov	w20, w23
   1d478:	stp	x21, x22, [sp, #32]
   1d47c:	adrp	x21, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1d480:	adrp	x22, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1d484:	add	x21, x21, #0x338
   1d488:	add	x22, x22, #0x33c
   1d48c:	stp	x25, x26, [sp, #64]
   1d490:	adrp	x26, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1d494:	adrp	x25, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1d498:	ldr	x0, [x26, #1600]
   1d49c:	ldr	x4, [x24]
   1d4a0:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1d4a4:	ldr	x3, [x25, #736]
   1d4a8:	ldr	x2, [x2, #1616]
   1d4ac:	cmp	x4, x3
   1d4b0:	csel	x0, x2, x0, hi  // hi = pmore
   1d4b4:	cbz	x0, 1d514 <omp_get_num_procs@@OMP_1.0+0x964>
   1d4b8:	mov	x2, #0x0                   	// #0
   1d4bc:	b	1d4cc <omp_get_num_procs@@OMP_1.0+0x91c>
   1d4c0:	add	x2, x2, #0x1
   1d4c4:	cmp	x2, x0
   1d4c8:	b.eq	1d514 <omp_get_num_procs@@OMP_1.0+0x964>  // b.none
   1d4cc:	ldr	w3, [x19]
   1d4d0:	cmp	w20, w3
   1d4d4:	b.eq	1d4c0 <omp_get_num_procs@@OMP_1.0+0x910>  // b.none
   1d4d8:	ldar	w0, [x19]
   1d4dc:	tbnz	w0, #2, 1d570 <omp_get_num_procs@@OMP_1.0+0x9c0>
   1d4e0:	tbnz	w0, #0, 1d58c <omp_get_num_procs@@OMP_1.0+0x9dc>
   1d4e4:	and	w3, w0, #0x2
   1d4e8:	add	w2, w23, #0x8
   1d4ec:	orr	w20, w20, w3
   1d4f0:	cmp	w2, w0
   1d4f4:	b.ne	1d498 <omp_get_num_procs@@OMP_1.0+0x8e8>  // b.any
   1d4f8:	ldp	x21, x22, [sp, #32]
   1d4fc:	ldp	x25, x26, [sp, #64]
   1d500:	mov	w0, #0x0                   	// #0
   1d504:	ldp	x19, x20, [sp, #16]
   1d508:	ldp	x23, x24, [sp, #48]
   1d50c:	ldp	x29, x30, [sp], #80
   1d510:	ret
   1d514:	ldr	w2, [x21]
   1d518:	mov	w3, w20
   1d51c:	mov	x1, x19
   1d520:	mov	x4, #0x0                   	// #0
   1d524:	mov	x0, #0x62                  	// #98
   1d528:	bl	8a90 <syscall@plt>
   1d52c:	tbz	w0, #31, 1d4d8 <omp_get_num_procs@@OMP_1.0+0x928>
   1d530:	bl	8a70 <__errno_location@plt>
   1d534:	ldr	w0, [x0]
   1d538:	cmp	w0, #0x26
   1d53c:	b.ne	1d4d8 <omp_get_num_procs@@OMP_1.0+0x928>  // b.any
   1d540:	ldr	w5, [x22]
   1d544:	mov	w3, w20
   1d548:	ldr	w2, [x21]
   1d54c:	mov	x1, x19
   1d550:	and	w5, w5, #0xffffff7f
   1d554:	mov	x4, #0x0                   	// #0
   1d558:	and	w2, w2, #0xffffff7f
   1d55c:	mov	x0, #0x62                  	// #98
   1d560:	str	w2, [x21]
   1d564:	str	w5, [x22]
   1d568:	bl	8a90 <syscall@plt>
   1d56c:	b	1d4d8 <omp_get_num_procs@@OMP_1.0+0x928>
   1d570:	ldp	x21, x22, [sp, #32]
   1d574:	ldp	x25, x26, [sp, #64]
   1d578:	mov	w0, #0x1                   	// #1
   1d57c:	ldp	x19, x20, [sp, #16]
   1d580:	ldp	x23, x24, [sp, #48]
   1d584:	ldp	x29, x30, [sp], #80
   1d588:	ret
   1d58c:	mov	w0, w23
   1d590:	bl	15790 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x9f0>
   1d594:	ldar	w1, [x19]
   1d598:	and	w2, w1, #0x2
   1d59c:	add	w0, w23, #0x8
   1d5a0:	orr	w20, w20, w2
   1d5a4:	cmp	w0, w1
   1d5a8:	b.ne	1d498 <omp_get_num_procs@@OMP_1.0+0x8e8>  // b.any
   1d5ac:	b	1d4f8 <omp_get_num_procs@@OMP_1.0+0x948>
   1d5b0:	adrp	x1, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1d5b4:	ldr	x1, [x1, #4016]
   1d5b8:	mrs	x0, tpidr_el0
   1d5bc:	ldr	w2, [x19]
   1d5c0:	add	x0, x0, x1
   1d5c4:	ldr	x0, [x0, #16]
   1d5c8:	ldr	w1, [x0, #1320]
   1d5cc:	str	w2, [x19, #64]
   1d5d0:	str	wzr, [x0, #1332]
   1d5d4:	cbnz	w1, 1d644 <omp_get_num_procs@@OMP_1.0+0xa94>
   1d5d8:	add	x19, x19, #0x4
   1d5dc:	add	w23, w23, #0x7
   1d5e0:	stlr	w23, [x19]
   1d5e4:	mov	x1, x19
   1d5e8:	adrp	x20, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1d5ec:	mov	w3, #0x7fffffff            	// #2147483647
   1d5f0:	mov	x0, #0x62                  	// #98
   1d5f4:	ldr	w2, [x20, #828]
   1d5f8:	bl	8a90 <syscall@plt>
   1d5fc:	tbz	w0, #31, 1d500 <omp_get_num_procs@@OMP_1.0+0x950>
   1d600:	bl	8a70 <__errno_location@plt>
   1d604:	ldr	w0, [x0]
   1d608:	cmp	w0, #0x26
   1d60c:	b.ne	1d500 <omp_get_num_procs@@OMP_1.0+0x950>  // b.any
   1d610:	adrp	x5, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1d614:	ldr	w2, [x20, #828]
   1d618:	mov	x1, x19
   1d61c:	mov	w3, #0x7fffffff            	// #2147483647
   1d620:	ldr	w4, [x5, #824]
   1d624:	and	w2, w2, #0xffffff7f
   1d628:	mov	x0, #0x62                  	// #98
   1d62c:	str	w2, [x20, #828]
   1d630:	and	w4, w4, #0xffffff7f
   1d634:	str	w4, [x5, #824]
   1d638:	bl	8a90 <syscall@plt>
   1d63c:	mov	w0, #0x0                   	// #0
   1d640:	b	1d504 <omp_get_num_procs@@OMP_1.0+0x954>
   1d644:	mov	w0, w23
   1d648:	and	w23, w23, #0xfffffffe
   1d64c:	bl	15790 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x9f0>
   1d650:	b	1d464 <omp_get_num_procs@@OMP_1.0+0x8b4>
   1d654:	nop
   1d658:	add	x1, x0, #0x4
   1d65c:	ldar	w1, [x1]
   1d660:	and	w1, w1, #0xfffffffc
   1d664:	add	x2, x0, #0x40
   1d668:	ldaxr	w3, [x2]
   1d66c:	sub	w3, w3, #0x1
   1d670:	stlxr	w4, w3, [x2]
   1d674:	cbnz	w4, 1d668 <omp_get_num_procs@@OMP_1.0+0xab8>
   1d678:	cmp	w3, #0x0
   1d67c:	orr	w2, w1, #0x1
   1d680:	csel	w1, w2, w1, eq  // eq = none
   1d684:	b	1d448 <omp_get_num_procs@@OMP_1.0+0x898>
   1d688:	stp	x29, x30, [sp, #-48]!
   1d68c:	mov	w2, #0x1                   	// #1
   1d690:	mov	x29, sp
   1d694:	stp	x19, x20, [sp, #16]
   1d698:	mov	x19, x0
   1d69c:	add	x0, x0, #0x500
   1d6a0:	ldaxr	w1, [x0]
   1d6a4:	cbnz	w1, 1d6b0 <omp_get_num_procs@@OMP_1.0+0xb00>
   1d6a8:	stxr	w3, w2, [x0]
   1d6ac:	cbnz	w3, 1d6a0 <omp_get_num_procs@@OMP_1.0+0xaf0>
   1d6b0:	cmp	w1, #0x0
   1d6b4:	b.ne	1d76c <omp_get_num_procs@@OMP_1.0+0xbbc>  // b.any
   1d6b8:	ldr	w1, [x19, #132]
   1d6bc:	tbnz	w1, #2, 1d704 <omp_get_num_procs@@OMP_1.0+0xb54>
   1d6c0:	orr	w1, w1, #0x4
   1d6c4:	str	w1, [x19, #132]
   1d6c8:	ldxr	w1, [x0]
   1d6cc:	stlxr	w2, wzr, [x0]
   1d6d0:	cbnz	w2, 1d6c8 <omp_get_num_procs@@OMP_1.0+0xb18>
   1d6d4:	tbnz	w1, #31, 1d720 <omp_get_num_procs@@OMP_1.0+0xb70>
   1d6d8:	adrp	x20, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1d6dc:	add	x19, x19, #0x84
   1d6e0:	mov	x1, x19
   1d6e4:	mov	w3, #0x7fffffff            	// #2147483647
   1d6e8:	ldr	w2, [x20, #828]
   1d6ec:	mov	x0, #0x62                  	// #98
   1d6f0:	bl	8a90 <syscall@plt>
   1d6f4:	tbnz	w0, #31, 1d728 <omp_get_num_procs@@OMP_1.0+0xb78>
   1d6f8:	ldp	x19, x20, [sp, #16]
   1d6fc:	ldp	x29, x30, [sp], #48
   1d700:	ret
   1d704:	ldxr	w1, [x0]
   1d708:	stlxr	w2, wzr, [x0]
   1d70c:	cbnz	w2, 1d704 <omp_get_num_procs@@OMP_1.0+0xb54>
   1d710:	tbz	w1, #31, 1d6f8 <omp_get_num_procs@@OMP_1.0+0xb48>
   1d714:	ldp	x19, x20, [sp, #16]
   1d718:	ldp	x29, x30, [sp], #48
   1d71c:	b	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   1d720:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   1d724:	b	1d6d8 <omp_get_num_procs@@OMP_1.0+0xb28>
   1d728:	bl	8a70 <__errno_location@plt>
   1d72c:	ldr	w0, [x0]
   1d730:	cmp	w0, #0x26
   1d734:	b.ne	1d6f8 <omp_get_num_procs@@OMP_1.0+0xb48>  // b.any
   1d738:	adrp	x5, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1d73c:	ldr	w2, [x20, #828]
   1d740:	mov	x1, x19
   1d744:	mov	w3, #0x7fffffff            	// #2147483647
   1d748:	ldr	w4, [x5, #824]
   1d74c:	and	w2, w2, #0xffffff7f
   1d750:	str	w2, [x20, #828]
   1d754:	mov	x0, #0x62                  	// #98
   1d758:	and	w4, w4, #0xffffff7f
   1d75c:	str	w4, [x5, #824]
   1d760:	ldp	x19, x20, [sp, #16]
   1d764:	ldp	x29, x30, [sp], #48
   1d768:	b	8a90 <syscall@plt>
   1d76c:	str	x0, [sp, #40]
   1d770:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   1d774:	ldr	x0, [sp, #40]
   1d778:	b	1d6b8 <omp_get_num_procs@@OMP_1.0+0xb08>
   1d77c:	nop
   1d780:	stp	x29, x30, [sp, #-80]!
   1d784:	mov	x1, #0x2                   	// #2
   1d788:	mov	x29, sp
   1d78c:	stp	x19, x20, [sp, #16]
   1d790:	mov	x20, x0
   1d794:	stp	x21, x22, [sp, #32]
   1d798:	stp	x23, x24, [sp, #48]
   1d79c:	str	x25, [sp, #64]
   1d7a0:	ldxr	x0, [x20]
   1d7a4:	cmp	x0, #0x1
   1d7a8:	b.ne	1d7b4 <omp_get_num_procs@@OMP_1.0+0xc04>  // b.any
   1d7ac:	stxr	w2, x1, [x20]
   1d7b0:	cbnz	w2, 1d7a0 <omp_get_num_procs@@OMP_1.0+0xbf0>
   1d7b4:	mov	x19, x20
   1d7b8:	adrp	x23, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1d7bc:	adrp	x21, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1d7c0:	adrp	x22, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1d7c4:	add	x23, x23, #0x328
   1d7c8:	add	x21, x21, #0x338
   1d7cc:	add	x22, x22, #0x33c
   1d7d0:	adrp	x25, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1d7d4:	adrp	x24, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1d7d8:	ldr	x2, [x25, #1600]
   1d7dc:	ldr	x0, [x23]
   1d7e0:	adrp	x1, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1d7e4:	ldr	x3, [x24, #736]
   1d7e8:	ldr	x1, [x1, #1616]
   1d7ec:	cmp	x0, x3
   1d7f0:	csel	x2, x1, x2, hi  // hi = pmore
   1d7f4:	cbz	x2, 1d840 <omp_get_num_procs@@OMP_1.0+0xc90>
   1d7f8:	mov	x3, #0x0                   	// #0
   1d7fc:	b	1d80c <omp_get_num_procs@@OMP_1.0+0xc5c>
   1d800:	add	x3, x3, #0x1
   1d804:	cmp	x3, x2
   1d808:	b.eq	1d840 <omp_get_num_procs@@OMP_1.0+0xc90>  // b.none
   1d80c:	ldr	w0, [x19]
   1d810:	cmp	w0, #0x2
   1d814:	b.eq	1d800 <omp_get_num_procs@@OMP_1.0+0xc50>  // b.none
   1d818:	ldr	w1, [x19]
   1d81c:	cmp	w1, #0x2
   1d820:	b.eq	1d7d8 <omp_get_num_procs@@OMP_1.0+0xc28>  // b.none
   1d824:	ldar	x0, [x20]
   1d828:	ldp	x19, x20, [sp, #16]
   1d82c:	ldp	x21, x22, [sp, #32]
   1d830:	ldp	x23, x24, [sp, #48]
   1d834:	ldr	x25, [sp, #64]
   1d838:	ldp	x29, x30, [sp], #80
   1d83c:	ret
   1d840:	ldr	w2, [x21]
   1d844:	mov	x1, x19
   1d848:	mov	x4, #0x0                   	// #0
   1d84c:	mov	w3, #0x2                   	// #2
   1d850:	mov	x0, #0x62                  	// #98
   1d854:	bl	8a90 <syscall@plt>
   1d858:	tbz	w0, #31, 1d818 <omp_get_num_procs@@OMP_1.0+0xc68>
   1d85c:	bl	8a70 <__errno_location@plt>
   1d860:	ldr	w0, [x0]
   1d864:	cmp	w0, #0x26
   1d868:	b.ne	1d818 <omp_get_num_procs@@OMP_1.0+0xc68>  // b.any
   1d86c:	ldr	w5, [x22]
   1d870:	mov	x1, x19
   1d874:	ldr	w2, [x21]
   1d878:	mov	x4, #0x0                   	// #0
   1d87c:	and	w5, w5, #0xffffff7f
   1d880:	mov	w3, #0x2                   	// #2
   1d884:	and	w2, w2, #0xffffff7f
   1d888:	mov	x0, #0x62                  	// #98
   1d88c:	str	w2, [x21]
   1d890:	str	w5, [x22]
   1d894:	bl	8a90 <syscall@plt>
   1d898:	b	1d818 <omp_get_num_procs@@OMP_1.0+0xc68>
   1d89c:	nop
   1d8a0:	stp	x29, x30, [sp, #-32]!
   1d8a4:	mov	x29, sp
   1d8a8:	stp	x19, x20, [sp, #16]
   1d8ac:	mov	x19, x0
   1d8b0:	adrp	x20, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1d8b4:	mov	x1, x19
   1d8b8:	mov	w3, #0x7fffffff            	// #2147483647
   1d8bc:	mov	x0, #0x62                  	// #98
   1d8c0:	ldr	w2, [x20, #828]
   1d8c4:	bl	8a90 <syscall@plt>
   1d8c8:	tbnz	w0, #31, 1d8d8 <omp_get_num_procs@@OMP_1.0+0xd28>
   1d8cc:	ldp	x19, x20, [sp, #16]
   1d8d0:	ldp	x29, x30, [sp], #32
   1d8d4:	ret
   1d8d8:	bl	8a70 <__errno_location@plt>
   1d8dc:	ldr	w0, [x0]
   1d8e0:	cmp	w0, #0x26
   1d8e4:	b.ne	1d8cc <omp_get_num_procs@@OMP_1.0+0xd1c>  // b.any
   1d8e8:	ldr	w2, [x20, #828]
   1d8ec:	mov	x1, x19
   1d8f0:	adrp	x5, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1d8f4:	mov	w3, #0x7fffffff            	// #2147483647
   1d8f8:	and	w2, w2, #0xffffff7f
   1d8fc:	str	w2, [x20, #828]
   1d900:	ldp	x19, x20, [sp, #16]
   1d904:	mov	x0, #0x62                  	// #98
   1d908:	ldp	x29, x30, [sp], #32
   1d90c:	ldr	w4, [x5, #824]
   1d910:	and	w4, w4, #0xffffff7f
   1d914:	str	w4, [x5, #824]
   1d918:	b	8a90 <syscall@plt>
   1d91c:	nop

000000000001d920 <omp_get_wtime@@OMP_2.0>:
   1d920:	stp	x29, x30, [sp, #-48]!
   1d924:	mov	w0, #0x1                   	// #1
   1d928:	mov	x29, sp
   1d92c:	str	x19, [sp, #16]
   1d930:	add	x19, sp, #0x20
   1d934:	mov	x1, x19
   1d938:	bl	8670 <clock_gettime@plt>
   1d93c:	tbnz	w0, #31, 1d96c <omp_get_wtime@@OMP_2.0+0x4c>
   1d940:	ldp	d2, d0, [sp, #32]
   1d944:	mov	x0, #0xcd6500000000        	// #225833675390976
   1d948:	movk	x0, #0x41cd, lsl #48
   1d94c:	fmov	d3, x0
   1d950:	ldr	x19, [sp, #16]
   1d954:	scvtf	d1, d0
   1d958:	scvtf	d2, d2
   1d95c:	ldp	x29, x30, [sp], #48
   1d960:	fdiv	d0, d1, d3
   1d964:	fadd	d0, d0, d2
   1d968:	ret
   1d96c:	mov	x1, x19
   1d970:	mov	w0, #0x0                   	// #0
   1d974:	bl	8670 <clock_gettime@plt>
   1d978:	b	1d940 <omp_get_wtime@@OMP_2.0+0x20>
   1d97c:	nop

000000000001d980 <omp_get_wtick@@OMP_2.0>:
   1d980:	stp	x29, x30, [sp, #-48]!
   1d984:	mov	w0, #0x1                   	// #1
   1d988:	mov	x29, sp
   1d98c:	str	x19, [sp, #16]
   1d990:	add	x19, sp, #0x20
   1d994:	mov	x1, x19
   1d998:	bl	88a0 <clock_getres@plt>
   1d99c:	tbnz	w0, #31, 1d9cc <omp_get_wtick@@OMP_2.0+0x4c>
   1d9a0:	ldp	d2, d0, [sp, #32]
   1d9a4:	mov	x0, #0xcd6500000000        	// #225833675390976
   1d9a8:	movk	x0, #0x41cd, lsl #48
   1d9ac:	fmov	d3, x0
   1d9b0:	ldr	x19, [sp, #16]
   1d9b4:	scvtf	d1, d0
   1d9b8:	scvtf	d2, d2
   1d9bc:	ldp	x29, x30, [sp], #48
   1d9c0:	fdiv	d0, d1, d3
   1d9c4:	fadd	d0, d0, d2
   1d9c8:	ret
   1d9cc:	mov	x1, x19
   1d9d0:	mov	w0, #0x0                   	// #0
   1d9d4:	bl	88a0 <clock_getres@plt>
   1d9d8:	b	1d9a0 <omp_get_wtick@@OMP_2.0+0x20>
   1d9dc:	nop

000000000001d9e0 <omp_init_lock_@@OMP_3.0>:
   1d9e0:	b	1c1f8 <omp_init_lock@@OMP_3.0>
   1d9e4:	nop

000000000001d9e8 <omp_init_nest_lock_@@OMP_3.0>:
   1d9e8:	stp	x29, x30, [sp, #-32]!
   1d9ec:	mov	x29, sp
   1d9f0:	str	x19, [sp, #16]
   1d9f4:	mov	x19, x0
   1d9f8:	mov	x0, #0x10                  	// #16
   1d9fc:	bl	8710 <malloc@plt>
   1da00:	str	x0, [x19]
   1da04:	ldr	x19, [sp, #16]
   1da08:	ldp	x29, x30, [sp], #32
   1da0c:	b	1c270 <omp_init_nest_lock@@OMP_3.0>

000000000001da10 <omp_destroy_lock_@@OMP_3.0>:
   1da10:	b	1c200 <omp_destroy_lock@OMP_1.0>
   1da14:	nop

000000000001da18 <omp_destroy_nest_lock_@@OMP_3.0>:
   1da18:	stp	x29, x30, [sp, #-32]!
   1da1c:	mov	x29, sp
   1da20:	str	x19, [sp, #16]
   1da24:	mov	x19, x0
   1da28:	ldr	x0, [x0]
   1da2c:	bl	1c278 <omp_destroy_nest_lock@@OMP_3.0>
   1da30:	ldr	x0, [x19]
   1da34:	bl	88b0 <free@plt>
   1da38:	str	xzr, [x19]
   1da3c:	ldr	x19, [sp, #16]
   1da40:	ldp	x29, x30, [sp], #32
   1da44:	ret

000000000001da48 <omp_set_lock_@@OMP_3.0>:
   1da48:	b	1c208 <omp_set_lock@@OMP_3.0>
   1da4c:	nop

000000000001da50 <omp_set_nest_lock_@@OMP_3.0>:
   1da50:	ldr	x0, [x0]
   1da54:	b	1c280 <omp_set_nest_lock@@OMP_3.0>

000000000001da58 <omp_unset_lock_@@OMP_3.0>:
   1da58:	b	1c230 <omp_unset_lock@@OMP_3.0>
   1da5c:	nop

000000000001da60 <omp_unset_nest_lock_@@OMP_3.0>:
   1da60:	ldr	x0, [x0]
   1da64:	b	1c308 <omp_unset_nest_lock@@OMP_3.0>

000000000001da68 <omp_test_lock_@@OMP_3.0>:
   1da68:	b	1c250 <omp_test_lock@OMP_1.0>
   1da6c:	nop

000000000001da70 <omp_test_nest_lock_@@OMP_3.0>:
   1da70:	ldr	x0, [x0]
   1da74:	b	1c338 <omp_test_nest_lock@@OMP_3.0>

000000000001da78 <omp_init_lock_@OMP_1.0>:
   1da78:	b	1c1f8 <omp_init_lock@@OMP_3.0>
   1da7c:	nop

000000000001da80 <omp_init_nest_lock_@OMP_1.0>:
   1da80:	b	1c3e0 <omp_init_nest_lock@OMP_1.0>
   1da84:	nop

000000000001da88 <omp_destroy_lock_@OMP_1.0>:
   1da88:	b	1c200 <omp_destroy_lock@OMP_1.0>
   1da8c:	nop

000000000001da90 <omp_destroy_nest_lock_@OMP_1.0>:
   1da90:	b	1c3e8 <omp_destroy_nest_lock@OMP_1.0>
   1da94:	nop

000000000001da98 <omp_set_lock_@OMP_1.0>:
   1da98:	b	1c208 <omp_set_lock@@OMP_3.0>
   1da9c:	nop

000000000001daa0 <omp_set_nest_lock_@OMP_1.0>:
   1daa0:	b	1c3f0 <omp_set_nest_lock@OMP_1.0>
   1daa4:	nop

000000000001daa8 <omp_unset_lock_@OMP_1.0>:
   1daa8:	b	1c230 <omp_unset_lock@@OMP_3.0>
   1daac:	nop

000000000001dab0 <omp_unset_nest_lock_@OMP_1.0>:
   1dab0:	b	1c558 <omp_unset_nest_lock@OMP_1.0>
   1dab4:	nop

000000000001dab8 <omp_test_lock_@OMP_1.0>:
   1dab8:	b	1c250 <omp_test_lock@OMP_1.0>
   1dabc:	nop

000000000001dac0 <omp_test_nest_lock_@OMP_1.0>:
   1dac0:	b	1c5e8 <omp_test_nest_lock@OMP_1.0>
   1dac4:	nop

000000000001dac8 <omp_set_dynamic_@@OMP_1.0>:
   1dac8:	ldr	w0, [x0]
   1dacc:	b	b840 <omp_set_dynamic@@OMP_1.0>

000000000001dad0 <omp_set_dynamic_8_@@OMP_1.0>:
   1dad0:	ldr	x0, [x0]
   1dad4:	cmp	x0, #0x0
   1dad8:	cset	w0, ne  // ne = any
   1dadc:	b	b840 <omp_set_dynamic@@OMP_1.0>

000000000001dae0 <omp_set_nested_@@OMP_1.0>:
   1dae0:	ldr	w0, [x0]
   1dae4:	b	b8d8 <omp_set_nested@@OMP_1.0>

000000000001dae8 <omp_set_nested_8_@@OMP_1.0>:
   1dae8:	ldr	x0, [x0]
   1daec:	cmp	x0, #0x0
   1daf0:	cset	w0, ne  // ne = any
   1daf4:	b	b8d8 <omp_set_nested@@OMP_1.0>

000000000001daf8 <omp_set_num_threads_@@OMP_1.0>:
   1daf8:	ldr	w0, [x0]
   1dafc:	b	b7d8 <omp_set_num_threads@@OMP_1.0>

000000000001db00 <omp_set_num_threads_8_@@OMP_1.0>:
   1db00:	mov	x1, x0
   1db04:	mov	x2, #0xffffffff80000001    	// #-2147483647
   1db08:	mov	w0, #0x80000000            	// #-2147483648
   1db0c:	ldr	x1, [x1]
   1db10:	cmp	x1, x2
   1db14:	b.lt	1db24 <omp_set_num_threads_8_@@OMP_1.0+0x24>  // b.tstop
   1db18:	mov	x0, #0x7fffffff            	// #2147483647
   1db1c:	cmp	x1, x0
   1db20:	csel	x0, x1, x0, le
   1db24:	b	b7d8 <omp_set_num_threads@@OMP_1.0>

000000000001db28 <omp_get_dynamic_@@OMP_1.0>:
   1db28:	b	b8a8 <omp_get_dynamic@@OMP_1.0>
   1db2c:	nop

000000000001db30 <omp_get_nested_@@OMP_1.0>:
   1db30:	b	b940 <omp_get_nested@@OMP_1.0>
   1db34:	nop

000000000001db38 <omp_in_parallel_@@OMP_1.0>:
   1db38:	b	12d40 <omp_in_parallel@@OMP_1.0>
   1db3c:	nop

000000000001db40 <omp_get_max_threads_@@OMP_1.0>:
   1db40:	b	ba48 <omp_get_max_threads@@OMP_1.0>
   1db44:	nop

000000000001db48 <omp_get_num_procs_@@OMP_1.0>:
   1db48:	b	1cbb0 <omp_get_num_procs@@OMP_1.0>
   1db4c:	nop

000000000001db50 <omp_get_num_threads_@@OMP_1.0>:
   1db50:	b	12d00 <omp_get_num_threads@@OMP_1.0>
   1db54:	nop

000000000001db58 <omp_get_thread_num_@@OMP_1.0>:
   1db58:	b	12d28 <omp_get_thread_num@@OMP_1.0>
   1db5c:	nop

000000000001db60 <omp_get_wtick_@@OMP_2.0>:
   1db60:	b	1d980 <omp_get_wtick@@OMP_2.0>
   1db64:	nop

000000000001db68 <omp_get_wtime_@@OMP_2.0>:
   1db68:	b	1d920 <omp_get_wtime@@OMP_2.0>
   1db6c:	nop

000000000001db70 <omp_set_schedule_@@OMP_3.0>:
   1db70:	ldr	w0, [x0]
   1db74:	ldr	w1, [x1]
   1db78:	b	b970 <omp_set_schedule@@OMP_3.0>
   1db7c:	nop

000000000001db80 <omp_set_schedule_8_@@OMP_3.0>:
   1db80:	mov	x2, x1
   1db84:	mov	x3, #0xffffffff80000001    	// #-2147483647
   1db88:	ldr	w0, [x0]
   1db8c:	mov	w1, #0x80000000            	// #-2147483648
   1db90:	ldr	x2, [x2]
   1db94:	cmp	x2, x3
   1db98:	b.lt	1dba8 <omp_set_schedule_8_@@OMP_3.0+0x28>  // b.tstop
   1db9c:	mov	x1, #0x7fffffff            	// #2147483647
   1dba0:	cmp	x2, x1
   1dba4:	csel	x1, x2, x1, le
   1dba8:	b	b970 <omp_set_schedule@@OMP_3.0>
   1dbac:	nop

000000000001dbb0 <omp_get_schedule_@@OMP_3.0>:
   1dbb0:	stp	x29, x30, [sp, #-48]!
   1dbb4:	mov	x29, sp
   1dbb8:	stp	x19, x20, [sp, #16]
   1dbbc:	mov	x20, x0
   1dbc0:	mov	x19, x1
   1dbc4:	add	x0, sp, #0x28
   1dbc8:	add	x1, sp, #0x2c
   1dbcc:	bl	ba08 <omp_get_schedule@@OMP_3.0>
   1dbd0:	ldp	w0, w1, [sp, #40]
   1dbd4:	and	w0, w0, #0x7fffffff
   1dbd8:	str	w0, [x20]
   1dbdc:	str	w1, [x19]
   1dbe0:	ldp	x19, x20, [sp, #16]
   1dbe4:	ldp	x29, x30, [sp], #48
   1dbe8:	ret
   1dbec:	nop

000000000001dbf0 <omp_get_schedule_8_@@OMP_3.0>:
   1dbf0:	stp	x29, x30, [sp, #-48]!
   1dbf4:	mov	x29, sp
   1dbf8:	stp	x19, x20, [sp, #16]
   1dbfc:	mov	x20, x0
   1dc00:	mov	x19, x1
   1dc04:	add	x0, sp, #0x28
   1dc08:	add	x1, sp, #0x2c
   1dc0c:	bl	ba08 <omp_get_schedule@@OMP_3.0>
   1dc10:	ldr	w0, [sp, #40]
   1dc14:	ldrsw	x1, [sp, #44]
   1dc18:	and	w0, w0, #0x7fffffff
   1dc1c:	str	w0, [x20]
   1dc20:	str	x1, [x19]
   1dc24:	ldp	x19, x20, [sp, #16]
   1dc28:	ldp	x29, x30, [sp], #48
   1dc2c:	ret

000000000001dc30 <omp_get_thread_limit_@@OMP_3.0>:
   1dc30:	b	ba78 <omp_get_thread_limit@@OMP_3.0>
   1dc34:	nop

000000000001dc38 <omp_set_max_active_levels_@@OMP_3.0>:
   1dc38:	ldr	w0, [x0]
   1dc3c:	b	bab8 <omp_set_max_active_levels@@OMP_3.0>

000000000001dc40 <omp_set_max_active_levels_8_@@OMP_3.0>:
   1dc40:	mov	x1, x0
   1dc44:	mov	x2, #0xffffffff80000001    	// #-2147483647
   1dc48:	mov	w0, #0x80000000            	// #-2147483648
   1dc4c:	ldr	x1, [x1]
   1dc50:	cmp	x1, x2
   1dc54:	b.lt	1dc64 <omp_set_max_active_levels_8_@@OMP_3.0+0x24>  // b.tstop
   1dc58:	mov	x0, #0x7fffffff            	// #2147483647
   1dc5c:	cmp	x1, x0
   1dc60:	csel	x0, x1, x0, le
   1dc64:	b	bab8 <omp_set_max_active_levels@@OMP_3.0>

000000000001dc68 <omp_get_max_active_levels_@@OMP_3.0>:
   1dc68:	b	bad0 <omp_get_max_active_levels@@OMP_3.0>
   1dc6c:	nop

000000000001dc70 <omp_get_level_@@OMP_3.0>:
   1dc70:	b	12d60 <omp_get_level@@OMP_3.0>
   1dc74:	nop

000000000001dc78 <omp_get_ancestor_thread_num_@@OMP_3.0>:
   1dc78:	ldr	w0, [x0]
   1dc7c:	b	12d78 <omp_get_ancestor_thread_num@@OMP_3.0>

000000000001dc80 <omp_get_ancestor_thread_num_8_@@OMP_3.0>:
   1dc80:	ldr	x0, [x0]
   1dc84:	mov	x1, #0xffffffff80000001    	// #-2147483647
   1dc88:	cmp	x0, x1
   1dc8c:	b.lt	1dca0 <omp_get_ancestor_thread_num_8_@@OMP_3.0+0x20>  // b.tstop
   1dc90:	mov	x1, #0x7fffffff            	// #2147483647
   1dc94:	cmp	x0, x1
   1dc98:	csel	x0, x0, x1, le
   1dc9c:	b	12d78 <omp_get_ancestor_thread_num@@OMP_3.0>
   1dca0:	mov	w0, #0x80000000            	// #-2147483648
   1dca4:	b	12d78 <omp_get_ancestor_thread_num@@OMP_3.0>

000000000001dca8 <omp_get_team_size_@@OMP_3.0>:
   1dca8:	ldr	w0, [x0]
   1dcac:	b	12dc8 <omp_get_team_size@@OMP_3.0>

000000000001dcb0 <omp_get_team_size_8_@@OMP_3.0>:
   1dcb0:	ldr	x0, [x0]
   1dcb4:	mov	x1, #0xffffffff80000001    	// #-2147483647
   1dcb8:	cmp	x0, x1
   1dcbc:	b.lt	1dcd0 <omp_get_team_size_8_@@OMP_3.0+0x20>  // b.tstop
   1dcc0:	mov	x1, #0x7fffffff            	// #2147483647
   1dcc4:	cmp	x0, x1
   1dcc8:	csel	x0, x0, x1, le
   1dccc:	b	12dc8 <omp_get_team_size@@OMP_3.0>
   1dcd0:	mov	w0, #0x80000000            	// #-2147483648
   1dcd4:	b	12dc8 <omp_get_team_size@@OMP_3.0>

000000000001dcd8 <omp_get_active_level_@@OMP_3.0>:
   1dcd8:	b	12e38 <omp_get_active_level@@OMP_3.0>
   1dcdc:	nop

000000000001dce0 <omp_in_final_@@OMP_3.1>:
   1dce0:	b	1a2f0 <omp_in_final@@OMP_3.1>
   1dce4:	nop

000000000001dce8 <omp_get_cancellation_@@OMP_4.0>:
   1dce8:	b	bae0 <omp_get_cancellation@@OMP_4.0>
   1dcec:	nop

000000000001dcf0 <omp_get_proc_bind_@@OMP_4.0>:
   1dcf0:	b	bb00 <omp_get_proc_bind@@OMP_4.0>
   1dcf4:	nop

000000000001dcf8 <omp_get_num_places_@@OMP_4.5>:
   1dcf8:	b	bb38 <omp_get_num_places@@OMP_4.5>
   1dcfc:	nop

000000000001dd00 <omp_get_place_num_procs_@@OMP_4.5>:
   1dd00:	ldr	w0, [x0]
   1dd04:	b	1f168 <omp_get_place_num_procs@@OMP_4.5>

000000000001dd08 <omp_get_place_num_procs_8_@@OMP_4.5>:
   1dd08:	ldr	x0, [x0]
   1dd0c:	mov	x1, #0xffffffff80000001    	// #-2147483647
   1dd10:	cmp	x0, x1
   1dd14:	b.lt	1dd28 <omp_get_place_num_procs_8_@@OMP_4.5+0x20>  // b.tstop
   1dd18:	mov	x1, #0x7fffffff            	// #2147483647
   1dd1c:	cmp	x0, x1
   1dd20:	csel	x0, x0, x1, le
   1dd24:	b	1f168 <omp_get_place_num_procs@@OMP_4.5>
   1dd28:	mov	w0, #0x80000000            	// #-2147483648
   1dd2c:	b	1f168 <omp_get_place_num_procs@@OMP_4.5>

000000000001dd30 <omp_get_place_proc_ids_@@OMP_4.5>:
   1dd30:	ldr	w0, [x0]
   1dd34:	b	1f1c0 <omp_get_place_proc_ids@@OMP_4.5>

000000000001dd38 <omp_get_place_proc_ids_8_@@OMP_4.5>:
   1dd38:	mov	x2, x0
   1dd3c:	mov	x3, #0xffffffff80000001    	// #-2147483647
   1dd40:	mov	w0, #0x80000000            	// #-2147483648
   1dd44:	ldr	x2, [x2]
   1dd48:	cmp	x2, x3
   1dd4c:	b.lt	1dd5c <omp_get_place_proc_ids_8_@@OMP_4.5+0x24>  // b.tstop
   1dd50:	mov	x0, #0x7fffffff            	// #2147483647
   1dd54:	cmp	x2, x0
   1dd58:	csel	x0, x2, x0, le
   1dd5c:	b	1f238 <omp_get_place_proc_ids@@OMP_4.5+0x78>

000000000001dd60 <omp_get_place_num_@@OMP_4.5>:
   1dd60:	b	bb48 <omp_get_place_num@@OMP_4.5>
   1dd64:	nop

000000000001dd68 <omp_get_partition_num_places_@@OMP_4.5>:
   1dd68:	b	bba8 <omp_get_partition_num_places@@OMP_4.5>
   1dd6c:	nop

000000000001dd70 <omp_get_partition_place_nums_@@OMP_4.5>:
   1dd70:	b	bc10 <omp_get_partition_place_nums@@OMP_4.5>
   1dd74:	nop

000000000001dd78 <omp_get_partition_place_nums_8_@@OMP_4.5>:
   1dd78:	stp	x29, x30, [sp, #-48]!
   1dd7c:	adrp	x1, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1dd80:	mov	x29, sp
   1dd84:	stp	x19, x20, [sp, #16]
   1dd88:	mov	x19, x0
   1dd8c:	ldr	x0, [x1, #1584]
   1dd90:	cbz	x0, 1de6c <omp_get_partition_place_nums_8_@@OMP_4.5+0xf4>
   1dd94:	str	x21, [sp, #32]
   1dd98:	mrs	x20, tpidr_el0
   1dd9c:	adrp	x21, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1dda0:	ldr	x21, [x21, #4016]
   1dda4:	add	x0, x20, x21
   1dda8:	ldr	w0, [x0, #92]
   1ddac:	cbz	w0, 1de88 <omp_get_partition_place_nums_8_@@OMP_4.5+0x110>
   1ddb0:	add	x20, x20, x21
   1ddb4:	ldr	w0, [x20, #56]
   1ddb8:	cbz	w0, 1de78 <omp_get_partition_place_nums_8_@@OMP_4.5+0x100>
   1ddbc:	sub	w1, w0, #0x1
   1ddc0:	ldr	w3, [x20, #52]
   1ddc4:	cmp	w1, #0x3
   1ddc8:	b.ls	1de90 <omp_get_partition_place_nums_8_@@OMP_4.5+0x118>  // b.plast
   1ddcc:	lsr	w2, w0, #2
   1ddd0:	mov	w4, #0x20                  	// #32
   1ddd4:	adrp	x5, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1ddd8:	dup	v2.2d, x3
   1dddc:	movi	v4.4s, #0x4
   1dde0:	mov	x1, x19
   1dde4:	ldr	q1, [x5, #2096]
   1dde8:	umaddl	x2, w2, w4, x19
   1ddec:	nop
   1ddf0:	mov	v0.16b, v1.16b
   1ddf4:	add	v1.4s, v1.4s, v4.4s
   1ddf8:	uaddw	v3.2d, v2.2d, v0.2s
   1ddfc:	uaddw2	v0.2d, v2.2d, v0.4s
   1de00:	stp	q3, q0, [x1]
   1de04:	add	x1, x1, #0x20
   1de08:	cmp	x1, x2
   1de0c:	b.ne	1ddf0 <omp_get_partition_place_nums_8_@@OMP_4.5+0x78>  // b.any
   1de10:	and	x2, x0, #0xfffffffc
   1de14:	tst	x0, #0x3
   1de18:	and	w1, w0, #0xfffffffc
   1de1c:	add	x19, x19, x2, lsl #3
   1de20:	b.eq	1de78 <omp_get_partition_place_nums_8_@@OMP_4.5+0x100>  // b.none
   1de24:	add	x2, x2, x3
   1de28:	str	x2, [x19]
   1de2c:	add	w2, w1, #0x1
   1de30:	cmp	w2, w0
   1de34:	b.cs	1de78 <omp_get_partition_place_nums_8_@@OMP_4.5+0x100>  // b.hs, b.nlast
   1de38:	add	x2, x3, w2, uxtw
   1de3c:	str	x2, [x19, #8]
   1de40:	add	w2, w1, #0x2
   1de44:	cmp	w0, w2
   1de48:	b.ls	1de78 <omp_get_partition_place_nums_8_@@OMP_4.5+0x100>  // b.plast
   1de4c:	add	x2, x3, w2, uxtw
   1de50:	str	x2, [x19, #16]
   1de54:	add	w1, w1, #0x3
   1de58:	cmp	w0, w1
   1de5c:	b.ls	1de78 <omp_get_partition_place_nums_8_@@OMP_4.5+0x100>  // b.plast
   1de60:	add	x1, x3, w1, uxtw
   1de64:	ldr	x21, [sp, #32]
   1de68:	str	x1, [x19, #24]
   1de6c:	ldp	x19, x20, [sp, #16]
   1de70:	ldp	x29, x30, [sp], #48
   1de74:	ret
   1de78:	ldp	x19, x20, [sp, #16]
   1de7c:	ldr	x21, [sp, #32]
   1de80:	ldp	x29, x30, [sp], #48
   1de84:	ret
   1de88:	bl	1efa0 <omp_pause_resource_all_@@OMP_5.0+0xcb8>
   1de8c:	b	1ddb0 <omp_get_partition_place_nums_8_@@OMP_4.5+0x38>
   1de90:	mov	w1, #0x0                   	// #0
   1de94:	mov	x2, #0x0                   	// #0
   1de98:	b	1de24 <omp_get_partition_place_nums_8_@@OMP_4.5+0xac>
   1de9c:	nop

000000000001dea0 <omp_set_default_device_@@OMP_4.0>:
   1dea0:	ldr	w0, [x0]
   1dea4:	b	bc90 <omp_set_default_device@@OMP_4.0>

000000000001dea8 <omp_set_default_device_8_@@OMP_4.0>:
   1dea8:	mov	x1, x0
   1deac:	mov	x2, #0xffffffff80000001    	// #-2147483647
   1deb0:	mov	w0, #0x80000000            	// #-2147483648
   1deb4:	ldr	x1, [x1]
   1deb8:	cmp	x1, x2
   1debc:	b.lt	1decc <omp_set_default_device_8_@@OMP_4.0+0x24>  // b.tstop
   1dec0:	mov	x0, #0x7fffffff            	// #2147483647
   1dec4:	cmp	x1, x0
   1dec8:	csel	x0, x1, x0, le
   1decc:	b	bc90 <omp_set_default_device@@OMP_4.0>

000000000001ded0 <omp_get_default_device_@@OMP_4.0>:
   1ded0:	b	bcf0 <omp_get_default_device@@OMP_4.0>
   1ded4:	nop

000000000001ded8 <omp_get_num_devices_@@OMP_4.0>:
   1ded8:	b	bd20 <omp_get_num_devices@@OMP_4.0>
   1dedc:	nop

000000000001dee0 <omp_get_num_teams_@@OMP_4.0>:
   1dee0:	b	2ccb8 <omp_get_num_teams@@OMP_4.0>
   1dee4:	nop

000000000001dee8 <omp_get_team_num_@@OMP_4.0>:
   1dee8:	b	2ccc8 <omp_get_team_num@@OMP_4.0>
   1deec:	nop

000000000001def0 <omp_is_initial_device_@@OMP_4.0>:
   1def0:	b	bd28 <omp_is_initial_device@@OMP_4.0>
   1def4:	nop

000000000001def8 <omp_get_initial_device_@@OMP_4.5>:
   1def8:	b	bb30 <omp_get_initial_device@@OMP_4.5>
   1defc:	nop

000000000001df00 <omp_get_max_task_priority_@@OMP_4.5>:
   1df00:	b	baf0 <omp_get_max_task_priority@@OMP_4.5>
   1df04:	nop

000000000001df08 <omp_set_affinity_format_@@OMP_5.0>:
   1df08:	b	2bee8 <acc_set_cuda_stream@@OACC_2.0+0xee0>
   1df0c:	nop

000000000001df10 <omp_get_affinity_format_@@OMP_5.0>:
   1df10:	stp	x29, x30, [sp, #-48]!
   1df14:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1df18:	mov	x29, sp
   1df1c:	stp	x21, x22, [sp, #32]
   1df20:	mov	x21, x0
   1df24:	ldr	x22, [x2, #816]
   1df28:	stp	x19, x20, [sp, #16]
   1df2c:	mov	x20, x1
   1df30:	mov	x0, x22
   1df34:	bl	85b0 <strlen@plt>
   1df38:	mov	x19, x0
   1df3c:	cbz	x20, 1df68 <omp_get_affinity_format_@@OMP_5.0+0x58>
   1df40:	cmp	x0, x20
   1df44:	b.cs	1df7c <omp_get_affinity_format_@@OMP_5.0+0x6c>  // b.hs, b.nlast
   1df48:	mov	x2, x0
   1df4c:	mov	x1, x22
   1df50:	mov	x0, x21
   1df54:	bl	8580 <memcpy@plt>
   1df58:	sub	x2, x20, x19
   1df5c:	add	x0, x21, x19
   1df60:	mov	w1, #0x20                  	// #32
   1df64:	bl	8770 <memset@plt>
   1df68:	mov	w0, w19
   1df6c:	ldp	x19, x20, [sp, #16]
   1df70:	ldp	x21, x22, [sp, #32]
   1df74:	ldp	x29, x30, [sp], #48
   1df78:	ret
   1df7c:	mov	x2, x20
   1df80:	mov	x1, x22
   1df84:	mov	x0, x21
   1df88:	bl	8580 <memcpy@plt>
   1df8c:	mov	w0, w19
   1df90:	ldp	x19, x20, [sp, #16]
   1df94:	ldp	x21, x22, [sp, #32]
   1df98:	ldp	x29, x30, [sp], #48
   1df9c:	ret

000000000001dfa0 <omp_display_affinity_@@OMP_5.0>:
   1dfa0:	sub	sp, sp, #0x360
   1dfa4:	stp	x29, x30, [sp]
   1dfa8:	mov	x29, sp
   1dfac:	stp	x19, x20, [sp, #16]
   1dfb0:	mov	x19, x1
   1dfb4:	stp	x21, x22, [sp, #32]
   1dfb8:	mov	x22, x0
   1dfbc:	stp	x23, x24, [sp, #48]
   1dfc0:	stp	x25, x26, [sp, #64]
   1dfc4:	stp	x27, x28, [sp, #80]
   1dfc8:	bl	8a40 <pthread_self@plt>
   1dfcc:	mov	x20, x0
   1dfd0:	cbz	x19, 1e074 <omp_display_affinity_@@OMP_5.0+0xd4>
   1dfd4:	add	x23, sp, #0x60
   1dfd8:	cmp	x19, #0xff
   1dfdc:	mov	w25, #0x0                   	// #0
   1dfe0:	b.hi	1e158 <omp_display_affinity_@@OMP_5.0+0x1b8>  // b.pmore
   1dfe4:	adrp	x21, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1dfe8:	ldr	x21, [x21, #4016]
   1dfec:	mov	x1, x22
   1dff0:	mov	x2, x19
   1dff4:	mrs	x24, tpidr_el0
   1dff8:	mov	x0, x23
   1dffc:	bl	8580 <memcpy@plt>
   1e000:	add	x1, x24, x21
   1e004:	strb	wzr, [x23, x19]
   1e008:	add	x22, sp, #0x160
   1e00c:	add	x4, x1, #0x10
   1e010:	mov	x0, x22
   1e014:	mov	x3, x20
   1e018:	ldr	w5, [x1, #92]
   1e01c:	mov	x2, x23
   1e020:	mov	x1, #0x200                 	// #512
   1e024:	bl	2c178 <omp_get_affinity_format@@OMP_5.0+0x110>
   1e028:	mov	x19, x0
   1e02c:	cmp	x0, #0x1ff
   1e030:	b.hi	1e140 <omp_display_affinity_@@OMP_5.0+0x1a0>  // b.pmore
   1e034:	mov	w2, #0xa                   	// #10
   1e038:	add	x1, x0, #0x1
   1e03c:	mov	x0, x22
   1e040:	strb	w2, [x22, x19]
   1e044:	bl	2bed0 <acc_set_cuda_stream@@OACC_2.0+0xec8>
   1e048:	cbz	w25, 1e054 <omp_display_affinity_@@OMP_5.0+0xb4>
   1e04c:	mov	x0, x23
   1e050:	bl	88b0 <free@plt>
   1e054:	ldp	x29, x30, [sp]
   1e058:	ldp	x19, x20, [sp, #16]
   1e05c:	ldp	x21, x22, [sp, #32]
   1e060:	ldp	x23, x24, [sp, #48]
   1e064:	ldp	x25, x26, [sp, #64]
   1e068:	ldp	x27, x28, [sp, #80]
   1e06c:	add	sp, sp, #0x360
   1e070:	ret
   1e074:	adrp	x21, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1e078:	ldr	x21, [x21, #4016]
   1e07c:	mrs	x24, tpidr_el0
   1e080:	adrp	x27, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1e084:	add	x22, sp, #0x160
   1e088:	add	x1, x24, x21
   1e08c:	mov	x0, x22
   1e090:	ldr	x2, [x27, #816]
   1e094:	add	x4, x1, #0x10
   1e098:	ldr	w5, [x1, #92]
   1e09c:	mov	x3, x20
   1e0a0:	mov	x1, #0x200                 	// #512
   1e0a4:	bl	2c178 <omp_get_affinity_format@@OMP_5.0+0x110>
   1e0a8:	mov	x19, x0
   1e0ac:	cmp	x0, #0x1ff
   1e0b0:	b.ls	1e10c <omp_display_affinity_@@OMP_5.0+0x16c>  // b.plast
   1e0b4:	add	x28, x19, #0x1
   1e0b8:	mov	w25, #0x0                   	// #0
   1e0bc:	mov	x0, x28
   1e0c0:	bl	b2f8 <fprintf@plt+0x2838>
   1e0c4:	ldr	x2, [x27, #816]
   1e0c8:	mov	x26, x0
   1e0cc:	mov	x23, #0x0                   	// #0
   1e0d0:	add	x21, x24, x21
   1e0d4:	mov	x3, x20
   1e0d8:	add	x4, x21, #0x10
   1e0dc:	mov	x0, x22
   1e0e0:	mov	x1, #0x200                 	// #512
   1e0e4:	ldr	w5, [x21, #92]
   1e0e8:	bl	2c178 <omp_get_affinity_format@@OMP_5.0+0x110>
   1e0ec:	mov	x1, x28
   1e0f0:	mov	w0, #0xa                   	// #10
   1e0f4:	strb	w0, [x26, x19]
   1e0f8:	mov	x0, x26
   1e0fc:	bl	2bed0 <acc_set_cuda_stream@@OACC_2.0+0xec8>
   1e100:	mov	x0, x26
   1e104:	bl	88b0 <free@plt>
   1e108:	b	1e048 <omp_display_affinity_@@OMP_5.0+0xa8>
   1e10c:	mov	w2, #0xa                   	// #10
   1e110:	add	x1, x0, #0x1
   1e114:	mov	x0, x22
   1e118:	strb	w2, [x22, x19]
   1e11c:	bl	2bed0 <acc_set_cuda_stream@@OACC_2.0+0xec8>
   1e120:	ldp	x29, x30, [sp]
   1e124:	ldp	x19, x20, [sp, #16]
   1e128:	ldp	x21, x22, [sp, #32]
   1e12c:	ldp	x23, x24, [sp, #48]
   1e130:	ldp	x25, x26, [sp, #64]
   1e134:	ldp	x27, x28, [sp, #80]
   1e138:	add	sp, sp, #0x360
   1e13c:	ret
   1e140:	add	x28, x0, #0x1
   1e144:	mov	x0, x28
   1e148:	bl	b2f8 <fprintf@plt+0x2838>
   1e14c:	mov	x2, x23
   1e150:	mov	x26, x0
   1e154:	b	1e0d0 <omp_display_affinity_@@OMP_5.0+0x130>
   1e158:	add	x0, x19, #0x1
   1e15c:	bl	b2f8 <fprintf@plt+0x2838>
   1e160:	cmp	x0, #0x0
   1e164:	mov	x23, x0
   1e168:	cset	w25, ne  // ne = any
   1e16c:	b	1dfe4 <omp_display_affinity_@@OMP_5.0+0x44>

000000000001e170 <omp_capture_affinity_@@OMP_5.0>:
   1e170:	stp	x29, x30, [sp, #-320]!
   1e174:	mov	x29, sp
   1e178:	stp	x19, x20, [sp, #16]
   1e17c:	mov	x20, x2
   1e180:	mov	x19, x3
   1e184:	stp	x21, x22, [sp, #32]
   1e188:	mov	x21, x0
   1e18c:	str	x23, [sp, #48]
   1e190:	mov	x23, x1
   1e194:	bl	8a40 <pthread_self@plt>
   1e198:	mov	x22, x0
   1e19c:	cbz	x19, 1e224 <omp_capture_affinity_@@OMP_5.0+0xb4>
   1e1a0:	cmp	x19, #0xff
   1e1a4:	b.hi	1e278 <omp_capture_affinity_@@OMP_5.0+0x108>  // b.pmore
   1e1a8:	add	x6, sp, #0x40
   1e1ac:	mov	x2, x19
   1e1b0:	mov	x1, x23
   1e1b4:	mov	x0, x6
   1e1b8:	bl	8580 <memcpy@plt>
   1e1bc:	mov	x6, x0
   1e1c0:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1e1c4:	ldr	x0, [x0, #4016]
   1e1c8:	mrs	x5, tpidr_el0
   1e1cc:	mov	x2, x6
   1e1d0:	mov	x3, x22
   1e1d4:	add	x5, x5, x0
   1e1d8:	strb	wzr, [x6, x19]
   1e1dc:	add	x4, x5, #0x10
   1e1e0:	mov	x1, x20
   1e1e4:	mov	x0, x21
   1e1e8:	ldr	w5, [x5, #92]
   1e1ec:	bl	2c178 <omp_get_affinity_format@@OMP_5.0+0x110>
   1e1f0:	mov	x19, x0
   1e1f4:	cmp	x20, x19
   1e1f8:	b.ls	1e260 <omp_capture_affinity_@@OMP_5.0+0xf0>  // b.plast
   1e1fc:	sub	x2, x20, x19
   1e200:	add	x0, x21, x19
   1e204:	mov	w1, #0x20                  	// #32
   1e208:	bl	8770 <memset@plt>
   1e20c:	mov	w0, w19
   1e210:	ldp	x19, x20, [sp, #16]
   1e214:	ldp	x21, x22, [sp, #32]
   1e218:	ldr	x23, [sp, #48]
   1e21c:	ldp	x29, x30, [sp], #320
   1e220:	ret
   1e224:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1e228:	ldr	x0, [x0, #4016]
   1e22c:	mrs	x1, tpidr_el0
   1e230:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1e234:	mov	x3, x22
   1e238:	add	x0, x1, x0
   1e23c:	mov	x1, x20
   1e240:	ldr	x2, [x2, #816]
   1e244:	add	x4, x0, #0x10
   1e248:	ldr	w5, [x0, #92]
   1e24c:	mov	x0, x21
   1e250:	bl	2c178 <omp_get_affinity_format@@OMP_5.0+0x110>
   1e254:	mov	x19, x0
   1e258:	cmp	x20, x19
   1e25c:	b.hi	1e1fc <omp_capture_affinity_@@OMP_5.0+0x8c>  // b.pmore
   1e260:	mov	w0, w19
   1e264:	ldp	x19, x20, [sp, #16]
   1e268:	ldp	x21, x22, [sp, #32]
   1e26c:	ldr	x23, [sp, #48]
   1e270:	ldp	x29, x30, [sp], #320
   1e274:	ret
   1e278:	add	x0, x19, #0x1
   1e27c:	bl	b2f8 <fprintf@plt+0x2838>
   1e280:	mov	x1, x23
   1e284:	mov	x2, x19
   1e288:	mov	x23, x0
   1e28c:	bl	8580 <memcpy@plt>
   1e290:	adrp	x5, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1e294:	ldr	x5, [x5, #4016]
   1e298:	mrs	x0, tpidr_el0
   1e29c:	mov	x3, x22
   1e2a0:	mov	x2, x23
   1e2a4:	add	x5, x0, x5
   1e2a8:	strb	wzr, [x23, x19]
   1e2ac:	add	x4, x5, #0x10
   1e2b0:	mov	x1, x20
   1e2b4:	mov	x0, x21
   1e2b8:	ldr	w5, [x5, #92]
   1e2bc:	bl	2c178 <omp_get_affinity_format@@OMP_5.0+0x110>
   1e2c0:	mov	x19, x0
   1e2c4:	cbz	x23, 1e258 <omp_capture_affinity_@@OMP_5.0+0xe8>
   1e2c8:	mov	x0, x23
   1e2cc:	bl	88b0 <free@plt>
   1e2d0:	b	1e258 <omp_capture_affinity_@@OMP_5.0+0xe8>
   1e2d4:	nop

000000000001e2d8 <omp_pause_resource_@@OMP_5.0>:
   1e2d8:	ldr	w0, [x0]
   1e2dc:	ldr	w1, [x1]
   1e2e0:	b	25280 <omp_pause_resource@@OMP_5.0>
   1e2e4:	nop

000000000001e2e8 <omp_pause_resource_all_@@OMP_5.0>:
   1e2e8:	ldr	w0, [x0]
   1e2ec:	b	252d8 <omp_pause_resource_all@@OMP_5.0>
   1e2f0:	stp	x29, x30, [sp, #-256]!
   1e2f4:	mov	w6, w0
   1e2f8:	mov	x29, sp
   1e2fc:	stp	x21, x22, [sp, #32]
   1e300:	adrp	x22, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1e304:	stp	x19, x20, [sp, #16]
   1e308:	ldr	x19, [x22, #1720]
   1e30c:	str	w0, [sp, #132]
   1e310:	and	w0, w5, #0xff
   1e314:	str	w0, [sp, #176]
   1e318:	str	w1, [sp, #180]
   1e31c:	stp	xzr, xzr, [sp, #232]
   1e320:	cmp	xzr, x19, lsl #3
   1e324:	b.eq	1e6dc <omp_pause_resource_all_@@OMP_5.0+0x3f4>  // b.none
   1e328:	cmp	w1, #0x3
   1e32c:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1e330:	add	x0, x0, #0x848
   1e334:	stp	x25, x26, [sp, #64]
   1e338:	mov	x26, x3
   1e33c:	mov	w3, w1
   1e340:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1e344:	add	x1, x1, #0x840
   1e348:	lsl	x19, x19, #3
   1e34c:	csel	x0, x1, x0, eq  // eq = none
   1e350:	cset	w1, eq  // eq = none
   1e354:	cmp	w3, w6
   1e358:	stp	x27, x28, [sp, #80]
   1e35c:	mov	x27, #0x0                   	// #0
   1e360:	mov	x20, x2
   1e364:	mov	x25, x27
   1e368:	adrp	x2, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1e36c:	mov	x27, x4
   1e370:	add	x2, x2, #0x850
   1e374:	stp	x23, x24, [sp, #48]
   1e378:	mov	x24, x26
   1e37c:	mov	x26, x19
   1e380:	stp	x0, x2, [sp, #152]
   1e384:	cset	w0, gt
   1e388:	and	w0, w1, w0
   1e38c:	adrp	x28, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1e390:	mov	x21, #0x1                   	// #1
   1e394:	str	w0, [sp, #144]
   1e398:	ldr	x0, [x28, #1624]
   1e39c:	cmp	x0, x20
   1e3a0:	b.cs	1e42c <omp_pause_resource_all_@@OMP_5.0+0x144>  // b.hs, b.nlast
   1e3a4:	ldr	x0, [x22, #1720]
   1e3a8:	lsr	x19, x25, #3
   1e3ac:	cmp	x0, x25, lsr #3
   1e3b0:	b.ls	1e420 <omp_pause_resource_all_@@OMP_5.0+0x138>  // b.plast
   1e3b4:	lsr	x23, x25, #6
   1e3b8:	and	w0, w25, #0x3f
   1e3bc:	mov	w1, w0
   1e3c0:	str	w1, [sp, #148]
   1e3c4:	ldr	x0, [x24, x23, lsl #3]
   1e3c8:	lsr	x0, x0, x1
   1e3cc:	tbz	w0, #0, 1e420 <omp_pause_resource_all_@@OMP_5.0+0x138>
   1e3d0:	ldp	x3, x1, [sp, #152]
   1e3d4:	mov	x2, x25
   1e3d8:	add	x0, x27, #0x1b
   1e3dc:	bl	8620 <sprintf@plt>
   1e3e0:	mov	x0, x27
   1e3e4:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1e3e8:	add	x1, x1, #0x870
   1e3ec:	bl	8700 <fopen@plt>
   1e3f0:	str	x0, [sp, #136]
   1e3f4:	cbz	x0, 1e450 <omp_pause_resource_all_@@OMP_5.0+0x168>
   1e3f8:	mov	x3, x0
   1e3fc:	add	x1, sp, #0xf0
   1e400:	add	x0, sp, #0xe8
   1e404:	mov	w2, #0xa                   	// #10
   1e408:	bl	8aa0 <__getdelim@plt>
   1e40c:	cmp	x0, #0x0
   1e410:	b.gt	1e474 <omp_pause_resource_all_@@OMP_5.0+0x18c>
   1e414:	ldr	x0, [sp, #136]
   1e418:	bl	86e0 <fclose@plt>
   1e41c:	nop
   1e420:	add	x25, x25, #0x1
   1e424:	cmp	x26, x25
   1e428:	b.ne	1e398 <omp_pause_resource_all_@@OMP_5.0+0xb0>  // b.any
   1e42c:	ldr	x0, [sp, #232]
   1e430:	ldp	x23, x24, [sp, #48]
   1e434:	ldp	x25, x26, [sp, #64]
   1e438:	ldp	x27, x28, [sp, #80]
   1e43c:	bl	88b0 <free@plt>
   1e440:	ldp	x19, x20, [sp, #16]
   1e444:	ldp	x21, x22, [sp, #32]
   1e448:	ldp	x29, x30, [sp], #256
   1e44c:	ret
   1e450:	ldr	x0, [x22, #1720]
   1e454:	cmp	x19, x0
   1e458:	b.cs	1e420 <omp_pause_resource_all_@@OMP_5.0+0x138>  // b.hs, b.nlast
   1e45c:	ldrb	w0, [sp, #148]
   1e460:	ldr	x1, [x24, x23, lsl #3]
   1e464:	lsl	x0, x21, x0
   1e468:	bic	x0, x1, x0
   1e46c:	str	x0, [x24, x23, lsl #3]
   1e470:	b	1e420 <omp_pause_resource_all_@@OMP_5.0+0x138>
   1e474:	ldr	w1, [sp, #132]
   1e478:	ldr	w0, [sp, #180]
   1e47c:	ldr	x2, [x28, #1624]
   1e480:	cmp	w0, w1
   1e484:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1e488:	ldr	x1, [sp, #232]
   1e48c:	str	x1, [sp, #248]
   1e490:	ldr	x0, [x0, #1584]
   1e494:	ldr	x8, [x0, x2, lsl #3]
   1e498:	b.eq	1e6f4 <omp_pause_resource_all_@@OMP_5.0+0x40c>  // b.none
   1e49c:	ldrb	w0, [x1]
   1e4a0:	cmp	w0, #0x0
   1e4a4:	ccmp	w0, #0xa, #0x4, ne  // ne = any
   1e4a8:	b.eq	1e748 <omp_pause_resource_all_@@OMP_5.0+0x460>  // b.none
   1e4ac:	stp	x1, x8, [sp, #104]
   1e4b0:	bl	8a70 <__errno_location@plt>
   1e4b4:	add	x1, sp, #0xf8
   1e4b8:	str	x1, [sp, #168]
   1e4bc:	ldr	x1, [sp, #104]
   1e4c0:	stp	x19, x26, [sp, #192]
   1e4c4:	mov	x19, x0
   1e4c8:	ldr	x8, [sp, #112]
   1e4cc:	mov	x0, x1
   1e4d0:	stp	x25, x23, [sp, #208]
   1e4d4:	mov	x23, x8
   1e4d8:	ldr	x1, [sp, #168]
   1e4dc:	str	wzr, [x19]
   1e4e0:	mov	w2, #0xa                   	// #10
   1e4e4:	bl	85a0 <strtoul@plt>
   1e4e8:	mov	x26, x0
   1e4ec:	ldr	w1, [x19]
   1e4f0:	cbnz	w1, 1e5b0 <omp_pause_resource_all_@@OMP_5.0+0x2c8>
   1e4f4:	mov	x25, x0
   1e4f8:	ldr	x0, [sp, #248]
   1e4fc:	ldrb	w1, [x0]
   1e500:	cmp	w1, #0x2d
   1e504:	b.eq	1e6b4 <omp_pause_resource_all_@@OMP_5.0+0x3cc>  // b.none
   1e508:	mov	x4, x27
   1e50c:	mov	x27, x19
   1e510:	mov	x19, x25
   1e514:	ldr	x2, [x22, #1720]
   1e518:	lsr	x6, x26, #3
   1e51c:	cmp	x2, x26, lsr #3
   1e520:	b.ls	1e580 <omp_pause_resource_all_@@OMP_5.0+0x298>  // b.plast
   1e524:	lsr	x5, x26, #6
   1e528:	and	w25, w26, #0x3f
   1e52c:	lsl	x3, x5, #3
   1e530:	ldr	x0, [x24, x5, lsl #3]
   1e534:	lsr	x0, x0, x25
   1e538:	tbz	w0, #0, 1e580 <omp_pause_resource_all_@@OMP_5.0+0x298>
   1e53c:	ldr	w0, [sp, #144]
   1e540:	cbnz	w0, 1e5ec <omp_pause_resource_all_@@OMP_5.0+0x304>
   1e544:	ldr	w0, [sp, #132]
   1e548:	cmp	w0, #0x1
   1e54c:	b.eq	1e630 <omp_pause_resource_all_@@OMP_5.0+0x348>  // b.none
   1e550:	cmp	x26, x2, lsl #3
   1e554:	b.cs	1e580 <omp_pause_resource_all_@@OMP_5.0+0x298>  // b.hs, b.nlast
   1e558:	ldr	x1, [x23, x5, lsl #3]
   1e55c:	lsl	x0, x21, x25
   1e560:	orr	x1, x1, x0
   1e564:	str	x1, [x23, x5, lsl #3]
   1e568:	ldr	x1, [x22, #1720]
   1e56c:	cmp	x6, x1
   1e570:	b.cs	1e580 <omp_pause_resource_all_@@OMP_5.0+0x298>  // b.hs, b.nlast
   1e574:	ldr	x25, [x24, x5, lsl #3]
   1e578:	bic	x0, x25, x0
   1e57c:	str	x0, [x24, x5, lsl #3]
   1e580:	add	x26, x26, #0x1
   1e584:	cmp	x26, x19
   1e588:	b.ls	1e514 <omp_pause_resource_all_@@OMP_5.0+0x22c>  // b.plast
   1e58c:	ldr	x0, [sp, #248]
   1e590:	mov	x19, x27
   1e594:	mov	x27, x4
   1e598:	ldrb	w1, [x0]
   1e59c:	cmp	w1, #0x2c
   1e5a0:	b.eq	1e610 <omp_pause_resource_all_@@OMP_5.0+0x328>  // b.none
   1e5a4:	cmp	w1, #0x0
   1e5a8:	ccmp	w1, #0xa, #0x4, ne  // ne = any
   1e5ac:	b.ne	1e4d8 <omp_pause_resource_all_@@OMP_5.0+0x1f0>  // b.any
   1e5b0:	ldr	w0, [sp, #180]
   1e5b4:	ldr	w1, [sp, #132]
   1e5b8:	ldp	x19, x26, [sp, #192]
   1e5bc:	cmp	w0, w1
   1e5c0:	ldr	x0, [x22, #1720]
   1e5c4:	ldp	x25, x23, [sp, #208]
   1e5c8:	b.eq	1e720 <omp_pause_resource_all_@@OMP_5.0+0x438>  // b.none
   1e5cc:	cmp	x19, x0
   1e5d0:	b.cs	1e414 <omp_pause_resource_all_@@OMP_5.0+0x12c>  // b.hs, b.nlast
   1e5d4:	ldr	x1, [x24, x23, lsl #3]
   1e5d8:	ldrb	w0, [sp, #148]
   1e5dc:	lsl	x0, x21, x0
   1e5e0:	bic	x0, x1, x0
   1e5e4:	str	x0, [x24, x23, lsl #3]
   1e5e8:	b	1e414 <omp_pause_resource_all_@@OMP_5.0+0x12c>
   1e5ec:	ldrb	w5, [sp, #176]
   1e5f0:	mov	x3, x24
   1e5f4:	ldr	w0, [sp, #132]
   1e5f8:	mov	x2, x20
   1e5fc:	mov	w1, #0x2                   	// #2
   1e600:	str	x4, [sp, #104]
   1e604:	bl	1e2f0 <omp_pause_resource_all_@@OMP_5.0+0x8>
   1e608:	ldr	x4, [sp, #104]
   1e60c:	b	1e580 <omp_pause_resource_all_@@OMP_5.0+0x298>
   1e610:	add	x1, x0, #0x1
   1e614:	str	x1, [sp, #248]
   1e618:	ldrb	w0, [x0, #1]
   1e61c:	cmp	w0, #0x0
   1e620:	ccmp	w0, #0xa, #0x4, ne  // ne = any
   1e624:	b.eq	1e5b0 <omp_pause_resource_all_@@OMP_5.0+0x2c8>  // b.none
   1e628:	mov	x0, x1
   1e62c:	b	1e4d8 <omp_pause_resource_all_@@OMP_5.0+0x1f0>
   1e630:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1e634:	mov	w1, #0x0                   	// #0
   1e638:	ldr	x7, [x28, #1624]
   1e63c:	stp	x6, x3, [sp, #104]
   1e640:	ldr	x0, [x0, #1584]
   1e644:	str	x5, [sp, #120]
   1e648:	str	x4, [sp, #184]
   1e64c:	ldr	x23, [x0, x7, lsl #3]
   1e650:	mov	x0, x23
   1e654:	bl	8770 <memset@plt>
   1e658:	ldr	x0, [x22, #1720]
   1e65c:	ldr	x4, [sp, #184]
   1e660:	cmp	x26, x0, lsl #3
   1e664:	b.cs	1e580 <omp_pause_resource_all_@@OMP_5.0+0x298>  // b.hs, b.nlast
   1e668:	ldp	x6, x3, [sp, #104]
   1e66c:	ldr	x5, [sp, #120]
   1e670:	cmp	x6, x0
   1e674:	b.cc	1e688 <omp_pause_resource_all_@@OMP_5.0+0x3a0>  // b.lo, b.ul, b.last
   1e678:	ldr	x0, [x28, #1624]
   1e67c:	add	x0, x0, #0x1
   1e680:	str	x0, [x28, #1624]
   1e684:	b	1e580 <omp_pause_resource_all_@@OMP_5.0+0x298>
   1e688:	ldr	x1, [x23, x5, lsl #3]
   1e68c:	lsl	x0, x21, x25
   1e690:	orr	x1, x1, x0
   1e694:	str	x1, [x23, x5, lsl #3]
   1e698:	ldr	x1, [x22, #1720]
   1e69c:	cmp	x6, x1
   1e6a0:	b.cs	1e678 <omp_pause_resource_all_@@OMP_5.0+0x390>  // b.hs, b.nlast
   1e6a4:	ldr	x1, [x24, x3]
   1e6a8:	bic	x0, x1, x0
   1e6ac:	str	x0, [x24, x3]
   1e6b0:	b	1e678 <omp_pause_resource_all_@@OMP_5.0+0x390>
   1e6b4:	ldr	x1, [sp, #168]
   1e6b8:	add	x0, x0, #0x1
   1e6bc:	mov	w2, #0xa                   	// #10
   1e6c0:	bl	85a0 <strtoul@plt>
   1e6c4:	mov	x25, x0
   1e6c8:	ldr	w1, [x19]
   1e6cc:	cmp	w1, #0x0
   1e6d0:	ccmp	x26, x0, #0x2, eq  // eq = none
   1e6d4:	b.ls	1e508 <omp_pause_resource_all_@@OMP_5.0+0x220>  // b.plast
   1e6d8:	b	1e5b0 <omp_pause_resource_all_@@OMP_5.0+0x2c8>
   1e6dc:	mov	x0, #0x0                   	// #0
   1e6e0:	bl	88b0 <free@plt>
   1e6e4:	ldp	x19, x20, [sp, #16]
   1e6e8:	ldp	x21, x22, [sp, #32]
   1e6ec:	ldp	x29, x30, [sp], #256
   1e6f0:	ret
   1e6f4:	ldr	x2, [x22, #1720]
   1e6f8:	mov	x0, x8
   1e6fc:	mov	w1, #0x0                   	// #0
   1e700:	bl	8770 <memset@plt>
   1e704:	mov	x8, x0
   1e708:	ldr	x1, [sp, #248]
   1e70c:	ldrb	w0, [x1]
   1e710:	cmp	w0, #0x0
   1e714:	ccmp	w0, #0xa, #0x4, ne  // ne = any
   1e718:	b.ne	1e4ac <omp_pause_resource_all_@@OMP_5.0+0x1c4>  // b.any
   1e71c:	ldr	x0, [x22, #1720]
   1e720:	cmp	x19, x0
   1e724:	b.cs	1e738 <omp_pause_resource_all_@@OMP_5.0+0x450>  // b.hs, b.nlast
   1e728:	ldr	x1, [x24, x23, lsl #3]
   1e72c:	ldrb	w2, [sp, #148]
   1e730:	lsr	x2, x1, x2
   1e734:	tbnz	w2, #0, 1e5d8 <omp_pause_resource_all_@@OMP_5.0+0x2f0>
   1e738:	ldr	x1, [x28, #1624]
   1e73c:	add	x1, x1, #0x1
   1e740:	str	x1, [x28, #1624]
   1e744:	b	1e5cc <omp_pause_resource_all_@@OMP_5.0+0x2e4>
   1e748:	ldr	x0, [x22, #1720]
   1e74c:	b	1e5cc <omp_pause_resource_all_@@OMP_5.0+0x2e4>
   1e750:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1e754:	mov	w3, w1
   1e758:	adrp	x1, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1e75c:	ldr	x2, [x2, #1584]
   1e760:	ldr	x1, [x1, #1720]
   1e764:	ldr	x2, [x2, w3, uxtw #3]
   1e768:	b	8a10 <pthread_attr_setaffinity_np@plt>
   1e76c:	nop
   1e770:	stp	x29, x30, [sp, #-48]!
   1e774:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1e778:	mov	x29, sp
   1e77c:	stp	x19, x20, [sp, #16]
   1e780:	ldr	x20, [x2, #1728]
   1e784:	stp	x21, x22, [sp, #32]
   1e788:	and	w22, w1, #0xff
   1e78c:	cbz	x20, 1e7e4 <omp_pause_resource_all_@@OMP_5.0+0x4fc>
   1e790:	mov	x21, x0
   1e794:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1e798:	ldr	x19, [x0, #1720]
   1e79c:	add	x0, x19, #0x8
   1e7a0:	mul	x0, x0, x21
   1e7a4:	bl	8710 <malloc@plt>
   1e7a8:	mov	x20, x0
   1e7ac:	cbz	x0, 1e810 <omp_pause_resource_all_@@OMP_5.0+0x528>
   1e7b0:	add	x1, x0, x21, lsl #3
   1e7b4:	cbz	x21, 1e7d0 <omp_pause_resource_all_@@OMP_5.0+0x4e8>
   1e7b8:	mov	x2, x0
   1e7bc:	mov	x0, x1
   1e7c0:	str	x1, [x2], #8
   1e7c4:	add	x1, x1, x19
   1e7c8:	cmp	x2, x0
   1e7cc:	b.ne	1e7c0 <omp_pause_resource_all_@@OMP_5.0+0x4d8>  // b.any
   1e7d0:	mov	x0, x20
   1e7d4:	ldp	x19, x20, [sp, #16]
   1e7d8:	ldp	x21, x22, [sp, #32]
   1e7dc:	ldp	x29, x30, [sp], #48
   1e7e0:	ret
   1e7e4:	cbz	w22, 1e800 <omp_pause_resource_all_@@OMP_5.0+0x518>
   1e7e8:	mov	x20, #0x0                   	// #0
   1e7ec:	mov	x0, x20
   1e7f0:	ldp	x19, x20, [sp, #16]
   1e7f4:	ldp	x21, x22, [sp, #32]
   1e7f8:	ldp	x29, x30, [sp], #48
   1e7fc:	ret
   1e800:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1e804:	add	x0, x0, #0x878
   1e808:	bl	b670 <GOMP_critical_name_end@@GOMP_1.0+0x170>
   1e80c:	b	1e7d0 <omp_pause_resource_all_@@OMP_5.0+0x4e8>
   1e810:	cbnz	w22, 1e7e8 <omp_pause_resource_all_@@OMP_5.0+0x500>
   1e814:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1e818:	add	x0, x0, #0x898
   1e81c:	bl	b670 <GOMP_critical_name_end@@GOMP_1.0+0x170>
   1e820:	b	1e7d0 <omp_pause_resource_all_@@OMP_5.0+0x4e8>
   1e824:	nop
   1e828:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1e82c:	mov	w1, #0x0                   	// #0
   1e830:	ldr	x2, [x2, #1720]
   1e834:	b	8770 <memset@plt>
   1e838:	stp	x29, x30, [sp, #-32]!
   1e83c:	adrp	x10, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1e840:	mov	x29, sp
   1e844:	ldr	x5, [x10, #1720]
   1e848:	str	x19, [sp, #16]
   1e84c:	and	w19, w4, #0xff
   1e850:	cmp	x1, x5, lsl #3
   1e854:	b.cs	1e8c0 <omp_pause_resource_all_@@OMP_5.0+0x5d8>  // b.hs, b.nlast
   1e858:	lsl	x9, x5, #3
   1e85c:	cmp	x3, #0x0
   1e860:	mov	x8, #0x1                   	// #1
   1e864:	b.gt	1e888 <omp_pause_resource_all_@@OMP_5.0+0x5a0>
   1e868:	b	1e924 <omp_pause_resource_all_@@OMP_5.0+0x63c>
   1e86c:	adds	x5, x1, x3
   1e870:	mov	x6, x5
   1e874:	b.cs	1e8e0 <omp_pause_resource_all_@@OMP_5.0+0x5f8>  // b.hs, b.nlast
   1e878:	cmp	x9, x5
   1e87c:	mov	x1, x5
   1e880:	b.ls	1e8c8 <omp_pause_resource_all_@@OMP_5.0+0x5e0>  // b.plast
   1e884:	ldr	x5, [x10, #1720]
   1e888:	lsr	x6, x1, #6
   1e88c:	cmp	x5, x1, lsr #3
   1e890:	lsl	x7, x8, x1
   1e894:	b.ls	1e8a4 <omp_pause_resource_all_@@OMP_5.0+0x5bc>  // b.plast
   1e898:	ldr	x5, [x0, x6, lsl #3]
   1e89c:	orr	x5, x5, x7
   1e8a0:	str	x5, [x0, x6, lsl #3]
   1e8a4:	subs	x2, x2, #0x1
   1e8a8:	b.ne	1e86c <omp_pause_resource_all_@@OMP_5.0+0x584>  // b.any
   1e8ac:	mov	w19, #0x1                   	// #1
   1e8b0:	mov	w0, w19
   1e8b4:	ldr	x19, [sp, #16]
   1e8b8:	ldp	x29, x30, [sp], #32
   1e8bc:	ret
   1e8c0:	mov	x6, x1
   1e8c4:	nop
   1e8c8:	cbz	w19, 1e904 <omp_pause_resource_all_@@OMP_5.0+0x61c>
   1e8cc:	mov	w19, #0x0                   	// #0
   1e8d0:	mov	w0, w19
   1e8d4:	ldr	x19, [sp, #16]
   1e8d8:	ldp	x29, x30, [sp], #32
   1e8dc:	ret
   1e8e0:	cbnz	w19, 1e8cc <omp_pause_resource_all_@@OMP_5.0+0x5e4>
   1e8e4:	mov	x2, x3
   1e8e8:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1e8ec:	add	x0, x0, #0x8f0
   1e8f0:	bl	b670 <GOMP_critical_name_end@@GOMP_1.0+0x170>
   1e8f4:	mov	w0, w19
   1e8f8:	ldr	x19, [sp, #16]
   1e8fc:	ldp	x29, x30, [sp], #32
   1e900:	ret
   1e904:	mov	x1, x6
   1e908:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1e90c:	add	x0, x0, #0x8c8
   1e910:	bl	b670 <GOMP_critical_name_end@@GOMP_1.0+0x170>
   1e914:	mov	w0, w19
   1e918:	ldr	x19, [sp, #16]
   1e91c:	ldp	x29, x30, [sp], #32
   1e920:	ret
   1e924:	b.ne	1e984 <omp_pause_resource_all_@@OMP_5.0+0x69c>  // b.any
   1e928:	lsr	x4, x1, #6
   1e92c:	mov	x7, #0x1                   	// #1
   1e930:	lsr	x6, x1, #3
   1e934:	lsl	x7, x7, x1
   1e938:	lsl	x4, x4, #3
   1e93c:	b	1e94c <omp_pause_resource_all_@@OMP_5.0+0x664>
   1e940:	cmp	x9, x1
   1e944:	b.ls	1e8c0 <omp_pause_resource_all_@@OMP_5.0+0x5d8>  // b.plast
   1e948:	ldr	x5, [x10, #1720]
   1e94c:	cmp	x5, x6
   1e950:	b.ls	1e960 <omp_pause_resource_all_@@OMP_5.0+0x678>  // b.plast
   1e954:	ldr	x3, [x0, x4]
   1e958:	orr	x3, x3, x7
   1e95c:	str	x3, [x0, x4]
   1e960:	subs	x2, x2, #0x1
   1e964:	b.ne	1e940 <omp_pause_resource_all_@@OMP_5.0+0x658>  // b.any
   1e968:	b	1e8ac <omp_pause_resource_all_@@OMP_5.0+0x5c4>
   1e96c:	cmp	x1, x6
   1e970:	b.cc	1e8e0 <omp_pause_resource_all_@@OMP_5.0+0x5f8>  // b.lo, b.ul, b.last
   1e974:	cmp	x9, x6
   1e978:	mov	x1, x6
   1e97c:	b.ls	1e8c8 <omp_pause_resource_all_@@OMP_5.0+0x5e0>  // b.plast
   1e980:	ldr	x5, [x10, #1720]
   1e984:	lsr	x4, x1, #6
   1e988:	add	x6, x3, x1
   1e98c:	cmp	x5, x1, lsr #3
   1e990:	lsl	x7, x8, x1
   1e994:	b.ls	1e9a4 <omp_pause_resource_all_@@OMP_5.0+0x6bc>  // b.plast
   1e998:	ldr	x5, [x0, x4, lsl #3]
   1e99c:	orr	x5, x5, x7
   1e9a0:	str	x5, [x0, x4, lsl #3]
   1e9a4:	subs	x2, x2, #0x1
   1e9a8:	b.ne	1e96c <omp_pause_resource_all_@@OMP_5.0+0x684>  // b.any
   1e9ac:	b	1e8ac <omp_pause_resource_all_@@OMP_5.0+0x5c4>
   1e9b0:	stp	x29, x30, [sp, #-16]!
   1e9b4:	adrp	x3, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1e9b8:	mov	x29, sp
   1e9bc:	ldr	x4, [x3, #1720]
   1e9c0:	cmp	x1, x4, lsl #3
   1e9c4:	b.cs	1ea24 <omp_pause_resource_all_@@OMP_5.0+0x73c>  // b.hs, b.nlast
   1e9c8:	mov	x2, x1
   1e9cc:	cmp	x4, x1, lsr #3
   1e9d0:	b.ls	1ea08 <omp_pause_resource_all_@@OMP_5.0+0x720>  // b.plast
   1e9d4:	lsr	x4, x1, #6
   1e9d8:	and	w6, w1, #0x3f
   1e9dc:	mov	x3, x0
   1e9e0:	ldr	x5, [x0, x4, lsl #3]
   1e9e4:	lsr	x0, x5, x6
   1e9e8:	tbz	w0, #0, 1ea08 <omp_pause_resource_all_@@OMP_5.0+0x720>
   1e9ec:	mov	x1, #0x1                   	// #1
   1e9f0:	mov	w0, w1
   1e9f4:	lsl	x1, x1, x6
   1e9f8:	bic	x1, x5, x1
   1e9fc:	str	x1, [x3, x4, lsl #3]
   1ea00:	ldp	x29, x30, [sp], #16
   1ea04:	ret
   1ea08:	mov	x1, x2
   1ea0c:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1ea10:	add	x0, x0, #0x918
   1ea14:	bl	b670 <GOMP_critical_name_end@@GOMP_1.0+0x170>
   1ea18:	mov	w0, #0x0                   	// #0
   1ea1c:	ldp	x29, x30, [sp], #16
   1ea20:	ret
   1ea24:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1ea28:	add	x0, x0, #0x8c8
   1ea2c:	bl	b670 <GOMP_critical_name_end@@GOMP_1.0+0x170>
   1ea30:	mov	w0, #0x0                   	// #0
   1ea34:	ldp	x29, x30, [sp], #16
   1ea38:	ret
   1ea3c:	nop
   1ea40:	stp	x29, x30, [sp, #-64]!
   1ea44:	mov	x29, sp
   1ea48:	stp	x21, x22, [sp, #32]
   1ea4c:	adrp	x21, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1ea50:	mov	x22, x1
   1ea54:	stp	x19, x20, [sp, #16]
   1ea58:	mov	w1, #0x0                   	// #0
   1ea5c:	mov	x20, x2
   1ea60:	ldr	x19, [x21, #1720]
   1ea64:	str	x23, [sp, #48]
   1ea68:	mov	x23, x0
   1ea6c:	mov	x2, x19
   1ea70:	lsl	x19, x19, #3
   1ea74:	bl	8770 <memset@plt>
   1ea78:	cbz	x19, 1eae4 <omp_pause_resource_all_@@OMP_5.0+0x7fc>
   1ea7c:	cmp	x20, #0x0
   1ea80:	mov	x1, #0x0                   	// #0
   1ea84:	mov	x6, #0x1                   	// #1
   1ea88:	b.le	1eb24 <omp_pause_resource_all_@@OMP_5.0+0x83c>
   1ea8c:	nop
   1ea90:	ldr	x3, [x21, #1720]
   1ea94:	lsr	x5, x1, #6
   1ea98:	cmp	x3, x1, lsr #3
   1ea9c:	b.ls	1ead8 <omp_pause_resource_all_@@OMP_5.0+0x7f0>  // b.plast
   1eaa0:	ldr	x5, [x22, x5, lsl #3]
   1eaa4:	lsr	x5, x5, x1
   1eaa8:	tbz	w5, #0, 1ead8 <omp_pause_resource_all_@@OMP_5.0+0x7f0>
   1eaac:	adds	x2, x1, x20
   1eab0:	add	w4, w1, w20
   1eab4:	ccmp	x19, x2, #0x0, cc  // cc = lo, ul, last
   1eab8:	b.ls	1eafc <omp_pause_resource_all_@@OMP_5.0+0x814>  // b.plast
   1eabc:	lsr	x5, x2, #6
   1eac0:	cmp	x3, x2, lsr #3
   1eac4:	lsl	x4, x6, x4
   1eac8:	b.ls	1ead8 <omp_pause_resource_all_@@OMP_5.0+0x7f0>  // b.plast
   1eacc:	ldr	x2, [x23, x5, lsl #3]
   1ead0:	orr	x4, x2, x4
   1ead4:	str	x4, [x23, x5, lsl #3]
   1ead8:	add	x1, x1, #0x1
   1eadc:	cmp	x19, x1
   1eae0:	b.ne	1ea90 <omp_pause_resource_all_@@OMP_5.0+0x7a8>  // b.any
   1eae4:	mov	w0, #0x1                   	// #1
   1eae8:	ldp	x19, x20, [sp, #16]
   1eaec:	ldp	x21, x22, [sp, #32]
   1eaf0:	ldr	x23, [sp, #48]
   1eaf4:	ldp	x29, x30, [sp], #64
   1eaf8:	ret
   1eafc:	mov	x2, x20
   1eb00:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1eb04:	add	x0, x0, #0x8f0
   1eb08:	bl	b670 <GOMP_critical_name_end@@GOMP_1.0+0x170>
   1eb0c:	mov	w0, #0x0                   	// #0
   1eb10:	ldp	x19, x20, [sp, #16]
   1eb14:	ldp	x21, x22, [sp, #32]
   1eb18:	ldr	x23, [sp, #48]
   1eb1c:	ldp	x29, x30, [sp], #64
   1eb20:	ret
   1eb24:	b.ne	1eb70 <omp_pause_resource_all_@@OMP_5.0+0x888>  // b.any
   1eb28:	mov	x4, x6
   1eb2c:	mov	x0, #0x0                   	// #0
   1eb30:	ldr	x1, [x21, #1720]
   1eb34:	lsr	x3, x0, #6
   1eb38:	and	w2, w0, #0x3f
   1eb3c:	cmp	x1, x0, lsr #3
   1eb40:	add	x0, x0, #0x1
   1eb44:	b.ls	1eb64 <omp_pause_resource_all_@@OMP_5.0+0x87c>  // b.plast
   1eb48:	ldr	x1, [x22, x3, lsl #3]
   1eb4c:	lsl	x5, x4, x2
   1eb50:	lsr	x1, x1, x2
   1eb54:	tbz	w1, #0, 1eb64 <omp_pause_resource_all_@@OMP_5.0+0x87c>
   1eb58:	ldr	x1, [x23, x3, lsl #3]
   1eb5c:	orr	x1, x1, x5
   1eb60:	str	x1, [x23, x3, lsl #3]
   1eb64:	cmp	x19, x0
   1eb68:	b.ne	1eb30 <omp_pause_resource_all_@@OMP_5.0+0x848>  // b.any
   1eb6c:	b	1eae4 <omp_pause_resource_all_@@OMP_5.0+0x7fc>
   1eb70:	mov	x5, #0x1                   	// #1
   1eb74:	ldr	x2, [x21, #1720]
   1eb78:	lsr	x3, x1, #6
   1eb7c:	cmp	x2, x1, lsr #3
   1eb80:	b.ls	1ebbc <omp_pause_resource_all_@@OMP_5.0+0x8d4>  // b.plast
   1eb84:	ldr	x3, [x22, x3, lsl #3]
   1eb88:	add	x4, x20, x1
   1eb8c:	lsr	x3, x3, x1
   1eb90:	tbz	w3, #0, 1ebbc <omp_pause_resource_all_@@OMP_5.0+0x8d4>
   1eb94:	lsr	x3, x4, #6
   1eb98:	add	w0, w1, w20
   1eb9c:	cmp	x1, x4
   1eba0:	b.cc	1eafc <omp_pause_resource_all_@@OMP_5.0+0x814>  // b.lo, b.ul, b.last
   1eba4:	cmp	x2, x4, lsr #3
   1eba8:	lsl	x0, x5, x0
   1ebac:	b.ls	1ebbc <omp_pause_resource_all_@@OMP_5.0+0x8d4>  // b.plast
   1ebb0:	ldr	x2, [x23, x3, lsl #3]
   1ebb4:	orr	x0, x2, x0
   1ebb8:	str	x0, [x23, x3, lsl #3]
   1ebbc:	add	x1, x1, #0x1
   1ebc0:	cmp	x19, x1
   1ebc4:	b.ne	1eb74 <omp_pause_resource_all_@@OMP_5.0+0x88c>  // b.any
   1ebc8:	b	1eae4 <omp_pause_resource_all_@@OMP_5.0+0x7fc>
   1ebcc:	nop
   1ebd0:	stp	x29, x30, [sp, #-16]!
   1ebd4:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1ebd8:	mov	x29, sp
   1ebdc:	ldr	x2, [x2, #1720]
   1ebe0:	bl	8840 <memcmp@plt>
   1ebe4:	cmp	w0, #0x0
   1ebe8:	cset	w0, eq  // eq = none
   1ebec:	ldp	x29, x30, [sp], #16
   1ebf0:	ret
   1ebf4:	nop
   1ebf8:	stp	x29, x30, [sp, #-96]!
   1ebfc:	mov	x29, sp
   1ec00:	stp	x21, x22, [sp, #32]
   1ec04:	adrp	x22, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1ec08:	stp	x23, x24, [sp, #48]
   1ec0c:	and	w24, w0, #0xff
   1ec10:	ldr	x0, [x22, #1624]
   1ec14:	cbz	x0, 1ed88 <omp_pause_resource_all_@@OMP_5.0+0xaa0>
   1ec18:	adrp	x23, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1ec1c:	stp	x19, x20, [sp, #16]
   1ec20:	mov	x20, #0x0                   	// #0
   1ec24:	adrp	x19, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1ec28:	stp	x25, x26, [sp, #64]
   1ec2c:	mov	x25, #0x0                   	// #0
   1ec30:	adrp	x26, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1ec34:	str	x27, [sp, #80]
   1ec38:	ldr	x0, [x19, #1720]
   1ec3c:	lsl	x21, x25, #3
   1ec40:	ldr	x1, [x26, #1584]
   1ec44:	ldr	x3, [x23, #1728]
   1ec48:	cmp	xzr, x0, lsr #3
   1ec4c:	lsr	x4, x0, #3
   1ec50:	ldr	x1, [x1, x25, lsl #3]
   1ec54:	b.eq	1ecb8 <omp_pause_resource_all_@@OMP_5.0+0x9d0>  // b.none
   1ec58:	add	x2, x3, #0xf
   1ec5c:	sub	x5, x4, #0x1
   1ec60:	sub	x2, x2, x1
   1ec64:	cmp	x2, #0x1e
   1ec68:	ccmp	x5, #0x4, #0x0, hi  // hi = pmore
   1ec6c:	b.ls	1ed34 <omp_pause_resource_all_@@OMP_5.0+0xa4c>  // b.plast
   1ec70:	lsr	x5, x0, #4
   1ec74:	and	x2, x0, #0xfffffffffffffff0
   1ec78:	mov	x0, #0x0                   	// #0
   1ec7c:	nop
   1ec80:	ldr	q0, [x1, x0]
   1ec84:	ldr	q1, [x3, x0]
   1ec88:	and	v0.16b, v0.16b, v1.16b
   1ec8c:	str	q0, [x1, x0]
   1ec90:	add	x0, x0, #0x10
   1ec94:	cmp	x2, x0
   1ec98:	b.ne	1ec80 <omp_pause_resource_all_@@OMP_5.0+0x998>  // b.any
   1ec9c:	cmp	x4, x5, lsl #1
   1eca0:	b.eq	1ecb4 <omp_pause_resource_all_@@OMP_5.0+0x9cc>  // b.none
   1eca4:	ldr	x3, [x3, x2]
   1eca8:	ldr	x0, [x1, x2]
   1ecac:	and	x0, x0, x3
   1ecb0:	str	x0, [x1, x2]
   1ecb4:	ldr	x0, [x19, #1720]
   1ecb8:	bl	1c8f0 <omp_test_nest_lock@OMP_1.0+0x308>
   1ecbc:	cbz	x0, 1ece8 <omp_pause_resource_all_@@OMP_5.0+0xa00>
   1ecc0:	ldr	x0, [x26, #1584]
   1ecc4:	add	x25, x25, #0x1
   1ecc8:	ldr	x1, [x22, #1624]
   1eccc:	add	x27, x20, #0x1
   1ecd0:	ldr	x3, [x0, x21]
   1ecd4:	str	x3, [x0, x20, lsl #3]
   1ecd8:	cmp	x25, x1
   1ecdc:	b.cs	1ecfc <omp_pause_resource_all_@@OMP_5.0+0xa14>  // b.hs, b.nlast
   1ece0:	mov	x20, x27
   1ece4:	b	1ec38 <omp_pause_resource_all_@@OMP_5.0+0x950>
   1ece8:	ldr	x1, [x22, #1624]
   1ecec:	add	x25, x25, #0x1
   1ecf0:	cmp	x1, x25
   1ecf4:	b.hi	1ec38 <omp_pause_resource_all_@@OMP_5.0+0x950>  // b.pmore
   1ecf8:	mov	x27, x20
   1ecfc:	cbz	x27, 1ed7c <omp_pause_resource_all_@@OMP_5.0+0xa94>
   1ed00:	cmp	x1, x27
   1ed04:	b.ls	1ed58 <omp_pause_resource_all_@@OMP_5.0+0xa70>  // b.plast
   1ed08:	cbz	w24, 1eda4 <omp_pause_resource_all_@@OMP_5.0+0xabc>
   1ed0c:	mov	w24, #0x1                   	// #1
   1ed10:	str	x27, [x22, #1624]
   1ed14:	mov	w0, w24
   1ed18:	ldp	x19, x20, [sp, #16]
   1ed1c:	ldp	x21, x22, [sp, #32]
   1ed20:	ldp	x23, x24, [sp, #48]
   1ed24:	ldp	x25, x26, [sp, #64]
   1ed28:	ldr	x27, [sp, #80]
   1ed2c:	ldp	x29, x30, [sp], #96
   1ed30:	ret
   1ed34:	mov	x0, #0x0                   	// #0
   1ed38:	ldr	x2, [x1, x0, lsl #3]
   1ed3c:	ldr	x5, [x3, x0, lsl #3]
   1ed40:	and	x2, x2, x5
   1ed44:	str	x2, [x1, x0, lsl #3]
   1ed48:	add	x0, x0, #0x1
   1ed4c:	cmp	x0, x4
   1ed50:	b.ne	1ed38 <omp_pause_resource_all_@@OMP_5.0+0xa50>  // b.any
   1ed54:	b	1ecb4 <omp_pause_resource_all_@@OMP_5.0+0x9cc>
   1ed58:	mov	w24, #0x1                   	// #1
   1ed5c:	mov	w0, w24
   1ed60:	ldp	x19, x20, [sp, #16]
   1ed64:	ldp	x21, x22, [sp, #32]
   1ed68:	ldp	x23, x24, [sp, #48]
   1ed6c:	ldp	x25, x26, [sp, #64]
   1ed70:	ldr	x27, [sp, #80]
   1ed74:	ldp	x29, x30, [sp], #96
   1ed78:	ret
   1ed7c:	ldp	x19, x20, [sp, #16]
   1ed80:	ldp	x25, x26, [sp, #64]
   1ed84:	ldr	x27, [sp, #80]
   1ed88:	cbz	w24, 1edb8 <omp_pause_resource_all_@@OMP_5.0+0xad0>
   1ed8c:	mov	w24, #0x0                   	// #0
   1ed90:	mov	w0, w24
   1ed94:	ldp	x21, x22, [sp, #32]
   1ed98:	ldp	x23, x24, [sp, #48]
   1ed9c:	ldp	x29, x30, [sp], #96
   1eda0:	ret
   1eda4:	mov	x2, x27
   1eda8:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1edac:	add	x0, x0, #0x978
   1edb0:	bl	b670 <GOMP_critical_name_end@@GOMP_1.0+0x170>
   1edb4:	b	1ed0c <omp_pause_resource_all_@@OMP_5.0+0xa24>
   1edb8:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1edbc:	add	x0, x0, #0x948
   1edc0:	bl	b670 <GOMP_critical_name_end@@GOMP_1.0+0x170>
   1edc4:	mov	w0, w24
   1edc8:	ldp	x21, x22, [sp, #32]
   1edcc:	ldp	x23, x24, [sp, #48]
   1edd0:	ldp	x29, x30, [sp], #96
   1edd4:	ret
   1edd8:	stp	x29, x30, [sp, #-176]!
   1eddc:	mov	x29, sp
   1ede0:	stp	x23, x24, [sp, #48]
   1ede4:	adrp	x23, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1ede8:	stp	x19, x20, [sp, #16]
   1edec:	mov	x19, x1
   1edf0:	ldr	x1, [x23, #1728]
   1edf4:	stp	x21, x22, [sp, #32]
   1edf8:	and	w21, w2, #0xff
   1edfc:	str	x25, [sp, #64]
   1ee00:	cbz	x1, 1eef4 <omp_pause_resource_all_@@OMP_5.0+0xc0c>
   1ee04:	adrp	x24, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1ee08:	mov	w22, w0
   1ee0c:	ldr	x0, [x24, #1720]
   1ee10:	bl	1c8f0 <omp_test_nest_lock@OMP_1.0+0x308>
   1ee14:	cmp	x19, x0
   1ee18:	ldr	x25, [x23, #1728]
   1ee1c:	csel	x19, x19, x0, ls  // ls = plast
   1ee20:	cbz	x25, 1eef4 <omp_pause_resource_all_@@OMP_5.0+0xc0c>
   1ee24:	ldr	x20, [x24, #1720]
   1ee28:	add	x0, x20, #0x8
   1ee2c:	mul	x0, x0, x19
   1ee30:	bl	8710 <malloc@plt>
   1ee34:	mov	x4, x0
   1ee38:	cbz	x0, 1ef90 <omp_pause_resource_all_@@OMP_5.0+0xca8>
   1ee3c:	add	x3, x0, x19, lsl #3
   1ee40:	cbz	x19, 1ee58 <omp_pause_resource_all_@@OMP_5.0+0xb70>
   1ee44:	mov	x1, x3
   1ee48:	str	x3, [x0], #8
   1ee4c:	add	x3, x3, x20
   1ee50:	cmp	x1, x0
   1ee54:	b.ne	1ee48 <omp_pause_resource_all_@@OMP_5.0+0xb60>  // b.any
   1ee58:	adrp	x5, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1ee5c:	add	x5, x5, #0x9e0
   1ee60:	add	x0, x20, #0xf
   1ee64:	adrp	x23, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1ee68:	and	x0, x0, #0xfffffffffffffff0
   1ee6c:	adrp	x24, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1ee70:	ldp	x6, x7, [x5]
   1ee74:	sub	sp, sp, x0
   1ee78:	ldr	x8, [x5, #16]
   1ee7c:	mov	x3, sp
   1ee80:	ldr	w5, [x5, #24]
   1ee84:	mov	x2, x20
   1ee88:	mov	x1, x25
   1ee8c:	mov	x0, x3
   1ee90:	str	x4, [x24, #1584]
   1ee94:	add	x20, x29, #0x58
   1ee98:	str	xzr, [x23, #1624]
   1ee9c:	stp	x6, x7, [x29, #88]
   1eea0:	str	x8, [x29, #104]
   1eea4:	str	w5, [x29, #112]
   1eea8:	bl	8580 <memcpy@plt>
   1eeac:	mov	w5, w21
   1eeb0:	mov	x3, x0
   1eeb4:	mov	x4, x20
   1eeb8:	mov	w0, w22
   1eebc:	mov	x2, x19
   1eec0:	mov	w1, #0x3                   	// #3
   1eec4:	bl	1e2f0 <omp_pause_resource_all_@@OMP_5.0+0x8>
   1eec8:	ldr	x0, [x23, #1624]
   1eecc:	cbz	x0, 1ef2c <omp_pause_resource_all_@@OMP_5.0+0xc44>
   1eed0:	mov	w21, #0x1                   	// #1
   1eed4:	mov	sp, x29
   1eed8:	mov	w0, w21
   1eedc:	ldp	x19, x20, [sp, #16]
   1eee0:	ldp	x21, x22, [sp, #32]
   1eee4:	ldp	x23, x24, [sp, #48]
   1eee8:	ldr	x25, [sp, #64]
   1eeec:	ldp	x29, x30, [sp], #176
   1eef0:	ret
   1eef4:	cbz	w21, 1ef70 <omp_pause_resource_all_@@OMP_5.0+0xc88>
   1eef8:	adrp	x1, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1eefc:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1ef00:	mov	w21, #0x0                   	// #0
   1ef04:	str	xzr, [x0, #1624]
   1ef08:	mov	w0, w21
   1ef0c:	str	xzr, [x1, #1584]
   1ef10:	mov	sp, x29
   1ef14:	ldp	x19, x20, [sp, #16]
   1ef18:	ldp	x21, x22, [sp, #32]
   1ef1c:	ldp	x23, x24, [sp, #48]
   1ef20:	ldr	x25, [sp, #64]
   1ef24:	ldp	x29, x30, [sp], #176
   1ef28:	ret
   1ef2c:	cbz	w21, 1ef60 <omp_pause_resource_all_@@OMP_5.0+0xc78>
   1ef30:	ldr	x0, [x24, #1584]
   1ef34:	mov	w21, #0x0                   	// #0
   1ef38:	bl	88b0 <free@plt>
   1ef3c:	str	xzr, [x24, #1584]
   1ef40:	mov	w0, w21
   1ef44:	mov	sp, x29
   1ef48:	ldp	x19, x20, [sp, #16]
   1ef4c:	ldp	x21, x22, [sp, #32]
   1ef50:	ldp	x23, x24, [sp, #48]
   1ef54:	ldr	x25, [sp, #64]
   1ef58:	ldp	x29, x30, [sp], #176
   1ef5c:	ret
   1ef60:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1ef64:	add	x0, x0, #0xa00
   1ef68:	bl	b670 <GOMP_critical_name_end@@GOMP_1.0+0x170>
   1ef6c:	b	1ef30 <omp_pause_resource_all_@@OMP_5.0+0xc48>
   1ef70:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1ef74:	add	x0, x0, #0x878
   1ef78:	bl	b670 <GOMP_critical_name_end@@GOMP_1.0+0x170>
   1ef7c:	adrp	x1, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1ef80:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1ef84:	str	xzr, [x1, #1584]
   1ef88:	str	xzr, [x0, #1624]
   1ef8c:	b	1eed4 <omp_pause_resource_all_@@OMP_5.0+0xbec>
   1ef90:	cbnz	w21, 1eef8 <omp_pause_resource_all_@@OMP_5.0+0xc10>
   1ef94:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1ef98:	add	x0, x0, #0x898
   1ef9c:	b	1ef78 <omp_pause_resource_all_@@OMP_5.0+0xc90>
   1efa0:	stp	x29, x30, [sp, #-32]!
   1efa4:	mov	x29, sp
   1efa8:	stp	x19, x20, [sp, #16]
   1efac:	adrp	x20, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1efb0:	ldr	x19, [x20, #1584]
   1efb4:	cbz	x19, 1effc <omp_pause_resource_all_@@OMP_5.0+0xd14>
   1efb8:	bl	8a40 <pthread_self@plt>
   1efbc:	adrp	x1, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1efc0:	ldr	x2, [x19]
   1efc4:	ldr	x1, [x1, #1720]
   1efc8:	bl	8a20 <pthread_setaffinity_np@plt>
   1efcc:	adrp	x1, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1efd0:	ldr	x1, [x1, #4016]
   1efd4:	mrs	x0, tpidr_el0
   1efd8:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1efdc:	add	x0, x0, x1
   1efe0:	mov	w1, #0x1                   	// #1
   1efe4:	ldr	x2, [x2, #1624]
   1efe8:	stp	wzr, w2, [x0, #52]
   1efec:	str	w1, [x0, #92]
   1eff0:	ldp	x19, x20, [sp, #16]
   1eff4:	ldp	x29, x30, [sp], #32
   1eff8:	ret
   1effc:	mov	w2, #0x1                   	// #1
   1f000:	mov	x1, #0xffffffffffffffff    	// #-1
   1f004:	mov	w0, #0x1                   	// #1
   1f008:	bl	1edd8 <omp_pause_resource_all_@@OMP_5.0+0xaf0>
   1f00c:	tst	w0, #0xff
   1f010:	b.eq	1eff0 <omp_pause_resource_all_@@OMP_5.0+0xd08>  // b.none
   1f014:	ldr	x19, [x20, #1584]
   1f018:	b	1efb8 <omp_pause_resource_all_@@OMP_5.0+0xcd0>
   1f01c:	nop
   1f020:	stp	x29, x30, [sp, #-96]!
   1f024:	mov	x29, sp
   1f028:	stp	x25, x26, [sp, #64]
   1f02c:	adrp	x26, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1f030:	ldr	x2, [x26, #1720]
   1f034:	cmp	xzr, x2, lsl #3
   1f038:	b.eq	1f0fc <omp_pause_resource_all_@@OMP_5.0+0xe14>  // b.none
   1f03c:	stp	x21, x22, [sp, #32]
   1f040:	adrp	x22, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1f044:	mov	x21, x0
   1f048:	ldr	x22, [x22, #4040]
   1f04c:	stp	x19, x20, [sp, #16]
   1f050:	mov	x19, #0x0                   	// #0
   1f054:	stp	x23, x24, [sp, #48]
   1f058:	mov	x25, x22
   1f05c:	adrp	x23, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1f060:	str	x27, [sp, #80]
   1f064:	add	x23, x23, #0xa30
   1f068:	lsl	x27, x2, #3
   1f06c:	cmp	x2, x19, lsr #3
   1f070:	mov	w24, #0x0                   	// #0
   1f074:	mov	x20, #0x0                   	// #0
   1f078:	b.ls	1f0cc <omp_pause_resource_all_@@OMP_5.0+0xde4>  // b.plast
   1f07c:	nop
   1f080:	lsr	x0, x19, #6
   1f084:	ldr	x1, [x21, x0, lsl #3]
   1f088:	lsr	x1, x1, x19
   1f08c:	tbz	w1, #0, 1f0cc <omp_pause_resource_all_@@OMP_5.0+0xde4>
   1f090:	cbnz	x20, 1f0b0 <omp_pause_resource_all_@@OMP_5.0+0xdc8>
   1f094:	ldr	x0, [x25]
   1f098:	cbnz	w24, 1f154 <omp_pause_resource_all_@@OMP_5.0+0xe6c>
   1f09c:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1f0a0:	mov	x2, x19
   1f0a4:	add	x1, x1, #0xa28
   1f0a8:	mov	w24, #0x1                   	// #1
   1f0ac:	bl	8ac0 <fprintf@plt>
   1f0b0:	add	x20, x20, #0x1
   1f0b4:	add	x19, x19, #0x1
   1f0b8:	cmp	x27, x19
   1f0bc:	b.eq	1f0e4 <omp_pause_resource_all_@@OMP_5.0+0xdfc>  // b.none
   1f0c0:	ldr	x2, [x26, #1720]
   1f0c4:	cmp	x2, x19, lsr #3
   1f0c8:	b.hi	1f080 <omp_pause_resource_all_@@OMP_5.0+0xd98>  // b.pmore
   1f0cc:	cmp	x20, #0x1
   1f0d0:	b.hi	1f108 <omp_pause_resource_all_@@OMP_5.0+0xe20>  // b.pmore
   1f0d4:	add	x19, x19, #0x1
   1f0d8:	mov	x20, #0x0                   	// #0
   1f0dc:	cmp	x27, x19
   1f0e0:	b.ne	1f0c0 <omp_pause_resource_all_@@OMP_5.0+0xdd8>  // b.any
   1f0e4:	cmp	x20, #0x1
   1f0e8:	b.hi	1f120 <omp_pause_resource_all_@@OMP_5.0+0xe38>  // b.pmore
   1f0ec:	ldp	x19, x20, [sp, #16]
   1f0f0:	ldp	x21, x22, [sp, #32]
   1f0f4:	ldp	x23, x24, [sp, #48]
   1f0f8:	ldr	x27, [sp, #80]
   1f0fc:	ldp	x25, x26, [sp, #64]
   1f100:	ldp	x29, x30, [sp], #96
   1f104:	ret
   1f108:	ldr	x0, [x22]
   1f10c:	mov	x2, x20
   1f110:	mov	x1, x23
   1f114:	mov	x20, #0x0                   	// #0
   1f118:	bl	8ac0 <fprintf@plt>
   1f11c:	b	1f0b4 <omp_pause_resource_all_@@OMP_5.0+0xdcc>
   1f120:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1f124:	mov	x2, x20
   1f128:	ldp	x19, x20, [sp, #16]
   1f12c:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1f130:	ldr	x0, [x0, #4040]
   1f134:	add	x1, x1, #0xa30
   1f138:	ldp	x21, x22, [sp, #32]
   1f13c:	ldp	x23, x24, [sp, #48]
   1f140:	ldp	x25, x26, [sp, #64]
   1f144:	ldr	x27, [sp, #80]
   1f148:	ldp	x29, x30, [sp], #96
   1f14c:	ldr	x0, [x0]
   1f150:	b	8ac0 <fprintf@plt>
   1f154:	mov	x1, x0
   1f158:	mov	w0, #0x2c                  	// #44
   1f15c:	bl	8660 <fputc@plt>
   1f160:	ldr	x0, [x25]
   1f164:	b	1f09c <omp_pause_resource_all_@@OMP_5.0+0xdb4>

000000000001f168 <omp_get_place_num_procs@@OMP_4.5>:
   1f168:	tbnz	w0, #31, 1f1b4 <omp_get_place_num_procs@@OMP_4.5+0x4c>
   1f16c:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1f170:	mov	w1, w0
   1f174:	sxtw	x3, w0
   1f178:	mov	w0, #0x0                   	// #0
   1f17c:	ldr	x2, [x2, #1624]
   1f180:	cmp	x2, w1, sxtw
   1f184:	b.hi	1f18c <omp_get_place_num_procs@@OMP_4.5+0x24>  // b.pmore
   1f188:	ret
   1f18c:	stp	x29, x30, [sp, #-16]!
   1f190:	adrp	x1, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1f194:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1f198:	mov	x29, sp
   1f19c:	ldr	x1, [x1, #1584]
   1f1a0:	ldr	x0, [x0, #1720]
   1f1a4:	ldr	x1, [x1, x3, lsl #3]
   1f1a8:	bl	1c8f0 <omp_test_nest_lock@OMP_1.0+0x308>
   1f1ac:	ldp	x29, x30, [sp], #16
   1f1b0:	ret
   1f1b4:	mov	w0, #0x0                   	// #0
   1f1b8:	ret
   1f1bc:	nop

000000000001f1c0 <omp_get_place_proc_ids@@OMP_4.5>:
   1f1c0:	tbnz	w0, #31, 1f230 <omp_get_place_proc_ids@@OMP_4.5+0x70>
   1f1c4:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1f1c8:	sxtw	x4, w0
   1f1cc:	ldr	x2, [x2, #1624]
   1f1d0:	cmp	x2, w0, sxtw
   1f1d4:	b.ls	1f230 <omp_get_place_proc_ids@@OMP_4.5+0x70>  // b.plast
   1f1d8:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1f1dc:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1f1e0:	ldr	x0, [x0, #1584]
   1f1e4:	ldr	x3, [x2, #1720]
   1f1e8:	ldr	x6, [x0, x4, lsl #3]
   1f1ec:	cmp	xzr, x3, lsl #3
   1f1f0:	lsl	x5, x3, #3
   1f1f4:	b.eq	1f230 <omp_get_place_proc_ids@@OMP_4.5+0x70>  // b.none
   1f1f8:	mov	x0, #0x0                   	// #0
   1f1fc:	nop
   1f200:	lsr	x2, x0, #6
   1f204:	cmp	x3, x0, lsr #3
   1f208:	b.ls	1f224 <omp_get_place_proc_ids@@OMP_4.5+0x64>  // b.plast
   1f20c:	ldr	x2, [x6, x2, lsl #3]
   1f210:	mov	x4, x1
   1f214:	lsr	x2, x2, x0
   1f218:	tbz	w2, #0, 1f224 <omp_get_place_proc_ids@@OMP_4.5+0x64>
   1f21c:	str	w0, [x4], #4
   1f220:	mov	x1, x4
   1f224:	add	x0, x0, #0x1
   1f228:	cmp	x5, x0
   1f22c:	b.ne	1f200 <omp_get_place_proc_ids@@OMP_4.5+0x40>  // b.any
   1f230:	ret
   1f234:	nop
   1f238:	tbnz	w0, #31, 1f2ac <omp_get_place_proc_ids@@OMP_4.5+0xec>
   1f23c:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1f240:	sxtw	x3, w0
   1f244:	ldr	x2, [x2, #1624]
   1f248:	cmp	x2, w0, sxtw
   1f24c:	b.ls	1f2ac <omp_get_place_proc_ids@@OMP_4.5+0xec>  // b.plast
   1f250:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1f254:	adrp	x5, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1f258:	ldr	x0, [x0, #1584]
   1f25c:	ldr	x2, [x5, #1720]
   1f260:	ldr	x7, [x0, x3, lsl #3]
   1f264:	cmp	xzr, x2, lsl #3
   1f268:	lsl	x6, x2, #3
   1f26c:	b.eq	1f2ac <omp_get_place_proc_ids@@OMP_4.5+0xec>  // b.none
   1f270:	mov	x0, #0x0                   	// #0
   1f274:	b	1f27c <omp_get_place_proc_ids@@OMP_4.5+0xbc>
   1f278:	ldr	x2, [x5, #1720]
   1f27c:	lsr	x3, x0, #6
   1f280:	cmp	x2, x0, lsr #3
   1f284:	b.ls	1f2a0 <omp_get_place_proc_ids@@OMP_4.5+0xe0>  // b.plast
   1f288:	ldr	x2, [x7, x3, lsl #3]
   1f28c:	mov	x4, x1
   1f290:	lsr	x2, x2, x0
   1f294:	tbz	w2, #0, 1f2a0 <omp_get_place_proc_ids@@OMP_4.5+0xe0>
   1f298:	str	x0, [x4], #8
   1f29c:	mov	x1, x4
   1f2a0:	add	x0, x0, #0x1
   1f2a4:	cmp	x6, x0
   1f2a8:	b.ne	1f278 <omp_get_place_proc_ids@@OMP_4.5+0xb8>  // b.any
   1f2ac:	ret
   1f2b0:	stp	x29, x30, [sp, #-144]!
   1f2b4:	mov	x29, sp
   1f2b8:	stp	x19, x20, [sp, #16]
   1f2bc:	stp	x23, x24, [sp, #48]
   1f2c0:	mov	x23, x0
   1f2c4:	mov	x24, x1
   1f2c8:	stp	x25, x26, [sp, #64]
   1f2cc:	mov	x25, x2
   1f2d0:	tbnz	w3, #31, 1f2e8 <omp_get_place_proc_ids@@OMP_4.5+0x128>
   1f2d4:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1f2d8:	sxtw	x1, w3
   1f2dc:	ldr	x0, [x0, #1624]
   1f2e0:	cmp	x0, w3, sxtw
   1f2e4:	b.hi	1f3f8 <omp_get_place_proc_ids@@OMP_4.5+0x238>  // b.pmore
   1f2e8:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1f2ec:	ldr	x26, [x0, #1728]
   1f2f0:	cbz	x26, 1f410 <omp_get_place_proc_ids@@OMP_4.5+0x250>
   1f2f4:	stp	x21, x22, [sp, #32]
   1f2f8:	stp	x27, x28, [sp, #80]
   1f2fc:	adrp	x22, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1f300:	add	x20, sp, #0x70
   1f304:	adrp	x27, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1f308:	ldr	x5, [x22, #1720]
   1f30c:	add	x0, x20, #0x1
   1f310:	mov	x19, #0x0                   	// #0
   1f314:	str	x0, [sp, #104]
   1f318:	add	x0, x27, #0xa40
   1f31c:	mov	w27, #0x0                   	// #0
   1f320:	lsl	x28, x5, #3
   1f324:	str	x0, [sp, #96]
   1f328:	mov	x21, x28
   1f32c:	b	1f3a0 <omp_get_place_proc_ids@@OMP_4.5+0x1e0>
   1f330:	lsr	x0, x19, #6
   1f334:	ldr	x0, [x26, x0, lsl #3]
   1f338:	lsr	x0, x0, x19
   1f33c:	tbz	w0, #0, 1f3b4 <omp_get_place_proc_ids@@OMP_4.5+0x1f4>
   1f340:	cbnz	w27, 1f394 <omp_get_place_proc_ids@@OMP_4.5+0x1d4>
   1f344:	cmp	x28, x21
   1f348:	mov	x0, x20
   1f34c:	b.eq	1f35c <omp_get_place_proc_ids@@OMP_4.5+0x19c>  // b.none
   1f350:	ldr	x0, [sp, #104]
   1f354:	mov	w1, #0x2c                  	// #44
   1f358:	strb	w1, [sp, #112]
   1f35c:	mov	x21, x19
   1f360:	mov	w27, #0x1                   	// #1
   1f364:	mov	x2, x19
   1f368:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1f36c:	add	x1, x1, #0xa28
   1f370:	bl	8620 <sprintf@plt>
   1f374:	mov	x0, x20
   1f378:	bl	85b0 <strlen@plt>
   1f37c:	mov	x3, x20
   1f380:	mov	x4, x0
   1f384:	mov	x2, x25
   1f388:	mov	x1, x24
   1f38c:	mov	x0, x23
   1f390:	bl	2c0f0 <omp_get_affinity_format@@OMP_5.0+0x88>
   1f394:	cmp	x28, x19
   1f398:	add	x19, x19, #0x1
   1f39c:	b.eq	1f3dc <omp_get_place_proc_ids@@OMP_4.5+0x21c>  // b.none
   1f3a0:	cmp	x28, x19
   1f3a4:	b.eq	1f3b4 <omp_get_place_proc_ids@@OMP_4.5+0x1f4>  // b.none
   1f3a8:	ldr	x0, [x22, #1720]
   1f3ac:	cmp	x0, x19, lsr #3
   1f3b0:	b.hi	1f330 <omp_get_place_proc_ids@@OMP_4.5+0x170>  // b.pmore
   1f3b4:	cbz	w27, 1f394 <omp_get_place_proc_ids@@OMP_4.5+0x1d4>
   1f3b8:	add	x0, x21, #0x1
   1f3bc:	mov	w27, #0x0                   	// #0
   1f3c0:	cmp	x0, x19
   1f3c4:	b.eq	1f394 <omp_get_place_proc_ids@@OMP_4.5+0x1d4>  // b.none
   1f3c8:	ldr	x1, [sp, #96]
   1f3cc:	sub	x2, x19, #0x1
   1f3d0:	mov	x0, x20
   1f3d4:	bl	8620 <sprintf@plt>
   1f3d8:	b	1f374 <omp_get_place_proc_ids@@OMP_4.5+0x1b4>
   1f3dc:	ldp	x19, x20, [sp, #16]
   1f3e0:	ldp	x21, x22, [sp, #32]
   1f3e4:	ldp	x23, x24, [sp, #48]
   1f3e8:	ldp	x25, x26, [sp, #64]
   1f3ec:	ldp	x27, x28, [sp, #80]
   1f3f0:	ldp	x29, x30, [sp], #144
   1f3f4:	ret
   1f3f8:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1f3fc:	stp	x21, x22, [sp, #32]
   1f400:	ldr	x0, [x0, #1584]
   1f404:	stp	x27, x28, [sp, #80]
   1f408:	ldr	x26, [x0, x1, lsl #3]
   1f40c:	b	1f2fc <omp_get_place_proc_ids@@OMP_4.5+0x13c>
   1f410:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1f414:	add	x19, sp, #0x70
   1f418:	ldr	x2, [x0, #736]
   1f41c:	cmp	x2, #0x1
   1f420:	b.ls	1f46c <omp_get_place_proc_ids@@OMP_4.5+0x2ac>  // b.plast
   1f424:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1f428:	sub	x2, x2, #0x1
   1f42c:	mov	x0, x19
   1f430:	add	x1, x1, #0xa38
   1f434:	bl	8620 <sprintf@plt>
   1f438:	mov	x0, x19
   1f43c:	bl	85b0 <strlen@plt>
   1f440:	mov	x3, x19
   1f444:	mov	x4, x0
   1f448:	mov	x2, x25
   1f44c:	mov	x1, x24
   1f450:	mov	x0, x23
   1f454:	bl	2c0f0 <omp_get_affinity_format@@OMP_5.0+0x88>
   1f458:	ldp	x19, x20, [sp, #16]
   1f45c:	ldp	x23, x24, [sp, #48]
   1f460:	ldp	x25, x26, [sp, #64]
   1f464:	ldp	x29, x30, [sp], #144
   1f468:	ret
   1f46c:	mov	w0, #0x30                  	// #48
   1f470:	strh	w0, [sp, #112]
   1f474:	b	1f438 <omp_get_place_proc_ids@@OMP_4.5+0x278>
   1f478:	sub	sp, sp, #0xa0
   1f47c:	cmp	w3, #0x1
   1f480:	stp	x29, x30, [sp, #32]
   1f484:	add	x29, sp, #0x20
   1f488:	stp	x21, x22, [sp, #64]
   1f48c:	mov	x21, x0
   1f490:	stp	x23, x24, [sp, #80]
   1f494:	mov	x23, x2
   1f498:	stp	x27, x28, [sp, #112]
   1f49c:	mov	x28, x4
   1f4a0:	ldr	x24, [sp, #160]
   1f4a4:	b.eq	1f5ec <omp_get_place_proc_ids@@OMP_4.5+0x42c>  // b.none
   1f4a8:	stp	x19, x20, [sp, #48]
   1f4ac:	b.le	1f6dc <omp_get_place_proc_ids@@OMP_4.5+0x51c>
   1f4b0:	ldr	x19, [x7, #8]
   1f4b4:	umulh	x0, x2, x19
   1f4b8:	mul	x19, x2, x19
   1f4bc:	cbnz	x0, 1f5cc <omp_get_place_proc_ids@@OMP_4.5+0x40c>
   1f4c0:	ldr	x20, [x24, #8]
   1f4c4:	umulh	x0, x2, x20
   1f4c8:	mul	x20, x2, x20
   1f4cc:	cbnz	x0, 1f5cc <omp_get_place_proc_ids@@OMP_4.5+0x40c>
   1f4d0:	mov	x8, #0x2                   	// #2
   1f4d4:	b	1f4fc <omp_get_place_proc_ids@@OMP_4.5+0x33c>
   1f4d8:	ldr	x9, [x7, x8, lsl #3]
   1f4dc:	umulh	x10, x19, x9
   1f4e0:	mul	x19, x19, x9
   1f4e4:	cbnz	x10, 1f5cc <omp_get_place_proc_ids@@OMP_4.5+0x40c>
   1f4e8:	ldr	x9, [x24, x8, lsl #3]
   1f4ec:	add	x8, x8, #0x1
   1f4f0:	umulh	x10, x20, x9
   1f4f4:	mul	x20, x20, x9
   1f4f8:	cbnz	x10, 1f5cc <omp_get_place_proc_ids@@OMP_4.5+0x40c>
   1f4fc:	cmp	w3, w8
   1f500:	b.gt	1f4d8 <omp_get_place_proc_ids@@OMP_4.5+0x318>
   1f504:	ldr	x8, [x5]
   1f508:	umulh	x0, x19, x8
   1f50c:	mul	x8, x19, x8
   1f510:	cbnz	x0, 1f5cc <omp_get_place_proc_ids@@OMP_4.5+0x40c>
   1f514:	ldr	x0, [x6]
   1f518:	umulh	x2, x20, x0
   1f51c:	mul	x0, x20, x0
   1f520:	cmp	x2, #0x0
   1f524:	cset	x22, ne  // ne = any
   1f528:	b.ne	1f5cc <omp_get_place_proc_ids@@OMP_4.5+0x40c>  // b.any
   1f52c:	ldr	x2, [x28]
   1f530:	cbz	x2, 1f5c0 <omp_get_place_proc_ids@@OMP_4.5+0x400>
   1f534:	add	x2, x24, #0x8
   1f538:	sub	w3, w3, #0x1
   1f53c:	add	x7, x7, #0x8
   1f540:	add	x21, x21, x8
   1f544:	add	x24, x1, x0
   1f548:	add	x27, x28, #0x8
   1f54c:	stp	x25, x26, [sp, #96]
   1f550:	add	x25, x5, #0x8
   1f554:	add	x26, x6, #0x8
   1f558:	str	x2, [sp, #152]
   1f55c:	ldr	x0, [sp, #152]
   1f560:	str	x0, [sp]
   1f564:	ldr	x0, [sp, #168]
   1f568:	str	x0, [sp, #8]
   1f56c:	ldr	x0, [sp, #176]
   1f570:	str	x0, [sp, #16]
   1f574:	mov	x6, x26
   1f578:	mov	x5, x25
   1f57c:	mov	x4, x27
   1f580:	mov	x2, x23
   1f584:	mov	x1, x24
   1f588:	add	x22, x22, #0x1
   1f58c:	mov	x0, x21
   1f590:	str	w3, [sp, #140]
   1f594:	str	x7, [sp, #144]
   1f598:	bl	1f478 <omp_get_place_proc_ids@@OMP_4.5+0x2b8>
   1f59c:	cbnz	w0, 1f66c <omp_get_place_proc_ids@@OMP_4.5+0x4ac>
   1f5a0:	ldr	x0, [x28]
   1f5a4:	add	x21, x21, x19
   1f5a8:	ldr	w3, [sp, #140]
   1f5ac:	add	x24, x24, x20
   1f5b0:	cmp	x0, x22
   1f5b4:	ldr	x7, [sp, #144]
   1f5b8:	b.hi	1f55c <omp_get_place_proc_ids@@OMP_4.5+0x39c>  // b.pmore
   1f5bc:	ldp	x25, x26, [sp, #96]
   1f5c0:	mov	w0, #0x0                   	// #0
   1f5c4:	ldp	x19, x20, [sp, #48]
   1f5c8:	b	1f5d4 <omp_get_place_proc_ids@@OMP_4.5+0x414>
   1f5cc:	ldp	x19, x20, [sp, #48]
   1f5d0:	mov	w0, #0x16                  	// #22
   1f5d4:	ldp	x29, x30, [sp, #32]
   1f5d8:	ldp	x21, x22, [sp, #64]
   1f5dc:	ldp	x23, x24, [sp, #80]
   1f5e0:	ldp	x27, x28, [sp, #112]
   1f5e4:	add	sp, sp, #0xa0
   1f5e8:	ret
   1f5ec:	ldr	x2, [x4]
   1f5f0:	umulh	x0, x23, x2
   1f5f4:	mul	x2, x23, x2
   1f5f8:	cbnz	x0, 1f5d0 <omp_get_place_proc_ids@@OMP_4.5+0x410>
   1f5fc:	ldr	x0, [x5]
   1f600:	umulh	x3, x23, x0
   1f604:	mul	x4, x23, x0
   1f608:	cbnz	x3, 1f5d0 <omp_get_place_proc_ids@@OMP_4.5+0x410>
   1f60c:	ldr	x0, [x6]
   1f610:	umulh	x3, x23, x0
   1f614:	mul	x23, x23, x0
   1f618:	cbnz	x3, 1f5d0 <omp_get_place_proc_ids@@OMP_4.5+0x410>
   1f61c:	ldp	x0, x3, [sp, #168]
   1f620:	orr	x0, x0, x3
   1f624:	cbz	x0, 1f678 <omp_get_place_proc_ids@@OMP_4.5+0x4b8>
   1f628:	cbz	x3, 1f6b4 <omp_get_place_proc_ids@@OMP_4.5+0x4f4>
   1f62c:	ldr	x0, [sp, #168]
   1f630:	cbz	x0, 1f68c <omp_get_place_proc_ids@@OMP_4.5+0x4cc>
   1f634:	ldr	x3, [sp, #176]
   1f638:	cmp	x0, x3
   1f63c:	b.ne	1f5d0 <omp_get_place_proc_ids@@OMP_4.5+0x410>  // b.any
   1f640:	mov	x3, x2
   1f644:	ldr	w0, [x0, #12]
   1f648:	ldr	x2, [sp, #168]
   1f64c:	ldr	x5, [x2, #128]
   1f650:	add	x2, x1, x23
   1f654:	add	x1, x21, x4
   1f658:	blr	x5
   1f65c:	and	w1, w0, #0xff
   1f660:	mov	w0, #0x0                   	// #0
   1f664:	cbnz	w1, 1f5d4 <omp_get_place_proc_ids@@OMP_4.5+0x414>
   1f668:	b	1f5d0 <omp_get_place_proc_ids@@OMP_4.5+0x410>
   1f66c:	ldp	x19, x20, [sp, #48]
   1f670:	ldp	x25, x26, [sp, #96]
   1f674:	b	1f5d4 <omp_get_place_proc_ids@@OMP_4.5+0x414>
   1f678:	add	x1, x1, x23
   1f67c:	add	x0, x21, x4
   1f680:	bl	8580 <memcpy@plt>
   1f684:	mov	w0, #0x0                   	// #0
   1f688:	b	1f5d4 <omp_get_place_proc_ids@@OMP_4.5+0x414>
   1f68c:	mov	x3, x2
   1f690:	ldr	x0, [sp, #176]
   1f694:	ldr	x2, [sp, #176]
   1f698:	ldr	w0, [x0, #12]
   1f69c:	ldr	x5, [x2, #112]
   1f6a0:	add	x2, x1, x23
   1f6a4:	add	x1, x21, x4
   1f6a8:	blr	x5
   1f6ac:	and	w1, w0, #0xff
   1f6b0:	b	1f660 <omp_get_place_proc_ids@@OMP_4.5+0x4a0>
   1f6b4:	mov	x3, x2
   1f6b8:	ldr	x0, [sp, #168]
   1f6bc:	ldr	x2, [sp, #168]
   1f6c0:	ldr	w0, [x0, #12]
   1f6c4:	ldr	x5, [x2, #120]
   1f6c8:	add	x2, x1, x23
   1f6cc:	add	x1, x21, x4
   1f6d0:	blr	x5
   1f6d4:	and	w1, w0, #0xff
   1f6d8:	b	1f660 <omp_get_place_proc_ids@@OMP_4.5+0x4a0>
   1f6dc:	mov	x20, x2
   1f6e0:	mov	x19, x2
   1f6e4:	b	1f504 <omp_get_place_proc_ids@@OMP_4.5+0x344>
   1f6e8:	stp	x29, x30, [sp, #-32]!
   1f6ec:	adrp	x1, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1f6f0:	mov	x0, #0x0                   	// #0
   1f6f4:	mov	x29, sp
   1f6f8:	str	wzr, [x1, #1376]
   1f6fc:	str	x19, [sp, #16]
   1f700:	add	x19, x1, #0x560
   1f704:	bl	8710 <malloc@plt>
   1f708:	mov	x1, x0
   1f70c:	adrp	x0, 1f000 <omp_pause_resource_all_@@OMP_5.0+0xd18>
   1f710:	add	x0, x0, #0x878
   1f714:	str	wzr, [x19, #4]
   1f718:	str	x1, [x19, #8]
   1f71c:	bl	2ccd8 <omp_get_team_num@@OMP_4.0+0x10>
   1f720:	cbnz	w0, 1f730 <omp_get_place_proc_ids@@OMP_4.5+0x570>
   1f724:	ldr	x19, [sp, #16]
   1f728:	ldp	x29, x30, [sp], #32
   1f72c:	ret
   1f730:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1f734:	add	x0, x0, #0xa48
   1f738:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   1f73c:	nop
   1f740:	mov	x1, x0
   1f744:	ldxr	w2, [x1]
   1f748:	stlxr	w3, wzr, [x1]
   1f74c:	cbnz	w3, 1f744 <omp_get_place_proc_ids@@OMP_4.5+0x584>
   1f750:	tbnz	w2, #31, 1f758 <omp_get_place_proc_ids@@OMP_4.5+0x598>
   1f754:	ret
   1f758:	b	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   1f75c:	nop
   1f760:	stp	x29, x30, [sp, #-144]!
   1f764:	adrp	x3, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1f768:	adrp	x4, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   1f76c:	ldr	x4, [x4, #4016]
   1f770:	mov	x29, sp
   1f774:	str	x19, [sp, #16]
   1f778:	mrs	x19, tpidr_el0
   1f77c:	add	x2, x19, x4
   1f780:	ldr	x5, [x3, #1584]
   1f784:	mov	x3, x0
   1f788:	ldp	x6, x7, [x2]
   1f78c:	stp	x6, x7, [sp, #40]
   1f790:	mov	x0, x1
   1f794:	ldp	x6, x7, [x2, #16]
   1f798:	stp	x6, x7, [sp, #56]
   1f79c:	ldr	w8, [x2, #92]
   1f7a0:	ldp	x6, x7, [x2, #32]
   1f7a4:	stp	x6, x7, [sp, #72]
   1f7a8:	ldp	x6, x7, [x2, #48]
   1f7ac:	stp	x6, x7, [sp, #88]
   1f7b0:	ldp	x6, x7, [x2, #64]
   1f7b4:	stp	x6, x7, [sp, #104]
   1f7b8:	ldp	x6, x7, [x2, #80]
   1f7bc:	stp	xzr, xzr, [x2]
   1f7c0:	ldr	x1, [x2, #96]
   1f7c4:	stp	xzr, xzr, [x2, #16]
   1f7c8:	stp	xzr, xzr, [x2, #32]
   1f7cc:	stp	xzr, xzr, [x2, #48]
   1f7d0:	stp	xzr, xzr, [x2, #64]
   1f7d4:	stp	xzr, xzr, [x2, #80]
   1f7d8:	str	xzr, [x2, #96]
   1f7dc:	stp	x6, x7, [sp, #120]
   1f7e0:	str	x1, [sp, #136]
   1f7e4:	cbz	x5, 1f7f8 <omp_get_place_proc_ids@@OMP_4.5+0x638>
   1f7e8:	adrp	x1, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1f7ec:	str	w8, [x2, #92]
   1f7f0:	ldr	x1, [x1, #1624]
   1f7f4:	str	w1, [x2, #56]
   1f7f8:	add	x19, x19, x4
   1f7fc:	blr	x3
   1f800:	mov	x0, x19
   1f804:	bl	1b7d0 <omp_in_final@@OMP_3.1+0x14e0>
   1f808:	ldp	x0, x1, [sp, #40]
   1f80c:	stp	x0, x1, [x19]
   1f810:	ldp	x0, x1, [sp, #56]
   1f814:	stp	x0, x1, [x19, #16]
   1f818:	ldp	x0, x1, [sp, #72]
   1f81c:	stp	x0, x1, [x19, #32]
   1f820:	ldp	x0, x1, [sp, #88]
   1f824:	stp	x0, x1, [x19, #48]
   1f828:	ldp	x0, x1, [sp, #104]
   1f82c:	stp	x0, x1, [x19, #64]
   1f830:	ldp	x0, x1, [sp, #120]
   1f834:	stp	x0, x1, [x19, #80]
   1f838:	ldr	x0, [sp, #136]
   1f83c:	str	x0, [x19, #96]
   1f840:	ldr	x19, [sp, #16]
   1f844:	ldp	x29, x30, [sp], #144
   1f848:	ret
   1f84c:	nop
   1f850:	stp	x29, x30, [sp, #-16]!
   1f854:	mov	x0, #0x40                  	// #64
   1f858:	mov	x29, sp
   1f85c:	bl	b2f8 <fprintf@plt+0x2838>
   1f860:	stp	xzr, xzr, [x0, #16]
   1f864:	mov	x2, #0x1                   	// #1
   1f868:	str	x2, [x0]
   1f86c:	stp	xzr, xzr, [x0, #48]
   1f870:	ldp	x29, x30, [sp], #16
   1f874:	ret
   1f878:	stp	x29, x30, [sp, #-80]!
   1f87c:	mov	x29, sp
   1f880:	stp	x23, x24, [sp, #48]
   1f884:	adrp	x23, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   1f888:	ldr	w0, [x23, #1376]
   1f88c:	cmp	w0, #0x0
   1f890:	b.le	1f97c <omp_get_place_proc_ids@@OMP_4.5+0x7bc>
   1f894:	add	x23, x23, #0x560
   1f898:	mov	w24, #0x2                   	// #2
   1f89c:	stp	x19, x20, [sp, #16]
   1f8a0:	stp	x21, x22, [sp, #32]
   1f8a4:	mov	x21, #0x0                   	// #0
   1f8a8:	mov	w22, #0x0                   	// #0
   1f8ac:	str	x25, [sp, #64]
   1f8b0:	mov	w25, #0x1                   	// #1
   1f8b4:	b	1f8dc <omp_get_place_proc_ids@@OMP_4.5+0x71c>
   1f8b8:	ldxr	w0, [x20]
   1f8bc:	stlxr	w1, wzr, [x20]
   1f8c0:	cbnz	w1, 1f8b8 <omp_get_place_proc_ids@@OMP_4.5+0x6f8>
   1f8c4:	tbnz	w0, #31, 1f950 <omp_get_place_proc_ids@@OMP_4.5+0x790>
   1f8c8:	ldr	w0, [x23]
   1f8cc:	add	w22, w22, #0x1
   1f8d0:	add	x21, x21, #0x130
   1f8d4:	cmp	w0, w22
   1f8d8:	b.le	1f970 <omp_get_place_proc_ids@@OMP_4.5+0x7b0>
   1f8dc:	ldr	x19, [x23, #8]
   1f8e0:	add	x19, x19, x21
   1f8e4:	add	x20, x19, #0xa8
   1f8e8:	ldaxr	w1, [x20]
   1f8ec:	cbnz	w1, 1f8f8 <omp_get_place_proc_ids@@OMP_4.5+0x738>
   1f8f0:	stxr	w0, w25, [x20]
   1f8f4:	cbnz	w0, 1f8e8 <omp_get_place_proc_ids@@OMP_4.5+0x728>
   1f8f8:	cmp	w1, #0x0
   1f8fc:	b.ne	1f988 <omp_get_place_proc_ids@@OMP_4.5+0x7c8>  // b.any
   1f900:	ldr	w0, [x19, #172]
   1f904:	cmp	w0, #0x1
   1f908:	b.ne	1f8b8 <omp_get_place_proc_ids@@OMP_4.5+0x6f8>  // b.any
   1f90c:	ldr	w0, [x19, #12]
   1f910:	ldr	x1, [x19, #64]
   1f914:	blr	x1
   1f918:	str	w24, [x19, #172]
   1f91c:	and	w19, w0, #0xff
   1f920:	ldxr	w0, [x20]
   1f924:	stlxr	w1, wzr, [x20]
   1f928:	cbnz	w1, 1f920 <omp_get_place_proc_ids@@OMP_4.5+0x760>
   1f92c:	tbnz	w0, #31, 1f940 <omp_get_place_proc_ids@@OMP_4.5+0x780>
   1f930:	cbnz	w19, 1f8c8 <omp_get_place_proc_ids@@OMP_4.5+0x708>
   1f934:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1f938:	add	x0, x0, #0xa58
   1f93c:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   1f940:	mov	x0, x20
   1f944:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   1f948:	cbnz	w19, 1f8c8 <omp_get_place_proc_ids@@OMP_4.5+0x708>
   1f94c:	b	1f934 <omp_get_place_proc_ids@@OMP_4.5+0x774>
   1f950:	mov	x0, x20
   1f954:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   1f958:	ldr	w0, [x23]
   1f95c:	add	w22, w22, #0x1
   1f960:	add	x21, x21, #0x130
   1f964:	cmp	w0, w22
   1f968:	b.gt	1f8dc <omp_get_place_proc_ids@@OMP_4.5+0x71c>
   1f96c:	nop
   1f970:	ldp	x19, x20, [sp, #16]
   1f974:	ldp	x21, x22, [sp, #32]
   1f978:	ldr	x25, [sp, #64]
   1f97c:	ldp	x23, x24, [sp, #48]
   1f980:	ldp	x29, x30, [sp], #80
   1f984:	ret
   1f988:	mov	x0, x20
   1f98c:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   1f990:	b	1f900 <omp_get_place_proc_ids@@OMP_4.5+0x740>
   1f994:	nop
   1f998:	stp	x29, x30, [sp, #-48]!
   1f99c:	mov	x29, sp
   1f9a0:	stp	x19, x20, [sp, #16]
   1f9a4:	mov	x19, x0
   1f9a8:	mov	x20, x3
   1f9ac:	stp	x21, x22, [sp, #32]
   1f9b0:	mov	x21, x1
   1f9b4:	mov	x22, x2
   1f9b8:	cbz	x4, 1fa30 <omp_get_place_proc_ids@@OMP_4.5+0x870>
   1f9bc:	ldp	x1, x12, [x4, #8]
   1f9c0:	ldr	x7, [x4, #24]
   1f9c4:	add	x0, x12, x7, lsl #4
   1f9c8:	ldr	x10, [x1, #16]
   1f9cc:	ldur	x0, [x0, #-8]
   1f9d0:	sub	x10, x21, x10
   1f9d4:	cmp	x0, x10
   1f9d8:	b.ls	1fa30 <omp_get_place_proc_ids@@OMP_4.5+0x870>  // b.plast
   1f9dc:	subs	x7, x7, #0x1
   1f9e0:	b.mi	1fa30 <omp_get_place_proc_ids@@OMP_4.5+0x870>  // b.first
   1f9e4:	mov	x8, #0x0                   	// #0
   1f9e8:	b	1f9f8 <omp_get_place_proc_ids@@OMP_4.5+0x838>
   1f9ec:	add	x8, x6, #0x1
   1f9f0:	cmp	x7, x8
   1f9f4:	b.lt	1fa30 <omp_get_place_proc_ids@@OMP_4.5+0x870>  // b.tstop
   1f9f8:	add	x6, x7, x8
   1f9fc:	asr	x6, x6, #1
   1fa00:	lsl	x9, x6, #4
   1fa04:	add	x11, x12, x9
   1fa08:	ldr	x11, [x11, #8]
   1fa0c:	cmp	x11, x10
   1fa10:	b.ls	1f9ec <omp_get_place_proc_ids@@OMP_4.5+0x82c>  // b.plast
   1fa14:	ldr	x7, [x12, x9]
   1fa18:	cmp	x7, x10
   1fa1c:	b.ls	1fa60 <omp_get_place_proc_ids@@OMP_4.5+0x8a0>  // b.plast
   1fa20:	sub	x7, x6, #0x1
   1fa24:	cmp	x7, x8
   1fa28:	b.ge	1f9f8 <omp_get_place_proc_ids@@OMP_4.5+0x838>  // b.tcont
   1fa2c:	nop
   1fa30:	ldr	w0, [x19, #12]
   1fa34:	mov	x3, x20
   1fa38:	ldr	x4, [x19, #120]
   1fa3c:	mov	x2, x22
   1fa40:	mov	x1, x21
   1fa44:	blr	x4
   1fa48:	tst	w0, #0xff
   1fa4c:	b.eq	1fa94 <omp_get_place_proc_ids@@OMP_4.5+0x8d4>  // b.none
   1fa50:	ldp	x19, x20, [sp, #16]
   1fa54:	ldp	x21, x22, [sp, #32]
   1fa58:	ldp	x29, x30, [sp], #48
   1fa5c:	ret
   1fa60:	add	x0, x10, x20
   1fa64:	cmp	x11, x0
   1fa68:	b.cc	1fac8 <omp_get_place_proc_ids@@OMP_4.5+0x908>  // b.lo, b.ul, b.last
   1fa6c:	ldr	x1, [x12]
   1fa70:	mov	x2, x20
   1fa74:	ldp	x19, x20, [sp, #16]
   1fa78:	sub	x10, x10, x1
   1fa7c:	mov	x1, x22
   1fa80:	ldp	x21, x22, [sp, #32]
   1fa84:	ldp	x29, x30, [sp], #48
   1fa88:	ldr	x0, [x4]
   1fa8c:	add	x0, x0, x10
   1fa90:	b	8580 <memcpy@plt>
   1fa94:	add	x0, x19, #0xa8
   1fa98:	bl	1f740 <omp_get_place_proc_ids@@OMP_4.5+0x580>
   1fa9c:	adrp	x4, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1faa0:	adrp	x1, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   1faa4:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1faa8:	add	x6, x21, x20
   1faac:	add	x4, x4, #0xa98
   1fab0:	add	x1, x1, #0x2e8
   1fab4:	mov	x5, x21
   1fab8:	add	x0, x0, #0xaa0
   1fabc:	add	x3, x22, x20
   1fac0:	mov	x2, x22
   1fac4:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   1fac8:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1facc:	add	x0, x0, #0xa78
   1fad0:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   1fad4:	nop
   1fad8:	stp	x29, x30, [sp, #-144]!
   1fadc:	mov	x29, sp
   1fae0:	stp	x19, x20, [sp, #16]
   1fae4:	mov	x19, x0
   1fae8:	stp	x21, x22, [sp, #32]
   1faec:	mov	x21, x2
   1faf0:	stp	x23, x24, [sp, #48]
   1faf4:	str	x1, [sp, #88]
   1faf8:	ldr	x23, [x0, #56]
   1fafc:	cbz	x1, 1fba0 <omp_get_place_proc_ids@@OMP_4.5+0x9e0>
   1fb00:	add	x5, x1, x3
   1fb04:	add	x24, sp, #0x58
   1fb08:	add	x2, x5, #0x1
   1fb0c:	str	x25, [sp, #64]
   1fb10:	add	x25, x23, #0xa0
   1fb14:	mov	x20, x3
   1fb18:	mov	x22, x4
   1fb1c:	mov	x1, x24
   1fb20:	mov	x0, x25
   1fb24:	stp	x5, x2, [sp, #88]
   1fb28:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   1fb2c:	ldr	x3, [sp, #96]
   1fb30:	mov	x5, x0
   1fb34:	sub	x3, x3, #0x1
   1fb38:	str	x3, [sp, #96]
   1fb3c:	cbz	x0, 1fbd0 <omp_get_place_proc_ids@@OMP_4.5+0xa10>
   1fb40:	ldr	x6, [sp, #88]
   1fb44:	mov	x4, x22
   1fb48:	ldr	x1, [x5, #16]
   1fb4c:	add	x2, x24, #0x18
   1fb50:	ldr	x3, [x5]
   1fb54:	mov	x0, x23
   1fb58:	ldr	x1, [x1, #16]
   1fb5c:	sub	x6, x6, x3
   1fb60:	ldr	x3, [x5, #24]
   1fb64:	add	x5, x6, x1
   1fb68:	ldr	x1, [x19, #16]
   1fb6c:	sub	x20, x3, x20
   1fb70:	add	x20, x5, x20
   1fb74:	mov	x3, #0x8                   	// #8
   1fb78:	add	x1, x21, x1
   1fb7c:	str	x6, [sp, #88]
   1fb80:	str	x20, [sp, #112]
   1fb84:	bl	1f998 <omp_get_place_proc_ids@@OMP_4.5+0x7d8>
   1fb88:	ldp	x19, x20, [sp, #16]
   1fb8c:	ldp	x21, x22, [sp, #32]
   1fb90:	ldp	x23, x24, [sp, #48]
   1fb94:	ldr	x25, [sp, #64]
   1fb98:	ldp	x29, x30, [sp], #144
   1fb9c:	ret
   1fba0:	ldr	x1, [x19, #16]
   1fba4:	mov	x0, x23
   1fba8:	add	x2, sp, #0x70
   1fbac:	mov	x3, #0x8                   	// #8
   1fbb0:	add	x1, x21, x1
   1fbb4:	str	xzr, [sp, #112]
   1fbb8:	bl	1f998 <omp_get_place_proc_ids@@OMP_4.5+0x7d8>
   1fbbc:	ldp	x19, x20, [sp, #16]
   1fbc0:	ldp	x21, x22, [sp, #32]
   1fbc4:	ldp	x23, x24, [sp, #48]
   1fbc8:	ldp	x29, x30, [sp], #144
   1fbcc:	ret
   1fbd0:	ldr	x2, [sp, #88]
   1fbd4:	mov	x1, x24
   1fbd8:	mov	x0, x25
   1fbdc:	sub	x2, x2, #0x1
   1fbe0:	str	x2, [sp, #88]
   1fbe4:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   1fbe8:	mov	x5, x0
   1fbec:	ldr	x6, [sp, #88]
   1fbf0:	add	x6, x6, #0x1
   1fbf4:	str	x6, [sp, #88]
   1fbf8:	cbnz	x0, 1fb44 <omp_get_place_proc_ids@@OMP_4.5+0x984>
   1fbfc:	mov	x0, x25
   1fc00:	mov	x1, x24
   1fc04:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   1fc08:	mov	x5, x0
   1fc0c:	cbnz	x0, 1fb40 <omp_get_place_proc_ids@@OMP_4.5+0x980>
   1fc10:	add	x0, x23, #0xa8
   1fc14:	bl	1f740 <omp_get_place_proc_ids@@OMP_4.5+0x580>
   1fc18:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1fc1c:	add	x0, x0, #0xae0
   1fc20:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   1fc24:	nop
   1fc28:	stp	x29, x30, [sp, #-176]!
   1fc2c:	mov	x29, sp
   1fc30:	stp	x19, x20, [sp, #16]
   1fc34:	stp	x23, x24, [sp, #48]
   1fc38:	ldp	x19, x24, [x2, #16]
   1fc3c:	stp	x25, x26, [sp, #64]
   1fc40:	ldp	x25, x20, [x2]
   1fc44:	stp	x27, x28, [sp, #80]
   1fc48:	mov	x27, x0
   1fc4c:	sub	x24, x24, x19
   1fc50:	mov	x28, x3
   1fc54:	lsr	x0, x24, #63
   1fc58:	add	x24, x0, x24, asr #3
   1fc5c:	sub	x20, x20, x25
   1fc60:	asr	x24, x24, #1
   1fc64:	asr	x20, x20, #3
   1fc68:	orr	w0, w24, w20
   1fc6c:	cbz	w0, 1fdb4 <omp_get_place_proc_ids@@OMP_4.5+0xbf4>
   1fc70:	stp	x21, x22, [sp, #32]
   1fc74:	str	w1, [sp, #108]
   1fc78:	cbz	w20, 1fde4 <omp_get_place_proc_ids@@OMP_4.5+0xc24>
   1fc7c:	ldr	x2, [x25]
   1fc80:	add	x21, x27, #0xa0
   1fc84:	add	x22, sp, #0x78
   1fc88:	mov	x0, x21
   1fc8c:	add	x4, x2, #0x1
   1fc90:	mov	x1, x22
   1fc94:	stp	x2, x4, [sp, #120]
   1fc98:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   1fc9c:	mov	x23, x0
   1fca0:	ldr	w3, [sp, #108]
   1fca4:	mov	x2, x28
   1fca8:	ldr	w0, [x27, #12]
   1fcac:	ldr	x4, [x27, #88]
   1fcb0:	mov	w1, w3
   1fcb4:	blr	x4
   1fcb8:	tst	w0, #0xff
   1fcbc:	b.eq	1fdd0 <omp_get_place_proc_ids@@OMP_4.5+0xc10>  // b.none
   1fcc0:	mov	w26, w20
   1fcc4:	cmp	w20, #0x0
   1fcc8:	mov	x20, #0x0                   	// #0
   1fccc:	b.le	1fcf4 <omp_get_place_proc_ids@@OMP_4.5+0xb34>
   1fcd0:	ldr	x2, [x25, x20, lsl #3]
   1fcd4:	mov	x1, x22
   1fcd8:	add	x20, x20, #0x1
   1fcdc:	mov	x0, x21
   1fce0:	add	x3, x2, #0x1
   1fce4:	stp	x2, x3, [sp, #120]
   1fce8:	bl	25580 <omp_pause_resource_all@@OMP_5.0+0x2a8>
   1fcec:	cmp	w26, w20
   1fcf0:	b.gt	1fcd0 <omp_get_place_proc_ids@@OMP_4.5+0xb10>
   1fcf4:	cmp	w24, #0x0
   1fcf8:	b.le	1feb0 <omp_get_place_proc_ids@@OMP_4.5+0xcf0>
   1fcfc:	sub	w20, w24, #0x1
   1fd00:	add	x0, x19, #0x10
   1fd04:	mov	w24, #0x0                   	// #0
   1fd08:	add	x20, x0, w20, uxtw #4
   1fd0c:	b	1fd20 <omp_get_place_proc_ids@@OMP_4.5+0xb60>
   1fd10:	bl	25580 <omp_pause_resource_all@@OMP_5.0+0x2a8>
   1fd14:	add	x19, x19, #0x10
   1fd18:	cmp	x20, x19
   1fd1c:	b.eq	1fd88 <omp_get_place_proc_ids@@OMP_4.5+0xbc8>  // b.none
   1fd20:	ldp	x0, x2, [x19]
   1fd24:	and	x1, x2, #0x7fffffffffffffff
   1fd28:	add	x1, x1, x0
   1fd2c:	stp	x0, x1, [sp, #120]
   1fd30:	mov	x1, x22
   1fd34:	mov	x0, x21
   1fd38:	tbz	x2, #63, 1fd10 <omp_get_place_proc_ids@@OMP_4.5+0xb50>
   1fd3c:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   1fd40:	mov	x24, x0
   1fd44:	mov	x1, x24
   1fd48:	mov	x0, x21
   1fd4c:	bl	25580 <omp_pause_resource_all@@OMP_5.0+0x2a8>
   1fd50:	ldr	x1, [x24, #48]
   1fd54:	cbz	x1, 1fd60 <omp_get_place_proc_ids@@OMP_4.5+0xba0>
   1fd58:	mov	x0, x21
   1fd5c:	bl	25350 <omp_pause_resource_all@@OMP_5.0+0x78>
   1fd60:	ldr	x25, [x24, #16]
   1fd64:	ldr	x0, [x25]
   1fd68:	cmp	x0, #0x1
   1fd6c:	b.ls	1fe2c <omp_get_place_proc_ids@@OMP_4.5+0xc6c>  // b.plast
   1fd70:	sub	x0, x0, #0x1
   1fd74:	str	x0, [x25]
   1fd78:	add	x19, x19, #0x10
   1fd7c:	mov	w24, #0x0                   	// #0
   1fd80:	cmp	x20, x19
   1fd84:	b.ne	1fd20 <omp_get_place_proc_ids@@OMP_4.5+0xb60>  // b.any
   1fd88:	eor	w24, w24, #0x1
   1fd8c:	cmp	x23, #0x0
   1fd90:	ccmp	w24, #0x0, #0x4, ne  // ne = any
   1fd94:	b.ne	1fe4c <omp_get_place_proc_ids@@OMP_4.5+0xc8c>  // b.any
   1fd98:	ldp	x21, x22, [sp, #32]
   1fd9c:	ldp	x19, x20, [sp, #16]
   1fda0:	ldp	x23, x24, [sp, #48]
   1fda4:	ldp	x25, x26, [sp, #64]
   1fda8:	ldp	x27, x28, [sp, #80]
   1fdac:	ldp	x29, x30, [sp], #176
   1fdb0:	ret
   1fdb4:	mov	x2, x3
   1fdb8:	ldr	w0, [x27, #12]
   1fdbc:	ldr	x3, [x27, #88]
   1fdc0:	blr	x3
   1fdc4:	tst	w0, #0xff
   1fdc8:	b.ne	1fd9c <omp_get_place_proc_ids@@OMP_4.5+0xbdc>  // b.any
   1fdcc:	stp	x21, x22, [sp, #32]
   1fdd0:	add	x0, x27, #0xa8
   1fdd4:	bl	1f740 <omp_get_place_proc_ids@@OMP_4.5+0x580>
   1fdd8:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1fddc:	add	x0, x0, #0xb10
   1fde0:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   1fde4:	ldr	x2, [x19]
   1fde8:	add	x22, sp, #0x78
   1fdec:	add	x21, x27, #0xa0
   1fdf0:	mov	x1, x22
   1fdf4:	add	x4, x2, #0x1
   1fdf8:	mov	x0, x21
   1fdfc:	stp	x2, x4, [sp, #120]
   1fe00:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   1fe04:	mov	x23, x0
   1fe08:	ldr	w3, [sp, #108]
   1fe0c:	mov	x2, x28
   1fe10:	ldr	w0, [x27, #12]
   1fe14:	ldr	x4, [x27, #88]
   1fe18:	mov	w1, w3
   1fe1c:	blr	x4
   1fe20:	tst	w0, #0xff
   1fe24:	b.ne	1fcf4 <omp_get_place_proc_ids@@OMP_4.5+0xb34>  // b.any
   1fe28:	b	1fdd0 <omp_get_place_proc_ids@@OMP_4.5+0xc10>
   1fe2c:	ldr	x0, [x25, #24]
   1fe30:	cbnz	x0, 1fe78 <omp_get_place_proc_ids@@OMP_4.5+0xcb8>
   1fe34:	ldr	x0, [x25, #8]
   1fe38:	mov	w24, #0x1                   	// #1
   1fe3c:	bl	88b0 <free@plt>
   1fe40:	mov	x0, x25
   1fe44:	bl	88b0 <free@plt>
   1fe48:	b	1fd14 <omp_get_place_proc_ids@@OMP_4.5+0xb54>
   1fe4c:	ldr	x0, [x23, #16]
   1fe50:	bl	88b0 <free@plt>
   1fe54:	mov	x0, x23
   1fe58:	bl	88b0 <free@plt>
   1fe5c:	ldp	x19, x20, [sp, #16]
   1fe60:	ldp	x21, x22, [sp, #32]
   1fe64:	ldp	x23, x24, [sp, #48]
   1fe68:	ldp	x25, x26, [sp, #64]
   1fe6c:	ldp	x27, x28, [sp, #80]
   1fe70:	ldp	x29, x30, [sp], #176
   1fe74:	ret
   1fe78:	ldr	x24, [x25, #56]
   1fe7c:	ldr	x26, [x25, #32]
   1fe80:	ldr	w0, [x24, #12]
   1fe84:	ldr	x2, [x24, #104]
   1fe88:	mov	x1, x26
   1fe8c:	blr	x2
   1fe90:	tst	w0, #0xff
   1fe94:	b.ne	1fe34 <omp_get_place_proc_ids@@OMP_4.5+0xc74>  // b.any
   1fe98:	add	x0, x24, #0xa8
   1fe9c:	bl	1f740 <omp_get_place_proc_ids@@OMP_4.5+0x580>
   1fea0:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1fea4:	mov	x1, x26
   1fea8:	add	x0, x0, #0xb28
   1feac:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   1feb0:	mov	w24, #0x1                   	// #1
   1feb4:	b	1fd8c <omp_get_place_proc_ids@@OMP_4.5+0xbcc>
   1feb8:	stp	x29, x30, [sp, #-48]!
   1febc:	add	x0, x0, #0xa8
   1fec0:	mov	x29, sp
   1fec4:	stp	x19, x20, [sp, #16]
   1fec8:	mov	x19, x1
   1fecc:	mov	x20, x2
   1fed0:	ldxr	w1, [x0]
   1fed4:	stlxr	w2, wzr, [x0]
   1fed8:	cbnz	w2, 1fed0 <omp_get_place_proc_ids@@OMP_4.5+0xd10>
   1fedc:	tbnz	w1, #31, 1fef8 <omp_get_place_proc_ids@@OMP_4.5+0xd38>
   1fee0:	ldr	x2, [x3]
   1fee4:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   1fee8:	ldp	x3, x4, [x19]
   1feec:	add	x0, x0, #0xb58
   1fef0:	ldr	x1, [x20]
   1fef4:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   1fef8:	str	x3, [sp, #40]
   1fefc:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   1ff00:	ldr	x3, [sp, #40]
   1ff04:	b	1fee0 <omp_get_place_proc_ids@@OMP_4.5+0xd20>
   1ff08:	stp	x29, x30, [sp, #-112]!
   1ff0c:	mov	x29, sp
   1ff10:	str	x21, [sp, #32]
   1ff14:	mov	x21, x1
   1ff18:	stp	x19, x20, [sp, #16]
   1ff1c:	mov	x19, x0
   1ff20:	add	x20, x0, #0xa8
   1ff24:	mov	w0, #0x1                   	// #1
   1ff28:	ldaxr	w1, [x20]
   1ff2c:	cbnz	w1, 1ff38 <omp_get_place_proc_ids@@OMP_4.5+0xd78>
   1ff30:	stxr	w2, w0, [x20]
   1ff34:	cbnz	w2, 1ff28 <omp_get_place_proc_ids@@OMP_4.5+0xd68>
   1ff38:	cmp	w1, #0x0
   1ff3c:	b.ne	1ffcc <omp_get_place_proc_ids@@OMP_4.5+0xe0c>  // b.any
   1ff40:	ldr	w0, [x19, #172]
   1ff44:	cmp	w0, #0x2
   1ff48:	b.eq	1ff8c <omp_get_place_proc_ids@@OMP_4.5+0xdcc>  // b.none
   1ff4c:	add	x2, x21, #0x1
   1ff50:	add	x0, x19, #0xa0
   1ff54:	add	x1, sp, #0x38
   1ff58:	stp	x21, x2, [sp, #56]
   1ff5c:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   1ff60:	mov	x19, x0
   1ff64:	ldxr	w0, [x20]
   1ff68:	stlxr	w1, wzr, [x20]
   1ff6c:	cbnz	w1, 1ff64 <omp_get_place_proc_ids@@OMP_4.5+0xda4>
   1ff70:	tbnz	w0, #31, 1ffb0 <omp_get_place_proc_ids@@OMP_4.5+0xdf0>
   1ff74:	cbz	x19, 1ff9c <omp_get_place_proc_ids@@OMP_4.5+0xddc>
   1ff78:	ldr	x0, [x19, #24]
   1ff7c:	ldp	x19, x20, [sp, #16]
   1ff80:	ldr	x21, [sp, #32]
   1ff84:	ldp	x29, x30, [sp], #112
   1ff88:	ret
   1ff8c:	ldxr	w0, [x20]
   1ff90:	stlxr	w1, wzr, [x20]
   1ff94:	cbnz	w1, 1ff8c <omp_get_place_proc_ids@@OMP_4.5+0xdcc>
   1ff98:	tbnz	w0, #31, 1ffbc <omp_get_place_proc_ids@@OMP_4.5+0xdfc>
   1ff9c:	mov	x0, #0x0                   	// #0
   1ffa0:	ldp	x19, x20, [sp, #16]
   1ffa4:	ldr	x21, [sp, #32]
   1ffa8:	ldp	x29, x30, [sp], #112
   1ffac:	ret
   1ffb0:	mov	x0, x20
   1ffb4:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   1ffb8:	b	1ff74 <omp_get_place_proc_ids@@OMP_4.5+0xdb4>
   1ffbc:	mov	x0, x20
   1ffc0:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   1ffc4:	mov	x0, #0x0                   	// #0
   1ffc8:	b	1ffa0 <omp_get_place_proc_ids@@OMP_4.5+0xde0>
   1ffcc:	mov	x0, x20
   1ffd0:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   1ffd4:	b	1ff40 <omp_get_place_proc_ids@@OMP_4.5+0xd80>
   1ffd8:	stp	x29, x30, [sp, #-208]!
   1ffdc:	mov	x29, sp
   1ffe0:	stp	x19, x20, [sp, #16]
   1ffe4:	mov	x20, x0
   1ffe8:	mov	w0, #0x7                   	// #7
   1ffec:	stp	x21, x22, [sp, #32]
   1fff0:	mov	w22, #0xff                  	// #255
   1fff4:	stp	x25, x26, [sp, #64]
   1fff8:	ands	w26, w5, #0xff
   1fffc:	csel	w22, w22, w0, ne  // ne = any
   20000:	str	x4, [sp, #104]
   20004:	cmp	x20, #0x0
   20008:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   2000c:	b.eq	20188 <omp_get_place_proc_ids@@OMP_4.5+0xfc8>  // b.none
   20010:	add	x0, x20, #0xa8
   20014:	stp	x23, x24, [sp, #48]
   20018:	mov	x23, x3
   2001c:	stp	x27, x28, [sp, #80]
   20020:	mov	x27, x1
   20024:	mov	x21, x2
   20028:	mov	x2, x0
   2002c:	mov	w0, #0x1                   	// #1
   20030:	str	x2, [sp, #112]
   20034:	ldaxr	w1, [x2]
   20038:	cbnz	w1, 20044 <omp_get_place_proc_ids@@OMP_4.5+0xe84>
   2003c:	stxr	w3, w0, [x2]
   20040:	cbnz	w3, 20034 <omp_get_place_proc_ids@@OMP_4.5+0xe74>
   20044:	cmp	w1, #0x0
   20048:	b.ne	20270 <omp_get_place_proc_ids@@OMP_4.5+0x10b0>  // b.any
   2004c:	ldr	w0, [x20, #172]
   20050:	mov	x19, #0x0                   	// #0
   20054:	cmp	w0, #0x2
   20058:	b.eq	20214 <omp_get_place_proc_ids@@OMP_4.5+0x1054>  // b.none
   2005c:	add	x25, sp, #0x98
   20060:	add	x24, x20, #0xa0
   20064:	b	20074 <omp_get_place_proc_ids@@OMP_4.5+0xeb4>
   20068:	add	x19, x19, #0x1
   2006c:	cmp	x27, x19
   20070:	b.ls	2016c <omp_get_place_proc_ids@@OMP_4.5+0xfac>  // b.plast
   20074:	ldr	x2, [x23, x19, lsl #3]
   20078:	cbz	x2, 20068 <omp_get_place_proc_ids@@OMP_4.5+0xea8>
   2007c:	ldr	x4, [x21, x19, lsl #3]
   20080:	mov	x1, x25
   20084:	mov	x0, x24
   20088:	add	x2, x2, x4
   2008c:	stp	x4, x2, [sp, #152]
   20090:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   20094:	mov	x28, x0
   20098:	cbz	x0, 20068 <omp_get_place_proc_ids@@OMP_4.5+0xea8>
   2009c:	sxtw	x0, w19
   200a0:	ldr	x1, [sp, #104]
   200a4:	cbz	w26, 2019c <omp_get_place_proc_ids@@OMP_4.5+0xfdc>
   200a8:	ldrh	w5, [x1, x0, lsl #1]
   200ac:	ldr	x1, [x28]
   200b0:	ldr	x8, [sp, #152]
   200b4:	cmp	x1, x8
   200b8:	b.hi	2023c <omp_get_place_proc_ids@@OMP_4.5+0x107c>  // b.pmore
   200bc:	ldr	x0, [x28, #8]
   200c0:	ldr	x3, [sp, #160]
   200c4:	cmp	x0, x3
   200c8:	b.cc	2023c <omp_get_place_proc_ids@@OMP_4.5+0x107c>  // b.lo, b.ul, b.last
   200cc:	ldp	x2, x0, [x28, #16]
   200d0:	and	w5, w22, w5
   200d4:	mov	w4, #0xd                   	// #13
   200d8:	and	w4, w5, w4
   200dc:	sub	x3, x3, x8
   200e0:	cmp	w4, #0x1
   200e4:	ldr	x2, [x2, #16]
   200e8:	add	x0, x8, x0
   200ec:	sub	x2, x2, x1
   200f0:	add	x28, x2, x0
   200f4:	b.eq	201a4 <omp_get_place_proc_ids@@OMP_4.5+0xfe4>  // b.none
   200f8:	and	w5, w5, #0xe
   200fc:	cmp	w5, #0x2
   20100:	b.ne	20068 <omp_get_place_proc_ids@@OMP_4.5+0xea8>  // b.any
   20104:	ldr	w0, [x20, #12]
   20108:	mov	x1, x8
   2010c:	ldr	x4, [x20, #112]
   20110:	mov	x2, x28
   20114:	stp	x8, x3, [sp, #120]
   20118:	blr	x4
   2011c:	tst	w0, #0xff
   20120:	ldp	x8, x3, [sp, #120]
   20124:	b.ne	20068 <omp_get_place_proc_ids@@OMP_4.5+0xea8>  // b.any
   20128:	ldr	x0, [sp, #112]
   2012c:	str	x8, [sp, #104]
   20130:	str	x3, [sp, #120]
   20134:	bl	1f740 <omp_get_place_proc_ids@@OMP_4.5+0x580>
   20138:	ldr	x8, [sp, #104]
   2013c:	adrp	x4, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   20140:	ldr	x3, [sp, #120]
   20144:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   20148:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   2014c:	add	x4, x4, #0x2e8
   20150:	add	x6, x8, x3
   20154:	add	x1, x1, #0xa98
   20158:	add	x0, x0, #0xaa0
   2015c:	mov	x2, x28
   20160:	mov	x5, x8
   20164:	add	x3, x28, x3
   20168:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2016c:	ldr	x1, [sp, #112]
   20170:	ldxr	w0, [x1]
   20174:	stlxr	w2, wzr, [x1]
   20178:	cbnz	w2, 20170 <omp_get_place_proc_ids@@OMP_4.5+0xfb0>
   2017c:	tbnz	w0, #31, 20228 <omp_get_place_proc_ids@@OMP_4.5+0x1068>
   20180:	ldp	x23, x24, [sp, #48]
   20184:	ldp	x27, x28, [sp, #80]
   20188:	ldp	x19, x20, [sp, #16]
   2018c:	ldp	x21, x22, [sp, #32]
   20190:	ldp	x25, x26, [sp, #64]
   20194:	ldp	x29, x30, [sp], #208
   20198:	ret
   2019c:	ldrb	w5, [x1, x0]
   201a0:	b	200ac <omp_get_place_proc_ids@@OMP_4.5+0xeec>
   201a4:	ldr	w0, [x20, #12]
   201a8:	mov	x2, x8
   201ac:	ldr	x4, [x20, #120]
   201b0:	mov	x1, x28
   201b4:	stp	x8, x3, [sp, #120]
   201b8:	str	w5, [sp, #140]
   201bc:	blr	x4
   201c0:	ldr	w5, [sp, #140]
   201c4:	tst	w0, #0xff
   201c8:	ldp	x8, x3, [sp, #120]
   201cc:	b.ne	200f8 <omp_get_place_proc_ids@@OMP_4.5+0xf38>  // b.any
   201d0:	ldr	x0, [sp, #112]
   201d4:	str	x8, [sp, #104]
   201d8:	str	x3, [sp, #120]
   201dc:	bl	1f740 <omp_get_place_proc_ids@@OMP_4.5+0x580>
   201e0:	ldr	x8, [sp, #104]
   201e4:	adrp	x4, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   201e8:	ldr	x3, [sp, #120]
   201ec:	adrp	x1, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   201f0:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   201f4:	add	x4, x4, #0xa98
   201f8:	add	x6, x28, x3
   201fc:	add	x1, x1, #0x2e8
   20200:	mov	x5, x28
   20204:	add	x0, x0, #0xaa0
   20208:	add	x3, x8, x3
   2020c:	mov	x2, x8
   20210:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   20214:	ldr	x1, [sp, #112]
   20218:	ldxr	w0, [x1]
   2021c:	stlxr	w2, wzr, [x1]
   20220:	cbnz	w2, 20218 <omp_get_place_proc_ids@@OMP_4.5+0x1058>
   20224:	tbz	w0, #31, 20180 <omp_get_place_proc_ids@@OMP_4.5+0xfc0>
   20228:	ldr	x0, [sp, #112]
   2022c:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   20230:	ldp	x23, x24, [sp, #48]
   20234:	ldp	x27, x28, [sp, #80]
   20238:	b	20188 <omp_get_place_proc_ids@@OMP_4.5+0xfc8>
   2023c:	ldr	x1, [sp, #112]
   20240:	ldxr	w0, [x1]
   20244:	stlxr	w2, wzr, [x1]
   20248:	cbnz	w2, 20240 <omp_get_place_proc_ids@@OMP_4.5+0x1080>
   2024c:	tbnz	w0, #31, 20264 <omp_get_place_proc_ids@@OMP_4.5+0x10a4>
   20250:	ldp	x3, x4, [x28]
   20254:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   20258:	ldp	x1, x2, [sp, #152]
   2025c:	add	x0, x0, #0xba8
   20260:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   20264:	ldr	x0, [sp, #112]
   20268:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   2026c:	b	20250 <omp_get_place_proc_ids@@OMP_4.5+0x1090>
   20270:	ldr	x0, [sp, #112]
   20274:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   20278:	b	2004c <omp_get_place_proc_ids@@OMP_4.5+0xe8c>
   2027c:	nop
   20280:	stp	x29, x30, [sp, #-160]!
   20284:	mov	x5, x2
   20288:	mov	x2, x3
   2028c:	mov	x29, sp
   20290:	stp	x25, x26, [sp, #64]
   20294:	mov	x25, x0
   20298:	and	w0, w4, #0xff
   2029c:	stp	x21, x22, [sp, #32]
   202a0:	add	x3, sp, #0x98
   202a4:	str	w0, [sp, #140]
   202a8:	ldr	x0, [x5, #16]
   202ac:	stp	x23, x24, [sp, #48]
   202b0:	ldr	x21, [x5, #24]
   202b4:	stp	x27, x28, [sp, #80]
   202b8:	ldp	x27, x23, [x5]
   202bc:	sub	x21, x21, x0
   202c0:	stp	x19, x20, [sp, #16]
   202c4:	lsr	x4, x21, #63
   202c8:	add	x21, x4, x21, asr #3
   202cc:	str	xzr, [sp, #152]
   202d0:	ldr	x4, [x25, #80]
   202d4:	asr	x20, x21, #1
   202d8:	sub	x23, x23, x27
   202dc:	stp	x20, x0, [sp, #120]
   202e0:	ldr	w0, [x25, #12]
   202e4:	asr	x23, x23, #3
   202e8:	add	w24, w20, w23
   202ec:	blr	x4
   202f0:	mov	w19, w0
   202f4:	cmp	w24, w0
   202f8:	b.ne	204d8 <omp_get_place_proc_ids@@OMP_4.5+0x1318>  // b.any
   202fc:	mov	x0, #0x40                  	// #64
   20300:	bl	b2f8 <fprintf@plt+0x2838>
   20304:	mov	w1, #0x48                  	// #72
   20308:	mov	x22, x0
   2030c:	smull	x0, w24, w1
   20310:	mov	x24, #0xffffffffffffffff    	// #-1
   20314:	bl	b2f8 <fprintf@plt+0x2838>
   20318:	stp	x24, x0, [x22]
   2031c:	mov	x19, x0
   20320:	movi	v0.4s, #0x0
   20324:	stp	xzr, x25, [x22, #48]
   20328:	cmp	w23, #0x0
   2032c:	stp	q0, q0, [x22, #16]
   20330:	b.le	203a0 <omp_get_place_proc_ids@@OMP_4.5+0x11e0>
   20334:	mov	w28, w23
   20338:	add	x21, x25, #0xa0
   2033c:	mov	x20, x0
   20340:	mov	x26, #0x0                   	// #0
   20344:	str	q0, [sp, #96]
   20348:	lsl	x4, x26, #4
   2034c:	ldr	x3, [x27, x26, lsl #3]
   20350:	str	x22, [x20, #16]
   20354:	ldr	x5, [sp, #152]
   20358:	add	x6, x3, #0x1
   2035c:	stp	x3, x6, [x20]
   20360:	mov	x1, x20
   20364:	add	x26, x26, #0x1
   20368:	ldr	x3, [x5, x4]
   2036c:	stp	x3, x24, [x20, #24]
   20370:	mov	x0, x21
   20374:	ldr	q0, [sp, #96]
   20378:	str	xzr, [x20, #64]
   2037c:	add	x20, x20, #0x48
   20380:	stur	q0, [x20, #-24]
   20384:	bl	25350 <omp_pause_resource_all@@OMP_5.0+0x78>
   20388:	cmp	w28, w26
   2038c:	b.gt	20348 <omp_get_place_proc_ids@@OMP_4.5+0x1188>
   20390:	sub	w0, w23, #0x1
   20394:	add	x0, x0, #0x1
   20398:	add	x0, x0, x0, lsl #3
   2039c:	add	x19, x19, x0, lsl #3
   203a0:	ldr	w0, [sp, #120]
   203a4:	cmp	w0, #0x0
   203a8:	b.le	20460 <omp_get_place_proc_ids@@OMP_4.5+0x12a0>
   203ac:	ldr	w0, [sp, #120]
   203b0:	sbfiz	x23, x23, #4, #32
   203b4:	ldr	x20, [sp, #128]
   203b8:	sub	w21, w0, #0x1
   203bc:	add	x21, x21, #0x1
   203c0:	add	x28, x25, #0xa0
   203c4:	sub	x23, x23, x20
   203c8:	mov	x24, #0xffffffffffffffff    	// #-1
   203cc:	add	x21, x21, x21, lsl #3
   203d0:	mov	x27, #0xfffffffffffffffe    	// #-2
   203d4:	add	x21, x19, x21, lsl #3
   203d8:	b	203fc <omp_get_place_proc_ids@@OMP_4.5+0x123c>
   203dc:	str	x24, [x19, #32]
   203e0:	add	x19, x19, #0x48
   203e4:	stp	xzr, xzr, [x19, #-24]
   203e8:	add	x20, x20, #0x10
   203ec:	stur	xzr, [x19, #-8]
   203f0:	bl	25350 <omp_pause_resource_all@@OMP_5.0+0x78>
   203f4:	cmp	x19, x21
   203f8:	b.eq	20460 <omp_get_place_proc_ids@@OMP_4.5+0x12a0>  // b.none
   203fc:	ldr	x0, [sp, #152]
   20400:	add	x1, x20, x23
   20404:	ldr	x2, [x20, #8]
   20408:	add	x3, x0, x1
   2040c:	ldr	x1, [x0, x1]
   20410:	ldr	x0, [x3, #8]
   20414:	sub	x0, x0, x1
   20418:	cmp	x2, x0
   2041c:	b.ne	20484 <omp_get_place_proc_ids@@OMP_4.5+0x12c4>  // b.any
   20420:	ldr	x3, [x20]
   20424:	and	x0, x2, #0x7fffffffffffffff
   20428:	stp	x22, x1, [x19, #16]
   2042c:	mov	x1, x19
   20430:	add	x0, x0, x3
   20434:	stp	x3, x0, [x19]
   20438:	mov	x0, x28
   2043c:	tbz	x2, #63, 203dc <omp_get_place_proc_ids@@OMP_4.5+0x121c>
   20440:	str	x27, [x19, #32]
   20444:	add	x19, x19, #0x48
   20448:	stp	xzr, xzr, [x19, #-24]
   2044c:	add	x20, x20, #0x10
   20450:	stur	xzr, [x19, #-8]
   20454:	bl	25350 <omp_pause_resource_all@@OMP_5.0+0x78>
   20458:	cmp	x19, x21
   2045c:	b.ne	203fc <omp_get_place_proc_ids@@OMP_4.5+0x123c>  // b.any
   20460:	ldr	x0, [sp, #152]
   20464:	bl	88b0 <free@plt>
   20468:	ldp	x19, x20, [sp, #16]
   2046c:	ldp	x21, x22, [sp, #32]
   20470:	ldp	x23, x24, [sp, #48]
   20474:	ldp	x25, x26, [sp, #64]
   20478:	ldp	x27, x28, [sp, #80]
   2047c:	ldp	x29, x30, [sp], #160
   20480:	ret
   20484:	add	x0, x25, #0xa8
   20488:	ldxr	w1, [x0]
   2048c:	stlxr	w2, wzr, [x0]
   20490:	cbnz	w2, 20488 <omp_get_place_proc_ids@@OMP_4.5+0x12c8>
   20494:	tbnz	w1, #31, 204d0 <omp_get_place_proc_ids@@OMP_4.5+0x1310>
   20498:	ldr	w0, [sp, #140]
   2049c:	cbnz	w0, 204ac <omp_get_place_proc_ids@@OMP_4.5+0x12ec>
   204a0:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   204a4:	add	x0, x0, #0xc28
   204a8:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   204ac:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   204b0:	add	x0, x0, #0x560
   204b4:	add	x0, x0, #0x10
   204b8:	ldxr	w1, [x0]
   204bc:	stlxr	w2, wzr, [x0]
   204c0:	cbnz	w2, 204b8 <omp_get_place_proc_ids@@OMP_4.5+0x12f8>
   204c4:	tbz	w1, #31, 204a0 <omp_get_place_proc_ids@@OMP_4.5+0x12e0>
   204c8:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   204cc:	b	204a0 <omp_get_place_proc_ids@@OMP_4.5+0x12e0>
   204d0:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   204d4:	b	20498 <omp_get_place_proc_ids@@OMP_4.5+0x12d8>
   204d8:	add	x0, x25, #0xa8
   204dc:	bl	1f740 <omp_get_place_proc_ids@@OMP_4.5+0x580>
   204e0:	ldr	w0, [sp, #140]
   204e4:	cbnz	w0, 204fc <omp_get_place_proc_ids@@OMP_4.5+0x133c>
   204e8:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   204ec:	mov	w2, w19
   204f0:	mov	w1, w24
   204f4:	add	x0, x0, #0xbe8
   204f8:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   204fc:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   20500:	add	x0, x0, #0x560
   20504:	add	x0, x0, #0x10
   20508:	bl	1f740 <omp_get_place_proc_ids@@OMP_4.5+0x580>
   2050c:	b	204e8 <omp_get_place_proc_ids@@OMP_4.5+0x1328>
   20510:	stp	x29, x30, [sp, #-192]!
   20514:	mov	x29, sp
   20518:	stp	x21, x22, [sp, #32]
   2051c:	mov	x21, x1
   20520:	stp	x23, x24, [sp, #48]
   20524:	mov	x23, x3
   20528:	mov	x24, x4
   2052c:	stp	x25, x26, [sp, #64]
   20530:	mov	x25, x0
   20534:	add	x0, x0, #0xa8
   20538:	str	x2, [sp, #104]
   2053c:	mov	x2, x0
   20540:	mov	w0, #0x1                   	// #1
   20544:	str	x2, [sp, #120]
   20548:	ldaxr	w1, [x2]
   2054c:	cbnz	w1, 20558 <omp_get_place_proc_ids@@OMP_4.5+0x1398>
   20550:	stxr	w3, w0, [x2]
   20554:	cbnz	w3, 20548 <omp_get_place_proc_ids@@OMP_4.5+0x1388>
   20558:	cmp	w1, #0x0
   2055c:	b.ne	2084c <omp_get_place_proc_ids@@OMP_4.5+0x168c>  // b.any
   20560:	ldr	w0, [x25, #172]
   20564:	cmp	w0, #0x2
   20568:	b.eq	207dc <omp_get_place_proc_ids@@OMP_4.5+0x161c>  // b.none
   2056c:	mov	x26, #0x0                   	// #0
   20570:	cbz	x21, 206a8 <omp_get_place_proc_ids@@OMP_4.5+0x14e8>
   20574:	stp	x19, x20, [sp, #16]
   20578:	add	x20, x25, #0xa0
   2057c:	stp	x27, x28, [sp, #80]
   20580:	add	x28, sp, #0x88
   20584:	nop
   20588:	ldrh	w2, [x24, x26, lsl #1]
   2058c:	and	w22, w2, #0xff
   20590:	cmp	w22, #0x1f
   20594:	b.hi	205b0 <omp_get_place_proc_ids@@OMP_4.5+0x13f0>  // b.pmore
   20598:	mov	x0, #0x1                   	// #1
   2059c:	mov	x1, #0x8084                	// #32900
   205a0:	lsl	x0, x0, x22
   205a4:	movk	x1, #0x8084, lsl #16
   205a8:	tst	x0, x1
   205ac:	b.ne	205d4 <omp_get_place_proc_ids@@OMP_4.5+0x1414>  // b.any
   205b0:	ldr	x1, [sp, #120]
   205b4:	ldxr	w0, [x1]
   205b8:	stlxr	w2, wzr, [x1]
   205bc:	cbnz	w2, 205b4 <omp_get_place_proc_ids@@OMP_4.5+0x13f4>
   205c0:	tbnz	w0, #31, 20858 <omp_get_place_proc_ids@@OMP_4.5+0x1698>
   205c4:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   205c8:	mov	w1, w22
   205cc:	add	x0, x0, #0xc58
   205d0:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   205d4:	ldr	x0, [sp, #104]
   205d8:	cmp	w22, #0x1f
   205dc:	and	w3, w22, #0xffffffef
   205e0:	cset	w19, eq  // eq = none
   205e4:	cmp	w3, #0xf
   205e8:	ldr	x1, [x0, x26, lsl #3]
   205ec:	ldr	x0, [x23, x26, lsl #3]
   205f0:	add	x0, x1, x0
   205f4:	stp	x1, x0, [sp, #136]
   205f8:	b.ne	206d0 <omp_get_place_proc_ids@@OMP_4.5+0x1510>  // b.any
   205fc:	cmp	x1, x0
   20600:	b.ne	206d0 <omp_get_place_proc_ids@@OMP_4.5+0x1510>  // b.any
   20604:	add	x3, x1, #0x1
   20608:	mov	x0, x20
   2060c:	mov	x1, x28
   20610:	str	x3, [sp, #144]
   20614:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   20618:	mov	x27, x0
   2061c:	ldr	x1, [sp, #144]
   20620:	sub	x1, x1, #0x1
   20624:	str	x1, [sp, #144]
   20628:	cbz	x27, 20694 <omp_get_place_proc_ids@@OMP_4.5+0x14d4>
   2062c:	ldr	x3, [x27, #32]
   20630:	cmp	w22, #0x7
   20634:	csinc	w19, w19, wzr, ne  // ne = any
   20638:	sub	x1, x3, #0x1
   2063c:	cmn	x1, #0x3
   20640:	b.hi	20700 <omp_get_place_proc_ids@@OMP_4.5+0x1540>  // b.pmore
   20644:	str	x1, [x27, #32]
   20648:	cbz	w19, 206e8 <omp_get_place_proc_ids@@OMP_4.5+0x1528>
   2064c:	str	xzr, [x27, #32]
   20650:	cmp	w22, #0x2
   20654:	b.eq	20720 <omp_get_place_proc_ids@@OMP_4.5+0x1560>  // b.none
   20658:	cmp	w22, #0x12
   2065c:	b.eq	20720 <omp_get_place_proc_ids@@OMP_4.5+0x1560>  // b.none
   20660:	mov	x1, x27
   20664:	mov	x0, x20
   20668:	bl	25580 <omp_pause_resource_all@@OMP_5.0+0x2a8>
   2066c:	ldr	x1, [x27, #48]
   20670:	cbz	x1, 2067c <omp_get_place_proc_ids@@OMP_4.5+0x14bc>
   20674:	mov	x0, x20
   20678:	bl	25350 <omp_pause_resource_all@@OMP_5.0+0x78>
   2067c:	ldr	x19, [x27, #16]
   20680:	ldr	x0, [x19]
   20684:	cmp	x0, #0x1
   20688:	b.ls	20780 <omp_get_place_proc_ids@@OMP_4.5+0x15c0>  // b.plast
   2068c:	sub	x0, x0, #0x1
   20690:	str	x0, [x19]
   20694:	add	x26, x26, #0x1
   20698:	cmp	x21, x26
   2069c:	b.ne	20588 <omp_get_place_proc_ids@@OMP_4.5+0x13c8>  // b.any
   206a0:	ldp	x19, x20, [sp, #16]
   206a4:	ldp	x27, x28, [sp, #80]
   206a8:	ldr	x1, [sp, #120]
   206ac:	ldxr	w0, [x1]
   206b0:	stlxr	w2, wzr, [x1]
   206b4:	cbnz	w2, 206ac <omp_get_place_proc_ids@@OMP_4.5+0x14ec>
   206b8:	tbnz	w0, #31, 207f0 <omp_get_place_proc_ids@@OMP_4.5+0x1630>
   206bc:	ldp	x21, x22, [sp, #32]
   206c0:	ldp	x23, x24, [sp, #48]
   206c4:	ldp	x25, x26, [sp, #64]
   206c8:	ldp	x29, x30, [sp], #192
   206cc:	ret
   206d0:	mov	x1, x28
   206d4:	mov	x0, x20
   206d8:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   206dc:	mov	x27, x0
   206e0:	b	20628 <omp_get_place_proc_ids@@OMP_4.5+0x1468>
   206e4:	mov	x1, x3
   206e8:	cmp	w22, #0x2
   206ec:	b.eq	20778 <omp_get_place_proc_ids@@OMP_4.5+0x15b8>  // b.none
   206f0:	cmp	w22, #0x12
   206f4:	b.eq	20720 <omp_get_place_proc_ids@@OMP_4.5+0x1560>  // b.none
   206f8:	cbnz	x1, 20694 <omp_get_place_proc_ids@@OMP_4.5+0x14d4>
   206fc:	b	20660 <omp_get_place_proc_ids@@OMP_4.5+0x14a0>
   20700:	cbz	w19, 206e4 <omp_get_place_proc_ids@@OMP_4.5+0x1524>
   20704:	cmn	x3, #0x1
   20708:	b.ne	2064c <omp_get_place_proc_ids@@OMP_4.5+0x148c>  // b.any
   2070c:	cmp	w22, #0x2
   20710:	b.eq	20694 <omp_get_place_proc_ids@@OMP_4.5+0x14d4>  // b.none
   20714:	cmp	w22, #0x12
   20718:	b.ne	20694 <omp_get_place_proc_ids@@OMP_4.5+0x14d4>  // b.any
   2071c:	nop
   20720:	ldr	x2, [x27, #16]
   20724:	ldp	x5, x3, [sp, #136]
   20728:	str	x5, [sp, #112]
   2072c:	ldr	x0, [x27]
   20730:	ldr	x19, [x2, #16]
   20734:	ldr	x2, [x27, #24]
   20738:	sub	x19, x19, x0
   2073c:	ldr	w0, [x25, #12]
   20740:	sub	x22, x3, x5
   20744:	ldr	x7, [x25, #112]
   20748:	add	x2, x5, x2
   2074c:	add	x19, x19, x2
   20750:	mov	x1, x5
   20754:	mov	x2, x19
   20758:	mov	x3, x22
   2075c:	blr	x7
   20760:	tst	w0, #0xff
   20764:	ldr	x5, [sp, #112]
   20768:	b.eq	207fc <omp_get_place_proc_ids@@OMP_4.5+0x163c>  // b.none
   2076c:	ldr	x1, [x27, #32]
   20770:	cbnz	x1, 20694 <omp_get_place_proc_ids@@OMP_4.5+0x14d4>
   20774:	b	20660 <omp_get_place_proc_ids@@OMP_4.5+0x14a0>
   20778:	cbnz	x1, 20694 <omp_get_place_proc_ids@@OMP_4.5+0x14d4>
   2077c:	b	20720 <omp_get_place_proc_ids@@OMP_4.5+0x1560>
   20780:	ldr	x0, [x19, #24]
   20784:	cbnz	x0, 2079c <omp_get_place_proc_ids@@OMP_4.5+0x15dc>
   20788:	ldr	x0, [x19, #8]
   2078c:	bl	88b0 <free@plt>
   20790:	mov	x0, x19
   20794:	bl	88b0 <free@plt>
   20798:	b	20694 <omp_get_place_proc_ids@@OMP_4.5+0x14d4>
   2079c:	ldr	x2, [x19, #56]
   207a0:	str	x2, [sp, #112]
   207a4:	ldr	x22, [x19, #32]
   207a8:	ldr	w0, [x2, #12]
   207ac:	ldr	x3, [x2, #104]
   207b0:	mov	x1, x22
   207b4:	blr	x3
   207b8:	tst	w0, #0xff
   207bc:	ldr	x2, [sp, #112]
   207c0:	b.ne	20788 <omp_get_place_proc_ids@@OMP_4.5+0x15c8>  // b.any
   207c4:	add	x0, x2, #0xa8
   207c8:	bl	1f740 <omp_get_place_proc_ids@@OMP_4.5+0x580>
   207cc:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   207d0:	mov	x1, x22
   207d4:	add	x0, x0, #0xb28
   207d8:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   207dc:	ldr	x1, [sp, #120]
   207e0:	ldxr	w0, [x1]
   207e4:	stlxr	w2, wzr, [x1]
   207e8:	cbnz	w2, 207e0 <omp_get_place_proc_ids@@OMP_4.5+0x1620>
   207ec:	tbz	w0, #31, 206bc <omp_get_place_proc_ids@@OMP_4.5+0x14fc>
   207f0:	ldr	x0, [sp, #120]
   207f4:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   207f8:	b	206bc <omp_get_place_proc_ids@@OMP_4.5+0x14fc>
   207fc:	ldr	x1, [sp, #120]
   20800:	ldxr	w0, [x1]
   20804:	stlxr	w2, wzr, [x1]
   20808:	cbnz	w2, 20800 <omp_get_place_proc_ids@@OMP_4.5+0x1640>
   2080c:	tbnz	w0, #31, 20838 <omp_get_place_proc_ids@@OMP_4.5+0x1678>
   20810:	adrp	x4, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   20814:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   20818:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   2081c:	add	x4, x4, #0x2e8
   20820:	add	x1, x1, #0xa98
   20824:	add	x6, x5, x22
   20828:	add	x0, x0, #0xaa0
   2082c:	add	x3, x19, x22
   20830:	mov	x2, x19
   20834:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   20838:	ldr	x0, [sp, #120]
   2083c:	str	x5, [sp, #104]
   20840:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   20844:	ldr	x5, [sp, #104]
   20848:	b	20810 <omp_get_place_proc_ids@@OMP_4.5+0x1650>
   2084c:	ldr	x0, [sp, #120]
   20850:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   20854:	b	20560 <omp_get_place_proc_ids@@OMP_4.5+0x13a0>
   20858:	ldr	x0, [sp, #120]
   2085c:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   20860:	b	205c4 <omp_get_place_proc_ids@@OMP_4.5+0x1404>
   20864:	nop
   20868:	stp	x29, x30, [sp, #-176]!
   2086c:	mov	x29, sp
   20870:	stp	x19, x20, [sp, #16]
   20874:	mov	x19, x3
   20878:	mov	x20, x2
   2087c:	ldr	x8, [x4, x3, lsl #3]
   20880:	stp	x25, x26, [sp, #64]
   20884:	mov	x25, x0
   20888:	ldr	x3, [x5, x3, lsl #3]
   2088c:	mov	x26, x6
   20890:	ldr	x0, [x0, #56]
   20894:	add	x3, x3, x8
   20898:	stp	x23, x24, [sp, #48]
   2089c:	add	x24, sp, #0x78
   208a0:	add	x23, x0, #0xa0
   208a4:	stp	x21, x22, [sp, #32]
   208a8:	mov	x21, x1
   208ac:	mov	x1, x24
   208b0:	stp	x27, x28, [sp, #80]
   208b4:	mov	x27, x4
   208b8:	mov	x28, x5
   208bc:	stp	x0, x7, [sp, #96]
   208c0:	mov	x0, x23
   208c4:	stp	x8, x3, [sp, #120]
   208c8:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   208cc:	ldrh	w26, [x26, w19, sxtw #1]
   208d0:	cbz	x0, 208e8 <omp_get_place_proc_ids@@OMP_4.5+0x1728>
   208d4:	mov	x22, x0
   208d8:	ldr	x0, [x21, #16]
   208dc:	ldr	x4, [x22, #16]
   208e0:	cmp	x4, x0
   208e4:	b.eq	20ad0 <omp_get_place_proc_ids@@OMP_4.5+0x1910>  // b.none
   208e8:	ldr	x0, [x28, x19, lsl #3]
   208ec:	cbnz	x0, 20ba0 <omp_get_place_proc_ids@@OMP_4.5+0x19e0>
   208f0:	add	x20, x27, x20, lsl #3
   208f4:	ldr	x0, [sp, #120]
   208f8:	ldur	x1, [x20, #-8]
   208fc:	cmp	x1, x0
   20900:	b.cc	209f8 <omp_get_place_proc_ids@@OMP_4.5+0x1838>  // b.lo, b.ul, b.last
   20904:	ldr	x4, [sp, #128]
   20908:	add	x4, x4, #0x1
   2090c:	mov	x1, x24
   20910:	mov	x0, x23
   20914:	str	x4, [sp, #128]
   20918:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   2091c:	mov	x20, x0
   20920:	ldr	x4, [sp, #128]
   20924:	sub	x4, x4, #0x1
   20928:	str	x4, [sp, #128]
   2092c:	cbz	x0, 20ba0 <omp_get_place_proc_ids@@OMP_4.5+0x19e0>
   20930:	ldr	x5, [x0, #16]
   20934:	ldr	x0, [x21, #16]
   20938:	cmp	x5, x0
   2093c:	b.ne	20ba0 <omp_get_place_proc_ids@@OMP_4.5+0x19e0>  // b.any
   20940:	ldr	x6, [x20]
   20944:	ldr	x2, [x21]
   20948:	ldr	x1, [x20, #24]
   2094c:	sub	x2, x6, x2
   20950:	ldr	x0, [x21, #24]
   20954:	sub	x0, x1, x0
   20958:	cmp	x2, x0
   2095c:	b.ne	20ba0 <omp_get_place_proc_ids@@OMP_4.5+0x19e0>  // b.any
   20960:	and	w0, w26, #0xff
   20964:	add	x19, x25, x19, lsl #5
   20968:	and	w7, w26, #0xe
   2096c:	sub	w3, w0, #0x12
   20970:	ldr	x2, [sp, #120]
   20974:	cmp	w7, #0x2
   20978:	and	w3, w3, #0xff
   2097c:	cset	w9, eq  // eq = none
   20980:	cmp	w3, #0x1
   20984:	sub	x7, x2, x6
   20988:	cset	w8, ls  // ls = plast
   2098c:	sub	x3, x4, x2
   20990:	str	x20, [x19, #64]
   20994:	tst	x26, #0x80
   20998:	strb	w9, [x19, #72]
   2099c:	add	x1, x1, x2
   209a0:	strb	w8, [x19, #73]
   209a4:	ccmp	x6, x2, #0x2, eq  // eq = none
   209a8:	stp	x7, x3, [x19, #80]
   209ac:	b.hi	20bc8 <omp_get_place_proc_ids@@OMP_4.5+0x1a08>  // b.pmore
   209b0:	ldr	x7, [x20, #8]
   209b4:	cmp	x4, x7
   209b8:	b.hi	20bc8 <omp_get_place_proc_ids@@OMP_4.5+0x1a08>  // b.pmore
   209bc:	and	w0, w0, #0xfffffffd
   209c0:	cmp	w0, #0x11
   209c4:	b.eq	20b70 <omp_get_place_proc_ids@@OMP_4.5+0x19b0>  // b.none
   209c8:	ldr	x0, [x20, #32]
   209cc:	cmn	x0, #0x1
   209d0:	b.eq	209dc <omp_get_place_proc_ids@@OMP_4.5+0x181c>  // b.none
   209d4:	add	x0, x0, #0x1
   209d8:	str	x0, [x20, #32]
   209dc:	ldp	x19, x20, [sp, #16]
   209e0:	ldp	x21, x22, [sp, #32]
   209e4:	ldp	x23, x24, [sp, #48]
   209e8:	ldp	x25, x26, [sp, #64]
   209ec:	ldp	x27, x28, [sp, #80]
   209f0:	ldp	x29, x30, [sp], #176
   209f4:	ret
   209f8:	sub	x3, x0, #0x1
   209fc:	mov	x1, x24
   20a00:	mov	x0, x23
   20a04:	str	x3, [sp, #120]
   20a08:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   20a0c:	mov	x20, x0
   20a10:	ldr	x2, [sp, #120]
   20a14:	add	x2, x2, #0x1
   20a18:	str	x2, [sp, #120]
   20a1c:	cbz	x0, 20904 <omp_get_place_proc_ids@@OMP_4.5+0x1744>
   20a20:	ldr	x0, [x0, #16]
   20a24:	ldr	x1, [x21, #16]
   20a28:	ldr	x4, [sp, #128]
   20a2c:	cmp	x0, x1
   20a30:	b.ne	20908 <omp_get_place_proc_ids@@OMP_4.5+0x1748>  // b.any
   20a34:	ldr	x8, [x20]
   20a38:	ldr	x7, [x21]
   20a3c:	ldr	x3, [x20, #24]
   20a40:	sub	x7, x8, x7
   20a44:	ldr	x9, [x21, #24]
   20a48:	add	x1, x2, x3
   20a4c:	sub	x3, x3, x9
   20a50:	cmp	x7, x3
   20a54:	b.ne	20908 <omp_get_place_proc_ids@@OMP_4.5+0x1748>  // b.any
   20a58:	and	w5, w26, #0xff
   20a5c:	add	x19, x25, x19, lsl #5
   20a60:	and	w6, w26, #0xe
   20a64:	sub	w3, w5, #0x12
   20a68:	cmp	w6, #0x2
   20a6c:	and	w3, w3, #0xff
   20a70:	cset	w9, eq  // eq = none
   20a74:	cmp	w3, #0x1
   20a78:	cset	w7, ls  // ls = plast
   20a7c:	sub	x6, x2, x8
   20a80:	sub	x3, x4, x2
   20a84:	str	x20, [x19, #64]
   20a88:	strb	w9, [x19, #72]
   20a8c:	tst	x26, #0x80
   20a90:	strb	w7, [x19, #73]
   20a94:	ccmp	x2, x8, #0x0, eq  // eq = none
   20a98:	stp	x6, x3, [x19, #80]
   20a9c:	b.cc	20c18 <omp_get_place_proc_ids@@OMP_4.5+0x1a58>  // b.lo, b.ul, b.last
   20aa0:	ldr	x6, [x20, #8]
   20aa4:	cmp	x6, x4
   20aa8:	b.cc	20c18 <omp_get_place_proc_ids@@OMP_4.5+0x1a58>  // b.lo, b.ul, b.last
   20aac:	and	w5, w5, #0xfffffffd
   20ab0:	cmp	w5, #0x11
   20ab4:	b.ne	209c8 <omp_get_place_proc_ids@@OMP_4.5+0x1808>  // b.any
   20ab8:	ldr	x0, [x0, #16]
   20abc:	sub	x8, x0, x8
   20ac0:	ldp	x0, x4, [sp, #96]
   20ac4:	add	x1, x8, x1
   20ac8:	bl	1f998 <omp_get_place_proc_ids@@OMP_4.5+0x7d8>
   20acc:	b	209c8 <omp_get_place_proc_ids@@OMP_4.5+0x1808>
   20ad0:	ldr	x1, [x21]
   20ad4:	ldr	x8, [x22]
   20ad8:	ldr	x0, [x21, #24]
   20adc:	sub	x1, x8, x1
   20ae0:	ldr	x7, [x22, #24]
   20ae4:	sub	x0, x7, x0
   20ae8:	cmp	x1, x0
   20aec:	b.ne	208e8 <omp_get_place_proc_ids@@OMP_4.5+0x1728>  // b.any
   20af0:	ldp	x2, x6, [sp, #120]
   20af4:	and	w0, w26, #0xff
   20af8:	add	x19, x25, x19, lsl #5
   20afc:	and	w3, w26, #0xe
   20b00:	sub	w1, w0, #0x12
   20b04:	cmp	w3, #0x2
   20b08:	and	w1, w1, #0xff
   20b0c:	cset	w10, eq  // eq = none
   20b10:	cmp	w1, #0x1
   20b14:	str	x22, [x19, #64]
   20b18:	cset	w9, ls  // ls = plast
   20b1c:	sub	x1, x2, x8
   20b20:	sub	x3, x6, x2
   20b24:	strb	w10, [x19, #72]
   20b28:	strb	w9, [x19, #73]
   20b2c:	tst	x26, #0x80
   20b30:	stp	x1, x3, [x19, #80]
   20b34:	add	x7, x7, x2
   20b38:	ccmp	x8, x2, #0x2, eq  // eq = none
   20b3c:	b.hi	20c04 <omp_get_place_proc_ids@@OMP_4.5+0x1a44>  // b.pmore
   20b40:	ldr	x1, [x22, #8]
   20b44:	cmp	x6, x1
   20b48:	b.hi	20c04 <omp_get_place_proc_ids@@OMP_4.5+0x1a44>  // b.pmore
   20b4c:	and	w0, w0, #0xfffffffd
   20b50:	cmp	w0, #0x11
   20b54:	b.eq	20b88 <omp_get_place_proc_ids@@OMP_4.5+0x19c8>  // b.none
   20b58:	ldr	x0, [x22, #32]
   20b5c:	cmn	x0, #0x1
   20b60:	b.eq	209dc <omp_get_place_proc_ids@@OMP_4.5+0x181c>  // b.none
   20b64:	add	x0, x0, #0x1
   20b68:	str	x0, [x22, #32]
   20b6c:	b	209dc <omp_get_place_proc_ids@@OMP_4.5+0x181c>
   20b70:	ldr	x0, [x5, #16]
   20b74:	sub	x6, x0, x6
   20b78:	ldp	x0, x4, [sp, #96]
   20b7c:	add	x1, x6, x1
   20b80:	bl	1f998 <omp_get_place_proc_ids@@OMP_4.5+0x7d8>
   20b84:	b	209c8 <omp_get_place_proc_ids@@OMP_4.5+0x1808>
   20b88:	ldr	x1, [x4, #16]
   20b8c:	ldp	x0, x4, [sp, #96]
   20b90:	sub	x1, x1, x8
   20b94:	add	x1, x1, x7
   20b98:	bl	1f998 <omp_get_place_proc_ids@@OMP_4.5+0x7d8>
   20b9c:	b	20b58 <omp_get_place_proc_ids@@OMP_4.5+0x1998>
   20ba0:	ldr	x0, [sp, #96]
   20ba4:	add	x0, x0, #0xa8
   20ba8:	ldxr	w1, [x0]
   20bac:	stlxr	w2, wzr, [x0]
   20bb0:	cbnz	w2, 20ba8 <omp_get_place_proc_ids@@OMP_4.5+0x19e8>
   20bb4:	tbnz	w1, #31, 20bf4 <omp_get_place_proc_ids@@OMP_4.5+0x1a34>
   20bb8:	ldp	x1, x2, [sp, #120]
   20bbc:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   20bc0:	add	x0, x0, #0xc90
   20bc4:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   20bc8:	ldr	x0, [sp, #96]
   20bcc:	add	x0, x0, #0xa8
   20bd0:	ldxr	w1, [x0]
   20bd4:	stlxr	w2, wzr, [x0]
   20bd8:	cbnz	w2, 20bd0 <omp_get_place_proc_ids@@OMP_4.5+0x1a10>
   20bdc:	tbnz	w1, #31, 20bfc <omp_get_place_proc_ids@@OMP_4.5+0x1a3c>
   20be0:	ldp	x3, x4, [x20]
   20be4:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   20be8:	ldp	x1, x2, [sp, #120]
   20bec:	add	x0, x0, #0xb58
   20bf0:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   20bf4:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   20bf8:	b	20bb8 <omp_get_place_proc_ids@@OMP_4.5+0x19f8>
   20bfc:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   20c00:	b	20be0 <omp_get_place_proc_ids@@OMP_4.5+0x1a20>
   20c04:	ldr	x0, [sp, #96]
   20c08:	mov	x1, x22
   20c0c:	add	x3, x24, #0x8
   20c10:	mov	x2, x24
   20c14:	bl	1feb8 <omp_get_place_proc_ids@@OMP_4.5+0xcf8>
   20c18:	ldr	x0, [sp, #96]
   20c1c:	add	x0, x0, #0xa8
   20c20:	ldxr	w1, [x0]
   20c24:	stlxr	w2, wzr, [x0]
   20c28:	cbz	w2, 20bdc <omp_get_place_proc_ids@@OMP_4.5+0x1a1c>
   20c2c:	b	20c20 <omp_get_place_proc_ids@@OMP_4.5+0x1a60>
   20c30:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   20c34:	add	x0, x0, #0x560
   20c38:	add	x0, x0, #0x14
   20c3c:	adrp	x1, 1f000 <omp_pause_resource_all_@@OMP_5.0+0xd18>
   20c40:	add	x1, x1, #0x6e8
   20c44:	b	8900 <pthread_once@plt>
   20c48:	stp	x29, x30, [sp, #-32]!
   20c4c:	adrp	x1, 1f000 <omp_pause_resource_all_@@OMP_5.0+0xd18>
   20c50:	add	x1, x1, #0x6e8
   20c54:	mov	x29, sp
   20c58:	str	x19, [sp, #16]
   20c5c:	adrp	x19, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   20c60:	add	x19, x19, #0x560
   20c64:	add	x0, x19, #0x14
   20c68:	bl	8900 <pthread_once@plt>
   20c6c:	ldr	w0, [x19, #4]
   20c70:	ldr	x19, [sp, #16]
   20c74:	ldp	x29, x30, [sp], #32
   20c78:	ret
   20c7c:	nop
   20c80:	stp	x29, x30, [sp, #-368]!
   20c84:	mov	x29, sp
   20c88:	stp	x19, x20, [sp, #16]
   20c8c:	mov	x19, x1
   20c90:	mov	x20, x5
   20c94:	stp	x21, x22, [sp, #32]
   20c98:	mov	x22, x4
   20c9c:	stp	x23, x24, [sp, #48]
   20ca0:	ands	w23, w6, #0xff
   20ca4:	stp	x25, x26, [sp, #64]
   20ca8:	mov	x25, x0
   20cac:	mov	x26, x2
   20cb0:	stp	x27, x28, [sp, #80]
   20cb4:	str	x3, [x29, #176]
   20cb8:	str	w7, [x29, #192]
   20cbc:	b.eq	20f90 <omp_get_place_proc_ids@@OMP_4.5+0x1dd0>  // b.none
   20cc0:	mov	w0, #0xffffffff            	// #-1
   20cc4:	mov	w21, #0xff                  	// #255
   20cc8:	str	w0, [x29, #148]
   20ccc:	mov	w0, #0x8                   	// #8
   20cd0:	str	w0, [x29, #196]
   20cd4:	add	x0, x19, #0x2
   20cd8:	lsl	x0, x0, #5
   20cdc:	bl	b2f8 <fprintf@plt+0x2838>
   20ce0:	ldr	w1, [x29, #192]
   20ce4:	mov	x28, x0
   20ce8:	cmp	w1, #0x3
   20cec:	cset	x0, ne  // ne = any
   20cf0:	str	x0, [x28]
   20cf4:	stp	x19, x25, [x28, #48]
   20cf8:	cbz	x19, 215b8 <omp_get_place_proc_ids@@OMP_4.5+0x23f8>
   20cfc:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   20d00:	str	xzr, [x29, #272]
   20d04:	str	xzr, [x29, #288]
   20d08:	ldr	q0, [x0, #3728]
   20d0c:	ldr	w0, [x29, #192]
   20d10:	cmp	w0, #0x1
   20d14:	cset	w0, eq  // eq = none
   20d18:	str	w0, [x29, #112]
   20d1c:	cmp	w0, #0x0
   20d20:	add	x0, x29, #0x200
   20d24:	ccmp	x19, #0x1, #0x2, eq  // eq = none
   20d28:	stur	q0, [x0, #-216]
   20d2c:	b.hi	20fa8 <omp_get_place_proc_ids@@OMP_4.5+0x1de8>  // b.pmore
   20d30:	mov	x0, #0x8                   	// #8
   20d34:	str	xzr, [x29, #200]
   20d38:	str	x0, [x29, #216]
   20d3c:	add	x0, x25, #0xa8
   20d40:	mov	x2, x0
   20d44:	mov	w0, #0x1                   	// #1
   20d48:	str	x2, [x29, #136]
   20d4c:	ldaxr	w1, [x2]
   20d50:	cbnz	w1, 20d5c <omp_get_place_proc_ids@@OMP_4.5+0x1b9c>
   20d54:	stxr	w3, w0, [x2]
   20d58:	cbnz	w3, 20d4c <omp_get_place_proc_ids@@OMP_4.5+0x1b8c>
   20d5c:	cmp	w1, #0x0
   20d60:	b.ne	2243c <omp_get_place_proc_ids@@OMP_4.5+0x327c>  // b.any
   20d64:	ldr	w0, [x25, #172]
   20d68:	cmp	w0, #0x2
   20d6c:	b.eq	2231c <omp_get_place_proc_ids@@OMP_4.5+0x315c>  // b.none
   20d70:	add	x0, x25, #0xa0
   20d74:	stp	x0, x19, [x29, #240]
   20d78:	mov	x1, x28
   20d7c:	ldr	x0, [x29, #200]
   20d80:	str	x0, [x29, #232]
   20d84:	add	x0, x28, #0x40
   20d88:	str	x0, [x29, #120]
   20d8c:	add	x0, x29, #0x138
   20d90:	mov	x24, #0x0                   	// #0
   20d94:	str	x0, [x29, #224]
   20d98:	mov	x0, x20
   20d9c:	mov	x28, x24
   20da0:	mov	x20, x26
   20da4:	mov	x27, #0x5                   	// #5
   20da8:	mov	x24, x1
   20dac:	mov	x26, x0
   20db0:	movk	x27, #0x4, lsl #16
   20db4:	str	x25, [x29, #128]
   20db8:	str	wzr, [x29, #168]
   20dbc:	str	xzr, [x29, #208]
   20dc0:	sxtw	x0, w28
   20dc4:	cbz	w23, 2100c <omp_get_place_proc_ids@@OMP_4.5+0x1e4c>
   20dc8:	ldrh	w25, [x26, x0, lsl #1]
   20dcc:	lsl	x2, x28, #3
   20dd0:	ldr	x0, [x20, x28, lsl #3]
   20dd4:	add	x3, x20, x2
   20dd8:	cbz	x0, 21020 <omp_get_place_proc_ids@@OMP_4.5+0x1e60>
   20ddc:	and	w5, w21, w25
   20de0:	cmp	w5, #0xd
   20de4:	b.eq	21020 <omp_get_place_proc_ids@@OMP_4.5+0x1e60>  // b.none
   20de8:	cmp	w5, #0xe
   20dec:	b.eq	211d0 <omp_get_place_proc_ids@@OMP_4.5+0x2010>  // b.none
   20df0:	cmp	w5, #0x1c
   20df4:	b.eq	21234 <omp_get_place_proc_ids@@OMP_4.5+0x2074>  // b.none
   20df8:	cmp	w5, #0x1d
   20dfc:	b.eq	21308 <omp_get_place_proc_ids@@OMP_4.5+0x2148>  // b.none
   20e00:	str	x0, [x29, #312]
   20e04:	cmp	w5, #0x4
   20e08:	b.eq	21038 <omp_get_place_proc_ids@@OMP_4.5+0x1e78>  // b.none
   20e0c:	ldr	x2, [x22, x2]
   20e10:	cmp	w5, #0xc
   20e14:	add	x1, x0, x2
   20e18:	str	x1, [x29, #320]
   20e1c:	b.eq	21370 <omp_get_place_proc_ids@@OMP_4.5+0x21b0>  // b.none
   20e20:	cmp	w5, #0xf
   20e24:	b.ne	21040 <omp_get_place_proc_ids@@OMP_4.5+0x1e80>  // b.any
   20e28:	str	w5, [x29, #184]
   20e2c:	cmp	x0, x1
   20e30:	b.eq	2132c <omp_get_place_proc_ids@@OMP_4.5+0x216c>  // b.none
   20e34:	ldr	x1, [x29, #224]
   20e38:	ldr	x0, [x29, #240]
   20e3c:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   20e40:	mov	x10, x0
   20e44:	ldr	w5, [x29, #184]
   20e48:	cbz	x10, 21358 <omp_get_place_proc_ids@@OMP_4.5+0x2198>
   20e4c:	ldp	x2, x1, [x29, #312]
   20e50:	ldr	x0, [x10, #32]
   20e54:	cmn	x0, #0x2
   20e58:	sub	x3, x1, x2
   20e5c:	b.eq	21064 <omp_get_place_proc_ids@@OMP_4.5+0x1ea4>  // b.none
   20e60:	ldr	w4, [x29, #148]
   20e64:	add	x5, x24, x28, lsl #5
   20e68:	and	w7, w4, w25
   20e6c:	and	w11, w7, #0xff
   20e70:	and	w12, w7, #0xe
   20e74:	sub	w11, w11, #0x12
   20e78:	cmp	w12, #0x2
   20e7c:	and	w11, w11, #0xff
   20e80:	cset	w13, eq  // eq = none
   20e84:	ldr	x12, [x10]
   20e88:	cmp	w11, #0x1
   20e8c:	cset	w11, ls  // ls = plast
   20e90:	sxtb	w7, w7
   20e94:	str	x10, [x5, #64]
   20e98:	cmp	w7, #0x0
   20e9c:	strb	w13, [x5, #72]
   20ea0:	ccmp	x12, x2, #0x2, ge  // ge = tcont
   20ea4:	strb	w11, [x5, #73]
   20ea8:	sub	x11, x2, x12
   20eac:	stp	x11, x3, [x5, #80]
   20eb0:	b.hi	22410 <omp_get_place_proc_ids@@OMP_4.5+0x3250>  // b.pmore
   20eb4:	ldr	x5, [x10, #8]
   20eb8:	cmp	x5, x1
   20ebc:	b.cc	22410 <omp_get_place_proc_ids@@OMP_4.5+0x3250>  // b.lo, b.ul, b.last
   20ec0:	and	w7, w7, #0xfffffffd
   20ec4:	cmp	w7, #0x11
   20ec8:	b.eq	215c0 <omp_get_place_proc_ids@@OMP_4.5+0x2400>  // b.none
   20ecc:	add	x28, x28, #0x1
   20ed0:	cmn	x0, #0x1
   20ed4:	b.eq	20ee0 <omp_get_place_proc_ids@@OMP_4.5+0x1d20>  // b.none
   20ed8:	add	x0, x0, #0x1
   20edc:	str	x0, [x10, #32]
   20ee0:	ldr	x0, [x29, #248]
   20ee4:	cmp	x0, x28
   20ee8:	b.hi	20dc0 <omp_get_place_proc_ids@@OMP_4.5+0x1c00>  // b.pmore
   20eec:	mov	x0, x26
   20ef0:	mov	x26, x20
   20ef4:	mov	x20, x0
   20ef8:	mov	x28, x24
   20efc:	ldr	x0, [x29, #176]
   20f00:	ldr	x25, [x29, #128]
   20f04:	ldr	x19, [x29, #248]
   20f08:	cbz	x0, 218f8 <omp_get_place_proc_ids@@OMP_4.5+0x2738>
   20f0c:	cmp	x19, #0x1
   20f10:	b.ne	2252c <omp_get_place_proc_ids@@OMP_4.5+0x336c>  // b.any
   20f14:	ldr	x1, [x0]
   20f18:	stp	xzr, x1, [x24, #8]
   20f1c:	ldr	x0, [x22]
   20f20:	mov	x27, x1
   20f24:	ldr	x2, [x29, #208]
   20f28:	add	x0, x1, x0
   20f2c:	stp	x0, x1, [x24, #24]
   20f30:	ldr	w0, [x29, #168]
   20f34:	cmp	x2, #0x0
   20f38:	ccmp	w0, #0x0, #0x0, eq  // eq = none
   20f3c:	b.ne	21650 <omp_get_place_proc_ids@@OMP_4.5+0x2490>  // b.any
   20f40:	ldr	w0, [x29, #192]
   20f44:	cmp	w0, #0x1
   20f48:	b.eq	219dc <omp_get_place_proc_ids@@OMP_4.5+0x281c>  // b.none
   20f4c:	ldr	w0, [x29, #192]
   20f50:	cmp	w0, #0x3
   20f54:	b.eq	20ff4 <omp_get_place_proc_ids@@OMP_4.5+0x1e34>  // b.none
   20f58:	ldr	x1, [x29, #136]
   20f5c:	ldxr	w0, [x1]
   20f60:	stlxr	w2, wzr, [x1]
   20f64:	cbnz	w2, 20f5c <omp_get_place_proc_ids@@OMP_4.5+0x1d9c>
   20f68:	tbnz	w0, #31, 22174 <omp_get_place_proc_ids@@OMP_4.5+0x2fb4>
   20f6c:	mov	sp, x29
   20f70:	mov	x0, x28
   20f74:	ldp	x19, x20, [sp, #16]
   20f78:	ldp	x21, x22, [sp, #32]
   20f7c:	ldp	x23, x24, [sp, #48]
   20f80:	ldp	x25, x26, [sp, #64]
   20f84:	ldp	x27, x28, [sp, #80]
   20f88:	ldp	x29, x30, [sp], #368
   20f8c:	ret
   20f90:	mov	w0, #0x7                   	// #7
   20f94:	mov	w21, w0
   20f98:	str	w0, [x29, #148]
   20f9c:	mov	w0, #0x3                   	// #3
   20fa0:	str	w0, [x29, #196]
   20fa4:	b	20cd4 <omp_get_place_proc_ids@@OMP_4.5+0x1b14>
   20fa8:	lsl	x0, x19, #4
   20fac:	ldr	w1, [x29, #192]
   20fb0:	add	x0, x0, #0x10
   20fb4:	sub	sp, sp, x0
   20fb8:	cmp	w1, #0x1
   20fbc:	mov	x0, sp
   20fc0:	str	x0, [x29, #288]
   20fc4:	b.ne	21fb4 <omp_get_place_proc_ids@@OMP_4.5+0x2df4>  // b.any
   20fc8:	cmp	x19, #0x1
   20fcc:	lsl	x3, x19, #3
   20fd0:	cset	x1, hi  // hi = pmore
   20fd4:	mov	x2, #0x1                   	// #1
   20fd8:	mov	x4, #0x20                  	// #32
   20fdc:	add	x1, x1, x2
   20fe0:	stp	xzr, x3, [x0]
   20fe4:	str	x3, [x29, #200]
   20fe8:	str	x4, [x29, #216]
   20fec:	stp	x2, x1, [x29, #296]
   20ff0:	b	20d3c <omp_get_place_proc_ids@@OMP_4.5+0x1b7c>
   20ff4:	ldr	x0, [x28]
   20ff8:	cbnz	x0, 20f58 <omp_get_place_proc_ids@@OMP_4.5+0x1d98>
   20ffc:	mov	x0, x28
   21000:	mov	x28, #0x0                   	// #0
   21004:	bl	88b0 <free@plt>
   21008:	b	20f58 <omp_get_place_proc_ids@@OMP_4.5+0x1d98>
   2100c:	ldrb	w25, [x26, x0]
   21010:	lsl	x2, x28, #3
   21014:	ldr	x0, [x20, x28, lsl #3]
   21018:	add	x3, x20, x2
   2101c:	cbnz	x0, 20ddc <omp_get_place_proc_ids@@OMP_4.5+0x1c1c>
   21020:	add	x1, x24, x28, lsl #5
   21024:	mov	x2, #0xffffffffffffffff    	// #-1
   21028:	add	x28, x28, #0x1
   2102c:	str	xzr, [x1, #64]
   21030:	str	x2, [x1, #80]
   21034:	b	20ee0 <omp_get_place_proc_ids@@OMP_4.5+0x1d20>
   21038:	add	x0, x0, #0x8
   2103c:	str	x0, [x29, #320]
   21040:	ldr	x1, [x29, #224]
   21044:	str	w5, [x29, #184]
   21048:	ldr	x0, [x29, #240]
   2104c:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   21050:	mov	x10, x0
   21054:	ldr	w5, [x29, #184]
   21058:	cbnz	x0, 20e4c <omp_get_place_proc_ids@@OMP_4.5+0x1c8c>
   2105c:	ldp	x2, x1, [x29, #312]
   21060:	sub	x3, x1, x2
   21064:	ldrb	w0, [x29, #196]
   21068:	add	x10, x24, x28, lsl #5
   2106c:	ldp	x6, x4, [x29, #208]
   21070:	asr	w7, w25, w0
   21074:	str	xzr, [x10, #64]
   21078:	ldr	x0, [x29, #232]
   2107c:	sub	x25, x0, #0x1
   21080:	mov	x0, #0x1                   	// #1
   21084:	lsl	x7, x0, x7
   21088:	cmp	x4, x7
   2108c:	add	x25, x25, x7
   21090:	neg	x10, x7
   21094:	csel	x4, x4, x7, cs  // cs = hs, nlast
   21098:	and	x10, x10, x25
   2109c:	add	x6, x6, x0
   210a0:	stp	x6, x4, [x29, #208]
   210a4:	add	x4, x10, x3
   210a8:	str	x4, [x29, #232]
   210ac:	cmp	w5, #0x12
   210b0:	b.gt	210d4 <omp_get_place_proc_ids@@OMP_4.5+0x1f14>
   210b4:	lsl	x0, x0, x5
   210b8:	tst	x0, x27
   210bc:	b.ne	2111c <omp_get_place_proc_ids@@OMP_4.5+0x1f5c>  // b.any
   210c0:	sub	x3, x3, #0x1
   210c4:	mov	x0, #0x7fff                	// #32767
   210c8:	cmp	x3, x0
   210cc:	b.ls	210ec <omp_get_place_proc_ids@@OMP_4.5+0x1f2c>  // b.plast
   210d0:	b	2111c <omp_get_place_proc_ids@@OMP_4.5+0x1f5c>
   210d4:	cmp	w5, #0x80
   210d8:	b.eq	21300 <omp_get_place_proc_ids@@OMP_4.5+0x2140>  // b.none
   210dc:	sub	x3, x3, #0x1
   210e0:	mov	x0, #0x7fff                	// #32767
   210e4:	cmp	x3, x0
   210e8:	b.hi	21300 <omp_get_place_proc_ids@@OMP_4.5+0x2140>  // b.pmore
   210ec:	ldr	x0, [x29, #296]
   210f0:	cmp	x0, #0x0
   210f4:	cbnz	x0, 21610 <omp_get_place_proc_ids@@OMP_4.5+0x2450>
   210f8:	ldr	x7, [x29, #288]
   210fc:	mov	x0, #0x1                   	// #1
   21100:	mov	x3, #0x0                   	// #0
   21104:	add	x11, x7, x3
   21108:	str	x10, [x7, x3]
   2110c:	ldr	x4, [x29, #232]
   21110:	mov	x3, #0x1                   	// #1
   21114:	str	x4, [x11, #8]
   21118:	stp	x0, x3, [x29, #296]
   2111c:	add	x28, x28, #0x1
   21120:	cmp	w5, #0x5
   21124:	b.ne	20ee0 <omp_get_place_proc_ids@@OMP_4.5+0x1d20>  // b.any
   21128:	ldr	x3, [x29, #248]
   2112c:	cmp	x3, x28
   21130:	b.ls	20eec <omp_get_place_proc_ids@@OMP_4.5+0x1d2c>  // b.plast
   21134:	ldr	x4, [x29, #120]
   21138:	cbnz	w23, 211bc <omp_get_place_proc_ids@@OMP_4.5+0x1ffc>
   2113c:	ldrb	w0, [x26, w28, sxtw]
   21140:	and	w0, w0, w21
   21144:	cmp	w0, #0x4
   21148:	b.ne	20ee0 <omp_get_place_proc_ids@@OMP_4.5+0x1d20>  // b.any
   2114c:	nop
   21150:	ldr	x0, [x20, x28, lsl #3]
   21154:	cmp	x0, x2
   21158:	b.cc	20ee0 <omp_get_place_proc_ids@@OMP_4.5+0x1d20>  // b.lo, b.ul, b.last
   2115c:	add	x0, x0, #0x8
   21160:	cmp	x0, x1
   21164:	b.hi	20ee0 <omp_get_place_proc_ids@@OMP_4.5+0x1d20>  // b.pmore
   21168:	lsl	x0, x28, #5
   2116c:	add	x28, x28, #0x1
   21170:	cmp	x3, x28
   21174:	str	xzr, [x4, x0]
   21178:	b.ls	20ee0 <omp_get_place_proc_ids@@OMP_4.5+0x1d20>  // b.plast
   2117c:	ldrb	w0, [x26, w28, sxtw]
   21180:	and	w0, w0, w21
   21184:	cmp	w0, #0x4
   21188:	b.eq	21150 <omp_get_place_proc_ids@@OMP_4.5+0x1f90>  // b.none
   2118c:	b	20ee0 <omp_get_place_proc_ids@@OMP_4.5+0x1d20>
   21190:	ldr	x0, [x20, x28, lsl #3]
   21194:	cmp	x0, x2
   21198:	b.cc	20ee0 <omp_get_place_proc_ids@@OMP_4.5+0x1d20>  // b.lo, b.ul, b.last
   2119c:	add	x0, x0, #0x8
   211a0:	cmp	x0, x1
   211a4:	b.hi	20ee0 <omp_get_place_proc_ids@@OMP_4.5+0x1d20>  // b.pmore
   211a8:	lsl	x0, x28, #5
   211ac:	add	x28, x28, #0x1
   211b0:	cmp	x3, x28
   211b4:	str	xzr, [x4, x0]
   211b8:	b.ls	20ee0 <omp_get_place_proc_ids@@OMP_4.5+0x1d20>  // b.plast
   211bc:	ldrh	w0, [x26, w28, sxtw #1]
   211c0:	and	w0, w0, w21
   211c4:	cmp	w0, #0x4
   211c8:	b.eq	21190 <omp_get_place_proc_ids@@OMP_4.5+0x1fd0>  // b.none
   211cc:	b	20ee0 <omp_get_place_proc_ids@@OMP_4.5+0x1d20>
   211d0:	add	x3, x0, #0x1
   211d4:	stp	x0, x3, [x29, #312]
   211d8:	ldr	x1, [x29, #224]
   211dc:	str	x2, [x29, #184]
   211e0:	ldr	x0, [x29, #240]
   211e4:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   211e8:	ldp	x3, x1, [x29, #312]
   211ec:	ldr	x2, [x29, #184]
   211f0:	sub	x1, x1, #0x1
   211f4:	str	x1, [x29, #320]
   211f8:	cbz	x0, 2177c <omp_get_place_proc_ids@@OMP_4.5+0x25bc>
   211fc:	ldp	x1, x7, [x0, #16]
   21200:	add	x10, x24, x28, lsl #5
   21204:	ldr	x5, [x0]
   21208:	add	x28, x28, #0x1
   2120c:	sub	x3, x3, x5
   21210:	str	x3, [x29, #312]
   21214:	ldr	x1, [x1, #16]
   21218:	str	xzr, [x10, #64]
   2121c:	add	x0, x3, x1
   21220:	mov	x1, #0xffffffffffffffff    	// #-1
   21224:	add	x0, x0, x7
   21228:	str	x0, [x20, x2]
   2122c:	str	x1, [x10, #80]
   21230:	b	20ee0 <omp_get_place_proc_ids@@OMP_4.5+0x1d20>
   21234:	ldr	x11, [x22, x2]
   21238:	add	x2, x24, x28, lsl #5
   2123c:	str	x0, [x29, #312]
   21240:	mov	x1, x2
   21244:	add	x19, x11, x28
   21248:	mov	x8, #0xfffffffffffffffd    	// #-3
   2124c:	str	xzr, [x2, #64]
   21250:	add	x2, x28, #0x1
   21254:	str	x8, [x1, #80]
   21258:	ldr	x5, [x22, x19, lsl #3]
   2125c:	stp	x3, x11, [x29, #152]
   21260:	ldr	x0, [x20, x19, lsl #3]
   21264:	str	x2, [x29, #184]
   21268:	ldr	x1, [x29, #224]
   2126c:	add	x0, x0, x5
   21270:	str	x0, [x29, #320]
   21274:	ldr	x0, [x29, #240]
   21278:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   2127c:	mov	x1, x0
   21280:	ldp	x3, x11, [x29, #152]
   21284:	ldr	x2, [x29, #184]
   21288:	cbz	x0, 21444 <omp_get_place_proc_ids@@OMP_4.5+0x2284>
   2128c:	mov	x28, x2
   21290:	cmp	x2, x19
   21294:	b.hi	20ee0 <omp_get_place_proc_ids@@OMP_4.5+0x1d20>  // b.pmore
   21298:	mov	w0, w23
   2129c:	mov	x25, x2
   212a0:	mov	x23, x26
   212a4:	mov	w26, w0
   212a8:	str	w21, [x29, #184]
   212ac:	mov	x21, x20
   212b0:	mov	x20, x1
   212b4:	nop
   212b8:	mov	x3, x28
   212bc:	mov	x6, x23
   212c0:	mov	x5, x22
   212c4:	mov	x4, x21
   212c8:	mov	x2, x25
   212cc:	add	x28, x28, #0x1
   212d0:	mov	x1, x20
   212d4:	mov	x0, x24
   212d8:	mov	x7, #0x0                   	// #0
   212dc:	bl	20868 <omp_get_place_proc_ids@@OMP_4.5+0x16a8>
   212e0:	cmp	x19, x28
   212e4:	b.cs	212b8 <omp_get_place_proc_ids@@OMP_4.5+0x20f8>  // b.hs, b.nlast
   212e8:	mov	w0, w26
   212ec:	mov	x20, x21
   212f0:	mov	x26, x23
   212f4:	ldr	w21, [x29, #184]
   212f8:	mov	w23, w0
   212fc:	b	20ee0 <omp_get_place_proc_ids@@OMP_4.5+0x1d20>
   21300:	add	x28, x28, #0x1
   21304:	b	20ee0 <omp_get_place_proc_ids@@OMP_4.5+0x1d20>
   21308:	add	x1, x24, x28, lsl #5
   2130c:	mov	x2, #0xfffffffffffffffe    	// #-2
   21310:	mov	x0, x1
   21314:	add	x28, x28, #0x1
   21318:	str	xzr, [x1, #64]
   2131c:	mov	w1, #0x1                   	// #1
   21320:	str	x2, [x0, #80]
   21324:	str	w1, [x29, #168]
   21328:	b	20ee0 <omp_get_place_proc_ids@@OMP_4.5+0x1d20>
   2132c:	add	x0, x0, #0x1
   21330:	str	x0, [x29, #320]
   21334:	ldr	x1, [x29, #224]
   21338:	ldr	x0, [x29, #240]
   2133c:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   21340:	mov	x10, x0
   21344:	ldr	x1, [x29, #320]
   21348:	ldr	w5, [x29, #184]
   2134c:	sub	x1, x1, #0x1
   21350:	str	x1, [x29, #320]
   21354:	cbnz	x10, 20e4c <omp_get_place_proc_ids@@OMP_4.5+0x1c8c>
   21358:	add	x1, x24, x28, lsl #5
   2135c:	mov	x2, #0xfffffffffffffffe    	// #-2
   21360:	add	x28, x28, #0x1
   21364:	str	xzr, [x1, #64]
   21368:	str	x2, [x1, #80]
   2136c:	b	20ee0 <omp_get_place_proc_ids@@OMP_4.5+0x1d20>
   21370:	ldrb	w0, [x29, #196]
   21374:	add	x5, x24, x28, lsl #5
   21378:	ldr	x1, [x29, #232]
   2137c:	mov	x7, #0x1                   	// #1
   21380:	ldr	x4, [x29, #216]
   21384:	sub	x1, x1, #0x1
   21388:	asr	w0, w25, w0
   2138c:	str	xzr, [x5, #64]
   21390:	lsl	x0, x7, x0
   21394:	add	x3, x1, x0
   21398:	cmp	x4, x0
   2139c:	neg	x1, x0
   213a0:	and	x1, x1, x3
   213a4:	csel	x0, x4, x0, cs  // cs = hs, nlast
   213a8:	str	x0, [x29, #216]
   213ac:	add	x0, x2, x1
   213b0:	str	x0, [x29, #232]
   213b4:	sub	x3, x2, #0x1
   213b8:	mov	x0, #0x7fff                	// #32767
   213bc:	cmp	x3, x0
   213c0:	b.hi	21434 <omp_get_place_proc_ids@@OMP_4.5+0x2274>  // b.pmore
   213c4:	ldr	x0, [x29, #296]
   213c8:	cmp	x0, #0x0
   213cc:	cbz	x0, 21410 <omp_get_place_proc_ids@@OMP_4.5+0x2250>
   213d0:	b.lt	21434 <omp_get_place_proc_ids@@OMP_4.5+0x2274>  // b.tstop
   213d4:	ldr	x3, [x29, #288]
   213d8:	lsl	x2, x0, #4
   213dc:	sub	x5, x2, #0x10
   213e0:	add	x5, x3, x5
   213e4:	ldr	x7, [x5, #8]
   213e8:	cmp	x1, x7
   213ec:	b.cc	22340 <omp_get_place_proc_ids@@OMP_4.5+0x3180>  // b.lo, b.ul, b.last
   213f0:	add	x7, x7, #0x1, lsl #12
   213f4:	cmp	x1, x7
   213f8:	ldr	x7, [x29, #304]
   213fc:	b.cc	22224 <omp_get_place_proc_ids@@OMP_4.5+0x3064>  // b.lo, b.ul, b.last
   21400:	cmp	x7, #0x1
   21404:	b.eq	22398 <omp_get_place_proc_ids@@OMP_4.5+0x31d8>  // b.none
   21408:	add	x0, x0, #0x1
   2140c:	b	2141c <omp_get_place_proc_ids@@OMP_4.5+0x225c>
   21410:	ldr	x3, [x29, #288]
   21414:	mov	x0, x7
   21418:	mov	x2, #0x0                   	// #0
   2141c:	add	x5, x3, x2
   21420:	str	x1, [x3, x2]
   21424:	ldr	x2, [x29, #232]
   21428:	mov	x1, #0x1                   	// #1
   2142c:	str	x2, [x5, #8]
   21430:	stp	x0, x1, [x29, #296]
   21434:	mov	w0, #0x1                   	// #1
   21438:	add	x28, x28, #0x1
   2143c:	str	w0, [x29, #168]
   21440:	b	20ee0 <omp_get_place_proc_ids@@OMP_4.5+0x1d20>
   21444:	ldrb	w1, [x29, #196]
   21448:	ldp	x7, x5, [x29, #312]
   2144c:	ldr	x0, [x3, #8]
   21450:	asr	w3, w25, w1
   21454:	ldp	x6, x4, [x29, #208]
   21458:	ldr	x1, [x29, #232]
   2145c:	sub	x0, x1, x0
   21460:	sub	x1, x7, #0x1
   21464:	add	x0, x0, x1
   21468:	mov	x1, #0x1                   	// #1
   2146c:	lsl	x3, x1, x3
   21470:	add	x0, x0, x3
   21474:	neg	x25, x3
   21478:	cmp	x4, x3
   2147c:	sub	x7, x5, x7
   21480:	and	x0, x25, x0
   21484:	csel	x3, x4, x3, cs  // cs = hs, nlast
   21488:	add	x6, x6, x11
   2148c:	add	x0, x7, x0
   21490:	stp	x6, x3, [x29, #208]
   21494:	cmp	x2, x19
   21498:	str	x0, [x29, #232]
   2149c:	b.hi	22308 <omp_get_place_proc_ids@@OMP_4.5+0x3148>  // b.pmore
   214a0:	mov	x28, x2
   214a4:	sub	x5, x0, x5
   214a8:	mov	w14, #0x0                   	// #0
   214ac:	mov	w13, #0x0                   	// #0
   214b0:	mov	x12, #0x7fff                	// #32767
   214b4:	ldr	x4, [x29, #120]
   214b8:	ldp	x11, x3, [x29, #288]
   214bc:	ldr	x7, [x29, #304]
   214c0:	b	21530 <omp_get_place_proc_ids@@OMP_4.5+0x2370>
   214c4:	ldrh	w0, [x26, x2, lsl #1]
   214c8:	and	w0, w21, w0
   214cc:	cmp	w0, #0x12
   214d0:	b.gt	21550 <omp_get_place_proc_ids@@OMP_4.5+0x2390>
   214d4:	lsl	x0, x1, x0
   214d8:	tst	x0, x27
   214dc:	b.ne	21524 <omp_get_place_proc_ids@@OMP_4.5+0x2364>  // b.any
   214e0:	ldr	x0, [x22, x28, lsl #3]
   214e4:	sub	x2, x0, #0x1
   214e8:	cmp	x2, x12
   214ec:	b.hi	21524 <omp_get_place_proc_ids@@OMP_4.5+0x2364>  // b.pmore
   214f0:	ldr	x2, [x20, x28, lsl #3]
   214f4:	cmp	x3, #0x0
   214f8:	add	x2, x2, x5
   214fc:	cbnz	x3, 21578 <omp_get_place_proc_ids@@OMP_4.5+0x23b8>
   21500:	add	x0, x2, x0
   21504:	mov	x6, #0x0                   	// #0
   21508:	add	x8, x11, x6
   2150c:	mov	x7, #0x1                   	// #1
   21510:	add	x3, x3, #0x1
   21514:	mov	w13, w7
   21518:	str	x2, [x11, x6]
   2151c:	mov	w14, #0x1                   	// #1
   21520:	str	x0, [x8, #8]
   21524:	add	x28, x28, #0x1
   21528:	cmp	x19, x28
   2152c:	b.cc	21564 <omp_get_place_proc_ids@@OMP_4.5+0x23a4>  // b.lo, b.ul, b.last
   21530:	lsl	x0, x28, #5
   21534:	sxtw	x2, w28
   21538:	str	xzr, [x4, x0]
   2153c:	cbnz	w23, 214c4 <omp_get_place_proc_ids@@OMP_4.5+0x2304>
   21540:	ldrb	w0, [x26, x2]
   21544:	and	w0, w21, w0
   21548:	cmp	w0, #0x12
   2154c:	b.le	214d4 <omp_get_place_proc_ids@@OMP_4.5+0x2314>
   21550:	cmp	w0, #0x80
   21554:	b.ne	214e0 <omp_get_place_proc_ids@@OMP_4.5+0x2320>  // b.any
   21558:	add	x28, x28, #0x1
   2155c:	cmp	x19, x28
   21560:	b.cs	21530 <omp_get_place_proc_ids@@OMP_4.5+0x2370>  // b.hs, b.nlast
   21564:	cbz	w13, 2156c <omp_get_place_proc_ids@@OMP_4.5+0x23ac>
   21568:	str	x3, [x29, #296]
   2156c:	cbz	w14, 20ee0 <omp_get_place_proc_ids@@OMP_4.5+0x1d20>
   21570:	str	x7, [x29, #304]
   21574:	b	20ee0 <omp_get_place_proc_ids@@OMP_4.5+0x1d20>
   21578:	b.lt	21524 <omp_get_place_proc_ids@@OMP_4.5+0x2364>  // b.tstop
   2157c:	lsl	x6, x3, #4
   21580:	sub	x8, x6, #0x10
   21584:	add	x8, x11, x8
   21588:	ldr	x9, [x8, #8]
   2158c:	cmp	x2, x9
   21590:	b.cc	21fa8 <omp_get_place_proc_ids@@OMP_4.5+0x2de8>  // b.lo, b.ul, b.last
   21594:	add	x9, x9, #0x1, lsl #12
   21598:	add	x0, x2, x0
   2159c:	cmp	x2, x9
   215a0:	b.cc	219c4 <omp_get_place_proc_ids@@OMP_4.5+0x2804>  // b.lo, b.ul, b.last
   215a4:	cmp	x7, #0x1
   215a8:	b.ne	21508 <omp_get_place_proc_ids@@OMP_4.5+0x2348>  // b.any
   215ac:	sub	x3, x3, #0x1
   215b0:	lsl	x6, x3, #4
   215b4:	b	21508 <omp_get_place_proc_ids@@OMP_4.5+0x2348>
   215b8:	stp	xzr, xzr, [x28, #16]
   215bc:	b	20f6c <omp_get_place_proc_ids@@OMP_4.5+0x1dac>
   215c0:	ldp	x0, x5, [x10, #16]
   215c4:	str	x3, [x29, #104]
   215c8:	ldr	x4, [x29, #128]
   215cc:	stp	x10, x2, [x29, #152]
   215d0:	ldr	x1, [x0, #16]
   215d4:	add	x5, x2, x5
   215d8:	ldr	w0, [x4, #12]
   215dc:	ldr	x7, [x4, #120]
   215e0:	sub	x1, x1, x12
   215e4:	add	x1, x1, x5
   215e8:	str	x1, [x29, #184]
   215ec:	blr	x7
   215f0:	tst	w0, #0xff
   215f4:	ldr	x3, [x29, #104]
   215f8:	ldr	x2, [x29, #160]
   215fc:	ldr	x1, [x29, #184]
   21600:	b.eq	224f0 <omp_get_place_proc_ids@@OMP_4.5+0x3330>  // b.none
   21604:	ldr	x10, [x29, #152]
   21608:	ldr	x0, [x10, #32]
   2160c:	b	20ecc <omp_get_place_proc_ids@@OMP_4.5+0x1d0c>
   21610:	b.lt	2111c <omp_get_place_proc_ids@@OMP_4.5+0x1f5c>  // b.tstop
   21614:	ldr	x7, [x29, #288]
   21618:	lsl	x3, x0, #4
   2161c:	sub	x11, x3, #0x10
   21620:	add	x11, x7, x11
   21624:	ldr	x12, [x11, #8]
   21628:	cmp	x10, x12
   2162c:	b.cc	219b8 <omp_get_place_proc_ids@@OMP_4.5+0x27f8>  // b.lo, b.ul, b.last
   21630:	add	x12, x12, #0x1, lsl #12
   21634:	cmp	x10, x12
   21638:	ldr	x12, [x29, #304]
   2163c:	b.cc	22180 <omp_get_place_proc_ids@@OMP_4.5+0x2fc0>  // b.lo, b.ul, b.last
   21640:	cmp	x12, #0x1
   21644:	b.eq	22310 <omp_get_place_proc_ids@@OMP_4.5+0x3150>  // b.none
   21648:	add	x0, x0, #0x1
   2164c:	b	21104 <omp_get_place_proc_ids@@OMP_4.5+0x1f44>
   21650:	cbnz	x2, 21998 <omp_get_place_proc_ids@@OMP_4.5+0x27d8>
   21654:	mov	x24, #0x0                   	// #0
   21658:	str	xzr, [x29, #176]
   2165c:	add	x0, x29, #0x138
   21660:	str	x0, [x29, #160]
   21664:	add	x0, x29, #0x150
   21668:	mov	x27, #0x0                   	// #0
   2166c:	str	x0, [x29, #128]
   21670:	mov	x0, #0xffffffffffffffff    	// #-1
   21674:	str	x0, [x29, #152]
   21678:	mov	x0, x22
   2167c:	str	x25, [x29, #248]
   21680:	mov	x25, x19
   21684:	mov	x19, x28
   21688:	mov	x28, x27
   2168c:	ldr	x27, [x29, #176]
   21690:	mov	x22, x26
   21694:	mov	x26, x24
   21698:	mov	x24, x0
   2169c:	add	x1, x29, #0x108
   216a0:	str	x1, [x29, #96]
   216a4:	stp	xzr, xzr, [x29, #112]
   216a8:	lsl	x3, x28, #5
   216ac:	add	x5, x19, x3
   216b0:	ldr	x0, [x5, #64]
   216b4:	cbz	x0, 217c0 <omp_get_place_proc_ids@@OMP_4.5+0x2600>
   216b8:	add	x28, x28, #0x1
   216bc:	cmp	x25, x28
   216c0:	b.hi	216a8 <omp_get_place_proc_ids@@OMP_4.5+0x24e8>  // b.pmore
   216c4:	ldr	w0, [x29, #192]
   216c8:	mov	x28, x19
   216cc:	mov	x26, x22
   216d0:	mov	x19, x25
   216d4:	cmp	w0, #0x1
   216d8:	ldr	x25, [x29, #248]
   216dc:	b.eq	2204c <omp_get_place_proc_ids@@OMP_4.5+0x2e8c>  // b.none
   216e0:	ldr	x0, [x29, #176]
   216e4:	cbz	x0, 20f4c <omp_get_place_proc_ids@@OMP_4.5+0x1d8c>
   216e8:	ldr	x0, [x29, #296]
   216ec:	ldr	x2, [x29, #272]
   216f0:	cmp	x0, #0x0
   216f4:	b.le	21760 <omp_get_place_proc_ids@@OMP_4.5+0x25a0>
   216f8:	mov	x21, #0x0                   	// #0
   216fc:	nop
   21700:	ldr	x3, [x29, #288]
   21704:	lsl	x1, x21, #4
   21708:	ldr	w0, [x25, #12]
   2170c:	add	x4, x3, x1
   21710:	ldr	x19, [x3]
   21714:	ldr	x1, [x3, x1]
   21718:	ldr	x22, [x4, #8]
   2171c:	sub	x19, x1, x19
   21720:	ldr	x20, [x28, #16]
   21724:	sub	x22, x22, x1
   21728:	ldr	x4, [x25, #120]
   2172c:	add	x20, x1, x20
   21730:	add	x19, x2, x19
   21734:	mov	x3, x22
   21738:	mov	x2, x19
   2173c:	mov	x1, x20
   21740:	blr	x4
   21744:	tst	w0, #0xff
   21748:	b.eq	223bc <omp_get_place_proc_ids@@OMP_4.5+0x31fc>  // b.none
   2174c:	ldr	x0, [x29, #296]
   21750:	add	x21, x21, #0x1
   21754:	ldr	x2, [x29, #272]
   21758:	cmp	x0, x21
   2175c:	b.gt	21700 <omp_get_place_proc_ids@@OMP_4.5+0x2540>
   21760:	mov	x0, x2
   21764:	bl	88b0 <free@plt>
   21768:	ldr	w0, [x29, #192]
   2176c:	str	xzr, [x29, #272]
   21770:	cmp	w0, #0x3
   21774:	b.ne	20f58 <omp_get_place_proc_ids@@OMP_4.5+0x1d98>  // b.any
   21778:	b	20ff4 <omp_get_place_proc_ids@@OMP_4.5+0x1e34>
   2177c:	ldr	x1, [x29, #224]
   21780:	sub	x3, x3, #0x1
   21784:	ldr	x0, [x29, #240]
   21788:	str	x3, [x29, #312]
   2178c:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   21790:	ldr	x3, [x29, #312]
   21794:	ldr	x2, [x29, #184]
   21798:	add	x3, x3, #0x1
   2179c:	str	x3, [x29, #312]
   217a0:	cbnz	x0, 211fc <omp_get_place_proc_ids@@OMP_4.5+0x203c>
   217a4:	ldr	x1, [x29, #224]
   217a8:	ldr	x0, [x29, #240]
   217ac:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   217b0:	cbz	x0, 224dc <omp_get_place_proc_ids@@OMP_4.5+0x331c>
   217b4:	ldr	x2, [x29, #184]
   217b8:	ldr	x3, [x29, #312]
   217bc:	b	211fc <omp_get_place_proc_ids@@OMP_4.5+0x203c>
   217c0:	sxtw	x0, w28
   217c4:	cbz	w23, 21b98 <omp_get_place_proc_ids@@OMP_4.5+0x29d8>
   217c8:	ldrh	w6, [x20, x0, lsl #1]
   217cc:	ldr	x2, [x22, x28, lsl #3]
   217d0:	lsl	x7, x28, #3
   217d4:	add	x15, x22, x7
   217d8:	cbz	x2, 216b8 <omp_get_place_proc_ids@@OMP_4.5+0x24f8>
   217dc:	ldr	x0, [x29, #200]
   217e0:	and	w4, w21, w6
   217e4:	cmp	w4, #0x1c
   217e8:	sub	x14, x0, #0x1
   217ec:	b.eq	21ba0 <omp_get_place_proc_ids@@OMP_4.5+0x29e0>  // b.none
   217f0:	b.gt	21a98 <omp_get_place_proc_ids@@OMP_4.5+0x28d8>
   217f4:	cmp	w4, #0xc
   217f8:	b.eq	21c48 <omp_get_place_proc_ids@@OMP_4.5+0x2a88>  // b.none
   217fc:	sub	w0, w4, #0xd
   21800:	cmp	w0, #0x2
   21804:	b.ls	216b8 <omp_get_place_proc_ids@@OMP_4.5+0x24f8>  // b.plast
   21808:	str	x2, [x26]
   2180c:	cmp	w4, #0x4
   21810:	add	x0, x2, #0x8
   21814:	b.ne	21c98 <omp_get_place_proc_ids@@OMP_4.5+0x2ad8>  // b.any
   21818:	str	x0, [x26, #8]
   2181c:	mov	x1, x26
   21820:	ldr	x0, [x29, #240]
   21824:	str	w6, [x29, #168]
   21828:	str	x3, [x29, #184]
   2182c:	stp	x14, x5, [x29, #208]
   21830:	str	w4, [x29, #224]
   21834:	str	x7, [x29, #232]
   21838:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   2183c:	ldr	w6, [x29, #168]
   21840:	mov	x13, x0
   21844:	ldr	w4, [x29, #224]
   21848:	ldr	x3, [x29, #184]
   2184c:	ldp	x14, x5, [x29, #208]
   21850:	ldr	x7, [x29, #232]
   21854:	cbz	x0, 21fa0 <omp_get_place_proc_ids@@OMP_4.5+0x2de0>
   21858:	ldr	x0, [x0, #32]
   2185c:	cmn	x0, #0x2
   21860:	b.eq	21cbc <omp_get_place_proc_ids@@OMP_4.5+0x2afc>  // b.none
   21864:	ldr	w1, [x29, #148]
   21868:	add	x4, x19, x3
   2186c:	str	x13, [x5, #64]
   21870:	and	w6, w1, w6
   21874:	and	w1, w6, #0xff
   21878:	and	w2, w6, #0xe
   2187c:	sub	w1, w1, #0x12
   21880:	cmp	w2, #0x2
   21884:	and	w1, w1, #0xff
   21888:	cset	w2, eq  // eq = none
   2188c:	cmp	w1, #0x1
   21890:	strb	w2, [x5, #72]
   21894:	cset	w1, ls  // ls = plast
   21898:	strb	w1, [x5, #73]
   2189c:	ldr	x5, [x13]
   218a0:	sxtb	w6, w6
   218a4:	ldr	x2, [x26]
   218a8:	cmp	w6, #0x0
   218ac:	sub	x1, x2, x5
   218b0:	str	x1, [x4, #80]
   218b4:	ccmp	x2, x5, #0x0, ge  // ge = tcont
   218b8:	ldr	x1, [x26, #8]
   218bc:	sub	x3, x1, x2
   218c0:	str	x3, [x4, #88]
   218c4:	b.cc	224c4 <omp_get_place_proc_ids@@OMP_4.5+0x3304>  // b.lo, b.ul, b.last
   218c8:	ldr	x4, [x13, #8]
   218cc:	cmp	x1, x4
   218d0:	b.hi	224c4 <omp_get_place_proc_ids@@OMP_4.5+0x3304>  // b.pmore
   218d4:	and	w6, w6, #0xfffffffd
   218d8:	cmp	w6, #0x11
   218dc:	b.eq	22144 <omp_get_place_proc_ids@@OMP_4.5+0x2f84>  // b.none
   218e0:	add	x28, x28, #0x1
   218e4:	cmn	x0, #0x1
   218e8:	b.eq	216bc <omp_get_place_proc_ids@@OMP_4.5+0x24fc>  // b.none
   218ec:	add	x0, x0, #0x1
   218f0:	str	x0, [x13, #32]
   218f4:	b	216bc <omp_get_place_proc_ids@@OMP_4.5+0x24fc>
   218f8:	ldr	x0, [x29, #208]
   218fc:	cmp	x0, #0x0
   21900:	ldr	w0, [x29, #112]
   21904:	cset	w2, ne  // ne = any
   21908:	str	w2, [x29, #248]
   2190c:	cmp	w0, #0x0
   21910:	ccmp	w2, #0x0, #0x0, eq  // eq = none
   21914:	b.eq	2212c <omp_get_place_proc_ids@@OMP_4.5+0x2f6c>  // b.none
   21918:	ldr	w0, [x25, #12]
   2191c:	ldr	x3, [x25, #96]
   21920:	ldr	x1, [x29, #216]
   21924:	ldr	x2, [x29, #232]
   21928:	add	x1, x1, x2
   2192c:	sub	x1, x1, #0x1
   21930:	blr	x3
   21934:	str	x0, [x24, #32]
   21938:	ldr	w2, [x29, #248]
   2193c:	cbz	x0, 22540 <omp_get_place_proc_ids@@OMP_4.5+0x3380>
   21940:	ldr	x3, [x29, #216]
   21944:	sub	x1, x3, #0x1
   21948:	neg	x27, x3
   2194c:	add	x0, x0, x1
   21950:	ldr	x1, [x29, #232]
   21954:	and	x27, x0, x27
   21958:	ldr	x0, [x29, #304]
   2195c:	add	x24, x27, x1
   21960:	stp	x27, x24, [x28, #16]
   21964:	cmp	x0, #0x1
   21968:	ldr	x0, [x29, #296]
   2196c:	b.ne	21978 <omp_get_place_proc_ids@@OMP_4.5+0x27b8>  // b.any
   21970:	sub	x0, x0, #0x1
   21974:	str	x0, [x29, #296]
   21978:	ldr	w1, [x29, #168]
   2197c:	cmp	x0, #0x0
   21980:	orr	w24, w2, w1
   21984:	b.gt	222c8 <omp_get_place_proc_ids@@OMP_4.5+0x3108>
   21988:	str	xzr, [x28, #8]
   2198c:	cbz	w24, 219e0 <omp_get_place_proc_ids@@OMP_4.5+0x2820>
   21990:	ldr	x0, [x29, #208]
   21994:	cbz	x0, 21654 <omp_get_place_proc_ids@@OMP_4.5+0x2494>
   21998:	str	xzr, [x29, #176]
   2199c:	ldr	x0, [x29, #208]
   219a0:	add	x0, x0, x0, lsl #3
   219a4:	lsl	x0, x0, #3
   219a8:	bl	b2f8 <fprintf@plt+0x2838>
   219ac:	mov	x24, x0
   219b0:	str	x0, [x28, #8]
   219b4:	b	2165c <omp_get_place_proc_ids@@OMP_4.5+0x249c>
   219b8:	mov	x0, #0xffffffffffffffff    	// #-1
   219bc:	str	x0, [x29, #296]
   219c0:	b	2111c <omp_get_place_proc_ids@@OMP_4.5+0x1f5c>
   219c4:	add	x7, x7, #0x1
   219c8:	mov	w14, #0x1                   	// #1
   219cc:	str	x0, [x8, #8]
   219d0:	b	21524 <omp_get_place_proc_ids@@OMP_4.5+0x2364>
   219d4:	str	xzr, [x28, #8]
   219d8:	cbnz	w24, 21990 <omp_get_place_proc_ids@@OMP_4.5+0x27d0>
   219dc:	str	xzr, [x29, #176]
   219e0:	add	x23, x28, #0x40
   219e4:	sub	x20, x26, #0x8
   219e8:	add	x21, x29, #0x150
   219ec:	mov	x22, #0x0                   	// #0
   219f0:	ldr	x24, [x29, #176]
   219f4:	b	21a34 <omp_get_place_proc_ids@@OMP_4.5+0x2874>
   219f8:	ldp	x3, x2, [x2, #16]
   219fc:	ldr	x5, [x3, #16]
   21a00:	add	x0, x0, x2
   21a04:	add	x5, x0, x5
   21a08:	add	x1, x27, x1
   21a0c:	mov	x4, x24
   21a10:	mov	x2, x21
   21a14:	mov	x0, x25
   21a18:	mov	x3, #0x8                   	// #8
   21a1c:	str	x5, [x29, #336]
   21a20:	bl	1f998 <omp_get_place_proc_ids@@OMP_4.5+0x7d8>
   21a24:	add	x23, x23, #0x20
   21a28:	cmp	x19, x22
   21a2c:	b.eq	216e0 <omp_get_place_proc_ids@@OMP_4.5+0x2520>  // b.none
   21a30:	ldr	x27, [x28, #16]
   21a34:	add	x22, x22, #0x1
   21a38:	ldr	x2, [x23]
   21a3c:	lsl	x1, x22, #3
   21a40:	sub	x1, x1, #0x8
   21a44:	ldr	x0, [x23, #16]
   21a48:	cbnz	x2, 219f8 <omp_get_place_proc_ids@@OMP_4.5+0x2838>
   21a4c:	cmn	x0, #0x1
   21a50:	b.eq	21f98 <omp_get_place_proc_ids@@OMP_4.5+0x2dd8>  // b.none
   21a54:	cmn	x0, #0x2
   21a58:	mov	x5, #0x0                   	// #0
   21a5c:	b.eq	21a08 <omp_get_place_proc_ids@@OMP_4.5+0x2848>  // b.none
   21a60:	cmn	x0, #0x3
   21a64:	add	x5, x27, x0
   21a68:	b.ne	21a08 <omp_get_place_proc_ids@@OMP_4.5+0x2848>  // b.any
   21a6c:	ldr	x2, [x23, #32]
   21a70:	ldr	x3, [x26, x22, lsl #3]
   21a74:	ldp	x4, x5, [x2, #16]
   21a78:	ldr	x0, [x20, x22, lsl #3]
   21a7c:	sub	x0, x0, x3
   21a80:	ldr	x3, [x23, #48]
   21a84:	ldr	x2, [x4, #16]
   21a88:	add	x5, x5, x3
   21a8c:	add	x0, x0, x5
   21a90:	add	x5, x0, x2
   21a94:	b	21a08 <omp_get_place_proc_ids@@OMP_4.5+0x2848>
   21a98:	cmp	w4, #0x1d
   21a9c:	b.ne	21c94 <omp_get_place_proc_ids@@OMP_4.5+0x2ad4>  // b.any
   21aa0:	add	x0, x2, #0x8
   21aa4:	stp	x2, x0, [x29, #312]
   21aa8:	ldr	x1, [x29, #160]
   21aac:	stp	x3, x5, [x29, #216]
   21ab0:	ldr	x0, [x29, #240]
   21ab4:	str	x7, [x29, #232]
   21ab8:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   21abc:	mov	x6, x0
   21ac0:	cbz	x0, 223fc <omp_get_place_proc_ids@@OMP_4.5+0x323c>
   21ac4:	ldr	x13, [x0]
   21ac8:	ldr	x1, [x29, #312]
   21acc:	cmp	x13, x1
   21ad0:	b.hi	223fc <omp_get_place_proc_ids@@OMP_4.5+0x323c>  // b.pmore
   21ad4:	ldr	x2, [x0, #8]
   21ad8:	ldr	x0, [x29, #320]
   21adc:	ldp	x3, x5, [x29, #216]
   21ae0:	cmp	x2, x0
   21ae4:	ldr	x7, [x29, #232]
   21ae8:	b.cc	223fc <omp_get_place_proc_ids@@OMP_4.5+0x323c>  // b.lo, b.ul, b.last
   21aec:	sub	w0, w28, #0x1
   21af0:	sxtw	x2, w0
   21af4:	cbz	w23, 21ca4 <omp_get_place_proc_ids@@OMP_4.5+0x2ae4>
   21af8:	ldrh	w0, [x20, x2, lsl #1]
   21afc:	and	w0, w21, w0
   21b00:	cmp	w0, #0x1d
   21b04:	b.eq	21cb4 <omp_get_place_proc_ids@@OMP_4.5+0x2af4>  // b.none
   21b08:	sub	x4, x28, #0x1
   21b0c:	ldr	x2, [x5, #32]
   21b10:	add	x0, x19, x4, lsl #5
   21b14:	ldr	x0, [x0, #80]
   21b18:	cbz	x2, 21f44 <omp_get_place_proc_ids@@OMP_4.5+0x2d84>
   21b1c:	ldp	x4, x3, [x2, #16]
   21b20:	ldr	x2, [x4, #16]
   21b24:	add	x0, x0, x3
   21b28:	add	x0, x0, x2
   21b2c:	str	x0, [x29, #336]
   21b30:	cbz	x0, 21b40 <omp_get_place_proc_ids@@OMP_4.5+0x2980>
   21b34:	ldr	x2, [x24, x7]
   21b38:	sub	x0, x0, x2
   21b3c:	str	x0, [x29, #336]
   21b40:	ldp	x0, x2, [x6, #16]
   21b44:	mov	x3, #0x8                   	// #8
   21b48:	mov	x4, x27
   21b4c:	str	x6, [x29, #232]
   21b50:	add	x28, x28, #0x1
   21b54:	ldr	x0, [x0, #16]
   21b58:	add	x1, x1, x2
   21b5c:	ldr	x2, [x29, #128]
   21b60:	sub	x13, x0, x13
   21b64:	ldr	x0, [x29, #248]
   21b68:	add	x1, x13, x1
   21b6c:	bl	1f998 <omp_get_place_proc_ids@@OMP_4.5+0x7d8>
   21b70:	ldr	x6, [x29, #232]
   21b74:	ldr	x2, [x29, #312]
   21b78:	ldp	x0, x1, [x6, #16]
   21b7c:	ldr	x3, [x6]
   21b80:	ldr	x0, [x0, #16]
   21b84:	add	x1, x1, x2
   21b88:	sub	x0, x0, x3
   21b8c:	add	x0, x0, x1
   21b90:	str	x0, [x29, #336]
   21b94:	b	216bc <omp_get_place_proc_ids@@OMP_4.5+0x24fc>
   21b98:	ldrb	w6, [x20, x0]
   21b9c:	b	217cc <omp_get_place_proc_ids@@OMP_4.5+0x260c>
   21ba0:	ldr	x13, [x24, x7]
   21ba4:	ldr	x1, [x5, #96]
   21ba8:	add	x13, x28, x13
   21bac:	ldr	x0, [x22, x13, lsl #3]
   21bb0:	ldr	x3, [x24, x13, lsl #3]
   21bb4:	add	x0, x0, x3
   21bb8:	stp	x2, x0, [x29, #312]
   21bbc:	add	x2, x28, #0x1
   21bc0:	mov	x28, x2
   21bc4:	cbnz	x1, 216bc <omp_get_place_proc_ids@@OMP_4.5+0x24fc>
   21bc8:	ldr	x1, [x29, #160]
   21bcc:	str	x2, [x29, #168]
   21bd0:	ldr	x0, [x29, #240]
   21bd4:	str	w6, [x29, #184]
   21bd8:	stp	x14, x13, [x29, #208]
   21bdc:	stp	x15, x7, [x29, #224]
   21be0:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   21be4:	ldr	w6, [x29, #184]
   21be8:	mov	x1, x0
   21bec:	ldp	x14, x13, [x29, #208]
   21bf0:	ldp	x15, x7, [x29, #224]
   21bf4:	cbnz	x0, 21fbc <omp_get_place_proc_ids@@OMP_4.5+0x2dfc>
   21bf8:	ldrb	w0, [x29, #196]
   21bfc:	mov	x1, #0x1                   	// #1
   21c00:	ldr	x2, [x22, x7]
   21c04:	str	x13, [x29, #152]
   21c08:	ldr	x4, [x15, #8]
   21c0c:	asr	w0, w6, w0
   21c10:	add	x14, x2, x14
   21c14:	lsl	x0, x1, x0
   21c18:	sub	x1, x0, x4
   21c1c:	neg	x0, x0
   21c20:	ldr	x3, [x29, #320]
   21c24:	add	x1, x1, x14
   21c28:	and	x0, x1, x0
   21c2c:	sub	x2, x4, x2
   21c30:	add	x1, x2, x0
   21c34:	sub	x0, x3, x4
   21c38:	add	x0, x0, x1
   21c3c:	stp	x4, x1, [x29, #112]
   21c40:	str	x0, [x29, #200]
   21c44:	b	216bc <omp_get_place_proc_ids@@OMP_4.5+0x24fc>
   21c48:	ldrb	w1, [x29, #196]
   21c4c:	add	x0, x19, x3
   21c50:	ldr	x3, [x24, x7]
   21c54:	add	x28, x28, #0x1
   21c58:	asr	w6, w6, w1
   21c5c:	mov	x1, #0x1                   	// #1
   21c60:	lsl	x6, x1, x6
   21c64:	add	x14, x6, x14
   21c68:	neg	x6, x6
   21c6c:	mov	x4, x27
   21c70:	and	x6, x14, x6
   21c74:	ldr	x1, [x19, #16]
   21c78:	str	x6, [x0, #80]
   21c7c:	add	x0, x6, x3
   21c80:	str	x0, [x29, #200]
   21c84:	ldr	x0, [x29, #248]
   21c88:	add	x1, x6, x1
   21c8c:	bl	1f998 <omp_get_place_proc_ids@@OMP_4.5+0x7d8>
   21c90:	b	216bc <omp_get_place_proc_ids@@OMP_4.5+0x24fc>
   21c94:	str	x2, [x26]
   21c98:	ldr	x0, [x24, x7]
   21c9c:	add	x0, x2, x0
   21ca0:	b	21818 <omp_get_place_proc_ids@@OMP_4.5+0x2658>
   21ca4:	ldrb	w0, [x20, w0, sxtw]
   21ca8:	and	w0, w21, w0
   21cac:	cmp	w0, #0x1d
   21cb0:	b.ne	21b08 <omp_get_place_proc_ids@@OMP_4.5+0x2948>  // b.any
   21cb4:	ldr	x0, [x29, #336]
   21cb8:	b	21b30 <omp_get_place_proc_ids@@OMP_4.5+0x2970>
   21cbc:	ldr	x0, [x29, #240]
   21cc0:	str	xzr, [x26, #48]
   21cc4:	mov	x1, x13
   21cc8:	str	w6, [x29, #104]
   21ccc:	str	x3, [x29, #168]
   21cd0:	str	x14, [x29, #184]
   21cd4:	str	x5, [x29, #208]
   21cd8:	str	w4, [x29, #216]
   21cdc:	stp	x7, x13, [x29, #224]
   21ce0:	bl	25580 <omp_pause_resource_all@@OMP_5.0+0x2a8>
   21ce4:	ldr	w6, [x29, #104]
   21ce8:	ldr	w4, [x29, #216]
   21cec:	ldr	x3, [x29, #168]
   21cf0:	ldr	x14, [x29, #184]
   21cf4:	ldr	x5, [x29, #208]
   21cf8:	ldp	x7, x13, [x29, #224]
   21cfc:	str	x13, [x26, #48]
   21d00:	ldp	x0, x2, [x26]
   21d04:	str	x26, [x5, #64]
   21d08:	ldr	x1, [x29, #152]
   21d0c:	str	x19, [x26, #16]
   21d10:	cmn	x1, #0x1
   21d14:	sub	x2, x2, x0
   21d18:	b.eq	21f6c <omp_get_place_proc_ids@@OMP_4.5+0x2dac>  // b.none
   21d1c:	ldr	x8, [x29, #112]
   21d20:	cmp	x1, x28
   21d24:	csinv	x1, x1, xzr, ne  // ne = any
   21d28:	str	x1, [x29, #152]
   21d2c:	sub	x0, x0, x8
   21d30:	ldr	x8, [x29, #120]
   21d34:	add	x0, x0, x8
   21d38:	str	x0, [x26, #24]
   21d3c:	and	w0, w4, #0xe
   21d40:	add	x3, x19, x3
   21d44:	cmp	w0, #0x2
   21d48:	and	w0, w4, #0xfffffffe
   21d4c:	cset	w1, eq  // eq = none
   21d50:	cmp	w0, #0x12
   21d54:	cset	w0, eq  // eq = none
   21d58:	strb	w1, [x5, #72]
   21d5c:	strb	w0, [x5, #73]
   21d60:	mov	x1, x26
   21d64:	stp	xzr, x2, [x3, #80]
   21d68:	adrp	x2, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   21d6c:	ldr	q0, [x2, #3744]
   21d70:	str	x13, [x29, #184]
   21d74:	ldr	x0, [x29, #240]
   21d78:	str	w6, [x29, #208]
   21d7c:	str	q0, [x26, #32]
   21d80:	ldr	x2, [x19]
   21d84:	str	x7, [x29, #216]
   21d88:	str	w4, [x29, #224]
   21d8c:	add	x2, x2, #0x1
   21d90:	str	x2, [x19]
   21d94:	stp	xzr, xzr, [x26, #56]
   21d98:	str	x5, [x29, #232]
   21d9c:	bl	25350 <omp_pause_resource_all@@OMP_5.0+0x78>
   21da0:	ldr	w4, [x29, #224]
   21da4:	ldr	x13, [x29, #184]
   21da8:	cmp	w4, #0x5
   21dac:	ldr	x5, [x29, #232]
   21db0:	b.eq	22054 <omp_get_place_proc_ids@@OMP_4.5+0x2e94>  // b.none
   21db4:	ldr	w6, [x29, #208]
   21db8:	b.le	21ea0 <omp_get_place_proc_ids@@OMP_4.5+0x2ce0>
   21dbc:	cmp	w4, #0x11
   21dc0:	b.eq	21de8 <omp_get_place_proc_ids@@OMP_4.5+0x2c28>  // b.none
   21dc4:	b.le	21e5c <omp_get_place_proc_ids@@OMP_4.5+0x2c9c>
   21dc8:	cmp	w4, #0x80
   21dcc:	b.eq	21e10 <omp_get_place_proc_ids@@OMP_4.5+0x2c50>  // b.none
   21dd0:	b.le	21ed4 <omp_get_place_proc_ids@@OMP_4.5+0x2d14>
   21dd4:	cmp	w4, #0x82
   21dd8:	b.eq	21e10 <omp_get_place_proc_ids@@OMP_4.5+0x2c50>  // b.none
   21ddc:	and	w4, w4, #0xfffffffd
   21de0:	cmp	w4, #0x81
   21de4:	b.ne	21ef0 <omp_get_place_proc_ids@@OMP_4.5+0x2d30>  // b.any
   21de8:	ldp	x2, x3, [x26]
   21dec:	mov	x4, x27
   21df0:	ldr	x5, [x19, #16]
   21df4:	str	x13, [x29, #232]
   21df8:	ldr	x0, [x29, #248]
   21dfc:	ldr	x1, [x26, #24]
   21e00:	sub	x3, x3, x2
   21e04:	add	x1, x5, x1
   21e08:	bl	1f998 <omp_get_place_proc_ids@@OMP_4.5+0x7d8>
   21e0c:	ldr	x13, [x29, #232]
   21e10:	ldr	x0, [x26, #48]
   21e14:	cbz	x0, 21e54 <omp_get_place_proc_ids@@OMP_4.5+0x2c94>
   21e18:	ldr	x5, [x29, #248]
   21e1c:	mov	x3, #0x8                   	// #8
   21e20:	ldr	x4, [x19, #16]
   21e24:	ldr	x1, [x26, #24]
   21e28:	ldr	w0, [x5, #12]
   21e2c:	add	x4, x4, x1
   21e30:	str	x4, [x29, #264]
   21e34:	ldr	x1, [x13, #24]
   21e38:	str	x1, [x29, #232]
   21e3c:	ldr	x2, [x29, #96]
   21e40:	ldr	x5, [x5, #120]
   21e44:	blr	x5
   21e48:	tst	w0, #0xff
   21e4c:	ldr	x1, [x29, #232]
   21e50:	b.eq	22484 <omp_get_place_proc_ids@@OMP_4.5+0x32c4>  // b.none
   21e54:	add	x26, x26, #0x48
   21e58:	b	216b8 <omp_get_place_proc_ids@@OMP_4.5+0x24f8>
   21e5c:	cmp	w4, #0x6
   21e60:	b.eq	2245c <omp_get_place_proc_ids@@OMP_4.5+0x329c>  // b.none
   21e64:	cmp	w4, #0x8
   21e68:	b.ne	21ef0 <omp_get_place_proc_ids@@OMP_4.5+0x2d30>  // b.any
   21e6c:	ldp	x2, x3, [x26]
   21e70:	sub	x3, x3, x2
   21e74:	cmp	x3, #0x8
   21e78:	b.ne	22560 <omp_get_place_proc_ids@@OMP_4.5+0x33a0>  // b.any
   21e7c:	ldr	x5, [x19, #16]
   21e80:	mov	x4, x27
   21e84:	ldr	x0, [x29, #248]
   21e88:	str	x13, [x29, #232]
   21e8c:	ldr	x1, [x26, #24]
   21e90:	add	x1, x5, x1
   21e94:	bl	1f998 <omp_get_place_proc_ids@@OMP_4.5+0x7d8>
   21e98:	ldr	x13, [x29, #232]
   21e9c:	b	21e10 <omp_get_place_proc_ids@@OMP_4.5+0x2c50>
   21ea0:	cmp	w4, #0x4
   21ea4:	ldr	x7, [x29, #216]
   21ea8:	b.ne	21ee8 <omp_get_place_proc_ids@@OMP_4.5+0x2d28>  // b.any
   21eac:	ldr	x1, [x26]
   21eb0:	mov	x4, x27
   21eb4:	ldr	x3, [x24, x7]
   21eb8:	mov	x0, x19
   21ebc:	ldr	x1, [x1]
   21ec0:	str	x13, [x29, #232]
   21ec4:	ldr	x2, [x26, #24]
   21ec8:	bl	1fad8 <omp_get_place_proc_ids@@OMP_4.5+0x918>
   21ecc:	ldr	x13, [x29, #232]
   21ed0:	b	21e10 <omp_get_place_proc_ids@@OMP_4.5+0x2c50>
   21ed4:	cmp	w4, #0x12
   21ed8:	b.eq	21e10 <omp_get_place_proc_ids@@OMP_4.5+0x2c50>  // b.none
   21edc:	cmp	w4, #0x13
   21ee0:	b.eq	21de8 <omp_get_place_proc_ids@@OMP_4.5+0x2c28>  // b.none
   21ee4:	b	21ef0 <omp_get_place_proc_ids@@OMP_4.5+0x2d30>
   21ee8:	cmp	w4, #0x5
   21eec:	b.ne	21f1c <omp_get_place_proc_ids@@OMP_4.5+0x2d5c>  // b.any
   21ef0:	ldr	x0, [x29, #136]
   21ef4:	str	w6, [x29, #248]
   21ef8:	bl	1f740 <omp_get_place_proc_ids@@OMP_4.5+0x580>
   21efc:	ldr	w6, [x29, #248]
   21f00:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   21f04:	add	x1, x1, #0xeb0
   21f08:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   21f0c:	add	x1, x1, #0x10
   21f10:	add	x0, x0, #0xe20
   21f14:	mov	w2, w6
   21f18:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   21f1c:	cmp	w4, #0x2
   21f20:	b.eq	21e10 <omp_get_place_proc_ids@@OMP_4.5+0x2c50>  // b.none
   21f24:	b.le	21f34 <omp_get_place_proc_ids@@OMP_4.5+0x2d74>
   21f28:	cmp	w4, #0x3
   21f2c:	b.eq	21de8 <omp_get_place_proc_ids@@OMP_4.5+0x2c28>  // b.none
   21f30:	b	21ef0 <omp_get_place_proc_ids@@OMP_4.5+0x2d30>
   21f34:	cbz	w4, 21e10 <omp_get_place_proc_ids@@OMP_4.5+0x2c50>
   21f38:	cmp	w4, #0x1
   21f3c:	b.eq	21de8 <omp_get_place_proc_ids@@OMP_4.5+0x2c28>  // b.none
   21f40:	b	21ef0 <omp_get_place_proc_ids@@OMP_4.5+0x2d30>
   21f44:	cmn	x0, #0x1
   21f48:	b.eq	222bc <omp_get_place_proc_ids@@OMP_4.5+0x30fc>  // b.none
   21f4c:	cmn	x0, #0x2
   21f50:	b.eq	22300 <omp_get_place_proc_ids@@OMP_4.5+0x3140>  // b.none
   21f54:	cmn	x0, #0x3
   21f58:	b.eq	2234c <omp_get_place_proc_ids@@OMP_4.5+0x318c>  // b.none
   21f5c:	ldr	x2, [x19, #16]
   21f60:	add	x0, x0, x2
   21f64:	str	x0, [x29, #336]
   21f68:	b	21b30 <omp_get_place_proc_ids@@OMP_4.5+0x2970>
   21f6c:	ldrb	w0, [x29, #196]
   21f70:	mov	x1, #0x1                   	// #1
   21f74:	asr	w0, w6, w0
   21f78:	lsl	x0, x1, x0
   21f7c:	add	x14, x0, x14
   21f80:	neg	x0, x0
   21f84:	and	x0, x14, x0
   21f88:	str	x0, [x26, #24]
   21f8c:	add	x0, x0, x2
   21f90:	str	x0, [x29, #200]
   21f94:	b	21d3c <omp_get_place_proc_ids@@OMP_4.5+0x2b7c>
   21f98:	ldr	x5, [x20, x22, lsl #3]
   21f9c:	b	21a08 <omp_get_place_proc_ids@@OMP_4.5+0x2848>
   21fa0:	str	xzr, [x26, #48]
   21fa4:	b	21d00 <omp_get_place_proc_ids@@OMP_4.5+0x2b40>
   21fa8:	mov	w13, #0x1                   	// #1
   21fac:	mov	x3, #0xffffffffffffffff    	// #-1
   21fb0:	b	21524 <omp_get_place_proc_ids@@OMP_4.5+0x2364>
   21fb4:	str	xzr, [x29, #296]
   21fb8:	b	20d30 <omp_get_place_proc_ids@@OMP_4.5+0x1b70>
   21fbc:	cmp	x28, x13
   21fc0:	ldr	x2, [x29, #168]
   21fc4:	b.hi	216bc <omp_get_place_proc_ids@@OMP_4.5+0x24fc>  // b.pmore
   21fc8:	mov	w0, w23
   21fcc:	mov	x23, x28
   21fd0:	mov	w28, w0
   21fd4:	str	x25, [x29, #216]
   21fd8:	mov	x25, x20
   21fdc:	mov	x20, x1
   21fe0:	str	w21, [x29, #224]
   21fe4:	mov	x21, x19
   21fe8:	mov	x19, x13
   21fec:	str	x26, [x29, #232]
   21ff0:	mov	x26, x2
   21ff4:	nop
   21ff8:	mov	x3, x23
   21ffc:	mov	x7, x27
   22000:	mov	x6, x25
   22004:	mov	x5, x24
   22008:	mov	x4, x22
   2200c:	mov	x2, x26
   22010:	add	x23, x23, #0x1
   22014:	mov	x1, x20
   22018:	mov	x0, x21
   2201c:	bl	20868 <omp_get_place_proc_ids@@OMP_4.5+0x16a8>
   22020:	cmp	x19, x23
   22024:	b.cs	21ff8 <omp_get_place_proc_ids@@OMP_4.5+0x2e38>  // b.hs, b.nlast
   22028:	mov	w0, w28
   2202c:	mov	x19, x21
   22030:	mov	x20, x25
   22034:	mov	x28, x23
   22038:	ldr	w21, [x29, #224]
   2203c:	mov	w23, w0
   22040:	ldr	x25, [x29, #216]
   22044:	ldr	x26, [x29, #232]
   22048:	b	216bc <omp_get_place_proc_ids@@OMP_4.5+0x24fc>
   2204c:	ldr	x27, [x28, #16]
   22050:	b	219e0 <omp_get_place_proc_ids@@OMP_4.5+0x2820>
   22054:	ldp	x2, x3, [x26]
   22058:	mov	x4, x27
   2205c:	ldr	x6, [x19, #16]
   22060:	stp	x13, x5, [x29, #224]
   22064:	ldr	x0, [x29, #248]
   22068:	sub	x3, x3, x2
   2206c:	ldr	x1, [x26, #24]
   22070:	add	x1, x6, x1
   22074:	bl	1f998 <omp_get_place_proc_ids@@OMP_4.5+0x7d8>
   22078:	add	x6, x28, #0x1
   2207c:	cmp	x25, x6
   22080:	ldr	x13, [x29, #224]
   22084:	b.ls	21e10 <omp_get_place_proc_ids@@OMP_4.5+0x2c50>  // b.plast
   22088:	str	w23, [x29, #224]
   2208c:	mov	x28, x6
   22090:	ldr	x5, [x29, #232]
   22094:	str	x13, [x29, #232]
   22098:	cbnz	w23, 22194 <omp_get_place_proc_ids@@OMP_4.5+0x2fd4>
   2209c:	mov	x23, x5
   220a0:	ldrb	w0, [x20, w28, sxtw]
   220a4:	sub	x3, x28, #0x1
   220a8:	and	w0, w0, w21
   220ac:	cmp	w0, #0x4
   220b0:	b.ne	222ac <omp_get_place_proc_ids@@OMP_4.5+0x30ec>  // b.any
   220b4:	ldr	x2, [x22, x28, lsl #3]
   220b8:	ldr	x6, [x26]
   220bc:	cmp	x6, x2
   220c0:	b.hi	222ac <omp_get_place_proc_ids@@OMP_4.5+0x30ec>  // b.pmore
   220c4:	ldr	x1, [x26, #8]
   220c8:	add	x0, x2, #0x8
   220cc:	cmp	x1, x0
   220d0:	b.cc	222ac <omp_get_place_proc_ids@@OMP_4.5+0x30ec>  // b.lo, b.ul, b.last
   220d4:	ldr	x0, [x26, #32]
   220d8:	str	x26, [x23, #96]
   220dc:	strb	wzr, [x23, #104]
   220e0:	strb	wzr, [x23, #105]
   220e4:	cmn	x0, #0x1
   220e8:	b.eq	22274 <omp_get_place_proc_ids@@OMP_4.5+0x30b4>  // b.none
   220ec:	add	x0, x0, #0x1
   220f0:	mov	x4, x27
   220f4:	ldr	x1, [x2]
   220f8:	str	x0, [x26, #32]
   220fc:	ldr	x7, [x26, #24]
   22100:	mov	x0, x19
   22104:	ldr	x3, [x24, x28, lsl #3]
   22108:	sub	x6, x7, x6
   2210c:	add	x2, x2, x6
   22110:	add	x23, x23, #0x20
   22114:	bl	1fad8 <omp_get_place_proc_ids@@OMP_4.5+0x918>
   22118:	add	x0, x28, #0x1
   2211c:	cmp	x25, x0
   22120:	b.ls	22268 <omp_get_place_proc_ids@@OMP_4.5+0x30a8>  // b.plast
   22124:	mov	x28, x0
   22128:	b	220a0 <omp_get_place_proc_ids@@OMP_4.5+0x2ee0>
   2212c:	ldr	w0, [x29, #168]
   22130:	str	xzr, [x24, #8]
   22134:	stp	xzr, xzr, [x24, #16]
   22138:	str	xzr, [x24, #32]
   2213c:	cbz	w0, 20f4c <omp_get_place_proc_ids@@OMP_4.5+0x1d8c>
   22140:	b	21654 <omp_get_place_proc_ids@@OMP_4.5+0x2494>
   22144:	ldp	x0, x1, [x13, #16]
   22148:	mov	x4, x27
   2214c:	str	x13, [x29, #232]
   22150:	ldr	x0, [x0, #16]
   22154:	add	x1, x2, x1
   22158:	sub	x5, x0, x5
   2215c:	ldr	x0, [x29, #248]
   22160:	add	x1, x5, x1
   22164:	bl	1f998 <omp_get_place_proc_ids@@OMP_4.5+0x7d8>
   22168:	ldr	x13, [x29, #232]
   2216c:	ldr	x0, [x13, #32]
   22170:	b	218e0 <omp_get_place_proc_ids@@OMP_4.5+0x2720>
   22174:	ldr	x0, [x29, #136]
   22178:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   2217c:	b	20f6c <omp_get_place_proc_ids@@OMP_4.5+0x1dac>
   22180:	ldr	x0, [x29, #232]
   22184:	str	x0, [x11, #8]
   22188:	add	x12, x12, #0x1
   2218c:	str	x12, [x29, #304]
   22190:	b	2111c <omp_get_place_proc_ids@@OMP_4.5+0x1f5c>
   22194:	mov	x23, x5
   22198:	ldrh	w0, [x20, w28, sxtw #1]
   2219c:	sub	x3, x28, #0x1
   221a0:	and	w0, w0, w21
   221a4:	cmp	w0, #0x4
   221a8:	b.ne	222ac <omp_get_place_proc_ids@@OMP_4.5+0x30ec>  // b.any
   221ac:	ldr	x2, [x22, x28, lsl #3]
   221b0:	ldr	x6, [x26]
   221b4:	cmp	x2, x6
   221b8:	b.cc	222ac <omp_get_place_proc_ids@@OMP_4.5+0x30ec>  // b.lo, b.ul, b.last
   221bc:	ldr	x0, [x26, #8]
   221c0:	add	x1, x2, #0x8
   221c4:	cmp	x1, x0
   221c8:	b.hi	222ac <omp_get_place_proc_ids@@OMP_4.5+0x30ec>  // b.pmore
   221cc:	ldr	x0, [x26, #32]
   221d0:	str	x26, [x23, #96]
   221d4:	strb	wzr, [x23, #104]
   221d8:	strb	wzr, [x23, #105]
   221dc:	cmn	x0, #0x1
   221e0:	b.eq	22238 <omp_get_place_proc_ids@@OMP_4.5+0x3078>  // b.none
   221e4:	add	x0, x0, #0x1
   221e8:	mov	x4, x27
   221ec:	ldr	x1, [x2]
   221f0:	str	x0, [x26, #32]
   221f4:	ldr	x7, [x26, #24]
   221f8:	mov	x0, x19
   221fc:	ldr	x3, [x24, x28, lsl #3]
   22200:	sub	x6, x7, x6
   22204:	add	x2, x2, x6
   22208:	add	x23, x23, #0x20
   2220c:	bl	1fad8 <omp_get_place_proc_ids@@OMP_4.5+0x918>
   22210:	add	x0, x28, #0x1
   22214:	cmp	x25, x0
   22218:	b.ls	22268 <omp_get_place_proc_ids@@OMP_4.5+0x30a8>  // b.plast
   2221c:	mov	x28, x0
   22220:	b	22198 <omp_get_place_proc_ids@@OMP_4.5+0x2fd8>
   22224:	ldr	x0, [x29, #232]
   22228:	str	x0, [x5, #8]
   2222c:	add	x7, x7, #0x1
   22230:	str	x7, [x29, #304]
   22234:	b	21434 <omp_get_place_proc_ids@@OMP_4.5+0x2274>
   22238:	ldr	x7, [x26, #24]
   2223c:	mov	x0, x19
   22240:	ldr	x1, [x2]
   22244:	sub	x6, x7, x6
   22248:	ldr	x3, [x24, x28, lsl #3]
   2224c:	mov	x4, x27
   22250:	add	x2, x2, x6
   22254:	add	x23, x23, #0x20
   22258:	bl	1fad8 <omp_get_place_proc_ids@@OMP_4.5+0x918>
   2225c:	add	x0, x28, #0x1
   22260:	cmp	x25, x0
   22264:	b.hi	2221c <omp_get_place_proc_ids@@OMP_4.5+0x305c>  // b.pmore
   22268:	ldr	w23, [x29, #224]
   2226c:	ldr	x13, [x29, #232]
   22270:	b	21e10 <omp_get_place_proc_ids@@OMP_4.5+0x2c50>
   22274:	ldr	x7, [x26, #24]
   22278:	mov	x0, x19
   2227c:	ldr	x1, [x2]
   22280:	sub	x6, x7, x6
   22284:	ldr	x3, [x24, x28, lsl #3]
   22288:	mov	x4, x27
   2228c:	add	x2, x2, x6
   22290:	add	x23, x23, #0x20
   22294:	bl	1fad8 <omp_get_place_proc_ids@@OMP_4.5+0x918>
   22298:	add	x0, x28, #0x1
   2229c:	cmp	x25, x0
   222a0:	b.ls	22268 <omp_get_place_proc_ids@@OMP_4.5+0x30a8>  // b.plast
   222a4:	mov	x28, x0
   222a8:	b	220a0 <omp_get_place_proc_ids@@OMP_4.5+0x2ee0>
   222ac:	ldr	w23, [x29, #224]
   222b0:	mov	x28, x3
   222b4:	ldr	x13, [x29, #232]
   222b8:	b	21e10 <omp_get_place_proc_ids@@OMP_4.5+0x2c50>
   222bc:	ldr	x0, [x22, x4, lsl #3]
   222c0:	str	x0, [x29, #336]
   222c4:	b	21b30 <omp_get_place_proc_ids@@OMP_4.5+0x2970>
   222c8:	ldr	x1, [x29, #288]
   222cc:	add	x0, x1, x0, lsl #4
   222d0:	ldr	x1, [x1]
   222d4:	ldur	x0, [x0, #-8]
   222d8:	sub	x0, x0, x1
   222dc:	bl	8710 <malloc@plt>
   222e0:	str	x0, [x29, #272]
   222e4:	cbz	x0, 219d4 <omp_get_place_proc_ids@@OMP_4.5+0x2814>
   222e8:	str	xzr, [x28, #8]
   222ec:	str	x28, [x29, #280]
   222f0:	cbnz	w24, 22380 <omp_get_place_proc_ids@@OMP_4.5+0x31c0>
   222f4:	add	x0, x29, #0x110
   222f8:	str	x0, [x29, #176]
   222fc:	b	219e0 <omp_get_place_proc_ids@@OMP_4.5+0x2820>
   22300:	str	xzr, [x29, #336]
   22304:	b	21b40 <omp_get_place_proc_ids@@OMP_4.5+0x2980>
   22308:	mov	x28, x2
   2230c:	b	20ee0 <omp_get_place_proc_ids@@OMP_4.5+0x1d20>
   22310:	sub	x3, x0, #0x1
   22314:	lsl	x3, x3, #4
   22318:	b	21104 <omp_get_place_proc_ids@@OMP_4.5+0x1f44>
   2231c:	ldr	x1, [x29, #136]
   22320:	ldxr	w0, [x1]
   22324:	stlxr	w2, wzr, [x1]
   22328:	cbnz	w2, 22320 <omp_get_place_proc_ids@@OMP_4.5+0x3160>
   2232c:	tbnz	w0, #31, 223b0 <omp_get_place_proc_ids@@OMP_4.5+0x31f0>
   22330:	mov	x0, x28
   22334:	mov	x28, #0x0                   	// #0
   22338:	bl	88b0 <free@plt>
   2233c:	b	20f6c <omp_get_place_proc_ids@@OMP_4.5+0x1dac>
   22340:	mov	x0, #0xffffffffffffffff    	// #-1
   22344:	str	x0, [x29, #296]
   22348:	b	21434 <omp_get_place_proc_ids@@OMP_4.5+0x2274>
   2234c:	ldr	x2, [x5, #64]
   22350:	add	x3, x19, x3
   22354:	ldr	x0, [x22, x4, lsl #3]
   22358:	ldp	x5, x2, [x2, #16]
   2235c:	ldr	x3, [x3, #80]
   22360:	ldr	x4, [x22, x7]
   22364:	add	x2, x2, x3
   22368:	ldr	x3, [x5, #16]
   2236c:	sub	x0, x0, x4
   22370:	add	x0, x0, x2
   22374:	add	x0, x0, x3
   22378:	str	x0, [x29, #336]
   2237c:	b	21b30 <omp_get_place_proc_ids@@OMP_4.5+0x2970>
   22380:	ldr	x0, [x29, #208]
   22384:	cbnz	x0, 223a4 <omp_get_place_proc_ids@@OMP_4.5+0x31e4>
   22388:	add	x0, x29, #0x110
   2238c:	mov	x24, #0x0                   	// #0
   22390:	str	x0, [x29, #176]
   22394:	b	2165c <omp_get_place_proc_ids@@OMP_4.5+0x249c>
   22398:	sub	x2, x0, #0x1
   2239c:	lsl	x2, x2, #4
   223a0:	b	2141c <omp_get_place_proc_ids@@OMP_4.5+0x225c>
   223a4:	add	x0, x29, #0x110
   223a8:	str	x0, [x29, #176]
   223ac:	b	2199c <omp_get_place_proc_ids@@OMP_4.5+0x27dc>
   223b0:	ldr	x0, [x29, #136]
   223b4:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   223b8:	b	22330 <omp_get_place_proc_ids@@OMP_4.5+0x3170>
   223bc:	ldr	x1, [x29, #136]
   223c0:	ldxr	w0, [x1]
   223c4:	stlxr	w2, wzr, [x1]
   223c8:	cbnz	w2, 223c0 <omp_get_place_proc_ids@@OMP_4.5+0x3200>
   223cc:	tbnz	w0, #31, 22554 <omp_get_place_proc_ids@@OMP_4.5+0x3394>
   223d0:	adrp	x4, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   223d4:	adrp	x1, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   223d8:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   223dc:	add	x4, x4, #0xa98
   223e0:	add	x1, x1, #0x2e8
   223e4:	add	x6, x20, x22
   223e8:	add	x0, x0, #0xaa0
   223ec:	mov	x5, x20
   223f0:	add	x3, x19, x22
   223f4:	mov	x2, x19
   223f8:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   223fc:	ldr	x0, [x29, #136]
   22400:	bl	1f740 <omp_get_place_proc_ids@@OMP_4.5+0x580>
   22404:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   22408:	add	x0, x0, #0xd78
   2240c:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   22410:	ldr	x1, [x29, #136]
   22414:	mov	x6, x10
   22418:	ldxr	w0, [x1]
   2241c:	stlxr	w2, wzr, [x1]
   22420:	cbnz	w2, 22418 <omp_get_place_proc_ids@@OMP_4.5+0x3258>
   22424:	tbnz	w0, #31, 22448 <omp_get_place_proc_ids@@OMP_4.5+0x3288>
   22428:	ldp	x3, x4, [x6]
   2242c:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   22430:	ldp	x1, x2, [x29, #312]
   22434:	add	x0, x0, #0xb58
   22438:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2243c:	ldr	x0, [x29, #136]
   22440:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   22444:	b	20d64 <omp_get_place_proc_ids@@OMP_4.5+0x1ba4>
   22448:	ldr	x0, [x29, #136]
   2244c:	str	x6, [x29, #248]
   22450:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   22454:	ldr	x6, [x29, #248]
   22458:	b	22428 <omp_get_place_proc_ids@@OMP_4.5+0x3268>
   2245c:	ldp	x1, x19, [x26]
   22460:	ldr	x0, [x29, #136]
   22464:	sub	x19, x19, x1
   22468:	bl	1f740 <omp_get_place_proc_ids@@OMP_4.5+0x580>
   2246c:	ldr	x1, [x26]
   22470:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   22474:	mov	x3, x19
   22478:	mov	x2, x19
   2247c:	add	x0, x0, #0xd98
   22480:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   22484:	mov	x5, x1
   22488:	ldr	x1, [x29, #136]
   2248c:	ldxr	w0, [x1]
   22490:	stlxr	w2, wzr, [x1]
   22494:	cbnz	w2, 2248c <omp_get_place_proc_ids@@OMP_4.5+0x32cc>
   22498:	tbnz	w0, #31, 22580 <omp_get_place_proc_ids@@OMP_4.5+0x33c0>
   2249c:	ldr	x2, [x29, #96]
   224a0:	adrp	x4, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   224a4:	adrp	x1, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   224a8:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   224ac:	add	x4, x4, #0xa98
   224b0:	add	x1, x1, #0x2e8
   224b4:	add	x6, x5, #0x8
   224b8:	add	x0, x0, #0xaa0
   224bc:	add	x3, x2, #0x8
   224c0:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   224c4:	ldr	x25, [x29, #248]
   224c8:	mov	x1, x13
   224cc:	add	x3, x26, #0x8
   224d0:	mov	x2, x26
   224d4:	mov	x0, x25
   224d8:	bl	1feb8 <omp_get_place_proc_ids@@OMP_4.5+0xcf8>
   224dc:	ldr	x0, [x29, #136]
   224e0:	bl	1f740 <omp_get_place_proc_ids@@OMP_4.5+0x580>
   224e4:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   224e8:	add	x0, x0, #0xd18
   224ec:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   224f0:	ldr	x0, [x29, #136]
   224f4:	stp	x1, x2, [x29, #232]
   224f8:	str	x3, [x29, #248]
   224fc:	bl	1f740 <omp_get_place_proc_ids@@OMP_4.5+0x580>
   22500:	ldp	x5, x2, [x29, #232]
   22504:	adrp	x4, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   22508:	ldr	x3, [x29, #248]
   2250c:	adrp	x1, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   22510:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   22514:	add	x4, x4, #0xa98
   22518:	add	x1, x1, #0x2e8
   2251c:	add	x0, x0, #0xaa0
   22520:	add	x6, x5, x3
   22524:	add	x3, x2, x3
   22528:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2252c:	ldr	x0, [x29, #136]
   22530:	bl	1f740 <omp_get_place_proc_ids@@OMP_4.5+0x580>
   22534:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   22538:	add	x0, x0, #0xd40
   2253c:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   22540:	ldr	x0, [x29, #136]
   22544:	bl	1f740 <omp_get_place_proc_ids@@OMP_4.5+0x580>
   22548:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   2254c:	add	x0, x0, #0xd58
   22550:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   22554:	ldr	x0, [x29, #136]
   22558:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   2255c:	b	223d0 <omp_get_place_proc_ids@@OMP_4.5+0x3210>
   22560:	adrp	x3, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   22564:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   22568:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   2256c:	add	x3, x3, #0xeb0
   22570:	add	x1, x1, #0xdd0
   22574:	add	x0, x0, #0xdf0
   22578:	mov	w2, #0x3b4                 	// #948
   2257c:	bl	8a60 <__assert_fail@plt>
   22580:	ldr	x0, [x29, #136]
   22584:	str	x5, [x29, #248]
   22588:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   2258c:	ldr	x5, [x29, #248]
   22590:	b	2249c <omp_get_place_proc_ids@@OMP_4.5+0x32dc>
   22594:	nop
   22598:	stp	x29, x30, [sp, #-48]!
   2259c:	mov	x29, sp
   225a0:	stp	x19, x20, [sp, #16]
   225a4:	mov	x19, x1
   225a8:	add	x20, x0, #0xa0
   225ac:	mov	x0, x20
   225b0:	bl	25580 <omp_pause_resource_all@@OMP_5.0+0x2a8>
   225b4:	ldr	x1, [x19, #48]
   225b8:	cbz	x1, 225c4 <omp_get_place_proc_ids@@OMP_4.5+0x3404>
   225bc:	mov	x0, x20
   225c0:	bl	25350 <omp_pause_resource_all@@OMP_5.0+0x78>
   225c4:	ldr	x19, [x19, #16]
   225c8:	ldr	x0, [x19]
   225cc:	cmp	x0, #0x1
   225d0:	b.ls	225ec <omp_get_place_proc_ids@@OMP_4.5+0x342c>  // b.plast
   225d4:	sub	x1, x0, #0x1
   225d8:	str	x1, [x19]
   225dc:	mov	w0, #0x0                   	// #0
   225e0:	ldp	x19, x20, [sp, #16]
   225e4:	ldp	x29, x30, [sp], #48
   225e8:	ret
   225ec:	ldr	x0, [x19, #24]
   225f0:	cbnz	x0, 22614 <omp_get_place_proc_ids@@OMP_4.5+0x3454>
   225f4:	ldr	x0, [x19, #8]
   225f8:	bl	88b0 <free@plt>
   225fc:	mov	x0, x19
   22600:	bl	88b0 <free@plt>
   22604:	mov	w0, #0x1                   	// #1
   22608:	ldp	x19, x20, [sp, #16]
   2260c:	ldp	x29, x30, [sp], #48
   22610:	ret
   22614:	ldr	x20, [x19, #56]
   22618:	ldr	w0, [x20, #12]
   2261c:	ldr	x2, [x20, #104]
   22620:	str	x21, [sp, #32]
   22624:	ldr	x21, [x19, #32]
   22628:	mov	x1, x21
   2262c:	blr	x2
   22630:	tst	w0, #0xff
   22634:	b.eq	22640 <omp_get_place_proc_ids@@OMP_4.5+0x3480>  // b.none
   22638:	ldr	x21, [sp, #32]
   2263c:	b	225f4 <omp_get_place_proc_ids@@OMP_4.5+0x3434>
   22640:	add	x0, x20, #0xa8
   22644:	bl	1f740 <omp_get_place_proc_ids@@OMP_4.5+0x580>
   22648:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   2264c:	mov	x1, x21
   22650:	add	x0, x0, #0xb28
   22654:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   22658:	stp	x29, x30, [sp, #-112]!
   2265c:	and	w1, w1, #0xff
   22660:	mov	x29, sp
   22664:	str	w1, [sp, #100]
   22668:	ldr	x1, [x0, #48]
   2266c:	cbz	x1, 2286c <omp_get_place_proc_ids@@OMP_4.5+0x36ac>
   22670:	stp	x23, x24, [sp, #48]
   22674:	mov	x23, x0
   22678:	mov	w0, #0x1                   	// #1
   2267c:	stp	x25, x26, [sp, #64]
   22680:	ldr	x26, [x23, #56]
   22684:	add	x1, x26, #0xa8
   22688:	str	x1, [sp, #104]
   2268c:	mov	x2, x1
   22690:	ldaxr	w1, [x2]
   22694:	cbnz	w1, 226a0 <omp_get_place_proc_ids@@OMP_4.5+0x34e0>
   22698:	stxr	w3, w0, [x2]
   2269c:	cbnz	w3, 22690 <omp_get_place_proc_ids@@OMP_4.5+0x34d0>
   226a0:	cmp	w1, #0x0
   226a4:	b.ne	22978 <omp_get_place_proc_ids@@OMP_4.5+0x37b8>  // b.any
   226a8:	ldr	w0, [x26, #172]
   226ac:	cmp	w0, #0x2
   226b0:	b.eq	22844 <omp_get_place_proc_ids@@OMP_4.5+0x3684>  // b.none
   226b4:	ldr	x0, [x23, #48]
   226b8:	stp	x19, x20, [sp, #16]
   226bc:	add	x25, x26, #0xa0
   226c0:	stp	x21, x22, [sp, #32]
   226c4:	add	x20, x23, #0x40
   226c8:	mov	x21, #0x0                   	// #0
   226cc:	cbz	x0, 22790 <omp_get_place_proc_ids@@OMP_4.5+0x35d0>
   226d0:	stp	x27, x28, [sp, #80]
   226d4:	nop
   226d8:	ldr	x19, [x20]
   226dc:	cbz	x19, 2277c <omp_get_place_proc_ids@@OMP_4.5+0x35bc>
   226e0:	ldr	x1, [x19, #32]
   226e4:	sub	x2, x1, #0x2
   226e8:	cmn	x2, #0x4
   226ec:	b.hi	227d0 <omp_get_place_proc_ids@@OMP_4.5+0x3610>  // b.pmore
   226f0:	ldrb	w2, [x20, #9]
   226f4:	sub	x1, x1, #0x1
   226f8:	str	x1, [x19, #32]
   226fc:	cbz	w2, 2277c <omp_get_place_proc_ids@@OMP_4.5+0x35bc>
   22700:	mov	w28, #0x0                   	// #0
   22704:	ldp	x5, x24, [x20, #16]
   22708:	ldp	x1, x22, [x19, #16]
   2270c:	ldr	x27, [x19]
   22710:	ldr	w0, [x26, #12]
   22714:	mov	x3, x24
   22718:	add	x27, x5, x27
   2271c:	add	x22, x5, x22
   22720:	ldr	x2, [x1, #16]
   22724:	mov	x1, x27
   22728:	ldr	x5, [x26, #112]
   2272c:	add	x22, x22, x2
   22730:	mov	x2, x22
   22734:	blr	x5
   22738:	tst	w0, #0xff
   2273c:	b.eq	2292c <omp_get_place_proc_ids@@OMP_4.5+0x376c>  // b.none
   22740:	cbz	w28, 2282c <omp_get_place_proc_ids@@OMP_4.5+0x366c>
   22744:	mov	x1, x19
   22748:	mov	x0, x25
   2274c:	bl	25580 <omp_pause_resource_all@@OMP_5.0+0x2a8>
   22750:	ldr	x1, [x19, #48]
   22754:	cbz	x1, 22760 <omp_get_place_proc_ids@@OMP_4.5+0x35a0>
   22758:	mov	x0, x25
   2275c:	bl	25350 <omp_pause_resource_all@@OMP_5.0+0x78>
   22760:	ldr	x19, [x19, #16]
   22764:	ldr	x0, [x19]
   22768:	cmp	x0, #0x1
   2276c:	b.ls	22814 <omp_get_place_proc_ids@@OMP_4.5+0x3654>  // b.plast
   22770:	sub	x0, x0, #0x1
   22774:	str	x0, [x19]
   22778:	ldr	x0, [x23, #48]
   2277c:	add	x21, x21, #0x1
   22780:	cmp	x21, x0
   22784:	add	x20, x20, #0x20
   22788:	b.cc	226d8 <omp_get_place_proc_ids@@OMP_4.5+0x3518>  // b.lo, b.ul, b.last
   2278c:	ldp	x27, x28, [sp, #80]
   22790:	ldr	x0, [x23]
   22794:	cmp	x0, #0x1
   22798:	b.ls	22874 <omp_get_place_proc_ids@@OMP_4.5+0x36b4>  // b.plast
   2279c:	sub	x0, x0, #0x1
   227a0:	str	x0, [x23]
   227a4:	ldr	x1, [sp, #104]
   227a8:	ldxr	w0, [x1]
   227ac:	stlxr	w2, wzr, [x1]
   227b0:	cbnz	w2, 227a8 <omp_get_place_proc_ids@@OMP_4.5+0x35e8>
   227b4:	tbnz	w0, #31, 228c8 <omp_get_place_proc_ids@@OMP_4.5+0x3708>
   227b8:	ldp	x19, x20, [sp, #16]
   227bc:	ldp	x21, x22, [sp, #32]
   227c0:	ldp	x23, x24, [sp, #48]
   227c4:	ldp	x25, x26, [sp, #64]
   227c8:	ldp	x29, x30, [sp], #112
   227cc:	ret
   227d0:	cmp	x1, #0x1
   227d4:	b.eq	227f4 <omp_get_place_proc_ids@@OMP_4.5+0x3634>  // b.none
   227d8:	ldrb	w1, [x20, #9]
   227dc:	cbnz	w1, 22700 <omp_get_place_proc_ids@@OMP_4.5+0x3540>
   227e0:	add	x21, x21, #0x1
   227e4:	add	x20, x20, #0x20
   227e8:	cmp	x21, x0
   227ec:	b.cc	226d8 <omp_get_place_proc_ids@@OMP_4.5+0x3518>  // b.lo, b.ul, b.last
   227f0:	b	2278c <omp_get_place_proc_ids@@OMP_4.5+0x35cc>
   227f4:	ldr	w0, [sp, #100]
   227f8:	str	xzr, [x19, #32]
   227fc:	cbz	w0, 22808 <omp_get_place_proc_ids@@OMP_4.5+0x3648>
   22800:	ldrb	w28, [x20, #8]
   22804:	cbnz	w28, 22704 <omp_get_place_proc_ids@@OMP_4.5+0x3544>
   22808:	ldrb	w28, [x20, #9]
   2280c:	cbz	w28, 22744 <omp_get_place_proc_ids@@OMP_4.5+0x3584>
   22810:	b	22704 <omp_get_place_proc_ids@@OMP_4.5+0x3544>
   22814:	ldr	x0, [x19, #24]
   22818:	cbnz	x0, 22890 <omp_get_place_proc_ids@@OMP_4.5+0x36d0>
   2281c:	ldr	x0, [x19, #8]
   22820:	bl	88b0 <free@plt>
   22824:	mov	x0, x19
   22828:	bl	88b0 <free@plt>
   2282c:	ldr	x0, [x23, #48]
   22830:	add	x21, x21, #0x1
   22834:	add	x20, x20, #0x20
   22838:	cmp	x21, x0
   2283c:	b.cc	226d8 <omp_get_place_proc_ids@@OMP_4.5+0x3518>  // b.lo, b.ul, b.last
   22840:	b	2278c <omp_get_place_proc_ids@@OMP_4.5+0x35cc>
   22844:	ldr	x1, [sp, #104]
   22848:	ldxr	w0, [x1]
   2284c:	stlxr	w2, wzr, [x1]
   22850:	cbnz	w2, 22848 <omp_get_place_proc_ids@@OMP_4.5+0x3688>
   22854:	tbnz	w0, #31, 22920 <omp_get_place_proc_ids@@OMP_4.5+0x3760>
   22858:	ldr	x0, [x23, #8]
   2285c:	bl	88b0 <free@plt>
   22860:	mov	x0, x23
   22864:	ldp	x23, x24, [sp, #48]
   22868:	ldp	x25, x26, [sp, #64]
   2286c:	ldp	x29, x30, [sp], #112
   22870:	b	88b0 <free@plt>
   22874:	ldr	x0, [x23, #24]
   22878:	cbnz	x0, 228e4 <omp_get_place_proc_ids@@OMP_4.5+0x3724>
   2287c:	ldr	x0, [x23, #8]
   22880:	bl	88b0 <free@plt>
   22884:	mov	x0, x23
   22888:	bl	88b0 <free@plt>
   2288c:	b	227a4 <omp_get_place_proc_ids@@OMP_4.5+0x35e4>
   22890:	ldr	x22, [x19, #56]
   22894:	ldr	x27, [x19, #32]
   22898:	ldr	w0, [x22, #12]
   2289c:	ldr	x2, [x22, #104]
   228a0:	mov	x1, x27
   228a4:	blr	x2
   228a8:	tst	w0, #0xff
   228ac:	b.ne	2281c <omp_get_place_proc_ids@@OMP_4.5+0x365c>  // b.any
   228b0:	add	x0, x22, #0xa8
   228b4:	bl	1f740 <omp_get_place_proc_ids@@OMP_4.5+0x580>
   228b8:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   228bc:	mov	x1, x27
   228c0:	add	x0, x0, #0xb28
   228c4:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   228c8:	ldp	x19, x20, [sp, #16]
   228cc:	ldp	x21, x22, [sp, #32]
   228d0:	ldp	x23, x24, [sp, #48]
   228d4:	ldp	x25, x26, [sp, #64]
   228d8:	ldr	x0, [sp, #104]
   228dc:	ldp	x29, x30, [sp], #112
   228e0:	b	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   228e4:	ldr	x19, [x23, #56]
   228e8:	ldr	x20, [x23, #32]
   228ec:	ldr	w0, [x19, #12]
   228f0:	ldr	x2, [x19, #104]
   228f4:	mov	x1, x20
   228f8:	blr	x2
   228fc:	tst	w0, #0xff
   22900:	b.ne	2287c <omp_get_place_proc_ids@@OMP_4.5+0x36bc>  // b.any
   22904:	add	x0, x19, #0xa8
   22908:	stp	x27, x28, [sp, #80]
   2290c:	bl	1f740 <omp_get_place_proc_ids@@OMP_4.5+0x580>
   22910:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   22914:	mov	x1, x20
   22918:	add	x0, x0, #0xb28
   2291c:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   22920:	ldr	x0, [sp, #104]
   22924:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   22928:	b	22858 <omp_get_place_proc_ids@@OMP_4.5+0x3698>
   2292c:	ldr	x1, [sp, #104]
   22930:	ldxr	w0, [x1]
   22934:	stlxr	w2, wzr, [x1]
   22938:	cbnz	w2, 22930 <omp_get_place_proc_ids@@OMP_4.5+0x3770>
   2293c:	tbnz	w0, #31, 2296c <omp_get_place_proc_ids@@OMP_4.5+0x37ac>
   22940:	adrp	x4, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   22944:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   22948:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   2294c:	add	x4, x4, #0x2e8
   22950:	add	x1, x1, #0xa98
   22954:	add	x6, x27, x24
   22958:	add	x0, x0, #0xaa0
   2295c:	mov	x5, x27
   22960:	add	x3, x22, x24
   22964:	mov	x2, x22
   22968:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2296c:	ldr	x0, [sp, #104]
   22970:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   22974:	b	22940 <omp_get_place_proc_ids@@OMP_4.5+0x3780>
   22978:	ldr	x0, [sp, #104]
   2297c:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   22980:	b	226a8 <omp_get_place_proc_ids@@OMP_4.5+0x34e8>
   22984:	nop

0000000000022988 <GOMP_offload_register_ver@@GOMP_4.5>:
   22988:	stp	x29, x30, [sp, #-96]!
   2298c:	mov	x29, sp
   22990:	stp	x19, x20, [sp, #16]
   22994:	stp	x21, x22, [sp, #32]
   22998:	stp	x23, x24, [sp, #48]
   2299c:	mov	w24, w0
   229a0:	lsr	w0, w0, #16
   229a4:	stp	x25, x26, [sp, #64]
   229a8:	cmp	w0, #0x1
   229ac:	stp	x27, x28, [sp, #80]
   229b0:	b.hi	22b50 <GOMP_offload_register_ver@@GOMP_4.5+0x1c8>  // b.pmore
   229b4:	adrp	x27, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   229b8:	add	x0, x27, #0x560
   229bc:	mov	x26, x1
   229c0:	mov	x25, x3
   229c4:	add	x0, x0, #0x10
   229c8:	mov	w28, w2
   229cc:	mov	w2, #0x1                   	// #1
   229d0:	ldaxr	w1, [x0]
   229d4:	cbnz	w1, 229e0 <GOMP_offload_register_ver@@GOMP_4.5+0x58>
   229d8:	stxr	w3, w2, [x0]
   229dc:	cbnz	w3, 229d0 <GOMP_offload_register_ver@@GOMP_4.5+0x48>
   229e0:	cmp	w1, #0x0
   229e4:	b.ne	22b48 <GOMP_offload_register_ver@@GOMP_4.5+0x1c0>  // b.any
   229e8:	ldr	w0, [x27, #1376]
   229ec:	add	x23, x27, #0x560
   229f0:	mov	x22, #0x0                   	// #0
   229f4:	mov	w21, #0x0                   	// #0
   229f8:	cmp	w0, #0x0
   229fc:	mov	w5, #0x1                   	// #1
   22a00:	b.gt	22a2c <GOMP_offload_register_ver@@GOMP_4.5+0xa4>
   22a04:	b	22aa8 <GOMP_offload_register_ver@@GOMP_4.5+0x120>
   22a08:	ldxr	w4, [x20]
   22a0c:	stlxr	w0, wzr, [x20]
   22a10:	cbnz	w0, 22a08 <GOMP_offload_register_ver@@GOMP_4.5+0x80>
   22a14:	tbnz	w4, #31, 22a84 <GOMP_offload_register_ver@@GOMP_4.5+0xfc>
   22a18:	ldr	w0, [x23]
   22a1c:	add	w21, w21, #0x1
   22a20:	add	x22, x22, #0x130
   22a24:	cmp	w0, w21
   22a28:	b.le	22aa8 <GOMP_offload_register_ver@@GOMP_4.5+0x120>
   22a2c:	ldr	x19, [x23, #8]
   22a30:	add	x19, x19, x22
   22a34:	add	x20, x19, #0xa8
   22a38:	ldaxr	w1, [x20]
   22a3c:	cbnz	w1, 22a48 <GOMP_offload_register_ver@@GOMP_4.5+0xc0>
   22a40:	stxr	w0, w5, [x20]
   22a44:	cbnz	w0, 22a38 <GOMP_offload_register_ver@@GOMP_4.5+0xb0>
   22a48:	cmp	w1, #0x0
   22a4c:	b.ne	22b38 <GOMP_offload_register_ver@@GOMP_4.5+0x1b0>  // b.any
   22a50:	ldr	w0, [x19, #16]
   22a54:	cmp	w0, w28
   22a58:	b.ne	22a08 <GOMP_offload_register_ver@@GOMP_4.5+0x80>  // b.any
   22a5c:	ldr	w4, [x19, #172]
   22a60:	cmp	w4, #0x1
   22a64:	b.ne	22a08 <GOMP_offload_register_ver@@GOMP_4.5+0x80>  // b.any
   22a68:	mov	x0, x19
   22a6c:	mov	x3, x25
   22a70:	mov	x2, x26
   22a74:	mov	w1, w24
   22a78:	bl	20280 <omp_get_place_proc_ids@@OMP_4.5+0x10c0>
   22a7c:	mov	w5, #0x1                   	// #1
   22a80:	b	22a08 <GOMP_offload_register_ver@@GOMP_4.5+0x80>
   22a84:	mov	x0, x20
   22a88:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   22a8c:	ldr	w0, [x23]
   22a90:	add	w21, w21, #0x1
   22a94:	add	x22, x22, #0x130
   22a98:	mov	w5, #0x1                   	// #1
   22a9c:	cmp	w0, w21
   22aa0:	b.gt	22a2c <GOMP_offload_register_ver@@GOMP_4.5+0xa4>
   22aa4:	nop
   22aa8:	add	x19, x27, #0x560
   22aac:	mov	w20, #0x18                  	// #24
   22ab0:	ldr	w21, [x19, #24]
   22ab4:	ldr	x0, [x19, #32]
   22ab8:	add	w21, w21, #0x1
   22abc:	smull	x20, w21, w20
   22ac0:	mov	x1, x20
   22ac4:	bl	87c0 <realloc@plt>
   22ac8:	cbz	x0, 22b64 <GOMP_offload_register_ver@@GOMP_4.5+0x1dc>
   22acc:	sub	x20, x20, #0x18
   22ad0:	add	x19, x19, #0x10
   22ad4:	add	x1, x0, x20
   22ad8:	str	w21, [x19, #8]
   22adc:	str	x0, [x19, #16]
   22ae0:	str	w24, [x0, x20]
   22ae4:	str	w28, [x1, #4]
   22ae8:	stp	x26, x25, [x1, #8]
   22aec:	ldxr	w0, [x19]
   22af0:	stlxr	w1, wzr, [x19]
   22af4:	cbnz	w1, 22aec <GOMP_offload_register_ver@@GOMP_4.5+0x164>
   22af8:	tbnz	w0, #31, 22b18 <GOMP_offload_register_ver@@GOMP_4.5+0x190>
   22afc:	ldp	x19, x20, [sp, #16]
   22b00:	ldp	x21, x22, [sp, #32]
   22b04:	ldp	x23, x24, [sp, #48]
   22b08:	ldp	x25, x26, [sp, #64]
   22b0c:	ldp	x27, x28, [sp, #80]
   22b10:	ldp	x29, x30, [sp], #96
   22b14:	ret
   22b18:	mov	x0, x19
   22b1c:	ldp	x19, x20, [sp, #16]
   22b20:	ldp	x21, x22, [sp, #32]
   22b24:	ldp	x23, x24, [sp, #48]
   22b28:	ldp	x25, x26, [sp, #64]
   22b2c:	ldp	x27, x28, [sp, #80]
   22b30:	ldp	x29, x30, [sp], #96
   22b34:	b	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   22b38:	mov	x0, x20
   22b3c:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   22b40:	mov	w5, #0x1                   	// #1
   22b44:	b	22a50 <GOMP_offload_register_ver@@GOMP_4.5+0xc8>
   22b48:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   22b4c:	b	229e8 <GOMP_offload_register_ver@@GOMP_4.5+0x60>
   22b50:	mov	w2, w0
   22b54:	mov	w1, #0x1                   	// #1
   22b58:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   22b5c:	add	x0, x0, #0xe40
   22b60:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   22b64:	add	x0, x19, #0x10
   22b68:	bl	1f740 <omp_get_place_proc_ids@@OMP_4.5+0x580>
   22b6c:	adrp	x0, 2c000 <omp_set_affinity_format@@OMP_5.0+0x58>
   22b70:	mov	x1, x20
   22b74:	add	x0, x0, #0xd00
   22b78:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   22b7c:	nop

0000000000022b80 <GOMP_offload_register@@GOMP_4.0.1>:
   22b80:	mov	w4, w1
   22b84:	mov	x3, x2
   22b88:	mov	x1, x0
   22b8c:	mov	w2, w4
   22b90:	mov	w0, #0x0                   	// #0
   22b94:	b	89c0 <GOMP_offload_register_ver@plt>

0000000000022b98 <GOMP_offload_unregister_ver@@GOMP_4.5>:
   22b98:	stp	x29, x30, [sp, #-112]!
   22b9c:	mov	x29, sp
   22ba0:	stp	x27, x28, [sp, #80]
   22ba4:	adrp	x27, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   22ba8:	add	x4, x27, #0x560
   22bac:	add	x4, x4, #0x10
   22bb0:	stp	x25, x26, [sp, #64]
   22bb4:	mov	x25, x1
   22bb8:	mov	x26, x3
   22bbc:	mov	w28, w2
   22bc0:	mov	w2, #0x1                   	// #1
   22bc4:	stp	x21, x22, [sp, #32]
   22bc8:	stp	x23, x24, [sp, #48]
   22bcc:	str	w0, [sp, #108]
   22bd0:	ldaxr	w1, [x4]
   22bd4:	cbnz	w1, 22be0 <GOMP_offload_unregister_ver@@GOMP_4.5+0x48>
   22bd8:	stxr	w0, w2, [x4]
   22bdc:	cbnz	w0, 22bd0 <GOMP_offload_unregister_ver@@GOMP_4.5+0x38>
   22be0:	cmp	w1, #0x0
   22be4:	b.ne	22d5c <GOMP_offload_unregister_ver@@GOMP_4.5+0x1c4>  // b.any
   22be8:	ldr	w0, [x27, #1376]
   22bec:	add	x23, x27, #0x560
   22bf0:	mov	x22, #0x0                   	// #0
   22bf4:	mov	w21, #0x0                   	// #0
   22bf8:	cmp	w0, #0x0
   22bfc:	mov	w24, #0x1                   	// #1
   22c00:	b.le	22ca4 <GOMP_offload_unregister_ver@@GOMP_4.5+0x10c>
   22c04:	stp	x19, x20, [sp, #16]
   22c08:	b	22c30 <GOMP_offload_unregister_ver@@GOMP_4.5+0x98>
   22c0c:	ldxr	w4, [x20]
   22c10:	stlxr	w0, wzr, [x20]
   22c14:	cbnz	w0, 22c0c <GOMP_offload_unregister_ver@@GOMP_4.5+0x74>
   22c18:	tbnz	w4, #31, 22c84 <GOMP_offload_unregister_ver@@GOMP_4.5+0xec>
   22c1c:	ldr	w0, [x23]
   22c20:	add	w21, w21, #0x1
   22c24:	add	x22, x22, #0x130
   22c28:	cmp	w0, w21
   22c2c:	b.le	22ca0 <GOMP_offload_unregister_ver@@GOMP_4.5+0x108>
   22c30:	ldr	x19, [x23, #8]
   22c34:	add	x19, x19, x22
   22c38:	add	x20, x19, #0xa8
   22c3c:	ldaxr	w1, [x20]
   22c40:	cbnz	w1, 22c4c <GOMP_offload_unregister_ver@@GOMP_4.5+0xb4>
   22c44:	stxr	w0, w24, [x20]
   22c48:	cbnz	w0, 22c3c <GOMP_offload_unregister_ver@@GOMP_4.5+0xa4>
   22c4c:	cmp	w1, #0x0
   22c50:	b.ne	22d50 <GOMP_offload_unregister_ver@@GOMP_4.5+0x1b8>  // b.any
   22c54:	ldr	w4, [x19, #16]
   22c58:	cmp	w4, w28
   22c5c:	b.ne	22c0c <GOMP_offload_unregister_ver@@GOMP_4.5+0x74>  // b.any
   22c60:	ldr	w0, [x19, #172]
   22c64:	cmp	w0, #0x1
   22c68:	b.ne	22c0c <GOMP_offload_unregister_ver@@GOMP_4.5+0x74>  // b.any
   22c6c:	ldr	w1, [sp, #108]
   22c70:	mov	x0, x19
   22c74:	mov	x3, x26
   22c78:	mov	x2, x25
   22c7c:	bl	1fc28 <omp_get_place_proc_ids@@OMP_4.5+0xa68>
   22c80:	b	22c0c <GOMP_offload_unregister_ver@@GOMP_4.5+0x74>
   22c84:	mov	x0, x20
   22c88:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   22c8c:	ldr	w0, [x23]
   22c90:	add	w21, w21, #0x1
   22c94:	add	x22, x22, #0x130
   22c98:	cmp	w21, w0
   22c9c:	b.lt	22c30 <GOMP_offload_unregister_ver@@GOMP_4.5+0x98>  // b.tstop
   22ca0:	ldp	x19, x20, [sp, #16]
   22ca4:	add	x1, x27, #0x560
   22ca8:	ldr	w0, [x1, #24]
   22cac:	cmp	w0, #0x0
   22cb0:	b.le	22d08 <GOMP_offload_unregister_ver@@GOMP_4.5+0x170>
   22cb4:	ldr	x4, [x1, #32]
   22cb8:	sub	w3, w0, #0x1
   22cbc:	mov	w2, #0x18                  	// #24
   22cc0:	add	x1, x4, #0x18
   22cc4:	mov	x0, x4
   22cc8:	umaddl	x2, w3, w2, x1
   22ccc:	b	22cdc <GOMP_offload_unregister_ver@@GOMP_4.5+0x144>
   22cd0:	add	x0, x0, #0x18
   22cd4:	cmp	x2, x0
   22cd8:	b.eq	22d08 <GOMP_offload_unregister_ver@@GOMP_4.5+0x170>  // b.none
   22cdc:	ldr	x1, [x0, #16]
   22ce0:	cmp	x1, x26
   22ce4:	b.ne	22cd0 <GOMP_offload_unregister_ver@@GOMP_4.5+0x138>  // b.any
   22ce8:	mov	w1, #0x18                  	// #24
   22cec:	add	x2, x27, #0x560
   22cf0:	smaddl	x4, w3, w1, x4
   22cf4:	str	w3, [x2, #24]
   22cf8:	ldp	x2, x3, [x4]
   22cfc:	stp	x2, x3, [x0]
   22d00:	ldr	x1, [x4, #16]
   22d04:	str	x1, [x0, #16]
   22d08:	add	x0, x27, #0x560
   22d0c:	add	x0, x0, #0x10
   22d10:	ldxr	w1, [x0]
   22d14:	stlxr	w2, wzr, [x0]
   22d18:	cbnz	w2, 22d10 <GOMP_offload_unregister_ver@@GOMP_4.5+0x178>
   22d1c:	tbnz	w1, #31, 22d38 <GOMP_offload_unregister_ver@@GOMP_4.5+0x1a0>
   22d20:	ldp	x21, x22, [sp, #32]
   22d24:	ldp	x23, x24, [sp, #48]
   22d28:	ldp	x25, x26, [sp, #64]
   22d2c:	ldp	x27, x28, [sp, #80]
   22d30:	ldp	x29, x30, [sp], #112
   22d34:	ret
   22d38:	ldp	x21, x22, [sp, #32]
   22d3c:	ldp	x23, x24, [sp, #48]
   22d40:	ldp	x25, x26, [sp, #64]
   22d44:	ldp	x27, x28, [sp, #80]
   22d48:	ldp	x29, x30, [sp], #112
   22d4c:	b	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   22d50:	mov	x0, x20
   22d54:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   22d58:	b	22c54 <GOMP_offload_unregister_ver@@GOMP_4.5+0xbc>
   22d5c:	mov	x0, x4
   22d60:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   22d64:	b	22be8 <GOMP_offload_unregister_ver@@GOMP_4.5+0x50>

0000000000022d68 <GOMP_offload_unregister@@GOMP_4.0.1>:
   22d68:	mov	w4, w1
   22d6c:	mov	x3, x2
   22d70:	mov	x1, x0
   22d74:	mov	w2, w4
   22d78:	mov	w0, #0x0                   	// #0
   22d7c:	b	88d0 <GOMP_offload_unregister_ver@plt>
   22d80:	stp	x29, x30, [sp, #-48]!
   22d84:	mov	x29, sp
   22d88:	stp	x21, x22, [sp, #32]
   22d8c:	mov	x22, x0
   22d90:	ldr	w0, [x0, #12]
   22d94:	ldr	x1, [x22, #56]
   22d98:	blr	x1
   22d9c:	tst	w0, #0xff
   22da0:	b.eq	22e34 <GOMP_offload_unregister@@GOMP_4.0.1+0xcc>  // b.none
   22da4:	adrp	x21, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   22da8:	add	x21, x21, #0x560
   22dac:	ldr	w4, [x21, #24]
   22db0:	cmp	w4, #0x0
   22db4:	b.le	22df0 <GOMP_offload_unregister@@GOMP_4.0.1+0x88>
   22db8:	ldr	w5, [x22, #16]
   22dbc:	stp	x19, x20, [sp, #16]
   22dc0:	mov	x19, #0x0                   	// #0
   22dc4:	mov	w20, #0x0                   	// #0
   22dc8:	ldr	x1, [x21, #32]
   22dcc:	add	x3, x1, x19
   22dd0:	ldr	w2, [x3, #4]
   22dd4:	cmp	w2, w5
   22dd8:	b.eq	22e04 <GOMP_offload_unregister@@GOMP_4.0.1+0x9c>  // b.none
   22ddc:	add	w20, w20, #0x1
   22de0:	add	x19, x19, #0x18
   22de4:	cmp	w20, w4
   22de8:	b.lt	22dc8 <GOMP_offload_unregister@@GOMP_4.0.1+0x60>  // b.tstop
   22dec:	ldp	x19, x20, [sp, #16]
   22df0:	mov	w0, #0x1                   	// #1
   22df4:	str	w0, [x22, #172]
   22df8:	ldp	x21, x22, [sp, #32]
   22dfc:	ldp	x29, x30, [sp], #48
   22e00:	ret
   22e04:	ldp	x2, x3, [x3, #8]
   22e08:	mov	w4, #0x0                   	// #0
   22e0c:	ldr	w1, [x1, x19]
   22e10:	mov	x0, x22
   22e14:	add	w20, w20, #0x1
   22e18:	add	x19, x19, #0x18
   22e1c:	bl	20280 <omp_get_place_proc_ids@@OMP_4.5+0x10c0>
   22e20:	ldr	w4, [x21, #24]
   22e24:	cmp	w20, w4
   22e28:	b.ge	22dec <GOMP_offload_unregister@@GOMP_4.0.1+0x84>  // b.tcont
   22e2c:	ldr	w5, [x22, #16]
   22e30:	b	22dc8 <GOMP_offload_unregister@@GOMP_4.0.1+0x60>
   22e34:	add	x0, x22, #0xa8
   22e38:	stp	x19, x20, [sp, #16]
   22e3c:	bl	1f740 <omp_get_place_proc_ids@@OMP_4.5+0x580>
   22e40:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   22e44:	add	x0, x0, #0xe70
   22e48:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   22e4c:	nop
   22e50:	stp	x29, x30, [sp, #-48]!
   22e54:	cmn	w0, #0x1
   22e58:	mov	x29, sp
   22e5c:	stp	x19, x20, [sp, #16]
   22e60:	mov	w19, w0
   22e64:	b.eq	22f10 <GOMP_offload_unregister@@GOMP_4.0.1+0x1a8>  // b.none
   22e68:	tbnz	w19, #31, 22f40 <GOMP_offload_unregister@@GOMP_4.0.1+0x1d8>
   22e6c:	adrp	x20, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   22e70:	str	x21, [sp, #32]
   22e74:	add	x21, x20, #0x560
   22e78:	adrp	x1, 1f000 <omp_pause_resource_all_@@OMP_5.0+0xd18>
   22e7c:	add	x0, x21, #0x14
   22e80:	add	x1, x1, #0x6e8
   22e84:	bl	8900 <pthread_once@plt>
   22e88:	ldr	w0, [x21, #4]
   22e8c:	cmp	w19, w0
   22e90:	b.ge	22f74 <GOMP_offload_unregister@@GOMP_4.0.1+0x20c>  // b.tcont
   22e94:	mov	w1, #0x130                 	// #304
   22e98:	mov	w2, #0x1                   	// #1
   22e9c:	ldr	x0, [x21, #8]
   22ea0:	smull	x19, w19, w1
   22ea4:	add	x0, x0, x19
   22ea8:	add	x0, x0, #0xa8
   22eac:	ldaxr	w1, [x0]
   22eb0:	cbnz	w1, 22ebc <GOMP_offload_unregister@@GOMP_4.0.1+0x154>
   22eb4:	stxr	w3, w2, [x0]
   22eb8:	cbnz	w3, 22eac <GOMP_offload_unregister@@GOMP_4.0.1+0x144>
   22ebc:	cmp	w1, #0x0
   22ec0:	b.ne	22f98 <GOMP_offload_unregister@@GOMP_4.0.1+0x230>  // b.any
   22ec4:	add	x21, x20, #0x560
   22ec8:	ldr	x0, [x21, #8]
   22ecc:	add	x0, x0, x19
   22ed0:	ldr	w1, [x0, #172]
   22ed4:	cbz	w1, 22f50 <GOMP_offload_unregister@@GOMP_4.0.1+0x1e8>
   22ed8:	add	x0, x0, #0xa8
   22edc:	cmp	w1, #0x2
   22ee0:	b.eq	22f64 <GOMP_offload_unregister@@GOMP_4.0.1+0x1fc>  // b.none
   22ee4:	ldxr	w1, [x0]
   22ee8:	stlxr	w2, wzr, [x0]
   22eec:	cbnz	w2, 22ee4 <GOMP_offload_unregister@@GOMP_4.0.1+0x17c>
   22ef0:	tbnz	w1, #31, 22f80 <GOMP_offload_unregister@@GOMP_4.0.1+0x218>
   22ef4:	add	x20, x20, #0x560
   22ef8:	ldr	x21, [sp, #32]
   22efc:	ldr	x0, [x20, #8]
   22f00:	add	x0, x0, x19
   22f04:	ldp	x19, x20, [sp, #16]
   22f08:	ldp	x29, x30, [sp], #48
   22f0c:	ret
   22f10:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   22f14:	ldr	x2, [x2, #4016]
   22f18:	mrs	x1, tpidr_el0
   22f1c:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   22f20:	add	x0, x0, #0x2b0
   22f24:	add	x1, x1, x2
   22f28:	ldr	x1, [x1, #80]
   22f2c:	cmp	x1, #0x0
   22f30:	add	x1, x1, #0x90
   22f34:	csel	x0, x0, x1, eq  // eq = none
   22f38:	ldr	w19, [x0, #16]
   22f3c:	tbz	w19, #31, 22e6c <GOMP_offload_unregister@@GOMP_4.0.1+0x104>
   22f40:	mov	x0, #0x0                   	// #0
   22f44:	ldp	x19, x20, [sp, #16]
   22f48:	ldp	x29, x30, [sp], #48
   22f4c:	ret
   22f50:	bl	22d80 <GOMP_offload_unregister@@GOMP_4.0.1+0x18>
   22f54:	ldr	x0, [x21, #8]
   22f58:	add	x0, x0, x19
   22f5c:	add	x0, x0, #0xa8
   22f60:	b	22ee4 <GOMP_offload_unregister@@GOMP_4.0.1+0x17c>
   22f64:	ldxr	w1, [x0]
   22f68:	stlxr	w2, wzr, [x0]
   22f6c:	cbnz	w2, 22f64 <GOMP_offload_unregister@@GOMP_4.0.1+0x1fc>
   22f70:	tbnz	w1, #31, 22f88 <GOMP_offload_unregister@@GOMP_4.0.1+0x220>
   22f74:	mov	x0, #0x0                   	// #0
   22f78:	ldr	x21, [sp, #32]
   22f7c:	b	22f44 <GOMP_offload_unregister@@GOMP_4.0.1+0x1dc>
   22f80:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   22f84:	b	22ef4 <GOMP_offload_unregister@@GOMP_4.0.1+0x18c>
   22f88:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   22f8c:	mov	x0, #0x0                   	// #0
   22f90:	ldr	x21, [sp, #32]
   22f94:	b	22f04 <GOMP_offload_unregister@@GOMP_4.0.1+0x19c>
   22f98:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   22f9c:	b	22ec4 <GOMP_offload_unregister@@GOMP_4.0.1+0x15c>
   22fa0:	stp	x29, x30, [sp, #-48]!
   22fa4:	mov	x29, sp
   22fa8:	stp	x19, x20, [sp, #16]
   22fac:	mov	x20, x0
   22fb0:	ldr	w0, [x0, #172]
   22fb4:	cmp	w0, #0x1
   22fb8:	b.eq	22fc8 <GOMP_offload_unregister@@GOMP_4.0.1+0x260>  // b.none
   22fbc:	ldp	x19, x20, [sp, #16]
   22fc0:	ldp	x29, x30, [sp], #48
   22fc4:	ret
   22fc8:	stp	x21, x22, [sp, #32]
   22fcc:	adrp	x21, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   22fd0:	add	x21, x21, #0x560
   22fd4:	ldr	w0, [x21, #24]
   22fd8:	cbz	w0, 2300c <GOMP_offload_unregister@@GOMP_4.0.1+0x2a4>
   22fdc:	ldr	w5, [x20, #16]
   22fe0:	mov	w19, #0x0                   	// #0
   22fe4:	mov	w22, #0x18                  	// #24
   22fe8:	ldr	x2, [x21, #32]
   22fec:	umull	x1, w19, w22
   22ff0:	add	x3, x2, x1
   22ff4:	ldr	w4, [x3, #4]
   22ff8:	cmp	w4, w5
   22ffc:	b.eq	2301c <GOMP_offload_unregister@@GOMP_4.0.1+0x2b4>  // b.none
   23000:	add	w19, w19, #0x1
   23004:	cmp	w0, w19
   23008:	b.hi	22fe8 <GOMP_offload_unregister@@GOMP_4.0.1+0x280>  // b.pmore
   2300c:	ldp	x19, x20, [sp, #16]
   23010:	ldp	x21, x22, [sp, #32]
   23014:	ldp	x29, x30, [sp], #48
   23018:	ret
   2301c:	ldr	w1, [x2, x1]
   23020:	mov	x0, x20
   23024:	ldp	x2, x3, [x3, #8]
   23028:	add	w19, w19, #0x1
   2302c:	bl	1fc28 <omp_get_place_proc_ids@@OMP_4.5+0xa68>
   23030:	ldr	w0, [x21, #24]
   23034:	cmp	w0, w19
   23038:	b.ls	2300c <GOMP_offload_unregister@@GOMP_4.0.1+0x2a4>  // b.plast
   2303c:	ldr	w5, [x20, #16]
   23040:	b	22fe8 <GOMP_offload_unregister@@GOMP_4.0.1+0x280>
   23044:	nop
   23048:	ldr	x1, [x0]
   2304c:	cbz	x1, 23090 <GOMP_offload_unregister@@GOMP_4.0.1+0x328>
   23050:	stp	x29, x30, [sp, #-32]!
   23054:	mov	x29, sp
   23058:	stp	x19, x20, [sp, #16]
   2305c:	mov	x20, x0
   23060:	mov	x0, x20
   23064:	ldr	x19, [x1, #16]
   23068:	bl	25580 <omp_pause_resource_all@@OMP_5.0+0x2a8>
   2306c:	ldr	x0, [x19, #8]
   23070:	bl	88b0 <free@plt>
   23074:	mov	x0, x19
   23078:	bl	88b0 <free@plt>
   2307c:	ldr	x1, [x20]
   23080:	cbnz	x1, 23060 <GOMP_offload_unregister@@GOMP_4.0.1+0x2f8>
   23084:	ldp	x19, x20, [sp, #16]
   23088:	ldp	x29, x30, [sp], #32
   2308c:	ret
   23090:	ret
   23094:	nop

0000000000023098 <GOMP_target@@GOMP_4.0>:
   23098:	stp	x29, x30, [sp, #-144]!
   2309c:	mov	x29, sp
   230a0:	stp	x19, x20, [sp, #16]
   230a4:	mov	x20, x1
   230a8:	stp	x21, x22, [sp, #32]
   230ac:	mov	x22, x3
   230b0:	mov	x21, x4
   230b4:	stp	x23, x24, [sp, #48]
   230b8:	mov	x23, x5
   230bc:	mov	x24, x6
   230c0:	bl	22e50 <GOMP_offload_unregister@@GOMP_4.0.1+0xe8>
   230c4:	cbz	x0, 231c8 <GOMP_target@@GOMP_4.0+0x130>
   230c8:	mov	x19, x0
   230cc:	mov	w0, #0x5                   	// #5
   230d0:	ldr	w1, [x19, #8]
   230d4:	and	w0, w1, w0
   230d8:	cmp	w0, #0x4
   230dc:	b.ne	231c8 <GOMP_target@@GOMP_4.0+0x130>  // b.any
   230e0:	stp	x25, x26, [sp, #64]
   230e4:	tbnz	w1, #1, 231f0 <GOMP_target@@GOMP_4.0+0x158>
   230e8:	add	x25, x19, #0xa8
   230ec:	mov	w0, #0x1                   	// #1
   230f0:	ldaxr	w1, [x25]
   230f4:	cbnz	w1, 23100 <GOMP_target@@GOMP_4.0+0x68>
   230f8:	stxr	w2, w0, [x25]
   230fc:	cbnz	w2, 230f0 <GOMP_target@@GOMP_4.0+0x58>
   23100:	cmp	w1, #0x0
   23104:	b.ne	23208 <GOMP_target@@GOMP_4.0+0x170>  // b.any
   23108:	ldr	w0, [x19, #172]
   2310c:	cmp	w0, #0x2
   23110:	b.eq	231ac <GOMP_target@@GOMP_4.0+0x114>  // b.none
   23114:	add	x2, x20, #0x1
   23118:	add	x1, sp, #0x58
   2311c:	add	x0, x19, #0xa0
   23120:	stp	x20, x2, [sp, #88]
   23124:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   23128:	mov	x26, x0
   2312c:	ldxr	w0, [x25]
   23130:	stlxr	w1, wzr, [x25]
   23134:	cbnz	w1, 2312c <GOMP_target@@GOMP_4.0+0x94>
   23138:	tbnz	w0, #31, 231f8 <GOMP_target@@GOMP_4.0+0x160>
   2313c:	cbz	x26, 231e8 <GOMP_target@@GOMP_4.0+0x150>
   23140:	ldr	x25, [x26, #24]
   23144:	cbz	x25, 231e8 <GOMP_target@@GOMP_4.0+0x150>
   23148:	mov	x5, x24
   2314c:	mov	w7, #0x1                   	// #1
   23150:	mov	w6, #0x0                   	// #0
   23154:	mov	x4, x23
   23158:	mov	x2, x21
   2315c:	mov	x1, x22
   23160:	mov	x0, x19
   23164:	mov	x3, #0x0                   	// #0
   23168:	bl	20c80 <omp_get_place_proc_ids@@OMP_4.5+0x1ac0>
   2316c:	mov	x20, x0
   23170:	ldr	w0, [x19, #12]
   23174:	mov	x3, #0x0                   	// #0
   23178:	ldr	x4, [x19, #144]
   2317c:	mov	x1, x25
   23180:	ldr	x2, [x20, #16]
   23184:	blr	x4
   23188:	mov	x0, x20
   2318c:	mov	w1, #0x1                   	// #1
   23190:	bl	22658 <omp_get_place_proc_ids@@OMP_4.5+0x3498>
   23194:	ldp	x19, x20, [sp, #16]
   23198:	ldp	x21, x22, [sp, #32]
   2319c:	ldp	x23, x24, [sp, #48]
   231a0:	ldp	x25, x26, [sp, #64]
   231a4:	ldp	x29, x30, [sp], #144
   231a8:	ret
   231ac:	ldxr	w0, [x25]
   231b0:	stlxr	w1, wzr, [x25]
   231b4:	cbnz	w1, 231ac <GOMP_target@@GOMP_4.0+0x114>
   231b8:	tbz	w0, #31, 231e8 <GOMP_target@@GOMP_4.0+0x150>
   231bc:	mov	x0, x25
   231c0:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   231c4:	ldp	x25, x26, [sp, #64]
   231c8:	mov	x1, x21
   231cc:	mov	x0, x20
   231d0:	bl	1f760 <omp_get_place_proc_ids@@OMP_4.5+0x5a0>
   231d4:	ldp	x19, x20, [sp, #16]
   231d8:	ldp	x21, x22, [sp, #32]
   231dc:	ldp	x23, x24, [sp, #48]
   231e0:	ldp	x29, x30, [sp], #144
   231e4:	ret
   231e8:	ldp	x25, x26, [sp, #64]
   231ec:	b	231c8 <GOMP_target@@GOMP_4.0+0x130>
   231f0:	mov	x25, x20
   231f4:	b	23144 <GOMP_target@@GOMP_4.0+0xac>
   231f8:	mov	x0, x25
   231fc:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   23200:	cbnz	x26, 23140 <GOMP_target@@GOMP_4.0+0xa8>
   23204:	b	231e8 <GOMP_target@@GOMP_4.0+0x150>
   23208:	mov	x0, x25
   2320c:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   23210:	b	23108 <GOMP_target@@GOMP_4.0+0x70>
   23214:	nop

0000000000023218 <GOMP_target_ext@@GOMP_4.5>:
   23218:	stp	x29, x30, [sp, #-144]!
   2321c:	mov	x29, sp
   23220:	stp	x19, x20, [sp, #16]
   23224:	mov	x20, x2
   23228:	mov	x19, x5
   2322c:	stp	x21, x22, [sp, #32]
   23230:	mov	x22, x4
   23234:	stp	x23, x24, [sp, #48]
   23238:	mov	x23, x1
   2323c:	mov	x24, x3
   23240:	stp	x25, x26, [sp, #64]
   23244:	mov	w25, w6
   23248:	mov	x26, x7
   2324c:	stp	x27, x28, [sp, #80]
   23250:	sub	sp, sp, #0x10
   23254:	bl	22e50 <GOMP_offload_unregister@@GOMP_4.0.1+0xe8>
   23258:	mov	x21, x0
   2325c:	tbz	w25, #0, 233bc <GOMP_target_ext@@GOMP_4.5+0x1a4>
   23260:	adrp	x28, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   23264:	ldr	x28, [x28, #4016]
   23268:	mrs	x27, tpidr_el0
   2326c:	add	x3, x27, x28
   23270:	ldr	x0, [x3, #16]
   23274:	cbz	x0, 23320 <GOMP_target_ext@@GOMP_4.5+0x108>
   23278:	add	x27, x27, x28
   2327c:	ldr	x0, [x27, #80]
   23280:	ldrb	w1, [x0, #205]
   23284:	cbz	w1, 237a8 <GOMP_target_ext@@GOMP_4.5+0x590>
   23288:	cbnz	x26, 233d8 <GOMP_target_ext@@GOMP_4.5+0x1c0>
   2328c:	nop
   23290:	cbz	x21, 23484 <GOMP_target_ext@@GOMP_4.5+0x26c>
   23294:	ldr	w0, [x21, #8]
   23298:	tbz	w0, #2, 23484 <GOMP_target_ext@@GOMP_4.5+0x26c>
   2329c:	mov	x25, #0x0                   	// #0
   232a0:	mov	x27, #0x0                   	// #0
   232a4:	mov	w28, #0x0                   	// #0
   232a8:	mov	x26, x23
   232ac:	tbnz	w0, #1, 232c0 <GOMP_target_ext@@GOMP_4.5+0xa8>
   232b0:	mov	x1, x23
   232b4:	mov	x0, x21
   232b8:	bl	1ff08 <omp_get_place_proc_ids@@OMP_4.5+0xd48>
   232bc:	mov	x26, x0
   232c0:	cbz	x26, 23580 <GOMP_target_ext@@GOMP_4.5+0x368>
   232c4:	ldr	x1, [x21, #136]
   232c8:	cbz	x1, 232dc <GOMP_target_ext@@GOMP_4.5+0xc4>
   232cc:	mov	x0, x26
   232d0:	blr	x1
   232d4:	tst	w0, #0xff
   232d8:	b.eq	23580 <GOMP_target_ext@@GOMP_4.5+0x368>  // b.none
   232dc:	ldr	w0, [x21, #8]
   232e0:	tbz	w0, #0, 23738 <GOMP_target_ext@@GOMP_4.5+0x520>
   232e4:	cbz	w28, 23644 <GOMP_target_ext@@GOMP_4.5+0x42c>
   232e8:	ldr	w0, [x21, #12]
   232ec:	ldr	x4, [x21, #144]
   232f0:	mov	x2, x24
   232f4:	ldr	x3, [x29, #144]
   232f8:	mov	x1, x26
   232fc:	blr	x4
   23300:	mov	sp, x29
   23304:	ldp	x19, x20, [sp, #16]
   23308:	ldp	x21, x22, [sp, #32]
   2330c:	ldp	x23, x24, [sp, #48]
   23310:	ldp	x25, x26, [sp, #64]
   23314:	ldp	x27, x28, [sp, #80]
   23318:	ldp	x29, x30, [sp], #144
   2331c:	ret
   23320:	mov	w0, #0x1                   	// #1
   23324:	str	x3, [x29, #136]
   23328:	bl	1a4c0 <omp_in_final@@OMP_3.1+0x1d0>
   2332c:	mov	x6, x0
   23330:	ldr	x3, [x29, #136]
   23334:	ldr	x7, [x3, #80]
   23338:	cbz	x7, 237e0 <GOMP_target_ext@@GOMP_4.5+0x5c8>
   2333c:	ldp	x4, x5, [x3, #16]
   23340:	stp	x4, x5, [x0, #8]
   23344:	add	x8, x0, #0x540
   23348:	ldp	x4, x5, [x3, #32]
   2334c:	stp	x4, x5, [x6, #24]
   23350:	add	x11, x6, #0x100
   23354:	ldp	x4, x5, [x3, #48]
   23358:	stp	x4, x5, [x6, #40]
   2335c:	mov	x0, x8
   23360:	ldp	x4, x5, [x3, #64]
   23364:	stp	x4, x5, [x6, #56]
   23368:	add	x2, x7, #0x90
   2336c:	stp	xzr, xzr, [x3, #64]
   23370:	mov	x1, #0x0                   	// #0
   23374:	stp	x6, x11, [x3, #16]
   23378:	str	xzr, [x3, #32]
   2337c:	str	wzr, [x3, #40]
   23380:	str	x8, [x3, #80]
   23384:	stp	x8, x7, [x29, #120]
   23388:	bl	14cf8 <GOMP_single_copy_end@@GOMP_1.0+0x19f0>
   2338c:	ldp	x7, x3, [x29, #128]
   23390:	str	x7, [x3, #80]
   23394:	bl	14d38 <GOMP_single_copy_end@@GOMP_1.0+0x1a30>
   23398:	ldr	x7, [x29, #128]
   2339c:	mov	x0, x7
   233a0:	bl	88b0 <free@plt>
   233a4:	ldr	x3, [x29, #136]
   233a8:	ldr	x8, [x29, #120]
   233ac:	str	x8, [x3, #80]
   233b0:	add	x0, x27, x28
   233b4:	ldr	x0, [x0, #16]
   233b8:	cbnz	x0, 23278 <GOMP_target_ext@@GOMP_4.5+0x60>
   233bc:	cbz	x26, 23290 <GOMP_target_ext@@GOMP_4.5+0x78>
   233c0:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   233c4:	ldr	x0, [x0, #4016]
   233c8:	mrs	x1, tpidr_el0
   233cc:	add	x0, x1, x0
   233d0:	ldr	x0, [x0, #80]
   233d4:	cbz	x0, 23290 <GOMP_target_ext@@GOMP_4.5+0x78>
   233d8:	ldr	x0, [x0, #56]
   233dc:	cbz	x0, 23290 <GOMP_target_ext@@GOMP_4.5+0x78>
   233e0:	cbz	x20, 23848 <GOMP_target_ext@@GOMP_4.5+0x630>
   233e4:	mov	x25, #0x0                   	// #0
   233e8:	mov	x27, #0x0                   	// #0
   233ec:	mov	x1, #0x0                   	// #0
   233f0:	mov	x4, #0x1                   	// #1
   233f4:	nop
   233f8:	ldrh	w0, [x19, x1, lsl #1]
   233fc:	and	w2, w0, #0xff
   23400:	cmp	w2, #0xc
   23404:	b.ne	23430 <GOMP_target_ext@@GOMP_4.5+0x218>  // b.any
   23408:	lsr	w0, w0, #8
   2340c:	sub	x25, x25, #0x1
   23410:	ldr	x2, [x22, x1, lsl #3]
   23414:	lsl	x0, x4, x0
   23418:	add	x25, x25, x0
   2341c:	neg	x3, x0
   23420:	cmp	x27, x0
   23424:	and	x25, x25, x3
   23428:	csel	x27, x27, x0, cs  // cs = hs, nlast
   2342c:	add	x25, x25, x2
   23430:	add	x1, x1, #0x1
   23434:	cmp	x20, x1
   23438:	b.ne	233f8 <GOMP_target_ext@@GOMP_4.5+0x1e0>  // b.any
   2343c:	cbnz	x27, 2358c <GOMP_target_ext@@GOMP_4.5+0x374>
   23440:	mov	x0, x26
   23444:	bl	163c0 <GOMP_taskwait@@GOMP_2.0+0x5c8>
   23448:	cbz	x21, 23458 <GOMP_target_ext@@GOMP_4.5+0x240>
   2344c:	ldr	w0, [x21, #8]
   23450:	mov	w28, #0x1                   	// #1
   23454:	tbnz	w0, #2, 232a8 <GOMP_target_ext@@GOMP_4.5+0x90>
   23458:	mov	x1, x24
   2345c:	mov	x0, x23
   23460:	bl	1f760 <omp_get_place_proc_ids@@OMP_4.5+0x5a0>
   23464:	mov	sp, x29
   23468:	ldp	x19, x20, [sp, #16]
   2346c:	ldp	x21, x22, [sp, #32]
   23470:	ldp	x23, x24, [sp, #48]
   23474:	ldp	x25, x26, [sp, #64]
   23478:	ldp	x27, x28, [sp, #80]
   2347c:	ldp	x29, x30, [sp], #144
   23480:	ret
   23484:	mov	x27, #0x0                   	// #0
   23488:	mov	x25, #0x0                   	// #0
   2348c:	cbz	x20, 23458 <GOMP_target_ext@@GOMP_4.5+0x240>
   23490:	mov	x1, #0x0                   	// #0
   23494:	mov	x4, #0x1                   	// #1
   23498:	ldrh	w0, [x19, x1, lsl #1]
   2349c:	and	w2, w0, #0xff
   234a0:	cmp	w2, #0xc
   234a4:	b.ne	234d0 <GOMP_target_ext@@GOMP_4.5+0x2b8>  // b.any
   234a8:	lsr	w0, w0, #8
   234ac:	sub	x25, x25, #0x1
   234b0:	ldr	x2, [x22, x1, lsl #3]
   234b4:	lsl	x0, x4, x0
   234b8:	add	x25, x25, x0
   234bc:	neg	x3, x0
   234c0:	cmp	x27, x0
   234c4:	and	x25, x25, x3
   234c8:	csel	x27, x27, x0, cs  // cs = hs, nlast
   234cc:	add	x25, x25, x2
   234d0:	add	x1, x1, #0x1
   234d4:	cmp	x20, x1
   234d8:	b.hi	23498 <GOMP_target_ext@@GOMP_4.5+0x280>  // b.pmore
   234dc:	cbz	x27, 23458 <GOMP_target_ext@@GOMP_4.5+0x240>
   234e0:	add	x0, x25, x27
   234e4:	sub	x1, x27, #0x1
   234e8:	add	x0, x0, #0xe
   234ec:	and	x0, x0, #0xfffffffffffffff0
   234f0:	sub	sp, sp, x0
   234f4:	add	x28, sp, #0x10
   234f8:	ands	x0, x28, x1
   234fc:	sub	x27, x27, x0
   23500:	add	x27, x28, x27
   23504:	csel	x28, x27, x28, ne  // ne = any
   23508:	cbz	x20, 23458 <GOMP_target_ext@@GOMP_4.5+0x240>
   2350c:	add	x20, x19, x20, lsl #1
   23510:	mov	x25, x24
   23514:	mov	x21, #0x0                   	// #0
   23518:	mov	x26, #0x1                   	// #1
   2351c:	b	23530 <GOMP_target_ext@@GOMP_4.5+0x318>
   23520:	add	x25, x25, #0x8
   23524:	add	x22, x22, #0x8
   23528:	cmp	x20, x19
   2352c:	b.eq	23458 <GOMP_target_ext@@GOMP_4.5+0x240>  // b.none
   23530:	ldrh	w0, [x19]
   23534:	add	x19, x19, #0x2
   23538:	and	w1, w0, #0xff
   2353c:	cmp	w1, #0xc
   23540:	b.ne	23520 <GOMP_target_ext@@GOMP_4.5+0x308>  // b.any
   23544:	lsr	w0, w0, #8
   23548:	sub	x21, x21, #0x1
   2354c:	ldr	x1, [x25]
   23550:	lsl	x0, x26, x0
   23554:	add	x21, x21, x0
   23558:	neg	x0, x0
   2355c:	and	x21, x0, x21
   23560:	add	x3, x28, x21
   23564:	ldr	x27, [x22]
   23568:	mov	x0, x3
   2356c:	mov	x2, x27
   23570:	add	x21, x21, x27
   23574:	bl	8580 <memcpy@plt>
   23578:	str	x0, [x25]
   2357c:	b	23520 <GOMP_target_ext@@GOMP_4.5+0x308>
   23580:	cbnz	w28, 23458 <GOMP_target_ext@@GOMP_4.5+0x240>
   23584:	cbnz	x20, 23490 <GOMP_target_ext@@GOMP_4.5+0x278>
   23588:	b	234dc <GOMP_target_ext@@GOMP_4.5+0x2c4>
   2358c:	add	x0, x27, x25
   23590:	sub	x1, x27, #0x1
   23594:	add	x0, x0, #0xe
   23598:	mov	x4, x19
   2359c:	and	x0, x0, #0xfffffffffffffff0
   235a0:	mov	x5, x24
   235a4:	sub	sp, sp, x0
   235a8:	mov	x6, x22
   235ac:	add	x28, sp, #0x10
   235b0:	add	x7, x19, x20, lsl #1
   235b4:	ands	x0, x28, x1
   235b8:	mov	x3, #0x0                   	// #0
   235bc:	sub	x1, x27, x0
   235c0:	add	x0, x28, x1
   235c4:	csel	x28, x0, x28, ne  // ne = any
   235c8:	b	235dc <GOMP_target_ext@@GOMP_4.5+0x3c4>
   235cc:	add	x5, x5, #0x8
   235d0:	add	x6, x6, #0x8
   235d4:	cmp	x7, x4
   235d8:	b.eq	23440 <GOMP_target_ext@@GOMP_4.5+0x228>  // b.none
   235dc:	ldrh	w0, [x4]
   235e0:	add	x4, x4, #0x2
   235e4:	and	w1, w0, #0xff
   235e8:	cmp	w1, #0xc
   235ec:	b.ne	235cc <GOMP_target_ext@@GOMP_4.5+0x3b4>  // b.any
   235f0:	lsr	w0, w0, #8
   235f4:	mov	x2, #0x1                   	// #1
   235f8:	sub	x3, x3, #0x1
   235fc:	stp	x4, x7, [x29, #96]
   23600:	lsl	x0, x2, x0
   23604:	add	x3, x3, x0
   23608:	neg	x0, x0
   2360c:	and	x3, x0, x3
   23610:	stp	x5, x6, [x29, #112]
   23614:	add	x9, x28, x3
   23618:	ldr	x2, [x6]
   2361c:	mov	x0, x9
   23620:	ldr	x1, [x5]
   23624:	stp	x3, x2, [x29, #128]
   23628:	bl	8580 <memcpy@plt>
   2362c:	ldp	x3, x2, [x29, #128]
   23630:	ldp	x5, x6, [x29, #112]
   23634:	str	x0, [x5]
   23638:	ldp	x4, x7, [x29, #96]
   2363c:	add	x3, x3, x2
   23640:	b	235cc <GOMP_target_ext@@GOMP_4.5+0x3b4>
   23644:	mov	x1, #0x0                   	// #0
   23648:	mov	x4, #0x1                   	// #1
   2364c:	cbz	x20, 23694 <GOMP_target_ext@@GOMP_4.5+0x47c>
   23650:	ldrh	w0, [x19, x1, lsl #1]
   23654:	and	w2, w0, #0xff
   23658:	cmp	w2, #0xc
   2365c:	b.ne	23688 <GOMP_target_ext@@GOMP_4.5+0x470>  // b.any
   23660:	lsr	w0, w0, #8
   23664:	sub	x25, x25, #0x1
   23668:	ldr	x2, [x22, x1, lsl #3]
   2366c:	lsl	x0, x4, x0
   23670:	add	x25, x25, x0
   23674:	neg	x3, x0
   23678:	cmp	x27, x0
   2367c:	and	x25, x25, x3
   23680:	csel	x27, x27, x0, cs  // cs = hs, nlast
   23684:	add	x25, x25, x2
   23688:	add	x1, x1, #0x1
   2368c:	cmp	x20, x1
   23690:	b.ne	23650 <GOMP_target_ext@@GOMP_4.5+0x438>  // b.any
   23694:	cbz	x27, 232e8 <GOMP_target_ext@@GOMP_4.5+0xd0>
   23698:	add	x0, x25, x27
   2369c:	sub	x1, x27, #0x1
   236a0:	add	x0, x0, #0xe
   236a4:	and	x0, x0, #0xfffffffffffffff0
   236a8:	sub	sp, sp, x0
   236ac:	add	x28, sp, #0x10
   236b0:	ands	x0, x28, x1
   236b4:	sub	x27, x27, x0
   236b8:	add	x0, x28, x27
   236bc:	csel	x28, x0, x28, ne  // ne = any
   236c0:	cbz	x20, 232e8 <GOMP_target_ext@@GOMP_4.5+0xd0>
   236c4:	add	x20, x19, x20, lsl #1
   236c8:	mov	x27, x24
   236cc:	mov	x23, #0x0                   	// #0
   236d0:	b	236e4 <GOMP_target_ext@@GOMP_4.5+0x4cc>
   236d4:	add	x27, x27, #0x8
   236d8:	add	x22, x22, #0x8
   236dc:	cmp	x20, x19
   236e0:	b.eq	232e8 <GOMP_target_ext@@GOMP_4.5+0xd0>  // b.none
   236e4:	ldrh	w0, [x19]
   236e8:	add	x19, x19, #0x2
   236ec:	and	w1, w0, #0xff
   236f0:	cmp	w1, #0xc
   236f4:	b.ne	236d4 <GOMP_target_ext@@GOMP_4.5+0x4bc>  // b.any
   236f8:	lsr	w0, w0, #8
   236fc:	mov	x2, #0x1                   	// #1
   23700:	sub	x23, x23, #0x1
   23704:	lsl	x0, x2, x0
   23708:	add	x23, x23, x0
   2370c:	neg	x0, x0
   23710:	and	x23, x0, x23
   23714:	ldr	x1, [x27]
   23718:	add	x3, x28, x23
   2371c:	ldr	x25, [x22]
   23720:	mov	x0, x3
   23724:	mov	x2, x25
   23728:	add	x23, x23, x25
   2372c:	bl	8580 <memcpy@plt>
   23730:	str	x0, [x27]
   23734:	b	236d4 <GOMP_target_ext@@GOMP_4.5+0x4bc>
   23738:	mov	x5, x19
   2373c:	mov	x4, x22
   23740:	mov	w7, #0x1                   	// #1
   23744:	mov	x1, x20
   23748:	mov	w6, w7
   2374c:	mov	x2, x24
   23750:	mov	x0, x21
   23754:	mov	x3, #0x0                   	// #0
   23758:	bl	20c80 <omp_get_place_proc_ids@@OMP_4.5+0x1ac0>
   2375c:	mov	x19, x0
   23760:	ldr	w0, [x21, #12]
   23764:	ldr	x4, [x21, #144]
   23768:	cbz	x19, 232f0 <GOMP_target_ext@@GOMP_4.5+0xd8>
   2376c:	ldr	x2, [x19, #16]
   23770:	mov	x1, x26
   23774:	ldr	x3, [x29, #144]
   23778:	blr	x4
   2377c:	mov	x0, x19
   23780:	mov	w1, #0x1                   	// #1
   23784:	bl	22658 <omp_get_place_proc_ids@@OMP_4.5+0x3498>
   23788:	mov	sp, x29
   2378c:	ldp	x19, x20, [sp, #16]
   23790:	ldp	x21, x22, [sp, #32]
   23794:	ldp	x23, x24, [sp, #48]
   23798:	ldp	x25, x26, [sp, #64]
   2379c:	ldp	x27, x28, [sp, #80]
   237a0:	ldp	x29, x30, [sp], #144
   237a4:	ret
   237a8:	ldr	x1, [x29, #144]
   237ac:	mov	w0, #0x1                   	// #1
   237b0:	str	x1, [sp]
   237b4:	mov	x7, x26
   237b8:	str	w0, [sp, #8]
   237bc:	mov	w6, w25
   237c0:	mov	x5, x19
   237c4:	mov	x4, x22
   237c8:	mov	x3, x24
   237cc:	mov	x2, x20
   237d0:	mov	x1, x23
   237d4:	mov	x0, x21
   237d8:	bl	14e48 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa8>
   237dc:	b	23300 <GOMP_target_ext@@GOMP_4.5+0xe8>
   237e0:	ldp	x4, x5, [x3, #16]
   237e4:	stp	x4, x5, [x0, #8]
   237e8:	add	x7, x6, #0x100
   237ec:	ldp	x4, x5, [x3, #32]
   237f0:	stp	x4, x5, [x6, #24]
   237f4:	add	x0, x0, #0x540
   237f8:	ldp	x4, x5, [x3, #48]
   237fc:	stp	x4, x5, [x6, #40]
   23800:	mov	x1, #0x0                   	// #0
   23804:	ldp	x4, x5, [x3, #64]
   23808:	stp	x4, x5, [x6, #56]
   2380c:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   23810:	stp	xzr, xzr, [x3, #64]
   23814:	add	x2, x2, #0x2b0
   23818:	stp	x6, x7, [x3, #16]
   2381c:	str	xzr, [x3, #32]
   23820:	str	wzr, [x3, #40]
   23824:	str	x0, [x3, #80]
   23828:	str	x3, [x29, #136]
   2382c:	bl	14cf8 <GOMP_single_copy_end@@GOMP_1.0+0x19f0>
   23830:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   23834:	ldr	x3, [x29, #136]
   23838:	ldr	w0, [x0, #1712]
   2383c:	mov	x1, x3
   23840:	bl	8960 <pthread_setspecific@plt>
   23844:	b	233b0 <GOMP_target_ext@@GOMP_4.5+0x198>
   23848:	mov	x27, #0x0                   	// #0
   2384c:	mov	x25, #0x0                   	// #0
   23850:	b	23440 <GOMP_target_ext@@GOMP_4.5+0x228>
   23854:	nop

0000000000023858 <GOMP_target_data@@GOMP_4.0>:
   23858:	stp	x29, x30, [sp, #-96]!
   2385c:	cmn	w0, #0x1
   23860:	mov	x29, sp
   23864:	stp	x19, x20, [sp, #16]
   23868:	mov	w19, w0
   2386c:	adrp	x20, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   23870:	ldr	x20, [x20, #4016]
   23874:	stp	x21, x22, [sp, #32]
   23878:	mov	x21, x2
   2387c:	mov	x22, x3
   23880:	stp	x23, x24, [sp, #48]
   23884:	mov	x23, x4
   23888:	mov	x24, x5
   2388c:	stp	x25, x26, [sp, #64]
   23890:	mrs	x25, tpidr_el0
   23894:	b.eq	23a08 <GOMP_target_data@@GOMP_4.0+0x1b0>  // b.none
   23898:	tbnz	w19, #31, 239bc <GOMP_target_data@@GOMP_4.0+0x164>
   2389c:	adrp	x26, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   238a0:	str	x27, [sp, #80]
   238a4:	add	x27, x26, #0x560
   238a8:	adrp	x1, 1f000 <omp_pause_resource_all_@@OMP_5.0+0xd18>
   238ac:	add	x0, x27, #0x14
   238b0:	add	x1, x1, #0x6e8
   238b4:	bl	8900 <pthread_once@plt>
   238b8:	ldr	w0, [x27, #4]
   238bc:	cmp	w19, w0
   238c0:	b.ge	239b8 <GOMP_target_data@@GOMP_4.0+0x160>  // b.tcont
   238c4:	mov	w1, #0x130                 	// #304
   238c8:	mov	w2, #0x1                   	// #1
   238cc:	ldr	x0, [x27, #8]
   238d0:	smull	x19, w19, w1
   238d4:	add	x0, x0, x19
   238d8:	add	x0, x0, #0xa8
   238dc:	ldaxr	w1, [x0]
   238e0:	cbnz	w1, 238ec <GOMP_target_data@@GOMP_4.0+0x94>
   238e4:	stxr	w3, w2, [x0]
   238e8:	cbnz	w3, 238dc <GOMP_target_data@@GOMP_4.0+0x84>
   238ec:	cmp	w1, #0x0
   238f0:	b.ne	23a60 <GOMP_target_data@@GOMP_4.0+0x208>  // b.any
   238f4:	add	x27, x26, #0x560
   238f8:	ldr	x0, [x27, #8]
   238fc:	add	x0, x0, x19
   23900:	ldr	w1, [x0, #172]
   23904:	cbz	w1, 23a2c <GOMP_target_data@@GOMP_4.0+0x1d4>
   23908:	add	x0, x0, #0xa8
   2390c:	cmp	w1, #0x2
   23910:	b.eq	239a4 <GOMP_target_data@@GOMP_4.0+0x14c>  // b.none
   23914:	ldxr	w1, [x0]
   23918:	stlxr	w2, wzr, [x0]
   2391c:	cbnz	w2, 23914 <GOMP_target_data@@GOMP_4.0+0xbc>
   23920:	tbnz	w1, #31, 23a4c <GOMP_target_data@@GOMP_4.0+0x1f4>
   23924:	add	x26, x26, #0x560
   23928:	ldr	x0, [x26, #8]
   2392c:	adds	x0, x0, x19
   23930:	b.eq	239b8 <GOMP_target_data@@GOMP_4.0+0x160>  // b.none
   23934:	ldr	w1, [x0, #8]
   23938:	mov	w2, #0x5                   	// #5
   2393c:	and	w1, w1, w2
   23940:	cmp	w1, #0x4
   23944:	b.ne	239b8 <GOMP_target_data@@GOMP_4.0+0x160>  // b.any
   23948:	add	x20, x25, x20
   2394c:	mov	x1, x21
   23950:	mov	x5, x24
   23954:	mov	x4, x23
   23958:	mov	x2, x22
   2395c:	mov	w7, #0x2                   	// #2
   23960:	mov	w6, #0x0                   	// #0
   23964:	mov	x3, #0x0                   	// #0
   23968:	bl	20c80 <omp_get_place_proc_ids@@OMP_4.5+0x1ac0>
   2396c:	mov	x19, x0
   23970:	ldr	x1, [x20, #80]
   23974:	cbz	x1, 23a40 <GOMP_target_data@@GOMP_4.0+0x1e8>
   23978:	add	x1, x1, #0x90
   2397c:	ldr	x0, [x1, #32]
   23980:	ldr	x27, [sp, #80]
   23984:	str	x0, [x19, #40]
   23988:	str	x19, [x1, #32]
   2398c:	ldp	x19, x20, [sp, #16]
   23990:	ldp	x21, x22, [sp, #32]
   23994:	ldp	x23, x24, [sp, #48]
   23998:	ldp	x25, x26, [sp, #64]
   2399c:	ldp	x29, x30, [sp], #96
   239a0:	ret
   239a4:	ldxr	w1, [x0]
   239a8:	stlxr	w2, wzr, [x0]
   239ac:	cbnz	w2, 239a4 <GOMP_target_data@@GOMP_4.0+0x14c>
   239b0:	tbnz	w1, #31, 23a54 <GOMP_target_data@@GOMP_4.0+0x1fc>
   239b4:	nop
   239b8:	ldr	x27, [sp, #80]
   239bc:	add	x20, x25, x20
   239c0:	adrp	x19, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   239c4:	add	x19, x19, #0x2b0
   239c8:	ldr	x0, [x20, #80]
   239cc:	cmp	x0, #0x0
   239d0:	add	x0, x0, #0x90
   239d4:	csel	x19, x19, x0, eq  // eq = none
   239d8:	ldr	x0, [x19, #32]
   239dc:	cbz	x0, 2398c <GOMP_target_data@@GOMP_4.0+0x134>
   239e0:	bl	1f850 <omp_get_place_proc_ids@@OMP_4.5+0x690>
   239e4:	ldr	x1, [x19, #32]
   239e8:	str	x1, [x0, #40]
   239ec:	str	x0, [x19, #32]
   239f0:	ldp	x19, x20, [sp, #16]
   239f4:	ldp	x21, x22, [sp, #32]
   239f8:	ldp	x23, x24, [sp, #48]
   239fc:	ldp	x25, x26, [sp, #64]
   23a00:	ldp	x29, x30, [sp], #96
   23a04:	ret
   23a08:	add	x1, x25, x20
   23a0c:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   23a10:	add	x0, x0, #0x2b0
   23a14:	ldr	x1, [x1, #80]
   23a18:	cmp	x1, #0x0
   23a1c:	add	x1, x1, #0x90
   23a20:	csel	x0, x0, x1, eq  // eq = none
   23a24:	ldr	w19, [x0, #16]
   23a28:	b	23898 <GOMP_target_data@@GOMP_4.0+0x40>
   23a2c:	bl	22d80 <GOMP_offload_unregister@@GOMP_4.0.1+0x18>
   23a30:	ldr	x0, [x27, #8]
   23a34:	add	x0, x0, x19
   23a38:	add	x0, x0, #0xa8
   23a3c:	b	23914 <GOMP_target_data@@GOMP_4.0+0xbc>
   23a40:	bl	1ba40 <omp_in_final@@OMP_3.1+0x1750>
   23a44:	mov	x1, x0
   23a48:	b	2397c <GOMP_target_data@@GOMP_4.0+0x124>
   23a4c:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   23a50:	b	23924 <GOMP_target_data@@GOMP_4.0+0xcc>
   23a54:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   23a58:	ldr	x27, [sp, #80]
   23a5c:	b	239bc <GOMP_target_data@@GOMP_4.0+0x164>
   23a60:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   23a64:	b	238f4 <GOMP_target_data@@GOMP_4.0+0x9c>

0000000000023a68 <GOMP_target_data_ext@@GOMP_4.5>:
   23a68:	stp	x29, x30, [sp, #-96]!
   23a6c:	cmn	w0, #0x1
   23a70:	mov	x29, sp
   23a74:	stp	x19, x20, [sp, #16]
   23a78:	mov	w19, w0
   23a7c:	adrp	x20, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   23a80:	ldr	x20, [x20, #4016]
   23a84:	stp	x21, x22, [sp, #32]
   23a88:	mov	x21, x1
   23a8c:	mov	x22, x2
   23a90:	stp	x23, x24, [sp, #48]
   23a94:	mov	x23, x3
   23a98:	mov	x24, x4
   23a9c:	stp	x25, x26, [sp, #64]
   23aa0:	mrs	x25, tpidr_el0
   23aa4:	b.eq	23c18 <GOMP_target_data_ext@@GOMP_4.5+0x1b0>  // b.none
   23aa8:	tbnz	w19, #31, 23bcc <GOMP_target_data_ext@@GOMP_4.5+0x164>
   23aac:	adrp	x26, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   23ab0:	str	x27, [sp, #80]
   23ab4:	add	x27, x26, #0x560
   23ab8:	adrp	x1, 1f000 <omp_pause_resource_all_@@OMP_5.0+0xd18>
   23abc:	add	x0, x27, #0x14
   23ac0:	add	x1, x1, #0x6e8
   23ac4:	bl	8900 <pthread_once@plt>
   23ac8:	ldr	w0, [x27, #4]
   23acc:	cmp	w19, w0
   23ad0:	b.ge	23bc8 <GOMP_target_data_ext@@GOMP_4.5+0x160>  // b.tcont
   23ad4:	mov	w1, #0x130                 	// #304
   23ad8:	mov	w2, #0x1                   	// #1
   23adc:	ldr	x0, [x27, #8]
   23ae0:	smull	x19, w19, w1
   23ae4:	add	x0, x0, x19
   23ae8:	add	x0, x0, #0xa8
   23aec:	ldaxr	w1, [x0]
   23af0:	cbnz	w1, 23afc <GOMP_target_data_ext@@GOMP_4.5+0x94>
   23af4:	stxr	w3, w2, [x0]
   23af8:	cbnz	w3, 23aec <GOMP_target_data_ext@@GOMP_4.5+0x84>
   23afc:	cmp	w1, #0x0
   23b00:	b.ne	23c70 <GOMP_target_data_ext@@GOMP_4.5+0x208>  // b.any
   23b04:	add	x27, x26, #0x560
   23b08:	ldr	x0, [x27, #8]
   23b0c:	add	x0, x0, x19
   23b10:	ldr	w1, [x0, #172]
   23b14:	cbz	w1, 23c3c <GOMP_target_data_ext@@GOMP_4.5+0x1d4>
   23b18:	add	x0, x0, #0xa8
   23b1c:	cmp	w1, #0x2
   23b20:	b.eq	23bb4 <GOMP_target_data_ext@@GOMP_4.5+0x14c>  // b.none
   23b24:	ldxr	w1, [x0]
   23b28:	stlxr	w2, wzr, [x0]
   23b2c:	cbnz	w2, 23b24 <GOMP_target_data_ext@@GOMP_4.5+0xbc>
   23b30:	tbnz	w1, #31, 23c5c <GOMP_target_data_ext@@GOMP_4.5+0x1f4>
   23b34:	add	x26, x26, #0x560
   23b38:	ldr	x0, [x26, #8]
   23b3c:	adds	x0, x0, x19
   23b40:	b.eq	23bc8 <GOMP_target_data_ext@@GOMP_4.5+0x160>  // b.none
   23b44:	ldr	w1, [x0, #8]
   23b48:	mov	w2, #0x5                   	// #5
   23b4c:	and	w1, w1, w2
   23b50:	cmp	w1, #0x4
   23b54:	b.ne	23bc8 <GOMP_target_data_ext@@GOMP_4.5+0x160>  // b.any
   23b58:	add	x20, x25, x20
   23b5c:	mov	x1, x21
   23b60:	mov	x5, x24
   23b64:	mov	x4, x23
   23b68:	mov	x2, x22
   23b6c:	mov	w7, #0x2                   	// #2
   23b70:	mov	w6, #0x1                   	// #1
   23b74:	mov	x3, #0x0                   	// #0
   23b78:	bl	20c80 <omp_get_place_proc_ids@@OMP_4.5+0x1ac0>
   23b7c:	mov	x19, x0
   23b80:	ldr	x1, [x20, #80]
   23b84:	cbz	x1, 23c50 <GOMP_target_data_ext@@GOMP_4.5+0x1e8>
   23b88:	add	x1, x1, #0x90
   23b8c:	ldr	x0, [x1, #32]
   23b90:	ldr	x27, [sp, #80]
   23b94:	str	x0, [x19, #40]
   23b98:	str	x19, [x1, #32]
   23b9c:	ldp	x19, x20, [sp, #16]
   23ba0:	ldp	x21, x22, [sp, #32]
   23ba4:	ldp	x23, x24, [sp, #48]
   23ba8:	ldp	x25, x26, [sp, #64]
   23bac:	ldp	x29, x30, [sp], #96
   23bb0:	ret
   23bb4:	ldxr	w1, [x0]
   23bb8:	stlxr	w2, wzr, [x0]
   23bbc:	cbnz	w2, 23bb4 <GOMP_target_data_ext@@GOMP_4.5+0x14c>
   23bc0:	tbnz	w1, #31, 23c64 <GOMP_target_data_ext@@GOMP_4.5+0x1fc>
   23bc4:	nop
   23bc8:	ldr	x27, [sp, #80]
   23bcc:	add	x20, x25, x20
   23bd0:	adrp	x19, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   23bd4:	add	x19, x19, #0x2b0
   23bd8:	ldr	x0, [x20, #80]
   23bdc:	cmp	x0, #0x0
   23be0:	add	x0, x0, #0x90
   23be4:	csel	x19, x19, x0, eq  // eq = none
   23be8:	ldr	x0, [x19, #32]
   23bec:	cbz	x0, 23b9c <GOMP_target_data_ext@@GOMP_4.5+0x134>
   23bf0:	bl	1f850 <omp_get_place_proc_ids@@OMP_4.5+0x690>
   23bf4:	ldr	x1, [x19, #32]
   23bf8:	str	x1, [x0, #40]
   23bfc:	str	x0, [x19, #32]
   23c00:	ldp	x19, x20, [sp, #16]
   23c04:	ldp	x21, x22, [sp, #32]
   23c08:	ldp	x23, x24, [sp, #48]
   23c0c:	ldp	x25, x26, [sp, #64]
   23c10:	ldp	x29, x30, [sp], #96
   23c14:	ret
   23c18:	add	x1, x25, x20
   23c1c:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   23c20:	add	x0, x0, #0x2b0
   23c24:	ldr	x1, [x1, #80]
   23c28:	cmp	x1, #0x0
   23c2c:	add	x1, x1, #0x90
   23c30:	csel	x0, x0, x1, eq  // eq = none
   23c34:	ldr	w19, [x0, #16]
   23c38:	b	23aa8 <GOMP_target_data_ext@@GOMP_4.5+0x40>
   23c3c:	bl	22d80 <GOMP_offload_unregister@@GOMP_4.0.1+0x18>
   23c40:	ldr	x0, [x27, #8]
   23c44:	add	x0, x0, x19
   23c48:	add	x0, x0, #0xa8
   23c4c:	b	23b24 <GOMP_target_data_ext@@GOMP_4.5+0xbc>
   23c50:	bl	1ba40 <omp_in_final@@OMP_3.1+0x1750>
   23c54:	mov	x1, x0
   23c58:	b	23b8c <GOMP_target_data_ext@@GOMP_4.5+0x124>
   23c5c:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   23c60:	b	23b34 <GOMP_target_data_ext@@GOMP_4.5+0xcc>
   23c64:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   23c68:	ldr	x27, [sp, #80]
   23c6c:	b	23bcc <GOMP_target_data_ext@@GOMP_4.5+0x164>
   23c70:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   23c74:	b	23b04 <GOMP_target_data_ext@@GOMP_4.5+0x9c>

0000000000023c78 <GOMP_target_end_data@@GOMP_4.0>:
   23c78:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   23c7c:	ldr	x2, [x2, #4016]
   23c80:	mrs	x0, tpidr_el0
   23c84:	adrp	x1, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   23c88:	add	x1, x1, #0x2b0
   23c8c:	add	x0, x0, x2
   23c90:	ldr	x0, [x0, #80]
   23c94:	cmp	x0, #0x0
   23c98:	add	x0, x0, #0x90
   23c9c:	csel	x1, x1, x0, eq  // eq = none
   23ca0:	ldr	x0, [x1, #32]
   23ca4:	cbz	x0, 23cb8 <GOMP_target_end_data@@GOMP_4.0+0x40>
   23ca8:	ldr	x2, [x0, #40]
   23cac:	str	x2, [x1, #32]
   23cb0:	mov	w1, #0x1                   	// #1
   23cb4:	b	22658 <omp_get_place_proc_ids@@OMP_4.5+0x3498>
   23cb8:	ret
   23cbc:	nop

0000000000023cc0 <GOMP_target_update@@GOMP_4.0>:
   23cc0:	stp	x29, x30, [sp, #-80]!
   23cc4:	cmn	w0, #0x1
   23cc8:	mov	x29, sp
   23ccc:	stp	x19, x20, [sp, #16]
   23cd0:	mov	w19, w0
   23cd4:	mov	x20, x2
   23cd8:	stp	x21, x22, [sp, #32]
   23cdc:	mov	x21, x3
   23ce0:	mov	x22, x4
   23ce4:	stp	x23, x24, [sp, #48]
   23ce8:	mov	x23, x5
   23cec:	b.eq	23de4 <GOMP_target_update@@GOMP_4.0+0x124>  // b.none
   23cf0:	tbnz	w19, #31, 23dd0 <GOMP_target_update@@GOMP_4.0+0x110>
   23cf4:	adrp	x24, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   23cf8:	str	x25, [sp, #64]
   23cfc:	add	x25, x24, #0x560
   23d00:	adrp	x1, 1f000 <omp_pause_resource_all_@@OMP_5.0+0xd18>
   23d04:	add	x0, x25, #0x14
   23d08:	add	x1, x1, #0x6e8
   23d0c:	bl	8900 <pthread_once@plt>
   23d10:	ldr	w0, [x25, #4]
   23d14:	cmp	w19, w0
   23d18:	b.ge	23dcc <GOMP_target_update@@GOMP_4.0+0x10c>  // b.tcont
   23d1c:	mov	w1, #0x130                 	// #304
   23d20:	mov	w2, #0x1                   	// #1
   23d24:	ldr	x0, [x25, #8]
   23d28:	smull	x19, w19, w1
   23d2c:	add	x0, x0, x19
   23d30:	add	x0, x0, #0xa8
   23d34:	ldaxr	w1, [x0]
   23d38:	cbnz	w1, 23d44 <GOMP_target_update@@GOMP_4.0+0x84>
   23d3c:	stxr	w3, w2, [x0]
   23d40:	cbnz	w3, 23d34 <GOMP_target_update@@GOMP_4.0+0x74>
   23d44:	cmp	w1, #0x0
   23d48:	b.ne	23e58 <GOMP_target_update@@GOMP_4.0+0x198>  // b.any
   23d4c:	add	x25, x24, #0x560
   23d50:	ldr	x0, [x25, #8]
   23d54:	add	x0, x0, x19
   23d58:	ldr	w1, [x0, #172]
   23d5c:	cbz	w1, 23e14 <GOMP_target_update@@GOMP_4.0+0x154>
   23d60:	add	x0, x0, #0xa8
   23d64:	cmp	w1, #0x2
   23d68:	b.eq	23e28 <GOMP_target_update@@GOMP_4.0+0x168>  // b.none
   23d6c:	ldxr	w1, [x0]
   23d70:	stlxr	w2, wzr, [x0]
   23d74:	cbnz	w2, 23d6c <GOMP_target_update@@GOMP_4.0+0xac>
   23d78:	tbnz	w1, #31, 23e50 <GOMP_target_update@@GOMP_4.0+0x190>
   23d7c:	add	x24, x24, #0x560
   23d80:	ldr	x0, [x24, #8]
   23d84:	adds	x0, x0, x19
   23d88:	b.eq	23dcc <GOMP_target_update@@GOMP_4.0+0x10c>  // b.none
   23d8c:	ldr	w1, [x0, #8]
   23d90:	mov	w2, #0x5                   	// #5
   23d94:	and	w1, w1, w2
   23d98:	cmp	w1, #0x4
   23d9c:	b.ne	23dcc <GOMP_target_update@@GOMP_4.0+0x10c>  // b.any
   23da0:	mov	x4, x23
   23da4:	mov	x3, x22
   23da8:	mov	x2, x21
   23dac:	mov	x1, x20
   23db0:	ldp	x19, x20, [sp, #16]
   23db4:	mov	w5, #0x0                   	// #0
   23db8:	ldp	x21, x22, [sp, #32]
   23dbc:	ldp	x23, x24, [sp, #48]
   23dc0:	ldr	x25, [sp, #64]
   23dc4:	ldp	x29, x30, [sp], #80
   23dc8:	b	1ffd8 <omp_get_place_proc_ids@@OMP_4.5+0xe18>
   23dcc:	ldr	x25, [sp, #64]
   23dd0:	ldp	x19, x20, [sp, #16]
   23dd4:	ldp	x21, x22, [sp, #32]
   23dd8:	ldp	x23, x24, [sp, #48]
   23ddc:	ldp	x29, x30, [sp], #80
   23de0:	ret
   23de4:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   23de8:	ldr	x2, [x2, #4016]
   23dec:	mrs	x1, tpidr_el0
   23df0:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   23df4:	add	x0, x0, #0x2b0
   23df8:	add	x1, x1, x2
   23dfc:	ldr	x1, [x1, #80]
   23e00:	cmp	x1, #0x0
   23e04:	add	x1, x1, #0x90
   23e08:	csel	x0, x0, x1, eq  // eq = none
   23e0c:	ldr	w19, [x0, #16]
   23e10:	b	23cf0 <GOMP_target_update@@GOMP_4.0+0x30>
   23e14:	bl	22d80 <GOMP_offload_unregister@@GOMP_4.0.1+0x18>
   23e18:	ldr	x0, [x25, #8]
   23e1c:	add	x0, x0, x19
   23e20:	add	x0, x0, #0xa8
   23e24:	b	23d6c <GOMP_target_update@@GOMP_4.0+0xac>
   23e28:	ldxr	w1, [x0]
   23e2c:	stlxr	w2, wzr, [x0]
   23e30:	cbnz	w2, 23e28 <GOMP_target_update@@GOMP_4.0+0x168>
   23e34:	ldr	x25, [sp, #64]
   23e38:	tbz	w1, #31, 23dd0 <GOMP_target_update@@GOMP_4.0+0x110>
   23e3c:	ldp	x19, x20, [sp, #16]
   23e40:	ldp	x21, x22, [sp, #32]
   23e44:	ldp	x23, x24, [sp, #48]
   23e48:	ldp	x29, x30, [sp], #80
   23e4c:	b	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   23e50:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   23e54:	b	23d7c <GOMP_target_update@@GOMP_4.0+0xbc>
   23e58:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   23e5c:	b	23d4c <GOMP_target_update@@GOMP_4.0+0x8c>

0000000000023e60 <GOMP_target_update_ext@@GOMP_4.5>:
   23e60:	sub	sp, sp, #0x70
   23e64:	cmn	w0, #0x1
   23e68:	stp	x29, x30, [sp, #16]
   23e6c:	add	x29, sp, #0x10
   23e70:	stp	x19, x20, [sp, #32]
   23e74:	mov	w19, w0
   23e78:	mov	x20, x1
   23e7c:	stp	x21, x22, [sp, #48]
   23e80:	mov	x21, x2
   23e84:	mov	x22, x3
   23e88:	stp	x23, x24, [sp, #64]
   23e8c:	mov	x23, x4
   23e90:	mov	w24, w5
   23e94:	stp	x25, x26, [sp, #80]
   23e98:	mov	x25, x6
   23e9c:	b.eq	24010 <GOMP_target_update_ext@@GOMP_4.5+0x1b0>  // b.none
   23ea0:	tbnz	w19, #31, 24040 <GOMP_target_update_ext@@GOMP_4.5+0x1e0>
   23ea4:	adrp	x26, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   23ea8:	str	x27, [sp, #96]
   23eac:	add	x27, x26, #0x560
   23eb0:	adrp	x1, 1f000 <omp_pause_resource_all_@@OMP_5.0+0xd18>
   23eb4:	add	x0, x27, #0x14
   23eb8:	add	x1, x1, #0x6e8
   23ebc:	bl	8900 <pthread_once@plt>
   23ec0:	ldr	w0, [x27, #4]
   23ec4:	cmp	w19, w0
   23ec8:	b.ge	240b0 <GOMP_target_update_ext@@GOMP_4.5+0x250>  // b.tcont
   23ecc:	mov	w1, #0x130                 	// #304
   23ed0:	mov	w2, #0x1                   	// #1
   23ed4:	ldr	x0, [x27, #8]
   23ed8:	smull	x19, w19, w1
   23edc:	add	x0, x0, x19
   23ee0:	add	x0, x0, #0xa8
   23ee4:	ldaxr	w1, [x0]
   23ee8:	cbnz	w1, 23ef4 <GOMP_target_update_ext@@GOMP_4.5+0x94>
   23eec:	stxr	w3, w2, [x0]
   23ef0:	cbnz	w3, 23ee4 <GOMP_target_update_ext@@GOMP_4.5+0x84>
   23ef4:	cmp	w1, #0x0
   23ef8:	b.ne	24170 <GOMP_target_update_ext@@GOMP_4.5+0x310>  // b.any
   23efc:	add	x27, x26, #0x560
   23f00:	ldr	x0, [x27, #8]
   23f04:	add	x0, x0, x19
   23f08:	ldr	w1, [x0, #172]
   23f0c:	cbz	w1, 24084 <GOMP_target_update_ext@@GOMP_4.5+0x224>
   23f10:	add	x0, x0, #0xa8
   23f14:	cmp	w1, #0x2
   23f18:	b.eq	240a0 <GOMP_target_update_ext@@GOMP_4.5+0x240>  // b.none
   23f1c:	ldxr	w1, [x0]
   23f20:	stlxr	w2, wzr, [x0]
   23f24:	cbnz	w2, 23f1c <GOMP_target_update_ext@@GOMP_4.5+0xbc>
   23f28:	tbnz	w1, #31, 240b8 <GOMP_target_update_ext@@GOMP_4.5+0x258>
   23f2c:	add	x26, x26, #0x560
   23f30:	ldr	x0, [x26, #8]
   23f34:	add	x19, x0, x19
   23f38:	cbz	x25, 24098 <GOMP_target_update_ext@@GOMP_4.5+0x238>
   23f3c:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   23f40:	ldr	x2, [x2, #4016]
   23f44:	mrs	x0, tpidr_el0
   23f48:	add	x1, x0, x2
   23f4c:	ldr	x1, [x1, #80]
   23f50:	cbz	x1, 24098 <GOMP_target_update_ext@@GOMP_4.5+0x238>
   23f54:	ldr	x3, [x1, #56]
   23f58:	ldr	x27, [sp, #96]
   23f5c:	cbz	x3, 23f98 <GOMP_target_update_ext@@GOMP_4.5+0x138>
   23f60:	add	x0, x0, x2
   23f64:	ldr	x0, [x0, #16]
   23f68:	tbz	w24, #0, 23f78 <GOMP_target_update_ext@@GOMP_4.5+0x118>
   23f6c:	cbz	x0, 23f90 <GOMP_target_update_ext@@GOMP_4.5+0x130>
   23f70:	ldrb	w2, [x1, #205]
   23f74:	cbz	w2, 240c0 <GOMP_target_update_ext@@GOMP_4.5+0x260>
   23f78:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   23f7c:	cmp	x0, #0x0
   23f80:	cset	w3, ne  // ne = any
   23f84:	ldrb	w2, [x2, #1356]
   23f88:	tst	w3, w2
   23f8c:	b.ne	2413c <GOMP_target_update_ext@@GOMP_4.5+0x2dc>  // b.any
   23f90:	mov	x0, x25
   23f94:	bl	163c0 <GOMP_taskwait@@GOMP_2.0+0x5c8>
   23f98:	cbz	x19, 24068 <GOMP_target_update_ext@@GOMP_4.5+0x208>
   23f9c:	ldr	w0, [x19, #8]
   23fa0:	mov	w1, #0x5                   	// #5
   23fa4:	and	w0, w0, w1
   23fa8:	cmp	w0, #0x4
   23fac:	b.ne	24068 <GOMP_target_update_ext@@GOMP_4.5+0x208>  // b.any
   23fb0:	adrp	x1, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   23fb4:	ldr	x1, [x1, #4016]
   23fb8:	mrs	x0, tpidr_el0
   23fbc:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   23fc0:	add	x0, x0, x1
   23fc4:	ldrb	w2, [x2, #1356]
   23fc8:	ldr	x1, [x0, #16]
   23fcc:	cmp	x1, #0x0
   23fd0:	cset	w3, ne  // ne = any
   23fd4:	tst	w3, w2
   23fd8:	b.ne	24104 <GOMP_target_update_ext@@GOMP_4.5+0x2a4>  // b.any
   23fdc:	mov	x4, x23
   23fe0:	mov	x3, x22
   23fe4:	mov	x2, x21
   23fe8:	mov	x1, x20
   23fec:	mov	x0, x19
   23ff0:	mov	w5, #0x1                   	// #1
   23ff4:	ldp	x29, x30, [sp, #16]
   23ff8:	ldp	x19, x20, [sp, #32]
   23ffc:	ldp	x21, x22, [sp, #48]
   24000:	ldp	x23, x24, [sp, #64]
   24004:	ldp	x25, x26, [sp, #80]
   24008:	add	sp, sp, #0x70
   2400c:	b	1ffd8 <omp_get_place_proc_ids@@OMP_4.5+0xe18>
   24010:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   24014:	ldr	x2, [x2, #4016]
   24018:	mrs	x1, tpidr_el0
   2401c:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   24020:	add	x0, x0, #0x2b0
   24024:	add	x1, x1, x2
   24028:	ldr	x1, [x1, #80]
   2402c:	cmp	x1, #0x0
   24030:	add	x1, x1, #0x90
   24034:	csel	x0, x0, x1, eq  // eq = none
   24038:	ldr	w19, [x0, #16]
   2403c:	tbz	w19, #31, 23ea4 <GOMP_target_update_ext@@GOMP_4.5+0x44>
   24040:	cbz	x25, 24068 <GOMP_target_update_ext@@GOMP_4.5+0x208>
   24044:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   24048:	ldr	x2, [x2, #4016]
   2404c:	mrs	x0, tpidr_el0
   24050:	add	x1, x0, x2
   24054:	ldr	x1, [x1, #80]
   24058:	cbz	x1, 24068 <GOMP_target_update_ext@@GOMP_4.5+0x208>
   2405c:	ldr	x3, [x1, #56]
   24060:	mov	x19, #0x0                   	// #0
   24064:	cbnz	x3, 23f60 <GOMP_target_update_ext@@GOMP_4.5+0x100>
   24068:	ldp	x29, x30, [sp, #16]
   2406c:	ldp	x19, x20, [sp, #32]
   24070:	ldp	x21, x22, [sp, #48]
   24074:	ldp	x23, x24, [sp, #64]
   24078:	ldp	x25, x26, [sp, #80]
   2407c:	add	sp, sp, #0x70
   24080:	ret
   24084:	bl	22d80 <GOMP_offload_unregister@@GOMP_4.0.1+0x18>
   24088:	ldr	x0, [x27, #8]
   2408c:	add	x0, x0, x19
   24090:	add	x0, x0, #0xa8
   24094:	b	23f1c <GOMP_target_update_ext@@GOMP_4.5+0xbc>
   24098:	ldr	x27, [sp, #96]
   2409c:	b	23f98 <GOMP_target_update_ext@@GOMP_4.5+0x138>
   240a0:	ldxr	w1, [x0]
   240a4:	stlxr	w2, wzr, [x0]
   240a8:	cbnz	w2, 240a0 <GOMP_target_update_ext@@GOMP_4.5+0x240>
   240ac:	tbnz	w1, #31, 240f8 <GOMP_target_update_ext@@GOMP_4.5+0x298>
   240b0:	ldr	x27, [sp, #96]
   240b4:	b	24040 <GOMP_target_update_ext@@GOMP_4.5+0x1e0>
   240b8:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   240bc:	b	23f2c <GOMP_target_update_ext@@GOMP_4.5+0xcc>
   240c0:	str	xzr, [sp]
   240c4:	mov	x7, x25
   240c8:	str	wzr, [sp, #8]
   240cc:	orr	w6, w24, #0x80000000
   240d0:	mov	x5, x23
   240d4:	mov	x4, x22
   240d8:	mov	x3, x21
   240dc:	mov	x2, x20
   240e0:	mov	x0, x19
   240e4:	mov	x1, #0x0                   	// #0
   240e8:	bl	14e48 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa8>
   240ec:	tst	w0, #0xff
   240f0:	b.eq	23f98 <GOMP_target_update_ext@@GOMP_4.5+0x138>  // b.none
   240f4:	b	24068 <GOMP_target_update_ext@@GOMP_4.5+0x208>
   240f8:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   240fc:	ldr	x27, [sp, #96]
   24100:	b	24040 <GOMP_target_update_ext@@GOMP_4.5+0x1e0>
   24104:	ldr	w1, [x1, #132]
   24108:	tbnz	w1, #2, 24068 <GOMP_target_update_ext@@GOMP_4.5+0x208>
   2410c:	ldr	x0, [x0, #80]
   24110:	ldr	x0, [x0, #40]
   24114:	cbz	x0, 23fdc <GOMP_target_update_ext@@GOMP_4.5+0x17c>
   24118:	ldrb	w1, [x0, #49]
   2411c:	cbnz	w1, 24068 <GOMP_target_update_ext@@GOMP_4.5+0x208>
   24120:	ldrb	w1, [x0, #50]
   24124:	cbz	w1, 23fdc <GOMP_target_update_ext@@GOMP_4.5+0x17c>
   24128:	ldr	x0, [x0]
   2412c:	cbz	x0, 23fdc <GOMP_target_update_ext@@GOMP_4.5+0x17c>
   24130:	ldrb	w0, [x0, #49]
   24134:	cbz	w0, 23fdc <GOMP_target_update_ext@@GOMP_4.5+0x17c>
   24138:	b	24068 <GOMP_target_update_ext@@GOMP_4.5+0x208>
   2413c:	ldr	w0, [x0, #132]
   24140:	tbnz	w0, #2, 24068 <GOMP_target_update_ext@@GOMP_4.5+0x208>
   24144:	ldr	x0, [x1, #40]
   24148:	cbz	x0, 23f90 <GOMP_target_update_ext@@GOMP_4.5+0x130>
   2414c:	ldrb	w1, [x0, #49]
   24150:	cbnz	w1, 24068 <GOMP_target_update_ext@@GOMP_4.5+0x208>
   24154:	ldrb	w1, [x0, #50]
   24158:	cbz	w1, 23f90 <GOMP_target_update_ext@@GOMP_4.5+0x130>
   2415c:	ldr	x0, [x0]
   24160:	cbz	x0, 23f90 <GOMP_target_update_ext@@GOMP_4.5+0x130>
   24164:	ldrb	w0, [x0, #49]
   24168:	cbz	w0, 23f90 <GOMP_target_update_ext@@GOMP_4.5+0x130>
   2416c:	b	24068 <GOMP_target_update_ext@@GOMP_4.5+0x208>
   24170:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   24174:	b	23efc <GOMP_target_update_ext@@GOMP_4.5+0x9c>

0000000000024178 <GOMP_target_enter_exit_data@@GOMP_4.5>:
   24178:	sub	sp, sp, #0x60
   2417c:	stp	x29, x30, [sp, #16]
   24180:	add	x29, sp, #0x10
   24184:	stp	x19, x20, [sp, #32]
   24188:	mov	x20, x3
   2418c:	mov	x19, x4
   24190:	stp	x21, x22, [sp, #48]
   24194:	mov	x21, x1
   24198:	mov	x22, x2
   2419c:	stp	x23, x24, [sp, #64]
   241a0:	mov	x23, x6
   241a4:	str	x25, [sp, #80]
   241a8:	mov	w25, w5
   241ac:	bl	22e50 <GOMP_offload_unregister@@GOMP_4.0.1+0xe8>
   241b0:	mov	x24, x0
   241b4:	cbz	x23, 2420c <GOMP_target_enter_exit_data@@GOMP_4.5+0x94>
   241b8:	adrp	x1, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   241bc:	ldr	x1, [x1, #4016]
   241c0:	mrs	x2, tpidr_el0
   241c4:	add	x1, x2, x1
   241c8:	ldr	x2, [x1, #80]
   241cc:	cbz	x2, 2420c <GOMP_target_enter_exit_data@@GOMP_4.5+0x94>
   241d0:	ldr	x3, [x2, #56]
   241d4:	cbz	x3, 2420c <GOMP_target_enter_exit_data@@GOMP_4.5+0x94>
   241d8:	ldr	x1, [x1, #16]
   241dc:	tbz	w25, #0, 241ec <GOMP_target_enter_exit_data@@GOMP_4.5+0x74>
   241e0:	cbz	x1, 24204 <GOMP_target_enter_exit_data@@GOMP_4.5+0x8c>
   241e4:	ldrb	w3, [x2, #205]
   241e8:	cbz	w3, 24314 <GOMP_target_enter_exit_data@@GOMP_4.5+0x19c>
   241ec:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   241f0:	cmp	x1, #0x0
   241f4:	cset	w3, ne  // ne = any
   241f8:	ldrb	w0, [x0, #1356]
   241fc:	tst	w3, w0
   24200:	b.ne	24380 <GOMP_target_enter_exit_data@@GOMP_4.5+0x208>  // b.any
   24204:	mov	x0, x23
   24208:	bl	163c0 <GOMP_taskwait@@GOMP_2.0+0x5c8>
   2420c:	cbz	x24, 24224 <GOMP_target_enter_exit_data@@GOMP_4.5+0xac>
   24210:	ldr	w0, [x24, #8]
   24214:	mov	w1, #0x5                   	// #5
   24218:	and	w0, w0, w1
   2421c:	cmp	w0, #0x4
   24220:	b.eq	24240 <GOMP_target_enter_exit_data@@GOMP_4.5+0xc8>  // b.none
   24224:	ldp	x29, x30, [sp, #16]
   24228:	ldp	x19, x20, [sp, #32]
   2422c:	ldp	x21, x22, [sp, #48]
   24230:	ldp	x23, x24, [sp, #64]
   24234:	ldr	x25, [sp, #80]
   24238:	add	sp, sp, #0x60
   2423c:	ret
   24240:	adrp	x1, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   24244:	ldr	x1, [x1, #4016]
   24248:	mrs	x0, tpidr_el0
   2424c:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   24250:	add	x0, x0, x1
   24254:	ldrb	w2, [x2, #1356]
   24258:	ldr	x1, [x0, #16]
   2425c:	cmp	x1, #0x0
   24260:	cset	w3, ne  // ne = any
   24264:	tst	w3, w2
   24268:	b.ne	24348 <GOMP_target_enter_exit_data@@GOMP_4.5+0x1d0>  // b.any
   2426c:	tbnz	w25, #1, 242e4 <GOMP_target_enter_exit_data@@GOMP_4.5+0x16c>
   24270:	cbz	x21, 24224 <GOMP_target_enter_exit_data@@GOMP_4.5+0xac>
   24274:	mov	x23, #0x0                   	// #0
   24278:	lsl	x5, x23, #1
   2427c:	lsl	x8, x23, #3
   24280:	mov	x0, x24
   24284:	add	x2, x22, x8
   24288:	mov	w7, #0x3                   	// #3
   2428c:	mov	w6, #0x1                   	// #1
   24290:	ldrb	w4, [x19, x5]
   24294:	mov	x3, #0x0                   	// #0
   24298:	add	x5, x19, x5
   2429c:	mov	x1, #0x1                   	// #1
   242a0:	cmp	w4, #0x1c
   242a4:	add	x4, x20, x8
   242a8:	b.eq	242c0 <GOMP_target_enter_exit_data@@GOMP_4.5+0x148>  // b.none
   242ac:	add	x23, x23, #0x1
   242b0:	bl	20c80 <omp_get_place_proc_ids@@OMP_4.5+0x1ac0>
   242b4:	cmp	x21, x23
   242b8:	b.hi	24278 <GOMP_target_enter_exit_data@@GOMP_4.5+0x100>  // b.pmore
   242bc:	b	24224 <GOMP_target_enter_exit_data@@GOMP_4.5+0xac>
   242c0:	ldr	x1, [x20, x23, lsl #3]
   242c4:	add	x1, x1, #0x1
   242c8:	bl	20c80 <omp_get_place_proc_ids@@OMP_4.5+0x1ac0>
   242cc:	ldr	x0, [x20, x23, lsl #3]
   242d0:	add	x23, x23, x0
   242d4:	add	x23, x23, #0x1
   242d8:	cmp	x21, x23
   242dc:	b.hi	24278 <GOMP_target_enter_exit_data@@GOMP_4.5+0x100>  // b.pmore
   242e0:	b	24224 <GOMP_target_enter_exit_data@@GOMP_4.5+0xac>
   242e4:	mov	x4, x19
   242e8:	mov	x3, x20
   242ec:	mov	x2, x22
   242f0:	mov	x1, x21
   242f4:	mov	x0, x24
   242f8:	ldp	x29, x30, [sp, #16]
   242fc:	ldp	x19, x20, [sp, #32]
   24300:	ldp	x21, x22, [sp, #48]
   24304:	ldp	x23, x24, [sp, #64]
   24308:	ldr	x25, [sp, #80]
   2430c:	add	sp, sp, #0x60
   24310:	b	20510 <omp_get_place_proc_ids@@OMP_4.5+0x1350>
   24314:	str	xzr, [sp]
   24318:	mov	x7, x23
   2431c:	str	wzr, [sp, #8]
   24320:	mov	w6, w25
   24324:	mov	x5, x19
   24328:	mov	x4, x20
   2432c:	mov	x3, x22
   24330:	mov	x2, x21
   24334:	mov	x1, #0x0                   	// #0
   24338:	bl	14e48 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa8>
   2433c:	tst	w0, #0xff
   24340:	b.eq	2420c <GOMP_target_enter_exit_data@@GOMP_4.5+0x94>  // b.none
   24344:	b	24224 <GOMP_target_enter_exit_data@@GOMP_4.5+0xac>
   24348:	ldr	w1, [x1, #132]
   2434c:	tbnz	w1, #2, 24224 <GOMP_target_enter_exit_data@@GOMP_4.5+0xac>
   24350:	ldr	x0, [x0, #80]
   24354:	ldr	x0, [x0, #40]
   24358:	cbz	x0, 2426c <GOMP_target_enter_exit_data@@GOMP_4.5+0xf4>
   2435c:	ldrb	w1, [x0, #49]
   24360:	cbnz	w1, 24224 <GOMP_target_enter_exit_data@@GOMP_4.5+0xac>
   24364:	ldrb	w1, [x0, #50]
   24368:	cbz	w1, 2426c <GOMP_target_enter_exit_data@@GOMP_4.5+0xf4>
   2436c:	ldr	x0, [x0]
   24370:	cbz	x0, 2426c <GOMP_target_enter_exit_data@@GOMP_4.5+0xf4>
   24374:	ldrb	w0, [x0, #49]
   24378:	cbz	w0, 2426c <GOMP_target_enter_exit_data@@GOMP_4.5+0xf4>
   2437c:	b	24224 <GOMP_target_enter_exit_data@@GOMP_4.5+0xac>
   24380:	ldr	w0, [x1, #132]
   24384:	tbnz	w0, #2, 24224 <GOMP_target_enter_exit_data@@GOMP_4.5+0xac>
   24388:	ldr	x0, [x2, #40]
   2438c:	cbz	x0, 24204 <GOMP_target_enter_exit_data@@GOMP_4.5+0x8c>
   24390:	ldrb	w1, [x0, #49]
   24394:	cbnz	w1, 24224 <GOMP_target_enter_exit_data@@GOMP_4.5+0xac>
   24398:	ldrb	w1, [x0, #50]
   2439c:	cbz	w1, 24204 <GOMP_target_enter_exit_data@@GOMP_4.5+0x8c>
   243a0:	ldr	x0, [x0]
   243a4:	cbz	x0, 24204 <GOMP_target_enter_exit_data@@GOMP_4.5+0x8c>
   243a8:	ldrb	w0, [x0, #49]
   243ac:	cbz	w0, 24204 <GOMP_target_enter_exit_data@@GOMP_4.5+0x8c>
   243b0:	b	24224 <GOMP_target_enter_exit_data@@GOMP_4.5+0xac>
   243b4:	nop
   243b8:	stp	x29, x30, [sp, #-48]!
   243bc:	mov	x29, sp
   243c0:	stp	x19, x20, [sp, #16]
   243c4:	mov	x19, x0
   243c8:	ldr	x0, [x0, #8]
   243cc:	stp	x21, x22, [sp, #32]
   243d0:	ldr	x21, [x19]
   243d4:	cbz	x0, 2448c <GOMP_target_enter_exit_data@@GOMP_4.5+0x314>
   243d8:	cbz	x21, 24468 <GOMP_target_enter_exit_data@@GOMP_4.5+0x2f0>
   243dc:	ldr	w1, [x21, #8]
   243e0:	tbz	w1, #2, 24468 <GOMP_target_enter_exit_data@@GOMP_4.5+0x2f0>
   243e4:	tbnz	w1, #1, 24588 <GOMP_target_enter_exit_data@@GOMP_4.5+0x410>
   243e8:	mov	x1, x0
   243ec:	mov	x0, x21
   243f0:	bl	1ff08 <omp_get_place_proc_ids@@OMP_4.5+0xd48>
   243f4:	mov	x20, x0
   243f8:	cbz	x0, 24464 <GOMP_target_enter_exit_data@@GOMP_4.5+0x2ec>
   243fc:	ldr	x1, [x21, #136]
   24400:	cbz	x1, 24414 <GOMP_target_enter_exit_data@@GOMP_4.5+0x29c>
   24404:	mov	x0, x20
   24408:	blr	x1
   2440c:	tst	w0, #0xff
   24410:	b.eq	24464 <GOMP_target_enter_exit_data@@GOMP_4.5+0x2ec>  // b.none
   24414:	ldr	w0, [x19, #44]
   24418:	cmp	w0, #0x5
   2441c:	b.eq	24544 <GOMP_target_enter_exit_data@@GOMP_4.5+0x3cc>  // b.none
   24420:	ldr	w0, [x21, #8]
   24424:	add	x2, x19, #0x50
   24428:	tbz	w0, #0, 24590 <GOMP_target_enter_exit_data@@GOMP_4.5+0x418>
   2442c:	str	xzr, [x19, #48]
   24430:	ldr	w0, [x21, #12]
   24434:	mov	w1, #0x3                   	// #3
   24438:	ldr	x3, [x19, #72]
   2443c:	mov	x4, x19
   24440:	ldr	x5, [x21, #152]
   24444:	str	w1, [x19, #44]
   24448:	mov	x1, x20
   2444c:	blr	x5
   24450:	mov	w0, #0x1                   	// #1
   24454:	ldp	x19, x20, [sp, #16]
   24458:	ldp	x21, x22, [sp, #32]
   2445c:	ldp	x29, x30, [sp], #48
   24460:	ret
   24464:	ldr	x0, [x19, #8]
   24468:	mov	w1, #0x2                   	// #2
   2446c:	str	w1, [x19, #44]
   24470:	add	x1, x19, #0x50
   24474:	bl	1f760 <omp_get_place_proc_ids@@OMP_4.5+0x5a0>
   24478:	mov	w0, #0x0                   	// #0
   2447c:	ldp	x19, x20, [sp, #16]
   24480:	ldp	x21, x22, [sp, #32]
   24484:	ldp	x29, x30, [sp], #48
   24488:	ret
   2448c:	cbz	x21, 24530 <GOMP_target_enter_exit_data@@GOMP_4.5+0x3b8>
   24490:	ldr	w0, [x21, #8]
   24494:	mov	w1, #0x5                   	// #5
   24498:	and	w0, w0, w1
   2449c:	cmp	w0, #0x4
   244a0:	b.ne	24530 <GOMP_target_enter_exit_data@@GOMP_4.5+0x3b8>  // b.any
   244a4:	ldr	w0, [x19, #40]
   244a8:	ldr	x1, [x19, #16]
   244ac:	tbnz	w0, #31, 245b8 <GOMP_target_enter_exit_data@@GOMP_4.5+0x440>
   244b0:	tbnz	w0, #1, 2451c <GOMP_target_enter_exit_data@@GOMP_4.5+0x3a4>
   244b4:	cbz	x1, 24530 <GOMP_target_enter_exit_data@@GOMP_4.5+0x3b8>
   244b8:	ldr	x9, [x19, #24]
   244bc:	mov	x20, #0x0                   	// #0
   244c0:	ldr	x8, [x19, #32]
   244c4:	lsl	x5, x20, #1
   244c8:	add	x2, x20, #0xa
   244cc:	mov	x0, x21
   244d0:	mov	w7, #0x3                   	// #3
   244d4:	mov	w6, #0x1                   	// #1
   244d8:	ldrb	w10, [x8, x5]
   244dc:	lsl	x2, x2, #3
   244e0:	sub	x22, x2, #0x50
   244e4:	add	x5, x8, x5
   244e8:	add	x2, x19, x2
   244ec:	add	x4, x9, x22
   244f0:	cmp	w10, #0x1c
   244f4:	mov	x3, #0x0                   	// #0
   244f8:	mov	x1, #0x1                   	// #1
   244fc:	b.eq	2455c <GOMP_target_enter_exit_data@@GOMP_4.5+0x3e4>  // b.none
   24500:	bl	20c80 <omp_get_place_proc_ids@@OMP_4.5+0x1ac0>
   24504:	add	x20, x20, #0x1
   24508:	ldr	x0, [x19, #16]
   2450c:	cmp	x0, x20
   24510:	b.ls	24530 <GOMP_target_enter_exit_data@@GOMP_4.5+0x3b8>  // b.plast
   24514:	ldr	x9, [x19, #24]
   24518:	b	244c0 <GOMP_target_enter_exit_data@@GOMP_4.5+0x348>
   2451c:	ldp	x3, x4, [x19, #24]
   24520:	mov	x0, x21
   24524:	add	x2, x19, #0x50
   24528:	bl	20510 <omp_get_place_proc_ids@@OMP_4.5+0x1350>
   2452c:	nop
   24530:	mov	w0, #0x0                   	// #0
   24534:	ldp	x19, x20, [sp, #16]
   24538:	ldp	x21, x22, [sp, #32]
   2453c:	ldp	x29, x30, [sp], #48
   24540:	ret
   24544:	ldr	x0, [x19, #48]
   24548:	cbz	x0, 24530 <GOMP_target_enter_exit_data@@GOMP_4.5+0x3b8>
   2454c:	mov	w1, #0x1                   	// #1
   24550:	bl	22658 <omp_get_place_proc_ids@@OMP_4.5+0x3498>
   24554:	mov	w0, #0x0                   	// #0
   24558:	b	2447c <GOMP_target_enter_exit_data@@GOMP_4.5+0x304>
   2455c:	ldr	x1, [x9, x22]
   24560:	add	x1, x1, #0x1
   24564:	bl	20c80 <omp_get_place_proc_ids@@OMP_4.5+0x1ac0>
   24568:	ldp	x0, x9, [x19, #16]
   2456c:	ldr	x1, [x9, x22]
   24570:	add	x20, x20, x1
   24574:	add	x20, x20, #0x1
   24578:	cmp	x0, x20
   2457c:	b.hi	244c0 <GOMP_target_enter_exit_data@@GOMP_4.5+0x348>  // b.pmore
   24580:	mov	w0, #0x0                   	// #0
   24584:	b	24534 <GOMP_target_enter_exit_data@@GOMP_4.5+0x3bc>
   24588:	mov	x20, x0
   2458c:	b	243fc <GOMP_target_enter_exit_data@@GOMP_4.5+0x284>
   24590:	ldp	x1, x4, [x19, #16]
   24594:	mov	w7, #0x1                   	// #1
   24598:	ldr	x5, [x19, #32]
   2459c:	mov	w6, w7
   245a0:	mov	x0, x21
   245a4:	mov	x3, #0x0                   	// #0
   245a8:	bl	20c80 <omp_get_place_proc_ids@@OMP_4.5+0x1ac0>
   245ac:	ldr	x2, [x0, #16]
   245b0:	str	x0, [x19, #48]
   245b4:	b	24430 <GOMP_target_enter_exit_data@@GOMP_4.5+0x2b8>
   245b8:	ldp	x3, x4, [x19, #24]
   245bc:	mov	x0, x21
   245c0:	add	x2, x19, #0x50
   245c4:	mov	w5, #0x1                   	// #1
   245c8:	bl	1ffd8 <omp_get_place_proc_ids@@OMP_4.5+0xe18>
   245cc:	mov	w0, #0x0                   	// #0
   245d0:	b	2447c <GOMP_target_enter_exit_data@@GOMP_4.5+0x304>
   245d4:	nop

00000000000245d8 <GOMP_teams@@GOMP_4.0>:
   245d8:	cbz	w1, 24620 <GOMP_teams@@GOMP_4.0+0x48>
   245dc:	stp	x29, x30, [sp, #-32]!
   245e0:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   245e4:	ldr	x0, [x0, #4016]
   245e8:	mov	x29, sp
   245ec:	str	x19, [sp, #16]
   245f0:	mov	w19, w1
   245f4:	mrs	x1, tpidr_el0
   245f8:	add	x0, x1, x0
   245fc:	ldr	x0, [x0, #80]
   24600:	cbz	x0, 24624 <GOMP_teams@@GOMP_4.0+0x4c>
   24604:	add	x0, x0, #0x90
   24608:	cmp	w19, #0x0
   2460c:	csinv	w19, w19, wzr, ge  // ge = tcont
   24610:	str	w19, [x0, #20]
   24614:	ldr	x19, [sp, #16]
   24618:	ldp	x29, x30, [sp], #32
   2461c:	ret
   24620:	ret
   24624:	bl	1ba40 <omp_in_final@@OMP_3.1+0x1750>
   24628:	cmp	w19, #0x0
   2462c:	csinv	w19, w19, wzr, ge  // ge = tcont
   24630:	str	w19, [x0, #20]
   24634:	ldr	x19, [sp, #16]
   24638:	ldp	x29, x30, [sp], #32
   2463c:	ret

0000000000024640 <omp_target_alloc@@OMP_4.5>:
   24640:	cmn	w1, #0x2
   24644:	b.eq	246e8 <omp_target_alloc@@OMP_4.5+0xa8>  // b.none
   24648:	stp	x29, x30, [sp, #-48]!
   2464c:	mov	x29, sp
   24650:	stp	x19, x20, [sp, #16]
   24654:	tbnz	w1, #31, 246ec <omp_target_alloc@@OMP_4.5+0xac>
   24658:	mov	x20, x0
   2465c:	mov	w0, w1
   24660:	bl	22e50 <GOMP_offload_unregister@@GOMP_4.0.1+0xe8>
   24664:	mov	x19, x0
   24668:	cbz	x0, 246ec <omp_target_alloc@@OMP_4.5+0xac>
   2466c:	ldr	w0, [x0, #8]
   24670:	mov	w1, #0x5                   	// #5
   24674:	and	w0, w0, w1
   24678:	cmp	w0, #0x4
   2467c:	b.ne	246dc <omp_target_alloc@@OMP_4.5+0x9c>  // b.any
   24680:	str	x21, [sp, #32]
   24684:	add	x21, x19, #0xa8
   24688:	mov	w0, #0x1                   	// #1
   2468c:	ldaxr	w1, [x21]
   24690:	cbnz	w1, 2469c <omp_target_alloc@@OMP_4.5+0x5c>
   24694:	stxr	w2, w0, [x21]
   24698:	cbnz	w2, 2468c <omp_target_alloc@@OMP_4.5+0x4c>
   2469c:	cmp	w1, #0x0
   246a0:	b.ne	24710 <omp_target_alloc@@OMP_4.5+0xd0>  // b.any
   246a4:	ldr	w0, [x19, #12]
   246a8:	mov	x1, x20
   246ac:	ldr	x2, [x19, #96]
   246b0:	blr	x2
   246b4:	mov	x19, x0
   246b8:	ldxr	w0, [x21]
   246bc:	stlxr	w1, wzr, [x21]
   246c0:	cbnz	w1, 246b8 <omp_target_alloc@@OMP_4.5+0x78>
   246c4:	tbnz	w0, #31, 24700 <omp_target_alloc@@OMP_4.5+0xc0>
   246c8:	ldr	x21, [sp, #32]
   246cc:	mov	x0, x19
   246d0:	ldp	x19, x20, [sp, #16]
   246d4:	ldp	x29, x30, [sp], #48
   246d8:	ret
   246dc:	mov	x0, x20
   246e0:	ldp	x19, x20, [sp, #16]
   246e4:	ldp	x29, x30, [sp], #48
   246e8:	b	8710 <malloc@plt>
   246ec:	mov	x19, #0x0                   	// #0
   246f0:	mov	x0, x19
   246f4:	ldp	x19, x20, [sp, #16]
   246f8:	ldp	x29, x30, [sp], #48
   246fc:	ret
   24700:	mov	x0, x21
   24704:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   24708:	ldr	x21, [sp, #32]
   2470c:	b	246cc <omp_target_alloc@@OMP_4.5+0x8c>
   24710:	mov	x0, x21
   24714:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   24718:	b	246a4 <omp_target_alloc@@OMP_4.5+0x64>
   2471c:	nop

0000000000024720 <omp_target_free@@OMP_4.5>:
   24720:	cbz	x0, 247d0 <omp_target_free@@OMP_4.5+0xb0>
   24724:	stp	x29, x30, [sp, #-48]!
   24728:	cmn	w1, #0x2
   2472c:	mov	x29, sp
   24730:	stp	x19, x20, [sp, #16]
   24734:	mov	x19, x0
   24738:	b.eq	247c0 <omp_target_free@@OMP_4.5+0xa0>  // b.none
   2473c:	tbnz	w1, #31, 247b4 <omp_target_free@@OMP_4.5+0x94>
   24740:	mov	w0, w1
   24744:	bl	22e50 <GOMP_offload_unregister@@GOMP_4.0.1+0xe8>
   24748:	mov	x20, x0
   2474c:	cbz	x0, 247b4 <omp_target_free@@OMP_4.5+0x94>
   24750:	ldr	w0, [x0, #8]
   24754:	mov	w1, #0x5                   	// #5
   24758:	and	w0, w0, w1
   2475c:	cmp	w0, #0x4
   24760:	b.ne	247c0 <omp_target_free@@OMP_4.5+0xa0>  // b.any
   24764:	str	x21, [sp, #32]
   24768:	add	x21, x20, #0xa8
   2476c:	mov	w0, #0x1                   	// #1
   24770:	ldaxr	w1, [x21]
   24774:	cbnz	w1, 24780 <omp_target_free@@OMP_4.5+0x60>
   24778:	stxr	w2, w0, [x21]
   2477c:	cbnz	w2, 24770 <omp_target_free@@OMP_4.5+0x50>
   24780:	cmp	w1, #0x0
   24784:	b.ne	247e8 <omp_target_free@@OMP_4.5+0xc8>  // b.any
   24788:	ldr	w0, [x20, #12]
   2478c:	mov	x1, x19
   24790:	ldr	x2, [x20, #104]
   24794:	blr	x2
   24798:	tst	w0, #0xff
   2479c:	b.eq	247f4 <omp_target_free@@OMP_4.5+0xd4>  // b.none
   247a0:	ldxr	w0, [x21]
   247a4:	stlxr	w1, wzr, [x21]
   247a8:	cbnz	w1, 247a0 <omp_target_free@@OMP_4.5+0x80>
   247ac:	tbnz	w0, #31, 247d4 <omp_target_free@@OMP_4.5+0xb4>
   247b0:	ldr	x21, [sp, #32]
   247b4:	ldp	x19, x20, [sp, #16]
   247b8:	ldp	x29, x30, [sp], #48
   247bc:	ret
   247c0:	mov	x0, x19
   247c4:	ldp	x19, x20, [sp, #16]
   247c8:	ldp	x29, x30, [sp], #48
   247cc:	b	88b0 <free@plt>
   247d0:	ret
   247d4:	mov	x0, x21
   247d8:	ldp	x19, x20, [sp, #16]
   247dc:	ldr	x21, [sp, #32]
   247e0:	ldp	x29, x30, [sp], #48
   247e4:	b	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   247e8:	mov	x0, x21
   247ec:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   247f0:	b	24788 <omp_target_free@@OMP_4.5+0x68>
   247f4:	mov	x0, x21
   247f8:	bl	1f740 <omp_get_place_proc_ids@@OMP_4.5+0x580>
   247fc:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   24800:	mov	x1, x19
   24804:	add	x0, x0, #0xb28
   24808:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2480c:	nop

0000000000024810 <omp_target_is_present@@OMP_4.5>:
   24810:	stp	x29, x30, [sp, #-112]!
   24814:	cmp	x0, #0x0
   24818:	ccmn	w1, #0x2, #0x4, ne  // ne = any
   2481c:	mov	x29, sp
   24820:	stp	x19, x20, [sp, #16]
   24824:	b.eq	24950 <omp_target_is_present@@OMP_4.5+0x140>  // b.none
   24828:	mov	w19, w1
   2482c:	tbnz	w1, #31, 24968 <omp_target_is_present@@OMP_4.5+0x158>
   24830:	stp	x21, x22, [sp, #32]
   24834:	adrp	x21, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   24838:	add	x22, x21, #0x560
   2483c:	mov	x20, x0
   24840:	adrp	x1, 1f000 <omp_pause_resource_all_@@OMP_5.0+0xd18>
   24844:	add	x0, x22, #0x14
   24848:	add	x1, x1, #0x6e8
   2484c:	bl	8900 <pthread_once@plt>
   24850:	ldr	w0, [x22, #4]
   24854:	cmp	w19, w0
   24858:	b.ge	24964 <omp_target_is_present@@OMP_4.5+0x154>  // b.tcont
   2485c:	mov	w1, #0x130                 	// #304
   24860:	mov	w2, #0x1                   	// #1
   24864:	ldr	x0, [x22, #8]
   24868:	smull	x19, w19, w1
   2486c:	add	x0, x0, x19
   24870:	add	x0, x0, #0xa8
   24874:	ldaxr	w1, [x0]
   24878:	cbnz	w1, 24884 <omp_target_is_present@@OMP_4.5+0x74>
   2487c:	stxr	w3, w2, [x0]
   24880:	cbnz	w3, 24874 <omp_target_is_present@@OMP_4.5+0x64>
   24884:	cmp	w1, #0x0
   24888:	b.ne	249c8 <omp_target_is_present@@OMP_4.5+0x1b8>  // b.any
   2488c:	add	x22, x21, #0x560
   24890:	ldr	x0, [x22, #8]
   24894:	add	x0, x0, x19
   24898:	ldr	w1, [x0, #172]
   2489c:	cbz	w1, 2497c <omp_target_is_present@@OMP_4.5+0x16c>
   248a0:	add	x0, x0, #0xa8
   248a4:	cmp	w1, #0x2
   248a8:	b.eq	24990 <omp_target_is_present@@OMP_4.5+0x180>  // b.none
   248ac:	ldxr	w1, [x0]
   248b0:	stlxr	w2, wzr, [x0]
   248b4:	cbnz	w2, 248ac <omp_target_is_present@@OMP_4.5+0x9c>
   248b8:	tbnz	w1, #31, 249b0 <omp_target_is_present@@OMP_4.5+0x1a0>
   248bc:	add	x21, x21, #0x560
   248c0:	ldr	x0, [x21, #8]
   248c4:	adds	x19, x0, x19
   248c8:	b.eq	24964 <omp_target_is_present@@OMP_4.5+0x154>  // b.none
   248cc:	ldr	w0, [x19, #8]
   248d0:	mov	w1, #0x5                   	// #5
   248d4:	and	w0, w0, w1
   248d8:	cmp	w0, #0x4
   248dc:	b.ne	2494c <omp_target_is_present@@OMP_4.5+0x13c>  // b.any
   248e0:	add	x21, x19, #0xa8
   248e4:	mov	w0, #0x1                   	// #1
   248e8:	ldaxr	w1, [x21]
   248ec:	cbnz	w1, 248f8 <omp_target_is_present@@OMP_4.5+0xe8>
   248f0:	stxr	w2, w0, [x21]
   248f4:	cbnz	w2, 248e8 <omp_target_is_present@@OMP_4.5+0xd8>
   248f8:	cmp	w1, #0x0
   248fc:	b.ne	249d0 <omp_target_is_present@@OMP_4.5+0x1c0>  // b.any
   24900:	add	x2, x20, #0x1
   24904:	add	x0, x19, #0xa0
   24908:	add	x1, sp, #0x38
   2490c:	stp	x20, x2, [sp, #56]
   24910:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   24914:	cmp	x0, #0x0
   24918:	ldr	x1, [sp, #64]
   2491c:	cset	w19, ne  // ne = any
   24920:	sub	x1, x1, #0x1
   24924:	str	x1, [sp, #64]
   24928:	ldxr	w0, [x21]
   2492c:	stlxr	w1, wzr, [x21]
   24930:	cbnz	w1, 24928 <omp_target_is_present@@OMP_4.5+0x118>
   24934:	tbnz	w0, #31, 249b8 <omp_target_is_present@@OMP_4.5+0x1a8>
   24938:	mov	w0, w19
   2493c:	ldp	x19, x20, [sp, #16]
   24940:	ldp	x21, x22, [sp, #32]
   24944:	ldp	x29, x30, [sp], #112
   24948:	ret
   2494c:	ldp	x21, x22, [sp, #32]
   24950:	mov	w19, #0x1                   	// #1
   24954:	mov	w0, w19
   24958:	ldp	x19, x20, [sp, #16]
   2495c:	ldp	x29, x30, [sp], #112
   24960:	ret
   24964:	ldp	x21, x22, [sp, #32]
   24968:	mov	w19, #0x0                   	// #0
   2496c:	mov	w0, w19
   24970:	ldp	x19, x20, [sp, #16]
   24974:	ldp	x29, x30, [sp], #112
   24978:	ret
   2497c:	bl	22d80 <GOMP_offload_unregister@@GOMP_4.0.1+0x18>
   24980:	ldr	x0, [x22, #8]
   24984:	add	x0, x0, x19
   24988:	add	x0, x0, #0xa8
   2498c:	b	248ac <omp_target_is_present@@OMP_4.5+0x9c>
   24990:	ldxr	w1, [x0]
   24994:	stlxr	w2, wzr, [x0]
   24998:	cbnz	w2, 24990 <omp_target_is_present@@OMP_4.5+0x180>
   2499c:	tbz	w1, #31, 24964 <omp_target_is_present@@OMP_4.5+0x154>
   249a0:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   249a4:	mov	w19, #0x0                   	// #0
   249a8:	ldp	x21, x22, [sp, #32]
   249ac:	b	24954 <omp_target_is_present@@OMP_4.5+0x144>
   249b0:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   249b4:	b	248bc <omp_target_is_present@@OMP_4.5+0xac>
   249b8:	mov	x0, x21
   249bc:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   249c0:	ldp	x21, x22, [sp, #32]
   249c4:	b	24954 <omp_target_is_present@@OMP_4.5+0x144>
   249c8:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   249cc:	b	2488c <omp_target_is_present@@OMP_4.5+0x7c>
   249d0:	mov	x0, x21
   249d4:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   249d8:	b	24900 <omp_target_is_present@@OMP_4.5+0xf0>
   249dc:	nop

00000000000249e0 <omp_target_memcpy@@OMP_4.5>:
   249e0:	stp	x29, x30, [sp, #-80]!
   249e4:	cmn	w5, #0x2
   249e8:	mov	x29, sp
   249ec:	stp	x19, x20, [sp, #16]
   249f0:	mov	w19, w6
   249f4:	stp	x21, x22, [sp, #32]
   249f8:	mov	x21, x0
   249fc:	mov	x22, x1
   24a00:	stp	x23, x24, [sp, #48]
   24a04:	mov	x23, x2
   24a08:	mov	x24, x3
   24a0c:	str	x25, [sp, #64]
   24a10:	mov	x25, x4
   24a14:	b.eq	24a40 <omp_target_memcpy@@OMP_4.5+0x60>  // b.none
   24a18:	tbnz	w5, #31, 24ac8 <omp_target_memcpy@@OMP_4.5+0xe8>
   24a1c:	mov	w0, w5
   24a20:	bl	22e50 <GOMP_offload_unregister@@GOMP_4.0.1+0xe8>
   24a24:	mov	x20, x0
   24a28:	cbz	x0, 24ac8 <omp_target_memcpy@@OMP_4.5+0xe8>
   24a2c:	ldr	w0, [x0, #8]
   24a30:	mov	w1, #0x5                   	// #5
   24a34:	and	w0, w0, w1
   24a38:	cmp	w0, #0x4
   24a3c:	b.eq	24b40 <omp_target_memcpy@@OMP_4.5+0x160>  // b.none
   24a40:	cmn	w19, #0x2
   24a44:	mov	x20, #0x0                   	// #0
   24a48:	b.eq	24bc8 <omp_target_memcpy@@OMP_4.5+0x1e8>  // b.none
   24a4c:	tbnz	w19, #31, 24ac8 <omp_target_memcpy@@OMP_4.5+0xe8>
   24a50:	mov	w0, w19
   24a54:	bl	22e50 <GOMP_offload_unregister@@GOMP_4.0.1+0xe8>
   24a58:	mov	x19, x0
   24a5c:	cbz	x0, 24ac8 <omp_target_memcpy@@OMP_4.5+0xe8>
   24a60:	ldr	w0, [x0, #8]
   24a64:	mov	w1, #0x5                   	// #5
   24a68:	and	w0, w0, w1
   24a6c:	cmp	w0, #0x4
   24a70:	b.eq	24ae4 <omp_target_memcpy@@OMP_4.5+0x104>  // b.none
   24a74:	cbz	x20, 24bc8 <omp_target_memcpy@@OMP_4.5+0x1e8>
   24a78:	add	x19, x20, #0xa8
   24a7c:	mov	w0, #0x1                   	// #1
   24a80:	ldaxr	w1, [x19]
   24a84:	cbnz	w1, 24a90 <omp_target_memcpy@@OMP_4.5+0xb0>
   24a88:	stxr	w2, w0, [x19]
   24a8c:	cbnz	w2, 24a80 <omp_target_memcpy@@OMP_4.5+0xa0>
   24a90:	cmp	w1, #0x0
   24a94:	b.ne	24c1c <omp_target_memcpy@@OMP_4.5+0x23c>  // b.any
   24a98:	ldr	w0, [x20, #12]
   24a9c:	mov	x3, x23
   24aa0:	ldr	x4, [x20, #120]
   24aa4:	add	x2, x22, x25
   24aa8:	add	x1, x21, x24
   24aac:	blr	x4
   24ab0:	and	w20, w0, #0xff
   24ab4:	ldxr	w0, [x19]
   24ab8:	stlxr	w1, wzr, [x19]
   24abc:	cbnz	w1, 24ab4 <omp_target_memcpy@@OMP_4.5+0xd4>
   24ac0:	tbnz	w0, #31, 24bf4 <omp_target_memcpy@@OMP_4.5+0x214>
   24ac4:	cbnz	w20, 24bac <omp_target_memcpy@@OMP_4.5+0x1cc>
   24ac8:	mov	w0, #0x16                  	// #22
   24acc:	ldp	x19, x20, [sp, #16]
   24ad0:	ldp	x21, x22, [sp, #32]
   24ad4:	ldp	x23, x24, [sp, #48]
   24ad8:	ldr	x25, [sp, #64]
   24adc:	ldp	x29, x30, [sp], #80
   24ae0:	ret
   24ae4:	cbz	x20, 24b50 <omp_target_memcpy@@OMP_4.5+0x170>
   24ae8:	cmp	x19, x20
   24aec:	b.ne	24ac8 <omp_target_memcpy@@OMP_4.5+0xe8>  // b.any
   24af0:	add	x19, x20, #0xa8
   24af4:	mov	w0, #0x1                   	// #1
   24af8:	ldaxr	w1, [x19]
   24afc:	cbnz	w1, 24b08 <omp_target_memcpy@@OMP_4.5+0x128>
   24b00:	stxr	w2, w0, [x19]
   24b04:	cbnz	w2, 24af8 <omp_target_memcpy@@OMP_4.5+0x118>
   24b08:	cmp	w1, #0x0
   24b0c:	b.ne	24c10 <omp_target_memcpy@@OMP_4.5+0x230>  // b.any
   24b10:	ldr	w0, [x20, #12]
   24b14:	mov	x3, x23
   24b18:	ldr	x4, [x20, #128]
   24b1c:	add	x2, x22, x25
   24b20:	add	x1, x21, x24
   24b24:	blr	x4
   24b28:	and	w20, w0, #0xff
   24b2c:	ldxr	w0, [x19]
   24b30:	stlxr	w1, wzr, [x19]
   24b34:	cbnz	w1, 24b2c <omp_target_memcpy@@OMP_4.5+0x14c>
   24b38:	tbz	w0, #31, 24ac4 <omp_target_memcpy@@OMP_4.5+0xe4>
   24b3c:	b	24bf4 <omp_target_memcpy@@OMP_4.5+0x214>
   24b40:	cmn	w19, #0x2
   24b44:	b.eq	24a78 <omp_target_memcpy@@OMP_4.5+0x98>  // b.none
   24b48:	tbz	w19, #31, 24a50 <omp_target_memcpy@@OMP_4.5+0x70>
   24b4c:	b	24ac8 <omp_target_memcpy@@OMP_4.5+0xe8>
   24b50:	add	x20, x19, #0xa8
   24b54:	mov	w0, #0x1                   	// #1
   24b58:	ldaxr	w1, [x20]
   24b5c:	cbnz	w1, 24b68 <omp_target_memcpy@@OMP_4.5+0x188>
   24b60:	stxr	w2, w0, [x20]
   24b64:	cbnz	w2, 24b58 <omp_target_memcpy@@OMP_4.5+0x178>
   24b68:	cmp	w1, #0x0
   24b6c:	b.ne	24c04 <omp_target_memcpy@@OMP_4.5+0x224>  // b.any
   24b70:	ldr	w0, [x19, #12]
   24b74:	mov	x3, x23
   24b78:	ldr	x4, [x19, #112]
   24b7c:	add	x2, x22, x25
   24b80:	add	x1, x21, x24
   24b84:	blr	x4
   24b88:	and	w19, w0, #0xff
   24b8c:	ldxr	w0, [x20]
   24b90:	stlxr	w1, wzr, [x20]
   24b94:	cbnz	w1, 24b8c <omp_target_memcpy@@OMP_4.5+0x1ac>
   24b98:	tbz	w0, #31, 24ba8 <omp_target_memcpy@@OMP_4.5+0x1c8>
   24b9c:	mov	x0, x20
   24ba0:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   24ba4:	nop
   24ba8:	cbz	w19, 24ac8 <omp_target_memcpy@@OMP_4.5+0xe8>
   24bac:	mov	w0, #0x0                   	// #0
   24bb0:	ldp	x19, x20, [sp, #16]
   24bb4:	ldp	x21, x22, [sp, #32]
   24bb8:	ldp	x23, x24, [sp, #48]
   24bbc:	ldr	x25, [sp, #64]
   24bc0:	ldp	x29, x30, [sp], #80
   24bc4:	ret
   24bc8:	add	x1, x22, x25
   24bcc:	mov	x2, x23
   24bd0:	add	x0, x21, x24
   24bd4:	bl	8580 <memcpy@plt>
   24bd8:	mov	w0, #0x0                   	// #0
   24bdc:	ldp	x19, x20, [sp, #16]
   24be0:	ldp	x21, x22, [sp, #32]
   24be4:	ldp	x23, x24, [sp, #48]
   24be8:	ldr	x25, [sp, #64]
   24bec:	ldp	x29, x30, [sp], #80
   24bf0:	ret
   24bf4:	mov	x0, x19
   24bf8:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   24bfc:	cbz	w20, 24ac8 <omp_target_memcpy@@OMP_4.5+0xe8>
   24c00:	b	24bac <omp_target_memcpy@@OMP_4.5+0x1cc>
   24c04:	mov	x0, x20
   24c08:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   24c0c:	b	24b70 <omp_target_memcpy@@OMP_4.5+0x190>
   24c10:	mov	x0, x19
   24c14:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   24c18:	b	24b10 <omp_target_memcpy@@OMP_4.5+0x130>
   24c1c:	mov	x0, x19
   24c20:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   24c24:	b	24a98 <omp_target_memcpy@@OMP_4.5+0xb8>

0000000000024c28 <omp_target_memcpy_rect@@OMP_4.5>:
   24c28:	sub	sp, sp, #0x90
   24c2c:	stp	x29, x30, [sp, #32]
   24c30:	add	x29, sp, #0x20
   24c34:	stp	x19, x20, [sp, #48]
   24c38:	mov	x19, x0
   24c3c:	mov	x20, x1
   24c40:	stp	x21, x22, [sp, #64]
   24c44:	orr	x1, x0, x1
   24c48:	ldr	w22, [sp, #160]
   24c4c:	stp	x27, x28, [sp, #112]
   24c50:	mov	x28, x2
   24c54:	ldr	w0, [sp, #152]
   24c58:	ldr	x2, [sp, #144]
   24c5c:	cbz	x1, 24d60 <omp_target_memcpy_rect@@OMP_4.5+0x138>
   24c60:	stp	x23, x24, [sp, #80]
   24c64:	mov	w27, w3
   24c68:	mov	x24, x6
   24c6c:	stp	x25, x26, [sp, #96]
   24c70:	mov	x23, x7
   24c74:	mov	x26, x4
   24c78:	mov	x25, x5
   24c7c:	cmn	w0, #0x2
   24c80:	b.eq	24cb0 <omp_target_memcpy_rect@@OMP_4.5+0x88>  // b.none
   24c84:	tbnz	w0, #31, 24d38 <omp_target_memcpy_rect@@OMP_4.5+0x110>
   24c88:	str	x2, [sp, #128]
   24c8c:	bl	22e50 <GOMP_offload_unregister@@GOMP_4.0.1+0xe8>
   24c90:	mov	x21, x0
   24c94:	cbz	x0, 24d38 <omp_target_memcpy_rect@@OMP_4.5+0x110>
   24c98:	ldr	w0, [x0, #8]
   24c9c:	mov	w1, #0x5                   	// #5
   24ca0:	ldr	x2, [sp, #128]
   24ca4:	and	w0, w0, w1
   24ca8:	cmp	w0, #0x4
   24cac:	b.eq	24e18 <omp_target_memcpy_rect@@OMP_4.5+0x1f0>  // b.none
   24cb0:	cmn	w22, #0x2
   24cb4:	mov	x21, #0x0                   	// #0
   24cb8:	b.eq	24cf0 <omp_target_memcpy_rect@@OMP_4.5+0xc8>  // b.none
   24cbc:	str	x2, [sp, #128]
   24cc0:	tbnz	w22, #31, 24d38 <omp_target_memcpy_rect@@OMP_4.5+0x110>
   24cc4:	mov	w0, w22
   24cc8:	bl	22e50 <GOMP_offload_unregister@@GOMP_4.0.1+0xe8>
   24ccc:	mov	x22, x0
   24cd0:	cbz	x0, 24d38 <omp_target_memcpy_rect@@OMP_4.5+0x110>
   24cd4:	ldr	w0, [x0, #8]
   24cd8:	mov	w1, #0x5                   	// #5
   24cdc:	ldr	x2, [sp, #128]
   24ce0:	and	w0, w0, w1
   24ce4:	cmp	w0, #0x4
   24ce8:	b.eq	24d80 <omp_target_memcpy_rect@@OMP_4.5+0x158>  // b.none
   24cec:	cbnz	x21, 24e20 <omp_target_memcpy_rect@@OMP_4.5+0x1f8>
   24cf0:	mov	x7, x23
   24cf4:	mov	x6, x24
   24cf8:	mov	x5, x25
   24cfc:	mov	x4, x26
   24d00:	mov	w3, w27
   24d04:	mov	x1, x20
   24d08:	mov	x0, x19
   24d0c:	stp	x2, xzr, [sp, #144]
   24d10:	mov	x2, x28
   24d14:	ldp	x29, x30, [sp, #32]
   24d18:	str	xzr, [sp, #160]
   24d1c:	ldp	x19, x20, [sp, #48]
   24d20:	ldp	x21, x22, [sp, #64]
   24d24:	ldp	x23, x24, [sp, #80]
   24d28:	ldp	x25, x26, [sp, #96]
   24d2c:	ldp	x27, x28, [sp, #112]
   24d30:	add	sp, sp, #0x90
   24d34:	b	1f478 <omp_get_place_proc_ids@@OMP_4.5+0x2b8>
   24d38:	ldp	x23, x24, [sp, #80]
   24d3c:	mov	w19, #0x16                  	// #22
   24d40:	ldp	x25, x26, [sp, #96]
   24d44:	mov	w0, w19
   24d48:	ldp	x29, x30, [sp, #32]
   24d4c:	ldp	x19, x20, [sp, #48]
   24d50:	ldp	x21, x22, [sp, #64]
   24d54:	ldp	x27, x28, [sp, #112]
   24d58:	add	sp, sp, #0x90
   24d5c:	ret
   24d60:	mov	w19, #0x7fffffff            	// #2147483647
   24d64:	mov	w0, w19
   24d68:	ldp	x29, x30, [sp, #32]
   24d6c:	ldp	x19, x20, [sp, #48]
   24d70:	ldp	x21, x22, [sp, #64]
   24d74:	ldp	x27, x28, [sp, #112]
   24d78:	add	sp, sp, #0x90
   24d7c:	ret
   24d80:	cmp	x21, #0x0
   24d84:	add	x8, x22, #0xa8
   24d88:	ccmp	x22, x21, #0x4, ne  // ne = any
   24d8c:	mov	w0, #0x1                   	// #1
   24d90:	b.ne	24d38 <omp_target_memcpy_rect@@OMP_4.5+0x110>  // b.any
   24d94:	ldaxr	w1, [x8]
   24d98:	cbnz	w1, 24da4 <omp_target_memcpy_rect@@OMP_4.5+0x17c>
   24d9c:	stxr	w3, w0, [x8]
   24da0:	cbnz	w3, 24d94 <omp_target_memcpy_rect@@OMP_4.5+0x16c>
   24da4:	cmp	w1, #0x0
   24da8:	b.ne	24ea8 <omp_target_memcpy_rect@@OMP_4.5+0x280>  // b.any
   24dac:	stp	x2, x21, [sp]
   24db0:	mov	x0, x19
   24db4:	mov	x7, x23
   24db8:	str	x22, [sp, #16]
   24dbc:	mov	x6, x24
   24dc0:	mov	x5, x25
   24dc4:	mov	x4, x26
   24dc8:	mov	w3, w27
   24dcc:	mov	x1, x20
   24dd0:	mov	x2, x28
   24dd4:	str	x8, [sp, #128]
   24dd8:	bl	1f478 <omp_get_place_proc_ids@@OMP_4.5+0x2b8>
   24ddc:	mov	w19, w0
   24de0:	ldr	x8, [sp, #128]
   24de4:	ldxr	w0, [x8]
   24de8:	stlxr	w1, wzr, [x8]
   24dec:	cbnz	w1, 24de4 <omp_target_memcpy_rect@@OMP_4.5+0x1bc>
   24df0:	tbnz	w0, #31, 24e94 <omp_target_memcpy_rect@@OMP_4.5+0x26c>
   24df4:	mov	w0, w19
   24df8:	ldp	x29, x30, [sp, #32]
   24dfc:	ldp	x19, x20, [sp, #48]
   24e00:	ldp	x21, x22, [sp, #64]
   24e04:	ldp	x23, x24, [sp, #80]
   24e08:	ldp	x25, x26, [sp, #96]
   24e0c:	ldp	x27, x28, [sp, #112]
   24e10:	add	sp, sp, #0x90
   24e14:	ret
   24e18:	cmn	w22, #0x2
   24e1c:	b.ne	24cbc <omp_target_memcpy_rect@@OMP_4.5+0x94>  // b.any
   24e20:	add	x22, x21, #0xa8
   24e24:	mov	w0, #0x1                   	// #1
   24e28:	ldaxr	w1, [x22]
   24e2c:	cbnz	w1, 24e38 <omp_target_memcpy_rect@@OMP_4.5+0x210>
   24e30:	stxr	w3, w0, [x22]
   24e34:	cbnz	w3, 24e28 <omp_target_memcpy_rect@@OMP_4.5+0x200>
   24e38:	cmp	w1, #0x0
   24e3c:	b.ne	24ebc <omp_target_memcpy_rect@@OMP_4.5+0x294>  // b.any
   24e40:	stp	x2, x21, [sp]
   24e44:	mov	x0, x19
   24e48:	mov	x7, x23
   24e4c:	str	xzr, [sp, #16]
   24e50:	mov	x6, x24
   24e54:	mov	x5, x25
   24e58:	mov	x4, x26
   24e5c:	mov	w3, w27
   24e60:	mov	x1, x20
   24e64:	mov	x2, x28
   24e68:	bl	1f478 <omp_get_place_proc_ids@@OMP_4.5+0x2b8>
   24e6c:	mov	w19, w0
   24e70:	ldxr	w0, [x22]
   24e74:	stlxr	w1, wzr, [x22]
   24e78:	cbnz	w1, 24e70 <omp_target_memcpy_rect@@OMP_4.5+0x248>
   24e7c:	tbz	w0, #31, 24df4 <omp_target_memcpy_rect@@OMP_4.5+0x1cc>
   24e80:	mov	x0, x22
   24e84:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   24e88:	ldp	x23, x24, [sp, #80]
   24e8c:	ldp	x25, x26, [sp, #96]
   24e90:	b	24d44 <omp_target_memcpy_rect@@OMP_4.5+0x11c>
   24e94:	mov	x0, x8
   24e98:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   24e9c:	ldp	x23, x24, [sp, #80]
   24ea0:	ldp	x25, x26, [sp, #96]
   24ea4:	b	24d44 <omp_target_memcpy_rect@@OMP_4.5+0x11c>
   24ea8:	mov	x0, x8
   24eac:	stp	x8, x2, [sp, #128]
   24eb0:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   24eb4:	ldp	x8, x2, [sp, #128]
   24eb8:	b	24dac <omp_target_memcpy_rect@@OMP_4.5+0x184>
   24ebc:	mov	x0, x22
   24ec0:	str	x2, [sp, #128]
   24ec4:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   24ec8:	ldr	x2, [sp, #128]
   24ecc:	b	24e40 <omp_target_memcpy_rect@@OMP_4.5+0x218>

0000000000024ed0 <omp_target_associate_ptr@@OMP_4.5>:
   24ed0:	stp	x29, x30, [sp, #-128]!
   24ed4:	mov	x29, sp
   24ed8:	stp	x19, x20, [sp, #16]
   24edc:	tbnz	w4, #31, 24fc4 <omp_target_associate_ptr@@OMP_4.5+0xf4>
   24ee0:	mov	x19, x0
   24ee4:	mov	x20, x2
   24ee8:	mov	w0, w4
   24eec:	stp	x21, x22, [sp, #32]
   24ef0:	mov	x22, x3
   24ef4:	stp	x23, x24, [sp, #48]
   24ef8:	mov	x23, x1
   24efc:	bl	22e50 <GOMP_offload_unregister@@GOMP_4.0.1+0xe8>
   24f00:	mov	x21, x0
   24f04:	cbz	x0, 24fbc <omp_target_associate_ptr@@OMP_4.5+0xec>
   24f08:	ldr	w0, [x0, #8]
   24f0c:	mov	w1, #0x5                   	// #5
   24f10:	and	w0, w0, w1
   24f14:	cmp	w0, #0x4
   24f18:	b.ne	24fbc <omp_target_associate_ptr@@OMP_4.5+0xec>  // b.any
   24f1c:	add	x24, x21, #0xa8
   24f20:	mov	w0, #0x1                   	// #1
   24f24:	ldaxr	w1, [x24]
   24f28:	cbnz	w1, 24f34 <omp_target_associate_ptr@@OMP_4.5+0x64>
   24f2c:	stxr	w2, w0, [x24]
   24f30:	cbnz	w2, 24f24 <omp_target_associate_ptr@@OMP_4.5+0x54>
   24f34:	cmp	w1, #0x0
   24f38:	b.ne	250ac <omp_target_associate_ptr@@OMP_4.5+0x1dc>  // b.any
   24f3c:	add	x2, x19, x20
   24f40:	stp	x19, x2, [sp, #64]
   24f44:	cmp	x19, x2
   24f48:	add	x22, x23, x22
   24f4c:	add	x20, x21, #0xa0
   24f50:	b.ne	24fd8 <omp_target_associate_ptr@@OMP_4.5+0x108>  // b.any
   24f54:	add	x23, sp, #0x40
   24f58:	add	x19, x19, #0x1
   24f5c:	mov	x1, x23
   24f60:	mov	x0, x20
   24f64:	str	x19, [sp, #72]
   24f68:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   24f6c:	ldr	x2, [sp, #72]
   24f70:	sub	x2, x2, #0x1
   24f74:	str	x2, [sp, #72]
   24f78:	cbz	x0, 25060 <omp_target_associate_ptr@@OMP_4.5+0x190>
   24f7c:	ldp	x1, x2, [x0, #16]
   24f80:	mov	w19, #0x16                  	// #22
   24f84:	ldr	x1, [x1, #16]
   24f88:	add	x1, x1, x2
   24f8c:	cmp	x1, x22
   24f90:	b.eq	2503c <omp_target_associate_ptr@@OMP_4.5+0x16c>  // b.none
   24f94:	ldxr	w0, [x24]
   24f98:	stlxr	w1, wzr, [x24]
   24f9c:	cbnz	w1, 24f94 <omp_target_associate_ptr@@OMP_4.5+0xc4>
   24fa0:	tbnz	w0, #31, 25098 <omp_target_associate_ptr@@OMP_4.5+0x1c8>
   24fa4:	mov	w0, w19
   24fa8:	ldp	x19, x20, [sp, #16]
   24fac:	ldp	x21, x22, [sp, #32]
   24fb0:	ldp	x23, x24, [sp, #48]
   24fb4:	ldp	x29, x30, [sp], #128
   24fb8:	ret
   24fbc:	ldp	x21, x22, [sp, #32]
   24fc0:	ldp	x23, x24, [sp, #48]
   24fc4:	mov	w19, #0x16                  	// #22
   24fc8:	mov	w0, w19
   24fcc:	ldp	x19, x20, [sp, #16]
   24fd0:	ldp	x29, x30, [sp], #128
   24fd4:	ret
   24fd8:	add	x1, sp, #0x40
   24fdc:	mov	x0, x20
   24fe0:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   24fe4:	cbnz	x0, 24f7c <omp_target_associate_ptr@@OMP_4.5+0xac>
   24fe8:	mov	x0, #0x40                  	// #64
   24fec:	bl	b2f8 <fprintf@plt+0x2838>
   24ff0:	mov	x23, x0
   24ff4:	mov	x0, #0x48                  	// #72
   24ff8:	bl	b2f8 <fprintf@plt+0x2838>
   24ffc:	mov	x1, x0
   25000:	movi	v0.4s, #0x0
   25004:	mov	x3, #0x1                   	// #1
   25008:	ldr	q1, [sp, #64]
   2500c:	mov	x2, #0xffffffffffffffff    	// #-1
   25010:	stp	x3, x1, [x23]
   25014:	mov	x0, x20
   25018:	mov	w19, #0x0                   	// #0
   2501c:	stp	x23, x22, [x1, #16]
   25020:	str	x2, [x1, #32]
   25024:	stp	xzr, x21, [x23, #48]
   25028:	str	q1, [x1]
   2502c:	stp	q0, q0, [x23, #16]
   25030:	stur	q0, [x1, #56]
   25034:	bl	25350 <omp_pause_resource_all@@OMP_5.0+0x78>
   25038:	b	24f94 <omp_target_associate_ptr@@OMP_4.5+0xc4>
   2503c:	ldr	x2, [x0]
   25040:	ldr	x1, [sp, #64]
   25044:	cmp	x2, x1
   25048:	b.hi	24f94 <omp_target_associate_ptr@@OMP_4.5+0xc4>  // b.pmore
   2504c:	ldr	x0, [x0, #8]
   25050:	ldr	x1, [sp, #72]
   25054:	cmp	x0, x1
   25058:	csel	w19, w19, wzr, cc  // cc = lo, ul, last
   2505c:	b	24f94 <omp_target_associate_ptr@@OMP_4.5+0xc4>
   25060:	ldr	x2, [sp, #64]
   25064:	mov	x1, x23
   25068:	mov	x0, x20
   2506c:	sub	x2, x2, #0x1
   25070:	str	x2, [sp, #64]
   25074:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   25078:	ldr	x1, [sp, #64]
   2507c:	add	x1, x1, #0x1
   25080:	str	x1, [sp, #64]
   25084:	cbnz	x0, 24f7c <omp_target_associate_ptr@@OMP_4.5+0xac>
   25088:	mov	x1, x23
   2508c:	mov	x0, x20
   25090:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   25094:	b	24fe4 <omp_target_associate_ptr@@OMP_4.5+0x114>
   25098:	mov	x0, x24
   2509c:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   250a0:	ldp	x21, x22, [sp, #32]
   250a4:	ldp	x23, x24, [sp, #48]
   250a8:	b	24fc8 <omp_target_associate_ptr@@OMP_4.5+0xf8>
   250ac:	mov	x0, x24
   250b0:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   250b4:	b	24f3c <omp_target_associate_ptr@@OMP_4.5+0x6c>

00000000000250b8 <omp_target_disassociate_ptr@@OMP_4.5>:
   250b8:	stp	x29, x30, [sp, #-112]!
   250bc:	mov	x29, sp
   250c0:	stp	x19, x20, [sp, #16]
   250c4:	tbnz	w1, #31, 25170 <omp_target_disassociate_ptr@@OMP_4.5+0xb8>
   250c8:	mov	x20, x0
   250cc:	mov	w0, w1
   250d0:	bl	22e50 <GOMP_offload_unregister@@GOMP_4.0.1+0xe8>
   250d4:	mov	x19, x0
   250d8:	cbz	x0, 25170 <omp_target_disassociate_ptr@@OMP_4.5+0xb8>
   250dc:	ldr	w0, [x0, #8]
   250e0:	tbz	w0, #2, 25170 <omp_target_disassociate_ptr@@OMP_4.5+0xb8>
   250e4:	stp	x21, x22, [sp, #32]
   250e8:	add	x21, x19, #0xa8
   250ec:	mov	w0, #0x1                   	// #1
   250f0:	ldaxr	w1, [x21]
   250f4:	cbnz	w1, 25100 <omp_target_disassociate_ptr@@OMP_4.5+0x48>
   250f8:	stxr	w2, w0, [x21]
   250fc:	cbnz	w2, 250f0 <omp_target_disassociate_ptr@@OMP_4.5+0x38>
   25100:	cmp	w1, #0x0
   25104:	b.ne	2523c <omp_target_disassociate_ptr@@OMP_4.5+0x184>  // b.any
   25108:	add	x2, x20, #0x1
   2510c:	add	x19, x19, #0xa0
   25110:	add	x22, sp, #0x38
   25114:	mov	x0, x19
   25118:	mov	x1, x22
   2511c:	stp	x20, x2, [sp, #56]
   25120:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   25124:	ldr	x2, [sp, #64]
   25128:	mov	x20, x0
   2512c:	sub	x2, x2, #0x1
   25130:	str	x2, [sp, #64]
   25134:	cbz	x0, 25184 <omp_target_disassociate_ptr@@OMP_4.5+0xcc>
   25138:	ldr	x0, [sp, #56]
   2513c:	ldr	x1, [x20]
   25140:	cmp	x1, x0
   25144:	b.eq	251c8 <omp_target_disassociate_ptr@@OMP_4.5+0x110>  // b.none
   25148:	mov	w19, #0x16                  	// #22
   2514c:	ldxr	w0, [x21]
   25150:	stlxr	w1, wzr, [x21]
   25154:	cbnz	w1, 2514c <omp_target_disassociate_ptr@@OMP_4.5+0x94>
   25158:	tbnz	w0, #31, 2522c <omp_target_disassociate_ptr@@OMP_4.5+0x174>
   2515c:	mov	w0, w19
   25160:	ldp	x19, x20, [sp, #16]
   25164:	ldp	x21, x22, [sp, #32]
   25168:	ldp	x29, x30, [sp], #112
   2516c:	ret
   25170:	mov	w19, #0x16                  	// #22
   25174:	mov	w0, w19
   25178:	ldp	x19, x20, [sp, #16]
   2517c:	ldp	x29, x30, [sp], #112
   25180:	ret
   25184:	ldr	x2, [sp, #56]
   25188:	mov	x1, x22
   2518c:	mov	x0, x19
   25190:	sub	x2, x2, #0x1
   25194:	str	x2, [sp, #56]
   25198:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   2519c:	mov	x20, x0
   251a0:	ldr	x1, [sp, #56]
   251a4:	add	x0, x1, #0x1
   251a8:	str	x0, [sp, #56]
   251ac:	cbnz	x20, 2513c <omp_target_disassociate_ptr@@OMP_4.5+0x84>
   251b0:	mov	x1, x22
   251b4:	mov	x0, x19
   251b8:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   251bc:	mov	x20, x0
   251c0:	cbz	x0, 25148 <omp_target_disassociate_ptr@@OMP_4.5+0x90>
   251c4:	b	25138 <omp_target_disassociate_ptr@@OMP_4.5+0x80>
   251c8:	ldr	x0, [x20, #32]
   251cc:	cmn	x0, #0x1
   251d0:	b.ne	25148 <omp_target_disassociate_ptr@@OMP_4.5+0x90>  // b.any
   251d4:	ldr	x0, [x20, #16]
   251d8:	ldr	x1, [x0, #16]
   251dc:	cbnz	x1, 25148 <omp_target_disassociate_ptr@@OMP_4.5+0x90>
   251e0:	ldr	x1, [x0, #32]
   251e4:	cbnz	x1, 25148 <omp_target_disassociate_ptr@@OMP_4.5+0x90>
   251e8:	ldr	x1, [x0]
   251ec:	cmp	x1, #0x1
   251f0:	b.ne	25148 <omp_target_disassociate_ptr@@OMP_4.5+0x90>  // b.any
   251f4:	ldr	x0, [x0, #48]
   251f8:	cbnz	x0, 25148 <omp_target_disassociate_ptr@@OMP_4.5+0x90>
   251fc:	mov	x0, x19
   25200:	mov	x1, x20
   25204:	bl	25580 <omp_pause_resource_all@@OMP_5.0+0x2a8>
   25208:	ldr	x20, [x20, #16]
   2520c:	ldr	x0, [x20, #24]
   25210:	cbnz	x0, 25248 <omp_target_disassociate_ptr@@OMP_4.5+0x190>
   25214:	ldr	x0, [x20, #8]
   25218:	mov	w19, #0x0                   	// #0
   2521c:	bl	88b0 <free@plt>
   25220:	mov	x0, x20
   25224:	bl	88b0 <free@plt>
   25228:	b	2514c <omp_target_disassociate_ptr@@OMP_4.5+0x94>
   2522c:	mov	x0, x21
   25230:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   25234:	ldp	x21, x22, [sp, #32]
   25238:	b	25174 <omp_target_disassociate_ptr@@OMP_4.5+0xbc>
   2523c:	mov	x0, x21
   25240:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   25244:	b	25108 <omp_target_disassociate_ptr@@OMP_4.5+0x50>
   25248:	ldr	x19, [x20, #56]
   2524c:	ldr	x22, [x20, #32]
   25250:	ldr	w0, [x19, #12]
   25254:	ldr	x2, [x19, #104]
   25258:	mov	x1, x22
   2525c:	blr	x2
   25260:	tst	w0, #0xff
   25264:	b.ne	25214 <omp_target_disassociate_ptr@@OMP_4.5+0x15c>  // b.any
   25268:	add	x0, x19, #0xa8
   2526c:	bl	1f740 <omp_get_place_proc_ids@@OMP_4.5+0x580>
   25270:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   25274:	mov	x1, x22
   25278:	add	x0, x0, #0xb28
   2527c:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>

0000000000025280 <omp_pause_resource@@OMP_5.0>:
   25280:	cmn	w1, #0x2
   25284:	b.eq	252cc <omp_pause_resource@@OMP_5.0+0x4c>  // b.none
   25288:	stp	x29, x30, [sp, #-32]!
   2528c:	mov	x29, sp
   25290:	stp	x19, x20, [sp, #16]
   25294:	mov	w19, w1
   25298:	tbnz	w1, #31, 252d0 <omp_pause_resource@@OMP_5.0+0x50>
   2529c:	adrp	x20, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   252a0:	add	x20, x20, #0x560
   252a4:	add	x0, x20, #0x14
   252a8:	adrp	x1, 1f000 <omp_pause_resource_all_@@OMP_5.0+0xd18>
   252ac:	add	x1, x1, #0x6e8
   252b0:	bl	8900 <pthread_once@plt>
   252b4:	ldr	w0, [x20, #4]
   252b8:	cmp	w19, w0
   252bc:	csetm	w0, ge  // ge = tcont
   252c0:	ldp	x19, x20, [sp, #16]
   252c4:	ldp	x29, x30, [sp], #32
   252c8:	ret
   252cc:	b	1b8e0 <omp_in_final@@OMP_3.1+0x15f0>
   252d0:	mov	w0, #0xffffffff            	// #-1
   252d4:	b	252c0 <omp_pause_resource@@OMP_5.0+0x40>

00000000000252d8 <omp_pause_resource_all@@OMP_5.0>:
   252d8:	stp	x29, x30, [sp, #-16]!
   252dc:	mov	x29, sp
   252e0:	bl	1b8e0 <omp_in_final@@OMP_3.1+0x15f0>
   252e4:	cmp	w0, #0x0
   252e8:	csetm	w0, ne  // ne = any
   252ec:	ldp	x29, x30, [sp], #16
   252f0:	ret
   252f4:	nop
   252f8:	cbz	x0, 2534c <omp_pause_resource_all@@OMP_5.0+0x74>
   252fc:	stp	x29, x30, [sp, #-48]!
   25300:	mov	x29, sp
   25304:	stp	x19, x20, [sp, #16]
   25308:	mov	x19, x0
   2530c:	mov	x20, x2
   25310:	str	x21, [sp, #32]
   25314:	mov	x21, x1
   25318:	mov	x0, x19
   2531c:	mov	x1, x20
   25320:	blr	x21
   25324:	ldr	x0, [x19, #56]
   25328:	mov	x2, x20
   2532c:	mov	x1, x21
   25330:	bl	252f8 <omp_pause_resource_all@@OMP_5.0+0x20>
   25334:	ldr	x19, [x19, #64]
   25338:	cbnz	x19, 25318 <omp_pause_resource_all@@OMP_5.0+0x40>
   2533c:	ldp	x19, x20, [sp, #16]
   25340:	ldr	x21, [sp, #32]
   25344:	ldp	x29, x30, [sp], #48
   25348:	ret
   2534c:	ret
   25350:	ldr	x2, [x0]
   25354:	cbz	x2, 25448 <omp_pause_resource_all@@OMP_5.0+0x170>
   25358:	ldp	x6, x3, [x1]
   2535c:	ldr	x7, [x2]
   25360:	cmp	x6, x3
   25364:	b.eq	25428 <omp_pause_resource_all@@OMP_5.0+0x150>  // b.none
   25368:	cmp	x3, x7
   2536c:	b.ls	2543c <omp_pause_resource_all@@OMP_5.0+0x164>  // b.plast
   25370:	ldr	x5, [x2, #8]
   25374:	cmp	x6, x5
   25378:	b.cs	253a8 <omp_pause_resource_all@@OMP_5.0+0xd0>  // b.hs, b.nlast
   2537c:	cmp	x5, x7
   25380:	b.eq	25454 <omp_pause_resource_all@@OMP_5.0+0x17c>  // b.none
   25384:	cmp	x6, x5
   25388:	b.cs	25400 <omp_pause_resource_all@@OMP_5.0+0x128>  // b.hs, b.nlast
   2538c:	cmp	x3, x7
   25390:	b.ls	25414 <omp_pause_resource_all@@OMP_5.0+0x13c>  // b.plast
   25394:	stp	x29, x30, [sp, #-16]!
   25398:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   2539c:	add	x0, x0, #0xed0
   253a0:	mov	x29, sp
   253a4:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   253a8:	ldr	x4, [x2, #64]
   253ac:	mov	w9, #0x1                   	// #1
   253b0:	cbz	x4, 2556c <omp_pause_resource_all@@OMP_5.0+0x294>
   253b4:	cmp	x6, x3
   253b8:	ldr	x8, [x4]
   253bc:	b.eq	2547c <omp_pause_resource_all@@OMP_5.0+0x1a4>  // b.none
   253c0:	cmp	x3, x8
   253c4:	b.ls	25490 <omp_pause_resource_all@@OMP_5.0+0x1b8>  // b.plast
   253c8:	ldr	x5, [x4, #8]
   253cc:	cmp	x6, x5
   253d0:	b.cs	254cc <omp_pause_resource_all@@OMP_5.0+0x1f4>  // b.hs, b.nlast
   253d4:	cmn	w9, #0x1
   253d8:	b.eq	25468 <omp_pause_resource_all@@OMP_5.0+0x190>  // b.none
   253dc:	ldr	x7, [x4, #56]
   253e0:	str	x2, [x4, #56]
   253e4:	str	x7, [x2, #64]
   253e8:	str	x4, [x0]
   253ec:	mov	x7, x8
   253f0:	mov	x2, x4
   253f4:	cmp	x5, x7
   253f8:	b.ne	25384 <omp_pause_resource_all@@OMP_5.0+0xac>  // b.any
   253fc:	b	25454 <omp_pause_resource_all@@OMP_5.0+0x17c>
   25400:	ldr	x3, [x2, #64]
   25404:	stp	x2, x3, [x1, #56]
   25408:	str	xzr, [x2, #64]
   2540c:	str	x1, [x0]
   25410:	ret
   25414:	ldr	x3, [x2, #56]
   25418:	stp	x3, x2, [x1, #56]
   2541c:	str	xzr, [x2, #56]
   25420:	str	x1, [x0]
   25424:	ret
   25428:	ldr	x4, [x2, #8]
   2542c:	cmp	x4, x7
   25430:	b.eq	25394 <omp_pause_resource_all@@OMP_5.0+0xbc>  // b.none
   25434:	cmp	x3, x7
   25438:	b.hi	25370 <omp_pause_resource_all@@OMP_5.0+0x98>  // b.pmore
   2543c:	mov	w9, #0xffffffff            	// #-1
   25440:	ldr	x4, [x2, #56]
   25444:	b	253b0 <omp_pause_resource_all@@OMP_5.0+0xd8>
   25448:	stp	xzr, xzr, [x1, #56]
   2544c:	str	x1, [x0]
   25450:	ret
   25454:	cmp	x6, x3
   25458:	b.eq	25394 <omp_pause_resource_all@@OMP_5.0+0xbc>  // b.none
   2545c:	cmp	x6, x5
   25460:	b.cc	2538c <omp_pause_resource_all@@OMP_5.0+0xb4>  // b.lo, b.ul, b.last
   25464:	b	25400 <omp_pause_resource_all@@OMP_5.0+0x128>
   25468:	ldr	x7, [x4, #64]
   2546c:	str	x2, [x4, #64]
   25470:	str	x7, [x2, #56]
   25474:	str	x4, [x0]
   25478:	b	253ec <omp_pause_resource_all@@OMP_5.0+0x114>
   2547c:	ldr	x5, [x4, #8]
   25480:	cmp	x8, x5
   25484:	b.eq	253d4 <omp_pause_resource_all@@OMP_5.0+0xfc>  // b.none
   25488:	cmp	x3, x8
   2548c:	b.hi	253c8 <omp_pause_resource_all@@OMP_5.0+0xf0>  // b.pmore
   25490:	ldr	x5, [x4, #56]
   25494:	cbz	x5, 25574 <omp_pause_resource_all@@OMP_5.0+0x29c>
   25498:	cmn	w9, #0x1
   2549c:	b.ne	25508 <omp_pause_resource_all@@OMP_5.0+0x230>  // b.any
   254a0:	ldr	x7, [x5, #64]
   254a4:	str	x4, [x5, #64]
   254a8:	str	x7, [x4, #56]
   254ac:	ldr	x7, [x5]
   254b0:	str	x5, [x2, #56]
   254b4:	ldr	x4, [x5, #64]
   254b8:	str	x2, [x5, #64]
   254bc:	str	x4, [x2, #56]
   254c0:	mov	x2, x5
   254c4:	str	x5, [x0]
   254c8:	b	25360 <omp_pause_resource_all@@OMP_5.0+0x88>
   254cc:	ldr	x10, [x4, #64]
   254d0:	cbz	x10, 253d4 <omp_pause_resource_all@@OMP_5.0+0xfc>
   254d4:	cmp	w9, #0x1
   254d8:	b.ne	2553c <omp_pause_resource_all@@OMP_5.0+0x264>  // b.any
   254dc:	ldr	x5, [x10, #56]
   254e0:	str	x4, [x10, #56]
   254e4:	ldr	x7, [x10]
   254e8:	str	x5, [x4, #64]
   254ec:	str	x10, [x2, #64]
   254f0:	ldr	x4, [x10, #56]
   254f4:	str	x2, [x10, #56]
   254f8:	str	x4, [x2, #64]
   254fc:	mov	x2, x10
   25500:	str	x10, [x0]
   25504:	b	25360 <omp_pause_resource_all@@OMP_5.0+0x88>
   25508:	cmp	w9, #0x0
   2550c:	b.le	25360 <omp_pause_resource_all@@OMP_5.0+0x88>
   25510:	ldr	x7, [x5, #64]
   25514:	str	x4, [x5, #64]
   25518:	str	x7, [x4, #56]
   2551c:	ldr	x7, [x5]
   25520:	str	x5, [x2, #64]
   25524:	ldr	x4, [x5, #56]
   25528:	str	x2, [x5, #56]
   2552c:	str	x4, [x2, #64]
   25530:	mov	x2, x5
   25534:	str	x5, [x0]
   25538:	b	25360 <omp_pause_resource_all@@OMP_5.0+0x88>
   2553c:	tbz	w9, #31, 25360 <omp_pause_resource_all@@OMP_5.0+0x88>
   25540:	ldr	x5, [x10, #56]
   25544:	str	x4, [x10, #56]
   25548:	ldr	x7, [x10]
   2554c:	str	x5, [x4, #64]
   25550:	str	x10, [x2, #56]
   25554:	ldr	x4, [x10, #64]
   25558:	str	x2, [x10, #64]
   2555c:	str	x4, [x2, #56]
   25560:	mov	x2, x10
   25564:	str	x10, [x0]
   25568:	b	25360 <omp_pause_resource_all@@OMP_5.0+0x88>
   2556c:	ldr	x5, [x2, #8]
   25570:	b	2537c <omp_pause_resource_all@@OMP_5.0+0xa4>
   25574:	ldr	x5, [x4, #8]
   25578:	b	253d4 <omp_pause_resource_all@@OMP_5.0+0xfc>
   2557c:	nop
   25580:	ldr	x2, [x0]
   25584:	cbz	x2, 255e8 <omp_pause_resource_all@@OMP_5.0+0x310>
   25588:	ldp	x3, x1, [x1]
   2558c:	ldr	x6, [x2]
   25590:	cmp	x3, x1
   25594:	b.eq	25644 <omp_pause_resource_all@@OMP_5.0+0x36c>  // b.none
   25598:	cmp	x1, x6
   2559c:	b.ls	25658 <omp_pause_resource_all@@OMP_5.0+0x380>  // b.plast
   255a0:	ldr	x5, [x2, #8]
   255a4:	cmp	x3, x5
   255a8:	b.cs	255ec <omp_pause_resource_all@@OMP_5.0+0x314>  // b.hs, b.nlast
   255ac:	cmp	x5, x6
   255b0:	b.eq	25664 <omp_pause_resource_all@@OMP_5.0+0x38c>  // b.none
   255b4:	cmp	x3, x5
   255b8:	b.cs	255e8 <omp_pause_resource_all@@OMP_5.0+0x310>  // b.hs, b.nlast
   255bc:	cmp	x1, x6
   255c0:	b.ls	255e8 <omp_pause_resource_all@@OMP_5.0+0x310>  // b.plast
   255c4:	ldp	x1, x2, [x2, #56]
   255c8:	cbz	x1, 25718 <omp_pause_resource_all@@OMP_5.0+0x440>
   255cc:	str	x1, [x0]
   255d0:	cbz	x2, 255e8 <omp_pause_resource_all@@OMP_5.0+0x310>
   255d4:	nop
   255d8:	mov	x0, x1
   255dc:	ldr	x1, [x1, #64]
   255e0:	cbnz	x1, 255d8 <omp_pause_resource_all@@OMP_5.0+0x300>
   255e4:	str	x2, [x0, #64]
   255e8:	ret
   255ec:	ldr	x4, [x2, #64]
   255f0:	mov	w8, #0x1                   	// #1
   255f4:	cbz	x4, 25784 <omp_pause_resource_all@@OMP_5.0+0x4ac>
   255f8:	cmp	x3, x1
   255fc:	ldr	x7, [x4]
   25600:	b.eq	2568c <omp_pause_resource_all@@OMP_5.0+0x3b4>  // b.none
   25604:	cmp	x1, x7
   25608:	b.ls	256a0 <omp_pause_resource_all@@OMP_5.0+0x3c8>  // b.plast
   2560c:	ldr	x5, [x4, #8]
   25610:	cmp	x3, x5
   25614:	b.cs	256dc <omp_pause_resource_all@@OMP_5.0+0x404>  // b.hs, b.nlast
   25618:	cmn	w8, #0x1
   2561c:	b.eq	25678 <omp_pause_resource_all@@OMP_5.0+0x3a0>  // b.none
   25620:	ldr	x6, [x4, #56]
   25624:	str	x2, [x4, #56]
   25628:	str	x6, [x2, #64]
   2562c:	str	x4, [x0]
   25630:	mov	x6, x7
   25634:	mov	x2, x4
   25638:	cmp	x5, x6
   2563c:	b.ne	255b4 <omp_pause_resource_all@@OMP_5.0+0x2dc>  // b.any
   25640:	b	25664 <omp_pause_resource_all@@OMP_5.0+0x38c>
   25644:	ldr	x4, [x2, #8]
   25648:	cmp	x4, x6
   2564c:	b.eq	255c4 <omp_pause_resource_all@@OMP_5.0+0x2ec>  // b.none
   25650:	cmp	x1, x6
   25654:	b.hi	255a0 <omp_pause_resource_all@@OMP_5.0+0x2c8>  // b.pmore
   25658:	mov	w8, #0xffffffff            	// #-1
   2565c:	ldr	x4, [x2, #56]
   25660:	b	255f4 <omp_pause_resource_all@@OMP_5.0+0x31c>
   25664:	cmp	x3, x1
   25668:	b.eq	255c4 <omp_pause_resource_all@@OMP_5.0+0x2ec>  // b.none
   2566c:	cmp	x3, x5
   25670:	b.cc	255bc <omp_pause_resource_all@@OMP_5.0+0x2e4>  // b.lo, b.ul, b.last
   25674:	b	255e8 <omp_pause_resource_all@@OMP_5.0+0x310>
   25678:	ldr	x6, [x4, #64]
   2567c:	str	x2, [x4, #64]
   25680:	str	x6, [x2, #56]
   25684:	str	x4, [x0]
   25688:	b	25630 <omp_pause_resource_all@@OMP_5.0+0x358>
   2568c:	ldr	x5, [x4, #8]
   25690:	cmp	x7, x5
   25694:	b.eq	25618 <omp_pause_resource_all@@OMP_5.0+0x340>  // b.none
   25698:	cmp	x1, x7
   2569c:	b.hi	2560c <omp_pause_resource_all@@OMP_5.0+0x334>  // b.pmore
   256a0:	ldr	x5, [x4, #56]
   256a4:	cbz	x5, 2578c <omp_pause_resource_all@@OMP_5.0+0x4b4>
   256a8:	cmn	w8, #0x1
   256ac:	b.ne	25720 <omp_pause_resource_all@@OMP_5.0+0x448>  // b.any
   256b0:	ldr	x6, [x5, #64]
   256b4:	str	x4, [x5, #64]
   256b8:	str	x6, [x4, #56]
   256bc:	ldr	x6, [x5]
   256c0:	str	x5, [x2, #56]
   256c4:	ldr	x4, [x5, #64]
   256c8:	str	x2, [x5, #64]
   256cc:	str	x4, [x2, #56]
   256d0:	mov	x2, x5
   256d4:	str	x5, [x0]
   256d8:	b	25590 <omp_pause_resource_all@@OMP_5.0+0x2b8>
   256dc:	ldr	x9, [x4, #64]
   256e0:	cbz	x9, 25618 <omp_pause_resource_all@@OMP_5.0+0x340>
   256e4:	cmp	w8, #0x1
   256e8:	b.ne	25754 <omp_pause_resource_all@@OMP_5.0+0x47c>  // b.any
   256ec:	ldr	x5, [x9, #56]
   256f0:	str	x4, [x9, #56]
   256f4:	ldr	x6, [x9]
   256f8:	str	x5, [x4, #64]
   256fc:	str	x9, [x2, #64]
   25700:	ldr	x4, [x9, #56]
   25704:	str	x2, [x9, #56]
   25708:	str	x4, [x2, #64]
   2570c:	mov	x2, x9
   25710:	str	x9, [x0]
   25714:	b	25590 <omp_pause_resource_all@@OMP_5.0+0x2b8>
   25718:	str	x2, [x0]
   2571c:	ret
   25720:	cmp	w8, #0x0
   25724:	b.le	25590 <omp_pause_resource_all@@OMP_5.0+0x2b8>
   25728:	ldr	x6, [x5, #64]
   2572c:	str	x4, [x5, #64]
   25730:	str	x6, [x4, #56]
   25734:	ldr	x6, [x5]
   25738:	str	x5, [x2, #64]
   2573c:	ldr	x4, [x5, #56]
   25740:	str	x2, [x5, #56]
   25744:	str	x4, [x2, #64]
   25748:	mov	x2, x5
   2574c:	str	x5, [x0]
   25750:	b	25590 <omp_pause_resource_all@@OMP_5.0+0x2b8>
   25754:	tbz	w8, #31, 25590 <omp_pause_resource_all@@OMP_5.0+0x2b8>
   25758:	ldr	x5, [x9, #56]
   2575c:	str	x4, [x9, #56]
   25760:	ldr	x6, [x9]
   25764:	str	x5, [x4, #64]
   25768:	str	x9, [x2, #56]
   2576c:	ldr	x4, [x9, #64]
   25770:	str	x2, [x9, #64]
   25774:	str	x4, [x2, #56]
   25778:	mov	x2, x9
   2577c:	str	x9, [x0]
   25780:	b	25590 <omp_pause_resource_all@@OMP_5.0+0x2b8>
   25784:	ldr	x5, [x2, #8]
   25788:	b	255ac <omp_pause_resource_all@@OMP_5.0+0x2d4>
   2578c:	ldr	x5, [x4, #8]
   25790:	b	25618 <omp_pause_resource_all@@OMP_5.0+0x340>
   25794:	nop
   25798:	ldr	x2, [x0]
   2579c:	cbz	x2, 257e4 <omp_pause_resource_all@@OMP_5.0+0x50c>
   257a0:	ldp	x4, x3, [x1]
   257a4:	ldr	x6, [x2]
   257a8:	cmp	x4, x3
   257ac:	b.eq	25858 <omp_pause_resource_all@@OMP_5.0+0x580>  // b.none
   257b0:	cmp	x3, x6
   257b4:	b.ls	2586c <omp_pause_resource_all@@OMP_5.0+0x594>  // b.plast
   257b8:	ldr	x1, [x2, #8]
   257bc:	cmp	x4, x1
   257c0:	b.cs	257ec <omp_pause_resource_all@@OMP_5.0+0x514>  // b.hs, b.nlast
   257c4:	cmp	x1, x6
   257c8:	b.eq	25848 <omp_pause_resource_all@@OMP_5.0+0x570>  // b.none
   257cc:	cmp	x4, x1
   257d0:	b.cs	257e4 <omp_pause_resource_all@@OMP_5.0+0x50c>  // b.hs, b.nlast
   257d4:	cmp	x3, x6
   257d8:	b.ls	257e4 <omp_pause_resource_all@@OMP_5.0+0x50c>  // b.plast
   257dc:	mov	x0, x2
   257e0:	ret
   257e4:	mov	x0, #0x0                   	// #0
   257e8:	ret
   257ec:	ldr	x5, [x2, #64]
   257f0:	mov	w9, #0x1                   	// #1
   257f4:	mov	w8, w9
   257f8:	mov	w10, #0x0                   	// #0
   257fc:	cbz	x5, 25980 <omp_pause_resource_all@@OMP_5.0+0x6a8>
   25800:	cmp	x4, x3
   25804:	ldr	x7, [x5]
   25808:	b.eq	25894 <omp_pause_resource_all@@OMP_5.0+0x5bc>  // b.none
   2580c:	cmp	x3, x7
   25810:	b.ls	258a8 <omp_pause_resource_all@@OMP_5.0+0x5d0>  // b.plast
   25814:	ldr	x1, [x5, #8]
   25818:	cmp	x4, x1
   2581c:	b.cs	258e4 <omp_pause_resource_all@@OMP_5.0+0x60c>  // b.hs, b.nlast
   25820:	cmn	w8, #0x1
   25824:	b.eq	25880 <omp_pause_resource_all@@OMP_5.0+0x5a8>  // b.none
   25828:	ldr	x6, [x5, #56]
   2582c:	str	x2, [x5, #56]
   25830:	str	x6, [x2, #64]
   25834:	str	x5, [x0]
   25838:	mov	x6, x7
   2583c:	mov	x2, x5
   25840:	cmp	x1, x6
   25844:	b.ne	257cc <omp_pause_resource_all@@OMP_5.0+0x4f4>  // b.any
   25848:	cmp	x4, x3
   2584c:	b.ne	257cc <omp_pause_resource_all@@OMP_5.0+0x4f4>  // b.any
   25850:	mov	x0, x2
   25854:	b	257e0 <omp_pause_resource_all@@OMP_5.0+0x508>
   25858:	ldr	x1, [x2, #8]
   2585c:	cmp	x1, x6
   25860:	b.eq	257dc <omp_pause_resource_all@@OMP_5.0+0x504>  // b.none
   25864:	cmp	x3, x6
   25868:	b.hi	257b8 <omp_pause_resource_all@@OMP_5.0+0x4e0>  // b.pmore
   2586c:	mov	w10, #0x1                   	// #1
   25870:	mov	w9, #0x0                   	// #0
   25874:	mov	w8, #0xffffffff            	// #-1
   25878:	ldr	x5, [x2, #56]
   2587c:	b	257fc <omp_pause_resource_all@@OMP_5.0+0x524>
   25880:	ldr	x6, [x5, #64]
   25884:	str	x2, [x5, #64]
   25888:	str	x6, [x2, #56]
   2588c:	str	x5, [x0]
   25890:	b	25838 <omp_pause_resource_all@@OMP_5.0+0x560>
   25894:	ldr	x1, [x5, #8]
   25898:	cmp	x7, x1
   2589c:	b.eq	25820 <omp_pause_resource_all@@OMP_5.0+0x548>  // b.none
   258a0:	cmp	x3, x7
   258a4:	b.hi	25814 <omp_pause_resource_all@@OMP_5.0+0x53c>  // b.pmore
   258a8:	ldr	x1, [x5, #56]
   258ac:	cbz	x1, 25988 <omp_pause_resource_all@@OMP_5.0+0x6b0>
   258b0:	cmn	w8, #0x1
   258b4:	b.ne	25920 <omp_pause_resource_all@@OMP_5.0+0x648>  // b.any
   258b8:	ldr	x6, [x1, #64]
   258bc:	str	x5, [x1, #64]
   258c0:	str	x6, [x5, #56]
   258c4:	ldr	x6, [x1]
   258c8:	str	x1, [x2, #56]
   258cc:	ldr	x5, [x1, #64]
   258d0:	str	x2, [x1, #64]
   258d4:	str	x5, [x2, #56]
   258d8:	mov	x2, x1
   258dc:	str	x1, [x0]
   258e0:	b	257a8 <omp_pause_resource_all@@OMP_5.0+0x4d0>
   258e4:	ldr	x9, [x5, #64]
   258e8:	cbz	x9, 25820 <omp_pause_resource_all@@OMP_5.0+0x548>
   258ec:	cmp	w8, #0x1
   258f0:	b.ne	25950 <omp_pause_resource_all@@OMP_5.0+0x678>  // b.any
   258f4:	ldr	x1, [x9, #56]
   258f8:	str	x5, [x9, #56]
   258fc:	ldr	x6, [x9]
   25900:	str	x1, [x5, #64]
   25904:	str	x9, [x2, #64]
   25908:	ldr	x1, [x9, #56]
   2590c:	str	x2, [x9, #56]
   25910:	str	x1, [x2, #64]
   25914:	mov	x2, x9
   25918:	str	x9, [x0]
   2591c:	b	257a8 <omp_pause_resource_all@@OMP_5.0+0x4d0>
   25920:	cbz	w9, 257a8 <omp_pause_resource_all@@OMP_5.0+0x4d0>
   25924:	ldr	x6, [x1, #64]
   25928:	str	x5, [x1, #64]
   2592c:	str	x6, [x5, #56]
   25930:	ldr	x6, [x1]
   25934:	str	x1, [x2, #64]
   25938:	ldr	x5, [x1, #56]
   2593c:	str	x2, [x1, #56]
   25940:	str	x5, [x2, #64]
   25944:	mov	x2, x1
   25948:	str	x1, [x0]
   2594c:	b	257a8 <omp_pause_resource_all@@OMP_5.0+0x4d0>
   25950:	cbz	w10, 257a8 <omp_pause_resource_all@@OMP_5.0+0x4d0>
   25954:	ldr	x1, [x9, #56]
   25958:	str	x5, [x9, #56]
   2595c:	ldr	x6, [x9]
   25960:	str	x1, [x5, #64]
   25964:	str	x9, [x2, #56]
   25968:	ldr	x1, [x9, #64]
   2596c:	str	x2, [x9, #64]
   25970:	str	x1, [x2, #56]
   25974:	mov	x2, x9
   25978:	str	x9, [x0]
   2597c:	b	257a8 <omp_pause_resource_all@@OMP_5.0+0x4d0>
   25980:	ldr	x1, [x2, #8]
   25984:	b	257c4 <omp_pause_resource_all@@OMP_5.0+0x4ec>
   25988:	ldr	x1, [x5, #8]
   2598c:	b	25820 <omp_pause_resource_all@@OMP_5.0+0x548>
   25990:	stp	x29, x30, [sp, #-48]!
   25994:	mov	x29, sp
   25998:	stp	x19, x20, [sp, #16]
   2599c:	ldr	x19, [x0]
   259a0:	cbz	x19, 259d8 <omp_pause_resource_all@@OMP_5.0+0x700>
   259a4:	mov	x20, x2
   259a8:	str	x21, [sp, #32]
   259ac:	mov	x21, x1
   259b0:	mov	x0, x19
   259b4:	mov	x1, x20
   259b8:	blr	x21
   259bc:	ldr	x0, [x19, #56]
   259c0:	mov	x2, x20
   259c4:	mov	x1, x21
   259c8:	bl	252f8 <omp_pause_resource_all@@OMP_5.0+0x20>
   259cc:	ldr	x19, [x19, #64]
   259d0:	cbnz	x19, 259b0 <omp_pause_resource_all@@OMP_5.0+0x6d8>
   259d4:	ldr	x21, [sp, #32]
   259d8:	ldp	x19, x20, [sp, #16]
   259dc:	ldp	x29, x30, [sp], #48
   259e0:	ret
   259e4:	nop

00000000000259e8 <GOMP_PLUGIN_malloc@@GOMP_PLUGIN_1.0>:
   259e8:	b	b2f8 <fprintf@plt+0x2838>
   259ec:	nop

00000000000259f0 <GOMP_PLUGIN_malloc_cleared@@GOMP_PLUGIN_1.0>:
   259f0:	b	b330 <fprintf@plt+0x2870>
   259f4:	nop

00000000000259f8 <GOMP_PLUGIN_realloc@@GOMP_PLUGIN_1.0>:
   259f8:	b	b370 <fprintf@plt+0x28b0>
   259fc:	nop

0000000000025a00 <GOMP_PLUGIN_debug@@GOMP_PLUGIN_1.0>:
   25a00:	stp	x29, x30, [sp, #-256]!
   25a04:	adrp	x8, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   25a08:	mov	w10, #0xffffffd0            	// #-48
   25a0c:	mov	x29, sp
   25a10:	ldr	w8, [x8, #1552]
   25a14:	add	x11, sp, #0xd0
   25a18:	mov	w9, #0xffffff80            	// #-128
   25a1c:	str	x11, [sp, #64]
   25a20:	stp	w10, w9, [sp, #72]
   25a24:	str	q0, [sp, #80]
   25a28:	str	q1, [sp, #96]
   25a2c:	str	q2, [sp, #112]
   25a30:	str	q3, [sp, #128]
   25a34:	str	q4, [sp, #144]
   25a38:	str	q5, [sp, #160]
   25a3c:	str	q6, [sp, #176]
   25a40:	str	q7, [sp, #192]
   25a44:	stp	x2, x3, [sp, #208]
   25a48:	add	x2, sp, #0x100
   25a4c:	stp	x2, x2, [sp, #48]
   25a50:	stp	x4, x5, [sp, #224]
   25a54:	stp	x6, x7, [sp, #240]
   25a58:	cbnz	w8, 25a64 <GOMP_PLUGIN_debug@@GOMP_PLUGIN_1.0+0x64>
   25a5c:	ldp	x29, x30, [sp], #256
   25a60:	ret
   25a64:	ldp	x6, x7, [sp, #48]
   25a68:	add	x2, sp, #0x10
   25a6c:	ldp	x4, x5, [sp, #64]
   25a70:	stp	x6, x7, [sp, #16]
   25a74:	stp	x4, x5, [sp, #32]
   25a78:	bl	b520 <GOMP_critical_name_end@@GOMP_1.0+0x20>
   25a7c:	ldp	x29, x30, [sp], #256
   25a80:	ret
   25a84:	nop

0000000000025a88 <GOMP_PLUGIN_error@@GOMP_PLUGIN_1.0>:
   25a88:	stp	x29, x30, [sp, #-272]!
   25a8c:	mov	w9, #0xffffffc8            	// #-56
   25a90:	mov	w8, #0xffffff80            	// #-128
   25a94:	mov	x29, sp
   25a98:	add	x10, sp, #0xd0
   25a9c:	add	x11, sp, #0x110
   25aa0:	stp	x11, x11, [sp, #48]
   25aa4:	str	x10, [sp, #64]
   25aa8:	stp	w9, w8, [sp, #72]
   25aac:	ldp	x10, x11, [sp, #48]
   25ab0:	stp	x10, x11, [sp, #16]
   25ab4:	ldp	x8, x9, [sp, #64]
   25ab8:	stp	x8, x9, [sp, #32]
   25abc:	str	q0, [sp, #80]
   25ac0:	str	q1, [sp, #96]
   25ac4:	str	q2, [sp, #112]
   25ac8:	str	q3, [sp, #128]
   25acc:	str	q4, [sp, #144]
   25ad0:	str	q5, [sp, #160]
   25ad4:	str	q6, [sp, #176]
   25ad8:	str	q7, [sp, #192]
   25adc:	stp	x1, x2, [sp, #216]
   25ae0:	add	x1, sp, #0x10
   25ae4:	stp	x3, x4, [sp, #232]
   25ae8:	stp	x5, x6, [sp, #248]
   25aec:	str	x7, [sp, #264]
   25af0:	bl	b600 <GOMP_critical_name_end@@GOMP_1.0+0x100>
   25af4:	ldp	x29, x30, [sp], #272
   25af8:	ret
   25afc:	nop

0000000000025b00 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0>:
   25b00:	stp	x29, x30, [sp, #-272]!
   25b04:	mov	w9, #0xffffffc8            	// #-56
   25b08:	mov	w8, #0xffffff80            	// #-128
   25b0c:	mov	x29, sp
   25b10:	add	x10, sp, #0xd0
   25b14:	add	x11, sp, #0x110
   25b18:	stp	x11, x11, [sp, #48]
   25b1c:	str	x10, [sp, #64]
   25b20:	stp	w9, w8, [sp, #72]
   25b24:	ldp	x10, x11, [sp, #48]
   25b28:	stp	x10, x11, [sp, #16]
   25b2c:	ldp	x8, x9, [sp, #64]
   25b30:	stp	x8, x9, [sp, #32]
   25b34:	str	q0, [sp, #80]
   25b38:	str	q1, [sp, #96]
   25b3c:	str	q2, [sp, #112]
   25b40:	str	q3, [sp, #128]
   25b44:	str	q4, [sp, #144]
   25b48:	str	q5, [sp, #160]
   25b4c:	str	q6, [sp, #176]
   25b50:	str	q7, [sp, #192]
   25b54:	stp	x1, x2, [sp, #216]
   25b58:	add	x1, sp, #0x10
   25b5c:	stp	x3, x4, [sp, #232]
   25b60:	stp	x5, x6, [sp, #248]
   25b64:	str	x7, [sp, #264]
   25b68:	bl	b738 <GOMP_critical_name_end@@GOMP_1.0+0x238>
   25b6c:	nop

0000000000025b70 <GOACC_parallel_keyed@@GOACC_2.0.1>:
   25b70:	stp	x29, x30, [sp, #-224]!
   25b74:	adrp	x8, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   25b78:	mov	x29, sp
   25b7c:	stp	x19, x20, [sp, #16]
   25b80:	mvn	w19, w0
   25b84:	stp	x6, x7, [x29, #208]
   25b88:	ldr	w6, [x8, #1552]
   25b8c:	stp	x21, x22, [sp, #32]
   25b90:	mov	x21, x2
   25b94:	mov	x22, x5
   25b98:	stp	x23, x24, [sp, #48]
   25b9c:	mov	x24, x3
   25ba0:	mov	x23, x4
   25ba4:	stp	x25, x26, [sp, #64]
   25ba8:	stp	x27, x28, [sp, #80]
   25bac:	mov	x27, x1
   25bb0:	cbnz	w6, 261e8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x678>
   25bb4:	bl	28018 <acc_on_device@@OACC_2.0+0xd8>
   25bb8:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   25bbc:	ldr	x0, [x0, #4048]
   25bc0:	mrs	x1, tpidr_el0
   25bc4:	ldr	x0, [x1, x0]
   25bc8:	ldr	x26, [x0, #8]
   25bcc:	cbz	x21, 25cbc <GOACC_parallel_keyed@@GOACC_2.0.1+0x14c>
   25bd0:	sub	w4, w21, #0x1
   25bd4:	cmp	w4, #0x0
   25bd8:	b.le	260ac <GOACC_parallel_keyed@@GOACC_2.0.1+0x53c>
   25bdc:	cmp	w4, w21
   25be0:	mov	x0, #0x1                   	// #1
   25be4:	csel	w4, w4, w21, lt  // lt = tstop
   25be8:	mov	x1, #0x0                   	// #0
   25bec:	mov	x6, #0x8                   	// #8
   25bf0:	b	25c08 <GOACC_parallel_keyed@@GOACC_2.0.1+0x98>
   25bf4:	add	x1, x1, #0x1
   25bf8:	sxtw	x2, w0
   25bfc:	cmp	w4, w1
   25c00:	add	x0, x0, #0x1
   25c04:	b.le	25c68 <GOACC_parallel_keyed@@GOACC_2.0.1+0xf8>
   25c08:	ldrh	w2, [x22, x1, lsl #1]
   25c0c:	and	w3, w2, #0xff
   25c10:	cmp	w3, #0x8
   25c14:	b.ne	25bf4 <GOACC_parallel_keyed@@GOACC_2.0.1+0x84>  // b.any
   25c18:	ldr	x5, [x23, x1, lsl #3]
   25c1c:	ldrh	w3, [x22, x0, lsl #1]
   25c20:	cmp	x5, #0x8
   25c24:	and	w3, w3, #0xff
   25c28:	b.eq	25bf4 <GOACC_parallel_keyed@@GOACC_2.0.1+0x84>  // b.none
   25c2c:	cmp	w3, #0x4
   25c30:	b.ne	25c50 <GOACC_parallel_keyed@@GOACC_2.0.1+0xe0>  // b.any
   25c34:	ldr	x3, [x23, x0, lsl #3]
   25c38:	cbnz	x3, 25c50 <GOACC_parallel_keyed@@GOACC_2.0.1+0xe0>
   25c3c:	ldr	x3, [x24, x0, lsl #3]
   25c40:	ldr	x5, [x24, x1, lsl #3]
   25c44:	ldr	x3, [x3]
   25c48:	cmp	x5, x3
   25c4c:	b.eq	26198 <GOACC_parallel_keyed@@GOACC_2.0.1+0x628>  // b.none
   25c50:	str	xzr, [x24, x1, lsl #3]
   25c54:	add	x1, x1, #0x1
   25c58:	sxtw	x2, w0
   25c5c:	cmp	w4, w1
   25c60:	add	x0, x0, #0x1
   25c64:	b.gt	25c08 <GOACC_parallel_keyed@@GOACC_2.0.1+0x98>
   25c68:	cmp	x21, x1
   25c6c:	b.ls	25cbc <GOACC_parallel_keyed@@GOACC_2.0.1+0x14c>  // b.plast
   25c70:	add	x2, x2, #0x1
   25c74:	b	25c8c <GOACC_parallel_keyed@@GOACC_2.0.1+0x11c>
   25c78:	cmp	x21, x2
   25c7c:	add	x0, x2, #0x1
   25c80:	mov	x1, x2
   25c84:	b.ls	25cbc <GOACC_parallel_keyed@@GOACC_2.0.1+0x14c>  // b.plast
   25c88:	mov	x2, x0
   25c8c:	ldrh	w0, [x22, x1, lsl #1]
   25c90:	and	w0, w0, #0xff
   25c94:	cmp	w0, #0x8
   25c98:	b.ne	25c78 <GOACC_parallel_keyed@@GOACC_2.0.1+0x108>  // b.any
   25c9c:	ldr	x0, [x23, x1, lsl #3]
   25ca0:	cmp	x0, #0x8
   25ca4:	b.eq	25c78 <GOACC_parallel_keyed@@GOACC_2.0.1+0x108>  // b.none
   25ca8:	str	xzr, [x24, x1, lsl #3]
   25cac:	cmp	x21, x2
   25cb0:	add	x0, x2, #0x1
   25cb4:	mov	x1, x2
   25cb8:	b.hi	25c88 <GOACC_parallel_keyed@@GOACC_2.0.1+0x118>  // b.pmore
   25cbc:	tbnz	w19, #0, 26164 <GOACC_parallel_keyed@@GOACC_2.0.1+0x5f4>
   25cc0:	ldr	w0, [x26, #16]
   25cc4:	cmp	w0, #0x2
   25cc8:	b.eq	261a8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x638>  // b.none
   25ccc:	mov	w2, #0xfffffff0            	// #-16
   25cd0:	mov	w1, w2
   25cd4:	add	x3, x29, #0xd0
   25cd8:	add	x0, x29, #0xe0
   25cdc:	mov	w20, #0xfffffffe            	// #-2
   25ce0:	mov	w25, #0xffff                	// #65535
   25ce4:	str	xzr, [x29, #104]
   25ce8:	str	wzr, [x29, #112]
   25cec:	stp	x0, x0, [x29, #120]
   25cf0:	str	x3, [x29, #136]
   25cf4:	stp	w2, wzr, [x29, #144]
   25cf8:	tbnz	w1, #31, 25dd8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x268>
   25cfc:	ldr	w19, [x0]
   25d00:	add	x1, x0, #0xb
   25d04:	and	x1, x1, #0xfffffffffffffff8
   25d08:	str	x1, [x29, #120]
   25d0c:	cbz	w19, 25df8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x288>
   25d10:	ubfx	x1, x19, #16, #12
   25d14:	cbnz	w1, 26220 <GOACC_parallel_keyed@@GOACC_2.0.1+0x6b0>
   25d18:	lsr	w1, w19, #28
   25d1c:	cmp	w1, #0x2
   25d20:	b.eq	25f7c <GOACC_parallel_keyed@@GOACC_2.0.1+0x40c>  // b.none
   25d24:	cmp	w1, #0x3
   25d28:	b.ne	25f5c <GOACC_parallel_keyed@@GOACC_2.0.1+0x3ec>  // b.any
   25d2c:	ldr	w1, [x29, #144]
   25d30:	ands	w19, w19, #0xffff
   25d34:	ldr	x0, [x29, #120]
   25d38:	b.eq	25cf8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x188>  // b.none
   25d3c:	tbnz	w1, #31, 25d94 <GOACC_parallel_keyed@@GOACC_2.0.1+0x224>
   25d40:	add	x1, x0, #0xb
   25d44:	ldr	w28, [x0]
   25d48:	and	x1, x1, #0xfffffffffffffff8
   25d4c:	str	x1, [x29, #120]
   25d50:	cmn	w28, #0x1
   25d54:	b.eq	25db8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x248>  // b.none
   25d58:	mov	w0, w28
   25d5c:	bl	8720 <acc_async_test@plt>
   25d60:	cbnz	w0, 25d80 <GOACC_parallel_keyed@@GOACC_2.0.1+0x210>
   25d64:	cmn	w20, #0x2
   25d68:	b.eq	25f70 <GOACC_parallel_keyed@@GOACC_2.0.1+0x400>  // b.none
   25d6c:	cmp	w20, w28
   25d70:	b.eq	25d80 <GOACC_parallel_keyed@@GOACC_2.0.1+0x210>  // b.none
   25d74:	mov	w0, w28
   25d78:	mov	w1, w20
   25d7c:	bl	86d0 <acc_wait_async@plt>
   25d80:	ldr	w1, [x29, #144]
   25d84:	subs	w19, w19, #0x1
   25d88:	ldr	x0, [x29, #120]
   25d8c:	b.eq	25cf8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x188>  // b.none
   25d90:	tbz	w1, #31, 25d40 <GOACC_parallel_keyed@@GOACC_2.0.1+0x1d0>
   25d94:	add	w2, w1, #0x8
   25d98:	str	w2, [x29, #144]
   25d9c:	cmp	w2, #0x0
   25da0:	b.gt	25d40 <GOACC_parallel_keyed@@GOACC_2.0.1+0x1d0>
   25da4:	ldr	x0, [x29, #128]
   25da8:	add	x0, x0, w1, sxtw
   25dac:	ldr	w28, [x0]
   25db0:	cmn	w28, #0x1
   25db4:	b.ne	25d58 <GOACC_parallel_keyed@@GOACC_2.0.1+0x1e8>  // b.any
   25db8:	cmn	w20, #0x2
   25dbc:	b.eq	2609c <GOACC_parallel_keyed@@GOACC_2.0.1+0x52c>  // b.none
   25dc0:	mov	w0, w20
   25dc4:	bl	8880 <acc_wait_all_async@plt>
   25dc8:	ldr	w1, [x29, #144]
   25dcc:	ldr	x0, [x29, #120]
   25dd0:	tbz	w1, #31, 25cfc <GOACC_parallel_keyed@@GOACC_2.0.1+0x18c>
   25dd4:	nop
   25dd8:	add	w2, w1, #0x8
   25ddc:	str	w2, [x29, #144]
   25de0:	cmp	w2, #0x0
   25de4:	b.gt	25cfc <GOACC_parallel_keyed@@GOACC_2.0.1+0x18c>
   25de8:	ldr	x0, [x29, #128]
   25dec:	add	x0, x0, w1, sxtw
   25df0:	ldr	w19, [x0]
   25df4:	cbnz	w19, 25d10 <GOACC_parallel_keyed@@GOACC_2.0.1+0x1a0>
   25df8:	ldr	x1, [x26, #248]
   25dfc:	mov	w0, w20
   25e00:	blr	x1
   25e04:	ldr	w0, [x26, #8]
   25e08:	tbnz	w0, #1, 25e5c <GOACC_parallel_keyed@@GOACC_2.0.1+0x2ec>
   25e0c:	add	x0, x27, #0x1
   25e10:	add	x25, x26, #0xa8
   25e14:	stp	x27, x0, [x29, #152]
   25e18:	mov	w0, #0x1                   	// #1
   25e1c:	ldaxr	w1, [x25]
   25e20:	cbnz	w1, 25e2c <GOACC_parallel_keyed@@GOACC_2.0.1+0x2bc>
   25e24:	stxr	w2, w0, [x25]
   25e28:	cbnz	w2, 25e1c <GOACC_parallel_keyed@@GOACC_2.0.1+0x2ac>
   25e2c:	cmp	w1, #0x0
   25e30:	b.ne	26238 <GOACC_parallel_keyed@@GOACC_2.0.1+0x6c8>  // b.any
   25e34:	add	x1, x29, #0x98
   25e38:	add	x0, x26, #0xa0
   25e3c:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   25e40:	mov	x27, x0
   25e44:	ldxr	w0, [x25]
   25e48:	stlxr	w1, wzr, [x25]
   25e4c:	cbnz	w1, 25e44 <GOACC_parallel_keyed@@GOACC_2.0.1+0x2d4>
   25e50:	tbnz	w0, #31, 26214 <GOACC_parallel_keyed@@GOACC_2.0.1+0x6a4>
   25e54:	cbz	x27, 2622c <GOACC_parallel_keyed@@GOACC_2.0.1+0x6bc>
   25e58:	ldr	x27, [x27, #24]
   25e5c:	mov	x5, x22
   25e60:	mov	x2, x24
   25e64:	mov	x1, x21
   25e68:	mov	x3, #0x0                   	// #0
   25e6c:	mov	x4, x23
   25e70:	mov	x0, x26
   25e74:	mov	w7, #0x0                   	// #0
   25e78:	mov	w6, #0x1                   	// #1
   25e7c:	bl	20c80 <omp_get_place_proc_ids@@OMP_4.5+0x1ac0>
   25e80:	lsl	x1, x21, #3
   25e84:	mov	x22, x0
   25e88:	add	x1, x1, #0xf
   25e8c:	mov	x0, #0x0                   	// #0
   25e90:	and	x1, x1, #0xfffffffffffffff0
   25e94:	mov	x2, #0x0                   	// #0
   25e98:	sub	sp, sp, x1
   25e9c:	mov	x3, sp
   25ea0:	cbz	x21, 25edc <GOACC_parallel_keyed@@GOACC_2.0.1+0x36c>
   25ea4:	nop
   25ea8:	add	x4, x22, x2, lsl #5
   25eac:	add	w2, w19, #0x1
   25eb0:	mov	x19, x2
   25eb4:	cmp	x2, x21
   25eb8:	ldr	x5, [x4, #80]
   25ebc:	ldr	x4, [x4, #64]
   25ec0:	ldp	x6, x1, [x4, #16]
   25ec4:	ldr	x4, [x6, #16]
   25ec8:	add	x1, x1, x5
   25ecc:	add	x1, x1, x4
   25ed0:	str	x1, [x3, x0, lsl #3]
   25ed4:	mov	x0, x2
   25ed8:	b.cc	25ea8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x338>  // b.lo, b.ul, b.last
   25edc:	ldr	x7, [x26, #184]
   25ee0:	mov	x0, x27
   25ee4:	mov	x2, x24
   25ee8:	mov	x1, x21
   25eec:	mov	x6, x22
   25ef0:	add	x5, x29, #0x68
   25ef4:	mov	w4, w20
   25ef8:	blr	x7
   25efc:	add	w0, w20, #0x2
   25f00:	cmp	w20, #0x0
   25f04:	ccmp	w0, #0x1, #0x0, lt  // lt = tstop
   25f08:	b.hi	260fc <GOACC_parallel_keyed@@GOACC_2.0.1+0x58c>  // b.pmore
   25f0c:	cmn	w20, #0x2
   25f10:	b.eq	260fc <GOACC_parallel_keyed@@GOACC_2.0.1+0x58c>  // b.none
   25f14:	ldr	x2, [x22, #48]
   25f18:	add	x3, x22, #0x40
   25f1c:	mov	x0, #0x0                   	// #0
   25f20:	cbz	x2, 25f4c <GOACC_parallel_keyed@@GOACC_2.0.1+0x3dc>
   25f24:	nop
   25f28:	lsl	x1, x0, #5
   25f2c:	ldr	x1, [x3, x1]
   25f30:	cbz	x1, 25f40 <GOACC_parallel_keyed@@GOACC_2.0.1+0x3d0>
   25f34:	ldr	x1, [x1, #32]
   25f38:	cmp	x1, #0x1
   25f3c:	b.eq	261d0 <GOACC_parallel_keyed@@GOACC_2.0.1+0x660>  // b.none
   25f40:	add	x0, x0, #0x1
   25f44:	cmp	x0, x2
   25f48:	b.ne	25f28 <GOACC_parallel_keyed@@GOACC_2.0.1+0x3b8>  // b.any
   25f4c:	mov	x0, x22
   25f50:	mov	w1, #0x0                   	// #0
   25f54:	bl	22658 <omp_get_place_proc_ids@@OMP_4.5+0x3498>
   25f58:	b	26108 <GOACC_parallel_keyed@@GOACC_2.0.1+0x598>
   25f5c:	cmp	w1, #0x1
   25f60:	b.eq	25fac <GOACC_parallel_keyed@@GOACC_2.0.1+0x43c>  // b.none
   25f64:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   25f68:	add	x0, x0, #0xf50
   25f6c:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   25f70:	mov	w0, w28
   25f74:	bl	8940 <acc_wait@plt>
   25f78:	b	25d80 <GOACC_parallel_keyed@@GOACC_2.0.1+0x210>
   25f7c:	ldr	w1, [x29, #144]
   25f80:	cmp	w25, w19, uxth
   25f84:	and	w20, w19, #0xffff
   25f88:	ldr	x0, [x29, #120]
   25f8c:	b.ne	25cf8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x188>  // b.any
   25f90:	tbnz	w1, #31, 260b8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x548>
   25f94:	mov	x3, x0
   25f98:	add	x2, x0, #0xb
   25f9c:	and	x0, x2, #0xfffffffffffffff8
   25fa0:	str	x0, [x29, #120]
   25fa4:	ldr	w20, [x3]
   25fa8:	b	25cf8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x188>
   25fac:	ldr	w1, [x29, #144]
   25fb0:	ldr	x0, [x29, #120]
   25fb4:	tbz	w19, #0, 25fd4 <GOACC_parallel_keyed@@GOACC_2.0.1+0x464>
   25fb8:	tbnz	w1, #31, 26044 <GOACC_parallel_keyed@@GOACC_2.0.1+0x4d4>
   25fbc:	add	x2, x0, #0xb
   25fc0:	mov	x3, x0
   25fc4:	and	x0, x2, #0xfffffffffffffff8
   25fc8:	str	x0, [x29, #120]
   25fcc:	ldr	w2, [x3]
   25fd0:	str	w2, [x29, #104]
   25fd4:	tbz	w19, #1, 25ff4 <GOACC_parallel_keyed@@GOACC_2.0.1+0x484>
   25fd8:	tbnz	w1, #31, 26018 <GOACC_parallel_keyed@@GOACC_2.0.1+0x4a8>
   25fdc:	add	x2, x0, #0xb
   25fe0:	mov	x3, x0
   25fe4:	and	x0, x2, #0xfffffffffffffff8
   25fe8:	str	x0, [x29, #120]
   25fec:	ldr	w2, [x3]
   25ff0:	str	w2, [x29, #108]
   25ff4:	tbz	w19, #2, 25cf8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x188>
   25ff8:	tbnz	w1, #31, 26070 <GOACC_parallel_keyed@@GOACC_2.0.1+0x500>
   25ffc:	add	x2, x0, #0xb
   26000:	mov	x3, x0
   26004:	and	x0, x2, #0xfffffffffffffff8
   26008:	str	x0, [x29, #120]
   2600c:	ldr	w2, [x3]
   26010:	str	w2, [x29, #112]
   26014:	b	25cf8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x188>
   26018:	add	w2, w1, #0x8
   2601c:	str	w2, [x29, #144]
   26020:	cmp	w2, #0x0
   26024:	b.le	26154 <GOACC_parallel_keyed@@GOACC_2.0.1+0x5e4>
   26028:	add	x3, x0, #0xb
   2602c:	mov	w1, w2
   26030:	and	x2, x3, #0xfffffffffffffff8
   26034:	mov	x3, x0
   26038:	mov	x0, x2
   2603c:	str	x2, [x29, #120]
   26040:	b	25fec <GOACC_parallel_keyed@@GOACC_2.0.1+0x47c>
   26044:	add	w2, w1, #0x8
   26048:	str	w2, [x29, #144]
   2604c:	cmp	w2, #0x0
   26050:	b.le	26144 <GOACC_parallel_keyed@@GOACC_2.0.1+0x5d4>
   26054:	add	x3, x0, #0xb
   26058:	mov	w1, w2
   2605c:	and	x2, x3, #0xfffffffffffffff8
   26060:	mov	x3, x0
   26064:	mov	x0, x2
   26068:	str	x2, [x29, #120]
   2606c:	b	25fcc <GOACC_parallel_keyed@@GOACC_2.0.1+0x45c>
   26070:	add	w2, w1, #0x8
   26074:	str	w2, [x29, #144]
   26078:	cmp	w2, #0x0
   2607c:	b.le	26134 <GOACC_parallel_keyed@@GOACC_2.0.1+0x5c4>
   26080:	add	x3, x0, #0xb
   26084:	mov	w1, w2
   26088:	and	x2, x3, #0xfffffffffffffff8
   2608c:	mov	x3, x0
   26090:	mov	x0, x2
   26094:	str	x2, [x29, #120]
   26098:	b	2600c <GOACC_parallel_keyed@@GOACC_2.0.1+0x49c>
   2609c:	bl	85d0 <acc_wait_all@plt>
   260a0:	ldr	w1, [x29, #144]
   260a4:	ldr	x0, [x29, #120]
   260a8:	b	25cf8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x188>
   260ac:	mov	x2, #0x0                   	// #0
   260b0:	mov	x1, #0x0                   	// #0
   260b4:	b	25c70 <GOACC_parallel_keyed@@GOACC_2.0.1+0x100>
   260b8:	add	w2, w1, #0x8
   260bc:	str	w2, [x29, #144]
   260c0:	cmp	w2, #0x0
   260c4:	b.le	260e8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x578>
   260c8:	add	x3, x0, #0xb
   260cc:	mov	w1, w2
   260d0:	and	x2, x3, #0xfffffffffffffff8
   260d4:	mov	x3, x0
   260d8:	mov	x0, x2
   260dc:	str	x2, [x29, #120]
   260e0:	ldr	w20, [x3]
   260e4:	b	25cf8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x188>
   260e8:	ldr	x3, [x29, #128]
   260ec:	add	x3, x3, w1, sxtw
   260f0:	mov	w1, w2
   260f4:	ldr	w20, [x3]
   260f8:	b	25cf8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x188>
   260fc:	mov	x0, x22
   26100:	mov	w1, #0x1                   	// #1
   26104:	bl	22658 <omp_get_place_proc_ids@@OMP_4.5+0x3498>
   26108:	ldr	x1, [x26, #248]
   2610c:	mov	w0, #0xfffffffe            	// #-2
   26110:	blr	x1
   26114:	mov	sp, x29
   26118:	ldp	x19, x20, [sp, #16]
   2611c:	ldp	x21, x22, [sp, #32]
   26120:	ldp	x23, x24, [sp, #48]
   26124:	ldp	x25, x26, [sp, #64]
   26128:	ldp	x27, x28, [sp, #80]
   2612c:	ldp	x29, x30, [sp], #224
   26130:	ret
   26134:	ldr	x3, [x29, #128]
   26138:	add	x3, x3, w1, sxtw
   2613c:	mov	w1, w2
   26140:	b	2600c <GOACC_parallel_keyed@@GOACC_2.0.1+0x49c>
   26144:	ldr	x3, [x29, #128]
   26148:	add	x3, x3, w1, sxtw
   2614c:	mov	w1, w2
   26150:	b	25fcc <GOACC_parallel_keyed@@GOACC_2.0.1+0x45c>
   26154:	ldr	x3, [x29, #128]
   26158:	add	x3, x3, w1, sxtw
   2615c:	mov	w1, w2
   26160:	b	25fec <GOACC_parallel_keyed@@GOACC_2.0.1+0x47c>
   26164:	mov	w0, #0x2                   	// #2
   26168:	bl	27f90 <acc_on_device@@OACC_2.0+0x50>
   2616c:	mov	x0, x24
   26170:	blr	x27
   26174:	bl	27ff8 <acc_on_device@@OACC_2.0+0xb8>
   26178:	mov	sp, x29
   2617c:	ldp	x19, x20, [sp, #16]
   26180:	ldp	x21, x22, [sp, #32]
   26184:	ldp	x23, x24, [sp, #48]
   26188:	ldp	x25, x26, [sp, #64]
   2618c:	ldp	x27, x28, [sp, #80]
   26190:	ldp	x29, x30, [sp], #224
   26194:	ret
   26198:	strh	w2, [x22, x0, lsl #1]
   2619c:	str	x6, [x23, x0, lsl #3]
   261a0:	str	xzr, [x24, x1, lsl #3]
   261a4:	b	25c54 <GOACC_parallel_keyed@@GOACC_2.0.1+0xe4>
   261a8:	mov	x0, x24
   261ac:	blr	x27
   261b0:	mov	sp, x29
   261b4:	ldp	x19, x20, [sp, #16]
   261b8:	ldp	x21, x22, [sp, #32]
   261bc:	ldp	x23, x24, [sp, #48]
   261c0:	ldp	x25, x26, [sp, #64]
   261c4:	ldp	x27, x28, [sp, #80]
   261c8:	ldp	x29, x30, [sp], #224
   261cc:	ret
   261d0:	ldr	x2, [x22, #56]
   261d4:	mov	w1, w20
   261d8:	mov	x0, x22
   261dc:	ldr	x2, [x2, #192]
   261e0:	blr	x2
   261e4:	b	26108 <GOACC_parallel_keyed@@GOACC_2.0.1+0x598>
   261e8:	mov	x6, x5
   261ec:	adrp	x2, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   261f0:	mov	x5, x4
   261f4:	add	x2, x2, #0xc0
   261f8:	mov	x4, x3
   261fc:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   26200:	mov	x3, x21
   26204:	add	x1, x1, #0xee0
   26208:	mov	w0, #0x0                   	// #0
   2620c:	bl	b568 <GOMP_critical_name_end@@GOMP_1.0+0x68>
   26210:	b	25bb4 <GOACC_parallel_keyed@@GOACC_2.0.1+0x44>
   26214:	mov	x0, x25
   26218:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   2621c:	b	25e54 <GOACC_parallel_keyed@@GOACC_2.0.1+0x2e4>
   26220:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   26224:	add	x0, x0, #0xf18
   26228:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2622c:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   26230:	add	x0, x0, #0xf88
   26234:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   26238:	mov	x0, x25
   2623c:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   26240:	b	25e34 <GOACC_parallel_keyed@@GOACC_2.0.1+0x2c4>
   26244:	nop

0000000000026248 <GOACC_parallel@@GOACC_2.0>:
   26248:	stp	x29, x30, [sp, #-32]!
   2624c:	mov	w0, #0x2                   	// #2
   26250:	mov	x29, sp
   26254:	stp	x19, x20, [sp, #16]
   26258:	mov	x20, x3
   2625c:	mov	x19, x1
   26260:	bl	27f90 <acc_on_device@@OACC_2.0+0x50>
   26264:	mov	x0, x20
   26268:	blr	x19
   2626c:	bl	27ff8 <acc_on_device@@OACC_2.0+0xb8>
   26270:	ldp	x19, x20, [sp, #16]
   26274:	ldp	x29, x30, [sp], #32
   26278:	ret
   2627c:	nop

0000000000026280 <GOACC_data_start@@GOACC_2.0>:
   26280:	stp	x29, x30, [sp, #-80]!
   26284:	mov	x29, sp
   26288:	stp	x25, x26, [sp, #64]
   2628c:	adrp	x25, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   26290:	ldr	w5, [x25, #1552]
   26294:	stp	x19, x20, [sp, #16]
   26298:	mvn	w19, w0
   2629c:	stp	x21, x22, [sp, #32]
   262a0:	mov	x21, x1
   262a4:	mov	x22, x2
   262a8:	stp	x23, x24, [sp, #48]
   262ac:	mov	x23, x3
   262b0:	mov	x24, x4
   262b4:	cbnz	w5, 263c0 <GOACC_data_start@@GOACC_2.0+0x140>
   262b8:	bl	28018 <acc_on_device@@OACC_2.0+0xd8>
   262bc:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   262c0:	ldr	x0, [x0, #4048]
   262c4:	mrs	x1, tpidr_el0
   262c8:	ldr	x20, [x1, x0]
   262cc:	ldr	x26, [x20, #8]
   262d0:	ldr	w0, [x26, #8]
   262d4:	orr	w19, w19, w0
   262d8:	tbnz	w19, #0, 26338 <GOACC_data_start@@GOACC_2.0+0xb8>
   262dc:	ldr	w0, [x25, #1552]
   262e0:	cbnz	w0, 263a0 <GOACC_data_start@@GOACC_2.0+0x120>
   262e4:	mov	x1, x21
   262e8:	mov	x5, x24
   262ec:	mov	x4, x23
   262f0:	mov	x2, x22
   262f4:	mov	x0, x26
   262f8:	mov	w7, #0x0                   	// #0
   262fc:	mov	w6, #0x1                   	// #1
   26300:	mov	x3, #0x0                   	// #0
   26304:	bl	20c80 <omp_get_place_proc_ids@@OMP_4.5+0x1ac0>
   26308:	mov	x19, x0
   2630c:	ldr	w1, [x25, #1552]
   26310:	cbnz	w1, 26380 <GOACC_data_start@@GOACC_2.0+0x100>
   26314:	ldr	x0, [x20, #24]
   26318:	str	x0, [x19, #40]
   2631c:	str	x19, [x20, #24]
   26320:	ldp	x19, x20, [sp, #16]
   26324:	ldp	x21, x22, [sp, #32]
   26328:	ldp	x23, x24, [sp, #48]
   2632c:	ldp	x25, x26, [sp, #64]
   26330:	ldp	x29, x30, [sp], #80
   26334:	ret
   26338:	mov	w7, #0x0                   	// #0
   2633c:	mov	w6, #0x1                   	// #1
   26340:	mov	x5, #0x0                   	// #0
   26344:	mov	x4, #0x0                   	// #0
   26348:	mov	x3, #0x0                   	// #0
   2634c:	mov	x2, #0x0                   	// #0
   26350:	mov	x1, #0x0                   	// #0
   26354:	mov	x0, #0x0                   	// #0
   26358:	bl	20c80 <omp_get_place_proc_ids@@OMP_4.5+0x1ac0>
   2635c:	ldr	x1, [x20, #24]
   26360:	str	x1, [x0, #40]
   26364:	str	x0, [x20, #24]
   26368:	ldp	x19, x20, [sp, #16]
   2636c:	ldp	x21, x22, [sp, #32]
   26370:	ldp	x23, x24, [sp, #48]
   26374:	ldp	x25, x26, [sp, #64]
   26378:	ldp	x29, x30, [sp], #80
   2637c:	ret
   26380:	adrp	x2, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   26384:	add	x2, x2, #0xc0
   26388:	add	x2, x2, #0x18
   2638c:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   26390:	mov	w0, #0x0                   	// #0
   26394:	add	x1, x1, #0xfc0
   26398:	bl	b568 <GOMP_critical_name_end@@GOMP_1.0+0x68>
   2639c:	b	26314 <GOACC_data_start@@GOACC_2.0+0x94>
   263a0:	adrp	x2, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   263a4:	add	x2, x2, #0xc0
   263a8:	add	x2, x2, #0x18
   263ac:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   263b0:	mov	w0, #0x0                   	// #0
   263b4:	add	x1, x1, #0xfa8
   263b8:	bl	b568 <GOMP_critical_name_end@@GOMP_1.0+0x68>
   263bc:	b	262e4 <GOACC_data_start@@GOACC_2.0+0x64>
   263c0:	adrp	x2, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   263c4:	add	x2, x2, #0xc0
   263c8:	mov	x6, x4
   263cc:	mov	x5, x3
   263d0:	add	x2, x2, #0x18
   263d4:	mov	x4, x22
   263d8:	mov	x3, x21
   263dc:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   263e0:	mov	w0, #0x0                   	// #0
   263e4:	add	x1, x1, #0xee0
   263e8:	bl	b568 <GOMP_critical_name_end@@GOMP_1.0+0x68>
   263ec:	b	262b8 <GOACC_data_start@@GOACC_2.0+0x38>

00000000000263f0 <GOACC_data_end@@GOACC_2.0>:
   263f0:	stp	x29, x30, [sp, #-48]!
   263f4:	mrs	x1, tpidr_el0
   263f8:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   263fc:	ldr	x0, [x0, #4048]
   26400:	mov	x29, sp
   26404:	stp	x19, x20, [sp, #16]
   26408:	adrp	x19, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   2640c:	ldr	w2, [x19, #1552]
   26410:	str	x21, [sp, #32]
   26414:	ldr	x21, [x1, x0]
   26418:	ldr	x20, [x21, #24]
   2641c:	cbnz	w2, 2644c <GOACC_data_end@@GOACC_2.0+0x5c>
   26420:	ldr	x0, [x20, #40]
   26424:	str	x0, [x21, #24]
   26428:	mov	w1, #0x1                   	// #1
   2642c:	mov	x0, x20
   26430:	bl	22658 <omp_get_place_proc_ids@@OMP_4.5+0x3498>
   26434:	ldr	w0, [x19, #1552]
   26438:	cbnz	w0, 26484 <GOACC_data_end@@GOACC_2.0+0x94>
   2643c:	ldp	x19, x20, [sp, #16]
   26440:	ldr	x21, [sp, #32]
   26444:	ldp	x29, x30, [sp], #48
   26448:	ret
   2644c:	adrp	x2, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   26450:	add	x2, x2, #0xc0
   26454:	add	x2, x2, #0x30
   26458:	mov	w0, #0x0                   	// #0
   2645c:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   26460:	add	x1, x1, #0xfe0
   26464:	bl	b568 <GOMP_critical_name_end@@GOMP_1.0+0x68>
   26468:	ldr	x0, [x20, #40]
   2646c:	str	x0, [x21, #24]
   26470:	mov	w1, #0x1                   	// #1
   26474:	mov	x0, x20
   26478:	bl	22658 <omp_get_place_proc_ids@@OMP_4.5+0x3498>
   2647c:	ldr	w0, [x19, #1552]
   26480:	cbz	w0, 2643c <GOACC_data_end@@GOACC_2.0+0x4c>
   26484:	ldp	x19, x20, [sp, #16]
   26488:	adrp	x2, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2648c:	ldr	x21, [sp, #32]
   26490:	add	x2, x2, #0xc0
   26494:	ldp	x29, x30, [sp], #48
   26498:	add	x2, x2, #0x30
   2649c:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   264a0:	mov	w0, #0x0                   	// #0
   264a4:	add	x1, x1, #0xff8
   264a8:	b	b568 <GOMP_critical_name_end@@GOMP_1.0+0x68>
   264ac:	nop

00000000000264b0 <GOACC_enter_exit_data@@GOACC_2.0>:
   264b0:	stp	x29, x30, [sp, #-128]!
   264b4:	mov	x29, sp
   264b8:	stp	x19, x20, [sp, #16]
   264bc:	mov	x20, x1
   264c0:	mov	w19, w6
   264c4:	stp	x21, x22, [sp, #32]
   264c8:	mov	x21, x2
   264cc:	mov	x22, x3
   264d0:	stp	x23, x24, [sp, #48]
   264d4:	mov	x24, x4
   264d8:	stp	x25, x26, [sp, #64]
   264dc:	mov	w26, w0
   264e0:	mov	w25, w5
   264e4:	str	x7, [sp, #120]
   264e8:	bl	28018 <acc_on_device@@OACC_2.0+0xd8>
   264ec:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   264f0:	ldr	x0, [x0, #4048]
   264f4:	mrs	x1, tpidr_el0
   264f8:	ldr	x0, [x1, x0]
   264fc:	ldr	x23, [x0, #8]
   26500:	ldr	w0, [x23, #8]
   26504:	orn	w0, w0, w26
   26508:	tbnz	w0, #0, 2652c <GOACC_enter_exit_data@@GOACC_2.0+0x7c>
   2650c:	cbnz	w19, 266ec <GOACC_enter_exit_data@@GOACC_2.0+0x23c>
   26510:	ldr	x1, [x23, #248]
   26514:	cbnz	x20, 26544 <GOACC_enter_exit_data@@GOACC_2.0+0x94>
   26518:	mov	w0, w25
   2651c:	blr	x1
   26520:	ldr	x1, [x23, #248]
   26524:	mov	w0, #0xfffffffe            	// #-2
   26528:	blr	x1
   2652c:	ldp	x19, x20, [sp, #16]
   26530:	ldp	x21, x22, [sp, #32]
   26534:	ldp	x23, x24, [sp, #48]
   26538:	ldp	x25, x26, [sp, #64]
   2653c:	ldp	x29, x30, [sp], #128
   26540:	ret
   26544:	ldrh	w26, [x24]
   26548:	mov	w0, w25
   2654c:	blr	x1
   26550:	mov	x2, #0x0                   	// #0
   26554:	ldrh	w1, [x24, x2, lsl #1]
   26558:	and	w1, w1, #0xff
   2655c:	sub	w0, w1, #0x4
   26560:	and	w0, w0, #0xff
   26564:	cmp	w0, #0x1
   26568:	b.ls	267e8 <GOACC_enter_exit_data@@GOACC_2.0+0x338>  // b.plast
   2656c:	cmp	w1, #0x6
   26570:	b.eq	266e4 <GOACC_enter_exit_data@@GOACC_2.0+0x234>  // b.none
   26574:	tst	w1, #0x7e
   26578:	mov	x19, #0x0                   	// #0
   2657c:	b.eq	26650 <GOACC_enter_exit_data@@GOACC_2.0+0x1a0>  // b.none
   26580:	and	w0, w1, #0xffffffef
   26584:	cmp	w0, #0x7
   26588:	b.ne	26848 <GOACC_enter_exit_data@@GOACC_2.0+0x398>  // b.any
   2658c:	and	w0, w26, #0xff
   26590:	mov	x19, #0x0                   	// #0
   26594:	cmp	w0, #0x7
   26598:	cset	w26, eq  // eq = none
   2659c:	cmp	w0, #0x82
   265a0:	csinc	w26, w26, wzr, ne  // ne = any
   265a4:	b	265cc <GOACC_enter_exit_data@@GOACC_2.0+0x11c>
   265a8:	ldr	x0, [x21, x19, lsl #3]
   265ac:	ldr	x1, [x22, x19, lsl #3]
   265b0:	cbz	w26, 267e0 <GOACC_enter_exit_data@@GOACC_2.0+0x330>
   265b4:	nop
   265b8:	bl	8600 <acc_copyout_finalize@plt>
   265bc:	nop
   265c0:	add	x19, x19, #0x1
   265c4:	cmp	x20, x19
   265c8:	b.ls	26520 <GOACC_enter_exit_data@@GOACC_2.0+0x70>  // b.plast
   265cc:	ldrh	w1, [x24, x19, lsl #1]
   265d0:	add	w0, w19, #0x1
   265d4:	and	w1, w1, #0xff
   265d8:	cmp	x20, w0, sxtw
   265dc:	b.ls	265f8 <GOACC_enter_exit_data@@GOACC_2.0+0x148>  // b.plast
   265e0:	add	x0, x24, w19, sxtw #1
   265e4:	ldrb	w0, [x0, #2]
   265e8:	cmp	w0, #0x5
   265ec:	b.eq	26800 <GOACC_enter_exit_data@@GOACC_2.0+0x350>  // b.none
   265f0:	cmp	w0, #0x4
   265f4:	b.eq	26830 <GOACC_enter_exit_data@@GOACC_2.0+0x380>  // b.none
   265f8:	cmp	w1, #0x17
   265fc:	b.eq	26614 <GOACC_enter_exit_data@@GOACC_2.0+0x164>  // b.none
   26600:	b.hi	267cc <GOACC_enter_exit_data@@GOACC_2.0+0x31c>  // b.pmore
   26604:	cmp	w1, #0x2
   26608:	b.eq	265a8 <GOACC_enter_exit_data@@GOACC_2.0+0xf8>  // b.none
   2660c:	cmp	w1, #0x7
   26610:	b.ne	26854 <GOACC_enter_exit_data@@GOACC_2.0+0x3a4>  // b.any
   26614:	ldr	x1, [x22, x19, lsl #3]
   26618:	ldr	x0, [x21, x19, lsl #3]
   2661c:	bl	87a0 <acc_is_present@plt>
   26620:	cbz	w0, 265c0 <GOACC_enter_exit_data@@GOACC_2.0+0x110>
   26624:	ldr	x0, [x21, x19, lsl #3]
   26628:	ldr	x1, [x22, x19, lsl #3]
   2662c:	cbz	w26, 267f8 <GOACC_enter_exit_data@@GOACC_2.0+0x348>
   26630:	bl	8690 <acc_delete_finalize@plt>
   26634:	b	265c0 <GOACC_enter_exit_data@@GOACC_2.0+0x110>
   26638:	ldr	x1, [x22, x19, lsl #3]
   2663c:	ldr	x0, [x21, x19, lsl #3]
   26640:	bl	86b0 <acc_create@plt>
   26644:	add	x19, x19, #0x1
   26648:	cmp	x20, x19
   2664c:	b.ls	26520 <GOACC_enter_exit_data@@GOACC_2.0+0x70>  // b.plast
   26650:	lsl	x0, x19, #1
   26654:	add	w5, w19, #0x1
   26658:	add	x3, x24, x0
   2665c:	cmp	x20, w5, sxtw
   26660:	ldrb	w0, [x24, x0]
   26664:	b.ls	26680 <GOACC_enter_exit_data@@GOACC_2.0+0x1d0>  // b.plast
   26668:	add	x1, x24, w19, sxtw #1
   2666c:	ldrb	w1, [x1, #2]
   26670:	cmp	w1, #0x5
   26674:	b.eq	266b8 <GOACC_enter_exit_data@@GOACC_2.0+0x208>  // b.none
   26678:	cmp	w1, #0x4
   2667c:	b.eq	266d8 <GOACC_enter_exit_data@@GOACC_2.0+0x228>  // b.none
   26680:	cmp	w0, #0x80
   26684:	b.eq	26638 <GOACC_enter_exit_data@@GOACC_2.0+0x188>  // b.none
   26688:	b.hi	266a8 <GOACC_enter_exit_data@@GOACC_2.0+0x1f8>  // b.pmore
   2668c:	cbz	w0, 26638 <GOACC_enter_exit_data@@GOACC_2.0+0x188>
   26690:	cmp	w0, #0x1
   26694:	b.ne	266b0 <GOACC_enter_exit_data@@GOACC_2.0+0x200>  // b.any
   26698:	ldr	x1, [x22, x19, lsl #3]
   2669c:	ldr	x0, [x21, x19, lsl #3]
   266a0:	bl	8680 <acc_copyin@plt>
   266a4:	b	26644 <GOACC_enter_exit_data@@GOACC_2.0+0x194>
   266a8:	cmp	w0, #0x81
   266ac:	b.eq	26698 <GOACC_enter_exit_data@@GOACC_2.0+0x1e8>  // b.none
   266b0:	mov	w1, w0
   266b4:	b	26854 <GOACC_enter_exit_data@@GOACC_2.0+0x3a4>
   266b8:	mov	x2, #0x2                   	// #2
   266bc:	mov	x0, #0x3                   	// #3
   266c0:	lsl	x1, x19, #3
   266c4:	add	x19, x19, x2
   266c8:	add	x2, x22, x1
   266cc:	add	x1, x21, x1
   266d0:	bl	2a818 <acc_update_self_async@@OACC_2.5+0x148>
   266d4:	b	26644 <GOACC_enter_exit_data@@GOACC_2.0+0x194>
   266d8:	mov	x2, #0x1                   	// #1
   266dc:	mov	x0, #0x2                   	// #2
   266e0:	b	266c0 <GOACC_enter_exit_data@@GOACC_2.0+0x210>
   266e4:	mov	x19, #0x0                   	// #0
   266e8:	b	26650 <GOACC_enter_exit_data@@GOACC_2.0+0x1a0>
   266ec:	add	x1, sp, #0x70
   266f0:	add	x2, sp, #0x80
   266f4:	mov	w0, #0xfffffff8            	// #-8
   266f8:	stp	x2, x2, [sp, #80]
   266fc:	cmn	w25, #0x2
   26700:	str	x1, [sp, #96]
   26704:	stp	w0, wzr, [sp, #104]
   26708:	b.ne	26750 <GOACC_enter_exit_data@@GOACC_2.0+0x2a0>  // b.any
   2670c:	b	267bc <GOACC_enter_exit_data@@GOACC_2.0+0x30c>
   26710:	add	x1, x0, #0xb
   26714:	and	x1, x1, #0xfffffffffffffff8
   26718:	str	x1, [sp, #80]
   2671c:	ldr	w26, [x0]
   26720:	cmn	w26, #0x1
   26724:	b.eq	26860 <GOACC_enter_exit_data@@GOACC_2.0+0x3b0>  // b.none
   26728:	mov	w0, w26
   2672c:	bl	8720 <acc_async_test@plt>
   26730:	cbnz	w0, 26748 <GOACC_enter_exit_data@@GOACC_2.0+0x298>
   26734:	cmp	w25, w26
   26738:	b.eq	26748 <GOACC_enter_exit_data@@GOACC_2.0+0x298>  // b.none
   2673c:	mov	w0, w26
   26740:	mov	w1, w25
   26744:	bl	86d0 <acc_wait_async@plt>
   26748:	subs	w19, w19, #0x1
   2674c:	b.eq	26510 <GOACC_enter_exit_data@@GOACC_2.0+0x60>  // b.none
   26750:	ldr	w1, [sp, #104]
   26754:	ldr	x0, [sp, #80]
   26758:	tbz	w1, #31, 26710 <GOACC_enter_exit_data@@GOACC_2.0+0x260>
   2675c:	add	w2, w1, #0x8
   26760:	str	w2, [sp, #104]
   26764:	cmp	w2, #0x0
   26768:	b.gt	26710 <GOACC_enter_exit_data@@GOACC_2.0+0x260>
   2676c:	ldr	x0, [sp, #88]
   26770:	add	x0, x0, w1, sxtw
   26774:	b	2671c <GOACC_enter_exit_data@@GOACC_2.0+0x26c>
   26778:	add	w2, w1, #0x8
   2677c:	str	w2, [sp, #104]
   26780:	cmp	w2, #0x0
   26784:	b.le	2683c <GOACC_enter_exit_data@@GOACC_2.0+0x38c>
   26788:	add	x1, x0, #0xb
   2678c:	and	x1, x1, #0xfffffffffffffff8
   26790:	str	x1, [sp, #80]
   26794:	ldr	w26, [x0]
   26798:	cmn	w26, #0x1
   2679c:	b.eq	2686c <GOACC_enter_exit_data@@GOACC_2.0+0x3bc>  // b.none
   267a0:	mov	w0, w26
   267a4:	bl	8720 <acc_async_test@plt>
   267a8:	cbnz	w0, 267b4 <GOACC_enter_exit_data@@GOACC_2.0+0x304>
   267ac:	mov	w0, w26
   267b0:	bl	8940 <acc_wait@plt>
   267b4:	subs	w19, w19, #0x1
   267b8:	b.eq	26510 <GOACC_enter_exit_data@@GOACC_2.0+0x60>  // b.none
   267bc:	ldr	w1, [sp, #104]
   267c0:	ldr	x0, [sp, #80]
   267c4:	tbz	w1, #31, 26788 <GOACC_enter_exit_data@@GOACC_2.0+0x2d8>
   267c8:	b	26778 <GOACC_enter_exit_data@@GOACC_2.0+0x2c8>
   267cc:	cmp	w1, #0x82
   267d0:	b.ne	26854 <GOACC_enter_exit_data@@GOACC_2.0+0x3a4>  // b.any
   267d4:	ldr	x0, [x21, x19, lsl #3]
   267d8:	ldr	x1, [x22, x19, lsl #3]
   267dc:	cbnz	w26, 265b8 <GOACC_enter_exit_data@@GOACC_2.0+0x108>
   267e0:	bl	8930 <acc_copyout@plt>
   267e4:	b	265c0 <GOACC_enter_exit_data@@GOACC_2.0+0x110>
   267e8:	add	x2, x2, #0x1
   267ec:	cmp	x20, x2
   267f0:	b.ne	26554 <GOACC_enter_exit_data@@GOACC_2.0+0xa4>  // b.any
   267f4:	b	2658c <GOACC_enter_exit_data@@GOACC_2.0+0xdc>
   267f8:	bl	88c0 <acc_delete@plt>
   267fc:	b	265c0 <GOACC_enter_exit_data@@GOACC_2.0+0x110>
   26800:	mov	x2, #0x2                   	// #2
   26804:	mov	w5, #0x3                   	// #3
   26808:	and	w0, w1, #0x7f
   2680c:	mov	w4, w26
   26810:	cmp	w0, #0x2
   26814:	mov	w3, w25
   26818:	ldr	x1, [x22, x19, lsl #3]
   2681c:	ldr	x0, [x21, x19, lsl #3]
   26820:	add	x19, x19, x2
   26824:	cset	w2, eq  // eq = none
   26828:	bl	2aa58 <acc_update_self_async@@OACC_2.5+0x388>
   2682c:	b	265c0 <GOACC_enter_exit_data@@GOACC_2.0+0x110>
   26830:	mov	x2, #0x1                   	// #1
   26834:	mov	w5, #0x2                   	// #2
   26838:	b	26808 <GOACC_enter_exit_data@@GOACC_2.0+0x358>
   2683c:	ldr	x0, [sp, #88]
   26840:	add	x0, x0, w1, sxtw
   26844:	b	26794 <GOACC_enter_exit_data@@GOACC_2.0+0x2e4>
   26848:	and	w0, w1, #0x7f
   2684c:	cmp	w0, #0x2
   26850:	b.eq	2658c <GOACC_enter_exit_data@@GOACC_2.0+0xdc>  // b.none
   26854:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   26858:	add	x0, x0, #0x18
   2685c:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   26860:	mov	w0, w25
   26864:	bl	8880 <acc_wait_all_async@plt>
   26868:	b	26510 <GOACC_enter_exit_data@@GOACC_2.0+0x60>
   2686c:	bl	85d0 <acc_wait_all@plt>
   26870:	b	26510 <GOACC_enter_exit_data@@GOACC_2.0+0x60>
   26874:	nop

0000000000026878 <GOACC_update@@GOACC_2.0>:
   26878:	stp	x29, x30, [sp, #-128]!
   2687c:	mov	x29, sp
   26880:	stp	x19, x20, [sp, #16]
   26884:	mov	x20, x2
   26888:	mov	w19, w6
   2688c:	stp	x21, x22, [sp, #32]
   26890:	mov	x21, x1
   26894:	mov	x22, x4
   26898:	stp	x23, x24, [sp, #48]
   2689c:	mov	x23, x3
   268a0:	stp	x25, x26, [sp, #64]
   268a4:	mov	w25, w0
   268a8:	mov	w26, w5
   268ac:	str	x7, [sp, #120]
   268b0:	bl	28018 <acc_on_device@@OACC_2.0+0xd8>
   268b4:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   268b8:	ldr	x0, [x0, #4048]
   268bc:	mrs	x1, tpidr_el0
   268c0:	ldr	x0, [x1, x0]
   268c4:	ldr	x24, [x0, #8]
   268c8:	ldr	w0, [x24, #8]
   268cc:	orn	w0, w0, w25
   268d0:	tbnz	w0, #0, 2696c <GOACC_update@@GOACC_2.0+0xf4>
   268d4:	cbnz	w19, 26a18 <GOACC_update@@GOACC_2.0+0x1a0>
   268d8:	ldr	x1, [x24, #248]
   268dc:	mov	w0, w26
   268e0:	mov	x19, #0x0                   	// #0
   268e4:	blr	x1
   268e8:	mov	w1, #0x0                   	// #0
   268ec:	cbnz	x21, 26920 <GOACC_update@@GOACC_2.0+0xa8>
   268f0:	b	26960 <GOACC_update@@GOACC_2.0+0xe8>
   268f4:	cmp	w0, #0x2
   268f8:	b.eq	269fc <GOACC_update@@GOACC_2.0+0x184>  // b.none
   268fc:	b.ls	26984 <GOACC_update@@GOACC_2.0+0x10c>  // b.plast
   26900:	sub	w2, w0, #0x4
   26904:	and	w2, w2, #0xff
   26908:	cmp	w2, #0x1
   2690c:	b.hi	26b18 <GOACC_update@@GOACC_2.0+0x2a0>  // b.pmore
   26910:	add	x19, x19, #0x1
   26914:	add	x20, x20, #0x8
   26918:	cmp	x21, x19
   2691c:	b.eq	26960 <GOACC_update@@GOACC_2.0+0xe8>  // b.none
   26920:	ldrh	w0, [x22, x19, lsl #1]
   26924:	and	w0, w0, #0xff
   26928:	cmp	w0, #0x1d
   2692c:	b.eq	269c8 <GOACC_update@@GOACC_2.0+0x150>  // b.none
   26930:	b.ls	268f4 <GOACC_update@@GOACC_2.0+0x7c>  // b.plast
   26934:	cmp	w0, #0x81
   26938:	b.ne	269a8 <GOACC_update@@GOACC_2.0+0x130>  // b.any
   2693c:	add	x25, x23, x19, lsl #3
   26940:	ldr	x0, [x20]
   26944:	add	x19, x19, #0x1
   26948:	ldr	x1, [x25]
   2694c:	add	x20, x20, #0x8
   26950:	bl	8ab0 <acc_update_device@plt>
   26954:	cmp	x21, x19
   26958:	mov	w1, #0x1                   	// #1
   2695c:	b.ne	26920 <GOACC_update@@GOACC_2.0+0xa8>  // b.any
   26960:	ldr	x1, [x24, #248]
   26964:	mov	w0, #0xfffffffe            	// #-2
   26968:	blr	x1
   2696c:	ldp	x19, x20, [sp, #16]
   26970:	ldp	x21, x22, [sp, #32]
   26974:	ldp	x23, x24, [sp, #48]
   26978:	ldp	x25, x26, [sp, #64]
   2697c:	ldp	x29, x30, [sp], #128
   26980:	ret
   26984:	cmp	w0, #0x1
   26988:	b.ne	26b18 <GOACC_update@@GOACC_2.0+0x2a0>  // b.any
   2698c:	ldr	x1, [x23, x19, lsl #3]
   26990:	add	x25, x23, x19, lsl #3
   26994:	ldr	x0, [x20]
   26998:	bl	87a0 <acc_is_present@plt>
   2699c:	cbnz	w0, 26940 <GOACC_update@@GOACC_2.0+0xc8>
   269a0:	mov	w1, #0x0                   	// #0
   269a4:	b	26910 <GOACC_update@@GOACC_2.0+0x98>
   269a8:	cmp	w0, #0x82
   269ac:	b.ne	26b18 <GOACC_update@@GOACC_2.0+0x2a0>  // b.any
   269b0:	add	x25, x23, x19, lsl #3
   269b4:	ldr	x1, [x25]
   269b8:	ldr	x0, [x20]
   269bc:	bl	89a0 <acc_update_self@plt>
   269c0:	mov	w1, #0x0                   	// #0
   269c4:	b	26910 <GOACC_update@@GOACC_2.0+0x98>
   269c8:	cbz	w1, 269a0 <GOACC_update@@GOACC_2.0+0x128>
   269cc:	ldur	x0, [x20, #-8]
   269d0:	bl	8890 <acc_deviceptr@plt>
   269d4:	mov	x2, x0
   269d8:	ldr	x0, [x20]
   269dc:	mov	x1, #0x8                   	// #8
   269e0:	ldr	x25, [x0]
   269e4:	str	x2, [x0]
   269e8:	bl	8ab0 <acc_update_device@plt>
   269ec:	ldr	x0, [x20]
   269f0:	mov	w1, #0x0                   	// #0
   269f4:	str	x25, [x0]
   269f8:	b	26910 <GOACC_update@@GOACC_2.0+0x98>
   269fc:	ldr	x1, [x23, x19, lsl #3]
   26a00:	add	x25, x23, x19, lsl #3
   26a04:	ldr	x0, [x20]
   26a08:	bl	87a0 <acc_is_present@plt>
   26a0c:	cbnz	w0, 269b4 <GOACC_update@@GOACC_2.0+0x13c>
   26a10:	mov	w1, #0x0                   	// #0
   26a14:	b	26910 <GOACC_update@@GOACC_2.0+0x98>
   26a18:	add	x1, sp, #0x70
   26a1c:	add	x2, sp, #0x80
   26a20:	mov	w0, #0xfffffff8            	// #-8
   26a24:	stp	x2, x2, [sp, #80]
   26a28:	cmn	w26, #0x2
   26a2c:	str	x1, [sp, #96]
   26a30:	stp	w0, wzr, [sp, #104]
   26a34:	b.ne	26a7c <GOACC_update@@GOACC_2.0+0x204>  // b.any
   26a38:	b	26ae8 <GOACC_update@@GOACC_2.0+0x270>
   26a3c:	add	x1, x0, #0xb
   26a40:	and	x1, x1, #0xfffffffffffffff8
   26a44:	str	x1, [sp, #80]
   26a48:	ldr	w25, [x0]
   26a4c:	cmn	w25, #0x1
   26a50:	b.eq	26b04 <GOACC_update@@GOACC_2.0+0x28c>  // b.none
   26a54:	mov	w0, w25
   26a58:	bl	8720 <acc_async_test@plt>
   26a5c:	cbnz	w0, 26a74 <GOACC_update@@GOACC_2.0+0x1fc>
   26a60:	cmp	w26, w25
   26a64:	b.eq	26a74 <GOACC_update@@GOACC_2.0+0x1fc>  // b.none
   26a68:	mov	w0, w25
   26a6c:	mov	w1, w26
   26a70:	bl	86d0 <acc_wait_async@plt>
   26a74:	subs	w19, w19, #0x1
   26a78:	b.eq	268d8 <GOACC_update@@GOACC_2.0+0x60>  // b.none
   26a7c:	ldr	w1, [sp, #104]
   26a80:	ldr	x0, [sp, #80]
   26a84:	tbz	w1, #31, 26a3c <GOACC_update@@GOACC_2.0+0x1c4>
   26a88:	add	w2, w1, #0x8
   26a8c:	str	w2, [sp, #104]
   26a90:	cmp	w2, #0x0
   26a94:	b.gt	26a3c <GOACC_update@@GOACC_2.0+0x1c4>
   26a98:	ldr	x0, [sp, #88]
   26a9c:	add	x0, x0, w1, sxtw
   26aa0:	b	26a48 <GOACC_update@@GOACC_2.0+0x1d0>
   26aa4:	add	w2, w1, #0x8
   26aa8:	str	w2, [sp, #104]
   26aac:	cmp	w2, #0x0
   26ab0:	b.le	26af8 <GOACC_update@@GOACC_2.0+0x280>
   26ab4:	add	x1, x0, #0xb
   26ab8:	and	x1, x1, #0xfffffffffffffff8
   26abc:	str	x1, [sp, #80]
   26ac0:	ldr	w25, [x0]
   26ac4:	cmn	w25, #0x1
   26ac8:	b.eq	26b10 <GOACC_update@@GOACC_2.0+0x298>  // b.none
   26acc:	mov	w0, w25
   26ad0:	bl	8720 <acc_async_test@plt>
   26ad4:	cbnz	w0, 26ae0 <GOACC_update@@GOACC_2.0+0x268>
   26ad8:	mov	w0, w25
   26adc:	bl	8940 <acc_wait@plt>
   26ae0:	subs	w19, w19, #0x1
   26ae4:	b.eq	268d8 <GOACC_update@@GOACC_2.0+0x60>  // b.none
   26ae8:	ldr	w1, [sp, #104]
   26aec:	ldr	x0, [sp, #80]
   26af0:	tbz	w1, #31, 26ab4 <GOACC_update@@GOACC_2.0+0x23c>
   26af4:	b	26aa4 <GOACC_update@@GOACC_2.0+0x22c>
   26af8:	ldr	x0, [sp, #88]
   26afc:	add	x0, x0, w1, sxtw
   26b00:	b	26ac0 <GOACC_update@@GOACC_2.0+0x248>
   26b04:	mov	w0, w26
   26b08:	bl	8880 <acc_wait_all_async@plt>
   26b0c:	b	268d8 <GOACC_update@@GOACC_2.0+0x60>
   26b10:	bl	85d0 <acc_wait_all@plt>
   26b14:	b	268d8 <GOACC_update@@GOACC_2.0+0x60>
   26b18:	mov	w1, w0
   26b1c:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   26b20:	add	x0, x0, #0x50
   26b24:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>

0000000000026b28 <GOACC_wait@@GOACC_2.0>:
   26b28:	stp	x29, x30, [sp, #-128]!
   26b2c:	mov	x29, sp
   26b30:	stp	x19, x20, [sp, #16]
   26b34:	mov	w20, w0
   26b38:	stp	x2, x3, [sp, #80]
   26b3c:	stp	x4, x5, [sp, #96]
   26b40:	stp	x6, x7, [sp, #112]
   26b44:	cbnz	w1, 26b70 <GOACC_wait@@GOACC_2.0+0x48>
   26b48:	cmn	w0, #0x2
   26b4c:	b.eq	26b60 <GOACC_wait@@GOACC_2.0+0x38>  // b.none
   26b50:	bl	8880 <acc_wait_all_async@plt>
   26b54:	ldp	x19, x20, [sp, #16]
   26b58:	ldp	x29, x30, [sp], #128
   26b5c:	ret
   26b60:	bl	85d0 <acc_wait_all@plt>
   26b64:	ldp	x19, x20, [sp, #16]
   26b68:	ldp	x29, x30, [sp], #128
   26b6c:	ret
   26b70:	mov	w19, w1
   26b74:	add	x2, sp, #0x80
   26b78:	add	x1, sp, #0x50
   26b7c:	mov	w0, #0xffffffd0            	// #-48
   26b80:	stp	x2, x2, [sp, #48]
   26b84:	cmn	w20, #0x2
   26b88:	str	x1, [sp, #64]
   26b8c:	stp	w0, wzr, [sp, #72]
   26b90:	b.eq	26c28 <GOACC_wait@@GOACC_2.0+0x100>  // b.none
   26b94:	str	x21, [sp, #32]
   26b98:	ldr	w2, [sp, #72]
   26b9c:	ldr	x1, [sp, #48]
   26ba0:	add	w3, w2, #0x8
   26ba4:	add	x0, x1, #0xb
   26ba8:	tbnz	w2, #31, 26c58 <GOACC_wait@@GOACC_2.0+0x130>
   26bac:	and	x0, x0, #0xfffffffffffffff8
   26bb0:	ldr	w21, [x1]
   26bb4:	str	x0, [sp, #48]
   26bb8:	cmn	w21, #0x1
   26bbc:	b.eq	26c80 <GOACC_wait@@GOACC_2.0+0x158>  // b.none
   26bc0:	mov	w0, w21
   26bc4:	bl	8720 <acc_async_test@plt>
   26bc8:	cbnz	w0, 26be0 <GOACC_wait@@GOACC_2.0+0xb8>
   26bcc:	cmp	w20, w21
   26bd0:	b.eq	26be0 <GOACC_wait@@GOACC_2.0+0xb8>  // b.none
   26bd4:	mov	w0, w21
   26bd8:	mov	w1, w20
   26bdc:	bl	86d0 <acc_wait_async@plt>
   26be0:	subs	w19, w19, #0x1
   26be4:	b.ne	26b98 <GOACC_wait@@GOACC_2.0+0x70>  // b.any
   26be8:	ldr	x21, [sp, #32]
   26bec:	ldp	x19, x20, [sp, #16]
   26bf0:	ldp	x29, x30, [sp], #128
   26bf4:	ret
   26bf8:	and	x2, x2, #0xfffffffffffffff8
   26bfc:	str	x2, [sp, #48]
   26c00:	ldr	w20, [x0]
   26c04:	cmn	w20, #0x1
   26c08:	b.eq	26b60 <GOACC_wait@@GOACC_2.0+0x38>  // b.none
   26c0c:	mov	w0, w20
   26c10:	bl	8720 <acc_async_test@plt>
   26c14:	cbnz	w0, 26c20 <GOACC_wait@@GOACC_2.0+0xf8>
   26c18:	mov	w0, w20
   26c1c:	bl	8940 <acc_wait@plt>
   26c20:	subs	w19, w19, #0x1
   26c24:	b.eq	26b54 <GOACC_wait@@GOACC_2.0+0x2c>  // b.none
   26c28:	ldr	w1, [sp, #72]
   26c2c:	ldr	x0, [sp, #48]
   26c30:	add	w3, w1, #0x8
   26c34:	add	x2, x0, #0xb
   26c38:	tbz	w1, #31, 26bf8 <GOACC_wait@@GOACC_2.0+0xd0>
   26c3c:	str	w3, [sp, #72]
   26c40:	add	x2, x0, #0xb
   26c44:	cmp	w3, #0x0
   26c48:	and	x2, x2, #0xfffffffffffffff8
   26c4c:	b.le	26c90 <GOACC_wait@@GOACC_2.0+0x168>
   26c50:	str	x2, [sp, #48]
   26c54:	b	26c00 <GOACC_wait@@GOACC_2.0+0xd8>
   26c58:	str	w3, [sp, #72]
   26c5c:	cmp	w3, #0x0
   26c60:	and	x0, x0, #0xfffffffffffffff8
   26c64:	b.gt	26bb0 <GOACC_wait@@GOACC_2.0+0x88>
   26c68:	ldr	x1, [sp, #56]
   26c6c:	add	x1, x1, w2, sxtw
   26c70:	ldr	w21, [x1]
   26c74:	cmn	w21, #0x1
   26c78:	b.ne	26bc0 <GOACC_wait@@GOACC_2.0+0x98>  // b.any
   26c7c:	nop
   26c80:	mov	w0, w20
   26c84:	bl	8880 <acc_wait_all_async@plt>
   26c88:	ldr	x21, [sp, #32]
   26c8c:	b	26bec <GOACC_wait@@GOACC_2.0+0xc4>
   26c90:	ldr	x0, [sp, #56]
   26c94:	add	x0, x0, w1, sxtw
   26c98:	b	26c00 <GOACC_wait@@GOACC_2.0+0xd8>
   26c9c:	nop

0000000000026ca0 <GOACC_get_num_threads@@GOACC_2.0>:
   26ca0:	mov	w0, #0x1                   	// #1
   26ca4:	ret

0000000000026ca8 <GOACC_get_thread_num@@GOACC_2.0>:
   26ca8:	mov	w0, #0x0                   	// #0
   26cac:	ret

0000000000026cb0 <GOACC_declare@@GOACC_2.0.1>:
   26cb0:	cbz	x1, 26e10 <GOACC_declare@@GOACC_2.0.1+0x160>
   26cb4:	stp	x29, x30, [sp, #-80]!
   26cb8:	mov	x29, sp
   26cbc:	stp	x19, x20, [sp, #16]
   26cc0:	mov	x20, x1
   26cc4:	mov	x19, #0x0                   	// #0
   26cc8:	stp	x21, x22, [sp, #32]
   26ccc:	mov	x21, x2
   26cd0:	mov	x22, x3
   26cd4:	stp	x23, x24, [sp, #48]
   26cd8:	mov	w23, w0
   26cdc:	mov	x24, x4
   26ce0:	stp	x25, x26, [sp, #64]
   26ce4:	b	26d1c <GOACC_declare@@GOACC_2.0.1+0x6c>
   26ce8:	lsl	x2, x19, #3
   26cec:	mov	w6, #0x0                   	// #0
   26cf0:	add	x3, x22, x2
   26cf4:	add	x2, x21, x2
   26cf8:	mov	x4, x24
   26cfc:	mov	w0, w23
   26d00:	mov	w5, #0xfffffffe            	// #-2
   26d04:	mov	x1, #0x1                   	// #1
   26d08:	bl	89d0 <GOACC_enter_exit_data@plt>
   26d0c:	add	x19, x19, #0x1
   26d10:	add	x24, x24, #0x2
   26d14:	cmp	x20, x19
   26d18:	b.eq	26df8 <GOACC_declare@@GOACC_2.0.1+0x148>  // b.none
   26d1c:	ldrb	w5, [x24]
   26d20:	sub	w6, w5, #0x4
   26d24:	and	w6, w6, #0xff
   26d28:	cmp	w6, #0x1
   26d2c:	b.ls	26d0c <GOACC_declare@@GOACC_2.0.1+0x5c>  // b.plast
   26d30:	cmp	w5, #0x2
   26d34:	b.eq	26ce8 <GOACC_declare@@GOACC_2.0.1+0x38>  // b.none
   26d38:	b.ls	26dbc <GOACC_declare@@GOACC_2.0.1+0x10c>  // b.plast
   26d3c:	cmp	w5, #0x8
   26d40:	b.eq	26d0c <GOACC_declare@@GOACC_2.0.1+0x5c>  // b.none
   26d44:	b.ls	26d84 <GOACC_declare@@GOACC_2.0.1+0xd4>  // b.plast
   26d48:	cmp	w5, #0x17
   26d4c:	b.eq	26ce8 <GOACC_declare@@GOACC_2.0.1+0x38>  // b.none
   26d50:	sub	w5, w5, #0x80
   26d54:	and	w5, w5, #0xff
   26d58:	cmp	w5, #0x2
   26d5c:	b.ls	26ce8 <GOACC_declare@@GOACC_2.0.1+0x38>  // b.plast
   26d60:	adrp	x3, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   26d64:	add	x3, x3, #0xc0
   26d68:	adrp	x1, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   26d6c:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   26d70:	add	x3, x3, #0x40
   26d74:	add	x1, x1, #0x90
   26d78:	add	x0, x0, #0xb8
   26d7c:	mov	w2, #0x2cc                 	// #716
   26d80:	bl	8a60 <__assert_fail@plt>
   26d84:	cmp	w5, #0x6
   26d88:	b.ne	26dec <GOACC_declare@@GOACC_2.0.1+0x13c>  // b.any
   26d8c:	ldr	x1, [x22, x19, lsl #3]
   26d90:	lsl	x2, x19, #3
   26d94:	ldr	x0, [x21, x19, lsl #3]
   26d98:	add	x26, x21, x2
   26d9c:	add	x25, x22, x2
   26da0:	bl	87a0 <acc_is_present@plt>
   26da4:	cbnz	w0, 26d0c <GOACC_declare@@GOACC_2.0.1+0x5c>
   26da8:	ldr	x2, [x25]
   26dac:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   26db0:	ldr	x1, [x26]
   26db4:	add	x0, x0, #0x78
   26db8:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   26dbc:	cbnz	w5, 26ce8 <GOACC_declare@@GOACC_2.0.1+0x38>
   26dc0:	ldr	x1, [x22, x19, lsl #3]
   26dc4:	lsl	x3, x19, #3
   26dc8:	ldr	x0, [x21, x19, lsl #3]
   26dcc:	add	x26, x21, x3
   26dd0:	add	x25, x22, x3
   26dd4:	bl	87a0 <acc_is_present@plt>
   26dd8:	cbnz	w0, 26d0c <GOACC_declare@@GOACC_2.0.1+0x5c>
   26ddc:	mov	x3, x25
   26de0:	mov	x2, x26
   26de4:	mov	w6, #0x0                   	// #0
   26de8:	b	26cf8 <GOACC_declare@@GOACC_2.0.1+0x48>
   26dec:	cmp	w5, #0x7
   26df0:	b.eq	26ce8 <GOACC_declare@@GOACC_2.0.1+0x38>  // b.none
   26df4:	b	26d60 <GOACC_declare@@GOACC_2.0.1+0xb0>
   26df8:	ldp	x19, x20, [sp, #16]
   26dfc:	ldp	x21, x22, [sp, #32]
   26e00:	ldp	x23, x24, [sp, #48]
   26e04:	ldp	x25, x26, [sp, #64]
   26e08:	ldp	x29, x30, [sp], #80
   26e0c:	ret
   26e10:	ret
   26e14:	nop
   26e18:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   26e1c:	ldr	x0, [x0, #832]
   26e20:	ret
   26e24:	nop
   26e28:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   26e2c:	ldr	w0, [x0, #840]
   26e30:	ret
   26e34:	nop
   26e38:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   26e3c:	ldr	w0, [x0, #848]
   26e40:	ret
   26e44:	nop
   26e48:	mov	w0, #0x1                   	// #1
   26e4c:	ret
   26e50:	mov	w0, #0x1                   	// #1
   26e54:	ret
   26e58:	mov	w0, #0x1                   	// #1
   26e5c:	ret
   26e60:	mov	w0, #0x0                   	// #0
   26e64:	ret
   26e68:	mov	w0, #0x1                   	// #1
   26e6c:	ret
   26e70:	mov	w0, #0x1                   	// #1
   26e74:	ret
   26e78:	mov	x0, x2
   26e7c:	mov	x16, x1
   26e80:	br	x16
   26e84:	nop
   26e88:	mov	x16, x0
   26e8c:	mov	x0, x2
   26e90:	br	x16
   26e94:	nop
   26e98:	ret
   26e9c:	nop
   26ea0:	mov	w0, #0x1                   	// #1
   26ea4:	ret
   26ea8:	ret
   26eac:	nop
   26eb0:	ret
   26eb4:	nop
   26eb8:	ret
   26ebc:	nop
   26ec0:	mov	x0, #0x0                   	// #0
   26ec4:	ret
   26ec8:	ret
   26ecc:	nop
   26ed0:	stp	x29, x30, [sp, #-16]!
   26ed4:	mov	x0, x1
   26ed8:	mov	x29, sp
   26edc:	bl	88b0 <free@plt>
   26ee0:	mov	w0, #0x1                   	// #1
   26ee4:	ldp	x29, x30, [sp], #16
   26ee8:	ret
   26eec:	nop
   26ef0:	mov	x0, x1
   26ef4:	b	b2f8 <fprintf@plt+0x2838>
   26ef8:	ret
   26efc:	nop
   26f00:	mov	w0, #0x1                   	// #1
   26f04:	ret
   26f08:	mov	w0, #0x1                   	// #1
   26f0c:	ret
   26f10:	ret
   26f14:	nop
   26f18:	mov	w0, #0x1                   	// #1
   26f1c:	ret
   26f20:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   26f24:	add	x0, x0, #0x340
   26f28:	str	wzr, [x0, #168]
   26f2c:	b	27328 <GOACC_declare@@GOACC_2.0.1+0x678>
   26f30:	cmp	w0, #0x2
   26f34:	b.eq	26f88 <GOACC_declare@@GOACC_2.0.1+0x2d8>  // b.none
   26f38:	b.gt	26f54 <GOACC_declare@@GOACC_2.0.1+0x2a4>
   26f3c:	cbz	w0, 26f70 <GOACC_declare@@GOACC_2.0.1+0x2c0>
   26f40:	cmp	w0, #0x1
   26f44:	b.ne	26f94 <GOACC_declare@@GOACC_2.0.1+0x2e4>  // b.any
   26f48:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   26f4c:	add	x0, x0, #0x128
   26f50:	ret
   26f54:	cmp	w0, #0x4
   26f58:	b.eq	26f7c <GOACC_declare@@GOACC_2.0.1+0x2cc>  // b.none
   26f5c:	cmp	w0, #0x5
   26f60:	b.ne	26f94 <GOACC_declare@@GOACC_2.0.1+0x2e4>  // b.any
   26f64:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   26f68:	add	x0, x0, #0x130
   26f6c:	ret
   26f70:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   26f74:	add	x0, x0, #0x120
   26f78:	ret
   26f7c:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   26f80:	add	x0, x0, #0x110
   26f84:	ret
   26f88:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   26f8c:	add	x0, x0, #0x2e8
   26f90:	ret
   26f94:	stp	x29, x30, [sp, #-16]!
   26f98:	mov	w1, w0
   26f9c:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   26fa0:	mov	x29, sp
   26fa4:	add	x0, x0, #0x138
   26fa8:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   26fac:	nop
   26fb0:	stp	x29, x30, [sp, #-16]!
   26fb4:	mov	x29, sp
   26fb8:	cbnz	w2, 26fd0 <GOACC_declare@@GOACC_2.0.1+0x320>
   26fbc:	bl	26f30 <GOACC_declare@@GOACC_2.0.1+0x280>
   26fc0:	mov	x1, x0
   26fc4:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   26fc8:	add	x0, x0, #0x150
   26fcc:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   26fd0:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   26fd4:	add	x0, x0, #0x170
   26fd8:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   26fdc:	nop
   26fe0:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   26fe4:	add	x0, x0, #0x590
   26fe8:	ldxr	w1, [x0]
   26fec:	stlxr	w2, wzr, [x0]
   26ff0:	cbnz	w2, 26fe8 <GOACC_declare@@GOACC_2.0.1+0x338>
   26ff4:	tbnz	w1, #31, 26ffc <GOACC_declare@@GOACC_2.0.1+0x34c>
   26ff8:	ret
   26ffc:	b	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   27000:	stp	x29, x30, [sp, #-96]!
   27004:	cmp	w0, #0x2
   27008:	mov	x29, sp
   2700c:	stp	x19, x20, [sp, #16]
   27010:	mov	w20, w0
   27014:	stp	x21, x22, [sp, #32]
   27018:	adrp	x21, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   2701c:	stp	x23, x24, [sp, #48]
   27020:	and	w24, w1, #0xff
   27024:	b.eq	270a0 <GOACC_declare@@GOACC_2.0.1+0x3f0>  // b.none
   27028:	cmp	w0, #0x4
   2702c:	b.eq	27070 <GOACC_declare@@GOACC_2.0.1+0x3c0>  // b.none
   27030:	cmp	w0, #0x1
   27034:	b.eq	2705c <GOACC_declare@@GOACC_2.0.1+0x3ac>  // b.none
   27038:	cmp	w0, #0x6
   2703c:	b.le	27170 <GOACC_declare@@GOACC_2.0.1+0x4c0>
   27040:	cbnz	w24, 271c0 <GOACC_declare@@GOACC_2.0.1+0x510>
   27044:	mov	x0, #0x0                   	// #0
   27048:	ldp	x19, x20, [sp, #16]
   2704c:	ldp	x21, x22, [sp, #32]
   27050:	ldp	x23, x24, [sp, #48]
   27054:	ldp	x29, x30, [sp], #96
   27058:	ret
   2705c:	stp	x25, x26, [sp, #64]
   27060:	adrp	x25, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   27064:	ldr	x0, [x25, #1528]
   27068:	cbnz	x0, 270c4 <GOACC_declare@@GOACC_2.0.1+0x414>
   2706c:	ldp	x25, x26, [sp, #64]
   27070:	adrp	x21, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   27074:	add	x0, x21, #0x590
   27078:	ldr	x0, [x0, #56]
   2707c:	cbz	x0, 27090 <GOACC_declare@@GOACC_2.0.1+0x3e0>
   27080:	ldr	x0, [x0, #48]
   27084:	blr	x0
   27088:	cmp	w0, #0x0
   2708c:	b.gt	271a8 <GOACC_declare@@GOACC_2.0.1+0x4f8>
   27090:	cmp	w20, #0x1
   27094:	b.ne	2714c <GOACC_declare@@GOACC_2.0.1+0x49c>  // b.any
   27098:	mov	w20, #0x2                   	// #2
   2709c:	nop
   270a0:	add	x21, x21, #0x590
   270a4:	add	x21, x21, #0x10
   270a8:	ldr	x0, [x21, w20, sxtw #3]
   270ac:	cbz	x0, 27040 <GOACC_declare@@GOACC_2.0.1+0x390>
   270b0:	ldp	x19, x20, [sp, #16]
   270b4:	ldp	x21, x22, [sp, #32]
   270b8:	ldp	x23, x24, [sp, #48]
   270bc:	ldp	x29, x30, [sp], #96
   270c0:	ret
   270c4:	adrp	x21, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   270c8:	add	x21, x21, #0x590
   270cc:	adrp	x26, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   270d0:	add	x21, x21, #0x10
   270d4:	add	x26, x26, #0x130
   270d8:	stp	x27, x28, [sp, #80]
   270dc:	adrp	x27, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   270e0:	add	x27, x27, #0x188
   270e4:	mov	x19, #0x2                   	// #2
   270e8:	ldr	x22, [x21, x19, lsl #3]
   270ec:	mov	w20, w19
   270f0:	cbz	x22, 2712c <GOACC_declare@@GOACC_2.0.1+0x47c>
   270f4:	ldr	x23, [x22]
   270f8:	mov	x1, x27
   270fc:	ldr	x28, [x25, #1528]
   27100:	mov	x0, x23
   27104:	bl	8850 <strcmp@plt>
   27108:	cmp	w0, #0x0
   2710c:	csel	x1, x26, x23, eq  // eq = none
   27110:	mov	x0, x28
   27114:	bl	87b0 <strcasecmp@plt>
   27118:	cbnz	w0, 2712c <GOACC_declare@@GOACC_2.0.1+0x47c>
   2711c:	ldr	x0, [x22, #48]
   27120:	blr	x0
   27124:	cmp	w0, #0x0
   27128:	b.gt	27168 <GOACC_declare@@GOACC_2.0.1+0x4b8>
   2712c:	add	x19, x19, #0x1
   27130:	cmp	x19, #0x6
   27134:	b.ne	270e8 <GOACC_declare@@GOACC_2.0.1+0x438>  // b.any
   27138:	cbnz	w24, 271e4 <GOACC_declare@@GOACC_2.0.1+0x534>
   2713c:	mov	x0, #0x0                   	// #0
   27140:	ldp	x25, x26, [sp, #64]
   27144:	ldp	x27, x28, [sp, #80]
   27148:	b	27048 <GOACC_declare@@GOACC_2.0.1+0x398>
   2714c:	cbz	w24, 27044 <GOACC_declare@@GOACC_2.0.1+0x394>
   27150:	stp	x25, x26, [sp, #64]
   27154:	stp	x27, x28, [sp, #80]
   27158:	bl	26fe0 <GOACC_declare@@GOACC_2.0.1+0x330>
   2715c:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   27160:	add	x0, x0, #0x1b0
   27164:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   27168:	ldp	x25, x26, [sp, #64]
   2716c:	ldp	x27, x28, [sp, #80]
   27170:	cmp	w20, #0x1
   27174:	ccmp	w20, #0x4, #0x4, hi  // hi = pmore
   27178:	adrp	x21, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   2717c:	b.ne	270a0 <GOACC_declare@@GOACC_2.0.1+0x3f0>  // b.any
   27180:	adrp	x3, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   27184:	adrp	x1, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   27188:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2718c:	add	x3, x3, #0x410
   27190:	add	x1, x1, #0x1c0
   27194:	add	x0, x0, #0x1e0
   27198:	mov	w2, #0xb6                  	// #182
   2719c:	stp	x25, x26, [sp, #64]
   271a0:	stp	x27, x28, [sp, #80]
   271a4:	bl	8a60 <__assert_fail@plt>
   271a8:	add	x21, x21, #0x590
   271ac:	mov	w20, #0x5                   	// #5
   271b0:	add	x21, x21, #0x10
   271b4:	ldr	x0, [x21, w20, sxtw #3]
   271b8:	cbnz	x0, 270b0 <GOACC_declare@@GOACC_2.0.1+0x400>
   271bc:	b	27040 <GOACC_declare@@GOACC_2.0.1+0x390>
   271c0:	stp	x25, x26, [sp, #64]
   271c4:	stp	x27, x28, [sp, #80]
   271c8:	bl	26fe0 <GOACC_declare@@GOACC_2.0.1+0x330>
   271cc:	mov	w0, w20
   271d0:	bl	26f30 <GOACC_declare@@GOACC_2.0.1+0x280>
   271d4:	mov	x1, x0
   271d8:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   271dc:	add	x0, x0, #0x190
   271e0:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   271e4:	bl	26fe0 <GOACC_declare@@GOACC_2.0.1+0x330>
   271e8:	ldr	x1, [x25, #1528]
   271ec:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   271f0:	add	x0, x0, #0x190
   271f4:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   271f8:	stp	x29, x30, [sp, #-32]!
   271fc:	mov	w2, #0x1                   	// #1
   27200:	mov	x29, sp
   27204:	stp	x19, x20, [sp, #16]
   27208:	adrp	x20, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   2720c:	add	x1, x20, #0x590
   27210:	mov	x19, x0
   27214:	add	x0, x1, #0x40
   27218:	ldaxr	w1, [x0]
   2721c:	cbnz	w1, 27228 <GOACC_declare@@GOACC_2.0.1+0x578>
   27220:	stxr	w3, w2, [x0]
   27224:	cbnz	w3, 27218 <GOACC_declare@@GOACC_2.0.1+0x568>
   27228:	cmp	w1, #0x0
   2722c:	b.ne	272f8 <GOACC_declare@@GOACC_2.0.1+0x648>  // b.any
   27230:	cbz	x19, 272c0 <GOACC_declare@@GOACC_2.0.1+0x610>
   27234:	ldr	x1, [x19, #8]
   27238:	cbz	x1, 27250 <GOACC_declare@@GOACC_2.0.1+0x5a0>
   2723c:	ldr	x0, [x19, #40]
   27240:	cbz	x0, 27250 <GOACC_declare@@GOACC_2.0.1+0x5a0>
   27244:	ldr	x1, [x1, #264]
   27248:	blr	x1
   2724c:	str	xzr, [x19, #40]
   27250:	ldr	x0, [x19, #24]
   27254:	cbnz	x0, 27300 <GOACC_declare@@GOACC_2.0.1+0x650>
   27258:	add	x0, x20, #0x590
   2725c:	ldr	x2, [x0, #72]
   27260:	cbz	x2, 27290 <GOACC_declare@@GOACC_2.0.1+0x5e0>
   27264:	cmp	x19, x2
   27268:	ldr	x1, [x2, #32]
   2726c:	b.eq	272e4 <GOACC_declare@@GOACC_2.0.1+0x634>  // b.none
   27270:	cbz	x1, 27290 <GOACC_declare@@GOACC_2.0.1+0x5e0>
   27274:	nop
   27278:	cmp	x19, x1
   2727c:	ldr	x0, [x1, #32]
   27280:	b.eq	272b4 <GOACC_declare@@GOACC_2.0.1+0x604>  // b.none
   27284:	mov	x2, x1
   27288:	mov	x1, x0
   2728c:	cbnz	x1, 27278 <GOACC_declare@@GOACC_2.0.1+0x5c8>
   27290:	adrp	x3, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   27294:	add	x3, x3, #0x410
   27298:	adrp	x1, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2729c:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   272a0:	add	x3, x3, #0x10
   272a4:	add	x1, x1, #0x1c0
   272a8:	add	x0, x0, #0x248
   272ac:	mov	w2, #0x17c                 	// #380
   272b0:	bl	8a60 <__assert_fail@plt>
   272b4:	str	x0, [x2, #32]
   272b8:	mov	x0, x19
   272bc:	bl	88b0 <free@plt>
   272c0:	add	x0, x20, #0x590
   272c4:	add	x0, x0, #0x40
   272c8:	ldxr	w1, [x0]
   272cc:	stlxr	w2, wzr, [x0]
   272d0:	cbnz	w2, 272c8 <GOACC_declare@@GOACC_2.0.1+0x618>
   272d4:	tbnz	w1, #31, 272ec <GOACC_declare@@GOACC_2.0.1+0x63c>
   272d8:	ldp	x19, x20, [sp, #16]
   272dc:	ldp	x29, x30, [sp], #32
   272e0:	ret
   272e4:	str	x1, [x0, #72]
   272e8:	b	272b8 <GOACC_declare@@GOACC_2.0.1+0x608>
   272ec:	ldp	x19, x20, [sp, #16]
   272f0:	ldp	x29, x30, [sp], #32
   272f4:	b	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   272f8:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   272fc:	b	27230 <GOACC_declare@@GOACC_2.0.1+0x580>
   27300:	adrp	x3, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   27304:	add	x3, x3, #0x410
   27308:	adrp	x1, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2730c:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   27310:	add	x3, x3, #0x10
   27314:	add	x1, x1, #0x1c0
   27318:	add	x0, x0, #0x230
   2731c:	mov	w2, #0x16b                 	// #363
   27320:	bl	8a60 <__assert_fail@plt>
   27324:	nop
   27328:	stp	x29, x30, [sp, #-32]!
   2732c:	mov	x29, sp
   27330:	stp	x19, x20, [sp, #16]
   27334:	mov	x19, x0
   27338:	ldr	w0, [x0, #12]
   2733c:	cbnz	w0, 2739c <GOACC_declare@@GOACC_2.0.1+0x6ec>
   27340:	adrp	x20, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   27344:	add	x0, x20, #0x590
   27348:	mov	w2, #0x1                   	// #1
   2734c:	ldaxr	w1, [x0]
   27350:	cbnz	w1, 2735c <GOACC_declare@@GOACC_2.0.1+0x6ac>
   27354:	stxr	w3, w2, [x0]
   27358:	cbnz	w3, 2734c <GOACC_declare@@GOACC_2.0.1+0x69c>
   2735c:	cmp	w1, #0x0
   27360:	b.ne	273fc <GOACC_declare@@GOACC_2.0.1+0x74c>  // b.any
   27364:	ldr	w1, [x19, #16]
   27368:	cmp	w1, #0x4
   2736c:	ccmp	w1, #0x1, #0x0, ne  // ne = any
   27370:	b.ls	273b4 <GOACC_declare@@GOACC_2.0.1+0x704>  // b.plast
   27374:	add	x0, x20, #0x590
   27378:	mov	w1, w1
   2737c:	add	x2, x0, #0x10
   27380:	ldr	x3, [x2, x1, lsl #3]
   27384:	cbnz	x3, 273d8 <GOACC_declare@@GOACC_2.0.1+0x728>
   27388:	str	x19, [x2, x1, lsl #3]
   2738c:	ldxr	w1, [x0]
   27390:	stlxr	w2, wzr, [x0]
   27394:	cbnz	w2, 2738c <GOACC_declare@@GOACC_2.0.1+0x6dc>
   27398:	tbnz	w1, #31, 273a8 <GOACC_declare@@GOACC_2.0.1+0x6f8>
   2739c:	ldp	x19, x20, [sp, #16]
   273a0:	ldp	x29, x30, [sp], #32
   273a4:	ret
   273a8:	ldp	x19, x20, [sp, #16]
   273ac:	ldp	x29, x30, [sp], #32
   273b0:	b	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   273b4:	adrp	x3, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   273b8:	add	x3, x3, #0x410
   273bc:	adrp	x1, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   273c0:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   273c4:	add	x3, x3, #0x28
   273c8:	add	x1, x1, #0x1c0
   273cc:	add	x0, x0, #0x250
   273d0:	mov	w2, #0x4c                  	// #76
   273d4:	bl	8a60 <__assert_fail@plt>
   273d8:	adrp	x3, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   273dc:	add	x3, x3, #0x410
   273e0:	adrp	x1, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   273e4:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   273e8:	add	x3, x3, #0x28
   273ec:	add	x1, x1, #0x1c0
   273f0:	add	x0, x0, #0x2f0
   273f4:	mov	w2, #0x4f                  	// #79
   273f8:	bl	8a60 <__assert_fail@plt>
   273fc:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   27400:	b	27364 <GOACC_declare@@GOACC_2.0.1+0x6b4>
   27404:	nop
   27408:	stp	x29, x30, [sp, #-80]!
   2740c:	mov	x29, sp
   27410:	stp	x21, x22, [sp, #32]
   27414:	adrp	x22, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   27418:	ldr	x22, [x22, #4008]
   2741c:	stp	x19, x20, [sp, #16]
   27420:	mrs	x20, tpidr_el0
   27424:	mov	w19, w0
   27428:	stp	x23, x24, [sp, #48]
   2742c:	ldr	x23, [x20, x22]
   27430:	cbz	x23, 274d0 <GOACC_declare@@GOACC_2.0.1+0x820>
   27434:	ldr	x0, [x23, #8]
   27438:	cbz	x0, 274b0 <GOACC_declare@@GOACC_2.0.1+0x800>
   2743c:	ldr	w0, [x0, #12]
   27440:	cmp	w19, #0x0
   27444:	ccmp	w0, w19, #0x4, ge  // ge = tcont
   27448:	b.eq	2751c <GOACC_declare@@GOACC_2.0.1+0x86c>  // b.none
   2744c:	ldr	x21, [x23]
   27450:	cbz	x21, 274c8 <GOACC_declare@@GOACC_2.0.1+0x818>
   27454:	ldr	x0, [x21, #48]
   27458:	blr	x0
   2745c:	mov	w2, w0
   27460:	cmp	w19, #0x0
   27464:	csel	w0, w19, wzr, ge  // ge = tcont
   27468:	cmp	w2, w0
   2746c:	b.le	2759c <GOACC_declare@@GOACC_2.0.1+0x8ec>
   27470:	mov	w20, #0x130                 	// #304
   27474:	stp	xzr, xzr, [x23, #16]
   27478:	mov	w0, w19
   2747c:	smaddl	x20, w19, w20, x21
   27480:	ldr	x1, [x20, #256]
   27484:	stp	x21, x20, [x23]
   27488:	blr	x1
   2748c:	ldp	x21, x22, [sp, #32]
   27490:	ldr	x1, [x20, #248]
   27494:	ldp	x19, x20, [sp, #16]
   27498:	str	x0, [x23, #40]
   2749c:	ldp	x23, x24, [sp, #48]
   274a0:	mov	x16, x1
   274a4:	ldp	x29, x30, [sp], #80
   274a8:	mov	w0, #0xfffffffe            	// #-2
   274ac:	br	x16
   274b0:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   274b4:	cmp	w19, #0x0
   274b8:	ldr	x21, [x23]
   274bc:	ldr	w0, [x0, #1632]
   274c0:	csel	w19, w0, w19, lt  // lt = tstop
   274c4:	cbnz	x21, 27454 <GOACC_declare@@GOACC_2.0.1+0x7a4>
   274c8:	str	x25, [sp, #64]
   274cc:	b	274e4 <GOACC_declare@@GOACC_2.0.1+0x834>
   274d0:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   274d4:	cmp	w19, #0x0
   274d8:	str	x25, [sp, #64]
   274dc:	ldr	w0, [x0, #1632]
   274e0:	csel	w19, w0, w19, lt  // lt = tstop
   274e4:	adrp	x25, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   274e8:	add	x24, x25, #0x590
   274ec:	ldr	x21, [x24, #80]
   274f0:	cbz	x21, 275ac <GOACC_declare@@GOACC_2.0.1+0x8fc>
   274f4:	ldr	x0, [x21, #48]
   274f8:	blr	x0
   274fc:	mov	w2, w0
   27500:	cmp	w19, #0x0
   27504:	csel	w0, w19, wzr, ge  // ge = tcont
   27508:	cmp	w0, w2
   2750c:	b.ge	275a0 <GOACC_declare@@GOACC_2.0.1+0x8f0>  // b.tcont
   27510:	cbz	x23, 27530 <GOACC_declare@@GOACC_2.0.1+0x880>
   27514:	ldr	x25, [sp, #64]
   27518:	b	27470 <GOACC_declare@@GOACC_2.0.1+0x7c0>
   2751c:	ldp	x19, x20, [sp, #16]
   27520:	ldp	x21, x22, [sp, #32]
   27524:	ldp	x23, x24, [sp, #48]
   27528:	ldp	x29, x30, [sp], #80
   2752c:	ret
   27530:	mov	x0, #0x30                  	// #48
   27534:	bl	b2f8 <fprintf@plt+0x2838>
   27538:	mov	x1, x0
   2753c:	mov	x23, x0
   27540:	str	x0, [x20, x22]
   27544:	add	x24, x24, #0x40
   27548:	ldr	w0, [x24, #24]
   2754c:	bl	8960 <pthread_setspecific@plt>
   27550:	mov	w0, #0x1                   	// #1
   27554:	ldaxr	w1, [x24]
   27558:	cbnz	w1, 27564 <GOACC_declare@@GOACC_2.0.1+0x8b4>
   2755c:	stxr	w2, w0, [x24]
   27560:	cbnz	w2, 27554 <GOACC_declare@@GOACC_2.0.1+0x8a4>
   27564:	cmp	w1, #0x0
   27568:	b.ne	275d0 <GOACC_declare@@GOACC_2.0.1+0x920>  // b.any
   2756c:	add	x25, x25, #0x590
   27570:	add	x0, x25, #0x40
   27574:	ldr	x1, [x25, #72]
   27578:	str	x1, [x23, #32]
   2757c:	str	x23, [x25, #72]
   27580:	ldxr	w1, [x0]
   27584:	stlxr	w2, wzr, [x0]
   27588:	cbnz	w2, 27580 <GOACC_declare@@GOACC_2.0.1+0x8d0>
   2758c:	tbz	w1, #31, 27514 <GOACC_declare@@GOACC_2.0.1+0x864>
   27590:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   27594:	ldr	x25, [sp, #64]
   27598:	b	27470 <GOACC_declare@@GOACC_2.0.1+0x7c0>
   2759c:	str	x25, [sp, #64]
   275a0:	ldr	w0, [x21, #16]
   275a4:	mov	w1, w19
   275a8:	bl	26fb0 <GOACC_declare@@GOACC_2.0.1+0x300>
   275ac:	adrp	x3, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   275b0:	add	x3, x3, #0x410
   275b4:	adrp	x1, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   275b8:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   275bc:	add	x3, x3, #0x38
   275c0:	add	x1, x1, #0x1c0
   275c4:	add	x0, x0, #0x310
   275c8:	mov	w2, #0x19a                 	// #410
   275cc:	bl	8a60 <__assert_fail@plt>
   275d0:	mov	x0, x24
   275d4:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   275d8:	b	2756c <GOACC_declare@@GOACC_2.0.1+0x8bc>
   275dc:	nop

00000000000275e0 <acc_init@@OACC_2.0>:
   275e0:	stp	x29, x30, [sp, #-48]!
   275e4:	mov	x29, sp
   275e8:	stp	x19, x20, [sp, #16]
   275ec:	adrp	x19, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   275f0:	stp	x21, x22, [sp, #32]
   275f4:	mov	w22, w0
   275f8:	bl	20c30 <omp_get_place_proc_ids@@OMP_4.5+0x1a70>
   275fc:	add	x0, x19, #0x590
   27600:	mov	w2, #0x1                   	// #1
   27604:	ldaxr	w1, [x0]
   27608:	cbnz	w1, 27614 <acc_init@@OACC_2.0+0x34>
   2760c:	stxr	w3, w2, [x0]
   27610:	cbnz	w3, 27604 <acc_init@@OACC_2.0+0x24>
   27614:	cmp	w1, #0x0
   27618:	b.ne	27708 <acc_init@@OACC_2.0+0x128>  // b.any
   2761c:	mov	w1, #0x1                   	// #1
   27620:	mov	w0, w22
   27624:	bl	27000 <GOACC_declare@@GOACC_2.0.1+0x350>
   27628:	mov	x21, x0
   2762c:	ldr	x0, [x0, #48]
   27630:	blr	x0
   27634:	cmp	w0, #0x0
   27638:	adrp	x1, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   2763c:	b.le	276f8 <acc_init@@OACC_2.0+0x118>
   27640:	ldr	w20, [x1, #1632]
   27644:	cmp	w0, w20
   27648:	b.le	276f8 <acc_init@@OACC_2.0+0x118>
   2764c:	mov	w1, #0x130                 	// #304
   27650:	mov	w0, #0x1                   	// #1
   27654:	smaddl	x20, w20, w1, x21
   27658:	add	x22, x20, #0xa8
   2765c:	ldaxr	w1, [x22]
   27660:	cbnz	w1, 2766c <acc_init@@OACC_2.0+0x8c>
   27664:	stxr	w2, w0, [x22]
   27668:	cbnz	w2, 2765c <acc_init@@OACC_2.0+0x7c>
   2766c:	cmp	w1, #0x0
   27670:	b.ne	27710 <acc_init@@OACC_2.0+0x130>  // b.any
   27674:	ldr	w0, [x20, #172]
   27678:	cmp	w0, #0x1
   2767c:	b.eq	276dc <acc_init@@OACC_2.0+0xfc>  // b.none
   27680:	mov	x0, x20
   27684:	bl	22d80 <GOMP_offload_unregister@@GOMP_4.0.1+0x18>
   27688:	ldxr	w0, [x22]
   2768c:	stlxr	w1, wzr, [x22]
   27690:	cbnz	w1, 27688 <acc_init@@OACC_2.0+0xa8>
   27694:	tbnz	w0, #31, 276c4 <acc_init@@OACC_2.0+0xe4>
   27698:	add	x19, x19, #0x590
   2769c:	str	x21, [x19, #80]
   276a0:	ldxr	w0, [x19]
   276a4:	stlxr	w1, wzr, [x19]
   276a8:	cbnz	w1, 276a0 <acc_init@@OACC_2.0+0xc0>
   276ac:	tbnz	w0, #31, 276d0 <acc_init@@OACC_2.0+0xf0>
   276b0:	ldp	x19, x20, [sp, #16]
   276b4:	mov	w0, #0xffffffff            	// #-1
   276b8:	ldp	x21, x22, [sp, #32]
   276bc:	ldp	x29, x30, [sp], #48
   276c0:	b	27408 <GOACC_declare@@GOACC_2.0.1+0x758>
   276c4:	mov	x0, x22
   276c8:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   276cc:	b	27698 <acc_init@@OACC_2.0+0xb8>
   276d0:	mov	x0, x19
   276d4:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   276d8:	b	276b0 <acc_init@@OACC_2.0+0xd0>
   276dc:	ldxr	w0, [x22]
   276e0:	stlxr	w1, wzr, [x22]
   276e4:	cbnz	w1, 276dc <acc_init@@OACC_2.0+0xfc>
   276e8:	tbnz	w0, #31, 2771c <acc_init@@OACC_2.0+0x13c>
   276ec:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   276f0:	add	x0, x0, #0x320
   276f4:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   276f8:	ldr	w1, [x1, #1632]
   276fc:	mov	w2, w0
   27700:	mov	w0, w22
   27704:	bl	26fb0 <GOACC_declare@@GOACC_2.0.1+0x300>
   27708:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   2770c:	b	2761c <acc_init@@OACC_2.0+0x3c>
   27710:	mov	x0, x22
   27714:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   27718:	b	27674 <acc_init@@OACC_2.0+0x94>
   2771c:	mov	x0, x22
   27720:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   27724:	b	276ec <acc_init@@OACC_2.0+0x10c>

0000000000027728 <acc_shutdown@@OACC_2.0>:
   27728:	stp	x29, x30, [sp, #-80]!
   2772c:	mov	x29, sp
   27730:	stp	x19, x20, [sp, #16]
   27734:	mov	w19, w0
   27738:	stp	x21, x22, [sp, #32]
   2773c:	adrp	x21, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   27740:	stp	x23, x24, [sp, #48]
   27744:	str	x25, [sp, #64]
   27748:	bl	20c30 <omp_get_place_proc_ids@@OMP_4.5+0x1a70>
   2774c:	add	x0, x21, #0x590
   27750:	mov	w2, #0x1                   	// #1
   27754:	ldaxr	w1, [x0]
   27758:	cbnz	w1, 27764 <acc_shutdown@@OACC_2.0+0x3c>
   2775c:	stxr	w3, w2, [x0]
   27760:	cbnz	w3, 27754 <acc_shutdown@@OACC_2.0+0x2c>
   27764:	cmp	w1, #0x0
   27768:	b.ne	27a34 <acc_shutdown@@OACC_2.0+0x30c>  // b.any
   2776c:	mov	w1, #0x1                   	// #1
   27770:	mov	w0, w19
   27774:	bl	27000 <GOACC_declare@@GOACC_2.0.1+0x350>
   27778:	mov	x20, x0
   2777c:	ldr	x0, [x0, #48]
   27780:	blr	x0
   27784:	mov	w22, w0
   27788:	cmp	w0, #0x0
   2778c:	b.le	277e8 <acc_shutdown@@OACC_2.0+0xc0>
   27790:	sub	w23, w0, #0x1
   27794:	add	x0, x20, #0x1d8
   27798:	mov	w1, #0x130                 	// #304
   2779c:	add	x19, x20, #0xa8
   277a0:	mov	w25, #0x1                   	// #1
   277a4:	umaddl	x23, w23, w1, x0
   277a8:	sub	x24, x19, #0xa8
   277ac:	ldaxr	w1, [x19]
   277b0:	cbnz	w1, 277bc <acc_shutdown@@OACC_2.0+0x94>
   277b4:	stxr	w0, w25, [x19]
   277b8:	cbnz	w0, 277ac <acc_shutdown@@OACC_2.0+0x84>
   277bc:	cmp	w1, #0x0
   277c0:	b.ne	27a18 <acc_shutdown@@OACC_2.0+0x2f0>  // b.any
   277c4:	mov	x0, x24
   277c8:	bl	22fa0 <GOMP_offload_unregister@@GOMP_4.0.1+0x238>
   277cc:	ldxr	w0, [x19]
   277d0:	stlxr	w1, wzr, [x19]
   277d4:	cbnz	w1, 277cc <acc_shutdown@@OACC_2.0+0xa4>
   277d8:	tbnz	w0, #31, 27984 <acc_shutdown@@OACC_2.0+0x25c>
   277dc:	add	x19, x19, #0x130
   277e0:	cmp	x23, x19
   277e4:	b.ne	277a8 <acc_shutdown@@OACC_2.0+0x80>  // b.any
   277e8:	add	x2, x21, #0x590
   277ec:	mov	w0, #0x1                   	// #1
   277f0:	add	x2, x2, #0x40
   277f4:	ldaxr	w1, [x2]
   277f8:	cbnz	w1, 27804 <acc_shutdown@@OACC_2.0+0xdc>
   277fc:	stxr	w3, w0, [x2]
   27800:	cbnz	w3, 277f4 <acc_shutdown@@OACC_2.0+0xcc>
   27804:	cmp	w1, #0x0
   27808:	b.ne	27a3c <acc_shutdown@@OACC_2.0+0x314>  // b.any
   2780c:	add	x0, x21, #0x590
   27810:	ldr	x19, [x0, #72]
   27814:	cbz	x19, 27898 <acc_shutdown@@OACC_2.0+0x170>
   27818:	mov	w23, #0x1                   	// #1
   2781c:	nop
   27820:	ldr	x0, [x19, #40]
   27824:	cbz	x0, 27830 <acc_shutdown@@OACC_2.0+0x108>
   27828:	ldr	x1, [x20, #264]
   2782c:	blr	x1
   27830:	ldr	x0, [x19, #24]
   27834:	str	xzr, [x19, #40]
   27838:	cbnz	x0, 279bc <acc_shutdown@@OACC_2.0+0x294>
   2783c:	ldr	x0, [x19, #16]
   27840:	cbnz	x0, 279e0 <acc_shutdown@@OACC_2.0+0x2b8>
   27844:	ldr	x0, [x19, #8]
   27848:	cbz	x0, 27890 <acc_shutdown@@OACC_2.0+0x168>
   2784c:	add	x0, x0, #0xa8
   27850:	ldaxr	w1, [x0]
   27854:	cbnz	w1, 27860 <acc_shutdown@@OACC_2.0+0x138>
   27858:	stxr	w2, w23, [x0]
   2785c:	cbnz	w2, 27850 <acc_shutdown@@OACC_2.0+0x128>
   27860:	cmp	w1, #0x0
   27864:	b.ne	27a04 <acc_shutdown@@OACC_2.0+0x2dc>  // b.any
   27868:	ldr	x0, [x19, #8]
   2786c:	add	x0, x0, #0xa0
   27870:	bl	23048 <GOMP_offload_unregister@@GOMP_4.0.1+0x2e0>
   27874:	ldr	x0, [x19, #8]
   27878:	add	x0, x0, #0xa8
   2787c:	ldxr	w1, [x0]
   27880:	stlxr	w2, wzr, [x0]
   27884:	cbnz	w2, 2787c <acc_shutdown@@OACC_2.0+0x154>
   27888:	tbnz	w1, #31, 2797c <acc_shutdown@@OACC_2.0+0x254>
   2788c:	stp	xzr, xzr, [x19]
   27890:	ldr	x19, [x19, #32]
   27894:	cbnz	x19, 27820 <acc_shutdown@@OACC_2.0+0xf8>
   27898:	add	x0, x21, #0x590
   2789c:	add	x0, x0, #0x40
   278a0:	ldxr	w1, [x0]
   278a4:	stlxr	w2, wzr, [x0]
   278a8:	cbnz	w2, 278a0 <acc_shutdown@@OACC_2.0+0x178>
   278ac:	tbnz	w1, #31, 279b4 <acc_shutdown@@OACC_2.0+0x28c>
   278b0:	cmp	w22, #0x0
   278b4:	b.le	27990 <acc_shutdown@@OACC_2.0+0x268>
   278b8:	add	x19, x20, #0xa8
   278bc:	mov	w24, #0x0                   	// #0
   278c0:	mov	w20, #0x1                   	// #1
   278c4:	mov	w23, #0x0                   	// #0
   278c8:	mov	w25, w20
   278cc:	b	278e0 <acc_shutdown@@OACC_2.0+0x1b8>
   278d0:	add	w23, w23, #0x1
   278d4:	add	x19, x19, #0x130
   278d8:	cmp	w22, w23
   278dc:	b.le	27948 <acc_shutdown@@OACC_2.0+0x220>
   278e0:	ldaxr	w1, [x19]
   278e4:	cbnz	w1, 278f0 <acc_shutdown@@OACC_2.0+0x1c8>
   278e8:	stxr	w0, w25, [x19]
   278ec:	cbnz	w0, 278e0 <acc_shutdown@@OACC_2.0+0x1b8>
   278f0:	cmp	w1, #0x0
   278f4:	b.ne	27a0c <acc_shutdown@@OACC_2.0+0x2e4>  // b.any
   278f8:	ldr	w1, [x19, #4]
   278fc:	cmp	w1, #0x1
   27900:	b.ne	2791c <acc_shutdown@@OACC_2.0+0x1f4>  // b.any
   27904:	ldur	w0, [x19, #-156]
   27908:	mov	w24, w1
   2790c:	ldur	x1, [x19, #-104]
   27910:	blr	x1
   27914:	and	w20, w20, w0
   27918:	str	wzr, [x19, #4]
   2791c:	ldxr	w0, [x19]
   27920:	stlxr	w1, wzr, [x19]
   27924:	cbnz	w1, 2791c <acc_shutdown@@OACC_2.0+0x1f4>
   27928:	tbz	w0, #31, 278d0 <acc_shutdown@@OACC_2.0+0x1a8>
   2792c:	mov	x0, x19
   27930:	add	w23, w23, #0x1
   27934:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   27938:	add	x19, x19, #0x130
   2793c:	cmp	w22, w23
   27940:	b.gt	278e0 <acc_shutdown@@OACC_2.0+0x1b8>
   27944:	nop
   27948:	cbz	w20, 27a48 <acc_shutdown@@OACC_2.0+0x320>
   2794c:	cbz	w24, 27990 <acc_shutdown@@OACC_2.0+0x268>
   27950:	add	x0, x21, #0x590
   27954:	ldxr	w1, [x0]
   27958:	stlxr	w2, wzr, [x0]
   2795c:	cbnz	w2, 27954 <acc_shutdown@@OACC_2.0+0x22c>
   27960:	tbnz	w1, #31, 2799c <acc_shutdown@@OACC_2.0+0x274>
   27964:	ldp	x19, x20, [sp, #16]
   27968:	ldp	x21, x22, [sp, #32]
   2796c:	ldp	x23, x24, [sp, #48]
   27970:	ldr	x25, [sp, #64]
   27974:	ldp	x29, x30, [sp], #80
   27978:	ret
   2797c:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   27980:	b	2788c <acc_shutdown@@OACC_2.0+0x164>
   27984:	mov	x0, x19
   27988:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   2798c:	b	277dc <acc_shutdown@@OACC_2.0+0xb4>
   27990:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   27994:	add	x0, x0, #0x378
   27998:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2799c:	ldp	x19, x20, [sp, #16]
   279a0:	ldp	x21, x22, [sp, #32]
   279a4:	ldp	x23, x24, [sp, #48]
   279a8:	ldr	x25, [sp, #64]
   279ac:	ldp	x29, x30, [sp], #80
   279b0:	b	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   279b4:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   279b8:	b	278b0 <acc_shutdown@@OACC_2.0+0x188>
   279bc:	add	x0, x21, #0x590
   279c0:	add	x0, x0, #0x40
   279c4:	ldxr	w1, [x0]
   279c8:	stlxr	w2, wzr, [x0]
   279cc:	cbnz	w2, 279c4 <acc_shutdown@@OACC_2.0+0x29c>
   279d0:	tbnz	w1, #31, 27a24 <acc_shutdown@@OACC_2.0+0x2fc>
   279d4:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   279d8:	add	x0, x0, #0x338
   279dc:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   279e0:	add	x0, x21, #0x590
   279e4:	add	x0, x0, #0x40
   279e8:	ldxr	w1, [x0]
   279ec:	stlxr	w2, wzr, [x0]
   279f0:	cbnz	w2, 279e8 <acc_shutdown@@OACC_2.0+0x2c0>
   279f4:	tbnz	w1, #31, 27a2c <acc_shutdown@@OACC_2.0+0x304>
   279f8:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   279fc:	add	x0, x0, #0x358
   27a00:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   27a04:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   27a08:	b	27868 <acc_shutdown@@OACC_2.0+0x140>
   27a0c:	mov	x0, x19
   27a10:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   27a14:	b	278f8 <acc_shutdown@@OACC_2.0+0x1d0>
   27a18:	mov	x0, x19
   27a1c:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   27a20:	b	277c4 <acc_shutdown@@OACC_2.0+0x9c>
   27a24:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   27a28:	b	279d4 <acc_shutdown@@OACC_2.0+0x2ac>
   27a2c:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   27a30:	b	279f8 <acc_shutdown@@OACC_2.0+0x2d0>
   27a34:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   27a38:	b	2776c <acc_shutdown@@OACC_2.0+0x44>
   27a3c:	mov	x0, x2
   27a40:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   27a44:	b	2780c <acc_shutdown@@OACC_2.0+0xe4>
   27a48:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   27a4c:	add	x0, x0, #0xa58
   27a50:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   27a54:	nop

0000000000027a58 <acc_get_num_devices@@OACC_2.0>:
   27a58:	cbnz	w0, 27a64 <acc_get_num_devices@@OACC_2.0+0xc>
   27a5c:	mov	w0, #0x0                   	// #0
   27a60:	ret
   27a64:	stp	x29, x30, [sp, #-32]!
   27a68:	mov	x29, sp
   27a6c:	stp	x19, x20, [sp, #16]
   27a70:	mov	w19, w0
   27a74:	bl	20c30 <omp_get_place_proc_ids@@OMP_4.5+0x1a70>
   27a78:	adrp	x20, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   27a7c:	add	x0, x20, #0x590
   27a80:	mov	w2, #0x1                   	// #1
   27a84:	ldaxr	w1, [x0]
   27a88:	cbnz	w1, 27a94 <acc_get_num_devices@@OACC_2.0+0x3c>
   27a8c:	stxr	w3, w2, [x0]
   27a90:	cbnz	w3, 27a84 <acc_get_num_devices@@OACC_2.0+0x2c>
   27a94:	cmp	w1, #0x0
   27a98:	b.ne	27afc <acc_get_num_devices@@OACC_2.0+0xa4>  // b.any
   27a9c:	mov	w0, w19
   27aa0:	mov	w1, #0x0                   	// #0
   27aa4:	add	x20, x20, #0x590
   27aa8:	bl	27000 <GOACC_declare@@GOACC_2.0.1+0x350>
   27aac:	mov	x19, x0
   27ab0:	ldxr	w0, [x20]
   27ab4:	stlxr	w1, wzr, [x20]
   27ab8:	cbnz	w1, 27ab0 <acc_get_num_devices@@OACC_2.0+0x58>
   27abc:	tbnz	w0, #31, 27af0 <acc_get_num_devices@@OACC_2.0+0x98>
   27ac0:	cbz	x19, 27ae0 <acc_get_num_devices@@OACC_2.0+0x88>
   27ac4:	ldr	x0, [x19, #48]
   27ac8:	blr	x0
   27acc:	cmp	w0, #0x0
   27ad0:	csel	w0, w0, wzr, ge  // ge = tcont
   27ad4:	ldp	x19, x20, [sp, #16]
   27ad8:	ldp	x29, x30, [sp], #32
   27adc:	ret
   27ae0:	mov	w0, #0x0                   	// #0
   27ae4:	ldp	x19, x20, [sp, #16]
   27ae8:	ldp	x29, x30, [sp], #32
   27aec:	ret
   27af0:	mov	x0, x20
   27af4:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   27af8:	b	27ac0 <acc_get_num_devices@@OACC_2.0+0x68>
   27afc:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   27b00:	b	27a9c <acc_get_num_devices@@OACC_2.0+0x44>
   27b04:	nop

0000000000027b08 <acc_set_device_type@@OACC_2.0>:
   27b08:	adrp	x1, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   27b0c:	ldr	x1, [x1, #4008]
   27b10:	mrs	x2, tpidr_el0
   27b14:	stp	x29, x30, [sp, #-64]!
   27b18:	mov	x29, sp
   27b1c:	stp	x19, x20, [sp, #16]
   27b20:	mov	w20, w0
   27b24:	adrp	x19, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   27b28:	stp	x21, x22, [sp, #32]
   27b2c:	str	x23, [sp, #48]
   27b30:	ldr	x23, [x2, x1]
   27b34:	bl	20c30 <omp_get_place_proc_ids@@OMP_4.5+0x1a70>
   27b38:	add	x0, x19, #0x590
   27b3c:	mov	w2, #0x1                   	// #1
   27b40:	ldaxr	w1, [x0]
   27b44:	cbnz	w1, 27b50 <acc_set_device_type@@OACC_2.0+0x48>
   27b48:	stxr	w3, w2, [x0]
   27b4c:	cbnz	w3, 27b40 <acc_set_device_type@@OACC_2.0+0x38>
   27b50:	cmp	w1, #0x0
   27b54:	b.ne	27c30 <acc_set_device_type@@OACC_2.0+0x128>  // b.any
   27b58:	mov	w0, w20
   27b5c:	mov	w1, #0x1                   	// #1
   27b60:	bl	27000 <GOACC_declare@@GOACC_2.0.1+0x350>
   27b64:	mov	x20, x0
   27b68:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   27b6c:	mov	w1, #0x130                 	// #304
   27b70:	add	x0, x19, #0x590
   27b74:	ldr	w21, [x2, #1632]
   27b78:	mov	w2, #0x1                   	// #1
   27b7c:	str	x20, [x0, #80]
   27b80:	smaddl	x21, w21, w1, x20
   27b84:	add	x22, x21, #0xa8
   27b88:	ldaxr	w1, [x22]
   27b8c:	cbnz	w1, 27b98 <acc_set_device_type@@OACC_2.0+0x90>
   27b90:	stxr	w0, w2, [x22]
   27b94:	cbnz	w0, 27b88 <acc_set_device_type@@OACC_2.0+0x80>
   27b98:	cmp	w1, #0x0
   27b9c:	b.ne	27c24 <acc_set_device_type@@OACC_2.0+0x11c>  // b.any
   27ba0:	ldr	w0, [x21, #172]
   27ba4:	cbz	w0, 27c00 <acc_set_device_type@@OACC_2.0+0xf8>
   27ba8:	ldxr	w0, [x22]
   27bac:	stlxr	w1, wzr, [x22]
   27bb0:	cbnz	w1, 27ba8 <acc_set_device_type@@OACC_2.0+0xa0>
   27bb4:	tbnz	w0, #31, 27c18 <acc_set_device_type@@OACC_2.0+0x110>
   27bb8:	add	x19, x19, #0x590
   27bbc:	ldxr	w0, [x19]
   27bc0:	stlxr	w1, wzr, [x19]
   27bc4:	cbnz	w1, 27bbc <acc_set_device_type@@OACC_2.0+0xb4>
   27bc8:	tbnz	w0, #31, 27c0c <acc_set_device_type@@OACC_2.0+0x104>
   27bcc:	cbz	x23, 27be8 <acc_set_device_type@@OACC_2.0+0xe0>
   27bd0:	ldr	x0, [x23]
   27bd4:	cmp	x0, x20
   27bd8:	b.eq	27be8 <acc_set_device_type@@OACC_2.0+0xe0>  // b.none
   27bdc:	ldr	x0, [x23, #24]
   27be0:	stp	xzr, xzr, [x23]
   27be4:	cbnz	x0, 27c38 <acc_set_device_type@@OACC_2.0+0x130>
   27be8:	ldp	x19, x20, [sp, #16]
   27bec:	mov	w0, #0xffffffff            	// #-1
   27bf0:	ldp	x21, x22, [sp, #32]
   27bf4:	ldr	x23, [sp, #48]
   27bf8:	ldp	x29, x30, [sp], #64
   27bfc:	b	27408 <GOACC_declare@@GOACC_2.0.1+0x758>
   27c00:	mov	x0, x21
   27c04:	bl	22d80 <GOMP_offload_unregister@@GOMP_4.0.1+0x18>
   27c08:	b	27ba8 <acc_set_device_type@@OACC_2.0+0xa0>
   27c0c:	mov	x0, x19
   27c10:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   27c14:	b	27bcc <acc_set_device_type@@OACC_2.0+0xc4>
   27c18:	mov	x0, x22
   27c1c:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   27c20:	b	27bb8 <acc_set_device_type@@OACC_2.0+0xb0>
   27c24:	mov	x0, x22
   27c28:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   27c2c:	b	27ba0 <acc_set_device_type@@OACC_2.0+0x98>
   27c30:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   27c34:	b	27b58 <acc_set_device_type@@OACC_2.0+0x50>
   27c38:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   27c3c:	add	x0, x0, #0x390
   27c40:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   27c44:	nop

0000000000027c48 <acc_get_device_type@@OACC_2.0>:
   27c48:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   27c4c:	ldr	x0, [x0, #4008]
   27c50:	mrs	x1, tpidr_el0
   27c54:	stp	x29, x30, [sp, #-32]!
   27c58:	mov	x29, sp
   27c5c:	ldr	x0, [x1, x0]
   27c60:	cbz	x0, 27c84 <acc_get_device_type@@OACC_2.0+0x3c>
   27c64:	ldr	x0, [x0]
   27c68:	cbz	x0, 27c84 <acc_get_device_type@@OACC_2.0+0x3c>
   27c6c:	ldr	w0, [x0, #16]
   27c70:	cmp	w0, #0x1
   27c74:	ccmp	w0, #0x4, #0x4, ne  // ne = any
   27c78:	b.eq	27cec <acc_get_device_type@@OACC_2.0+0xa4>  // b.none
   27c7c:	ldp	x29, x30, [sp], #32
   27c80:	ret
   27c84:	stp	x19, x20, [sp, #16]
   27c88:	bl	20c30 <omp_get_place_proc_ids@@OMP_4.5+0x1a70>
   27c8c:	adrp	x19, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   27c90:	add	x0, x19, #0x590
   27c94:	mov	w2, #0x1                   	// #1
   27c98:	ldaxr	w1, [x0]
   27c9c:	cbnz	w1, 27ca8 <acc_get_device_type@@OACC_2.0+0x60>
   27ca0:	stxr	w3, w2, [x0]
   27ca4:	cbnz	w3, 27c98 <acc_get_device_type@@OACC_2.0+0x50>
   27ca8:	cmp	w1, #0x0
   27cac:	b.ne	27d14 <acc_get_device_type@@OACC_2.0+0xcc>  // b.any
   27cb0:	mov	w1, #0x1                   	// #1
   27cb4:	mov	w0, #0x1                   	// #1
   27cb8:	add	x19, x19, #0x590
   27cbc:	bl	27000 <GOACC_declare@@GOACC_2.0.1+0x350>
   27cc0:	mov	x20, x0
   27cc4:	ldxr	w0, [x19]
   27cc8:	stlxr	w1, wzr, [x19]
   27ccc:	cbnz	w1, 27cc4 <acc_get_device_type@@OACC_2.0+0x7c>
   27cd0:	tbnz	w0, #31, 27ce0 <acc_get_device_type@@OACC_2.0+0x98>
   27cd4:	ldr	w0, [x20, #16]
   27cd8:	ldp	x19, x20, [sp, #16]
   27cdc:	b	27c70 <acc_get_device_type@@OACC_2.0+0x28>
   27ce0:	mov	x0, x19
   27ce4:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   27ce8:	b	27cd4 <acc_get_device_type@@OACC_2.0+0x8c>
   27cec:	adrp	x3, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   27cf0:	add	x3, x3, #0x410
   27cf4:	adrp	x1, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   27cf8:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   27cfc:	add	x3, x3, #0x60
   27d00:	add	x1, x1, #0x1c0
   27d04:	add	x0, x0, #0x3c0
   27d08:	mov	w2, #0x226                 	// #550
   27d0c:	stp	x19, x20, [sp, #16]
   27d10:	bl	8a60 <__assert_fail@plt>
   27d14:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   27d18:	b	27cb0 <acc_get_device_type@@OACC_2.0+0x68>
   27d1c:	nop

0000000000027d20 <acc_get_device_num@@OACC_2.0>:
   27d20:	stp	x29, x30, [sp, #-48]!
   27d24:	mrs	x2, tpidr_el0
   27d28:	adrp	x1, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   27d2c:	ldr	x1, [x1, #4008]
   27d30:	mov	x29, sp
   27d34:	stp	x19, x20, [sp, #16]
   27d38:	cmp	w0, #0x5
   27d3c:	mov	w20, w0
   27d40:	str	x21, [sp, #32]
   27d44:	ldr	x21, [x2, x1]
   27d48:	b.gt	27de8 <acc_get_device_num@@OACC_2.0+0xc8>
   27d4c:	bl	20c30 <omp_get_place_proc_ids@@OMP_4.5+0x1a70>
   27d50:	adrp	x19, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   27d54:	add	x0, x19, #0x590
   27d58:	mov	w2, #0x1                   	// #1
   27d5c:	ldaxr	w1, [x0]
   27d60:	cbnz	w1, 27d6c <acc_get_device_num@@OACC_2.0+0x4c>
   27d64:	stxr	w3, w2, [x0]
   27d68:	cbnz	w3, 27d5c <acc_get_device_num@@OACC_2.0+0x3c>
   27d6c:	cmp	w1, #0x0
   27d70:	b.ne	27df8 <acc_get_device_num@@OACC_2.0+0xd8>  // b.any
   27d74:	mov	w0, w20
   27d78:	mov	w1, #0x1                   	// #1
   27d7c:	add	x19, x19, #0x590
   27d80:	bl	27000 <GOACC_declare@@GOACC_2.0.1+0x350>
   27d84:	mov	x20, x0
   27d88:	ldxr	w0, [x19]
   27d8c:	stlxr	w1, wzr, [x19]
   27d90:	cbnz	w1, 27d88 <acc_get_device_num@@OACC_2.0+0x68>
   27d94:	tbnz	w0, #31, 27ddc <acc_get_device_num@@OACC_2.0+0xbc>
   27d98:	cbz	x21, 27da8 <acc_get_device_num@@OACC_2.0+0x88>
   27d9c:	ldr	x0, [x21]
   27da0:	cmp	x0, x20
   27da4:	b.eq	27dc0 <acc_get_device_num@@OACC_2.0+0xa0>  // b.none
   27da8:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   27dac:	ldp	x19, x20, [sp, #16]
   27db0:	ldr	w0, [x0, #1632]
   27db4:	ldr	x21, [sp, #32]
   27db8:	ldp	x29, x30, [sp], #48
   27dbc:	ret
   27dc0:	ldr	x0, [x21, #8]
   27dc4:	cbz	x0, 27da8 <acc_get_device_num@@OACC_2.0+0x88>
   27dc8:	ldr	w0, [x0, #12]
   27dcc:	ldp	x19, x20, [sp, #16]
   27dd0:	ldr	x21, [sp, #32]
   27dd4:	ldp	x29, x30, [sp], #48
   27dd8:	ret
   27ddc:	mov	x0, x19
   27de0:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   27de4:	b	27d98 <acc_get_device_num@@OACC_2.0+0x78>
   27de8:	mov	w1, w0
   27dec:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   27df0:	add	x0, x0, #0x138
   27df4:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   27df8:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   27dfc:	b	27d74 <acc_get_device_num@@OACC_2.0+0x54>

0000000000027e00 <acc_set_device_num@@OACC_2.0>:
   27e00:	stp	x29, x30, [sp, #-48]!
   27e04:	mov	x29, sp
   27e08:	stp	x19, x20, [sp, #16]
   27e0c:	mov	w19, w0
   27e10:	stp	x21, x22, [sp, #32]
   27e14:	mov	w21, w1
   27e18:	bl	20c30 <omp_get_place_proc_ids@@OMP_4.5+0x1a70>
   27e1c:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   27e20:	cmp	w19, #0x0
   27e24:	ldr	w0, [x0, #1632]
   27e28:	csel	w19, w0, w19, lt  // lt = tstop
   27e2c:	cbz	w21, 27ed8 <acc_set_device_num@@OACC_2.0+0xd8>
   27e30:	adrp	x20, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   27e34:	add	x0, x20, #0x590
   27e38:	mov	w2, #0x1                   	// #1
   27e3c:	ldaxr	w1, [x0]
   27e40:	cbnz	w1, 27e4c <acc_set_device_num@@OACC_2.0+0x4c>
   27e44:	stxr	w3, w2, [x0]
   27e48:	cbnz	w3, 27e3c <acc_set_device_num@@OACC_2.0+0x3c>
   27e4c:	cmp	w1, #0x0
   27e50:	b.ne	27f34 <acc_set_device_num@@OACC_2.0+0x134>  // b.any
   27e54:	mov	w1, #0x1                   	// #1
   27e58:	mov	w0, w21
   27e5c:	bl	27000 <GOACC_declare@@GOACC_2.0.1+0x350>
   27e60:	mov	x22, x0
   27e64:	add	x0, x20, #0x590
   27e68:	ldr	x1, [x22, #48]
   27e6c:	str	x22, [x0, #80]
   27e70:	blr	x1
   27e74:	cmp	w19, #0x0
   27e78:	csel	w1, w19, wzr, ge  // ge = tcont
   27e7c:	cmp	w0, w1
   27e80:	b.le	27f24 <acc_set_device_num@@OACC_2.0+0x124>
   27e84:	mov	w0, #0x130                 	// #304
   27e88:	mov	w2, #0x1                   	// #1
   27e8c:	smaddl	x22, w19, w0, x22
   27e90:	add	x21, x22, #0xa8
   27e94:	ldaxr	w1, [x21]
   27e98:	cbnz	w1, 27ea4 <acc_set_device_num@@OACC_2.0+0xa4>
   27e9c:	stxr	w0, w2, [x21]
   27ea0:	cbnz	w0, 27e94 <acc_set_device_num@@OACC_2.0+0x94>
   27ea4:	cmp	w1, #0x0
   27ea8:	b.ne	27f18 <acc_set_device_num@@OACC_2.0+0x118>  // b.any
   27eac:	ldr	w0, [x22, #172]
   27eb0:	cbz	w0, 27ef8 <acc_set_device_num@@OACC_2.0+0xf8>
   27eb4:	ldxr	w0, [x21]
   27eb8:	stlxr	w1, wzr, [x21]
   27ebc:	cbnz	w1, 27eb4 <acc_set_device_num@@OACC_2.0+0xb4>
   27ec0:	tbnz	w0, #31, 27f04 <acc_set_device_num@@OACC_2.0+0x104>
   27ec4:	add	x0, x20, #0x590
   27ec8:	ldxr	w1, [x0]
   27ecc:	stlxr	w2, wzr, [x0]
   27ed0:	cbnz	w2, 27ec8 <acc_set_device_num@@OACC_2.0+0xc8>
   27ed4:	tbnz	w1, #31, 27f10 <acc_set_device_num@@OACC_2.0+0x110>
   27ed8:	mov	w0, w19
   27edc:	bl	27408 <GOACC_declare@@GOACC_2.0.1+0x758>
   27ee0:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   27ee4:	ldp	x21, x22, [sp, #32]
   27ee8:	str	w19, [x0, #1632]
   27eec:	ldp	x19, x20, [sp, #16]
   27ef0:	ldp	x29, x30, [sp], #48
   27ef4:	ret
   27ef8:	mov	x0, x22
   27efc:	bl	22d80 <GOMP_offload_unregister@@GOMP_4.0.1+0x18>
   27f00:	b	27eb4 <acc_set_device_num@@OACC_2.0+0xb4>
   27f04:	mov	x0, x21
   27f08:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   27f0c:	b	27ec4 <acc_set_device_num@@OACC_2.0+0xc4>
   27f10:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   27f14:	b	27ed8 <acc_set_device_num@@OACC_2.0+0xd8>
   27f18:	mov	x0, x21
   27f1c:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   27f20:	b	27eac <acc_set_device_num@@OACC_2.0+0xac>
   27f24:	mov	w2, w0
   27f28:	mov	w1, w19
   27f2c:	mov	w0, w21
   27f30:	bl	26fb0 <GOACC_declare@@GOACC_2.0.1+0x300>
   27f34:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   27f38:	b	27e54 <acc_set_device_num@@OACC_2.0+0x54>
   27f3c:	nop

0000000000027f40 <acc_on_device@@OACC_2.0>:
   27f40:	tst	w0, #0xfffffffd
   27f44:	cset	w0, eq  // eq = none
   27f48:	ret
   27f4c:	nop
   27f50:	stp	x29, x30, [sp, #-32]!
   27f54:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   27f58:	adrp	x1, 27000 <GOACC_declare@@GOACC_2.0.1+0x350>
   27f5c:	mov	x29, sp
   27f60:	str	x19, [sp, #16]
   27f64:	add	x19, x2, #0x590
   27f68:	add	x1, x1, #0x1f8
   27f6c:	add	x0, x19, #0x58
   27f70:	str	wzr, [x2, #1424]
   27f74:	bl	85f0 <pthread_key_create@plt>
   27f78:	str	wzr, [x19, #64]
   27f7c:	stp	xzr, xzr, [x19, #72]
   27f80:	ldr	x19, [sp, #16]
   27f84:	ldp	x29, x30, [sp], #32
   27f88:	b	26f20 <GOACC_declare@@GOACC_2.0.1+0x270>
   27f8c:	nop
   27f90:	adrp	x1, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   27f94:	ldr	x1, [x1, #4008]
   27f98:	mrs	x2, tpidr_el0
   27f9c:	ldr	x2, [x2, x1]
   27fa0:	ldr	x1, [x2, #16]
   27fa4:	cbnz	x1, 27fc8 <acc_on_device@@OACC_2.0+0x88>
   27fa8:	adrp	x1, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   27fac:	add	x1, x1, #0x590
   27fb0:	add	x1, x1, #0x10
   27fb4:	ldr	x3, [x2, #8]
   27fb8:	str	x3, [x2, #16]
   27fbc:	ldr	x0, [x1, w0, sxtw #3]
   27fc0:	str	x0, [x2, #8]
   27fc4:	ret
   27fc8:	stp	x29, x30, [sp, #-16]!
   27fcc:	adrp	x3, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   27fd0:	add	x3, x3, #0x410
   27fd4:	mov	x29, sp
   27fd8:	adrp	x1, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   27fdc:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   27fe0:	add	x3, x3, #0x78
   27fe4:	add	x1, x1, #0x1c0
   27fe8:	add	x0, x0, #0x3f8
   27fec:	mov	w2, #0x29b                 	// #667
   27ff0:	bl	8a60 <__assert_fail@plt>
   27ff4:	nop
   27ff8:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   27ffc:	ldr	x0, [x0, #4008]
   28000:	mrs	x1, tpidr_el0
   28004:	ldr	x0, [x1, x0]
   28008:	ldr	x1, [x0, #16]
   2800c:	stp	x1, xzr, [x0, #8]
   28010:	ret
   28014:	nop
   28018:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   2801c:	ldr	x0, [x0, #4008]
   28020:	mrs	x1, tpidr_el0
   28024:	ldr	x0, [x1, x0]
   28028:	cbz	x0, 28038 <acc_on_device@@OACC_2.0+0xf8>
   2802c:	ldr	x0, [x0, #8]
   28030:	cbz	x0, 28038 <acc_on_device@@OACC_2.0+0xf8>
   28034:	ret
   28038:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   2803c:	ldr	x0, [x0, #1504]
   28040:	cbz	x0, 2804c <acc_on_device@@OACC_2.0+0x10c>
   28044:	mov	w0, #0xffffffff            	// #-1
   28048:	b	27408 <GOACC_declare@@GOACC_2.0.1+0x758>
   2804c:	mov	w0, #0x1                   	// #1
   28050:	b	8920 <acc_init@plt>
   28054:	nop
   28058:	mov	x1, x0
   2805c:	ldxr	w2, [x1]
   28060:	stlxr	w3, wzr, [x1]
   28064:	cbnz	w3, 2805c <acc_on_device@@OACC_2.0+0x11c>
   28068:	tbnz	w2, #31, 28070 <acc_on_device@@OACC_2.0+0x130>
   2806c:	ret
   28070:	b	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   28074:	nop

0000000000028078 <acc_malloc@@OACC_2.0>:
   28078:	cbz	x0, 280cc <acc_malloc@@OACC_2.0+0x54>
   2807c:	stp	x29, x30, [sp, #-32]!
   28080:	mov	x29, sp
   28084:	str	x19, [sp, #16]
   28088:	mov	x19, x0
   2808c:	bl	28018 <acc_on_device@@OACC_2.0+0xd8>
   28090:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   28094:	ldr	x0, [x0, #4048]
   28098:	mrs	x1, tpidr_el0
   2809c:	ldr	x0, [x1, x0]
   280a0:	ldr	x2, [x0, #8]
   280a4:	cbz	x2, 280e0 <acc_malloc@@OACC_2.0+0x68>
   280a8:	ldr	w0, [x2, #8]
   280ac:	tbnz	w0, #0, 280d0 <acc_malloc@@OACC_2.0+0x58>
   280b0:	mov	x1, x19
   280b4:	ldr	w0, [x2, #12]
   280b8:	ldr	x19, [sp, #16]
   280bc:	ldp	x29, x30, [sp], #32
   280c0:	ldr	x2, [x2, #96]
   280c4:	mov	x16, x2
   280c8:	br	x16
   280cc:	ret
   280d0:	mov	x0, x19
   280d4:	ldr	x19, [sp, #16]
   280d8:	ldp	x29, x30, [sp], #32
   280dc:	b	8710 <malloc@plt>
   280e0:	adrp	x3, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   280e4:	adrp	x1, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   280e8:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   280ec:	add	x3, x3, #0x6d0
   280f0:	add	x1, x1, #0x4a0
   280f4:	add	x0, x0, #0x4c0
   280f8:	mov	w2, #0x6a                  	// #106
   280fc:	bl	8a60 <__assert_fail@plt>

0000000000028100 <acc_memcpy_to_device@@OACC_2.0>:
   28100:	adrp	x4, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   28104:	ldr	x4, [x4, #4048]
   28108:	mrs	x5, tpidr_el0
   2810c:	stp	x29, x30, [sp, #-16]!
   28110:	mov	x29, sp
   28114:	ldr	x4, [x5, x4]
   28118:	cbz	x4, 2815c <acc_memcpy_to_device@@OACC_2.0+0x5c>
   2811c:	ldr	x4, [x4, #8]
   28120:	cbz	x4, 2815c <acc_memcpy_to_device@@OACC_2.0+0x5c>
   28124:	ldr	w5, [x4, #8]
   28128:	tbnz	w5, #0, 28154 <acc_memcpy_to_device@@OACC_2.0+0x54>
   2812c:	mov	x3, x2
   28130:	mov	x2, x1
   28134:	mov	x1, x0
   28138:	ldr	w0, [x4, #12]
   2813c:	ldr	x4, [x4, #120]
   28140:	blr	x4
   28144:	tst	w0, #0xff
   28148:	b.eq	28180 <acc_memcpy_to_device@@OACC_2.0+0x80>  // b.none
   2814c:	ldp	x29, x30, [sp], #16
   28150:	ret
   28154:	ldp	x29, x30, [sp], #16
   28158:	b	8590 <memmove@plt>
   2815c:	adrp	x3, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   28160:	add	x3, x3, #0x6d0
   28164:	adrp	x1, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   28168:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2816c:	add	x3, x3, #0x10
   28170:	add	x1, x1, #0x4a0
   28174:	add	x0, x0, #0x4d0
   28178:	mov	w2, #0xa4                  	// #164
   2817c:	bl	8a60 <__assert_fail@plt>
   28180:	adrp	x1, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   28184:	add	x1, x1, #0x6d0
   28188:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2818c:	add	x1, x1, #0x28
   28190:	add	x0, x0, #0x4e0
   28194:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>

0000000000028198 <acc_memcpy_to_device_async@@OACC_2.5>:
   28198:	adrp	x5, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   2819c:	ldr	x5, [x5, #4048]
   281a0:	mrs	x6, tpidr_el0
   281a4:	stp	x29, x30, [sp, #-48]!
   281a8:	mov	x29, sp
   281ac:	stp	x19, x20, [sp, #16]
   281b0:	ldr	x19, [x6, x5]
   281b4:	cbz	x19, 28260 <acc_memcpy_to_device_async@@OACC_2.5+0xc8>
   281b8:	ldr	x5, [x19, #8]
   281bc:	cbz	x5, 28260 <acc_memcpy_to_device_async@@OACC_2.5+0xc8>
   281c0:	mov	w4, w3
   281c4:	ldr	w3, [x5, #8]
   281c8:	tbnz	w3, #0, 28254 <acc_memcpy_to_device_async@@OACC_2.5+0xbc>
   281cc:	stp	x21, x22, [sp, #32]
   281d0:	mov	x20, x0
   281d4:	mov	x21, x1
   281d8:	mov	x22, x2
   281dc:	cmn	w4, #0x1
   281e0:	b.lt	28234 <acc_memcpy_to_device_async@@OACC_2.5+0x9c>  // b.tstop
   281e4:	ldr	x1, [x5, #248]
   281e8:	mov	w0, w4
   281ec:	blr	x1
   281f0:	ldr	x4, [x19, #8]
   281f4:	mov	x1, x20
   281f8:	mov	x3, x22
   281fc:	mov	x2, x21
   28200:	ldr	w0, [x4, #12]
   28204:	ldr	x4, [x4, #120]
   28208:	blr	x4
   2820c:	ldr	x1, [x19, #8]
   28210:	and	w19, w0, #0xff
   28214:	mov	w0, #0xfffffffe            	// #-2
   28218:	ldr	x1, [x1, #248]
   2821c:	blr	x1
   28220:	cbz	w19, 28288 <acc_memcpy_to_device_async@@OACC_2.5+0xf0>
   28224:	ldp	x19, x20, [sp, #16]
   28228:	ldp	x21, x22, [sp, #32]
   2822c:	ldp	x29, x30, [sp], #48
   28230:	ret
   28234:	mov	x3, x2
   28238:	mov	x2, x1
   2823c:	mov	x1, x0
   28240:	ldr	w0, [x5, #12]
   28244:	ldr	x4, [x5, #120]
   28248:	blr	x4
   2824c:	and	w19, w0, #0xff
   28250:	b	28220 <acc_memcpy_to_device_async@@OACC_2.5+0x88>
   28254:	ldp	x19, x20, [sp, #16]
   28258:	ldp	x29, x30, [sp], #48
   2825c:	b	8590 <memmove@plt>
   28260:	adrp	x3, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   28264:	add	x3, x3, #0x6d0
   28268:	adrp	x1, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2826c:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   28270:	add	x3, x3, #0x10
   28274:	add	x1, x1, #0x4a0
   28278:	add	x0, x0, #0x4d0
   2827c:	mov	w2, #0xa4                  	// #164
   28280:	stp	x21, x22, [sp, #32]
   28284:	bl	8a60 <__assert_fail@plt>
   28288:	adrp	x1, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2828c:	add	x1, x1, #0x6d0
   28290:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   28294:	add	x1, x1, #0x40
   28298:	add	x0, x0, #0x4e0
   2829c:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>

00000000000282a0 <acc_memcpy_from_device@@OACC_2.0>:
   282a0:	adrp	x4, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   282a4:	ldr	x4, [x4, #4048]
   282a8:	mrs	x5, tpidr_el0
   282ac:	stp	x29, x30, [sp, #-16]!
   282b0:	mov	x29, sp
   282b4:	ldr	x4, [x5, x4]
   282b8:	cbz	x4, 282fc <acc_memcpy_from_device@@OACC_2.0+0x5c>
   282bc:	ldr	x4, [x4, #8]
   282c0:	cbz	x4, 282fc <acc_memcpy_from_device@@OACC_2.0+0x5c>
   282c4:	ldr	w5, [x4, #8]
   282c8:	tbnz	w5, #0, 282f4 <acc_memcpy_from_device@@OACC_2.0+0x54>
   282cc:	mov	x3, x2
   282d0:	mov	x2, x1
   282d4:	mov	x1, x0
   282d8:	ldr	w0, [x4, #12]
   282dc:	ldr	x4, [x4, #112]
   282e0:	blr	x4
   282e4:	tst	w0, #0xff
   282e8:	b.eq	28320 <acc_memcpy_from_device@@OACC_2.0+0x80>  // b.none
   282ec:	ldp	x29, x30, [sp], #16
   282f0:	ret
   282f4:	ldp	x29, x30, [sp], #16
   282f8:	b	8590 <memmove@plt>
   282fc:	adrp	x3, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   28300:	add	x3, x3, #0x6d0
   28304:	adrp	x1, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   28308:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2830c:	add	x3, x3, #0x10
   28310:	add	x1, x1, #0x4a0
   28314:	add	x0, x0, #0x4d0
   28318:	mov	w2, #0xa4                  	// #164
   2831c:	bl	8a60 <__assert_fail@plt>
   28320:	adrp	x1, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   28324:	add	x1, x1, #0x6d0
   28328:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2832c:	add	x1, x1, #0x60
   28330:	add	x0, x0, #0x4e0
   28334:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>

0000000000028338 <acc_memcpy_from_device_async@@OACC_2.5>:
   28338:	adrp	x5, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   2833c:	ldr	x5, [x5, #4048]
   28340:	mrs	x6, tpidr_el0
   28344:	stp	x29, x30, [sp, #-48]!
   28348:	mov	x29, sp
   2834c:	stp	x19, x20, [sp, #16]
   28350:	ldr	x19, [x6, x5]
   28354:	cbz	x19, 28400 <acc_memcpy_from_device_async@@OACC_2.5+0xc8>
   28358:	ldr	x5, [x19, #8]
   2835c:	cbz	x5, 28400 <acc_memcpy_from_device_async@@OACC_2.5+0xc8>
   28360:	mov	w4, w3
   28364:	ldr	w3, [x5, #8]
   28368:	tbnz	w3, #0, 283f4 <acc_memcpy_from_device_async@@OACC_2.5+0xbc>
   2836c:	stp	x21, x22, [sp, #32]
   28370:	mov	x20, x0
   28374:	mov	x21, x1
   28378:	mov	x22, x2
   2837c:	cmn	w4, #0x1
   28380:	b.lt	283d4 <acc_memcpy_from_device_async@@OACC_2.5+0x9c>  // b.tstop
   28384:	ldr	x1, [x5, #248]
   28388:	mov	w0, w4
   2838c:	blr	x1
   28390:	ldr	x4, [x19, #8]
   28394:	mov	x1, x20
   28398:	mov	x3, x22
   2839c:	mov	x2, x21
   283a0:	ldr	w0, [x4, #12]
   283a4:	ldr	x4, [x4, #112]
   283a8:	blr	x4
   283ac:	ldr	x1, [x19, #8]
   283b0:	and	w19, w0, #0xff
   283b4:	mov	w0, #0xfffffffe            	// #-2
   283b8:	ldr	x1, [x1, #248]
   283bc:	blr	x1
   283c0:	cbz	w19, 28428 <acc_memcpy_from_device_async@@OACC_2.5+0xf0>
   283c4:	ldp	x19, x20, [sp, #16]
   283c8:	ldp	x21, x22, [sp, #32]
   283cc:	ldp	x29, x30, [sp], #48
   283d0:	ret
   283d4:	mov	x3, x2
   283d8:	mov	x2, x1
   283dc:	mov	x1, x0
   283e0:	ldr	w0, [x5, #12]
   283e4:	ldr	x4, [x5, #112]
   283e8:	blr	x4
   283ec:	and	w19, w0, #0xff
   283f0:	b	283c0 <acc_memcpy_from_device_async@@OACC_2.5+0x88>
   283f4:	ldp	x19, x20, [sp, #16]
   283f8:	ldp	x29, x30, [sp], #48
   283fc:	b	8590 <memmove@plt>
   28400:	adrp	x3, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   28404:	add	x3, x3, #0x6d0
   28408:	adrp	x1, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2840c:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   28410:	add	x3, x3, #0x10
   28414:	add	x1, x1, #0x4a0
   28418:	add	x0, x0, #0x4d0
   2841c:	mov	w2, #0xa4                  	// #164
   28420:	stp	x21, x22, [sp, #32]
   28424:	bl	8a60 <__assert_fail@plt>
   28428:	adrp	x1, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2842c:	add	x1, x1, #0x6d0
   28430:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   28434:	add	x1, x1, #0x78
   28438:	add	x0, x0, #0x4e0
   2843c:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>

0000000000028440 <acc_deviceptr@@OACC_2.0>:
   28440:	stp	x29, x30, [sp, #-112]!
   28444:	mov	x29, sp
   28448:	stp	x19, x20, [sp, #16]
   2844c:	mov	x20, x0
   28450:	bl	28018 <acc_on_device@@OACC_2.0+0xd8>
   28454:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   28458:	ldr	x0, [x0, #4048]
   2845c:	mrs	x1, tpidr_el0
   28460:	ldr	x0, [x1, x0]
   28464:	ldr	x19, [x0, #8]
   28468:	ldr	w0, [x19, #8]
   2846c:	tbnz	w0, #0, 284ec <acc_deviceptr@@OACC_2.0+0xac>
   28470:	str	x21, [sp, #32]
   28474:	add	x21, x19, #0xa8
   28478:	mov	w0, #0x1                   	// #1
   2847c:	ldaxr	w1, [x21]
   28480:	cbnz	w1, 2848c <acc_deviceptr@@OACC_2.0+0x4c>
   28484:	stxr	w2, w0, [x21]
   28488:	cbnz	w2, 2847c <acc_deviceptr@@OACC_2.0+0x3c>
   2848c:	cmp	w1, #0x0
   28490:	b.ne	28520 <acc_deviceptr@@OACC_2.0+0xe0>  // b.any
   28494:	add	x2, x20, #0x1
   28498:	add	x0, x19, #0xa0
   2849c:	add	x1, sp, #0x38
   284a0:	stp	x20, x2, [sp, #56]
   284a4:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   284a8:	mov	x19, x0
   284ac:	cbz	x0, 28500 <acc_deviceptr@@OACC_2.0+0xc0>
   284b0:	ldr	x2, [x0]
   284b4:	ldp	x0, x1, [x0, #16]
   284b8:	ldr	x0, [x0, #16]
   284bc:	sub	x19, x0, x2
   284c0:	add	x19, x19, x1
   284c4:	add	x19, x20, x19
   284c8:	ldxr	w0, [x21]
   284cc:	stlxr	w1, wzr, [x21]
   284d0:	cbnz	w1, 284c8 <acc_deviceptr@@OACC_2.0+0x88>
   284d4:	tbnz	w0, #31, 28510 <acc_deviceptr@@OACC_2.0+0xd0>
   284d8:	ldr	x21, [sp, #32]
   284dc:	mov	x0, x19
   284e0:	ldp	x19, x20, [sp, #16]
   284e4:	ldp	x29, x30, [sp], #112
   284e8:	ret
   284ec:	mov	x19, x20
   284f0:	mov	x0, x19
   284f4:	ldp	x19, x20, [sp, #16]
   284f8:	ldp	x29, x30, [sp], #112
   284fc:	ret
   28500:	ldxr	w0, [x21]
   28504:	stlxr	w1, wzr, [x21]
   28508:	cbnz	w1, 28500 <acc_deviceptr@@OACC_2.0+0xc0>
   2850c:	tbz	w0, #31, 284d8 <acc_deviceptr@@OACC_2.0+0x98>
   28510:	mov	x0, x21
   28514:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   28518:	ldr	x21, [sp, #32]
   2851c:	b	284dc <acc_deviceptr@@OACC_2.0+0x9c>
   28520:	mov	x0, x21
   28524:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   28528:	b	28494 <acc_deviceptr@@OACC_2.0+0x54>
   2852c:	nop

0000000000028530 <acc_hostptr@@OACC_2.0>:
   28530:	stp	x29, x30, [sp, #-48]!
   28534:	mov	x29, sp
   28538:	stp	x19, x20, [sp, #16]
   2853c:	mov	x19, x0
   28540:	bl	28018 <acc_on_device@@OACC_2.0+0xd8>
   28544:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   28548:	ldr	x0, [x0, #4048]
   2854c:	mrs	x1, tpidr_el0
   28550:	ldr	x0, [x1, x0]
   28554:	ldr	x20, [x0, #8]
   28558:	ldr	w0, [x20, #8]
   2855c:	tbnz	w0, #0, 285c4 <acc_hostptr@@OACC_2.0+0x94>
   28560:	add	x0, x20, #0xa8
   28564:	mov	w2, #0x1                   	// #1
   28568:	ldaxr	w1, [x0]
   2856c:	cbnz	w1, 28578 <acc_hostptr@@OACC_2.0+0x48>
   28570:	stxr	w3, w2, [x0]
   28574:	cbnz	w3, 28568 <acc_hostptr@@OACC_2.0+0x38>
   28578:	cmp	w1, #0x0
   2857c:	b.ne	28660 <acc_hostptr@@OACC_2.0+0x130>  // b.any
   28580:	ldr	x1, [x20, #176]
   28584:	cbz	x1, 285b0 <acc_hostptr@@OACC_2.0+0x80>
   28588:	add	x3, x19, #0x1
   2858c:	nop
   28590:	ldr	x5, [x1, #16]
   28594:	cmp	x19, x5
   28598:	b.cc	285a8 <acc_hostptr@@OACC_2.0+0x78>  // b.lo, b.ul, b.last
   2859c:	ldr	x2, [x1, #24]
   285a0:	cmp	x2, x3
   285a4:	b.cs	285dc <acc_hostptr@@OACC_2.0+0xac>  // b.hs, b.nlast
   285a8:	ldr	x1, [x1, #40]
   285ac:	cbnz	x1, 28590 <acc_hostptr@@OACC_2.0+0x60>
   285b0:	ldxr	w1, [x0]
   285b4:	stlxr	w2, wzr, [x0]
   285b8:	cbnz	w2, 285b0 <acc_hostptr@@OACC_2.0+0x80>
   285bc:	mov	x19, #0x0                   	// #0
   285c0:	tbnz	w1, #31, 285d4 <acc_hostptr@@OACC_2.0+0xa4>
   285c4:	mov	x0, x19
   285c8:	ldp	x19, x20, [sp, #16]
   285cc:	ldp	x29, x30, [sp], #48
   285d0:	ret
   285d4:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   285d8:	b	285c4 <acc_hostptr@@OACC_2.0+0x94>
   285dc:	ldr	x7, [x1, #48]
   285e0:	cbz	x7, 285b0 <acc_hostptr@@OACC_2.0+0x80>
   285e4:	ldr	x1, [x1, #8]
   285e8:	mov	x4, #0x0                   	// #0
   285ec:	add	x4, x4, #0x1
   285f0:	ldp	x3, x6, [x1]
   285f4:	ldr	x2, [x1, #24]
   285f8:	add	x2, x2, x3
   285fc:	sub	x3, x2, x5
   28600:	add	x3, x19, x3
   28604:	cmp	x3, x6
   28608:	b.ls	2863c <acc_hostptr@@OACC_2.0+0x10c>  // b.plast
   2860c:	nop
   28610:	add	x1, x1, #0x48
   28614:	cmp	x7, x4
   28618:	b.eq	285b0 <acc_hostptr@@OACC_2.0+0x80>  // b.none
   2861c:	ldp	x3, x6, [x1]
   28620:	add	x4, x4, #0x1
   28624:	ldr	x2, [x1, #24]
   28628:	add	x2, x2, x3
   2862c:	sub	x3, x2, x5
   28630:	add	x3, x19, x3
   28634:	cmp	x3, x6
   28638:	b.hi	28610 <acc_hostptr@@OACC_2.0+0xe0>  // b.pmore
   2863c:	ldr	x1, [x1, #16]
   28640:	ldr	x1, [x1, #16]
   28644:	sub	x2, x2, x1
   28648:	add	x19, x19, x2
   2864c:	ldxr	w1, [x0]
   28650:	stlxr	w2, wzr, [x0]
   28654:	cbnz	w2, 2864c <acc_hostptr@@OACC_2.0+0x11c>
   28658:	tbz	w1, #31, 285c4 <acc_hostptr@@OACC_2.0+0x94>
   2865c:	b	285d4 <acc_hostptr@@OACC_2.0+0xa4>
   28660:	str	x0, [sp, #40]
   28664:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   28668:	ldr	x0, [sp, #40]
   2866c:	b	28580 <acc_hostptr@@OACC_2.0+0x50>

0000000000028670 <acc_is_present@@OACC_2.0>:
   28670:	stp	x29, x30, [sp, #-128]!
   28674:	cmp	x1, #0x0
   28678:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   2867c:	mov	x29, sp
   28680:	stp	x21, x22, [sp, #32]
   28684:	mov	w21, #0x0                   	// #0
   28688:	b.ne	2869c <acc_is_present@@OACC_2.0+0x2c>  // b.any
   2868c:	mov	w0, w21
   28690:	ldp	x21, x22, [sp, #32]
   28694:	ldp	x29, x30, [sp], #128
   28698:	ret
   2869c:	stp	x19, x20, [sp, #16]
   286a0:	mov	x20, x1
   286a4:	mov	x19, x0
   286a8:	str	x23, [sp, #48]
   286ac:	bl	28018 <acc_on_device@@OACC_2.0+0xd8>
   286b0:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   286b4:	ldr	x0, [x0, #4048]
   286b8:	mrs	x1, tpidr_el0
   286bc:	mov	w21, #0x1                   	// #1
   286c0:	ldr	x0, [x1, x0]
   286c4:	ldr	x23, [x0, #8]
   286c8:	ldr	w0, [x23, #8]
   286cc:	tbnz	w0, #0, 28724 <acc_is_present@@OACC_2.0+0xb4>
   286d0:	add	x22, x23, #0xa8
   286d4:	ldaxr	w1, [x22]
   286d8:	cbnz	w1, 286e4 <acc_is_present@@OACC_2.0+0x74>
   286dc:	stxr	w0, w21, [x22]
   286e0:	cbnz	w0, 286d4 <acc_is_present@@OACC_2.0+0x64>
   286e4:	cmp	w1, #0x0
   286e8:	b.ne	2876c <acc_is_present@@OACC_2.0+0xfc>  // b.any
   286ec:	add	x0, x23, #0xa0
   286f0:	add	x1, sp, #0x48
   286f4:	add	x23, x20, x19
   286f8:	mov	w21, #0x0                   	// #0
   286fc:	stp	x19, x23, [sp, #72]
   28700:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   28704:	cbz	x0, 28714 <acc_is_present@@OACC_2.0+0xa4>
   28708:	ldr	x1, [x0]
   2870c:	cmp	x19, x1
   28710:	b.cs	2873c <acc_is_present@@OACC_2.0+0xcc>  // b.hs, b.nlast
   28714:	ldxr	w0, [x22]
   28718:	stlxr	w1, wzr, [x22]
   2871c:	cbnz	w1, 28714 <acc_is_present@@OACC_2.0+0xa4>
   28720:	tbnz	w0, #31, 28758 <acc_is_present@@OACC_2.0+0xe8>
   28724:	mov	w0, w21
   28728:	ldp	x19, x20, [sp, #16]
   2872c:	ldp	x21, x22, [sp, #32]
   28730:	ldr	x23, [sp, #48]
   28734:	ldp	x29, x30, [sp], #128
   28738:	ret
   2873c:	ldr	x0, [x0, #8]
   28740:	cmp	x23, x0
   28744:	b.hi	28714 <acc_is_present@@OACC_2.0+0xa4>  // b.pmore
   28748:	sub	x1, x0, x1
   2874c:	cmp	x20, x1
   28750:	cset	w21, ls  // ls = plast
   28754:	b	28714 <acc_is_present@@OACC_2.0+0xa4>
   28758:	mov	x0, x22
   2875c:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   28760:	ldp	x19, x20, [sp, #16]
   28764:	ldr	x23, [sp, #48]
   28768:	b	2868c <acc_is_present@@OACC_2.0+0x1c>
   2876c:	mov	x0, x22
   28770:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   28774:	b	286ec <acc_is_present@@OACC_2.0+0x7c>

0000000000028778 <acc_map_data@@OACC_2.0>:
   28778:	stp	x29, x30, [sp, #-160]!
   2877c:	mov	x29, sp
   28780:	stp	x19, x20, [sp, #16]
   28784:	mov	x20, x0
   28788:	mov	x19, x1
   2878c:	stp	x21, x22, [sp, #32]
   28790:	stp	x23, x24, [sp, #48]
   28794:	mov	x24, x2
   28798:	strh	wzr, [sp, #78]
   2879c:	stp	x0, x1, [sp, #80]
   287a0:	str	x2, [sp, #96]
   287a4:	bl	28018 <acc_on_device@@OACC_2.0+0xd8>
   287a8:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   287ac:	ldr	x0, [x0, #4048]
   287b0:	mrs	x1, tpidr_el0
   287b4:	ldr	x21, [x1, x0]
   287b8:	ldr	x23, [x21, #8]
   287bc:	ldr	w0, [x23, #8]
   287c0:	tbz	w0, #0, 28820 <acc_map_data@@OACC_2.0+0xa8>
   287c4:	cmp	x20, x19
   287c8:	b.ne	28980 <acc_map_data@@OACC_2.0+0x208>  // b.any
   287cc:	add	x22, x23, #0xa8
   287d0:	mov	x19, #0x0                   	// #0
   287d4:	mov	w0, #0x1                   	// #1
   287d8:	ldaxr	w1, [x22]
   287dc:	cbnz	w1, 287e8 <acc_map_data@@OACC_2.0+0x70>
   287e0:	stxr	w2, w0, [x22]
   287e4:	cbnz	w2, 287d8 <acc_map_data@@OACC_2.0+0x60>
   287e8:	cmp	w1, #0x0
   287ec:	b.ne	28998 <acc_map_data@@OACC_2.0+0x220>  // b.any
   287f0:	ldr	x0, [x23, #176]
   287f4:	str	x0, [x19, #40]
   287f8:	str	x19, [x23, #176]
   287fc:	ldxr	w0, [x22]
   28800:	stlxr	w1, wzr, [x22]
   28804:	cbnz	w1, 287fc <acc_map_data@@OACC_2.0+0x84>
   28808:	tbnz	w0, #31, 28958 <acc_map_data@@OACC_2.0+0x1e0>
   2880c:	ldp	x19, x20, [sp, #16]
   28810:	ldp	x21, x22, [sp, #32]
   28814:	ldp	x23, x24, [sp, #48]
   28818:	ldp	x29, x30, [sp], #160
   2881c:	ret
   28820:	cmp	x19, #0x0
   28824:	ccmp	x24, #0x0, #0x4, ne  // ne = any
   28828:	ccmp	x20, #0x0, #0x4, ne  // ne = any
   2882c:	b.eq	28964 <acc_map_data@@OACC_2.0+0x1ec>  // b.none
   28830:	add	x22, x23, #0xa8
   28834:	mov	w0, #0x1                   	// #1
   28838:	ldaxr	w1, [x22]
   2883c:	cbnz	w1, 28848 <acc_map_data@@OACC_2.0+0xd0>
   28840:	stxr	w2, w0, [x22]
   28844:	cbnz	w2, 28838 <acc_map_data@@OACC_2.0+0xc0>
   28848:	cmp	w1, #0x0
   2884c:	b.ne	289a4 <acc_map_data@@OACC_2.0+0x22c>  // b.any
   28850:	add	x2, x24, x20
   28854:	add	x1, sp, #0x68
   28858:	add	x0, x23, #0xa0
   2885c:	stp	x20, x2, [sp, #104]
   28860:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   28864:	cbnz	x0, 289b0 <acc_map_data@@OACC_2.0+0x238>
   28868:	ldr	x0, [x21, #8]
   2886c:	ldr	x0, [x0, #176]
   28870:	cbz	x0, 28898 <acc_map_data@@OACC_2.0+0x120>
   28874:	add	x2, x19, x24
   28878:	ldr	x4, [x0, #16]
   2887c:	cmp	x4, x19
   28880:	b.hi	28890 <acc_map_data@@OACC_2.0+0x118>  // b.pmore
   28884:	ldr	x1, [x0, #24]
   28888:	cmp	x1, x2
   2888c:	b.cs	288e0 <acc_map_data@@OACC_2.0+0x168>  // b.hs, b.nlast
   28890:	ldr	x0, [x0, #40]
   28894:	cbnz	x0, 28878 <acc_map_data@@OACC_2.0+0x100>
   28898:	ldxr	w0, [x22]
   2889c:	stlxr	w1, wzr, [x22]
   288a0:	cbnz	w1, 28898 <acc_map_data@@OACC_2.0+0x120>
   288a4:	tbnz	w0, #31, 2898c <acc_map_data@@OACC_2.0+0x214>
   288a8:	mov	x1, #0x1                   	// #1
   288ac:	add	x5, sp, #0x4e
   288b0:	add	x4, sp, #0x60
   288b4:	add	x3, sp, #0x58
   288b8:	add	x2, sp, #0x50
   288bc:	mov	x0, x23
   288c0:	mov	w7, #0x0                   	// #0
   288c4:	mov	w6, #0x1                   	// #1
   288c8:	bl	20c80 <omp_get_place_proc_ids@@OMP_4.5+0x1ac0>
   288cc:	mov	x19, x0
   288d0:	ldr	x0, [x0, #64]
   288d4:	mov	x1, #0xffffffffffffffff    	// #-1
   288d8:	str	x1, [x0, #32]
   288dc:	b	287d4 <acc_map_data@@OACC_2.0+0x5c>
   288e0:	ldr	x6, [x0, #48]
   288e4:	cbz	x6, 28898 <acc_map_data@@OACC_2.0+0x120>
   288e8:	ldr	x1, [x0, #8]
   288ec:	mov	x3, #0x0                   	// #0
   288f0:	ldp	x5, x2, [x1]
   288f4:	ldr	x0, [x1, #24]
   288f8:	add	x0, x0, x5
   288fc:	sub	x0, x0, x4
   28900:	add	x0, x19, x0
   28904:	cmp	x0, x2
   28908:	b.ls	2893c <acc_map_data@@OACC_2.0+0x1c4>  // b.plast
   2890c:	nop
   28910:	add	x3, x3, #0x1
   28914:	add	x1, x1, #0x48
   28918:	cmp	x6, x3
   2891c:	b.eq	28898 <acc_map_data@@OACC_2.0+0x120>  // b.none
   28920:	ldp	x5, x2, [x1]
   28924:	ldr	x0, [x1, #24]
   28928:	add	x0, x0, x5
   2892c:	sub	x0, x0, x4
   28930:	add	x0, x19, x0
   28934:	cmp	x0, x2
   28938:	b.hi	28910 <acc_map_data@@OACC_2.0+0x198>  // b.pmore
   2893c:	mov	x0, x22
   28940:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   28944:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   28948:	mov	w2, w24
   2894c:	mov	x1, x19
   28950:	add	x0, x0, #0x568
   28954:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   28958:	mov	x0, x22
   2895c:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   28960:	b	2880c <acc_map_data@@OACC_2.0+0x94>
   28964:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   28968:	mov	x3, x19
   2896c:	mov	x1, x20
   28970:	mov	w4, w24
   28974:	add	x0, x0, #0x518
   28978:	mov	w2, w24
   2897c:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   28980:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   28984:	add	x0, x0, #0x4f0
   28988:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2898c:	mov	x0, x22
   28990:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   28994:	b	288a8 <acc_map_data@@OACC_2.0+0x130>
   28998:	mov	x0, x22
   2899c:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   289a0:	b	287f0 <acc_map_data@@OACC_2.0+0x78>
   289a4:	mov	x0, x22
   289a8:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   289ac:	b	28850 <acc_map_data@@OACC_2.0+0xd8>
   289b0:	mov	x0, x22
   289b4:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   289b8:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   289bc:	mov	w2, w24
   289c0:	mov	x1, x20
   289c4:	add	x0, x0, #0x538
   289c8:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   289cc:	nop

00000000000289d0 <acc_unmap_data@@OACC_2.0>:
   289d0:	adrp	x1, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   289d4:	ldr	x1, [x1, #4048]
   289d8:	mrs	x2, tpidr_el0
   289dc:	stp	x29, x30, [sp, #-128]!
   289e0:	mov	x29, sp
   289e4:	stp	x19, x20, [sp, #16]
   289e8:	mov	x19, x0
   289ec:	ldr	x0, [x2, x1]
   289f0:	stp	x21, x22, [sp, #32]
   289f4:	ldr	x21, [x0, #8]
   289f8:	ldr	w0, [x21, #8]
   289fc:	tbnz	w0, #0, 28a84 <acc_unmap_data@@OACC_2.0+0xb4>
   28a00:	add	x22, x21, #0xa8
   28a04:	mov	w0, #0x1                   	// #1
   28a08:	str	x23, [sp, #48]
   28a0c:	ldaxr	w1, [x22]
   28a10:	cbnz	w1, 28a1c <acc_unmap_data@@OACC_2.0+0x4c>
   28a14:	stxr	w2, w0, [x22]
   28a18:	cbnz	w2, 28a0c <acc_unmap_data@@OACC_2.0+0x3c>
   28a1c:	cmp	w1, #0x0
   28a20:	b.ne	28aec <acc_unmap_data@@OACC_2.0+0x11c>  // b.any
   28a24:	add	x2, x19, #0x1
   28a28:	add	x1, sp, #0x48
   28a2c:	add	x0, x21, #0xa0
   28a30:	stp	x19, x2, [sp, #72]
   28a34:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   28a38:	mov	x20, x0
   28a3c:	cbz	x0, 28b1c <acc_unmap_data@@OACC_2.0+0x14c>
   28a40:	ldr	x23, [x0]
   28a44:	cmp	x23, x19
   28a48:	b.ne	28af8 <acc_unmap_data@@OACC_2.0+0x128>  // b.any
   28a4c:	ldr	x19, [x20, #16]
   28a50:	mov	x0, #0x1                   	// #1
   28a54:	str	x0, [x20, #32]
   28a58:	ldr	x0, [x19]
   28a5c:	cmp	x0, #0x2
   28a60:	b.eq	28a94 <acc_unmap_data@@OACC_2.0+0xc4>  // b.none
   28a64:	ldxr	w0, [x22]
   28a68:	stlxr	w1, wzr, [x22]
   28a6c:	cbnz	w1, 28a64 <acc_unmap_data@@OACC_2.0+0x94>
   28a70:	tbnz	w0, #31, 28ad8 <acc_unmap_data@@OACC_2.0+0x108>
   28a74:	mov	x0, x19
   28a78:	mov	w1, #0x1                   	// #1
   28a7c:	bl	22658 <omp_get_place_proc_ids@@OMP_4.5+0x3498>
   28a80:	ldr	x23, [sp, #48]
   28a84:	ldp	x19, x20, [sp, #16]
   28a88:	ldp	x21, x22, [sp, #32]
   28a8c:	ldp	x29, x30, [sp], #128
   28a90:	ret
   28a94:	ldr	x2, [x21, #176]
   28a98:	stp	xzr, xzr, [x19, #24]
   28a9c:	cbz	x2, 28ac8 <acc_unmap_data@@OACC_2.0+0xf8>
   28aa0:	cmp	x19, x2
   28aa4:	ldr	x0, [x2, #40]
   28aa8:	b.eq	28ae4 <acc_unmap_data@@OACC_2.0+0x114>  // b.none
   28aac:	cbz	x0, 28ac8 <acc_unmap_data@@OACC_2.0+0xf8>
   28ab0:	cmp	x0, x19
   28ab4:	ldr	x1, [x0, #40]
   28ab8:	b.eq	28ad0 <acc_unmap_data@@OACC_2.0+0x100>  // b.none
   28abc:	mov	x2, x0
   28ac0:	mov	x0, x1
   28ac4:	cbnz	x0, 28ab0 <acc_unmap_data@@OACC_2.0+0xe0>
   28ac8:	mov	x19, #0x0                   	// #0
   28acc:	b	28a64 <acc_unmap_data@@OACC_2.0+0x94>
   28ad0:	str	x1, [x2, #40]
   28ad4:	b	28a64 <acc_unmap_data@@OACC_2.0+0x94>
   28ad8:	mov	x0, x22
   28adc:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   28ae0:	b	28a74 <acc_unmap_data@@OACC_2.0+0xa4>
   28ae4:	str	x0, [x21, #176]
   28ae8:	b	28a64 <acc_unmap_data@@OACC_2.0+0x94>
   28aec:	mov	x0, x22
   28af0:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   28af4:	b	28a24 <acc_unmap_data@@OACC_2.0+0x54>
   28af8:	mov	x0, x22
   28afc:	ldr	x21, [x20, #8]
   28b00:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   28b04:	ldr	x1, [x20]
   28b08:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   28b0c:	sub	w2, w21, w23
   28b10:	mov	x3, x19
   28b14:	add	x0, x0, #0x5b8
   28b18:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   28b1c:	mov	x0, x22
   28b20:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   28b24:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   28b28:	mov	x1, x19
   28b2c:	add	x0, x0, #0x598
   28b30:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   28b34:	nop

0000000000028b38 <acc_free@@OACC_2.0>:
   28b38:	cbz	x0, 28c9c <acc_free@@OACC_2.0+0x164>
   28b3c:	adrp	x1, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   28b40:	ldr	x1, [x1, #4048]
   28b44:	mrs	x2, tpidr_el0
   28b48:	stp	x29, x30, [sp, #-80]!
   28b4c:	mov	x29, sp
   28b50:	ldr	x1, [x2, x1]
   28b54:	stp	x21, x22, [sp, #32]
   28b58:	cbz	x1, 28cb0 <acc_free@@OACC_2.0+0x178>
   28b5c:	ldr	x21, [x1, #8]
   28b60:	cbz	x21, 28cb0 <acc_free@@OACC_2.0+0x178>
   28b64:	ldr	w1, [x21, #8]
   28b68:	tbnz	w1, #0, 28c90 <acc_free@@OACC_2.0+0x158>
   28b6c:	stp	x19, x20, [sp, #16]
   28b70:	mov	x19, x0
   28b74:	add	x0, x21, #0xa8
   28b78:	mov	w2, #0x1                   	// #1
   28b7c:	ldaxr	w1, [x0]
   28b80:	cbnz	w1, 28b8c <acc_free@@OACC_2.0+0x54>
   28b84:	stxr	w3, w2, [x0]
   28b88:	cbnz	w3, 28b7c <acc_free@@OACC_2.0+0x44>
   28b8c:	cmp	w1, #0x0
   28b90:	b.ne	28cf8 <acc_free@@OACC_2.0+0x1c0>  // b.any
   28b94:	ldr	x1, [x21, #176]
   28b98:	cbz	x1, 28bcc <acc_free@@OACC_2.0+0x94>
   28b9c:	add	x4, x19, #0x1
   28ba0:	str	x23, [sp, #48]
   28ba4:	nop
   28ba8:	ldr	x3, [x1, #16]
   28bac:	cmp	x3, x19
   28bb0:	b.hi	28bc0 <acc_free@@OACC_2.0+0x88>  // b.pmore
   28bb4:	ldr	x2, [x1, #24]
   28bb8:	cmp	x2, x4
   28bbc:	b.cs	28c04 <acc_free@@OACC_2.0+0xcc>  // b.hs, b.nlast
   28bc0:	ldr	x1, [x1, #40]
   28bc4:	cbnz	x1, 28ba8 <acc_free@@OACC_2.0+0x70>
   28bc8:	ldr	x23, [sp, #48]
   28bcc:	ldxr	w1, [x0]
   28bd0:	stlxr	w2, wzr, [x0]
   28bd4:	cbnz	w2, 28bcc <acc_free@@OACC_2.0+0x94>
   28bd8:	tbnz	w1, #31, 28ca0 <acc_free@@OACC_2.0+0x168>
   28bdc:	ldr	w0, [x21, #12]
   28be0:	mov	x1, x19
   28be4:	ldr	x2, [x21, #104]
   28be8:	blr	x2
   28bec:	tst	w0, #0xff
   28bf0:	b.eq	28cdc <acc_free@@OACC_2.0+0x1a4>  // b.none
   28bf4:	ldp	x19, x20, [sp, #16]
   28bf8:	ldp	x21, x22, [sp, #32]
   28bfc:	ldp	x29, x30, [sp], #80
   28c00:	ret
   28c04:	ldr	x5, [x1, #48]
   28c08:	cbz	x5, 28bc8 <acc_free@@OACC_2.0+0x90>
   28c0c:	ldr	x20, [x1, #8]
   28c10:	mov	x2, #0x0                   	// #0
   28c14:	ldp	x1, x4, [x20]
   28c18:	ldr	x22, [x20, #24]
   28c1c:	add	x1, x22, x1
   28c20:	sub	x1, x1, x3
   28c24:	add	x1, x19, x1
   28c28:	cmp	x1, x4
   28c2c:	b.ls	28c5c <acc_free@@OACC_2.0+0x124>  // b.plast
   28c30:	add	x2, x2, #0x1
   28c34:	add	x20, x20, #0x48
   28c38:	cmp	x5, x2
   28c3c:	b.eq	28bc8 <acc_free@@OACC_2.0+0x90>  // b.none
   28c40:	ldp	x1, x4, [x20]
   28c44:	ldr	x22, [x20, #24]
   28c48:	add	x1, x22, x1
   28c4c:	sub	x1, x1, x3
   28c50:	add	x1, x19, x1
   28c54:	cmp	x1, x4
   28c58:	b.hi	28c30 <acc_free@@OACC_2.0+0xf8>  // b.pmore
   28c5c:	ldr	x1, [x20, #16]
   28c60:	ldr	x23, [x1, #16]
   28c64:	ldxr	w1, [x0]
   28c68:	stlxr	w2, wzr, [x0]
   28c6c:	cbnz	w2, 28c64 <acc_free@@OACC_2.0+0x12c>
   28c70:	tbnz	w1, #31, 28ca8 <acc_free@@OACC_2.0+0x170>
   28c74:	ldr	x0, [x20]
   28c78:	add	x0, x22, x0
   28c7c:	sub	x0, x0, x23
   28c80:	add	x0, x19, x0
   28c84:	bl	86c0 <acc_unmap_data@plt>
   28c88:	ldr	x23, [sp, #48]
   28c8c:	b	28bdc <acc_free@@OACC_2.0+0xa4>
   28c90:	ldp	x21, x22, [sp, #32]
   28c94:	ldp	x29, x30, [sp], #80
   28c98:	b	88b0 <free@plt>
   28c9c:	ret
   28ca0:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   28ca4:	b	28bdc <acc_free@@OACC_2.0+0xa4>
   28ca8:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   28cac:	b	28c74 <acc_free@@OACC_2.0+0x13c>
   28cb0:	adrp	x3, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   28cb4:	add	x3, x3, #0x6d0
   28cb8:	adrp	x1, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   28cbc:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   28cc0:	add	x3, x3, #0x98
   28cc4:	add	x1, x1, #0x4a0
   28cc8:	add	x0, x0, #0x4d0
   28ccc:	mov	w2, #0x7f                  	// #127
   28cd0:	stp	x19, x20, [sp, #16]
   28cd4:	str	x23, [sp, #48]
   28cd8:	bl	8a60 <__assert_fail@plt>
   28cdc:	adrp	x1, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   28ce0:	add	x1, x1, #0x6d0
   28ce4:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   28ce8:	add	x1, x1, #0xa8
   28cec:	add	x0, x0, #0x5d0
   28cf0:	str	x23, [sp, #48]
   28cf4:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   28cf8:	str	x0, [sp, #72]
   28cfc:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   28d00:	ldr	x0, [sp, #72]
   28d04:	b	28b94 <acc_free@@OACC_2.0+0x5c>

0000000000028d08 <acc_create@@OACC_2.0>:
   28d08:	stp	x29, x30, [sp, #-128]!
   28d0c:	cmp	x0, #0x0
   28d10:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   28d14:	mov	x29, sp
   28d18:	stp	x19, x20, [sp, #16]
   28d1c:	mov	x19, x0
   28d20:	stp	x21, x22, [sp, #32]
   28d24:	str	x1, [sp, #64]
   28d28:	b.eq	28ea8 <acc_create@@OACC_2.0+0x1a0>  // b.none
   28d2c:	bl	28018 <acc_on_device@@OACC_2.0+0xd8>
   28d30:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   28d34:	ldr	x0, [x0, #4048]
   28d38:	mrs	x1, tpidr_el0
   28d3c:	ldr	x0, [x1, x0]
   28d40:	ldr	x21, [x0, #8]
   28d44:	ldr	w0, [x21, #8]
   28d48:	tbnz	w0, #0, 28df0 <acc_create@@OACC_2.0+0xe8>
   28d4c:	add	x20, x21, #0xa8
   28d50:	mov	w0, #0x1                   	// #1
   28d54:	ldaxr	w1, [x20]
   28d58:	cbnz	w1, 28d64 <acc_create@@OACC_2.0+0x5c>
   28d5c:	stxr	w2, w0, [x20]
   28d60:	cbnz	w2, 28d54 <acc_create@@OACC_2.0+0x4c>
   28d64:	cmp	w1, #0x0
   28d68:	b.ne	28ebc <acc_create@@OACC_2.0+0x1b4>  // b.any
   28d6c:	ldr	x3, [sp, #64]
   28d70:	add	x22, sp, #0x48
   28d74:	mov	x1, x22
   28d78:	add	x0, x21, #0xa0
   28d7c:	add	x3, x3, x19
   28d80:	stp	x19, x3, [sp, #72]
   28d84:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   28d88:	cbz	x0, 28e08 <acc_create@@OACC_2.0+0x100>
   28d8c:	ldp	x2, x3, [x0, #8]
   28d90:	ldr	x1, [sp, #64]
   28d94:	add	x1, x19, x1
   28d98:	cmp	x1, x2
   28d9c:	ldr	x22, [x3, #16]
   28da0:	ldr	x1, [x0, #24]
   28da4:	add	x22, x22, x1
   28da8:	b.hi	28ec8 <acc_create@@OACC_2.0+0x1c0>  // b.pmore
   28dac:	ldr	x1, [x0, #32]
   28db0:	cmn	x1, #0x1
   28db4:	b.eq	28dcc <acc_create@@OACC_2.0+0xc4>  // b.none
   28db8:	ldr	x2, [x0, #40]
   28dbc:	add	x1, x1, #0x1
   28dc0:	str	x1, [x0, #32]
   28dc4:	add	x1, x2, #0x1
   28dc8:	str	x1, [x0, #40]
   28dcc:	ldxr	w0, [x20]
   28dd0:	stlxr	w1, wzr, [x20]
   28dd4:	cbnz	w1, 28dcc <acc_create@@OACC_2.0+0xc4>
   28dd8:	tbnz	w0, #31, 28e90 <acc_create@@OACC_2.0+0x188>
   28ddc:	mov	x0, x22
   28de0:	ldp	x19, x20, [sp, #16]
   28de4:	ldp	x21, x22, [sp, #32]
   28de8:	ldp	x29, x30, [sp], #128
   28dec:	ret
   28df0:	mov	x22, x19
   28df4:	mov	x0, x22
   28df8:	ldp	x19, x20, [sp, #16]
   28dfc:	ldp	x21, x22, [sp, #32]
   28e00:	ldp	x29, x30, [sp], #128
   28e04:	ret
   28e08:	strh	wzr, [sp, #62]
   28e0c:	str	x19, [sp, #72]
   28e10:	ldxr	w0, [x20]
   28e14:	stlxr	w1, wzr, [x20]
   28e18:	cbnz	w1, 28e10 <acc_create@@OACC_2.0+0x108>
   28e1c:	tbnz	w0, #31, 28e9c <acc_create@@OACC_2.0+0x194>
   28e20:	mov	x2, x22
   28e24:	mov	x1, #0x1                   	// #1
   28e28:	add	x5, sp, #0x3e
   28e2c:	add	x4, sp, #0x40
   28e30:	mov	x0, x21
   28e34:	mov	w7, #0x0                   	// #0
   28e38:	mov	w6, #0x1                   	// #1
   28e3c:	mov	x3, #0x0                   	// #0
   28e40:	bl	20c80 <omp_get_place_proc_ids@@OMP_4.5+0x1ac0>
   28e44:	mov	x19, x0
   28e48:	mov	x0, #0x1                   	// #1
   28e4c:	mov	w2, w0
   28e50:	ldr	x1, [x19, #64]
   28e54:	str	x0, [x1, #40]
   28e58:	ldaxr	w1, [x20]
   28e5c:	cbnz	w1, 28e68 <acc_create@@OACC_2.0+0x160>
   28e60:	stxr	w0, w2, [x20]
   28e64:	cbnz	w0, 28e58 <acc_create@@OACC_2.0+0x150>
   28e68:	cmp	w1, #0x0
   28e6c:	b.ne	28ee4 <acc_create@@OACC_2.0+0x1dc>  // b.any
   28e70:	ldr	x0, [x21, #176]
   28e74:	str	x0, [x19, #40]
   28e78:	ldr	x22, [x19, #32]
   28e7c:	str	x19, [x21, #176]
   28e80:	ldxr	w0, [x20]
   28e84:	stlxr	w1, wzr, [x20]
   28e88:	cbnz	w1, 28e80 <acc_create@@OACC_2.0+0x178>
   28e8c:	tbz	w0, #31, 28ddc <acc_create@@OACC_2.0+0xd4>
   28e90:	mov	x0, x20
   28e94:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   28e98:	b	28ddc <acc_create@@OACC_2.0+0xd4>
   28e9c:	mov	x0, x20
   28ea0:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   28ea4:	b	28e20 <acc_create@@OACC_2.0+0x118>
   28ea8:	mov	w2, w1
   28eac:	mov	x1, x0
   28eb0:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   28eb4:	add	x0, x0, #0x5f8
   28eb8:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   28ebc:	mov	x0, x20
   28ec0:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   28ec4:	b	28d6c <acc_create@@OACC_2.0+0x64>
   28ec8:	mov	x0, x20
   28ecc:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   28ed0:	ldr	w2, [sp, #64]
   28ed4:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   28ed8:	mov	x1, x19
   28edc:	add	x0, x0, #0x610
   28ee0:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   28ee4:	mov	x0, x20
   28ee8:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   28eec:	b	28e70 <acc_create@@OACC_2.0+0x168>

0000000000028ef0 <acc_create_async@@OACC_2.5>:
   28ef0:	stp	x29, x30, [sp, #-160]!
   28ef4:	cmp	x0, #0x0
   28ef8:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   28efc:	mov	x29, sp
   28f00:	stp	x19, x20, [sp, #16]
   28f04:	mov	x19, x0
   28f08:	stp	x21, x22, [sp, #32]
   28f0c:	str	w2, [sp, #76]
   28f10:	str	x1, [sp, #96]
   28f14:	b.eq	290d0 <acc_create_async@@OACC_2.5+0x1e0>  // b.none
   28f18:	mov	w22, w2
   28f1c:	bl	28018 <acc_on_device@@OACC_2.0+0xd8>
   28f20:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   28f24:	ldr	x0, [x0, #4048]
   28f28:	mrs	x1, tpidr_el0
   28f2c:	ldr	x0, [x1, x0]
   28f30:	ldr	x21, [x0, #8]
   28f34:	ldr	w0, [x21, #8]
   28f38:	tbnz	w0, #0, 28fc8 <acc_create_async@@OACC_2.5+0xd8>
   28f3c:	add	x20, x21, #0xa8
   28f40:	mov	w0, #0x1                   	// #1
   28f44:	str	x23, [sp, #48]
   28f48:	ldaxr	w1, [x20]
   28f4c:	cbnz	w1, 28f58 <acc_create_async@@OACC_2.5+0x68>
   28f50:	stxr	w2, w0, [x20]
   28f54:	cbnz	w2, 28f48 <acc_create_async@@OACC_2.5+0x58>
   28f58:	cmp	w1, #0x0
   28f5c:	b.ne	290e8 <acc_create_async@@OACC_2.5+0x1f8>  // b.any
   28f60:	ldr	x3, [sp, #96]
   28f64:	add	x23, sp, #0x68
   28f68:	mov	x1, x23
   28f6c:	add	x0, x21, #0xa0
   28f70:	add	x3, x3, x19
   28f74:	stp	x19, x3, [sp, #104]
   28f78:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   28f7c:	cbz	x0, 28fd8 <acc_create_async@@OACC_2.5+0xe8>
   28f80:	ldr	x1, [sp, #96]
   28f84:	ldr	x2, [x0, #8]
   28f88:	add	x1, x19, x1
   28f8c:	cmp	x1, x2
   28f90:	b.hi	290f4 <acc_create_async@@OACC_2.5+0x204>  // b.pmore
   28f94:	ldr	x1, [x0, #32]
   28f98:	cmn	x1, #0x1
   28f9c:	b.eq	28fb4 <acc_create_async@@OACC_2.5+0xc4>  // b.none
   28fa0:	ldr	x2, [x0, #40]
   28fa4:	add	x1, x1, #0x1
   28fa8:	str	x1, [x0, #32]
   28fac:	add	x1, x2, #0x1
   28fb0:	str	x1, [x0, #40]
   28fb4:	ldxr	w0, [x20]
   28fb8:	stlxr	w1, wzr, [x20]
   28fbc:	cbnz	w1, 28fb4 <acc_create_async@@OACC_2.5+0xc4>
   28fc0:	tbnz	w0, #31, 2907c <acc_create_async@@OACC_2.5+0x18c>
   28fc4:	ldr	x23, [sp, #48]
   28fc8:	ldp	x19, x20, [sp, #16]
   28fcc:	ldp	x21, x22, [sp, #32]
   28fd0:	ldp	x29, x30, [sp], #160
   28fd4:	ret
   28fd8:	strh	wzr, [sp, #94]
   28fdc:	str	x19, [sp, #104]
   28fe0:	ldxr	w0, [x20]
   28fe4:	stlxr	w1, wzr, [x20]
   28fe8:	cbnz	w1, 28fe0 <acc_create_async@@OACC_2.5+0xf0>
   28fec:	tbnz	w0, #31, 290c4 <acc_create_async@@OACC_2.5+0x1d4>
   28ff0:	cmn	w22, #0x1
   28ff4:	b.lt	2908c <acc_create_async@@OACC_2.5+0x19c>  // b.tstop
   28ff8:	ldr	x1, [x21, #248]
   28ffc:	mov	w0, w22
   29000:	blr	x1
   29004:	mov	x2, x23
   29008:	mov	x3, #0x0                   	// #0
   2900c:	mov	x1, #0x1                   	// #1
   29010:	add	x5, sp, #0x5e
   29014:	add	x4, sp, #0x60
   29018:	mov	x0, x21
   2901c:	mov	w7, #0x0                   	// #0
   29020:	mov	w6, #0x1                   	// #1
   29024:	bl	20c80 <omp_get_place_proc_ids@@OMP_4.5+0x1ac0>
   29028:	mov	x19, x0
   2902c:	ldr	x1, [x21, #248]
   29030:	mov	x3, #0x1                   	// #1
   29034:	ldr	x2, [x19, #64]
   29038:	mov	w0, #0xfffffffe            	// #-2
   2903c:	str	x3, [x2, #40]
   29040:	blr	x1
   29044:	mov	w0, #0x1                   	// #1
   29048:	ldaxr	w1, [x20]
   2904c:	cbnz	w1, 29058 <acc_create_async@@OACC_2.5+0x168>
   29050:	stxr	w2, w0, [x20]
   29054:	cbnz	w2, 29048 <acc_create_async@@OACC_2.5+0x158>
   29058:	cmp	w1, #0x0
   2905c:	b.ne	29110 <acc_create_async@@OACC_2.5+0x220>  // b.any
   29060:	ldr	x0, [x21, #176]
   29064:	str	x0, [x19, #40]
   29068:	str	x19, [x21, #176]
   2906c:	ldxr	w0, [x20]
   29070:	stlxr	w1, wzr, [x20]
   29074:	cbnz	w1, 2906c <acc_create_async@@OACC_2.5+0x17c>
   29078:	tbz	w0, #31, 28fc4 <acc_create_async@@OACC_2.5+0xd4>
   2907c:	mov	x0, x20
   29080:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   29084:	ldr	x23, [sp, #48]
   29088:	b	28fc8 <acc_create_async@@OACC_2.5+0xd8>
   2908c:	mov	x1, #0x1                   	// #1
   29090:	mov	x2, x23
   29094:	add	x5, sp, #0x5e
   29098:	add	x4, sp, #0x60
   2909c:	mov	x0, x21
   290a0:	mov	w7, #0x0                   	// #0
   290a4:	mov	w6, #0x1                   	// #1
   290a8:	mov	x3, #0x0                   	// #0
   290ac:	bl	20c80 <omp_get_place_proc_ids@@OMP_4.5+0x1ac0>
   290b0:	mov	x19, x0
   290b4:	ldr	x0, [x0, #64]
   290b8:	mov	x1, #0x1                   	// #1
   290bc:	str	x1, [x0, #40]
   290c0:	b	29044 <acc_create_async@@OACC_2.5+0x154>
   290c4:	mov	x0, x20
   290c8:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   290cc:	b	28ff0 <acc_create_async@@OACC_2.5+0x100>
   290d0:	mov	w2, w1
   290d4:	mov	x1, x0
   290d8:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   290dc:	add	x0, x0, #0x5f8
   290e0:	str	x23, [sp, #48]
   290e4:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   290e8:	mov	x0, x20
   290ec:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   290f0:	b	28f60 <acc_create_async@@OACC_2.5+0x70>
   290f4:	mov	x0, x20
   290f8:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   290fc:	ldr	w2, [sp, #96]
   29100:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   29104:	mov	x1, x19
   29108:	add	x0, x0, #0x610
   2910c:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   29110:	mov	x0, x20
   29114:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   29118:	b	29060 <acc_create_async@@OACC_2.5+0x170>
   2911c:	nop

0000000000029120 <acc_copyin@@OACC_2.0>:
   29120:	stp	x29, x30, [sp, #-128]!
   29124:	cmp	x0, #0x0
   29128:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   2912c:	mov	x29, sp
   29130:	stp	x19, x20, [sp, #16]
   29134:	mov	x19, x0
   29138:	stp	x21, x22, [sp, #32]
   2913c:	str	x1, [sp, #64]
   29140:	b.eq	292c4 <acc_copyin@@OACC_2.0+0x1a4>  // b.none
   29144:	bl	28018 <acc_on_device@@OACC_2.0+0xd8>
   29148:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   2914c:	ldr	x0, [x0, #4048]
   29150:	mrs	x1, tpidr_el0
   29154:	ldr	x0, [x1, x0]
   29158:	ldr	x22, [x0, #8]
   2915c:	ldr	w0, [x22, #8]
   29160:	tbnz	w0, #0, 29208 <acc_copyin@@OACC_2.0+0xe8>
   29164:	add	x21, x22, #0xa8
   29168:	mov	w0, #0x1                   	// #1
   2916c:	ldaxr	w1, [x21]
   29170:	cbnz	w1, 2917c <acc_copyin@@OACC_2.0+0x5c>
   29174:	stxr	w2, w0, [x21]
   29178:	cbnz	w2, 2916c <acc_copyin@@OACC_2.0+0x4c>
   2917c:	cmp	w1, #0x0
   29180:	b.ne	292d8 <acc_copyin@@OACC_2.0+0x1b8>  // b.any
   29184:	ldr	x3, [sp, #64]
   29188:	add	x20, sp, #0x48
   2918c:	mov	x1, x20
   29190:	add	x0, x22, #0xa0
   29194:	add	x3, x3, x19
   29198:	stp	x19, x3, [sp, #72]
   2919c:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   291a0:	cbz	x0, 29220 <acc_copyin@@OACC_2.0+0x100>
   291a4:	ldp	x2, x3, [x0, #8]
   291a8:	ldr	x1, [sp, #64]
   291ac:	add	x1, x19, x1
   291b0:	cmp	x1, x2
   291b4:	ldr	x20, [x3, #16]
   291b8:	ldr	x1, [x0, #24]
   291bc:	add	x20, x20, x1
   291c0:	b.hi	292e4 <acc_copyin@@OACC_2.0+0x1c4>  // b.pmore
   291c4:	ldr	x1, [x0, #32]
   291c8:	cmn	x1, #0x1
   291cc:	b.eq	291e4 <acc_copyin@@OACC_2.0+0xc4>  // b.none
   291d0:	ldr	x2, [x0, #40]
   291d4:	add	x1, x1, #0x1
   291d8:	str	x1, [x0, #32]
   291dc:	add	x1, x2, #0x1
   291e0:	str	x1, [x0, #40]
   291e4:	ldxr	w0, [x21]
   291e8:	stlxr	w1, wzr, [x21]
   291ec:	cbnz	w1, 291e4 <acc_copyin@@OACC_2.0+0xc4>
   291f0:	tbnz	w0, #31, 292ac <acc_copyin@@OACC_2.0+0x18c>
   291f4:	mov	x0, x20
   291f8:	ldp	x19, x20, [sp, #16]
   291fc:	ldp	x21, x22, [sp, #32]
   29200:	ldp	x29, x30, [sp], #128
   29204:	ret
   29208:	mov	x20, x19
   2920c:	mov	x0, x20
   29210:	ldp	x19, x20, [sp, #16]
   29214:	ldp	x21, x22, [sp, #32]
   29218:	ldp	x29, x30, [sp], #128
   2921c:	ret
   29220:	mov	w0, #0x1                   	// #1
   29224:	strh	w0, [sp, #62]
   29228:	str	x19, [sp, #72]
   2922c:	ldxr	w0, [x21]
   29230:	stlxr	w1, wzr, [x21]
   29234:	cbnz	w1, 2922c <acc_copyin@@OACC_2.0+0x10c>
   29238:	tbnz	w0, #31, 292b8 <acc_copyin@@OACC_2.0+0x198>
   2923c:	mov	x2, x20
   29240:	mov	x1, #0x1                   	// #1
   29244:	add	x5, sp, #0x3e
   29248:	add	x4, sp, #0x40
   2924c:	mov	x0, x22
   29250:	mov	w7, #0x0                   	// #0
   29254:	mov	w6, #0x1                   	// #1
   29258:	mov	x3, #0x0                   	// #0
   2925c:	bl	20c80 <omp_get_place_proc_ids@@OMP_4.5+0x1ac0>
   29260:	mov	x19, x0
   29264:	mov	x0, #0x1                   	// #1
   29268:	mov	w2, w0
   2926c:	ldr	x1, [x19, #64]
   29270:	str	x0, [x1, #40]
   29274:	ldaxr	w1, [x21]
   29278:	cbnz	w1, 29284 <acc_copyin@@OACC_2.0+0x164>
   2927c:	stxr	w0, w2, [x21]
   29280:	cbnz	w0, 29274 <acc_copyin@@OACC_2.0+0x154>
   29284:	cmp	w1, #0x0
   29288:	b.ne	29300 <acc_copyin@@OACC_2.0+0x1e0>  // b.any
   2928c:	ldr	x0, [x22, #176]
   29290:	str	x0, [x19, #40]
   29294:	ldr	x20, [x19, #32]
   29298:	str	x19, [x22, #176]
   2929c:	ldxr	w0, [x21]
   292a0:	stlxr	w1, wzr, [x21]
   292a4:	cbnz	w1, 2929c <acc_copyin@@OACC_2.0+0x17c>
   292a8:	tbz	w0, #31, 291f4 <acc_copyin@@OACC_2.0+0xd4>
   292ac:	mov	x0, x21
   292b0:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   292b4:	b	291f4 <acc_copyin@@OACC_2.0+0xd4>
   292b8:	mov	x0, x21
   292bc:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   292c0:	b	2923c <acc_copyin@@OACC_2.0+0x11c>
   292c4:	mov	w2, w1
   292c8:	mov	x1, x0
   292cc:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   292d0:	add	x0, x0, #0x5f8
   292d4:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   292d8:	mov	x0, x21
   292dc:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   292e0:	b	29184 <acc_copyin@@OACC_2.0+0x64>
   292e4:	mov	x0, x21
   292e8:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   292ec:	ldr	w2, [sp, #64]
   292f0:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   292f4:	mov	x1, x19
   292f8:	add	x0, x0, #0x610
   292fc:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   29300:	mov	x0, x21
   29304:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   29308:	b	2928c <acc_copyin@@OACC_2.0+0x16c>
   2930c:	nop

0000000000029310 <acc_copyin_async@@OACC_2.5>:
   29310:	stp	x29, x30, [sp, #-160]!
   29314:	cmp	x0, #0x0
   29318:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   2931c:	mov	x29, sp
   29320:	stp	x19, x20, [sp, #16]
   29324:	mov	x19, x0
   29328:	stp	x21, x22, [sp, #32]
   2932c:	str	w2, [sp, #76]
   29330:	str	x1, [sp, #96]
   29334:	b.eq	294f4 <acc_copyin_async@@OACC_2.5+0x1e4>  // b.none
   29338:	mov	w22, w2
   2933c:	bl	28018 <acc_on_device@@OACC_2.0+0xd8>
   29340:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   29344:	ldr	x0, [x0, #4048]
   29348:	mrs	x1, tpidr_el0
   2934c:	ldr	x0, [x1, x0]
   29350:	ldr	x21, [x0, #8]
   29354:	ldr	w0, [x21, #8]
   29358:	tbnz	w0, #0, 293e8 <acc_copyin_async@@OACC_2.5+0xd8>
   2935c:	add	x20, x21, #0xa8
   29360:	mov	w0, #0x1                   	// #1
   29364:	str	x23, [sp, #48]
   29368:	ldaxr	w1, [x20]
   2936c:	cbnz	w1, 29378 <acc_copyin_async@@OACC_2.5+0x68>
   29370:	stxr	w2, w0, [x20]
   29374:	cbnz	w2, 29368 <acc_copyin_async@@OACC_2.5+0x58>
   29378:	cmp	w1, #0x0
   2937c:	b.ne	2950c <acc_copyin_async@@OACC_2.5+0x1fc>  // b.any
   29380:	ldr	x3, [sp, #96]
   29384:	add	x23, sp, #0x68
   29388:	mov	x1, x23
   2938c:	add	x0, x21, #0xa0
   29390:	add	x3, x3, x19
   29394:	stp	x19, x3, [sp, #104]
   29398:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   2939c:	cbz	x0, 293f8 <acc_copyin_async@@OACC_2.5+0xe8>
   293a0:	ldr	x1, [sp, #96]
   293a4:	ldr	x2, [x0, #8]
   293a8:	add	x1, x19, x1
   293ac:	cmp	x1, x2
   293b0:	b.hi	29518 <acc_copyin_async@@OACC_2.5+0x208>  // b.pmore
   293b4:	ldr	x1, [x0, #32]
   293b8:	cmn	x1, #0x1
   293bc:	b.eq	293d4 <acc_copyin_async@@OACC_2.5+0xc4>  // b.none
   293c0:	ldr	x2, [x0, #40]
   293c4:	add	x1, x1, #0x1
   293c8:	str	x1, [x0, #32]
   293cc:	add	x1, x2, #0x1
   293d0:	str	x1, [x0, #40]
   293d4:	ldxr	w0, [x20]
   293d8:	stlxr	w1, wzr, [x20]
   293dc:	cbnz	w1, 293d4 <acc_copyin_async@@OACC_2.5+0xc4>
   293e0:	tbnz	w0, #31, 294a0 <acc_copyin_async@@OACC_2.5+0x190>
   293e4:	ldr	x23, [sp, #48]
   293e8:	ldp	x19, x20, [sp, #16]
   293ec:	ldp	x21, x22, [sp, #32]
   293f0:	ldp	x29, x30, [sp], #160
   293f4:	ret
   293f8:	mov	w0, #0x1                   	// #1
   293fc:	strh	w0, [sp, #94]
   29400:	str	x19, [sp, #104]
   29404:	ldxr	w0, [x20]
   29408:	stlxr	w1, wzr, [x20]
   2940c:	cbnz	w1, 29404 <acc_copyin_async@@OACC_2.5+0xf4>
   29410:	tbnz	w0, #31, 294e8 <acc_copyin_async@@OACC_2.5+0x1d8>
   29414:	cmn	w22, #0x1
   29418:	b.lt	294b0 <acc_copyin_async@@OACC_2.5+0x1a0>  // b.tstop
   2941c:	ldr	x1, [x21, #248]
   29420:	mov	w0, w22
   29424:	blr	x1
   29428:	mov	x2, x23
   2942c:	mov	x3, #0x0                   	// #0
   29430:	mov	x1, #0x1                   	// #1
   29434:	add	x5, sp, #0x5e
   29438:	add	x4, sp, #0x60
   2943c:	mov	x0, x21
   29440:	mov	w7, #0x0                   	// #0
   29444:	mov	w6, #0x1                   	// #1
   29448:	bl	20c80 <omp_get_place_proc_ids@@OMP_4.5+0x1ac0>
   2944c:	mov	x19, x0
   29450:	ldr	x1, [x21, #248]
   29454:	mov	x3, #0x1                   	// #1
   29458:	ldr	x2, [x19, #64]
   2945c:	mov	w0, #0xfffffffe            	// #-2
   29460:	str	x3, [x2, #40]
   29464:	blr	x1
   29468:	mov	w0, #0x1                   	// #1
   2946c:	ldaxr	w1, [x20]
   29470:	cbnz	w1, 2947c <acc_copyin_async@@OACC_2.5+0x16c>
   29474:	stxr	w2, w0, [x20]
   29478:	cbnz	w2, 2946c <acc_copyin_async@@OACC_2.5+0x15c>
   2947c:	cmp	w1, #0x0
   29480:	b.ne	29534 <acc_copyin_async@@OACC_2.5+0x224>  // b.any
   29484:	ldr	x0, [x21, #176]
   29488:	str	x0, [x19, #40]
   2948c:	str	x19, [x21, #176]
   29490:	ldxr	w0, [x20]
   29494:	stlxr	w1, wzr, [x20]
   29498:	cbnz	w1, 29490 <acc_copyin_async@@OACC_2.5+0x180>
   2949c:	tbz	w0, #31, 293e4 <acc_copyin_async@@OACC_2.5+0xd4>
   294a0:	mov	x0, x20
   294a4:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   294a8:	ldr	x23, [sp, #48]
   294ac:	b	293e8 <acc_copyin_async@@OACC_2.5+0xd8>
   294b0:	mov	x1, #0x1                   	// #1
   294b4:	mov	x2, x23
   294b8:	add	x5, sp, #0x5e
   294bc:	add	x4, sp, #0x60
   294c0:	mov	x0, x21
   294c4:	mov	w7, #0x0                   	// #0
   294c8:	mov	w6, #0x1                   	// #1
   294cc:	mov	x3, #0x0                   	// #0
   294d0:	bl	20c80 <omp_get_place_proc_ids@@OMP_4.5+0x1ac0>
   294d4:	mov	x19, x0
   294d8:	ldr	x0, [x0, #64]
   294dc:	mov	x1, #0x1                   	// #1
   294e0:	str	x1, [x0, #40]
   294e4:	b	29468 <acc_copyin_async@@OACC_2.5+0x158>
   294e8:	mov	x0, x20
   294ec:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   294f0:	b	29414 <acc_copyin_async@@OACC_2.5+0x104>
   294f4:	mov	w2, w1
   294f8:	mov	x1, x0
   294fc:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   29500:	add	x0, x0, #0x5f8
   29504:	str	x23, [sp, #48]
   29508:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2950c:	mov	x0, x20
   29510:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   29514:	b	29380 <acc_copyin_async@@OACC_2.5+0x70>
   29518:	mov	x0, x20
   2951c:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   29520:	ldr	w2, [sp, #96]
   29524:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   29528:	mov	x1, x19
   2952c:	add	x0, x0, #0x610
   29530:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   29534:	mov	x0, x20
   29538:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   2953c:	b	29484 <acc_copyin_async@@OACC_2.5+0x174>

0000000000029540 <acc_delete@@OACC_2.0>:
   29540:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   29544:	ldr	x2, [x2, #4048]
   29548:	mrs	x3, tpidr_el0
   2954c:	stp	x29, x30, [sp, #-128]!
   29550:	mov	x29, sp
   29554:	stp	x19, x20, [sp, #16]
   29558:	mov	x19, x0
   2955c:	ldr	x0, [x3, x2]
   29560:	stp	x21, x22, [sp, #32]
   29564:	ldr	x21, [x0, #8]
   29568:	ldr	w0, [x21, #8]
   2956c:	tbnz	w0, #0, 29628 <acc_delete@@OACC_2.0+0xe8>
   29570:	mov	x20, x1
   29574:	add	x22, x21, #0xa8
   29578:	mov	w0, #0x1                   	// #1
   2957c:	ldaxr	w1, [x22]
   29580:	cbnz	w1, 2958c <acc_delete@@OACC_2.0+0x4c>
   29584:	stxr	w2, w0, [x22]
   29588:	cbnz	w2, 2957c <acc_delete@@OACC_2.0+0x3c>
   2958c:	cmp	w1, #0x0
   29590:	b.ne	296a4 <acc_delete@@OACC_2.0+0x164>  // b.any
   29594:	add	x2, x20, x19
   29598:	add	x1, sp, #0x48
   2959c:	add	x0, x21, #0xa0
   295a0:	stp	x19, x2, [sp, #72]
   295a4:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   295a8:	mov	x1, x0
   295ac:	cbz	x0, 296c4 <acc_delete@@OACC_2.0+0x184>
   295b0:	ldp	x0, x2, [x0]
   295b4:	ldr	x3, [x1, #16]
   295b8:	cmp	x19, x0
   295bc:	sub	x2, x2, x0
   295c0:	ccmp	x20, x2, #0x0, eq  // eq = none
   295c4:	b.ne	2967c <acc_delete@@OACC_2.0+0x13c>  // b.any
   295c8:	ldr	x0, [x1, #32]
   295cc:	cmn	x0, #0x1
   295d0:	b.eq	295f8 <acc_delete@@OACC_2.0+0xb8>  // b.none
   295d4:	ldr	x2, [x1, #40]
   295d8:	cmp	x0, x2
   295dc:	b.cc	296b0 <acc_delete@@OACC_2.0+0x170>  // b.lo, b.ul, b.last
   295e0:	cbz	x2, 295f0 <acc_delete@@OACC_2.0+0xb0>
   295e4:	sub	x2, x2, #0x1
   295e8:	sub	x0, x0, #0x1
   295ec:	stp	x0, x2, [x1, #32]
   295f0:	cbnz	x0, 29610 <acc_delete@@OACC_2.0+0xd0>
   295f4:	b	295fc <acc_delete@@OACC_2.0+0xbc>
   295f8:	stp	xzr, xzr, [x1, #32]
   295fc:	ldr	x0, [x3]
   29600:	cmp	x0, #0x2
   29604:	b.eq	29638 <acc_delete@@OACC_2.0+0xf8>  // b.none
   29608:	mov	x0, x21
   2960c:	bl	22598 <omp_get_place_proc_ids@@OMP_4.5+0x33d8>
   29610:	ldxr	w0, [x22]
   29614:	stlxr	w1, wzr, [x22]
   29618:	cbnz	w1, 29610 <acc_delete@@OACC_2.0+0xd0>
   2961c:	tbz	w0, #31, 29628 <acc_delete@@OACC_2.0+0xe8>
   29620:	mov	x0, x22
   29624:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   29628:	ldp	x19, x20, [sp, #16]
   2962c:	ldp	x21, x22, [sp, #32]
   29630:	ldp	x29, x30, [sp], #128
   29634:	ret
   29638:	ldr	x4, [x21, #176]
   2963c:	cbz	x4, 29608 <acc_delete@@OACC_2.0+0xc8>
   29640:	cmp	x3, x4
   29644:	ldr	x0, [x4, #40]
   29648:	b.eq	2966c <acc_delete@@OACC_2.0+0x12c>  // b.none
   2964c:	nop
   29650:	cbz	x0, 29608 <acc_delete@@OACC_2.0+0xc8>
   29654:	cmp	x3, x0
   29658:	ldr	x2, [x0, #40]
   2965c:	b.eq	29674 <acc_delete@@OACC_2.0+0x134>  // b.none
   29660:	mov	x4, x0
   29664:	mov	x0, x2
   29668:	b	29650 <acc_delete@@OACC_2.0+0x110>
   2966c:	str	x0, [x21, #176]
   29670:	b	29608 <acc_delete@@OACC_2.0+0xc8>
   29674:	str	x2, [x4, #40]
   29678:	b	29608 <acc_delete@@OACC_2.0+0xc8>
   2967c:	mov	x0, x22
   29680:	stp	x1, x2, [sp, #48]
   29684:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   29688:	ldp	x1, x2, [sp, #48]
   2968c:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   29690:	mov	w4, w20
   29694:	mov	x3, x19
   29698:	add	x0, x0, #0x640
   2969c:	ldr	x1, [x1]
   296a0:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   296a4:	mov	x0, x22
   296a8:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   296ac:	b	29594 <acc_delete@@OACC_2.0+0x54>
   296b0:	mov	x0, x22
   296b4:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   296b8:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   296bc:	add	x0, x0, #0x660
   296c0:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   296c4:	mov	x0, x22
   296c8:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   296cc:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   296d0:	mov	w2, w20
   296d4:	mov	x1, x19
   296d8:	add	x0, x0, #0x628
   296dc:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>

00000000000296e0 <acc_delete_async@@OACC_2.5>:
   296e0:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   296e4:	ldr	x2, [x2, #4048]
   296e8:	mrs	x3, tpidr_el0
   296ec:	stp	x29, x30, [sp, #-128]!
   296f0:	mov	x29, sp
   296f4:	stp	x19, x20, [sp, #16]
   296f8:	mov	x19, x0
   296fc:	ldr	x0, [x3, x2]
   29700:	stp	x21, x22, [sp, #32]
   29704:	ldr	x21, [x0, #8]
   29708:	ldr	w0, [x21, #8]
   2970c:	tbnz	w0, #0, 297cc <acc_delete_async@@OACC_2.5+0xec>
   29710:	mov	x20, x1
   29714:	add	x22, x21, #0xa8
   29718:	mov	w0, #0x1                   	// #1
   2971c:	ldaxr	w1, [x22]
   29720:	cbnz	w1, 2972c <acc_delete_async@@OACC_2.5+0x4c>
   29724:	stxr	w2, w0, [x22]
   29728:	cbnz	w2, 2971c <acc_delete_async@@OACC_2.5+0x3c>
   2972c:	cmp	w1, #0x0
   29730:	b.ne	29844 <acc_delete_async@@OACC_2.5+0x164>  // b.any
   29734:	add	x2, x20, x19
   29738:	add	x1, sp, #0x48
   2973c:	add	x0, x21, #0xa0
   29740:	stp	x19, x2, [sp, #72]
   29744:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   29748:	str	x0, [sp, #48]
   2974c:	mov	x1, x0
   29750:	cbz	x0, 29864 <acc_delete_async@@OACC_2.5+0x184>
   29754:	ldp	x0, x2, [x0]
   29758:	ldr	x3, [x1, #16]
   2975c:	cmp	x19, x0
   29760:	sub	x2, x2, x0
   29764:	ccmp	x20, x2, #0x0, eq  // eq = none
   29768:	b.ne	2981c <acc_delete_async@@OACC_2.5+0x13c>  // b.any
   2976c:	ldr	x0, [x1, #32]
   29770:	cmn	x0, #0x1
   29774:	b.eq	2979c <acc_delete_async@@OACC_2.5+0xbc>  // b.none
   29778:	ldr	x2, [x1, #40]
   2977c:	cmp	x0, x2
   29780:	b.cc	29850 <acc_delete_async@@OACC_2.5+0x170>  // b.lo, b.ul, b.last
   29784:	cbz	x2, 29794 <acc_delete_async@@OACC_2.5+0xb4>
   29788:	sub	x2, x2, #0x1
   2978c:	sub	x0, x0, #0x1
   29790:	stp	x0, x2, [x1, #32]
   29794:	cbnz	x0, 297b4 <acc_delete_async@@OACC_2.5+0xd4>
   29798:	b	297a0 <acc_delete_async@@OACC_2.5+0xc0>
   2979c:	stp	xzr, xzr, [x1, #32]
   297a0:	ldr	x0, [x3]
   297a4:	cmp	x0, #0x2
   297a8:	b.eq	297dc <acc_delete_async@@OACC_2.5+0xfc>  // b.none
   297ac:	mov	x0, x21
   297b0:	bl	22598 <omp_get_place_proc_ids@@OMP_4.5+0x33d8>
   297b4:	ldxr	w0, [x22]
   297b8:	stlxr	w1, wzr, [x22]
   297bc:	cbnz	w1, 297b4 <acc_delete_async@@OACC_2.5+0xd4>
   297c0:	tbz	w0, #31, 297cc <acc_delete_async@@OACC_2.5+0xec>
   297c4:	mov	x0, x22
   297c8:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   297cc:	ldp	x19, x20, [sp, #16]
   297d0:	ldp	x21, x22, [sp, #32]
   297d4:	ldp	x29, x30, [sp], #128
   297d8:	ret
   297dc:	ldr	x4, [x21, #176]
   297e0:	cbz	x4, 297ac <acc_delete_async@@OACC_2.5+0xcc>
   297e4:	cmp	x3, x4
   297e8:	ldr	x0, [x4, #40]
   297ec:	b.eq	2980c <acc_delete_async@@OACC_2.5+0x12c>  // b.none
   297f0:	cbz	x0, 297ac <acc_delete_async@@OACC_2.5+0xcc>
   297f4:	cmp	x3, x0
   297f8:	ldr	x2, [x0, #40]
   297fc:	b.eq	29814 <acc_delete_async@@OACC_2.5+0x134>  // b.none
   29800:	mov	x4, x0
   29804:	mov	x0, x2
   29808:	b	297f0 <acc_delete_async@@OACC_2.5+0x110>
   2980c:	str	x0, [x21, #176]
   29810:	b	297ac <acc_delete_async@@OACC_2.5+0xcc>
   29814:	str	x2, [x4, #40]
   29818:	b	297ac <acc_delete_async@@OACC_2.5+0xcc>
   2981c:	mov	x0, x22
   29820:	stp	x1, x2, [sp, #48]
   29824:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   29828:	ldp	x1, x2, [sp, #48]
   2982c:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   29830:	mov	w4, w20
   29834:	mov	x3, x19
   29838:	add	x0, x0, #0x640
   2983c:	ldr	x1, [x1]
   29840:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   29844:	mov	x0, x22
   29848:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   2984c:	b	29734 <acc_delete_async@@OACC_2.5+0x54>
   29850:	mov	x0, x22
   29854:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   29858:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2985c:	add	x0, x0, #0x660
   29860:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   29864:	mov	x0, x22
   29868:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   2986c:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   29870:	mov	w2, w20
   29874:	mov	x1, x19
   29878:	add	x0, x0, #0x628
   2987c:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>

0000000000029880 <acc_delete_finalize@@OACC_2.5>:
   29880:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   29884:	ldr	x2, [x2, #4048]
   29888:	mrs	x3, tpidr_el0
   2988c:	stp	x29, x30, [sp, #-128]!
   29890:	mov	x29, sp
   29894:	stp	x19, x20, [sp, #16]
   29898:	mov	x19, x0
   2989c:	ldr	x0, [x3, x2]
   298a0:	stp	x21, x22, [sp, #32]
   298a4:	ldr	x21, [x0, #8]
   298a8:	ldr	w0, [x21, #8]
   298ac:	tbnz	w0, #0, 2993c <acc_delete_finalize@@OACC_2.5+0xbc>
   298b0:	mov	x20, x1
   298b4:	add	x22, x21, #0xa8
   298b8:	mov	w0, #0x1                   	// #1
   298bc:	ldaxr	w1, [x22]
   298c0:	cbnz	w1, 298cc <acc_delete_finalize@@OACC_2.5+0x4c>
   298c4:	stxr	w2, w0, [x22]
   298c8:	cbnz	w2, 298bc <acc_delete_finalize@@OACC_2.5+0x3c>
   298cc:	cmp	w1, #0x0
   298d0:	b.ne	299f8 <acc_delete_finalize@@OACC_2.5+0x178>  // b.any
   298d4:	add	x2, x20, x19
   298d8:	add	x1, sp, #0x48
   298dc:	add	x0, x21, #0xa0
   298e0:	stp	x19, x2, [sp, #72]
   298e4:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   298e8:	mov	x1, x0
   298ec:	cbz	x0, 299dc <acc_delete_finalize@@OACC_2.5+0x15c>
   298f0:	ldp	x0, x2, [x0]
   298f4:	ldr	x3, [x1, #16]
   298f8:	cmp	x19, x0
   298fc:	sub	x2, x2, x0
   29900:	ccmp	x20, x2, #0x0, eq  // eq = none
   29904:	b.ne	299b4 <acc_delete_finalize@@OACC_2.5+0x134>  // b.any
   29908:	ldr	x0, [x1, #32]
   2990c:	cmn	x0, #0x1
   29910:	b.eq	2994c <acc_delete_finalize@@OACC_2.5+0xcc>  // b.none
   29914:	ldr	x2, [x1, #40]
   29918:	cmp	x0, x2
   2991c:	b.cc	29a04 <acc_delete_finalize@@OACC_2.5+0x184>  // b.lo, b.ul, b.last
   29920:	sub	x0, x0, x2
   29924:	stp	x0, xzr, [x1, #32]
   29928:	cbz	x0, 29950 <acc_delete_finalize@@OACC_2.5+0xd0>
   2992c:	ldxr	w0, [x22]
   29930:	stlxr	w1, wzr, [x22]
   29934:	cbnz	w1, 2992c <acc_delete_finalize@@OACC_2.5+0xac>
   29938:	tbnz	w0, #31, 29968 <acc_delete_finalize@@OACC_2.5+0xe8>
   2993c:	ldp	x19, x20, [sp, #16]
   29940:	ldp	x21, x22, [sp, #32]
   29944:	ldp	x29, x30, [sp], #128
   29948:	ret
   2994c:	stp	xzr, xzr, [x1, #32]
   29950:	ldr	x0, [x3]
   29954:	cmp	x0, #0x2
   29958:	b.eq	29974 <acc_delete_finalize@@OACC_2.5+0xf4>  // b.none
   2995c:	mov	x0, x21
   29960:	bl	22598 <omp_get_place_proc_ids@@OMP_4.5+0x33d8>
   29964:	b	2992c <acc_delete_finalize@@OACC_2.5+0xac>
   29968:	mov	x0, x22
   2996c:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   29970:	b	2993c <acc_delete_finalize@@OACC_2.5+0xbc>
   29974:	ldr	x4, [x21, #176]
   29978:	cbz	x4, 2995c <acc_delete_finalize@@OACC_2.5+0xdc>
   2997c:	cmp	x3, x4
   29980:	ldr	x0, [x4, #40]
   29984:	b.eq	299a4 <acc_delete_finalize@@OACC_2.5+0x124>  // b.none
   29988:	cbz	x0, 2995c <acc_delete_finalize@@OACC_2.5+0xdc>
   2998c:	cmp	x3, x0
   29990:	ldr	x2, [x0, #40]
   29994:	b.eq	299ac <acc_delete_finalize@@OACC_2.5+0x12c>  // b.none
   29998:	mov	x4, x0
   2999c:	mov	x0, x2
   299a0:	b	29988 <acc_delete_finalize@@OACC_2.5+0x108>
   299a4:	str	x0, [x21, #176]
   299a8:	b	2995c <acc_delete_finalize@@OACC_2.5+0xdc>
   299ac:	str	x2, [x4, #40]
   299b0:	b	2995c <acc_delete_finalize@@OACC_2.5+0xdc>
   299b4:	mov	x0, x22
   299b8:	stp	x1, x2, [sp, #48]
   299bc:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   299c0:	ldp	x1, x2, [sp, #48]
   299c4:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   299c8:	mov	w4, w20
   299cc:	mov	x3, x19
   299d0:	add	x0, x0, #0x640
   299d4:	ldr	x1, [x1]
   299d8:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   299dc:	mov	x0, x22
   299e0:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   299e4:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   299e8:	mov	w2, w20
   299ec:	mov	x1, x19
   299f0:	add	x0, x0, #0x628
   299f4:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   299f8:	mov	x0, x22
   299fc:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   29a00:	b	298d4 <acc_delete_finalize@@OACC_2.5+0x54>
   29a04:	mov	x0, x22
   29a08:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   29a0c:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   29a10:	add	x0, x0, #0x660
   29a14:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>

0000000000029a18 <acc_delete_finalize_async@@OACC_2.5>:
   29a18:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   29a1c:	ldr	x2, [x2, #4048]
   29a20:	mrs	x3, tpidr_el0
   29a24:	stp	x29, x30, [sp, #-128]!
   29a28:	mov	x29, sp
   29a2c:	stp	x19, x20, [sp, #16]
   29a30:	mov	x19, x0
   29a34:	ldr	x0, [x3, x2]
   29a38:	stp	x21, x22, [sp, #32]
   29a3c:	ldr	x21, [x0, #8]
   29a40:	ldr	w0, [x21, #8]
   29a44:	tbnz	w0, #0, 29ad8 <acc_delete_finalize_async@@OACC_2.5+0xc0>
   29a48:	mov	x20, x1
   29a4c:	add	x22, x21, #0xa8
   29a50:	mov	w0, #0x1                   	// #1
   29a54:	ldaxr	w1, [x22]
   29a58:	cbnz	w1, 29a64 <acc_delete_finalize_async@@OACC_2.5+0x4c>
   29a5c:	stxr	w2, w0, [x22]
   29a60:	cbnz	w2, 29a54 <acc_delete_finalize_async@@OACC_2.5+0x3c>
   29a64:	cmp	w1, #0x0
   29a68:	b.ne	29b98 <acc_delete_finalize_async@@OACC_2.5+0x180>  // b.any
   29a6c:	add	x2, x20, x19
   29a70:	add	x1, sp, #0x48
   29a74:	add	x0, x21, #0xa0
   29a78:	stp	x19, x2, [sp, #72]
   29a7c:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   29a80:	str	x0, [sp, #48]
   29a84:	mov	x1, x0
   29a88:	cbz	x0, 29b7c <acc_delete_finalize_async@@OACC_2.5+0x164>
   29a8c:	ldp	x0, x2, [x0]
   29a90:	ldr	x3, [x1, #16]
   29a94:	cmp	x19, x0
   29a98:	sub	x2, x2, x0
   29a9c:	ccmp	x20, x2, #0x0, eq  // eq = none
   29aa0:	b.ne	29b54 <acc_delete_finalize_async@@OACC_2.5+0x13c>  // b.any
   29aa4:	ldr	x0, [x1, #32]
   29aa8:	cmn	x0, #0x1
   29aac:	b.eq	29ae8 <acc_delete_finalize_async@@OACC_2.5+0xd0>  // b.none
   29ab0:	ldr	x2, [x1, #40]
   29ab4:	cmp	x0, x2
   29ab8:	b.cc	29ba4 <acc_delete_finalize_async@@OACC_2.5+0x18c>  // b.lo, b.ul, b.last
   29abc:	sub	x0, x0, x2
   29ac0:	stp	x0, xzr, [x1, #32]
   29ac4:	cbz	x0, 29aec <acc_delete_finalize_async@@OACC_2.5+0xd4>
   29ac8:	ldxr	w0, [x22]
   29acc:	stlxr	w1, wzr, [x22]
   29ad0:	cbnz	w1, 29ac8 <acc_delete_finalize_async@@OACC_2.5+0xb0>
   29ad4:	tbnz	w0, #31, 29b04 <acc_delete_finalize_async@@OACC_2.5+0xec>
   29ad8:	ldp	x19, x20, [sp, #16]
   29adc:	ldp	x21, x22, [sp, #32]
   29ae0:	ldp	x29, x30, [sp], #128
   29ae4:	ret
   29ae8:	stp	xzr, xzr, [x1, #32]
   29aec:	ldr	x0, [x3]
   29af0:	cmp	x0, #0x2
   29af4:	b.eq	29b10 <acc_delete_finalize_async@@OACC_2.5+0xf8>  // b.none
   29af8:	mov	x0, x21
   29afc:	bl	22598 <omp_get_place_proc_ids@@OMP_4.5+0x33d8>
   29b00:	b	29ac8 <acc_delete_finalize_async@@OACC_2.5+0xb0>
   29b04:	mov	x0, x22
   29b08:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   29b0c:	b	29ad8 <acc_delete_finalize_async@@OACC_2.5+0xc0>
   29b10:	ldr	x4, [x21, #176]
   29b14:	cbz	x4, 29af8 <acc_delete_finalize_async@@OACC_2.5+0xe0>
   29b18:	cmp	x3, x4
   29b1c:	ldr	x0, [x4, #40]
   29b20:	b.eq	29b44 <acc_delete_finalize_async@@OACC_2.5+0x12c>  // b.none
   29b24:	nop
   29b28:	cbz	x0, 29af8 <acc_delete_finalize_async@@OACC_2.5+0xe0>
   29b2c:	cmp	x3, x0
   29b30:	ldr	x2, [x0, #40]
   29b34:	b.eq	29b4c <acc_delete_finalize_async@@OACC_2.5+0x134>  // b.none
   29b38:	mov	x4, x0
   29b3c:	mov	x0, x2
   29b40:	b	29b28 <acc_delete_finalize_async@@OACC_2.5+0x110>
   29b44:	str	x0, [x21, #176]
   29b48:	b	29af8 <acc_delete_finalize_async@@OACC_2.5+0xe0>
   29b4c:	str	x2, [x4, #40]
   29b50:	b	29af8 <acc_delete_finalize_async@@OACC_2.5+0xe0>
   29b54:	mov	x0, x22
   29b58:	stp	x1, x2, [sp, #48]
   29b5c:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   29b60:	ldp	x1, x2, [sp, #48]
   29b64:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   29b68:	mov	w4, w20
   29b6c:	mov	x3, x19
   29b70:	add	x0, x0, #0x640
   29b74:	ldr	x1, [x1]
   29b78:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   29b7c:	mov	x0, x22
   29b80:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   29b84:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   29b88:	mov	w2, w20
   29b8c:	mov	x1, x19
   29b90:	add	x0, x0, #0x628
   29b94:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   29b98:	mov	x0, x22
   29b9c:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   29ba0:	b	29a6c <acc_delete_finalize_async@@OACC_2.5+0x54>
   29ba4:	mov	x0, x22
   29ba8:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   29bac:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   29bb0:	add	x0, x0, #0x660
   29bb4:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>

0000000000029bb8 <acc_copyout@@OACC_2.0>:
   29bb8:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   29bbc:	ldr	x2, [x2, #4048]
   29bc0:	mrs	x5, tpidr_el0
   29bc4:	stp	x29, x30, [sp, #-128]!
   29bc8:	mov	x29, sp
   29bcc:	stp	x19, x20, [sp, #16]
   29bd0:	mov	x20, x0
   29bd4:	ldr	x0, [x5, x2]
   29bd8:	stp	x21, x22, [sp, #32]
   29bdc:	ldr	x22, [x0, #8]
   29be0:	ldr	w0, [x22, #8]
   29be4:	tbnz	w0, #0, 29cc8 <acc_copyout@@OACC_2.0+0x110>
   29be8:	mov	x21, x1
   29bec:	stp	x23, x24, [sp, #48]
   29bf0:	add	x23, x22, #0xa8
   29bf4:	mov	w0, #0x1                   	// #1
   29bf8:	ldaxr	w1, [x23]
   29bfc:	cbnz	w1, 29c08 <acc_copyout@@OACC_2.0+0x50>
   29c00:	stxr	w2, w0, [x23]
   29c04:	cbnz	w2, 29bf8 <acc_copyout@@OACC_2.0+0x40>
   29c08:	cmp	w1, #0x0
   29c0c:	b.ne	29d50 <acc_copyout@@OACC_2.0+0x198>  // b.any
   29c10:	add	x2, x21, x20
   29c14:	add	x1, sp, #0x48
   29c18:	add	x0, x22, #0xa0
   29c1c:	stp	x20, x2, [sp, #72]
   29c20:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   29c24:	mov	x19, x0
   29c28:	cbz	x0, 29d70 <acc_copyout@@OACC_2.0+0x1b8>
   29c2c:	ldp	x3, x24, [x0]
   29c30:	ldp	x1, x2, [x0, #16]
   29c34:	cmp	x20, x3
   29c38:	sub	x24, x24, x3
   29c3c:	ccmp	x21, x24, #0x0, eq  // eq = none
   29c40:	add	x2, x20, x2
   29c44:	ldr	x5, [x1, #16]
   29c48:	b.ne	29d2c <acc_copyout@@OACC_2.0+0x174>  // b.any
   29c4c:	ldr	x0, [x0, #32]
   29c50:	cmn	x0, #0x1
   29c54:	b.eq	29c7c <acc_copyout@@OACC_2.0+0xc4>  // b.none
   29c58:	ldr	x4, [x19, #40]
   29c5c:	cmp	x0, x4
   29c60:	b.cc	29d5c <acc_copyout@@OACC_2.0+0x1a4>  // b.lo, b.ul, b.last
   29c64:	cbz	x4, 29c74 <acc_copyout@@OACC_2.0+0xbc>
   29c68:	sub	x4, x4, #0x1
   29c6c:	sub	x0, x0, #0x1
   29c70:	stp	x0, x4, [x19, #32]
   29c74:	cbnz	x0, 29cb4 <acc_copyout@@OACC_2.0+0xfc>
   29c78:	b	29c80 <acc_copyout@@OACC_2.0+0xc8>
   29c7c:	stp	xzr, xzr, [x19, #32]
   29c80:	ldr	x0, [x1]
   29c84:	cmp	x0, #0x2
   29c88:	b.eq	29cd8 <acc_copyout@@OACC_2.0+0x120>  // b.none
   29c8c:	ldr	w0, [x22, #12]
   29c90:	sub	x3, x5, x3
   29c94:	ldr	x4, [x22, #112]
   29c98:	add	x2, x3, x2
   29c9c:	mov	x3, x21
   29ca0:	mov	x1, x20
   29ca4:	blr	x4
   29ca8:	mov	x1, x19
   29cac:	mov	x0, x22
   29cb0:	bl	22598 <omp_get_place_proc_ids@@OMP_4.5+0x33d8>
   29cb4:	ldxr	w0, [x23]
   29cb8:	stlxr	w1, wzr, [x23]
   29cbc:	cbnz	w1, 29cb4 <acc_copyout@@OACC_2.0+0xfc>
   29cc0:	tbnz	w0, #31, 29d0c <acc_copyout@@OACC_2.0+0x154>
   29cc4:	ldp	x23, x24, [sp, #48]
   29cc8:	ldp	x19, x20, [sp, #16]
   29ccc:	ldp	x21, x22, [sp, #32]
   29cd0:	ldp	x29, x30, [sp], #128
   29cd4:	ret
   29cd8:	ldr	x6, [x22, #176]
   29cdc:	cbz	x6, 29c8c <acc_copyout@@OACC_2.0+0xd4>
   29ce0:	cmp	x1, x6
   29ce4:	ldr	x0, [x6, #40]
   29ce8:	b.eq	29d1c <acc_copyout@@OACC_2.0+0x164>  // b.none
   29cec:	nop
   29cf0:	cbz	x0, 29c8c <acc_copyout@@OACC_2.0+0xd4>
   29cf4:	cmp	x1, x0
   29cf8:	ldr	x4, [x0, #40]
   29cfc:	b.eq	29d24 <acc_copyout@@OACC_2.0+0x16c>  // b.none
   29d00:	mov	x6, x0
   29d04:	mov	x0, x4
   29d08:	b	29cf0 <acc_copyout@@OACC_2.0+0x138>
   29d0c:	mov	x0, x23
   29d10:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   29d14:	ldp	x23, x24, [sp, #48]
   29d18:	b	29cc8 <acc_copyout@@OACC_2.0+0x110>
   29d1c:	str	x0, [x22, #176]
   29d20:	b	29c8c <acc_copyout@@OACC_2.0+0xd4>
   29d24:	str	x4, [x6, #40]
   29d28:	b	29c8c <acc_copyout@@OACC_2.0+0xd4>
   29d2c:	mov	x0, x23
   29d30:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   29d34:	ldr	x1, [x19]
   29d38:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   29d3c:	mov	w4, w21
   29d40:	mov	x3, x20
   29d44:	mov	w2, w24
   29d48:	add	x0, x0, #0x640
   29d4c:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   29d50:	mov	x0, x23
   29d54:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   29d58:	b	29c10 <acc_copyout@@OACC_2.0+0x58>
   29d5c:	mov	x0, x23
   29d60:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   29d64:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   29d68:	add	x0, x0, #0x660
   29d6c:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   29d70:	mov	x0, x23
   29d74:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   29d78:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   29d7c:	mov	w2, w21
   29d80:	mov	x1, x20
   29d84:	add	x0, x0, #0x628
   29d88:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   29d8c:	nop

0000000000029d90 <acc_copyout_async@@OACC_2.5>:
   29d90:	adrp	x5, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   29d94:	ldr	x5, [x5, #4048]
   29d98:	mrs	x6, tpidr_el0
   29d9c:	stp	x29, x30, [sp, #-144]!
   29da0:	mov	x29, sp
   29da4:	stp	x19, x20, [sp, #16]
   29da8:	mov	x20, x0
   29dac:	ldr	x0, [x6, x5]
   29db0:	str	x25, [sp, #64]
   29db4:	ldr	x25, [x0, #8]
   29db8:	ldr	w0, [x25, #8]
   29dbc:	tbnz	w0, #0, 29e70 <acc_copyout_async@@OACC_2.5+0xe0>
   29dc0:	stp	x21, x22, [sp, #32]
   29dc4:	mov	x21, x1
   29dc8:	add	x22, x25, #0xa8
   29dcc:	stp	x23, x24, [sp, #48]
   29dd0:	mov	w24, w2
   29dd4:	mov	w0, #0x1                   	// #1
   29dd8:	ldaxr	w1, [x22]
   29ddc:	cbnz	w1, 29de8 <acc_copyout_async@@OACC_2.5+0x58>
   29de0:	stxr	w2, w0, [x22]
   29de4:	cbnz	w2, 29dd8 <acc_copyout_async@@OACC_2.5+0x48>
   29de8:	cmp	w1, #0x0
   29dec:	b.ne	29f74 <acc_copyout_async@@OACC_2.5+0x1e4>  // b.any
   29df0:	add	x2, x21, x20
   29df4:	add	x1, sp, #0x58
   29df8:	add	x0, x25, #0xa0
   29dfc:	stp	x20, x2, [sp, #88]
   29e00:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   29e04:	mov	x19, x0
   29e08:	cbz	x0, 29f94 <acc_copyout_async@@OACC_2.5+0x204>
   29e0c:	ldp	x4, x23, [x0]
   29e10:	ldp	x1, x0, [x0, #16]
   29e14:	cmp	x20, x4
   29e18:	sub	x23, x23, x4
   29e1c:	ccmp	x21, x23, #0x0, eq  // eq = none
   29e20:	add	x3, x20, x0
   29e24:	ldr	x5, [x1, #16]
   29e28:	b.ne	29f50 <acc_copyout_async@@OACC_2.5+0x1c0>  // b.any
   29e2c:	ldr	x0, [x19, #32]
   29e30:	cmn	x0, #0x1
   29e34:	b.eq	29e80 <acc_copyout_async@@OACC_2.5+0xf0>  // b.none
   29e38:	ldr	x2, [x19, #40]
   29e3c:	cmp	x0, x2
   29e40:	b.cc	29f80 <acc_copyout_async@@OACC_2.5+0x1f0>  // b.lo, b.ul, b.last
   29e44:	cbz	x2, 29e54 <acc_copyout_async@@OACC_2.5+0xc4>
   29e48:	sub	x2, x2, #0x1
   29e4c:	sub	x0, x0, #0x1
   29e50:	stp	x0, x2, [x19, #32]
   29e54:	cbz	x0, 29e84 <acc_copyout_async@@OACC_2.5+0xf4>
   29e58:	ldxr	w0, [x22]
   29e5c:	stlxr	w1, wzr, [x22]
   29e60:	cbnz	w1, 29e58 <acc_copyout_async@@OACC_2.5+0xc8>
   29e64:	tbnz	w0, #31, 29f2c <acc_copyout_async@@OACC_2.5+0x19c>
   29e68:	ldp	x21, x22, [sp, #32]
   29e6c:	ldp	x23, x24, [sp, #48]
   29e70:	ldp	x19, x20, [sp, #16]
   29e74:	ldr	x25, [sp, #64]
   29e78:	ldp	x29, x30, [sp], #144
   29e7c:	ret
   29e80:	stp	xzr, xzr, [x19, #32]
   29e84:	ldr	x0, [x1]
   29e88:	cmp	x0, #0x2
   29e8c:	b.eq	29efc <acc_copyout_async@@OACC_2.5+0x16c>  // b.none
   29e90:	sub	x4, x5, x4
   29e94:	cmn	w24, #0x1
   29e98:	add	x23, x4, x3
   29e9c:	b.lt	29ee0 <acc_copyout_async@@OACC_2.5+0x150>  // b.tstop
   29ea0:	ldr	x1, [x25, #248]
   29ea4:	mov	w0, w24
   29ea8:	blr	x1
   29eac:	ldr	w0, [x25, #12]
   29eb0:	mov	x1, x20
   29eb4:	ldr	x4, [x25, #112]
   29eb8:	mov	x3, x21
   29ebc:	mov	x2, x23
   29ec0:	blr	x4
   29ec4:	ldr	x1, [x25, #248]
   29ec8:	mov	w0, #0xfffffffe            	// #-2
   29ecc:	blr	x1
   29ed0:	mov	x1, x19
   29ed4:	mov	x0, x25
   29ed8:	bl	22598 <omp_get_place_proc_ids@@OMP_4.5+0x33d8>
   29edc:	b	29e58 <acc_copyout_async@@OACC_2.5+0xc8>
   29ee0:	ldr	w0, [x25, #12]
   29ee4:	mov	x3, x21
   29ee8:	ldr	x4, [x25, #112]
   29eec:	mov	x2, x23
   29ef0:	mov	x1, x20
   29ef4:	blr	x4
   29ef8:	b	29ed0 <acc_copyout_async@@OACC_2.5+0x140>
   29efc:	ldr	x6, [x25, #176]
   29f00:	cbz	x6, 29e90 <acc_copyout_async@@OACC_2.5+0x100>
   29f04:	cmp	x1, x6
   29f08:	ldr	x0, [x6, #40]
   29f0c:	b.eq	29f40 <acc_copyout_async@@OACC_2.5+0x1b0>  // b.none
   29f10:	cbz	x0, 29e90 <acc_copyout_async@@OACC_2.5+0x100>
   29f14:	cmp	x1, x0
   29f18:	ldr	x2, [x0, #40]
   29f1c:	b.eq	29f48 <acc_copyout_async@@OACC_2.5+0x1b8>  // b.none
   29f20:	mov	x6, x0
   29f24:	mov	x0, x2
   29f28:	b	29f10 <acc_copyout_async@@OACC_2.5+0x180>
   29f2c:	mov	x0, x22
   29f30:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   29f34:	ldp	x21, x22, [sp, #32]
   29f38:	ldp	x23, x24, [sp, #48]
   29f3c:	b	29e70 <acc_copyout_async@@OACC_2.5+0xe0>
   29f40:	str	x0, [x25, #176]
   29f44:	b	29e90 <acc_copyout_async@@OACC_2.5+0x100>
   29f48:	str	x2, [x6, #40]
   29f4c:	b	29e90 <acc_copyout_async@@OACC_2.5+0x100>
   29f50:	mov	x0, x22
   29f54:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   29f58:	ldr	x1, [x19]
   29f5c:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   29f60:	mov	w4, w21
   29f64:	mov	x3, x20
   29f68:	mov	w2, w23
   29f6c:	add	x0, x0, #0x640
   29f70:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   29f74:	mov	x0, x22
   29f78:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   29f7c:	b	29df0 <acc_copyout_async@@OACC_2.5+0x60>
   29f80:	mov	x0, x22
   29f84:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   29f88:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   29f8c:	add	x0, x0, #0x660
   29f90:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   29f94:	mov	x0, x22
   29f98:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   29f9c:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   29fa0:	mov	w2, w21
   29fa4:	mov	x1, x20
   29fa8:	add	x0, x0, #0x628
   29fac:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>

0000000000029fb0 <acc_copyout_finalize@@OACC_2.5>:
   29fb0:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   29fb4:	ldr	x2, [x2, #4048]
   29fb8:	mrs	x5, tpidr_el0
   29fbc:	stp	x29, x30, [sp, #-128]!
   29fc0:	mov	x29, sp
   29fc4:	stp	x19, x20, [sp, #16]
   29fc8:	mov	x20, x0
   29fcc:	ldr	x0, [x5, x2]
   29fd0:	stp	x21, x22, [sp, #32]
   29fd4:	ldr	x22, [x0, #8]
   29fd8:	ldr	w0, [x22, #8]
   29fdc:	tbnz	w0, #0, 2a07c <acc_copyout_finalize@@OACC_2.5+0xcc>
   29fe0:	mov	x21, x1
   29fe4:	stp	x23, x24, [sp, #48]
   29fe8:	add	x23, x22, #0xa8
   29fec:	mov	w0, #0x1                   	// #1
   29ff0:	ldaxr	w1, [x23]
   29ff4:	cbnz	w1, 2a000 <acc_copyout_finalize@@OACC_2.5+0x50>
   29ff8:	stxr	w2, w0, [x23]
   29ffc:	cbnz	w2, 29ff0 <acc_copyout_finalize@@OACC_2.5+0x40>
   2a000:	cmp	w1, #0x0
   2a004:	b.ne	2a140 <acc_copyout_finalize@@OACC_2.5+0x190>  // b.any
   2a008:	add	x2, x21, x20
   2a00c:	add	x1, sp, #0x48
   2a010:	add	x0, x22, #0xa0
   2a014:	stp	x20, x2, [sp, #72]
   2a018:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   2a01c:	mov	x19, x0
   2a020:	cbz	x0, 2a160 <acc_copyout_finalize@@OACC_2.5+0x1b0>
   2a024:	ldp	x3, x24, [x0]
   2a028:	ldp	x1, x2, [x0, #16]
   2a02c:	cmp	x20, x3
   2a030:	sub	x24, x24, x3
   2a034:	ccmp	x21, x24, #0x0, eq  // eq = none
   2a038:	add	x2, x20, x2
   2a03c:	ldr	x5, [x1, #16]
   2a040:	b.ne	2a11c <acc_copyout_finalize@@OACC_2.5+0x16c>  // b.any
   2a044:	ldr	x0, [x0, #32]
   2a048:	cmn	x0, #0x1
   2a04c:	b.eq	2a08c <acc_copyout_finalize@@OACC_2.5+0xdc>  // b.none
   2a050:	ldr	x4, [x19, #40]
   2a054:	cmp	x0, x4
   2a058:	b.cc	2a14c <acc_copyout_finalize@@OACC_2.5+0x19c>  // b.lo, b.ul, b.last
   2a05c:	sub	x0, x0, x4
   2a060:	stp	x0, xzr, [x19, #32]
   2a064:	cbz	x0, 2a090 <acc_copyout_finalize@@OACC_2.5+0xe0>
   2a068:	ldxr	w0, [x23]
   2a06c:	stlxr	w1, wzr, [x23]
   2a070:	cbnz	w1, 2a068 <acc_copyout_finalize@@OACC_2.5+0xb8>
   2a074:	tbnz	w0, #31, 2a0fc <acc_copyout_finalize@@OACC_2.5+0x14c>
   2a078:	ldp	x23, x24, [sp, #48]
   2a07c:	ldp	x19, x20, [sp, #16]
   2a080:	ldp	x21, x22, [sp, #32]
   2a084:	ldp	x29, x30, [sp], #128
   2a088:	ret
   2a08c:	stp	xzr, xzr, [x19, #32]
   2a090:	ldr	x0, [x1]
   2a094:	cmp	x0, #0x2
   2a098:	b.eq	2a0c8 <acc_copyout_finalize@@OACC_2.5+0x118>  // b.none
   2a09c:	ldr	w0, [x22, #12]
   2a0a0:	sub	x3, x5, x3
   2a0a4:	ldr	x4, [x22, #112]
   2a0a8:	add	x2, x3, x2
   2a0ac:	mov	x3, x21
   2a0b0:	mov	x1, x20
   2a0b4:	blr	x4
   2a0b8:	mov	x1, x19
   2a0bc:	mov	x0, x22
   2a0c0:	bl	22598 <omp_get_place_proc_ids@@OMP_4.5+0x33d8>
   2a0c4:	b	2a068 <acc_copyout_finalize@@OACC_2.5+0xb8>
   2a0c8:	ldr	x6, [x22, #176]
   2a0cc:	cbz	x6, 2a09c <acc_copyout_finalize@@OACC_2.5+0xec>
   2a0d0:	cmp	x1, x6
   2a0d4:	ldr	x0, [x6, #40]
   2a0d8:	b.eq	2a10c <acc_copyout_finalize@@OACC_2.5+0x15c>  // b.none
   2a0dc:	nop
   2a0e0:	cbz	x0, 2a09c <acc_copyout_finalize@@OACC_2.5+0xec>
   2a0e4:	cmp	x1, x0
   2a0e8:	ldr	x4, [x0, #40]
   2a0ec:	b.eq	2a114 <acc_copyout_finalize@@OACC_2.5+0x164>  // b.none
   2a0f0:	mov	x6, x0
   2a0f4:	mov	x0, x4
   2a0f8:	b	2a0e0 <acc_copyout_finalize@@OACC_2.5+0x130>
   2a0fc:	mov	x0, x23
   2a100:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   2a104:	ldp	x23, x24, [sp, #48]
   2a108:	b	2a07c <acc_copyout_finalize@@OACC_2.5+0xcc>
   2a10c:	str	x0, [x22, #176]
   2a110:	b	2a09c <acc_copyout_finalize@@OACC_2.5+0xec>
   2a114:	str	x4, [x6, #40]
   2a118:	b	2a09c <acc_copyout_finalize@@OACC_2.5+0xec>
   2a11c:	mov	x0, x23
   2a120:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   2a124:	ldr	x1, [x19]
   2a128:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2a12c:	mov	w4, w21
   2a130:	mov	x3, x20
   2a134:	mov	w2, w24
   2a138:	add	x0, x0, #0x640
   2a13c:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2a140:	mov	x0, x23
   2a144:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   2a148:	b	2a008 <acc_copyout_finalize@@OACC_2.5+0x58>
   2a14c:	mov	x0, x23
   2a150:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   2a154:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2a158:	add	x0, x0, #0x660
   2a15c:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2a160:	mov	x0, x23
   2a164:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   2a168:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2a16c:	mov	w2, w21
   2a170:	mov	x1, x20
   2a174:	add	x0, x0, #0x628
   2a178:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2a17c:	nop

000000000002a180 <acc_copyout_finalize_async@@OACC_2.5>:
   2a180:	adrp	x5, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   2a184:	ldr	x5, [x5, #4048]
   2a188:	mrs	x6, tpidr_el0
   2a18c:	stp	x29, x30, [sp, #-144]!
   2a190:	mov	x29, sp
   2a194:	stp	x19, x20, [sp, #16]
   2a198:	mov	x20, x0
   2a19c:	ldr	x0, [x6, x5]
   2a1a0:	str	x25, [sp, #64]
   2a1a4:	ldr	x25, [x0, #8]
   2a1a8:	ldr	w0, [x25, #8]
   2a1ac:	tbnz	w0, #0, 2a258 <acc_copyout_finalize_async@@OACC_2.5+0xd8>
   2a1b0:	stp	x21, x22, [sp, #32]
   2a1b4:	add	x21, x25, #0xa8
   2a1b8:	mov	w0, #0x1                   	// #1
   2a1bc:	stp	x23, x24, [sp, #48]
   2a1c0:	mov	x23, x1
   2a1c4:	mov	w24, w2
   2a1c8:	ldaxr	w1, [x21]
   2a1cc:	cbnz	w1, 2a1d8 <acc_copyout_finalize_async@@OACC_2.5+0x58>
   2a1d0:	stxr	w2, w0, [x21]
   2a1d4:	cbnz	w2, 2a1c8 <acc_copyout_finalize_async@@OACC_2.5+0x48>
   2a1d8:	cmp	w1, #0x0
   2a1dc:	b.ne	2a378 <acc_copyout_finalize_async@@OACC_2.5+0x1f8>  // b.any
   2a1e0:	add	x2, x23, x20
   2a1e4:	add	x1, sp, #0x58
   2a1e8:	add	x0, x25, #0xa0
   2a1ec:	stp	x20, x2, [sp, #88]
   2a1f0:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   2a1f4:	mov	x19, x0
   2a1f8:	cbz	x0, 2a35c <acc_copyout_finalize_async@@OACC_2.5+0x1dc>
   2a1fc:	ldp	x7, x22, [x0]
   2a200:	ldp	x5, x0, [x0, #16]
   2a204:	cmp	x20, x7
   2a208:	sub	x22, x22, x7
   2a20c:	ccmp	x23, x22, #0x0, eq  // eq = none
   2a210:	add	x6, x20, x0
   2a214:	ldr	x8, [x5, #16]
   2a218:	b.ne	2a338 <acc_copyout_finalize_async@@OACC_2.5+0x1b8>  // b.any
   2a21c:	ldr	x0, [x19, #32]
   2a220:	cmn	x0, #0x1
   2a224:	b.eq	2a268 <acc_copyout_finalize_async@@OACC_2.5+0xe8>  // b.none
   2a228:	ldr	x1, [x19, #40]
   2a22c:	cmp	x0, x1
   2a230:	b.cc	2a384 <acc_copyout_finalize_async@@OACC_2.5+0x204>  // b.lo, b.ul, b.last
   2a234:	sub	x0, x0, x1
   2a238:	stp	x0, xzr, [x19, #32]
   2a23c:	cbz	x0, 2a26c <acc_copyout_finalize_async@@OACC_2.5+0xec>
   2a240:	ldxr	w0, [x21]
   2a244:	stlxr	w1, wzr, [x21]
   2a248:	cbnz	w1, 2a240 <acc_copyout_finalize_async@@OACC_2.5+0xc0>
   2a24c:	tbnz	w0, #31, 2a314 <acc_copyout_finalize_async@@OACC_2.5+0x194>
   2a250:	ldp	x21, x22, [sp, #32]
   2a254:	ldp	x23, x24, [sp, #48]
   2a258:	ldp	x19, x20, [sp, #16]
   2a25c:	ldr	x25, [sp, #64]
   2a260:	ldp	x29, x30, [sp], #144
   2a264:	ret
   2a268:	stp	xzr, xzr, [x19, #32]
   2a26c:	ldr	x0, [x5]
   2a270:	cmp	x0, #0x2
   2a274:	b.eq	2a2e4 <acc_copyout_finalize_async@@OACC_2.5+0x164>  // b.none
   2a278:	sub	x7, x8, x7
   2a27c:	cmn	w24, #0x1
   2a280:	add	x22, x7, x6
   2a284:	b.lt	2a2c8 <acc_copyout_finalize_async@@OACC_2.5+0x148>  // b.tstop
   2a288:	ldr	x1, [x25, #248]
   2a28c:	mov	w0, w24
   2a290:	blr	x1
   2a294:	ldr	w0, [x25, #12]
   2a298:	mov	x1, x20
   2a29c:	ldr	x4, [x25, #112]
   2a2a0:	mov	x3, x23
   2a2a4:	mov	x2, x22
   2a2a8:	blr	x4
   2a2ac:	ldr	x1, [x25, #248]
   2a2b0:	mov	w0, #0xfffffffe            	// #-2
   2a2b4:	blr	x1
   2a2b8:	mov	x1, x19
   2a2bc:	mov	x0, x25
   2a2c0:	bl	22598 <omp_get_place_proc_ids@@OMP_4.5+0x33d8>
   2a2c4:	b	2a240 <acc_copyout_finalize_async@@OACC_2.5+0xc0>
   2a2c8:	ldr	w0, [x25, #12]
   2a2cc:	mov	x3, x23
   2a2d0:	ldr	x4, [x25, #112]
   2a2d4:	mov	x2, x22
   2a2d8:	mov	x1, x20
   2a2dc:	blr	x4
   2a2e0:	b	2a2b8 <acc_copyout_finalize_async@@OACC_2.5+0x138>
   2a2e4:	ldr	x2, [x25, #176]
   2a2e8:	cbz	x2, 2a278 <acc_copyout_finalize_async@@OACC_2.5+0xf8>
   2a2ec:	cmp	x5, x2
   2a2f0:	ldr	x0, [x2, #40]
   2a2f4:	b.eq	2a328 <acc_copyout_finalize_async@@OACC_2.5+0x1a8>  // b.none
   2a2f8:	cbz	x0, 2a278 <acc_copyout_finalize_async@@OACC_2.5+0xf8>
   2a2fc:	cmp	x5, x0
   2a300:	ldr	x1, [x0, #40]
   2a304:	b.eq	2a330 <acc_copyout_finalize_async@@OACC_2.5+0x1b0>  // b.none
   2a308:	mov	x2, x0
   2a30c:	mov	x0, x1
   2a310:	b	2a2f8 <acc_copyout_finalize_async@@OACC_2.5+0x178>
   2a314:	mov	x0, x21
   2a318:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   2a31c:	ldp	x21, x22, [sp, #32]
   2a320:	ldp	x23, x24, [sp, #48]
   2a324:	b	2a258 <acc_copyout_finalize_async@@OACC_2.5+0xd8>
   2a328:	str	x0, [x25, #176]
   2a32c:	b	2a278 <acc_copyout_finalize_async@@OACC_2.5+0xf8>
   2a330:	str	x1, [x2, #40]
   2a334:	b	2a278 <acc_copyout_finalize_async@@OACC_2.5+0xf8>
   2a338:	mov	x0, x21
   2a33c:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   2a340:	ldr	x1, [x19]
   2a344:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2a348:	mov	w4, w23
   2a34c:	mov	x3, x20
   2a350:	mov	w2, w22
   2a354:	add	x0, x0, #0x640
   2a358:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2a35c:	mov	x0, x21
   2a360:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   2a364:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2a368:	mov	w2, w23
   2a36c:	mov	x1, x20
   2a370:	add	x0, x0, #0x628
   2a374:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2a378:	mov	x0, x21
   2a37c:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   2a380:	b	2a1e0 <acc_copyout_finalize_async@@OACC_2.5+0x60>
   2a384:	mov	x0, x21
   2a388:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   2a38c:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2a390:	add	x0, x0, #0x660
   2a394:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>

000000000002a398 <acc_update_device@@OACC_2.0>:
   2a398:	stp	x29, x30, [sp, #-112]!
   2a39c:	mov	x29, sp
   2a3a0:	stp	x19, x20, [sp, #16]
   2a3a4:	mov	x19, x0
   2a3a8:	stp	x21, x22, [sp, #32]
   2a3ac:	mov	x21, x1
   2a3b0:	bl	28018 <acc_on_device@@OACC_2.0+0xd8>
   2a3b4:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   2a3b8:	ldr	x0, [x0, #4048]
   2a3bc:	mrs	x1, tpidr_el0
   2a3c0:	ldr	x0, [x1, x0]
   2a3c4:	ldr	x20, [x0, #8]
   2a3c8:	ldr	w0, [x20, #8]
   2a3cc:	tbnz	w0, #0, 2a448 <acc_update_device@@OACC_2.0+0xb0>
   2a3d0:	add	x22, x20, #0xa8
   2a3d4:	mov	w0, #0x1                   	// #1
   2a3d8:	ldaxr	w1, [x22]
   2a3dc:	cbnz	w1, 2a3e8 <acc_update_device@@OACC_2.0+0x50>
   2a3e0:	stxr	w2, w0, [x22]
   2a3e4:	cbnz	w2, 2a3d8 <acc_update_device@@OACC_2.0+0x40>
   2a3e8:	cmp	w1, #0x0
   2a3ec:	b.ne	2a464 <acc_update_device@@OACC_2.0+0xcc>  // b.any
   2a3f0:	add	x2, x21, x19
   2a3f4:	add	x1, sp, #0x38
   2a3f8:	add	x0, x20, #0xa0
   2a3fc:	stp	x19, x2, [sp, #56]
   2a400:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   2a404:	mov	x4, x0
   2a408:	cbz	x0, 2a470 <acc_update_device@@OACC_2.0+0xd8>
   2a40c:	ldp	x1, x5, [x4, #16]
   2a410:	mov	x2, x19
   2a414:	ldr	w0, [x20, #12]
   2a418:	mov	x3, x21
   2a41c:	ldr	x6, [x4]
   2a420:	ldr	x4, [x20, #120]
   2a424:	add	x19, x19, x5
   2a428:	ldr	x1, [x1, #16]
   2a42c:	sub	x1, x1, x6
   2a430:	add	x1, x1, x19
   2a434:	blr	x4
   2a438:	ldxr	w0, [x22]
   2a43c:	stlxr	w1, wzr, [x22]
   2a440:	cbnz	w1, 2a438 <acc_update_device@@OACC_2.0+0xa0>
   2a444:	tbnz	w0, #31, 2a458 <acc_update_device@@OACC_2.0+0xc0>
   2a448:	ldp	x19, x20, [sp, #16]
   2a44c:	ldp	x21, x22, [sp, #32]
   2a450:	ldp	x29, x30, [sp], #112
   2a454:	ret
   2a458:	mov	x0, x22
   2a45c:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   2a460:	b	2a448 <acc_update_device@@OACC_2.0+0xb0>
   2a464:	mov	x0, x22
   2a468:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   2a46c:	b	2a3f0 <acc_update_device@@OACC_2.0+0x58>
   2a470:	mov	x0, x22
   2a474:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   2a478:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2a47c:	mov	w2, w21
   2a480:	mov	x1, x19
   2a484:	add	x0, x0, #0x628
   2a488:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2a48c:	nop

000000000002a490 <acc_update_device_async@@OACC_2.5>:
   2a490:	stp	x29, x30, [sp, #-128]!
   2a494:	mov	x29, sp
   2a498:	stp	x19, x20, [sp, #16]
   2a49c:	mov	x19, x0
   2a4a0:	stp	x21, x22, [sp, #32]
   2a4a4:	mov	x21, x1
   2a4a8:	mov	w22, w2
   2a4ac:	bl	28018 <acc_on_device@@OACC_2.0+0xd8>
   2a4b0:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   2a4b4:	ldr	x0, [x0, #4048]
   2a4b8:	mrs	x1, tpidr_el0
   2a4bc:	ldr	x0, [x1, x0]
   2a4c0:	ldr	x20, [x0, #8]
   2a4c4:	ldr	w0, [x20, #8]
   2a4c8:	tbnz	w0, #0, 2a570 <acc_update_device_async@@OACC_2.5+0xe0>
   2a4cc:	stp	x23, x24, [sp, #48]
   2a4d0:	add	x24, x20, #0xa8
   2a4d4:	mov	w0, #0x1                   	// #1
   2a4d8:	ldaxr	w1, [x24]
   2a4dc:	cbnz	w1, 2a4e8 <acc_update_device_async@@OACC_2.5+0x58>
   2a4e0:	stxr	w2, w0, [x24]
   2a4e4:	cbnz	w2, 2a4d8 <acc_update_device_async@@OACC_2.5+0x48>
   2a4e8:	cmp	w1, #0x0
   2a4ec:	b.ne	2a5ac <acc_update_device_async@@OACC_2.5+0x11c>  // b.any
   2a4f0:	add	x2, x21, x19
   2a4f4:	add	x1, sp, #0x48
   2a4f8:	add	x0, x20, #0xa0
   2a4fc:	stp	x19, x2, [sp, #72]
   2a500:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   2a504:	cbz	x0, 2a5b8 <acc_update_device_async@@OACC_2.5+0x128>
   2a508:	ldr	x1, [x0, #16]
   2a50c:	cmn	w22, #0x1
   2a510:	ldr	x2, [x0]
   2a514:	ldr	x23, [x1, #16]
   2a518:	ldr	x1, [x0, #24]
   2a51c:	sub	x23, x23, x2
   2a520:	add	x1, x19, x1
   2a524:	add	x23, x23, x1
   2a528:	b.lt	2a580 <acc_update_device_async@@OACC_2.5+0xf0>  // b.tstop
   2a52c:	ldr	x1, [x20, #248]
   2a530:	mov	w0, w22
   2a534:	blr	x1
   2a538:	ldr	w0, [x20, #12]
   2a53c:	mov	x1, x23
   2a540:	ldr	x4, [x20, #120]
   2a544:	mov	x3, x21
   2a548:	mov	x2, x19
   2a54c:	blr	x4
   2a550:	ldr	x1, [x20, #248]
   2a554:	mov	w0, #0xfffffffe            	// #-2
   2a558:	blr	x1
   2a55c:	ldxr	w0, [x24]
   2a560:	stlxr	w1, wzr, [x24]
   2a564:	cbnz	w1, 2a55c <acc_update_device_async@@OACC_2.5+0xcc>
   2a568:	tbnz	w0, #31, 2a59c <acc_update_device_async@@OACC_2.5+0x10c>
   2a56c:	ldp	x23, x24, [sp, #48]
   2a570:	ldp	x19, x20, [sp, #16]
   2a574:	ldp	x21, x22, [sp, #32]
   2a578:	ldp	x29, x30, [sp], #128
   2a57c:	ret
   2a580:	ldr	w0, [x20, #12]
   2a584:	mov	x3, x21
   2a588:	ldr	x4, [x20, #120]
   2a58c:	mov	x2, x19
   2a590:	mov	x1, x23
   2a594:	blr	x4
   2a598:	b	2a55c <acc_update_device_async@@OACC_2.5+0xcc>
   2a59c:	mov	x0, x24
   2a5a0:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   2a5a4:	ldp	x23, x24, [sp, #48]
   2a5a8:	b	2a570 <acc_update_device_async@@OACC_2.5+0xe0>
   2a5ac:	mov	x0, x24
   2a5b0:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   2a5b4:	b	2a4f0 <acc_update_device_async@@OACC_2.5+0x60>
   2a5b8:	mov	x0, x24
   2a5bc:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   2a5c0:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2a5c4:	mov	w2, w21
   2a5c8:	mov	x1, x19
   2a5cc:	add	x0, x0, #0x628
   2a5d0:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2a5d4:	nop

000000000002a5d8 <acc_update_self@@OACC_2.0>:
   2a5d8:	stp	x29, x30, [sp, #-112]!
   2a5dc:	mov	x29, sp
   2a5e0:	stp	x19, x20, [sp, #16]
   2a5e4:	mov	x19, x0
   2a5e8:	stp	x21, x22, [sp, #32]
   2a5ec:	mov	x21, x1
   2a5f0:	bl	28018 <acc_on_device@@OACC_2.0+0xd8>
   2a5f4:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   2a5f8:	ldr	x0, [x0, #4048]
   2a5fc:	mrs	x1, tpidr_el0
   2a600:	ldr	x0, [x1, x0]
   2a604:	ldr	x20, [x0, #8]
   2a608:	ldr	w0, [x20, #8]
   2a60c:	tbnz	w0, #0, 2a688 <acc_update_self@@OACC_2.0+0xb0>
   2a610:	add	x22, x20, #0xa8
   2a614:	mov	w0, #0x1                   	// #1
   2a618:	ldaxr	w1, [x22]
   2a61c:	cbnz	w1, 2a628 <acc_update_self@@OACC_2.0+0x50>
   2a620:	stxr	w2, w0, [x22]
   2a624:	cbnz	w2, 2a618 <acc_update_self@@OACC_2.0+0x40>
   2a628:	cmp	w1, #0x0
   2a62c:	b.ne	2a6a4 <acc_update_self@@OACC_2.0+0xcc>  // b.any
   2a630:	add	x2, x21, x19
   2a634:	add	x1, sp, #0x38
   2a638:	add	x0, x20, #0xa0
   2a63c:	stp	x19, x2, [sp, #56]
   2a640:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   2a644:	mov	x4, x0
   2a648:	cbz	x0, 2a6b0 <acc_update_self@@OACC_2.0+0xd8>
   2a64c:	ldp	x2, x5, [x4, #16]
   2a650:	mov	x1, x19
   2a654:	ldr	w0, [x20, #12]
   2a658:	mov	x3, x21
   2a65c:	ldr	x6, [x4]
   2a660:	ldr	x4, [x20, #112]
   2a664:	add	x19, x19, x5
   2a668:	ldr	x2, [x2, #16]
   2a66c:	sub	x2, x2, x6
   2a670:	add	x2, x2, x19
   2a674:	blr	x4
   2a678:	ldxr	w0, [x22]
   2a67c:	stlxr	w1, wzr, [x22]
   2a680:	cbnz	w1, 2a678 <acc_update_self@@OACC_2.0+0xa0>
   2a684:	tbnz	w0, #31, 2a698 <acc_update_self@@OACC_2.0+0xc0>
   2a688:	ldp	x19, x20, [sp, #16]
   2a68c:	ldp	x21, x22, [sp, #32]
   2a690:	ldp	x29, x30, [sp], #112
   2a694:	ret
   2a698:	mov	x0, x22
   2a69c:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   2a6a0:	b	2a688 <acc_update_self@@OACC_2.0+0xb0>
   2a6a4:	mov	x0, x22
   2a6a8:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   2a6ac:	b	2a630 <acc_update_self@@OACC_2.0+0x58>
   2a6b0:	mov	x0, x22
   2a6b4:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   2a6b8:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2a6bc:	mov	w2, w21
   2a6c0:	mov	x1, x19
   2a6c4:	add	x0, x0, #0x628
   2a6c8:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2a6cc:	nop

000000000002a6d0 <acc_update_self_async@@OACC_2.5>:
   2a6d0:	stp	x29, x30, [sp, #-128]!
   2a6d4:	mov	x29, sp
   2a6d8:	stp	x19, x20, [sp, #16]
   2a6dc:	mov	x19, x0
   2a6e0:	stp	x21, x22, [sp, #32]
   2a6e4:	mov	x21, x1
   2a6e8:	mov	w22, w2
   2a6ec:	bl	28018 <acc_on_device@@OACC_2.0+0xd8>
   2a6f0:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   2a6f4:	ldr	x0, [x0, #4048]
   2a6f8:	mrs	x1, tpidr_el0
   2a6fc:	ldr	x0, [x1, x0]
   2a700:	ldr	x20, [x0, #8]
   2a704:	ldr	w0, [x20, #8]
   2a708:	tbnz	w0, #0, 2a7b0 <acc_update_self_async@@OACC_2.5+0xe0>
   2a70c:	stp	x23, x24, [sp, #48]
   2a710:	add	x24, x20, #0xa8
   2a714:	mov	w0, #0x1                   	// #1
   2a718:	ldaxr	w1, [x24]
   2a71c:	cbnz	w1, 2a728 <acc_update_self_async@@OACC_2.5+0x58>
   2a720:	stxr	w2, w0, [x24]
   2a724:	cbnz	w2, 2a718 <acc_update_self_async@@OACC_2.5+0x48>
   2a728:	cmp	w1, #0x0
   2a72c:	b.ne	2a7ec <acc_update_self_async@@OACC_2.5+0x11c>  // b.any
   2a730:	add	x2, x21, x19
   2a734:	add	x1, sp, #0x48
   2a738:	add	x0, x20, #0xa0
   2a73c:	stp	x19, x2, [sp, #72]
   2a740:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   2a744:	cbz	x0, 2a7f8 <acc_update_self_async@@OACC_2.5+0x128>
   2a748:	ldr	x2, [x0, #16]
   2a74c:	cmn	w22, #0x1
   2a750:	ldr	x1, [x0]
   2a754:	ldr	x23, [x2, #16]
   2a758:	ldr	x2, [x0, #24]
   2a75c:	sub	x23, x23, x1
   2a760:	add	x2, x19, x2
   2a764:	add	x23, x23, x2
   2a768:	b.lt	2a7c0 <acc_update_self_async@@OACC_2.5+0xf0>  // b.tstop
   2a76c:	ldr	x1, [x20, #248]
   2a770:	mov	w0, w22
   2a774:	blr	x1
   2a778:	ldr	w0, [x20, #12]
   2a77c:	mov	x1, x19
   2a780:	ldr	x4, [x20, #112]
   2a784:	mov	x3, x21
   2a788:	mov	x2, x23
   2a78c:	blr	x4
   2a790:	ldr	x1, [x20, #248]
   2a794:	mov	w0, #0xfffffffe            	// #-2
   2a798:	blr	x1
   2a79c:	ldxr	w0, [x24]
   2a7a0:	stlxr	w1, wzr, [x24]
   2a7a4:	cbnz	w1, 2a79c <acc_update_self_async@@OACC_2.5+0xcc>
   2a7a8:	tbnz	w0, #31, 2a7dc <acc_update_self_async@@OACC_2.5+0x10c>
   2a7ac:	ldp	x23, x24, [sp, #48]
   2a7b0:	ldp	x19, x20, [sp, #16]
   2a7b4:	ldp	x21, x22, [sp, #32]
   2a7b8:	ldp	x29, x30, [sp], #128
   2a7bc:	ret
   2a7c0:	ldr	w0, [x20, #12]
   2a7c4:	mov	x3, x21
   2a7c8:	ldr	x4, [x20, #112]
   2a7cc:	mov	x2, x23
   2a7d0:	mov	x1, x19
   2a7d4:	blr	x4
   2a7d8:	b	2a79c <acc_update_self_async@@OACC_2.5+0xcc>
   2a7dc:	mov	x0, x24
   2a7e0:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   2a7e4:	ldp	x23, x24, [sp, #48]
   2a7e8:	b	2a7b0 <acc_update_self_async@@OACC_2.5+0xe0>
   2a7ec:	mov	x0, x24
   2a7f0:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   2a7f4:	b	2a730 <acc_update_self_async@@OACC_2.5+0x60>
   2a7f8:	mov	x0, x24
   2a7fc:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   2a800:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2a804:	mov	w2, w21
   2a808:	mov	x1, x19
   2a80c:	add	x0, x0, #0x628
   2a810:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2a814:	nop
   2a818:	adrp	x4, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   2a81c:	ldr	x4, [x4, #4048]
   2a820:	mrs	x6, tpidr_el0
   2a824:	stp	x29, x30, [sp, #-144]!
   2a828:	mov	x29, sp
   2a82c:	stp	x21, x22, [sp, #32]
   2a830:	mov	x22, x2
   2a834:	mov	x21, x0
   2a838:	ldr	x2, [x6, x4]
   2a83c:	stp	x19, x20, [sp, #16]
   2a840:	mov	x19, x1
   2a844:	ldr	x0, [x1]
   2a848:	stp	x23, x24, [sp, #48]
   2a84c:	mov	x23, x3
   2a850:	ldr	x1, [x22]
   2a854:	ldr	x24, [x2, #8]
   2a858:	add	x20, x24, #0xa8
   2a85c:	bl	87a0 <acc_is_present@plt>
   2a860:	cbz	w0, 2a938 <acc_update_self_async@@OACC_2.5+0x268>
   2a864:	mov	w0, #0x1                   	// #1
   2a868:	ldaxr	w1, [x20]
   2a86c:	cbnz	w1, 2a878 <acc_update_self_async@@OACC_2.5+0x1a8>
   2a870:	stxr	w2, w0, [x20]
   2a874:	cbnz	w2, 2a868 <acc_update_self_async@@OACC_2.5+0x198>
   2a878:	cmp	w1, #0x0
   2a87c:	b.ne	2aa48 <acc_update_self_async@@OACC_2.5+0x378>  // b.any
   2a880:	ldr	x3, [x19]
   2a884:	add	x0, x24, #0xa0
   2a888:	ldr	x2, [x22]
   2a88c:	add	x1, sp, #0x58
   2a890:	add	x2, x2, x3
   2a894:	stp	x3, x2, [sp, #88]
   2a898:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   2a89c:	mov	x19, x0
   2a8a0:	ldxr	w0, [x20]
   2a8a4:	stlxr	w1, wzr, [x20]
   2a8a8:	cbnz	w1, 2a8a0 <acc_update_self_async@@OACC_2.5+0x1d0>
   2a8ac:	tbnz	w0, #31, 2aa10 <acc_update_self_async@@OACC_2.5+0x340>
   2a8b0:	ldr	x4, [x19, #16]
   2a8b4:	ldr	x3, [x4, #48]
   2a8b8:	cbz	x3, 2aa2c <acc_update_self_async@@OACC_2.5+0x35c>
   2a8bc:	add	x4, x4, #0x40
   2a8c0:	mov	x1, #0x0                   	// #0
   2a8c4:	b	2a8d4 <acc_update_self_async@@OACC_2.5+0x204>
   2a8c8:	add	x1, x1, #0x1
   2a8cc:	cmp	x1, x3
   2a8d0:	b.eq	2aa2c <acc_update_self_async@@OACC_2.5+0x35c>  // b.none
   2a8d4:	lsl	x2, x1, #5
   2a8d8:	ldr	x2, [x4, x2]
   2a8dc:	cmp	x2, x19
   2a8e0:	b.ne	2a8c8 <acc_update_self_async@@OACC_2.5+0x1f8>  // b.any
   2a8e4:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2a8e8:	add	x2, x21, x1
   2a8ec:	ldr	q1, [x0, #1728]
   2a8f0:	cbz	x21, 2a9c0 <acc_update_self_async@@OACC_2.5+0x2f0>
   2a8f4:	nop
   2a8f8:	cmp	x1, x3
   2a8fc:	b.cs	2a918 <acc_update_self_async@@OACC_2.5+0x248>  // b.hs, b.nlast
   2a900:	lsl	x0, x1, #5
   2a904:	ldr	x0, [x4, x0]
   2a908:	cbz	x0, 2a918 <acc_update_self_async@@OACC_2.5+0x248>
   2a90c:	ldr	q0, [x0, #32]
   2a910:	add	v0.2d, v0.2d, v1.2d
   2a914:	str	q0, [x0, #32]
   2a918:	add	x1, x1, #0x1
   2a91c:	cmp	x1, x2
   2a920:	b.ne	2a8f8 <acc_update_self_async@@OACC_2.5+0x228>  // b.any
   2a924:	ldp	x19, x20, [sp, #16]
   2a928:	ldp	x21, x22, [sp, #32]
   2a92c:	ldp	x23, x24, [sp, #48]
   2a930:	ldp	x29, x30, [sp], #144
   2a934:	ret
   2a938:	str	x25, [sp, #64]
   2a93c:	adrp	x25, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   2a940:	ldr	w1, [x25, #1552]
   2a944:	cbnz	w1, 2a9f4 <acc_update_self_async@@OACC_2.5+0x324>
   2a948:	mov	x2, x19
   2a94c:	mov	x1, x21
   2a950:	mov	x5, x23
   2a954:	mov	x4, x22
   2a958:	mov	x0, x24
   2a95c:	mov	w7, #0x0                   	// #0
   2a960:	mov	w6, #0x1                   	// #1
   2a964:	mov	x3, #0x0                   	// #0
   2a968:	bl	20c80 <omp_get_place_proc_ids@@OMP_4.5+0x1ac0>
   2a96c:	mov	x19, x0
   2a970:	ldr	w1, [x25, #1552]
   2a974:	cbnz	w1, 2a9d4 <acc_update_self_async@@OACC_2.5+0x304>
   2a978:	ldr	x1, [x19, #64]
   2a97c:	mov	x0, #0x1                   	// #1
   2a980:	mov	w2, w0
   2a984:	str	x0, [x1, #40]
   2a988:	ldaxr	w1, [x20]
   2a98c:	cbnz	w1, 2a998 <acc_update_self_async@@OACC_2.5+0x2c8>
   2a990:	stxr	w0, w2, [x20]
   2a994:	cbnz	w0, 2a988 <acc_update_self_async@@OACC_2.5+0x2b8>
   2a998:	cmp	w1, #0x0
   2a99c:	b.ne	2aa3c <acc_update_self_async@@OACC_2.5+0x36c>  // b.any
   2a9a0:	ldr	x0, [x24, #176]
   2a9a4:	str	x0, [x19, #40]
   2a9a8:	str	x19, [x24, #176]
   2a9ac:	ldxr	w0, [x20]
   2a9b0:	stlxr	w1, wzr, [x20]
   2a9b4:	cbnz	w1, 2a9ac <acc_update_self_async@@OACC_2.5+0x2dc>
   2a9b8:	tbnz	w0, #31, 2aa1c <acc_update_self_async@@OACC_2.5+0x34c>
   2a9bc:	ldr	x25, [sp, #64]
   2a9c0:	ldp	x19, x20, [sp, #16]
   2a9c4:	ldp	x21, x22, [sp, #32]
   2a9c8:	ldp	x23, x24, [sp, #48]
   2a9cc:	ldp	x29, x30, [sp], #144
   2a9d0:	ret
   2a9d4:	adrp	x2, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2a9d8:	add	x2, x2, #0x6d0
   2a9dc:	add	x2, x2, #0xb8
   2a9e0:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   2a9e4:	mov	w0, #0x0                   	// #0
   2a9e8:	add	x1, x1, #0xfc0
   2a9ec:	bl	b568 <GOMP_critical_name_end@@GOMP_1.0+0x68>
   2a9f0:	b	2a978 <acc_update_self_async@@OACC_2.5+0x2a8>
   2a9f4:	adrp	x2, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2a9f8:	add	x2, x2, #0x6d0
   2a9fc:	add	x2, x2, #0xb8
   2aa00:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   2aa04:	add	x1, x1, #0xfa8
   2aa08:	bl	b568 <GOMP_critical_name_end@@GOMP_1.0+0x68>
   2aa0c:	b	2a948 <acc_update_self_async@@OACC_2.5+0x278>
   2aa10:	mov	x0, x20
   2aa14:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   2aa18:	b	2a8b0 <acc_update_self_async@@OACC_2.5+0x1e0>
   2aa1c:	mov	x0, x20
   2aa20:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   2aa24:	ldr	x25, [sp, #64]
   2aa28:	b	2a9c0 <acc_update_self_async@@OACC_2.5+0x2f0>
   2aa2c:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2aa30:	add	x0, x0, #0x688
   2aa34:	str	x25, [sp, #64]
   2aa38:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2aa3c:	mov	x0, x20
   2aa40:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   2aa44:	b	2a9a0 <acc_update_self_async@@OACC_2.5+0x2d0>
   2aa48:	mov	x0, x20
   2aa4c:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   2aa50:	b	2a880 <acc_update_self_async@@OACC_2.5+0x1b0>
   2aa54:	nop
   2aa58:	adrp	x6, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   2aa5c:	ldr	x6, [x6, #4048]
   2aa60:	mrs	x7, tpidr_el0
   2aa64:	stp	x29, x30, [sp, #-160]!
   2aa68:	cmp	w5, #0x1
   2aa6c:	mov	x29, sp
   2aa70:	ldr	x5, [x7, x6]
   2aa74:	stp	x21, x22, [sp, #32]
   2aa78:	mov	w22, w3
   2aa7c:	mov	x21, x0
   2aa80:	stp	x23, x24, [sp, #48]
   2aa84:	mov	w24, w4
   2aa88:	and	w23, w2, #0xff
   2aa8c:	stp	x25, x26, [sp, #64]
   2aa90:	cset	x26, ne  // ne = any
   2aa94:	ldr	x25, [x5, #8]
   2aa98:	bl	87a0 <acc_is_present@plt>
   2aa9c:	cbz	w0, 2abb0 <acc_update_self_async@@OACC_2.5+0x4e0>
   2aaa0:	add	x26, x26, #0x2
   2aaa4:	stp	x19, x20, [sp, #16]
   2aaa8:	add	x20, x25, #0xa8
   2aaac:	mov	w0, #0x1                   	// #1
   2aab0:	str	x27, [sp, #80]
   2aab4:	ldaxr	w1, [x20]
   2aab8:	cbnz	w1, 2aac4 <acc_update_self_async@@OACC_2.5+0x3f4>
   2aabc:	stxr	w2, w0, [x20]
   2aac0:	cbnz	w2, 2aab4 <acc_update_self_async@@OACC_2.5+0x3e4>
   2aac4:	cmp	w1, #0x0
   2aac8:	b.ne	2acb4 <acc_update_self_async@@OACC_2.5+0x5e4>  // b.any
   2aacc:	add	x2, x21, #0x1
   2aad0:	add	x1, sp, #0x68
   2aad4:	add	x0, x25, #0xa0
   2aad8:	stp	x21, x2, [sp, #104]
   2aadc:	bl	25798 <omp_pause_resource_all@@OMP_5.0+0x4c0>
   2aae0:	mov	x19, x0
   2aae4:	cbz	x0, 2ac9c <acc_update_self_async@@OACC_2.5+0x5cc>
   2aae8:	adrp	x27, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   2aaec:	ldr	w0, [x27, #1552]
   2aaf0:	cbnz	w0, 2ac48 <acc_update_self_async@@OACC_2.5+0x578>
   2aaf4:	ldp	x0, x1, [x19, #32]
   2aaf8:	ldr	x21, [x19, #16]
   2aafc:	cmp	x0, x1
   2ab00:	b.cc	2ac88 <acc_update_self_async@@OACC_2.5+0x5b8>  // b.lo, b.ul, b.last
   2ab04:	cbz	w24, 2abc4 <acc_update_self_async@@OACC_2.5+0x4f4>
   2ab08:	sub	x0, x0, x1
   2ab0c:	stp	x0, xzr, [x19, #32]
   2ab10:	ldxr	w0, [x20]
   2ab14:	stlxr	w1, wzr, [x20]
   2ab18:	cbnz	w1, 2ab10 <acc_update_self_async@@OACC_2.5+0x440>
   2ab1c:	tbnz	w0, #31, 2ac74 <acc_update_self_async@@OACC_2.5+0x5a4>
   2ab20:	ldr	x1, [x19, #32]
   2ab24:	cbnz	x1, 2ab90 <acc_update_self_async@@OACC_2.5+0x4c0>
   2ab28:	ldr	x0, [x21]
   2ab2c:	cmp	x26, x0
   2ab30:	b.eq	2abd8 <acc_update_self_async@@OACC_2.5+0x508>  // b.none
   2ab34:	ldr	x2, [x21, #48]
   2ab38:	mov	x0, #0x1                   	// #1
   2ab3c:	str	x0, [x19, #32]
   2ab40:	str	x26, [x21]
   2ab44:	cbz	x2, 2ab74 <acc_update_self_async@@OACC_2.5+0x4a4>
   2ab48:	add	x3, x21, #0x40
   2ab4c:	b	2ab5c <acc_update_self_async@@OACC_2.5+0x48c>
   2ab50:	add	x1, x1, #0x1
   2ab54:	cmp	x2, x1
   2ab58:	b.eq	2ab74 <acc_update_self_async@@OACC_2.5+0x4a4>  // b.none
   2ab5c:	lsl	x0, x1, #5
   2ab60:	ldr	x0, [x3, x0]
   2ab64:	cmp	x0, x19
   2ab68:	b.ne	2ab50 <acc_update_self_async@@OACC_2.5+0x480>  // b.any
   2ab6c:	add	x1, x21, x1, lsl #5
   2ab70:	strb	w23, [x1, #72]
   2ab74:	cmn	w22, #0x1
   2ab78:	b.lt	2ac10 <acc_update_self_async@@OACC_2.5+0x540>  // b.tstop
   2ab7c:	ldr	x2, [x21, #56]
   2ab80:	mov	w1, w22
   2ab84:	mov	x0, x21
   2ab88:	ldr	x2, [x2, #192]
   2ab8c:	blr	x2
   2ab90:	ldxr	w0, [x20]
   2ab94:	stlxr	w1, wzr, [x20]
   2ab98:	cbnz	w1, 2ab90 <acc_update_self_async@@OACC_2.5+0x4c0>
   2ab9c:	tbnz	w0, #31, 2ac68 <acc_update_self_async@@OACC_2.5+0x598>
   2aba0:	ldr	w0, [x27, #1552]
   2aba4:	cbnz	w0, 2ac20 <acc_update_self_async@@OACC_2.5+0x550>
   2aba8:	ldp	x19, x20, [sp, #16]
   2abac:	ldr	x27, [sp, #80]
   2abb0:	ldp	x21, x22, [sp, #32]
   2abb4:	ldp	x23, x24, [sp, #48]
   2abb8:	ldp	x25, x26, [sp, #64]
   2abbc:	ldp	x29, x30, [sp], #160
   2abc0:	ret
   2abc4:	cbz	x1, 2ab10 <acc_update_self_async@@OACC_2.5+0x440>
   2abc8:	sub	x1, x1, #0x1
   2abcc:	sub	x0, x0, #0x1
   2abd0:	stp	x0, x1, [x19, #32]
   2abd4:	b	2ab10 <acc_update_self_async@@OACC_2.5+0x440>
   2abd8:	ldr	x0, [x25, #176]
   2abdc:	cbz	x0, 2acc0 <acc_update_self_async@@OACC_2.5+0x5f0>
   2abe0:	mov	x3, #0x0                   	// #0
   2abe4:	ldr	x21, [x19, #16]
   2abe8:	b	2abf8 <acc_update_self_async@@OACC_2.5+0x528>
   2abec:	mov	x3, x0
   2abf0:	cbz	x2, 2acc0 <acc_update_self_async@@OACC_2.5+0x5f0>
   2abf4:	mov	x0, x2
   2abf8:	cmp	x0, x21
   2abfc:	ldr	x2, [x0, #40]
   2ac00:	b.ne	2abec <acc_update_self_async@@OACC_2.5+0x51c>  // b.any
   2ac04:	cbz	x3, 2ac80 <acc_update_self_async@@OACC_2.5+0x5b0>
   2ac08:	str	x2, [x3, #40]
   2ac0c:	b	2ab34 <acc_update_self_async@@OACC_2.5+0x464>
   2ac10:	mov	x0, x21
   2ac14:	mov	w1, #0x1                   	// #1
   2ac18:	bl	22658 <omp_get_place_proc_ids@@OMP_4.5+0x3498>
   2ac1c:	b	2ab90 <acc_update_self_async@@OACC_2.5+0x4c0>
   2ac20:	adrp	x2, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2ac24:	add	x2, x2, #0x6d0
   2ac28:	add	x2, x2, #0xd0
   2ac2c:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   2ac30:	mov	w0, #0x0                   	// #0
   2ac34:	add	x1, x1, #0xff8
   2ac38:	bl	b568 <GOMP_critical_name_end@@GOMP_1.0+0x68>
   2ac3c:	ldp	x19, x20, [sp, #16]
   2ac40:	ldr	x27, [sp, #80]
   2ac44:	b	2abb0 <acc_update_self_async@@OACC_2.5+0x4e0>
   2ac48:	adrp	x2, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2ac4c:	add	x2, x2, #0x6d0
   2ac50:	add	x2, x2, #0xd0
   2ac54:	adrp	x1, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   2ac58:	mov	w0, #0x0                   	// #0
   2ac5c:	add	x1, x1, #0xfe0
   2ac60:	bl	b568 <GOMP_critical_name_end@@GOMP_1.0+0x68>
   2ac64:	b	2aaf4 <acc_update_self_async@@OACC_2.5+0x424>
   2ac68:	mov	x0, x20
   2ac6c:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   2ac70:	b	2aba0 <acc_update_self_async@@OACC_2.5+0x4d0>
   2ac74:	mov	x0, x20
   2ac78:	bl	1c868 <omp_test_nest_lock@OMP_1.0+0x280>
   2ac7c:	b	2ab20 <acc_update_self_async@@OACC_2.5+0x450>
   2ac80:	str	x2, [x25, #176]
   2ac84:	b	2ab34 <acc_update_self_async@@OACC_2.5+0x464>
   2ac88:	mov	x0, x20
   2ac8c:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   2ac90:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2ac94:	add	x0, x0, #0x660
   2ac98:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2ac9c:	mov	x0, x20
   2aca0:	bl	28058 <acc_on_device@@OACC_2.0+0x118>
   2aca4:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2aca8:	mov	x1, x21
   2acac:	add	x0, x0, #0x598
   2acb0:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2acb4:	mov	x0, x20
   2acb8:	bl	1c678 <omp_test_nest_lock@OMP_1.0+0x90>
   2acbc:	b	2aacc <acc_update_self_async@@OACC_2.5+0x3fc>
   2acc0:	mov	x0, #0x0                   	// #0
   2acc4:	mov	x1, #0x1                   	// #1
   2acc8:	str	x1, [x19, #32]
   2accc:	str	xzr, [x0]
   2acd0:	brk	#0x3e8
   2acd4:	nop

000000000002acd8 <acc_async_test@@OACC_2.0>:
   2acd8:	stp	x29, x30, [sp, #-16]!
   2acdc:	cmp	w0, #0x0
   2ace0:	add	w2, w0, #0x2
   2ace4:	mov	x29, sp
   2ace8:	ccmp	w2, #0x1, #0x0, lt  // lt = tstop
   2acec:	b.hi	2ad28 <acc_async_test@@OACC_2.0+0x50>  // b.pmore
   2acf0:	adrp	x1, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   2acf4:	ldr	x1, [x1, #4048]
   2acf8:	mrs	x2, tpidr_el0
   2acfc:	ldr	x1, [x2, x1]
   2ad00:	cbz	x1, 2ad1c <acc_async_test@@OACC_2.0+0x44>
   2ad04:	ldr	x1, [x1, #8]
   2ad08:	cbz	x1, 2ad1c <acc_async_test@@OACC_2.0+0x44>
   2ad0c:	ldp	x29, x30, [sp], #16
   2ad10:	ldr	x1, [x1, #200]
   2ad14:	mov	x16, x1
   2ad18:	br	x16
   2ad1c:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2ad20:	add	x0, x0, #0x7b8
   2ad24:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2ad28:	mov	w1, w0
   2ad2c:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2ad30:	add	x0, x0, #0x7d0
   2ad34:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>

000000000002ad38 <acc_async_test_all@@OACC_2.0>:
   2ad38:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   2ad3c:	ldr	x0, [x0, #4048]
   2ad40:	mrs	x1, tpidr_el0
   2ad44:	ldr	x0, [x1, x0]
   2ad48:	cbz	x0, 2ad60 <acc_async_test_all@@OACC_2.0+0x28>
   2ad4c:	ldr	x0, [x0, #8]
   2ad50:	cbz	x0, 2ad60 <acc_async_test_all@@OACC_2.0+0x28>
   2ad54:	ldr	x0, [x0, #208]
   2ad58:	mov	x16, x0
   2ad5c:	br	x16
   2ad60:	stp	x29, x30, [sp, #-16]!
   2ad64:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2ad68:	add	x0, x0, #0x7b8
   2ad6c:	mov	x29, sp
   2ad70:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2ad74:	nop

000000000002ad78 <acc_async_wait@@OACC_2.0.1>:
   2ad78:	stp	x29, x30, [sp, #-16]!
   2ad7c:	cmp	w0, #0x0
   2ad80:	add	w2, w0, #0x2
   2ad84:	mov	x29, sp
   2ad88:	ccmp	w2, #0x1, #0x0, lt  // lt = tstop
   2ad8c:	b.hi	2adc8 <acc_async_wait@@OACC_2.0.1+0x50>  // b.pmore
   2ad90:	adrp	x1, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   2ad94:	ldr	x1, [x1, #4048]
   2ad98:	mrs	x2, tpidr_el0
   2ad9c:	ldr	x1, [x2, x1]
   2ada0:	cbz	x1, 2adbc <acc_async_wait@@OACC_2.0.1+0x44>
   2ada4:	ldr	x1, [x1, #8]
   2ada8:	cbz	x1, 2adbc <acc_async_wait@@OACC_2.0.1+0x44>
   2adac:	ldp	x29, x30, [sp], #16
   2adb0:	ldr	x1, [x1, #216]
   2adb4:	mov	x16, x1
   2adb8:	br	x16
   2adbc:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2adc0:	add	x0, x0, #0x7b8
   2adc4:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2adc8:	mov	w1, w0
   2adcc:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2add0:	add	x0, x0, #0x7d0
   2add4:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>

000000000002add8 <acc_wait_async@@OACC_2.0>:
   2add8:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   2addc:	ldr	x2, [x2, #4048]
   2ade0:	mrs	x3, tpidr_el0
   2ade4:	ldr	x2, [x3, x2]
   2ade8:	cbz	x2, 2ae00 <acc_wait_async@@OACC_2.0+0x28>
   2adec:	ldr	x2, [x2, #8]
   2adf0:	cbz	x2, 2ae00 <acc_wait_async@@OACC_2.0+0x28>
   2adf4:	ldr	x2, [x2, #224]
   2adf8:	mov	x16, x2
   2adfc:	br	x16
   2ae00:	stp	x29, x30, [sp, #-16]!
   2ae04:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2ae08:	add	x0, x0, #0x7b8
   2ae0c:	mov	x29, sp
   2ae10:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2ae14:	nop

000000000002ae18 <acc_async_wait_all@@OACC_2.0.1>:
   2ae18:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   2ae1c:	ldr	x0, [x0, #4048]
   2ae20:	mrs	x1, tpidr_el0
   2ae24:	ldr	x0, [x1, x0]
   2ae28:	cbz	x0, 2ae40 <acc_async_wait_all@@OACC_2.0.1+0x28>
   2ae2c:	ldr	x0, [x0, #8]
   2ae30:	cbz	x0, 2ae40 <acc_async_wait_all@@OACC_2.0.1+0x28>
   2ae34:	ldr	x0, [x0, #232]
   2ae38:	mov	x16, x0
   2ae3c:	br	x16
   2ae40:	stp	x29, x30, [sp, #-16]!
   2ae44:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2ae48:	add	x0, x0, #0x7b8
   2ae4c:	mov	x29, sp
   2ae50:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2ae54:	nop

000000000002ae58 <acc_wait_all_async@@OACC_2.0>:
   2ae58:	stp	x29, x30, [sp, #-16]!
   2ae5c:	cmp	w0, #0x0
   2ae60:	add	w2, w0, #0x2
   2ae64:	mov	x29, sp
   2ae68:	ccmp	w2, #0x1, #0x0, lt  // lt = tstop
   2ae6c:	b.hi	2aea8 <acc_wait_all_async@@OACC_2.0+0x50>  // b.pmore
   2ae70:	adrp	x1, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   2ae74:	ldr	x1, [x1, #4048]
   2ae78:	mrs	x2, tpidr_el0
   2ae7c:	ldr	x1, [x2, x1]
   2ae80:	cbz	x1, 2ae9c <acc_wait_all_async@@OACC_2.0+0x44>
   2ae84:	ldr	x1, [x1, #8]
   2ae88:	cbz	x1, 2ae9c <acc_wait_all_async@@OACC_2.0+0x44>
   2ae8c:	ldp	x29, x30, [sp], #16
   2ae90:	ldr	x1, [x1, #240]
   2ae94:	mov	x16, x1
   2ae98:	br	x16
   2ae9c:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2aea0:	add	x0, x0, #0x7b8
   2aea4:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2aea8:	mov	w1, w0
   2aeac:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2aeb0:	add	x0, x0, #0x7d0
   2aeb4:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>

000000000002aeb8 <GOMP_PLUGIN_async_unmap_vars@@GOMP_PLUGIN_1.0>:
   2aeb8:	stp	x29, x30, [sp, #-32]!
   2aebc:	mov	x29, sp
   2aec0:	stp	x19, x20, [sp, #16]
   2aec4:	mov	x19, x0
   2aec8:	mov	w0, w1
   2aecc:	ldr	x20, [x19, #56]
   2aed0:	ldr	x1, [x20, #248]
   2aed4:	blr	x1
   2aed8:	mov	x0, x19
   2aedc:	mov	w1, #0x1                   	// #1
   2aee0:	bl	22658 <omp_get_place_proc_ids@@OMP_4.5+0x3498>
   2aee4:	ldr	x1, [x20, #248]
   2aee8:	mov	w0, #0xfffffffe            	// #-2
   2aeec:	ldp	x19, x20, [sp, #16]
   2aef0:	mov	x16, x1
   2aef4:	ldp	x29, x30, [sp], #32
   2aef8:	br	x16
   2aefc:	nop

000000000002af00 <GOMP_PLUGIN_acc_thread@@GOMP_PLUGIN_1.0>:
   2af00:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   2af04:	ldr	x0, [x0, #4048]
   2af08:	mrs	x1, tpidr_el0
   2af0c:	ldr	x0, [x1, x0]
   2af10:	cbz	x0, 2af18 <GOMP_PLUGIN_acc_thread@@GOMP_PLUGIN_1.0+0x18>
   2af14:	ldr	x0, [x0, #40]
   2af18:	ret
   2af1c:	nop

000000000002af20 <GOMP_PLUGIN_acc_default_dim@@GOMP_PLUGIN_1.2>:
   2af20:	cmp	w0, #0x2
   2af24:	b.hi	2af38 <GOMP_PLUGIN_acc_default_dim@@GOMP_PLUGIN_1.2+0x18>  // b.pmore
   2af28:	adrp	x1, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   2af2c:	add	x1, x1, #0x620
   2af30:	ldr	w0, [x1, w0, uxtw #2]
   2af34:	ret
   2af38:	stp	x29, x30, [sp, #-16]!
   2af3c:	mov	w1, w0
   2af40:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2af44:	mov	x29, sp
   2af48:	add	x0, x0, #0x7f0
   2af4c:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>

000000000002af50 <acc_get_current_cuda_device@@OACC_2.0>:
   2af50:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   2af54:	ldr	x0, [x0, #4048]
   2af58:	mrs	x1, tpidr_el0
   2af5c:	ldr	x0, [x1, x0]
   2af60:	cbz	x0, 2af7c <acc_get_current_cuda_device@@OACC_2.0+0x2c>
   2af64:	ldr	x0, [x0, #8]
   2af68:	cbz	x0, 2af7c <acc_get_current_cuda_device@@OACC_2.0+0x2c>
   2af6c:	ldr	x0, [x0, #272]
   2af70:	cbz	x0, 2af7c <acc_get_current_cuda_device@@OACC_2.0+0x2c>
   2af74:	mov	x16, x0
   2af78:	br	x16
   2af7c:	mov	x0, #0x0                   	// #0
   2af80:	ret
   2af84:	nop

000000000002af88 <acc_get_current_cuda_context@@OACC_2.0>:
   2af88:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   2af8c:	ldr	x0, [x0, #4048]
   2af90:	mrs	x1, tpidr_el0
   2af94:	ldr	x0, [x1, x0]
   2af98:	cbz	x0, 2afb4 <acc_get_current_cuda_context@@OACC_2.0+0x2c>
   2af9c:	ldr	x0, [x0, #8]
   2afa0:	cbz	x0, 2afb4 <acc_get_current_cuda_context@@OACC_2.0+0x2c>
   2afa4:	ldr	x0, [x0, #280]
   2afa8:	cbz	x0, 2afb4 <acc_get_current_cuda_context@@OACC_2.0+0x2c>
   2afac:	mov	x16, x0
   2afb0:	br	x16
   2afb4:	mov	x0, #0x0                   	// #0
   2afb8:	ret
   2afbc:	nop

000000000002afc0 <acc_get_cuda_stream@@OACC_2.0>:
   2afc0:	adrp	x2, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   2afc4:	ldr	x2, [x2, #4048]
   2afc8:	mrs	x3, tpidr_el0
   2afcc:	add	w1, w0, #0x2
   2afd0:	cmp	w0, #0x0
   2afd4:	ccmp	w1, #0x1, #0x0, lt  // lt = tstop
   2afd8:	ldr	x1, [x3, x2]
   2afdc:	b.hi	2affc <acc_get_cuda_stream@@OACC_2.0+0x3c>  // b.pmore
   2afe0:	cbz	x1, 2affc <acc_get_cuda_stream@@OACC_2.0+0x3c>
   2afe4:	ldr	x1, [x1, #8]
   2afe8:	cbz	x1, 2affc <acc_get_cuda_stream@@OACC_2.0+0x3c>
   2afec:	ldr	x1, [x1, #288]
   2aff0:	cbz	x1, 2affc <acc_get_cuda_stream@@OACC_2.0+0x3c>
   2aff4:	mov	x16, x1
   2aff8:	br	x16
   2affc:	mov	x0, #0x0                   	// #0
   2b000:	ret
   2b004:	nop

000000000002b008 <acc_set_cuda_stream@@OACC_2.0>:
   2b008:	stp	x29, x30, [sp, #-32]!
   2b00c:	cmp	w0, #0x0
   2b010:	mov	x29, sp
   2b014:	stp	x19, x20, [sp, #16]
   2b018:	mov	w19, w0
   2b01c:	add	w0, w0, #0x2
   2b020:	ccmp	w0, #0x1, #0x0, lt  // lt = tstop
   2b024:	b.hi	2b070 <acc_set_cuda_stream@@OACC_2.0+0x68>  // b.pmore
   2b028:	mov	x20, x1
   2b02c:	cbz	x1, 2b070 <acc_set_cuda_stream@@OACC_2.0+0x68>
   2b030:	bl	28018 <acc_on_device@@OACC_2.0+0xd8>
   2b034:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   2b038:	ldr	x0, [x0, #4048]
   2b03c:	mrs	x1, tpidr_el0
   2b040:	ldr	x0, [x1, x0]
   2b044:	cbz	x0, 2b080 <acc_set_cuda_stream@@OACC_2.0+0x78>
   2b048:	ldr	x0, [x0, #8]
   2b04c:	cbz	x0, 2b080 <acc_set_cuda_stream@@OACC_2.0+0x78>
   2b050:	ldr	x2, [x0, #296]
   2b054:	cbz	x2, 2b080 <acc_set_cuda_stream@@OACC_2.0+0x78>
   2b058:	mov	x1, x20
   2b05c:	mov	w0, w19
   2b060:	ldp	x19, x20, [sp, #16]
   2b064:	mov	x16, x2
   2b068:	ldp	x29, x30, [sp], #32
   2b06c:	br	x16
   2b070:	mov	w0, #0x0                   	// #0
   2b074:	ldp	x19, x20, [sp, #16]
   2b078:	ldp	x29, x30, [sp], #32
   2b07c:	ret
   2b080:	mov	w0, #0xffffffff            	// #-1
   2b084:	b	2b074 <acc_set_cuda_stream@@OACC_2.0+0x6c>
   2b088:	cbz	x1, 2b0f0 <acc_set_cuda_stream@@OACC_2.0+0xe8>
   2b08c:	stp	x29, x30, [sp, #-48]!
   2b090:	mov	x29, sp
   2b094:	stp	x19, x20, [sp, #16]
   2b098:	sxtw	x20, w0
   2b09c:	add	x20, x20, #0x6
   2b0a0:	mov	x19, x1
   2b0a4:	str	x21, [sp, #32]
   2b0a8:	neg	x20, x20, lsl #4
   2b0ac:	mov	w21, w0
   2b0b0:	ldr	x1, [x19, #32]
   2b0b4:	mov	w0, w21
   2b0b8:	bl	2b088 <acc_set_cuda_stream@@OACC_2.0+0x80>
   2b0bc:	cbnz	x0, 2b0e0 <acc_set_cuda_stream@@OACC_2.0+0xd8>
   2b0c0:	ldr	x0, [x19, #8]
   2b0c4:	add	x0, x0, x20
   2b0c8:	ldr	w1, [x0, #200]
   2b0cc:	cmp	w1, #0x2
   2b0d0:	b.eq	2b0e0 <acc_set_cuda_stream@@OACC_2.0+0xd8>  // b.none
   2b0d4:	ldr	x19, [x19, #24]
   2b0d8:	cbnz	x19, 2b0b0 <acc_set_cuda_stream@@OACC_2.0+0xa8>
   2b0dc:	mov	x0, #0x0                   	// #0
   2b0e0:	ldp	x19, x20, [sp, #16]
   2b0e4:	ldr	x21, [sp, #32]
   2b0e8:	ldp	x29, x30, [sp], #48
   2b0ec:	ret
   2b0f0:	mov	x0, #0x0                   	// #0
   2b0f4:	ret
   2b0f8:	cbz	x0, 2b14c <acc_set_cuda_stream@@OACC_2.0+0x144>
   2b0fc:	stp	x29, x30, [sp, #-48]!
   2b100:	mov	x29, sp
   2b104:	stp	x19, x20, [sp, #16]
   2b108:	mov	x19, x0
   2b10c:	mov	x20, x2
   2b110:	str	x21, [sp, #32]
   2b114:	mov	x21, x1
   2b118:	mov	x0, x19
   2b11c:	mov	x1, x20
   2b120:	blr	x21
   2b124:	ldr	x0, [x19, #24]
   2b128:	mov	x2, x20
   2b12c:	mov	x1, x21
   2b130:	bl	2b0f8 <acc_set_cuda_stream@@OACC_2.0+0xf0>
   2b134:	ldr	x19, [x19, #32]
   2b138:	cbnz	x19, 2b118 <acc_set_cuda_stream@@OACC_2.0+0x110>
   2b13c:	ldp	x19, x20, [sp, #16]
   2b140:	ldr	x21, [sp, #32]
   2b144:	ldp	x29, x30, [sp], #48
   2b148:	ret
   2b14c:	ret
   2b150:	ldr	w4, [x1]
   2b154:	ldr	x1, [x0]
   2b158:	ldr	w2, [x1]
   2b15c:	cmp	w2, w4
   2b160:	b.eq	2b1d4 <acc_set_cuda_stream@@OACC_2.0+0x1cc>  // b.none
   2b164:	cmp	w4, w2
   2b168:	ldp	x2, x3, [x1, #24]
   2b16c:	b.lt	2b1d8 <acc_set_cuda_stream@@OACC_2.0+0x1d0>  // b.tstop
   2b170:	mov	w6, #0x1                   	// #1
   2b174:	mov	x2, x3
   2b178:	mov	w5, w6
   2b17c:	mov	w7, #0x0                   	// #0
   2b180:	cbz	x2, 2b1d4 <acc_set_cuda_stream@@OACC_2.0+0x1cc>
   2b184:	ldr	w3, [x2]
   2b188:	cmp	w3, w4
   2b18c:	b.eq	2b22c <acc_set_cuda_stream@@OACC_2.0+0x224>  // b.none
   2b190:	b.gt	2b1e8 <acc_set_cuda_stream@@OACC_2.0+0x1e0>
   2b194:	ldr	x3, [x2, #32]
   2b198:	cbz	x3, 2b22c <acc_set_cuda_stream@@OACC_2.0+0x224>
   2b19c:	cmp	w5, #0x1
   2b1a0:	b.ne	2b25c <acc_set_cuda_stream@@OACC_2.0+0x254>  // b.any
   2b1a4:	ldr	x5, [x3, #24]
   2b1a8:	str	x2, [x3, #24]
   2b1ac:	str	x5, [x2, #32]
   2b1b0:	str	x3, [x1, #32]
   2b1b4:	ldr	x2, [x3, #24]
   2b1b8:	str	x1, [x3, #24]
   2b1bc:	str	x2, [x1, #32]
   2b1c0:	mov	x1, x3
   2b1c4:	str	x3, [x0]
   2b1c8:	ldr	w2, [x1]
   2b1cc:	cmp	w2, w4
   2b1d0:	b.ne	2b164 <acc_set_cuda_stream@@OACC_2.0+0x15c>  // b.any
   2b1d4:	ret
   2b1d8:	mov	w7, #0x1                   	// #1
   2b1dc:	mov	w6, #0x0                   	// #0
   2b1e0:	mov	w5, #0xffffffff            	// #-1
   2b1e4:	b	2b180 <acc_set_cuda_stream@@OACC_2.0+0x178>
   2b1e8:	ldr	x3, [x2, #24]
   2b1ec:	cbz	x3, 2b22c <acc_set_cuda_stream@@OACC_2.0+0x224>
   2b1f0:	cmn	w5, #0x1
   2b1f4:	b.ne	2b248 <acc_set_cuda_stream@@OACC_2.0+0x240>  // b.any
   2b1f8:	ldr	x5, [x3, #32]
   2b1fc:	str	x2, [x3, #32]
   2b200:	str	x5, [x2, #24]
   2b204:	str	x3, [x1, #24]
   2b208:	ldr	x2, [x3, #32]
   2b20c:	str	x1, [x3, #32]
   2b210:	str	x2, [x1, #24]
   2b214:	mov	x1, x3
   2b218:	str	x3, [x0]
   2b21c:	ldr	w2, [x1]
   2b220:	cmp	w2, w4
   2b224:	b.ne	2b164 <acc_set_cuda_stream@@OACC_2.0+0x15c>  // b.any
   2b228:	ret
   2b22c:	cmn	w5, #0x1
   2b230:	b.eq	2b278 <acc_set_cuda_stream@@OACC_2.0+0x270>  // b.none
   2b234:	ldr	x3, [x2, #24]
   2b238:	str	x1, [x2, #24]
   2b23c:	str	x3, [x1, #32]
   2b240:	str	x2, [x0]
   2b244:	ret
   2b248:	cbz	w6, 2b270 <acc_set_cuda_stream@@OACC_2.0+0x268>
   2b24c:	ldr	x5, [x3, #32]
   2b250:	str	x2, [x3, #32]
   2b254:	str	x5, [x2, #24]
   2b258:	b	2b1b0 <acc_set_cuda_stream@@OACC_2.0+0x1a8>
   2b25c:	cbz	w7, 2b270 <acc_set_cuda_stream@@OACC_2.0+0x268>
   2b260:	ldr	x5, [x3, #24]
   2b264:	str	x2, [x3, #24]
   2b268:	str	x5, [x2, #32]
   2b26c:	b	2b204 <acc_set_cuda_stream@@OACC_2.0+0x1fc>
   2b270:	ldr	x1, [x0]
   2b274:	b	2b21c <acc_set_cuda_stream@@OACC_2.0+0x214>
   2b278:	ldr	x3, [x2, #32]
   2b27c:	str	x1, [x2, #32]
   2b280:	str	x3, [x1, #24]
   2b284:	str	x2, [x0]
   2b288:	ret
   2b28c:	nop
   2b290:	mov	x8, x1
   2b294:	sub	x0, x2, w0, sxtw #4
   2b298:	ldr	x1, [x1]
   2b29c:	mov	x9, x2
   2b2a0:	ldur	w2, [x0, #-8]
   2b2a4:	cbz	x1, 2b384 <acc_set_cuda_stream@@OACC_2.0+0x37c>
   2b2a8:	stp	x29, x30, [sp, #-48]!
   2b2ac:	mov	x0, x8
   2b2b0:	mov	x29, sp
   2b2b4:	add	x1, sp, #0x18
   2b2b8:	str	w2, [sp, #24]
   2b2bc:	bl	2b150 <acc_set_cuda_stream@@OACC_2.0+0x148>
   2b2c0:	ldr	x10, [x8]
   2b2c4:	cbz	x10, 2b36c <acc_set_cuda_stream@@OACC_2.0+0x364>
   2b2c8:	ldr	w1, [x10]
   2b2cc:	ldr	w0, [sp, #24]
   2b2d0:	cmp	w1, w0
   2b2d4:	b.ne	2b36c <acc_set_cuda_stream@@OACC_2.0+0x364>  // b.any
   2b2d8:	ldp	x0, x1, [x9]
   2b2dc:	ldr	x2, [x10, #8]
   2b2e0:	cmp	x9, x2
   2b2e4:	str	x0, [x1]
   2b2e8:	str	x1, [x0, #8]
   2b2ec:	b.eq	2b2f8 <acc_set_cuda_stream@@OACC_2.0+0x2f0>  // b.none
   2b2f0:	ldp	x29, x30, [sp], #48
   2b2f4:	ret
   2b2f8:	cmp	x9, x0
   2b2fc:	b.eq	2b30c <acc_set_cuda_stream@@OACC_2.0+0x304>  // b.none
   2b300:	str	x0, [x10, #8]
   2b304:	ldp	x29, x30, [sp], #48
   2b308:	ret
   2b30c:	str	xzr, [x10, #8]
   2b310:	mov	x0, x8
   2b314:	mov	x1, x10
   2b318:	bl	2b150 <acc_set_cuda_stream@@OACC_2.0+0x148>
   2b31c:	ldr	x0, [x8]
   2b320:	cbz	x0, 2b358 <acc_set_cuda_stream@@OACC_2.0+0x350>
   2b324:	ldr	w2, [x0]
   2b328:	ldr	w1, [x10]
   2b32c:	cmp	w2, w1
   2b330:	b.ne	2b358 <acc_set_cuda_stream@@OACC_2.0+0x350>  // b.any
   2b334:	ldp	x1, x2, [x0, #24]
   2b338:	cbz	x1, 2b364 <acc_set_cuda_stream@@OACC_2.0+0x35c>
   2b33c:	str	x1, [x8]
   2b340:	cbz	x2, 2b358 <acc_set_cuda_stream@@OACC_2.0+0x350>
   2b344:	nop
   2b348:	mov	x0, x1
   2b34c:	ldr	x1, [x1, #32]
   2b350:	cbnz	x1, 2b348 <acc_set_cuda_stream@@OACC_2.0+0x340>
   2b354:	str	x2, [x0, #32]
   2b358:	mov	x0, x10
   2b35c:	bl	88b0 <free@plt>
   2b360:	b	2b2f0 <acc_set_cuda_stream@@OACC_2.0+0x2e8>
   2b364:	str	x2, [x8]
   2b368:	b	2b358 <acc_set_cuda_stream@@OACC_2.0+0x350>
   2b36c:	ldp	x0, x1, [x9]
   2b370:	mov	x2, #0x0                   	// #0
   2b374:	str	x0, [x1]
   2b378:	str	x1, [x0, #8]
   2b37c:	ldr	x0, [x2, #8]
   2b380:	brk	#0x3e8
   2b384:	ldp	x0, x1, [x9]
   2b388:	mov	x2, #0x0                   	// #0
   2b38c:	str	x0, [x1]
   2b390:	str	x1, [x0, #8]
   2b394:	ldr	x0, [x2, #8]
   2b398:	brk	#0x3e8
   2b39c:	nop
   2b3a0:	ldr	x5, [x1]
   2b3a4:	cbz	x5, 2b488 <acc_set_cuda_stream@@OACC_2.0+0x480>
   2b3a8:	sxtw	x7, w0
   2b3ac:	mov	w8, w0
   2b3b0:	add	x7, x7, #0x6
   2b3b4:	stp	x29, x30, [sp, #-16]!
   2b3b8:	neg	x7, x7, lsl #4
   2b3bc:	mov	x29, sp
   2b3c0:	ldr	x1, [x5, #32]
   2b3c4:	mov	w0, w8
   2b3c8:	bl	2b088 <acc_set_cuda_stream@@OACC_2.0+0x80>
   2b3cc:	mov	x6, x0
   2b3d0:	cbnz	x0, 2b404 <acc_set_cuda_stream@@OACC_2.0+0x3fc>
   2b3d4:	ldr	x6, [x5, #8]
   2b3d8:	add	x6, x6, x7
   2b3dc:	ldr	w0, [x6, #200]
   2b3e0:	cmp	w0, #0x2
   2b3e4:	b.eq	2b404 <acc_set_cuda_stream@@OACC_2.0+0x3fc>  // b.none
   2b3e8:	ldr	x5, [x5, #24]
   2b3ec:	cbnz	x5, 2b3c0 <acc_set_cuda_stream@@OACC_2.0+0x3b8>
   2b3f0:	mov	w0, #0x1                   	// #1
   2b3f4:	strb	w0, [x4]
   2b3f8:	ldp	x29, x30, [sp], #16
   2b3fc:	mov	x0, x5
   2b400:	ret
   2b404:	cbz	x3, 2b44c <acc_set_cuda_stream@@OACC_2.0+0x444>
   2b408:	ldr	x3, [x3]
   2b40c:	cbz	x3, 2b44c <acc_set_cuda_stream@@OACC_2.0+0x444>
   2b410:	sxtw	x7, w2
   2b414:	add	x7, x7, #0x6
   2b418:	neg	x7, x7, lsl #4
   2b41c:	ldr	x1, [x3, #32]
   2b420:	mov	w0, w2
   2b424:	bl	2b088 <acc_set_cuda_stream@@OACC_2.0+0x80>
   2b428:	mov	x5, x0
   2b42c:	cbnz	x0, 2b454 <acc_set_cuda_stream@@OACC_2.0+0x44c>
   2b430:	ldr	x5, [x3, #8]
   2b434:	add	x5, x5, x7
   2b438:	ldr	w0, [x5, #200]
   2b43c:	cmp	w0, #0x2
   2b440:	b.eq	2b454 <acc_set_cuda_stream@@OACC_2.0+0x44c>  // b.none
   2b444:	ldr	x3, [x3, #24]
   2b448:	cbnz	x3, 2b41c <acc_set_cuda_stream@@OACC_2.0+0x414>
   2b44c:	mov	x5, x6
   2b450:	b	2b3f0 <acc_set_cuda_stream@@OACC_2.0+0x3e8>
   2b454:	ldr	w0, [x5, #88]
   2b458:	ldr	w1, [x6, #88]
   2b45c:	cmp	w1, w0
   2b460:	b.gt	2b44c <acc_set_cuda_stream@@OACC_2.0+0x444>
   2b464:	b.lt	2b478 <acc_set_cuda_stream@@OACC_2.0+0x470>  // b.tstop
   2b468:	ldrb	w0, [x5, #207]
   2b46c:	cbz	w0, 2b44c <acc_set_cuda_stream@@OACC_2.0+0x444>
   2b470:	ldrb	w0, [x6, #207]
   2b474:	cbnz	w0, 2b44c <acc_set_cuda_stream@@OACC_2.0+0x444>
   2b478:	mov	x0, x5
   2b47c:	strb	wzr, [x4]
   2b480:	ldp	x29, x30, [sp], #16
   2b484:	ret
   2b488:	mov	w0, #0x1                   	// #1
   2b48c:	strb	w0, [x4]
   2b490:	mov	x0, x5
   2b494:	ret
   2b498:	ldr	x3, [x0]
   2b49c:	cbz	x3, 2b5cc <acc_set_cuda_stream@@OACC_2.0+0x5c4>
   2b4a0:	ldr	w4, [x1]
   2b4a4:	ldr	w5, [x3]
   2b4a8:	cmp	w5, w4
   2b4ac:	b.eq	2b51c <acc_set_cuda_stream@@OACC_2.0+0x514>  // b.none
   2b4b0:	mov	w8, #0xffffffff            	// #-1
   2b4b4:	mov	w7, #0x1                   	// #1
   2b4b8:	ldp	x2, x6, [x3, #24]
   2b4bc:	cmp	w4, w5
   2b4c0:	csel	x2, x2, x6, lt  // lt = tstop
   2b4c4:	csel	w6, w8, w7, lt  // lt = tstop
   2b4c8:	cbz	x2, 2b5c4 <acc_set_cuda_stream@@OACC_2.0+0x5bc>
   2b4cc:	ldr	w5, [x2]
   2b4d0:	cmp	w5, w4
   2b4d4:	b.eq	2b574 <acc_set_cuda_stream@@OACC_2.0+0x56c>  // b.none
   2b4d8:	b.gt	2b530 <acc_set_cuda_stream@@OACC_2.0+0x528>
   2b4dc:	ldr	x5, [x2, #32]
   2b4e0:	cbz	x5, 2b574 <acc_set_cuda_stream@@OACC_2.0+0x56c>
   2b4e4:	cmp	w6, #0x1
   2b4e8:	b.ne	2b60c <acc_set_cuda_stream@@OACC_2.0+0x604>  // b.any
   2b4ec:	ldr	x6, [x5, #24]
   2b4f0:	str	x2, [x5, #24]
   2b4f4:	str	x6, [x2, #32]
   2b4f8:	str	x5, [x3, #32]
   2b4fc:	ldr	x2, [x5, #24]
   2b500:	str	x3, [x5, #24]
   2b504:	str	x2, [x3, #32]
   2b508:	mov	x3, x5
   2b50c:	str	x5, [x0]
   2b510:	ldr	w5, [x3]
   2b514:	cmp	w5, w4
   2b518:	b.ne	2b4b8 <acc_set_cuda_stream@@OACC_2.0+0x4b0>  // b.any
   2b51c:	stp	x29, x30, [sp, #-16]!
   2b520:	adrp	x0, 2d000 <omp_get_team_num@@OMP_4.0+0x338>
   2b524:	add	x0, x0, #0xed0
   2b528:	mov	x29, sp
   2b52c:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2b530:	ldr	x5, [x2, #24]
   2b534:	cbz	x5, 2b574 <acc_set_cuda_stream@@OACC_2.0+0x56c>
   2b538:	cmn	w6, #0x1
   2b53c:	b.ne	2b5d8 <acc_set_cuda_stream@@OACC_2.0+0x5d0>  // b.any
   2b540:	ldr	x6, [x5, #32]
   2b544:	str	x2, [x5, #32]
   2b548:	str	x6, [x2, #24]
   2b54c:	str	x5, [x3, #24]
   2b550:	ldr	x2, [x5, #32]
   2b554:	str	x3, [x5, #32]
   2b558:	str	x2, [x3, #24]
   2b55c:	mov	x3, x5
   2b560:	str	x5, [x0]
   2b564:	ldr	w5, [x3]
   2b568:	cmp	w5, w4
   2b56c:	b.ne	2b4b8 <acc_set_cuda_stream@@OACC_2.0+0x4b0>  // b.any
   2b570:	b	2b51c <acc_set_cuda_stream@@OACC_2.0+0x514>
   2b574:	cmn	w6, #0x1
   2b578:	b.eq	2b5f8 <acc_set_cuda_stream@@OACC_2.0+0x5f0>  // b.none
   2b57c:	ldr	x5, [x2, #24]
   2b580:	str	x3, [x2, #24]
   2b584:	str	x5, [x3, #32]
   2b588:	str	x2, [x0]
   2b58c:	ldr	w3, [x2]
   2b590:	cmp	w4, w3
   2b594:	b.eq	2b51c <acc_set_cuda_stream@@OACC_2.0+0x514>  // b.none
   2b598:	b.le	2b5b0 <acc_set_cuda_stream@@OACC_2.0+0x5a8>
   2b59c:	ldr	x3, [x2, #32]
   2b5a0:	stp	x2, x3, [x1, #24]
   2b5a4:	str	xzr, [x2, #32]
   2b5a8:	str	x1, [x0]
   2b5ac:	ret
   2b5b0:	ldr	x3, [x2, #24]
   2b5b4:	stp	x3, x2, [x1, #24]
   2b5b8:	str	xzr, [x2, #24]
   2b5bc:	str	x1, [x0]
   2b5c0:	ret
   2b5c4:	ldr	x2, [x0]
   2b5c8:	cbnz	x2, 2b58c <acc_set_cuda_stream@@OACC_2.0+0x584>
   2b5cc:	stp	xzr, xzr, [x1, #24]
   2b5d0:	str	x1, [x0]
   2b5d4:	ret
   2b5d8:	cmp	w6, #0x0
   2b5dc:	b.le	2b5f0 <acc_set_cuda_stream@@OACC_2.0+0x5e8>
   2b5e0:	ldr	x6, [x5, #32]
   2b5e4:	str	x2, [x5, #32]
   2b5e8:	str	x6, [x2, #24]
   2b5ec:	b	2b4f8 <acc_set_cuda_stream@@OACC_2.0+0x4f0>
   2b5f0:	ldr	x3, [x0]
   2b5f4:	b	2b564 <acc_set_cuda_stream@@OACC_2.0+0x55c>
   2b5f8:	ldr	x5, [x2, #32]
   2b5fc:	str	x3, [x2, #32]
   2b600:	str	x5, [x3, #24]
   2b604:	str	x2, [x0]
   2b608:	b	2b58c <acc_set_cuda_stream@@OACC_2.0+0x584>
   2b60c:	tbz	w6, #31, 2b5f0 <acc_set_cuda_stream@@OACC_2.0+0x5e8>
   2b610:	ldr	x6, [x5, #24]
   2b614:	str	x2, [x5, #24]
   2b618:	str	x6, [x2, #32]
   2b61c:	b	2b54c <acc_set_cuda_stream@@OACC_2.0+0x544>
   2b620:	ldr	x2, [x0]
   2b624:	cbz	x2, 2b6c8 <acc_set_cuda_stream@@OACC_2.0+0x6c0>
   2b628:	ldr	w3, [x1]
   2b62c:	ldr	w4, [x2]
   2b630:	cmp	w4, w3
   2b634:	b.eq	2b6a8 <acc_set_cuda_stream@@OACC_2.0+0x6a0>  // b.none
   2b638:	mov	w7, #0xffffffff            	// #-1
   2b63c:	mov	w6, #0x1                   	// #1
   2b640:	ldp	x1, x5, [x2, #24]
   2b644:	cmp	w3, w4
   2b648:	csel	x1, x1, x5, lt  // lt = tstop
   2b64c:	csel	w5, w7, w6, lt  // lt = tstop
   2b650:	cbz	x1, 2b770 <acc_set_cuda_stream@@OACC_2.0+0x768>
   2b654:	ldr	w4, [x1]
   2b658:	cmp	w3, w4
   2b65c:	b.eq	2b710 <acc_set_cuda_stream@@OACC_2.0+0x708>  // b.none
   2b660:	b.lt	2b6cc <acc_set_cuda_stream@@OACC_2.0+0x6c4>  // b.tstop
   2b664:	ldr	x4, [x1, #32]
   2b668:	cbz	x4, 2b710 <acc_set_cuda_stream@@OACC_2.0+0x708>
   2b66c:	cmp	w5, #0x1
   2b670:	b.ne	2b77c <acc_set_cuda_stream@@OACC_2.0+0x774>  // b.any
   2b674:	ldr	x5, [x4, #24]
   2b678:	str	x1, [x4, #24]
   2b67c:	str	x5, [x1, #32]
   2b680:	str	x4, [x2, #32]
   2b684:	ldr	x1, [x4, #24]
   2b688:	str	x2, [x4, #24]
   2b68c:	str	x1, [x2, #32]
   2b690:	mov	x2, x4
   2b694:	str	x4, [x0]
   2b698:	ldr	w4, [x2]
   2b69c:	cmp	w4, w3
   2b6a0:	b.ne	2b640 <acc_set_cuda_stream@@OACC_2.0+0x638>  // b.any
   2b6a4:	nop
   2b6a8:	ldp	x1, x2, [x2, #24]
   2b6ac:	cbz	x1, 2b790 <acc_set_cuda_stream@@OACC_2.0+0x788>
   2b6b0:	str	x1, [x0]
   2b6b4:	cbz	x2, 2b6c8 <acc_set_cuda_stream@@OACC_2.0+0x6c0>
   2b6b8:	mov	x0, x1
   2b6bc:	ldr	x1, [x1, #32]
   2b6c0:	cbnz	x1, 2b6b8 <acc_set_cuda_stream@@OACC_2.0+0x6b0>
   2b6c4:	str	x2, [x0, #32]
   2b6c8:	ret
   2b6cc:	ldr	x4, [x1, #24]
   2b6d0:	cbz	x4, 2b710 <acc_set_cuda_stream@@OACC_2.0+0x708>
   2b6d4:	cmn	w5, #0x1
   2b6d8:	b.ne	2b73c <acc_set_cuda_stream@@OACC_2.0+0x734>  // b.any
   2b6dc:	ldr	x5, [x4, #32]
   2b6e0:	str	x1, [x4, #32]
   2b6e4:	str	x5, [x1, #24]
   2b6e8:	str	x4, [x2, #24]
   2b6ec:	ldr	x1, [x4, #32]
   2b6f0:	str	x2, [x4, #32]
   2b6f4:	str	x1, [x2, #24]
   2b6f8:	mov	x2, x4
   2b6fc:	str	x4, [x0]
   2b700:	ldr	w4, [x2]
   2b704:	cmp	w4, w3
   2b708:	b.ne	2b640 <acc_set_cuda_stream@@OACC_2.0+0x638>  // b.any
   2b70c:	b	2b6a8 <acc_set_cuda_stream@@OACC_2.0+0x6a0>
   2b710:	cmn	w5, #0x1
   2b714:	b.eq	2b75c <acc_set_cuda_stream@@OACC_2.0+0x754>  // b.none
   2b718:	ldr	x4, [x1, #24]
   2b71c:	str	x2, [x1, #24]
   2b720:	str	x4, [x2, #32]
   2b724:	str	x1, [x0]
   2b728:	ldr	w2, [x1]
   2b72c:	cmp	w3, w2
   2b730:	b.ne	2b6c8 <acc_set_cuda_stream@@OACC_2.0+0x6c0>  // b.any
   2b734:	mov	x2, x1
   2b738:	b	2b6a8 <acc_set_cuda_stream@@OACC_2.0+0x6a0>
   2b73c:	cmp	w5, #0x0
   2b740:	b.le	2b754 <acc_set_cuda_stream@@OACC_2.0+0x74c>
   2b744:	ldr	x5, [x4, #32]
   2b748:	str	x1, [x4, #32]
   2b74c:	str	x5, [x1, #24]
   2b750:	b	2b680 <acc_set_cuda_stream@@OACC_2.0+0x678>
   2b754:	ldr	x2, [x0]
   2b758:	b	2b700 <acc_set_cuda_stream@@OACC_2.0+0x6f8>
   2b75c:	ldr	x4, [x1, #32]
   2b760:	str	x2, [x1, #32]
   2b764:	str	x4, [x2, #24]
   2b768:	str	x1, [x0]
   2b76c:	b	2b728 <acc_set_cuda_stream@@OACC_2.0+0x720>
   2b770:	ldr	x1, [x0]
   2b774:	cbnz	x1, 2b728 <acc_set_cuda_stream@@OACC_2.0+0x720>
   2b778:	ret
   2b77c:	tbz	w5, #31, 2b754 <acc_set_cuda_stream@@OACC_2.0+0x74c>
   2b780:	ldr	x5, [x4, #24]
   2b784:	str	x1, [x4, #24]
   2b788:	str	x5, [x1, #32]
   2b78c:	b	2b6e8 <acc_set_cuda_stream@@OACC_2.0+0x6e0>
   2b790:	str	x2, [x0]
   2b794:	ret
   2b798:	ldr	x2, [x0]
   2b79c:	cbz	x2, 2b84c <acc_set_cuda_stream@@OACC_2.0+0x844>
   2b7a0:	ldr	w4, [x1]
   2b7a4:	ldr	w1, [x2]
   2b7a8:	cmp	w1, w4
   2b7ac:	b.eq	2b820 <acc_set_cuda_stream@@OACC_2.0+0x818>  // b.none
   2b7b0:	cmp	w1, w4
   2b7b4:	ldp	x1, x3, [x2, #24]
   2b7b8:	b.gt	2b854 <acc_set_cuda_stream@@OACC_2.0+0x84c>
   2b7bc:	mov	w6, #0x1                   	// #1
   2b7c0:	mov	x1, x3
   2b7c4:	mov	w5, w6
   2b7c8:	mov	w7, #0x0                   	// #0
   2b7cc:	cbz	x1, 2b8c8 <acc_set_cuda_stream@@OACC_2.0+0x8c0>
   2b7d0:	ldr	w3, [x1]
   2b7d4:	cmp	w3, w4
   2b7d8:	b.eq	2b828 <acc_set_cuda_stream@@OACC_2.0+0x820>  // b.none
   2b7dc:	b.gt	2b864 <acc_set_cuda_stream@@OACC_2.0+0x85c>
   2b7e0:	ldr	x3, [x1, #32]
   2b7e4:	cbz	x3, 2b828 <acc_set_cuda_stream@@OACC_2.0+0x820>
   2b7e8:	cmp	w5, #0x1
   2b7ec:	b.ne	2b8ec <acc_set_cuda_stream@@OACC_2.0+0x8e4>  // b.any
   2b7f0:	ldr	x5, [x3, #24]
   2b7f4:	str	x1, [x3, #24]
   2b7f8:	str	x5, [x1, #32]
   2b7fc:	str	x3, [x2, #32]
   2b800:	ldr	x1, [x3, #24]
   2b804:	str	x2, [x3, #24]
   2b808:	str	x1, [x2, #32]
   2b80c:	mov	x2, x3
   2b810:	str	x3, [x0]
   2b814:	ldr	w1, [x2]
   2b818:	cmp	w1, w4
   2b81c:	b.ne	2b7b0 <acc_set_cuda_stream@@OACC_2.0+0x7a8>  // b.any
   2b820:	mov	x0, x2
   2b824:	ret
   2b828:	cmn	w5, #0x1
   2b82c:	b.eq	2b8d8 <acc_set_cuda_stream@@OACC_2.0+0x8d0>  // b.none
   2b830:	ldr	x3, [x1, #24]
   2b834:	str	x2, [x1, #24]
   2b838:	str	x3, [x2, #32]
   2b83c:	str	x1, [x0]
   2b840:	ldr	w0, [x1]
   2b844:	cmp	w4, w0
   2b848:	b.eq	2b900 <acc_set_cuda_stream@@OACC_2.0+0x8f8>  // b.none
   2b84c:	mov	x0, #0x0                   	// #0
   2b850:	ret
   2b854:	mov	w7, #0x1                   	// #1
   2b858:	mov	w6, #0x0                   	// #0
   2b85c:	mov	w5, #0xffffffff            	// #-1
   2b860:	b	2b7cc <acc_set_cuda_stream@@OACC_2.0+0x7c4>
   2b864:	ldr	x3, [x1, #24]
   2b868:	cbz	x3, 2b828 <acc_set_cuda_stream@@OACC_2.0+0x820>
   2b86c:	cmn	w5, #0x1
   2b870:	b.ne	2b8ac <acc_set_cuda_stream@@OACC_2.0+0x8a4>  // b.any
   2b874:	ldr	x5, [x3, #32]
   2b878:	str	x1, [x3, #32]
   2b87c:	str	x5, [x1, #24]
   2b880:	str	x3, [x2, #24]
   2b884:	ldr	x1, [x3, #32]
   2b888:	str	x2, [x3, #32]
   2b88c:	str	x1, [x2, #24]
   2b890:	mov	x2, x3
   2b894:	str	x3, [x0]
   2b898:	ldr	w1, [x2]
   2b89c:	cmp	w1, w4
   2b8a0:	b.ne	2b7b0 <acc_set_cuda_stream@@OACC_2.0+0x7a8>  // b.any
   2b8a4:	mov	x0, x2
   2b8a8:	b	2b824 <acc_set_cuda_stream@@OACC_2.0+0x81c>
   2b8ac:	cbz	w6, 2b8c0 <acc_set_cuda_stream@@OACC_2.0+0x8b8>
   2b8b0:	ldr	x5, [x3, #32]
   2b8b4:	str	x1, [x3, #32]
   2b8b8:	str	x5, [x1, #24]
   2b8bc:	b	2b7fc <acc_set_cuda_stream@@OACC_2.0+0x7f4>
   2b8c0:	ldr	x2, [x0]
   2b8c4:	b	2b898 <acc_set_cuda_stream@@OACC_2.0+0x890>
   2b8c8:	ldr	x1, [x0]
   2b8cc:	cbnz	x1, 2b840 <acc_set_cuda_stream@@OACC_2.0+0x838>
   2b8d0:	mov	x0, #0x0                   	// #0
   2b8d4:	b	2b850 <acc_set_cuda_stream@@OACC_2.0+0x848>
   2b8d8:	ldr	x3, [x1, #32]
   2b8dc:	str	x2, [x1, #32]
   2b8e0:	str	x3, [x2, #24]
   2b8e4:	str	x1, [x0]
   2b8e8:	b	2b840 <acc_set_cuda_stream@@OACC_2.0+0x838>
   2b8ec:	cbz	w7, 2b8c0 <acc_set_cuda_stream@@OACC_2.0+0x8b8>
   2b8f0:	ldr	x5, [x3, #24]
   2b8f4:	str	x1, [x3, #24]
   2b8f8:	str	x5, [x1, #32]
   2b8fc:	b	2b880 <acc_set_cuda_stream@@OACC_2.0+0x878>
   2b900:	mov	x2, x1
   2b904:	mov	x0, x2
   2b908:	b	2b824 <acc_set_cuda_stream@@OACC_2.0+0x81c>
   2b90c:	nop
   2b910:	stp	x29, x30, [sp, #-48]!
   2b914:	mov	x29, sp
   2b918:	stp	x19, x20, [sp, #16]
   2b91c:	ldr	x19, [x0]
   2b920:	cbz	x19, 2b958 <acc_set_cuda_stream@@OACC_2.0+0x950>
   2b924:	mov	x20, x2
   2b928:	str	x21, [sp, #32]
   2b92c:	mov	x21, x1
   2b930:	mov	x0, x19
   2b934:	mov	x1, x20
   2b938:	blr	x21
   2b93c:	ldr	x0, [x19, #24]
   2b940:	mov	x2, x20
   2b944:	mov	x1, x21
   2b948:	bl	2b0f8 <acc_set_cuda_stream@@OACC_2.0+0xf0>
   2b94c:	ldr	x19, [x19, #32]
   2b950:	cbnz	x19, 2b930 <acc_set_cuda_stream@@OACC_2.0+0x928>
   2b954:	ldr	x21, [sp, #32]
   2b958:	ldp	x19, x20, [sp, #16]
   2b95c:	ldp	x29, x30, [sp], #48
   2b960:	ret
   2b964:	nop
   2b968:	stp	x29, x30, [sp, #-96]!
   2b96c:	cmp	x1, #0x0
   2b970:	mov	x29, sp
   2b974:	stp	x25, x26, [sp, #64]
   2b978:	mov	x26, x0
   2b97c:	ldr	x25, [x2]
   2b980:	stp	x19, x20, [sp, #16]
   2b984:	mov	x19, x4
   2b988:	stp	x21, x22, [sp, #32]
   2b98c:	mov	x20, x1
   2b990:	mov	x21, x6
   2b994:	stp	x23, x24, [sp, #48]
   2b998:	cset	w23, ne  // ne = any
   2b99c:	cmp	x1, x25
   2b9a0:	str	x27, [sp, #80]
   2b9a4:	cset	w4, hi  // hi = pmore
   2b9a8:	cmp	x19, x6
   2b9ac:	mov	x24, x2
   2b9b0:	and	w4, w23, w4
   2b9b4:	ccmn	x19, #0x1, #0x4, hi  // hi = pmore
   2b9b8:	mov	x27, x5
   2b9bc:	b.eq	2ba68 <acc_set_cuda_stream@@OACC_2.0+0xa60>  // b.none
   2b9c0:	and	w3, w3, #0xff
   2b9c4:	cbnz	w3, 2ba20 <acc_set_cuda_stream@@OACC_2.0+0xa18>
   2b9c8:	mov	x22, x25
   2b9cc:	cbnz	w4, 2babc <acc_set_cuda_stream@@OACC_2.0+0xab4>
   2b9d0:	add	x22, x21, x22
   2b9d4:	str	x22, [x24]
   2b9d8:	cmp	x25, x22
   2b9dc:	b.hi	2ba5c <acc_set_cuda_stream@@OACC_2.0+0xa54>  // b.pmore
   2b9e0:	cmp	w23, #0x0
   2b9e4:	sub	x19, x19, x21
   2b9e8:	ccmp	x20, x22, #0x0, ne  // ne = any
   2b9ec:	mov	x0, x22
   2b9f0:	b.hi	2bb1c <acc_set_cuda_stream@@OACC_2.0+0xb14>  // b.pmore
   2b9f4:	add	x19, x19, x0
   2b9f8:	str	x19, [x24]
   2b9fc:	cmp	x19, x22
   2ba00:	b.cc	2ba5c <acc_set_cuda_stream@@OACC_2.0+0xa54>  // b.lo, b.ul, b.last
   2ba04:	ldp	x19, x20, [sp, #16]
   2ba08:	ldp	x21, x22, [sp, #32]
   2ba0c:	ldp	x23, x24, [sp, #48]
   2ba10:	ldp	x25, x26, [sp, #64]
   2ba14:	ldr	x27, [sp, #80]
   2ba18:	ldp	x29, x30, [sp], #96
   2ba1c:	ret
   2ba20:	sub	x19, x19, x6
   2ba24:	mov	x0, x25
   2ba28:	cbnz	w4, 2badc <acc_set_cuda_stream@@OACC_2.0+0xad4>
   2ba2c:	add	x19, x19, x0
   2ba30:	str	x19, [x24]
   2ba34:	cmp	x19, x25
   2ba38:	b.cc	2ba5c <acc_set_cuda_stream@@OACC_2.0+0xa54>  // b.lo, b.ul, b.last
   2ba3c:	cmp	w23, #0x0
   2ba40:	mov	x6, x19
   2ba44:	ccmp	x20, x19, #0x0, ne  // ne = any
   2ba48:	b.hi	2bafc <acc_set_cuda_stream@@OACC_2.0+0xaf4>  // b.pmore
   2ba4c:	add	x21, x21, x6
   2ba50:	str	x21, [x24]
   2ba54:	cmp	x21, x19
   2ba58:	b.cs	2ba04 <acc_set_cuda_stream@@OACC_2.0+0x9fc>  // b.hs, b.nlast
   2ba5c:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2ba60:	add	x0, x0, #0x810
   2ba64:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2ba68:	mov	x19, x25
   2ba6c:	cbnz	w4, 2ba9c <acc_set_cuda_stream@@OACC_2.0+0xa94>
   2ba70:	add	x19, x21, x19
   2ba74:	str	x19, [x24]
   2ba78:	cmp	x19, x25
   2ba7c:	b.cc	2ba5c <acc_set_cuda_stream@@OACC_2.0+0xa54>  // b.lo, b.ul, b.last
   2ba80:	ldp	x19, x20, [sp, #16]
   2ba84:	ldp	x21, x22, [sp, #32]
   2ba88:	ldp	x23, x24, [sp, #48]
   2ba8c:	ldp	x25, x26, [sp, #64]
   2ba90:	ldr	x27, [sp, #80]
   2ba94:	ldp	x29, x30, [sp], #96
   2ba98:	ret
   2ba9c:	sub	x2, x1, x25
   2baa0:	add	x0, x0, x25
   2baa4:	cmp	x2, x6
   2baa8:	mov	x1, x5
   2baac:	csel	x2, x2, x6, ls  // ls = plast
   2bab0:	bl	8580 <memcpy@plt>
   2bab4:	ldr	x19, [x24]
   2bab8:	b	2ba70 <acc_set_cuda_stream@@OACC_2.0+0xa68>
   2babc:	sub	x2, x1, x25
   2bac0:	add	x0, x0, x25
   2bac4:	cmp	x2, x6
   2bac8:	mov	x1, x5
   2bacc:	csel	x2, x2, x6, ls  // ls = plast
   2bad0:	bl	8580 <memcpy@plt>
   2bad4:	ldr	x22, [x24]
   2bad8:	b	2b9d0 <acc_set_cuda_stream@@OACC_2.0+0x9c8>
   2badc:	sub	x2, x1, x25
   2bae0:	add	x0, x26, x25
   2bae4:	cmp	x2, x19
   2bae8:	mov	w1, #0x20                  	// #32
   2baec:	csel	x2, x2, x19, ls  // ls = plast
   2baf0:	bl	8770 <memset@plt>
   2baf4:	ldr	x0, [x24]
   2baf8:	b	2ba2c <acc_set_cuda_stream@@OACC_2.0+0xa24>
   2bafc:	sub	x2, x20, x19
   2bb00:	mov	x1, x27
   2bb04:	cmp	x2, x21
   2bb08:	add	x0, x26, x19
   2bb0c:	csel	x2, x2, x21, ls  // ls = plast
   2bb10:	bl	8580 <memcpy@plt>
   2bb14:	ldr	x6, [x24]
   2bb18:	b	2ba4c <acc_set_cuda_stream@@OACC_2.0+0xa44>
   2bb1c:	sub	x20, x20, x22
   2bb20:	add	x0, x26, x22
   2bb24:	cmp	x20, x19
   2bb28:	mov	w1, #0x20                  	// #32
   2bb2c:	csel	x2, x20, x19, ls  // ls = plast
   2bb30:	bl	8770 <memset@plt>
   2bb34:	ldr	x0, [x24]
   2bb38:	b	2b9f4 <acc_set_cuda_stream@@OACC_2.0+0x9ec>
   2bb3c:	nop
   2bb40:	stp	x29, x30, [sp, #-96]!
   2bb44:	mov	x29, sp
   2bb48:	stp	x23, x24, [sp, #48]
   2bb4c:	mov	x24, x2
   2bb50:	stp	x19, x20, [sp, #16]
   2bb54:	mov	x19, x5
   2bb58:	and	w20, w3, #0xff
   2bb5c:	stp	x21, x22, [sp, #32]
   2bb60:	mov	x22, x1
   2bb64:	mov	x21, x0
   2bb68:	mov	x0, x6
   2bb6c:	stp	x25, x26, [sp, #64]
   2bb70:	and	w25, w4, #0xff
   2bb74:	mov	x26, x6
   2bb78:	stp	x27, x28, [sp, #80]
   2bb7c:	bl	85b0 <strlen@plt>
   2bb80:	ldr	x27, [x24]
   2bb84:	cmp	x22, #0x0
   2bb88:	cset	w28, ne  // ne = any
   2bb8c:	mov	x23, x0
   2bb90:	cmp	x22, x27
   2bb94:	cset	w4, hi  // hi = pmore
   2bb98:	cmp	x0, x19
   2bb9c:	and	w4, w28, w4
   2bba0:	ccmn	x19, #0x1, #0x4, cc  // cc = lo, ul, last
   2bba4:	b.eq	2bc8c <acc_set_cuda_stream@@OACC_2.0+0xc84>  // b.none
   2bba8:	cbz	w20, 2bc3c <acc_set_cuda_stream@@OACC_2.0+0xc34>
   2bbac:	ldrb	w0, [x26]
   2bbb0:	cmp	w0, #0x2d
   2bbb4:	b.eq	2bda0 <acc_set_cuda_stream@@OACC_2.0+0xd98>  // b.none
   2bbb8:	cmp	w0, #0x30
   2bbbc:	b.eq	2bd78 <acc_set_cuda_stream@@OACC_2.0+0xd70>  // b.none
   2bbc0:	sub	x20, x19, x23
   2bbc4:	mov	x19, x27
   2bbc8:	cbnz	w4, 2bd58 <acc_set_cuda_stream@@OACC_2.0+0xd50>
   2bbcc:	add	x20, x20, x19
   2bbd0:	str	x20, [x24]
   2bbd4:	cmp	x27, x20
   2bbd8:	b.hi	2bc80 <acc_set_cuda_stream@@OACC_2.0+0xc78>  // b.pmore
   2bbdc:	cmp	x22, x20
   2bbe0:	ldrb	w1, [x26]
   2bbe4:	cset	w0, hi  // hi = pmore
   2bbe8:	and	w28, w28, w0
   2bbec:	cmp	w1, #0x2d
   2bbf0:	b.eq	2bdcc <acc_set_cuda_stream@@OACC_2.0+0xdc4>  // b.none
   2bbf4:	cmp	w1, #0x30
   2bbf8:	b.ne	2bc08 <acc_set_cuda_stream@@OACC_2.0+0xc00>  // b.any
   2bbfc:	ldrb	w0, [x26, #1]
   2bc00:	cmp	w0, #0x78
   2bc04:	b.eq	2be74 <acc_set_cuda_stream@@OACC_2.0+0xe6c>  // b.none
   2bc08:	mov	x19, x20
   2bc0c:	cbnz	w28, 2bd18 <acc_set_cuda_stream@@OACC_2.0+0xd10>
   2bc10:	add	x19, x23, x19
   2bc14:	str	x19, [x24]
   2bc18:	cmp	x20, x19
   2bc1c:	b.hi	2bc80 <acc_set_cuda_stream@@OACC_2.0+0xc78>  // b.pmore
   2bc20:	ldp	x19, x20, [sp, #16]
   2bc24:	ldp	x21, x22, [sp, #32]
   2bc28:	ldp	x23, x24, [sp, #48]
   2bc2c:	ldp	x25, x26, [sp, #64]
   2bc30:	ldp	x27, x28, [sp, #80]
   2bc34:	ldp	x29, x30, [sp], #96
   2bc38:	ret
   2bc3c:	cbz	w25, 2bcc0 <acc_set_cuda_stream@@OACC_2.0+0xcb8>
   2bc40:	sub	x20, x19, x0
   2bc44:	mov	x19, x27
   2bc48:	cbnz	w4, 2be14 <acc_set_cuda_stream@@OACC_2.0+0xe0c>
   2bc4c:	add	x20, x20, x19
   2bc50:	str	x20, [x24]
   2bc54:	cmp	x27, x20
   2bc58:	b.hi	2bc80 <acc_set_cuda_stream@@OACC_2.0+0xc78>  // b.pmore
   2bc5c:	cmp	w28, #0x0
   2bc60:	mov	x19, x20
   2bc64:	ccmp	x22, x20, #0x0, ne  // ne = any
   2bc68:	b.hi	2be54 <acc_set_cuda_stream@@OACC_2.0+0xe4c>  // b.pmore
   2bc6c:	add	x19, x23, x19
   2bc70:	str	x19, [x24]
   2bc74:	cmp	x19, x20
   2bc78:	b.cs	2bc20 <acc_set_cuda_stream@@OACC_2.0+0xc18>  // b.hs, b.nlast
   2bc7c:	nop
   2bc80:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2bc84:	add	x0, x0, #0x810
   2bc88:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2bc8c:	mov	x19, x27
   2bc90:	cbnz	w4, 2bd38 <acc_set_cuda_stream@@OACC_2.0+0xd30>
   2bc94:	add	x19, x23, x19
   2bc98:	str	x19, [x24]
   2bc9c:	cmp	x19, x27
   2bca0:	b.cc	2bc80 <acc_set_cuda_stream@@OACC_2.0+0xc78>  // b.lo, b.ul, b.last
   2bca4:	ldp	x19, x20, [sp, #16]
   2bca8:	ldp	x21, x22, [sp, #32]
   2bcac:	ldp	x23, x24, [sp, #48]
   2bcb0:	ldp	x25, x26, [sp, #64]
   2bcb4:	ldp	x27, x28, [sp, #80]
   2bcb8:	ldp	x29, x30, [sp], #96
   2bcbc:	ret
   2bcc0:	mov	x20, x27
   2bcc4:	cbnz	w4, 2bdf4 <acc_set_cuda_stream@@OACC_2.0+0xdec>
   2bcc8:	add	x20, x23, x20
   2bccc:	str	x20, [x24]
   2bcd0:	cmp	x27, x20
   2bcd4:	b.hi	2bc80 <acc_set_cuda_stream@@OACC_2.0+0xc78>  // b.pmore
   2bcd8:	cmp	w28, #0x0
   2bcdc:	sub	x19, x19, x23
   2bce0:	ccmp	x22, x20, #0x0, ne  // ne = any
   2bce4:	mov	x0, x20
   2bce8:	b.hi	2be34 <acc_set_cuda_stream@@OACC_2.0+0xe2c>  // b.pmore
   2bcec:	add	x19, x19, x0
   2bcf0:	str	x19, [x24]
   2bcf4:	cmp	x19, x20
   2bcf8:	b.cc	2bc80 <acc_set_cuda_stream@@OACC_2.0+0xc78>  // b.lo, b.ul, b.last
   2bcfc:	ldp	x19, x20, [sp, #16]
   2bd00:	ldp	x21, x22, [sp, #32]
   2bd04:	ldp	x23, x24, [sp, #48]
   2bd08:	ldp	x25, x26, [sp, #64]
   2bd0c:	ldp	x27, x28, [sp, #80]
   2bd10:	ldp	x29, x30, [sp], #96
   2bd14:	ret
   2bd18:	sub	x2, x22, x20
   2bd1c:	mov	x1, x26
   2bd20:	cmp	x2, x23
   2bd24:	add	x0, x21, x20
   2bd28:	csel	x2, x2, x23, ls  // ls = plast
   2bd2c:	bl	8580 <memcpy@plt>
   2bd30:	ldr	x19, [x24]
   2bd34:	b	2bc10 <acc_set_cuda_stream@@OACC_2.0+0xc08>
   2bd38:	sub	x2, x22, x27
   2bd3c:	mov	x1, x26
   2bd40:	cmp	x2, x0
   2bd44:	add	x0, x21, x27
   2bd48:	csel	x2, x2, x23, ls  // ls = plast
   2bd4c:	bl	8580 <memcpy@plt>
   2bd50:	ldr	x19, [x24]
   2bd54:	b	2bc94 <acc_set_cuda_stream@@OACC_2.0+0xc8c>
   2bd58:	sub	x2, x22, x27
   2bd5c:	add	x0, x21, x27
   2bd60:	cmp	x2, x20
   2bd64:	mov	w1, #0x30                  	// #48
   2bd68:	csel	x2, x2, x20, ls  // ls = plast
   2bd6c:	bl	8770 <memset@plt>
   2bd70:	ldr	x19, [x24]
   2bd74:	b	2bbcc <acc_set_cuda_stream@@OACC_2.0+0xbc4>
   2bd78:	ldrb	w0, [x26, #1]
   2bd7c:	cmp	w0, #0x78
   2bd80:	b.ne	2bbc0 <acc_set_cuda_stream@@OACC_2.0+0xbb8>  // b.any
   2bd84:	mov	x0, x27
   2bd88:	cbnz	w4, 2beac <acc_set_cuda_stream@@OACC_2.0+0xea4>
   2bd8c:	add	x0, x0, #0x2
   2bd90:	str	x0, [x24]
   2bd94:	cmp	x0, x27
   2bd98:	b.cs	2bdb8 <acc_set_cuda_stream@@OACC_2.0+0xdb0>  // b.hs, b.nlast
   2bd9c:	b	2bc80 <acc_set_cuda_stream@@OACC_2.0+0xc78>
   2bda0:	mov	x1, x27
   2bda4:	cbnz	w4, 2bea0 <acc_set_cuda_stream@@OACC_2.0+0xe98>
   2bda8:	add	x0, x1, #0x1
   2bdac:	str	x0, [x24]
   2bdb0:	cmp	x0, x27
   2bdb4:	b.cc	2bc80 <acc_set_cuda_stream@@OACC_2.0+0xc78>  // b.lo, b.ul, b.last
   2bdb8:	cmp	x22, x0
   2bdbc:	mov	x27, x0
   2bdc0:	cset	w4, hi  // hi = pmore
   2bdc4:	and	w4, w28, w4
   2bdc8:	b	2bbc0 <acc_set_cuda_stream@@OACC_2.0+0xbb8>
   2bdcc:	sub	x23, x23, #0x1
   2bdd0:	mov	x0, x20
   2bdd4:	sub	x2, x22, x20
   2bdd8:	add	x1, x26, #0x1
   2bddc:	cbnz	w28, 2be88 <acc_set_cuda_stream@@OACC_2.0+0xe80>
   2bde0:	add	x0, x23, x0
   2bde4:	str	x0, [x24]
   2bde8:	cmp	x20, x0
   2bdec:	b.ls	2bc20 <acc_set_cuda_stream@@OACC_2.0+0xc18>  // b.plast
   2bdf0:	b	2bc80 <acc_set_cuda_stream@@OACC_2.0+0xc78>
   2bdf4:	sub	x2, x22, x27
   2bdf8:	mov	x1, x26
   2bdfc:	cmp	x2, x0
   2be00:	add	x0, x21, x27
   2be04:	csel	x2, x2, x23, ls  // ls = plast
   2be08:	bl	8580 <memcpy@plt>
   2be0c:	ldr	x20, [x24]
   2be10:	b	2bcc8 <acc_set_cuda_stream@@OACC_2.0+0xcc0>
   2be14:	sub	x2, x22, x27
   2be18:	add	x0, x21, x27
   2be1c:	cmp	x2, x20
   2be20:	mov	w1, #0x20                  	// #32
   2be24:	csel	x2, x2, x20, ls  // ls = plast
   2be28:	bl	8770 <memset@plt>
   2be2c:	ldr	x19, [x24]
   2be30:	b	2bc4c <acc_set_cuda_stream@@OACC_2.0+0xc44>
   2be34:	sub	x2, x22, x20
   2be38:	add	x0, x21, x20
   2be3c:	cmp	x2, x19
   2be40:	mov	w1, #0x20                  	// #32
   2be44:	csel	x2, x2, x19, ls  // ls = plast
   2be48:	bl	8770 <memset@plt>
   2be4c:	ldr	x0, [x24]
   2be50:	b	2bcec <acc_set_cuda_stream@@OACC_2.0+0xce4>
   2be54:	sub	x2, x22, x20
   2be58:	mov	x1, x26
   2be5c:	cmp	x2, x23
   2be60:	add	x0, x21, x20
   2be64:	csel	x2, x2, x23, ls  // ls = plast
   2be68:	bl	8580 <memcpy@plt>
   2be6c:	ldr	x19, [x24]
   2be70:	b	2bc6c <acc_set_cuda_stream@@OACC_2.0+0xc64>
   2be74:	sub	x23, x23, #0x2
   2be78:	mov	x0, x20
   2be7c:	cbz	w28, 2bde0 <acc_set_cuda_stream@@OACC_2.0+0xdd8>
   2be80:	sub	x2, x22, x20
   2be84:	add	x1, x26, #0x2
   2be88:	cmp	x2, x23
   2be8c:	add	x0, x21, x20
   2be90:	csel	x2, x2, x23, ls  // ls = plast
   2be94:	bl	8580 <memcpy@plt>
   2be98:	ldr	x0, [x24]
   2be9c:	b	2bde0 <acc_set_cuda_stream@@OACC_2.0+0xdd8>
   2bea0:	strb	w0, [x21, x27]
   2bea4:	ldr	x1, [x24]
   2bea8:	b	2bda8 <acc_set_cuda_stream@@OACC_2.0+0xda0>
   2beac:	sub	x0, x22, x27
   2beb0:	mov	x2, #0x2                   	// #2
   2beb4:	cmp	x0, x2
   2beb8:	mov	x1, x26
   2bebc:	csel	x2, x0, x2, ls  // ls = plast
   2bec0:	add	x0, x21, x27
   2bec4:	bl	8580 <memcpy@plt>
   2bec8:	ldr	x0, [x24]
   2becc:	b	2bd8c <acc_set_cuda_stream@@OACC_2.0+0xd84>
   2bed0:	adrp	x3, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   2bed4:	mov	x2, x1
   2bed8:	mov	x1, #0x1                   	// #1
   2bedc:	ldr	x3, [x3, #4040]
   2bee0:	ldr	x3, [x3]
   2bee4:	b	8980 <fwrite@plt>
   2bee8:	stp	x29, x30, [sp, #-64]!
   2beec:	mov	x29, sp
   2bef0:	stp	x21, x22, [sp, #32]
   2bef4:	adrp	x21, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   2bef8:	stp	x19, x20, [sp, #16]
   2befc:	mov	x19, x1
   2bf00:	mov	x20, x0
   2bf04:	ldr	x1, [x21, #1608]
   2bf08:	cmp	x1, x19
   2bf0c:	b.hi	2bf78 <acc_set_cuda_stream@@OACC_2.0+0xf70>  // b.pmore
   2bf10:	str	x23, [sp, #48]
   2bf14:	add	x22, x19, #0x1
   2bf18:	cbnz	x1, 2bf60 <acc_set_cuda_stream@@OACC_2.0+0xf58>
   2bf1c:	mov	x0, x22
   2bf20:	bl	b2f8 <fprintf@plt+0x2838>
   2bf24:	mov	x3, x0
   2bf28:	adrp	x23, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   2bf2c:	mov	x1, x20
   2bf30:	mov	x2, x19
   2bf34:	mov	x0, x3
   2bf38:	bl	8580 <memcpy@plt>
   2bf3c:	mov	x3, x0
   2bf40:	str	x0, [x23, #816]
   2bf44:	str	x22, [x21, #1608]
   2bf48:	ldr	x23, [sp, #48]
   2bf4c:	strb	wzr, [x3, x19]
   2bf50:	ldp	x19, x20, [sp, #16]
   2bf54:	ldp	x21, x22, [sp, #32]
   2bf58:	ldp	x29, x30, [sp], #64
   2bf5c:	ret
   2bf60:	adrp	x23, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   2bf64:	mov	x1, x22
   2bf68:	ldr	x0, [x23, #816]
   2bf6c:	bl	b370 <fprintf@plt+0x28b0>
   2bf70:	mov	x3, x0
   2bf74:	b	2bf2c <acc_set_cuda_stream@@OACC_2.0+0xf24>
   2bf78:	adrp	x21, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   2bf7c:	mov	x1, x0
   2bf80:	mov	x2, x19
   2bf84:	ldr	x0, [x21, #816]
   2bf88:	bl	8580 <memcpy@plt>
   2bf8c:	ldr	x3, [x21, #816]
   2bf90:	strb	wzr, [x3, x19]
   2bf94:	ldp	x19, x20, [sp, #16]
   2bf98:	ldp	x21, x22, [sp, #32]
   2bf9c:	ldp	x29, x30, [sp], #64
   2bfa0:	ret
   2bfa4:	nop

000000000002bfa8 <omp_set_affinity_format@@OMP_5.0>:
   2bfa8:	stp	x29, x30, [sp, #-64]!
   2bfac:	mov	x29, sp
   2bfb0:	stp	x21, x22, [sp, #32]
   2bfb4:	adrp	x22, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   2bfb8:	stp	x19, x20, [sp, #16]
   2bfbc:	mov	x20, x0
   2bfc0:	bl	85b0 <strlen@plt>
   2bfc4:	ldr	x1, [x22, #1608]
   2bfc8:	mov	x19, x0
   2bfcc:	cmp	x0, x1
   2bfd0:	b.cc	2c03c <omp_set_affinity_format@@OMP_5.0+0x94>  // b.lo, b.ul, b.last
   2bfd4:	str	x23, [sp, #48]
   2bfd8:	add	x21, x0, #0x1
   2bfdc:	cbnz	x1, 2c024 <omp_set_affinity_format@@OMP_5.0+0x7c>
   2bfe0:	mov	x0, x21
   2bfe4:	bl	b2f8 <fprintf@plt+0x2838>
   2bfe8:	mov	x3, x0
   2bfec:	adrp	x23, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   2bff0:	mov	x1, x20
   2bff4:	mov	x2, x19
   2bff8:	mov	x0, x3
   2bffc:	bl	8580 <memcpy@plt>
   2c000:	mov	x3, x0
   2c004:	str	x0, [x23, #816]
   2c008:	str	x21, [x22, #1608]
   2c00c:	ldr	x23, [sp, #48]
   2c010:	strb	wzr, [x3, x19]
   2c014:	ldp	x19, x20, [sp, #16]
   2c018:	ldp	x21, x22, [sp, #32]
   2c01c:	ldp	x29, x30, [sp], #64
   2c020:	ret
   2c024:	adrp	x23, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   2c028:	mov	x1, x21
   2c02c:	ldr	x0, [x23, #816]
   2c030:	bl	b370 <fprintf@plt+0x28b0>
   2c034:	mov	x3, x0
   2c038:	b	2bff0 <omp_set_affinity_format@@OMP_5.0+0x48>
   2c03c:	adrp	x21, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   2c040:	mov	x2, x0
   2c044:	mov	x1, x20
   2c048:	ldr	x0, [x21, #816]
   2c04c:	bl	8580 <memcpy@plt>
   2c050:	ldr	x3, [x21, #816]
   2c054:	strb	wzr, [x3, x19]
   2c058:	ldp	x19, x20, [sp, #16]
   2c05c:	ldp	x21, x22, [sp, #32]
   2c060:	ldp	x29, x30, [sp], #64
   2c064:	ret

000000000002c068 <omp_get_affinity_format@@OMP_5.0>:
   2c068:	stp	x29, x30, [sp, #-48]!
   2c06c:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   2c070:	mov	x29, sp
   2c074:	stp	x21, x22, [sp, #32]
   2c078:	mov	x21, x0
   2c07c:	ldr	x22, [x2, #816]
   2c080:	stp	x19, x20, [sp, #16]
   2c084:	mov	x19, x1
   2c088:	mov	x0, x22
   2c08c:	bl	85b0 <strlen@plt>
   2c090:	mov	x20, x0
   2c094:	cbz	x19, 2c0b0 <omp_get_affinity_format@@OMP_5.0+0x48>
   2c098:	cmp	x0, x19
   2c09c:	b.cs	2c0c4 <omp_get_affinity_format@@OMP_5.0+0x5c>  // b.hs, b.nlast
   2c0a0:	mov	x1, x22
   2c0a4:	mov	x0, x21
   2c0a8:	add	x2, x20, #0x1
   2c0ac:	bl	8580 <memcpy@plt>
   2c0b0:	mov	x0, x20
   2c0b4:	ldp	x19, x20, [sp, #16]
   2c0b8:	ldp	x21, x22, [sp, #32]
   2c0bc:	ldp	x29, x30, [sp], #48
   2c0c0:	ret
   2c0c4:	sub	x19, x19, #0x1
   2c0c8:	mov	x1, x22
   2c0cc:	mov	x2, x19
   2c0d0:	mov	x0, x21
   2c0d4:	bl	8580 <memcpy@plt>
   2c0d8:	strb	wzr, [x21, x19]
   2c0dc:	mov	x0, x20
   2c0e0:	ldp	x19, x20, [sp, #16]
   2c0e4:	ldp	x21, x22, [sp, #32]
   2c0e8:	ldp	x29, x30, [sp], #48
   2c0ec:	ret
   2c0f0:	stp	x29, x30, [sp, #-48]!
   2c0f4:	cmp	x1, #0x0
   2c0f8:	mov	x29, sp
   2c0fc:	str	x21, [sp, #32]
   2c100:	ldr	x21, [x2]
   2c104:	stp	x19, x20, [sp, #16]
   2c108:	mov	x19, x4
   2c10c:	mov	x20, x2
   2c110:	ccmp	x21, x1, #0x2, ne  // ne = any
   2c114:	mov	x4, x21
   2c118:	b.cc	2c13c <omp_get_affinity_format@@OMP_5.0+0xd4>  // b.lo, b.ul, b.last
   2c11c:	add	x4, x19, x4
   2c120:	str	x4, [x20]
   2c124:	cmp	x4, x21
   2c128:	b.cc	2c168 <omp_get_affinity_format@@OMP_5.0+0x100>  // b.lo, b.ul, b.last
   2c12c:	ldp	x19, x20, [sp, #16]
   2c130:	ldr	x21, [sp, #32]
   2c134:	ldp	x29, x30, [sp], #48
   2c138:	ret
   2c13c:	sub	x5, x1, x21
   2c140:	add	x0, x0, x21
   2c144:	cmp	x5, x19
   2c148:	mov	x1, x3
   2c14c:	csel	x2, x5, x19, ls  // ls = plast
   2c150:	bl	8580 <memcpy@plt>
   2c154:	ldr	x4, [x20]
   2c158:	add	x4, x19, x4
   2c15c:	str	x4, [x20]
   2c160:	cmp	x4, x21
   2c164:	b.cs	2c12c <omp_get_affinity_format@@OMP_5.0+0xc4>  // b.hs, b.nlast
   2c168:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2c16c:	add	x0, x0, #0x810
   2c170:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2c174:	nop
   2c178:	stp	x29, x30, [sp, #-416]!
   2c17c:	mov	x29, sp
   2c180:	stp	x19, x20, [sp, #16]
   2c184:	adrp	x20, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   2c188:	add	x20, x20, #0x470
   2c18c:	stp	x21, x22, [sp, #32]
   2c190:	mov	x21, x1
   2c194:	mov	x22, x2
   2c198:	stp	x25, x26, [sp, #64]
   2c19c:	mov	x26, x0
   2c1a0:	add	x0, x20, #0x14
   2c1a4:	stp	x23, x24, [sp, #48]
   2c1a8:	stp	x27, x28, [sp, #80]
   2c1ac:	adrp	x27, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2c1b0:	stp	x4, x0, [sp, #112]
   2c1b4:	add	x0, x27, #0x7e8
   2c1b8:	str	x0, [sp, #104]
   2c1bc:	str	x3, [sp, #128]
   2c1c0:	str	w5, [sp, #140]
   2c1c4:	str	xzr, [sp, #152]
   2c1c8:	mov	x0, x22
   2c1cc:	mov	w1, #0x25                  	// #37
   2c1d0:	bl	8950 <strchr@plt>
   2c1d4:	mov	x19, x0
   2c1d8:	cbz	x0, 2c2d8 <omp_get_affinity_format@@OMP_5.0+0x270>
   2c1dc:	nop
   2c1e0:	cmp	x22, x19
   2c1e4:	b.eq	2c210 <omp_get_affinity_format@@OMP_5.0+0x1a8>  // b.none
   2c1e8:	ldr	x24, [sp, #152]
   2c1ec:	cmp	x21, #0x0
   2c1f0:	sub	x23, x19, x22
   2c1f4:	ccmp	x21, x24, #0x0, ne  // ne = any
   2c1f8:	mov	x0, x24
   2c1fc:	b.hi	2c6b4 <omp_get_affinity_format@@OMP_5.0+0x64c>  // b.pmore
   2c200:	add	x0, x23, x0
   2c204:	str	x0, [sp, #152]
   2c208:	cmp	x24, x0
   2c20c:	b.hi	2c6e0 <omp_get_affinity_format@@OMP_5.0+0x678>  // b.pmore
   2c210:	ldrb	w0, [x19]
   2c214:	cbz	w0, 2c808 <omp_get_affinity_format@@OMP_5.0+0x7a0>
   2c218:	ldrb	w1, [x19, #1]
   2c21c:	cmp	w1, #0x25
   2c220:	b.eq	2c6ec <omp_get_affinity_format@@OMP_5.0+0x684>  // b.none
   2c224:	cmp	w1, #0x30
   2c228:	b.eq	2c490 <omp_get_affinity_format@@OMP_5.0+0x428>  // b.none
   2c22c:	add	x19, x19, #0x1
   2c230:	cmp	w1, #0x2e
   2c234:	b.eq	2c6ac <omp_get_affinity_format@@OMP_5.0+0x644>  // b.none
   2c238:	sub	w0, w1, #0x31
   2c23c:	and	w0, w0, #0xff
   2c240:	cmp	w0, #0x8
   2c244:	b.ls	2c938 <omp_get_affinity_format@@OMP_5.0+0x8d0>  // b.plast
   2c248:	cmp	w1, #0x7b
   2c24c:	mov	w23, #0x0                   	// #0
   2c250:	mov	w24, #0x0                   	// #0
   2c254:	mov	x22, #0xffffffffffffffff    	// #-1
   2c258:	b.eq	2c4e0 <omp_get_affinity_format@@OMP_5.0+0x478>  // b.none
   2c25c:	cmp	w1, #0x54
   2c260:	b.eq	2c714 <omp_get_affinity_format@@OMP_5.0+0x6ac>  // b.none
   2c264:	b.hi	2c358 <omp_get_affinity_format@@OMP_5.0+0x2f0>  // b.pmore
   2c268:	cmp	w1, #0x4c
   2c26c:	b.eq	2c72c <omp_get_affinity_format@@OMP_5.0+0x6c4>  // b.none
   2c270:	b.ls	2c2fc <omp_get_affinity_format@@OMP_5.0+0x294>  // b.plast
   2c274:	cmp	w1, #0x4e
   2c278:	b.ne	2c2e8 <omp_get_affinity_format@@OMP_5.0+0x280>  // b.any
   2c27c:	ldr	x0, [sp, #112]
   2c280:	mov	w2, #0x1                   	// #1
   2c284:	ldr	x0, [x0]
   2c288:	cbz	x0, 2c290 <omp_get_affinity_format@@OMP_5.0+0x228>
   2c28c:	ldr	w2, [x0]
   2c290:	ldr	x1, [sp, #104]
   2c294:	add	x25, sp, #0xa0
   2c298:	mov	x0, x25
   2c29c:	bl	8620 <sprintf@plt>
   2c2a0:	mov	x6, x25
   2c2a4:	mov	x5, x22
   2c2a8:	mov	w4, w24
   2c2ac:	mov	w3, w23
   2c2b0:	add	x2, sp, #0x98
   2c2b4:	mov	x1, x21
   2c2b8:	mov	x0, x26
   2c2bc:	bl	2bb40 <acc_set_cuda_stream@@OACC_2.0+0xb38>
   2c2c0:	add	x22, x19, #0x1
   2c2c4:	mov	x0, x22
   2c2c8:	mov	w1, #0x25                  	// #37
   2c2cc:	bl	8950 <strchr@plt>
   2c2d0:	mov	x19, x0
   2c2d4:	cbnz	x0, 2c1e0 <omp_get_affinity_format@@OMP_5.0+0x178>
   2c2d8:	mov	x0, x22
   2c2dc:	bl	85b0 <strlen@plt>
   2c2e0:	add	x19, x22, x0
   2c2e4:	b	2c1e0 <omp_get_affinity_format@@OMP_5.0+0x178>
   2c2e8:	cmp	w1, #0x50
   2c2ec:	b.ne	2c920 <omp_get_affinity_format@@OMP_5.0+0x8b8>  // b.any
   2c2f0:	bl	86f0 <getpid@plt>
   2c2f4:	mov	w2, w0
   2c2f8:	b	2c290 <omp_get_affinity_format@@OMP_5.0+0x228>
   2c2fc:	cmp	w1, #0x41
   2c300:	b.ne	2c378 <omp_get_affinity_format@@OMP_5.0+0x310>  // b.any
   2c304:	ldr	w0, [sp, #140]
   2c308:	cmn	x22, #0x1
   2c30c:	sub	w23, w0, #0x1
   2c310:	b.eq	2c33c <omp_get_affinity_format@@OMP_5.0+0x2d4>  // b.none
   2c314:	mov	w3, w23
   2c318:	cbz	w24, 2c7ac <omp_get_affinity_format@@OMP_5.0+0x744>
   2c31c:	mov	x0, #0x0                   	// #0
   2c320:	add	x2, sp, #0xa0
   2c324:	mov	x1, #0x0                   	// #0
   2c328:	str	xzr, [sp, #160]
   2c32c:	bl	1f2b0 <omp_get_place_proc_ids@@OMP_4.5+0xf0>
   2c330:	ldr	x0, [sp, #160]
   2c334:	cmp	x0, x22
   2c338:	b.cc	2c828 <omp_get_affinity_format@@OMP_5.0+0x7c0>  // b.lo, b.ul, b.last
   2c33c:	mov	w3, w23
   2c340:	add	x2, sp, #0x98
   2c344:	mov	x1, x21
   2c348:	mov	x0, x26
   2c34c:	bl	1f2b0 <omp_get_place_proc_ids@@OMP_4.5+0xf0>
   2c350:	add	x22, x19, #0x1
   2c354:	b	2c2c4 <omp_get_affinity_format@@OMP_5.0+0x25c>
   2c358:	cmp	w1, #0x6e
   2c35c:	b.eq	2c720 <omp_get_affinity_format@@OMP_5.0+0x6b8>  // b.none
   2c360:	b.ls	2c43c <omp_get_affinity_format@@OMP_5.0+0x3d4>  // b.plast
   2c364:	cmp	w1, #0x74
   2c368:	b.ne	2c920 <omp_get_affinity_format@@OMP_5.0+0x8b8>  // b.any
   2c36c:	bl	8a00 <omp_get_team_num@plt>
   2c370:	mov	w2, w0
   2c374:	b	2c290 <omp_get_affinity_format@@OMP_5.0+0x228>
   2c378:	cmp	w1, #0x48
   2c37c:	b.ne	2c920 <omp_get_affinity_format@@OMP_5.0+0x8b8>  // b.any
   2c380:	add	x23, sp, #0xa0
   2c384:	mov	x28, #0x100                 	// #256
   2c388:	mov	x25, x23
   2c38c:	sub	x27, x28, #0x1
   2c390:	mov	x0, x25
   2c394:	mov	x1, x27
   2c398:	strb	wzr, [x25, x27]
   2c39c:	bl	89f0 <gethostname@plt>
   2c3a0:	cbnz	w0, 2c3b8 <omp_get_affinity_format@@OMP_5.0+0x350>
   2c3a4:	mov	x0, x25
   2c3a8:	bl	85b0 <strlen@plt>
   2c3ac:	cmp	x27, x0
   2c3b0:	b.hi	2c404 <omp_get_affinity_format@@OMP_5.0+0x39c>  // b.pmore
   2c3b4:	nop
   2c3b8:	cmp	x28, #0x100, lsl #12
   2c3bc:	b.eq	2c738 <omp_get_affinity_format@@OMP_5.0+0x6d0>  // b.none
   2c3c0:	lsl	x28, x28, #1
   2c3c4:	cmp	x28, #0x200
   2c3c8:	b.eq	2c480 <omp_get_affinity_format@@OMP_5.0+0x418>  // b.none
   2c3cc:	mov	x0, x25
   2c3d0:	mov	x1, x28
   2c3d4:	sub	x27, x28, #0x1
   2c3d8:	bl	b370 <fprintf@plt+0x28b0>
   2c3dc:	mov	x25, x0
   2c3e0:	mov	x1, x27
   2c3e4:	mov	x0, x25
   2c3e8:	strb	wzr, [x25, x27]
   2c3ec:	bl	89f0 <gethostname@plt>
   2c3f0:	cbnz	w0, 2c3b8 <omp_get_affinity_format@@OMP_5.0+0x350>
   2c3f4:	mov	x0, x25
   2c3f8:	bl	85b0 <strlen@plt>
   2c3fc:	cmp	x27, x0
   2c400:	b.ls	2c3b8 <omp_get_affinity_format@@OMP_5.0+0x350>  // b.plast
   2c404:	mov	x6, x0
   2c408:	mov	x4, x22
   2c40c:	mov	w3, w24
   2c410:	mov	x5, x25
   2c414:	add	x2, sp, #0x98
   2c418:	mov	x1, x21
   2c41c:	mov	x0, x26
   2c420:	bl	2b968 <acc_set_cuda_stream@@OACC_2.0+0x960>
   2c424:	cmp	x25, x23
   2c428:	b.eq	2c2c0 <omp_get_affinity_format@@OMP_5.0+0x258>  // b.none
   2c42c:	mov	x0, x25
   2c430:	add	x22, x19, #0x1
   2c434:	bl	88b0 <free@plt>
   2c438:	b	2c2c4 <omp_get_affinity_format@@OMP_5.0+0x25c>
   2c43c:	cmp	w1, #0x61
   2c440:	b.ne	2c45c <omp_get_affinity_format@@OMP_5.0+0x3f4>  // b.any
   2c444:	ldr	x0, [sp, #112]
   2c448:	mov	w2, #0xffffffff            	// #-1
   2c44c:	ldr	x0, [x0]
   2c450:	cbz	x0, 2c290 <omp_get_affinity_format@@OMP_5.0+0x228>
   2c454:	ldr	w2, [x0, #32]
   2c458:	b	2c290 <omp_get_affinity_format@@OMP_5.0+0x228>
   2c45c:	cmp	w1, #0x69
   2c460:	b.ne	2c920 <omp_get_affinity_format@@OMP_5.0+0x8b8>  // b.any
   2c464:	ldr	x2, [sp, #128]
   2c468:	add	x25, sp, #0xa0
   2c46c:	mov	x0, x25
   2c470:	adrp	x1, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2c474:	add	x1, x1, #0x930
   2c478:	bl	8620 <sprintf@plt>
   2c47c:	b	2c2a0 <omp_get_affinity_format@@OMP_5.0+0x238>
   2c480:	mov	x0, x28
   2c484:	bl	b2f8 <fprintf@plt+0x2838>
   2c488:	mov	x25, x0
   2c48c:	b	2c38c <omp_get_affinity_format@@OMP_5.0+0x324>
   2c490:	ldrb	w0, [x19, #2]
   2c494:	add	x19, x19, #0x2
   2c498:	cmp	w0, #0x2e
   2c49c:	b.ne	2c948 <omp_get_affinity_format@@OMP_5.0+0x8e0>  // b.any
   2c4a0:	mov	w23, #0x1                   	// #1
   2c4a4:	ldrb	w1, [x19, #1]
   2c4a8:	add	x0, x19, #0x1
   2c4ac:	sub	w1, w1, #0x31
   2c4b0:	and	w1, w1, #0xff
   2c4b4:	cmp	w1, #0x8
   2c4b8:	b.hi	2c92c <omp_get_affinity_format@@OMP_5.0+0x8c4>  // b.pmore
   2c4bc:	mov	w24, #0x1                   	// #1
   2c4c0:	add	x1, sp, #0xa0
   2c4c4:	mov	w2, #0xa                   	// #10
   2c4c8:	bl	85a0 <strtoul@plt>
   2c4cc:	mov	x22, x0
   2c4d0:	ldr	x19, [sp, #160]
   2c4d4:	ldrb	w1, [x19]
   2c4d8:	cmp	w1, #0x7b
   2c4dc:	b.ne	2c25c <omp_get_affinity_format@@OMP_5.0+0x1f4>  // b.any
   2c4e0:	ldrb	w28, [x20, #18]
   2c4e4:	add	x25, x19, #0x1
   2c4e8:	mov	x0, x25
   2c4ec:	mov	x1, x20
   2c4f0:	mov	x2, x28
   2c4f4:	bl	8740 <strncmp@plt>
   2c4f8:	cbnz	w0, 2c510 <omp_get_affinity_format@@OMP_5.0+0x4a8>
   2c4fc:	add	x2, x28, #0x1
   2c500:	add	x3, x19, x2
   2c504:	ldrb	w1, [x19, x2]
   2c508:	cmp	w1, #0x7d
   2c50c:	b.eq	2c878 <omp_get_affinity_format@@OMP_5.0+0x810>  // b.none
   2c510:	ldr	x1, [sp, #120]
   2c514:	mov	x0, x25
   2c518:	ldrb	w28, [x20, #38]
   2c51c:	mov	x2, x28
   2c520:	bl	8740 <strncmp@plt>
   2c524:	cbnz	w0, 2c53c <omp_get_affinity_format@@OMP_5.0+0x4d4>
   2c528:	add	x2, x28, #0x1
   2c52c:	add	x1, x19, x2
   2c530:	ldrb	w0, [x19, x2]
   2c534:	cmp	w0, #0x7d
   2c538:	b.eq	2c8b8 <omp_get_affinity_format@@OMP_5.0+0x850>  // b.none
   2c53c:	ldrb	w28, [x20, #58]
   2c540:	add	x1, x20, #0x28
   2c544:	mov	x0, x25
   2c548:	mov	x2, x28
   2c54c:	bl	8740 <strncmp@plt>
   2c550:	cbnz	w0, 2c568 <omp_get_affinity_format@@OMP_5.0+0x500>
   2c554:	add	x2, x28, #0x1
   2c558:	add	x1, x19, x2
   2c55c:	ldrb	w0, [x19, x2]
   2c560:	cmp	w0, #0x7d
   2c564:	b.eq	2c8ac <omp_get_affinity_format@@OMP_5.0+0x844>  // b.none
   2c568:	ldrb	w28, [x20, #78]
   2c56c:	add	x1, x20, #0x3c
   2c570:	mov	x0, x25
   2c574:	mov	x2, x28
   2c578:	bl	8740 <strncmp@plt>
   2c57c:	cbnz	w0, 2c594 <omp_get_affinity_format@@OMP_5.0+0x52c>
   2c580:	add	x2, x28, #0x1
   2c584:	add	x1, x19, x2
   2c588:	ldrb	w0, [x19, x2]
   2c58c:	cmp	w0, #0x7d
   2c590:	b.eq	2c8d0 <omp_get_affinity_format@@OMP_5.0+0x868>  // b.none
   2c594:	ldrb	w28, [x20, #98]
   2c598:	add	x1, x20, #0x50
   2c59c:	mov	x0, x25
   2c5a0:	mov	x2, x28
   2c5a4:	bl	8740 <strncmp@plt>
   2c5a8:	cbnz	w0, 2c5c0 <omp_get_affinity_format@@OMP_5.0+0x558>
   2c5ac:	add	x2, x28, #0x1
   2c5b0:	add	x1, x19, x2
   2c5b4:	ldrb	w0, [x19, x2]
   2c5b8:	cmp	w0, #0x7d
   2c5bc:	b.eq	2c8c4 <omp_get_affinity_format@@OMP_5.0+0x85c>  // b.none
   2c5c0:	ldrb	w28, [x20, #118]
   2c5c4:	add	x1, x20, #0x64
   2c5c8:	mov	x0, x25
   2c5cc:	mov	x2, x28
   2c5d0:	bl	8740 <strncmp@plt>
   2c5d4:	cbnz	w0, 2c5ec <omp_get_affinity_format@@OMP_5.0+0x584>
   2c5d8:	add	x2, x28, #0x1
   2c5dc:	add	x1, x19, x2
   2c5e0:	ldrb	w0, [x19, x2]
   2c5e4:	cmp	w0, #0x7d
   2c5e8:	b.eq	2c8a0 <omp_get_affinity_format@@OMP_5.0+0x838>  // b.none
   2c5ec:	ldrb	w28, [x20, #138]
   2c5f0:	add	x1, x20, #0x78
   2c5f4:	mov	x0, x25
   2c5f8:	mov	x2, x28
   2c5fc:	bl	8740 <strncmp@plt>
   2c600:	cbnz	w0, 2c618 <omp_get_affinity_format@@OMP_5.0+0x5b0>
   2c604:	add	x2, x28, #0x1
   2c608:	add	x1, x19, x2
   2c60c:	ldrb	w0, [x19, x2]
   2c610:	cmp	w0, #0x7d
   2c614:	b.eq	2c908 <omp_get_affinity_format@@OMP_5.0+0x8a0>  // b.none
   2c618:	ldrb	w28, [x20, #158]
   2c61c:	add	x1, x20, #0x8c
   2c620:	mov	x0, x25
   2c624:	mov	x2, x28
   2c628:	bl	8740 <strncmp@plt>
   2c62c:	cbnz	w0, 2c644 <omp_get_affinity_format@@OMP_5.0+0x5dc>
   2c630:	add	x2, x28, #0x1
   2c634:	add	x1, x19, x2
   2c638:	ldrb	w0, [x19, x2]
   2c63c:	cmp	w0, #0x7d
   2c640:	b.eq	2c8fc <omp_get_affinity_format@@OMP_5.0+0x894>  // b.none
   2c644:	ldrb	w28, [x20, #178]
   2c648:	add	x1, x20, #0xa0
   2c64c:	mov	x0, x25
   2c650:	mov	x2, x28
   2c654:	bl	8740 <strncmp@plt>
   2c658:	cbnz	w0, 2c670 <omp_get_affinity_format@@OMP_5.0+0x608>
   2c65c:	add	x2, x28, #0x1
   2c660:	add	x1, x19, x2
   2c664:	ldrb	w0, [x19, x2]
   2c668:	cmp	w0, #0x7d
   2c66c:	b.eq	2c914 <omp_get_affinity_format@@OMP_5.0+0x8ac>  // b.none
   2c670:	ldrb	w28, [x20, #198]
   2c674:	add	x1, x20, #0xb4
   2c678:	mov	x0, x25
   2c67c:	mov	x2, x28
   2c680:	bl	8740 <strncmp@plt>
   2c684:	cbz	w0, 2c774 <omp_get_affinity_format@@OMP_5.0+0x70c>
   2c688:	mov	x0, x25
   2c68c:	mov	w1, #0x7d                  	// #125
   2c690:	bl	8950 <strchr@plt>
   2c694:	cbz	x0, 2c868 <omp_get_affinity_format@@OMP_5.0+0x800>
   2c698:	sub	w1, w0, w25
   2c69c:	mov	x2, x25
   2c6a0:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2c6a4:	add	x0, x0, #0x8b8
   2c6a8:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2c6ac:	mov	w23, #0x0                   	// #0
   2c6b0:	b	2c4a4 <omp_get_affinity_format@@OMP_5.0+0x43c>
   2c6b4:	sub	x2, x21, x24
   2c6b8:	mov	x1, x22
   2c6bc:	cmp	x2, x23
   2c6c0:	add	x0, x26, x24
   2c6c4:	csel	x2, x2, x23, ls  // ls = plast
   2c6c8:	bl	8580 <memcpy@plt>
   2c6cc:	ldr	x0, [sp, #152]
   2c6d0:	add	x0, x23, x0
   2c6d4:	str	x0, [sp, #152]
   2c6d8:	cmp	x24, x0
   2c6dc:	b.ls	2c210 <omp_get_affinity_format@@OMP_5.0+0x1a8>  // b.plast
   2c6e0:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2c6e4:	add	x0, x0, #0x810
   2c6e8:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2c6ec:	ldr	x0, [sp, #152]
   2c6f0:	cmp	x21, #0x0
   2c6f4:	ccmp	x21, x0, #0x0, ne  // ne = any
   2c6f8:	b.hi	2c800 <omp_get_affinity_format@@OMP_5.0+0x798>  // b.pmore
   2c6fc:	add	x1, x0, #0x1
   2c700:	str	x1, [sp, #152]
   2c704:	cmp	x0, x1
   2c708:	b.hi	2c6e0 <omp_get_affinity_format@@OMP_5.0+0x678>  // b.pmore
   2c70c:	add	x22, x19, #0x2
   2c710:	b	2c1c8 <omp_get_affinity_format@@OMP_5.0+0x160>
   2c714:	bl	8a30 <omp_get_num_teams@plt>
   2c718:	mov	w2, w0
   2c71c:	b	2c290 <omp_get_affinity_format@@OMP_5.0+0x228>
   2c720:	ldr	x0, [sp, #112]
   2c724:	ldr	w2, [x0, #24]
   2c728:	b	2c290 <omp_get_affinity_format@@OMP_5.0+0x228>
   2c72c:	ldr	x0, [sp, #112]
   2c730:	ldr	w2, [x0, #28]
   2c734:	b	2c290 <omp_get_affinity_format@@OMP_5.0+0x228>
   2c738:	cmp	x25, x23
   2c73c:	b.eq	2c748 <omp_get_affinity_format@@OMP_5.0+0x6e0>  // b.none
   2c740:	mov	x0, x25
   2c744:	bl	88b0 <free@plt>
   2c748:	mov	x4, x22
   2c74c:	mov	w3, w24
   2c750:	add	x2, sp, #0x98
   2c754:	mov	x1, x21
   2c758:	mov	x0, x26
   2c75c:	adrp	x5, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2c760:	mov	x6, #0x4                   	// #4
   2c764:	add	x5, x5, #0x928
   2c768:	add	x22, x19, #0x1
   2c76c:	bl	2b968 <acc_set_cuda_stream@@OACC_2.0+0x960>
   2c770:	b	2c2c4 <omp_get_affinity_format@@OMP_5.0+0x25c>
   2c774:	add	x2, x28, #0x1
   2c778:	add	x19, x19, x2
   2c77c:	ldrb	w0, [x19]
   2c780:	cmp	w0, #0x7d
   2c784:	b.ne	2c688 <omp_get_affinity_format@@OMP_5.0+0x620>  // b.any
   2c788:	mov	w0, #0x9                   	// #9
   2c78c:	sbfiz	x1, x0, #2, #32
   2c790:	add	x0, x1, w0, sxtw
   2c794:	add	x0, x20, x0, lsl #2
   2c798:	ldrb	w1, [x0, #19]
   2c79c:	cmp	w1, #0x7b
   2c7a0:	b.ne	2c25c <omp_get_affinity_format@@OMP_5.0+0x1f4>  // b.any
   2c7a4:	add	x25, x19, #0x1
   2c7a8:	b	2c688 <omp_get_affinity_format@@OMP_5.0+0x620>
   2c7ac:	mov	x0, x26
   2c7b0:	add	x2, sp, #0x98
   2c7b4:	mov	x1, x21
   2c7b8:	ldr	x23, [sp, #152]
   2c7bc:	bl	1f2b0 <omp_get_place_proc_ids@@OMP_4.5+0xf0>
   2c7c0:	ldr	x24, [sp, #152]
   2c7c4:	sub	x0, x24, x23
   2c7c8:	cmp	x0, x22
   2c7cc:	b.cs	2c2c0 <omp_get_affinity_format@@OMP_5.0+0x258>  // b.hs, b.nlast
   2c7d0:	sub	x23, x23, x24
   2c7d4:	cmp	x21, #0x0
   2c7d8:	add	x22, x23, x22
   2c7dc:	ccmp	x24, x21, #0x2, ne  // ne = any
   2c7e0:	mov	x0, x24
   2c7e4:	b.cc	2c880 <omp_get_affinity_format@@OMP_5.0+0x818>  // b.lo, b.ul, b.last
   2c7e8:	add	x22, x22, x0
   2c7ec:	str	x22, [sp, #152]
   2c7f0:	cmp	x24, x22
   2c7f4:	b.hi	2c6e0 <omp_get_affinity_format@@OMP_5.0+0x678>  // b.pmore
   2c7f8:	add	x22, x19, #0x1
   2c7fc:	b	2c2c4 <omp_get_affinity_format@@OMP_5.0+0x25c>
   2c800:	strb	w1, [x26, x0]
   2c804:	b	2c6fc <omp_get_affinity_format@@OMP_5.0+0x694>
   2c808:	ldp	x19, x20, [sp, #16]
   2c80c:	ldp	x21, x22, [sp, #32]
   2c810:	ldp	x23, x24, [sp, #48]
   2c814:	ldp	x25, x26, [sp, #64]
   2c818:	ldp	x27, x28, [sp, #80]
   2c81c:	ldr	x0, [sp, #152]
   2c820:	ldp	x29, x30, [sp], #416
   2c824:	ret
   2c828:	ldr	x24, [sp, #152]
   2c82c:	cmp	x21, #0x0
   2c830:	sub	x22, x22, x0
   2c834:	ccmp	x21, x24, #0x0, ne  // ne = any
   2c838:	mov	x0, x24
   2c83c:	b.hi	2c8dc <omp_get_affinity_format@@OMP_5.0+0x874>  // b.pmore
   2c840:	add	x22, x22, x0
   2c844:	str	x22, [sp, #152]
   2c848:	cmp	x24, x22
   2c84c:	b.hi	2c6e0 <omp_get_affinity_format@@OMP_5.0+0x678>  // b.pmore
   2c850:	mov	w3, w23
   2c854:	add	x2, sp, #0x98
   2c858:	mov	x1, x21
   2c85c:	mov	x0, x26
   2c860:	bl	1f2b0 <omp_get_place_proc_ids@@OMP_4.5+0xf0>
   2c864:	b	2c350 <omp_get_affinity_format@@OMP_5.0+0x2e8>
   2c868:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2c86c:	mov	x1, x25
   2c870:	add	x0, x0, #0x8f0
   2c874:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2c878:	mov	x19, x3
   2c87c:	b	2c78c <omp_get_affinity_format@@OMP_5.0+0x724>
   2c880:	sub	x2, x21, x24
   2c884:	add	x0, x26, x24
   2c888:	cmp	x2, x22
   2c88c:	mov	w1, #0x20                  	// #32
   2c890:	csel	x2, x2, x22, ls  // ls = plast
   2c894:	bl	8770 <memset@plt>
   2c898:	ldr	x0, [sp, #152]
   2c89c:	b	2c7e8 <omp_get_affinity_format@@OMP_5.0+0x780>
   2c8a0:	mov	x19, x1
   2c8a4:	mov	w0, #0x5                   	// #5
   2c8a8:	b	2c78c <omp_get_affinity_format@@OMP_5.0+0x724>
   2c8ac:	mov	x19, x1
   2c8b0:	mov	w0, #0x2                   	// #2
   2c8b4:	b	2c78c <omp_get_affinity_format@@OMP_5.0+0x724>
   2c8b8:	mov	x19, x1
   2c8bc:	mov	w0, #0x1                   	// #1
   2c8c0:	b	2c78c <omp_get_affinity_format@@OMP_5.0+0x724>
   2c8c4:	mov	x19, x1
   2c8c8:	mov	w0, #0x4                   	// #4
   2c8cc:	b	2c78c <omp_get_affinity_format@@OMP_5.0+0x724>
   2c8d0:	mov	x19, x1
   2c8d4:	mov	w0, #0x3                   	// #3
   2c8d8:	b	2c78c <omp_get_affinity_format@@OMP_5.0+0x724>
   2c8dc:	sub	x2, x21, x24
   2c8e0:	add	x0, x26, x24
   2c8e4:	cmp	x2, x22
   2c8e8:	mov	w1, #0x20                  	// #32
   2c8ec:	csel	x2, x2, x22, ls  // ls = plast
   2c8f0:	bl	8770 <memset@plt>
   2c8f4:	ldr	x0, [sp, #152]
   2c8f8:	b	2c840 <omp_get_affinity_format@@OMP_5.0+0x7d8>
   2c8fc:	mov	x19, x1
   2c900:	mov	w0, #0x7                   	// #7
   2c904:	b	2c78c <omp_get_affinity_format@@OMP_5.0+0x724>
   2c908:	mov	x19, x1
   2c90c:	mov	w0, #0x6                   	// #6
   2c910:	b	2c78c <omp_get_affinity_format@@OMP_5.0+0x724>
   2c914:	mov	x19, x1
   2c918:	mov	w0, #0x8                   	// #8
   2c91c:	b	2c78c <omp_get_affinity_format@@OMP_5.0+0x724>
   2c920:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2c924:	add	x0, x0, #0x938
   2c928:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2c92c:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2c930:	add	x0, x0, #0x870
   2c934:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2c938:	mov	x0, x19
   2c93c:	mov	w23, #0x0                   	// #0
   2c940:	mov	w24, #0x0                   	// #0
   2c944:	b	2c4c0 <omp_get_affinity_format@@OMP_5.0+0x458>
   2c948:	adrp	x0, 2e000 <omp_get_team_num@@OMP_4.0+0x1338>
   2c94c:	add	x0, x0, #0x838
   2c950:	bl	b768 <GOMP_critical_name_end@@GOMP_1.0+0x268>
   2c954:	nop

000000000002c958 <omp_capture_affinity@@OMP_5.0>:
   2c958:	stp	x29, x30, [sp, #-48]!
   2c95c:	mov	x29, sp
   2c960:	stp	x19, x20, [sp, #16]
   2c964:	mov	x20, x1
   2c968:	str	x21, [sp, #32]
   2c96c:	mov	x21, x0
   2c970:	cbz	x2, 2c9d4 <omp_capture_affinity@@OMP_5.0+0x7c>
   2c974:	ldrb	w0, [x2]
   2c978:	mov	x19, x2
   2c97c:	cbz	w0, 2c9d4 <omp_capture_affinity@@OMP_5.0+0x7c>
   2c980:	bl	8a40 <pthread_self@plt>
   2c984:	mov	x3, x0
   2c988:	adrp	x5, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   2c98c:	ldr	x5, [x5, #4016]
   2c990:	mrs	x4, tpidr_el0
   2c994:	mov	x2, x19
   2c998:	mov	x1, x20
   2c99c:	add	x5, x4, x5
   2c9a0:	mov	x0, x21
   2c9a4:	add	x4, x5, #0x10
   2c9a8:	ldr	w5, [x5, #92]
   2c9ac:	bl	2c178 <omp_get_affinity_format@@OMP_5.0+0x110>
   2c9b0:	cbz	x20, 2c9c4 <omp_capture_affinity@@OMP_5.0+0x6c>
   2c9b4:	cmp	x20, x0
   2c9b8:	b.hi	2c9e0 <omp_capture_affinity@@OMP_5.0+0x88>  // b.pmore
   2c9bc:	add	x20, x21, x20
   2c9c0:	sturb	wzr, [x20, #-1]
   2c9c4:	ldp	x19, x20, [sp, #16]
   2c9c8:	ldr	x21, [sp, #32]
   2c9cc:	ldp	x29, x30, [sp], #48
   2c9d0:	ret
   2c9d4:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   2c9d8:	ldr	x19, [x0, #816]
   2c9dc:	b	2c980 <omp_capture_affinity@@OMP_5.0+0x28>
   2c9e0:	strb	wzr, [x21, x0]
   2c9e4:	ldp	x19, x20, [sp, #16]
   2c9e8:	ldr	x21, [sp, #32]
   2c9ec:	ldp	x29, x30, [sp], #48
   2c9f0:	ret
   2c9f4:	nop

000000000002c9f8 <omp_display_affinity@@OMP_5.0>:
   2c9f8:	sub	sp, sp, #0x250
   2c9fc:	stp	x29, x30, [sp]
   2ca00:	mov	x29, sp
   2ca04:	stp	x23, x24, [sp, #48]
   2ca08:	adrp	x23, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   2ca0c:	ldr	x23, [x23, #4016]
   2ca10:	stp	x19, x20, [sp, #16]
   2ca14:	mov	x20, x0
   2ca18:	stp	x21, x22, [sp, #32]
   2ca1c:	mrs	x22, tpidr_el0
   2ca20:	stp	x25, x26, [sp, #64]
   2ca24:	bl	8a40 <pthread_self@plt>
   2ca28:	add	x4, x22, x23
   2ca2c:	mov	x21, x0
   2ca30:	ldr	w5, [x4, #92]
   2ca34:	cbz	x20, 2cb70 <omp_display_affinity@@OMP_5.0+0x178>
   2ca38:	ldrb	w0, [x20]
   2ca3c:	cbnz	w0, 2caac <omp_display_affinity@@OMP_5.0+0xb4>
   2ca40:	adrp	x26, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   2ca44:	add	x24, sp, #0x50
   2ca48:	add	x4, x4, #0x10
   2ca4c:	mov	x0, x24
   2ca50:	ldr	x2, [x26, #816]
   2ca54:	mov	x3, x21
   2ca58:	mov	x1, #0x200                 	// #512
   2ca5c:	bl	2c178 <omp_get_affinity_format@@OMP_5.0+0x110>
   2ca60:	mov	x19, x0
   2ca64:	cmp	x0, #0x1ff
   2ca68:	b.hi	2cad4 <omp_display_affinity@@OMP_5.0+0xdc>  // b.pmore
   2ca6c:	adrp	x3, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   2ca70:	mov	w4, #0xa                   	// #10
   2ca74:	add	x2, x19, #0x1
   2ca78:	mov	x0, x24
   2ca7c:	ldr	x3, [x3, #4040]
   2ca80:	mov	x1, #0x1                   	// #1
   2ca84:	strb	w4, [x24, x19]
   2ca88:	ldr	x3, [x3]
   2ca8c:	bl	8980 <fwrite@plt>
   2ca90:	ldp	x29, x30, [sp]
   2ca94:	ldp	x19, x20, [sp, #16]
   2ca98:	ldp	x21, x22, [sp, #32]
   2ca9c:	ldp	x23, x24, [sp, #48]
   2caa0:	ldp	x25, x26, [sp, #64]
   2caa4:	add	sp, sp, #0x250
   2caa8:	ret
   2caac:	add	x24, sp, #0x50
   2cab0:	add	x4, x4, #0x10
   2cab4:	mov	x0, x24
   2cab8:	mov	x3, x21
   2cabc:	mov	x2, x20
   2cac0:	mov	x1, #0x200                 	// #512
   2cac4:	bl	2c178 <omp_get_affinity_format@@OMP_5.0+0x110>
   2cac8:	mov	x19, x0
   2cacc:	cmp	x0, #0x1ff
   2cad0:	b.ls	2ca6c <omp_display_affinity@@OMP_5.0+0x74>  // b.plast
   2cad4:	add	x25, x19, #0x1
   2cad8:	strb	wzr, [sp, #591]
   2cadc:	mov	x0, x25
   2cae0:	bl	b2f8 <fprintf@plt+0x2838>
   2cae4:	mov	x24, x0
   2cae8:	ldrb	w0, [x20]
   2caec:	cbz	w0, 2cb64 <omp_display_affinity@@OMP_5.0+0x16c>
   2caf0:	add	x22, x22, x23
   2caf4:	mov	x3, x21
   2caf8:	mov	x2, x20
   2cafc:	add	x4, x22, #0x10
   2cb00:	mov	x1, x25
   2cb04:	mov	x0, x24
   2cb08:	ldr	w5, [x22, #92]
   2cb0c:	add	x19, x24, x19
   2cb10:	bl	2c178 <omp_get_affinity_format@@OMP_5.0+0x110>
   2cb14:	cbz	x25, 2cb20 <omp_display_affinity@@OMP_5.0+0x128>
   2cb18:	cmp	x0, x25
   2cb1c:	b.cc	2cbb8 <omp_display_affinity@@OMP_5.0+0x1c0>  // b.lo, b.ul, b.last
   2cb20:	adrp	x3, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   2cb24:	mov	w0, #0xa                   	// #10
   2cb28:	strb	w0, [x19]
   2cb2c:	mov	x2, x25
   2cb30:	ldr	x3, [x3, #4040]
   2cb34:	mov	x0, x24
   2cb38:	mov	x1, #0x1                   	// #1
   2cb3c:	ldr	x3, [x3]
   2cb40:	bl	8980 <fwrite@plt>
   2cb44:	mov	x0, x24
   2cb48:	ldp	x29, x30, [sp]
   2cb4c:	ldp	x19, x20, [sp, #16]
   2cb50:	ldp	x21, x22, [sp, #32]
   2cb54:	ldp	x23, x24, [sp, #48]
   2cb58:	ldp	x25, x26, [sp, #64]
   2cb5c:	add	sp, sp, #0x250
   2cb60:	b	88b0 <free@plt>
   2cb64:	adrp	x26, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   2cb68:	ldr	x20, [x26, #816]
   2cb6c:	b	2caf0 <omp_display_affinity@@OMP_5.0+0xf8>
   2cb70:	adrp	x26, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   2cb74:	add	x24, sp, #0x50
   2cb78:	add	x4, x4, #0x10
   2cb7c:	mov	x0, x24
   2cb80:	ldr	x2, [x26, #816]
   2cb84:	mov	x3, x21
   2cb88:	mov	x1, #0x200                 	// #512
   2cb8c:	bl	2c178 <omp_get_affinity_format@@OMP_5.0+0x110>
   2cb90:	mov	x19, x0
   2cb94:	cmp	x0, #0x1ff
   2cb98:	b.ls	2ca6c <omp_display_affinity@@OMP_5.0+0x74>  // b.plast
   2cb9c:	add	x25, x19, #0x1
   2cba0:	strb	wzr, [sp, #591]
   2cba4:	mov	x0, x25
   2cba8:	bl	b2f8 <fprintf@plt+0x2838>
   2cbac:	ldr	x20, [x26, #816]
   2cbb0:	mov	x24, x0
   2cbb4:	b	2caf0 <omp_display_affinity@@OMP_5.0+0xf8>
   2cbb8:	strb	wzr, [x24, x0]
   2cbbc:	b	2cb20 <omp_display_affinity@@OMP_5.0+0x128>

000000000002cbc0 <GOMP_teams_reg@@GOMP_5.0>:
   2cbc0:	stp	x29, x30, [sp, #-80]!
   2cbc4:	mov	x29, sp
   2cbc8:	stp	x19, x20, [sp, #16]
   2cbcc:	mov	w20, w2
   2cbd0:	stp	x21, x22, [sp, #32]
   2cbd4:	mov	x21, x0
   2cbd8:	mov	x22, x1
   2cbdc:	stp	x23, x24, [sp, #48]
   2cbe0:	mov	w23, w3
   2cbe4:	str	x25, [sp, #64]
   2cbe8:	mov	w25, #0x0                   	// #0
   2cbec:	cbz	w3, 2cc1c <GOMP_teams_reg@@GOMP_5.0+0x5c>
   2cbf0:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   2cbf4:	ldr	x0, [x0, #4016]
   2cbf8:	mrs	x1, tpidr_el0
   2cbfc:	add	x0, x1, x0
   2cc00:	ldr	x0, [x0, #80]
   2cc04:	cbz	x0, 2cca4 <GOMP_teams_reg@@GOMP_5.0+0xe4>
   2cc08:	add	x0, x0, #0x90
   2cc0c:	cmp	w23, #0x0
   2cc10:	ldr	w25, [x0, #20]
   2cc14:	csinv	w1, w23, wzr, ge  // ge = tcont
   2cc18:	str	w1, [x0, #20]
   2cc1c:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   2cc20:	adrp	x24, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   2cc24:	cmp	w20, #0x0
   2cc28:	add	x19, x0, #0x5ec
   2cc2c:	mov	w1, #0x3                   	// #3
   2cc30:	str	wzr, [x0, #1516]
   2cc34:	csel	w20, w20, w1, ne  // ne = any
   2cc38:	str	w20, [x24, #1336]
   2cc3c:	nop
   2cc40:	mov	x0, x22
   2cc44:	blr	x21
   2cc48:	ldr	w4, [x19]
   2cc4c:	add	w4, w4, #0x1
   2cc50:	str	w4, [x19]
   2cc54:	cmp	w4, w20
   2cc58:	b.cc	2cc40 <GOMP_teams_reg@@GOMP_5.0+0x80>  // b.lo, b.ul, b.last
   2cc5c:	mov	w0, #0x1                   	// #1
   2cc60:	str	w0, [x24, #1336]
   2cc64:	str	wzr, [x19]
   2cc68:	cbz	w23, 2cc8c <GOMP_teams_reg@@GOMP_5.0+0xcc>
   2cc6c:	adrp	x0, 45000 <omp_get_team_num@@OMP_4.0+0x18338>
   2cc70:	ldr	x0, [x0, #4016]
   2cc74:	mrs	x1, tpidr_el0
   2cc78:	add	x0, x1, x0
   2cc7c:	ldr	x0, [x0, #80]
   2cc80:	cbz	x0, 2ccac <GOMP_teams_reg@@GOMP_5.0+0xec>
   2cc84:	add	x0, x0, #0x90
   2cc88:	str	w25, [x0, #20]
   2cc8c:	ldp	x19, x20, [sp, #16]
   2cc90:	ldp	x21, x22, [sp, #32]
   2cc94:	ldp	x23, x24, [sp, #48]
   2cc98:	ldr	x25, [sp, #64]
   2cc9c:	ldp	x29, x30, [sp], #80
   2cca0:	ret
   2cca4:	bl	1ba40 <omp_in_final@@OMP_3.1+0x1750>
   2cca8:	b	2cc0c <GOMP_teams_reg@@GOMP_5.0+0x4c>
   2ccac:	bl	1ba40 <omp_in_final@@OMP_3.1+0x1750>
   2ccb0:	str	w25, [x0, #20]
   2ccb4:	b	2cc8c <GOMP_teams_reg@@GOMP_5.0+0xcc>

000000000002ccb8 <omp_get_num_teams@@OMP_4.0>:
   2ccb8:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   2ccbc:	ldr	w0, [x0, #1336]
   2ccc0:	ret
   2ccc4:	nop

000000000002ccc8 <omp_get_team_num@@OMP_4.0>:
   2ccc8:	adrp	x0, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   2cccc:	ldr	w0, [x0, #1516]
   2ccd0:	ret
   2ccd4:	nop
   2ccd8:	adrp	x2, 46000 <omp_get_team_num@@OMP_4.0+0x19338>
   2ccdc:	mov	x1, #0x0                   	// #0
   2cce0:	ldr	x2, [x2, #680]
   2cce4:	b	8640 <__cxa_atexit@plt>

Disassembly of section .fini:

000000000002cce8 <.fini>:
   2cce8:	stp	x29, x30, [sp, #-16]!
   2ccec:	mov	x29, sp
   2ccf0:	ldp	x29, x30, [sp], #16
   2ccf4:	ret
