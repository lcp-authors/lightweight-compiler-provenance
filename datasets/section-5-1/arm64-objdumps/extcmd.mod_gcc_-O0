
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//extcmd.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_extcmd_dispatcher>:
       0:	stp	x29, x30, [sp, #-112]!
       4:	mov	x29, sp
       8:	str	x0, [sp, #40]
       c:	str	w1, [sp, #36]
      10:	str	x2, [sp, #24]
      14:	str	x3, [sp, #16]
      18:	ldr	x0, [sp, #40]
      1c:	ldr	x0, [x0, #64]
      20:	str	x0, [sp, #104]
      24:	str	xzr, [sp, #64]
      28:	ldr	x0, [sp, #104]
      2c:	str	x0, [sp, #56]
      30:	ldr	x0, [sp, #16]
      34:	str	x0, [sp, #72]
      38:	ldr	x0, [sp, #104]
      3c:	ldr	x0, [x0, #16]
      40:	cmp	x0, #0x0
      44:	b.ne	6c <grub_extcmd_dispatcher+0x6c>  // b.any
      48:	ldr	x0, [sp, #104]
      4c:	ldr	x3, [x0, #8]
      50:	add	x0, sp, #0x38
      54:	ldr	x2, [sp, #24]
      58:	ldr	w1, [sp, #36]
      5c:	blr	x3
      60:	str	w0, [sp, #92]
      64:	ldr	w0, [sp, #92]
      68:	b	100 <grub_extcmd_dispatcher+0x100>
      6c:	ldr	x2, [sp, #24]
      70:	ldr	w1, [sp, #36]
      74:	ldr	x0, [sp, #104]
      78:	bl	12a0 <grub_arg_list_alloc>
      7c:	str	x0, [sp, #96]
      80:	add	x1, sp, #0x58
      84:	add	x0, sp, #0x50
      88:	mov	x5, x1
      8c:	mov	x4, x0
      90:	ldr	x3, [sp, #96]
      94:	ldr	x2, [sp, #24]
      98:	ldr	w1, [sp, #36]
      9c:	ldr	x0, [sp, #104]
      a0:	bl	ba8 <grub_arg_parse>
      a4:	cmp	w0, #0x0
      a8:	b.eq	e8 <grub_extcmd_dispatcher+0xe8>  // b.none
      ac:	ldr	x0, [sp, #96]
      b0:	str	x0, [sp, #64]
      b4:	ldr	x0, [sp, #104]
      b8:	ldr	x3, [x0, #8]
      bc:	ldr	w1, [sp, #88]
      c0:	ldr	x2, [sp, #80]
      c4:	add	x0, sp, #0x38
      c8:	blr	x3
      cc:	str	w0, [sp, #92]
      d0:	ldr	x0, [sp, #80]
      d4:	bl	0 <grub_free>
      d8:	ldr	x0, [sp, #96]
      dc:	bl	0 <grub_free>
      e0:	ldr	w0, [sp, #92]
      e4:	b	100 <grub_extcmd_dispatcher+0x100>
      e8:	ldr	x0, [sp, #96]
      ec:	bl	0 <grub_free>
      f0:	adrp	x0, 0 <grub_extcmd_dispatcher>
      f4:	add	x0, x0, #0x0
      f8:	ldr	x0, [x0]
      fc:	ldr	w0, [x0]
     100:	ldp	x29, x30, [sp], #112
     104:	ret
	...
     110:	stp	x29, x30, [sp, #-48]!
     114:	mov	x29, sp
     118:	str	x0, [sp, #40]
     11c:	str	w1, [sp, #36]
     120:	str	x2, [sp, #24]
     124:	mov	x3, #0x0                   	// #0
     128:	ldr	x2, [sp, #24]
     12c:	ldr	w1, [sp, #36]
     130:	ldr	x0, [sp, #40]
     134:	bl	0 <grub_extcmd_dispatcher>
     138:	ldp	x29, x30, [sp], #48
     13c:	ret

0000000000000140 <grub_register_extcmd_prio>:
     140:	stp	x29, x30, [sp, #-80]!
     144:	mov	x29, sp
     148:	str	x0, [sp, #56]
     14c:	str	x1, [sp, #48]
     150:	str	w2, [sp, #44]
     154:	str	x3, [sp, #32]
     158:	str	x4, [sp, #24]
     15c:	str	x5, [sp, #16]
     160:	str	w6, [sp, #40]
     164:	mov	x0, #0x20                  	// #32
     168:	bl	0 <grub_malloc>
     16c:	str	x0, [sp, #72]
     170:	ldr	x0, [sp, #72]
     174:	cmp	x0, #0x0
     178:	b.ne	184 <grub_register_extcmd_prio+0x44>  // b.any
     17c:	mov	x0, #0x0                   	// #0
     180:	b	210 <grub_register_extcmd_prio+0xd0>
     184:	ldr	w4, [sp, #40]
     188:	ldr	x3, [sp, #24]
     18c:	ldr	x2, [sp, #32]
     190:	adrp	x0, 0 <grub_extcmd_dispatcher>
     194:	add	x0, x0, #0x0
     198:	ldr	x1, [x0]
     19c:	ldr	x0, [sp, #56]
     1a0:	bl	0 <grub_register_command_prio>
     1a4:	str	x0, [sp, #64]
     1a8:	ldr	x0, [sp, #64]
     1ac:	cmp	x0, #0x0
     1b0:	b.ne	1c4 <grub_register_extcmd_prio+0x84>  // b.any
     1b4:	ldr	x0, [sp, #72]
     1b8:	bl	0 <grub_free>
     1bc:	mov	x0, #0x0                   	// #0
     1c0:	b	210 <grub_register_extcmd_prio+0xd0>
     1c4:	ldr	w0, [sp, #44]
     1c8:	orr	w1, w0, #0x10
     1cc:	ldr	x0, [sp, #64]
     1d0:	str	w1, [x0, #40]
     1d4:	ldr	x0, [sp, #64]
     1d8:	ldr	x1, [sp, #72]
     1dc:	str	x1, [x0, #64]
     1e0:	ldr	x0, [sp, #72]
     1e4:	ldr	x1, [sp, #64]
     1e8:	str	x1, [x0]
     1ec:	ldr	x0, [sp, #72]
     1f0:	ldr	x1, [sp, #48]
     1f4:	str	x1, [x0, #8]
     1f8:	ldr	x0, [sp, #72]
     1fc:	ldr	x1, [sp, #16]
     200:	str	x1, [x0, #16]
     204:	ldr	x0, [sp, #72]
     208:	str	xzr, [x0, #24]
     20c:	ldr	x0, [sp, #72]
     210:	ldp	x29, x30, [sp], #80
     214:	ret
	...

0000000000000220 <grub_register_extcmd>:
     220:	stp	x29, x30, [sp, #-64]!
     224:	mov	x29, sp
     228:	str	x0, [sp, #56]
     22c:	str	x1, [sp, #48]
     230:	str	w2, [sp, #44]
     234:	str	x3, [sp, #32]
     238:	str	x4, [sp, #24]
     23c:	str	x5, [sp, #16]
     240:	mov	w6, #0x1                   	// #1
     244:	ldr	x5, [sp, #16]
     248:	ldr	x4, [sp, #24]
     24c:	ldr	x3, [sp, #32]
     250:	ldr	w2, [sp, #44]
     254:	ldr	x1, [sp, #48]
     258:	ldr	x0, [sp, #56]
     25c:	bl	140 <grub_register_extcmd_prio>
     260:	ldp	x29, x30, [sp], #64
     264:	ret

0000000000000268 <grub_unregister_extcmd>:
     268:	stp	x29, x30, [sp, #-32]!
     26c:	mov	x29, sp
     270:	str	x0, [sp, #24]
     274:	ldr	x0, [sp, #24]
     278:	ldr	x0, [x0]
     27c:	bl	0 <grub_unregister_command>
     280:	ldr	x0, [sp, #24]
     284:	bl	0 <grub_free>
     288:	nop
     28c:	ldp	x29, x30, [sp], #32
     290:	ret
     294:	nop
     298:	sub	sp, sp, #0x10
     29c:	str	w0, [sp, #12]
     2a0:	ldr	w0, [sp, #12]
     2a4:	cmp	w0, #0x20
     2a8:	b.le	2c0 <grub_unregister_extcmd+0x58>
     2ac:	ldr	w0, [sp, #12]
     2b0:	cmp	w0, #0x7e
     2b4:	b.gt	2c0 <grub_unregister_extcmd+0x58>
     2b8:	mov	w0, #0x1                   	// #1
     2bc:	b	2c4 <grub_unregister_extcmd+0x5c>
     2c0:	mov	w0, #0x0                   	// #0
     2c4:	add	sp, sp, #0x10
     2c8:	ret
     2cc:	sub	sp, sp, #0x10
     2d0:	str	x0, [sp, #8]
     2d4:	strb	w1, [sp, #7]
     2d8:	b	304 <grub_unregister_extcmd+0x9c>
     2dc:	ldr	x0, [sp, #8]
     2e0:	ldr	w1, [x0, #8]
     2e4:	ldrb	w0, [sp, #7]
     2e8:	cmp	w1, w0
     2ec:	b.ne	2f8 <grub_unregister_extcmd+0x90>  // b.any
     2f0:	ldr	x0, [sp, #8]
     2f4:	b	318 <grub_unregister_extcmd+0xb0>
     2f8:	ldr	x0, [sp, #8]
     2fc:	add	x0, x0, #0x28
     300:	str	x0, [sp, #8]
     304:	ldr	x0, [sp, #8]
     308:	ldr	x0, [x0, #16]
     30c:	cmp	x0, #0x0
     310:	b.ne	2dc <grub_unregister_extcmd+0x74>  // b.any
     314:	mov	x0, #0x0                   	// #0
     318:	add	sp, sp, #0x10
     31c:	ret
     320:	stp	x29, x30, [sp, #-48]!
     324:	mov	x29, sp
     328:	str	x0, [sp, #24]
     32c:	strb	w1, [sp, #23]
     330:	str	xzr, [sp, #40]
     334:	ldr	x0, [sp, #24]
     338:	cmp	x0, #0x0
     33c:	b.eq	350 <grub_unregister_extcmd+0xe8>  // b.none
     340:	ldrb	w1, [sp, #23]
     344:	ldr	x0, [sp, #24]
     348:	bl	2cc <grub_unregister_extcmd+0x64>
     34c:	str	x0, [sp, #40]
     350:	ldr	x0, [sp, #40]
     354:	cmp	x0, #0x0
     358:	b.ne	39c <grub_unregister_extcmd+0x134>  // b.any
     35c:	ldrb	w0, [sp, #23]
     360:	cmp	w0, #0x68
     364:	b.eq	374 <grub_unregister_extcmd+0x10c>  // b.none
     368:	cmp	w0, #0x75
     36c:	b.eq	388 <grub_unregister_extcmd+0x120>  // b.none
     370:	b	3a0 <grub_unregister_extcmd+0x138>
     374:	adrp	x0, 0 <grub_extcmd_dispatcher>
     378:	add	x0, x0, #0x0
     37c:	ldr	x0, [x0]
     380:	str	x0, [sp, #40]
     384:	b	3a0 <grub_unregister_extcmd+0x138>
     388:	adrp	x0, 0 <grub_extcmd_dispatcher>
     38c:	add	x0, x0, #0x0
     390:	ldr	x0, [x0]
     394:	str	x0, [sp, #40]
     398:	b	3a0 <grub_unregister_extcmd+0x138>
     39c:	nop
     3a0:	ldr	x0, [sp, #40]
     3a4:	ldp	x29, x30, [sp], #48
     3a8:	ret
     3ac:	nop
	...
     3c0:	stp	x29, x30, [sp, #-48]!
     3c4:	mov	x29, sp
     3c8:	str	x0, [sp, #40]
     3cc:	str	x1, [sp, #32]
     3d0:	str	w2, [sp, #28]
     3d4:	b	438 <grub_unregister_extcmd+0x1d0>
     3d8:	ldr	x0, [sp, #40]
     3dc:	ldr	x0, [x0]
     3e0:	cmp	x0, #0x0
     3e4:	b.eq	42c <grub_unregister_extcmd+0x1c4>  // b.none
     3e8:	ldr	x0, [sp, #40]
     3ec:	ldr	x0, [x0]
     3f0:	ldrsw	x1, [sp, #28]
     3f4:	mov	x2, x1
     3f8:	ldr	x1, [sp, #32]
     3fc:	bl	0 <grub_strncmp>
     400:	cmp	w0, #0x0
     404:	b.ne	42c <grub_unregister_extcmd+0x1c4>  // b.any
     408:	ldr	x0, [sp, #40]
     40c:	ldr	x1, [x0]
     410:	ldrsw	x0, [sp, #28]
     414:	add	x0, x1, x0
     418:	ldrb	w0, [x0]
     41c:	cmp	w0, #0x0
     420:	b.ne	42c <grub_unregister_extcmd+0x1c4>  // b.any
     424:	ldr	x0, [sp, #40]
     428:	b	44c <grub_unregister_extcmd+0x1e4>
     42c:	ldr	x0, [sp, #40]
     430:	add	x0, x0, #0x28
     434:	str	x0, [sp, #40]
     438:	ldr	x0, [sp, #40]
     43c:	ldr	x0, [x0, #16]
     440:	cmp	x0, #0x0
     444:	b.ne	3d8 <grub_unregister_extcmd+0x170>  // b.any
     448:	mov	x0, #0x0                   	// #0
     44c:	ldp	x29, x30, [sp], #48
     450:	ret
     454:	stp	x29, x30, [sp, #-64]!
     458:	mov	x29, sp
     45c:	str	x0, [sp, #40]
     460:	str	x1, [sp, #32]
     464:	str	w2, [sp, #28]
     468:	str	xzr, [sp, #56]
     46c:	ldr	x0, [sp, #40]
     470:	cmp	x0, #0x0
     474:	b.eq	48c <grub_unregister_extcmd+0x224>  // b.none
     478:	ldr	w2, [sp, #28]
     47c:	ldr	x1, [sp, #32]
     480:	ldr	x0, [sp, #40]
     484:	bl	3c0 <grub_unregister_extcmd+0x158>
     488:	str	x0, [sp, #56]
     48c:	ldr	x0, [sp, #56]
     490:	cmp	x0, #0x0
     494:	b.ne	4b4 <grub_unregister_extcmd+0x24c>  // b.any
     498:	ldr	w2, [sp, #28]
     49c:	ldr	x1, [sp, #32]
     4a0:	adrp	x0, 0 <grub_extcmd_dispatcher>
     4a4:	add	x0, x0, #0x0
     4a8:	ldr	x0, [x0]
     4ac:	bl	3c0 <grub_unregister_extcmd+0x158>
     4b0:	str	x0, [sp, #56]
     4b4:	ldr	x0, [sp, #56]
     4b8:	ldp	x29, x30, [sp], #64
     4bc:	ret
	...
     4c8:	stp	x29, x30, [sp, #-64]!
     4cc:	mov	x29, sp
     4d0:	stp	x19, x20, [sp, #16]
     4d4:	str	x0, [sp, #40]
     4d8:	adrp	x0, 0 <grub_extcmd_dispatcher>
     4dc:	add	x0, x0, #0x0
     4e0:	ldr	x0, [x0]
     4e4:	str	x0, [sp, #48]
     4e8:	adrp	x0, 0 <grub_extcmd_dispatcher>
     4ec:	add	x0, x0, #0x0
     4f0:	ldr	x0, [x0]
     4f4:	ldr	x1, [x0]
     4f8:	ldr	x0, [sp, #48]
     4fc:	blr	x1
     500:	mov	x20, x0
     504:	ldr	x0, [sp, #40]
     508:	ldr	x0, [x0]
     50c:	ldr	x19, [x0, #16]
     510:	ldr	x0, [sp, #40]
     514:	ldr	x0, [x0]
     518:	ldr	x0, [x0, #48]
     51c:	str	x0, [sp, #56]
     520:	adrp	x0, 0 <grub_extcmd_dispatcher>
     524:	add	x0, x0, #0x0
     528:	ldr	x0, [x0]
     52c:	ldr	x1, [x0]
     530:	ldr	x0, [sp, #56]
     534:	blr	x1
     538:	mov	x3, x0
     53c:	mov	x2, x19
     540:	mov	x1, x20
     544:	adrp	x0, 0 <grub_extcmd_dispatcher>
     548:	add	x0, x0, #0x0
     54c:	ldr	x0, [x0]
     550:	bl	0 <grub_printf>
     554:	nop
     558:	ldp	x19, x20, [sp, #16]
     55c:	ldp	x29, x30, [sp], #64
     560:	ret
     564:	nop
	...
     580:	stp	x29, x30, [sp, #-48]!
     584:	mov	x29, sp
     588:	str	x0, [sp, #24]
     58c:	str	w1, [sp, #20]
     590:	str	w2, [sp, #16]
     594:	b	7a0 <grub_unregister_extcmd+0x538>
     598:	mov	w0, #0x14                  	// #20
     59c:	str	w0, [sp, #44]
     5a0:	ldr	x0, [sp, #24]
     5a4:	ldr	w0, [x0, #8]
     5a8:	cmp	w0, #0x0
     5ac:	b.eq	600 <grub_unregister_extcmd+0x398>  // b.none
     5b0:	ldr	x0, [sp, #24]
     5b4:	ldr	w0, [x0, #8]
     5b8:	bl	298 <grub_unregister_extcmd+0x30>
     5bc:	cmp	w0, #0x0
     5c0:	b.eq	600 <grub_unregister_extcmd+0x398>  // b.none
     5c4:	ldr	x0, [sp, #24]
     5c8:	ldr	w1, [x0, #8]
     5cc:	ldr	x0, [sp, #24]
     5d0:	ldr	x0, [x0]
     5d4:	cmp	x0, #0x0
     5d8:	b.eq	5e4 <grub_unregister_extcmd+0x37c>  // b.none
     5dc:	mov	w0, #0x2c                  	// #44
     5e0:	b	5e8 <grub_unregister_extcmd+0x380>
     5e4:	mov	w0, #0x20                  	// #32
     5e8:	mov	w2, w0
     5ec:	adrp	x0, 0 <grub_extcmd_dispatcher>
     5f0:	add	x0, x0, #0x0
     5f4:	ldr	x0, [x0]
     5f8:	bl	0 <grub_printf>
     5fc:	b	680 <grub_unregister_extcmd+0x418>
     600:	ldr	x1, [sp, #24]
     604:	adrp	x0, 0 <grub_extcmd_dispatcher>
     608:	add	x0, x0, #0x0
     60c:	ldr	x0, [x0]
     610:	cmp	x1, x0
     614:	b.ne	638 <grub_unregister_extcmd+0x3d0>  // b.any
     618:	ldr	w0, [sp, #20]
     61c:	cmp	w0, #0x0
     620:	b.ne	638 <grub_unregister_extcmd+0x3d0>  // b.any
     624:	adrp	x0, 0 <grub_extcmd_dispatcher>
     628:	add	x0, x0, #0x0
     62c:	ldr	x0, [x0]
     630:	bl	0 <grub_printf>
     634:	b	680 <grub_unregister_extcmd+0x418>
     638:	adrp	x0, 0 <grub_extcmd_dispatcher>
     63c:	add	x0, x0, #0x0
     640:	ldr	x0, [x0]
     644:	ldr	x1, [sp, #24]
     648:	cmp	x1, x0
     64c:	b.ne	670 <grub_unregister_extcmd+0x408>  // b.any
     650:	ldr	w0, [sp, #16]
     654:	cmp	w0, #0x0
     658:	b.ne	670 <grub_unregister_extcmd+0x408>  // b.any
     65c:	adrp	x0, 0 <grub_extcmd_dispatcher>
     660:	add	x0, x0, #0x0
     664:	ldr	x0, [x0]
     668:	bl	0 <grub_printf>
     66c:	b	680 <grub_unregister_extcmd+0x418>
     670:	adrp	x0, 0 <grub_extcmd_dispatcher>
     674:	add	x0, x0, #0x0
     678:	ldr	x0, [x0]
     67c:	bl	0 <grub_printf>
     680:	ldr	x0, [sp, #24]
     684:	ldr	x0, [x0]
     688:	cmp	x0, #0x0
     68c:	b.eq	710 <grub_unregister_extcmd+0x4a8>  // b.none
     690:	ldr	x0, [sp, #24]
     694:	ldr	x0, [x0]
     698:	mov	x1, x0
     69c:	adrp	x0, 0 <grub_extcmd_dispatcher>
     6a0:	add	x0, x0, #0x0
     6a4:	ldr	x0, [x0]
     6a8:	bl	0 <grub_printf>
     6ac:	ldr	x0, [sp, #24]
     6b0:	ldr	x0, [x0]
     6b4:	bl	0 <grub_strlen>
     6b8:	add	x1, x0, #0x2
     6bc:	ldr	w0, [sp, #44]
     6c0:	sub	w0, w0, w1
     6c4:	str	w0, [sp, #44]
     6c8:	ldr	x0, [sp, #24]
     6cc:	ldr	x0, [x0, #24]
     6d0:	cmp	x0, #0x0
     6d4:	b.eq	710 <grub_unregister_extcmd+0x4a8>  // b.none
     6d8:	ldr	x0, [sp, #24]
     6dc:	ldr	x0, [x0, #24]
     6e0:	mov	x1, x0
     6e4:	adrp	x0, 0 <grub_extcmd_dispatcher>
     6e8:	add	x0, x0, #0x0
     6ec:	ldr	x0, [x0]
     6f0:	bl	0 <grub_printf>
     6f4:	ldr	x0, [sp, #24]
     6f8:	ldr	x0, [x0, #24]
     6fc:	bl	0 <grub_strlen>
     700:	add	x1, x0, #0x1
     704:	ldr	w0, [sp, #44]
     708:	sub	w0, w0, w1
     70c:	str	w0, [sp, #44]
     710:	ldr	w0, [sp, #44]
     714:	cmp	w0, #0x0
     718:	b.gt	748 <grub_unregister_extcmd+0x4e0>
     71c:	mov	w0, #0x3                   	// #3
     720:	str	w0, [sp, #44]
     724:	b	748 <grub_unregister_extcmd+0x4e0>
     728:	adrp	x0, 0 <grub_extcmd_dispatcher>
     72c:	add	x0, x0, #0x0
     730:	ldr	x0, [x0]
     734:	ldr	x1, [x0]
     738:	adrp	x0, 0 <grub_extcmd_dispatcher>
     73c:	add	x0, x0, #0x0
     740:	ldr	x0, [x0]
     744:	blr	x1
     748:	ldr	w0, [sp, #44]
     74c:	sub	w1, w0, #0x1
     750:	str	w1, [sp, #44]
     754:	cmp	w0, #0x0
     758:	b.ne	728 <grub_unregister_extcmd+0x4c0>  // b.any
     75c:	ldr	x0, [sp, #24]
     760:	ldr	x0, [x0, #16]
     764:	str	x0, [sp, #32]
     768:	adrp	x0, 0 <grub_extcmd_dispatcher>
     76c:	add	x0, x0, #0x0
     770:	ldr	x0, [x0]
     774:	ldr	x1, [x0]
     778:	ldr	x0, [sp, #32]
     77c:	blr	x1
     780:	mov	x1, x0
     784:	adrp	x0, 0 <grub_extcmd_dispatcher>
     788:	add	x0, x0, #0x0
     78c:	ldr	x0, [x0]
     790:	bl	0 <grub_printf>
     794:	ldr	x0, [sp, #24]
     798:	add	x0, x0, #0x28
     79c:	str	x0, [sp, #24]
     7a0:	ldr	x0, [sp, #24]
     7a4:	ldr	x0, [x0, #16]
     7a8:	cmp	x0, #0x0
     7ac:	b.ne	598 <grub_unregister_extcmd+0x330>  // b.any
     7b0:	nop
     7b4:	nop
     7b8:	ldp	x29, x30, [sp], #48
     7bc:	ret
	...

0000000000000820 <grub_arg_show_help>:
     820:	stp	x29, x30, [sp, #-64]!
     824:	mov	x29, sp
     828:	str	x0, [sp, #24]
     82c:	str	wzr, [sp, #60]
     830:	str	wzr, [sp, #56]
     834:	ldr	x0, [sp, #24]
     838:	bl	4c8 <grub_unregister_extcmd+0x260>
     83c:	ldr	x0, [sp, #24]
     840:	ldr	x0, [x0]
     844:	ldr	x0, [x0, #56]
     848:	str	x0, [sp, #40]
     84c:	adrp	x0, 0 <grub_extcmd_dispatcher>
     850:	add	x0, x0, #0x0
     854:	ldr	x0, [x0]
     858:	ldr	x1, [x0]
     85c:	ldr	x0, [sp, #40]
     860:	blr	x1
     864:	mov	x1, x0
     868:	adrp	x0, 0 <grub_extcmd_dispatcher>
     86c:	add	x0, x0, #0x0
     870:	ldr	x0, [x0]
     874:	bl	0 <grub_printf>
     878:	ldr	x0, [sp, #24]
     87c:	ldr	x0, [x0, #16]
     880:	str	x0, [sp, #48]
     884:	b	8c8 <grub_arg_show_help+0xa8>
     888:	ldr	x0, [sp, #48]
     88c:	ldr	w0, [x0, #8]
     890:	cmp	w0, #0x68
     894:	b.eq	8a4 <grub_arg_show_help+0x84>  // b.none
     898:	cmp	w0, #0x75
     89c:	b.eq	8b0 <grub_arg_show_help+0x90>  // b.none
     8a0:	b	8bc <grub_arg_show_help+0x9c>
     8a4:	mov	w0, #0x1                   	// #1
     8a8:	str	w0, [sp, #60]
     8ac:	b	8bc <grub_arg_show_help+0x9c>
     8b0:	mov	w0, #0x1                   	// #1
     8b4:	str	w0, [sp, #56]
     8b8:	nop
     8bc:	ldr	x0, [sp, #48]
     8c0:	add	x0, x0, #0x28
     8c4:	str	x0, [sp, #48]
     8c8:	ldr	x0, [sp, #48]
     8cc:	cmp	x0, #0x0
     8d0:	b.eq	8e4 <grub_arg_show_help+0xc4>  // b.none
     8d4:	ldr	x0, [sp, #48]
     8d8:	ldr	x0, [x0, #16]
     8dc:	cmp	x0, #0x0
     8e0:	b.ne	888 <grub_arg_show_help+0x68>  // b.any
     8e4:	ldr	x0, [sp, #24]
     8e8:	ldr	x0, [x0, #16]
     8ec:	cmp	x0, #0x0
     8f0:	b.eq	908 <grub_arg_show_help+0xe8>  // b.none
     8f4:	ldr	x0, [sp, #24]
     8f8:	ldr	x0, [x0, #16]
     8fc:	ldr	w2, [sp, #56]
     900:	ldr	w1, [sp, #60]
     904:	bl	580 <grub_unregister_extcmd+0x318>
     908:	ldr	w2, [sp, #56]
     90c:	ldr	w1, [sp, #60]
     910:	adrp	x0, 0 <grub_extcmd_dispatcher>
     914:	add	x0, x0, #0x0
     918:	ldr	x0, [x0]
     91c:	bl	580 <grub_unregister_extcmd+0x318>
     920:	nop
     924:	ldp	x29, x30, [sp], #64
     928:	ret
     92c:	nop
	...
     948:	stp	x29, x30, [sp, #-64]!
     94c:	mov	x29, sp
     950:	str	x0, [sp, #40]
     954:	str	x1, [sp, #32]
     958:	str	x2, [sp, #24]
     95c:	str	x3, [sp, #16]
     960:	ldr	x1, [sp, #32]
     964:	adrp	x0, 0 <grub_extcmd_dispatcher>
     968:	add	x0, x0, #0x0
     96c:	ldr	x0, [x0]
     970:	cmp	x1, x0
     974:	b.ne	988 <grub_arg_show_help+0x168>  // b.any
     978:	ldr	x0, [sp, #40]
     97c:	bl	820 <grub_arg_show_help>
     980:	mov	w0, #0xffffffff            	// #-1
     984:	b	a9c <grub_arg_show_help+0x27c>
     988:	adrp	x0, 0 <grub_extcmd_dispatcher>
     98c:	add	x0, x0, #0x0
     990:	ldr	x0, [x0]
     994:	ldr	x1, [sp, #32]
     998:	cmp	x1, x0
     99c:	b.ne	9b0 <grub_arg_show_help+0x190>  // b.any
     9a0:	ldr	x0, [sp, #40]
     9a4:	bl	4c8 <grub_unregister_extcmd+0x260>
     9a8:	mov	w0, #0xffffffff            	// #-1
     9ac:	b	a9c <grub_arg_show_help+0x27c>
     9b0:	ldr	x0, [sp, #40]
     9b4:	ldr	x0, [x0, #16]
     9b8:	ldr	x1, [sp, #32]
     9bc:	sub	x0, x1, x0
     9c0:	asr	x1, x0, #3
     9c4:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
     9c8:	movk	x0, #0xcccd
     9cc:	mul	x0, x1, x0
     9d0:	str	w0, [sp, #60]
     9d4:	ldr	x0, [sp, #32]
     9d8:	ldr	w0, [x0, #12]
     9dc:	and	w0, w0, #0x4
     9e0:	cmp	w0, #0x0
     9e4:	b.eq	a68 <grub_arg_show_help+0x248>  // b.none
     9e8:	ldrsw	x0, [sp, #60]
     9ec:	lsl	x0, x0, #4
     9f0:	ldr	x1, [sp, #16]
     9f4:	add	x0, x1, x0
     9f8:	ldr	x2, [x0, #8]
     9fc:	ldrsw	x0, [sp, #60]
     a00:	lsl	x0, x0, #4
     a04:	ldr	x1, [sp, #16]
     a08:	add	x0, x1, x0
     a0c:	ldr	w1, [x0]
     a10:	add	w3, w1, #0x1
     a14:	str	w3, [x0]
     a18:	sxtw	x0, w1
     a1c:	lsl	x0, x0, #3
     a20:	add	x0, x2, x0
     a24:	ldr	x1, [sp, #24]
     a28:	str	x1, [x0]
     a2c:	ldrsw	x0, [sp, #60]
     a30:	lsl	x0, x0, #4
     a34:	ldr	x1, [sp, #16]
     a38:	add	x0, x1, x0
     a3c:	ldr	x1, [x0, #8]
     a40:	ldrsw	x0, [sp, #60]
     a44:	lsl	x0, x0, #4
     a48:	ldr	x2, [sp, #16]
     a4c:	add	x0, x2, x0
     a50:	ldr	w0, [x0]
     a54:	sxtw	x0, w0
     a58:	lsl	x0, x0, #3
     a5c:	add	x0, x1, x0
     a60:	str	xzr, [x0]
     a64:	b	a98 <grub_arg_show_help+0x278>
     a68:	ldrsw	x0, [sp, #60]
     a6c:	lsl	x0, x0, #4
     a70:	ldr	x1, [sp, #16]
     a74:	add	x0, x1, x0
     a78:	mov	w1, #0x1                   	// #1
     a7c:	str	w1, [x0]
     a80:	ldrsw	x0, [sp, #60]
     a84:	lsl	x0, x0, #4
     a88:	ldr	x1, [sp, #16]
     a8c:	add	x0, x1, x0
     a90:	ldr	x1, [sp, #24]
     a94:	str	x1, [x0, #8]
     a98:	mov	w0, #0x0                   	// #0
     a9c:	ldp	x29, x30, [sp], #64
     aa0:	ret
     aa4:	nop
	...
     ab8:	stp	x29, x30, [sp, #-64]!
     abc:	mov	x29, sp
     ac0:	str	x0, [sp, #40]
     ac4:	str	x1, [sp, #32]
     ac8:	str	x2, [sp, #24]
     acc:	ldr	x0, [sp, #40]
     ad0:	ldr	x0, [x0]
     ad4:	str	x0, [sp, #56]
     ad8:	ldr	x0, [sp, #40]
     adc:	ldr	x2, [x0]
     ae0:	ldr	x0, [sp, #32]
     ae4:	ldr	w0, [x0]
     ae8:	add	w1, w0, #0x1
     aec:	ldr	x0, [sp, #32]
     af0:	str	w1, [x0]
     af4:	ldr	x0, [sp, #32]
     af8:	ldr	w0, [x0]
     afc:	add	w0, w0, #0x1
     b00:	sxtw	x0, w0
     b04:	lsl	x0, x0, #3
     b08:	mov	x1, x0
     b0c:	mov	x0, x2
     b10:	bl	0 <grub_realloc>
     b14:	mov	x1, x0
     b18:	ldr	x0, [sp, #40]
     b1c:	str	x1, [x0]
     b20:	ldr	x0, [sp, #40]
     b24:	ldr	x0, [x0]
     b28:	cmp	x0, #0x0
     b2c:	b.ne	b4c <grub_arg_show_help+0x32c>  // b.any
     b30:	ldr	x0, [sp, #56]
     b34:	bl	0 <grub_free>
     b38:	adrp	x0, 0 <grub_extcmd_dispatcher>
     b3c:	add	x0, x0, #0x0
     b40:	ldr	x0, [x0]
     b44:	ldr	w0, [x0]
     b48:	b	b98 <grub_arg_show_help+0x378>
     b4c:	ldr	x0, [sp, #40]
     b50:	ldr	x1, [x0]
     b54:	ldr	x0, [sp, #32]
     b58:	ldr	w0, [x0]
     b5c:	sxtw	x0, w0
     b60:	lsl	x0, x0, #3
     b64:	sub	x0, x0, #0x8
     b68:	add	x0, x1, x0
     b6c:	ldr	x1, [sp, #24]
     b70:	str	x1, [x0]
     b74:	ldr	x0, [sp, #40]
     b78:	ldr	x1, [x0]
     b7c:	ldr	x0, [sp, #32]
     b80:	ldr	w0, [x0]
     b84:	sxtw	x0, w0
     b88:	lsl	x0, x0, #3
     b8c:	add	x0, x1, x0
     b90:	str	xzr, [x0]
     b94:	mov	w0, #0x0                   	// #0
     b98:	ldp	x29, x30, [sp], #64
     b9c:	ret
	...

0000000000000ba8 <grub_arg_parse>:
     ba8:	stp	x29, x30, [sp, #-144]!
     bac:	mov	x29, sp
     bb0:	str	x0, [sp, #56]
     bb4:	str	w1, [sp, #52]
     bb8:	str	x2, [sp, #40]
     bbc:	str	x3, [sp, #32]
     bc0:	str	x4, [sp, #24]
     bc4:	str	x5, [sp, #16]
     bc8:	str	xzr, [sp, #88]
     bcc:	str	wzr, [sp, #84]
     bd0:	str	wzr, [sp, #140]
     bd4:	b	121c <grub_arg_parse+0x674>
     bd8:	ldrsw	x0, [sp, #140]
     bdc:	lsl	x0, x0, #3
     be0:	ldr	x1, [sp, #40]
     be4:	add	x0, x1, x0
     be8:	ldr	x0, [x0]
     bec:	str	x0, [sp, #104]
     bf0:	str	xzr, [sp, #120]
     bf4:	ldr	w0, [sp, #84]
     bf8:	cmp	w0, #0x0
     bfc:	b.eq	c18 <grub_arg_parse+0x70>  // b.none
     c00:	ldr	x0, [sp, #56]
     c04:	ldr	x0, [x0]
     c08:	ldr	w0, [x0, #40]
     c0c:	and	w0, w0, #0x100
     c10:	cmp	w0, #0x0
     c14:	b.ne	c38 <grub_arg_parse+0x90>  // b.any
     c18:	ldr	x0, [sp, #104]
     c1c:	ldrb	w0, [x0]
     c20:	cmp	w0, #0x2d
     c24:	b.ne	c38 <grub_arg_parse+0x90>  // b.any
     c28:	ldr	x0, [sp, #104]
     c2c:	bl	0 <grub_strlen>
     c30:	cmp	x0, #0x1
     c34:	b.ne	c54 <grub_arg_parse+0xac>  // b.any
     c38:	add	x1, sp, #0x54
     c3c:	add	x0, sp, #0x58
     c40:	ldr	x2, [sp, #104]
     c44:	bl	ab8 <grub_arg_show_help+0x298>
     c48:	cmp	w0, #0x0
     c4c:	b.eq	11f4 <grub_arg_parse+0x64c>  // b.none
     c50:	b	1268 <grub_arg_parse+0x6c0>
     c54:	ldr	x0, [sp, #104]
     c58:	add	x0, x0, #0x1
     c5c:	ldrb	w0, [x0]
     c60:	cmp	w0, #0x2d
     c64:	b.eq	e64 <grub_arg_parse+0x2bc>  // b.none
     c68:	ldr	x0, [sp, #56]
     c6c:	ldr	x0, [x0]
     c70:	ldr	w0, [x0, #40]
     c74:	and	w0, w0, #0x80
     c78:	cmp	w0, #0x0
     c7c:	b.eq	d04 <grub_arg_parse+0x15c>  // b.none
     c80:	ldr	x0, [sp, #104]
     c84:	add	x0, x0, #0x1
     c88:	str	x0, [sp, #112]
     c8c:	b	cc0 <grub_arg_parse+0x118>
     c90:	ldr	x0, [sp, #56]
     c94:	ldr	x2, [x0, #16]
     c98:	ldr	x0, [sp, #112]
     c9c:	ldrb	w0, [x0]
     ca0:	mov	w1, w0
     ca4:	mov	x0, x2
     ca8:	bl	320 <grub_unregister_extcmd+0xb8>
     cac:	cmp	x0, #0x0
     cb0:	b.eq	cd4 <grub_arg_parse+0x12c>  // b.none
     cb4:	ldr	x0, [sp, #112]
     cb8:	add	x0, x0, #0x1
     cbc:	str	x0, [sp, #112]
     cc0:	ldr	x0, [sp, #112]
     cc4:	ldrb	w0, [x0]
     cc8:	cmp	w0, #0x0
     ccc:	b.ne	c90 <grub_arg_parse+0xe8>  // b.any
     cd0:	b	cd8 <grub_arg_parse+0x130>
     cd4:	nop
     cd8:	ldr	x0, [sp, #112]
     cdc:	ldrb	w0, [x0]
     ce0:	cmp	w0, #0x0
     ce4:	b.eq	d04 <grub_arg_parse+0x15c>  // b.none
     ce8:	add	x1, sp, #0x54
     cec:	add	x0, sp, #0x58
     cf0:	ldr	x2, [sp, #104]
     cf4:	bl	ab8 <grub_arg_show_help+0x298>
     cf8:	cmp	w0, #0x0
     cfc:	b.eq	11fc <grub_arg_parse+0x654>  // b.none
     d00:	b	1268 <grub_arg_parse+0x6c0>
     d04:	ldr	x0, [sp, #104]
     d08:	add	x0, x0, #0x1
     d0c:	str	x0, [sp, #112]
     d10:	ldr	x0, [sp, #56]
     d14:	ldr	x2, [x0, #16]
     d18:	ldr	x0, [sp, #112]
     d1c:	ldrb	w0, [x0]
     d20:	mov	w1, w0
     d24:	mov	x0, x2
     d28:	bl	320 <grub_unregister_extcmd+0xb8>
     d2c:	str	x0, [sp, #128]
     d30:	ldr	x0, [sp, #128]
     d34:	cmp	x0, #0x0
     d38:	b.ne	d74 <grub_arg_parse+0x1cc>  // b.any
     d3c:	mov	w0, #0x2d                  	// #45
     d40:	strb	w0, [sp, #80]
     d44:	ldr	x0, [sp, #112]
     d48:	ldrb	w0, [x0]
     d4c:	strb	w0, [sp, #81]
     d50:	strb	wzr, [sp, #82]
     d54:	add	x0, sp, #0x50
     d58:	mov	x2, x0
     d5c:	adrp	x0, 0 <grub_extcmd_dispatcher>
     d60:	add	x0, x0, #0x0
     d64:	ldr	x1, [x0]
     d68:	mov	w0, #0x12                  	// #18
     d6c:	bl	0 <grub_error>
     d70:	b	1268 <grub_arg_parse+0x6c0>
     d74:	ldr	x0, [sp, #112]
     d78:	add	x0, x0, #0x1
     d7c:	str	x0, [sp, #112]
     d80:	ldr	x0, [sp, #112]
     d84:	ldrb	w0, [x0]
     d88:	cmp	w0, #0x0
     d8c:	b.eq	dc8 <grub_arg_parse+0x220>  // b.none
     d90:	ldr	x3, [sp, #32]
     d94:	mov	x2, #0x0                   	// #0
     d98:	ldr	x1, [sp, #128]
     d9c:	ldr	x0, [sp, #56]
     da0:	bl	948 <grub_arg_show_help+0x128>
     da4:	cmp	w0, #0x0
     da8:	b.ne	124c <grub_arg_parse+0x6a4>  // b.any
     dac:	adrp	x0, 0 <grub_extcmd_dispatcher>
     db0:	add	x0, x0, #0x0
     db4:	ldr	x0, [x0]
     db8:	ldr	w0, [x0]
     dbc:	cmp	w0, #0x0
     dc0:	b.eq	d10 <grub_arg_parse+0x168>  // b.none
     dc4:	b	124c <grub_arg_parse+0x6a4>
     dc8:	ldr	x0, [sp, #128]
     dcc:	ldr	w0, [x0, #32]
     dd0:	cmp	w0, #0x0
     dd4:	b.eq	1038 <grub_arg_parse+0x490>  // b.none
     dd8:	ldr	w0, [sp, #140]
     ddc:	add	w0, w0, #0x1
     de0:	ldr	w1, [sp, #52]
     de4:	cmp	w1, w0
     de8:	b.le	1038 <grub_arg_parse+0x490>
     dec:	ldrsw	x0, [sp, #140]
     df0:	add	x0, x0, #0x1
     df4:	lsl	x0, x0, #3
     df8:	ldr	x1, [sp, #40]
     dfc:	add	x0, x1, x0
     e00:	ldr	x0, [x0]
     e04:	str	x0, [sp, #96]
     e08:	ldr	x0, [sp, #128]
     e0c:	ldr	w0, [x0, #12]
     e10:	and	w0, w0, #0x2
     e14:	cmp	w0, #0x0
     e18:	b.eq	e3c <grub_arg_parse+0x294>  // b.none
     e1c:	ldr	x0, [sp, #96]
     e20:	bl	0 <grub_strlen>
     e24:	cmp	x0, #0x1
     e28:	b.ls	e3c <grub_arg_parse+0x294>  // b.plast
     e2c:	ldr	x0, [sp, #96]
     e30:	ldrb	w0, [x0]
     e34:	cmp	w0, #0x2d
     e38:	b.eq	1038 <grub_arg_parse+0x490>  // b.none
     e3c:	ldr	w0, [sp, #140]
     e40:	add	w0, w0, #0x1
     e44:	str	w0, [sp, #140]
     e48:	ldrsw	x0, [sp, #140]
     e4c:	lsl	x0, x0, #3
     e50:	ldr	x1, [sp, #40]
     e54:	add	x0, x1, x0
     e58:	ldr	x0, [x0]
     e5c:	str	x0, [sp, #120]
     e60:	b	1038 <grub_arg_parse+0x490>
     e64:	ldr	x0, [sp, #104]
     e68:	bl	0 <grub_strlen>
     e6c:	cmp	x0, #0x2
     e70:	b.ne	ecc <grub_arg_parse+0x324>  // b.any
     e74:	ldr	w0, [sp, #140]
     e78:	add	w0, w0, #0x1
     e7c:	str	w0, [sp, #140]
     e80:	b	eb8 <grub_arg_parse+0x310>
     e84:	ldrsw	x0, [sp, #140]
     e88:	lsl	x0, x0, #3
     e8c:	ldr	x1, [sp, #40]
     e90:	add	x0, x1, x0
     e94:	ldr	x2, [x0]
     e98:	add	x1, sp, #0x54
     e9c:	add	x0, sp, #0x58
     ea0:	bl	ab8 <grub_arg_show_help+0x298>
     ea4:	cmp	w0, #0x0
     ea8:	b.ne	1254 <grub_arg_parse+0x6ac>  // b.any
     eac:	ldr	w0, [sp, #140]
     eb0:	add	w0, w0, #0x1
     eb4:	str	w0, [sp, #140]
     eb8:	ldr	w1, [sp, #140]
     ebc:	ldr	w0, [sp, #52]
     ec0:	cmp	w1, w0
     ec4:	b.lt	e84 <grub_arg_parse+0x2dc>  // b.tstop
     ec8:	b	122c <grub_arg_parse+0x684>
     ecc:	mov	w1, #0x3d                  	// #61
     ed0:	ldr	x0, [sp, #104]
     ed4:	bl	0 <grub_strchr>
     ed8:	str	x0, [sp, #120]
     edc:	ldr	x0, [sp, #120]
     ee0:	cmp	x0, #0x0
     ee4:	b.eq	f0c <grub_arg_parse+0x364>  // b.none
     ee8:	ldr	x1, [sp, #120]
     eec:	ldr	x0, [sp, #104]
     ef0:	sub	x0, x1, x0
     ef4:	sub	w0, w0, #0x2
     ef8:	str	w0, [sp, #136]
     efc:	ldr	x0, [sp, #120]
     f00:	add	x0, x0, #0x1
     f04:	str	x0, [sp, #120]
     f08:	b	f1c <grub_arg_parse+0x374>
     f0c:	ldr	x0, [sp, #104]
     f10:	bl	0 <grub_strlen>
     f14:	sub	w0, w0, #0x2
     f18:	str	w0, [sp, #136]
     f1c:	ldr	x0, [sp, #56]
     f20:	ldr	x3, [x0, #16]
     f24:	ldr	x0, [sp, #104]
     f28:	add	x0, x0, #0x2
     f2c:	ldr	w2, [sp, #136]
     f30:	mov	x1, x0
     f34:	mov	x0, x3
     f38:	bl	454 <grub_unregister_extcmd+0x1ec>
     f3c:	str	x0, [sp, #128]
     f40:	ldr	x0, [sp, #120]
     f44:	cmp	x0, #0x0
     f48:	b.ne	fd0 <grub_arg_parse+0x428>  // b.any
     f4c:	ldrsw	x0, [sp, #140]
     f50:	add	x0, x0, #0x1
     f54:	lsl	x0, x0, #3
     f58:	ldr	x1, [sp, #40]
     f5c:	add	x0, x1, x0
     f60:	ldr	x0, [x0]
     f64:	cmp	x0, #0x0
     f68:	b.eq	fd0 <grub_arg_parse+0x428>  // b.none
     f6c:	ldrsw	x0, [sp, #140]
     f70:	add	x0, x0, #0x1
     f74:	lsl	x0, x0, #3
     f78:	ldr	x1, [sp, #40]
     f7c:	add	x0, x1, x0
     f80:	ldr	x0, [x0]
     f84:	ldrb	w0, [x0]
     f88:	cmp	w0, #0x2d
     f8c:	b.eq	fd0 <grub_arg_parse+0x428>  // b.none
     f90:	ldr	x0, [sp, #128]
     f94:	cmp	x0, #0x0
     f98:	b.eq	fd0 <grub_arg_parse+0x428>  // b.none
     f9c:	ldr	x0, [sp, #128]
     fa0:	ldr	w0, [x0, #32]
     fa4:	cmp	w0, #0x0
     fa8:	b.eq	fd0 <grub_arg_parse+0x428>  // b.none
     fac:	ldr	w0, [sp, #140]
     fb0:	add	w0, w0, #0x1
     fb4:	str	w0, [sp, #140]
     fb8:	ldrsw	x0, [sp, #140]
     fbc:	lsl	x0, x0, #3
     fc0:	ldr	x1, [sp, #40]
     fc4:	add	x0, x1, x0
     fc8:	ldr	x0, [x0]
     fcc:	str	x0, [sp, #120]
     fd0:	ldr	x0, [sp, #128]
     fd4:	cmp	x0, #0x0
     fd8:	b.ne	1010 <grub_arg_parse+0x468>  // b.any
     fdc:	ldr	x0, [sp, #56]
     fe0:	ldr	x0, [x0]
     fe4:	ldr	w0, [x0, #40]
     fe8:	and	w0, w0, #0x80
     fec:	cmp	w0, #0x0
     ff0:	b.eq	1010 <grub_arg_parse+0x468>  // b.none
     ff4:	add	x1, sp, #0x54
     ff8:	add	x0, sp, #0x58
     ffc:	ldr	x2, [sp, #104]
    1000:	bl	ab8 <grub_arg_show_help+0x298>
    1004:	cmp	w0, #0x0
    1008:	b.eq	1204 <grub_arg_parse+0x65c>  // b.none
    100c:	b	1268 <grub_arg_parse+0x6c0>
    1010:	ldr	x0, [sp, #128]
    1014:	cmp	x0, #0x0
    1018:	b.ne	103c <grub_arg_parse+0x494>  // b.any
    101c:	ldr	x2, [sp, #104]
    1020:	adrp	x0, 0 <grub_extcmd_dispatcher>
    1024:	add	x0, x0, #0x0
    1028:	ldr	x1, [x0]
    102c:	mov	w0, #0x12                  	// #18
    1030:	bl	0 <grub_error>
    1034:	b	1268 <grub_arg_parse+0x6c0>
    1038:	nop
    103c:	ldr	x0, [sp, #128]
    1040:	ldr	w0, [x0, #32]
    1044:	cmp	w0, #0x0
    1048:	b.eq	1194 <grub_arg_parse+0x5ec>  // b.none
    104c:	ldr	x0, [sp, #120]
    1050:	cmp	x0, #0x0
    1054:	b.ne	106c <grub_arg_parse+0x4c4>  // b.any
    1058:	ldr	x0, [sp, #128]
    105c:	ldr	w0, [x0, #12]
    1060:	and	w0, w0, #0x2
    1064:	cmp	w0, #0x0
    1068:	b.ne	1194 <grub_arg_parse+0x5ec>  // b.any
    106c:	ldr	x0, [sp, #120]
    1070:	cmp	x0, #0x0
    1074:	b.ne	109c <grub_arg_parse+0x4f4>  // b.any
    1078:	ldr	x0, [sp, #128]
    107c:	ldr	x0, [x0]
    1080:	mov	x2, x0
    1084:	adrp	x0, 0 <grub_extcmd_dispatcher>
    1088:	add	x0, x0, #0x0
    108c:	ldr	x1, [x0]
    1090:	mov	w0, #0x12                  	// #18
    1094:	bl	0 <grub_error>
    1098:	b	1268 <grub_arg_parse+0x6c0>
    109c:	ldr	x0, [sp, #128]
    10a0:	ldr	w0, [x0, #32]
    10a4:	cmp	w0, #0x6
    10a8:	b.hi	115c <grub_arg_parse+0x5b4>  // b.pmore
    10ac:	cmp	w0, #0x3
    10b0:	b.cs	1148 <grub_arg_parse+0x5a0>  // b.hs, b.nlast
    10b4:	cmp	w0, #0x2
    10b8:	b.eq	10d4 <grub_arg_parse+0x52c>  // b.none
    10bc:	cmp	w0, #0x2
    10c0:	b.hi	115c <grub_arg_parse+0x5b4>  // b.pmore
    10c4:	cmp	w0, #0x0
    10c8:	b.eq	1150 <grub_arg_parse+0x5a8>  // b.none
    10cc:	cmp	w0, #0x1
    10d0:	b	115c <grub_arg_parse+0x5b4>
    10d4:	add	x0, sp, #0x48
    10d8:	mov	w2, #0x0                   	// #0
    10dc:	mov	x1, x0
    10e0:	ldr	x0, [sp, #120]
    10e4:	bl	0 <grub_strtoull>
    10e8:	ldr	x0, [sp, #72]
    10ec:	cmp	x0, #0x0
    10f0:	b.eq	112c <grub_arg_parse+0x584>  // b.none
    10f4:	ldr	x0, [sp, #72]
    10f8:	ldr	x1, [sp, #120]
    10fc:	cmp	x1, x0
    1100:	b.eq	112c <grub_arg_parse+0x584>  // b.none
    1104:	ldr	x0, [sp, #72]
    1108:	ldrb	w0, [x0]
    110c:	cmp	w0, #0x0
    1110:	b.ne	112c <grub_arg_parse+0x584>  // b.any
    1114:	adrp	x0, 0 <grub_extcmd_dispatcher>
    1118:	add	x0, x0, #0x0
    111c:	ldr	x0, [x0]
    1120:	ldr	w0, [x0]
    1124:	cmp	w0, #0x0
    1128:	b.eq	1158 <grub_arg_parse+0x5b0>  // b.none
    112c:	ldr	x2, [sp, #104]
    1130:	adrp	x0, 0 <grub_extcmd_dispatcher>
    1134:	add	x0, x0, #0x0
    1138:	ldr	x1, [x0]
    113c:	mov	w0, #0x12                  	// #18
    1140:	bl	0 <grub_error>
    1144:	b	1268 <grub_arg_parse+0x6c0>
    1148:	nop
    114c:	b	115c <grub_arg_parse+0x5b4>
    1150:	nop
    1154:	b	115c <grub_arg_parse+0x5b4>
    1158:	nop
    115c:	ldr	x3, [sp, #32]
    1160:	ldr	x2, [sp, #120]
    1164:	ldr	x1, [sp, #128]
    1168:	ldr	x0, [sp, #56]
    116c:	bl	948 <grub_arg_show_help+0x128>
    1170:	cmp	w0, #0x0
    1174:	b.ne	125c <grub_arg_parse+0x6b4>  // b.any
    1178:	adrp	x0, 0 <grub_extcmd_dispatcher>
    117c:	add	x0, x0, #0x0
    1180:	ldr	x0, [x0]
    1184:	ldr	w0, [x0]
    1188:	cmp	w0, #0x0
    118c:	b.eq	120c <grub_arg_parse+0x664>  // b.none
    1190:	b	125c <grub_arg_parse+0x6b4>
    1194:	ldr	x0, [sp, #120]
    1198:	cmp	x0, #0x0
    119c:	b.eq	11bc <grub_arg_parse+0x614>  // b.none
    11a0:	ldr	x2, [sp, #104]
    11a4:	adrp	x0, 0 <grub_extcmd_dispatcher>
    11a8:	add	x0, x0, #0x0
    11ac:	ldr	x1, [x0]
    11b0:	mov	w0, #0x12                  	// #18
    11b4:	bl	0 <grub_error>
    11b8:	b	1268 <grub_arg_parse+0x6c0>
    11bc:	ldr	x3, [sp, #32]
    11c0:	mov	x2, #0x0                   	// #0
    11c4:	ldr	x1, [sp, #128]
    11c8:	ldr	x0, [sp, #56]
    11cc:	bl	948 <grub_arg_show_help+0x128>
    11d0:	cmp	w0, #0x0
    11d4:	b.ne	1264 <grub_arg_parse+0x6bc>  // b.any
    11d8:	adrp	x0, 0 <grub_extcmd_dispatcher>
    11dc:	add	x0, x0, #0x0
    11e0:	ldr	x0, [x0]
    11e4:	ldr	w0, [x0]
    11e8:	cmp	w0, #0x0
    11ec:	b.ne	1264 <grub_arg_parse+0x6bc>  // b.any
    11f0:	b	1210 <grub_arg_parse+0x668>
    11f4:	nop
    11f8:	b	1210 <grub_arg_parse+0x668>
    11fc:	nop
    1200:	b	1210 <grub_arg_parse+0x668>
    1204:	nop
    1208:	b	1210 <grub_arg_parse+0x668>
    120c:	nop
    1210:	ldr	w0, [sp, #140]
    1214:	add	w0, w0, #0x1
    1218:	str	w0, [sp, #140]
    121c:	ldr	w1, [sp, #140]
    1220:	ldr	w0, [sp, #52]
    1224:	cmp	w1, w0
    1228:	b.lt	bd8 <grub_arg_parse+0x30>  // b.tstop
    122c:	ldr	x1, [sp, #88]
    1230:	ldr	x0, [sp, #24]
    1234:	str	x1, [x0]
    1238:	ldr	w1, [sp, #84]
    123c:	ldr	x0, [sp, #16]
    1240:	str	w1, [x0]
    1244:	mov	w0, #0x1                   	// #1
    1248:	b	126c <grub_arg_parse+0x6c4>
    124c:	nop
    1250:	b	1268 <grub_arg_parse+0x6c0>
    1254:	nop
    1258:	b	1268 <grub_arg_parse+0x6c0>
    125c:	nop
    1260:	b	1268 <grub_arg_parse+0x6c0>
    1264:	nop
    1268:	mov	w0, #0x0                   	// #0
    126c:	ldp	x29, x30, [sp], #144
    1270:	ret
    1274:	nop
	...

00000000000012a0 <grub_arg_list_alloc>:
    12a0:	stp	x29, x30, [sp, #-96]!
    12a4:	mov	x29, sp
    12a8:	str	x0, [sp, #40]
    12ac:	str	w1, [sp, #36]
    12b0:	str	x2, [sp, #24]
    12b4:	ldr	x0, [sp, #40]
    12b8:	ldr	x0, [x0, #16]
    12bc:	str	x0, [sp, #64]
    12c0:	ldr	x0, [sp, #64]
    12c4:	cmp	x0, #0x0
    12c8:	b.ne	12d4 <grub_arg_list_alloc+0x34>  // b.any
    12cc:	mov	x0, #0x0                   	// #0
    12d0:	b	1478 <grub_arg_list_alloc+0x1d8>
    12d4:	str	xzr, [sp, #72]
    12d8:	str	wzr, [sp, #92]
    12dc:	b	1338 <grub_arg_list_alloc+0x98>
    12e0:	ldrsw	x1, [sp, #92]
    12e4:	mov	x0, x1
    12e8:	lsl	x0, x0, #2
    12ec:	add	x0, x0, x1
    12f0:	lsl	x0, x0, #3
    12f4:	mov	x1, x0
    12f8:	ldr	x0, [sp, #64]
    12fc:	add	x0, x0, x1
    1300:	ldr	w0, [x0, #12]
    1304:	and	w0, w0, #0x4
    1308:	cmp	w0, #0x0
    130c:	b.eq	132c <grub_arg_list_alloc+0x8c>  // b.none
    1310:	ldrsw	x0, [sp, #36]
    1314:	add	x0, x0, #0x1
    1318:	lsr	x1, x0, #1
    131c:	ldr	x0, [sp, #72]
    1320:	add	x0, x1, x0
    1324:	add	x0, x0, #0x1
    1328:	str	x0, [sp, #72]
    132c:	ldr	w0, [sp, #92]
    1330:	add	w0, w0, #0x1
    1334:	str	w0, [sp, #92]
    1338:	ldrsw	x1, [sp, #92]
    133c:	mov	x0, x1
    1340:	lsl	x0, x0, #2
    1344:	add	x0, x0, x1
    1348:	lsl	x0, x0, #3
    134c:	mov	x1, x0
    1350:	ldr	x0, [sp, #64]
    1354:	add	x0, x0, x1
    1358:	ldr	x0, [x0, #16]
    135c:	cmp	x0, #0x0
    1360:	b.ne	12e0 <grub_arg_list_alloc+0x40>  // b.any
    1364:	ldrsw	x0, [sp, #92]
    1368:	lsl	x1, x0, #1
    136c:	ldr	x0, [sp, #72]
    1370:	add	x0, x1, x0
    1374:	lsl	x0, x0, #3
    1378:	bl	0 <grub_zalloc>
    137c:	str	x0, [sp, #56]
    1380:	ldr	x0, [sp, #56]
    1384:	cmp	x0, #0x0
    1388:	b.ne	1394 <grub_arg_list_alloc+0xf4>  // b.any
    138c:	mov	x0, #0x0                   	// #0
    1390:	b	1478 <grub_arg_list_alloc+0x1d8>
    1394:	ldrsw	x0, [sp, #92]
    1398:	lsl	x0, x0, #4
    139c:	ldr	x1, [sp, #56]
    13a0:	add	x0, x1, x0
    13a4:	str	x0, [sp, #80]
    13a8:	str	wzr, [sp, #92]
    13ac:	b	1448 <grub_arg_list_alloc+0x1a8>
    13b0:	ldrsw	x0, [sp, #92]
    13b4:	lsl	x0, x0, #4
    13b8:	ldr	x1, [sp, #56]
    13bc:	add	x0, x1, x0
    13c0:	str	wzr, [x0]
    13c4:	ldrsw	x0, [sp, #92]
    13c8:	lsl	x0, x0, #4
    13cc:	ldr	x1, [sp, #56]
    13d0:	add	x0, x1, x0
    13d4:	str	xzr, [x0, #8]
    13d8:	ldrsw	x1, [sp, #92]
    13dc:	mov	x0, x1
    13e0:	lsl	x0, x0, #2
    13e4:	add	x0, x0, x1
    13e8:	lsl	x0, x0, #3
    13ec:	mov	x1, x0
    13f0:	ldr	x0, [sp, #64]
    13f4:	add	x0, x0, x1
    13f8:	ldr	w0, [x0, #12]
    13fc:	and	w0, w0, #0x4
    1400:	cmp	w0, #0x0
    1404:	b.eq	143c <grub_arg_list_alloc+0x19c>  // b.none
    1408:	ldrsw	x0, [sp, #92]
    140c:	lsl	x0, x0, #4
    1410:	ldr	x1, [sp, #56]
    1414:	add	x0, x1, x0
    1418:	ldr	x1, [sp, #80]
    141c:	str	x1, [x0, #8]
    1420:	ldrsw	x0, [sp, #36]
    1424:	lsr	x0, x0, #1
    1428:	add	x0, x0, #0x1
    142c:	lsl	x0, x0, #3
    1430:	ldr	x1, [sp, #80]
    1434:	add	x0, x1, x0
    1438:	str	x0, [sp, #80]
    143c:	ldr	w0, [sp, #92]
    1440:	add	w0, w0, #0x1
    1444:	str	w0, [sp, #92]
    1448:	ldrsw	x1, [sp, #92]
    144c:	mov	x0, x1
    1450:	lsl	x0, x0, #2
    1454:	add	x0, x0, x1
    1458:	lsl	x0, x0, #3
    145c:	mov	x1, x0
    1460:	ldr	x0, [sp, #64]
    1464:	add	x0, x0, x1
    1468:	ldr	x0, [x0, #16]
    146c:	cmp	x0, #0x0
    1470:	b.ne	13b0 <grub_arg_list_alloc+0x110>  // b.any
    1474:	ldr	x0, [sp, #56]
    1478:	ldp	x29, x30, [sp], #96
    147c:	ret
