
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fnmatch.so_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000720 <.init>:
 720:	stp	x29, x30, [sp, #-16]!
 724:	mov	x29, sp
 728:	bl	7f0 <fprintf@plt+0x10>
 72c:	ldp	x29, x30, [sp], #16
 730:	ret

Disassembly of section .plt:

0000000000000740 <memcpy@plt-0x20>:
 740:	stp	x16, x30, [sp, #-16]!
 744:	adrp	x16, 11000 <dl_load@@Base+0x1073c>
 748:	ldr	x17, [x16, #4088]
 74c:	add	x16, x16, #0xff8
 750:	br	x17
 754:	nop
 758:	nop
 75c:	nop

0000000000000760 <memcpy@plt>:
 760:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 764:	ldr	x17, [x16]
 768:	add	x16, x16, #0x0
 76c:	br	x17

0000000000000770 <strlen@plt>:
 770:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 774:	ldr	x17, [x16, #8]
 778:	add	x16, x16, #0x8
 77c:	br	x17

0000000000000780 <exit@plt>:
 780:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 784:	ldr	x17, [x16, #16]
 788:	add	x16, x16, #0x10
 78c:	br	x17

0000000000000790 <__cxa_finalize@plt>:
 790:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 794:	ldr	x17, [x16, #24]
 798:	add	x16, x16, #0x18
 79c:	br	x17

00000000000007a0 <__gmon_start__@plt>:
 7a0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 7a4:	ldr	x17, [x16, #32]
 7a8:	add	x16, x16, #0x20
 7ac:	br	x17

00000000000007b0 <fwrite@plt>:
 7b0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 7b4:	ldr	x17, [x16, #40]
 7b8:	add	x16, x16, #0x28
 7bc:	br	x17

00000000000007c0 <fnmatch@plt>:
 7c0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 7c4:	ldr	x17, [x16, #48]
 7c8:	add	x16, x16, #0x30
 7cc:	br	x17

00000000000007d0 <dcgettext@plt>:
 7d0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 7d4:	ldr	x17, [x16, #56]
 7d8:	add	x16, x16, #0x38
 7dc:	br	x17

00000000000007e0 <fprintf@plt>:
 7e0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 7e4:	ldr	x17, [x16, #64]
 7e8:	add	x16, x16, #0x40
 7ec:	br	x17

Disassembly of section .text:

00000000000007f0 <dl_load@@Base-0xd4>:
 7f0:	adrp	x0, 11000 <dl_load@@Base+0x1073c>
 7f4:	ldr	x0, [x0, #4056]
 7f8:	cbz	x0, 800 <fprintf@plt+0x20>
 7fc:	b	7a0 <__gmon_start__@plt>
 800:	ret
 804:	nop
 808:	adrp	x0, 12000 <dl_load@@Base+0x1173c>
 80c:	add	x0, x0, #0x80
 810:	adrp	x1, 12000 <dl_load@@Base+0x1173c>
 814:	add	x1, x1, #0x80
 818:	cmp	x1, x0
 81c:	b.eq	834 <fprintf@plt+0x54>  // b.none
 820:	adrp	x1, 11000 <dl_load@@Base+0x1073c>
 824:	ldr	x1, [x1, #4032]
 828:	cbz	x1, 834 <fprintf@plt+0x54>
 82c:	mov	x16, x1
 830:	br	x16
 834:	ret
 838:	adrp	x0, 12000 <dl_load@@Base+0x1173c>
 83c:	add	x0, x0, #0x80
 840:	adrp	x1, 12000 <dl_load@@Base+0x1173c>
 844:	add	x1, x1, #0x80
 848:	sub	x1, x1, x0
 84c:	lsr	x2, x1, #63
 850:	add	x1, x2, x1, asr #3
 854:	cmp	xzr, x1, asr #1
 858:	asr	x1, x1, #1
 85c:	b.eq	874 <fprintf@plt+0x94>  // b.none
 860:	adrp	x2, 11000 <dl_load@@Base+0x1073c>
 864:	ldr	x2, [x2, #4064]
 868:	cbz	x2, 874 <fprintf@plt+0x94>
 86c:	mov	x16, x2
 870:	br	x16
 874:	ret
 878:	stp	x29, x30, [sp, #-32]!
 87c:	mov	x29, sp
 880:	str	x19, [sp, #16]
 884:	adrp	x19, 12000 <dl_load@@Base+0x1173c>
 888:	ldrb	w0, [x19, #128]
 88c:	cbnz	w0, 8b4 <fprintf@plt+0xd4>
 890:	adrp	x0, 11000 <dl_load@@Base+0x1073c>
 894:	ldr	x0, [x0, #4040]
 898:	cbz	x0, 8a8 <fprintf@plt+0xc8>
 89c:	adrp	x0, 12000 <dl_load@@Base+0x1173c>
 8a0:	ldr	x0, [x0, #72]
 8a4:	bl	790 <__cxa_finalize@plt>
 8a8:	bl	808 <fprintf@plt+0x28>
 8ac:	mov	w0, #0x1                   	// #1
 8b0:	strb	w0, [x19, #128]
 8b4:	ldr	x19, [sp, #16]
 8b8:	ldp	x29, x30, [sp], #32
 8bc:	ret
 8c0:	b	838 <fprintf@plt+0x58>

00000000000008c4 <dl_load@@Base>:
 8c4:	sub	sp, sp, #0xd0
 8c8:	stp	x28, x27, [sp, #128]
 8cc:	adrp	x28, 12000 <dl_load@@Base+0x1173c>
 8d0:	add	x28, x28, #0x88
 8d4:	stp	x29, x30, [sp, #112]
 8d8:	stp	x26, x25, [sp, #144]
 8dc:	stp	x24, x23, [sp, #160]
 8e0:	stp	x22, x21, [sp, #176]
 8e4:	stp	x20, x19, [sp, #192]
 8e8:	stp	x0, x1, [x28]
 8ec:	ldr	w8, [x0]
 8f0:	add	x29, sp, #0x70
 8f4:	cmp	w8, #0x2
 8f8:	b.ne	b98 <dl_load@@Base+0x2d4>  // b.any
 8fc:	ldr	w8, [x0, #4]
 900:	tbnz	w8, #31, b98 <dl_load@@Base+0x2d4>
 904:	adrp	x19, 12000 <dl_load@@Base+0x1173c>
 908:	ldr	x8, [x19, #80]
 90c:	cbz	x8, 934 <dl_load@@Base+0x70>
 910:	ldr	x9, [x0, #48]
 914:	adrp	x8, 0 <memcpy@plt-0x760>
 918:	add	x8, x8, #0xd4d
 91c:	adrp	x2, 12000 <dl_load@@Base+0x1173c>
 920:	add	x2, x2, #0x50
 924:	mov	x0, x1
 928:	mov	x1, x8
 92c:	blr	x9
 930:	cbz	w0, 93c <dl_load@@Base+0x78>
 934:	str	wzr, [sp, #12]
 938:	b	95c <dl_load@@Base+0x98>
 93c:	ldp	x8, x0, [x28]
 940:	ldr	x2, [x19, #80]
 944:	adrp	x1, 0 <memcpy@plt-0x760>
 948:	add	x1, x1, #0xd81
 94c:	ldr	x8, [x8, #104]
 950:	blr	x8
 954:	mov	w8, #0x1                   	// #1
 958:	str	w8, [sp, #12]
 95c:	ldp	x8, x0, [x28]
 960:	mov	w9, #0x1                   	// #1
 964:	adrp	x1, 0 <memcpy@plt-0x760>
 968:	adrp	x2, 0 <memcpy@plt-0x760>
 96c:	ldr	x8, [x8, #176]
 970:	str	w9, [sp, #48]
 974:	mov	x9, #0x3ff0000000000000    	// #4607182418800017408
 978:	add	x1, x1, #0xd4d
 97c:	add	x2, x2, #0xe3e
 980:	add	x3, sp, #0x30
 984:	str	x9, [sp, #56]
 988:	str	wzr, [sp, #64]
 98c:	blr	x8
 990:	mov	w20, wzr
 994:	cbnz	w0, 9c4 <dl_load@@Base+0x100>
 998:	ldp	x8, x19, [x28]
 99c:	adrp	x1, 0 <memcpy@plt-0x760>
 9a0:	add	x1, x1, #0xe4a
 9a4:	mov	w2, #0x5                   	// #5
 9a8:	ldr	x20, [x8, #104]
 9ac:	mov	x0, xzr
 9b0:	bl	7d0 <dcgettext@plt>
 9b4:	mov	x1, x0
 9b8:	mov	x0, x19
 9bc:	blr	x20
 9c0:	mov	w20, #0x1                   	// #1
 9c4:	ldp	x8, x0, [x28]
 9c8:	ldr	x8, [x8, #248]
 9cc:	blr	x8
 9d0:	adrp	x22, 0 <memcpy@plt-0x760>
 9d4:	mov	x19, x0
 9d8:	mov	x23, xzr
 9dc:	add	x22, x22, #0xed6
 9e0:	b	9f4 <dl_load@@Base+0x130>
 9e4:	ldr	x22, [x26, #16]
 9e8:	add	x23, x23, #0x10
 9ec:	cmp	x23, #0x60
 9f0:	b.eq	ae0 <dl_load@@Base+0x21c>  // b.none
 9f4:	ldp	x21, x26, [x28]
 9f8:	mov	x0, x22
 9fc:	bl	770 <strlen@plt>
 a00:	movi	v0.2d, #0x0
 a04:	mov	w8, #0x2                   	// #2
 a08:	stp	q0, q0, [x29, #-32]
 a0c:	stur	w8, [x29, #-32]
 a10:	stur	x0, [x29, #-16]
 a14:	ldr	x8, [x21, #280]
 a18:	add	x27, x0, #0x1
 a1c:	mov	x24, x0
 a20:	mov	x0, x27
 a24:	blr	x8
 a28:	mov	x25, x0
 a2c:	cbnz	x0, a50 <dl_load@@Base+0x18c>
 a30:	ldr	x8, [x21, #96]
 a34:	adrp	x1, 0 <memcpy@plt-0x760>
 a38:	adrp	x2, 0 <memcpy@plt-0x760>
 a3c:	mov	x0, x26
 a40:	add	x1, x1, #0xf0e
 a44:	add	x2, x2, #0xf2c
 a48:	mov	x3, x27
 a4c:	blr	x8
 a50:	mov	x0, x25
 a54:	mov	x1, x22
 a58:	mov	x2, x24
 a5c:	bl	760 <memcpy@plt>
 a60:	adrp	x8, 11000 <dl_load@@Base+0x1073c>
 a64:	add	x8, x8, #0xd58
 a68:	add	x26, x8, x23
 a6c:	ldr	s0, [x26, #8]
 a70:	strb	wzr, [x25, x24]
 a74:	mov	w8, #0x1                   	// #1
 a78:	str	w8, [sp, #48]
 a7c:	ldp	x8, x0, [x28]
 a80:	sxtl	v0.2d, v0.2s
 a84:	scvtf	d0, d0
 a88:	stur	x25, [x29, #-24]
 a8c:	str	wzr, [sp, #64]
 a90:	str	d0, [sp, #56]
 a94:	ldr	x8, [x8, #232]
 a98:	sub	x2, x29, #0x20
 a9c:	add	x3, sp, #0x30
 aa0:	mov	x1, x19
 aa4:	blr	x8
 aa8:	cbnz	w0, 9e4 <dl_load@@Base+0x120>
 aac:	ldp	x8, x24, [x28]
 ab0:	adrp	x1, 0 <memcpy@plt-0x760>
 ab4:	mov	w2, #0x5                   	// #5
 ab8:	mov	x0, xzr
 abc:	ldr	x21, [x8, #104]
 ac0:	add	x1, x1, #0xe7b
 ac4:	bl	7d0 <dcgettext@plt>
 ac8:	mov	x1, x0
 acc:	mov	x0, x24
 ad0:	mov	x2, x22
 ad4:	blr	x21
 ad8:	add	w20, w20, #0x1
 adc:	b	9e4 <dl_load@@Base+0x120>
 ae0:	ldp	x9, x0, [x28]
 ae4:	mov	w8, #0x5                   	// #5
 ae8:	str	w8, [sp, #16]
 aec:	str	x19, [sp, #24]
 af0:	ldr	x8, [x9, #176]
 af4:	adrp	x1, 0 <memcpy@plt-0x760>
 af8:	adrp	x2, 0 <memcpy@plt-0x760>
 afc:	add	x1, x1, #0xd4d
 b00:	add	x2, x2, #0xea8
 b04:	add	x3, sp, #0x10
 b08:	blr	x8
 b0c:	cbnz	w0, b3c <dl_load@@Base+0x278>
 b10:	ldp	x8, x19, [x28]
 b14:	adrp	x1, 0 <memcpy@plt-0x760>
 b18:	add	x1, x1, #0xeac
 b1c:	mov	w2, #0x5                   	// #5
 b20:	ldr	x21, [x8, #104]
 b24:	mov	x0, xzr
 b28:	bl	7d0 <dcgettext@plt>
 b2c:	mov	x1, x0
 b30:	mov	x0, x19
 b34:	blr	x21
 b38:	add	w20, w20, #0x1
 b3c:	ldr	w19, [sp, #12]
 b40:	cbz	w20, b5c <dl_load@@Base+0x298>
 b44:	ldp	x8, x0, [x28]
 b48:	adrp	x1, 0 <memcpy@plt-0x760>
 b4c:	add	x1, x1, #0xd9b
 b50:	ldr	x8, [x8, #104]
 b54:	blr	x8
 b58:	mov	w19, #0x1                   	// #1
 b5c:	ldp	x8, x0, [x28]
 b60:	adrp	x1, 0 <memcpy@plt-0x760>
 b64:	add	x1, x1, #0xf3a
 b68:	ldr	x8, [x8, #88]
 b6c:	blr	x8
 b70:	cmp	w19, #0x0
 b74:	ldp	x20, x19, [sp, #192]
 b78:	ldp	x22, x21, [sp, #176]
 b7c:	ldp	x24, x23, [sp, #160]
 b80:	ldp	x26, x25, [sp, #144]
 b84:	ldp	x28, x27, [sp, #128]
 b88:	ldp	x29, x30, [sp, #112]
 b8c:	cset	w0, eq  // eq = none
 b90:	add	sp, sp, #0xd0
 b94:	ret
 b98:	adrp	x19, 11000 <dl_load@@Base+0x1073c>
 b9c:	ldr	x19, [x19, #4048]
 ba0:	adrp	x0, 0 <memcpy@plt-0x760>
 ba4:	add	x0, x0, #0xd28
 ba8:	mov	w1, #0x25                  	// #37
 bac:	ldr	x3, [x19]
 bb0:	mov	w2, #0x1                   	// #1
 bb4:	bl	7b0 <fwrite@plt>
 bb8:	adrp	x8, 12000 <dl_load@@Base+0x1173c>
 bbc:	ldr	x8, [x8, #136]
 bc0:	ldr	x0, [x19]
 bc4:	adrp	x1, 0 <memcpy@plt-0x760>
 bc8:	add	x1, x1, #0xd4e
 bcc:	ldp	w4, w5, [x8]
 bd0:	mov	w2, #0x2                   	// #2
 bd4:	mov	w3, wzr
 bd8:	bl	7e0 <fprintf@plt>
 bdc:	mov	w0, #0x1                   	// #1
 be0:	bl	780 <exit@plt>
 be4:	sub	sp, sp, #0x90
 be8:	stp	x20, x19, [sp, #128]
 bec:	mov	w8, #0x1                   	// #1
 bf0:	mov	x9, #0xbff0000000000000    	// #-4616189618054758400
 bf4:	adrp	x20, 12000 <dl_load@@Base+0x1173c>
 bf8:	stp	x29, x30, [sp, #96]
 bfc:	str	wzr, [x1, #16]
 c00:	str	w8, [x1]
 c04:	str	x9, [x1, #8]
 c08:	add	x20, x20, #0x88
 c0c:	ldp	x8, x0, [x20]
 c10:	add	x29, sp, #0x60
 c14:	mov	x19, x1
 c18:	sub	x3, x29, #0x20
 c1c:	ldr	x8, [x8, #152]
 c20:	mov	w2, #0x2                   	// #2
 c24:	mov	x1, xzr
 c28:	str	x21, [sp, #112]
 c2c:	blr	x8
 c30:	ldr	x8, [x20]
 c34:	cbz	w0, ca8 <dl_load@@Base+0x3e4>
 c38:	ldr	x8, [x8, #152]
 c3c:	ldr	x0, [x20, #8]
 c40:	add	x3, sp, #0x20
 c44:	mov	w1, #0x1                   	// #1
 c48:	mov	w2, #0x2                   	// #2
 c4c:	blr	x8
 c50:	ldr	x8, [x20]
 c54:	cbz	w0, cc0 <dl_load@@Base+0x3fc>
 c58:	adrp	x9, 12000 <dl_load@@Base+0x1173c>
 c5c:	ldr	x8, [x8, #152]
 c60:	ldr	x0, [x9, #144]
 c64:	mov	x3, sp
 c68:	mov	w1, #0x2                   	// #2
 c6c:	mov	w2, #0x1                   	// #1
 c70:	mov	w21, #0x1                   	// #1
 c74:	blr	x8
 c78:	cbz	w0, cd8 <dl_load@@Base+0x414>
 c7c:	ldr	d0, [sp, #8]
 c80:	ldur	x0, [x29, #-24]
 c84:	ldr	x1, [sp, #40]
 c88:	fcvtzs	w8, d0
 c8c:	and	w2, w8, #0x1f
 c90:	bl	7c0 <fnmatch@plt>
 c94:	scvtf	d0, w0
 c98:	str	w21, [x19]
 c9c:	str	d0, [x19, #8]
 ca0:	str	wzr, [x19, #16]
 ca4:	b	d00 <dl_load@@Base+0x43c>
 ca8:	ldr	x21, [x8, #104]
 cac:	adrp	x8, 12000 <dl_load@@Base+0x1173c>
 cb0:	ldr	x20, [x8, #144]
 cb4:	adrp	x1, 0 <memcpy@plt-0x760>
 cb8:	add	x1, x1, #0xdcb
 cbc:	b	ce8 <dl_load@@Base+0x424>
 cc0:	ldr	x21, [x8, #104]
 cc4:	adrp	x8, 12000 <dl_load@@Base+0x1173c>
 cc8:	ldr	x20, [x8, #144]
 ccc:	adrp	x1, 0 <memcpy@plt-0x760>
 cd0:	add	x1, x1, #0xdf1
 cd4:	b	ce8 <dl_load@@Base+0x424>
 cd8:	ldp	x8, x20, [x20]
 cdc:	adrp	x1, 0 <memcpy@plt-0x760>
 ce0:	add	x1, x1, #0xe18
 ce4:	ldr	x21, [x8, #104]
 ce8:	mov	w2, #0x5                   	// #5
 cec:	mov	x0, xzr
 cf0:	bl	7d0 <dcgettext@plt>
 cf4:	mov	x1, x0
 cf8:	mov	x0, x20
 cfc:	blr	x21
 d00:	mov	x0, x19
 d04:	ldp	x20, x19, [sp, #128]
 d08:	ldr	x21, [sp, #112]
 d0c:	ldp	x29, x30, [sp, #96]
 d10:	add	sp, sp, #0x90
 d14:	ret

Disassembly of section .fini:

0000000000000d18 <.fini>:
 d18:	stp	x29, x30, [sp, #-16]!
 d1c:	mov	x29, sp
 d20:	ldp	x29, x30, [sp], #16
 d24:	ret
