
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-run-generator_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400d80 <_init>:
  400d80:	stp	x29, x30, [sp, #-16]!
  400d84:	mov	x29, sp
  400d88:	bl	400fe8 <call_weak_fn>
  400d8c:	ldp	x29, x30, [sp], #16
  400d90:	ret

Disassembly of section .plt:

0000000000400d98 <__libc_start_main@plt-0x20>:
  400d98:	stp	x16, x30, [sp, #-16]!
  400d9c:	adrp	x16, 41f000 <__FRAME_END__+0x1d0c8>
  400da0:	ldr	x17, [x16, #3848]
  400da4:	add	x16, x16, #0xf08
  400da8:	br	x17
  400dac:	nop
  400db0:	nop
  400db4:	nop

0000000000400db8 <__libc_start_main@plt>:
  400db8:	adrp	x16, 41f000 <__FRAME_END__+0x1d0c8>
  400dbc:	ldr	x17, [x16, #3856]
  400dc0:	add	x16, x16, #0xf10
  400dc4:	br	x17

0000000000400dc8 <abort@plt>:
  400dc8:	adrp	x16, 41f000 <__FRAME_END__+0x1d0c8>
  400dcc:	ldr	x17, [x16, #3864]
  400dd0:	add	x16, x16, #0xf18
  400dd4:	br	x17

0000000000400dd8 <__gmon_start__@plt>:
  400dd8:	adrp	x16, 41f000 <__FRAME_END__+0x1d0c8>
  400ddc:	ldr	x17, [x16, #3872]
  400de0:	add	x16, x16, #0xf20
  400de4:	br	x17

0000000000400de8 <strv_free@plt>:
  400de8:	adrp	x16, 41f000 <__FRAME_END__+0x1d0c8>
  400dec:	ldr	x17, [x16, #3880]
  400df0:	add	x16, x16, #0xf28
  400df4:	br	x17

0000000000400df8 <free@plt>:
  400df8:	adrp	x16, 41f000 <__FRAME_END__+0x1d0c8>
  400dfc:	ldr	x17, [x16, #3888]
  400e00:	add	x16, x16, #0xf30
  400e04:	br	x17

0000000000400e08 <log_setup_generator@plt>:
  400e08:	adrp	x16, 41f000 <__FRAME_END__+0x1d0c8>
  400e0c:	ldr	x17, [x16, #3896]
  400e10:	add	x16, x16, #0xf38
  400e14:	br	x17

0000000000400e18 <log_get_max_level_realm@plt>:
  400e18:	adrp	x16, 41f000 <__FRAME_END__+0x1d0c8>
  400e1c:	ldr	x17, [x16, #3904]
  400e20:	add	x16, x16, #0xf40
  400e24:	br	x17

0000000000400e28 <log_internal_realm@plt>:
  400e28:	adrp	x16, 41f000 <__FRAME_END__+0x1d0c8>
  400e2c:	ldr	x17, [x16, #3912]
  400e30:	add	x16, x16, #0xf48
  400e34:	br	x17

0000000000400e38 <log_assert_failed_realm@plt>:
  400e38:	adrp	x16, 41f000 <__FRAME_END__+0x1d0c8>
  400e3c:	ldr	x17, [x16, #3920]
  400e40:	add	x16, x16, #0xf50
  400e44:	br	x17

0000000000400e48 <proc_cmdline_parse@plt>:
  400e48:	adrp	x16, 41f000 <__FRAME_END__+0x1d0c8>
  400e4c:	ldr	x17, [x16, #3928]
  400e50:	add	x16, x16, #0xf58
  400e54:	br	x17

0000000000400e58 <ask_password_agent_close@plt>:
  400e58:	adrp	x16, 41f000 <__FRAME_END__+0x1d0c8>
  400e5c:	ldr	x17, [x16, #3936]
  400e60:	add	x16, x16, #0xf60
  400e64:	br	x17

0000000000400e68 <polkit_agent_close@plt>:
  400e68:	adrp	x16, 41f000 <__FRAME_END__+0x1d0c8>
  400e6c:	ldr	x17, [x16, #3944]
  400e70:	add	x16, x16, #0xf68
  400e74:	br	x17

0000000000400e78 <pager_close@plt>:
  400e78:	adrp	x16, 41f000 <__FRAME_END__+0x1d0c8>
  400e7c:	ldr	x17, [x16, #3952]
  400e80:	add	x16, x16, #0xf70
  400e84:	br	x17

0000000000400e88 <mac_selinux_finish@plt>:
  400e88:	adrp	x16, 41f000 <__FRAME_END__+0x1d0c8>
  400e8c:	ldr	x17, [x16, #3960]
  400e90:	add	x16, x16, #0xf78
  400e94:	br	x17

0000000000400e98 <proc_cmdline_key_streq@plt>:
  400e98:	adrp	x16, 41f000 <__FRAME_END__+0x1d0c8>
  400e9c:	ldr	x17, [x16, #3968]
  400ea0:	add	x16, x16, #0xf80
  400ea4:	br	x17

0000000000400ea8 <strv_extend@plt>:
  400ea8:	adrp	x16, 41f000 <__FRAME_END__+0x1d0c8>
  400eac:	ldr	x17, [x16, #3976]
  400eb0:	add	x16, x16, #0xf88
  400eb4:	br	x17

0000000000400eb8 <free_and_strdup@plt>:
  400eb8:	adrp	x16, 41f000 <__FRAME_END__+0x1d0c8>
  400ebc:	ldr	x17, [x16, #3984]
  400ec0:	add	x16, x16, #0xf90
  400ec4:	br	x17

0000000000400ec8 <log_oom_internal@plt>:
  400ec8:	adrp	x16, 41f000 <__FRAME_END__+0x1d0c8>
  400ecc:	ldr	x17, [x16, #3992]
  400ed0:	add	x16, x16, #0xf98
  400ed4:	br	x17

0000000000400ed8 <strlen@plt>:
  400ed8:	adrp	x16, 41f000 <__FRAME_END__+0x1d0c8>
  400edc:	ldr	x17, [x16, #4000]
  400ee0:	add	x16, x16, #0xfa0
  400ee4:	br	x17

0000000000400ee8 <stpcpy@plt>:
  400ee8:	adrp	x16, 41f000 <__FRAME_END__+0x1d0c8>
  400eec:	ldr	x17, [x16, #4008]
  400ef0:	add	x16, x16, #0xfa8
  400ef4:	br	x17

0000000000400ef8 <fopen64@plt>:
  400ef8:	adrp	x16, 41f000 <__FRAME_END__+0x1d0c8>
  400efc:	ldr	x17, [x16, #4016]
  400f00:	add	x16, x16, #0xfb0
  400f04:	br	x17

0000000000400f08 <fputs@plt>:
  400f08:	adrp	x16, 41f000 <__FRAME_END__+0x1d0c8>
  400f0c:	ldr	x17, [x16, #4024]
  400f10:	add	x16, x16, #0xfb8
  400f14:	br	x17

0000000000400f18 <strcmp_ptr@plt>:
  400f18:	adrp	x16, 41f000 <__FRAME_END__+0x1d0c8>
  400f1c:	ldr	x17, [x16, #4032]
  400f20:	add	x16, x16, #0xfc0
  400f24:	br	x17

0000000000400f28 <fprintf@plt>:
  400f28:	adrp	x16, 41f000 <__FRAME_END__+0x1d0c8>
  400f2c:	ldr	x17, [x16, #4040]
  400f30:	add	x16, x16, #0xfc8
  400f34:	br	x17

0000000000400f38 <strreplace@plt>:
  400f38:	adrp	x16, 41f000 <__FRAME_END__+0x1d0c8>
  400f3c:	ldr	x17, [x16, #4048]
  400f40:	add	x16, x16, #0xfd0
  400f44:	br	x17

0000000000400f48 <fflush_and_check@plt>:
  400f48:	adrp	x16, 41f000 <__FRAME_END__+0x1d0c8>
  400f4c:	ldr	x17, [x16, #4056]
  400f50:	add	x16, x16, #0xfd8
  400f54:	br	x17

0000000000400f58 <write_string_file_ts@plt>:
  400f58:	adrp	x16, 41f000 <__FRAME_END__+0x1d0c8>
  400f5c:	ldr	x17, [x16, #4064]
  400f60:	add	x16, x16, #0xfe0
  400f64:	br	x17

0000000000400f68 <symlink@plt>:
  400f68:	adrp	x16, 41f000 <__FRAME_END__+0x1d0c8>
  400f6c:	ldr	x17, [x16, #4072]
  400f70:	add	x16, x16, #0xfe8
  400f74:	br	x17

0000000000400f78 <__errno_location@plt>:
  400f78:	adrp	x16, 41f000 <__FRAME_END__+0x1d0c8>
  400f7c:	ldr	x17, [x16, #4080]
  400f80:	add	x16, x16, #0xff0
  400f84:	br	x17

0000000000400f88 <safe_fclose@plt>:
  400f88:	adrp	x16, 41f000 <__FRAME_END__+0x1d0c8>
  400f8c:	ldr	x17, [x16, #4088]
  400f90:	add	x16, x16, #0xff8
  400f94:	br	x17

Disassembly of section .text:

0000000000400f98 <_start>:
  400f98:	mov	x29, #0x0                   	// #0
  400f9c:	mov	x30, #0x0                   	// #0
  400fa0:	mov	x5, x0
  400fa4:	ldr	x1, [sp]
  400fa8:	add	x2, sp, #0x8
  400fac:	mov	x6, sp
  400fb0:	movz	x0, #0x0, lsl #48
  400fb4:	movk	x0, #0x0, lsl #32
  400fb8:	movk	x0, #0x40, lsl #16
  400fbc:	movk	x0, #0x10e4
  400fc0:	movz	x3, #0x0, lsl #48
  400fc4:	movk	x3, #0x0, lsl #32
  400fc8:	movk	x3, #0x40, lsl #16
  400fcc:	movk	x3, #0x18a8
  400fd0:	movz	x4, #0x0, lsl #48
  400fd4:	movk	x4, #0x0, lsl #32
  400fd8:	movk	x4, #0x40, lsl #16
  400fdc:	movk	x4, #0x1928
  400fe0:	bl	400db8 <__libc_start_main@plt>
  400fe4:	bl	400dc8 <abort@plt>

0000000000400fe8 <call_weak_fn>:
  400fe8:	adrp	x0, 41f000 <__FRAME_END__+0x1d0c8>
  400fec:	ldr	x0, [x0, #3808]
  400ff0:	cbz	x0, 400ff8 <call_weak_fn+0x10>
  400ff4:	b	400dd8 <__gmon_start__@plt>
  400ff8:	ret

0000000000400ffc <deregister_tm_clones>:
  400ffc:	adrp	x0, 420000 <completed.8445>
  401000:	add	x1, x0, #0x0
  401004:	adrp	x0, 420000 <completed.8445>
  401008:	add	x0, x0, #0x0
  40100c:	cmp	x1, x0
  401010:	b.eq	40103c <deregister_tm_clones+0x40>  // b.none
  401014:	sub	sp, sp, #0x10
  401018:	adrp	x1, 401000 <deregister_tm_clones+0x4>
  40101c:	ldr	x1, [x1, #2368]
  401020:	str	x1, [sp, #8]
  401024:	cbz	x1, 401034 <deregister_tm_clones+0x38>
  401028:	mov	x16, x1
  40102c:	add	sp, sp, #0x10
  401030:	br	x16
  401034:	add	sp, sp, #0x10
  401038:	ret
  40103c:	ret

0000000000401040 <register_tm_clones>:
  401040:	adrp	x0, 420000 <completed.8445>
  401044:	add	x1, x0, #0x0
  401048:	adrp	x0, 420000 <completed.8445>
  40104c:	add	x0, x0, #0x0
  401050:	sub	x1, x1, x0
  401054:	mov	x2, #0x2                   	// #2
  401058:	asr	x1, x1, #3
  40105c:	sdiv	x1, x1, x2
  401060:	cbz	x1, 40108c <register_tm_clones+0x4c>
  401064:	sub	sp, sp, #0x10
  401068:	adrp	x2, 401000 <deregister_tm_clones+0x4>
  40106c:	ldr	x2, [x2, #2376]
  401070:	str	x2, [sp, #8]
  401074:	cbz	x2, 401084 <register_tm_clones+0x44>
  401078:	mov	x16, x2
  40107c:	add	sp, sp, #0x10
  401080:	br	x16
  401084:	add	sp, sp, #0x10
  401088:	ret
  40108c:	ret

0000000000401090 <__do_global_dtors_aux>:
  401090:	stp	x29, x30, [sp, #-32]!
  401094:	mov	x29, sp
  401098:	str	x19, [sp, #16]
  40109c:	adrp	x19, 420000 <completed.8445>
  4010a0:	ldrb	w0, [x19]
  4010a4:	cbnz	w0, 4010b4 <__do_global_dtors_aux+0x24>
  4010a8:	bl	400ffc <deregister_tm_clones>
  4010ac:	mov	w0, #0x1                   	// #1
  4010b0:	strb	w0, [x19]
  4010b4:	ldr	x19, [sp, #16]
  4010b8:	ldp	x29, x30, [sp], #32
  4010bc:	ret

00000000004010c0 <frame_dummy>:
  4010c0:	b	401040 <register_tm_clones>

00000000004010c4 <__unique_prefix_static_destructor_wrapper0>:
  4010c4:	ldr	x0, [x0]
  4010c8:	cbz	x0, 4010d0 <__unique_prefix_static_destructor_wrapper0+0xc>
  4010cc:	b	400de8 <strv_free@plt>
  4010d0:	ret

00000000004010d4 <__unique_prefix_static_destructor_wrapper1>:
  4010d4:	ldr	x0, [x0]
  4010d8:	b	400df8 <free@plt>

00000000004010dc <__unique_prefix_static_destructor_wrapper2>:
  4010dc:	ldr	x0, [x0]
  4010e0:	b	400df8 <free@plt>

00000000004010e4 <main>:
  4010e4:	stp	x29, x30, [sp, #-48]!
  4010e8:	adrp	x8, 420000 <completed.8445>
  4010ec:	adrp	x9, 420000 <completed.8445>
  4010f0:	str	x21, [sp, #16]
  4010f4:	stp	x20, x19, [sp, #32]
  4010f8:	mov	x29, sp
  4010fc:	mov	x19, x1
  401100:	mov	w20, w0
  401104:	str	w0, [x8, #40]
  401108:	str	x1, [x9, #48]
  40110c:	bl	400e08 <log_setup_generator@plt>
  401110:	cmp	w20, #0x2
  401114:	b.lt	401168 <main+0x84>  // b.tstop
  401118:	cmp	w20, #0x4
  40111c:	b.eq	401168 <main+0x84>  // b.none
  401120:	mov	w0, wzr
  401124:	bl	400e18 <log_get_max_level_realm@plt>
  401128:	cmp	w0, #0x3
  40112c:	b.lt	401268 <main+0x184>  // b.tstop
  401130:	ldp	x20, x19, [sp, #32]
  401134:	ldr	x21, [sp, #16]
  401138:	adrp	x2, 401000 <deregister_tm_clones+0x4>
  40113c:	adrp	x4, 401000 <deregister_tm_clones+0x4>
  401140:	adrp	x5, 401000 <deregister_tm_clones+0x4>
  401144:	mov	w1, #0x16                  	// #22
  401148:	add	x2, x2, #0x953
  40114c:	add	x4, x4, #0x975
  401150:	add	x5, x5, #0x97a
  401154:	mov	w0, #0x3                   	// #3
  401158:	movk	w1, #0x4000, lsl #16
  40115c:	mov	w3, #0x8a                  	// #138
  401160:	ldp	x29, x30, [sp], #48
  401164:	b	400e28 <log_internal_realm@plt>
  401168:	cmp	w20, #0x1
  40116c:	b.le	4011a4 <main+0xc0>
  401170:	ldr	x8, [x19, #8]
  401174:	adrp	x9, 420000 <completed.8445>
  401178:	str	x8, [x9, #32]
  40117c:	cbnz	x8, 4011b4 <main+0xd0>
  401180:	adrp	x1, 401000 <deregister_tm_clones+0x4>
  401184:	adrp	x2, 401000 <deregister_tm_clones+0x4>
  401188:	adrp	x4, 401000 <deregister_tm_clones+0x4>
  40118c:	add	x1, x1, #0x9ab
  401190:	add	x2, x2, #0x953
  401194:	add	x4, x4, #0x9bb
  401198:	mov	w3, #0x81                  	// #129
  40119c:	mov	w0, wzr
  4011a0:	bl	400e38 <log_assert_failed_realm@plt>
  4011a4:	adrp	x9, 401000 <deregister_tm_clones+0x4>
  4011a8:	adrp	x8, 420000 <completed.8445>
  4011ac:	add	x9, x9, #0x9a6
  4011b0:	str	x9, [x8, #32]
  4011b4:	adrp	x0, 401000 <deregister_tm_clones+0x4>
  4011b8:	add	x0, x0, #0x27c
  4011bc:	mov	w2, #0x5                   	// #5
  4011c0:	mov	x1, xzr
  4011c4:	bl	400e48 <proc_cmdline_parse@plt>
  4011c8:	tbz	w0, #31, 401208 <main+0x124>
  4011cc:	mov	w19, w0
  4011d0:	mov	w0, wzr
  4011d4:	bl	400e18 <log_get_max_level_realm@plt>
  4011d8:	cmp	w0, #0x4
  4011dc:	b.lt	401208 <main+0x124>  // b.tstop
  4011e0:	adrp	x2, 401000 <deregister_tm_clones+0x4>
  4011e4:	adrp	x4, 401000 <deregister_tm_clones+0x4>
  4011e8:	adrp	x5, 401000 <deregister_tm_clones+0x4>
  4011ec:	add	x2, x2, #0x953
  4011f0:	add	x4, x4, #0x9ed
  4011f4:	add	x5, x5, #0x9f1
  4011f8:	mov	w0, #0x4                   	// #4
  4011fc:	mov	w3, #0x85                  	// #133
  401200:	mov	w1, w19
  401204:	bl	400e28 <log_internal_realm@plt>
  401208:	bl	4013b0 <generate>
  40120c:	mov	w19, w0
  401210:	bl	400e58 <ask_password_agent_close@plt>
  401214:	bl	400e68 <polkit_agent_close@plt>
  401218:	bl	400e78 <pager_close@plt>
  40121c:	bl	400e88 <mac_selinux_finish@plt>
  401220:	adrp	x8, 41f000 <__FRAME_END__+0x1d0c8>
  401224:	ldr	x8, [x8, #3816]
  401228:	adrp	x20, 41f000 <__FRAME_END__+0x1d0c8>
  40122c:	ldr	x20, [x20, #3824]
  401230:	add	x9, x8, #0x7
  401234:	and	x21, x9, #0xfffffffffffffff8
  401238:	cmp	x21, x20
  40123c:	cset	w9, cs  // cs = hs, nlast
  401240:	cmp	x8, #0x0
  401244:	cset	w8, eq  // eq = none
  401248:	orr	w8, w8, w9
  40124c:	tbnz	w8, #0, 401260 <main+0x17c>
  401250:	ldp	x0, x8, [x21], #16
  401254:	blr	x8
  401258:	cmp	x21, x20
  40125c:	b.cc	401250 <main+0x16c>  // b.lo, b.ul, b.last
  401260:	lsr	w0, w19, #31
  401264:	b	40126c <main+0x188>
  401268:	mov	w0, #0xffffffea            	// #-22
  40126c:	ldp	x20, x19, [sp, #32]
  401270:	ldr	x21, [sp, #16]
  401274:	ldp	x29, x30, [sp], #48
  401278:	ret

000000000040127c <parse>:
  40127c:	stp	x29, x30, [sp, #-32]!
  401280:	stp	x20, x19, [sp, #16]
  401284:	mov	x20, x1
  401288:	adrp	x1, 401000 <deregister_tm_clones+0x4>
  40128c:	add	x1, x1, #0xa23
  401290:	mov	x29, sp
  401294:	mov	x19, x0
  401298:	bl	400e98 <proc_cmdline_key_streq@plt>
  40129c:	tbz	w0, #0, 4012d0 <parse+0x54>
  4012a0:	cbz	x20, 401364 <parse+0xe8>
  4012a4:	adrp	x0, 420000 <completed.8445>
  4012a8:	add	x0, x0, #0x8
  4012ac:	mov	x1, x20
  4012b0:	bl	400ea8 <strv_extend@plt>
  4012b4:	tbz	w0, #31, 4013a0 <parse+0x124>
  4012b8:	adrp	x1, 401000 <deregister_tm_clones+0x4>
  4012bc:	adrp	x3, 401000 <deregister_tm_clones+0x4>
  4012c0:	add	x1, x1, #0x953
  4012c4:	add	x3, x3, #0xa2f
  4012c8:	mov	w2, #0x22                  	// #34
  4012cc:	b	401354 <parse+0xd8>
  4012d0:	adrp	x1, 401000 <deregister_tm_clones+0x4>
  4012d4:	add	x1, x1, #0xa35
  4012d8:	mov	x0, x19
  4012dc:	bl	400e98 <proc_cmdline_key_streq@plt>
  4012e0:	tbz	w0, #0, 401314 <parse+0x98>
  4012e4:	cbz	x20, 401364 <parse+0xe8>
  4012e8:	adrp	x0, 420000 <completed.8445>
  4012ec:	add	x0, x0, #0x10
  4012f0:	mov	x1, x20
  4012f4:	bl	400eb8 <free_and_strdup@plt>
  4012f8:	tbz	w0, #31, 4013a0 <parse+0x124>
  4012fc:	adrp	x1, 401000 <deregister_tm_clones+0x4>
  401300:	adrp	x3, 401000 <deregister_tm_clones+0x4>
  401304:	add	x1, x1, #0x953
  401308:	add	x3, x3, #0xa2f
  40130c:	mov	w2, #0x2a                  	// #42
  401310:	b	401354 <parse+0xd8>
  401314:	adrp	x1, 401000 <deregister_tm_clones+0x4>
  401318:	add	x1, x1, #0xa50
  40131c:	mov	x0, x19
  401320:	bl	400e98 <proc_cmdline_key_streq@plt>
  401324:	tbz	w0, #0, 4013a0 <parse+0x124>
  401328:	cbz	x20, 401364 <parse+0xe8>
  40132c:	adrp	x0, 420000 <completed.8445>
  401330:	add	x0, x0, #0x18
  401334:	mov	x1, x20
  401338:	bl	400eb8 <free_and_strdup@plt>
  40133c:	tbz	w0, #31, 4013a0 <parse+0x124>
  401340:	adrp	x1, 401000 <deregister_tm_clones+0x4>
  401344:	adrp	x3, 401000 <deregister_tm_clones+0x4>
  401348:	add	x1, x1, #0x953
  40134c:	add	x3, x3, #0xa2f
  401350:	mov	w2, #0x32                  	// #50
  401354:	ldp	x20, x19, [sp, #16]
  401358:	mov	w0, wzr
  40135c:	ldp	x29, x30, [sp], #32
  401360:	b	400ec8 <log_oom_internal@plt>
  401364:	mov	w0, wzr
  401368:	bl	400e18 <log_get_max_level_realm@plt>
  40136c:	cmp	w0, #0x4
  401370:	b.lt	4013a0 <parse+0x124>  // b.tstop
  401374:	adrp	x2, 401000 <deregister_tm_clones+0x4>
  401378:	adrp	x4, 401000 <deregister_tm_clones+0x4>
  40137c:	adrp	x5, 401000 <deregister_tm_clones+0x4>
  401380:	add	x2, x2, #0xa6e
  401384:	add	x4, x4, #0xa87
  401388:	add	x5, x5, #0xaa2
  40138c:	mov	w0, #0x4                   	// #4
  401390:	mov	w3, #0x21                  	// #33
  401394:	mov	w1, wzr
  401398:	mov	x6, x19
  40139c:	bl	400e28 <log_internal_realm@plt>
  4013a0:	ldp	x20, x19, [sp, #16]
  4013a4:	mov	w0, wzr
  4013a8:	ldp	x29, x30, [sp], #32
  4013ac:	ret

00000000004013b0 <generate>:
  4013b0:	stp	x29, x30, [sp, #-80]!
  4013b4:	stp	x26, x25, [sp, #16]
  4013b8:	stp	x24, x23, [sp, #32]
  4013bc:	stp	x22, x21, [sp, #48]
  4013c0:	stp	x20, x19, [sp, #64]
  4013c4:	mov	x29, sp
  4013c8:	sub	sp, sp, #0x10
  4013cc:	adrp	x22, 420000 <completed.8445>
  4013d0:	ldr	x8, [x22, #8]
  4013d4:	cbz	x8, 4013e8 <generate+0x38>
  4013d8:	ldr	x8, [x8]
  4013dc:	cmp	x8, #0x0
  4013e0:	cset	w8, eq  // eq = none
  4013e4:	b	4013ec <generate+0x3c>
  4013e8:	mov	w8, #0x1                   	// #1
  4013ec:	adrp	x21, 420000 <completed.8445>
  4013f0:	ldr	x9, [x21, #16]
  4013f4:	cbnz	x9, 401408 <generate+0x58>
  4013f8:	cbz	w8, 401408 <generate+0x58>
  4013fc:	mov	x19, xzr
  401400:	mov	w21, wzr
  401404:	b	401814 <generate+0x464>
  401408:	adrp	x25, 420000 <completed.8445>
  40140c:	ldr	x9, [x25, #32]
  401410:	adrp	x10, 401000 <deregister_tm_clones+0x4>
  401414:	mov	x19, xzr
  401418:	mov	x8, xzr
  40141c:	add	x10, x10, #0xae1
  401420:	sub	x20, x29, #0x10
  401424:	stp	x9, x10, [x29, #-16]
  401428:	ldr	x0, [x20, x8, lsl #3]
  40142c:	cbz	x0, 401444 <generate+0x94>
  401430:	mov	x23, x8
  401434:	bl	400ed8 <strlen@plt>
  401438:	add	x19, x0, x19
  40143c:	mov	w8, #0x1                   	// #1
  401440:	cbz	x23, 401428 <generate+0x78>
  401444:	add	x8, x19, #0x1
  401448:	cmp	x8, #0x400, lsl #12
  40144c:	b.hi	401844 <generate+0x494>  // b.pmore
  401450:	add	x8, x8, #0xf
  401454:	mov	x9, sp
  401458:	and	x8, x8, #0xfffffffffffffff0
  40145c:	sub	x20, x9, x8
  401460:	mov	sp, x20
  401464:	mov	x8, xzr
  401468:	sub	x19, x29, #0x10
  40146c:	mov	x0, x20
  401470:	ldr	x1, [x19, x8, lsl #3]
  401474:	cbz	x1, 401488 <generate+0xd8>
  401478:	mov	x23, x8
  40147c:	bl	400ee8 <stpcpy@plt>
  401480:	mov	w8, #0x1                   	// #1
  401484:	cbz	x23, 401470 <generate+0xc0>
  401488:	adrp	x1, 401000 <deregister_tm_clones+0x4>
  40148c:	strb	wzr, [x0]
  401490:	add	x1, x1, #0xb30
  401494:	mov	x0, x20
  401498:	bl	400ef8 <fopen64@plt>
  40149c:	cbz	x0, 401708 <generate+0x358>
  4014a0:	mov	x19, x0
  4014a4:	adrp	x0, 401000 <deregister_tm_clones+0x4>
  4014a8:	add	x0, x0, #0xb5f
  4014ac:	mov	x1, x19
  4014b0:	bl	400f08 <fputs@plt>
  4014b4:	ldr	x21, [x21, #16]
  4014b8:	adrp	x1, 401000 <deregister_tm_clones+0x4>
  4014bc:	add	x1, x1, #0xc0c
  4014c0:	mov	x0, x21
  4014c4:	bl	400f18 <strcmp_ptr@plt>
  4014c8:	adrp	x23, 401000 <deregister_tm_clones+0x4>
  4014cc:	add	x23, x23, #0xc23
  4014d0:	cbz	w0, 4014ec <generate+0x13c>
  4014d4:	cmp	x21, #0x0
  4014d8:	adrp	x1, 401000 <deregister_tm_clones+0x4>
  4014dc:	csel	x2, x23, x21, eq  // eq = none
  4014e0:	add	x1, x1, #0xc11
  4014e4:	mov	x0, x19
  4014e8:	bl	400f28 <fprintf@plt>
  4014ec:	adrp	x8, 420000 <completed.8445>
  4014f0:	ldr	x21, [x8, #24]
  4014f4:	adrp	x1, 401000 <deregister_tm_clones+0x4>
  4014f8:	add	x1, x1, #0xc0c
  4014fc:	mov	x0, x21
  401500:	bl	400f18 <strcmp_ptr@plt>
  401504:	cbz	w0, 401520 <generate+0x170>
  401508:	cmp	x21, #0x0
  40150c:	adrp	x1, 401000 <deregister_tm_clones+0x4>
  401510:	csel	x2, x23, x21, eq  // eq = none
  401514:	add	x1, x1, #0xc28
  401518:	mov	x0, x19
  40151c:	bl	400f28 <fprintf@plt>
  401520:	adrp	x0, 401000 <deregister_tm_clones+0x4>
  401524:	add	x0, x0, #0xc3a
  401528:	mov	x1, x19
  40152c:	bl	400f08 <fputs@plt>
  401530:	ldr	x8, [x22, #8]
  401534:	cbz	x8, 401590 <generate+0x1e0>
  401538:	ldr	x0, [x8]
  40153c:	cbz	x0, 401590 <generate+0x1e0>
  401540:	adrp	x21, 401000 <deregister_tm_clones+0x4>
  401544:	adrp	x22, 401000 <deregister_tm_clones+0x4>
  401548:	adrp	x23, 401000 <deregister_tm_clones+0x4>
  40154c:	add	x26, x8, #0x8
  401550:	add	x21, x21, #0xe1b
  401554:	add	x22, x22, #0xe1d
  401558:	add	x23, x23, #0xc72
  40155c:	mov	x1, x21
  401560:	mov	x2, x22
  401564:	bl	400f38 <strreplace@plt>
  401568:	cbz	x0, 4017a4 <generate+0x3f4>
  40156c:	mov	x24, x0
  401570:	mov	x0, x19
  401574:	mov	x1, x23
  401578:	mov	x2, x24
  40157c:	bl	400f28 <fprintf@plt>
  401580:	mov	x0, x24
  401584:	bl	400df8 <free@plt>
  401588:	ldr	x0, [x26], #8
  40158c:	cbnz	x0, 40155c <generate+0x1ac>
  401590:	mov	x0, x19
  401594:	bl	400f48 <fflush_and_check@plt>
  401598:	tbnz	w0, #31, 401758 <generate+0x3a8>
  40159c:	ldr	x9, [x25, #32]
  4015a0:	adrp	x10, 401000 <deregister_tm_clones+0x4>
  4015a4:	mov	x20, xzr
  4015a8:	mov	x8, xzr
  4015ac:	add	x10, x10, #0xca1
  4015b0:	sub	x21, x29, #0x10
  4015b4:	stp	x9, x10, [x29, #-16]
  4015b8:	ldr	x0, [x21, x8, lsl #3]
  4015bc:	cbz	x0, 4015d4 <generate+0x224>
  4015c0:	mov	x22, x8
  4015c4:	bl	400ed8 <strlen@plt>
  4015c8:	add	x20, x0, x20
  4015cc:	mov	w8, #0x1                   	// #1
  4015d0:	cbz	x22, 4015b8 <generate+0x208>
  4015d4:	add	x8, x20, #0x1
  4015d8:	cmp	x8, #0x400, lsl #12
  4015dc:	b.hi	401864 <generate+0x4b4>  // b.pmore
  4015e0:	add	x8, x8, #0xf
  4015e4:	mov	x9, sp
  4015e8:	and	x8, x8, #0xfffffffffffffff0
  4015ec:	sub	x20, x9, x8
  4015f0:	mov	sp, x20
  4015f4:	mov	x8, xzr
  4015f8:	sub	x21, x29, #0x10
  4015fc:	mov	x0, x20
  401600:	ldr	x1, [x21, x8, lsl #3]
  401604:	cbz	x1, 401618 <generate+0x268>
  401608:	mov	x22, x8
  40160c:	bl	400ee8 <stpcpy@plt>
  401610:	mov	w8, #0x1                   	// #1
  401614:	cbz	x22, 401600 <generate+0x250>
  401618:	adrp	x1, 401000 <deregister_tm_clones+0x4>
  40161c:	strb	wzr, [x0]
  401620:	add	x1, x1, #0xcbd
  401624:	mov	w2, #0x41                  	// #65
  401628:	mov	x0, x20
  40162c:	mov	x3, xzr
  401630:	bl	400f58 <write_string_file_ts@plt>
  401634:	tbnz	w0, #31, 4017c0 <generate+0x410>
  401638:	ldr	x9, [x25, #32]
  40163c:	adrp	x10, 401000 <deregister_tm_clones+0x4>
  401640:	mov	x8, xzr
  401644:	mov	x20, xzr
  401648:	add	x10, x10, #0xdb1
  40164c:	sub	x21, x29, #0x10
  401650:	stp	x9, x10, [x29, #-16]
  401654:	ldr	x0, [x21, x8, lsl #3]
  401658:	cbz	x0, 401670 <generate+0x2c0>
  40165c:	mov	x22, x8
  401660:	bl	400ed8 <strlen@plt>
  401664:	add	x20, x0, x20
  401668:	mov	w8, #0x1                   	// #1
  40166c:	cbz	x22, 401654 <generate+0x2a4>
  401670:	add	x8, x20, #0x1
  401674:	cmp	x8, #0x400, lsl #12
  401678:	b.hi	401884 <generate+0x4d4>  // b.pmore
  40167c:	add	x8, x8, #0xf
  401680:	mov	x9, sp
  401684:	and	x8, x8, #0xfffffffffffffff0
  401688:	sub	x20, x9, x8
  40168c:	mov	sp, x20
  401690:	mov	x8, xzr
  401694:	sub	x21, x29, #0x10
  401698:	mov	x0, x20
  40169c:	ldr	x1, [x21, x8, lsl #3]
  4016a0:	cbz	x1, 4016b4 <generate+0x304>
  4016a4:	mov	x22, x8
  4016a8:	bl	400ee8 <stpcpy@plt>
  4016ac:	mov	w8, #0x1                   	// #1
  4016b0:	cbz	x22, 40169c <generate+0x2ec>
  4016b4:	strb	wzr, [x0]
  4016b8:	adrp	x0, 401000 <deregister_tm_clones+0x4>
  4016bc:	add	x0, x0, #0xdc1
  4016c0:	mov	x1, x20
  4016c4:	bl	400f68 <symlink@plt>
  4016c8:	tbz	w0, #31, 401400 <generate+0x50>
  4016cc:	bl	400f78 <__errno_location@plt>
  4016d0:	ldr	w21, [x0]
  4016d4:	mov	w0, wzr
  4016d8:	bl	400e18 <log_get_max_level_realm@plt>
  4016dc:	cmp	w0, #0x3
  4016e0:	b.lt	40183c <generate+0x48c>  // b.tstop
  4016e4:	adrp	x2, 401000 <deregister_tm_clones+0x4>
  4016e8:	adrp	x4, 401000 <deregister_tm_clones+0x4>
  4016ec:	adrp	x5, 401000 <deregister_tm_clones+0x4>
  4016f0:	add	x2, x2, #0x953
  4016f4:	add	x4, x4, #0xb34
  4016f8:	add	x5, x5, #0xddc
  4016fc:	mov	w0, #0x3                   	// #3
  401700:	mov	w3, #0x79                  	// #121
  401704:	b	4017f4 <generate+0x444>
  401708:	bl	400f78 <__errno_location@plt>
  40170c:	ldr	w21, [x0]
  401710:	mov	w0, wzr
  401714:	bl	400e18 <log_get_max_level_realm@plt>
  401718:	cmp	w0, #0x3
  40171c:	b.lt	401790 <generate+0x3e0>  // b.tstop
  401720:	adrp	x2, 401000 <deregister_tm_clones+0x4>
  401724:	adrp	x4, 401000 <deregister_tm_clones+0x4>
  401728:	adrp	x5, 401000 <deregister_tm_clones+0x4>
  40172c:	add	x2, x2, #0x953
  401730:	add	x4, x4, #0xb34
  401734:	add	x5, x5, #0xb3d
  401738:	mov	w0, #0x3                   	// #3
  40173c:	mov	w3, #0x44                  	// #68
  401740:	mov	w1, w21
  401744:	mov	x6, x20
  401748:	bl	400e28 <log_internal_realm@plt>
  40174c:	mov	w21, w0
  401750:	mov	x19, xzr
  401754:	b	401814 <generate+0x464>
  401758:	mov	w21, w0
  40175c:	mov	w0, wzr
  401760:	bl	400e18 <log_get_max_level_realm@plt>
  401764:	cmp	w0, #0x3
  401768:	b.lt	401808 <generate+0x458>  // b.tstop
  40176c:	adrp	x2, 401000 <deregister_tm_clones+0x4>
  401770:	adrp	x4, 401000 <deregister_tm_clones+0x4>
  401774:	adrp	x5, 401000 <deregister_tm_clones+0x4>
  401778:	add	x2, x2, #0x953
  40177c:	add	x4, x4, #0xb34
  401780:	add	x5, x5, #0xc80
  401784:	mov	w0, #0x3                   	// #3
  401788:	mov	w3, #0x65                  	// #101
  40178c:	b	4017f4 <generate+0x444>
  401790:	mov	w8, wzr
  401794:	mov	x19, xzr
  401798:	cmp	w21, #0x0
  40179c:	cneg	w9, w21, mi  // mi = first
  4017a0:	b	401810 <generate+0x460>
  4017a4:	adrp	x1, 401000 <deregister_tm_clones+0x4>
  4017a8:	adrp	x3, 401000 <deregister_tm_clones+0x4>
  4017ac:	add	x1, x1, #0x953
  4017b0:	add	x3, x3, #0xb34
  4017b4:	mov	w2, #0x5e                  	// #94
  4017b8:	bl	400ec8 <log_oom_internal@plt>
  4017bc:	b	401800 <generate+0x450>
  4017c0:	mov	w21, w0
  4017c4:	mov	w0, wzr
  4017c8:	bl	400e18 <log_get_max_level_realm@plt>
  4017cc:	cmp	w0, #0x3
  4017d0:	b.lt	401808 <generate+0x458>  // b.tstop
  4017d4:	adrp	x2, 401000 <deregister_tm_clones+0x4>
  4017d8:	adrp	x4, 401000 <deregister_tm_clones+0x4>
  4017dc:	adrp	x5, 401000 <deregister_tm_clones+0x4>
  4017e0:	add	x2, x2, #0x953
  4017e4:	add	x4, x4, #0xb34
  4017e8:	add	x5, x5, #0xb3d
  4017ec:	mov	w0, #0x3                   	// #3
  4017f0:	mov	w3, #0x74                  	// #116
  4017f4:	mov	w1, w21
  4017f8:	mov	x6, x20
  4017fc:	bl	400e28 <log_internal_realm@plt>
  401800:	mov	w21, w0
  401804:	b	401814 <generate+0x464>
  401808:	mov	w8, wzr
  40180c:	neg	w9, w21
  401810:	sub	w21, w8, w9, uxtb
  401814:	mov	x0, x19
  401818:	bl	400f88 <safe_fclose@plt>
  40181c:	mov	w0, w21
  401820:	mov	sp, x29
  401824:	ldp	x20, x19, [sp, #64]
  401828:	ldp	x22, x21, [sp, #48]
  40182c:	ldp	x24, x23, [sp, #32]
  401830:	ldp	x26, x25, [sp, #16]
  401834:	ldp	x29, x30, [sp], #80
  401838:	ret
  40183c:	mov	w8, wzr
  401840:	b	401798 <generate+0x3e8>
  401844:	adrp	x1, 401000 <deregister_tm_clones+0x4>
  401848:	adrp	x2, 401000 <deregister_tm_clones+0x4>
  40184c:	adrp	x4, 401000 <deregister_tm_clones+0x4>
  401850:	add	x1, x1, #0xb11
  401854:	add	x2, x2, #0x953
  401858:	add	x4, x4, #0xafe
  40185c:	mov	w3, #0x41                  	// #65
  401860:	b	4018a0 <generate+0x4f0>
  401864:	adrp	x1, 401000 <deregister_tm_clones+0x4>
  401868:	adrp	x2, 401000 <deregister_tm_clones+0x4>
  40186c:	adrp	x4, 401000 <deregister_tm_clones+0x4>
  401870:	add	x1, x1, #0xb11
  401874:	add	x2, x2, #0x953
  401878:	add	x4, x4, #0xafe
  40187c:	mov	w3, #0x68                  	// #104
  401880:	b	4018a0 <generate+0x4f0>
  401884:	adrp	x1, 401000 <deregister_tm_clones+0x4>
  401888:	adrp	x2, 401000 <deregister_tm_clones+0x4>
  40188c:	adrp	x4, 401000 <deregister_tm_clones+0x4>
  401890:	add	x1, x1, #0xb11
  401894:	add	x2, x2, #0x953
  401898:	add	x4, x4, #0xafe
  40189c:	mov	w3, #0x77                  	// #119
  4018a0:	mov	w0, wzr
  4018a4:	bl	400e38 <log_assert_failed_realm@plt>

00000000004018a8 <__libc_csu_init>:
  4018a8:	stp	x29, x30, [sp, #-64]!
  4018ac:	mov	x29, sp
  4018b0:	stp	x19, x20, [sp, #16]
  4018b4:	adrp	x20, 41f000 <__FRAME_END__+0x1d0c8>
  4018b8:	add	x20, x20, #0xcb8
  4018bc:	stp	x21, x22, [sp, #32]
  4018c0:	adrp	x21, 41f000 <__FRAME_END__+0x1d0c8>
  4018c4:	add	x21, x21, #0xcb0
  4018c8:	sub	x20, x20, x21
  4018cc:	mov	w22, w0
  4018d0:	stp	x23, x24, [sp, #48]
  4018d4:	mov	x23, x1
  4018d8:	mov	x24, x2
  4018dc:	bl	400d80 <_init>
  4018e0:	cmp	xzr, x20, asr #3
  4018e4:	b.eq	401910 <__libc_csu_init+0x68>  // b.none
  4018e8:	asr	x20, x20, #3
  4018ec:	mov	x19, #0x0                   	// #0
  4018f0:	ldr	x3, [x21, x19, lsl #3]
  4018f4:	mov	x2, x24
  4018f8:	add	x19, x19, #0x1
  4018fc:	mov	x1, x23
  401900:	mov	w0, w22
  401904:	blr	x3
  401908:	cmp	x20, x19
  40190c:	b.ne	4018f0 <__libc_csu_init+0x48>  // b.any
  401910:	ldp	x19, x20, [sp, #16]
  401914:	ldp	x21, x22, [sp, #32]
  401918:	ldp	x23, x24, [sp, #48]
  40191c:	ldp	x29, x30, [sp], #64
  401920:	ret
  401924:	nop

0000000000401928 <__libc_csu_fini>:
  401928:	ret

Disassembly of section .fini:

000000000040192c <_fini>:
  40192c:	stp	x29, x30, [sp, #-16]!
  401930:	mov	x29, sp
  401934:	ldp	x29, x30, [sp], #16
  401938:	ret
