
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//revtwoway.so_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000628 <.init>:
 628:	stp	x29, x30, [sp, #-16]!
 62c:	mov	x29, sp
 630:	bl	6c0 <fprintf@plt+0x10>
 634:	ldp	x29, x30, [sp], #16
 638:	ret

Disassembly of section .plt:

0000000000000640 <exit@plt-0x20>:
 640:	stp	x16, x30, [sp, #-16]!
 644:	adrp	x16, 11000 <dl_load@@Base+0x1086c>
 648:	ldr	x17, [x16, #4088]
 64c:	add	x16, x16, #0xff8
 650:	br	x17
 654:	nop
 658:	nop
 65c:	nop

0000000000000660 <exit@plt>:
 660:	adrp	x16, 12000 <exit@GLIBC_2.17>
 664:	ldr	x17, [x16]
 668:	add	x16, x16, #0x0
 66c:	br	x17

0000000000000670 <__cxa_finalize@plt>:
 670:	adrp	x16, 12000 <exit@GLIBC_2.17>
 674:	ldr	x17, [x16, #8]
 678:	add	x16, x16, #0x8
 67c:	br	x17

0000000000000680 <__gmon_start__@plt>:
 680:	adrp	x16, 12000 <exit@GLIBC_2.17>
 684:	ldr	x17, [x16, #16]
 688:	add	x16, x16, #0x10
 68c:	br	x17

0000000000000690 <strcmp@plt>:
 690:	adrp	x16, 12000 <exit@GLIBC_2.17>
 694:	ldr	x17, [x16, #24]
 698:	add	x16, x16, #0x18
 69c:	br	x17

00000000000006a0 <getdtablesize@plt>:
 6a0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 6a4:	ldr	x17, [x16, #32]
 6a8:	add	x16, x16, #0x20
 6ac:	br	x17

00000000000006b0 <fprintf@plt>:
 6b0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 6b4:	ldr	x17, [x16, #40]
 6b8:	add	x16, x16, #0x28
 6bc:	br	x17

Disassembly of section .text:

00000000000006c0 <dl_load@@Base-0xd4>:
     6c0:	adrp	x0, 11000 <dl_load@@Base+0x1086c>
     6c4:	ldr	x0, [x0, #4056]
     6c8:	cbz	x0, 6d0 <fprintf@plt+0x20>
     6cc:	b	680 <__gmon_start__@plt>
     6d0:	ret
     6d4:	nop
     6d8:	adrp	x0, 12000 <dl_load@@Base+0x1186c>
     6dc:	add	x0, x0, #0x68
     6e0:	adrp	x1, 12000 <dl_load@@Base+0x1186c>
     6e4:	add	x1, x1, #0x68
     6e8:	cmp	x1, x0
     6ec:	b.eq	704 <fprintf@plt+0x54>  // b.none
     6f0:	adrp	x1, 11000 <dl_load@@Base+0x1086c>
     6f4:	ldr	x1, [x1, #4032]
     6f8:	cbz	x1, 704 <fprintf@plt+0x54>
     6fc:	mov	x16, x1
     700:	br	x16
     704:	ret
     708:	adrp	x0, 12000 <dl_load@@Base+0x1186c>
     70c:	add	x0, x0, #0x68
     710:	adrp	x1, 12000 <dl_load@@Base+0x1186c>
     714:	add	x1, x1, #0x68
     718:	sub	x1, x1, x0
     71c:	lsr	x2, x1, #63
     720:	add	x1, x2, x1, asr #3
     724:	cmp	xzr, x1, asr #1
     728:	asr	x1, x1, #1
     72c:	b.eq	744 <fprintf@plt+0x94>  // b.none
     730:	adrp	x2, 11000 <dl_load@@Base+0x1086c>
     734:	ldr	x2, [x2, #4064]
     738:	cbz	x2, 744 <fprintf@plt+0x94>
     73c:	mov	x16, x2
     740:	br	x16
     744:	ret
     748:	stp	x29, x30, [sp, #-32]!
     74c:	mov	x29, sp
     750:	str	x19, [sp, #16]
     754:	adrp	x19, 12000 <dl_load@@Base+0x1186c>
     758:	ldrb	w0, [x19, #104]
     75c:	cbnz	w0, 784 <fprintf@plt+0xd4>
     760:	adrp	x0, 11000 <dl_load@@Base+0x1086c>
     764:	ldr	x0, [x0, #4040]
     768:	cbz	x0, 778 <fprintf@plt+0xc8>
     76c:	adrp	x0, 12000 <dl_load@@Base+0x1186c>
     770:	ldr	x0, [x0, #48]
     774:	bl	670 <__cxa_finalize@plt>
     778:	bl	6d8 <fprintf@plt+0x28>
     77c:	mov	w0, #0x1                   	// #1
     780:	strb	w0, [x19, #104]
     784:	ldr	x19, [sp, #16]
     788:	ldp	x29, x30, [sp], #32
     78c:	ret
     790:	b	708 <fprintf@plt+0x58>

0000000000000794 <dl_load@@Base>:
     794:	sub	sp, sp, #0x60
     798:	stp	x29, x30, [sp, #80]
     79c:	add	x29, sp, #0x50
     7a0:	adrp	x8, 12000 <dl_load@@Base+0x1186c>
     7a4:	add	x8, x8, #0x70
     7a8:	adrp	x9, 12000 <dl_load@@Base+0x1186c>
     7ac:	add	x9, x9, #0x78
     7b0:	adrp	x10, 12000 <dl_load@@Base+0x1186c>
     7b4:	add	x10, x10, #0x80
     7b8:	stur	x0, [x29, #-8]
     7bc:	stur	x1, [x29, #-16]
     7c0:	stur	wzr, [x29, #-36]
     7c4:	ldur	x11, [x29, #-8]
     7c8:	str	x11, [x8]
     7cc:	ldur	x11, [x29, #-16]
     7d0:	str	x11, [x9]
     7d4:	ldr	x11, [x8]
     7d8:	ldr	w12, [x11]
     7dc:	cmp	w12, #0x2
     7e0:	str	x8, [sp, #32]
     7e4:	str	x9, [sp, #24]
     7e8:	str	x10, [sp, #16]
     7ec:	b.ne	808 <dl_load@@Base+0x74>  // b.any
     7f0:	ldr	x8, [sp, #32]
     7f4:	ldr	x9, [x8]
     7f8:	ldr	w10, [x9, #4]
     7fc:	cmp	w10, #0x0
     800:	cset	w10, ge  // ge = tcont
     804:	tbnz	w10, #0, 868 <dl_load@@Base+0xd4>
     808:	adrp	x8, 11000 <dl_load@@Base+0x1086c>
     80c:	ldr	x8, [x8, #4048]
     810:	ldr	x0, [x8]
     814:	adrp	x1, 1000 <dl_load@@Base+0x86c>
     818:	add	x1, x1, #0xa4
     81c:	str	x8, [sp, #8]
     820:	bl	6b0 <fprintf@plt>
     824:	ldr	x8, [sp, #8]
     828:	ldr	x9, [x8]
     82c:	ldr	x10, [sp, #32]
     830:	ldr	x11, [x10]
     834:	ldr	w4, [x11]
     838:	ldr	x11, [x10]
     83c:	ldr	w5, [x11, #4]
     840:	mov	x0, x9
     844:	adrp	x1, 1000 <dl_load@@Base+0x86c>
     848:	add	x1, x1, #0xcc
     84c:	mov	w2, #0x2                   	// #2
     850:	mov	w12, wzr
     854:	mov	w3, w12
     858:	bl	6b0 <fprintf@plt>
     85c:	mov	w12, #0x1                   	// #1
     860:	mov	w0, w12
     864:	bl	660 <exit@plt>
     868:	stur	xzr, [x29, #-24]
     86c:	mov	x8, #0x1                   	// #1
     870:	stur	x8, [x29, #-32]
     874:	ldur	x8, [x29, #-24]
     878:	ldur	x9, [x29, #-32]
     87c:	cmp	x8, x9
     880:	b.cs	930 <dl_load@@Base+0x19c>  // b.hs, b.nlast
     884:	ldur	x8, [x29, #-24]
     888:	mov	x9, #0x30                  	// #48
     88c:	mul	x8, x9, x8
     890:	ldr	x9, [sp, #16]
     894:	add	x8, x9, x8
     898:	ldr	x8, [x8]
     89c:	cbnz	x8, 8a4 <dl_load@@Base+0x110>
     8a0:	b	930 <dl_load@@Base+0x19c>
     8a4:	ldr	x8, [sp, #32]
     8a8:	ldr	x9, [x8]
     8ac:	mov	x10, #0x30                  	// #48
     8b0:	ldr	x9, [x9, #48]
     8b4:	ldr	x11, [sp, #24]
     8b8:	ldr	x0, [x11]
     8bc:	ldur	x12, [x29, #-24]
     8c0:	mul	x10, x10, x12
     8c4:	ldr	x12, [sp, #16]
     8c8:	add	x2, x12, x10
     8cc:	adrp	x1, 1000 <dl_load@@Base+0x86c>
     8d0:	add	x1, x1, #0xcb
     8d4:	blr	x9
     8d8:	cbnz	w0, 920 <dl_load@@Base+0x18c>
     8dc:	ldr	x8, [sp, #32]
     8e0:	ldr	x9, [x8]
     8e4:	ldr	x9, [x9, #104]
     8e8:	ldr	x10, [sp, #24]
     8ec:	ldr	x0, [x10]
     8f0:	ldur	x11, [x29, #-24]
     8f4:	mov	x12, #0x30                  	// #48
     8f8:	mul	x11, x12, x11
     8fc:	ldr	x12, [sp, #16]
     900:	add	x11, x12, x11
     904:	ldr	x2, [x11]
     908:	adrp	x1, 1000 <dl_load@@Base+0x86c>
     90c:	add	x1, x1, #0xff
     910:	blr	x9
     914:	ldur	w13, [x29, #-36]
     918:	add	w13, w13, #0x1
     91c:	stur	w13, [x29, #-36]
     920:	ldur	x8, [x29, #-24]
     924:	add	x8, x8, #0x1
     928:	stur	x8, [x29, #-24]
     92c:	b	874 <dl_load@@Base+0xe0>
     930:	adrp	x8, 12000 <dl_load@@Base+0x1186c>
     934:	add	x8, x8, #0x38
     938:	ldr	x8, [x8]
     93c:	cbz	x8, 980 <dl_load@@Base+0x1ec>
     940:	adrp	x8, 12000 <dl_load@@Base+0x1186c>
     944:	add	x8, x8, #0x38
     948:	ldr	x8, [x8]
     94c:	blr	x8
     950:	cbnz	w0, 980 <dl_load@@Base+0x1ec>
     954:	ldr	x8, [sp, #32]
     958:	ldr	x9, [x8]
     95c:	ldr	x9, [x9, #104]
     960:	ldr	x10, [sp, #24]
     964:	ldr	x0, [x10]
     968:	adrp	x1, 1000 <dl_load@@Base+0x86c>
     96c:	add	x1, x1, #0x11b
     970:	blr	x9
     974:	ldur	w11, [x29, #-36]
     978:	add	w11, w11, #0x1
     97c:	stur	w11, [x29, #-36]
     980:	adrp	x8, 12000 <dl_load@@Base+0x1186c>
     984:	add	x8, x8, #0x40
     988:	ldr	x8, [x8]
     98c:	cbz	x8, 9b4 <dl_load@@Base+0x220>
     990:	ldr	x8, [sp, #32]
     994:	ldr	x9, [x8]
     998:	ldr	x9, [x9, #88]
     99c:	ldr	x10, [sp, #24]
     9a0:	ldr	x0, [x10]
     9a4:	adrp	x11, 12000 <dl_load@@Base+0x1186c>
     9a8:	add	x11, x11, #0x40
     9ac:	ldr	x1, [x11]
     9b0:	blr	x9
     9b4:	ldur	w8, [x29, #-36]
     9b8:	cmp	w8, #0x0
     9bc:	cset	w8, eq  // eq = none
     9c0:	and	w0, w8, #0x1
     9c4:	ldp	x29, x30, [sp, #80]
     9c8:	add	sp, sp, #0x60
     9cc:	ret
     9d0:	sub	sp, sp, #0x20
     9d4:	stp	x29, x30, [sp, #16]
     9d8:	add	x29, sp, #0x10
     9dc:	adrp	x8, 12000 <dl_load@@Base+0x1186c>
     9e0:	add	x8, x8, #0x70
     9e4:	adrp	x9, 12000 <dl_load@@Base+0x1186c>
     9e8:	add	x9, x9, #0x78
     9ec:	adrp	x1, 12000 <dl_load@@Base+0x1186c>
     9f0:	add	x1, x1, #0x48
     9f4:	adrp	x10, 12000 <dl_load@@Base+0x1186c>
     9f8:	add	x10, x10, #0xb0
     9fc:	mov	w0, #0x1                   	// #1
     a00:	ldr	x8, [x8]
     a04:	ldr	x8, [x8, #72]
     a08:	ldr	x9, [x9]
     a0c:	stur	w0, [x29, #-4]
     a10:	mov	x0, x9
     a14:	str	x10, [sp]
     a18:	blr	x8
     a1c:	bl	6a0 <getdtablesize@plt>
     a20:	mov	w1, w0
     a24:	sxtw	x8, w1
     a28:	ldr	x9, [sp]
     a2c:	str	x8, [x9]
     a30:	ldur	w0, [x29, #-4]
     a34:	ldp	x29, x30, [sp, #16]
     a38:	add	sp, sp, #0x20
     a3c:	ret
     a40:	sub	sp, sp, #0x20
     a44:	stp	x29, x30, [sp, #16]
     a48:	add	x29, sp, #0x10
     a4c:	str	x0, [sp, #8]
     a50:	ldr	x8, [sp, #8]
     a54:	mov	w9, #0x0                   	// #0
     a58:	str	w9, [sp, #4]
     a5c:	cbz	x8, a7c <dl_load@@Base+0x2e8>
     a60:	ldr	x0, [sp, #8]
     a64:	adrp	x1, 1000 <dl_load@@Base+0x86c>
     a68:	add	x1, x1, #0x14f
     a6c:	bl	690 <strcmp@plt>
     a70:	cmp	w0, #0x0
     a74:	cset	w8, eq  // eq = none
     a78:	str	w8, [sp, #4]
     a7c:	ldr	w8, [sp, #4]
     a80:	and	w0, w8, #0x1
     a84:	ldp	x29, x30, [sp, #16]
     a88:	add	sp, sp, #0x20
     a8c:	ret
     a90:	sub	sp, sp, #0x40
     a94:	stp	x29, x30, [sp, #48]
     a98:	add	x29, sp, #0x30
     a9c:	adrp	x8, 12000 <dl_load@@Base+0x1186c>
     aa0:	add	x8, x8, #0xb0
     aa4:	stur	x0, [x29, #-16]
     aa8:	str	x1, [sp, #24]
     aac:	str	x2, [sp, #16]
     ab0:	ldr	x9, [sp, #24]
     ab4:	str	x8, [sp]
     ab8:	cbz	x9, ac4 <dl_load@@Base+0x330>
     abc:	ldr	x8, [sp, #16]
     ac0:	cbnz	x8, acc <dl_load@@Base+0x338>
     ac4:	stur	wzr, [x29, #-4]
     ac8:	b	c18 <dl_load@@Base+0x484>
     acc:	adrp	x8, 12000 <dl_load@@Base+0x1186c>
     ad0:	add	x8, x8, #0x70
     ad4:	ldr	x8, [x8]
     ad8:	ldr	x8, [x8, #280]
     adc:	mov	x0, #0x20                  	// #32
     ae0:	blr	x8
     ae4:	str	x0, [sp, #8]
     ae8:	cbnz	x0, b20 <dl_load@@Base+0x38c>
     aec:	adrp	x8, 12000 <dl_load@@Base+0x1186c>
     af0:	add	x8, x8, #0x70
     af4:	ldr	x8, [x8]
     af8:	ldr	x8, [x8, #96]
     afc:	adrp	x9, 12000 <dl_load@@Base+0x1186c>
     b00:	add	x9, x9, #0x78
     b04:	ldr	x0, [x9]
     b08:	adrp	x1, 1000 <dl_load@@Base+0x86c>
     b0c:	add	x1, x1, #0x15d
     b10:	adrp	x2, 1000 <dl_load@@Base+0x86c>
     b14:	add	x2, x2, #0x17b
     b18:	mov	x3, #0x20                  	// #32
     b1c:	blr	x8
     b20:	ldr	x8, [sp, #8]
     b24:	mov	x9, #0x2                   	// #2
     b28:	str	x9, [x8, #24]
     b2c:	ldr	x8, [sp, #8]
     b30:	mov	x9, xzr
     b34:	str	xzr, [x8]
     b38:	ldr	x8, [sp, #8]
     b3c:	str	xzr, [x8, #8]
     b40:	ldr	x8, [sp, #8]
     b44:	str	x9, [x8, #16]
     b48:	ldr	x8, [sp]
     b4c:	ldr	x9, [x8]
     b50:	add	x9, x9, #0x1
     b54:	cbnz	x9, b6c <dl_load@@Base+0x3d8>
     b58:	bl	6a0 <getdtablesize@plt>
     b5c:	mov	w1, w0
     b60:	sxtw	x8, w1
     b64:	ldr	x9, [sp]
     b68:	str	x8, [x9]
     b6c:	ldr	x8, [sp, #24]
     b70:	adrp	x9, 0 <exit@plt-0x660>
     b74:	add	x9, x9, #0xc28
     b78:	str	x9, [x8, #24]
     b7c:	ldr	x8, [sp, #24]
     b80:	adrp	x9, 0 <exit@plt-0x660>
     b84:	add	x9, x9, #0xd40
     b88:	str	x9, [x8, #40]
     b8c:	ldr	x8, [sp]
     b90:	ldr	x9, [x8]
     b94:	ldr	x10, [sp, #24]
     b98:	str	w9, [x10, #8]
     b9c:	ldr	x10, [sp, #8]
     ba0:	ldr	x11, [sp, #24]
     ba4:	str	x10, [x11, #16]
     ba8:	ldr	x10, [x8]
     bac:	add	x11, x10, #0x1
     bb0:	str	x11, [x8]
     bb4:	ldr	x11, [sp, #16]
     bb8:	str	x10, [x11, #16]
     bbc:	ldr	x10, [sp, #8]
     bc0:	ldr	x11, [sp, #16]
     bc4:	str	x10, [x11, #32]
     bc8:	ldr	x10, [sp, #16]
     bcc:	adrp	x11, 0 <exit@plt-0x660>
     bd0:	add	x11, x11, #0xd94
     bd4:	str	x11, [x10, #40]
     bd8:	ldr	x10, [sp, #16]
     bdc:	adrp	x11, 0 <exit@plt-0x660>
     be0:	add	x11, x11, #0xf9c
     be4:	str	x11, [x10, #48]
     be8:	ldr	x10, [sp, #16]
     bec:	adrp	x11, 0 <exit@plt-0x660>
     bf0:	add	x11, x11, #0xfb8
     bf4:	str	x11, [x10, #56]
     bf8:	ldr	x10, [sp, #16]
     bfc:	adrp	x11, 0 <exit@plt-0x660>
     c00:	add	x11, x11, #0xfd4
     c04:	str	x11, [x10, #64]
     c08:	ldr	x10, [sp, #16]
     c0c:	mov	w9, #0x1                   	// #1
     c10:	str	w9, [x10, #24]
     c14:	stur	w9, [x29, #-4]
     c18:	ldur	w0, [x29, #-4]
     c1c:	ldp	x29, x30, [sp, #48]
     c20:	add	sp, sp, #0x40
     c24:	ret
     c28:	sub	sp, sp, #0x50
     c2c:	str	x0, [sp, #64]
     c30:	str	x1, [sp, #56]
     c34:	str	x2, [sp, #48]
     c38:	str	x3, [sp, #40]
     c3c:	str	x4, [sp, #32]
     c40:	str	x5, [sp, #24]
     c44:	str	wzr, [sp, #20]
     c48:	ldr	x8, [sp, #64]
     c4c:	cbz	x8, c64 <dl_load@@Base+0x4d0>
     c50:	ldr	x8, [sp, #56]
     c54:	cbz	x8, c64 <dl_load@@Base+0x4d0>
     c58:	ldr	x8, [sp, #56]
     c5c:	ldr	x8, [x8, #16]
     c60:	cbnz	x8, c70 <dl_load@@Base+0x4dc>
     c64:	mov	w8, #0xffffffff            	// #-1
     c68:	str	w8, [sp, #76]
     c6c:	b	d34 <dl_load@@Base+0x5a0>
     c70:	ldr	x8, [sp, #56]
     c74:	ldr	x8, [x8, #16]
     c78:	str	x8, [sp, #8]
     c7c:	ldr	x8, [sp, #8]
     c80:	ldr	x8, [x8, #8]
     c84:	cbnz	x8, c90 <dl_load@@Base+0x4fc>
     c88:	str	wzr, [sp, #76]
     c8c:	b	d34 <dl_load@@Base+0x5a0>
     c90:	ldr	x8, [sp, #8]
     c94:	ldr	x8, [x8, #16]
     c98:	ldr	x9, [sp, #64]
     c9c:	str	x8, [x9]
     ca0:	ldr	x8, [sp, #8]
     ca4:	ldr	x8, [x8, #8]
     ca8:	str	w8, [sp, #20]
     cac:	ldr	x9, [sp, #8]
     cb0:	str	xzr, [x9, #8]
     cb4:	ldr	x9, [sp, #32]
     cb8:	str	xzr, [x9]
     cbc:	ldr	x9, [sp, #8]
     cc0:	ldr	x9, [x9, #16]
     cc4:	ldr	w8, [sp, #20]
     cc8:	subs	w8, w8, #0x1
     ccc:	ldrb	w8, [x9, w8, sxtw]
     cd0:	cmp	w8, #0xa
     cd4:	b.ne	d2c <dl_load@@Base+0x598>  // b.any
     cd8:	ldr	x8, [sp, #8]
     cdc:	ldr	x8, [x8, #16]
     ce0:	ldr	w9, [sp, #20]
     ce4:	subs	w9, w9, #0x1
     ce8:	ldrb	w9, [x8, w9, sxtw]
     cec:	cmp	w9, #0xa
     cf0:	b.ne	d14 <dl_load@@Base+0x580>  // b.any
     cf4:	ldr	w8, [sp, #20]
     cf8:	subs	w8, w8, #0x1
     cfc:	str	w8, [sp, #20]
     d00:	ldr	x9, [sp, #32]
     d04:	ldr	x10, [x9]
     d08:	add	x10, x10, #0x1
     d0c:	str	x10, [x9]
     d10:	b	cd8 <dl_load@@Base+0x544>
     d14:	ldr	x8, [sp, #8]
     d18:	ldr	x8, [x8, #16]
     d1c:	ldrsw	x9, [sp, #20]
     d20:	add	x8, x8, x9
     d24:	ldr	x9, [sp, #40]
     d28:	str	x8, [x9]
     d2c:	ldr	w8, [sp, #20]
     d30:	str	w8, [sp, #76]
     d34:	ldr	w0, [sp, #76]
     d38:	add	sp, sp, #0x50
     d3c:	ret
     d40:	sub	sp, sp, #0x20
     d44:	stp	x29, x30, [sp, #16]
     d48:	add	x29, sp, #0x10
     d4c:	str	x0, [sp, #8]
     d50:	ldr	x8, [sp, #8]
     d54:	cbz	x8, d64 <dl_load@@Base+0x5d0>
     d58:	ldr	x8, [sp, #8]
     d5c:	ldr	x8, [x8, #16]
     d60:	cbnz	x8, d68 <dl_load@@Base+0x5d4>
     d64:	b	d88 <dl_load@@Base+0x5f4>
     d68:	ldr	x8, [sp, #8]
     d6c:	ldr	x8, [x8, #16]
     d70:	str	x8, [sp]
     d74:	ldr	x0, [sp]
     d78:	bl	1020 <dl_load@@Base+0x88c>
     d7c:	ldr	x8, [sp, #8]
     d80:	mov	w9, #0xffffffff            	// #-1
     d84:	str	w9, [x8, #8]
     d88:	ldp	x29, x30, [sp, #16]
     d8c:	add	sp, sp, #0x20
     d90:	ret
     d94:	sub	sp, sp, #0x70
     d98:	stp	x29, x30, [sp, #96]
     d9c:	add	x29, sp, #0x60
     da0:	adrp	x8, 12000 <dl_load@@Base+0x1186c>
     da4:	add	x8, x8, #0x70
     da8:	stur	x0, [x29, #-16]
     dac:	stur	x1, [x29, #-24]
     db0:	stur	x2, [x29, #-32]
     db4:	stur	x3, [x29, #-40]
     db8:	str	x4, [sp, #48]
     dbc:	ldr	x9, [sp, #48]
     dc0:	str	x8, [sp]
     dc4:	cbnz	x9, dd0 <dl_load@@Base+0x63c>
     dc8:	stur	xzr, [x29, #-8]
     dcc:	b	f8c <dl_load@@Base+0x7f8>
     dd0:	ldr	x8, [sp, #48]
     dd4:	str	x8, [sp, #40]
     dd8:	ldur	x8, [x29, #-24]
     ddc:	ldur	x9, [x29, #-32]
     de0:	mul	x8, x8, x9
     de4:	str	x8, [sp, #32]
     de8:	ldr	x8, [sp, #32]
     dec:	ldr	x9, [sp, #40]
     df0:	ldr	x9, [x9]
     df4:	cmp	x8, x9
     df8:	b.hi	e10 <dl_load@@Base+0x67c>  // b.pmore
     dfc:	ldr	x8, [sp, #40]
     e00:	ldr	x8, [x8, #8]
     e04:	cmp	x8, #0x0
     e08:	cset	w9, ls  // ls = plast
     e0c:	tbnz	w9, #0, ef4 <dl_load@@Base+0x760>
     e10:	ldr	x8, [sp, #40]
     e14:	ldr	x8, [x8, #16]
     e18:	cbnz	x8, e70 <dl_load@@Base+0x6dc>
     e1c:	ldr	x8, [sp]
     e20:	ldr	x9, [x8]
     e24:	ldr	x9, [x9, #280]
     e28:	ldr	x0, [sp, #32]
     e2c:	blr	x9
     e30:	ldr	x8, [sp, #40]
     e34:	str	x0, [x8, #16]
     e38:	cbnz	x0, e6c <dl_load@@Base+0x6d8>
     e3c:	ldr	x8, [sp]
     e40:	ldr	x9, [x8]
     e44:	ldr	x9, [x9, #96]
     e48:	adrp	x10, 12000 <dl_load@@Base+0x1186c>
     e4c:	add	x10, x10, #0x78
     e50:	ldr	x0, [x10]
     e54:	ldr	x3, [sp, #32]
     e58:	adrp	x1, 1000 <dl_load@@Base+0x86c>
     e5c:	add	x1, x1, #0x15d
     e60:	adrp	x2, 1000 <dl_load@@Base+0x86c>
     e64:	add	x2, x2, #0x195
     e68:	blr	x9
     e6c:	b	ee0 <dl_load@@Base+0x74c>
     e70:	ldr	x8, [sp]
     e74:	ldr	x9, [x8]
     e78:	ldr	x9, [x9, #296]
     e7c:	ldr	x10, [sp, #40]
     e80:	ldr	x0, [x10, #16]
     e84:	ldr	x10, [sp, #40]
     e88:	ldr	x10, [x10]
     e8c:	ldr	x11, [sp, #32]
     e90:	add	x1, x10, x11
     e94:	blr	x9
     e98:	ldr	x8, [sp, #40]
     e9c:	str	x0, [x8, #16]
     ea0:	cbnz	x0, ee0 <dl_load@@Base+0x74c>
     ea4:	ldr	x8, [sp]
     ea8:	ldr	x9, [x8]
     eac:	ldr	x9, [x9, #96]
     eb0:	adrp	x10, 12000 <dl_load@@Base+0x1186c>
     eb4:	add	x10, x10, #0x78
     eb8:	ldr	x0, [x10]
     ebc:	ldr	x10, [sp, #40]
     ec0:	ldr	x10, [x10]
     ec4:	ldr	x11, [sp, #32]
     ec8:	add	x3, x10, x11
     ecc:	adrp	x1, 1000 <dl_load@@Base+0x86c>
     ed0:	add	x1, x1, #0x1a4
     ed4:	adrp	x2, 1000 <dl_load@@Base+0x86c>
     ed8:	add	x2, x2, #0x195
     edc:	blr	x9
     ee0:	ldr	x8, [sp, #32]
     ee4:	ldr	x9, [sp, #40]
     ee8:	ldr	x10, [x9]
     eec:	add	x8, x10, x8
     ef0:	str	x8, [x9]
     ef4:	ldur	x8, [x29, #-16]
     ef8:	ldr	x9, [sp, #32]
     efc:	add	x8, x8, x9
     f00:	mov	x9, #0xffffffffffffffff    	// #-1
     f04:	add	x8, x8, x9
     f08:	str	x8, [sp, #16]
     f0c:	ldr	x8, [sp, #40]
     f10:	ldr	x8, [x8, #16]
     f14:	ldr	x9, [sp, #40]
     f18:	ldr	x9, [x9, #8]
     f1c:	add	x8, x8, x9
     f20:	str	x8, [sp, #8]
     f24:	ldr	x8, [sp, #32]
     f28:	str	x8, [sp, #24]
     f2c:	ldr	x8, [sp, #24]
     f30:	cmp	x8, #0x0
     f34:	cset	w9, ls  // ls = plast
     f38:	tbnz	w9, #0, f70 <dl_load@@Base+0x7dc>
     f3c:	ldr	x8, [sp, #16]
     f40:	mov	x9, #0xffffffffffffffff    	// #-1
     f44:	add	x9, x8, x9
     f48:	str	x9, [sp, #16]
     f4c:	ldrb	w10, [x8]
     f50:	ldr	x8, [sp, #8]
     f54:	add	x9, x8, #0x1
     f58:	str	x9, [sp, #8]
     f5c:	strb	w10, [x8]
     f60:	ldr	x8, [sp, #24]
     f64:	subs	x8, x8, #0x1
     f68:	str	x8, [sp, #24]
     f6c:	b	f2c <dl_load@@Base+0x798>
     f70:	ldr	x8, [sp, #32]
     f74:	ldr	x9, [sp, #40]
     f78:	ldr	x10, [x9, #8]
     f7c:	add	x8, x10, x8
     f80:	str	x8, [x9, #8]
     f84:	ldr	x8, [sp, #32]
     f88:	stur	x8, [x29, #-8]
     f8c:	ldur	x0, [x29, #-8]
     f90:	ldp	x29, x30, [sp, #96]
     f94:	add	sp, sp, #0x70
     f98:	ret
     f9c:	sub	sp, sp, #0x10
     fa0:	mov	w8, wzr
     fa4:	str	x0, [sp, #8]
     fa8:	str	x1, [sp]
     fac:	mov	w0, w8
     fb0:	add	sp, sp, #0x10
     fb4:	ret
     fb8:	sub	sp, sp, #0x10
     fbc:	mov	w8, wzr
     fc0:	str	x0, [sp, #8]
     fc4:	str	x1, [sp]
     fc8:	mov	w0, w8
     fcc:	add	sp, sp, #0x10
     fd0:	ret
     fd4:	sub	sp, sp, #0x30
     fd8:	stp	x29, x30, [sp, #32]
     fdc:	add	x29, sp, #0x20
     fe0:	str	x0, [sp, #16]
     fe4:	str	x1, [sp, #8]
     fe8:	ldr	x8, [sp, #8]
     fec:	cbnz	x8, ffc <dl_load@@Base+0x868>
     ff0:	mov	w8, #0xffffffff            	// #-1
     ff4:	stur	w8, [x29, #-4]
     ff8:	b	1010 <dl_load@@Base+0x87c>
     ffc:	ldr	x8, [sp, #8]
    1000:	str	x8, [sp]
    1004:	ldr	x0, [sp]
    1008:	bl	1020 <dl_load@@Base+0x88c>
    100c:	stur	wzr, [x29, #-4]
    1010:	ldur	w0, [x29, #-4]
    1014:	ldp	x29, x30, [sp, #32]
    1018:	add	sp, sp, #0x30
    101c:	ret
    1020:	sub	sp, sp, #0x20
    1024:	stp	x29, x30, [sp, #16]
    1028:	add	x29, sp, #0x10
    102c:	str	x0, [sp, #8]
    1030:	ldr	x8, [sp, #8]
    1034:	ldr	x8, [x8, #24]
    1038:	cmp	x8, #0x1
    103c:	b.ls	1054 <dl_load@@Base+0x8c0>  // b.plast
    1040:	ldr	x8, [sp, #8]
    1044:	ldr	x9, [x8, #24]
    1048:	subs	x9, x9, #0x1
    104c:	str	x9, [x8, #24]
    1050:	b	1088 <dl_load@@Base+0x8f4>
    1054:	adrp	x8, 12000 <dl_load@@Base+0x1186c>
    1058:	add	x8, x8, #0x70
    105c:	ldr	x9, [x8]
    1060:	ldr	x9, [x9, #304]
    1064:	ldr	x10, [sp, #8]
    1068:	ldr	x0, [x10, #16]
    106c:	str	x8, [sp]
    1070:	blr	x9
    1074:	ldr	x8, [sp]
    1078:	ldr	x9, [x8]
    107c:	ldr	x9, [x9, #304]
    1080:	ldr	x0, [sp, #8]
    1084:	blr	x9
    1088:	ldp	x29, x30, [sp, #16]
    108c:	add	sp, sp, #0x20
    1090:	ret

Disassembly of section .fini:

0000000000001094 <.fini>:
    1094:	stp	x29, x30, [sp, #-16]!
    1098:	mov	x29, sp
    109c:	ldp	x29, x30, [sp], #16
    10a0:	ret
