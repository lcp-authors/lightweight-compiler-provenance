
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//btrfs.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x4c50>:
       0:	sub	sp, sp, #0x10
       4:	strh	w0, [sp, #14]
       8:	ldrh	w0, [sp, #14]
       c:	lsl	w0, w0, #8
      10:	sxth	w1, w0
      14:	ldrh	w0, [sp, #14]
      18:	lsr	w0, w0, #8
      1c:	and	w0, w0, #0xffff
      20:	sxth	w0, w0
      24:	orr	w0, w1, w0
      28:	sxth	w0, w0
      2c:	and	w0, w0, #0xffff
      30:	add	sp, sp, #0x10
      34:	ret
      38:	sub	sp, sp, #0x20
      3c:	str	x0, [sp, #8]
      40:	ldr	x0, [sp, #8]
      44:	str	x0, [sp, #24]
      48:	ldr	x0, [sp, #24]
      4c:	ldr	w0, [x0]
      50:	add	sp, sp, #0x20
      54:	ret
      58:	stp	x29, x30, [sp, #-32]!
      5c:	mov	x29, sp
      60:	str	x0, [sp, #24]
      64:	ldr	x1, [sp, #24]
      68:	adrp	x0, 0 <grub_mod_init-0x4c50>
      6c:	add	x0, x0, #0x0
      70:	ldr	x0, [x0]
      74:	bl	0 <grub_list_push>
      78:	nop
      7c:	ldp	x29, x30, [sp], #32
      80:	ret
      84:	nop
	...
      90:	stp	x29, x30, [sp, #-32]!
      94:	mov	x29, sp
      98:	str	x0, [sp, #24]
      9c:	ldr	x0, [sp, #24]
      a0:	bl	0 <grub_list_remove>
      a4:	nop
      a8:	ldp	x29, x30, [sp], #32
      ac:	ret
      b0:	stp	x29, x30, [sp, #-48]!
      b4:	mov	x29, sp
      b8:	str	x0, [sp, #40]
      bc:	str	x1, [sp, #32]
      c0:	str	x2, [sp, #24]
      c4:	ldr	x2, [sp, #24]
      c8:	ldr	x1, [sp, #32]
      cc:	ldr	x0, [sp, #40]
      d0:	bl	0 <grub_memmove>
      d4:	ldp	x29, x30, [sp], #48
      d8:	ret
      dc:	sub	sp, sp, #0x40
      e0:	str	x0, [sp, #24]
      e4:	str	x1, [sp, #16]
      e8:	str	x2, [sp, #8]
      ec:	str	x3, [sp]
      f0:	ldr	x0, [sp, #16]
      f4:	str	x0, [sp, #56]
      f8:	ldr	x0, [sp, #8]
      fc:	str	x0, [sp, #48]
     100:	ldr	x0, [sp, #24]
     104:	str	x0, [sp, #40]
     108:	b	15c <grub_mod_init-0x4af4>
     10c:	ldr	x0, [sp, #56]
     110:	ldrb	w1, [x0]
     114:	ldr	x0, [sp, #48]
     118:	ldrb	w0, [x0]
     11c:	eor	w0, w1, w0
     120:	and	w1, w0, #0xff
     124:	ldr	x0, [sp, #40]
     128:	strb	w1, [x0]
     12c:	ldr	x0, [sp, #56]
     130:	add	x0, x0, #0x1
     134:	str	x0, [sp, #56]
     138:	ldr	x0, [sp, #48]
     13c:	add	x0, x0, #0x1
     140:	str	x0, [sp, #48]
     144:	ldr	x0, [sp, #40]
     148:	add	x0, x0, #0x1
     14c:	str	x0, [sp, #40]
     150:	ldr	x0, [sp]
     154:	sub	x0, x0, #0x1
     158:	str	x0, [sp]
     15c:	ldr	x0, [sp]
     160:	cmp	x0, #0x0
     164:	b.eq	1e8 <grub_mod_init-0x4a68>  // b.none
     168:	ldr	x0, [sp, #56]
     16c:	and	x0, x0, #0x7
     170:	cmp	x0, #0x0
     174:	b.ne	10c <grub_mod_init-0x4b44>  // b.any
     178:	ldr	x0, [sp, #48]
     17c:	and	x0, x0, #0x7
     180:	cmp	x0, #0x0
     184:	b.ne	10c <grub_mod_init-0x4b44>  // b.any
     188:	ldr	x0, [sp, #40]
     18c:	and	x0, x0, #0x7
     190:	cmp	x0, #0x0
     194:	b.ne	10c <grub_mod_init-0x4b44>  // b.any
     198:	b	1e8 <grub_mod_init-0x4a68>
     19c:	ldr	x0, [sp, #56]
     1a0:	ldr	x1, [x0]
     1a4:	ldr	x0, [sp, #48]
     1a8:	ldr	x0, [x0]
     1ac:	eor	x1, x1, x0
     1b0:	ldr	x0, [sp, #40]
     1b4:	str	x1, [x0]
     1b8:	ldr	x0, [sp, #56]
     1bc:	add	x0, x0, #0x8
     1c0:	str	x0, [sp, #56]
     1c4:	ldr	x0, [sp, #48]
     1c8:	add	x0, x0, #0x8
     1cc:	str	x0, [sp, #48]
     1d0:	ldr	x0, [sp, #40]
     1d4:	add	x0, x0, #0x8
     1d8:	str	x0, [sp, #40]
     1dc:	ldr	x0, [sp]
     1e0:	sub	x0, x0, #0x8
     1e4:	str	x0, [sp]
     1e8:	ldr	x0, [sp]
     1ec:	cmp	x0, #0x7
     1f0:	b.hi	19c <grub_mod_init-0x4ab4>  // b.pmore
     1f4:	b	248 <grub_mod_init-0x4a08>
     1f8:	ldr	x0, [sp, #56]
     1fc:	ldrb	w1, [x0]
     200:	ldr	x0, [sp, #48]
     204:	ldrb	w0, [x0]
     208:	eor	w0, w1, w0
     20c:	and	w1, w0, #0xff
     210:	ldr	x0, [sp, #40]
     214:	strb	w1, [x0]
     218:	ldr	x0, [sp, #56]
     21c:	add	x0, x0, #0x1
     220:	str	x0, [sp, #56]
     224:	ldr	x0, [sp, #48]
     228:	add	x0, x0, #0x1
     22c:	str	x0, [sp, #48]
     230:	ldr	x0, [sp, #40]
     234:	add	x0, x0, #0x1
     238:	str	x0, [sp, #40]
     23c:	ldr	x0, [sp]
     240:	sub	x0, x0, #0x1
     244:	str	x0, [sp]
     248:	ldr	x0, [sp]
     24c:	cmp	x0, #0x0
     250:	b.ne	1f8 <grub_mod_init-0x4a58>  // b.any
     254:	nop
     258:	nop
     25c:	add	sp, sp, #0x40
     260:	ret
     264:	sub	sp, sp, #0xb60
     268:	stp	x29, x30, [sp]
     26c:	mov	x29, sp
     270:	str	x0, [sp, #24]
     274:	str	x1, [sp, #16]
     278:	str	wzr, [sp, #2904]
     27c:	str	wzr, [sp, #2908]
     280:	b	35c <grub_mod_init-0x48f4>
     284:	ldr	w0, [sp, #2908]
     288:	cmp	w0, #0x0
     28c:	b.eq	2b4 <grub_mod_init-0x499c>  // b.none
     290:	ldur	x0, [sp, #249]
     294:	lsr	x1, x0, #9
     298:	adrp	x0, 0 <grub_mod_init-0x4c50>
     29c:	add	x0, x0, #0x0
     2a0:	ldr	x0, [x0]
     2a4:	ldr	w2, [sp, #2908]
     2a8:	ldr	x0, [x0, x2, lsl #3]
     2ac:	cmp	x1, x0
     2b0:	b.ls	36c <grub_mod_init-0x48e4>  // b.plast
     2b4:	adrp	x0, 0 <grub_mod_init-0x4c50>
     2b8:	add	x0, x0, #0x0
     2bc:	ldr	x0, [x0]
     2c0:	ldr	w1, [sp, #2908]
     2c4:	ldr	x0, [x0, x1, lsl #3]
     2c8:	add	x1, sp, #0x28
     2cc:	mov	x4, x1
     2d0:	mov	x3, #0xb2b                 	// #2859
     2d4:	mov	x2, #0x0                   	// #0
     2d8:	mov	x1, x0
     2dc:	ldr	x0, [sp, #24]
     2e0:	bl	0 <grub_disk_read>
     2e4:	str	w0, [sp, #2904]
     2e8:	ldr	w0, [sp, #2904]
     2ec:	cmp	w0, #0xb
     2f0:	b.eq	374 <grub_mod_init-0x48dc>  // b.none
     2f4:	add	x0, sp, #0x28
     2f8:	add	x3, x0, #0x40
     2fc:	mov	x2, #0x8                   	// #8
     300:	adrp	x0, 0 <grub_mod_init-0x4c50>
     304:	add	x0, x0, #0x0
     308:	ldr	x1, [x0]
     30c:	mov	x0, x3
     310:	bl	0 <grub_memcmp>
     314:	cmp	w0, #0x0
     318:	b.ne	37c <grub_mod_init-0x48d4>  // b.any
     31c:	ldr	w0, [sp, #2908]
     320:	cmp	w0, #0x0
     324:	b.eq	33c <grub_mod_init-0x4914>  // b.none
     328:	ldr	x1, [sp, #112]
     32c:	ldr	x0, [sp, #16]
     330:	ldr	x0, [x0, #72]
     334:	cmp	x1, x0
     338:	b.ls	350 <grub_mod_init-0x4900>  // b.plast
     33c:	add	x0, sp, #0x28
     340:	mov	x2, #0xb2b                 	// #2859
     344:	mov	x1, x0
     348:	ldr	x0, [sp, #16]
     34c:	bl	b0 <grub_mod_init-0x4ba0>
     350:	ldr	w0, [sp, #2908]
     354:	add	w0, w0, #0x1
     358:	str	w0, [sp, #2908]
     35c:	ldr	w0, [sp, #2908]
     360:	cmp	w0, #0x3
     364:	b.ls	284 <grub_mod_init-0x49cc>  // b.plast
     368:	b	380 <grub_mod_init-0x48d0>
     36c:	nop
     370:	b	380 <grub_mod_init-0x48d0>
     374:	nop
     378:	b	380 <grub_mod_init-0x48d0>
     37c:	nop
     380:	ldr	w0, [sp, #2904]
     384:	cmp	w0, #0xb
     388:	b.eq	398 <grub_mod_init-0x48b8>  // b.none
     38c:	ldr	w0, [sp, #2904]
     390:	cmp	w0, #0x0
     394:	b.ne	3bc <grub_mod_init-0x4894>  // b.any
     398:	ldr	w0, [sp, #2908]
     39c:	cmp	w0, #0x0
     3a0:	b.ne	3bc <grub_mod_init-0x4894>  // b.any
     3a4:	adrp	x0, 0 <grub_mod_init-0x4c50>
     3a8:	add	x0, x0, #0x0
     3ac:	ldr	x1, [x0]
     3b0:	mov	w0, #0x9                   	// #9
     3b4:	bl	0 <grub_error>
     3b8:	b	3e4 <grub_mod_init-0x486c>
     3bc:	ldr	w0, [sp, #2904]
     3c0:	cmp	w0, #0xb
     3c4:	b.ne	3e0 <grub_mod_init-0x4870>  // b.any
     3c8:	str	wzr, [sp, #2904]
     3cc:	adrp	x0, 0 <grub_mod_init-0x4c50>
     3d0:	add	x0, x0, #0x0
     3d4:	ldr	x0, [x0]
     3d8:	ldr	w1, [sp, #2904]
     3dc:	str	w1, [x0]
     3e0:	ldr	w0, [sp, #2904]
     3e4:	ldp	x29, x30, [sp]
     3e8:	add	sp, sp, #0xb60
     3ec:	ret
	...
     410:	sub	sp, sp, #0x10
     414:	str	x0, [sp, #8]
     418:	str	x1, [sp]
     41c:	ldr	x0, [sp, #8]
     420:	ldr	x1, [x0]
     424:	ldr	x0, [sp]
     428:	ldr	x0, [x0]
     42c:	cmp	x1, x0
     430:	b.cs	43c <grub_mod_init-0x4814>  // b.hs, b.nlast
     434:	mov	w0, #0xffffffff            	// #-1
     438:	b	4e0 <grub_mod_init-0x4770>
     43c:	ldr	x0, [sp, #8]
     440:	ldr	x1, [x0]
     444:	ldr	x0, [sp]
     448:	ldr	x0, [x0]
     44c:	cmp	x1, x0
     450:	b.ls	45c <grub_mod_init-0x47f4>  // b.plast
     454:	mov	w0, #0x1                   	// #1
     458:	b	4e0 <grub_mod_init-0x4770>
     45c:	ldr	x0, [sp, #8]
     460:	ldrb	w1, [x0, #8]
     464:	ldr	x0, [sp]
     468:	ldrb	w0, [x0, #8]
     46c:	cmp	w1, w0
     470:	b.cs	47c <grub_mod_init-0x47d4>  // b.hs, b.nlast
     474:	mov	w0, #0xffffffff            	// #-1
     478:	b	4e0 <grub_mod_init-0x4770>
     47c:	ldr	x0, [sp, #8]
     480:	ldrb	w1, [x0, #8]
     484:	ldr	x0, [sp]
     488:	ldrb	w0, [x0, #8]
     48c:	cmp	w1, w0
     490:	b.ls	49c <grub_mod_init-0x47b4>  // b.plast
     494:	mov	w0, #0x1                   	// #1
     498:	b	4e0 <grub_mod_init-0x4770>
     49c:	ldr	x0, [sp, #8]
     4a0:	ldur	x1, [x0, #9]
     4a4:	ldr	x0, [sp]
     4a8:	ldur	x0, [x0, #9]
     4ac:	cmp	x1, x0
     4b0:	b.cs	4bc <grub_mod_init-0x4794>  // b.hs, b.nlast
     4b4:	mov	w0, #0xffffffff            	// #-1
     4b8:	b	4e0 <grub_mod_init-0x4770>
     4bc:	ldr	x0, [sp, #8]
     4c0:	ldur	x1, [x0, #9]
     4c4:	ldr	x0, [sp]
     4c8:	ldur	x0, [x0, #9]
     4cc:	cmp	x1, x0
     4d0:	b.ls	4dc <grub_mod_init-0x4774>  // b.plast
     4d4:	mov	w0, #0x1                   	// #1
     4d8:	b	4e0 <grub_mod_init-0x4770>
     4dc:	mov	w0, #0x0                   	// #0
     4e0:	add	sp, sp, #0x10
     4e4:	ret
     4e8:	stp	x29, x30, [sp, #-32]!
     4ec:	mov	x29, sp
     4f0:	str	x0, [sp, #24]
     4f4:	ldr	x0, [sp, #24]
     4f8:	ldr	x0, [x0, #8]
     4fc:	bl	0 <grub_free>
     500:	nop
     504:	ldp	x29, x30, [sp], #32
     508:	ret
     50c:	stp	x29, x30, [sp, #-48]!
     510:	mov	x29, sp
     514:	str	x0, [sp, #40]
     518:	str	x1, [sp, #32]
     51c:	str	x2, [sp, #24]
     520:	ldr	x0, [sp, #32]
     524:	ldr	x0, [x0, #48]
     528:	ldr	x1, [sp, #24]
     52c:	cmp	x1, x0
     530:	b.eq	578 <grub_mod_init-0x46d8>  // b.none
     534:	adrp	x0, 0 <grub_mod_init-0x4c50>
     538:	add	x0, x0, #0x0
     53c:	ldr	x3, [x0]
     540:	adrp	x0, 0 <grub_mod_init-0x4c50>
     544:	add	x0, x0, #0x0
     548:	ldr	x2, [x0]
     54c:	mov	w1, #0x137                 	// #311
     550:	adrp	x0, 0 <grub_mod_init-0x4c50>
     554:	add	x0, x0, #0x0
     558:	ldr	x0, [x0]
     55c:	bl	0 <grub_real_dprintf>
     560:	adrp	x0, 0 <grub_mod_init-0x4c50>
     564:	add	x0, x0, #0x0
     568:	ldr	x1, [x0]
     56c:	mov	w0, #0x9                   	// #9
     570:	bl	0 <grub_error>
     574:	b	5e8 <grub_mod_init-0x4668>
     578:	ldr	x0, [sp, #40]
     57c:	add	x3, x0, #0x20
     580:	ldr	x0, [sp, #32]
     584:	add	x0, x0, #0x20
     588:	mov	x2, #0x10                  	// #16
     58c:	mov	x1, x0
     590:	mov	x0, x3
     594:	bl	0 <grub_memcmp>
     598:	cmp	w0, #0x0
     59c:	b.eq	5e4 <grub_mod_init-0x466c>  // b.none
     5a0:	adrp	x0, 0 <grub_mod_init-0x4c50>
     5a4:	add	x0, x0, #0x0
     5a8:	ldr	x3, [x0]
     5ac:	adrp	x0, 0 <grub_mod_init-0x4c50>
     5b0:	add	x0, x0, #0x0
     5b4:	ldr	x2, [x0]
     5b8:	mov	w1, #0x13d                 	// #317
     5bc:	adrp	x0, 0 <grub_mod_init-0x4c50>
     5c0:	add	x0, x0, #0x0
     5c4:	ldr	x0, [x0]
     5c8:	bl	0 <grub_real_dprintf>
     5cc:	adrp	x0, 0 <grub_mod_init-0x4c50>
     5d0:	add	x0, x0, #0x0
     5d4:	ldr	x1, [x0]
     5d8:	mov	w0, #0x9                   	// #9
     5dc:	bl	0 <grub_error>
     5e0:	b	5e8 <grub_mod_init-0x4668>
     5e4:	mov	w0, #0x0                   	// #0
     5e8:	ldp	x29, x30, [sp], #48
     5ec:	ret
	...
     620:	stp	x29, x30, [sp, #-64]!
     624:	mov	x29, sp
     628:	str	x0, [sp, #40]
     62c:	str	x1, [sp, #32]
     630:	str	w2, [sp, #28]
     634:	str	w3, [sp, #24]
     638:	str	w4, [sp, #20]
     63c:	ldr	x0, [sp, #40]
     640:	ldr	w0, [x0]
     644:	add	w1, w0, #0x1
     648:	ldr	x0, [sp, #40]
     64c:	str	w1, [x0]
     650:	ldr	x0, [sp, #40]
     654:	ldr	w1, [x0, #4]
     658:	ldr	x0, [sp, #40]
     65c:	ldr	w0, [x0]
     660:	cmp	w1, w0
     664:	b.cs	6dc <grub_mod_init-0x4574>  // b.hs, b.nlast
     668:	ldr	x0, [sp, #40]
     66c:	ldr	w0, [x0, #4]
     670:	lsl	w1, w0, #1
     674:	ldr	x0, [sp, #40]
     678:	str	w1, [x0, #4]
     67c:	ldr	x0, [sp, #40]
     680:	ldr	x2, [x0, #8]
     684:	ldr	x0, [sp, #40]
     688:	ldr	w0, [x0, #4]
     68c:	mov	w1, w0
     690:	mov	x0, x1
     694:	lsl	x0, x0, #1
     698:	add	x0, x0, x1
     69c:	lsl	x0, x0, #3
     6a0:	mov	x1, x0
     6a4:	mov	x0, x2
     6a8:	bl	0 <grub_realloc>
     6ac:	str	x0, [sp, #56]
     6b0:	ldr	x0, [sp, #56]
     6b4:	cmp	x0, #0x0
     6b8:	b.ne	6d0 <grub_mod_init-0x4580>  // b.any
     6bc:	adrp	x0, 0 <grub_mod_init-0x4c50>
     6c0:	add	x0, x0, #0x0
     6c4:	ldr	x0, [x0]
     6c8:	ldr	w0, [x0]
     6cc:	b	7b0 <grub_mod_init-0x44a0>
     6d0:	ldr	x0, [sp, #40]
     6d4:	ldr	x1, [sp, #56]
     6d8:	str	x1, [x0, #8]
     6dc:	ldr	x0, [sp, #40]
     6e0:	ldr	x2, [x0, #8]
     6e4:	ldr	x0, [sp, #40]
     6e8:	ldr	w0, [x0]
     6ec:	sub	w0, w0, #0x1
     6f0:	mov	w1, w0
     6f4:	mov	x0, x1
     6f8:	lsl	x0, x0, #1
     6fc:	add	x0, x0, x1
     700:	lsl	x0, x0, #3
     704:	add	x0, x2, x0
     708:	ldr	x1, [sp, #32]
     70c:	str	x1, [x0]
     710:	ldr	x0, [sp, #40]
     714:	ldr	x2, [x0, #8]
     718:	ldr	x0, [sp, #40]
     71c:	ldr	w0, [x0]
     720:	sub	w0, w0, #0x1
     724:	mov	w1, w0
     728:	mov	x0, x1
     72c:	lsl	x0, x0, #1
     730:	add	x0, x0, x1
     734:	lsl	x0, x0, #3
     738:	add	x0, x2, x0
     73c:	ldr	w1, [sp, #28]
     740:	str	w1, [x0, #8]
     744:	ldr	x0, [sp, #40]
     748:	ldr	x2, [x0, #8]
     74c:	ldr	x0, [sp, #40]
     750:	ldr	w0, [x0]
     754:	sub	w0, w0, #0x1
     758:	mov	w1, w0
     75c:	mov	x0, x1
     760:	lsl	x0, x0, #1
     764:	add	x0, x0, x1
     768:	lsl	x0, x0, #3
     76c:	add	x0, x2, x0
     770:	ldr	w1, [sp, #24]
     774:	str	w1, [x0, #12]
     778:	ldr	x0, [sp, #40]
     77c:	ldr	x2, [x0, #8]
     780:	ldr	x0, [sp, #40]
     784:	ldr	w0, [x0]
     788:	sub	w0, w0, #0x1
     78c:	mov	w1, w0
     790:	mov	x0, x1
     794:	lsl	x0, x0, #1
     798:	add	x0, x0, x1
     79c:	lsl	x0, x0, #3
     7a0:	add	x0, x2, x0
     7a4:	ldr	w1, [sp, #20]
     7a8:	str	w1, [x0, #16]
     7ac:	mov	w0, #0x0                   	// #0
     7b0:	ldp	x29, x30, [sp], #64
     7b4:	ret
	...
     7c0:	stp	x29, x30, [sp, #-240]!
     7c4:	mov	x29, sp
     7c8:	str	x0, [sp, #56]
     7cc:	str	x1, [sp, #48]
     7d0:	str	x2, [sp, #40]
     7d4:	str	x3, [sp, #32]
     7d8:	str	x4, [sp, #24]
     7dc:	b	894 <grub_mod_init-0x43bc>
     7e0:	ldr	x0, [sp, #48]
     7e4:	ldr	x2, [x0, #8]
     7e8:	ldr	x0, [sp, #48]
     7ec:	ldr	w0, [x0]
     7f0:	sub	w0, w0, #0x1
     7f4:	mov	w1, w0
     7f8:	mov	x0, x1
     7fc:	lsl	x0, x0, #1
     800:	add	x0, x0, x1
     804:	lsl	x0, x0, #3
     808:	add	x0, x2, x0
     80c:	ldr	w1, [x0, #8]
     810:	add	w1, w1, #0x1
     814:	str	w1, [x0, #8]
     818:	ldr	x0, [sp, #48]
     81c:	ldr	x2, [x0, #8]
     820:	ldr	x0, [sp, #48]
     824:	ldr	w0, [x0]
     828:	sub	w0, w0, #0x1
     82c:	mov	w1, w0
     830:	mov	x0, x1
     834:	lsl	x0, x0, #1
     838:	add	x0, x0, x1
     83c:	lsl	x0, x0, #3
     840:	add	x0, x2, x0
     844:	ldr	w2, [x0, #8]
     848:	ldr	x0, [sp, #48]
     84c:	ldr	x3, [x0, #8]
     850:	ldr	x0, [sp, #48]
     854:	ldr	w0, [x0]
     858:	sub	w0, w0, #0x1
     85c:	mov	w1, w0
     860:	mov	x0, x1
     864:	lsl	x0, x0, #1
     868:	add	x0, x0, x1
     86c:	lsl	x0, x0, #3
     870:	add	x0, x3, x0
     874:	ldr	w0, [x0, #12]
     878:	cmp	w2, w0
     87c:	b.cc	8a8 <grub_mod_init-0x43a8>  // b.lo, b.ul, b.last
     880:	ldr	x0, [sp, #48]
     884:	ldr	w0, [x0]
     888:	sub	w1, w0, #0x1
     88c:	ldr	x0, [sp, #48]
     890:	str	w1, [x0]
     894:	ldr	x0, [sp, #48]
     898:	ldr	w0, [x0]
     89c:	cmp	w0, #0x0
     8a0:	b.ne	7e0 <grub_mod_init-0x4470>  // b.any
     8a4:	b	8ac <grub_mod_init-0x43a4>
     8a8:	nop
     8ac:	ldr	x0, [sp, #48]
     8b0:	ldr	w0, [x0]
     8b4:	cmp	w0, #0x0
     8b8:	b.ne	9f4 <grub_mod_init-0x425c>  // b.any
     8bc:	mov	w0, #0x0                   	// #0
     8c0:	b	b5c <grub_mod_init-0x40f4>
     8c4:	ldr	x0, [sp, #48]
     8c8:	ldr	x2, [x0, #8]
     8cc:	ldr	x0, [sp, #48]
     8d0:	ldr	w0, [x0]
     8d4:	sub	w0, w0, #0x1
     8d8:	mov	w1, w0
     8dc:	mov	x0, x1
     8e0:	lsl	x0, x0, #1
     8e4:	add	x0, x0, x1
     8e8:	lsl	x0, x0, #3
     8ec:	add	x0, x2, x0
     8f0:	ldr	w0, [x0, #8]
     8f4:	mov	w1, w0
     8f8:	mov	x0, x1
     8fc:	lsl	x0, x0, #5
     900:	add	x2, x0, x1
     904:	ldr	x0, [sp, #48]
     908:	ldr	x3, [x0, #8]
     90c:	ldr	x0, [sp, #48]
     910:	ldr	w0, [x0]
     914:	sub	w0, w0, #0x1
     918:	mov	w1, w0
     91c:	mov	x0, x1
     920:	lsl	x0, x0, #1
     924:	add	x0, x0, x1
     928:	lsl	x0, x0, #3
     92c:	add	x0, x3, x0
     930:	ldr	x0, [x0]
     934:	add	x0, x2, x0
     938:	add	x0, x0, #0x65
     93c:	add	x1, sp, #0x40
     940:	mov	w4, #0x0                   	// #0
     944:	mov	x3, #0x21                  	// #33
     948:	mov	x2, x1
     94c:	mov	x1, x0
     950:	ldr	x0, [sp, #56]
     954:	bl	1de8 <grub_mod_init-0x2e68>
     958:	str	w0, [sp, #236]
     95c:	ldr	w0, [sp, #236]
     960:	cmp	w0, #0x0
     964:	b.eq	974 <grub_mod_init-0x42dc>  // b.none
     968:	ldr	w0, [sp, #236]
     96c:	neg	w0, w0
     970:	b	b5c <grub_mod_init-0x40f4>
     974:	ldur	x0, [sp, #81]
     978:	add	x1, sp, #0x68
     97c:	mov	w4, #0x0                   	// #0
     980:	mov	x3, #0x65                  	// #101
     984:	mov	x2, x1
     988:	mov	x1, x0
     98c:	ldr	x0, [sp, #56]
     990:	bl	1de8 <grub_mod_init-0x2e68>
     994:	str	w0, [sp, #236]
     998:	ldur	x1, [sp, #81]
     99c:	add	x0, sp, #0x68
     9a0:	mov	x2, x1
     9a4:	mov	x1, x0
     9a8:	ldr	x0, [sp, #56]
     9ac:	bl	50c <grub_mod_init-0x4744>
     9b0:	ldr	w0, [sp, #236]
     9b4:	cmp	w0, #0x0
     9b8:	b.eq	9c8 <grub_mod_init-0x4288>  // b.none
     9bc:	ldr	w0, [sp, #236]
     9c0:	neg	w0, w0
     9c4:	b	b5c <grub_mod_init-0x40f4>
     9c8:	ldur	x1, [sp, #81]
     9cc:	ldr	w2, [sp, #200]
     9d0:	ldrb	w0, [sp, #204]
     9d4:	cmp	w0, #0x0
     9d8:	cset	w0, eq  // eq = none
     9dc:	and	w0, w0, #0xff
     9e0:	mov	w4, w0
     9e4:	mov	w3, w2
     9e8:	mov	w2, #0x0                   	// #0
     9ec:	ldr	x0, [sp, #48]
     9f0:	bl	620 <grub_mod_init-0x4630>
     9f4:	ldr	x0, [sp, #48]
     9f8:	ldr	x2, [x0, #8]
     9fc:	ldr	x0, [sp, #48]
     a00:	ldr	w0, [x0]
     a04:	sub	w0, w0, #0x1
     a08:	mov	w1, w0
     a0c:	mov	x0, x1
     a10:	lsl	x0, x0, #1
     a14:	add	x0, x0, x1
     a18:	lsl	x0, x0, #3
     a1c:	add	x0, x2, x0
     a20:	ldr	w0, [x0, #16]
     a24:	cmp	w0, #0x0
     a28:	b.eq	8c4 <grub_mod_init-0x438c>  // b.none
     a2c:	ldr	x0, [sp, #48]
     a30:	ldr	x2, [x0, #8]
     a34:	ldr	x0, [sp, #48]
     a38:	ldr	w0, [x0]
     a3c:	sub	w0, w0, #0x1
     a40:	mov	w1, w0
     a44:	mov	x0, x1
     a48:	lsl	x0, x0, #1
     a4c:	add	x0, x0, x1
     a50:	lsl	x0, x0, #3
     a54:	add	x0, x2, x0
     a58:	ldr	w0, [x0, #8]
     a5c:	mov	w1, w0
     a60:	mov	x0, x1
     a64:	lsl	x0, x0, #1
     a68:	add	x0, x0, x1
     a6c:	lsl	x0, x0, #3
     a70:	add	x2, x0, x1
     a74:	ldr	x0, [sp, #48]
     a78:	ldr	x3, [x0, #8]
     a7c:	ldr	x0, [sp, #48]
     a80:	ldr	w0, [x0]
     a84:	sub	w0, w0, #0x1
     a88:	mov	w1, w0
     a8c:	mov	x0, x1
     a90:	lsl	x0, x0, #1
     a94:	add	x0, x0, x1
     a98:	lsl	x0, x0, #3
     a9c:	add	x0, x3, x0
     aa0:	ldr	x0, [x0]
     aa4:	add	x0, x2, x0
     aa8:	add	x0, x0, #0x65
     aac:	add	x1, sp, #0xd0
     ab0:	mov	w4, #0x0                   	// #0
     ab4:	mov	x3, #0x19                  	// #25
     ab8:	mov	x2, x1
     abc:	mov	x1, x0
     ac0:	ldr	x0, [sp, #56]
     ac4:	bl	1de8 <grub_mod_init-0x2e68>
     ac8:	str	w0, [sp, #236]
     acc:	ldr	w0, [sp, #236]
     ad0:	cmp	w0, #0x0
     ad4:	b.eq	ae4 <grub_mod_init-0x416c>  // b.none
     ad8:	ldr	w0, [sp, #236]
     adc:	neg	w0, w0
     ae0:	b	b5c <grub_mod_init-0x40f4>
     ae4:	ldur	w0, [sp, #229]
     ae8:	mov	w1, w0
     aec:	ldr	x0, [sp, #32]
     af0:	str	x1, [x0]
     af4:	ldr	x0, [sp, #48]
     af8:	ldr	x2, [x0, #8]
     afc:	ldr	x0, [sp, #48]
     b00:	ldr	w0, [x0]
     b04:	sub	w0, w0, #0x1
     b08:	mov	w1, w0
     b0c:	mov	x0, x1
     b10:	lsl	x0, x0, #1
     b14:	add	x0, x0, x1
     b18:	lsl	x0, x0, #3
     b1c:	add	x0, x2, x0
     b20:	ldr	x1, [x0]
     b24:	ldur	w0, [sp, #225]
     b28:	mov	w0, w0
     b2c:	add	x0, x1, x0
     b30:	add	x1, x0, #0x65
     b34:	ldr	x0, [sp, #40]
     b38:	str	x1, [x0]
     b3c:	ldr	x0, [sp, #24]
     b40:	mov	x3, x0
     b44:	add	x2, sp, #0xd0
     b48:	ldp	x0, x1, [x2]
     b4c:	stp	x0, x1, [x3]
     b50:	ldrb	w0, [x2, #16]
     b54:	strb	w0, [x3, #16]
     b58:	mov	w0, #0x1                   	// #1
     b5c:	ldp	x29, x30, [sp], #240
     b60:	ret
     b64:	stp	x29, x30, [sp, #-368]!
     b68:	mov	x29, sp
     b6c:	str	x0, [sp, #72]
     b70:	str	x1, [sp, #64]
     b74:	str	x2, [sp, #56]
     b78:	str	x3, [sp, #48]
     b7c:	str	x4, [sp, #40]
     b80:	str	x5, [sp, #32]
     b84:	str	x6, [sp, #24]
     b88:	str	w7, [sp, #20]
     b8c:	ldr	x0, [sp, #48]
     b90:	str	x0, [sp, #360]
     b94:	mov	w0, #0xffffffff            	// #-1
     b98:	str	w0, [sp, #356]
     b9c:	ldr	x0, [sp, #24]
     ba0:	cmp	x0, #0x0
     ba4:	b.eq	c0c <grub_mod_init-0x4044>  // b.none
     ba8:	ldr	x0, [sp, #24]
     bac:	mov	w1, #0x10                  	// #16
     bb0:	str	w1, [x0, #4]
     bb4:	ldr	x0, [sp, #24]
     bb8:	str	wzr, [x0]
     bbc:	ldr	x0, [sp, #24]
     bc0:	ldr	w0, [x0, #4]
     bc4:	mov	w1, w0
     bc8:	mov	x0, x1
     bcc:	lsl	x0, x0, #1
     bd0:	add	x0, x0, x1
     bd4:	lsl	x0, x0, #3
     bd8:	bl	0 <grub_malloc>
     bdc:	mov	x1, x0
     be0:	ldr	x0, [sp, #24]
     be4:	str	x1, [x0, #8]
     be8:	ldr	x0, [sp, #24]
     bec:	ldr	x0, [x0, #8]
     bf0:	cmp	x0, #0x0
     bf4:	b.ne	c0c <grub_mod_init-0x4044>  // b.any
     bf8:	adrp	x0, 0 <grub_mod_init-0x4c50>
     bfc:	add	x0, x0, #0x0
     c00:	ldr	x0, [x0]
     c04:	ldr	w0, [x0]
     c08:	b	11d0 <grub_mod_init-0x3a80>
     c0c:	ldr	w0, [sp, #20]
     c10:	cmp	w0, #0xa
     c14:	b.le	c30 <grub_mod_init-0x4020>
     c18:	adrp	x0, 0 <grub_mod_init-0x4c50>
     c1c:	add	x0, x0, #0x0
     c20:	ldr	x1, [x0]
     c24:	mov	w0, #0x9                   	// #9
     c28:	bl	0 <grub_error>
     c2c:	b	11d0 <grub_mod_init-0x3a80>
     c30:	ldr	x0, [sp, #64]
     c34:	ldr	x1, [x0]
     c38:	ldr	x0, [sp, #64]
     c3c:	ldrb	w0, [x0, #8]
     c40:	mov	w2, w0
     c44:	ldr	x0, [sp, #64]
     c48:	ldur	x0, [x0, #9]
     c4c:	mov	x6, x0
     c50:	mov	w5, w2
     c54:	mov	x4, x1
     c58:	adrp	x0, 0 <grub_mod_init-0x4c50>
     c5c:	add	x0, x0, #0x0
     c60:	ldr	x3, [x0]
     c64:	adrp	x0, 0 <grub_mod_init-0x4c50>
     c68:	add	x0, x0, #0x0
     c6c:	ldr	x2, [x0]
     c70:	mov	w1, #0x1aa                 	// #426
     c74:	adrp	x0, 0 <grub_mod_init-0x4c50>
     c78:	add	x0, x0, #0x0
     c7c:	ldr	x0, [x0]
     c80:	bl	0 <grub_real_dprintf>
     c84:	ldr	w0, [sp, #356]
     c88:	add	w0, w0, #0x1
     c8c:	str	w0, [sp, #356]
     c90:	ldr	w0, [sp, #20]
     c94:	add	w1, w0, #0x1
     c98:	add	x0, sp, #0xa8
     c9c:	mov	w4, w1
     ca0:	mov	x3, #0x65                  	// #101
     ca4:	mov	x2, x0
     ca8:	ldr	x1, [sp, #360]
     cac:	ldr	x0, [sp, #72]
     cb0:	bl	1de8 <grub_mod_init-0x2e68>
     cb4:	str	w0, [sp, #352]
     cb8:	add	x0, sp, #0xa8
     cbc:	ldr	x2, [sp, #360]
     cc0:	mov	x1, x0
     cc4:	ldr	x0, [sp, #72]
     cc8:	bl	50c <grub_mod_init-0x4744>
     ccc:	ldr	w0, [sp, #352]
     cd0:	cmp	w0, #0x0
     cd4:	b.eq	ce0 <grub_mod_init-0x3f70>  // b.none
     cd8:	ldr	w0, [sp, #352]
     cdc:	b	11d0 <grub_mod_init-0x3a80>
     ce0:	ldr	x0, [sp, #360]
     ce4:	add	x0, x0, #0x65
     ce8:	str	x0, [sp, #360]
     cec:	ldrb	w0, [sp, #268]
     cf0:	cmp	w0, #0x0
     cf4:	b.eq	f40 <grub_mod_init-0x3d10>  // b.none
     cf8:	str	wzr, [sp, #344]
     cfc:	add	x0, sp, #0x80
     d00:	mov	x2, #0x21                  	// #33
     d04:	mov	w1, #0x0                   	// #0
     d08:	bl	0 <grub_memset>
     d0c:	str	wzr, [sp, #348]
     d10:	b	e64 <grub_mod_init-0x3dec>
     d14:	ldr	w1, [sp, #348]
     d18:	mov	x0, x1
     d1c:	lsl	x0, x0, #5
     d20:	add	x1, x0, x1
     d24:	ldr	x0, [sp, #360]
     d28:	add	x1, x1, x0
     d2c:	ldr	w0, [sp, #20]
     d30:	add	w2, w0, #0x1
     d34:	add	x0, sp, #0x58
     d38:	mov	w4, w2
     d3c:	mov	x3, #0x21                  	// #33
     d40:	mov	x2, x0
     d44:	ldr	x0, [sp, #72]
     d48:	bl	1de8 <grub_mod_init-0x2e68>
     d4c:	str	w0, [sp, #352]
     d50:	ldr	w0, [sp, #352]
     d54:	cmp	w0, #0x0
     d58:	b.eq	d64 <grub_mod_init-0x3eec>  // b.none
     d5c:	ldr	w0, [sp, #352]
     d60:	b	11d0 <grub_mod_init-0x3a80>
     d64:	ldr	x0, [sp, #88]
     d68:	ldrb	w1, [sp, #96]
     d6c:	mov	w2, w1
     d70:	ldur	x1, [sp, #97]
     d74:	mov	x7, x1
     d78:	mov	w6, w2
     d7c:	mov	x5, x0
     d80:	ldr	w4, [sp, #356]
     d84:	adrp	x0, 0 <grub_mod_init-0x4c50>
     d88:	add	x0, x0, #0x0
     d8c:	ldr	x3, [x0]
     d90:	adrp	x0, 0 <grub_mod_init-0x4c50>
     d94:	add	x0, x0, #0x0
     d98:	ldr	x2, [x0]
     d9c:	mov	w1, #0x1cb                 	// #459
     da0:	adrp	x0, 0 <grub_mod_init-0x4c50>
     da4:	add	x0, x0, #0x0
     da8:	ldr	x0, [x0]
     dac:	bl	0 <grub_real_dprintf>
     db0:	add	x0, sp, #0x58
     db4:	ldr	x1, [sp, #64]
     db8:	bl	410 <grub_mod_init-0x4840>
     dbc:	cmp	w0, #0x0
     dc0:	b.ne	e1c <grub_mod_init-0x3e34>  // b.any
     dc4:	str	wzr, [sp, #352]
     dc8:	ldr	x0, [sp, #24]
     dcc:	cmp	x0, #0x0
     dd0:	b.eq	dfc <grub_mod_init-0x3e54>  // b.none
     dd4:	ldr	x0, [sp, #360]
     dd8:	sub	x0, x0, #0x65
     ddc:	ldr	w1, [sp, #264]
     de0:	mov	w4, #0x0                   	// #0
     de4:	mov	w3, w1
     de8:	ldr	w2, [sp, #348]
     dec:	mov	x1, x0
     df0:	ldr	x0, [sp, #24]
     df4:	bl	620 <grub_mod_init-0x4630>
     df8:	str	w0, [sp, #352]
     dfc:	ldr	w0, [sp, #352]
     e00:	cmp	w0, #0x0
     e04:	b.eq	e10 <grub_mod_init-0x3e40>  // b.none
     e08:	ldr	w0, [sp, #352]
     e0c:	b	11d0 <grub_mod_init-0x3a80>
     e10:	ldur	x0, [sp, #105]
     e14:	str	x0, [sp, #360]
     e18:	b	c84 <grub_mod_init-0x3fcc>
     e1c:	add	x0, sp, #0x58
     e20:	ldr	x1, [sp, #64]
     e24:	bl	410 <grub_mod_init-0x4840>
     e28:	cmp	w0, #0x0
     e2c:	b.gt	e78 <grub_mod_init-0x3dd8>
     e30:	add	x0, sp, #0x80
     e34:	add	x1, sp, #0x58
     e38:	ldp	x2, x3, [x1]
     e3c:	stp	x2, x3, [x0]
     e40:	ldp	x2, x3, [x1, #16]
     e44:	stp	x2, x3, [x0, #16]
     e48:	ldrb	w1, [x1, #32]
     e4c:	strb	w1, [x0, #32]
     e50:	mov	w0, #0x1                   	// #1
     e54:	str	w0, [sp, #344]
     e58:	ldr	w0, [sp, #348]
     e5c:	add	w0, w0, #0x1
     e60:	str	w0, [sp, #348]
     e64:	ldr	w0, [sp, #264]
     e68:	ldr	w1, [sp, #348]
     e6c:	cmp	w1, w0
     e70:	b.cc	d14 <grub_mod_init-0x3f3c>  // b.lo, b.ul, b.last
     e74:	b	e7c <grub_mod_init-0x3dd4>
     e78:	nop
     e7c:	ldr	w0, [sp, #344]
     e80:	cmp	w0, #0x0
     e84:	b.eq	ee4 <grub_mod_init-0x3d6c>  // b.none
     e88:	str	wzr, [sp, #352]
     e8c:	ldr	x0, [sp, #24]
     e90:	cmp	x0, #0x0
     e94:	b.eq	ec4 <grub_mod_init-0x3d8c>  // b.none
     e98:	ldr	x0, [sp, #360]
     e9c:	sub	x1, x0, #0x65
     ea0:	ldr	w0, [sp, #348]
     ea4:	sub	w0, w0, #0x1
     ea8:	ldr	w2, [sp, #264]
     eac:	mov	w4, #0x0                   	// #0
     eb0:	mov	w3, w2
     eb4:	mov	w2, w0
     eb8:	ldr	x0, [sp, #24]
     ebc:	bl	620 <grub_mod_init-0x4630>
     ec0:	str	w0, [sp, #352]
     ec4:	ldr	w0, [sp, #352]
     ec8:	cmp	w0, #0x0
     ecc:	b.eq	ed8 <grub_mod_init-0x3d78>  // b.none
     ed0:	ldr	w0, [sp, #352]
     ed4:	b	11d0 <grub_mod_init-0x3a80>
     ed8:	ldur	x0, [sp, #145]
     edc:	str	x0, [sp, #360]
     ee0:	b	c84 <grub_mod_init-0x3fcc>
     ee4:	ldr	x0, [sp, #32]
     ee8:	str	xzr, [x0]
     eec:	ldr	x0, [sp, #40]
     ef0:	str	xzr, [x0]
     ef4:	mov	x2, #0x11                  	// #17
     ef8:	mov	w1, #0x0                   	// #0
     efc:	ldr	x0, [sp, #56]
     f00:	bl	0 <grub_memset>
     f04:	ldr	x0, [sp, #24]
     f08:	cmp	x0, #0x0
     f0c:	b.eq	f38 <grub_mod_init-0x3d18>  // b.none
     f10:	ldr	x0, [sp, #360]
     f14:	sub	x0, x0, #0x65
     f18:	ldr	w1, [sp, #264]
     f1c:	mov	w4, #0x0                   	// #0
     f20:	mov	w3, w1
     f24:	mov	w2, #0xffffffff            	// #-1
     f28:	mov	x1, x0
     f2c:	ldr	x0, [sp, #24]
     f30:	bl	620 <grub_mod_init-0x4630>
     f34:	b	11d0 <grub_mod_init-0x3a80>
     f38:	mov	w0, #0x0                   	// #0
     f3c:	b	11d0 <grub_mod_init-0x3a80>
     f40:	str	wzr, [sp, #336]
     f44:	str	wzr, [sp, #340]
     f48:	b	10d0 <grub_mod_init-0x3b80>
     f4c:	ldr	w1, [sp, #340]
     f50:	mov	x0, x1
     f54:	lsl	x0, x0, #1
     f58:	add	x0, x0, x1
     f5c:	lsl	x0, x0, #3
     f60:	add	x1, x0, x1
     f64:	ldr	x0, [sp, #360]
     f68:	add	x1, x1, x0
     f6c:	ldr	w0, [sp, #20]
     f70:	add	w2, w0, #0x1
     f74:	add	x0, sp, #0x130
     f78:	mov	w4, w2
     f7c:	mov	x3, #0x19                  	// #25
     f80:	mov	x2, x0
     f84:	ldr	x0, [sp, #72]
     f88:	bl	1de8 <grub_mod_init-0x2e68>
     f8c:	str	w0, [sp, #352]
     f90:	ldr	w0, [sp, #352]
     f94:	cmp	w0, #0x0
     f98:	b.eq	fa4 <grub_mod_init-0x3cac>  // b.none
     f9c:	ldr	w0, [sp, #352]
     fa0:	b	11d0 <grub_mod_init-0x3a80>
     fa4:	ldr	x0, [sp, #304]
     fa8:	ldrb	w1, [sp, #312]
     fac:	mov	w2, w1
     fb0:	add	x1, sp, #0x200
     fb4:	ldur	x1, [x1, #-199]
     fb8:	mov	x7, x1
     fbc:	mov	w6, w2
     fc0:	mov	x5, x0
     fc4:	ldr	w4, [sp, #356]
     fc8:	adrp	x0, 0 <grub_mod_init-0x4c50>
     fcc:	add	x0, x0, #0x0
     fd0:	ldr	x3, [x0]
     fd4:	adrp	x0, 0 <grub_mod_init-0x4c50>
     fd8:	add	x0, x0, #0x0
     fdc:	ldr	x2, [x0]
     fe0:	mov	w1, #0x200                 	// #512
     fe4:	adrp	x0, 0 <grub_mod_init-0x4c50>
     fe8:	add	x0, x0, #0x0
     fec:	ldr	x0, [x0]
     ff0:	bl	0 <grub_real_dprintf>
     ff4:	add	x0, sp, #0x130
     ff8:	ldr	x1, [sp, #64]
     ffc:	bl	410 <grub_mod_init-0x4840>
    1000:	cmp	w0, #0x0
    1004:	b.ne	1088 <grub_mod_init-0x3bc8>  // b.any
    1008:	add	x0, sp, #0x130
    100c:	mov	x2, #0x11                  	// #17
    1010:	mov	x1, x0
    1014:	ldr	x0, [sp, #56]
    1018:	bl	b0 <grub_mod_init-0x4ba0>
    101c:	add	x0, sp, #0x200
    1020:	ldur	w0, [x0, #-187]
    1024:	mov	w1, w0
    1028:	ldr	x0, [sp, #32]
    102c:	str	x1, [x0]
    1030:	add	x0, sp, #0x200
    1034:	ldur	w0, [x0, #-191]
    1038:	mov	w1, w0
    103c:	ldr	x0, [sp, #360]
    1040:	add	x1, x1, x0
    1044:	ldr	x0, [sp, #40]
    1048:	str	x1, [x0]
    104c:	ldr	x0, [sp, #24]
    1050:	cmp	x0, #0x0
    1054:	b.eq	1080 <grub_mod_init-0x3bd0>  // b.none
    1058:	ldr	x0, [sp, #360]
    105c:	sub	x0, x0, #0x65
    1060:	ldr	w1, [sp, #264]
    1064:	mov	w4, #0x1                   	// #1
    1068:	mov	w3, w1
    106c:	ldr	w2, [sp, #340]
    1070:	mov	x1, x0
    1074:	ldr	x0, [sp, #24]
    1078:	bl	620 <grub_mod_init-0x4630>
    107c:	b	11d0 <grub_mod_init-0x3a80>
    1080:	mov	w0, #0x0                   	// #0
    1084:	b	11d0 <grub_mod_init-0x3a80>
    1088:	add	x0, sp, #0x130
    108c:	ldr	x1, [sp, #64]
    1090:	bl	410 <grub_mod_init-0x4840>
    1094:	cmp	w0, #0x0
    1098:	b.gt	10e4 <grub_mod_init-0x3b6c>
    109c:	mov	w0, #0x1                   	// #1
    10a0:	str	w0, [sp, #336]
    10a4:	add	x0, sp, #0x110
    10a8:	add	x1, sp, #0x130
    10ac:	ldp	x2, x3, [x1]
    10b0:	stp	x2, x3, [x0]
    10b4:	ldr	x2, [x1, #16]
    10b8:	str	x2, [x0, #16]
    10bc:	ldrb	w1, [x1, #24]
    10c0:	strb	w1, [x0, #24]
    10c4:	ldr	w0, [sp, #340]
    10c8:	add	w0, w0, #0x1
    10cc:	str	w0, [sp, #340]
    10d0:	ldr	w0, [sp, #264]
    10d4:	ldr	w1, [sp, #340]
    10d8:	cmp	w1, w0
    10dc:	b.cc	f4c <grub_mod_init-0x3d04>  // b.lo, b.ul, b.last
    10e0:	b	10e8 <grub_mod_init-0x3b68>
    10e4:	nop
    10e8:	ldr	w0, [sp, #336]
    10ec:	cmp	w0, #0x0
    10f0:	b.eq	1178 <grub_mod_init-0x3ad8>  // b.none
    10f4:	add	x0, sp, #0x110
    10f8:	mov	x2, #0x11                  	// #17
    10fc:	mov	x1, x0
    1100:	ldr	x0, [sp, #56]
    1104:	bl	b0 <grub_mod_init-0x4ba0>
    1108:	add	x0, sp, #0x200
    110c:	ldur	w0, [x0, #-219]
    1110:	mov	w1, w0
    1114:	ldr	x0, [sp, #32]
    1118:	str	x1, [x0]
    111c:	add	x0, sp, #0x200
    1120:	ldur	w0, [x0, #-223]
    1124:	mov	w1, w0
    1128:	ldr	x0, [sp, #360]
    112c:	add	x1, x1, x0
    1130:	ldr	x0, [sp, #40]
    1134:	str	x1, [x0]
    1138:	ldr	x0, [sp, #24]
    113c:	cmp	x0, #0x0
    1140:	b.eq	1170 <grub_mod_init-0x3ae0>  // b.none
    1144:	ldr	x0, [sp, #360]
    1148:	sub	x1, x0, #0x65
    114c:	ldr	w0, [sp, #340]
    1150:	sub	w0, w0, #0x1
    1154:	ldr	w2, [sp, #264]
    1158:	mov	w4, #0x1                   	// #1
    115c:	mov	w3, w2
    1160:	mov	w2, w0
    1164:	ldr	x0, [sp, #24]
    1168:	bl	620 <grub_mod_init-0x4630>
    116c:	b	11d0 <grub_mod_init-0x3a80>
    1170:	mov	w0, #0x0                   	// #0
    1174:	b	11d0 <grub_mod_init-0x3a80>
    1178:	ldr	x0, [sp, #32]
    117c:	str	xzr, [x0]
    1180:	ldr	x0, [sp, #40]
    1184:	str	xzr, [x0]
    1188:	mov	x2, #0x11                  	// #17
    118c:	mov	w1, #0x0                   	// #0
    1190:	ldr	x0, [sp, #56]
    1194:	bl	0 <grub_memset>
    1198:	ldr	x0, [sp, #24]
    119c:	cmp	x0, #0x0
    11a0:	b.eq	11cc <grub_mod_init-0x3a84>  // b.none
    11a4:	ldr	x0, [sp, #360]
    11a8:	sub	x0, x0, #0x65
    11ac:	ldr	w1, [sp, #264]
    11b0:	mov	w4, #0x1                   	// #1
    11b4:	mov	w3, w1
    11b8:	mov	w2, #0xffffffff            	// #-1
    11bc:	mov	x1, x0
    11c0:	ldr	x0, [sp, #24]
    11c4:	bl	620 <grub_mod_init-0x4630>
    11c8:	b	11d0 <grub_mod_init-0x3a80>
    11cc:	mov	w0, #0x0                   	// #0
    11d0:	ldp	x29, x30, [sp], #368
    11d4:	ret
	...
    1210:	sub	sp, sp, #0xb60
    1214:	stp	x29, x30, [sp]
    1218:	mov	x29, sp
    121c:	str	x0, [sp, #24]
    1220:	str	x1, [sp, #16]
    1224:	ldr	x0, [sp, #16]
    1228:	str	x0, [sp, #2904]
    122c:	ldr	x0, [sp, #24]
    1230:	bl	0 <grub_device_open>
    1234:	str	x0, [sp, #2896]
    1238:	ldr	x0, [sp, #2896]
    123c:	cmp	x0, #0x0
    1240:	b.ne	124c <grub_mod_init-0x3a04>  // b.any
    1244:	mov	w0, #0x0                   	// #0
    1248:	b	132c <grub_mod_init-0x3924>
    124c:	ldr	x0, [sp, #2896]
    1250:	ldr	x0, [x0]
    1254:	cmp	x0, #0x0
    1258:	b.ne	126c <grub_mod_init-0x39e4>  // b.any
    125c:	ldr	x0, [sp, #2896]
    1260:	bl	0 <grub_device_close>
    1264:	mov	w0, #0x0                   	// #0
    1268:	b	132c <grub_mod_init-0x3924>
    126c:	ldr	x0, [sp, #2896]
    1270:	ldr	x0, [x0]
    1274:	add	x1, sp, #0x20
    1278:	bl	264 <grub_mod_init-0x49ec>
    127c:	str	w0, [sp, #2892]
    1280:	ldr	w0, [sp, #2892]
    1284:	cmp	w0, #0x9
    1288:	b.ne	12ac <grub_mod_init-0x39a4>  // b.any
    128c:	ldr	x0, [sp, #2896]
    1290:	bl	0 <grub_device_close>
    1294:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1298:	add	x0, x0, #0x0
    129c:	ldr	x0, [x0]
    12a0:	str	wzr, [x0]
    12a4:	mov	w0, #0x0                   	// #0
    12a8:	b	132c <grub_mod_init-0x3924>
    12ac:	ldr	w0, [sp, #2892]
    12b0:	cmp	w0, #0x0
    12b4:	b.eq	12cc <grub_mod_init-0x3984>  // b.none
    12b8:	ldr	x0, [sp, #2896]
    12bc:	bl	0 <grub_device_close>
    12c0:	bl	0 <grub_print_error>
    12c4:	mov	w0, #0x0                   	// #0
    12c8:	b	132c <grub_mod_init-0x3924>
    12cc:	ldr	x0, [sp, #2904]
    12d0:	ldr	x0, [x0]
    12d4:	add	x3, x0, #0x20
    12d8:	add	x0, sp, #0x20
    12dc:	add	x0, x0, #0x20
    12e0:	mov	x2, #0x10                  	// #16
    12e4:	mov	x1, x0
    12e8:	mov	x0, x3
    12ec:	bl	0 <grub_memcmp>
    12f0:	cmp	w0, #0x0
    12f4:	b.ne	130c <grub_mod_init-0x3944>  // b.any
    12f8:	ldur	x1, [sp, #233]
    12fc:	ldr	x0, [sp, #2904]
    1300:	ldr	x0, [x0, #8]
    1304:	cmp	x1, x0
    1308:	b.eq	131c <grub_mod_init-0x3934>  // b.none
    130c:	ldr	x0, [sp, #2896]
    1310:	bl	0 <grub_device_close>
    1314:	mov	w0, #0x0                   	// #0
    1318:	b	132c <grub_mod_init-0x3924>
    131c:	ldr	x0, [sp, #2904]
    1320:	ldr	x1, [sp, #2896]
    1324:	str	x1, [x0, #16]
    1328:	mov	w0, #0x1                   	// #1
    132c:	ldp	x29, x30, [sp]
    1330:	add	sp, sp, #0xb60
    1334:	ret
	...
    1340:	stp	x29, x30, [sp, #-80]!
    1344:	mov	x29, sp
    1348:	str	x0, [sp, #24]
    134c:	str	x1, [sp, #16]
    1350:	ldr	x0, [sp, #24]
    1354:	str	x0, [sp, #40]
    1358:	ldr	x0, [sp, #16]
    135c:	str	x0, [sp, #48]
    1360:	str	xzr, [sp, #56]
    1364:	str	wzr, [sp, #76]
    1368:	b	13b8 <grub_mod_init-0x3898>
    136c:	ldr	x0, [sp, #24]
    1370:	ldr	x1, [x0, #2880]
    1374:	ldr	w0, [sp, #76]
    1378:	lsl	x0, x0, #4
    137c:	add	x0, x1, x0
    1380:	ldr	x0, [x0, #8]
    1384:	ldr	x1, [sp, #16]
    1388:	cmp	x1, x0
    138c:	b.ne	13ac <grub_mod_init-0x38a4>  // b.any
    1390:	ldr	x0, [sp, #24]
    1394:	ldr	x1, [x0, #2880]
    1398:	ldr	w0, [sp, #76]
    139c:	lsl	x0, x0, #4
    13a0:	add	x0, x1, x0
    13a4:	ldr	x0, [x0]
    13a8:	b	14e8 <grub_mod_init-0x3768>
    13ac:	ldr	w0, [sp, #76]
    13b0:	add	w0, w0, #0x1
    13b4:	str	w0, [sp, #76]
    13b8:	ldr	x0, [sp, #24]
    13bc:	ldr	w0, [x0, #2888]
    13c0:	ldr	w1, [sp, #76]
    13c4:	cmp	w1, w0
    13c8:	b.cc	136c <grub_mod_init-0x38e4>  // b.lo, b.ul, b.last
    13cc:	add	x0, sp, #0x28
    13d0:	mov	x1, x0
    13d4:	adrp	x0, 0 <grub_mod_init-0x4c50>
    13d8:	add	x0, x0, #0x0
    13dc:	ldr	x0, [x0]
    13e0:	bl	0 <grub_device_iterate>
    13e4:	ldr	x0, [sp, #24]
    13e8:	ldr	w0, [x0, #2888]
    13ec:	add	w1, w0, #0x1
    13f0:	ldr	x0, [sp, #24]
    13f4:	str	w1, [x0, #2888]
    13f8:	ldr	x0, [sp, #24]
    13fc:	ldr	w1, [x0, #2888]
    1400:	ldr	x0, [sp, #24]
    1404:	ldr	w0, [x0, #2892]
    1408:	cmp	w1, w0
    140c:	b.ls	1494 <grub_mod_init-0x37bc>  // b.plast
    1410:	ldr	x0, [sp, #24]
    1414:	ldr	w0, [x0, #2888]
    1418:	lsl	w0, w0, #1
    141c:	add	w1, w0, #0x1
    1420:	ldr	x0, [sp, #24]
    1424:	str	w1, [x0, #2892]
    1428:	ldr	x0, [sp, #24]
    142c:	ldr	x0, [x0, #2880]
    1430:	str	x0, [sp, #64]
    1434:	ldr	x0, [sp, #24]
    1438:	ldr	w0, [x0, #2892]
    143c:	mov	w0, w0
    1440:	lsl	x0, x0, #4
    1444:	mov	x1, x0
    1448:	ldr	x0, [sp, #64]
    144c:	bl	0 <grub_realloc>
    1450:	mov	x1, x0
    1454:	ldr	x0, [sp, #24]
    1458:	str	x1, [x0, #2880]
    145c:	ldr	x0, [sp, #24]
    1460:	ldr	x0, [x0, #2880]
    1464:	cmp	x0, #0x0
    1468:	b.ne	1494 <grub_mod_init-0x37bc>  // b.any
    146c:	ldr	x0, [sp, #56]
    1470:	cmp	x0, #0x0
    1474:	b.eq	1480 <grub_mod_init-0x37d0>  // b.none
    1478:	ldr	x0, [sp, #56]
    147c:	bl	0 <grub_device_close>
    1480:	ldr	x0, [sp, #24]
    1484:	ldr	x1, [sp, #64]
    1488:	str	x1, [x0, #2880]
    148c:	mov	x0, #0x0                   	// #0
    1490:	b	14e8 <grub_mod_init-0x3768>
    1494:	ldr	x0, [sp, #24]
    1498:	ldr	x1, [x0, #2880]
    149c:	ldr	x0, [sp, #24]
    14a0:	ldr	w0, [x0, #2888]
    14a4:	sub	w0, w0, #0x1
    14a8:	mov	w0, w0
    14ac:	lsl	x0, x0, #4
    14b0:	add	x0, x1, x0
    14b4:	ldr	x1, [sp, #16]
    14b8:	str	x1, [x0, #8]
    14bc:	ldr	x0, [sp, #24]
    14c0:	ldr	x1, [x0, #2880]
    14c4:	ldr	x0, [sp, #24]
    14c8:	ldr	w0, [x0, #2888]
    14cc:	sub	w0, w0, #0x1
    14d0:	mov	w0, w0
    14d4:	lsl	x0, x0, #4
    14d8:	add	x0, x1, x0
    14dc:	ldr	x1, [sp, #56]
    14e0:	str	x1, [x0]
    14e4:	ldr	x0, [sp, #56]
    14e8:	ldp	x29, x30, [sp], #80
    14ec:	ret
	...
    14f8:	stp	x29, x30, [sp, #-112]!
    14fc:	mov	x29, sp
    1500:	str	x0, [sp, #72]
    1504:	str	x1, [sp, #64]
    1508:	str	x2, [sp, #56]
    150c:	str	x3, [sp, #48]
    1510:	str	w4, [sp, #44]
    1514:	str	x5, [sp, #32]
    1518:	str	x6, [sp, #24]
    151c:	ldr	x0, [sp, #64]
    1520:	add	x0, x0, #0x30
    1524:	str	x0, [sp, #104]
    1528:	ldrsw	x1, [sp, #44]
    152c:	ldr	x0, [sp, #56]
    1530:	add	x0, x1, x0
    1534:	lsl	x0, x0, #5
    1538:	ldr	x1, [sp, #104]
    153c:	add	x0, x1, x0
    1540:	str	x0, [sp, #104]
    1544:	ldr	x0, [sp, #104]
    1548:	ldr	x0, [x0, #8]
    154c:	ldr	x1, [sp, #48]
    1550:	add	x0, x1, x0
    1554:	str	x0, [sp, #96]
    1558:	ldr	x0, [sp, #104]
    155c:	ldr	x0, [x0, #8]
    1560:	ldr	x6, [sp, #96]
    1564:	mov	x5, x0
    1568:	ldr	x4, [sp, #56]
    156c:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1570:	add	x0, x0, #0x0
    1574:	ldr	x3, [x0]
    1578:	adrp	x0, 0 <grub_mod_init-0x4c50>
    157c:	add	x0, x0, #0x0
    1580:	ldr	x2, [x0]
    1584:	mov	w1, #0x296                 	// #662
    1588:	adrp	x0, 0 <grub_mod_init-0x4c50>
    158c:	add	x0, x0, #0x0
    1590:	ldr	x0, [x0]
    1594:	bl	0 <grub_real_dprintf>
    1598:	ldr	x0, [sp, #104]
    159c:	ldr	x0, [x0]
    15a0:	mov	x1, x0
    15a4:	ldr	x0, [sp, #72]
    15a8:	bl	1340 <grub_mod_init-0x3910>
    15ac:	str	x0, [sp, #88]
    15b0:	ldr	x0, [sp, #88]
    15b4:	cmp	x0, #0x0
    15b8:	b.ne	1600 <grub_mod_init-0x3650>  // b.any
    15bc:	adrp	x0, 0 <grub_mod_init-0x4c50>
    15c0:	add	x0, x0, #0x0
    15c4:	ldr	x3, [x0]
    15c8:	adrp	x0, 0 <grub_mod_init-0x4c50>
    15cc:	add	x0, x0, #0x0
    15d0:	ldr	x2, [x0]
    15d4:	mov	w1, #0x29e                 	// #670
    15d8:	adrp	x0, 0 <grub_mod_init-0x4c50>
    15dc:	add	x0, x0, #0x0
    15e0:	ldr	x0, [x0]
    15e4:	bl	0 <grub_real_dprintf>
    15e8:	adrp	x0, 0 <grub_mod_init-0x4c50>
    15ec:	add	x0, x0, #0x0
    15f0:	ldr	x0, [x0]
    15f4:	str	wzr, [x0]
    15f8:	mov	w0, #0xe                   	// #14
    15fc:	b	1634 <grub_mod_init-0x361c>
    1600:	ldr	x0, [sp, #88]
    1604:	ldr	x5, [x0]
    1608:	ldr	x0, [sp, #96]
    160c:	lsr	x1, x0, #9
    1610:	ldr	x0, [sp, #96]
    1614:	and	x0, x0, #0x1ff
    1618:	ldr	x4, [sp, #24]
    161c:	ldr	x3, [sp, #32]
    1620:	mov	x2, x0
    1624:	mov	x0, x5
    1628:	bl	0 <grub_disk_read>
    162c:	str	w0, [sp, #84]
    1630:	ldr	w0, [sp, #84]
    1634:	ldp	x29, x30, [sp], #112
    1638:	ret
    163c:	nop
	...
    1668:	stp	x29, x30, [sp, #-64]!
    166c:	mov	x29, sp
    1670:	str	x0, [sp, #40]
    1674:	str	x1, [sp, #32]
    1678:	str	x2, [sp, #24]
    167c:	str	x3, [sp, #16]
    1680:	str	xzr, [sp, #56]
    1684:	b	1694 <grub_mod_init-0x35bc>
    1688:	ldr	x0, [sp, #56]
    168c:	add	x0, x0, #0x1
    1690:	str	x0, [sp, #56]
    1694:	ldr	x0, [sp, #56]
    1698:	lsl	x0, x0, #4
    169c:	ldr	x1, [sp, #32]
    16a0:	add	x0, x1, x0
    16a4:	ldr	w0, [x0, #8]
    16a8:	cmp	w0, #0x0
    16ac:	b.eq	16c0 <grub_mod_init-0x3590>  // b.none
    16b0:	ldr	x1, [sp, #56]
    16b4:	ldr	x0, [sp, #24]
    16b8:	cmp	x1, x0
    16bc:	b.cc	1688 <grub_mod_init-0x35c8>  // b.lo, b.ul, b.last
    16c0:	ldr	x1, [sp, #56]
    16c4:	ldr	x0, [sp, #24]
    16c8:	cmp	x1, x0
    16cc:	b.ne	1700 <grub_mod_init-0x3550>  // b.any
    16d0:	adrp	x0, 0 <grub_mod_init-0x4c50>
    16d4:	add	x0, x0, #0x0
    16d8:	ldr	x3, [x0]
    16dc:	adrp	x0, 0 <grub_mod_init-0x4c50>
    16e0:	add	x0, x0, #0x0
    16e4:	ldr	x2, [x0]
    16e8:	mov	w1, #0x2bb                 	// #699
    16ec:	adrp	x0, 0 <grub_mod_init-0x4c50>
    16f0:	add	x0, x0, #0x0
    16f4:	ldr	x0, [x0]
    16f8:	bl	0 <grub_real_dprintf>
    16fc:	b	17e0 <grub_mod_init-0x3470>
    1700:	ldr	x4, [sp, #56]
    1704:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1708:	add	x0, x0, #0x0
    170c:	ldr	x3, [x0]
    1710:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1714:	add	x0, x0, #0x0
    1718:	ldr	x2, [x0]
    171c:	mov	w1, #0x2bf                 	// #703
    1720:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1724:	add	x0, x0, #0x0
    1728:	ldr	x0, [x0]
    172c:	bl	0 <grub_real_dprintf>
    1730:	str	xzr, [sp, #56]
    1734:	mov	w0, #0x1                   	// #1
    1738:	str	w0, [sp, #52]
    173c:	b	17d0 <grub_mod_init-0x3480>
    1740:	ldr	x0, [sp, #56]
    1744:	lsl	x0, x0, #4
    1748:	ldr	x1, [sp, #32]
    174c:	add	x0, x1, x0
    1750:	ldr	w0, [x0, #8]
    1754:	cmp	w0, #0x0
    1758:	b.eq	17c0 <grub_mod_init-0x3490>  // b.none
    175c:	ldr	w0, [sp, #52]
    1760:	cmp	w0, #0x0
    1764:	b.eq	1794 <grub_mod_init-0x34bc>  // b.none
    1768:	ldr	x0, [sp, #56]
    176c:	lsl	x0, x0, #4
    1770:	ldr	x1, [sp, #32]
    1774:	add	x0, x1, x0
    1778:	ldr	x0, [x0]
    177c:	ldr	x2, [sp, #16]
    1780:	mov	x1, x0
    1784:	ldr	x0, [sp, #40]
    1788:	bl	b0 <grub_mod_init-0x4ba0>
    178c:	str	wzr, [sp, #52]
    1790:	b	17c4 <grub_mod_init-0x348c>
    1794:	ldr	x0, [sp, #56]
    1798:	lsl	x0, x0, #4
    179c:	ldr	x1, [sp, #32]
    17a0:	add	x0, x1, x0
    17a4:	ldr	x0, [x0]
    17a8:	ldr	x3, [sp, #16]
    17ac:	mov	x2, x0
    17b0:	ldr	x1, [sp, #40]
    17b4:	ldr	x0, [sp, #40]
    17b8:	bl	dc <grub_mod_init-0x4b74>
    17bc:	b	17c4 <grub_mod_init-0x348c>
    17c0:	nop
    17c4:	ldr	x0, [sp, #56]
    17c8:	add	x0, x0, #0x1
    17cc:	str	x0, [sp, #56]
    17d0:	ldr	x1, [sp, #56]
    17d4:	ldr	x0, [sp, #24]
    17d8:	cmp	x1, x0
    17dc:	b.cc	1740 <grub_mod_init-0x3510>  // b.lo, b.ul, b.last
    17e0:	ldp	x29, x30, [sp], #64
    17e4:	ret
	...
    1808:	stp	x29, x30, [sp, #-80]!
    180c:	mov	x29, sp
    1810:	str	x0, [sp, #56]
    1814:	str	w1, [sp, #52]
    1818:	str	x2, [sp, #40]
    181c:	str	x3, [sp, #32]
    1820:	str	x4, [sp, #24]
    1824:	ldr	x0, [sp, #56]
    1828:	str	x0, [sp, #72]
    182c:	ldrsw	x0, [sp, #52]
    1830:	lsl	x0, x0, #4
    1834:	ldr	x1, [sp, #72]
    1838:	add	x0, x1, x0
    183c:	ldr	w0, [x0, #8]
    1840:	cmp	w0, #0x0
    1844:	b.ne	1870 <grub_mod_init-0x33e0>  // b.any
    1848:	adrp	x0, 0 <grub_mod_init-0x4c50>
    184c:	add	x0, x0, #0x0
    1850:	ldr	x0, [x0]
    1854:	mov	w1, #0xe                   	// #14
    1858:	str	w1, [x0]
    185c:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1860:	add	x0, x0, #0x0
    1864:	ldr	x0, [x0]
    1868:	ldr	w0, [x0]
    186c:	b	18b4 <grub_mod_init-0x339c>
    1870:	ldrsw	x0, [sp, #52]
    1874:	lsl	x0, x0, #4
    1878:	ldr	x1, [sp, #72]
    187c:	add	x0, x1, x0
    1880:	ldr	x0, [x0]
    1884:	ldr	x2, [sp, #24]
    1888:	mov	x1, x0
    188c:	ldr	x0, [sp, #32]
    1890:	bl	b0 <grub_mod_init-0x4ba0>
    1894:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1898:	add	x0, x0, #0x0
    189c:	ldr	x0, [x0]
    18a0:	str	wzr, [x0]
    18a4:	adrp	x0, 0 <grub_mod_init-0x4c50>
    18a8:	add	x0, x0, #0x0
    18ac:	ldr	x0, [x0]
    18b0:	ldr	w0, [x0]
    18b4:	ldp	x29, x30, [sp], #80
    18b8:	ret
    18bc:	nop
	...
    18c8:	sub	sp, sp, #0x50
    18cc:	stp	x29, x30, [sp, #16]
    18d0:	add	x29, sp, #0x10
    18d4:	str	x0, [sp, #72]
    18d8:	str	x1, [sp, #64]
    18dc:	str	x2, [sp, #56]
    18e0:	str	x3, [sp, #48]
    18e4:	str	x4, [sp, #40]
    18e8:	str	x5, [sp, #32]
    18ec:	ldr	x0, [sp, #32]
    18f0:	mov	w1, w0
    18f4:	ldr	x0, [sp, #48]
    18f8:	mov	w2, w0
    18fc:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1900:	add	x0, x0, #0x0
    1904:	ldr	x0, [x0]
    1908:	str	x0, [sp]
    190c:	mov	w7, #0x0                   	// #0
    1910:	ldr	x6, [sp, #56]
    1914:	mov	x5, #0x0                   	// #0
    1918:	ldr	x4, [sp, #40]
    191c:	mov	w3, w2
    1920:	mov	w2, w1
    1924:	ldr	x1, [sp, #64]
    1928:	ldr	x0, [sp, #72]
    192c:	bl	0 <grub_raid6_recover_gen>
    1930:	nop
    1934:	ldp	x29, x30, [sp, #16]
    1938:	add	sp, sp, #0x50
    193c:	ret
	...
    1948:	stp	x29, x30, [sp, #-176]!
    194c:	mov	x29, sp
    1950:	str	x19, [sp, #16]
    1954:	str	x0, [sp, #88]
    1958:	str	x1, [sp, #80]
    195c:	str	x2, [sp, #72]
    1960:	str	x3, [sp, #64]
    1964:	str	x4, [sp, #56]
    1968:	str	x5, [sp, #48]
    196c:	str	x6, [sp, #40]
    1970:	ldr	x0, [sp, #80]
    1974:	ldrh	w0, [x0, #44]
    1978:	and	x0, x0, #0xffff
    197c:	str	x0, [sp, #144]
    1980:	ldr	x0, [sp, #80]
    1984:	ldr	x0, [x0, #24]
    1988:	str	x0, [sp, #136]
    198c:	mov	w0, #0x3                   	// #3
    1990:	str	w0, [sp, #172]
    1994:	ldr	x0, [sp, #144]
    1998:	lsl	x0, x0, #4
    199c:	bl	0 <grub_zalloc>
    19a0:	str	x0, [sp, #128]
    19a4:	ldr	x0, [sp, #128]
    19a8:	cmp	x0, #0x0
    19ac:	b.eq	1d34 <grub_mod_init-0x2f1c>  // b.none
    19b0:	str	xzr, [sp, #160]
    19b4:	b	19fc <grub_mod_init-0x3254>
    19b8:	ldr	x0, [sp, #160]
    19bc:	lsl	x0, x0, #4
    19c0:	ldr	x1, [sp, #128]
    19c4:	add	x19, x1, x0
    19c8:	ldr	x0, [sp, #56]
    19cc:	bl	0 <grub_zalloc>
    19d0:	str	x0, [x19]
    19d4:	ldr	x0, [sp, #160]
    19d8:	lsl	x0, x0, #4
    19dc:	ldr	x1, [sp, #128]
    19e0:	add	x0, x1, x0
    19e4:	ldr	x0, [x0]
    19e8:	cmp	x0, #0x0
    19ec:	b.eq	1d3c <grub_mod_init-0x2f14>  // b.none
    19f0:	ldr	x0, [sp, #160]
    19f4:	add	x0, x0, #0x1
    19f8:	str	x0, [sp, #160]
    19fc:	ldr	x1, [sp, #160]
    1a00:	ldr	x0, [sp, #144]
    1a04:	cmp	x1, x0
    1a08:	b.cc	19b8 <grub_mod_init-0x3298>  // b.lo, b.ul, b.last
    1a0c:	str	xzr, [sp, #152]
    1a10:	str	xzr, [sp, #160]
    1a14:	b	1bec <grub_mod_init-0x3064>
    1a18:	ldr	x0, [sp, #80]
    1a1c:	add	x1, x0, #0x30
    1a20:	ldr	x0, [sp, #160]
    1a24:	lsl	x0, x0, #5
    1a28:	add	x0, x1, x0
    1a2c:	str	x0, [sp, #120]
    1a30:	ldr	x0, [sp, #120]
    1a34:	ldr	x0, [x0, #8]
    1a38:	ldr	x1, [sp, #72]
    1a3c:	add	x0, x1, x0
    1a40:	str	x0, [sp, #112]
    1a44:	ldr	x0, [sp, #120]
    1a48:	ldr	x0, [x0]
    1a4c:	mov	x5, x0
    1a50:	ldr	x4, [sp, #112]
    1a54:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1a58:	add	x0, x0, #0x0
    1a5c:	ldr	x3, [x0]
    1a60:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1a64:	add	x0, x0, #0x0
    1a68:	ldr	x2, [x0]
    1a6c:	mov	w1, #0x30c                 	// #780
    1a70:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1a74:	add	x0, x0, #0x0
    1a78:	ldr	x0, [x0]
    1a7c:	bl	0 <grub_real_dprintf>
    1a80:	ldr	x0, [sp, #120]
    1a84:	ldr	x0, [x0]
    1a88:	mov	x1, x0
    1a8c:	ldr	x0, [sp, #88]
    1a90:	bl	1340 <grub_mod_init-0x3910>
    1a94:	str	x0, [sp, #104]
    1a98:	ldr	x0, [sp, #104]
    1a9c:	cmp	x0, #0x0
    1aa0:	b.ne	1af0 <grub_mod_init-0x3160>  // b.any
    1aa4:	ldr	x0, [sp, #120]
    1aa8:	ldr	x0, [x0]
    1aac:	mov	x5, x0
    1ab0:	ldr	x4, [sp, #160]
    1ab4:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1ab8:	add	x0, x0, #0x0
    1abc:	ldr	x3, [x0]
    1ac0:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1ac4:	add	x0, x0, #0x0
    1ac8:	ldr	x2, [x0]
    1acc:	mov	w1, #0x313                 	// #787
    1ad0:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1ad4:	add	x0, x0, #0x0
    1ad8:	ldr	x0, [x0]
    1adc:	bl	0 <grub_real_dprintf>
    1ae0:	ldr	x0, [sp, #152]
    1ae4:	add	x0, x0, #0x1
    1ae8:	str	x0, [sp, #152]
    1aec:	b	1be0 <grub_mod_init-0x3070>
    1af0:	ldr	x0, [sp, #104]
    1af4:	ldr	x5, [x0]
    1af8:	ldr	x0, [sp, #112]
    1afc:	lsr	x6, x0, #9
    1b00:	ldr	x0, [sp, #112]
    1b04:	and	x2, x0, #0x1ff
    1b08:	ldr	x0, [sp, #160]
    1b0c:	lsl	x0, x0, #4
    1b10:	ldr	x1, [sp, #128]
    1b14:	add	x0, x1, x0
    1b18:	ldr	x0, [x0]
    1b1c:	mov	x4, x0
    1b20:	ldr	x3, [sp, #56]
    1b24:	mov	x1, x6
    1b28:	mov	x0, x5
    1b2c:	bl	0 <grub_disk_read>
    1b30:	str	w0, [sp, #100]
    1b34:	ldr	w0, [sp, #100]
    1b38:	cmp	w0, #0x0
    1b3c:	b.ne	1b98 <grub_mod_init-0x30b8>  // b.any
    1b40:	ldr	x0, [sp, #160]
    1b44:	lsl	x0, x0, #4
    1b48:	ldr	x1, [sp, #128]
    1b4c:	add	x0, x1, x0
    1b50:	mov	w1, #0x1                   	// #1
    1b54:	str	w1, [x0, #8]
    1b58:	ldr	x0, [sp, #120]
    1b5c:	ldr	x0, [x0]
    1b60:	mov	x5, x0
    1b64:	ldr	x4, [sp, #160]
    1b68:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1b6c:	add	x0, x0, #0x0
    1b70:	ldr	x3, [x0]
    1b74:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1b78:	add	x0, x0, #0x0
    1b7c:	ldr	x2, [x0]
    1b80:	mov	w1, #0x31f                 	// #799
    1b84:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1b88:	add	x0, x0, #0x0
    1b8c:	ldr	x0, [x0]
    1b90:	bl	0 <grub_real_dprintf>
    1b94:	b	1be0 <grub_mod_init-0x3070>
    1b98:	ldr	x0, [sp, #120]
    1b9c:	ldr	x0, [x0]
    1ba0:	mov	x5, x0
    1ba4:	ldr	x4, [sp, #160]
    1ba8:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1bac:	add	x0, x0, #0x0
    1bb0:	ldr	x3, [x0]
    1bb4:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1bb8:	add	x0, x0, #0x0
    1bbc:	ldr	x2, [x0]
    1bc0:	mov	w1, #0x324                 	// #804
    1bc4:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1bc8:	add	x0, x0, #0x0
    1bcc:	ldr	x0, [x0]
    1bd0:	bl	0 <grub_real_dprintf>
    1bd4:	ldr	x0, [sp, #152]
    1bd8:	add	x0, x0, #0x1
    1bdc:	str	x0, [sp, #152]
    1be0:	ldr	x0, [sp, #160]
    1be4:	add	x0, x0, #0x1
    1be8:	str	x0, [sp, #160]
    1bec:	ldr	x1, [sp, #160]
    1bf0:	ldr	x0, [sp, #144]
    1bf4:	cmp	x1, x0
    1bf8:	b.cc	1a18 <grub_mod_init-0x3238>  // b.lo, b.ul, b.last
    1bfc:	ldr	x0, [sp, #152]
    1c00:	cmp	x0, #0x1
    1c04:	b.ls	1c58 <grub_mod_init-0x2ff8>  // b.plast
    1c08:	ldr	x0, [sp, #136]
    1c0c:	and	x0, x0, #0x80
    1c10:	cmp	x0, #0x0
    1c14:	b.eq	1c58 <grub_mod_init-0x2ff8>  // b.none
    1c18:	ldr	x5, [sp, #152]
    1c1c:	ldr	x4, [sp, #144]
    1c20:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1c24:	add	x0, x0, #0x0
    1c28:	ldr	x3, [x0]
    1c2c:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1c30:	add	x0, x0, #0x0
    1c34:	ldr	x2, [x0]
    1c38:	mov	w1, #0x32d                 	// #813
    1c3c:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1c40:	add	x0, x0, #0x0
    1c44:	ldr	x0, [x0]
    1c48:	bl	0 <grub_real_dprintf>
    1c4c:	mov	w0, #0xe                   	// #14
    1c50:	str	w0, [sp, #172]
    1c54:	b	1d40 <grub_mod_init-0x2f10>
    1c58:	ldr	x0, [sp, #152]
    1c5c:	cmp	x0, #0x2
    1c60:	b.ls	1cb4 <grub_mod_init-0x2f9c>  // b.plast
    1c64:	ldr	x0, [sp, #136]
    1c68:	and	x0, x0, #0x100
    1c6c:	cmp	x0, #0x0
    1c70:	b.eq	1cb4 <grub_mod_init-0x2f9c>  // b.none
    1c74:	ldr	x5, [sp, #152]
    1c78:	ldr	x4, [sp, #144]
    1c7c:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1c80:	add	x0, x0, #0x0
    1c84:	ldr	x3, [x0]
    1c88:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1c8c:	add	x0, x0, #0x0
    1c90:	ldr	x2, [x0]
    1c94:	mov	w1, #0x335                 	// #821
    1c98:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1c9c:	add	x0, x0, #0x0
    1ca0:	ldr	x0, [x0]
    1ca4:	bl	0 <grub_real_dprintf>
    1ca8:	mov	w0, #0xe                   	// #14
    1cac:	str	w0, [sp, #172]
    1cb0:	b	1d40 <grub_mod_init-0x2f10>
    1cb4:	ldr	x5, [sp, #152]
    1cb8:	ldr	x4, [sp, #144]
    1cbc:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1cc0:	add	x0, x0, #0x0
    1cc4:	ldr	x3, [x0]
    1cc8:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1ccc:	add	x0, x0, #0x0
    1cd0:	ldr	x2, [x0]
    1cd4:	mov	w1, #0x33c                 	// #828
    1cd8:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1cdc:	add	x0, x0, #0x0
    1ce0:	ldr	x0, [x0]
    1ce4:	bl	0 <grub_real_dprintf>
    1ce8:	ldr	x0, [sp, #136]
    1cec:	and	x0, x0, #0x80
    1cf0:	cmp	x0, #0x0
    1cf4:	b.eq	1d10 <grub_mod_init-0x2f40>  // b.none
    1cf8:	ldr	x3, [sp, #56]
    1cfc:	ldr	x2, [sp, #144]
    1d00:	ldr	x1, [sp, #128]
    1d04:	ldr	x0, [sp, #48]
    1d08:	bl	1668 <grub_mod_init-0x35e8>
    1d0c:	b	1d2c <grub_mod_init-0x2f24>
    1d10:	ldr	x5, [sp, #64]
    1d14:	ldr	x4, [sp, #48]
    1d18:	ldr	x3, [sp, #40]
    1d1c:	ldr	x2, [sp, #56]
    1d20:	ldr	x1, [sp, #144]
    1d24:	ldr	x0, [sp, #128]
    1d28:	bl	18c8 <grub_mod_init-0x3388>
    1d2c:	str	wzr, [sp, #172]
    1d30:	b	1d40 <grub_mod_init-0x2f10>
    1d34:	nop
    1d38:	b	1d40 <grub_mod_init-0x2f10>
    1d3c:	nop
    1d40:	ldr	x0, [sp, #128]
    1d44:	cmp	x0, #0x0
    1d48:	b.eq	1d88 <grub_mod_init-0x2ec8>  // b.none
    1d4c:	str	xzr, [sp, #160]
    1d50:	b	1d78 <grub_mod_init-0x2ed8>
    1d54:	ldr	x0, [sp, #160]
    1d58:	lsl	x0, x0, #4
    1d5c:	ldr	x1, [sp, #128]
    1d60:	add	x0, x1, x0
    1d64:	ldr	x0, [x0]
    1d68:	bl	0 <grub_free>
    1d6c:	ldr	x0, [sp, #160]
    1d70:	add	x0, x0, #0x1
    1d74:	str	x0, [sp, #160]
    1d78:	ldr	x1, [sp, #160]
    1d7c:	ldr	x0, [sp, #144]
    1d80:	cmp	x1, x0
    1d84:	b.cc	1d54 <grub_mod_init-0x2efc>  // b.lo, b.ul, b.last
    1d88:	ldr	x0, [sp, #128]
    1d8c:	bl	0 <grub_free>
    1d90:	ldr	w0, [sp, #172]
    1d94:	ldr	x19, [sp, #16]
    1d98:	ldp	x29, x30, [sp], #176
    1d9c:	ret
	...
    1de8:	sub	sp, sp, #0x160
    1dec:	stp	x29, x30, [sp, #16]
    1df0:	add	x29, sp, #0x10
    1df4:	str	x0, [sp, #72]
    1df8:	str	x1, [sp, #64]
    1dfc:	str	x2, [sp, #56]
    1e00:	str	x3, [sp, #48]
    1e04:	str	w4, [sp, #44]
    1e08:	b	2834 <grub_mod_init-0x241c>
    1e0c:	str	wzr, [sp, #316]
    1e10:	str	wzr, [sp, #312]
    1e14:	ldr	x4, [sp, #64]
    1e18:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1e1c:	add	x0, x0, #0x0
    1e20:	ldr	x3, [x0]
    1e24:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1e28:	add	x0, x0, #0x0
    1e2c:	ldr	x2, [x0]
    1e30:	mov	w1, #0x361                 	// #865
    1e34:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1e38:	add	x0, x0, #0x0
    1e3c:	ldr	x0, [x0]
    1e40:	bl	0 <grub_real_dprintf>
    1e44:	ldr	x0, [sp, #72]
    1e48:	add	x0, x0, #0x32b
    1e4c:	str	x0, [sp, #344]
    1e50:	b	1f10 <grub_mod_init-0x2d40>
    1e54:	ldr	x0, [sp, #344]
    1e58:	str	x0, [sp, #336]
    1e5c:	ldr	x0, [sp, #336]
    1e60:	ldrb	w0, [x0, #8]
    1e64:	cmp	w0, #0xe4
    1e68:	b.ne	1f2c <grub_mod_init-0x2d24>  // b.any
    1e6c:	ldr	x0, [sp, #336]
    1e70:	add	x0, x0, #0x11
    1e74:	str	x0, [sp, #328]
    1e78:	ldr	x0, [sp, #336]
    1e7c:	ldur	x1, [x0, #9]
    1e80:	ldr	x0, [sp, #328]
    1e84:	ldr	x0, [x0]
    1e88:	mov	x5, x0
    1e8c:	mov	x4, x1
    1e90:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1e94:	add	x0, x0, #0x0
    1e98:	ldr	x3, [x0]
    1e9c:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1ea0:	add	x0, x0, #0x0
    1ea4:	ldr	x2, [x0]
    1ea8:	mov	w1, #0x36c                 	// #876
    1eac:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1eb0:	add	x0, x0, #0x0
    1eb4:	ldr	x0, [x0]
    1eb8:	bl	0 <grub_real_dprintf>
    1ebc:	ldr	x0, [sp, #336]
    1ec0:	ldur	x0, [x0, #9]
    1ec4:	ldr	x1, [sp, #64]
    1ec8:	cmp	x1, x0
    1ecc:	b.cc	1ef0 <grub_mod_init-0x2d60>  // b.lo, b.ul, b.last
    1ed0:	ldr	x0, [sp, #336]
    1ed4:	ldur	x1, [x0, #9]
    1ed8:	ldr	x0, [sp, #328]
    1edc:	ldr	x0, [x0]
    1ee0:	add	x0, x1, x0
    1ee4:	ldr	x1, [sp, #64]
    1ee8:	cmp	x1, x0
    1eec:	b.cc	2054 <grub_mod_init-0x2bfc>  // b.lo, b.ul, b.last
    1ef0:	ldr	x0, [sp, #328]
    1ef4:	ldrh	w0, [x0, #44]
    1ef8:	and	x0, x0, #0xffff
    1efc:	lsl	x0, x0, #5
    1f00:	add	x0, x0, #0x41
    1f04:	ldr	x1, [sp, #344]
    1f08:	add	x0, x1, x0
    1f0c:	str	x0, [sp, #344]
    1f10:	ldr	x0, [sp, #72]
    1f14:	add	x0, x0, #0x32b
    1f18:	add	x0, x0, #0x7ef
    1f1c:	ldr	x1, [sp, #344]
    1f20:	cmp	x1, x0
    1f24:	b.cc	1e54 <grub_mod_init-0x2dfc>  // b.lo, b.ul, b.last
    1f28:	b	1f30 <grub_mod_init-0x2d20>
    1f2c:	nop
    1f30:	mov	x0, #0x100                 	// #256
    1f34:	str	x0, [sp, #152]
    1f38:	mov	w0, #0xffffffe4            	// #-28
    1f3c:	strb	w0, [sp, #160]
    1f40:	ldr	x0, [sp, #64]
    1f44:	stur	x0, [sp, #161]
    1f48:	ldr	x0, [sp, #72]
    1f4c:	ldr	x2, [x0, #88]
    1f50:	add	x4, sp, #0x90
    1f54:	add	x3, sp, #0x88
    1f58:	add	x1, sp, #0xb0
    1f5c:	add	x0, sp, #0x98
    1f60:	ldr	w7, [sp, #44]
    1f64:	mov	x6, #0x0                   	// #0
    1f68:	mov	x5, x4
    1f6c:	mov	x4, x3
    1f70:	mov	x3, x2
    1f74:	mov	x2, x1
    1f78:	mov	x1, x0
    1f7c:	ldr	x0, [sp, #72]
    1f80:	bl	b64 <grub_mod_init-0x40ec>
    1f84:	str	w0, [sp, #316]
    1f88:	ldr	w0, [sp, #316]
    1f8c:	cmp	w0, #0x0
    1f90:	b.eq	1f9c <grub_mod_init-0x2cb4>  // b.none
    1f94:	ldr	w0, [sp, #316]
    1f98:	b	2844 <grub_mod_init-0x240c>
    1f9c:	add	x0, sp, #0xb0
    1fa0:	str	x0, [sp, #336]
    1fa4:	ldr	x0, [sp, #336]
    1fa8:	ldrb	w0, [x0, #8]
    1fac:	cmp	w0, #0xe4
    1fb0:	b.ne	1fc8 <grub_mod_init-0x2c88>  // b.any
    1fb4:	ldr	x0, [sp, #336]
    1fb8:	ldur	x0, [x0, #9]
    1fbc:	ldr	x1, [sp, #64]
    1fc0:	cmp	x1, x0
    1fc4:	b.cs	1fe0 <grub_mod_init-0x2c70>  // b.hs, b.nlast
    1fc8:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1fcc:	add	x0, x0, #0x0
    1fd0:	ldr	x1, [x0]
    1fd4:	mov	w0, #0x9                   	// #9
    1fd8:	bl	0 <grub_error>
    1fdc:	b	2844 <grub_mod_init-0x240c>
    1fe0:	ldr	x0, [sp, #144]
    1fe4:	bl	0 <grub_malloc>
    1fe8:	str	x0, [sp, #328]
    1fec:	ldr	x0, [sp, #328]
    1ff0:	cmp	x0, #0x0
    1ff4:	b.ne	200c <grub_mod_init-0x2c44>  // b.any
    1ff8:	adrp	x0, 0 <grub_mod_init-0x4c50>
    1ffc:	add	x0, x0, #0x0
    2000:	ldr	x0, [x0]
    2004:	ldr	w0, [x0]
    2008:	b	2844 <grub_mod_init-0x240c>
    200c:	mov	w0, #0x1                   	// #1
    2010:	str	w0, [sp, #312]
    2014:	ldr	x0, [sp, #136]
    2018:	ldr	x1, [sp, #144]
    201c:	ldr	w4, [sp, #44]
    2020:	mov	x3, x1
    2024:	ldr	x2, [sp, #328]
    2028:	mov	x1, x0
    202c:	ldr	x0, [sp, #72]
    2030:	bl	1de8 <grub_mod_init-0x2e68>
    2034:	str	w0, [sp, #316]
    2038:	ldr	w0, [sp, #316]
    203c:	cmp	w0, #0x0
    2040:	b.eq	205c <grub_mod_init-0x2bf4>  // b.none
    2044:	ldr	x0, [sp, #328]
    2048:	bl	0 <grub_free>
    204c:	ldr	w0, [sp, #316]
    2050:	b	2844 <grub_mod_init-0x240c>
    2054:	nop
    2058:	b	2060 <grub_mod_init-0x2bf0>
    205c:	nop
    2060:	ldr	x0, [sp, #336]
    2064:	ldur	x0, [x0, #9]
    2068:	ldr	x1, [sp, #64]
    206c:	sub	x0, x1, x0
    2070:	str	x0, [sp, #272]
    2074:	mov	w0, #0x1                   	// #1
    2078:	str	w0, [sp, #308]
    207c:	str	xzr, [sp, #112]
    2080:	ldr	x0, [sp, #328]
    2084:	ldr	x0, [x0, #24]
    2088:	and	x0, x0, #0x180
    208c:	cmp	x0, #0x0
    2090:	cset	w0, ne  // ne = any
    2094:	and	w0, w0, #0xff
    2098:	str	w0, [sp, #268]
    209c:	ldr	x0, [sp, #328]
    20a0:	ldr	x0, [x0]
    20a4:	ldr	x1, [sp, #272]
    20a8:	cmp	x1, x0
    20ac:	b.cc	20f4 <grub_mod_init-0x2b5c>  // b.lo, b.ul, b.last
    20b0:	adrp	x0, 0 <grub_mod_init-0x4c50>
    20b4:	add	x0, x0, #0x0
    20b8:	ldr	x3, [x0]
    20bc:	adrp	x0, 0 <grub_mod_init-0x4c50>
    20c0:	add	x0, x0, #0x0
    20c4:	ldr	x2, [x0]
    20c8:	mov	w1, #0x3a6                 	// #934
    20cc:	adrp	x0, 0 <grub_mod_init-0x4c50>
    20d0:	add	x0, x0, #0x0
    20d4:	ldr	x0, [x0]
    20d8:	bl	0 <grub_real_dprintf>
    20dc:	adrp	x0, 0 <grub_mod_init-0x4c50>
    20e0:	add	x0, x0, #0x0
    20e4:	ldr	x1, [x0]
    20e8:	mov	w0, #0x9                   	// #9
    20ec:	bl	0 <grub_error>
    20f0:	b	2844 <grub_mod_init-0x240c>
    20f4:	ldr	x0, [sp, #328]
    20f8:	ldrh	w0, [x0, #44]
    20fc:	cmp	w0, #0x0
    2100:	b.eq	210c <grub_mod_init-0x2b44>  // b.none
    2104:	and	w0, w0, #0xffff
    2108:	b	2110 <grub_mod_init-0x2b40>
    210c:	mov	w0, #0x1                   	// #1
    2110:	strh	w0, [sp, #266]
    2114:	ldr	x0, [sp, #328]
    2118:	ldr	x0, [x0, #16]
    211c:	cmp	x0, #0x0
    2120:	b.ne	2128 <grub_mod_init-0x2b28>  // b.any
    2124:	mov	x0, #0x200                 	// #512
    2128:	str	x0, [sp, #256]
    212c:	ldr	x0, [sp, #336]
    2130:	ldur	x1, [x0, #9]
    2134:	ldr	x0, [sp, #328]
    2138:	ldr	x2, [x0]
    213c:	ldrh	w3, [sp, #266]
    2140:	ldr	x0, [sp, #328]
    2144:	ldrh	w0, [x0, #46]
    2148:	mov	w4, w0
    214c:	ldr	x0, [sp, #256]
    2150:	str	x0, [sp]
    2154:	mov	w7, w4
    2158:	mov	w6, w3
    215c:	mov	x5, x2
    2160:	mov	x4, x1
    2164:	adrp	x0, 0 <grub_mod_init-0x4c50>
    2168:	add	x0, x0, #0x0
    216c:	ldr	x3, [x0]
    2170:	adrp	x0, 0 <grub_mod_init-0x4c50>
    2174:	add	x0, x0, #0x0
    2178:	ldr	x2, [x0]
    217c:	mov	w1, #0x3ad                 	// #941
    2180:	adrp	x0, 0 <grub_mod_init-0x4c50>
    2184:	add	x0, x0, #0x0
    2188:	ldr	x0, [x0]
    218c:	bl	0 <grub_real_dprintf>
    2190:	ldr	x0, [sp, #328]
    2194:	ldr	x0, [x0, #24]
    2198:	and	x0, x0, #0xfffffffffffffff8
    219c:	cmp	x0, #0x100
    21a0:	b.eq	242c <grub_mod_init-0x2824>  // b.none
    21a4:	cmp	x0, #0x100
    21a8:	b.hi	2554 <grub_mod_init-0x26fc>  // b.pmore
    21ac:	cmp	x0, #0x80
    21b0:	b.eq	242c <grub_mod_init-0x2824>  // b.none
    21b4:	cmp	x0, #0x80
    21b8:	b.hi	2554 <grub_mod_init-0x26fc>  // b.pmore
    21bc:	cmp	x0, #0x40
    21c0:	b.eq	2374 <grub_mod_init-0x28dc>  // b.none
    21c4:	cmp	x0, #0x40
    21c8:	b.hi	2554 <grub_mod_init-0x26fc>  // b.pmore
    21cc:	cmp	x0, #0x20
    21d0:	b.eq	2290 <grub_mod_init-0x29c0>  // b.none
    21d4:	cmp	x0, #0x20
    21d8:	b.hi	2554 <grub_mod_init-0x26fc>  // b.pmore
    21dc:	cmp	x0, #0x10
    21e0:	b.eq	2290 <grub_mod_init-0x29c0>  // b.none
    21e4:	cmp	x0, #0x10
    21e8:	b.hi	2554 <grub_mod_init-0x26fc>  // b.pmore
    21ec:	cmp	x0, #0x0
    21f0:	b.eq	2200 <grub_mod_init-0x2a50>  // b.none
    21f4:	cmp	x0, #0x8
    21f8:	b.eq	22e8 <grub_mod_init-0x2968>  // b.none
    21fc:	b	2554 <grub_mod_init-0x26fc>
    2200:	adrp	x0, 0 <grub_mod_init-0x4c50>
    2204:	add	x0, x0, #0x0
    2208:	ldr	x3, [x0]
    220c:	adrp	x0, 0 <grub_mod_init-0x4c50>
    2210:	add	x0, x0, #0x0
    2214:	ldr	x2, [x0]
    2218:	mov	w1, #0x3bd                 	// #957
    221c:	adrp	x0, 0 <grub_mod_init-0x4c50>
    2220:	add	x0, x0, #0x0
    2224:	ldr	x0, [x0]
    2228:	bl	0 <grub_real_dprintf>
    222c:	ldr	x0, [sp, #328]
    2230:	ldr	x0, [x0]
    2234:	ldrh	w1, [sp, #266]
    2238:	mov	x2, #0x0                   	// #0
    223c:	bl	0 <grub_divmod64>
    2240:	str	x0, [sp, #288]
    2244:	ldr	x0, [sp, #288]
    2248:	cmp	x0, #0x0
    224c:	b.ne	2258 <grub_mod_init-0x29f8>  // b.any
    2250:	mov	x0, #0x200                 	// #512
    2254:	str	x0, [sp, #288]
    2258:	add	x0, sp, #0x78
    225c:	mov	x2, x0
    2260:	ldr	x1, [sp, #288]
    2264:	ldr	x0, [sp, #272]
    2268:	bl	0 <grub_divmod64>
    226c:	str	x0, [sp, #128]
    2270:	ldr	x0, [sp, #128]
    2274:	add	x1, x0, #0x1
    2278:	ldr	x0, [sp, #288]
    227c:	mul	x1, x1, x0
    2280:	ldr	x0, [sp, #272]
    2284:	sub	x0, x1, x0
    2288:	str	x0, [sp, #320]
    228c:	b	25a4 <grub_mod_init-0x26ac>
    2290:	adrp	x0, 0 <grub_mod_init-0x4c50>
    2294:	add	x0, x0, #0x0
    2298:	ldr	x3, [x0]
    229c:	adrp	x0, 0 <grub_mod_init-0x4c50>
    22a0:	add	x0, x0, #0x0
    22a4:	ldr	x2, [x0]
    22a8:	mov	w1, #0x3ca                 	// #970
    22ac:	adrp	x0, 0 <grub_mod_init-0x4c50>
    22b0:	add	x0, x0, #0x0
    22b4:	ldr	x0, [x0]
    22b8:	bl	0 <grub_real_dprintf>
    22bc:	str	xzr, [sp, #128]
    22c0:	ldr	x0, [sp, #272]
    22c4:	str	x0, [sp, #120]
    22c8:	ldr	x0, [sp, #328]
    22cc:	ldr	x1, [x0]
    22d0:	ldr	x0, [sp, #272]
    22d4:	sub	x0, x1, x0
    22d8:	str	x0, [sp, #320]
    22dc:	mov	w0, #0x2                   	// #2
    22e0:	str	w0, [sp, #308]
    22e4:	b	25a4 <grub_mod_init-0x26ac>
    22e8:	adrp	x0, 0 <grub_mod_init-0x4c50>
    22ec:	add	x0, x0, #0x0
    22f0:	ldr	x3, [x0]
    22f4:	adrp	x0, 0 <grub_mod_init-0x4c50>
    22f8:	add	x0, x0, #0x0
    22fc:	ldr	x2, [x0]
    2300:	mov	w1, #0x3d5                 	// #981
    2304:	adrp	x0, 0 <grub_mod_init-0x4c50>
    2308:	add	x0, x0, #0x0
    230c:	ldr	x0, [x0]
    2310:	bl	0 <grub_real_dprintf>
    2314:	add	x0, sp, #0x68
    2318:	mov	x2, x0
    231c:	ldr	x1, [sp, #256]
    2320:	ldr	x0, [sp, #272]
    2324:	bl	0 <grub_divmod64>
    2328:	str	x0, [sp, #208]
    232c:	ldrh	w0, [sp, #266]
    2330:	add	x1, sp, #0x80
    2334:	mov	x2, x1
    2338:	mov	x1, x0
    233c:	ldr	x0, [sp, #208]
    2340:	bl	0 <grub_divmod64>
    2344:	str	x0, [sp, #200]
    2348:	ldr	x1, [sp, #256]
    234c:	ldr	x0, [sp, #200]
    2350:	mul	x1, x1, x0
    2354:	ldr	x0, [sp, #104]
    2358:	add	x0, x1, x0
    235c:	str	x0, [sp, #120]
    2360:	ldr	x0, [sp, #104]
    2364:	ldr	x1, [sp, #256]
    2368:	sub	x0, x1, x0
    236c:	str	x0, [sp, #320]
    2370:	b	25a4 <grub_mod_init-0x26ac>
    2374:	ldr	x0, [sp, #328]
    2378:	ldrh	w0, [x0, #46]
    237c:	cmp	w0, #0x0
    2380:	b.eq	238c <grub_mod_init-0x28c4>  // b.none
    2384:	and	w0, w0, #0xffff
    2388:	b	2390 <grub_mod_init-0x28c0>
    238c:	mov	w0, #0x1                   	// #1
    2390:	strh	w0, [sp, #238]
    2394:	add	x0, sp, #0x60
    2398:	mov	x2, x0
    239c:	ldr	x1, [sp, #256]
    23a0:	ldr	x0, [sp, #272]
    23a4:	bl	0 <grub_divmod64>
    23a8:	str	x0, [sp, #224]
    23ac:	ldrh	w1, [sp, #266]
    23b0:	ldrh	w0, [sp, #238]
    23b4:	udiv	w0, w1, w0
    23b8:	and	w0, w0, #0xffff
    23bc:	cmp	w0, #0x0
    23c0:	b.eq	23cc <grub_mod_init-0x2884>  // b.none
    23c4:	sxtw	x0, w0
    23c8:	b	23d0 <grub_mod_init-0x2880>
    23cc:	mov	x0, #0x1                   	// #1
    23d0:	add	x1, sp, #0x80
    23d4:	mov	x2, x1
    23d8:	mov	x1, x0
    23dc:	ldr	x0, [sp, #224]
    23e0:	bl	0 <grub_divmod64>
    23e4:	str	x0, [sp, #216]
    23e8:	ldrh	w1, [sp, #238]
    23ec:	ldr	x0, [sp, #128]
    23f0:	mul	x0, x1, x0
    23f4:	str	x0, [sp, #128]
    23f8:	ldrh	w0, [sp, #238]
    23fc:	str	w0, [sp, #308]
    2400:	ldr	x1, [sp, #256]
    2404:	ldr	x0, [sp, #216]
    2408:	mul	x1, x1, x0
    240c:	ldr	x0, [sp, #96]
    2410:	add	x0, x1, x0
    2414:	str	x0, [sp, #120]
    2418:	ldr	x0, [sp, #96]
    241c:	ldr	x1, [sp, #256]
    2420:	sub	x0, x1, x0
    2424:	str	x0, [sp, #320]
    2428:	b	25a4 <grub_mod_init-0x26ac>
    242c:	mov	w0, #0x1                   	// #1
    2430:	str	w0, [sp, #308]
    2434:	ldr	x0, [sp, #328]
    2438:	ldr	x0, [x0, #24]
    243c:	and	x0, x0, #0x80
    2440:	cmp	x0, #0x0
    2444:	b.eq	2480 <grub_mod_init-0x27d0>  // b.none
    2448:	adrp	x0, 0 <grub_mod_init-0x4c50>
    244c:	add	x0, x0, #0x0
    2450:	ldr	x3, [x0]
    2454:	adrp	x0, 0 <grub_mod_init-0x4c50>
    2458:	add	x0, x0, #0x0
    245c:	ldr	x2, [x0]
    2460:	mov	w1, #0x3fe                 	// #1022
    2464:	adrp	x0, 0 <grub_mod_init-0x4c50>
    2468:	add	x0, x0, #0x0
    246c:	ldr	x0, [x0]
    2470:	bl	0 <grub_real_dprintf>
    2474:	mov	x0, #0x1                   	// #1
    2478:	str	x0, [sp, #280]
    247c:	b	24b4 <grub_mod_init-0x279c>
    2480:	adrp	x0, 0 <grub_mod_init-0x4c50>
    2484:	add	x0, x0, #0x0
    2488:	ldr	x3, [x0]
    248c:	adrp	x0, 0 <grub_mod_init-0x4c50>
    2490:	add	x0, x0, #0x0
    2494:	ldr	x2, [x0]
    2498:	mov	w1, #0x403                 	// #1027
    249c:	adrp	x0, 0 <grub_mod_init-0x4c50>
    24a0:	add	x0, x0, #0x0
    24a4:	ldr	x0, [x0]
    24a8:	bl	0 <grub_real_dprintf>
    24ac:	mov	x0, #0x2                   	// #2
    24b0:	str	x0, [sp, #280]
    24b4:	add	x0, sp, #0x58
    24b8:	mov	x2, x0
    24bc:	ldr	x1, [sp, #256]
    24c0:	ldr	x0, [sp, #272]
    24c4:	bl	0 <grub_divmod64>
    24c8:	str	x0, [sp, #248]
    24cc:	ldrh	w1, [sp, #266]
    24d0:	ldr	x0, [sp, #280]
    24d4:	sub	x0, x1, x0
    24d8:	add	x1, sp, #0x80
    24dc:	mov	x2, x1
    24e0:	mov	x1, x0
    24e4:	ldr	x0, [sp, #248]
    24e8:	bl	0 <grub_divmod64>
    24ec:	str	x0, [sp, #240]
    24f0:	ldr	x1, [sp, #128]
    24f4:	ldr	x0, [sp, #240]
    24f8:	add	x0, x1, x0
    24fc:	ldrh	w1, [sp, #266]
    2500:	add	x2, sp, #0x80
    2504:	bl	0 <grub_divmod64>
    2508:	ldrh	w1, [sp, #266]
    250c:	ldr	x0, [sp, #240]
    2510:	add	x1, x1, x0
    2514:	ldr	x0, [sp, #280]
    2518:	sub	x0, x1, x0
    251c:	ldrh	w1, [sp, #266]
    2520:	add	x2, sp, #0x70
    2524:	bl	0 <grub_divmod64>
    2528:	ldr	x1, [sp, #256]
    252c:	ldr	x0, [sp, #240]
    2530:	mul	x1, x1, x0
    2534:	ldr	x0, [sp, #88]
    2538:	add	x0, x1, x0
    253c:	str	x0, [sp, #120]
    2540:	ldr	x0, [sp, #88]
    2544:	ldr	x1, [sp, #256]
    2548:	sub	x0, x1, x0
    254c:	str	x0, [sp, #320]
    2550:	b	25a4 <grub_mod_init-0x26ac>
    2554:	adrp	x0, 0 <grub_mod_init-0x4c50>
    2558:	add	x0, x0, #0x0
    255c:	ldr	x3, [x0]
    2560:	adrp	x0, 0 <grub_mod_init-0x4c50>
    2564:	add	x0, x0, #0x0
    2568:	ldr	x2, [x0]
    256c:	mov	w1, #0x446                 	// #1094
    2570:	adrp	x0, 0 <grub_mod_init-0x4c50>
    2574:	add	x0, x0, #0x0
    2578:	ldr	x0, [x0]
    257c:	bl	0 <grub_real_dprintf>
    2580:	ldr	x0, [sp, #328]
    2584:	ldr	x0, [x0, #24]
    2588:	mov	x2, x0
    258c:	adrp	x0, 0 <grub_mod_init-0x4c50>
    2590:	add	x0, x0, #0x0
    2594:	ldr	x1, [x0]
    2598:	mov	w0, #0x18                  	// #24
    259c:	bl	0 <grub_error>
    25a0:	b	2828 <grub_mod_init-0x2428>
    25a4:	ldr	x0, [sp, #320]
    25a8:	cmp	x0, #0x0
    25ac:	b.ne	25c8 <grub_mod_init-0x2688>  // b.any
    25b0:	adrp	x0, 0 <grub_mod_init-0x4c50>
    25b4:	add	x0, x0, #0x0
    25b8:	ldr	x1, [x0]
    25bc:	mov	w0, #0x26                  	// #38
    25c0:	bl	0 <grub_error>
    25c4:	b	2828 <grub_mod_init-0x2428>
    25c8:	ldr	x1, [sp, #320]
    25cc:	ldr	x0, [sp, #48]
    25d0:	cmp	x1, x0
    25d4:	b.ls	25e0 <grub_mod_init-0x2670>  // b.plast
    25d8:	ldr	x0, [sp, #48]
    25dc:	str	x0, [sp, #320]
    25e0:	str	wzr, [sp, #300]
    25e4:	b	27a0 <grub_mod_init-0x24b0>
    25e8:	ldr	x0, [sp, #336]
    25ec:	ldur	x1, [x0, #9]
    25f0:	ldr	x0, [sp, #328]
    25f4:	ldr	x2, [x0]
    25f8:	ldr	x0, [sp, #328]
    25fc:	ldrh	w0, [x0, #44]
    2600:	mov	w3, w0
    2604:	ldr	x0, [sp, #328]
    2608:	ldrh	w0, [x0, #46]
    260c:	mov	w4, w0
    2610:	ldr	x0, [sp, #328]
    2614:	ldr	x0, [x0, #16]
    2618:	str	x0, [sp]
    261c:	mov	w7, w4
    2620:	mov	w6, w3
    2624:	mov	x5, x2
    2628:	mov	x4, x1
    262c:	adrp	x0, 0 <grub_mod_init-0x4c50>
    2630:	add	x0, x0, #0x0
    2634:	ldr	x3, [x0]
    2638:	adrp	x0, 0 <grub_mod_init-0x4c50>
    263c:	add	x0, x0, #0x0
    2640:	ldr	x2, [x0]
    2644:	mov	w1, #0x453                 	// #1107
    2648:	adrp	x0, 0 <grub_mod_init-0x4c50>
    264c:	add	x0, x0, #0x0
    2650:	ldr	x0, [x0]
    2654:	bl	0 <grub_real_dprintf>
    2658:	ldr	x4, [sp, #64]
    265c:	adrp	x0, 0 <grub_mod_init-0x4c50>
    2660:	add	x0, x0, #0x0
    2664:	ldr	x3, [x0]
    2668:	adrp	x0, 0 <grub_mod_init-0x4c50>
    266c:	add	x0, x0, #0x0
    2670:	ldr	x2, [x0]
    2674:	mov	w1, #0x45c                 	// #1116
    2678:	adrp	x0, 0 <grub_mod_init-0x4c50>
    267c:	add	x0, x0, #0x0
    2680:	ldr	x0, [x0]
    2684:	bl	0 <grub_real_dprintf>
    2688:	ldr	w0, [sp, #268]
    268c:	cmp	w0, #0x0
    2690:	b.eq	2710 <grub_mod_init-0x2540>  // b.none
    2694:	ldr	x0, [sp, #128]
    2698:	ldr	x1, [sp, #120]
    269c:	ldr	x6, [sp, #56]
    26a0:	ldr	x5, [sp, #320]
    26a4:	mov	w4, #0x0                   	// #0
    26a8:	mov	x3, x1
    26ac:	mov	x2, x0
    26b0:	ldr	x1, [sp, #328]
    26b4:	ldr	x0, [sp, #72]
    26b8:	bl	14f8 <grub_mod_init-0x3758>
    26bc:	str	w0, [sp, #316]
    26c0:	adrp	x0, 0 <grub_mod_init-0x4c50>
    26c4:	add	x0, x0, #0x0
    26c8:	ldr	x0, [x0]
    26cc:	str	wzr, [x0]
    26d0:	ldr	w0, [sp, #316]
    26d4:	cmp	w0, #0x0
    26d8:	b.eq	2788 <grub_mod_init-0x24c8>  // b.none
    26dc:	ldr	x0, [sp, #120]
    26e0:	ldr	x1, [sp, #128]
    26e4:	ldr	x2, [sp, #112]
    26e8:	mov	x6, x2
    26ec:	ldr	x5, [sp, #56]
    26f0:	ldr	x4, [sp, #320]
    26f4:	mov	x3, x1
    26f8:	mov	x2, x0
    26fc:	ldr	x1, [sp, #328]
    2700:	ldr	x0, [sp, #72]
    2704:	bl	1948 <grub_mod_init-0x3308>
    2708:	str	w0, [sp, #316]
    270c:	b	2788 <grub_mod_init-0x24c8>
    2710:	str	wzr, [sp, #304]
    2714:	b	2770 <grub_mod_init-0x24e0>
    2718:	ldr	x0, [sp, #128]
    271c:	ldr	x1, [sp, #120]
    2720:	ldr	w2, [sp, #304]
    2724:	ldr	x6, [sp, #56]
    2728:	ldr	x5, [sp, #320]
    272c:	mov	w4, w2
    2730:	mov	x3, x1
    2734:	mov	x2, x0
    2738:	ldr	x1, [sp, #328]
    273c:	ldr	x0, [sp, #72]
    2740:	bl	14f8 <grub_mod_init-0x3758>
    2744:	str	w0, [sp, #316]
    2748:	ldr	w0, [sp, #316]
    274c:	cmp	w0, #0x0
    2750:	b.eq	2784 <grub_mod_init-0x24cc>  // b.none
    2754:	adrp	x0, 0 <grub_mod_init-0x4c50>
    2758:	add	x0, x0, #0x0
    275c:	ldr	x0, [x0]
    2760:	str	wzr, [x0]
    2764:	ldr	w0, [sp, #304]
    2768:	add	w0, w0, #0x1
    276c:	str	w0, [sp, #304]
    2770:	ldr	w1, [sp, #304]
    2774:	ldr	w0, [sp, #308]
    2778:	cmp	w1, w0
    277c:	b.cc	2718 <grub_mod_init-0x2538>  // b.lo, b.ul, b.last
    2780:	b	2788 <grub_mod_init-0x24c8>
    2784:	nop
    2788:	ldr	w0, [sp, #316]
    278c:	cmp	w0, #0x0
    2790:	b.eq	27b0 <grub_mod_init-0x24a0>  // b.none
    2794:	ldr	w0, [sp, #300]
    2798:	add	w0, w0, #0x1
    279c:	str	w0, [sp, #300]
    27a0:	ldr	w0, [sp, #300]
    27a4:	cmp	w0, #0x1
    27a8:	b.ls	25e8 <grub_mod_init-0x2668>  // b.plast
    27ac:	b	27b4 <grub_mod_init-0x249c>
    27b0:	nop
    27b4:	ldr	w0, [sp, #316]
    27b8:	cmp	w0, #0x0
    27bc:	b.eq	27e8 <grub_mod_init-0x2468>  // b.none
    27c0:	adrp	x0, 0 <grub_mod_init-0x4c50>
    27c4:	add	x0, x0, #0x0
    27c8:	ldr	x0, [x0]
    27cc:	ldr	w1, [sp, #316]
    27d0:	str	w1, [x0]
    27d4:	adrp	x0, 0 <grub_mod_init-0x4c50>
    27d8:	add	x0, x0, #0x0
    27dc:	ldr	x0, [x0]
    27e0:	ldr	w0, [x0]
    27e4:	b	2828 <grub_mod_init-0x2428>
    27e8:	ldr	x1, [sp, #48]
    27ec:	ldr	x0, [sp, #320]
    27f0:	sub	x0, x1, x0
    27f4:	str	x0, [sp, #48]
    27f8:	ldr	x1, [sp, #56]
    27fc:	ldr	x0, [sp, #320]
    2800:	add	x0, x1, x0
    2804:	str	x0, [sp, #56]
    2808:	ldr	x1, [sp, #64]
    280c:	ldr	x0, [sp, #320]
    2810:	add	x0, x1, x0
    2814:	str	x0, [sp, #64]
    2818:	ldr	w0, [sp, #312]
    281c:	cmp	w0, #0x0
    2820:	b.ne	282c <grub_mod_init-0x2424>  // b.any
    2824:	b	2834 <grub_mod_init-0x241c>
    2828:	b	2844 <grub_mod_init-0x240c>
    282c:	ldr	x0, [sp, #328]
    2830:	bl	0 <grub_free>
    2834:	ldr	x0, [sp, #48]
    2838:	cmp	x0, #0x0
    283c:	b.ne	1e0c <grub_mod_init-0x2e44>  // b.any
    2840:	mov	w0, #0x0                   	// #0
    2844:	ldp	x29, x30, [sp, #16]
    2848:	add	sp, sp, #0x160
    284c:	ret
	...
    28d0:	stp	x29, x30, [sp, #-48]!
    28d4:	mov	x29, sp
    28d8:	str	x0, [sp, #24]
    28dc:	ldr	x0, [sp, #24]
    28e0:	ldr	x0, [x0]
    28e4:	cmp	x0, #0x0
    28e8:	b.ne	2908 <grub_mod_init-0x2348>  // b.any
    28ec:	adrp	x0, 0 <grub_mod_init-0x4c50>
    28f0:	add	x0, x0, #0x0
    28f4:	ldr	x1, [x0]
    28f8:	mov	w0, #0x9                   	// #9
    28fc:	bl	0 <grub_error>
    2900:	mov	x0, #0x0                   	// #0
    2904:	b	29d8 <grub_mod_init-0x2278>
    2908:	mov	x0, #0xb80                 	// #2944
    290c:	bl	0 <grub_zalloc>
    2910:	str	x0, [sp, #40]
    2914:	ldr	x0, [sp, #40]
    2918:	cmp	x0, #0x0
    291c:	b.ne	2928 <grub_mod_init-0x2328>  // b.any
    2920:	mov	x0, #0x0                   	// #0
    2924:	b	29d8 <grub_mod_init-0x2278>
    2928:	ldr	x0, [sp, #24]
    292c:	ldr	x0, [x0]
    2930:	ldr	x1, [sp, #40]
    2934:	bl	264 <grub_mod_init-0x49ec>
    2938:	str	w0, [sp, #36]
    293c:	ldr	w0, [sp, #36]
    2940:	cmp	w0, #0x0
    2944:	b.eq	2958 <grub_mod_init-0x22f8>  // b.none
    2948:	ldr	x0, [sp, #40]
    294c:	bl	0 <grub_free>
    2950:	mov	x0, #0x0                   	// #0
    2954:	b	29d8 <grub_mod_init-0x2278>
    2958:	ldr	x0, [sp, #40]
    295c:	mov	w1, #0x10                  	// #16
    2960:	str	w1, [x0, #2892]
    2964:	ldr	x0, [sp, #40]
    2968:	ldr	w0, [x0, #2892]
    296c:	mov	w0, w0
    2970:	lsl	x0, x0, #4
    2974:	bl	0 <grub_malloc>
    2978:	mov	x1, x0
    297c:	ldr	x0, [sp, #40]
    2980:	str	x1, [x0, #2880]
    2984:	ldr	x0, [sp, #40]
    2988:	ldr	x0, [x0, #2880]
    298c:	cmp	x0, #0x0
    2990:	b.ne	29a4 <grub_mod_init-0x22ac>  // b.any
    2994:	ldr	x0, [sp, #40]
    2998:	bl	0 <grub_free>
    299c:	mov	x0, #0x0                   	// #0
    29a0:	b	29d8 <grub_mod_init-0x2278>
    29a4:	ldr	x0, [sp, #40]
    29a8:	mov	w1, #0x1                   	// #1
    29ac:	str	w1, [x0, #2888]
    29b0:	ldr	x0, [sp, #40]
    29b4:	ldr	x0, [x0, #2880]
    29b8:	ldr	x1, [sp, #24]
    29bc:	str	x1, [x0]
    29c0:	ldr	x0, [sp, #40]
    29c4:	ldr	x0, [x0, #2880]
    29c8:	ldr	x1, [sp, #40]
    29cc:	ldur	x1, [x1, #201]
    29d0:	str	x1, [x0, #8]
    29d4:	ldr	x0, [sp, #40]
    29d8:	ldp	x29, x30, [sp], #48
    29dc:	ret
	...
    29e8:	stp	x29, x30, [sp, #-48]!
    29ec:	mov	x29, sp
    29f0:	str	x0, [sp, #24]
    29f4:	mov	w0, #0x1                   	// #1
    29f8:	str	w0, [sp, #44]
    29fc:	b	2a48 <grub_mod_init-0x2208>
    2a00:	ldr	x0, [sp, #24]
    2a04:	ldr	x1, [x0, #2880]
    2a08:	ldr	w0, [sp, #44]
    2a0c:	lsl	x0, x0, #4
    2a10:	add	x0, x1, x0
    2a14:	ldr	x0, [x0]
    2a18:	cmp	x0, #0x0
    2a1c:	b.eq	2a3c <grub_mod_init-0x2214>  // b.none
    2a20:	ldr	x0, [sp, #24]
    2a24:	ldr	x1, [x0, #2880]
    2a28:	ldr	w0, [sp, #44]
    2a2c:	lsl	x0, x0, #4
    2a30:	add	x0, x1, x0
    2a34:	ldr	x0, [x0]
    2a38:	bl	0 <grub_device_close>
    2a3c:	ldr	w0, [sp, #44]
    2a40:	add	w0, w0, #0x1
    2a44:	str	w0, [sp, #44]
    2a48:	ldr	x0, [sp, #24]
    2a4c:	ldr	w0, [x0, #2888]
    2a50:	ldr	w1, [sp, #44]
    2a54:	cmp	w1, w0
    2a58:	b.cc	2a00 <grub_mod_init-0x2250>  // b.lo, b.ul, b.last
    2a5c:	ldr	x0, [sp, #24]
    2a60:	ldr	x0, [x0, #2880]
    2a64:	bl	0 <grub_free>
    2a68:	ldr	x0, [sp, #24]
    2a6c:	ldr	x0, [x0, #2936]
    2a70:	bl	0 <grub_free>
    2a74:	ldr	x0, [sp, #24]
    2a78:	bl	0 <grub_free>
    2a7c:	nop
    2a80:	ldp	x29, x30, [sp], #48
    2a84:	ret
    2a88:	stp	x29, x30, [sp, #-112]!
    2a8c:	mov	x29, sp
    2a90:	str	x0, [sp, #40]
    2a94:	str	x1, [sp, #32]
    2a98:	str	x2, [sp, #24]
    2a9c:	str	x3, [sp, #16]
    2aa0:	ldr	x0, [sp, #24]
    2aa4:	str	x0, [sp, #88]
    2aa8:	mov	w0, #0x1                   	// #1
    2aac:	strb	w0, [sp, #96]
    2ab0:	stur	xzr, [sp, #97]
    2ab4:	add	x3, sp, #0x30
    2ab8:	add	x2, sp, #0x38
    2abc:	add	x1, sp, #0x40
    2ac0:	add	x0, sp, #0x58
    2ac4:	mov	w7, #0x0                   	// #0
    2ac8:	mov	x6, #0x0                   	// #0
    2acc:	mov	x5, x3
    2ad0:	mov	x4, x2
    2ad4:	ldr	x3, [sp, #16]
    2ad8:	mov	x2, x1
    2adc:	mov	x1, x0
    2ae0:	ldr	x0, [sp, #40]
    2ae4:	bl	b64 <grub_mod_init-0x40ec>
    2ae8:	str	w0, [sp, #108]
    2aec:	ldr	w0, [sp, #108]
    2af0:	cmp	w0, #0x0
    2af4:	b.eq	2b00 <grub_mod_init-0x2150>  // b.none
    2af8:	ldr	w0, [sp, #108]
    2afc:	b	2b50 <grub_mod_init-0x2100>
    2b00:	ldr	x0, [sp, #64]
    2b04:	ldr	x1, [sp, #24]
    2b08:	cmp	x1, x0
    2b0c:	b.ne	2b1c <grub_mod_init-0x2134>  // b.any
    2b10:	ldrb	w0, [sp, #72]
    2b14:	cmp	w0, #0x1
    2b18:	b.eq	2b34 <grub_mod_init-0x211c>  // b.none
    2b1c:	adrp	x0, 0 <grub_mod_init-0x4c50>
    2b20:	add	x0, x0, #0x0
    2b24:	ldr	x1, [x0]
    2b28:	mov	w0, #0x9                   	// #9
    2b2c:	bl	0 <grub_error>
    2b30:	b	2b50 <grub_mod_init-0x2100>
    2b34:	ldr	x0, [sp, #56]
    2b38:	mov	w4, #0x0                   	// #0
    2b3c:	mov	x3, #0x94                  	// #148
    2b40:	ldr	x2, [sp, #32]
    2b44:	mov	x1, x0
    2b48:	ldr	x0, [sp, #40]
    2b4c:	bl	1de8 <grub_mod_init-0x2e68>
    2b50:	ldp	x29, x30, [sp], #112
    2b54:	ret
	...
    2b60:	stp	x29, x30, [sp, #-32]!
    2b64:	mov	x29, sp
    2b68:	str	x0, [sp, #24]
    2b6c:	str	x1, [sp, #16]
    2b70:	ldr	x0, [sp, #16]
    2b74:	bl	0 <grub_malloc>
    2b78:	ldp	x29, x30, [sp], #32
    2b7c:	ret
    2b80:	stp	x29, x30, [sp, #-32]!
    2b84:	mov	x29, sp
    2b88:	str	x0, [sp, #24]
    2b8c:	str	x1, [sp, #16]
    2b90:	ldr	x0, [sp, #16]
    2b94:	bl	0 <grub_free>
    2b98:	ldp	x29, x30, [sp], #32
    2b9c:	ret
    2ba0:	sub	sp, sp, #0x20
    2ba4:	mov	x1, x8
    2ba8:	adrp	x0, 0 <grub_mod_init-0x4c50>
    2bac:	add	x0, x0, #0x0
    2bb0:	ldr	x0, [x0]
    2bb4:	str	x0, [sp, #8]
    2bb8:	adrp	x0, 0 <grub_mod_init-0x4c50>
    2bbc:	add	x0, x0, #0x0
    2bc0:	ldr	x0, [x0]
    2bc4:	str	x0, [sp, #16]
    2bc8:	str	xzr, [sp, #24]
    2bcc:	mov	x3, x1
    2bd0:	add	x2, sp, #0x8
    2bd4:	ldp	x0, x1, [x2]
    2bd8:	stp	x0, x1, [x3]
    2bdc:	ldr	x0, [x2, #16]
    2be0:	str	x0, [x3, #16]
    2be4:	add	sp, sp, #0x20
    2be8:	ret
    2bec:	nop
	...
    2c00:	stp	x29, x30, [sp, #-176]!
    2c04:	mov	x29, sp
    2c08:	str	x0, [sp, #88]
    2c0c:	str	x1, [sp, #80]
    2c10:	str	x2, [sp, #72]
    2c14:	str	x3, [sp, #64]
    2c18:	str	x4, [sp, #56]
    2c1c:	str	xzr, [sp, #168]
    2c20:	ldr	x0, [sp, #64]
    2c24:	str	x0, [sp, #160]
    2c28:	ldr	x0, [sp, #56]
    2c2c:	str	x0, [sp, #152]
    2c30:	str	xzr, [sp, #144]
    2c34:	mov	x0, #0xffffffffffffffff    	// #-1
    2c38:	str	x0, [sp, #136]
    2c3c:	ldr	x1, [sp, #152]
    2c40:	mov	x0, #0x1ffff               	// #131071
    2c44:	cmp	x1, x0
    2c48:	b.hi	2c8c <grub_mod_init-0x1fc4>  // b.pmore
    2c4c:	mov	x0, #0x20000               	// #131072
    2c50:	bl	0 <grub_malloc>
    2c54:	str	x0, [sp, #168]
    2c58:	ldr	x0, [sp, #168]
    2c5c:	cmp	x0, #0x0
    2c60:	b.ne	2c7c <grub_mod_init-0x1fd4>  // b.any
    2c64:	adrp	x0, 0 <grub_mod_init-0x4c50>
    2c68:	add	x0, x0, #0x0
    2c6c:	ldr	x1, [x0]
    2c70:	mov	w0, #0x3                   	// #3
    2c74:	bl	0 <grub_error>
    2c78:	b	2d80 <grub_mod_init-0x1ed0>
    2c7c:	ldr	x0, [sp, #168]
    2c80:	str	x0, [sp, #160]
    2c84:	mov	x0, #0x20000               	// #131072
    2c88:	str	x0, [sp, #152]
    2c8c:	add	x0, sp, #0x68
    2c90:	mov	x8, x0
    2c94:	bl	2ba0 <grub_mod_init-0x20b0>
    2c98:	add	x2, sp, #0x10
    2c9c:	add	x3, sp, #0x68
    2ca0:	ldp	x0, x1, [x3]
    2ca4:	stp	x0, x1, [x2]
    2ca8:	ldr	x0, [x3, #16]
    2cac:	str	x0, [x2, #16]
    2cb0:	add	x0, sp, #0x10
    2cb4:	bl	0 <ZSTD_createDCtx_advanced>
    2cb8:	str	x0, [sp, #144]
    2cbc:	ldr	x0, [sp, #144]
    2cc0:	cmp	x0, #0x0
    2cc4:	b.ne	2ce0 <grub_mod_init-0x1f70>  // b.any
    2cc8:	adrp	x0, 0 <grub_mod_init-0x4c50>
    2ccc:	add	x0, x0, #0x0
    2cd0:	ldr	x1, [x0]
    2cd4:	mov	w0, #0x3                   	// #3
    2cd8:	bl	0 <grub_error>
    2cdc:	b	2d80 <grub_mod_init-0x1ed0>
    2ce0:	ldr	x1, [sp, #80]
    2ce4:	ldr	x0, [sp, #88]
    2ce8:	bl	0 <ZSTD_findFrameCompressedSize>
    2cec:	str	x0, [sp, #80]
    2cf0:	ldr	x0, [sp, #80]
    2cf4:	bl	0 <ZSTD_isError>
    2cf8:	cmp	w0, #0x0
    2cfc:	b.eq	2d18 <grub_mod_init-0x1f38>  // b.none
    2d00:	adrp	x0, 0 <grub_mod_init-0x4c50>
    2d04:	add	x0, x0, #0x0
    2d08:	ldr	x1, [x0]
    2d0c:	mov	w0, #0x1a                  	// #26
    2d10:	bl	0 <grub_error>
    2d14:	b	2d80 <grub_mod_init-0x1ed0>
    2d18:	ldr	x4, [sp, #80]
    2d1c:	ldr	x3, [sp, #88]
    2d20:	ldr	x2, [sp, #152]
    2d24:	ldr	x1, [sp, #160]
    2d28:	ldr	x0, [sp, #144]
    2d2c:	bl	0 <ZSTD_decompressDCtx>
    2d30:	str	x0, [sp, #128]
    2d34:	ldr	x0, [sp, #128]
    2d38:	bl	0 <ZSTD_isError>
    2d3c:	cmp	w0, #0x0
    2d40:	b.eq	2d5c <grub_mod_init-0x1ef4>  // b.none
    2d44:	adrp	x0, 0 <grub_mod_init-0x4c50>
    2d48:	add	x0, x0, #0x0
    2d4c:	ldr	x1, [x0]
    2d50:	mov	w0, #0x1a                  	// #26
    2d54:	bl	0 <grub_error>
    2d58:	b	2d80 <grub_mod_init-0x1ed0>
    2d5c:	ldr	x1, [sp, #160]
    2d60:	ldr	x0, [sp, #72]
    2d64:	add	x0, x1, x0
    2d68:	ldr	x2, [sp, #56]
    2d6c:	mov	x1, x0
    2d70:	ldr	x0, [sp, #64]
    2d74:	bl	0 <grub_memmove>
    2d78:	ldr	x0, [sp, #56]
    2d7c:	str	x0, [sp, #136]
    2d80:	ldr	x0, [sp, #168]
    2d84:	bl	0 <grub_free>
    2d88:	ldr	x0, [sp, #144]
    2d8c:	bl	0 <ZSTD_freeDCtx>
    2d90:	ldr	x0, [sp, #136]
    2d94:	ldp	x29, x30, [sp], #176
    2d98:	ret
    2d9c:	nop
	...
    2db8:	stp	x29, x30, [sp, #-112]!
    2dbc:	mov	x29, sp
    2dc0:	str	x0, [sp, #56]
    2dc4:	str	x1, [sp, #48]
    2dc8:	str	x2, [sp, #40]
    2dcc:	str	x3, [sp, #32]
    2dd0:	str	x4, [sp, #24]
    2dd4:	str	xzr, [sp, #104]
    2dd8:	ldr	x0, [sp, #56]
    2ddc:	str	x0, [sp, #88]
    2de0:	ldr	x0, [sp, #56]
    2de4:	bl	38 <grub_mod_init-0x4c18>
    2de8:	str	w0, [sp, #84]
    2dec:	ldr	x0, [sp, #56]
    2df0:	add	x0, x0, #0x4
    2df4:	str	x0, [sp, #56]
    2df8:	ldr	w0, [sp, #84]
    2dfc:	ldr	x1, [sp, #48]
    2e00:	cmp	x1, x0
    2e04:	b.cs	2e94 <grub_mod_init-0x1dbc>  // b.hs, b.nlast
    2e08:	mov	x0, #0xffffffffffffffff    	// #-1
    2e0c:	b	30b0 <grub_mod_init-0x1ba0>
    2e10:	ldr	x1, [sp, #56]
    2e14:	ldr	x0, [sp, #88]
    2e18:	sub	x0, x1, x0
    2e1c:	and	x0, x0, #0xffc
    2e20:	cmp	x0, #0xffc
    2e24:	b.ne	2e48 <grub_mod_init-0x1e08>  // b.any
    2e28:	ldr	x1, [sp, #56]
    2e2c:	ldr	x0, [sp, #88]
    2e30:	sub	x0, x1, x0
    2e34:	add	x0, x0, #0x3
    2e38:	and	x0, x0, #0xfffffffffffffffc
    2e3c:	ldr	x1, [sp, #88]
    2e40:	add	x0, x1, x0
    2e44:	str	x0, [sp, #56]
    2e48:	ldr	x0, [sp, #56]
    2e4c:	bl	38 <grub_mod_init-0x4c18>
    2e50:	str	w0, [sp, #80]
    2e54:	ldr	x0, [sp, #56]
    2e58:	add	x0, x0, #0x4
    2e5c:	str	x0, [sp, #56]
    2e60:	ldr	w1, [sp, #80]
    2e64:	mov	w0, #0x1143                	// #4419
    2e68:	cmp	w1, w0
    2e6c:	b.ls	2e78 <grub_mod_init-0x1dd8>  // b.plast
    2e70:	mov	x0, #0xffffffffffffffff    	// #-1
    2e74:	b	30b0 <grub_mod_init-0x1ba0>
    2e78:	ldr	x0, [sp, #40]
    2e7c:	sub	x0, x0, #0x1, lsl #12
    2e80:	str	x0, [sp, #40]
    2e84:	ldr	w0, [sp, #80]
    2e88:	ldr	x1, [sp, #56]
    2e8c:	add	x0, x1, x0
    2e90:	str	x0, [sp, #56]
    2e94:	ldr	x0, [sp, #40]
    2e98:	cmp	x0, #0xfff
    2e9c:	b.hi	2e10 <grub_mod_init-0x1e40>  // b.pmore
    2ea0:	b	30a0 <grub_mod_init-0x1bb0>
    2ea4:	mov	x0, #0x1000                	// #4096
    2ea8:	str	x0, [sp, #64]
    2eac:	ldr	x1, [sp, #56]
    2eb0:	ldr	x0, [sp, #88]
    2eb4:	sub	x0, x1, x0
    2eb8:	and	x0, x0, #0xffc
    2ebc:	cmp	x0, #0xffc
    2ec0:	b.ne	2ee4 <grub_mod_init-0x1d6c>  // b.any
    2ec4:	ldr	x1, [sp, #56]
    2ec8:	ldr	x0, [sp, #88]
    2ecc:	sub	x0, x1, x0
    2ed0:	add	x0, x0, #0x3
    2ed4:	and	x0, x0, #0xfffffffffffffffc
    2ed8:	ldr	x1, [sp, #88]
    2edc:	add	x0, x1, x0
    2ee0:	str	x0, [sp, #56]
    2ee4:	ldr	x0, [sp, #56]
    2ee8:	bl	38 <grub_mod_init-0x4c18>
    2eec:	str	w0, [sp, #80]
    2ef0:	ldr	x0, [sp, #56]
    2ef4:	add	x0, x0, #0x4
    2ef8:	str	x0, [sp, #56]
    2efc:	ldr	w1, [sp, #80]
    2f00:	mov	w0, #0x1143                	// #4419
    2f04:	cmp	w1, w0
    2f08:	b.ls	2f14 <grub_mod_init-0x1d3c>  // b.plast
    2f0c:	mov	x0, #0xffffffffffffffff    	// #-1
    2f10:	b	30b0 <grub_mod_init-0x1ba0>
    2f14:	ldr	x0, [sp, #40]
    2f18:	cmp	x0, #0x0
    2f1c:	b.ne	2f2c <grub_mod_init-0x1d24>  // b.any
    2f20:	ldr	x0, [sp, #24]
    2f24:	cmp	x0, #0xfff
    2f28:	b.hi	3030 <grub_mod_init-0x1c20>  // b.pmore
    2f2c:	mov	x1, #0x1000                	// #4096
    2f30:	ldr	x0, [sp, #40]
    2f34:	sub	x0, x1, x0
    2f38:	str	x0, [sp, #96]
    2f3c:	ldr	x1, [sp, #96]
    2f40:	ldr	x0, [sp, #24]
    2f44:	cmp	x1, x0
    2f48:	b.ls	2f54 <grub_mod_init-0x1cfc>  // b.plast
    2f4c:	ldr	x0, [sp, #24]
    2f50:	str	x0, [sp, #96]
    2f54:	mov	x0, #0x1000                	// #4096
    2f58:	bl	0 <grub_malloc>
    2f5c:	str	x0, [sp, #72]
    2f60:	ldr	x0, [sp, #72]
    2f64:	cmp	x0, #0x0
    2f68:	b.ne	2f74 <grub_mod_init-0x1cdc>  // b.any
    2f6c:	mov	x0, #0xffffffffffffffff    	// #-1
    2f70:	b	30b0 <grub_mod_init-0x1ba0>
    2f74:	ldr	w0, [sp, #80]
    2f78:	add	x1, sp, #0x40
    2f7c:	mov	x4, #0x0                   	// #0
    2f80:	mov	x3, x1
    2f84:	ldr	x2, [sp, #72]
    2f88:	mov	x1, x0
    2f8c:	ldr	x0, [sp, #56]
    2f90:	bl	0 <lzo1x_decompress_safe>
    2f94:	cmp	w0, #0x0
    2f98:	b.eq	2fac <grub_mod_init-0x1ca4>  // b.none
    2f9c:	ldr	x0, [sp, #72]
    2fa0:	bl	0 <grub_free>
    2fa4:	mov	x0, #0xffffffffffffffff    	// #-1
    2fa8:	b	30b0 <grub_mod_init-0x1ba0>
    2fac:	ldr	x0, [sp, #64]
    2fb0:	ldr	x1, [sp, #96]
    2fb4:	cmp	x1, x0
    2fb8:	b.ls	2fc4 <grub_mod_init-0x1c8c>  // b.plast
    2fbc:	ldr	x0, [sp, #64]
    2fc0:	str	x0, [sp, #96]
    2fc4:	ldr	x1, [sp, #72]
    2fc8:	ldr	x0, [sp, #40]
    2fcc:	add	x0, x1, x0
    2fd0:	ldr	x2, [sp, #96]
    2fd4:	mov	x1, x0
    2fd8:	ldr	x0, [sp, #32]
    2fdc:	bl	b0 <grub_mod_init-0x4ba0>
    2fe0:	ldr	x1, [sp, #24]
    2fe4:	ldr	x0, [sp, #96]
    2fe8:	sub	x0, x1, x0
    2fec:	str	x0, [sp, #24]
    2ff0:	ldr	x1, [sp, #104]
    2ff4:	ldr	x0, [sp, #96]
    2ff8:	add	x0, x1, x0
    2ffc:	str	x0, [sp, #104]
    3000:	ldr	x1, [sp, #32]
    3004:	ldr	x0, [sp, #96]
    3008:	add	x0, x1, x0
    300c:	str	x0, [sp, #32]
    3010:	ldr	w0, [sp, #80]
    3014:	ldr	x1, [sp, #56]
    3018:	add	x0, x1, x0
    301c:	str	x0, [sp, #56]
    3020:	str	xzr, [sp, #40]
    3024:	ldr	x0, [sp, #72]
    3028:	bl	0 <grub_free>
    302c:	b	30a0 <grub_mod_init-0x1bb0>
    3030:	ldr	w0, [sp, #80]
    3034:	add	x1, sp, #0x40
    3038:	mov	x4, #0x0                   	// #0
    303c:	mov	x3, x1
    3040:	ldr	x2, [sp, #32]
    3044:	mov	x1, x0
    3048:	ldr	x0, [sp, #56]
    304c:	bl	0 <lzo1x_decompress_safe>
    3050:	cmp	w0, #0x0
    3054:	b.eq	3060 <grub_mod_init-0x1bf0>  // b.none
    3058:	mov	x0, #0xffffffffffffffff    	// #-1
    305c:	b	30b0 <grub_mod_init-0x1ba0>
    3060:	ldr	x0, [sp, #64]
    3064:	ldr	x1, [sp, #24]
    3068:	sub	x0, x1, x0
    306c:	str	x0, [sp, #24]
    3070:	ldr	x0, [sp, #64]
    3074:	ldr	x1, [sp, #104]
    3078:	add	x0, x1, x0
    307c:	str	x0, [sp, #104]
    3080:	ldr	x0, [sp, #64]
    3084:	ldr	x1, [sp, #32]
    3088:	add	x0, x1, x0
    308c:	str	x0, [sp, #32]
    3090:	ldr	w0, [sp, #80]
    3094:	ldr	x1, [sp, #56]
    3098:	add	x0, x1, x0
    309c:	str	x0, [sp, #56]
    30a0:	ldr	x0, [sp, #24]
    30a4:	cmp	x0, #0x0
    30a8:	b.ne	2ea4 <grub_mod_init-0x1dac>  // b.any
    30ac:	ldr	x0, [sp, #104]
    30b0:	ldp	x29, x30, [sp], #112
    30b4:	ret
    30b8:	stp	x29, x30, [sp, #-192]!
    30bc:	mov	x29, sp
    30c0:	str	x0, [sp, #56]
    30c4:	str	x1, [sp, #48]
    30c8:	str	x2, [sp, #40]
    30cc:	str	x3, [sp, #32]
    30d0:	str	x4, [sp, #24]
    30d4:	str	x5, [sp, #16]
    30d8:	ldr	x0, [sp, #32]
    30dc:	str	x0, [sp, #184]
    30e0:	b	38f0 <grub_mod_init-0x1360>
    30e4:	ldr	x0, [sp, #56]
    30e8:	ldr	x0, [x0, #2936]
    30ec:	cmp	x0, #0x0
    30f0:	b.eq	3144 <grub_mod_init-0x1b0c>  // b.none
    30f4:	ldr	x0, [sp, #56]
    30f8:	ldr	x0, [x0, #2896]
    30fc:	ldr	x1, [sp, #184]
    3100:	cmp	x1, x0
    3104:	b.cc	3144 <grub_mod_init-0x1b0c>  // b.lo, b.ul, b.last
    3108:	ldr	x0, [sp, #56]
    310c:	ldr	x0, [x0, #2912]
    3110:	ldr	x1, [sp, #48]
    3114:	cmp	x1, x0
    3118:	b.ne	3144 <grub_mod_init-0x1b0c>  // b.any
    311c:	ldr	x0, [sp, #56]
    3120:	ldr	x0, [x0, #2920]
    3124:	ldr	x1, [sp, #40]
    3128:	cmp	x1, x0
    312c:	b.ne	3144 <grub_mod_init-0x1b0c>  // b.any
    3130:	ldr	x0, [sp, #56]
    3134:	ldr	x0, [x0, #2904]
    3138:	ldr	x1, [sp, #184]
    313c:	cmp	x1, x0
    3140:	b.cc	33ac <grub_mod_init-0x18a4>  // b.lo, b.ul, b.last
    3144:	ldr	x0, [sp, #56]
    3148:	ldr	x0, [x0, #2936]
    314c:	bl	0 <grub_free>
    3150:	ldr	x0, [sp, #48]
    3154:	str	x0, [sp, #112]
    3158:	mov	w0, #0x6c                  	// #108
    315c:	strb	w0, [sp, #120]
    3160:	ldr	x0, [sp, #184]
    3164:	stur	x0, [sp, #121]
    3168:	add	x3, sp, #0x48
    316c:	add	x2, sp, #0x50
    3170:	add	x1, sp, #0x58
    3174:	add	x0, sp, #0x70
    3178:	mov	w7, #0x0                   	// #0
    317c:	mov	x6, #0x0                   	// #0
    3180:	mov	x5, x3
    3184:	mov	x4, x2
    3188:	ldr	x3, [sp, #40]
    318c:	mov	x2, x1
    3190:	mov	x1, x0
    3194:	ldr	x0, [sp, #56]
    3198:	bl	b64 <grub_mod_init-0x40ec>
    319c:	str	w0, [sp, #164]
    31a0:	ldr	w0, [sp, #164]
    31a4:	cmp	w0, #0x0
    31a8:	b.eq	31b4 <grub_mod_init-0x1a9c>  // b.none
    31ac:	mov	x0, #0xffffffffffffffff    	// #-1
    31b0:	b	3908 <grub_mod_init-0x1348>
    31b4:	ldr	x0, [sp, #88]
    31b8:	ldr	x1, [sp, #48]
    31bc:	cmp	x1, x0
    31c0:	b.ne	31d0 <grub_mod_init-0x1a80>  // b.any
    31c4:	ldrb	w0, [sp, #96]
    31c8:	cmp	w0, #0x6c
    31cc:	b.eq	31ec <grub_mod_init-0x1a64>  // b.none
    31d0:	adrp	x0, 0 <grub_mod_init-0x4c50>
    31d4:	add	x0, x0, #0x0
    31d8:	ldr	x1, [x0]
    31dc:	mov	w0, #0x9                   	// #9
    31e0:	bl	0 <grub_error>
    31e4:	mov	x0, #0xffffffffffffffff    	// #-1
    31e8:	b	3908 <grub_mod_init-0x1348>
    31ec:	ldr	x0, [sp, #72]
    31f0:	cmp	x0, #0x14
    31f4:	b.gt	3214 <grub_mod_init-0x1a3c>
    31f8:	adrp	x0, 0 <grub_mod_init-0x4c50>
    31fc:	add	x0, x0, #0x0
    3200:	ldr	x1, [x0]
    3204:	mov	w0, #0x9                   	// #9
    3208:	bl	0 <grub_error>
    320c:	mov	x0, #0xffffffffffffffff    	// #-1
    3210:	b	3908 <grub_mod_init-0x1348>
    3214:	ldur	x1, [sp, #97]
    3218:	ldr	x0, [sp, #56]
    321c:	str	x1, [x0, #2896]
    3220:	ldr	x1, [sp, #72]
    3224:	ldr	x0, [sp, #56]
    3228:	str	x1, [x0, #2928]
    322c:	ldr	x0, [sp, #72]
    3230:	bl	0 <grub_malloc>
    3234:	mov	x1, x0
    3238:	ldr	x0, [sp, #56]
    323c:	str	x1, [x0, #2936]
    3240:	ldr	x0, [sp, #56]
    3244:	ldr	x1, [sp, #48]
    3248:	str	x1, [x0, #2912]
    324c:	ldr	x0, [sp, #56]
    3250:	ldr	x1, [sp, #40]
    3254:	str	x1, [x0, #2920]
    3258:	ldr	x0, [sp, #56]
    325c:	ldr	x0, [x0, #2936]
    3260:	cmp	x0, #0x0
    3264:	b.ne	3280 <grub_mod_init-0x19d0>  // b.any
    3268:	adrp	x0, 0 <grub_mod_init-0x4c50>
    326c:	add	x0, x0, #0x0
    3270:	ldr	x0, [x0]
    3274:	ldr	w0, [x0]
    3278:	mov	w0, w0
    327c:	b	3908 <grub_mod_init-0x1348>
    3280:	ldr	x1, [sp, #80]
    3284:	ldr	x0, [sp, #56]
    3288:	ldr	x0, [x0, #2936]
    328c:	ldr	x2, [sp, #72]
    3290:	mov	w4, #0x0                   	// #0
    3294:	mov	x3, x2
    3298:	mov	x2, x0
    329c:	ldr	x0, [sp, #56]
    32a0:	bl	1de8 <grub_mod_init-0x2e68>
    32a4:	str	w0, [sp, #164]
    32a8:	ldr	w0, [sp, #164]
    32ac:	cmp	w0, #0x0
    32b0:	b.eq	32bc <grub_mod_init-0x1994>  // b.none
    32b4:	ldr	w0, [sp, #164]
    32b8:	b	3908 <grub_mod_init-0x1348>
    32bc:	ldr	x0, [sp, #56]
    32c0:	ldr	x1, [x0, #2896]
    32c4:	ldr	x0, [sp, #56]
    32c8:	ldr	x0, [x0, #2936]
    32cc:	ldr	x0, [x0, #8]
    32d0:	add	x1, x1, x0
    32d4:	ldr	x0, [sp, #56]
    32d8:	str	x1, [x0, #2904]
    32dc:	ldr	x0, [sp, #56]
    32e0:	ldr	x0, [x0, #2936]
    32e4:	ldrb	w0, [x0, #20]
    32e8:	cmp	w0, #0x1
    32ec:	b.ne	3338 <grub_mod_init-0x1918>  // b.any
    32f0:	ldr	x0, [sp, #56]
    32f4:	ldr	x1, [x0, #2936]
    32f8:	ldr	x0, [sp, #72]
    32fc:	add	x1, x1, x0
    3300:	ldr	x0, [sp, #56]
    3304:	ldr	x0, [x0, #2936]
    3308:	add	x0, x0, #0x2d
    330c:	add	x0, x0, #0x8
    3310:	cmp	x1, x0
    3314:	b.cc	3338 <grub_mod_init-0x1918>  // b.lo, b.ul, b.last
    3318:	ldr	x0, [sp, #56]
    331c:	ldr	x1, [x0, #2896]
    3320:	ldr	x0, [sp, #56]
    3324:	ldr	x0, [x0, #2936]
    3328:	ldur	x0, [x0, #45]
    332c:	add	x1, x1, x0
    3330:	ldr	x0, [sp, #56]
    3334:	str	x1, [x0, #2904]
    3338:	ldur	x1, [sp, #97]
    333c:	ldr	x0, [sp, #56]
    3340:	ldr	x0, [x0, #2936]
    3344:	ldr	x0, [x0, #8]
    3348:	mov	x5, x0
    334c:	mov	x4, x1
    3350:	adrp	x0, 0 <grub_mod_init-0x4c50>
    3354:	add	x0, x0, #0x0
    3358:	ldr	x3, [x0]
    335c:	adrp	x0, 0 <grub_mod_init-0x4c50>
    3360:	add	x0, x0, #0x0
    3364:	ldr	x2, [x0]
    3368:	mov	w1, #0x5c1                 	// #1473
    336c:	adrp	x0, 0 <grub_mod_init-0x4c50>
    3370:	add	x0, x0, #0x0
    3374:	ldr	x0, [x0]
    3378:	bl	0 <grub_real_dprintf>
    337c:	ldr	x0, [sp, #56]
    3380:	ldr	x0, [x0, #2904]
    3384:	ldr	x1, [sp, #184]
    3388:	cmp	x1, x0
    338c:	b.cc	33ac <grub_mod_init-0x18a4>  // b.lo, b.ul, b.last
    3390:	adrp	x0, 0 <grub_mod_init-0x4c50>
    3394:	add	x0, x0, #0x0
    3398:	ldr	x1, [x0]
    339c:	mov	w0, #0x9                   	// #9
    33a0:	bl	0 <grub_error>
    33a4:	mov	x0, #0xffffffffffffffff    	// #-1
    33a8:	b	3908 <grub_mod_init-0x1348>
    33ac:	ldr	x0, [sp, #56]
    33b0:	ldr	x1, [x0, #2904]
    33b4:	ldr	x0, [sp, #184]
    33b8:	sub	x0, x1, x0
    33bc:	str	x0, [sp, #176]
    33c0:	ldr	x0, [sp, #56]
    33c4:	ldr	x0, [x0, #2896]
    33c8:	ldr	x1, [sp, #184]
    33cc:	sub	x0, x1, x0
    33d0:	str	x0, [sp, #152]
    33d4:	ldr	x1, [sp, #176]
    33d8:	ldr	x0, [sp, #16]
    33dc:	cmp	x1, x0
    33e0:	b.ls	33ec <grub_mod_init-0x1864>  // b.plast
    33e4:	ldr	x0, [sp, #16]
    33e8:	str	x0, [sp, #176]
    33ec:	ldr	x0, [sp, #56]
    33f0:	ldr	x0, [x0, #2936]
    33f4:	ldrb	w0, [x0, #17]
    33f8:	cmp	w0, #0x0
    33fc:	b.eq	341c <grub_mod_init-0x1834>  // b.none
    3400:	adrp	x0, 0 <grub_mod_init-0x4c50>
    3404:	add	x0, x0, #0x0
    3408:	ldr	x1, [x0]
    340c:	mov	w0, #0x18                  	// #24
    3410:	bl	0 <grub_error>
    3414:	mov	x0, #0xffffffffffffffff    	// #-1
    3418:	b	3908 <grub_mod_init-0x1348>
    341c:	ldr	x0, [sp, #56]
    3420:	ldr	x0, [x0, #2936]
    3424:	ldrb	w0, [x0, #16]
    3428:	cmp	w0, #0x0
    342c:	b.eq	3498 <grub_mod_init-0x17b8>  // b.none
    3430:	ldr	x0, [sp, #56]
    3434:	ldr	x0, [x0, #2936]
    3438:	ldrb	w0, [x0, #16]
    343c:	cmp	w0, #0x1
    3440:	b.eq	3498 <grub_mod_init-0x17b8>  // b.none
    3444:	ldr	x0, [sp, #56]
    3448:	ldr	x0, [x0, #2936]
    344c:	ldrb	w0, [x0, #16]
    3450:	cmp	w0, #0x2
    3454:	b.eq	3498 <grub_mod_init-0x17b8>  // b.none
    3458:	ldr	x0, [sp, #56]
    345c:	ldr	x0, [x0, #2936]
    3460:	ldrb	w0, [x0, #16]
    3464:	cmp	w0, #0x3
    3468:	b.eq	3498 <grub_mod_init-0x17b8>  // b.none
    346c:	ldr	x0, [sp, #56]
    3470:	ldr	x0, [x0, #2936]
    3474:	ldrb	w0, [x0, #16]
    3478:	mov	w2, w0
    347c:	adrp	x0, 0 <grub_mod_init-0x4c50>
    3480:	add	x0, x0, #0x0
    3484:	ldr	x1, [x0]
    3488:	mov	w0, #0x18                  	// #24
    348c:	bl	0 <grub_error>
    3490:	mov	x0, #0xffffffffffffffff    	// #-1
    3494:	b	3908 <grub_mod_init-0x1348>
    3498:	ldr	x0, [sp, #56]
    349c:	ldr	x0, [x0, #2936]
    34a0:	ldrh	w0, [x0, #18]
    34a4:	cmp	w0, #0x0
    34a8:	b.eq	34c8 <grub_mod_init-0x1788>  // b.none
    34ac:	adrp	x0, 0 <grub_mod_init-0x4c50>
    34b0:	add	x0, x0, #0x0
    34b4:	ldr	x1, [x0]
    34b8:	mov	w0, #0x18                  	// #24
    34bc:	bl	0 <grub_error>
    34c0:	mov	x0, #0xffffffffffffffff    	// #-1
    34c4:	b	3908 <grub_mod_init-0x1348>
    34c8:	ldr	x0, [sp, #56]
    34cc:	ldr	x0, [x0, #2936]
    34d0:	ldrb	w0, [x0, #20]
    34d4:	cmp	w0, #0x0
    34d8:	b.eq	34e8 <grub_mod_init-0x1768>  // b.none
    34dc:	cmp	w0, #0x1
    34e0:	b.eq	3650 <grub_mod_init-0x1600>  // b.none
    34e4:	b	3880 <grub_mod_init-0x13d0>
    34e8:	ldr	x0, [sp, #56]
    34ec:	ldr	x0, [x0, #2936]
    34f0:	ldrb	w0, [x0, #16]
    34f4:	cmp	w0, #0x1
    34f8:	b.ne	3570 <grub_mod_init-0x16e0>  // b.any
    34fc:	ldr	x0, [sp, #56]
    3500:	ldr	x0, [x0, #2936]
    3504:	add	x5, x0, #0x15
    3508:	ldr	x0, [sp, #56]
    350c:	ldr	x0, [x0, #2928]
    3510:	sub	x0, x0, #0x15
    3514:	ldr	x4, [sp, #176]
    3518:	ldr	x3, [sp, #24]
    351c:	ldr	x2, [sp, #152]
    3520:	mov	x1, x0
    3524:	mov	x0, x5
    3528:	bl	0 <grub_zlib_decompress>
    352c:	mov	x1, x0
    3530:	ldr	x0, [sp, #176]
    3534:	cmp	x1, x0
    3538:	b.eq	38ac <grub_mod_init-0x13a4>  // b.none
    353c:	adrp	x0, 0 <grub_mod_init-0x4c50>
    3540:	add	x0, x0, #0x0
    3544:	ldr	x0, [x0]
    3548:	ldr	w0, [x0]
    354c:	cmp	w0, #0x0
    3550:	b.ne	3568 <grub_mod_init-0x16e8>  // b.any
    3554:	adrp	x0, 0 <grub_mod_init-0x4c50>
    3558:	add	x0, x0, #0x0
    355c:	ldr	x1, [x0]
    3560:	mov	w0, #0x1a                  	// #26
    3564:	bl	0 <grub_error>
    3568:	mov	x0, #0xffffffffffffffff    	// #-1
    356c:	b	3908 <grub_mod_init-0x1348>
    3570:	ldr	x0, [sp, #56]
    3574:	ldr	x0, [x0, #2936]
    3578:	ldrb	w0, [x0, #16]
    357c:	cmp	w0, #0x2
    3580:	b.ne	35cc <grub_mod_init-0x1684>  // b.any
    3584:	ldr	x0, [sp, #56]
    3588:	ldr	x0, [x0, #2936]
    358c:	add	x5, x0, #0x15
    3590:	ldr	x0, [sp, #56]
    3594:	ldr	x0, [x0, #2928]
    3598:	sub	x0, x0, #0x15
    359c:	ldr	x4, [sp, #176]
    35a0:	ldr	x3, [sp, #24]
    35a4:	ldr	x2, [sp, #152]
    35a8:	mov	x1, x0
    35ac:	mov	x0, x5
    35b0:	bl	2db8 <grub_mod_init-0x1e98>
    35b4:	mov	x1, x0
    35b8:	ldr	x0, [sp, #176]
    35bc:	cmp	x1, x0
    35c0:	b.eq	38ac <grub_mod_init-0x13a4>  // b.none
    35c4:	mov	x0, #0xffffffffffffffff    	// #-1
    35c8:	b	3908 <grub_mod_init-0x1348>
    35cc:	ldr	x0, [sp, #56]
    35d0:	ldr	x0, [x0, #2936]
    35d4:	ldrb	w0, [x0, #16]
    35d8:	cmp	w0, #0x3
    35dc:	b.ne	3628 <grub_mod_init-0x1628>  // b.any
    35e0:	ldr	x0, [sp, #56]
    35e4:	ldr	x0, [x0, #2936]
    35e8:	add	x5, x0, #0x15
    35ec:	ldr	x0, [sp, #56]
    35f0:	ldr	x0, [x0, #2928]
    35f4:	sub	x0, x0, #0x15
    35f8:	ldr	x4, [sp, #176]
    35fc:	ldr	x3, [sp, #24]
    3600:	ldr	x2, [sp, #152]
    3604:	mov	x1, x0
    3608:	mov	x0, x5
    360c:	bl	2c00 <grub_mod_init-0x2050>
    3610:	mov	x1, x0
    3614:	ldr	x0, [sp, #176]
    3618:	cmp	x1, x0
    361c:	b.eq	38ac <grub_mod_init-0x13a4>  // b.none
    3620:	mov	x0, #0xffffffffffffffff    	// #-1
    3624:	b	3908 <grub_mod_init-0x1348>
    3628:	ldr	x0, [sp, #56]
    362c:	ldr	x0, [x0, #2936]
    3630:	add	x1, x0, #0x15
    3634:	ldr	x0, [sp, #152]
    3638:	add	x0, x1, x0
    363c:	ldr	x2, [sp, #176]
    3640:	mov	x1, x0
    3644:	ldr	x0, [sp, #24]
    3648:	bl	b0 <grub_mod_init-0x4ba0>
    364c:	b	38ac <grub_mod_init-0x13a4>
    3650:	ldr	x0, [sp, #56]
    3654:	ldr	x0, [x0, #2936]
    3658:	ldur	x0, [x0, #21]
    365c:	cmp	x0, #0x0
    3660:	b.ne	3678 <grub_mod_init-0x15d8>  // b.any
    3664:	ldr	x2, [sp, #176]
    3668:	mov	w1, #0x0                   	// #0
    366c:	ldr	x0, [sp, #24]
    3670:	bl	0 <grub_memset>
    3674:	b	38c0 <grub_mod_init-0x1390>
    3678:	ldr	x0, [sp, #56]
    367c:	ldr	x0, [x0, #2936]
    3680:	ldrb	w0, [x0, #16]
    3684:	cmp	w0, #0x0
    3688:	b.eq	382c <grub_mod_init-0x1424>  // b.none
    368c:	ldr	x0, [sp, #56]
    3690:	ldr	x0, [x0, #2936]
    3694:	ldur	x0, [x0, #29]
    3698:	str	x0, [sp, #144]
    369c:	ldr	x0, [sp, #144]
    36a0:	bl	0 <grub_malloc>
    36a4:	str	x0, [sp, #136]
    36a8:	ldr	x0, [sp, #136]
    36ac:	cmp	x0, #0x0
    36b0:	b.ne	36bc <grub_mod_init-0x1594>  // b.any
    36b4:	mov	x0, #0xffffffffffffffff    	// #-1
    36b8:	b	3908 <grub_mod_init-0x1348>
    36bc:	ldr	x0, [sp, #56]
    36c0:	ldr	x0, [x0, #2936]
    36c4:	ldur	x0, [x0, #21]
    36c8:	mov	w4, #0x0                   	// #0
    36cc:	ldr	x3, [sp, #144]
    36d0:	ldr	x2, [sp, #136]
    36d4:	mov	x1, x0
    36d8:	ldr	x0, [sp, #56]
    36dc:	bl	1de8 <grub_mod_init-0x2e68>
    36e0:	str	w0, [sp, #164]
    36e4:	ldr	w0, [sp, #164]
    36e8:	cmp	w0, #0x0
    36ec:	b.eq	3700 <grub_mod_init-0x1550>  // b.none
    36f0:	ldr	x0, [sp, #136]
    36f4:	bl	0 <grub_free>
    36f8:	mov	x0, #0xffffffffffffffff    	// #-1
    36fc:	b	3908 <grub_mod_init-0x1348>
    3700:	ldr	x0, [sp, #56]
    3704:	ldr	x0, [x0, #2936]
    3708:	ldrb	w0, [x0, #16]
    370c:	cmp	w0, #0x1
    3710:	b.ne	3748 <grub_mod_init-0x1508>  // b.any
    3714:	ldr	x0, [sp, #56]
    3718:	ldr	x0, [x0, #2936]
    371c:	ldur	x1, [x0, #37]
    3720:	ldr	x0, [sp, #152]
    3724:	add	x0, x1, x0
    3728:	ldr	x4, [sp, #176]
    372c:	ldr	x3, [sp, #24]
    3730:	mov	x2, x0
    3734:	ldr	x1, [sp, #144]
    3738:	ldr	x0, [sp, #136]
    373c:	bl	0 <grub_zlib_decompress>
    3740:	str	x0, [sp, #168]
    3744:	b	37e0 <grub_mod_init-0x1470>
    3748:	ldr	x0, [sp, #56]
    374c:	ldr	x0, [x0, #2936]
    3750:	ldrb	w0, [x0, #16]
    3754:	cmp	w0, #0x2
    3758:	b.ne	3790 <grub_mod_init-0x14c0>  // b.any
    375c:	ldr	x0, [sp, #56]
    3760:	ldr	x0, [x0, #2936]
    3764:	ldur	x1, [x0, #37]
    3768:	ldr	x0, [sp, #152]
    376c:	add	x0, x1, x0
    3770:	ldr	x4, [sp, #176]
    3774:	ldr	x3, [sp, #24]
    3778:	mov	x2, x0
    377c:	ldr	x1, [sp, #144]
    3780:	ldr	x0, [sp, #136]
    3784:	bl	2db8 <grub_mod_init-0x1e98>
    3788:	str	x0, [sp, #168]
    378c:	b	37e0 <grub_mod_init-0x1470>
    3790:	ldr	x0, [sp, #56]
    3794:	ldr	x0, [x0, #2936]
    3798:	ldrb	w0, [x0, #16]
    379c:	cmp	w0, #0x3
    37a0:	b.ne	37d8 <grub_mod_init-0x1478>  // b.any
    37a4:	ldr	x0, [sp, #56]
    37a8:	ldr	x0, [x0, #2936]
    37ac:	ldur	x1, [x0, #37]
    37b0:	ldr	x0, [sp, #152]
    37b4:	add	x0, x1, x0
    37b8:	ldr	x4, [sp, #176]
    37bc:	ldr	x3, [sp, #24]
    37c0:	mov	x2, x0
    37c4:	ldr	x1, [sp, #144]
    37c8:	ldr	x0, [sp, #136]
    37cc:	bl	2c00 <grub_mod_init-0x2050>
    37d0:	str	x0, [sp, #168]
    37d4:	b	37e0 <grub_mod_init-0x1470>
    37d8:	mov	x0, #0xffffffffffffffff    	// #-1
    37dc:	str	x0, [sp, #168]
    37e0:	ldr	x0, [sp, #136]
    37e4:	bl	0 <grub_free>
    37e8:	ldr	x0, [sp, #176]
    37ec:	ldr	x1, [sp, #168]
    37f0:	cmp	x1, x0
    37f4:	b.eq	38b4 <grub_mod_init-0x139c>  // b.none
    37f8:	adrp	x0, 0 <grub_mod_init-0x4c50>
    37fc:	add	x0, x0, #0x0
    3800:	ldr	x0, [x0]
    3804:	ldr	w0, [x0]
    3808:	cmp	w0, #0x0
    380c:	b.ne	3824 <grub_mod_init-0x142c>  // b.any
    3810:	adrp	x0, 0 <grub_mod_init-0x4c50>
    3814:	add	x0, x0, #0x0
    3818:	ldr	x1, [x0]
    381c:	mov	w0, #0x1a                  	// #26
    3820:	bl	0 <grub_error>
    3824:	mov	x0, #0xffffffffffffffff    	// #-1
    3828:	b	3908 <grub_mod_init-0x1348>
    382c:	ldr	x0, [sp, #56]
    3830:	ldr	x0, [x0, #2936]
    3834:	ldur	x1, [x0, #21]
    3838:	ldr	x0, [sp, #56]
    383c:	ldr	x0, [x0, #2936]
    3840:	ldur	x0, [x0, #37]
    3844:	add	x1, x1, x0
    3848:	ldr	x0, [sp, #152]
    384c:	add	x0, x1, x0
    3850:	mov	w4, #0x0                   	// #0
    3854:	ldr	x3, [sp, #176]
    3858:	ldr	x2, [sp, #24]
    385c:	mov	x1, x0
    3860:	ldr	x0, [sp, #56]
    3864:	bl	1de8 <grub_mod_init-0x2e68>
    3868:	str	w0, [sp, #164]
    386c:	ldr	w0, [sp, #164]
    3870:	cmp	w0, #0x0
    3874:	b.eq	38bc <grub_mod_init-0x1394>  // b.none
    3878:	mov	x0, #0xffffffffffffffff    	// #-1
    387c:	b	3908 <grub_mod_init-0x1348>
    3880:	ldr	x0, [sp, #56]
    3884:	ldr	x0, [x0, #2936]
    3888:	ldrb	w0, [x0, #20]
    388c:	mov	w2, w0
    3890:	adrp	x0, 0 <grub_mod_init-0x4c50>
    3894:	add	x0, x0, #0x0
    3898:	ldr	x1, [x0]
    389c:	mov	w0, #0x18                  	// #24
    38a0:	bl	0 <grub_error>
    38a4:	mov	x0, #0xffffffffffffffff    	// #-1
    38a8:	b	3908 <grub_mod_init-0x1348>
    38ac:	nop
    38b0:	b	38c0 <grub_mod_init-0x1390>
    38b4:	nop
    38b8:	b	38c0 <grub_mod_init-0x1390>
    38bc:	nop
    38c0:	ldr	x1, [sp, #24]
    38c4:	ldr	x0, [sp, #176]
    38c8:	add	x0, x1, x0
    38cc:	str	x0, [sp, #24]
    38d0:	ldr	x1, [sp, #184]
    38d4:	ldr	x0, [sp, #176]
    38d8:	add	x0, x1, x0
    38dc:	str	x0, [sp, #184]
    38e0:	ldr	x1, [sp, #16]
    38e4:	ldr	x0, [sp, #176]
    38e8:	sub	x0, x1, x0
    38ec:	str	x0, [sp, #16]
    38f0:	ldr	x0, [sp, #16]
    38f4:	cmp	x0, #0x0
    38f8:	b.ne	30e4 <grub_mod_init-0x1b6c>  // b.any
    38fc:	ldr	x1, [sp, #184]
    3900:	ldr	x0, [sp, #32]
    3904:	sub	x0, x1, x0
    3908:	ldp	x29, x30, [sp], #192
    390c:	ret
	...
    3968:	stp	x29, x30, [sp, #-320]!
    396c:	mov	x29, sp
    3970:	str	x0, [sp, #40]
    3974:	str	x1, [sp, #32]
    3978:	str	x2, [sp, #24]
    397c:	str	x3, [sp, #16]
    3980:	mov	x0, #0x5                   	// #5
    3984:	str	x0, [sp, #248]
    3988:	add	x0, sp, #0x200
    398c:	stur	xzr, [x0, #-255]
    3990:	mov	w0, #0xffffff84            	// #-124
    3994:	strb	w0, [sp, #256]
    3998:	ldr	x0, [sp, #40]
    399c:	ldr	x2, [x0, #80]
    39a0:	add	x4, sp, #0x128
    39a4:	add	x3, sp, #0x130
    39a8:	add	x1, sp, #0x110
    39ac:	add	x0, sp, #0xf8
    39b0:	mov	w7, #0x0                   	// #0
    39b4:	mov	x6, #0x0                   	// #0
    39b8:	mov	x5, x4
    39bc:	mov	x4, x3
    39c0:	mov	x3, x2
    39c4:	mov	x2, x1
    39c8:	mov	x1, x0
    39cc:	ldr	x0, [sp, #40]
    39d0:	bl	b64 <grub_mod_init-0x40ec>
    39d4:	str	w0, [sp, #316]
    39d8:	ldr	w0, [sp, #316]
    39dc:	cmp	w0, #0x0
    39e0:	b.eq	39ec <grub_mod_init-0x1264>  // b.none
    39e4:	ldr	w0, [sp, #316]
    39e8:	b	3ab0 <grub_mod_init-0x11a0>
    39ec:	ldr	x1, [sp, #248]
    39f0:	ldr	x0, [sp, #272]
    39f4:	cmp	x1, x0
    39f8:	b.ne	3a24 <grub_mod_init-0x122c>  // b.any
    39fc:	ldrb	w1, [sp, #256]
    3a00:	ldrb	w0, [sp, #280]
    3a04:	cmp	w1, w0
    3a08:	b.ne	3a24 <grub_mod_init-0x122c>  // b.any
    3a0c:	add	x0, sp, #0x200
    3a10:	ldur	x1, [x0, #-255]
    3a14:	add	x0, sp, #0x200
    3a18:	ldur	x0, [x0, #-231]
    3a1c:	cmp	x1, x0
    3a20:	b.eq	3a3c <grub_mod_init-0x1214>  // b.none
    3a24:	adrp	x0, 0 <grub_mod_init-0x4c50>
    3a28:	add	x0, x0, #0x0
    3a2c:	ldr	x1, [x0]
    3a30:	mov	w0, #0x9                   	// #9
    3a34:	bl	0 <grub_error>
    3a38:	b	3ab0 <grub_mod_init-0x11a0>
    3a3c:	ldr	x0, [sp, #304]
    3a40:	add	x1, sp, #0x38
    3a44:	mov	w4, #0x0                   	// #0
    3a48:	mov	x3, #0xc0                  	// #192
    3a4c:	mov	x2, x1
    3a50:	mov	x1, x0
    3a54:	ldr	x0, [sp, #40]
    3a58:	bl	1de8 <grub_mod_init-0x2e68>
    3a5c:	str	w0, [sp, #316]
    3a60:	ldr	w0, [sp, #316]
    3a64:	cmp	w0, #0x0
    3a68:	b.eq	3a74 <grub_mod_init-0x11dc>  // b.none
    3a6c:	ldr	w0, [sp, #316]
    3a70:	b	3ab0 <grub_mod_init-0x11a0>
    3a74:	ldr	x0, [sp, #32]
    3a78:	mov	w1, #0x54                  	// #84
    3a7c:	strb	w1, [x0, #8]
    3a80:	ldr	x0, [sp, #32]
    3a84:	stur	xzr, [x0, #9]
    3a88:	ldr	x0, [sp, #32]
    3a8c:	mov	x1, #0x100                 	// #256
    3a90:	str	x1, [x0]
    3a94:	ldr	x1, [sp, #232]
    3a98:	ldr	x0, [sp, #24]
    3a9c:	str	x1, [x0]
    3aa0:	ldr	x0, [sp, #16]
    3aa4:	mov	w1, #0x2                   	// #2
    3aa8:	strb	w1, [x0]
    3aac:	mov	w0, #0x0                   	// #0
    3ab0:	ldp	x29, x30, [sp], #320
    3ab4:	ret
	...
    3ac0:	stp	x29, x30, [sp, #-400]!
    3ac4:	mov	x29, sp
    3ac8:	str	x19, [sp, #16]
    3acc:	str	x0, [sp, #72]
    3ad0:	str	x1, [sp, #64]
    3ad4:	str	x2, [sp, #56]
    3ad8:	str	x3, [sp, #48]
    3adc:	str	x4, [sp, #40]
    3ae0:	ldr	x0, [sp, #64]
    3ae4:	str	x0, [sp, #392]
    3ae8:	str	xzr, [sp, #384]
    3aec:	str	xzr, [sp, #376]
    3af0:	str	xzr, [sp, #368]
    3af4:	str	xzr, [sp, #344]
    3af8:	mov	w0, #0x20                  	// #32
    3afc:	str	w0, [sp, #364]
    3b00:	ldr	x3, [sp, #40]
    3b04:	ldr	x2, [sp, #48]
    3b08:	ldr	x1, [sp, #56]
    3b0c:	ldr	x0, [sp, #72]
    3b10:	bl	3968 <grub_mod_init-0x12e8>
    3b14:	str	w0, [sp, #340]
    3b18:	ldr	w0, [sp, #340]
    3b1c:	cmp	w0, #0x0
    3b20:	b.eq	3b2c <grub_mod_init-0x1124>  // b.none
    3b24:	ldr	w0, [sp, #340]
    3b28:	b	4460 <grub_mod_init-0x7f0>
    3b2c:	ldr	x0, [sp, #64]
    3b30:	bl	0 <grub_strdup>
    3b34:	str	x0, [sp, #344]
    3b38:	ldr	x0, [sp, #344]
    3b3c:	cmp	x0, #0x0
    3b40:	b.ne	3b68 <grub_mod_init-0x10e8>  // b.any
    3b44:	adrp	x0, 0 <grub_mod_init-0x4c50>
    3b48:	add	x0, x0, #0x0
    3b4c:	ldr	x0, [x0]
    3b50:	ldr	w0, [x0]
    3b54:	b	4460 <grub_mod_init-0x7f0>
    3b58:	b	3b68 <grub_mod_init-0x10e8>
    3b5c:	ldr	x0, [sp, #64]
    3b60:	add	x0, x0, #0x1
    3b64:	str	x0, [sp, #64]
    3b68:	ldr	x0, [sp, #64]
    3b6c:	ldrb	w0, [x0]
    3b70:	cmp	w0, #0x2f
    3b74:	b.eq	3b5c <grub_mod_init-0x10f4>  // b.none
    3b78:	ldr	x0, [sp, #64]
    3b7c:	ldrb	w0, [x0]
    3b80:	cmp	w0, #0x0
    3b84:	b.eq	4440 <grub_mod_init-0x810>  // b.none
    3b88:	mov	w1, #0x2f                  	// #47
    3b8c:	ldr	x0, [sp, #64]
    3b90:	bl	0 <grub_strchr>
    3b94:	str	x0, [sp, #392]
    3b98:	ldr	x0, [sp, #392]
    3b9c:	cmp	x0, #0x0
    3ba0:	b.ne	3bbc <grub_mod_init-0x1094>  // b.any
    3ba4:	ldr	x0, [sp, #64]
    3ba8:	bl	0 <grub_strlen>
    3bac:	mov	x1, x0
    3bb0:	ldr	x0, [sp, #64]
    3bb4:	add	x0, x0, x1
    3bb8:	str	x0, [sp, #392]
    3bbc:	ldr	x0, [sp, #64]
    3bc0:	str	x0, [sp, #328]
    3bc4:	ldr	x1, [sp, #392]
    3bc8:	ldr	x0, [sp, #64]
    3bcc:	sub	x0, x1, x0
    3bd0:	str	x0, [sp, #320]
    3bd4:	ldr	x0, [sp, #40]
    3bd8:	ldrb	w0, [x0]
    3bdc:	cmp	w0, #0x2
    3be0:	b.eq	3c0c <grub_mod_init-0x1044>  // b.none
    3be4:	ldr	x0, [sp, #368]
    3be8:	bl	0 <grub_free>
    3bec:	ldr	x0, [sp, #344]
    3bf0:	bl	0 <grub_free>
    3bf4:	adrp	x0, 0 <grub_mod_init-0x4c50>
    3bf8:	add	x0, x0, #0x0
    3bfc:	ldr	x1, [x0]
    3c00:	mov	w0, #0x4                   	// #4
    3c04:	bl	0 <grub_error>
    3c08:	b	4460 <grub_mod_init-0x7f0>
    3c0c:	ldr	x0, [sp, #320]
    3c10:	cmp	x0, #0x1
    3c14:	b.ne	3c34 <grub_mod_init-0x101c>  // b.any
    3c18:	ldr	x0, [sp, #328]
    3c1c:	ldrb	w0, [x0]
    3c20:	cmp	w0, #0x2e
    3c24:	b.ne	3c34 <grub_mod_init-0x101c>  // b.any
    3c28:	ldr	x0, [sp, #392]
    3c2c:	str	x0, [sp, #64]
    3c30:	b	443c <grub_mod_init-0x814>
    3c34:	ldr	x0, [sp, #320]
    3c38:	cmp	x0, #0x2
    3c3c:	b.ne	3d70 <grub_mod_init-0xee0>  // b.any
    3c40:	ldr	x0, [sp, #328]
    3c44:	ldrb	w0, [x0]
    3c48:	cmp	w0, #0x2e
    3c4c:	b.ne	3d70 <grub_mod_init-0xee0>  // b.any
    3c50:	ldr	x0, [sp, #328]
    3c54:	add	x0, x0, #0x1
    3c58:	ldrb	w0, [x0]
    3c5c:	cmp	w0, #0x2e
    3c60:	b.ne	3d70 <grub_mod_init-0xee0>  // b.any
    3c64:	ldr	x0, [sp, #56]
    3c68:	mov	w1, #0xc                   	// #12
    3c6c:	strb	w1, [x0, #8]
    3c70:	ldr	x0, [sp, #56]
    3c74:	mov	x1, #0xffffffffffffffff    	// #-1
    3c78:	stur	x1, [x0, #9]
    3c7c:	ldr	x0, [sp, #48]
    3c80:	ldr	x1, [x0]
    3c84:	add	x3, sp, #0x128
    3c88:	add	x2, sp, #0x130
    3c8c:	add	x0, sp, #0x110
    3c90:	mov	w7, #0x0                   	// #0
    3c94:	mov	x6, #0x0                   	// #0
    3c98:	mov	x5, x3
    3c9c:	mov	x4, x2
    3ca0:	mov	x3, x1
    3ca4:	mov	x2, x0
    3ca8:	ldr	x1, [sp, #56]
    3cac:	ldr	x0, [sp, #72]
    3cb0:	bl	b64 <grub_mod_init-0x40ec>
    3cb4:	str	w0, [sp, #340]
    3cb8:	ldr	w0, [sp, #340]
    3cbc:	cmp	w0, #0x0
    3cc0:	b.eq	3ce4 <grub_mod_init-0xf6c>  // b.none
    3cc4:	ldr	x0, [sp, #376]
    3cc8:	bl	0 <grub_free>
    3ccc:	ldr	x0, [sp, #368]
    3cd0:	bl	0 <grub_free>
    3cd4:	ldr	x0, [sp, #344]
    3cd8:	bl	0 <grub_free>
    3cdc:	ldr	w0, [sp, #340]
    3ce0:	b	4460 <grub_mod_init-0x7f0>
    3ce4:	ldrb	w1, [sp, #280]
    3ce8:	ldr	x0, [sp, #56]
    3cec:	ldrb	w0, [x0, #8]
    3cf0:	cmp	w1, w0
    3cf4:	b.ne	3d0c <grub_mod_init-0xf44>  // b.any
    3cf8:	ldr	x0, [sp, #56]
    3cfc:	ldr	x1, [x0]
    3d00:	ldr	x0, [sp, #272]
    3d04:	cmp	x1, x0
    3d08:	b.eq	3d48 <grub_mod_init-0xf08>  // b.none
    3d0c:	ldr	x0, [sp, #376]
    3d10:	bl	0 <grub_free>
    3d14:	ldr	x0, [sp, #368]
    3d18:	bl	0 <grub_free>
    3d1c:	ldr	x2, [sp, #344]
    3d20:	adrp	x0, 0 <grub_mod_init-0x4c50>
    3d24:	add	x0, x0, #0x0
    3d28:	ldr	x1, [x0]
    3d2c:	mov	w0, #0x5                   	// #5
    3d30:	bl	0 <grub_error>
    3d34:	str	w0, [sp, #340]
    3d38:	ldr	x0, [sp, #344]
    3d3c:	bl	0 <grub_free>
    3d40:	ldr	w0, [sp, #340]
    3d44:	b	4460 <grub_mod_init-0x7f0>
    3d48:	ldr	x0, [sp, #40]
    3d4c:	mov	w1, #0x2                   	// #2
    3d50:	strb	w1, [x0]
    3d54:	add	x0, sp, #0x200
    3d58:	ldur	x1, [x0, #-231]
    3d5c:	ldr	x0, [sp, #56]
    3d60:	str	x1, [x0]
    3d64:	ldr	x0, [sp, #392]
    3d68:	str	x0, [sp, #64]
    3d6c:	b	443c <grub_mod_init-0x814>
    3d70:	ldr	x0, [sp, #56]
    3d74:	mov	w1, #0x54                  	// #84
    3d78:	strb	w1, [x0, #8]
    3d7c:	ldr	x0, [sp, #320]
    3d80:	mov	w2, w0
    3d84:	ldr	x1, [sp, #328]
    3d88:	mov	w0, #0x1                   	// #1
    3d8c:	bl	4e50 <grub_getcrc32c>
    3d90:	mvn	w0, w0
    3d94:	mov	w1, w0
    3d98:	ldr	x0, [sp, #56]
    3d9c:	stur	x1, [x0, #9]
    3da0:	ldr	x0, [sp, #48]
    3da4:	ldr	x1, [x0]
    3da8:	add	x3, sp, #0x128
    3dac:	add	x2, sp, #0x130
    3db0:	add	x0, sp, #0x110
    3db4:	mov	w7, #0x0                   	// #0
    3db8:	mov	x6, #0x0                   	// #0
    3dbc:	mov	x5, x3
    3dc0:	mov	x4, x2
    3dc4:	mov	x3, x1
    3dc8:	mov	x2, x0
    3dcc:	ldr	x1, [sp, #56]
    3dd0:	ldr	x0, [sp, #72]
    3dd4:	bl	b64 <grub_mod_init-0x40ec>
    3dd8:	str	w0, [sp, #340]
    3ddc:	ldr	w0, [sp, #340]
    3de0:	cmp	w0, #0x0
    3de4:	b.eq	3e08 <grub_mod_init-0xe48>  // b.none
    3de8:	ldr	x0, [sp, #376]
    3dec:	bl	0 <grub_free>
    3df0:	ldr	x0, [sp, #368]
    3df4:	bl	0 <grub_free>
    3df8:	ldr	x0, [sp, #344]
    3dfc:	bl	0 <grub_free>
    3e00:	ldr	w0, [sp, #340]
    3e04:	b	4460 <grub_mod_init-0x7f0>
    3e08:	add	x0, sp, #0x110
    3e0c:	mov	x1, x0
    3e10:	ldr	x0, [sp, #56]
    3e14:	bl	410 <grub_mod_init-0x4840>
    3e18:	cmp	w0, #0x0
    3e1c:	b.eq	3e5c <grub_mod_init-0xdf4>  // b.none
    3e20:	ldr	x0, [sp, #376]
    3e24:	bl	0 <grub_free>
    3e28:	ldr	x0, [sp, #368]
    3e2c:	bl	0 <grub_free>
    3e30:	ldr	x2, [sp, #344]
    3e34:	adrp	x0, 0 <grub_mod_init-0x4c50>
    3e38:	add	x0, x0, #0x0
    3e3c:	ldr	x1, [x0]
    3e40:	mov	w0, #0x5                   	// #5
    3e44:	bl	0 <grub_error>
    3e48:	str	w0, [sp, #340]
    3e4c:	ldr	x0, [sp, #344]
    3e50:	bl	0 <grub_free>
    3e54:	ldr	w0, [sp, #340]
    3e58:	b	4460 <grub_mod_init-0x7f0>
    3e5c:	ldr	x0, [sp, #296]
    3e60:	ldr	x1, [sp, #384]
    3e64:	cmp	x1, x0
    3e68:	b.cs	3ec0 <grub_mod_init-0xd90>  // b.hs, b.nlast
    3e6c:	ldr	x0, [sp, #296]
    3e70:	lsl	x0, x0, #1
    3e74:	str	x0, [sp, #384]
    3e78:	ldr	x0, [sp, #376]
    3e7c:	bl	0 <grub_free>
    3e80:	ldr	x0, [sp, #384]
    3e84:	add	x0, x0, #0x1
    3e88:	bl	0 <grub_malloc>
    3e8c:	str	x0, [sp, #376]
    3e90:	ldr	x0, [sp, #376]
    3e94:	cmp	x0, #0x0
    3e98:	b.ne	3ec0 <grub_mod_init-0xd90>  // b.any
    3e9c:	ldr	x0, [sp, #368]
    3ea0:	bl	0 <grub_free>
    3ea4:	ldr	x0, [sp, #344]
    3ea8:	bl	0 <grub_free>
    3eac:	adrp	x0, 0 <grub_mod_init-0x4c50>
    3eb0:	add	x0, x0, #0x0
    3eb4:	ldr	x0, [x0]
    3eb8:	ldr	w0, [x0]
    3ebc:	b	4460 <grub_mod_init-0x7f0>
    3ec0:	ldr	x0, [sp, #304]
    3ec4:	ldr	x1, [sp, #296]
    3ec8:	mov	w4, #0x0                   	// #0
    3ecc:	mov	x3, x1
    3ed0:	ldr	x2, [sp, #376]
    3ed4:	mov	x1, x0
    3ed8:	ldr	x0, [sp, #72]
    3edc:	bl	1de8 <grub_mod_init-0x2e68>
    3ee0:	str	w0, [sp, #340]
    3ee4:	ldr	w0, [sp, #340]
    3ee8:	cmp	w0, #0x0
    3eec:	b.eq	3f10 <grub_mod_init-0xd40>  // b.none
    3ef0:	ldr	x0, [sp, #376]
    3ef4:	bl	0 <grub_free>
    3ef8:	ldr	x0, [sp, #368]
    3efc:	bl	0 <grub_free>
    3f00:	ldr	x0, [sp, #344]
    3f04:	bl	0 <grub_free>
    3f08:	ldr	w0, [sp, #340]
    3f0c:	b	4460 <grub_mod_init-0x7f0>
    3f10:	ldr	x0, [sp, #376]
    3f14:	str	x0, [sp, #352]
    3f18:	b	3f7c <grub_mod_init-0xcd4>
    3f1c:	ldr	x0, [sp, #352]
    3f20:	ldurh	w0, [x0, #27]
    3f24:	and	x0, x0, #0xffff
    3f28:	ldr	x1, [sp, #320]
    3f2c:	cmp	x1, x0
    3f30:	b.ne	3f50 <grub_mod_init-0xd00>  // b.any
    3f34:	ldr	x0, [sp, #352]
    3f38:	add	x0, x0, #0x1e
    3f3c:	ldr	x2, [sp, #320]
    3f40:	ldr	x1, [sp, #328]
    3f44:	bl	0 <grub_memcmp>
    3f48:	cmp	w0, #0x0
    3f4c:	b.eq	3f98 <grub_mod_init-0xcb8>  // b.none
    3f50:	ldr	x0, [sp, #352]
    3f54:	ldurh	w0, [x0, #27]
    3f58:	and	x1, x0, #0xffff
    3f5c:	ldr	x0, [sp, #352]
    3f60:	ldurh	w0, [x0, #25]
    3f64:	and	x0, x0, #0xffff
    3f68:	add	x0, x1, x0
    3f6c:	add	x0, x0, #0x1e
    3f70:	ldr	x1, [sp, #376]
    3f74:	add	x0, x1, x0
    3f78:	str	x0, [sp, #352]
    3f7c:	ldr	x1, [sp, #352]
    3f80:	ldr	x0, [sp, #376]
    3f84:	sub	x0, x1, x0
    3f88:	ldr	x1, [sp, #296]
    3f8c:	cmp	x0, x1
    3f90:	b.lt	3f1c <grub_mod_init-0xd34>  // b.tstop
    3f94:	b	3f9c <grub_mod_init-0xcb4>
    3f98:	nop
    3f9c:	ldr	x1, [sp, #352]
    3fa0:	ldr	x0, [sp, #376]
    3fa4:	sub	x0, x1, x0
    3fa8:	ldr	x1, [sp, #296]
    3fac:	cmp	x0, x1
    3fb0:	b.lt	3ff0 <grub_mod_init-0xc60>  // b.tstop
    3fb4:	ldr	x0, [sp, #376]
    3fb8:	bl	0 <grub_free>
    3fbc:	ldr	x0, [sp, #368]
    3fc0:	bl	0 <grub_free>
    3fc4:	ldr	x2, [sp, #344]
    3fc8:	adrp	x0, 0 <grub_mod_init-0x4c50>
    3fcc:	add	x0, x0, #0x0
    3fd0:	ldr	x1, [x0]
    3fd4:	mov	w0, #0x5                   	// #5
    3fd8:	bl	0 <grub_error>
    3fdc:	str	w0, [sp, #340]
    3fe0:	ldr	x0, [sp, #344]
    3fe4:	bl	0 <grub_free>
    3fe8:	ldr	w0, [sp, #340]
    3fec:	b	4460 <grub_mod_init-0x7f0>
    3ff0:	ldr	x0, [sp, #392]
    3ff4:	str	x0, [sp, #64]
    3ff8:	ldr	x0, [sp, #352]
    3ffc:	ldrb	w0, [x0, #29]
    4000:	cmp	w0, #0x7
    4004:	b.ne	41e4 <grub_mod_init-0xa6c>  // b.any
    4008:	ldr	w0, [sp, #364]
    400c:	sub	w0, w0, #0x1
    4010:	str	w0, [sp, #364]
    4014:	ldr	w0, [sp, #364]
    4018:	cmp	w0, #0x0
    401c:	b.ne	4050 <grub_mod_init-0xc00>  // b.any
    4020:	ldr	x0, [sp, #376]
    4024:	bl	0 <grub_free>
    4028:	ldr	x0, [sp, #368]
    402c:	bl	0 <grub_free>
    4030:	ldr	x0, [sp, #344]
    4034:	bl	0 <grub_free>
    4038:	adrp	x0, 0 <grub_mod_init-0x4c50>
    403c:	add	x0, x0, #0x0
    4040:	ldr	x1, [x0]
    4044:	mov	w0, #0x19                  	// #25
    4048:	bl	0 <grub_error>
    404c:	b	4460 <grub_mod_init-0x7f0>
    4050:	ldr	x0, [sp, #352]
    4054:	ldr	x1, [x0]
    4058:	ldr	x0, [sp, #48]
    405c:	ldr	x2, [x0]
    4060:	add	x0, sp, #0x50
    4064:	mov	x3, x2
    4068:	mov	x2, x1
    406c:	mov	x1, x0
    4070:	ldr	x0, [sp, #72]
    4074:	bl	2a88 <grub_mod_init-0x21c8>
    4078:	str	w0, [sp, #340]
    407c:	ldr	w0, [sp, #340]
    4080:	cmp	w0, #0x0
    4084:	b.eq	40a8 <grub_mod_init-0xba8>  // b.none
    4088:	ldr	x0, [sp, #376]
    408c:	bl	0 <grub_free>
    4090:	ldr	x0, [sp, #368]
    4094:	bl	0 <grub_free>
    4098:	ldr	x0, [sp, #344]
    409c:	bl	0 <grub_free>
    40a0:	ldr	w0, [sp, #340]
    40a4:	b	4460 <grub_mod_init-0x7f0>
    40a8:	ldr	x19, [sp, #96]
    40ac:	ldr	x0, [sp, #64]
    40b0:	bl	0 <grub_strlen>
    40b4:	add	x0, x19, x0
    40b8:	add	x0, x0, #0x1
    40bc:	bl	0 <grub_malloc>
    40c0:	str	x0, [sp, #312]
    40c4:	ldr	x0, [sp, #312]
    40c8:	cmp	x0, #0x0
    40cc:	b.ne	40fc <grub_mod_init-0xb54>  // b.any
    40d0:	ldr	x0, [sp, #376]
    40d4:	bl	0 <grub_free>
    40d8:	ldr	x0, [sp, #368]
    40dc:	bl	0 <grub_free>
    40e0:	ldr	x0, [sp, #344]
    40e4:	bl	0 <grub_free>
    40e8:	adrp	x0, 0 <grub_mod_init-0x4c50>
    40ec:	add	x0, x0, #0x0
    40f0:	ldr	x0, [x0]
    40f4:	ldr	w0, [x0]
    40f8:	b	4460 <grub_mod_init-0x7f0>
    40fc:	ldr	x0, [sp, #352]
    4100:	ldr	x1, [x0]
    4104:	ldr	x0, [sp, #48]
    4108:	ldr	x0, [x0]
    410c:	ldr	x2, [sp, #96]
    4110:	mov	x5, x2
    4114:	ldr	x4, [sp, #312]
    4118:	mov	x3, #0x0                   	// #0
    411c:	mov	x2, x0
    4120:	ldr	x0, [sp, #72]
    4124:	bl	30b8 <grub_mod_init-0x1b98>
    4128:	ldr	x1, [sp, #96]
    412c:	cmp	x0, x1
    4130:	b.eq	4168 <grub_mod_init-0xae8>  // b.none
    4134:	ldr	x0, [sp, #376]
    4138:	bl	0 <grub_free>
    413c:	ldr	x0, [sp, #368]
    4140:	bl	0 <grub_free>
    4144:	ldr	x0, [sp, #344]
    4148:	bl	0 <grub_free>
    414c:	ldr	x0, [sp, #312]
    4150:	bl	0 <grub_free>
    4154:	adrp	x0, 0 <grub_mod_init-0x4c50>
    4158:	add	x0, x0, #0x0
    415c:	ldr	x0, [x0]
    4160:	ldr	w0, [x0]
    4164:	b	4460 <grub_mod_init-0x7f0>
    4168:	ldr	x0, [sp, #96]
    416c:	ldr	x1, [sp, #312]
    4170:	add	x19, x1, x0
    4174:	ldr	x0, [sp, #64]
    4178:	bl	0 <grub_strlen>
    417c:	add	x0, x0, #0x1
    4180:	mov	x2, x0
    4184:	ldr	x1, [sp, #64]
    4188:	mov	x0, x19
    418c:	bl	b0 <grub_mod_init-0x4ba0>
    4190:	ldr	x0, [sp, #368]
    4194:	bl	0 <grub_free>
    4198:	ldr	x0, [sp, #312]
    419c:	str	x0, [sp, #368]
    41a0:	ldr	x0, [sp, #368]
    41a4:	str	x0, [sp, #64]
    41a8:	ldr	x0, [sp, #64]
    41ac:	ldrb	w0, [x0]
    41b0:	cmp	w0, #0x2f
    41b4:	b.ne	4430 <grub_mod_init-0x820>  // b.any
    41b8:	ldr	x3, [sp, #40]
    41bc:	ldr	x2, [sp, #48]
    41c0:	ldr	x1, [sp, #56]
    41c4:	ldr	x0, [sp, #72]
    41c8:	bl	3968 <grub_mod_init-0x12e8>
    41cc:	str	w0, [sp, #340]
    41d0:	ldr	w0, [sp, #340]
    41d4:	cmp	w0, #0x0
    41d8:	b.eq	4430 <grub_mod_init-0x820>  // b.none
    41dc:	ldr	w0, [sp, #340]
    41e0:	b	4460 <grub_mod_init-0x7f0>
    41e4:	ldr	x0, [sp, #352]
    41e8:	ldrb	w1, [x0, #29]
    41ec:	ldr	x0, [sp, #40]
    41f0:	strb	w1, [x0]
    41f4:	ldr	x0, [sp, #352]
    41f8:	ldrb	w0, [x0, #8]
    41fc:	cmp	w0, #0x1
    4200:	b.eq	4358 <grub_mod_init-0x8f8>  // b.none
    4204:	cmp	w0, #0x84
    4208:	b.ne	43f4 <grub_mod_init-0x85c>  // b.any
    420c:	ldr	x1, [sp, #352]
    4210:	ldr	x0, [sp, #72]
    4214:	ldr	x2, [x0, #80]
    4218:	add	x4, sp, #0x128
    421c:	add	x3, sp, #0x130
    4220:	add	x0, sp, #0x110
    4224:	mov	w7, #0x0                   	// #0
    4228:	mov	x6, #0x0                   	// #0
    422c:	mov	x5, x4
    4230:	mov	x4, x3
    4234:	mov	x3, x2
    4238:	mov	x2, x0
    423c:	ldr	x0, [sp, #72]
    4240:	bl	b64 <grub_mod_init-0x40ec>
    4244:	str	w0, [sp, #340]
    4248:	ldr	w0, [sp, #340]
    424c:	cmp	w0, #0x0
    4250:	b.eq	4274 <grub_mod_init-0x9dc>  // b.none
    4254:	ldr	x0, [sp, #376]
    4258:	bl	0 <grub_free>
    425c:	ldr	x0, [sp, #368]
    4260:	bl	0 <grub_free>
    4264:	ldr	x0, [sp, #344]
    4268:	bl	0 <grub_free>
    426c:	ldr	w0, [sp, #340]
    4270:	b	4460 <grub_mod_init-0x7f0>
    4274:	ldr	x0, [sp, #352]
    4278:	ldr	x1, [x0]
    427c:	ldr	x0, [sp, #272]
    4280:	cmp	x1, x0
    4284:	b.ne	429c <grub_mod_init-0x9b4>  // b.any
    4288:	ldr	x0, [sp, #352]
    428c:	ldrb	w1, [x0, #8]
    4290:	ldrb	w0, [sp, #280]
    4294:	cmp	w1, w0
    4298:	b.eq	42d8 <grub_mod_init-0x978>  // b.none
    429c:	ldr	x0, [sp, #376]
    42a0:	bl	0 <grub_free>
    42a4:	ldr	x0, [sp, #368]
    42a8:	bl	0 <grub_free>
    42ac:	ldr	x2, [sp, #344]
    42b0:	adrp	x0, 0 <grub_mod_init-0x4c50>
    42b4:	add	x0, x0, #0x0
    42b8:	ldr	x1, [x0]
    42bc:	mov	w0, #0x5                   	// #5
    42c0:	bl	0 <grub_error>
    42c4:	str	w0, [sp, #340]
    42c8:	ldr	x0, [sp, #344]
    42cc:	bl	0 <grub_free>
    42d0:	ldr	w0, [sp, #340]
    42d4:	b	4460 <grub_mod_init-0x7f0>
    42d8:	ldr	x0, [sp, #304]
    42dc:	add	x1, sp, #0x50
    42e0:	mov	w4, #0x0                   	// #0
    42e4:	mov	x3, #0xc0                  	// #192
    42e8:	mov	x2, x1
    42ec:	mov	x1, x0
    42f0:	ldr	x0, [sp, #72]
    42f4:	bl	1de8 <grub_mod_init-0x2e68>
    42f8:	str	w0, [sp, #340]
    42fc:	ldr	w0, [sp, #340]
    4300:	cmp	w0, #0x0
    4304:	b.eq	4328 <grub_mod_init-0x928>  // b.none
    4308:	ldr	x0, [sp, #376]
    430c:	bl	0 <grub_free>
    4310:	ldr	x0, [sp, #368]
    4314:	bl	0 <grub_free>
    4318:	ldr	x0, [sp, #344]
    431c:	bl	0 <grub_free>
    4320:	ldr	w0, [sp, #340]
    4324:	b	4460 <grub_mod_init-0x7f0>
    4328:	ldr	x0, [sp, #56]
    432c:	mov	w1, #0x54                  	// #84
    4330:	strb	w1, [x0, #8]
    4334:	ldr	x0, [sp, #56]
    4338:	stur	xzr, [x0, #9]
    433c:	ldr	x0, [sp, #56]
    4340:	mov	x1, #0x100                 	// #256
    4344:	str	x1, [x0]
    4348:	ldr	x1, [sp, #256]
    434c:	ldr	x0, [sp, #48]
    4350:	str	x1, [x0]
    4354:	b	3b58 <grub_mod_init-0x10f8>
    4358:	ldr	x0, [sp, #392]
    435c:	ldrb	w0, [x0]
    4360:	cmp	w0, #0x0
    4364:	b.eq	43b4 <grub_mod_init-0x89c>  // b.none
    4368:	ldr	x0, [sp, #40]
    436c:	ldrb	w0, [x0]
    4370:	cmp	w0, #0x1
    4374:	b.ne	43b4 <grub_mod_init-0x89c>  // b.any
    4378:	ldr	x0, [sp, #376]
    437c:	bl	0 <grub_free>
    4380:	ldr	x0, [sp, #368]
    4384:	bl	0 <grub_free>
    4388:	ldr	x2, [sp, #344]
    438c:	adrp	x0, 0 <grub_mod_init-0x4c50>
    4390:	add	x0, x0, #0x0
    4394:	ldr	x1, [x0]
    4398:	mov	w0, #0x5                   	// #5
    439c:	bl	0 <grub_error>
    43a0:	str	w0, [sp, #340]
    43a4:	ldr	x0, [sp, #344]
    43a8:	bl	0 <grub_free>
    43ac:	ldr	w0, [sp, #340]
    43b0:	b	4460 <grub_mod_init-0x7f0>
    43b4:	ldr	x1, [sp, #56]
    43b8:	ldr	x0, [sp, #352]
    43bc:	mov	x2, x1
    43c0:	mov	x3, x0
    43c4:	ldp	x0, x1, [x3]
    43c8:	stp	x0, x1, [x2]
    43cc:	ldrb	w0, [x3, #16]
    43d0:	strb	w0, [x2, #16]
    43d4:	ldr	x0, [sp, #40]
    43d8:	ldrb	w0, [x0]
    43dc:	cmp	w0, #0x2
    43e0:	b.ne	4438 <grub_mod_init-0x818>  // b.any
    43e4:	ldr	x0, [sp, #56]
    43e8:	mov	w1, #0x54                  	// #84
    43ec:	strb	w1, [x0, #8]
    43f0:	b	4438 <grub_mod_init-0x818>
    43f4:	ldr	x0, [sp, #368]
    43f8:	bl	0 <grub_free>
    43fc:	ldr	x0, [sp, #344]
    4400:	bl	0 <grub_free>
    4404:	ldr	x0, [sp, #376]
    4408:	bl	0 <grub_free>
    440c:	ldr	x0, [sp, #352]
    4410:	ldrb	w0, [x0, #8]
    4414:	mov	w2, w0
    4418:	adrp	x0, 0 <grub_mod_init-0x4c50>
    441c:	add	x0, x0, #0x0
    4420:	ldr	x1, [x0]
    4424:	mov	w0, #0x9                   	// #9
    4428:	bl	0 <grub_error>
    442c:	b	4460 <grub_mod_init-0x7f0>
    4430:	nop
    4434:	b	3b58 <grub_mod_init-0x10f8>
    4438:	nop
    443c:	b	3b58 <grub_mod_init-0x10f8>
    4440:	nop
    4444:	ldr	x0, [sp, #376]
    4448:	bl	0 <grub_free>
    444c:	ldr	x0, [sp, #344]
    4450:	bl	0 <grub_free>
    4454:	ldr	x0, [sp, #368]
    4458:	bl	0 <grub_free>
    445c:	mov	w0, #0x0                   	// #0
    4460:	ldr	x19, [sp, #16]
    4464:	ldp	x29, x30, [sp], #400
    4468:	ret
    446c:	nop
	...
    4498:	stp	x29, x30, [sp, #-352]!
    449c:	mov	x29, sp
    44a0:	str	x0, [sp, #40]
    44a4:	str	x1, [sp, #32]
    44a8:	str	x2, [sp, #24]
    44ac:	str	x3, [sp, #16]
    44b0:	ldr	x0, [sp, #40]
    44b4:	bl	28d0 <grub_mod_init-0x2380>
    44b8:	str	x0, [sp, #312]
    44bc:	str	xzr, [sp, #344]
    44c0:	str	xzr, [sp, #336]
    44c4:	str	wzr, [sp, #332]
    44c8:	ldr	x0, [sp, #312]
    44cc:	cmp	x0, #0x0
    44d0:	b.ne	44e8 <grub_mod_init-0x768>  // b.any
    44d4:	adrp	x0, 0 <grub_mod_init-0x4c50>
    44d8:	add	x0, x0, #0x0
    44dc:	ldr	x0, [x0]
    44e0:	ldr	w0, [x0]
    44e4:	b	487c <grub_mod_init-0x3d4>
    44e8:	add	x2, sp, #0xdf
    44ec:	add	x1, sp, #0xe0
    44f0:	add	x0, sp, #0x120
    44f4:	mov	x4, x2
    44f8:	mov	x3, x1
    44fc:	mov	x2, x0
    4500:	ldr	x1, [sp, #32]
    4504:	ldr	x0, [sp, #312]
    4508:	bl	3ac0 <grub_mod_init-0x1190>
    450c:	str	w0, [sp, #308]
    4510:	ldr	w0, [sp, #308]
    4514:	cmp	w0, #0x0
    4518:	b.eq	452c <grub_mod_init-0x724>  // b.none
    451c:	ldr	x0, [sp, #312]
    4520:	bl	29e8 <grub_mod_init-0x2268>
    4524:	ldr	w0, [sp, #308]
    4528:	b	487c <grub_mod_init-0x3d4>
    452c:	ldrb	w0, [sp, #223]
    4530:	cmp	w0, #0x2
    4534:	b.eq	4558 <grub_mod_init-0x6f8>  // b.none
    4538:	ldr	x0, [sp, #312]
    453c:	bl	29e8 <grub_mod_init-0x2268>
    4540:	adrp	x0, 0 <grub_mod_init-0x4c50>
    4544:	add	x0, x0, #0x0
    4548:	ldr	x1, [x0]
    454c:	mov	w0, #0x4                   	// #4
    4550:	bl	0 <grub_error>
    4554:	b	487c <grub_mod_init-0x3d4>
    4558:	ldr	x2, [sp, #224]
    455c:	add	x5, sp, #0xe8
    4560:	add	x4, sp, #0xf8
    4564:	add	x3, sp, #0x100
    4568:	add	x1, sp, #0x108
    456c:	add	x0, sp, #0x120
    4570:	mov	w7, #0x0                   	// #0
    4574:	mov	x6, x5
    4578:	mov	x5, x4
    457c:	mov	x4, x3
    4580:	mov	x3, x2
    4584:	mov	x2, x1
    4588:	mov	x1, x0
    458c:	ldr	x0, [sp, #312]
    4590:	bl	b64 <grub_mod_init-0x40ec>
    4594:	str	w0, [sp, #308]
    4598:	ldr	w0, [sp, #308]
    459c:	cmp	w0, #0x0
    45a0:	b.eq	45b4 <grub_mod_init-0x69c>  // b.none
    45a4:	ldr	x0, [sp, #312]
    45a8:	bl	29e8 <grub_mod_init-0x2268>
    45ac:	ldr	w0, [sp, #308]
    45b0:	b	487c <grub_mod_init-0x3d4>
    45b4:	ldrb	w0, [sp, #272]
    45b8:	cmp	w0, #0x54
    45bc:	b.ne	45d0 <grub_mod_init-0x680>  // b.any
    45c0:	ldr	x1, [sp, #264]
    45c4:	ldr	x0, [sp, #288]
    45c8:	cmp	x1, x0
    45cc:	b.eq	4608 <grub_mod_init-0x648>  // b.none
    45d0:	add	x3, sp, #0x108
    45d4:	add	x2, sp, #0xf8
    45d8:	add	x1, sp, #0x100
    45dc:	add	x0, sp, #0xe8
    45e0:	mov	x4, x3
    45e4:	mov	x3, x2
    45e8:	mov	x2, x1
    45ec:	mov	x1, x0
    45f0:	ldr	x0, [sp, #312]
    45f4:	bl	7c0 <grub_mod_init-0x4490>
    45f8:	str	w0, [sp, #332]
    45fc:	ldr	w0, [sp, #332]
    4600:	cmp	w0, #0x0
    4604:	b.le	4850 <grub_mod_init-0x400>
    4608:	ldrb	w0, [sp, #272]
    460c:	cmp	w0, #0x54
    4610:	b.ne	4624 <grub_mod_init-0x62c>  // b.any
    4614:	ldr	x1, [sp, #264]
    4618:	ldr	x0, [sp, #288]
    461c:	cmp	x1, x0
    4620:	b.eq	462c <grub_mod_init-0x624>  // b.none
    4624:	str	wzr, [sp, #332]
    4628:	b	485c <grub_mod_init-0x3f4>
    462c:	ldr	x0, [sp, #248]
    4630:	ldr	x1, [sp, #344]
    4634:	cmp	x1, x0
    4638:	b.cs	4688 <grub_mod_init-0x5c8>  // b.hs, b.nlast
    463c:	ldr	x0, [sp, #248]
    4640:	lsl	x0, x0, #1
    4644:	str	x0, [sp, #344]
    4648:	ldr	x0, [sp, #336]
    464c:	bl	0 <grub_free>
    4650:	ldr	x0, [sp, #344]
    4654:	add	x0, x0, #0x1
    4658:	bl	0 <grub_malloc>
    465c:	str	x0, [sp, #336]
    4660:	ldr	x0, [sp, #336]
    4664:	cmp	x0, #0x0
    4668:	b.ne	4688 <grub_mod_init-0x5c8>  // b.any
    466c:	adrp	x0, 0 <grub_mod_init-0x4c50>
    4670:	add	x0, x0, #0x0
    4674:	ldr	x0, [x0]
    4678:	ldr	w0, [x0]
    467c:	neg	w0, w0
    4680:	str	w0, [sp, #332]
    4684:	b	485c <grub_mod_init-0x3f4>
    4688:	ldr	x0, [sp, #256]
    468c:	ldr	x1, [sp, #248]
    4690:	mov	w4, #0x0                   	// #0
    4694:	mov	x3, x1
    4698:	ldr	x2, [sp, #336]
    469c:	mov	x1, x0
    46a0:	ldr	x0, [sp, #312]
    46a4:	bl	1de8 <grub_mod_init-0x2e68>
    46a8:	str	w0, [sp, #308]
    46ac:	ldr	w0, [sp, #308]
    46b0:	cmp	w0, #0x0
    46b4:	b.eq	46c8 <grub_mod_init-0x588>  // b.none
    46b8:	ldr	w0, [sp, #308]
    46bc:	neg	w0, w0
    46c0:	str	w0, [sp, #332]
    46c4:	b	485c <grub_mod_init-0x3f4>
    46c8:	ldr	x0, [sp, #336]
    46cc:	str	x0, [sp, #320]
    46d0:	b	47fc <grub_mod_init-0x454>
    46d4:	ldr	x0, [sp, #320]
    46d8:	ldr	x1, [x0]
    46dc:	ldr	x2, [sp, #224]
    46e0:	add	x0, sp, #0x30
    46e4:	mov	x3, x2
    46e8:	mov	x2, x1
    46ec:	mov	x1, x0
    46f0:	ldr	x0, [sp, #312]
    46f4:	bl	2a88 <grub_mod_init-0x21c8>
    46f8:	str	w0, [sp, #308]
    46fc:	add	x0, sp, #0xc8
    4700:	mov	x2, #0x10                  	// #16
    4704:	mov	w1, #0x0                   	// #0
    4708:	bl	0 <grub_memset>
    470c:	ldr	w0, [sp, #308]
    4710:	cmp	w0, #0x0
    4714:	b.eq	472c <grub_mod_init-0x524>  // b.none
    4718:	adrp	x0, 0 <grub_mod_init-0x4c50>
    471c:	add	x0, x0, #0x0
    4720:	ldr	x0, [x0]
    4724:	str	wzr, [x0]
    4728:	b	4740 <grub_mod_init-0x510>
    472c:	ldr	x0, [sp, #184]
    4730:	str	w0, [sp, #204]
    4734:	ldrb	w0, [sp, #200]
    4738:	orr	w0, w0, #0x2
    473c:	strb	w0, [sp, #200]
    4740:	ldr	x0, [sp, #320]
    4744:	ldurh	w0, [x0, #27]
    4748:	ldr	x1, [sp, #320]
    474c:	sxtw	x0, w0
    4750:	add	x0, x1, x0
    4754:	ldrb	w0, [x0, #30]
    4758:	strb	w0, [sp, #307]
    475c:	ldr	x0, [sp, #320]
    4760:	ldurh	w0, [x0, #27]
    4764:	ldr	x1, [sp, #320]
    4768:	sxtw	x0, w0
    476c:	add	x0, x1, x0
    4770:	strb	wzr, [x0, #30]
    4774:	ldr	x0, [sp, #320]
    4778:	ldrb	w0, [x0, #29]
    477c:	cmp	w0, #0x2
    4780:	cset	w0, eq  // eq = none
    4784:	and	w1, w0, #0xff
    4788:	ldrb	w0, [sp, #200]
    478c:	bfxil	w0, w1, #0, #1
    4790:	strb	w0, [sp, #200]
    4794:	ldr	x0, [sp, #320]
    4798:	add	x0, x0, #0x1e
    479c:	add	x1, sp, #0xc8
    47a0:	ldr	x3, [sp, #24]
    47a4:	ldr	x2, [sp, #16]
    47a8:	blr	x3
    47ac:	cmp	w0, #0x0
    47b0:	b.ne	4858 <grub_mod_init-0x3f8>  // b.any
    47b4:	ldr	x0, [sp, #320]
    47b8:	ldurh	w0, [x0, #27]
    47bc:	ldr	x1, [sp, #320]
    47c0:	sxtw	x0, w0
    47c4:	add	x0, x1, x0
    47c8:	ldrb	w1, [sp, #307]
    47cc:	strb	w1, [x0, #30]
    47d0:	ldr	x0, [sp, #320]
    47d4:	ldurh	w0, [x0, #27]
    47d8:	and	x1, x0, #0xffff
    47dc:	ldr	x0, [sp, #320]
    47e0:	ldurh	w0, [x0, #25]
    47e4:	and	x0, x0, #0xffff
    47e8:	add	x0, x1, x0
    47ec:	add	x0, x0, #0x1e
    47f0:	ldr	x1, [sp, #336]
    47f4:	add	x0, x1, x0
    47f8:	str	x0, [sp, #320]
    47fc:	ldr	x1, [sp, #320]
    4800:	ldr	x0, [sp, #336]
    4804:	sub	x0, x1, x0
    4808:	ldr	x1, [sp, #248]
    480c:	cmp	x0, x1
    4810:	b.lt	46d4 <grub_mod_init-0x57c>  // b.tstop
    4814:	add	x3, sp, #0x108
    4818:	add	x2, sp, #0xf8
    481c:	add	x1, sp, #0x100
    4820:	add	x0, sp, #0xe8
    4824:	mov	x4, x3
    4828:	mov	x3, x2
    482c:	mov	x2, x1
    4830:	mov	x1, x0
    4834:	ldr	x0, [sp, #312]
    4838:	bl	7c0 <grub_mod_init-0x4490>
    483c:	str	w0, [sp, #332]
    4840:	ldr	w0, [sp, #332]
    4844:	cmp	w0, #0x0
    4848:	b.gt	4608 <grub_mod_init-0x648>
    484c:	b	485c <grub_mod_init-0x3f4>
    4850:	nop
    4854:	b	485c <grub_mod_init-0x3f4>
    4858:	nop
    485c:	ldr	x0, [sp, #336]
    4860:	bl	0 <grub_free>
    4864:	add	x0, sp, #0xe8
    4868:	bl	4e8 <grub_mod_init-0x4768>
    486c:	ldr	x0, [sp, #312]
    4870:	bl	29e8 <grub_mod_init-0x2268>
    4874:	ldr	w0, [sp, #332]
    4878:	neg	w0, w0
    487c:	ldp	x29, x30, [sp], #352
    4880:	ret
    4884:	nop
	...
    4898:	stp	x29, x30, [sp, #-224]!
    489c:	mov	x29, sp
    48a0:	str	x0, [sp, #24]
    48a4:	str	x1, [sp, #16]
    48a8:	ldr	x0, [sp, #24]
    48ac:	ldr	x0, [x0, #8]
    48b0:	bl	28d0 <grub_mod_init-0x2380>
    48b4:	str	x0, [sp, #216]
    48b8:	ldr	x0, [sp, #216]
    48bc:	cmp	x0, #0x0
    48c0:	b.ne	48d8 <grub_mod_init-0x378>  // b.any
    48c4:	adrp	x0, 0 <grub_mod_init-0x4c50>
    48c8:	add	x0, x0, #0x0
    48cc:	ldr	x0, [x0]
    48d0:	ldr	w0, [x0]
    48d4:	b	49bc <grub_mod_init-0x294>
    48d8:	ldr	x0, [sp, #216]
    48dc:	add	x1, x0, #0xb30
    48e0:	add	x2, sp, #0x3f
    48e4:	add	x0, sp, #0x28
    48e8:	mov	x4, x2
    48ec:	mov	x3, x1
    48f0:	mov	x2, x0
    48f4:	ldr	x1, [sp, #16]
    48f8:	ldr	x0, [sp, #216]
    48fc:	bl	3ac0 <grub_mod_init-0x1190>
    4900:	str	w0, [sp, #212]
    4904:	ldr	w0, [sp, #212]
    4908:	cmp	w0, #0x0
    490c:	b.eq	4920 <grub_mod_init-0x330>  // b.none
    4910:	ldr	x0, [sp, #216]
    4914:	bl	29e8 <grub_mod_init-0x2268>
    4918:	ldr	w0, [sp, #212]
    491c:	b	49bc <grub_mod_init-0x294>
    4920:	ldrb	w0, [sp, #63]
    4924:	cmp	w0, #0x1
    4928:	b.eq	494c <grub_mod_init-0x304>  // b.none
    492c:	ldr	x0, [sp, #216]
    4930:	bl	29e8 <grub_mod_init-0x2268>
    4934:	adrp	x0, 0 <grub_mod_init-0x4c50>
    4938:	add	x0, x0, #0x0
    493c:	ldr	x1, [x0]
    4940:	mov	w0, #0x4                   	// #4
    4944:	bl	0 <grub_error>
    4948:	b	49bc <grub_mod_init-0x294>
    494c:	ldr	x1, [sp, #40]
    4950:	ldr	x0, [sp, #216]
    4954:	str	x1, [x0, #2872]
    4958:	ldr	x0, [sp, #216]
    495c:	ldr	x1, [x0, #2872]
    4960:	ldr	x0, [sp, #216]
    4964:	ldr	x2, [x0, #2864]
    4968:	add	x0, sp, #0x40
    496c:	mov	x3, x2
    4970:	mov	x2, x1
    4974:	mov	x1, x0
    4978:	ldr	x0, [sp, #216]
    497c:	bl	2a88 <grub_mod_init-0x21c8>
    4980:	str	w0, [sp, #212]
    4984:	ldr	w0, [sp, #212]
    4988:	cmp	w0, #0x0
    498c:	b.eq	49a0 <grub_mod_init-0x2b0>  // b.none
    4990:	ldr	x0, [sp, #216]
    4994:	bl	29e8 <grub_mod_init-0x2268>
    4998:	ldr	w0, [sp, #212]
    499c:	b	49bc <grub_mod_init-0x294>
    49a0:	ldr	x0, [sp, #24]
    49a4:	ldr	x1, [sp, #216]
    49a8:	str	x1, [x0, #80]
    49ac:	ldr	x1, [sp, #80]
    49b0:	ldr	x0, [sp, #24]
    49b4:	str	x1, [x0, #64]
    49b8:	ldr	w0, [sp, #212]
    49bc:	ldp	x29, x30, [sp], #224
    49c0:	ret
    49c4:	nop
	...
    49d8:	stp	x29, x30, [sp, #-32]!
    49dc:	mov	x29, sp
    49e0:	str	x0, [sp, #24]
    49e4:	ldr	x0, [sp, #24]
    49e8:	ldr	x0, [x0, #80]
    49ec:	bl	29e8 <grub_mod_init-0x2268>
    49f0:	mov	w0, #0x0                   	// #0
    49f4:	ldp	x29, x30, [sp], #32
    49f8:	ret
    49fc:	stp	x29, x30, [sp, #-64]!
    4a00:	mov	x29, sp
    4a04:	str	x0, [sp, #40]
    4a08:	str	x1, [sp, #32]
    4a0c:	str	x2, [sp, #24]
    4a10:	ldr	x0, [sp, #40]
    4a14:	ldr	x0, [x0, #80]
    4a18:	str	x0, [sp, #56]
    4a1c:	ldr	x0, [sp, #56]
    4a20:	ldr	x1, [x0, #2872]
    4a24:	ldr	x0, [sp, #56]
    4a28:	ldr	x2, [x0, #2864]
    4a2c:	ldr	x0, [sp, #40]
    4a30:	ldr	x0, [x0, #24]
    4a34:	ldr	x5, [sp, #24]
    4a38:	ldr	x4, [sp, #32]
    4a3c:	mov	x3, x0
    4a40:	ldr	x0, [sp, #56]
    4a44:	bl	30b8 <grub_mod_init-0x1b98>
    4a48:	ldp	x29, x30, [sp], #64
    4a4c:	ret
    4a50:	sub	sp, sp, #0x80
    4a54:	stp	x29, x30, [sp, #16]
    4a58:	add	x29, sp, #0x10
    4a5c:	stp	x19, x20, [sp, #32]
    4a60:	stp	x21, x22, [sp, #48]
    4a64:	stp	x23, x24, [sp, #64]
    4a68:	str	x25, [sp, #80]
    4a6c:	str	x0, [sp, #104]
    4a70:	str	x1, [sp, #96]
    4a74:	ldr	x0, [sp, #96]
    4a78:	str	xzr, [x0]
    4a7c:	ldr	x0, [sp, #104]
    4a80:	bl	28d0 <grub_mod_init-0x2380>
    4a84:	str	x0, [sp, #120]
    4a88:	ldr	x0, [sp, #120]
    4a8c:	cmp	x0, #0x0
    4a90:	b.ne	4aa8 <grub_mod_init-0x1a8>  // b.any
    4a94:	adrp	x0, 0 <grub_mod_init-0x4c50>
    4a98:	add	x0, x0, #0x0
    4a9c:	ldr	x0, [x0]
    4aa0:	ldr	w0, [x0]
    4aa4:	b	4b98 <grub_mod_init-0xb8>
    4aa8:	ldr	x0, [sp, #120]
    4aac:	ldrh	w0, [x0, #32]
    4ab0:	bl	0 <grub_mod_init-0x4c50>
    4ab4:	and	w0, w0, #0xffff
    4ab8:	mov	w19, w0
    4abc:	ldr	x0, [sp, #120]
    4ac0:	ldrh	w0, [x0, #34]
    4ac4:	bl	0 <grub_mod_init-0x4c50>
    4ac8:	and	w0, w0, #0xffff
    4acc:	mov	w20, w0
    4ad0:	ldr	x0, [sp, #120]
    4ad4:	ldrh	w0, [x0, #36]
    4ad8:	bl	0 <grub_mod_init-0x4c50>
    4adc:	and	w0, w0, #0xffff
    4ae0:	mov	w21, w0
    4ae4:	ldr	x0, [sp, #120]
    4ae8:	ldrh	w0, [x0, #38]
    4aec:	bl	0 <grub_mod_init-0x4c50>
    4af0:	and	w0, w0, #0xffff
    4af4:	mov	w22, w0
    4af8:	ldr	x0, [sp, #120]
    4afc:	ldrh	w0, [x0, #40]
    4b00:	bl	0 <grub_mod_init-0x4c50>
    4b04:	and	w0, w0, #0xffff
    4b08:	mov	w23, w0
    4b0c:	ldr	x0, [sp, #120]
    4b10:	ldrh	w0, [x0, #42]
    4b14:	bl	0 <grub_mod_init-0x4c50>
    4b18:	and	w0, w0, #0xffff
    4b1c:	mov	w24, w0
    4b20:	ldr	x0, [sp, #120]
    4b24:	ldrh	w0, [x0, #44]
    4b28:	bl	0 <grub_mod_init-0x4c50>
    4b2c:	and	w0, w0, #0xffff
    4b30:	mov	w25, w0
    4b34:	ldr	x0, [sp, #120]
    4b38:	ldrh	w0, [x0, #46]
    4b3c:	bl	0 <grub_mod_init-0x4c50>
    4b40:	and	w0, w0, #0xffff
    4b44:	str	w0, [sp]
    4b48:	mov	w7, w25
    4b4c:	mov	w6, w24
    4b50:	mov	w5, w23
    4b54:	mov	w4, w22
    4b58:	mov	w3, w21
    4b5c:	mov	w2, w20
    4b60:	mov	w1, w19
    4b64:	adrp	x0, 0 <grub_mod_init-0x4c50>
    4b68:	add	x0, x0, #0x0
    4b6c:	ldr	x0, [x0]
    4b70:	bl	0 <grub_xasprintf>
    4b74:	mov	x1, x0
    4b78:	ldr	x0, [sp, #96]
    4b7c:	str	x1, [x0]
    4b80:	ldr	x0, [sp, #120]
    4b84:	bl	29e8 <grub_mod_init-0x2268>
    4b88:	adrp	x0, 0 <grub_mod_init-0x4c50>
    4b8c:	add	x0, x0, #0x0
    4b90:	ldr	x0, [x0]
    4b94:	ldr	w0, [x0]
    4b98:	ldp	x19, x20, [sp, #32]
    4b9c:	ldp	x21, x22, [sp, #48]
    4ba0:	ldp	x23, x24, [sp, #64]
    4ba4:	ldr	x25, [sp, #80]
    4ba8:	ldp	x29, x30, [sp, #16]
    4bac:	add	sp, sp, #0x80
    4bb0:	ret
    4bb4:	nop
	...
    4bc8:	stp	x29, x30, [sp, #-48]!
    4bcc:	mov	x29, sp
    4bd0:	str	x0, [sp, #24]
    4bd4:	str	x1, [sp, #16]
    4bd8:	ldr	x0, [sp, #16]
    4bdc:	str	xzr, [x0]
    4be0:	ldr	x0, [sp, #24]
    4be4:	bl	28d0 <grub_mod_init-0x2380>
    4be8:	str	x0, [sp, #40]
    4bec:	ldr	x0, [sp, #40]
    4bf0:	cmp	x0, #0x0
    4bf4:	b.ne	4c0c <grub_mod_init-0x44>  // b.any
    4bf8:	adrp	x0, 0 <grub_mod_init-0x4c50>
    4bfc:	add	x0, x0, #0x0
    4c00:	ldr	x0, [x0]
    4c04:	ldr	w0, [x0]
    4c08:	b	4c40 <grub_mod_init-0x10>
    4c0c:	ldr	x0, [sp, #40]
    4c10:	add	x0, x0, #0x12b
    4c14:	mov	x1, #0x100                 	// #256
    4c18:	bl	0 <grub_strndup>
    4c1c:	mov	x1, x0
    4c20:	ldr	x0, [sp, #16]
    4c24:	str	x1, [x0]
    4c28:	ldr	x0, [sp, #40]
    4c2c:	bl	29e8 <grub_mod_init-0x2268>
    4c30:	adrp	x0, 0 <grub_mod_init-0x4c50>
    4c34:	add	x0, x0, #0x0
    4c38:	ldr	x0, [x0]
    4c3c:	ldr	w0, [x0]
    4c40:	ldp	x29, x30, [sp], #48
    4c44:	ret
	...

0000000000004c50 <grub_mod_init>:
    4c50:	stp	x29, x30, [sp, #-32]!
    4c54:	mov	x29, sp
    4c58:	str	x0, [sp, #24]
    4c5c:	adrp	x0, 0 <grub_mod_init-0x4c50>
    4c60:	add	x0, x0, #0x0
    4c64:	ldr	x0, [x0]
    4c68:	bl	58 <grub_mod_init-0x4bf8>
    4c6c:	nop
    4c70:	ldp	x29, x30, [sp], #32
    4c74:	ret
	...

0000000000004c80 <grub_mod_fini>:
    4c80:	stp	x29, x30, [sp, #-16]!
    4c84:	mov	x29, sp
    4c88:	adrp	x0, 0 <grub_mod_init-0x4c50>
    4c8c:	add	x0, x0, #0x0
    4c90:	ldr	x0, [x0]
    4c94:	bl	90 <grub_mod_init-0x4bc0>
    4c98:	nop
    4c9c:	ldp	x29, x30, [sp], #16
    4ca0:	ret
    4ca4:	nop
	...
    4cb0:	sub	sp, sp, #0x20
    4cb4:	str	w0, [sp, #12]
    4cb8:	str	w1, [sp, #8]
    4cbc:	str	wzr, [sp, #28]
    4cc0:	mov	w0, #0x1                   	// #1
    4cc4:	str	w0, [sp, #24]
    4cc8:	b	4d18 <grub_mod_fini+0x98>
    4ccc:	ldr	w0, [sp, #12]
    4cd0:	and	w0, w0, #0x1
    4cd4:	cmp	w0, #0x0
    4cd8:	b.eq	4d00 <grub_mod_fini+0x80>  // b.none
    4cdc:	ldr	w1, [sp, #8]
    4ce0:	ldr	w0, [sp, #24]
    4ce4:	sub	w0, w1, w0
    4ce8:	mov	w1, #0x1                   	// #1
    4cec:	lsl	w0, w1, w0
    4cf0:	mov	w1, w0
    4cf4:	ldr	w0, [sp, #28]
    4cf8:	orr	w0, w0, w1
    4cfc:	str	w0, [sp, #28]
    4d00:	ldr	w0, [sp, #12]
    4d04:	lsr	w0, w0, #1
    4d08:	str	w0, [sp, #12]
    4d0c:	ldr	w0, [sp, #24]
    4d10:	add	w0, w0, #0x1
    4d14:	str	w0, [sp, #24]
    4d18:	ldr	w1, [sp, #24]
    4d1c:	ldr	w0, [sp, #8]
    4d20:	cmp	w1, w0
    4d24:	b.le	4ccc <grub_mod_fini+0x4c>
    4d28:	ldr	w0, [sp, #28]
    4d2c:	add	sp, sp, #0x20
    4d30:	ret
    4d34:	stp	x29, x30, [sp, #-32]!
    4d38:	mov	x29, sp
    4d3c:	mov	w0, #0x6f41                	// #28481
    4d40:	movk	w0, #0x1edc, lsl #16
    4d44:	str	w0, [sp, #20]
    4d48:	str	wzr, [sp, #28]
    4d4c:	b	4e2c <grub_mod_fini+0x1ac>
    4d50:	ldr	w0, [sp, #28]
    4d54:	mov	w1, #0x8                   	// #8
    4d58:	bl	4cb0 <grub_mod_fini+0x30>
    4d5c:	lsl	w2, w0, #24
    4d60:	adrp	x0, 0 <grub_mod_init-0x4c50>
    4d64:	add	x0, x0, #0x0
    4d68:	ldr	x0, [x0]
    4d6c:	ldrsw	x1, [sp, #28]
    4d70:	str	w2, [x0, x1, lsl #2]
    4d74:	str	wzr, [sp, #24]
    4d78:	b	4de0 <grub_mod_fini+0x160>
    4d7c:	adrp	x0, 0 <grub_mod_init-0x4c50>
    4d80:	add	x0, x0, #0x0
    4d84:	ldr	x0, [x0]
    4d88:	ldrsw	x1, [sp, #28]
    4d8c:	ldr	w0, [x0, x1, lsl #2]
    4d90:	lsl	w1, w0, #1
    4d94:	adrp	x0, 0 <grub_mod_init-0x4c50>
    4d98:	add	x0, x0, #0x0
    4d9c:	ldr	x0, [x0]
    4da0:	ldrsw	x2, [sp, #28]
    4da4:	ldr	w0, [x0, x2, lsl #2]
    4da8:	cmp	w0, #0x0
    4dac:	b.ge	4db8 <grub_mod_fini+0x138>  // b.tcont
    4db0:	ldr	w0, [sp, #20]
    4db4:	b	4dbc <grub_mod_fini+0x13c>
    4db8:	mov	w0, #0x0                   	// #0
    4dbc:	eor	w2, w0, w1
    4dc0:	adrp	x0, 0 <grub_mod_init-0x4c50>
    4dc4:	add	x0, x0, #0x0
    4dc8:	ldr	x0, [x0]
    4dcc:	ldrsw	x1, [sp, #28]
    4dd0:	str	w2, [x0, x1, lsl #2]
    4dd4:	ldr	w0, [sp, #24]
    4dd8:	add	w0, w0, #0x1
    4ddc:	str	w0, [sp, #24]
    4de0:	ldr	w0, [sp, #24]
    4de4:	cmp	w0, #0x7
    4de8:	b.le	4d7c <grub_mod_fini+0xfc>
    4dec:	adrp	x0, 0 <grub_mod_init-0x4c50>
    4df0:	add	x0, x0, #0x0
    4df4:	ldr	x0, [x0]
    4df8:	ldrsw	x1, [sp, #28]
    4dfc:	ldr	w0, [x0, x1, lsl #2]
    4e00:	mov	w1, #0x20                  	// #32
    4e04:	bl	4cb0 <grub_mod_fini+0x30>
    4e08:	mov	w2, w0
    4e0c:	adrp	x0, 0 <grub_mod_init-0x4c50>
    4e10:	add	x0, x0, #0x0
    4e14:	ldr	x0, [x0]
    4e18:	ldrsw	x1, [sp, #28]
    4e1c:	str	w2, [x0, x1, lsl #2]
    4e20:	ldr	w0, [sp, #28]
    4e24:	add	w0, w0, #0x1
    4e28:	str	w0, [sp, #28]
    4e2c:	ldr	w0, [sp, #28]
    4e30:	cmp	w0, #0xff
    4e34:	b.le	4d50 <grub_mod_fini+0xd0>
    4e38:	nop
    4e3c:	nop
    4e40:	ldp	x29, x30, [sp], #32
    4e44:	ret
	...

0000000000004e50 <grub_getcrc32c>:
    4e50:	stp	x29, x30, [sp, #-48]!
    4e54:	mov	x29, sp
    4e58:	str	w0, [sp, #28]
    4e5c:	str	x1, [sp, #16]
    4e60:	str	w2, [sp, #24]
    4e64:	ldr	x0, [sp, #16]
    4e68:	str	x0, [sp, #32]
    4e6c:	adrp	x0, 0 <grub_mod_init-0x4c50>
    4e70:	add	x0, x0, #0x0
    4e74:	ldr	x0, [x0]
    4e78:	ldr	w0, [x0, #4]
    4e7c:	cmp	w0, #0x0
    4e80:	b.ne	4e88 <grub_getcrc32c+0x38>  // b.any
    4e84:	bl	4d34 <grub_mod_fini+0xb4>
    4e88:	ldr	w0, [sp, #28]
    4e8c:	mvn	w0, w0
    4e90:	str	w0, [sp, #28]
    4e94:	str	wzr, [sp, #44]
    4e98:	b	4eec <grub_getcrc32c+0x9c>
    4e9c:	ldr	w0, [sp, #28]
    4ea0:	lsr	w1, w0, #8
    4ea4:	ldr	w0, [sp, #28]
    4ea8:	and	w0, w0, #0xff
    4eac:	ldr	x2, [sp, #32]
    4eb0:	ldrb	w2, [x2]
    4eb4:	eor	w2, w0, w2
    4eb8:	adrp	x0, 0 <grub_mod_init-0x4c50>
    4ebc:	add	x0, x0, #0x0
    4ec0:	ldr	x0, [x0]
    4ec4:	mov	w2, w2
    4ec8:	ldr	w0, [x0, x2, lsl #2]
    4ecc:	eor	w0, w1, w0
    4ed0:	str	w0, [sp, #28]
    4ed4:	ldr	x0, [sp, #32]
    4ed8:	add	x0, x0, #0x1
    4edc:	str	x0, [sp, #32]
    4ee0:	ldr	w0, [sp, #44]
    4ee4:	add	w0, w0, #0x1
    4ee8:	str	w0, [sp, #44]
    4eec:	ldr	w1, [sp, #44]
    4ef0:	ldr	w0, [sp, #24]
    4ef4:	cmp	w1, w0
    4ef8:	b.lt	4e9c <grub_getcrc32c+0x4c>  // b.tstop
    4efc:	ldr	w0, [sp, #28]
    4f00:	mvn	w0, w0
    4f04:	ldp	x29, x30, [sp], #48
    4f08:	ret
    4f0c:	nop
	...
