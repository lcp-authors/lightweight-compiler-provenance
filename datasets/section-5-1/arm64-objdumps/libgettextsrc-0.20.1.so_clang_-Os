
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libgettextsrc-0.20.1.so_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

000000000000a008 <.init>:
    a008:	stp	x29, x30, [sp, #-16]!
    a00c:	mov	x29, sp
    a010:	bl	af50 <xmlCopyNamespace@plt+0x10>
    a014:	ldp	x29, x30, [sp], #16
    a018:	ret

Disassembly of section .plt:

000000000000a020 <memcpy@plt-0x20>:
    a020:	stp	x16, x30, [sp, #-16]!
    a024:	adrp	x16, 4c000 <plural_table_size@@Base+0x12c00>
    a028:	ldr	x17, [x16, #4088]
    a02c:	add	x16, x16, #0xff8
    a030:	br	x17
    a034:	nop
    a038:	nop
    a03c:	nop

000000000000a040 <memcpy@plt>:
    a040:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a044:	ldr	x17, [x16]
    a048:	add	x16, x16, #0x0
    a04c:	br	x17

000000000000a050 <read_catalog_file@plt>:
    a050:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a054:	ldr	x17, [x16, #8]
    a058:	add	x16, x16, #0x8
    a05c:	br	x17

000000000000a060 <msgdomain_list_copy@plt>:
    a060:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a064:	ldr	x17, [x16, #16]
    a068:	add	x16, x16, #0x10
    a06c:	br	x17

000000000000a070 <u8_check@plt>:
    a070:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a074:	ldr	x17, [x16, #24]
    a078:	add	x16, x16, #0x18
    a07c:	br	x17

000000000000a080 <xmlXPathRegisterNs@plt>:
    a080:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a084:	ldr	x17, [x16, #32]
    a088:	add	x16, x16, #0x20
    a08c:	br	x17

000000000000a090 <po_lex_charset_set@plt>:
    a090:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a094:	ldr	x17, [x16, #40]
    a098:	add	x16, x16, #0x28
    a09c:	br	x17

000000000000a0a0 <xmlTextWriterWriteRaw@plt>:
    a0a0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a0a4:	ldr	x17, [x16, #48]
    a0a8:	add	x16, x16, #0x30
    a0ac:	br	x17

000000000000a0b0 <uninstall_sigfpe_handler@plt>:
    a0b0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a0b4:	ldr	x17, [x16, #56]
    a0b8:	add	x16, x16, #0x38
    a0bc:	br	x17

000000000000a0c0 <strtoul@plt>:
    a0c0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a0c4:	ldr	x17, [x16, #64]
    a0c8:	add	x16, x16, #0x40
    a0cc:	br	x17

000000000000a0d0 <strlen@plt>:
    a0d0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a0d4:	ldr	x17, [x16, #72]
    a0d8:	add	x16, x16, #0x48
    a0dc:	br	x17

000000000000a0e0 <message_comment_append@plt>:
    a0e0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a0e4:	ldr	x17, [x16, #80]
    a0e8:	add	x16, x16, #0x50
    a0ec:	br	x17

000000000000a0f0 <po_gram_parse@plt>:
    a0f0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a0f4:	ldr	x17, [x16, #88]
    a0f8:	add	x16, x16, #0x58
    a0fc:	br	x17

000000000000a100 <file_ostream_create@plt>:
    a100:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a104:	ldr	x17, [x16, #96]
    a108:	add	x16, x16, #0x60
    a10c:	br	x17

000000000000a110 <exit@plt>:
    a110:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a114:	ldr	x17, [x16, #104]
    a118:	add	x16, x16, #0x68
    a11c:	br	x17

000000000000a120 <raise@plt>:
    a120:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a124:	ldr	x17, [x16, #112]
    a128:	add	x16, x16, #0x70
    a12c:	br	x17

000000000000a130 <check_plural_eval@plt>:
    a130:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a134:	ldr	x17, [x16, #120]
    a138:	add	x16, x16, #0x78
    a13c:	br	x17

000000000000a140 <error@plt>:
    a140:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a144:	ldr	x17, [x16, #128]
    a148:	add	x16, x16, #0x80
    a14c:	br	x17

000000000000a150 <message_print_comment_filepos@plt>:
    a150:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a154:	ldr	x17, [x16, #136]
    a158:	add	x16, x16, #0x88
    a15c:	br	x17

000000000000a160 <xmlAllocOutputBuffer@plt>:
    a160:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a164:	ldr	x17, [x16, #144]
    a168:	add	x16, x16, #0x90
    a16c:	br	x17

000000000000a170 <iconv_msgdomain_list@plt>:
    a170:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a174:	ldr	x17, [x16, #152]
    a178:	add	x16, x16, #0x98
    a17c:	br	x17

000000000000a180 <message_list_list_append@plt>:
    a180:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a184:	ldr	x17, [x16, #160]
    a188:	add	x16, x16, #0xa0
    a18c:	br	x17

000000000000a190 <string_list_destroy@plt>:
    a190:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a194:	ldr	x17, [x16, #168]
    a198:	add	x16, x16, #0xa8
    a19c:	br	x17

000000000000a1a0 <its_localization_note_rule_eval@plt>:
    a1a0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a1a4:	ldr	x17, [x16, #176]
    a1a8:	add	x16, x16, #0xb0
    a1ac:	br	x17

000000000000a1b0 <po_is_charset_weird_cjk@plt>:
    a1b0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a1b4:	ldr	x17, [x16, #184]
    a1b8:	add	x16, x16, #0xb8
    a1bc:	br	x17

000000000000a1c0 <xmlFreeTextWriter@plt>:
    a1c0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a1c4:	ldr	x17, [x16, #192]
    a1c8:	add	x16, x16, #0xc0
    a1cc:	br	x17

000000000000a1d0 <iconv_close@plt>:
    a1d0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a1d4:	ldr	x17, [x16, #200]
    a1d8:	add	x16, x16, #0xc8
    a1dc:	br	x17

000000000000a1e0 <hash_init@plt>:
    a1e0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a1e4:	ldr	x17, [x16, #208]
    a1e8:	add	x16, x16, #0xd0
    a1ec:	br	x17

000000000000a1f0 <po_charset_canonicalize@plt>:
    a1f0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a1f4:	ldr	x17, [x16, #216]
    a1f8:	add	x16, x16, #0xd8
    a1fc:	br	x17

000000000000a200 <xmlReadFile@plt>:
    a200:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a204:	ldr	x17, [x16, #224]
    a208:	add	x16, x16, #0xe0
    a20c:	br	x17

000000000000a210 <noop_styled_ostream_create@plt>:
    a210:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a214:	ldr	x17, [x16, #232]
    a218:	add	x16, x16, #0xe8
    a21c:	br	x17

000000000000a220 <__sigsetjmp@plt>:
    a220:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a224:	ldr	x17, [x16, #240]
    a228:	add	x16, x16, #0xf0
    a22c:	br	x17

000000000000a230 <xmlHasProp@plt>:
    a230:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a234:	ldr	x17, [x16, #248]
    a238:	add	x16, x16, #0xf8
    a23c:	br	x17

000000000000a240 <message_alloc@plt>:
    a240:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a244:	ldr	x17, [x16, #256]
    a248:	add	x16, x16, #0x100
    a24c:	br	x17

000000000000a250 <u16_mbtouc_aux@plt>:
    a250:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a254:	ldr	x17, [x16, #264]
    a258:	add	x16, x16, #0x108
    a25c:	br	x17

000000000000a260 <__cxa_finalize@plt>:
    a260:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a264:	ldr	x17, [x16, #272]
    a268:	add	x16, x16, #0x110
    a26c:	br	x17

000000000000a270 <xmlHasNsProp@plt>:
    a270:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a274:	ldr	x17, [x16, #280]
    a278:	add	x16, x16, #0x118
    a27c:	br	x17

000000000000a280 <sprintf@plt>:
    a280:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a284:	ldr	x17, [x16, #288]
    a288:	add	x16, x16, #0x120
    a28c:	br	x17

000000000000a290 <opendir@plt>:
    a290:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a294:	ldr	x17, [x16, #296]
    a298:	add	x16, x16, #0x128
    a29c:	br	x17

000000000000a2a0 <string_list_append@plt>:
    a2a0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a2a4:	ldr	x17, [x16, #304]
    a2a8:	add	x16, x16, #0x130
    a2ac:	br	x17

000000000000a2b0 <xmlFreeDoc@plt>:
    a2b0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a2b4:	ldr	x17, [x16, #312]
    a2b8:	add	x16, x16, #0x138
    a2bc:	br	x17

000000000000a2c0 <is_ascii_message_list@plt>:
    a2c0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a2c4:	ldr	x17, [x16, #320]
    a2c8:	add	x16, x16, #0x140
    a2cc:	br	x17

000000000000a2d0 <xmlGetLastError@plt>:
    a2d0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a2d4:	ldr	x17, [x16, #328]
    a2d8:	add	x16, x16, #0x148
    a2dc:	br	x17

000000000000a2e0 <is_ascii_string_list@plt>:
    a2e0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a2e4:	ldr	x17, [x16, #336]
    a2e8:	add	x16, x16, #0x150
    a2ec:	br	x17

000000000000a2f0 <qsort@plt>:
    a2f0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a2f4:	ldr	x17, [x16, #344]
    a2f8:	add	x16, x16, #0x158
    a2fc:	br	x17

000000000000a300 <hash_insert_entry@plt>:
    a300:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a304:	ldr	x17, [x16, #352]
    a308:	add	x16, x16, #0x160
    a30c:	br	x17

000000000000a310 <ostream_free@plt>:
    a310:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a314:	ldr	x17, [x16, #360]
    a318:	add	x16, x16, #0x168
    a31c:	br	x17

000000000000a320 <read_catalog_stream@plt>:
    a320:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a324:	ldr	x17, [x16, #368]
    a328:	add	x16, x16, #0x170
    a32c:	br	x17

000000000000a330 <iconv_message_list@plt>:
    a330:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a334:	ldr	x17, [x16, #376]
    a338:	add	x16, x16, #0x178
    a33c:	br	x17

000000000000a340 <parse_plural_expression@plt>:
    a340:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a344:	ldr	x17, [x16, #384]
    a348:	add	x16, x16, #0x180
    a34c:	br	x17

000000000000a350 <string_list_alloc@plt>:
    a350:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a354:	ldr	x17, [x16, #392]
    a358:	add	x16, x16, #0x188
    a35c:	br	x17

000000000000a360 <stpcpy@plt>:
    a360:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a364:	ldr	x17, [x16, #400]
    a368:	add	x16, x16, #0x190
    a36c:	br	x17

000000000000a370 <message_list_copy@plt>:
    a370:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a374:	ldr	x17, [x16, #408]
    a378:	add	x16, x16, #0x198
    a37c:	br	x17

000000000000a380 <fileno@plt>:
    a380:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a384:	ldr	x17, [x16, #416]
    a388:	add	x16, x16, #0x1a0
    a38c:	br	x17

000000000000a390 <open_catalog_file@plt>:
    a390:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a394:	ldr	x17, [x16, #424]
    a398:	add	x16, x16, #0x1a8
    a39c:	br	x17

000000000000a3a0 <localtime@plt>:
    a3a0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a3a4:	ldr	x17, [x16, #432]
    a3a8:	add	x16, x16, #0x1b0
    a3ac:	br	x17

000000000000a3b0 <iconveh_close@plt>:
    a3b0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a3b4:	ldr	x17, [x16, #440]
    a3b8:	add	x16, x16, #0x1b8
    a3bc:	br	x17

000000000000a3c0 <fclose@plt>:
    a3c0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a3c4:	ldr	x17, [x16, #448]
    a3c8:	add	x16, x16, #0x1c0
    a3cc:	br	x17

000000000000a3d0 <po_callback_comment_filepos@plt>:
    a3d0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a3d4:	ldr	x17, [x16, #456]
    a3d8:	add	x16, x16, #0x1c8
    a3dc:	br	x17

000000000000a3e0 <fopen@plt>:
    a3e0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a3e4:	ldr	x17, [x16, #464]
    a3e8:	add	x16, x16, #0x1d0
    a3ec:	br	x17

000000000000a3f0 <malloc@plt>:
    a3f0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a3f4:	ldr	x17, [x16, #472]
    a3f8:	add	x16, x16, #0x1d8
    a3fc:	br	x17

000000000000a400 <message_list_remove_if_not@plt>:
    a400:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a404:	ldr	x17, [x16, #480]
    a408:	add	x16, x16, #0x1e0
    a40c:	br	x17

000000000000a410 <c_isalnum@plt>:
    a410:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a414:	ldr	x17, [x16, #488]
    a418:	add	x16, x16, #0x1e8
    a41c:	br	x17

000000000000a420 <xmlFreeNs@plt>:
    a420:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a424:	ldr	x17, [x16, #496]
    a428:	add	x16, x16, #0x1f0
    a42c:	br	x17

000000000000a430 <styled_ostream_end_use_class@plt>:
    a430:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a434:	ldr	x17, [x16, #504]
    a438:	add	x16, x16, #0x1f8
    a43c:	br	x17

000000000000a440 <open@plt>:
    a440:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a444:	ldr	x17, [x16, #512]
    a448:	add	x16, x16, #0x200
    a44c:	br	x17

000000000000a450 <is_ascii_message@plt>:
    a450:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a454:	ldr	x17, [x16, #520]
    a458:	add	x16, x16, #0x208
    a45c:	br	x17

000000000000a460 <xrealloc@plt>:
    a460:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a464:	ldr	x17, [x16, #528]
    a468:	add	x16, x16, #0x210
    a46c:	br	x17

000000000000a470 <po_lex_pass_obsolete_entries@plt>:
    a470:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a474:	ldr	x17, [x16, #536]
    a478:	add	x16, x16, #0x218
    a47c:	br	x17

000000000000a480 <xmlGetProp@plt>:
    a480:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a484:	ldr	x17, [x16, #544]
    a488:	add	x16, x16, #0x220
    a48c:	br	x17

000000000000a490 <sigemptyset@plt>:
    a490:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a494:	ldr	x17, [x16, #552]
    a498:	add	x16, x16, #0x228
    a49c:	br	x17

000000000000a4a0 <xmlCheckVersion@plt>:
    a4a0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a4a4:	ldr	x17, [x16, #560]
    a4a8:	add	x16, x16, #0x230
    a4ac:	br	x17

000000000000a4b0 <lex_start@plt>:
    a4b0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a4b4:	ldr	x17, [x16, #568]
    a4b8:	add	x16, x16, #0x238
    a4bc:	br	x17

000000000000a4c0 <significant_format_p@plt>:
    a4c0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a4c4:	ldr	x17, [x16, #576]
    a4c8:	add	x16, x16, #0x240
    a4cc:	br	x17

000000000000a4d0 <strncmp@plt>:
    a4d0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a4d4:	ldr	x17, [x16, #584]
    a4d8:	add	x16, x16, #0x248
    a4dc:	br	x17

000000000000a4e0 <po_gram_lex@plt>:
    a4e0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a4e4:	ldr	x17, [x16, #592]
    a4e8:	add	x16, x16, #0x250
    a4ec:	br	x17

000000000000a4f0 <xmemdup0@plt>:
    a4f0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a4f4:	ldr	x17, [x16, #600]
    a4f8:	add	x16, x16, #0x258
    a4fc:	br	x17

000000000000a500 <po_gram_error_at_line@plt>:
    a500:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a504:	ldr	x17, [x16, #608]
    a508:	add	x16, x16, #0x260
    a50c:	br	x17

000000000000a510 <strcat@plt>:
    a510:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a514:	ldr	x17, [x16, #616]
    a518:	add	x16, x16, #0x268
    a51c:	br	x17

000000000000a520 <xmlTextWriterEndElement@plt>:
    a520:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a524:	ldr	x17, [x16, #624]
    a528:	add	x16, x16, #0x270
    a52c:	br	x17

000000000000a530 <po_callback_message@plt>:
    a530:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a534:	ldr	x17, [x16, #632]
    a538:	add	x16, x16, #0x278
    a53c:	br	x17

000000000000a540 <hash_destroy@plt>:
    a540:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a544:	ldr	x17, [x16, #640]
    a548:	add	x16, x16, #0x280
    a54c:	br	x17

000000000000a550 <po_parse_comment_special@plt>:
    a550:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a554:	ldr	x17, [x16, #648]
    a558:	add	x16, x16, #0x288
    a55c:	br	x17

000000000000a560 <memset@plt>:
    a560:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a564:	ldr	x17, [x16, #656]
    a568:	add	x16, x16, #0x290
    a56c:	br	x17

000000000000a570 <xmlAddNextSibling@plt>:
    a570:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a574:	ldr	x17, [x16, #664]
    a578:	add	x16, x16, #0x298
    a57c:	br	x17

000000000000a580 <string_list_concat_destroy@plt>:
    a580:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a584:	ldr	x17, [x16, #672]
    a588:	add	x16, x16, #0x2a0
    a58c:	br	x17

000000000000a590 <xmalloc@plt>:
    a590:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a594:	ldr	x17, [x16, #680]
    a598:	add	x16, x16, #0x2a8
    a59c:	br	x17

000000000000a5a0 <xstrdup@plt>:
    a5a0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a5a4:	ldr	x17, [x16, #688]
    a5a8:	add	x16, x16, #0x2b0
    a5ac:	br	x17

000000000000a5b0 <string_list_concat@plt>:
    a5b0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a5b4:	ldr	x17, [x16, #696]
    a5b8:	add	x16, x16, #0x2b8
    a5bc:	br	x17

000000000000a5c0 <hash_find_entry@plt>:
    a5c0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a5c4:	ldr	x17, [x16, #704]
    a5c8:	add	x16, x16, #0x2c0
    a5cc:	br	x17

000000000000a5d0 <fread_file@plt>:
    a5d0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a5d4:	ldr	x17, [x16, #712]
    a5d8:	add	x16, x16, #0x2c8
    a5dc:	br	x17

000000000000a5e0 <xmlNodeGetContent@plt>:
    a5e0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a5e4:	ldr	x17, [x16, #720]
    a5e8:	add	x16, x16, #0x2d0
    a5ec:	br	x17

000000000000a5f0 <message_print_comment@plt>:
    a5f0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a5f4:	ldr	x17, [x16, #728]
    a5f8:	add	x16, x16, #0x2d8
    a5fc:	br	x17

000000000000a600 <message_equal@plt>:
    a600:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a604:	ldr	x17, [x16, #736]
    a608:	add	x16, x16, #0x2e0
    a60c:	br	x17

000000000000a610 <string_list_free@plt>:
    a610:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a614:	ldr	x17, [x16, #744]
    a618:	add	x16, x16, #0x2e8
    a61c:	br	x17

000000000000a620 <locating_rule_list_destroy@plt>:
    a620:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a624:	ldr	x17, [x16, #752]
    a628:	add	x16, x16, #0x2f0
    a62c:	br	x17

000000000000a630 <xmlSetProp@plt>:
    a630:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a634:	ldr	x17, [x16, #760]
    a638:	add	x16, x16, #0x2f8
    a63c:	br	x17

000000000000a640 <catalog_reader_alloc@plt>:
    a640:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a644:	ldr	x17, [x16, #768]
    a648:	add	x16, x16, #0x300
    a64c:	br	x17

000000000000a650 <bcmp@plt>:
    a650:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a654:	ldr	x17, [x16, #776]
    a658:	add	x16, x16, #0x308
    a65c:	br	x17

000000000000a660 <xmlOutputBufferGetContent@plt>:
    a660:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a664:	ldr	x17, [x16, #784]
    a668:	add	x16, x16, #0x310
    a66c:	br	x17

000000000000a670 <gmtime@plt>:
    a670:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a674:	ldr	x17, [x16, #792]
    a678:	add	x16, x16, #0x318
    a67c:	br	x17

000000000000a680 <readdir@plt>:
    a680:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a684:	ldr	x17, [x16, #800]
    a688:	add	x16, x16, #0x320
    a68c:	br	x17

000000000000a690 <xmlXPathEvalExpression@plt>:
    a690:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a694:	ldr	x17, [x16, #808]
    a698:	add	x16, x16, #0x328
    a69c:	br	x17

000000000000a6a0 <uc_is_space@plt>:
    a6a0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a6a4:	ldr	x17, [x16, #816]
    a6a8:	add	x16, x16, #0x330
    a6ac:	br	x17

000000000000a6b0 <message_copy@plt>:
    a6b0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a6b4:	ldr	x17, [x16, #824]
    a6b8:	add	x16, x16, #0x338
    a6bc:	br	x17

000000000000a6c0 <string_list_join@plt>:
    a6c0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a6c4:	ldr	x17, [x16, #832]
    a6c8:	add	x16, x16, #0x340
    a6cc:	br	x17

000000000000a6d0 <string_list_append_unique@plt>:
    a6d0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a6d4:	ldr	x17, [x16, #840]
    a6d8:	add	x16, x16, #0x348
    a6dc:	br	x17

000000000000a6e0 <getc@plt>:
    a6e0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a6e4:	ldr	x17, [x16, #848]
    a6e8:	add	x16, x16, #0x350
    a6ec:	br	x17

000000000000a6f0 <xmlReadFd@plt>:
    a6f0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a6f4:	ldr	x17, [x16, #856]
    a6f8:	add	x16, x16, #0x358
    a6fc:	br	x17

000000000000a700 <closedir@plt>:
    a700:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a704:	ldr	x17, [x16, #864]
    a708:	add	x16, x16, #0x360
    a70c:	br	x17

000000000000a710 <getc_unlocked@plt>:
    a710:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a714:	ldr	x17, [x16, #872]
    a718:	add	x16, x16, #0x368
    a71c:	br	x17

000000000000a720 <strerror@plt>:
    a720:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a724:	ldr	x17, [x16, #880]
    a728:	add	x16, x16, #0x370
    a72c:	br	x17

000000000000a730 <close@plt>:
    a730:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a734:	ldr	x17, [x16, #888]
    a738:	add	x16, x16, #0x378
    a73c:	br	x17

000000000000a740 <sigaction@plt>:
    a740:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a744:	ldr	x17, [x16, #896]
    a748:	add	x16, x16, #0x380
    a74c:	br	x17

000000000000a750 <strrchr@plt>:
    a750:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a754:	ldr	x17, [x16, #904]
    a758:	add	x16, x16, #0x388
    a75c:	br	x17

000000000000a760 <msgdomain_list_alloc@plt>:
    a760:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a764:	ldr	x17, [x16, #912]
    a768:	add	x16, x16, #0x390
    a76c:	br	x17

000000000000a770 <string_list_init@plt>:
    a770:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a774:	ldr	x17, [x16, #920]
    a778:	add	x16, x16, #0x398
    a77c:	br	x17

000000000000a780 <xalloc_die@plt>:
    a780:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a784:	ldr	x17, [x16, #928]
    a788:	add	x16, x16, #0x3a0
    a78c:	br	x17

000000000000a790 <atol@plt>:
    a790:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a794:	ldr	x17, [x16, #936]
    a798:	add	x16, x16, #0x3a8
    a79c:	br	x17

000000000000a7a0 <__gmon_start__@plt>:
    a7a0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a7a4:	ldr	x17, [x16, #944]
    a7a8:	add	x16, x16, #0x3b0
    a7ac:	br	x17

000000000000a7b0 <msgdomain_list_append@plt>:
    a7b0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a7b4:	ldr	x17, [x16, #952]
    a7b8:	add	x16, x16, #0x3b8
    a7bc:	br	x17

000000000000a7c0 <check_msgid_msgstr_format@plt>:
    a7c0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a7c4:	ldr	x17, [x16, #960]
    a7c8:	add	x16, x16, #0x3c0
    a7cc:	br	x17

000000000000a7d0 <is_ascii_string@plt>:
    a7d0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a7d4:	ldr	x17, [x16, #968]
    a7d8:	add	x16, x16, #0x3c8
    a7dc:	br	x17

000000000000a7e0 <abort@plt>:
    a7e0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a7e4:	ldr	x17, [x16, #976]
    a7e8:	add	x16, x16, #0x3d0
    a7ec:	br	x17

000000000000a7f0 <xmlXPathFreeObject@plt>:
    a7f0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a7f4:	ldr	x17, [x16, #984]
    a7f8:	add	x16, x16, #0x3d8
    a7fc:	br	x17

000000000000a800 <catalog_reader_free@plt>:
    a800:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a804:	ldr	x17, [x16, #992]
    a808:	add	x16, x16, #0x3e0
    a80c:	br	x17

000000000000a810 <xmlDocFormatDump@plt>:
    a810:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a814:	ldr	x17, [x16, #1000]
    a818:	add	x16, x16, #0x3e8
    a81c:	br	x17

000000000000a820 <u8_mbtouc_aux@plt>:
    a820:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a824:	ldr	x17, [x16, #1008]
    a828:	add	x16, x16, #0x3f0
    a82c:	br	x17

000000000000a830 <styled_ostream_create@plt>:
    a830:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a834:	ldr	x17, [x16, #1016]
    a838:	add	x16, x16, #0x3f8
    a83c:	br	x17

000000000000a840 <po_lex_charset_init@plt>:
    a840:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a844:	ldr	x17, [x16, #1024]
    a848:	add	x16, x16, #0x400
    a84c:	br	x17

000000000000a850 <feof@plt>:
    a850:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a854:	ldr	x17, [x16, #1032]
    a858:	add	x16, x16, #0x408
    a85c:	br	x17

000000000000a860 <fwriteerror@plt>:
    a860:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a864:	ldr	x17, [x16, #1040]
    a868:	add	x16, x16, #0x410
    a86c:	br	x17

000000000000a870 <message_list_msgids_changed@plt>:
    a870:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a874:	ldr	x17, [x16, #1048]
    a878:	add	x16, x16, #0x418
    a87c:	br	x17

000000000000a880 <ostream_write_mem@plt>:
    a880:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a884:	ldr	x17, [x16, #1056]
    a888:	add	x16, x16, #0x420
    a88c:	br	x17

000000000000a890 <uc_width@plt>:
    a890:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a894:	ldr	x17, [x16, #1064]
    a898:	add	x16, x16, #0x428
    a89c:	br	x17

000000000000a8a0 <stpncpy@plt>:
    a8a0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a8a4:	ldr	x17, [x16, #1072]
    a8a8:	add	x16, x16, #0x430
    a8ac:	br	x17

000000000000a8b0 <free_plural_expression@plt>:
    a8b0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a8b4:	ldr	x17, [x16, #1080]
    a8b8:	add	x16, x16, #0x438
    a8bc:	br	x17

000000000000a8c0 <xmlXPathNewContext@plt>:
    a8c0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a8c4:	ldr	x17, [x16, #1088]
    a8c8:	add	x16, x16, #0x440
    a8cc:	br	x17

000000000000a8d0 <strcmp@plt>:
    a8d0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a8d4:	ldr	x17, [x16, #1096]
    a8d8:	add	x16, x16, #0x448
    a8dc:	br	x17

000000000000a8e0 <message_comment_dot_append@plt>:
    a8e0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a8e4:	ldr	x17, [x16, #1104]
    a8e8:	add	x16, x16, #0x450
    a8ec:	br	x17

000000000000a8f0 <basename@plt>:
    a8f0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a8f4:	ldr	x17, [x16, #1112]
    a8f8:	add	x16, x16, #0x458
    a8fc:	br	x17

000000000000a900 <iconv@plt>:
    a900:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a904:	ldr	x17, [x16, #1120]
    a908:	add	x16, x16, #0x460
    a90c:	br	x17

000000000000a910 <xmmalloca@plt>:
    a910:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a914:	ldr	x17, [x16, #1128]
    a918:	add	x16, x16, #0x468
    a91c:	br	x17

000000000000a920 <__ctype_b_loc@plt>:
    a920:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a924:	ldr	x17, [x16, #1136]
    a928:	add	x16, x16, #0x470
    a92c:	br	x17

000000000000a930 <fuzzy_search_goal_function@plt>:
    a930:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a934:	ldr	x17, [x16, #1144]
    a938:	add	x16, x16, #0x478
    a93c:	br	x17

000000000000a940 <xmem_cd_iconv@plt>:
    a940:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a944:	ldr	x17, [x16, #1152]
    a948:	add	x16, x16, #0x480
    a94c:	br	x17

000000000000a950 <multiline_error@plt>:
    a950:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a954:	ldr	x17, [x16, #1160]
    a958:	add	x16, x16, #0x488
    a95c:	br	x17

000000000000a960 <message_free@plt>:
    a960:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a964:	ldr	x17, [x16, #1168]
    a968:	add	x16, x16, #0x490
    a96c:	br	x17

000000000000a970 <message_list_free@plt>:
    a970:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a974:	ldr	x17, [x16, #1176]
    a978:	add	x16, x16, #0x498
    a97c:	br	x17

000000000000a980 <its_translate_rule_eval@plt>:
    a980:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a984:	ldr	x17, [x16, #1184]
    a988:	add	x16, x16, #0x4a0
    a98c:	br	x17

000000000000a990 <iconveh_open@plt>:
    a990:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a994:	ldr	x17, [x16, #1192]
    a998:	add	x16, x16, #0x4a8
    a99c:	br	x17

000000000000a9a0 <getline@plt>:
    a9a0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a9a4:	ldr	x17, [x16, #1200]
    a9a8:	add	x16, x16, #0x4b0
    a9ac:	br	x17

000000000000a9b0 <make_range_description_string@plt>:
    a9b0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a9b4:	ldr	x17, [x16, #1208]
    a9b8:	add	x16, x16, #0x4b8
    a9bc:	br	x17

000000000000a9c0 <xmlNewTextWriter@plt>:
    a9c0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a9c4:	ldr	x17, [x16, #1216]
    a9c8:	add	x16, x16, #0x4c0
    a9cc:	br	x17

000000000000a9d0 <message_comment_filepos@plt>:
    a9d0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a9d4:	ldr	x17, [x16, #1224]
    a9d8:	add	x16, x16, #0x4c8
    a9dc:	br	x17

000000000000a9e0 <po_callback_comment@plt>:
    a9e0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a9e4:	ldr	x17, [x16, #1232]
    a9e8:	add	x16, x16, #0x4d0
    a9ec:	br	x17

000000000000a9f0 <xmem_cd_iconveh@plt>:
    a9f0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    a9f4:	ldr	x17, [x16, #1240]
    a9f8:	add	x16, x16, #0x4d8
    a9fc:	br	x17

000000000000aa00 <free@plt>:
    aa00:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    aa04:	ldr	x17, [x16, #1248]
    aa08:	add	x16, x16, #0x4e0
    aa0c:	br	x17

000000000000aa10 <ungetc@plt>:
    aa10:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    aa14:	ldr	x17, [x16, #1256]
    aa18:	add	x16, x16, #0x4e8
    aa1c:	br	x17

000000000000aa20 <xasprintf@plt>:
    aa20:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    aa24:	ldr	x17, [x16, #1264]
    aa28:	add	x16, x16, #0x4f0
    aa2c:	br	x17

000000000000aa30 <possible_format_p@plt>:
    aa30:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    aa34:	ldr	x17, [x16, #1272]
    aa38:	add	x16, x16, #0x4f8
    aa3c:	br	x17

000000000000aa40 <vasprintf@plt>:
    aa40:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    aa44:	ldr	x17, [x16, #1280]
    aa48:	add	x16, x16, #0x500
    aa4c:	br	x17

000000000000aa50 <siglongjmp@plt>:
    aa50:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    aa54:	ldr	x17, [x16, #1288]
    aa58:	add	x16, x16, #0x508
    aa5c:	br	x17

000000000000aa60 <strspn@plt>:
    aa60:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    aa64:	ldr	x17, [x16, #1296]
    aa68:	add	x16, x16, #0x510
    aa6c:	br	x17

000000000000aa70 <dir_list_append@plt>:
    aa70:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    aa74:	ldr	x17, [x16, #1304]
    aa78:	add	x16, x16, #0x518
    aa7c:	br	x17

000000000000aa80 <strchr@plt>:
    aa80:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    aa84:	ldr	x17, [x16, #1312]
    aa88:	add	x16, x16, #0x520
    aa8c:	br	x17

000000000000aa90 <message_print_comment_flags@plt>:
    aa90:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    aa94:	ldr	x17, [x16, #1320]
    aa98:	add	x16, x16, #0x528
    aa9c:	br	x17

000000000000aaa0 <ostream_write_str@plt>:
    aaa0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    aaa4:	ldr	x17, [x16, #1328]
    aaa8:	add	x16, x16, #0x530
    aaac:	br	x17

000000000000aab0 <u8_mbtoucr@plt>:
    aab0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    aab4:	ldr	x17, [x16, #1336]
    aab8:	add	x16, x16, #0x538
    aabc:	br	x17

000000000000aac0 <xmlTextWriterStartElement@plt>:
    aac0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    aac4:	ldr	x17, [x16, #1344]
    aac8:	add	x16, x16, #0x540
    aacc:	br	x17

000000000000aad0 <po_gram_error@plt>:
    aad0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    aad4:	ldr	x17, [x16, #1352]
    aad8:	add	x16, x16, #0x548
    aadc:	br	x17

000000000000aae0 <check_msgid_msgstr_format_i@plt>:
    aae0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    aae4:	ldr	x17, [x16, #1360]
    aae8:	add	x16, x16, #0x550
    aaec:	br	x17

000000000000aaf0 <multiline_warning@plt>:
    aaf0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    aaf4:	ldr	x17, [x16, #1368]
    aaf8:	add	x16, x16, #0x558
    aafc:	br	x17

000000000000ab00 <xmlGetLineNo@plt>:
    ab00:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ab04:	ldr	x17, [x16, #1376]
    ab08:	add	x16, x16, #0x560
    ab0c:	br	x17

000000000000ab10 <fnmatch@plt>:
    ab10:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ab14:	ldr	x17, [x16, #1384]
    ab18:	add	x16, x16, #0x568
    ab1c:	br	x17

000000000000ab20 <check_message@plt>:
    ab20:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ab24:	ldr	x17, [x16, #1392]
    ab28:	add	x16, x16, #0x570
    ab2c:	br	x17

000000000000ab30 <fstrcmp_bounded@plt>:
    ab30:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ab34:	ldr	x17, [x16, #1400]
    ab38:	add	x16, x16, #0x578
    ab3c:	br	x17

000000000000ab40 <dcngettext@plt>:
    ab40:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ab44:	ldr	x17, [x16, #1408]
    ab48:	add	x16, x16, #0x580
    ab4c:	br	x17

000000000000ab50 <styled_ostream_begin_use_class@plt>:
    ab50:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ab54:	ldr	x17, [x16, #1416]
    ab58:	add	x16, x16, #0x588
    ab5c:	br	x17

000000000000ab60 <ulc_width_linebreaks@plt>:
    ab60:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ab64:	ldr	x17, [x16, #1424]
    ab68:	add	x16, x16, #0x590
    ab6c:	br	x17

000000000000ab70 <strcpy@plt>:
    ab70:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ab74:	ldr	x17, [x16, #1432]
    ab78:	add	x16, x16, #0x598
    ab7c:	br	x17

000000000000ab80 <iconv_open@plt>:
    ab80:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ab84:	ldr	x17, [x16, #1440]
    ab88:	add	x16, x16, #0x5a0
    ab8c:	br	x17

000000000000ab90 <xmlXPathSetContextNode@plt>:
    ab90:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ab94:	ldr	x17, [x16, #1448]
    ab98:	add	x16, x16, #0x5a8
    ab9c:	br	x17

000000000000aba0 <xmlReadMemory@plt>:
    aba0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    aba4:	ldr	x17, [x16, #1456]
    aba8:	add	x16, x16, #0x5b0
    abac:	br	x17

000000000000abb0 <xmlGetNsList@plt>:
    abb0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    abb4:	ldr	x17, [x16, #1464]
    abb8:	add	x16, x16, #0x5b8
    abbc:	br	x17

000000000000abc0 <c_iscntrl@plt>:
    abc0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    abc4:	ldr	x17, [x16, #1472]
    abc8:	add	x16, x16, #0x5c0
    abcc:	br	x17

000000000000abd0 <po_lex_charset_close@plt>:
    abd0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    abd4:	ldr	x17, [x16, #1480]
    abd8:	add	x16, x16, #0x5c8
    abdc:	br	x17

000000000000abe0 <memchr@plt>:
    abe0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    abe4:	ldr	x17, [x16, #1488]
    abe8:	add	x16, x16, #0x5d0
    abec:	br	x17

000000000000abf0 <xmlTextWriterWriteAttribute@plt>:
    abf0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    abf4:	ldr	x17, [x16, #1496]
    abf8:	add	x16, x16, #0x5d8
    abfc:	br	x17

000000000000ac00 <isatty@plt>:
    ac00:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ac04:	ldr	x17, [x16, #1504]
    ac08:	add	x16, x16, #0x5e0
    ac0c:	br	x17

000000000000ac10 <gcd@plt>:
    ac10:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ac14:	ldr	x17, [x16, #1512]
    ac18:	add	x16, x16, #0x5e8
    ac1c:	br	x17

000000000000ac20 <dir_list_nth@plt>:
    ac20:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ac24:	ldr	x17, [x16, #1520]
    ac28:	add	x16, x16, #0x5f0
    ac2c:	br	x17

000000000000ac30 <string_list_equal@plt>:
    ac30:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ac34:	ldr	x17, [x16, #1528]
    ac38:	add	x16, x16, #0x5f8
    ac3c:	br	x17

000000000000ac40 <its_extension_escape_rule_eval@plt>:
    ac40:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ac44:	ldr	x17, [x16, #1536]
    ac48:	add	x16, x16, #0x600
    ac4c:	br	x17

000000000000ac50 <po_callback_domain@plt>:
    ac50:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ac54:	ldr	x17, [x16, #1544]
    ac58:	add	x16, x16, #0x608
    ac5c:	br	x17

000000000000ac60 <trim2@plt>:
    ac60:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ac64:	ldr	x17, [x16, #1552]
    ac68:	add	x16, x16, #0x610
    ac6c:	br	x17

000000000000ac70 <install_sigfpe_handler@plt>:
    ac70:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ac74:	ldr	x17, [x16, #1560]
    ac78:	add	x16, x16, #0x618
    ac7c:	br	x17

000000000000ac80 <xmlNewNode@plt>:
    ac80:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ac84:	ldr	x17, [x16, #1568]
    ac88:	add	x16, x16, #0x620
    ac8c:	br	x17

000000000000ac90 <xmlNodeAddContent@plt>:
    ac90:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ac94:	ldr	x17, [x16, #1576]
    ac98:	add	x16, x16, #0x628
    ac9c:	br	x17

000000000000aca0 <strchrnul@plt>:
    aca0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    aca4:	ldr	x17, [x16, #1584]
    aca8:	add	x16, x16, #0x630
    acac:	br	x17

000000000000acb0 <strstr@plt>:
    acb0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    acb4:	ldr	x17, [x16, #1592]
    acb8:	add	x16, x16, #0x638
    acbc:	br	x17

000000000000acc0 <po_callback_comment_special@plt>:
    acc0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    acc4:	ldr	x17, [x16, #1600]
    acc8:	add	x16, x16, #0x640
    accc:	br	x17

000000000000acd0 <dcgettext@plt>:
    acd0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    acd4:	ldr	x17, [x16, #1608]
    acd8:	add	x16, x16, #0x648
    acdc:	br	x17

000000000000ace0 <c_strcasecmp@plt>:
    ace0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ace4:	ldr	x17, [x16, #1616]
    ace8:	add	x16, x16, #0x650
    acec:	br	x17

000000000000acf0 <po_lex_pass_comments@plt>:
    acf0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    acf4:	ldr	x17, [x16, #1624]
    acf8:	add	x16, x16, #0x658
    acfc:	br	x17

000000000000ad00 <xmlXPathFreeContext@plt>:
    ad00:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ad04:	ldr	x17, [x16, #1632]
    ad08:	add	x16, x16, #0x660
    ad0c:	br	x17

000000000000ad10 <sentence_end@plt>:
    ad10:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ad14:	ldr	x17, [x16, #1640]
    ad18:	add	x16, x16, #0x668
    ad1c:	br	x17

000000000000ad20 <c_strstr@plt>:
    ad20:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ad24:	ldr	x17, [x16, #1648]
    ad28:	add	x16, x16, #0x670
    ad2c:	br	x17

000000000000ad30 <plural_eval@plt>:
    ad30:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ad34:	ldr	x17, [x16, #1656]
    ad38:	add	x16, x16, #0x678
    ad3c:	br	x17

000000000000ad40 <its_preserve_space_rule_eval@plt>:
    ad40:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ad44:	ldr	x17, [x16, #1664]
    ad48:	add	x16, x16, #0x680
    ad4c:	br	x17

000000000000ad50 <po_callback_comment_dot@plt>:
    ad50:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ad54:	ldr	x17, [x16, #1672]
    ad58:	add	x16, x16, #0x688
    ad5c:	br	x17

000000000000ad60 <message_print_comment_dot@plt>:
    ad60:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ad64:	ldr	x17, [x16, #1680]
    ad68:	add	x16, x16, #0x690
    ad6c:	br	x17

000000000000ad70 <freea@plt>:
    ad70:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ad74:	ldr	x17, [x16, #1688]
    ad78:	add	x16, x16, #0x698
    ad7c:	br	x17

000000000000ad80 <msgdomain_list_sublist@plt>:
    ad80:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ad84:	ldr	x17, [x16, #1696]
    ad88:	add	x16, x16, #0x6a0
    ad8c:	br	x17

000000000000ad90 <xmemdup@plt>:
    ad90:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ad94:	ldr	x17, [x16, #1704]
    ad98:	add	x16, x16, #0x6a8
    ad9c:	br	x17

000000000000ada0 <strcspn@plt>:
    ada0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ada4:	ldr	x17, [x16, #1712]
    ada8:	add	x16, x16, #0x6b0
    adac:	br	x17

000000000000adb0 <xmlStrEqual@plt>:
    adb0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    adb4:	ldr	x17, [x16, #1720]
    adb8:	add	x16, x16, #0x6b8
    adbc:	br	x17

000000000000adc0 <xmlDocGetRootElement@plt>:
    adc0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    adc4:	ldr	x17, [x16, #1728]
    adc8:	add	x16, x16, #0x6c0
    adcc:	br	x17

000000000000add0 <__assert_fail@plt>:
    add0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    add4:	ldr	x17, [x16, #1736]
    add8:	add	x16, x16, #0x6c8
    addc:	br	x17

000000000000ade0 <__errno_location@plt>:
    ade0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ade4:	ldr	x17, [x16, #1744]
    ade8:	add	x16, x16, #0x6d0
    adec:	br	x17

000000000000adf0 <po_callback_comment_dispatcher@plt>:
    adf0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    adf4:	ldr	x17, [x16, #1752]
    adf8:	add	x16, x16, #0x6d8
    adfc:	br	x17

000000000000ae00 <catalog_reader_parse@plt>:
    ae00:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ae04:	ldr	x17, [x16, #1760]
    ae08:	add	x16, x16, #0x6e0
    ae0c:	br	x17

000000000000ae10 <message_list_equal@plt>:
    ae10:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ae14:	ldr	x17, [x16, #1768]
    ae18:	add	x16, x16, #0x6e8
    ae1c:	br	x17

000000000000ae20 <getenv@plt>:
    ae20:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ae24:	ldr	x17, [x16, #1776]
    ae28:	add	x16, x16, #0x6f0
    ae2c:	br	x17

000000000000ae30 <locale_charset@plt>:
    ae30:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ae34:	ldr	x17, [x16, #1784]
    ae38:	add	x16, x16, #0x6f8
    ae3c:	br	x17

000000000000ae40 <message_list_search@plt>:
    ae40:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ae44:	ldr	x17, [x16, #1792]
    ae48:	add	x16, x16, #0x700
    ae4c:	br	x17

000000000000ae50 <xconcatenated_filename@plt>:
    ae50:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ae54:	ldr	x17, [x16, #1800]
    ae58:	add	x16, x16, #0x708
    ae5c:	br	x17

000000000000ae60 <u8_uctomb_aux@plt>:
    ae60:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ae64:	ldr	x17, [x16, #1808]
    ae68:	add	x16, x16, #0x710
    ae6c:	br	x17

000000000000ae70 <message_list_append@plt>:
    ae70:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ae74:	ldr	x17, [x16, #1816]
    ae78:	add	x16, x16, #0x718
    ae7c:	br	x17

000000000000ae80 <xmlXPathEval@plt>:
    ae80:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ae84:	ldr	x17, [x16, #1824]
    ae88:	add	x16, x16, #0x720
    ae8c:	br	x17

000000000000ae90 <style_file_prepare@plt>:
    ae90:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    ae94:	ldr	x17, [x16, #1832]
    ae98:	add	x16, x16, #0x728
    ae9c:	br	x17

000000000000aea0 <xcalloc@plt>:
    aea0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    aea4:	ldr	x17, [x16, #1840]
    aea8:	add	x16, x16, #0x730
    aeac:	br	x17

000000000000aeb0 <make_format_description_string@plt>:
    aeb0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    aeb4:	ldr	x17, [x16, #1848]
    aeb8:	add	x16, x16, #0x738
    aebc:	br	x17

000000000000aec0 <xmlGetNsProp@plt>:
    aec0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    aec4:	ldr	x17, [x16, #1856]
    aec8:	add	x16, x16, #0x740
    aecc:	br	x17

000000000000aed0 <error_at_line@plt>:
    aed0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    aed4:	ldr	x17, [x16, #1864]
    aed8:	add	x16, x16, #0x748
    aedc:	br	x17

000000000000aee0 <po_charset_ascii_compatible@plt>:
    aee0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    aee4:	ldr	x17, [x16, #1872]
    aee8:	add	x16, x16, #0x750
    aeec:	br	x17

000000000000aef0 <fprintf@plt>:
    aef0:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    aef4:	ldr	x17, [x16, #1880]
    aef8:	add	x16, x16, #0x758
    aefc:	br	x17

000000000000af00 <message_list_alloc@plt>:
    af00:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    af04:	ldr	x17, [x16, #1888]
    af08:	add	x16, x16, #0x760
    af0c:	br	x17

000000000000af10 <lex_end@plt>:
    af10:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    af14:	ldr	x17, [x16, #1896]
    af18:	add	x16, x16, #0x768
    af1c:	br	x17

000000000000af20 <html_styled_ostream_create@plt>:
    af20:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    af24:	ldr	x17, [x16, #1904]
    af28:	add	x16, x16, #0x770
    af2c:	br	x17

000000000000af30 <ferror@plt>:
    af30:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    af34:	ldr	x17, [x16, #1912]
    af38:	add	x16, x16, #0x778
    af3c:	br	x17

000000000000af40 <xmlCopyNamespace@plt>:
    af40:	adrp	x16, 4d000 <memcpy@GLIBC_2.17>
    af44:	ldr	x17, [x16, #1920]
    af48:	add	x16, x16, #0x780
    af4c:	br	x17

Disassembly of section .text:

000000000000af50 <possible_format_p@@Base-0xd4>:
    af50:	adrp	x0, 4c000 <plural_table_size@@Base+0x12c00>
    af54:	ldr	x0, [x0, #3904]
    af58:	cbz	x0, af60 <xmlCopyNamespace@plt+0x20>
    af5c:	b	a7a0 <__gmon_start__@plt>
    af60:	ret
    af64:	nop
    af68:	adrp	x0, 4e000 <formatstring_gfc_internal@@Base+0x10>
    af6c:	add	x0, x0, #0x220
    af70:	adrp	x1, 4e000 <formatstring_gfc_internal@@Base+0x10>
    af74:	add	x1, x1, #0x220
    af78:	cmp	x1, x0
    af7c:	b.eq	af94 <xmlCopyNamespace@plt+0x54>  // b.none
    af80:	adrp	x1, 4c000 <plural_table_size@@Base+0x12c00>
    af84:	ldr	x1, [x1, #3720]
    af88:	cbz	x1, af94 <xmlCopyNamespace@plt+0x54>
    af8c:	mov	x16, x1
    af90:	br	x16
    af94:	ret
    af98:	adrp	x0, 4e000 <formatstring_gfc_internal@@Base+0x10>
    af9c:	add	x0, x0, #0x220
    afa0:	adrp	x1, 4e000 <formatstring_gfc_internal@@Base+0x10>
    afa4:	add	x1, x1, #0x220
    afa8:	sub	x1, x1, x0
    afac:	lsr	x2, x1, #63
    afb0:	add	x1, x2, x1, asr #3
    afb4:	cmp	xzr, x1, asr #1
    afb8:	asr	x1, x1, #1
    afbc:	b.eq	afd4 <xmlCopyNamespace@plt+0x94>  // b.none
    afc0:	adrp	x2, 4c000 <plural_table_size@@Base+0x12c00>
    afc4:	ldr	x2, [x2, #4040]
    afc8:	cbz	x2, afd4 <xmlCopyNamespace@plt+0x94>
    afcc:	mov	x16, x2
    afd0:	br	x16
    afd4:	ret
    afd8:	stp	x29, x30, [sp, #-32]!
    afdc:	mov	x29, sp
    afe0:	str	x19, [sp, #16]
    afe4:	adrp	x19, 4e000 <formatstring_gfc_internal@@Base+0x10>
    afe8:	ldrb	w0, [x19, #544]
    afec:	cbnz	w0, b014 <xmlCopyNamespace@plt+0xd4>
    aff0:	adrp	x0, 4c000 <plural_table_size@@Base+0x12c00>
    aff4:	ldr	x0, [x0, #3744]
    aff8:	cbz	x0, b008 <xmlCopyNamespace@plt+0xc8>
    affc:	adrp	x0, 4d000 <memcpy@GLIBC_2.17>
    b000:	ldr	x0, [x0, #1928]
    b004:	bl	a260 <__cxa_finalize@plt>
    b008:	bl	af68 <xmlCopyNamespace@plt+0x28>
    b00c:	mov	w0, #0x1                   	// #1
    b010:	strb	w0, [x19, #544]
    b014:	ldr	x19, [sp, #16]
    b018:	ldp	x29, x30, [sp], #32
    b01c:	ret
    b020:	b	af98 <xmlCopyNamespace@plt+0x58>

000000000000b024 <possible_format_p@@Base>:
    b024:	sub	w8, w0, #0x3
    b028:	cmp	w8, #0x2
    b02c:	cset	w8, cc  // cc = lo, ul, last
    b030:	cmp	w0, #0x1
    b034:	cset	w9, eq  // eq = none
    b038:	orr	w0, w9, w8
    b03c:	ret

000000000000b040 <message_alloc@@Base>:
    b040:	stp	x29, x30, [sp, #-80]!
    b044:	str	x25, [sp, #16]
    b048:	mov	x25, x0
    b04c:	mov	w0, #0x120                 	// #288
    b050:	stp	x24, x23, [sp, #32]
    b054:	stp	x22, x21, [sp, #48]
    b058:	stp	x20, x19, [sp, #64]
    b05c:	mov	x29, sp
    b060:	mov	x19, x5
    b064:	mov	x21, x4
    b068:	mov	x22, x3
    b06c:	mov	x23, x2
    b070:	mov	x24, x1
    b074:	bl	a590 <xmalloc@plt>
    b078:	mov	x20, x0
    b07c:	stp	x25, x24, [x0]
    b080:	cbz	x23, b090 <message_alloc@@Base+0x50>
    b084:	mov	x0, x23
    b088:	bl	a5a0 <xstrdup@plt>
    b08c:	b	b094 <message_alloc@@Base+0x54>
    b090:	mov	x0, xzr
    b094:	stp	x0, x22, [x20, #16]
    b098:	str	x21, [x20, #32]
    b09c:	ldr	q1, [x19]
    b0a0:	movi	v0.2d, #0xffffffffffffffff
    b0a4:	stur	d0, [x20, #204]
    b0a8:	movi	v0.2d, #0x0
    b0ac:	stur	q0, [x20, #92]
    b0b0:	stur	q0, [x20, #108]
    b0b4:	stur	q0, [x20, #124]
    b0b8:	stur	q0, [x20, #140]
    b0bc:	stur	q0, [x20, #156]
    b0c0:	stur	q0, [x20, #172]
    b0c4:	stur	q0, [x20, #188]
    b0c8:	stur	q0, [x20, #56]
    b0cc:	stur	q0, [x20, #72]
    b0d0:	strb	wzr, [x20, #88]
    b0d4:	str	wzr, [x20, #260]
    b0d8:	stur	q0, [x20, #212]
    b0dc:	stur	q0, [x20, #228]
    b0e0:	stur	q1, [x20, #40]
    b0e4:	stur	q0, [x20, #241]
    b0e8:	mov	x0, x20
    b0ec:	ldp	x20, x19, [sp, #64]
    b0f0:	ldp	x22, x21, [sp, #48]
    b0f4:	ldp	x24, x23, [sp, #32]
    b0f8:	ldr	x25, [sp, #16]
    b0fc:	ldp	x29, x30, [sp], #80
    b100:	ret

000000000000b104 <message_free@@Base>:
    b104:	stp	x29, x30, [sp, #-48]!
    b108:	stp	x20, x19, [sp, #32]
    b10c:	mov	x19, x0
    b110:	ldr	x0, [x0, #8]
    b114:	str	x21, [sp, #16]
    b118:	mov	x29, sp
    b11c:	bl	aa00 <free@plt>
    b120:	ldr	x0, [x19, #16]
    b124:	cbz	x0, b12c <message_free@@Base+0x28>
    b128:	bl	aa00 <free@plt>
    b12c:	ldr	x0, [x19, #24]
    b130:	bl	aa00 <free@plt>
    b134:	ldr	x0, [x19, #56]
    b138:	cbz	x0, b140 <message_free@@Base+0x3c>
    b13c:	bl	a610 <string_list_free@plt>
    b140:	ldr	x0, [x19, #64]
    b144:	cbz	x0, b14c <message_free@@Base+0x48>
    b148:	bl	a610 <string_list_free@plt>
    b14c:	ldp	x8, x0, [x19, #72]
    b150:	cbz	x8, b178 <message_free@@Base+0x74>
    b154:	mov	x20, xzr
    b158:	mov	x21, xzr
    b15c:	ldr	x0, [x0, x20]
    b160:	bl	aa00 <free@plt>
    b164:	ldp	x8, x0, [x19, #72]
    b168:	add	x21, x21, #0x1
    b16c:	add	x20, x20, #0x10
    b170:	cmp	x21, x8
    b174:	b.cc	b15c <message_free@@Base+0x58>  // b.lo, b.ul, b.last
    b178:	cbz	x0, b180 <message_free@@Base+0x7c>
    b17c:	bl	aa00 <free@plt>
    b180:	ldr	x0, [x19, #232]
    b184:	cbz	x0, b18c <message_free@@Base+0x88>
    b188:	bl	aa00 <free@plt>
    b18c:	ldr	x0, [x19, #240]
    b190:	cbz	x0, b198 <message_free@@Base+0x94>
    b194:	bl	aa00 <free@plt>
    b198:	ldr	x0, [x19, #248]
    b19c:	cbz	x0, b1a4 <message_free@@Base+0xa0>
    b1a0:	bl	aa00 <free@plt>
    b1a4:	mov	x0, x19
    b1a8:	ldp	x20, x19, [sp, #32]
    b1ac:	ldr	x21, [sp, #16]
    b1b0:	ldp	x29, x30, [sp], #48
    b1b4:	b	aa00 <free@plt>

000000000000b1b8 <message_comment_append@@Base>:
    b1b8:	stp	x29, x30, [sp, #-32]!
    b1bc:	stp	x20, x19, [sp, #16]
    b1c0:	mov	x20, x0
    b1c4:	ldr	x0, [x0, #56]
    b1c8:	mov	x19, x1
    b1cc:	mov	x29, sp
    b1d0:	cbnz	x0, b1dc <message_comment_append@@Base+0x24>
    b1d4:	bl	a350 <string_list_alloc@plt>
    b1d8:	str	x0, [x20, #56]
    b1dc:	mov	x1, x19
    b1e0:	ldp	x20, x19, [sp, #16]
    b1e4:	ldp	x29, x30, [sp], #32
    b1e8:	b	a2a0 <string_list_append@plt>

000000000000b1ec <message_comment_dot_append@@Base>:
    b1ec:	stp	x29, x30, [sp, #-32]!
    b1f0:	stp	x20, x19, [sp, #16]
    b1f4:	mov	x20, x0
    b1f8:	ldr	x0, [x0, #64]
    b1fc:	mov	x19, x1
    b200:	mov	x29, sp
    b204:	cbnz	x0, b210 <message_comment_dot_append@@Base+0x24>
    b208:	bl	a350 <string_list_alloc@plt>
    b20c:	str	x0, [x20, #64]
    b210:	mov	x1, x19
    b214:	ldp	x20, x19, [sp, #16]
    b218:	ldp	x29, x30, [sp], #32
    b21c:	b	a2a0 <string_list_append@plt>

000000000000b220 <message_comment_filepos@@Base>:
    b220:	stp	x29, x30, [sp, #-80]!
    b224:	stp	x24, x23, [sp, #32]
    b228:	stp	x22, x21, [sp, #48]
    b22c:	stp	x20, x19, [sp, #64]
    b230:	ldr	x23, [x0, #72]
    b234:	mov	x19, x2
    b238:	mov	x21, x0
    b23c:	mov	x20, x1
    b240:	str	x25, [sp, #16]
    b244:	mov	x29, sp
    b248:	cbz	x23, b290 <message_comment_filepos@@Base+0x70>
    b24c:	ldr	x22, [x21, #80]
    b250:	mov	x24, xzr
    b254:	add	x25, x22, #0x8
    b258:	ldur	x0, [x25, #-8]
    b25c:	mov	x1, x20
    b260:	bl	a8d0 <strcmp@plt>
    b264:	cbnz	w0, b274 <message_comment_filepos@@Base+0x54>
    b268:	ldr	x8, [x25]
    b26c:	cmp	x8, x19
    b270:	b.eq	b2c0 <message_comment_filepos@@Base+0xa0>  // b.none
    b274:	add	x24, x24, #0x1
    b278:	cmp	x24, x23
    b27c:	add	x25, x25, #0x10
    b280:	b.cc	b258 <message_comment_filepos@@Base+0x38>  // b.lo, b.ul, b.last
    b284:	lsl	x8, x23, #4
    b288:	add	x1, x8, #0x10
    b28c:	b	b298 <message_comment_filepos@@Base+0x78>
    b290:	ldr	x22, [x21, #80]
    b294:	mov	w1, #0x10                  	// #16
    b298:	mov	x0, x22
    b29c:	bl	a460 <xrealloc@plt>
    b2a0:	ldr	x23, [x21, #72]
    b2a4:	mov	x22, x0
    b2a8:	add	x8, x23, #0x1
    b2ac:	stp	x8, x0, [x21, #72]
    b2b0:	mov	x0, x20
    b2b4:	bl	a5a0 <xstrdup@plt>
    b2b8:	add	x8, x22, x23, lsl #4
    b2bc:	stp	x0, x19, [x8]
    b2c0:	ldp	x20, x19, [sp, #64]
    b2c4:	ldp	x22, x21, [sp, #48]
    b2c8:	ldp	x24, x23, [sp, #32]
    b2cc:	ldr	x25, [sp, #16]
    b2d0:	ldp	x29, x30, [sp], #80
    b2d4:	ret

000000000000b2d8 <message_copy@@Base>:
    b2d8:	stp	x29, x30, [sp, #-48]!
    b2dc:	stp	x22, x21, [sp, #16]
    b2e0:	stp	x20, x19, [sp, #32]
    b2e4:	mov	x19, x0
    b2e8:	ldr	x0, [x0]
    b2ec:	mov	x29, sp
    b2f0:	cbz	x0, b300 <message_copy@@Base+0x28>
    b2f4:	bl	a5a0 <xstrdup@plt>
    b2f8:	mov	x20, x0
    b2fc:	b	b304 <message_copy@@Base+0x2c>
    b300:	mov	x20, xzr
    b304:	ldr	x0, [x19, #8]
    b308:	bl	a5a0 <xstrdup@plt>
    b30c:	ldp	x2, x3, [x19, #16]
    b310:	ldr	x4, [x19, #32]
    b314:	mov	x1, x0
    b318:	add	x5, x19, #0x28
    b31c:	mov	x0, x20
    b320:	bl	a240 <message_alloc@plt>
    b324:	ldr	x8, [x19, #56]
    b328:	mov	x20, x0
    b32c:	cbz	x8, b360 <message_copy@@Base+0x88>
    b330:	ldr	x9, [x8, #8]
    b334:	cbz	x9, b360 <message_copy@@Base+0x88>
    b338:	mov	x21, xzr
    b33c:	ldr	x8, [x8]
    b340:	mov	x0, x20
    b344:	ldr	x1, [x8, x21, lsl #3]
    b348:	bl	a0e0 <message_comment_append@plt>
    b34c:	ldr	x8, [x19, #56]
    b350:	add	x21, x21, #0x1
    b354:	ldr	x9, [x8, #8]
    b358:	cmp	x21, x9
    b35c:	b.cc	b33c <message_copy@@Base+0x64>  // b.lo, b.ul, b.last
    b360:	ldr	x8, [x19, #64]
    b364:	cbz	x8, b398 <message_copy@@Base+0xc0>
    b368:	ldr	x9, [x8, #8]
    b36c:	cbz	x9, b398 <message_copy@@Base+0xc0>
    b370:	mov	x21, xzr
    b374:	ldr	x8, [x8]
    b378:	mov	x0, x20
    b37c:	ldr	x1, [x8, x21, lsl #3]
    b380:	bl	a8e0 <message_comment_dot_append@plt>
    b384:	ldr	x8, [x19, #64]
    b388:	add	x21, x21, #0x1
    b38c:	ldr	x9, [x8, #8]
    b390:	cmp	x21, x9
    b394:	b.cc	b374 <message_copy@@Base+0x9c>  // b.lo, b.ul, b.last
    b398:	ldrb	w8, [x19, #88]
    b39c:	strb	w8, [x20, #88]
    b3a0:	mov	w8, #0x5c                  	// #92
    b3a4:	ldr	w9, [x19, x8]
    b3a8:	str	w9, [x20, x8]
    b3ac:	add	x8, x8, #0x4
    b3b0:	cmp	x8, #0xcc
    b3b4:	b.ne	b3a4 <message_copy@@Base+0xcc>  // b.any
    b3b8:	ldur	x8, [x19, #204]
    b3bc:	stur	x8, [x20, #204]
    b3c0:	ldr	w8, [x19, #212]
    b3c4:	str	w8, [x20, #212]
    b3c8:	mov	w8, #0xd8                  	// #216
    b3cc:	ldr	w9, [x19, x8]
    b3d0:	str	w9, [x20, x8]
    b3d4:	add	x8, x8, #0x4
    b3d8:	cmp	x8, #0xe8
    b3dc:	b.ne	b3cc <message_copy@@Base+0xf4>  // b.any
    b3e0:	ldr	x8, [x19, #72]
    b3e4:	cbz	x8, b418 <message_copy@@Base+0x140>
    b3e8:	mov	x21, xzr
    b3ec:	mov	x22, xzr
    b3f0:	ldr	x8, [x19, #80]
    b3f4:	mov	x0, x20
    b3f8:	add	x8, x8, x21
    b3fc:	ldp	x1, x2, [x8]
    b400:	bl	a9d0 <message_comment_filepos@plt>
    b404:	ldr	x8, [x19, #72]
    b408:	add	x22, x22, #0x1
    b40c:	add	x21, x21, #0x10
    b410:	cmp	x22, x8
    b414:	b.cc	b3f0 <message_copy@@Base+0x118>  // b.lo, b.ul, b.last
    b418:	ldr	x0, [x19, #232]
    b41c:	cbz	x0, b424 <message_copy@@Base+0x14c>
    b420:	bl	a5a0 <xstrdup@plt>
    b424:	str	x0, [x20, #232]
    b428:	ldr	x0, [x19, #240]
    b42c:	cbz	x0, b434 <message_copy@@Base+0x15c>
    b430:	bl	a5a0 <xstrdup@plt>
    b434:	str	x0, [x20, #240]
    b438:	ldr	x0, [x19, #248]
    b43c:	cbz	x0, b444 <message_copy@@Base+0x16c>
    b440:	bl	a5a0 <xstrdup@plt>
    b444:	str	x0, [x20, #248]
    b448:	mov	x0, x20
    b44c:	ldp	x20, x19, [sp, #32]
    b450:	ldp	x22, x21, [sp, #16]
    b454:	ldp	x29, x30, [sp], #48
    b458:	ret

000000000000b45c <message_list_alloc@@Base>:
    b45c:	stp	x29, x30, [sp, #-48]!
    b460:	str	x21, [sp, #16]
    b464:	stp	x20, x19, [sp, #32]
    b468:	mov	w20, w0
    b46c:	and	w21, w0, #0x1
    b470:	mov	w0, #0x98                  	// #152
    b474:	mov	x29, sp
    b478:	bl	a590 <xmalloc@plt>
    b47c:	mov	x19, x0
    b480:	stp	xzr, xzr, [x0, #8]
    b484:	str	xzr, [x0]
    b488:	strb	w21, [x0, #24]
    b48c:	tbz	w20, #0, b49c <message_list_alloc@@Base+0x40>
    b490:	add	x0, x19, #0x20
    b494:	mov	w1, #0xa                   	// #10
    b498:	bl	a1e0 <hash_init@plt>
    b49c:	mov	x0, x19
    b4a0:	ldp	x20, x19, [sp, #32]
    b4a4:	ldr	x21, [sp, #16]
    b4a8:	ldp	x29, x30, [sp], #48
    b4ac:	ret

000000000000b4b0 <message_list_free@@Base>:
    b4b0:	stp	x29, x30, [sp, #-32]!
    b4b4:	stp	x20, x19, [sp, #16]
    b4b8:	mov	x19, x0
    b4bc:	mov	x29, sp
    b4c0:	cbnz	w1, b4ec <message_list_free@@Base+0x3c>
    b4c4:	ldr	x8, [x19, #8]
    b4c8:	cbz	x8, b4ec <message_list_free@@Base+0x3c>
    b4cc:	mov	x20, xzr
    b4d0:	ldr	x8, [x19]
    b4d4:	ldr	x0, [x8, x20, lsl #3]
    b4d8:	bl	a960 <message_free@plt>
    b4dc:	ldr	x8, [x19, #8]
    b4e0:	add	x20, x20, #0x1
    b4e4:	cmp	x20, x8
    b4e8:	b.cc	b4d0 <message_list_free@@Base+0x20>  // b.lo, b.ul, b.last
    b4ec:	ldr	x0, [x19]
    b4f0:	cbz	x0, b4f8 <message_list_free@@Base+0x48>
    b4f4:	bl	aa00 <free@plt>
    b4f8:	ldrb	w8, [x19, #24]
    b4fc:	cbz	w8, b508 <message_list_free@@Base+0x58>
    b500:	add	x0, x19, #0x20
    b504:	bl	a540 <hash_destroy@plt>
    b508:	mov	x0, x19
    b50c:	ldp	x20, x19, [sp, #16]
    b510:	ldp	x29, x30, [sp], #32
    b514:	b	aa00 <free@plt>

000000000000b518 <message_list_append@@Base>:
    b518:	stp	x29, x30, [sp, #-32]!
    b51c:	stp	x20, x19, [sp, #16]
    b520:	ldp	x8, x9, [x0, #8]
    b524:	mov	x19, x0
    b528:	mov	x20, x1
    b52c:	mov	x29, sp
    b530:	cmp	x8, x9
    b534:	b.cs	b540 <message_list_append@@Base+0x28>  // b.hs, b.nlast
    b538:	ldr	x0, [x19]
    b53c:	b	b560 <message_list_append@@Base+0x48>
    b540:	ldr	x0, [x19]
    b544:	lsl	x8, x9, #1
    b548:	add	x8, x8, #0x4
    b54c:	lsl	x1, x8, #3
    b550:	str	x8, [x19, #16]
    b554:	bl	a460 <xrealloc@plt>
    b558:	ldr	x8, [x19, #8]
    b55c:	str	x0, [x19]
    b560:	add	x9, x8, #0x1
    b564:	str	x9, [x19, #8]
    b568:	str	x20, [x0, x8, lsl #3]
    b56c:	ldrb	w8, [x19, #24]
    b570:	cbz	w8, b584 <message_list_append@@Base+0x6c>
    b574:	add	x0, x19, #0x20
    b578:	mov	x1, x20
    b57c:	bl	b594 <message_list_append@@Base+0x7c>
    b580:	cbnz	w0, b590 <message_list_append@@Base+0x78>
    b584:	ldp	x20, x19, [sp, #16]
    b588:	ldp	x29, x30, [sp], #32
    b58c:	ret
    b590:	bl	a7e0 <abort@plt>
    b594:	stp	x29, x30, [sp, #-80]!
    b598:	stp	x24, x23, [sp, #32]
    b59c:	stp	x22, x21, [sp, #48]
    b5a0:	stp	x20, x19, [sp, #64]
    b5a4:	ldr	x24, [x1]
    b5a8:	mov	x19, x1
    b5ac:	mov	x20, x0
    b5b0:	str	x25, [sp, #16]
    b5b4:	mov	x29, sp
    b5b8:	cbz	x24, b608 <message_list_append@@Base+0xf0>
    b5bc:	mov	x0, x24
    b5c0:	bl	a0d0 <strlen@plt>
    b5c4:	ldr	x8, [x19, #8]
    b5c8:	mov	x25, x0
    b5cc:	mov	x0, x8
    b5d0:	bl	a0d0 <strlen@plt>
    b5d4:	add	x23, x0, #0x1
    b5d8:	add	x8, x23, x25
    b5dc:	add	x21, x8, #0x1
    b5e0:	cmp	x21, #0xfa0
    b5e4:	b.hi	b620 <message_list_append@@Base+0x108>  // b.pmore
    b5e8:	add	x8, x8, #0x2f
    b5ec:	mov	x9, sp
    b5f0:	and	x8, x8, #0xfffffffffffffff0
    b5f4:	sub	x8, x9, x8
    b5f8:	mov	sp, x8
    b5fc:	add	x8, x8, #0x1f
    b600:	and	x22, x8, #0xffffffffffffffe0
    b604:	b	b630 <message_list_append@@Base+0x118>
    b608:	ldr	x22, [x19, #8]
    b60c:	mov	x0, x22
    b610:	bl	a0d0 <strlen@plt>
    b614:	mov	x23, xzr
    b618:	add	x21, x0, #0x1
    b61c:	b	b65c <message_list_append@@Base+0x144>
    b620:	mov	x0, x21
    b624:	bl	a910 <xmmalloca@plt>
    b628:	ldr	x24, [x19]
    b62c:	mov	x22, x0
    b630:	mov	x0, x22
    b634:	mov	x1, x24
    b638:	mov	x2, x25
    b63c:	bl	a040 <memcpy@plt>
    b640:	add	x0, x22, x25
    b644:	mov	w8, #0x4                   	// #4
    b648:	strb	w8, [x0], #1
    b64c:	ldr	x1, [x19, #8]
    b650:	mov	x2, x23
    b654:	bl	a040 <memcpy@plt>
    b658:	mov	x23, x22
    b65c:	mov	x0, x20
    b660:	mov	x1, x22
    b664:	mov	x2, x21
    b668:	mov	x3, x19
    b66c:	bl	a300 <hash_insert_entry@plt>
    b670:	ldr	x8, [x19]
    b674:	cmp	x0, #0x0
    b678:	cset	w19, eq  // eq = none
    b67c:	cbz	x8, b688 <message_list_append@@Base+0x170>
    b680:	mov	x0, x23
    b684:	bl	ad70 <freea@plt>
    b688:	mov	w0, w19
    b68c:	mov	sp, x29
    b690:	ldp	x20, x19, [sp, #64]
    b694:	ldp	x22, x21, [sp, #48]
    b698:	ldp	x24, x23, [sp, #32]
    b69c:	ldr	x25, [sp, #16]
    b6a0:	ldp	x29, x30, [sp], #80
    b6a4:	ret

000000000000b6a8 <message_list_prepend@@Base>:
    b6a8:	stp	x29, x30, [sp, #-32]!
    b6ac:	stp	x20, x19, [sp, #16]
    b6b0:	ldp	x8, x9, [x0, #8]
    b6b4:	mov	x19, x0
    b6b8:	mov	x20, x1
    b6bc:	mov	x29, sp
    b6c0:	cmp	x8, x9
    b6c4:	b.cs	b6d4 <message_list_prepend@@Base+0x2c>  // b.hs, b.nlast
    b6c8:	ldr	x0, [x19]
    b6cc:	cbnz	x8, b6f8 <message_list_prepend@@Base+0x50>
    b6d0:	b	b714 <message_list_prepend@@Base+0x6c>
    b6d4:	ldr	x0, [x19]
    b6d8:	lsl	x8, x9, #1
    b6dc:	add	x8, x8, #0x4
    b6e0:	lsl	x1, x8, #3
    b6e4:	str	x8, [x19, #16]
    b6e8:	bl	a460 <xrealloc@plt>
    b6ec:	ldr	x8, [x19, #8]
    b6f0:	str	x0, [x19]
    b6f4:	cbz	x8, b714 <message_list_prepend@@Base+0x6c>
    b6f8:	mov	x9, x8
    b6fc:	add	x10, x0, x9, lsl #3
    b700:	ldur	x11, [x10, #-8]
    b704:	subs	x9, x9, #0x1
    b708:	str	x11, [x10]
    b70c:	ldr	x0, [x19]
    b710:	b.ne	b6fc <message_list_prepend@@Base+0x54>  // b.any
    b714:	str	x20, [x0]
    b718:	ldrb	w9, [x19, #24]
    b71c:	add	x8, x8, #0x1
    b720:	str	x8, [x19, #8]
    b724:	cbz	w9, b738 <message_list_prepend@@Base+0x90>
    b728:	add	x0, x19, #0x20
    b72c:	mov	x1, x20
    b730:	bl	b594 <message_list_append@@Base+0x7c>
    b734:	cbnz	w0, b744 <message_list_prepend@@Base+0x9c>
    b738:	ldp	x20, x19, [sp, #16]
    b73c:	ldp	x29, x30, [sp], #32
    b740:	ret
    b744:	bl	a7e0 <abort@plt>

000000000000b748 <message_list_insert_at@@Base>:
    b748:	stp	x29, x30, [sp, #-48]!
    b74c:	str	x21, [sp, #16]
    b750:	stp	x20, x19, [sp, #32]
    b754:	ldp	x8, x9, [x0, #8]
    b758:	mov	x19, x2
    b75c:	mov	x20, x0
    b760:	mov	x21, x1
    b764:	cmp	x8, x9
    b768:	mov	x29, sp
    b76c:	b.cs	b778 <message_list_insert_at@@Base+0x30>  // b.hs, b.nlast
    b770:	ldr	x0, [x20]
    b774:	b	b798 <message_list_insert_at@@Base+0x50>
    b778:	ldr	x0, [x20]
    b77c:	lsl	x8, x9, #1
    b780:	add	x8, x8, #0x4
    b784:	lsl	x1, x8, #3
    b788:	str	x8, [x20, #16]
    b78c:	bl	a460 <xrealloc@plt>
    b790:	ldr	x8, [x20, #8]
    b794:	str	x0, [x20]
    b798:	cmp	x8, x21
    b79c:	b.ls	b7c4 <message_list_insert_at@@Base+0x7c>  // b.plast
    b7a0:	mov	x9, x8
    b7a4:	add	x10, x0, x9, lsl #3
    b7a8:	ldur	x11, [x10, #-8]
    b7ac:	sub	x9, x9, #0x1
    b7b0:	cmp	x9, x21
    b7b4:	str	x11, [x10]
    b7b8:	ldr	x0, [x20]
    b7bc:	b.hi	b7a4 <message_list_insert_at@@Base+0x5c>  // b.pmore
    b7c0:	b	b7c8 <message_list_insert_at@@Base+0x80>
    b7c4:	mov	x21, x8
    b7c8:	str	x19, [x0, x21, lsl #3]
    b7cc:	ldrb	w9, [x20, #24]
    b7d0:	add	x8, x8, #0x1
    b7d4:	str	x8, [x20, #8]
    b7d8:	cbz	w9, b7ec <message_list_insert_at@@Base+0xa4>
    b7dc:	add	x0, x20, #0x20
    b7e0:	mov	x1, x19
    b7e4:	bl	b594 <message_list_append@@Base+0x7c>
    b7e8:	cbnz	w0, b7fc <message_list_insert_at@@Base+0xb4>
    b7ec:	ldp	x20, x19, [sp, #32]
    b7f0:	ldr	x21, [sp, #16]
    b7f4:	ldp	x29, x30, [sp], #48
    b7f8:	ret
    b7fc:	bl	a7e0 <abort@plt>

000000000000b800 <message_list_remove_if_not@@Base>:
    b800:	stp	x29, x30, [sp, #-48]!
    b804:	stp	x22, x21, [sp, #16]
    b808:	stp	x20, x19, [sp, #32]
    b80c:	ldr	x8, [x0, #8]
    b810:	mov	x19, x0
    b814:	mov	x29, sp
    b818:	cbz	x8, b87c <message_list_remove_if_not@@Base+0x7c>
    b81c:	mov	x20, x1
    b820:	mov	x22, xzr
    b824:	mov	x21, xzr
    b828:	ldr	x8, [x19]
    b82c:	ldr	x0, [x8, x22, lsl #3]
    b830:	blr	x20
    b834:	tbz	w0, #0, b84c <message_list_remove_if_not@@Base+0x4c>
    b838:	ldr	x8, [x19]
    b83c:	add	x10, x21, #0x1
    b840:	ldr	x9, [x8, x22, lsl #3]
    b844:	str	x9, [x8, x21, lsl #3]
    b848:	mov	x21, x10
    b84c:	ldr	x8, [x19, #8]
    b850:	add	x22, x22, #0x1
    b854:	cmp	x22, x8
    b858:	b.cc	b828 <message_list_remove_if_not@@Base+0x28>  // b.lo, b.ul, b.last
    b85c:	cmp	x21, x8
    b860:	b.cs	b880 <message_list_remove_if_not@@Base+0x80>  // b.hs, b.nlast
    b864:	ldrb	w8, [x19, #24]
    b868:	cbz	w8, b880 <message_list_remove_if_not@@Base+0x80>
    b86c:	add	x0, x19, #0x20
    b870:	bl	a540 <hash_destroy@plt>
    b874:	strb	wzr, [x19, #24]
    b878:	b	b880 <message_list_remove_if_not@@Base+0x80>
    b87c:	mov	x21, xzr
    b880:	str	x21, [x19, #8]
    b884:	ldp	x20, x19, [sp, #32]
    b888:	ldp	x22, x21, [sp, #16]
    b88c:	ldp	x29, x30, [sp], #48
    b890:	ret

000000000000b894 <message_list_msgids_changed@@Base>:
    b894:	stp	x29, x30, [sp, #-48]!
    b898:	stp	x20, x19, [sp, #32]
    b89c:	ldrb	w8, [x0, #24]
    b8a0:	str	x21, [sp, #16]
    b8a4:	mov	x29, sp
    b8a8:	cbz	w8, b8fc <message_list_msgids_changed@@Base+0x68>
    b8ac:	mov	x20, x0
    b8b0:	ldr	x21, [x20, #32]!
    b8b4:	mov	x19, x0
    b8b8:	mov	x0, x20
    b8bc:	bl	a540 <hash_destroy@plt>
    b8c0:	mov	x0, x20
    b8c4:	mov	x1, x21
    b8c8:	bl	a1e0 <hash_init@plt>
    b8cc:	ldur	x8, [x20, #-24]
    b8d0:	cbz	x8, b8fc <message_list_msgids_changed@@Base+0x68>
    b8d4:	mov	x21, xzr
    b8d8:	ldr	x8, [x19]
    b8dc:	mov	x0, x20
    b8e0:	ldr	x1, [x8, x21, lsl #3]
    b8e4:	bl	b594 <message_list_append@@Base+0x7c>
    b8e8:	cbnz	w0, b910 <message_list_msgids_changed@@Base+0x7c>
    b8ec:	ldr	x8, [x19, #8]
    b8f0:	add	x21, x21, #0x1
    b8f4:	cmp	x21, x8
    b8f8:	b.cc	b8d8 <message_list_msgids_changed@@Base+0x44>  // b.lo, b.ul, b.last
    b8fc:	mov	w0, wzr
    b900:	ldp	x20, x19, [sp, #32]
    b904:	ldr	x21, [sp, #16]
    b908:	ldp	x29, x30, [sp], #48
    b90c:	ret
    b910:	mov	x0, x20
    b914:	bl	a540 <hash_destroy@plt>
    b918:	mov	w0, #0x1                   	// #1
    b91c:	strb	wzr, [x19, #24]
    b920:	b	b900 <message_list_msgids_changed@@Base+0x6c>

000000000000b924 <message_list_copy@@Base>:
    b924:	stp	x29, x30, [sp, #-48]!
    b928:	stp	x22, x21, [sp, #16]
    b92c:	stp	x20, x19, [sp, #32]
    b930:	mov	x19, x0
    b934:	ldrb	w0, [x0, #24]
    b938:	mov	x29, sp
    b93c:	mov	w20, w1
    b940:	bl	af00 <message_list_alloc@plt>
    b944:	ldr	x8, [x19, #8]
    b948:	mov	x21, x0
    b94c:	cbz	x8, b984 <message_list_copy@@Base+0x60>
    b950:	mov	x22, xzr
    b954:	ldr	x8, [x19]
    b958:	ldr	x1, [x8, x22, lsl #3]
    b95c:	cbnz	w20, b96c <message_list_copy@@Base+0x48>
    b960:	mov	x0, x1
    b964:	bl	a6b0 <message_copy@plt>
    b968:	mov	x1, x0
    b96c:	mov	x0, x21
    b970:	bl	ae70 <message_list_append@plt>
    b974:	ldr	x8, [x19, #8]
    b978:	add	x22, x22, #0x1
    b97c:	cmp	x22, x8
    b980:	b.cc	b954 <message_list_copy@@Base+0x30>  // b.lo, b.ul, b.last
    b984:	mov	x0, x21
    b988:	ldp	x20, x19, [sp, #32]
    b98c:	ldp	x22, x21, [sp, #16]
    b990:	ldp	x29, x30, [sp], #48
    b994:	ret

000000000000b998 <message_list_search@@Base>:
    b998:	stp	x29, x30, [sp, #-80]!
    b99c:	stp	x24, x23, [sp, #32]
    b9a0:	stp	x22, x21, [sp, #48]
    b9a4:	stp	x20, x19, [sp, #64]
    b9a8:	ldrb	w8, [x0, #24]
    b9ac:	mov	x20, x2
    b9b0:	mov	x21, x0
    b9b4:	mov	x19, x1
    b9b8:	str	x25, [sp, #16]
    b9bc:	mov	x29, sp
    b9c0:	cbz	w8, ba10 <message_list_search@@Base+0x78>
    b9c4:	cbz	x19, ba68 <message_list_search@@Base+0xd0>
    b9c8:	mov	x0, x19
    b9cc:	bl	a0d0 <strlen@plt>
    b9d0:	mov	x24, x0
    b9d4:	mov	x0, x20
    b9d8:	bl	a0d0 <strlen@plt>
    b9dc:	add	x25, x0, #0x1
    b9e0:	add	x8, x25, x24
    b9e4:	add	x22, x8, #0x1
    b9e8:	cmp	x22, #0xfa0
    b9ec:	b.hi	ba7c <message_list_search@@Base+0xe4>  // b.pmore
    b9f0:	add	x8, x8, #0x2f
    b9f4:	mov	x9, sp
    b9f8:	and	x8, x8, #0xfffffffffffffff0
    b9fc:	sub	x8, x9, x8
    ba00:	mov	sp, x8
    ba04:	add	x8, x8, #0x1f
    ba08:	and	x23, x8, #0xffffffffffffffe0
    ba0c:	b	ba88 <message_list_search@@Base+0xf0>
    ba10:	ldr	x22, [x21, #8]
    ba14:	cbz	x22, ba60 <message_list_search@@Base+0xc8>
    ba18:	ldr	x23, [x21]
    ba1c:	mov	x24, xzr
    ba20:	ldr	x21, [x23, x24, lsl #3]
    ba24:	ldr	x1, [x21]
    ba28:	cbz	x19, ba40 <message_list_search@@Base+0xa8>
    ba2c:	cbz	x1, ba54 <message_list_search@@Base+0xbc>
    ba30:	mov	x0, x19
    ba34:	bl	a8d0 <strcmp@plt>
    ba38:	cbnz	w0, ba54 <message_list_search@@Base+0xbc>
    ba3c:	b	ba44 <message_list_search@@Base+0xac>
    ba40:	cbnz	x1, ba54 <message_list_search@@Base+0xbc>
    ba44:	ldr	x1, [x21, #8]
    ba48:	mov	x0, x20
    ba4c:	bl	a8d0 <strcmp@plt>
    ba50:	cbz	w0, bae4 <message_list_search@@Base+0x14c>
    ba54:	add	x24, x24, #0x1
    ba58:	cmp	x24, x22
    ba5c:	b.cc	ba20 <message_list_search@@Base+0x88>  // b.lo, b.ul, b.last
    ba60:	mov	x21, xzr
    ba64:	b	bae4 <message_list_search@@Base+0x14c>
    ba68:	mov	x0, x20
    ba6c:	bl	a0d0 <strlen@plt>
    ba70:	mov	x23, xzr
    ba74:	add	x22, x0, #0x1
    ba78:	b	bab4 <message_list_search@@Base+0x11c>
    ba7c:	mov	x0, x22
    ba80:	bl	a910 <xmmalloca@plt>
    ba84:	mov	x23, x0
    ba88:	mov	x0, x23
    ba8c:	mov	x1, x19
    ba90:	mov	x2, x24
    ba94:	bl	a040 <memcpy@plt>
    ba98:	add	x0, x23, x24
    ba9c:	mov	w8, #0x4                   	// #4
    baa0:	strb	w8, [x0], #1
    baa4:	mov	x1, x20
    baa8:	mov	x2, x25
    baac:	bl	a040 <memcpy@plt>
    bab0:	mov	x20, x23
    bab4:	add	x0, x21, #0x20
    bab8:	add	x3, x29, #0x18
    babc:	mov	x1, x20
    bac0:	mov	x2, x22
    bac4:	bl	a5c0 <hash_find_entry@plt>
    bac8:	mov	w20, w0
    bacc:	cbz	x19, bad8 <message_list_search@@Base+0x140>
    bad0:	mov	x0, x23
    bad4:	bl	ad70 <freea@plt>
    bad8:	ldr	x8, [x29, #24]
    badc:	cmp	w20, #0x0
    bae0:	csel	x21, x8, xzr, eq  // eq = none
    bae4:	mov	x0, x21
    bae8:	mov	sp, x29
    baec:	ldp	x20, x19, [sp, #64]
    baf0:	ldp	x22, x21, [sp, #48]
    baf4:	ldp	x24, x23, [sp, #32]
    baf8:	ldr	x25, [sp, #16]
    bafc:	ldp	x29, x30, [sp], #80
    bb00:	ret

000000000000bb04 <fuzzy_search_goal_function@@Base>:
    bb04:	sub	sp, sp, #0x40
    bb08:	stp	d9, d8, [sp, #16]
    bb0c:	stp	x29, x30, [sp, #32]
    bb10:	stp	x20, x19, [sp, #48]
    bb14:	ldr	x8, [x0]
    bb18:	mov	v8.16b, v0.16b
    bb1c:	mov	x19, x2
    bb20:	mov	x20, x0
    bb24:	add	x29, sp, #0x10
    bb28:	cbz	x8, bb44 <fuzzy_search_goal_function@@Base+0x40>
    bb2c:	fmov	d9, xzr
    bb30:	cbz	x1, bb58 <fuzzy_search_goal_function@@Base+0x54>
    bb34:	mov	x0, x1
    bb38:	mov	x1, x8
    bb3c:	bl	a8d0 <strcmp@plt>
    bb40:	cbnz	w0, bb58 <fuzzy_search_goal_function@@Base+0x54>
    bb44:	adrp	x8, 36000 <its_merge_context_free@@Base+0x1328>
    bb48:	ldr	d0, [x8, #1888]
    bb4c:	adrp	x8, 36000 <its_merge_context_free@@Base+0x1328>
    bb50:	ldr	d9, [x8, #1896]
    bb54:	fadd	d8, d8, d0
    bb58:	ldr	x1, [x20, #8]
    bb5c:	mov	x0, x19
    bb60:	mov	v0.16b, v8.16b
    bb64:	bl	ab30 <fstrcmp_bounded@plt>
    bb68:	str	d0, [sp, #8]
    bb6c:	ldr	d0, [sp, #8]
    bb70:	fadd	d0, d9, d0
    bb74:	str	d0, [sp, #8]
    bb78:	ldr	d0, [sp, #8]
    bb7c:	ldp	x20, x19, [sp, #48]
    bb80:	ldp	x29, x30, [sp, #32]
    bb84:	ldp	d9, d8, [sp, #16]
    bb88:	add	sp, sp, #0x40
    bb8c:	ret

000000000000bb90 <message_list_search_fuzzy@@Base>:
    bb90:	str	d8, [sp, #-80]!
    bb94:	stp	x29, x30, [sp, #16]
    bb98:	stp	x24, x23, [sp, #32]
    bb9c:	stp	x22, x21, [sp, #48]
    bba0:	stp	x20, x19, [sp, #64]
    bba4:	ldr	x8, [x0, #8]
    bba8:	mov	x29, sp
    bbac:	cbz	x8, bc1c <message_list_search_fuzzy@@Base+0x8c>
    bbb0:	adrp	x8, 36000 <its_merge_context_free@@Base+0x1328>
    bbb4:	ldr	d8, [x8, #1904]
    bbb8:	mov	x19, x2
    bbbc:	mov	x20, x0
    bbc0:	mov	x21, x1
    bbc4:	mov	x24, xzr
    bbc8:	mov	x22, xzr
    bbcc:	ldr	x8, [x20]
    bbd0:	ldr	x23, [x8, x24, lsl #3]
    bbd4:	ldr	x8, [x23, #24]
    bbd8:	cbz	x8, bc08 <message_list_search_fuzzy@@Base+0x78>
    bbdc:	ldrb	w8, [x8]
    bbe0:	cbz	w8, bc08 <message_list_search_fuzzy@@Base+0x78>
    bbe4:	mov	x0, x23
    bbe8:	mov	x1, x21
    bbec:	mov	x2, x19
    bbf0:	mov	v0.16b, v8.16b
    bbf4:	bl	a930 <fuzzy_search_goal_function@plt>
    bbf8:	fcmp	d0, d8
    bbfc:	b.le	bc08 <message_list_search_fuzzy@@Base+0x78>
    bc00:	mov	v8.16b, v0.16b
    bc04:	mov	x22, x23
    bc08:	ldr	x8, [x20, #8]
    bc0c:	add	x24, x24, #0x1
    bc10:	cmp	x24, x8
    bc14:	b.cc	bbcc <message_list_search_fuzzy@@Base+0x3c>  // b.lo, b.ul, b.last
    bc18:	b	bc20 <message_list_search_fuzzy@@Base+0x90>
    bc1c:	mov	x22, xzr
    bc20:	mov	x0, x22
    bc24:	ldp	x20, x19, [sp, #64]
    bc28:	ldp	x22, x21, [sp, #48]
    bc2c:	ldp	x24, x23, [sp, #32]
    bc30:	ldp	x29, x30, [sp, #16]
    bc34:	ldr	d8, [sp], #80
    bc38:	ret

000000000000bc3c <message_list_list_alloc@@Base>:
    bc3c:	stp	x29, x30, [sp, #-16]!
    bc40:	mov	w0, #0x18                  	// #24
    bc44:	mov	x29, sp
    bc48:	bl	a590 <xmalloc@plt>
    bc4c:	stp	xzr, xzr, [x0, #8]
    bc50:	str	xzr, [x0]
    bc54:	ldp	x29, x30, [sp], #16
    bc58:	ret

000000000000bc5c <message_list_list_free@@Base>:
    bc5c:	stp	x29, x30, [sp, #-48]!
    bc60:	stp	x20, x19, [sp, #32]
    bc64:	cmp	w1, #0x1
    bc68:	mov	x19, x0
    bc6c:	str	x21, [sp, #16]
    bc70:	mov	x29, sp
    bc74:	b.gt	bca8 <message_list_list_free@@Base+0x4c>
    bc78:	ldr	x8, [x19, #8]
    bc7c:	cbz	x8, bca8 <message_list_list_free@@Base+0x4c>
    bc80:	mov	w20, w1
    bc84:	mov	x21, xzr
    bc88:	ldr	x8, [x19]
    bc8c:	mov	w1, w20
    bc90:	ldr	x0, [x8, x21, lsl #3]
    bc94:	bl	a970 <message_list_free@plt>
    bc98:	ldr	x8, [x19, #8]
    bc9c:	add	x21, x21, #0x1
    bca0:	cmp	x21, x8
    bca4:	b.cc	bc88 <message_list_list_free@@Base+0x2c>  // b.lo, b.ul, b.last
    bca8:	ldr	x0, [x19]
    bcac:	cbz	x0, bcb4 <message_list_list_free@@Base+0x58>
    bcb0:	bl	aa00 <free@plt>
    bcb4:	mov	x0, x19
    bcb8:	ldp	x20, x19, [sp, #32]
    bcbc:	ldr	x21, [sp, #16]
    bcc0:	ldp	x29, x30, [sp], #48
    bcc4:	b	aa00 <free@plt>

000000000000bcc8 <message_list_list_append@@Base>:
    bcc8:	stp	x29, x30, [sp, #-32]!
    bccc:	stp	x20, x19, [sp, #16]
    bcd0:	ldp	x8, x9, [x0, #8]
    bcd4:	mov	x19, x0
    bcd8:	mov	x20, x1
    bcdc:	mov	x29, sp
    bce0:	cmp	x8, x9
    bce4:	b.cs	bcf0 <message_list_list_append@@Base+0x28>  // b.hs, b.nlast
    bce8:	ldr	x0, [x19]
    bcec:	b	bd10 <message_list_list_append@@Base+0x48>
    bcf0:	ldr	x0, [x19]
    bcf4:	lsl	x8, x9, #1
    bcf8:	add	x8, x8, #0x4
    bcfc:	lsl	x1, x8, #3
    bd00:	str	x8, [x19, #16]
    bd04:	bl	a460 <xrealloc@plt>
    bd08:	ldr	x8, [x19, #8]
    bd0c:	str	x0, [x19]
    bd10:	add	x9, x8, #0x1
    bd14:	str	x9, [x19, #8]
    bd18:	str	x20, [x0, x8, lsl #3]
    bd1c:	ldp	x20, x19, [sp, #16]
    bd20:	ldp	x29, x30, [sp], #32
    bd24:	ret

000000000000bd28 <message_list_list_append_list@@Base>:
    bd28:	stp	x29, x30, [sp, #-48]!
    bd2c:	stp	x20, x19, [sp, #32]
    bd30:	ldr	x8, [x1, #8]
    bd34:	str	x21, [sp, #16]
    bd38:	mov	x29, sp
    bd3c:	cbz	x8, bd6c <message_list_list_append_list@@Base+0x44>
    bd40:	mov	x19, x1
    bd44:	mov	x20, x0
    bd48:	mov	x21, xzr
    bd4c:	ldr	x8, [x19]
    bd50:	mov	x0, x20
    bd54:	ldr	x1, [x8, x21, lsl #3]
    bd58:	bl	a180 <message_list_list_append@plt>
    bd5c:	ldr	x8, [x19, #8]
    bd60:	add	x21, x21, #0x1
    bd64:	cmp	x21, x8
    bd68:	b.cc	bd4c <message_list_list_append_list@@Base+0x24>  // b.lo, b.ul, b.last
    bd6c:	ldp	x20, x19, [sp, #32]
    bd70:	ldr	x21, [sp, #16]
    bd74:	ldp	x29, x30, [sp], #48
    bd78:	ret

000000000000bd7c <message_list_list_search@@Base>:
    bd7c:	stp	x29, x30, [sp, #-80]!
    bd80:	stp	x24, x23, [sp, #32]
    bd84:	stp	x22, x21, [sp, #48]
    bd88:	stp	x20, x19, [sp, #64]
    bd8c:	ldr	x8, [x0, #8]
    bd90:	str	x25, [sp, #16]
    bd94:	mov	x29, sp
    bd98:	cbz	x8, be14 <message_list_list_search@@Base+0x98>
    bd9c:	mov	x19, x2
    bda0:	mov	x21, x0
    bda4:	mov	x22, x1
    bda8:	mov	x20, xzr
    bdac:	mov	w23, wzr
    bdb0:	mov	x24, xzr
    bdb4:	mov	w25, #0x1                   	// #1
    bdb8:	ldr	x8, [x21]
    bdbc:	mov	x1, x22
    bdc0:	mov	x2, x19
    bdc4:	ldr	x0, [x8, x24, lsl #3]
    bdc8:	bl	ae40 <message_list_search@plt>
    bdcc:	cbz	x0, be00 <message_list_list_search@@Base+0x84>
    bdd0:	ldr	x8, [x0, #32]
    bdd4:	cmp	x8, #0x1
    bdd8:	b.ne	bdf0 <message_list_list_search@@Base+0x74>  // b.any
    bddc:	ldr	x8, [x0, #24]
    bde0:	ldrb	w8, [x8]
    bde4:	cmp	w8, #0x0
    bde8:	cinc	w8, w25, ne  // ne = any
    bdec:	b	bdf4 <message_list_list_search@@Base+0x78>
    bdf0:	mov	w8, #0x2                   	// #2
    bdf4:	cmp	w8, w23
    bdf8:	csel	w23, w8, w23, gt
    bdfc:	csel	x20, x0, x20, gt
    be00:	ldr	x8, [x21, #8]
    be04:	add	x24, x24, #0x1
    be08:	cmp	x24, x8
    be0c:	b.cc	bdb8 <message_list_list_search@@Base+0x3c>  // b.lo, b.ul, b.last
    be10:	b	be18 <message_list_list_search@@Base+0x9c>
    be14:	mov	x20, xzr
    be18:	mov	x0, x20
    be1c:	ldp	x20, x19, [sp, #64]
    be20:	ldp	x22, x21, [sp, #48]
    be24:	ldp	x24, x23, [sp, #32]
    be28:	ldr	x25, [sp, #16]
    be2c:	ldp	x29, x30, [sp], #80
    be30:	ret

000000000000be34 <msgdomain_alloc@@Base>:
    be34:	stp	x29, x30, [sp, #-48]!
    be38:	stp	x20, x19, [sp, #32]
    be3c:	mov	x20, x0
    be40:	mov	w0, #0x10                  	// #16
    be44:	str	x21, [sp, #16]
    be48:	mov	x29, sp
    be4c:	mov	w19, w1
    be50:	bl	a590 <xmalloc@plt>
    be54:	mov	x21, x0
    be58:	str	x20, [x0]
    be5c:	and	w0, w19, #0x1
    be60:	bl	af00 <message_list_alloc@plt>
    be64:	str	x0, [x21, #8]
    be68:	mov	x0, x21
    be6c:	ldp	x20, x19, [sp, #32]
    be70:	ldr	x21, [sp, #16]
    be74:	ldp	x29, x30, [sp], #48
    be78:	ret

000000000000be7c <msgdomain_free@@Base>:
    be7c:	stp	x29, x30, [sp, #-32]!
    be80:	str	x19, [sp, #16]
    be84:	mov	x19, x0
    be88:	ldr	x0, [x0, #8]
    be8c:	mov	w1, wzr
    be90:	mov	x29, sp
    be94:	bl	a970 <message_list_free@plt>
    be98:	mov	x0, x19
    be9c:	ldr	x19, [sp, #16]
    bea0:	ldp	x29, x30, [sp], #32
    bea4:	b	aa00 <free@plt>

000000000000bea8 <msgdomain_list_alloc@@Base>:
    bea8:	stp	x29, x30, [sp, #-48]!
    beac:	stp	x20, x19, [sp, #32]
    beb0:	mov	w19, w0
    beb4:	mov	w0, #0x28                  	// #40
    beb8:	str	x21, [sp, #16]
    bebc:	mov	x29, sp
    bec0:	bl	a590 <xmalloc@plt>
    bec4:	mov	w8, #0x1                   	// #1
    bec8:	dup	v0.2d, x8
    becc:	mov	x20, x0
    bed0:	stur	q0, [x0, #8]
    bed4:	mov	w0, #0x8                   	// #8
    bed8:	bl	a590 <xmalloc@plt>
    bedc:	str	x0, [x20]
    bee0:	mov	w0, #0x10                  	// #16
    bee4:	bl	a590 <xmalloc@plt>
    bee8:	adrp	x8, 36000 <its_merge_context_free@@Base+0x1328>
    beec:	add	x8, x8, #0x92c
    bef0:	and	w19, w19, #0x1
    bef4:	mov	x21, x0
    bef8:	str	x8, [x0]
    befc:	mov	w0, w19
    bf00:	bl	af00 <message_list_alloc@plt>
    bf04:	str	x0, [x21, #8]
    bf08:	ldr	x8, [x20]
    bf0c:	mov	x0, x20
    bf10:	str	x21, [x8]
    bf14:	strb	w19, [x20, #24]
    bf18:	str	xzr, [x20, #32]
    bf1c:	ldp	x20, x19, [sp, #32]
    bf20:	ldr	x21, [sp, #16]
    bf24:	ldp	x29, x30, [sp], #48
    bf28:	ret

000000000000bf2c <msgdomain_list_free@@Base>:
    bf2c:	stp	x29, x30, [sp, #-48]!
    bf30:	str	x21, [sp, #16]
    bf34:	stp	x20, x19, [sp, #32]
    bf38:	mov	x19, x0
    bf3c:	ldp	x0, x8, [x0]
    bf40:	mov	x29, sp
    bf44:	cbz	x8, bf74 <msgdomain_list_free@@Base+0x48>
    bf48:	mov	x21, xzr
    bf4c:	ldr	x20, [x0, x21, lsl #3]
    bf50:	mov	w1, wzr
    bf54:	ldr	x0, [x20, #8]
    bf58:	bl	a970 <message_list_free@plt>
    bf5c:	mov	x0, x20
    bf60:	bl	aa00 <free@plt>
    bf64:	ldp	x0, x8, [x19]
    bf68:	add	x21, x21, #0x1
    bf6c:	cmp	x21, x8
    bf70:	b.cc	bf4c <msgdomain_list_free@@Base+0x20>  // b.lo, b.ul, b.last
    bf74:	cbz	x0, bf7c <msgdomain_list_free@@Base+0x50>
    bf78:	bl	aa00 <free@plt>
    bf7c:	mov	x0, x19
    bf80:	ldp	x20, x19, [sp, #32]
    bf84:	ldr	x21, [sp, #16]
    bf88:	ldp	x29, x30, [sp], #48
    bf8c:	b	aa00 <free@plt>

000000000000bf90 <msgdomain_list_append@@Base>:
    bf90:	stp	x29, x30, [sp, #-32]!
    bf94:	stp	x20, x19, [sp, #16]
    bf98:	ldp	x8, x9, [x0, #8]
    bf9c:	mov	x19, x0
    bfa0:	mov	x20, x1
    bfa4:	mov	x29, sp
    bfa8:	cmp	x8, x9
    bfac:	b.cs	bfb8 <msgdomain_list_append@@Base+0x28>  // b.hs, b.nlast
    bfb0:	ldr	x0, [x19]
    bfb4:	b	bfd8 <msgdomain_list_append@@Base+0x48>
    bfb8:	ldr	x0, [x19]
    bfbc:	lsl	x8, x9, #1
    bfc0:	add	x8, x8, #0x4
    bfc4:	lsl	x1, x8, #3
    bfc8:	str	x8, [x19, #16]
    bfcc:	bl	a460 <xrealloc@plt>
    bfd0:	ldr	x8, [x19, #8]
    bfd4:	str	x0, [x19]
    bfd8:	add	x9, x8, #0x1
    bfdc:	str	x9, [x19, #8]
    bfe0:	str	x20, [x0, x8, lsl #3]
    bfe4:	ldp	x20, x19, [sp, #16]
    bfe8:	ldp	x29, x30, [sp], #32
    bfec:	ret

000000000000bff0 <msgdomain_list_sublist@@Base>:
    bff0:	stp	x29, x30, [sp, #-80]!
    bff4:	stp	x24, x23, [sp, #32]
    bff8:	stp	x22, x21, [sp, #48]
    bffc:	stp	x20, x19, [sp, #64]
    c000:	ldr	x22, [x0, #8]
    c004:	mov	w21, w2
    c008:	mov	x19, x0
    c00c:	mov	x20, x1
    c010:	str	x25, [sp, #16]
    c014:	mov	x29, sp
    c018:	cbz	x22, c044 <msgdomain_list_sublist@@Base+0x54>
    c01c:	ldr	x23, [x19]
    c020:	mov	x24, xzr
    c024:	ldr	x25, [x23, x24, lsl #3]
    c028:	mov	x1, x20
    c02c:	ldr	x0, [x25]
    c030:	bl	a8d0 <strcmp@plt>
    c034:	cbz	w0, c07c <msgdomain_list_sublist@@Base+0x8c>
    c038:	add	x24, x24, #0x1
    c03c:	cmp	x24, x22
    c040:	b.cc	c024 <msgdomain_list_sublist@@Base+0x34>  // b.lo, b.ul, b.last
    c044:	tbz	w21, #0, c088 <msgdomain_list_sublist@@Base+0x98>
    c048:	ldrb	w21, [x19, #24]
    c04c:	mov	w0, #0x10                  	// #16
    c050:	bl	a590 <xmalloc@plt>
    c054:	mov	x22, x0
    c058:	str	x20, [x0]
    c05c:	mov	w0, w21
    c060:	bl	af00 <message_list_alloc@plt>
    c064:	mov	x20, x22
    c068:	str	x0, [x20, #8]!
    c06c:	mov	x0, x19
    c070:	mov	x1, x22
    c074:	bl	a7b0 <msgdomain_list_append@plt>
    c078:	b	c080 <msgdomain_list_sublist@@Base+0x90>
    c07c:	add	x20, x25, #0x8
    c080:	ldr	x0, [x20]
    c084:	b	c08c <msgdomain_list_sublist@@Base+0x9c>
    c088:	mov	x0, xzr
    c08c:	ldp	x20, x19, [sp, #64]
    c090:	ldp	x22, x21, [sp, #48]
    c094:	ldp	x24, x23, [sp, #32]
    c098:	ldr	x25, [sp, #16]
    c09c:	ldp	x29, x30, [sp], #80
    c0a0:	ret

000000000000c0a4 <msgdomain_list_copy@@Base>:
    c0a4:	stp	x29, x30, [sp, #-64]!
    c0a8:	stp	x20, x19, [sp, #48]
    c0ac:	mov	x20, x0
    c0b0:	mov	w0, #0x28                  	// #40
    c0b4:	stp	x24, x23, [sp, #16]
    c0b8:	stp	x22, x21, [sp, #32]
    c0bc:	mov	x29, sp
    c0c0:	mov	w19, w1
    c0c4:	bl	a590 <xmalloc@plt>
    c0c8:	stp	xzr, xzr, [x0, #8]
    c0cc:	str	xzr, [x0]
    c0d0:	ldrb	w8, [x20, #24]
    c0d4:	mov	x21, x0
    c0d8:	strb	w8, [x0, #24]
    c0dc:	ldr	x8, [x20, #32]
    c0e0:	str	x8, [x0, #32]
    c0e4:	ldr	x8, [x20, #8]
    c0e8:	cbz	x8, c144 <msgdomain_list_copy@@Base+0xa0>
    c0ec:	mov	x24, xzr
    c0f0:	ldr	x8, [x20]
    c0f4:	cmp	w19, #0x1
    c0f8:	ldr	x22, [x8, x24, lsl #3]
    c0fc:	b.gt	c128 <msgdomain_list_copy@@Base+0x84>
    c100:	mov	w0, #0x10                  	// #16
    c104:	bl	a590 <xmalloc@plt>
    c108:	ldr	x8, [x22]
    c10c:	mov	x23, x0
    c110:	mov	w1, w19
    c114:	str	x8, [x0]
    c118:	ldr	x0, [x22, #8]
    c11c:	bl	a370 <message_list_copy@plt>
    c120:	mov	x22, x23
    c124:	str	x0, [x23, #8]
    c128:	mov	x0, x21
    c12c:	mov	x1, x22
    c130:	bl	a7b0 <msgdomain_list_append@plt>
    c134:	ldr	x8, [x20, #8]
    c138:	add	x24, x24, #0x1
    c13c:	cmp	x24, x8
    c140:	b.cc	c0f0 <msgdomain_list_copy@@Base+0x4c>  // b.lo, b.ul, b.last
    c144:	mov	x0, x21
    c148:	ldp	x20, x19, [sp, #48]
    c14c:	ldp	x22, x21, [sp, #32]
    c150:	ldp	x24, x23, [sp, #16]
    c154:	ldp	x29, x30, [sp], #64
    c158:	ret

000000000000c15c <textmode_xerror@@Base>:
    c15c:	stp	x29, x30, [sp, #-80]!
    c160:	str	x25, [sp, #16]
    c164:	stp	x24, x23, [sp, #32]
    c168:	stp	x22, x21, [sp, #48]
    c16c:	stp	x20, x19, [sp, #64]
    c170:	mov	x19, x6
    c174:	mov	w20, w5
    c178:	mov	x21, x4
    c17c:	mov	x22, x3
    c180:	mov	x23, x2
    c184:	mov	x25, x1
    c188:	mov	w24, w0
    c18c:	mov	x29, sp
    c190:	cbz	w0, c1a4 <textmode_xerror@@Base+0x48>
    c194:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
    c198:	add	x1, x1, #0x1a2
    c19c:	cbnz	x25, c1c0 <textmode_xerror@@Base+0x64>
    c1a0:	b	c1d4 <textmode_xerror@@Base+0x78>
    c1a4:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    c1a8:	add	x1, x1, #0x935
    c1ac:	mov	w2, #0x5                   	// #5
    c1b0:	mov	x0, xzr
    c1b4:	bl	acd0 <dcgettext@plt>
    c1b8:	mov	x1, x0
    c1bc:	cbz	x25, c1d4 <textmode_xerror@@Base+0x78>
    c1c0:	cbz	x23, c1cc <textmode_xerror@@Base+0x70>
    c1c4:	cmn	x22, #0x1
    c1c8:	b.ne	c1d4 <textmode_xerror@@Base+0x78>  // b.any
    c1cc:	ldp	x23, x22, [x25, #40]
    c1d0:	mov	x21, #0xffffffffffffffff    	// #-1
    c1d4:	mov	w0, w24
    c1d8:	mov	x2, x23
    c1dc:	mov	x3, x22
    c1e0:	mov	x4, x21
    c1e4:	mov	w5, w20
    c1e8:	mov	x6, x19
    c1ec:	ldp	x20, x19, [sp, #64]
    c1f0:	ldp	x22, x21, [sp, #48]
    c1f4:	ldp	x24, x23, [sp, #32]
    c1f8:	ldr	x25, [sp, #16]
    c1fc:	ldp	x29, x30, [sp], #80
    c200:	b	c204 <textmode_xerror@@Base+0xa8>
    c204:	stp	x29, x30, [sp, #-64]!
    c208:	stp	x20, x19, [sp, #48]
    c20c:	mov	x20, x6
    c210:	mov	x8, x4
    c214:	mov	x9, x3
    c218:	mov	x3, x2
    c21c:	mov	x6, x1
    c220:	mov	w19, w0
    c224:	stp	x24, x23, [sp, #16]
    c228:	stp	x22, x21, [sp, #32]
    c22c:	mov	x29, sp
    c230:	cbz	w5, c274 <textmode_xerror@@Base+0x118>
    c234:	adrp	x22, 4c000 <plural_table_size@@Base+0x12c00>
    c238:	ldr	x22, [x22, #3888]
    c23c:	ldrb	w23, [x22]
    c240:	cbz	x3, c2c8 <textmode_xerror@@Base+0x16c>
    c244:	cmn	x9, #0x1
    c248:	b.eq	c2ec <textmode_xerror@@Base+0x190>  // b.none
    c24c:	cmn	x8, #0x1
    c250:	b.eq	c32c <textmode_xerror@@Base+0x1d0>  // b.none
    c254:	adrp	x0, 36000 <its_merge_context_free@@Base+0x1328>
    c258:	add	x0, x0, #0x94b
    c25c:	mov	x1, x3
    c260:	mov	x2, x9
    c264:	mov	x3, x8
    c268:	mov	x4, x6
    c26c:	bl	aa20 <xasprintf@plt>
    c270:	b	c344 <textmode_xerror@@Base+0x1e8>
    c274:	cmp	w19, #0x2
    c278:	cset	w0, eq  // eq = none
    c27c:	cbz	x3, c304 <textmode_xerror@@Base+0x1a8>
    c280:	adrp	x21, 4c000 <plural_table_size@@Base+0x12c00>
    c284:	ldr	x21, [x21, #3888]
    c288:	cmn	x9, #0x1
    c28c:	strb	wzr, [x21]
    c290:	b.eq	c3b0 <textmode_xerror@@Base+0x254>  // b.none
    c294:	cmn	x8, #0x1
    c298:	b.eq	c3d8 <textmode_xerror@@Base+0x27c>  // b.none
    c29c:	adrp	x10, 4c000 <plural_table_size@@Base+0x12c00>
    c2a0:	ldr	x10, [x10, #3696]
    c2a4:	adrp	x2, 36000 <its_merge_context_free@@Base+0x1328>
    c2a8:	add	x2, x2, #0x965
    c2ac:	mov	w1, wzr
    c2b0:	ldr	x10, [x10]
    c2b4:	mov	x4, x9
    c2b8:	mov	x5, x8
    c2bc:	mov	x7, x20
    c2c0:	blr	x10
    c2c4:	b	c404 <textmode_xerror@@Base+0x2a8>
    c2c8:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    c2cc:	ldr	x8, [x8, #4008]
    c2d0:	adrp	x0, 3b000 <plural_table_size@@Base+0x1c00>
    c2d4:	add	x0, x0, #0x2a7
    c2d8:	mov	x2, x6
    c2dc:	ldr	x1, [x8]
    c2e0:	bl	aa20 <xasprintf@plt>
    c2e4:	mov	x21, x0
    c2e8:	b	c34c <textmode_xerror@@Base+0x1f0>
    c2ec:	adrp	x0, 3b000 <plural_table_size@@Base+0x1c00>
    c2f0:	add	x0, x0, #0x2a7
    c2f4:	mov	x1, x3
    c2f8:	mov	x2, x6
    c2fc:	bl	aa20 <xasprintf@plt>
    c300:	b	c344 <textmode_xerror@@Base+0x1e8>
    c304:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    c308:	ldr	x8, [x8, #3696]
    c30c:	adrp	x2, 36000 <its_merge_context_free@@Base+0x1328>
    c310:	add	x2, x2, #0x971
    c314:	mov	w1, wzr
    c318:	ldr	x8, [x8]
    c31c:	mov	x3, x6
    c320:	mov	x4, x20
    c324:	blr	x8
    c328:	b	c40c <textmode_xerror@@Base+0x2b0>
    c32c:	adrp	x0, 36000 <its_merge_context_free@@Base+0x1328>
    c330:	add	x0, x0, #0x95a
    c334:	mov	x1, x3
    c338:	mov	x2, x9
    c33c:	mov	x3, x6
    c340:	bl	aa20 <xasprintf@plt>
    c344:	mov	x21, x0
    c348:	strb	wzr, [x22]
    c34c:	cmp	w19, #0x0
    c350:	b.le	c388 <textmode_xerror@@Base+0x22c>
    c354:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    c358:	ldr	x8, [x8, #3872]
    c35c:	mov	x0, x20
    c360:	ldr	x24, [x8]
    c364:	bl	a5a0 <xstrdup@plt>
    c368:	mov	x1, x0
    c36c:	mov	x0, x21
    c370:	blr	x24
    c374:	cmp	w19, #0x2
    c378:	strb	w23, [x22]
    c37c:	b.ne	c428 <textmode_xerror@@Base+0x2cc>  // b.any
    c380:	mov	w0, #0x1                   	// #1
    c384:	bl	a110 <exit@plt>
    c388:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    c38c:	ldr	x8, [x8, #3832]
    c390:	mov	x0, x20
    c394:	ldr	x19, [x8]
    c398:	bl	a5a0 <xstrdup@plt>
    c39c:	mov	x1, x0
    c3a0:	mov	x0, x21
    c3a4:	blr	x19
    c3a8:	strb	w23, [x22]
    c3ac:	b	c428 <textmode_xerror@@Base+0x2cc>
    c3b0:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    c3b4:	ldr	x8, [x8, #3696]
    c3b8:	adrp	x2, 36000 <its_merge_context_free@@Base+0x1328>
    c3bc:	add	x2, x2, #0x976
    c3c0:	mov	w1, wzr
    c3c4:	ldr	x8, [x8]
    c3c8:	mov	x4, x6
    c3cc:	mov	x5, x20
    c3d0:	blr	x8
    c3d4:	b	c404 <textmode_xerror@@Base+0x2a8>
    c3d8:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    c3dc:	ldr	x8, [x8, #3928]
    c3e0:	adrp	x4, 36000 <its_merge_context_free@@Base+0x1328>
    c3e4:	add	x4, x4, #0x971
    c3e8:	mov	w1, wzr
    c3ec:	ldr	x8, [x8]
    c3f0:	mov	x2, x3
    c3f4:	mov	w3, w9
    c3f8:	mov	x5, x6
    c3fc:	mov	x6, x20
    c400:	blr	x8
    c404:	mov	w8, #0x1                   	// #1
    c408:	strb	w8, [x21]
    c40c:	cmp	w19, #0x0
    c410:	b.gt	c428 <textmode_xerror@@Base+0x2cc>
    c414:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    c418:	ldr	x8, [x8, #3784]
    c41c:	ldr	w9, [x8]
    c420:	sub	w9, w9, #0x1
    c424:	str	w9, [x8]
    c428:	ldp	x20, x19, [sp, #48]
    c42c:	ldp	x22, x21, [sp, #32]
    c430:	ldp	x24, x23, [sp, #16]
    c434:	ldp	x29, x30, [sp], #64
    c438:	ret

000000000000c43c <textmode_xerror2@@Base>:
    c43c:	sub	sp, sp, #0x70
    c440:	cmp	w0, #0x2
    c444:	stp	x28, x27, [sp, #32]
    c448:	stp	x26, x25, [sp, #48]
    c44c:	stp	x22, x21, [sp, #80]
    c450:	stp	x20, x19, [sp, #96]
    c454:	mov	x28, x7
    c458:	mov	w27, w5
    c45c:	mov	x25, x3
    c460:	mov	x26, x2
    c464:	mov	x21, x1
    c468:	mov	w19, w0
    c46c:	csinc	w0, w0, wzr, ne  // ne = any
    c470:	stp	x29, x30, [sp, #16]
    c474:	stp	x24, x23, [sp, #64]
    c478:	add	x29, sp, #0x10
    c47c:	cbz	w19, c490 <textmode_xerror2@@Base+0x54>
    c480:	adrp	x8, 37000 <get_search_path@@Base+0xb4c>
    c484:	add	x8, x8, #0x1a2
    c488:	str	x8, [sp, #8]
    c48c:	b	c4c0 <textmode_xerror2@@Base+0x84>
    c490:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    c494:	add	x1, x1, #0x935
    c498:	mov	w2, #0x5                   	// #5
    c49c:	mov	w23, w0
    c4a0:	mov	x0, xzr
    c4a4:	mov	x20, x4
    c4a8:	mov	x22, x6
    c4ac:	bl	acd0 <dcgettext@plt>
    c4b0:	mov	x6, x22
    c4b4:	mov	x4, x20
    c4b8:	str	x0, [sp, #8]
    c4bc:	mov	w0, w23
    c4c0:	ldp	x23, x24, [x29, #104]
    c4c4:	cbz	x21, c4dc <textmode_xerror2@@Base+0xa0>
    c4c8:	cbz	x26, c4d4 <textmode_xerror2@@Base+0x98>
    c4cc:	cmn	x25, #0x1
    c4d0:	b.ne	c4dc <textmode_xerror2@@Base+0xa0>  // b.any
    c4d4:	ldp	x26, x25, [x21, #40]
    c4d8:	mov	x4, #0xffffffffffffffff    	// #-1
    c4dc:	ldr	x22, [x29, #128]
    c4e0:	ldr	w20, [x29, #120]
    c4e4:	ldr	x21, [x29, #96]
    c4e8:	cbz	x28, c4f8 <textmode_xerror2@@Base+0xbc>
    c4ec:	cbz	x21, c518 <textmode_xerror2@@Base+0xdc>
    c4f0:	cmn	x23, #0x1
    c4f4:	b.eq	c518 <textmode_xerror2@@Base+0xdc>  // b.none
    c4f8:	cbz	w27, c524 <textmode_xerror2@@Base+0xe8>
    c4fc:	ldr	x28, [sp, #8]
    c500:	mov	x2, x26
    c504:	mov	x3, x25
    c508:	mov	w5, w27
    c50c:	mov	x1, x28
    c510:	bl	c204 <textmode_xerror@@Base+0xa8>
    c514:	b	c574 <textmode_xerror2@@Base+0x138>
    c518:	ldp	x21, x23, [x28, #40]
    c51c:	mov	x24, #0xffffffffffffffff    	// #-1
    c520:	cbnz	w27, c4fc <textmode_xerror2@@Base+0xc0>
    c524:	str	x25, [sp]
    c528:	mov	x25, x22
    c52c:	mov	w22, w0
    c530:	adrp	x0, 36000 <its_merge_context_free@@Base+0x1328>
    c534:	add	x0, x0, #0x93f
    c538:	mov	x1, x6
    c53c:	mov	x28, x4
    c540:	bl	aa20 <xasprintf@plt>
    c544:	ldp	x3, x1, [sp]
    c548:	mov	x27, x0
    c54c:	mov	w0, w22
    c550:	mov	x2, x26
    c554:	mov	x4, x28
    c558:	mov	w5, wzr
    c55c:	mov	x6, x27
    c560:	mov	x22, x25
    c564:	mov	x28, x1
    c568:	bl	c204 <textmode_xerror@@Base+0xa8>
    c56c:	mov	x0, x27
    c570:	bl	aa00 <free@plt>
    c574:	adrp	x0, 36000 <its_merge_context_free@@Base+0x1328>
    c578:	add	x0, x0, #0x945
    c57c:	mov	x1, x22
    c580:	bl	aa20 <xasprintf@plt>
    c584:	mov	x22, x0
    c588:	mov	w0, w19
    c58c:	mov	x1, x28
    c590:	mov	x2, x21
    c594:	mov	x3, x23
    c598:	mov	x4, x24
    c59c:	mov	w5, w20
    c5a0:	mov	x6, x22
    c5a4:	bl	c204 <textmode_xerror@@Base+0xa8>
    c5a8:	mov	x0, x22
    c5ac:	bl	aa00 <free@plt>
    c5b0:	cmp	w19, #0x1
    c5b4:	b.lt	c5cc <textmode_xerror2@@Base+0x190>  // b.tstop
    c5b8:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    c5bc:	ldr	x8, [x8, #3784]
    c5c0:	ldr	w9, [x8]
    c5c4:	sub	w9, w9, #0x1
    c5c8:	str	w9, [x8]
    c5cc:	ldp	x20, x19, [sp, #96]
    c5d0:	ldp	x22, x21, [sp, #80]
    c5d4:	ldp	x24, x23, [sp, #64]
    c5d8:	ldp	x26, x25, [sp, #48]
    c5dc:	ldp	x28, x27, [sp, #32]
    c5e0:	ldp	x29, x30, [sp, #16]
    c5e4:	add	sp, sp, #0x70
    c5e8:	ret

000000000000c5ec <catalog_reader_alloc@@Base>:
    c5ec:	stp	x29, x30, [sp, #-32]!
    c5f0:	stp	x20, x19, [sp, #16]
    c5f4:	mov	x20, x0
    c5f8:	ldr	x0, [x0]
    c5fc:	mov	x29, sp
    c600:	bl	a590 <xmalloc@plt>
    c604:	str	x20, [x0]
    c608:	ldr	x8, [x20, #8]
    c60c:	mov	x19, x0
    c610:	cbz	x8, c61c <catalog_reader_alloc@@Base+0x30>
    c614:	mov	x0, x19
    c618:	blr	x8
    c61c:	mov	x0, x19
    c620:	ldp	x20, x19, [sp, #16]
    c624:	ldp	x29, x30, [sp], #32
    c628:	ret

000000000000c62c <catalog_reader_free@@Base>:
    c62c:	stp	x29, x30, [sp, #-32]!
    c630:	ldr	x8, [x0]
    c634:	str	x19, [sp, #16]
    c638:	mov	x19, x0
    c63c:	mov	x29, sp
    c640:	ldr	x8, [x8, #16]
    c644:	cbz	x8, c650 <catalog_reader_free@@Base+0x24>
    c648:	mov	x0, x19
    c64c:	blr	x8
    c650:	mov	x0, x19
    c654:	ldr	x19, [sp, #16]
    c658:	ldp	x29, x30, [sp], #32
    c65c:	b	aa00 <free@plt>

000000000000c660 <catalog_reader_parse@@Base>:
    c660:	stp	x29, x30, [sp, #-80]!
    c664:	str	x25, [sp, #16]
    c668:	stp	x24, x23, [sp, #32]
    c66c:	stp	x22, x21, [sp, #48]
    c670:	stp	x20, x19, [sp, #64]
    c674:	adrp	x24, 4c000 <plural_table_size@@Base+0x12c00>
    c678:	ldr	x24, [x24, #3784]
    c67c:	adrp	x25, 4e000 <formatstring_gfc_internal@@Base+0x10>
    c680:	str	x0, [x25, #552]
    c684:	mov	x22, x4
    c688:	str	wzr, [x24]
    c68c:	ldr	x8, [x0]
    c690:	mov	x20, x3
    c694:	mov	x21, x2
    c698:	mov	x19, x0
    c69c:	ldr	x8, [x8, #24]
    c6a0:	mov	x23, x1
    c6a4:	mov	x29, sp
    c6a8:	cbz	x8, c6b4 <catalog_reader_parse@@Base+0x54>
    c6ac:	mov	x0, x19
    c6b0:	blr	x8
    c6b4:	ldr	x8, [x22]
    c6b8:	mov	x0, x19
    c6bc:	mov	x1, x23
    c6c0:	mov	x2, x21
    c6c4:	mov	x3, x20
    c6c8:	blr	x8
    c6cc:	ldr	x8, [x19]
    c6d0:	ldr	x8, [x8, #32]
    c6d4:	cbz	x8, c6e0 <catalog_reader_parse@@Base+0x80>
    c6d8:	mov	x0, x19
    c6dc:	blr	x8
    c6e0:	ldr	w3, [x24]
    c6e4:	str	xzr, [x25, #552]
    c6e8:	cbz	w3, c758 <catalog_reader_parse@@Base+0xf8>
    c6ec:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    c6f0:	ldr	x8, [x8, #3736]
    c6f4:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    c6f8:	adrp	x2, 36000 <its_merge_context_free@@Base+0x1328>
    c6fc:	add	x1, x1, #0x97f
    c700:	ldr	x0, [x8]
    c704:	add	x2, x2, #0x994
    c708:	mov	w4, #0x5                   	// #5
    c70c:	str	x0, [x29, #24]
    c710:	mov	x0, xzr
    c714:	bl	ab40 <dcngettext@plt>
    c718:	ldr	w1, [x24]
    c71c:	bl	aa20 <xasprintf@plt>
    c720:	ldr	x7, [x29, #24]
    c724:	ldp	x20, x19, [sp, #64]
    c728:	ldp	x22, x21, [sp, #48]
    c72c:	ldp	x24, x23, [sp, #32]
    c730:	ldr	x25, [sp, #16]
    c734:	mov	x6, x0
    c738:	mov	w0, #0x2                   	// #2
    c73c:	mov	x3, #0xffffffffffffffff    	// #-1
    c740:	mov	x4, #0xffffffffffffffff    	// #-1
    c744:	mov	x1, xzr
    c748:	mov	x2, xzr
    c74c:	mov	w5, wzr
    c750:	ldp	x29, x30, [sp], #80
    c754:	br	x7
    c758:	ldp	x20, x19, [sp, #64]
    c75c:	ldp	x22, x21, [sp, #48]
    c760:	ldp	x24, x23, [sp, #32]
    c764:	ldr	x25, [sp, #16]
    c768:	ldp	x29, x30, [sp], #80
    c76c:	ret

000000000000c770 <po_callback_domain@@Base>:
    c770:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
    c774:	ldr	x8, [x8, #552]
    c778:	ldr	x9, [x8]
    c77c:	ldr	x2, [x9, #40]
    c780:	cbz	x2, c790 <po_callback_domain@@Base+0x20>
    c784:	mov	x1, x0
    c788:	mov	x0, x8
    c78c:	br	x2
    c790:	ret

000000000000c794 <po_callback_message@@Base>:
    c794:	sub	sp, sp, #0x40
    c798:	adrp	x9, 4e000 <formatstring_gfc_internal@@Base+0x10>
    c79c:	ldr	x9, [x9, #552]
    c7a0:	stp	x29, x30, [sp, #48]
    c7a4:	add	x29, sp, #0x30
    c7a8:	ldr	x10, [x9]
    c7ac:	ldr	x10, [x10, #48]
    c7b0:	cbz	x10, c800 <po_callback_message@@Base+0x6c>
    c7b4:	ldrb	w11, [x29, #40]
    c7b8:	ldrb	w12, [x29, #32]
    c7bc:	ldp	x14, x13, [x29, #16]
    c7c0:	mov	x8, x6
    c7c4:	mov	x6, x5
    c7c8:	mov	x5, x4
    c7cc:	mov	x4, x3
    c7d0:	mov	x3, x2
    c7d4:	mov	x2, x1
    c7d8:	mov	x1, x0
    c7dc:	and	w11, w11, #0x1
    c7e0:	and	w12, w12, #0x1
    c7e4:	str	x7, [sp]
    c7e8:	mov	x0, x9
    c7ec:	mov	x7, x8
    c7f0:	stp	x14, x13, [sp, #8]
    c7f4:	strb	w11, [sp, #32]
    c7f8:	strb	w12, [sp, #24]
    c7fc:	blr	x10
    c800:	ldp	x29, x30, [sp, #48]
    c804:	add	sp, sp, #0x40
    c808:	ret

000000000000c80c <po_callback_comment@@Base>:
    c80c:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
    c810:	ldr	x8, [x8, #552]
    c814:	ldr	x9, [x8]
    c818:	ldr	x2, [x9, #56]
    c81c:	cbz	x2, c82c <po_callback_comment@@Base+0x20>
    c820:	mov	x1, x0
    c824:	mov	x0, x8
    c828:	br	x2
    c82c:	ret

000000000000c830 <po_callback_comment_dot@@Base>:
    c830:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
    c834:	ldr	x8, [x8, #552]
    c838:	ldr	x9, [x8]
    c83c:	ldr	x2, [x9, #64]
    c840:	cbz	x2, c850 <po_callback_comment_dot@@Base+0x20>
    c844:	mov	x1, x0
    c848:	mov	x0, x8
    c84c:	br	x2
    c850:	ret

000000000000c854 <po_callback_comment_filepos@@Base>:
    c854:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
    c858:	ldr	x8, [x8, #552]
    c85c:	ldr	x9, [x8]
    c860:	ldr	x3, [x9, #72]
    c864:	cbz	x3, c878 <po_callback_comment_filepos@@Base+0x24>
    c868:	mov	x2, x1
    c86c:	mov	x1, x0
    c870:	mov	x0, x8
    c874:	br	x3
    c878:	ret

000000000000c87c <po_callback_comment_special@@Base>:
    c87c:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
    c880:	ldr	x8, [x8, #552]
    c884:	ldr	x9, [x8]
    c888:	ldr	x2, [x9, #80]
    c88c:	cbz	x2, c89c <po_callback_comment_special@@Base+0x20>
    c890:	mov	x1, x0
    c894:	mov	x0, x8
    c898:	br	x2
    c89c:	ret

000000000000c8a0 <po_parse_comment_special@@Base>:
    c8a0:	sub	sp, sp, #0x90
    c8a4:	stp	x29, x30, [sp, #48]
    c8a8:	add	x29, sp, #0x30
    c8ac:	movi	v0.2d, #0x0
    c8b0:	stp	x28, x27, [sp, #64]
    c8b4:	stp	x26, x25, [sp, #80]
    c8b8:	stp	x24, x23, [sp, #96]
    c8bc:	stp	x22, x21, [sp, #112]
    c8c0:	stp	x20, x19, [sp, #128]
    c8c4:	stur	x1, [x29, #-8]
    c8c8:	strb	wzr, [x1]
    c8cc:	stp	q0, q0, [x2, #80]
    c8d0:	stp	q0, q0, [x2, #48]
    c8d4:	stp	q0, q0, [x2, #16]
    c8d8:	stp	x3, x2, [sp, #8]
    c8dc:	str	q0, [x2]
    c8e0:	movi	v0.2d, #0xffffffffffffffff
    c8e4:	str	d0, [x3]
    c8e8:	stur	x4, [x29, #-16]
    c8ec:	str	wzr, [x4]
    c8f0:	stp	xzr, xzr, [x5]
    c8f4:	ldrb	w23, [x0]
    c8f8:	str	x5, [sp, #24]
    c8fc:	cbz	w23, cdb8 <po_parse_comment_special@@Base+0x518>
    c900:	mov	x28, #0x3e01                	// #15873
    c904:	mov	x19, x0
    c908:	movk	x28, #0x1001, lsl #32
    c90c:	mov	w21, #0x1                   	// #1
    c910:	and	w8, w23, #0xff
    c914:	cmp	w8, #0x3f
    c918:	b.hi	c938 <po_parse_comment_special@@Base+0x98>  // b.pmore
    c91c:	lsl	x8, x21, x23
    c920:	and	x8, x8, x28
    c924:	mov	x24, x19
    c928:	cbz	x8, c93c <po_parse_comment_special@@Base+0x9c>
    c92c:	ldrb	w23, [x19, #1]!
    c930:	cbnz	w23, c910 <po_parse_comment_special@@Base+0x70>
    c934:	b	cdb8 <po_parse_comment_special@@Base+0x518>
    c938:	mov	x24, x19
    c93c:	and	w8, w23, #0xff
    c940:	cmp	w8, #0x3f
    c944:	b.hi	c954 <po_parse_comment_special@@Base+0xb4>  // b.pmore
    c948:	lsl	x8, x21, x23
    c94c:	and	x8, x8, x28
    c950:	cbnz	x8, c95c <po_parse_comment_special@@Base+0xbc>
    c954:	ldrb	w23, [x24, #1]!
    c958:	cbnz	w23, c93c <po_parse_comment_special@@Base+0x9c>
    c95c:	subs	x20, x24, x19
    c960:	b.eq	c99c <po_parse_comment_special@@Base+0xfc>  // b.none
    c964:	cmp	x20, #0x5
    c968:	b.ne	c9a4 <po_parse_comment_special@@Base+0x104>  // b.any
    c96c:	ldr	w8, [x19]
    c970:	ldrb	w9, [x19, #4]
    c974:	mov	w10, #0x7566                	// #30054
    c978:	movk	w10, #0x7a7a, lsl #16
    c97c:	eor	w8, w8, w10
    c980:	mov	w10, #0x79                  	// #121
    c984:	eor	w9, w9, w10
    c988:	orr	w8, w8, w9
    c98c:	cbnz	w8, cdac <po_parse_comment_special@@Base+0x50c>
    c990:	ldur	x8, [x29, #-8]
    c994:	strb	w21, [x8]
    c998:	b	cdac <po_parse_comment_special@@Base+0x50c>
    c99c:	mov	x24, x19
    c9a0:	b	cdac <po_parse_comment_special@@Base+0x50c>
    c9a4:	subs	x25, x20, #0x7
    c9a8:	b.cc	caf4 <po_parse_comment_special@@Base+0x254>  // b.lo, b.ul, b.last
    c9ac:	ldur	w8, [x24, #-7]
    c9b0:	ldur	w9, [x24, #-4]
    c9b4:	mov	w10, #0x662d                	// #26157
    c9b8:	movk	w10, #0x726f, lsl #16
    c9bc:	eor	w8, w8, w10
    c9c0:	mov	w10, #0x6d72                	// #28018
    c9c4:	movk	w10, #0x7461, lsl #16
    c9c8:	eor	w9, w9, w10
    c9cc:	orr	w8, w8, w9
    c9d0:	cbnz	w8, cc7c <po_parse_comment_special@@Base+0x3dc>
    c9d4:	cmp	x25, #0x3
    c9d8:	b.cc	ca74 <po_parse_comment_special@@Base+0x1d4>  // b.lo, b.ul, b.last
    c9dc:	ldrh	w8, [x19]
    c9e0:	ldrb	w9, [x19, #2]
    c9e4:	mov	w10, #0x6f6e                	// #28526
    c9e8:	eor	w8, w8, w10
    c9ec:	mov	w10, #0x2d                  	// #45
    c9f0:	eor	w9, w9, w10
    c9f4:	orr	w8, w8, w9
    c9f8:	tst	w8, #0xffff
    c9fc:	b.eq	ca84 <po_parse_comment_special@@Base+0x1e4>  // b.none
    ca00:	cmp	x25, #0x9
    ca04:	b.cc	ca74 <po_parse_comment_special@@Base+0x1d4>  // b.lo, b.ul, b.last
    ca08:	ldr	x8, [x19]
    ca0c:	mov	x10, #0x6f70                	// #28528
    ca10:	ldrb	w9, [x19, #8]
    ca14:	movk	x10, #0x7373, lsl #16
    ca18:	movk	x10, #0x6269, lsl #32
    ca1c:	movk	x10, #0x656c, lsl #48
    ca20:	eor	x8, x8, x10
    ca24:	mov	w10, #0x2d                  	// #45
    ca28:	eor	x9, x9, x10
    ca2c:	orr	x8, x8, x9
    ca30:	cbz	x8, ca94 <po_parse_comment_special@@Base+0x1f4>
    ca34:	cmp	x25, #0xb
    ca38:	b.cc	ca74 <po_parse_comment_special@@Base+0x1d4>  // b.lo, b.ul, b.last
    ca3c:	ldr	x8, [x19]
    ca40:	mov	x10, #0x6d69                	// #28009
    ca44:	movk	x10, #0x6f70, lsl #16
    ca48:	movk	x10, #0x7373, lsl #32
    ca4c:	movk	x10, #0x6269, lsl #48
    ca50:	ldur	x9, [x19, #3]
    ca54:	eor	x8, x8, x10
    ca58:	mov	x10, #0x736f                	// #29551
    ca5c:	movk	x10, #0x6973, lsl #16
    ca60:	movk	x10, #0x6c62, lsl #32
    ca64:	movk	x10, #0x2d65, lsl #48
    ca68:	eor	x9, x9, x10
    ca6c:	orr	x8, x8, x9
    ca70:	cbz	x8, caa4 <po_parse_comment_special@@Base+0x204>
    ca74:	mov	w8, #0x1                   	// #1
    ca78:	str	w8, [sp, #4]
    ca7c:	mov	x26, x19
    ca80:	b	cab4 <po_parse_comment_special@@Base+0x214>
    ca84:	add	x26, x19, #0x3
    ca88:	sub	x25, x20, #0xa
    ca8c:	mov	w8, #0x2                   	// #2
    ca90:	b	cab0 <po_parse_comment_special@@Base+0x210>
    ca94:	add	x26, x19, #0x9
    ca98:	sub	x25, x20, #0x10
    ca9c:	mov	w8, #0x4                   	// #4
    caa0:	b	cab0 <po_parse_comment_special@@Base+0x210>
    caa4:	add	x26, x19, #0xb
    caa8:	sub	x25, x20, #0x12
    caac:	mov	w8, #0x5                   	// #5
    cab0:	str	w8, [sp, #4]
    cab4:	mov	x22, xzr
    cab8:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    cabc:	ldr	x8, [x8, #4032]
    cac0:	ldr	x27, [x8, x22, lsl #3]
    cac4:	mov	x0, x27
    cac8:	bl	a0d0 <strlen@plt>
    cacc:	cmp	x0, x25
    cad0:	b.ne	cae8 <po_parse_comment_special@@Base+0x248>  // b.any
    cad4:	mov	x0, x27
    cad8:	mov	x1, x26
    cadc:	mov	x2, x25
    cae0:	bl	a650 <bcmp@plt>
    cae4:	cbz	w0, cb54 <po_parse_comment_special@@Base+0x2b4>
    cae8:	add	x22, x22, #0x1
    caec:	cmp	x22, #0x1c
    caf0:	b.ne	cab8 <po_parse_comment_special@@Base+0x218>  // b.any
    caf4:	cmp	x20, #0x6
    caf8:	b.ne	cc7c <po_parse_comment_special@@Base+0x3dc>  // b.any
    cafc:	ldr	w8, [x19]
    cb00:	ldrh	w9, [x19, #4]
    cb04:	mov	w10, #0x6172                	// #24946
    cb08:	movk	w10, #0x676e, lsl #16
    cb0c:	eor	w8, w8, w10
    cb10:	mov	w10, #0x3a65                	// #14949
    cb14:	eor	w9, w9, w10
    cb18:	orr	w8, w8, w9
    cb1c:	cbnz	w8, ccec <po_parse_comment_special@@Base+0x44c>
    cb20:	tst	w23, #0xff
    cb24:	b.eq	cb64 <po_parse_comment_special@@Base+0x2c4>  // b.none
    cb28:	mov	x19, x24
    cb2c:	and	w8, w23, #0xff
    cb30:	cmp	w8, #0x3f
    cb34:	b.hi	cb6c <po_parse_comment_special@@Base+0x2cc>  // b.pmore
    cb38:	lsl	x8, x21, x23
    cb3c:	and	x8, x8, x28
    cb40:	cbz	x8, cb6c <po_parse_comment_special@@Base+0x2cc>
    cb44:	ldrb	w23, [x19, #1]!
    cb48:	mov	x24, x19
    cb4c:	cbnz	w23, cb2c <po_parse_comment_special@@Base+0x28c>
    cb50:	b	cc7c <po_parse_comment_special@@Base+0x3dc>
    cb54:	ldr	x8, [sp, #16]
    cb58:	ldr	w9, [sp, #4]
    cb5c:	str	w9, [x8, x22, lsl #2]
    cb60:	b	cdac <po_parse_comment_special@@Base+0x50c>
    cb64:	mov	x19, x24
    cb68:	b	ccec <po_parse_comment_special@@Base+0x44c>
    cb6c:	mov	w8, w23
    cb70:	mov	x24, x19
    cb74:	and	w9, w8, #0xff
    cb78:	cmp	w9, #0x3f
    cb7c:	b.hi	cb8c <po_parse_comment_special@@Base+0x2ec>  // b.pmore
    cb80:	lsl	x8, x21, x8
    cb84:	and	x8, x8, x28
    cb88:	cbnz	x8, cb94 <po_parse_comment_special@@Base+0x2f4>
    cb8c:	ldrb	w8, [x24, #1]!
    cb90:	cbnz	w8, cb74 <po_parse_comment_special@@Base+0x2d4>
    cb94:	sub	w8, w23, #0x30
    cb98:	and	w8, w8, #0xff
    cb9c:	cmp	w8, #0x9
    cba0:	b.hi	cc7c <po_parse_comment_special@@Base+0x3dc>  // b.pmore
    cba4:	mov	w8, wzr
    cba8:	b.hi	cbf0 <po_parse_comment_special@@Base+0x350>  // b.pmore
    cbac:	mov	w9, #0xcccd                	// #52429
    cbb0:	movk	w9, #0xccc, lsl #16
    cbb4:	cmp	w8, w9
    cbb8:	b.cs	cbdc <po_parse_comment_special@@Base+0x33c>  // b.hs, b.nlast
    cbbc:	mov	w9, #0xa                   	// #10
    cbc0:	mul	w8, w8, w9
    cbc4:	add	w8, w8, w23, uxtb
    cbc8:	sub	w8, w8, #0x30
    cbcc:	mov	w9, #0x7fffffff            	// #2147483647
    cbd0:	cmp	w8, w9
    cbd4:	csel	w8, w8, w9, cc  // cc = lo, ul, last
    cbd8:	b	cbe0 <po_parse_comment_special@@Base+0x340>
    cbdc:	mov	w8, #0x7fffffff            	// #2147483647
    cbe0:	ldrb	w23, [x19, #1]!
    cbe4:	sub	w9, w23, #0x30
    cbe8:	cmp	w9, #0xa
    cbec:	b.cc	cbac <po_parse_comment_special@@Base+0x30c>  // b.lo, b.ul, b.last
    cbf0:	and	w9, w23, #0xff
    cbf4:	cmp	w9, #0x2e
    cbf8:	b.ne	cc78 <po_parse_comment_special@@Base+0x3d8>  // b.any
    cbfc:	ldrb	w9, [x19, #1]
    cc00:	add	x19, x19, #0x2
    cc04:	cmp	w9, #0x2e
    cc08:	b.ne	cc7c <po_parse_comment_special@@Base+0x3dc>  // b.any
    cc0c:	ldrb	w10, [x19]
    cc10:	sub	w9, w10, #0x30
    cc14:	cmp	w9, #0x9
    cc18:	b.hi	cc7c <po_parse_comment_special@@Base+0x3dc>  // b.pmore
    cc1c:	mov	w9, wzr
    cc20:	mov	w11, #0xcccd                	// #52429
    cc24:	movk	w11, #0xccc, lsl #16
    cc28:	cmp	w9, w11
    cc2c:	b.cs	cc50 <po_parse_comment_special@@Base+0x3b0>  // b.hs, b.nlast
    cc30:	mov	w11, #0xa                   	// #10
    cc34:	mul	w9, w9, w11
    cc38:	add	w9, w9, w10, uxtb
    cc3c:	sub	w9, w9, #0x30
    cc40:	mov	w10, #0x7fffffff            	// #2147483647
    cc44:	cmp	w9, w10
    cc48:	csel	w9, w9, w10, cc  // cc = lo, ul, last
    cc4c:	b	cc54 <po_parse_comment_special@@Base+0x3b4>
    cc50:	mov	w9, #0x7fffffff            	// #2147483647
    cc54:	ldrb	w10, [x19, #1]!
    cc58:	sub	w11, w10, #0x30
    cc5c:	cmp	w11, #0xa
    cc60:	b.cc	cc20 <po_parse_comment_special@@Base+0x380>  // b.lo, b.ul, b.last
    cc64:	cmp	w8, w9
    cc68:	b.hi	cc7c <po_parse_comment_special@@Base+0x3dc>  // b.pmore
    cc6c:	ldr	x10, [sp, #8]
    cc70:	stp	w8, w9, [x10]
    cc74:	b	cdac <po_parse_comment_special@@Base+0x50c>
    cc78:	add	x19, x19, #0x1
    cc7c:	cmp	x20, #0x7
    cc80:	b.eq	ccac <po_parse_comment_special@@Base+0x40c>  // b.none
    cc84:	cmp	x20, #0x4
    cc88:	b.ne	cce4 <po_parse_comment_special@@Base+0x444>  // b.any
    cc8c:	ldr	w8, [x19]
    cc90:	mov	w9, #0x7277                	// #29303
    cc94:	movk	w9, #0x7061, lsl #16
    cc98:	cmp	w8, w9
    cc9c:	b.ne	cdac <po_parse_comment_special@@Base+0x50c>  // b.any
    cca0:	ldur	x8, [x29, #-16]
    cca4:	str	w21, [x8]
    cca8:	b	cdac <po_parse_comment_special@@Base+0x50c>
    ccac:	ldr	w8, [x19]
    ccb0:	ldur	w9, [x19, #3]
    ccb4:	mov	w10, #0x6f6e                	// #28526
    ccb8:	movk	w10, #0x772d, lsl #16
    ccbc:	eor	w8, w8, w10
    ccc0:	mov	w10, #0x7277                	// #29303
    ccc4:	movk	w10, #0x7061, lsl #16
    ccc8:	eor	w9, w9, w10
    cccc:	orr	w8, w8, w9
    ccd0:	cbnz	w8, ccec <po_parse_comment_special@@Base+0x44c>
    ccd4:	ldur	x8, [x29, #-16]
    ccd8:	mov	w9, #0x2                   	// #2
    ccdc:	str	w9, [x8]
    cce0:	b	cdac <po_parse_comment_special@@Base+0x50c>
    cce4:	cmp	x20, #0x6
    cce8:	b.cc	cdac <po_parse_comment_special@@Base+0x50c>  // b.lo, b.ul, b.last
    ccec:	add	x8, x19, x20
    ccf0:	ldur	w9, [x8, #-6]
    ccf4:	ldurh	w8, [x8, #-2]
    ccf8:	mov	w10, #0x632d                	// #25389
    ccfc:	movk	w10, #0x6568, lsl #16
    cd00:	eor	w9, w9, w10
    cd04:	mov	w10, #0x6b63                	// #27491
    cd08:	eor	w8, w8, w10
    cd0c:	orr	w8, w9, w8
    cd10:	cbnz	w8, cdac <po_parse_comment_special@@Base+0x50c>
    cd14:	sub	x25, x20, #0x6
    cd18:	cmp	x25, #0x3
    cd1c:	b.cc	cd5c <po_parse_comment_special@@Base+0x4bc>  // b.lo, b.ul, b.last
    cd20:	ldrh	w8, [x19]
    cd24:	ldrb	w9, [x19, #2]
    cd28:	mov	w10, #0x6f6e                	// #28526
    cd2c:	adrp	x23, 4c000 <plural_table_size@@Base+0x12c00>
    cd30:	eor	w8, w8, w10
    cd34:	mov	w10, #0x2d                  	// #45
    cd38:	ldr	x23, [x23, #3936]
    cd3c:	eor	w9, w9, w10
    cd40:	orr	w8, w8, w9
    cd44:	tst	w8, #0xffff
    cd48:	b.ne	cd64 <po_parse_comment_special@@Base+0x4c4>  // b.any
    cd4c:	add	x19, x19, #0x3
    cd50:	sub	x25, x20, #0x9
    cd54:	mov	w20, #0x2                   	// #2
    cd58:	b	cd68 <po_parse_comment_special@@Base+0x4c8>
    cd5c:	adrp	x23, 4c000 <plural_table_size@@Base+0x12c00>
    cd60:	ldr	x23, [x23, #3936]
    cd64:	mov	w20, #0x1                   	// #1
    cd68:	mov	x22, xzr
    cd6c:	ldr	x26, [x23, x22, lsl #3]
    cd70:	mov	x0, x26
    cd74:	bl	a0d0 <strlen@plt>
    cd78:	cmp	x0, x25
    cd7c:	b.ne	cd94 <po_parse_comment_special@@Base+0x4f4>  // b.any
    cd80:	mov	x0, x26
    cd84:	mov	x1, x19
    cd88:	mov	x2, x25
    cd8c:	bl	a650 <bcmp@plt>
    cd90:	cbz	w0, cda4 <po_parse_comment_special@@Base+0x504>
    cd94:	add	x22, x22, #0x1
    cd98:	cmp	x22, #0x4
    cd9c:	b.ne	cd6c <po_parse_comment_special@@Base+0x4cc>  // b.any
    cda0:	b	cdac <po_parse_comment_special@@Base+0x50c>
    cda4:	ldr	x8, [sp, #24]
    cda8:	str	w20, [x8, x22, lsl #2]
    cdac:	ldrb	w23, [x24]
    cdb0:	mov	x19, x24
    cdb4:	cbnz	w23, c910 <po_parse_comment_special@@Base+0x70>
    cdb8:	ldp	x20, x19, [sp, #128]
    cdbc:	ldp	x22, x21, [sp, #112]
    cdc0:	ldp	x24, x23, [sp, #96]
    cdc4:	ldp	x26, x25, [sp, #80]
    cdc8:	ldp	x28, x27, [sp, #64]
    cdcc:	ldp	x29, x30, [sp, #48]
    cdd0:	add	sp, sp, #0x90
    cdd4:	ret

000000000000cdd8 <po_callback_comment_dispatcher@@Base>:
    cdd8:	stp	x29, x30, [sp, #-96]!
    cddc:	stp	x28, x27, [sp, #16]
    cde0:	stp	x26, x25, [sp, #32]
    cde4:	stp	x24, x23, [sp, #48]
    cde8:	stp	x22, x21, [sp, #64]
    cdec:	stp	x20, x19, [sp, #80]
    cdf0:	ldrb	w8, [x0]
    cdf4:	mov	x27, x0
    cdf8:	mov	x29, sp
    cdfc:	cmp	w8, #0x2b
    ce00:	b.le	ce48 <po_callback_comment_dispatcher@@Base+0x70>
    ce04:	cmp	w8, #0x2c
    ce08:	b.eq	ce58 <po_callback_comment_dispatcher@@Base+0x80>  // b.none
    ce0c:	cmp	w8, #0x3a
    ce10:	b.eq	ce74 <po_callback_comment_dispatcher@@Base+0x9c>  // b.none
    ce14:	cmp	w8, #0x2e
    ce18:	b.ne	d39c <po_callback_comment_dispatcher@@Base+0x5c4>  // b.any
    ce1c:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
    ce20:	ldr	x0, [x8, #552]
    ce24:	ldr	x8, [x0]
    ce28:	ldr	x2, [x8, #64]
    ce2c:	cbz	x2, d3d4 <po_callback_comment_dispatcher@@Base+0x5fc>
    ce30:	ldrb	w8, [x27, #1]
    ce34:	add	x9, x27, #0x1
    ce38:	add	x10, x27, #0x2
    ce3c:	cmp	w8, #0x20
    ce40:	csel	x1, x10, x9, eq  // eq = none
    ce44:	b	d3b8 <po_callback_comment_dispatcher@@Base+0x5e0>
    ce48:	cmp	w8, #0x20
    ce4c:	b.eq	d1bc <po_callback_comment_dispatcher@@Base+0x3e4>  // b.none
    ce50:	cmp	w8, #0x21
    ce54:	b.ne	d39c <po_callback_comment_dispatcher@@Base+0x5c4>  // b.any
    ce58:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
    ce5c:	ldr	x0, [x8, #552]
    ce60:	ldr	x8, [x0]
    ce64:	ldr	x2, [x8, #80]
    ce68:	cbz	x2, d3d4 <po_callback_comment_dispatcher@@Base+0x5fc>
    ce6c:	add	x1, x27, #0x1
    ce70:	b	d3b8 <po_callback_comment_dispatcher@@Base+0x5e0>
    ce74:	ldrb	w8, [x27, #1]!
    ce78:	cbz	w8, d3d4 <po_callback_comment_dispatcher@@Base+0x5fc>
    ce7c:	mov	x25, #0x601                 	// #1537
    ce80:	mov	x28, #0x600                 	// #1536
    ce84:	mov	w24, #0x1                   	// #1
    ce88:	movk	x25, #0x1, lsl #32
    ce8c:	mov	w26, #0xa                   	// #10
    ce90:	movk	x28, #0x1, lsl #32
    ce94:	and	w8, w8, #0xff
    ce98:	sub	w9, w8, #0x9
    ce9c:	cmp	w9, #0x2
    cea0:	b.cc	ceb0 <po_callback_comment_dispatcher@@Base+0xd8>  // b.lo, b.ul, b.last
    cea4:	cbz	w8, d1b0 <po_callback_comment_dispatcher@@Base+0x3d8>
    cea8:	cmp	w8, #0x20
    ceac:	b.ne	ceb8 <po_callback_comment_dispatcher@@Base+0xe0>  // b.any
    ceb0:	ldrb	w8, [x27, #1]!
    ceb4:	b	ce94 <po_callback_comment_dispatcher@@Base+0xbc>
    ceb8:	mov	x20, xzr
    cebc:	add	x9, x27, #0x2
    cec0:	add	x10, x27, #0x1
    cec4:	add	x8, x27, x20
    cec8:	ldrb	w8, [x8, #1]
    cecc:	mov	x19, x9
    ced0:	mov	x21, x10
    ced4:	add	x20, x20, #0x1
    ced8:	add	x9, x9, #0x1
    cedc:	cmp	w8, #0x20
    cee0:	add	x10, x10, #0x1
    cee4:	b.hi	cec4 <po_callback_comment_dispatcher@@Base+0xec>  // b.pmore
    cee8:	lsl	x11, x24, x8
    ceec:	tst	x11, x25
    cef0:	b.eq	cec4 <po_callback_comment_dispatcher@@Base+0xec>  // b.none
    cef4:	add	x12, x27, x20
    cef8:	sub	x13, x20, #0x1
    cefc:	mov	w10, w8
    cf00:	mov	x9, x20
    cf04:	and	w10, w10, #0xff
    cf08:	sub	w11, w10, #0x9
    cf0c:	cmp	w11, #0x2
    cf10:	b.cc	cf1c <po_callback_comment_dispatcher@@Base+0x144>  // b.lo, b.ul, b.last
    cf14:	cmp	w10, #0x20
    cf18:	b.ne	cf30 <po_callback_comment_dispatcher@@Base+0x158>  // b.any
    cf1c:	add	x10, x27, x9
    cf20:	ldrb	w10, [x10, #1]
    cf24:	add	x9, x9, #0x1
    cf28:	add	x19, x19, #0x1
    cf2c:	b	cf04 <po_callback_comment_dispatcher@@Base+0x12c>
    cf30:	cmp	w10, #0x3a
    cf34:	b.ne	cfdc <po_callback_comment_dispatcher@@Base+0x204>  // b.any
    cf38:	add	x10, x27, x9
    cf3c:	ldrb	w10, [x10, #1]
    cf40:	cmp	w10, #0x20
    cf44:	b.hi	cf60 <po_callback_comment_dispatcher@@Base+0x188>  // b.pmore
    cf48:	lsl	x11, x24, x10
    cf4c:	tst	x11, x28
    cf50:	b.eq	cf60 <po_callback_comment_dispatcher@@Base+0x188>  // b.none
    cf54:	add	x9, x9, #0x1
    cf58:	add	x19, x19, #0x1
    cf5c:	b	cf38 <po_callback_comment_dispatcher@@Base+0x160>
    cf60:	sub	w9, w10, #0x30
    cf64:	cmp	w9, #0x9
    cf68:	b.hi	cfdc <po_callback_comment_dispatcher@@Base+0x204>  // b.pmore
    cf6c:	mov	x23, xzr
    cf70:	mul	x9, x23, x26
    cf74:	add	x9, x9, w10, uxtb
    cf78:	ldrb	w10, [x19, #1]!
    cf7c:	sub	x23, x9, #0x30
    cf80:	sub	w11, w10, #0x30
    cf84:	cmp	w11, #0xa
    cf88:	b.cc	cf70 <po_callback_comment_dispatcher@@Base+0x198>  // b.lo, b.ul, b.last
    cf8c:	cmp	w10, #0x20
    cf90:	b.hi	cfdc <po_callback_comment_dispatcher@@Base+0x204>  // b.pmore
    cf94:	lsl	x9, x24, x10
    cf98:	tst	x9, x25
    cf9c:	b.eq	cfdc <po_callback_comment_dispatcher@@Base+0x204>  // b.none
    cfa0:	add	x0, x20, #0x1
    cfa4:	bl	a590 <xmalloc@plt>
    cfa8:	mov	x1, x27
    cfac:	mov	x2, x20
    cfb0:	mov	x22, x0
    cfb4:	bl	a040 <memcpy@plt>
    cfb8:	strb	wzr, [x22, x20]
    cfbc:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
    cfc0:	ldr	x0, [x8, #552]
    cfc4:	ldr	x8, [x0]
    cfc8:	ldr	x8, [x8, #72]
    cfcc:	cbz	x8, d1a4 <po_callback_comment_dispatcher@@Base+0x3cc>
    cfd0:	mov	x1, x22
    cfd4:	mov	x2, x23
    cfd8:	b	d1a0 <po_callback_comment_dispatcher@@Base+0x3c8>
    cfdc:	add	x9, x27, x20
    cfe0:	ldurb	w9, [x9, #-1]
    cfe4:	mov	x10, x20
    cfe8:	cmp	w9, #0x3a
    cfec:	mov	x9, x20
    cff0:	b.ne	d0c0 <po_callback_comment_dispatcher@@Base+0x2e8>  // b.any
    cff4:	and	w10, w8, #0xff
    cff8:	cmp	w10, #0x20
    cffc:	b.hi	d024 <po_callback_comment_dispatcher@@Base+0x24c>  // b.pmore
    d000:	and	x10, x8, #0xff
    d004:	lsl	x10, x24, x10
    d008:	tst	x10, x28
    d00c:	b.eq	d024 <po_callback_comment_dispatcher@@Base+0x24c>  // b.none
    d010:	add	x8, x27, x9
    d014:	ldrb	w8, [x8, #1]
    d018:	add	x9, x9, #0x1
    d01c:	add	x21, x21, #0x1
    d020:	b	cff4 <po_callback_comment_dispatcher@@Base+0x21c>
    d024:	sub	w9, w8, #0x30
    d028:	and	w9, w9, #0xff
    d02c:	cmp	w9, #0x9
    d030:	mov	x10, x20
    d034:	b.hi	d0c0 <po_callback_comment_dispatcher@@Base+0x2e8>  // b.pmore
    d038:	mov	x23, xzr
    d03c:	mul	x9, x23, x26
    d040:	add	x9, x9, w8, uxtb
    d044:	ldrb	w8, [x21, #1]!
    d048:	sub	x23, x9, #0x30
    d04c:	sub	w10, w8, #0x30
    d050:	cmp	w10, #0xa
    d054:	b.cc	d03c <po_callback_comment_dispatcher@@Base+0x264>  // b.lo, b.ul, b.last
    d058:	cmp	w8, #0x20
    d05c:	mov	x10, x20
    d060:	b.hi	d0c0 <po_callback_comment_dispatcher@@Base+0x2e8>  // b.pmore
    d064:	lsl	x8, x24, x8
    d068:	tst	x8, x25
    d06c:	mov	x10, x20
    d070:	b.eq	d0c0 <po_callback_comment_dispatcher@@Base+0x2e8>  // b.none
    d074:	mov	x0, x20
    d078:	mov	x19, x13
    d07c:	bl	a590 <xmalloc@plt>
    d080:	mov	x1, x27
    d084:	mov	x2, x19
    d088:	mov	x22, x0
    d08c:	bl	a040 <memcpy@plt>
    d090:	add	x8, x22, x20
    d094:	sturb	wzr, [x8, #-1]
    d098:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
    d09c:	ldr	x0, [x8, #552]
    d0a0:	ldr	x8, [x0]
    d0a4:	ldr	x8, [x8, #72]
    d0a8:	cbz	x8, d0b8 <po_callback_comment_dispatcher@@Base+0x2e0>
    d0ac:	mov	x1, x22
    d0b0:	mov	x2, x23
    d0b4:	blr	x8
    d0b8:	mov	x19, x21
    d0bc:	b	d1a4 <po_callback_comment_dispatcher@@Base+0x3cc>
    d0c0:	subs	x8, x10, #0x1
    d0c4:	b.lt	d164 <po_callback_comment_dispatcher@@Base+0x38c>  // b.tstop
    d0c8:	add	x9, x27, x10
    d0cc:	ldurb	w9, [x9, #-1]
    d0d0:	sub	w10, w9, #0x30
    d0d4:	cmp	w10, #0xa
    d0d8:	mov	x10, x8
    d0dc:	b.cc	d0c0 <po_callback_comment_dispatcher@@Base+0x2e8>  // b.lo, b.ul, b.last
    d0e0:	add	x10, x8, #0x1
    d0e4:	cmp	x10, x13
    d0e8:	b.gt	d164 <po_callback_comment_dispatcher@@Base+0x38c>
    d0ec:	cmp	x10, #0x2
    d0f0:	b.lt	d164 <po_callback_comment_dispatcher@@Base+0x38c>  // b.tstop
    d0f4:	cmp	w9, #0x3a
    d0f8:	b.ne	d164 <po_callback_comment_dispatcher@@Base+0x38c>  // b.any
    d0fc:	add	x9, x27, x8
    d100:	mov	x20, xzr
    d104:	add	x9, x9, #0x1
    d108:	add	x8, x27, x8
    d10c:	ldrb	w10, [x9], #1
    d110:	madd	x10, x20, x26, x10
    d114:	cmp	x9, x12
    d118:	sub	x20, x10, #0x30
    d11c:	b.cc	d10c <po_callback_comment_dispatcher@@Base+0x334>  // b.lo, b.ul, b.last
    d120:	sub	x21, x8, x27
    d124:	add	x0, x21, #0x1
    d128:	mov	x19, x12
    d12c:	bl	a590 <xmalloc@plt>
    d130:	mov	x1, x27
    d134:	mov	x2, x21
    d138:	mov	x22, x0
    d13c:	bl	a040 <memcpy@plt>
    d140:	strb	wzr, [x22, x21]
    d144:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
    d148:	ldr	x0, [x8, #552]
    d14c:	ldr	x8, [x0]
    d150:	ldr	x8, [x8, #72]
    d154:	cbz	x8, d1a4 <po_callback_comment_dispatcher@@Base+0x3cc>
    d158:	mov	x1, x22
    d15c:	mov	x2, x20
    d160:	b	d1a0 <po_callback_comment_dispatcher@@Base+0x3c8>
    d164:	add	x0, x20, #0x1
    d168:	mov	x19, x12
    d16c:	bl	a590 <xmalloc@plt>
    d170:	mov	x1, x27
    d174:	mov	x2, x20
    d178:	mov	x22, x0
    d17c:	bl	a040 <memcpy@plt>
    d180:	strb	wzr, [x22, x20]
    d184:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
    d188:	ldr	x0, [x8, #552]
    d18c:	ldr	x8, [x0]
    d190:	ldr	x8, [x8, #72]
    d194:	cbz	x8, d1a4 <po_callback_comment_dispatcher@@Base+0x3cc>
    d198:	mov	x2, #0xffffffffffffffff    	// #-1
    d19c:	mov	x1, x22
    d1a0:	blr	x8
    d1a4:	mov	x0, x22
    d1a8:	bl	aa00 <free@plt>
    d1ac:	mov	x27, x19
    d1b0:	ldrb	w8, [x27]
    d1b4:	cbnz	w8, ce94 <po_callback_comment_dispatcher@@Base+0xbc>
    d1b8:	b	d3d4 <po_callback_comment_dispatcher@@Base+0x5fc>
    d1bc:	ldrb	w9, [x27, #1]
    d1c0:	orr	w9, w9, #0x20
    d1c4:	cmp	w9, #0x66
    d1c8:	b.ne	d39c <po_callback_comment_dispatcher@@Base+0x5c4>  // b.any
    d1cc:	ldrb	w9, [x27, #2]
    d1d0:	cmp	w9, #0x69
    d1d4:	b.ne	d39c <po_callback_comment_dispatcher@@Base+0x5c4>  // b.any
    d1d8:	ldrb	w9, [x27, #3]
    d1dc:	cmp	w9, #0x6c
    d1e0:	b.ne	d39c <po_callback_comment_dispatcher@@Base+0x5c4>  // b.any
    d1e4:	ldrb	w9, [x27, #4]
    d1e8:	cmp	w9, #0x65
    d1ec:	b.ne	d39c <po_callback_comment_dispatcher@@Base+0x5c4>  // b.any
    d1f0:	ldrb	w9, [x27, #5]
    d1f4:	cmp	w9, #0x3a
    d1f8:	b.ne	d39c <po_callback_comment_dispatcher@@Base+0x5c4>  // b.any
    d1fc:	add	x20, x27, #0x6
    d200:	ldrb	w13, [x20]
    d204:	cmp	w13, #0x9
    d208:	b.eq	d214 <po_callback_comment_dispatcher@@Base+0x43c>  // b.none
    d20c:	cmp	w13, #0x20
    d210:	b.ne	d21c <po_callback_comment_dispatcher@@Base+0x444>  // b.any
    d214:	add	x20, x20, #0x1
    d218:	b	d200 <po_callback_comment_dispatcher@@Base+0x428>
    d21c:	cbz	w13, d39c <po_callback_comment_dispatcher@@Base+0x5c4>
    d220:	add	x9, x20, #0x5
    d224:	mov	w10, #0xa                   	// #10
    d228:	mov	x11, x20
    d22c:	mov	x12, x9
    d230:	mov	x14, x11
    d234:	and	w13, w13, #0xff
    d238:	cmp	w13, #0x9
    d23c:	b.eq	d248 <po_callback_comment_dispatcher@@Base+0x470>  // b.none
    d240:	cmp	w13, #0x20
    d244:	b.ne	d254 <po_callback_comment_dispatcher@@Base+0x47c>  // b.any
    d248:	ldrb	w13, [x14, #1]!
    d24c:	add	x12, x12, #0x1
    d250:	b	d234 <po_callback_comment_dispatcher@@Base+0x45c>
    d254:	cmp	w13, #0x2c
    d258:	b.ne	d390 <po_callback_comment_dispatcher@@Base+0x5b8>  // b.any
    d25c:	ldurb	w13, [x12, #-4]
    d260:	cmp	w13, #0x9
    d264:	b.eq	d270 <po_callback_comment_dispatcher@@Base+0x498>  // b.none
    d268:	cmp	w13, #0x20
    d26c:	b.ne	d278 <po_callback_comment_dispatcher@@Base+0x4a0>  // b.any
    d270:	add	x12, x12, #0x1
    d274:	b	d25c <po_callback_comment_dispatcher@@Base+0x484>
    d278:	cmp	w13, #0x6c
    d27c:	b.ne	d390 <po_callback_comment_dispatcher@@Base+0x5b8>  // b.any
    d280:	ldurb	w13, [x12, #-3]
    d284:	cmp	w13, #0x69
    d288:	b.ne	d390 <po_callback_comment_dispatcher@@Base+0x5b8>  // b.any
    d28c:	ldurb	w13, [x12, #-2]
    d290:	cmp	w13, #0x6e
    d294:	b.ne	d390 <po_callback_comment_dispatcher@@Base+0x5b8>  // b.any
    d298:	ldurb	w13, [x12, #-1]
    d29c:	cmp	w13, #0x65
    d2a0:	b.ne	d390 <po_callback_comment_dispatcher@@Base+0x5b8>  // b.any
    d2a4:	ldrb	w13, [x12]
    d2a8:	cmp	w13, #0x9
    d2ac:	b.eq	d2b8 <po_callback_comment_dispatcher@@Base+0x4e0>  // b.none
    d2b0:	cmp	w13, #0x20
    d2b4:	b.ne	d2c0 <po_callback_comment_dispatcher@@Base+0x4e8>  // b.any
    d2b8:	add	x12, x12, #0x1
    d2bc:	b	d2a4 <po_callback_comment_dispatcher@@Base+0x4cc>
    d2c0:	cmp	w13, #0x6e
    d2c4:	b.ne	d324 <po_callback_comment_dispatcher@@Base+0x54c>  // b.any
    d2c8:	ldrb	w13, [x12, #1]
    d2cc:	cmp	w13, #0x75
    d2d0:	b.ne	d390 <po_callback_comment_dispatcher@@Base+0x5b8>  // b.any
    d2d4:	ldrb	w13, [x12, #2]
    d2d8:	cmp	w13, #0x6d
    d2dc:	b.ne	d390 <po_callback_comment_dispatcher@@Base+0x5b8>  // b.any
    d2e0:	ldrb	w13, [x12, #3]
    d2e4:	cmp	w13, #0x62
    d2e8:	b.ne	d390 <po_callback_comment_dispatcher@@Base+0x5b8>  // b.any
    d2ec:	ldrb	w13, [x12, #4]
    d2f0:	cmp	w13, #0x65
    d2f4:	b.ne	d390 <po_callback_comment_dispatcher@@Base+0x5b8>  // b.any
    d2f8:	ldrb	w13, [x12, #5]
    d2fc:	cmp	w13, #0x72
    d300:	b.ne	d390 <po_callback_comment_dispatcher@@Base+0x5b8>  // b.any
    d304:	add	x12, x12, #0x6
    d308:	ldrb	w13, [x12]
    d30c:	cmp	w13, #0x20
    d310:	b.eq	d31c <po_callback_comment_dispatcher@@Base+0x544>  // b.none
    d314:	cmp	w13, #0x9
    d318:	b.ne	d324 <po_callback_comment_dispatcher@@Base+0x54c>  // b.any
    d31c:	add	x12, x12, #0x1
    d320:	b	d308 <po_callback_comment_dispatcher@@Base+0x530>
    d324:	cmp	w13, #0x3a
    d328:	b.ne	d390 <po_callback_comment_dispatcher@@Base+0x5b8>  // b.any
    d32c:	mov	x14, x12
    d330:	ldrb	w13, [x14, #1]!
    d334:	sub	w15, w13, #0x30
    d338:	cmp	w15, #0x9
    d33c:	b.hi	d390 <po_callback_comment_dispatcher@@Base+0x5b8>  // b.pmore
    d340:	mov	x21, xzr
    d344:	add	x15, x12, #0x3
    d348:	mul	x12, x21, x10
    d34c:	add	x16, x12, w13, uxtb
    d350:	ldrb	w13, [x14, #1]!
    d354:	mov	x12, x15
    d358:	sub	x21, x16, #0x30
    d35c:	sub	w15, w13, #0x30
    d360:	cmp	w15, #0xa
    d364:	add	x15, x12, #0x1
    d368:	b.cc	d348 <po_callback_comment_dispatcher@@Base+0x570>  // b.lo, b.ul, b.last
    d36c:	b	d374 <po_callback_comment_dispatcher@@Base+0x59c>
    d370:	ldrb	w13, [x12], #1
    d374:	and	w13, w13, #0xff
    d378:	sub	w14, w13, #0x9
    d37c:	cmp	w14, #0x2
    d380:	b.cc	d370 <po_callback_comment_dispatcher@@Base+0x598>  // b.lo, b.ul, b.last
    d384:	cmp	w13, #0x20
    d388:	b.eq	d370 <po_callback_comment_dispatcher@@Base+0x598>  // b.none
    d38c:	cbz	w13, d3f0 <po_callback_comment_dispatcher@@Base+0x618>
    d390:	ldrb	w13, [x11, #1]!
    d394:	add	x9, x9, #0x1
    d398:	cbnz	w13, d22c <po_callback_comment_dispatcher@@Base+0x454>
    d39c:	adrp	x9, 4e000 <formatstring_gfc_internal@@Base+0x10>
    d3a0:	ldr	x0, [x9, #552]
    d3a4:	ldr	x9, [x0]
    d3a8:	ldr	x2, [x9, #56]
    d3ac:	cbz	x2, d3d4 <po_callback_comment_dispatcher@@Base+0x5fc>
    d3b0:	cmp	w8, #0x20
    d3b4:	cinc	x1, x27, eq  // eq = none
    d3b8:	ldp	x20, x19, [sp, #80]
    d3bc:	ldp	x22, x21, [sp, #64]
    d3c0:	ldp	x24, x23, [sp, #48]
    d3c4:	ldp	x26, x25, [sp, #32]
    d3c8:	ldp	x28, x27, [sp, #16]
    d3cc:	ldp	x29, x30, [sp], #96
    d3d0:	br	x2
    d3d4:	ldp	x20, x19, [sp, #80]
    d3d8:	ldp	x22, x21, [sp, #64]
    d3dc:	ldp	x24, x23, [sp, #48]
    d3e0:	ldp	x26, x25, [sp, #32]
    d3e4:	ldp	x28, x27, [sp, #16]
    d3e8:	ldp	x29, x30, [sp], #96
    d3ec:	ret
    d3f0:	sub	x22, x11, x20
    d3f4:	add	x0, x22, #0x1
    d3f8:	bl	a590 <xmalloc@plt>
    d3fc:	mov	x1, x20
    d400:	mov	x2, x22
    d404:	mov	x19, x0
    d408:	bl	a040 <memcpy@plt>
    d40c:	strb	wzr, [x19, x22]
    d410:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
    d414:	ldr	x0, [x8, #552]
    d418:	ldr	x8, [x0]
    d41c:	ldr	x8, [x8, #72]
    d420:	cbz	x8, d430 <po_callback_comment_dispatcher@@Base+0x658>
    d424:	mov	x1, x19
    d428:	mov	x2, x21
    d42c:	blr	x8
    d430:	mov	x0, x19
    d434:	ldp	x20, x19, [sp, #80]
    d438:	ldp	x22, x21, [sp, #64]
    d43c:	ldp	x24, x23, [sp, #48]
    d440:	ldp	x26, x25, [sp, #32]
    d444:	ldp	x28, x27, [sp, #16]
    d448:	ldp	x29, x30, [sp], #96
    d44c:	b	aa00 <free@plt>

000000000000d450 <po_gram_error@@Base>:
    d450:	sub	sp, sp, #0x130
    d454:	stp	x29, x30, [sp, #272]
    d458:	add	x29, sp, #0x110
    d45c:	add	x10, sp, #0x88
    d460:	mov	x11, sp
    d464:	mov	x12, #0xffffffffffffffc8    	// #-56
    d468:	add	x9, x29, #0x20
    d46c:	movk	x12, #0xff80, lsl #32
    d470:	add	x10, x10, #0x38
    d474:	add	x11, x11, #0x80
    d478:	stp	x9, x10, [x29, #-32]
    d47c:	stp	x11, x12, [x29, #-16]
    d480:	stp	q0, q1, [sp]
    d484:	ldp	q0, q1, [x29, #-32]
    d488:	mov	x8, x0
    d48c:	stp	x1, x2, [sp, #136]
    d490:	sub	x0, x29, #0x28
    d494:	sub	x2, x29, #0x50
    d498:	mov	x1, x8
    d49c:	stp	x28, x19, [sp, #288]
    d4a0:	stp	x3, x4, [sp, #152]
    d4a4:	stp	x5, x6, [sp, #168]
    d4a8:	str	x7, [sp, #184]
    d4ac:	stp	q2, q3, [sp, #32]
    d4b0:	stp	q4, q5, [sp, #64]
    d4b4:	stp	q6, q7, [sp, #96]
    d4b8:	stp	q0, q1, [x29, #-80]
    d4bc:	bl	aa40 <vasprintf@plt>
    d4c0:	tbz	w0, #31, d4e8 <po_gram_error@@Base+0x98>
    d4c4:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    d4c8:	add	x1, x1, #0xb16
    d4cc:	mov	w2, #0x5                   	// #5
    d4d0:	mov	x0, xzr
    d4d4:	bl	acd0 <dcgettext@plt>
    d4d8:	mov	x2, x0
    d4dc:	mov	w0, #0x1                   	// #1
    d4e0:	mov	w1, wzr
    d4e4:	bl	a140 <error@plt>
    d4e8:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    d4ec:	adrp	x9, 4c000 <plural_table_size@@Base+0x12c00>
    d4f0:	adrp	x10, 4c000 <plural_table_size@@Base+0x12c00>
    d4f4:	ldr	x8, [x8, #3736]
    d4f8:	ldr	x9, [x9, #4000]
    d4fc:	ldr	x10, [x10, #3960]
    d500:	ldur	x6, [x29, #-40]
    d504:	ldr	x8, [x8]
    d508:	ldp	x2, x3, [x9]
    d50c:	ldrsw	x9, [x10]
    d510:	mov	w0, #0x1                   	// #1
    d514:	mov	x1, xzr
    d518:	mov	w5, wzr
    d51c:	add	x4, x9, #0x1
    d520:	blr	x8
    d524:	ldur	x0, [x29, #-40]
    d528:	bl	aa00 <free@plt>
    d52c:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    d530:	adrp	x9, 4c000 <plural_table_size@@Base+0x12c00>
    d534:	ldr	x8, [x8, #3784]
    d538:	ldr	x9, [x9, #3688]
    d53c:	ldr	w8, [x8]
    d540:	ldr	w9, [x9]
    d544:	cmp	w8, w9
    d548:	b.cc	d57c <po_gram_error@@Base+0x12c>  // b.lo, b.ul, b.last
    d54c:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    d550:	ldr	x8, [x8, #3696]
    d554:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    d558:	add	x1, x1, #0xb27
    d55c:	mov	w2, #0x5                   	// #5
    d560:	ldr	x19, [x8]
    d564:	mov	x0, xzr
    d568:	bl	acd0 <dcgettext@plt>
    d56c:	mov	x2, x0
    d570:	mov	w0, #0x1                   	// #1
    d574:	mov	w1, wzr
    d578:	blr	x19
    d57c:	ldp	x28, x19, [sp, #288]
    d580:	ldp	x29, x30, [sp, #272]
    d584:	add	sp, sp, #0x130
    d588:	ret

000000000000d58c <po_gram_error_at_line@@Base>:
    d58c:	sub	sp, sp, #0x120
    d590:	stp	x29, x30, [sp, #256]
    d594:	add	x29, sp, #0x100
    d598:	add	x9, sp, #0x80
    d59c:	mov	x10, sp
    d5a0:	mov	x11, #0xffffffffffffffd0    	// #-48
    d5a4:	add	x8, x29, #0x20
    d5a8:	movk	x11, #0xff80, lsl #32
    d5ac:	add	x9, x9, #0x30
    d5b0:	add	x10, x10, #0x80
    d5b4:	stp	x8, x9, [x29, #-32]
    d5b8:	stp	x10, x11, [x29, #-16]
    d5bc:	stp	q1, q2, [sp, #16]
    d5c0:	str	q0, [sp]
    d5c4:	ldp	q0, q1, [x29, #-32]
    d5c8:	stp	x28, x19, [sp, #272]
    d5cc:	mov	x19, x0
    d5d0:	stp	x2, x3, [sp, #128]
    d5d4:	sub	x0, x29, #0x28
    d5d8:	sub	x2, x29, #0x50
    d5dc:	stp	x4, x5, [sp, #144]
    d5e0:	stp	x6, x7, [sp, #160]
    d5e4:	stp	q3, q4, [sp, #48]
    d5e8:	stp	q5, q6, [sp, #80]
    d5ec:	str	q7, [sp, #112]
    d5f0:	stp	q0, q1, [x29, #-80]
    d5f4:	bl	aa40 <vasprintf@plt>
    d5f8:	tbz	w0, #31, d620 <po_gram_error_at_line@@Base+0x94>
    d5fc:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    d600:	add	x1, x1, #0xb16
    d604:	mov	w2, #0x5                   	// #5
    d608:	mov	x0, xzr
    d60c:	bl	acd0 <dcgettext@plt>
    d610:	mov	x2, x0
    d614:	mov	w0, #0x1                   	// #1
    d618:	mov	w1, wzr
    d61c:	bl	a140 <error@plt>
    d620:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    d624:	ldr	x8, [x8, #3736]
    d628:	ldp	x2, x3, [x19]
    d62c:	ldur	x6, [x29, #-40]
    d630:	mov	w0, #0x1                   	// #1
    d634:	ldr	x8, [x8]
    d638:	mov	x4, #0xffffffffffffffff    	// #-1
    d63c:	mov	x1, xzr
    d640:	mov	w5, wzr
    d644:	blr	x8
    d648:	ldur	x0, [x29, #-40]
    d64c:	bl	aa00 <free@plt>
    d650:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    d654:	adrp	x9, 4c000 <plural_table_size@@Base+0x12c00>
    d658:	ldr	x8, [x8, #3784]
    d65c:	ldr	x9, [x9, #3688]
    d660:	ldr	w8, [x8]
    d664:	ldr	w9, [x9]
    d668:	cmp	w8, w9
    d66c:	b.cc	d6a0 <po_gram_error_at_line@@Base+0x114>  // b.lo, b.ul, b.last
    d670:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    d674:	ldr	x8, [x8, #3696]
    d678:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    d67c:	add	x1, x1, #0xb27
    d680:	mov	w2, #0x5                   	// #5
    d684:	ldr	x19, [x8]
    d688:	mov	x0, xzr
    d68c:	bl	acd0 <dcgettext@plt>
    d690:	mov	x2, x0
    d694:	mov	w0, #0x1                   	// #1
    d698:	mov	w1, wzr
    d69c:	blr	x19
    d6a0:	ldp	x28, x19, [sp, #272]
    d6a4:	ldp	x29, x30, [sp, #256]
    d6a8:	add	sp, sp, #0x120
    d6ac:	ret

000000000000d6b0 <lex_start@@Base>:
    d6b0:	stp	x29, x30, [sp, #-32]!
    d6b4:	str	x19, [sp, #16]
    d6b8:	mov	x19, x0
    d6bc:	mov	x0, x1
    d6c0:	mov	x29, sp
    d6c4:	bl	a5a0 <xstrdup@plt>
    d6c8:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    d6cc:	ldr	x8, [x8, #4000]
    d6d0:	mov	w9, #0x1                   	// #1
    d6d4:	adrp	x10, 4e000 <formatstring_gfc_internal@@Base+0x10>
    d6d8:	stp	x0, x9, [x8]
    d6dc:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
    d6e0:	strb	w9, [x8, #696]
    d6e4:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
    d6e8:	add	x8, x8, #0x238
    d6ec:	adrp	x9, 4c000 <plural_table_size@@Base+0x12c00>
    d6f0:	ldr	x9, [x9, #3960]
    d6f4:	stp	wzr, wzr, [x8, #12]
    d6f8:	str	x19, [x8]
    d6fc:	ldr	x19, [sp, #16]
    d700:	strb	wzr, [x8, #8]
    d704:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
    d708:	str	wzr, [x9]
    d70c:	strb	wzr, [x10, #697]
    d710:	strb	wzr, [x8, #698]
    d714:	ldp	x29, x30, [sp], #32
    d718:	b	a840 <po_lex_charset_init@plt>

000000000000d71c <lex_end@@Base>:
    d71c:	adrp	x9, 4c000 <plural_table_size@@Base+0x12c00>
    d720:	adrp	x10, 4c000 <plural_table_size@@Base+0x12c00>
    d724:	ldr	x9, [x9, #4000]
    d728:	ldr	x10, [x10, #3960]
    d72c:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
    d730:	adrp	x11, 4e000 <formatstring_gfc_internal@@Base+0x10>
    d734:	adrp	x12, 4e000 <formatstring_gfc_internal@@Base+0x10>
    d738:	adrp	x13, 4e000 <formatstring_gfc_internal@@Base+0x10>
    d73c:	str	xzr, [x8, #568]
    d740:	stp	xzr, xzr, [x9]
    d744:	str	wzr, [x10]
    d748:	strb	wzr, [x11, #696]
    d74c:	strb	wzr, [x12, #697]
    d750:	strb	wzr, [x13, #698]
    d754:	b	abd0 <po_lex_charset_close@plt>

000000000000d758 <po_gram_lex@@Base>:
    d758:	sub	sp, sp, #0xb0
    d75c:	stp	x20, x19, [sp, #160]
    d760:	adrp	x20, 36000 <its_merge_context_free@@Base+0x1328>
    d764:	stp	x24, x23, [sp, #128]
    d768:	stp	x22, x21, [sp, #144]
    d76c:	add	x20, x20, #0x9d0
    d770:	adrp	x21, 4e000 <formatstring_gfc_internal@@Base+0x10>
    d774:	adrp	x22, 4e000 <formatstring_gfc_internal@@Base+0x10>
    d778:	mov	w23, #0x1                   	// #1
    d77c:	adrp	x19, 4e000 <formatstring_gfc_internal@@Base+0x10>
    d780:	adrp	x24, 4e000 <formatstring_gfc_internal@@Base+0x10>
    d784:	stp	x29, x30, [sp, #80]
    d788:	stp	x28, x27, [sp, #96]
    d78c:	stp	x26, x25, [sp, #112]
    d790:	add	x29, sp, #0x50
    d794:	mov	x0, sp
    d798:	bl	dfd4 <po_gram_lex@@Base+0x87c>
    d79c:	ldr	x8, [sp]
    d7a0:	cmp	x8, #0x1
    d7a4:	b.ne	d87c <po_gram_lex@@Base+0x124>  // b.any
    d7a8:	ldrb	w25, [sp, #16]
    d7ac:	mov	w0, #0x104                 	// #260
    d7b0:	sub	w8, w25, #0x9
    d7b4:	cmp	w8, #0x71
    d7b8:	b.hi	dc14 <po_gram_lex@@Base+0x4bc>  // b.pmore
    d7bc:	adr	x9, d794 <po_gram_lex@@Base+0x3c>
    d7c0:	ldrh	w10, [x20, x8, lsl #1]
    d7c4:	add	x9, x9, x10, lsl #2
    d7c8:	br	x9
    d7cc:	strb	wzr, [x21, #697]
    d7d0:	strb	wzr, [x22, #698]
    d7d4:	b	d794 <po_gram_lex@@Base+0x3c>
    d7d8:	mov	x0, sp
    d7dc:	bl	dfd4 <po_gram_lex@@Base+0x87c>
    d7e0:	ldr	x8, [sp]
    d7e4:	cmp	x8, #0x1
    d7e8:	b.ne	d82c <po_gram_lex@@Base+0xd4>  // b.any
    d7ec:	ldrb	w9, [sp, #16]
    d7f0:	cmp	w9, #0x7c
    d7f4:	b.eq	d824 <po_gram_lex@@Base+0xcc>  // b.none
    d7f8:	cmp	w9, #0x7e
    d7fc:	b.ne	d82c <po_gram_lex@@Base+0xd4>  // b.any
    d800:	mov	x0, sp
    d804:	strb	w23, [x21, #697]
    d808:	bl	dfd4 <po_gram_lex@@Base+0x87c>
    d80c:	ldr	x8, [sp]
    d810:	cmp	x8, #0x1
    d814:	b.ne	d870 <po_gram_lex@@Base+0x118>  // b.any
    d818:	ldrb	w8, [sp, #16]
    d81c:	cmp	w8, #0x7c
    d820:	b.ne	d870 <po_gram_lex@@Base+0x118>  // b.any
    d824:	strb	w23, [x22, #698]
    d828:	b	d794 <po_gram_lex@@Base+0x3c>
    d82c:	ldrb	w9, [x24, #720]
    d830:	strb	wzr, [x19, #696]
    d834:	cbnz	w9, da28 <po_gram_lex@@Base+0x2d0>
    d838:	cmp	x8, #0x1
    d83c:	b.eq	d848 <po_gram_lex@@Base+0xf0>  // b.none
    d840:	cbnz	x8, d854 <po_gram_lex@@Base+0xfc>
    d844:	b	d864 <po_gram_lex@@Base+0x10c>
    d848:	ldrb	w8, [sp, #16]
    d84c:	cmp	w8, #0xa
    d850:	b.eq	d864 <po_gram_lex@@Base+0x10c>  // b.none
    d854:	mov	x0, sp
    d858:	bl	dfd4 <po_gram_lex@@Base+0x87c>
    d85c:	ldr	x8, [sp]
    d860:	b	d838 <po_gram_lex@@Base+0xe0>
    d864:	strb	wzr, [x21, #697]
    d868:	strb	w23, [x19, #696]
    d86c:	b	d794 <po_gram_lex@@Base+0x3c>
    d870:	mov	x0, sp
    d874:	bl	e150 <po_gram_lex@@Base+0x9f8>
    d878:	b	d794 <po_gram_lex@@Base+0x3c>
    d87c:	cbnz	x8, d888 <po_gram_lex@@Base+0x130>
    d880:	mov	w0, wzr
    d884:	b	dc14 <po_gram_lex@@Base+0x4bc>
    d888:	mov	w0, #0x104                 	// #260
    d88c:	b	dc14 <po_gram_lex@@Base+0x4bc>
    d890:	adrp	x24, 36000 <its_merge_context_free@@Base+0x1328>
    d894:	mov	x19, xzr
    d898:	adrp	x20, 4e000 <formatstring_gfc_internal@@Base+0x10>
    d89c:	adrp	x23, 4e000 <formatstring_gfc_internal@@Base+0x10>
    d8a0:	add	x24, x24, #0xab4
    d8a4:	ldr	x8, [x20, #712]
    d8a8:	mov	x26, x19
    d8ac:	add	x19, x19, #0x1
    d8b0:	cmp	x19, x8
    d8b4:	b.cs	d8c0 <po_gram_lex@@Base+0x168>  // b.hs, b.nlast
    d8b8:	ldr	x0, [x23, #704]
    d8bc:	b	d8d4 <po_gram_lex@@Base+0x17c>
    d8c0:	ldr	x0, [x23, #704]
    d8c4:	add	x1, x8, #0x64
    d8c8:	str	x1, [x20, #712]
    d8cc:	bl	a460 <xrealloc@plt>
    d8d0:	str	x0, [x23, #704]
    d8d4:	strb	w25, [x0, x26]
    d8d8:	mov	x0, sp
    d8dc:	bl	dfd4 <po_gram_lex@@Base+0x87c>
    d8e0:	ldr	x8, [sp]
    d8e4:	cmp	x8, #0x1
    d8e8:	b.ne	d90c <po_gram_lex@@Base+0x1b4>  // b.any
    d8ec:	ldrb	w25, [sp, #16]
    d8f0:	sub	w8, w25, #0x24
    d8f4:	cmp	w8, #0x56
    d8f8:	b.hi	d90c <po_gram_lex@@Base+0x1b4>  // b.pmore
    d8fc:	adr	x9, d8a4 <po_gram_lex@@Base+0x14c>
    d900:	ldrb	w10, [x24, x8]
    d904:	add	x9, x9, x10, lsl #2
    d908:	br	x9
    d90c:	mov	x0, sp
    d910:	bl	e150 <po_gram_lex@@Base+0x9f8>
    d914:	ldr	x19, [x23, #704]
    d918:	add	x8, x19, x26
    d91c:	strb	wzr, [x8, #1]
    d920:	ldrb	w8, [x22, #698]
    d924:	tbz	w8, #0, d96c <po_gram_lex@@Base+0x214>
    d928:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    d92c:	add	x1, x1, #0xc57
    d930:	mov	x0, x19
    d934:	bl	a8d0 <strcmp@plt>
    d938:	cbz	w0, db14 <po_gram_lex@@Base+0x3bc>
    d93c:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    d940:	add	x1, x1, #0xc5d
    d944:	mov	x0, x19
    d948:	bl	a8d0 <strcmp@plt>
    d94c:	cbz	w0, dbd0 <po_gram_lex@@Base+0x478>
    d950:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    d954:	add	x1, x1, #0xc71
    d958:	mov	x0, x19
    d95c:	bl	a8d0 <strcmp@plt>
    d960:	cbnz	w0, d9d0 <po_gram_lex@@Base+0x278>
    d964:	mov	w0, #0x105                 	// #261
    d968:	b	dbf4 <po_gram_lex@@Base+0x49c>
    d96c:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    d970:	add	x1, x1, #0xc50
    d974:	mov	x0, x19
    d978:	bl	a8d0 <strcmp@plt>
    d97c:	cbz	w0, db1c <po_gram_lex@@Base+0x3c4>
    d980:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    d984:	add	x1, x1, #0xc57
    d988:	mov	x0, x19
    d98c:	bl	a8d0 <strcmp@plt>
    d990:	cbz	w0, dbd8 <po_gram_lex@@Base+0x480>
    d994:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    d998:	add	x1, x1, #0xc5d
    d99c:	mov	x0, x19
    d9a0:	bl	a8d0 <strcmp@plt>
    d9a4:	cbz	w0, dbe0 <po_gram_lex@@Base+0x488>
    d9a8:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    d9ac:	add	x1, x1, #0xc6a
    d9b0:	mov	x0, x19
    d9b4:	bl	a8d0 <strcmp@plt>
    d9b8:	cbz	w0, dbe8 <po_gram_lex@@Base+0x490>
    d9bc:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    d9c0:	add	x1, x1, #0xc71
    d9c4:	mov	x0, x19
    d9c8:	bl	a8d0 <strcmp@plt>
    d9cc:	cbz	w0, dbf0 <po_gram_lex@@Base+0x498>
    d9d0:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    d9d4:	add	x1, x1, #0xc79
    d9d8:	mov	w2, #0x5                   	// #5
    d9dc:	mov	x0, xzr
    d9e0:	bl	acd0 <dcgettext@plt>
    d9e4:	adrp	x20, 4c000 <plural_table_size@@Base+0x12c00>
    d9e8:	ldr	x20, [x20, #4000]
    d9ec:	mov	x1, x0
    d9f0:	mov	x2, x19
    d9f4:	mov	x0, x20
    d9f8:	bl	a500 <po_gram_error_at_line@plt>
    d9fc:	ldr	x0, [x23, #704]
    da00:	bl	a5a0 <xstrdup@plt>
    da04:	adrp	x9, 4c000 <plural_table_size@@Base+0x12c00>
    da08:	ldr	q0, [x20]
    da0c:	ldrb	w8, [x21, #697]
    da10:	ldr	x9, [x9, #4016]
    da14:	str	x0, [x9]
    da18:	stur	q0, [x9, #8]
    da1c:	strb	w8, [x9, #24]
    da20:	mov	w0, #0x10d                 	// #269
    da24:	b	dc14 <po_gram_lex@@Base+0x4bc>
    da28:	mov	x9, sp
    da2c:	mov	x20, xzr
    da30:	adrp	x23, 4e000 <formatstring_gfc_internal@@Base+0x10>
    da34:	add	x24, x9, #0x11
    da38:	adrp	x22, 4e000 <formatstring_gfc_internal@@Base+0x10>
    da3c:	ldr	x9, [x23, #712]
    da40:	add	x10, x8, x20
    da44:	cmp	x10, x9
    da48:	b.cc	da74 <po_gram_lex@@Base+0x31c>  // b.lo, b.ul, b.last
    da4c:	ldr	x0, [x22, #704]
    da50:	add	x1, x9, #0x64
    da54:	str	x1, [x23, #712]
    da58:	bl	a460 <xrealloc@plt>
    da5c:	ldr	x8, [sp]
    da60:	ldr	x9, [x23, #712]
    da64:	str	x0, [x22, #704]
    da68:	add	x10, x8, x20
    da6c:	cmp	x10, x9
    da70:	b.cs	da50 <po_gram_lex@@Base+0x2f8>  // b.hs, b.nlast
    da74:	subs	x9, x8, #0x1
    da78:	b.eq	daa8 <po_gram_lex@@Base+0x350>  // b.none
    da7c:	cbz	x8, dad4 <po_gram_lex@@Base+0x37c>
    da80:	ldr	x8, [x22, #704]
    da84:	ldrb	w10, [sp, #16]
    da88:	add	x8, x8, x20
    da8c:	strb	w10, [x8], #1
    da90:	mov	x10, x24
    da94:	ldrb	w11, [x10], #1
    da98:	subs	x9, x9, #0x1
    da9c:	strb	w11, [x8], #1
    daa0:	b.ne	da94 <po_gram_lex@@Base+0x33c>  // b.any
    daa4:	b	dabc <po_gram_lex@@Base+0x364>
    daa8:	ldrb	w8, [sp, #16]
    daac:	cmp	w8, #0xa
    dab0:	b.eq	dad4 <po_gram_lex@@Base+0x37c>  // b.none
    dab4:	ldr	x9, [x22, #704]
    dab8:	strb	w8, [x9, x20]
    dabc:	ldr	x8, [sp]
    dac0:	mov	x0, sp
    dac4:	add	x20, x8, x20
    dac8:	bl	dfd4 <po_gram_lex@@Base+0x87c>
    dacc:	ldr	x8, [sp]
    dad0:	b	da3c <po_gram_lex@@Base+0x2e4>
    dad4:	ldr	x8, [x22, #704]
    dad8:	adrp	x9, 4c000 <plural_table_size@@Base+0x12c00>
    dadc:	adrp	x10, 4c000 <plural_table_size@@Base+0x12c00>
    dae0:	ldr	x9, [x9, #4016]
    dae4:	ldr	x10, [x10, #4000]
    dae8:	strb	wzr, [x8, x20]
    daec:	mov	w11, #0x1                   	// #1
    daf0:	str	x8, [x9]
    daf4:	ldr	q0, [x10]
    daf8:	ldrb	w8, [x21, #697]
    dafc:	strb	w11, [x19, #696]
    db00:	strb	wzr, [x21, #697]
    db04:	stur	q0, [x9, #8]
    db08:	strb	w8, [x9, #24]
    db0c:	mov	w0, #0x102                 	// #258
    db10:	b	dc14 <po_gram_lex@@Base+0x4bc>
    db14:	mov	w0, #0x106                 	// #262
    db18:	b	dbf4 <po_gram_lex@@Base+0x49c>
    db1c:	mov	w0, #0x103                 	// #259
    db20:	b	dbf4 <po_gram_lex@@Base+0x49c>
    db24:	mov	x20, xzr
    db28:	adrp	x22, 4e000 <formatstring_gfc_internal@@Base+0x10>
    db2c:	adrp	x19, 4e000 <formatstring_gfc_internal@@Base+0x10>
    db30:	ldr	x8, [x22, #712]
    db34:	mov	x23, x20
    db38:	add	x20, x20, #0x1
    db3c:	cmp	x20, x8
    db40:	b.cs	db4c <po_gram_lex@@Base+0x3f4>  // b.hs, b.nlast
    db44:	ldr	x0, [x19, #704]
    db48:	b	db64 <po_gram_lex@@Base+0x40c>
    db4c:	ldr	x0, [x19, #704]
    db50:	add	x9, x8, #0x64
    db54:	add	x1, x8, #0x65
    db58:	str	x9, [x22, #712]
    db5c:	bl	a460 <xrealloc@plt>
    db60:	str	x0, [x19, #704]
    db64:	strb	w25, [x0, x23]
    db68:	mov	x0, sp
    db6c:	bl	dfd4 <po_gram_lex@@Base+0x87c>
    db70:	ldr	x8, [sp]
    db74:	cmp	x8, #0x1
    db78:	b.ne	db8c <po_gram_lex@@Base+0x434>  // b.any
    db7c:	ldrb	w25, [sp, #16]
    db80:	sub	w8, w25, #0x30
    db84:	cmp	w8, #0xa
    db88:	b.cc	db30 <po_gram_lex@@Base+0x3d8>  // b.lo, b.ul, b.last
    db8c:	mov	x0, sp
    db90:	bl	e150 <po_gram_lex@@Base+0x9f8>
    db94:	ldr	x0, [x19, #704]
    db98:	add	x8, x0, x23
    db9c:	strb	wzr, [x8, #1]
    dba0:	bl	a790 <atol@plt>
    dba4:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    dba8:	ldr	x8, [x8, #4000]
    dbac:	ldrb	w9, [x21, #697]
    dbb0:	ldr	q0, [x8]
    dbb4:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    dbb8:	ldr	x8, [x8, #4016]
    dbbc:	str	x0, [x8]
    dbc0:	strb	w9, [x8, #24]
    dbc4:	stur	q0, [x8, #8]
    dbc8:	mov	w0, #0x10e                 	// #270
    dbcc:	b	dc14 <po_gram_lex@@Base+0x4bc>
    dbd0:	mov	w0, #0x107                 	// #263
    dbd4:	b	dbf4 <po_gram_lex@@Base+0x49c>
    dbd8:	mov	w0, #0x10a                 	// #266
    dbdc:	b	dbf4 <po_gram_lex@@Base+0x49c>
    dbe0:	mov	w0, #0x10b                 	// #267
    dbe4:	b	dbf4 <po_gram_lex@@Base+0x49c>
    dbe8:	mov	w0, #0x10c                 	// #268
    dbec:	b	dbf4 <po_gram_lex@@Base+0x49c>
    dbf0:	mov	w0, #0x109                 	// #265
    dbf4:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    dbf8:	ldr	x8, [x8, #4000]
    dbfc:	adrp	x9, 4c000 <plural_table_size@@Base+0x12c00>
    dc00:	ldr	q0, [x8]
    dc04:	ldrb	w8, [x21, #697]
    dc08:	ldr	x9, [x9, #4016]
    dc0c:	str	q0, [x9]
    dc10:	strb	w8, [x9, #16]
    dc14:	ldp	x20, x19, [sp, #160]
    dc18:	ldp	x22, x21, [sp, #144]
    dc1c:	ldp	x24, x23, [sp, #128]
    dc20:	ldp	x26, x25, [sp, #112]
    dc24:	ldp	x28, x27, [sp, #96]
    dc28:	ldp	x29, x30, [sp, #80]
    dc2c:	add	sp, sp, #0xb0
    dc30:	ret
    dc34:	mov	x8, sp
    dc38:	adrp	x19, 36000 <its_merge_context_free@@Base+0x1328>
    dc3c:	adrp	x20, 36000 <its_merge_context_free@@Base+0x1328>
    dc40:	mov	x24, xzr
    dc44:	adrp	x26, 4e000 <formatstring_gfc_internal@@Base+0x10>
    dc48:	add	x19, x19, #0xb41
    dc4c:	adrp	x23, 4e000 <formatstring_gfc_internal@@Base+0x10>
    dc50:	add	x27, x8, #0x11
    dc54:	add	x20, x20, #0xc37
    dc58:	mov	x0, sp
    dc5c:	bl	dfd4 <po_gram_lex@@Base+0x87c>
    dc60:	ldr	x9, [sp]
    dc64:	ldr	x8, [x26, #712]
    dc68:	add	x10, x9, x24
    dc6c:	cmp	x10, x8
    dc70:	b.cc	dc9c <po_gram_lex@@Base+0x544>  // b.lo, b.ul, b.last
    dc74:	ldr	x0, [x23, #704]
    dc78:	add	x1, x8, #0x64
    dc7c:	str	x1, [x26, #712]
    dc80:	bl	a460 <xrealloc@plt>
    dc84:	ldr	x9, [sp]
    dc88:	ldr	x8, [x26, #712]
    dc8c:	str	x0, [x23, #704]
    dc90:	add	x10, x9, x24
    dc94:	cmp	x10, x8
    dc98:	b.cs	dc78 <po_gram_lex@@Base+0x520>  // b.hs, b.nlast
    dc9c:	subs	x8, x9, #0x1
    dca0:	b.eq	dcd0 <po_gram_lex@@Base+0x578>  // b.none
    dca4:	cbz	x9, df30 <po_gram_lex@@Base+0x7d8>
    dca8:	ldr	x9, [x23, #704]
    dcac:	ldrb	w10, [sp, #16]
    dcb0:	add	x9, x9, x24
    dcb4:	strb	w10, [x9], #1
    dcb8:	mov	x10, x27
    dcbc:	ldrb	w11, [x10], #1
    dcc0:	subs	x8, x8, #0x1
    dcc4:	strb	w11, [x9], #1
    dcc8:	b.ne	dcbc <po_gram_lex@@Base+0x564>  // b.any
    dccc:	b	dcf4 <po_gram_lex@@Base+0x59c>
    dcd0:	ldrb	w8, [sp, #16]
    dcd4:	cmp	w8, #0x5c
    dcd8:	b.eq	dd00 <po_gram_lex@@Base+0x5a8>  // b.none
    dcdc:	cmp	w8, #0xa
    dce0:	b.eq	df28 <po_gram_lex@@Base+0x7d0>  // b.none
    dce4:	cmp	w8, #0x22
    dce8:	b.eq	df50 <po_gram_lex@@Base+0x7f8>  // b.none
    dcec:	ldr	x9, [x23, #704]
    dcf0:	strb	w8, [x9, x24]
    dcf4:	ldr	x8, [sp]
    dcf8:	add	x24, x8, x24
    dcfc:	b	dc58 <po_gram_lex@@Base+0x500>
    dd00:	add	x0, sp, #0x28
    dd04:	bl	dfd4 <po_gram_lex@@Base+0x87c>
    dd08:	ldr	x8, [sp, #40]
    dd0c:	cmp	x8, #0x1
    dd10:	b.ne	deb8 <po_gram_lex@@Base+0x760>  // b.any
    dd14:	ldrb	w28, [sp, #56]
    dd18:	cmp	w28, #0x5b
    dd1c:	b.gt	dd7c <po_gram_lex@@Base+0x624>
    dd20:	sub	w8, w28, #0x30
    dd24:	cmp	w8, #0x8
    dd28:	b.cs	ddd4 <po_gram_lex@@Base+0x67c>  // b.hs, b.nlast
    dd2c:	mov	w25, #0x3                   	// #3
    dd30:	mov	w8, w28
    dd34:	mov	w28, wzr
    dd38:	lsl	w9, w28, #3
    dd3c:	add	w8, w9, w8, uxtb
    dd40:	subs	w25, w25, #0x1
    dd44:	sub	w28, w8, #0x30
    dd48:	b.eq	ded8 <po_gram_lex@@Base+0x780>  // b.none
    dd4c:	add	x0, sp, #0x28
    dd50:	bl	dfd4 <po_gram_lex@@Base+0x87c>
    dd54:	ldr	x8, [sp, #40]
    dd58:	cmp	x8, #0x1
    dd5c:	b.ne	dd70 <po_gram_lex@@Base+0x618>  // b.any
    dd60:	ldrb	w8, [sp, #56]
    dd64:	and	w9, w8, #0xf8
    dd68:	cmp	w9, #0x30
    dd6c:	b.eq	dd38 <po_gram_lex@@Base+0x5e0>  // b.none
    dd70:	add	x0, sp, #0x28
    dd74:	bl	e150 <po_gram_lex@@Base+0x9f8>
    dd78:	b	ded8 <po_gram_lex@@Base+0x780>
    dd7c:	cmp	w28, #0x65
    dd80:	b.le	ddb4 <po_gram_lex@@Base+0x65c>
    dd84:	sub	w8, w28, #0x6e
    dd88:	cmp	w8, #0xa
    dd8c:	b.hi	dde8 <po_gram_lex@@Base+0x690>  // b.pmore
    dd90:	adrp	x11, 36000 <its_merge_context_free@@Base+0x1328>
    dd94:	add	x11, x11, #0xb0b
    dd98:	adr	x9, ddac <po_gram_lex@@Base+0x654>
    dd9c:	ldrb	w10, [x11, x8]
    dda0:	add	x9, x9, x10, lsl #2
    dda4:	mov	w28, #0xa                   	// #10
    dda8:	br	x9
    ddac:	mov	w28, #0xd                   	// #13
    ddb0:	b	ded8 <po_gram_lex@@Base+0x780>
    ddb4:	cmp	w28, #0x5c
    ddb8:	b.eq	ded8 <po_gram_lex@@Base+0x780>  // b.none
    ddbc:	cmp	w28, #0x61
    ddc0:	b.eq	dde0 <po_gram_lex@@Base+0x688>  // b.none
    ddc4:	cmp	w28, #0x62
    ddc8:	b.ne	deb8 <po_gram_lex@@Base+0x760>  // b.any
    ddcc:	mov	w28, #0x8                   	// #8
    ddd0:	b	ded8 <po_gram_lex@@Base+0x780>
    ddd4:	cmp	w28, #0x22
    ddd8:	b.eq	ded8 <po_gram_lex@@Base+0x780>  // b.none
    dddc:	b	deb8 <po_gram_lex@@Base+0x760>
    dde0:	mov	w28, #0x7                   	// #7
    dde4:	b	ded8 <po_gram_lex@@Base+0x780>
    dde8:	cmp	w28, #0x66
    ddec:	b.ne	deb8 <po_gram_lex@@Base+0x760>  // b.any
    ddf0:	mov	w28, #0xc                   	// #12
    ddf4:	b	ded8 <po_gram_lex@@Base+0x780>
    ddf8:	mov	w28, #0x9                   	// #9
    ddfc:	b	ded8 <po_gram_lex@@Base+0x780>
    de00:	mov	w28, #0xb                   	// #11
    de04:	b	ded8 <po_gram_lex@@Base+0x780>
    de08:	add	x0, sp, #0x28
    de0c:	bl	dfd4 <po_gram_lex@@Base+0x87c>
    de10:	ldr	x8, [sp, #40]
    de14:	cmp	x8, #0x1
    de18:	b.ne	deb8 <po_gram_lex@@Base+0x760>  // b.any
    de1c:	ldrb	w8, [sp, #56]
    de20:	sub	w9, w8, #0x30
    de24:	cmp	w9, #0x36
    de28:	b.hi	deb8 <po_gram_lex@@Base+0x760>  // b.pmore
    de2c:	mov	w10, #0x1                   	// #1
    de30:	lsl	x9, x10, x9
    de34:	mov	x10, #0x7e0000007e0000      	// #35465847073800192
    de38:	movk	x10, #0x3ff
    de3c:	tst	x9, x10
    de40:	b.eq	deb8 <po_gram_lex@@Base+0x760>  // b.none
    de44:	mov	w28, wzr
    de48:	and	w10, w8, #0xff
    de4c:	sub	w9, w10, #0x30
    de50:	cmp	w9, #0xa
    de54:	lsl	w8, w28, #4
    de58:	b.cc	de74 <po_gram_lex@@Base+0x71c>  // b.lo, b.ul, b.last
    de5c:	sub	w9, w10, #0x41
    de60:	cmp	w9, #0x19
    de64:	b.hi	de70 <po_gram_lex@@Base+0x718>  // b.pmore
    de68:	sub	w9, w10, #0x37
    de6c:	b	de74 <po_gram_lex@@Base+0x71c>
    de70:	sub	w9, w10, #0x57
    de74:	add	x0, sp, #0x28
    de78:	add	w28, w9, w8
    de7c:	bl	dfd4 <po_gram_lex@@Base+0x87c>
    de80:	ldr	x8, [sp, #40]
    de84:	cmp	x8, #0x1
    de88:	b.ne	dd70 <po_gram_lex@@Base+0x618>  // b.any
    de8c:	ldrb	w8, [sp, #56]
    de90:	sub	w9, w8, #0x30
    de94:	cmp	w9, #0x36
    de98:	b.hi	dd70 <po_gram_lex@@Base+0x618>  // b.pmore
    de9c:	mov	w10, #0x1                   	// #1
    dea0:	lsl	x9, x10, x9
    dea4:	mov	x10, #0x7e0000007e0000      	// #35465847073800192
    dea8:	movk	x10, #0x3ff
    deac:	tst	x9, x10
    deb0:	b.ne	de48 <po_gram_lex@@Base+0x6f0>  // b.any
    deb4:	b	dd70 <po_gram_lex@@Base+0x618>
    deb8:	add	x0, sp, #0x28
    debc:	bl	e150 <po_gram_lex@@Base+0x9f8>
    dec0:	mov	w2, #0x5                   	// #5
    dec4:	mov	x0, xzr
    dec8:	mov	x1, x20
    decc:	bl	acd0 <dcgettext@plt>
    ded0:	bl	aad0 <po_gram_error@plt>
    ded4:	mov	w28, #0x20                  	// #32
    ded8:	ldr	x8, [x23, #704]
    dedc:	add	x9, x24, #0x1
    dee0:	strb	w28, [x8, x24]
    dee4:	mov	x24, x9
    dee8:	b	dc58 <po_gram_lex@@Base+0x500>
    deec:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    def0:	ldr	x8, [x8, #4000]
    def4:	ldrb	w9, [x21, #697]
    def8:	mov	w0, #0x5b                  	// #91
    defc:	b	df10 <po_gram_lex@@Base+0x7b8>
    df00:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    df04:	ldr	x8, [x8, #4000]
    df08:	ldrb	w9, [x21, #697]
    df0c:	mov	w0, #0x5d                  	// #93
    df10:	ldr	q0, [x8]
    df14:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    df18:	ldr	x8, [x8, #4016]
    df1c:	strb	w9, [x8, #16]
    df20:	str	q0, [x8]
    df24:	b	dc14 <po_gram_lex@@Base+0x4bc>
    df28:	adrp	x19, 36000 <its_merge_context_free@@Base+0x1328>
    df2c:	add	x19, x19, #0xb5b
    df30:	mov	w2, #0x5                   	// #5
    df34:	mov	x0, xzr
    df38:	mov	x1, x19
    df3c:	bl	acd0 <dcgettext@plt>
    df40:	mov	x1, x0
    df44:	adrp	x0, 4c000 <plural_table_size@@Base+0x12c00>
    df48:	ldr	x0, [x0, #4000]
    df4c:	bl	a500 <po_gram_error_at_line@plt>
    df50:	ldr	x19, [x23, #704]
    df54:	mov	w1, #0x4                   	// #4
    df58:	mov	x0, x19
    df5c:	strb	wzr, [x19, x24]
    df60:	bl	aa80 <strchr@plt>
    df64:	cbz	x0, df90 <po_gram_lex@@Base+0x838>
    df68:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    df6c:	add	x1, x1, #0xb75
    df70:	mov	w2, #0x5                   	// #5
    df74:	mov	x0, xzr
    df78:	bl	acd0 <dcgettext@plt>
    df7c:	mov	x1, x0
    df80:	adrp	x0, 4c000 <plural_table_size@@Base+0x12c00>
    df84:	ldr	x0, [x0, #4000]
    df88:	bl	a500 <po_gram_error_at_line@plt>
    df8c:	ldr	x19, [x23, #704]
    df90:	mov	x0, x19
    df94:	bl	a5a0 <xstrdup@plt>
    df98:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    df9c:	adrp	x9, 4c000 <plural_table_size@@Base+0x12c00>
    dfa0:	ldr	x8, [x8, #4016]
    dfa4:	ldr	x9, [x9, #4000]
    dfa8:	ldrb	w11, [x22, #698]
    dfac:	ldrb	w10, [x21, #697]
    dfb0:	mov	w12, #0x10f                 	// #271
    dfb4:	ldr	q0, [x9]
    dfb8:	mov	w13, #0x108                 	// #264
    dfbc:	cmp	w11, #0x0
    dfc0:	str	x0, [x8]
    dfc4:	strb	w10, [x8, #24]
    dfc8:	stur	q0, [x8, #8]
    dfcc:	csel	w0, w13, w12, ne  // ne = any
    dfd0:	b	dc14 <po_gram_lex@@Base+0x4bc>
    dfd4:	sub	sp, sp, #0x60
    dfd8:	stp	x29, x30, [sp, #48]
    dfdc:	stp	x22, x21, [sp, #64]
    dfe0:	stp	x20, x19, [sp, #80]
    dfe4:	add	x29, sp, #0x30
    dfe8:	mov	x19, x0
    dfec:	bl	e1f0 <po_lex_pass_obsolete_entries@@Base+0x14>
    dff0:	ldr	x8, [x19]
    dff4:	cbz	x8, e0ac <po_gram_lex@@Base+0x954>
    dff8:	adrp	x20, 4c000 <plural_table_size@@Base+0x12c00>
    dffc:	adrp	x21, 4c000 <plural_table_size@@Base+0x12c00>
    e000:	ldr	x20, [x20, #3960]
    e004:	ldr	x21, [x21, #4000]
    e008:	cmp	x8, #0x1
    e00c:	b.ne	e07c <po_gram_lex@@Base+0x924>  // b.any
    e010:	ldrb	w22, [x19, #16]
    e014:	cmp	w22, #0xa
    e018:	b.eq	e094 <po_gram_lex@@Base+0x93c>  // b.none
    e01c:	mov	x0, x19
    e020:	bl	e6a4 <po_lex_pass_obsolete_entries@@Base+0x4c8>
    e024:	ldr	w8, [x20]
    e028:	cmp	w22, #0x5c
    e02c:	add	w8, w8, w0
    e030:	str	w8, [x20]
    e034:	b.ne	e13c <po_gram_lex@@Base+0x9e4>  // b.any
    e038:	add	x0, sp, #0x8
    e03c:	bl	e1f0 <po_lex_pass_obsolete_entries@@Base+0x14>
    e040:	ldr	x8, [sp, #8]
    e044:	cmp	x8, #0x1
    e048:	b.ne	e0a8 <po_gram_lex@@Base+0x950>  // b.any
    e04c:	ldrb	w8, [sp, #24]
    e050:	cmp	w8, #0xa
    e054:	b.ne	e134 <po_gram_lex@@Base+0x9dc>  // b.any
    e058:	ldr	x8, [x21, #8]
    e05c:	mov	x0, x19
    e060:	str	wzr, [x20]
    e064:	add	x8, x8, #0x1
    e068:	str	x8, [x21, #8]
    e06c:	bl	e1f0 <po_lex_pass_obsolete_entries@@Base+0x14>
    e070:	ldr	x8, [x19]
    e074:	cbnz	x8, e008 <po_gram_lex@@Base+0x8b0>
    e078:	b	e0ac <po_gram_lex@@Base+0x954>
    e07c:	mov	x0, x19
    e080:	bl	e6a4 <po_lex_pass_obsolete_entries@@Base+0x4c8>
    e084:	ldr	w8, [x20]
    e088:	add	w8, w8, w0
    e08c:	str	w8, [x20]
    e090:	b	e13c <po_gram_lex@@Base+0x9e4>
    e094:	ldr	x8, [x21, #8]
    e098:	str	wzr, [x20]
    e09c:	add	x8, x8, #0x1
    e0a0:	str	x8, [x21, #8]
    e0a4:	b	e13c <po_gram_lex@@Base+0x9e4>
    e0a8:	cbnz	x8, e134 <po_gram_lex@@Base+0x9dc>
    e0ac:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
    e0b0:	ldr	x0, [x8, #568]
    e0b4:	bl	af30 <ferror@plt>
    e0b8:	cbz	w0, e13c <po_gram_lex@@Base+0x9e4>
    e0bc:	bl	ade0 <__errno_location@plt>
    e0c0:	ldr	w0, [x0]
    e0c4:	bl	a720 <strerror@plt>
    e0c8:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    e0cc:	ldr	x8, [x8, #3736]
    e0d0:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    e0d4:	mov	x19, x0
    e0d8:	add	x1, x1, #0xb9b
    e0dc:	ldr	x20, [x8]
    e0e0:	mov	w2, #0x5                   	// #5
    e0e4:	mov	x0, xzr
    e0e8:	bl	acd0 <dcgettext@plt>
    e0ec:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    e0f0:	ldr	x8, [x8, #4000]
    e0f4:	ldr	x1, [x8]
    e0f8:	bl	aa20 <xasprintf@plt>
    e0fc:	mov	x1, x0
    e100:	adrp	x0, 3b000 <plural_table_size@@Base+0x1c00>
    e104:	add	x0, x0, #0x2a7
    e108:	mov	x2, x19
    e10c:	bl	aa20 <xasprintf@plt>
    e110:	mov	x6, x0
    e114:	mov	w0, #0x2                   	// #2
    e118:	mov	x1, xzr
    e11c:	mov	x2, xzr
    e120:	mov	x3, xzr
    e124:	mov	x4, xzr
    e128:	mov	w5, wzr
    e12c:	blr	x20
    e130:	b	e13c <po_gram_lex@@Base+0x9e4>
    e134:	add	x0, sp, #0x8
    e138:	bl	e780 <po_lex_pass_obsolete_entries@@Base+0x5a4>
    e13c:	ldp	x20, x19, [sp, #80]
    e140:	ldp	x22, x21, [sp, #64]
    e144:	ldp	x29, x30, [sp, #48]
    e148:	add	sp, sp, #0x60
    e14c:	ret
    e150:	stp	x29, x30, [sp, #-32]!
    e154:	ldr	x8, [x0]
    e158:	str	x19, [sp, #16]
    e15c:	mov	x29, sp
    e160:	cbz	x8, e1c0 <po_gram_lex@@Base+0xa68>
    e164:	mov	x19, x0
    e168:	cmp	x8, #0x1
    e16c:	b.ne	e194 <po_gram_lex@@Base+0xa3c>  // b.any
    e170:	ldrb	w8, [x19, #16]
    e174:	cmp	w8, #0xa
    e178:	b.ne	e194 <po_gram_lex@@Base+0xa3c>  // b.any
    e17c:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    e180:	ldr	x8, [x8, #4000]
    e184:	ldr	x9, [x8, #8]
    e188:	sub	x9, x9, #0x1
    e18c:	str	x9, [x8, #8]
    e190:	b	e1b0 <po_gram_lex@@Base+0xa58>
    e194:	mov	x0, x19
    e198:	bl	e6a4 <po_lex_pass_obsolete_entries@@Base+0x4c8>
    e19c:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    e1a0:	ldr	x8, [x8, #3960]
    e1a4:	ldr	w9, [x8]
    e1a8:	sub	w9, w9, w0
    e1ac:	str	w9, [x8]
    e1b0:	mov	x0, x19
    e1b4:	ldr	x19, [sp, #16]
    e1b8:	ldp	x29, x30, [sp], #32
    e1bc:	b	e780 <po_lex_pass_obsolete_entries@@Base+0x5a4>
    e1c0:	ldr	x19, [sp, #16]
    e1c4:	ldp	x29, x30, [sp], #32
    e1c8:	ret

000000000000e1cc <po_lex_pass_comments@@Base>:
    e1cc:	and	w8, w0, #0x1
    e1d0:	adrp	x9, 4e000 <formatstring_gfc_internal@@Base+0x10>
    e1d4:	strb	w8, [x9, #720]
    e1d8:	ret

000000000000e1dc <po_lex_pass_obsolete_entries@@Base>:
    e1dc:	adrp	x9, 4c000 <plural_table_size@@Base+0x12c00>
    e1e0:	ldr	x9, [x9, #3768]
    e1e4:	and	w8, w0, #0x1
    e1e8:	strb	w8, [x9]
    e1ec:	ret
    e1f0:	sub	sp, sp, #0xc0
    e1f4:	stp	x20, x19, [sp, #176]
    e1f8:	adrp	x20, 4e000 <formatstring_gfc_internal@@Base+0x10>
    e1fc:	ldrb	w8, [x20, #576]
    e200:	mov	x19, x0
    e204:	stp	x29, x30, [sp, #96]
    e208:	stp	x28, x27, [sp, #112]
    e20c:	stp	x26, x25, [sp, #128]
    e210:	stp	x24, x23, [sp, #144]
    e214:	stp	x22, x21, [sp, #160]
    e218:	add	x29, sp, #0x60
    e21c:	cbz	w8, e248 <po_lex_pass_obsolete_entries@@Base+0x6c>
    e220:	str	xzr, [x19]
    e224:	strb	wzr, [x19, #8]
    e228:	ldp	x20, x19, [sp, #176]
    e22c:	ldp	x22, x21, [sp, #160]
    e230:	ldp	x24, x23, [sp, #144]
    e234:	ldp	x26, x25, [sp, #128]
    e238:	ldp	x28, x27, [sp, #112]
    e23c:	ldp	x29, x30, [sp, #96]
    e240:	add	sp, sp, #0xc0
    e244:	ret
    e248:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
    e24c:	ldrsw	x8, [x8, #580]
    e250:	cmp	w8, #0x1
    e254:	b.lt	e2dc <po_lex_pass_obsolete_entries@@Base+0x100>  // b.tstop
    e258:	adrp	x9, 4e000 <formatstring_gfc_internal@@Base+0x10>
    e25c:	sub	x8, x8, #0x1
    e260:	add	x9, x9, #0x238
    e264:	mov	w10, #0x28                  	// #40
    e268:	str	w8, [x9, #12]
    e26c:	madd	x10, x8, x10, x9
    e270:	ldr	x11, [x10, #48]!
    e274:	cbz	x11, e2ac <po_lex_pass_obsolete_entries@@Base+0xd0>
    e278:	add	x12, x10, #0x10
    e27c:	ldrb	w12, [x12]
    e280:	subs	x11, x11, #0x1
    e284:	strb	w12, [x19, #16]
    e288:	b.eq	e2ac <po_lex_pass_obsolete_entries@@Base+0xd0>  // b.none
    e28c:	mov	w13, #0x28                  	// #40
    e290:	madd	x13, x8, x13, x9
    e294:	add	x12, x19, #0x11
    e298:	add	x13, x13, #0x41
    e29c:	ldrb	w14, [x13], #1
    e2a0:	subs	x11, x11, #0x1
    e2a4:	strb	w14, [x12], #1
    e2a8:	b.ne	e29c <po_lex_pass_obsolete_entries@@Base+0xc0>  // b.any
    e2ac:	ldr	x10, [x10]
    e2b0:	mov	w11, #0x28                  	// #40
    e2b4:	str	x10, [x19]
    e2b8:	madd	x10, x8, x11, x9
    e2bc:	ldrb	w10, [x10, #56]
    e2c0:	strb	w10, [x19, #8]
    e2c4:	cbz	w10, e228 <po_lex_pass_obsolete_entries@@Base+0x4c>
    e2c8:	mov	w10, #0x28                  	// #40
    e2cc:	madd	x8, x8, x10, x9
    e2d0:	ldr	w8, [x8, #60]
    e2d4:	str	w8, [x19, #12]
    e2d8:	b	e228 <po_lex_pass_obsolete_entries@@Base+0x4c>
    e2dc:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
    e2e0:	ldr	w8, [x8, #584]
    e2e4:	cbnz	w8, e314 <po_lex_pass_obsolete_entries@@Base+0x138>
    e2e8:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
    e2ec:	ldr	x0, [x8, #568]
    e2f0:	bl	a710 <getc_unlocked@plt>
    e2f4:	cmn	w0, #0x1
    e2f8:	b.eq	e688 <po_lex_pass_obsolete_entries@@Base+0x4ac>  // b.none
    e2fc:	adrp	x9, 4e000 <formatstring_gfc_internal@@Base+0x10>
    e300:	add	x9, x9, #0x248
    e304:	ldr	w8, [x9]
    e308:	strb	w0, [x9, #4]
    e30c:	add	w8, w8, #0x1
    e310:	str	w8, [x9]
    e314:	adrp	x26, 4c000 <plural_table_size@@Base+0x12c00>
    e318:	ldr	x26, [x26, #3704]
    e31c:	adrp	x24, 4e000 <formatstring_gfc_internal@@Base+0x10>
    e320:	add	x24, x24, #0x238
    e324:	adrp	x22, 4e000 <formatstring_gfc_internal@@Base+0x10>
    e328:	ldr	x0, [x26]
    e32c:	cmn	x0, #0x1
    e330:	b.eq	e468 <po_lex_pass_obsolete_entries@@Base+0x28c>  // b.none
    e334:	adrp	x27, 4e000 <formatstring_gfc_internal@@Base+0x10>
    e338:	adrp	x20, 36000 <its_merge_context_free@@Base+0x1328>
    e33c:	adrp	x21, 3b000 <plural_table_size@@Base+0x1c00>
    e340:	add	x27, x27, #0x248
    e344:	add	x28, sp, #0x20
    e348:	mov	w25, #0x40                  	// #64
    e34c:	add	x20, x20, #0xc29
    e350:	add	x21, x21, #0x2a7
    e354:	add	x9, x27, #0x4
    e358:	mov	w8, w8
    e35c:	add	x1, sp, #0x18
    e360:	add	x2, sp, #0x10
    e364:	add	x3, sp, #0x8
    e368:	mov	x4, sp
    e36c:	stp	x28, x8, [sp, #8]
    e370:	str	x9, [sp, #24]
    e374:	str	x25, [sp]
    e378:	bl	a900 <iconv@plt>
    e37c:	ldr	x9, [sp, #16]
    e380:	ldr	w22, [x27]
    e384:	ldr	x8, [sp]
    e388:	cmp	x9, x22
    e38c:	cset	w10, cc  // cc = lo, ul, last
    e390:	cmp	x8, #0x40
    e394:	cset	w11, cc  // cc = lo, ul, last
    e398:	cmp	w10, w11
    e39c:	b.ne	e6a0 <po_lex_pass_obsolete_entries@@Base+0x4c4>  // b.any
    e3a0:	cmp	x8, #0x40
    e3a4:	b.ne	e4d8 <po_lex_pass_obsolete_entries@@Base+0x2fc>  // b.any
    e3a8:	cmn	x0, #0x1
    e3ac:	b.ne	e6a0 <po_lex_pass_obsolete_entries@@Base+0x4c4>  // b.any
    e3b0:	bl	ade0 <__errno_location@plt>
    e3b4:	ldr	w0, [x0]
    e3b8:	cmp	w0, #0x16
    e3bc:	b.eq	e428 <po_lex_pass_obsolete_entries@@Base+0x24c>  // b.none
    e3c0:	cmp	w0, #0x54
    e3c4:	b.eq	e534 <po_lex_pass_obsolete_entries@@Base+0x358>  // b.none
    e3c8:	bl	a720 <strerror@plt>
    e3cc:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    e3d0:	ldr	x8, [x8, #3736]
    e3d4:	mov	x22, x0
    e3d8:	mov	w2, #0x5                   	// #5
    e3dc:	mov	x0, xzr
    e3e0:	ldr	x23, [x8]
    e3e4:	mov	x1, x20
    e3e8:	bl	acd0 <dcgettext@plt>
    e3ec:	mov	x1, x0
    e3f0:	mov	x0, x21
    e3f4:	mov	x2, x22
    e3f8:	bl	aa20 <xasprintf@plt>
    e3fc:	mov	x6, x0
    e400:	mov	w0, #0x2                   	// #2
    e404:	mov	x1, xzr
    e408:	mov	x2, xzr
    e40c:	mov	x3, xzr
    e410:	mov	x4, xzr
    e414:	mov	w5, wzr
    e418:	blr	x23
    e41c:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
    e420:	ldr	w8, [x8, #584]
    e424:	b	e460 <po_lex_pass_obsolete_entries@@Base+0x284>
    e428:	cmp	w22, #0x18
    e42c:	b.eq	e578 <po_lex_pass_obsolete_entries@@Base+0x39c>  // b.none
    e430:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
    e434:	ldr	x0, [x8, #568]
    e438:	bl	a710 <getc_unlocked@plt>
    e43c:	cmn	w0, #0x1
    e440:	b.eq	e580 <po_lex_pass_obsolete_entries@@Base+0x3a4>  // b.none
    e444:	ldr	w9, [x24, #16]
    e448:	cmp	w0, #0xa
    e44c:	add	w8, w9, #0x1
    e450:	add	x9, x24, x9
    e454:	str	w8, [x24, #16]
    e458:	strb	w0, [x9, #20]
    e45c:	b.eq	e5c8 <po_lex_pass_obsolete_entries@@Base+0x3ec>  // b.none
    e460:	ldr	x0, [x26]
    e464:	b	e354 <po_lex_pass_obsolete_entries@@Base+0x178>
    e468:	adrp	x9, 4c000 <plural_table_size@@Base+0x12c00>
    e46c:	ldr	x9, [x9, #3800]
    e470:	mov	w21, #0x1                   	// #1
    e474:	ldrb	w9, [x9]
    e478:	cbz	w9, e4d0 <po_lex_pass_obsolete_entries@@Base+0x2f4>
    e47c:	ldrsb	w9, [x22, #588]
    e480:	tbz	w9, #31, e4d0 <po_lex_pass_obsolete_entries@@Base+0x2f4>
    e484:	cmp	w8, #0x1
    e488:	b.ne	e4b8 <po_lex_pass_obsolete_entries@@Base+0x2dc>  // b.any
    e48c:	adrp	x21, 4e000 <formatstring_gfc_internal@@Base+0x10>
    e490:	ldr	x0, [x21, #568]
    e494:	bl	a710 <getc_unlocked@plt>
    e498:	cmn	w0, #0x1
    e49c:	b.eq	e67c <po_lex_pass_obsolete_entries@@Base+0x4a0>  // b.none
    e4a0:	adrp	x9, 4e000 <formatstring_gfc_internal@@Base+0x10>
    e4a4:	add	x9, x9, #0x248
    e4a8:	ldr	w8, [x9]
    e4ac:	strb	w0, [x9, #5]
    e4b0:	add	w8, w8, #0x1
    e4b4:	str	w8, [x9]
    e4b8:	adrp	x9, 4e000 <formatstring_gfc_internal@@Base+0x10>
    e4bc:	ldrb	w9, [x9, #589]
    e4c0:	cmp	w9, #0x2f
    e4c4:	ccmp	w8, #0x1, #0x0, hi  // hi = pmore
    e4c8:	mov	w8, #0x1                   	// #1
    e4cc:	cinc	x21, x8, hi  // hi = pmore
    e4d0:	strb	wzr, [x19, #8]
    e4d4:	b	e60c <po_lex_pass_obsolete_entries@@Base+0x430>
    e4d8:	subs	x21, x22, x9
    e4dc:	b.eq	e6a0 <po_lex_pass_obsolete_entries@@Base+0x4c4>  // b.none
    e4e0:	mov	w9, #0x40                  	// #64
    e4e4:	sub	x20, x9, x8
    e4e8:	add	x0, x19, #0xc
    e4ec:	add	x1, sp, #0x20
    e4f0:	mov	x2, x20
    e4f4:	bl	aab0 <u8_mbtoucr@plt>
    e4f8:	cmp	w0, w20
    e4fc:	adrp	x22, 4e000 <formatstring_gfc_internal@@Base+0x10>
    e500:	b.ge	e56c <po_lex_pass_obsolete_entries@@Base+0x390>  // b.tcont
    e504:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
    e508:	ldrb	w8, [x8, #696]
    e50c:	cmp	w8, #0x1
    e510:	b.ne	e52c <po_lex_pass_obsolete_entries@@Base+0x350>  // b.any
    e514:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    e518:	add	x1, x1, #0xbb4
    e51c:	mov	w2, #0x5                   	// #5
    e520:	mov	x0, xzr
    e524:	bl	acd0 <dcgettext@plt>
    e528:	bl	aad0 <po_gram_error@plt>
    e52c:	mov	w8, wzr
    e530:	b	e570 <po_lex_pass_obsolete_entries@@Base+0x394>
    e534:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
    e538:	ldrb	w8, [x8, #696]
    e53c:	cmp	w8, #0x1
    e540:	b.ne	e55c <po_lex_pass_obsolete_entries@@Base+0x380>  // b.any
    e544:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    e548:	add	x1, x1, #0xbb4
    e54c:	mov	w2, #0x5                   	// #5
    e550:	mov	x0, xzr
    e554:	bl	acd0 <dcgettext@plt>
    e558:	bl	aad0 <po_gram_error@plt>
    e55c:	mov	w8, wzr
    e560:	mov	w21, #0x1                   	// #1
    e564:	adrp	x22, 4e000 <formatstring_gfc_internal@@Base+0x10>
    e568:	b	e570 <po_lex_pass_obsolete_entries@@Base+0x394>
    e56c:	mov	w8, #0x1                   	// #1
    e570:	strb	w8, [x19, #8]
    e574:	b	e60c <po_lex_pass_obsolete_entries@@Base+0x430>
    e578:	mov	w8, #0x1                   	// #1
    e57c:	b	e5fc <po_lex_pass_obsolete_entries@@Base+0x420>
    e580:	ldr	x0, [x24]
    e584:	mov	w8, #0x1                   	// #1
    e588:	strb	w8, [x24, #8]
    e58c:	bl	af30 <ferror@plt>
    e590:	cbnz	w0, e220 <po_lex_pass_obsolete_entries@@Base+0x44>
    e594:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
    e598:	ldrb	w8, [x8, #696]
    e59c:	cmp	w8, #0x1
    e5a0:	b.ne	e5bc <po_lex_pass_obsolete_entries@@Base+0x3e0>  // b.any
    e5a4:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    e5a8:	add	x1, x1, #0xbcf
    e5ac:	mov	w2, #0x5                   	// #5
    e5b0:	mov	x0, xzr
    e5b4:	bl	acd0 <dcgettext@plt>
    e5b8:	bl	aad0 <po_gram_error@plt>
    e5bc:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
    e5c0:	ldr	w8, [x8, #584]
    e5c4:	b	e5fc <po_lex_pass_obsolete_entries@@Base+0x420>
    e5c8:	adrp	x9, 4e000 <formatstring_gfc_internal@@Base+0x10>
    e5cc:	ldrb	w9, [x9, #696]
    e5d0:	cmp	w9, #0x1
    e5d4:	b.ne	e5f8 <po_lex_pass_obsolete_entries@@Base+0x41c>  // b.any
    e5d8:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    e5dc:	add	x1, x1, #0xbfc
    e5e0:	mov	w2, #0x5                   	// #5
    e5e4:	mov	x0, xzr
    e5e8:	bl	acd0 <dcgettext@plt>
    e5ec:	bl	aad0 <po_gram_error@plt>
    e5f0:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
    e5f4:	ldr	w8, [x8, #584]
    e5f8:	sub	w8, w8, #0x1
    e5fc:	adrp	x22, 4e000 <formatstring_gfc_internal@@Base+0x10>
    e600:	strb	wzr, [x19, #8]
    e604:	cbz	w8, e674 <po_lex_pass_obsolete_entries@@Base+0x498>
    e608:	mov	w21, w8
    e60c:	ldrb	w9, [x22, #588]
    e610:	subs	x8, x21, #0x1
    e614:	strb	w9, [x19, #16]
    e618:	b.eq	e63c <po_lex_pass_obsolete_entries@@Base+0x460>  // b.none
    e61c:	mov	x9, xzr
    e620:	add	x10, x19, #0x11
    e624:	add	x11, x24, x9
    e628:	ldrb	w11, [x11, #21]
    e62c:	strb	w11, [x10, x9]
    e630:	add	x9, x9, #0x1
    e634:	cmp	x8, x9
    e638:	b.ne	e624 <po_lex_pass_obsolete_entries@@Base+0x448>  // b.any
    e63c:	str	x21, [x19]
    e640:	adrp	x10, 4e000 <formatstring_gfc_internal@@Base+0x10>
    e644:	ldr	w8, [x10, #584]
    e648:	subs	w9, w8, w21
    e64c:	str	w9, [x10, #584]
    e650:	b.eq	e228 <po_lex_pass_obsolete_entries@@Base+0x4c>  // b.none
    e654:	adrp	x9, 4e000 <formatstring_gfc_internal@@Base+0x10>
    e658:	add	x9, x9, #0x24c
    e65c:	ldrb	w10, [x9, x21]
    e660:	sub	x8, x8, #0x1
    e664:	cmp	w21, w8
    e668:	strb	w10, [x9], #1
    e66c:	b.ne	e65c <po_lex_pass_obsolete_entries@@Base+0x480>  // b.any
    e670:	b	e228 <po_lex_pass_obsolete_entries@@Base+0x4c>
    e674:	mov	x21, xzr
    e678:	b	e63c <po_lex_pass_obsolete_entries@@Base+0x460>
    e67c:	ldr	x0, [x21, #568]
    e680:	bl	af30 <ferror@plt>
    e684:	cbz	w0, e694 <po_lex_pass_obsolete_entries@@Base+0x4b8>
    e688:	mov	w8, #0x1                   	// #1
    e68c:	strb	w8, [x20, #576]
    e690:	b	e220 <po_lex_pass_obsolete_entries@@Base+0x44>
    e694:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
    e698:	ldr	w8, [x8, #584]
    e69c:	b	e4b8 <po_lex_pass_obsolete_entries@@Base+0x2dc>
    e6a0:	bl	a7e0 <abort@plt>
    e6a4:	stp	x29, x30, [sp, #-32]!
    e6a8:	ldrb	w8, [x0, #8]
    e6ac:	str	x19, [sp, #16]
    e6b0:	mov	x29, sp
    e6b4:	cbz	w8, e704 <po_lex_pass_obsolete_entries@@Base+0x528>
    e6b8:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    e6bc:	ldr	x8, [x8, #3704]
    e6c0:	adrp	x9, 4c000 <plural_table_size@@Base+0x12c00>
    e6c4:	adrp	x10, 37000 <get_search_path@@Base+0xb4c>
    e6c8:	add	x10, x10, #0x1a2
    e6cc:	ldr	x8, [x8]
    e6d0:	ldr	x9, [x9, #3984]
    e6d4:	ldr	w19, [x0, #12]
    e6d8:	cmn	x8, #0x1
    e6dc:	ldr	x9, [x9]
    e6e0:	mov	w0, w19
    e6e4:	csel	x1, x10, x9, eq  // eq = none
    e6e8:	bl	a890 <uc_width@plt>
    e6ec:	tbz	w0, #31, e774 <po_lex_pass_obsolete_entries@@Base+0x598>
    e6f0:	cmp	w19, #0x1f
    e6f4:	b.hi	e740 <po_lex_pass_obsolete_entries@@Base+0x564>  // b.pmore
    e6f8:	cmp	w19, #0x9
    e6fc:	b.eq	e724 <po_lex_pass_obsolete_entries@@Base+0x548>  // b.none
    e700:	b	e768 <po_lex_pass_obsolete_entries@@Base+0x58c>
    e704:	ldr	x8, [x0]
    e708:	cmp	x8, #0x1
    e70c:	b.ne	e770 <po_lex_pass_obsolete_entries@@Base+0x594>  // b.any
    e710:	ldrb	w8, [x0, #16]
    e714:	cmp	w8, #0x1f
    e718:	b.hi	e760 <po_lex_pass_obsolete_entries@@Base+0x584>  // b.pmore
    e71c:	cmp	w8, #0x9
    e720:	b.ne	e768 <po_lex_pass_obsolete_entries@@Base+0x58c>  // b.any
    e724:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    e728:	ldr	x8, [x8, #3960]
    e72c:	mov	w9, #0x8                   	// #8
    e730:	ldr	w8, [x8]
    e734:	and	w8, w8, #0x7
    e738:	sub	w0, w9, w8
    e73c:	b	e774 <po_lex_pass_obsolete_entries@@Base+0x598>
    e740:	sub	w8, w19, #0x7f
    e744:	mov	w9, #0x1014                	// #4116
    e748:	cmp	w8, #0x20
    e74c:	cset	w8, hi  // hi = pmore
    e750:	cmp	w9, w19, lsr #1
    e754:	cset	w9, ne  // ne = any
    e758:	and	w0, w9, w8
    e75c:	b	e774 <po_lex_pass_obsolete_entries@@Base+0x598>
    e760:	cmp	w8, #0x7f
    e764:	b.ne	e770 <po_lex_pass_obsolete_entries@@Base+0x594>  // b.any
    e768:	mov	w0, wzr
    e76c:	b	e774 <po_lex_pass_obsolete_entries@@Base+0x598>
    e770:	mov	w0, #0x1                   	// #1
    e774:	ldr	x19, [sp, #16]
    e778:	ldp	x29, x30, [sp], #32
    e77c:	ret
    e780:	stp	x29, x30, [sp, #-16]!
    e784:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
    e788:	ldrsw	x9, [x8, #580]
    e78c:	mov	x29, sp
    e790:	cmp	w9, #0x2
    e794:	b.ge	e820 <po_lex_pass_obsolete_entries@@Base+0x644>  // b.tcont
    e798:	ldr	x11, [x0]
    e79c:	adrp	x10, 4e000 <formatstring_gfc_internal@@Base+0x10>
    e7a0:	add	x10, x10, #0x238
    e7a4:	cbz	x11, e7e0 <po_lex_pass_obsolete_entries@@Base+0x604>
    e7a8:	ldrb	w13, [x0, #16]
    e7ac:	mov	w12, #0x28                  	// #40
    e7b0:	madd	x12, x9, x12, x10
    e7b4:	subs	x11, x11, #0x1
    e7b8:	strb	w13, [x12, #64]!
    e7bc:	b.eq	e7e0 <po_lex_pass_obsolete_entries@@Base+0x604>  // b.none
    e7c0:	mov	w12, #0x28                  	// #40
    e7c4:	madd	x12, x9, x12, x10
    e7c8:	add	x12, x12, #0x41
    e7cc:	add	x13, x0, #0x11
    e7d0:	ldrb	w14, [x13], #1
    e7d4:	subs	x11, x11, #0x1
    e7d8:	strb	w14, [x12], #1
    e7dc:	b.ne	e7d0 <po_lex_pass_obsolete_entries@@Base+0x5f4>  // b.any
    e7e0:	ldr	x11, [x0]
    e7e4:	mov	w12, #0x28                  	// #40
    e7e8:	madd	x12, x9, x12, x10
    e7ec:	str	x11, [x12, #48]
    e7f0:	ldrb	w11, [x0, #8]
    e7f4:	strb	w11, [x12, #56]
    e7f8:	cbz	w11, e80c <po_lex_pass_obsolete_entries@@Base+0x630>
    e7fc:	ldr	w11, [x0, #12]
    e800:	mov	w12, #0x28                  	// #40
    e804:	madd	x9, x9, x12, x10
    e808:	str	w11, [x9, #60]
    e80c:	ldr	w9, [x8, #580]
    e810:	add	w9, w9, #0x1
    e814:	str	w9, [x8, #580]
    e818:	ldp	x29, x30, [sp], #16
    e81c:	ret
    e820:	bl	a7e0 <abort@plt>

000000000000e824 <po_gram_parse@@Base>:
    e824:	stp	x29, x30, [sp, #-96]!
    e828:	stp	x28, x27, [sp, #16]
    e82c:	stp	x26, x25, [sp, #32]
    e830:	stp	x24, x23, [sp, #48]
    e834:	stp	x22, x21, [sp, #64]
    e838:	stp	x20, x19, [sp, #80]
    e83c:	mov	x29, sp
    e840:	sub	sp, sp, #0x2, lsl #12
    e844:	sub	sp, sp, #0xe30
    e848:	str	wzr, [sp, #148]
    e84c:	adrp	x9, 4c000 <plural_table_size@@Base+0x12c00>
    e850:	ldr	x9, [x9, #3752]
    e854:	adrp	x20, 4c000 <plural_table_size@@Base+0x12c00>
    e858:	add	x8, sp, #0xa0
    e85c:	ldr	x20, [x20, #3728]
    e860:	str	wzr, [x9]
    e864:	add	x9, x8, #0x18
    e868:	str	x9, [sp, #136]
    e86c:	add	x9, x8, #0x8
    e870:	mov	x21, #0x9e9d                	// #40605
    e874:	mov	x28, #0x6142                	// #24898
    e878:	str	x9, [sp, #128]
    e87c:	add	x9, x8, #0x10
    e880:	add	x8, x8, #0x20
    e884:	movk	x21, #0x1e96, lsl #16
    e888:	mov	w10, #0xfffffffe            	// #-2
    e88c:	movk	x28, #0xe149, lsl #16
    e890:	stp	x8, x9, [sp, #104]
    e894:	add	x8, sp, #0xd8
    e898:	add	x27, sp, #0x2, lsl #12
    e89c:	add	x19, sp, #0x2, lsl #12
    e8a0:	mov	w25, wzr
    e8a4:	movk	x21, #0x20a, lsl #32
    e8a8:	add	x26, sp, #0xd8
    e8ac:	mov	w22, #0xc8                  	// #200
    e8b0:	movk	x28, #0x3df5, lsl #32
    e8b4:	str	w10, [x20]
    e8b8:	adrp	x24, 4e000 <formatstring_gfc_internal@@Base+0x10>
    e8bc:	str	x8, [sp, #152]
    e8c0:	add	x27, x27, #0xc98
    e8c4:	add	x19, x19, #0xc98
    e8c8:	add	x8, x19, x22, lsl #1
    e8cc:	sub	x8, x8, #0x2
    e8d0:	cmp	x8, x27
    e8d4:	strh	w25, [x27]
    e8d8:	b.hi	e9a8 <po_gram_parse@@Base+0x184>  // b.pmore
    e8dc:	lsr	x8, x22, #4
    e8e0:	cmp	x8, #0x270
    e8e4:	b.hi	f850 <po_gram_parse@@Base+0x102c>  // b.pmore
    e8e8:	ubfx	x9, x22, #3, #60
    e8ec:	lsl	x8, x22, #1
    e8f0:	cmp	x9, #0x271
    e8f4:	mov	w9, #0x2710                	// #10000
    e8f8:	csel	x22, x8, x9, cc  // cc = lo, ul, last
    e8fc:	mov	w8, #0x3a                  	// #58
    e900:	mul	x8, x22, x8
    e904:	add	x0, x8, #0x37
    e908:	bl	a3f0 <malloc@plt>
    e90c:	cbz	x0, f850 <po_gram_parse@@Base+0x102c>
    e910:	sub	x8, x27, x19
    e914:	asr	x26, x8, #1
    e918:	add	x27, x26, #0x1
    e91c:	lsl	x2, x27, #1
    e920:	mov	x1, x19
    e924:	mov	x23, x0
    e928:	mov	x24, x20
    e92c:	bl	a040 <memcpy@plt>
    e930:	lsl	w8, w22, #1
    e934:	add	w8, w8, #0x37
    e938:	mov	w9, #0x4925                	// #18725
    e93c:	ubfx	w8, w8, #3, #13
    e940:	movk	w9, #0x2492, lsl #16
    e944:	umull	x8, w8, w9
    e948:	ldr	x1, [sp, #152]
    e94c:	lsr	x8, x8, #32
    e950:	mov	w9, #0x38                  	// #56
    e954:	madd	x20, x8, x9, x23
    e958:	mul	x2, x27, x9
    e95c:	mov	x0, x20
    e960:	bl	a040 <memcpy@plt>
    e964:	add	x8, sp, #0x2, lsl #12
    e968:	add	x8, x8, #0xc98
    e96c:	cmp	x19, x8
    e970:	b.eq	e97c <po_gram_parse@@Base+0x158>  // b.none
    e974:	mov	x0, x19
    e978:	bl	aa00 <free@plt>
    e97c:	add	x8, x23, x22, lsl #1
    e980:	add	x27, x23, x26, lsl #1
    e984:	sub	x8, x8, #0x2
    e988:	cmp	x8, x27
    e98c:	b.ls	f87c <po_gram_parse@@Base+0x1058>  // b.plast
    e990:	mov	w8, #0x38                  	// #56
    e994:	madd	x26, x26, x8, x20
    e998:	str	x20, [sp, #152]
    e99c:	mov	x19, x23
    e9a0:	mov	x20, x24
    e9a4:	adrp	x24, 4e000 <formatstring_gfc_internal@@Base+0x10>
    e9a8:	cmp	w25, #0x2
    e9ac:	b.eq	f874 <po_gram_parse@@Base+0x1050>  // b.none
    e9b0:	lsr	x8, x21, x25
    e9b4:	tbnz	w8, #0, ea44 <po_gram_parse@@Base+0x220>
    e9b8:	ldr	w0, [x20]
    e9bc:	cmn	w0, #0x2
    e9c0:	b.ne	e9cc <po_gram_parse@@Base+0x1a8>  // b.any
    e9c4:	bl	a4e0 <po_gram_lex@plt>
    e9c8:	str	w0, [x20]
    e9cc:	adrp	x8, 36000 <its_merge_context_free@@Base+0x1328>
    e9d0:	add	x8, x8, #0xcbe
    e9d4:	ldrsb	w8, [x8, w25, sxtw]
    e9d8:	cmp	w0, #0x0
    e9dc:	b.le	e9f8 <po_gram_parse@@Base+0x1d4>
    e9e0:	cmp	w0, #0x10f
    e9e4:	b.hi	ea04 <po_gram_parse@@Base+0x1e0>  // b.pmore
    e9e8:	adrp	x9, 36000 <its_merge_context_free@@Base+0x1328>
    e9ec:	add	x9, x9, #0xcec
    e9f0:	ldrb	w9, [x9, w0, uxtw]
    e9f4:	b	ea08 <po_gram_parse@@Base+0x1e4>
    e9f8:	mov	w9, wzr
    e9fc:	str	wzr, [x20]
    ea00:	b	ea08 <po_gram_parse@@Base+0x1e4>
    ea04:	mov	w9, #0x2                   	// #2
    ea08:	add	w8, w9, w8
    ea0c:	cmp	w8, #0x28
    ea10:	b.hi	ea44 <po_gram_parse@@Base+0x220>  // b.pmore
    ea14:	adrp	x10, 36000 <its_merge_context_free@@Base+0x1328>
    ea18:	add	x10, x10, #0xdfc
    ea1c:	ldrsb	w10, [x10, w8, uxtw]
    ea20:	cmp	w9, w10
    ea24:	b.ne	ea44 <po_gram_parse@@Base+0x220>  // b.any
    ea28:	adrp	x9, 36000 <its_merge_context_free@@Base+0x1328>
    ea2c:	add	x9, x9, #0xe25
    ea30:	ldrb	w25, [x9, x8]
    ea34:	cmp	w8, #0x27
    ea38:	b.ne	eb3c <po_gram_parse@@Base+0x318>  // b.any
    ea3c:	neg	w8, w25
    ea40:	b	ea68 <po_gram_parse@@Base+0x244>
    ea44:	mov	x9, #0x6162                	// #24930
    ea48:	movk	x9, #0x6029, lsl #16
    ea4c:	sxtw	x8, w25
    ea50:	movk	x9, #0x18a4, lsl #32
    ea54:	lsr	x9, x9, x8
    ea58:	tbnz	w9, #0, eae0 <po_gram_parse@@Base+0x2bc>
    ea5c:	adrp	x9, 36000 <its_merge_context_free@@Base+0x1328>
    ea60:	add	x9, x9, #0xe4e
    ea64:	ldrb	w8, [x9, x8]
    ea68:	adrp	x9, 36000 <its_merge_context_free@@Base+0x1328>
    ea6c:	add	x9, x9, #0xe7c
    ea70:	ldrb	w23, [x9, w8, sxtw]
    ea74:	mov	w9, #0x1                   	// #1
    ea78:	mov	w10, #0x38                  	// #56
    ea7c:	sxtw	x25, w8
    ea80:	sub	x9, x9, x23
    ea84:	madd	x9, x9, x10, x26
    ea88:	ldp	q2, q0, [x9, #16]
    ea8c:	ldr	x10, [x9, #48]
    ea90:	ldr	q1, [x9]
    ea94:	sub	w8, w8, #0x7
    ea98:	cmp	w8, #0x17
    ea9c:	str	x10, [sp, #208]
    eaa0:	stp	q2, q0, [sp, #176]
    eaa4:	str	q1, [sp, #160]
    eaa8:	b.hi	f650 <po_gram_parse@@Base+0xe2c>  // b.pmore
    eaac:	adrp	x11, 36000 <its_merge_context_free@@Base+0x1328>
    eab0:	add	x11, x11, #0xc8e
    eab4:	adr	x9, eac4 <po_gram_parse@@Base+0x2a0>
    eab8:	ldrh	w10, [x11, x8, lsl #1]
    eabc:	add	x9, x9, x10, lsl #2
    eac0:	br	x9
    eac4:	ldr	q0, [x26]
    eac8:	ldrb	w8, [x26, #16]
    eacc:	ldr	x9, [sp, #128]
    ead0:	str	xzr, [sp, #160]
    ead4:	str	q0, [x9]
    ead8:	strb	w8, [sp, #184]
    eadc:	b	f650 <po_gram_parse@@Base+0xe2c>
    eae0:	ldr	w8, [sp, #148]
    eae4:	cmp	w8, #0x3
    eae8:	b.eq	eb24 <po_gram_parse@@Base+0x300>  // b.none
    eaec:	cbnz	w8, eb88 <po_gram_parse@@Base+0x364>
    eaf0:	adrp	x9, 4c000 <plural_table_size@@Base+0x12c00>
    eaf4:	ldr	x9, [x9, #3752]
    eaf8:	adrp	x0, 36000 <its_merge_context_free@@Base+0x1328>
    eafc:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
    eb00:	mov	w2, #0x5                   	// #5
    eb04:	ldr	w8, [x9]
    eb08:	add	x0, x0, #0xf82
    eb0c:	add	x1, x1, #0x500
    eb10:	add	w8, w8, #0x1
    eb14:	str	w8, [x9]
    eb18:	bl	acd0 <dcgettext@plt>
    eb1c:	bl	aad0 <po_gram_error@plt>
    eb20:	b	eb88 <po_gram_parse@@Base+0x364>
    eb24:	ldr	w8, [x20]
    eb28:	cmp	w8, #0x0
    eb2c:	b.le	eb84 <po_gram_parse@@Base+0x360>
    eb30:	mov	w8, #0xfffffffe            	// #-2
    eb34:	str	w8, [x20]
    eb38:	b	eb88 <po_gram_parse@@Base+0x364>
    eb3c:	adrp	x10, 4c000 <plural_table_size@@Base+0x12c00>
    eb40:	ldr	w9, [sp, #148]
    eb44:	ldr	x10, [x10, #4016]
    eb48:	sub	w8, w9, #0x1
    eb4c:	cmp	w9, #0x0
    eb50:	ldp	q2, q0, [x10, #16]
    eb54:	ldr	x9, [x10, #48]
    eb58:	ldr	q1, [x10]
    eb5c:	csel	w8, wzr, w8, eq  // eq = none
    eb60:	str	w8, [sp, #148]
    eb64:	str	x9, [x26, #104]
    eb68:	stur	q0, [x26, #88]
    eb6c:	stur	q2, [x26, #72]
    eb70:	stur	q1, [x26, #56]
    eb74:	add	x26, x26, #0x38
    eb78:	mov	w8, #0xfffffffe            	// #-2
    eb7c:	str	w8, [x20]
    eb80:	b	f6e0 <po_gram_parse@@Base+0xebc>
    eb84:	cbz	w8, f80c <po_gram_parse@@Base+0xfe8>
    eb88:	add	x26, x26, #0x38
    eb8c:	lsr	x8, x21, x25
    eb90:	tbnz	w8, #0, eba8 <po_gram_parse@@Base+0x384>
    eb94:	sxtw	x8, w25
    eb98:	lsr	x9, x28, x8
    eb9c:	tbz	w9, #0, eba8 <po_gram_parse@@Base+0x384>
    eba0:	cmp	w8, #0x1
    eba4:	b.eq	ebbc <po_gram_parse@@Base+0x398>  // b.none
    eba8:	cmp	x19, x27
    ebac:	b.eq	f80c <po_gram_parse@@Base+0xfe8>  // b.none
    ebb0:	ldrsh	w25, [x27, #-2]!
    ebb4:	sub	x26, x26, #0x38
    ebb8:	b	eb8c <po_gram_parse@@Base+0x368>
    ebbc:	adrp	x9, 4c000 <plural_table_size@@Base+0x12c00>
    ebc0:	ldr	x9, [x9, #4016]
    ebc4:	mov	w25, #0x3                   	// #3
    ebc8:	ldp	q2, q0, [x9, #16]
    ebcc:	ldr	x8, [x9, #48]
    ebd0:	ldr	q1, [x9]
    ebd4:	mov	w9, #0x3                   	// #3
    ebd8:	str	w9, [sp, #148]
    ebdc:	str	x8, [x26, #48]
    ebe0:	stp	q2, q0, [x26, #16]
    ebe4:	str	q1, [x26]
    ebe8:	b	f6e0 <po_gram_parse@@Base+0xebc>
    ebec:	ldurb	w8, [x26, #-96]
    ebf0:	ldurb	w9, [x26, #-16]
    ebf4:	str	x25, [sp, #120]
    ebf8:	mov	x25, x20
    ebfc:	sub	x20, x26, #0x38
    ec00:	cmp	w8, w9
    ec04:	b.eq	ec34 <po_gram_parse@@Base+0x410>  // b.none
    ec08:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    ec0c:	sub	x8, x26, #0x20
    ec10:	mov	w2, #0x5                   	// #5
    ec14:	mov	x0, xzr
    ec18:	add	x1, x1, #0xed8
    ec1c:	str	x8, [sp, #96]
    ec20:	bl	acd0 <dcgettext@plt>
    ec24:	mov	x1, x0
    ec28:	ldr	x0, [sp, #96]
    ec2c:	bl	a500 <po_gram_error_at_line@plt>
    ec30:	ldurb	w8, [x26, #-96]
    ec34:	ldrb	w9, [x26, #16]
    ec38:	cmp	w8, w9
    ec3c:	b.eq	ec60 <po_gram_parse@@Base+0x43c>  // b.none
    ec40:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    ec44:	mov	w2, #0x5                   	// #5
    ec48:	mov	x0, xzr
    ec4c:	add	x1, x1, #0xed8
    ec50:	bl	acd0 <dcgettext@plt>
    ec54:	mov	x1, x0
    ec58:	mov	x0, x26
    ec5c:	bl	a500 <po_gram_error_at_line@plt>
    ec60:	mov	x0, x20
    ec64:	bl	a580 <string_list_concat_destroy@plt>
    ec68:	ldr	q0, [x26]
    ec6c:	ldrb	w8, [x26, #16]
    ec70:	ldr	x9, [sp, #128]
    ec74:	str	x0, [sp, #160]
    ec78:	str	q0, [x9]
    ec7c:	strb	w8, [sp, #184]
    ec80:	b	f648 <po_gram_parse@@Base+0xe24>
    ec84:	add	x0, sp, #0xa0
    ec88:	bl	a770 <string_list_init@plt>
    ec8c:	ldr	x1, [x26]
    ec90:	add	x0, sp, #0xa0
    ec94:	bl	a2a0 <string_list_append@plt>
    ec98:	ldr	x0, [x26]
    ec9c:	bl	aa00 <free@plt>
    eca0:	ldur	q0, [x26, #8]
    eca4:	ldrb	w8, [x26, #24]
    eca8:	b	f2b0 <po_gram_parse@@Base+0xa8c>
    ecac:	ldurb	w8, [x26, #-16]
    ecb0:	ldrb	w9, [x26, #24]
    ecb4:	str	x25, [sp, #120]
    ecb8:	sub	x25, x26, #0x38
    ecbc:	cmp	w8, w9
    ecc0:	b.eq	ecf4 <po_gram_parse@@Base+0x4d0>  // b.none
    ecc4:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    ecc8:	mov	w2, #0x5                   	// #5
    eccc:	mov	x0, xzr
    ecd0:	add	x1, x1, #0xed8
    ecd4:	mov	x24, x20
    ecd8:	add	x20, x26, #0x8
    ecdc:	bl	acd0 <dcgettext@plt>
    ece0:	mov	x1, x0
    ece4:	mov	x0, x20
    ece8:	mov	x20, x24
    ecec:	adrp	x24, 4e000 <formatstring_gfc_internal@@Base+0x10>
    ecf0:	bl	a500 <po_gram_error_at_line@plt>
    ecf4:	ldr	x8, [x25, #16]
    ecf8:	ldr	q0, [x25]
    ecfc:	ldr	x1, [x26]
    ed00:	add	x0, sp, #0xa0
    ed04:	str	x8, [sp, #176]
    ed08:	str	q0, [sp, #160]
    ed0c:	bl	a2a0 <string_list_append@plt>
    ed10:	ldr	x0, [x26]
    ed14:	bl	aa00 <free@plt>
    ed18:	ldur	q0, [x26, #-32]
    ed1c:	ldurb	w8, [x26, #-16]
    ed20:	ldr	x9, [sp, #136]
    ed24:	str	q0, [x9]
    ed28:	strb	w8, [sp, #200]
    ed2c:	b	f64c <po_gram_parse@@Base+0xe28>
    ed30:	ldr	x0, [x26]
    ed34:	bl	adf0 <po_callback_comment_dispatcher@plt>
    ed38:	b	f650 <po_gram_parse@@Base+0xe2c>
    ed3c:	ldr	x0, [x26]
    ed40:	bl	ac50 <po_callback_domain@plt>
    ed44:	b	f650 <po_gram_parse@@Base+0xe2c>
    ed48:	sub	x0, x26, #0x70
    ed4c:	str	x25, [sp, #120]
    ed50:	bl	a580 <string_list_concat_destroy@plt>
    ed54:	str	x0, [sp, #88]
    ed58:	mov	x0, x26
    ed5c:	bl	a580 <string_list_concat_destroy@plt>
    ed60:	ldurb	w25, [x26, #-120]
    ed64:	ldurb	w8, [x26, #-72]
    ed68:	str	x0, [sp, #96]
    ed6c:	cmp	w25, w8
    ed70:	b.eq	edac <po_gram_parse@@Base+0x588>  // b.none
    ed74:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    ed78:	mov	w2, #0x5                   	// #5
    ed7c:	mov	x0, xzr
    ed80:	add	x1, x1, #0xed8
    ed84:	mov	x24, x20
    ed88:	sub	x20, x26, #0x58
    ed8c:	bl	acd0 <dcgettext@plt>
    ed90:	mov	x1, x0
    ed94:	mov	x0, x20
    ed98:	mov	x20, x24
    ed9c:	adrp	x24, 4e000 <formatstring_gfc_internal@@Base+0x10>
    eda0:	bl	a500 <po_gram_error_at_line@plt>
    eda4:	ldr	x0, [sp, #96]
    eda8:	ldurb	w25, [x26, #-120]
    edac:	ldurb	w8, [x26, #-40]
    edb0:	cmp	w25, w8
    edb4:	sub	x8, x26, #0x38
    edb8:	str	x8, [sp, #80]
    edbc:	b.eq	ede8 <po_gram_parse@@Base+0x5c4>  // b.none
    edc0:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    edc4:	mov	w2, #0x5                   	// #5
    edc8:	mov	x0, xzr
    edcc:	add	x1, x1, #0xed8
    edd0:	bl	acd0 <dcgettext@plt>
    edd4:	mov	x1, x0
    edd8:	ldr	x0, [sp, #80]
    eddc:	bl	a500 <po_gram_error_at_line@plt>
    ede0:	ldr	x0, [sp, #96]
    ede4:	ldurb	w25, [x26, #-120]
    ede8:	ldrb	w8, [x26, #40]
    edec:	cmp	w25, w8
    edf0:	b.eq	ee2c <po_gram_parse@@Base+0x608>  // b.none
    edf4:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    edf8:	mov	w2, #0x5                   	// #5
    edfc:	mov	x0, xzr
    ee00:	add	x1, x1, #0xed8
    ee04:	mov	x24, x20
    ee08:	add	x20, x26, #0x18
    ee0c:	bl	acd0 <dcgettext@plt>
    ee10:	mov	x1, x0
    ee14:	mov	x0, x20
    ee18:	mov	x20, x24
    ee1c:	adrp	x24, 4e000 <formatstring_gfc_internal@@Base+0x10>
    ee20:	bl	a500 <po_gram_error_at_line@plt>
    ee24:	ldr	x0, [sp, #96]
    ee28:	ldurb	w25, [x26, #-120]
    ee2c:	cbz	w25, f6e8 <po_gram_parse@@Base+0xec4>
    ee30:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    ee34:	ldr	x8, [x8, #3768]
    ee38:	ldrb	w8, [x8]
    ee3c:	cbnz	w8, f6e8 <po_gram_parse@@Base+0xec4>
    ee40:	ldur	x0, [x26, #-168]
    ee44:	cbz	x0, ee4c <po_gram_parse@@Base+0x628>
    ee48:	bl	aa00 <free@plt>
    ee4c:	ldur	x0, [x26, #-160]
    ee50:	ldr	x25, [sp, #120]
    ee54:	cbz	x0, ee5c <po_gram_parse@@Base+0x638>
    ee58:	bl	aa00 <free@plt>
    ee5c:	ldur	x0, [x26, #-152]
    ee60:	cbz	x0, ee68 <po_gram_parse@@Base+0x644>
    ee64:	bl	aa00 <free@plt>
    ee68:	ldur	x0, [x26, #-144]
    ee6c:	cbz	x0, ee74 <po_gram_parse@@Base+0x650>
    ee70:	bl	aa00 <free@plt>
    ee74:	ldr	x0, [sp, #88]
    ee78:	bl	aa00 <free@plt>
    ee7c:	ldr	x0, [sp, #96]
    ee80:	b	efb4 <po_gram_parse@@Base+0x790>
    ee84:	sub	x0, x26, #0x70
    ee88:	str	x25, [sp, #120]
    ee8c:	bl	a580 <string_list_concat_destroy@plt>
    ee90:	ldurb	w25, [x26, #-120]
    ee94:	ldurb	w8, [x26, #-72]
    ee98:	str	x0, [sp, #96]
    ee9c:	cmp	w25, w8
    eea0:	b.eq	eed8 <po_gram_parse@@Base+0x6b4>  // b.none
    eea4:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    eea8:	mov	w2, #0x5                   	// #5
    eeac:	mov	x0, xzr
    eeb0:	add	x1, x1, #0xed8
    eeb4:	mov	x24, x20
    eeb8:	sub	x20, x26, #0x58
    eebc:	bl	acd0 <dcgettext@plt>
    eec0:	mov	x1, x0
    eec4:	mov	x0, x20
    eec8:	mov	x20, x24
    eecc:	adrp	x24, 4e000 <formatstring_gfc_internal@@Base+0x10>
    eed0:	bl	a500 <po_gram_error_at_line@plt>
    eed4:	ldurb	w25, [x26, #-120]
    eed8:	ldurb	w8, [x26, #-32]
    eedc:	cmp	w25, w8
    eee0:	b.eq	ef18 <po_gram_parse@@Base+0x6f4>  // b.none
    eee4:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    eee8:	mov	w2, #0x5                   	// #5
    eeec:	mov	x0, xzr
    eef0:	add	x1, x1, #0xed8
    eef4:	mov	x24, x20
    eef8:	sub	x20, x26, #0x30
    eefc:	bl	acd0 <dcgettext@plt>
    ef00:	mov	x1, x0
    ef04:	mov	x0, x20
    ef08:	mov	x20, x24
    ef0c:	adrp	x24, 4e000 <formatstring_gfc_internal@@Base+0x10>
    ef10:	bl	a500 <po_gram_error_at_line@plt>
    ef14:	ldurb	w25, [x26, #-120]
    ef18:	ldrb	w8, [x26, #32]
    ef1c:	cmp	w25, w8
    ef20:	b.eq	ef58 <po_gram_parse@@Base+0x734>  // b.none
    ef24:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    ef28:	mov	w2, #0x5                   	// #5
    ef2c:	mov	x0, xzr
    ef30:	add	x1, x1, #0xed8
    ef34:	mov	x24, x20
    ef38:	add	x20, x26, #0x10
    ef3c:	bl	acd0 <dcgettext@plt>
    ef40:	mov	x1, x0
    ef44:	mov	x0, x20
    ef48:	mov	x20, x24
    ef4c:	adrp	x24, 4e000 <formatstring_gfc_internal@@Base+0x10>
    ef50:	bl	a500 <po_gram_error_at_line@plt>
    ef54:	ldurb	w25, [x26, #-120]
    ef58:	cbz	w25, f77c <po_gram_parse@@Base+0xf58>
    ef5c:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    ef60:	ldr	x8, [x8, #3768]
    ef64:	ldrb	w8, [x8]
    ef68:	cbnz	w8, f77c <po_gram_parse@@Base+0xf58>
    ef6c:	ldur	x0, [x26, #-168]
    ef70:	cbz	x0, ef78 <po_gram_parse@@Base+0x754>
    ef74:	bl	aa00 <free@plt>
    ef78:	ldur	x0, [x26, #-160]
    ef7c:	ldr	x25, [sp, #120]
    ef80:	cbz	x0, ef88 <po_gram_parse@@Base+0x764>
    ef84:	bl	aa00 <free@plt>
    ef88:	ldur	x0, [x26, #-152]
    ef8c:	cbz	x0, ef94 <po_gram_parse@@Base+0x770>
    ef90:	bl	aa00 <free@plt>
    ef94:	ldur	x0, [x26, #-144]
    ef98:	cbz	x0, efa0 <po_gram_parse@@Base+0x77c>
    ef9c:	bl	aa00 <free@plt>
    efa0:	ldr	x0, [sp, #96]
    efa4:	bl	aa00 <free@plt>
    efa8:	ldur	x0, [x26, #-56]
    efac:	bl	aa00 <free@plt>
    efb0:	ldr	x0, [x26]
    efb4:	bl	aa00 <free@plt>
    efb8:	b	f650 <po_gram_parse@@Base+0xe2c>
    efbc:	ldurb	w8, [x26, #-64]
    efc0:	ldurb	w9, [x26, #-16]
    efc4:	str	x25, [sp, #120]
    efc8:	mov	x25, x20
    efcc:	cmp	w8, w9
    efd0:	b.eq	effc <po_gram_parse@@Base+0x7d8>  // b.none
    efd4:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    efd8:	mov	w2, #0x5                   	// #5
    efdc:	mov	x0, xzr
    efe0:	add	x1, x1, #0xed8
    efe4:	sub	x20, x26, #0x20
    efe8:	bl	acd0 <dcgettext@plt>
    efec:	mov	x1, x0
    eff0:	mov	x0, x20
    eff4:	bl	a500 <po_gram_error_at_line@plt>
    eff8:	ldurb	w8, [x26, #-64]
    effc:	ldrb	w9, [x26, #24]
    f000:	cmp	w8, w9
    f004:	b.eq	f02c <po_gram_parse@@Base+0x808>  // b.none
    f008:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    f00c:	mov	w2, #0x5                   	// #5
    f010:	mov	x0, xzr
    f014:	add	x1, x1, #0xed8
    f018:	add	x20, x26, #0x8
    f01c:	bl	acd0 <dcgettext@plt>
    f020:	mov	x1, x0
    f024:	mov	x0, x20
    f028:	bl	a500 <po_gram_error_at_line@plt>
    f02c:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    f030:	sub	x20, x26, #0x50
    f034:	mov	w2, #0x5                   	// #5
    f038:	mov	x0, xzr
    f03c:	add	x1, x1, #0xeef
    f040:	b	f0c8 <po_gram_parse@@Base+0x8a4>
    f044:	ldurb	w8, [x26, #-64]
    f048:	ldurb	w9, [x26, #-16]
    f04c:	str	x25, [sp, #120]
    f050:	mov	x25, x20
    f054:	cmp	w8, w9
    f058:	b.eq	f084 <po_gram_parse@@Base+0x860>  // b.none
    f05c:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    f060:	mov	w2, #0x5                   	// #5
    f064:	mov	x0, xzr
    f068:	add	x1, x1, #0xed8
    f06c:	sub	x20, x26, #0x20
    f070:	bl	acd0 <dcgettext@plt>
    f074:	mov	x1, x0
    f078:	mov	x0, x20
    f07c:	bl	a500 <po_gram_error_at_line@plt>
    f080:	ldurb	w8, [x26, #-64]
    f084:	ldrb	w9, [x26, #32]
    f088:	cmp	w8, w9
    f08c:	b.eq	f0b4 <po_gram_parse@@Base+0x890>  // b.none
    f090:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    f094:	mov	w2, #0x5                   	// #5
    f098:	mov	x0, xzr
    f09c:	add	x1, x1, #0xed8
    f0a0:	add	x20, x26, #0x10
    f0a4:	bl	acd0 <dcgettext@plt>
    f0a8:	mov	x1, x0
    f0ac:	mov	x0, x20
    f0b0:	bl	a500 <po_gram_error_at_line@plt>
    f0b4:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    f0b8:	sub	x20, x26, #0x50
    f0bc:	mov	w2, #0x5                   	// #5
    f0c0:	mov	x0, xzr
    f0c4:	add	x1, x1, #0xf0a
    f0c8:	bl	acd0 <dcgettext@plt>
    f0cc:	mov	x1, x0
    f0d0:	mov	x0, x20
    f0d4:	bl	a500 <po_gram_error_at_line@plt>
    f0d8:	ldur	x0, [x26, #-112]
    f0dc:	cbz	x0, f0e4 <po_gram_parse@@Base+0x8c0>
    f0e0:	bl	aa00 <free@plt>
    f0e4:	ldur	x0, [x26, #-104]
    f0e8:	cbz	x0, f0f0 <po_gram_parse@@Base+0x8cc>
    f0ec:	bl	aa00 <free@plt>
    f0f0:	ldur	x0, [x26, #-96]
    f0f4:	sub	x20, x26, #0x38
    f0f8:	cbz	x0, f100 <po_gram_parse@@Base+0x8dc>
    f0fc:	bl	aa00 <free@plt>
    f100:	ldur	x0, [x26, #-88]
    f104:	cbz	x0, f10c <po_gram_parse@@Base+0x8e8>
    f108:	bl	aa00 <free@plt>
    f10c:	mov	x0, x20
    f110:	bl	a190 <string_list_destroy@plt>
    f114:	ldr	x0, [x26]
    f118:	bl	aa00 <free@plt>
    f11c:	b	f648 <po_gram_parse@@Base+0xe24>
    f120:	ldurb	w8, [x26, #-8]
    f124:	ldrb	w9, [x26, #40]
    f128:	str	x25, [sp, #120]
    f12c:	mov	x25, x20
    f130:	cmp	w8, w9
    f134:	b.eq	f15c <po_gram_parse@@Base+0x938>  // b.none
    f138:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    f13c:	mov	w2, #0x5                   	// #5
    f140:	mov	x0, xzr
    f144:	add	x1, x1, #0xed8
    f148:	add	x20, x26, #0x18
    f14c:	bl	acd0 <dcgettext@plt>
    f150:	mov	x1, x0
    f154:	mov	x0, x20
    f158:	bl	a500 <po_gram_error_at_line@plt>
    f15c:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    f160:	mov	w2, #0x5                   	// #5
    f164:	mov	x0, xzr
    f168:	add	x1, x1, #0xf29
    f16c:	sub	x20, x26, #0x18
    f170:	bl	acd0 <dcgettext@plt>
    f174:	mov	x1, x0
    f178:	mov	x0, x20
    f17c:	bl	a500 <po_gram_error_at_line@plt>
    f180:	ldur	x0, [x26, #-56]
    f184:	cbz	x0, f18c <po_gram_parse@@Base+0x968>
    f188:	bl	aa00 <free@plt>
    f18c:	ldur	x0, [x26, #-48]
    f190:	cbz	x0, f198 <po_gram_parse@@Base+0x974>
    f194:	bl	aa00 <free@plt>
    f198:	ldur	x0, [x26, #-40]
    f19c:	mov	x20, x25
    f1a0:	cbz	x0, f1a8 <po_gram_parse@@Base+0x984>
    f1a4:	bl	aa00 <free@plt>
    f1a8:	ldur	x0, [x26, #-32]
    f1ac:	ldr	x25, [sp, #120]
    f1b0:	cbz	x0, f1b8 <po_gram_parse@@Base+0x994>
    f1b4:	bl	aa00 <free@plt>
    f1b8:	mov	x0, x26
    f1bc:	bl	a190 <string_list_destroy@plt>
    f1c0:	b	f650 <po_gram_parse@@Base+0xe2c>
    f1c4:	ldr	x8, [x26]
    f1c8:	ldur	q0, [x26, #8]
    f1cc:	ldrb	w9, [x26, #24]
    f1d0:	stp	xzr, xzr, [sp, #160]
    f1d4:	stp	xzr, x8, [sp, #176]
    f1d8:	ldr	x8, [sp, #104]
    f1dc:	str	q0, [x8]
    f1e0:	strb	w9, [sp, #208]
    f1e4:	b	f650 <po_gram_parse@@Base+0xe2c>
    f1e8:	ldurb	w8, [x26, #-16]
    f1ec:	ldrb	w9, [x26, #24]
    f1f0:	cmp	w8, w9
    f1f4:	b.eq	f228 <po_gram_parse@@Base+0xa04>  // b.none
    f1f8:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    f1fc:	mov	w2, #0x5                   	// #5
    f200:	mov	x0, xzr
    f204:	add	x1, x1, #0xed8
    f208:	mov	x24, x20
    f20c:	add	x20, x26, #0x8
    f210:	bl	acd0 <dcgettext@plt>
    f214:	mov	x1, x0
    f218:	mov	x0, x20
    f21c:	mov	x20, x24
    f220:	adrp	x24, 4e000 <formatstring_gfc_internal@@Base+0x10>
    f224:	bl	a500 <po_gram_error_at_line@plt>
    f228:	ldp	x8, x9, [x26, #-56]
    f22c:	ldur	x10, [x26, #-40]
    f230:	ldr	x11, [x26]
    f234:	ldur	q0, [x26, #8]
    f238:	ldrb	w12, [x26, #24]
    f23c:	stp	x8, x9, [sp, #160]
    f240:	ldr	x8, [sp, #104]
    f244:	stp	x10, x11, [sp, #176]
    f248:	str	q0, [x8]
    f24c:	strb	w12, [sp, #208]
    f250:	b	f650 <po_gram_parse@@Base+0xe2c>
    f254:	ldurb	w8, [x26, #-32]
    f258:	ldrb	w9, [x26, #40]
    f25c:	cmp	w8, w9
    f260:	b.eq	f294 <po_gram_parse@@Base+0xa70>  // b.none
    f264:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    f268:	mov	w2, #0x5                   	// #5
    f26c:	mov	x0, xzr
    f270:	add	x1, x1, #0xed8
    f274:	mov	x24, x20
    f278:	add	x20, x26, #0x18
    f27c:	bl	acd0 <dcgettext@plt>
    f280:	mov	x1, x0
    f284:	mov	x0, x20
    f288:	mov	x20, x24
    f28c:	adrp	x24, 4e000 <formatstring_gfc_internal@@Base+0x10>
    f290:	bl	a500 <po_gram_error_at_line@plt>
    f294:	ldur	x8, [x26, #-56]
    f298:	mov	x0, x26
    f29c:	str	x8, [sp, #160]
    f2a0:	bl	a580 <string_list_concat_destroy@plt>
    f2a4:	ldur	q0, [x26, #-48]
    f2a8:	ldurb	w8, [x26, #-32]
    f2ac:	stp	x0, xzr, [sp, #168]
    f2b0:	ldr	x9, [sp, #136]
    f2b4:	str	q0, [x9]
    f2b8:	strb	w8, [sp, #200]
    f2bc:	b	f650 <po_gram_parse@@Base+0xe2c>
    f2c0:	ldurb	w8, [x26, #-88]
    f2c4:	ldurb	w9, [x26, #-16]
    f2c8:	sub	x0, x26, #0x38
    f2cc:	str	x0, [sp, #120]
    f2d0:	cmp	w8, w9
    f2d4:	b.eq	f310 <po_gram_parse@@Base+0xaec>  // b.none
    f2d8:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    f2dc:	mov	w2, #0x5                   	// #5
    f2e0:	mov	x0, xzr
    f2e4:	add	x1, x1, #0xed8
    f2e8:	mov	x24, x20
    f2ec:	sub	x20, x26, #0x20
    f2f0:	bl	acd0 <dcgettext@plt>
    f2f4:	mov	x1, x0
    f2f8:	mov	x0, x20
    f2fc:	mov	x20, x24
    f300:	adrp	x24, 4e000 <formatstring_gfc_internal@@Base+0x10>
    f304:	bl	a500 <po_gram_error_at_line@plt>
    f308:	ldr	x0, [sp, #120]
    f30c:	ldurb	w8, [x26, #-88]
    f310:	ldrb	w9, [x26, #24]
    f314:	cmp	w8, w9
    f318:	b.eq	f350 <po_gram_parse@@Base+0xb2c>  // b.none
    f31c:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    f320:	mov	w2, #0x5                   	// #5
    f324:	mov	x0, xzr
    f328:	add	x1, x1, #0xed8
    f32c:	mov	x24, x20
    f330:	add	x20, x26, #0x8
    f334:	bl	acd0 <dcgettext@plt>
    f338:	mov	x1, x0
    f33c:	mov	x0, x20
    f340:	mov	x20, x24
    f344:	adrp	x24, 4e000 <formatstring_gfc_internal@@Base+0x10>
    f348:	bl	a500 <po_gram_error_at_line@plt>
    f34c:	ldr	x0, [sp, #120]
    f350:	ldur	x8, [x26, #-112]
    f354:	str	x8, [sp, #160]
    f358:	bl	a580 <string_list_concat_destroy@plt>
    f35c:	ldr	x8, [x26]
    f360:	ldur	q0, [x26, #-104]
    f364:	ldurb	w9, [x26, #-88]
    f368:	stp	x0, x8, [sp, #168]
    f36c:	ldr	x8, [sp, #136]
    f370:	str	q0, [x8]
    f374:	strb	w9, [sp, #200]
    f378:	b	f650 <po_gram_parse@@Base+0xe2c>
    f37c:	ldurb	w8, [x26, #-40]
    f380:	ldrb	w9, [x26, #40]
    f384:	str	x25, [sp, #120]
    f388:	sub	x25, x26, #0x38
    f38c:	cmp	w8, w9
    f390:	b.eq	f3c4 <po_gram_parse@@Base+0xba0>  // b.none
    f394:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    f398:	mov	w2, #0x5                   	// #5
    f39c:	mov	x0, xzr
    f3a0:	add	x1, x1, #0xed8
    f3a4:	mov	x24, x20
    f3a8:	add	x20, x26, #0x18
    f3ac:	bl	acd0 <dcgettext@plt>
    f3b0:	mov	x1, x0
    f3b4:	mov	x0, x20
    f3b8:	mov	x20, x24
    f3bc:	adrp	x24, 4e000 <formatstring_gfc_internal@@Base+0x10>
    f3c0:	bl	a500 <po_gram_error_at_line@plt>
    f3c4:	str	xzr, [x24, #728]
    f3c8:	b	f414 <po_gram_parse@@Base+0xbf0>
    f3cc:	ldurb	w8, [x26, #-40]
    f3d0:	ldrb	w9, [x26, #40]
    f3d4:	str	x25, [sp, #120]
    f3d8:	sub	x25, x26, #0x38
    f3dc:	cmp	w8, w9
    f3e0:	b.eq	f414 <po_gram_parse@@Base+0xbf0>  // b.none
    f3e4:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    f3e8:	mov	w2, #0x5                   	// #5
    f3ec:	mov	x0, xzr
    f3f0:	add	x1, x1, #0xed8
    f3f4:	mov	x24, x20
    f3f8:	add	x20, x26, #0x18
    f3fc:	bl	acd0 <dcgettext@plt>
    f400:	mov	x1, x0
    f404:	mov	x0, x20
    f408:	mov	x20, x24
    f40c:	adrp	x24, 4e000 <formatstring_gfc_internal@@Base+0x10>
    f410:	bl	a500 <po_gram_error_at_line@plt>
    f414:	mov	x0, x26
    f418:	bl	a580 <string_list_concat_destroy@plt>
    f41c:	ldr	q0, [x25]
    f420:	ldurb	w8, [x26, #-40]
    f424:	ldr	x9, [sp, #128]
    f428:	str	x0, [sp, #160]
    f42c:	str	q0, [x9]
    f430:	strb	w8, [sp, #184]
    f434:	b	f64c <po_gram_parse@@Base+0xe28>
    f438:	ldr	x8, [x26, #32]
    f43c:	ldp	q1, q0, [x26]
    f440:	str	x8, [sp, #192]
    f444:	stp	q1, q0, [sp, #160]
    f448:	b	f650 <po_gram_parse@@Base+0xe2c>
    f44c:	ldurb	w8, [x26, #-24]
    f450:	ldrb	w9, [x26, #32]
    f454:	cmp	w8, w9
    f458:	b.eq	f48c <po_gram_parse@@Base+0xc68>  // b.none
    f45c:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    f460:	mov	w2, #0x5                   	// #5
    f464:	mov	x0, xzr
    f468:	add	x1, x1, #0xed8
    f46c:	mov	x24, x20
    f470:	add	x20, x26, #0x10
    f474:	bl	acd0 <dcgettext@plt>
    f478:	mov	x1, x0
    f47c:	mov	x0, x20
    f480:	mov	x20, x24
    f484:	adrp	x24, 4e000 <formatstring_gfc_internal@@Base+0x10>
    f488:	bl	a500 <po_gram_error_at_line@plt>
    f48c:	ldur	x8, [x26, #-48]
    f490:	ldr	x9, [x26, #8]
    f494:	add	x0, x9, x8
    f498:	bl	a590 <xmalloc@plt>
    f49c:	ldp	x1, x2, [x26, #-56]
    f4a0:	str	x0, [sp, #160]
    f4a4:	bl	a040 <memcpy@plt>
    f4a8:	ldr	x8, [sp, #160]
    f4ac:	ldur	x9, [x26, #-48]
    f4b0:	ldp	x1, x2, [x26]
    f4b4:	add	x0, x8, x9
    f4b8:	bl	a040 <memcpy@plt>
    f4bc:	ldr	x8, [x26, #8]
    f4c0:	ldp	x0, x9, [x26, #-56]
    f4c4:	add	x8, x8, x9
    f4c8:	str	x8, [sp, #168]
    f4cc:	bl	aa00 <free@plt>
    f4d0:	ldr	x0, [x26]
    f4d4:	bl	aa00 <free@plt>
    f4d8:	ldur	q0, [x26, #-40]
    f4dc:	ldurb	w8, [x26, #-24]
    f4e0:	ldr	x9, [sp, #112]
    f4e4:	str	q0, [x9]
    f4e8:	strb	w8, [sp, #192]
    f4ec:	b	f650 <po_gram_parse@@Base+0xe2c>
    f4f0:	ldurb	w8, [x26, #-208]
    f4f4:	ldurb	w9, [x26, #-152]
    f4f8:	str	x25, [sp, #120]
    f4fc:	mov	x25, x20
    f500:	cmp	w8, w9
    f504:	b.eq	f530 <po_gram_parse@@Base+0xd0c>  // b.none
    f508:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    f50c:	mov	w2, #0x5                   	// #5
    f510:	mov	x0, xzr
    f514:	add	x1, x1, #0xed8
    f518:	sub	x20, x26, #0xa8
    f51c:	bl	acd0 <dcgettext@plt>
    f520:	mov	x1, x0
    f524:	mov	x0, x20
    f528:	bl	a500 <po_gram_error_at_line@plt>
    f52c:	ldurb	w8, [x26, #-208]
    f530:	ldurb	w9, [x26, #-88]
    f534:	cmp	w8, w9
    f538:	b.eq	f564 <po_gram_parse@@Base+0xd40>  // b.none
    f53c:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    f540:	mov	w2, #0x5                   	// #5
    f544:	mov	x0, xzr
    f548:	add	x1, x1, #0xed8
    f54c:	sub	x20, x26, #0x68
    f550:	bl	acd0 <dcgettext@plt>
    f554:	mov	x1, x0
    f558:	mov	x0, x20
    f55c:	bl	a500 <po_gram_error_at_line@plt>
    f560:	ldurb	w8, [x26, #-208]
    f564:	ldurb	w9, [x26, #-40]
    f568:	cmp	w8, w9
    f56c:	b.eq	f598 <po_gram_parse@@Base+0xd74>  // b.none
    f570:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    f574:	mov	w2, #0x5                   	// #5
    f578:	mov	x0, xzr
    f57c:	add	x1, x1, #0xed8
    f580:	sub	x20, x26, #0x38
    f584:	bl	acd0 <dcgettext@plt>
    f588:	mov	x1, x0
    f58c:	mov	x0, x20
    f590:	bl	a500 <po_gram_error_at_line@plt>
    f594:	ldurb	w8, [x26, #-208]
    f598:	ldrb	w9, [x26, #40]
    f59c:	sub	x20, x26, #0xe0
    f5a0:	cmp	w8, w9
    f5a4:	b.eq	f5d0 <po_gram_parse@@Base+0xdac>  // b.none
    f5a8:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    f5ac:	add	x8, x26, #0x18
    f5b0:	mov	w2, #0x5                   	// #5
    f5b4:	mov	x0, xzr
    f5b8:	add	x1, x1, #0xed8
    f5bc:	str	x8, [sp, #96]
    f5c0:	bl	acd0 <dcgettext@plt>
    f5c4:	mov	x1, x0
    f5c8:	ldr	x0, [sp, #96]
    f5cc:	bl	a500 <po_gram_error_at_line@plt>
    f5d0:	ldur	x9, [x26, #-112]
    f5d4:	ldr	x8, [x24, #728]
    f5d8:	cmp	x9, x8
    f5dc:	b.eq	f610 <po_gram_parse@@Base+0xdec>  // b.none
    f5e0:	cmp	x8, #0x0
    f5e4:	adrp	x8, 36000 <its_merge_context_free@@Base+0x1328>
    f5e8:	adrp	x9, 36000 <its_merge_context_free@@Base+0x1328>
    f5ec:	add	x8, x8, #0xf66
    f5f0:	add	x9, x9, #0xf42
    f5f4:	csel	x1, x9, x8, eq  // eq = none
    f5f8:	mov	w2, #0x5                   	// #5
    f5fc:	mov	x0, xzr
    f600:	bl	acd0 <dcgettext@plt>
    f604:	mov	x1, x0
    f608:	mov	x0, x20
    f60c:	bl	a500 <po_gram_error_at_line@plt>
    f610:	ldr	x8, [x24, #728]
    f614:	mov	x0, x26
    f618:	add	x8, x8, #0x1
    f61c:	str	x8, [x24, #728]
    f620:	bl	a580 <string_list_concat_destroy@plt>
    f624:	str	x0, [sp, #160]
    f628:	bl	a0d0 <strlen@plt>
    f62c:	add	x9, x0, #0x1
    f630:	ldr	q0, [x20]
    f634:	ldurb	w8, [x26, #-208]
    f638:	str	x9, [sp, #168]
    f63c:	ldr	x9, [sp, #112]
    f640:	str	q0, [x9]
    f644:	strb	w8, [sp, #192]
    f648:	mov	x20, x25
    f64c:	ldr	x25, [sp, #120]
    f650:	adrp	x10, 36000 <its_merge_context_free@@Base+0x1328>
    f654:	add	x10, x10, #0xe9b
    f658:	ldp	q0, q1, [sp, #160]
    f65c:	ldr	x9, [sp, #208]
    f660:	ldr	q2, [sp, #192]
    f664:	ldrb	w10, [x10, x25]
    f668:	mov	w8, #0x38                  	// #56
    f66c:	mneg	x8, x23, x8
    f670:	add	x11, x26, x8
    f674:	adrp	x8, 36000 <its_merge_context_free@@Base+0x1328>
    f678:	sub	x27, x27, x23, lsl #1
    f67c:	str	x9, [x11, #104]
    f680:	stur	q2, [x11, #88]
    f684:	stur	q1, [x11, #72]
    f688:	stur	q0, [x11, #56]
    f68c:	sub	x9, x10, #0x13
    f690:	add	x8, x8, #0xeba
    f694:	ldrsb	w8, [x8, x9]
    f698:	ldrsh	w10, [x27]
    f69c:	add	x26, x11, #0x38
    f6a0:	add	w8, w10, w8
    f6a4:	cmp	w8, #0x28
    f6a8:	b.hi	f6d4 <po_gram_parse@@Base+0xeb0>  // b.pmore
    f6ac:	adrp	x11, 36000 <its_merge_context_free@@Base+0x1328>
    f6b0:	add	x11, x11, #0xdfc
    f6b4:	ldrsb	w11, [x11, w8, uxtw]
    f6b8:	and	w10, w10, #0xffff
    f6bc:	cmp	w10, w11, uxth
    f6c0:	b.ne	f6d4 <po_gram_parse@@Base+0xeb0>  // b.any
    f6c4:	adrp	x9, 36000 <its_merge_context_free@@Base+0x1328>
    f6c8:	add	x9, x9, #0xe25
    f6cc:	ldrb	w25, [x9, x8]
    f6d0:	b	f6e0 <po_gram_parse@@Base+0xebc>
    f6d4:	adrp	x8, 36000 <its_merge_context_free@@Base+0x1328>
    f6d8:	add	x8, x8, #0xec9
    f6dc:	ldrsb	w25, [x8, x9]
    f6e0:	add	x27, x27, #0x2
    f6e4:	b	e8c8 <po_gram_parse@@Base+0xa4>
    f6e8:	ldur	x20, [x26, #-144]
    f6ec:	sub	x8, x26, #0x88
    f6f0:	str	x8, [sp, #96]
    f6f4:	mov	x24, x0
    f6f8:	bl	a0d0 <strlen@plt>
    f6fc:	ldp	x7, x9, [x26, #-168]
    f700:	ldur	x10, [x26, #-152]
    f704:	ldr	x1, [sp, #88]
    f708:	add	x5, x0, #0x1
    f70c:	cbnz	x20, f744 <po_gram_parse@@Base+0xf20>
    f710:	ldrb	w8, [x1]
    f714:	orr	w8, w8, w25
    f718:	cbnz	w8, f744 <po_gram_parse@@Base+0xf20>
    f71c:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    f720:	ldr	x8, [x8, #4000]
    f724:	mov	x0, x24
    f728:	stp	x5, x7, [sp, #64]
    f72c:	stp	x10, x9, [sp, #48]
    f730:	ldr	x1, [x8]
    f734:	bl	a090 <po_lex_charset_set@plt>
    f738:	ldp	x10, x9, [sp, #48]
    f73c:	ldp	x5, x7, [sp, #64]
    f740:	ldr	x1, [sp, #88]
    f744:	ldr	x2, [sp, #96]
    f748:	ldr	x6, [sp, #80]
    f74c:	cmp	w25, #0x0
    f750:	cset	w8, ne  // ne = any
    f754:	mov	x0, x20
    f758:	mov	x3, xzr
    f75c:	mov	x4, x24
    f760:	strb	wzr, [sp, #16]
    f764:	stp	x9, x10, [sp]
    f768:	strb	w8, [sp, #24]
    f76c:	bl	a530 <po_callback_message@plt>
    f770:	adrp	x20, 4c000 <plural_table_size@@Base+0x12c00>
    f774:	ldr	x20, [x20, #3728]
    f778:	b	f804 <po_gram_parse@@Base+0xfe0>
    f77c:	mov	x24, x20
    f780:	ldur	x3, [x26, #-56]
    f784:	ldp	x4, x5, [x26]
    f788:	ldp	x7, x9, [x26, #-168]
    f78c:	ldp	x10, x20, [x26, #-152]
    f790:	sub	x2, x26, #0x88
    f794:	add	x6, x26, #0x10
    f798:	cbnz	x20, f7e0 <po_gram_parse@@Base+0xfbc>
    f79c:	ldr	x8, [sp, #96]
    f7a0:	ldrb	w8, [x8]
    f7a4:	orr	w8, w8, w25
    f7a8:	cbnz	w8, f7e0 <po_gram_parse@@Base+0xfbc>
    f7ac:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    f7b0:	ldr	x8, [x8, #4000]
    f7b4:	mov	x0, x4
    f7b8:	stp	x4, x3, [sp, #80]
    f7bc:	stp	x7, x5, [sp, #64]
    f7c0:	ldr	x1, [x8]
    f7c4:	stp	x2, x6, [sp, #48]
    f7c8:	stp	x10, x9, [sp, #32]
    f7cc:	bl	a090 <po_lex_charset_set@plt>
    f7d0:	ldp	x10, x9, [sp, #32]
    f7d4:	ldp	x2, x6, [sp, #48]
    f7d8:	ldp	x7, x5, [sp, #64]
    f7dc:	ldp	x4, x3, [sp, #80]
    f7e0:	ldr	x1, [sp, #96]
    f7e4:	cmp	w25, #0x0
    f7e8:	cset	w8, ne  // ne = any
    f7ec:	mov	x0, x20
    f7f0:	strb	wzr, [sp, #16]
    f7f4:	stp	x9, x10, [sp]
    f7f8:	strb	w8, [sp, #24]
    f7fc:	bl	a530 <po_callback_message@plt>
    f800:	mov	x20, x24
    f804:	adrp	x24, 4e000 <formatstring_gfc_internal@@Base+0x10>
    f808:	b	f64c <po_gram_parse@@Base+0xe28>
    f80c:	mov	w20, #0x1                   	// #1
    f810:	add	x8, sp, #0x2, lsl #12
    f814:	add	x8, x8, #0xc98
    f818:	cmp	x19, x8
    f81c:	b.eq	f828 <po_gram_parse@@Base+0x1004>  // b.none
    f820:	mov	x0, x19
    f824:	bl	aa00 <free@plt>
    f828:	mov	w0, w20
    f82c:	add	sp, sp, #0x2, lsl #12
    f830:	add	sp, sp, #0xe30
    f834:	ldp	x20, x19, [sp, #80]
    f838:	ldp	x22, x21, [sp, #64]
    f83c:	ldp	x24, x23, [sp, #48]
    f840:	ldp	x26, x25, [sp, #32]
    f844:	ldp	x28, x27, [sp, #16]
    f848:	ldp	x29, x30, [sp], #96
    f84c:	ret
    f850:	adrp	x0, 36000 <its_merge_context_free@@Base+0x1328>
    f854:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
    f858:	add	x0, x0, #0xf82
    f85c:	add	x1, x1, #0xb16
    f860:	mov	w2, #0x5                   	// #5
    f864:	bl	acd0 <dcgettext@plt>
    f868:	bl	aad0 <po_gram_error@plt>
    f86c:	mov	w20, #0x2                   	// #2
    f870:	b	f810 <po_gram_parse@@Base+0xfec>
    f874:	mov	w20, wzr
    f878:	b	f810 <po_gram_parse@@Base+0xfec>
    f87c:	mov	w20, #0x1                   	// #1
    f880:	mov	x19, x23
    f884:	b	f820 <po_gram_parse@@Base+0xffc>

000000000000f888 <po_charset_canonicalize@@Base>:
    f888:	stp	x29, x30, [sp, #-48]!
    f88c:	stp	x20, x19, [sp, #32]
    f890:	adrp	x20, 4c000 <plural_table_size@@Base+0x12c00>
    f894:	str	x21, [sp, #16]
    f898:	mov	x19, x0
    f89c:	mov	x21, xzr
    f8a0:	add	x20, x20, #0x848
    f8a4:	mov	x29, sp
    f8a8:	ldr	x1, [x20, x21, lsl #3]
    f8ac:	mov	x0, x19
    f8b0:	bl	ace0 <c_strcasecmp@plt>
    f8b4:	cbz	w0, f8cc <po_charset_canonicalize@@Base+0x44>
    f8b8:	add	x21, x21, #0x1
    f8bc:	cmp	x21, #0x3a
    f8c0:	b.ne	f8a8 <po_charset_canonicalize@@Base+0x20>  // b.any
    f8c4:	mov	x0, xzr
    f8c8:	b	f8f0 <po_charset_canonicalize@@Base+0x68>
    f8cc:	subs	x8, x21, #0x3
    f8d0:	b.cs	f8dc <po_charset_canonicalize@@Base+0x54>  // b.hs, b.nlast
    f8d4:	mov	x8, xzr
    f8d8:	b	f8ec <po_charset_canonicalize@@Base+0x64>
    f8dc:	and	x8, x8, #0xfffffffffffffffe
    f8e0:	add	x8, x8, #0x3
    f8e4:	cmp	x21, #0x1b
    f8e8:	csel	x8, x8, x21, cc  // cc = lo, ul, last
    f8ec:	ldr	x0, [x20, x8, lsl #3]
    f8f0:	ldp	x20, x19, [sp, #32]
    f8f4:	ldr	x21, [sp, #16]
    f8f8:	ldp	x29, x30, [sp], #48
    f8fc:	ret

000000000000f900 <po_charset_ascii_compatible@@Base>:
    f900:	stp	x29, x30, [sp, #-32]!
    f904:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
    f908:	add	x1, x1, #0x16b
    f90c:	str	x19, [sp, #16]
    f910:	mov	x29, sp
    f914:	mov	x19, x0
    f918:	bl	a8d0 <strcmp@plt>
    f91c:	cbz	w0, f950 <po_charset_ascii_compatible@@Base+0x50>
    f920:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
    f924:	add	x1, x1, #0x175
    f928:	mov	x0, x19
    f92c:	bl	a8d0 <strcmp@plt>
    f930:	cbz	w0, f950 <po_charset_ascii_compatible@@Base+0x50>
    f934:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
    f938:	add	x1, x1, #0x183
    f93c:	mov	x0, x19
    f940:	bl	a8d0 <strcmp@plt>
    f944:	cmp	w0, #0x0
    f948:	cset	w0, ne  // ne = any
    f94c:	b	f954 <po_charset_ascii_compatible@@Base+0x54>
    f950:	mov	w0, wzr
    f954:	ldr	x19, [sp, #16]
    f958:	ldp	x29, x30, [sp], #32
    f95c:	ret

000000000000f960 <po_is_charset_weird@@Base>:
    f960:	stp	x29, x30, [sp, #-48]!
    f964:	str	x21, [sp, #16]
    f968:	adrp	x21, 4c000 <plural_table_size@@Base+0x12c00>
    f96c:	stp	x20, x19, [sp, #32]
    f970:	mov	x19, x0
    f974:	mov	x20, xzr
    f978:	add	x21, x21, #0xa18
    f97c:	mov	x29, sp
    f980:	ldr	x1, [x21, x20]
    f984:	mov	x0, x19
    f988:	bl	a8d0 <strcmp@plt>
    f98c:	cbz	w0, f9a4 <po_is_charset_weird@@Base+0x44>
    f990:	add	x20, x20, #0x8
    f994:	cmp	x20, #0x30
    f998:	b.ne	f980 <po_is_charset_weird@@Base+0x20>  // b.any
    f99c:	mov	w0, wzr
    f9a0:	b	f9a8 <po_is_charset_weird@@Base+0x48>
    f9a4:	mov	w0, #0x1                   	// #1
    f9a8:	ldp	x20, x19, [sp, #32]
    f9ac:	ldr	x21, [sp, #16]
    f9b0:	ldp	x29, x30, [sp], #48
    f9b4:	ret

000000000000f9b8 <po_is_charset_weird_cjk@@Base>:
    f9b8:	stp	x29, x30, [sp, #-48]!
    f9bc:	str	x21, [sp, #16]
    f9c0:	adrp	x21, 4c000 <plural_table_size@@Base+0x12c00>
    f9c4:	stp	x20, x19, [sp, #32]
    f9c8:	mov	x19, x0
    f9cc:	mov	x20, xzr
    f9d0:	add	x21, x21, #0xa18
    f9d4:	mov	x29, sp
    f9d8:	ldr	x1, [x21, x20]
    f9dc:	mov	x0, x19
    f9e0:	bl	a8d0 <strcmp@plt>
    f9e4:	cbz	w0, f9fc <po_is_charset_weird_cjk@@Base+0x44>
    f9e8:	add	x20, x20, #0x8
    f9ec:	cmp	x20, #0x30
    f9f0:	b.ne	f9d8 <po_is_charset_weird_cjk@@Base+0x20>  // b.any
    f9f4:	mov	w0, wzr
    f9f8:	b	fa00 <po_is_charset_weird_cjk@@Base+0x48>
    f9fc:	mov	w0, #0x1                   	// #1
    fa00:	ldp	x20, x19, [sp, #32]
    fa04:	ldr	x21, [sp, #16]
    fa08:	ldp	x29, x30, [sp], #48
    fa0c:	ret

000000000000fa10 <po_charset_character_iterator@@Base>:
    fa10:	stp	x29, x30, [sp, #-32]!
    fa14:	adrp	x8, 36000 <its_merge_context_free@@Base+0x1328>
    fa18:	add	x8, x8, #0xf96
    fa1c:	cmp	x0, x8
    fa20:	str	x19, [sp, #16]
    fa24:	mov	x29, sp
    fa28:	b.eq	fb18 <po_charset_character_iterator@@Base+0x108>  // b.none
    fa2c:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
    fa30:	add	x1, x1, #0x133
    fa34:	mov	x19, x0
    fa38:	bl	a8d0 <strcmp@plt>
    fa3c:	cbz	w0, fb0c <po_charset_character_iterator@@Base+0xfc>
    fa40:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
    fa44:	add	x1, x1, #0x141
    fa48:	mov	x0, x19
    fa4c:	bl	a8d0 <strcmp@plt>
    fa50:	cbz	w0, fb0c <po_charset_character_iterator@@Base+0xfc>
    fa54:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
    fa58:	add	x1, x1, #0x13a
    fa5c:	mov	x0, x19
    fa60:	bl	a8d0 <strcmp@plt>
    fa64:	cbz	w0, fb2c <po_charset_character_iterator@@Base+0x11c>
    fa68:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
    fa6c:	add	x1, x1, #0x148
    fa70:	mov	x0, x19
    fa74:	bl	a8d0 <strcmp@plt>
    fa78:	cbz	w0, fb38 <po_charset_character_iterator@@Base+0x128>
    fa7c:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
    fa80:	add	x1, x1, #0x14f
    fa84:	mov	x0, x19
    fa88:	bl	a8d0 <strcmp@plt>
    fa8c:	cbz	w0, fb44 <po_charset_character_iterator@@Base+0x134>
    fa90:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
    fa94:	add	x1, x1, #0x154
    fa98:	mov	x0, x19
    fa9c:	bl	a8d0 <strcmp@plt>
    faa0:	cbz	w0, fb50 <po_charset_character_iterator@@Base+0x140>
    faa4:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
    faa8:	add	x1, x1, #0x15f
    faac:	mov	x0, x19
    fab0:	bl	a8d0 <strcmp@plt>
    fab4:	cbz	w0, fb5c <po_charset_character_iterator@@Base+0x14c>
    fab8:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
    fabc:	add	x1, x1, #0x163
    fac0:	mov	x0, x19
    fac4:	bl	a8d0 <strcmp@plt>
    fac8:	cbz	w0, fb68 <po_charset_character_iterator@@Base+0x158>
    facc:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
    fad0:	add	x1, x1, #0x16b
    fad4:	mov	x0, x19
    fad8:	bl	a8d0 <strcmp@plt>
    fadc:	cbz	w0, fb74 <po_charset_character_iterator@@Base+0x164>
    fae0:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
    fae4:	add	x1, x1, #0x175
    fae8:	mov	x0, x19
    faec:	bl	a8d0 <strcmp@plt>
    faf0:	adrp	x8, f000 <po_gram_parse@@Base+0x7dc>
    faf4:	adrp	x9, f000 <po_gram_parse@@Base+0x7dc>
    faf8:	add	x8, x8, #0xfc4
    fafc:	add	x9, x9, #0xf48
    fb00:	cmp	w0, #0x0
    fb04:	csel	x0, x9, x8, eq  // eq = none
    fb08:	b	fb20 <po_charset_character_iterator@@Base+0x110>
    fb0c:	adrp	x0, f000 <po_gram_parse@@Base+0x7dc>
    fb10:	add	x0, x0, #0xc3c
    fb14:	b	fb20 <po_charset_character_iterator@@Base+0x110>
    fb18:	adrp	x0, f000 <po_gram_parse@@Base+0x7dc>
    fb1c:	add	x0, x0, #0xb80
    fb20:	ldr	x19, [sp, #16]
    fb24:	ldp	x29, x30, [sp], #32
    fb28:	ret
    fb2c:	adrp	x0, f000 <po_gram_parse@@Base+0x7dc>
    fb30:	add	x0, x0, #0xc74
    fb34:	b	fb20 <po_charset_character_iterator@@Base+0x110>
    fb38:	adrp	x0, f000 <po_gram_parse@@Base+0x7dc>
    fb3c:	add	x0, x0, #0xd04
    fb40:	b	fb20 <po_charset_character_iterator@@Base+0x110>
    fb44:	adrp	x0, f000 <po_gram_parse@@Base+0x7dc>
    fb48:	add	x0, x0, #0xd88
    fb4c:	b	fb20 <po_charset_character_iterator@@Base+0x110>
    fb50:	adrp	x0, f000 <po_gram_parse@@Base+0x7dc>
    fb54:	add	x0, x0, #0xdd4
    fb58:	b	fb20 <po_charset_character_iterator@@Base+0x110>
    fb5c:	adrp	x0, f000 <po_gram_parse@@Base+0x7dc>
    fb60:	add	x0, x0, #0xe20
    fb64:	b	fb20 <po_charset_character_iterator@@Base+0x110>
    fb68:	adrp	x0, f000 <po_gram_parse@@Base+0x7dc>
    fb6c:	add	x0, x0, #0xe64
    fb70:	b	fb20 <po_charset_character_iterator@@Base+0x110>
    fb74:	adrp	x0, f000 <po_gram_parse@@Base+0x7dc>
    fb78:	add	x0, x0, #0xeec
    fb7c:	b	fb20 <po_charset_character_iterator@@Base+0x110>
    fb80:	ldrb	w8, [x0]
    fb84:	cmp	w8, #0xc2
    fb88:	b.cc	fc34 <po_charset_character_iterator@@Base+0x224>  // b.lo, b.ul, b.last
    fb8c:	cmp	w8, #0xdf
    fb90:	b.hi	fbb0 <po_charset_character_iterator@@Base+0x1a0>  // b.pmore
    fb94:	ldrsb	w8, [x0, #1]
    fb98:	tbz	w8, #31, fc34 <po_charset_character_iterator@@Base+0x224>
    fb9c:	and	w8, w8, #0xff
    fba0:	cmp	w8, #0xc0
    fba4:	b.cs	fc34 <po_charset_character_iterator@@Base+0x224>  // b.hs, b.nlast
    fba8:	mov	w0, #0x2                   	// #2
    fbac:	ret
    fbb0:	cmp	w8, #0xef
    fbb4:	b.hi	fbe8 <po_charset_character_iterator@@Base+0x1d8>  // b.pmore
    fbb8:	ldrsb	w8, [x0, #1]
    fbbc:	tbz	w8, #31, fc34 <po_charset_character_iterator@@Base+0x224>
    fbc0:	and	w8, w8, #0xff
    fbc4:	cmp	w8, #0xbf
    fbc8:	b.hi	fc34 <po_charset_character_iterator@@Base+0x224>  // b.pmore
    fbcc:	ldrb	w8, [x0, #2]
    fbd0:	cmp	w8, #0xbf
    fbd4:	b.hi	fc34 <po_charset_character_iterator@@Base+0x224>  // b.pmore
    fbd8:	sxtb	w8, w8
    fbdc:	tbz	w8, #31, fc34 <po_charset_character_iterator@@Base+0x224>
    fbe0:	mov	w0, #0x3                   	// #3
    fbe4:	ret
    fbe8:	cmp	w8, #0xf7
    fbec:	b.hi	fc34 <po_charset_character_iterator@@Base+0x224>  // b.pmore
    fbf0:	ldrsb	w8, [x0, #1]
    fbf4:	tbz	w8, #31, fc34 <po_charset_character_iterator@@Base+0x224>
    fbf8:	and	w8, w8, #0xff
    fbfc:	cmp	w8, #0xbf
    fc00:	b.hi	fc34 <po_charset_character_iterator@@Base+0x224>  // b.pmore
    fc04:	ldrsb	w8, [x0, #2]
    fc08:	tbz	w8, #31, fc34 <po_charset_character_iterator@@Base+0x224>
    fc0c:	and	w8, w8, #0xff
    fc10:	cmp	w8, #0xbf
    fc14:	b.hi	fc34 <po_charset_character_iterator@@Base+0x224>  // b.pmore
    fc18:	ldrb	w8, [x0, #3]
    fc1c:	cmp	w8, #0xbf
    fc20:	b.hi	fc34 <po_charset_character_iterator@@Base+0x224>  // b.pmore
    fc24:	sxtb	w8, w8
    fc28:	tbz	w8, #31, fc34 <po_charset_character_iterator@@Base+0x224>
    fc2c:	mov	w0, #0x4                   	// #4
    fc30:	ret
    fc34:	mov	w0, #0x1                   	// #1
    fc38:	ret
    fc3c:	ldrb	w8, [x0]
    fc40:	add	w8, w8, #0x5f
    fc44:	and	w8, w8, #0xff
    fc48:	cmp	w8, #0x5d
    fc4c:	b.ls	fc58 <po_charset_character_iterator@@Base+0x248>  // b.plast
    fc50:	mov	w0, #0x1                   	// #1
    fc54:	ret
    fc58:	ldrb	w8, [x0, #1]
    fc5c:	add	w8, w8, #0x5f
    fc60:	and	w8, w8, #0xff
    fc64:	cmp	w8, #0x5d
    fc68:	mov	w8, #0x1                   	// #1
    fc6c:	cinc	x0, x8, ls  // ls = plast
    fc70:	ret
    fc74:	ldrb	w8, [x0]
    fc78:	add	w9, w8, #0x5f
    fc7c:	and	w9, w9, #0xff
    fc80:	cmp	w9, #0x5d
    fc84:	b.ls	fcb0 <po_charset_character_iterator@@Base+0x2a0>  // b.plast
    fc88:	cmp	w8, #0x8f
    fc8c:	b.eq	fccc <po_charset_character_iterator@@Base+0x2bc>  // b.none
    fc90:	cmp	w8, #0x8e
    fc94:	b.ne	fcf4 <po_charset_character_iterator@@Base+0x2e4>  // b.any
    fc98:	ldrb	w8, [x0, #1]
    fc9c:	add	w8, w8, #0x5f
    fca0:	and	w8, w8, #0xff
    fca4:	cmp	w8, #0x3f
    fca8:	b.cc	fcc4 <po_charset_character_iterator@@Base+0x2b4>  // b.lo, b.ul, b.last
    fcac:	b	fcf4 <po_charset_character_iterator@@Base+0x2e4>
    fcb0:	ldrb	w8, [x0, #1]
    fcb4:	add	w8, w8, #0x5f
    fcb8:	and	w8, w8, #0xff
    fcbc:	cmp	w8, #0x5d
    fcc0:	b.hi	fcf4 <po_charset_character_iterator@@Base+0x2e4>  // b.pmore
    fcc4:	mov	w0, #0x2                   	// #2
    fcc8:	ret
    fccc:	ldrb	w8, [x0, #1]
    fcd0:	add	w8, w8, #0x5f
    fcd4:	and	w8, w8, #0xff
    fcd8:	cmp	w8, #0x5d
    fcdc:	b.hi	fcf4 <po_charset_character_iterator@@Base+0x2e4>  // b.pmore
    fce0:	ldrb	w8, [x0, #2]
    fce4:	add	w8, w8, #0x5f
    fce8:	and	w8, w8, #0xff
    fcec:	cmp	w8, #0x5e
    fcf0:	b.cc	fcfc <po_charset_character_iterator@@Base+0x2ec>  // b.lo, b.ul, b.last
    fcf4:	mov	w0, #0x1                   	// #1
    fcf8:	ret
    fcfc:	mov	w0, #0x3                   	// #3
    fd00:	ret
    fd04:	ldrb	w8, [x0]
    fd08:	add	w9, w8, #0x5f
    fd0c:	and	w9, w9, #0xff
    fd10:	cmp	w9, #0x5d
    fd14:	b.ls	fd64 <po_charset_character_iterator@@Base+0x354>  // b.plast
    fd18:	cmp	w8, #0x8e
    fd1c:	b.ne	fd78 <po_charset_character_iterator@@Base+0x368>  // b.any
    fd20:	ldrb	w8, [x0, #1]
    fd24:	add	w8, w8, #0x5f
    fd28:	and	w8, w8, #0xff
    fd2c:	cmp	w8, #0xf
    fd30:	b.hi	fd78 <po_charset_character_iterator@@Base+0x368>  // b.pmore
    fd34:	ldrb	w8, [x0, #2]
    fd38:	add	w8, w8, #0x5f
    fd3c:	and	w8, w8, #0xff
    fd40:	cmp	w8, #0x5d
    fd44:	b.hi	fd78 <po_charset_character_iterator@@Base+0x368>  // b.pmore
    fd48:	ldrb	w8, [x0, #3]
    fd4c:	add	w8, w8, #0x5f
    fd50:	and	w8, w8, #0xff
    fd54:	cmp	w8, #0x5e
    fd58:	b.cs	fd78 <po_charset_character_iterator@@Base+0x368>  // b.hs, b.nlast
    fd5c:	mov	w0, #0x4                   	// #4
    fd60:	ret
    fd64:	ldrb	w8, [x0, #1]
    fd68:	add	w8, w8, #0x5f
    fd6c:	and	w8, w8, #0xff
    fd70:	cmp	w8, #0x5d
    fd74:	b.ls	fd80 <po_charset_character_iterator@@Base+0x370>  // b.plast
    fd78:	mov	w0, #0x1                   	// #1
    fd7c:	ret
    fd80:	mov	w0, #0x2                   	// #2
    fd84:	ret
    fd88:	ldrb	w8, [x0]
    fd8c:	add	w8, w8, #0x5f
    fd90:	and	w8, w8, #0xff
    fd94:	cmp	w8, #0x5d
    fd98:	b.ls	fda4 <po_charset_character_iterator@@Base+0x394>  // b.plast
    fd9c:	mov	w0, #0x1                   	// #1
    fda0:	ret
    fda4:	ldrb	w8, [x0, #1]
    fda8:	sub	w9, w8, #0x40
    fdac:	cmp	w9, #0x3f
    fdb0:	b.cs	fdbc <po_charset_character_iterator@@Base+0x3ac>  // b.hs, b.nlast
    fdb4:	mov	w0, #0x2                   	// #2
    fdb8:	ret
    fdbc:	add	w8, w8, #0x5f
    fdc0:	and	w8, w8, #0xff
    fdc4:	cmp	w8, #0x5d
    fdc8:	mov	w8, #0x1                   	// #1
    fdcc:	cinc	x0, x8, ls  // ls = plast
    fdd0:	ret
    fdd4:	ldrb	w8, [x0]
    fdd8:	add	w8, w8, #0x78
    fddc:	and	w8, w8, #0xff
    fde0:	cmp	w8, #0x76
    fde4:	b.ls	fdf0 <po_charset_character_iterator@@Base+0x3e0>  // b.plast
    fde8:	mov	w0, #0x1                   	// #1
    fdec:	ret
    fdf0:	ldrb	w8, [x0, #1]
    fdf4:	sub	w9, w8, #0x40
    fdf8:	cmp	w9, #0x3f
    fdfc:	b.cs	fe08 <po_charset_character_iterator@@Base+0x3f8>  // b.hs, b.nlast
    fe00:	mov	w0, #0x2                   	// #2
    fe04:	ret
    fe08:	add	w8, w8, #0x5f
    fe0c:	and	w8, w8, #0xff
    fe10:	cmp	w8, #0x5d
    fe14:	mov	w8, #0x1                   	// #1
    fe18:	cinc	x0, x8, ls  // ls = plast
    fe1c:	ret
    fe20:	ldrb	w8, [x0]
    fe24:	add	w8, w8, #0x7f
    fe28:	and	w8, w8, #0xff
    fe2c:	cmp	w8, #0x7d
    fe30:	b.ls	fe3c <po_charset_character_iterator@@Base+0x42c>  // b.plast
    fe34:	mov	w0, #0x1                   	// #1
    fe38:	ret
    fe3c:	ldrsb	w8, [x0, #1]
    fe40:	sub	w9, w8, #0x40
    fe44:	cmp	w9, #0x3f
    fe48:	b.cs	fe54 <po_charset_character_iterator@@Base+0x444>  // b.hs, b.nlast
    fe4c:	mov	w0, #0x2                   	// #2
    fe50:	ret
    fe54:	cmn	w8, #0x2
    fe58:	mov	w8, #0x1                   	// #1
    fe5c:	cinc	x0, x8, le
    fe60:	ret
    fe64:	ldrb	w8, [x0]
    fe68:	add	w9, w8, #0x7f
    fe6c:	and	w8, w9, #0xff
    fe70:	cmp	w8, #0x7d
    fe74:	b.hi	fee0 <po_charset_character_iterator@@Base+0x4d0>  // b.pmore
    fe78:	ldrsb	w10, [x0, #1]
    fe7c:	mov	w8, #0x2                   	// #2
    fe80:	cmn	w10, #0x1
    fe84:	b.lt	fee4 <po_charset_character_iterator@@Base+0x4d4>  // b.tstop
    fe88:	sub	w10, w10, #0x40
    fe8c:	and	w10, w10, #0xff
    fe90:	cmp	w10, #0x3f
    fe94:	b.cc	fee4 <po_charset_character_iterator@@Base+0x4d4>  // b.lo, b.ul, b.last
    fe98:	and	w8, w9, #0xff
    fe9c:	cmp	w8, #0x3
    fea0:	b.hi	fee0 <po_charset_character_iterator@@Base+0x4d0>  // b.pmore
    fea4:	ldrb	w8, [x0, #1]
    fea8:	sub	w8, w8, #0x30
    feac:	cmp	w8, #0x9
    feb0:	b.hi	fee0 <po_charset_character_iterator@@Base+0x4d0>  // b.pmore
    feb4:	ldrb	w8, [x0, #2]
    feb8:	add	w8, w8, #0x7f
    febc:	and	w8, w8, #0xff
    fec0:	cmp	w8, #0x7d
    fec4:	b.hi	fee0 <po_charset_character_iterator@@Base+0x4d0>  // b.pmore
    fec8:	ldrb	w8, [x0, #3]
    fecc:	sub	w8, w8, #0x30
    fed0:	cmp	w8, #0xa
    fed4:	b.cs	fee0 <po_charset_character_iterator@@Base+0x4d0>  // b.hs, b.nlast
    fed8:	mov	w8, #0x4                   	// #4
    fedc:	b	fee4 <po_charset_character_iterator@@Base+0x4d4>
    fee0:	mov	w8, #0x1                   	// #1
    fee4:	mov	x0, x8
    fee8:	ret
    feec:	ldrb	w8, [x0]
    fef0:	add	w9, w8, #0x7f
    fef4:	and	w9, w9, #0xff
    fef8:	cmp	w9, #0x1f
    fefc:	b.cc	ff18 <po_charset_character_iterator@@Base+0x508>  // b.lo, b.ul, b.last
    ff00:	add	w8, w8, #0x20
    ff04:	and	w8, w8, #0xff
    ff08:	cmp	w8, #0x19
    ff0c:	b.ls	ff18 <po_charset_character_iterator@@Base+0x508>  // b.plast
    ff10:	mov	w0, #0x1                   	// #1
    ff14:	ret
    ff18:	ldrb	w8, [x0, #1]
    ff1c:	sub	w9, w8, #0x40
    ff20:	cmp	w9, #0x3f
    ff24:	b.cs	ff30 <po_charset_character_iterator@@Base+0x520>  // b.hs, b.nlast
    ff28:	mov	w0, #0x2                   	// #2
    ff2c:	ret
    ff30:	sxtb	w9, w8
    ff34:	cmp	w8, #0xfd
    ff38:	ccmp	w9, #0x0, #0x0, cc  // cc = lo, ul, last
    ff3c:	mov	w8, #0x1                   	// #1
    ff40:	cinc	x0, x8, lt  // lt = tstop
    ff44:	ret
    ff48:	ldrb	w8, [x0]
    ff4c:	add	w9, w8, #0x7c
    ff50:	and	w9, w9, #0xff
    ff54:	cmp	w9, #0x4f
    ff58:	b.hi	ff7c <po_charset_character_iterator@@Base+0x56c>  // b.pmore
    ff5c:	ldrb	w8, [x0, #1]
    ff60:	sub	w9, w8, #0x41
    ff64:	cmp	w9, #0x3e
    ff68:	b.cc	ff9c <po_charset_character_iterator@@Base+0x58c>  // b.lo, b.ul, b.last
    ff6c:	add	w8, w8, #0x7f
    ff70:	and	w8, w8, #0xff
    ff74:	cmp	w8, #0x7d
    ff78:	b	ffb8 <po_charset_character_iterator@@Base+0x5a8>
    ff7c:	add	w8, w8, #0x27
    ff80:	and	w8, w8, #0xff
    ff84:	cmp	w8, #0x20
    ff88:	b.hi	ffa4 <po_charset_character_iterator@@Base+0x594>  // b.pmore
    ff8c:	ldrb	w8, [x0, #1]
    ff90:	sub	w9, w8, #0x31
    ff94:	cmp	w9, #0x4e
    ff98:	b.cs	ffac <po_charset_character_iterator@@Base+0x59c>  // b.hs, b.nlast
    ff9c:	mov	w0, #0x2                   	// #2
    ffa0:	ret
    ffa4:	mov	w0, #0x1                   	// #1
    ffa8:	ret
    ffac:	add	w8, w8, #0x6f
    ffb0:	and	w8, w8, #0xff
    ffb4:	cmp	w8, #0x6d
    ffb8:	mov	w8, #0x1                   	// #1
    ffbc:	cinc	x0, x8, ls  // ls = plast
    ffc0:	ret
    ffc4:	mov	w0, #0x1                   	// #1
    ffc8:	ret

000000000000ffcc <po_lex_charset_init@@Base>:
    ffcc:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
    ffd0:	adrp	x9, 4c000 <plural_table_size@@Base+0x12c00>
    ffd4:	adrp	x11, 4c000 <plural_table_size@@Base+0x12c00>
    ffd8:	ldr	x8, [x8, #3984]
    ffdc:	ldr	x9, [x9, #3704]
    ffe0:	ldr	x11, [x11, #3800]
    ffe4:	mov	x10, #0xffffffffffffffff    	// #-1
    ffe8:	str	xzr, [x8]
    ffec:	str	x10, [x9]
    fff0:	strb	wzr, [x11]
    fff4:	ret

000000000000fff8 <po_lex_charset_set@@Base>:
    fff8:	stp	x29, x30, [sp, #-80]!
    fffc:	stp	x26, x25, [sp, #16]
   10000:	stp	x24, x23, [sp, #32]
   10004:	stp	x22, x21, [sp, #48]
   10008:	stp	x20, x19, [sp, #64]
   1000c:	mov	x29, sp
   10010:	sub	sp, sp, #0x10
   10014:	mov	x19, x1
   10018:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   1001c:	add	x1, x1, #0x196
   10020:	bl	ad20 <c_strstr@plt>
   10024:	cbz	x0, 1006c <po_lex_charset_set@@Base+0x74>
   10028:	add	x21, x0, #0x8
   1002c:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   10030:	add	x1, x1, #0x19f
   10034:	mov	x0, x21
   10038:	bl	ada0 <strcspn@plt>
   1003c:	mov	x22, x0
   10040:	add	x0, x0, #0x1
   10044:	cmp	x0, #0xfa0
   10048:	b.hi	100f4 <po_lex_charset_set@@Base+0xfc>  // b.pmore
   1004c:	add	x9, x22, #0x2f
   10050:	mov	x8, sp
   10054:	and	x9, x9, #0xfffffffffffffff0
   10058:	sub	x8, x8, x9
   1005c:	mov	sp, x8
   10060:	add	x8, x8, #0x1f
   10064:	and	x20, x8, #0xffffffffffffffe0
   10068:	b	100fc <po_lex_charset_set@@Base+0x104>
   1006c:	mov	x0, x19
   10070:	bl	a0d0 <strlen@plt>
   10074:	cmp	x0, #0x4
   10078:	b.cc	10094 <po_lex_charset_set@@Base+0x9c>  // b.lo, b.ul, b.last
   1007c:	add	x8, x19, x0
   10080:	ldur	w8, [x8, #-4]
   10084:	mov	w9, #0x702e                	// #28718
   10088:	movk	w9, #0x746f, lsl #16
   1008c:	cmp	w8, w9
   10090:	b.eq	1035c <po_lex_charset_set@@Base+0x364>  // b.none
   10094:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   10098:	ldr	x8, [x8, #3736]
   1009c:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   100a0:	add	x1, x1, #0x30d
   100a4:	mov	w2, #0x5                   	// #5
   100a8:	ldr	x0, [x8]
   100ac:	stur	x0, [x29, #-8]
   100b0:	mov	x0, xzr
   100b4:	bl	acd0 <dcgettext@plt>
   100b8:	ldur	x7, [x29, #-8]
   100bc:	mov	x3, #0xffffffffffffffff    	// #-1
   100c0:	mov	x4, #0xffffffffffffffff    	// #-1
   100c4:	mov	w5, #0x1                   	// #1
   100c8:	mov	x6, x0
   100cc:	mov	w0, wzr
   100d0:	mov	x1, xzr
   100d4:	mov	x2, x19
   100d8:	mov	sp, x29
   100dc:	ldp	x20, x19, [sp, #64]
   100e0:	ldp	x22, x21, [sp, #48]
   100e4:	ldp	x24, x23, [sp, #32]
   100e8:	ldp	x26, x25, [sp, #16]
   100ec:	ldp	x29, x30, [sp], #80
   100f0:	br	x7
   100f4:	bl	a910 <xmmalloca@plt>
   100f8:	mov	x20, x0
   100fc:	mov	x0, x20
   10100:	mov	x1, x21
   10104:	mov	x2, x22
   10108:	bl	a040 <memcpy@plt>
   1010c:	mov	x0, x20
   10110:	strb	wzr, [x20, x22]
   10114:	bl	a1f0 <po_charset_canonicalize@plt>
   10118:	cbz	x0, 10218 <po_lex_charset_set@@Base+0x220>
   1011c:	adrp	x21, 4c000 <plural_table_size@@Base+0x12c00>
   10120:	ldr	x21, [x21, #3704]
   10124:	adrp	x23, 4c000 <plural_table_size@@Base+0x12c00>
   10128:	ldr	x8, [x21]
   1012c:	ldr	x23, [x23, #3984]
   10130:	cmn	x8, #0x1
   10134:	str	x0, [x23]
   10138:	b.eq	10144 <po_lex_charset_set@@Base+0x14c>  // b.none
   1013c:	mov	x0, x8
   10140:	bl	a1d0 <iconv_close@plt>
   10144:	adrp	x0, 37000 <get_search_path@@Base+0xb4c>
   10148:	add	x0, x0, #0x20c
   1014c:	bl	ae20 <getenv@plt>
   10150:	cbz	x0, 10174 <po_lex_charset_set@@Base+0x17c>
   10154:	ldrb	w8, [x0]
   10158:	cbz	w8, 10174 <po_lex_charset_set@@Base+0x17c>
   1015c:	adrp	x9, 4c000 <plural_table_size@@Base+0x12c00>
   10160:	ldr	x9, [x9, #3800]
   10164:	mov	x8, #0xffffffffffffffff    	// #-1
   10168:	str	x8, [x21]
   1016c:	strb	wzr, [x9]
   10170:	b	10354 <po_lex_charset_set@@Base+0x35c>
   10174:	ldr	x1, [x23]
   10178:	adrp	x0, 36000 <its_merge_context_free@@Base+0x1328>
   1017c:	add	x0, x0, #0xf96
   10180:	bl	ab80 <iconv_open@plt>
   10184:	cmn	x0, #0x1
   10188:	str	x0, [x21]
   1018c:	b.ne	10354 <po_lex_charset_set@@Base+0x35c>  // b.any
   10190:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   10194:	ldr	x8, [x8, #4008]
   10198:	ldr	x0, [x8]
   1019c:	bl	a8f0 <basename@plt>
   101a0:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   101a4:	mov	x21, x0
   101a8:	add	x1, x1, #0x21e
   101ac:	mov	w2, #0x5                   	// #5
   101b0:	mov	x0, xzr
   101b4:	bl	acd0 <dcgettext@plt>
   101b8:	ldr	x1, [x23]
   101bc:	mov	x2, x21
   101c0:	mov	x3, x1
   101c4:	bl	aa20 <xasprintf@plt>
   101c8:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   101cc:	mov	x21, x0
   101d0:	add	x1, x1, #0x277
   101d4:	mov	w2, #0x5                   	// #5
   101d8:	mov	x0, xzr
   101dc:	bl	acd0 <dcgettext@plt>
   101e0:	ldr	x23, [x23]
   101e4:	adrp	x24, 4c000 <plural_table_size@@Base+0x12c00>
   101e8:	mov	x22, x0
   101ec:	mov	x25, xzr
   101f0:	add	x24, x24, #0xa18
   101f4:	ldr	x1, [x24, x25]
   101f8:	mov	x0, x23
   101fc:	bl	a8d0 <strcmp@plt>
   10200:	cbz	w0, 102a4 <po_lex_charset_set@@Base+0x2ac>
   10204:	add	x25, x25, #0x8
   10208:	cmp	x25, #0x30
   1020c:	b.ne	101f4 <po_lex_charset_set@@Base+0x1fc>  // b.any
   10210:	mov	w25, wzr
   10214:	b	102a8 <po_lex_charset_set@@Base+0x2b0>
   10218:	mov	x0, x19
   1021c:	bl	a0d0 <strlen@plt>
   10220:	cmp	x0, #0x4
   10224:	b.cc	10254 <po_lex_charset_set@@Base+0x25c>  // b.lo, b.ul, b.last
   10228:	add	x8, x19, x0
   1022c:	ldur	w8, [x8, #-4]
   10230:	mov	w9, #0x702e                	// #28718
   10234:	movk	w9, #0x746f, lsl #16
   10238:	cmp	w8, w9
   1023c:	b.ne	10254 <po_lex_charset_set@@Base+0x25c>  // b.any
   10240:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   10244:	add	x1, x1, #0x4f2
   10248:	mov	x0, x20
   1024c:	bl	a8d0 <strcmp@plt>
   10250:	cbz	w0, 10354 <po_lex_charset_set@@Base+0x35c>
   10254:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   10258:	add	x1, x1, #0x1a8
   1025c:	mov	w2, #0x5                   	// #5
   10260:	mov	x0, xzr
   10264:	bl	acd0 <dcgettext@plt>
   10268:	mov	x1, x20
   1026c:	bl	aa20 <xasprintf@plt>
   10270:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   10274:	ldr	x8, [x8, #3736]
   10278:	mov	x21, x0
   1027c:	mov	x3, #0xffffffffffffffff    	// #-1
   10280:	mov	x4, #0xffffffffffffffff    	// #-1
   10284:	ldr	x8, [x8]
   10288:	mov	w5, #0x1                   	// #1
   1028c:	mov	w0, wzr
   10290:	mov	x1, xzr
   10294:	mov	x2, x19
   10298:	mov	x6, x21
   1029c:	blr	x8
   102a0:	b	1034c <po_lex_charset_set@@Base+0x354>
   102a4:	mov	w25, #0x1                   	// #1
   102a8:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   102ac:	ldr	x8, [x8, #3800]
   102b0:	mov	x26, xzr
   102b4:	strb	w25, [x8]
   102b8:	ldr	x1, [x24, x26]
   102bc:	mov	x0, x23
   102c0:	bl	a8d0 <strcmp@plt>
   102c4:	cbz	w0, 102d8 <po_lex_charset_set@@Base+0x2e0>
   102c8:	add	x26, x26, #0x8
   102cc:	cmp	x26, #0x30
   102d0:	b.ne	102b8 <po_lex_charset_set@@Base+0x2c0>  // b.any
   102d4:	b	102dc <po_lex_charset_set@@Base+0x2e4>
   102d8:	cbz	w25, 102e8 <po_lex_charset_set@@Base+0x2f0>
   102dc:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   102e0:	add	x1, x1, #0x2f2
   102e4:	b	102f0 <po_lex_charset_set@@Base+0x2f8>
   102e8:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   102ec:	add	x1, x1, #0x2ca
   102f0:	mov	w2, #0x5                   	// #5
   102f4:	mov	x0, xzr
   102f8:	bl	acd0 <dcgettext@plt>
   102fc:	mov	x3, x0
   10300:	adrp	x0, 37000 <get_search_path@@Base+0xb4c>
   10304:	add	x0, x0, #0x305
   10308:	mov	x1, x21
   1030c:	mov	x2, x22
   10310:	bl	aa20 <xasprintf@plt>
   10314:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   10318:	ldr	x8, [x8, #3736]
   1031c:	mov	x22, x0
   10320:	mov	x3, #0xffffffffffffffff    	// #-1
   10324:	mov	x4, #0xffffffffffffffff    	// #-1
   10328:	ldr	x8, [x8]
   1032c:	mov	w5, #0x1                   	// #1
   10330:	mov	w0, wzr
   10334:	mov	x1, xzr
   10338:	mov	x2, x19
   1033c:	mov	x6, x22
   10340:	blr	x8
   10344:	mov	x0, x22
   10348:	bl	aa00 <free@plt>
   1034c:	mov	x0, x21
   10350:	bl	aa00 <free@plt>
   10354:	mov	x0, x20
   10358:	bl	ad70 <freea@plt>
   1035c:	mov	sp, x29
   10360:	ldp	x20, x19, [sp, #64]
   10364:	ldp	x22, x21, [sp, #48]
   10368:	ldp	x24, x23, [sp, #32]
   1036c:	ldp	x26, x25, [sp, #16]
   10370:	ldp	x29, x30, [sp], #80
   10374:	ret

0000000000010378 <po_lex_charset_close@@Base>:
   10378:	stp	x29, x30, [sp, #-32]!
   1037c:	str	x19, [sp, #16]
   10380:	adrp	x19, 4c000 <plural_table_size@@Base+0x12c00>
   10384:	ldr	x19, [x19, #3704]
   10388:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1038c:	mov	x29, sp
   10390:	ldr	x0, [x19]
   10394:	ldr	x8, [x8, #3984]
   10398:	cmn	x0, #0x1
   1039c:	str	xzr, [x8]
   103a0:	b.eq	103b0 <po_lex_charset_close@@Base+0x38>  // b.none
   103a4:	bl	a1d0 <iconv_close@plt>
   103a8:	mov	x8, #0xffffffffffffffff    	// #-1
   103ac:	str	x8, [x19]
   103b0:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   103b4:	ldr	x8, [x8, #3800]
   103b8:	ldr	x19, [sp, #16]
   103bc:	strb	wzr, [x8]
   103c0:	ldp	x29, x30, [sp], #32
   103c4:	ret
   103c8:	stp	x29, x30, [sp, #-16]!
   103cc:	mov	x0, x1
   103d0:	mov	x1, x2
   103d4:	mov	x2, x3
   103d8:	mov	x29, sp
   103dc:	bl	a4b0 <lex_start@plt>
   103e0:	bl	a0f0 <po_gram_parse@plt>
   103e4:	ldp	x29, x30, [sp], #16
   103e8:	b	af10 <lex_end@plt>
   103ec:	sub	sp, sp, #0xb0
   103f0:	mov	x0, x1
   103f4:	adrp	x1, 4e000 <formatstring_gfc_internal@@Base+0x10>
   103f8:	add	x1, x1, #0x2e0
   103fc:	stp	x29, x30, [sp, #80]
   10400:	stp	x28, x27, [sp, #96]
   10404:	stp	x26, x25, [sp, #112]
   10408:	stp	x24, x23, [sp, #128]
   1040c:	stp	x22, x21, [sp, #144]
   10410:	stp	x20, x19, [sp, #160]
   10414:	add	x29, sp, #0x50
   10418:	mov	x19, x2
   1041c:	bl	a5d0 <fread_file@plt>
   10420:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   10424:	str	x0, [x8, #744]
   10428:	cbz	x0, 108d0 <po_lex_charset_close@@Base+0x558>
   1042c:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   10430:	ldr	x1, [x8, #736]
   10434:	bl	a070 <u8_check@plt>
   10438:	cmp	x0, #0x0
   1043c:	adrp	x23, 4e000 <formatstring_gfc_internal@@Base+0x10>
   10440:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   10444:	adrp	x10, 4e000 <formatstring_gfc_internal@@Base+0x10>
   10448:	cset	w9, eq  // eq = none
   1044c:	mov	x0, x19
   10450:	str	xzr, [x8, #760]
   10454:	strb	w9, [x23, #752]
   10458:	str	x19, [x10, #768]
   1045c:	bl	a5a0 <xstrdup@plt>
   10460:	adrp	x27, 4c000 <plural_table_size@@Base+0x12c00>
   10464:	ldr	x27, [x27, #4000]
   10468:	adrp	x28, 4e000 <formatstring_gfc_internal@@Base+0x10>
   1046c:	mov	w8, #0x1                   	// #1
   10470:	adrp	x25, 4e000 <formatstring_gfc_internal@@Base+0x10>
   10474:	add	x28, x28, #0x324
   10478:	adrp	x24, 4e000 <formatstring_gfc_internal@@Base+0x10>
   1047c:	adrp	x19, 4e000 <formatstring_gfc_internal@@Base+0x10>
   10480:	adrp	x26, 4e000 <formatstring_gfc_internal@@Base+0x10>
   10484:	stp	x0, x8, [x27]
   10488:	bl	11328 <po_lex_charset_close@@Base+0xfb0>
   1048c:	cmp	w0, #0x20
   10490:	b.le	104d8 <po_lex_charset_close@@Base+0x160>
   10494:	cmp	w0, #0x23
   10498:	b.eq	105b0 <po_lex_charset_close@@Base+0x238>  // b.none
   1049c:	cmp	w0, #0x21
   104a0:	b.ne	104f8 <po_lex_charset_close@@Base+0x180>  // b.any
   104a4:	bl	11328 <po_lex_charset_close@@Base+0xfb0>
   104a8:	add	w8, w0, #0x1
   104ac:	cmp	w8, #0x21
   104b0:	b.hi	10570 <po_lex_charset_close@@Base+0x1f8>  // b.pmore
   104b4:	mov	x9, #0x1ffff0000           	// #8589869056
   104b8:	mov	x10, #0x801                 	// #2049
   104bc:	movk	x9, #0xf7fe
   104c0:	movk	x10, #0x2, lsl #32
   104c4:	lsr	x9, x9, x8
   104c8:	lsr	x8, x10, x8
   104cc:	and	w22, w9, #0x1
   104d0:	and	w8, w8, #0x1
   104d4:	b	10578 <po_lex_charset_close@@Base+0x200>
   104d8:	cmp	w0, #0xa
   104dc:	b.ne	104f0 <po_lex_charset_close@@Base+0x178>  // b.any
   104e0:	ldr	x8, [x27, #8]
   104e4:	sub	x8, x8, #0x1
   104e8:	str	x8, [x27, #8]
   104ec:	b	104f8 <po_lex_charset_close@@Base+0x180>
   104f0:	cmn	w0, #0x1
   104f4:	b.eq	10894 <po_lex_charset_close@@Base+0x51c>  // b.none
   104f8:	ldrsw	x8, [x25, #800]
   104fc:	mov	w22, wzr
   10500:	add	w9, w8, #0x1
   10504:	str	w9, [x25, #800]
   10508:	strb	w0, [x28, x8]
   1050c:	ldr	q0, [x27]
   10510:	mov	w0, #0x1                   	// #1
   10514:	stur	q0, [x29, #-16]
   10518:	bl	10980 <po_lex_charset_close@@Base+0x608>
   1051c:	cbz	x0, 10488 <po_lex_charset_close@@Base+0x110>
   10520:	ldr	q0, [x27]
   10524:	mov	x20, x0
   10528:	mov	w0, wzr
   1052c:	stur	q0, [x29, #-32]
   10530:	bl	10980 <po_lex_charset_close@@Base+0x608>
   10534:	mov	x21, x0
   10538:	cbz	x0, 10544 <po_lex_charset_close@@Base+0x1cc>
   1053c:	cbnz	w22, 10558 <po_lex_charset_close@@Base+0x1e0>
   10540:	b	107a4 <po_lex_charset_close@@Base+0x42c>
   10544:	adrp	x0, 37000 <get_search_path@@Base+0xb4c>
   10548:	add	x0, x0, #0x1a2
   1054c:	bl	a5a0 <xstrdup@plt>
   10550:	mov	x21, x0
   10554:	cbz	w22, 107a4 <po_lex_charset_close@@Base+0x42c>
   10558:	ldrb	w8, [x20]
   1055c:	cbz	w8, 107a0 <po_lex_charset_close@@Base+0x428>
   10560:	ldrb	w8, [x21]
   10564:	cmp	w8, #0x0
   10568:	cset	w22, ne  // ne = any
   1056c:	b	107a4 <po_lex_charset_close@@Base+0x42c>
   10570:	mov	w8, wzr
   10574:	mov	w22, #0x1                   	// #1
   10578:	cmn	w0, #0x1
   1057c:	b.eq	105ac <po_lex_charset_close@@Base+0x234>  // b.none
   10580:	cmp	w0, #0xa
   10584:	b.ne	10594 <po_lex_charset_close@@Base+0x21c>  // b.any
   10588:	ldr	x9, [x27, #8]
   1058c:	sub	x9, x9, #0x1
   10590:	str	x9, [x27, #8]
   10594:	ldrsw	x9, [x25, #800]
   10598:	add	w10, w9, #0x1
   1059c:	str	w10, [x25, #800]
   105a0:	strb	w0, [x28, x9]
   105a4:	tbz	w8, #0, 1050c <po_lex_charset_close@@Base+0x194>
   105a8:	b	105b0 <po_lex_charset_close@@Base+0x238>
   105ac:	cbz	w8, 1050c <po_lex_charset_close@@Base+0x194>
   105b0:	str	xzr, [x24, #792]
   105b4:	bl	11328 <po_lex_charset_close@@Base+0xfb0>
   105b8:	ldr	x9, [x24, #792]
   105bc:	ldr	x8, [x19, #784]
   105c0:	mov	w20, w0
   105c4:	cmp	x9, x8
   105c8:	b.cc	105e0 <po_lex_charset_close@@Base+0x268>  // b.lo, b.ul, b.last
   105cc:	ldr	x0, [x26, #776]
   105d0:	add	x1, x8, #0x64
   105d4:	str	x1, [x19, #784]
   105d8:	bl	a460 <xrealloc@plt>
   105dc:	str	x0, [x26, #776]
   105e0:	cmn	w20, #0x1
   105e4:	b.eq	10608 <po_lex_charset_close@@Base+0x290>  // b.none
   105e8:	cmp	w20, #0xa
   105ec:	b.eq	10608 <po_lex_charset_close@@Base+0x290>  // b.none
   105f0:	ldr	x8, [x24, #792]
   105f4:	ldr	x9, [x26, #776]
   105f8:	add	x10, x8, #0x1
   105fc:	str	x10, [x24, #792]
   10600:	strb	w20, [x9, x8]
   10604:	b	105b4 <po_lex_charset_close@@Base+0x23c>
   10608:	ldr	x21, [x26, #776]
   1060c:	ldr	x8, [x24, #792]
   10610:	strb	wzr, [x21, x8]
   10614:	ldrb	w8, [x23, #752]
   10618:	cbnz	w8, 10628 <po_lex_charset_close@@Base+0x2b0>
   1061c:	mov	x0, x21
   10620:	bl	a7d0 <is_ascii_string@plt>
   10624:	tbz	w0, #0, 107e0 <po_lex_charset_close@@Base+0x468>
   10628:	mov	x20, x21
   1062c:	mov	x21, x20
   10630:	mov	x22, x20
   10634:	ldrb	w8, [x22]
   10638:	cmp	w8, #0x5c
   1063c:	b.eq	10648 <po_lex_charset_close@@Base+0x2d0>  // b.none
   10640:	cbnz	w8, 10758 <po_lex_charset_close@@Base+0x3e0>
   10644:	b	10790 <po_lex_charset_close@@Base+0x418>
   10648:	ldrb	w9, [x22, #1]
   1064c:	cmp	w9, #0x75
   10650:	b.ne	10758 <po_lex_charset_close@@Base+0x3e0>  // b.any
   10654:	mov	x9, xzr
   10658:	mov	w1, wzr
   1065c:	add	x10, x22, #0x2
   10660:	ldrb	w11, [x10, x9]
   10664:	sub	w12, w11, #0x30
   10668:	cmp	w12, #0xa
   1066c:	b.cs	10678 <po_lex_charset_close@@Base+0x300>  // b.hs, b.nlast
   10670:	mov	w12, #0xffffffd0            	// #-48
   10674:	b	1069c <po_lex_charset_close@@Base+0x324>
   10678:	sub	w12, w11, #0x41
   1067c:	cmp	w12, #0x6
   10680:	b.cs	1068c <po_lex_charset_close@@Base+0x314>  // b.hs, b.nlast
   10684:	mov	w12, #0xffffffc9            	// #-55
   10688:	b	1069c <po_lex_charset_close@@Base+0x324>
   1068c:	sub	w12, w11, #0x61
   10690:	cmp	w12, #0x5
   10694:	b.hi	10758 <po_lex_charset_close@@Base+0x3e0>  // b.pmore
   10698:	mov	w12, #0xffffffa9            	// #-87
   1069c:	add	w12, w12, w1, lsl #4
   106a0:	add	x9, x9, #0x1
   106a4:	cmp	x9, #0x4
   106a8:	add	w1, w12, w11
   106ac:	b.ne	10660 <po_lex_charset_close@@Base+0x2e8>  // b.any
   106b0:	lsr	w9, w1, #10
   106b4:	cmp	w9, #0x36
   106b8:	add	x9, x22, #0x6
   106bc:	b.ne	10764 <po_lex_charset_close@@Base+0x3ec>  // b.any
   106c0:	ldrb	w9, [x9]
   106c4:	cmp	w9, #0x5c
   106c8:	b.ne	10758 <po_lex_charset_close@@Base+0x3e0>  // b.any
   106cc:	ldrb	w9, [x22, #7]
   106d0:	cmp	w9, #0x75
   106d4:	b.ne	10758 <po_lex_charset_close@@Base+0x3e0>  // b.any
   106d8:	mov	x10, xzr
   106dc:	mov	w9, wzr
   106e0:	add	x11, x22, #0x8
   106e4:	ldrb	w12, [x11, x10]
   106e8:	sub	w13, w12, #0x30
   106ec:	cmp	w13, #0xa
   106f0:	b.cs	106fc <po_lex_charset_close@@Base+0x384>  // b.hs, b.nlast
   106f4:	mov	w13, #0xffffffd0            	// #-48
   106f8:	b	10720 <po_lex_charset_close@@Base+0x3a8>
   106fc:	sub	w13, w12, #0x41
   10700:	cmp	w13, #0x6
   10704:	b.cs	10710 <po_lex_charset_close@@Base+0x398>  // b.hs, b.nlast
   10708:	mov	w13, #0xffffffc9            	// #-55
   1070c:	b	10720 <po_lex_charset_close@@Base+0x3a8>
   10710:	sub	w13, w12, #0x61
   10714:	cmp	w13, #0x5
   10718:	b.hi	10758 <po_lex_charset_close@@Base+0x3e0>  // b.pmore
   1071c:	mov	w13, #0xffffffa9            	// #-87
   10720:	add	w9, w13, w9, lsl #4
   10724:	add	x10, x10, #0x1
   10728:	cmp	x10, #0x4
   1072c:	add	w9, w9, w12
   10730:	b.ne	106e4 <po_lex_charset_close@@Base+0x36c>  // b.any
   10734:	lsr	w10, w9, #10
   10738:	cmp	w10, #0x37
   1073c:	b.ne	10758 <po_lex_charset_close@@Base+0x3e0>  // b.any
   10740:	add	w8, w9, w1, lsl #10
   10744:	mov	w9, #0x2400                	// #9216
   10748:	movk	w9, #0xfca0, lsl #16
   1074c:	add	w1, w8, w9
   10750:	add	x22, x22, #0xc
   10754:	b	10768 <po_lex_charset_close@@Base+0x3f0>
   10758:	add	x22, x22, #0x1
   1075c:	strb	w8, [x21], #1
   10760:	b	10634 <po_lex_charset_close@@Base+0x2bc>
   10764:	mov	x22, x9
   10768:	cmp	w1, #0x7f
   1076c:	b.hi	1077c <po_lex_charset_close@@Base+0x404>  // b.pmore
   10770:	strb	w1, [x21]
   10774:	mov	w0, #0x1                   	// #1
   10778:	b	10788 <po_lex_charset_close@@Base+0x410>
   1077c:	mov	w2, #0x6                   	// #6
   10780:	mov	x0, x21
   10784:	bl	ae60 <u8_uctomb_aux@plt>
   10788:	add	x21, x21, w0, sxtw
   1078c:	b	10634 <po_lex_charset_close@@Base+0x2bc>
   10790:	mov	x0, x20
   10794:	strb	wzr, [x21]
   10798:	bl	adf0 <po_callback_comment_dispatcher@plt>
   1079c:	b	10488 <po_lex_charset_close@@Base+0x110>
   107a0:	mov	w22, wzr
   107a4:	mov	x0, x21
   107a8:	bl	a0d0 <strlen@plt>
   107ac:	add	x5, x0, #0x1
   107b0:	sub	x2, x29, #0x10
   107b4:	sub	x6, x29, #0x20
   107b8:	mov	x0, xzr
   107bc:	mov	x1, x20
   107c0:	mov	x3, xzr
   107c4:	mov	x4, x21
   107c8:	mov	x7, xzr
   107cc:	stp	xzr, xzr, [sp]
   107d0:	strb	wzr, [sp, #24]
   107d4:	strb	w22, [sp, #16]
   107d8:	bl	a530 <po_callback_message@plt>
   107dc:	b	10488 <po_lex_charset_close@@Base+0x110>
   107e0:	mov	x0, x21
   107e4:	mov	x28, x23
   107e8:	bl	a0d0 <strlen@plt>
   107ec:	mov	x22, x0
   107f0:	mov	w0, #0x1                   	// #1
   107f4:	bfi	x0, x22, #1, #63
   107f8:	bl	a590 <xmalloc@plt>
   107fc:	cmp	x22, #0x1
   10800:	mov	x20, x0
   10804:	mov	x23, x0
   10808:	b.lt	10850 <po_lex_charset_close@@Base+0x4d8>  // b.tstop
   1080c:	add	x25, x21, x22
   10810:	mov	x23, x20
   10814:	ldrsb	w8, [x21]
   10818:	tbnz	w8, #31, 10828 <po_lex_charset_close@@Base+0x4b0>
   1081c:	strb	w8, [x23]
   10820:	mov	w0, #0x1                   	// #1
   10824:	b	10840 <po_lex_charset_close@@Base+0x4c8>
   10828:	and	w1, w8, #0xff
   1082c:	mov	w2, #0x6                   	// #6
   10830:	mov	x0, x23
   10834:	bl	ae60 <u8_uctomb_aux@plt>
   10838:	cmp	w0, #0x0
   1083c:	b.le	10960 <po_lex_charset_close@@Base+0x5e8>
   10840:	add	x21, x21, #0x1
   10844:	cmp	x21, x25
   10848:	add	x23, x23, w0, uxtw
   1084c:	b.cc	10814 <po_lex_charset_close@@Base+0x49c>  // b.lo, b.ul, b.last
   10850:	lsl	x8, x22, #1
   10854:	sub	x9, x23, x20
   10858:	strb	wzr, [x23]
   1085c:	mov	x23, x28
   10860:	adrp	x28, 4e000 <formatstring_gfc_internal@@Base+0x10>
   10864:	cmp	x9, x8
   10868:	adrp	x25, 4e000 <formatstring_gfc_internal@@Base+0x10>
   1086c:	add	x28, x28, #0x324
   10870:	b.ls	1062c <po_lex_charset_close@@Base+0x2b4>  // b.plast
   10874:	adrp	x0, 37000 <get_search_path@@Base+0xb4c>
   10878:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   1087c:	adrp	x3, 37000 <get_search_path@@Base+0xb4c>
   10880:	add	x0, x0, #0x3a0
   10884:	add	x1, x1, #0x36b
   10888:	add	x3, x3, #0x37d
   1088c:	mov	w2, #0xd0                  	// #208
   10890:	bl	add0 <__assert_fail@plt>
   10894:	adrp	x19, 4e000 <formatstring_gfc_internal@@Base+0x10>
   10898:	ldr	x0, [x19, #744]
   1089c:	bl	aa00 <free@plt>
   108a0:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   108a4:	str	xzr, [x19, #744]
   108a8:	str	xzr, [x8, #768]
   108ac:	str	xzr, [x27, #8]
   108b0:	ldp	x20, x19, [sp, #160]
   108b4:	ldp	x22, x21, [sp, #144]
   108b8:	ldp	x24, x23, [sp, #128]
   108bc:	ldp	x26, x25, [sp, #112]
   108c0:	ldp	x28, x27, [sp, #96]
   108c4:	ldp	x29, x30, [sp, #80]
   108c8:	add	sp, sp, #0xb0
   108cc:	ret
   108d0:	bl	ade0 <__errno_location@plt>
   108d4:	ldr	w0, [x0]
   108d8:	bl	a720 <strerror@plt>
   108dc:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   108e0:	ldr	x8, [x8, #3736]
   108e4:	mov	x20, x0
   108e8:	mov	w2, #0x5                   	// #5
   108ec:	mov	x0, xzr
   108f0:	ldr	x1, [x8]
   108f4:	str	x1, [sp, #40]
   108f8:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
   108fc:	add	x1, x1, #0xb9b
   10900:	bl	acd0 <dcgettext@plt>
   10904:	mov	x1, x19
   10908:	bl	aa20 <xasprintf@plt>
   1090c:	mov	x1, x0
   10910:	adrp	x0, 3b000 <plural_table_size@@Base+0x1c00>
   10914:	add	x0, x0, #0x2a7
   10918:	mov	x2, x20
   1091c:	bl	aa20 <xasprintf@plt>
   10920:	ldr	x7, [sp, #40]
   10924:	ldp	x20, x19, [sp, #160]
   10928:	ldp	x22, x21, [sp, #144]
   1092c:	ldp	x24, x23, [sp, #128]
   10930:	ldp	x26, x25, [sp, #112]
   10934:	ldp	x28, x27, [sp, #96]
   10938:	ldp	x29, x30, [sp, #80]
   1093c:	mov	x6, x0
   10940:	mov	w0, #0x2                   	// #2
   10944:	mov	x1, xzr
   10948:	mov	x2, xzr
   1094c:	mov	x3, xzr
   10950:	mov	x4, xzr
   10954:	mov	w5, wzr
   10958:	add	sp, sp, #0xb0
   1095c:	br	x7
   10960:	adrp	x0, 37000 <get_search_path@@Base+0xb4c>
   10964:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   10968:	adrp	x3, 37000 <get_search_path@@Base+0xb4c>
   1096c:	add	x0, x0, #0x365
   10970:	add	x1, x1, #0x36b
   10974:	add	x3, x3, #0x37d
   10978:	mov	w2, #0xcc                  	// #204
   1097c:	bl	add0 <__assert_fail@plt>
   10980:	sub	sp, sp, #0x70
   10984:	stp	x22, x21, [sp, #80]
   10988:	mov	x21, #0x6400                	// #25600
   1098c:	stp	x20, x19, [sp, #96]
   10990:	mov	w19, #0x1                   	// #1
   10994:	movk	x21, #0x2, lsl #32
   10998:	stp	x29, x30, [sp, #16]
   1099c:	stp	x28, x27, [sp, #32]
   109a0:	stp	x26, x25, [sp, #48]
   109a4:	stp	x24, x23, [sp, #64]
   109a8:	add	x29, sp, #0x10
   109ac:	str	w0, [sp, #4]
   109b0:	bl	113d0 <po_lex_charset_close@@Base+0x1058>
   109b4:	add	w8, w0, #0x1
   109b8:	cmp	w8, #0x21
   109bc:	b.hi	109e8 <po_lex_charset_close@@Base+0x670>  // b.pmore
   109c0:	lsl	x9, x19, x8
   109c4:	tst	x9, x21
   109c8:	b.ne	109b0 <po_lex_charset_close@@Base+0x638>  // b.any
   109cc:	mov	w9, #0x1                   	// #1
   109d0:	lsl	x8, x9, x8
   109d4:	mov	w9, #0x801                 	// #2049
   109d8:	tst	x8, x9
   109dc:	b.eq	109e8 <po_lex_charset_close@@Base+0x670>  // b.none
   109e0:	mov	x19, xzr
   109e4:	b	112fc <po_lex_charset_close@@Base+0xf84>
   109e8:	mov	x22, xzr
   109ec:	mov	w27, wzr
   109f0:	adrp	x28, 4e000 <formatstring_gfc_internal@@Base+0x10>
   109f4:	adrp	x20, 4e000 <formatstring_gfc_internal@@Base+0x10>
   109f8:	adrp	x23, 4e000 <formatstring_gfc_internal@@Base+0x10>
   109fc:	str	xzr, [x28, #816]
   10a00:	ldr	w8, [sp, #4]
   10a04:	tbz	w8, #0, 10a40 <po_lex_charset_close@@Base+0x6c8>
   10a08:	add	w8, w0, #0x1
   10a0c:	cmp	w8, #0x3e
   10a10:	b.hi	10a64 <po_lex_charset_close@@Base+0x6ec>  // b.pmore
   10a14:	cbz	x8, 10a80 <po_lex_charset_close@@Base+0x708>
   10a18:	cmp	x8, #0xb
   10a1c:	b.eq	10a50 <po_lex_charset_close@@Base+0x6d8>  // b.none
   10a20:	mov	w9, #0x1                   	// #1
   10a24:	lsl	x8, x9, x8
   10a28:	mov	x9, #0x6400                	// #25600
   10a2c:	movk	x9, #0x2, lsl #32
   10a30:	movk	x9, #0x4800, lsl #48
   10a34:	tst	x8, x9
   10a38:	b.eq	10a64 <po_lex_charset_close@@Base+0x6ec>  // b.none
   10a3c:	b	11190 <po_lex_charset_close@@Base+0xe18>
   10a40:	cmn	w0, #0x1
   10a44:	b.eq	10a80 <po_lex_charset_close@@Base+0x708>  // b.none
   10a48:	cmp	w0, #0xa
   10a4c:	b.ne	10a64 <po_lex_charset_close@@Base+0x6ec>  // b.any
   10a50:	adrp	x9, 4c000 <plural_table_size@@Base+0x12c00>
   10a54:	ldr	x9, [x9, #4000]
   10a58:	ldr	x8, [x9, #8]
   10a5c:	sub	x8, x8, #0x1
   10a60:	str	x8, [x9, #8]
   10a64:	adrp	x10, 4e000 <formatstring_gfc_internal@@Base+0x10>
   10a68:	ldrsw	x8, [x10, #800]
   10a6c:	add	w9, w8, #0x1
   10a70:	str	w9, [x10, #800]
   10a74:	adrp	x9, 4e000 <formatstring_gfc_internal@@Base+0x10>
   10a78:	add	x9, x9, #0x324
   10a7c:	strb	w0, [x9, x8]
   10a80:	bl	113d0 <po_lex_charset_close@@Base+0x1058>
   10a84:	cmp	w0, #0x5c
   10a88:	b.eq	10b30 <po_lex_charset_close@@Base+0x7b8>  // b.none
   10a8c:	mov	w24, w0
   10a90:	cmn	w0, #0x1
   10a94:	b.eq	1120c <po_lex_charset_close@@Base+0xe94>  // b.none
   10a98:	mov	w8, #0xffff                	// #65535
   10a9c:	cmp	w24, w8
   10aa0:	b.eq	1120c <po_lex_charset_close@@Base+0xe94>  // b.none
   10aa4:	subs	w25, w24, #0x10, lsl #12
   10aa8:	and	w26, w27, #0xffff
   10aac:	b.lt	10b68 <po_lex_charset_close@@Base+0x7f0>  // b.tstop
   10ab0:	mov	w8, #0xd800                	// #55296
   10ab4:	movk	w8, #0x1, lsl #16
   10ab8:	tst	w27, #0xffff
   10abc:	and	w19, w24, #0xfffffc00
   10ac0:	add	w21, w8, #0x400
   10ac4:	b.eq	10b74 <po_lex_charset_close@@Base+0x7fc>  // b.none
   10ac8:	cmp	w19, w21
   10acc:	b.ne	10b74 <po_lex_charset_close@@Base+0x7fc>  // b.any
   10ad0:	ubfx	w8, w27, #11, #5
   10ad4:	cmp	w8, #0x1b
   10ad8:	sturh	w27, [x29, #-4]
   10adc:	sturh	w24, [x29, #-2]
   10ae0:	b.ne	11320 <po_lex_charset_close@@Base+0xfa8>  // b.any
   10ae4:	add	x0, sp, #0x8
   10ae8:	sub	x1, x29, #0x4
   10aec:	mov	w2, #0x2                   	// #2
   10af0:	bl	a250 <u16_mbtouc_aux@plt>
   10af4:	cmp	w0, #0x2
   10af8:	b.ne	11324 <po_lex_charset_close@@Base+0xfac>  // b.any
   10afc:	ldr	x8, [x28, #816]
   10b00:	ldr	x9, [x20, #824]
   10b04:	add	x10, x8, #0x6
   10b08:	cmp	x10, x9
   10b0c:	b.ls	10e2c <po_lex_charset_close@@Base+0xab4>  // b.plast
   10b10:	ldr	x0, [x23, #808]
   10b14:	lsl	x8, x9, #1
   10b18:	add	x1, x8, #0xa
   10b1c:	str	x1, [x20, #824]
   10b20:	bl	a460 <xrealloc@plt>
   10b24:	ldr	x8, [x28, #816]
   10b28:	str	x0, [x23, #808]
   10b2c:	b	10e30 <po_lex_charset_close@@Base+0xab8>
   10b30:	bl	113d0 <po_lex_charset_close@@Base+0x1058>
   10b34:	sub	w8, w0, #0x6e
   10b38:	mov	w24, w0
   10b3c:	cmp	w8, #0x7
   10b40:	b.hi	10c30 <po_lex_charset_close@@Base+0x8b8>  // b.pmore
   10b44:	adrp	x11, 37000 <get_search_path@@Base+0xb4c>
   10b48:	add	x11, x11, #0x35d
   10b4c:	adr	x9, 10a98 <po_lex_charset_close@@Base+0x720>
   10b50:	ldrb	w10, [x11, x8]
   10b54:	add	x9, x9, x10, lsl #2
   10b58:	mov	w8, #0x9                   	// #9
   10b5c:	br	x9
   10b60:	mov	w8, #0xa                   	// #10
   10b64:	b	10c44 <po_lex_charset_close@@Base+0x8cc>
   10b68:	tst	w27, #0xffff
   10b6c:	b.ne	10c50 <po_lex_charset_close@@Base+0x8d8>  // b.any
   10b70:	b	10d08 <po_lex_charset_close@@Base+0x990>
   10b74:	tst	w27, #0xffff
   10b78:	b.eq	10e8c <po_lex_charset_close@@Base+0xb14>  // b.none
   10b7c:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   10b80:	ldr	x8, [x8, #3736]
   10b84:	mov	x20, x23
   10b88:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   10b8c:	mov	w2, #0x5                   	// #5
   10b90:	ldr	x23, [x8]
   10b94:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   10b98:	ldr	x27, [x8, #768]
   10b9c:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   10ba0:	ldr	x8, [x8, #3888]
   10ba4:	mov	x0, xzr
   10ba8:	add	x1, x1, #0x3e1
   10bac:	strb	wzr, [x8]
   10bb0:	bl	acd0 <dcgettext@plt>
   10bb4:	mov	w1, w26
   10bb8:	bl	aa20 <xasprintf@plt>
   10bbc:	mov	x6, x0
   10bc0:	mov	w0, #0x1                   	// #1
   10bc4:	mov	x4, #0xffffffffffffffff    	// #-1
   10bc8:	mov	x1, xzr
   10bcc:	mov	x2, x27
   10bd0:	mov	x3, x22
   10bd4:	mov	w5, wzr
   10bd8:	mov	x26, x22
   10bdc:	blr	x23
   10be0:	ldr	x8, [x28, #816]
   10be4:	adrp	x11, 4e000 <formatstring_gfc_internal@@Base+0x10>
   10be8:	ldr	x10, [x11, #824]
   10bec:	adrp	x13, 4c000 <plural_table_size@@Base+0x12c00>
   10bf0:	ldr	x13, [x13, #3888]
   10bf4:	add	x9, x8, #0x3
   10bf8:	cmp	x9, x10
   10bfc:	mov	w12, #0x1                   	// #1
   10c00:	mov	x23, x20
   10c04:	strb	w12, [x13]
   10c08:	b.ls	10e6c <po_lex_charset_close@@Base+0xaf4>  // b.plast
   10c0c:	ldr	x0, [x20, #808]
   10c10:	lsl	x8, x10, #1
   10c14:	add	x1, x8, #0xa
   10c18:	str	x1, [x11, #824]
   10c1c:	bl	a460 <xrealloc@plt>
   10c20:	ldr	x8, [x28, #816]
   10c24:	str	x0, [x20, #808]
   10c28:	add	x9, x8, #0x3
   10c2c:	b	10e70 <po_lex_charset_close@@Base+0xaf8>
   10c30:	cmp	w24, #0x66
   10c34:	b.ne	10a98 <po_lex_charset_close@@Base+0x720>  // b.any
   10c38:	mov	w8, #0xc                   	// #12
   10c3c:	b	10c44 <po_lex_charset_close@@Base+0x8cc>
   10c40:	mov	w8, #0xd                   	// #13
   10c44:	mov	w24, w8
   10c48:	ands	w26, w27, #0xffff
   10c4c:	b.eq	10d08 <po_lex_charset_close@@Base+0x990>  // b.none
   10c50:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   10c54:	ldr	x8, [x8, #3736]
   10c58:	adrp	x21, 4c000 <plural_table_size@@Base+0x12c00>
   10c5c:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   10c60:	mov	w2, #0x5                   	// #5
   10c64:	ldr	x19, [x8]
   10c68:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   10c6c:	ldr	x25, [x8, #768]
   10c70:	ldr	x21, [x21, #3888]
   10c74:	mov	x0, xzr
   10c78:	add	x1, x1, #0x3e1
   10c7c:	strb	wzr, [x21]
   10c80:	bl	acd0 <dcgettext@plt>
   10c84:	mov	w1, w26
   10c88:	bl	aa20 <xasprintf@plt>
   10c8c:	mov	x6, x0
   10c90:	mov	w0, #0x1                   	// #1
   10c94:	mov	x4, #0xffffffffffffffff    	// #-1
   10c98:	mov	x1, xzr
   10c9c:	mov	x2, x25
   10ca0:	mov	x3, x22
   10ca4:	mov	w5, wzr
   10ca8:	blr	x19
   10cac:	ldr	x8, [x28, #816]
   10cb0:	ldr	x10, [x20, #824]
   10cb4:	mov	w11, #0x1                   	// #1
   10cb8:	strb	w11, [x21]
   10cbc:	add	x9, x8, #0x3
   10cc0:	cmp	x9, x10
   10cc4:	b.ls	10cec <po_lex_charset_close@@Base+0x974>  // b.plast
   10cc8:	ldr	x0, [x23, #808]
   10ccc:	lsl	x8, x10, #1
   10cd0:	add	x1, x8, #0xa
   10cd4:	str	x1, [x20, #824]
   10cd8:	bl	a460 <xrealloc@plt>
   10cdc:	ldr	x8, [x28, #816]
   10ce0:	str	x0, [x23, #808]
   10ce4:	add	x9, x8, #0x3
   10ce8:	b	10cf0 <po_lex_charset_close@@Base+0x978>
   10cec:	ldr	x0, [x23, #808]
   10cf0:	add	x8, x0, x8
   10cf4:	mov	w10, #0xbfef                	// #49135
   10cf8:	strh	w10, [x8]
   10cfc:	str	x9, [x28, #816]
   10d00:	mov	w9, #0xbd                  	// #189
   10d04:	strb	w9, [x8, #2]
   10d08:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   10d0c:	ldrb	w9, [x8, #752]
   10d10:	ldr	x8, [x28, #816]
   10d14:	cbz	w9, 10d4c <po_lex_charset_close@@Base+0x9d4>
   10d18:	ldr	x10, [x20, #824]
   10d1c:	add	x9, x8, #0x1
   10d20:	cmp	x9, x10
   10d24:	b.ls	10d7c <po_lex_charset_close@@Base+0xa04>  // b.plast
   10d28:	ldr	x0, [x23, #808]
   10d2c:	lsl	x8, x10, #1
   10d30:	add	x1, x8, #0xa
   10d34:	str	x1, [x20, #824]
   10d38:	bl	a460 <xrealloc@plt>
   10d3c:	ldr	x8, [x28, #816]
   10d40:	str	x0, [x23, #808]
   10d44:	add	x9, x8, #0x1
   10d48:	b	10d80 <po_lex_charset_close@@Base+0xa08>
   10d4c:	ldr	x9, [x20, #824]
   10d50:	add	x10, x8, #0x2
   10d54:	cmp	x10, x9
   10d58:	b.ls	10d90 <po_lex_charset_close@@Base+0xa18>  // b.plast
   10d5c:	ldr	x0, [x23, #808]
   10d60:	lsl	x8, x9, #1
   10d64:	add	x1, x8, #0xa
   10d68:	str	x1, [x20, #824]
   10d6c:	bl	a460 <xrealloc@plt>
   10d70:	ldr	x8, [x28, #816]
   10d74:	str	x0, [x23, #808]
   10d78:	b	10d94 <po_lex_charset_close@@Base+0xa1c>
   10d7c:	ldr	x0, [x23, #808]
   10d80:	mov	w27, wzr
   10d84:	str	x9, [x28, #816]
   10d88:	strb	w24, [x0, x8]
   10d8c:	b	11028 <po_lex_charset_close@@Base+0xcb0>
   10d90:	ldr	x0, [x23, #808]
   10d94:	cmp	w24, #0x7f
   10d98:	add	x0, x0, x8
   10d9c:	b.hi	10dac <po_lex_charset_close@@Base+0xa34>  // b.pmore
   10da0:	strb	w24, [x0]
   10da4:	mov	w0, #0x1                   	// #1
   10da8:	b	10dc0 <po_lex_charset_close@@Base+0xa48>
   10dac:	mov	w2, #0x2                   	// #2
   10db0:	mov	w1, w24
   10db4:	bl	ae60 <u8_uctomb_aux@plt>
   10db8:	tbnz	w0, #31, 11324 <po_lex_charset_close@@Base+0xfac>
   10dbc:	ldr	x8, [x28, #816]
   10dc0:	mov	w27, wzr
   10dc4:	add	x8, x8, w0, uxtw
   10dc8:	str	x8, [x28, #816]
   10dcc:	b	11028 <po_lex_charset_close@@Base+0xcb0>
   10dd0:	mov	w19, wzr
   10dd4:	mov	w21, #0x4                   	// #4
   10dd8:	bl	113d0 <po_lex_charset_close@@Base+0x1058>
   10ddc:	sub	w8, w0, #0x30
   10de0:	cmp	w8, #0x9
   10de4:	b.hi	10df0 <po_lex_charset_close@@Base+0xa78>  // b.pmore
   10de8:	add	w19, w8, w19, lsl #4
   10dec:	b	10e1c <po_lex_charset_close@@Base+0xaa4>
   10df0:	sub	w8, w0, #0x41
   10df4:	cmp	w8, #0x5
   10df8:	b.hi	10e08 <po_lex_charset_close@@Base+0xa90>  // b.pmore
   10dfc:	add	w8, w0, w19, lsl #4
   10e00:	sub	w19, w8, #0x37
   10e04:	b	10e1c <po_lex_charset_close@@Base+0xaa4>
   10e08:	sub	w8, w0, #0x61
   10e0c:	cmp	w8, #0x5
   10e10:	b.hi	110d8 <po_lex_charset_close@@Base+0xd60>  // b.pmore
   10e14:	add	w8, w0, w19, lsl #4
   10e18:	sub	w19, w8, #0x57
   10e1c:	subs	w21, w21, #0x1
   10e20:	b.ne	10dd8 <po_lex_charset_close@@Base+0xa60>  // b.any
   10e24:	add	w24, w19, #0x10, lsl #12
   10e28:	b	10a98 <po_lex_charset_close@@Base+0x720>
   10e2c:	ldr	x0, [x23, #808]
   10e30:	ldr	w1, [sp, #8]
   10e34:	add	x0, x0, x8
   10e38:	cmp	w1, #0x7f
   10e3c:	b.hi	10e4c <po_lex_charset_close@@Base+0xad4>  // b.pmore
   10e40:	strb	w1, [x0]
   10e44:	mov	w0, #0x1                   	// #1
   10e48:	b	10e5c <po_lex_charset_close@@Base+0xae4>
   10e4c:	mov	w2, #0x6                   	// #6
   10e50:	bl	ae60 <u8_uctomb_aux@plt>
   10e54:	tbnz	w0, #31, 10f9c <po_lex_charset_close@@Base+0xc24>
   10e58:	ldr	x8, [x28, #816]
   10e5c:	add	x8, x8, w0, uxtw
   10e60:	str	x8, [x28, #816]
   10e64:	mov	w27, wzr
   10e68:	b	11028 <po_lex_charset_close@@Base+0xcb0>
   10e6c:	ldr	x0, [x20, #808]
   10e70:	add	x8, x0, x8
   10e74:	mov	w10, #0xbfef                	// #49135
   10e78:	strh	w10, [x8]
   10e7c:	str	x9, [x28, #816]
   10e80:	mov	w9, #0xbd                  	// #189
   10e84:	mov	x22, x26
   10e88:	strb	w9, [x8, #2]
   10e8c:	mov	w8, #0xd800                	// #55296
   10e90:	movk	w8, #0x1, lsl #16
   10e94:	cmp	w19, w8
   10e98:	b.ne	10eb4 <po_lex_charset_close@@Base+0xb3c>  // b.any
   10e9c:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   10ea0:	ldr	x8, [x8, #4000]
   10ea4:	mov	w27, w24
   10ea8:	adrp	x20, 4e000 <formatstring_gfc_internal@@Base+0x10>
   10eac:	ldr	x22, [x8, #8]
   10eb0:	b	11028 <po_lex_charset_close@@Base+0xcb0>
   10eb4:	cmp	w19, w21
   10eb8:	adrp	x20, 4e000 <formatstring_gfc_internal@@Base+0x10>
   10ebc:	b.ne	10f68 <po_lex_charset_close@@Base+0xbf0>  // b.any
   10ec0:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   10ec4:	ldr	x8, [x8, #3736]
   10ec8:	adrp	x21, 4c000 <plural_table_size@@Base+0x12c00>
   10ecc:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   10ed0:	mov	w2, #0x5                   	// #5
   10ed4:	ldr	x19, [x8]
   10ed8:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   10edc:	ldr	x24, [x8, #768]
   10ee0:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   10ee4:	ldr	x8, [x8, #4000]
   10ee8:	mov	x0, xzr
   10eec:	add	x1, x1, #0x3e1
   10ef0:	ldr	x26, [x8, #8]
   10ef4:	ldr	x21, [x21, #3888]
   10ef8:	strb	wzr, [x21]
   10efc:	bl	acd0 <dcgettext@plt>
   10f00:	mov	w1, w25
   10f04:	bl	aa20 <xasprintf@plt>
   10f08:	mov	x6, x0
   10f0c:	mov	w0, #0x1                   	// #1
   10f10:	mov	x4, #0xffffffffffffffff    	// #-1
   10f14:	mov	x1, xzr
   10f18:	mov	x2, x24
   10f1c:	mov	x3, x26
   10f20:	mov	w5, wzr
   10f24:	blr	x19
   10f28:	ldr	x8, [x28, #816]
   10f2c:	ldr	x10, [x20, #824]
   10f30:	mov	w11, #0x1                   	// #1
   10f34:	strb	w11, [x21]
   10f38:	add	x9, x8, #0x3
   10f3c:	cmp	x9, x10
   10f40:	b.ls	11008 <po_lex_charset_close@@Base+0xc90>  // b.plast
   10f44:	ldr	x0, [x23, #808]
   10f48:	lsl	x8, x10, #1
   10f4c:	add	x1, x8, #0xa
   10f50:	str	x1, [x20, #824]
   10f54:	bl	a460 <xrealloc@plt>
   10f58:	ldr	x8, [x28, #816]
   10f5c:	str	x0, [x23, #808]
   10f60:	add	x9, x8, #0x3
   10f64:	b	1100c <po_lex_charset_close@@Base+0xc94>
   10f68:	ldr	x8, [x28, #816]
   10f6c:	ldr	x9, [x20, #824]
   10f70:	add	x10, x8, #0x3
   10f74:	cmp	x10, x9
   10f78:	b.ls	11040 <po_lex_charset_close@@Base+0xcc8>  // b.plast
   10f7c:	ldr	x0, [x23, #808]
   10f80:	lsl	x8, x9, #1
   10f84:	add	x1, x8, #0xa
   10f88:	str	x1, [x20, #824]
   10f8c:	bl	a460 <xrealloc@plt>
   10f90:	ldr	x8, [x28, #816]
   10f94:	str	x0, [x23, #808]
   10f98:	b	11044 <po_lex_charset_close@@Base+0xccc>
   10f9c:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   10fa0:	ldr	x8, [x8, #3736]
   10fa4:	adrp	x21, 4c000 <plural_table_size@@Base+0x12c00>
   10fa8:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   10fac:	mov	w2, #0x5                   	// #5
   10fb0:	ldr	x19, [x8]
   10fb4:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   10fb8:	ldr	x24, [x8, #768]
   10fbc:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   10fc0:	ldr	x8, [x8, #4000]
   10fc4:	mov	x0, xzr
   10fc8:	add	x1, x1, #0x3be
   10fcc:	ldr	x25, [x8, #8]
   10fd0:	ldr	x21, [x21, #3888]
   10fd4:	strb	wzr, [x21]
   10fd8:	bl	acd0 <dcgettext@plt>
   10fdc:	mov	x6, x0
   10fe0:	mov	w0, #0x1                   	// #1
   10fe4:	mov	x4, #0xffffffffffffffff    	// #-1
   10fe8:	mov	x1, xzr
   10fec:	mov	x2, x24
   10ff0:	mov	x3, x25
   10ff4:	mov	w5, wzr
   10ff8:	blr	x19
   10ffc:	mov	w8, #0x1                   	// #1
   11000:	strb	w8, [x21]
   11004:	b	10e64 <po_lex_charset_close@@Base+0xaec>
   11008:	ldr	x0, [x23, #808]
   1100c:	add	x8, x0, x8
   11010:	mov	w10, #0xbfef                	// #49135
   11014:	strh	w10, [x8]
   11018:	str	x9, [x28, #816]
   1101c:	mov	w9, #0xbd                  	// #189
   11020:	mov	w27, wzr
   11024:	strb	w9, [x8, #2]
   11028:	bl	113d0 <po_lex_charset_close@@Base+0x1058>
   1102c:	cmp	w0, #0xa
   11030:	b.eq	11174 <po_lex_charset_close@@Base+0xdfc>  // b.none
   11034:	cmn	w0, #0x1
   11038:	b.ne	10a00 <po_lex_charset_close@@Base+0x688>  // b.any
   1103c:	b	11174 <po_lex_charset_close@@Base+0xdfc>
   11040:	ldr	x0, [x23, #808]
   11044:	cmp	w25, #0x7f
   11048:	add	x0, x0, x8
   1104c:	b.hi	11058 <po_lex_charset_close@@Base+0xce0>  // b.pmore
   11050:	strb	w25, [x0]
   11054:	b	10da4 <po_lex_charset_close@@Base+0xa2c>
   11058:	mov	w2, #0x3                   	// #3
   1105c:	mov	w1, w25
   11060:	bl	ae60 <u8_uctomb_aux@plt>
   11064:	tbz	w0, #31, 10dbc <po_lex_charset_close@@Base+0xa44>
   11068:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1106c:	ldr	x8, [x8, #3736]
   11070:	adrp	x21, 4c000 <plural_table_size@@Base+0x12c00>
   11074:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   11078:	mov	w2, #0x5                   	// #5
   1107c:	ldr	x19, [x8]
   11080:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11084:	ldr	x24, [x8, #768]
   11088:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1108c:	ldr	x8, [x8, #4000]
   11090:	mov	x0, xzr
   11094:	add	x1, x1, #0x3be
   11098:	ldr	x25, [x8, #8]
   1109c:	ldr	x21, [x21, #3888]
   110a0:	strb	wzr, [x21]
   110a4:	bl	acd0 <dcgettext@plt>
   110a8:	mov	x6, x0
   110ac:	mov	w0, #0x1                   	// #1
   110b0:	mov	x4, #0xffffffffffffffff    	// #-1
   110b4:	mov	x1, xzr
   110b8:	mov	x2, x24
   110bc:	mov	x3, x25
   110c0:	mov	w5, wzr
   110c4:	blr	x19
   110c8:	mov	w8, #0x1                   	// #1
   110cc:	mov	w27, wzr
   110d0:	strb	w8, [x21]
   110d4:	b	11028 <po_lex_charset_close@@Base+0xcb0>
   110d8:	cmn	w0, #0x1
   110dc:	b.eq	11118 <po_lex_charset_close@@Base+0xda0>  // b.none
   110e0:	cmp	w0, #0xa
   110e4:	b.ne	110fc <po_lex_charset_close@@Base+0xd84>  // b.any
   110e8:	adrp	x9, 4c000 <plural_table_size@@Base+0x12c00>
   110ec:	ldr	x9, [x9, #4000]
   110f0:	ldr	x8, [x9, #8]
   110f4:	sub	x8, x8, #0x1
   110f8:	str	x8, [x9, #8]
   110fc:	adrp	x10, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11100:	ldrsw	x8, [x10, #800]
   11104:	add	w9, w8, #0x1
   11108:	str	w9, [x10, #800]
   1110c:	adrp	x9, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11110:	add	x9, x9, #0x324
   11114:	strb	w0, [x9, x8]
   11118:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1111c:	ldr	x8, [x8, #3736]
   11120:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   11124:	mov	w2, #0x5                   	// #5
   11128:	mov	x0, xzr
   1112c:	ldr	x19, [x8]
   11130:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11134:	ldr	x24, [x8, #768]
   11138:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1113c:	ldr	x8, [x8, #4000]
   11140:	add	x1, x1, #0x400
   11144:	ldr	x25, [x8, #8]
   11148:	bl	acd0 <dcgettext@plt>
   1114c:	mov	x6, x0
   11150:	mov	w0, #0x1                   	// #1
   11154:	mov	x4, #0xffffffffffffffff    	// #-1
   11158:	mov	x1, xzr
   1115c:	mov	x2, x24
   11160:	mov	x3, x25
   11164:	mov	w5, wzr
   11168:	blr	x19
   1116c:	mov	w8, #0x75                  	// #117
   11170:	b	10c44 <po_lex_charset_close@@Base+0x8cc>
   11174:	ldr	w8, [sp, #4]
   11178:	tbz	w8, #0, 1120c <po_lex_charset_close@@Base+0xe94>
   1117c:	cmn	w0, #0x1
   11180:	b.eq	1120c <po_lex_charset_close@@Base+0xe94>  // b.none
   11184:	cmp	w0, #0xa
   11188:	b.eq	111dc <po_lex_charset_close@@Base+0xe64>  // b.none
   1118c:	b	111f0 <po_lex_charset_close@@Base+0xe78>
   11190:	mov	x20, #0x6400                	// #25600
   11194:	mov	w19, #0x1                   	// #1
   11198:	movk	x20, #0x2, lsl #32
   1119c:	add	w8, w0, #0x1
   111a0:	cmp	w8, #0x3e
   111a4:	b.hi	111f0 <po_lex_charset_close@@Base+0xe78>  // b.pmore
   111a8:	lsl	x9, x19, x8
   111ac:	tst	x9, x20
   111b0:	b.eq	111bc <po_lex_charset_close@@Base+0xe44>  // b.none
   111b4:	bl	113d0 <po_lex_charset_close@@Base+0x1058>
   111b8:	b	1119c <po_lex_charset_close@@Base+0xe24>
   111bc:	mov	w9, #0x1                   	// #1
   111c0:	mov	x10, #0x1                   	// #1
   111c4:	lsl	x9, x9, x8
   111c8:	movk	x10, #0x4800, lsl #48
   111cc:	tst	x9, x10
   111d0:	b.ne	1120c <po_lex_charset_close@@Base+0xe94>  // b.any
   111d4:	cmp	x8, #0xb
   111d8:	b.ne	111f0 <po_lex_charset_close@@Base+0xe78>  // b.any
   111dc:	adrp	x9, 4c000 <plural_table_size@@Base+0x12c00>
   111e0:	ldr	x9, [x9, #4000]
   111e4:	ldr	x8, [x9, #8]
   111e8:	sub	x8, x8, #0x1
   111ec:	str	x8, [x9, #8]
   111f0:	adrp	x10, 4e000 <formatstring_gfc_internal@@Base+0x10>
   111f4:	ldrsw	x8, [x10, #800]
   111f8:	add	w9, w8, #0x1
   111fc:	str	w9, [x10, #800]
   11200:	adrp	x9, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11204:	add	x9, x9, #0x324
   11208:	strb	w0, [x9, x8]
   1120c:	tst	w27, #0xffff
   11210:	b.eq	112b8 <po_lex_charset_close@@Base+0xf40>  // b.none
   11214:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   11218:	ldr	x8, [x8, #3736]
   1121c:	adrp	x24, 4c000 <plural_table_size@@Base+0x12c00>
   11220:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   11224:	add	x1, x1, #0x3e1
   11228:	ldr	x19, [x8]
   1122c:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11230:	ldr	x20, [x8, #768]
   11234:	ldr	x24, [x24, #3888]
   11238:	mov	w2, #0x5                   	// #5
   1123c:	mov	x0, xzr
   11240:	and	w21, w27, #0xffff
   11244:	strb	wzr, [x24]
   11248:	bl	acd0 <dcgettext@plt>
   1124c:	mov	w1, w21
   11250:	bl	aa20 <xasprintf@plt>
   11254:	mov	x6, x0
   11258:	mov	w0, #0x1                   	// #1
   1125c:	mov	x4, #0xffffffffffffffff    	// #-1
   11260:	mov	x1, xzr
   11264:	mov	x2, x20
   11268:	mov	x3, x22
   1126c:	mov	w5, wzr
   11270:	mov	w21, #0x1                   	// #1
   11274:	adrp	x20, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11278:	blr	x19
   1127c:	ldr	x9, [x28, #816]
   11280:	ldr	x10, [x20, #824]
   11284:	strb	w21, [x24]
   11288:	add	x8, x9, #0x3
   1128c:	cmp	x8, x10
   11290:	b.ls	112c0 <po_lex_charset_close@@Base+0xf48>  // b.plast
   11294:	ldr	x0, [x23, #808]
   11298:	lsl	x8, x10, #1
   1129c:	add	x1, x8, #0xa
   112a0:	str	x1, [x20, #824]
   112a4:	bl	a460 <xrealloc@plt>
   112a8:	ldr	x9, [x28, #816]
   112ac:	str	x0, [x23, #808]
   112b0:	add	x8, x9, #0x3
   112b4:	b	112c4 <po_lex_charset_close@@Base+0xf4c>
   112b8:	ldr	x8, [x28, #816]
   112bc:	b	112dc <po_lex_charset_close@@Base+0xf64>
   112c0:	ldr	x0, [x23, #808]
   112c4:	add	x9, x0, x9
   112c8:	mov	w10, #0xbfef                	// #49135
   112cc:	mov	w11, #0xbd                  	// #189
   112d0:	strh	w10, [x9]
   112d4:	str	x8, [x28, #816]
   112d8:	strb	w11, [x9, #2]
   112dc:	add	x0, x8, #0x1
   112e0:	bl	a590 <xmalloc@plt>
   112e4:	ldr	x20, [x28, #816]
   112e8:	ldr	x1, [x23, #808]
   112ec:	mov	x19, x0
   112f0:	mov	x2, x20
   112f4:	bl	a040 <memcpy@plt>
   112f8:	strb	wzr, [x19, x20]
   112fc:	mov	x0, x19
   11300:	ldp	x20, x19, [sp, #96]
   11304:	ldp	x22, x21, [sp, #80]
   11308:	ldp	x24, x23, [sp, #64]
   1130c:	ldp	x26, x25, [sp, #48]
   11310:	ldp	x28, x27, [sp, #32]
   11314:	ldp	x29, x30, [sp, #16]
   11318:	add	sp, sp, #0x70
   1131c:	ret
   11320:	str	w26, [sp, #8]
   11324:	bl	a7e0 <abort@plt>
   11328:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   1132c:	ldrsw	x9, [x8, #800]
   11330:	cbz	w9, 1136c <po_lex_charset_close@@Base+0xff4>
   11334:	adrp	x10, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11338:	sub	x9, x9, #0x1
   1133c:	add	x10, x10, #0x324
   11340:	ldrb	w0, [x10, x9]
   11344:	str	w9, [x8, #800]
   11348:	cmp	w0, #0xa
   1134c:	b.ne	11368 <po_lex_charset_close@@Base+0xff0>  // b.any
   11350:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   11354:	ldr	x8, [x8, #4000]
   11358:	mov	w0, #0xa                   	// #10
   1135c:	ldr	x9, [x8, #8]
   11360:	add	x9, x9, #0x1
   11364:	str	x9, [x8, #8]
   11368:	ret
   1136c:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11370:	adrp	x10, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11374:	ldr	x9, [x8, #760]
   11378:	ldr	x12, [x10, #736]
   1137c:	cmp	x9, x12
   11380:	b.ne	1138c <po_lex_charset_close@@Base+0x1014>  // b.any
   11384:	mov	w0, #0xffffffff            	// #-1
   11388:	ret
   1138c:	adrp	x10, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11390:	ldr	x11, [x10, #744]
   11394:	add	x10, x9, #0x1
   11398:	str	x10, [x8, #760]
   1139c:	ldrb	w0, [x11, x9]
   113a0:	cmp	w0, #0xd
   113a4:	b.ne	11348 <po_lex_charset_close@@Base+0xfd0>  // b.any
   113a8:	cmp	x10, x12
   113ac:	b.eq	113c8 <po_lex_charset_close@@Base+0x1050>  // b.none
   113b0:	add	x9, x9, #0x2
   113b4:	str	x9, [x8, #760]
   113b8:	ldrb	w9, [x11, x10]
   113bc:	cmp	w9, #0xa
   113c0:	b.eq	11350 <po_lex_charset_close@@Base+0xfd8>  // b.none
   113c4:	str	x10, [x8, #760]
   113c8:	mov	w0, #0xd                   	// #13
   113cc:	ret
   113d0:	stp	x29, x30, [sp, #-32]!
   113d4:	stp	x20, x19, [sp, #16]
   113d8:	mov	x29, sp
   113dc:	bl	11328 <po_lex_charset_close@@Base+0xfb0>
   113e0:	cmp	w0, #0x5c
   113e4:	b.ne	11424 <po_lex_charset_close@@Base+0x10ac>  // b.any
   113e8:	mov	x20, #0x3200                	// #12800
   113ec:	mov	w19, #0x1                   	// #1
   113f0:	movk	x20, #0x1, lsl #32
   113f4:	bl	11328 <po_lex_charset_close@@Base+0xfb0>
   113f8:	cmp	w0, #0xa
   113fc:	b.ne	11430 <po_lex_charset_close@@Base+0x10b8>  // b.any
   11400:	bl	11328 <po_lex_charset_close@@Base+0xfb0>
   11404:	cmp	w0, #0x20
   11408:	b.hi	1141c <po_lex_charset_close@@Base+0x10a4>  // b.pmore
   1140c:	mov	w8, w0
   11410:	lsl	x8, x19, x8
   11414:	tst	x8, x20
   11418:	b.ne	11400 <po_lex_charset_close@@Base+0x1088>  // b.any
   1141c:	cmp	w0, #0x5c
   11420:	b.eq	113f4 <po_lex_charset_close@@Base+0x107c>  // b.none
   11424:	ldp	x20, x19, [sp, #16]
   11428:	ldp	x29, x30, [sp], #32
   1142c:	ret
   11430:	cmn	w0, #0x1
   11434:	b.eq	11454 <po_lex_charset_close@@Base+0x10dc>  // b.none
   11438:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   1143c:	ldrsw	x9, [x8, #800]
   11440:	adrp	x10, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11444:	add	x10, x10, #0x324
   11448:	add	w11, w9, #0x1
   1144c:	strb	w0, [x10, x9]
   11450:	str	w11, [x8, #800]
   11454:	mov	w0, #0x5c                  	// #92
   11458:	b	11424 <po_lex_charset_close@@Base+0x10ac>
   1145c:	sub	sp, sp, #0xa0
   11460:	stp	x24, x23, [sp, #112]
   11464:	mov	x0, x2
   11468:	adrp	x24, 4e000 <formatstring_gfc_internal@@Base+0x10>
   1146c:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11470:	stp	x29, x30, [sp, #64]
   11474:	stp	x28, x27, [sp, #80]
   11478:	stp	x26, x25, [sp, #96]
   1147c:	stp	x22, x21, [sp, #128]
   11480:	stp	x20, x19, [sp, #144]
   11484:	add	x29, sp, #0x40
   11488:	str	x1, [x24, #832]
   1148c:	str	x2, [x8, #840]
   11490:	bl	a5a0 <xstrdup@plt>
   11494:	adrp	x9, 4c000 <plural_table_size@@Base+0x12c00>
   11498:	ldr	x9, [x9, #4000]
   1149c:	mov	x23, #0x3700                	// #14080
   114a0:	mov	w25, #0x1                   	// #1
   114a4:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   114a8:	adrp	x26, 4e000 <formatstring_gfc_internal@@Base+0x10>
   114ac:	adrp	x10, 4e000 <formatstring_gfc_internal@@Base+0x10>
   114b0:	adrp	x28, 4e000 <formatstring_gfc_internal@@Base+0x10>
   114b4:	adrp	x19, 4e000 <formatstring_gfc_internal@@Base+0x10>
   114b8:	adrp	x22, 4e000 <formatstring_gfc_internal@@Base+0x10>
   114bc:	adrp	x27, 4e000 <formatstring_gfc_internal@@Base+0x10>
   114c0:	movk	x23, #0x1, lsl #32
   114c4:	stp	x0, x25, [x9]
   114c8:	str	wzr, [x8, #848]
   114cc:	strb	wzr, [x26, #852]
   114d0:	strb	wzr, [x10, #853]
   114d4:	ldr	x0, [x28, #864]
   114d8:	cbz	x0, 114e0 <po_lex_charset_close@@Base+0x1168>
   114dc:	bl	aa00 <free@plt>
   114e0:	sub	x0, x29, #0x10
   114e4:	str	xzr, [x28, #864]
   114e8:	strb	wzr, [x19, #854]
   114ec:	strb	wzr, [x22, #855]
   114f0:	str	xzr, [x27, #856]
   114f4:	bl	11800 <po_lex_charset_close@@Base+0x1488>
   114f8:	cbz	x0, 11764 <po_lex_charset_close@@Base+0x13ec>
   114fc:	mov	x20, x0
   11500:	ldr	x0, [x28, #864]
   11504:	cbz	x0, 11518 <po_lex_charset_close@@Base+0x11a0>
   11508:	bl	acc0 <po_callback_comment_special@plt>
   1150c:	ldr	x0, [x28, #864]
   11510:	bl	aa00 <free@plt>
   11514:	str	xzr, [x28, #864]
   11518:	bl	11cec <po_lex_charset_close@@Base+0x1974>
   1151c:	cmp	w0, #0x3d
   11520:	b.hi	116c0 <po_lex_charset_close@@Base+0x1348>  // b.pmore
   11524:	mov	w8, w0
   11528:	lsl	x9, x25, x8
   1152c:	tst	x9, x23
   11530:	b.ne	11518 <po_lex_charset_close@@Base+0x11a0>  // b.any
   11534:	cmp	x8, #0x3b
   11538:	b.eq	115ac <po_lex_charset_close@@Base+0x1234>  // b.none
   1153c:	cmp	x8, #0x3d
   11540:	b.ne	116c0 <po_lex_charset_close@@Base+0x1348>  // b.any
   11544:	add	x0, sp, #0x20
   11548:	bl	11800 <po_lex_charset_close@@Base+0x1488>
   1154c:	cbz	x0, 11774 <po_lex_charset_close@@Base+0x13fc>
   11550:	ldrb	w8, [x22, #855]
   11554:	mov	x21, x0
   11558:	strb	w8, [x26, #852]
   1155c:	bl	11cec <po_lex_charset_close@@Base+0x1974>
   11560:	ldr	x24, [x27, #856]
   11564:	cbz	x24, 1156c <po_lex_charset_close@@Base+0x11f4>
   11568:	strb	wzr, [x26, #852]
   1156c:	cmp	w0, #0x20
   11570:	b.hi	11584 <po_lex_charset_close@@Base+0x120c>  // b.pmore
   11574:	mov	w8, w0
   11578:	lsl	x8, x25, x8
   1157c:	tst	x8, x23
   11580:	b.ne	1155c <po_lex_charset_close@@Base+0x11e4>  // b.any
   11584:	cmp	w0, #0x3b
   11588:	strb	wzr, [x26, #852]
   1158c:	b.ne	117a4 <po_lex_charset_close@@Base+0x142c>  // b.any
   11590:	cbz	x24, 115c8 <po_lex_charset_close@@Base+0x1250>
   11594:	mov	x0, x21
   11598:	mov	x1, x20
   1159c:	bl	a8d0 <strcmp@plt>
   115a0:	cmp	w0, #0x0
   115a4:	csel	x21, x24, x21, eq  // eq = none
   115a8:	b	1167c <po_lex_charset_close@@Base+0x1304>
   115ac:	adrp	x0, 37000 <get_search_path@@Base+0xb4c>
   115b0:	add	x0, x0, #0x1a2
   115b4:	bl	a5a0 <xstrdup@plt>
   115b8:	ldur	q0, [x29, #-16]
   115bc:	mov	x21, x0
   115c0:	str	q0, [sp, #32]
   115c4:	b	11680 <po_lex_charset_close@@Base+0x1308>
   115c8:	ldrb	w8, [x22, #855]
   115cc:	cmp	w8, #0x1
   115d0:	b.ne	1167c <po_lex_charset_close@@Base+0x1304>  // b.any
   115d4:	bl	124e0 <po_lex_charset_close@@Base+0x2168>
   115d8:	cmp	w0, #0x20
   115dc:	b.eq	115d4 <po_lex_charset_close@@Base+0x125c>  // b.none
   115e0:	cmn	w0, #0x1
   115e4:	b.eq	11620 <po_lex_charset_close@@Base+0x12a8>  // b.none
   115e8:	cmp	w0, #0xa
   115ec:	b.ne	11604 <po_lex_charset_close@@Base+0x128c>  // b.any
   115f0:	adrp	x9, 4c000 <plural_table_size@@Base+0x12c00>
   115f4:	ldr	x9, [x9, #4000]
   115f8:	ldr	x8, [x9, #8]
   115fc:	sub	x8, x8, #0x1
   11600:	str	x8, [x9, #8]
   11604:	adrp	x10, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11608:	ldrsw	x8, [x10, #944]
   1160c:	add	w9, w8, #0x1
   11610:	str	w9, [x10, #944]
   11614:	adrp	x9, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11618:	add	x9, x9, #0x3b4
   1161c:	str	w0, [x9, x8, lsl #2]
   11620:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11624:	strb	w25, [x8, #853]
   11628:	bl	11cec <po_lex_charset_close@@Base+0x1974>
   1162c:	cmn	w0, #0x1
   11630:	b.eq	1166c <po_lex_charset_close@@Base+0x12f4>  // b.none
   11634:	cmp	w0, #0xa
   11638:	b.ne	11650 <po_lex_charset_close@@Base+0x12d8>  // b.any
   1163c:	adrp	x9, 4c000 <plural_table_size@@Base+0x12c00>
   11640:	ldr	x9, [x9, #4000]
   11644:	ldr	x8, [x9, #8]
   11648:	sub	x8, x8, #0x1
   1164c:	str	x8, [x9, #8]
   11650:	adrp	x10, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11654:	ldrsw	x8, [x10, #944]
   11658:	add	w9, w8, #0x1
   1165c:	str	w9, [x10, #944]
   11660:	adrp	x9, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11664:	add	x9, x9, #0x3b4
   11668:	str	w0, [x9, x8, lsl #2]
   1166c:	ldr	x24, [x27, #856]
   11670:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11674:	strb	wzr, [x8, #853]
   11678:	cbnz	x24, 11594 <po_lex_charset_close@@Base+0x121c>
   1167c:	adrp	x24, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11680:	mov	x0, x21
   11684:	bl	a0d0 <strlen@plt>
   11688:	ldrb	w8, [x19, #854]
   1168c:	add	x5, x0, #0x1
   11690:	sub	x2, x29, #0x10
   11694:	add	x6, sp, #0x20
   11698:	mov	x0, xzr
   1169c:	mov	x1, x20
   116a0:	mov	x3, xzr
   116a4:	mov	x4, x21
   116a8:	mov	x7, xzr
   116ac:	stp	xzr, xzr, [sp]
   116b0:	strb	w8, [sp, #24]
   116b4:	strb	wzr, [sp, #16]
   116b8:	bl	a530 <po_callback_message@plt>
   116bc:	b	114d4 <po_lex_charset_close@@Base+0x115c>
   116c0:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   116c4:	ldr	x8, [x8, #3736]
   116c8:	adrp	x22, 4e000 <formatstring_gfc_internal@@Base+0x10>
   116cc:	cmn	w0, #0x1
   116d0:	b.ne	116f0 <po_lex_charset_close@@Base+0x1378>  // b.any
   116d4:	adrp	x23, 4c000 <plural_table_size@@Base+0x12c00>
   116d8:	ldr	x19, [x22, #840]
   116dc:	ldr	x21, [x8]
   116e0:	ldr	x23, [x23, #4000]
   116e4:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   116e8:	add	x1, x1, #0x44c
   116ec:	b	11708 <po_lex_charset_close@@Base+0x1390>
   116f0:	adrp	x23, 4c000 <plural_table_size@@Base+0x12c00>
   116f4:	ldr	x19, [x22, #840]
   116f8:	ldr	x21, [x8]
   116fc:	ldr	x23, [x23, #4000]
   11700:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   11704:	add	x1, x1, #0x4a2
   11708:	ldr	x20, [x23, #8]
   1170c:	mov	w2, #0x5                   	// #5
   11710:	mov	x0, xzr
   11714:	bl	acd0 <dcgettext@plt>
   11718:	mov	x6, x0
   1171c:	mov	w0, #0x1                   	// #1
   11720:	mov	x4, #0xffffffffffffffff    	// #-1
   11724:	mov	x1, xzr
   11728:	mov	x2, x19
   1172c:	mov	x3, x20
   11730:	mov	w5, wzr
   11734:	blr	x21
   11738:	str	xzr, [x24, #832]
   1173c:	str	xzr, [x22, #840]
   11740:	str	xzr, [x23, #8]
   11744:	ldp	x20, x19, [sp, #144]
   11748:	ldp	x22, x21, [sp, #128]
   1174c:	ldp	x24, x23, [sp, #112]
   11750:	ldp	x26, x25, [sp, #96]
   11754:	ldp	x28, x27, [sp, #80]
   11758:	ldp	x29, x30, [sp, #64]
   1175c:	add	sp, sp, #0xa0
   11760:	ret
   11764:	adrp	x23, 4c000 <plural_table_size@@Base+0x12c00>
   11768:	ldr	x23, [x23, #4000]
   1176c:	adrp	x22, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11770:	b	11738 <po_lex_charset_close@@Base+0x13c0>
   11774:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   11778:	ldr	x8, [x8, #3736]
   1177c:	adrp	x22, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11780:	adrp	x23, 4c000 <plural_table_size@@Base+0x12c00>
   11784:	ldr	x19, [x22, #840]
   11788:	ldr	x21, [x8]
   1178c:	ldr	x23, [x23, #4000]
   11790:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   11794:	add	x1, x1, #0x44c
   11798:	mov	w2, #0x5                   	// #5
   1179c:	ldr	x20, [x23, #8]
   117a0:	b	11714 <po_lex_charset_close@@Base+0x139c>
   117a4:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   117a8:	ldr	x8, [x8, #3736]
   117ac:	adrp	x22, 4e000 <formatstring_gfc_internal@@Base+0x10>
   117b0:	adrp	x23, 4c000 <plural_table_size@@Base+0x12c00>
   117b4:	ldr	x19, [x22, #840]
   117b8:	ldr	x21, [x8]
   117bc:	ldr	x23, [x23, #4000]
   117c0:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   117c4:	add	x1, x1, #0x471
   117c8:	mov	w2, #0x5                   	// #5
   117cc:	ldr	x20, [x23, #8]
   117d0:	mov	x0, xzr
   117d4:	bl	acd0 <dcgettext@plt>
   117d8:	mov	x6, x0
   117dc:	mov	w0, #0x1                   	// #1
   117e0:	mov	x4, #0xffffffffffffffff    	// #-1
   117e4:	mov	x1, xzr
   117e8:	mov	x2, x19
   117ec:	mov	x3, x20
   117f0:	mov	w5, wzr
   117f4:	blr	x21
   117f8:	adrp	x24, 4e000 <formatstring_gfc_internal@@Base+0x10>
   117fc:	b	11738 <po_lex_charset_close@@Base+0x13c0>
   11800:	stp	x29, x30, [sp, #-96]!
   11804:	stp	x22, x21, [sp, #64]
   11808:	mov	x22, #0x6e00                	// #28160
   1180c:	stp	x20, x19, [sp, #80]
   11810:	mov	x20, x0
   11814:	mov	w21, #0x1                   	// #1
   11818:	movk	x22, #0x2, lsl #32
   1181c:	str	x27, [sp, #16]
   11820:	stp	x26, x25, [sp, #32]
   11824:	stp	x24, x23, [sp, #48]
   11828:	mov	x29, sp
   1182c:	bl	11cec <po_lex_charset_close@@Base+0x1974>
   11830:	add	w8, w0, #0x1
   11834:	mov	w19, w0
   11838:	cmp	w8, #0x21
   1183c:	b.hi	11870 <po_lex_charset_close@@Base+0x14f8>  // b.pmore
   11840:	lsl	x9, x21, x8
   11844:	tst	x9, x22
   11848:	b.ne	1182c <po_lex_charset_close@@Base+0x14b4>  // b.any
   1184c:	cbnz	x8, 11870 <po_lex_charset_close@@Base+0x14f8>
   11850:	ldp	x20, x19, [sp, #80]
   11854:	ldp	x22, x21, [sp, #64]
   11858:	ldp	x24, x23, [sp, #48]
   1185c:	ldp	x26, x25, [sp, #32]
   11860:	ldr	x27, [sp, #16]
   11864:	mov	x0, xzr
   11868:	ldp	x29, x30, [sp], #96
   1186c:	ret
   11870:	adrp	x21, 4c000 <plural_table_size@@Base+0x12c00>
   11874:	ldr	x21, [x21, #4000]
   11878:	adrp	x22, 4e000 <formatstring_gfc_internal@@Base+0x10>
   1187c:	cmp	w19, #0x22
   11880:	adrp	x23, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11884:	ldr	q0, [x21]
   11888:	str	q0, [x20]
   1188c:	str	xzr, [x22, #888]
   11890:	b.ne	11a64 <po_lex_charset_close@@Base+0x16ec>  // b.any
   11894:	adrp	x24, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11898:	adrp	x25, 37000 <get_search_path@@Base+0xb4c>
   1189c:	adrp	x20, 4e000 <formatstring_gfc_internal@@Base+0x10>
   118a0:	add	x24, x24, #0x3b4
   118a4:	add	x25, x25, #0x435
   118a8:	adrp	x26, 4e000 <formatstring_gfc_internal@@Base+0x10>
   118ac:	bl	124e0 <po_lex_charset_close@@Base+0x2168>
   118b0:	cmp	w0, #0x5c
   118b4:	b.eq	118e4 <po_lex_charset_close@@Base+0x156c>  // b.none
   118b8:	mov	w19, w0
   118bc:	cmn	w0, #0x1
   118c0:	b.eq	11b2c <po_lex_charset_close@@Base+0x17b4>  // b.none
   118c4:	cmp	w19, #0x22
   118c8:	b.eq	11b78 <po_lex_charset_close@@Base+0x1800>  // b.none
   118cc:	ldr	x8, [x22, #888]
   118d0:	ldr	x9, [x26, #880]
   118d4:	cmp	x8, x9
   118d8:	b.cs	1195c <po_lex_charset_close@@Base+0x15e4>  // b.hs, b.nlast
   118dc:	ldr	x0, [x23, #872]
   118e0:	b	1197c <po_lex_charset_close@@Base+0x1604>
   118e4:	bl	124e0 <po_lex_charset_close@@Base+0x2168>
   118e8:	cmn	w0, #0x1
   118ec:	b.eq	11b2c <po_lex_charset_close@@Base+0x17b4>  // b.none
   118f0:	and	w8, w0, #0xfffffff8
   118f4:	mov	w19, w0
   118f8:	cmp	w8, #0x30
   118fc:	b.ne	1198c <po_lex_charset_close@@Base+0x1614>  // b.any
   11900:	mov	w27, #0x3                   	// #3
   11904:	mov	w0, w19
   11908:	mov	w19, wzr
   1190c:	add	w8, w0, w19, lsl #3
   11910:	subs	w27, w27, #0x1
   11914:	sub	w19, w8, #0x30
   11918:	b.eq	118cc <po_lex_charset_close@@Base+0x1554>  // b.none
   1191c:	bl	124e0 <po_lex_charset_close@@Base+0x2168>
   11920:	and	w8, w0, #0xfffffff8
   11924:	cmp	w8, #0x30
   11928:	b.eq	1190c <po_lex_charset_close@@Base+0x1594>  // b.none
   1192c:	cmn	w0, #0x1
   11930:	b.eq	118cc <po_lex_charset_close@@Base+0x1554>  // b.none
   11934:	cmp	w0, #0xa
   11938:	b.ne	11948 <po_lex_charset_close@@Base+0x15d0>  // b.any
   1193c:	ldr	x8, [x21, #8]
   11940:	sub	x8, x8, #0x1
   11944:	str	x8, [x21, #8]
   11948:	ldrsw	x8, [x20, #944]
   1194c:	add	w9, w8, #0x1
   11950:	str	w9, [x20, #944]
   11954:	str	w0, [x24, x8, lsl #2]
   11958:	b	118cc <po_lex_charset_close@@Base+0x1554>
   1195c:	ldr	x0, [x23, #872]
   11960:	lsl	x8, x9, #1
   11964:	add	x8, x8, #0xa
   11968:	lsl	x1, x8, #2
   1196c:	str	x8, [x26, #880]
   11970:	bl	a460 <xrealloc@plt>
   11974:	ldr	x8, [x22, #888]
   11978:	str	x0, [x23, #872]
   1197c:	add	x9, x8, #0x1
   11980:	str	x9, [x22, #888]
   11984:	str	w19, [x0, x8, lsl #2]
   11988:	b	118ac <po_lex_charset_close@@Base+0x1534>
   1198c:	orr	w8, w19, #0x20
   11990:	cmp	w8, #0x75
   11994:	b.ne	119f0 <po_lex_charset_close@@Base+0x1678>  // b.any
   11998:	mov	w19, wzr
   1199c:	mov	w27, #0x4                   	// #4
   119a0:	bl	124e0 <po_lex_charset_close@@Base+0x2168>
   119a4:	sub	w8, w0, #0x30
   119a8:	cmp	w8, #0x9
   119ac:	b.hi	119b8 <po_lex_charset_close@@Base+0x1640>  // b.pmore
   119b0:	add	w19, w8, w19, lsl #4
   119b4:	b	119e4 <po_lex_charset_close@@Base+0x166c>
   119b8:	sub	w8, w0, #0x41
   119bc:	cmp	w8, #0x5
   119c0:	b.hi	119d0 <po_lex_charset_close@@Base+0x1658>  // b.pmore
   119c4:	add	w8, w0, w19, lsl #4
   119c8:	sub	w19, w8, #0x37
   119cc:	b	119e4 <po_lex_charset_close@@Base+0x166c>
   119d0:	sub	w8, w0, #0x61
   119d4:	cmp	w8, #0x5
   119d8:	b.hi	1192c <po_lex_charset_close@@Base+0x15b4>  // b.pmore
   119dc:	add	w8, w0, w19, lsl #4
   119e0:	sub	w19, w8, #0x57
   119e4:	subs	w27, w27, #0x1
   119e8:	b.ne	119a0 <po_lex_charset_close@@Base+0x1628>  // b.any
   119ec:	b	118cc <po_lex_charset_close@@Base+0x1554>
   119f0:	cmp	w19, #0x6d
   119f4:	b.le	11a1c <po_lex_charset_close@@Base+0x16a4>
   119f8:	sub	w8, w19, #0x6e
   119fc:	cmp	w8, #0x8
   11a00:	b.hi	118cc <po_lex_charset_close@@Base+0x1554>  // b.pmore
   11a04:	adr	x9, 118cc <po_lex_charset_close@@Base+0x1554>
   11a08:	ldrb	w10, [x25, x8]
   11a0c:	add	x9, x9, x10, lsl #2
   11a10:	br	x9
   11a14:	mov	w19, #0xa                   	// #10
   11a18:	b	118cc <po_lex_charset_close@@Base+0x1554>
   11a1c:	cmp	w19, #0x61
   11a20:	b.eq	11a54 <po_lex_charset_close@@Base+0x16dc>  // b.none
   11a24:	cmp	w19, #0x62
   11a28:	b.eq	11a5c <po_lex_charset_close@@Base+0x16e4>  // b.none
   11a2c:	cmp	w19, #0x66
   11a30:	b.ne	118cc <po_lex_charset_close@@Base+0x1554>  // b.any
   11a34:	mov	w19, #0xc                   	// #12
   11a38:	b	118cc <po_lex_charset_close@@Base+0x1554>
   11a3c:	mov	w19, #0xd                   	// #13
   11a40:	b	118cc <po_lex_charset_close@@Base+0x1554>
   11a44:	mov	w19, #0x9                   	// #9
   11a48:	b	118cc <po_lex_charset_close@@Base+0x1554>
   11a4c:	mov	w19, #0xb                   	// #11
   11a50:	b	118cc <po_lex_charset_close@@Base+0x1554>
   11a54:	mov	w19, #0x7                   	// #7
   11a58:	b	118cc <po_lex_charset_close@@Base+0x1554>
   11a5c:	mov	w19, #0x8                   	// #8
   11a60:	b	118cc <po_lex_charset_close@@Base+0x1554>
   11a64:	mov	w0, w19
   11a68:	bl	11b9c <po_lex_charset_close@@Base+0x1824>
   11a6c:	tbz	w0, #0, 11abc <po_lex_charset_close@@Base+0x1744>
   11a70:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   11a74:	ldr	x8, [x8, #3736]
   11a78:	adrp	x9, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11a7c:	ldr	x20, [x9, #840]
   11a80:	ldr	x21, [x21, #8]
   11a84:	ldr	x24, [x8]
   11a88:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   11a8c:	add	x1, x1, #0x4f7
   11a90:	mov	w2, #0x5                   	// #5
   11a94:	mov	x0, xzr
   11a98:	bl	acd0 <dcgettext@plt>
   11a9c:	mov	x6, x0
   11aa0:	mov	w0, #0x1                   	// #1
   11aa4:	mov	x4, #0xffffffffffffffff    	// #-1
   11aa8:	mov	x1, xzr
   11aac:	mov	x2, x20
   11ab0:	mov	x3, x21
   11ab4:	mov	w5, wzr
   11ab8:	blr	x24
   11abc:	cmn	w19, #0x1
   11ac0:	b.eq	11b78 <po_lex_charset_close@@Base+0x1800>  // b.none
   11ac4:	adrp	x20, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11ac8:	mov	w0, w19
   11acc:	bl	11b9c <po_lex_charset_close@@Base+0x1824>
   11ad0:	tbnz	w0, #0, 11b78 <po_lex_charset_close@@Base+0x1800>
   11ad4:	ldr	x8, [x22, #888]
   11ad8:	ldr	x9, [x20, #880]
   11adc:	cmp	x8, x9
   11ae0:	b.cs	11aec <po_lex_charset_close@@Base+0x1774>  // b.hs, b.nlast
   11ae4:	ldr	x0, [x23, #872]
   11ae8:	b	11b0c <po_lex_charset_close@@Base+0x1794>
   11aec:	ldr	x0, [x23, #872]
   11af0:	lsl	x8, x9, #1
   11af4:	add	x8, x8, #0xa
   11af8:	lsl	x1, x8, #2
   11afc:	str	x8, [x20, #880]
   11b00:	bl	a460 <xrealloc@plt>
   11b04:	ldr	x8, [x22, #888]
   11b08:	str	x0, [x23, #872]
   11b0c:	add	x9, x8, #0x1
   11b10:	str	x9, [x22, #888]
   11b14:	str	w19, [x0, x8, lsl #2]
   11b18:	bl	11cec <po_lex_charset_close@@Base+0x1974>
   11b1c:	mov	w19, w0
   11b20:	cmn	w0, #0x1
   11b24:	b.ne	11ac8 <po_lex_charset_close@@Base+0x1750>  // b.any
   11b28:	b	11b78 <po_lex_charset_close@@Base+0x1800>
   11b2c:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   11b30:	ldr	x8, [x8, #3736]
   11b34:	adrp	x9, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11b38:	ldr	x19, [x9, #840]
   11b3c:	ldr	x20, [x21, #8]
   11b40:	ldr	x24, [x8]
   11b44:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   11b48:	add	x1, x1, #0x4da
   11b4c:	mov	w2, #0x5                   	// #5
   11b50:	mov	x0, xzr
   11b54:	bl	acd0 <dcgettext@plt>
   11b58:	mov	x6, x0
   11b5c:	mov	w0, #0x1                   	// #1
   11b60:	mov	x4, #0xffffffffffffffff    	// #-1
   11b64:	mov	x1, xzr
   11b68:	mov	x2, x19
   11b6c:	mov	x3, x20
   11b70:	mov	w5, wzr
   11b74:	blr	x24
   11b78:	ldr	x0, [x23, #872]
   11b7c:	ldr	x1, [x22, #888]
   11b80:	ldp	x20, x19, [sp, #80]
   11b84:	ldp	x22, x21, [sp, #64]
   11b88:	ldp	x24, x23, [sp, #48]
   11b8c:	ldp	x26, x25, [sp, #32]
   11b90:	ldr	x27, [sp, #16]
   11b94:	ldp	x29, x30, [sp], #96
   11b98:	b	11c08 <po_lex_charset_close@@Base+0x1890>
   11b9c:	sub	w9, w0, #0x30
   11ba0:	mov	w8, w0
   11ba4:	cmp	w9, #0xa
   11ba8:	mov	w0, wzr
   11bac:	b.cc	11bec <po_lex_charset_close@@Base+0x1874>  // b.lo, b.ul, b.last
   11bb0:	and	w9, w8, #0xffffffdf
   11bb4:	sub	w9, w9, #0x41
   11bb8:	cmp	w9, #0x1a
   11bbc:	b.cc	11bec <po_lex_charset_close@@Base+0x1874>  // b.lo, b.ul, b.last
   11bc0:	sub	w9, w8, #0x21
   11bc4:	cmp	w9, #0x3e
   11bc8:	mov	w0, wzr
   11bcc:	b.hi	11bf0 <po_lex_charset_close@@Base+0x1878>  // b.pmore
   11bd0:	mov	w10, #0x1                   	// #1
   11bd4:	lsl	x9, x10, x9
   11bd8:	mov	x10, #0x763d                	// #30269
   11bdc:	movk	x10, #0xc200, lsl #16
   11be0:	movk	x10, #0x6000, lsl #48
   11be4:	tst	x9, x10
   11be8:	b.eq	11bf0 <po_lex_charset_close@@Base+0x1878>  // b.none
   11bec:	ret
   11bf0:	cmp	w8, #0x7c
   11bf4:	b.eq	11bec <po_lex_charset_close@@Base+0x1874>  // b.none
   11bf8:	cmp	w8, #0x7e
   11bfc:	b.eq	11bec <po_lex_charset_close@@Base+0x1874>  // b.none
   11c00:	mov	w0, #0x1                   	// #1
   11c04:	ret
   11c08:	stp	x29, x30, [sp, #-64]!
   11c0c:	str	x23, [sp, #16]
   11c10:	stp	x22, x21, [sp, #32]
   11c14:	mov	x21, x0
   11c18:	add	x23, x1, x1, lsl #1
   11c1c:	mov	w0, #0x1                   	// #1
   11c20:	bfi	x0, x23, #1, #63
   11c24:	stp	x20, x19, [sp, #48]
   11c28:	mov	x29, sp
   11c2c:	mov	x19, x1
   11c30:	bl	a590 <xmalloc@plt>
   11c34:	mov	x20, x0
   11c38:	mov	x22, x0
   11c3c:	cbz	x19, 11c80 <po_lex_charset_close@@Base+0x1908>
   11c40:	mov	x22, x20
   11c44:	ldr	w1, [x21]
   11c48:	cmp	w1, #0x7f
   11c4c:	b.hi	11c5c <po_lex_charset_close@@Base+0x18e4>  // b.pmore
   11c50:	strb	w1, [x22]
   11c54:	mov	w0, #0x1                   	// #1
   11c58:	b	11c70 <po_lex_charset_close@@Base+0x18f8>
   11c5c:	mov	w2, #0x6                   	// #6
   11c60:	mov	x0, x22
   11c64:	bl	ae60 <u8_uctomb_aux@plt>
   11c68:	cmp	w0, #0x0
   11c6c:	b.le	11cac <po_lex_charset_close@@Base+0x1934>
   11c70:	add	x22, x22, w0, uxtw
   11c74:	subs	x19, x19, #0x1
   11c78:	add	x21, x21, #0x4
   11c7c:	b.ne	11c44 <po_lex_charset_close@@Base+0x18cc>  // b.any
   11c80:	lsl	x8, x23, #1
   11c84:	sub	x9, x22, x20
   11c88:	cmp	x9, x8
   11c8c:	strb	wzr, [x22]
   11c90:	b.hi	11ccc <po_lex_charset_close@@Base+0x1954>  // b.pmore
   11c94:	mov	x0, x20
   11c98:	ldp	x20, x19, [sp, #48]
   11c9c:	ldp	x22, x21, [sp, #32]
   11ca0:	ldr	x23, [sp, #16]
   11ca4:	ldp	x29, x30, [sp], #64
   11ca8:	ret
   11cac:	adrp	x0, 37000 <get_search_path@@Base+0xb4c>
   11cb0:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   11cb4:	adrp	x3, 37000 <get_search_path@@Base+0xb4c>
   11cb8:	add	x0, x0, #0x365
   11cbc:	add	x1, x1, #0x50d
   11cc0:	add	x3, x3, #0x520
   11cc4:	mov	w2, #0x15a                 	// #346
   11cc8:	bl	add0 <__assert_fail@plt>
   11ccc:	adrp	x0, 37000 <get_search_path@@Base+0xb4c>
   11cd0:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   11cd4:	adrp	x3, 37000 <get_search_path@@Base+0xb4c>
   11cd8:	add	x0, x0, #0x54a
   11cdc:	add	x1, x1, #0x50d
   11ce0:	add	x3, x3, #0x520
   11ce4:	mov	w2, #0x15e                 	// #350
   11ce8:	bl	add0 <__assert_fail@plt>
   11cec:	stp	x29, x30, [sp, #-96]!
   11cf0:	str	x27, [sp, #16]
   11cf4:	stp	x26, x25, [sp, #32]
   11cf8:	stp	x24, x23, [sp, #48]
   11cfc:	stp	x22, x21, [sp, #64]
   11d00:	stp	x20, x19, [sp, #80]
   11d04:	mov	x29, sp
   11d08:	bl	124e0 <po_lex_charset_close@@Base+0x2168>
   11d0c:	cmp	w0, #0x2f
   11d10:	b.ne	11f9c <po_lex_charset_close@@Base+0x1c24>  // b.any
   11d14:	bl	124e0 <po_lex_charset_close@@Base+0x2168>
   11d18:	cmp	w0, #0x29
   11d1c:	b.gt	11d48 <po_lex_charset_close@@Base+0x19d0>
   11d20:	cmn	w0, #0x1
   11d24:	b.eq	11df8 <po_lex_charset_close@@Base+0x1a80>  // b.none
   11d28:	cmp	w0, #0xa
   11d2c:	b.ne	11ddc <po_lex_charset_close@@Base+0x1a64>  // b.any
   11d30:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   11d34:	ldr	x8, [x8, #4000]
   11d38:	ldr	x9, [x8, #8]
   11d3c:	sub	x9, x9, #0x1
   11d40:	str	x9, [x8, #8]
   11d44:	b	11ddc <po_lex_charset_close@@Base+0x1a64>
   11d48:	cmp	w0, #0x2a
   11d4c:	b.eq	11e00 <po_lex_charset_close@@Base+0x1a88>  // b.none
   11d50:	cmp	w0, #0x2f
   11d54:	b.ne	11ddc <po_lex_charset_close@@Base+0x1a64>  // b.any
   11d58:	adrp	x20, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11d5c:	adrp	x21, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11d60:	adrp	x22, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11d64:	str	xzr, [x20, #896]
   11d68:	bl	124e0 <po_lex_charset_close@@Base+0x2168>
   11d6c:	cmn	w0, #0x1
   11d70:	b.eq	11f64 <po_lex_charset_close@@Base+0x1bec>  // b.none
   11d74:	mov	w19, w0
   11d78:	cmp	w0, #0xa
   11d7c:	b.eq	11f64 <po_lex_charset_close@@Base+0x1bec>  // b.none
   11d80:	ldr	x8, [x20, #896]
   11d84:	cbnz	x8, 11d98 <po_lex_charset_close@@Base+0x1a20>
   11d88:	cmp	w19, #0x9
   11d8c:	b.eq	11d68 <po_lex_charset_close@@Base+0x19f0>  // b.none
   11d90:	cmp	w19, #0x20
   11d94:	b.eq	11d68 <po_lex_charset_close@@Base+0x19f0>  // b.none
   11d98:	ldr	x9, [x21, #904]
   11d9c:	cmp	x8, x9
   11da0:	b.cs	11dac <po_lex_charset_close@@Base+0x1a34>  // b.hs, b.nlast
   11da4:	ldr	x0, [x22, #912]
   11da8:	b	11dcc <po_lex_charset_close@@Base+0x1a54>
   11dac:	ldr	x0, [x22, #912]
   11db0:	lsl	x8, x9, #1
   11db4:	add	x8, x8, #0xa
   11db8:	lsl	x1, x8, #2
   11dbc:	str	x8, [x21, #904]
   11dc0:	bl	a460 <xrealloc@plt>
   11dc4:	ldr	x8, [x20, #896]
   11dc8:	str	x0, [x22, #912]
   11dcc:	add	x9, x8, #0x1
   11dd0:	str	x9, [x20, #896]
   11dd4:	str	w19, [x0, x8, lsl #2]
   11dd8:	b	11d68 <po_lex_charset_close@@Base+0x19f0>
   11ddc:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11de0:	ldrsw	x9, [x8, #944]
   11de4:	adrp	x10, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11de8:	add	x10, x10, #0x3b4
   11dec:	add	w11, w9, #0x1
   11df0:	str	w0, [x10, x9, lsl #2]
   11df4:	str	w11, [x8, #944]
   11df8:	mov	w0, #0x2f                  	// #47
   11dfc:	b	11f9c <po_lex_charset_close@@Base+0x1c24>
   11e00:	mov	w19, wzr
   11e04:	adrp	x21, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11e08:	str	xzr, [x21, #896]
   11e0c:	mov	w25, w19
   11e10:	mov	w19, #0x1                   	// #1
   11e14:	bl	124e0 <po_lex_charset_close@@Base+0x2168>
   11e18:	cmp	w0, #0x2a
   11e1c:	b.eq	11e0c <po_lex_charset_close@@Base+0x1a94>  // b.none
   11e20:	cmn	w0, #0x1
   11e24:	b.eq	11e60 <po_lex_charset_close@@Base+0x1ae8>  // b.none
   11e28:	cmp	w0, #0xa
   11e2c:	b.ne	11e44 <po_lex_charset_close@@Base+0x1acc>  // b.any
   11e30:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   11e34:	ldr	x8, [x8, #4000]
   11e38:	ldr	x9, [x8, #8]
   11e3c:	sub	x9, x9, #0x1
   11e40:	str	x9, [x8, #8]
   11e44:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11e48:	ldrsw	x9, [x8, #944]
   11e4c:	adrp	x10, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11e50:	add	x10, x10, #0x3b4
   11e54:	add	w11, w9, #0x1
   11e58:	str	w11, [x8, #944]
   11e5c:	str	w0, [x10, x9, lsl #2]
   11e60:	bl	124e0 <po_lex_charset_close@@Base+0x2168>
   11e64:	cmn	w0, #0x1
   11e68:	b.eq	11f98 <po_lex_charset_close@@Base+0x1c20>  // b.none
   11e6c:	mov	w19, w0
   11e70:	mov	w24, #0x1                   	// #1
   11e74:	adrp	x22, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11e78:	adrp	x23, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11e7c:	mov	w20, #0x1                   	// #1
   11e80:	ldr	x8, [x21, #896]
   11e84:	cbz	x8, 11e9c <po_lex_charset_close@@Base+0x1b24>
   11e88:	ldr	x9, [x22, #904]
   11e8c:	cmp	x8, x9
   11e90:	b.cs	11eb8 <po_lex_charset_close@@Base+0x1b40>  // b.hs, b.nlast
   11e94:	ldr	x0, [x23, #912]
   11e98:	b	11ed8 <po_lex_charset_close@@Base+0x1b60>
   11e9c:	cmp	w19, #0x9
   11ea0:	mov	w26, wzr
   11ea4:	b.eq	11f14 <po_lex_charset_close@@Base+0x1b9c>  // b.none
   11ea8:	cmp	w19, #0x20
   11eac:	mov	w27, #0x1                   	// #1
   11eb0:	b.eq	11f18 <po_lex_charset_close@@Base+0x1ba0>  // b.none
   11eb4:	b	11e88 <po_lex_charset_close@@Base+0x1b10>
   11eb8:	ldr	x0, [x23, #912]
   11ebc:	lsl	x8, x9, #1
   11ec0:	add	x8, x8, #0xa
   11ec4:	lsl	x1, x8, #2
   11ec8:	str	x8, [x22, #904]
   11ecc:	bl	a460 <xrealloc@plt>
   11ed0:	ldr	x8, [x21, #896]
   11ed4:	str	x0, [x23, #912]
   11ed8:	add	x9, x8, #0x1
   11edc:	cmp	w19, #0x2a
   11ee0:	str	x9, [x21, #896]
   11ee4:	str	w19, [x0, x8, lsl #2]
   11ee8:	b.eq	11f00 <po_lex_charset_close@@Base+0x1b88>  // b.none
   11eec:	cmp	w19, #0x2f
   11ef0:	b.eq	11f0c <po_lex_charset_close@@Base+0x1b94>  // b.none
   11ef4:	cmp	w19, #0xa
   11ef8:	b.ne	11f10 <po_lex_charset_close@@Base+0x1b98>  // b.any
   11efc:	b	11f34 <po_lex_charset_close@@Base+0x1bbc>
   11f00:	add	x27, x20, #0x1
   11f04:	mov	w26, #0x1                   	// #1
   11f08:	b	11f18 <po_lex_charset_close@@Base+0x1ba0>
   11f0c:	tbnz	w25, #0, 11f7c <po_lex_charset_close@@Base+0x1c04>
   11f10:	mov	w26, wzr
   11f14:	mov	w27, #0x1                   	// #1
   11f18:	bl	124e0 <po_lex_charset_close@@Base+0x2168>
   11f1c:	mov	w19, w0
   11f20:	cmn	w0, #0x1
   11f24:	mov	x20, x27
   11f28:	mov	w25, w26
   11f2c:	b.ne	11e80 <po_lex_charset_close@@Base+0x1b08>  // b.any
   11f30:	b	11f98 <po_lex_charset_close@@Base+0x1c20>
   11f34:	mov	w0, #0x1                   	// #1
   11f38:	mov	w1, wzr
   11f3c:	bl	11fb8 <po_lex_charset_close@@Base+0x1c40>
   11f40:	str	xzr, [x21, #896]
   11f44:	bl	124e0 <po_lex_charset_close@@Base+0x2168>
   11f48:	mov	w19, w0
   11f4c:	mov	w24, wzr
   11f50:	mov	w25, wzr
   11f54:	cmn	w0, #0x1
   11f58:	mov	w0, #0x20                  	// #32
   11f5c:	b.ne	11e7c <po_lex_charset_close@@Base+0x1b04>  // b.any
   11f60:	b	11f9c <po_lex_charset_close@@Base+0x1c24>
   11f64:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11f68:	ldrb	w1, [x8, #853]
   11f6c:	mov	x0, xzr
   11f70:	bl	11fb8 <po_lex_charset_close@@Base+0x1c40>
   11f74:	mov	w0, #0xa                   	// #10
   11f78:	b	11f9c <po_lex_charset_close@@Base+0x1c24>
   11f7c:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11f80:	ldrb	w8, [x8, #852]
   11f84:	mov	x0, x20
   11f88:	cmp	w8, #0x0
   11f8c:	cset	w8, ne  // ne = any
   11f90:	and	w1, w24, w8
   11f94:	bl	11fb8 <po_lex_charset_close@@Base+0x1c40>
   11f98:	mov	w0, #0x20                  	// #32
   11f9c:	ldp	x20, x19, [sp, #80]
   11fa0:	ldp	x22, x21, [sp, #64]
   11fa4:	ldp	x24, x23, [sp, #48]
   11fa8:	ldp	x26, x25, [sp, #32]
   11fac:	ldr	x27, [sp, #16]
   11fb0:	ldp	x29, x30, [sp], #96
   11fb4:	ret
   11fb8:	sub	sp, sp, #0x70
   11fbc:	stp	x29, x30, [sp, #16]
   11fc0:	stp	x28, x27, [sp, #32]
   11fc4:	stp	x26, x25, [sp, #48]
   11fc8:	stp	x24, x23, [sp, #64]
   11fcc:	stp	x22, x21, [sp, #80]
   11fd0:	stp	x20, x19, [sp, #96]
   11fd4:	adrp	x19, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11fd8:	ldr	x8, [x19, #896]
   11fdc:	adrp	x20, 4e000 <formatstring_gfc_internal@@Base+0x10>
   11fe0:	add	x29, sp, #0x10
   11fe4:	subs	x8, x8, x0
   11fe8:	str	x8, [x19, #896]
   11fec:	b.eq	12290 <po_lex_charset_close@@Base+0x1f18>  // b.none
   11ff0:	ldr	x9, [x20, #912]
   11ff4:	sub	x10, x9, #0x4
   11ff8:	ldr	w11, [x10, x8, lsl #2]
   11ffc:	cmp	w11, #0x20
   12000:	b.eq	1200c <po_lex_charset_close@@Base+0x1c94>  // b.none
   12004:	cmp	w11, #0x9
   12008:	b.ne	1201c <po_lex_charset_close@@Base+0x1ca4>  // b.any
   1200c:	sub	x8, x8, #0x1
   12010:	str	x8, [x19, #896]
   12014:	cbnz	x8, 11ff8 <po_lex_charset_close@@Base+0x1c80>
   12018:	b	12290 <po_lex_charset_close@@Base+0x1f18>
   1201c:	cmp	x8, #0x3
   12020:	b.cc	12290 <po_lex_charset_close@@Base+0x1f18>  // b.lo, b.ul, b.last
   12024:	tbz	w1, #0, 12290 <po_lex_charset_close@@Base+0x1f18>
   12028:	ldr	w10, [x10, #4]
   1202c:	cmp	w10, #0x3d
   12030:	b.ne	12290 <po_lex_charset_close@@Base+0x1f18>  // b.any
   12034:	ldr	w10, [x9, #4]
   12038:	cmp	w10, #0x20
   1203c:	b.ne	12290 <po_lex_charset_close@@Base+0x1f18>  // b.any
   12040:	cmp	w11, #0x3b
   12044:	cset	w10, eq  // eq = none
   12048:	sub	x10, x8, x10
   1204c:	csetm	x11, eq  // eq = none
   12050:	cmp	x10, #0x2
   12054:	b.eq	12288 <po_lex_charset_close@@Base+0x1f10>  // b.none
   12058:	ldr	w12, [x9, #8]
   1205c:	cmp	w12, #0x22
   12060:	b.ne	12288 <po_lex_charset_close@@Base+0x1f10>  // b.any
   12064:	sub	x12, x10, #0x3
   12068:	adrp	x21, 4e000 <formatstring_gfc_internal@@Base+0x10>
   1206c:	str	xzr, [x21, #936]
   12070:	cbz	x12, 12288 <po_lex_charset_close@@Base+0x1f10>
   12074:	add	x8, x11, x8
   12078:	add	x23, x9, x10, lsl #2
   1207c:	add	x10, x9, #0xc
   12080:	add	x26, x9, x8, lsl #2
   12084:	mov	x1, xzr
   12088:	adrp	x25, 4e000 <formatstring_gfc_internal@@Base+0x10>
   1208c:	sub	x27, x26, #0xc
   12090:	adrp	x24, 4e000 <formatstring_gfc_internal@@Base+0x10>
   12094:	mov	x22, x10
   12098:	ldr	w28, [x22], #4
   1209c:	cmp	w28, #0x5c
   120a0:	b.eq	120b0 <po_lex_charset_close@@Base+0x1d38>  // b.none
   120a4:	cmp	w28, #0x22
   120a8:	b.ne	12204 <po_lex_charset_close@@Base+0x1e8c>  // b.any
   120ac:	b	12434 <po_lex_charset_close@@Base+0x20bc>
   120b0:	cmp	x22, x23
   120b4:	b.eq	12288 <po_lex_charset_close@@Base+0x1f10>  // b.none
   120b8:	ldr	w28, [x10, #4]
   120bc:	add	x22, x10, #0x8
   120c0:	and	w8, w28, #0xfffffff8
   120c4:	cmp	w8, #0x30
   120c8:	b.ne	12118 <po_lex_charset_close@@Base+0x1da0>  // b.any
   120cc:	cmp	x22, x23
   120d0:	sub	w28, w28, #0x30
   120d4:	b.eq	12200 <po_lex_charset_close@@Base+0x1e88>  // b.none
   120d8:	mov	x8, xzr
   120dc:	sub	x9, x27, x10
   120e0:	ldr	w10, [x22, x8]
   120e4:	and	w11, w10, #0xfffffff8
   120e8:	cmp	w11, #0x30
   120ec:	b.ne	121d4 <po_lex_charset_close@@Base+0x1e5c>  // b.any
   120f0:	add	w10, w10, w28, lsl #3
   120f4:	cmp	w8, #0x4
   120f8:	sub	w28, w10, #0x30
   120fc:	add	x10, x8, #0x4
   12100:	b.eq	12110 <po_lex_charset_close@@Base+0x1d98>  // b.none
   12104:	cmp	x9, x8
   12108:	mov	x8, x10
   1210c:	b.ne	120e0 <po_lex_charset_close@@Base+0x1d68>  // b.any
   12110:	add	x22, x22, x10
   12114:	b	12204 <po_lex_charset_close@@Base+0x1e8c>
   12118:	orr	w8, w28, #0x20
   1211c:	cmp	w8, #0x75
   12120:	b.ne	121a0 <po_lex_charset_close@@Base+0x1e28>  // b.any
   12124:	cmp	x22, x23
   12128:	b.eq	121fc <po_lex_charset_close@@Base+0x1e84>  // b.none
   1212c:	mov	w8, wzr
   12130:	mov	w28, wzr
   12134:	add	x9, x10, #0xc
   12138:	ldur	w10, [x9, #-4]
   1213c:	sub	w11, w10, #0x30
   12140:	cmp	w11, #0x9
   12144:	b.hi	12150 <po_lex_charset_close@@Base+0x1dd8>  // b.pmore
   12148:	add	w28, w11, w28, lsl #4
   1214c:	b	1217c <po_lex_charset_close@@Base+0x1e04>
   12150:	sub	w11, w10, #0x41
   12154:	cmp	w11, #0x5
   12158:	b.hi	12168 <po_lex_charset_close@@Base+0x1df0>  // b.pmore
   1215c:	add	w10, w10, w28, lsl #4
   12160:	sub	w28, w10, #0x37
   12164:	b	1217c <po_lex_charset_close@@Base+0x1e04>
   12168:	sub	w11, w10, #0x61
   1216c:	cmp	w11, #0x5
   12170:	b.hi	12258 <po_lex_charset_close@@Base+0x1ee0>  // b.pmore
   12174:	add	w10, w10, w28, lsl #4
   12178:	sub	w28, w10, #0x57
   1217c:	cmp	w8, #0x2
   12180:	add	x10, x9, #0x4
   12184:	b.hi	12198 <po_lex_charset_close@@Base+0x1e20>  // b.pmore
   12188:	cmp	x26, x9
   1218c:	add	w8, w8, #0x1
   12190:	mov	x9, x10
   12194:	b.ne	12138 <po_lex_charset_close@@Base+0x1dc0>  // b.any
   12198:	sub	x22, x10, #0x4
   1219c:	b	12204 <po_lex_charset_close@@Base+0x1e8c>
   121a0:	cmp	w28, #0x6d
   121a4:	b.le	121dc <po_lex_charset_close@@Base+0x1e64>
   121a8:	sub	w8, w28, #0x6e
   121ac:	cmp	w8, #0x8
   121b0:	b.hi	12204 <po_lex_charset_close@@Base+0x1e8c>  // b.pmore
   121b4:	adrp	x11, 37000 <get_search_path@@Base+0xb4c>
   121b8:	add	x11, x11, #0x43e
   121bc:	adr	x9, 121cc <po_lex_charset_close@@Base+0x1e54>
   121c0:	ldrb	w10, [x11, x8]
   121c4:	add	x9, x9, x10, lsl #2
   121c8:	br	x9
   121cc:	mov	w28, #0xa                   	// #10
   121d0:	b	12204 <po_lex_charset_close@@Base+0x1e8c>
   121d4:	add	x22, x22, x8
   121d8:	b	12204 <po_lex_charset_close@@Base+0x1e8c>
   121dc:	cmp	w28, #0x61
   121e0:	b.eq	12278 <po_lex_charset_close@@Base+0x1f00>  // b.none
   121e4:	cmp	w28, #0x62
   121e8:	b.eq	12280 <po_lex_charset_close@@Base+0x1f08>  // b.none
   121ec:	cmp	w28, #0x66
   121f0:	b.ne	12204 <po_lex_charset_close@@Base+0x1e8c>  // b.any
   121f4:	mov	w28, #0xc                   	// #12
   121f8:	b	12204 <po_lex_charset_close@@Base+0x1e8c>
   121fc:	mov	w28, wzr
   12200:	mov	x22, x23
   12204:	ldr	x8, [x25, #928]
   12208:	cmp	x1, x8
   1220c:	b.cs	12218 <po_lex_charset_close@@Base+0x1ea0>  // b.hs, b.nlast
   12210:	ldr	x0, [x24, #920]
   12214:	b	12238 <po_lex_charset_close@@Base+0x1ec0>
   12218:	ldr	x0, [x24, #920]
   1221c:	lsl	x8, x8, #1
   12220:	add	x8, x8, #0xa
   12224:	lsl	x1, x8, #2
   12228:	str	x8, [x25, #928]
   1222c:	bl	a460 <xrealloc@plt>
   12230:	ldr	x1, [x21, #936]
   12234:	str	x0, [x24, #920]
   12238:	add	x8, x1, #0x1
   1223c:	cmp	x22, x23
   12240:	str	x8, [x21, #936]
   12244:	str	w28, [x0, x1, lsl #2]
   12248:	mov	x1, x8
   1224c:	mov	x10, x22
   12250:	b.ne	12098 <po_lex_charset_close@@Base+0x1d20>  // b.any
   12254:	b	12288 <po_lex_charset_close@@Base+0x1f10>
   12258:	sub	x22, x9, #0x4
   1225c:	b	12204 <po_lex_charset_close@@Base+0x1e8c>
   12260:	mov	w28, #0xd                   	// #13
   12264:	b	12204 <po_lex_charset_close@@Base+0x1e8c>
   12268:	mov	w28, #0x9                   	// #9
   1226c:	b	12204 <po_lex_charset_close@@Base+0x1e8c>
   12270:	mov	w28, #0xb                   	// #11
   12274:	b	12204 <po_lex_charset_close@@Base+0x1e8c>
   12278:	mov	w28, #0x7                   	// #7
   1227c:	b	12204 <po_lex_charset_close@@Base+0x1e8c>
   12280:	mov	w28, #0x8                   	// #8
   12284:	b	12204 <po_lex_charset_close@@Base+0x1e8c>
   12288:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   1228c:	str	xzr, [x8, #856]
   12290:	ldr	x0, [x20, #912]
   12294:	ldr	x1, [x19, #896]
   12298:	bl	11c08 <po_lex_charset_close@@Base+0x1890>
   1229c:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   122a0:	add	x1, x1, #0x568
   122a4:	mov	x19, x0
   122a8:	bl	a8d0 <strcmp@plt>
   122ac:	cbz	w0, 12358 <po_lex_charset_close@@Base+0x1fe0>
   122b0:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   122b4:	add	x1, x1, #0x57b
   122b8:	mov	x0, x19
   122bc:	bl	a8d0 <strcmp@plt>
   122c0:	cbz	w0, 12374 <po_lex_charset_close@@Base+0x1ffc>
   122c4:	mov	x0, x19
   122c8:	bl	a0d0 <strlen@plt>
   122cc:	cmp	x0, #0x6
   122d0:	b.cc	1234c <po_lex_charset_close@@Base+0x1fd4>  // b.lo, b.ul, b.last
   122d4:	ldr	w8, [x19]
   122d8:	ldrh	w9, [x19, #4]
   122dc:	mov	w10, #0x6c46                	// #27718
   122e0:	movk	w10, #0x6761, lsl #16
   122e4:	mov	w11, #0x203a                	// #8250
   122e8:	eor	w8, w8, w10
   122ec:	eor	w9, w9, w11
   122f0:	orr	w8, w8, w9
   122f4:	cbz	w8, 123a0 <po_lex_charset_close@@Base+0x2028>
   122f8:	cmp	x0, #0x9
   122fc:	b.cc	12328 <po_lex_charset_close@@Base+0x1fb0>  // b.lo, b.ul, b.last
   12300:	ldr	x8, [x19]
   12304:	ldrb	w9, [x19, #8]
   12308:	mov	x10, #0x6f43                	// #28483
   1230c:	movk	x10, #0x6d6d, lsl #16
   12310:	movk	x10, #0x6e65, lsl #32
   12314:	movk	x10, #0x3a74, lsl #48
   12318:	eor	x8, x8, x10
   1231c:	eor	x9, x9, #0x20
   12320:	orr	x8, x8, x9
   12324:	cbz	x8, 12410 <po_lex_charset_close@@Base+0x2098>
   12328:	ldr	w8, [x19]
   1232c:	ldrh	w9, [x19, #4]
   12330:	mov	w10, #0x6946                	// #26950
   12334:	movk	w10, #0x656c, lsl #16
   12338:	mov	w11, #0x203a                	// #8250
   1233c:	eor	w8, w8, w10
   12340:	eor	w9, w9, w11
   12344:	orr	w8, w8, w9
   12348:	cbz	w8, 123c4 <po_lex_charset_close@@Base+0x204c>
   1234c:	mov	x0, x19
   12350:	bl	a9e0 <po_callback_comment@plt>
   12354:	b	12380 <po_lex_charset_close@@Base+0x2008>
   12358:	adrp	x0, 37000 <get_search_path@@Base+0xb4c>
   1235c:	add	x0, x0, #0xd94
   12360:	bl	1244c <po_lex_charset_close@@Base+0x20d4>
   12364:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   12368:	mov	w9, #0x1                   	// #1
   1236c:	strb	w9, [x8, #855]
   12370:	b	12380 <po_lex_charset_close@@Base+0x2008>
   12374:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   12378:	mov	w9, #0x1                   	// #1
   1237c:	strb	w9, [x8, #854]
   12380:	ldp	x20, x19, [sp, #96]
   12384:	ldp	x22, x21, [sp, #80]
   12388:	ldp	x24, x23, [sp, #64]
   1238c:	ldp	x26, x25, [sp, #48]
   12390:	ldp	x28, x27, [sp, #32]
   12394:	ldp	x29, x30, [sp, #16]
   12398:	add	sp, sp, #0x70
   1239c:	ret
   123a0:	add	x0, x19, #0x6
   123a4:	ldp	x20, x19, [sp, #96]
   123a8:	ldp	x22, x21, [sp, #80]
   123ac:	ldp	x24, x23, [sp, #64]
   123b0:	ldp	x26, x25, [sp, #48]
   123b4:	ldp	x28, x27, [sp, #32]
   123b8:	ldp	x29, x30, [sp, #16]
   123bc:	add	sp, sp, #0x70
   123c0:	b	1244c <po_lex_charset_close@@Base+0x20d4>
   123c4:	add	x20, x19, #0x6
   123c8:	mov	w1, #0x3a                  	// #58
   123cc:	mov	x0, x20
   123d0:	bl	a750 <strrchr@plt>
   123d4:	cbz	x0, 1234c <po_lex_charset_close@@Base+0x1fd4>
   123d8:	mov	x21, x0
   123dc:	ldrb	w8, [x0, #1]!
   123e0:	cbz	w8, 1234c <po_lex_charset_close@@Base+0x1fd4>
   123e4:	add	x1, sp, #0x8
   123e8:	mov	w2, #0xa                   	// #10
   123ec:	bl	a0c0 <strtoul@plt>
   123f0:	ldr	x8, [sp, #8]
   123f4:	ldrb	w8, [x8]
   123f8:	cbnz	w8, 1234c <po_lex_charset_close@@Base+0x1fd4>
   123fc:	mov	x1, x0
   12400:	mov	x0, x20
   12404:	strb	wzr, [x21]
   12408:	bl	a3d0 <po_callback_comment_filepos@plt>
   1240c:	b	12380 <po_lex_charset_close@@Base+0x2008>
   12410:	add	x0, x19, #0x9
   12414:	ldp	x20, x19, [sp, #96]
   12418:	ldp	x22, x21, [sp, #80]
   1241c:	ldp	x24, x23, [sp, #64]
   12420:	ldp	x26, x25, [sp, #48]
   12424:	ldp	x28, x27, [sp, #32]
   12428:	ldp	x29, x30, [sp, #16]
   1242c:	add	sp, sp, #0x70
   12430:	b	ad50 <po_callback_comment_dot@plt>
   12434:	ldr	x0, [x24, #920]
   12438:	bl	11c08 <po_lex_charset_close@@Base+0x1890>
   1243c:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   12440:	str	x0, [x8, #856]
   12444:	cbnz	x0, 12380 <po_lex_charset_close@@Base+0x2008>
   12448:	b	12290 <po_lex_charset_close@@Base+0x1f18>
   1244c:	stp	x29, x30, [sp, #-48]!
   12450:	stp	x22, x21, [sp, #16]
   12454:	stp	x20, x19, [sp, #32]
   12458:	adrp	x22, 4e000 <formatstring_gfc_internal@@Base+0x10>
   1245c:	ldr	x20, [x22, #864]
   12460:	mov	x19, x0
   12464:	mov	x29, sp
   12468:	cbz	x20, 124c4 <po_lex_charset_close@@Base+0x214c>
   1246c:	mov	x0, x20
   12470:	bl	a0d0 <strlen@plt>
   12474:	mov	x21, x0
   12478:	mov	x0, x19
   1247c:	bl	a0d0 <strlen@plt>
   12480:	add	x8, x21, x0
   12484:	add	x1, x8, #0x3
   12488:	mov	x0, x20
   1248c:	bl	a460 <xrealloc@plt>
   12490:	mov	x20, x0
   12494:	str	x0, [x22, #864]
   12498:	bl	a0d0 <strlen@plt>
   1249c:	add	x8, x20, x0
   124a0:	mov	w9, #0x202c                	// #8236
   124a4:	strh	w9, [x8]
   124a8:	strb	wzr, [x8, #2]
   124ac:	mov	x0, x20
   124b0:	mov	x1, x19
   124b4:	ldp	x20, x19, [sp, #32]
   124b8:	ldp	x22, x21, [sp, #16]
   124bc:	ldp	x29, x30, [sp], #48
   124c0:	b	a510 <strcat@plt>
   124c4:	mov	x0, x19
   124c8:	bl	a5a0 <xstrdup@plt>
   124cc:	str	x0, [x22, #864]
   124d0:	ldp	x20, x19, [sp, #32]
   124d4:	ldp	x22, x21, [sp, #16]
   124d8:	ldp	x29, x30, [sp], #48
   124dc:	ret
   124e0:	sub	sp, sp, #0x40
   124e4:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   124e8:	ldr	w9, [x8, #944]
   124ec:	stp	x29, x30, [sp, #16]
   124f0:	str	x21, [sp, #32]
   124f4:	stp	x20, x19, [sp, #48]
   124f8:	add	x29, sp, #0x10
   124fc:	cbz	w9, 12544 <po_lex_charset_close@@Base+0x21cc>
   12500:	adrp	x10, 4e000 <formatstring_gfc_internal@@Base+0x10>
   12504:	sub	w9, w9, #0x1
   12508:	add	x10, x10, #0x3b4
   1250c:	ldr	w0, [x10, w9, sxtw #2]
   12510:	str	w9, [x8, #944]
   12514:	cmp	w0, #0xa
   12518:	b.ne	12530 <po_lex_charset_close@@Base+0x21b8>  // b.any
   1251c:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   12520:	ldr	x8, [x8, #4000]
   12524:	ldr	x9, [x8, #8]
   12528:	add	x9, x9, #0x1
   1252c:	str	x9, [x8, #8]
   12530:	ldp	x20, x19, [sp, #48]
   12534:	ldr	x21, [sp, #32]
   12538:	ldp	x29, x30, [sp, #16]
   1253c:	add	sp, sp, #0x40
   12540:	ret
   12544:	adrp	x21, 4e000 <formatstring_gfc_internal@@Base+0x10>
   12548:	ldr	w8, [x21, #848]
   1254c:	cmp	w8, #0x4
   12550:	b.hi	127bc <po_lex_charset_close@@Base+0x2444>  // b.pmore
   12554:	adrp	x9, 37000 <get_search_path@@Base+0xb4c>
   12558:	add	x9, x9, #0x447
   1255c:	adr	x10, 1256c <po_lex_charset_close@@Base+0x21f4>
   12560:	ldrb	w11, [x9, x8]
   12564:	add	x10, x10, x11, lsl #2
   12568:	br	x10
   1256c:	bl	127c0 <po_lex_charset_close@@Base+0x2448>
   12570:	cmn	w0, #0x1
   12574:	b.eq	12530 <po_lex_charset_close@@Base+0x21b8>  // b.none
   12578:	mov	w19, w0
   1257c:	bl	127c0 <po_lex_charset_close@@Base+0x2448>
   12580:	cmn	w0, #0x1
   12584:	b.eq	125c8 <po_lex_charset_close@@Base+0x2250>  // b.none
   12588:	mov	w20, w0
   1258c:	cmp	w19, #0xfe
   12590:	b.ne	125f8 <po_lex_charset_close@@Base+0x2280>  // b.any
   12594:	cmp	w20, #0xff
   12598:	b.ne	125f8 <po_lex_charset_close@@Base+0x2280>  // b.any
   1259c:	mov	w8, #0x1                   	// #1
   125a0:	str	w8, [x21, #848]
   125a4:	bl	127c0 <po_lex_charset_close@@Base+0x2448>
   125a8:	cmn	w0, #0x1
   125ac:	b.eq	12530 <po_lex_charset_close@@Base+0x21b8>  // b.none
   125b0:	mov	w19, w0
   125b4:	bl	127c0 <po_lex_charset_close@@Base+0x2448>
   125b8:	cmn	w0, #0x1
   125bc:	b.eq	12530 <po_lex_charset_close@@Base+0x21b8>  // b.none
   125c0:	add	w0, w0, w19, lsl #8
   125c4:	b	12514 <po_lex_charset_close@@Base+0x219c>
   125c8:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   125cc:	ldr	w8, [x8, #964]
   125d0:	add	w9, w8, #0x1
   125d4:	adrp	x11, 4e000 <formatstring_gfc_internal@@Base+0x10>
   125d8:	adrp	x10, 4e000 <formatstring_gfc_internal@@Base+0x10>
   125dc:	add	x11, x11, #0x3c8
   125e0:	mov	w12, #0x4                   	// #4
   125e4:	str	w9, [x10, #964]
   125e8:	strb	w19, [x11, w8, sxtw]
   125ec:	str	w12, [x21, #848]
   125f0:	bl	127c0 <po_lex_charset_close@@Base+0x2448>
   125f4:	b	12514 <po_lex_charset_close@@Base+0x219c>
   125f8:	cmp	w19, #0xff
   125fc:	b.ne	12634 <po_lex_charset_close@@Base+0x22bc>  // b.any
   12600:	cmp	w20, #0xfe
   12604:	b.ne	12634 <po_lex_charset_close@@Base+0x22bc>  // b.any
   12608:	mov	w8, #0x2                   	// #2
   1260c:	str	w8, [x21, #848]
   12610:	bl	127c0 <po_lex_charset_close@@Base+0x2448>
   12614:	cmn	w0, #0x1
   12618:	b.eq	12530 <po_lex_charset_close@@Base+0x21b8>  // b.none
   1261c:	mov	w19, w0
   12620:	bl	127c0 <po_lex_charset_close@@Base+0x2448>
   12624:	cmn	w0, #0x1
   12628:	b.eq	12530 <po_lex_charset_close@@Base+0x21b8>  // b.none
   1262c:	add	w0, w19, w0, lsl #8
   12630:	b	12514 <po_lex_charset_close@@Base+0x219c>
   12634:	bl	127c0 <po_lex_charset_close@@Base+0x2448>
   12638:	cmn	w0, #0x1
   1263c:	b.eq	12774 <po_lex_charset_close@@Base+0x23fc>  // b.none
   12640:	cmp	w19, #0xef
   12644:	b.ne	12794 <po_lex_charset_close@@Base+0x241c>  // b.any
   12648:	cmp	w20, #0xbb
   1264c:	b.ne	12794 <po_lex_charset_close@@Base+0x241c>  // b.any
   12650:	cmp	w0, #0xbf
   12654:	b.ne	12794 <po_lex_charset_close@@Base+0x241c>  // b.any
   12658:	mov	w8, #0x3                   	// #3
   1265c:	str	w8, [x21, #848]
   12660:	bl	127c0 <po_lex_charset_close@@Base+0x2448>
   12664:	cmn	w0, #0x1
   12668:	b.eq	12514 <po_lex_charset_close@@Base+0x219c>  // b.none
   1266c:	mvn	w8, w0
   12670:	mov	w19, w0
   12674:	tst	w8, #0xc0
   12678:	strb	w0, [x29, #24]
   1267c:	b.ne	12748 <po_lex_charset_close@@Base+0x23d0>  // b.any
   12680:	bl	127c0 <po_lex_charset_close@@Base+0x2448>
   12684:	cmn	w0, #0x1
   12688:	b.eq	12514 <po_lex_charset_close@@Base+0x219c>  // b.none
   1268c:	and	w8, w19, #0xff
   12690:	cmp	w8, #0xe0
   12694:	mov	w2, #0x2                   	// #2
   12698:	strb	w0, [x29, #25]
   1269c:	b.cc	1274c <po_lex_charset_close@@Base+0x23d4>  // b.lo, b.ul, b.last
   126a0:	and	w8, w0, #0xc0
   126a4:	cmp	w8, #0x80
   126a8:	b.ne	1274c <po_lex_charset_close@@Base+0x23d4>  // b.any
   126ac:	bl	127c0 <po_lex_charset_close@@Base+0x2448>
   126b0:	cmn	w0, #0x1
   126b4:	b.eq	12514 <po_lex_charset_close@@Base+0x219c>  // b.none
   126b8:	and	w8, w19, #0xff
   126bc:	cmp	w8, #0xf0
   126c0:	mov	w2, #0x3                   	// #3
   126c4:	strb	w0, [x29, #26]
   126c8:	b.cc	12760 <po_lex_charset_close@@Base+0x23e8>  // b.lo, b.ul, b.last
   126cc:	and	w8, w0, #0xc0
   126d0:	cmp	w8, #0x80
   126d4:	b.ne	12760 <po_lex_charset_close@@Base+0x23e8>  // b.any
   126d8:	bl	127c0 <po_lex_charset_close@@Base+0x2448>
   126dc:	cmn	w0, #0x1
   126e0:	b.eq	12514 <po_lex_charset_close@@Base+0x219c>  // b.none
   126e4:	and	w8, w19, #0xff
   126e8:	cmp	w8, #0xf8
   126ec:	mov	w2, #0x4                   	// #4
   126f0:	strb	w0, [x29, #27]
   126f4:	b.cc	12760 <po_lex_charset_close@@Base+0x23e8>  // b.lo, b.ul, b.last
   126f8:	and	w8, w0, #0xc0
   126fc:	cmp	w8, #0x80
   12700:	b.ne	12760 <po_lex_charset_close@@Base+0x23e8>  // b.any
   12704:	bl	127c0 <po_lex_charset_close@@Base+0x2448>
   12708:	cmn	w0, #0x1
   1270c:	b.eq	12514 <po_lex_charset_close@@Base+0x219c>  // b.none
   12710:	and	w8, w19, #0xff
   12714:	cmp	w8, #0xfc
   12718:	mov	w2, #0x5                   	// #5
   1271c:	strb	w0, [x29, #28]
   12720:	b.cc	12760 <po_lex_charset_close@@Base+0x23e8>  // b.lo, b.ul, b.last
   12724:	and	w8, w0, #0xc0
   12728:	cmp	w8, #0x80
   1272c:	b.ne	12760 <po_lex_charset_close@@Base+0x23e8>  // b.any
   12730:	bl	127c0 <po_lex_charset_close@@Base+0x2448>
   12734:	cmn	w0, #0x1
   12738:	b.eq	12514 <po_lex_charset_close@@Base+0x219c>  // b.none
   1273c:	mov	w2, #0x6                   	// #6
   12740:	strb	w0, [x29, #29]
   12744:	b	12760 <po_lex_charset_close@@Base+0x23e8>
   12748:	mov	w2, #0x1                   	// #1
   1274c:	sxtb	w8, w19
   12750:	tbnz	w8, #31, 12760 <po_lex_charset_close@@Base+0x23e8>
   12754:	and	w0, w19, #0xff
   12758:	stur	w0, [x29, #-4]
   1275c:	b	12514 <po_lex_charset_close@@Base+0x219c>
   12760:	sub	x0, x29, #0x4
   12764:	add	x1, x29, #0x18
   12768:	bl	a820 <u8_mbtouc_aux@plt>
   1276c:	ldur	w0, [x29, #-4]
   12770:	b	12514 <po_lex_charset_close@@Base+0x219c>
   12774:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   12778:	ldrsw	x9, [x8, #964]
   1277c:	adrp	x10, 4e000 <formatstring_gfc_internal@@Base+0x10>
   12780:	add	x10, x10, #0x3c8
   12784:	add	w8, w9, #0x1
   12788:	strb	w20, [x10, x9]
   1278c:	add	w9, w9, #0x2
   12790:	b	125d4 <po_lex_charset_close@@Base+0x225c>
   12794:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   12798:	ldrsw	x9, [x8, #964]
   1279c:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   127a0:	add	x8, x8, #0x3c8
   127a4:	add	x10, x8, x9
   127a8:	add	w8, w9, #0x2
   127ac:	add	w9, w9, #0x3
   127b0:	strb	w0, [x10]
   127b4:	strb	w20, [x10, #1]
   127b8:	b	125d4 <po_lex_charset_close@@Base+0x225c>
   127bc:	bl	a7e0 <abort@plt>
   127c0:	stp	x29, x30, [sp, #-32]!
   127c4:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   127c8:	ldrsw	x9, [x8, #964]
   127cc:	stp	x20, x19, [sp, #16]
   127d0:	mov	x29, sp
   127d4:	cbz	w9, 127f0 <po_lex_charset_close@@Base+0x2478>
   127d8:	adrp	x10, 4e000 <formatstring_gfc_internal@@Base+0x10>
   127dc:	sub	x9, x9, #0x1
   127e0:	add	x10, x10, #0x3c8
   127e4:	ldrb	w0, [x10, x9]
   127e8:	str	w9, [x8, #964]
   127ec:	b	12884 <po_lex_charset_close@@Base+0x250c>
   127f0:	adrp	x19, 4e000 <formatstring_gfc_internal@@Base+0x10>
   127f4:	ldr	x0, [x19, #832]
   127f8:	bl	a6e0 <getc@plt>
   127fc:	cmn	w0, #0x1
   12800:	b.ne	12884 <po_lex_charset_close@@Base+0x250c>  // b.any
   12804:	ldr	x0, [x19, #832]
   12808:	bl	af30 <ferror@plt>
   1280c:	cbz	w0, 12880 <po_lex_charset_close@@Base+0x2508>
   12810:	bl	ade0 <__errno_location@plt>
   12814:	ldr	w0, [x0]
   12818:	bl	a720 <strerror@plt>
   1281c:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   12820:	ldr	x8, [x8, #3736]
   12824:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
   12828:	mov	x19, x0
   1282c:	add	x1, x1, #0xb9b
   12830:	ldr	x20, [x8]
   12834:	mov	w2, #0x5                   	// #5
   12838:	mov	x0, xzr
   1283c:	bl	acd0 <dcgettext@plt>
   12840:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   12844:	ldr	x1, [x8, #840]
   12848:	bl	aa20 <xasprintf@plt>
   1284c:	mov	x1, x0
   12850:	adrp	x0, 3b000 <plural_table_size@@Base+0x1c00>
   12854:	add	x0, x0, #0x2a7
   12858:	mov	x2, x19
   1285c:	bl	aa20 <xasprintf@plt>
   12860:	mov	x6, x0
   12864:	mov	w0, #0x2                   	// #2
   12868:	mov	x1, xzr
   1286c:	mov	x2, xzr
   12870:	mov	x3, xzr
   12874:	mov	x4, xzr
   12878:	mov	w5, wzr
   1287c:	blr	x20
   12880:	mov	w0, #0xffffffff            	// #-1
   12884:	ldp	x20, x19, [sp, #16]
   12888:	ldp	x29, x30, [sp], #32
   1288c:	ret

0000000000012890 <open_catalog_file@@Base>:
   12890:	stp	x29, x30, [sp, #-96]!
   12894:	stp	x20, x19, [sp, #80]
   12898:	mov	x19, x1
   1289c:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
   128a0:	add	x1, x1, #0x9b8
   128a4:	stp	x28, x27, [sp, #16]
   128a8:	stp	x26, x25, [sp, #32]
   128ac:	stp	x24, x23, [sp, #48]
   128b0:	stp	x22, x21, [sp, #64]
   128b4:	mov	x29, sp
   128b8:	mov	w20, w2
   128bc:	mov	x21, x0
   128c0:	bl	a8d0 <strcmp@plt>
   128c4:	cbz	w0, 12950 <open_catalog_file@@Base+0xc0>
   128c8:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   128cc:	add	x1, x1, #0x5be
   128d0:	mov	x0, x21
   128d4:	bl	a8d0 <strcmp@plt>
   128d8:	cbz	w0, 12950 <open_catalog_file@@Base+0xc0>
   128dc:	ldrb	w8, [x21]
   128e0:	cmp	w8, #0x2f
   128e4:	b.ne	12a0c <open_catalog_file@@Base+0x17c>  // b.any
   128e8:	adrp	x27, 4c000 <plural_table_size@@Base+0x12c00>
   128ec:	adrp	x23, 37000 <get_search_path@@Base+0xb4c>
   128f0:	adrp	x24, 37000 <get_search_path@@Base+0xb4c>
   128f4:	mov	x26, xzr
   128f8:	add	x27, x27, #0xa78
   128fc:	add	x23, x23, #0x1a2
   12900:	add	x24, x24, #0x95d
   12904:	ldr	x2, [x27, x26]
   12908:	mov	x0, x23
   1290c:	mov	x1, x21
   12910:	bl	ae50 <xconcatenated_filename@plt>
   12914:	mov	x1, x24
   12918:	mov	x25, x0
   1291c:	bl	a3e0 <fopen@plt>
   12920:	mov	x22, x0
   12924:	cbnz	x0, 12ab0 <open_catalog_file@@Base+0x220>
   12928:	bl	ade0 <__errno_location@plt>
   1292c:	ldr	w8, [x0]
   12930:	cmp	w8, #0x2
   12934:	b.ne	12ab0 <open_catalog_file@@Base+0x220>  // b.any
   12938:	mov	x0, x25
   1293c:	bl	aa00 <free@plt>
   12940:	add	x26, x26, #0x8
   12944:	cmp	x26, #0x18
   12948:	b.ne	12904 <open_catalog_file@@Base+0x74>  // b.any
   1294c:	b	12a90 <open_catalog_file@@Base+0x200>
   12950:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   12954:	add	x1, x1, #0x5c9
   12958:	mov	w2, #0x5                   	// #5
   1295c:	mov	x0, xzr
   12960:	bl	acd0 <dcgettext@plt>
   12964:	bl	a5a0 <xstrdup@plt>
   12968:	str	x0, [x19]
   1296c:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   12970:	ldr	x8, [x8, #3896]
   12974:	ldr	x22, [x8]
   12978:	cbnz	x22, 129ec <open_catalog_file@@Base+0x15c>
   1297c:	tbz	w20, #0, 129ec <open_catalog_file@@Base+0x15c>
   12980:	bl	ade0 <__errno_location@plt>
   12984:	ldr	w0, [x0]
   12988:	bl	a720 <strerror@plt>
   1298c:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   12990:	ldr	x8, [x8, #3736]
   12994:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   12998:	mov	x20, x0
   1299c:	add	x1, x1, #0x595
   129a0:	ldr	x21, [x8]
   129a4:	mov	w2, #0x5                   	// #5
   129a8:	mov	x0, xzr
   129ac:	bl	acd0 <dcgettext@plt>
   129b0:	ldr	x1, [x19]
   129b4:	bl	aa20 <xasprintf@plt>
   129b8:	mov	x1, x0
   129bc:	adrp	x0, 3b000 <plural_table_size@@Base+0x1c00>
   129c0:	add	x0, x0, #0x2a7
   129c4:	mov	x2, x20
   129c8:	bl	aa20 <xasprintf@plt>
   129cc:	mov	x6, x0
   129d0:	mov	w0, #0x2                   	// #2
   129d4:	mov	x1, xzr
   129d8:	mov	x2, xzr
   129dc:	mov	x3, xzr
   129e0:	mov	x4, xzr
   129e4:	mov	w5, wzr
   129e8:	blr	x21
   129ec:	mov	x0, x22
   129f0:	ldp	x20, x19, [sp, #80]
   129f4:	ldp	x22, x21, [sp, #64]
   129f8:	ldp	x24, x23, [sp, #48]
   129fc:	ldp	x26, x25, [sp, #32]
   12a00:	ldp	x28, x27, [sp, #16]
   12a04:	ldp	x29, x30, [sp], #96
   12a08:	ret
   12a0c:	mov	w0, wzr
   12a10:	bl	ac20 <dir_list_nth@plt>
   12a14:	cbz	x0, 12a90 <open_catalog_file@@Base+0x200>
   12a18:	adrp	x27, 4c000 <plural_table_size@@Base+0x12c00>
   12a1c:	adrp	x25, 37000 <get_search_path@@Base+0xb4c>
   12a20:	mov	x24, x0
   12a24:	mov	w23, wzr
   12a28:	add	x27, x27, #0xa78
   12a2c:	add	x25, x25, #0x95d
   12a30:	mov	x28, xzr
   12a34:	ldr	x2, [x27, x28]
   12a38:	mov	x0, x24
   12a3c:	mov	x1, x21
   12a40:	bl	ae50 <xconcatenated_filename@plt>
   12a44:	mov	x1, x25
   12a48:	mov	x26, x0
   12a4c:	bl	a3e0 <fopen@plt>
   12a50:	mov	x22, x0
   12a54:	cbnz	x0, 12ab8 <open_catalog_file@@Base+0x228>
   12a58:	bl	ade0 <__errno_location@plt>
   12a5c:	ldr	w8, [x0]
   12a60:	cmp	w8, #0x2
   12a64:	b.ne	12ab8 <open_catalog_file@@Base+0x228>  // b.any
   12a68:	mov	x0, x26
   12a6c:	bl	aa00 <free@plt>
   12a70:	add	x28, x28, #0x8
   12a74:	cmp	x28, #0x18
   12a78:	b.ne	12a34 <open_catalog_file@@Base+0x1a4>  // b.any
   12a7c:	add	w23, w23, #0x1
   12a80:	mov	w0, w23
   12a84:	bl	ac20 <dir_list_nth@plt>
   12a88:	mov	x24, x0
   12a8c:	cbnz	x0, 12a30 <open_catalog_file@@Base+0x1a0>
   12a90:	mov	x0, x21
   12a94:	bl	a5a0 <xstrdup@plt>
   12a98:	str	x0, [x19]
   12a9c:	bl	ade0 <__errno_location@plt>
   12aa0:	mov	x22, xzr
   12aa4:	mov	w8, #0x2                   	// #2
   12aa8:	str	w8, [x0]
   12aac:	b	12978 <open_catalog_file@@Base+0xe8>
   12ab0:	str	x25, [x19]
   12ab4:	b	12978 <open_catalog_file@@Base+0xe8>
   12ab8:	str	x26, [x19]
   12abc:	b	12978 <open_catalog_file@@Base+0xe8>

0000000000012ac0 <dir_list_append@@Base>:
   12ac0:	stp	x29, x30, [sp, #-32]!
   12ac4:	stp	x20, x19, [sp, #16]
   12ac8:	adrp	x20, 4e000 <formatstring_gfc_internal@@Base+0x10>
   12acc:	ldr	x8, [x20, #976]
   12ad0:	mov	x19, x0
   12ad4:	mov	x29, sp
   12ad8:	cbnz	x8, 12ae8 <dir_list_append@@Base+0x28>
   12adc:	bl	a350 <string_list_alloc@plt>
   12ae0:	mov	x8, x0
   12ae4:	str	x0, [x20, #976]
   12ae8:	mov	x1, x19
   12aec:	ldp	x20, x19, [sp, #16]
   12af0:	mov	x0, x8
   12af4:	ldp	x29, x30, [sp], #32
   12af8:	b	a6d0 <string_list_append_unique@plt>

0000000000012afc <dir_list_nth@@Base>:
   12afc:	stp	x29, x30, [sp, #-32]!
   12b00:	stp	x20, x19, [sp, #16]
   12b04:	adrp	x20, 4e000 <formatstring_gfc_internal@@Base+0x10>
   12b08:	ldr	x8, [x20, #976]
   12b0c:	mov	w19, w0
   12b10:	mov	x29, sp
   12b14:	cbz	x8, 12b20 <dir_list_nth@@Base+0x24>
   12b18:	tbz	w19, #31, 12b30 <dir_list_nth@@Base+0x34>
   12b1c:	b	12b50 <dir_list_nth@@Base+0x54>
   12b20:	adrp	x0, 3a000 <plural_table_size@@Base+0xc00>
   12b24:	add	x0, x0, #0x6e7
   12b28:	bl	aa70 <dir_list_append@plt>
   12b2c:	tbnz	w19, #31, 12b50 <dir_list_nth@@Base+0x54>
   12b30:	ldr	x8, [x20, #976]
   12b34:	ldr	x9, [x8, #8]
   12b38:	cmp	x9, w19, uxtw
   12b3c:	b.ls	12b50 <dir_list_nth@@Base+0x54>  // b.plast
   12b40:	ldr	x8, [x8]
   12b44:	mov	w9, w19
   12b48:	ldr	x0, [x8, x9, lsl #3]
   12b4c:	b	12b54 <dir_list_nth@@Base+0x58>
   12b50:	mov	x0, xzr
   12b54:	ldp	x20, x19, [sp, #16]
   12b58:	ldp	x29, x30, [sp], #32
   12b5c:	ret

0000000000012b60 <dir_list_save_reset@@Base>:
   12b60:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   12b64:	ldr	x0, [x8, #976]
   12b68:	str	xzr, [x8, #976]
   12b6c:	ret

0000000000012b70 <dir_list_restore@@Base>:
   12b70:	stp	x29, x30, [sp, #-32]!
   12b74:	stp	x20, x19, [sp, #16]
   12b78:	adrp	x20, 4e000 <formatstring_gfc_internal@@Base+0x10>
   12b7c:	ldr	x8, [x20, #976]
   12b80:	mov	x19, x0
   12b84:	mov	x29, sp
   12b88:	cbz	x8, 12ba4 <dir_list_restore@@Base+0x34>
   12b8c:	ldr	x0, [x8]
   12b90:	cbz	x0, 12b9c <dir_list_restore@@Base+0x2c>
   12b94:	bl	aa00 <free@plt>
   12b98:	ldr	x8, [x20, #976]
   12b9c:	mov	x0, x8
   12ba0:	bl	aa00 <free@plt>
   12ba4:	str	x19, [x20, #976]
   12ba8:	ldp	x20, x19, [sp, #16]
   12bac:	ldp	x29, x30, [sp], #32
   12bb0:	ret

0000000000012bb4 <string_list_init@@Base>:
   12bb4:	stp	xzr, xzr, [x0]
   12bb8:	str	xzr, [x0, #16]
   12bbc:	ret

0000000000012bc0 <string_list_alloc@@Base>:
   12bc0:	stp	x29, x30, [sp, #-16]!
   12bc4:	mov	w0, #0x18                  	// #24
   12bc8:	mov	x29, sp
   12bcc:	bl	a590 <xmalloc@plt>
   12bd0:	stp	xzr, xzr, [x0, #8]
   12bd4:	str	xzr, [x0]
   12bd8:	ldp	x29, x30, [sp], #16
   12bdc:	ret

0000000000012be0 <string_list_append@@Base>:
   12be0:	stp	x29, x30, [sp, #-32]!
   12be4:	stp	x20, x19, [sp, #16]
   12be8:	ldp	x9, x8, [x0, #8]
   12bec:	mov	x19, x0
   12bf0:	mov	x20, x1
   12bf4:	mov	x29, sp
   12bf8:	cmp	x9, x8
   12bfc:	b.cc	12c1c <string_list_append@@Base+0x3c>  // b.lo, b.ul, b.last
   12c00:	ldr	x0, [x19]
   12c04:	lsl	x8, x8, #1
   12c08:	add	x8, x8, #0x4
   12c0c:	lsl	x1, x8, #3
   12c10:	str	x8, [x19, #16]
   12c14:	bl	a460 <xrealloc@plt>
   12c18:	str	x0, [x19]
   12c1c:	mov	x0, x20
   12c20:	bl	a5a0 <xstrdup@plt>
   12c24:	ldp	x9, x8, [x19]
   12c28:	add	x10, x8, #0x1
   12c2c:	str	x10, [x19, #8]
   12c30:	str	x0, [x9, x8, lsl #3]
   12c34:	ldp	x20, x19, [sp, #16]
   12c38:	ldp	x29, x30, [sp], #32
   12c3c:	ret

0000000000012c40 <string_list_append_unique@@Base>:
   12c40:	stp	x29, x30, [sp, #-64]!
   12c44:	stp	x22, x21, [sp, #32]
   12c48:	stp	x20, x19, [sp, #48]
   12c4c:	ldr	x21, [x0, #8]
   12c50:	mov	x19, x0
   12c54:	mov	x20, x1
   12c58:	str	x23, [sp, #16]
   12c5c:	mov	x29, sp
   12c60:	cbz	x21, 12c88 <string_list_append_unique@@Base+0x48>
   12c64:	ldr	x22, [x19]
   12c68:	mov	x23, xzr
   12c6c:	ldr	x0, [x22, x23, lsl #3]
   12c70:	mov	x1, x20
   12c74:	bl	a8d0 <strcmp@plt>
   12c78:	cbz	w0, 12cc8 <string_list_append_unique@@Base+0x88>
   12c7c:	add	x23, x23, #0x1
   12c80:	cmp	x23, x21
   12c84:	b.cc	12c6c <string_list_append_unique@@Base+0x2c>  // b.lo, b.ul, b.last
   12c88:	ldr	x8, [x19, #16]
   12c8c:	cmp	x21, x8
   12c90:	b.cc	12cb0 <string_list_append_unique@@Base+0x70>  // b.lo, b.ul, b.last
   12c94:	ldr	x0, [x19]
   12c98:	lsl	x8, x8, #1
   12c9c:	add	x8, x8, #0x4
   12ca0:	lsl	x1, x8, #3
   12ca4:	str	x8, [x19, #16]
   12ca8:	bl	a460 <xrealloc@plt>
   12cac:	str	x0, [x19]
   12cb0:	mov	x0, x20
   12cb4:	bl	a5a0 <xstrdup@plt>
   12cb8:	ldp	x9, x8, [x19]
   12cbc:	add	x10, x8, #0x1
   12cc0:	str	x10, [x19, #8]
   12cc4:	str	x0, [x9, x8, lsl #3]
   12cc8:	ldp	x20, x19, [sp, #48]
   12ccc:	ldp	x22, x21, [sp, #32]
   12cd0:	ldr	x23, [sp, #16]
   12cd4:	ldp	x29, x30, [sp], #64
   12cd8:	ret

0000000000012cdc <string_list_destroy@@Base>:
   12cdc:	stp	x29, x30, [sp, #-32]!
   12ce0:	stp	x20, x19, [sp, #16]
   12ce4:	mov	x19, x0
   12ce8:	ldp	x0, x8, [x0]
   12cec:	mov	x29, sp
   12cf0:	cbz	x8, 12d10 <string_list_destroy@@Base+0x34>
   12cf4:	mov	x20, xzr
   12cf8:	ldr	x0, [x0, x20, lsl #3]
   12cfc:	bl	aa00 <free@plt>
   12d00:	ldp	x0, x8, [x19]
   12d04:	add	x20, x20, #0x1
   12d08:	cmp	x20, x8
   12d0c:	b.cc	12cf8 <string_list_destroy@@Base+0x1c>  // b.lo, b.ul, b.last
   12d10:	cbz	x0, 12d20 <string_list_destroy@@Base+0x44>
   12d14:	ldp	x20, x19, [sp, #16]
   12d18:	ldp	x29, x30, [sp], #32
   12d1c:	b	aa00 <free@plt>
   12d20:	ldp	x20, x19, [sp, #16]
   12d24:	ldp	x29, x30, [sp], #32
   12d28:	ret

0000000000012d2c <string_list_free@@Base>:
   12d2c:	stp	x29, x30, [sp, #-32]!
   12d30:	stp	x20, x19, [sp, #16]
   12d34:	mov	x19, x0
   12d38:	ldp	x0, x8, [x0]
   12d3c:	mov	x29, sp
   12d40:	cbz	x8, 12d60 <string_list_free@@Base+0x34>
   12d44:	mov	x20, xzr
   12d48:	ldr	x0, [x0, x20, lsl #3]
   12d4c:	bl	aa00 <free@plt>
   12d50:	ldp	x0, x8, [x19]
   12d54:	add	x20, x20, #0x1
   12d58:	cmp	x20, x8
   12d5c:	b.cc	12d48 <string_list_free@@Base+0x1c>  // b.lo, b.ul, b.last
   12d60:	cbz	x0, 12d68 <string_list_free@@Base+0x3c>
   12d64:	bl	aa00 <free@plt>
   12d68:	mov	x0, x19
   12d6c:	ldp	x20, x19, [sp, #16]
   12d70:	ldp	x29, x30, [sp], #32
   12d74:	b	aa00 <free@plt>

0000000000012d78 <string_list_concat@@Base>:
   12d78:	stp	x29, x30, [sp, #-64]!
   12d7c:	stp	x24, x23, [sp, #16]
   12d80:	stp	x22, x21, [sp, #32]
   12d84:	stp	x20, x19, [sp, #48]
   12d88:	ldr	x21, [x0, #8]
   12d8c:	mov	x19, x0
   12d90:	mov	x29, sp
   12d94:	cbz	x21, 12dc0 <string_list_concat@@Base+0x48>
   12d98:	ldr	x23, [x19]
   12d9c:	mov	x22, xzr
   12da0:	mov	w20, #0x1                   	// #1
   12da4:	ldr	x0, [x23, x22, lsl #3]
   12da8:	bl	a0d0 <strlen@plt>
   12dac:	add	x22, x22, #0x1
   12db0:	cmp	x22, x21
   12db4:	add	x20, x0, x20
   12db8:	b.cc	12da4 <string_list_concat@@Base+0x2c>  // b.lo, b.ul, b.last
   12dbc:	b	12dc4 <string_list_concat@@Base+0x4c>
   12dc0:	mov	w20, #0x1                   	// #1
   12dc4:	mov	x0, x20
   12dc8:	bl	a590 <xmalloc@plt>
   12dcc:	ldr	x8, [x19, #8]
   12dd0:	mov	x20, x0
   12dd4:	mov	x23, xzr
   12dd8:	cbz	x8, 12e18 <string_list_concat@@Base+0xa0>
   12ddc:	mov	x24, xzr
   12de0:	ldr	x8, [x19]
   12de4:	ldr	x21, [x8, x24, lsl #3]
   12de8:	mov	x0, x21
   12dec:	bl	a0d0 <strlen@plt>
   12df0:	mov	x22, x0
   12df4:	add	x0, x20, x23
   12df8:	mov	x1, x21
   12dfc:	mov	x2, x22
   12e00:	bl	a040 <memcpy@plt>
   12e04:	ldr	x8, [x19, #8]
   12e08:	add	x24, x24, #0x1
   12e0c:	add	x23, x22, x23
   12e10:	cmp	x24, x8
   12e14:	b.cc	12de0 <string_list_concat@@Base+0x68>  // b.lo, b.ul, b.last
   12e18:	strb	wzr, [x20, x23]
   12e1c:	mov	x0, x20
   12e20:	ldp	x20, x19, [sp, #48]
   12e24:	ldp	x22, x21, [sp, #32]
   12e28:	ldp	x24, x23, [sp, #16]
   12e2c:	ldp	x29, x30, [sp], #64
   12e30:	ret

0000000000012e34 <string_list_concat_destroy@@Base>:
   12e34:	stp	x29, x30, [sp, #-32]!
   12e38:	stp	x20, x19, [sp, #16]
   12e3c:	ldr	x8, [x0, #8]
   12e40:	mov	x19, x0
   12e44:	mov	x29, sp
   12e48:	cmp	x8, #0x1
   12e4c:	b.ne	12e64 <string_list_concat_destroy@@Base+0x30>  // b.any
   12e50:	ldr	x0, [x19]
   12e54:	ldr	x19, [x0]
   12e58:	bl	aa00 <free@plt>
   12e5c:	mov	x0, x19
   12e60:	b	12e7c <string_list_concat_destroy@@Base+0x48>
   12e64:	mov	x0, x19
   12e68:	bl	a5b0 <string_list_concat@plt>
   12e6c:	mov	x20, x0
   12e70:	mov	x0, x19
   12e74:	bl	a190 <string_list_destroy@plt>
   12e78:	mov	x0, x20
   12e7c:	ldp	x20, x19, [sp, #16]
   12e80:	ldp	x29, x30, [sp], #32
   12e84:	ret

0000000000012e88 <string_list_join@@Base>:
   12e88:	stp	x29, x30, [sp, #-96]!
   12e8c:	stp	x20, x19, [sp, #80]
   12e90:	mov	x20, x0
   12e94:	mov	x0, x1
   12e98:	stp	x28, x27, [sp, #16]
   12e9c:	stp	x26, x25, [sp, #32]
   12ea0:	stp	x24, x23, [sp, #48]
   12ea4:	stp	x22, x21, [sp, #64]
   12ea8:	mov	x29, sp
   12eac:	mov	w21, w3
   12eb0:	mov	w19, w2
   12eb4:	mov	x22, x1
   12eb8:	bl	a0d0 <strlen@plt>
   12ebc:	ldr	x23, [x20, #8]
   12ec0:	mov	x24, x0
   12ec4:	cbz	x23, 12efc <string_list_join@@Base+0x74>
   12ec8:	ldr	x26, [x20]
   12ecc:	mov	x25, xzr
   12ed0:	mov	w8, #0x1                   	// #1
   12ed4:	ldr	x0, [x26, x25, lsl #3]
   12ed8:	cmp	x25, #0x0
   12edc:	csel	x9, xzr, x24, eq  // eq = none
   12ee0:	add	x27, x9, x8
   12ee4:	bl	a0d0 <strlen@plt>
   12ee8:	add	x25, x25, #0x1
   12eec:	cmp	x25, x23
   12ef0:	add	x8, x27, x0
   12ef4:	b.cc	12ed4 <string_list_join@@Base+0x4c>  // b.lo, b.ul, b.last
   12ef8:	b	12f00 <string_list_join@@Base+0x78>
   12efc:	mov	w8, #0x1                   	// #1
   12f00:	tst	w19, #0xff
   12f04:	cinc	x0, x8, ne  // ne = any
   12f08:	bl	a590 <xmalloc@plt>
   12f0c:	ldr	x8, [x20, #8]
   12f10:	mov	x23, x0
   12f14:	mov	x27, xzr
   12f18:	cbz	x8, 12f70 <string_list_join@@Base+0xe8>
   12f1c:	mov	x28, xzr
   12f20:	cbz	x28, 12f38 <string_list_join@@Base+0xb0>
   12f24:	add	x0, x23, x27
   12f28:	mov	x1, x22
   12f2c:	mov	x2, x24
   12f30:	bl	a040 <memcpy@plt>
   12f34:	add	x27, x27, x24
   12f38:	ldr	x8, [x20]
   12f3c:	ldr	x25, [x8, x28, lsl #3]
   12f40:	mov	x0, x25
   12f44:	bl	a0d0 <strlen@plt>
   12f48:	mov	x26, x0
   12f4c:	add	x0, x23, x27
   12f50:	mov	x1, x25
   12f54:	mov	x2, x26
   12f58:	bl	a040 <memcpy@plt>
   12f5c:	ldr	x8, [x20, #8]
   12f60:	add	x28, x28, #0x1
   12f64:	add	x27, x26, x27
   12f68:	cmp	x28, x8
   12f6c:	b.cc	12f20 <string_list_join@@Base+0x98>  // b.lo, b.ul, b.last
   12f70:	tst	w19, #0xff
   12f74:	b.eq	12fb4 <string_list_join@@Base+0x12c>  // b.none
   12f78:	cbz	x8, 12fa8 <string_list_join@@Base+0x120>
   12f7c:	tbz	w21, #0, 12fa8 <string_list_join@@Base+0x120>
   12f80:	ldr	x9, [x20]
   12f84:	add	x8, x9, x8, lsl #3
   12f88:	ldur	x20, [x8, #-8]
   12f8c:	mov	x0, x20
   12f90:	bl	a0d0 <strlen@plt>
   12f94:	cbz	x0, 12fa8 <string_list_join@@Base+0x120>
   12f98:	add	x8, x0, x20
   12f9c:	ldurb	w8, [x8, #-1]
   12fa0:	cmp	w8, w19, uxtb
   12fa4:	b.eq	12fb4 <string_list_join@@Base+0x12c>  // b.none
   12fa8:	add	x8, x27, #0x1
   12fac:	strb	w19, [x23, x27]
   12fb0:	mov	x27, x8
   12fb4:	strb	wzr, [x23, x27]
   12fb8:	mov	x0, x23
   12fbc:	ldp	x20, x19, [sp, #80]
   12fc0:	ldp	x22, x21, [sp, #64]
   12fc4:	ldp	x24, x23, [sp, #48]
   12fc8:	ldp	x26, x25, [sp, #32]
   12fcc:	ldp	x28, x27, [sp, #16]
   12fd0:	ldp	x29, x30, [sp], #96
   12fd4:	ret

0000000000012fd8 <string_list_member@@Base>:
   12fd8:	stp	x29, x30, [sp, #-48]!
   12fdc:	stp	x22, x21, [sp, #16]
   12fe0:	stp	x20, x19, [sp, #32]
   12fe4:	ldr	x20, [x0, #8]
   12fe8:	mov	x29, sp
   12fec:	cbz	x20, 13018 <string_list_member@@Base+0x40>
   12ff0:	ldr	x21, [x0]
   12ff4:	mov	x19, x1
   12ff8:	mov	x22, xzr
   12ffc:	ldr	x0, [x21, x22, lsl #3]
   13000:	mov	x1, x19
   13004:	bl	a8d0 <strcmp@plt>
   13008:	cbz	w0, 13020 <string_list_member@@Base+0x48>
   1300c:	add	x22, x22, #0x1
   13010:	cmp	x22, x20
   13014:	b.cc	12ffc <string_list_member@@Base+0x24>  // b.lo, b.ul, b.last
   13018:	mov	w0, wzr
   1301c:	b	13024 <string_list_member@@Base+0x4c>
   13020:	mov	w0, #0x1                   	// #1
   13024:	ldp	x20, x19, [sp, #32]
   13028:	ldp	x22, x21, [sp, #16]
   1302c:	ldp	x29, x30, [sp], #48
   13030:	ret

0000000000013034 <default_constructor@@Base>:
   13034:	adrp	x8, 36000 <its_merge_context_free@@Base+0x1328>
   13038:	movi	v0.2d, #0x0
   1303c:	add	x8, x8, #0x92c
   13040:	stp	q0, q0, [x0, #48]
   13044:	stur	q0, [x0, #84]
   13048:	stur	q0, [x0, #100]
   1304c:	stur	q0, [x0, #116]
   13050:	stur	q0, [x0, #132]
   13054:	stur	q0, [x0, #148]
   13058:	stur	q0, [x0, #164]
   1305c:	stur	q0, [x0, #180]
   13060:	movi	v0.2d, #0xffffffffffffffff
   13064:	strb	wzr, [x0, #80]
   13068:	str	wzr, [x0, #204]
   1306c:	str	x8, [x0, #32]
   13070:	stur	d0, [x0, #196]
   13074:	stp	xzr, xzr, [x0, #208]
   13078:	ret

000000000001307c <default_destructor@@Base>:
   1307c:	stp	x29, x30, [sp, #-48]!
   13080:	stp	x20, x19, [sp, #32]
   13084:	ldrb	w8, [x0, #8]
   13088:	mov	x19, x0
   1308c:	str	x21, [sp, #16]
   13090:	mov	x29, sp
   13094:	cbz	w8, 130b0 <default_destructor@@Base+0x34>
   13098:	ldr	x0, [x19, #48]
   1309c:	cbz	x0, 130a4 <default_destructor@@Base+0x28>
   130a0:	bl	a610 <string_list_free@plt>
   130a4:	ldr	x0, [x19, #56]
   130a8:	cbz	x0, 130b0 <default_destructor@@Base+0x34>
   130ac:	bl	a610 <string_list_free@plt>
   130b0:	ldp	x8, x0, [x19, #64]
   130b4:	cbz	x8, 130dc <default_destructor@@Base+0x60>
   130b8:	mov	x20, xzr
   130bc:	mov	x21, xzr
   130c0:	ldr	x0, [x0, x20]
   130c4:	bl	aa00 <free@plt>
   130c8:	ldp	x8, x0, [x19, #64]
   130cc:	add	x21, x21, #0x1
   130d0:	add	x20, x20, #0x10
   130d4:	cmp	x21, x8
   130d8:	b.cc	130c0 <default_destructor@@Base+0x44>  // b.lo, b.ul, b.last
   130dc:	cbz	x0, 130f0 <default_destructor@@Base+0x74>
   130e0:	ldp	x20, x19, [sp, #32]
   130e4:	ldr	x21, [sp, #16]
   130e8:	ldp	x29, x30, [sp], #48
   130ec:	b	aa00 <free@plt>
   130f0:	ldp	x20, x19, [sp, #32]
   130f4:	ldr	x21, [sp, #16]
   130f8:	ldp	x29, x30, [sp], #48
   130fc:	ret

0000000000013100 <default_parse_brief@@Base>:
   13100:	mov	w0, #0x1                   	// #1
   13104:	b	acf0 <po_lex_pass_comments@plt>

0000000000013108 <default_parse_debrief@@Base>:
   13108:	ret

000000000001310c <default_directive_domain@@Base>:
   1310c:	stp	x29, x30, [sp, #-32]!
   13110:	ldr	x8, [x0]
   13114:	str	x19, [sp, #16]
   13118:	mov	x19, x0
   1311c:	mov	x29, sp
   13120:	ldr	x8, [x8, #88]
   13124:	cbz	x8, 13130 <default_directive_domain@@Base+0x24>
   13128:	mov	x0, x19
   1312c:	blr	x8
   13130:	mov	x0, x19
   13134:	ldr	x19, [sp, #16]
   13138:	ldp	x29, x30, [sp], #32
   1313c:	b	13140 <default_directive_domain@@Base+0x34>
   13140:	stp	x29, x30, [sp, #-48]!
   13144:	stp	x22, x21, [sp, #16]
   13148:	stp	x20, x19, [sp, #32]
   1314c:	ldrb	w8, [x0, #8]
   13150:	mov	x19, x0
   13154:	mov	x29, sp
   13158:	cbz	w8, 1317c <default_directive_domain@@Base+0x70>
   1315c:	ldr	x0, [x19, #48]
   13160:	cbz	x0, 1316c <default_directive_domain@@Base+0x60>
   13164:	bl	a610 <string_list_free@plt>
   13168:	str	xzr, [x19, #48]
   1316c:	ldr	x0, [x19, #56]
   13170:	cbz	x0, 1317c <default_directive_domain@@Base+0x70>
   13174:	bl	a610 <string_list_free@plt>
   13178:	str	xzr, [x19, #56]
   1317c:	mov	x20, x19
   13180:	ldr	x8, [x20, #64]!
   13184:	ldr	x0, [x20, #8]
   13188:	cbz	x8, 131b0 <default_directive_domain@@Base+0xa4>
   1318c:	mov	x21, xzr
   13190:	mov	x22, xzr
   13194:	ldr	x0, [x0, x21]
   13198:	bl	aa00 <free@plt>
   1319c:	ldp	x8, x0, [x19, #64]
   131a0:	add	x22, x22, #0x1
   131a4:	add	x21, x21, #0x10
   131a8:	cmp	x22, x8
   131ac:	b.cc	13194 <default_directive_domain@@Base+0x88>  // b.lo, b.ul, b.last
   131b0:	cbz	x0, 131b8 <default_directive_domain@@Base+0xac>
   131b4:	bl	aa00 <free@plt>
   131b8:	movi	v0.2d, #0x0
   131bc:	stur	q0, [x19, #180]
   131c0:	stur	q0, [x19, #164]
   131c4:	stur	q0, [x19, #148]
   131c8:	stur	q0, [x19, #132]
   131cc:	stur	q0, [x19, #116]
   131d0:	stur	q0, [x19, #100]
   131d4:	stur	q0, [x19, #84]
   131d8:	movi	v0.2d, #0xffffffffffffffff
   131dc:	stp	xzr, xzr, [x20]
   131e0:	strb	wzr, [x20, #16]
   131e4:	stur	d0, [x19, #196]
   131e8:	stur	xzr, [x19, #212]
   131ec:	stur	xzr, [x19, #204]
   131f0:	str	wzr, [x19, #220]
   131f4:	ldp	x20, x19, [sp, #32]
   131f8:	ldp	x22, x21, [sp, #16]
   131fc:	ldp	x29, x30, [sp], #48
   13200:	ret

0000000000013204 <default_directive_message@@Base>:
   13204:	sub	sp, sp, #0x50
   13208:	stp	x29, x30, [sp, #48]
   1320c:	ldr	x8, [x0]
   13210:	str	x19, [sp, #64]
   13214:	mov	x19, x0
   13218:	add	x29, sp, #0x30
   1321c:	ldr	x8, [x8, #96]
   13220:	cbz	x8, 13254 <default_directive_message@@Base+0x50>
   13224:	ldrb	w9, [x29, #64]
   13228:	ldrb	w10, [x29, #56]
   1322c:	ldp	x12, x11, [x29, #40]
   13230:	ldr	x13, [x29, #32]
   13234:	and	w9, w9, #0x1
   13238:	and	w10, w10, #0x1
   1323c:	mov	x0, x19
   13240:	stp	x12, x11, [sp, #8]
   13244:	strb	w9, [sp, #32]
   13248:	strb	w10, [sp, #24]
   1324c:	str	x13, [sp]
   13250:	blr	x8
   13254:	mov	x0, x19
   13258:	ldr	x19, [sp, #64]
   1325c:	ldp	x29, x30, [sp, #48]
   13260:	add	sp, sp, #0x50
   13264:	b	13140 <default_directive_domain@@Base+0x34>

0000000000013268 <default_comment@@Base>:
   13268:	stp	x29, x30, [sp, #-32]!
   1326c:	stp	x20, x19, [sp, #16]
   13270:	ldrb	w8, [x0, #8]
   13274:	mov	x29, sp
   13278:	cbz	w8, 132a4 <default_comment@@Base+0x3c>
   1327c:	mov	x20, x0
   13280:	ldr	x0, [x0, #48]
   13284:	mov	x19, x1
   13288:	cbnz	x0, 13294 <default_comment@@Base+0x2c>
   1328c:	bl	a350 <string_list_alloc@plt>
   13290:	str	x0, [x20, #48]
   13294:	mov	x1, x19
   13298:	ldp	x20, x19, [sp, #16]
   1329c:	ldp	x29, x30, [sp], #32
   132a0:	b	a2a0 <string_list_append@plt>
   132a4:	ldp	x20, x19, [sp, #16]
   132a8:	ldp	x29, x30, [sp], #32
   132ac:	ret

00000000000132b0 <default_comment_dot@@Base>:
   132b0:	stp	x29, x30, [sp, #-32]!
   132b4:	stp	x20, x19, [sp, #16]
   132b8:	ldrb	w8, [x0, #8]
   132bc:	mov	x29, sp
   132c0:	cbz	w8, 132ec <default_comment_dot@@Base+0x3c>
   132c4:	mov	x20, x0
   132c8:	ldr	x0, [x0, #56]
   132cc:	mov	x19, x1
   132d0:	cbnz	x0, 132dc <default_comment_dot@@Base+0x2c>
   132d4:	bl	a350 <string_list_alloc@plt>
   132d8:	str	x0, [x20, #56]
   132dc:	mov	x1, x19
   132e0:	ldp	x20, x19, [sp, #16]
   132e4:	ldp	x29, x30, [sp], #32
   132e8:	b	a2a0 <string_list_append@plt>
   132ec:	ldp	x20, x19, [sp, #16]
   132f0:	ldp	x29, x30, [sp], #32
   132f4:	ret

00000000000132f8 <default_comment_filepos@@Base>:
   132f8:	stp	x29, x30, [sp, #-64]!
   132fc:	str	x23, [sp, #16]
   13300:	stp	x22, x21, [sp, #32]
   13304:	stp	x20, x19, [sp, #48]
   13308:	mov	x21, x0
   1330c:	ldp	x8, x0, [x0, #64]
   13310:	mov	x20, x1
   13314:	mov	x29, sp
   13318:	mov	x19, x2
   1331c:	lsl	x8, x8, #4
   13320:	add	x1, x8, #0x10
   13324:	bl	a460 <xrealloc@plt>
   13328:	ldr	x23, [x21, #64]
   1332c:	mov	x22, x0
   13330:	add	x8, x23, #0x1
   13334:	stp	x8, x0, [x21, #64]
   13338:	mov	x0, x20
   1333c:	bl	a5a0 <xstrdup@plt>
   13340:	add	x8, x22, x23, lsl #4
   13344:	stp	x0, x19, [x8]
   13348:	ldp	x20, x19, [sp, #48]
   1334c:	ldp	x22, x21, [sp, #32]
   13350:	ldr	x23, [sp, #16]
   13354:	ldp	x29, x30, [sp], #64
   13358:	ret

000000000001335c <default_comment_special@@Base>:
   1335c:	add	x8, x0, #0x50
   13360:	add	x2, x0, #0x54
   13364:	add	x3, x0, #0xc4
   13368:	add	x4, x0, #0xcc
   1336c:	add	x5, x0, #0xd0
   13370:	mov	x0, x1
   13374:	mov	x1, x8
   13378:	b	a550 <po_parse_comment_special@plt>

000000000001337c <default_set_domain@@Base>:
   1337c:	stp	x29, x30, [sp, #-32]!
   13380:	ldrb	w8, [x0, #9]
   13384:	str	x19, [sp, #16]
   13388:	mov	x19, x1
   1338c:	mov	x29, sp
   13390:	cbz	w8, 133a4 <default_set_domain@@Base+0x28>
   13394:	str	x19, [x0, #32]
   13398:	ldr	x19, [sp, #16]
   1339c:	ldp	x29, x30, [sp], #32
   133a0:	ret
   133a4:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   133a8:	add	x1, x1, #0x5d1
   133ac:	mov	w2, #0x5                   	// #5
   133b0:	mov	x0, xzr
   133b4:	bl	acd0 <dcgettext@plt>
   133b8:	mov	x1, x0
   133bc:	adrp	x0, 4c000 <plural_table_size@@Base+0x12c00>
   133c0:	ldr	x0, [x0, #4000]
   133c4:	bl	a500 <po_gram_error_at_line@plt>
   133c8:	mov	x0, x19
   133cc:	ldr	x19, [sp, #16]
   133d0:	ldp	x29, x30, [sp], #32
   133d4:	b	aa00 <free@plt>

00000000000133d8 <default_add_message@@Base>:
   133d8:	sub	sp, sp, #0xb0
   133dc:	stp	x29, x30, [sp, #80]
   133e0:	stp	x28, x27, [sp, #96]
   133e4:	stp	x26, x25, [sp, #112]
   133e8:	stp	x24, x23, [sp, #128]
   133ec:	stp	x22, x21, [sp, #144]
   133f0:	stp	x20, x19, [sp, #160]
   133f4:	add	x29, sp, #0x50
   133f8:	ldr	x8, [x29, #112]
   133fc:	mov	x19, x0
   13400:	ldrb	w22, [x29, #120]
   13404:	ldrb	w24, [x29, #128]
   13408:	stur	x8, [x29, #-8]
   1340c:	ldr	x8, [x29, #104]
   13410:	mov	x20, x7
   13414:	mov	x21, x6
   13418:	mov	x27, x5
   1341c:	stur	x8, [x29, #-16]
   13420:	ldr	x8, [x29, #96]
   13424:	mov	x23, x4
   13428:	mov	x28, x2
   1342c:	mov	x25, x1
   13430:	stp	x3, x8, [x29, #-32]
   13434:	ldr	x0, [x0, #24]
   13438:	cbz	x0, 1344c <default_add_message@@Base+0x74>
   1343c:	ldr	x1, [x19, #32]
   13440:	mov	w2, #0x1                   	// #1
   13444:	bl	ad80 <msgdomain_list_sublist@plt>
   13448:	str	x0, [x19, #40]
   1344c:	ldrb	w8, [x19, #10]
   13450:	cbz	w8, 1345c <default_add_message@@Base+0x84>
   13454:	ldrb	w8, [x28]
   13458:	cbnz	w8, 13588 <default_add_message@@Base+0x1b0>
   1345c:	ldr	x0, [x19, #40]
   13460:	mov	x1, x25
   13464:	mov	x2, x28
   13468:	bl	ae40 <message_list_search@plt>
   1346c:	cbz	x0, 13588 <default_add_message@@Base+0x1b0>
   13470:	ldrb	w8, [x19, #11]
   13474:	mov	x26, x0
   13478:	mov	x24, x27
   1347c:	cbz	w8, 134a0 <default_add_message@@Base+0xc8>
   13480:	ldr	x8, [x26, #32]
   13484:	cmp	x8, x21
   13488:	b.ne	134a0 <default_add_message@@Base+0xc8>  // b.any
   1348c:	ldr	x1, [x26, #24]
   13490:	mov	x0, x24
   13494:	mov	x2, x21
   13498:	bl	a650 <bcmp@plt>
   1349c:	cbz	w0, 13514 <default_add_message@@Base+0x13c>
   134a0:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   134a4:	ldr	x8, [x8, #4056]
   134a8:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   134ac:	add	x1, x1, #0x5fd
   134b0:	mov	w2, #0x5                   	// #5
   134b4:	ldr	x22, [x8]
   134b8:	ldur	x8, [x29, #-32]
   134bc:	mov	x0, xzr
   134c0:	ldp	x20, x21, [x8]
   134c4:	bl	acd0 <dcgettext@plt>
   134c8:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   134cc:	mov	x27, x0
   134d0:	add	x1, x1, #0x61a
   134d4:	mov	w2, #0x5                   	// #5
   134d8:	mov	x0, xzr
   134dc:	bl	acd0 <dcgettext@plt>
   134e0:	str	x0, [sp, #32]
   134e4:	mov	w0, #0x1                   	// #1
   134e8:	mov	x4, #0xffffffffffffffff    	// #-1
   134ec:	mov	x1, xzr
   134f0:	mov	x2, x20
   134f4:	mov	x3, x21
   134f8:	mov	w5, wzr
   134fc:	mov	x6, x27
   13500:	mov	x7, x26
   13504:	stp	xzr, xzr, [sp]
   13508:	str	wzr, [sp, #24]
   1350c:	str	xzr, [sp, #16]
   13510:	blr	x22
   13514:	mov	x0, x28
   13518:	bl	aa00 <free@plt>
   1351c:	cbz	x23, 13528 <default_add_message@@Base+0x150>
   13520:	mov	x0, x23
   13524:	bl	aa00 <free@plt>
   13528:	mov	x0, x24
   1352c:	bl	aa00 <free@plt>
   13530:	cbz	x25, 1353c <default_add_message@@Base+0x164>
   13534:	mov	x0, x25
   13538:	bl	aa00 <free@plt>
   1353c:	ldur	x0, [x29, #-24]
   13540:	cbz	x0, 13548 <default_add_message@@Base+0x170>
   13544:	bl	aa00 <free@plt>
   13548:	ldur	x0, [x29, #-16]
   1354c:	cbz	x0, 13554 <default_add_message@@Base+0x17c>
   13550:	bl	aa00 <free@plt>
   13554:	ldur	x0, [x29, #-8]
   13558:	cbz	x0, 13560 <default_add_message@@Base+0x188>
   1355c:	bl	aa00 <free@plt>
   13560:	mov	x0, x19
   13564:	mov	x1, x26
   13568:	ldp	x20, x19, [sp, #160]
   1356c:	ldp	x22, x21, [sp, #144]
   13570:	ldp	x24, x23, [sp, #128]
   13574:	ldp	x26, x25, [sp, #112]
   13578:	ldp	x28, x27, [sp, #96]
   1357c:	ldp	x29, x30, [sp, #80]
   13580:	add	sp, sp, #0xb0
   13584:	b	13634 <default_add_message@@Base+0x25c>
   13588:	mov	x0, x25
   1358c:	mov	x1, x28
   13590:	mov	x2, x23
   13594:	mov	x3, x27
   13598:	mov	x4, x21
   1359c:	mov	x5, x20
   135a0:	and	w24, w24, #0x1
   135a4:	bl	a240 <message_alloc@plt>
   135a8:	mov	x21, x0
   135ac:	cbz	x23, 135b8 <default_add_message@@Base+0x1e0>
   135b0:	mov	x0, x23
   135b4:	bl	aa00 <free@plt>
   135b8:	ldur	x8, [x29, #-24]
   135bc:	mov	x0, x19
   135c0:	mov	x1, x21
   135c4:	strb	w24, [x21, #256]
   135c8:	str	x8, [x21, #232]
   135cc:	ldur	x8, [x29, #-16]
   135d0:	str	x8, [x21, #240]
   135d4:	ldur	x8, [x29, #-8]
   135d8:	str	x8, [x21, #248]
   135dc:	bl	13634 <default_add_message@@Base+0x25c>
   135e0:	tbz	w22, #0, 135ec <default_add_message@@Base+0x214>
   135e4:	mov	w8, #0x1                   	// #1
   135e8:	strb	w8, [x21, #88]
   135ec:	ldr	x8, [x19]
   135f0:	ldr	x8, [x8, #104]
   135f4:	cbz	x8, 1360c <default_add_message@@Base+0x234>
   135f8:	ldur	x2, [x29, #-32]
   135fc:	mov	x0, x19
   13600:	mov	x1, x21
   13604:	mov	x3, x20
   13608:	blr	x8
   1360c:	ldr	x0, [x19, #40]
   13610:	mov	x1, x21
   13614:	ldp	x20, x19, [sp, #160]
   13618:	ldp	x22, x21, [sp, #144]
   1361c:	ldp	x24, x23, [sp, #128]
   13620:	ldp	x26, x25, [sp, #112]
   13624:	ldp	x28, x27, [sp, #96]
   13628:	ldp	x29, x30, [sp, #80]
   1362c:	add	sp, sp, #0xb0
   13630:	b	ae70 <message_list_append@plt>
   13634:	stp	x29, x30, [sp, #-48]!
   13638:	stp	x22, x21, [sp, #16]
   1363c:	stp	x20, x19, [sp, #32]
   13640:	ldrb	w8, [x0, #8]
   13644:	mov	x20, x0
   13648:	mov	x19, x1
   1364c:	mov	x29, sp
   13650:	cbz	w8, 136c4 <default_add_message@@Base+0x2ec>
   13654:	ldr	x8, [x20, #48]
   13658:	cbz	x8, 1368c <default_add_message@@Base+0x2b4>
   1365c:	ldr	x9, [x8, #8]
   13660:	cbz	x9, 1368c <default_add_message@@Base+0x2b4>
   13664:	mov	x21, xzr
   13668:	ldr	x8, [x8]
   1366c:	mov	x0, x19
   13670:	ldr	x1, [x8, x21, lsl #3]
   13674:	bl	a0e0 <message_comment_append@plt>
   13678:	ldr	x8, [x20, #48]
   1367c:	add	x21, x21, #0x1
   13680:	ldr	x9, [x8, #8]
   13684:	cmp	x21, x9
   13688:	b.cc	13668 <default_add_message@@Base+0x290>  // b.lo, b.ul, b.last
   1368c:	ldr	x8, [x20, #56]
   13690:	cbz	x8, 136c4 <default_add_message@@Base+0x2ec>
   13694:	ldr	x9, [x8, #8]
   13698:	cbz	x9, 136c4 <default_add_message@@Base+0x2ec>
   1369c:	mov	x21, xzr
   136a0:	ldr	x8, [x8]
   136a4:	mov	x0, x19
   136a8:	ldr	x1, [x8, x21, lsl #3]
   136ac:	bl	a8e0 <message_comment_dot_append@plt>
   136b0:	ldr	x8, [x20, #56]
   136b4:	add	x21, x21, #0x1
   136b8:	ldr	x9, [x8, #8]
   136bc:	cmp	x21, x9
   136c0:	b.cc	136a0 <default_add_message@@Base+0x2c8>  // b.lo, b.ul, b.last
   136c4:	ldr	x8, [x20, #64]
   136c8:	cbz	x8, 136fc <default_add_message@@Base+0x324>
   136cc:	mov	x21, xzr
   136d0:	mov	x22, xzr
   136d4:	ldr	x8, [x20, #72]
   136d8:	mov	x0, x19
   136dc:	add	x8, x8, x21
   136e0:	ldp	x1, x2, [x8]
   136e4:	bl	a9d0 <message_comment_filepos@plt>
   136e8:	ldr	x8, [x20, #64]
   136ec:	add	x22, x22, #0x1
   136f0:	add	x21, x21, #0x10
   136f4:	cmp	x22, x8
   136f8:	b.cc	136d4 <default_add_message@@Base+0x2fc>  // b.lo, b.ul, b.last
   136fc:	ldrb	w10, [x20, #80]
   13700:	mov	x8, xzr
   13704:	add	x9, x20, #0x54
   13708:	strb	w10, [x19, #88]
   1370c:	add	x10, x19, #0x5c
   13710:	ldr	w11, [x9, x8]
   13714:	str	w11, [x10, x8]
   13718:	add	x8, x8, #0x4
   1371c:	cmp	x8, #0x70
   13720:	b.ne	13710 <default_add_message@@Base+0x338>  // b.any
   13724:	ldur	x9, [x20, #196]
   13728:	mov	x8, xzr
   1372c:	stur	x9, [x19, #204]
   13730:	ldr	w10, [x20, #204]
   13734:	add	x9, x20, #0xd0
   13738:	str	w10, [x19, #212]
   1373c:	add	x10, x19, #0xd8
   13740:	ldr	w11, [x9, x8]
   13744:	str	w11, [x10, x8]
   13748:	add	x8, x8, #0x4
   1374c:	cmp	x8, #0x10
   13750:	b.ne	13740 <default_add_message@@Base+0x368>  // b.any
   13754:	ldp	x20, x19, [sp, #32]
   13758:	ldp	x22, x21, [sp, #16]
   1375c:	ldp	x29, x30, [sp], #48
   13760:	ret

0000000000013764 <default_catalog_reader_alloc@@Base>:
   13764:	b	a640 <catalog_reader_alloc@plt>

0000000000013768 <read_catalog_stream@@Base>:
   13768:	stp	x29, x30, [sp, #-64]!
   1376c:	str	x23, [sp, #16]
   13770:	mov	x23, x0
   13774:	adrp	x0, 4d000 <memcpy@GLIBC_2.17>
   13778:	add	x0, x0, #0x7d8
   1377c:	stp	x22, x21, [sp, #32]
   13780:	stp	x20, x19, [sp, #48]
   13784:	mov	x29, sp
   13788:	mov	x19, x3
   1378c:	mov	x20, x2
   13790:	mov	x22, x1
   13794:	bl	a640 <catalog_reader_alloc@plt>
   13798:	adrp	x9, 4c000 <plural_table_size@@Base+0x12c00>
   1379c:	ldr	x9, [x9, #3976]
   137a0:	mov	w8, #0x101                 	// #257
   137a4:	strh	w8, [x0, #8]
   137a8:	mov	x21, x0
   137ac:	ldrb	w8, [x9]
   137b0:	strb	wzr, [x0, #11]
   137b4:	str	x22, [x0, #16]
   137b8:	cmp	w8, #0x0
   137bc:	strb	w8, [x0, #10]
   137c0:	cset	w0, eq  // eq = none
   137c4:	bl	a760 <msgdomain_list_alloc@plt>
   137c8:	ldr	x1, [x21, #32]
   137cc:	mov	w2, #0x1                   	// #1
   137d0:	str	x0, [x21, #24]
   137d4:	bl	ad80 <msgdomain_list_sublist@plt>
   137d8:	str	x0, [x21, #40]
   137dc:	ldrb	w8, [x19, #8]
   137e0:	cbz	w8, 137f8 <read_catalog_stream@@Base+0x90>
   137e4:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   137e8:	ldr	x8, [x8, #3952]
   137ec:	ldr	x9, [x21, #24]
   137f0:	ldr	x8, [x8]
   137f4:	str	x8, [x9, #32]
   137f8:	mov	w0, #0x1                   	// #1
   137fc:	bl	a470 <po_lex_pass_obsolete_entries@plt>
   13800:	mov	x0, x21
   13804:	mov	x1, x23
   13808:	mov	x2, x22
   1380c:	mov	x3, x20
   13810:	mov	x4, x19
   13814:	bl	ae00 <catalog_reader_parse@plt>
   13818:	ldr	x19, [x21, #24]
   1381c:	mov	x0, x21
   13820:	bl	a800 <catalog_reader_free@plt>
   13824:	mov	x0, x19
   13828:	ldp	x20, x19, [sp, #48]
   1382c:	ldp	x22, x21, [sp, #32]
   13830:	ldr	x23, [sp, #16]
   13834:	ldp	x29, x30, [sp], #64
   13838:	ret

000000000001383c <read_catalog_file@@Base>:
   1383c:	stp	x29, x30, [sp, #-48]!
   13840:	mov	x29, sp
   13844:	stp	x20, x19, [sp, #32]
   13848:	mov	x20, x1
   1384c:	add	x1, x29, #0x18
   13850:	mov	w2, #0x1                   	// #1
   13854:	str	x21, [sp, #16]
   13858:	mov	x21, x0
   1385c:	bl	a390 <open_catalog_file@plt>
   13860:	ldr	x1, [x29, #24]
   13864:	mov	x2, x21
   13868:	mov	x3, x20
   1386c:	mov	x19, x0
   13870:	bl	a320 <read_catalog_stream@plt>
   13874:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   13878:	ldr	x8, [x8, #3896]
   1387c:	mov	x20, x0
   13880:	ldr	x8, [x8]
   13884:	cmp	x19, x8
   13888:	b.eq	13894 <read_catalog_file@@Base+0x58>  // b.none
   1388c:	mov	x0, x19
   13890:	bl	a3c0 <fclose@plt>
   13894:	mov	x0, x20
   13898:	ldp	x20, x19, [sp, #32]
   1389c:	ldr	x21, [sp, #16]
   138a0:	ldp	x29, x30, [sp], #48
   138a4:	ret

00000000000138a8 <message_page_width_set@@Base>:
   138a8:	cmp	x0, #0x14
   138ac:	mov	w8, #0x14                  	// #20
   138b0:	mov	w9, #0x7fffffff            	// #2147483647
   138b4:	csel	x8, x0, x8, hi  // hi = pmore
   138b8:	cmp	x0, #0x0
   138bc:	csel	x8, x9, x8, eq  // eq = none
   138c0:	adrp	x9, 4d000 <memcpy@GLIBC_2.17>
   138c4:	str	x8, [x9, #2120]
   138c8:	ret

00000000000138cc <msgdomain_list_print@@Base>:
   138cc:	sub	sp, sp, #0x60
   138d0:	stp	x22, x21, [sp, #64]
   138d4:	stp	x20, x19, [sp, #80]
   138d8:	mov	w20, w4
   138dc:	mov	x21, x2
   138e0:	mov	x19, x1
   138e4:	mov	x22, x0
   138e8:	stp	x29, x30, [sp, #16]
   138ec:	stp	x26, x25, [sp, #32]
   138f0:	stp	x24, x23, [sp, #48]
   138f4:	add	x29, sp, #0x10
   138f8:	tbz	w3, #0, 13a3c <msgdomain_list_print@@Base+0x170>
   138fc:	ldrb	w8, [x21, #10]
   13900:	cbnz	w8, 13930 <msgdomain_list_print@@Base+0x64>
   13904:	ldr	x8, [x22, #8]
   13908:	cmp	x8, #0x2
   1390c:	b.cc	13930 <msgdomain_list_print@@Base+0x64>  // b.lo, b.ul, b.last
   13910:	adrp	x9, 4c000 <plural_table_size@@Base+0x12c00>
   13914:	ldrb	w8, [x21, #14]
   13918:	ldr	x9, [x9, #3736]
   1391c:	ldr	x23, [x9]
   13920:	cbz	w8, 13b48 <msgdomain_list_print@@Base+0x27c>
   13924:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   13928:	add	x1, x1, #0x647
   1392c:	b	13b50 <msgdomain_list_print@@Base+0x284>
   13930:	ldrb	w8, [x21, #11]
   13934:	cbz	w8, 13a90 <msgdomain_list_print@@Base+0x1c4>
   13938:	ldrb	w8, [x21, #12]
   1393c:	cbnz	w8, 13a08 <msgdomain_list_print@@Base+0x13c>
   13940:	ldr	x9, [x22, #8]
   13944:	cbz	x9, 13a08 <msgdomain_list_print@@Base+0x13c>
   13948:	ldr	x10, [x22]
   1394c:	mov	x8, xzr
   13950:	mov	x11, xzr
   13954:	ldr	x12, [x10, x11, lsl #3]
   13958:	ldr	x13, [x12, #8]
   1395c:	ldr	x12, [x13, #8]
   13960:	cbz	x12, 1398c <msgdomain_list_print@@Base+0xc0>
   13964:	ldr	x13, [x13]
   13968:	mov	x14, xzr
   1396c:	ldr	x15, [x13, x14, lsl #3]
   13970:	ldr	x16, [x15, #16]
   13974:	cbnz	x16, 13988 <msgdomain_list_print@@Base+0xbc>
   13978:	add	x14, x14, #0x1
   1397c:	cmp	x14, x12
   13980:	b.cc	1396c <msgdomain_list_print@@Base+0xa0>  // b.lo, b.ul, b.last
   13984:	b	1398c <msgdomain_list_print@@Base+0xc0>
   13988:	add	x8, x15, #0x28
   1398c:	add	x11, x11, #0x1
   13990:	cmp	x11, x9
   13994:	b.cc	13954 <msgdomain_list_print@@Base+0x88>  // b.lo, b.ul, b.last
   13998:	cbz	x8, 13a08 <msgdomain_list_print@@Base+0x13c>
   1399c:	adrp	x25, 4c000 <plural_table_size@@Base+0x12c00>
   139a0:	ldr	x25, [x25, #3888]
   139a4:	adrp	x9, 4c000 <plural_table_size@@Base+0x12c00>
   139a8:	ldr	x9, [x9, #3736]
   139ac:	adrp	x10, 37000 <get_search_path@@Base+0xb4c>
   139b0:	strb	wzr, [x25]
   139b4:	ldp	x23, x24, [x8]
   139b8:	ldr	x26, [x9]
   139bc:	ldrb	w9, [x21, #15]
   139c0:	adrp	x8, 37000 <get_search_path@@Base+0xb4c>
   139c4:	add	x8, x8, #0x78a
   139c8:	add	x10, x10, #0x836
   139cc:	cmp	w9, #0x0
   139d0:	csel	x1, x10, x8, eq  // eq = none
   139d4:	mov	w2, #0x5                   	// #5
   139d8:	mov	x0, xzr
   139dc:	bl	acd0 <dcgettext@plt>
   139e0:	mov	x6, x0
   139e4:	mov	w0, #0x2                   	// #2
   139e8:	mov	x4, #0xffffffffffffffff    	// #-1
   139ec:	mov	x1, xzr
   139f0:	mov	x2, x23
   139f4:	mov	x3, x24
   139f8:	mov	w5, wzr
   139fc:	blr	x26
   13a00:	mov	w8, #0x1                   	// #1
   13a04:	strb	w8, [x25]
   13a08:	cbz	x19, 13b80 <msgdomain_list_print@@Base+0x2b4>
   13a0c:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
   13a10:	add	x1, x1, #0x9b8
   13a14:	mov	x0, x19
   13a18:	bl	a8d0 <strcmp@plt>
   13a1c:	cbz	w0, 13b80 <msgdomain_list_print@@Base+0x2b4>
   13a20:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   13a24:	add	x1, x1, #0x891
   13a28:	mov	x0, x19
   13a2c:	bl	a8d0 <strcmp@plt>
   13a30:	cmp	w0, #0x0
   13a34:	cset	w8, eq  // eq = none
   13a38:	b	13b84 <msgdomain_list_print@@Base+0x2b8>
   13a3c:	ldr	x8, [x22, #8]
   13a40:	cbz	x8, 13ef8 <msgdomain_list_print@@Base+0x62c>
   13a44:	ldr	x9, [x22]
   13a48:	mov	x10, xzr
   13a4c:	ldr	x11, [x9, x10, lsl #3]
   13a50:	ldr	x11, [x11, #8]
   13a54:	ldr	x12, [x11, #8]
   13a58:	cbz	x12, 13a80 <msgdomain_list_print@@Base+0x1b4>
   13a5c:	cmp	x12, #0x1
   13a60:	b.ne	138fc <msgdomain_list_print@@Base+0x30>  // b.any
   13a64:	ldr	x11, [x11]
   13a68:	ldr	x11, [x11]
   13a6c:	ldr	x12, [x11]
   13a70:	cbnz	x12, 138fc <msgdomain_list_print@@Base+0x30>
   13a74:	ldr	x11, [x11, #8]
   13a78:	ldrb	w11, [x11]
   13a7c:	cbnz	w11, 138fc <msgdomain_list_print@@Base+0x30>
   13a80:	add	x10, x10, #0x1
   13a84:	cmp	x10, x8
   13a88:	b.cc	13a4c <msgdomain_list_print@@Base+0x180>  // b.lo, b.ul, b.last
   13a8c:	b	13ef8 <msgdomain_list_print@@Base+0x62c>
   13a90:	ldr	x9, [x22, #8]
   13a94:	cbz	x9, 13938 <msgdomain_list_print@@Base+0x6c>
   13a98:	ldr	x10, [x22]
   13a9c:	mov	x8, xzr
   13aa0:	mov	x11, xzr
   13aa4:	ldr	x12, [x10, x11, lsl #3]
   13aa8:	ldr	x13, [x12, #8]
   13aac:	ldr	x12, [x13, #8]
   13ab0:	cbz	x12, 13adc <msgdomain_list_print@@Base+0x210>
   13ab4:	ldr	x13, [x13]
   13ab8:	mov	x14, xzr
   13abc:	ldr	x15, [x13, x14, lsl #3]
   13ac0:	ldr	x16, [x15]
   13ac4:	cbnz	x16, 13ad8 <msgdomain_list_print@@Base+0x20c>
   13ac8:	add	x14, x14, #0x1
   13acc:	cmp	x14, x12
   13ad0:	b.cc	13abc <msgdomain_list_print@@Base+0x1f0>  // b.lo, b.ul, b.last
   13ad4:	b	13adc <msgdomain_list_print@@Base+0x210>
   13ad8:	add	x8, x15, #0x28
   13adc:	add	x11, x11, #0x1
   13ae0:	cmp	x11, x9
   13ae4:	b.cc	13aa4 <msgdomain_list_print@@Base+0x1d8>  // b.lo, b.ul, b.last
   13ae8:	cbz	x8, 13938 <msgdomain_list_print@@Base+0x6c>
   13aec:	adrp	x25, 4c000 <plural_table_size@@Base+0x12c00>
   13af0:	ldr	x25, [x25, #3888]
   13af4:	adrp	x9, 4c000 <plural_table_size@@Base+0x12c00>
   13af8:	ldr	x9, [x9, #3736]
   13afc:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   13b00:	strb	wzr, [x25]
   13b04:	ldp	x23, x24, [x8]
   13b08:	ldr	x26, [x9]
   13b0c:	add	x1, x1, #0x729
   13b10:	mov	w2, #0x5                   	// #5
   13b14:	mov	x0, xzr
   13b18:	bl	acd0 <dcgettext@plt>
   13b1c:	mov	x6, x0
   13b20:	mov	w0, #0x2                   	// #2
   13b24:	mov	x4, #0xffffffffffffffff    	// #-1
   13b28:	mov	x1, xzr
   13b2c:	mov	x2, x23
   13b30:	mov	x3, x24
   13b34:	mov	w5, wzr
   13b38:	blr	x26
   13b3c:	mov	w8, #0x1                   	// #1
   13b40:	strb	w8, [x25]
   13b44:	b	13938 <msgdomain_list_print@@Base+0x6c>
   13b48:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   13b4c:	add	x1, x1, #0x6c9
   13b50:	mov	w2, #0x5                   	// #5
   13b54:	mov	x0, xzr
   13b58:	bl	acd0 <dcgettext@plt>
   13b5c:	mov	x6, x0
   13b60:	mov	w0, #0x2                   	// #2
   13b64:	mov	x1, xzr
   13b68:	mov	x2, xzr
   13b6c:	mov	x3, xzr
   13b70:	mov	x4, xzr
   13b74:	mov	w5, wzr
   13b78:	blr	x23
   13b7c:	cbnz	x19, 13a0c <msgdomain_list_print@@Base+0x140>
   13b80:	mov	w8, #0x1                   	// #1
   13b84:	adrp	x25, 4c000 <plural_table_size@@Base+0x12c00>
   13b88:	ldrb	w9, [x21, #9]
   13b8c:	ldr	x25, [x25, #3776]
   13b90:	cbz	w9, 13bbc <msgdomain_list_print@@Base+0x2f0>
   13b94:	ldr	w9, [x25]
   13b98:	cmp	w9, #0x2
   13b9c:	b.eq	13c04 <msgdomain_list_print@@Base+0x338>  // b.none
   13ba0:	cmp	w9, #0x1
   13ba4:	b.ne	13bbc <msgdomain_list_print@@Base+0x2f0>  // b.any
   13ba8:	cbz	w8, 13be8 <msgdomain_list_print@@Base+0x31c>
   13bac:	mov	w0, #0x1                   	// #1
   13bb0:	bl	ac00 <isatty@plt>
   13bb4:	cbnz	w0, 13c08 <msgdomain_list_print@@Base+0x33c>
   13bb8:	b	13bc0 <msgdomain_list_print@@Base+0x2f4>
   13bbc:	tbz	w8, #0, 13be8 <msgdomain_list_print@@Base+0x31c>
   13bc0:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   13bc4:	ldr	x8, [x8, #3856]
   13bc8:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   13bcc:	add	x1, x1, #0x8bc
   13bd0:	mov	w2, #0x5                   	// #5
   13bd4:	ldr	x23, [x8]
   13bd8:	mov	x0, xzr
   13bdc:	bl	acd0 <dcgettext@plt>
   13be0:	mov	x19, x0
   13be4:	b	13c98 <msgdomain_list_print@@Base+0x3cc>
   13be8:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   13bec:	add	x1, x1, #0x92d
   13bf0:	mov	x0, x19
   13bf4:	bl	a3e0 <fopen@plt>
   13bf8:	cbz	x0, 13c28 <msgdomain_list_print@@Base+0x35c>
   13bfc:	mov	x23, x0
   13c00:	b	13c98 <msgdomain_list_print@@Base+0x3cc>
   13c04:	tbz	w8, #0, 13e00 <msgdomain_list_print@@Base+0x534>
   13c08:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   13c0c:	add	x1, x1, #0x8bc
   13c10:	mov	w2, #0x5                   	// #5
   13c14:	mov	x0, xzr
   13c18:	bl	acd0 <dcgettext@plt>
   13c1c:	mov	x19, x0
   13c20:	mov	w23, #0x1                   	// #1
   13c24:	b	13e84 <msgdomain_list_print@@Base+0x5b8>
   13c28:	bl	ade0 <__errno_location@plt>
   13c2c:	ldr	w0, [x0]
   13c30:	bl	a720 <strerror@plt>
   13c34:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   13c38:	ldr	x8, [x8, #3736]
   13c3c:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   13c40:	mov	x23, x0
   13c44:	add	x1, x1, #0x89d
   13c48:	ldr	x24, [x8]
   13c4c:	mov	w2, #0x5                   	// #5
   13c50:	mov	x0, xzr
   13c54:	bl	acd0 <dcgettext@plt>
   13c58:	mov	x1, x19
   13c5c:	bl	aa20 <xasprintf@plt>
   13c60:	mov	x1, x0
   13c64:	adrp	x0, 3b000 <plural_table_size@@Base+0x1c00>
   13c68:	add	x0, x0, #0x2a7
   13c6c:	mov	x2, x23
   13c70:	bl	aa20 <xasprintf@plt>
   13c74:	mov	x6, x0
   13c78:	mov	w0, #0x2                   	// #2
   13c7c:	mov	x1, xzr
   13c80:	mov	x2, xzr
   13c84:	mov	x3, xzr
   13c88:	mov	x4, xzr
   13c8c:	mov	w5, wzr
   13c90:	blr	x24
   13c94:	mov	x23, xzr
   13c98:	mov	x0, x23
   13c9c:	bl	a100 <file_ostream_create@plt>
   13ca0:	ldrb	w8, [x21, #9]
   13ca4:	mov	x24, x0
   13ca8:	cbz	w8, 13d2c <msgdomain_list_print@@Base+0x460>
   13cac:	ldr	w8, [x25]
   13cb0:	cmp	w8, #0x3
   13cb4:	b.ne	13d2c <msgdomain_list_print@@Base+0x460>  // b.any
   13cb8:	adrp	x25, 4c000 <plural_table_size@@Base+0x12c00>
   13cbc:	ldr	x8, [x22, #32]
   13cc0:	ldr	x25, [x25, #3952]
   13cc4:	ldr	x9, [x25]
   13cc8:	cmp	x8, x9
   13ccc:	b.eq	13cf0 <msgdomain_list_print@@Base+0x424>  // b.none
   13cd0:	mov	x0, x22
   13cd4:	mov	w1, wzr
   13cd8:	bl	a060 <msgdomain_list_copy@plt>
   13cdc:	ldr	x1, [x25]
   13ce0:	mov	w2, wzr
   13ce4:	mov	x3, xzr
   13ce8:	bl	a170 <iconv_msgdomain_list@plt>
   13cec:	mov	x22, x0
   13cf0:	adrp	x0, 37000 <get_search_path@@Base+0xb4c>
   13cf4:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   13cf8:	adrp	x2, 37000 <get_search_path@@Base+0xb4c>
   13cfc:	adrp	x3, 37000 <get_search_path@@Base+0xb4c>
   13d00:	add	x0, x0, #0x8cc
   13d04:	add	x1, x1, #0x8d5
   13d08:	add	x2, x2, #0x8e6
   13d0c:	add	x3, x3, #0x900
   13d10:	bl	ae90 <style_file_prepare@plt>
   13d14:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   13d18:	ldr	x8, [x8, #3840]
   13d1c:	mov	x0, x24
   13d20:	ldr	x1, [x8]
   13d24:	bl	af20 <html_styled_ostream_create@plt>
   13d28:	b	13d38 <msgdomain_list_print@@Base+0x46c>
   13d2c:	mov	x0, x24
   13d30:	mov	w1, wzr
   13d34:	bl	a210 <noop_styled_ostream_create@plt>
   13d38:	adrp	x9, 4d000 <memcpy@GLIBC_2.17>
   13d3c:	ldr	x8, [x21]
   13d40:	ldr	x2, [x9, #2120]
   13d44:	mov	x21, x0
   13d48:	and	w3, w20, #0x1
   13d4c:	mov	x0, x22
   13d50:	mov	x1, x21
   13d54:	blr	x8
   13d58:	mov	x0, x21
   13d5c:	bl	a310 <ostream_free@plt>
   13d60:	mov	x0, x24
   13d64:	bl	a310 <ostream_free@plt>
   13d68:	mov	x0, x23
   13d6c:	bl	a860 <fwriteerror@plt>
   13d70:	cbz	w0, 13ef8 <msgdomain_list_print@@Base+0x62c>
   13d74:	bl	ade0 <__errno_location@plt>
   13d78:	ldr	w0, [x0]
   13d7c:	bl	a720 <strerror@plt>
   13d80:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   13d84:	ldr	x8, [x8, #3736]
   13d88:	mov	x20, x0
   13d8c:	mov	w2, #0x5                   	// #5
   13d90:	mov	x0, xzr
   13d94:	ldr	x1, [x8]
   13d98:	str	x1, [sp, #8]
   13d9c:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   13da0:	add	x1, x1, #0x90f
   13da4:	bl	acd0 <dcgettext@plt>
   13da8:	mov	x1, x19
   13dac:	bl	aa20 <xasprintf@plt>
   13db0:	mov	x1, x0
   13db4:	adrp	x0, 3b000 <plural_table_size@@Base+0x1c00>
   13db8:	add	x0, x0, #0x2a7
   13dbc:	mov	x2, x20
   13dc0:	bl	aa20 <xasprintf@plt>
   13dc4:	ldr	x7, [sp, #8]
   13dc8:	ldp	x20, x19, [sp, #80]
   13dcc:	ldp	x22, x21, [sp, #64]
   13dd0:	ldp	x24, x23, [sp, #48]
   13dd4:	ldp	x26, x25, [sp, #32]
   13dd8:	ldp	x29, x30, [sp, #16]
   13ddc:	mov	x6, x0
   13de0:	mov	w0, #0x2                   	// #2
   13de4:	mov	x1, xzr
   13de8:	mov	x2, xzr
   13dec:	mov	x3, xzr
   13df0:	mov	x4, xzr
   13df4:	mov	w5, wzr
   13df8:	add	sp, sp, #0x60
   13dfc:	br	x7
   13e00:	mov	w1, #0x241                 	// #577
   13e04:	mov	w2, #0x1b6                 	// #438
   13e08:	mov	x0, x19
   13e0c:	bl	a440 <open@plt>
   13e10:	mov	w23, w0
   13e14:	tbz	w0, #31, 13e84 <msgdomain_list_print@@Base+0x5b8>
   13e18:	bl	ade0 <__errno_location@plt>
   13e1c:	ldr	w0, [x0]
   13e20:	bl	a720 <strerror@plt>
   13e24:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   13e28:	ldr	x8, [x8, #3736]
   13e2c:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   13e30:	mov	x24, x0
   13e34:	add	x1, x1, #0x89d
   13e38:	ldr	x25, [x8]
   13e3c:	mov	w2, #0x5                   	// #5
   13e40:	mov	x0, xzr
   13e44:	bl	acd0 <dcgettext@plt>
   13e48:	mov	x1, x19
   13e4c:	bl	aa20 <xasprintf@plt>
   13e50:	mov	x1, x0
   13e54:	adrp	x0, 3b000 <plural_table_size@@Base+0x1c00>
   13e58:	add	x0, x0, #0x2a7
   13e5c:	mov	x2, x24
   13e60:	bl	aa20 <xasprintf@plt>
   13e64:	mov	x6, x0
   13e68:	mov	w0, #0x2                   	// #2
   13e6c:	mov	x1, xzr
   13e70:	mov	x2, xzr
   13e74:	mov	x3, xzr
   13e78:	mov	x4, xzr
   13e7c:	mov	w5, wzr
   13e80:	blr	x25
   13e84:	adrp	x0, 37000 <get_search_path@@Base+0xb4c>
   13e88:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   13e8c:	adrp	x2, 37000 <get_search_path@@Base+0xb4c>
   13e90:	adrp	x3, 37000 <get_search_path@@Base+0xb4c>
   13e94:	add	x0, x0, #0x8cc
   13e98:	add	x1, x1, #0x8d5
   13e9c:	add	x2, x2, #0x8e6
   13ea0:	add	x3, x3, #0x900
   13ea4:	bl	ae90 <style_file_prepare@plt>
   13ea8:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   13eac:	ldr	x8, [x8, #3840]
   13eb0:	mov	w0, w23
   13eb4:	mov	x1, x19
   13eb8:	mov	w2, wzr
   13ebc:	ldr	x3, [x8]
   13ec0:	bl	a830 <styled_ostream_create@plt>
   13ec4:	adrp	x9, 4d000 <memcpy@GLIBC_2.17>
   13ec8:	ldr	x8, [x21]
   13ecc:	ldr	x2, [x9, #2120]
   13ed0:	mov	x21, x0
   13ed4:	and	w3, w20, #0x1
   13ed8:	mov	x0, x22
   13edc:	mov	x1, x21
   13ee0:	blr	x8
   13ee4:	mov	x0, x21
   13ee8:	bl	a310 <ostream_free@plt>
   13eec:	mov	w0, w23
   13ef0:	bl	a730 <close@plt>
   13ef4:	tbnz	w0, #31, 13d74 <msgdomain_list_print@@Base+0x4a8>
   13ef8:	ldp	x20, x19, [sp, #80]
   13efc:	ldp	x22, x21, [sp, #64]
   13f00:	ldp	x24, x23, [sp, #48]
   13f04:	ldp	x26, x25, [sp, #32]
   13f08:	ldp	x29, x30, [sp, #16]
   13f0c:	add	sp, sp, #0x60
   13f10:	ret

0000000000013f14 <msgdomain_list_sort_by_msgid@@Base>:
   13f14:	stp	x29, x30, [sp, #-48]!
   13f18:	stp	x20, x19, [sp, #32]
   13f1c:	ldr	x8, [x0, #8]
   13f20:	str	x21, [sp, #16]
   13f24:	mov	x29, sp
   13f28:	cbz	x8, 13f70 <msgdomain_list_sort_by_msgid@@Base+0x5c>
   13f2c:	adrp	x20, 13000 <string_list_member@@Base+0x28>
   13f30:	mov	x19, x0
   13f34:	mov	x21, xzr
   13f38:	add	x20, x20, #0xf80
   13f3c:	ldr	x9, [x19]
   13f40:	ldr	x9, [x9, x21, lsl #3]
   13f44:	ldr	x9, [x9, #8]
   13f48:	ldr	x1, [x9, #8]
   13f4c:	cbz	x1, 13f64 <msgdomain_list_sort_by_msgid@@Base+0x50>
   13f50:	ldr	x0, [x9]
   13f54:	mov	w2, #0x8                   	// #8
   13f58:	mov	x3, x20
   13f5c:	bl	a2f0 <qsort@plt>
   13f60:	ldr	x8, [x19, #8]
   13f64:	add	x21, x21, #0x1
   13f68:	cmp	x21, x8
   13f6c:	b.cc	13f3c <msgdomain_list_sort_by_msgid@@Base+0x28>  // b.lo, b.ul, b.last
   13f70:	ldp	x20, x19, [sp, #32]
   13f74:	ldr	x21, [sp, #16]
   13f78:	ldp	x29, x30, [sp], #48
   13f7c:	ret
   13f80:	stp	x29, x30, [sp, #-32]!
   13f84:	stp	x20, x19, [sp, #16]
   13f88:	ldr	x19, [x0]
   13f8c:	ldr	x20, [x1]
   13f90:	mov	x29, sp
   13f94:	ldr	x0, [x19, #8]
   13f98:	ldr	x1, [x20, #8]
   13f9c:	bl	a8d0 <strcmp@plt>
   13fa0:	cbz	w0, 13fb0 <msgdomain_list_sort_by_msgid@@Base+0x9c>
   13fa4:	ldp	x20, x19, [sp, #16]
   13fa8:	ldp	x29, x30, [sp], #32
   13fac:	ret
   13fb0:	ldr	x0, [x19]
   13fb4:	ldr	x1, [x20]
   13fb8:	cmp	x0, x1
   13fbc:	b.eq	13fd4 <msgdomain_list_sort_by_msgid@@Base+0xc0>  // b.none
   13fc0:	cbz	x0, 13fdc <msgdomain_list_sort_by_msgid@@Base+0xc8>
   13fc4:	cbz	x1, 13fe4 <msgdomain_list_sort_by_msgid@@Base+0xd0>
   13fc8:	ldp	x20, x19, [sp, #16]
   13fcc:	ldp	x29, x30, [sp], #32
   13fd0:	b	a8d0 <strcmp@plt>
   13fd4:	mov	w0, wzr
   13fd8:	b	13fa4 <msgdomain_list_sort_by_msgid@@Base+0x90>
   13fdc:	mov	w0, #0xffffffff            	// #-1
   13fe0:	b	13fa4 <msgdomain_list_sort_by_msgid@@Base+0x90>
   13fe4:	mov	w0, #0x1                   	// #1
   13fe8:	b	13fa4 <msgdomain_list_sort_by_msgid@@Base+0x90>

0000000000013fec <msgdomain_list_sort_by_filepos@@Base>:
   13fec:	stp	x29, x30, [sp, #-64]!
   13ff0:	stp	x22, x21, [sp, #32]
   13ff4:	stp	x20, x19, [sp, #48]
   13ff8:	ldr	x8, [x0, #8]
   13ffc:	str	x23, [sp, #16]
   14000:	mov	x29, sp
   14004:	cbz	x8, 140b4 <msgdomain_list_sort_by_filepos@@Base+0xc8>
   14008:	adrp	x20, 14000 <msgdomain_list_sort_by_filepos@@Base+0x14>
   1400c:	mov	x19, x0
   14010:	mov	x21, xzr
   14014:	add	x20, x20, #0x184
   14018:	ldr	x9, [x19]
   1401c:	ldr	x9, [x9, x21, lsl #3]
   14020:	ldr	x22, [x9, #8]
   14024:	ldr	x9, [x22, #8]
   14028:	cbz	x9, 14064 <msgdomain_list_sort_by_filepos@@Base+0x78>
   1402c:	mov	x23, xzr
   14030:	ldr	x8, [x22]
   14034:	ldr	x8, [x8, x23, lsl #3]
   14038:	ldr	x1, [x8, #72]
   1403c:	cbz	x1, 14054 <msgdomain_list_sort_by_filepos@@Base+0x68>
   14040:	ldr	x0, [x8, #80]
   14044:	mov	w2, #0x10                  	// #16
   14048:	mov	x3, x20
   1404c:	bl	a2f0 <qsort@plt>
   14050:	ldr	x9, [x22, #8]
   14054:	add	x23, x23, #0x1
   14058:	cmp	x23, x9
   1405c:	b.cc	14030 <msgdomain_list_sort_by_filepos@@Base+0x44>  // b.lo, b.ul, b.last
   14060:	ldr	x8, [x19, #8]
   14064:	add	x21, x21, #0x1
   14068:	cmp	x21, x8
   1406c:	b.cc	14018 <msgdomain_list_sort_by_filepos@@Base+0x2c>  // b.lo, b.ul, b.last
   14070:	cbz	x8, 140b4 <msgdomain_list_sort_by_filepos@@Base+0xc8>
   14074:	adrp	x20, 14000 <msgdomain_list_sort_by_filepos@@Base+0x14>
   14078:	mov	x21, xzr
   1407c:	add	x20, x20, #0xc8
   14080:	ldr	x9, [x19]
   14084:	ldr	x9, [x9, x21, lsl #3]
   14088:	ldr	x9, [x9, #8]
   1408c:	ldr	x1, [x9, #8]
   14090:	cbz	x1, 140a8 <msgdomain_list_sort_by_filepos@@Base+0xbc>
   14094:	ldr	x0, [x9]
   14098:	mov	w2, #0x8                   	// #8
   1409c:	mov	x3, x20
   140a0:	bl	a2f0 <qsort@plt>
   140a4:	ldr	x8, [x19, #8]
   140a8:	add	x21, x21, #0x1
   140ac:	cmp	x21, x8
   140b0:	b.cc	14080 <msgdomain_list_sort_by_filepos@@Base+0x94>  // b.lo, b.ul, b.last
   140b4:	ldp	x20, x19, [sp, #48]
   140b8:	ldp	x22, x21, [sp, #32]
   140bc:	ldr	x23, [sp, #16]
   140c0:	ldp	x29, x30, [sp], #64
   140c4:	ret
   140c8:	stp	x29, x30, [sp, #-48]!
   140cc:	stp	x22, x21, [sp, #16]
   140d0:	stp	x20, x19, [sp, #32]
   140d4:	ldr	x19, [x0]
   140d8:	ldr	x20, [x1]
   140dc:	mov	x29, sp
   140e0:	ldr	x9, [x19, #72]
   140e4:	ldr	x8, [x20, #72]
   140e8:	cbz	x9, 14150 <msgdomain_list_sort_by_filepos@@Base+0x164>
   140ec:	cbz	x8, 14160 <msgdomain_list_sort_by_filepos@@Base+0x174>
   140f0:	ldr	x21, [x19, #80]
   140f4:	ldr	x22, [x20, #80]
   140f8:	ldr	x0, [x21]
   140fc:	ldr	x1, [x22]
   14100:	bl	a8d0 <strcmp@plt>
   14104:	cbnz	w0, 14164 <msgdomain_list_sort_by_filepos@@Base+0x178>
   14108:	ldr	w8, [x21, #8]
   1410c:	ldr	w9, [x22, #8]
   14110:	subs	w0, w8, w9
   14114:	b.ne	14164 <msgdomain_list_sort_by_filepos@@Base+0x178>  // b.any
   14118:	ldr	x0, [x19, #8]
   1411c:	ldr	x1, [x20, #8]
   14120:	bl	a8d0 <strcmp@plt>
   14124:	cbnz	w0, 14164 <msgdomain_list_sort_by_filepos@@Base+0x178>
   14128:	ldr	x0, [x19]
   1412c:	ldr	x1, [x20]
   14130:	cmp	x0, x1
   14134:	b.eq	14174 <msgdomain_list_sort_by_filepos@@Base+0x188>  // b.none
   14138:	cbz	x0, 1417c <msgdomain_list_sort_by_filepos@@Base+0x190>
   1413c:	cbz	x1, 14160 <msgdomain_list_sort_by_filepos@@Base+0x174>
   14140:	ldp	x20, x19, [sp, #32]
   14144:	ldp	x22, x21, [sp, #16]
   14148:	ldp	x29, x30, [sp], #48
   1414c:	b	a8d0 <strcmp@plt>
   14150:	cmp	x8, #0x0
   14154:	mov	w8, #0x1                   	// #1
   14158:	cneg	w0, w8, ne  // ne = any
   1415c:	b	14164 <msgdomain_list_sort_by_filepos@@Base+0x178>
   14160:	mov	w0, #0x1                   	// #1
   14164:	ldp	x20, x19, [sp, #32]
   14168:	ldp	x22, x21, [sp, #16]
   1416c:	ldp	x29, x30, [sp], #48
   14170:	ret
   14174:	mov	w0, wzr
   14178:	b	14164 <msgdomain_list_sort_by_filepos@@Base+0x178>
   1417c:	mov	w0, #0xffffffff            	// #-1
   14180:	b	14164 <msgdomain_list_sort_by_filepos@@Base+0x178>
   14184:	stp	x29, x30, [sp, #-32]!
   14188:	stp	x20, x19, [sp, #16]
   1418c:	mov	x19, x1
   14190:	mov	x20, x0
   14194:	ldr	x0, [x0]
   14198:	ldr	x1, [x1]
   1419c:	mov	x29, sp
   141a0:	bl	a8d0 <strcmp@plt>
   141a4:	cbnz	w0, 141b4 <msgdomain_list_sort_by_filepos@@Base+0x1c8>
   141a8:	ldr	w8, [x20, #8]
   141ac:	ldr	w9, [x19, #8]
   141b0:	sub	w0, w8, w9
   141b4:	ldp	x20, x19, [sp, #16]
   141b8:	ldp	x29, x30, [sp], #32
   141bc:	ret
   141c0:	stp	x29, x30, [sp, #-96]!
   141c4:	stp	x28, x27, [sp, #16]
   141c8:	stp	x26, x25, [sp, #32]
   141cc:	stp	x24, x23, [sp, #48]
   141d0:	stp	x22, x21, [sp, #64]
   141d4:	stp	x20, x19, [sp, #80]
   141d8:	ldr	x8, [x0, #8]
   141dc:	mov	w22, w3
   141e0:	mov	x19, x2
   141e4:	mov	x23, x0
   141e8:	cmp	x8, #0x1
   141ec:	mov	x20, x1
   141f0:	mov	x29, sp
   141f4:	b.ne	14208 <msgdomain_list_sort_by_filepos@@Base+0x21c>  // b.any
   141f8:	ldr	x8, [x23]
   141fc:	ldr	x8, [x8]
   14200:	ldr	x21, [x8, #8]
   14204:	b	14214 <msgdomain_list_sort_by_filepos@@Base+0x228>
   14208:	mov	w0, wzr
   1420c:	bl	af00 <message_list_alloc@plt>
   14210:	mov	x21, x0
   14214:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   14218:	ldr	x1, [x23, #32]
   1421c:	ldr	x8, [x8, #3952]
   14220:	mov	x0, x21
   14224:	mov	x3, xzr
   14228:	ldr	x2, [x8]
   1422c:	bl	a330 <iconv_message_list@plt>
   14230:	ldr	x8, [x21, #8]
   14234:	cbz	x8, 143f0 <msgdomain_list_sort_by_filepos@@Base+0x404>
   14238:	mov	x23, xzr
   1423c:	ldr	x8, [x21]
   14240:	ldr	x24, [x8, x23, lsl #3]
   14244:	ldr	x8, [x24, #56]
   14248:	cbz	x8, 14284 <msgdomain_list_sort_by_filepos@@Base+0x298>
   1424c:	ldr	x9, [x8, #8]
   14250:	cbz	x9, 14284 <msgdomain_list_sort_by_filepos@@Base+0x298>
   14254:	mov	x25, xzr
   14258:	ldr	x8, [x8]
   1425c:	ldr	x0, [x8, x25, lsl #3]
   14260:	bl	1440c <msgdomain_list_sort_by_filepos@@Base+0x420>
   14264:	ldr	x8, [x24, #56]
   14268:	ldr	x8, [x8]
   1426c:	str	x0, [x8, x25, lsl #3]
   14270:	ldr	x8, [x24, #56]
   14274:	add	x25, x25, #0x1
   14278:	ldr	x9, [x8, #8]
   1427c:	cmp	x25, x9
   14280:	b.cc	14258 <msgdomain_list_sort_by_filepos@@Base+0x26c>  // b.lo, b.ul, b.last
   14284:	ldr	x8, [x24, #64]
   14288:	cbz	x8, 142c4 <msgdomain_list_sort_by_filepos@@Base+0x2d8>
   1428c:	ldr	x9, [x8, #8]
   14290:	cbz	x9, 142c4 <msgdomain_list_sort_by_filepos@@Base+0x2d8>
   14294:	mov	x25, xzr
   14298:	ldr	x8, [x8]
   1429c:	ldr	x0, [x8, x25, lsl #3]
   142a0:	bl	1440c <msgdomain_list_sort_by_filepos@@Base+0x420>
   142a4:	ldr	x8, [x24, #64]
   142a8:	ldr	x8, [x8]
   142ac:	str	x0, [x8, x25, lsl #3]
   142b0:	ldr	x8, [x24, #64]
   142b4:	add	x25, x25, #0x1
   142b8:	ldr	x9, [x8, #8]
   142bc:	cmp	x25, x9
   142c0:	b.cc	14298 <msgdomain_list_sort_by_filepos@@Base+0x2ac>  // b.lo, b.ul, b.last
   142c4:	ldr	x8, [x21, #8]
   142c8:	add	x23, x23, #0x1
   142cc:	cmp	x23, x8
   142d0:	b.cc	1423c <msgdomain_list_sort_by_filepos@@Base+0x250>  // b.lo, b.ul, b.last
   142d4:	cbz	x8, 143f0 <msgdomain_list_sort_by_filepos@@Base+0x404>
   142d8:	adrp	x23, 37000 <get_search_path@@Base+0xb4c>
   142dc:	adrp	x24, 37000 <get_search_path@@Base+0xb4c>
   142e0:	adrp	x25, 38000 <get_search_path@@Base+0x1b4c>
   142e4:	mov	w28, wzr
   142e8:	mov	x27, xzr
   142ec:	add	x23, x23, #0x1a1
   142f0:	and	w22, w22, #0x1
   142f4:	add	x24, x24, #0x940
   142f8:	add	x25, x25, #0x758
   142fc:	ldr	x9, [x21]
   14300:	ldr	x26, [x9, x27, lsl #3]
   14304:	ldr	x9, [x26, #16]
   14308:	cbnz	x9, 143e4 <msgdomain_list_sort_by_filepos@@Base+0x3f8>
   1430c:	ldrb	w9, [x26, #256]
   14310:	cbnz	w9, 143e4 <msgdomain_list_sort_by_filepos@@Base+0x3f8>
   14314:	tbz	w28, #0, 14324 <msgdomain_list_sort_by_filepos@@Base+0x338>
   14318:	mov	x0, x20
   1431c:	mov	x1, x23
   14320:	bl	aaa0 <ostream_write_str@plt>
   14324:	mov	x0, x26
   14328:	mov	x1, x20
   1432c:	bl	a5f0 <message_print_comment@plt>
   14330:	mov	x0, x26
   14334:	mov	x1, x20
   14338:	bl	ad60 <message_print_comment_dot@plt>
   1433c:	mov	x0, x26
   14340:	mov	x1, x20
   14344:	mov	w2, wzr
   14348:	mov	x3, x19
   1434c:	bl	a150 <message_print_comment_filepos@plt>
   14350:	mov	x0, x26
   14354:	mov	x1, x20
   14358:	mov	w2, w22
   1435c:	bl	aa90 <message_print_comment_flags@plt>
   14360:	ldr	x8, [x26]
   14364:	cbnz	x8, 14374 <msgdomain_list_sort_by_filepos@@Base+0x388>
   14368:	ldr	x9, [x26, #8]
   1436c:	ldrb	w9, [x9]
   14370:	cbz	w9, 14398 <msgdomain_list_sort_by_filepos@@Base+0x3ac>
   14374:	ldr	x9, [x26, #24]
   14378:	ldrb	w9, [x9]
   1437c:	cbz	w9, 14398 <msgdomain_list_sort_by_filepos@@Base+0x3ac>
   14380:	ldrb	w9, [x26, #88]
   14384:	cbz	w9, 143a4 <msgdomain_list_sort_by_filepos@@Base+0x3b8>
   14388:	cbnz	x8, 14398 <msgdomain_list_sort_by_filepos@@Base+0x3ac>
   1438c:	ldr	x8, [x26, #8]
   14390:	ldrb	w8, [x8]
   14394:	cbz	w8, 143a4 <msgdomain_list_sort_by_filepos@@Base+0x3b8>
   14398:	mov	x0, x20
   1439c:	mov	x1, x24
   143a0:	bl	aaa0 <ostream_write_str@plt>
   143a4:	ldr	x1, [x26, #8]
   143a8:	mov	w2, #0x1                   	// #1
   143ac:	mov	x0, x20
   143b0:	mov	w28, #0x1                   	// #1
   143b4:	bl	14600 <msgdomain_list_sort_by_filepos@@Base+0x614>
   143b8:	mov	x0, x20
   143bc:	mov	x1, x25
   143c0:	bl	aaa0 <ostream_write_str@plt>
   143c4:	ldr	x1, [x26, #24]
   143c8:	mov	x0, x20
   143cc:	mov	w2, wzr
   143d0:	bl	14600 <msgdomain_list_sort_by_filepos@@Base+0x614>
   143d4:	mov	x0, x20
   143d8:	mov	x1, x23
   143dc:	bl	aaa0 <ostream_write_str@plt>
   143e0:	ldr	x8, [x21, #8]
   143e4:	add	x27, x27, #0x1
   143e8:	cmp	x27, x8
   143ec:	b.cc	142fc <msgdomain_list_sort_by_filepos@@Base+0x310>  // b.lo, b.ul, b.last
   143f0:	ldp	x20, x19, [sp, #80]
   143f4:	ldp	x22, x21, [sp, #64]
   143f8:	ldp	x24, x23, [sp, #48]
   143fc:	ldp	x26, x25, [sp, #32]
   14400:	ldp	x28, x27, [sp, #16]
   14404:	ldp	x29, x30, [sp], #96
   14408:	ret
   1440c:	sub	sp, sp, #0x60
   14410:	stp	x29, x30, [sp, #16]
   14414:	stp	x26, x25, [sp, #32]
   14418:	stp	x24, x23, [sp, #48]
   1441c:	stp	x22, x21, [sp, #64]
   14420:	stp	x20, x19, [sp, #80]
   14424:	add	x29, sp, #0x10
   14428:	mov	x19, x0
   1442c:	bl	a7d0 <is_ascii_string@plt>
   14430:	tbz	w0, #0, 1443c <msgdomain_list_sort_by_filepos@@Base+0x450>
   14434:	mov	x20, x19
   14438:	b	145e0 <msgdomain_list_sort_by_filepos@@Base+0x5f4>
   1443c:	mov	x0, x19
   14440:	bl	a0d0 <strlen@plt>
   14444:	cmp	x0, #0x1
   14448:	b.lt	144b4 <msgdomain_list_sort_by_filepos@@Base+0x4c8>  // b.tstop
   1444c:	mov	x21, xzr
   14450:	add	x22, x19, x0
   14454:	mov	w23, #0xc                   	// #12
   14458:	mov	w24, #0x6                   	// #6
   1445c:	mov	x20, x19
   14460:	ldrsb	w8, [x20]
   14464:	tbnz	w8, #31, 14478 <msgdomain_list_sort_by_filepos@@Base+0x48c>
   14468:	and	w8, w8, #0xff
   1446c:	stur	w8, [x29, #-4]
   14470:	mov	w0, #0x1                   	// #1
   14474:	b	1448c <msgdomain_list_sort_by_filepos@@Base+0x4a0>
   14478:	sub	x2, x22, x20
   1447c:	sub	x0, x29, #0x4
   14480:	mov	x1, x20
   14484:	bl	a820 <u8_mbtouc_aux@plt>
   14488:	ldur	w8, [x29, #-4]
   1448c:	cmp	w8, #0x10, lsl #12
   14490:	csel	x9, x24, x23, cc  // cc = lo, ul, last
   14494:	cmp	w8, #0x80
   14498:	add	x20, x20, w0, sxtw
   1449c:	csinc	x8, x9, xzr, cs  // cs = hs, nlast
   144a0:	cmp	x20, x22
   144a4:	add	x21, x8, x21
   144a8:	b.cc	14460 <msgdomain_list_sort_by_filepos@@Base+0x474>  // b.lo, b.ul, b.last
   144ac:	add	x0, x21, #0x1
   144b0:	b	144b8 <msgdomain_list_sort_by_filepos@@Base+0x4cc>
   144b4:	mov	w0, #0x1                   	// #1
   144b8:	bl	a590 <xmalloc@plt>
   144bc:	mov	x20, x0
   144c0:	mov	x0, x19
   144c4:	bl	a0d0 <strlen@plt>
   144c8:	cmp	x0, #0x1
   144cc:	mov	x21, x20
   144d0:	b.lt	145dc <msgdomain_list_sort_by_filepos@@Base+0x5f0>  // b.tstop
   144d4:	adrp	x24, 37000 <get_search_path@@Base+0xb4c>
   144d8:	adrp	x22, 37000 <get_search_path@@Base+0xb4c>
   144dc:	add	x23, x19, x0
   144e0:	add	x24, x24, #0x942
   144e4:	add	x22, x22, #0x935
   144e8:	mov	w25, #0xd800                	// #55296
   144ec:	mov	x21, x20
   144f0:	ldrsb	w8, [x19]
   144f4:	tbnz	w8, #31, 14508 <msgdomain_list_sort_by_filepos@@Base+0x51c>
   144f8:	and	w8, w8, #0xff
   144fc:	str	w8, [sp, #8]
   14500:	add	x19, x19, #0x1
   14504:	b	14528 <msgdomain_list_sort_by_filepos@@Base+0x53c>
   14508:	sub	x2, x23, x19
   1450c:	add	x0, sp, #0x8
   14510:	mov	x1, x19
   14514:	bl	a820 <u8_mbtouc_aux@plt>
   14518:	ldr	w8, [sp, #8]
   1451c:	add	x19, x19, w0, sxtw
   14520:	cmp	w8, #0x7f
   14524:	b.hi	14538 <msgdomain_list_sort_by_filepos@@Base+0x54c>  // b.pmore
   14528:	strb	w8, [x21], #1
   1452c:	cmp	x19, x23
   14530:	b.cc	144f0 <msgdomain_list_sort_by_filepos@@Base+0x504>  // b.lo, b.ul, b.last
   14534:	b	145dc <msgdomain_list_sort_by_filepos@@Base+0x5f0>
   14538:	lsr	w9, w8, #16
   1453c:	cbnz	w9, 14574 <msgdomain_list_sort_by_filepos@@Base+0x588>
   14540:	lsr	x9, x8, #12
   14544:	ubfx	x10, x8, #8, #4
   14548:	ubfx	x11, x8, #4, #4
   1454c:	and	x8, x8, #0xf
   14550:	ldrb	w2, [x24, x9]
   14554:	ldrb	w3, [x24, x10]
   14558:	ldrb	w4, [x24, x11]
   1455c:	ldrb	w5, [x24, x8]
   14560:	mov	x0, x21
   14564:	mov	x1, x22
   14568:	bl	a280 <sprintf@plt>
   1456c:	add	x21, x21, #0x6
   14570:	b	1452c <msgdomain_list_sort_by_filepos@@Base+0x540>
   14574:	sub	w26, w8, #0x10, lsl #12
   14578:	add	w8, w25, w26, lsr #10
   1457c:	ubfx	x9, x8, #12, #4
   14580:	ubfx	x10, x8, #8, #4
   14584:	ubfx	x11, x8, #4, #4
   14588:	and	x8, x8, #0xf
   1458c:	ldrb	w2, [x24, x9]
   14590:	ldrb	w3, [x24, x10]
   14594:	ldrb	w4, [x24, x11]
   14598:	ldrb	w5, [x24, x8]
   1459c:	mov	x0, x21
   145a0:	mov	x1, x22
   145a4:	bl	a280 <sprintf@plt>
   145a8:	ubfx	w8, w26, #8, #2
   145ac:	ubfx	x9, x26, #4, #4
   145b0:	and	x10, x26, #0xf
   145b4:	orr	x8, x8, #0xc
   145b8:	ldrb	w4, [x24, x9]
   145bc:	ldrb	w3, [x24, x8]
   145c0:	ldrb	w5, [x24, x10]
   145c4:	add	x0, x21, #0x6
   145c8:	mov	w2, #0x64                  	// #100
   145cc:	mov	x1, x22
   145d0:	bl	a280 <sprintf@plt>
   145d4:	add	x21, x21, #0xc
   145d8:	b	1452c <msgdomain_list_sort_by_filepos@@Base+0x540>
   145dc:	strb	wzr, [x21]
   145e0:	mov	x0, x20
   145e4:	ldp	x20, x19, [sp, #80]
   145e8:	ldp	x22, x21, [sp, #64]
   145ec:	ldp	x24, x23, [sp, #48]
   145f0:	ldp	x26, x25, [sp, #32]
   145f4:	ldp	x29, x30, [sp, #16]
   145f8:	add	sp, sp, #0x60
   145fc:	ret
   14600:	sub	sp, sp, #0x70
   14604:	stp	x22, x21, [sp, #80]
   14608:	mov	x21, x0
   1460c:	mov	x0, x1
   14610:	stp	x29, x30, [sp, #16]
   14614:	stp	x28, x27, [sp, #32]
   14618:	stp	x26, x25, [sp, #48]
   1461c:	stp	x24, x23, [sp, #64]
   14620:	stp	x20, x19, [sp, #96]
   14624:	add	x29, sp, #0x10
   14628:	mov	w19, w2
   1462c:	mov	x20, x1
   14630:	bl	a0d0 <strlen@plt>
   14634:	cmp	x0, #0x1
   14638:	b.lt	14864 <msgdomain_list_sort_by_filepos@@Base+0x878>  // b.tstop
   1463c:	mov	x25, #0x5                   	// #5
   14640:	adrp	x22, 37000 <get_search_path@@Base+0xb4c>
   14644:	movk	x25, #0x1200, lsl #16
   14648:	add	x27, x20, x0
   1464c:	mov	w28, #0x1                   	// #1
   14650:	add	x22, x22, #0x953
   14654:	mov	w24, #0xd800                	// #55296
   14658:	movk	x25, #0x800, lsl #48
   1465c:	mov	w26, #0x5c                  	// #92
   14660:	mov	w23, #0x1                   	// #1
   14664:	ldrsb	w8, [x20]
   14668:	tbnz	w8, #31, 1467c <msgdomain_list_sort_by_filepos@@Base+0x690>
   1466c:	and	w8, w8, #0xff
   14670:	stur	w8, [x29, #-4]
   14674:	mov	w0, #0x1                   	// #1
   14678:	b	14690 <msgdomain_list_sort_by_filepos@@Base+0x6a4>
   1467c:	sub	x2, x27, x20
   14680:	sub	x0, x29, #0x4
   14684:	mov	x1, x20
   14688:	bl	a820 <u8_mbtouc_aux@plt>
   1468c:	ldur	w8, [x29, #-4]
   14690:	orr	w9, w23, w19
   14694:	add	x20, x20, w0, sxtw
   14698:	tbz	w9, #0, 146b4 <msgdomain_list_sort_by_filepos@@Base+0x6c8>
   1469c:	cmp	w8, #0x20
   146a0:	b.ne	146b4 <msgdomain_list_sort_by_filepos@@Base+0x6c8>  // b.any
   146a4:	mov	x0, x21
   146a8:	mov	x1, x22
   146ac:	bl	aaa0 <ostream_write_str@plt>
   146b0:	b	146e4 <msgdomain_list_sort_by_filepos@@Base+0x6f8>
   146b4:	sub	w9, w8, #0x21
   146b8:	cmp	w9, #0x3b
   146bc:	b.hi	146f4 <msgdomain_list_sort_by_filepos@@Base+0x708>  // b.pmore
   146c0:	lsl	x9, x28, x9
   146c4:	tst	x9, x25
   146c8:	b.eq	146f4 <msgdomain_list_sort_by_filepos@@Base+0x708>  // b.none
   146cc:	strb	w26, [sp, #4]
   146d0:	strb	w8, [sp, #5]
   146d4:	add	x1, sp, #0x4
   146d8:	mov	w2, #0x2                   	// #2
   146dc:	mov	x0, x21
   146e0:	bl	a880 <ostream_write_mem@plt>
   146e4:	cmp	x20, x27
   146e8:	mov	w23, wzr
   146ec:	b.cc	14664 <msgdomain_list_sort_by_filepos@@Base+0x678>  // b.lo, b.ul, b.last
   146f0:	b	14864 <msgdomain_list_sort_by_filepos@@Base+0x878>
   146f4:	sub	w9, w8, #0x9
   146f8:	cmp	w9, #0x4
   146fc:	b.hi	14758 <msgdomain_list_sort_by_filepos@@Base+0x76c>  // b.pmore
   14700:	adrp	x12, 37000 <get_search_path@@Base+0xb4c>
   14704:	add	x12, x12, #0x930
   14708:	adr	x10, 14718 <msgdomain_list_sort_by_filepos@@Base+0x72c>
   1470c:	ldrb	w11, [x12, x9]
   14710:	add	x10, x10, x11, lsl #2
   14714:	br	x10
   14718:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   1471c:	mov	x0, x21
   14720:	add	x1, x1, #0x956
   14724:	b	146ac <msgdomain_list_sort_by_filepos@@Base+0x6c0>
   14728:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   1472c:	mov	x0, x21
   14730:	add	x1, x1, #0x959
   14734:	b	146ac <msgdomain_list_sort_by_filepos@@Base+0x6c0>
   14738:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   1473c:	mov	x0, x21
   14740:	add	x1, x1, #0x95f
   14744:	b	146ac <msgdomain_list_sort_by_filepos@@Base+0x6c0>
   14748:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   1474c:	mov	x0, x21
   14750:	add	x1, x1, #0x95c
   14754:	b	146ac <msgdomain_list_sort_by_filepos@@Base+0x6c0>
   14758:	sub	w9, w8, #0x20
   1475c:	cmp	w9, #0x5e
   14760:	b.hi	14774 <msgdomain_list_sort_by_filepos@@Base+0x788>  // b.pmore
   14764:	strb	w8, [sp, #4]
   14768:	add	x1, sp, #0x4
   1476c:	mov	w2, #0x1                   	// #1
   14770:	b	146dc <msgdomain_list_sort_by_filepos@@Base+0x6f0>
   14774:	lsr	w9, w8, #16
   14778:	cbnz	w9, 147c4 <msgdomain_list_sort_by_filepos@@Base+0x7d8>
   1477c:	mov	w9, #0x755c                	// #30044
   14780:	strh	w9, [sp, #4]
   14784:	mov	w9, w8
   14788:	adrp	x12, 37000 <get_search_path@@Base+0xb4c>
   1478c:	ubfx	x10, x8, #8, #4
   14790:	ubfx	x8, x8, #4, #4
   14794:	lsr	x11, x9, #12
   14798:	add	x12, x12, #0x942
   1479c:	and	x9, x9, #0xf
   147a0:	ldrb	w10, [x12, x10]
   147a4:	ldrb	w8, [x12, x8]
   147a8:	ldrb	w11, [x12, x11]
   147ac:	ldrb	w9, [x12, x9]
   147b0:	strb	w10, [sp, #7]
   147b4:	strb	w8, [sp, #8]
   147b8:	strb	w11, [sp, #6]
   147bc:	strb	w9, [sp, #9]
   147c0:	b	14858 <msgdomain_list_sort_by_filepos@@Base+0x86c>
   147c4:	sub	w23, w8, #0x10, lsl #12
   147c8:	mov	w8, #0x755c                	// #30044
   147cc:	strh	w8, [sp, #4]
   147d0:	add	w8, w24, w23, lsr #10
   147d4:	adrp	x24, 37000 <get_search_path@@Base+0xb4c>
   147d8:	ubfx	x9, x8, #12, #4
   147dc:	ubfx	x10, x8, #8, #4
   147e0:	ubfx	x11, x8, #4, #4
   147e4:	and	x8, x8, #0xf
   147e8:	add	x24, x24, #0x942
   147ec:	ldrb	w9, [x24, x9]
   147f0:	ldrb	w10, [x24, x10]
   147f4:	ldrb	w11, [x24, x11]
   147f8:	ldrb	w8, [x24, x8]
   147fc:	add	x1, sp, #0x4
   14800:	mov	w2, #0x6                   	// #6
   14804:	mov	x0, x21
   14808:	strb	w9, [sp, #6]
   1480c:	strb	w10, [sp, #7]
   14810:	strb	w11, [sp, #8]
   14814:	strb	w8, [sp, #9]
   14818:	bl	a880 <ostream_write_mem@plt>
   1481c:	mov	w8, #0x755c                	// #30044
   14820:	strh	w8, [sp, #4]
   14824:	ubfx	w8, w23, #8, #2
   14828:	ubfx	x9, x23, #4, #4
   1482c:	and	x10, x23, #0xf
   14830:	orr	x8, x8, #0xc
   14834:	ldrb	w9, [x24, x9]
   14838:	ldrb	w8, [x24, x8]
   1483c:	ldrb	w10, [x24, x10]
   14840:	mov	w24, #0xd800                	// #55296
   14844:	mov	w11, #0x64                  	// #100
   14848:	strb	w11, [sp, #6]
   1484c:	strb	w9, [sp, #8]
   14850:	strb	w8, [sp, #7]
   14854:	strb	w10, [sp, #9]
   14858:	add	x1, sp, #0x4
   1485c:	mov	w2, #0x6                   	// #6
   14860:	b	146dc <msgdomain_list_sort_by_filepos@@Base+0x6f0>
   14864:	ldp	x20, x19, [sp, #96]
   14868:	ldp	x22, x21, [sp, #80]
   1486c:	ldp	x24, x23, [sp, #64]
   14870:	ldp	x26, x25, [sp, #48]
   14874:	ldp	x28, x27, [sp, #32]
   14878:	ldp	x29, x30, [sp, #16]
   1487c:	add	sp, sp, #0x70
   14880:	ret
   14884:	sub	sp, sp, #0x70
   14888:	stp	x29, x30, [sp, #16]
   1488c:	stp	x28, x27, [sp, #32]
   14890:	stp	x26, x25, [sp, #48]
   14894:	stp	x24, x23, [sp, #64]
   14898:	stp	x22, x21, [sp, #80]
   1489c:	stp	x20, x19, [sp, #96]
   148a0:	ldr	x8, [x0, #8]
   148a4:	mov	w20, w3
   148a8:	mov	x21, x0
   148ac:	mov	x19, x1
   148b0:	cmp	x8, #0x1
   148b4:	add	x29, sp, #0x10
   148b8:	b.ne	148cc <msgdomain_list_sort_by_filepos@@Base+0x8e0>  // b.any
   148bc:	ldr	x8, [x21]
   148c0:	ldr	x8, [x8]
   148c4:	ldr	x23, [x8, #8]
   148c8:	b	148d8 <msgdomain_list_sort_by_filepos@@Base+0x8ec>
   148cc:	mov	w0, wzr
   148d0:	bl	af00 <message_list_alloc@plt>
   148d4:	mov	x23, x0
   148d8:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   148dc:	ldr	x1, [x21, #32]
   148e0:	ldr	x8, [x8, #3952]
   148e4:	mov	x0, x23
   148e8:	mov	x3, xzr
   148ec:	ldr	x2, [x8]
   148f0:	bl	a330 <iconv_message_list@plt>
   148f4:	mov	x0, x23
   148f8:	bl	a2c0 <is_ascii_message_list@plt>
   148fc:	tbnz	w0, #0, 14910 <msgdomain_list_sort_by_filepos@@Base+0x924>
   14900:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   14904:	add	x1, x1, #0x967
   14908:	mov	x0, x19
   1490c:	bl	aaa0 <ostream_write_str@plt>
   14910:	ldr	x8, [x23, #8]
   14914:	cbz	x8, 14da4 <msgdomain_list_sort_by_filepos@@Base+0xdb8>
   14918:	adrp	x22, 37000 <get_search_path@@Base+0xb4c>
   1491c:	and	w10, w20, #0x1
   14920:	adrp	x27, 37000 <get_search_path@@Base+0xb4c>
   14924:	adrp	x26, 37000 <get_search_path@@Base+0xb4c>
   14928:	adrp	x20, 37000 <get_search_path@@Base+0xb4c>
   1492c:	mov	w9, wzr
   14930:	mov	x28, xzr
   14934:	add	x22, x22, #0x1a1
   14938:	add	x27, x27, #0x96e
   1493c:	add	x26, x26, #0xd91
   14940:	add	x20, x20, #0x974
   14944:	stur	w10, [x29, #-4]
   14948:	str	x23, [sp]
   1494c:	ldr	x10, [x23]
   14950:	ldr	x25, [x10, x28, lsl #3]
   14954:	ldr	x10, [x25, #16]
   14958:	cbnz	x10, 14d64 <msgdomain_list_sort_by_filepos@@Base+0xd78>
   1495c:	tbz	w9, #0, 1496c <msgdomain_list_sort_by_filepos@@Base+0x980>
   14960:	mov	x0, x19
   14964:	mov	x1, x22
   14968:	bl	aaa0 <ostream_write_str@plt>
   1496c:	ldr	x8, [x25, #56]
   14970:	cbz	x8, 14a60 <msgdomain_list_sort_by_filepos@@Base+0xa74>
   14974:	ldr	x9, [x8, #8]
   14978:	cbz	x9, 14a60 <msgdomain_list_sort_by_filepos@@Base+0xa74>
   1497c:	mov	x24, xzr
   14980:	ldr	x8, [x8]
   14984:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   14988:	add	x1, x1, #0x9d5
   1498c:	ldr	x23, [x8, x24, lsl #3]
   14990:	mov	x0, x23
   14994:	bl	ad20 <c_strstr@plt>
   14998:	cbnz	x0, 149f8 <msgdomain_list_sort_by_filepos@@Base+0xa0c>
   1499c:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   149a0:	mov	x0, x19
   149a4:	add	x1, x1, #0x96b
   149a8:	bl	aaa0 <ostream_write_str@plt>
   149ac:	ldrb	w8, [x23]
   149b0:	cbz	w8, 149c8 <msgdomain_list_sort_by_filepos@@Base+0x9dc>
   149b4:	cmp	w8, #0xa
   149b8:	b.eq	149c8 <msgdomain_list_sort_by_filepos@@Base+0x9dc>  // b.none
   149bc:	mov	x0, x19
   149c0:	mov	x1, x26
   149c4:	bl	aaa0 <ostream_write_str@plt>
   149c8:	adrp	x21, 37000 <get_search_path@@Base+0xb4c>
   149cc:	add	x21, x21, #0x9be
   149d0:	b	14a34 <msgdomain_list_sort_by_filepos@@Base+0xa48>
   149d4:	mov	x21, x0
   149d8:	sub	x2, x0, x23
   149dc:	mov	x0, x19
   149e0:	mov	x1, x23
   149e4:	bl	a880 <ostream_write_mem@plt>
   149e8:	mov	x0, x19
   149ec:	mov	x1, x22
   149f0:	add	x23, x21, #0x1
   149f4:	bl	aaa0 <ostream_write_str@plt>
   149f8:	mov	x0, x19
   149fc:	mov	x1, x27
   14a00:	bl	aaa0 <ostream_write_str@plt>
   14a04:	ldrb	w8, [x23]
   14a08:	cbz	w8, 14a20 <msgdomain_list_sort_by_filepos@@Base+0xa34>
   14a0c:	cmp	w8, #0xa
   14a10:	b.eq	14a20 <msgdomain_list_sort_by_filepos@@Base+0xa34>  // b.none
   14a14:	mov	x0, x19
   14a18:	mov	x1, x26
   14a1c:	bl	aaa0 <ostream_write_str@plt>
   14a20:	mov	w1, #0xa                   	// #10
   14a24:	mov	x0, x23
   14a28:	bl	aa80 <strchr@plt>
   14a2c:	cbnz	x0, 149d4 <msgdomain_list_sort_by_filepos@@Base+0x9e8>
   14a30:	mov	x21, x22
   14a34:	mov	x0, x19
   14a38:	mov	x1, x23
   14a3c:	bl	aaa0 <ostream_write_str@plt>
   14a40:	mov	x0, x19
   14a44:	mov	x1, x21
   14a48:	bl	aaa0 <ostream_write_str@plt>
   14a4c:	ldr	x8, [x25, #56]
   14a50:	add	x24, x24, #0x1
   14a54:	ldr	x9, [x8, #8]
   14a58:	cmp	x24, x9
   14a5c:	b.cc	14980 <msgdomain_list_sort_by_filepos@@Base+0x994>  // b.lo, b.ul, b.last
   14a60:	ldr	x8, [x25, #64]
   14a64:	cbz	x8, 14b60 <msgdomain_list_sort_by_filepos@@Base+0xb74>
   14a68:	ldr	x9, [x8, #8]
   14a6c:	cbz	x9, 14b60 <msgdomain_list_sort_by_filepos@@Base+0xb74>
   14a70:	mov	x24, xzr
   14a74:	ldr	x8, [x8]
   14a78:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   14a7c:	add	x1, x1, #0x9d5
   14a80:	ldr	x23, [x8, x24, lsl #3]
   14a84:	mov	x0, x23
   14a88:	bl	ad20 <c_strstr@plt>
   14a8c:	cbz	x0, 14b1c <msgdomain_list_sort_by_filepos@@Base+0xb30>
   14a90:	mov	w21, #0x1                   	// #1
   14a94:	mov	x0, x19
   14a98:	mov	x1, x27
   14a9c:	bl	aaa0 <ostream_write_str@plt>
   14aa0:	tbz	w21, #0, 14abc <msgdomain_list_sort_by_filepos@@Base+0xad0>
   14aa4:	mov	x0, x19
   14aa8:	mov	x1, x26
   14aac:	bl	aaa0 <ostream_write_str@plt>
   14ab0:	mov	x0, x19
   14ab4:	mov	x1, x20
   14ab8:	b	14ad4 <msgdomain_list_sort_by_filepos@@Base+0xae8>
   14abc:	ldrb	w8, [x23]
   14ac0:	cbz	w8, 14ad8 <msgdomain_list_sort_by_filepos@@Base+0xaec>
   14ac4:	cmp	w8, #0xa
   14ac8:	b.eq	14ad8 <msgdomain_list_sort_by_filepos@@Base+0xaec>  // b.none
   14acc:	mov	x0, x19
   14ad0:	mov	x1, x26
   14ad4:	bl	aaa0 <ostream_write_str@plt>
   14ad8:	mov	w1, #0xa                   	// #10
   14adc:	mov	x0, x23
   14ae0:	bl	aa80 <strchr@plt>
   14ae4:	cbz	x0, 14b14 <msgdomain_list_sort_by_filepos@@Base+0xb28>
   14ae8:	mov	x21, x0
   14aec:	sub	x2, x0, x23
   14af0:	mov	x0, x19
   14af4:	mov	x1, x23
   14af8:	bl	a880 <ostream_write_mem@plt>
   14afc:	mov	x0, x19
   14b00:	mov	x1, x22
   14b04:	add	x23, x21, #0x1
   14b08:	bl	aaa0 <ostream_write_str@plt>
   14b0c:	mov	w21, wzr
   14b10:	b	14a94 <msgdomain_list_sort_by_filepos@@Base+0xaa8>
   14b14:	mov	x21, x22
   14b18:	b	14b34 <msgdomain_list_sort_by_filepos@@Base+0xb48>
   14b1c:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   14b20:	mov	x0, x19
   14b24:	add	x1, x1, #0x971
   14b28:	bl	aaa0 <ostream_write_str@plt>
   14b2c:	adrp	x21, 37000 <get_search_path@@Base+0xb4c>
   14b30:	add	x21, x21, #0x9be
   14b34:	mov	x0, x19
   14b38:	mov	x1, x23
   14b3c:	bl	aaa0 <ostream_write_str@plt>
   14b40:	mov	x0, x19
   14b44:	mov	x1, x21
   14b48:	bl	aaa0 <ostream_write_str@plt>
   14b4c:	ldr	x8, [x25, #64]
   14b50:	add	x24, x24, #0x1
   14b54:	ldr	x9, [x8, #8]
   14b58:	cmp	x24, x9
   14b5c:	b.cc	14a74 <msgdomain_list_sort_by_filepos@@Base+0xa88>  // b.lo, b.ul, b.last
   14b60:	ldr	x8, [x25, #72]
   14b64:	adrp	x24, 37000 <get_search_path@@Base+0xb4c>
   14b68:	add	x24, x24, #0x9c3
   14b6c:	cbz	x8, 14bdc <msgdomain_list_sort_by_filepos@@Base+0xbf0>
   14b70:	mov	x23, xzr
   14b74:	ldr	x8, [x25, #80]
   14b78:	lsl	x9, x23, #4
   14b7c:	ldr	x1, [x8, x9]
   14b80:	ldrb	w9, [x1]
   14b84:	cmp	w9, #0x2e
   14b88:	b.ne	14ba0 <msgdomain_list_sort_by_filepos@@Base+0xbb4>  // b.any
   14b8c:	ldrb	w9, [x1, #1]
   14b90:	cmp	w9, #0x2f
   14b94:	b.ne	14ba0 <msgdomain_list_sort_by_filepos@@Base+0xbb4>  // b.any
   14b98:	ldrb	w9, [x1, #2]!
   14b9c:	b	14b84 <msgdomain_list_sort_by_filepos@@Base+0xb98>
   14ba0:	add	x8, x8, x23, lsl #4
   14ba4:	ldr	x2, [x8, #8]
   14ba8:	adrp	x0, 37000 <get_search_path@@Base+0xb4c>
   14bac:	add	x0, x0, #0x97e
   14bb0:	bl	aa20 <xasprintf@plt>
   14bb4:	mov	x21, x0
   14bb8:	mov	x0, x19
   14bbc:	mov	x1, x21
   14bc0:	bl	aaa0 <ostream_write_str@plt>
   14bc4:	mov	x0, x21
   14bc8:	bl	aa00 <free@plt>
   14bcc:	ldr	x8, [x25, #72]
   14bd0:	add	x23, x23, #0x1
   14bd4:	cmp	x23, x8
   14bd8:	b.cc	14b74 <msgdomain_list_sort_by_filepos@@Base+0xb88>  // b.lo, b.ul, b.last
   14bdc:	ldrb	w8, [x25, #88]
   14be0:	cbz	w8, 14bf8 <msgdomain_list_sort_by_filepos@@Base+0xc0c>
   14be4:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   14be8:	mov	x0, x19
   14bec:	add	x1, x1, #0x992
   14bf0:	bl	aaa0 <ostream_write_str@plt>
   14bf4:	b	14c04 <msgdomain_list_sort_by_filepos@@Base+0xc18>
   14bf8:	ldr	x8, [x25, #24]
   14bfc:	ldrb	w8, [x8]
   14c00:	cbz	w8, 14be4 <msgdomain_list_sort_by_filepos@@Base+0xbf8>
   14c04:	ldrb	w8, [x25, #256]
   14c08:	cbz	w8, 14c1c <msgdomain_list_sort_by_filepos@@Base+0xc30>
   14c0c:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   14c10:	mov	x0, x19
   14c14:	add	x1, x1, #0x9ac
   14c18:	bl	aaa0 <ostream_write_str@plt>
   14c1c:	mov	x21, xzr
   14c20:	add	x23, x25, #0x5c
   14c24:	ldr	w0, [x23, x21, lsl #2]
   14c28:	bl	a4c0 <significant_format_p@plt>
   14c2c:	tbz	w0, #0, 14c70 <msgdomain_list_sort_by_filepos@@Base+0xc84>
   14c30:	mov	x0, x19
   14c34:	mov	x1, x24
   14c38:	bl	aaa0 <ostream_write_str@plt>
   14c3c:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   14c40:	ldr	w0, [x23, x21, lsl #2]
   14c44:	ldr	x8, [x8, #4032]
   14c48:	ldur	w2, [x29, #-4]
   14c4c:	ldr	x1, [x8, x21, lsl #3]
   14c50:	bl	aeb0 <make_format_description_string@plt>
   14c54:	mov	x1, x0
   14c58:	mov	x0, x19
   14c5c:	bl	aaa0 <ostream_write_str@plt>
   14c60:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   14c64:	mov	x0, x19
   14c68:	add	x1, x1, #0x9be
   14c6c:	bl	aaa0 <ostream_write_str@plt>
   14c70:	add	x21, x21, #0x1
   14c74:	cmp	x21, #0x1c
   14c78:	b.ne	14c24 <msgdomain_list_sort_by_filepos@@Base+0xc38>  // b.any
   14c7c:	ldr	w8, [x25, #204]
   14c80:	tbnz	w8, #31, 14cc8 <msgdomain_list_sort_by_filepos@@Base+0xcdc>
   14c84:	ldr	w8, [x25, #208]
   14c88:	tbnz	w8, #31, 14cc8 <msgdomain_list_sort_by_filepos@@Base+0xcdc>
   14c8c:	mov	x0, x19
   14c90:	mov	x1, x24
   14c94:	bl	aaa0 <ostream_write_str@plt>
   14c98:	ldur	x0, [x25, #204]
   14c9c:	bl	a9b0 <make_range_description_string@plt>
   14ca0:	mov	x21, x0
   14ca4:	mov	x0, x19
   14ca8:	mov	x1, x21
   14cac:	bl	aaa0 <ostream_write_str@plt>
   14cb0:	mov	x0, x21
   14cb4:	bl	aa00 <free@plt>
   14cb8:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   14cbc:	mov	x0, x19
   14cc0:	add	x1, x1, #0x9be
   14cc4:	bl	aaa0 <ostream_write_str@plt>
   14cc8:	ldr	x1, [x25, #8]
   14ccc:	mov	x0, x19
   14cd0:	bl	14dc4 <msgdomain_list_sort_by_filepos@@Base+0xdd8>
   14cd4:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   14cd8:	mov	x0, x19
   14cdc:	add	x1, x1, #0x9d0
   14ce0:	bl	aaa0 <ostream_write_str@plt>
   14ce4:	ldr	x1, [x25, #24]
   14ce8:	ldr	x23, [sp]
   14cec:	ldrb	w8, [x1]
   14cf0:	cbz	w8, 14d34 <msgdomain_list_sort_by_filepos@@Base+0xd48>
   14cf4:	ldrb	w8, [x25, #88]
   14cf8:	cbz	w8, 14d38 <msgdomain_list_sort_by_filepos@@Base+0xd4c>
   14cfc:	ldr	x1, [x25, #8]
   14d00:	mov	x0, x19
   14d04:	bl	14dc4 <msgdomain_list_sort_by_filepos@@Base+0xdd8>
   14d08:	ldr	x0, [x25, #24]
   14d0c:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   14d10:	add	x1, x1, #0x9d5
   14d14:	bl	ad20 <c_strstr@plt>
   14d18:	cbz	x0, 14d74 <msgdomain_list_sort_by_filepos@@Base+0xd88>
   14d1c:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   14d20:	mov	x0, x19
   14d24:	add	x1, x1, #0x9d8
   14d28:	bl	aaa0 <ostream_write_str@plt>
   14d2c:	ldr	x1, [x25, #24]
   14d30:	b	14d38 <msgdomain_list_sort_by_filepos@@Base+0xd4c>
   14d34:	ldr	x1, [x25, #8]
   14d38:	mov	x0, x19
   14d3c:	bl	14dc4 <msgdomain_list_sort_by_filepos@@Base+0xdd8>
   14d40:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   14d44:	mov	x0, x19
   14d48:	add	x1, x1, #0x8
   14d4c:	bl	aaa0 <ostream_write_str@plt>
   14d50:	mov	x0, x19
   14d54:	mov	x1, x22
   14d58:	bl	aaa0 <ostream_write_str@plt>
   14d5c:	ldr	x8, [x23, #8]
   14d60:	mov	w9, #0x1                   	// #1
   14d64:	add	x28, x28, #0x1
   14d68:	cmp	x28, x8
   14d6c:	b.cc	1494c <msgdomain_list_sort_by_filepos@@Base+0x960>  // b.lo, b.ul, b.last
   14d70:	b	14da4 <msgdomain_list_sort_by_filepos@@Base+0xdb8>
   14d74:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   14d78:	mov	x0, x19
   14d7c:	add	x1, x1, #0x9cd
   14d80:	bl	aaa0 <ostream_write_str@plt>
   14d84:	ldr	x1, [x25, #24]
   14d88:	mov	x0, x19
   14d8c:	bl	14dc4 <msgdomain_list_sort_by_filepos@@Base+0xdd8>
   14d90:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   14d94:	mov	x0, x19
   14d98:	add	x1, x1, #0x9d4
   14d9c:	bl	aaa0 <ostream_write_str@plt>
   14da0:	b	14d40 <msgdomain_list_sort_by_filepos@@Base+0xd54>
   14da4:	ldp	x20, x19, [sp, #96]
   14da8:	ldp	x22, x21, [sp, #80]
   14dac:	ldp	x24, x23, [sp, #64]
   14db0:	ldp	x26, x25, [sp, #48]
   14db4:	ldp	x28, x27, [sp, #32]
   14db8:	ldp	x29, x30, [sp, #16]
   14dbc:	add	sp, sp, #0x70
   14dc0:	ret
   14dc4:	stp	x29, x30, [sp, #-96]!
   14dc8:	stp	x20, x19, [sp, #80]
   14dcc:	mov	x19, x0
   14dd0:	mov	x0, x1
   14dd4:	str	x27, [sp, #16]
   14dd8:	stp	x26, x25, [sp, #32]
   14ddc:	stp	x24, x23, [sp, #48]
   14de0:	stp	x22, x21, [sp, #64]
   14de4:	mov	x29, sp
   14de8:	mov	x20, x1
   14dec:	bl	a0d0 <strlen@plt>
   14df0:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   14df4:	mov	x21, x0
   14df8:	add	x1, x1, #0xd88
   14dfc:	mov	x0, x19
   14e00:	bl	aaa0 <ostream_write_str@plt>
   14e04:	cmp	x21, #0x1
   14e08:	b.lt	14ed0 <msgdomain_list_sort_by_filepos@@Base+0xee4>  // b.tstop
   14e0c:	add	x25, x20, x21
   14e10:	adrp	x27, 37000 <get_search_path@@Base+0xb4c>
   14e14:	adrp	x21, 37000 <get_search_path@@Base+0xb4c>
   14e18:	adrp	x22, 37000 <get_search_path@@Base+0xb4c>
   14e1c:	adrp	x23, 37000 <get_search_path@@Base+0xb4c>
   14e20:	adrp	x24, 37000 <get_search_path@@Base+0xb4c>
   14e24:	mov	w26, #0x5c                  	// #92
   14e28:	add	x27, x27, #0x962
   14e2c:	add	x21, x21, #0x956
   14e30:	add	x22, x22, #0x959
   14e34:	add	x23, x23, #0x95f
   14e38:	add	x24, x24, #0x95c
   14e3c:	ldrb	w8, [x20], #1
   14e40:	sub	w9, w8, #0x9
   14e44:	cmp	w9, #0x4
   14e48:	b.hi	14e68 <msgdomain_list_sort_by_filepos@@Base+0xe7c>  // b.pmore
   14e4c:	adr	x10, 14e5c <msgdomain_list_sort_by_filepos@@Base+0xe70>
   14e50:	ldrb	w11, [x27, x9]
   14e54:	add	x10, x10, x11, lsl #2
   14e58:	br	x10
   14e5c:	mov	x0, x19
   14e60:	mov	x1, x21
   14e64:	b	14ec4 <msgdomain_list_sort_by_filepos@@Base+0xed8>
   14e68:	cmp	w8, #0x22
   14e6c:	b.eq	14e78 <msgdomain_list_sort_by_filepos@@Base+0xe8c>  // b.none
   14e70:	cmp	w8, #0x5c
   14e74:	b.ne	14e8c <msgdomain_list_sort_by_filepos@@Base+0xea0>  // b.any
   14e78:	strb	w26, [x29, #28]
   14e7c:	strb	w8, [x29, #29]
   14e80:	add	x1, x29, #0x1c
   14e84:	mov	w2, #0x2                   	// #2
   14e88:	b	14e98 <msgdomain_list_sort_by_filepos@@Base+0xeac>
   14e8c:	add	x1, x29, #0x18
   14e90:	mov	w2, #0x1                   	// #1
   14e94:	strb	w8, [x29, #24]
   14e98:	mov	x0, x19
   14e9c:	bl	a880 <ostream_write_mem@plt>
   14ea0:	b	14ec8 <msgdomain_list_sort_by_filepos@@Base+0xedc>
   14ea4:	mov	x0, x19
   14ea8:	mov	x1, x22
   14eac:	b	14ec4 <msgdomain_list_sort_by_filepos@@Base+0xed8>
   14eb0:	mov	x0, x19
   14eb4:	mov	x1, x23
   14eb8:	b	14ec4 <msgdomain_list_sort_by_filepos@@Base+0xed8>
   14ebc:	mov	x0, x19
   14ec0:	mov	x1, x24
   14ec4:	bl	aaa0 <ostream_write_str@plt>
   14ec8:	cmp	x20, x25
   14ecc:	b.cc	14e3c <msgdomain_list_sort_by_filepos@@Base+0xe50>  // b.lo, b.ul, b.last
   14ed0:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   14ed4:	add	x1, x1, #0xd88
   14ed8:	mov	x0, x19
   14edc:	bl	aaa0 <ostream_write_str@plt>
   14ee0:	ldp	x20, x19, [sp, #80]
   14ee4:	ldp	x22, x21, [sp, #64]
   14ee8:	ldp	x24, x23, [sp, #48]
   14eec:	ldp	x26, x25, [sp, #32]
   14ef0:	ldr	x27, [sp, #16]
   14ef4:	ldp	x29, x30, [sp], #96
   14ef8:	ret

0000000000014efc <make_format_description_string@@Base>:
   14efc:	stp	x29, x30, [sp, #-32]!
   14f00:	sub	w9, w0, #0x1
   14f04:	cmp	w9, #0x3
   14f08:	str	x19, [sp, #16]
   14f0c:	mov	x29, sp
   14f10:	b.hi	14f74 <make_format_description_string@@Base+0x78>  // b.pmore
   14f14:	adrp	x10, 37000 <get_search_path@@Base+0xb4c>
   14f18:	add	x10, x10, #0x9e0
   14f1c:	mov	x8, x1
   14f20:	adr	x11, 14f38 <make_format_description_string@@Base+0x3c>
   14f24:	ldrb	w12, [x10, x9]
   14f28:	add	x11, x11, x12, lsl #2
   14f2c:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   14f30:	add	x1, x1, #0xb00
   14f34:	br	x11
   14f38:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   14f3c:	add	x1, x1, #0xaf6
   14f40:	adrp	x19, 4e000 <formatstring_gfc_internal@@Base+0x10>
   14f44:	add	x19, x19, #0x3dc
   14f48:	mov	x0, x19
   14f4c:	mov	x2, x8
   14f50:	bl	a280 <sprintf@plt>
   14f54:	mov	x0, x19
   14f58:	ldr	x19, [sp, #16]
   14f5c:	ldp	x29, x30, [sp], #32
   14f60:	ret
   14f64:	tbz	w2, #0, 14f38 <make_format_description_string@@Base+0x3c>
   14f68:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   14f6c:	add	x1, x1, #0xaed
   14f70:	b	14f40 <make_format_description_string@@Base+0x44>
   14f74:	bl	a7e0 <abort@plt>

0000000000014f78 <significant_format_p@@Base>:
   14f78:	cmp	w0, #0x0
   14f7c:	cset	w8, ne  // ne = any
   14f80:	cmp	w0, #0x5
   14f84:	cset	w9, ne  // ne = any
   14f88:	and	w0, w8, w9
   14f8c:	ret

0000000000014f90 <make_range_description_string@@Base>:
   14f90:	mov	x1, x0
   14f94:	lsr	x2, x0, #32
   14f98:	adrp	x0, 37000 <get_search_path@@Base+0xb4c>
   14f9c:	add	x0, x0, #0xb0d
   14fa0:	b	aa20 <xasprintf@plt>

0000000000014fa4 <message_print_style_comment@@Base>:
   14fa4:	and	w8, w0, #0x1
   14fa8:	adrp	x9, 4d000 <memcpy@GLIBC_2.17>
   14fac:	strb	w8, [x9, #2128]
   14fb0:	ret

0000000000014fb4 <message_print_comment@@Base>:
   14fb4:	stp	x29, x30, [sp, #-80]!
   14fb8:	stp	x26, x25, [sp, #16]
   14fbc:	stp	x24, x23, [sp, #32]
   14fc0:	stp	x22, x21, [sp, #48]
   14fc4:	stp	x20, x19, [sp, #64]
   14fc8:	adrp	x8, 4d000 <memcpy@GLIBC_2.17>
   14fcc:	ldrb	w8, [x8, #2128]
   14fd0:	mov	x29, sp
   14fd4:	cbz	w8, 150d0 <message_print_comment@@Base+0x11c>
   14fd8:	ldr	x8, [x0, #56]
   14fdc:	mov	x20, x0
   14fe0:	cbz	x8, 150d0 <message_print_comment@@Base+0x11c>
   14fe4:	mov	x19, x1
   14fe8:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   14fec:	add	x1, x1, #0x9e4
   14ff0:	mov	x0, x19
   14ff4:	bl	ab50 <styled_ostream_begin_use_class@plt>
   14ff8:	ldr	x8, [x20, #56]
   14ffc:	ldr	x9, [x8, #8]
   15000:	cbz	x9, 150ac <message_print_comment@@Base+0xf8>
   15004:	adrp	x21, 38000 <get_search_path@@Base+0x1b4c>
   15008:	adrp	x22, 37000 <get_search_path@@Base+0xb4c>
   1500c:	adrp	x23, 37000 <get_search_path@@Base+0xb4c>
   15010:	mov	x26, xzr
   15014:	add	x21, x21, #0x25c
   15018:	add	x22, x22, #0x1a1
   1501c:	add	x23, x23, #0xd91
   15020:	ldr	x8, [x8]
   15024:	ldr	x24, [x8, x26, lsl #3]
   15028:	mov	x0, x19
   1502c:	mov	x1, x21
   15030:	bl	aaa0 <ostream_write_str@plt>
   15034:	ldrb	w8, [x24]
   15038:	cbz	w8, 15048 <message_print_comment@@Base+0x94>
   1503c:	mov	x0, x19
   15040:	mov	x1, x23
   15044:	bl	aaa0 <ostream_write_str@plt>
   15048:	mov	w1, #0xa                   	// #10
   1504c:	mov	x0, x24
   15050:	bl	aa80 <strchr@plt>
   15054:	cbz	x0, 15080 <message_print_comment@@Base+0xcc>
   15058:	mov	x25, x0
   1505c:	sub	x2, x0, x24
   15060:	mov	x0, x19
   15064:	mov	x1, x24
   15068:	bl	a880 <ostream_write_mem@plt>
   1506c:	mov	x0, x19
   15070:	mov	x1, x22
   15074:	add	x24, x25, #0x1
   15078:	bl	aaa0 <ostream_write_str@plt>
   1507c:	b	15028 <message_print_comment@@Base+0x74>
   15080:	mov	x0, x19
   15084:	mov	x1, x24
   15088:	bl	aaa0 <ostream_write_str@plt>
   1508c:	mov	x0, x19
   15090:	mov	x1, x22
   15094:	bl	aaa0 <ostream_write_str@plt>
   15098:	ldr	x8, [x20, #56]
   1509c:	add	x26, x26, #0x1
   150a0:	ldr	x9, [x8, #8]
   150a4:	cmp	x26, x9
   150a8:	b.cc	15020 <message_print_comment@@Base+0x6c>  // b.lo, b.ul, b.last
   150ac:	mov	x0, x19
   150b0:	ldp	x20, x19, [sp, #64]
   150b4:	ldp	x22, x21, [sp, #48]
   150b8:	ldp	x24, x23, [sp, #32]
   150bc:	ldp	x26, x25, [sp, #16]
   150c0:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   150c4:	add	x1, x1, #0x9e4
   150c8:	ldp	x29, x30, [sp], #80
   150cc:	b	a430 <styled_ostream_end_use_class@plt>
   150d0:	ldp	x20, x19, [sp, #64]
   150d4:	ldp	x22, x21, [sp, #48]
   150d8:	ldp	x24, x23, [sp, #32]
   150dc:	ldp	x26, x25, [sp, #16]
   150e0:	ldp	x29, x30, [sp], #80
   150e4:	ret

00000000000150e8 <message_print_comment_dot@@Base>:
   150e8:	stp	x29, x30, [sp, #-80]!
   150ec:	stp	x24, x23, [sp, #32]
   150f0:	stp	x22, x21, [sp, #48]
   150f4:	stp	x20, x19, [sp, #64]
   150f8:	ldr	x8, [x0, #64]
   150fc:	str	x25, [sp, #16]
   15100:	mov	x29, sp
   15104:	cbz	x8, 151c0 <message_print_comment_dot@@Base+0xd8>
   15108:	mov	x19, x1
   1510c:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   15110:	mov	x20, x0
   15114:	add	x1, x1, #0x9f7
   15118:	mov	x0, x19
   1511c:	bl	ab50 <styled_ostream_begin_use_class@plt>
   15120:	ldr	x8, [x20, #64]
   15124:	ldr	x9, [x8, #8]
   15128:	cbz	x9, 1519c <message_print_comment_dot@@Base+0xb4>
   1512c:	adrp	x21, 37000 <get_search_path@@Base+0xb4c>
   15130:	adrp	x22, 37000 <get_search_path@@Base+0xb4c>
   15134:	adrp	x23, 37000 <get_search_path@@Base+0xb4c>
   15138:	mov	x25, xzr
   1513c:	add	x21, x21, #0xb1b
   15140:	add	x22, x22, #0x1a1
   15144:	add	x23, x23, #0xd91
   15148:	ldr	x8, [x8]
   1514c:	mov	x0, x19
   15150:	mov	x1, x21
   15154:	ldr	x24, [x8, x25, lsl #3]
   15158:	bl	aaa0 <ostream_write_str@plt>
   1515c:	ldrb	w8, [x24]
   15160:	cbz	w8, 15170 <message_print_comment_dot@@Base+0x88>
   15164:	mov	x0, x19
   15168:	mov	x1, x23
   1516c:	bl	aaa0 <ostream_write_str@plt>
   15170:	mov	x0, x19
   15174:	mov	x1, x24
   15178:	bl	aaa0 <ostream_write_str@plt>
   1517c:	mov	x0, x19
   15180:	mov	x1, x22
   15184:	bl	aaa0 <ostream_write_str@plt>
   15188:	ldr	x8, [x20, #64]
   1518c:	add	x25, x25, #0x1
   15190:	ldr	x9, [x8, #8]
   15194:	cmp	x25, x9
   15198:	b.cc	15148 <message_print_comment_dot@@Base+0x60>  // b.lo, b.ul, b.last
   1519c:	mov	x0, x19
   151a0:	ldp	x20, x19, [sp, #64]
   151a4:	ldp	x22, x21, [sp, #48]
   151a8:	ldp	x24, x23, [sp, #32]
   151ac:	ldr	x25, [sp, #16]
   151b0:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   151b4:	add	x1, x1, #0x9f7
   151b8:	ldp	x29, x30, [sp], #80
   151bc:	b	a430 <styled_ostream_end_use_class@plt>
   151c0:	ldp	x20, x19, [sp, #64]
   151c4:	ldp	x22, x21, [sp, #48]
   151c8:	ldp	x24, x23, [sp, #32]
   151cc:	ldr	x25, [sp, #16]
   151d0:	ldp	x29, x30, [sp], #80
   151d4:	ret

00000000000151d8 <message_print_comment_filepos@@Base>:
   151d8:	sub	sp, sp, #0x90
   151dc:	adrp	x8, 4d000 <memcpy@GLIBC_2.17>
   151e0:	ldr	w8, [x8, #2132]
   151e4:	stp	x29, x30, [sp, #48]
   151e8:	stp	x28, x27, [sp, #64]
   151ec:	stp	x26, x25, [sp, #80]
   151f0:	stp	x24, x23, [sp, #96]
   151f4:	stp	x22, x21, [sp, #112]
   151f8:	stp	x20, x19, [sp, #128]
   151fc:	add	x29, sp, #0x30
   15200:	str	x3, [sp, #16]
   15204:	cbz	w8, 1550c <message_print_comment_filepos@@Base+0x334>
   15208:	ldr	x8, [x0, #72]
   1520c:	mov	x20, x0
   15210:	cbz	x8, 1550c <message_print_comment_filepos@@Base+0x334>
   15214:	mov	x19, x1
   15218:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   1521c:	add	x1, x1, #0xa09
   15220:	mov	x0, x19
   15224:	mov	w21, w2
   15228:	bl	ab50 <styled_ostream_begin_use_class@plt>
   1522c:	adrp	x8, 4d000 <memcpy@GLIBC_2.17>
   15230:	ldr	w8, [x8, #2132]
   15234:	str	x20, [sp, #8]
   15238:	cmp	w8, #0x2
   1523c:	b.ne	152e4 <message_print_comment_filepos@@Base+0x10c>  // b.any
   15240:	ldr	x8, [x20, #72]
   15244:	lsr	x9, x8, #60
   15248:	cbnz	x9, 1552c <message_print_comment_filepos@@Base+0x354>
   1524c:	lsl	x0, x8, #4
   15250:	bl	a590 <xmalloc@plt>
   15254:	ldr	x28, [x20, #72]
   15258:	mov	x25, x0
   1525c:	cbz	x28, 153a8 <message_print_comment_filepos@@Base+0x1d0>
   15260:	mov	x8, x20
   15264:	ldr	x27, [x8, #80]
   15268:	mov	x20, xzr
   1526c:	mov	x26, xzr
   15270:	str	w21, [sp, #4]
   15274:	add	x23, x27, x26, lsl #4
   15278:	mov	x22, xzr
   1527c:	cbz	x20, 152ac <message_print_comment_filepos@@Base+0xd4>
   15280:	ldr	x24, [x23]
   15284:	mov	x21, x25
   15288:	ldr	x0, [x21]
   1528c:	mov	x1, x24
   15290:	bl	a8d0 <strcmp@plt>
   15294:	cbz	w0, 152ac <message_print_comment_filepos@@Base+0xd4>
   15298:	add	x22, x22, #0x1
   1529c:	cmp	x20, x22
   152a0:	add	x21, x21, #0x10
   152a4:	b.ne	15288 <message_print_comment_filepos@@Base+0xb0>  // b.any
   152a8:	b	152b4 <message_print_comment_filepos@@Base+0xdc>
   152ac:	cmp	x22, x20
   152b0:	b.ne	152cc <message_print_comment_filepos@@Base+0xf4>  // b.any
   152b4:	ldr	x8, [x23]
   152b8:	add	x9, x25, x20, lsl #4
   152bc:	add	x20, x20, #0x1
   152c0:	str	x8, [x9]
   152c4:	mov	x8, #0xffffffffffffffff    	// #-1
   152c8:	str	x8, [x9, #8]
   152cc:	add	x26, x26, #0x1
   152d0:	cmp	x26, x28
   152d4:	b.cc	15274 <message_print_comment_filepos@@Base+0x9c>  // b.lo, b.ul, b.last
   152d8:	ldr	w21, [sp, #4]
   152dc:	tbnz	w21, #0, 152ec <message_print_comment_filepos@@Base+0x114>
   152e0:	b	153b0 <message_print_comment_filepos@@Base+0x1d8>
   152e4:	ldp	x20, x25, [x20, #72]
   152e8:	tbz	w21, #0, 153b0 <message_print_comment_filepos@@Base+0x1d8>
   152ec:	cbz	x20, 154e4 <message_print_comment_filepos@@Base+0x30c>
   152f0:	adrp	x22, 37000 <get_search_path@@Base+0xb4c>
   152f4:	adrp	x23, 37000 <get_search_path@@Base+0xb4c>
   152f8:	adrp	x24, 37000 <get_search_path@@Base+0xb4c>
   152fc:	adrp	x21, 37000 <get_search_path@@Base+0xb4c>
   15300:	mov	x27, xzr
   15304:	add	x22, x22, #0xb1e
   15308:	add	x23, x23, #0xa1b
   1530c:	add	x24, x24, #0xb21
   15310:	add	x21, x21, #0x1a1
   15314:	lsl	x8, x27, #4
   15318:	ldr	x26, [x25, x8]
   1531c:	ldrb	w8, [x26]
   15320:	cmp	w8, #0x2e
   15324:	b.ne	1533c <message_print_comment_filepos@@Base+0x164>  // b.any
   15328:	ldrb	w8, [x26, #1]
   1532c:	cmp	w8, #0x2f
   15330:	b.ne	1533c <message_print_comment_filepos@@Base+0x164>  // b.any
   15334:	ldrb	w8, [x26, #2]!
   15338:	b	15320 <message_print_comment_filepos@@Base+0x148>
   1533c:	mov	x0, x19
   15340:	mov	x1, x22
   15344:	bl	aaa0 <ostream_write_str@plt>
   15348:	mov	x0, x19
   1534c:	mov	x1, x23
   15350:	bl	ab50 <styled_ostream_begin_use_class@plt>
   15354:	add	x8, x25, x27, lsl #4
   15358:	ldr	x2, [x8, #8]
   1535c:	mov	x0, x24
   15360:	mov	x1, x26
   15364:	bl	aa20 <xasprintf@plt>
   15368:	mov	x26, x0
   1536c:	mov	x0, x19
   15370:	mov	x1, x26
   15374:	bl	aaa0 <ostream_write_str@plt>
   15378:	mov	x0, x19
   1537c:	mov	x1, x23
   15380:	bl	a430 <styled_ostream_end_use_class@plt>
   15384:	mov	x0, x19
   15388:	mov	x1, x21
   1538c:	bl	aaa0 <ostream_write_str@plt>
   15390:	mov	x0, x26
   15394:	bl	aa00 <free@plt>
   15398:	add	x27, x27, #0x1
   1539c:	cmp	x27, x20
   153a0:	b.ne	15314 <message_print_comment_filepos@@Base+0x13c>  // b.any
   153a4:	b	154e4 <message_print_comment_filepos@@Base+0x30c>
   153a8:	mov	x20, xzr
   153ac:	tbnz	w21, #0, 152ec <message_print_comment_filepos@@Base+0x114>
   153b0:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   153b4:	add	x1, x1, #0xb3b
   153b8:	mov	x0, x19
   153bc:	bl	aaa0 <ostream_write_str@plt>
   153c0:	cbz	x20, 154d4 <message_print_comment_filepos@@Base+0x2fc>
   153c4:	adrp	x22, 37000 <get_search_path@@Base+0xb4c>
   153c8:	adrp	x24, 37000 <get_search_path@@Base+0xb4c>
   153cc:	adrp	x21, 37000 <get_search_path@@Base+0xb4c>
   153d0:	mov	x23, xzr
   153d4:	mov	w26, #0x2                   	// #2
   153d8:	add	x22, x22, #0xb3a
   153dc:	add	x24, x24, #0xd91
   153e0:	add	x21, x21, #0xa1b
   153e4:	lsl	x8, x23, #4
   153e8:	ldr	x27, [x25, x8]
   153ec:	ldrb	w8, [x27]
   153f0:	cmp	w8, #0x2e
   153f4:	b.ne	1540c <message_print_comment_filepos@@Base+0x234>  // b.any
   153f8:	ldrb	w8, [x27, #1]
   153fc:	cmp	w8, #0x2f
   15400:	b.ne	1540c <message_print_comment_filepos@@Base+0x234>  // b.any
   15404:	ldrb	w8, [x27, #2]!
   15408:	b	153f0 <message_print_comment_filepos@@Base+0x218>
   1540c:	adrp	x8, 4d000 <memcpy@GLIBC_2.17>
   15410:	ldr	w8, [x8, #2132]
   15414:	cmp	w8, #0x2
   15418:	b.eq	15440 <message_print_comment_filepos@@Base+0x268>  // b.none
   1541c:	add	x8, x25, x23, lsl #4
   15420:	ldr	x2, [x8, #8]
   15424:	cmn	x2, #0x1
   15428:	b.eq	15440 <message_print_comment_filepos@@Base+0x268>  // b.none
   1542c:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   15430:	add	x0, sp, #0x18
   15434:	add	x1, x1, #0xb35
   15438:	bl	a280 <sprintf@plt>
   1543c:	b	15444 <message_print_comment_filepos@@Base+0x26c>
   15440:	strb	wzr, [sp, #24]
   15444:	mov	x0, x27
   15448:	bl	a0d0 <strlen@plt>
   1544c:	mov	x28, x0
   15450:	add	x0, sp, #0x18
   15454:	bl	a0d0 <strlen@plt>
   15458:	add	x8, x28, x0
   1545c:	cmp	x26, #0x3
   15460:	add	x28, x8, #0x1
   15464:	b.cc	15488 <message_print_comment_filepos@@Base+0x2b0>  // b.lo, b.ul, b.last
   15468:	ldr	x9, [sp, #16]
   1546c:	add	x8, x28, x26
   15470:	cmp	x8, x9
   15474:	b.ls	15488 <message_print_comment_filepos@@Base+0x2b0>  // b.plast
   15478:	mov	x0, x19
   1547c:	mov	x1, x22
   15480:	bl	aaa0 <ostream_write_str@plt>
   15484:	mov	w26, #0x2                   	// #2
   15488:	mov	x0, x19
   1548c:	mov	x1, x24
   15490:	bl	aaa0 <ostream_write_str@plt>
   15494:	mov	x0, x19
   15498:	mov	x1, x21
   1549c:	bl	ab50 <styled_ostream_begin_use_class@plt>
   154a0:	mov	x0, x19
   154a4:	mov	x1, x27
   154a8:	bl	aaa0 <ostream_write_str@plt>
   154ac:	add	x1, sp, #0x18
   154b0:	mov	x0, x19
   154b4:	bl	aaa0 <ostream_write_str@plt>
   154b8:	mov	x0, x19
   154bc:	mov	x1, x21
   154c0:	bl	a430 <styled_ostream_end_use_class@plt>
   154c4:	add	x23, x23, #0x1
   154c8:	cmp	x23, x20
   154cc:	add	x26, x26, x28
   154d0:	b.ne	153e4 <message_print_comment_filepos@@Base+0x20c>  // b.any
   154d4:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   154d8:	add	x1, x1, #0x1a1
   154dc:	mov	x0, x19
   154e0:	bl	aaa0 <ostream_write_str@plt>
   154e4:	ldr	x8, [sp, #8]
   154e8:	ldr	x8, [x8, #80]
   154ec:	cmp	x25, x8
   154f0:	b.eq	154fc <message_print_comment_filepos@@Base+0x324>  // b.none
   154f4:	mov	x0, x25
   154f8:	bl	aa00 <free@plt>
   154fc:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   15500:	add	x1, x1, #0xa09
   15504:	mov	x0, x19
   15508:	bl	a430 <styled_ostream_end_use_class@plt>
   1550c:	ldp	x20, x19, [sp, #128]
   15510:	ldp	x22, x21, [sp, #112]
   15514:	ldp	x24, x23, [sp, #96]
   15518:	ldp	x26, x25, [sp, #80]
   1551c:	ldp	x28, x27, [sp, #64]
   15520:	ldp	x29, x30, [sp, #48]
   15524:	add	sp, sp, #0x90
   15528:	ret
   1552c:	bl	a780 <xalloc_die@plt>

0000000000015530 <message_print_comment_flags@@Base>:
   15530:	stp	x29, x30, [sp, #-96]!
   15534:	stp	x28, x27, [sp, #16]
   15538:	stp	x26, x25, [sp, #32]
   1553c:	stp	x24, x23, [sp, #48]
   15540:	stp	x22, x21, [sp, #64]
   15544:	stp	x20, x19, [sp, #80]
   15548:	ldrb	w8, [x0, #88]
   1554c:	mov	w21, w2
   15550:	mov	x20, x0
   15554:	mov	x19, x1
   15558:	mov	x29, sp
   1555c:	cbz	w8, 1556c <message_print_comment_flags@@Base+0x3c>
   15560:	ldr	x8, [x20, #24]
   15564:	ldrb	w8, [x8]
   15568:	cbnz	w8, 155ac <message_print_comment_flags@@Base+0x7c>
   1556c:	mov	x8, xzr
   15570:	add	x9, x20, #0x5c
   15574:	ldr	w10, [x9, x8]
   15578:	cmp	w10, #0x5
   1557c:	b.eq	15584 <message_print_comment_flags@@Base+0x54>  // b.none
   15580:	cbnz	w10, 155ac <message_print_comment_flags@@Base+0x7c>
   15584:	add	x8, x8, #0x4
   15588:	cmp	x8, #0x70
   1558c:	b.ne	15574 <message_print_comment_flags@@Base+0x44>  // b.any
   15590:	ldr	w8, [x20, #204]
   15594:	tbnz	w8, #31, 155a0 <message_print_comment_flags@@Base+0x70>
   15598:	ldr	w8, [x20, #208]
   1559c:	tbz	w8, #31, 155ac <message_print_comment_flags@@Base+0x7c>
   155a0:	ldr	w8, [x20, #212]
   155a4:	cmp	w8, #0x2
   155a8:	b.ne	15828 <message_print_comment_flags@@Base+0x2f8>  // b.any
   155ac:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   155b0:	add	x1, x1, #0xa25
   155b4:	mov	x0, x19
   155b8:	bl	ab50 <styled_ostream_begin_use_class@plt>
   155bc:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   155c0:	add	x1, x1, #0xb3e
   155c4:	mov	x0, x19
   155c8:	bl	aaa0 <ostream_write_str@plt>
   155cc:	ldrb	w8, [x20, #88]
   155d0:	cbz	w8, 15648 <message_print_comment_flags@@Base+0x118>
   155d4:	ldr	x8, [x20, #24]
   155d8:	ldrb	w8, [x8]
   155dc:	cbz	w8, 15648 <message_print_comment_flags@@Base+0x118>
   155e0:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   155e4:	add	x1, x1, #0xd91
   155e8:	mov	x0, x19
   155ec:	bl	aaa0 <ostream_write_str@plt>
   155f0:	adrp	x22, 37000 <get_search_path@@Base+0xb4c>
   155f4:	add	x22, x22, #0xa32
   155f8:	mov	x0, x19
   155fc:	mov	x1, x22
   15600:	bl	ab50 <styled_ostream_begin_use_class@plt>
   15604:	adrp	x23, 37000 <get_search_path@@Base+0xb4c>
   15608:	add	x23, x23, #0xa37
   1560c:	mov	x0, x19
   15610:	mov	x1, x23
   15614:	bl	ab50 <styled_ostream_begin_use_class@plt>
   15618:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   1561c:	add	x1, x1, #0xa42
   15620:	mov	x0, x19
   15624:	bl	aaa0 <ostream_write_str@plt>
   15628:	mov	x0, x19
   1562c:	mov	x1, x23
   15630:	bl	a430 <styled_ostream_end_use_class@plt>
   15634:	mov	x0, x19
   15638:	mov	x1, x22
   1563c:	bl	a430 <styled_ostream_end_use_class@plt>
   15640:	mov	w8, wzr
   15644:	b	1564c <message_print_comment_flags@@Base+0x11c>
   15648:	mov	w8, #0x1                   	// #1
   1564c:	adrp	x28, 4c000 <plural_table_size@@Base+0x12c00>
   15650:	ldr	x28, [x28, #4032]
   15654:	adrp	x22, 37000 <get_search_path@@Base+0xb4c>
   15658:	adrp	x23, 37000 <get_search_path@@Base+0xb4c>
   1565c:	adrp	x24, 4e000 <formatstring_gfc_internal@@Base+0x10>
   15660:	adrp	x25, 37000 <get_search_path@@Base+0xb4c>
   15664:	mov	x26, xzr
   15668:	add	x27, x20, #0x5c
   1566c:	add	x22, x22, #0xd91
   15670:	add	x23, x23, #0xa32
   15674:	and	w21, w21, #0x1
   15678:	add	x24, x24, #0x3dc
   1567c:	add	x25, x25, #0xb3f
   15680:	ldr	w9, [x27, x26, lsl #2]
   15684:	cbz	w9, 156e4 <message_print_comment_flags@@Base+0x1b4>
   15688:	cmp	w9, #0x5
   1568c:	b.eq	156e4 <message_print_comment_flags@@Base+0x1b4>  // b.none
   15690:	tbnz	w8, #0, 156a0 <message_print_comment_flags@@Base+0x170>
   15694:	mov	x0, x19
   15698:	mov	x1, x25
   1569c:	bl	aaa0 <ostream_write_str@plt>
   156a0:	mov	x0, x19
   156a4:	mov	x1, x22
   156a8:	bl	aaa0 <ostream_write_str@plt>
   156ac:	mov	x0, x19
   156b0:	mov	x1, x23
   156b4:	bl	ab50 <styled_ostream_begin_use_class@plt>
   156b8:	ldr	w0, [x27, x26, lsl #2]
   156bc:	ldr	x1, [x28, x26, lsl #3]
   156c0:	mov	w2, w21
   156c4:	bl	aeb0 <make_format_description_string@plt>
   156c8:	mov	x0, x19
   156cc:	mov	x1, x24
   156d0:	bl	aaa0 <ostream_write_str@plt>
   156d4:	mov	x0, x19
   156d8:	mov	x1, x23
   156dc:	bl	a430 <styled_ostream_end_use_class@plt>
   156e0:	mov	w8, wzr
   156e4:	add	x26, x26, #0x1
   156e8:	cmp	x26, #0x1c
   156ec:	b.ne	15680 <message_print_comment_flags@@Base+0x150>  // b.any
   156f0:	ldr	w9, [x20, #204]
   156f4:	tbnz	w9, #31, 15770 <message_print_comment_flags@@Base+0x240>
   156f8:	ldr	w9, [x20, #208]
   156fc:	tbnz	w9, #31, 15770 <message_print_comment_flags@@Base+0x240>
   15700:	tbnz	w8, #0, 15714 <message_print_comment_flags@@Base+0x1e4>
   15704:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   15708:	add	x1, x1, #0xb3f
   1570c:	mov	x0, x19
   15710:	bl	aaa0 <ostream_write_str@plt>
   15714:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   15718:	add	x1, x1, #0xd91
   1571c:	mov	x0, x19
   15720:	bl	aaa0 <ostream_write_str@plt>
   15724:	adrp	x21, 37000 <get_search_path@@Base+0xb4c>
   15728:	add	x21, x21, #0xa32
   1572c:	mov	x0, x19
   15730:	mov	x1, x21
   15734:	bl	ab50 <styled_ostream_begin_use_class@plt>
   15738:	ldp	w1, w2, [x20, #204]
   1573c:	adrp	x0, 37000 <get_search_path@@Base+0xb4c>
   15740:	add	x0, x0, #0xb0d
   15744:	bl	aa20 <xasprintf@plt>
   15748:	mov	x22, x0
   1574c:	mov	x0, x19
   15750:	mov	x1, x22
   15754:	bl	aaa0 <ostream_write_str@plt>
   15758:	mov	x0, x22
   1575c:	bl	aa00 <free@plt>
   15760:	mov	x0, x19
   15764:	mov	x1, x21
   15768:	bl	a430 <styled_ostream_end_use_class@plt>
   1576c:	mov	w8, wzr
   15770:	ldr	w9, [x20, #212]
   15774:	cmp	w9, #0x2
   15778:	b.ne	157f0 <message_print_comment_flags@@Base+0x2c0>  // b.any
   1577c:	tbnz	w8, #0, 15790 <message_print_comment_flags@@Base+0x260>
   15780:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   15784:	add	x1, x1, #0xb3f
   15788:	mov	x0, x19
   1578c:	bl	aaa0 <ostream_write_str@plt>
   15790:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   15794:	add	x1, x1, #0xd91
   15798:	mov	x0, x19
   1579c:	bl	aaa0 <ostream_write_str@plt>
   157a0:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   157a4:	add	x1, x1, #0xa32
   157a8:	mov	x0, x19
   157ac:	bl	ab50 <styled_ostream_begin_use_class@plt>
   157b0:	ldr	w8, [x20, #212]
   157b4:	cmp	w8, #0x1
   157b8:	b.eq	157d0 <message_print_comment_flags@@Base+0x2a0>  // b.none
   157bc:	cmp	w8, #0x2
   157c0:	b.ne	15844 <message_print_comment_flags@@Base+0x314>  // b.any
   157c4:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
   157c8:	add	x1, x1, #0x9c1
   157cc:	b	157d8 <message_print_comment_flags@@Base+0x2a8>
   157d0:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
   157d4:	add	x1, x1, #0x9c4
   157d8:	mov	x0, x19
   157dc:	bl	aaa0 <ostream_write_str@plt>
   157e0:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   157e4:	add	x1, x1, #0xa32
   157e8:	mov	x0, x19
   157ec:	bl	a430 <styled_ostream_end_use_class@plt>
   157f0:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   157f4:	add	x1, x1, #0x1a1
   157f8:	mov	x0, x19
   157fc:	bl	aaa0 <ostream_write_str@plt>
   15800:	mov	x0, x19
   15804:	ldp	x20, x19, [sp, #80]
   15808:	ldp	x22, x21, [sp, #64]
   1580c:	ldp	x24, x23, [sp, #48]
   15810:	ldp	x26, x25, [sp, #32]
   15814:	ldp	x28, x27, [sp, #16]
   15818:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   1581c:	add	x1, x1, #0xa25
   15820:	ldp	x29, x30, [sp], #96
   15824:	b	a430 <styled_ostream_end_use_class@plt>
   15828:	ldp	x20, x19, [sp, #80]
   1582c:	ldp	x22, x21, [sp, #64]
   15830:	ldp	x24, x23, [sp, #48]
   15834:	ldp	x26, x25, [sp, #32]
   15838:	ldp	x28, x27, [sp, #16]
   1583c:	ldp	x29, x30, [sp], #96
   15840:	ret
   15844:	bl	a7e0 <abort@plt>

0000000000015848 <message_page_width_ignore@@Base>:
   15848:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   1584c:	mov	w9, #0x1                   	// #1
   15850:	strb	w9, [x8, #1088]
   15854:	ret

0000000000015858 <message_print_style_indent@@Base>:
   15858:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   1585c:	mov	w9, #0x1                   	// #1
   15860:	strb	w9, [x8, #1089]
   15864:	ret

0000000000015868 <message_print_style_uniforum@@Base>:
   15868:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   1586c:	mov	w9, #0x1                   	// #1
   15870:	strb	w9, [x8, #1090]
   15874:	ret

0000000000015878 <message_print_style_escape@@Base>:
   15878:	and	w8, w0, #0x1
   1587c:	adrp	x9, 4e000 <formatstring_gfc_internal@@Base+0x10>
   15880:	strb	w8, [x9, #1092]
   15884:	ret

0000000000015888 <message_print_style_filepos@@Base>:
   15888:	adrp	x8, 4d000 <memcpy@GLIBC_2.17>
   1588c:	str	w0, [x8, #2132]
   15890:	ret

0000000000015894 <handle_filepos_comment_option@@Base>:
   15894:	stp	x29, x30, [sp, #-32]!
   15898:	str	x19, [sp, #16]
   1589c:	mov	x29, sp
   158a0:	cbz	x0, 15928 <handle_filepos_comment_option@@Base+0x94>
   158a4:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   158a8:	add	x1, x1, #0xb41
   158ac:	mov	x19, x0
   158b0:	bl	a8d0 <strcmp@plt>
   158b4:	cbz	w0, 15914 <handle_filepos_comment_option@@Base+0x80>
   158b8:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   158bc:	add	x1, x1, #0xb47
   158c0:	mov	x0, x19
   158c4:	bl	a8d0 <strcmp@plt>
   158c8:	cbz	w0, 15914 <handle_filepos_comment_option@@Base+0x80>
   158cc:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   158d0:	add	x1, x1, #0xb4a
   158d4:	mov	x0, x19
   158d8:	bl	a8d0 <strcmp@plt>
   158dc:	cbz	w0, 15924 <handle_filepos_comment_option@@Base+0x90>
   158e0:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   158e4:	add	x1, x1, #0xb4f
   158e8:	mov	x0, x19
   158ec:	bl	a8d0 <strcmp@plt>
   158f0:	cbz	w0, 15924 <handle_filepos_comment_option@@Base+0x90>
   158f4:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   158f8:	add	x1, x1, #0x928
   158fc:	mov	x0, x19
   15900:	bl	a8d0 <strcmp@plt>
   15904:	cbnz	w0, 15940 <handle_filepos_comment_option@@Base+0xac>
   15908:	adrp	x8, 4d000 <memcpy@GLIBC_2.17>
   1590c:	mov	w9, #0x2                   	// #2
   15910:	b	15930 <handle_filepos_comment_option@@Base+0x9c>
   15914:	adrp	x8, 4d000 <memcpy@GLIBC_2.17>
   15918:	mov	w0, wzr
   1591c:	str	wzr, [x8, #2132]
   15920:	b	15934 <handle_filepos_comment_option@@Base+0xa0>
   15924:	mov	w0, wzr
   15928:	adrp	x8, 4d000 <memcpy@GLIBC_2.17>
   1592c:	mov	w9, #0x1                   	// #1
   15930:	str	w9, [x8, #2132]
   15934:	ldr	x19, [sp, #16]
   15938:	ldp	x29, x30, [sp], #32
   1593c:	ret
   15940:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   15944:	ldr	x8, [x8, #3760]
   15948:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   1594c:	add	x1, x1, #0xb53
   15950:	mov	x2, x19
   15954:	ldr	x0, [x8]
   15958:	bl	aef0 <fprintf@plt>
   1595c:	mov	w0, #0x1                   	// #1
   15960:	b	15934 <handle_filepos_comment_option@@Base+0xa0>
   15964:	stp	x29, x30, [sp, #-96]!
   15968:	stp	x28, x27, [sp, #16]
   1596c:	stp	x26, x25, [sp, #32]
   15970:	stp	x24, x23, [sp, #48]
   15974:	stp	x22, x21, [sp, #64]
   15978:	stp	x20, x19, [sp, #80]
   1597c:	mov	x29, sp
   15980:	sub	sp, sp, #0x60
   15984:	ldr	x8, [x0, #8]
   15988:	cbz	x8, 16684 <handle_filepos_comment_option@@Base+0xdf0>
   1598c:	adrp	x26, 37000 <get_search_path@@Base+0xb4c>
   15990:	adrp	x23, 36000 <its_merge_context_free@@Base+0x1328>
   15994:	mov	w28, w3
   15998:	mov	x20, x2
   1599c:	mov	x21, x0
   159a0:	mov	x22, x1
   159a4:	mov	x24, xzr
   159a8:	mov	w27, wzr
   159ac:	add	x26, x26, #0xaa3
   159b0:	add	x23, x23, #0xc71
   159b4:	stur	w3, [x29, #-60]
   159b8:	stur	x0, [x29, #-88]
   159bc:	stur	x2, [x29, #-48]
   159c0:	cbnz	x24, 159e0 <handle_filepos_comment_option@@Base+0x14c>
   159c4:	ldr	x19, [x21]
   159c8:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
   159cc:	add	x1, x1, #0x92c
   159d0:	ldr	x8, [x19]
   159d4:	ldr	x0, [x8]
   159d8:	bl	a8d0 <strcmp@plt>
   159dc:	cbz	w0, 15ab8 <handle_filepos_comment_option@@Base+0x224>
   159e0:	tbz	w27, #0, 159ec <handle_filepos_comment_option@@Base+0x158>
   159e4:	mov	x0, x22
   159e8:	bl	166a8 <handle_filepos_comment_option@@Base+0xe14>
   159ec:	adrp	x19, 37000 <get_search_path@@Base+0xb4c>
   159f0:	add	x19, x19, #0xa48
   159f4:	mov	x0, x22
   159f8:	mov	x1, x19
   159fc:	bl	ab50 <styled_ostream_begin_use_class@plt>
   15a00:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
   15a04:	mov	x0, x22
   15a08:	add	x1, x1, #0xc50
   15a0c:	bl	aaa0 <ostream_write_str@plt>
   15a10:	mov	x0, x22
   15a14:	mov	x1, x19
   15a18:	bl	a430 <styled_ostream_end_use_class@plt>
   15a1c:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   15a20:	mov	x0, x22
   15a24:	add	x1, x1, #0xd91
   15a28:	bl	aaa0 <ostream_write_str@plt>
   15a2c:	adrp	x19, 37000 <get_search_path@@Base+0xb4c>
   15a30:	add	x19, x19, #0xa50
   15a34:	mov	x0, x22
   15a38:	mov	x1, x19
   15a3c:	bl	ab50 <styled_ostream_begin_use_class@plt>
   15a40:	adrp	x25, 37000 <get_search_path@@Base+0xb4c>
   15a44:	add	x25, x25, #0xd88
   15a48:	mov	x0, x22
   15a4c:	mov	x1, x25
   15a50:	bl	aaa0 <ostream_write_str@plt>
   15a54:	adrp	x27, 37000 <get_search_path@@Base+0xb4c>
   15a58:	add	x27, x27, #0xa57
   15a5c:	mov	x0, x22
   15a60:	mov	x1, x27
   15a64:	bl	ab50 <styled_ostream_begin_use_class@plt>
   15a68:	ldr	x8, [x21]
   15a6c:	mov	x0, x22
   15a70:	ldr	x8, [x8, x24, lsl #3]
   15a74:	ldr	x1, [x8]
   15a78:	bl	aaa0 <ostream_write_str@plt>
   15a7c:	mov	x0, x22
   15a80:	mov	x1, x27
   15a84:	bl	a430 <styled_ostream_end_use_class@plt>
   15a88:	mov	x0, x22
   15a8c:	mov	x1, x25
   15a90:	bl	aaa0 <ostream_write_str@plt>
   15a94:	mov	x0, x22
   15a98:	mov	x1, x19
   15a9c:	bl	a430 <styled_ostream_end_use_class@plt>
   15aa0:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   15aa4:	mov	x0, x22
   15aa8:	add	x1, x1, #0x1a1
   15aac:	bl	aaa0 <ostream_write_str@plt>
   15ab0:	ldr	x19, [x21]
   15ab4:	mov	w27, #0x1                   	// #1
   15ab8:	ldr	x8, [x19, x24, lsl #3]
   15abc:	ldr	x9, [x8, #8]
   15ac0:	ldr	x8, [x9, #8]
   15ac4:	cbz	x8, 165c8 <handle_filepos_comment_option@@Base+0xd34>
   15ac8:	stur	x9, [x29, #-40]
   15acc:	ldr	x9, [x9]
   15ad0:	adrp	x21, 37000 <get_search_path@@Base+0xb4c>
   15ad4:	mov	x10, xzr
   15ad8:	add	x21, x21, #0xa9d
   15adc:	stur	x24, [x29, #-72]
   15ae0:	ldr	x11, [x9, x10, lsl #3]
   15ae4:	ldr	x12, [x11]
   15ae8:	cbnz	x12, 15b00 <handle_filepos_comment_option@@Base+0x26c>
   15aec:	ldr	x12, [x11, #8]
   15af0:	ldrb	w12, [x12]
   15af4:	cbnz	w12, 15b00 <handle_filepos_comment_option@@Base+0x26c>
   15af8:	ldrb	w12, [x11, #256]
   15afc:	cbz	w12, 165dc <handle_filepos_comment_option@@Base+0xd48>
   15b00:	add	x10, x10, #0x1
   15b04:	cmp	x10, x8
   15b08:	b.cc	15ae0 <handle_filepos_comment_option@@Base+0x24c>  // b.lo, b.ul, b.last
   15b0c:	adrp	x24, 36000 <its_merge_context_free@@Base+0x1328>
   15b10:	add	x24, x24, #0xfae
   15b14:	mov	x19, xzr
   15b18:	stur	x24, [x29, #-32]
   15b1c:	ldur	x24, [x29, #-40]
   15b20:	stur	x19, [x29, #-80]
   15b24:	ldr	x8, [x24, #8]
   15b28:	cbz	x8, 165b4 <handle_filepos_comment_option@@Base+0xd20>
   15b2c:	mov	x19, xzr
   15b30:	ldr	x8, [x24]
   15b34:	ldr	x25, [x8, x19, lsl #3]
   15b38:	ldrb	w8, [x25, #256]
   15b3c:	cbnz	w8, 16014 <handle_filepos_comment_option@@Base+0x780>
   15b40:	tbz	w27, #0, 15b7c <handle_filepos_comment_option@@Base+0x2e8>
   15b44:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   15b48:	ldrb	w8, [x8, #1090]
   15b4c:	cmp	w8, #0x1
   15b50:	b.ne	15b74 <handle_filepos_comment_option@@Base+0x2e0>  // b.any
   15b54:	ldr	x8, [x25, #56]
   15b58:	cbz	x8, 15b74 <handle_filepos_comment_option@@Base+0x2e0>
   15b5c:	ldr	x9, [x8, #8]
   15b60:	cbz	x9, 15b74 <handle_filepos_comment_option@@Base+0x2e0>
   15b64:	ldr	x8, [x8]
   15b68:	ldr	x8, [x8]
   15b6c:	ldrb	w8, [x8]
   15b70:	cbz	w8, 15b7c <handle_filepos_comment_option@@Base+0x2e8>
   15b74:	mov	x0, x22
   15b78:	bl	166a8 <handle_filepos_comment_option@@Base+0xe14>
   15b7c:	ldr	x8, [x25]
   15b80:	cbnz	x8, 15b90 <handle_filepos_comment_option@@Base+0x2fc>
   15b84:	ldr	x8, [x25, #8]
   15b88:	ldrb	w8, [x8]
   15b8c:	cbz	w8, 15bc8 <handle_filepos_comment_option@@Base+0x334>
   15b90:	ldr	x8, [x25, #24]
   15b94:	ldrb	w8, [x8]
   15b98:	cbz	w8, 15bbc <handle_filepos_comment_option@@Base+0x328>
   15b9c:	ldrb	w8, [x25, #88]
   15ba0:	adrp	x9, 37000 <get_search_path@@Base+0xb4c>
   15ba4:	add	x9, x9, #0xa78
   15ba8:	cmp	w8, #0x0
   15bac:	adrp	x8, 37000 <get_search_path@@Base+0xb4c>
   15bb0:	add	x8, x8, #0xa42
   15bb4:	csel	x1, x9, x8, eq  // eq = none
   15bb8:	b	15bd0 <handle_filepos_comment_option@@Base+0x33c>
   15bbc:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   15bc0:	add	x1, x1, #0xa6b
   15bc4:	b	15bd0 <handle_filepos_comment_option@@Base+0x33c>
   15bc8:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   15bcc:	add	x1, x1, #0xa64
   15bd0:	mov	x0, x22
   15bd4:	bl	ab50 <styled_ostream_begin_use_class@plt>
   15bd8:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   15bdc:	mov	x0, x22
   15be0:	add	x1, x1, #0xa5c
   15be4:	bl	ab50 <styled_ostream_begin_use_class@plt>
   15be8:	mov	x0, x25
   15bec:	mov	x1, x22
   15bf0:	bl	a5f0 <message_print_comment@plt>
   15bf4:	mov	x0, x25
   15bf8:	mov	x1, x22
   15bfc:	bl	ad60 <message_print_comment_dot@plt>
   15c00:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   15c04:	ldrb	w2, [x8, #1090]
   15c08:	mov	x0, x25
   15c0c:	mov	x1, x22
   15c10:	mov	x3, x20
   15c14:	bl	a150 <message_print_comment_filepos@plt>
   15c18:	and	w2, w28, #0x1
   15c1c:	mov	x0, x25
   15c20:	mov	x1, x22
   15c24:	bl	aa90 <message_print_comment_flags@plt>
   15c28:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   15c2c:	mov	x0, x22
   15c30:	add	x1, x1, #0xa83
   15c34:	bl	ab50 <styled_ostream_begin_use_class@plt>
   15c38:	ldr	x6, [x25, #232]
   15c3c:	cbz	x6, 15c74 <handle_filepos_comment_option@@Base+0x3e0>
   15c40:	ldur	x8, [x29, #-32]
   15c44:	ldr	w7, [x25, #212]
   15c48:	stp	x20, x8, [sp, #-16]!
   15c4c:	adrp	x2, 37000 <get_search_path@@Base+0xb4c>
   15c50:	adrp	x4, 37000 <get_search_path@@Base+0xb4c>
   15c54:	mov	x0, x25
   15c58:	mov	x1, x22
   15c5c:	add	x2, x2, #0xb7b
   15c60:	mov	w3, wzr
   15c64:	add	x4, x4, #0xa94
   15c68:	mov	x5, x23
   15c6c:	bl	16718 <handle_filepos_comment_option@@Base+0xe84>
   15c70:	add	sp, sp, #0x10
   15c74:	ldr	x6, [x25, #240]
   15c78:	cbz	x6, 15cb0 <handle_filepos_comment_option@@Base+0x41c>
   15c7c:	ldur	x8, [x29, #-32]
   15c80:	ldr	w7, [x25, #212]
   15c84:	stp	x20, x8, [sp, #-16]!
   15c88:	adrp	x2, 37000 <get_search_path@@Base+0xb4c>
   15c8c:	adrp	x4, 37000 <get_search_path@@Base+0xb4c>
   15c90:	mov	x0, x25
   15c94:	mov	x1, x22
   15c98:	add	x2, x2, #0xb7b
   15c9c:	mov	w3, wzr
   15ca0:	add	x4, x4, #0xa94
   15ca4:	mov	x5, x21
   15ca8:	bl	16718 <handle_filepos_comment_option@@Base+0xe84>
   15cac:	add	sp, sp, #0x10
   15cb0:	ldr	x6, [x25, #248]
   15cb4:	cbz	x6, 15cf0 <handle_filepos_comment_option@@Base+0x45c>
   15cb8:	ldur	x8, [x29, #-32]
   15cbc:	ldr	w7, [x25, #212]
   15cc0:	stp	x20, x8, [sp, #-16]!
   15cc4:	adrp	x2, 37000 <get_search_path@@Base+0xb4c>
   15cc8:	adrp	x4, 37000 <get_search_path@@Base+0xb4c>
   15ccc:	adrp	x5, 36000 <its_merge_context_free@@Base+0x1328>
   15cd0:	mov	x0, x25
   15cd4:	mov	x1, x22
   15cd8:	add	x2, x2, #0xb7b
   15cdc:	mov	w3, wzr
   15ce0:	add	x4, x4, #0xa94
   15ce4:	add	x5, x5, #0xc5d
   15ce8:	bl	16718 <handle_filepos_comment_option@@Base+0xe84>
   15cec:	add	sp, sp, #0x10
   15cf0:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   15cf4:	mov	x0, x22
   15cf8:	add	x1, x1, #0xa83
   15cfc:	bl	a430 <styled_ostream_end_use_class@plt>
   15d00:	ldr	x8, [x25, #232]
   15d04:	cbnz	x8, 15d10 <handle_filepos_comment_option@@Base+0x47c>
   15d08:	ldr	x8, [x25, #240]
   15d0c:	cbz	x8, 15fec <handle_filepos_comment_option@@Base+0x758>
   15d10:	mov	w27, #0x3                   	// #3
   15d14:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   15d18:	mov	x0, x22
   15d1c:	add	x1, x1, #0xa5c
   15d20:	bl	a430 <styled_ostream_end_use_class@plt>
   15d24:	ldr	x0, [x25]
   15d28:	cbz	x0, 15dac <handle_filepos_comment_option@@Base+0x518>
   15d2c:	bl	a7d0 <is_ascii_string@plt>
   15d30:	tbnz	w0, #0, 15dac <handle_filepos_comment_option@@Base+0x518>
   15d34:	ldur	x0, [x29, #-32]
   15d38:	bl	a1f0 <po_charset_canonicalize@plt>
   15d3c:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   15d40:	ldr	x8, [x8, #3952]
   15d44:	ldr	x8, [x8]
   15d48:	cmp	x0, x8
   15d4c:	b.eq	15dac <handle_filepos_comment_option@@Base+0x518>  // b.none
   15d50:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   15d54:	mov	w2, #0x5                   	// #5
   15d58:	mov	x0, xzr
   15d5c:	add	x1, x1, #0xb7f
   15d60:	bl	acd0 <dcgettext@plt>
   15d64:	ldr	x1, [x25]
   15d68:	bl	aa20 <xasprintf@plt>
   15d6c:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   15d70:	ldr	x8, [x8, #3736]
   15d74:	mov	x21, x0
   15d78:	mov	w5, #0x1                   	// #1
   15d7c:	mov	w0, wzr
   15d80:	ldr	x8, [x8]
   15d84:	mov	x1, x25
   15d88:	mov	x2, xzr
   15d8c:	mov	x3, xzr
   15d90:	mov	x4, xzr
   15d94:	mov	x6, x21
   15d98:	blr	x8
   15d9c:	mov	x0, x21
   15da0:	adrp	x21, 37000 <get_search_path@@Base+0xb4c>
   15da4:	add	x21, x21, #0xa9d
   15da8:	bl	aa00 <free@plt>
   15dac:	ldr	x0, [x25, #8]
   15db0:	mov	x24, x20
   15db4:	bl	a7d0 <is_ascii_string@plt>
   15db8:	tbnz	w0, #0, 15e34 <handle_filepos_comment_option@@Base+0x5a0>
   15dbc:	ldur	x0, [x29, #-32]
   15dc0:	bl	a1f0 <po_charset_canonicalize@plt>
   15dc4:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   15dc8:	ldr	x8, [x8, #3952]
   15dcc:	ldr	x8, [x8]
   15dd0:	cmp	x0, x8
   15dd4:	b.eq	15e34 <handle_filepos_comment_option@@Base+0x5a0>  // b.none
   15dd8:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   15ddc:	mov	w2, #0x5                   	// #5
   15de0:	mov	x0, xzr
   15de4:	add	x1, x1, #0xc40
   15de8:	bl	acd0 <dcgettext@plt>
   15dec:	ldr	x1, [x25, #8]
   15df0:	bl	aa20 <xasprintf@plt>
   15df4:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   15df8:	ldr	x8, [x8, #3736]
   15dfc:	mov	x21, x0
   15e00:	mov	w5, #0x1                   	// #1
   15e04:	mov	w0, wzr
   15e08:	ldr	x8, [x8]
   15e0c:	mov	x1, x25
   15e10:	mov	x2, xzr
   15e14:	mov	x3, xzr
   15e18:	mov	x4, xzr
   15e1c:	mov	x6, x21
   15e20:	blr	x8
   15e24:	mov	x0, x21
   15e28:	adrp	x21, 37000 <get_search_path@@Base+0xb4c>
   15e2c:	add	x21, x21, #0xa9d
   15e30:	bl	aa00 <free@plt>
   15e34:	ldr	x6, [x25]
   15e38:	ldur	x20, [x29, #-32]
   15e3c:	cbz	x6, 15e68 <handle_filepos_comment_option@@Base+0x5d4>
   15e40:	ldr	w7, [x25, #212]
   15e44:	stp	x24, x20, [sp, #-16]!
   15e48:	mov	x0, x25
   15e4c:	mov	x1, x22
   15e50:	mov	x2, xzr
   15e54:	mov	w3, w27
   15e58:	mov	x4, x21
   15e5c:	mov	x5, x23
   15e60:	bl	16718 <handle_filepos_comment_option@@Base+0xe84>
   15e64:	add	sp, sp, #0x10
   15e68:	ldr	x6, [x25, #8]
   15e6c:	ldr	w7, [x25, #212]
   15e70:	stp	x24, x20, [sp, #-16]!
   15e74:	mov	x0, x25
   15e78:	mov	x1, x22
   15e7c:	mov	x2, xzr
   15e80:	mov	w3, w27
   15e84:	mov	x4, x21
   15e88:	mov	x5, x21
   15e8c:	bl	16718 <handle_filepos_comment_option@@Base+0xe84>
   15e90:	add	sp, sp, #0x10
   15e94:	ldr	x6, [x25, #16]
   15e98:	cbz	x6, 15f6c <handle_filepos_comment_option@@Base+0x6d8>
   15e9c:	ldr	w7, [x25, #212]
   15ea0:	stp	x24, x20, [sp, #-16]!
   15ea4:	adrp	x5, 36000 <its_merge_context_free@@Base+0x1328>
   15ea8:	mov	x0, x25
   15eac:	mov	x1, x22
   15eb0:	mov	x2, xzr
   15eb4:	mov	w3, w27
   15eb8:	mov	x4, x21
   15ebc:	add	x5, x5, #0xc5d
   15ec0:	bl	16718 <handle_filepos_comment_option@@Base+0xe84>
   15ec4:	add	sp, sp, #0x10
   15ec8:	ldr	x8, [x25, #16]
   15ecc:	cbz	x8, 15f6c <handle_filepos_comment_option@@Base+0x6d8>
   15ed0:	ldr	x8, [x25, #32]
   15ed4:	mov	x23, x26
   15ed8:	adrp	x26, 37000 <get_search_path@@Base+0xb4c>
   15edc:	add	x26, x26, #0xcfd
   15ee0:	cmp	x8, #0x1
   15ee4:	b.lt	15f50 <handle_filepos_comment_option@@Base+0x6bc>  // b.tstop
   15ee8:	ldr	x21, [x25, #24]
   15eec:	mov	w28, wzr
   15ef0:	sub	x0, x29, #0x14
   15ef4:	mov	x1, x26
   15ef8:	mov	w2, w28
   15efc:	bl	a280 <sprintf@plt>
   15f00:	ldr	w7, [x25, #212]
   15f04:	sub	x5, x29, #0x14
   15f08:	stp	x24, x20, [sp, #-16]!
   15f0c:	mov	x0, x25
   15f10:	mov	x1, x22
   15f14:	mov	x2, xzr
   15f18:	mov	w3, w27
   15f1c:	mov	x4, x23
   15f20:	mov	x6, x21
   15f24:	bl	16718 <handle_filepos_comment_option@@Base+0xe84>
   15f28:	add	sp, sp, #0x10
   15f2c:	mov	x0, x21
   15f30:	bl	a0d0 <strlen@plt>
   15f34:	ldp	x8, x9, [x25, #24]
   15f38:	add	x10, x0, x21
   15f3c:	add	x21, x10, #0x1
   15f40:	add	w28, w28, #0x1
   15f44:	add	x8, x8, x9
   15f48:	cmp	x21, x8
   15f4c:	b.cc	15ef0 <handle_filepos_comment_option@@Base+0x65c>  // b.lo, b.ul, b.last
   15f50:	ldur	w28, [x29, #-60]
   15f54:	adrp	x21, 37000 <get_search_path@@Base+0xb4c>
   15f58:	mov	x26, x23
   15f5c:	adrp	x23, 36000 <its_merge_context_free@@Base+0x1328>
   15f60:	add	x21, x21, #0xa9d
   15f64:	add	x23, x23, #0xc71
   15f68:	b	15f98 <handle_filepos_comment_option@@Base+0x704>
   15f6c:	ldr	x6, [x25, #24]
   15f70:	ldr	w7, [x25, #212]
   15f74:	stp	x24, x20, [sp, #-16]!
   15f78:	mov	x0, x25
   15f7c:	mov	x1, x22
   15f80:	mov	x2, xzr
   15f84:	mov	w3, w27
   15f88:	mov	x4, x26
   15f8c:	mov	x5, x26
   15f90:	bl	16718 <handle_filepos_comment_option@@Base+0xe84>
   15f94:	add	sp, sp, #0x10
   15f98:	mov	x20, x24
   15f9c:	ldr	x8, [x25]
   15fa0:	ldur	x24, [x29, #-40]
   15fa4:	cbnz	x8, 15fb4 <handle_filepos_comment_option@@Base+0x720>
   15fa8:	ldr	x8, [x25, #8]
   15fac:	ldrb	w8, [x8]
   15fb0:	cbz	w8, 16000 <handle_filepos_comment_option@@Base+0x76c>
   15fb4:	ldr	x8, [x25, #24]
   15fb8:	ldrb	w8, [x8]
   15fbc:	cbz	w8, 15fe0 <handle_filepos_comment_option@@Base+0x74c>
   15fc0:	ldrb	w8, [x25, #88]
   15fc4:	adrp	x9, 37000 <get_search_path@@Base+0xb4c>
   15fc8:	add	x9, x9, #0xa78
   15fcc:	cmp	w8, #0x0
   15fd0:	adrp	x8, 37000 <get_search_path@@Base+0xb4c>
   15fd4:	add	x8, x8, #0xa42
   15fd8:	csel	x1, x9, x8, eq  // eq = none
   15fdc:	b	16008 <handle_filepos_comment_option@@Base+0x774>
   15fe0:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   15fe4:	add	x1, x1, #0xa6b
   15fe8:	b	16008 <handle_filepos_comment_option@@Base+0x774>
   15fec:	ldr	x8, [x25, #248]
   15ff0:	cmp	x8, #0x0
   15ff4:	mov	w8, #0x3                   	// #3
   15ff8:	csel	w27, wzr, w8, eq  // eq = none
   15ffc:	b	15d14 <handle_filepos_comment_option@@Base+0x480>
   16000:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   16004:	add	x1, x1, #0xa64
   16008:	mov	x0, x22
   1600c:	bl	a430 <styled_ostream_end_use_class@plt>
   16010:	mov	w27, #0x1                   	// #1
   16014:	ldr	x8, [x24, #8]
   16018:	add	x19, x19, #0x1
   1601c:	cmp	x19, x8
   16020:	b.cc	15b30 <handle_filepos_comment_option@@Base+0x29c>  // b.lo, b.ul, b.last
   16024:	cbz	x8, 165b4 <handle_filepos_comment_option@@Base+0xd20>
   16028:	mov	x19, xzr
   1602c:	ldr	x9, [x24]
   16030:	ldr	x25, [x9, x19, lsl #3]
   16034:	ldrb	w9, [x25, #256]
   16038:	cbz	w9, 16594 <handle_filepos_comment_option@@Base+0xd00>
   1603c:	ldr	x9, [x25, #24]
   16040:	ldrb	w9, [x9]
   16044:	cbz	w9, 160e0 <handle_filepos_comment_option@@Base+0x84c>
   16048:	tbz	w27, #0, 16054 <handle_filepos_comment_option@@Base+0x7c0>
   1604c:	mov	x0, x22
   16050:	bl	166a8 <handle_filepos_comment_option@@Base+0xe14>
   16054:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   16058:	mov	x0, x22
   1605c:	add	x1, x1, #0xae4
   16060:	bl	ab50 <styled_ostream_begin_use_class@plt>
   16064:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   16068:	mov	x0, x22
   1606c:	add	x1, x1, #0xa5c
   16070:	bl	ab50 <styled_ostream_begin_use_class@plt>
   16074:	mov	x0, x25
   16078:	mov	x1, x22
   1607c:	bl	a5f0 <message_print_comment@plt>
   16080:	mov	x0, x25
   16084:	mov	x1, x22
   16088:	bl	ad60 <message_print_comment_dot@plt>
   1608c:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   16090:	ldrb	w2, [x8, #1090]
   16094:	mov	x0, x25
   16098:	mov	x1, x22
   1609c:	mov	x3, x20
   160a0:	bl	a150 <message_print_comment_filepos@plt>
   160a4:	ldrb	w8, [x25, #88]
   160a8:	ldur	x24, [x29, #-32]
   160ac:	cbz	w8, 160e8 <handle_filepos_comment_option@@Base+0x854>
   160b0:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   160b4:	mov	x0, x22
   160b8:	add	x1, x1, #0xb3e
   160bc:	bl	aaa0 <ostream_write_str@plt>
   160c0:	ldrb	w8, [x25, #88]
   160c4:	cbz	w8, 1611c <handle_filepos_comment_option@@Base+0x888>
   160c8:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   160cc:	mov	x0, x22
   160d0:	add	x1, x1, #0xd93
   160d4:	bl	aaa0 <ostream_write_str@plt>
   160d8:	mov	w8, wzr
   160dc:	b	16120 <handle_filepos_comment_option@@Base+0x88c>
   160e0:	mov	w27, #0x1                   	// #1
   160e4:	b	16594 <handle_filepos_comment_option@@Base+0xd00>
   160e8:	mov	x8, xzr
   160ec:	add	x9, x25, #0x5c
   160f0:	ldr	w10, [x9, x8]
   160f4:	cmp	w10, #0x5
   160f8:	b.eq	16100 <handle_filepos_comment_option@@Base+0x86c>  // b.none
   160fc:	cbnz	w10, 160b0 <handle_filepos_comment_option@@Base+0x81c>
   16100:	add	x8, x8, #0x4
   16104:	cmp	x8, #0x70
   16108:	b.ne	160f0 <handle_filepos_comment_option@@Base+0x85c>  // b.any
   1610c:	ldr	w8, [x25, #212]
   16110:	cmp	w8, #0x2
   16114:	b.eq	160b0 <handle_filepos_comment_option@@Base+0x81c>  // b.none
   16118:	b	16208 <handle_filepos_comment_option@@Base+0x974>
   1611c:	mov	w8, #0x1                   	// #1
   16120:	mov	x21, xzr
   16124:	add	x27, x25, #0x5c
   16128:	ldr	w9, [x27, x21, lsl #2]
   1612c:	cbz	w9, 16188 <handle_filepos_comment_option@@Base+0x8f4>
   16130:	cmp	w9, #0x5
   16134:	b.eq	16188 <handle_filepos_comment_option@@Base+0x8f4>  // b.none
   16138:	tbnz	w8, #0, 1614c <handle_filepos_comment_option@@Base+0x8b8>
   1613c:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   16140:	mov	x0, x22
   16144:	add	x1, x1, #0xb3f
   16148:	bl	aaa0 <ostream_write_str@plt>
   1614c:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   16150:	mov	x0, x22
   16154:	add	x1, x1, #0xd91
   16158:	bl	aaa0 <ostream_write_str@plt>
   1615c:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   16160:	ldr	w0, [x27, x21, lsl #2]
   16164:	ldr	x8, [x8, #4032]
   16168:	and	w2, w28, #0x1
   1616c:	ldr	x1, [x8, x21, lsl #3]
   16170:	bl	aeb0 <make_format_description_string@plt>
   16174:	adrp	x1, 4e000 <formatstring_gfc_internal@@Base+0x10>
   16178:	mov	x0, x22
   1617c:	add	x1, x1, #0x3dc
   16180:	bl	aaa0 <ostream_write_str@plt>
   16184:	mov	w8, wzr
   16188:	add	x21, x21, #0x1
   1618c:	cmp	x21, #0x1c
   16190:	b.ne	16128 <handle_filepos_comment_option@@Base+0x894>  // b.any
   16194:	ldr	w9, [x25, #212]
   16198:	adrp	x21, 37000 <get_search_path@@Base+0xb4c>
   1619c:	add	x21, x21, #0xa9d
   161a0:	cmp	w9, #0x2
   161a4:	b.ne	161f8 <handle_filepos_comment_option@@Base+0x964>  // b.any
   161a8:	tbnz	w8, #0, 161bc <handle_filepos_comment_option@@Base+0x928>
   161ac:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   161b0:	mov	x0, x22
   161b4:	add	x1, x1, #0xb3f
   161b8:	bl	aaa0 <ostream_write_str@plt>
   161bc:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   161c0:	mov	x0, x22
   161c4:	add	x1, x1, #0xd91
   161c8:	bl	aaa0 <ostream_write_str@plt>
   161cc:	ldr	w8, [x25, #212]
   161d0:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
   161d4:	add	x1, x1, #0x9c4
   161d8:	cmp	w8, #0x1
   161dc:	b.eq	161f0 <handle_filepos_comment_option@@Base+0x95c>  // b.none
   161e0:	cmp	w8, #0x2
   161e4:	b.ne	166a4 <handle_filepos_comment_option@@Base+0xe10>  // b.any
   161e8:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
   161ec:	add	x1, x1, #0x9c1
   161f0:	mov	x0, x22
   161f4:	bl	aaa0 <ostream_write_str@plt>
   161f8:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   161fc:	mov	x0, x22
   16200:	add	x1, x1, #0x1a1
   16204:	bl	aaa0 <ostream_write_str@plt>
   16208:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   1620c:	mov	x0, x22
   16210:	add	x1, x1, #0xa83
   16214:	bl	ab50 <styled_ostream_begin_use_class@plt>
   16218:	ldr	x6, [x25, #232]
   1621c:	cbz	x6, 16250 <handle_filepos_comment_option@@Base+0x9bc>
   16220:	ldr	w7, [x25, #212]
   16224:	stp	x20, x24, [sp, #-16]!
   16228:	adrp	x2, 37000 <get_search_path@@Base+0xb4c>
   1622c:	adrp	x4, 37000 <get_search_path@@Base+0xb4c>
   16230:	mov	x0, x25
   16234:	mov	x1, x22
   16238:	add	x2, x2, #0xd9a
   1623c:	mov	w3, wzr
   16240:	add	x4, x4, #0xa94
   16244:	mov	x5, x23
   16248:	bl	16718 <handle_filepos_comment_option@@Base+0xe84>
   1624c:	add	sp, sp, #0x10
   16250:	ldr	x6, [x25, #240]
   16254:	cbz	x6, 16288 <handle_filepos_comment_option@@Base+0x9f4>
   16258:	ldr	w7, [x25, #212]
   1625c:	stp	x20, x24, [sp, #-16]!
   16260:	adrp	x2, 37000 <get_search_path@@Base+0xb4c>
   16264:	adrp	x4, 37000 <get_search_path@@Base+0xb4c>
   16268:	mov	x0, x25
   1626c:	mov	x1, x22
   16270:	add	x2, x2, #0xd9a
   16274:	mov	w3, wzr
   16278:	add	x4, x4, #0xa94
   1627c:	mov	x5, x21
   16280:	bl	16718 <handle_filepos_comment_option@@Base+0xe84>
   16284:	add	sp, sp, #0x10
   16288:	ldr	x6, [x25, #248]
   1628c:	cbz	x6, 162c4 <handle_filepos_comment_option@@Base+0xa30>
   16290:	ldr	w7, [x25, #212]
   16294:	stp	x20, x24, [sp, #-16]!
   16298:	adrp	x2, 37000 <get_search_path@@Base+0xb4c>
   1629c:	adrp	x4, 37000 <get_search_path@@Base+0xb4c>
   162a0:	adrp	x5, 36000 <its_merge_context_free@@Base+0x1328>
   162a4:	mov	x0, x25
   162a8:	mov	x1, x22
   162ac:	add	x2, x2, #0xd9a
   162b0:	mov	w3, wzr
   162b4:	add	x4, x4, #0xa94
   162b8:	add	x5, x5, #0xc5d
   162bc:	bl	16718 <handle_filepos_comment_option@@Base+0xe84>
   162c0:	add	sp, sp, #0x10
   162c4:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   162c8:	mov	x0, x22
   162cc:	add	x1, x1, #0xa83
   162d0:	bl	a430 <styled_ostream_end_use_class@plt>
   162d4:	ldr	x8, [x25, #232]
   162d8:	cbnz	x8, 162e4 <handle_filepos_comment_option@@Base+0xa50>
   162dc:	ldr	x8, [x25, #240]
   162e0:	cbz	x8, 165a4 <handle_filepos_comment_option@@Base+0xd10>
   162e4:	mov	w27, #0x1                   	// #1
   162e8:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   162ec:	mov	x0, x22
   162f0:	add	x1, x1, #0xa5c
   162f4:	bl	a430 <styled_ostream_end_use_class@plt>
   162f8:	ldr	x0, [x25]
   162fc:	cbz	x0, 16380 <handle_filepos_comment_option@@Base+0xaec>
   16300:	bl	a7d0 <is_ascii_string@plt>
   16304:	tbnz	w0, #0, 16380 <handle_filepos_comment_option@@Base+0xaec>
   16308:	mov	x0, x24
   1630c:	bl	a1f0 <po_charset_canonicalize@plt>
   16310:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   16314:	ldr	x8, [x8, #3952]
   16318:	ldr	x8, [x8]
   1631c:	cmp	x0, x8
   16320:	b.eq	16380 <handle_filepos_comment_option@@Base+0xaec>  // b.none
   16324:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   16328:	mov	w2, #0x5                   	// #5
   1632c:	mov	x0, xzr
   16330:	add	x1, x1, #0xb7f
   16334:	bl	acd0 <dcgettext@plt>
   16338:	ldr	x1, [x25]
   1633c:	bl	aa20 <xasprintf@plt>
   16340:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   16344:	ldr	x8, [x8, #3736]
   16348:	mov	x21, x0
   1634c:	mov	w5, #0x1                   	// #1
   16350:	mov	w0, wzr
   16354:	ldr	x8, [x8]
   16358:	mov	x1, x25
   1635c:	mov	x2, xzr
   16360:	mov	x3, xzr
   16364:	mov	x4, xzr
   16368:	mov	x6, x21
   1636c:	blr	x8
   16370:	mov	x0, x21
   16374:	adrp	x21, 37000 <get_search_path@@Base+0xb4c>
   16378:	add	x21, x21, #0xa9d
   1637c:	bl	aa00 <free@plt>
   16380:	ldr	x0, [x25, #8]
   16384:	stur	x19, [x29, #-56]
   16388:	bl	a7d0 <is_ascii_string@plt>
   1638c:	tbnz	w0, #0, 16408 <handle_filepos_comment_option@@Base+0xb74>
   16390:	mov	x0, x24
   16394:	bl	a1f0 <po_charset_canonicalize@plt>
   16398:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1639c:	ldr	x8, [x8, #3952]
   163a0:	ldr	x8, [x8]
   163a4:	cmp	x0, x8
   163a8:	b.eq	16408 <handle_filepos_comment_option@@Base+0xb74>  // b.none
   163ac:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   163b0:	mov	w2, #0x5                   	// #5
   163b4:	mov	x0, xzr
   163b8:	add	x1, x1, #0xc40
   163bc:	bl	acd0 <dcgettext@plt>
   163c0:	ldr	x1, [x25, #8]
   163c4:	bl	aa20 <xasprintf@plt>
   163c8:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   163cc:	ldr	x8, [x8, #3736]
   163d0:	mov	x21, x0
   163d4:	mov	w5, #0x1                   	// #1
   163d8:	mov	w0, wzr
   163dc:	ldr	x8, [x8]
   163e0:	mov	x1, x25
   163e4:	mov	x2, xzr
   163e8:	mov	x3, xzr
   163ec:	mov	x4, xzr
   163f0:	mov	x6, x21
   163f4:	blr	x8
   163f8:	mov	x0, x21
   163fc:	adrp	x21, 37000 <get_search_path@@Base+0xb4c>
   16400:	add	x21, x21, #0xa9d
   16404:	bl	aa00 <free@plt>
   16408:	ldr	x6, [x25]
   1640c:	ldur	x19, [x29, #-48]
   16410:	adrp	x20, 37000 <get_search_path@@Base+0xb4c>
   16414:	add	x20, x20, #0xd9f
   16418:	cbz	x6, 16444 <handle_filepos_comment_option@@Base+0xbb0>
   1641c:	ldr	w7, [x25, #212]
   16420:	stp	x19, x24, [sp, #-16]!
   16424:	mov	x0, x25
   16428:	mov	x1, x22
   1642c:	mov	x2, x20
   16430:	mov	w3, w27
   16434:	mov	x4, x21
   16438:	mov	x5, x23
   1643c:	bl	16718 <handle_filepos_comment_option@@Base+0xe84>
   16440:	add	sp, sp, #0x10
   16444:	ldr	x6, [x25, #8]
   16448:	ldr	w7, [x25, #212]
   1644c:	stp	x19, x24, [sp, #-16]!
   16450:	mov	x0, x25
   16454:	mov	x1, x22
   16458:	mov	x2, x20
   1645c:	mov	w3, w27
   16460:	mov	x4, x21
   16464:	mov	x5, x21
   16468:	bl	16718 <handle_filepos_comment_option@@Base+0xe84>
   1646c:	add	sp, sp, #0x10
   16470:	ldr	x6, [x25, #16]
   16474:	cbz	x6, 16548 <handle_filepos_comment_option@@Base+0xcb4>
   16478:	ldr	w7, [x25, #212]
   1647c:	stp	x19, x24, [sp, #-16]!
   16480:	adrp	x5, 36000 <its_merge_context_free@@Base+0x1328>
   16484:	mov	x0, x25
   16488:	mov	x1, x22
   1648c:	mov	x2, x20
   16490:	mov	w3, w27
   16494:	mov	x4, x21
   16498:	add	x5, x5, #0xc5d
   1649c:	bl	16718 <handle_filepos_comment_option@@Base+0xe84>
   164a0:	add	sp, sp, #0x10
   164a4:	ldr	x8, [x25, #16]
   164a8:	cbz	x8, 16548 <handle_filepos_comment_option@@Base+0xcb4>
   164ac:	ldr	x8, [x25, #32]
   164b0:	mov	x23, x26
   164b4:	adrp	x26, 37000 <get_search_path@@Base+0xb4c>
   164b8:	add	x26, x26, #0xcfd
   164bc:	cmp	x8, #0x1
   164c0:	b.lt	1652c <handle_filepos_comment_option@@Base+0xc98>  // b.tstop
   164c4:	ldr	x21, [x25, #24]
   164c8:	mov	w28, wzr
   164cc:	sub	x0, x29, #0x14
   164d0:	mov	x1, x26
   164d4:	mov	w2, w28
   164d8:	bl	a280 <sprintf@plt>
   164dc:	ldr	w7, [x25, #212]
   164e0:	sub	x5, x29, #0x14
   164e4:	stp	x19, x24, [sp, #-16]!
   164e8:	mov	x0, x25
   164ec:	mov	x1, x22
   164f0:	mov	x2, x20
   164f4:	mov	w3, w27
   164f8:	mov	x4, x23
   164fc:	mov	x6, x21
   16500:	bl	16718 <handle_filepos_comment_option@@Base+0xe84>
   16504:	add	sp, sp, #0x10
   16508:	mov	x0, x21
   1650c:	bl	a0d0 <strlen@plt>
   16510:	ldp	x8, x9, [x25, #24]
   16514:	add	x10, x0, x21
   16518:	add	x21, x10, #0x1
   1651c:	add	w28, w28, #0x1
   16520:	add	x8, x8, x9
   16524:	cmp	x21, x8
   16528:	b.cc	164cc <handle_filepos_comment_option@@Base+0xc38>  // b.lo, b.ul, b.last
   1652c:	ldur	w28, [x29, #-60]
   16530:	adrp	x21, 37000 <get_search_path@@Base+0xb4c>
   16534:	mov	x26, x23
   16538:	adrp	x23, 36000 <its_merge_context_free@@Base+0x1328>
   1653c:	add	x21, x21, #0xa9d
   16540:	add	x23, x23, #0xc71
   16544:	b	16574 <handle_filepos_comment_option@@Base+0xce0>
   16548:	ldr	x6, [x25, #24]
   1654c:	ldr	w7, [x25, #212]
   16550:	stp	x19, x24, [sp, #-16]!
   16554:	mov	x0, x25
   16558:	mov	x1, x22
   1655c:	mov	x2, x20
   16560:	mov	w3, w27
   16564:	mov	x4, x26
   16568:	mov	x5, x26
   1656c:	bl	16718 <handle_filepos_comment_option@@Base+0xe84>
   16570:	add	sp, sp, #0x10
   16574:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   16578:	mov	x0, x22
   1657c:	add	x1, x1, #0xae4
   16580:	bl	a430 <styled_ostream_end_use_class@plt>
   16584:	ldp	x20, x24, [x29, #-48]
   16588:	ldur	x19, [x29, #-56]
   1658c:	mov	w27, #0x1                   	// #1
   16590:	ldr	x8, [x24, #8]
   16594:	add	x19, x19, #0x1
   16598:	cmp	x19, x8
   1659c:	b.cc	1602c <handle_filepos_comment_option@@Base+0x798>  // b.lo, b.ul, b.last
   165a0:	b	165b4 <handle_filepos_comment_option@@Base+0xd20>
   165a4:	ldr	x8, [x25, #248]
   165a8:	cmp	x8, #0x0
   165ac:	cset	w27, ne  // ne = any
   165b0:	b	162e8 <handle_filepos_comment_option@@Base+0xa54>
   165b4:	ldur	x0, [x29, #-80]
   165b8:	cbz	x0, 165c0 <handle_filepos_comment_option@@Base+0xd2c>
   165bc:	bl	ad70 <freea@plt>
   165c0:	ldur	x21, [x29, #-88]
   165c4:	ldur	x24, [x29, #-72]
   165c8:	ldr	x8, [x21, #8]
   165cc:	add	x24, x24, #0x1
   165d0:	cmp	x24, x8
   165d4:	b.cc	159c0 <handle_filepos_comment_option@@Base+0x12c>  // b.lo, b.ul, b.last
   165d8:	b	16684 <handle_filepos_comment_option@@Base+0xdf0>
   165dc:	ldr	x0, [x11, #24]
   165e0:	cbz	x0, 15b0c <handle_filepos_comment_option@@Base+0x278>
   165e4:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   165e8:	add	x1, x1, #0x196
   165ec:	bl	ad20 <c_strstr@plt>
   165f0:	cbz	x0, 15b0c <handle_filepos_comment_option@@Base+0x278>
   165f4:	add	x21, x0, #0x8
   165f8:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   165fc:	mov	x0, x21
   16600:	add	x1, x1, #0x19f
   16604:	bl	ada0 <strcspn@plt>
   16608:	mov	x24, x0
   1660c:	add	x0, x0, #0x1
   16610:	cmp	x0, #0xfa0
   16614:	b.hi	16638 <handle_filepos_comment_option@@Base+0xda4>  // b.pmore
   16618:	add	x9, x24, #0x2f
   1661c:	mov	x8, sp
   16620:	and	x9, x9, #0xfffffffffffffff0
   16624:	sub	x8, x8, x9
   16628:	mov	sp, x8
   1662c:	add	x8, x8, #0x1f
   16630:	and	x19, x8, #0xffffffffffffffe0
   16634:	b	16640 <handle_filepos_comment_option@@Base+0xdac>
   16638:	bl	a910 <xmmalloca@plt>
   1663c:	mov	x19, x0
   16640:	mov	x0, x19
   16644:	mov	x1, x21
   16648:	mov	x2, x24
   1664c:	bl	a040 <memcpy@plt>
   16650:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   16654:	mov	x0, x19
   16658:	add	x1, x1, #0x4f2
   1665c:	strb	wzr, [x19, x24]
   16660:	bl	a8d0 <strcmp@plt>
   16664:	adrp	x8, 36000 <its_merge_context_free@@Base+0x1328>
   16668:	cmp	w0, #0x0
   1666c:	add	x8, x8, #0xfae
   16670:	adrp	x21, 37000 <get_search_path@@Base+0xb4c>
   16674:	csel	x8, x8, x19, eq  // eq = none
   16678:	add	x21, x21, #0xa9d
   1667c:	stur	x8, [x29, #-32]
   16680:	b	15b1c <handle_filepos_comment_option@@Base+0x288>
   16684:	mov	sp, x29
   16688:	ldp	x20, x19, [sp, #80]
   1668c:	ldp	x22, x21, [sp, #64]
   16690:	ldp	x24, x23, [sp, #48]
   16694:	ldp	x26, x25, [sp, #32]
   16698:	ldp	x28, x27, [sp, #16]
   1669c:	ldp	x29, x30, [sp], #96
   166a0:	ret
   166a4:	bl	a7e0 <abort@plt>
   166a8:	stp	x29, x30, [sp, #-32]!
   166ac:	stp	x20, x19, [sp, #16]
   166b0:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   166b4:	ldrb	w8, [x8, #1090]
   166b8:	mov	x19, x0
   166bc:	mov	x29, sp
   166c0:	cmp	w8, #0x1
   166c4:	b.ne	16700 <handle_filepos_comment_option@@Base+0xe6c>  // b.any
   166c8:	adrp	x20, 37000 <get_search_path@@Base+0xb4c>
   166cc:	add	x20, x20, #0xa5c
   166d0:	mov	x0, x19
   166d4:	mov	x1, x20
   166d8:	bl	ab50 <styled_ostream_begin_use_class@plt>
   166dc:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   166e0:	add	x1, x1, #0xb78
   166e4:	mov	x0, x19
   166e8:	bl	aaa0 <ostream_write_str@plt>
   166ec:	mov	x0, x19
   166f0:	mov	x1, x20
   166f4:	ldp	x20, x19, [sp, #16]
   166f8:	ldp	x29, x30, [sp], #32
   166fc:	b	a430 <styled_ostream_end_use_class@plt>
   16700:	mov	x0, x19
   16704:	ldp	x20, x19, [sp, #16]
   16708:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   1670c:	add	x1, x1, #0x1a1
   16710:	ldp	x29, x30, [sp], #32
   16714:	b	aaa0 <ostream_write_str@plt>
   16718:	sub	sp, sp, #0x170
   1671c:	stp	x29, x30, [sp, #272]
   16720:	add	x29, sp, #0x110
   16724:	ldr	x8, [x29, #104]
   16728:	str	x0, [sp, #56]
   1672c:	stp	x28, x27, [sp, #288]
   16730:	stp	x26, x25, [sp, #304]
   16734:	mov	x0, x8
   16738:	stp	x24, x23, [sp, #320]
   1673c:	stp	x22, x21, [sp, #336]
   16740:	stp	x20, x19, [sp, #352]
   16744:	stp	w7, w3, [sp, #24]
   16748:	str	x6, [sp, #88]
   1674c:	mov	x23, x5
   16750:	mov	x19, x4
   16754:	mov	x24, x2
   16758:	mov	x25, x1
   1675c:	bl	a1f0 <po_charset_canonicalize@plt>
   16760:	mov	x20, x0
   16764:	adrp	x0, 37000 <get_search_path@@Base+0xb4c>
   16768:	add	x0, x0, #0xd08
   1676c:	bl	ae20 <getenv@plt>
   16770:	cbz	x0, 16788 <handle_filepos_comment_option@@Base+0xef4>
   16774:	mov	x22, #0xffffffffffffffff    	// #-1
   16778:	cbz	x20, 167a0 <handle_filepos_comment_option@@Base+0xf0c>
   1677c:	ldrb	w8, [x0]
   16780:	cbz	w8, 1678c <handle_filepos_comment_option@@Base+0xef8>
   16784:	b	167a0 <handle_filepos_comment_option@@Base+0xf0c>
   16788:	cbz	x20, 167d8 <handle_filepos_comment_option@@Base+0xf44>
   1678c:	adrp	x0, 37000 <get_search_path@@Base+0xb4c>
   16790:	add	x0, x0, #0xd1b
   16794:	mov	x1, x20
   16798:	bl	ab80 <iconv_open@plt>
   1679c:	mov	x22, x0
   167a0:	cmn	x22, #0x1
   167a4:	cset	w8, ne  // ne = any
   167a8:	str	w8, [sp, #44]
   167ac:	cbz	x20, 167d0 <handle_filepos_comment_option@@Base+0xf3c>
   167b0:	b.ne	167d0 <handle_filepos_comment_option@@Base+0xf3c>  // b.any
   167b4:	mov	x0, x20
   167b8:	bl	a1b0 <po_is_charset_weird_cjk@plt>
   167bc:	eor	w8, w0, #0x1
   167c0:	str	wzr, [sp, #44]
   167c4:	str	w8, [sp, #20]
   167c8:	mov	x22, #0xffffffffffffffff    	// #-1
   167cc:	b	167f4 <handle_filepos_comment_option@@Base+0xf60>
   167d0:	cbnz	x20, 167ec <handle_filepos_comment_option@@Base+0xf58>
   167d4:	b	167e0 <handle_filepos_comment_option@@Base+0xf4c>
   167d8:	str	wzr, [sp, #44]
   167dc:	mov	x22, #0xffffffffffffffff    	// #-1
   167e0:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   167e4:	ldr	x8, [x8, #3824]
   167e8:	ldr	x20, [x8]
   167ec:	mov	w8, #0x1                   	// #1
   167f0:	str	w8, [sp, #20]
   167f4:	ldr	x8, [sp, #88]
   167f8:	str	x23, [sp, #32]
   167fc:	str	x22, [sp, #72]
   16800:	ldrb	w8, [x8]
   16804:	stp	x20, x19, [sp, #96]
   16808:	cbz	w8, 16870 <handle_filepos_comment_option@@Base+0xfdc>
   1680c:	mov	x0, x23
   16810:	bl	a0d0 <strlen@plt>
   16814:	cmp	x0, #0x6
   16818:	b.cc	16848 <handle_filepos_comment_option@@Base+0xfb4>  // b.lo, b.ul, b.last
   1681c:	ldr	w8, [x23]
   16820:	ldrh	w9, [x23, #4]
   16824:	mov	w10, #0x736d                	// #29549
   16828:	movk	w10, #0x7367, lsl #16
   1682c:	mov	w11, #0x7274                	// #29300
   16830:	eor	w8, w8, w10
   16834:	eor	w9, w9, w11
   16838:	orr	w8, w8, w9
   1683c:	cmp	w8, #0x0
   16840:	cset	w19, eq  // eq = none
   16844:	b	1684c <handle_filepos_comment_option@@Base+0xfb8>
   16848:	mov	w19, wzr
   1684c:	ldr	x8, [sp, #56]
   16850:	mov	x21, xzr
   16854:	add	x20, x8, #0x5c
   16858:	ldr	w0, [x20, x21, lsl #2]
   1685c:	bl	aa30 <possible_format_p@plt>
   16860:	tbnz	w0, #0, 1687c <handle_filepos_comment_option@@Base+0xfe8>
   16864:	add	x21, x21, #0x1
   16868:	cmp	x21, #0x1c
   1686c:	b.ne	16858 <handle_filepos_comment_option@@Base+0xfc4>  // b.any
   16870:	mov	x10, xzr
   16874:	str	xzr, [sp, #64]
   16878:	b	16984 <handle_filepos_comment_option@@Base+0x10f0>
   1687c:	ldr	x22, [sp, #88]
   16880:	mov	x0, x22
   16884:	bl	a0d0 <strlen@plt>
   16888:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1688c:	ldr	x8, [x8, #3792]
   16890:	mov	w1, #0x1                   	// #1
   16894:	mov	x20, x0
   16898:	stur	xzr, [x29, #-72]
   1689c:	ldr	x21, [x8, x21, lsl #3]
   168a0:	bl	aea0 <xcalloc@plt>
   168a4:	ldr	x8, [x21]
   168a8:	mov	x2, x0
   168ac:	sub	x3, x29, #0x48
   168b0:	mov	x0, x22
   168b4:	mov	w1, w19
   168b8:	mov	x26, x2
   168bc:	blr	x8
   168c0:	cbz	x0, 168cc <handle_filepos_comment_option@@Base+0x1038>
   168c4:	ldr	x8, [x21, #8]
   168c8:	blr	x8
   168cc:	mov	w1, #0x1                   	// #1
   168d0:	mov	x0, x20
   168d4:	bl	aea0 <xcalloc@plt>
   168d8:	cmp	x20, #0x1
   168dc:	mov	x10, x26
   168e0:	str	x0, [sp, #64]
   168e4:	b.lt	16980 <handle_filepos_comment_option@@Base+0x10ec>  // b.tstop
   168e8:	add	x8, x20, x10
   168ec:	add	x21, x10, x20
   168f0:	sub	x20, x8, #0x1
   168f4:	mov	x19, x0
   168f8:	mov	x8, x10
   168fc:	ldrb	w9, [x8]
   16900:	tbnz	w9, #0, 16910 <handle_filepos_comment_option@@Base+0x107c>
   16904:	mov	x22, x8
   16908:	strb	wzr, [x19]
   1690c:	b	16970 <handle_filepos_comment_option@@Base+0x10dc>
   16910:	cmp	x8, x21
   16914:	b.cs	177b4 <handle_filepos_comment_option@@Base+0x1f20>  // b.hs, b.nlast
   16918:	tst	w9, #0x6
   1691c:	mov	x22, x8
   16920:	b.ne	16944 <handle_filepos_comment_option@@Base+0x10b0>  // b.any
   16924:	mov	x10, x8
   16928:	cmp	x20, x10
   1692c:	b.eq	177b4 <handle_filepos_comment_option@@Base+0x1f20>  // b.none
   16930:	ldrb	w9, [x10, #1]
   16934:	add	x22, x10, #0x1
   16938:	mov	x10, x22
   1693c:	tst	w9, #0x6
   16940:	b.eq	16928 <handle_filepos_comment_option@@Base+0x1094>  // b.none
   16944:	sub	x23, x22, x8
   16948:	add	x2, x23, #0x1
   1694c:	tbnz	w9, #2, 16958 <handle_filepos_comment_option@@Base+0x10c4>
   16950:	mov	w1, #0x2                   	// #2
   16954:	b	1695c <handle_filepos_comment_option@@Base+0x10c8>
   16958:	mov	w1, #0x4                   	// #4
   1695c:	mov	x0, x19
   16960:	bl	a560 <memset@plt>
   16964:	add	x19, x19, x23
   16968:	ldr	x23, [sp, #32]
   1696c:	mov	x10, x26
   16970:	add	x8, x22, #0x1
   16974:	cmp	x8, x21
   16978:	add	x19, x19, #0x1
   1697c:	b.cc	168fc <handle_filepos_comment_option@@Base+0x1068>  // b.lo, b.ul, b.last
   16980:	ldr	x22, [sp, #72]
   16984:	ldr	w9, [sp, #28]
   16988:	ldr	x8, [x29, #96]
   1698c:	ldr	x11, [sp, #88]
   16990:	str	x10, [sp, #80]
   16994:	add	w10, w9, #0x8
   16998:	mov	w9, w9
   1699c:	str	w10, [sp, #116]
   169a0:	str	x9, [sp, #8]
   169a4:	adrp	x10, 4e000 <formatstring_gfc_internal@@Base+0x10>
   169a8:	adrp	x27, 4e000 <formatstring_gfc_internal@@Base+0x10>
   169ac:	sub	w8, w8, #0x1
   169b0:	mov	w9, #0x1                   	// #1
   169b4:	str	w8, [sp, #16]
   169b8:	str	x24, [sp, #128]
   169bc:	mov	x28, x11
   169c0:	ldrb	w8, [x11]
   169c4:	cbz	w8, 169d4 <handle_filepos_comment_option@@Base+0x1140>
   169c8:	cmp	w8, #0xa
   169cc:	add	x11, x11, #0x1
   169d0:	b.ne	169c0 <handle_filepos_comment_option@@Base+0x112c>  // b.any
   169d4:	mov	w21, #0x1                   	// #1
   169d8:	cmp	x28, x11
   169dc:	mov	x26, xzr
   169e0:	str	w9, [sp, #40]
   169e4:	stur	x11, [x29, #-120]
   169e8:	b.cs	16ba4 <handle_filepos_comment_option@@Base+0x1310>  // b.hs, b.nlast
   169ec:	mov	x19, x28
   169f0:	ldrb	w8, [x19]
   169f4:	sub	w9, w8, #0x7
   169f8:	cmp	w9, #0x6
   169fc:	b.hi	16a08 <handle_filepos_comment_option@@Base+0x1174>  // b.pmore
   16a00:	add	x26, x26, #0x2
   16a04:	b	16a20 <handle_filepos_comment_option@@Base+0x118c>
   16a08:	sub	w9, w8, #0x20
   16a0c:	cmp	w9, #0x5f
   16a10:	b.cc	16a30 <handle_filepos_comment_option@@Base+0x119c>  // b.lo, b.ul, b.last
   16a14:	ldrb	w9, [x10, #1092]
   16a18:	cbz	w9, 16a30 <handle_filepos_comment_option@@Base+0x119c>
   16a1c:	add	x26, x26, #0x4
   16a20:	add	x19, x19, #0x1
   16a24:	cmp	x19, x11
   16a28:	b.cc	169f0 <handle_filepos_comment_option@@Base+0x115c>  // b.lo, b.ul, b.last
   16a2c:	b	16ba4 <handle_filepos_comment_option@@Base+0x1310>
   16a30:	cmp	w8, #0x5c
   16a34:	b.eq	16a00 <handle_filepos_comment_option@@Base+0x116c>  // b.none
   16a38:	cmp	w8, #0x22
   16a3c:	b.eq	16a00 <handle_filepos_comment_option@@Base+0x116c>  // b.none
   16a40:	ldr	w9, [sp, #44]
   16a44:	cbz	w9, 16afc <handle_filepos_comment_option@@Base+0x1268>
   16a48:	sub	x8, x29, #0x48
   16a4c:	stur	x8, [x29, #-96]
   16a50:	mov	w8, #0x40                  	// #64
   16a54:	stur	x8, [x29, #-104]
   16a58:	add	x8, x19, #0x1
   16a5c:	cmp	x8, x11
   16a60:	stp	x21, x19, [x29, #-88]
   16a64:	b.ls	16a70 <handle_filepos_comment_option@@Base+0x11dc>  // b.plast
   16a68:	bl	ade0 <__errno_location@plt>
   16a6c:	b	16ac8 <handle_filepos_comment_option@@Base+0x1234>
   16a70:	sub	x1, x29, #0x50
   16a74:	sub	x2, x29, #0x58
   16a78:	sub	x3, x29, #0x60
   16a7c:	sub	x4, x29, #0x68
   16a80:	mov	x0, x22
   16a84:	bl	a900 <iconv@plt>
   16a88:	cmn	x0, #0x1
   16a8c:	b.ne	16b8c <handle_filepos_comment_option@@Base+0x12f8>  // b.any
   16a90:	bl	ade0 <__errno_location@plt>
   16a94:	ldr	w8, [x0]
   16a98:	cmp	w8, #0x16
   16a9c:	b.ne	16acc <handle_filepos_comment_option@@Base+0x1238>  // b.any
   16aa0:	ldur	x8, [x29, #-80]
   16aa4:	cmp	x8, x19
   16aa8:	b.ne	177b4 <handle_filepos_comment_option@@Base+0x1f20>  // b.any
   16aac:	ldur	x8, [x29, #-88]
   16ab0:	ldur	x10, [x29, #-120]
   16ab4:	add	x8, x8, #0x1
   16ab8:	add	x9, x19, x8
   16abc:	cmp	x9, x10
   16ac0:	stur	x8, [x29, #-88]
   16ac4:	b.ls	16a70 <handle_filepos_comment_option@@Base+0x11dc>  // b.plast
   16ac8:	ldr	w8, [x0]
   16acc:	cmp	w8, #0x16
   16ad0:	b.eq	16b40 <handle_filepos_comment_option@@Base+0x12ac>  // b.none
   16ad4:	cmp	w8, #0x54
   16ad8:	b.ne	177b4 <handle_filepos_comment_option@@Base+0x1f20>  // b.any
   16adc:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   16ae0:	ldr	x8, [x8, #3736]
   16ae4:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
   16ae8:	mov	w2, #0x5                   	// #5
   16aec:	mov	x0, xzr
   16af0:	ldr	x20, [x8]
   16af4:	add	x1, x1, #0xbb4
   16af8:	b	16b5c <handle_filepos_comment_option@@Base+0x12c8>
   16afc:	sxtb	w9, w8
   16b00:	add	x8, x19, #0x2
   16b04:	cmp	x8, x11
   16b08:	cset	w8, hi  // hi = pmore
   16b0c:	tbz	w9, #31, 16b38 <handle_filepos_comment_option@@Base+0x12a4>
   16b10:	ldr	w9, [sp, #20]
   16b14:	orr	w8, w9, w8
   16b18:	tbnz	w8, #0, 16b38 <handle_filepos_comment_option@@Base+0x12a4>
   16b1c:	mov	x8, x19
   16b20:	ldrb	w9, [x8, #1]!
   16b24:	cmp	w9, #0x30
   16b28:	b.cc	16b38 <handle_filepos_comment_option@@Base+0x12a4>  // b.lo, b.ul, b.last
   16b2c:	add	x26, x26, #0x2
   16b30:	mov	x19, x8
   16b34:	b	16a20 <handle_filepos_comment_option@@Base+0x118c>
   16b38:	add	x26, x26, #0x1
   16b3c:	b	16a20 <handle_filepos_comment_option@@Base+0x118c>
   16b40:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   16b44:	ldr	x8, [x8, #3736]
   16b48:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   16b4c:	mov	w2, #0x5                   	// #5
   16b50:	mov	x0, xzr
   16b54:	ldr	x20, [x8]
   16b58:	add	x1, x1, #0xd21
   16b5c:	bl	acd0 <dcgettext@plt>
   16b60:	ldr	x1, [sp, #56]
   16b64:	mov	x6, x0
   16b68:	mov	w0, #0x1                   	// #1
   16b6c:	mov	x2, xzr
   16b70:	mov	x3, xzr
   16b74:	mov	x4, xzr
   16b78:	mov	w5, wzr
   16b7c:	blr	x20
   16b80:	ldur	x11, [x29, #-120]
   16b84:	adrp	x10, 4e000 <formatstring_gfc_internal@@Base+0x10>
   16b88:	b	16a20 <handle_filepos_comment_option@@Base+0x118c>
   16b8c:	ldur	x8, [x29, #-80]
   16b90:	sub	x9, x8, x19
   16b94:	add	x26, x9, x26
   16b98:	sub	x19, x8, #0x1
   16b9c:	stur	x9, [x29, #-88]
   16ba0:	b	16b80 <handle_filepos_comment_option@@Base+0x12ec>
   16ba4:	mov	x0, x26
   16ba8:	mov	x19, x11
   16bac:	bl	a590 <xmalloc@plt>
   16bb0:	str	x0, [sp, #136]
   16bb4:	mov	x0, x26
   16bb8:	bl	a590 <xmalloc@plt>
   16bbc:	str	x0, [sp, #120]
   16bc0:	mov	x0, x26
   16bc4:	bl	a590 <xmalloc@plt>
   16bc8:	cmp	x28, x19
   16bcc:	str	x0, [sp, #48]
   16bd0:	stur	x26, [x29, #-112]
   16bd4:	b.cs	170d0 <handle_filepos_comment_option@@Base+0x183c>  // b.hs, b.nlast
   16bd8:	ldr	x20, [sp, #48]
   16bdc:	ldr	x23, [sp, #120]
   16be0:	ldr	x22, [sp, #136]
   16be4:	ldr	x12, [sp, #80]
   16be8:	ldr	x13, [sp, #64]
   16bec:	mov	x16, #0x6261                	// #25185
   16bf0:	ldur	x18, [x29, #-120]
   16bf4:	movk	x16, #0x6e74, lsl #16
   16bf8:	movk	x16, #0x6676, lsl #32
   16bfc:	mov	w14, #0x1                   	// #1
   16c00:	adrp	x15, 4e000 <formatstring_gfc_internal@@Base+0x10>
   16c04:	movk	x16, #0x72, lsl #48
   16c08:	mov	w17, #0x5c                  	// #92
   16c0c:	stur	x28, [x29, #-128]
   16c10:	ldrb	w9, [x28]
   16c14:	sxtb	w8, w9
   16c18:	cbz	x13, 16c40 <handle_filepos_comment_option@@Base+0x13ac>
   16c1c:	ldr	x10, [sp, #88]
   16c20:	sub	x10, x28, x10
   16c24:	ldrb	w26, [x13, x10]
   16c28:	cmp	w26, #0x2
   16c2c:	b.ne	16c44 <handle_filepos_comment_option@@Base+0x13b0>  // b.any
   16c30:	ldrb	w10, [x12, x10]
   16c34:	mvn	w10, w10
   16c38:	and	w27, w10, #0x1
   16c3c:	b	16c48 <handle_filepos_comment_option@@Base+0x13b4>
   16c40:	mov	w26, wzr
   16c44:	mov	w27, wzr
   16c48:	sub	w10, w8, #0x7
   16c4c:	cmp	w10, #0x6
   16c50:	b.hi	16d24 <handle_filepos_comment_option@@Base+0x1490>  // b.pmore
   16c54:	and	x8, x10, #0xff
   16c58:	lsl	x8, x8, #3
   16c5c:	lsr	x8, x16, x8
   16c60:	and	w9, w8, #0x1f
   16c64:	add	x24, x22, #0x2
   16c68:	add	x21, x23, #0x2
   16c6c:	orr	w10, w26, #0x1
   16c70:	add	x19, x20, #0x2
   16c74:	cmp	w9, #0xe
   16c78:	strb	w17, [x22]
   16c7c:	strb	w8, [x22, #1]
   16c80:	strb	w27, [x23]
   16c84:	strb	w14, [x23, #1]
   16c88:	strb	w10, [x20]
   16c8c:	strb	w10, [x20, #1]
   16c90:	b.eq	16dcc <handle_filepos_comment_option@@Base+0x1538>  // b.none
   16c94:	cmp	w9, #0x14
   16c98:	adrp	x27, 4e000 <formatstring_gfc_internal@@Base+0x10>
   16c9c:	b.eq	16dd0 <handle_filepos_comment_option@@Base+0x153c>  // b.none
   16ca0:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   16ca4:	mov	w2, #0x5                   	// #5
   16ca8:	mov	x0, xzr
   16cac:	add	x1, x1, #0xd3f
   16cb0:	and	w20, w8, #0xff
   16cb4:	bl	acd0 <dcgettext@plt>
   16cb8:	mov	w1, w20
   16cbc:	bl	aa20 <xasprintf@plt>
   16cc0:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   16cc4:	ldr	x8, [x8, #3736]
   16cc8:	ldr	x1, [sp, #56]
   16ccc:	mov	x20, x0
   16cd0:	mov	w0, wzr
   16cd4:	ldr	x8, [x8]
   16cd8:	mov	x2, xzr
   16cdc:	mov	x3, xzr
   16ce0:	mov	x4, xzr
   16ce4:	mov	w5, wzr
   16ce8:	mov	x6, x20
   16cec:	blr	x8
   16cf0:	mov	x0, x20
   16cf4:	bl	aa00 <free@plt>
   16cf8:	ldur	x18, [x29, #-120]
   16cfc:	mov	x16, #0x6261                	// #25185
   16d00:	ldr	x13, [sp, #64]
   16d04:	ldr	x12, [sp, #80]
   16d08:	movk	x16, #0x6e74, lsl #16
   16d0c:	movk	x16, #0x6676, lsl #32
   16d10:	mov	w17, #0x5c                  	// #92
   16d14:	movk	x16, #0x72, lsl #48
   16d18:	adrp	x15, 4e000 <formatstring_gfc_internal@@Base+0x10>
   16d1c:	mov	w14, #0x1                   	// #1
   16d20:	b	16dd0 <handle_filepos_comment_option@@Base+0x153c>
   16d24:	sub	w10, w9, #0x20
   16d28:	cmp	w10, #0x5f
   16d2c:	b.cc	16d94 <handle_filepos_comment_option@@Base+0x1500>  // b.lo, b.ul, b.last
   16d30:	ldrb	w10, [x15, #1092]
   16d34:	cbz	w10, 16d94 <handle_filepos_comment_option@@Base+0x1500>
   16d38:	and	w9, w8, #0xff
   16d3c:	mov	w10, #0x30                  	// #48
   16d40:	mov	w11, #0x30                  	// #48
   16d44:	bfxil	w11, w9, #3, #3
   16d48:	mov	w9, #0x30                  	// #48
   16d4c:	bfxil	w10, w8, #6, #2
   16d50:	bfxil	w9, w8, #0, #3
   16d54:	strb	w10, [x22, #1]
   16d58:	orr	w8, w26, #0x1
   16d5c:	mov	w10, #0x1010101             	// #16843009
   16d60:	mul	w8, w8, w10
   16d64:	strb	w9, [x22, #3]
   16d68:	mov	w9, #0x101                 	// #257
   16d6c:	strb	w17, [x22]
   16d70:	add	x24, x22, #0x4
   16d74:	strb	w11, [x22, #2]
   16d78:	strb	w27, [x23]
   16d7c:	sturh	w9, [x23, #1]
   16d80:	strb	w14, [x23, #3]
   16d84:	str	w8, [x20], #4
   16d88:	add	x21, x23, #0x4
   16d8c:	mov	x19, x20
   16d90:	b	16dcc <handle_filepos_comment_option@@Base+0x1538>
   16d94:	cmp	w9, #0x5c
   16d98:	b.eq	16da4 <handle_filepos_comment_option@@Base+0x1510>  // b.none
   16d9c:	cmp	w9, #0x22
   16da0:	b.ne	16df0 <handle_filepos_comment_option@@Base+0x155c>  // b.any
   16da4:	strb	w8, [x22, #1]
   16da8:	orr	w8, w26, #0x1
   16dac:	strb	w17, [x22]
   16db0:	add	x24, x22, #0x2
   16db4:	strb	w27, [x23]
   16db8:	add	x21, x23, #0x2
   16dbc:	strb	w14, [x23, #1]
   16dc0:	add	x19, x20, #0x2
   16dc4:	strb	w8, [x20]
   16dc8:	strb	w8, [x20, #1]
   16dcc:	adrp	x27, 4e000 <formatstring_gfc_internal@@Base+0x10>
   16dd0:	mov	x22, x24
   16dd4:	ldr	x24, [sp, #128]
   16dd8:	add	x28, x28, #0x1
   16ddc:	cmp	x28, x18
   16de0:	mov	x20, x19
   16de4:	mov	x23, x21
   16de8:	b.cc	16c10 <handle_filepos_comment_option@@Base+0x137c>  // b.lo, b.ul, b.last
   16dec:	b	1709c <handle_filepos_comment_option@@Base+0x1808>
   16df0:	ldr	w9, [sp, #44]
   16df4:	cbz	w9, 16f00 <handle_filepos_comment_option@@Base+0x166c>
   16df8:	sub	x8, x29, #0x48
   16dfc:	add	x19, x28, #0x1
   16e00:	stur	x8, [x29, #-96]
   16e04:	mov	w8, #0x40                  	// #64
   16e08:	cmp	x19, x18
   16e0c:	stp	x14, x28, [x29, #-88]
   16e10:	stur	x8, [x29, #-104]
   16e14:	b.ls	16e20 <handle_filepos_comment_option@@Base+0x158c>  // b.plast
   16e18:	bl	ade0 <__errno_location@plt>
   16e1c:	b	16e78 <handle_filepos_comment_option@@Base+0x15e4>
   16e20:	ldr	x0, [sp, #72]
   16e24:	sub	x1, x29, #0x50
   16e28:	sub	x2, x29, #0x58
   16e2c:	sub	x3, x29, #0x60
   16e30:	sub	x4, x29, #0x68
   16e34:	bl	a900 <iconv@plt>
   16e38:	cmn	x0, #0x1
   16e3c:	b.ne	16f74 <handle_filepos_comment_option@@Base+0x16e0>  // b.any
   16e40:	bl	ade0 <__errno_location@plt>
   16e44:	ldr	w8, [x0]
   16e48:	cmp	w8, #0x16
   16e4c:	b.ne	16e7c <handle_filepos_comment_option@@Base+0x15e8>  // b.any
   16e50:	ldur	x8, [x29, #-80]
   16e54:	cmp	x8, x28
   16e58:	b.ne	177b4 <handle_filepos_comment_option@@Base+0x1f20>  // b.any
   16e5c:	ldur	x8, [x29, #-88]
   16e60:	ldur	x10, [x29, #-120]
   16e64:	add	x8, x8, #0x1
   16e68:	add	x9, x28, x8
   16e6c:	cmp	x9, x10
   16e70:	stur	x8, [x29, #-88]
   16e74:	b.ls	16e20 <handle_filepos_comment_option@@Base+0x158c>  // b.plast
   16e78:	ldr	w8, [x0]
   16e7c:	adrp	x27, 4e000 <formatstring_gfc_internal@@Base+0x10>
   16e80:	cmp	w8, #0x54
   16e84:	b.ne	177b4 <handle_filepos_comment_option@@Base+0x1f20>  // b.any
   16e88:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   16e8c:	ldr	x8, [x8, #3736]
   16e90:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
   16e94:	mov	w2, #0x5                   	// #5
   16e98:	mov	x0, xzr
   16e9c:	ldr	x19, [x8]
   16ea0:	add	x1, x1, #0xbb4
   16ea4:	bl	acd0 <dcgettext@plt>
   16ea8:	ldr	x1, [sp, #56]
   16eac:	mov	x6, x0
   16eb0:	mov	w0, #0x1                   	// #1
   16eb4:	mov	x2, xzr
   16eb8:	mov	x3, xzr
   16ebc:	mov	x4, xzr
   16ec0:	mov	w5, wzr
   16ec4:	blr	x19
   16ec8:	ldr	x12, [sp, #80]
   16ecc:	ldr	x13, [sp, #64]
   16ed0:	mov	x16, #0x6261                	// #25185
   16ed4:	ldur	x18, [x29, #-120]
   16ed8:	movk	x16, #0x6e74, lsl #16
   16edc:	movk	x16, #0x6676, lsl #32
   16ee0:	mov	x24, x22
   16ee4:	mov	x21, x23
   16ee8:	mov	x19, x20
   16eec:	mov	w14, #0x1                   	// #1
   16ef0:	adrp	x15, 4e000 <formatstring_gfc_internal@@Base+0x10>
   16ef4:	movk	x16, #0x72, lsl #48
   16ef8:	mov	w17, #0x5c                  	// #92
   16efc:	b	16dd0 <handle_filepos_comment_option@@Base+0x153c>
   16f00:	add	x9, x28, #0x2
   16f04:	cmp	x9, x18
   16f08:	cset	w9, hi  // hi = pmore
   16f0c:	tbz	w8, #31, 16f5c <handle_filepos_comment_option@@Base+0x16c8>
   16f10:	ldr	w10, [sp, #20]
   16f14:	orr	w9, w10, w9
   16f18:	tbnz	w9, #0, 16f5c <handle_filepos_comment_option@@Base+0x16c8>
   16f1c:	mov	x9, x28
   16f20:	ldrb	w10, [x9, #1]!
   16f24:	cmp	w10, #0x30
   16f28:	b.cc	16f5c <handle_filepos_comment_option@@Base+0x16c8>  // b.lo, b.ul, b.last
   16f2c:	strb	w8, [x22]
   16f30:	ldrb	w8, [x9]
   16f34:	add	x24, x22, #0x2
   16f38:	add	x21, x23, #0x2
   16f3c:	add	x19, x20, #0x2
   16f40:	strb	w8, [x22, #1]
   16f44:	strb	w27, [x23]
   16f48:	strb	w14, [x23, #1]
   16f4c:	strb	w26, [x20]
   16f50:	strb	w26, [x20, #1]
   16f54:	mov	x28, x9
   16f58:	b	16dcc <handle_filepos_comment_option@@Base+0x1538>
   16f5c:	strb	w8, [x22], #1
   16f60:	strb	w27, [x23], #1
   16f64:	strb	w26, [x20], #1
   16f68:	mov	x24, x22
   16f6c:	mov	x21, x23
   16f70:	b	16d8c <handle_filepos_comment_option@@Base+0x14f8>
   16f74:	ldur	x8, [x29, #-80]
   16f78:	ldr	x13, [sp, #64]
   16f7c:	mov	x16, #0x6261                	// #25185
   16f80:	movk	x16, #0x6e74, lsl #16
   16f84:	movk	x16, #0x6676, lsl #32
   16f88:	subs	x9, x8, x28
   16f8c:	movk	x16, #0x72, lsl #48
   16f90:	stur	x9, [x29, #-88]
   16f94:	b.eq	16fc4 <handle_filepos_comment_option@@Base+0x1730>  // b.none
   16f98:	ldrb	w10, [x28]
   16f9c:	cmp	x9, #0x1
   16fa0:	strb	w10, [x22]
   16fa4:	b.eq	16fc4 <handle_filepos_comment_option@@Base+0x1730>  // b.none
   16fa8:	sub	x8, x28, x8
   16fac:	add	x8, x8, #0x1
   16fb0:	add	x9, x22, #0x1
   16fb4:	ldrb	w10, [x19], #1
   16fb8:	adds	x8, x8, #0x1
   16fbc:	strb	w10, [x9], #1
   16fc0:	b.cc	16fb4 <handle_filepos_comment_option@@Base+0x1720>  // b.lo, b.ul, b.last
   16fc4:	mov	x21, x23
   16fc8:	ldur	x9, [x29, #-88]
   16fcc:	strb	w27, [x21], #1
   16fd0:	ldur	x8, [x29, #-88]
   16fd4:	ldur	x18, [x29, #-120]
   16fd8:	add	x24, x22, x9
   16fdc:	mov	w17, #0x5c                  	// #92
   16fe0:	cmp	x8, #0x1
   16fe4:	b.ne	17000 <handle_filepos_comment_option@@Base+0x176c>  // b.any
   16fe8:	ldr	x12, [sp, #80]
   16fec:	strb	w26, [x20]
   16ff0:	mov	w14, #0x1                   	// #1
   16ff4:	adrp	x15, 4e000 <formatstring_gfc_internal@@Base+0x10>
   16ff8:	adrp	x27, 4e000 <formatstring_gfc_internal@@Base+0x10>
   16ffc:	b	17088 <handle_filepos_comment_option@@Base+0x17f4>
   17000:	subs	x2, x8, #0x2
   17004:	mov	w8, #0x1                   	// #1
   17008:	adrp	x27, 4e000 <formatstring_gfc_internal@@Base+0x10>
   1700c:	strb	w8, [x21]
   17010:	b.eq	1703c <handle_filepos_comment_option@@Base+0x17a8>  // b.none
   17014:	add	x0, x23, #0x2
   17018:	mov	w1, #0x1                   	// #1
   1701c:	bl	a560 <memset@plt>
   17020:	ldur	x18, [x29, #-120]
   17024:	mov	x16, #0x6261                	// #25185
   17028:	ldr	x13, [sp, #64]
   1702c:	movk	x16, #0x6e74, lsl #16
   17030:	movk	x16, #0x6676, lsl #32
   17034:	mov	w17, #0x5c                  	// #92
   17038:	movk	x16, #0x72, lsl #48
   1703c:	ldur	x8, [x29, #-88]
   17040:	add	x21, x23, x8
   17044:	cbz	x8, 1707c <handle_filepos_comment_option@@Base+0x17e8>
   17048:	subs	x2, x8, #0x1
   1704c:	strb	w26, [x20]
   17050:	b.eq	1707c <handle_filepos_comment_option@@Base+0x17e8>  // b.none
   17054:	add	x0, x20, #0x1
   17058:	mov	w1, w26
   1705c:	bl	a560 <memset@plt>
   17060:	ldur	x18, [x29, #-120]
   17064:	mov	x16, #0x6261                	// #25185
   17068:	ldr	x13, [sp, #64]
   1706c:	movk	x16, #0x6e74, lsl #16
   17070:	movk	x16, #0x6676, lsl #32
   17074:	mov	w17, #0x5c                  	// #92
   17078:	movk	x16, #0x72, lsl #48
   1707c:	ldr	x12, [sp, #80]
   17080:	mov	w14, #0x1                   	// #1
   17084:	adrp	x15, 4e000 <formatstring_gfc_internal@@Base+0x10>
   17088:	ldur	x8, [x29, #-88]
   1708c:	add	x19, x20, x8
   17090:	add	x8, x8, x28
   17094:	sub	x28, x8, #0x1
   17098:	b	16dd0 <handle_filepos_comment_option@@Base+0x153c>
   1709c:	ldur	x8, [x29, #-128]
   170a0:	ldr	x23, [sp, #32]
   170a4:	ldur	x26, [x29, #-112]
   170a8:	mov	w9, #0x1                   	// #1
   170ac:	cmp	x8, x18
   170b0:	b.cs	170d0 <handle_filepos_comment_option@@Base+0x183c>  // b.hs, b.nlast
   170b4:	ldur	x8, [x29, #-120]
   170b8:	ldurb	w8, [x8, #-1]
   170bc:	cmp	w8, #0xa
   170c0:	b.ne	170d0 <handle_filepos_comment_option@@Base+0x183c>  // b.any
   170c4:	ldr	x8, [sp, #120]
   170c8:	add	x8, x26, x8
   170cc:	sturb	w9, [x8, #-2]
   170d0:	mov	x0, x26
   170d4:	bl	a590 <xmalloc@plt>
   170d8:	stur	x0, [x29, #-128]
   170dc:	cbz	x24, 170ec <handle_filepos_comment_option@@Base+0x1858>
   170e0:	mov	x0, x24
   170e4:	bl	a0d0 <strlen@plt>
   170e8:	b	170f0 <handle_filepos_comment_option@@Base+0x185c>
   170ec:	mov	x0, xzr
   170f0:	ldr	w8, [sp, #24]
   170f4:	ldr	w9, [sp, #116]
   170f8:	adrp	x10, 4e000 <formatstring_gfc_internal@@Base+0x10>
   170fc:	ldrb	w10, [x10, #1088]
   17100:	cmp	w8, #0x2
   17104:	ldrb	w8, [x27, #1089]
   17108:	add	w9, w9, w0
   1710c:	cset	w11, ne  // ne = any
   17110:	and	w9, w9, #0xfffffff8
   17114:	cmp	w8, #0x0
   17118:	csel	w21, w9, w0, ne  // ne = any
   1711c:	ldr	w9, [sp, #16]
   17120:	ldr	w20, [sp, #40]
   17124:	eor	w8, w10, #0x1
   17128:	tst	w11, w8
   1712c:	mov	w8, #0x7ffffffe            	// #2147483646
   17130:	csel	w22, w9, w8, ne  // ne = any
   17134:	mvn	w8, w21
   17138:	add	w28, w22, w8
   1713c:	cbnz	x24, 1714c <handle_filepos_comment_option@@Base+0x18b8>
   17140:	mov	x19, xzr
   17144:	tbnz	w20, #0, 1715c <handle_filepos_comment_option@@Base+0x18c8>
   17148:	b	1729c <handle_filepos_comment_option@@Base+0x1a08>
   1714c:	mov	x0, x24
   17150:	bl	a0d0 <strlen@plt>
   17154:	mov	x19, x0
   17158:	tbz	w20, #0, 1729c <handle_filepos_comment_option@@Base+0x1a08>
   1715c:	mov	x0, x23
   17160:	mov	x26, x23
   17164:	bl	a0d0 <strlen@plt>
   17168:	ldr	w10, [sp, #116]
   1716c:	ldrb	w8, [x27, #1089]
   17170:	add	w9, w0, w19
   17174:	ldur	x23, [x29, #-112]
   17178:	add	w10, w10, w9
   1717c:	ldr	x0, [sp, #136]
   17180:	ldr	x5, [sp, #120]
   17184:	ldr	x6, [sp, #96]
   17188:	ldur	x7, [x29, #-128]
   1718c:	and	w10, w10, #0xfffffff8
   17190:	cmp	w8, #0x0
   17194:	csinc	w20, w10, w9, ne  // ne = any
   17198:	sub	w3, w20, w21
   1719c:	mov	x1, x23
   171a0:	mov	w2, w28
   171a4:	mov	w4, wzr
   171a8:	bl	ab60 <ulc_width_linebreaks@plt>
   171ac:	mov	w19, #0x1                   	// #1
   171b0:	cbz	x23, 172e8 <handle_filepos_comment_option@@Base+0x1a54>
   171b4:	ldrb	w8, [x27, #1089]
   171b8:	mov	x23, x26
   171bc:	cbnz	w8, 172ec <handle_filepos_comment_option@@Base+0x1a58>
   171c0:	cmp	w20, w22
   171c4:	b.ge	171e8 <handle_filepos_comment_option@@Base+0x1954>  // b.tcont
   171c8:	ldur	x8, [x29, #-120]
   171cc:	ldrb	w8, [x8]
   171d0:	cbnz	w8, 171e8 <handle_filepos_comment_option@@Base+0x1954>
   171d4:	ldur	x0, [x29, #-128]
   171d8:	ldur	x2, [x29, #-112]
   171dc:	mov	w1, #0x2                   	// #2
   171e0:	bl	abe0 <memchr@plt>
   171e4:	cbz	x0, 1775c <handle_filepos_comment_option@@Base+0x1ec8>
   171e8:	cbz	x24, 171f8 <handle_filepos_comment_option@@Base+0x1964>
   171ec:	mov	x0, x25
   171f0:	mov	x1, x24
   171f4:	bl	aaa0 <ostream_write_str@plt>
   171f8:	ldr	x19, [sp, #104]
   171fc:	mov	x0, x25
   17200:	mov	x1, x19
   17204:	bl	ab50 <styled_ostream_begin_use_class@plt>
   17208:	adrp	x20, 37000 <get_search_path@@Base+0xb4c>
   1720c:	add	x20, x20, #0xa48
   17210:	mov	x0, x25
   17214:	mov	x1, x20
   17218:	bl	ab50 <styled_ostream_begin_use_class@plt>
   1721c:	mov	x0, x25
   17220:	mov	x1, x23
   17224:	bl	aaa0 <ostream_write_str@plt>
   17228:	mov	x0, x25
   1722c:	mov	x1, x20
   17230:	bl	a430 <styled_ostream_end_use_class@plt>
   17234:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   17238:	mov	x0, x25
   1723c:	add	x1, x1, #0xd91
   17240:	bl	aaa0 <ostream_write_str@plt>
   17244:	adrp	x20, 37000 <get_search_path@@Base+0xb4c>
   17248:	add	x20, x20, #0xa50
   1724c:	mov	x0, x25
   17250:	mov	x1, x20
   17254:	bl	ab50 <styled_ostream_begin_use_class@plt>
   17258:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   1725c:	mov	x0, x25
   17260:	add	x1, x1, #0xd87
   17264:	bl	aaa0 <ostream_write_str@plt>
   17268:	mov	x0, x25
   1726c:	mov	x1, x20
   17270:	bl	a430 <styled_ostream_end_use_class@plt>
   17274:	mov	x0, x25
   17278:	mov	x1, x19
   1727c:	bl	a430 <styled_ostream_end_use_class@plt>
   17280:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   17284:	mov	x0, x25
   17288:	add	x1, x1, #0x1a1
   1728c:	bl	aaa0 <ostream_write_str@plt>
   17290:	mov	w20, wzr
   17294:	cbnz	x24, 1714c <handle_filepos_comment_option@@Base+0x18b8>
   17298:	b	17140 <handle_filepos_comment_option@@Base+0x18ac>
   1729c:	ldr	w9, [sp, #116]
   172a0:	ldrb	w8, [x27, #1089]
   172a4:	ldr	x0, [sp, #136]
   172a8:	ldur	x1, [x29, #-112]
   172ac:	add	w9, w9, w19
   172b0:	ldr	x5, [sp, #120]
   172b4:	ldr	x6, [sp, #96]
   172b8:	ldur	x7, [x29, #-128]
   172bc:	and	w9, w9, #0xfffffff8
   172c0:	cmp	w8, #0x0
   172c4:	csel	w8, w9, w19, ne  // ne = any
   172c8:	sub	w3, w8, w21
   172cc:	mov	w2, w28
   172d0:	mov	w4, wzr
   172d4:	bl	ab60 <ulc_width_linebreaks@plt>
   172d8:	mov	w19, wzr
   172dc:	cbnz	x24, 172f0 <handle_filepos_comment_option@@Base+0x1a5c>
   172e0:	mov	w28, wzr
   172e4:	b	17308 <handle_filepos_comment_option@@Base+0x1a74>
   172e8:	mov	x23, x26
   172ec:	cbz	x24, 172e0 <handle_filepos_comment_option@@Base+0x1a4c>
   172f0:	mov	x0, x25
   172f4:	mov	x1, x24
   172f8:	bl	aaa0 <ostream_write_str@plt>
   172fc:	mov	x0, x24
   17300:	bl	a0d0 <strlen@plt>
   17304:	mov	x28, x0
   17308:	ldr	x21, [sp, #104]
   1730c:	ldr	x22, [sp, #72]
   17310:	mov	x0, x25
   17314:	mov	x1, x21
   17318:	bl	ab50 <styled_ostream_begin_use_class@plt>
   1731c:	cbz	w19, 173a4 <handle_filepos_comment_option@@Base+0x1b10>
   17320:	adrp	x20, 37000 <get_search_path@@Base+0xb4c>
   17324:	add	x20, x20, #0xa48
   17328:	mov	x0, x25
   1732c:	mov	x1, x20
   17330:	bl	ab50 <styled_ostream_begin_use_class@plt>
   17334:	mov	x0, x25
   17338:	mov	x1, x23
   1733c:	bl	aaa0 <ostream_write_str@plt>
   17340:	mov	x0, x23
   17344:	bl	a0d0 <strlen@plt>
   17348:	mov	x19, x0
   1734c:	mov	x0, x25
   17350:	mov	x1, x20
   17354:	bl	a430 <styled_ostream_end_use_class@plt>
   17358:	ldrb	w8, [x27, #1089]
   1735c:	cmp	w8, #0x1
   17360:	b.ne	173f8 <handle_filepos_comment_option@@Base+0x1b64>  // b.any
   17364:	ldr	w8, [sp, #28]
   17368:	adrp	x20, 37000 <get_search_path@@Base+0xb4c>
   1736c:	add	x20, x20, #0xd8a
   17370:	cmp	w8, #0x1
   17374:	b.lt	17388 <handle_filepos_comment_option@@Base+0x1af4>  // b.tstop
   17378:	ldr	x2, [sp, #8]
   1737c:	mov	x0, x25
   17380:	mov	x1, x20
   17384:	bl	a880 <ostream_write_mem@plt>
   17388:	ldr	w8, [sp, #28]
   1738c:	mov	w9, #0x8                   	// #8
   17390:	mov	x0, x25
   17394:	mov	x1, x20
   17398:	add	w8, w28, w8
   1739c:	add	w8, w8, w19
   173a0:	b	173e8 <handle_filepos_comment_option@@Base+0x1b54>
   173a4:	ldrb	w8, [x27, #1089]
   173a8:	adrp	x19, 37000 <get_search_path@@Base+0xb4c>
   173ac:	add	x19, x19, #0xd8a
   173b0:	cmp	w8, #0x1
   173b4:	b.ne	17408 <handle_filepos_comment_option@@Base+0x1b74>  // b.any
   173b8:	ldr	w8, [sp, #28]
   173bc:	cmp	w8, #0x1
   173c0:	b.lt	173d4 <handle_filepos_comment_option@@Base+0x1b40>  // b.tstop
   173c4:	ldr	x2, [sp, #8]
   173c8:	mov	x0, x25
   173cc:	mov	x1, x19
   173d0:	bl	a880 <ostream_write_mem@plt>
   173d4:	ldr	w8, [sp, #28]
   173d8:	mov	w9, #0x8                   	// #8
   173dc:	mov	x0, x25
   173e0:	mov	x1, x19
   173e4:	add	w8, w28, w8
   173e8:	and	w8, w8, #0x7
   173ec:	sub	w2, w9, w8
   173f0:	bl	a880 <ostream_write_mem@plt>
   173f4:	b	17408 <handle_filepos_comment_option@@Base+0x1b74>
   173f8:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   173fc:	mov	x0, x25
   17400:	add	x1, x1, #0xd91
   17404:	bl	aaa0 <ostream_write_str@plt>
   17408:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   1740c:	mov	x0, x25
   17410:	add	x1, x1, #0xa50
   17414:	bl	ab50 <styled_ostream_begin_use_class@plt>
   17418:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   1741c:	mov	x0, x25
   17420:	add	x1, x1, #0xd88
   17424:	bl	aaa0 <ostream_write_str@plt>
   17428:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   1742c:	mov	x0, x25
   17430:	add	x1, x1, #0xa57
   17434:	bl	ab50 <styled_ostream_begin_use_class@plt>
   17438:	ldur	x8, [x29, #-112]
   1743c:	cbz	x8, 176d4 <handle_filepos_comment_option@@Base+0x1e40>
   17440:	ldur	x23, [x29, #-128]
   17444:	ldr	x27, [sp, #48]
   17448:	ldr	x28, [sp, #136]
   1744c:	mov	w19, wzr
   17450:	ldrb	w8, [x23]
   17454:	cmp	w8, #0x2
   17458:	b.ne	1758c <handle_filepos_comment_option@@Base+0x1cf8>  // b.any
   1745c:	tbz	w19, #0, 17474 <handle_filepos_comment_option@@Base+0x1be0>
   17460:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   17464:	mov	x0, x25
   17468:	add	x1, x1, #0xaaa
   1746c:	bl	a430 <styled_ostream_end_use_class@plt>
   17470:	and	w19, w19, #0xfffffffe
   17474:	tbnz	w19, #1, 17490 <handle_filepos_comment_option@@Base+0x1bfc>
   17478:	and	w8, w19, #0xff
   1747c:	tbz	w8, #2, 174a8 <handle_filepos_comment_option@@Base+0x1c14>
   17480:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   17484:	mov	w20, #0xfb                  	// #251
   17488:	add	x1, x1, #0xacb
   1748c:	b	1749c <handle_filepos_comment_option@@Base+0x1c08>
   17490:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   17494:	mov	w20, #0xfd                  	// #253
   17498:	add	x1, x1, #0xaba
   1749c:	mov	x0, x25
   174a0:	bl	a430 <styled_ostream_end_use_class@plt>
   174a4:	and	w19, w19, w20
   174a8:	tst	w19, #0xff
   174ac:	b.ne	177b4 <handle_filepos_comment_option@@Base+0x1f20>  // b.any
   174b0:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   174b4:	mov	x0, x25
   174b8:	add	x1, x1, #0xa57
   174bc:	bl	a430 <styled_ostream_end_use_class@plt>
   174c0:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   174c4:	mov	x0, x25
   174c8:	add	x1, x1, #0xd88
   174cc:	bl	aaa0 <ostream_write_str@plt>
   174d0:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   174d4:	mov	x0, x25
   174d8:	add	x1, x1, #0xa50
   174dc:	bl	a430 <styled_ostream_end_use_class@plt>
   174e0:	mov	x0, x25
   174e4:	mov	x1, x21
   174e8:	bl	a430 <styled_ostream_end_use_class@plt>
   174ec:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   174f0:	mov	x0, x25
   174f4:	add	x1, x1, #0x1a1
   174f8:	bl	aaa0 <ostream_write_str@plt>
   174fc:	cbz	x24, 1751c <handle_filepos_comment_option@@Base+0x1c88>
   17500:	mov	x0, x25
   17504:	mov	x1, x24
   17508:	bl	aaa0 <ostream_write_str@plt>
   1750c:	mov	x0, x24
   17510:	bl	a0d0 <strlen@plt>
   17514:	mov	x19, x0
   17518:	b	17520 <handle_filepos_comment_option@@Base+0x1c8c>
   1751c:	mov	x19, xzr
   17520:	mov	x0, x25
   17524:	mov	x1, x21
   17528:	bl	ab50 <styled_ostream_begin_use_class@plt>
   1752c:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   17530:	ldrb	w8, [x8, #1089]
   17534:	cmp	w8, #0x1
   17538:	b.ne	17558 <handle_filepos_comment_option@@Base+0x1cc4>  // b.any
   1753c:	and	x8, x19, #0x7
   17540:	mov	w9, #0x8                   	// #8
   17544:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   17548:	sub	x2, x9, x8
   1754c:	mov	x0, x25
   17550:	add	x1, x1, #0xd8a
   17554:	bl	a880 <ostream_write_mem@plt>
   17558:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   1755c:	mov	x0, x25
   17560:	add	x1, x1, #0xa50
   17564:	bl	ab50 <styled_ostream_begin_use_class@plt>
   17568:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   1756c:	mov	x0, x25
   17570:	add	x1, x1, #0xd88
   17574:	bl	aaa0 <ostream_write_str@plt>
   17578:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   1757c:	mov	x0, x25
   17580:	add	x1, x1, #0xa57
   17584:	bl	ab50 <styled_ostream_begin_use_class@plt>
   17588:	mov	w19, wzr
   1758c:	ldrb	w8, [x27]
   17590:	cmp	w8, w19, uxtb
   17594:	b.eq	1764c <handle_filepos_comment_option@@Base+0x1db8>  // b.none
   17598:	tbz	w19, #0, 175b4 <handle_filepos_comment_option@@Base+0x1d20>
   1759c:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   175a0:	mov	x0, x25
   175a4:	add	x1, x1, #0xaaa
   175a8:	bl	a430 <styled_ostream_end_use_class@plt>
   175ac:	ldrb	w8, [x27]
   175b0:	and	w19, w19, #0xfffffffe
   175b4:	bic	w8, w19, w8
   175b8:	tbnz	w8, #1, 175d4 <handle_filepos_comment_option@@Base+0x1d40>
   175bc:	and	w8, w8, #0xff
   175c0:	tbz	w8, #2, 175ec <handle_filepos_comment_option@@Base+0x1d58>
   175c4:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   175c8:	mov	w20, #0xfb                  	// #251
   175cc:	add	x1, x1, #0xacb
   175d0:	b	175e0 <handle_filepos_comment_option@@Base+0x1d4c>
   175d4:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   175d8:	mov	w20, #0xfd                  	// #253
   175dc:	add	x1, x1, #0xaba
   175e0:	mov	x0, x25
   175e4:	bl	a430 <styled_ostream_end_use_class@plt>
   175e8:	and	w19, w19, w20
   175ec:	ldrb	w8, [x27]
   175f0:	mvn	w9, w19
   175f4:	orr	w9, w9, #0xffffff00
   175f8:	and	w8, w8, w9
   175fc:	tbnz	w8, #1, 17614 <handle_filepos_comment_option@@Base+0x1d80>
   17600:	tbz	w8, #2, 1762c <handle_filepos_comment_option@@Base+0x1d98>
   17604:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   17608:	mov	w20, #0x4                   	// #4
   1760c:	add	x1, x1, #0xacb
   17610:	b	17620 <handle_filepos_comment_option@@Base+0x1d8c>
   17614:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   17618:	mov	w20, #0x2                   	// #2
   1761c:	add	x1, x1, #0xaba
   17620:	mov	x0, x25
   17624:	bl	ab50 <styled_ostream_begin_use_class@plt>
   17628:	orr	w19, w19, w20
   1762c:	ldrb	w8, [x27]
   17630:	bic	w8, w8, w19
   17634:	tbz	w8, #0, 1764c <handle_filepos_comment_option@@Base+0x1db8>
   17638:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   1763c:	mov	x0, x25
   17640:	add	x1, x1, #0xaaa
   17644:	bl	ab50 <styled_ostream_begin_use_class@plt>
   17648:	orr	w19, w19, #0x1
   1764c:	mov	w2, #0x1                   	// #1
   17650:	mov	x0, x25
   17654:	mov	x1, x28
   17658:	bl	a880 <ostream_write_mem@plt>
   1765c:	ldur	x8, [x29, #-112]
   17660:	add	x28, x28, #0x1
   17664:	add	x27, x27, #0x1
   17668:	add	x23, x23, #0x1
   1766c:	subs	x8, x8, #0x1
   17670:	stur	x8, [x29, #-112]
   17674:	b.ne	17450 <handle_filepos_comment_option@@Base+0x1bbc>  // b.any
   17678:	tbz	w19, #0, 17690 <handle_filepos_comment_option@@Base+0x1dfc>
   1767c:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   17680:	mov	x0, x25
   17684:	add	x1, x1, #0xaaa
   17688:	bl	a430 <styled_ostream_end_use_class@plt>
   1768c:	and	w19, w19, #0xfffffffe
   17690:	ldr	x23, [sp, #32]
   17694:	adrp	x27, 4e000 <formatstring_gfc_internal@@Base+0x10>
   17698:	tbnz	w19, #1, 176b4 <handle_filepos_comment_option@@Base+0x1e20>
   1769c:	and	w8, w19, #0xff
   176a0:	tbz	w8, #2, 176cc <handle_filepos_comment_option@@Base+0x1e38>
   176a4:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   176a8:	mov	w20, #0xfb                  	// #251
   176ac:	add	x1, x1, #0xacb
   176b0:	b	176c0 <handle_filepos_comment_option@@Base+0x1e2c>
   176b4:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   176b8:	mov	w20, #0xfd                  	// #253
   176bc:	add	x1, x1, #0xaba
   176c0:	mov	x0, x25
   176c4:	bl	a430 <styled_ostream_end_use_class@plt>
   176c8:	and	w19, w19, w20
   176cc:	tst	w19, #0xff
   176d0:	b.ne	177b4 <handle_filepos_comment_option@@Base+0x1f20>  // b.any
   176d4:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   176d8:	mov	x0, x25
   176dc:	add	x1, x1, #0xa57
   176e0:	bl	a430 <styled_ostream_end_use_class@plt>
   176e4:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   176e8:	mov	x0, x25
   176ec:	add	x1, x1, #0xd88
   176f0:	bl	aaa0 <ostream_write_str@plt>
   176f4:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   176f8:	mov	x0, x25
   176fc:	add	x1, x1, #0xa50
   17700:	bl	a430 <styled_ostream_end_use_class@plt>
   17704:	mov	x0, x25
   17708:	mov	x1, x21
   1770c:	bl	a430 <styled_ostream_end_use_class@plt>
   17710:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   17714:	mov	x0, x25
   17718:	add	x1, x1, #0x1a1
   1771c:	bl	aaa0 <ostream_write_str@plt>
   17720:	ldur	x0, [x29, #-128]
   17724:	bl	aa00 <free@plt>
   17728:	ldr	x0, [sp, #48]
   1772c:	bl	aa00 <free@plt>
   17730:	ldr	x0, [sp, #120]
   17734:	bl	aa00 <free@plt>
   17738:	ldr	x0, [sp, #136]
   1773c:	bl	aa00 <free@plt>
   17740:	ldur	x11, [x29, #-120]
   17744:	ldr	x0, [sp, #80]
   17748:	mov	w9, wzr
   1774c:	adrp	x10, 4e000 <formatstring_gfc_internal@@Base+0x10>
   17750:	ldrb	w8, [x11]
   17754:	cbnz	w8, 169bc <handle_filepos_comment_option@@Base+0x1128>
   17758:	b	17768 <handle_filepos_comment_option@@Base+0x1ed4>
   1775c:	mov	w19, #0x1                   	// #1
   17760:	cbnz	x24, 172f0 <handle_filepos_comment_option@@Base+0x1a5c>
   17764:	b	172e0 <handle_filepos_comment_option@@Base+0x1a4c>
   17768:	ldr	x8, [sp, #64]
   1776c:	cbz	x8, 1777c <handle_filepos_comment_option@@Base+0x1ee8>
   17770:	mov	x0, x8
   17774:	bl	aa00 <free@plt>
   17778:	ldr	x0, [sp, #80]
   1777c:	cbz	x0, 17784 <handle_filepos_comment_option@@Base+0x1ef0>
   17780:	bl	aa00 <free@plt>
   17784:	ldr	w8, [sp, #44]
   17788:	cbz	w8, 17794 <handle_filepos_comment_option@@Base+0x1f00>
   1778c:	mov	x0, x22
   17790:	bl	a1d0 <iconv_close@plt>
   17794:	ldp	x20, x19, [sp, #352]
   17798:	ldp	x22, x21, [sp, #336]
   1779c:	ldp	x24, x23, [sp, #320]
   177a0:	ldp	x26, x25, [sp, #304]
   177a4:	ldp	x28, x27, [sp, #288]
   177a8:	ldp	x29, x30, [sp, #272]
   177ac:	add	sp, sp, #0x170
   177b0:	ret
   177b4:	bl	a7e0 <abort@plt>

00000000000177b8 <is_ascii_string@@Base>:
   177b8:	ldrb	w9, [x0]
   177bc:	cbz	w9, 177d4 <is_ascii_string@@Base+0x1c>
   177c0:	add	x8, x0, #0x1
   177c4:	sxtb	w9, w9
   177c8:	tbnz	w9, #31, 177dc <is_ascii_string@@Base+0x24>
   177cc:	ldrb	w9, [x8], #1
   177d0:	cbnz	w9, 177c4 <is_ascii_string@@Base+0xc>
   177d4:	mov	w0, #0x1                   	// #1
   177d8:	ret
   177dc:	mov	w0, wzr
   177e0:	ret

00000000000177e4 <is_ascii_string_list@@Base>:
   177e4:	cbz	x0, 17824 <is_ascii_string_list@@Base+0x40>
   177e8:	ldr	x8, [x0, #8]
   177ec:	cbz	x8, 17824 <is_ascii_string_list@@Base+0x40>
   177f0:	ldr	x9, [x0]
   177f4:	mov	x10, xzr
   177f8:	ldr	x12, [x9, x10, lsl #3]
   177fc:	ldrb	w11, [x12]
   17800:	cbz	w11, 17818 <is_ascii_string_list@@Base+0x34>
   17804:	add	x12, x12, #0x1
   17808:	sxtb	w11, w11
   1780c:	tbnz	w11, #31, 1782c <is_ascii_string_list@@Base+0x48>
   17810:	ldrb	w11, [x12], #1
   17814:	cbnz	w11, 17808 <is_ascii_string_list@@Base+0x24>
   17818:	add	x10, x10, #0x1
   1781c:	cmp	x10, x8
   17820:	b.cc	177f8 <is_ascii_string_list@@Base+0x14>  // b.lo, b.ul, b.last
   17824:	mov	w0, #0x1                   	// #1
   17828:	ret
   1782c:	mov	w0, wzr
   17830:	ret

0000000000017834 <is_ascii_message@@Base>:
   17834:	stp	x29, x30, [sp, #-32]!
   17838:	ldr	x9, [x0, #32]
   1783c:	str	x19, [sp, #16]
   17840:	mov	x19, x0
   17844:	mov	x29, sp
   17848:	cmp	x9, #0x1
   1784c:	b.lt	17868 <is_ascii_message@@Base+0x34>  // b.tstop
   17850:	ldr	x8, [x19, #24]
   17854:	add	x9, x8, x9
   17858:	ldrsb	w10, [x8], #1
   1785c:	tbnz	w10, #31, 1795c <is_ascii_message@@Base+0x128>
   17860:	cmp	x8, x9
   17864:	b.cc	17858 <is_ascii_message@@Base+0x24>  // b.lo, b.ul, b.last
   17868:	ldr	x0, [x19, #56]
   1786c:	bl	a2e0 <is_ascii_string_list@plt>
   17870:	tbz	w0, #0, 1795c <is_ascii_message@@Base+0x128>
   17874:	ldr	x0, [x19, #64]
   17878:	bl	a2e0 <is_ascii_string_list@plt>
   1787c:	tbz	w0, #0, 1795c <is_ascii_message@@Base+0x128>
   17880:	ldr	x9, [x19, #8]
   17884:	ldrb	w8, [x9]
   17888:	cbz	w8, 178a0 <is_ascii_message@@Base+0x6c>
   1788c:	add	x9, x9, #0x1
   17890:	sxtb	w8, w8
   17894:	tbnz	w8, #31, 1795c <is_ascii_message@@Base+0x128>
   17898:	ldrb	w8, [x9], #1
   1789c:	cbnz	w8, 17890 <is_ascii_message@@Base+0x5c>
   178a0:	ldr	x9, [x19, #16]
   178a4:	cbz	x9, 178c4 <is_ascii_message@@Base+0x90>
   178a8:	ldrb	w8, [x9]
   178ac:	cbz	w8, 178c4 <is_ascii_message@@Base+0x90>
   178b0:	add	x9, x9, #0x1
   178b4:	sxtb	w8, w8
   178b8:	tbnz	w8, #31, 1795c <is_ascii_message@@Base+0x128>
   178bc:	ldrb	w8, [x9], #1
   178c0:	cbnz	w8, 178b4 <is_ascii_message@@Base+0x80>
   178c4:	ldr	x9, [x19]
   178c8:	cbz	x9, 178e8 <is_ascii_message@@Base+0xb4>
   178cc:	ldrb	w8, [x9]
   178d0:	cbz	w8, 178e8 <is_ascii_message@@Base+0xb4>
   178d4:	add	x9, x9, #0x1
   178d8:	sxtb	w8, w8
   178dc:	tbnz	w8, #31, 1795c <is_ascii_message@@Base+0x128>
   178e0:	ldrb	w8, [x9], #1
   178e4:	cbnz	w8, 178d8 <is_ascii_message@@Base+0xa4>
   178e8:	ldr	x9, [x19, #232]
   178ec:	cbz	x9, 1790c <is_ascii_message@@Base+0xd8>
   178f0:	ldrb	w8, [x9]
   178f4:	cbz	w8, 1790c <is_ascii_message@@Base+0xd8>
   178f8:	add	x9, x9, #0x1
   178fc:	sxtb	w8, w8
   17900:	tbnz	w8, #31, 1795c <is_ascii_message@@Base+0x128>
   17904:	ldrb	w8, [x9], #1
   17908:	cbnz	w8, 178fc <is_ascii_message@@Base+0xc8>
   1790c:	ldr	x9, [x19, #240]
   17910:	cbz	x9, 17930 <is_ascii_message@@Base+0xfc>
   17914:	ldrb	w8, [x9]
   17918:	cbz	w8, 17930 <is_ascii_message@@Base+0xfc>
   1791c:	add	x9, x9, #0x1
   17920:	sxtb	w8, w8
   17924:	tbnz	w8, #31, 1795c <is_ascii_message@@Base+0x128>
   17928:	ldrb	w8, [x9], #1
   1792c:	cbnz	w8, 17920 <is_ascii_message@@Base+0xec>
   17930:	ldr	x8, [x19, #248]
   17934:	cbz	x8, 1796c <is_ascii_message@@Base+0x138>
   17938:	ldrb	w9, [x8]
   1793c:	cbz	w9, 1796c <is_ascii_message@@Base+0x138>
   17940:	add	x8, x8, #0x1
   17944:	mov	w0, #0x1                   	// #1
   17948:	sxtb	w9, w9
   1794c:	tbnz	w9, #31, 1795c <is_ascii_message@@Base+0x128>
   17950:	ldrb	w9, [x8], #1
   17954:	cbnz	w9, 17948 <is_ascii_message@@Base+0x114>
   17958:	b	17960 <is_ascii_message@@Base+0x12c>
   1795c:	mov	w0, wzr
   17960:	ldr	x19, [sp, #16]
   17964:	ldp	x29, x30, [sp], #32
   17968:	ret
   1796c:	mov	w0, #0x1                   	// #1
   17970:	b	17960 <is_ascii_message@@Base+0x12c>

0000000000017974 <is_ascii_message_list@@Base>:
   17974:	stp	x29, x30, [sp, #-48]!
   17978:	stp	x20, x19, [sp, #32]
   1797c:	ldr	x19, [x0, #8]
   17980:	str	x21, [sp, #16]
   17984:	mov	x29, sp
   17988:	cbz	x19, 179ac <is_ascii_message_list@@Base+0x38>
   1798c:	ldr	x20, [x0]
   17990:	mov	x21, xzr
   17994:	ldr	x0, [x20, x21, lsl #3]
   17998:	bl	a450 <is_ascii_message@plt>
   1799c:	tbz	w0, #0, 179b4 <is_ascii_message_list@@Base+0x40>
   179a0:	add	x21, x21, #0x1
   179a4:	cmp	x21, x19
   179a8:	b.cc	17994 <is_ascii_message_list@@Base+0x20>  // b.lo, b.ul, b.last
   179ac:	mov	w0, #0x1                   	// #1
   179b0:	b	179b8 <is_ascii_message_list@@Base+0x44>
   179b4:	mov	w0, wzr
   179b8:	ldp	x20, x19, [sp, #32]
   179bc:	ldr	x21, [sp, #16]
   179c0:	ldp	x29, x30, [sp], #48
   179c4:	ret

00000000000179c8 <is_ascii_msgdomain_list@@Base>:
   179c8:	stp	x29, x30, [sp, #-64]!
   179cc:	stp	x22, x21, [sp, #32]
   179d0:	stp	x20, x19, [sp, #48]
   179d4:	ldr	x19, [x0, #8]
   179d8:	str	x23, [sp, #16]
   179dc:	mov	x29, sp
   179e0:	cbz	x19, 17a24 <is_ascii_msgdomain_list@@Base+0x5c>
   179e4:	ldr	x20, [x0]
   179e8:	mov	x21, xzr
   179ec:	ldr	x8, [x20, x21, lsl #3]
   179f0:	ldr	x8, [x8, #8]
   179f4:	ldr	x22, [x8, #8]
   179f8:	cbz	x22, 17a18 <is_ascii_msgdomain_list@@Base+0x50>
   179fc:	ldr	x23, [x8]
   17a00:	ldr	x0, [x23]
   17a04:	bl	a450 <is_ascii_message@plt>
   17a08:	tbz	w0, #0, 17a2c <is_ascii_msgdomain_list@@Base+0x64>
   17a0c:	subs	x22, x22, #0x1
   17a10:	add	x23, x23, #0x8
   17a14:	b.ne	17a00 <is_ascii_msgdomain_list@@Base+0x38>  // b.any
   17a18:	add	x21, x21, #0x1
   17a1c:	cmp	x21, x19
   17a20:	b.cc	179ec <is_ascii_msgdomain_list@@Base+0x24>  // b.lo, b.ul, b.last
   17a24:	mov	w0, #0x1                   	// #1
   17a28:	b	17a30 <is_ascii_msgdomain_list@@Base+0x68>
   17a2c:	mov	w0, wzr
   17a30:	ldp	x20, x19, [sp, #48]
   17a34:	ldp	x22, x21, [sp, #32]
   17a38:	ldr	x23, [sp, #16]
   17a3c:	ldp	x29, x30, [sp], #64
   17a40:	ret

0000000000017a44 <convert_string_directly@@Base>:
   17a44:	sub	sp, sp, #0x40
   17a48:	str	x21, [sp, #32]
   17a4c:	mov	x21, x0
   17a50:	mov	x0, x1
   17a54:	stp	x29, x30, [sp, #16]
   17a58:	stp	x20, x19, [sp, #48]
   17a5c:	add	x29, sp, #0x10
   17a60:	mov	x19, x2
   17a64:	mov	x20, x1
   17a68:	bl	a0d0 <strlen@plt>
   17a6c:	add	x1, x0, #0x1
   17a70:	add	x3, x29, #0x18
   17a74:	add	x4, sp, #0x8
   17a78:	mov	x0, x20
   17a7c:	mov	x2, x21
   17a80:	str	xzr, [x29, #24]
   17a84:	str	xzr, [sp, #8]
   17a88:	bl	a940 <xmem_cd_iconv@plt>
   17a8c:	cbnz	w0, 17ad0 <convert_string_directly@@Base+0x8c>
   17a90:	ldr	x8, [sp, #8]
   17a94:	cbz	x8, 17ad0 <convert_string_directly@@Base+0x8c>
   17a98:	ldr	x20, [x29, #24]
   17a9c:	sub	x21, x8, #0x1
   17aa0:	ldrb	w8, [x20, x21]
   17aa4:	cbnz	w8, 17ad0 <convert_string_directly@@Base+0x8c>
   17aa8:	mov	x0, x20
   17aac:	bl	a0d0 <strlen@plt>
   17ab0:	cmp	x0, x21
   17ab4:	b.ne	17ad0 <convert_string_directly@@Base+0x8c>  // b.any
   17ab8:	mov	x0, x20
   17abc:	ldp	x20, x19, [sp, #48]
   17ac0:	ldr	x21, [sp, #32]
   17ac4:	ldp	x29, x30, [sp, #16]
   17ac8:	add	sp, sp, #0x40
   17acc:	ret
   17ad0:	mov	x0, x19
   17ad4:	bl	17ad8 <convert_string_directly@@Base+0x94>
   17ad8:	stp	x29, x30, [sp, #-48]!
   17adc:	str	x21, [sp, #16]
   17ae0:	stp	x20, x19, [sp, #32]
   17ae4:	adrp	x9, 4c000 <plural_table_size@@Base+0x12c00>
   17ae8:	ldr	x8, [x0, #8]
   17aec:	ldr	x9, [x9, #3952]
   17af0:	adrp	x10, 4c000 <plural_table_size@@Base+0x12c00>
   17af4:	mov	x20, x0
   17af8:	mov	x29, sp
   17afc:	ldr	x9, [x9]
   17b00:	ldr	x10, [x10, #3736]
   17b04:	ldr	x19, [x0, #24]
   17b08:	cmp	x8, x9
   17b0c:	ldr	x21, [x10]
   17b10:	b.ne	17b38 <convert_string_directly@@Base+0xf4>  // b.any
   17b14:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   17b18:	add	x1, x1, #0xdd8
   17b1c:	mov	w2, #0x5                   	// #5
   17b20:	mov	x0, xzr
   17b24:	bl	acd0 <dcgettext@plt>
   17b28:	ldr	x1, [x20, #16]
   17b2c:	ldr	x2, [x20]
   17b30:	bl	aa20 <xasprintf@plt>
   17b34:	b	17b58 <convert_string_directly@@Base+0x114>
   17b38:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   17b3c:	add	x1, x1, #0xe00
   17b40:	mov	w2, #0x5                   	// #5
   17b44:	mov	x0, xzr
   17b48:	bl	acd0 <dcgettext@plt>
   17b4c:	ldp	x3, x1, [x20, #8]
   17b50:	ldr	x2, [x20]
   17b54:	bl	aa20 <xasprintf@plt>
   17b58:	mov	x6, x0
   17b5c:	mov	w0, #0x2                   	// #2
   17b60:	mov	x1, x19
   17b64:	mov	x2, xzr
   17b68:	mov	x3, xzr
   17b6c:	mov	x4, xzr
   17b70:	mov	w5, wzr
   17b74:	blr	x21
   17b78:	bl	a7e0 <abort@plt>

0000000000017b7c <iconv_message_list@@Base>:
   17b7c:	mov	x4, x3
   17b80:	mov	w3, #0x1                   	// #1
   17b84:	b	17b88 <iconv_message_list@@Base+0xc>
   17b88:	stp	x29, x30, [sp, #-96]!
   17b8c:	stp	x28, x27, [sp, #16]
   17b90:	stp	x26, x25, [sp, #32]
   17b94:	stp	x24, x23, [sp, #48]
   17b98:	stp	x22, x21, [sp, #64]
   17b9c:	stp	x20, x19, [sp, #80]
   17ba0:	mov	x29, sp
   17ba4:	sub	sp, sp, #0x70
   17ba8:	ldr	x8, [x0, #8]
   17bac:	cbz	x8, 181a8 <iconv_message_list@@Base+0x62c>
   17bb0:	sub	x8, x4, #0x4
   17bb4:	stur	x8, [x29, #-104]
   17bb8:	adrp	x24, 4c000 <plural_table_size@@Base+0x12c00>
   17bbc:	ldr	x24, [x24, #3736]
   17bc0:	adrp	x21, 37000 <get_search_path@@Base+0xb4c>
   17bc4:	adrp	x26, 37000 <get_search_path@@Base+0xb4c>
   17bc8:	mov	x25, x4
   17bcc:	mov	w22, w3
   17bd0:	mov	x23, x2
   17bd4:	mov	x20, x0
   17bd8:	mov	x19, xzr
   17bdc:	add	x21, x21, #0x196
   17be0:	add	x26, x26, #0x19f
   17be4:	stur	x1, [x29, #-96]
   17be8:	stur	x1, [x29, #-80]
   17bec:	ldr	x8, [x20]
   17bf0:	ldr	x8, [x8, x19, lsl #3]
   17bf4:	ldr	x9, [x8]
   17bf8:	cbnz	x9, 17c10 <iconv_message_list@@Base+0x94>
   17bfc:	ldr	x9, [x8, #8]
   17c00:	ldrb	w9, [x9]
   17c04:	cbnz	w9, 17c10 <iconv_message_list@@Base+0x94>
   17c08:	ldrb	w9, [x8, #256]
   17c0c:	cbz	w9, 17c24 <iconv_message_list@@Base+0xa8>
   17c10:	ldr	x8, [x20, #8]
   17c14:	add	x19, x19, #0x1
   17c18:	cmp	x19, x8
   17c1c:	b.cc	17bec <iconv_message_list@@Base+0x70>  // b.lo, b.ul, b.last
   17c20:	b	17e84 <iconv_message_list@@Base+0x308>
   17c24:	ldr	x27, [x8, #24]
   17c28:	cbz	x27, 17c10 <iconv_message_list@@Base+0x94>
   17c2c:	mov	x0, x27
   17c30:	mov	x1, x21
   17c34:	bl	ad20 <c_strstr@plt>
   17c38:	cbz	x0, 17c10 <iconv_message_list@@Base+0x94>
   17c3c:	add	x28, x0, #0x8
   17c40:	mov	x0, x28
   17c44:	mov	x1, x26
   17c48:	stur	x25, [x29, #-88]
   17c4c:	bl	ada0 <strcspn@plt>
   17c50:	mov	x26, x0
   17c54:	add	x0, x0, #0x1
   17c58:	cmp	x0, #0xfa0
   17c5c:	b.hi	17c80 <iconv_message_list@@Base+0x104>  // b.pmore
   17c60:	add	x9, x26, #0x2f
   17c64:	mov	x8, sp
   17c68:	and	x9, x9, #0xfffffffffffffff0
   17c6c:	sub	x8, x8, x9
   17c70:	mov	sp, x8
   17c74:	add	x8, x8, #0x1f
   17c78:	and	x25, x8, #0xffffffffffffffe0
   17c7c:	b	17c88 <iconv_message_list@@Base+0x10c>
   17c80:	bl	a910 <xmmalloca@plt>
   17c84:	mov	x25, x0
   17c88:	mov	x0, x25
   17c8c:	mov	x1, x28
   17c90:	mov	x2, x26
   17c94:	bl	a040 <memcpy@plt>
   17c98:	mov	x0, x25
   17c9c:	strb	wzr, [x25, x26]
   17ca0:	bl	a1f0 <po_charset_canonicalize@plt>
   17ca4:	cbz	x0, 17d18 <iconv_message_list@@Base+0x19c>
   17ca8:	mov	w24, w22
   17cac:	ldur	x22, [x29, #-80]
   17cb0:	mov	x21, x0
   17cb4:	cbz	x22, 17db0 <iconv_message_list@@Base+0x234>
   17cb8:	cmp	x22, x21
   17cbc:	b.eq	17db4 <iconv_message_list@@Base+0x238>  // b.none
   17cc0:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   17cc4:	ldr	x8, [x8, #3736]
   17cc8:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   17ccc:	mov	w2, #0x5                   	// #5
   17cd0:	mov	x0, xzr
   17cd4:	ldr	x8, [x8]
   17cd8:	add	x1, x1, #0xe74
   17cdc:	stur	x8, [x29, #-112]
   17ce0:	bl	acd0 <dcgettext@plt>
   17ce4:	mov	x1, x22
   17ce8:	mov	x2, x21
   17cec:	bl	aa20 <xasprintf@plt>
   17cf0:	ldur	x8, [x29, #-112]
   17cf4:	mov	x6, x0
   17cf8:	mov	w0, #0x2                   	// #2
   17cfc:	mov	x1, xzr
   17d00:	mov	x2, xzr
   17d04:	mov	x3, xzr
   17d08:	mov	x4, xzr
   17d0c:	mov	w5, wzr
   17d10:	blr	x8
   17d14:	b	17db4 <iconv_message_list@@Base+0x238>
   17d18:	ldur	x8, [x29, #-96]
   17d1c:	cbnz	x8, 17db8 <iconv_message_list@@Base+0x23c>
   17d20:	ldur	x8, [x29, #-88]
   17d24:	cbz	x8, 17d64 <iconv_message_list@@Base+0x1e8>
   17d28:	ldur	x0, [x29, #-88]
   17d2c:	bl	a0d0 <strlen@plt>
   17d30:	cmp	x0, #0x4
   17d34:	b.cc	17d64 <iconv_message_list@@Base+0x1e8>  // b.lo, b.ul, b.last
   17d38:	ldur	x8, [x29, #-104]
   17d3c:	mov	w9, #0x702e                	// #28718
   17d40:	movk	w9, #0x746f, lsl #16
   17d44:	ldr	w8, [x8, x0]
   17d48:	cmp	w8, w9
   17d4c:	b.ne	17d64 <iconv_message_list@@Base+0x1e8>  // b.any
   17d50:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   17d54:	mov	x0, x25
   17d58:	add	x1, x1, #0x4f2
   17d5c:	bl	a8d0 <strcmp@plt>
   17d60:	cbz	w0, 17db8 <iconv_message_list@@Base+0x23c>
   17d64:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   17d68:	ldr	x8, [x8, #3736]
   17d6c:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   17d70:	mov	w2, #0x5                   	// #5
   17d74:	mov	x0, xzr
   17d78:	ldr	x21, [x8]
   17d7c:	add	x1, x1, #0xe3f
   17d80:	bl	acd0 <dcgettext@plt>
   17d84:	mov	x1, x25
   17d88:	bl	aa20 <xasprintf@plt>
   17d8c:	mov	x6, x0
   17d90:	mov	w0, #0x2                   	// #2
   17d94:	mov	x1, xzr
   17d98:	mov	x2, xzr
   17d9c:	mov	x3, xzr
   17da0:	mov	x4, xzr
   17da4:	mov	w5, wzr
   17da8:	blr	x21
   17dac:	b	17db8 <iconv_message_list@@Base+0x23c>
   17db0:	stur	x21, [x29, #-80]
   17db4:	mov	w22, w24
   17db8:	mov	x0, x25
   17dbc:	bl	ad70 <freea@plt>
   17dc0:	tbz	w22, #0, 17e64 <iconv_message_list@@Base+0x2e8>
   17dc4:	mov	x0, x23
   17dc8:	sub	x21, x28, x27
   17dcc:	bl	a0d0 <strlen@plt>
   17dd0:	mov	x25, x0
   17dd4:	mov	x0, x27
   17dd8:	bl	a0d0 <strlen@plt>
   17ddc:	add	x8, x27, x0
   17de0:	add	x26, x28, x26
   17de4:	sub	x8, x8, x26
   17de8:	add	x28, x8, #0x1
   17dec:	add	x8, x28, x21
   17df0:	mov	x24, x23
   17df4:	add	x23, x8, x25
   17df8:	mov	x0, x23
   17dfc:	bl	a590 <xmalloc@plt>
   17e00:	mov	x1, x27
   17e04:	mov	x2, x21
   17e08:	stur	w22, [x29, #-112]
   17e0c:	mov	x22, x0
   17e10:	bl	a040 <memcpy@plt>
   17e14:	add	x21, x22, x21
   17e18:	mov	x0, x21
   17e1c:	mov	x1, x24
   17e20:	mov	x2, x25
   17e24:	bl	a040 <memcpy@plt>
   17e28:	add	x0, x21, x25
   17e2c:	mov	x1, x26
   17e30:	mov	x2, x28
   17e34:	bl	a040 <memcpy@plt>
   17e38:	ldr	x8, [x20]
   17e3c:	ldr	x9, [x8, x19, lsl #3]
   17e40:	str	x22, [x9, #24]
   17e44:	ldr	x8, [x8, x19, lsl #3]
   17e48:	ldur	w22, [x29, #-112]
   17e4c:	str	x23, [x8, #32]
   17e50:	mov	x23, x24
   17e54:	adrp	x24, 4c000 <plural_table_size@@Base+0x12c00>
   17e58:	ldr	x24, [x24, #3736]
   17e5c:	ldur	x25, [x29, #-88]
   17e60:	b	17e70 <iconv_message_list@@Base+0x2f4>
   17e64:	adrp	x24, 4c000 <plural_table_size@@Base+0x12c00>
   17e68:	ldur	x25, [x29, #-88]
   17e6c:	ldr	x24, [x24, #3736]
   17e70:	adrp	x21, 37000 <get_search_path@@Base+0xb4c>
   17e74:	adrp	x26, 37000 <get_search_path@@Base+0xb4c>
   17e78:	add	x21, x21, #0x196
   17e7c:	add	x26, x26, #0x19f
   17e80:	b	17c10 <iconv_message_list@@Base+0x94>
   17e84:	ldur	x22, [x29, #-80]
   17e88:	cbnz	x22, 17ee4 <iconv_message_list@@Base+0x368>
   17e8c:	mov	x0, x20
   17e90:	bl	a2c0 <is_ascii_message_list@plt>
   17e94:	tbz	w0, #0, 17ea8 <iconv_message_list@@Base+0x32c>
   17e98:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   17e9c:	ldr	x8, [x8, #3824]
   17ea0:	ldr	x22, [x8]
   17ea4:	b	17ee4 <iconv_message_list@@Base+0x368>
   17ea8:	ldr	x19, [x24]
   17eac:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   17eb0:	add	x1, x1, #0xea7
   17eb4:	mov	w2, #0x5                   	// #5
   17eb8:	mov	x0, xzr
   17ebc:	bl	acd0 <dcgettext@plt>
   17ec0:	mov	x6, x0
   17ec4:	mov	w0, #0x2                   	// #2
   17ec8:	mov	x1, xzr
   17ecc:	mov	x2, xzr
   17ed0:	mov	x3, xzr
   17ed4:	mov	x4, xzr
   17ed8:	mov	w5, wzr
   17edc:	blr	x19
   17ee0:	mov	x22, xzr
   17ee4:	cmp	x22, x23
   17ee8:	b.eq	181a8 <iconv_message_list@@Base+0x62c>  // b.none
   17eec:	sub	x2, x29, #0x28
   17ef0:	mov	x0, x23
   17ef4:	mov	x1, x22
   17ef8:	bl	a990 <iconveh_open@plt>
   17efc:	tbz	w0, #31, 17f64 <iconv_message_list@@Base+0x3e8>
   17f00:	ldr	x19, [x24]
   17f04:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   17f08:	add	x1, x1, #0xeee
   17f0c:	mov	w2, #0x5                   	// #5
   17f10:	mov	x0, xzr
   17f14:	bl	acd0 <dcgettext@plt>
   17f18:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   17f1c:	ldr	x8, [x8, #4008]
   17f20:	mov	x21, x0
   17f24:	ldr	x8, [x8]
   17f28:	mov	x0, x8
   17f2c:	bl	a8f0 <basename@plt>
   17f30:	mov	x3, x0
   17f34:	mov	x0, x21
   17f38:	mov	x1, x22
   17f3c:	mov	x2, x23
   17f40:	bl	aa20 <xasprintf@plt>
   17f44:	mov	x6, x0
   17f48:	mov	w0, #0x2                   	// #2
   17f4c:	mov	x1, xzr
   17f50:	mov	x2, xzr
   17f54:	mov	x3, xzr
   17f58:	mov	x4, xzr
   17f5c:	mov	w5, wzr
   17f60:	blr	x19
   17f64:	stp	x22, x23, [x29, #-72]
   17f68:	stur	x25, [x29, #-56]
   17f6c:	ldr	x8, [x20, #8]
   17f70:	cbz	x8, 181a0 <iconv_message_list@@Base+0x624>
   17f74:	stp	x23, x22, [x29, #-88]
   17f78:	mov	w19, wzr
   17f7c:	mov	x23, xzr
   17f80:	ldr	x8, [x20]
   17f84:	ldr	x24, [x8, x23, lsl #3]
   17f88:	ldr	x0, [x24]
   17f8c:	cbz	x0, 17f98 <iconv_message_list@@Base+0x41c>
   17f90:	bl	a7d0 <is_ascii_string@plt>
   17f94:	tbz	w0, #0, 17fa4 <iconv_message_list@@Base+0x428>
   17f98:	ldr	x0, [x24, #8]
   17f9c:	bl	a7d0 <is_ascii_string@plt>
   17fa0:	tbnz	w0, #0, 17fa8 <iconv_message_list@@Base+0x42c>
   17fa4:	mov	w19, #0x1                   	// #1
   17fa8:	stur	x24, [x29, #-48]
   17fac:	ldr	x1, [x24, #56]
   17fb0:	sub	x0, x29, #0x28
   17fb4:	sub	x2, x29, #0x48
   17fb8:	bl	1865c <is_message_list_iconvable@@Base+0x3b0>
   17fbc:	ldr	x1, [x24, #64]
   17fc0:	sub	x0, x29, #0x28
   17fc4:	sub	x2, x29, #0x48
   17fc8:	bl	1865c <is_message_list_iconvable@@Base+0x3b0>
   17fcc:	ldr	x1, [x24, #232]
   17fd0:	cbz	x1, 17fe4 <iconv_message_list@@Base+0x468>
   17fd4:	sub	x0, x29, #0x28
   17fd8:	sub	x2, x29, #0x48
   17fdc:	bl	186c4 <is_message_list_iconvable@@Base+0x418>
   17fe0:	str	x0, [x24, #232]
   17fe4:	ldr	x1, [x24, #240]
   17fe8:	cbz	x1, 17ffc <iconv_message_list@@Base+0x480>
   17fec:	sub	x0, x29, #0x28
   17ff0:	sub	x2, x29, #0x48
   17ff4:	bl	186c4 <is_message_list_iconvable@@Base+0x418>
   17ff8:	str	x0, [x24, #240]
   17ffc:	ldr	x1, [x24, #248]
   18000:	cbz	x1, 18014 <iconv_message_list@@Base+0x498>
   18004:	sub	x0, x29, #0x28
   18008:	sub	x2, x29, #0x48
   1800c:	bl	186c4 <is_message_list_iconvable@@Base+0x418>
   18010:	str	x0, [x24, #248]
   18014:	ldr	x1, [x24]
   18018:	cbz	x1, 1802c <iconv_message_list@@Base+0x4b0>
   1801c:	sub	x0, x29, #0x28
   18020:	sub	x2, x29, #0x48
   18024:	bl	186c4 <is_message_list_iconvable@@Base+0x418>
   18028:	str	x0, [x24]
   1802c:	ldr	x1, [x24, #8]
   18030:	sub	x0, x29, #0x28
   18034:	sub	x2, x29, #0x48
   18038:	bl	186c4 <is_message_list_iconvable@@Base+0x418>
   1803c:	ldr	x1, [x24, #16]
   18040:	str	x0, [x24, #8]
   18044:	cbz	x1, 18058 <iconv_message_list@@Base+0x4dc>
   18048:	sub	x0, x29, #0x28
   1804c:	sub	x2, x29, #0x48
   18050:	bl	186c4 <is_message_list_iconvable@@Base+0x418>
   18054:	str	x0, [x24, #16]
   18058:	stp	xzr, xzr, [x29, #-16]
   1805c:	ldr	x1, [x24, #32]
   18060:	cbz	x1, 181d4 <iconv_message_list@@Base+0x658>
   18064:	ldr	x0, [x24, #24]
   18068:	add	x8, x1, x0
   1806c:	ldurb	w8, [x8, #-1]
   18070:	cbnz	w8, 181d4 <iconv_message_list@@Base+0x658>
   18074:	sub	x2, x29, #0x28
   18078:	sub	x5, x29, #0x8
   1807c:	sub	x6, x29, #0x10
   18080:	mov	w3, wzr
   18084:	mov	x4, xzr
   18088:	bl	a9f0 <xmem_cd_iconveh@plt>
   1808c:	cbnz	w0, 181cc <iconv_message_list@@Base+0x650>
   18090:	ldur	x25, [x29, #-16]
   18094:	cbz	x25, 181cc <iconv_message_list@@Base+0x650>
   18098:	ldur	x26, [x29, #-8]
   1809c:	add	x8, x25, x26
   180a0:	ldurb	w8, [x8, #-1]
   180a4:	cbnz	w8, 181cc <iconv_message_list@@Base+0x650>
   180a8:	ldr	x8, [x24, #32]
   180ac:	cmp	x8, #0x1
   180b0:	b.lt	180e0 <iconv_message_list@@Base+0x564>  // b.tstop
   180b4:	ldr	x22, [x24, #24]
   180b8:	mov	w27, wzr
   180bc:	add	x21, x22, x8
   180c0:	mov	x0, x22
   180c4:	bl	a0d0 <strlen@plt>
   180c8:	add	x8, x0, x22
   180cc:	add	x22, x8, #0x1
   180d0:	cmp	x22, x21
   180d4:	add	w27, w27, #0x1
   180d8:	b.cc	180c0 <iconv_message_list@@Base+0x544>  // b.lo, b.ul, b.last
   180dc:	b	180e4 <iconv_message_list@@Base+0x568>
   180e0:	mov	w27, wzr
   180e4:	cmp	x25, #0x1
   180e8:	b.lt	18118 <iconv_message_list@@Base+0x59c>  // b.tstop
   180ec:	mov	w22, wzr
   180f0:	add	x28, x26, x25
   180f4:	mov	x21, x26
   180f8:	mov	x0, x21
   180fc:	bl	a0d0 <strlen@plt>
   18100:	add	x8, x0, x21
   18104:	add	x21, x8, #0x1
   18108:	cmp	x21, x28
   1810c:	add	w22, w22, #0x1
   18110:	b.cc	180f8 <iconv_message_list@@Base+0x57c>  // b.lo, b.ul, b.last
   18114:	b	1811c <iconv_message_list@@Base+0x5a0>
   18118:	mov	w22, wzr
   1811c:	cmp	w27, w22
   18120:	b.ne	181cc <iconv_message_list@@Base+0x650>  // b.any
   18124:	stp	x26, x25, [x24, #24]
   18128:	ldr	x8, [x20, #8]
   1812c:	add	x23, x23, #0x1
   18130:	cmp	x23, x8
   18134:	b.cc	17f80 <iconv_message_list@@Base+0x404>  // b.lo, b.ul, b.last
   18138:	sub	x0, x29, #0x28
   1813c:	bl	a3b0 <iconveh_close@plt>
   18140:	tbz	w19, #0, 181a8 <iconv_message_list@@Base+0x62c>
   18144:	mov	x0, x20
   18148:	bl	a870 <message_list_msgids_changed@plt>
   1814c:	tbz	w0, #0, 18198 <iconv_message_list@@Base+0x61c>
   18150:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   18154:	ldr	x8, [x8, #3736]
   18158:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   1815c:	add	x1, x1, #0xf54
   18160:	mov	w2, #0x5                   	// #5
   18164:	ldr	x19, [x8]
   18168:	mov	x0, xzr
   1816c:	bl	acd0 <dcgettext@plt>
   18170:	ldp	x2, x1, [x29, #-88]
   18174:	bl	aa20 <xasprintf@plt>
   18178:	mov	x6, x0
   1817c:	mov	w0, #0x2                   	// #2
   18180:	mov	x1, xzr
   18184:	mov	x2, xzr
   18188:	mov	x3, xzr
   1818c:	mov	x4, xzr
   18190:	mov	w5, wzr
   18194:	blr	x19
   18198:	mov	w0, #0x1                   	// #1
   1819c:	b	181ac <iconv_message_list@@Base+0x630>
   181a0:	sub	x0, x29, #0x28
   181a4:	bl	a3b0 <iconveh_close@plt>
   181a8:	mov	w0, wzr
   181ac:	mov	sp, x29
   181b0:	ldp	x20, x19, [sp, #80]
   181b4:	ldp	x22, x21, [sp, #64]
   181b8:	ldp	x24, x23, [sp, #48]
   181bc:	ldp	x26, x25, [sp, #32]
   181c0:	ldp	x28, x27, [sp, #16]
   181c4:	ldp	x29, x30, [sp], #96
   181c8:	ret
   181cc:	sub	x0, x29, #0x48
   181d0:	bl	17ad8 <convert_string_directly@@Base+0x94>
   181d4:	bl	a7e0 <abort@plt>

00000000000181d8 <iconv_msgdomain_list@@Base>:
   181d8:	stp	x29, x30, [sp, #-64]!
   181dc:	stp	x20, x19, [sp, #48]
   181e0:	mov	x20, x0
   181e4:	mov	x0, x1
   181e8:	stp	x24, x23, [sp, #16]
   181ec:	stp	x22, x21, [sp, #32]
   181f0:	mov	x29, sp
   181f4:	mov	x19, x3
   181f8:	mov	w22, w2
   181fc:	mov	x23, x1
   18200:	bl	a1f0 <po_charset_canonicalize@plt>
   18204:	mov	x21, x0
   18208:	cbnz	x0, 18250 <iconv_msgdomain_list@@Base+0x78>
   1820c:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   18210:	ldr	x8, [x8, #3736]
   18214:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   18218:	add	x1, x1, #0xda3
   1821c:	mov	w2, #0x5                   	// #5
   18220:	ldr	x24, [x8]
   18224:	bl	acd0 <dcgettext@plt>
   18228:	mov	x1, x23
   1822c:	bl	aa20 <xasprintf@plt>
   18230:	mov	x6, x0
   18234:	mov	w0, #0x2                   	// #2
   18238:	mov	x1, xzr
   1823c:	mov	x2, xzr
   18240:	mov	x3, xzr
   18244:	mov	x4, xzr
   18248:	mov	w5, wzr
   1824c:	blr	x24
   18250:	ldr	x8, [x20, #8]
   18254:	cbz	x8, 18290 <iconv_msgdomain_list@@Base+0xb8>
   18258:	mov	x23, xzr
   1825c:	and	w22, w22, #0x1
   18260:	ldr	x8, [x20]
   18264:	ldr	x1, [x20, #32]
   18268:	mov	x2, x21
   1826c:	mov	w3, w22
   18270:	ldr	x8, [x8, x23, lsl #3]
   18274:	mov	x4, x19
   18278:	ldr	x0, [x8, #8]
   1827c:	bl	17b88 <iconv_message_list@@Base+0xc>
   18280:	ldr	x8, [x20, #8]
   18284:	add	x23, x23, #0x1
   18288:	cmp	x23, x8
   1828c:	b.cc	18260 <iconv_msgdomain_list@@Base+0x88>  // b.lo, b.ul, b.last
   18290:	str	x21, [x20, #32]
   18294:	mov	x0, x20
   18298:	ldp	x20, x19, [sp, #48]
   1829c:	ldp	x22, x21, [sp, #32]
   182a0:	ldp	x24, x23, [sp, #16]
   182a4:	ldp	x29, x30, [sp], #64
   182a8:	ret

00000000000182ac <is_message_list_iconvable@@Base>:
   182ac:	stp	x29, x30, [sp, #-96]!
   182b0:	stp	x28, x27, [sp, #16]
   182b4:	stp	x26, x25, [sp, #32]
   182b8:	stp	x24, x23, [sp, #48]
   182bc:	stp	x22, x21, [sp, #64]
   182c0:	stp	x20, x19, [sp, #80]
   182c4:	mov	x29, sp
   182c8:	sub	sp, sp, #0x30
   182cc:	ldr	x8, [x0, #8]
   182d0:	cbz	x8, 185b0 <is_message_list_iconvable@@Base+0x304>
   182d4:	adrp	x23, 37000 <get_search_path@@Base+0xb4c>
   182d8:	adrp	x24, 37000 <get_search_path@@Base+0xb4c>
   182dc:	mov	x20, x2
   182e0:	mov	x19, x0
   182e4:	mov	x22, x1
   182e8:	mov	x25, xzr
   182ec:	add	x23, x23, #0x196
   182f0:	add	x24, x24, #0x19f
   182f4:	mov	x21, x1
   182f8:	ldr	x8, [x19]
   182fc:	ldr	x8, [x8, x25, lsl #3]
   18300:	ldr	x9, [x8]
   18304:	cbnz	x9, 1831c <is_message_list_iconvable@@Base+0x70>
   18308:	ldr	x9, [x8, #8]
   1830c:	ldrb	w9, [x9]
   18310:	cbnz	w9, 1831c <is_message_list_iconvable@@Base+0x70>
   18314:	ldrb	w9, [x8, #256]
   18318:	cbz	w9, 18330 <is_message_list_iconvable@@Base+0x84>
   1831c:	ldr	x8, [x19, #8]
   18320:	add	x25, x25, #0x1
   18324:	cmp	x25, x8
   18328:	b.cc	182f8 <is_message_list_iconvable@@Base+0x4c>  // b.lo, b.ul, b.last
   1832c:	b	183e8 <is_message_list_iconvable@@Base+0x13c>
   18330:	ldr	x0, [x8, #24]
   18334:	cbz	x0, 1831c <is_message_list_iconvable@@Base+0x70>
   18338:	mov	x1, x23
   1833c:	bl	ad20 <c_strstr@plt>
   18340:	cbz	x0, 1831c <is_message_list_iconvable@@Base+0x70>
   18344:	add	x27, x0, #0x8
   18348:	mov	x0, x27
   1834c:	mov	x1, x24
   18350:	bl	ada0 <strcspn@plt>
   18354:	mov	x28, x0
   18358:	add	x0, x0, #0x1
   1835c:	cmp	x0, #0xfa0
   18360:	b.hi	18384 <is_message_list_iconvable@@Base+0xd8>  // b.pmore
   18364:	add	x9, x28, #0x2f
   18368:	mov	x8, sp
   1836c:	and	x9, x9, #0xfffffffffffffff0
   18370:	sub	x8, x8, x9
   18374:	mov	sp, x8
   18378:	add	x8, x8, #0x1f
   1837c:	and	x26, x8, #0xffffffffffffffe0
   18380:	b	1838c <is_message_list_iconvable@@Base+0xe0>
   18384:	bl	a910 <xmmalloca@plt>
   18388:	mov	x26, x0
   1838c:	mov	x0, x26
   18390:	mov	x1, x27
   18394:	mov	x2, x28
   18398:	bl	a040 <memcpy@plt>
   1839c:	mov	x0, x26
   183a0:	strb	wzr, [x26, x28]
   183a4:	bl	a1f0 <po_charset_canonicalize@plt>
   183a8:	cbz	x0, 183bc <is_message_list_iconvable@@Base+0x110>
   183ac:	cbz	x21, 183d8 <is_message_list_iconvable@@Base+0x12c>
   183b0:	cmp	x21, x0
   183b4:	b.eq	183dc <is_message_list_iconvable@@Base+0x130>  // b.none
   183b8:	b	185c4 <is_message_list_iconvable@@Base+0x318>
   183bc:	cbnz	x22, 183dc <is_message_list_iconvable@@Base+0x130>
   183c0:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   183c4:	mov	x0, x26
   183c8:	add	x1, x1, #0x4f2
   183cc:	bl	a8d0 <strcmp@plt>
   183d0:	cbz	w0, 183dc <is_message_list_iconvable@@Base+0x130>
   183d4:	b	185c4 <is_message_list_iconvable@@Base+0x318>
   183d8:	mov	x21, x0
   183dc:	mov	x0, x26
   183e0:	bl	ad70 <freea@plt>
   183e4:	b	1831c <is_message_list_iconvable@@Base+0x70>
   183e8:	cbnz	x21, 18404 <is_message_list_iconvable@@Base+0x158>
   183ec:	mov	x0, x19
   183f0:	bl	a2c0 <is_ascii_message_list@plt>
   183f4:	tbz	w0, #0, 185cc <is_message_list_iconvable@@Base+0x320>
   183f8:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   183fc:	ldr	x8, [x8, #3824]
   18400:	ldr	x21, [x8]
   18404:	cmp	x21, x20
   18408:	b.eq	185b0 <is_message_list_iconvable@@Base+0x304>  // b.none
   1840c:	sub	x2, x29, #0x28
   18410:	mov	x0, x20
   18414:	mov	x1, x21
   18418:	bl	a990 <iconveh_open@plt>
   1841c:	tbnz	w0, #31, 185cc <is_message_list_iconvable@@Base+0x320>
   18420:	ldr	x8, [x19, #8]
   18424:	cbz	x8, 185a8 <is_message_list_iconvable@@Base+0x2fc>
   18428:	mov	x22, xzr
   1842c:	ldr	x8, [x19]
   18430:	sub	x0, x29, #0x28
   18434:	ldr	x21, [x8, x22, lsl #3]
   18438:	ldr	x1, [x21, #56]
   1843c:	bl	185f4 <is_message_list_iconvable@@Base+0x348>
   18440:	tbz	w0, #0, 185cc <is_message_list_iconvable@@Base+0x320>
   18444:	ldr	x1, [x21, #64]
   18448:	sub	x0, x29, #0x28
   1844c:	bl	185f4 <is_message_list_iconvable@@Base+0x348>
   18450:	tbz	w0, #0, 185cc <is_message_list_iconvable@@Base+0x320>
   18454:	ldr	x1, [x21, #232]
   18458:	cbz	x1, 18468 <is_message_list_iconvable@@Base+0x1bc>
   1845c:	sub	x0, x29, #0x28
   18460:	bl	18760 <is_message_list_iconvable@@Base+0x4b4>
   18464:	tbz	w0, #0, 185cc <is_message_list_iconvable@@Base+0x320>
   18468:	ldr	x1, [x21, #240]
   1846c:	cbz	x1, 1847c <is_message_list_iconvable@@Base+0x1d0>
   18470:	sub	x0, x29, #0x28
   18474:	bl	18760 <is_message_list_iconvable@@Base+0x4b4>
   18478:	tbz	w0, #0, 185cc <is_message_list_iconvable@@Base+0x320>
   1847c:	ldr	x1, [x21, #248]
   18480:	cbz	x1, 18490 <is_message_list_iconvable@@Base+0x1e4>
   18484:	sub	x0, x29, #0x28
   18488:	bl	18760 <is_message_list_iconvable@@Base+0x4b4>
   1848c:	tbz	w0, #0, 185cc <is_message_list_iconvable@@Base+0x320>
   18490:	ldr	x1, [x21]
   18494:	cbz	x1, 184a4 <is_message_list_iconvable@@Base+0x1f8>
   18498:	sub	x0, x29, #0x28
   1849c:	bl	18760 <is_message_list_iconvable@@Base+0x4b4>
   184a0:	tbz	w0, #0, 185cc <is_message_list_iconvable@@Base+0x320>
   184a4:	ldr	x1, [x21, #8]
   184a8:	sub	x0, x29, #0x28
   184ac:	bl	18760 <is_message_list_iconvable@@Base+0x4b4>
   184b0:	tbz	w0, #0, 185cc <is_message_list_iconvable@@Base+0x320>
   184b4:	ldr	x1, [x21, #16]
   184b8:	cbz	x1, 184c8 <is_message_list_iconvable@@Base+0x21c>
   184bc:	sub	x0, x29, #0x28
   184c0:	bl	18760 <is_message_list_iconvable@@Base+0x4b4>
   184c4:	tbz	w0, #0, 185cc <is_message_list_iconvable@@Base+0x320>
   184c8:	stp	xzr, xzr, [x29, #-16]
   184cc:	ldr	x1, [x21, #32]
   184d0:	cbz	x1, 185f0 <is_message_list_iconvable@@Base+0x344>
   184d4:	ldr	x0, [x21, #24]
   184d8:	add	x8, x1, x0
   184dc:	ldurb	w8, [x8, #-1]
   184e0:	cbnz	w8, 185f0 <is_message_list_iconvable@@Base+0x344>
   184e4:	sub	x2, x29, #0x28
   184e8:	sub	x5, x29, #0x8
   184ec:	sub	x6, x29, #0x10
   184f0:	mov	w3, wzr
   184f4:	mov	x4, xzr
   184f8:	bl	a9f0 <xmem_cd_iconveh@plt>
   184fc:	cbnz	w0, 185cc <is_message_list_iconvable@@Base+0x320>
   18500:	ldp	x24, x20, [x29, #-16]
   18504:	cbz	x24, 185b8 <is_message_list_iconvable@@Base+0x30c>
   18508:	add	x8, x24, x20
   1850c:	ldurb	w8, [x8, #-1]
   18510:	cbnz	w8, 185b8 <is_message_list_iconvable@@Base+0x30c>
   18514:	ldr	x8, [x21, #32]
   18518:	cmp	x8, #0x1
   1851c:	b.lt	1854c <is_message_list_iconvable@@Base+0x2a0>  // b.tstop
   18520:	ldr	x21, [x21, #24]
   18524:	mov	w23, wzr
   18528:	add	x25, x21, x8
   1852c:	mov	x0, x21
   18530:	bl	a0d0 <strlen@plt>
   18534:	add	x8, x0, x21
   18538:	add	x21, x8, #0x1
   1853c:	cmp	x21, x25
   18540:	add	w23, w23, #0x1
   18544:	b.cc	1852c <is_message_list_iconvable@@Base+0x280>  // b.lo, b.ul, b.last
   18548:	b	18550 <is_message_list_iconvable@@Base+0x2a4>
   1854c:	mov	w23, wzr
   18550:	cmp	x24, #0x1
   18554:	b.lt	18584 <is_message_list_iconvable@@Base+0x2d8>  // b.tstop
   18558:	mov	w25, wzr
   1855c:	add	x24, x20, x24
   18560:	mov	x21, x20
   18564:	mov	x0, x21
   18568:	bl	a0d0 <strlen@plt>
   1856c:	add	x8, x0, x21
   18570:	add	x21, x8, #0x1
   18574:	cmp	x21, x24
   18578:	add	w25, w25, #0x1
   1857c:	b.cc	18564 <is_message_list_iconvable@@Base+0x2b8>  // b.lo, b.ul, b.last
   18580:	b	18588 <is_message_list_iconvable@@Base+0x2dc>
   18584:	mov	w25, wzr
   18588:	mov	x0, x20
   1858c:	bl	aa00 <free@plt>
   18590:	cmp	w23, w25
   18594:	b.ne	185cc <is_message_list_iconvable@@Base+0x320>  // b.any
   18598:	ldr	x8, [x19, #8]
   1859c:	add	x22, x22, #0x1
   185a0:	cmp	x22, x8
   185a4:	b.cc	1842c <is_message_list_iconvable@@Base+0x180>  // b.lo, b.ul, b.last
   185a8:	sub	x0, x29, #0x28
   185ac:	bl	a3b0 <iconveh_close@plt>
   185b0:	mov	w0, #0x1                   	// #1
   185b4:	b	185d0 <is_message_list_iconvable@@Base+0x324>
   185b8:	mov	x0, x20
   185bc:	bl	aa00 <free@plt>
   185c0:	b	185cc <is_message_list_iconvable@@Base+0x320>
   185c4:	mov	x0, x26
   185c8:	bl	ad70 <freea@plt>
   185cc:	mov	w0, wzr
   185d0:	mov	sp, x29
   185d4:	ldp	x20, x19, [sp, #80]
   185d8:	ldp	x22, x21, [sp, #64]
   185dc:	ldp	x24, x23, [sp, #48]
   185e0:	ldp	x26, x25, [sp, #32]
   185e4:	ldp	x28, x27, [sp, #16]
   185e8:	ldp	x29, x30, [sp], #96
   185ec:	ret
   185f0:	bl	a7e0 <abort@plt>
   185f4:	stp	x29, x30, [sp, #-48]!
   185f8:	str	x21, [sp, #16]
   185fc:	stp	x20, x19, [sp, #32]
   18600:	mov	x29, sp
   18604:	cbz	x1, 18640 <is_message_list_iconvable@@Base+0x394>
   18608:	ldr	x8, [x1, #8]
   1860c:	mov	x19, x1
   18610:	cbz	x8, 18640 <is_message_list_iconvable@@Base+0x394>
   18614:	mov	x20, x0
   18618:	mov	x21, xzr
   1861c:	ldr	x8, [x19]
   18620:	mov	x0, x20
   18624:	ldr	x1, [x8, x21, lsl #3]
   18628:	bl	18760 <is_message_list_iconvable@@Base+0x4b4>
   1862c:	tbz	w0, #0, 18654 <is_message_list_iconvable@@Base+0x3a8>
   18630:	ldr	x8, [x19, #8]
   18634:	add	x21, x21, #0x1
   18638:	cmp	x21, x8
   1863c:	b.cc	1861c <is_message_list_iconvable@@Base+0x370>  // b.lo, b.ul, b.last
   18640:	mov	w0, #0x1                   	// #1
   18644:	ldp	x20, x19, [sp, #32]
   18648:	ldr	x21, [sp, #16]
   1864c:	ldp	x29, x30, [sp], #48
   18650:	ret
   18654:	mov	w0, wzr
   18658:	b	18644 <is_message_list_iconvable@@Base+0x398>
   1865c:	stp	x29, x30, [sp, #-48]!
   18660:	stp	x22, x21, [sp, #16]
   18664:	stp	x20, x19, [sp, #32]
   18668:	mov	x29, sp
   1866c:	cbz	x1, 186b4 <is_message_list_iconvable@@Base+0x408>
   18670:	ldr	x8, [x1, #8]
   18674:	mov	x20, x1
   18678:	cbz	x8, 186b4 <is_message_list_iconvable@@Base+0x408>
   1867c:	mov	x19, x2
   18680:	mov	x21, x0
   18684:	mov	x22, xzr
   18688:	ldr	x8, [x20]
   1868c:	mov	x0, x21
   18690:	mov	x2, x19
   18694:	ldr	x1, [x8, x22, lsl #3]
   18698:	bl	186c4 <is_message_list_iconvable@@Base+0x418>
   1869c:	ldr	x8, [x20]
   186a0:	str	x0, [x8, x22, lsl #3]
   186a4:	ldr	x8, [x20, #8]
   186a8:	add	x22, x22, #0x1
   186ac:	cmp	x22, x8
   186b0:	b.cc	18688 <is_message_list_iconvable@@Base+0x3dc>  // b.lo, b.ul, b.last
   186b4:	ldp	x20, x19, [sp, #32]
   186b8:	ldp	x22, x21, [sp, #16]
   186bc:	ldp	x29, x30, [sp], #48
   186c0:	ret
   186c4:	sub	sp, sp, #0x40
   186c8:	str	x21, [sp, #32]
   186cc:	mov	x21, x0
   186d0:	mov	x0, x1
   186d4:	stp	x29, x30, [sp, #16]
   186d8:	stp	x20, x19, [sp, #48]
   186dc:	add	x29, sp, #0x10
   186e0:	mov	x19, x2
   186e4:	mov	x20, x1
   186e8:	bl	a0d0 <strlen@plt>
   186ec:	add	x1, x0, #0x1
   186f0:	add	x5, x29, #0x18
   186f4:	add	x6, sp, #0x8
   186f8:	mov	x0, x20
   186fc:	mov	x2, x21
   18700:	mov	w3, wzr
   18704:	mov	x4, xzr
   18708:	str	xzr, [x29, #24]
   1870c:	str	xzr, [sp, #8]
   18710:	bl	a9f0 <xmem_cd_iconveh@plt>
   18714:	cbnz	w0, 18758 <is_message_list_iconvable@@Base+0x4ac>
   18718:	ldr	x8, [sp, #8]
   1871c:	cbz	x8, 18758 <is_message_list_iconvable@@Base+0x4ac>
   18720:	ldr	x20, [x29, #24]
   18724:	sub	x21, x8, #0x1
   18728:	ldrb	w8, [x20, x21]
   1872c:	cbnz	w8, 18758 <is_message_list_iconvable@@Base+0x4ac>
   18730:	mov	x0, x20
   18734:	bl	a0d0 <strlen@plt>
   18738:	cmp	x0, x21
   1873c:	b.ne	18758 <is_message_list_iconvable@@Base+0x4ac>  // b.any
   18740:	mov	x0, x20
   18744:	ldp	x20, x19, [sp, #48]
   18748:	ldr	x21, [sp, #32]
   1874c:	ldp	x29, x30, [sp, #16]
   18750:	add	sp, sp, #0x40
   18754:	ret
   18758:	mov	x0, x19
   1875c:	bl	17ad8 <convert_string_directly@@Base+0x94>
   18760:	sub	sp, sp, #0x30
   18764:	stp	x20, x19, [sp, #32]
   18768:	mov	x20, x0
   1876c:	mov	x0, x1
   18770:	stp	x29, x30, [sp, #16]
   18774:	add	x29, sp, #0x10
   18778:	mov	x19, x1
   1877c:	bl	a0d0 <strlen@plt>
   18780:	add	x1, x0, #0x1
   18784:	add	x5, sp, #0x8
   18788:	mov	x6, sp
   1878c:	mov	x0, x19
   18790:	mov	x2, x20
   18794:	mov	w3, wzr
   18798:	mov	x4, xzr
   1879c:	stp	xzr, xzr, [sp]
   187a0:	bl	a9f0 <xmem_cd_iconveh@plt>
   187a4:	mov	w20, wzr
   187a8:	cbnz	w0, 187e0 <is_message_list_iconvable@@Base+0x534>
   187ac:	ldp	x8, x19, [sp]
   187b0:	cbz	x8, 187c0 <is_message_list_iconvable@@Base+0x514>
   187b4:	sub	x20, x8, #0x1
   187b8:	ldrb	w8, [x19, x20]
   187bc:	cbz	w8, 187c8 <is_message_list_iconvable@@Base+0x51c>
   187c0:	mov	w20, wzr
   187c4:	b	187d8 <is_message_list_iconvable@@Base+0x52c>
   187c8:	mov	x0, x19
   187cc:	bl	a0d0 <strlen@plt>
   187d0:	cmp	x0, x20
   187d4:	cset	w20, eq  // eq = none
   187d8:	mov	x0, x19
   187dc:	bl	aa00 <free@plt>
   187e0:	mov	w0, w20
   187e4:	ldp	x20, x19, [sp, #32]
   187e8:	ldp	x29, x30, [sp, #16]
   187ec:	add	sp, sp, #0x30
   187f0:	ret

00000000000187f4 <string_list_equal@@Base>:
   187f4:	stp	x29, x30, [sp, #-48]!
   187f8:	str	x21, [sp, #16]
   187fc:	stp	x20, x19, [sp, #32]
   18800:	mov	x29, sp
   18804:	cbz	x0, 18818 <string_list_equal@@Base+0x24>
   18808:	ldr	x19, [x0, #8]
   1880c:	cbz	x1, 18820 <string_list_equal@@Base+0x2c>
   18810:	ldr	x8, [x1, #8]
   18814:	b	18824 <string_list_equal@@Base+0x30>
   18818:	mov	x19, xzr
   1881c:	cbnz	x1, 18810 <string_list_equal@@Base+0x1c>
   18820:	mov	x8, xzr
   18824:	cmp	x19, x8
   18828:	b.ne	18860 <string_list_equal@@Base+0x6c>  // b.any
   1882c:	cbz	x19, 18858 <string_list_equal@@Base+0x64>
   18830:	ldr	x20, [x0]
   18834:	ldr	x21, [x1]
   18838:	ldr	x0, [x20]
   1883c:	ldr	x1, [x21]
   18840:	bl	a8d0 <strcmp@plt>
   18844:	cbnz	w0, 18860 <string_list_equal@@Base+0x6c>
   18848:	subs	x19, x19, #0x1
   1884c:	add	x21, x21, #0x8
   18850:	add	x20, x20, #0x8
   18854:	b.ne	18838 <string_list_equal@@Base+0x44>  // b.any
   18858:	mov	w0, #0x1                   	// #1
   1885c:	b	18864 <string_list_equal@@Base+0x70>
   18860:	mov	w0, wzr
   18864:	ldp	x20, x19, [sp, #32]
   18868:	ldr	x21, [sp, #16]
   1886c:	ldp	x29, x30, [sp], #48
   18870:	ret

0000000000018874 <message_equal@@Base>:
   18874:	sub	sp, sp, #0x80
   18878:	stp	x29, x30, [sp, #32]
   1887c:	stp	x28, x27, [sp, #48]
   18880:	stp	x26, x25, [sp, #64]
   18884:	stp	x24, x23, [sp, #80]
   18888:	stp	x22, x21, [sp, #96]
   1888c:	stp	x20, x19, [sp, #112]
   18890:	mov	x19, x1
   18894:	ldr	x22, [x0]
   18898:	ldr	x1, [x1]
   1889c:	mov	x20, x0
   188a0:	mov	w21, w2
   188a4:	add	x29, sp, #0x20
   188a8:	cbz	x22, 188c0 <message_equal@@Base+0x4c>
   188ac:	cbz	x1, 188d8 <message_equal@@Base+0x64>
   188b0:	mov	x0, x22
   188b4:	bl	a8d0 <strcmp@plt>
   188b8:	cbnz	w0, 188d8 <message_equal@@Base+0x64>
   188bc:	b	188c4 <message_equal@@Base+0x50>
   188c0:	cbnz	x1, 188d8 <message_equal@@Base+0x64>
   188c4:	ldr	x23, [x20, #8]
   188c8:	ldr	x1, [x19, #8]
   188cc:	mov	x0, x23
   188d0:	bl	a8d0 <strcmp@plt>
   188d4:	cbz	w0, 188fc <message_equal@@Base+0x88>
   188d8:	mov	w0, wzr
   188dc:	ldp	x20, x19, [sp, #112]
   188e0:	ldp	x22, x21, [sp, #96]
   188e4:	ldp	x24, x23, [sp, #80]
   188e8:	ldp	x26, x25, [sp, #64]
   188ec:	ldp	x28, x27, [sp, #48]
   188f0:	ldp	x29, x30, [sp, #32]
   188f4:	add	sp, sp, #0x80
   188f8:	ret
   188fc:	ldr	x0, [x20, #16]
   18900:	ldr	x1, [x19, #16]
   18904:	cbz	x0, 18918 <message_equal@@Base+0xa4>
   18908:	cbz	x1, 188d8 <message_equal@@Base+0x64>
   1890c:	bl	a8d0 <strcmp@plt>
   18910:	cbnz	w0, 188d8 <message_equal@@Base+0x64>
   18914:	b	1891c <message_equal@@Base+0xa8>
   18918:	cbnz	x1, 188d8 <message_equal@@Base+0x64>
   1891c:	cbz	x22, 18a58 <message_equal@@Base+0x1e4>
   18920:	ldr	x2, [x20, #32]
   18924:	ldr	x8, [x19, #32]
   18928:	cmp	x2, x8
   1892c:	b.ne	188d8 <message_equal@@Base+0x64>  // b.any
   18930:	ldr	x1, [x19, #24]
   18934:	ldr	x0, [x20, #24]
   18938:	bl	a650 <bcmp@plt>
   1893c:	cbnz	w0, 188d8 <message_equal@@Base+0x64>
   18940:	ldr	x0, [x20, #40]
   18944:	ldr	x1, [x19, #40]
   18948:	cmp	x0, x1
   1894c:	b.eq	18958 <message_equal@@Base+0xe4>  // b.none
   18950:	bl	a8d0 <strcmp@plt>
   18954:	cbnz	w0, 188d8 <message_equal@@Base+0x64>
   18958:	ldr	x8, [x20, #48]
   1895c:	ldr	x9, [x19, #48]
   18960:	cmp	x8, x9
   18964:	b.ne	188d8 <message_equal@@Base+0x64>  // b.any
   18968:	ldr	x0, [x20, #56]
   1896c:	ldr	x1, [x19, #56]
   18970:	bl	ac30 <string_list_equal@plt>
   18974:	tbz	w0, #0, 188d8 <message_equal@@Base+0x64>
   18978:	ldr	x0, [x20, #64]
   1897c:	ldr	x1, [x19, #64]
   18980:	bl	ac30 <string_list_equal@plt>
   18984:	tbz	w0, #0, 188d8 <message_equal@@Base+0x64>
   18988:	ldr	x21, [x20, #72]
   1898c:	ldr	x8, [x19, #72]
   18990:	cmp	x21, x8
   18994:	b.ne	188d8 <message_equal@@Base+0x64>  // b.any
   18998:	cbz	x21, 189e4 <message_equal@@Base+0x170>
   1899c:	ldr	x8, [x20, #80]
   189a0:	ldr	x9, [x19, #80]
   189a4:	add	x22, x8, #0x8
   189a8:	add	x23, x9, #0x8
   189ac:	ldur	x0, [x22, #-8]
   189b0:	ldur	x1, [x23, #-8]
   189b4:	cmp	x0, x1
   189b8:	b.eq	189c4 <message_equal@@Base+0x150>  // b.none
   189bc:	bl	a8d0 <strcmp@plt>
   189c0:	cbnz	w0, 188d8 <message_equal@@Base+0x64>
   189c4:	ldr	x8, [x22]
   189c8:	ldr	x9, [x23]
   189cc:	cmp	x8, x9
   189d0:	b.ne	188d8 <message_equal@@Base+0x64>  // b.any
   189d4:	subs	x21, x21, #0x1
   189d8:	add	x22, x22, #0x10
   189dc:	add	x23, x23, #0x10
   189e0:	b.ne	189ac <message_equal@@Base+0x138>  // b.any
   189e4:	ldrb	w8, [x20, #88]
   189e8:	ldrb	w9, [x19, #88]
   189ec:	cmp	w8, w9
   189f0:	b.ne	188d8 <message_equal@@Base+0x64>  // b.any
   189f4:	mov	x8, xzr
   189f8:	add	x9, x20, #0x5c
   189fc:	add	x10, x19, #0x5c
   18a00:	ldr	w11, [x9, x8]
   18a04:	ldr	w12, [x10, x8]
   18a08:	cmp	w11, w12
   18a0c:	b.ne	188d8 <message_equal@@Base+0x64>  // b.any
   18a10:	add	x8, x8, #0x4
   18a14:	cmp	x8, #0x70
   18a18:	b.ne	18a00 <message_equal@@Base+0x18c>  // b.any
   18a1c:	ldr	w8, [x20, #204]
   18a20:	ldr	w9, [x19, #204]
   18a24:	cmp	w8, w9
   18a28:	b.ne	188d8 <message_equal@@Base+0x64>  // b.any
   18a2c:	ldr	w8, [x20, #208]
   18a30:	ldr	w9, [x19, #208]
   18a34:	cmp	w8, w9
   18a38:	b.ne	188d8 <message_equal@@Base+0x64>  // b.any
   18a3c:	ldr	x0, [x20, #232]
   18a40:	ldr	x1, [x19, #232]
   18a44:	cbz	x0, 18bec <message_equal@@Base+0x378>
   18a48:	cbz	x1, 188d8 <message_equal@@Base+0x64>
   18a4c:	bl	a8d0 <strcmp@plt>
   18a50:	cbnz	w0, 188d8 <message_equal@@Base+0x64>
   18a54:	b	18bf0 <message_equal@@Base+0x37c>
   18a58:	ldrb	w8, [x23]
   18a5c:	cbnz	w8, 18920 <message_equal@@Base+0xac>
   18a60:	tbz	w21, #0, 18920 <message_equal@@Base+0xac>
   18a64:	ldp	x23, x2, [x20, #24]
   18a68:	mov	x28, #0x6974                	// #26996
   18a6c:	ldp	x1, x27, [x19, #24]
   18a70:	mov	x21, #0x4f50                	// #20304
   18a74:	movk	x28, #0x6e6f, lsl #16
   18a78:	movk	x21, #0x2d54, lsl #16
   18a7c:	movk	x28, #0x442d, lsl #32
   18a80:	movk	x21, #0x7243, lsl #32
   18a84:	movk	x28, #0x7461, lsl #48
   18a88:	movk	x21, #0x6165, lsl #48
   18a8c:	cmp	x2, #0x12
   18a90:	add	x26, x23, x2
   18a94:	stur	x2, [x29, #-8]
   18a98:	b.ge	18aa4 <message_equal@@Base+0x230>  // b.tcont
   18a9c:	mov	x24, xzr
   18aa0:	b	18af8 <message_equal@@Base+0x284>
   18aa4:	mov	x25, x1
   18aa8:	mov	w22, #0x3a65                	// #14949
   18aac:	mov	x24, x23
   18ab0:	ldp	x8, x9, [x24]
   18ab4:	ldrh	w10, [x24, #16]
   18ab8:	eor	x8, x8, x21
   18abc:	eor	x9, x9, x28
   18ac0:	eor	x10, x10, x22
   18ac4:	orr	x8, x8, x9
   18ac8:	orr	x8, x8, x10
   18acc:	cbz	x8, 18af4 <message_equal@@Base+0x280>
   18ad0:	mov	w1, #0xa                   	// #10
   18ad4:	mov	x0, x24
   18ad8:	bl	abe0 <memchr@plt>
   18adc:	cbz	x0, 18af0 <message_equal@@Base+0x27c>
   18ae0:	add	x24, x0, #0x1
   18ae4:	sub	x2, x26, x24
   18ae8:	cmp	x2, #0x12
   18aec:	b.ge	18ab0 <message_equal@@Base+0x23c>  // b.tcont
   18af0:	mov	x24, xzr
   18af4:	mov	x1, x25
   18af8:	cmp	x27, #0x12
   18afc:	add	x22, x1, x27
   18b00:	b.ge	18b0c <message_equal@@Base+0x298>  // b.tcont
   18b04:	mov	x25, xzr
   18b08:	b	18b64 <message_equal@@Base+0x2f0>
   18b0c:	stp	x1, x23, [sp, #8]
   18b10:	mov	w23, #0x3a65                	// #14949
   18b14:	mov	x2, x27
   18b18:	mov	x25, x1
   18b1c:	ldp	x8, x9, [x25]
   18b20:	ldrh	w10, [x25, #16]
   18b24:	eor	x8, x8, x21
   18b28:	eor	x9, x9, x28
   18b2c:	eor	x10, x10, x23
   18b30:	orr	x8, x8, x9
   18b34:	orr	x8, x8, x10
   18b38:	cbz	x8, 18b60 <message_equal@@Base+0x2ec>
   18b3c:	mov	w1, #0xa                   	// #10
   18b40:	mov	x0, x25
   18b44:	bl	abe0 <memchr@plt>
   18b48:	cbz	x0, 18b5c <message_equal@@Base+0x2e8>
   18b4c:	add	x25, x0, #0x1
   18b50:	sub	x2, x22, x25
   18b54:	cmp	x2, #0x12
   18b58:	b.ge	18b1c <message_equal@@Base+0x2a8>  // b.tcont
   18b5c:	mov	x25, xzr
   18b60:	ldp	x1, x23, [sp, #8]
   18b64:	cbz	x24, 18bd0 <message_equal@@Base+0x35c>
   18b68:	cbz	x25, 188d8 <message_equal@@Base+0x64>
   18b6c:	sub	x2, x24, x23
   18b70:	sub	x8, x25, x1
   18b74:	cmp	x2, x8
   18b78:	b.ne	188d8 <message_equal@@Base+0x64>  // b.any
   18b7c:	mov	x0, x23
   18b80:	bl	a650 <bcmp@plt>
   18b84:	cbnz	w0, 188d8 <message_equal@@Base+0x64>
   18b88:	sub	x2, x26, x24
   18b8c:	mov	w1, #0xa                   	// #10
   18b90:	mov	x0, x24
   18b94:	bl	abe0 <memchr@plt>
   18b98:	cmp	x0, #0x0
   18b9c:	csel	x21, x26, x0, eq  // eq = none
   18ba0:	sub	x2, x22, x25
   18ba4:	mov	w1, #0xa                   	// #10
   18ba8:	mov	x0, x25
   18bac:	bl	abe0 <memchr@plt>
   18bb0:	cmp	x0, #0x0
   18bb4:	csel	x1, x22, x0, eq  // eq = none
   18bb8:	sub	x2, x26, x21
   18bbc:	sub	x8, x22, x1
   18bc0:	cmp	x2, x8
   18bc4:	b.ne	188d8 <message_equal@@Base+0x64>  // b.any
   18bc8:	mov	x0, x21
   18bcc:	b	18938 <message_equal@@Base+0xc4>
   18bd0:	ldur	x2, [x29, #-8]
   18bd4:	mov	w0, wzr
   18bd8:	cmp	x2, x27
   18bdc:	b.ne	188dc <message_equal@@Base+0x68>  // b.any
   18be0:	cbnz	x25, 188dc <message_equal@@Base+0x68>
   18be4:	mov	x0, x23
   18be8:	b	18938 <message_equal@@Base+0xc4>
   18bec:	cbnz	x1, 188d8 <message_equal@@Base+0x64>
   18bf0:	ldr	x0, [x20, #240]
   18bf4:	ldr	x1, [x19, #240]
   18bf8:	cbz	x0, 18c0c <message_equal@@Base+0x398>
   18bfc:	cbz	x1, 188d8 <message_equal@@Base+0x64>
   18c00:	bl	a8d0 <strcmp@plt>
   18c04:	cbnz	w0, 188d8 <message_equal@@Base+0x64>
   18c08:	b	18c10 <message_equal@@Base+0x39c>
   18c0c:	cbnz	x1, 188d8 <message_equal@@Base+0x64>
   18c10:	ldr	x0, [x20, #248]
   18c14:	ldr	x1, [x19, #248]
   18c18:	cbz	x0, 18c2c <message_equal@@Base+0x3b8>
   18c1c:	cbz	x1, 188d8 <message_equal@@Base+0x64>
   18c20:	bl	a8d0 <strcmp@plt>
   18c24:	cbnz	w0, 188d8 <message_equal@@Base+0x64>
   18c28:	b	18c30 <message_equal@@Base+0x3bc>
   18c2c:	cbnz	x1, 188d8 <message_equal@@Base+0x64>
   18c30:	ldrb	w8, [x20, #256]
   18c34:	ldrb	w9, [x19, #256]
   18c38:	cmp	w8, w9
   18c3c:	cset	w0, eq  // eq = none
   18c40:	b	188dc <message_equal@@Base+0x68>

0000000000018c44 <message_list_equal@@Base>:
   18c44:	stp	x29, x30, [sp, #-48]!
   18c48:	stp	x22, x21, [sp, #16]
   18c4c:	stp	x20, x19, [sp, #32]
   18c50:	ldr	x20, [x0, #8]
   18c54:	ldr	x8, [x1, #8]
   18c58:	mov	x29, sp
   18c5c:	cmp	x20, x8
   18c60:	b.ne	18ca0 <message_list_equal@@Base+0x5c>  // b.any
   18c64:	cbz	x20, 18c98 <message_list_equal@@Base+0x54>
   18c68:	ldr	x21, [x0]
   18c6c:	ldr	x22, [x1]
   18c70:	and	w19, w2, #0x1
   18c74:	ldr	x0, [x21]
   18c78:	ldr	x1, [x22]
   18c7c:	mov	w2, w19
   18c80:	bl	a600 <message_equal@plt>
   18c84:	tbz	w0, #0, 18ca0 <message_list_equal@@Base+0x5c>
   18c88:	subs	x20, x20, #0x1
   18c8c:	add	x22, x22, #0x8
   18c90:	add	x21, x21, #0x8
   18c94:	b.ne	18c74 <message_list_equal@@Base+0x30>  // b.any
   18c98:	mov	w0, #0x1                   	// #1
   18c9c:	b	18ca4 <message_list_equal@@Base+0x60>
   18ca0:	mov	w0, wzr
   18ca4:	ldp	x20, x19, [sp, #32]
   18ca8:	ldp	x22, x21, [sp, #16]
   18cac:	ldp	x29, x30, [sp], #48
   18cb0:	ret

0000000000018cb4 <msgdomain_list_equal@@Base>:
   18cb4:	stp	x29, x30, [sp, #-64]!
   18cb8:	stp	x24, x23, [sp, #16]
   18cbc:	stp	x22, x21, [sp, #32]
   18cc0:	stp	x20, x19, [sp, #48]
   18cc4:	ldr	x20, [x0, #8]
   18cc8:	ldr	x8, [x1, #8]
   18ccc:	mov	x29, sp
   18cd0:	cmp	x20, x8
   18cd4:	b.ne	18d2c <msgdomain_list_equal@@Base+0x78>  // b.any
   18cd8:	cbz	x20, 18d24 <msgdomain_list_equal@@Base+0x70>
   18cdc:	ldr	x21, [x0]
   18ce0:	ldr	x22, [x1]
   18ce4:	and	w19, w2, #0x1
   18ce8:	ldr	x23, [x21]
   18cec:	ldr	x24, [x22]
   18cf0:	ldr	x0, [x23]
   18cf4:	ldr	x1, [x24]
   18cf8:	bl	a8d0 <strcmp@plt>
   18cfc:	cbnz	w0, 18d2c <msgdomain_list_equal@@Base+0x78>
   18d00:	ldr	x0, [x23, #8]
   18d04:	ldr	x1, [x24, #8]
   18d08:	mov	w2, w19
   18d0c:	bl	ae10 <message_list_equal@plt>
   18d10:	tbz	w0, #0, 18d2c <msgdomain_list_equal@@Base+0x78>
   18d14:	subs	x20, x20, #0x1
   18d18:	add	x22, x22, #0x8
   18d1c:	add	x21, x21, #0x8
   18d20:	b.ne	18ce8 <msgdomain_list_equal@@Base+0x34>  // b.any
   18d24:	mov	w0, #0x1                   	// #1
   18d28:	b	18d30 <msgdomain_list_equal@@Base+0x7c>
   18d2c:	mov	w0, wzr
   18d30:	ldp	x20, x19, [sp, #48]
   18d34:	ldp	x22, x21, [sp, #32]
   18d38:	ldp	x24, x23, [sp, #16]
   18d3c:	ldp	x29, x30, [sp], #64
   18d40:	ret

0000000000018d44 <catenate_msgdomain_list@@Base>:
   18d44:	str	d8, [sp, #-112]!
   18d48:	stp	x29, x30, [sp, #16]
   18d4c:	stp	x28, x27, [sp, #32]
   18d50:	stp	x26, x25, [sp, #48]
   18d54:	stp	x24, x23, [sp, #64]
   18d58:	stp	x22, x21, [sp, #80]
   18d5c:	stp	x20, x19, [sp, #96]
   18d60:	mov	x29, sp
   18d64:	sub	sp, sp, #0x30
   18d68:	ldr	x20, [x0, #8]
   18d6c:	lsr	x8, x20, #61
   18d70:	cbnz	x8, 1a144 <catenate_msgdomain_list@@Base+0x1400>
   18d74:	ldr	x28, [x0]
   18d78:	lsl	x24, x20, #3
   18d7c:	mov	x0, x24
   18d80:	mov	x27, x2
   18d84:	mov	x19, x1
   18d88:	bl	a590 <xmalloc@plt>
   18d8c:	stp	x0, x20, [x29, #-40]
   18d90:	cbz	x20, 19458 <catenate_msgdomain_list@@Base+0x714>
   18d94:	mov	x21, x20
   18d98:	mov	x20, xzr
   18d9c:	mov	x22, x0
   18da0:	ldr	x0, [x28, x20, lsl #3]
   18da4:	mov	x1, x19
   18da8:	bl	a050 <read_catalog_file@plt>
   18dac:	str	x0, [x22, x20, lsl #3]
   18db0:	add	x20, x20, #0x1
   18db4:	cmp	x21, x20
   18db8:	b.ne	18da0 <catenate_msgdomain_list@@Base+0x5c>  // b.any
   18dbc:	mov	x0, x24
   18dc0:	bl	a590 <xmalloc@plt>
   18dc4:	mov	x23, x0
   18dc8:	cbz	x21, 19464 <catenate_msgdomain_list@@Base+0x720>
   18dcc:	stur	x27, [x29, #-48]
   18dd0:	mov	x27, xzr
   18dd4:	stur	x24, [x29, #-8]
   18dd8:	str	x28, [x29, #8]
   18ddc:	ldur	x8, [x29, #-40]
   18de0:	ldr	x22, [x8, x27, lsl #3]
   18de4:	ldr	x8, [x22, #8]
   18de8:	lsr	x9, x8, #61
   18dec:	cbnz	x9, 1a144 <catenate_msgdomain_list@@Base+0x1400>
   18df0:	lsl	x0, x8, #3
   18df4:	bl	a590 <xmalloc@plt>
   18df8:	str	x0, [x23, x27, lsl #3]
   18dfc:	ldr	x8, [x22, #8]
   18e00:	cbz	x8, 19058 <catenate_msgdomain_list@@Base+0x314>
   18e04:	mov	x24, xzr
   18e08:	ldr	x8, [x22]
   18e0c:	ldr	x8, [x8, x24, lsl #3]
   18e10:	ldr	x28, [x8, #8]
   18e14:	ldr	x8, [x28, #8]
   18e18:	cbz	x8, 1903c <catenate_msgdomain_list@@Base+0x2f8>
   18e1c:	mov	x21, xzr
   18e20:	mov	x19, xzr
   18e24:	ldr	x8, [x28]
   18e28:	ldr	x8, [x8, x21, lsl #3]
   18e2c:	ldr	x9, [x8]
   18e30:	cbnz	x9, 18e48 <catenate_msgdomain_list@@Base+0x104>
   18e34:	ldr	x9, [x8, #8]
   18e38:	ldrb	w9, [x9]
   18e3c:	cbnz	w9, 18e48 <catenate_msgdomain_list@@Base+0x104>
   18e40:	ldrb	w9, [x8, #256]
   18e44:	cbz	w9, 18e5c <catenate_msgdomain_list@@Base+0x118>
   18e48:	ldr	x8, [x28, #8]
   18e4c:	add	x21, x21, #0x1
   18e50:	cmp	x21, x8
   18e54:	b.cc	18e24 <catenate_msgdomain_list@@Base+0xe0>  // b.lo, b.ul, b.last
   18e58:	b	18fb0 <catenate_msgdomain_list@@Base+0x26c>
   18e5c:	ldr	x0, [x8, #24]
   18e60:	cbz	x0, 18e48 <catenate_msgdomain_list@@Base+0x104>
   18e64:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   18e68:	add	x1, x1, #0x196
   18e6c:	bl	ad20 <c_strstr@plt>
   18e70:	cbz	x0, 18e48 <catenate_msgdomain_list@@Base+0x104>
   18e74:	add	x20, x0, #0x8
   18e78:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   18e7c:	mov	x0, x20
   18e80:	add	x1, x1, #0x19f
   18e84:	bl	ada0 <strcspn@plt>
   18e88:	mov	x26, x0
   18e8c:	add	x0, x0, #0x1
   18e90:	cmp	x0, #0xfa0
   18e94:	b.hi	18eb8 <catenate_msgdomain_list@@Base+0x174>  // b.pmore
   18e98:	add	x9, x26, #0x2f
   18e9c:	mov	x8, sp
   18ea0:	and	x9, x9, #0xfffffffffffffff0
   18ea4:	sub	x8, x8, x9
   18ea8:	mov	sp, x8
   18eac:	add	x8, x8, #0x1f
   18eb0:	and	x25, x8, #0xffffffffffffffe0
   18eb4:	b	18ec0 <catenate_msgdomain_list@@Base+0x17c>
   18eb8:	bl	a910 <xmmalloca@plt>
   18ebc:	mov	x25, x0
   18ec0:	mov	x0, x25
   18ec4:	mov	x1, x20
   18ec8:	mov	x2, x26
   18ecc:	bl	a040 <memcpy@plt>
   18ed0:	mov	x0, x25
   18ed4:	strb	wzr, [x25, x26]
   18ed8:	bl	a1f0 <po_charset_canonicalize@plt>
   18edc:	mov	x20, x0
   18ee0:	cbnz	x0, 18f54 <catenate_msgdomain_list@@Base+0x210>
   18ee4:	ldr	x8, [x29, #8]
   18ee8:	ldr	x20, [x8, x27, lsl #3]
   18eec:	mov	x0, x20
   18ef0:	bl	a0d0 <strlen@plt>
   18ef4:	cmp	x0, #0x4
   18ef8:	b.cc	18f28 <catenate_msgdomain_list@@Base+0x1e4>  // b.lo, b.ul, b.last
   18efc:	add	x8, x20, x0
   18f00:	ldur	w8, [x8, #-4]
   18f04:	mov	w9, #0x702e                	// #28718
   18f08:	movk	w9, #0x746f, lsl #16
   18f0c:	cmp	w8, w9
   18f10:	b.ne	18f28 <catenate_msgdomain_list@@Base+0x1e4>  // b.any
   18f14:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   18f18:	mov	x0, x25
   18f1c:	add	x1, x1, #0x4f2
   18f20:	bl	a8d0 <strcmp@plt>
   18f24:	cbz	w0, 18fa0 <catenate_msgdomain_list@@Base+0x25c>
   18f28:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   18f2c:	mov	w2, #0x5                   	// #5
   18f30:	mov	x0, xzr
   18f34:	add	x1, x1, #0xe3f
   18f38:	bl	acd0 <dcgettext@plt>
   18f3c:	mov	x2, x0
   18f40:	mov	w0, #0x1                   	// #1
   18f44:	mov	w1, wzr
   18f48:	mov	x3, x25
   18f4c:	bl	a140 <error@plt>
   18f50:	mov	x20, xzr
   18f54:	mov	x0, x25
   18f58:	bl	ad70 <freea@plt>
   18f5c:	cbz	x19, 18f98 <catenate_msgdomain_list@@Base+0x254>
   18f60:	cmp	x19, x20
   18f64:	b.eq	18e48 <catenate_msgdomain_list@@Base+0x104>  // b.none
   18f68:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   18f6c:	mov	w2, #0x5                   	// #5
   18f70:	mov	x0, xzr
   18f74:	add	x1, x1, #0xe74
   18f78:	bl	acd0 <dcgettext@plt>
   18f7c:	mov	x2, x0
   18f80:	mov	w0, #0x1                   	// #1
   18f84:	mov	w1, wzr
   18f88:	mov	x3, x19
   18f8c:	mov	x4, x20
   18f90:	bl	a140 <error@plt>
   18f94:	b	18e48 <catenate_msgdomain_list@@Base+0x104>
   18f98:	mov	x19, x20
   18f9c:	b	18e48 <catenate_msgdomain_list@@Base+0x104>
   18fa0:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   18fa4:	ldr	x8, [x8, #3824]
   18fa8:	ldr	x20, [x8]
   18fac:	b	18f54 <catenate_msgdomain_list@@Base+0x210>
   18fb0:	cbnz	x19, 19040 <catenate_msgdomain_list@@Base+0x2fc>
   18fb4:	mov	x0, x28
   18fb8:	bl	a2c0 <is_ascii_message_list@plt>
   18fbc:	tbz	w0, #0, 18fd0 <catenate_msgdomain_list@@Base+0x28c>
   18fc0:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   18fc4:	ldr	x8, [x8, #3824]
   18fc8:	ldr	x19, [x8]
   18fcc:	b	19040 <catenate_msgdomain_list@@Base+0x2fc>
   18fd0:	ldr	x19, [x22, #32]
   18fd4:	cbnz	x19, 19040 <catenate_msgdomain_list@@Base+0x2fc>
   18fd8:	mov	w2, #0x5                   	// #5
   18fdc:	mov	x0, xzr
   18fe0:	cbz	x24, 19018 <catenate_msgdomain_list@@Base+0x2d4>
   18fe4:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   18fe8:	add	x1, x1, #0xfbf
   18fec:	bl	acd0 <dcgettext@plt>
   18ff0:	ldr	x8, [x22]
   18ff4:	mov	x2, x0
   18ff8:	mov	w0, #0x1                   	// #1
   18ffc:	mov	w1, wzr
   19000:	ldr	x8, [x8, x24, lsl #3]
   19004:	ldr	x3, [x8]
   19008:	ldr	x8, [x29, #8]
   1900c:	ldr	x4, [x8, x27, lsl #3]
   19010:	bl	a140 <error@plt>
   19014:	b	1903c <catenate_msgdomain_list@@Base+0x2f8>
   19018:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   1901c:	add	x1, x1, #0xfce
   19020:	bl	acd0 <dcgettext@plt>
   19024:	ldr	x8, [x29, #8]
   19028:	mov	x2, x0
   1902c:	mov	w0, #0x1                   	// #1
   19030:	mov	w1, wzr
   19034:	ldr	x3, [x8, x27, lsl #3]
   19038:	bl	a140 <error@plt>
   1903c:	mov	x19, xzr
   19040:	ldr	x8, [x23, x27, lsl #3]
   19044:	str	x19, [x8, x24, lsl #3]
   19048:	ldr	x8, [x22, #8]
   1904c:	add	x24, x24, #0x1
   19050:	cmp	x24, x8
   19054:	b.cc	18e08 <catenate_msgdomain_list@@Base+0xc4>  // b.lo, b.ul, b.last
   19058:	ldur	x8, [x29, #-32]
   1905c:	add	x27, x27, #0x1
   19060:	cmp	x27, x8
   19064:	b.ne	18ddc <catenate_msgdomain_list@@Base+0x98>  // b.any
   19068:	ldur	x0, [x29, #-8]
   1906c:	bl	a590 <xmalloc@plt>
   19070:	ldur	x8, [x29, #-32]
   19074:	ldr	x28, [x29, #8]
   19078:	stur	x0, [x29, #-8]
   1907c:	cbz	x8, 1962c <catenate_msgdomain_list@@Base+0x8e8>
   19080:	adrp	x24, 38000 <get_search_path@@Base+0x1b4c>
   19084:	adrp	x25, 38000 <get_search_path@@Base+0x1b4c>
   19088:	mov	x21, xzr
   1908c:	add	x24, x24, #0x39
   19090:	add	x25, x25, #0x1a
   19094:	ldr	x0, [x28, x21, lsl #3]
   19098:	bl	a8f0 <basename@plt>
   1909c:	ldur	x8, [x29, #-40]
   190a0:	ldr	x22, [x8, x21, lsl #3]
   190a4:	ldr	x8, [x22, #8]
   190a8:	lsr	x9, x8, #61
   190ac:	cbnz	x9, 1a144 <catenate_msgdomain_list@@Base+0x1400>
   190b0:	mov	x28, x0
   190b4:	lsl	x0, x8, #3
   190b8:	bl	a590 <xmalloc@plt>
   190bc:	ldur	x8, [x29, #-8]
   190c0:	str	x0, [x8, x21, lsl #3]
   190c4:	ldr	x8, [x22, #8]
   190c8:	cbz	x8, 1921c <catenate_msgdomain_list@@Base+0x4d8>
   190cc:	mov	x20, xzr
   190d0:	ldr	x8, [x22]
   190d4:	ldr	x9, [x8, x20, lsl #3]
   190d8:	ldp	x27, x26, [x9]
   190dc:	ldr	x8, [x26, #8]
   190e0:	cbz	x8, 19130 <catenate_msgdomain_list@@Base+0x3ec>
   190e4:	mov	x19, xzr
   190e8:	ldr	x9, [x26]
   190ec:	ldr	x9, [x9, x19, lsl #3]
   190f0:	ldr	x10, [x9]
   190f4:	cbnz	x10, 19124 <catenate_msgdomain_list@@Base+0x3e0>
   190f8:	ldr	x10, [x9, #8]
   190fc:	ldrb	w10, [x10]
   19100:	cbnz	w10, 19124 <catenate_msgdomain_list@@Base+0x3e0>
   19104:	ldrb	w10, [x9, #256]
   19108:	cbnz	w10, 19124 <catenate_msgdomain_list@@Base+0x3e0>
   1910c:	ldr	x0, [x9, #24]
   19110:	cbz	x0, 19124 <catenate_msgdomain_list@@Base+0x3e0>
   19114:	mov	x1, x25
   19118:	bl	ad20 <c_strstr@plt>
   1911c:	cbnz	x0, 19178 <catenate_msgdomain_list@@Base+0x434>
   19120:	ldr	x8, [x26, #8]
   19124:	add	x19, x19, #0x1
   19128:	cmp	x19, x8
   1912c:	b.cc	190e8 <catenate_msgdomain_list@@Base+0x3a4>  // b.lo, b.ul, b.last
   19130:	cbz	x20, 19148 <catenate_msgdomain_list@@Base+0x404>
   19134:	mov	x0, x24
   19138:	mov	x1, x28
   1913c:	mov	x2, x27
   19140:	bl	aa20 <xasprintf@plt>
   19144:	b	19158 <catenate_msgdomain_list@@Base+0x414>
   19148:	adrp	x0, 38000 <get_search_path@@Base+0x1b4c>
   1914c:	add	x0, x0, #0x7cb
   19150:	mov	x1, x28
   19154:	bl	aa20 <xasprintf@plt>
   19158:	ldur	x8, [x29, #-8]
   1915c:	ldr	x8, [x8, x21, lsl #3]
   19160:	str	x0, [x8, x20, lsl #3]
   19164:	ldr	x8, [x22, #8]
   19168:	add	x20, x20, #0x1
   1916c:	cmp	x20, x8
   19170:	b.cc	190d0 <catenate_msgdomain_list@@Base+0x38c>  // b.lo, b.ul, b.last
   19174:	b	1921c <catenate_msgdomain_list@@Base+0x4d8>
   19178:	add	x26, x0, #0x13
   1917c:	mov	w1, #0xa                   	// #10
   19180:	mov	x0, x26
   19184:	bl	aa80 <strchr@plt>
   19188:	cbnz	x0, 19198 <catenate_msgdomain_list@@Base+0x454>
   1918c:	mov	x0, x26
   19190:	bl	a0d0 <strlen@plt>
   19194:	add	x0, x26, x0
   19198:	cmp	x26, x0
   1919c:	b.cs	19130 <catenate_msgdomain_list@@Base+0x3ec>  // b.hs, b.nlast
   191a0:	ldrb	w8, [x26]
   191a4:	cmp	w8, #0x20
   191a8:	b.ne	191bc <catenate_msgdomain_list@@Base+0x478>  // b.any
   191ac:	add	x26, x26, #0x1
   191b0:	cmp	x0, x26
   191b4:	b.ne	191a0 <catenate_msgdomain_list@@Base+0x45c>  // b.any
   191b8:	b	19130 <catenate_msgdomain_list@@Base+0x3ec>
   191bc:	sub	x8, x0, x26
   191c0:	add	x0, x8, #0x1
   191c4:	stur	x8, [x29, #-16]
   191c8:	bl	a590 <xmalloc@plt>
   191cc:	mov	x1, x26
   191d0:	ldur	x26, [x29, #-16]
   191d4:	mov	x19, x0
   191d8:	mov	x2, x26
   191dc:	bl	a040 <memcpy@plt>
   191e0:	strb	wzr, [x19, x26]
   191e4:	cbz	x19, 19130 <catenate_msgdomain_list@@Base+0x3ec>
   191e8:	cbz	x20, 19208 <catenate_msgdomain_list@@Base+0x4c4>
   191ec:	adrp	x0, 38000 <get_search_path@@Base+0x1b4c>
   191f0:	add	x0, x0, #0x2e
   191f4:	mov	x1, x28
   191f8:	mov	x2, x27
   191fc:	mov	x3, x19
   19200:	bl	aa20 <xasprintf@plt>
   19204:	b	19158 <catenate_msgdomain_list@@Base+0x414>
   19208:	adrp	x0, 38000 <get_search_path@@Base+0x1b4c>
   1920c:	add	x0, x0, #0x31
   19210:	mov	x1, x28
   19214:	mov	x2, x19
   19218:	b	19140 <catenate_msgdomain_list@@Base+0x3fc>
   1921c:	ldur	x8, [x29, #-32]
   19220:	ldr	x28, [x29, #8]
   19224:	add	x21, x21, #0x1
   19228:	cmp	x21, x8
   1922c:	b.ne	19094 <catenate_msgdomain_list@@Base+0x350>  // b.any
   19230:	mov	w0, #0x1                   	// #1
   19234:	mov	w19, #0x1                   	// #1
   19238:	bl	a760 <msgdomain_list_alloc@plt>
   1923c:	ldur	x8, [x29, #-32]
   19240:	mov	x21, x0
   19244:	cbz	x8, 19680 <catenate_msgdomain_list@@Base+0x93c>
   19248:	stur	x21, [x29, #-24]
   1924c:	adrp	x21, 4c000 <plural_table_size@@Base+0x12c00>
   19250:	ldr	x21, [x21, #3880]
   19254:	mov	w8, #0x80000001            	// #-2147483647
   19258:	mov	x9, xzr
   1925c:	dup	v8.2s, w8
   19260:	ldur	x8, [x29, #-40]
   19264:	stur	x9, [x29, #-16]
   19268:	ldr	x22, [x8, x9, lsl #3]
   1926c:	ldr	x8, [x22, #8]
   19270:	cbz	x8, 193ac <catenate_msgdomain_list@@Base+0x668>
   19274:	mov	x26, xzr
   19278:	ldr	x8, [x22]
   1927c:	ldur	x0, [x29, #-24]
   19280:	mov	w2, #0x1                   	// #1
   19284:	ldr	x8, [x8, x26, lsl #3]
   19288:	ldp	x1, x27, [x8]
   1928c:	bl	ad80 <msgdomain_list_sublist@plt>
   19290:	ldr	x8, [x27, #8]
   19294:	cbz	x8, 1939c <catenate_msgdomain_list@@Base+0x658>
   19298:	mov	x24, x0
   1929c:	mov	x28, xzr
   192a0:	ldr	x8, [x27]
   192a4:	mov	x0, x24
   192a8:	ldr	x20, [x8, x28, lsl #3]
   192ac:	ldp	x1, x2, [x20]
   192b0:	bl	ae40 <message_list_search@plt>
   192b4:	mov	x25, x0
   192b8:	cbnz	x0, 19320 <catenate_msgdomain_list@@Base+0x5dc>
   192bc:	ldp	x0, x1, [x20]
   192c0:	ldr	x2, [x20, #16]
   192c4:	add	x5, x20, #0x28
   192c8:	mov	x3, xzr
   192cc:	mov	x4, xzr
   192d0:	bl	a240 <message_alloc@plt>
   192d4:	mov	x25, x0
   192d8:	movi	v0.2d, #0x0
   192dc:	strb	w19, [x0, #88]
   192e0:	stur	q0, [x0, #92]
   192e4:	stur	q0, [x0, #108]
   192e8:	stur	q0, [x0, #124]
   192ec:	stur	q0, [x0, #140]
   192f0:	stur	q0, [x0, #156]
   192f4:	stur	q0, [x0, #172]
   192f8:	stur	q0, [x0, #188]
   192fc:	stur	d8, [x0, #204]
   19300:	str	w19, [x0, #212]
   19304:	stp	xzr, xzr, [x0, #216]
   19308:	strb	w19, [x0, #256]
   1930c:	str	wzr, [x0, #272]
   19310:	str	xzr, [x0, #280]
   19314:	mov	x0, x24
   19318:	mov	x1, x25
   1931c:	bl	ae70 <message_list_append@plt>
   19320:	ldrb	w8, [x21]
   19324:	cbz	w8, 1935c <catenate_msgdomain_list@@Base+0x618>
   19328:	ldr	w9, [x25, #260]
   1932c:	add	x8, x25, #0x104
   19330:	tbz	w9, #31, 1933c <catenate_msgdomain_list@@Base+0x5f8>
   19334:	mov	w9, wzr
   19338:	str	wzr, [x8]
   1933c:	add	w9, w9, #0x1
   19340:	str	w9, [x8]
   19344:	str	x25, [x20, #264]
   19348:	ldr	x8, [x27, #8]
   1934c:	add	x28, x28, #0x1
   19350:	cmp	x28, x8
   19354:	b.cc	192a0 <catenate_msgdomain_list@@Base+0x55c>  // b.lo, b.ul, b.last
   19358:	b	1939c <catenate_msgdomain_list@@Base+0x658>
   1935c:	ldr	x8, [x20]
   19360:	cbnz	x8, 19370 <catenate_msgdomain_list@@Base+0x62c>
   19364:	ldr	x8, [x20, #8]
   19368:	ldrb	w8, [x8]
   1936c:	cbz	w8, 19378 <catenate_msgdomain_list@@Base+0x634>
   19370:	ldrb	w8, [x20, #88]
   19374:	cbnz	w8, 19384 <catenate_msgdomain_list@@Base+0x640>
   19378:	ldr	x8, [x20, #24]
   1937c:	ldrb	w8, [x8]
   19380:	cbnz	w8, 19328 <catenate_msgdomain_list@@Base+0x5e4>
   19384:	ldr	w9, [x25, #260]
   19388:	cmp	w9, #0x0
   1938c:	b.gt	19344 <catenate_msgdomain_list@@Base+0x600>
   19390:	add	x8, x25, #0x104
   19394:	sub	w9, w9, #0x1
   19398:	b	19340 <catenate_msgdomain_list@@Base+0x5fc>
   1939c:	ldr	x8, [x22, #8]
   193a0:	add	x26, x26, #0x1
   193a4:	cmp	x26, x8
   193a8:	b.cc	19278 <catenate_msgdomain_list@@Base+0x534>  // b.lo, b.ul, b.last
   193ac:	ldur	x9, [x29, #-16]
   193b0:	ldur	x8, [x29, #-32]
   193b4:	add	x9, x9, #0x1
   193b8:	cmp	x9, x8
   193bc:	b.ne	19260 <catenate_msgdomain_list@@Base+0x51c>  // b.any
   193c0:	ldur	x8, [x29, #-32]
   193c4:	cbz	x8, 1a0e8 <catenate_msgdomain_list@@Base+0x13a4>
   193c8:	adrp	x21, 4c000 <plural_table_size@@Base+0x12c00>
   193cc:	ldr	x21, [x21, #3848]
   193d0:	ldur	x27, [x29, #-48]
   193d4:	ldr	x28, [x29, #8]
   193d8:	adrp	x22, 1a000 <catenate_msgdomain_list@@Base+0x12bc>
   193dc:	adrp	x24, 1a000 <catenate_msgdomain_list@@Base+0x12bc>
   193e0:	mov	x19, xzr
   193e4:	add	x22, x22, #0x148
   193e8:	add	x24, x24, #0x184
   193ec:	ldur	x8, [x29, #-40]
   193f0:	ldr	x25, [x8, x19, lsl #3]
   193f4:	ldr	x8, [x25, #8]
   193f8:	cbz	x8, 19440 <catenate_msgdomain_list@@Base+0x6fc>
   193fc:	mov	x26, xzr
   19400:	ldr	x8, [x25]
   19404:	ldrb	w9, [x21]
   19408:	ldr	x8, [x8, x26, lsl #3]
   1940c:	cmp	w9, #0x0
   19410:	csel	x1, x24, x22, eq  // eq = none
   19414:	ldr	x20, [x8, #8]
   19418:	mov	x0, x20
   1941c:	bl	a400 <message_list_remove_if_not@plt>
   19420:	ldr	x8, [x20, #8]
   19424:	cbnz	x8, 19430 <catenate_msgdomain_list@@Base+0x6ec>
   19428:	ldr	x8, [x23, x19, lsl #3]
   1942c:	str	xzr, [x8, x26, lsl #3]
   19430:	ldr	x8, [x25, #8]
   19434:	add	x26, x26, #0x1
   19438:	cmp	x26, x8
   1943c:	b.cc	19400 <catenate_msgdomain_list@@Base+0x6bc>  // b.lo, b.ul, b.last
   19440:	ldur	x8, [x29, #-32]
   19444:	add	x19, x19, #0x1
   19448:	cmp	x19, x8
   1944c:	b.ne	193ec <catenate_msgdomain_list@@Base+0x6a8>  // b.any
   19450:	ldur	x21, [x29, #-24]
   19454:	b	1947c <catenate_msgdomain_list@@Base+0x738>
   19458:	mov	x0, x24
   1945c:	bl	a590 <xmalloc@plt>
   19460:	mov	x23, x0
   19464:	mov	x0, x24
   19468:	bl	a590 <xmalloc@plt>
   1946c:	stur	x0, [x29, #-8]
   19470:	mov	w0, #0x1                   	// #1
   19474:	bl	a760 <msgdomain_list_alloc@plt>
   19478:	mov	x21, x0
   1947c:	ldr	x8, [x21, #8]
   19480:	cbz	x8, 194b4 <catenate_msgdomain_list@@Base+0x770>
   19484:	adrp	x20, 1a000 <catenate_msgdomain_list@@Base+0x12bc>
   19488:	mov	x19, xzr
   1948c:	add	x20, x20, #0x1d8
   19490:	ldr	x8, [x21]
   19494:	mov	x1, x20
   19498:	ldr	x8, [x8, x19, lsl #3]
   1949c:	ldr	x0, [x8, #8]
   194a0:	bl	a400 <message_list_remove_if_not@plt>
   194a4:	ldr	x8, [x21, #8]
   194a8:	add	x19, x19, #0x1
   194ac:	cmp	x19, x8
   194b0:	b.cc	19490 <catenate_msgdomain_list@@Base+0x74c>  // b.lo, b.ul, b.last
   194b4:	ldur	x8, [x29, #-32]
   194b8:	cbz	x8, 194fc <catenate_msgdomain_list@@Base+0x7b8>
   194bc:	ldp	x8, x9, [x29, #-40]
   194c0:	ldr	x8, [x8]
   194c4:	subs	x9, x9, #0x1
   194c8:	b.eq	194f4 <catenate_msgdomain_list@@Base+0x7b0>  // b.none
   194cc:	ldur	x11, [x29, #-40]
   194d0:	ldr	x10, [x8, #32]
   194d4:	add	x11, x11, #0x8
   194d8:	ldr	x12, [x11]
   194dc:	ldr	x12, [x12, #32]
   194e0:	cmp	x12, x10
   194e4:	b.ne	194fc <catenate_msgdomain_list@@Base+0x7b8>  // b.any
   194e8:	subs	x9, x9, #0x1
   194ec:	add	x11, x11, #0x8
   194f0:	b.ne	194d8 <catenate_msgdomain_list@@Base+0x794>  // b.any
   194f4:	ldr	x8, [x8, #32]
   194f8:	str	x8, [x21, #32]
   194fc:	stur	x21, [x29, #-24]
   19500:	cbz	x27, 1953c <catenate_msgdomain_list@@Base+0x7f8>
   19504:	mov	x0, x27
   19508:	bl	a1f0 <po_charset_canonicalize@plt>
   1950c:	mov	x24, x0
   19510:	cbnz	x0, 196dc <catenate_msgdomain_list@@Base+0x998>
   19514:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   19518:	add	x1, x1, #0xda3
   1951c:	mov	w2, #0x5                   	// #5
   19520:	bl	acd0 <dcgettext@plt>
   19524:	mov	x2, x0
   19528:	mov	w0, #0x1                   	// #1
   1952c:	mov	w1, wzr
   19530:	mov	x3, x27
   19534:	bl	a140 <error@plt>
   19538:	b	19760 <catenate_msgdomain_list@@Base+0xa1c>
   1953c:	ldur	x8, [x29, #-32]
   19540:	cbz	x8, 19cd0 <catenate_msgdomain_list@@Base+0xf8c>
   19544:	str	x28, [x29, #8]
   19548:	stur	x27, [x29, #-48]
   1954c:	stur	wzr, [x29, #-16]
   19550:	adrp	x27, 4c000 <plural_table_size@@Base+0x12c00>
   19554:	ldr	x27, [x27, #3824]
   19558:	mov	x22, xzr
   1955c:	mov	w19, wzr
   19560:	mov	x25, xzr
   19564:	mov	x24, xzr
   19568:	mov	w21, #0x1                   	// #1
   1956c:	ldur	x8, [x29, #-40]
   19570:	ldr	x26, [x8, x22, lsl #3]
   19574:	ldr	x8, [x26, #8]
   19578:	cbz	x8, 195f4 <catenate_msgdomain_list@@Base+0x8b0>
   1957c:	mov	x28, xzr
   19580:	ldr	x9, [x23, x22, lsl #3]
   19584:	ldr	x20, [x9, x28, lsl #3]
   19588:	cbz	x20, 195e8 <catenate_msgdomain_list@@Base+0x8a4>
   1958c:	ldr	x9, [x27]
   19590:	cmp	x20, x9
   19594:	b.eq	195e0 <catenate_msgdomain_list@@Base+0x89c>  // b.none
   19598:	cmp	x20, x24
   1959c:	ccmp	x25, #0x0, #0x0, ne  // ne = any
   195a0:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   195a4:	csel	x8, x20, x25, eq  // eq = none
   195a8:	cmp	x24, #0x0
   195ac:	mov	x0, x20
   195b0:	add	x1, x1, #0xd1b
   195b4:	csel	x24, x20, x24, eq  // eq = none
   195b8:	csel	x25, x25, x8, eq  // eq = none
   195bc:	bl	a8d0 <strcmp@plt>
   195c0:	cmp	w0, #0x0
   195c4:	cset	w8, eq  // eq = none
   195c8:	mov	x0, x20
   195cc:	orr	w19, w19, w8
   195d0:	bl	aee0 <po_charset_ascii_compatible@plt>
   195d4:	ldr	x8, [x26, #8]
   195d8:	and	w21, w21, w0
   195dc:	b	195e8 <catenate_msgdomain_list@@Base+0x8a4>
   195e0:	mov	w9, #0x1                   	// #1
   195e4:	stur	w9, [x29, #-16]
   195e8:	add	x28, x28, #0x1
   195ec:	cmp	x28, x8
   195f0:	b.cc	19580 <catenate_msgdomain_list@@Base+0x83c>  // b.lo, b.ul, b.last
   195f4:	ldur	x8, [x29, #-32]
   195f8:	add	x22, x22, #0x1
   195fc:	cmp	x22, x8
   19600:	b.ne	1956c <catenate_msgdomain_list@@Base+0x828>  // b.any
   19604:	ldur	w8, [x29, #-16]
   19608:	tbz	w8, #0, 19634 <catenate_msgdomain_list@@Base+0x8f0>
   1960c:	ldr	x10, [x27]
   19610:	cmp	x25, #0x0
   19614:	eor	w9, w21, #0x1
   19618:	cset	w11, eq  // eq = none
   1961c:	tst	w11, w9
   19620:	mov	w8, wzr
   19624:	csel	x25, x10, x25, ne  // ne = any
   19628:	b	19638 <catenate_msgdomain_list@@Base+0x8f4>
   1962c:	ldur	x27, [x29, #-48]
   19630:	b	19470 <catenate_msgdomain_list@@Base+0x72c>
   19634:	mov	w8, #0x1                   	// #1
   19638:	ldur	x27, [x29, #-48]
   1963c:	ldr	x28, [x29, #8]
   19640:	cbz	x25, 19688 <catenate_msgdomain_list@@Base+0x944>
   19644:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
   19648:	add	x1, x1, #0x935
   1964c:	mov	w2, #0x5                   	// #5
   19650:	mov	x0, xzr
   19654:	bl	acd0 <dcgettext@plt>
   19658:	bl	aa20 <xasprintf@plt>
   1965c:	mov	x26, x0
   19660:	tbz	w19, #0, 196a4 <catenate_msgdomain_list@@Base+0x960>
   19664:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   19668:	add	x1, x1, #0x3f
   1966c:	mov	w2, #0x5                   	// #5
   19670:	mov	x0, xzr
   19674:	bl	acd0 <dcgettext@plt>
   19678:	bl	aa20 <xasprintf@plt>
   1967c:	b	196c4 <catenate_msgdomain_list@@Base+0x980>
   19680:	ldur	x27, [x29, #-48]
   19684:	b	1947c <catenate_msgdomain_list@@Base+0x738>
   19688:	cmp	x24, #0x0
   1968c:	cset	w9, eq  // eq = none
   19690:	orr	w8, w9, w8
   19694:	tbnz	w8, #0, 19760 <catenate_msgdomain_list@@Base+0xa1c>
   19698:	eor	w8, w21, #0x1
   1969c:	tbz	w8, #0, 196dc <catenate_msgdomain_list@@Base+0x998>
   196a0:	b	19760 <catenate_msgdomain_list@@Base+0xa1c>
   196a4:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   196a8:	add	x1, x1, #0xa9
   196ac:	mov	w2, #0x5                   	// #5
   196b0:	mov	x0, xzr
   196b4:	bl	acd0 <dcgettext@plt>
   196b8:	mov	x1, x24
   196bc:	mov	x2, x25
   196c0:	bl	aa20 <xasprintf@plt>
   196c4:	mov	x1, x0
   196c8:	mov	x0, x26
   196cc:	bl	aaf0 <multiline_warning@plt>
   196d0:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   196d4:	ldr	x8, [x8, #3952]
   196d8:	ldr	x24, [x8]
   196dc:	cbz	x24, 19760 <catenate_msgdomain_list@@Base+0xa1c>
   196e0:	ldur	x8, [x29, #-32]
   196e4:	cbz	x8, 19760 <catenate_msgdomain_list@@Base+0xa1c>
   196e8:	mov	x20, xzr
   196ec:	ldur	x8, [x29, #-40]
   196f0:	ldr	x19, [x8, x20, lsl #3]
   196f4:	ldr	x8, [x19, #8]
   196f8:	cbz	x8, 19750 <catenate_msgdomain_list@@Base+0xa0c>
   196fc:	mov	x21, xzr
   19700:	ldr	x9, [x23, x20, lsl #3]
   19704:	cmp	x27, #0x0
   19708:	ldr	x1, [x9, x21, lsl #3]
   1970c:	cset	w9, eq  // eq = none
   19710:	cmp	x1, x24
   19714:	cset	w10, eq  // eq = none
   19718:	cbz	x1, 19744 <catenate_msgdomain_list@@Base+0xa00>
   1971c:	and	w9, w9, w10
   19720:	tbnz	w9, #0, 19744 <catenate_msgdomain_list@@Base+0xa00>
   19724:	ldr	x8, [x19]
   19728:	ldr	x3, [x28, x20, lsl #3]
   1972c:	mov	x2, x24
   19730:	ldr	x8, [x8, x21, lsl #3]
   19734:	ldr	x0, [x8, #8]
   19738:	bl	a330 <iconv_message_list@plt>
   1973c:	tbnz	w0, #0, 1a0f8 <catenate_msgdomain_list@@Base+0x13b4>
   19740:	ldr	x8, [x19, #8]
   19744:	add	x21, x21, #0x1
   19748:	cmp	x21, x8
   1974c:	b.cc	19700 <catenate_msgdomain_list@@Base+0x9bc>  // b.lo, b.ul, b.last
   19750:	ldur	x8, [x29, #-32]
   19754:	add	x20, x20, #0x1
   19758:	cmp	x20, x8
   1975c:	b.ne	196ec <catenate_msgdomain_list@@Base+0x9a8>  // b.any
   19760:	ldur	x8, [x29, #-32]
   19764:	cbz	x8, 19cd0 <catenate_msgdomain_list@@Base+0xf8c>
   19768:	adrp	x25, 4c000 <plural_table_size@@Base+0x12c00>
   1976c:	adrp	x21, 4c000 <plural_table_size@@Base+0x12c00>
   19770:	ldr	x25, [x25, #3848]
   19774:	ldr	x21, [x21, #3880]
   19778:	mov	x27, xzr
   1977c:	mov	w19, #0x80000001            	// #-2147483647
   19780:	ldur	x8, [x29, #-40]
   19784:	ldr	x10, [x8, x27, lsl #3]
   19788:	ldr	x8, [x10, #8]
   1978c:	cbz	x8, 19cc0 <catenate_msgdomain_list@@Base+0xf7c>
   19790:	mov	x11, xzr
   19794:	stur	x10, [x29, #-16]
   19798:	ldr	x9, [x10]
   1979c:	ldr	x9, [x9, x11, lsl #3]
   197a0:	ldr	x26, [x9, #8]
   197a4:	ldr	x9, [x26, #8]
   197a8:	cbz	x9, 19cb4 <catenate_msgdomain_list@@Base+0xf70>
   197ac:	mov	x24, xzr
   197b0:	str	x11, [x29, #8]
   197b4:	ldr	x8, [x26]
   197b8:	ldr	x22, [x8, x24, lsl #3]
   197bc:	ldrb	w8, [x25]
   197c0:	ldr	x23, [x22, #264]
   197c4:	cbnz	w8, 197d8 <catenate_msgdomain_list@@Base+0xa94>
   197c8:	ldr	w8, [x23, #260]
   197cc:	cmp	w8, #0x1
   197d0:	ccmn	w8, #0x1, #0x4, ne  // ne = any
   197d4:	b.ne	19914 <catenate_msgdomain_list@@Base+0xbd0>  // b.any
   197d8:	ldur	q0, [x22, #24]
   197dc:	stur	q0, [x23, #24]
   197e0:	ldur	q0, [x22, #40]
   197e4:	stur	q0, [x23, #40]
   197e8:	ldr	x8, [x22, #56]
   197ec:	cbz	x8, 19820 <catenate_msgdomain_list@@Base+0xadc>
   197f0:	ldr	x9, [x8, #8]
   197f4:	cbz	x9, 19820 <catenate_msgdomain_list@@Base+0xadc>
   197f8:	mov	x20, xzr
   197fc:	ldr	x8, [x8]
   19800:	mov	x0, x23
   19804:	ldr	x1, [x8, x20, lsl #3]
   19808:	bl	a0e0 <message_comment_append@plt>
   1980c:	ldr	x8, [x22, #56]
   19810:	add	x20, x20, #0x1
   19814:	ldr	x9, [x8, #8]
   19818:	cmp	x20, x9
   1981c:	b.cc	197fc <catenate_msgdomain_list@@Base+0xab8>  // b.lo, b.ul, b.last
   19820:	ldr	x8, [x22, #64]
   19824:	cbz	x8, 19858 <catenate_msgdomain_list@@Base+0xb14>
   19828:	ldr	x9, [x8, #8]
   1982c:	cbz	x9, 19858 <catenate_msgdomain_list@@Base+0xb14>
   19830:	mov	x20, xzr
   19834:	ldr	x8, [x8]
   19838:	mov	x0, x23
   1983c:	ldr	x1, [x8, x20, lsl #3]
   19840:	bl	a8e0 <message_comment_dot_append@plt>
   19844:	ldr	x8, [x22, #64]
   19848:	add	x20, x20, #0x1
   1984c:	ldr	x9, [x8, #8]
   19850:	cmp	x20, x9
   19854:	b.cc	19834 <catenate_msgdomain_list@@Base+0xaf0>  // b.lo, b.ul, b.last
   19858:	ldr	x8, [x22, #72]
   1985c:	cbz	x8, 19890 <catenate_msgdomain_list@@Base+0xb4c>
   19860:	mov	x20, xzr
   19864:	mov	x28, xzr
   19868:	ldr	x8, [x22, #80]
   1986c:	mov	x0, x23
   19870:	add	x8, x8, x20
   19874:	ldp	x1, x2, [x8]
   19878:	bl	a9d0 <message_comment_filepos@plt>
   1987c:	ldr	x8, [x22, #72]
   19880:	add	x28, x28, #0x1
   19884:	add	x20, x20, #0x10
   19888:	cmp	x28, x8
   1988c:	b.cc	19868 <catenate_msgdomain_list@@Base+0xb24>  // b.lo, b.ul, b.last
   19890:	ldrb	w10, [x22, #88]
   19894:	mov	x8, xzr
   19898:	add	x9, x22, #0x5c
   1989c:	strb	w10, [x23, #88]
   198a0:	add	x10, x23, #0x5c
   198a4:	ldr	w11, [x9, x8]
   198a8:	str	w11, [x10, x8]
   198ac:	add	x8, x8, #0x4
   198b0:	cmp	x8, #0x70
   198b4:	b.ne	198a4 <catenate_msgdomain_list@@Base+0xb60>  // b.any
   198b8:	ldur	x9, [x22, #204]
   198bc:	mov	x8, xzr
   198c0:	stur	x9, [x23, #204]
   198c4:	ldr	w10, [x22, #212]
   198c8:	add	x9, x22, #0xd8
   198cc:	str	w10, [x23, #212]
   198d0:	add	x10, x23, #0xd8
   198d4:	ldr	w11, [x9, x8]
   198d8:	str	w11, [x10, x8]
   198dc:	add	x8, x8, #0x4
   198e0:	cmp	x8, #0x10
   198e4:	b.ne	198d4 <catenate_msgdomain_list@@Base+0xb90>  // b.any
   198e8:	ldur	q0, [x22, #232]
   198ec:	stur	q0, [x23, #232]
   198f0:	ldr	x8, [x22, #248]
   198f4:	str	x8, [x23, #248]
   198f8:	ldrb	w8, [x22, #256]
   198fc:	strb	w8, [x23, #256]
   19900:	ldr	x8, [x26, #8]
   19904:	add	x24, x24, #0x1
   19908:	cmp	x24, x8
   1990c:	b.cc	197b4 <catenate_msgdomain_list@@Base+0xa70>  // b.lo, b.ul, b.last
   19910:	b	19ca8 <catenate_msgdomain_list@@Base+0xf64>
   19914:	ldrb	w8, [x21]
   19918:	cbz	w8, 19a88 <catenate_msgdomain_list@@Base+0xd44>
   1991c:	ldr	x8, [x23, #24]
   19920:	cbnz	x8, 1994c <catenate_msgdomain_list@@Base+0xc08>
   19924:	ldur	q0, [x22, #24]
   19928:	stur	q0, [x23, #24]
   1992c:	ldur	q0, [x22, #40]
   19930:	stur	q0, [x23, #40]
   19934:	ldrb	w8, [x22, #88]
   19938:	strb	w8, [x23, #88]
   1993c:	ldur	q0, [x22, #232]
   19940:	stur	q0, [x23, #232]
   19944:	ldr	x8, [x22, #248]
   19948:	str	x8, [x23, #248]
   1994c:	ldr	x8, [x22, #56]
   19950:	cbz	x8, 1998c <catenate_msgdomain_list@@Base+0xc48>
   19954:	ldr	x9, [x23, #56]
   19958:	cbnz	x9, 1998c <catenate_msgdomain_list@@Base+0xc48>
   1995c:	ldr	x9, [x8, #8]
   19960:	cbz	x9, 1998c <catenate_msgdomain_list@@Base+0xc48>
   19964:	mov	x20, xzr
   19968:	ldr	x8, [x8]
   1996c:	mov	x0, x23
   19970:	ldr	x1, [x8, x20, lsl #3]
   19974:	bl	a0e0 <message_comment_append@plt>
   19978:	ldr	x8, [x22, #56]
   1997c:	add	x20, x20, #0x1
   19980:	ldr	x9, [x8, #8]
   19984:	cmp	x20, x9
   19988:	b.cc	19968 <catenate_msgdomain_list@@Base+0xc24>  // b.lo, b.ul, b.last
   1998c:	ldr	x8, [x22, #64]
   19990:	cbz	x8, 199cc <catenate_msgdomain_list@@Base+0xc88>
   19994:	ldr	x9, [x23, #64]
   19998:	cbnz	x9, 199cc <catenate_msgdomain_list@@Base+0xc88>
   1999c:	ldr	x9, [x8, #8]
   199a0:	cbz	x9, 199cc <catenate_msgdomain_list@@Base+0xc88>
   199a4:	mov	x20, xzr
   199a8:	ldr	x8, [x8]
   199ac:	mov	x0, x23
   199b0:	ldr	x1, [x8, x20, lsl #3]
   199b4:	bl	a8e0 <message_comment_dot_append@plt>
   199b8:	ldr	x8, [x22, #64]
   199bc:	add	x20, x20, #0x1
   199c0:	ldr	x9, [x8, #8]
   199c4:	cmp	x20, x9
   199c8:	b.cc	199a8 <catenate_msgdomain_list@@Base+0xc64>  // b.lo, b.ul, b.last
   199cc:	ldr	x8, [x22, #72]
   199d0:	cbz	x8, 19a04 <catenate_msgdomain_list@@Base+0xcc0>
   199d4:	mov	x20, xzr
   199d8:	mov	x28, xzr
   199dc:	ldr	x8, [x22, #80]
   199e0:	mov	x0, x23
   199e4:	add	x8, x8, x20
   199e8:	ldp	x1, x2, [x8]
   199ec:	bl	a9d0 <message_comment_filepos@plt>
   199f0:	ldr	x8, [x22, #72]
   199f4:	add	x28, x28, #0x1
   199f8:	add	x20, x20, #0x10
   199fc:	cmp	x28, x8
   19a00:	b.cc	199dc <catenate_msgdomain_list@@Base+0xc98>  // b.lo, b.ul, b.last
   19a04:	mov	x8, xzr
   19a08:	add	x9, x23, #0x5c
   19a0c:	add	x10, x22, #0x5c
   19a10:	ldr	w11, [x9, x8]
   19a14:	cbnz	w11, 19a20 <catenate_msgdomain_list@@Base+0xcdc>
   19a18:	ldr	w11, [x10, x8]
   19a1c:	str	w11, [x9, x8]
   19a20:	add	x8, x8, #0x4
   19a24:	cmp	x8, #0x70
   19a28:	b.ne	19a10 <catenate_msgdomain_list@@Base+0xccc>  // b.any
   19a2c:	ldr	w8, [x23, #204]
   19a30:	cmp	w8, w19
   19a34:	b.ne	19a50 <catenate_msgdomain_list@@Base+0xd0c>  // b.any
   19a38:	ldr	w9, [x23, #208]
   19a3c:	cmp	w9, w19
   19a40:	b.ne	19a50 <catenate_msgdomain_list@@Base+0xd0c>  // b.any
   19a44:	ldur	x8, [x22, #204]
   19a48:	stur	x8, [x23, #204]
   19a4c:	b	19bcc <catenate_msgdomain_list@@Base+0xe88>
   19a50:	ldr	w10, [x22, #204]
   19a54:	tbnz	w10, #31, 19bc4 <catenate_msgdomain_list@@Base+0xe80>
   19a58:	ldr	w9, [x22, #208]
   19a5c:	orr	w11, w9, w8
   19a60:	tbnz	w11, #31, 19bc4 <catenate_msgdomain_list@@Base+0xe80>
   19a64:	ldr	w11, [x23, #208]
   19a68:	tbnz	w11, #31, 19bc4 <catenate_msgdomain_list@@Base+0xe80>
   19a6c:	cmp	w10, w8
   19a70:	b.ge	19a78 <catenate_msgdomain_list@@Base+0xd34>  // b.tcont
   19a74:	str	w10, [x23, #204]
   19a78:	cmp	w9, w11
   19a7c:	b.le	19bcc <catenate_msgdomain_list@@Base+0xe88>
   19a80:	str	w9, [x23, #208]
   19a84:	b	19bcc <catenate_msgdomain_list@@Base+0xe88>
   19a88:	ldur	x8, [x29, #-8]
   19a8c:	ldr	x9, [x29, #8]
   19a90:	adrp	x0, 38000 <get_search_path@@Base+0x1b4c>
   19a94:	add	x0, x0, #0x245
   19a98:	ldr	x8, [x8, x27, lsl #3]
   19a9c:	mov	x19, x25
   19aa0:	mov	x25, x21
   19aa4:	mov	x21, x27
   19aa8:	ldr	x1, [x8, x9, lsl #3]
   19aac:	bl	aa20 <xasprintf@plt>
   19ab0:	ldrsw	x8, [x23, #272]
   19ab4:	mov	x20, x0
   19ab8:	cbnz	w8, 19ac4 <catenate_msgdomain_list@@Base+0xd80>
   19abc:	ldur	q0, [x22, #40]
   19ac0:	stur	q0, [x23, #40]
   19ac4:	ldr	x0, [x23, #280]
   19ac8:	add	x27, x8, x8, lsl #1
   19acc:	add	w28, w8, #0x1
   19ad0:	lsl	x8, x27, #4
   19ad4:	add	x1, x8, #0x30
   19ad8:	bl	a460 <xrealloc@plt>
   19adc:	str	x0, [x23, #280]
   19ae0:	ldr	x8, [x22, #24]
   19ae4:	add	x9, x0, x27, lsl #4
   19ae8:	str	x8, [x9]
   19aec:	ldr	x10, [x22, #32]
   19af0:	add	x8, x8, x10
   19af4:	stp	x10, x8, [x9, #8]
   19af8:	ldur	q0, [x22, #56]
   19afc:	str	x20, [x9, #40]
   19b00:	stur	q0, [x9, #24]
   19b04:	str	w28, [x23, #272]
   19b08:	ldr	x8, [x22, #72]
   19b0c:	cbz	x8, 19b40 <catenate_msgdomain_list@@Base+0xdfc>
   19b10:	mov	x20, xzr
   19b14:	mov	x28, xzr
   19b18:	ldr	x8, [x22, #80]
   19b1c:	mov	x0, x23
   19b20:	add	x8, x8, x20
   19b24:	ldp	x1, x2, [x8]
   19b28:	bl	a9d0 <message_comment_filepos@plt>
   19b2c:	ldr	x8, [x22, #72]
   19b30:	add	x28, x28, #0x1
   19b34:	add	x20, x20, #0x10
   19b38:	cmp	x28, x8
   19b3c:	b.cc	19b18 <catenate_msgdomain_list@@Base+0xdd4>  // b.lo, b.ul, b.last
   19b40:	ldrb	w8, [x22, #88]
   19b44:	cbnz	w8, 19b4c <catenate_msgdomain_list@@Base+0xe08>
   19b48:	strb	wzr, [x23, #88]
   19b4c:	mov	x8, xzr
   19b50:	add	x9, x22, #0x5c
   19b54:	add	x10, x23, #0x5c
   19b58:	mov	x27, x21
   19b5c:	mov	x21, x25
   19b60:	mov	x25, x19
   19b64:	mov	w12, #0x2                   	// #2
   19b68:	mov	w19, #0x80000001            	// #-2147483647
   19b6c:	ldr	w11, [x9, x8]
   19b70:	cmp	w11, #0x2
   19b74:	b.eq	19b88 <catenate_msgdomain_list@@Base+0xe44>  // b.none
   19b78:	cmp	w11, #0x1
   19b7c:	b.ne	19b94 <catenate_msgdomain_list@@Base+0xe50>  // b.any
   19b80:	str	w11, [x10, x8]
   19b84:	b	19b94 <catenate_msgdomain_list@@Base+0xe50>
   19b88:	ldr	w11, [x10, x8]
   19b8c:	cbnz	w11, 19b94 <catenate_msgdomain_list@@Base+0xe50>
   19b90:	str	w12, [x10, x8]
   19b94:	add	x8, x8, #0x4
   19b98:	cmp	x8, #0x70
   19b9c:	b.ne	19b6c <catenate_msgdomain_list@@Base+0xe28>  // b.any
   19ba0:	ldr	w8, [x23, #204]
   19ba4:	cmp	w8, w19
   19ba8:	b.ne	19c0c <catenate_msgdomain_list@@Base+0xec8>  // b.any
   19bac:	ldr	w9, [x23, #208]
   19bb0:	cmp	w9, w19
   19bb4:	b.ne	19c0c <catenate_msgdomain_list@@Base+0xec8>  // b.any
   19bb8:	ldur	x8, [x22, #204]
   19bbc:	stur	x8, [x23, #204]
   19bc0:	b	19c4c <catenate_msgdomain_list@@Base+0xf08>
   19bc4:	movi	v0.2d, #0xffffffffffffffff
   19bc8:	stur	d0, [x23, #204]
   19bcc:	ldr	w8, [x23, #212]
   19bd0:	cbnz	w8, 19bdc <catenate_msgdomain_list@@Base+0xe98>
   19bd4:	ldr	w8, [x22, #212]
   19bd8:	str	w8, [x23, #212]
   19bdc:	mov	x8, xzr
   19be0:	add	x9, x23, #0xd8
   19be4:	add	x10, x22, #0xd8
   19be8:	ldr	w11, [x9, x8]
   19bec:	cbnz	w11, 19bf8 <catenate_msgdomain_list@@Base+0xeb4>
   19bf0:	ldr	w11, [x10, x8]
   19bf4:	str	w11, [x9, x8]
   19bf8:	add	x8, x8, #0x4
   19bfc:	cmp	x8, #0x10
   19c00:	b.ne	19be8 <catenate_msgdomain_list@@Base+0xea4>  // b.any
   19c04:	mov	w8, wzr
   19c08:	b	198fc <catenate_msgdomain_list@@Base+0xbb8>
   19c0c:	ldr	w10, [x22, #204]
   19c10:	tbnz	w10, #31, 19c44 <catenate_msgdomain_list@@Base+0xf00>
   19c14:	ldr	w9, [x22, #208]
   19c18:	orr	w11, w9, w8
   19c1c:	tbnz	w11, #31, 19c44 <catenate_msgdomain_list@@Base+0xf00>
   19c20:	ldr	w11, [x23, #208]
   19c24:	tbnz	w11, #31, 19c44 <catenate_msgdomain_list@@Base+0xf00>
   19c28:	cmp	w10, w8
   19c2c:	b.ge	19c34 <catenate_msgdomain_list@@Base+0xef0>  // b.tcont
   19c30:	str	w10, [x23, #204]
   19c34:	cmp	w9, w11
   19c38:	b.le	19c4c <catenate_msgdomain_list@@Base+0xf08>
   19c3c:	str	w9, [x23, #208]
   19c40:	b	19c4c <catenate_msgdomain_list@@Base+0xf08>
   19c44:	movi	v0.2d, #0xffffffffffffffff
   19c48:	stur	d0, [x23, #204]
   19c4c:	ldr	w8, [x22, #212]
   19c50:	cmp	w8, #0x2
   19c54:	b.ne	19c5c <catenate_msgdomain_list@@Base+0xf18>  // b.any
   19c58:	str	w12, [x23, #212]
   19c5c:	mov	x8, xzr
   19c60:	add	x9, x22, #0xd8
   19c64:	add	x10, x23, #0xd8
   19c68:	ldr	w11, [x9, x8]
   19c6c:	cmp	w11, #0x2
   19c70:	b.eq	19c84 <catenate_msgdomain_list@@Base+0xf40>  // b.none
   19c74:	cmp	w11, #0x1
   19c78:	b.ne	19c90 <catenate_msgdomain_list@@Base+0xf4c>  // b.any
   19c7c:	str	w11, [x10, x8]
   19c80:	b	19c90 <catenate_msgdomain_list@@Base+0xf4c>
   19c84:	ldr	w11, [x10, x8]
   19c88:	cbnz	w11, 19c90 <catenate_msgdomain_list@@Base+0xf4c>
   19c8c:	str	w12, [x10, x8]
   19c90:	add	x8, x8, #0x4
   19c94:	cmp	x8, #0x10
   19c98:	b.ne	19c68 <catenate_msgdomain_list@@Base+0xf24>  // b.any
   19c9c:	ldrb	w8, [x22, #256]
   19ca0:	cbnz	w8, 19900 <catenate_msgdomain_list@@Base+0xbbc>
   19ca4:	b	198fc <catenate_msgdomain_list@@Base+0xbb8>
   19ca8:	ldur	x10, [x29, #-16]
   19cac:	ldr	x11, [x29, #8]
   19cb0:	ldr	x8, [x10, #8]
   19cb4:	add	x11, x11, #0x1
   19cb8:	cmp	x11, x8
   19cbc:	b.cc	19798 <catenate_msgdomain_list@@Base+0xa54>  // b.lo, b.ul, b.last
   19cc0:	ldur	x8, [x29, #-32]
   19cc4:	add	x27, x27, #0x1
   19cc8:	cmp	x27, x8
   19ccc:	b.ne	19780 <catenate_msgdomain_list@@Base+0xa3c>  // b.any
   19cd0:	ldur	x0, [x29, #-24]
   19cd4:	ldr	x8, [x0, #8]
   19cd8:	cbz	x8, 1a0c4 <catenate_msgdomain_list@@Base+0x1380>
   19cdc:	mov	x10, xzr
   19ce0:	mov	w25, #0x30                  	// #48
   19ce4:	mov	w27, #0xa                   	// #10
   19ce8:	ldr	x9, [x0]
   19cec:	ldr	x9, [x9, x10, lsl #3]
   19cf0:	ldr	x11, [x9, #8]
   19cf4:	ldr	x9, [x11, #8]
   19cf8:	cbz	x9, 1a0b8 <catenate_msgdomain_list@@Base+0x1374>
   19cfc:	mov	x9, xzr
   19d00:	stp	x10, x11, [x29, #-16]
   19d04:	ldr	x8, [x11]
   19d08:	str	x9, [x29, #8]
   19d0c:	ldr	x20, [x8, x9, lsl #3]
   19d10:	ldr	w23, [x20, #272]
   19d14:	cmp	w23, #0x1
   19d18:	b.lt	1a084 <catenate_msgdomain_list@@Base+0x1340>  // b.tstop
   19d1c:	ldr	x19, [x20, #280]
   19d20:	mov	x24, xzr
   19d24:	sub	x26, x23, #0x1
   19d28:	ldp	x22, x21, [x19]
   19d2c:	mov	x28, x19
   19d30:	ldr	x0, [x28]
   19d34:	mov	x1, x22
   19d38:	mov	x2, x21
   19d3c:	bl	a650 <bcmp@plt>
   19d40:	cbnz	w0, 19d60 <catenate_msgdomain_list@@Base+0x101c>
   19d44:	cmp	x26, x24
   19d48:	b.eq	19d68 <catenate_msgdomain_list@@Base+0x1024>  // b.none
   19d4c:	ldr	x8, [x28, #56]
   19d50:	add	x24, x24, #0x1
   19d54:	add	x28, x28, #0x30
   19d58:	cmp	x8, x21
   19d5c:	b.eq	19d30 <catenate_msgdomain_list@@Base+0xfec>  // b.none
   19d60:	cmp	x24, x23
   19d64:	b.ne	19d78 <catenate_msgdomain_list@@Base+0x1034>  // b.any
   19d68:	ldr	q0, [x19]
   19d6c:	stur	q0, [x20, #24]
   19d70:	cbnz	w23, 19f00 <catenate_msgdomain_list@@Base+0x11bc>
   19d74:	b	19f44 <catenate_msgdomain_list@@Base+0x1200>
   19d78:	mov	x21, xzr
   19d7c:	cbz	w23, 19dd4 <catenate_msgdomain_list@@Base+0x1090>
   19d80:	mov	x24, xzr
   19d84:	madd	x8, x24, x25, x19
   19d88:	ldr	x26, [x8, #16]
   19d8c:	ldp	x22, x8, [x8]
   19d90:	cmp	x22, x26
   19d94:	add	x21, x8, x21
   19d98:	b.cs	19dc8 <catenate_msgdomain_list@@Base+0x1084>  // b.hs, b.nlast
   19d9c:	madd	x8, x24, x25, x19
   19da0:	ldr	x0, [x8, #40]
   19da4:	bl	a0d0 <strlen@plt>
   19da8:	add	x28, x0, #0x2
   19dac:	mov	x0, x22
   19db0:	bl	a0d0 <strlen@plt>
   19db4:	add	x8, x0, x22
   19db8:	add	x22, x8, #0x1
   19dbc:	cmp	x22, x26
   19dc0:	add	x21, x21, x28
   19dc4:	b.cc	19dac <catenate_msgdomain_list@@Base+0x1068>  // b.lo, b.ul, b.last
   19dc8:	add	x24, x24, #0x1
   19dcc:	cmp	x24, x23
   19dd0:	b.cc	19d84 <catenate_msgdomain_list@@Base+0x1040>  // b.lo, b.ul, b.last
   19dd4:	mov	x0, x21
   19dd8:	bl	a590 <xmalloc@plt>
   19ddc:	mov	x21, x0
   19de0:	mov	x22, x0
   19de4:	ldr	w23, [x20, #272]
   19de8:	mov	x9, xzr
   19dec:	sxtw	x8, w23
   19df0:	cbz	w23, 19e1c <catenate_msgdomain_list@@Base+0x10d8>
   19df4:	ldr	x10, [x20, #280]
   19df8:	add	x10, x10, #0x10
   19dfc:	ldur	x11, [x10, #-16]
   19e00:	ldr	x12, [x10]
   19e04:	cmp	x11, x12
   19e08:	b.cc	19e1c <catenate_msgdomain_list@@Base+0x10d8>  // b.lo, b.ul, b.last
   19e0c:	add	x9, x9, #0x1
   19e10:	cmp	x9, x8
   19e14:	add	x10, x10, #0x30
   19e18:	b.cc	19dfc <catenate_msgdomain_list@@Base+0x10b8>  // b.lo, b.ul, b.last
   19e1c:	cmp	x9, x8
   19e20:	b.eq	19eec <catenate_msgdomain_list@@Base+0x11a8>  // b.none
   19e24:	cbz	w23, 19ee4 <catenate_msgdomain_list@@Base+0x11a0>
   19e28:	ldr	x8, [x20, #280]
   19e2c:	mov	x28, xzr
   19e30:	mov	x26, xzr
   19e34:	add	x9, x8, x28
   19e38:	ldr	x10, [x9]
   19e3c:	ldr	x9, [x9, #16]
   19e40:	cmp	x10, x9
   19e44:	b.cs	19ed4 <catenate_msgdomain_list@@Base+0x1190>  // b.hs, b.nlast
   19e48:	cmp	x22, x21
   19e4c:	b.ls	19e68 <catenate_msgdomain_list@@Base+0x1124>  // b.plast
   19e50:	ldurb	w9, [x22, #-1]
   19e54:	cbz	w9, 19e68 <catenate_msgdomain_list@@Base+0x1124>
   19e58:	cmp	w9, #0xa
   19e5c:	b.eq	19e68 <catenate_msgdomain_list@@Base+0x1124>  // b.none
   19e60:	strb	w27, [x22], #1
   19e64:	ldr	x8, [x20, #280]
   19e68:	add	x8, x8, x28
   19e6c:	ldr	x23, [x8, #40]
   19e70:	mov	x0, x23
   19e74:	bl	a0d0 <strlen@plt>
   19e78:	mov	x24, x0
   19e7c:	mov	x0, x22
   19e80:	mov	x1, x23
   19e84:	mov	x2, x24
   19e88:	bl	a040 <memcpy@plt>
   19e8c:	add	x22, x22, x24
   19e90:	strb	w27, [x22], #1
   19e94:	ldr	x8, [x20, #280]
   19e98:	ldr	x23, [x8, x28]
   19e9c:	mov	x0, x23
   19ea0:	bl	a0d0 <strlen@plt>
   19ea4:	mov	x24, x0
   19ea8:	mov	x0, x22
   19eac:	mov	x1, x23
   19eb0:	mov	x2, x24
   19eb4:	bl	a040 <memcpy@plt>
   19eb8:	ldr	x8, [x20, #280]
   19ebc:	add	x22, x22, x24
   19ec0:	ldr	x9, [x8, x28]
   19ec4:	add	x9, x24, x9
   19ec8:	add	x9, x9, #0x1
   19ecc:	str	x9, [x8, x28]
   19ed0:	ldr	w23, [x20, #272]
   19ed4:	add	x26, x26, #0x1
   19ed8:	cmp	x26, w23, sxtw
   19edc:	add	x28, x28, #0x30
   19ee0:	b.cc	19e34 <catenate_msgdomain_list@@Base+0x10f0>  // b.lo, b.ul, b.last
   19ee4:	strb	wzr, [x22], #1
   19ee8:	b	19de4 <catenate_msgdomain_list@@Base+0x10a0>
   19eec:	sub	x8, x22, x21
   19ef0:	stp	x21, x8, [x20, #24]
   19ef4:	mov	w8, #0x1                   	// #1
   19ef8:	strb	w8, [x20, #88]
   19efc:	cbz	w23, 19f44 <catenate_msgdomain_list@@Base+0x1200>
   19f00:	ldr	x8, [x20, #280]
   19f04:	ldr	x0, [x8, #24]
   19f08:	cbz	x0, 19f44 <catenate_msgdomain_list@@Base+0x1200>
   19f0c:	mov	x21, xzr
   19f10:	mov	w22, #0x48                  	// #72
   19f14:	ldr	x1, [x19, #24]
   19f18:	bl	ac30 <string_list_equal@plt>
   19f1c:	tbz	w0, #0, 1a0a0 <catenate_msgdomain_list@@Base+0x135c>
   19f20:	ldrsw	x23, [x20, #272]
   19f24:	add	x21, x21, #0x1
   19f28:	cmp	x21, x23
   19f2c:	b.cs	19f48 <catenate_msgdomain_list@@Base+0x1204>  // b.hs, b.nlast
   19f30:	ldr	x8, [x20, #280]
   19f34:	ldr	x0, [x8, x22]
   19f38:	add	x22, x22, #0x30
   19f3c:	cbnz	x0, 19f14 <catenate_msgdomain_list@@Base+0x11d0>
   19f40:	b	19f48 <catenate_msgdomain_list@@Base+0x1204>
   19f44:	mov	x21, xzr
   19f48:	cmp	x21, w23, sxtw
   19f4c:	b.ne	19f5c <catenate_msgdomain_list@@Base+0x1218>  // b.any
   19f50:	ldr	x8, [x19, #24]
   19f54:	str	x8, [x20, #56]
   19f58:	b	19fc0 <catenate_msgdomain_list@@Base+0x127c>
   19f5c:	cbz	w23, 1a008 <catenate_msgdomain_list@@Base+0x12c4>
   19f60:	mov	x21, xzr
   19f64:	ldr	x8, [x20, #280]
   19f68:	madd	x9, x21, x25, x8
   19f6c:	ldr	x22, [x9, #24]
   19f70:	cbz	x22, 19fb0 <catenate_msgdomain_list@@Base+0x126c>
   19f74:	madd	x8, x21, x25, x8
   19f78:	ldr	x1, [x8, #40]
   19f7c:	mov	x0, x20
   19f80:	bl	a0e0 <message_comment_append@plt>
   19f84:	ldr	x8, [x22, #8]
   19f88:	cbz	x8, 19fb0 <catenate_msgdomain_list@@Base+0x126c>
   19f8c:	mov	x23, xzr
   19f90:	ldr	x8, [x22]
   19f94:	mov	x0, x20
   19f98:	ldr	x1, [x8, x23, lsl #3]
   19f9c:	bl	a0e0 <message_comment_append@plt>
   19fa0:	ldr	x8, [x22, #8]
   19fa4:	add	x23, x23, #0x1
   19fa8:	cmp	x23, x8
   19fac:	b.cc	19f90 <catenate_msgdomain_list@@Base+0x124c>  // b.lo, b.ul, b.last
   19fb0:	ldrsw	x23, [x20, #272]
   19fb4:	add	x21, x21, #0x1
   19fb8:	cmp	x21, x23
   19fbc:	b.cc	19f64 <catenate_msgdomain_list@@Base+0x1220>  // b.lo, b.ul, b.last
   19fc0:	cbz	w23, 1a008 <catenate_msgdomain_list@@Base+0x12c4>
   19fc4:	ldr	x8, [x20, #280]
   19fc8:	ldr	x0, [x8, #32]
   19fcc:	cbz	x0, 1a008 <catenate_msgdomain_list@@Base+0x12c4>
   19fd0:	mov	x21, xzr
   19fd4:	mov	w22, #0x50                  	// #80
   19fd8:	ldr	x1, [x19, #32]
   19fdc:	bl	ac30 <string_list_equal@plt>
   19fe0:	tbz	w0, #0, 1a0a8 <catenate_msgdomain_list@@Base+0x1364>
   19fe4:	ldrsw	x23, [x20, #272]
   19fe8:	add	x21, x21, #0x1
   19fec:	cmp	x21, x23
   19ff0:	b.cs	1a00c <catenate_msgdomain_list@@Base+0x12c8>  // b.hs, b.nlast
   19ff4:	ldr	x8, [x20, #280]
   19ff8:	ldr	x0, [x8, x22]
   19ffc:	add	x22, x22, #0x30
   1a000:	cbnz	x0, 19fd8 <catenate_msgdomain_list@@Base+0x1294>
   1a004:	b	1a00c <catenate_msgdomain_list@@Base+0x12c8>
   1a008:	mov	x21, xzr
   1a00c:	cmp	x21, w23, sxtw
   1a010:	b.ne	1a020 <catenate_msgdomain_list@@Base+0x12dc>  // b.any
   1a014:	ldr	x8, [x19, #32]
   1a018:	str	x8, [x20, #64]
   1a01c:	b	1a084 <catenate_msgdomain_list@@Base+0x1340>
   1a020:	cbz	w23, 1a084 <catenate_msgdomain_list@@Base+0x1340>
   1a024:	mov	x19, xzr
   1a028:	ldr	x8, [x20, #280]
   1a02c:	madd	x9, x19, x25, x8
   1a030:	ldr	x21, [x9, #32]
   1a034:	cbz	x21, 1a074 <catenate_msgdomain_list@@Base+0x1330>
   1a038:	madd	x8, x19, x25, x8
   1a03c:	ldr	x1, [x8, #40]
   1a040:	mov	x0, x20
   1a044:	bl	a8e0 <message_comment_dot_append@plt>
   1a048:	ldr	x8, [x21, #8]
   1a04c:	cbz	x8, 1a074 <catenate_msgdomain_list@@Base+0x1330>
   1a050:	mov	x22, xzr
   1a054:	ldr	x8, [x21]
   1a058:	mov	x0, x20
   1a05c:	ldr	x1, [x8, x22, lsl #3]
   1a060:	bl	a8e0 <message_comment_dot_append@plt>
   1a064:	ldr	x8, [x21, #8]
   1a068:	add	x22, x22, #0x1
   1a06c:	cmp	x22, x8
   1a070:	b.cc	1a054 <catenate_msgdomain_list@@Base+0x1310>  // b.lo, b.ul, b.last
   1a074:	ldrsw	x8, [x20, #272]
   1a078:	add	x19, x19, #0x1
   1a07c:	cmp	x19, x8
   1a080:	b.cc	1a028 <catenate_msgdomain_list@@Base+0x12e4>  // b.lo, b.ul, b.last
   1a084:	ldur	x11, [x29, #-8]
   1a088:	ldr	x9, [x29, #8]
   1a08c:	ldr	x8, [x11, #8]
   1a090:	add	x9, x9, #0x1
   1a094:	cmp	x9, x8
   1a098:	b.cc	19d04 <catenate_msgdomain_list@@Base+0xfc0>  // b.lo, b.ul, b.last
   1a09c:	b	1a0b0 <catenate_msgdomain_list@@Base+0x136c>
   1a0a0:	ldr	w23, [x20, #272]
   1a0a4:	b	19f48 <catenate_msgdomain_list@@Base+0x1204>
   1a0a8:	ldr	w23, [x20, #272]
   1a0ac:	b	1a00c <catenate_msgdomain_list@@Base+0x12c8>
   1a0b0:	ldp	x0, x10, [x29, #-24]
   1a0b4:	ldr	x8, [x0, #8]
   1a0b8:	add	x10, x10, #0x1
   1a0bc:	cmp	x10, x8
   1a0c0:	b.cc	19ce8 <catenate_msgdomain_list@@Base+0xfa4>  // b.lo, b.ul, b.last
   1a0c4:	mov	sp, x29
   1a0c8:	ldp	x20, x19, [sp, #96]
   1a0cc:	ldp	x22, x21, [sp, #80]
   1a0d0:	ldp	x24, x23, [sp, #64]
   1a0d4:	ldp	x26, x25, [sp, #48]
   1a0d8:	ldp	x28, x27, [sp, #32]
   1a0dc:	ldp	x29, x30, [sp, #16]
   1a0e0:	ldr	d8, [sp], #112
   1a0e4:	ret
   1a0e8:	ldur	x21, [x29, #-24]
   1a0ec:	ldur	x27, [x29, #-48]
   1a0f0:	ldr	x28, [x29, #8]
   1a0f4:	b	1947c <catenate_msgdomain_list@@Base+0x738>
   1a0f8:	adrp	x0, 37000 <get_search_path@@Base+0xb4c>
   1a0fc:	add	x0, x0, #0x1a2
   1a100:	bl	a5a0 <xstrdup@plt>
   1a104:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1a108:	mov	x19, x0
   1a10c:	add	x1, x1, #0x158
   1a110:	mov	w2, #0x5                   	// #5
   1a114:	mov	x0, xzr
   1a118:	bl	acd0 <dcgettext@plt>
   1a11c:	ldr	x8, [x23, x20, lsl #3]
   1a120:	ldr	x1, [x28, x20, lsl #3]
   1a124:	mov	x3, x24
   1a128:	ldr	x2, [x8, x21, lsl #3]
   1a12c:	bl	aa20 <xasprintf@plt>
   1a130:	mov	x1, x0
   1a134:	mov	x0, x19
   1a138:	bl	a950 <multiline_error@plt>
   1a13c:	mov	w0, #0x1                   	// #1
   1a140:	bl	a110 <exit@plt>
   1a144:	bl	a780 <xalloc_die@plt>
   1a148:	stp	x29, x30, [sp, #-32]!
   1a14c:	str	x19, [sp, #16]
   1a150:	ldr	x19, [x0, #264]
   1a154:	mov	x29, sp
   1a158:	ldrb	w8, [x19, #256]
   1a15c:	cbz	w8, 1a174 <catenate_msgdomain_list@@Base+0x1430>
   1a160:	bl	1a184 <catenate_msgdomain_list@@Base+0x1440>
   1a164:	tbz	w0, #0, 1a174 <catenate_msgdomain_list@@Base+0x1430>
   1a168:	mov	w0, #0x1                   	// #1
   1a16c:	strb	wzr, [x19, #256]
   1a170:	b	1a178 <catenate_msgdomain_list@@Base+0x1434>
   1a174:	mov	w0, wzr
   1a178:	ldr	x19, [sp, #16]
   1a17c:	ldp	x29, x30, [sp], #32
   1a180:	ret
   1a184:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1a188:	ldr	x8, [x8, #3880]
   1a18c:	ldrb	w8, [x8]
   1a190:	cbz	w8, 1a19c <catenate_msgdomain_list@@Base+0x1458>
   1a194:	ldr	x0, [x0, #264]
   1a198:	b	1a1d8 <catenate_msgdomain_list@@Base+0x1494>
   1a19c:	ldr	x8, [x0]
   1a1a0:	cbnz	x8, 1a1b0 <catenate_msgdomain_list@@Base+0x146c>
   1a1a4:	ldr	x8, [x0, #8]
   1a1a8:	ldrb	w8, [x8]
   1a1ac:	cbz	w8, 1a1b8 <catenate_msgdomain_list@@Base+0x1474>
   1a1b0:	ldrb	w8, [x0, #88]
   1a1b4:	cbnz	w8, 1a1c4 <catenate_msgdomain_list@@Base+0x1480>
   1a1b8:	ldr	x8, [x0, #24]
   1a1bc:	ldrb	w8, [x8]
   1a1c0:	cbnz	w8, 1a194 <catenate_msgdomain_list@@Base+0x1450>
   1a1c4:	ldr	x0, [x0, #264]
   1a1c8:	ldr	w8, [x0, #260]
   1a1cc:	tbnz	w8, #31, 1a198 <catenate_msgdomain_list@@Base+0x1454>
   1a1d0:	mov	w0, wzr
   1a1d4:	ret
   1a1d8:	ldr	w8, [x0, #260]
   1a1dc:	ldr	x9, [x0]
   1a1e0:	cmp	w8, #0x0
   1a1e4:	cneg	w8, w8, mi  // mi = first
   1a1e8:	cbnz	x9, 1a1f8 <catenate_msgdomain_list@@Base+0x14b4>
   1a1ec:	ldr	x9, [x0, #8]
   1a1f0:	ldrb	w9, [x9]
   1a1f4:	cbz	w9, 1a228 <catenate_msgdomain_list@@Base+0x14e4>
   1a1f8:	adrp	x9, 4c000 <plural_table_size@@Base+0x12c00>
   1a1fc:	ldr	x9, [x9, #3816]
   1a200:	adrp	x10, 4c000 <plural_table_size@@Base+0x12c00>
   1a204:	ldr	w9, [x9]
   1a208:	ldr	x10, [x10, #4048]
   1a20c:	cmp	w8, w9
   1a210:	ldr	w10, [x10]
   1a214:	cset	w9, gt
   1a218:	cmp	w8, w10
   1a21c:	cset	w8, lt  // lt = tstop
   1a220:	and	w0, w9, w8
   1a224:	ret
   1a228:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1a22c:	ldr	x8, [x8, #3864]
   1a230:	ldrb	w8, [x8]
   1a234:	cmp	w8, #0x0
   1a238:	cset	w0, eq  // eq = none
   1a23c:	ret

000000000001a240 <msgdomain_list_set_header_field@@Base>:
   1a240:	sub	sp, sp, #0xa0
   1a244:	stp	x24, x23, [sp, #112]
   1a248:	mov	x23, x0
   1a24c:	mov	x0, x1
   1a250:	stp	x29, x30, [sp, #64]
   1a254:	stp	x28, x27, [sp, #80]
   1a258:	stp	x26, x25, [sp, #96]
   1a25c:	stp	x22, x21, [sp, #128]
   1a260:	stp	x20, x19, [sp, #144]
   1a264:	add	x29, sp, #0x40
   1a268:	mov	x22, x2
   1a26c:	mov	x20, x1
   1a270:	bl	a0d0 <strlen@plt>
   1a274:	adrp	x19, 4c000 <plural_table_size@@Base+0x12c00>
   1a278:	add	x19, x19, #0xac0
   1a27c:	mov	x24, xzr
   1a280:	mov	x21, x19
   1a284:	stur	x0, [x29, #-24]
   1a288:	ldr	x0, [x21]
   1a28c:	mov	x1, x20
   1a290:	bl	a8d0 <strcmp@plt>
   1a294:	cbz	w0, 1a2b4 <msgdomain_list_set_header_field@@Base+0x74>
   1a298:	add	x24, x24, #0x1
   1a29c:	cmp	x24, #0xa
   1a2a0:	add	x21, x21, #0x10
   1a2a4:	b.ne	1a288 <msgdomain_list_set_header_field@@Base+0x48>  // b.any
   1a2a8:	mov	w8, #0xffffffff            	// #-1
   1a2ac:	str	x8, [sp, #24]
   1a2b0:	b	1a2b8 <msgdomain_list_set_header_field@@Base+0x78>
   1a2b4:	str	x24, [sp, #24]
   1a2b8:	ldr	x8, [x23, #8]
   1a2bc:	cbz	x8, 1a564 <msgdomain_list_set_header_field@@Base+0x324>
   1a2c0:	ldr	x8, [sp, #24]
   1a2c4:	mov	x28, xzr
   1a2c8:	str	x23, [sp, #32]
   1a2cc:	sxtw	x8, w8
   1a2d0:	str	x8, [sp, #16]
   1a2d4:	add	x8, x8, #0x1
   1a2d8:	stur	x8, [x29, #-16]
   1a2dc:	add	x8, x19, x8, lsl #4
   1a2e0:	add	x8, x8, #0x8
   1a2e4:	stp	x22, x8, [sp]
   1a2e8:	ldr	x8, [x23]
   1a2ec:	ldr	x8, [x8, x28, lsl #3]
   1a2f0:	ldr	x21, [x8, #8]
   1a2f4:	ldr	x8, [x21, #8]
   1a2f8:	cbz	x8, 1a550 <msgdomain_list_set_header_field@@Base+0x310>
   1a2fc:	mov	x19, xzr
   1a300:	ldr	x9, [x21]
   1a304:	ldr	x27, [x9, x19, lsl #3]
   1a308:	ldr	x9, [x27]
   1a30c:	cbnz	x9, 1a544 <msgdomain_list_set_header_field@@Base+0x304>
   1a310:	ldr	x9, [x27, #8]
   1a314:	ldrb	w9, [x9]
   1a318:	cbnz	w9, 1a544 <msgdomain_list_set_header_field@@Base+0x304>
   1a31c:	ldrb	w9, [x27, #256]
   1a320:	cbnz	w9, 1a544 <msgdomain_list_set_header_field@@Base+0x304>
   1a324:	ldr	x24, [x27, #24]
   1a328:	mov	x0, x24
   1a32c:	bl	a0d0 <strlen@plt>
   1a330:	mov	x23, x0
   1a334:	mov	x0, x20
   1a338:	bl	a0d0 <strlen@plt>
   1a33c:	mov	x25, x0
   1a340:	mov	x0, x22
   1a344:	bl	a0d0 <strlen@plt>
   1a348:	add	x8, x23, x25
   1a34c:	add	x8, x8, x0
   1a350:	add	x0, x8, #0x4
   1a354:	bl	a590 <xmalloc@plt>
   1a358:	ldrb	w26, [x24]
   1a35c:	ldur	x23, [x29, #-24]
   1a360:	mov	x25, x24
   1a364:	stur	x0, [x29, #-8]
   1a368:	cbz	w26, 1a39c <msgdomain_list_set_header_field@@Base+0x15c>
   1a36c:	mov	x0, x25
   1a370:	mov	x1, x20
   1a374:	mov	x2, x23
   1a378:	bl	a4d0 <strncmp@plt>
   1a37c:	cbz	w0, 1a4a4 <msgdomain_list_set_header_field@@Base+0x264>
   1a380:	mov	w1, #0xa                   	// #10
   1a384:	mov	x0, x25
   1a388:	bl	aa80 <strchr@plt>
   1a38c:	cbz	x0, 1a39c <msgdomain_list_set_header_field@@Base+0x15c>
   1a390:	add	x25, x0, #0x1
   1a394:	ldrb	w8, [x25]
   1a398:	cbnz	w8, 1a36c <msgdomain_list_set_header_field@@Base+0x12c>
   1a39c:	ldr	x8, [sp, #24]
   1a3a0:	tbnz	w8, #31, 1a400 <msgdomain_list_set_header_field@@Base+0x1c0>
   1a3a4:	cbz	w26, 1a470 <msgdomain_list_set_header_field@@Base+0x230>
   1a3a8:	mov	w26, #0x1                   	// #1
   1a3ac:	mov	x25, x24
   1a3b0:	ldur	x8, [x29, #-16]
   1a3b4:	cmp	w8, #0x9
   1a3b8:	b.hi	1a3e0 <msgdomain_list_set_header_field@@Base+0x1a0>  // b.pmore
   1a3bc:	ldp	x22, x23, [sp, #8]
   1a3c0:	ldp	x1, x2, [x22, #-8]
   1a3c4:	mov	x0, x25
   1a3c8:	bl	a4d0 <strncmp@plt>
   1a3cc:	cbz	w0, 1a420 <msgdomain_list_set_header_field@@Base+0x1e0>
   1a3d0:	add	x23, x23, #0x1
   1a3d4:	cmp	x23, #0x8
   1a3d8:	add	x22, x22, #0x10
   1a3dc:	b.ls	1a3c0 <msgdomain_list_set_header_field@@Base+0x180>  // b.plast
   1a3e0:	mov	w1, #0xa                   	// #10
   1a3e4:	mov	x0, x25
   1a3e8:	bl	aa80 <strchr@plt>
   1a3ec:	cbz	x0, 1a470 <msgdomain_list_set_header_field@@Base+0x230>
   1a3f0:	add	x25, x0, #0x1
   1a3f4:	ldrb	w26, [x25]
   1a3f8:	cbnz	w26, 1a3b0 <msgdomain_list_set_header_field@@Base+0x170>
   1a3fc:	b	1a470 <msgdomain_list_set_header_field@@Base+0x230>
   1a400:	ldur	x23, [x29, #-8]
   1a404:	mov	x1, x24
   1a408:	mov	x0, x23
   1a40c:	bl	a360 <stpcpy@plt>
   1a410:	cmp	x0, x23
   1a414:	b.ls	1a50c <msgdomain_list_set_header_field@@Base+0x2cc>  // b.plast
   1a418:	ldurb	w8, [x0, #-1]
   1a41c:	b	1a490 <msgdomain_list_set_header_field@@Base+0x250>
   1a420:	tst	w26, #0xff
   1a424:	b.eq	1a470 <msgdomain_list_set_header_field@@Base+0x230>  // b.none
   1a428:	ldur	x23, [x29, #-8]
   1a42c:	sub	x26, x25, x24
   1a430:	mov	x1, x24
   1a434:	mov	x2, x26
   1a438:	mov	x0, x23
   1a43c:	bl	a040 <memcpy@plt>
   1a440:	add	x0, x23, x26
   1a444:	mov	x1, x20
   1a448:	bl	a360 <stpcpy@plt>
   1a44c:	ldr	x22, [sp]
   1a450:	mov	w8, #0x20                  	// #32
   1a454:	strh	w8, [x0], #1
   1a458:	mov	x1, x22
   1a45c:	bl	a360 <stpcpy@plt>
   1a460:	mov	w8, #0xa                   	// #10
   1a464:	strh	w8, [x0], #1
   1a468:	mov	x1, x25
   1a46c:	b	1a500 <msgdomain_list_set_header_field@@Base+0x2c0>
   1a470:	ldur	x23, [x29, #-8]
   1a474:	mov	x1, x24
   1a478:	mov	x0, x23
   1a47c:	bl	a360 <stpcpy@plt>
   1a480:	cmp	x0, x23
   1a484:	b.ls	1a508 <msgdomain_list_set_header_field@@Base+0x2c8>  // b.plast
   1a488:	ldurb	w8, [x0, #-1]
   1a48c:	ldr	x22, [sp]
   1a490:	cmp	w8, #0xa
   1a494:	b.eq	1a50c <msgdomain_list_set_header_field@@Base+0x2cc>  // b.none
   1a498:	mov	w8, #0xa                   	// #10
   1a49c:	strb	w8, [x0], #1
   1a4a0:	b	1a50c <msgdomain_list_set_header_field@@Base+0x2cc>
   1a4a4:	ldur	x23, [x29, #-8]
   1a4a8:	sub	x26, x25, x24
   1a4ac:	mov	x1, x24
   1a4b0:	mov	x2, x26
   1a4b4:	mov	x0, x23
   1a4b8:	bl	a040 <memcpy@plt>
   1a4bc:	add	x0, x23, x26
   1a4c0:	mov	x1, x20
   1a4c4:	bl	a360 <stpcpy@plt>
   1a4c8:	mov	w8, #0x20                  	// #32
   1a4cc:	strh	w8, [x0], #1
   1a4d0:	mov	x1, x22
   1a4d4:	bl	a360 <stpcpy@plt>
   1a4d8:	mov	w8, #0xa                   	// #10
   1a4dc:	mov	x24, x0
   1a4e0:	strh	w8, [x0]
   1a4e4:	mov	w1, #0xa                   	// #10
   1a4e8:	mov	x0, x25
   1a4ec:	bl	aa80 <strchr@plt>
   1a4f0:	cbz	x0, 1a52c <msgdomain_list_set_header_field@@Base+0x2ec>
   1a4f4:	add	x8, x24, #0x1
   1a4f8:	add	x1, x0, #0x1
   1a4fc:	mov	x0, x8
   1a500:	bl	a360 <stpcpy@plt>
   1a504:	b	1a52c <msgdomain_list_set_header_field@@Base+0x2ec>
   1a508:	ldr	x22, [sp]
   1a50c:	mov	x1, x20
   1a510:	bl	a360 <stpcpy@plt>
   1a514:	mov	w8, #0x20                  	// #32
   1a518:	strh	w8, [x0], #1
   1a51c:	mov	x1, x22
   1a520:	bl	a360 <stpcpy@plt>
   1a524:	mov	w8, #0xa                   	// #10
   1a528:	strh	w8, [x0]
   1a52c:	mov	x0, x23
   1a530:	str	x23, [x27, #24]
   1a534:	bl	a0d0 <strlen@plt>
   1a538:	add	x8, x0, #0x1
   1a53c:	str	x8, [x27, #32]
   1a540:	ldr	x8, [x21, #8]
   1a544:	add	x19, x19, #0x1
   1a548:	cmp	x19, x8
   1a54c:	b.cc	1a300 <msgdomain_list_set_header_field@@Base+0xc0>  // b.lo, b.ul, b.last
   1a550:	ldr	x23, [sp, #32]
   1a554:	add	x28, x28, #0x1
   1a558:	ldr	x8, [x23, #8]
   1a55c:	cmp	x28, x8
   1a560:	b.cc	1a2e8 <msgdomain_list_set_header_field@@Base+0xa8>  // b.lo, b.ul, b.last
   1a564:	ldp	x20, x19, [sp, #144]
   1a568:	ldp	x22, x21, [sp, #128]
   1a56c:	ldp	x24, x23, [sp, #112]
   1a570:	ldp	x26, x25, [sp, #96]
   1a574:	ldp	x28, x27, [sp, #80]
   1a578:	ldp	x29, x30, [sp, #64]
   1a57c:	add	sp, sp, #0xa0
   1a580:	ret

000000000001a584 <message_list_delete_header_field@@Base>:
   1a584:	stp	x29, x30, [sp, #-96]!
   1a588:	stp	x20, x19, [sp, #80]
   1a58c:	mov	x20, x0
   1a590:	mov	x0, x1
   1a594:	str	x27, [sp, #16]
   1a598:	stp	x26, x25, [sp, #32]
   1a59c:	stp	x24, x23, [sp, #48]
   1a5a0:	stp	x22, x21, [sp, #64]
   1a5a4:	mov	x29, sp
   1a5a8:	mov	x19, x1
   1a5ac:	bl	a0d0 <strlen@plt>
   1a5b0:	ldr	x24, [x20, #8]
   1a5b4:	cbz	x24, 1a6a4 <message_list_delete_header_field@@Base+0x120>
   1a5b8:	mov	x21, x0
   1a5bc:	mov	x26, xzr
   1a5c0:	ldr	x8, [x20]
   1a5c4:	ldr	x27, [x8, x26, lsl #3]
   1a5c8:	ldr	x8, [x27]
   1a5cc:	cbnz	x8, 1a5e4 <message_list_delete_header_field@@Base+0x60>
   1a5d0:	ldr	x8, [x27, #8]
   1a5d4:	ldrb	w8, [x8]
   1a5d8:	cbnz	w8, 1a5e4 <message_list_delete_header_field@@Base+0x60>
   1a5dc:	ldrb	w8, [x27, #256]
   1a5e0:	cbz	w8, 1a5f4 <message_list_delete_header_field@@Base+0x70>
   1a5e4:	add	x26, x26, #0x1
   1a5e8:	cmp	x26, x24
   1a5ec:	b.cc	1a5c0 <message_list_delete_header_field@@Base+0x3c>  // b.lo, b.ul, b.last
   1a5f0:	b	1a6a4 <message_list_delete_header_field@@Base+0x120>
   1a5f4:	ldr	x22, [x27, #24]
   1a5f8:	ldrb	w8, [x22]
   1a5fc:	mov	x23, x22
   1a600:	cbz	w8, 1a5e4 <message_list_delete_header_field@@Base+0x60>
   1a604:	mov	x0, x23
   1a608:	mov	x1, x19
   1a60c:	mov	x2, x21
   1a610:	bl	a4d0 <strncmp@plt>
   1a614:	cbz	w0, 1a638 <message_list_delete_header_field@@Base+0xb4>
   1a618:	mov	w1, #0xa                   	// #10
   1a61c:	mov	x0, x23
   1a620:	bl	aa80 <strchr@plt>
   1a624:	cbz	x0, 1a5e4 <message_list_delete_header_field@@Base+0x60>
   1a628:	add	x23, x0, #0x1
   1a62c:	ldrb	w8, [x23]
   1a630:	cbnz	w8, 1a604 <message_list_delete_header_field@@Base+0x80>
   1a634:	b	1a5e4 <message_list_delete_header_field@@Base+0x60>
   1a638:	mov	x0, x22
   1a63c:	bl	a0d0 <strlen@plt>
   1a640:	add	x0, x0, #0x1
   1a644:	mov	w1, #0x1                   	// #1
   1a648:	bl	aea0 <xcalloc@plt>
   1a64c:	sub	x25, x23, x22
   1a650:	mov	x1, x22
   1a654:	mov	x2, x25
   1a658:	mov	x24, x0
   1a65c:	bl	a040 <memcpy@plt>
   1a660:	mov	w1, #0xa                   	// #10
   1a664:	mov	x0, x23
   1a668:	add	x22, x24, x25
   1a66c:	bl	aa80 <strchr@plt>
   1a670:	cbz	x0, 1a684 <message_list_delete_header_field@@Base+0x100>
   1a674:	add	x1, x0, #0x1
   1a678:	mov	x0, x22
   1a67c:	bl	ab70 <strcpy@plt>
   1a680:	b	1a688 <message_list_delete_header_field@@Base+0x104>
   1a684:	strb	wzr, [x22]
   1a688:	mov	x0, x24
   1a68c:	str	x24, [x27, #24]
   1a690:	bl	a0d0 <strlen@plt>
   1a694:	add	x8, x0, #0x1
   1a698:	str	x8, [x27, #32]
   1a69c:	ldr	x24, [x20, #8]
   1a6a0:	b	1a5e4 <message_list_delete_header_field@@Base+0x60>
   1a6a4:	ldp	x20, x19, [sp, #80]
   1a6a8:	ldp	x22, x21, [sp, #64]
   1a6ac:	ldp	x24, x23, [sp, #48]
   1a6b0:	ldp	x26, x25, [sp, #32]
   1a6b4:	ldr	x27, [sp, #16]
   1a6b8:	ldp	x29, x30, [sp], #96
   1a6bc:	ret

000000000001a6c0 <msgdomain_list_english@@Base>:
   1a6c0:	stp	x29, x30, [sp, #-96]!
   1a6c4:	stp	x26, x25, [sp, #32]
   1a6c8:	stp	x24, x23, [sp, #48]
   1a6cc:	stp	x22, x21, [sp, #64]
   1a6d0:	stp	x20, x19, [sp, #80]
   1a6d4:	ldr	x8, [x0, #8]
   1a6d8:	mov	x19, x0
   1a6dc:	str	x27, [sp, #16]
   1a6e0:	mov	x29, sp
   1a6e4:	cbz	x8, 1a7c8 <msgdomain_list_english@@Base+0x108>
   1a6e8:	mov	x24, xzr
   1a6ec:	ldr	x8, [x19]
   1a6f0:	ldr	x8, [x8, x24, lsl #3]
   1a6f4:	ldr	x25, [x8, #8]
   1a6f8:	ldr	x21, [x25, #8]
   1a6fc:	cbz	x21, 1a7b8 <msgdomain_list_english@@Base+0xf8>
   1a700:	mov	x26, xzr
   1a704:	ldr	x8, [x25]
   1a708:	ldr	x27, [x8, x26, lsl #3]
   1a70c:	ldr	x20, [x27, #16]
   1a710:	ldr	x8, [x27, #32]
   1a714:	cbz	x20, 1a784 <msgdomain_list_english@@Base+0xc4>
   1a718:	cmp	x8, #0x2
   1a71c:	b.ne	1a7ac <msgdomain_list_english@@Base+0xec>  // b.any
   1a720:	ldr	x8, [x27, #24]
   1a724:	ldrb	w9, [x8]
   1a728:	cbnz	w9, 1a7ac <msgdomain_list_english@@Base+0xec>
   1a72c:	ldrb	w8, [x8, #1]
   1a730:	cbnz	w8, 1a7ac <msgdomain_list_english@@Base+0xec>
   1a734:	ldr	x0, [x27, #8]
   1a738:	bl	a0d0 <strlen@plt>
   1a73c:	add	x21, x0, #0x1
   1a740:	mov	x0, x20
   1a744:	bl	a0d0 <strlen@plt>
   1a748:	add	x20, x0, #0x1
   1a74c:	add	x22, x20, x21
   1a750:	mov	x0, x22
   1a754:	bl	a590 <xmalloc@plt>
   1a758:	ldr	x1, [x27, #8]
   1a75c:	mov	x2, x21
   1a760:	mov	x23, x0
   1a764:	bl	a040 <memcpy@plt>
   1a768:	ldr	x1, [x27, #16]
   1a76c:	add	x0, x23, x21
   1a770:	mov	x2, x20
   1a774:	bl	a040 <memcpy@plt>
   1a778:	stp	x23, x22, [x27, #24]
   1a77c:	ldr	x21, [x25, #8]
   1a780:	b	1a7ac <msgdomain_list_english@@Base+0xec>
   1a784:	cmp	x8, #0x1
   1a788:	b.ne	1a7ac <msgdomain_list_english@@Base+0xec>  // b.any
   1a78c:	ldr	x8, [x27, #24]
   1a790:	ldrb	w8, [x8]
   1a794:	cbnz	w8, 1a7ac <msgdomain_list_english@@Base+0xec>
   1a798:	ldr	x0, [x27, #8]
   1a79c:	str	x0, [x27, #24]
   1a7a0:	bl	a0d0 <strlen@plt>
   1a7a4:	add	x8, x0, #0x1
   1a7a8:	str	x8, [x27, #32]
   1a7ac:	add	x26, x26, #0x1
   1a7b0:	cmp	x26, x21
   1a7b4:	b.cc	1a704 <msgdomain_list_english@@Base+0x44>  // b.lo, b.ul, b.last
   1a7b8:	ldr	x8, [x19, #8]
   1a7bc:	add	x24, x24, #0x1
   1a7c0:	cmp	x24, x8
   1a7c4:	b.cc	1a6ec <msgdomain_list_english@@Base+0x2c>  // b.lo, b.ul, b.last
   1a7c8:	mov	x0, x19
   1a7cc:	ldp	x20, x19, [sp, #80]
   1a7d0:	ldp	x22, x21, [sp, #64]
   1a7d4:	ldp	x24, x23, [sp, #48]
   1a7d8:	ldp	x26, x25, [sp, #32]
   1a7dc:	ldr	x27, [sp, #16]
   1a7e0:	ldp	x29, x30, [sp], #96
   1a7e4:	ret

000000000001a7e8 <check_plural_eval@@Base>:
   1a7e8:	sub	sp, sp, #0x50
   1a7ec:	stp	x22, x21, [sp, #48]
   1a7f0:	stp	x20, x19, [sp, #64]
   1a7f4:	mov	x21, x3
   1a7f8:	mov	x19, x2
   1a7fc:	mov	x20, x1
   1a800:	cmp	x1, #0x64
   1a804:	mov	x22, x0
   1a808:	stp	x29, x30, [sp, #16]
   1a80c:	stp	x24, x23, [sp, #32]
   1a810:	add	x29, sp, #0x10
   1a814:	b.hi	1a82c <check_plural_eval@@Base+0x44>  // b.pmore
   1a818:	mov	w1, #0x1                   	// #1
   1a81c:	mov	x0, x20
   1a820:	bl	aea0 <xcalloc@plt>
   1a824:	str	x0, [sp, #8]
   1a828:	b	1a830 <check_plural_eval@@Base+0x48>
   1a82c:	str	xzr, [sp, #8]
   1a830:	adrp	x0, 4c000 <plural_table_size@@Base+0x12c00>
   1a834:	ldr	x0, [x0, #3992]
   1a838:	mov	w1, #0x1                   	// #1
   1a83c:	bl	a220 <__sigsetjmp@plt>
   1a840:	cbz	w0, 1a8dc <check_plural_eval@@Base+0xf4>
   1a844:	bl	a0b0 <uninstall_sigfpe_handler@plt>
   1a848:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1a84c:	ldr	x8, [x8, #3808]
   1a850:	adrp	x9, 38000 <get_search_path@@Base+0x1b4c>
   1a854:	adrp	x10, 38000 <get_search_path@@Base+0x1b4c>
   1a858:	add	x9, x9, #0x3bb
   1a85c:	ldr	w8, [x8]
   1a860:	add	x10, x10, #0x38c
   1a864:	adrp	x11, 38000 <get_search_path@@Base+0x1b4c>
   1a868:	add	x11, x11, #0x35d
   1a86c:	cmp	w8, #0x2
   1a870:	csel	x9, x10, x9, eq  // eq = none
   1a874:	cmp	w8, #0x1
   1a878:	csel	x1, x11, x9, eq  // eq = none
   1a87c:	mov	w2, #0x5                   	// #5
   1a880:	mov	x0, xzr
   1a884:	bl	acd0 <dcgettext@plt>
   1a888:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1a88c:	ldr	x8, [x8, #3736]
   1a890:	mov	x6, x0
   1a894:	mov	w0, #0x1                   	// #1
   1a898:	mov	x1, x19
   1a89c:	ldr	x8, [x8]
   1a8a0:	mov	x2, xzr
   1a8a4:	mov	x3, xzr
   1a8a8:	mov	x4, xzr
   1a8ac:	mov	w5, wzr
   1a8b0:	mov	w23, #0x1                   	// #1
   1a8b4:	blr	x8
   1a8b8:	ldr	x0, [sp, #8]
   1a8bc:	bl	aa00 <free@plt>
   1a8c0:	mov	w0, w23
   1a8c4:	ldp	x20, x19, [sp, #64]
   1a8c8:	ldp	x22, x21, [sp, #48]
   1a8cc:	ldp	x24, x23, [sp, #32]
   1a8d0:	ldp	x29, x30, [sp, #16]
   1a8d4:	add	sp, sp, #0x50
   1a8d8:	ret
   1a8dc:	bl	ac70 <install_sigfpe_handler@plt>
   1a8e0:	mov	x24, xzr
   1a8e4:	mov	x0, x22
   1a8e8:	mov	x1, x24
   1a8ec:	bl	ad30 <plural_eval@plt>
   1a8f0:	tbnz	x0, #63, 1a990 <check_plural_eval@@Base+0x1a8>
   1a8f4:	mov	x23, x0
   1a8f8:	cmp	x0, x20
   1a8fc:	b.cs	1a9dc <check_plural_eval@@Base+0x1f4>  // b.hs, b.nlast
   1a900:	ldr	x8, [sp, #8]
   1a904:	cbz	x8, 1a928 <check_plural_eval@@Base+0x140>
   1a908:	ldr	x8, [sp, #8]
   1a90c:	ldrb	w8, [x8, x23]
   1a910:	cmp	w8, #0x4
   1a914:	b.hi	1a928 <check_plural_eval@@Base+0x140>  // b.pmore
   1a918:	ldr	x8, [sp, #8]
   1a91c:	ldrb	w9, [x8, x23]
   1a920:	add	w9, w9, #0x1
   1a924:	strb	w9, [x8, x23]
   1a928:	add	x24, x24, #0x1
   1a92c:	cmp	x24, #0x3e9
   1a930:	b.ne	1a8e4 <check_plural_eval@@Base+0xfc>  // b.any
   1a934:	bl	a0b0 <uninstall_sigfpe_handler@plt>
   1a938:	ldr	x8, [sp, #8]
   1a93c:	cbz	x8, 1a968 <check_plural_eval@@Base+0x180>
   1a940:	mov	x8, xzr
   1a944:	ldr	x9, [sp, #8]
   1a948:	ldrb	w9, [x9, x8]
   1a94c:	ldr	x10, [sp, #8]
   1a950:	cmp	w9, #0x5
   1a954:	cset	w9, eq  // eq = none
   1a958:	strb	w9, [x10, x8]
   1a95c:	add	x8, x8, #0x1
   1a960:	cmp	x20, x8
   1a964:	b.ne	1a944 <check_plural_eval@@Base+0x15c>  // b.any
   1a968:	ldr	x8, [sp, #8]
   1a96c:	adrp	x9, 1a000 <catenate_msgdomain_list@@Base+0x12bc>
   1a970:	add	x9, x9, #0xa40
   1a974:	mov	w23, wzr
   1a978:	stp	x22, x8, [x21]
   1a97c:	ldr	x8, [sp, #8]
   1a980:	cmp	x8, #0x0
   1a984:	csel	x8, xzr, x20, eq  // eq = none
   1a988:	stp	x8, x9, [x21, #16]
   1a98c:	b	1a8c0 <check_plural_eval@@Base+0xd8>
   1a990:	bl	a0b0 <uninstall_sigfpe_handler@plt>
   1a994:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1a998:	ldr	x8, [x8, #3736]
   1a99c:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1a9a0:	add	x1, x1, #0x2e7
   1a9a4:	mov	w2, #0x5                   	// #5
   1a9a8:	ldr	x20, [x8]
   1a9ac:	mov	x0, xzr
   1a9b0:	bl	acd0 <dcgettext@plt>
   1a9b4:	mov	x6, x0
   1a9b8:	mov	w0, #0x1                   	// #1
   1a9bc:	mov	x1, x19
   1a9c0:	mov	x2, xzr
   1a9c4:	mov	x3, xzr
   1a9c8:	mov	x4, xzr
   1a9cc:	mov	w5, wzr
   1a9d0:	mov	w23, #0x1                   	// #1
   1a9d4:	blr	x20
   1a9d8:	b	1a8b8 <check_plural_eval@@Base+0xd0>
   1a9dc:	bl	a0b0 <uninstall_sigfpe_handler@plt>
   1a9e0:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1a9e4:	add	x1, x1, #0x315
   1a9e8:	mov	w2, #0x5                   	// #5
   1a9ec:	mov	x0, xzr
   1a9f0:	bl	acd0 <dcgettext@plt>
   1a9f4:	mov	x1, x20
   1a9f8:	mov	x2, x23
   1a9fc:	bl	aa20 <xasprintf@plt>
   1aa00:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1aa04:	ldr	x8, [x8, #3736]
   1aa08:	mov	x20, x0
   1aa0c:	mov	w0, #0x1                   	// #1
   1aa10:	mov	x1, x19
   1aa14:	ldr	x8, [x8]
   1aa18:	mov	x2, xzr
   1aa1c:	mov	x3, xzr
   1aa20:	mov	x4, xzr
   1aa24:	mov	w5, wzr
   1aa28:	mov	x6, x20
   1aa2c:	mov	w23, #0x1                   	// #1
   1aa30:	blr	x8
   1aa34:	mov	x0, x20
   1aa38:	bl	aa00 <free@plt>
   1aa3c:	b	1a8b8 <check_plural_eval@@Base+0xd0>
   1aa40:	stp	x29, x30, [sp, #-64]!
   1aa44:	stp	x20, x19, [sp, #48]
   1aa48:	bic	w20, w1, w1, asr #31
   1aa4c:	sub	w8, w2, w20
   1aa50:	add	w9, w20, #0x3e8
   1aa54:	cmp	w8, #0x3e8
   1aa58:	str	x23, [sp, #16]
   1aa5c:	csel	w23, w9, w2, gt
   1aa60:	cmp	w20, w23
   1aa64:	stp	x22, x21, [sp, #32]
   1aa68:	mov	x29, sp
   1aa6c:	b.le	1aa78 <check_plural_eval@@Base+0x290>
   1aa70:	mov	w20, wzr
   1aa74:	b	1aac4 <check_plural_eval@@Base+0x2dc>
   1aa78:	ldr	x21, [x0]
   1aa7c:	mov	x19, x3
   1aa80:	bl	ac70 <install_sigfpe_handler@plt>
   1aa84:	mov	w22, w20
   1aa88:	cmp	x22, w23, sxtw
   1aa8c:	b.ls	1aa98 <check_plural_eval@@Base+0x2b0>  // b.plast
   1aa90:	mov	w20, wzr
   1aa94:	b	1aac0 <check_plural_eval@@Base+0x2d8>
   1aa98:	mov	w20, wzr
   1aa9c:	sxtw	x23, w23
   1aaa0:	mov	x0, x21
   1aaa4:	mov	x1, x22
   1aaa8:	bl	ad30 <plural_eval@plt>
   1aaac:	cmp	x0, x19
   1aab0:	add	x22, x22, #0x1
   1aab4:	cinc	w20, w20, eq  // eq = none
   1aab8:	cmp	x22, x23
   1aabc:	b.ls	1aaa0 <check_plural_eval@@Base+0x2b8>  // b.plast
   1aac0:	bl	a0b0 <uninstall_sigfpe_handler@plt>
   1aac4:	mov	w0, w20
   1aac8:	ldp	x20, x19, [sp, #48]
   1aacc:	ldp	x22, x21, [sp, #32]
   1aad0:	ldr	x23, [sp, #16]
   1aad4:	ldp	x29, x30, [sp], #64
   1aad8:	ret

000000000001aadc <check_message@@Base>:
   1aadc:	sub	sp, sp, #0xa0
   1aae0:	stp	x29, x30, [sp, #64]
   1aae4:	stp	x28, x27, [sp, #80]
   1aae8:	stp	x20, x19, [sp, #144]
   1aaec:	add	x29, sp, #0x40
   1aaf0:	mov	w28, w2
   1aaf4:	mov	x20, x1
   1aaf8:	mov	x19, x0
   1aafc:	stp	x26, x25, [sp, #96]
   1ab00:	stp	x24, x23, [sp, #112]
   1ab04:	stp	x22, x21, [sp, #128]
   1ab08:	stur	w7, [x29, #-4]
   1ab0c:	str	w6, [sp, #28]
   1ab10:	str	x4, [sp, #16]
   1ab14:	stur	w3, [x29, #-8]
   1ab18:	cbz	w5, 1ab30 <check_message@@Base+0x54>
   1ab1c:	ldr	x8, [x19]
   1ab20:	cbnz	x8, 1ab30 <check_message@@Base+0x54>
   1ab24:	ldr	x8, [x19, #8]
   1ab28:	ldrb	w8, [x8]
   1ab2c:	cbz	w8, 1ace0 <check_message@@Base+0x204>
   1ab30:	ldr	x8, [x19, #8]
   1ab34:	ldrb	w25, [x8]
   1ab38:	cbz	w25, 1abc0 <check_message@@Base+0xe4>
   1ab3c:	ldp	x9, x26, [x19, #16]
   1ab40:	ldr	x27, [x19, #32]
   1ab44:	str	x26, [sp, #32]
   1ab48:	stp	x9, x8, [x29, #-24]
   1ab4c:	str	x27, [sp, #8]
   1ab50:	cbz	w28, 1abc8 <check_message@@Base+0xec>
   1ab54:	cbz	x9, 1abd0 <check_message@@Base+0xf4>
   1ab58:	ldrb	w8, [x9]
   1ab5c:	cmp	w25, #0xa
   1ab60:	cset	w9, eq  // eq = none
   1ab64:	cmp	w8, #0xa
   1ab68:	cset	w8, eq  // eq = none
   1ab6c:	cmp	w9, w8
   1ab70:	b.eq	1ac38 <check_message@@Base+0x15c>  // b.none
   1ab74:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1ab78:	ldr	x8, [x8, #3736]
   1ab7c:	ldp	x21, x23, [x20]
   1ab80:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1ab84:	add	x1, x1, #0x55f
   1ab88:	ldr	x22, [x8]
   1ab8c:	mov	w2, #0x5                   	// #5
   1ab90:	mov	x0, xzr
   1ab94:	bl	acd0 <dcgettext@plt>
   1ab98:	mov	x6, x0
   1ab9c:	mov	w0, #0x1                   	// #1
   1aba0:	mov	x4, #0xffffffffffffffff    	// #-1
   1aba4:	mov	x1, x19
   1aba8:	mov	x2, x21
   1abac:	mov	x3, x23
   1abb0:	mov	w5, wzr
   1abb4:	mov	w24, #0x1                   	// #1
   1abb8:	blr	x22
   1abbc:	b	1ac3c <check_message@@Base+0x160>
   1abc0:	mov	w24, wzr
   1abc4:	b	1b1b0 <check_message@@Base+0x6d4>
   1abc8:	mov	w24, wzr
   1abcc:	b	1afe0 <check_message@@Base+0x504>
   1abd0:	ldrb	w8, [x26]
   1abd4:	cmp	w25, #0xa
   1abd8:	cset	w9, eq  // eq = none
   1abdc:	cmp	w8, #0xa
   1abe0:	cset	w8, eq  // eq = none
   1abe4:	cmp	w9, w8
   1abe8:	b.eq	1ae7c <check_message@@Base+0x3a0>  // b.none
   1abec:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1abf0:	ldr	x8, [x8, #3736]
   1abf4:	ldp	x21, x22, [x20]
   1abf8:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1abfc:	add	x1, x1, #0x5db
   1ac00:	ldr	x23, [x8]
   1ac04:	mov	w2, #0x5                   	// #5
   1ac08:	mov	x0, xzr
   1ac0c:	bl	acd0 <dcgettext@plt>
   1ac10:	mov	x6, x0
   1ac14:	mov	w0, #0x1                   	// #1
   1ac18:	mov	x4, #0xffffffffffffffff    	// #-1
   1ac1c:	mov	x1, x19
   1ac20:	mov	x2, x21
   1ac24:	mov	x3, x22
   1ac28:	mov	w5, wzr
   1ac2c:	mov	w24, #0x1                   	// #1
   1ac30:	blr	x23
   1ac34:	b	1ae80 <check_message@@Base+0x3a4>
   1ac38:	mov	w24, wzr
   1ac3c:	cmp	x27, #0x1
   1ac40:	b.lt	1ae80 <check_message@@Base+0x3a4>  // b.tstop
   1ac44:	adrp	x28, 4c000 <plural_table_size@@Base+0x12c00>
   1ac48:	ldr	x28, [x28, #3736]
   1ac4c:	adrp	x23, 38000 <get_search_path@@Base+0x1b4c>
   1ac50:	mov	w21, wzr
   1ac54:	add	x27, x26, x27
   1ac58:	add	x23, x23, #0x59e
   1ac5c:	ldrb	w8, [x26]
   1ac60:	cmp	w25, #0xa
   1ac64:	cset	w9, eq  // eq = none
   1ac68:	cmp	w8, #0xa
   1ac6c:	cset	w8, eq  // eq = none
   1ac70:	cmp	w9, w8
   1ac74:	b.eq	1acc0 <check_message@@Base+0x1e4>  // b.none
   1ac78:	mov	w2, #0x5                   	// #5
   1ac7c:	mov	x0, xzr
   1ac80:	mov	x1, x23
   1ac84:	bl	acd0 <dcgettext@plt>
   1ac88:	mov	w1, w21
   1ac8c:	bl	aa20 <xasprintf@plt>
   1ac90:	ldr	x8, [x28]
   1ac94:	ldp	x2, x3, [x20]
   1ac98:	mov	x22, x0
   1ac9c:	mov	w0, #0x1                   	// #1
   1aca0:	mov	x4, #0xffffffffffffffff    	// #-1
   1aca4:	mov	x1, x19
   1aca8:	mov	w5, wzr
   1acac:	mov	x6, x22
   1acb0:	blr	x8
   1acb4:	mov	x0, x22
   1acb8:	bl	aa00 <free@plt>
   1acbc:	add	w24, w24, #0x1
   1acc0:	mov	x0, x26
   1acc4:	bl	a0d0 <strlen@plt>
   1acc8:	add	x8, x0, x26
   1accc:	add	x26, x8, #0x1
   1acd0:	cmp	x26, x27
   1acd4:	add	w21, w21, #0x1
   1acd8:	b.cc	1ac5c <check_message@@Base+0x180>  // b.lo, b.ul, b.last
   1acdc:	b	1ae80 <check_message@@Base+0x3a4>
   1ace0:	ldr	x22, [x19, #24]
   1ace4:	adrp	x24, 4c000 <plural_table_size@@Base+0x12c00>
   1ace8:	mov	x26, xzr
   1acec:	add	x24, x24, #0xb60
   1acf0:	ldr	x27, [x24, x26, lsl #3]
   1acf4:	mov	x0, x27
   1acf8:	bl	a0d0 <strlen@plt>
   1acfc:	ldrb	w8, [x22]
   1ad00:	cbz	w8, 1ad54 <check_message@@Base+0x278>
   1ad04:	mov	x23, x0
   1ad08:	mov	x21, x22
   1ad0c:	mov	x0, x21
   1ad10:	mov	x1, x27
   1ad14:	mov	x2, x23
   1ad18:	bl	a4d0 <strncmp@plt>
   1ad1c:	cbnz	w0, 1ad2c <check_message@@Base+0x250>
   1ad20:	ldrb	w8, [x21, x23]
   1ad24:	cmp	w8, #0x3a
   1ad28:	b.eq	1adb8 <check_message@@Base+0x2dc>  // b.none
   1ad2c:	mov	w1, #0xa                   	// #10
   1ad30:	mov	x0, x21
   1ad34:	bl	aca0 <strchrnul@plt>
   1ad38:	mov	x8, x0
   1ad3c:	ldrb	w9, [x8], #1
   1ad40:	cmp	w9, #0xa
   1ad44:	csel	x9, x0, x8, ne  // ne = any
   1ad48:	ldrb	w9, [x9]
   1ad4c:	csel	x21, x8, x0, eq  // eq = none
   1ad50:	cbnz	w9, 1ad0c <check_message@@Base+0x230>
   1ad54:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1ad58:	mov	w2, #0x5                   	// #5
   1ad5c:	mov	x0, xzr
   1ad60:	add	x1, x1, #0x53a
   1ad64:	bl	acd0 <dcgettext@plt>
   1ad68:	mov	x1, x27
   1ad6c:	bl	aa20 <xasprintf@plt>
   1ad70:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1ad74:	ldr	x8, [x8, #3736]
   1ad78:	mov	x21, x0
   1ad7c:	mov	w5, #0x1                   	// #1
   1ad80:	mov	w0, wzr
   1ad84:	ldr	x8, [x8]
   1ad88:	mov	x1, x19
   1ad8c:	mov	x2, xzr
   1ad90:	mov	x3, xzr
   1ad94:	mov	x4, xzr
   1ad98:	mov	x6, x21
   1ad9c:	blr	x8
   1ada0:	mov	x0, x21
   1ada4:	bl	aa00 <free@plt>
   1ada8:	add	x26, x26, #0x1
   1adac:	cmp	x26, #0x8
   1adb0:	b.ne	1acf0 <check_message@@Base+0x214>  // b.any
   1adb4:	b	1ab30 <check_message@@Base+0x54>
   1adb8:	add	x8, x21, x23
   1adbc:	ldrb	w9, [x8, #1]!
   1adc0:	cmp	w9, #0x20
   1adc4:	cinc	x23, x8, eq  // eq = none
   1adc8:	cmp	x26, #0x4
   1adcc:	b.eq	1ada8 <check_message@@Base+0x2cc>  // b.none
   1add0:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1add4:	add	x8, x8, #0xba0
   1add8:	mov	w24, w28
   1addc:	ldr	x28, [x8, x26, lsl #3]
   1ade0:	mov	x0, x28
   1ade4:	bl	a0d0 <strlen@plt>
   1ade8:	mov	x25, x0
   1adec:	mov	x0, x23
   1adf0:	mov	x1, x28
   1adf4:	mov	w28, w24
   1adf8:	adrp	x24, 4c000 <plural_table_size@@Base+0x12c00>
   1adfc:	mov	x2, x25
   1ae00:	add	x24, x24, #0xb60
   1ae04:	bl	a4d0 <strncmp@plt>
   1ae08:	cbnz	w0, 1ada8 <check_message@@Base+0x2cc>
   1ae0c:	ldrb	w8, [x23, x25]
   1ae10:	cbz	w8, 1ae1c <check_message@@Base+0x340>
   1ae14:	cmp	w8, #0xa
   1ae18:	b.ne	1ada8 <check_message@@Base+0x2cc>  // b.any
   1ae1c:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1ae20:	mov	w2, #0x5                   	// #5
   1ae24:	mov	x0, xzr
   1ae28:	add	x1, x1, #0x503
   1ae2c:	bl	acd0 <dcgettext@plt>
   1ae30:	mov	x1, x27
   1ae34:	bl	aa20 <xasprintf@plt>
   1ae38:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1ae3c:	ldr	x8, [x8, #3736]
   1ae40:	mov	x23, x0
   1ae44:	mov	w5, #0x1                   	// #1
   1ae48:	mov	w0, wzr
   1ae4c:	ldr	x8, [x8]
   1ae50:	mov	x1, x19
   1ae54:	mov	x2, xzr
   1ae58:	mov	x3, xzr
   1ae5c:	mov	x4, xzr
   1ae60:	mov	x6, x23
   1ae64:	blr	x8
   1ae68:	mov	x0, x23
   1ae6c:	bl	aa00 <free@plt>
   1ae70:	ldrb	w8, [x21]
   1ae74:	cbnz	w8, 1ada8 <check_message@@Base+0x2cc>
   1ae78:	b	1ad54 <check_message@@Base+0x278>
   1ae7c:	mov	w24, wzr
   1ae80:	ldur	x26, [x29, #-16]
   1ae84:	mov	x0, x26
   1ae88:	bl	a0d0 <strlen@plt>
   1ae8c:	add	x8, x0, x26
   1ae90:	ldurb	w25, [x8, #-1]
   1ae94:	ldur	x27, [x29, #-24]
   1ae98:	cmp	w25, #0xa
   1ae9c:	cset	w21, eq  // eq = none
   1aea0:	cbz	x27, 1b00c <check_message@@Base+0x530>
   1aea4:	ldrb	w8, [x27]
   1aea8:	ldr	x26, [sp, #32]
   1aeac:	cbz	w8, 1aec8 <check_message@@Base+0x3ec>
   1aeb0:	mov	x0, x27
   1aeb4:	bl	a0d0 <strlen@plt>
   1aeb8:	add	x8, x0, x27
   1aebc:	ldurb	w8, [x8, #-1]
   1aec0:	cmp	w8, #0xa
   1aec4:	cset	w8, eq  // eq = none
   1aec8:	ldr	x27, [sp, #8]
   1aecc:	cmp	w8, w21
   1aed0:	b.eq	1af1c <check_message@@Base+0x440>  // b.none
   1aed4:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1aed8:	ldr	x8, [x8, #3736]
   1aedc:	ldp	x21, x22, [x20]
   1aee0:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1aee4:	add	x1, x1, #0x614
   1aee8:	ldr	x23, [x8]
   1aeec:	mov	w2, #0x5                   	// #5
   1aef0:	mov	x0, xzr
   1aef4:	bl	acd0 <dcgettext@plt>
   1aef8:	mov	x6, x0
   1aefc:	mov	w0, #0x1                   	// #1
   1af00:	mov	x4, #0xffffffffffffffff    	// #-1
   1af04:	mov	x1, x19
   1af08:	mov	x2, x21
   1af0c:	mov	x3, x22
   1af10:	mov	w5, wzr
   1af14:	blr	x23
   1af18:	add	w24, w24, #0x1
   1af1c:	cmp	x27, #0x1
   1af20:	b.lt	1afe0 <check_message@@Base+0x504>  // b.tstop
   1af24:	add	x28, x26, x27
   1af28:	adrp	x27, 4c000 <plural_table_size@@Base+0x12c00>
   1af2c:	ldr	x27, [x27, #3736]
   1af30:	adrp	x23, 38000 <get_search_path@@Base+0x1b4c>
   1af34:	mov	w21, wzr
   1af38:	add	x23, x23, #0x651
   1af3c:	ldrb	w8, [x26]
   1af40:	cbz	w8, 1afd4 <check_message@@Base+0x4f8>
   1af44:	cmp	w25, #0xa
   1af48:	mov	x0, x26
   1af4c:	cset	w22, eq  // eq = none
   1af50:	bl	a0d0 <strlen@plt>
   1af54:	add	x8, x0, x26
   1af58:	ldurb	w8, [x8, #-1]
   1af5c:	cmp	w8, #0xa
   1af60:	cset	w8, eq  // eq = none
   1af64:	cmp	w22, w8
   1af68:	b.eq	1afb4 <check_message@@Base+0x4d8>  // b.none
   1af6c:	mov	w2, #0x5                   	// #5
   1af70:	mov	x0, xzr
   1af74:	mov	x1, x23
   1af78:	bl	acd0 <dcgettext@plt>
   1af7c:	mov	w1, w21
   1af80:	bl	aa20 <xasprintf@plt>
   1af84:	ldr	x8, [x27]
   1af88:	ldp	x2, x3, [x20]
   1af8c:	mov	x22, x0
   1af90:	mov	w0, #0x1                   	// #1
   1af94:	mov	x4, #0xffffffffffffffff    	// #-1
   1af98:	mov	x1, x19
   1af9c:	mov	w5, wzr
   1afa0:	mov	x6, x22
   1afa4:	blr	x8
   1afa8:	mov	x0, x22
   1afac:	bl	aa00 <free@plt>
   1afb0:	add	w24, w24, #0x1
   1afb4:	mov	x0, x26
   1afb8:	bl	a0d0 <strlen@plt>
   1afbc:	add	x8, x0, x26
   1afc0:	add	x26, x8, #0x1
   1afc4:	cmp	x26, x28
   1afc8:	add	w21, w21, #0x1
   1afcc:	b.cc	1af3c <check_message@@Base+0x460>  // b.lo, b.ul, b.last
   1afd0:	b	1afe0 <check_message@@Base+0x504>
   1afd4:	cmp	w25, #0xa
   1afd8:	b.eq	1af6c <check_message@@Base+0x490>  // b.none
   1afdc:	b	1afb4 <check_message@@Base+0x4d8>
   1afe0:	ldr	w8, [sp, #28]
   1afe4:	cbz	w8, 1b148 <check_message@@Base+0x66c>
   1afe8:	ldr	x25, [sp, #32]
   1afec:	ldp	x27, x26, [x29, #-24]
   1aff0:	cbz	x27, 1b080 <check_message@@Base+0x5a4>
   1aff4:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1aff8:	ldr	x8, [x8, #3736]
   1affc:	ldp	x21, x22, [x20]
   1b000:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1b004:	add	x1, x1, #0x6c3
   1b008:	b	1b04c <check_message@@Base+0x570>
   1b00c:	ldr	x25, [sp, #32]
   1b010:	ldrb	w8, [x25]
   1b014:	cbz	w8, 1b030 <check_message@@Base+0x554>
   1b018:	mov	x0, x25
   1b01c:	bl	a0d0 <strlen@plt>
   1b020:	add	x8, x0, x25
   1b024:	ldurb	w8, [x8, #-1]
   1b028:	cmp	w8, #0xa
   1b02c:	cset	w8, eq  // eq = none
   1b030:	cmp	w8, w21
   1b034:	b.eq	1b080 <check_message@@Base+0x5a4>  // b.none
   1b038:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1b03c:	ldr	x8, [x8, #3736]
   1b040:	ldp	x21, x22, [x20]
   1b044:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1b048:	add	x1, x1, #0x68c
   1b04c:	ldr	x23, [x8]
   1b050:	mov	w2, #0x5                   	// #5
   1b054:	mov	x0, xzr
   1b058:	bl	acd0 <dcgettext@plt>
   1b05c:	mov	x6, x0
   1b060:	mov	w0, #0x1                   	// #1
   1b064:	mov	x4, #0xffffffffffffffff    	// #-1
   1b068:	mov	x1, x19
   1b06c:	mov	x2, x21
   1b070:	mov	x3, x22
   1b074:	mov	w5, wzr
   1b078:	blr	x23
   1b07c:	add	w24, w24, #0x1
   1b080:	ldp	w8, w21, [x29, #-8]
   1b084:	cbz	w8, 1b0c8 <check_message@@Base+0x5ec>
   1b088:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   1b08c:	str	x19, [x8, #1096]
   1b090:	ldr	q0, [x20]
   1b094:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   1b098:	add	x8, x8, #0x450
   1b09c:	ldp	x3, x6, [sp, #8]
   1b0a0:	str	q0, [x8]
   1b0a4:	ldur	x5, [x19, #204]
   1b0a8:	adrp	x7, 1b000 <check_message@@Base+0x524>
   1b0ac:	add	x4, x19, #0x5c
   1b0b0:	add	x7, x7, #0xb84
   1b0b4:	mov	x0, x26
   1b0b8:	mov	x1, x27
   1b0bc:	mov	x2, x25
   1b0c0:	bl	a7c0 <check_msgid_msgstr_format@plt>
   1b0c4:	add	w24, w0, w24
   1b0c8:	cbz	w21, 1b1b0 <check_message@@Base+0x6d4>
   1b0cc:	cbnz	x27, 1b1b0 <check_message@@Base+0x6d4>
   1b0d0:	ldrb	w22, [x29, #96]
   1b0d4:	mov	x0, x26
   1b0d8:	and	w21, w22, #0xff
   1b0dc:	mov	w1, w21
   1b0e0:	bl	aa80 <strchr@plt>
   1b0e4:	cbz	x0, 1b1b0 <check_message@@Base+0x6d4>
   1b0e8:	add	x0, x0, #0x1
   1b0ec:	mov	w1, w21
   1b0f0:	bl	aa80 <strchr@plt>
   1b0f4:	cbnz	x0, 1b1b0 <check_message@@Base+0x6d4>
   1b0f8:	mov	x0, x25
   1b0fc:	mov	w1, w21
   1b100:	bl	aa80 <strchr@plt>
   1b104:	cbz	x0, 1b13c <check_message@@Base+0x660>
   1b108:	mov	w23, wzr
   1b10c:	mov	x8, x0
   1b110:	ldrb	w9, [x8, #1]!
   1b114:	mov	w1, w21
   1b118:	cmp	w9, w22, uxtb
   1b11c:	csel	x8, x8, x0, eq  // eq = none
   1b120:	add	x0, x8, #0x1
   1b124:	cinc	w23, w23, ne  // ne = any
   1b128:	bl	aa80 <strchr@plt>
   1b12c:	cbnz	x0, 1b10c <check_message@@Base+0x630>
   1b130:	cmp	w23, #0x1
   1b134:	b.eq	1b1b0 <check_message@@Base+0x6d4>  // b.none
   1b138:	cbnz	w23, 1b15c <check_message@@Base+0x680>
   1b13c:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1b140:	add	x1, x1, #0x6ee
   1b144:	b	1b164 <check_message@@Base+0x688>
   1b148:	ldp	w8, w21, [x29, #-8]
   1b14c:	ldr	x25, [sp, #32]
   1b150:	ldp	x27, x26, [x29, #-24]
   1b154:	cbnz	w8, 1b088 <check_message@@Base+0x5ac>
   1b158:	b	1b0c8 <check_message@@Base+0x5ec>
   1b15c:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1b160:	add	x1, x1, #0x71e
   1b164:	mov	w2, #0x5                   	// #5
   1b168:	mov	x0, xzr
   1b16c:	bl	acd0 <dcgettext@plt>
   1b170:	mov	w1, w21
   1b174:	bl	aa20 <xasprintf@plt>
   1b178:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1b17c:	ldr	x8, [x8, #3736]
   1b180:	ldp	x2, x3, [x20]
   1b184:	mov	x20, x0
   1b188:	mov	w0, #0x1                   	// #1
   1b18c:	ldr	x8, [x8]
   1b190:	mov	x4, #0xffffffffffffffff    	// #-1
   1b194:	mov	x1, x19
   1b198:	mov	w5, wzr
   1b19c:	mov	x6, x20
   1b1a0:	blr	x8
   1b1a4:	mov	x0, x20
   1b1a8:	bl	aa00 <free@plt>
   1b1ac:	add	w24, w24, #0x1
   1b1b0:	mov	w0, w24
   1b1b4:	ldp	x20, x19, [sp, #144]
   1b1b8:	ldp	x22, x21, [sp, #128]
   1b1bc:	ldp	x24, x23, [sp, #112]
   1b1c0:	ldp	x26, x25, [sp, #96]
   1b1c4:	ldp	x28, x27, [sp, #80]
   1b1c8:	ldp	x29, x30, [sp, #64]
   1b1cc:	add	sp, sp, #0xa0
   1b1d0:	ret

000000000001b1d4 <check_message_list@@Base>:
   1b1d4:	sub	sp, sp, #0x170
   1b1d8:	stp	x29, x30, [sp, #272]
   1b1dc:	stp	x28, x27, [sp, #288]
   1b1e0:	stp	x26, x25, [sp, #304]
   1b1e4:	stp	x24, x23, [sp, #320]
   1b1e8:	stp	x22, x21, [sp, #336]
   1b1ec:	add	x29, sp, #0x110
   1b1f0:	mov	w21, w7
   1b1f4:	mov	w24, w6
   1b1f8:	mov	w28, w5
   1b1fc:	mov	w23, w4
   1b200:	mov	w27, w3
   1b204:	mov	w25, w1
   1b208:	mov	x26, x0
   1b20c:	movi	v0.2d, #0x0
   1b210:	stp	x20, x19, [sp, #352]
   1b214:	stur	w2, [x29, #-116]
   1b218:	stp	q0, q0, [x29, #-112]
   1b21c:	cbz	w5, 1b33c <check_message_list@@Base+0x168>
   1b220:	stp	w23, w27, [sp, #116]
   1b224:	stp	w28, w24, [sp, #104]
   1b228:	stp	q0, q0, [x29, #-48]
   1b22c:	ldr	x27, [x26, #8]
   1b230:	str	w21, [sp, #112]
   1b234:	cbz	x27, 1b344 <check_message_list@@Base+0x170>
   1b238:	ldr	x21, [x26]
   1b23c:	mov	x10, xzr
   1b240:	mov	x24, xzr
   1b244:	mov	x23, xzr
   1b248:	mov	x22, xzr
   1b24c:	mov	x28, xzr
   1b250:	mov	x8, #0xffffffffffffffff    	// #-1
   1b254:	stur	x8, [x29, #-128]
   1b258:	str	x26, [sp, #128]
   1b25c:	str	w25, [sp, #124]
   1b260:	ldr	x19, [x21, x28, lsl #3]
   1b264:	ldrb	w8, [x19, #256]
   1b268:	cbz	w8, 1b27c <check_message_list@@Base+0xa8>
   1b26c:	add	x28, x28, #0x1
   1b270:	cmp	x28, x27
   1b274:	b.ne	1b260 <check_message_list@@Base+0x8c>  // b.any
   1b278:	b	1b35c <check_message_list@@Base+0x188>
   1b27c:	cbz	w25, 1b28c <check_message_list@@Base+0xb8>
   1b280:	ldr	x8, [x19, #24]
   1b284:	ldrb	w8, [x8]
   1b288:	cbz	w8, 1b26c <check_message_list@@Base+0x98>
   1b28c:	ldur	w8, [x29, #-116]
   1b290:	cbz	w8, 1b2b0 <check_message_list@@Base+0xdc>
   1b294:	ldrb	w8, [x19, #88]
   1b298:	cbz	w8, 1b2b0 <check_message_list@@Base+0xdc>
   1b29c:	ldr	x8, [x19]
   1b2a0:	cbnz	x8, 1b26c <check_message_list@@Base+0x98>
   1b2a4:	ldr	x8, [x19, #8]
   1b2a8:	ldrb	w8, [x8]
   1b2ac:	cbnz	w8, 1b26c <check_message_list@@Base+0x98>
   1b2b0:	ldr	x8, [x19, #16]
   1b2b4:	cbz	x8, 1b26c <check_message_list@@Base+0x98>
   1b2b8:	ldr	x8, [x19, #32]
   1b2bc:	cmp	x10, #0x0
   1b2c0:	mov	x26, x24
   1b2c4:	mov	x25, x22
   1b2c8:	csel	x10, x19, x10, eq  // eq = none
   1b2cc:	cmp	x8, #0x1
   1b2d0:	str	x10, [sp, #136]
   1b2d4:	b.lt	1b304 <check_message_list@@Base+0x130>  // b.tstop
   1b2d8:	ldr	x22, [x19, #24]
   1b2dc:	mov	x20, xzr
   1b2e0:	add	x24, x22, x8
   1b2e4:	mov	x0, x22
   1b2e8:	add	x20, x20, #0x1
   1b2ec:	bl	a0d0 <strlen@plt>
   1b2f0:	add	x8, x0, x22
   1b2f4:	add	x22, x8, #0x1
   1b2f8:	cmp	x22, x24
   1b2fc:	b.cc	1b2e4 <check_message_list@@Base+0x110>  // b.lo, b.ul, b.last
   1b300:	b	1b308 <check_message_list@@Base+0x134>
   1b304:	mov	x20, xzr
   1b308:	ldur	x8, [x29, #-128]
   1b30c:	mov	x24, x26
   1b310:	mov	x22, x25
   1b314:	cmp	x8, x20
   1b318:	csel	x24, x19, x26, hi  // hi = pmore
   1b31c:	csel	x8, x20, x8, hi  // hi = pmore
   1b320:	cmp	x23, x20
   1b324:	csel	x22, x19, x25, cc  // cc = lo, ul, last
   1b328:	ldr	w25, [sp, #124]
   1b32c:	ldp	x26, x10, [sp, #128]
   1b330:	csel	x23, x20, x23, cc  // cc = lo, ul, last
   1b334:	stur	x8, [x29, #-128]
   1b338:	b	1b26c <check_message_list@@Base+0x98>
   1b33c:	mov	w22, wzr
   1b340:	b	1b43c <check_message_list@@Base+0x268>
   1b344:	mov	x8, #0xffffffffffffffff    	// #-1
   1b348:	mov	x22, xzr
   1b34c:	mov	x23, xzr
   1b350:	mov	x24, xzr
   1b354:	mov	x10, xzr
   1b358:	stur	x8, [x29, #-128]
   1b35c:	adrp	x2, 37000 <get_search_path@@Base+0xb4c>
   1b360:	add	x2, x2, #0x1a2
   1b364:	mov	x0, x26
   1b368:	mov	x1, xzr
   1b36c:	str	x23, [sp, #136]
   1b370:	mov	x19, x10
   1b374:	bl	ae40 <message_list_search@plt>
   1b378:	cbz	x0, 1b388 <check_message_list@@Base+0x1b4>
   1b37c:	ldrb	w8, [x0, #256]
   1b380:	mov	x23, x0
   1b384:	cbz	w8, 1b4ec <check_message_list@@Base+0x318>
   1b388:	ldp	w24, w21, [sp, #108]
   1b38c:	ldr	w28, [sp, #104]
   1b390:	ldr	w27, [sp, #120]
   1b394:	cbz	x19, 1b3e4 <check_message_list@@Base+0x210>
   1b398:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1b39c:	ldr	x8, [x8, #3736]
   1b3a0:	mov	x20, x19
   1b3a4:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1b3a8:	add	x1, x1, #0x8ec
   1b3ac:	ldr	x19, [x8]
   1b3b0:	mov	w2, #0x5                   	// #5
   1b3b4:	mov	x0, xzr
   1b3b8:	bl	acd0 <dcgettext@plt>
   1b3bc:	mov	x6, x0
   1b3c0:	mov	w0, #0x1                   	// #1
   1b3c4:	mov	x1, x20
   1b3c8:	mov	x2, xzr
   1b3cc:	mov	x3, xzr
   1b3d0:	mov	x4, xzr
   1b3d4:	mov	w5, wzr
   1b3d8:	mov	w22, #0x1                   	// #1
   1b3dc:	blr	x19
   1b3e0:	b	1b3e8 <check_message_list@@Base+0x214>
   1b3e4:	mov	w22, wzr
   1b3e8:	ldr	w23, [sp, #116]
   1b3ec:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1b3f0:	ldr	x8, [x8, #3712]
   1b3f4:	mov	w0, #0x2                   	// #2
   1b3f8:	mov	w1, #0x1                   	// #1
   1b3fc:	mov	w19, #0x2                   	// #2
   1b400:	stur	x8, [x29, #-48]
   1b404:	mov	w20, #0x1                   	// #1
   1b408:	bl	aea0 <xcalloc@plt>
   1b40c:	adrp	x8, 1a000 <catenate_msgdomain_list@@Base+0x12bc>
   1b410:	add	x8, x8, #0xa40
   1b414:	strb	w20, [x0, #1]
   1b418:	stp	x0, x19, [x29, #-40]
   1b41c:	stur	x8, [x29, #-24]
   1b420:	cmp	w22, #0x1
   1b424:	b.lt	1b434 <check_message_list@@Base+0x260>  // b.tstop
   1b428:	ldur	x0, [x29, #-40]
   1b42c:	bl	aa00 <free@plt>
   1b430:	b	1b43c <check_message_list@@Base+0x268>
   1b434:	ldp	q0, q1, [x29, #-48]
   1b438:	stp	q0, q1, [x29, #-112]
   1b43c:	ldr	x8, [x26, #8]
   1b440:	cbz	x8, 1b4c8 <check_message_list@@Base+0x2f4>
   1b444:	ldrb	w19, [x29, #96]
   1b448:	mov	x20, xzr
   1b44c:	ldr	x9, [x26]
   1b450:	ldr	x0, [x9, x20, lsl #3]
   1b454:	ldrb	w9, [x0, #256]
   1b458:	cbnz	w9, 1b4bc <check_message_list@@Base+0x2e8>
   1b45c:	cbz	w25, 1b46c <check_message_list@@Base+0x298>
   1b460:	ldr	x9, [x0, #24]
   1b464:	ldrb	w9, [x9]
   1b468:	cbz	w9, 1b4bc <check_message_list@@Base+0x2e8>
   1b46c:	ldur	w9, [x29, #-116]
   1b470:	cbz	w9, 1b490 <check_message_list@@Base+0x2bc>
   1b474:	ldrb	w9, [x0, #88]
   1b478:	cbz	w9, 1b490 <check_message_list@@Base+0x2bc>
   1b47c:	ldr	x9, [x0]
   1b480:	cbnz	x9, 1b4bc <check_message_list@@Base+0x2e8>
   1b484:	ldr	x9, [x0, #8]
   1b488:	ldrb	w9, [x9]
   1b48c:	cbnz	w9, 1b4bc <check_message_list@@Base+0x2e8>
   1b490:	add	x1, x0, #0x28
   1b494:	sub	x4, x29, #0x70
   1b498:	mov	w2, w27
   1b49c:	mov	w3, w23
   1b4a0:	mov	w5, w28
   1b4a4:	mov	w6, w24
   1b4a8:	mov	w7, w21
   1b4ac:	strb	w19, [sp]
   1b4b0:	bl	ab20 <check_message@plt>
   1b4b4:	ldr	x8, [x26, #8]
   1b4b8:	add	w22, w0, w22
   1b4bc:	add	x20, x20, #0x1
   1b4c0:	cmp	x20, x8
   1b4c4:	b.cc	1b44c <check_message_list@@Base+0x278>  // b.lo, b.ul, b.last
   1b4c8:	mov	w0, w22
   1b4cc:	ldp	x20, x19, [sp, #352]
   1b4d0:	ldp	x22, x21, [sp, #336]
   1b4d4:	ldp	x24, x23, [sp, #320]
   1b4d8:	ldp	x26, x25, [sp, #304]
   1b4dc:	ldp	x28, x27, [sp, #288]
   1b4e0:	ldp	x29, x30, [sp, #272]
   1b4e4:	add	sp, sp, #0x170
   1b4e8:	ret
   1b4ec:	stp	x22, x24, [sp, #72]
   1b4f0:	ldr	x21, [x23, #24]
   1b4f4:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1b4f8:	add	x1, x1, #0x752
   1b4fc:	mov	x0, x21
   1b500:	bl	ad20 <c_strstr@plt>
   1b504:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1b508:	mov	x20, x0
   1b50c:	add	x1, x1, #0x75a
   1b510:	mov	x0, x21
   1b514:	str	x21, [sp, #96]
   1b518:	bl	ad20 <c_strstr@plt>
   1b51c:	ldp	w24, w21, [sp, #108]
   1b520:	ldr	w28, [sp, #104]
   1b524:	ldr	w27, [sp, #120]
   1b528:	mov	w22, wzr
   1b52c:	str	x20, [sp, #88]
   1b530:	cbz	x19, 1b634 <check_message_list@@Base+0x460>
   1b534:	cbnz	x20, 1b634 <check_message_list@@Base+0x460>
   1b538:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1b53c:	str	x0, [sp, #56]
   1b540:	add	x1, x1, #0x764
   1b544:	mov	w2, #0x5                   	// #5
   1b548:	mov	x0, xzr
   1b54c:	bl	acd0 <dcgettext@plt>
   1b550:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1b554:	str	x0, [sp, #64]
   1b558:	add	x1, x1, #0x791
   1b55c:	mov	w2, #0x5                   	// #5
   1b560:	mov	x0, xzr
   1b564:	bl	acd0 <dcgettext@plt>
   1b568:	mov	x22, x0
   1b56c:	ldr	x0, [sp, #96]
   1b570:	bl	1bc68 <syntax_check_message_list@@Base+0x1b8>
   1b574:	cbz	x0, 1b5ec <check_message_list@@Base+0x418>
   1b578:	mov	x20, x0
   1b57c:	adrp	x0, 38000 <get_search_path@@Base+0x1b4c>
   1b580:	add	x0, x0, #0x7c8
   1b584:	mov	x1, x22
   1b588:	mov	x2, x20
   1b58c:	bl	aa20 <xasprintf@plt>
   1b590:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1b594:	ldr	x8, [x8, #4056]
   1b598:	ldr	x6, [sp, #64]
   1b59c:	str	x0, [sp, #48]
   1b5a0:	str	x0, [sp, #32]
   1b5a4:	ldr	x8, [x8]
   1b5a8:	mov	w22, #0x1                   	// #1
   1b5ac:	mov	w0, #0x1                   	// #1
   1b5b0:	mov	x1, x19
   1b5b4:	mov	x2, xzr
   1b5b8:	mov	x3, xzr
   1b5bc:	mov	x4, xzr
   1b5c0:	mov	w5, wzr
   1b5c4:	mov	x7, x23
   1b5c8:	stp	xzr, xzr, [sp]
   1b5cc:	str	w22, [sp, #24]
   1b5d0:	str	xzr, [sp, #16]
   1b5d4:	blr	x8
   1b5d8:	ldr	x0, [sp, #48]
   1b5dc:	bl	aa00 <free@plt>
   1b5e0:	mov	x0, x20
   1b5e4:	bl	aa00 <free@plt>
   1b5e8:	b	1b630 <check_message_list@@Base+0x45c>
   1b5ec:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1b5f0:	ldr	x8, [x8, #4056]
   1b5f4:	ldr	x6, [sp, #64]
   1b5f8:	mov	w0, #0x1                   	// #1
   1b5fc:	mov	x1, x19
   1b600:	ldr	x8, [x8]
   1b604:	mov	x2, xzr
   1b608:	mov	x3, xzr
   1b60c:	mov	x4, xzr
   1b610:	mov	w5, wzr
   1b614:	mov	x7, x23
   1b618:	stp	xzr, xzr, [sp]
   1b61c:	str	x22, [sp, #32]
   1b620:	str	wzr, [sp, #24]
   1b624:	str	xzr, [sp, #16]
   1b628:	mov	w22, #0x1                   	// #1
   1b62c:	blr	x8
   1b630:	ldr	x0, [sp, #56]
   1b634:	cbz	x19, 1b6e8 <check_message_list@@Base+0x514>
   1b638:	cbnz	x0, 1b6e8 <check_message_list@@Base+0x514>
   1b63c:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1b640:	add	x1, x1, #0x764
   1b644:	mov	w2, #0x5                   	// #5
   1b648:	bl	acd0 <dcgettext@plt>
   1b64c:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1b650:	stur	x0, [x29, #-128]
   1b654:	add	x1, x1, #0x7ce
   1b658:	mov	w2, #0x5                   	// #5
   1b65c:	mov	x0, xzr
   1b660:	bl	acd0 <dcgettext@plt>
   1b664:	mov	x27, x0
   1b668:	ldr	x0, [sp, #96]
   1b66c:	bl	1bc68 <syntax_check_message_list@@Base+0x1b8>
   1b670:	cbz	x0, 1b74c <check_message_list@@Base+0x578>
   1b674:	mov	x20, x0
   1b678:	adrp	x0, 38000 <get_search_path@@Base+0x1b4c>
   1b67c:	add	x0, x0, #0x7c8
   1b680:	mov	x1, x27
   1b684:	mov	x2, x20
   1b688:	bl	aa20 <xasprintf@plt>
   1b68c:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1b690:	ldr	x8, [x8, #4056]
   1b694:	ldur	x6, [x29, #-128]
   1b698:	mov	x27, x0
   1b69c:	str	x0, [sp, #32]
   1b6a0:	ldr	x8, [x8]
   1b6a4:	mov	w9, #0x1                   	// #1
   1b6a8:	mov	w0, #0x1                   	// #1
   1b6ac:	mov	x1, x19
   1b6b0:	mov	x2, xzr
   1b6b4:	mov	x3, xzr
   1b6b8:	mov	x4, xzr
   1b6bc:	mov	w5, wzr
   1b6c0:	mov	x7, x23
   1b6c4:	stp	xzr, xzr, [sp]
   1b6c8:	str	w9, [sp, #24]
   1b6cc:	str	xzr, [sp, #16]
   1b6d0:	blr	x8
   1b6d4:	mov	x0, x27
   1b6d8:	bl	aa00 <free@plt>
   1b6dc:	mov	x0, x20
   1b6e0:	bl	aa00 <free@plt>
   1b6e4:	b	1b78c <check_message_list@@Base+0x5b8>
   1b6e8:	ldr	x19, [sp, #88]
   1b6ec:	cbz	x19, 1b3e8 <check_message_list@@Base+0x214>
   1b6f0:	cbz	x0, 1b3e8 <check_message_list@@Base+0x214>
   1b6f4:	str	x23, [sp, #64]
   1b6f8:	add	x23, x0, #0x9
   1b6fc:	ldrb	w8, [x23]
   1b700:	sub	w9, w8, #0x9
   1b704:	cmp	w9, #0x5
   1b708:	b.cs	1b714 <check_message_list@@Base+0x540>  // b.hs, b.nlast
   1b70c:	add	x23, x23, #0x1
   1b710:	b	1b6fc <check_message_list@@Base+0x528>
   1b714:	cmp	w8, #0x20
   1b718:	b.eq	1b70c <check_message_list@@Base+0x538>  // b.none
   1b71c:	stur	x23, [x29, #-56]
   1b720:	ldrb	w8, [x23]
   1b724:	sub	w8, w8, #0x30
   1b728:	cmp	w8, #0x9
   1b72c:	b.hi	1b798 <check_message_list@@Base+0x5c4>  // b.pmore
   1b730:	sub	x1, x29, #0x38
   1b734:	mov	w2, #0xa                   	// #10
   1b738:	mov	x0, x23
   1b73c:	bl	a0c0 <strtoul@plt>
   1b740:	ldur	x8, [x29, #-56]
   1b744:	mov	x20, x0
   1b748:	b	1b7a0 <check_message_list@@Base+0x5cc>
   1b74c:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1b750:	ldr	x8, [x8, #4056]
   1b754:	ldur	x6, [x29, #-128]
   1b758:	mov	w0, #0x1                   	// #1
   1b75c:	mov	x1, x19
   1b760:	ldr	x8, [x8]
   1b764:	mov	x2, xzr
   1b768:	mov	x3, xzr
   1b76c:	mov	x4, xzr
   1b770:	mov	w5, wzr
   1b774:	mov	x7, x23
   1b778:	stp	xzr, xzr, [sp]
   1b77c:	str	x27, [sp, #32]
   1b780:	str	wzr, [sp, #24]
   1b784:	str	xzr, [sp, #16]
   1b788:	blr	x8
   1b78c:	ldp	w23, w27, [sp, #116]
   1b790:	add	w22, w22, #0x1
   1b794:	b	1b3ec <check_message_list@@Base+0x218>
   1b798:	mov	x20, xzr
   1b79c:	mov	x8, x23
   1b7a0:	cmp	x8, x23
   1b7a4:	b.eq	1b7b0 <check_message_list@@Base+0x5dc>  // b.none
   1b7a8:	ldr	w23, [sp, #116]
   1b7ac:	b	1b868 <check_message_list@@Base+0x694>
   1b7b0:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1b7b4:	add	x1, x1, #0x804
   1b7b8:	mov	w2, #0x5                   	// #5
   1b7bc:	mov	x0, xzr
   1b7c0:	bl	acd0 <dcgettext@plt>
   1b7c4:	str	x0, [sp, #56]
   1b7c8:	ldr	x0, [sp, #96]
   1b7cc:	bl	1bc68 <syntax_check_message_list@@Base+0x1b8>
   1b7d0:	cbz	x0, 1b838 <check_message_list@@Base+0x664>
   1b7d4:	ldr	x1, [sp, #56]
   1b7d8:	mov	x23, x0
   1b7dc:	adrp	x0, 38000 <get_search_path@@Base+0x1b4c>
   1b7e0:	add	x0, x0, #0x7c8
   1b7e4:	mov	x2, x23
   1b7e8:	bl	aa20 <xasprintf@plt>
   1b7ec:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1b7f0:	ldr	x8, [x8, #3736]
   1b7f4:	ldr	x1, [sp, #64]
   1b7f8:	mov	x6, x0
   1b7fc:	mov	w0, #0x1                   	// #1
   1b800:	ldr	x8, [x8]
   1b804:	mov	w5, #0x1                   	// #1
   1b808:	mov	x2, xzr
   1b80c:	mov	x3, xzr
   1b810:	mov	x4, xzr
   1b814:	str	x20, [sp, #56]
   1b818:	mov	x20, x6
   1b81c:	blr	x8
   1b820:	mov	x0, x20
   1b824:	ldr	x20, [sp, #56]
   1b828:	bl	aa00 <free@plt>
   1b82c:	mov	x0, x23
   1b830:	bl	aa00 <free@plt>
   1b834:	b	1b860 <check_message_list@@Base+0x68c>
   1b838:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1b83c:	ldr	x8, [x8, #3736]
   1b840:	ldp	x6, x1, [sp, #56]
   1b844:	mov	w0, #0x1                   	// #1
   1b848:	mov	x2, xzr
   1b84c:	ldr	x8, [x8]
   1b850:	mov	x3, xzr
   1b854:	mov	x4, xzr
   1b858:	mov	w5, wzr
   1b85c:	blr	x8
   1b860:	ldr	w23, [sp, #116]
   1b864:	add	w22, w22, #0x1
   1b868:	add	x8, x19, #0x7
   1b86c:	sub	x0, x29, #0x48
   1b870:	stur	x8, [x29, #-72]
   1b874:	bl	a340 <parse_plural_expression@plt>
   1b878:	cbz	w0, 1b930 <check_message_list@@Base+0x75c>
   1b87c:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1b880:	add	x1, x1, #0x81b
   1b884:	mov	w2, #0x5                   	// #5
   1b888:	mov	x0, xzr
   1b88c:	bl	acd0 <dcgettext@plt>
   1b890:	mov	x19, x0
   1b894:	ldr	x0, [sp, #96]
   1b898:	bl	1bc68 <syntax_check_message_list@@Base+0x1b8>
   1b89c:	cbz	x0, 1b8fc <check_message_list@@Base+0x728>
   1b8a0:	mov	x23, x0
   1b8a4:	adrp	x0, 38000 <get_search_path@@Base+0x1b4c>
   1b8a8:	add	x0, x0, #0x7c8
   1b8ac:	mov	x1, x19
   1b8b0:	mov	x2, x23
   1b8b4:	bl	aa20 <xasprintf@plt>
   1b8b8:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1b8bc:	ldr	x8, [x8, #3736]
   1b8c0:	ldr	x1, [sp, #64]
   1b8c4:	mov	x19, x0
   1b8c8:	mov	w0, #0x1                   	// #1
   1b8cc:	ldr	x8, [x8]
   1b8d0:	mov	w5, #0x1                   	// #1
   1b8d4:	mov	x2, xzr
   1b8d8:	mov	x3, xzr
   1b8dc:	mov	x4, xzr
   1b8e0:	mov	x6, x19
   1b8e4:	blr	x8
   1b8e8:	mov	x0, x19
   1b8ec:	bl	aa00 <free@plt>
   1b8f0:	mov	x0, x23
   1b8f4:	bl	aa00 <free@plt>
   1b8f8:	b	1b928 <check_message_list@@Base+0x754>
   1b8fc:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1b900:	ldr	x8, [x8, #3736]
   1b904:	ldr	x1, [sp, #64]
   1b908:	mov	w0, #0x1                   	// #1
   1b90c:	mov	x2, xzr
   1b910:	ldr	x8, [x8]
   1b914:	mov	x3, xzr
   1b918:	mov	x4, xzr
   1b91c:	mov	w5, wzr
   1b920:	mov	x6, x19
   1b924:	blr	x8
   1b928:	ldr	w23, [sp, #116]
   1b92c:	add	w22, w22, #0x1
   1b930:	cbnz	w22, 1b420 <check_message_list@@Base+0x24c>
   1b934:	ldur	x0, [x29, #-64]
   1b938:	ldr	x2, [sp, #64]
   1b93c:	sub	x3, x29, #0x30
   1b940:	mov	x1, x20
   1b944:	bl	a130 <check_plural_eval@plt>
   1b948:	mov	w22, w0
   1b94c:	cbnz	w0, 1b420 <check_message_list@@Base+0x24c>
   1b950:	ldur	x22, [x29, #-128]
   1b954:	cmp	x22, x20
   1b958:	b.cs	1b9fc <check_message_list@@Base+0x828>  // b.hs, b.nlast
   1b95c:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1b960:	add	x1, x1, #0x835
   1b964:	mov	w2, #0x5                   	// #5
   1b968:	mov	x0, xzr
   1b96c:	bl	acd0 <dcgettext@plt>
   1b970:	mov	x1, x20
   1b974:	bl	aa20 <xasprintf@plt>
   1b978:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1b97c:	adrp	x2, 38000 <get_search_path@@Base+0x1b4c>
   1b980:	mov	x19, x0
   1b984:	add	x1, x1, #0x844
   1b988:	add	x2, x2, #0x870
   1b98c:	mov	w4, #0x5                   	// #5
   1b990:	mov	x0, xzr
   1b994:	mov	x3, x22
   1b998:	bl	ab40 <dcngettext@plt>
   1b99c:	mov	x1, x22
   1b9a0:	bl	aa20 <xasprintf@plt>
   1b9a4:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1b9a8:	ldr	x8, [x8, #4056]
   1b9ac:	ldr	x1, [sp, #64]
   1b9b0:	ldr	x7, [sp, #80]
   1b9b4:	mov	x20, x0
   1b9b8:	ldr	x8, [x8]
   1b9bc:	str	x0, [sp, #32]
   1b9c0:	mov	w0, #0x1                   	// #1
   1b9c4:	mov	x2, xzr
   1b9c8:	mov	x3, xzr
   1b9cc:	mov	x4, xzr
   1b9d0:	mov	w5, wzr
   1b9d4:	mov	x6, x19
   1b9d8:	stp	xzr, xzr, [sp]
   1b9dc:	str	wzr, [sp, #24]
   1b9e0:	str	xzr, [sp, #16]
   1b9e4:	mov	w22, #0x1                   	// #1
   1b9e8:	blr	x8
   1b9ec:	mov	x0, x20
   1b9f0:	bl	aa00 <free@plt>
   1b9f4:	mov	x0, x19
   1b9f8:	b	1baa0 <check_message_list@@Base+0x8cc>
   1b9fc:	ldr	x19, [sp, #136]
   1ba00:	cmp	x19, x20
   1ba04:	b.ls	1baa8 <check_message_list@@Base+0x8d4>  // b.plast
   1ba08:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1ba0c:	add	x1, x1, #0x835
   1ba10:	mov	w2, #0x5                   	// #5
   1ba14:	mov	x0, xzr
   1ba18:	bl	acd0 <dcgettext@plt>
   1ba1c:	mov	x1, x20
   1ba20:	bl	aa20 <xasprintf@plt>
   1ba24:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1ba28:	adrp	x2, 38000 <get_search_path@@Base+0x1b4c>
   1ba2c:	mov	x20, x0
   1ba30:	add	x1, x1, #0x89d
   1ba34:	add	x2, x2, #0x8c4
   1ba38:	mov	w4, #0x5                   	// #5
   1ba3c:	mov	x0, xzr
   1ba40:	mov	x3, x19
   1ba44:	bl	ab40 <dcngettext@plt>
   1ba48:	mov	x1, x19
   1ba4c:	bl	aa20 <xasprintf@plt>
   1ba50:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1ba54:	ldr	x8, [x8, #4056]
   1ba58:	ldp	x1, x7, [sp, #64]
   1ba5c:	mov	x19, x0
   1ba60:	str	x0, [sp, #32]
   1ba64:	ldr	x8, [x8]
   1ba68:	mov	w0, #0x1                   	// #1
   1ba6c:	mov	x2, xzr
   1ba70:	mov	x3, xzr
   1ba74:	mov	x4, xzr
   1ba78:	mov	w5, wzr
   1ba7c:	mov	x6, x20
   1ba80:	stp	xzr, xzr, [sp]
   1ba84:	str	wzr, [sp, #24]
   1ba88:	str	xzr, [sp, #16]
   1ba8c:	mov	w22, #0x1                   	// #1
   1ba90:	blr	x8
   1ba94:	mov	x0, x19
   1ba98:	bl	aa00 <free@plt>
   1ba9c:	mov	x0, x20
   1baa0:	bl	aa00 <free@plt>
   1baa4:	b	1b420 <check_message_list@@Base+0x24c>
   1baa8:	mov	w22, wzr
   1baac:	b	1b420 <check_message_list@@Base+0x24c>

000000000001bab0 <syntax_check_message_list@@Base>:
   1bab0:	stp	x29, x30, [sp, #-80]!
   1bab4:	stp	x26, x25, [sp, #16]
   1bab8:	stp	x24, x23, [sp, #32]
   1babc:	stp	x22, x21, [sp, #48]
   1bac0:	stp	x20, x19, [sp, #64]
   1bac4:	ldr	x8, [x0, #8]
   1bac8:	mov	x29, sp
   1bacc:	cbz	x8, 1bb64 <syntax_check_message_list@@Base+0xb4>
   1bad0:	adrp	x23, 4c000 <plural_table_size@@Base+0x12c00>
   1bad4:	mov	x20, x0
   1bad8:	mov	w19, wzr
   1badc:	mov	x22, xzr
   1bae0:	add	x23, x23, #0xbe0
   1bae4:	ldr	x9, [x20]
   1bae8:	ldr	x21, [x9, x22, lsl #3]
   1baec:	ldr	x9, [x21]
   1baf0:	cbnz	x9, 1bb00 <syntax_check_message_list@@Base+0x50>
   1baf4:	ldr	x9, [x21, #8]
   1baf8:	ldrb	w9, [x9]
   1bafc:	cbz	w9, 1bb54 <syntax_check_message_list@@Base+0xa4>
   1bb00:	mov	x25, xzr
   1bb04:	mov	w24, wzr
   1bb08:	add	x8, x21, x25, lsl #2
   1bb0c:	ldr	w8, [x8, #216]
   1bb10:	cmp	w8, #0x1
   1bb14:	b.ne	1bb40 <syntax_check_message_list@@Base+0x90>  // b.any
   1bb18:	ldr	x26, [x23, x25, lsl #3]
   1bb1c:	ldr	x1, [x21, #8]
   1bb20:	mov	x0, x21
   1bb24:	blr	x26
   1bb28:	ldr	x1, [x21, #16]
   1bb2c:	add	w24, w0, w24
   1bb30:	cbz	x1, 1bb40 <syntax_check_message_list@@Base+0x90>
   1bb34:	mov	x0, x21
   1bb38:	blr	x26
   1bb3c:	add	w24, w0, w24
   1bb40:	add	x25, x25, #0x1
   1bb44:	cmp	x25, #0x4
   1bb48:	b.ne	1bb08 <syntax_check_message_list@@Base+0x58>  // b.any
   1bb4c:	ldr	x8, [x20, #8]
   1bb50:	add	w19, w24, w19
   1bb54:	add	x22, x22, #0x1
   1bb58:	cmp	x22, x8
   1bb5c:	b.cc	1bae4 <syntax_check_message_list@@Base+0x34>  // b.lo, b.ul, b.last
   1bb60:	b	1bb68 <syntax_check_message_list@@Base+0xb8>
   1bb64:	mov	w19, wzr
   1bb68:	mov	w0, w19
   1bb6c:	ldp	x20, x19, [sp, #64]
   1bb70:	ldp	x22, x21, [sp, #48]
   1bb74:	ldp	x24, x23, [sp, #32]
   1bb78:	ldp	x26, x25, [sp, #16]
   1bb7c:	ldp	x29, x30, [sp], #80
   1bb80:	ret
   1bb84:	sub	sp, sp, #0x120
   1bb88:	stp	x29, x30, [sp, #256]
   1bb8c:	add	x29, sp, #0x100
   1bb90:	sub	x10, x29, #0x78
   1bb94:	mov	x11, sp
   1bb98:	mov	x12, #0xffffffffffffffc8    	// #-56
   1bb9c:	add	x9, x29, #0x20
   1bba0:	movk	x12, #0xff80, lsl #32
   1bba4:	add	x10, x10, #0x38
   1bba8:	add	x11, x11, #0x80
   1bbac:	stp	x9, x10, [x29, #-32]
   1bbb0:	stp	x11, x12, [x29, #-16]
   1bbb4:	stp	x1, x2, [x29, #-120]
   1bbb8:	stp	x3, x4, [x29, #-104]
   1bbbc:	stp	x5, x6, [x29, #-88]
   1bbc0:	stur	x7, [x29, #-72]
   1bbc4:	stp	q0, q1, [sp]
   1bbc8:	ldp	q0, q1, [x29, #-32]
   1bbcc:	mov	x8, x0
   1bbd0:	add	x0, x29, #0x18
   1bbd4:	sub	x2, x29, #0x40
   1bbd8:	mov	x1, x8
   1bbdc:	str	x28, [sp, #272]
   1bbe0:	stp	q2, q3, [sp, #32]
   1bbe4:	stp	q4, q5, [sp, #64]
   1bbe8:	stp	q6, q7, [sp, #96]
   1bbec:	stp	q0, q1, [x29, #-64]
   1bbf0:	bl	aa40 <vasprintf@plt>
   1bbf4:	tbz	w0, #31, 1bc1c <syntax_check_message_list@@Base+0x16c>
   1bbf8:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
   1bbfc:	add	x1, x1, #0xb16
   1bc00:	mov	w2, #0x5                   	// #5
   1bc04:	mov	x0, xzr
   1bc08:	bl	acd0 <dcgettext@plt>
   1bc0c:	mov	x2, x0
   1bc10:	mov	w0, #0x1                   	// #1
   1bc14:	mov	w1, wzr
   1bc18:	bl	a140 <error@plt>
   1bc1c:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1bc20:	ldr	x8, [x8, #3736]
   1bc24:	adrp	x10, 4e000 <formatstring_gfc_internal@@Base+0x10>
   1bc28:	adrp	x9, 4e000 <formatstring_gfc_internal@@Base+0x10>
   1bc2c:	add	x10, x10, #0x450
   1bc30:	ldr	x8, [x8]
   1bc34:	ldr	x1, [x9, #1096]
   1bc38:	ldp	x2, x3, [x10]
   1bc3c:	ldr	x6, [x29, #24]
   1bc40:	mov	w0, #0x1                   	// #1
   1bc44:	mov	x4, #0xffffffffffffffff    	// #-1
   1bc48:	mov	w5, wzr
   1bc4c:	blr	x8
   1bc50:	ldr	x0, [x29, #24]
   1bc54:	bl	aa00 <free@plt>
   1bc58:	ldr	x28, [sp, #272]
   1bc5c:	ldp	x29, x30, [sp, #256]
   1bc60:	add	sp, sp, #0x120
   1bc64:	ret
   1bc68:	stp	x29, x30, [sp, #-80]!
   1bc6c:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1bc70:	add	x1, x1, #0x96d
   1bc74:	stp	x26, x25, [sp, #16]
   1bc78:	stp	x24, x23, [sp, #32]
   1bc7c:	stp	x22, x21, [sp, #48]
   1bc80:	stp	x20, x19, [sp, #64]
   1bc84:	mov	x29, sp
   1bc88:	mov	x19, x0
   1bc8c:	bl	ad20 <c_strstr@plt>
   1bc90:	adrp	x24, 4c000 <plural_table_size@@Base+0x12c00>
   1bc94:	ldr	x24, [x24, #3968]
   1bc98:	cbz	x0, 1bd04 <syntax_check_message_list@@Base+0x254>
   1bc9c:	add	x20, x0, #0xa
   1bca0:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   1bca4:	add	x1, x1, #0x19f
   1bca8:	mov	x0, x20
   1bcac:	bl	ada0 <strcspn@plt>
   1bcb0:	cbz	x0, 1bd04 <syntax_check_message_list@@Base+0x254>
   1bcb4:	ldr	x25, [x24]
   1bcb8:	cbz	x25, 1bd04 <syntax_check_message_list@@Base+0x254>
   1bcbc:	adrp	x23, 4c000 <plural_table_size@@Base+0x12c00>
   1bcc0:	ldr	x23, [x23, #3912]
   1bcc4:	mov	x21, x0
   1bcc8:	mov	x26, xzr
   1bccc:	ldr	x22, [x23]
   1bcd0:	mov	x0, x22
   1bcd4:	bl	a0d0 <strlen@plt>
   1bcd8:	cmp	x21, x0
   1bcdc:	b.ne	1bcf4 <syntax_check_message_list@@Base+0x244>  // b.any
   1bce0:	mov	x0, x20
   1bce4:	mov	x1, x22
   1bce8:	mov	x2, x21
   1bcec:	bl	a4d0 <strncmp@plt>
   1bcf0:	cbz	w0, 1bd68 <syntax_check_message_list@@Base+0x2b8>
   1bcf4:	add	x26, x26, #0x1
   1bcf8:	cmp	x26, x25
   1bcfc:	add	x23, x23, #0x18
   1bd00:	b.cc	1bccc <syntax_check_message_list@@Base+0x21c>  // b.lo, b.ul, b.last
   1bd04:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1bd08:	add	x1, x1, #0x978
   1bd0c:	mov	x0, x19
   1bd10:	bl	ad20 <c_strstr@plt>
   1bd14:	cbz	x0, 1bd60 <syntax_check_message_list@@Base+0x2b0>
   1bd18:	ldr	x21, [x24]
   1bd1c:	cbz	x21, 1bd60 <syntax_check_message_list@@Base+0x2b0>
   1bd20:	adrp	x23, 4c000 <plural_table_size@@Base+0x12c00>
   1bd24:	ldr	x23, [x23, #3912]
   1bd28:	mov	x22, xzr
   1bd2c:	add	x19, x0, #0xf
   1bd30:	ldr	x20, [x23, #8]
   1bd34:	mov	x0, x20
   1bd38:	bl	a0d0 <strlen@plt>
   1bd3c:	mov	x2, x0
   1bd40:	mov	x0, x19
   1bd44:	mov	x1, x20
   1bd48:	bl	a4d0 <strncmp@plt>
   1bd4c:	cbz	w0, 1bd68 <syntax_check_message_list@@Base+0x2b8>
   1bd50:	add	x22, x22, #0x1
   1bd54:	cmp	x22, x21
   1bd58:	add	x23, x23, #0x18
   1bd5c:	b.cc	1bd30 <syntax_check_message_list@@Base+0x280>  // b.lo, b.ul, b.last
   1bd60:	mov	x0, xzr
   1bd64:	b	1bdac <syntax_check_message_list@@Base+0x2fc>
   1bd68:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1bd6c:	add	x1, x1, #0x988
   1bd70:	mov	w2, #0x5                   	// #5
   1bd74:	mov	x0, xzr
   1bd78:	bl	acd0 <dcgettext@plt>
   1bd7c:	ldr	x1, [x23, #8]
   1bd80:	bl	aa20 <xasprintf@plt>
   1bd84:	ldr	x2, [x23, #16]
   1bd88:	mov	x19, x0
   1bd8c:	adrp	x0, 38000 <get_search_path@@Base+0x1b4c>
   1bd90:	add	x0, x0, #0x9af
   1bd94:	mov	x1, x19
   1bd98:	bl	aa20 <xasprintf@plt>
   1bd9c:	mov	x20, x0
   1bda0:	mov	x0, x19
   1bda4:	bl	aa00 <free@plt>
   1bda8:	mov	x0, x20
   1bdac:	ldp	x20, x19, [sp, #64]
   1bdb0:	ldp	x22, x21, [sp, #48]
   1bdb4:	ldp	x24, x23, [sp, #32]
   1bdb8:	ldp	x26, x25, [sp, #16]
   1bdbc:	ldp	x29, x30, [sp], #80
   1bdc0:	ret
   1bdc4:	sub	sp, sp, #0x70
   1bdc8:	stp	x20, x19, [sp, #96]
   1bdcc:	mov	x19, x0
   1bdd0:	mov	x0, x1
   1bdd4:	stp	x29, x30, [sp, #16]
   1bdd8:	stp	x28, x27, [sp, #32]
   1bddc:	stp	x26, x25, [sp, #48]
   1bde0:	stp	x24, x23, [sp, #64]
   1bde4:	stp	x22, x21, [sp, #80]
   1bde8:	add	x29, sp, #0x10
   1bdec:	mov	x23, x1
   1bdf0:	bl	a0d0 <strlen@plt>
   1bdf4:	cmp	x0, #0x1
   1bdf8:	b.lt	1beac <syntax_check_message_list@@Base+0x3fc>  // b.tstop
   1bdfc:	adrp	x28, 4c000 <plural_table_size@@Base+0x12c00>
   1be00:	ldr	x28, [x28, #3736]
   1be04:	adrp	x21, 38000 <get_search_path@@Base+0x1b4c>
   1be08:	mov	w20, wzr
   1be0c:	add	x24, x23, x0
   1be10:	mov	x25, #0xfffffffffffffffd    	// #-3
   1be14:	mov	w26, #0x2e2e                	// #11822
   1be18:	mov	w27, #0x2e                  	// #46
   1be1c:	add	x21, x21, #0x9c8
   1be20:	sub	x1, x29, #0x4
   1be24:	mov	x0, x23
   1be28:	bl	ad10 <sentence_end@plt>
   1be2c:	ldur	w8, [x29, #-4]
   1be30:	mov	x22, x0
   1be34:	cmp	w8, #0x2e
   1be38:	cinc	x8, x25, eq  // eq = none
   1be3c:	add	x8, x0, x8
   1be40:	cmp	x8, x23
   1be44:	b.cc	1be9c <syntax_check_message_list@@Base+0x3ec>  // b.lo, b.ul, b.last
   1be48:	ldrh	w9, [x8]
   1be4c:	ldrb	w8, [x8, #2]
   1be50:	eor	w9, w9, w26
   1be54:	eor	w8, w8, w27
   1be58:	orr	w8, w9, w8
   1be5c:	tst	w8, #0xffff
   1be60:	b.ne	1be9c <syntax_check_message_list@@Base+0x3ec>  // b.any
   1be64:	ldr	x23, [x28]
   1be68:	mov	w2, #0x5                   	// #5
   1be6c:	mov	x0, xzr
   1be70:	mov	x1, x21
   1be74:	bl	acd0 <dcgettext@plt>
   1be78:	mov	x6, x0
   1be7c:	mov	w0, #0x1                   	// #1
   1be80:	mov	x1, x19
   1be84:	mov	x2, xzr
   1be88:	mov	x3, xzr
   1be8c:	mov	x4, xzr
   1be90:	mov	w5, wzr
   1be94:	blr	x23
   1be98:	add	w20, w20, #0x1
   1be9c:	add	x23, x22, #0x1
   1bea0:	cmp	x23, x24
   1bea4:	b.cc	1be20 <syntax_check_message_list@@Base+0x370>  // b.lo, b.ul, b.last
   1bea8:	b	1beb0 <syntax_check_message_list@@Base+0x400>
   1beac:	mov	w20, wzr
   1beb0:	mov	w0, w20
   1beb4:	ldp	x20, x19, [sp, #96]
   1beb8:	ldp	x22, x21, [sp, #80]
   1bebc:	ldp	x24, x23, [sp, #64]
   1bec0:	ldp	x26, x25, [sp, #48]
   1bec4:	ldp	x28, x27, [sp, #32]
   1bec8:	ldp	x29, x30, [sp, #16]
   1becc:	add	sp, sp, #0x70
   1bed0:	ret
   1bed4:	sub	sp, sp, #0x80
   1bed8:	str	x0, [sp, #8]
   1bedc:	mov	x0, x1
   1bee0:	stp	x29, x30, [sp, #32]
   1bee4:	stp	x28, x27, [sp, #48]
   1bee8:	stp	x26, x25, [sp, #64]
   1beec:	stp	x24, x23, [sp, #80]
   1bef0:	stp	x22, x21, [sp, #96]
   1bef4:	stp	x20, x19, [sp, #112]
   1bef8:	add	x29, sp, #0x20
   1befc:	mov	x23, x1
   1bf00:	bl	a0d0 <strlen@plt>
   1bf04:	cmp	x0, #0x1
   1bf08:	b.lt	1c08c <syntax_check_message_list@@Base+0x5dc>  // b.tstop
   1bf0c:	mov	w20, wzr
   1bf10:	add	x25, x23, x0
   1bf14:	mov	w26, #0x2026                	// #8230
   1bf18:	mov	w27, #0xfffd                	// #65533
   1bf1c:	mov	w28, #0x2e2e                	// #11822
   1bf20:	mov	w21, #0x2e                  	// #46
   1bf24:	sub	x1, x29, #0x4
   1bf28:	mov	x0, x23
   1bf2c:	bl	ad10 <sentence_end@plt>
   1bf30:	ldur	w8, [x29, #-4]
   1bf34:	mov	x19, x0
   1bf38:	cmp	w8, w26
   1bf3c:	b.eq	1bf74 <syntax_check_message_list@@Base+0x4c4>  // b.none
   1bf40:	cmp	w8, #0x2e
   1bf44:	b.ne	1bf80 <syntax_check_message_list@@Base+0x4d0>  // b.any
   1bf48:	sub	x22, x19, #0x2
   1bf4c:	cmp	x22, x23
   1bf50:	b.cc	1c07c <syntax_check_message_list@@Base+0x5cc>  // b.lo, b.ul, b.last
   1bf54:	ldrh	w8, [x22]
   1bf58:	ldrb	w9, [x22, #2]
   1bf5c:	eor	w8, w8, w28
   1bf60:	eor	w9, w9, w21
   1bf64:	orr	w8, w8, w9
   1bf68:	tst	w8, #0xffff
   1bf6c:	b.ne	1c07c <syntax_check_message_list@@Base+0x5cc>  // b.any
   1bf70:	b	1bfec <syntax_check_message_list@@Base+0x53c>
   1bf74:	mov	x22, x19
   1bf78:	cbnz	x19, 1bfec <syntax_check_message_list@@Base+0x53c>
   1bf7c:	b	1c07c <syntax_check_message_list@@Base+0x5cc>
   1bf80:	sub	x22, x19, #0x3
   1bf84:	cmp	x22, x23
   1bf88:	b.cc	1bfa8 <syntax_check_message_list@@Base+0x4f8>  // b.lo, b.ul, b.last
   1bf8c:	ldrh	w8, [x22]
   1bf90:	ldrb	w9, [x22, #2]
   1bf94:	eor	w8, w8, w28
   1bf98:	eor	w9, w9, w21
   1bf9c:	orr	w8, w8, w9
   1bfa0:	tst	w8, #0xffff
   1bfa4:	b.eq	1bfec <syntax_check_message_list@@Base+0x53c>  // b.none
   1bfa8:	sub	x24, x19, #0x1
   1bfac:	stur	w27, [x29, #-8]
   1bfb0:	cmp	x24, x23
   1bfb4:	b.cc	1c07c <syntax_check_message_list@@Base+0x5cc>  // b.lo, b.ul, b.last
   1bfb8:	ldrsb	w8, [x24]
   1bfbc:	tbz	w8, #31, 1c07c <syntax_check_message_list@@Base+0x5cc>
   1bfc0:	sub	x2, x19, x24
   1bfc4:	sub	x0, x29, #0x8
   1bfc8:	mov	x1, x24
   1bfcc:	bl	a820 <u8_mbtouc_aux@plt>
   1bfd0:	ldur	w8, [x29, #-8]
   1bfd4:	sub	x24, x24, #0x1
   1bfd8:	cmp	w8, w27
   1bfdc:	b.eq	1bfb0 <syntax_check_message_list@@Base+0x500>  // b.none
   1bfe0:	cmp	w8, w26
   1bfe4:	b.ne	1c07c <syntax_check_message_list@@Base+0x5cc>  // b.any
   1bfe8:	add	x22, x24, #0x1
   1bfec:	sub	x24, x22, #0x1
   1bff0:	stur	w27, [x29, #-12]
   1bff4:	cmp	x24, x23
   1bff8:	b.cc	1c07c <syntax_check_message_list@@Base+0x5cc>  // b.lo, b.ul, b.last
   1bffc:	ldrsb	w8, [x24]
   1c000:	tbz	w8, #31, 1c028 <syntax_check_message_list@@Base+0x578>
   1c004:	sub	x2, x22, x24
   1c008:	sub	x0, x29, #0xc
   1c00c:	mov	x1, x24
   1c010:	bl	a820 <u8_mbtouc_aux@plt>
   1c014:	ldur	w0, [x29, #-12]
   1c018:	sub	x24, x24, #0x1
   1c01c:	cmp	w0, w27
   1c020:	b.eq	1bff4 <syntax_check_message_list@@Base+0x544>  // b.none
   1c024:	b	1c030 <syntax_check_message_list@@Base+0x580>
   1c028:	and	w0, w8, #0xff
   1c02c:	stur	w0, [x29, #-12]
   1c030:	bl	a6a0 <uc_is_space@plt>
   1c034:	tbz	w0, #0, 1c07c <syntax_check_message_list@@Base+0x5cc>
   1c038:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1c03c:	ldr	x8, [x8, #3736]
   1c040:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1c044:	mov	w2, #0x5                   	// #5
   1c048:	mov	x0, xzr
   1c04c:	ldr	x22, [x8]
   1c050:	add	x1, x1, #0x9f2
   1c054:	bl	acd0 <dcgettext@plt>
   1c058:	ldr	x1, [sp, #8]
   1c05c:	mov	x6, x0
   1c060:	mov	w0, #0x1                   	// #1
   1c064:	mov	x2, xzr
   1c068:	mov	x3, xzr
   1c06c:	mov	x4, xzr
   1c070:	mov	w5, wzr
   1c074:	blr	x22
   1c078:	add	w20, w20, #0x1
   1c07c:	add	x23, x19, #0x1
   1c080:	cmp	x23, x25
   1c084:	b.cc	1bf24 <syntax_check_message_list@@Base+0x474>  // b.lo, b.ul, b.last
   1c088:	b	1c090 <syntax_check_message_list@@Base+0x5e0>
   1c08c:	mov	w20, wzr
   1c090:	mov	w0, w20
   1c094:	ldp	x20, x19, [sp, #112]
   1c098:	ldp	x22, x21, [sp, #96]
   1c09c:	ldp	x24, x23, [sp, #80]
   1c0a0:	ldp	x26, x25, [sp, #64]
   1c0a4:	ldp	x28, x27, [sp, #48]
   1c0a8:	ldp	x29, x30, [sp, #32]
   1c0ac:	add	sp, sp, #0x80
   1c0b0:	ret
   1c0b4:	stp	x29, x30, [sp, #-96]!
   1c0b8:	stp	x20, x19, [sp, #80]
   1c0bc:	mov	x20, x0
   1c0c0:	mov	x0, x1
   1c0c4:	stp	x28, x27, [sp, #16]
   1c0c8:	stp	x26, x25, [sp, #32]
   1c0cc:	stp	x24, x23, [sp, #48]
   1c0d0:	stp	x22, x21, [sp, #64]
   1c0d4:	mov	x29, sp
   1c0d8:	mov	x19, x1
   1c0dc:	bl	a0d0 <strlen@plt>
   1c0e0:	subs	x24, x0, #0x1
   1c0e4:	b.mi	1c2c8 <syntax_check_message_list@@Base+0x818>  // b.first
   1c0e8:	adrp	x27, 4c000 <plural_table_size@@Base+0x12c00>
   1c0ec:	ldr	x27, [x27, #3736]
   1c0f0:	adrp	x22, 38000 <get_search_path@@Base+0x1b4c>
   1c0f4:	mov	x25, xzr
   1c0f8:	mov	w21, wzr
   1c0fc:	mov	w9, wzr
   1c100:	add	x26, x19, x24
   1c104:	add	x22, x22, #0xa51
   1c108:	mov	x28, x19
   1c10c:	mov	x10, x19
   1c110:	add	x8, x19, x25
   1c114:	ldrb	w11, [x8]
   1c118:	cmp	w11, #0x60
   1c11c:	b.eq	1c190 <syntax_check_message_list@@Base+0x6e0>  // b.none
   1c120:	cmp	w11, #0x27
   1c124:	b.eq	1c1a4 <syntax_check_message_list@@Base+0x6f4>  // b.none
   1c128:	cmp	w11, #0x22
   1c12c:	b.ne	1c288 <syntax_check_message_list@@Base+0x7d8>  // b.any
   1c130:	tbz	w9, #0, 1c21c <syntax_check_message_list@@Base+0x76c>
   1c134:	ldrb	w9, [x10]
   1c138:	cmp	w9, #0x22
   1c13c:	b.ne	1c224 <syntax_check_message_list@@Base+0x774>  // b.any
   1c140:	add	x9, x10, #0x1
   1c144:	cmp	x8, x9
   1c148:	b.eq	1c188 <syntax_check_message_list@@Base+0x6d8>  // b.none
   1c14c:	ldr	x23, [x27]
   1c150:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1c154:	mov	w2, #0x5                   	// #5
   1c158:	mov	x0, xzr
   1c15c:	add	x1, x1, #0xa26
   1c160:	bl	acd0 <dcgettext@plt>
   1c164:	mov	x6, x0
   1c168:	mov	w0, #0x1                   	// #1
   1c16c:	mov	x1, x20
   1c170:	mov	x2, xzr
   1c174:	mov	x3, xzr
   1c178:	mov	x4, xzr
   1c17c:	mov	w5, wzr
   1c180:	blr	x23
   1c184:	add	w21, w21, #0x1
   1c188:	mov	w9, wzr
   1c18c:	b	1c1f8 <syntax_check_message_list@@Base+0x748>
   1c190:	tbz	w9, #0, 1c21c <syntax_check_message_list@@Base+0x76c>
   1c194:	ldrb	w9, [x10]
   1c198:	cmp	w9, #0x60
   1c19c:	csel	x8, x8, x10, eq  // eq = none
   1c1a0:	b	1c21c <syntax_check_message_list@@Base+0x76c>
   1c1a4:	tbz	w9, #0, 1c200 <syntax_check_message_list@@Base+0x750>
   1c1a8:	ldrb	w9, [x10]
   1c1ac:	cmp	w9, #0x27
   1c1b0:	b.eq	1c22c <syntax_check_message_list@@Base+0x77c>  // b.none
   1c1b4:	cmp	w9, #0x60
   1c1b8:	b.ne	1c2c0 <syntax_check_message_list@@Base+0x810>  // b.any
   1c1bc:	ldr	x23, [x27]
   1c1c0:	mov	w2, #0x5                   	// #5
   1c1c4:	mov	x0, xzr
   1c1c8:	mov	x1, x22
   1c1cc:	bl	acd0 <dcgettext@plt>
   1c1d0:	mov	x6, x0
   1c1d4:	mov	w0, #0x1                   	// #1
   1c1d8:	mov	x1, x20
   1c1dc:	mov	x2, xzr
   1c1e0:	mov	x3, xzr
   1c1e4:	mov	x4, xzr
   1c1e8:	mov	w5, wzr
   1c1ec:	blr	x23
   1c1f0:	mov	w9, wzr
   1c1f4:	add	w21, w21, #0x1
   1c1f8:	add	x8, x28, #0x1
   1c1fc:	b	1c28c <syntax_check_message_list@@Base+0x7dc>
   1c200:	cbz	x25, 1c21c <syntax_check_message_list@@Base+0x76c>
   1c204:	add	x9, x19, x25
   1c208:	ldurb	w9, [x9, #-1]
   1c20c:	cmp	w9, #0x20
   1c210:	b.eq	1c21c <syntax_check_message_list@@Base+0x76c>  // b.none
   1c214:	cmp	w9, #0xa
   1c218:	b.ne	1c284 <syntax_check_message_list@@Base+0x7d4>  // b.any
   1c21c:	mov	w9, #0x1                   	// #1
   1c220:	b	1c28c <syntax_check_message_list@@Base+0x7dc>
   1c224:	mov	w9, #0x1                   	// #1
   1c228:	b	1c288 <syntax_check_message_list@@Base+0x7d8>
   1c22c:	cmp	x10, x19
   1c230:	b.ls	1c260 <syntax_check_message_list@@Base+0x7b0>  // b.plast
   1c234:	ldurb	w9, [x10, #-1]
   1c238:	cmp	w9, #0x20
   1c23c:	b.ne	1c260 <syntax_check_message_list@@Base+0x7b0>  // b.any
   1c240:	cmp	x24, x25
   1c244:	b.eq	1c1bc <syntax_check_message_list@@Base+0x70c>  // b.none
   1c248:	add	x9, x19, x25
   1c24c:	ldrb	w9, [x9, #1]
   1c250:	cmp	w9, #0xa
   1c254:	b.eq	1c1bc <syntax_check_message_list@@Base+0x70c>  // b.none
   1c258:	cmp	w9, #0x20
   1c25c:	b.eq	1c1bc <syntax_check_message_list@@Base+0x70c>  // b.none
   1c260:	cmp	x10, x19
   1c264:	b.eq	1c2a8 <syntax_check_message_list@@Base+0x7f8>  // b.none
   1c268:	cmp	x8, x26
   1c26c:	mov	w9, wzr
   1c270:	b.cs	1c28c <syntax_check_message_list@@Base+0x7dc>  // b.hs, b.nlast
   1c274:	ldurb	w10, [x10, #-1]
   1c278:	cmp	w10, #0xa
   1c27c:	b.eq	1c2b0 <syntax_check_message_list@@Base+0x800>  // b.none
   1c280:	b	1c28c <syntax_check_message_list@@Base+0x7dc>
   1c284:	mov	w9, wzr
   1c288:	mov	x8, x10
   1c28c:	add	x25, x25, #0x1
   1c290:	add	x10, x19, x25
   1c294:	cmp	x10, x26
   1c298:	add	x28, x28, #0x1
   1c29c:	mov	x10, x8
   1c2a0:	b.ls	1c110 <syntax_check_message_list@@Base+0x660>  // b.plast
   1c2a4:	b	1c2cc <syntax_check_message_list@@Base+0x81c>
   1c2a8:	cmp	x8, x26
   1c2ac:	b.cs	1c2c0 <syntax_check_message_list@@Base+0x810>  // b.hs, b.nlast
   1c2b0:	add	x9, x19, x25
   1c2b4:	ldrb	w9, [x9, #1]
   1c2b8:	cmp	w9, #0x20
   1c2bc:	b.eq	1c1bc <syntax_check_message_list@@Base+0x70c>  // b.none
   1c2c0:	mov	w9, wzr
   1c2c4:	b	1c28c <syntax_check_message_list@@Base+0x7dc>
   1c2c8:	mov	w21, wzr
   1c2cc:	mov	w0, w21
   1c2d0:	ldp	x20, x19, [sp, #80]
   1c2d4:	ldp	x22, x21, [sp, #64]
   1c2d8:	ldp	x24, x23, [sp, #48]
   1c2dc:	ldp	x26, x25, [sp, #32]
   1c2e0:	ldp	x28, x27, [sp, #16]
   1c2e4:	ldp	x29, x30, [sp], #96
   1c2e8:	ret
   1c2ec:	stp	x29, x30, [sp, #-96]!
   1c2f0:	stp	x20, x19, [sp, #80]
   1c2f4:	mov	x19, x0
   1c2f8:	mov	x0, x1
   1c2fc:	stp	x28, x27, [sp, #16]
   1c300:	stp	x26, x25, [sp, #32]
   1c304:	stp	x24, x23, [sp, #48]
   1c308:	stp	x22, x21, [sp, #64]
   1c30c:	mov	x29, sp
   1c310:	mov	x20, x1
   1c314:	bl	a0d0 <strlen@plt>
   1c318:	adrp	x21, 4e000 <formatstring_gfc_internal@@Base+0x10>
   1c31c:	cmp	x0, #0x1
   1c320:	str	xzr, [x21, #1128]
   1c324:	b.lt	1c480 <syntax_check_message_list@@Base+0x9d0>  // b.tstop
   1c328:	mov	x25, xzr
   1c32c:	mov	x26, xzr
   1c330:	add	x22, x20, x0
   1c334:	adrp	x23, 4e000 <formatstring_gfc_internal@@Base+0x10>
   1c338:	adrp	x24, 4e000 <formatstring_gfc_internal@@Base+0x10>
   1c33c:	ldrb	w8, [x20]
   1c340:	mov	x9, x20
   1c344:	cmp	x20, x22
   1c348:	b.cs	1c38c <syntax_check_message_list@@Base+0x8dc>  // b.hs, b.nlast
   1c34c:	and	w10, w8, #0xff
   1c350:	sub	w11, w10, #0x9
   1c354:	cmp	w11, #0x5
   1c358:	b.cs	1c36c <syntax_check_message_list@@Base+0x8bc>  // b.hs, b.nlast
   1c35c:	ldrb	w8, [x9, #1]!
   1c360:	cmp	x22, x9
   1c364:	b.ne	1c34c <syntax_check_message_list@@Base+0x89c>  // b.any
   1c368:	b	1c388 <syntax_check_message_list@@Base+0x8d8>
   1c36c:	cmp	w10, #0x20
   1c370:	b.eq	1c35c <syntax_check_message_list@@Base+0x8ac>  // b.none
   1c374:	cmp	w10, #0x2a
   1c378:	b.eq	1c39c <syntax_check_message_list@@Base+0x8ec>  // b.none
   1c37c:	cmp	w10, #0x2d
   1c380:	b.eq	1c39c <syntax_check_message_list@@Base+0x8ec>  // b.none
   1c384:	b	1c3d4 <syntax_check_message_list@@Base+0x924>
   1c388:	mov	x9, x22
   1c38c:	cmp	w8, #0x2a
   1c390:	b.eq	1c39c <syntax_check_message_list@@Base+0x8ec>  // b.none
   1c394:	cmp	w8, #0x2d
   1c398:	b.ne	1c3d4 <syntax_check_message_list@@Base+0x924>  // b.any
   1c39c:	ldrb	w10, [x9, #1]
   1c3a0:	cmp	w10, #0x20
   1c3a4:	b.ne	1c3d4 <syntax_check_message_list@@Base+0x924>  // b.any
   1c3a8:	sub	x27, x9, x20
   1c3ac:	cbz	x26, 1c3bc <syntax_check_message_list@@Base+0x90c>
   1c3b0:	ldr	x9, [x26, #8]
   1c3b4:	cmp	x27, x9
   1c3b8:	b.ls	1c434 <syntax_check_message_list@@Base+0x984>  // b.plast
   1c3bc:	ldr	x9, [x23, #1136]
   1c3c0:	and	w28, w8, #0xff
   1c3c4:	cmp	x25, x9
   1c3c8:	b.cs	1c3e4 <syntax_check_message_list@@Base+0x934>  // b.hs, b.nlast
   1c3cc:	ldr	x0, [x24, #1120]
   1c3d0:	b	1c404 <syntax_check_message_list@@Base+0x954>
   1c3d4:	mov	x25, xzr
   1c3d8:	mov	x26, xzr
   1c3dc:	str	xzr, [x21, #1128]
   1c3e0:	b	1c418 <syntax_check_message_list@@Base+0x968>
   1c3e4:	ldr	x0, [x24, #1120]
   1c3e8:	lsl	x8, x9, #1
   1c3ec:	add	x8, x8, #0x4
   1c3f0:	lsl	x1, x8, #4
   1c3f4:	str	x8, [x23, #1136]
   1c3f8:	bl	a460 <xrealloc@plt>
   1c3fc:	ldr	x25, [x21, #1128]
   1c400:	str	x0, [x24, #1120]
   1c404:	add	x26, x0, x25, lsl #4
   1c408:	add	x25, x25, #0x1
   1c40c:	str	x25, [x21, #1128]
   1c410:	str	w28, [x26]
   1c414:	str	x27, [x26, #8]
   1c418:	mov	w1, #0xa                   	// #10
   1c41c:	mov	x0, x20
   1c420:	bl	aca0 <strchrnul@plt>
   1c424:	add	x20, x0, #0x1
   1c428:	cmp	x20, x22
   1c42c:	b.cc	1c33c <syntax_check_message_list@@Base+0x88c>  // b.lo, b.ul, b.last
   1c430:	b	1c480 <syntax_check_message_list@@Base+0x9d0>
   1c434:	b.cs	1c458 <syntax_check_message_list@@Base+0x9a8>  // b.hs, b.nlast
   1c438:	subs	x9, x25, #0x2
   1c43c:	b.cc	1c478 <syntax_check_message_list@@Base+0x9c8>  // b.lo, b.ul, b.last
   1c440:	ldr	x10, [x24, #1120]
   1c444:	sub	x25, x25, #0x1
   1c448:	str	x25, [x21, #1128]
   1c44c:	cbz	x10, 1c478 <syntax_check_message_list@@Base+0x9c8>
   1c450:	add	x26, x10, x9, lsl #4
   1c454:	ldr	x9, [x26, #8]
   1c458:	cmp	x27, x9
   1c45c:	b.ne	1c418 <syntax_check_message_list@@Base+0x968>  // b.any
   1c460:	ldr	w9, [x26]
   1c464:	cmp	w9, w8, uxtb
   1c468:	b.eq	1c4a4 <syntax_check_message_list@@Base+0x9f4>  // b.none
   1c46c:	and	w8, w8, #0xff
   1c470:	str	w8, [x26]
   1c474:	b	1c418 <syntax_check_message_list@@Base+0x968>
   1c478:	mov	x26, xzr
   1c47c:	b	1c418 <syntax_check_message_list@@Base+0x968>
   1c480:	mov	w20, wzr
   1c484:	mov	w0, w20
   1c488:	ldp	x20, x19, [sp, #80]
   1c48c:	ldp	x22, x21, [sp, #64]
   1c490:	ldp	x24, x23, [sp, #48]
   1c494:	ldp	x26, x25, [sp, #32]
   1c498:	ldp	x28, x27, [sp, #16]
   1c49c:	ldp	x29, x30, [sp], #96
   1c4a0:	ret
   1c4a4:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1c4a8:	add	x1, x1, #0xa7c
   1c4ac:	mov	w2, #0x5                   	// #5
   1c4b0:	mov	x0, xzr
   1c4b4:	bl	acd0 <dcgettext@plt>
   1c4b8:	ldr	w1, [x26]
   1c4bc:	bl	aa20 <xasprintf@plt>
   1c4c0:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1c4c4:	ldr	x8, [x8, #3736]
   1c4c8:	mov	x21, x0
   1c4cc:	mov	w0, #0x1                   	// #1
   1c4d0:	mov	x1, x19
   1c4d4:	ldr	x8, [x8]
   1c4d8:	mov	x2, xzr
   1c4dc:	mov	x3, xzr
   1c4e0:	mov	x4, xzr
   1c4e4:	mov	w5, wzr
   1c4e8:	mov	x6, x21
   1c4ec:	mov	w20, #0x1                   	// #1
   1c4f0:	blr	x8
   1c4f4:	mov	x0, x21
   1c4f8:	bl	aa00 <free@plt>
   1c4fc:	b	1c484 <syntax_check_message_list@@Base+0x9d4>

000000000001c500 <read_names_from_file@@Base>:
   1c500:	sub	sp, sp, #0x50
   1c504:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
   1c508:	stp	x29, x30, [sp, #16]
   1c50c:	add	x29, sp, #0x10
   1c510:	add	x1, x1, #0x9b8
   1c514:	str	x23, [sp, #32]
   1c518:	stp	x22, x21, [sp, #48]
   1c51c:	stp	x20, x19, [sp, #64]
   1c520:	mov	x20, x0
   1c524:	str	xzr, [x29, #24]
   1c528:	str	xzr, [sp, #8]
   1c52c:	bl	a8d0 <strcmp@plt>
   1c530:	adrp	x21, 4c000 <plural_table_size@@Base+0x12c00>
   1c534:	ldr	x21, [x21, #3896]
   1c538:	cbz	w0, 1c58c <read_names_from_file@@Base+0x8c>
   1c53c:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   1c540:	add	x1, x1, #0x95d
   1c544:	mov	x0, x20
   1c548:	bl	a3e0 <fopen@plt>
   1c54c:	mov	x19, x0
   1c550:	cbnz	x0, 1c590 <read_names_from_file@@Base+0x90>
   1c554:	bl	ade0 <__errno_location@plt>
   1c558:	ldr	w19, [x0]
   1c55c:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   1c560:	add	x1, x1, #0x595
   1c564:	mov	w2, #0x5                   	// #5
   1c568:	mov	x0, xzr
   1c56c:	bl	acd0 <dcgettext@plt>
   1c570:	mov	x2, x0
   1c574:	mov	w0, #0x1                   	// #1
   1c578:	mov	w1, w19
   1c57c:	mov	x3, x20
   1c580:	bl	a140 <error@plt>
   1c584:	mov	x19, xzr
   1c588:	b	1c590 <read_names_from_file@@Base+0x90>
   1c58c:	ldr	x19, [x21]
   1c590:	bl	a350 <string_list_alloc@plt>
   1c594:	mov	x20, x0
   1c598:	mov	x0, x19
   1c59c:	bl	a850 <feof@plt>
   1c5a0:	cbnz	w0, 1c654 <read_names_from_file@@Base+0x154>
   1c5a4:	mov	x23, #0x2200                	// #8704
   1c5a8:	mov	w22, #0x1                   	// #1
   1c5ac:	movk	x23, #0x1, lsl #32
   1c5b0:	add	x0, sp, #0x8
   1c5b4:	add	x1, x29, #0x18
   1c5b8:	mov	x2, x19
   1c5bc:	bl	a9a0 <getline@plt>
   1c5c0:	tbnz	w0, #31, 1c654 <read_names_from_file@@Base+0x154>
   1c5c4:	cbz	w0, 1c62c <read_names_from_file@@Base+0x12c>
   1c5c8:	ldr	x8, [sp, #8]
   1c5cc:	sub	w9, w0, #0x1
   1c5d0:	ldrb	w9, [x8, w9, sxtw]
   1c5d4:	cmp	w9, #0xa
   1c5d8:	b.ne	1c5f0 <read_names_from_file@@Base+0xf0>  // b.any
   1c5dc:	sxtw	x9, w0
   1c5e0:	cmp	w0, #0x2
   1c5e4:	sub	x0, x9, #0x1
   1c5e8:	strb	wzr, [x8, x0]
   1c5ec:	b.lt	1c62c <read_names_from_file@@Base+0x12c>  // b.tstop
   1c5f0:	mov	w8, w0
   1c5f4:	sub	x8, x8, #0x1
   1c5f8:	ldr	x9, [sp, #8]
   1c5fc:	ldrb	w10, [x9, x8]
   1c600:	cmp	w10, #0x20
   1c604:	b.hi	1c62c <read_names_from_file@@Base+0x12c>  // b.pmore
   1c608:	lsl	x10, x22, x10
   1c60c:	tst	x10, x23
   1c610:	b.eq	1c62c <read_names_from_file@@Base+0x12c>  // b.none
   1c614:	add	x10, x8, #0x1
   1c618:	sub	x11, x8, #0x1
   1c61c:	cmp	x10, #0x1
   1c620:	strb	wzr, [x9, x8]
   1c624:	mov	x8, x11
   1c628:	b.gt	1c5f8 <read_names_from_file@@Base+0xf8>
   1c62c:	ldr	x1, [sp, #8]
   1c630:	ldrb	w8, [x1]
   1c634:	cbz	w8, 1c648 <read_names_from_file@@Base+0x148>
   1c638:	cmp	w8, #0x23
   1c63c:	b.eq	1c648 <read_names_from_file@@Base+0x148>  // b.none
   1c640:	mov	x0, x20
   1c644:	bl	a6d0 <string_list_append_unique@plt>
   1c648:	mov	x0, x19
   1c64c:	bl	a850 <feof@plt>
   1c650:	cbz	w0, 1c5b0 <read_names_from_file@@Base+0xb0>
   1c654:	ldr	x0, [sp, #8]
   1c658:	cbz	x0, 1c660 <read_names_from_file@@Base+0x160>
   1c65c:	bl	aa00 <free@plt>
   1c660:	ldr	x8, [x21]
   1c664:	cmp	x19, x8
   1c668:	b.eq	1c674 <read_names_from_file@@Base+0x174>  // b.none
   1c66c:	mov	x0, x19
   1c670:	bl	a3c0 <fclose@plt>
   1c674:	mov	x0, x20
   1c678:	ldp	x20, x19, [sp, #64]
   1c67c:	ldp	x22, x21, [sp, #48]
   1c680:	ldr	x23, [sp, #32]
   1c684:	ldp	x29, x30, [sp, #16]
   1c688:	add	sp, sp, #0x50
   1c68c:	ret

000000000001c690 <compare_po_locale_charsets@@Base>:
   1c690:	stp	x29, x30, [sp, #-96]!
   1c694:	stp	x28, x27, [sp, #16]
   1c698:	stp	x26, x25, [sp, #32]
   1c69c:	stp	x24, x23, [sp, #48]
   1c6a0:	stp	x22, x21, [sp, #64]
   1c6a4:	stp	x20, x19, [sp, #80]
   1c6a8:	mov	x29, sp
   1c6ac:	sub	sp, sp, #0x10
   1c6b0:	mov	x20, x0
   1c6b4:	bl	ae30 <locale_charset@plt>
   1c6b8:	stur	x0, [x29, #-8]
   1c6bc:	bl	a1f0 <po_charset_canonicalize@plt>
   1c6c0:	ldr	x8, [x20, #8]
   1c6c4:	mov	x21, x0
   1c6c8:	cbz	x8, 1c954 <compare_po_locale_charsets@@Base+0x2c4>
   1c6cc:	adrp	x22, 37000 <get_search_path@@Base+0xb4c>
   1c6d0:	mov	w19, wzr
   1c6d4:	mov	x23, xzr
   1c6d8:	add	x22, x22, #0x196
   1c6dc:	ldr	x8, [x20]
   1c6e0:	ldr	x8, [x8, x23, lsl #3]
   1c6e4:	ldr	x27, [x8, #8]
   1c6e8:	ldr	x8, [x27, #8]
   1c6ec:	cbz	x8, 1c93c <compare_po_locale_charsets@@Base+0x2ac>
   1c6f0:	mov	x28, xzr
   1c6f4:	ldr	x8, [x27]
   1c6f8:	ldr	x8, [x8, x28, lsl #3]
   1c6fc:	ldr	x9, [x8]
   1c700:	cbnz	x9, 1c718 <compare_po_locale_charsets@@Base+0x88>
   1c704:	ldr	x9, [x8, #8]
   1c708:	ldrb	w9, [x9]
   1c70c:	cbnz	w9, 1c718 <compare_po_locale_charsets@@Base+0x88>
   1c710:	ldrb	w9, [x8, #256]
   1c714:	cbz	w9, 1c72c <compare_po_locale_charsets@@Base+0x9c>
   1c718:	ldr	x8, [x27, #8]
   1c71c:	add	x28, x28, #0x1
   1c720:	cmp	x28, x8
   1c724:	b.cc	1c6f4 <compare_po_locale_charsets@@Base+0x64>  // b.lo, b.ul, b.last
   1c728:	b	1c93c <compare_po_locale_charsets@@Base+0x2ac>
   1c72c:	ldr	x0, [x8, #24]
   1c730:	cbz	x0, 1c718 <compare_po_locale_charsets@@Base+0x88>
   1c734:	mov	x1, x22
   1c738:	bl	ad20 <c_strstr@plt>
   1c73c:	cbz	x0, 1c718 <compare_po_locale_charsets@@Base+0x88>
   1c740:	add	x24, x0, #0x8
   1c744:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   1c748:	mov	x0, x24
   1c74c:	add	x1, x1, #0x19f
   1c750:	bl	ada0 <strcspn@plt>
   1c754:	mov	x26, x0
   1c758:	add	x0, x0, #0x1
   1c75c:	cmp	x0, #0xfa0
   1c760:	b.hi	1c784 <compare_po_locale_charsets@@Base+0xf4>  // b.pmore
   1c764:	add	x9, x26, #0x2f
   1c768:	mov	x8, sp
   1c76c:	and	x9, x9, #0xfffffffffffffff0
   1c770:	sub	x8, x8, x9
   1c774:	mov	sp, x8
   1c778:	add	x8, x8, #0x1f
   1c77c:	and	x25, x8, #0xffffffffffffffe0
   1c780:	b	1c78c <compare_po_locale_charsets@@Base+0xfc>
   1c784:	bl	a910 <xmmalloca@plt>
   1c788:	mov	x25, x0
   1c78c:	mov	x0, x25
   1c790:	mov	x1, x24
   1c794:	mov	x2, x26
   1c798:	bl	a040 <memcpy@plt>
   1c79c:	mov	x0, x25
   1c7a0:	strb	wzr, [x25, x26]
   1c7a4:	bl	a1f0 <po_charset_canonicalize@plt>
   1c7a8:	mov	x24, x0
   1c7ac:	cbnz	x0, 1c7d4 <compare_po_locale_charsets@@Base+0x144>
   1c7b0:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   1c7b4:	mov	w2, #0x5                   	// #5
   1c7b8:	add	x1, x1, #0xe3f
   1c7bc:	bl	acd0 <dcgettext@plt>
   1c7c0:	mov	x2, x0
   1c7c4:	mov	w0, #0x1                   	// #1
   1c7c8:	mov	w1, wzr
   1c7cc:	mov	x3, x25
   1c7d0:	bl	a140 <error@plt>
   1c7d4:	mov	x0, x25
   1c7d8:	bl	ad70 <freea@plt>
   1c7dc:	cmp	x21, x24
   1c7e0:	b.eq	1c718 <compare_po_locale_charsets@@Base+0x88>  // b.none
   1c7e4:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
   1c7e8:	mov	w2, #0x5                   	// #5
   1c7ec:	mov	x0, xzr
   1c7f0:	add	x1, x1, #0x935
   1c7f4:	bl	acd0 <dcgettext@plt>
   1c7f8:	bl	aa20 <xasprintf@plt>
   1c7fc:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1c800:	mov	x25, x0
   1c804:	mov	w2, #0x5                   	// #5
   1c808:	mov	x0, xzr
   1c80c:	add	x1, x1, #0xaa3
   1c810:	bl	acd0 <dcgettext@plt>
   1c814:	adrp	x19, 4c000 <plural_table_size@@Base+0x12c00>
   1c818:	ldr	x19, [x19, #4008]
   1c81c:	mov	x26, x0
   1c820:	ldr	x8, [x19]
   1c824:	mov	x0, x8
   1c828:	bl	a8f0 <basename@plt>
   1c82c:	ldur	x1, [x29, #-8]
   1c830:	mov	x3, x0
   1c834:	mov	x0, x26
   1c838:	mov	x2, x24
   1c83c:	bl	aa20 <xasprintf@plt>
   1c840:	mov	x1, x0
   1c844:	mov	x0, x25
   1c848:	bl	aaf0 <multiline_warning@plt>
   1c84c:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1c850:	mov	w2, #0x5                   	// #5
   1c854:	mov	x0, xzr
   1c858:	add	x1, x1, #0xb20
   1c85c:	bl	acd0 <dcgettext@plt>
   1c860:	mov	x1, x24
   1c864:	bl	aa20 <xasprintf@plt>
   1c868:	mov	x1, x0
   1c86c:	mov	x0, xzr
   1c870:	bl	aaf0 <multiline_warning@plt>
   1c874:	cbz	x21, 1c8bc <compare_po_locale_charsets@@Base+0x22c>
   1c878:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1c87c:	mov	w2, #0x5                   	// #5
   1c880:	mov	x0, xzr
   1c884:	add	x1, x1, #0xb4c
   1c888:	bl	acd0 <dcgettext@plt>
   1c88c:	ldr	x8, [x19]
   1c890:	mov	x25, x0
   1c894:	mov	x0, x8
   1c898:	bl	a8f0 <basename@plt>
   1c89c:	mov	x2, x0
   1c8a0:	mov	x0, x25
   1c8a4:	mov	x1, x21
   1c8a8:	mov	x3, x24
   1c8ac:	bl	aa20 <xasprintf@plt>
   1c8b0:	mov	x1, x0
   1c8b4:	mov	x0, xzr
   1c8b8:	bl	aaf0 <multiline_warning@plt>
   1c8bc:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   1c8c0:	mov	x0, x24
   1c8c4:	add	x1, x1, #0xd1b
   1c8c8:	bl	a8d0 <strcmp@plt>
   1c8cc:	cbz	w0, 1c934 <compare_po_locale_charsets@@Base+0x2a4>
   1c8d0:	cbz	x21, 1c8e8 <compare_po_locale_charsets@@Base+0x258>
   1c8d4:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   1c8d8:	mov	x0, x21
   1c8dc:	add	x1, x1, #0xd1b
   1c8e0:	bl	a8d0 <strcmp@plt>
   1c8e4:	cbz	w0, 1c934 <compare_po_locale_charsets@@Base+0x2a4>
   1c8e8:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1c8ec:	mov	w2, #0x5                   	// #5
   1c8f0:	mov	x0, xzr
   1c8f4:	add	x1, x1, #0xbc4
   1c8f8:	bl	acd0 <dcgettext@plt>
   1c8fc:	ldr	x8, [x19]
   1c900:	mov	x25, x0
   1c904:	mov	x0, x8
   1c908:	bl	a8f0 <basename@plt>
   1c90c:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   1c910:	add	x1, x1, #0xd1b
   1c914:	mov	x3, x0
   1c918:	mov	x0, x25
   1c91c:	mov	x2, x1
   1c920:	mov	x4, x24
   1c924:	bl	aa20 <xasprintf@plt>
   1c928:	mov	x1, x0
   1c92c:	mov	x0, xzr
   1c930:	bl	aaf0 <multiline_warning@plt>
   1c934:	mov	w19, #0x1                   	// #1
   1c938:	b	1c718 <compare_po_locale_charsets@@Base+0x88>
   1c93c:	ldr	x8, [x20, #8]
   1c940:	add	x23, x23, #0x1
   1c944:	cmp	x23, x8
   1c948:	b.cc	1c6dc <compare_po_locale_charsets@@Base+0x4c>  // b.lo, b.ul, b.last
   1c94c:	cbz	x21, 1c95c <compare_po_locale_charsets@@Base+0x2cc>
   1c950:	b	1c9c4 <compare_po_locale_charsets@@Base+0x334>
   1c954:	mov	w19, wzr
   1c958:	cbnz	x21, 1c9c4 <compare_po_locale_charsets@@Base+0x334>
   1c95c:	tbnz	w19, #0, 1c9c4 <compare_po_locale_charsets@@Base+0x334>
   1c960:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
   1c964:	add	x1, x1, #0x935
   1c968:	mov	w2, #0x5                   	// #5
   1c96c:	mov	x0, xzr
   1c970:	bl	acd0 <dcgettext@plt>
   1c974:	bl	aa20 <xasprintf@plt>
   1c978:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1c97c:	mov	x20, x0
   1c980:	add	x1, x1, #0xc67
   1c984:	mov	w2, #0x5                   	// #5
   1c988:	mov	x0, xzr
   1c98c:	bl	acd0 <dcgettext@plt>
   1c990:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1c994:	ldr	x8, [x8, #4008]
   1c998:	mov	x21, x0
   1c99c:	ldr	x8, [x8]
   1c9a0:	mov	x0, x8
   1c9a4:	bl	a8f0 <basename@plt>
   1c9a8:	ldur	x1, [x29, #-8]
   1c9ac:	mov	x2, x0
   1c9b0:	mov	x0, x21
   1c9b4:	bl	aa20 <xasprintf@plt>
   1c9b8:	mov	x1, x0
   1c9bc:	mov	x0, x20
   1c9c0:	bl	aaf0 <multiline_warning@plt>
   1c9c4:	mov	sp, x29
   1c9c8:	ldp	x20, x19, [sp, #80]
   1c9cc:	ldp	x22, x21, [sp, #64]
   1c9d0:	ldp	x24, x23, [sp, #48]
   1c9d4:	ldp	x26, x25, [sp, #32]
   1c9d8:	ldp	x28, x27, [sp, #16]
   1c9dc:	ldp	x29, x30, [sp], #96
   1c9e0:	ret

000000000001c9e4 <po_strftime@@Base>:
   1c9e4:	sub	sp, sp, #0x60
   1c9e8:	stp	x29, x30, [sp, #16]
   1c9ec:	stp	x26, x25, [sp, #32]
   1c9f0:	stp	x24, x23, [sp, #48]
   1c9f4:	stp	x22, x21, [sp, #64]
   1c9f8:	stp	x20, x19, [sp, #80]
   1c9fc:	add	x29, sp, #0x10
   1ca00:	mov	x22, x0
   1ca04:	bl	a3a0 <localtime@plt>
   1ca08:	ldpsw	x25, x19, [x0]
   1ca0c:	ldr	w26, [x0, #28]
   1ca10:	ldp	w20, w21, [x0, #8]
   1ca14:	ldp	w23, w24, [x0, #16]
   1ca18:	mov	x0, x22
   1ca1c:	sxtw	x20, w20
   1ca20:	sxtw	x24, w24
   1ca24:	bl	a670 <gmtime@plt>
   1ca28:	mov	w9, #0x851f                	// #34079
   1ca2c:	add	x8, x24, #0x76b
   1ca30:	movk	w9, #0x51eb, lsl #16
   1ca34:	smull	x12, w8, w9
   1ca38:	lsr	x13, x12, #63
   1ca3c:	asr	x12, x12, #37
   1ca40:	add	w12, w12, w13
   1ca44:	ldrsw	x13, [x0, #20]
   1ca48:	ldr	w14, [x0, #28]
   1ca4c:	sub	w15, w26, w12
   1ca50:	add	w15, w15, w8, asr #2
   1ca54:	add	x13, x13, #0x76b
   1ca58:	add	w12, w15, w12, asr #2
   1ca5c:	mov	w15, #0x16d                 	// #365
   1ca60:	smull	x9, w13, w9
   1ca64:	sub	x8, x8, x13
   1ca68:	mul	x8, x8, x15
   1ca6c:	lsr	x15, x9, #63
   1ca70:	asr	x9, x9, #37
   1ca74:	add	w9, w9, w15
   1ca78:	ldrsw	x16, [x0, #8]
   1ca7c:	sub	w12, w12, w14
   1ca80:	ldpsw	x11, x10, [x0]
   1ca84:	add	w12, w12, w9
   1ca88:	sub	w12, w12, w13, asr #2
   1ca8c:	sub	w9, w12, w9, asr #2
   1ca90:	mov	w15, #0x18                  	// #24
   1ca94:	add	x8, x8, w9, sxtw
   1ca98:	sub	x16, x20, x16
   1ca9c:	mov	w14, #0x3c                  	// #60
   1caa0:	sub	x10, x19, x10
   1caa4:	madd	x8, x8, x15, x16
   1caa8:	sub	x11, x25, x11
   1caac:	mov	x13, #0x8888888888888888    	// #-8608480567731124088
   1cab0:	madd	x8, x8, x14, x10
   1cab4:	movk	x13, #0x8889
   1cab8:	madd	x8, x8, x14, x11
   1cabc:	smulh	x10, x8, x13
   1cac0:	mov	w12, #0x2b                  	// #43
   1cac4:	mov	w9, #0x2d                  	// #45
   1cac8:	cmn	x8, #0x3b
   1cacc:	add	x8, x10, x8
   1cad0:	csel	w6, w9, w12, lt  // lt = tstop
   1cad4:	asr	x9, x8, #5
   1cad8:	add	x8, x9, x8, lsr #63
   1cadc:	cneg	x8, x8, lt  // lt = tstop
   1cae0:	smulh	x9, x8, x13
   1cae4:	add	x9, x9, x8
   1cae8:	asr	x10, x9, #5
   1caec:	add	x7, x10, x9, lsr #63
   1caf0:	adrp	x0, 38000 <get_search_path@@Base+0x1b4c>
   1caf4:	add	w1, w24, #0x76c
   1caf8:	add	w2, w23, #0x1
   1cafc:	msub	x8, x7, x14, x8
   1cb00:	add	x0, x0, #0xcea
   1cb04:	mov	w3, w21
   1cb08:	mov	w4, w20
   1cb0c:	mov	w5, w19
   1cb10:	str	x8, [sp]
   1cb14:	bl	aa20 <xasprintf@plt>
   1cb18:	ldp	x20, x19, [sp, #80]
   1cb1c:	ldp	x22, x21, [sp, #64]
   1cb20:	ldp	x24, x23, [sp, #48]
   1cb24:	ldp	x26, x25, [sp, #32]
   1cb28:	ldp	x29, x30, [sp, #16]
   1cb2c:	add	sp, sp, #0x60
   1cb30:	ret

000000000001cb34 <parse_plural_expression@@Base>:
   1cb34:	str	d8, [sp, #-112]!
   1cb38:	stp	x29, x30, [sp, #16]
   1cb3c:	stp	x28, x27, [sp, #32]
   1cb40:	stp	x26, x25, [sp, #48]
   1cb44:	stp	x24, x23, [sp, #64]
   1cb48:	stp	x22, x21, [sp, #80]
   1cb4c:	stp	x20, x19, [sp, #96]
   1cb50:	mov	x29, sp
   1cb54:	sub	sp, sp, #0x810
   1cb58:	add	x8, sp, #0x20
   1cb5c:	str	x8, [x29, #8]
   1cb60:	adrp	x8, 38000 <get_search_path@@Base+0x1b4c>
   1cb64:	ldr	d8, [x8, #3344]
   1cb68:	mov	w26, #0x28c                 	// #652
   1cb6c:	adrp	x24, 38000 <get_search_path@@Base+0x1b4c>
   1cb70:	mov	w25, #0x160                 	// #352
   1cb74:	stp	xzr, x0, [sp, #8]
   1cb78:	mov	w22, wzr
   1cb7c:	str	wzr, [sp, #28]
   1cb80:	mov	w27, wzr
   1cb84:	movk	w26, #0x102, lsl #16
   1cb88:	mov	w19, #0xfffffffe            	// #-2
   1cb8c:	mov	w28, #0xc8                  	// #200
   1cb90:	add	x24, x24, #0xd90
   1cb94:	movk	w25, #0x4bc, lsl #16
   1cb98:	add	x23, sp, #0x660
   1cb9c:	add	x21, sp, #0x20
   1cba0:	add	x20, sp, #0x660
   1cba4:	add	x8, x20, x28, lsl #1
   1cba8:	sub	x8, x8, #0x2
   1cbac:	cmp	x8, x23
   1cbb0:	strh	w27, [x23]
   1cbb4:	b.hi	1cc6c <parse_plural_expression@@Base+0x138>  // b.pmore
   1cbb8:	lsr	x8, x28, #4
   1cbbc:	cmp	x8, #0x270
   1cbc0:	b.hi	1d158 <parse_plural_expression@@Base+0x624>  // b.pmore
   1cbc4:	ubfx	x9, x28, #3, #60
   1cbc8:	lsl	x8, x28, #1
   1cbcc:	cmp	x9, #0x271
   1cbd0:	mov	w9, #0x2710                	// #10000
   1cbd4:	csel	x28, x8, x9, cc  // cc = lo, ul, last
   1cbd8:	mov	w8, #0xa                   	// #10
   1cbdc:	orr	x9, xzr, #0x7
   1cbe0:	madd	x0, x28, x8, x9
   1cbe4:	bl	a3f0 <malloc@plt>
   1cbe8:	cbz	x0, 1d158 <parse_plural_expression@@Base+0x624>
   1cbec:	sub	x8, x23, x20
   1cbf0:	asr	x21, x8, #1
   1cbf4:	add	x23, x21, #0x1
   1cbf8:	lsl	x2, x23, #1
   1cbfc:	mov	x1, x20
   1cc00:	mov	x24, x0
   1cc04:	bl	a040 <memcpy@plt>
   1cc08:	lsl	x8, x28, #1
   1cc0c:	add	x8, x8, #0x7
   1cc10:	ldr	x1, [x29, #8]
   1cc14:	and	x8, x8, #0xfffffffffffffff8
   1cc18:	add	x25, x24, x8
   1cc1c:	lsl	x2, x23, #3
   1cc20:	mov	x0, x25
   1cc24:	bl	a040 <memcpy@plt>
   1cc28:	add	x8, sp, #0x660
   1cc2c:	cmp	x20, x8
   1cc30:	b.eq	1cc3c <parse_plural_expression@@Base+0x108>  // b.none
   1cc34:	mov	x0, x20
   1cc38:	bl	aa00 <free@plt>
   1cc3c:	add	x8, x24, x28, lsl #1
   1cc40:	add	x23, x24, x21, lsl #1
   1cc44:	sub	x8, x8, #0x2
   1cc48:	cmp	x8, x23
   1cc4c:	b.ls	1d180 <parse_plural_expression@@Base+0x64c>  // b.plast
   1cc50:	add	x21, x25, x21, lsl #3
   1cc54:	str	x25, [x29, #8]
   1cc58:	mov	x20, x24
   1cc5c:	adrp	x24, 38000 <get_search_path@@Base+0x1b4c>
   1cc60:	mov	w25, #0x160                 	// #352
   1cc64:	add	x24, x24, #0xd90
   1cc68:	movk	w25, #0x4bc, lsl #16
   1cc6c:	cmp	w27, #0x9
   1cc70:	b.eq	1d178 <parse_plural_expression@@Base+0x644>  // b.none
   1cc74:	lsr	x8, x26, x27
   1cc78:	tbnz	w8, #0, 1cd90 <parse_plural_expression@@Base+0x25c>
   1cc7c:	cmn	w19, #0x2
   1cc80:	b.ne	1cd1c <parse_plural_expression@@Base+0x1e8>  // b.any
   1cc84:	ldr	x8, [sp, #16]
   1cc88:	ldr	x8, [x8]
   1cc8c:	add	x8, x8, #0x1
   1cc90:	ldurb	w19, [x8, #-1]
   1cc94:	cmp	w19, #0x9
   1cc98:	b.eq	1cc8c <parse_plural_expression@@Base+0x158>  // b.none
   1cc9c:	cmp	w19, #0x20
   1cca0:	b.eq	1cc8c <parse_plural_expression@@Base+0x158>  // b.none
   1cca4:	cbnz	w19, 1ccb0 <parse_plural_expression@@Base+0x17c>
   1cca8:	sub	x8, x8, #0x1
   1ccac:	b	1cd14 <parse_plural_expression@@Base+0x1e0>
   1ccb0:	sub	w9, w19, #0xa
   1ccb4:	cmp	w9, #0x35
   1ccb8:	b.hi	1d018 <parse_plural_expression@@Base+0x4e4>  // b.pmore
   1ccbc:	adrp	x12, 38000 <get_search_path@@Base+0x1b4c>
   1ccc0:	add	x12, x12, #0xd18
   1ccc4:	adr	x10, 1ccd4 <parse_plural_expression@@Base+0x1a0>
   1ccc8:	ldrh	w11, [x12, x9, lsl #1]
   1cccc:	add	x10, x10, x11, lsl #2
   1ccd0:	br	x10
   1ccd4:	ldrb	w9, [x8]
   1ccd8:	sub	x22, x19, #0x30
   1ccdc:	sub	w10, w9, #0x30
   1cce0:	cmp	w10, #0x9
   1cce4:	b.hi	1cd08 <parse_plural_expression@@Base+0x1d4>  // b.pmore
   1cce8:	mov	w12, #0xa                   	// #10
   1ccec:	mul	x10, x22, x12
   1ccf0:	add	x10, x10, w9, uxtb
   1ccf4:	ldrb	w9, [x8, #1]!
   1ccf8:	sub	x22, x10, #0x30
   1ccfc:	sub	w11, w9, #0x30
   1cd00:	cmp	w11, #0xa
   1cd04:	b.cc	1ccec <parse_plural_expression@@Base+0x1b8>  // b.lo, b.ul, b.last
   1cd08:	lsr	x9, x22, #32
   1cd0c:	str	x9, [sp, #8]
   1cd10:	mov	w19, #0x106                 	// #262
   1cd14:	ldr	x9, [sp, #16]
   1cd18:	str	x8, [x9]
   1cd1c:	ldrsb	w8, [x24, w27, sxtw]
   1cd20:	cmp	w19, #0x1
   1cd24:	b.lt	1cd40 <parse_plural_expression@@Base+0x20c>  // b.tstop
   1cd28:	cmp	w19, #0x106
   1cd2c:	b.hi	1cd4c <parse_plural_expression@@Base+0x218>  // b.pmore
   1cd30:	adrp	x9, 38000 <get_search_path@@Base+0x1b4c>
   1cd34:	add	x9, x9, #0xdab
   1cd38:	ldrb	w9, [x9, w19, uxtw]
   1cd3c:	b	1cd50 <parse_plural_expression@@Base+0x21c>
   1cd40:	mov	w9, wzr
   1cd44:	mov	w19, wzr
   1cd48:	b	1cd50 <parse_plural_expression@@Base+0x21c>
   1cd4c:	mov	w9, #0x2                   	// #2
   1cd50:	add	w8, w9, w8
   1cd54:	cmp	w8, #0x36
   1cd58:	b.hi	1cd90 <parse_plural_expression@@Base+0x25c>  // b.pmore
   1cd5c:	adrp	x10, 38000 <get_search_path@@Base+0x1b4c>
   1cd60:	add	x10, x10, #0xeb2
   1cd64:	ldrsb	w10, [x10, w8, uxtw]
   1cd68:	cmp	w9, w10
   1cd6c:	b.ne	1cd90 <parse_plural_expression@@Base+0x25c>  // b.any
   1cd70:	adrp	x9, 38000 <get_search_path@@Base+0x1b4c>
   1cd74:	add	x9, x9, #0xee9
   1cd78:	ldrb	w27, [x9, x8]
   1cd7c:	orr	x8, x8, #0x1
   1cd80:	cmp	x8, #0x25
   1cd84:	b.ne	1cecc <parse_plural_expression@@Base+0x398>  // b.any
   1cd88:	neg	w24, w27
   1cd8c:	b	1cdb0 <parse_plural_expression@@Base+0x27c>
   1cd90:	mov	w9, #0xfd33                	// #64819
   1cd94:	sxtw	x8, w27
   1cd98:	movk	w9, #0x205, lsl #16
   1cd9c:	lsr	x9, x9, x8
   1cda0:	tbnz	w9, #0, 1ce6c <parse_plural_expression@@Base+0x338>
   1cda4:	adrp	x9, 38000 <get_search_path@@Base+0x1b4c>
   1cda8:	add	x9, x9, #0xf20
   1cdac:	ldrb	w24, [x9, x8]
   1cdb0:	adrp	x8, 38000 <get_search_path@@Base+0x1b4c>
   1cdb4:	add	x8, x8, #0xf3b
   1cdb8:	ldrb	w25, [x8, w24, sxtw]
   1cdbc:	mov	w8, #0x1                   	// #1
   1cdc0:	sub	x8, x8, x25
   1cdc4:	ldr	x0, [x21, x8, lsl #3]
   1cdc8:	sub	w8, w24, #0x2
   1cdcc:	cmp	w8, #0xb
   1cdd0:	b.hi	1ce08 <parse_plural_expression@@Base+0x2d4>  // b.pmore
   1cdd4:	adrp	x11, 38000 <get_search_path@@Base+0x1b4c>
   1cdd8:	add	x11, x11, #0xd84
   1cddc:	adr	x9, 1cdec <parse_plural_expression@@Base+0x2b8>
   1cde0:	ldrb	w10, [x11, x8]
   1cde4:	add	x9, x9, x10, lsl #2
   1cde8:	br	x9
   1cdec:	ldur	x8, [x21, #-16]
   1cdf0:	ldr	x9, [x21]
   1cdf4:	ldur	w1, [x21, #-8]
   1cdf8:	sub	x2, x29, #0x20
   1cdfc:	mov	w0, #0x2                   	// #2
   1ce00:	stp	x8, x9, [x29, #-32]
   1ce04:	bl	1d2e0 <extract_plural_expression@@Base+0xf8>
   1ce08:	adrp	x9, 38000 <get_search_path@@Base+0x1b4c>
   1ce0c:	sxtw	x8, w24
   1ce10:	add	x9, x9, #0xf49
   1ce14:	ldrb	w8, [x9, x8]
   1ce18:	sub	x21, x21, x25, lsl #3
   1ce1c:	adrp	x9, 38000 <get_search_path@@Base+0x1b4c>
   1ce20:	sub	x23, x23, x25, lsl #1
   1ce24:	str	x0, [x21, #8]!
   1ce28:	sub	x8, x8, #0x10
   1ce2c:	add	x9, x9, #0xf57
   1ce30:	ldrsb	w9, [x9, x8]
   1ce34:	ldrsh	w10, [x23]
   1ce38:	add	w9, w10, w9
   1ce3c:	cmp	w9, #0x36
   1ce40:	b.hi	1ce98 <parse_plural_expression@@Base+0x364>  // b.pmore
   1ce44:	adrp	x11, 38000 <get_search_path@@Base+0x1b4c>
   1ce48:	add	x11, x11, #0xeb2
   1ce4c:	ldrsb	w11, [x11, w9, uxtw]
   1ce50:	and	w10, w10, #0xffff
   1ce54:	cmp	w10, w11, uxth
   1ce58:	b.ne	1ce98 <parse_plural_expression@@Base+0x364>  // b.any
   1ce5c:	adrp	x8, 38000 <get_search_path@@Base+0x1b4c>
   1ce60:	add	x8, x8, #0xee9
   1ce64:	ldrb	w27, [x8, x9]
   1ce68:	b	1cea4 <parse_plural_expression@@Base+0x370>
   1ce6c:	ldr	w8, [sp, #28]
   1ce70:	cmp	w8, #0x3
   1ce74:	b.eq	1cebc <parse_plural_expression@@Base+0x388>  // b.none
   1ce78:	cbnz	w8, 1cefc <parse_plural_expression@@Base+0x3c8>
   1ce7c:	adrp	x0, 36000 <its_merge_context_free@@Base+0x1328>
   1ce80:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   1ce84:	mov	w2, #0x5                   	// #5
   1ce88:	add	x0, x0, #0xf82
   1ce8c:	add	x1, x1, #0x500
   1ce90:	bl	acd0 <dcgettext@plt>
   1ce94:	b	1cefc <parse_plural_expression@@Base+0x3c8>
   1ce98:	adrp	x9, 38000 <get_search_path@@Base+0x1b4c>
   1ce9c:	add	x9, x9, #0xf5a
   1cea0:	ldrsb	w27, [x9, x8]
   1cea4:	adrp	x24, 38000 <get_search_path@@Base+0x1b4c>
   1cea8:	mov	w25, #0x160                 	// #352
   1ceac:	add	x24, x24, #0xd90
   1ceb0:	movk	w25, #0x4bc, lsl #16
   1ceb4:	add	x23, x23, #0x2
   1ceb8:	b	1cba4 <parse_plural_expression@@Base+0x70>
   1cebc:	cmp	w19, #0x0
   1cec0:	b.le	1cef8 <parse_plural_expression@@Base+0x3c4>
   1cec4:	mov	w19, #0xfffffffe            	// #-2
   1cec8:	b	1cefc <parse_plural_expression@@Base+0x3c8>
   1cecc:	ldr	w9, [sp, #28]
   1ced0:	mov	w19, #0xfffffffe            	// #-2
   1ced4:	sub	w8, w9, #0x1
   1ced8:	cmp	w9, #0x0
   1cedc:	csel	w8, wzr, w8, eq  // eq = none
   1cee0:	str	w8, [sp, #28]
   1cee4:	ldr	x8, [sp, #8]
   1cee8:	mov	w9, w22
   1ceec:	bfi	x9, x8, #32, #32
   1cef0:	str	x9, [x21, #8]!
   1cef4:	b	1ceb4 <parse_plural_expression@@Base+0x380>
   1cef8:	cbz	w19, 1d118 <parse_plural_expression@@Base+0x5e4>
   1cefc:	add	x21, x21, #0x8
   1cf00:	lsr	x8, x26, x27
   1cf04:	tbnz	w8, #0, 1cf2c <parse_plural_expression@@Base+0x3f8>
   1cf08:	sxtw	x8, w27
   1cf0c:	lsr	x9, x25, x8
   1cf10:	tbz	w9, #0, 1cf2c <parse_plural_expression@@Base+0x3f8>
   1cf14:	ldrsb	x8, [x24, x8]
   1cf18:	adds	x8, x8, #0x1
   1cf1c:	b.ne	1cf2c <parse_plural_expression@@Base+0x3f8>  // b.any
   1cf20:	orr	x8, x8, #0x1
   1cf24:	cmp	x8, #0x25
   1cf28:	b.ne	1cf40 <parse_plural_expression@@Base+0x40c>  // b.any
   1cf2c:	cmp	x20, x23
   1cf30:	b.eq	1d118 <parse_plural_expression@@Base+0x5e4>  // b.none
   1cf34:	ldrsh	w27, [x23, #-2]!
   1cf38:	sub	x21, x21, #0x8
   1cf3c:	b	1cf00 <parse_plural_expression@@Base+0x3cc>
   1cf40:	ldr	x9, [sp, #8]
   1cf44:	mov	w8, w22
   1cf48:	mov	w27, #0x7                   	// #7
   1cf4c:	bfi	x8, x9, #32, #32
   1cf50:	str	x8, [x21]
   1cf54:	mov	w8, #0x3                   	// #3
   1cf58:	str	w8, [sp, #28]
   1cf5c:	b	1ceb4 <parse_plural_expression@@Base+0x380>
   1cf60:	ldr	x8, [x21]
   1cf64:	cbz	x8, 1d118 <parse_plural_expression@@Base+0x5e4>
   1cf68:	ldr	x9, [sp, #16]
   1cf6c:	str	x8, [x9, #8]
   1cf70:	b	1ce08 <parse_plural_expression@@Base+0x2d4>
   1cf74:	ldur	x8, [x21, #-32]
   1cf78:	ldur	x9, [x21, #-16]
   1cf7c:	ldr	x10, [x21]
   1cf80:	sub	x2, x29, #0x20
   1cf84:	mov	w0, #0x3                   	// #3
   1cf88:	mov	w1, #0x10                  	// #16
   1cf8c:	stp	x8, x9, [x29, #-32]
   1cf90:	stur	x10, [x29, #-16]
   1cf94:	b	1ce04 <parse_plural_expression@@Base+0x2d0>
   1cf98:	ldur	x8, [x21, #-16]
   1cf9c:	ldr	x9, [x21]
   1cfa0:	sub	x2, x29, #0x20
   1cfa4:	mov	w0, #0x2                   	// #2
   1cfa8:	mov	w1, #0xf                   	// #15
   1cfac:	b	1ce00 <parse_plural_expression@@Base+0x2cc>
   1cfb0:	ldur	x8, [x21, #-16]
   1cfb4:	ldr	x9, [x21]
   1cfb8:	sub	x2, x29, #0x20
   1cfbc:	mov	w0, #0x2                   	// #2
   1cfc0:	mov	w1, #0xe                   	// #14
   1cfc4:	b	1ce00 <parse_plural_expression@@Base+0x2cc>
   1cfc8:	ldr	x8, [x21]
   1cfcc:	sub	x2, x29, #0x20
   1cfd0:	mov	w0, #0x1                   	// #1
   1cfd4:	mov	w1, #0x2                   	// #2
   1cfd8:	stur	x8, [x29, #-32]
   1cfdc:	b	1ce04 <parse_plural_expression@@Base+0x2d0>
   1cfe0:	mov	w0, #0x20                  	// #32
   1cfe4:	bl	a3f0 <malloc@plt>
   1cfe8:	cbz	x0, 1ce08 <parse_plural_expression@@Base+0x2d4>
   1cfec:	str	xzr, [x0]
   1cff0:	b	1ce08 <parse_plural_expression@@Base+0x2d4>
   1cff4:	mov	w0, #0x20                  	// #32
   1cff8:	bl	a3f0 <malloc@plt>
   1cffc:	cbz	x0, 1ce08 <parse_plural_expression@@Base+0x2d4>
   1d000:	ldr	x8, [x21]
   1d004:	str	d8, [x0]
   1d008:	str	x8, [x0, #8]
   1d00c:	b	1ce08 <parse_plural_expression@@Base+0x2d4>
   1d010:	ldur	x0, [x21, #-8]
   1d014:	b	1ce08 <parse_plural_expression@@Base+0x2d4>
   1d018:	cmp	w19, #0x7c
   1d01c:	b.eq	1d038 <parse_plural_expression@@Base+0x504>  // b.none
   1d020:	cmp	w19, #0x6e
   1d024:	b.eq	1cd14 <parse_plural_expression@@Base+0x1e0>  // b.none
   1d028:	mov	w19, #0x100                 	// #256
   1d02c:	b	1cd14 <parse_plural_expression@@Base+0x1e0>
   1d030:	mov	w19, wzr
   1d034:	b	1cca8 <parse_plural_expression@@Base+0x174>
   1d038:	mov	x9, x8
   1d03c:	ldrb	w10, [x9], #1
   1d040:	cmp	w10, w19
   1d044:	csel	x8, x9, x8, eq  // eq = none
   1d048:	mov	w9, #0x100                 	// #256
   1d04c:	csel	w19, w19, w9, eq  // eq = none
   1d050:	b	1cd14 <parse_plural_expression@@Base+0x1e0>
   1d054:	mov	x9, x8
   1d058:	ldrb	w10, [x9], #1
   1d05c:	cmp	w10, #0x3d
   1d060:	mov	w10, #0xd                   	// #13
   1d064:	csel	w22, w10, w22, eq  // eq = none
   1d068:	csel	x8, x9, x8, eq  // eq = none
   1d06c:	mov	w9, #0x21                  	// #33
   1d070:	b	1d0e8 <parse_plural_expression@@Base+0x5b4>
   1d074:	mov	w19, #0x105                 	// #261
   1d078:	mov	w22, #0x5                   	// #5
   1d07c:	b	1cd14 <parse_plural_expression@@Base+0x1e0>
   1d080:	mov	w19, #0x105                 	// #261
   1d084:	mov	w22, #0x3                   	// #3
   1d088:	b	1cd14 <parse_plural_expression@@Base+0x1e0>
   1d08c:	mov	w19, #0x104                 	// #260
   1d090:	mov	w22, #0x6                   	// #6
   1d094:	b	1cd14 <parse_plural_expression@@Base+0x1e0>
   1d098:	mov	w19, #0x104                 	// #260
   1d09c:	mov	w22, #0x7                   	// #7
   1d0a0:	b	1cd14 <parse_plural_expression@@Base+0x1e0>
   1d0a4:	mov	w19, #0x105                 	// #261
   1d0a8:	mov	w22, #0x4                   	// #4
   1d0ac:	b	1cd14 <parse_plural_expression@@Base+0x1e0>
   1d0b0:	mov	x9, x8
   1d0b4:	ldrb	w10, [x9], #1
   1d0b8:	mov	w11, #0x8                   	// #8
   1d0bc:	cmp	w10, #0x3d
   1d0c0:	mov	w10, #0xa                   	// #10
   1d0c4:	csel	w22, w10, w11, eq  // eq = none
   1d0c8:	b	1d10c <parse_plural_expression@@Base+0x5d8>
   1d0cc:	mov	x9, x8
   1d0d0:	ldrb	w10, [x9], #1
   1d0d4:	cmp	w10, #0x3d
   1d0d8:	mov	w10, #0xc                   	// #12
   1d0dc:	csel	w22, w10, w22, eq  // eq = none
   1d0e0:	csel	x8, x9, x8, eq  // eq = none
   1d0e4:	mov	w9, #0x100                 	// #256
   1d0e8:	mov	w10, #0x102                 	// #258
   1d0ec:	csel	w19, w10, w9, eq  // eq = none
   1d0f0:	b	1cd14 <parse_plural_expression@@Base+0x1e0>
   1d0f4:	mov	x9, x8
   1d0f8:	ldrb	w10, [x9], #1
   1d0fc:	mov	w11, #0xb                   	// #11
   1d100:	cmp	w10, #0x3d
   1d104:	mov	w10, #0x9                   	// #9
   1d108:	csel	w22, w11, w10, eq  // eq = none
   1d10c:	csel	x8, x9, x8, eq  // eq = none
   1d110:	mov	w19, #0x103                 	// #259
   1d114:	b	1cd14 <parse_plural_expression@@Base+0x1e0>
   1d118:	mov	w19, #0x1                   	// #1
   1d11c:	add	x8, sp, #0x660
   1d120:	cmp	x20, x8
   1d124:	b.eq	1d130 <parse_plural_expression@@Base+0x5fc>  // b.none
   1d128:	mov	x0, x20
   1d12c:	bl	aa00 <free@plt>
   1d130:	mov	w0, w19
   1d134:	add	sp, sp, #0x810
   1d138:	ldp	x20, x19, [sp, #96]
   1d13c:	ldp	x22, x21, [sp, #80]
   1d140:	ldp	x24, x23, [sp, #64]
   1d144:	ldp	x26, x25, [sp, #48]
   1d148:	ldp	x28, x27, [sp, #32]
   1d14c:	ldp	x29, x30, [sp, #16]
   1d150:	ldr	d8, [sp], #112
   1d154:	ret
   1d158:	adrp	x0, 36000 <its_merge_context_free@@Base+0x1328>
   1d15c:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
   1d160:	add	x0, x0, #0xf82
   1d164:	add	x1, x1, #0xb16
   1d168:	mov	w2, #0x5                   	// #5
   1d16c:	bl	acd0 <dcgettext@plt>
   1d170:	mov	w19, #0x2                   	// #2
   1d174:	b	1d11c <parse_plural_expression@@Base+0x5e8>
   1d178:	mov	w19, wzr
   1d17c:	b	1d11c <parse_plural_expression@@Base+0x5e8>
   1d180:	mov	w19, #0x1                   	// #1
   1d184:	mov	x20, x24
   1d188:	b	1d128 <parse_plural_expression@@Base+0x5f4>

000000000001d18c <free_plural_expression@@Base>:
   1d18c:	cbz	x0, 1d1e4 <free_plural_expression@@Base+0x58>
   1d190:	stp	x29, x30, [sp, #-32]!
   1d194:	ldr	w8, [x0]
   1d198:	str	x19, [sp, #16]
   1d19c:	mov	x19, x0
   1d1a0:	mov	x29, sp
   1d1a4:	cmp	w8, #0x1
   1d1a8:	b.eq	1d1cc <free_plural_expression@@Base+0x40>  // b.none
   1d1ac:	cmp	w8, #0x2
   1d1b0:	b.eq	1d1c4 <free_plural_expression@@Base+0x38>  // b.none
   1d1b4:	cmp	w8, #0x3
   1d1b8:	b.ne	1d1d4 <free_plural_expression@@Base+0x48>  // b.any
   1d1bc:	ldr	x0, [x19, #24]
   1d1c0:	bl	a8b0 <free_plural_expression@plt>
   1d1c4:	ldr	x0, [x19, #16]
   1d1c8:	bl	a8b0 <free_plural_expression@plt>
   1d1cc:	ldr	x0, [x19, #8]
   1d1d0:	bl	a8b0 <free_plural_expression@plt>
   1d1d4:	mov	x0, x19
   1d1d8:	ldr	x19, [sp, #16]
   1d1dc:	ldp	x29, x30, [sp], #32
   1d1e0:	b	aa00 <free@plt>
   1d1e4:	ret

000000000001d1e8 <extract_plural_expression@@Base>:
   1d1e8:	sub	sp, sp, #0x50
   1d1ec:	stp	x20, x19, [sp, #64]
   1d1f0:	mov	x19, x2
   1d1f4:	mov	x20, x1
   1d1f8:	stp	x29, x30, [sp, #16]
   1d1fc:	str	x23, [sp, #32]
   1d200:	stp	x22, x21, [sp, #48]
   1d204:	add	x29, sp, #0x10
   1d208:	cbz	x0, 1d2a8 <extract_plural_expression@@Base+0xc0>
   1d20c:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1d210:	add	x1, x1, #0x752
   1d214:	mov	x22, x0
   1d218:	bl	acb0 <strstr@plt>
   1d21c:	adrp	x1, 38000 <get_search_path@@Base+0x1b4c>
   1d220:	mov	x21, x0
   1d224:	add	x1, x1, #0x75a
   1d228:	mov	x0, x22
   1d22c:	bl	acb0 <strstr@plt>
   1d230:	cbz	x21, 1d2a8 <extract_plural_expression@@Base+0xc0>
   1d234:	mov	x22, x0
   1d238:	cbz	x0, 1d2a8 <extract_plural_expression@@Base+0xc0>
   1d23c:	ldrb	w23, [x22, #9]!
   1d240:	cbz	w23, 1d2a8 <extract_plural_expression@@Base+0xc0>
   1d244:	bl	a920 <__ctype_b_loc@plt>
   1d248:	ldr	x8, [x0]
   1d24c:	and	x9, x23, #0xff
   1d250:	ldrh	w9, [x8, x9, lsl #1]
   1d254:	tbz	w9, #13, 1d264 <extract_plural_expression@@Base+0x7c>
   1d258:	ldrb	w23, [x22, #1]!
   1d25c:	cbnz	w23, 1d24c <extract_plural_expression@@Base+0x64>
   1d260:	b	1d2a8 <extract_plural_expression@@Base+0xc0>
   1d264:	sub	w8, w23, #0x30
   1d268:	and	w8, w8, #0xff
   1d26c:	cmp	w8, #0x9
   1d270:	b.hi	1d2a8 <extract_plural_expression@@Base+0xc0>  // b.pmore
   1d274:	add	x1, x29, #0x18
   1d278:	mov	w2, #0xa                   	// #10
   1d27c:	mov	x0, x22
   1d280:	bl	a0c0 <strtoul@plt>
   1d284:	ldr	x8, [x29, #24]
   1d288:	cmp	x8, x22
   1d28c:	b.eq	1d2a8 <extract_plural_expression@@Base+0xc0>  // b.none
   1d290:	str	x0, [x19]
   1d294:	add	x8, x21, #0x7
   1d298:	mov	x0, sp
   1d29c:	str	x8, [sp]
   1d2a0:	bl	a340 <parse_plural_expression@plt>
   1d2a4:	cbz	w0, 1d2d4 <extract_plural_expression@@Base+0xec>
   1d2a8:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1d2ac:	ldr	x8, [x8, #3712]
   1d2b0:	mov	w9, #0x2                   	// #2
   1d2b4:	str	x8, [x20]
   1d2b8:	str	x9, [x19]
   1d2bc:	ldp	x20, x19, [sp, #64]
   1d2c0:	ldp	x22, x21, [sp, #48]
   1d2c4:	ldr	x23, [sp, #32]
   1d2c8:	ldp	x29, x30, [sp, #16]
   1d2cc:	add	sp, sp, #0x50
   1d2d0:	ret
   1d2d4:	ldr	x8, [sp, #8]
   1d2d8:	str	x8, [x20]
   1d2dc:	b	1d2bc <extract_plural_expression@@Base+0xd4>
   1d2e0:	stp	x29, x30, [sp, #-64]!
   1d2e4:	str	x23, [sp, #16]
   1d2e8:	stp	x22, x21, [sp, #32]
   1d2ec:	stp	x20, x19, [sp, #48]
   1d2f0:	mov	x19, x2
   1d2f4:	mov	w20, w0
   1d2f8:	subs	w23, w0, #0x1
   1d2fc:	mov	w22, w1
   1d300:	mov	x29, sp
   1d304:	b.lt	1d320 <extract_plural_expression@@Base+0x138>  // b.tstop
   1d308:	mov	w8, w20
   1d30c:	sub	w8, w8, #0x1
   1d310:	ldr	x9, [x19, w8, uxtw #3]
   1d314:	cbz	x9, 1d354 <extract_plural_expression@@Base+0x16c>
   1d318:	cmp	w8, #0x1
   1d31c:	b.ge	1d30c <extract_plural_expression@@Base+0x124>  // b.tcont
   1d320:	mov	w0, #0x20                  	// #32
   1d324:	bl	a3f0 <malloc@plt>
   1d328:	cbz	x0, 1d354 <extract_plural_expression@@Base+0x16c>
   1d32c:	mov	x21, x0
   1d330:	cmp	w20, #0x1
   1d334:	stp	w20, w22, [x0]
   1d338:	b.lt	1d378 <extract_plural_expression@@Base+0x190>  // b.tstop
   1d33c:	mov	w8, w20
   1d340:	add	x0, x21, #0x8
   1d344:	lsl	x2, x8, #3
   1d348:	mov	x1, x19
   1d34c:	bl	a040 <memcpy@plt>
   1d350:	b	1d378 <extract_plural_expression@@Base+0x190>
   1d354:	cmp	w20, #0x1
   1d358:	b.lt	1d374 <extract_plural_expression@@Base+0x18c>  // b.tstop
   1d35c:	mov	w20, w23
   1d360:	ldr	x0, [x19, x20, lsl #3]
   1d364:	bl	a8b0 <free_plural_expression@plt>
   1d368:	cmp	x20, #0x0
   1d36c:	sub	x20, x20, #0x1
   1d370:	b.gt	1d360 <extract_plural_expression@@Base+0x178>
   1d374:	mov	x21, xzr
   1d378:	mov	x0, x21
   1d37c:	ldp	x20, x19, [sp, #48]
   1d380:	ldp	x22, x21, [sp, #32]
   1d384:	ldr	x23, [sp, #16]
   1d388:	ldp	x29, x30, [sp], #64
   1d38c:	ret

000000000001d390 <plural_eval@@Base>:
   1d390:	stp	x29, x30, [sp, #-48]!
   1d394:	stp	x22, x21, [sp, #16]
   1d398:	stp	x20, x19, [sp, #32]
   1d39c:	mov	x19, x1
   1d3a0:	mov	x20, x0
   1d3a4:	mov	w21, #0x8                   	// #8
   1d3a8:	mov	w22, #0x10                  	// #16
   1d3ac:	mov	x29, sp
   1d3b0:	ldr	w8, [x20]
   1d3b4:	cmp	w8, #0x3
   1d3b8:	b.ne	1d3d8 <plural_eval@@Base+0x48>  // b.any
   1d3bc:	ldr	x0, [x20, #8]!
   1d3c0:	mov	x1, x19
   1d3c4:	bl	ad30 <plural_eval@plt>
   1d3c8:	cmp	x0, #0x0
   1d3cc:	csel	x8, x22, x21, eq  // eq = none
   1d3d0:	ldr	x20, [x20, x8]
   1d3d4:	b	1d3b0 <plural_eval@@Base+0x20>
   1d3d8:	cmp	w8, #0x2
   1d3dc:	b.eq	1d404 <plural_eval@@Base+0x74>  // b.none
   1d3e0:	cmp	w8, #0x1
   1d3e4:	b.eq	1d434 <plural_eval@@Base+0xa4>  // b.none
   1d3e8:	cbnz	w8, 1d4a8 <plural_eval@@Base+0x118>
   1d3ec:	ldr	w8, [x20, #4]
   1d3f0:	cbz	w8, 1d4ac <plural_eval@@Base+0x11c>
   1d3f4:	cmp	w8, #0x1
   1d3f8:	b.ne	1d4a8 <plural_eval@@Base+0x118>  // b.any
   1d3fc:	ldr	x19, [x20, #8]
   1d400:	b	1d4ac <plural_eval@@Base+0x11c>
   1d404:	ldr	x0, [x20, #8]
   1d408:	mov	x1, x19
   1d40c:	bl	ad30 <plural_eval@plt>
   1d410:	ldr	w8, [x20, #4]
   1d414:	mov	x21, x0
   1d418:	cmp	w8, #0xe
   1d41c:	b.eq	1d44c <plural_eval@@Base+0xbc>  // b.none
   1d420:	cmp	w8, #0xf
   1d424:	b.ne	1d468 <plural_eval@@Base+0xd8>  // b.any
   1d428:	cbz	x21, 1d450 <plural_eval@@Base+0xc0>
   1d42c:	mov	w19, #0x1                   	// #1
   1d430:	b	1d4ac <plural_eval@@Base+0x11c>
   1d434:	ldr	x0, [x20, #8]
   1d438:	mov	x1, x19
   1d43c:	bl	ad30 <plural_eval@plt>
   1d440:	cmp	x0, #0x0
   1d444:	cset	w0, eq  // eq = none
   1d448:	b	1d4b0 <plural_eval@@Base+0x120>
   1d44c:	cbz	x21, 1d4a8 <plural_eval@@Base+0x118>
   1d450:	ldr	x0, [x20, #16]
   1d454:	mov	x1, x19
   1d458:	bl	ad30 <plural_eval@plt>
   1d45c:	cmp	x0, #0x0
   1d460:	cset	w0, ne  // ne = any
   1d464:	b	1d4b0 <plural_eval@@Base+0x120>
   1d468:	ldr	x0, [x20, #16]
   1d46c:	mov	x1, x19
   1d470:	bl	ad30 <plural_eval@plt>
   1d474:	ldr	w8, [x20, #4]
   1d478:	sub	w8, w8, #0x3
   1d47c:	cmp	w8, #0xa
   1d480:	b.hi	1d4a8 <plural_eval@@Base+0x118>  // b.pmore
   1d484:	adrp	x9, 38000 <get_search_path@@Base+0x1b4c>
   1d488:	add	x9, x9, #0xfa0
   1d48c:	adr	x10, 1d4a0 <plural_eval@@Base+0x110>
   1d490:	ldrb	w11, [x9, x8]
   1d494:	add	x10, x10, x11, lsl #2
   1d498:	mov	x19, x0
   1d49c:	br	x10
   1d4a0:	mul	x19, x19, x21
   1d4a4:	b	1d4ac <plural_eval@@Base+0x11c>
   1d4a8:	mov	x19, xzr
   1d4ac:	mov	x0, x19
   1d4b0:	ldp	x20, x19, [sp, #32]
   1d4b4:	ldp	x22, x21, [sp, #16]
   1d4b8:	ldp	x29, x30, [sp], #48
   1d4bc:	ret
   1d4c0:	cbnz	x19, 1d4cc <plural_eval@@Base+0x13c>
   1d4c4:	mov	w0, #0x8                   	// #8
   1d4c8:	bl	a120 <raise@plt>
   1d4cc:	udiv	x19, x21, x19
   1d4d0:	b	1d4ac <plural_eval@@Base+0x11c>
   1d4d4:	cbnz	x19, 1d4e0 <plural_eval@@Base+0x150>
   1d4d8:	mov	w0, #0x8                   	// #8
   1d4dc:	bl	a120 <raise@plt>
   1d4e0:	udiv	x8, x21, x19
   1d4e4:	msub	x19, x8, x19, x21
   1d4e8:	b	1d4ac <plural_eval@@Base+0x11c>
   1d4ec:	add	x19, x19, x21
   1d4f0:	b	1d4ac <plural_eval@@Base+0x11c>
   1d4f4:	sub	x19, x21, x19
   1d4f8:	b	1d4ac <plural_eval@@Base+0x11c>
   1d4fc:	cmp	x21, x19
   1d500:	cset	w19, cc  // cc = lo, ul, last
   1d504:	b	1d4ac <plural_eval@@Base+0x11c>
   1d508:	cmp	x21, x19
   1d50c:	cset	w19, hi  // hi = pmore
   1d510:	b	1d4ac <plural_eval@@Base+0x11c>
   1d514:	cmp	x21, x19
   1d518:	cset	w19, ls  // ls = plast
   1d51c:	b	1d4ac <plural_eval@@Base+0x11c>
   1d520:	cmp	x21, x19
   1d524:	cset	w19, cs  // cs = hs, nlast
   1d528:	b	1d4ac <plural_eval@@Base+0x11c>
   1d52c:	cmp	x21, x19
   1d530:	cset	w19, eq  // eq = none
   1d534:	b	1d4ac <plural_eval@@Base+0x11c>
   1d538:	cmp	x21, x19
   1d53c:	cset	w19, ne  // ne = any
   1d540:	b	1d4ac <plural_eval@@Base+0x11c>

000000000001d544 <install_sigfpe_handler@@Base>:
   1d544:	sub	sp, sp, #0xb0
   1d548:	adrp	x8, 1d000 <parse_plural_expression@@Base+0x4cc>
   1d54c:	add	x10, sp, #0x8
   1d550:	add	x8, x8, #0x58c
   1d554:	mov	w9, #0x4                   	// #4
   1d558:	add	x0, x10, #0x8
   1d55c:	stp	x29, x30, [sp, #160]
   1d560:	add	x29, sp, #0xa0
   1d564:	str	x8, [sp, #8]
   1d568:	str	w9, [sp, #144]
   1d56c:	bl	a490 <sigemptyset@plt>
   1d570:	add	x1, sp, #0x8
   1d574:	mov	w0, #0x8                   	// #8
   1d578:	mov	x2, xzr
   1d57c:	bl	a740 <sigaction@plt>
   1d580:	ldp	x29, x30, [sp, #160]
   1d584:	add	sp, sp, #0xb0
   1d588:	ret
   1d58c:	stp	x29, x30, [sp, #-16]!
   1d590:	adrp	x9, 4c000 <plural_table_size@@Base+0x12c00>
   1d594:	ldr	w8, [x1, #8]
   1d598:	ldr	x9, [x9, #3808]
   1d59c:	adrp	x0, 4c000 <plural_table_size@@Base+0x12c00>
   1d5a0:	mov	w1, #0x1                   	// #1
   1d5a4:	mov	x29, sp
   1d5a8:	str	w8, [x9]
   1d5ac:	ldr	x0, [x0, #3992]
   1d5b0:	bl	aa50 <siglongjmp@plt>

000000000001d5b4 <uninstall_sigfpe_handler@@Base>:
   1d5b4:	sub	sp, sp, #0xb0
   1d5b8:	add	x8, sp, #0x8
   1d5bc:	add	x0, x8, #0x8
   1d5c0:	stp	x29, x30, [sp, #160]
   1d5c4:	add	x29, sp, #0xa0
   1d5c8:	str	xzr, [sp, #8]
   1d5cc:	str	wzr, [sp, #144]
   1d5d0:	bl	a490 <sigemptyset@plt>
   1d5d4:	add	x1, sp, #0x8
   1d5d8:	mov	w0, #0x8                   	// #8
   1d5dc:	mov	x2, xzr
   1d5e0:	bl	a740 <sigaction@plt>
   1d5e4:	ldp	x29, x30, [sp, #160]
   1d5e8:	add	sp, sp, #0xb0
   1d5ec:	ret

000000000001d5f0 <sentence_end@@Base>:
   1d5f0:	sub	sp, sp, #0x70
   1d5f4:	stp	x29, x30, [sp, #16]
   1d5f8:	stp	x28, x27, [sp, #32]
   1d5fc:	stp	x26, x25, [sp, #48]
   1d600:	stp	x24, x23, [sp, #64]
   1d604:	stp	x22, x21, [sp, #80]
   1d608:	stp	x20, x19, [sp, #96]
   1d60c:	add	x29, sp, #0x10
   1d610:	mov	x19, x1
   1d614:	mov	x21, x0
   1d618:	bl	a0d0 <strlen@plt>
   1d61c:	add	x22, x21, x0
   1d620:	tbnz	x0, #63, 1d824 <sentence_end@@Base+0x234>
   1d624:	adrp	x27, 4c000 <plural_table_size@@Base+0x12c00>
   1d628:	ldr	x27, [x27, #3920]
   1d62c:	adrp	x25, 39000 <get_search_path@@Base+0x2b4c>
   1d630:	mov	w23, wzr
   1d634:	mov	x24, xzr
   1d638:	mov	x20, xzr
   1d63c:	mov	w26, wzr
   1d640:	mov	w28, #0xfffd                	// #65533
   1d644:	add	x25, x25, #0x408
   1d648:	ldrsb	w8, [x21]
   1d64c:	tbnz	w8, #31, 1d660 <sentence_end@@Base+0x70>
   1d650:	and	w8, w8, #0xff
   1d654:	stur	w8, [x29, #-4]
   1d658:	mov	w0, #0x1                   	// #1
   1d65c:	b	1d670 <sentence_end@@Base+0x80>
   1d660:	sub	x2, x22, x21
   1d664:	sub	x0, x29, #0x4
   1d668:	mov	x1, x21
   1d66c:	bl	a820 <u8_mbtouc_aux@plt>
   1d670:	cmp	w26, #0x4
   1d674:	b.hi	1d798 <sentence_end@@Base+0x1a8>  // b.pmore
   1d678:	mov	w8, w26
   1d67c:	adr	x10, 1d694 <sentence_end@@Base+0xa4>
   1d680:	ldrb	w9, [x25, x8]
   1d684:	add	x10, x10, x9, lsl #2
   1d688:	sxtw	x8, w0
   1d68c:	mov	x9, x21
   1d690:	br	x10
   1d694:	ldur	w9, [x29, #-4]
   1d698:	cmp	w9, #0x3f
   1d69c:	b.hi	1d6b8 <sentence_end@@Base+0xc8>  // b.pmore
   1d6a0:	mov	w10, #0x1                   	// #1
   1d6a4:	mov	x11, #0x400200000000        	// #70377334112256
   1d6a8:	lsl	x10, x10, x9
   1d6ac:	movk	x11, #0x8000, lsl #48
   1d6b0:	tst	x10, x11
   1d6b4:	b.ne	1d6c4 <sentence_end@@Base+0xd4>  // b.any
   1d6b8:	mov	w10, #0x2026                	// #8230
   1d6bc:	cmp	w9, w10
   1d6c0:	b.ne	1d7f8 <sentence_end@@Base+0x208>  // b.any
   1d6c4:	mov	w23, wzr
   1d6c8:	add	x24, x21, x8
   1d6cc:	mov	w26, #0x1                   	// #1
   1d6d0:	mov	w28, w9
   1d6d4:	mov	x20, x21
   1d6d8:	b	1d7fc <sentence_end@@Base+0x20c>
   1d6dc:	ldur	w9, [x29, #-4]
   1d6e0:	mov	w26, wzr
   1d6e4:	mov	w10, #0x2                   	// #2
   1d6e8:	cmp	w9, #0x5c
   1d6ec:	b.gt	1d77c <sentence_end@@Base+0x18c>
   1d6f0:	sub	w11, w9, #0x20
   1d6f4:	cmp	w11, #0x9
   1d6f8:	b.hi	1d804 <sentence_end@@Base+0x214>  // b.pmore
   1d6fc:	adrp	x13, 39000 <get_search_path@@Base+0x2b4c>
   1d700:	add	x13, x13, #0x417
   1d704:	adr	x12, 1d7d8 <sentence_end@@Base+0x1e8>
   1d708:	ldrb	w9, [x13, x11]
   1d70c:	add	x12, x12, x9, lsl #2
   1d710:	mov	x9, x24
   1d714:	br	x12
   1d718:	ldur	w9, [x29, #-4]
   1d71c:	mov	w26, wzr
   1d720:	mov	w10, #0x2                   	// #2
   1d724:	cmp	w9, #0x5c
   1d728:	b.gt	1d77c <sentence_end@@Base+0x18c>
   1d72c:	sub	w11, w9, #0x20
   1d730:	cmp	w11, #0x9
   1d734:	b.hi	1d804 <sentence_end@@Base+0x214>  // b.pmore
   1d738:	adrp	x13, 39000 <get_search_path@@Base+0x2b4c>
   1d73c:	add	x13, x13, #0x40d
   1d740:	adr	x12, 1d7d8 <sentence_end@@Base+0x1e8>
   1d744:	ldrb	w9, [x13, x11]
   1d748:	add	x12, x12, x9, lsl #2
   1d74c:	mov	x9, x24
   1d750:	br	x12
   1d754:	ldur	w9, [x29, #-4]
   1d758:	mov	w26, wzr
   1d75c:	cmp	w9, #0x9f
   1d760:	b.gt	1d7a0 <sentence_end@@Base+0x1b0>
   1d764:	cmp	w9, #0x20
   1d768:	b.eq	1d7a8 <sentence_end@@Base+0x1b8>  // b.none
   1d76c:	cbz	w9, 1d834 <sentence_end@@Base+0x244>
   1d770:	cmp	w9, #0xa
   1d774:	b.ne	1d814 <sentence_end@@Base+0x224>  // b.any
   1d778:	b	1d834 <sentence_end@@Base+0x244>
   1d77c:	cmp	w9, #0x9f
   1d780:	b.gt	1d7c4 <sentence_end@@Base+0x1d4>
   1d784:	cmp	w9, #0x5d
   1d788:	b.eq	1d7ec <sentence_end@@Base+0x1fc>  // b.none
   1d78c:	cmp	w9, #0x7d
   1d790:	b.eq	1d7ec <sentence_end@@Base+0x1fc>  // b.none
   1d794:	b	1d814 <sentence_end@@Base+0x224>
   1d798:	mov	x9, x21
   1d79c:	b	1d818 <sentence_end@@Base+0x228>
   1d7a0:	cmp	w9, #0xa0
   1d7a4:	b.ne	1d814 <sentence_end@@Base+0x224>  // b.any
   1d7a8:	ldr	w9, [x27]
   1d7ac:	add	w23, w23, #0x1
   1d7b0:	cmp	w23, w9
   1d7b4:	b.eq	1d834 <sentence_end@@Base+0x244>  // b.none
   1d7b8:	add	x9, x21, x8
   1d7bc:	mov	w26, #0x4                   	// #4
   1d7c0:	b	1d818 <sentence_end@@Base+0x228>
   1d7c4:	mov	w11, #0x201d                	// #8221
   1d7c8:	cmp	w9, w11
   1d7cc:	b.eq	1d7ec <sentence_end@@Base+0x1fc>  // b.none
   1d7d0:	cmp	w9, #0xa0
   1d7d4:	b.ne	1d814 <sentence_end@@Base+0x224>  // b.any
   1d7d8:	ldr	w9, [x27]
   1d7dc:	add	w23, w23, #0x1
   1d7e0:	cmp	w23, w9
   1d7e4:	b.eq	1d834 <sentence_end@@Base+0x244>  // b.none
   1d7e8:	mov	w10, #0x4                   	// #4
   1d7ec:	add	x9, x21, x8
   1d7f0:	mov	w26, w10
   1d7f4:	b	1d818 <sentence_end@@Base+0x228>
   1d7f8:	mov	w26, wzr
   1d7fc:	add	x9, x21, x8
   1d800:	b	1d818 <sentence_end@@Base+0x228>
   1d804:	sub	w8, w9, #0x9
   1d808:	cmp	w8, #0x2
   1d80c:	b.cc	1d834 <sentence_end@@Base+0x244>  // b.lo, b.ul, b.last
   1d810:	cbz	w9, 1d834 <sentence_end@@Base+0x244>
   1d814:	mov	x9, x24
   1d818:	cmp	x9, x22
   1d81c:	mov	x21, x9
   1d820:	b.ls	1d648 <sentence_end@@Base+0x58>  // b.plast
   1d824:	mov	w8, #0xfffd                	// #65533
   1d828:	mov	x20, x22
   1d82c:	str	w8, [x19]
   1d830:	b	1d838 <sentence_end@@Base+0x248>
   1d834:	str	w28, [x19]
   1d838:	mov	x0, x20
   1d83c:	ldp	x20, x19, [sp, #96]
   1d840:	ldp	x22, x21, [sp, #80]
   1d844:	ldp	x24, x23, [sp, #64]
   1d848:	ldp	x26, x25, [sp, #48]
   1d84c:	ldp	x28, x27, [sp, #32]
   1d850:	ldp	x29, x30, [sp, #16]
   1d854:	add	sp, sp, #0x70
   1d858:	ret

000000000001d85c <check_msgid_msgstr_format_i@@Base>:
   1d85c:	sub	sp, sp, #0xc0
   1d860:	stp	x29, x30, [sp, #96]
   1d864:	add	x29, sp, #0x60
   1d868:	stp	x28, x27, [sp, #112]
   1d86c:	stp	x26, x25, [sp, #128]
   1d870:	stp	x24, x23, [sp, #144]
   1d874:	stp	x22, x21, [sp, #160]
   1d878:	stp	x20, x19, [sp, #176]
   1d87c:	stur	x7, [x29, #-40]
   1d880:	str	x6, [sp, #24]
   1d884:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   1d888:	ldr	x8, [x8, #3792]
   1d88c:	stur	xzr, [x29, #-8]
   1d890:	cmp	x1, #0x0
   1d894:	mov	x22, x3
   1d898:	ldr	x20, [x8, x4, lsl #3]
   1d89c:	mov	x24, x2
   1d8a0:	mov	x23, x1
   1d8a4:	csel	x0, x1, x0, ne  // ne = any
   1d8a8:	ldr	x8, [x20]
   1d8ac:	sub	x3, x29, #0x8
   1d8b0:	mov	w1, wzr
   1d8b4:	mov	x2, xzr
   1d8b8:	mov	x19, x5
   1d8bc:	str	x4, [sp, #32]
   1d8c0:	blr	x8
   1d8c4:	str	x0, [sp, #48]
   1d8c8:	cbz	x0, 1da70 <check_msgid_msgstr_format_i@@Base+0x214>
   1d8cc:	adrp	x8, 36000 <its_merge_context_free@@Base+0x1328>
   1d8d0:	adrp	x9, 36000 <its_merge_context_free@@Base+0x1328>
   1d8d4:	add	x8, x8, #0xc57
   1d8d8:	add	x9, x9, #0xc5d
   1d8dc:	cmp	x23, #0x0
   1d8e0:	csel	x26, x9, x8, ne  // ne = any
   1d8e4:	cmp	x22, #0x1
   1d8e8:	b.lt	1da80 <check_msgid_msgstr_format_i@@Base+0x224>  // b.tstop
   1d8ec:	mov	x0, x24
   1d8f0:	lsr	x21, x19, #32
   1d8f4:	add	x25, x24, x22
   1d8f8:	bl	a0d0 <strlen@plt>
   1d8fc:	ldr	x10, [sp, #24]
   1d900:	add	x8, x0, #0x1
   1d904:	cmp	x8, x22
   1d908:	orr	w9, w21, w19
   1d90c:	cset	w8, cs  // cs = hs, nlast
   1d910:	cmp	x23, #0x0
   1d914:	str	w9, [sp, #20]
   1d918:	cset	w9, eq  // eq = none
   1d91c:	cmp	x10, #0x0
   1d920:	stp	x21, x19, [sp]
   1d924:	adrp	x21, 36000 <its_merge_context_free@@Base+0x1328>
   1d928:	orr	w9, w9, w8
   1d92c:	cset	w8, eq  // eq = none
   1d930:	mov	w27, wzr
   1d934:	mov	w28, wzr
   1d938:	add	x21, x21, #0xc6a
   1d93c:	orr	w8, w9, w8
   1d940:	stp	w8, w9, [sp, #40]
   1d944:	cbz	x23, 1d960 <check_msgid_msgstr_format_i@@Base+0x104>
   1d948:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   1d94c:	sub	x0, x29, #0x1c
   1d950:	add	x1, x1, #0xcfd
   1d954:	mov	w2, w28
   1d958:	sub	x21, x29, #0x1c
   1d95c:	bl	a280 <sprintf@plt>
   1d960:	ldr	x8, [x20]
   1d964:	sub	x3, x29, #0x8
   1d968:	mov	w1, #0x1                   	// #1
   1d96c:	mov	x0, x24
   1d970:	mov	x2, xzr
   1d974:	blr	x8
   1d978:	cbz	x0, 1d9cc <check_msgid_msgstr_format_i@@Base+0x170>
   1d97c:	ldp	w8, w2, [sp, #40]
   1d980:	mov	x22, x0
   1d984:	tbnz	w8, #0, 1da14 <check_msgid_msgstr_format_i@@Base+0x1b8>
   1d988:	ldr	x0, [sp, #24]
   1d98c:	ldr	x8, [x0, #8]
   1d990:	cbz	x8, 1da10 <check_msgid_msgstr_format_i@@Base+0x1b4>
   1d994:	ldr	x9, [x0, #16]
   1d998:	cmp	x9, w28, uxtw
   1d99c:	b.ls	1da10 <check_msgid_msgstr_format_i@@Base+0x1b4>  // b.plast
   1d9a0:	mov	w3, w28
   1d9a4:	ldrb	w8, [x8, x3]
   1d9a8:	cbz	w8, 1da10 <check_msgid_msgstr_format_i@@Base+0x1b4>
   1d9ac:	ldr	w8, [sp, #20]
   1d9b0:	tbnz	w8, #31, 1da64 <check_msgid_msgstr_format_i@@Base+0x208>
   1d9b4:	ldr	x8, [x0, #24]
   1d9b8:	ldp	x2, x1, [sp]
   1d9bc:	blr	x8
   1d9c0:	cmp	w0, #0x2
   1d9c4:	cset	w8, cc  // cc = lo, ul, last
   1d9c8:	b	1da68 <check_msgid_msgstr_format_i@@Base+0x20c>
   1d9cc:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1d9d0:	mov	w2, #0x5                   	// #5
   1d9d4:	add	x1, x1, #0x421
   1d9d8:	bl	acd0 <dcgettext@plt>
   1d9dc:	adrp	x9, 4c000 <plural_table_size@@Base+0x12c00>
   1d9e0:	ldr	x8, [sp, #32]
   1d9e4:	ldr	x9, [x9, #4064]
   1d9e8:	ldur	x4, [x29, #-8]
   1d9ec:	mov	x1, x21
   1d9f0:	mov	x3, x26
   1d9f4:	ldr	x2, [x9, x8, lsl #3]
   1d9f8:	ldur	x8, [x29, #-40]
   1d9fc:	blr	x8
   1da00:	ldur	x0, [x29, #-8]
   1da04:	bl	aa00 <free@plt>
   1da08:	mov	w19, #0x1                   	// #1
   1da0c:	b	1da40 <check_msgid_msgstr_format_i@@Base+0x1e4>
   1da10:	mov	w2, wzr
   1da14:	ldr	x8, [x20, #32]
   1da18:	ldr	x0, [sp, #48]
   1da1c:	ldur	x3, [x29, #-40]
   1da20:	mov	x1, x22
   1da24:	mov	x4, x26
   1da28:	mov	x5, x21
   1da2c:	blr	x8
   1da30:	ldr	x8, [x20, #8]
   1da34:	and	w19, w0, #0x1
   1da38:	mov	x0, x22
   1da3c:	blr	x8
   1da40:	mov	x0, x24
   1da44:	add	w27, w19, w27
   1da48:	bl	a0d0 <strlen@plt>
   1da4c:	add	x8, x0, x24
   1da50:	add	x24, x8, #0x1
   1da54:	cmp	x24, x25
   1da58:	add	w28, w28, #0x1
   1da5c:	b.cc	1d944 <check_msgid_msgstr_format_i@@Base+0xe8>  // b.lo, b.ul, b.last
   1da60:	b	1da84 <check_msgid_msgstr_format_i@@Base+0x228>
   1da64:	mov	w8, wzr
   1da68:	eor	w2, w8, #0x1
   1da6c:	b	1da14 <check_msgid_msgstr_format_i@@Base+0x1b8>
   1da70:	ldur	x0, [x29, #-8]
   1da74:	bl	aa00 <free@plt>
   1da78:	mov	w27, wzr
   1da7c:	b	1da90 <check_msgid_msgstr_format_i@@Base+0x234>
   1da80:	mov	w27, wzr
   1da84:	ldr	x8, [x20, #8]
   1da88:	ldr	x0, [sp, #48]
   1da8c:	blr	x8
   1da90:	mov	w0, w27
   1da94:	ldp	x20, x19, [sp, #176]
   1da98:	ldp	x22, x21, [sp, #160]
   1da9c:	ldp	x24, x23, [sp, #144]
   1daa0:	ldp	x26, x25, [sp, #128]
   1daa4:	ldp	x28, x27, [sp, #112]
   1daa8:	ldp	x29, x30, [sp, #96]
   1daac:	add	sp, sp, #0xc0
   1dab0:	ret

000000000001dab4 <check_msgid_msgstr_format@@Base>:
   1dab4:	stp	x29, x30, [sp, #-96]!
   1dab8:	stp	x28, x27, [sp, #16]
   1dabc:	stp	x26, x25, [sp, #32]
   1dac0:	stp	x24, x23, [sp, #48]
   1dac4:	stp	x22, x21, [sp, #64]
   1dac8:	stp	x20, x19, [sp, #80]
   1dacc:	mov	x19, x7
   1dad0:	mov	x20, x6
   1dad4:	mov	x21, x5
   1dad8:	mov	x22, x4
   1dadc:	mov	x23, x3
   1dae0:	mov	x24, x2
   1dae4:	mov	x25, x1
   1dae8:	mov	x26, x0
   1daec:	mov	x28, xzr
   1daf0:	mov	w27, wzr
   1daf4:	mov	x29, sp
   1daf8:	ldr	w0, [x22, x28, lsl #2]
   1dafc:	bl	aa30 <possible_format_p@plt>
   1db00:	tbz	w0, #0, 1db2c <check_msgid_msgstr_format@@Base+0x78>
   1db04:	mov	x0, x26
   1db08:	mov	x1, x25
   1db0c:	mov	x2, x24
   1db10:	mov	x3, x23
   1db14:	mov	x4, x28
   1db18:	mov	x5, x21
   1db1c:	mov	x6, x20
   1db20:	mov	x7, x19
   1db24:	bl	aae0 <check_msgid_msgstr_format_i@plt>
   1db28:	add	w27, w0, w27
   1db2c:	add	x28, x28, #0x1
   1db30:	cmp	x28, #0x1c
   1db34:	b.ne	1daf8 <check_msgid_msgstr_format@@Base+0x44>  // b.any
   1db38:	mov	w0, w27
   1db3c:	ldp	x20, x19, [sp, #80]
   1db40:	ldp	x22, x21, [sp, #64]
   1db44:	ldp	x24, x23, [sp, #48]
   1db48:	ldp	x26, x25, [sp, #32]
   1db4c:	ldp	x28, x27, [sp, #16]
   1db50:	ldp	x29, x30, [sp], #96
   1db54:	ret
   1db58:	mov	x4, x3
   1db5c:	mov	x3, x2
   1db60:	and	w1, w1, #0x1
   1db64:	mov	w2, wzr
   1db68:	b	1dd98 <get_sysdep_c_format_directives@@Base+0xc4>
   1db6c:	stp	x29, x30, [sp, #-32]!
   1db70:	str	x19, [sp, #16]
   1db74:	mov	x19, x0
   1db78:	ldr	x0, [x0, #16]
   1db7c:	mov	x29, sp
   1db80:	cbz	x0, 1db88 <check_msgid_msgstr_format@@Base+0xd4>
   1db84:	bl	aa00 <free@plt>
   1db88:	ldr	x0, [x19, #32]
   1db8c:	cbz	x0, 1db94 <check_msgid_msgstr_format@@Base+0xe0>
   1db90:	bl	aa00 <free@plt>
   1db94:	mov	x0, x19
   1db98:	ldr	x19, [sp, #16]
   1db9c:	ldp	x29, x30, [sp], #32
   1dba0:	b	aa00 <free@plt>
   1dba4:	ldr	w0, [x0]
   1dba8:	ret
   1dbac:	ldrb	w0, [x0, #24]
   1dbb0:	ret
   1dbb4:	stp	x29, x30, [sp, #-80]!
   1dbb8:	stp	x24, x23, [sp, #32]
   1dbbc:	stp	x22, x21, [sp, #48]
   1dbc0:	stp	x20, x19, [sp, #64]
   1dbc4:	ldr	w9, [x0, #4]
   1dbc8:	ldr	w8, [x1, #4]
   1dbcc:	mov	x19, x5
   1dbd0:	mov	x21, x4
   1dbd4:	mov	x20, x3
   1dbd8:	mov	x22, x1
   1dbdc:	mov	x23, x0
   1dbe0:	cmp	w9, w8
   1dbe4:	str	x25, [sp, #16]
   1dbe8:	mov	x29, sp
   1dbec:	tbz	w2, #0, 1dc20 <check_msgid_msgstr_format@@Base+0x16c>
   1dbf0:	b.eq	1dc24 <check_msgid_msgstr_format@@Base+0x170>  // b.none
   1dbf4:	cbz	x20, 1dc18 <check_msgid_msgstr_format@@Base+0x164>
   1dbf8:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1dbfc:	add	x1, x1, #0x506
   1dc00:	mov	w2, #0x5                   	// #5
   1dc04:	mov	x0, xzr
   1dc08:	bl	acd0 <dcgettext@plt>
   1dc0c:	mov	x1, x21
   1dc10:	mov	x2, x19
   1dc14:	blr	x20
   1dc18:	mov	w9, #0x1                   	// #1
   1dc1c:	b	1dca4 <check_msgid_msgstr_format@@Base+0x1f0>
   1dc20:	b.cc	1dbf4 <check_msgid_msgstr_format@@Base+0x140>  // b.lo, b.ul, b.last
   1dc24:	cbz	w8, 1dca0 <check_msgid_msgstr_format@@Base+0x1ec>
   1dc28:	adrp	x25, 39000 <get_search_path@@Base+0x2b4c>
   1dc2c:	mov	x24, xzr
   1dc30:	mov	w9, wzr
   1dc34:	add	x25, x25, #0x546
   1dc38:	ldr	x10, [x23, #16]
   1dc3c:	ldr	x11, [x22, #16]
   1dc40:	ldr	w10, [x10, x24, lsl #2]
   1dc44:	ldr	w11, [x11, x24, lsl #2]
   1dc48:	cmp	w10, w11
   1dc4c:	ccmp	x20, #0x0, #0x4, ne  // ne = any
   1dc50:	b.ne	1dc68 <check_msgid_msgstr_format@@Base+0x1b4>  // b.any
   1dc54:	cmp	w10, w11
   1dc58:	cset	w10, ne  // ne = any
   1dc5c:	orr	w9, w9, w10
   1dc60:	add	x24, x24, #0x1
   1dc64:	b	1dc94 <check_msgid_msgstr_format@@Base+0x1e0>
   1dc68:	mov	w2, #0x5                   	// #5
   1dc6c:	mov	x0, xzr
   1dc70:	mov	x1, x25
   1dc74:	bl	acd0 <dcgettext@plt>
   1dc78:	add	x24, x24, #0x1
   1dc7c:	mov	x1, x21
   1dc80:	mov	x2, x19
   1dc84:	mov	w3, w24
   1dc88:	blr	x20
   1dc8c:	ldr	w8, [x22, #4]
   1dc90:	mov	w9, #0x1                   	// #1
   1dc94:	cmp	x24, w8, uxtw
   1dc98:	b.cc	1dc38 <check_msgid_msgstr_format@@Base+0x184>  // b.lo, b.ul, b.last
   1dc9c:	b	1dca4 <check_msgid_msgstr_format@@Base+0x1f0>
   1dca0:	mov	w9, wzr
   1dca4:	ldp	x20, x19, [sp, #64]
   1dca8:	ldp	x22, x21, [sp, #48]
   1dcac:	ldp	x24, x23, [sp, #32]
   1dcb0:	ldr	x25, [sp, #16]
   1dcb4:	and	w0, w9, #0x1
   1dcb8:	ldp	x29, x30, [sp], #80
   1dcbc:	ret
   1dcc0:	mov	x4, x3
   1dcc4:	mov	x3, x2
   1dcc8:	and	w1, w1, #0x1
   1dccc:	mov	w2, #0x1                   	// #1
   1dcd0:	b	1dd98 <get_sysdep_c_format_directives@@Base+0xc4>

000000000001dcd4 <get_sysdep_c_format_directives@@Base>:
   1dcd4:	stp	x29, x30, [sp, #-64]!
   1dcd8:	mov	x29, sp
   1dcdc:	stp	x20, x19, [sp, #48]
   1dce0:	mov	x19, x3
   1dce4:	mov	x20, x2
   1dce8:	and	w1, w1, #0x1
   1dcec:	add	x4, x29, #0x18
   1dcf0:	mov	w2, #0x1                   	// #1
   1dcf4:	mov	x3, xzr
   1dcf8:	str	x23, [sp, #16]
   1dcfc:	stp	x22, x21, [sp, #32]
   1dd00:	mov	x22, x0
   1dd04:	str	xzr, [x29, #24]
   1dd08:	bl	1dd98 <get_sysdep_c_format_directives@@Base+0xc4>
   1dd0c:	mov	x21, x0
   1dd10:	cbz	x0, 1dd60 <get_sysdep_c_format_directives@@Base+0x8c>
   1dd14:	ldr	w23, [x21, #28]
   1dd18:	cbz	w23, 1dd60 <get_sysdep_c_format_directives@@Base+0x8c>
   1dd1c:	lsl	x0, x23, #4
   1dd20:	bl	a590 <xmalloc@plt>
   1dd24:	ldr	x9, [x21, #32]
   1dd28:	mov	x8, xzr
   1dd2c:	dup	v0.2d, x22
   1dd30:	lsl	x10, x23, #1
   1dd34:	mov	x11, x0
   1dd38:	and	x12, x8, #0xfffffffe
   1dd3c:	lsl	x12, x12, #3
   1dd40:	ldr	q1, [x9, x12]
   1dd44:	add	x8, x8, #0x2
   1dd48:	cmp	x10, x8
   1dd4c:	sub	v1.2d, v1.2d, v0.2d
   1dd50:	str	q1, [x11], #16
   1dd54:	b.ne	1dd38 <get_sysdep_c_format_directives@@Base+0x64>  // b.any
   1dd58:	str	x0, [x20]
   1dd5c:	b	1dd68 <get_sysdep_c_format_directives@@Base+0x94>
   1dd60:	mov	x23, xzr
   1dd64:	str	xzr, [x20]
   1dd68:	str	x23, [x19]
   1dd6c:	cbz	x21, 1dd7c <get_sysdep_c_format_directives@@Base+0xa8>
   1dd70:	mov	x0, x21
   1dd74:	bl	1db6c <check_msgid_msgstr_format@@Base+0xb8>
   1dd78:	b	1dd84 <get_sysdep_c_format_directives@@Base+0xb0>
   1dd7c:	ldr	x0, [x29, #24]
   1dd80:	bl	aa00 <free@plt>
   1dd84:	ldp	x20, x19, [sp, #48]
   1dd88:	ldp	x22, x21, [sp, #32]
   1dd8c:	ldr	x23, [sp, #16]
   1dd90:	ldp	x29, x30, [sp], #64
   1dd94:	ret
   1dd98:	sub	sp, sp, #0xe0
   1dd9c:	stp	x29, x30, [sp, #128]
   1dda0:	stp	x28, x27, [sp, #144]
   1dda4:	stp	x26, x25, [sp, #160]
   1dda8:	stp	x24, x23, [sp, #176]
   1ddac:	stp	x22, x21, [sp, #192]
   1ddb0:	stp	x20, x19, [sp, #208]
   1ddb4:	ldrb	w9, [x0]
   1ddb8:	add	x29, sp, #0x80
   1ddbc:	str	x4, [sp, #8]
   1ddc0:	cbz	w9, 1e644 <get_sysdep_c_format_directives@@Base+0x970>
   1ddc4:	mov	x25, #0x288900000000        	// #44568875630592
   1ddc8:	mov	x26, x3
   1ddcc:	mov	w27, w1
   1ddd0:	mov	w28, wzr
   1ddd4:	mov	w14, wzr
   1ddd8:	mov	w20, wzr
   1dddc:	mov	x19, xzr
   1dde0:	mov	w22, wzr
   1dde4:	mov	w12, #0xa                   	// #10
   1dde8:	mov	w24, #0x1                   	// #1
   1ddec:	movk	x25, #0x1, lsl #48
   1ddf0:	mov	x10, x0
   1ddf4:	stp	w2, wzr, [sp]
   1ddf8:	stp	x0, xzr, [sp, #24]
   1ddfc:	str	xzr, [sp, #64]
   1de00:	str	xzr, [sp, #48]
   1de04:	str	x3, [sp, #16]
   1de08:	and	w8, w9, #0xff
   1de0c:	cmp	w8, #0x25
   1de10:	add	x8, x10, #0x1
   1de14:	b.ne	1e618 <get_sysdep_c_format_directives@@Base+0x944>  // b.any
   1de18:	cbz	x26, 1de30 <get_sysdep_c_format_directives@@Base+0x15c>
   1de1c:	ldr	x9, [sp, #24]
   1de20:	sub	x9, x10, x9
   1de24:	ldrb	w11, [x26, x9]
   1de28:	orr	w11, w11, #0x1
   1de2c:	strb	w11, [x26, x9]
   1de30:	ldrb	w9, [x8]
   1de34:	add	w14, w14, #0x1
   1de38:	sub	w11, w9, #0x30
   1de3c:	cmp	w11, #0x9
   1de40:	b.hi	1de78 <get_sysdep_c_format_directives@@Base+0x1a4>  // b.pmore
   1de44:	mov	w26, wzr
   1de48:	add	x21, x10, #0x2
   1de4c:	mul	w10, w26, w12
   1de50:	add	w10, w10, w9, uxtb
   1de54:	ldrb	w9, [x21], #1
   1de58:	sub	w26, w10, #0x30
   1de5c:	sub	w11, w9, #0x30
   1de60:	cmp	w11, #0xa
   1de64:	b.cc	1de4c <get_sysdep_c_format_directives@@Base+0x178>  // b.lo, b.ul, b.last
   1de68:	cmp	w9, #0x24
   1de6c:	b.ne	1de78 <get_sysdep_c_format_directives@@Base+0x1a4>  // b.any
   1de70:	cbnz	w26, 1de80 <get_sysdep_c_format_directives@@Base+0x1ac>
   1de74:	b	1eaf4 <get_sysdep_c_format_directives@@Base+0xe20>
   1de78:	mov	w26, wzr
   1de7c:	mov	x21, x8
   1de80:	stur	w28, [x29, #-52]
   1de84:	add	x23, x21, #0x1
   1de88:	add	x28, x21, #0x2
   1de8c:	str	x20, [sp, #56]
   1de90:	str	w14, [sp, #44]
   1de94:	mov	x20, x23
   1de98:	ldrb	w9, [x20, #-1]!
   1de9c:	subs	w8, w9, #0x30
   1dea0:	b.hi	1debc <get_sysdep_c_format_directives@@Base+0x1e8>  // b.pmore
   1dea4:	lsl	x10, x24, x9
   1dea8:	tst	x10, x25
   1deac:	b.eq	1debc <get_sysdep_c_format_directives@@Base+0x1e8>  // b.none
   1deb0:	add	x23, x23, #0x1
   1deb4:	add	x28, x28, #0x1
   1deb8:	b	1de94 <get_sysdep_c_format_directives@@Base+0x1c0>
   1debc:	cmp	w9, #0x49
   1dec0:	b.ne	1defc <get_sysdep_c_format_directives@@Base+0x228>  // b.any
   1dec4:	tbz	w27, #0, 1defc <get_sysdep_c_format_directives@@Base+0x228>
   1dec8:	add	w21, w22, #0x1
   1decc:	lsl	w8, w21, #1
   1ded0:	lsl	x1, x8, #3
   1ded4:	mov	x0, x19
   1ded8:	bl	a460 <xrealloc@plt>
   1dedc:	mov	w9, #0x1                   	// #1
   1dee0:	mov	x19, x0
   1dee4:	lsl	w8, w22, #1
   1dee8:	bfi	w9, w22, #1, #31
   1deec:	mov	w22, w21
   1def0:	str	x20, [x0, w8, uxtw #3]
   1def4:	str	x23, [x0, w9, uxtw #3]
   1def8:	b	1deb0 <get_sysdep_c_format_directives@@Base+0x1dc>
   1defc:	cmp	w9, #0x2a
   1df00:	sub	x21, x23, #0x1
   1df04:	b.ne	1df7c <get_sysdep_c_format_directives@@Base+0x2a8>  // b.any
   1df08:	ldrb	w8, [x23]
   1df0c:	sub	w9, w8, #0x30
   1df10:	cmp	w9, #0x9
   1df14:	b.hi	1df9c <get_sysdep_c_format_directives@@Base+0x2c8>  // b.pmore
   1df18:	mov	w20, wzr
   1df1c:	mov	w11, #0xa                   	// #10
   1df20:	mul	w9, w20, w11
   1df24:	add	w9, w9, w8, uxtb
   1df28:	ldrb	w8, [x28], #1
   1df2c:	sub	w20, w9, #0x30
   1df30:	sub	w10, w8, #0x30
   1df34:	cmp	w10, #0xa
   1df38:	b.cc	1df20 <get_sysdep_c_format_directives@@Base+0x24c>  // b.lo, b.ul, b.last
   1df3c:	cmp	w8, #0x24
   1df40:	b.ne	1df9c <get_sysdep_c_format_directives@@Base+0x2c8>  // b.any
   1df44:	cbz	w20, 1eb28 <get_sysdep_c_format_directives@@Base+0xe54>
   1df48:	ldr	x8, [sp, #56]
   1df4c:	cbnz	w8, 1eb48 <get_sysdep_c_format_directives@@Base+0xe74>
   1df50:	ldur	w21, [x29, #-52]
   1df54:	ldr	x8, [sp, #64]
   1df58:	cmp	w8, w21
   1df5c:	b.ne	1dff0 <get_sysdep_c_format_directives@@Base+0x31c>  // b.any
   1df60:	ldr	x0, [sp, #32]
   1df64:	mov	w8, #0x1                   	// #1
   1df68:	bfi	w8, w21, #1, #31
   1df6c:	lsl	x1, x8, #3
   1df70:	str	x8, [sp, #64]
   1df74:	bl	a460 <xrealloc@plt>
   1df78:	b	1dff4 <get_sysdep_c_format_directives@@Base+0x320>
   1df7c:	ldr	x20, [sp, #56]
   1df80:	cmp	w8, #0x9
   1df84:	b.hi	1dfcc <get_sysdep_c_format_directives@@Base+0x2f8>  // b.pmore
   1df88:	ldrb	w8, [x21, #1]!
   1df8c:	sub	w9, w8, #0x30
   1df90:	cmp	w9, #0xa
   1df94:	b.cc	1df88 <get_sysdep_c_format_directives@@Base+0x2b4>  // b.lo, b.ul, b.last
   1df98:	b	1e018 <get_sysdep_c_format_directives@@Base+0x344>
   1df9c:	ldur	w8, [x29, #-52]
   1dfa0:	cbnz	w8, 1eac4 <get_sysdep_c_format_directives@@Base+0xdf0>
   1dfa4:	ldp	x20, x8, [sp, #56]
   1dfa8:	cmp	w8, w20
   1dfac:	b.ne	1dfd4 <get_sysdep_c_format_directives@@Base+0x300>  // b.any
   1dfb0:	ldr	x0, [sp, #48]
   1dfb4:	mov	w8, #0x1                   	// #1
   1dfb8:	bfi	w8, w20, #1, #31
   1dfbc:	lsl	x1, x8, #2
   1dfc0:	str	x8, [sp, #64]
   1dfc4:	bl	a460 <xrealloc@plt>
   1dfc8:	b	1dfd8 <get_sysdep_c_format_directives@@Base+0x304>
   1dfcc:	mov	x28, x21
   1dfd0:	b	1e010 <get_sysdep_c_format_directives@@Base+0x33c>
   1dfd4:	ldr	x0, [sp, #48]
   1dfd8:	str	w24, [x0, w20, uxtw #2]
   1dfdc:	add	w20, w20, #0x1
   1dfe0:	mov	x28, x23
   1dfe4:	stur	wzr, [x29, #-52]
   1dfe8:	str	x0, [sp, #48]
   1dfec:	b	1e010 <get_sysdep_c_format_directives@@Base+0x33c>
   1dff0:	ldr	x0, [sp, #32]
   1dff4:	mov	w9, wzr
   1dff8:	add	x8, x0, w21, uxtw #3
   1dffc:	add	w21, w21, #0x1
   1e000:	str	x0, [sp, #32]
   1e004:	stp	w20, w24, [x8]
   1e008:	mov	x20, x9
   1e00c:	stur	w21, [x29, #-52]
   1e010:	ldrb	w8, [x28]
   1e014:	mov	x21, x28
   1e018:	cmp	w8, #0x2e
   1e01c:	b.ne	1e114 <get_sysdep_c_format_directives@@Base+0x440>  // b.any
   1e020:	mov	x23, x21
   1e024:	ldrb	w8, [x23, #1]!
   1e028:	cmp	w8, #0x2a
   1e02c:	b.ne	1e0ac <get_sysdep_c_format_directives@@Base+0x3d8>  // b.any
   1e030:	mov	x12, x21
   1e034:	ldrb	w8, [x12, #2]!
   1e038:	sub	w9, w8, #0x30
   1e03c:	cmp	w9, #0x9
   1e040:	b.hi	1e0d0 <get_sysdep_c_format_directives@@Base+0x3fc>  // b.pmore
   1e044:	mov	w28, wzr
   1e048:	add	x21, x21, #0x3
   1e04c:	mov	w11, #0xa                   	// #10
   1e050:	mul	w9, w28, w11
   1e054:	add	w9, w9, w8, uxtb
   1e058:	ldrb	w8, [x21], #1
   1e05c:	sub	w28, w9, #0x30
   1e060:	sub	w10, w8, #0x30
   1e064:	cmp	w10, #0xa
   1e068:	b.cc	1e050 <get_sysdep_c_format_directives@@Base+0x37c>  // b.lo, b.ul, b.last
   1e06c:	cmp	w8, #0x24
   1e070:	b.ne	1e0d0 <get_sysdep_c_format_directives@@Base+0x3fc>  // b.any
   1e074:	cbz	w28, 1ec4c <get_sysdep_c_format_directives@@Base+0xf78>
   1e078:	cbnz	w20, 1ec68 <get_sysdep_c_format_directives@@Base+0xf94>
   1e07c:	ldur	w8, [x29, #-52]
   1e080:	ldr	x9, [sp, #64]
   1e084:	cmp	w9, w8
   1e088:	b.ne	1e138 <get_sysdep_c_format_directives@@Base+0x464>  // b.any
   1e08c:	ldr	x0, [sp, #32]
   1e090:	mov	x8, x9
   1e094:	mov	w20, #0x1                   	// #1
   1e098:	bfi	w20, w8, #1, #31
   1e09c:	lsl	x1, x20, #3
   1e0a0:	bl	a460 <xrealloc@plt>
   1e0a4:	str	x20, [sp, #64]
   1e0a8:	b	1e13c <get_sysdep_c_format_directives@@Base+0x468>
   1e0ac:	sub	w8, w8, #0x30
   1e0b0:	cmp	w8, #0x9
   1e0b4:	b.hi	1e110 <get_sysdep_c_format_directives@@Base+0x43c>  // b.pmore
   1e0b8:	ldur	w28, [x29, #-52]
   1e0bc:	ldrb	w8, [x23, #1]!
   1e0c0:	sub	w9, w8, #0x30
   1e0c4:	cmp	w9, #0xa
   1e0c8:	b.cc	1e0bc <get_sysdep_c_format_directives@@Base+0x3e8>  // b.lo, b.ul, b.last
   1e0cc:	b	1e160 <get_sysdep_c_format_directives@@Base+0x48c>
   1e0d0:	ldur	w8, [x29, #-52]
   1e0d4:	cbnz	w8, 1e824 <get_sysdep_c_format_directives@@Base+0xb50>
   1e0d8:	ldr	x8, [sp, #64]
   1e0dc:	cmp	w8, w20
   1e0e0:	b.ne	1e11c <get_sysdep_c_format_directives@@Base+0x448>  // b.any
   1e0e4:	ldr	x0, [sp, #48]
   1e0e8:	mov	x21, x20
   1e0ec:	mov	w20, #0x1                   	// #1
   1e0f0:	bfi	w20, w8, #1, #31
   1e0f4:	lsl	x1, x20, #2
   1e0f8:	mov	x23, x12
   1e0fc:	bl	a460 <xrealloc@plt>
   1e100:	mov	x12, x23
   1e104:	str	x20, [sp, #64]
   1e108:	mov	x20, x21
   1e10c:	b	1e120 <get_sysdep_c_format_directives@@Base+0x44c>
   1e110:	mov	x21, x23
   1e114:	ldur	w28, [x29, #-52]
   1e118:	b	1e158 <get_sysdep_c_format_directives@@Base+0x484>
   1e11c:	ldr	x0, [sp, #48]
   1e120:	mov	w28, wzr
   1e124:	str	w24, [x0, w20, uxtw #2]
   1e128:	add	w20, w20, #0x1
   1e12c:	mov	x21, x12
   1e130:	str	x0, [sp, #48]
   1e134:	b	1e158 <get_sysdep_c_format_directives@@Base+0x484>
   1e138:	ldr	x0, [sp, #32]
   1e13c:	ldur	w9, [x29, #-52]
   1e140:	str	x0, [sp, #32]
   1e144:	mov	w20, wzr
   1e148:	add	x8, x0, w9, uxtw #3
   1e14c:	stp	w28, w24, [x8]
   1e150:	mov	w28, w9
   1e154:	add	w28, w9, #0x1
   1e158:	ldrb	w8, [x21]
   1e15c:	mov	x23, x21
   1e160:	adrp	x13, 39000 <get_search_path@@Base+0x2b4c>
   1e164:	add	x13, x13, #0x460
   1e168:	cmp	w8, #0x3c
   1e16c:	b.ne	1e1e4 <get_sysdep_c_format_directives@@Base+0x510>  // b.any
   1e170:	stur	w28, [x29, #-52]
   1e174:	add	w28, w22, #0x1
   1e178:	lsl	w8, w28, #1
   1e17c:	lsl	x1, x8, #3
   1e180:	mov	x0, x19
   1e184:	bl	a460 <xrealloc@plt>
   1e188:	lsl	w8, w22, #1
   1e18c:	str	x23, [x0, w8, uxtw #3]
   1e190:	ldrb	w9, [x23, #1]
   1e194:	mov	x19, x0
   1e198:	cmp	w9, #0x50
   1e19c:	b.ne	1e8f0 <get_sysdep_c_format_directives@@Base+0xc1c>  // b.any
   1e1a0:	ldrb	w9, [x23, #2]
   1e1a4:	cmp	w9, #0x52
   1e1a8:	b.ne	1e92c <get_sysdep_c_format_directives@@Base+0xc58>  // b.any
   1e1ac:	ldrb	w9, [x23, #3]
   1e1b0:	cmp	w9, #0x49
   1e1b4:	b.ne	1e968 <get_sysdep_c_format_directives@@Base+0xc94>  // b.any
   1e1b8:	ldrb	w9, [x23, #4]
   1e1bc:	sub	w9, w9, #0x58
   1e1c0:	cmp	w9, #0x20
   1e1c4:	b.hi	1e9a0 <get_sysdep_c_format_directives@@Base+0xccc>  // b.pmore
   1e1c8:	mov	x11, #0x100000001           	// #4294967297
   1e1cc:	lsl	x10, x24, x9
   1e1d0:	movk	x11, #0x2080, lsl #16
   1e1d4:	tst	x10, x11
   1e1d8:	b.eq	1e260 <get_sysdep_c_format_directives@@Base+0x58c>  // b.none
   1e1dc:	mov	w9, #0x9                   	// #9
   1e1e0:	b	1e278 <get_sysdep_c_format_directives@@Base+0x5a4>
   1e1e4:	ldr	w14, [sp, #44]
   1e1e8:	mov	w9, wzr
   1e1ec:	and	w10, w8, #0xff
   1e1f0:	sub	w11, w10, #0x40
   1e1f4:	cmp	w11, #0x3a
   1e1f8:	b.hi	1e448 <get_sysdep_c_format_directives@@Base+0x774>  // b.pmore
   1e1fc:	adr	x12, 1e210 <get_sysdep_c_format_directives@@Base+0x53c>
   1e200:	ldrh	w10, [x13, x11, lsl #1]
   1e204:	add	x12, x12, x10, lsl #2
   1e208:	mov	w10, #0x80                  	// #128
   1e20c:	br	x12
   1e210:	mov	w10, #0x400000              	// #4194304
   1e214:	b	1e248 <get_sysdep_c_format_directives@@Base+0x574>
   1e218:	tst	w9, #0x30
   1e21c:	mov	w8, #0x20                  	// #32
   1e220:	mov	w9, #0x10                  	// #16
   1e224:	b	1e23c <get_sysdep_c_format_directives@@Base+0x568>
   1e228:	mov	w10, #0x100000              	// #1048576
   1e22c:	b	1e248 <get_sysdep_c_format_directives@@Base+0x574>
   1e230:	tst	w9, #0xc0
   1e234:	mov	w8, #0x80                  	// #128
   1e238:	mov	w9, #0x40                  	// #64
   1e23c:	csel	w10, w9, w8, eq  // eq = none
   1e240:	b	1e248 <get_sysdep_c_format_directives@@Base+0x574>
   1e244:	mov	w10, #0x800000              	// #8388608
   1e248:	ldrb	w8, [x23, #1]!
   1e24c:	mov	w9, w10
   1e250:	b	1e1ec <get_sysdep_c_format_directives@@Base+0x518>
   1e254:	and	w8, w9, #0x80
   1e258:	orr	w10, w8, #0x2
   1e25c:	b	1e550 <get_sysdep_c_format_directives@@Base+0x87c>
   1e260:	mov	w10, #0x1000                	// #4096
   1e264:	lsl	x9, x24, x9
   1e268:	movk	w10, #0x2, lsl #16
   1e26c:	tst	x9, x10
   1e270:	b.eq	1e9a0 <get_sysdep_c_format_directives@@Base+0xccc>  // b.none
   1e274:	mov	w9, #0x1                   	// #1
   1e278:	ldrb	w10, [x23, #5]
   1e27c:	cmp	w10, #0x45
   1e280:	b.gt	1e2c4 <get_sysdep_c_format_directives@@Base+0x5f0>
   1e284:	sub	w11, w10, #0x31
   1e288:	cmp	w11, #0x7
   1e28c:	b.hi	1e7ec <get_sysdep_c_format_directives@@Base+0xb18>  // b.pmore
   1e290:	adrp	x14, 39000 <get_search_path@@Base+0x2b4c>
   1e294:	add	x14, x14, #0x4d6
   1e298:	adr	x12, 1e2b0 <get_sysdep_c_format_directives@@Base+0x5dc>
   1e29c:	ldrh	w13, [x14, x11, lsl #1]
   1e2a0:	add	x12, x12, x13, lsl #2
   1e2a4:	mov	w10, #0x100                 	// #256
   1e2a8:	mov	w11, #0x6                   	// #6
   1e2ac:	br	x12
   1e2b0:	ldrb	w10, [x23, #6]
   1e2b4:	cmp	w10, #0x36
   1e2b8:	b.ne	1e7ec <get_sysdep_c_format_directives@@Base+0xb18>  // b.any
   1e2bc:	mov	w10, #0x200                 	// #512
   1e2c0:	b	1e3b4 <get_sysdep_c_format_directives@@Base+0x6e0>
   1e2c4:	cmp	w10, #0x4c
   1e2c8:	b.gt	1e350 <get_sysdep_c_format_directives@@Base+0x67c>
   1e2cc:	cmp	w10, #0x46
   1e2d0:	b.eq	1e3bc <get_sysdep_c_format_directives@@Base+0x6e8>  // b.none
   1e2d4:	cmp	w10, #0x4c
   1e2d8:	b.ne	1e7ec <get_sysdep_c_format_directives@@Base+0xb18>  // b.any
   1e2dc:	ldrb	w10, [x23, #6]
   1e2e0:	cmp	w10, #0x45
   1e2e4:	b.ne	1e7ec <get_sysdep_c_format_directives@@Base+0xb18>  // b.any
   1e2e8:	ldrb	w10, [x23, #7]
   1e2ec:	cmp	w10, #0x41
   1e2f0:	b.ne	1e7ec <get_sysdep_c_format_directives@@Base+0xb18>  // b.any
   1e2f4:	ldrb	w10, [x23, #8]
   1e2f8:	cmp	w10, #0x53
   1e2fc:	b.ne	1e7ec <get_sysdep_c_format_directives@@Base+0xb18>  // b.any
   1e300:	ldrb	w10, [x23, #9]
   1e304:	cmp	w10, #0x54
   1e308:	b.ne	1e7ec <get_sysdep_c_format_directives@@Base+0xb18>  // b.any
   1e30c:	ldrb	w10, [x23, #10]
   1e310:	sub	w11, w10, #0x31
   1e314:	cmp	w11, #0x7
   1e318:	b.hi	1ec14 <get_sysdep_c_format_directives@@Base+0xf40>  // b.pmore
   1e31c:	adrp	x14, 39000 <get_search_path@@Base+0x2b4c>
   1e320:	add	x14, x14, #0x4f6
   1e324:	adr	x12, 1e33c <get_sysdep_c_format_directives@@Base+0x668>
   1e328:	ldrh	w13, [x14, x11, lsl #1]
   1e32c:	add	x12, x12, x13, lsl #2
   1e330:	mov	w10, #0x1000                	// #4096
   1e334:	mov	w11, #0xb                   	// #11
   1e338:	br	x12
   1e33c:	ldrb	w10, [x23, #11]
   1e340:	cmp	w10, #0x36
   1e344:	b.ne	1ec14 <get_sysdep_c_format_directives@@Base+0xf40>  // b.any
   1e348:	mov	w10, #0x2000                	// #8192
   1e34c:	b	1e520 <get_sysdep_c_format_directives@@Base+0x84c>
   1e350:	cmp	w10, #0x50
   1e354:	b.eq	1e424 <get_sysdep_c_format_directives@@Base+0x750>  // b.none
   1e358:	cmp	w10, #0x4d
   1e35c:	b.ne	1e7ec <get_sysdep_c_format_directives@@Base+0xb18>  // b.any
   1e360:	ldrb	w10, [x23, #6]
   1e364:	cmp	w10, #0x41
   1e368:	b.ne	1e7ec <get_sysdep_c_format_directives@@Base+0xb18>  // b.any
   1e36c:	ldrb	w10, [x23, #7]
   1e370:	cmp	w10, #0x58
   1e374:	b.ne	1e7ec <get_sysdep_c_format_directives@@Base+0xb18>  // b.any
   1e378:	mov	w10, #0x100000              	// #1048576
   1e37c:	b	1e440 <get_sysdep_c_format_directives@@Base+0x76c>
   1e380:	and	w8, w9, #0xfffff0
   1e384:	mov	w9, #0x9                   	// #9
   1e388:	orr	w10, w8, w9
   1e38c:	b	1e550 <get_sysdep_c_format_directives@@Base+0x87c>
   1e390:	ldrb	w10, [x23, #6]
   1e394:	cmp	w10, #0x32
   1e398:	b.ne	1e7ec <get_sysdep_c_format_directives@@Base+0xb18>  // b.any
   1e39c:	mov	w10, #0x400                 	// #1024
   1e3a0:	b	1e3b4 <get_sysdep_c_format_directives@@Base+0x6e0>
   1e3a4:	ldrb	w10, [x23, #6]
   1e3a8:	cmp	w10, #0x34
   1e3ac:	b.ne	1e7ec <get_sysdep_c_format_directives@@Base+0xb18>  // b.any
   1e3b0:	mov	w10, #0x800                 	// #2048
   1e3b4:	mov	w11, #0x7                   	// #7
   1e3b8:	b	1e524 <get_sysdep_c_format_directives@@Base+0x850>
   1e3bc:	ldrb	w10, [x23, #6]
   1e3c0:	cmp	w10, #0x41
   1e3c4:	b.ne	1e7ec <get_sysdep_c_format_directives@@Base+0xb18>  // b.any
   1e3c8:	ldrb	w10, [x23, #7]
   1e3cc:	cmp	w10, #0x53
   1e3d0:	b.ne	1e7ec <get_sysdep_c_format_directives@@Base+0xb18>  // b.any
   1e3d4:	ldrb	w10, [x23, #8]
   1e3d8:	cmp	w10, #0x54
   1e3dc:	b.ne	1e7ec <get_sysdep_c_format_directives@@Base+0xb18>  // b.any
   1e3e0:	ldrb	w10, [x23, #9]
   1e3e4:	sub	w11, w10, #0x31
   1e3e8:	cmp	w11, #0x7
   1e3ec:	b.hi	1ebdc <get_sysdep_c_format_directives@@Base+0xf08>  // b.pmore
   1e3f0:	adrp	x14, 39000 <get_search_path@@Base+0x2b4c>
   1e3f4:	add	x14, x14, #0x4e6
   1e3f8:	adr	x12, 1e410 <get_sysdep_c_format_directives@@Base+0x73c>
   1e3fc:	ldrh	w13, [x14, x11, lsl #1]
   1e400:	add	x12, x12, x13, lsl #2
   1e404:	mov	w10, #0x10000               	// #65536
   1e408:	mov	w11, #0xa                   	// #10
   1e40c:	br	x12
   1e410:	ldrb	w10, [x23, #10]
   1e414:	cmp	w10, #0x36
   1e418:	b.ne	1ebdc <get_sysdep_c_format_directives@@Base+0xf08>  // b.any
   1e41c:	mov	w10, #0x20000               	// #131072
   1e420:	b	1e4f4 <get_sysdep_c_format_directives@@Base+0x820>
   1e424:	ldrb	w10, [x23, #6]
   1e428:	cmp	w10, #0x54
   1e42c:	b.ne	1e7ec <get_sysdep_c_format_directives@@Base+0xb18>  // b.any
   1e430:	ldrb	w10, [x23, #7]
   1e434:	cmp	w10, #0x52
   1e438:	b.ne	1e7ec <get_sysdep_c_format_directives@@Base+0xb18>  // b.any
   1e43c:	mov	w10, #0x200000              	// #2097152
   1e440:	mov	w11, #0x8                   	// #8
   1e444:	b	1e524 <get_sysdep_c_format_directives@@Base+0x850>
   1e448:	cbz	w10, 1e8b0 <get_sysdep_c_format_directives@@Base+0xbdc>
   1e44c:	cmp	w10, #0x25
   1e450:	b.ne	1e878 <get_sysdep_c_format_directives@@Base+0xba4>  // b.any
   1e454:	ldurb	w8, [x23, #-1]
   1e458:	cmp	w8, #0x25
   1e45c:	ldr	w8, [sp, #4]
   1e460:	csinc	w8, w8, wzr, eq  // eq = none
   1e464:	str	w8, [sp, #4]
   1e468:	b	1e5f4 <get_sysdep_c_format_directives@@Base+0x920>
   1e46c:	and	w8, w9, #0xfffff0
   1e470:	orr	w10, w8, #0x1
   1e474:	b	1e550 <get_sysdep_c_format_directives@@Base+0x87c>
   1e478:	ldr	w8, [sp]
   1e47c:	tbz	w8, #0, 1e888 <get_sysdep_c_format_directives@@Base+0xbb4>
   1e480:	mov	w10, #0x5                   	// #5
   1e484:	b	1e550 <get_sysdep_c_format_directives@@Base+0x87c>
   1e488:	mov	w10, #0x43                  	// #67
   1e48c:	b	1e550 <get_sysdep_c_format_directives@@Base+0x87c>
   1e490:	mov	w10, #0x44                  	// #68
   1e494:	b	1e550 <get_sysdep_c_format_directives@@Base+0x87c>
   1e498:	tst	w9, #0xc0
   1e49c:	mov	w8, #0x43                  	// #67
   1e4a0:	mov	w9, #0x3                   	// #3
   1e4a4:	b	1e4c8 <get_sysdep_c_format_directives@@Base+0x7f4>
   1e4a8:	and	w8, w9, #0xfffff0
   1e4ac:	orr	w10, w8, #0x7
   1e4b0:	b	1e550 <get_sysdep_c_format_directives@@Base+0x87c>
   1e4b4:	mov	w10, #0x6                   	// #6
   1e4b8:	b	1e550 <get_sysdep_c_format_directives@@Base+0x87c>
   1e4bc:	tst	w9, #0xc0
   1e4c0:	mov	w8, #0x44                  	// #68
   1e4c4:	mov	w9, #0x4                   	// #4
   1e4c8:	csel	w10, w9, w8, eq  // eq = none
   1e4cc:	b	1e550 <get_sysdep_c_format_directives@@Base+0x87c>
   1e4d0:	ldrb	w10, [x23, #10]
   1e4d4:	cmp	w10, #0x32
   1e4d8:	b.ne	1ebdc <get_sysdep_c_format_directives@@Base+0xf08>  // b.any
   1e4dc:	mov	w10, #0x40000               	// #262144
   1e4e0:	b	1e4f4 <get_sysdep_c_format_directives@@Base+0x820>
   1e4e4:	ldrb	w10, [x23, #10]
   1e4e8:	cmp	w10, #0x34
   1e4ec:	b.ne	1ebdc <get_sysdep_c_format_directives@@Base+0xf08>  // b.any
   1e4f0:	mov	w10, #0x80000               	// #524288
   1e4f4:	mov	w11, #0xb                   	// #11
   1e4f8:	b	1e524 <get_sysdep_c_format_directives@@Base+0x850>
   1e4fc:	ldrb	w10, [x23, #11]
   1e500:	cmp	w10, #0x32
   1e504:	b.ne	1ec14 <get_sysdep_c_format_directives@@Base+0xf40>  // b.any
   1e508:	mov	w10, #0x4000                	// #16384
   1e50c:	b	1e520 <get_sysdep_c_format_directives@@Base+0x84c>
   1e510:	ldrb	w10, [x23, #11]
   1e514:	cmp	w10, #0x34
   1e518:	b.ne	1ec14 <get_sysdep_c_format_directives@@Base+0xf40>  // b.any
   1e51c:	mov	w10, #0x8000                	// #32768
   1e520:	mov	w11, #0xc                   	// #12
   1e524:	add	x23, x23, x11
   1e528:	ldrb	w11, [x23]
   1e52c:	cmp	w11, #0x3e
   1e530:	b.ne	1ea88 <get_sysdep_c_format_directives@@Base+0xdb4>  // b.any
   1e534:	mov	w22, w28
   1e538:	ldr	w14, [sp, #44]
   1e53c:	ldur	w28, [x29, #-52]
   1e540:	orr	w10, w9, w10
   1e544:	add	x9, x23, #0x1
   1e548:	orr	w8, w8, #0x1
   1e54c:	str	x9, [x19, w8, uxtw #3]
   1e550:	ldr	x8, [sp, #64]
   1e554:	cbz	w26, 1e598 <get_sysdep_c_format_directives@@Base+0x8c4>
   1e558:	cbnz	w20, 1e824 <get_sysdep_c_format_directives@@Base+0xb50>
   1e55c:	cmp	w8, w28
   1e560:	b.ne	1e5dc <get_sysdep_c_format_directives@@Base+0x908>  // b.any
   1e564:	ldr	x0, [sp, #32]
   1e568:	mov	w20, #0x1                   	// #1
   1e56c:	bfi	w20, w8, #1, #31
   1e570:	lsl	x1, x20, #3
   1e574:	stur	w28, [x29, #-52]
   1e578:	mov	w28, w10
   1e57c:	mov	w21, w14
   1e580:	bl	a460 <xrealloc@plt>
   1e584:	mov	w10, w28
   1e588:	ldur	w28, [x29, #-52]
   1e58c:	mov	w14, w21
   1e590:	str	x20, [sp, #64]
   1e594:	b	1e5e0 <get_sysdep_c_format_directives@@Base+0x90c>
   1e598:	cbnz	w28, 1e824 <get_sysdep_c_format_directives@@Base+0xb50>
   1e59c:	ldr	x26, [sp, #16]
   1e5a0:	cmp	w8, w20
   1e5a4:	b.ne	1e628 <get_sysdep_c_format_directives@@Base+0x954>  // b.any
   1e5a8:	ldr	x0, [sp, #48]
   1e5ac:	str	x20, [sp, #56]
   1e5b0:	mov	w20, #0x1                   	// #1
   1e5b4:	bfi	w20, w8, #1, #31
   1e5b8:	lsl	x1, x20, #2
   1e5bc:	mov	w28, w10
   1e5c0:	mov	w21, w14
   1e5c4:	bl	a460 <xrealloc@plt>
   1e5c8:	str	x20, [sp, #64]
   1e5cc:	ldr	x20, [sp, #56]
   1e5d0:	mov	w14, w21
   1e5d4:	mov	w10, w28
   1e5d8:	b	1e62c <get_sysdep_c_format_directives@@Base+0x958>
   1e5dc:	ldr	x0, [sp, #32]
   1e5e0:	mov	w20, wzr
   1e5e4:	add	x8, x0, w28, uxtw #3
   1e5e8:	add	w28, w28, #0x1
   1e5ec:	str	x0, [sp, #32]
   1e5f0:	stp	w26, w10, [x8]
   1e5f4:	ldr	x26, [sp, #16]
   1e5f8:	cbz	x26, 1e610 <get_sysdep_c_format_directives@@Base+0x93c>
   1e5fc:	ldr	x8, [sp, #24]
   1e600:	sub	x8, x23, x8
   1e604:	ldrb	w9, [x26, x8]
   1e608:	orr	w9, w9, #0x2
   1e60c:	strb	w9, [x26, x8]
   1e610:	add	x8, x23, #0x1
   1e614:	mov	w12, #0xa                   	// #10
   1e618:	ldrb	w9, [x8]
   1e61c:	mov	x10, x8
   1e620:	cbnz	w9, 1de08 <get_sysdep_c_format_directives@@Base+0x134>
   1e624:	b	1e6a4 <get_sysdep_c_format_directives@@Base+0x9d0>
   1e628:	ldr	x0, [sp, #48]
   1e62c:	mov	w28, wzr
   1e630:	str	w10, [x0, w20, uxtw #2]
   1e634:	add	w20, w20, #0x1
   1e638:	str	x0, [sp, #48]
   1e63c:	cbnz	x26, 1e5fc <get_sysdep_c_format_directives@@Base+0x928>
   1e640:	b	1e610 <get_sysdep_c_format_directives@@Base+0x93c>
   1e644:	mov	w22, wzr
   1e648:	mov	w10, wzr
   1e64c:	mov	w14, wzr
   1e650:	mov	x19, xzr
   1e654:	mov	x20, xzr
   1e658:	mov	w28, wzr
   1e65c:	mov	w24, wzr
   1e660:	ldurh	w8, [x29, #-4]
   1e664:	ldurb	w9, [x29, #-2]
   1e668:	mov	w0, #0x28                  	// #40
   1e66c:	stp	w14, w24, [x29, #-48]
   1e670:	stur	w28, [x29, #-40]
   1e674:	stur	x20, [x29, #-32]
   1e678:	sturb	w10, [x29, #-24]
   1e67c:	stur	w22, [x29, #-20]
   1e680:	sturh	w8, [x29, #-23]
   1e684:	sturb	w9, [x29, #-21]
   1e688:	stur	x19, [x29, #-16]
   1e68c:	bl	a590 <xmalloc@plt>
   1e690:	ldp	q0, q1, [x29, #-48]
   1e694:	ldur	x8, [x29, #-16]
   1e698:	stp	q0, q1, [x0]
   1e69c:	str	x8, [x0, #32]
   1e6a0:	b	1ebbc <get_sysdep_c_format_directives@@Base+0xee8>
   1e6a4:	cmp	w28, #0x2
   1e6a8:	b.cc	1e854 <get_sysdep_c_format_directives@@Base+0xb80>  // b.lo, b.ul, b.last
   1e6ac:	ldr	x26, [sp, #32]
   1e6b0:	mov	w23, w28
   1e6b4:	adrp	x3, 1e000 <get_sysdep_c_format_directives@@Base+0x32c>
   1e6b8:	add	x3, x3, #0xc84
   1e6bc:	mov	w2, #0x8                   	// #8
   1e6c0:	mov	x0, x26
   1e6c4:	mov	x1, x23
   1e6c8:	str	w14, [sp, #44]
   1e6cc:	str	x20, [sp, #56]
   1e6d0:	bl	a2f0 <qsort@plt>
   1e6d4:	ldr	x27, [sp, #8]
   1e6d8:	adrp	x24, 39000 <get_search_path@@Base+0x2b4c>
   1e6dc:	mov	x20, xzr
   1e6e0:	mov	w8, wzr
   1e6e4:	mov	w28, wzr
   1e6e8:	add	x24, x24, #0x8bd
   1e6ec:	mov	x21, x26
   1e6f0:	cbz	w28, 1e738 <get_sysdep_c_format_directives@@Base+0xa64>
   1e6f4:	sub	w9, w28, #0x1
   1e6f8:	lsl	x11, x9, #3
   1e6fc:	ldr	w10, [x21]
   1e700:	ldr	w11, [x26, x11]
   1e704:	cmp	w10, w11
   1e708:	b.ne	1e738 <get_sysdep_c_format_directives@@Base+0xa64>  // b.any
   1e70c:	add	x25, x26, x9, lsl #3
   1e710:	ldr	w11, [x21, #4]
   1e714:	ldr	w9, [x25, #4]!
   1e718:	cmp	w11, w9
   1e71c:	cset	w9, eq  // eq = none
   1e720:	cset	w10, ne  // ne = any
   1e724:	orr	w12, w8, w9
   1e728:	csel	w9, w11, wzr, eq  // eq = none
   1e72c:	tbz	w12, #0, 1e754 <get_sysdep_c_format_directives@@Base+0xa80>
   1e730:	orr	w8, w8, w10
   1e734:	b	1e778 <get_sysdep_c_format_directives@@Base+0xaa4>
   1e738:	cmp	x20, w28, uxtw
   1e73c:	b.ls	1e74c <get_sysdep_c_format_directives@@Base+0xa78>  // b.plast
   1e740:	ldr	x9, [x21]
   1e744:	mov	w10, w28
   1e748:	str	x9, [x26, x10, lsl #3]
   1e74c:	add	w28, w28, #0x1
   1e750:	b	1e77c <get_sysdep_c_format_directives@@Base+0xaa8>
   1e754:	mov	w2, #0x5                   	// #5
   1e758:	mov	x0, xzr
   1e75c:	mov	x1, x24
   1e760:	bl	acd0 <dcgettext@plt>
   1e764:	ldr	w1, [x21]
   1e768:	bl	aa20 <xasprintf@plt>
   1e76c:	mov	w9, wzr
   1e770:	mov	w8, #0x1                   	// #1
   1e774:	str	x0, [x27]
   1e778:	str	w9, [x25]
   1e77c:	add	x20, x20, #0x1
   1e780:	cmp	x23, x20
   1e784:	add	x21, x21, #0x8
   1e788:	b.ne	1e6f0 <get_sysdep_c_format_directives@@Base+0xa1c>  // b.any
   1e78c:	ldr	x20, [sp, #56]
   1e790:	ldr	w14, [sp, #44]
   1e794:	tbnz	w8, #0, 1ea7c <get_sysdep_c_format_directives@@Base+0xda8>
   1e798:	cbz	w28, 1e860 <get_sysdep_c_format_directives@@Base+0xb8c>
   1e79c:	mov	x23, xzr
   1e7a0:	mov	w24, w28
   1e7a4:	mov	x20, x26
   1e7a8:	cmp	x24, x23
   1e7ac:	b.eq	1e9f4 <get_sysdep_c_format_directives@@Base+0xd20>  // b.none
   1e7b0:	ldr	w8, [x20], #8
   1e7b4:	add	x23, x23, #0x1
   1e7b8:	cmp	x23, x8
   1e7bc:	b.eq	1e7a8 <get_sysdep_c_format_directives@@Base+0xad4>  // b.none
   1e7c0:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1e7c4:	add	x1, x1, #0x8fb
   1e7c8:	mov	w2, #0x5                   	// #5
   1e7cc:	mov	x0, xzr
   1e7d0:	bl	acd0 <dcgettext@plt>
   1e7d4:	ldur	w1, [x20, #-8]
   1e7d8:	mov	w2, w23
   1e7dc:	bl	aa20 <xasprintf@plt>
   1e7e0:	ldr	x8, [sp, #48]
   1e7e4:	str	x0, [x27]
   1e7e8:	b	1eb90 <get_sysdep_c_format_directives@@Base+0xebc>
   1e7ec:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1e7f0:	add	x1, x1, #0x6ff
   1e7f4:	mov	w2, #0x5                   	// #5
   1e7f8:	mov	x0, xzr
   1e7fc:	bl	acd0 <dcgettext@plt>
   1e800:	ldr	w1, [sp, #44]
   1e804:	bl	aa20 <xasprintf@plt>
   1e808:	ldp	x8, x11, [sp, #8]
   1e80c:	str	x0, [x8]
   1e810:	cbz	x11, 1eb84 <get_sysdep_c_format_directives@@Base+0xeb0>
   1e814:	ldrb	w8, [x23, #5]
   1e818:	add	x9, x23, #0x5
   1e81c:	add	x10, x23, #0x4
   1e820:	b	1e9d4 <get_sysdep_c_format_directives@@Base+0xd00>
   1e824:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1e828:	add	x1, x1, #0x630
   1e82c:	mov	w2, #0x5                   	// #5
   1e830:	mov	x0, xzr
   1e834:	bl	acd0 <dcgettext@plt>
   1e838:	bl	a5a0 <xstrdup@plt>
   1e83c:	ldp	x8, x10, [sp, #8]
   1e840:	str	x0, [x8]
   1e844:	cbz	x10, 1eb84 <get_sysdep_c_format_directives@@Base+0xeb0>
   1e848:	ldr	x8, [sp, #24]
   1e84c:	sub	x8, x23, x8
   1e850:	b	1eb78 <get_sysdep_c_format_directives@@Base+0xea4>
   1e854:	ldr	x26, [sp, #32]
   1e858:	ldr	x27, [sp, #8]
   1e85c:	cbnz	w28, 1e79c <get_sysdep_c_format_directives@@Base+0xac8>
   1e860:	ldr	x8, [sp, #64]
   1e864:	mov	x24, x20
   1e868:	ldr	x20, [sp, #48]
   1e86c:	ldr	w10, [sp, #4]
   1e870:	mov	w28, w8
   1e874:	b	1e660 <get_sysdep_c_format_directives@@Base+0x98c>
   1e878:	and	w8, w8, #0xff
   1e87c:	sub	w8, w8, #0x20
   1e880:	cmp	w8, #0x5e
   1e884:	b.hi	1ea38 <get_sysdep_c_format_directives@@Base+0xd64>  // b.pmore
   1e888:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1e88c:	add	x1, x1, #0x80e
   1e890:	mov	w2, #0x5                   	// #5
   1e894:	mov	x0, xzr
   1e898:	mov	w20, w14
   1e89c:	bl	acd0 <dcgettext@plt>
   1e8a0:	ldrb	w2, [x23]
   1e8a4:	mov	w1, w20
   1e8a8:	bl	aa20 <xasprintf@plt>
   1e8ac:	b	1ea58 <get_sysdep_c_format_directives@@Base+0xd84>
   1e8b0:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1e8b4:	add	x1, x1, #0x7e0
   1e8b8:	mov	w2, #0x5                   	// #5
   1e8bc:	mov	x0, xzr
   1e8c0:	bl	acd0 <dcgettext@plt>
   1e8c4:	bl	a5a0 <xstrdup@plt>
   1e8c8:	ldp	x8, x9, [sp, #8]
   1e8cc:	str	x0, [x8]
   1e8d0:	cbz	x9, 1eb84 <get_sysdep_c_format_directives@@Base+0xeb0>
   1e8d4:	ldr	x8, [sp, #24]
   1e8d8:	sub	x8, x23, x8
   1e8dc:	add	x8, x8, x9
   1e8e0:	ldurb	w9, [x8, #-1]
   1e8e4:	orr	w9, w9, #0x4
   1e8e8:	sturb	w9, [x8, #-1]
   1e8ec:	b	1eb84 <get_sysdep_c_format_directives@@Base+0xeb0>
   1e8f0:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1e8f4:	add	x1, x1, #0x6ff
   1e8f8:	mov	w2, #0x5                   	// #5
   1e8fc:	mov	x0, xzr
   1e900:	bl	acd0 <dcgettext@plt>
   1e904:	ldr	w1, [sp, #44]
   1e908:	bl	aa20 <xasprintf@plt>
   1e90c:	ldp	x8, x10, [sp, #8]
   1e910:	str	x0, [x8]
   1e914:	cbz	x10, 1eb84 <get_sysdep_c_format_directives@@Base+0xeb0>
   1e918:	ldrb	w8, [x23, #1]
   1e91c:	add	x9, x23, #0x1
   1e920:	cmp	w8, #0x0
   1e924:	csel	x8, x23, x9, eq  // eq = none
   1e928:	b	1eb70 <get_sysdep_c_format_directives@@Base+0xe9c>
   1e92c:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1e930:	add	x1, x1, #0x6ff
   1e934:	mov	w2, #0x5                   	// #5
   1e938:	mov	x0, xzr
   1e93c:	bl	acd0 <dcgettext@plt>
   1e940:	ldr	w1, [sp, #44]
   1e944:	bl	aa20 <xasprintf@plt>
   1e948:	ldp	x8, x10, [sp, #8]
   1e94c:	str	x0, [x8]
   1e950:	cbz	x10, 1eb84 <get_sysdep_c_format_directives@@Base+0xeb0>
   1e954:	ldrb	w8, [x23, #2]
   1e958:	add	x9, x23, #0x2
   1e95c:	cmp	w8, #0x0
   1e960:	csinc	x8, x9, x23, ne  // ne = any
   1e964:	b	1eb70 <get_sysdep_c_format_directives@@Base+0xe9c>
   1e968:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1e96c:	add	x1, x1, #0x6ff
   1e970:	mov	w2, #0x5                   	// #5
   1e974:	mov	x0, xzr
   1e978:	bl	acd0 <dcgettext@plt>
   1e97c:	ldr	w1, [sp, #44]
   1e980:	bl	aa20 <xasprintf@plt>
   1e984:	ldp	x8, x11, [sp, #8]
   1e988:	str	x0, [x8]
   1e98c:	cbz	x11, 1eb84 <get_sysdep_c_format_directives@@Base+0xeb0>
   1e990:	ldrb	w8, [x23, #3]
   1e994:	add	x9, x23, #0x3
   1e998:	add	x10, x23, #0x2
   1e99c:	b	1e9d4 <get_sysdep_c_format_directives@@Base+0xd00>
   1e9a0:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1e9a4:	add	x1, x1, #0x6ff
   1e9a8:	mov	w2, #0x5                   	// #5
   1e9ac:	mov	x0, xzr
   1e9b0:	bl	acd0 <dcgettext@plt>
   1e9b4:	ldr	w1, [sp, #44]
   1e9b8:	bl	aa20 <xasprintf@plt>
   1e9bc:	ldp	x8, x11, [sp, #8]
   1e9c0:	str	x0, [x8]
   1e9c4:	cbz	x11, 1eb84 <get_sysdep_c_format_directives@@Base+0xeb0>
   1e9c8:	ldrb	w8, [x23, #4]
   1e9cc:	add	x9, x23, #0x4
   1e9d0:	add	x10, x23, #0x3
   1e9d4:	cmp	w8, #0x0
   1e9d8:	csel	x8, x10, x9, eq  // eq = none
   1e9dc:	ldr	x9, [sp, #24]
   1e9e0:	sub	x8, x8, x9
   1e9e4:	ldrb	w9, [x11, x8]
   1e9e8:	orr	w9, w9, #0x4
   1e9ec:	strb	w9, [x11, x8]
   1e9f0:	b	1eb84 <get_sysdep_c_format_directives@@Base+0xeb0>
   1e9f4:	lsl	x0, x24, #2
   1e9f8:	mov	w23, w14
   1e9fc:	mov	x21, x24
   1ea00:	bl	a590 <xmalloc@plt>
   1ea04:	add	x8, x26, #0x4
   1ea08:	mov	x20, x0
   1ea0c:	mov	x9, x0
   1ea10:	mov	x10, x24
   1ea14:	ldr	w11, [x8], #8
   1ea18:	subs	x10, x10, #0x1
   1ea1c:	str	w11, [x9], #4
   1ea20:	b.ne	1ea14 <get_sysdep_c_format_directives@@Base+0xd40>  // b.any
   1ea24:	mov	x0, x26
   1ea28:	bl	aa00 <free@plt>
   1ea2c:	ldr	w10, [sp, #4]
   1ea30:	mov	w14, w23
   1ea34:	b	1e660 <get_sysdep_c_format_directives@@Base+0x98c>
   1ea38:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1ea3c:	add	x1, x1, #0x862
   1ea40:	mov	w2, #0x5                   	// #5
   1ea44:	mov	x0, xzr
   1ea48:	mov	w20, w14
   1ea4c:	bl	acd0 <dcgettext@plt>
   1ea50:	mov	w1, w20
   1ea54:	bl	aa20 <xasprintf@plt>
   1ea58:	ldr	x26, [sp, #32]
   1ea5c:	ldp	x8, x10, [sp, #8]
   1ea60:	str	x0, [x8]
   1ea64:	cbz	x10, 1ea7c <get_sysdep_c_format_directives@@Base+0xda8>
   1ea68:	ldr	x8, [sp, #24]
   1ea6c:	sub	x8, x23, x8
   1ea70:	ldrb	w9, [x10, x8]
   1ea74:	orr	w9, w9, #0x4
   1ea78:	strb	w9, [x10, x8]
   1ea7c:	ldr	x8, [sp, #48]
   1ea80:	cbnz	x26, 1eb90 <get_sysdep_c_format_directives@@Base+0xebc>
   1ea84:	b	1eba0 <get_sysdep_c_format_directives@@Base+0xecc>
   1ea88:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1ea8c:	add	x1, x1, #0x798
   1ea90:	mov	w2, #0x5                   	// #5
   1ea94:	mov	x0, xzr
   1ea98:	bl	acd0 <dcgettext@plt>
   1ea9c:	ldr	w1, [sp, #44]
   1eaa0:	bl	aa20 <xasprintf@plt>
   1eaa4:	ldp	x8, x10, [sp, #8]
   1eaa8:	str	x0, [x8]
   1eaac:	cbz	x10, 1eb84 <get_sysdep_c_format_directives@@Base+0xeb0>
   1eab0:	mov	x8, x23
   1eab4:	ldrb	w9, [x8], #-1
   1eab8:	cmp	w9, #0x0
   1eabc:	csel	x8, x8, x23, eq  // eq = none
   1eac0:	b	1eb70 <get_sysdep_c_format_directives@@Base+0xe9c>
   1eac4:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1eac8:	add	x1, x1, #0x630
   1eacc:	mov	w2, #0x5                   	// #5
   1ead0:	mov	x0, xzr
   1ead4:	bl	acd0 <dcgettext@plt>
   1ead8:	bl	a5a0 <xstrdup@plt>
   1eadc:	ldp	x8, x10, [sp, #8]
   1eae0:	str	x0, [x8]
   1eae4:	cbz	x10, 1eb84 <get_sysdep_c_format_directives@@Base+0xeb0>
   1eae8:	ldr	x8, [sp, #24]
   1eaec:	sub	x8, x21, x8
   1eaf0:	b	1eb78 <get_sysdep_c_format_directives@@Base+0xea4>
   1eaf4:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1eaf8:	add	x1, x1, #0x58e
   1eafc:	mov	w2, #0x5                   	// #5
   1eb00:	mov	x0, xzr
   1eb04:	mov	w20, w14
   1eb08:	bl	acd0 <dcgettext@plt>
   1eb0c:	mov	w1, w20
   1eb10:	bl	aa20 <xasprintf@plt>
   1eb14:	ldp	x8, x10, [sp, #8]
   1eb18:	str	x0, [x8]
   1eb1c:	cbz	x10, 1eb84 <get_sysdep_c_format_directives@@Base+0xeb0>
   1eb20:	sub	x8, x21, #0x1
   1eb24:	b	1eb70 <get_sysdep_c_format_directives@@Base+0xe9c>
   1eb28:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1eb2c:	add	x1, x1, #0x5db
   1eb30:	mov	w2, #0x5                   	// #5
   1eb34:	mov	x0, xzr
   1eb38:	bl	acd0 <dcgettext@plt>
   1eb3c:	ldr	w1, [sp, #44]
   1eb40:	bl	aa20 <xasprintf@plt>
   1eb44:	b	1eb60 <get_sysdep_c_format_directives@@Base+0xe8c>
   1eb48:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1eb4c:	add	x1, x1, #0x630
   1eb50:	mov	w2, #0x5                   	// #5
   1eb54:	mov	x0, xzr
   1eb58:	bl	acd0 <dcgettext@plt>
   1eb5c:	bl	a5a0 <xstrdup@plt>
   1eb60:	ldp	x8, x10, [sp, #8]
   1eb64:	str	x0, [x8]
   1eb68:	cbz	x10, 1eb84 <get_sysdep_c_format_directives@@Base+0xeb0>
   1eb6c:	sub	x8, x28, #0x1
   1eb70:	ldr	x9, [sp, #24]
   1eb74:	sub	x8, x8, x9
   1eb78:	ldrb	w9, [x10, x8]
   1eb7c:	orr	w9, w9, #0x4
   1eb80:	strb	w9, [x10, x8]
   1eb84:	ldr	x8, [sp, #48]
   1eb88:	ldr	x26, [sp, #32]
   1eb8c:	cbz	x26, 1eba0 <get_sysdep_c_format_directives@@Base+0xecc>
   1eb90:	mov	x0, x26
   1eb94:	mov	x20, x8
   1eb98:	bl	aa00 <free@plt>
   1eb9c:	mov	x8, x20
   1eba0:	cbz	x8, 1ebac <get_sysdep_c_format_directives@@Base+0xed8>
   1eba4:	mov	x0, x8
   1eba8:	bl	aa00 <free@plt>
   1ebac:	cbz	x19, 1ebb8 <get_sysdep_c_format_directives@@Base+0xee4>
   1ebb0:	mov	x0, x19
   1ebb4:	bl	aa00 <free@plt>
   1ebb8:	mov	x0, xzr
   1ebbc:	ldp	x20, x19, [sp, #208]
   1ebc0:	ldp	x22, x21, [sp, #192]
   1ebc4:	ldp	x24, x23, [sp, #176]
   1ebc8:	ldp	x26, x25, [sp, #160]
   1ebcc:	ldp	x28, x27, [sp, #144]
   1ebd0:	ldp	x29, x30, [sp, #128]
   1ebd4:	add	sp, sp, #0xe0
   1ebd8:	ret
   1ebdc:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1ebe0:	add	x1, x1, #0x6ff
   1ebe4:	mov	w2, #0x5                   	// #5
   1ebe8:	mov	x0, xzr
   1ebec:	bl	acd0 <dcgettext@plt>
   1ebf0:	ldr	w1, [sp, #44]
   1ebf4:	bl	aa20 <xasprintf@plt>
   1ebf8:	ldp	x8, x11, [sp, #8]
   1ebfc:	str	x0, [x8]
   1ec00:	cbz	x11, 1eb84 <get_sysdep_c_format_directives@@Base+0xeb0>
   1ec04:	ldrb	w8, [x23, #9]
   1ec08:	add	x9, x23, #0x9
   1ec0c:	add	x10, x23, #0x8
   1ec10:	b	1e9d4 <get_sysdep_c_format_directives@@Base+0xd00>
   1ec14:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1ec18:	add	x1, x1, #0x6ff
   1ec1c:	mov	w2, #0x5                   	// #5
   1ec20:	mov	x0, xzr
   1ec24:	bl	acd0 <dcgettext@plt>
   1ec28:	ldr	w1, [sp, #44]
   1ec2c:	bl	aa20 <xasprintf@plt>
   1ec30:	ldp	x8, x11, [sp, #8]
   1ec34:	str	x0, [x8]
   1ec38:	cbz	x11, 1eb84 <get_sysdep_c_format_directives@@Base+0xeb0>
   1ec3c:	ldrb	w8, [x23, #10]
   1ec40:	add	x9, x23, #0xa
   1ec44:	add	x10, x23, #0x9
   1ec48:	b	1e9d4 <get_sysdep_c_format_directives@@Base+0xd00>
   1ec4c:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1ec50:	add	x1, x1, #0x6a6
   1ec54:	mov	w2, #0x5                   	// #5
   1ec58:	mov	x0, xzr
   1ec5c:	bl	acd0 <dcgettext@plt>
   1ec60:	ldr	w1, [sp, #44]
   1ec64:	b	1eb10 <get_sysdep_c_format_directives@@Base+0xe3c>
   1ec68:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1ec6c:	add	x1, x1, #0x630
   1ec70:	mov	w2, #0x5                   	// #5
   1ec74:	mov	x0, xzr
   1ec78:	bl	acd0 <dcgettext@plt>
   1ec7c:	bl	a5a0 <xstrdup@plt>
   1ec80:	b	1eb14 <get_sysdep_c_format_directives@@Base+0xe40>
   1ec84:	ldr	w8, [x0]
   1ec88:	ldr	w9, [x1]
   1ec8c:	cmp	w8, w9
   1ec90:	csetm	w8, cc  // cc = lo, ul, last
   1ec94:	csinc	w0, w8, wzr, ls  // ls = plast
   1ec98:	ret
   1ec9c:	sub	sp, sp, #0x70
   1eca0:	stp	x29, x30, [sp, #16]
   1eca4:	stp	x28, x27, [sp, #32]
   1eca8:	stp	x26, x25, [sp, #48]
   1ecac:	stp	x24, x23, [sp, #64]
   1ecb0:	stp	x22, x21, [sp, #80]
   1ecb4:	stp	x20, x19, [sp, #96]
   1ecb8:	ldrb	w8, [x0]
   1ecbc:	add	x29, sp, #0x10
   1ecc0:	cbz	w8, 1ef24 <get_sysdep_c_format_directives@@Base+0x1250>
   1ecc4:	mov	x21, x0
   1ecc8:	mov	x20, x2
   1eccc:	mov	x19, xzr
   1ecd0:	mov	w27, wzr
   1ecd4:	mov	w28, wzr
   1ecd8:	mov	w25, wzr
   1ecdc:	mov	x23, x0
   1ece0:	str	x3, [sp, #8]
   1ece4:	and	w8, w8, #0xff
   1ece8:	cmp	w8, #0x24
   1ecec:	add	x22, x23, #0x1
   1ecf0:	b.ne	1edc0 <get_sysdep_c_format_directives@@Base+0x10ec>  // b.any
   1ecf4:	cbz	x20, 1ed08 <get_sysdep_c_format_directives@@Base+0x1034>
   1ecf8:	sub	x8, x23, x21
   1ecfc:	ldrb	w9, [x20, x8]
   1ed00:	orr	w9, w9, #0x1
   1ed04:	strb	w9, [x20, x8]
   1ed08:	ldrb	w8, [x22]
   1ed0c:	sub	w9, w8, #0x41
   1ed10:	cmp	w9, #0x3a
   1ed14:	b.hi	1ee5c <get_sysdep_c_format_directives@@Base+0x1188>  // b.pmore
   1ed18:	mov	w10, #0x1                   	// #1
   1ed1c:	lsl	x10, x10, x9
   1ed20:	tst	x10, #0x3ffffff03ffffff
   1ed24:	b.eq	1edd0 <get_sysdep_c_format_directives@@Base+0x10fc>  // b.none
   1ed28:	ldrb	w8, [x23, #2]!
   1ed2c:	cbz	w8, 1ed50 <get_sysdep_c_format_directives@@Base+0x107c>
   1ed30:	and	w0, w8, #0xff
   1ed34:	bl	a410 <c_isalnum@plt>
   1ed38:	tbnz	w0, #0, 1ed48 <get_sysdep_c_format_directives@@Base+0x1074>
   1ed3c:	ldrb	w8, [x23]
   1ed40:	cmp	w8, #0x5f
   1ed44:	b.ne	1ed50 <get_sysdep_c_format_directives@@Base+0x107c>  // b.any
   1ed48:	ldrb	w8, [x23, #1]!
   1ed4c:	cbnz	w8, 1ed30 <get_sysdep_c_format_directives@@Base+0x105c>
   1ed50:	sub	x24, x23, x22
   1ed54:	add	x0, x24, #0x1
   1ed58:	bl	a590 <xmalloc@plt>
   1ed5c:	mov	x1, x22
   1ed60:	mov	x2, x24
   1ed64:	mov	x26, x0
   1ed68:	bl	a040 <memcpy@plt>
   1ed6c:	add	x8, x26, x24
   1ed70:	mov	x22, x23
   1ed74:	add	w25, w25, #0x1
   1ed78:	cmp	w27, w28
   1ed7c:	strb	wzr, [x8]
   1ed80:	b.ne	1eda0 <get_sysdep_c_format_directives@@Base+0x10cc>  // b.any
   1ed84:	mov	w23, #0x1                   	// #1
   1ed88:	bfi	w23, w27, #1, #31
   1ed8c:	lsl	x1, x23, #3
   1ed90:	mov	x0, x19
   1ed94:	bl	a460 <xrealloc@plt>
   1ed98:	mov	x19, x0
   1ed9c:	mov	w27, w23
   1eda0:	str	x26, [x19, w28, uxtw #3]
   1eda4:	add	w28, w28, #0x1
   1eda8:	cbz	x20, 1edc0 <get_sysdep_c_format_directives@@Base+0x10ec>
   1edac:	sub	x8, x22, x21
   1edb0:	add	x8, x8, x20
   1edb4:	ldurb	w9, [x8, #-1]
   1edb8:	orr	w9, w9, #0x2
   1edbc:	sturb	w9, [x8, #-1]
   1edc0:	ldrb	w8, [x22]
   1edc4:	mov	x23, x22
   1edc8:	cbnz	w8, 1ece4 <get_sysdep_c_format_directives@@Base+0x1010>
   1edcc:	b	1eea0 <get_sysdep_c_format_directives@@Base+0x11cc>
   1edd0:	cmp	x9, #0x3a
   1edd4:	b.ne	1ee5c <get_sysdep_c_format_directives@@Base+0x1188>  // b.any
   1edd8:	add	x26, x23, #0x2
   1eddc:	mov	w24, #0x1                   	// #1
   1ede0:	add	x22, x23, x24
   1ede4:	ldrb	w0, [x22, #1]
   1ede8:	cbz	w0, 1ef80 <get_sysdep_c_format_directives@@Base+0x12ac>
   1edec:	cmp	w0, #0x7d
   1edf0:	b.eq	1ee68 <get_sysdep_c_format_directives@@Base+0x1194>  // b.none
   1edf4:	sxtb	w8, w0
   1edf8:	tbnz	w8, #31, 1ef68 <get_sysdep_c_format_directives@@Base+0x1294>
   1edfc:	add	x8, x24, #0x1
   1ee00:	cmp	x8, #0x3
   1ee04:	b.cc	1ee28 <get_sysdep_c_format_directives@@Base+0x1154>  // b.lo, b.ul, b.last
   1ee08:	cmp	w0, #0x3f
   1ee0c:	b.hi	1ee28 <get_sysdep_c_format_directives@@Base+0x1154>  // b.pmore
   1ee10:	mov	w8, #0x1                   	// #1
   1ee14:	mov	x9, #0x280000000000        	// #43980465111040
   1ee18:	lsl	x8, x8, x0
   1ee1c:	movk	x9, #0xa400, lsl #48
   1ee20:	tst	x8, x9
   1ee24:	b.ne	1efac <get_sysdep_c_format_directives@@Base+0x12d8>  // b.any
   1ee28:	bl	a410 <c_isalnum@plt>
   1ee2c:	tbnz	w0, #0, 1ee3c <get_sysdep_c_format_directives@@Base+0x1168>
   1ee30:	ldrb	w8, [x22, #1]
   1ee34:	cmp	w8, #0x5f
   1ee38:	b.ne	1ef74 <get_sysdep_c_format_directives@@Base+0x12a0>  // b.any
   1ee3c:	cmp	x24, #0x1
   1ee40:	b.ne	1ee54 <get_sysdep_c_format_directives@@Base+0x1180>  // b.any
   1ee44:	ldrb	w8, [x22, #1]
   1ee48:	sub	w8, w8, #0x30
   1ee4c:	cmp	w8, #0x9
   1ee50:	b.ls	1ef74 <get_sysdep_c_format_directives@@Base+0x12a0>  // b.plast
   1ee54:	add	x24, x24, #0x1
   1ee58:	b	1ede0 <get_sysdep_c_format_directives@@Base+0x110c>
   1ee5c:	cmp	w8, #0x5f
   1ee60:	b.eq	1ed28 <get_sysdep_c_format_directives@@Base+0x1054>  // b.none
   1ee64:	b	1f018 <get_sysdep_c_format_directives@@Base+0x1344>
   1ee68:	subs	x9, x24, #0x1
   1ee6c:	b.eq	1f088 <get_sysdep_c_format_directives@@Base+0x13b4>  // b.none
   1ee70:	add	x8, x23, x24
   1ee74:	mov	x0, x24
   1ee78:	add	x22, x8, #0x2
   1ee7c:	mov	x23, x9
   1ee80:	bl	a590 <xmalloc@plt>
   1ee84:	mov	x1, x26
   1ee88:	mov	x2, x23
   1ee8c:	mov	x26, x0
   1ee90:	bl	a040 <memcpy@plt>
   1ee94:	add	x8, x26, x24
   1ee98:	sub	x8, x8, #0x1
   1ee9c:	b	1ed74 <get_sysdep_c_format_directives@@Base+0x10a0>
   1eea0:	cmp	w28, #0x2
   1eea4:	b.cc	1ef34 <get_sysdep_c_format_directives@@Base+0x1260>  // b.lo, b.ul, b.last
   1eea8:	mov	w20, w28
   1eeac:	adrp	x3, 1f000 <get_sysdep_c_format_directives@@Base+0x132c>
   1eeb0:	add	x3, x3, #0x22c
   1eeb4:	mov	w2, #0x8                   	// #8
   1eeb8:	mov	x0, x19
   1eebc:	mov	x1, x20
   1eec0:	bl	a2f0 <qsort@plt>
   1eec4:	mov	x22, xzr
   1eec8:	mov	w28, wzr
   1eecc:	mov	x23, x19
   1eed0:	cbz	w28, 1eeec <get_sysdep_c_format_directives@@Base+0x1218>
   1eed4:	ldr	x21, [x23]
   1eed8:	sub	w8, w28, #0x1
   1eedc:	ldr	x1, [x19, w8, uxtw #3]
   1eee0:	mov	x0, x21
   1eee4:	bl	a8d0 <strcmp@plt>
   1eee8:	cbz	w0, 1ef08 <get_sysdep_c_format_directives@@Base+0x1234>
   1eeec:	cmp	x22, w28, uxtw
   1eef0:	b.ls	1ef00 <get_sysdep_c_format_directives@@Base+0x122c>  // b.plast
   1eef4:	ldr	x8, [x23]
   1eef8:	mov	w9, w28
   1eefc:	str	x8, [x19, x9, lsl #3]
   1ef00:	add	w28, w28, #0x1
   1ef04:	b	1ef10 <get_sysdep_c_format_directives@@Base+0x123c>
   1ef08:	mov	x0, x21
   1ef0c:	bl	aa00 <free@plt>
   1ef10:	add	x22, x22, #0x1
   1ef14:	cmp	x20, x22
   1ef18:	add	x23, x23, #0x8
   1ef1c:	b.ne	1eed0 <get_sysdep_c_format_directives@@Base+0x11fc>  // b.any
   1ef20:	b	1ef34 <get_sysdep_c_format_directives@@Base+0x1260>
   1ef24:	mov	x19, xzr
   1ef28:	mov	w27, wzr
   1ef2c:	mov	w25, wzr
   1ef30:	mov	w28, wzr
   1ef34:	mov	w0, #0x18                  	// #24
   1ef38:	bl	a590 <xmalloc@plt>
   1ef3c:	stp	w25, w28, [x0]
   1ef40:	str	w27, [x0, #8]
   1ef44:	str	x19, [x0, #16]
   1ef48:	ldp	x20, x19, [sp, #96]
   1ef4c:	ldp	x22, x21, [sp, #80]
   1ef50:	ldp	x24, x23, [sp, #64]
   1ef54:	ldp	x26, x25, [sp, #48]
   1ef58:	ldp	x28, x27, [sp, #32]
   1ef5c:	ldp	x29, x30, [sp, #16]
   1ef60:	add	sp, sp, #0x70
   1ef64:	ret
   1ef68:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1ef6c:	add	x1, x1, #0x943
   1ef70:	b	1efb4 <get_sysdep_c_format_directives@@Base+0x12e0>
   1ef74:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1ef78:	add	x1, x1, #0xa00
   1ef7c:	b	1efb4 <get_sysdep_c_format_directives@@Base+0x12e0>
   1ef80:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1ef84:	add	x1, x1, #0x7e0
   1ef88:	mov	w2, #0x5                   	// #5
   1ef8c:	mov	x0, xzr
   1ef90:	bl	acd0 <dcgettext@plt>
   1ef94:	bl	a5a0 <xstrdup@plt>
   1ef98:	ldr	x8, [sp, #8]
   1ef9c:	str	x0, [x8]
   1efa0:	cbz	x20, 1efe8 <get_sysdep_c_format_directives@@Base+0x1314>
   1efa4:	add	x8, x23, x24
   1efa8:	b	1efd8 <get_sysdep_c_format_directives@@Base+0x1304>
   1efac:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1efb0:	add	x1, x1, #0x980
   1efb4:	mov	w2, #0x5                   	// #5
   1efb8:	mov	x0, xzr
   1efbc:	bl	acd0 <dcgettext@plt>
   1efc0:	bl	a5a0 <xstrdup@plt>
   1efc4:	ldr	x8, [sp, #8]
   1efc8:	str	x0, [x8]
   1efcc:	cbz	x20, 1efe8 <get_sysdep_c_format_directives@@Base+0x1314>
   1efd0:	add	x8, x23, x24
   1efd4:	add	x8, x8, #0x1
   1efd8:	sub	x8, x8, x21
   1efdc:	ldrb	w9, [x20, x8]
   1efe0:	orr	w9, w9, #0x4
   1efe4:	strb	w9, [x20, x8]
   1efe8:	cbz	x19, 1f010 <get_sysdep_c_format_directives@@Base+0x133c>
   1efec:	cbz	w28, 1f008 <get_sysdep_c_format_directives@@Base+0x1334>
   1eff0:	mov	w20, w28
   1eff4:	mov	x21, x19
   1eff8:	ldr	x0, [x21], #8
   1effc:	bl	aa00 <free@plt>
   1f000:	subs	x20, x20, #0x1
   1f004:	b.ne	1eff8 <get_sysdep_c_format_directives@@Base+0x1324>  // b.any
   1f008:	mov	x0, x19
   1f00c:	bl	aa00 <free@plt>
   1f010:	mov	x0, xzr
   1f014:	b	1ef48 <get_sysdep_c_format_directives@@Base+0x1274>
   1f018:	cbnz	w8, 1f048 <get_sysdep_c_format_directives@@Base+0x1374>
   1f01c:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1f020:	add	x1, x1, #0x7e0
   1f024:	mov	w2, #0x5                   	// #5
   1f028:	mov	x0, xzr
   1f02c:	bl	acd0 <dcgettext@plt>
   1f030:	bl	a5a0 <xstrdup@plt>
   1f034:	ldr	x8, [sp, #8]
   1f038:	str	x0, [x8]
   1f03c:	cbz	x20, 1efe8 <get_sysdep_c_format_directives@@Base+0x1314>
   1f040:	sub	x8, x23, x21
   1f044:	b	1efdc <get_sysdep_c_format_directives@@Base+0x1308>
   1f048:	sxtb	w8, w8
   1f04c:	tbnz	w8, #31, 1f05c <get_sysdep_c_format_directives@@Base+0x1388>
   1f050:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1f054:	add	x1, x1, #0xa00
   1f058:	b	1f064 <get_sysdep_c_format_directives@@Base+0x1390>
   1f05c:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1f060:	add	x1, x1, #0x943
   1f064:	mov	w2, #0x5                   	// #5
   1f068:	mov	x0, xzr
   1f06c:	bl	acd0 <dcgettext@plt>
   1f070:	bl	a5a0 <xstrdup@plt>
   1f074:	ldr	x8, [sp, #8]
   1f078:	str	x0, [x8]
   1f07c:	cbz	x20, 1efe8 <get_sysdep_c_format_directives@@Base+0x1314>
   1f080:	sub	x8, x22, x21
   1f084:	b	1efdc <get_sysdep_c_format_directives@@Base+0x1308>
   1f088:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1f08c:	add	x1, x1, #0xa5b
   1f090:	b	1efb4 <get_sysdep_c_format_directives@@Base+0x12e0>
   1f094:	stp	x29, x30, [sp, #-32]!
   1f098:	stp	x20, x19, [sp, #16]
   1f09c:	mov	x19, x0
   1f0a0:	ldr	x0, [x0, #16]
   1f0a4:	mov	x29, sp
   1f0a8:	cbz	x0, 1f0d8 <get_sysdep_c_format_directives@@Base+0x1404>
   1f0ac:	ldr	w8, [x19, #4]
   1f0b0:	cbz	w8, 1f0d4 <get_sysdep_c_format_directives@@Base+0x1400>
   1f0b4:	mov	x20, xzr
   1f0b8:	ldr	x0, [x0, x20, lsl #3]
   1f0bc:	bl	aa00 <free@plt>
   1f0c0:	ldr	w8, [x19, #4]
   1f0c4:	ldr	x0, [x19, #16]
   1f0c8:	add	x20, x20, #0x1
   1f0cc:	cmp	x20, x8
   1f0d0:	b.cc	1f0b8 <get_sysdep_c_format_directives@@Base+0x13e4>  // b.lo, b.ul, b.last
   1f0d4:	bl	aa00 <free@plt>
   1f0d8:	mov	x0, x19
   1f0dc:	ldp	x20, x19, [sp, #16]
   1f0e0:	ldp	x29, x30, [sp], #32
   1f0e4:	b	aa00 <free@plt>
   1f0e8:	ldr	w0, [x0]
   1f0ec:	ret
   1f0f0:	stp	x29, x30, [sp, #-96]!
   1f0f4:	stp	x28, x27, [sp, #16]
   1f0f8:	stp	x26, x25, [sp, #32]
   1f0fc:	stp	x24, x23, [sp, #48]
   1f100:	stp	x22, x21, [sp, #64]
   1f104:	stp	x20, x19, [sp, #80]
   1f108:	ldr	w27, [x0, #4]
   1f10c:	ldr	w28, [x1, #4]
   1f110:	mov	x23, x0
   1f114:	mov	w0, wzr
   1f118:	mov	x29, sp
   1f11c:	cmn	w27, w28
   1f120:	b.eq	1f210 <get_sysdep_c_format_directives@@Base+0x153c>  // b.none
   1f124:	orr	w8, w28, w27
   1f128:	cbz	w8, 1f210 <get_sysdep_c_format_directives@@Base+0x153c>
   1f12c:	cmp	w28, #0x0
   1f130:	cset	w8, ne  // ne = any
   1f134:	cmp	w27, #0x0
   1f138:	mov	x20, x5
   1f13c:	mov	x21, x4
   1f140:	mov	x19, x3
   1f144:	mov	w24, w2
   1f148:	mov	x22, x1
   1f14c:	mov	x25, xzr
   1f150:	mov	w26, wzr
   1f154:	cset	w9, ne  // ne = any
   1f158:	tbz	w9, #0, 1f1b4 <get_sysdep_c_format_directives@@Base+0x14e0>
   1f15c:	tbz	w8, #0, 1f180 <get_sysdep_c_format_directives@@Base+0x14ac>
   1f160:	ldr	x8, [x23, #16]
   1f164:	ldr	x9, [x22, #16]
   1f168:	ldr	x0, [x8, x25, lsl #3]
   1f16c:	ldr	x1, [x9, w26, uxtw #3]
   1f170:	bl	a8d0 <strcmp@plt>
   1f174:	cmp	w0, #0x1
   1f178:	b.ge	1f1b4 <get_sysdep_c_format_directives@@Base+0x14e0>  // b.tcont
   1f17c:	tbz	w0, #31, 1f188 <get_sysdep_c_format_directives@@Base+0x14b4>
   1f180:	tbz	w24, #0, 1f18c <get_sysdep_c_format_directives@@Base+0x14b8>
   1f184:	b	1f1e4 <get_sysdep_c_format_directives@@Base+0x1510>
   1f188:	add	w26, w26, #0x1
   1f18c:	add	x25, x25, #0x1
   1f190:	cmp	x25, x27
   1f194:	cset	w9, cc  // cc = lo, ul, last
   1f198:	cmp	w26, w28
   1f19c:	cset	w8, cc  // cc = lo, ul, last
   1f1a0:	b.cc	1f158 <get_sysdep_c_format_directives@@Base+0x1484>  // b.lo, b.ul, b.last
   1f1a4:	cmp	x25, x27
   1f1a8:	b.cc	1f158 <get_sysdep_c_format_directives@@Base+0x1484>  // b.lo, b.ul, b.last
   1f1ac:	mov	w0, wzr
   1f1b0:	b	1f210 <get_sysdep_c_format_directives@@Base+0x153c>
   1f1b4:	cbz	x19, 1f20c <get_sysdep_c_format_directives@@Base+0x1538>
   1f1b8:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1f1bc:	add	x1, x1, #0xa95
   1f1c0:	mov	w2, #0x5                   	// #5
   1f1c4:	mov	x0, xzr
   1f1c8:	bl	acd0 <dcgettext@plt>
   1f1cc:	ldr	x8, [x22, #16]
   1f1d0:	mov	x2, x20
   1f1d4:	mov	x3, x21
   1f1d8:	ldr	x1, [x8, w26, uxtw #3]
   1f1dc:	blr	x19
   1f1e0:	b	1f20c <get_sysdep_c_format_directives@@Base+0x1538>
   1f1e4:	cbz	x19, 1f20c <get_sysdep_c_format_directives@@Base+0x1538>
   1f1e8:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1f1ec:	add	x1, x1, #0xae1
   1f1f0:	mov	w2, #0x5                   	// #5
   1f1f4:	mov	x0, xzr
   1f1f8:	bl	acd0 <dcgettext@plt>
   1f1fc:	ldr	x8, [x23, #16]
   1f200:	mov	x2, x20
   1f204:	ldr	x1, [x8, w25, uxtw #3]
   1f208:	blr	x19
   1f20c:	mov	w0, #0x1                   	// #1
   1f210:	ldp	x20, x19, [sp, #80]
   1f214:	ldp	x22, x21, [sp, #64]
   1f218:	ldp	x24, x23, [sp, #48]
   1f21c:	ldp	x26, x25, [sp, #32]
   1f220:	ldp	x28, x27, [sp, #16]
   1f224:	ldp	x29, x30, [sp], #96
   1f228:	ret
   1f22c:	ldr	x0, [x0]
   1f230:	ldr	x1, [x1]
   1f234:	b	a8d0 <strcmp@plt>
   1f238:	sub	sp, sp, #0x80
   1f23c:	stp	x29, x30, [sp, #32]
   1f240:	stp	x28, x27, [sp, #48]
   1f244:	stp	x26, x25, [sp, #64]
   1f248:	stp	x24, x23, [sp, #80]
   1f24c:	stp	x22, x21, [sp, #96]
   1f250:	stp	x20, x19, [sp, #112]
   1f254:	ldrb	w9, [x0]
   1f258:	add	x29, sp, #0x20
   1f25c:	str	x3, [sp, #16]
   1f260:	cbz	w9, 1f798 <get_sysdep_c_format_directives@@Base+0x1ac4>
   1f264:	adrp	x22, 39000 <get_search_path@@Base+0x2b4c>
   1f268:	mov	x25, x0
   1f26c:	mov	x23, x2
   1f270:	mov	x27, xzr
   1f274:	mov	x24, xzr
   1f278:	mov	w13, wzr
   1f27c:	mov	w19, wzr
   1f280:	mov	w28, wzr
   1f284:	add	x22, x22, #0xb20
   1f288:	mov	x8, x0
   1f28c:	stur	wzr, [x29, #-4]
   1f290:	and	w9, w9, #0xff
   1f294:	cmp	w9, #0x25
   1f298:	add	x20, x8, #0x1
   1f29c:	b.ne	1f5e8 <get_sysdep_c_format_directives@@Base+0x1914>  // b.any
   1f2a0:	cbz	x23, 1f2b4 <get_sysdep_c_format_directives@@Base+0x15e0>
   1f2a4:	sub	x9, x8, x25
   1f2a8:	ldrb	w10, [x23, x9]
   1f2ac:	orr	w10, w10, #0x1
   1f2b0:	strb	w10, [x23, x9]
   1f2b4:	ldrb	w9, [x20]
   1f2b8:	cmp	w9, #0x28
   1f2bc:	b.ne	1f300 <get_sysdep_c_format_directives@@Base+0x162c>  // b.any
   1f2c0:	mov	w9, wzr
   1f2c4:	add	x26, x8, #0x2
   1f2c8:	add	x20, x8, #0x3
   1f2cc:	ldurb	w8, [x20, #-1]
   1f2d0:	cmp	w8, #0x28
   1f2d4:	b.eq	1f2e8 <get_sysdep_c_format_directives@@Base+0x1614>  // b.none
   1f2d8:	cmp	w8, #0x29
   1f2dc:	b.eq	1f2f0 <get_sysdep_c_format_directives@@Base+0x161c>  // b.none
   1f2e0:	cbnz	w8, 1f2f8 <get_sysdep_c_format_directives@@Base+0x1624>
   1f2e4:	b	1f724 <get_sysdep_c_format_directives@@Base+0x1a50>
   1f2e8:	add	w9, w9, #0x1
   1f2ec:	b	1f2f8 <get_sysdep_c_format_directives@@Base+0x1624>
   1f2f0:	cbz	w9, 1f448 <get_sysdep_c_format_directives@@Base+0x1774>
   1f2f4:	sub	w9, w9, #0x1
   1f2f8:	add	x20, x20, #0x1
   1f2fc:	b	1f2cc <get_sysdep_c_format_directives@@Base+0x15f8>
   1f300:	mov	x21, xzr
   1f304:	ldur	w8, [x29, #-4]
   1f308:	add	x26, x20, #0x1
   1f30c:	add	w8, w8, #0x1
   1f310:	stur	w8, [x29, #-4]
   1f314:	ldurb	w8, [x26, #-1]
   1f318:	sub	w9, w8, #0x2a
   1f31c:	cmp	w9, #0x6
   1f320:	b.hi	1f334 <get_sysdep_c_format_directives@@Base+0x1660>  // b.pmore
   1f324:	adr	x10, 1f344 <get_sysdep_c_format_directives@@Base+0x1670>
   1f328:	ldrb	w11, [x22, x9]
   1f32c:	add	x10, x10, x11, lsl #2
   1f330:	br	x10
   1f334:	cmp	w8, #0x23
   1f338:	b.eq	1f344 <get_sysdep_c_format_directives@@Base+0x1670>  // b.none
   1f33c:	cmp	w8, #0x20
   1f340:	b.ne	1f34c <get_sysdep_c_format_directives@@Base+0x1678>  // b.any
   1f344:	add	x26, x26, #0x1
   1f348:	b	1f314 <get_sysdep_c_format_directives@@Base+0x1640>
   1f34c:	sub	w9, w8, #0x30
   1f350:	cmp	w9, #0x9
   1f354:	sub	x26, x26, #0x1
   1f358:	b.hi	1f3a8 <get_sysdep_c_format_directives@@Base+0x16d4>  // b.pmore
   1f35c:	ldrb	w8, [x26, #1]!
   1f360:	sub	w9, w8, #0x30
   1f364:	cmp	w9, #0xa
   1f368:	b.cc	1f35c <get_sysdep_c_format_directives@@Base+0x1688>  // b.lo, b.ul, b.last
   1f36c:	b	1f3a8 <get_sysdep_c_format_directives@@Base+0x16d4>
   1f370:	cbnz	w28, 1f87c <get_sysdep_c_format_directives@@Base+0x1ba8>
   1f374:	cmp	w13, w19
   1f378:	b.ne	1f398 <get_sysdep_c_format_directives@@Base+0x16c4>  // b.any
   1f37c:	mov	w20, #0x1                   	// #1
   1f380:	bfi	w20, w13, #1, #31
   1f384:	lsl	x1, x20, #2
   1f388:	mov	x0, x27
   1f38c:	bl	a460 <xrealloc@plt>
   1f390:	mov	x27, x0
   1f394:	mov	w13, w20
   1f398:	mov	w8, #0x4                   	// #4
   1f39c:	str	w8, [x27, w19, uxtw #2]
   1f3a0:	ldrb	w8, [x26]
   1f3a4:	add	w19, w19, #0x1
   1f3a8:	cmp	w8, #0x2e
   1f3ac:	b.ne	1f40c <get_sysdep_c_format_directives@@Base+0x1738>  // b.any
   1f3b0:	mov	x20, x26
   1f3b4:	ldrb	w8, [x20, #1]!
   1f3b8:	cmp	w8, #0x2a
   1f3bc:	b.ne	1f414 <get_sysdep_c_format_directives@@Base+0x1740>  // b.any
   1f3c0:	cbnz	w28, 1f8e8 <get_sysdep_c_format_directives@@Base+0x1c14>
   1f3c4:	cmp	w13, w19
   1f3c8:	add	x26, x26, #0x2
   1f3cc:	b.ne	1f3f4 <get_sysdep_c_format_directives@@Base+0x1720>  // b.any
   1f3d0:	mov	w20, w19
   1f3d4:	mov	w19, #0x1                   	// #1
   1f3d8:	bfi	w19, w20, #1, #31
   1f3dc:	lsl	x1, x19, #2
   1f3e0:	mov	x0, x27
   1f3e4:	bl	a460 <xrealloc@plt>
   1f3e8:	mov	x13, x19
   1f3ec:	mov	w19, w20
   1f3f0:	mov	x27, x0
   1f3f4:	mov	w8, #0x4                   	// #4
   1f3f8:	str	w8, [x27, w19, uxtw #2]
   1f3fc:	ldrb	w8, [x26]
   1f400:	mov	w9, wzr
   1f404:	add	w19, w19, #0x1
   1f408:	b	1f494 <get_sysdep_c_format_directives@@Base+0x17c0>
   1f40c:	mov	w9, wzr
   1f410:	b	1f494 <get_sysdep_c_format_directives@@Base+0x17c0>
   1f414:	sub	w9, w8, #0x30
   1f418:	cmp	w9, #0x9
   1f41c:	b.hi	1f48c <get_sysdep_c_format_directives@@Base+0x17b8>  // b.pmore
   1f420:	mov	w9, #0x1                   	// #1
   1f424:	and	w10, w8, #0xff
   1f428:	ldrb	w8, [x20, #1]!
   1f42c:	cmp	w10, #0x30
   1f430:	csel	w9, w9, wzr, eq  // eq = none
   1f434:	sub	w10, w8, #0x30
   1f438:	cmp	w10, #0xa
   1f43c:	b.cc	1f424 <get_sysdep_c_format_directives@@Base+0x1750>  // b.lo, b.ul, b.last
   1f440:	and	w9, w9, #0x1
   1f444:	b	1f490 <get_sysdep_c_format_directives@@Base+0x17bc>
   1f448:	sub	x0, x20, x26
   1f44c:	stp	x24, x25, [sp]
   1f450:	mov	x24, x27
   1f454:	sub	x27, x0, #0x1
   1f458:	mov	w25, w19
   1f45c:	mov	x19, x13
   1f460:	bl	a590 <xmalloc@plt>
   1f464:	mov	x1, x26
   1f468:	mov	x2, x27
   1f46c:	mov	x21, x0
   1f470:	bl	a040 <memcpy@plt>
   1f474:	strb	wzr, [x21, x27]
   1f478:	mov	x13, x19
   1f47c:	mov	w19, w25
   1f480:	mov	x27, x24
   1f484:	ldp	x24, x25, [sp]
   1f488:	b	1f304 <get_sysdep_c_format_directives@@Base+0x1630>
   1f48c:	mov	w9, wzr
   1f490:	mov	x26, x20
   1f494:	sub	w10, w8, #0x4c
   1f498:	cmp	w10, #0x20
   1f49c:	b.hi	1f4bc <get_sysdep_c_format_directives@@Base+0x17e8>  // b.pmore
   1f4a0:	mov	w11, #0x1                   	// #1
   1f4a4:	lsl	x10, x11, x10
   1f4a8:	mov	x11, #0x100000001           	// #4294967297
   1f4ac:	movk	x11, #0x1000, lsl #16
   1f4b0:	tst	x10, x11
   1f4b4:	b.eq	1f4bc <get_sysdep_c_format_directives@@Base+0x17e8>  // b.none
   1f4b8:	ldrb	w8, [x26, #1]!
   1f4bc:	cmp	w8, #0x46
   1f4c0:	b.le	1f4f4 <get_sysdep_c_format_directives@@Base+0x1820>
   1f4c4:	sub	w10, w8, #0x63
   1f4c8:	cmp	w10, #0x15
   1f4cc:	b.hi	1f514 <get_sysdep_c_format_directives@@Base+0x1840>  // b.pmore
   1f4d0:	adrp	x14, 39000 <get_search_path@@Base+0x2b4c>
   1f4d4:	add	x14, x14, #0xb27
   1f4d8:	adr	x11, 1f4e8 <get_sysdep_c_format_directives@@Base+0x1814>
   1f4dc:	ldrb	w12, [x14, x10]
   1f4e0:	add	x11, x11, x12, lsl #2
   1f4e4:	br	x11
   1f4e8:	mov	w20, #0x4                   	// #4
   1f4ec:	cbnz	x21, 1f544 <get_sysdep_c_format_directives@@Base+0x1870>
   1f4f0:	b	1f58c <get_sysdep_c_format_directives@@Base+0x18b8>
   1f4f4:	cmp	w8, #0x25
   1f4f8:	b.eq	1f508 <get_sysdep_c_format_directives@@Base+0x1834>  // b.none
   1f4fc:	cmp	w8, #0x45
   1f500:	b.eq	1f528 <get_sysdep_c_format_directives@@Base+0x1854>  // b.none
   1f504:	b	1f7e4 <get_sysdep_c_format_directives@@Base+0x1b10>
   1f508:	mov	w20, wzr
   1f50c:	cbnz	x21, 1f544 <get_sysdep_c_format_directives@@Base+0x1870>
   1f510:	b	1f58c <get_sysdep_c_format_directives@@Base+0x18b8>
   1f514:	cmp	w8, #0x47
   1f518:	b.eq	1f528 <get_sysdep_c_format_directives@@Base+0x1854>  // b.none
   1f51c:	cmp	w8, #0x58
   1f520:	b.eq	1f4e8 <get_sysdep_c_format_directives@@Base+0x1814>  // b.none
   1f524:	b	1f84c <get_sysdep_c_format_directives@@Base+0x1b78>
   1f528:	mov	w20, #0x5                   	// #5
   1f52c:	cbnz	x21, 1f544 <get_sysdep_c_format_directives@@Base+0x1870>
   1f530:	b	1f58c <get_sysdep_c_format_directives@@Base+0x18b8>
   1f534:	cmp	w9, #0x0
   1f538:	mov	w9, #0x3                   	// #3
   1f53c:	csinc	w20, w9, wzr, eq  // eq = none
   1f540:	cbz	x21, 1f58c <get_sysdep_c_format_directives@@Base+0x18b8>
   1f544:	cbnz	w19, 1f830 <get_sysdep_c_format_directives@@Base+0x1b5c>
   1f548:	cmp	w13, w28
   1f54c:	b.ne	1f56c <get_sysdep_c_format_directives@@Base+0x1898>  // b.any
   1f550:	mov	w19, #0x1                   	// #1
   1f554:	bfi	w19, w28, #1, #31
   1f558:	lsl	x1, x19, #4
   1f55c:	mov	x0, x24
   1f560:	bl	a460 <xrealloc@plt>
   1f564:	mov	x13, x19
   1f568:	mov	x24, x0
   1f56c:	add	x8, x24, w28, uxtw #4
   1f570:	mov	w19, wzr
   1f574:	str	x21, [x8]
   1f578:	str	w20, [x8, #8]
   1f57c:	add	w28, w28, #0x1
   1f580:	b	1f5d0 <get_sysdep_c_format_directives@@Base+0x18fc>
   1f584:	mov	w20, #0x2                   	// #2
   1f588:	cbnz	x21, 1f544 <get_sysdep_c_format_directives@@Base+0x1870>
   1f58c:	cmp	w8, #0x25
   1f590:	b.eq	1f5d0 <get_sysdep_c_format_directives@@Base+0x18fc>  // b.none
   1f594:	cbnz	w28, 1f830 <get_sysdep_c_format_directives@@Base+0x1b5c>
   1f598:	cmp	w13, w19
   1f59c:	b.ne	1f5c4 <get_sysdep_c_format_directives@@Base+0x18f0>  // b.any
   1f5a0:	mov	w28, w19
   1f5a4:	mov	w19, #0x1                   	// #1
   1f5a8:	bfi	w19, w28, #1, #31
   1f5ac:	lsl	x1, x19, #2
   1f5b0:	mov	x0, x27
   1f5b4:	bl	a460 <xrealloc@plt>
   1f5b8:	mov	x13, x19
   1f5bc:	mov	w19, w28
   1f5c0:	mov	x27, x0
   1f5c4:	mov	w28, wzr
   1f5c8:	str	w20, [x27, w19, uxtw #2]
   1f5cc:	add	w19, w19, #0x1
   1f5d0:	cbz	x23, 1f5e4 <get_sysdep_c_format_directives@@Base+0x1910>
   1f5d4:	sub	x8, x26, x25
   1f5d8:	ldrb	w9, [x23, x8]
   1f5dc:	orr	w9, w9, #0x2
   1f5e0:	strb	w9, [x23, x8]
   1f5e4:	add	x20, x26, #0x1
   1f5e8:	ldrb	w9, [x20]
   1f5ec:	mov	x8, x20
   1f5f0:	cbnz	w9, 1f290 <get_sysdep_c_format_directives@@Base+0x15bc>
   1f5f4:	cmp	w28, #0x2
   1f5f8:	str	x13, [sp, #8]
   1f5fc:	b.cc	1f824 <get_sysdep_c_format_directives@@Base+0x1b50>  // b.lo, b.ul, b.last
   1f600:	mov	w23, w28
   1f604:	adrp	x3, 1f000 <get_sysdep_c_format_directives@@Base+0x132c>
   1f608:	add	x3, x3, #0xd14
   1f60c:	mov	w2, #0x10                  	// #16
   1f610:	mov	x0, x24
   1f614:	mov	x1, x23
   1f618:	bl	a2f0 <qsort@plt>
   1f61c:	mov	x22, xzr
   1f620:	mov	w12, wzr
   1f624:	mov	w28, wzr
   1f628:	mov	x20, x24
   1f62c:	mov	x26, x27
   1f630:	cbz	w28, 1f658 <get_sysdep_c_format_directives@@Base+0x1984>
   1f634:	sub	w27, w28, #0x1
   1f638:	ldr	x25, [x20]
   1f63c:	lsl	x8, x27, #4
   1f640:	ldr	x1, [x24, x8]
   1f644:	mov	w21, w12
   1f648:	mov	x0, x25
   1f64c:	bl	a8d0 <strcmp@plt>
   1f650:	mov	w12, w21
   1f654:	cbz	w0, 1f684 <get_sysdep_c_format_directives@@Base+0x19b0>
   1f658:	cmp	x22, w28, uxtw
   1f65c:	b.ls	1f678 <get_sysdep_c_format_directives@@Base+0x19a4>  // b.plast
   1f660:	ldr	x8, [x20]
   1f664:	mov	w9, w28
   1f668:	add	x9, x24, x9, lsl #4
   1f66c:	str	x8, [x9]
   1f670:	ldr	w8, [x20, #8]
   1f674:	str	w8, [x9, #8]
   1f678:	add	w28, w28, #0x1
   1f67c:	mov	x27, x26
   1f680:	b	1f704 <get_sysdep_c_format_directives@@Base+0x1a30>
   1f684:	add	x27, x24, x27, lsl #4
   1f688:	ldr	w8, [x20, #8]
   1f68c:	ldr	w9, [x27, #8]!
   1f690:	cmp	w8, w9
   1f694:	b.eq	1f6f0 <get_sysdep_c_format_directives@@Base+0x1a1c>  // b.none
   1f698:	cmp	w9, #0x1
   1f69c:	b.eq	1f6f0 <get_sysdep_c_format_directives@@Base+0x1a1c>  // b.none
   1f6a0:	cmp	w8, #0x1
   1f6a4:	cset	w8, eq  // eq = none
   1f6a8:	cset	w10, ne  // ne = any
   1f6ac:	orr	w11, w12, w8
   1f6b0:	csel	w8, w9, wzr, eq  // eq = none
   1f6b4:	tbz	w11, #0, 1f6c0 <get_sysdep_c_format_directives@@Base+0x19ec>
   1f6b8:	orr	w21, w12, w10
   1f6bc:	b	1f6f0 <get_sysdep_c_format_directives@@Base+0x1a1c>
   1f6c0:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1f6c4:	mov	w2, #0x5                   	// #5
   1f6c8:	mov	x0, xzr
   1f6cc:	add	x1, x1, #0xba5
   1f6d0:	bl	acd0 <dcgettext@plt>
   1f6d4:	ldr	x1, [x20]
   1f6d8:	bl	aa20 <xasprintf@plt>
   1f6dc:	ldr	x9, [sp, #16]
   1f6e0:	mov	w8, wzr
   1f6e4:	mov	w21, #0x1                   	// #1
   1f6e8:	str	x0, [x9]
   1f6ec:	ldr	x25, [x20]
   1f6f0:	mov	x0, x25
   1f6f4:	str	w8, [x27]
   1f6f8:	bl	aa00 <free@plt>
   1f6fc:	mov	x27, x26
   1f700:	mov	w12, w21
   1f704:	add	x22, x22, #0x1
   1f708:	cmp	x23, x22
   1f70c:	add	x20, x20, #0x10
   1f710:	b.ne	1f62c <get_sysdep_c_format_directives@@Base+0x1958>  // b.any
   1f714:	ldur	w20, [x29, #-4]
   1f718:	ldr	x21, [sp, #8]
   1f71c:	tbnz	w12, #0, 1f75c <get_sysdep_c_format_directives@@Base+0x1a88>
   1f720:	b	1f7b0 <get_sysdep_c_format_directives@@Base+0x1adc>
   1f724:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1f728:	add	x1, x1, #0x7e0
   1f72c:	mov	w2, #0x5                   	// #5
   1f730:	mov	x0, xzr
   1f734:	bl	acd0 <dcgettext@plt>
   1f738:	bl	a5a0 <xstrdup@plt>
   1f73c:	ldr	x8, [sp, #16]
   1f740:	str	x0, [x8]
   1f744:	cbz	x23, 1f75c <get_sysdep_c_format_directives@@Base+0x1a88>
   1f748:	sub	x8, x20, x25
   1f74c:	add	x8, x8, x23
   1f750:	ldurb	w9, [x8, #-2]
   1f754:	orr	w9, w9, #0x4
   1f758:	sturb	w9, [x8, #-2]
   1f75c:	cbz	x24, 1f784 <get_sysdep_c_format_directives@@Base+0x1ab0>
   1f760:	cbz	w28, 1f77c <get_sysdep_c_format_directives@@Base+0x1aa8>
   1f764:	mov	w19, w28
   1f768:	mov	x20, x24
   1f76c:	ldr	x0, [x20], #16
   1f770:	bl	aa00 <free@plt>
   1f774:	subs	x19, x19, #0x1
   1f778:	b.ne	1f76c <get_sysdep_c_format_directives@@Base+0x1a98>  // b.any
   1f77c:	mov	x0, x24
   1f780:	bl	aa00 <free@plt>
   1f784:	cbz	x27, 1f790 <get_sysdep_c_format_directives@@Base+0x1abc>
   1f788:	mov	x0, x27
   1f78c:	bl	aa00 <free@plt>
   1f790:	mov	x0, xzr
   1f794:	b	1f7c4 <get_sysdep_c_format_directives@@Base+0x1af0>
   1f798:	mov	x27, xzr
   1f79c:	mov	x24, xzr
   1f7a0:	mov	w21, wzr
   1f7a4:	mov	w19, wzr
   1f7a8:	mov	w20, wzr
   1f7ac:	mov	w28, wzr
   1f7b0:	mov	w0, #0x20                  	// #32
   1f7b4:	bl	a590 <xmalloc@plt>
   1f7b8:	stp	w20, w28, [x0]
   1f7bc:	stp	w19, w21, [x0, #8]
   1f7c0:	stp	x24, x27, [x0, #16]
   1f7c4:	ldp	x20, x19, [sp, #112]
   1f7c8:	ldp	x22, x21, [sp, #96]
   1f7cc:	ldp	x24, x23, [sp, #80]
   1f7d0:	ldp	x26, x25, [sp, #64]
   1f7d4:	ldp	x28, x27, [sp, #48]
   1f7d8:	ldp	x29, x30, [sp, #32]
   1f7dc:	add	sp, sp, #0x80
   1f7e0:	ret
   1f7e4:	cbnz	w8, 1f84c <get_sysdep_c_format_directives@@Base+0x1b78>
   1f7e8:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1f7ec:	add	x1, x1, #0x7e0
   1f7f0:	mov	w2, #0x5                   	// #5
   1f7f4:	mov	x0, xzr
   1f7f8:	bl	acd0 <dcgettext@plt>
   1f7fc:	bl	a5a0 <xstrdup@plt>
   1f800:	ldr	x8, [sp, #16]
   1f804:	str	x0, [x8]
   1f808:	cbz	x23, 1f75c <get_sysdep_c_format_directives@@Base+0x1a88>
   1f80c:	sub	x8, x26, x25
   1f810:	add	x8, x8, x23
   1f814:	ldurb	w9, [x8, #-1]
   1f818:	orr	w9, w9, #0x4
   1f81c:	sturb	w9, [x8, #-1]
   1f820:	b	1f75c <get_sysdep_c_format_directives@@Base+0x1a88>
   1f824:	ldur	w20, [x29, #-4]
   1f828:	ldr	x21, [sp, #8]
   1f82c:	b	1f7b0 <get_sysdep_c_format_directives@@Base+0x1adc>
   1f830:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1f834:	add	x1, x1, #0xb3d
   1f838:	mov	w2, #0x5                   	// #5
   1f83c:	mov	x0, xzr
   1f840:	bl	acd0 <dcgettext@plt>
   1f844:	bl	a5a0 <xstrdup@plt>
   1f848:	b	1f8c8 <get_sysdep_c_format_directives@@Base+0x1bf4>
   1f84c:	sub	w8, w8, #0x20
   1f850:	cmp	w8, #0x5e
   1f854:	b.hi	1f8ac <get_sysdep_c_format_directives@@Base+0x1bd8>  // b.pmore
   1f858:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1f85c:	add	x1, x1, #0x80e
   1f860:	mov	w2, #0x5                   	// #5
   1f864:	mov	x0, xzr
   1f868:	bl	acd0 <dcgettext@plt>
   1f86c:	ldrb	w2, [x26]
   1f870:	ldur	w1, [x29, #-4]
   1f874:	bl	aa20 <xasprintf@plt>
   1f878:	b	1f8c8 <get_sysdep_c_format_directives@@Base+0x1bf4>
   1f87c:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1f880:	add	x1, x1, #0xb3d
   1f884:	mov	w2, #0x5                   	// #5
   1f888:	mov	x0, xzr
   1f88c:	bl	acd0 <dcgettext@plt>
   1f890:	bl	a5a0 <xstrdup@plt>
   1f894:	ldr	x8, [sp, #16]
   1f898:	str	x0, [x8]
   1f89c:	cbz	x23, 1f75c <get_sysdep_c_format_directives@@Base+0x1a88>
   1f8a0:	sub	x8, x26, #0x1
   1f8a4:	sub	x8, x8, x25
   1f8a8:	b	1f8d8 <get_sysdep_c_format_directives@@Base+0x1c04>
   1f8ac:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1f8b0:	add	x1, x1, #0x862
   1f8b4:	mov	w2, #0x5                   	// #5
   1f8b8:	mov	x0, xzr
   1f8bc:	bl	acd0 <dcgettext@plt>
   1f8c0:	ldur	w1, [x29, #-4]
   1f8c4:	bl	aa20 <xasprintf@plt>
   1f8c8:	ldr	x8, [sp, #16]
   1f8cc:	str	x0, [x8]
   1f8d0:	cbz	x23, 1f75c <get_sysdep_c_format_directives@@Base+0x1a88>
   1f8d4:	sub	x8, x26, x25
   1f8d8:	ldrb	w9, [x23, x8]
   1f8dc:	orr	w9, w9, #0x4
   1f8e0:	strb	w9, [x23, x8]
   1f8e4:	b	1f75c <get_sysdep_c_format_directives@@Base+0x1a88>
   1f8e8:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1f8ec:	add	x1, x1, #0xb3d
   1f8f0:	mov	w2, #0x5                   	// #5
   1f8f4:	mov	x0, xzr
   1f8f8:	bl	acd0 <dcgettext@plt>
   1f8fc:	bl	a5a0 <xstrdup@plt>
   1f900:	ldr	x8, [sp, #16]
   1f904:	str	x0, [x8]
   1f908:	cbz	x23, 1f75c <get_sysdep_c_format_directives@@Base+0x1a88>
   1f90c:	sub	x8, x20, x25
   1f910:	b	1f8d8 <get_sysdep_c_format_directives@@Base+0x1c04>
   1f914:	stp	x29, x30, [sp, #-48]!
   1f918:	stp	x20, x19, [sp, #32]
   1f91c:	mov	x19, x0
   1f920:	ldr	x0, [x0, #16]
   1f924:	str	x21, [sp, #16]
   1f928:	mov	x29, sp
   1f92c:	cbz	x0, 1f964 <get_sysdep_c_format_directives@@Base+0x1c90>
   1f930:	ldr	w8, [x19, #4]
   1f934:	cbz	w8, 1f960 <get_sysdep_c_format_directives@@Base+0x1c8c>
   1f938:	mov	x20, xzr
   1f93c:	mov	x21, xzr
   1f940:	ldr	x0, [x0, x20]
   1f944:	bl	aa00 <free@plt>
   1f948:	ldr	w8, [x19, #4]
   1f94c:	ldr	x0, [x19, #16]
   1f950:	add	x21, x21, #0x1
   1f954:	add	x20, x20, #0x10
   1f958:	cmp	x21, x8
   1f95c:	b.cc	1f940 <get_sysdep_c_format_directives@@Base+0x1c6c>  // b.lo, b.ul, b.last
   1f960:	bl	aa00 <free@plt>
   1f964:	ldr	x0, [x19, #24]
   1f968:	cbz	x0, 1f970 <get_sysdep_c_format_directives@@Base+0x1c9c>
   1f96c:	bl	aa00 <free@plt>
   1f970:	mov	x0, x19
   1f974:	ldp	x20, x19, [sp, #32]
   1f978:	ldr	x21, [sp, #16]
   1f97c:	ldp	x29, x30, [sp], #48
   1f980:	b	aa00 <free@plt>
   1f984:	ldr	w0, [x0]
   1f988:	ret
   1f98c:	sub	sp, sp, #0x70
   1f990:	stp	x29, x30, [sp, #16]
   1f994:	stp	x28, x27, [sp, #32]
   1f998:	stp	x26, x25, [sp, #48]
   1f99c:	stp	x24, x23, [sp, #64]
   1f9a0:	stp	x22, x21, [sp, #80]
   1f9a4:	stp	x20, x19, [sp, #96]
   1f9a8:	ldr	w26, [x0, #4]
   1f9ac:	mov	x20, x5
   1f9b0:	mov	x21, x4
   1f9b4:	mov	x19, x3
   1f9b8:	mov	w22, w2
   1f9bc:	mov	x23, x0
   1f9c0:	mov	x24, x1
   1f9c4:	add	x29, sp, #0x10
   1f9c8:	cbz	w26, 1f9e4 <get_sysdep_c_format_directives@@Base+0x1d10>
   1f9cc:	ldr	w8, [x24, #8]
   1f9d0:	cbz	w8, 1f9e4 <get_sysdep_c_format_directives@@Base+0x1d10>
   1f9d4:	cbz	x19, 1fca0 <get_sysdep_c_format_directives@@Base+0x1fcc>
   1f9d8:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1f9dc:	add	x1, x1, #0xbe8
   1f9e0:	b	1fc88 <get_sysdep_c_format_directives@@Base+0x1fb4>
   1f9e4:	ldr	w8, [x23, #8]
   1f9e8:	ldr	w25, [x24, #4]
   1f9ec:	cbz	w8, 1fa04 <get_sysdep_c_format_directives@@Base+0x1d30>
   1f9f0:	cbz	w25, 1fa04 <get_sysdep_c_format_directives@@Base+0x1d30>
   1f9f4:	cbz	x19, 1fca0 <get_sysdep_c_format_directives@@Base+0x1fcc>
   1f9f8:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1f9fc:	add	x1, x1, #0xc35
   1fa00:	b	1fc88 <get_sysdep_c_format_directives@@Base+0x1fb4>
   1fa04:	cmn	w26, w25
   1fa08:	b.ne	1fa14 <get_sysdep_c_format_directives@@Base+0x1d40>  // b.any
   1fa0c:	mov	w8, wzr
   1fa10:	b	1fbd0 <get_sysdep_c_format_directives@@Base+0x1efc>
   1fa14:	orr	w8, w25, w26
   1fa18:	stp	x21, x20, [sp]
   1fa1c:	cbz	w8, 1fa9c <get_sysdep_c_format_directives@@Base+0x1dc8>
   1fa20:	cmp	w25, #0x0
   1fa24:	cset	w8, ne  // ne = any
   1fa28:	cmp	w26, #0x0
   1fa2c:	mov	x20, xzr
   1fa30:	mov	x27, xzr
   1fa34:	mov	w28, wzr
   1fa38:	cset	w9, ne  // ne = any
   1fa3c:	tbz	w9, #0, 1fb14 <get_sysdep_c_format_directives@@Base+0x1e40>
   1fa40:	tbz	w8, #0, 1fa6c <get_sysdep_c_format_directives@@Base+0x1d98>
   1fa44:	ldr	x8, [x23, #16]
   1fa48:	ldr	x9, [x24, #16]
   1fa4c:	mov	w10, w28
   1fa50:	lsl	x10, x10, #4
   1fa54:	ldr	x0, [x8, x20]
   1fa58:	ldr	x1, [x9, x10]
   1fa5c:	bl	a8d0 <strcmp@plt>
   1fa60:	cmp	w0, #0x1
   1fa64:	b.ge	1fb14 <get_sysdep_c_format_directives@@Base+0x1e40>  // b.tcont
   1fa68:	tbz	w0, #31, 1fa74 <get_sysdep_c_format_directives@@Base+0x1da0>
   1fa6c:	tbz	w22, #0, 1fa78 <get_sysdep_c_format_directives@@Base+0x1da4>
   1fa70:	b	1fb4c <get_sysdep_c_format_directives@@Base+0x1e78>
   1fa74:	add	w28, w28, #0x1
   1fa78:	add	x27, x27, #0x1
   1fa7c:	cmp	x27, x26
   1fa80:	cset	w9, cc  // cc = lo, ul, last
   1fa84:	cmp	w28, w25
   1fa88:	cset	w8, cc  // cc = lo, ul, last
   1fa8c:	add	x20, x20, #0x10
   1fa90:	b.cc	1fa3c <get_sysdep_c_format_directives@@Base+0x1d68>  // b.lo, b.ul, b.last
   1fa94:	cmp	x27, x26
   1fa98:	b.cc	1fa3c <get_sysdep_c_format_directives@@Base+0x1d68>  // b.lo, b.ul, b.last
   1fa9c:	cbz	w25, 1fb0c <get_sysdep_c_format_directives@@Base+0x1e38>
   1faa0:	ldr	x20, [x23, #16]
   1faa4:	ldr	x26, [x24, #16]
   1faa8:	mov	w8, wzr
   1faac:	mov	w27, wzr
   1fab0:	mov	w28, w8
   1fab4:	mov	w21, w27
   1fab8:	lsl	x8, x28, #4
   1fabc:	lsl	x9, x21, #4
   1fac0:	ldr	x0, [x20, x8]
   1fac4:	ldr	x1, [x26, x9]
   1fac8:	bl	a8d0 <strcmp@plt>
   1facc:	cbnz	w0, 1fb00 <get_sysdep_c_format_directives@@Base+0x1e2c>
   1fad0:	add	x8, x20, x28, lsl #4
   1fad4:	add	x10, x26, x21, lsl #4
   1fad8:	ldr	w9, [x8, #8]
   1fadc:	ldr	w8, [x10, #8]
   1fae0:	cmp	w9, w8
   1fae4:	b.eq	1fafc <get_sysdep_c_format_directives@@Base+0x1e28>  // b.none
   1fae8:	tbnz	w22, #0, 1fb88 <get_sysdep_c_format_directives@@Base+0x1eb4>
   1faec:	cmp	w9, #0x1
   1faf0:	b.eq	1fafc <get_sysdep_c_format_directives@@Base+0x1e28>  // b.none
   1faf4:	cmp	w8, #0x1
   1faf8:	b.ne	1fb88 <get_sysdep_c_format_directives@@Base+0x1eb4>  // b.any
   1fafc:	add	w27, w27, #0x1
   1fb00:	cmp	w27, w25
   1fb04:	add	w8, w28, #0x1
   1fb08:	b.cc	1fab0 <get_sysdep_c_format_directives@@Base+0x1ddc>  // b.lo, b.ul, b.last
   1fb0c:	mov	w8, wzr
   1fb10:	b	1fbc8 <get_sysdep_c_format_directives@@Base+0x1ef4>
   1fb14:	cbz	x19, 1fbc4 <get_sysdep_c_format_directives@@Base+0x1ef0>
   1fb18:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1fb1c:	add	x1, x1, #0xa95
   1fb20:	mov	w2, #0x5                   	// #5
   1fb24:	mov	x0, xzr
   1fb28:	bl	acd0 <dcgettext@plt>
   1fb2c:	ldr	x8, [x24, #16]
   1fb30:	mov	w9, w28
   1fb34:	lsl	x9, x9, #4
   1fb38:	ldp	x21, x20, [sp]
   1fb3c:	ldr	x1, [x8, x9]
   1fb40:	mov	x2, x20
   1fb44:	mov	x3, x21
   1fb48:	b	1fbb8 <get_sysdep_c_format_directives@@Base+0x1ee4>
   1fb4c:	cbz	x19, 1fbc4 <get_sysdep_c_format_directives@@Base+0x1ef0>
   1fb50:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1fb54:	add	x1, x1, #0xae1
   1fb58:	mov	w2, #0x5                   	// #5
   1fb5c:	mov	x0, xzr
   1fb60:	bl	acd0 <dcgettext@plt>
   1fb64:	ldr	x8, [x23, #16]
   1fb68:	and	x9, x27, #0xffffffff
   1fb6c:	lsl	x9, x9, #4
   1fb70:	ldr	x20, [sp, #8]
   1fb74:	ldr	x1, [x8, x9]
   1fb78:	mov	x2, x20
   1fb7c:	blr	x19
   1fb80:	mov	w8, #0x1                   	// #1
   1fb84:	b	1fbcc <get_sysdep_c_format_directives@@Base+0x1ef8>
   1fb88:	cbz	x19, 1fbc4 <get_sysdep_c_format_directives@@Base+0x1ef0>
   1fb8c:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1fb90:	add	x1, x1, #0xc82
   1fb94:	mov	w2, #0x5                   	// #5
   1fb98:	mov	x0, xzr
   1fb9c:	bl	acd0 <dcgettext@plt>
   1fba0:	ldr	x8, [x24, #16]
   1fba4:	lsl	x9, x21, #4
   1fba8:	ldp	x21, x20, [sp]
   1fbac:	ldr	x3, [x8, x9]
   1fbb0:	mov	x1, x21
   1fbb4:	mov	x2, x20
   1fbb8:	blr	x19
   1fbbc:	mov	w8, #0x1                   	// #1
   1fbc0:	b	1fbd0 <get_sysdep_c_format_directives@@Base+0x1efc>
   1fbc4:	mov	w8, #0x1                   	// #1
   1fbc8:	ldr	x20, [sp, #8]
   1fbcc:	ldr	x21, [sp]
   1fbd0:	ldr	w9, [x23, #8]
   1fbd4:	ldr	w10, [x24, #8]
   1fbd8:	cmn	w9, w10
   1fbdc:	b.eq	1fca4 <get_sysdep_c_format_directives@@Base+0x1fd0>  // b.none
   1fbe0:	cmp	w9, w10
   1fbe4:	b.ne	1fc7c <get_sysdep_c_format_directives@@Base+0x1fa8>  // b.any
   1fbe8:	cbz	w9, 1fca4 <get_sysdep_c_format_directives@@Base+0x1fd0>
   1fbec:	adrp	x25, 39000 <get_search_path@@Base+0x2b4c>
   1fbf0:	mov	x26, xzr
   1fbf4:	add	x25, x25, #0x546
   1fbf8:	ldr	x10, [x23, #24]
   1fbfc:	ldr	x12, [x24, #24]
   1fc00:	ldr	w11, [x10, x26, lsl #2]
   1fc04:	ldr	w10, [x12, x26, lsl #2]
   1fc08:	cmp	w11, w10
   1fc0c:	b.eq	1fc6c <get_sysdep_c_format_directives@@Base+0x1f98>  // b.none
   1fc10:	tbz	w22, #0, 1fc1c <get_sysdep_c_format_directives@@Base+0x1f48>
   1fc14:	cbnz	x19, 1fc44 <get_sysdep_c_format_directives@@Base+0x1f70>
   1fc18:	b	1fc68 <get_sysdep_c_format_directives@@Base+0x1f94>
   1fc1c:	cmp	w10, #0x1
   1fc20:	cset	w12, ne  // ne = any
   1fc24:	cmp	w11, #0x1
   1fc28:	cset	w11, ne  // ne = any
   1fc2c:	and	w11, w11, w12
   1fc30:	orr	w8, w8, w11
   1fc34:	b.eq	1fc6c <get_sysdep_c_format_directives@@Base+0x1f98>  // b.none
   1fc38:	cmp	w10, #0x1
   1fc3c:	b.eq	1fc6c <get_sysdep_c_format_directives@@Base+0x1f98>  // b.none
   1fc40:	cbz	x19, 1fc6c <get_sysdep_c_format_directives@@Base+0x1f98>
   1fc44:	mov	w2, #0x5                   	// #5
   1fc48:	mov	x0, xzr
   1fc4c:	mov	x1, x25
   1fc50:	bl	acd0 <dcgettext@plt>
   1fc54:	add	w3, w26, #0x1
   1fc58:	mov	x1, x21
   1fc5c:	mov	x2, x20
   1fc60:	blr	x19
   1fc64:	ldr	w9, [x24, #8]
   1fc68:	mov	w8, #0x1                   	// #1
   1fc6c:	add	x26, x26, #0x1
   1fc70:	cmp	x26, w9, uxtw
   1fc74:	b.cc	1fbf8 <get_sysdep_c_format_directives@@Base+0x1f24>  // b.lo, b.ul, b.last
   1fc78:	b	1fca4 <get_sysdep_c_format_directives@@Base+0x1fd0>
   1fc7c:	cbz	x19, 1fca0 <get_sysdep_c_format_directives@@Base+0x1fcc>
   1fc80:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1fc84:	add	x1, x1, #0x506
   1fc88:	mov	w2, #0x5                   	// #5
   1fc8c:	mov	x0, xzr
   1fc90:	bl	acd0 <dcgettext@plt>
   1fc94:	mov	x1, x21
   1fc98:	mov	x2, x20
   1fc9c:	blr	x19
   1fca0:	mov	w8, #0x1                   	// #1
   1fca4:	ldp	x20, x19, [sp, #96]
   1fca8:	ldp	x22, x21, [sp, #80]
   1fcac:	ldp	x24, x23, [sp, #64]
   1fcb0:	ldp	x26, x25, [sp, #48]
   1fcb4:	ldp	x28, x27, [sp, #32]
   1fcb8:	ldp	x29, x30, [sp, #16]
   1fcbc:	and	w0, w8, #0x1
   1fcc0:	add	sp, sp, #0x70
   1fcc4:	ret

000000000001fcc8 <get_python_format_unnamed_arg_count@@Base>:
   1fcc8:	stp	x29, x30, [sp, #-32]!
   1fccc:	mov	x29, sp
   1fcd0:	add	x3, x29, #0x18
   1fcd4:	mov	w1, wzr
   1fcd8:	mov	x2, xzr
   1fcdc:	str	x19, [sp, #16]
   1fce0:	str	xzr, [x29, #24]
   1fce4:	bl	1f238 <get_sysdep_c_format_directives@@Base+0x1564>
   1fce8:	cbz	x0, 1fcf8 <get_python_format_unnamed_arg_count@@Base+0x30>
   1fcec:	ldr	w19, [x0, #8]
   1fcf0:	bl	1f914 <get_sysdep_c_format_directives@@Base+0x1c40>
   1fcf4:	b	1fd04 <get_python_format_unnamed_arg_count@@Base+0x3c>
   1fcf8:	ldr	x0, [x29, #24]
   1fcfc:	bl	aa00 <free@plt>
   1fd00:	mov	w19, wzr
   1fd04:	mov	w0, w19
   1fd08:	ldr	x19, [sp, #16]
   1fd0c:	ldp	x29, x30, [sp], #32
   1fd10:	ret
   1fd14:	ldr	x0, [x0]
   1fd18:	ldr	x1, [x1]
   1fd1c:	b	a8d0 <strcmp@plt>
   1fd20:	sub	sp, sp, #0x60
   1fd24:	stp	x29, x30, [sp, #32]
   1fd28:	stp	x22, x21, [sp, #64]
   1fd2c:	stp	x20, x19, [sp, #80]
   1fd30:	add	x29, sp, #0x20
   1fd34:	mov	x19, x3
   1fd38:	mov	x20, x2
   1fd3c:	and	w21, w1, #0x1
   1fd40:	stp	x24, x23, [sp, #48]
   1fd44:	str	xzr, [sp]
   1fd48:	str	wzr, [sp, #8]
   1fd4c:	str	xzr, [sp, #16]
   1fd50:	stur	x0, [x29, #-8]
   1fd54:	ldrb	w8, [x0]
   1fd58:	cmp	w8, #0x7b
   1fd5c:	b.eq	1fd70 <get_python_format_unnamed_arg_count@@Base+0xa8>  // b.none
   1fd60:	cbz	w8, 1fd98 <get_python_format_unnamed_arg_count@@Base+0xd0>
   1fd64:	add	x0, x0, #0x1
   1fd68:	stur	x0, [x29, #-8]
   1fd6c:	b	1fd54 <get_python_format_unnamed_arg_count@@Base+0x8c>
   1fd70:	mov	x0, sp
   1fd74:	sub	x1, x29, #0x8
   1fd78:	mov	w2, #0x1                   	// #1
   1fd7c:	mov	w3, w21
   1fd80:	mov	x4, x20
   1fd84:	mov	x5, x19
   1fd88:	bl	20030 <get_python_format_unnamed_arg_count@@Base+0x368>
   1fd8c:	tbz	w0, #0, 1fe3c <get_python_format_unnamed_arg_count@@Base+0x174>
   1fd90:	ldur	x0, [x29, #-8]
   1fd94:	b	1fd54 <get_python_format_unnamed_arg_count@@Base+0x8c>
   1fd98:	ldr	w19, [sp, #4]
   1fd9c:	cmp	w19, #0x2
   1fda0:	b.cc	1fe20 <get_python_format_unnamed_arg_count@@Base+0x158>  // b.lo, b.ul, b.last
   1fda4:	ldr	x20, [sp, #16]
   1fda8:	adrp	x3, 20000 <get_python_format_unnamed_arg_count@@Base+0x338>
   1fdac:	add	x3, x3, #0x24
   1fdb0:	mov	w2, #0x8                   	// #8
   1fdb4:	mov	x0, x20
   1fdb8:	mov	x1, x19
   1fdbc:	bl	a2f0 <qsort@plt>
   1fdc0:	mov	x23, xzr
   1fdc4:	mov	w22, wzr
   1fdc8:	mov	x24, x20
   1fdcc:	cbz	w22, 1fde8 <get_python_format_unnamed_arg_count@@Base+0x120>
   1fdd0:	ldr	x21, [x24]
   1fdd4:	sub	w8, w22, #0x1
   1fdd8:	ldr	x1, [x20, w8, uxtw #3]
   1fddc:	mov	x0, x21
   1fde0:	bl	a8d0 <strcmp@plt>
   1fde4:	cbz	w0, 1fe04 <get_python_format_unnamed_arg_count@@Base+0x13c>
   1fde8:	cmp	x23, w22, uxtw
   1fdec:	b.ls	1fdfc <get_python_format_unnamed_arg_count@@Base+0x134>  // b.plast
   1fdf0:	ldr	x8, [x24]
   1fdf4:	mov	w9, w22
   1fdf8:	str	x8, [x20, x9, lsl #3]
   1fdfc:	add	w22, w22, #0x1
   1fe00:	b	1fe0c <get_python_format_unnamed_arg_count@@Base+0x144>
   1fe04:	mov	x0, x21
   1fe08:	bl	aa00 <free@plt>
   1fe0c:	add	x23, x23, #0x1
   1fe10:	cmp	x19, x23
   1fe14:	add	x24, x24, #0x8
   1fe18:	b.ne	1fdcc <get_python_format_unnamed_arg_count@@Base+0x104>  // b.any
   1fe1c:	str	w22, [sp, #4]
   1fe20:	mov	w0, #0x18                  	// #24
   1fe24:	bl	a590 <xmalloc@plt>
   1fe28:	ldr	q0, [sp]
   1fe2c:	ldr	x8, [sp, #16]
   1fe30:	str	q0, [x0]
   1fe34:	str	x8, [x0, #16]
   1fe38:	b	1fe48 <get_python_format_unnamed_arg_count@@Base+0x180>
   1fe3c:	mov	x0, sp
   1fe40:	bl	1ffcc <get_python_format_unnamed_arg_count@@Base+0x304>
   1fe44:	mov	x0, xzr
   1fe48:	ldp	x20, x19, [sp, #80]
   1fe4c:	ldp	x22, x21, [sp, #64]
   1fe50:	ldp	x24, x23, [sp, #48]
   1fe54:	ldp	x29, x30, [sp, #32]
   1fe58:	add	sp, sp, #0x60
   1fe5c:	ret
   1fe60:	stp	x29, x30, [sp, #-32]!
   1fe64:	str	x19, [sp, #16]
   1fe68:	mov	x29, sp
   1fe6c:	mov	x19, x0
   1fe70:	bl	1ffcc <get_python_format_unnamed_arg_count@@Base+0x304>
   1fe74:	mov	x0, x19
   1fe78:	ldr	x19, [sp, #16]
   1fe7c:	ldp	x29, x30, [sp], #32
   1fe80:	b	aa00 <free@plt>
   1fe84:	ldr	w0, [x0]
   1fe88:	ret
   1fe8c:	stp	x29, x30, [sp, #-96]!
   1fe90:	stp	x28, x27, [sp, #16]
   1fe94:	stp	x26, x25, [sp, #32]
   1fe98:	stp	x24, x23, [sp, #48]
   1fe9c:	stp	x22, x21, [sp, #64]
   1fea0:	stp	x20, x19, [sp, #80]
   1fea4:	ldr	w26, [x0, #4]
   1fea8:	ldr	w27, [x1, #4]
   1feac:	mov	x23, x0
   1feb0:	mov	w0, wzr
   1feb4:	mov	x29, sp
   1feb8:	cmn	w26, w27
   1febc:	b.eq	1ffb0 <get_python_format_unnamed_arg_count@@Base+0x2e8>  // b.none
   1fec0:	orr	w8, w27, w26
   1fec4:	cbz	w8, 1ffb0 <get_python_format_unnamed_arg_count@@Base+0x2e8>
   1fec8:	cmp	w27, #0x0
   1fecc:	cset	w8, ne  // ne = any
   1fed0:	cmp	w26, #0x0
   1fed4:	mov	x20, x5
   1fed8:	mov	x21, x4
   1fedc:	mov	x19, x3
   1fee0:	mov	w24, w2
   1fee4:	mov	x22, x1
   1fee8:	mov	w25, wzr
   1feec:	mov	w28, wzr
   1fef0:	cset	w9, ne  // ne = any
   1fef4:	tbz	w9, #0, 1ff18 <get_python_format_unnamed_arg_count@@Base+0x250>
   1fef8:	tbz	w8, #0, 1ff28 <get_python_format_unnamed_arg_count@@Base+0x260>
   1fefc:	ldr	x8, [x23, #16]
   1ff00:	ldr	x9, [x22, #16]
   1ff04:	ldr	x0, [x8, w25, uxtw #3]
   1ff08:	ldr	x1, [x9, w28, uxtw #3]
   1ff0c:	bl	a8d0 <strcmp@plt>
   1ff10:	cmp	w0, #0x1
   1ff14:	b.lt	1ff24 <get_python_format_unnamed_arg_count@@Base+0x25c>  // b.tstop
   1ff18:	tbnz	w24, #0, 1ff60 <get_python_format_unnamed_arg_count@@Base+0x298>
   1ff1c:	add	w28, w28, #0x1
   1ff20:	b	1ff30 <get_python_format_unnamed_arg_count@@Base+0x268>
   1ff24:	tbz	w0, #31, 1ff50 <get_python_format_unnamed_arg_count@@Base+0x288>
   1ff28:	tbnz	w24, #0, 1ff84 <get_python_format_unnamed_arg_count@@Base+0x2bc>
   1ff2c:	add	w25, w25, #0x1
   1ff30:	cmp	w25, w26
   1ff34:	cset	w9, cc  // cc = lo, ul, last
   1ff38:	cmp	w28, w27
   1ff3c:	cset	w8, cc  // cc = lo, ul, last
   1ff40:	b.cc	1fef4 <get_python_format_unnamed_arg_count@@Base+0x22c>  // b.lo, b.ul, b.last
   1ff44:	cmp	w25, w26
   1ff48:	b.cc	1fef4 <get_python_format_unnamed_arg_count@@Base+0x22c>  // b.lo, b.ul, b.last
   1ff4c:	b	1ff58 <get_python_format_unnamed_arg_count@@Base+0x290>
   1ff50:	add	w28, w28, #0x1
   1ff54:	b	1ff2c <get_python_format_unnamed_arg_count@@Base+0x264>
   1ff58:	mov	w0, wzr
   1ff5c:	b	1ffb0 <get_python_format_unnamed_arg_count@@Base+0x2e8>
   1ff60:	cbz	x19, 1ffac <get_python_format_unnamed_arg_count@@Base+0x2e4>
   1ff64:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1ff68:	add	x1, x1, #0xae1
   1ff6c:	mov	w2, #0x5                   	// #5
   1ff70:	mov	x0, xzr
   1ff74:	bl	acd0 <dcgettext@plt>
   1ff78:	ldr	x8, [x22, #16]
   1ff7c:	mov	x2, x21
   1ff80:	b	1ffa4 <get_python_format_unnamed_arg_count@@Base+0x2dc>
   1ff84:	cbz	x19, 1ffac <get_python_format_unnamed_arg_count@@Base+0x2e4>
   1ff88:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   1ff8c:	add	x1, x1, #0xae1
   1ff90:	mov	w2, #0x5                   	// #5
   1ff94:	mov	x0, xzr
   1ff98:	bl	acd0 <dcgettext@plt>
   1ff9c:	ldr	x8, [x23, #16]
   1ffa0:	mov	x2, x20
   1ffa4:	ldr	x1, [x8, w25, uxtw #3]
   1ffa8:	blr	x19
   1ffac:	mov	w0, #0x1                   	// #1
   1ffb0:	ldp	x20, x19, [sp, #80]
   1ffb4:	ldp	x22, x21, [sp, #64]
   1ffb8:	ldp	x24, x23, [sp, #48]
   1ffbc:	ldp	x26, x25, [sp, #32]
   1ffc0:	ldp	x28, x27, [sp, #16]
   1ffc4:	ldp	x29, x30, [sp], #96
   1ffc8:	ret
   1ffcc:	stp	x29, x30, [sp, #-32]!
   1ffd0:	stp	x20, x19, [sp, #16]
   1ffd4:	mov	x19, x0
   1ffd8:	ldr	x0, [x0, #16]
   1ffdc:	mov	x29, sp
   1ffe0:	cbz	x0, 20018 <get_python_format_unnamed_arg_count@@Base+0x350>
   1ffe4:	ldr	w8, [x19, #4]
   1ffe8:	cbz	w8, 2000c <get_python_format_unnamed_arg_count@@Base+0x344>
   1ffec:	mov	x20, xzr
   1fff0:	ldr	x0, [x0, x20, lsl #3]
   1fff4:	bl	aa00 <free@plt>
   1fff8:	ldr	w8, [x19, #4]
   1fffc:	ldr	x0, [x19, #16]
   20000:	add	x20, x20, #0x1
   20004:	cmp	x20, x8
   20008:	b.cc	1fff0 <get_python_format_unnamed_arg_count@@Base+0x328>  // b.lo, b.ul, b.last
   2000c:	ldp	x20, x19, [sp, #16]
   20010:	ldp	x29, x30, [sp], #32
   20014:	b	aa00 <free@plt>
   20018:	ldp	x20, x19, [sp, #16]
   2001c:	ldp	x29, x30, [sp], #32
   20020:	ret
   20024:	ldr	x0, [x0]
   20028:	ldr	x1, [x1]
   2002c:	b	a8d0 <strcmp@plt>
   20030:	sub	sp, sp, #0x70
   20034:	stp	x29, x30, [sp, #16]
   20038:	stp	x28, x27, [sp, #32]
   2003c:	stp	x26, x25, [sp, #48]
   20040:	stp	x24, x23, [sp, #64]
   20044:	stp	x22, x21, [sp, #80]
   20048:	stp	x20, x19, [sp, #96]
   2004c:	ldr	x26, [x1]
   20050:	mov	x22, x1
   20054:	add	x29, sp, #0x10
   20058:	add	x23, x26, #0x1
   2005c:	str	x23, [sp, #8]
   20060:	ldrb	w8, [x26, #1]
   20064:	cmp	w8, #0x7b
   20068:	b.ne	20080 <get_python_format_unnamed_arg_count@@Base+0x3b8>  // b.any
   2006c:	add	x8, x26, #0x2
   20070:	mov	w0, #0x1                   	// #1
   20074:	str	x8, [sp, #8]
   20078:	str	x8, [x22]
   2007c:	b	20320 <get_python_format_unnamed_arg_count@@Base+0x658>
   20080:	mov	x21, x0
   20084:	add	x0, sp, #0x8
   20088:	mov	x20, x5
   2008c:	mov	x19, x4
   20090:	mov	w25, w3
   20094:	mov	w24, w2
   20098:	bl	20500 <get_python_format_unnamed_arg_count@@Base+0x838>
   2009c:	tbnz	w0, #0, 200c8 <get_python_format_unnamed_arg_count@@Base+0x400>
   200a0:	ldr	x27, [sp, #8]
   200a4:	ldrb	w8, [x27]
   200a8:	sub	w8, w8, #0x30
   200ac:	cmp	w8, #0x9
   200b0:	b.hi	201dc <get_python_format_unnamed_arg_count@@Base+0x514>  // b.pmore
   200b4:	ldrb	w8, [x27, #1]!
   200b8:	sub	w8, w8, #0x30
   200bc:	cmp	w8, #0xa
   200c0:	b.cc	200b4 <get_python_format_unnamed_arg_count@@Base+0x3ec>  // b.lo, b.ul, b.last
   200c4:	str	x27, [sp, #8]
   200c8:	ldr	x28, [sp, #8]
   200cc:	ldrb	w8, [x28]
   200d0:	cmp	w8, #0x2e
   200d4:	b.eq	20134 <get_python_format_unnamed_arg_count@@Base+0x46c>  // b.none
   200d8:	cmp	w8, #0x5b
   200dc:	b.ne	20180 <get_python_format_unnamed_arg_count@@Base+0x4b8>  // b.any
   200e0:	add	x8, x28, #0x1
   200e4:	add	x0, sp, #0x8
   200e8:	str	x8, [sp, #8]
   200ec:	bl	20500 <get_python_format_unnamed_arg_count@@Base+0x838>
   200f0:	ldr	x27, [sp, #8]
   200f4:	tbnz	w0, #0, 2011c <get_python_format_unnamed_arg_count@@Base+0x454>
   200f8:	ldrb	w8, [x27]
   200fc:	sub	w8, w8, #0x30
   20100:	cmp	w8, #0x9
   20104:	b.hi	202dc <get_python_format_unnamed_arg_count@@Base+0x614>  // b.pmore
   20108:	ldrb	w8, [x27, #1]!
   2010c:	sub	w8, w8, #0x30
   20110:	cmp	w8, #0xa
   20114:	b.cc	20108 <get_python_format_unnamed_arg_count@@Base+0x440>  // b.lo, b.ul, b.last
   20118:	str	x27, [sp, #8]
   2011c:	add	x8, x27, #0x1
   20120:	str	x8, [sp, #8]
   20124:	ldrb	w8, [x27]
   20128:	cmp	w8, #0x5d
   2012c:	b.eq	200c8 <get_python_format_unnamed_arg_count@@Base+0x400>  // b.none
   20130:	b	20264 <get_python_format_unnamed_arg_count@@Base+0x59c>
   20134:	add	x8, x28, #0x1
   20138:	add	x0, sp, #0x8
   2013c:	str	x8, [sp, #8]
   20140:	bl	20500 <get_python_format_unnamed_arg_count@@Base+0x838>
   20144:	tbnz	w0, #0, 200c8 <get_python_format_unnamed_arg_count@@Base+0x400>
   20148:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2014c:	add	x1, x1, #0xd08
   20150:	mov	w2, #0x5                   	// #5
   20154:	mov	x0, xzr
   20158:	bl	acd0 <dcgettext@plt>
   2015c:	ldr	x22, [sp, #8]
   20160:	ldr	w1, [x21]
   20164:	ldrb	w2, [x22]
   20168:	bl	aa20 <xasprintf@plt>
   2016c:	str	x0, [x20]
   20170:	cbz	x19, 2031c <get_python_format_unnamed_arg_count@@Base+0x654>
   20174:	mov	w0, wzr
   20178:	sub	x8, x22, x26
   2017c:	b	2030c <get_python_format_unnamed_arg_count@@Base+0x644>
   20180:	cmp	w8, #0x3a
   20184:	b.ne	201e8 <get_python_format_unnamed_arg_count@@Base+0x520>  // b.any
   20188:	tbz	w24, #0, 202a0 <get_python_format_unnamed_arg_count@@Base+0x5d8>
   2018c:	add	x27, x28, #0x1
   20190:	str	x27, [sp, #8]
   20194:	ldrb	w9, [x28, #1]
   20198:	cmp	w9, #0x7b
   2019c:	b.ne	20340 <get_python_format_unnamed_arg_count@@Base+0x678>  // b.any
   201a0:	and	w3, w25, #0x1
   201a4:	add	x1, sp, #0x8
   201a8:	mov	x0, x21
   201ac:	mov	w2, wzr
   201b0:	mov	x4, x19
   201b4:	mov	x5, x20
   201b8:	bl	20030 <get_python_format_unnamed_arg_count@@Base+0x368>
   201bc:	mov	w8, w0
   201c0:	mov	w0, wzr
   201c4:	tbz	w8, #0, 20320 <get_python_format_unnamed_arg_count@@Base+0x658>
   201c8:	ldr	x27, [sp, #8]
   201cc:	ldrb	w8, [x27]
   201d0:	cmp	w8, #0x7d
   201d4:	b.eq	201f8 <get_python_format_unnamed_arg_count@@Base+0x530>  // b.none
   201d8:	b	2049c <get_python_format_unnamed_arg_count@@Base+0x7d4>
   201dc:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   201e0:	add	x1, x1, #0xccc
   201e4:	b	202e4 <get_python_format_unnamed_arg_count@@Base+0x61c>
   201e8:	cmp	w8, #0x7d
   201ec:	mov	x27, x28
   201f0:	b.ne	202ac <get_python_format_unnamed_arg_count@@Base+0x5e4>  // b.any
   201f4:	tbz	w24, #0, 204bc <get_python_format_unnamed_arg_count@@Base+0x7f4>
   201f8:	sub	x24, x27, x23
   201fc:	cbz	x19, 2020c <get_python_format_unnamed_arg_count@@Base+0x544>
   20200:	ldrb	w8, [x19]
   20204:	orr	w8, w8, #0x1
   20208:	strb	w8, [x19]
   2020c:	add	x0, x24, #0x1
   20210:	bl	a590 <xmalloc@plt>
   20214:	mov	x1, x23
   20218:	mov	x2, x24
   2021c:	mov	x20, x0
   20220:	bl	a040 <memcpy@plt>
   20224:	strb	wzr, [x20, x24]
   20228:	ldp	w8, w9, [x21, #4]
   2022c:	ldr	w10, [x21]
   20230:	cmp	w9, w8
   20234:	add	w10, w10, #0x1
   20238:	str	w10, [x21]
   2023c:	b.ne	20470 <get_python_format_unnamed_arg_count@@Base+0x7a8>  // b.any
   20240:	ldr	x0, [x21, #16]
   20244:	mov	w8, #0x1                   	// #1
   20248:	bfi	w8, w9, #1, #31
   2024c:	lsl	x1, x8, #3
   20250:	str	w8, [x21, #8]
   20254:	bl	a460 <xrealloc@plt>
   20258:	ldr	w8, [x21, #4]
   2025c:	str	x0, [x21, #16]
   20260:	b	20474 <get_python_format_unnamed_arg_count@@Base+0x7ac>
   20264:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   20268:	add	x1, x1, #0x7e0
   2026c:	mov	w2, #0x5                   	// #5
   20270:	mov	x0, xzr
   20274:	bl	acd0 <dcgettext@plt>
   20278:	bl	a5a0 <xstrdup@plt>
   2027c:	str	x0, [x20]
   20280:	cbz	x19, 2031c <get_python_format_unnamed_arg_count@@Base+0x654>
   20284:	sub	x8, x27, x26
   20288:	add	x8, x8, x19
   2028c:	ldrb	w9, [x8, #1]
   20290:	mov	w0, wzr
   20294:	orr	w9, w9, #0x4
   20298:	strb	w9, [x8, #1]
   2029c:	b	20320 <get_python_format_unnamed_arg_count@@Base+0x658>
   202a0:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   202a4:	add	x1, x1, #0xd8c
   202a8:	b	202b4 <get_python_format_unnamed_arg_count@@Base+0x5ec>
   202ac:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   202b0:	add	x1, x1, #0xdda
   202b4:	mov	w2, #0x5                   	// #5
   202b8:	mov	x0, xzr
   202bc:	bl	acd0 <dcgettext@plt>
   202c0:	ldr	w1, [x21]
   202c4:	bl	aa20 <xasprintf@plt>
   202c8:	str	x0, [x20]
   202cc:	cbz	x19, 2031c <get_python_format_unnamed_arg_count@@Base+0x654>
   202d0:	mov	w0, wzr
   202d4:	sub	x8, x28, x26
   202d8:	b	2030c <get_python_format_unnamed_arg_count@@Base+0x644>
   202dc:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   202e0:	add	x1, x1, #0xd4a
   202e4:	mov	w2, #0x5                   	// #5
   202e8:	mov	x0, xzr
   202ec:	bl	acd0 <dcgettext@plt>
   202f0:	ldr	w1, [x21]
   202f4:	ldrb	w2, [x27]
   202f8:	bl	aa20 <xasprintf@plt>
   202fc:	str	x0, [x20]
   20300:	cbz	x19, 2031c <get_python_format_unnamed_arg_count@@Base+0x654>
   20304:	mov	w0, wzr
   20308:	sub	x8, x27, x26
   2030c:	ldrb	w9, [x19, x8]
   20310:	orr	w9, w9, #0x4
   20314:	strb	w9, [x19, x8]
   20318:	b	20320 <get_python_format_unnamed_arg_count@@Base+0x658>
   2031c:	mov	w0, wzr
   20320:	ldp	x20, x19, [sp, #96]
   20324:	ldp	x22, x21, [sp, #80]
   20328:	ldp	x24, x23, [sp, #64]
   2032c:	ldp	x26, x25, [sp, #48]
   20330:	ldp	x28, x27, [sp, #32]
   20334:	ldp	x29, x30, [sp, #16]
   20338:	add	sp, sp, #0x70
   2033c:	ret
   20340:	mov	x8, x28
   20344:	ldrb	w10, [x8, #2]!
   20348:	sub	w10, w10, #0x3c
   2034c:	cmp	w10, #0x22
   20350:	b.hi	204c4 <get_python_format_unnamed_arg_count@@Base+0x7fc>  // b.pmore
   20354:	mov	w11, #0x1                   	// #1
   20358:	lsl	x10, x11, x10
   2035c:	mov	x11, #0x7                   	// #7
   20360:	movk	x11, #0x4, lsl #32
   20364:	tst	x10, x11
   20368:	b.eq	204c4 <get_python_format_unnamed_arg_count@@Base+0x7fc>  // b.none
   2036c:	add	x27, x28, #0x3
   20370:	str	x27, [sp, #8]
   20374:	ldrb	w8, [x27]
   20378:	cmp	w8, #0x2d
   2037c:	b.hi	203a4 <get_python_format_unnamed_arg_count@@Base+0x6dc>  // b.pmore
   20380:	mov	w9, #0x1                   	// #1
   20384:	lsl	x9, x9, x8
   20388:	mov	x10, #0x280100000000        	// #43984760078336
   2038c:	tst	x9, x10
   20390:	b.eq	203a4 <get_python_format_unnamed_arg_count@@Base+0x6dc>  // b.none
   20394:	add	x9, x27, #0x1
   20398:	str	x9, [sp, #8]
   2039c:	ldrb	w8, [x27, #1]
   203a0:	mov	x27, x9
   203a4:	cmp	w8, #0x23
   203a8:	b.ne	203bc <get_python_format_unnamed_arg_count@@Base+0x6f4>  // b.any
   203ac:	add	x9, x27, #0x1
   203b0:	str	x9, [sp, #8]
   203b4:	ldrb	w8, [x27, #1]
   203b8:	mov	x27, x9
   203bc:	cmp	w8, #0x30
   203c0:	b.ne	203d4 <get_python_format_unnamed_arg_count@@Base+0x70c>  // b.any
   203c4:	add	x9, x27, #0x1
   203c8:	str	x9, [sp, #8]
   203cc:	ldrb	w8, [x27, #1]
   203d0:	mov	x27, x9
   203d4:	sub	w9, w8, #0x30
   203d8:	cmp	w9, #0x9
   203dc:	b.hi	203fc <get_python_format_unnamed_arg_count@@Base+0x734>  // b.pmore
   203e0:	add	x9, x27, #0x1
   203e4:	str	x9, [sp, #8]
   203e8:	ldrb	w8, [x9], #1
   203ec:	sub	w10, w8, #0x30
   203f0:	cmp	w10, #0xa
   203f4:	b.cc	203e4 <get_python_format_unnamed_arg_count@@Base+0x71c>  // b.lo, b.ul, b.last
   203f8:	sub	x27, x9, #0x1
   203fc:	cmp	w8, #0x2e
   20400:	b.ne	20420 <get_python_format_unnamed_arg_count@@Base+0x758>  // b.any
   20404:	add	x9, x27, #0x1
   20408:	str	x9, [sp, #8]
   2040c:	ldrb	w8, [x9], #1
   20410:	sub	w10, w8, #0x30
   20414:	cmp	w10, #0xa
   20418:	b.cc	20408 <get_python_format_unnamed_arg_count@@Base+0x740>  // b.lo, b.ul, b.last
   2041c:	sub	x27, x9, #0x1
   20420:	sub	w9, w8, #0x45
   20424:	cmp	w9, #0x33
   20428:	b.hi	204f4 <get_python_format_unnamed_arg_count@@Base+0x82c>  // b.pmore
   2042c:	mov	w10, #0x1                   	// #1
   20430:	lsl	x9, x10, x9
   20434:	mov	x10, #0x7                   	// #7
   20438:	movk	x10, #0xe008, lsl #16
   2043c:	movk	x10, #0x607, lsl #32
   20440:	movk	x10, #0x8, lsl #48
   20444:	tst	x9, x10
   20448:	b.eq	204f4 <get_python_format_unnamed_arg_count@@Base+0x82c>  // b.none
   2044c:	add	x9, x27, #0x1
   20450:	str	x9, [sp, #8]
   20454:	ldrb	w8, [x27, #1]
   20458:	mov	x27, x9
   2045c:	cmp	w8, #0x7d
   20460:	b.ne	2049c <get_python_format_unnamed_arg_count@@Base+0x7d4>  // b.any
   20464:	mov	x28, x27
   20468:	tbnz	w24, #0, 201f8 <get_python_format_unnamed_arg_count@@Base+0x530>
   2046c:	b	204bc <get_python_format_unnamed_arg_count@@Base+0x7f4>
   20470:	ldr	x0, [x21, #16]
   20474:	str	x20, [x0, w8, uxtw #3]
   20478:	add	w8, w8, #0x1
   2047c:	str	w8, [x21, #4]
   20480:	cbz	x19, 204b8 <get_python_format_unnamed_arg_count@@Base+0x7f0>
   20484:	ldr	x28, [sp, #8]
   20488:	sub	x8, x28, x26
   2048c:	ldrb	w9, [x19, x8]
   20490:	orr	w9, w9, #0x2
   20494:	strb	w9, [x19, x8]
   20498:	b	204bc <get_python_format_unnamed_arg_count@@Base+0x7f4>
   2049c:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   204a0:	add	x1, x1, #0x7e0
   204a4:	mov	w2, #0x5                   	// #5
   204a8:	mov	x0, xzr
   204ac:	bl	acd0 <dcgettext@plt>
   204b0:	bl	a5a0 <xstrdup@plt>
   204b4:	b	202fc <get_python_format_unnamed_arg_count@@Base+0x634>
   204b8:	ldr	x28, [sp, #8]
   204bc:	add	x8, x28, #0x1
   204c0:	b	20070 <get_python_format_unnamed_arg_count@@Base+0x3a8>
   204c4:	sub	w9, w9, #0x3c
   204c8:	cmp	w9, #0x22
   204cc:	b.hi	20374 <get_python_format_unnamed_arg_count@@Base+0x6ac>  // b.pmore
   204d0:	mov	w10, #0x1                   	// #1
   204d4:	lsl	x9, x10, x9
   204d8:	mov	x10, #0x7                   	// #7
   204dc:	movk	x10, #0x4, lsl #32
   204e0:	tst	x9, x10
   204e4:	b.eq	20374 <get_python_format_unnamed_arg_count@@Base+0x6ac>  // b.none
   204e8:	mov	x27, x8
   204ec:	str	x8, [sp, #8]
   204f0:	b	20374 <get_python_format_unnamed_arg_count@@Base+0x6ac>
   204f4:	cmp	w8, #0x25
   204f8:	b.eq	2044c <get_python_format_unnamed_arg_count@@Base+0x784>  // b.none
   204fc:	b	2045c <get_python_format_unnamed_arg_count@@Base+0x794>
   20500:	ldr	x8, [x0]
   20504:	ldrb	w9, [x8]
   20508:	sub	w10, w9, #0x41
   2050c:	cmp	w10, #0x1a
   20510:	b.cc	20534 <get_python_format_unnamed_arg_count@@Base+0x86c>  // b.lo, b.ul, b.last
   20514:	cmp	w9, #0x5f
   20518:	b.eq	20534 <get_python_format_unnamed_arg_count@@Base+0x86c>  // b.none
   2051c:	sub	w9, w9, #0x61
   20520:	and	w9, w9, #0xff
   20524:	cmp	w9, #0x19
   20528:	b.ls	20534 <get_python_format_unnamed_arg_count@@Base+0x86c>  // b.plast
   2052c:	mov	w0, wzr
   20530:	ret
   20534:	ldrb	w9, [x8, #1]!
   20538:	sub	w10, w9, #0x41
   2053c:	cmp	w10, #0x19
   20540:	b.ls	20534 <get_python_format_unnamed_arg_count@@Base+0x86c>  // b.plast
   20544:	sub	w10, w9, #0x30
   20548:	cmp	w10, #0xa
   2054c:	b.cc	20534 <get_python_format_unnamed_arg_count@@Base+0x86c>  // b.lo, b.ul, b.last
   20550:	cmp	w9, #0x5f
   20554:	sub	w9, w9, #0x61
   20558:	b.eq	20534 <get_python_format_unnamed_arg_count@@Base+0x86c>  // b.none
   2055c:	and	w9, w9, #0xff
   20560:	cmp	w9, #0x1a
   20564:	b.cc	20534 <get_python_format_unnamed_arg_count@@Base+0x86c>  // b.lo, b.ul, b.last
   20568:	str	x8, [x0]
   2056c:	mov	w0, #0x1                   	// #1
   20570:	ret
   20574:	sub	sp, sp, #0x60
   20578:	stp	x29, x30, [sp, #64]
   2057c:	add	x29, sp, #0x40
   20580:	stp	x20, x19, [sp, #80]
   20584:	mov	x19, x3
   20588:	mov	x20, x2
   2058c:	stur	x0, [x29, #-8]
   20590:	stur	xzr, [x29, #-28]
   20594:	bl	223d0 <get_python_format_unnamed_arg_count@@Base+0x2708>
   20598:	sub	x8, x29, #0x18
   2059c:	stur	x0, [x29, #-16]
   205a0:	add	x2, x8, #0x8
   205a4:	sub	x0, x29, #0x8
   205a8:	sub	x1, x29, #0x1c
   205ac:	add	x3, sp, #0x18
   205b0:	sub	x5, x29, #0x18
   205b4:	mov	x4, xzr
   205b8:	mov	w6, wzr
   205bc:	mov	w7, wzr
   205c0:	str	xzr, [sp, #24]
   205c4:	stp	x20, x19, [sp]
   205c8:	bl	20734 <get_python_format_unnamed_arg_count@@Base+0xa6c>
   205cc:	mov	w8, w0
   205d0:	mov	x0, xzr
   205d4:	tbz	w8, #0, 20638 <get_python_format_unnamed_arg_count@@Base+0x970>
   205d8:	ldur	x8, [x29, #-16]
   205dc:	ldr	x1, [sp, #24]
   205e0:	cmp	x8, #0x0
   205e4:	csel	x0, x1, x8, eq  // eq = none
   205e8:	cbz	x8, 205f8 <get_python_format_unnamed_arg_count@@Base+0x930>
   205ec:	cbz	x1, 205f8 <get_python_format_unnamed_arg_count@@Base+0x930>
   205f0:	mov	x0, x8
   205f4:	bl	24688 <get_python_format_unnamed_arg_count@@Base+0x49c0>
   205f8:	stur	x0, [x29, #-16]
   205fc:	cbz	x0, 20618 <get_python_format_unnamed_arg_count@@Base+0x950>
   20600:	bl	22324 <get_python_format_unnamed_arg_count@@Base+0x265c>
   20604:	mov	w0, #0x10                  	// #16
   20608:	bl	a590 <xmalloc@plt>
   2060c:	ldur	q0, [x29, #-24]
   20610:	str	q0, [x0]
   20614:	b	20638 <get_python_format_unnamed_arg_count@@Base+0x970>
   20618:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2061c:	add	x1, x1, #0xf98
   20620:	mov	w2, #0x5                   	// #5
   20624:	bl	acd0 <dcgettext@plt>
   20628:	bl	a5a0 <xstrdup@plt>
   2062c:	mov	x8, x0
   20630:	mov	x0, xzr
   20634:	str	x8, [x19]
   20638:	ldp	x20, x19, [sp, #80]
   2063c:	ldp	x29, x30, [sp, #64]
   20640:	add	sp, sp, #0x60
   20644:	ret
   20648:	ldr	x0, [x0, #8]
   2064c:	b	22924 <get_python_format_unnamed_arg_count@@Base+0x2c5c>
   20650:	ldr	w0, [x0]
   20654:	ret
   20658:	stp	x29, x30, [sp, #-64]!
   2065c:	stp	x22, x21, [sp, #32]
   20660:	stp	x20, x19, [sp, #48]
   20664:	ldr	x0, [x0, #8]
   20668:	mov	x20, x5
   2066c:	mov	x21, x4
   20670:	mov	x19, x3
   20674:	mov	x22, x1
   20678:	str	x23, [sp, #16]
   2067c:	mov	x29, sp
   20680:	tbz	w2, #0, 206b4 <get_python_format_unnamed_arg_count@@Base+0x9ec>
   20684:	ldr	x1, [x22, #8]
   20688:	bl	24378 <get_python_format_unnamed_arg_count@@Base+0x46b0>
   2068c:	tbnz	w0, #0, 206f0 <get_python_format_unnamed_arg_count@@Base+0xa28>
   20690:	cbz	x19, 2071c <get_python_format_unnamed_arg_count@@Base+0xa54>
   20694:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   20698:	add	x1, x1, #0x29c
   2069c:	mov	w2, #0x5                   	// #5
   206a0:	mov	x0, xzr
   206a4:	bl	acd0 <dcgettext@plt>
   206a8:	mov	x1, x21
   206ac:	mov	x2, x20
   206b0:	b	20718 <get_python_format_unnamed_arg_count@@Base+0xa50>
   206b4:	bl	229ec <get_python_format_unnamed_arg_count@@Base+0x2d24>
   206b8:	ldr	x8, [x22, #8]
   206bc:	mov	x23, x0
   206c0:	mov	x0, x8
   206c4:	bl	229ec <get_python_format_unnamed_arg_count@@Base+0x2d24>
   206c8:	mov	x1, x0
   206cc:	mov	x0, x23
   206d0:	bl	22c28 <get_python_format_unnamed_arg_count@@Base+0x2f60>
   206d4:	cbz	x0, 206f8 <get_python_format_unnamed_arg_count@@Base+0xa30>
   206d8:	mov	x23, x0
   206dc:	bl	22324 <get_python_format_unnamed_arg_count@@Base+0x265c>
   206e0:	ldr	x1, [x22, #8]
   206e4:	mov	x0, x23
   206e8:	bl	24378 <get_python_format_unnamed_arg_count@@Base+0x46b0>
   206ec:	tbz	w0, #0, 206f8 <get_python_format_unnamed_arg_count@@Base+0xa30>
   206f0:	mov	w0, wzr
   206f4:	b	20720 <get_python_format_unnamed_arg_count@@Base+0xa58>
   206f8:	cbz	x19, 2071c <get_python_format_unnamed_arg_count@@Base+0xa54>
   206fc:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   20700:	add	x1, x1, #0x2d6
   20704:	mov	w2, #0x5                   	// #5
   20708:	mov	x0, xzr
   2070c:	bl	acd0 <dcgettext@plt>
   20710:	mov	x1, x20
   20714:	mov	x2, x21
   20718:	blr	x19
   2071c:	mov	w0, #0x1                   	// #1
   20720:	ldp	x20, x19, [sp, #48]
   20724:	ldp	x22, x21, [sp, #32]
   20728:	ldr	x23, [sp, #16]
   2072c:	ldp	x29, x30, [sp], #64
   20730:	ret
   20734:	sub	sp, sp, #0x150
   20738:	stp	x29, x30, [sp, #240]
   2073c:	stp	x28, x27, [sp, #256]
   20740:	stp	x26, x25, [sp, #272]
   20744:	stp	x24, x23, [sp, #288]
   20748:	stp	x22, x21, [sp, #304]
   2074c:	stp	x20, x19, [sp, #320]
   20750:	add	x29, sp, #0xe0
   20754:	ldr	x9, [x2]
   20758:	ldr	x21, [x0]
   2075c:	ldr	x8, [x29, #120]
   20760:	ldr	w28, [x1]
   20764:	str	x9, [x29, #8]
   20768:	ldr	x10, [x3]
   2076c:	stur	x8, [x29, #-80]
   20770:	ldrb	w8, [x21]
   20774:	str	d8, [sp, #224]
   20778:	str	x2, [sp, #112]
   2077c:	stur	x0, [x29, #-104]
   20780:	str	x1, [sp, #104]
   20784:	cbz	w8, 21e18 <get_python_format_unnamed_arg_count@@Base+0x2150>
   20788:	ldr	x20, [x29, #112]
   2078c:	mov	x24, x5
   20790:	mov	w23, #0xa                   	// #10
   20794:	movi	v8.2s, #0x1
   20798:	stp	x10, x3, [sp, #88]
   2079c:	stp	w7, w6, [sp, #80]
   207a0:	str	x4, [sp, #72]
   207a4:	stp	x20, x21, [x29, #-96]
   207a8:	and	w8, w8, #0xff
   207ac:	cmp	w8, #0x7e
   207b0:	add	x19, x21, #0x1
   207b4:	b.ne	20918 <get_python_format_unnamed_arg_count@@Base+0xc50>  // b.any
   207b8:	cbz	x20, 207d0 <get_python_format_unnamed_arg_count@@Base+0xb08>
   207bc:	ldur	x8, [x29, #-88]
   207c0:	sub	x8, x21, x8
   207c4:	ldrb	w9, [x20, x8]
   207c8:	orr	w9, w9, #0x1
   207cc:	strb	w9, [x20, x8]
   207d0:	ldr	w8, [x24]
   207d4:	mov	w26, wzr
   207d8:	mov	x27, xzr
   207dc:	add	w8, w8, #0x1
   207e0:	str	w8, [x24]
   207e4:	ldrb	w8, [x19]
   207e8:	mov	w20, w26
   207ec:	sub	w9, w8, #0x30
   207f0:	cmp	w9, #0x9
   207f4:	b.hi	20850 <get_python_format_unnamed_arg_count@@Base+0xb88>  // b.pmore
   207f8:	mov	w25, wzr
   207fc:	mul	w9, w25, w23
   20800:	add	w9, w9, w8, uxtb
   20804:	ldrb	w8, [x19, #1]!
   20808:	sub	w25, w9, #0x30
   2080c:	sub	w10, w8, #0x30
   20810:	cmp	w10, #0xa
   20814:	b.cc	207fc <get_python_format_unnamed_arg_count@@Base+0xb34>  // b.lo, b.ul, b.last
   20818:	mov	w22, #0x2                   	// #2
   2081c:	mov	x21, x19
   20820:	add	w26, w20, #0x1
   20824:	lsl	x1, x26, #3
   20828:	mov	x0, x27
   2082c:	bl	a460 <xrealloc@plt>
   20830:	add	x8, x0, w20, uxtw #3
   20834:	stp	w22, w25, [x8]
   20838:	mov	x19, x21
   2083c:	ldrb	w8, [x19], #1
   20840:	mov	x27, x0
   20844:	cmp	w8, #0x2c
   20848:	b.eq	207e4 <get_python_format_unnamed_arg_count@@Base+0xb1c>  // b.none
   2084c:	b	20920 <get_python_format_unnamed_arg_count@@Base+0xc58>
   20850:	cmp	w8, #0x2c
   20854:	mov	w22, wzr
   20858:	b.gt	2087c <get_python_format_unnamed_arg_count@@Base+0xbb4>
   2085c:	cmp	w8, #0x23
   20860:	b.eq	208f0 <get_python_format_unnamed_arg_count@@Base+0xc28>  // b.none
   20864:	cmp	w8, #0x27
   20868:	b.eq	20900 <get_python_format_unnamed_arg_count@@Base+0xc38>  // b.none
   2086c:	cmp	w8, #0x2b
   20870:	b.eq	20894 <get_python_format_unnamed_arg_count@@Base+0xbcc>  // b.none
   20874:	mov	w25, w22
   20878:	b	2081c <get_python_format_unnamed_arg_count@@Base+0xb54>
   2087c:	cmp	w8, #0x76
   20880:	b.eq	208d8 <get_python_format_unnamed_arg_count@@Base+0xc10>  // b.none
   20884:	cmp	w8, #0x56
   20888:	b.eq	208d8 <get_python_format_unnamed_arg_count@@Base+0xc10>  // b.none
   2088c:	cmp	w8, #0x2d
   20890:	b.ne	20874 <get_python_format_unnamed_arg_count@@Base+0xbac>  // b.any
   20894:	mov	x21, x19
   20898:	ldrb	w9, [x21, #1]!
   2089c:	sub	w10, w9, #0x30
   208a0:	cmp	w10, #0x9
   208a4:	b.hi	21dac <get_python_format_unnamed_arg_count@@Base+0x20e4>  // b.pmore
   208a8:	mov	w10, wzr
   208ac:	mul	w10, w10, w23
   208b0:	add	w10, w10, w9, uxtb
   208b4:	ldrb	w9, [x21, #1]!
   208b8:	sub	w10, w10, #0x30
   208bc:	sub	w11, w9, #0x30
   208c0:	cmp	w11, #0xa
   208c4:	b.cc	208ac <get_python_format_unnamed_arg_count@@Base+0xbe4>  // b.lo, b.ul, b.last
   208c8:	cmp	w8, #0x2d
   208cc:	cneg	w25, w10, eq  // eq = none
   208d0:	mov	w22, #0x2                   	// #2
   208d4:	b	20820 <get_python_format_unnamed_arg_count@@Base+0xb58>
   208d8:	mvn	w8, w28
   208dc:	add	x21, x19, #0x1
   208e0:	mov	w25, w28
   208e4:	add	w28, w28, w8, lsr #31
   208e8:	mov	w22, #0x4                   	// #4
   208ec:	b	20820 <get_python_format_unnamed_arg_count@@Base+0xb58>
   208f0:	mov	w25, wzr
   208f4:	add	x21, x19, #0x1
   208f8:	mov	w22, #0x3                   	// #3
   208fc:	b	20820 <get_python_format_unnamed_arg_count@@Base+0xb58>
   20900:	ldrb	w8, [x19, #1]
   20904:	cbz	w8, 21df0 <get_python_format_unnamed_arg_count@@Base+0x2128>
   20908:	mov	w25, wzr
   2090c:	add	x21, x19, #0x2
   20910:	mov	w22, #0x1                   	// #1
   20914:	b	20820 <get_python_format_unnamed_arg_count@@Base+0xb58>
   20918:	mov	x21, x19
   2091c:	b	20c9c <get_python_format_unnamed_arg_count@@Base+0xfd4>
   20920:	mov	w25, wzr
   20924:	mov	w19, wzr
   20928:	add	x9, x21, #0x2
   2092c:	mov	w10, w19
   20930:	ldrb	w8, [x21], #1
   20934:	mov	w19, w10
   20938:	mov	x22, x9
   2093c:	add	x9, x9, #0x1
   20940:	cmp	w8, #0x3a
   20944:	mov	w10, #0x1                   	// #1
   20948:	b.eq	20930 <get_python_format_unnamed_arg_count@@Base+0xc68>  // b.none
   2094c:	sub	w9, w8, #0xa
   20950:	cmp	w9, #0x74
   20954:	b.hi	21fac <get_python_format_unnamed_arg_count@@Base+0x22e4>  // b.pmore
   20958:	adrp	x12, 39000 <get_search_path@@Base+0x2b4c>
   2095c:	add	x12, x12, #0xe24
   20960:	adr	x10, 20970 <get_python_format_unnamed_arg_count@@Base+0xca8>
   20964:	ldrh	w11, [x12, x9, lsl #1]
   20968:	add	x10, x10, x11, lsl #2
   2096c:	br	x10
   20970:	mov	w25, #0x1                   	// #1
   20974:	b	20928 <get_python_format_unnamed_arg_count@@Base+0xc60>
   20978:	ldr	w5, [x24]
   2097c:	adrp	x4, 39000 <get_search_path@@Base+0x2b4c>
   20980:	add	x4, x4, #0xf20
   20984:	add	x0, x29, #0x8
   20988:	mov	w3, #0x4                   	// #4
   2098c:	ldur	x6, [x29, #-80]
   20990:	mov	w1, w26
   20994:	mov	x2, x27
   20998:	bl	22548 <get_python_format_unnamed_arg_count@@Base+0x2880>
   2099c:	tbz	w0, #0, 22208 <get_python_format_unnamed_arg_count@@Base+0x2540>
   209a0:	ldur	x20, [x29, #-96]
   209a4:	tbnz	w28, #31, 20c78 <get_python_format_unnamed_arg_count@@Base+0xfb0>
   209a8:	add	w19, w28, #0x1
   209ac:	add	x0, x29, #0x8
   209b0:	mov	w2, #0x5                   	// #5
   209b4:	b	20c6c <get_python_format_unnamed_arg_count@@Base+0xfa4>
   209b8:	ldr	w5, [x24]
   209bc:	adrp	x4, 39000 <get_search_path@@Base+0x2b4c>
   209c0:	add	x4, x4, #0xf74
   209c4:	add	x0, x29, #0x8
   209c8:	mov	w3, #0x1                   	// #1
   209cc:	b	20b0c <get_python_format_unnamed_arg_count@@Base+0xe44>
   209d0:	ldr	w5, [x24]
   209d4:	adrp	x4, 39000 <get_search_path@@Base+0x2b4c>
   209d8:	add	x4, x4, #0xf58
   209dc:	add	x0, x29, #0x8
   209e0:	mov	w3, #0x7                   	// #7
   209e4:	b	20c44 <get_python_format_unnamed_arg_count@@Base+0xf7c>
   209e8:	ldr	w5, [x24]
   209ec:	adrp	x4, 39000 <get_search_path@@Base+0x2b4c>
   209f0:	add	x4, x4, #0xf10
   209f4:	add	x0, x29, #0x8
   209f8:	mov	w3, #0x4                   	// #4
   209fc:	mov	w1, w26
   20a00:	mov	x2, x27
   20a04:	b	20a60 <get_python_format_unnamed_arg_count@@Base+0xd98>
   20a08:	ldr	w5, [x24]
   20a0c:	ldur	x6, [x29, #-80]
   20a10:	add	x0, x29, #0x8
   20a14:	mov	w1, w26
   20a18:	mov	x2, x27
   20a1c:	mov	w3, wzr
   20a20:	mov	x4, xzr
   20a24:	bl	22548 <get_python_format_unnamed_arg_count@@Base+0x2880>
   20a28:	tbz	w0, #0, 22208 <get_python_format_unnamed_arg_count@@Base+0x2540>
   20a2c:	cmp	w28, #0x0
   20a30:	ldur	x20, [x29, #-96]
   20a34:	cset	w8, gt
   20a38:	and	w8, w8, w19
   20a3c:	subs	w28, w28, w8
   20a40:	b.pl	20a74 <get_python_format_unnamed_arg_count@@Base+0xdac>  // b.nfrst
   20a44:	b	20c78 <get_python_format_unnamed_arg_count@@Base+0xfb0>
   20a48:	ldr	w5, [x24]
   20a4c:	add	x0, x29, #0x8
   20a50:	mov	w1, w26
   20a54:	mov	x2, x27
   20a58:	mov	w3, wzr
   20a5c:	mov	x4, xzr
   20a60:	ldur	x6, [x29, #-80]
   20a64:	bl	22548 <get_python_format_unnamed_arg_count@@Base+0x2880>
   20a68:	tbz	w0, #0, 22208 <get_python_format_unnamed_arg_count@@Base+0x2540>
   20a6c:	ldur	x20, [x29, #-96]
   20a70:	tbnz	w28, #31, 20c78 <get_python_format_unnamed_arg_count@@Base+0xfb0>
   20a74:	add	w19, w28, #0x1
   20a78:	add	x0, x29, #0x8
   20a7c:	mov	w1, w28
   20a80:	mov	w2, wzr
   20a84:	b	20c70 <get_python_format_unnamed_arg_count@@Base+0xfa8>
   20a88:	ldr	w5, [x24]
   20a8c:	add	x0, x29, #0x8
   20a90:	mov	w1, w26
   20a94:	mov	x2, x27
   20a98:	mov	w3, wzr
   20a9c:	mov	x4, xzr
   20aa0:	b	20b14 <get_python_format_unnamed_arg_count@@Base+0xe4c>
   20aa4:	ldr	w5, [x24]
   20aa8:	ldur	x6, [x29, #-80]
   20aac:	add	x0, x29, #0x8
   20ab0:	mov	w1, w26
   20ab4:	mov	x2, x27
   20ab8:	mov	w3, wzr
   20abc:	mov	x4, xzr
   20ac0:	bl	22548 <get_python_format_unnamed_arg_count@@Base+0x2880>
   20ac4:	tbz	w0, #0, 22208 <get_python_format_unnamed_arg_count@@Base+0x2540>
   20ac8:	ldur	x20, [x29, #-96]
   20acc:	tbnz	w28, #31, 20c78 <get_python_format_unnamed_arg_count@@Base+0xfb0>
   20ad0:	add	w19, w28, #0x1
   20ad4:	add	x0, x29, #0x8
   20ad8:	mov	w2, #0x3                   	// #3
   20adc:	b	20c6c <get_python_format_unnamed_arg_count@@Base+0xfa4>
   20ae0:	ldr	w5, [x24]
   20ae4:	adrp	x4, 39000 <get_search_path@@Base+0x2b4c>
   20ae8:	add	x4, x4, #0xf30
   20aec:	add	x0, x29, #0x8
   20af0:	mov	w3, #0x5                   	// #5
   20af4:	b	2098c <get_python_format_unnamed_arg_count@@Base+0xcc4>
   20af8:	ldr	w5, [x24]
   20afc:	adrp	x4, 39000 <get_search_path@@Base+0x2b4c>
   20b00:	add	x4, x4, #0xf78
   20b04:	add	x0, x29, #0x8
   20b08:	mov	w3, #0x2                   	// #2
   20b0c:	mov	w1, w26
   20b10:	mov	x2, x27
   20b14:	ldur	x6, [x29, #-80]
   20b18:	bl	22548 <get_python_format_unnamed_arg_count@@Base+0x2880>
   20b1c:	ldur	x20, [x29, #-96]
   20b20:	tbnz	w0, #0, 20c78 <get_python_format_unnamed_arg_count@@Base+0xfb0>
   20b24:	b	222d8 <get_python_format_unnamed_arg_count@@Base+0x2610>
   20b28:	ldr	w5, [x24]
   20b2c:	adrp	x4, 39000 <get_search_path@@Base+0x2b4c>
   20b30:	add	x4, x4, #0xf44
   20b34:	add	x0, x29, #0x8
   20b38:	mov	w3, #0x5                   	// #5
   20b3c:	b	20c44 <get_python_format_unnamed_arg_count@@Base+0xf7c>
   20b40:	ldr	w5, [x24]
   20b44:	ldur	x6, [x29, #-80]
   20b48:	adrp	x4, 39000 <get_search_path@@Base+0x2b4c>
   20b4c:	add	x4, x4, #0xf80
   20b50:	add	x0, x29, #0x8
   20b54:	mov	w3, #0x3                   	// #3
   20b58:	mov	w1, w26
   20b5c:	mov	x2, x27
   20b60:	bl	22548 <get_python_format_unnamed_arg_count@@Base+0x2880>
   20b64:	tbz	w0, #0, 22208 <get_python_format_unnamed_arg_count@@Base+0x2540>
   20b68:	ldr	x0, [x29, #8]
   20b6c:	ldur	x20, [x29, #-96]
   20b70:	tbnz	w28, #31, 21738 <get_python_format_unnamed_arg_count@@Base+0x1a70>
   20b74:	cbz	x0, 21738 <get_python_format_unnamed_arg_count@@Base+0x1a70>
   20b78:	ldr	w11, [x0]
   20b7c:	add	w8, w28, #0x1
   20b80:	cbz	w11, 214f4 <get_python_format_unnamed_arg_count@@Base+0x182c>
   20b84:	ldr	x9, [x0, #8]
   20b88:	mov	x10, xzr
   20b8c:	add	x12, x9, #0x4
   20b90:	ldur	w13, [x12, #-4]
   20b94:	subs	w13, w8, w13
   20b98:	b.cc	214d4 <get_python_format_unnamed_arg_count@@Base+0x180c>  // b.lo, b.ul, b.last
   20b9c:	ldr	w8, [x12]
   20ba0:	cbnz	w8, 21738 <get_python_format_unnamed_arg_count@@Base+0x1a70>
   20ba4:	add	x10, x10, #0x1
   20ba8:	cmp	x11, x10
   20bac:	add	x12, x12, #0x18
   20bb0:	mov	w8, w13
   20bb4:	b.ne	20b90 <get_python_format_unnamed_arg_count@@Base+0xec8>  // b.any
   20bb8:	mov	w12, wzr
   20bbc:	mov	w10, w11
   20bc0:	mov	w8, w13
   20bc4:	b	214d8 <get_python_format_unnamed_arg_count@@Base+0x1810>
   20bc8:	cbz	w26, 20bfc <get_python_format_unnamed_arg_count@@Base+0xf34>
   20bcc:	mvn	w19, w20
   20bd0:	add	x20, x27, #0x4
   20bd4:	ldur	w8, [x20, #-4]
   20bd8:	cmp	w8, #0x4
   20bdc:	b.ne	20bf0 <get_python_format_unnamed_arg_count@@Base+0xf28>  // b.any
   20be0:	ldr	w1, [x20]
   20be4:	add	x0, x29, #0x8
   20be8:	mov	w2, #0x1                   	// #1
   20bec:	bl	22744 <get_python_format_unnamed_arg_count@@Base+0x2a7c>
   20bf0:	adds	w19, w19, #0x1
   20bf4:	add	x20, x20, #0x8
   20bf8:	b.cc	20bd4 <get_python_format_unnamed_arg_count@@Base+0xf0c>  // b.lo, b.ul, b.last
   20bfc:	ldur	x20, [x29, #-96]
   20c00:	tbnz	w28, #31, 20c78 <get_python_format_unnamed_arg_count@@Base+0xfb0>
   20c04:	add	x0, x29, #0x8
   20c08:	mov	w2, #0x9                   	// #9
   20c0c:	mov	w1, w28
   20c10:	add	w26, w28, #0x1
   20c14:	bl	22744 <get_python_format_unnamed_arg_count@@Base+0x2a7c>
   20c18:	add	x0, x29, #0x8
   20c1c:	mov	w1, w26
   20c20:	mov	w2, wzr
   20c24:	add	w28, w28, #0x2
   20c28:	bl	22744 <get_python_format_unnamed_arg_count@@Base+0x2a7c>
   20c2c:	b	20c78 <get_python_format_unnamed_arg_count@@Base+0xfb0>
   20c30:	ldr	w5, [x24]
   20c34:	adrp	x4, 39000 <get_search_path@@Base+0x2b4c>
   20c38:	add	x4, x4, #0xf10
   20c3c:	add	x0, x29, #0x8
   20c40:	mov	w3, #0x4                   	// #4
   20c44:	ldur	x6, [x29, #-80]
   20c48:	mov	w1, w26
   20c4c:	mov	x2, x27
   20c50:	bl	22548 <get_python_format_unnamed_arg_count@@Base+0x2880>
   20c54:	tbz	w0, #0, 22208 <get_python_format_unnamed_arg_count@@Base+0x2540>
   20c58:	ldur	x20, [x29, #-96]
   20c5c:	tbnz	w28, #31, 20c78 <get_python_format_unnamed_arg_count@@Base+0xfb0>
   20c60:	add	w19, w28, #0x1
   20c64:	add	x0, x29, #0x8
   20c68:	mov	w2, #0x6                   	// #6
   20c6c:	mov	w1, w28
   20c70:	bl	22744 <get_python_format_unnamed_arg_count@@Base+0x2a7c>
   20c74:	mov	w28, w19
   20c78:	cbz	x20, 20c94 <get_python_format_unnamed_arg_count@@Base+0xfcc>
   20c7c:	ldur	x8, [x29, #-88]
   20c80:	sub	x8, x21, x8
   20c84:	add	x8, x8, x20
   20c88:	ldurb	w9, [x8, #-1]
   20c8c:	orr	w9, w9, #0x2
   20c90:	sturb	w9, [x8, #-1]
   20c94:	mov	x0, x27
   20c98:	bl	aa00 <free@plt>
   20c9c:	ldrb	w8, [x21]
   20ca0:	cbnz	w8, 207a8 <get_python_format_unnamed_arg_count@@Base+0xae0>
   20ca4:	b	21e0c <get_python_format_unnamed_arg_count@@Base+0x2144>
   20ca8:	ldur	x19, [x29, #-80]
   20cac:	ldr	w5, [x24]
   20cb0:	add	x0, x29, #0x8
   20cb4:	mov	w1, w26
   20cb8:	mov	x2, x27
   20cbc:	mov	w3, wzr
   20cc0:	mov	x4, xzr
   20cc4:	mov	x6, x19
   20cc8:	bl	22548 <get_python_format_unnamed_arg_count@@Base+0x2880>
   20ccc:	tbz	w0, #0, 22208 <get_python_format_unnamed_arg_count@@Base+0x2540>
   20cd0:	ldur	x8, [x29, #-104]
   20cd4:	mov	w6, #0x29                  	// #41
   20cd8:	mov	x4, xzr
   20cdc:	mov	x5, x24
   20ce0:	str	x21, [x8]
   20ce4:	ldp	x26, x25, [sp, #104]
   20ce8:	mov	x21, x8
   20cec:	mov	x0, x21
   20cf0:	mov	w7, wzr
   20cf4:	str	w28, [x26]
   20cf8:	ldr	x8, [x29, #8]
   20cfc:	mov	x1, x26
   20d00:	mov	x2, x25
   20d04:	str	x8, [x25]
   20d08:	ldp	x8, x22, [sp, #88]
   20d0c:	mov	x3, x22
   20d10:	str	x8, [x22]
   20d14:	stp	xzr, x19, [sp]
   20d18:	bl	20734 <get_python_format_unnamed_arg_count@@Base+0xa6c>
   20d1c:	ldur	x20, [x29, #-96]
   20d20:	tbz	w0, #0, 22224 <get_python_format_unnamed_arg_count@@Base+0x255c>
   20d24:	ldr	x8, [x25]
   20d28:	ldr	x21, [x21]
   20d2c:	ldr	w28, [x26]
   20d30:	str	x8, [x29, #8]
   20d34:	ldr	x8, [x22]
   20d38:	str	x8, [sp, #88]
   20d3c:	b	20c78 <get_python_format_unnamed_arg_count@@Base+0xfb0>
   20d40:	ldr	w5, [x24]
   20d44:	ldur	x6, [x29, #-80]
   20d48:	adrp	x4, 39000 <get_search_path@@Base+0x2b4c>
   20d4c:	add	x4, x4, #0xf74
   20d50:	add	x0, x29, #0x8
   20d54:	mov	w3, #0x1                   	// #1
   20d58:	mov	w1, w26
   20d5c:	mov	x2, x27
   20d60:	bl	22548 <get_python_format_unnamed_arg_count@@Base+0x2880>
   20d64:	tbz	w0, #0, 22208 <get_python_format_unnamed_arg_count@@Base+0x2540>
   20d68:	ldur	x20, [x29, #-96]
   20d6c:	cbz	w26, 210c4 <get_python_format_unnamed_arg_count@@Base+0x13fc>
   20d70:	ldr	w8, [x27]
   20d74:	cbz	w8, 210c4 <get_python_format_unnamed_arg_count@@Base+0x13fc>
   20d78:	cmp	w8, #0x2
   20d7c:	b.ne	20e34 <get_python_format_unnamed_arg_count@@Base+0x116c>  // b.any
   20d80:	ldr	w26, [x27, #4]
   20d84:	tbz	w26, #31, 210cc <get_python_format_unnamed_arg_count@@Base+0x1404>
   20d88:	b	222b0 <get_python_format_unnamed_arg_count@@Base+0x25e8>
   20d8c:	ldr	w5, [x24]
   20d90:	ldur	x6, [x29, #-80]
   20d94:	add	x0, x29, #0x8
   20d98:	mov	w1, w26
   20d9c:	mov	x2, x27
   20da0:	mov	w3, wzr
   20da4:	mov	x4, xzr
   20da8:	bl	22548 <get_python_format_unnamed_arg_count@@Base+0x2880>
   20dac:	tbz	w0, #0, 22208 <get_python_format_unnamed_arg_count@@Base+0x2540>
   20db0:	ldur	x20, [x29, #-96]
   20db4:	tbnz	w28, #31, 20dd0 <get_python_format_unnamed_arg_count@@Base+0x1108>
   20db8:	add	x0, x29, #0x8
   20dbc:	mov	w1, w28
   20dc0:	mov	w2, wzr
   20dc4:	add	w19, w28, #0x1
   20dc8:	bl	22744 <get_python_format_unnamed_arg_count@@Base+0x2a7c>
   20dcc:	mov	w28, w19
   20dd0:	ldur	x19, [x29, #-88]
   20dd4:	ldurb	w8, [x22, #-1]
   20dd8:	cbz	w8, 2208c <get_python_format_unnamed_arg_count@@Base+0x23c4>
   20ddc:	cmp	w8, #0x2f
   20de0:	b.eq	210d8 <get_python_format_unnamed_arg_count@@Base+0x1410>  // b.none
   20de4:	add	x22, x22, #0x1
   20de8:	b	20dd4 <get_python_format_unnamed_arg_count@@Base+0x110c>
   20dec:	ldr	w5, [x24]
   20df0:	ldur	x6, [x29, #-80]
   20df4:	add	x0, x29, #0x8
   20df8:	mov	w1, w26
   20dfc:	mov	x2, x27
   20e00:	mov	w3, wzr
   20e04:	mov	x4, xzr
   20e08:	bl	22548 <get_python_format_unnamed_arg_count@@Base+0x2880>
   20e0c:	tbz	w0, #0, 22208 <get_python_format_unnamed_arg_count@@Base+0x2540>
   20e10:	ldur	x20, [x29, #-96]
   20e14:	tbnz	w28, #31, 20e30 <get_python_format_unnamed_arg_count@@Base+0x1168>
   20e18:	add	x0, x29, #0x8
   20e1c:	mov	w2, #0x8                   	// #8
   20e20:	mov	w1, w28
   20e24:	add	w19, w28, #0x1
   20e28:	bl	22744 <get_python_format_unnamed_arg_count@@Base+0x2a7c>
   20e2c:	mov	w28, w19
   20e30:	tbz	w25, #0, 210e0 <get_python_format_unnamed_arg_count@@Base+0x1418>
   20e34:	mov	w28, #0xffffffff            	// #-1
   20e38:	b	20c78 <get_python_format_unnamed_arg_count@@Base+0xfb0>
   20e3c:	ldr	w5, [x24]
   20e40:	ldur	x6, [x29, #-80]
   20e44:	adrp	x4, 39000 <get_search_path@@Base+0x2b4c>
   20e48:	add	x4, x4, #0xf10
   20e4c:	add	x0, x29, #0x8
   20e50:	mov	w3, #0x4                   	// #4
   20e54:	mov	w1, w26
   20e58:	mov	x2, x27
   20e5c:	bl	22548 <get_python_format_unnamed_arg_count@@Base+0x2880>
   20e60:	tbz	w0, #0, 22208 <get_python_format_unnamed_arg_count@@Base+0x2540>
   20e64:	ldp	x22, x20, [x29, #-104]
   20e68:	stur	xzr, [x29, #-32]
   20e6c:	str	x21, [x22]
   20e70:	ldp	x26, x25, [sp, #104]
   20e74:	str	w28, [x26]
   20e78:	ldr	x8, [x29, #8]
   20e7c:	str	x8, [x25]
   20e80:	ldp	x19, x21, [x29, #-88]
   20e84:	sub	x3, x29, #0x20
   20e88:	sub	x4, x29, #0x48
   20e8c:	mov	w6, #0x3e                  	// #62
   20e90:	mov	w7, #0x1                   	// #1
   20e94:	mov	x0, x22
   20e98:	mov	x1, x26
   20e9c:	mov	x2, x25
   20ea0:	mov	x5, x24
   20ea4:	stur	wzr, [x29, #-72]
   20ea8:	stp	xzr, x21, [sp]
   20eac:	bl	20734 <get_python_format_unnamed_arg_count@@Base+0xa6c>
   20eb0:	tbz	w0, #0, 22060 <get_python_format_unnamed_arg_count@@Base+0x2398>
   20eb4:	ldur	w8, [x29, #-72]
   20eb8:	cbnz	w8, 20e84 <get_python_format_unnamed_arg_count@@Base+0x11bc>
   20ebc:	ldur	x1, [x29, #-32]
   20ec0:	ldr	x8, [x25]
   20ec4:	ldr	w9, [x26]
   20ec8:	ldr	x21, [x22]
   20ecc:	cmp	x1, #0x0
   20ed0:	str	x8, [x29, #8]
   20ed4:	csinv	w28, w9, wzr, eq  // eq = none
   20ed8:	cmp	x8, #0x0
   20edc:	csel	x0, x1, x8, eq  // eq = none
   20ee0:	cbz	x8, 20ef0 <get_python_format_unnamed_arg_count@@Base+0x1228>
   20ee4:	cbz	x1, 20ef0 <get_python_format_unnamed_arg_count@@Base+0x1228>
   20ee8:	mov	x0, x8
   20eec:	bl	24688 <get_python_format_unnamed_arg_count@@Base+0x49c0>
   20ef0:	str	x0, [x29, #8]
   20ef4:	b	20c78 <get_python_format_unnamed_arg_count@@Base+0xfb0>
   20ef8:	and	w8, w25, w19
   20efc:	tbnz	w8, #0, 221e4 <get_python_format_unnamed_arg_count@@Base+0x251c>
   20f00:	ldur	x20, [x29, #-96]
   20f04:	tbz	w25, #0, 2110c <get_python_format_unnamed_arg_count@@Base+0x1444>
   20f08:	ldr	w5, [x24]
   20f0c:	ldur	x6, [x29, #-80]
   20f10:	add	x0, x29, #0x8
   20f14:	mov	w1, w26
   20f18:	mov	x2, x27
   20f1c:	mov	w3, wzr
   20f20:	mov	x4, xzr
   20f24:	bl	22548 <get_python_format_unnamed_arg_count@@Base+0x2880>
   20f28:	tbz	w0, #0, 22244 <get_python_format_unnamed_arg_count@@Base+0x257c>
   20f2c:	ldur	x8, [x29, #-104]
   20f30:	str	x21, [x8]
   20f34:	ldp	x9, x8, [sp, #88]
   20f38:	str	x9, [x8]
   20f3c:	ldr	x0, [x29, #8]
   20f40:	cbz	x0, 20f48 <get_python_format_unnamed_arg_count@@Base+0x1280>
   20f44:	bl	229ec <get_python_format_unnamed_arg_count@@Base+0x2d24>
   20f48:	ldur	x19, [x29, #-88]
   20f4c:	stur	x0, [x29, #-32]
   20f50:	tbnz	w28, #31, 20f8c <get_python_format_unnamed_arg_count@@Base+0x12c4>
   20f54:	mov	w0, #0x30                  	// #48
   20f58:	bl	a590 <xmalloc@plt>
   20f5c:	mov	x25, x0
   20f60:	stp	xzr, xzr, [x0]
   20f64:	str	wzr, [x0, #16]
   20f68:	stp	xzr, xzr, [x0, #24]
   20f6c:	str	wzr, [x0, #40]
   20f70:	bl	22434 <get_python_format_unnamed_arg_count@@Base+0x276c>
   20f74:	sub	x0, x29, #0x20
   20f78:	mov	w1, w28
   20f7c:	mov	x2, x25
   20f80:	bl	22830 <get_python_format_unnamed_arg_count@@Base+0x2b68>
   20f84:	mov	x0, x25
   20f88:	bl	22924 <get_python_format_unnamed_arg_count@@Base+0x2c5c>
   20f8c:	ldr	x0, [x29, #8]
   20f90:	stur	w28, [x29, #-48]
   20f94:	cbz	x0, 20f9c <get_python_format_unnamed_arg_count@@Base+0x12d4>
   20f98:	bl	229ec <get_python_format_unnamed_arg_count@@Base+0x2d24>
   20f9c:	stur	x0, [x29, #-72]
   20fa0:	ldur	x8, [x29, #-80]
   20fa4:	ldur	x0, [x29, #-104]
   20fa8:	ldr	x3, [sp, #96]
   20fac:	sub	x1, x29, #0x30
   20fb0:	sub	x2, x29, #0x48
   20fb4:	mov	w6, #0x5d                  	// #93
   20fb8:	mov	x4, xzr
   20fbc:	mov	x5, x24
   20fc0:	mov	w7, wzr
   20fc4:	stp	xzr, x8, [sp]
   20fc8:	bl	20734 <get_python_format_unnamed_arg_count@@Base+0xa6c>
   20fcc:	tbz	w0, #0, 22258 <get_python_format_unnamed_arg_count@@Base+0x2590>
   20fd0:	ldur	x26, [x29, #-72]
   20fd4:	cbz	x26, 214bc <get_python_format_unnamed_arg_count@@Base+0x17f4>
   20fd8:	ldur	w8, [x29, #-48]
   20fdc:	add	w9, w28, #0x1
   20fe0:	ldur	x0, [x29, #-32]
   20fe4:	mov	w10, #0xffffffff            	// #-1
   20fe8:	cmp	w8, w9
   20fec:	csinc	w8, w10, w28, ne  // ne = any
   20ff0:	cmp	w28, #0x0
   20ff4:	csel	w28, w8, w28, ge  // ge = tcont
   20ff8:	cbz	x0, 214c8 <get_python_format_unnamed_arg_count@@Base+0x1800>
   20ffc:	mov	x1, x26
   21000:	bl	24688 <get_python_format_unnamed_arg_count@@Base+0x49c0>
   21004:	mov	x26, x0
   21008:	b	214c8 <get_python_format_unnamed_arg_count@@Base+0x1800>
   2100c:	ldur	x20, [x29, #-80]
   21010:	ldr	w5, [x24]
   21014:	adrp	x4, 39000 <get_search_path@@Base+0x2b4c>
   21018:	add	x4, x4, #0xf74
   2101c:	add	x0, x29, #0x8
   21020:	mov	w3, #0x1                   	// #1
   21024:	mov	w1, w26
   21028:	mov	x2, x27
   2102c:	mov	x6, x20
   21030:	bl	22548 <get_python_format_unnamed_arg_count@@Base+0x2880>
   21034:	tbz	w0, #0, 22208 <get_python_format_unnamed_arg_count@@Base+0x2540>
   21038:	ldur	x22, [x29, #-104]
   2103c:	str	x21, [x22]
   21040:	stur	wzr, [x29, #-36]
   21044:	bl	223d0 <get_python_format_unnamed_arg_count@@Base+0x2708>
   21048:	stp	xzr, x0, [x29, #-56]
   2104c:	stur	x0, [x29, #-64]
   21050:	sub	x1, x29, #0x24
   21054:	sub	x2, x29, #0x30
   21058:	sub	x3, x29, #0x38
   2105c:	sub	x5, x29, #0x48
   21060:	mov	w6, #0x7d                  	// #125
   21064:	mov	x0, x22
   21068:	mov	x4, xzr
   2106c:	mov	w7, wzr
   21070:	stur	wzr, [x29, #-72]
   21074:	stp	xzr, x20, [sp]
   21078:	bl	20734 <get_python_format_unnamed_arg_count@@Base+0xa6c>
   2107c:	ldur	x20, [x29, #-96]
   21080:	tbz	w0, #0, 21280 <get_python_format_unnamed_arg_count@@Base+0x15b8>
   21084:	ldur	w8, [x29, #-72]
   21088:	ldr	w9, [x24]
   2108c:	add	w9, w9, w8
   21090:	str	w9, [x24]
   21094:	ldrb	w9, [x21]
   21098:	cmp	w9, #0x7e
   2109c:	b.ne	212d4 <get_python_format_unnamed_arg_count@@Base+0x160c>  // b.any
   210a0:	tbnz	w28, #31, 212d4 <get_python_format_unnamed_arg_count@@Base+0x160c>
   210a4:	cmp	w8, #0x1
   210a8:	b.ne	212d4 <get_python_format_unnamed_arg_count@@Base+0x160c>  // b.any
   210ac:	add	x0, x29, #0x8
   210b0:	mov	w2, #0x8                   	// #8
   210b4:	mov	w1, w28
   210b8:	add	w21, w28, #0x1
   210bc:	bl	22744 <get_python_format_unnamed_arg_count@@Base+0x2a7c>
   210c0:	b	212d8 <get_python_format_unnamed_arg_count@@Base+0x1610>
   210c4:	mvn	w8, w25
   210c8:	and	w26, w8, #0x1
   210cc:	tbz	w25, #0, 212b8 <get_python_format_unnamed_arg_count@@Base+0x15f0>
   210d0:	mov	w28, w26
   210d4:	b	20c78 <get_python_format_unnamed_arg_count@@Base+0xfb0>
   210d8:	mov	x21, x22
   210dc:	b	20c78 <get_python_format_unnamed_arg_count@@Base+0xfb0>
   210e0:	tbnz	w28, #31, 20c78 <get_python_format_unnamed_arg_count@@Base+0xfb0>
   210e4:	bl	223d0 <get_python_format_unnamed_arg_count@@Base+0x2708>
   210e8:	mov	x26, x0
   210ec:	add	x0, x29, #0x8
   210f0:	mov	w1, w28
   210f4:	mov	x2, x26
   210f8:	add	w19, w28, #0x1
   210fc:	bl	22830 <get_python_format_unnamed_arg_count@@Base+0x2b68>
   21100:	mov	x0, x26
   21104:	bl	22924 <get_python_format_unnamed_arg_count@@Base+0x2c5c>
   21108:	b	20c74 <get_python_format_unnamed_arg_count@@Base+0xfac>
   2110c:	ldr	w5, [x24]
   21110:	tbz	w19, #0, 21348 <get_python_format_unnamed_arg_count@@Base+0x1680>
   21114:	ldur	x6, [x29, #-80]
   21118:	add	x0, x29, #0x8
   2111c:	mov	w1, w26
   21120:	mov	x2, x27
   21124:	mov	w3, wzr
   21128:	mov	x4, xzr
   2112c:	bl	22548 <get_python_format_unnamed_arg_count@@Base+0x2880>
   21130:	tbz	w0, #0, 222d8 <get_python_format_unnamed_arg_count@@Base+0x2610>
   21134:	tbnz	w28, #31, 21150 <get_python_format_unnamed_arg_count@@Base+0x1488>
   21138:	add	x0, x29, #0x8
   2113c:	mov	w1, w28
   21140:	mov	w2, wzr
   21144:	add	w19, w28, #0x1
   21148:	bl	22744 <get_python_format_unnamed_arg_count@@Base+0x2a7c>
   2114c:	mov	w28, w19
   21150:	ldur	x8, [x29, #-104]
   21154:	str	x21, [x8]
   21158:	ldp	x9, x8, [sp, #88]
   2115c:	str	x9, [x8]
   21160:	ldr	x0, [x29, #8]
   21164:	stur	w28, [x29, #-72]
   21168:	cbz	x0, 21170 <get_python_format_unnamed_arg_count@@Base+0x14a8>
   2116c:	bl	229ec <get_python_format_unnamed_arg_count@@Base+0x2d24>
   21170:	ldur	x21, [x29, #-88]
   21174:	stur	x0, [x29, #-32]
   21178:	stur	wzr, [x29, #-48]
   2117c:	tbnz	w28, #31, 211b8 <get_python_format_unnamed_arg_count@@Base+0x14f0>
   21180:	mov	w0, #0x30                  	// #48
   21184:	bl	a590 <xmalloc@plt>
   21188:	mov	x25, x0
   2118c:	stp	xzr, xzr, [x0]
   21190:	str	wzr, [x0, #16]
   21194:	stp	xzr, xzr, [x0, #24]
   21198:	str	wzr, [x0, #40]
   2119c:	bl	22434 <get_python_format_unnamed_arg_count@@Base+0x276c>
   211a0:	sub	w1, w28, #0x1
   211a4:	sub	x0, x29, #0x20
   211a8:	mov	x2, x25
   211ac:	bl	22830 <get_python_format_unnamed_arg_count@@Base+0x2b68>
   211b0:	mov	x0, x25
   211b4:	bl	22924 <get_python_format_unnamed_arg_count@@Base+0x2c5c>
   211b8:	ldur	x8, [x29, #-80]
   211bc:	ldur	x0, [x29, #-104]
   211c0:	ldr	x3, [sp, #96]
   211c4:	sub	x1, x29, #0x48
   211c8:	sub	x2, x29, #0x20
   211cc:	sub	x4, x29, #0x30
   211d0:	mov	w6, #0x5d                  	// #93
   211d4:	mov	w7, #0x1                   	// #1
   211d8:	mov	x5, x24
   211dc:	stp	xzr, x8, [sp]
   211e0:	bl	20734 <get_python_format_unnamed_arg_count@@Base+0xa6c>
   211e4:	tbz	w0, #0, 2228c <get_python_format_unnamed_arg_count@@Base+0x25c4>
   211e8:	ldur	w8, [x29, #-48]
   211ec:	cbz	w8, 22268 <get_python_format_unnamed_arg_count@@Base+0x25a0>
   211f0:	ldur	x26, [x29, #-32]
   211f4:	ldur	w8, [x29, #-72]
   211f8:	ldr	x0, [x29, #8]
   211fc:	mov	w9, #0xfffffffe            	// #-2
   21200:	cmp	x26, #0x0
   21204:	csel	w19, w9, w8, eq  // eq = none
   21208:	stur	w28, [x29, #-72]
   2120c:	cbz	x0, 21214 <get_python_format_unnamed_arg_count@@Base+0x154c>
   21210:	bl	229ec <get_python_format_unnamed_arg_count@@Base+0x2d24>
   21214:	stur	x0, [x29, #-32]
   21218:	ldur	x8, [x29, #-80]
   2121c:	ldur	x0, [x29, #-104]
   21220:	ldr	x3, [sp, #96]
   21224:	sub	x1, x29, #0x48
   21228:	sub	x2, x29, #0x20
   2122c:	mov	w6, #0x5d                  	// #93
   21230:	mov	x4, xzr
   21234:	mov	x5, x24
   21238:	mov	w7, wzr
   2123c:	stp	xzr, x8, [sp]
   21240:	bl	20734 <get_python_format_unnamed_arg_count@@Base+0xa6c>
   21244:	tbz	w0, #0, 2228c <get_python_format_unnamed_arg_count@@Base+0x25c4>
   21248:	ldur	x1, [x29, #-32]
   2124c:	cbz	x1, 216cc <get_python_format_unnamed_arg_count@@Base+0x1a04>
   21250:	ldur	w8, [x29, #-72]
   21254:	mov	w9, #0xffffffff            	// #-1
   21258:	cmp	w8, w19
   2125c:	ccmp	w8, w9, #0x4, eq  // eq = none
   21260:	csinv	w9, w19, wzr, gt
   21264:	cmn	w19, #0x2
   21268:	csel	w19, w8, w9, eq  // eq = none
   2126c:	cbz	x26, 216c8 <get_python_format_unnamed_arg_count@@Base+0x1a00>
   21270:	mov	x0, x26
   21274:	bl	24688 <get_python_format_unnamed_arg_count@@Base+0x49c0>
   21278:	mov	x26, x0
   2127c:	b	216cc <get_python_format_unnamed_arg_count@@Base+0x1a04>
   21280:	mov	w8, wzr
   21284:	cbz	x20, 21d50 <get_python_format_unnamed_arg_count@@Base+0x2088>
   21288:	ldur	x9, [x29, #-104]
   2128c:	ldr	x9, [x9]
   21290:	mov	x10, x9
   21294:	ldrb	w11, [x10], #-1
   21298:	cmp	w11, #0x0
   2129c:	csel	x9, x10, x9, eq  // eq = none
   212a0:	ldur	x10, [x29, #-88]
   212a4:	sub	x9, x9, x10
   212a8:	ldrb	w10, [x20, x9]
   212ac:	orr	w10, w10, #0x4
   212b0:	strb	w10, [x20, x9]
   212b4:	b	21d50 <get_python_format_unnamed_arg_count@@Base+0x2088>
   212b8:	tbz	w19, #0, 214ac <get_python_format_unnamed_arg_count@@Base+0x17e4>
   212bc:	cmp	w26, #0x1
   212c0:	b.lt	20c78 <get_python_format_unnamed_arg_count@@Base+0xfb0>  // b.tstop
   212c4:	tbnz	w28, #31, 20e34 <get_python_format_unnamed_arg_count@@Base+0x116c>
   212c8:	subs	w8, w28, w26
   212cc:	csel	w28, wzr, w8, lt  // lt = tstop
   212d0:	b	20c78 <get_python_format_unnamed_arg_count@@Base+0xfb0>
   212d4:	mov	w21, w28
   212d8:	ldp	x1, x0, [x29, #-56]
   212dc:	cmp	x0, #0x0
   212e0:	csel	x22, x1, x0, eq  // eq = none
   212e4:	cbz	x0, 212f4 <get_python_format_unnamed_arg_count@@Base+0x162c>
   212e8:	cbz	x1, 212f4 <get_python_format_unnamed_arg_count@@Base+0x162c>
   212ec:	bl	24688 <get_python_format_unnamed_arg_count@@Base+0x49c0>
   212f0:	mov	x22, x0
   212f4:	stur	x22, [x29, #-48]
   212f8:	tbz	w19, #0, 21394 <get_python_format_unnamed_arg_count@@Base+0x16cc>
   212fc:	mov	w0, #0x30                  	// #48
   21300:	bl	a590 <xmalloc@plt>
   21304:	stp	xzr, xzr, [x0]
   21308:	str	x0, [sp, #64]
   2130c:	str	wzr, [x0, #16]
   21310:	cbz	x22, 21518 <get_python_format_unnamed_arg_count@@Base+0x1850>
   21314:	ldr	x19, [sp, #64]
   21318:	mov	w0, #0x18                  	// #24
   2131c:	str	d8, [x19, #24]
   21320:	bl	a590 <xmalloc@plt>
   21324:	mov	w8, #0x7                   	// #7
   21328:	mov	w9, #0x1                   	// #1
   2132c:	str	x0, [x19, #32]
   21330:	str	d8, [x0]
   21334:	str	x22, [x0, #16]
   21338:	str	w8, [x0, #8]
   2133c:	str	w9, [x19, #40]
   21340:	mov	x0, x19
   21344:	b	21c10 <get_python_format_unnamed_arg_count@@Base+0x1f48>
   21348:	ldur	x6, [x29, #-80]
   2134c:	adrp	x4, 39000 <get_search_path@@Base+0x2b4c>
   21350:	add	x4, x4, #0xf74
   21354:	add	x0, x29, #0x8
   21358:	mov	w3, #0x1                   	// #1
   2135c:	mov	w1, w26
   21360:	mov	x2, x27
   21364:	bl	22548 <get_python_format_unnamed_arg_count@@Base+0x2880>
   21368:	tbz	w0, #0, 222d8 <get_python_format_unnamed_arg_count@@Base+0x2610>
   2136c:	cbz	w26, 2154c <get_python_format_unnamed_arg_count@@Base+0x1884>
   21370:	tbnz	w28, #31, 21550 <get_python_format_unnamed_arg_count@@Base+0x1888>
   21374:	ldr	w8, [x27]
   21378:	cbnz	w8, 21550 <get_python_format_unnamed_arg_count@@Base+0x1888>
   2137c:	add	x0, x29, #0x8
   21380:	mov	w1, w28
   21384:	mov	w2, wzr
   21388:	add	w19, w28, #0x1
   2138c:	bl	22744 <get_python_format_unnamed_arg_count@@Base+0x2a7c>
   21390:	b	21558 <get_python_format_unnamed_arg_count@@Base+0x1890>
   21394:	cbz	x22, 2152c <get_python_format_unnamed_arg_count@@Base+0x1864>
   21398:	ldur	w8, [x29, #-36]
   2139c:	mov	x0, x22
   213a0:	cmp	w8, #0x0
   213a4:	str	x8, [sp, #32]
   213a8:	b.le	21710 <get_python_format_unnamed_arg_count@@Base+0x1a48>
   213ac:	bl	22434 <get_python_format_unnamed_arg_count@@Base+0x276c>
   213b0:	ldr	w8, [x22, #24]
   213b4:	cbz	w8, 216f8 <get_python_format_unnamed_arg_count@@Base+0x1a30>
   213b8:	ldr	w26, [x22, #40]
   213bc:	ldr	x19, [sp, #32]
   213c0:	mov	x1, x26
   213c4:	mov	x0, x19
   213c8:	bl	ac10 <gcd@plt>
   213cc:	udiv	x28, x19, x0
   213d0:	mov	x0, x22
   213d4:	mov	w1, w28
   213d8:	bl	24460 <get_python_format_unnamed_arg_count@@Base+0x4798>
   213dc:	ldr	w8, [x22]
   213e0:	ldr	w9, [x22, #24]
   213e4:	mov	w10, #0x18                  	// #24
   213e8:	add	w8, w9, w8
   213ec:	umull	x0, w8, w10
   213f0:	stp	w8, w8, [x29, #-32]
   213f4:	bl	a590 <xmalloc@plt>
   213f8:	stur	x0, [x29, #-24]
   213fc:	ldr	w8, [x22]
   21400:	cbz	w8, 2143c <get_python_format_unnamed_arg_count@@Base+0x1774>
   21404:	mov	x9, xzr
   21408:	mov	x8, xzr
   2140c:	ldr	x10, [x22, #8]
   21410:	add	x8, x8, #0x1
   21414:	add	x10, x10, x9
   21418:	ldr	x11, [x10, #16]
   2141c:	ldr	q0, [x10]
   21420:	add	x10, x0, x9
   21424:	add	x9, x9, #0x18
   21428:	str	x11, [x10, #16]
   2142c:	str	q0, [x10]
   21430:	ldr	w10, [x22]
   21434:	cmp	x8, x10
   21438:	b.cc	2140c <get_python_format_unnamed_arg_count@@Base+0x1744>  // b.lo, b.ul, b.last
   2143c:	ldr	w9, [x22, #24]
   21440:	mul	w28, w26, w28
   21444:	cbz	w9, 2148c <get_python_format_unnamed_arg_count@@Base+0x17c4>
   21448:	mov	x9, xzr
   2144c:	mov	x10, xzr
   21450:	mov	w8, w8
   21454:	ldr	x11, [x22, #8]
   21458:	add	w12, w8, w10
   2145c:	add	x10, x10, #0x1
   21460:	add	x11, x11, x9
   21464:	ldr	x13, [x11, #16]
   21468:	ldr	q0, [x11]
   2146c:	mov	w11, #0x18                  	// #24
   21470:	umaddl	x11, w12, w11, x0
   21474:	str	x13, [x11, #16]
   21478:	str	q0, [x11]
   2147c:	ldr	w11, [x22, #24]
   21480:	add	x9, x9, #0x18
   21484:	cmp	x10, x11
   21488:	b.cc	21454 <get_python_format_unnamed_arg_count@@Base+0x178c>  // b.lo, b.ul, b.last
   2148c:	ldr	w8, [x22, #16]
   21490:	ldr	w9, [x22, #40]
   21494:	sub	x22, x29, #0x20
   21498:	str	w21, [sp, #28]
   2149c:	add	w8, w9, w8
   214a0:	str	w8, [sp, #44]
   214a4:	stur	w8, [x29, #-16]
   214a8:	b	217f4 <get_python_format_unnamed_arg_count@@Base+0x1b2c>
   214ac:	cmp	w28, #0x0
   214b0:	csel	w8, wzr, w26, lt  // lt = tstop
   214b4:	add	w28, w8, w28
   214b8:	b	20c78 <get_python_format_unnamed_arg_count@@Base+0xfb0>
   214bc:	ldur	x26, [x29, #-32]
   214c0:	mvn	w8, w28
   214c4:	add	w28, w28, w8, lsr #31
   214c8:	ldur	x8, [x29, #-104]
   214cc:	ldr	x0, [x29, #8]
   214d0:	b	216dc <get_python_format_unnamed_arg_count@@Base+0x1a14>
   214d4:	mov	w12, #0x1                   	// #1
   214d8:	cbz	w8, 20c78 <get_python_format_unnamed_arg_count@@Base+0xfb0>
   214dc:	cbz	w12, 214f4 <get_python_format_unnamed_arg_count@@Base+0x182c>
   214e0:	mov	w8, #0x18                  	// #24
   214e4:	umaddl	x8, w10, w8, x9
   214e8:	ldr	w8, [x8, #4]
   214ec:	cbnz	w8, 2173c <get_python_format_unnamed_arg_count@@Base+0x1a74>
   214f0:	b	20c78 <get_python_format_unnamed_arg_count@@Base+0xfb0>
   214f4:	ldr	w10, [x0, #24]
   214f8:	cbz	w10, 2173c <get_python_format_unnamed_arg_count@@Base+0x1a74>
   214fc:	ldr	x9, [x0, #32]
   21500:	ldr	w12, [x9]
   21504:	cmp	w8, w12
   21508:	b.cs	2163c <get_python_format_unnamed_arg_count@@Base+0x1974>  // b.hs, b.nlast
   2150c:	mov	x11, xzr
   21510:	mov	w12, #0x1                   	// #1
   21514:	b	21674 <get_python_format_unnamed_arg_count@@Base+0x19ac>
   21518:	ldr	x0, [sp, #64]
   2151c:	add	x8, x0, #0x18
   21520:	stp	xzr, xzr, [x8]
   21524:	str	wzr, [x8, #16]
   21528:	b	21c10 <get_python_format_unnamed_arg_count@@Base+0x1f48>
   2152c:	mov	w0, #0x30                  	// #48
   21530:	bl	a590 <xmalloc@plt>
   21534:	stp	xzr, xzr, [x0]
   21538:	str	wzr, [x0, #16]
   2153c:	stp	xzr, xzr, [x0, #24]
   21540:	str	wzr, [x0, #40]
   21544:	str	x0, [sp, #64]
   21548:	b	21c10 <get_python_format_unnamed_arg_count@@Base+0x1f48>
   2154c:	tbz	w28, #31, 2137c <get_python_format_unnamed_arg_count@@Base+0x16b4>
   21550:	mov	w19, w28
   21554:	mov	w28, #0xffffffff            	// #-1
   21558:	ldur	x8, [x29, #-104]
   2155c:	mov	x26, xzr
   21560:	mov	w25, wzr
   21564:	mov	w20, #0xfffffffe            	// #-2
   21568:	str	x21, [x8]
   2156c:	ldp	x9, x8, [sp, #88]
   21570:	str	x9, [x8]
   21574:	ldr	x0, [x29, #8]
   21578:	stur	w19, [x29, #-72]
   2157c:	cbz	x0, 21584 <get_python_format_unnamed_arg_count@@Base+0x18bc>
   21580:	bl	229ec <get_python_format_unnamed_arg_count@@Base+0x2d24>
   21584:	stur	x0, [x29, #-32]
   21588:	ldur	x8, [x29, #-80]
   2158c:	ldur	x0, [x29, #-104]
   21590:	ldr	x3, [sp, #96]
   21594:	eor	w21, w25, #0x1
   21598:	and	w7, w21, #0x1
   2159c:	sub	x1, x29, #0x48
   215a0:	sub	x2, x29, #0x20
   215a4:	sub	x4, x29, #0x30
   215a8:	mov	w6, #0x5d                  	// #93
   215ac:	mov	x5, x24
   215b0:	stur	wzr, [x29, #-48]
   215b4:	stp	xzr, x8, [sp]
   215b8:	bl	20734 <get_python_format_unnamed_arg_count@@Base+0xa6c>
   215bc:	tbz	w0, #0, 221ac <get_python_format_unnamed_arg_count@@Base+0x24e4>
   215c0:	cmp	w28, #0x0
   215c4:	cset	w8, lt  // lt = tstop
   215c8:	orn	w8, w8, w21
   215cc:	tbnz	w8, #0, 215e0 <get_python_format_unnamed_arg_count@@Base+0x1918>
   215d0:	sub	x0, x29, #0x20
   215d4:	mov	w2, #0x5                   	// #5
   215d8:	mov	w1, w28
   215dc:	bl	22744 <get_python_format_unnamed_arg_count@@Base+0x2a7c>
   215e0:	ldur	x1, [x29, #-32]
   215e4:	cbz	x1, 2161c <get_python_format_unnamed_arg_count@@Base+0x1954>
   215e8:	ldur	w8, [x29, #-72]
   215ec:	mov	w9, #0xffffffff            	// #-1
   215f0:	cmp	w8, w20
   215f4:	ccmp	w8, w9, #0x4, eq  // eq = none
   215f8:	csinv	w9, w20, wzr, gt
   215fc:	cmn	w20, #0x2
   21600:	csel	w20, w8, w9, eq  // eq = none
   21604:	cbz	x26, 21618 <get_python_format_unnamed_arg_count@@Base+0x1950>
   21608:	mov	x0, x26
   2160c:	bl	24688 <get_python_format_unnamed_arg_count@@Base+0x49c0>
   21610:	mov	x26, x0
   21614:	b	2161c <get_python_format_unnamed_arg_count@@Base+0x1954>
   21618:	mov	x26, x1
   2161c:	ldur	w8, [x29, #-48]
   21620:	cmp	w8, #0x2
   21624:	cset	w9, eq  // eq = none
   21628:	orr	w25, w25, w9
   2162c:	cbnz	w8, 21574 <get_python_format_unnamed_arg_count@@Base+0x18ac>
   21630:	tbz	w25, #0, 2167c <get_python_format_unnamed_arg_count@@Base+0x19b4>
   21634:	ldur	x21, [x29, #-104]
   21638:	b	217bc <get_python_format_unnamed_arg_count@@Base+0x1af4>
   2163c:	mov	x11, xzr
   21640:	add	x13, x9, #0x18
   21644:	sub	x14, x10, #0x1
   21648:	ldur	w15, [x13, #-20]
   2164c:	cbnz	w15, 21738 <get_python_format_unnamed_arg_count@@Base+0x1a70>
   21650:	cmp	x14, x11
   21654:	sub	w8, w8, w12
   21658:	b.eq	2171c <get_python_format_unnamed_arg_count@@Base+0x1a54>  // b.none
   2165c:	ldr	w12, [x13], #24
   21660:	add	x11, x11, #0x1
   21664:	cmp	w8, w12
   21668:	b.cs	21648 <get_python_format_unnamed_arg_count@@Base+0x1980>  // b.hs, b.nlast
   2166c:	cmp	x11, x10
   21670:	cset	w12, cc  // cc = lo, ul, last
   21674:	mov	w10, w11
   21678:	b	21720 <get_python_format_unnamed_arg_count@@Base+0x1a58>
   2167c:	cmp	w19, w20
   21680:	mov	w8, #0xffffffff            	// #-1
   21684:	ldr	x0, [x29, #8]
   21688:	ldur	x21, [x29, #-104]
   2168c:	ccmp	w19, w8, #0x4, eq  // eq = none
   21690:	csinv	w8, w20, wzr, gt
   21694:	cmn	w20, #0x2
   21698:	csel	w20, w19, w8, eq  // eq = none
   2169c:	cbz	x0, 2179c <get_python_format_unnamed_arg_count@@Base+0x1ad4>
   216a0:	bl	229ec <get_python_format_unnamed_arg_count@@Base+0x2d24>
   216a4:	cmp	x26, #0x0
   216a8:	csel	x8, x0, x26, eq  // eq = none
   216ac:	cbz	x26, 217b8 <get_python_format_unnamed_arg_count@@Base+0x1af0>
   216b0:	mov	x1, x0
   216b4:	cbz	x0, 217b8 <get_python_format_unnamed_arg_count@@Base+0x1af0>
   216b8:	mov	x0, x26
   216bc:	bl	24688 <get_python_format_unnamed_arg_count@@Base+0x49c0>
   216c0:	mov	x26, x0
   216c4:	b	217bc <get_python_format_unnamed_arg_count@@Base+0x1af4>
   216c8:	mov	x26, x1
   216cc:	ldur	x8, [x29, #-104]
   216d0:	ldr	x0, [x29, #8]
   216d4:	cmn	w19, #0x2
   216d8:	csel	w28, w28, w19, eq  // eq = none
   216dc:	ldr	x21, [x8]
   216e0:	ldr	x8, [sp, #96]
   216e4:	ldr	x8, [x8]
   216e8:	str	x8, [sp, #88]
   216ec:	cbz	x0, 217e4 <get_python_format_unnamed_arg_count@@Base+0x1b1c>
   216f0:	bl	22924 <get_python_format_unnamed_arg_count@@Base+0x2c5c>
   216f4:	b	217e4 <get_python_format_unnamed_arg_count@@Base+0x1b1c>
   216f8:	ldr	w9, [x22, #16]
   216fc:	ldr	x8, [sp, #32]
   21700:	str	w9, [sp, #44]
   21704:	cmp	w9, w8
   21708:	b.cs	217ec <get_python_format_unnamed_arg_count@@Base+0x1b24>  // b.hs, b.nlast
   2170c:	mov	x0, x22
   21710:	bl	22b98 <get_python_format_unnamed_arg_count@@Base+0x2ed0>
   21714:	str	x22, [sp, #64]
   21718:	b	21c14 <get_python_format_unnamed_arg_count@@Base+0x1f4c>
   2171c:	mov	w12, wzr
   21720:	cbz	w8, 20c78 <get_python_format_unnamed_arg_count@@Base+0xfb0>
   21724:	cbz	w12, 20c78 <get_python_format_unnamed_arg_count@@Base+0xfb0>
   21728:	mov	w8, #0x18                  	// #24
   2172c:	umaddl	x8, w10, w8, x9
   21730:	ldr	w8, [x8, #4]
   21734:	cbz	w8, 20c78 <get_python_format_unnamed_arg_count@@Base+0xfb0>
   21738:	cbz	x0, 2177c <get_python_format_unnamed_arg_count@@Base+0x1ab4>
   2173c:	bl	229ec <get_python_format_unnamed_arg_count@@Base+0x2d24>
   21740:	mov	x1, x0
   21744:	tbnz	w28, #31, 21758 <get_python_format_unnamed_arg_count@@Base+0x1a90>
   21748:	mov	x0, x1
   2174c:	mov	w1, w28
   21750:	bl	230f8 <get_python_format_unnamed_arg_count@@Base+0x3430>
   21754:	mov	x1, x0
   21758:	ldr	x8, [sp, #88]
   2175c:	cmp	x8, #0x0
   21760:	csel	x26, x1, x8, eq  // eq = none
   21764:	cbz	x8, 21780 <get_python_format_unnamed_arg_count@@Base+0x1ab8>
   21768:	cbz	x1, 21780 <get_python_format_unnamed_arg_count@@Base+0x1ab8>
   2176c:	ldr	x0, [sp, #88]
   21770:	bl	24688 <get_python_format_unnamed_arg_count@@Base+0x49c0>
   21774:	mov	x26, x0
   21778:	b	21780 <get_python_format_unnamed_arg_count@@Base+0x1ab8>
   2177c:	ldr	x26, [sp, #88]
   21780:	tbnz	w28, #31, 21794 <get_python_format_unnamed_arg_count@@Base+0x1acc>
   21784:	ldr	x0, [x29, #8]
   21788:	mov	w1, w28
   2178c:	bl	23248 <get_python_format_unnamed_arg_count@@Base+0x3580>
   21790:	str	x0, [x29, #8]
   21794:	str	x26, [sp, #88]
   21798:	b	20c78 <get_python_format_unnamed_arg_count@@Base+0xfb0>
   2179c:	ldr	x8, [sp, #96]
   217a0:	ldr	x21, [x21]
   217a4:	cmn	w20, #0x2
   217a8:	csel	w28, w19, w20, eq  // eq = none
   217ac:	ldr	x8, [x8]
   217b0:	str	x8, [sp, #88]
   217b4:	b	217e0 <get_python_format_unnamed_arg_count@@Base+0x1b18>
   217b8:	mov	x26, x8
   217bc:	ldr	x8, [sp, #96]
   217c0:	ldr	x0, [x29, #8]
   217c4:	ldr	x21, [x21]
   217c8:	cmn	w20, #0x2
   217cc:	ldr	x8, [x8]
   217d0:	csel	w28, w19, w20, eq  // eq = none
   217d4:	str	x8, [sp, #88]
   217d8:	cbz	x0, 217e0 <get_python_format_unnamed_arg_count@@Base+0x1b18>
   217dc:	bl	22924 <get_python_format_unnamed_arg_count@@Base+0x2c5c>
   217e0:	ldur	x20, [x29, #-96]
   217e4:	str	x26, [x29, #8]
   217e8:	b	20c78 <get_python_format_unnamed_arg_count@@Base+0xfb0>
   217ec:	str	w21, [sp, #28]
   217f0:	mov	w28, w8
   217f4:	mov	w0, #0x30                  	// #48
   217f8:	str	x22, [sp, #48]
   217fc:	bl	a590 <xmalloc@plt>
   21800:	stp	xzr, xzr, [x0]
   21804:	str	wzr, [x0, #16]
   21808:	stp	xzr, xzr, [x0, #24]
   2180c:	str	x0, [sp, #64]
   21810:	str	wzr, [x0, #40]
   21814:	cbz	w28, 21da8 <get_python_format_unnamed_arg_count@@Base+0x20e0>
   21818:	ldr	x8, [sp, #48]
   2181c:	mov	x15, xzr
   21820:	mov	w10, wzr
   21824:	mov	w9, wzr
   21828:	ldr	x8, [x8, #8]
   2182c:	mov	w22, wzr
   21830:	mov	w20, wzr
   21834:	mov	w16, wzr
   21838:	mov	w21, #0x18                  	// #24
   2183c:	umull	x11, w20, w21
   21840:	ldr	w11, [x8, x11]
   21844:	sub	w12, w28, w22
   21848:	mov	w26, w20
   2184c:	str	w16, [sp, #60]
   21850:	sub	w13, w11, w16
   21854:	cmp	w13, w12
   21858:	csel	w19, w13, w12, cc  // cc = lo, ul, last
   2185c:	cmp	w9, w10
   21860:	b.cc	218a8 <get_python_format_unnamed_arg_count@@Base+0x1be0>  // b.lo, b.ul, b.last
   21864:	mov	w8, #0x1                   	// #1
   21868:	add	w11, w9, #0x1
   2186c:	bfi	w8, w10, #1, #31
   21870:	ldr	x20, [sp, #64]
   21874:	cmp	w8, w11
   21878:	csinc	w8, w8, w9, hi  // hi = pmore
   2187c:	umull	x1, w8, w21
   21880:	mov	x0, x15
   21884:	str	w8, [x20, #4]
   21888:	bl	a460 <xrealloc@plt>
   2188c:	ldr	x8, [sp, #48]
   21890:	str	x0, [x20, #8]
   21894:	mul	x10, x26, x21
   21898:	ldr	w9, [x20]
   2189c:	ldr	x8, [x8, #8]
   218a0:	mov	x15, x0
   218a4:	ldr	w11, [x8, x10]
   218a8:	umaddl	x10, w9, w21, x15
   218ac:	str	w11, [x10]
   218b0:	madd	x11, x26, x21, x8
   218b4:	ldur	x12, [x11, #4]
   218b8:	mov	w21, w9
   218bc:	stur	x12, [x10, #4]
   218c0:	ldr	w10, [x11, #8]
   218c4:	cmp	w10, #0x7
   218c8:	b.ne	21914 <get_python_format_unnamed_arg_count@@Base+0x1c4c>  // b.any
   218cc:	mov	w9, #0x18                  	// #24
   218d0:	madd	x8, x26, x9, x8
   218d4:	ldr	x0, [x8, #16]
   218d8:	mov	x20, x24
   218dc:	mov	w24, w22
   218e0:	mov	x22, x15
   218e4:	bl	229ec <get_python_format_unnamed_arg_count@@Base+0x2d24>
   218e8:	mov	w8, #0x18                  	// #24
   218ec:	madd	x8, x21, x8, x22
   218f0:	ldr	x9, [sp, #64]
   218f4:	str	x0, [x8, #16]
   218f8:	ldr	x8, [sp, #48]
   218fc:	mov	w22, w24
   21900:	ldr	w21, [x9]
   21904:	ldr	x15, [x9, #8]
   21908:	ldr	x8, [x8, #8]
   2190c:	mov	x24, x20
   21910:	mov	w9, w21
   21914:	ldr	x12, [sp, #64]
   21918:	mov	w10, #0x18                  	// #24
   2191c:	mul	x11, x21, x10
   21920:	str	w19, [x15, x11]
   21924:	ldr	w11, [x12, #16]
   21928:	add	w9, w9, #0x1
   2192c:	ldr	w13, [sp, #60]
   21930:	mul	x10, x26, x10
   21934:	add	w11, w11, w19
   21938:	str	w9, [x12]
   2193c:	str	w11, [x12, #16]
   21940:	ldr	w10, [x8, x10]
   21944:	add	w11, w19, w13
   21948:	add	w22, w19, w22
   2194c:	cmp	w11, w10
   21950:	csel	w16, wzr, w11, eq  // eq = none
   21954:	cinc	w20, w26, eq  // eq = none
   21958:	cmp	w28, w22
   2195c:	b.ls	2196c <get_python_format_unnamed_arg_count@@Base+0x1ca4>  // b.plast
   21960:	ldr	x10, [sp, #64]
   21964:	ldr	w10, [x10, #4]
   21968:	b	21838 <get_python_format_unnamed_arg_count@@Base+0x1b70>
   2196c:	cbz	w9, 21da8 <get_python_format_unnamed_arg_count@@Base+0x20e0>
   21970:	ldr	w8, [x15, #4]
   21974:	cbnz	w8, 219ac <get_python_format_unnamed_arg_count@@Base+0x1ce4>
   21978:	ldr	x19, [sp, #64]
   2197c:	mov	w1, #0x1                   	// #1
   21980:	mov	w21, w16
   21984:	mov	x0, x19
   21988:	bl	23c50 <get_python_format_unnamed_arg_count@@Base+0x3f88>
   2198c:	ldr	x15, [x19, #8]
   21990:	ldr	w8, [x15, #4]
   21994:	cbnz	w8, 21da8 <get_python_format_unnamed_arg_count@@Base+0x20e0>
   21998:	ldr	w8, [x15]
   2199c:	cmp	w8, #0x1
   219a0:	b.ne	21da8 <get_python_format_unnamed_arg_count@@Base+0x20e0>  // b.any
   219a4:	mov	w16, w21
   219a8:	str	w8, [x15, #4]
   219ac:	ldr	w8, [sp, #44]
   219b0:	str	w28, [sp, #24]
   219b4:	cmp	w22, w8
   219b8:	b.cs	21afc <get_python_format_unnamed_arg_count@@Base+0x1e34>  // b.hs, b.nlast
   219bc:	ldr	x8, [sp, #48]
   219c0:	mov	w26, wzr
   219c4:	mov	w10, wzr
   219c8:	ldr	x9, [x8, #8]
   219cc:	ldr	x8, [sp, #64]
   219d0:	ldr	w8, [x8]
   219d4:	mov	w19, #0x18                  	// #24
   219d8:	umull	x11, w20, w19
   219dc:	ldr	w13, [x9, x11]
   219e0:	ldr	x11, [sp, #64]
   219e4:	umull	x12, w10, w19
   219e8:	ldr	w12, [x15, x12]
   219ec:	sub	w13, w13, w16
   219f0:	ldr	w11, [x11, #4]
   219f4:	mov	w14, w20
   219f8:	sub	w12, w12, w26
   219fc:	cmp	w13, w12
   21a00:	csel	w20, w13, w12, cc  // cc = lo, ul, last
   21a04:	cmp	w8, w11
   21a08:	mov	w21, w10
   21a0c:	str	w16, [sp, #60]
   21a10:	b.cc	21a60 <get_python_format_unnamed_arg_count@@Base+0x1d98>  // b.lo, b.ul, b.last
   21a14:	mov	w9, #0x1                   	// #1
   21a18:	add	w10, w8, #0x1
   21a1c:	bfi	w9, w11, #1, #31
   21a20:	str	w26, [sp, #40]
   21a24:	ldr	x26, [sp, #64]
   21a28:	cmp	w9, w10
   21a2c:	csinc	w8, w9, w8, hi  // hi = pmore
   21a30:	umull	x1, w8, w19
   21a34:	mov	x0, x15
   21a38:	str	w8, [x26, #4]
   21a3c:	mov	x28, x14
   21a40:	bl	a460 <xrealloc@plt>
   21a44:	ldr	x9, [sp, #48]
   21a48:	str	x0, [x26, #8]
   21a4c:	ldr	w8, [x26]
   21a50:	ldr	w26, [sp, #40]
   21a54:	ldr	x9, [x9, #8]
   21a58:	mov	x14, x28
   21a5c:	mov	x15, x0
   21a60:	umaddl	x0, w8, w19, x15
   21a64:	madd	x1, x14, x19, x9
   21a68:	madd	x2, x21, x19, x15
   21a6c:	mov	x19, x14
   21a70:	bl	235a0 <get_python_format_unnamed_arg_count@@Base+0x38d8>
   21a74:	ldr	x8, [sp, #64]
   21a78:	ldr	x15, [x8, #8]
   21a7c:	ldr	w8, [x8]
   21a80:	tbz	w0, #0, 21d60 <get_python_format_unnamed_arg_count@@Base+0x2098>
   21a84:	ldr	x12, [sp, #64]
   21a88:	mov	w10, #0x18                  	// #24
   21a8c:	mul	x9, x8, x10
   21a90:	str	w20, [x15, x9]
   21a94:	ldr	w9, [x12, #16]
   21a98:	add	w8, w8, #0x1
   21a9c:	str	w8, [x12]
   21aa0:	mul	x13, x19, x10
   21aa4:	add	w11, w9, w20
   21aa8:	ldr	x9, [sp, #48]
   21aac:	str	w11, [x12, #16]
   21ab0:	ldr	w12, [sp, #60]
   21ab4:	mul	x10, x21, x10
   21ab8:	ldr	x9, [x9, #8]
   21abc:	ldr	w10, [x15, x10]
   21ac0:	add	w12, w20, w12
   21ac4:	add	w14, w20, w26
   21ac8:	ldr	w13, [x9, x13]
   21acc:	add	w22, w20, w22
   21ad0:	cmp	w12, w13
   21ad4:	csel	w16, wzr, w12, eq  // eq = none
   21ad8:	ldr	w12, [sp, #44]
   21adc:	cinc	w20, w19, eq  // eq = none
   21ae0:	cmp	w14, w10
   21ae4:	cinc	w10, w21, eq  // eq = none
   21ae8:	csel	w26, wzr, w14, eq  // eq = none
   21aec:	cmp	w22, w12
   21af0:	b.cc	219d4 <get_python_format_unnamed_arg_count@@Base+0x1d0c>  // b.lo, b.ul, b.last
   21af4:	ldr	w8, [sp, #44]
   21af8:	b	21b04 <get_python_format_unnamed_arg_count@@Base+0x1e3c>
   21afc:	ldr	x9, [sp, #64]
   21b00:	ldr	w11, [x9, #16]
   21b04:	ldur	x20, [x29, #-96]
   21b08:	ldr	w21, [sp, #28]
   21b0c:	ldr	x22, [sp, #32]
   21b10:	cmp	w11, w8
   21b14:	b.ne	21da8 <get_python_format_unnamed_arg_count@@Base+0x20e0>  // b.any
   21b18:	mov	w19, wzr
   21b1c:	cbz	w8, 21b58 <get_python_format_unnamed_arg_count@@Base+0x1e90>
   21b20:	mov	w28, wzr
   21b24:	ldr	x26, [sp, #64]
   21b28:	mov	w1, w28
   21b2c:	mov	x0, x26
   21b30:	bl	232fc <get_python_format_unnamed_arg_count@@Base+0x3634>
   21b34:	ldr	x8, [x26, #8]
   21b38:	mov	w9, #0x18                  	// #24
   21b3c:	add	w28, w28, w22
   21b40:	umaddl	x8, w0, w9, x8
   21b44:	mov	w9, #0x1                   	// #1
   21b48:	str	w9, [x8, #4]
   21b4c:	ldr	w8, [x26, #16]
   21b50:	cmp	w28, w8
   21b54:	b.cc	21b24 <get_python_format_unnamed_arg_count@@Base+0x1e5c>  // b.lo, b.ul, b.last
   21b58:	tbnz	w19, #0, 21c0c <get_python_format_unnamed_arg_count@@Base+0x1f44>
   21b5c:	ldr	w8, [sp, #24]
   21b60:	ldr	w9, [sp, #44]
   21b64:	ldr	x19, [sp, #64]
   21b68:	sub	w26, w9, w8
   21b6c:	mov	x0, x19
   21b70:	mov	w1, w26
   21b74:	bl	23c50 <get_python_format_unnamed_arg_count@@Base+0x3f88>
   21b78:	ldr	w8, [x19]
   21b7c:	ldr	w9, [x19, #28]
   21b80:	mov	w28, w0
   21b84:	sub	w19, w8, w0
   21b88:	cmp	w19, w9
   21b8c:	b.ls	21ba8 <get_python_format_unnamed_arg_count@@Base+0x1ee0>  // b.plast
   21b90:	ldr	x22, [sp, #64]
   21b94:	mov	w8, #0x18                  	// #24
   21b98:	umull	x0, w19, w8
   21b9c:	str	w19, [x22, #28]
   21ba0:	bl	a590 <xmalloc@plt>
   21ba4:	str	x0, [x22, #32]
   21ba8:	ldr	w8, [sp, #44]
   21bac:	subs	w8, w8, w28
   21bb0:	b.ls	21bf4 <get_python_format_unnamed_arg_count@@Base+0x1f2c>  // b.plast
   21bb4:	mov	w10, #0x18                  	// #24
   21bb8:	mov	x9, xzr
   21bbc:	umull	x10, w28, w10
   21bc0:	ldr	x12, [sp, #64]
   21bc4:	subs	x8, x8, #0x1
   21bc8:	ldr	x11, [x12, #8]
   21bcc:	ldr	x12, [x12, #32]
   21bd0:	add	x11, x11, x10
   21bd4:	add	x11, x11, x9
   21bd8:	ldr	x13, [x11, #16]
   21bdc:	ldr	q0, [x11]
   21be0:	add	x11, x12, x9
   21be4:	add	x9, x9, #0x18
   21be8:	str	x13, [x11, #16]
   21bec:	str	q0, [x11]
   21bf0:	b.ne	21bc0 <get_python_format_unnamed_arg_count@@Base+0x1ef8>  // b.any
   21bf4:	ldr	x9, [sp, #64]
   21bf8:	ldr	w8, [sp, #24]
   21bfc:	str	w19, [x9, #24]
   21c00:	str	w8, [x9, #40]
   21c04:	str	w28, [x9]
   21c08:	str	w26, [x9, #16]
   21c0c:	ldr	x0, [sp, #64]
   21c10:	bl	22434 <get_python_format_unnamed_arg_count@@Base+0x276c>
   21c14:	ldr	x8, [sp, #64]
   21c18:	stur	x8, [x29, #-48]
   21c1c:	tbz	w25, #0, 21c5c <get_python_format_unnamed_arg_count@@Base+0x1f94>
   21c20:	mov	w28, #0xffffffff            	// #-1
   21c24:	mov	w8, #0x1                   	// #1
   21c28:	tbnz	w21, #31, 21d50 <get_python_format_unnamed_arg_count@@Base+0x2088>
   21c2c:	ldr	x9, [x29, #8]
   21c30:	cbz	x9, 21d50 <get_python_format_unnamed_arg_count@@Base+0x2088>
   21c34:	ldr	x0, [sp, #64]
   21c38:	bl	22434 <get_python_format_unnamed_arg_count@@Base+0x276c>
   21c3c:	cbz	w21, 21d30 <get_python_format_unnamed_arg_count@@Base+0x2068>
   21c40:	ldr	x9, [sp, #64]
   21c44:	ldp	w8, w9, [x9]
   21c48:	cmp	w8, w9
   21c4c:	b.cs	21c84 <get_python_format_unnamed_arg_count@@Base+0x1fbc>  // b.hs, b.nlast
   21c50:	ldr	x9, [sp, #64]
   21c54:	ldr	x0, [x9, #8]
   21c58:	b	21cb8 <get_python_format_unnamed_arg_count@@Base+0x1ff0>
   21c5c:	tbnz	w21, #31, 21c78 <get_python_format_unnamed_arg_count@@Base+0x1fb0>
   21c60:	ldr	x2, [sp, #64]
   21c64:	add	x0, x29, #0x8
   21c68:	mov	w1, w21
   21c6c:	add	w28, w21, #0x1
   21c70:	bl	22830 <get_python_format_unnamed_arg_count@@Base+0x2b68>
   21c74:	b	21d4c <get_python_format_unnamed_arg_count@@Base+0x2084>
   21c78:	mov	w8, #0x1                   	// #1
   21c7c:	mov	w28, w21
   21c80:	b	21d50 <get_python_format_unnamed_arg_count@@Base+0x2088>
   21c84:	ldr	x19, [sp, #64]
   21c88:	mov	w10, #0x1                   	// #1
   21c8c:	add	w11, w8, #0x1
   21c90:	bfi	w10, w9, #1, #31
   21c94:	ldr	x0, [x19, #8]
   21c98:	cmp	w10, w11
   21c9c:	mov	w12, #0x18                  	// #24
   21ca0:	csinc	w8, w10, w8, hi  // hi = pmore
   21ca4:	umull	x1, w8, w12
   21ca8:	str	w8, [x19, #4]
   21cac:	bl	a460 <xrealloc@plt>
   21cb0:	ldr	w8, [x19]
   21cb4:	str	x0, [x19, #8]
   21cb8:	cbz	w8, 21d0c <get_python_format_unnamed_arg_count@@Base+0x2044>
   21cbc:	sub	w9, w8, #0x1
   21cc0:	mov	w10, #0x18                  	// #24
   21cc4:	umull	x9, w9, w10
   21cc8:	umull	x10, w8, w10
   21ccc:	add	x11, x0, x9
   21cd0:	ldr	x12, [x11, #16]
   21cd4:	ldr	q0, [x11]
   21cd8:	add	x11, x0, x10
   21cdc:	sub	w8, w8, #0x1
   21ce0:	str	x12, [x11, #16]
   21ce4:	str	q0, [x11]
   21ce8:	ldr	x11, [sp, #64]
   21cec:	sub	x9, x9, #0x18
   21cf0:	sub	x10, x10, #0x18
   21cf4:	ldr	x0, [x11, #8]
   21cf8:	cbnz	w8, 21ccc <get_python_format_unnamed_arg_count@@Base+0x2004>
   21cfc:	ldr	x8, [sp, #64]
   21d00:	ldr	w8, [x8]
   21d04:	add	w8, w8, #0x1
   21d08:	b	21d10 <get_python_format_unnamed_arg_count@@Base+0x2048>
   21d0c:	mov	w8, #0x1                   	// #1
   21d10:	stp	wzr, wzr, [x0, #4]
   21d14:	str	w21, [x0]
   21d18:	ldr	x0, [sp, #64]
   21d1c:	ldr	w9, [x0, #16]
   21d20:	str	w8, [x0]
   21d24:	add	w8, w9, w21
   21d28:	str	w8, [x0, #16]
   21d2c:	bl	23e18 <get_python_format_unnamed_arg_count@@Base+0x4150>
   21d30:	ldr	x0, [sp, #64]
   21d34:	bl	22434 <get_python_format_unnamed_arg_count@@Base+0x276c>
   21d38:	ldr	x0, [x29, #8]
   21d3c:	ldur	x1, [x29, #-48]
   21d40:	bl	22c28 <get_python_format_unnamed_arg_count@@Base+0x2f60>
   21d44:	str	x0, [x29, #8]
   21d48:	mov	w28, #0xffffffff            	// #-1
   21d4c:	mov	w8, #0x1                   	// #1
   21d50:	cbz	w8, 222fc <get_python_format_unnamed_arg_count@@Base+0x2634>
   21d54:	ldur	x8, [x29, #-104]
   21d58:	ldr	x21, [x8]
   21d5c:	b	20c78 <get_python_format_unnamed_arg_count@@Base+0xfb0>
   21d60:	mov	w9, #0x18                  	// #24
   21d64:	madd	x8, x8, x9, x15
   21d68:	ldr	w8, [x8, #4]
   21d6c:	cbz	w8, 21d90 <get_python_format_unnamed_arg_count@@Base+0x20c8>
   21d70:	ldr	x8, [sp, #64]
   21d74:	ldur	x20, [x29, #-96]
   21d78:	ldr	w21, [sp, #28]
   21d7c:	ldr	x22, [sp, #32]
   21d80:	ldr	w8, [x8, #16]
   21d84:	mov	w19, #0x1                   	// #1
   21d88:	cbnz	w8, 21b20 <get_python_format_unnamed_arg_count@@Base+0x1e58>
   21d8c:	b	21b58 <get_python_format_unnamed_arg_count@@Base+0x1e90>
   21d90:	ldr	x0, [sp, #64]
   21d94:	bl	24588 <get_python_format_unnamed_arg_count@@Base+0x48c0>
   21d98:	ldur	x20, [x29, #-96]
   21d9c:	ldr	w21, [sp, #28]
   21da0:	str	x0, [sp, #64]
   21da4:	cbnz	x0, 21c14 <get_python_format_unnamed_arg_count@@Base+0x1f4c>
   21da8:	bl	a7e0 <abort@plt>
   21dac:	cbz	w9, 21df0 <get_python_format_unnamed_arg_count@@Base+0x2128>
   21db0:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   21db4:	add	x1, x1, #0xfd1
   21db8:	mov	w2, #0x5                   	// #5
   21dbc:	mov	x0, xzr
   21dc0:	bl	acd0 <dcgettext@plt>
   21dc4:	ldr	w1, [x24]
   21dc8:	ldrb	w2, [x19]
   21dcc:	bl	aa20 <xasprintf@plt>
   21dd0:	ldur	x8, [x29, #-80]
   21dd4:	ldur	x10, [x29, #-96]
   21dd8:	str	x0, [x8]
   21ddc:	cbz	x10, 222fc <get_python_format_unnamed_arg_count@@Base+0x2634>
   21de0:	ldur	x8, [x29, #-88]
   21de4:	mov	w0, wzr
   21de8:	sub	x8, x21, x8
   21dec:	b	22028 <get_python_format_unnamed_arg_count@@Base+0x2360>
   21df0:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   21df4:	add	x1, x1, #0x7e0
   21df8:	mov	w2, #0x5                   	// #5
   21dfc:	mov	x0, xzr
   21e00:	bl	acd0 <dcgettext@plt>
   21e04:	bl	a5a0 <xstrdup@plt>
   21e08:	b	2200c <get_python_format_unnamed_arg_count@@Base+0x2344>
   21e0c:	ldr	x9, [x29, #8]
   21e10:	ldp	x10, x3, [sp, #88]
   21e14:	ldr	w6, [sp, #84]
   21e18:	ldur	x8, [x29, #-104]
   21e1c:	ands	w20, w6, #0xff
   21e20:	str	x21, [x8]
   21e24:	ldr	x8, [sp, #104]
   21e28:	str	w28, [x8]
   21e2c:	ldr	x8, [sp, #112]
   21e30:	str	x9, [x8]
   21e34:	str	x10, [x3]
   21e38:	b.eq	21f68 <get_python_format_unnamed_arg_count@@Base+0x22a0>  // b.none
   21e3c:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   21e40:	add	x1, x1, #0x7c
   21e44:	mov	w2, #0x5                   	// #5
   21e48:	mov	x0, xzr
   21e4c:	bl	acd0 <dcgettext@plt>
   21e50:	sub	w1, w20, #0x1
   21e54:	mov	w2, w20
   21e58:	bl	aa20 <xasprintf@plt>
   21e5c:	ldur	x9, [x29, #-80]
   21e60:	mov	x8, x0
   21e64:	mov	w0, wzr
   21e68:	str	x8, [x9]
   21e6c:	b	22300 <get_python_format_unnamed_arg_count@@Base+0x2638>
   21e70:	ldr	w8, [sp, #84]
   21e74:	sub	x19, x21, #0x1
   21e78:	and	w8, w8, #0xff
   21e7c:	cmp	w8, #0x29
   21e80:	b.eq	21f20 <get_python_format_unnamed_arg_count@@Base+0x2258>  // b.none
   21e84:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   21e88:	add	x1, x1, #0x7c
   21e8c:	mov	w2, #0x5                   	// #5
   21e90:	mov	x0, xzr
   21e94:	bl	acd0 <dcgettext@plt>
   21e98:	mov	w1, #0x29                  	// #41
   21e9c:	mov	w2, #0x28                  	// #40
   21ea0:	b	22008 <get_python_format_unnamed_arg_count@@Base+0x2340>
   21ea4:	ldr	w8, [sp, #84]
   21ea8:	sub	x19, x21, #0x1
   21eac:	and	w8, w8, #0xff
   21eb0:	cmp	w8, #0x3e
   21eb4:	b.eq	21f20 <get_python_format_unnamed_arg_count@@Base+0x2258>  // b.none
   21eb8:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   21ebc:	add	x1, x1, #0x7c
   21ec0:	mov	w2, #0x5                   	// #5
   21ec4:	mov	x0, xzr
   21ec8:	bl	acd0 <dcgettext@plt>
   21ecc:	mov	w1, #0x3e                  	// #62
   21ed0:	mov	w2, #0x3c                  	// #60
   21ed4:	b	22008 <get_python_format_unnamed_arg_count@@Base+0x2340>
   21ed8:	ldr	w8, [sp, #84]
   21edc:	sub	x19, x21, #0x1
   21ee0:	and	w8, w8, #0xff
   21ee4:	cmp	w8, #0x7d
   21ee8:	b.eq	21f20 <get_python_format_unnamed_arg_count@@Base+0x2258>  // b.none
   21eec:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   21ef0:	add	x1, x1, #0x7c
   21ef4:	mov	w2, #0x5                   	// #5
   21ef8:	mov	x0, xzr
   21efc:	bl	acd0 <dcgettext@plt>
   21f00:	mov	w1, #0x7d                  	// #125
   21f04:	mov	w2, #0x7b                  	// #123
   21f08:	b	22008 <get_python_format_unnamed_arg_count@@Base+0x2340>
   21f0c:	ldr	w8, [sp, #84]
   21f10:	sub	x19, x21, #0x1
   21f14:	and	w8, w8, #0xff
   21f18:	cmp	w8, #0x5d
   21f1c:	b.ne	21fec <get_python_format_unnamed_arg_count@@Base+0x2324>  // b.any
   21f20:	ldr	w5, [x24]
   21f24:	ldur	x6, [x29, #-80]
   21f28:	add	x0, x29, #0x8
   21f2c:	mov	w1, w26
   21f30:	mov	x2, x27
   21f34:	mov	w3, wzr
   21f38:	mov	x4, xzr
   21f3c:	bl	22548 <get_python_format_unnamed_arg_count@@Base+0x2880>
   21f40:	ldur	x10, [x29, #-96]
   21f44:	tbz	w0, #0, 22018 <get_python_format_unnamed_arg_count@@Base+0x2350>
   21f48:	ldur	x8, [x29, #-104]
   21f4c:	str	x21, [x8]
   21f50:	ldp	x8, x9, [sp, #104]
   21f54:	str	w28, [x8]
   21f58:	ldr	x8, [x29, #8]
   21f5c:	str	x8, [x9]
   21f60:	ldp	x9, x8, [sp, #88]
   21f64:	str	x9, [x8]
   21f68:	mov	w0, #0x1                   	// #1
   21f6c:	b	22300 <get_python_format_unnamed_arg_count@@Base+0x2638>
   21f70:	ldr	w8, [sp, #80]
   21f74:	sub	x20, x21, #0x1
   21f78:	tbz	w8, #0, 22038 <get_python_format_unnamed_arg_count@@Base+0x2370>
   21f7c:	ldr	w8, [sp, #84]
   21f80:	ldr	w5, [x24]
   21f84:	and	w8, w8, #0xff
   21f88:	cmp	w8, #0x3e
   21f8c:	b.ne	2213c <get_python_format_unnamed_arg_count@@Base+0x2474>  // b.any
   21f90:	adrp	x4, 39000 <get_search_path@@Base+0x2b4c>
   21f94:	add	x4, x4, #0xf74
   21f98:	add	x0, x29, #0x8
   21f9c:	mov	w3, #0x1                   	// #1
   21fa0:	mov	w1, w26
   21fa4:	mov	x2, x27
   21fa8:	b	22150 <get_python_format_unnamed_arg_count@@Base+0x2488>
   21fac:	cbz	w8, 220c0 <get_python_format_unnamed_arg_count@@Base+0x23f8>
   21fb0:	sub	x19, x21, #0x1
   21fb4:	ldur	x20, [x29, #-96]
   21fb8:	ldur	x21, [x29, #-80]
   21fbc:	sub	w8, w8, #0x20
   21fc0:	cmp	w8, #0x5e
   21fc4:	b.hi	22108 <get_python_format_unnamed_arg_count@@Base+0x2440>  // b.pmore
   21fc8:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   21fcc:	add	x1, x1, #0x80e
   21fd0:	mov	w2, #0x5                   	// #5
   21fd4:	mov	x0, xzr
   21fd8:	bl	acd0 <dcgettext@plt>
   21fdc:	ldr	w1, [x24]
   21fe0:	ldrb	w2, [x19]
   21fe4:	bl	aa20 <xasprintf@plt>
   21fe8:	b	22124 <get_python_format_unnamed_arg_count@@Base+0x245c>
   21fec:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   21ff0:	add	x1, x1, #0x7c
   21ff4:	mov	w2, #0x5                   	// #5
   21ff8:	mov	x0, xzr
   21ffc:	bl	acd0 <dcgettext@plt>
   22000:	mov	w1, #0x5d                  	// #93
   22004:	mov	w2, #0x5b                  	// #91
   22008:	bl	aa20 <xasprintf@plt>
   2200c:	ldur	x8, [x29, #-80]
   22010:	ldur	x10, [x29, #-96]
   22014:	str	x0, [x8]
   22018:	cbz	x10, 222fc <get_python_format_unnamed_arg_count@@Base+0x2634>
   2201c:	ldur	x8, [x29, #-88]
   22020:	mov	w0, wzr
   22024:	sub	x8, x19, x8
   22028:	ldrb	w9, [x10, x8]
   2202c:	orr	w9, w9, #0x4
   22030:	strb	w9, [x10, x8]
   22034:	b	22300 <get_python_format_unnamed_arg_count@@Base+0x2638>
   22038:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2203c:	add	x1, x1, #0x13b
   22040:	mov	w2, #0x5                   	// #5
   22044:	mov	x0, xzr
   22048:	bl	acd0 <dcgettext@plt>
   2204c:	ldr	w1, [x24]
   22050:	bl	aa20 <xasprintf@plt>
   22054:	ldur	x8, [x29, #-80]
   22058:	str	x0, [x8]
   2205c:	b	22194 <get_python_format_unnamed_arg_count@@Base+0x24cc>
   22060:	cbz	x20, 222fc <get_python_format_unnamed_arg_count@@Base+0x2634>
   22064:	ldr	x8, [x22]
   22068:	mov	x9, x8
   2206c:	ldrb	w10, [x9], #-1
   22070:	cmp	w10, #0x0
   22074:	csel	x8, x9, x8, eq  // eq = none
   22078:	sub	x8, x8, x19
   2207c:	ldrb	w9, [x20, x8]
   22080:	orr	w9, w9, #0x4
   22084:	strb	w9, [x20, x8]
   22088:	b	222fc <get_python_format_unnamed_arg_count@@Base+0x2634>
   2208c:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   22090:	add	x1, x1, #0x47
   22094:	mov	w2, #0x5                   	// #5
   22098:	mov	x0, xzr
   2209c:	bl	acd0 <dcgettext@plt>
   220a0:	bl	a5a0 <xstrdup@plt>
   220a4:	ldur	x8, [x29, #-80]
   220a8:	str	x0, [x8]
   220ac:	cbz	x20, 222fc <get_python_format_unnamed_arg_count@@Base+0x2634>
   220b0:	sub	x8, x22, x19
   220b4:	mov	w0, wzr
   220b8:	add	x8, x8, x20
   220bc:	b	220f8 <get_python_format_unnamed_arg_count@@Base+0x2430>
   220c0:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   220c4:	add	x1, x1, #0x7e0
   220c8:	mov	w2, #0x5                   	// #5
   220cc:	mov	x0, xzr
   220d0:	bl	acd0 <dcgettext@plt>
   220d4:	bl	a5a0 <xstrdup@plt>
   220d8:	ldur	x8, [x29, #-80]
   220dc:	ldur	x9, [x29, #-96]
   220e0:	str	x0, [x8]
   220e4:	cbz	x9, 222fc <get_python_format_unnamed_arg_count@@Base+0x2634>
   220e8:	ldur	x8, [x29, #-88]
   220ec:	mov	w0, wzr
   220f0:	sub	x8, x21, x8
   220f4:	add	x8, x8, x9
   220f8:	ldurb	w9, [x8, #-2]
   220fc:	orr	w9, w9, #0x4
   22100:	sturb	w9, [x8, #-2]
   22104:	b	22300 <get_python_format_unnamed_arg_count@@Base+0x2638>
   22108:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2210c:	add	x1, x1, #0x862
   22110:	mov	w2, #0x5                   	// #5
   22114:	mov	x0, xzr
   22118:	bl	acd0 <dcgettext@plt>
   2211c:	ldr	w1, [x24]
   22120:	bl	aa20 <xasprintf@plt>
   22124:	ldur	x8, [x29, #-88]
   22128:	str	x0, [x21]
   2212c:	cbz	x20, 222fc <get_python_format_unnamed_arg_count@@Base+0x2634>
   22130:	mov	w0, wzr
   22134:	sub	x8, x19, x8
   22138:	b	222ec <get_python_format_unnamed_arg_count@@Base+0x2624>
   2213c:	add	x0, x29, #0x8
   22140:	mov	w1, w26
   22144:	mov	x2, x27
   22148:	mov	w3, wzr
   2214c:	mov	x4, xzr
   22150:	ldur	x6, [x29, #-80]
   22154:	bl	22548 <get_python_format_unnamed_arg_count@@Base+0x2880>
   22158:	ldp	x12, x10, [sp, #88]
   2215c:	tbz	w0, #0, 22194 <get_python_format_unnamed_arg_count@@Base+0x24cc>
   22160:	ldur	x8, [x29, #-104]
   22164:	tst	w19, #0x1
   22168:	mov	w0, #0x1                   	// #1
   2216c:	cinc	w9, w0, ne  // ne = any
   22170:	str	x21, [x8]
   22174:	ldp	x8, x11, [sp, #104]
   22178:	str	w28, [x8]
   2217c:	ldr	x8, [x29, #8]
   22180:	str	x8, [x11]
   22184:	ldr	x8, [sp, #72]
   22188:	str	x12, [x10]
   2218c:	str	w9, [x8]
   22190:	b	22300 <get_python_format_unnamed_arg_count@@Base+0x2638>
   22194:	ldur	x10, [x29, #-96]
   22198:	cbz	x10, 222fc <get_python_format_unnamed_arg_count@@Base+0x2634>
   2219c:	ldur	x8, [x29, #-88]
   221a0:	mov	w0, wzr
   221a4:	sub	x8, x20, x8
   221a8:	b	22028 <get_python_format_unnamed_arg_count@@Base+0x2360>
   221ac:	ldur	x11, [x29, #-96]
   221b0:	cbz	x11, 222fc <get_python_format_unnamed_arg_count@@Base+0x2634>
   221b4:	ldur	x8, [x29, #-104]
   221b8:	ldr	x8, [x8]
   221bc:	mov	x9, x8
   221c0:	ldrb	w10, [x9], #-1
   221c4:	cmp	w10, #0x0
   221c8:	csel	x8, x9, x8, eq  // eq = none
   221cc:	ldur	x9, [x29, #-88]
   221d0:	sub	x8, x8, x9
   221d4:	ldrb	w9, [x11, x8]
   221d8:	orr	w9, w9, #0x4
   221dc:	strb	w9, [x11, x8]
   221e0:	b	222fc <get_python_format_unnamed_arg_count@@Base+0x2634>
   221e4:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   221e8:	add	x1, x1, #0xa0
   221ec:	mov	w2, #0x5                   	// #5
   221f0:	mov	x0, xzr
   221f4:	bl	acd0 <dcgettext@plt>
   221f8:	ldr	w1, [x24]
   221fc:	bl	aa20 <xasprintf@plt>
   22200:	ldur	x8, [x29, #-80]
   22204:	str	x0, [x8]
   22208:	ldur	x10, [x29, #-96]
   2220c:	cbz	x10, 222fc <get_python_format_unnamed_arg_count@@Base+0x2634>
   22210:	ldur	x9, [x29, #-88]
   22214:	sub	x8, x21, #0x1
   22218:	mov	w0, wzr
   2221c:	sub	x8, x8, x9
   22220:	b	22028 <get_python_format_unnamed_arg_count@@Base+0x2360>
   22224:	cbz	x20, 222fc <get_python_format_unnamed_arg_count@@Base+0x2634>
   22228:	ldr	x8, [x21]
   2222c:	mov	w0, wzr
   22230:	mov	x9, x8
   22234:	ldrb	w10, [x9], #-1
   22238:	cmp	w10, #0x0
   2223c:	csel	x8, x9, x8, eq  // eq = none
   22240:	b	222e4 <get_python_format_unnamed_arg_count@@Base+0x261c>
   22244:	cbz	x20, 222fc <get_python_format_unnamed_arg_count@@Base+0x2634>
   22248:	ldur	x9, [x29, #-88]
   2224c:	sub	x8, x21, #0x1
   22250:	sub	x8, x8, x9
   22254:	b	2207c <get_python_format_unnamed_arg_count@@Base+0x23b4>
   22258:	cbz	x20, 222fc <get_python_format_unnamed_arg_count@@Base+0x2634>
   2225c:	ldur	x8, [x29, #-104]
   22260:	ldr	x8, [x8]
   22264:	b	22068 <get_python_format_unnamed_arg_count@@Base+0x23a0>
   22268:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2226c:	add	x1, x1, #0xe6
   22270:	mov	w2, #0x5                   	// #5
   22274:	mov	x0, xzr
   22278:	bl	acd0 <dcgettext@plt>
   2227c:	ldr	w1, [x24]
   22280:	bl	aa20 <xasprintf@plt>
   22284:	ldur	x8, [x29, #-80]
   22288:	str	x0, [x8]
   2228c:	cbz	x20, 222fc <get_python_format_unnamed_arg_count@@Base+0x2634>
   22290:	ldur	x8, [x29, #-104]
   22294:	ldr	x8, [x8]
   22298:	mov	x9, x8
   2229c:	ldrb	w10, [x9], #-1
   222a0:	cmp	w10, #0x0
   222a4:	csel	x8, x9, x8, eq  // eq = none
   222a8:	sub	x8, x8, x21
   222ac:	b	2207c <get_python_format_unnamed_arg_count@@Base+0x23b4>
   222b0:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   222b4:	add	x1, x1, #0xe
   222b8:	mov	w2, #0x5                   	// #5
   222bc:	mov	x0, xzr
   222c0:	bl	acd0 <dcgettext@plt>
   222c4:	ldr	w1, [x24]
   222c8:	mov	w2, w26
   222cc:	bl	aa20 <xasprintf@plt>
   222d0:	ldur	x8, [x29, #-80]
   222d4:	str	x0, [x8]
   222d8:	cbz	x20, 222fc <get_python_format_unnamed_arg_count@@Base+0x2634>
   222dc:	mov	w0, wzr
   222e0:	sub	x8, x21, #0x1
   222e4:	ldur	x9, [x29, #-88]
   222e8:	sub	x8, x8, x9
   222ec:	ldrb	w9, [x20, x8]
   222f0:	orr	w9, w9, #0x4
   222f4:	strb	w9, [x20, x8]
   222f8:	b	22300 <get_python_format_unnamed_arg_count@@Base+0x2638>
   222fc:	mov	w0, wzr
   22300:	ldp	x20, x19, [sp, #320]
   22304:	ldp	x22, x21, [sp, #304]
   22308:	ldp	x24, x23, [sp, #288]
   2230c:	ldp	x26, x25, [sp, #272]
   22310:	ldp	x28, x27, [sp, #256]
   22314:	ldp	x29, x30, [sp, #240]
   22318:	ldr	d8, [sp, #224]
   2231c:	add	sp, sp, #0x150
   22320:	ret
   22324:	stp	x29, x30, [sp, #-48]!
   22328:	str	x21, [sp, #16]
   2232c:	stp	x20, x19, [sp, #32]
   22330:	mov	x29, sp
   22334:	mov	x19, x0
   22338:	bl	22434 <get_python_format_unnamed_arg_count@@Base+0x276c>
   2233c:	ldr	w8, [x19]
   22340:	cbz	w8, 22378 <get_python_format_unnamed_arg_count@@Base+0x26b0>
   22344:	add	x8, x8, x8, lsl #1
   22348:	mov	x20, xzr
   2234c:	lsl	x21, x8, #3
   22350:	ldr	x8, [x19, #8]
   22354:	add	x8, x8, x20
   22358:	ldr	w9, [x8, #8]
   2235c:	cmp	w9, #0x7
   22360:	b.ne	2236c <get_python_format_unnamed_arg_count@@Base+0x26a4>  // b.any
   22364:	ldr	x0, [x8, #16]
   22368:	bl	22324 <get_python_format_unnamed_arg_count@@Base+0x265c>
   2236c:	add	x20, x20, #0x18
   22370:	cmp	x21, x20
   22374:	b.ne	22350 <get_python_format_unnamed_arg_count@@Base+0x2688>  // b.any
   22378:	ldr	w8, [x19, #24]
   2237c:	cbz	w8, 223b4 <get_python_format_unnamed_arg_count@@Base+0x26ec>
   22380:	add	x8, x8, x8, lsl #1
   22384:	mov	x20, xzr
   22388:	lsl	x21, x8, #3
   2238c:	ldr	x8, [x19, #32]
   22390:	add	x8, x8, x20
   22394:	ldr	w9, [x8, #8]
   22398:	cmp	w9, #0x7
   2239c:	b.ne	223a8 <get_python_format_unnamed_arg_count@@Base+0x26e0>  // b.any
   223a0:	ldr	x0, [x8, #16]
   223a4:	bl	22324 <get_python_format_unnamed_arg_count@@Base+0x265c>
   223a8:	add	x20, x20, #0x18
   223ac:	cmp	x21, x20
   223b0:	b.ne	2238c <get_python_format_unnamed_arg_count@@Base+0x26c4>  // b.any
   223b4:	mov	x0, x19
   223b8:	bl	23e18 <get_python_format_unnamed_arg_count@@Base+0x4150>
   223bc:	mov	x0, x19
   223c0:	ldp	x20, x19, [sp, #32]
   223c4:	ldr	x21, [sp, #16]
   223c8:	ldp	x29, x30, [sp], #48
   223cc:	b	22434 <get_python_format_unnamed_arg_count@@Base+0x276c>
   223d0:	str	d8, [sp, #-32]!
   223d4:	mov	w0, #0x30                  	// #48
   223d8:	stp	x29, x30, [sp, #8]
   223dc:	str	x19, [sp, #24]
   223e0:	mov	x29, sp
   223e4:	bl	a590 <xmalloc@plt>
   223e8:	movi	v8.2s, #0x1
   223ec:	mov	x19, x0
   223f0:	stp	xzr, xzr, [x0]
   223f4:	str	wzr, [x0, #16]
   223f8:	str	d8, [x0, #24]
   223fc:	mov	w0, #0x18                  	// #24
   22400:	bl	a590 <xmalloc@plt>
   22404:	str	x0, [x19, #32]
   22408:	str	d8, [x0]
   2240c:	str	wzr, [x0, #8]
   22410:	mov	w8, #0x1                   	// #1
   22414:	mov	x0, x19
   22418:	str	w8, [x19, #40]
   2241c:	bl	22434 <get_python_format_unnamed_arg_count@@Base+0x276c>
   22420:	mov	x0, x19
   22424:	ldr	x19, [sp, #24]
   22428:	ldp	x29, x30, [sp, #8]
   2242c:	ldr	d8, [sp], #32
   22430:	ret
   22434:	stp	x29, x30, [sp, #-48]!
   22438:	stp	x22, x21, [sp, #16]
   2243c:	stp	x20, x19, [sp, #32]
   22440:	ldp	w8, w9, [x0]
   22444:	mov	x29, sp
   22448:	cmp	w8, w9
   2244c:	b.hi	22510 <get_python_format_unnamed_arg_count@@Base+0x2848>  // b.pmore
   22450:	mov	x19, x0
   22454:	cbz	w8, 22494 <get_python_format_unnamed_arg_count@@Base+0x27cc>
   22458:	ldr	x8, [x19, #8]
   2245c:	mov	x20, xzr
   22460:	mov	x21, xzr
   22464:	mov	w22, wzr
   22468:	add	x0, x8, x20
   2246c:	bl	22514 <get_python_format_unnamed_arg_count@@Base+0x284c>
   22470:	ldr	x8, [x19, #8]
   22474:	ldr	w9, [x19]
   22478:	add	x21, x21, #0x1
   2247c:	ldr	w10, [x8, x20]
   22480:	cmp	x21, x9
   22484:	add	x20, x20, #0x18
   22488:	add	w22, w10, w22
   2248c:	b.cc	22468 <get_python_format_unnamed_arg_count@@Base+0x27a0>  // b.lo, b.ul, b.last
   22490:	b	22498 <get_python_format_unnamed_arg_count@@Base+0x27d0>
   22494:	mov	w22, wzr
   22498:	ldr	w8, [x19, #16]
   2249c:	cmp	w22, w8
   224a0:	b.ne	22510 <get_python_format_unnamed_arg_count@@Base+0x2848>  // b.any
   224a4:	ldp	w8, w9, [x19, #24]
   224a8:	cmp	w8, w9
   224ac:	b.hi	22510 <get_python_format_unnamed_arg_count@@Base+0x2848>  // b.pmore
   224b0:	cbz	w8, 224f0 <get_python_format_unnamed_arg_count@@Base+0x2828>
   224b4:	ldr	x8, [x19, #32]
   224b8:	mov	x20, xzr
   224bc:	mov	x21, xzr
   224c0:	mov	w22, wzr
   224c4:	add	x0, x8, x20
   224c8:	bl	22514 <get_python_format_unnamed_arg_count@@Base+0x284c>
   224cc:	ldr	x8, [x19, #32]
   224d0:	ldr	w9, [x19, #24]
   224d4:	add	x21, x21, #0x1
   224d8:	ldr	w10, [x8, x20]
   224dc:	cmp	x21, x9
   224e0:	add	x20, x20, #0x18
   224e4:	add	w22, w10, w22
   224e8:	b.cc	224c4 <get_python_format_unnamed_arg_count@@Base+0x27fc>  // b.lo, b.ul, b.last
   224ec:	b	224f4 <get_python_format_unnamed_arg_count@@Base+0x282c>
   224f0:	mov	w22, wzr
   224f4:	ldr	w8, [x19, #40]
   224f8:	cmp	w22, w8
   224fc:	b.ne	22510 <get_python_format_unnamed_arg_count@@Base+0x2848>  // b.any
   22500:	ldp	x20, x19, [sp, #32]
   22504:	ldp	x22, x21, [sp, #16]
   22508:	ldp	x29, x30, [sp], #48
   2250c:	ret
   22510:	bl	a7e0 <abort@plt>
   22514:	stp	x29, x30, [sp, #-16]!
   22518:	ldr	w8, [x0]
   2251c:	mov	x29, sp
   22520:	cbz	w8, 22544 <get_python_format_unnamed_arg_count@@Base+0x287c>
   22524:	ldr	w8, [x0, #8]
   22528:	cmp	w8, #0x7
   2252c:	b.ne	2253c <get_python_format_unnamed_arg_count@@Base+0x2874>  // b.any
   22530:	ldr	x0, [x0, #16]
   22534:	ldp	x29, x30, [sp], #16
   22538:	b	22434 <get_python_format_unnamed_arg_count@@Base+0x276c>
   2253c:	ldp	x29, x30, [sp], #16
   22540:	ret
   22544:	bl	a7e0 <abort@plt>
   22548:	stp	x29, x30, [sp, #-96]!
   2254c:	stp	x24, x23, [sp, #48]
   22550:	stp	x22, x21, [sp, #64]
   22554:	stp	x20, x19, [sp, #80]
   22558:	mov	x19, x6
   2255c:	mov	w20, w5
   22560:	mov	w21, w3
   22564:	mov	x24, x2
   22568:	mov	w22, w1
   2256c:	mov	x23, x0
   22570:	stp	x28, x27, [sp, #16]
   22574:	stp	x26, x25, [sp, #32]
   22578:	mov	x29, sp
   2257c:	cbz	w3, 22614 <get_python_format_unnamed_arg_count@@Base+0x294c>
   22580:	cbz	w22, 22614 <get_python_format_unnamed_arg_count@@Base+0x294c>
   22584:	mov	w8, w22
   22588:	mov	x25, x4
   2258c:	mov	x26, xzr
   22590:	sub	x27, x8, #0x1
   22594:	sub	w28, w21, #0x1
   22598:	ldr	w2, [x25, x26, lsl #2]
   2259c:	cmp	w2, #0x4
   225a0:	b.eq	225d0 <get_python_format_unnamed_arg_count@@Base+0x2908>  // b.none
   225a4:	cmp	w2, #0x2
   225a8:	b.eq	225bc <get_python_format_unnamed_arg_count@@Base+0x28f4>  // b.none
   225ac:	cmp	w2, #0x1
   225b0:	b.ne	22740 <get_python_format_unnamed_arg_count@@Base+0x2a78>  // b.any
   225b4:	ldr	w8, [x24]
   225b8:	b	225dc <get_python_format_unnamed_arg_count@@Base+0x2914>
   225bc:	ldr	w8, [x24]
   225c0:	and	w9, w8, #0xfffffffe
   225c4:	cmp	w9, #0x2
   225c8:	b.ne	225dc <get_python_format_unnamed_arg_count@@Base+0x2914>  // b.any
   225cc:	b	226bc <get_python_format_unnamed_arg_count@@Base+0x29f4>
   225d0:	ldr	w8, [x24]
   225d4:	cmp	w8, #0x1
   225d8:	b.eq	226e8 <get_python_format_unnamed_arg_count@@Base+0x2a20>  // b.none
   225dc:	cmp	w8, #0x4
   225e0:	b.ne	225f4 <get_python_format_unnamed_arg_count@@Base+0x292c>  // b.any
   225e4:	ldr	w1, [x24, #4]
   225e8:	tbnz	w1, #31, 225f4 <get_python_format_unnamed_arg_count@@Base+0x292c>
   225ec:	mov	x0, x23
   225f0:	bl	22744 <get_python_format_unnamed_arg_count@@Base+0x2a7c>
   225f4:	add	x24, x24, #0x8
   225f8:	cmp	w28, w26
   225fc:	add	x8, x26, #0x1
   22600:	b.eq	22610 <get_python_format_unnamed_arg_count@@Base+0x2948>  // b.none
   22604:	cmp	w27, w26
   22608:	mov	x26, x8
   2260c:	b.ne	22598 <get_python_format_unnamed_arg_count@@Base+0x28d0>  // b.any
   22610:	sub	w22, w22, w8
   22614:	cbz	w22, 22684 <get_python_format_unnamed_arg_count@@Base+0x29bc>
   22618:	add	x26, x24, #0x4
   2261c:	ldur	w8, [x26, #-4]
   22620:	cmp	w8, #0x4
   22624:	b.eq	22638 <get_python_format_unnamed_arg_count@@Base+0x2970>  // b.none
   22628:	sub	w8, w8, #0x1
   2262c:	cmp	w8, #0x2
   22630:	b.hi	22678 <get_python_format_unnamed_arg_count@@Base+0x29b0>  // b.pmore
   22634:	b	2268c <get_python_format_unnamed_arg_count@@Base+0x29c4>
   22638:	ldr	w24, [x26]
   2263c:	tbnz	w24, #31, 22678 <get_python_format_unnamed_arg_count@@Base+0x29b0>
   22640:	mov	w0, #0x30                  	// #48
   22644:	bl	a590 <xmalloc@plt>
   22648:	mov	x25, x0
   2264c:	stp	xzr, xzr, [x0]
   22650:	str	wzr, [x0, #16]
   22654:	stp	xzr, xzr, [x0, #24]
   22658:	str	wzr, [x0, #40]
   2265c:	bl	22434 <get_python_format_unnamed_arg_count@@Base+0x276c>
   22660:	mov	x0, x23
   22664:	mov	w1, w24
   22668:	mov	x2, x25
   2266c:	bl	22830 <get_python_format_unnamed_arg_count@@Base+0x2b68>
   22670:	mov	x0, x25
   22674:	bl	22924 <get_python_format_unnamed_arg_count@@Base+0x2c5c>
   22678:	subs	w22, w22, #0x1
   2267c:	add	x26, x26, #0x8
   22680:	b.ne	2261c <get_python_format_unnamed_arg_count@@Base+0x2954>  // b.any
   22684:	mov	w0, #0x1                   	// #1
   22688:	b	22724 <get_python_format_unnamed_arg_count@@Base+0x2a5c>
   2268c:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   22690:	adrp	x2, 3a000 <plural_table_size@@Base+0xc00>
   22694:	mov	w3, w21
   22698:	add	x1, x1, #0x1e7
   2269c:	add	x2, x2, #0x241
   226a0:	mov	w4, #0x5                   	// #5
   226a4:	mov	x0, xzr
   226a8:	bl	ab40 <dcngettext@plt>
   226ac:	mov	w1, w20
   226b0:	mov	w2, w21
   226b4:	bl	aa20 <xasprintf@plt>
   226b8:	b	22718 <get_python_format_unnamed_arg_count@@Base+0x2a50>
   226bc:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   226c0:	add	x1, x1, #0x17c
   226c4:	mov	w2, #0x5                   	// #5
   226c8:	mov	x0, xzr
   226cc:	bl	acd0 <dcgettext@plt>
   226d0:	adrp	x3, 3a000 <plural_table_size@@Base+0xc00>
   226d4:	adrp	x4, 37000 <get_search_path@@Base+0xb4c>
   226d8:	add	w2, w26, #0x1
   226dc:	add	x3, x3, #0x1df
   226e0:	add	x4, x4, #0x3d7
   226e4:	b	22710 <get_python_format_unnamed_arg_count@@Base+0x2a48>
   226e8:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   226ec:	add	x1, x1, #0x17c
   226f0:	mov	w2, #0x5                   	// #5
   226f4:	mov	x0, xzr
   226f8:	bl	acd0 <dcgettext@plt>
   226fc:	adrp	x3, 37000 <get_search_path@@Base+0xb4c>
   22700:	adrp	x4, 3a000 <plural_table_size@@Base+0xc00>
   22704:	add	w2, w26, #0x1
   22708:	add	x3, x3, #0x3d7
   2270c:	add	x4, x4, #0x1df
   22710:	mov	w1, w20
   22714:	bl	aa20 <xasprintf@plt>
   22718:	mov	x8, x0
   2271c:	mov	w0, wzr
   22720:	str	x8, [x19]
   22724:	ldp	x20, x19, [sp, #80]
   22728:	ldp	x22, x21, [sp, #64]
   2272c:	ldp	x24, x23, [sp, #48]
   22730:	ldp	x26, x25, [sp, #32]
   22734:	ldp	x28, x27, [sp, #16]
   22738:	ldp	x29, x30, [sp], #96
   2273c:	ret
   22740:	bl	a7e0 <abort@plt>
   22744:	sub	sp, sp, #0x70
   22748:	stp	x29, x30, [sp, #48]
   2274c:	stp	x22, x21, [sp, #80]
   22750:	stp	x20, x19, [sp, #96]
   22754:	mov	x19, x0
   22758:	ldr	x0, [x0]
   2275c:	str	x23, [sp, #64]
   22760:	add	x29, sp, #0x30
   22764:	mov	w22, w2
   22768:	mov	w21, w1
   2276c:	bl	23248 <get_python_format_unnamed_arg_count@@Base+0x3580>
   22770:	mov	x20, x0
   22774:	str	x0, [x19]
   22778:	cbz	x0, 22814 <get_python_format_unnamed_arg_count@@Base+0x2b4c>
   2277c:	mov	x0, x20
   22780:	mov	w1, w21
   22784:	bl	232fc <get_python_format_unnamed_arg_count@@Base+0x3634>
   22788:	mov	w8, #0x1                   	// #1
   2278c:	stp	w8, w22, [sp, #28]
   22790:	ldr	x8, [x20, #8]
   22794:	mov	w9, #0x18                  	// #24
   22798:	mov	w23, w0
   2279c:	add	x2, sp, #0x18
   227a0:	umaddl	x1, w0, w9, x8
   227a4:	mov	x0, sp
   227a8:	bl	235a0 <get_python_format_unnamed_arg_count@@Base+0x38d8>
   227ac:	tbz	w0, #0, 22804 <get_python_format_unnamed_arg_count@@Base+0x2b3c>
   227b0:	ldr	x8, [x20, #8]
   227b4:	mov	w21, w23
   227b8:	mov	w9, #0x18                  	// #24
   227bc:	madd	x9, x21, x9, x8
   227c0:	ldr	w9, [x9, #8]
   227c4:	cmp	w9, #0x7
   227c8:	b.ne	227e0 <get_python_format_unnamed_arg_count@@Base+0x2b18>  // b.any
   227cc:	mov	w9, #0x18                  	// #24
   227d0:	madd	x8, x21, x9, x8
   227d4:	ldr	x0, [x8, #16]
   227d8:	bl	22924 <get_python_format_unnamed_arg_count@@Base+0x2c5c>
   227dc:	ldr	x8, [x20, #8]
   227e0:	ldr	w9, [sp, #8]
   227e4:	mov	w10, #0x18                  	// #24
   227e8:	madd	x8, x21, x10, x8
   227ec:	mov	x0, x20
   227f0:	str	w9, [x8, #8]
   227f4:	ldr	x9, [sp, #16]
   227f8:	str	x9, [x8, #16]
   227fc:	bl	22434 <get_python_format_unnamed_arg_count@@Base+0x276c>
   22800:	b	22814 <get_python_format_unnamed_arg_count@@Base+0x2b4c>
   22804:	mov	x0, x20
   22808:	mov	w1, w21
   2280c:	bl	230f8 <get_python_format_unnamed_arg_count@@Base+0x3430>
   22810:	mov	x20, x0
   22814:	str	x20, [x19]
   22818:	ldp	x20, x19, [sp, #96]
   2281c:	ldp	x22, x21, [sp, #80]
   22820:	ldr	x23, [sp, #64]
   22824:	ldp	x29, x30, [sp, #48]
   22828:	add	sp, sp, #0x70
   2282c:	ret
   22830:	sub	sp, sp, #0x70
   22834:	stp	x29, x30, [sp, #48]
   22838:	stp	x22, x21, [sp, #80]
   2283c:	stp	x20, x19, [sp, #96]
   22840:	mov	x19, x0
   22844:	ldr	x0, [x0]
   22848:	str	x23, [sp, #64]
   2284c:	add	x29, sp, #0x30
   22850:	mov	x22, x2
   22854:	mov	w21, w1
   22858:	bl	23248 <get_python_format_unnamed_arg_count@@Base+0x3580>
   2285c:	mov	x20, x0
   22860:	str	x0, [x19]
   22864:	cbz	x0, 22908 <get_python_format_unnamed_arg_count@@Base+0x2c40>
   22868:	mov	x0, x20
   2286c:	mov	w1, w21
   22870:	bl	232fc <get_python_format_unnamed_arg_count@@Base+0x3634>
   22874:	adrp	x8, 39000 <get_search_path@@Base+0x2b4c>
   22878:	ldr	d0, [x8, #3984]
   2287c:	str	x22, [sp, #40]
   22880:	mov	w9, #0x18                  	// #24
   22884:	mov	w23, w0
   22888:	stur	d0, [sp, #28]
   2288c:	ldr	x8, [x20, #8]
   22890:	add	x2, sp, #0x18
   22894:	umaddl	x1, w0, w9, x8
   22898:	mov	x0, sp
   2289c:	bl	235a0 <get_python_format_unnamed_arg_count@@Base+0x38d8>
   228a0:	tbz	w0, #0, 228f8 <get_python_format_unnamed_arg_count@@Base+0x2c30>
   228a4:	ldr	x8, [x20, #8]
   228a8:	mov	w21, w23
   228ac:	mov	w9, #0x18                  	// #24
   228b0:	madd	x9, x21, x9, x8
   228b4:	ldr	w9, [x9, #8]
   228b8:	cmp	w9, #0x7
   228bc:	b.ne	228d4 <get_python_format_unnamed_arg_count@@Base+0x2c0c>  // b.any
   228c0:	mov	w9, #0x18                  	// #24
   228c4:	madd	x8, x21, x9, x8
   228c8:	ldr	x0, [x8, #16]
   228cc:	bl	22924 <get_python_format_unnamed_arg_count@@Base+0x2c5c>
   228d0:	ldr	x8, [x20, #8]
   228d4:	ldr	w9, [sp, #8]
   228d8:	mov	w10, #0x18                  	// #24
   228dc:	madd	x8, x21, x10, x8
   228e0:	mov	x0, x20
   228e4:	str	w9, [x8, #8]
   228e8:	ldr	x9, [sp, #16]
   228ec:	str	x9, [x8, #16]
   228f0:	bl	22434 <get_python_format_unnamed_arg_count@@Base+0x276c>
   228f4:	b	22908 <get_python_format_unnamed_arg_count@@Base+0x2c40>
   228f8:	mov	x0, x20
   228fc:	mov	w1, w21
   22900:	bl	230f8 <get_python_format_unnamed_arg_count@@Base+0x3430>
   22904:	mov	x20, x0
   22908:	str	x20, [x19]
   2290c:	ldp	x20, x19, [sp, #96]
   22910:	ldp	x22, x21, [sp, #80]
   22914:	ldr	x23, [sp, #64]
   22918:	ldp	x29, x30, [sp, #48]
   2291c:	add	sp, sp, #0x70
   22920:	ret
   22924:	stp	x29, x30, [sp, #-48]!
   22928:	stp	x20, x19, [sp, #32]
   2292c:	mov	x19, x0
   22930:	ldr	w8, [x0]
   22934:	ldr	x0, [x0, #8]
   22938:	str	x21, [sp, #16]
   2293c:	mov	x29, sp
   22940:	cbz	w8, 2297c <get_python_format_unnamed_arg_count@@Base+0x2cb4>
   22944:	mov	x20, xzr
   22948:	mov	x21, xzr
   2294c:	add	x9, x0, x20
   22950:	ldr	w10, [x9, #8]
   22954:	cmp	w10, #0x7
   22958:	b.ne	2296c <get_python_format_unnamed_arg_count@@Base+0x2ca4>  // b.any
   2295c:	ldr	x0, [x9, #16]
   22960:	bl	22924 <get_python_format_unnamed_arg_count@@Base+0x2c5c>
   22964:	ldr	w8, [x19]
   22968:	ldr	x0, [x19, #8]
   2296c:	add	x21, x21, #0x1
   22970:	cmp	x21, w8, uxtw
   22974:	add	x20, x20, #0x18
   22978:	b.cc	2294c <get_python_format_unnamed_arg_count@@Base+0x2c84>  // b.lo, b.ul, b.last
   2297c:	cbz	x0, 22984 <get_python_format_unnamed_arg_count@@Base+0x2cbc>
   22980:	bl	aa00 <free@plt>
   22984:	ldr	w8, [x19, #24]
   22988:	ldr	x0, [x19, #32]
   2298c:	cbz	w8, 229c8 <get_python_format_unnamed_arg_count@@Base+0x2d00>
   22990:	mov	x20, xzr
   22994:	mov	x21, xzr
   22998:	add	x9, x0, x20
   2299c:	ldr	w10, [x9, #8]
   229a0:	cmp	w10, #0x7
   229a4:	b.ne	229b8 <get_python_format_unnamed_arg_count@@Base+0x2cf0>  // b.any
   229a8:	ldr	x0, [x9, #16]
   229ac:	bl	22924 <get_python_format_unnamed_arg_count@@Base+0x2c5c>
   229b0:	ldr	w8, [x19, #24]
   229b4:	ldr	x0, [x19, #32]
   229b8:	add	x21, x21, #0x1
   229bc:	cmp	x21, w8, uxtw
   229c0:	add	x20, x20, #0x18
   229c4:	b.cc	22998 <get_python_format_unnamed_arg_count@@Base+0x2cd0>  // b.lo, b.ul, b.last
   229c8:	cbz	x0, 229dc <get_python_format_unnamed_arg_count@@Base+0x2d14>
   229cc:	ldp	x20, x19, [sp, #32]
   229d0:	ldr	x21, [sp, #16]
   229d4:	ldp	x29, x30, [sp], #48
   229d8:	b	aa00 <free@plt>
   229dc:	ldp	x20, x19, [sp, #32]
   229e0:	ldr	x21, [sp, #16]
   229e4:	ldp	x29, x30, [sp], #48
   229e8:	ret
   229ec:	stp	x29, x30, [sp, #-64]!
   229f0:	stp	x24, x23, [sp, #16]
   229f4:	stp	x22, x21, [sp, #32]
   229f8:	stp	x20, x19, [sp, #48]
   229fc:	mov	x29, sp
   22a00:	mov	x19, x0
   22a04:	bl	22434 <get_python_format_unnamed_arg_count@@Base+0x276c>
   22a08:	mov	w0, #0x30                  	// #48
   22a0c:	bl	a590 <xmalloc@plt>
   22a10:	ldr	w8, [x19]
   22a14:	mov	x20, x0
   22a18:	stp	w8, w8, [x0]
   22a1c:	ldr	w9, [x19]
   22a20:	cbz	w9, 22aa4 <get_python_format_unnamed_arg_count@@Base+0x2ddc>
   22a24:	add	x8, x8, x8, lsl #1
   22a28:	lsl	x0, x8, #3
   22a2c:	bl	a590 <xmalloc@plt>
   22a30:	str	x0, [x20, #8]
   22a34:	ldr	w8, [x19]
   22a38:	cbz	w8, 22ab0 <get_python_format_unnamed_arg_count@@Base+0x2de8>
   22a3c:	ldr	x9, [x19, #8]
   22a40:	mov	x22, xzr
   22a44:	mov	w21, wzr
   22a48:	mov	w23, #0x1                   	// #1
   22a4c:	add	x10, x9, x22
   22a50:	ldr	x11, [x10]
   22a54:	add	x24, x0, x22
   22a58:	str	x11, [x24]
   22a5c:	ldr	w11, [x10, #8]
   22a60:	str	w11, [x24, #8]
   22a64:	ldr	w11, [x10, #8]
   22a68:	cmp	w11, #0x7
   22a6c:	b.ne	22a84 <get_python_format_unnamed_arg_count@@Base+0x2dbc>  // b.any
   22a70:	ldr	x0, [x10, #16]
   22a74:	bl	229ec <get_python_format_unnamed_arg_count@@Base+0x2d24>
   22a78:	str	x0, [x24, #16]
   22a7c:	ldr	x9, [x19, #8]
   22a80:	ldr	w8, [x19]
   22a84:	ldr	w10, [x9, x22]
   22a88:	cmp	x23, w8, uxtw
   22a8c:	add	w21, w10, w21
   22a90:	b.cs	22ab4 <get_python_format_unnamed_arg_count@@Base+0x2dec>  // b.hs, b.nlast
   22a94:	ldr	x0, [x20, #8]
   22a98:	add	x22, x22, #0x18
   22a9c:	add	x23, x23, #0x1
   22aa0:	b	22a4c <get_python_format_unnamed_arg_count@@Base+0x2d84>
   22aa4:	mov	w21, wzr
   22aa8:	str	xzr, [x20, #8]
   22aac:	b	22ab4 <get_python_format_unnamed_arg_count@@Base+0x2dec>
   22ab0:	mov	w21, wzr
   22ab4:	ldr	w8, [x19, #16]
   22ab8:	cmp	w21, w8
   22abc:	b.ne	22b94 <get_python_format_unnamed_arg_count@@Base+0x2ecc>  // b.any
   22ac0:	str	w21, [x20, #16]
   22ac4:	ldr	w8, [x19, #24]
   22ac8:	stp	w8, w8, [x20, #24]
   22acc:	ldr	w9, [x19, #24]
   22ad0:	cbz	w9, 22b54 <get_python_format_unnamed_arg_count@@Base+0x2e8c>
   22ad4:	add	x8, x8, x8, lsl #1
   22ad8:	lsl	x0, x8, #3
   22adc:	bl	a590 <xmalloc@plt>
   22ae0:	str	x0, [x20, #32]
   22ae4:	ldr	w8, [x19, #24]
   22ae8:	cbz	w8, 22b60 <get_python_format_unnamed_arg_count@@Base+0x2e98>
   22aec:	ldr	x9, [x19, #32]
   22af0:	mov	x22, xzr
   22af4:	mov	w21, wzr
   22af8:	mov	w23, #0x1                   	// #1
   22afc:	add	x10, x9, x22
   22b00:	ldr	x11, [x10]
   22b04:	add	x24, x0, x22
   22b08:	str	x11, [x24]
   22b0c:	ldr	w11, [x10, #8]
   22b10:	str	w11, [x24, #8]
   22b14:	ldr	w11, [x10, #8]
   22b18:	cmp	w11, #0x7
   22b1c:	b.ne	22b34 <get_python_format_unnamed_arg_count@@Base+0x2e6c>  // b.any
   22b20:	ldr	x0, [x10, #16]
   22b24:	bl	229ec <get_python_format_unnamed_arg_count@@Base+0x2d24>
   22b28:	str	x0, [x24, #16]
   22b2c:	ldr	x9, [x19, #32]
   22b30:	ldr	w8, [x19, #24]
   22b34:	ldr	w10, [x9, x22]
   22b38:	cmp	x23, w8, uxtw
   22b3c:	add	w21, w10, w21
   22b40:	b.cs	22b64 <get_python_format_unnamed_arg_count@@Base+0x2e9c>  // b.hs, b.nlast
   22b44:	ldr	x0, [x20, #32]
   22b48:	add	x22, x22, #0x18
   22b4c:	add	x23, x23, #0x1
   22b50:	b	22afc <get_python_format_unnamed_arg_count@@Base+0x2e34>
   22b54:	mov	w21, wzr
   22b58:	str	xzr, [x20, #32]
   22b5c:	b	22b64 <get_python_format_unnamed_arg_count@@Base+0x2e9c>
   22b60:	mov	w21, wzr
   22b64:	ldr	w8, [x19, #40]
   22b68:	cmp	w21, w8
   22b6c:	b.ne	22b94 <get_python_format_unnamed_arg_count@@Base+0x2ecc>  // b.any
   22b70:	mov	x0, x20
   22b74:	str	w21, [x20, #40]
   22b78:	bl	22434 <get_python_format_unnamed_arg_count@@Base+0x276c>
   22b7c:	mov	x0, x20
   22b80:	ldp	x20, x19, [sp, #48]
   22b84:	ldp	x22, x21, [sp, #32]
   22b88:	ldp	x24, x23, [sp, #16]
   22b8c:	ldp	x29, x30, [sp], #64
   22b90:	ret
   22b94:	bl	a7e0 <abort@plt>
   22b98:	stp	x29, x30, [sp, #-32]!
   22b9c:	str	x19, [sp, #16]
   22ba0:	mov	x29, sp
   22ba4:	mov	x19, x0
   22ba8:	bl	22434 <get_python_format_unnamed_arg_count@@Base+0x276c>
   22bac:	ldr	w8, [x19]
   22bb0:	cbz	w8, 22bbc <get_python_format_unnamed_arg_count@@Base+0x2ef4>
   22bb4:	ldr	x8, [x19, #8]
   22bb8:	b	22bc8 <get_python_format_unnamed_arg_count@@Base+0x2f00>
   22bbc:	ldr	w8, [x19, #24]
   22bc0:	cbz	w8, 22c0c <get_python_format_unnamed_arg_count@@Base+0x2f44>
   22bc4:	ldr	x8, [x19, #32]
   22bc8:	ldr	w8, [x8, #4]
   22bcc:	cbnz	w8, 22c0c <get_python_format_unnamed_arg_count@@Base+0x2f44>
   22bd0:	mov	w1, #0x1                   	// #1
   22bd4:	mov	x0, x19
   22bd8:	bl	23c50 <get_python_format_unnamed_arg_count@@Base+0x3f88>
   22bdc:	ldr	w8, [x19]
   22be0:	cbz	w8, 22c24 <get_python_format_unnamed_arg_count@@Base+0x2f5c>
   22be4:	ldr	x8, [x19, #8]
   22be8:	ldr	w9, [x8]
   22bec:	cmp	w9, #0x1
   22bf0:	b.ne	22c24 <get_python_format_unnamed_arg_count@@Base+0x2f5c>  // b.any
   22bf4:	ldr	w9, [x8, #4]
   22bf8:	cbnz	w9, 22c24 <get_python_format_unnamed_arg_count@@Base+0x2f5c>
   22bfc:	mov	w9, #0x1                   	// #1
   22c00:	mov	x0, x19
   22c04:	str	w9, [x8, #4]
   22c08:	bl	23e18 <get_python_format_unnamed_arg_count@@Base+0x4150>
   22c0c:	mov	x0, x19
   22c10:	bl	22434 <get_python_format_unnamed_arg_count@@Base+0x276c>
   22c14:	mov	x0, x19
   22c18:	ldr	x19, [sp, #16]
   22c1c:	ldp	x29, x30, [sp], #32
   22c20:	ret
   22c24:	bl	a7e0 <abort@plt>
   22c28:	sub	sp, sp, #0x70
   22c2c:	stp	x29, x30, [sp, #16]
   22c30:	stp	x28, x27, [sp, #32]
   22c34:	stp	x26, x25, [sp, #48]
   22c38:	stp	x24, x23, [sp, #64]
   22c3c:	stp	x22, x21, [sp, #80]
   22c40:	stp	x20, x19, [sp, #96]
   22c44:	add	x29, sp, #0x10
   22c48:	mov	x24, x1
   22c4c:	mov	x20, x0
   22c50:	bl	22434 <get_python_format_unnamed_arg_count@@Base+0x276c>
   22c54:	mov	x0, x24
   22c58:	bl	22434 <get_python_format_unnamed_arg_count@@Base+0x276c>
   22c5c:	ldr	w21, [x20, #40]
   22c60:	cbz	w21, 22cc4 <get_python_format_unnamed_arg_count@@Base+0x2ffc>
   22c64:	ldr	w22, [x24, #40]
   22c68:	cbz	w22, 22c9c <get_python_format_unnamed_arg_count@@Base+0x2fd4>
   22c6c:	mov	x0, x21
   22c70:	mov	x1, x22
   22c74:	bl	ac10 <gcd@plt>
   22c78:	udiv	w1, w22, w0
   22c7c:	udiv	w21, w21, w0
   22c80:	mov	x0, x20
   22c84:	bl	24460 <get_python_format_unnamed_arg_count@@Base+0x4798>
   22c88:	mov	x0, x24
   22c8c:	mov	w1, w21
   22c90:	bl	24460 <get_python_format_unnamed_arg_count@@Base+0x4798>
   22c94:	ldr	w8, [x20, #40]
   22c98:	cbz	w8, 22cc4 <get_python_format_unnamed_arg_count@@Base+0x2ffc>
   22c9c:	ldr	w8, [x20, #16]
   22ca0:	ldr	w9, [x24, #16]
   22ca4:	mov	x0, x20
   22ca8:	cmp	w8, w9
   22cac:	csel	w21, w8, w9, hi  // hi = pmore
   22cb0:	mov	w1, w21
   22cb4:	bl	2376c <get_python_format_unnamed_arg_count@@Base+0x3aa4>
   22cb8:	ldr	w8, [x24, #40]
   22cbc:	cbnz	w8, 22cdc <get_python_format_unnamed_arg_count@@Base+0x3014>
   22cc0:	b	22ce8 <get_python_format_unnamed_arg_count@@Base+0x3020>
   22cc4:	ldr	w8, [x24, #40]
   22cc8:	cbz	w8, 22ce8 <get_python_format_unnamed_arg_count@@Base+0x3020>
   22ccc:	ldr	w8, [x20, #16]
   22cd0:	ldr	w9, [x24, #16]
   22cd4:	cmp	w8, w9
   22cd8:	csel	w21, w8, w9, hi  // hi = pmore
   22cdc:	mov	x0, x24
   22ce0:	mov	w1, w21
   22ce4:	bl	2376c <get_python_format_unnamed_arg_count@@Base+0x3aa4>
   22ce8:	ldr	w8, [x20, #40]
   22cec:	cbz	w8, 22d10 <get_python_format_unnamed_arg_count@@Base+0x3048>
   22cf0:	ldr	w9, [x24, #40]
   22cf4:	cbz	w9, 22d10 <get_python_format_unnamed_arg_count@@Base+0x3048>
   22cf8:	ldr	w10, [x20, #16]
   22cfc:	ldr	w11, [x24, #16]
   22d00:	cmp	w10, w11
   22d04:	b.ne	230f4 <get_python_format_unnamed_arg_count@@Base+0x342c>  // b.any
   22d08:	cmp	w8, w9
   22d0c:	b.ne	230f4 <get_python_format_unnamed_arg_count@@Base+0x342c>  // b.any
   22d10:	mov	w0, #0x30                  	// #48
   22d14:	bl	a590 <xmalloc@plt>
   22d18:	mov	x8, x0
   22d1c:	str	xzr, [x8, #24]!
   22d20:	str	xzr, [x0, #32]
   22d24:	str	wzr, [x0, #40]
   22d28:	stp	x8, x24, [sp]
   22d2c:	str	wzr, [x0, #16]
   22d30:	stp	xzr, xzr, [x0]
   22d34:	ldr	w27, [x20]
   22d38:	ldr	w28, [x24]
   22d3c:	ldr	x22, [x20, #8]
   22d40:	ldr	x23, [x24, #8]
   22d44:	cmp	w27, #0x0
   22d48:	cset	w8, ne  // ne = any
   22d4c:	cmp	w28, #0x0
   22d50:	mov	x21, x0
   22d54:	cset	w9, ne  // ne = any
   22d58:	cbz	w27, 22e6c <get_python_format_unnamed_arg_count@@Base+0x31a4>
   22d5c:	cbz	w28, 22e6c <get_python_format_unnamed_arg_count@@Base+0x31a4>
   22d60:	mov	w8, wzr
   22d64:	mov	w26, wzr
   22d68:	mov	w19, #0x18                  	// #24
   22d6c:	cmp	w26, w8
   22d70:	b.cs	22d7c <get_python_format_unnamed_arg_count@@Base+0x30b4>  // b.hs, b.nlast
   22d74:	ldr	x25, [x21, #8]
   22d78:	b	22dac <get_python_format_unnamed_arg_count@@Base+0x30e4>
   22d7c:	mov	w9, #0x1                   	// #1
   22d80:	add	w10, w26, #0x1
   22d84:	ldr	x0, [x21, #8]
   22d88:	bfi	w9, w8, #1, #31
   22d8c:	cmp	w9, w10
   22d90:	csinc	w8, w9, w26, hi  // hi = pmore
   22d94:	umull	x1, w8, w19
   22d98:	str	w8, [x21, #4]
   22d9c:	bl	a460 <xrealloc@plt>
   22da0:	ldr	w26, [x21]
   22da4:	mov	x25, x0
   22da8:	str	x0, [x21, #8]
   22dac:	ldr	w8, [x22]
   22db0:	ldr	w9, [x23]
   22db4:	umaddl	x24, w26, w19, x25
   22db8:	mov	x0, x24
   22dbc:	mov	x1, x22
   22dc0:	cmp	w8, w9
   22dc4:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   22dc8:	mov	x2, x23
   22dcc:	str	w8, [x24]
   22dd0:	bl	235a0 <get_python_format_unnamed_arg_count@@Base+0x38d8>
   22dd4:	tbz	w0, #0, 22e50 <get_python_format_unnamed_arg_count@@Base+0x3188>
   22dd8:	ldr	w8, [x21]
   22ddc:	ldr	w9, [x21, #16]
   22de0:	add	w26, w8, #0x1
   22de4:	str	w26, [x21]
   22de8:	ldr	w8, [x24]
   22dec:	add	w9, w9, w8
   22df0:	str	w9, [x21, #16]
   22df4:	ldr	w9, [x22]
   22df8:	subs	w8, w9, w8
   22dfc:	mov	x9, x22
   22e00:	str	w8, [x9], #24
   22e04:	ldr	w8, [x24]
   22e08:	ldr	w10, [x23]
   22e0c:	csel	x22, x9, x22, eq  // eq = none
   22e10:	cset	w9, eq  // eq = none
   22e14:	sub	w27, w27, w9
   22e18:	mov	x9, x23
   22e1c:	subs	w8, w10, w8
   22e20:	str	w8, [x9], #24
   22e24:	cset	w8, eq  // eq = none
   22e28:	csel	x23, x9, x23, eq  // eq = none
   22e2c:	sub	w28, w28, w8
   22e30:	cmp	w27, #0x0
   22e34:	cset	w8, ne  // ne = any
   22e38:	cmp	w28, #0x0
   22e3c:	cset	w9, ne  // ne = any
   22e40:	cbz	w27, 22e68 <get_python_format_unnamed_arg_count@@Base+0x31a0>
   22e44:	cbz	w28, 22e68 <get_python_format_unnamed_arg_count@@Base+0x31a0>
   22e48:	ldr	w8, [x21, #4]
   22e4c:	b	22d6c <get_python_format_unnamed_arg_count@@Base+0x30a4>
   22e50:	mov	w8, #0x18                  	// #24
   22e54:	umaddl	x8, w26, w8, x25
   22e58:	ldr	w8, [x8, #4]
   22e5c:	ldr	x24, [sp, #8]
   22e60:	cbnz	w8, 230ac <get_python_format_unnamed_arg_count@@Base+0x33e4>
   22e64:	b	230a0 <get_python_format_unnamed_arg_count@@Base+0x33d8>
   22e68:	ldr	x24, [sp, #8]
   22e6c:	ldr	w19, [x20, #24]
   22e70:	ldr	w26, [x24, #24]
   22e74:	cbz	w19, 22f7c <get_python_format_unnamed_arg_count@@Base+0x32b4>
   22e78:	cbz	w26, 22f94 <get_python_format_unnamed_arg_count@@Base+0x32cc>
   22e7c:	orr	w8, w28, w27
   22e80:	cbnz	w8, 230f4 <get_python_format_unnamed_arg_count@@Base+0x342c>
   22e84:	ldr	x8, [sp, #8]
   22e88:	ldr	x23, [x20, #32]
   22e8c:	mov	w27, #0x18                  	// #24
   22e90:	ldr	x22, [x8, #32]
   22e94:	ldr	x8, [sp]
   22e98:	ldr	w28, [x8]
   22e9c:	ldr	w8, [x21, #28]
   22ea0:	cmp	w28, w8
   22ea4:	b.cs	22eb0 <get_python_format_unnamed_arg_count@@Base+0x31e8>  // b.hs, b.nlast
   22ea8:	ldr	x24, [x21, #32]
   22eac:	b	22ee0 <get_python_format_unnamed_arg_count@@Base+0x3218>
   22eb0:	mov	w9, #0x1                   	// #1
   22eb4:	add	w10, w28, #0x1
   22eb8:	ldr	x0, [x21, #32]
   22ebc:	bfi	w9, w8, #1, #31
   22ec0:	cmp	w9, w10
   22ec4:	csinc	w8, w9, w28, hi  // hi = pmore
   22ec8:	umull	x1, w8, w27
   22ecc:	str	w8, [x21, #28]
   22ed0:	bl	a460 <xrealloc@plt>
   22ed4:	ldr	w28, [x21, #24]
   22ed8:	mov	x24, x0
   22edc:	str	x0, [x21, #32]
   22ee0:	ldr	w8, [x23]
   22ee4:	ldr	w9, [x22]
   22ee8:	umaddl	x25, w28, w27, x24
   22eec:	mov	x0, x25
   22ef0:	mov	x1, x23
   22ef4:	cmp	w8, w9
   22ef8:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   22efc:	mov	x2, x22
   22f00:	str	w8, [x25]
   22f04:	bl	235a0 <get_python_format_unnamed_arg_count@@Base+0x38d8>
   22f08:	tbz	w0, #0, 22fb0 <get_python_format_unnamed_arg_count@@Base+0x32e8>
   22f0c:	ldr	w8, [x21, #24]
   22f10:	ldr	w9, [x21, #40]
   22f14:	add	w28, w8, #0x1
   22f18:	str	w28, [x21, #24]
   22f1c:	ldr	w8, [x25]
   22f20:	add	w9, w9, w8
   22f24:	str	w9, [x21, #40]
   22f28:	ldr	w9, [x23]
   22f2c:	subs	w8, w9, w8
   22f30:	mov	x9, x23
   22f34:	str	w8, [x9], #24
   22f38:	ldr	w8, [x25]
   22f3c:	ldr	w10, [x22]
   22f40:	csel	x23, x9, x23, eq  // eq = none
   22f44:	cset	w9, eq  // eq = none
   22f48:	sub	w19, w19, w9
   22f4c:	mov	x9, x22
   22f50:	subs	w8, w10, w8
   22f54:	str	w8, [x9], #24
   22f58:	cset	w8, eq  // eq = none
   22f5c:	csel	x22, x9, x22, eq  // eq = none
   22f60:	sub	w26, w26, w8
   22f64:	cbz	w19, 22f6c <get_python_format_unnamed_arg_count@@Base+0x32a4>
   22f68:	cbnz	w26, 22e9c <get_python_format_unnamed_arg_count@@Base+0x31d4>
   22f6c:	ldr	x24, [sp, #8]
   22f70:	orr	w8, w26, w19
   22f74:	cbz	w8, 230ac <get_python_format_unnamed_arg_count@@Base+0x33e4>
   22f78:	b	230f4 <get_python_format_unnamed_arg_count@@Base+0x342c>
   22f7c:	cbz	w26, 23084 <get_python_format_unnamed_arg_count@@Base+0x33bc>
   22f80:	cbnz	w27, 230f4 <get_python_format_unnamed_arg_count@@Base+0x342c>
   22f84:	ldr	x24, [sp, #8]
   22f88:	tbnz	w9, #0, 23098 <get_python_format_unnamed_arg_count@@Base+0x33d0>
   22f8c:	ldr	x23, [x24, #32]
   22f90:	b	23098 <get_python_format_unnamed_arg_count@@Base+0x33d0>
   22f94:	cbnz	w28, 230f4 <get_python_format_unnamed_arg_count@@Base+0x342c>
   22f98:	ldr	x24, [sp, #8]
   22f9c:	tbnz	w8, #0, 22fa4 <get_python_format_unnamed_arg_count@@Base+0x32dc>
   22fa0:	ldr	x22, [x20, #32]
   22fa4:	ldr	w8, [x22, #4]
   22fa8:	cbnz	w8, 230ac <get_python_format_unnamed_arg_count@@Base+0x33e4>
   22fac:	b	230a0 <get_python_format_unnamed_arg_count@@Base+0x33d8>
   22fb0:	mov	w8, #0x18                  	// #24
   22fb4:	umaddl	x8, w28, w8, x24
   22fb8:	ldp	x9, x24, [sp]
   22fbc:	ldr	w19, [x8, #4]
   22fc0:	ldr	w9, [x9]
   22fc4:	cbz	w9, 2307c <get_python_format_unnamed_arg_count@@Base+0x33b4>
   22fc8:	ldp	w10, w8, [x21]
   22fcc:	add	w22, w10, w9
   22fd0:	cmp	w8, w22
   22fd4:	b.cs	2300c <get_python_format_unnamed_arg_count@@Base+0x3344>  // b.hs, b.nlast
   22fd8:	mov	w9, #0x1                   	// #1
   22fdc:	ldr	x0, [x21, #8]
   22fe0:	bfi	w9, w8, #1, #31
   22fe4:	cmp	w9, w22
   22fe8:	mov	w10, #0x18                  	// #24
   22fec:	csel	w8, w9, w22, hi  // hi = pmore
   22ff0:	umull	x1, w8, w10
   22ff4:	str	w8, [x21, #4]
   22ff8:	bl	a460 <xrealloc@plt>
   22ffc:	ldr	w8, [x21, #24]
   23000:	str	x0, [x21, #8]
   23004:	cbz	w8, 23054 <get_python_format_unnamed_arg_count@@Base+0x338c>
   23008:	ldr	w10, [x21]
   2300c:	mov	x8, xzr
   23010:	mov	x9, xzr
   23014:	mov	w10, w10
   23018:	mov	w11, #0x18                  	// #24
   2301c:	ldr	x12, [x21, #32]
   23020:	ldr	x13, [x21, #8]
   23024:	add	x12, x12, x8
   23028:	ldr	x14, [x12, #16]
   2302c:	ldr	q0, [x12]
   23030:	add	w12, w10, w9
   23034:	umaddl	x12, w12, w11, x13
   23038:	str	x14, [x12, #16]
   2303c:	str	q0, [x12]
   23040:	ldr	w12, [x21, #24]
   23044:	add	x9, x9, #0x1
   23048:	add	x8, x8, #0x18
   2304c:	cmp	x9, x12
   23050:	b.cc	2301c <get_python_format_unnamed_arg_count@@Base+0x3354>  // b.lo, b.ul, b.last
   23054:	ldr	w8, [x21, #16]
   23058:	ldr	w9, [x21, #40]
   2305c:	ldr	x0, [x21, #32]
   23060:	str	w22, [x21]
   23064:	add	w8, w9, w8
   23068:	str	w8, [x21, #16]
   2306c:	bl	aa00 <free@plt>
   23070:	ldr	x8, [sp]
   23074:	stp	xzr, xzr, [x8]
   23078:	str	wzr, [x8, #16]
   2307c:	cbnz	w19, 230ac <get_python_format_unnamed_arg_count@@Base+0x33e4>
   23080:	b	230a0 <get_python_format_unnamed_arg_count@@Base+0x33d8>
   23084:	cbz	w8, 23090 <get_python_format_unnamed_arg_count@@Base+0x33c8>
   23088:	ldr	w8, [x22, #4]
   2308c:	b	22e5c <get_python_format_unnamed_arg_count@@Base+0x3194>
   23090:	ldr	x24, [sp, #8]
   23094:	cbz	w9, 230ac <get_python_format_unnamed_arg_count@@Base+0x33e4>
   23098:	ldr	w8, [x23, #4]
   2309c:	cbnz	w8, 230ac <get_python_format_unnamed_arg_count@@Base+0x33e4>
   230a0:	mov	x0, x21
   230a4:	bl	24588 <get_python_format_unnamed_arg_count@@Base+0x48c0>
   230a8:	mov	x21, x0
   230ac:	mov	x0, x20
   230b0:	bl	22924 <get_python_format_unnamed_arg_count@@Base+0x2c5c>
   230b4:	mov	x0, x24
   230b8:	bl	22924 <get_python_format_unnamed_arg_count@@Base+0x2c5c>
   230bc:	cbz	x21, 230d0 <get_python_format_unnamed_arg_count@@Base+0x3408>
   230c0:	mov	x0, x21
   230c4:	bl	23e18 <get_python_format_unnamed_arg_count@@Base+0x4150>
   230c8:	mov	x0, x21
   230cc:	bl	22434 <get_python_format_unnamed_arg_count@@Base+0x276c>
   230d0:	mov	x0, x21
   230d4:	ldp	x20, x19, [sp, #96]
   230d8:	ldp	x22, x21, [sp, #80]
   230dc:	ldp	x24, x23, [sp, #64]
   230e0:	ldp	x26, x25, [sp, #48]
   230e4:	ldp	x28, x27, [sp, #32]
   230e8:	ldp	x29, x30, [sp, #16]
   230ec:	add	sp, sp, #0x70
   230f0:	ret
   230f4:	bl	a7e0 <abort@plt>
   230f8:	stp	x29, x30, [sp, #-64]!
   230fc:	stp	x20, x19, [sp, #48]
   23100:	mov	x19, x0
   23104:	stp	x24, x23, [sp, #16]
   23108:	stp	x22, x21, [sp, #32]
   2310c:	mov	x29, sp
   23110:	cbz	x0, 23218 <get_python_format_unnamed_arg_count@@Base+0x3550>
   23114:	mov	x0, x19
   23118:	mov	w20, w1
   2311c:	bl	22434 <get_python_format_unnamed_arg_count@@Base+0x276c>
   23120:	mov	x21, x19
   23124:	ldr	w8, [x21, #24]!
   23128:	cbnz	w8, 23138 <get_python_format_unnamed_arg_count@@Base+0x3470>
   2312c:	ldr	w8, [x19, #16]
   23130:	cmp	w8, w20
   23134:	b.ls	23218 <get_python_format_unnamed_arg_count@@Base+0x3550>  // b.plast
   23138:	mov	x0, x19
   2313c:	mov	w1, w20
   23140:	bl	23c50 <get_python_format_unnamed_arg_count@@Base+0x3f88>
   23144:	ldr	w8, [x19]
   23148:	mov	w20, w0
   2314c:	cmp	w0, w8
   23150:	b.cs	231b4 <get_python_format_unnamed_arg_count@@Base+0x34ec>  // b.hs, b.nlast
   23154:	ldr	x9, [x19, #8]
   23158:	mov	w23, w20
   2315c:	lsl	x10, x23, #1
   23160:	add	x10, x10, w20, uxtw
   23164:	add	x9, x9, x10, lsl #3
   23168:	ldr	w22, [x9, #4]
   2316c:	lsl	x24, x10, #3
   23170:	ldr	x9, [x19, #8]
   23174:	ldr	w11, [x19, #16]
   23178:	add	x9, x9, x24
   2317c:	ldr	w10, [x9]
   23180:	sub	w10, w11, w10
   23184:	str	w10, [x19, #16]
   23188:	ldr	w10, [x9, #8]
   2318c:	cmp	w10, #0x7
   23190:	b.ne	231a0 <get_python_format_unnamed_arg_count@@Base+0x34d8>  // b.any
   23194:	ldr	x0, [x9, #16]
   23198:	bl	22924 <get_python_format_unnamed_arg_count@@Base+0x2c5c>
   2319c:	ldr	w8, [x19]
   231a0:	add	x23, x23, #0x1
   231a4:	cmp	x23, w8, uxtw
   231a8:	add	x24, x24, #0x18
   231ac:	b.cc	23170 <get_python_format_unnamed_arg_count@@Base+0x34a8>  // b.lo, b.ul, b.last
   231b0:	b	231bc <get_python_format_unnamed_arg_count@@Base+0x34f4>
   231b4:	ldr	x8, [x19, #32]
   231b8:	ldr	w22, [x8, #4]
   231bc:	ldr	w8, [x19, #24]
   231c0:	ldr	x0, [x19, #32]
   231c4:	str	w20, [x19]
   231c8:	cbz	w8, 23204 <get_python_format_unnamed_arg_count@@Base+0x353c>
   231cc:	mov	x20, xzr
   231d0:	mov	x23, xzr
   231d4:	add	x9, x0, x20
   231d8:	ldr	w10, [x9, #8]
   231dc:	cmp	w10, #0x7
   231e0:	b.ne	231f4 <get_python_format_unnamed_arg_count@@Base+0x352c>  // b.any
   231e4:	ldr	x0, [x9, #16]
   231e8:	bl	22924 <get_python_format_unnamed_arg_count@@Base+0x2c5c>
   231ec:	ldr	w8, [x19, #24]
   231f0:	ldr	x0, [x19, #32]
   231f4:	add	x23, x23, #0x1
   231f8:	cmp	x23, w8, uxtw
   231fc:	add	x20, x20, #0x18
   23200:	b.cc	231d4 <get_python_format_unnamed_arg_count@@Base+0x350c>  // b.lo, b.ul, b.last
   23204:	cbz	x0, 2320c <get_python_format_unnamed_arg_count@@Base+0x3544>
   23208:	bl	aa00 <free@plt>
   2320c:	stp	xzr, xzr, [x21]
   23210:	str	wzr, [x21, #16]
   23214:	cbz	w22, 23230 <get_python_format_unnamed_arg_count@@Base+0x3568>
   23218:	mov	x0, x19
   2321c:	ldp	x20, x19, [sp, #48]
   23220:	ldp	x22, x21, [sp, #32]
   23224:	ldp	x24, x23, [sp, #16]
   23228:	ldp	x29, x30, [sp], #64
   2322c:	ret
   23230:	mov	x0, x19
   23234:	ldp	x20, x19, [sp, #48]
   23238:	ldp	x22, x21, [sp, #32]
   2323c:	ldp	x24, x23, [sp, #16]
   23240:	ldp	x29, x30, [sp], #64
   23244:	b	24588 <get_python_format_unnamed_arg_count@@Base+0x48c0>
   23248:	stp	x29, x30, [sp, #-48]!
   2324c:	stp	x20, x19, [sp, #32]
   23250:	mov	x19, x0
   23254:	str	x21, [sp, #16]
   23258:	mov	x29, sp
   2325c:	cbz	x0, 232e8 <get_python_format_unnamed_arg_count@@Base+0x3620>
   23260:	mov	x0, x19
   23264:	mov	w20, w1
   23268:	bl	22434 <get_python_format_unnamed_arg_count@@Base+0x276c>
   2326c:	ldr	w8, [x19, #24]
   23270:	cbz	w8, 23290 <get_python_format_unnamed_arg_count@@Base+0x35c8>
   23274:	adds	w20, w20, #0x1
   23278:	mov	x0, x19
   2327c:	mov	w1, w20
   23280:	cset	w21, cs  // cs = hs, nlast
   23284:	bl	23c50 <get_python_format_unnamed_arg_count@@Base+0x3f88>
   23288:	tbz	w21, #0, 232ac <get_python_format_unnamed_arg_count@@Base+0x35e4>
   2328c:	b	232d0 <get_python_format_unnamed_arg_count@@Base+0x3608>
   23290:	ldr	w8, [x19, #16]
   23294:	cmp	w8, w20
   23298:	b.ls	232dc <get_python_format_unnamed_arg_count@@Base+0x3614>  // b.plast
   2329c:	add	w20, w20, #0x1
   232a0:	mov	x0, x19
   232a4:	mov	w1, w20
   232a8:	bl	23c50 <get_python_format_unnamed_arg_count@@Base+0x3f88>
   232ac:	ldr	x9, [x19, #8]
   232b0:	mov	w8, wzr
   232b4:	mov	w10, #0x18                  	// #24
   232b8:	umaddl	x11, w8, w10, x9
   232bc:	ldr	w12, [x11]
   232c0:	add	w8, w8, #0x1
   232c4:	str	wzr, [x11, #4]
   232c8:	subs	w20, w20, w12
   232cc:	b.ne	232b8 <get_python_format_unnamed_arg_count@@Base+0x35f0>  // b.any
   232d0:	mov	x0, x19
   232d4:	bl	22434 <get_python_format_unnamed_arg_count@@Base+0x276c>
   232d8:	b	232e8 <get_python_format_unnamed_arg_count@@Base+0x3620>
   232dc:	mov	x0, x19
   232e0:	bl	22924 <get_python_format_unnamed_arg_count@@Base+0x2c5c>
   232e4:	mov	x19, xzr
   232e8:	mov	x0, x19
   232ec:	ldp	x20, x19, [sp, #32]
   232f0:	ldr	x21, [sp, #16]
   232f4:	ldp	x29, x30, [sp], #48
   232f8:	ret
   232fc:	stp	x29, x30, [sp, #-96]!
   23300:	str	x27, [sp, #16]
   23304:	stp	x26, x25, [sp, #32]
   23308:	stp	x24, x23, [sp, #48]
   2330c:	stp	x22, x21, [sp, #64]
   23310:	stp	x20, x19, [sp, #80]
   23314:	mov	x29, sp
   23318:	mov	w21, w1
   2331c:	mov	x19, x0
   23320:	bl	22434 <get_python_format_unnamed_arg_count@@Base+0x276c>
   23324:	ldr	w8, [x19, #16]
   23328:	cmp	w8, w21
   2332c:	b.hi	23350 <get_python_format_unnamed_arg_count@@Base+0x3688>  // b.pmore
   23330:	ldr	w8, [x19, #24]
   23334:	cbz	w8, 23388 <get_python_format_unnamed_arg_count@@Base+0x36c0>
   23338:	add	w1, w21, #0x1
   2333c:	mov	x0, x19
   23340:	bl	2376c <get_python_format_unnamed_arg_count@@Base+0x3aa4>
   23344:	ldr	w8, [x19, #16]
   23348:	cmp	w8, w21
   2334c:	b.ls	23388 <get_python_format_unnamed_arg_count@@Base+0x36c0>  // b.plast
   23350:	ldr	w8, [x19]
   23354:	cbz	w8, 23388 <get_python_format_unnamed_arg_count@@Base+0x36c0>
   23358:	ldr	x22, [x19, #8]
   2335c:	mov	x20, xzr
   23360:	mov	w23, #0x18                  	// #24
   23364:	add	x10, x22, x23
   23368:	ldur	w9, [x10, #-24]
   2336c:	subs	w9, w21, w9
   23370:	b.cc	2338c <get_python_format_unnamed_arg_count@@Base+0x36c4>  // b.lo, b.ul, b.last
   23374:	add	x20, x20, #0x1
   23378:	cmp	x20, x8
   2337c:	add	x23, x23, #0x18
   23380:	mov	w21, w9
   23384:	b.cc	23364 <get_python_format_unnamed_arg_count@@Base+0x369c>  // b.lo, b.ul, b.last
   23388:	bl	a7e0 <abort@plt>
   2338c:	ldur	w9, [x10, #-24]
   23390:	subs	w26, w9, #0x1
   23394:	b.ls	23570 <get_python_format_unnamed_arg_count@@Base+0x38a8>  // b.plast
   23398:	cmp	w21, #0x0
   2339c:	cset	w9, eq  // eq = none
   233a0:	subs	w25, w26, w21
   233a4:	cset	w11, eq  // eq = none
   233a8:	ldr	w10, [x19, #4]
   233ac:	orr	w27, w9, w11
   233b0:	cmp	w27, #0x0
   233b4:	mov	w9, #0x1                   	// #1
   233b8:	cinc	w11, w9, eq  // eq = none
   233bc:	add	w24, w11, w8
   233c0:	cmp	w10, w24
   233c4:	b.cs	233f4 <get_python_format_unnamed_arg_count@@Base+0x372c>  // b.hs, b.nlast
   233c8:	bfi	w9, w10, #1, #31
   233cc:	cmp	w9, w24
   233d0:	mov	w8, #0x18                  	// #24
   233d4:	csel	w9, w9, w24, hi  // hi = pmore
   233d8:	umull	x1, w9, w8
   233dc:	mov	x0, x22
   233e0:	str	w9, [x19, #4]
   233e4:	bl	a460 <xrealloc@plt>
   233e8:	ldr	w8, [x19]
   233ec:	mov	x22, x0
   233f0:	str	x0, [x19, #8]
   233f4:	sub	w11, w8, #0x1
   233f8:	cmp	w11, w20
   233fc:	tbz	w27, #0, 2347c <get_python_format_unnamed_arg_count@@Base+0x37b4>
   23400:	b.ls	2343c <get_python_format_unnamed_arg_count@@Base+0x3774>  // b.plast
   23404:	mov	w9, #0x18                  	// #24
   23408:	umull	x10, w11, w9
   2340c:	add	x11, x22, x10
   23410:	ldr	x12, [x11, #16]
   23414:	ldr	q0, [x11]
   23418:	umaddl	x11, w8, w9, x22
   2341c:	sub	x10, x10, #0x18
   23420:	str	x12, [x11, #16]
   23424:	str	q0, [x11]
   23428:	ldr	x22, [x19, #8]
   2342c:	sub	w11, w8, #0x2
   23430:	sub	w8, w8, #0x1
   23434:	cmp	w11, w20
   23438:	b.hi	2340c <get_python_format_unnamed_arg_count@@Base+0x3744>  // b.pmore
   2343c:	add	x25, x22, x23
   23440:	ldur	w9, [x25, #-16]
   23444:	ldur	x8, [x25, #-24]
   23448:	cmp	w9, #0x7
   2344c:	str	x8, [x25]
   23450:	str	w9, [x25, #8]
   23454:	b.ne	23468 <get_python_format_unnamed_arg_count@@Base+0x37a0>  // b.any
   23458:	ldur	x0, [x25, #-8]
   2345c:	bl	229ec <get_python_format_unnamed_arg_count@@Base+0x2d24>
   23460:	str	x0, [x25, #16]
   23464:	ldr	x22, [x19, #8]
   23468:	add	x8, x22, x23
   2346c:	cbz	w21, 23548 <get_python_format_unnamed_arg_count@@Base+0x3880>
   23470:	stur	w26, [x8, #-24]
   23474:	mov	w26, #0x1                   	// #1
   23478:	b	23550 <get_python_format_unnamed_arg_count@@Base+0x3888>
   2347c:	b.ls	234bc <get_python_format_unnamed_arg_count@@Base+0x37f4>  // b.plast
   23480:	add	w10, w8, #0x1
   23484:	mov	w8, #0x18                  	// #24
   23488:	umull	x9, w11, w8
   2348c:	add	x11, x22, x9
   23490:	ldr	x12, [x11, #16]
   23494:	ldr	q0, [x11]
   23498:	umaddl	x11, w10, w8, x22
   2349c:	sub	x9, x9, #0x18
   234a0:	str	x12, [x11, #16]
   234a4:	str	q0, [x11]
   234a8:	ldr	x22, [x19, #8]
   234ac:	sub	w11, w10, #0x3
   234b0:	sub	w10, w10, #0x1
   234b4:	cmp	w11, w20
   234b8:	b.hi	2348c <get_python_format_unnamed_arg_count@@Base+0x37c4>  // b.pmore
   234bc:	add	x8, x22, x23
   234c0:	ldur	x9, [x8, #-24]
   234c4:	add	w26, w20, #0x2
   234c8:	mov	w10, #0x18                  	// #24
   234cc:	umaddl	x10, w26, w10, x22
   234d0:	str	x9, [x10]
   234d4:	ldur	w9, [x8, #-16]
   234d8:	cmp	w9, #0x7
   234dc:	str	w9, [x10, #8]
   234e0:	b.ne	234fc <get_python_format_unnamed_arg_count@@Base+0x3834>  // b.any
   234e4:	ldur	x0, [x8, #-8]
   234e8:	bl	229ec <get_python_format_unnamed_arg_count@@Base+0x2d24>
   234ec:	mov	w8, #0x18                  	// #24
   234f0:	madd	x8, x26, x8, x22
   234f4:	str	x0, [x8, #16]
   234f8:	ldr	x22, [x19, #8]
   234fc:	add	x27, x22, x23
   23500:	ldur	w9, [x27, #-16]
   23504:	ldur	x8, [x27, #-24]
   23508:	cmp	w9, #0x7
   2350c:	str	x8, [x27]
   23510:	str	w9, [x27, #8]
   23514:	b.ne	23528 <get_python_format_unnamed_arg_count@@Base+0x3860>  // b.any
   23518:	ldur	x0, [x27, #-8]
   2351c:	bl	229ec <get_python_format_unnamed_arg_count@@Base+0x2d24>
   23520:	str	x0, [x27, #16]
   23524:	ldr	x22, [x19, #8]
   23528:	add	x8, x22, x23
   2352c:	mov	w9, #0x1                   	// #1
   23530:	mov	w10, #0x18                  	// #24
   23534:	stur	w21, [x8, #-24]
   23538:	str	w9, [x8]
   2353c:	madd	x8, x26, x10, x22
   23540:	mov	w26, w25
   23544:	b	23550 <get_python_format_unnamed_arg_count@@Base+0x3888>
   23548:	mov	w9, #0x1                   	// #1
   2354c:	stur	w9, [x8, #-24]
   23550:	cmp	w21, #0x0
   23554:	cinc	x20, x20, ne  // ne = any
   23558:	str	w26, [x8]
   2355c:	and	x8, x20, #0xffffffff
   23560:	mov	w9, #0x18                  	// #24
   23564:	str	w24, [x19]
   23568:	mul	x8, x8, x9
   2356c:	ldr	w9, [x22, x8]
   23570:	cmp	w9, #0x1
   23574:	b.ne	23388 <get_python_format_unnamed_arg_count@@Base+0x36c0>  // b.any
   23578:	mov	x0, x19
   2357c:	bl	22434 <get_python_format_unnamed_arg_count@@Base+0x276c>
   23580:	mov	w0, w20
   23584:	ldp	x20, x19, [sp, #80]
   23588:	ldp	x22, x21, [sp, #64]
   2358c:	ldp	x24, x23, [sp, #48]
   23590:	ldp	x26, x25, [sp, #32]
   23594:	ldr	x27, [sp, #16]
   23598:	ldp	x29, x30, [sp], #96
   2359c:	ret
   235a0:	stp	x29, x30, [sp, #-32]!
   235a4:	stp	x20, x19, [sp, #16]
   235a8:	ldr	w8, [x1, #4]
   235ac:	mov	x20, x2
   235b0:	mov	x19, x0
   235b4:	mov	x29, sp
   235b8:	cbz	w8, 235c8 <get_python_format_unnamed_arg_count@@Base+0x3900>
   235bc:	ldr	w8, [x20, #4]
   235c0:	cmp	w8, #0x0
   235c4:	cset	w8, ne  // ne = any
   235c8:	str	w8, [x19, #4]
   235cc:	ldr	w8, [x1, #8]
   235d0:	ldr	w9, [x20, #8]
   235d4:	cbz	w8, 23610 <get_python_format_unnamed_arg_count@@Base+0x3948>
   235d8:	cmp	w8, #0x7
   235dc:	cbz	w9, 23624 <get_python_format_unnamed_arg_count@@Base+0x395c>
   235e0:	b.ne	2363c <get_python_format_unnamed_arg_count@@Base+0x3974>  // b.any
   235e4:	cmp	w9, #0x4
   235e8:	b.hi	236a8 <get_python_format_unnamed_arg_count@@Base+0x39e0>  // b.pmore
   235ec:	mov	w10, #0x1                   	// #1
   235f0:	lsl	w10, w10, w9
   235f4:	mov	w11, #0x16                  	// #22
   235f8:	tst	w10, w11
   235fc:	b.eq	236a8 <get_python_format_unnamed_arg_count@@Base+0x39e0>  // b.none
   23600:	mov	w8, #0x7                   	// #7
   23604:	str	w8, [x19, #8]
   23608:	ldr	x0, [x1, #16]
   2360c:	b	23668 <get_python_format_unnamed_arg_count@@Base+0x39a0>
   23610:	cmp	w9, #0x7
   23614:	str	w9, [x19, #8]
   23618:	b.ne	2375c <get_python_format_unnamed_arg_count@@Base+0x3a94>  // b.any
   2361c:	ldr	x0, [x20, #16]
   23620:	b	23630 <get_python_format_unnamed_arg_count@@Base+0x3968>
   23624:	str	w8, [x19, #8]
   23628:	b.ne	2375c <get_python_format_unnamed_arg_count@@Base+0x3a94>  // b.any
   2362c:	ldr	x0, [x1, #16]
   23630:	bl	229ec <get_python_format_unnamed_arg_count@@Base+0x2d24>
   23634:	str	x0, [x19, #16]
   23638:	b	2375c <get_python_format_unnamed_arg_count@@Base+0x3a94>
   2363c:	cmp	w9, #0x7
   23640:	b.ne	23678 <get_python_format_unnamed_arg_count@@Base+0x39b0>  // b.any
   23644:	cmp	w8, #0x4
   23648:	b.hi	236a8 <get_python_format_unnamed_arg_count@@Base+0x39e0>  // b.pmore
   2364c:	mov	w10, #0x1                   	// #1
   23650:	lsl	w10, w10, w8
   23654:	mov	w11, #0x16                  	// #22
   23658:	tst	w10, w11
   2365c:	b.eq	236a8 <get_python_format_unnamed_arg_count@@Base+0x39e0>  // b.none
   23660:	str	w9, [x19, #8]
   23664:	ldr	x0, [x20, #16]
   23668:	bl	23be8 <get_python_format_unnamed_arg_count@@Base+0x3f20>
   2366c:	str	x0, [x19, #16]
   23670:	cbnz	x0, 2375c <get_python_format_unnamed_arg_count@@Base+0x3a94>
   23674:	b	23760 <get_python_format_unnamed_arg_count@@Base+0x3a98>
   23678:	cmp	w8, #0x1
   2367c:	b.ne	23694 <get_python_format_unnamed_arg_count@@Base+0x39cc>  // b.any
   23680:	sub	w10, w9, #0x2
   23684:	cmp	w10, #0x3
   23688:	b.hi	23694 <get_python_format_unnamed_arg_count@@Base+0x39cc>  // b.pmore
   2368c:	str	w9, [x19, #8]
   23690:	b	2375c <get_python_format_unnamed_arg_count@@Base+0x3a94>
   23694:	cmp	w9, #0x1
   23698:	b.ne	236ec <get_python_format_unnamed_arg_count@@Base+0x3a24>  // b.any
   2369c:	sub	w10, w8, #0x2
   236a0:	cmp	w10, #0x3
   236a4:	b.ls	23758 <get_python_format_unnamed_arg_count@@Base+0x3a90>  // b.plast
   236a8:	cmp	w8, w9
   236ac:	b.ne	236e4 <get_python_format_unnamed_arg_count@@Base+0x3a1c>  // b.any
   236b0:	cmp	w8, #0x7
   236b4:	str	w8, [x19, #8]
   236b8:	b.ne	2375c <get_python_format_unnamed_arg_count@@Base+0x3a94>  // b.any
   236bc:	ldr	x0, [x1, #16]
   236c0:	bl	229ec <get_python_format_unnamed_arg_count@@Base+0x2d24>
   236c4:	ldr	x8, [x20, #16]
   236c8:	mov	x20, x0
   236cc:	mov	x0, x8
   236d0:	bl	229ec <get_python_format_unnamed_arg_count@@Base+0x2d24>
   236d4:	mov	x1, x0
   236d8:	mov	x0, x20
   236dc:	bl	22c28 <get_python_format_unnamed_arg_count@@Base+0x2f60>
   236e0:	b	2366c <get_python_format_unnamed_arg_count@@Base+0x39a4>
   236e4:	mov	w0, wzr
   236e8:	b	23760 <get_python_format_unnamed_arg_count@@Base+0x3a98>
   236ec:	cmp	w8, #0x2
   236f0:	b.ne	236fc <get_python_format_unnamed_arg_count@@Base+0x3a34>  // b.any
   236f4:	cmp	w9, #0x3
   236f8:	b.eq	2370c <get_python_format_unnamed_arg_count@@Base+0x3a44>  // b.none
   236fc:	cmp	w8, #0x3
   23700:	b.ne	23714 <get_python_format_unnamed_arg_count@@Base+0x3a4c>  // b.any
   23704:	cmp	w9, #0x2
   23708:	b.ne	23714 <get_python_format_unnamed_arg_count@@Base+0x3a4c>  // b.any
   2370c:	mov	w8, #0x3                   	// #3
   23710:	b	23758 <get_python_format_unnamed_arg_count@@Base+0x3a90>
   23714:	cmp	w8, #0x4
   23718:	b.ne	23724 <get_python_format_unnamed_arg_count@@Base+0x3a5c>  // b.any
   2371c:	cmp	w9, #0x5
   23720:	b.eq	23754 <get_python_format_unnamed_arg_count@@Base+0x3a8c>  // b.none
   23724:	cmp	w8, #0x5
   23728:	b.ne	23734 <get_python_format_unnamed_arg_count@@Base+0x3a6c>  // b.any
   2372c:	cmp	w9, #0x4
   23730:	b.eq	23754 <get_python_format_unnamed_arg_count@@Base+0x3a8c>  // b.none
   23734:	cmp	w8, #0x6
   23738:	b.ne	23744 <get_python_format_unnamed_arg_count@@Base+0x3a7c>  // b.any
   2373c:	cmp	w9, #0x5
   23740:	b.eq	23754 <get_python_format_unnamed_arg_count@@Base+0x3a8c>  // b.none
   23744:	cmp	w8, #0x5
   23748:	b.ne	236a8 <get_python_format_unnamed_arg_count@@Base+0x39e0>  // b.any
   2374c:	cmp	w9, #0x6
   23750:	b.ne	236a8 <get_python_format_unnamed_arg_count@@Base+0x39e0>  // b.any
   23754:	mov	w8, #0x5                   	// #5
   23758:	str	w8, [x19, #8]
   2375c:	mov	w0, #0x1                   	// #1
   23760:	ldp	x20, x19, [sp, #16]
   23764:	ldp	x29, x30, [sp], #32
   23768:	ret
   2376c:	sub	sp, sp, #0x80
   23770:	stp	x29, x30, [sp, #32]
   23774:	stp	x28, x27, [sp, #48]
   23778:	stp	x26, x25, [sp, #64]
   2377c:	stp	x24, x23, [sp, #80]
   23780:	stp	x22, x21, [sp, #96]
   23784:	stp	x20, x19, [sp, #112]
   23788:	ldr	w9, [x0, #16]
   2378c:	add	x29, sp, #0x20
   23790:	cmp	w9, w1
   23794:	b.eq	23bc8 <get_python_format_unnamed_arg_count@@Base+0x3f00>  // b.none
   23798:	ldr	w8, [x0, #24]
   2379c:	mov	x19, x0
   237a0:	mov	w23, w1
   237a4:	cmp	w8, #0x1
   237a8:	b.ne	237f0 <get_python_format_unnamed_arg_count@@Base+0x3b28>  // b.any
   237ac:	ldp	w8, w9, [x19]
   237b0:	add	w22, w8, #0x1
   237b4:	cmp	w9, w22
   237b8:	b.cs	239c8 <get_python_format_unnamed_arg_count@@Base+0x3d00>  // b.hs, b.nlast
   237bc:	mov	w8, #0x1                   	// #1
   237c0:	ldr	x0, [x19, #8]
   237c4:	bfi	w8, w9, #1, #31
   237c8:	cmp	w8, w22
   237cc:	mov	w10, #0x18                  	// #24
   237d0:	csel	w8, w8, w22, hi  // hi = pmore
   237d4:	umull	x1, w8, w10
   237d8:	str	w8, [x19, #4]
   237dc:	bl	a460 <xrealloc@plt>
   237e0:	ldr	w8, [x19]
   237e4:	mov	x21, x0
   237e8:	str	x0, [x19, #8]
   237ec:	b	239cc <get_python_format_unnamed_arg_count@@Base+0x3d04>
   237f0:	str	w23, [sp, #12]
   237f4:	cbz	w8, 23850 <get_python_format_unnamed_arg_count@@Base+0x3b88>
   237f8:	ldr	w10, [sp, #12]
   237fc:	ldr	w25, [x19, #40]
   23800:	mov	x23, xzr
   23804:	mov	w24, wzr
   23808:	sub	w27, w10, w9
   2380c:	ldr	x9, [x19, #32]
   23810:	udiv	w10, w27, w25
   23814:	mov	x22, xzr
   23818:	stur	w10, [x29, #-8]
   2381c:	msub	w28, w10, w25, w27
   23820:	mov	w10, #0x18                  	// #24
   23824:	str	w28, [sp, #4]
   23828:	mul	x11, x22, x10
   2382c:	ldr	w11, [x9, x11]
   23830:	subs	w11, w28, w11
   23834:	b.cc	23854 <get_python_format_unnamed_arg_count@@Base+0x3b8c>  // b.lo, b.ul, b.last
   23838:	add	x22, x22, #0x1
   2383c:	sub	w24, w24, #0x1
   23840:	cmp	x22, x8
   23844:	add	x23, x23, #0x18
   23848:	mov	w28, w11
   2384c:	b.ne	23828 <get_python_format_unnamed_arg_count@@Base+0x3b60>  // b.any
   23850:	bl	a7e0 <abort@plt>
   23854:	cmp	w28, #0x0
   23858:	cset	w9, ne  // ne = any
   2385c:	ldur	w10, [x29, #-8]
   23860:	str	w9, [sp]
   23864:	ldp	w11, w9, [x19]
   23868:	madd	w8, w10, w8, w22
   2386c:	cinc	w8, w8, ne  // ne = any
   23870:	add	w8, w8, w11
   23874:	cmp	w9, w8
   23878:	str	w8, [sp, #8]
   2387c:	b.cs	238b4 <get_python_format_unnamed_arg_count@@Base+0x3bec>  // b.hs, b.nlast
   23880:	mov	w8, #0x1                   	// #1
   23884:	bfi	w8, w9, #1, #31
   23888:	ldr	w9, [sp, #8]
   2388c:	ldr	x0, [x19, #8]
   23890:	mov	w10, #0x18                  	// #24
   23894:	mov	w20, w11
   23898:	cmp	w8, w9
   2389c:	csel	w8, w8, w9, hi  // hi = pmore
   238a0:	umull	x1, w8, w10
   238a4:	str	w8, [x19, #4]
   238a8:	bl	a460 <xrealloc@plt>
   238ac:	mov	w11, w20
   238b0:	str	x0, [x19, #8]
   238b4:	cmp	w25, w27
   238b8:	b.hi	23960 <get_python_format_unnamed_arg_count@@Base+0x3c98>  // b.pmore
   238bc:	ldr	w8, [x19, #24]
   238c0:	mov	w25, wzr
   238c4:	mov	w27, #0x18                  	// #24
   238c8:	stur	w28, [x29, #-12]
   238cc:	mov	w9, w8
   238d0:	str	w24, [sp, #16]
   238d4:	cbz	w9, 23950 <get_python_format_unnamed_arg_count@@Base+0x3c88>
   238d8:	mov	x26, xzr
   238dc:	mov	x20, xzr
   238e0:	mov	w21, w11
   238e4:	stur	w11, [x29, #-4]
   238e8:	ldr	x9, [x19, #32]
   238ec:	ldr	x28, [x19, #8]
   238f0:	add	w24, w21, w20
   238f4:	add	x9, x9, x26
   238f8:	ldr	x10, [x9]
   238fc:	umaddl	x11, w24, w27, x28
   23900:	str	x10, [x11]
   23904:	ldr	w10, [x9, #8]
   23908:	str	w10, [x11, #8]
   2390c:	ldr	w10, [x9, #8]
   23910:	cmp	w10, #0x7
   23914:	b.ne	2392c <get_python_format_unnamed_arg_count@@Base+0x3c64>  // b.any
   23918:	ldr	x0, [x9, #16]
   2391c:	bl	229ec <get_python_format_unnamed_arg_count@@Base+0x2d24>
   23920:	madd	x8, x24, x27, x28
   23924:	str	x0, [x8, #16]
   23928:	ldr	w8, [x19, #24]
   2392c:	add	x20, x20, #0x1
   23930:	cmp	x20, w8, uxtw
   23934:	add	x26, x26, #0x18
   23938:	b.cc	238e8 <get_python_format_unnamed_arg_count@@Base+0x3c20>  // b.lo, b.ul, b.last
   2393c:	ldur	w11, [x29, #-4]
   23940:	ldur	w28, [x29, #-12]
   23944:	ldr	w24, [sp, #16]
   23948:	mov	w9, w8
   2394c:	add	w11, w11, w20
   23950:	ldur	w10, [x29, #-8]
   23954:	add	w25, w25, #0x1
   23958:	cmp	w25, w10
   2395c:	b.cc	238d4 <get_python_format_unnamed_arg_count@@Base+0x3c0c>  // b.lo, b.ul, b.last
   23960:	cbz	w22, 23a30 <get_python_format_unnamed_arg_count@@Base+0x3d68>
   23964:	mov	x20, xzr
   23968:	mov	w21, #0x18                  	// #24
   2396c:	ldr	x8, [x19, #32]
   23970:	ldr	x26, [x19, #8]
   23974:	mov	w25, w11
   23978:	add	x8, x8, x20
   2397c:	ldr	x9, [x8]
   23980:	umaddl	x10, w11, w21, x26
   23984:	str	x9, [x10]
   23988:	ldr	w9, [x8, #8]
   2398c:	str	w9, [x10, #8]
   23990:	ldr	w9, [x8, #8]
   23994:	cmp	w9, #0x7
   23998:	b.ne	239ac <get_python_format_unnamed_arg_count@@Base+0x3ce4>  // b.any
   2399c:	ldr	x0, [x8, #16]
   239a0:	bl	229ec <get_python_format_unnamed_arg_count@@Base+0x2d24>
   239a4:	madd	x8, x25, x21, x26
   239a8:	str	x0, [x8, #16]
   239ac:	add	x20, x20, #0x18
   239b0:	cmp	x23, x20
   239b4:	add	w11, w25, #0x1
   239b8:	b.ne	2396c <get_python_format_unnamed_arg_count@@Base+0x3ca4>  // b.any
   239bc:	and	x8, x22, #0xffffffff
   239c0:	cbnz	w28, 23a38 <get_python_format_unnamed_arg_count@@Base+0x3d70>
   239c4:	b	23aac <get_python_format_unnamed_arg_count@@Base+0x3de4>
   239c8:	ldr	x21, [x19, #8]
   239cc:	ldr	x9, [x19, #32]
   239d0:	mov	w11, #0x18                  	// #24
   239d4:	umaddl	x11, w8, w11, x21
   239d8:	mov	w20, w8
   239dc:	ldr	x10, [x9]
   239e0:	str	x10, [x11]
   239e4:	ldr	w10, [x9, #8]
   239e8:	str	w10, [x11, #8]
   239ec:	ldr	w10, [x9, #8]
   239f0:	cmp	w10, #0x7
   239f4:	b.ne	23a10 <get_python_format_unnamed_arg_count@@Base+0x3d48>  // b.any
   239f8:	ldr	x0, [x9, #16]
   239fc:	bl	229ec <get_python_format_unnamed_arg_count@@Base+0x2d24>
   23a00:	mov	w8, #0x18                  	// #24
   23a04:	madd	x8, x20, x8, x21
   23a08:	str	x0, [x8, #16]
   23a0c:	ldr	x21, [x19, #8]
   23a10:	ldr	w8, [x19, #16]
   23a14:	mov	w9, #0x18                  	// #24
   23a18:	mul	x9, x20, x9
   23a1c:	sub	w8, w23, w8
   23a20:	str	w8, [x21, x9]
   23a24:	str	w22, [x19]
   23a28:	str	w23, [x19, #16]
   23a2c:	b	23bc8 <get_python_format_unnamed_arg_count@@Base+0x3f00>
   23a30:	mov	x8, xzr
   23a34:	cbz	w28, 23aac <get_python_format_unnamed_arg_count@@Base+0x3de4>
   23a38:	ldr	x9, [x19, #32]
   23a3c:	mov	w10, #0x18                  	// #24
   23a40:	ldr	x20, [x19, #8]
   23a44:	mov	w26, w11
   23a48:	madd	x11, x8, x10, x9
   23a4c:	ldr	x12, [x11]
   23a50:	umaddl	x10, w26, w10, x20
   23a54:	mov	w21, w26
   23a58:	str	x12, [x10]
   23a5c:	ldr	w12, [x11, #8]
   23a60:	str	w12, [x10, #8]
   23a64:	ldr	w10, [x11, #8]
   23a68:	mov	w11, w26
   23a6c:	cmp	w10, #0x7
   23a70:	b.ne	23a9c <get_python_format_unnamed_arg_count@@Base+0x3dd4>  // b.any
   23a74:	mov	w25, w24
   23a78:	mov	w24, #0x18                  	// #24
   23a7c:	madd	x8, x8, x24, x9
   23a80:	ldr	x0, [x8, #16]
   23a84:	bl	229ec <get_python_format_unnamed_arg_count@@Base+0x2d24>
   23a88:	madd	x8, x21, x24, x20
   23a8c:	str	x0, [x8, #16]
   23a90:	ldr	x20, [x19, #8]
   23a94:	mov	w11, w26
   23a98:	mov	w24, w25
   23a9c:	mov	w8, #0x18                  	// #24
   23aa0:	mul	x8, x21, x8
   23aa4:	add	w11, w11, #0x1
   23aa8:	str	w28, [x20, x8]
   23aac:	ldr	w8, [sp, #8]
   23ab0:	cmp	w8, w11
   23ab4:	b.ne	23850 <get_python_format_unnamed_arg_count@@Base+0x3b88>  // b.any
   23ab8:	str	w8, [x19]
   23abc:	ldr	w8, [sp, #12]
   23ac0:	str	w8, [x19, #16]
   23ac4:	ldr	w8, [sp, #4]
   23ac8:	cbz	w8, 23bc8 <get_python_format_unnamed_arg_count@@Base+0x3f00>
   23acc:	ldr	w25, [x19, #24]
   23ad0:	ldr	w8, [sp]
   23ad4:	mov	w9, #0x18                  	// #24
   23ad8:	add	w8, w25, w8
   23adc:	umull	x0, w8, w9
   23ae0:	bl	a590 <xmalloc@plt>
   23ae4:	cmp	w25, w22
   23ae8:	mov	x20, x0
   23aec:	b.ls	23b28 <get_python_format_unnamed_arg_count@@Base+0x3e60>  // b.plast
   23af0:	sub	w8, w25, w22
   23af4:	add	w9, w25, w24
   23af8:	mov	x10, x20
   23afc:	ldr	x11, [x19, #32]
   23b00:	subs	x9, x9, #0x1
   23b04:	add	x11, x11, x23
   23b08:	ldr	x12, [x11, #16]
   23b0c:	ldr	q0, [x11]
   23b10:	add	x23, x23, #0x18
   23b14:	str	x12, [x10, #16]
   23b18:	str	q0, [x10], #24
   23b1c:	b.ne	23afc <get_python_format_unnamed_arg_count@@Base+0x3e34>  // b.any
   23b20:	cbnz	w22, 23b30 <get_python_format_unnamed_arg_count@@Base+0x3e68>
   23b24:	b	23b70 <get_python_format_unnamed_arg_count@@Base+0x3ea8>
   23b28:	mov	w8, wzr
   23b2c:	cbz	w22, 23b70 <get_python_format_unnamed_arg_count@@Base+0x3ea8>
   23b30:	mov	x9, xzr
   23b34:	mov	x10, xzr
   23b38:	mov	w8, w8
   23b3c:	mov	w11, #0x18                  	// #24
   23b40:	ldr	x12, [x19, #32]
   23b44:	add	w13, w8, w10
   23b48:	add	x10, x10, #0x1
   23b4c:	cmp	x22, x10
   23b50:	add	x12, x12, x9
   23b54:	ldr	x14, [x12, #16]
   23b58:	ldr	q0, [x12]
   23b5c:	umaddl	x12, w13, w11, x20
   23b60:	add	x9, x9, #0x18
   23b64:	str	x14, [x12, #16]
   23b68:	str	q0, [x12]
   23b6c:	b.ne	23b40 <get_python_format_unnamed_arg_count@@Base+0x3e78>  // b.any
   23b70:	cbz	w28, 23bbc <get_python_format_unnamed_arg_count@@Base+0x3ef4>
   23b74:	ldr	x8, [x20]
   23b78:	mov	w9, #0x18                  	// #24
   23b7c:	madd	x21, x25, x9, x20
   23b80:	str	x8, [x21]
   23b84:	ldr	w8, [x20, #8]
   23b88:	str	w8, [x21, #8]
   23b8c:	ldr	w8, [x20, #8]
   23b90:	cmp	w8, #0x7
   23b94:	b.ne	23bac <get_python_format_unnamed_arg_count@@Base+0x3ee4>  // b.any
   23b98:	ldr	x0, [x20, #16]
   23b9c:	bl	229ec <get_python_format_unnamed_arg_count@@Base+0x2d24>
   23ba0:	mov	w8, #0x18                  	// #24
   23ba4:	madd	x8, x25, x8, x20
   23ba8:	str	x0, [x8, #16]
   23bac:	ldr	w8, [x20]
   23bb0:	sub	w8, w8, w28
   23bb4:	str	w8, [x20]
   23bb8:	str	w28, [x21]
   23bbc:	ldr	x0, [x19, #32]
   23bc0:	bl	aa00 <free@plt>
   23bc4:	str	x20, [x19, #32]
   23bc8:	ldp	x20, x19, [sp, #112]
   23bcc:	ldp	x22, x21, [sp, #96]
   23bd0:	ldp	x24, x23, [sp, #80]
   23bd4:	ldp	x26, x25, [sp, #64]
   23bd8:	ldp	x28, x27, [sp, #48]
   23bdc:	ldp	x29, x30, [sp, #32]
   23be0:	add	sp, sp, #0x80
   23be4:	ret
   23be8:	stp	x29, x30, [sp, #-32]!
   23bec:	ldr	w8, [x0]
   23bf0:	str	x19, [sp, #16]
   23bf4:	mov	x29, sp
   23bf8:	cbz	w8, 23c04 <get_python_format_unnamed_arg_count@@Base+0x3f3c>
   23bfc:	ldr	x8, [x0, #8]
   23c00:	b	23c10 <get_python_format_unnamed_arg_count@@Base+0x3f48>
   23c04:	ldr	w8, [x0, #24]
   23c08:	cbz	w8, 23c18 <get_python_format_unnamed_arg_count@@Base+0x3f50>
   23c0c:	ldr	x8, [x0, #32]
   23c10:	ldr	w8, [x8, #4]
   23c14:	cbz	w8, 23c3c <get_python_format_unnamed_arg_count@@Base+0x3f74>
   23c18:	mov	w0, #0x30                  	// #48
   23c1c:	bl	a590 <xmalloc@plt>
   23c20:	mov	x19, x0
   23c24:	stp	xzr, xzr, [x0]
   23c28:	str	wzr, [x0, #16]
   23c2c:	stp	xzr, xzr, [x0, #24]
   23c30:	str	wzr, [x0, #40]
   23c34:	bl	22434 <get_python_format_unnamed_arg_count@@Base+0x276c>
   23c38:	b	23c40 <get_python_format_unnamed_arg_count@@Base+0x3f78>
   23c3c:	mov	x19, xzr
   23c40:	mov	x0, x19
   23c44:	ldr	x19, [sp, #16]
   23c48:	ldp	x29, x30, [sp], #32
   23c4c:	ret
   23c50:	stp	x29, x30, [sp, #-80]!
   23c54:	stp	x26, x25, [sp, #16]
   23c58:	stp	x24, x23, [sp, #32]
   23c5c:	stp	x22, x21, [sp, #48]
   23c60:	stp	x20, x19, [sp, #64]
   23c64:	mov	x29, sp
   23c68:	mov	w20, w1
   23c6c:	mov	x19, x0
   23c70:	bl	22434 <get_python_format_unnamed_arg_count@@Base+0x276c>
   23c74:	ldr	w8, [x19, #16]
   23c78:	cmp	w8, w20
   23c7c:	b.cs	23ca0 <get_python_format_unnamed_arg_count@@Base+0x3fd8>  // b.hs, b.nlast
   23c80:	ldr	w8, [x19, #24]
   23c84:	cbz	w8, 23e14 <get_python_format_unnamed_arg_count@@Base+0x414c>
   23c88:	mov	x0, x19
   23c8c:	mov	w1, w20
   23c90:	bl	2376c <get_python_format_unnamed_arg_count@@Base+0x3aa4>
   23c94:	ldr	w8, [x19, #16]
   23c98:	cmp	w8, w20
   23c9c:	b.cc	23e14 <get_python_format_unnamed_arg_count@@Base+0x414c>  // b.lo, b.ul, b.last
   23ca0:	ldr	w8, [x19]
   23ca4:	cbz	w8, 23cdc <get_python_format_unnamed_arg_count@@Base+0x4014>
   23ca8:	ldr	x9, [x19, #8]
   23cac:	mov	x21, xzr
   23cb0:	ldr	w10, [x9]
   23cb4:	subs	w10, w20, w10
   23cb8:	b.cc	23cf0 <get_python_format_unnamed_arg_count@@Base+0x4028>  // b.lo, b.ul, b.last
   23cbc:	add	x21, x21, #0x1
   23cc0:	cmp	x21, x8
   23cc4:	add	x9, x9, #0x18
   23cc8:	mov	w20, w10
   23ccc:	b.cc	23cb0 <get_python_format_unnamed_arg_count@@Base+0x3fe8>  // b.lo, b.ul, b.last
   23cd0:	mov	w9, wzr
   23cd4:	mov	w20, w10
   23cd8:	b	23cf4 <get_python_format_unnamed_arg_count@@Base+0x402c>
   23cdc:	mov	w21, wzr
   23ce0:	mov	w9, wzr
   23ce4:	mov	w23, #0x1                   	// #1
   23ce8:	cbnz	w20, 23cfc <get_python_format_unnamed_arg_count@@Base+0x4034>
   23cec:	b	23df8 <get_python_format_unnamed_arg_count@@Base+0x4130>
   23cf0:	mov	w9, #0x1                   	// #1
   23cf4:	add	w23, w8, #0x1
   23cf8:	cbz	w20, 23df8 <get_python_format_unnamed_arg_count@@Base+0x4130>
   23cfc:	tbz	w9, #0, 23e14 <get_python_format_unnamed_arg_count@@Base+0x414c>
   23d00:	ldr	x22, [x19, #8]
   23d04:	mov	w9, #0x18                  	// #24
   23d08:	ldr	w10, [x19, #4]
   23d0c:	umull	x11, w21, w9
   23d10:	ldr	w24, [x22, x11]
   23d14:	mov	w25, w21
   23d18:	cmp	w10, w23
   23d1c:	b.cs	23d4c <get_python_format_unnamed_arg_count@@Base+0x4084>  // b.hs, b.nlast
   23d20:	mov	w8, #0x1                   	// #1
   23d24:	bfi	w8, w10, #1, #31
   23d28:	cmp	w8, w23
   23d2c:	csel	w8, w8, w23, hi  // hi = pmore
   23d30:	umull	x1, w8, w9
   23d34:	mov	x0, x22
   23d38:	str	w8, [x19, #4]
   23d3c:	bl	a460 <xrealloc@plt>
   23d40:	ldr	w8, [x19]
   23d44:	mov	x22, x0
   23d48:	str	x0, [x19, #8]
   23d4c:	sub	w10, w8, #0x1
   23d50:	cmp	w10, w21
   23d54:	b.ls	23d90 <get_python_format_unnamed_arg_count@@Base+0x40c8>  // b.plast
   23d58:	mov	w9, #0x18                  	// #24
   23d5c:	umull	x10, w10, w9
   23d60:	add	x11, x22, x10
   23d64:	ldr	x12, [x11, #16]
   23d68:	ldr	q0, [x11]
   23d6c:	umaddl	x11, w8, w9, x22
   23d70:	sub	x10, x10, #0x18
   23d74:	str	x12, [x11, #16]
   23d78:	str	q0, [x11]
   23d7c:	ldr	x22, [x19, #8]
   23d80:	sub	w11, w8, #0x2
   23d84:	sub	w8, w8, #0x1
   23d88:	cmp	w11, w21
   23d8c:	b.hi	23d60 <get_python_format_unnamed_arg_count@@Base+0x4098>  // b.pmore
   23d90:	mov	w8, #0x18                  	// #24
   23d94:	madd	x9, x25, x8, x22
   23d98:	ldr	x10, [x9]
   23d9c:	add	w21, w21, #0x1
   23da0:	umaddl	x8, w21, w8, x22
   23da4:	str	x10, [x8]
   23da8:	ldr	w9, [x9, #8]
   23dac:	cmp	w9, #0x7
   23db0:	str	w9, [x8, #8]
   23db4:	b.ne	23dd4 <get_python_format_unnamed_arg_count@@Base+0x410c>  // b.any
   23db8:	mov	w26, #0x18                  	// #24
   23dbc:	madd	x8, x25, x26, x22
   23dc0:	ldr	x0, [x8, #16]
   23dc4:	bl	229ec <get_python_format_unnamed_arg_count@@Base+0x2d24>
   23dc8:	madd	x8, x21, x26, x22
   23dcc:	str	x0, [x8, #16]
   23dd0:	ldr	x22, [x19, #8]
   23dd4:	mov	w8, #0x18                  	// #24
   23dd8:	sub	w9, w24, w20
   23ddc:	mul	x10, x25, x8
   23de0:	mul	x8, x21, x8
   23de4:	mov	x0, x19
   23de8:	str	w20, [x22, x10]
   23dec:	str	w9, [x22, x8]
   23df0:	str	w23, [x19]
   23df4:	bl	22434 <get_python_format_unnamed_arg_count@@Base+0x276c>
   23df8:	mov	w0, w21
   23dfc:	ldp	x20, x19, [sp, #64]
   23e00:	ldp	x22, x21, [sp, #48]
   23e04:	ldp	x24, x23, [sp, #32]
   23e08:	ldp	x26, x25, [sp, #16]
   23e0c:	ldp	x29, x30, [sp], #80
   23e10:	ret
   23e14:	bl	a7e0 <abort@plt>
   23e18:	stp	x29, x30, [sp, #-80]!
   23e1c:	stp	x24, x23, [sp, #32]
   23e20:	stp	x22, x21, [sp, #48]
   23e24:	stp	x20, x19, [sp, #64]
   23e28:	ldr	w21, [x0]
   23e2c:	mov	x19, x0
   23e30:	str	x25, [sp, #16]
   23e34:	mov	x29, sp
   23e38:	cbz	w21, 23ee0 <get_python_format_unnamed_arg_count@@Base+0x4218>
   23e3c:	mov	x22, xzr
   23e40:	mov	w20, wzr
   23e44:	mov	w23, #0x8                   	// #8
   23e48:	mov	w24, #0x18                  	// #24
   23e4c:	cbz	w20, 23ea0 <get_python_format_unnamed_arg_count@@Base+0x41d8>
   23e50:	ldr	x8, [x19, #8]
   23e54:	sub	w25, w20, #0x1
   23e58:	add	x9, x8, x23
   23e5c:	sub	x0, x9, #0x8
   23e60:	umaddl	x1, w25, w24, x8
   23e64:	bl	24334 <get_python_format_unnamed_arg_count@@Base+0x466c>
   23e68:	tbz	w0, #0, 23ea0 <get_python_format_unnamed_arg_count@@Base+0x41d8>
   23e6c:	ldr	x9, [x19, #8]
   23e70:	mul	x10, x25, x24
   23e74:	add	x8, x9, x23
   23e78:	ldur	w11, [x8, #-8]
   23e7c:	ldr	w12, [x9, x10]
   23e80:	add	w11, w12, w11
   23e84:	str	w11, [x9, x10]
   23e88:	ldr	w9, [x8]
   23e8c:	cmp	w9, #0x7
   23e90:	b.ne	23ecc <get_python_format_unnamed_arg_count@@Base+0x4204>  // b.any
   23e94:	ldr	x0, [x8, #8]
   23e98:	bl	22924 <get_python_format_unnamed_arg_count@@Base+0x2c5c>
   23e9c:	b	23ecc <get_python_format_unnamed_arg_count@@Base+0x4204>
   23ea0:	cmp	x22, w20, uxtw
   23ea4:	b.ls	23ec8 <get_python_format_unnamed_arg_count@@Base+0x4200>  // b.plast
   23ea8:	ldr	x8, [x19, #8]
   23eac:	add	x9, x8, x23
   23eb0:	ldr	x10, [x9, #8]
   23eb4:	ldur	q0, [x9, #-8]
   23eb8:	mov	w9, w20
   23ebc:	madd	x8, x9, x24, x8
   23ec0:	str	x10, [x8, #16]
   23ec4:	str	q0, [x8]
   23ec8:	add	w20, w20, #0x1
   23ecc:	add	x22, x22, #0x1
   23ed0:	cmp	x21, x22
   23ed4:	add	x23, x23, #0x18
   23ed8:	b.ne	23e4c <get_python_format_unnamed_arg_count@@Base+0x4184>  // b.any
   23edc:	b	23ee4 <get_python_format_unnamed_arg_count@@Base+0x421c>
   23ee0:	mov	w20, wzr
   23ee4:	ldr	w21, [x19, #24]
   23ee8:	str	w20, [x19]
   23eec:	cbz	w21, 23fcc <get_python_format_unnamed_arg_count@@Base+0x4304>
   23ef0:	mov	x22, xzr
   23ef4:	mov	w20, wzr
   23ef8:	mov	w23, #0x8                   	// #8
   23efc:	mov	w24, #0x18                  	// #24
   23f00:	cbz	w20, 23f54 <get_python_format_unnamed_arg_count@@Base+0x428c>
   23f04:	ldr	x8, [x19, #32]
   23f08:	sub	w25, w20, #0x1
   23f0c:	add	x9, x8, x23
   23f10:	sub	x0, x9, #0x8
   23f14:	umaddl	x1, w25, w24, x8
   23f18:	bl	24334 <get_python_format_unnamed_arg_count@@Base+0x466c>
   23f1c:	tbz	w0, #0, 23f54 <get_python_format_unnamed_arg_count@@Base+0x428c>
   23f20:	ldr	x9, [x19, #32]
   23f24:	mul	x10, x25, x24
   23f28:	add	x8, x9, x23
   23f2c:	ldur	w11, [x8, #-8]
   23f30:	ldr	w12, [x9, x10]
   23f34:	add	w11, w12, w11
   23f38:	str	w11, [x9, x10]
   23f3c:	ldr	w9, [x8]
   23f40:	cmp	w9, #0x7
   23f44:	b.ne	23f80 <get_python_format_unnamed_arg_count@@Base+0x42b8>  // b.any
   23f48:	ldr	x0, [x8, #8]
   23f4c:	bl	22924 <get_python_format_unnamed_arg_count@@Base+0x2c5c>
   23f50:	b	23f80 <get_python_format_unnamed_arg_count@@Base+0x42b8>
   23f54:	cmp	x22, w20, uxtw
   23f58:	b.ls	23f7c <get_python_format_unnamed_arg_count@@Base+0x42b4>  // b.plast
   23f5c:	ldr	x8, [x19, #32]
   23f60:	add	x9, x8, x23
   23f64:	ldr	x10, [x9, #8]
   23f68:	ldur	q0, [x9, #-8]
   23f6c:	mov	w9, w20
   23f70:	madd	x8, x9, x24, x8
   23f74:	str	x10, [x8, #16]
   23f78:	str	q0, [x8]
   23f7c:	add	w20, w20, #0x1
   23f80:	add	x22, x22, #0x1
   23f84:	cmp	x21, x22
   23f88:	add	x23, x23, #0x18
   23f8c:	b.ne	23f00 <get_python_format_unnamed_arg_count@@Base+0x4238>  // b.any
   23f90:	str	w20, [x19, #24]
   23f94:	cbz	w20, 23fd0 <get_python_format_unnamed_arg_count@@Base+0x4308>
   23f98:	subs	w22, w20, #0x1
   23f9c:	b.eq	24064 <get_python_format_unnamed_arg_count@@Base+0x439c>  // b.none
   23fa0:	ldr	x0, [x19, #32]
   23fa4:	mov	w8, #0x18                  	// #24
   23fa8:	umaddl	x1, w22, w8, x0
   23fac:	bl	24334 <get_python_format_unnamed_arg_count@@Base+0x466c>
   23fb0:	tbz	w0, #0, 23fe8 <get_python_format_unnamed_arg_count@@Base+0x4320>
   23fb4:	ldr	x8, [x19, #32]
   23fb8:	mov	w9, #0x18                  	// #24
   23fbc:	mul	x9, x22, x9
   23fc0:	mov	w20, w22
   23fc4:	ldr	w21, [x8, x9]
   23fc8:	b	23fec <get_python_format_unnamed_arg_count@@Base+0x4324>
   23fcc:	str	wzr, [x19, #24]
   23fd0:	ldp	x20, x19, [sp, #64]
   23fd4:	ldp	x22, x21, [sp, #48]
   23fd8:	ldp	x24, x23, [sp, #32]
   23fdc:	ldr	x25, [sp, #16]
   23fe0:	ldp	x29, x30, [sp], #80
   23fe4:	ret
   23fe8:	mov	w21, wzr
   23fec:	cmp	w20, #0x4
   23ff0:	b.cc	24064 <get_python_format_unnamed_arg_count@@Base+0x439c>  // b.lo, b.ul, b.last
   23ff4:	sub	w8, w20, #0x2
   23ff8:	mov	w22, #0x18                  	// #24
   23ffc:	mov	w23, w8
   24000:	tbnz	w20, #0, 24054 <get_python_format_unnamed_arg_count@@Base+0x438c>
   24004:	mov	x24, xzr
   24008:	mov	x25, xzr
   2400c:	ldr	x8, [x19, #32]
   24010:	add	w9, w25, #0x2
   24014:	cmp	x25, #0x0
   24018:	add	x0, x8, x24
   2401c:	ldr	w10, [x0]
   24020:	umaddl	x1, w9, w22, x8
   24024:	ldr	w8, [x1]
   24028:	csel	w9, w21, wzr, eq  // eq = none
   2402c:	add	w9, w10, w9
   24030:	cmp	w9, w8
   24034:	b.ne	24054 <get_python_format_unnamed_arg_count@@Base+0x438c>  // b.any
   24038:	bl	24334 <get_python_format_unnamed_arg_count@@Base+0x466c>
   2403c:	tbz	w0, #0, 24054 <get_python_format_unnamed_arg_count@@Base+0x438c>
   24040:	add	x25, x25, #0x1
   24044:	cmp	x23, x25
   24048:	add	x24, x24, #0x18
   2404c:	b.ne	2400c <get_python_format_unnamed_arg_count@@Base+0x4344>  // b.any
   24050:	b	2406c <get_python_format_unnamed_arg_count@@Base+0x43a4>
   24054:	add	w20, w20, #0x1
   24058:	cmp	w20, #0x3
   2405c:	add	w8, w23, #0x1
   24060:	b.hi	23ffc <get_python_format_unnamed_arg_count@@Base+0x4334>  // b.pmore
   24064:	ldr	w9, [x19, #24]
   24068:	b	240f0 <get_python_format_unnamed_arg_count@@Base+0x4428>
   2406c:	cmp	w20, #0x3
   24070:	b.cc	240a8 <get_python_format_unnamed_arg_count@@Base+0x43e0>  // b.lo, b.ul, b.last
   24074:	mov	w8, w20
   24078:	mov	x21, xzr
   2407c:	sub	x22, x8, #0x2
   24080:	ldr	x8, [x19, #32]
   24084:	add	x8, x8, x21
   24088:	ldr	w9, [x8, #56]
   2408c:	cmp	w9, #0x7
   24090:	b.ne	2409c <get_python_format_unnamed_arg_count@@Base+0x43d4>  // b.any
   24094:	ldr	x0, [x8, #64]
   24098:	bl	22924 <get_python_format_unnamed_arg_count@@Base+0x2c5c>
   2409c:	subs	x22, x22, #0x1
   240a0:	add	x21, x21, #0x18
   240a4:	b.ne	24080 <get_python_format_unnamed_arg_count@@Base+0x43b8>  // b.any
   240a8:	ldr	w9, [x19, #24]
   240ac:	lsr	w8, w20, #1
   240b0:	cmp	w20, w9
   240b4:	b.cs	240d8 <get_python_format_unnamed_arg_count@@Base+0x4410>  // b.hs, b.nlast
   240b8:	ldr	x9, [x19, #32]
   240bc:	mov	w10, #0x18                  	// #24
   240c0:	umaddl	x10, w20, w10, x9
   240c4:	ldr	x11, [x10, #16]
   240c8:	ldr	q0, [x10]
   240cc:	str	x11, [x9, #64]
   240d0:	str	q0, [x9, #48]
   240d4:	ldr	w9, [x19, #24]
   240d8:	ldr	w10, [x19, #40]
   240dc:	sub	w9, w9, w20
   240e0:	add	w9, w9, #0x2
   240e4:	str	w9, [x19, #24]
   240e8:	udiv	w8, w10, w8
   240ec:	str	w8, [x19, #40]
   240f0:	ldr	w8, [x19]
   240f4:	subs	w9, w9, #0x1
   240f8:	b.ne	24144 <get_python_format_unnamed_arg_count@@Base+0x447c>  // b.any
   240fc:	cbz	w8, 23fd0 <get_python_format_unnamed_arg_count@@Base+0x4308>
   24100:	ldr	x9, [x19, #8]
   24104:	ldr	x1, [x19, #32]
   24108:	sub	w8, w8, #0x1
   2410c:	mov	w20, #0x18                  	// #24
   24110:	umaddl	x0, w8, w20, x9
   24114:	bl	24334 <get_python_format_unnamed_arg_count@@Base+0x466c>
   24118:	tbz	w0, #0, 23fd0 <get_python_format_unnamed_arg_count@@Base+0x4308>
   2411c:	ldr	w8, [x19]
   24120:	ldr	x9, [x19, #8]
   24124:	ldr	w10, [x19, #16]
   24128:	sub	w8, w8, #0x1
   2412c:	umull	x11, w8, w20
   24130:	ldr	w9, [x9, x11]
   24134:	str	w8, [x19]
   24138:	sub	w9, w10, w9
   2413c:	str	w9, [x19, #16]
   24140:	b	23fd0 <get_python_format_unnamed_arg_count@@Base+0x4308>
   24144:	cbz	w8, 23fd0 <get_python_format_unnamed_arg_count@@Base+0x4308>
   24148:	ldr	x10, [x19, #8]
   2414c:	ldr	x11, [x19, #32]
   24150:	sub	w8, w8, #0x1
   24154:	mov	w20, #0x18                  	// #24
   24158:	umaddl	x0, w8, w20, x10
   2415c:	umaddl	x1, w9, w20, x11
   24160:	bl	24334 <get_python_format_unnamed_arg_count@@Base+0x466c>
   24164:	tbz	w0, #0, 23fd0 <get_python_format_unnamed_arg_count@@Base+0x4308>
   24168:	ldr	w8, [x19]
   2416c:	ldr	w9, [x19, #24]
   24170:	ldr	x0, [x19, #32]
   24174:	ldr	x10, [x19, #8]
   24178:	sub	w8, w8, #0x1
   2417c:	sub	w9, w9, #0x1
   24180:	umull	x8, w8, w20
   24184:	umaddl	x1, w9, w20, x0
   24188:	ldr	w8, [x10, x8]
   2418c:	ldr	w9, [x1]
   24190:	cmp	w8, w9
   24194:	csel	w21, w8, w9, cc  // cc = lo, ul, last
   24198:	bl	24334 <get_python_format_unnamed_arg_count@@Base+0x466c>
   2419c:	tbz	w0, #0, 241b4 <get_python_format_unnamed_arg_count@@Base+0x44ec>
   241a0:	ldr	x24, [x19, #32]
   241a4:	ldr	w8, [x24]
   241a8:	add	w8, w8, w21
   241ac:	str	w8, [x24]
   241b0:	b	24274 <get_python_format_unnamed_arg_count@@Base+0x45ac>
   241b4:	ldp	w22, w8, [x19, #24]
   241b8:	add	w23, w22, #0x1
   241bc:	cmp	w8, w23
   241c0:	b.cs	241e8 <get_python_format_unnamed_arg_count@@Base+0x4520>  // b.hs, b.nlast
   241c4:	mov	w9, #0x1                   	// #1
   241c8:	ldr	x0, [x19, #32]
   241cc:	bfi	w9, w8, #1, #31
   241d0:	cmp	w9, w23
   241d4:	csel	w8, w9, w23, hi  // hi = pmore
   241d8:	umull	x1, w8, w20
   241dc:	str	w8, [x19, #28]
   241e0:	bl	a460 <xrealloc@plt>
   241e4:	str	x0, [x19, #32]
   241e8:	cbz	w22, 24230 <get_python_format_unnamed_arg_count@@Base+0x4568>
   241ec:	add	x8, x22, x22, lsl #1
   241f0:	sub	w9, w22, #0x1
   241f4:	lsl	x8, x8, #3
   241f8:	umull	x9, w9, w20
   241fc:	mov	w10, w22
   24200:	ldr	x11, [x19, #32]
   24204:	sub	w10, w10, #0x1
   24208:	add	x12, x11, x9
   2420c:	ldr	x13, [x12, #16]
   24210:	ldr	q0, [x12]
   24214:	add	x11, x11, x8
   24218:	sub	x8, x8, #0x18
   2421c:	sub	x9, x9, #0x18
   24220:	str	x13, [x11, #16]
   24224:	str	q0, [x11]
   24228:	cbnz	w10, 24200 <get_python_format_unnamed_arg_count@@Base+0x4538>
   2422c:	b	24234 <get_python_format_unnamed_arg_count@@Base+0x456c>
   24230:	mov	x22, xzr
   24234:	ldr	x24, [x19, #32]
   24238:	str	w23, [x19, #24]
   2423c:	madd	x8, x22, x20, x24
   24240:	ldr	x9, [x8]
   24244:	str	x9, [x24]
   24248:	ldr	w9, [x8, #8]
   2424c:	str	w9, [x24, #8]
   24250:	ldr	w8, [x8, #8]
   24254:	cmp	w8, #0x7
   24258:	b.ne	24270 <get_python_format_unnamed_arg_count@@Base+0x45a8>  // b.any
   2425c:	madd	x8, x22, x20, x24
   24260:	ldr	x0, [x8, #16]
   24264:	bl	229ec <get_python_format_unnamed_arg_count@@Base+0x2d24>
   24268:	str	x0, [x24, #16]
   2426c:	ldr	x24, [x19, #32]
   24270:	str	w21, [x24]
   24274:	ldr	w8, [x19, #24]
   24278:	sub	w8, w8, #0x1
   2427c:	umull	x9, w8, w20
   24280:	ldr	w10, [x24, x9]
   24284:	subs	w10, w10, w21
   24288:	str	w10, [x24, x9]
   2428c:	b.ne	242b8 <get_python_format_unnamed_arg_count@@Base+0x45f0>  // b.any
   24290:	madd	x9, x8, x20, x24
   24294:	ldr	w9, [x9, #8]
   24298:	cmp	w9, #0x7
   2429c:	b.ne	242b4 <get_python_format_unnamed_arg_count@@Base+0x45ec>  // b.any
   242a0:	madd	x8, x8, x20, x24
   242a4:	ldr	x0, [x8, #16]
   242a8:	bl	22924 <get_python_format_unnamed_arg_count@@Base+0x2c5c>
   242ac:	ldr	w8, [x19, #24]
   242b0:	sub	w8, w8, #0x1
   242b4:	str	w8, [x19, #24]
   242b8:	ldr	w9, [x19]
   242bc:	ldr	x10, [x19, #8]
   242c0:	sub	w8, w9, #0x1
   242c4:	umull	x11, w8, w20
   242c8:	ldr	w12, [x10, x11]
   242cc:	subs	w12, w12, w21
   242d0:	str	w12, [x10, x11]
   242d4:	b.ne	24304 <get_python_format_unnamed_arg_count@@Base+0x463c>  // b.any
   242d8:	madd	x9, x8, x20, x10
   242dc:	ldr	w9, [x9, #8]
   242e0:	cmp	w9, #0x7
   242e4:	b.ne	242fc <get_python_format_unnamed_arg_count@@Base+0x4634>  // b.any
   242e8:	madd	x8, x8, x20, x10
   242ec:	ldr	x0, [x8, #16]
   242f0:	bl	22924 <get_python_format_unnamed_arg_count@@Base+0x2c5c>
   242f4:	ldr	w8, [x19]
   242f8:	sub	w8, w8, #0x1
   242fc:	mov	w9, w8
   24300:	str	w8, [x19]
   24304:	ldr	w8, [x19, #16]
   24308:	sub	w8, w8, w21
   2430c:	str	w8, [x19, #16]
   24310:	cbz	w9, 23fd0 <get_python_format_unnamed_arg_count@@Base+0x4308>
   24314:	ldr	x8, [x19, #8]
   24318:	ldr	w10, [x19, #24]
   2431c:	ldr	x11, [x19, #32]
   24320:	sub	w9, w9, #0x1
   24324:	umaddl	x0, w9, w20, x8
   24328:	sub	w8, w10, #0x1
   2432c:	umaddl	x1, w8, w20, x11
   24330:	b	24160 <get_python_format_unnamed_arg_count@@Base+0x4498>
   24334:	ldr	w8, [x0, #4]
   24338:	ldr	w9, [x1, #4]
   2433c:	cmp	w8, w9
   24340:	b.ne	24368 <get_python_format_unnamed_arg_count@@Base+0x46a0>  // b.any
   24344:	ldr	w8, [x0, #8]
   24348:	ldr	w9, [x1, #8]
   2434c:	cmp	w8, w9
   24350:	b.ne	24368 <get_python_format_unnamed_arg_count@@Base+0x46a0>  // b.any
   24354:	cmp	w8, #0x7
   24358:	b.ne	24370 <get_python_format_unnamed_arg_count@@Base+0x46a8>  // b.any
   2435c:	ldr	x0, [x0, #16]
   24360:	ldr	x1, [x1, #16]
   24364:	b	24378 <get_python_format_unnamed_arg_count@@Base+0x46b0>
   24368:	mov	w0, wzr
   2436c:	ret
   24370:	mov	w0, #0x1                   	// #1
   24374:	ret
   24378:	stp	x29, x30, [sp, #-48]!
   2437c:	stp	x22, x21, [sp, #16]
   24380:	stp	x20, x19, [sp, #32]
   24384:	mov	x29, sp
   24388:	mov	x19, x1
   2438c:	mov	x20, x0
   24390:	bl	22434 <get_python_format_unnamed_arg_count@@Base+0x276c>
   24394:	mov	x0, x19
   24398:	bl	22434 <get_python_format_unnamed_arg_count@@Base+0x276c>
   2439c:	ldr	w8, [x20]
   243a0:	ldr	w9, [x19]
   243a4:	cmp	w8, w9
   243a8:	b.ne	2444c <get_python_format_unnamed_arg_count@@Base+0x4784>  // b.any
   243ac:	cbz	w8, 243f0 <get_python_format_unnamed_arg_count@@Base+0x4728>
   243b0:	add	x8, x8, x8, lsl #1
   243b4:	mov	x21, xzr
   243b8:	lsl	x22, x8, #3
   243bc:	ldr	x8, [x20, #8]
   243c0:	ldr	x9, [x19, #8]
   243c4:	add	x0, x8, x21
   243c8:	add	x1, x9, x21
   243cc:	ldr	w8, [x0]
   243d0:	ldr	w9, [x1]
   243d4:	cmp	w8, w9
   243d8:	b.ne	2444c <get_python_format_unnamed_arg_count@@Base+0x4784>  // b.any
   243dc:	bl	24334 <get_python_format_unnamed_arg_count@@Base+0x466c>
   243e0:	tbz	w0, #0, 2444c <get_python_format_unnamed_arg_count@@Base+0x4784>
   243e4:	add	x21, x21, #0x18
   243e8:	cmp	x22, x21
   243ec:	b.ne	243bc <get_python_format_unnamed_arg_count@@Base+0x46f4>  // b.any
   243f0:	ldr	w8, [x20, #24]
   243f4:	ldr	w9, [x19, #24]
   243f8:	cmp	w8, w9
   243fc:	b.ne	2444c <get_python_format_unnamed_arg_count@@Base+0x4784>  // b.any
   24400:	cbz	w8, 24444 <get_python_format_unnamed_arg_count@@Base+0x477c>
   24404:	add	x8, x8, x8, lsl #1
   24408:	mov	x21, xzr
   2440c:	lsl	x22, x8, #3
   24410:	ldr	x8, [x20, #32]
   24414:	ldr	x9, [x19, #32]
   24418:	add	x0, x8, x21
   2441c:	add	x1, x9, x21
   24420:	ldr	w8, [x0]
   24424:	ldr	w9, [x1]
   24428:	cmp	w8, w9
   2442c:	b.ne	2444c <get_python_format_unnamed_arg_count@@Base+0x4784>  // b.any
   24430:	bl	24334 <get_python_format_unnamed_arg_count@@Base+0x466c>
   24434:	tbz	w0, #0, 2444c <get_python_format_unnamed_arg_count@@Base+0x4784>
   24438:	add	x21, x21, #0x18
   2443c:	cmp	x22, x21
   24440:	b.ne	24410 <get_python_format_unnamed_arg_count@@Base+0x4748>  // b.any
   24444:	mov	w0, #0x1                   	// #1
   24448:	b	24450 <get_python_format_unnamed_arg_count@@Base+0x4788>
   2444c:	mov	w0, wzr
   24450:	ldp	x20, x19, [sp, #32]
   24454:	ldp	x22, x21, [sp, #16]
   24458:	ldp	x29, x30, [sp], #48
   2445c:	ret
   24460:	cmp	w1, #0x2
   24464:	b.cc	24584 <get_python_format_unnamed_arg_count@@Base+0x48bc>  // b.lo, b.ul, b.last
   24468:	sub	sp, sp, #0x70
   2446c:	stp	x29, x30, [sp, #16]
   24470:	stp	x28, x27, [sp, #32]
   24474:	stp	x26, x25, [sp, #48]
   24478:	stp	x24, x23, [sp, #64]
   2447c:	stp	x22, x21, [sp, #80]
   24480:	stp	x20, x19, [sp, #96]
   24484:	ldp	w9, w8, [x0, #24]
   24488:	mov	w19, w1
   2448c:	mov	x20, x0
   24490:	add	x29, sp, #0x10
   24494:	mul	w21, w9, w1
   24498:	cmp	w8, w21
   2449c:	b.cs	244c8 <get_python_format_unnamed_arg_count@@Base+0x4800>  // b.hs, b.nlast
   244a0:	mov	w9, #0x1                   	// #1
   244a4:	ldr	x0, [x20, #32]
   244a8:	bfi	w9, w8, #1, #31
   244ac:	cmp	w9, w21
   244b0:	mov	w10, #0x18                  	// #24
   244b4:	csel	w8, w9, w21, hi  // hi = pmore
   244b8:	umull	x1, w8, w10
   244bc:	str	w8, [x20, #28]
   244c0:	bl	a460 <xrealloc@plt>
   244c4:	str	x0, [x20, #32]
   244c8:	ldr	w8, [x20, #24]
   244cc:	mov	w22, #0x1                   	// #1
   244d0:	mov	w23, #0x18                  	// #24
   244d4:	stur	w21, [x29, #-4]
   244d8:	mov	w9, w8
   244dc:	mov	w24, w8
   244e0:	cbz	w9, 24548 <get_python_format_unnamed_arg_count@@Base+0x4880>
   244e4:	mov	x26, xzr
   244e8:	mov	x25, xzr
   244ec:	mov	w27, w24
   244f0:	ldr	x28, [x20, #32]
   244f4:	add	w21, w27, w25
   244f8:	add	x9, x28, x26
   244fc:	ldr	x10, [x9]
   24500:	umaddl	x11, w21, w23, x28
   24504:	str	x10, [x11]
   24508:	ldr	w10, [x9, #8]
   2450c:	str	w10, [x11, #8]
   24510:	ldr	w10, [x9, #8]
   24514:	cmp	w10, #0x7
   24518:	b.ne	24530 <get_python_format_unnamed_arg_count@@Base+0x4868>  // b.any
   2451c:	ldr	x0, [x9, #16]
   24520:	bl	229ec <get_python_format_unnamed_arg_count@@Base+0x2d24>
   24524:	madd	x8, x21, x23, x28
   24528:	str	x0, [x8, #16]
   2452c:	ldr	w8, [x20, #24]
   24530:	add	x25, x25, #0x1
   24534:	cmp	x25, w8, uxtw
   24538:	add	x26, x26, #0x18
   2453c:	b.cc	244f0 <get_python_format_unnamed_arg_count@@Base+0x4828>  // b.lo, b.ul, b.last
   24540:	add	w24, w24, w25
   24544:	mov	w9, w8
   24548:	add	w22, w22, #0x1
   2454c:	cmp	w22, w19
   24550:	b.ne	244e0 <get_python_format_unnamed_arg_count@@Base+0x4818>  // b.any
   24554:	ldr	w8, [x20, #40]
   24558:	ldur	w9, [x29, #-4]
   2455c:	mul	w8, w8, w19
   24560:	str	w9, [x20, #24]
   24564:	str	w8, [x20, #40]
   24568:	ldp	x20, x19, [sp, #96]
   2456c:	ldp	x22, x21, [sp, #80]
   24570:	ldp	x24, x23, [sp, #64]
   24574:	ldp	x26, x25, [sp, #48]
   24578:	ldp	x28, x27, [sp, #32]
   2457c:	ldp	x29, x30, [sp, #16]
   24580:	add	sp, sp, #0x70
   24584:	ret
   24588:	stp	x29, x30, [sp, #-48]!
   2458c:	stp	x20, x19, [sp, #32]
   24590:	ldr	w8, [x0, #24]
   24594:	str	x21, [sp, #16]
   24598:	mov	x29, sp
   2459c:	cbnz	w8, 24684 <get_python_format_unnamed_arg_count@@Base+0x49bc>
   245a0:	ldr	w8, [x0]
   245a4:	mov	x19, x0
   245a8:	cbz	w8, 24604 <get_python_format_unnamed_arg_count@@Base+0x493c>
   245ac:	sub	w20, w8, #0x1
   245b0:	mov	w21, #0x18                  	// #24
   245b4:	ldr	x8, [x19, #8]
   245b8:	umaddl	x9, w20, w21, x8
   245bc:	ldr	w10, [x9, #4]
   245c0:	mov	w9, w20
   245c4:	cbnz	w10, 24614 <get_python_format_unnamed_arg_count@@Base+0x494c>
   245c8:	madd	x10, x9, x21, x8
   245cc:	ldr	w11, [x10]
   245d0:	ldr	w12, [x19, #16]
   245d4:	sub	w11, w12, w11
   245d8:	str	w11, [x19, #16]
   245dc:	ldr	w10, [x10, #8]
   245e0:	cmp	w10, #0x7
   245e4:	b.ne	245f4 <get_python_format_unnamed_arg_count@@Base+0x492c>  // b.any
   245e8:	madd	x8, x9, x21, x8
   245ec:	ldr	x0, [x8, #16]
   245f0:	bl	22924 <get_python_format_unnamed_arg_count@@Base+0x2c5c>
   245f4:	str	w20, [x19]
   245f8:	sub	w20, w20, #0x1
   245fc:	cmn	w20, #0x1
   24600:	b.ne	245b4 <get_python_format_unnamed_arg_count@@Base+0x48ec>  // b.any
   24604:	mov	x0, x19
   24608:	bl	22924 <get_python_format_unnamed_arg_count@@Base+0x2c5c>
   2460c:	mov	x19, xzr
   24610:	b	24670 <get_python_format_unnamed_arg_count@@Base+0x49a8>
   24614:	ldr	w10, [x19, #16]
   24618:	mov	w11, #0x18                  	// #24
   2461c:	sub	w10, w10, #0x1
   24620:	str	w10, [x19, #16]
   24624:	umaddl	x10, w20, w11, x8
   24628:	ldr	w11, [x10]
   2462c:	cmp	w11, #0x2
   24630:	b.cc	24640 <get_python_format_unnamed_arg_count@@Base+0x4978>  // b.lo, b.ul, b.last
   24634:	sub	w8, w11, #0x1
   24638:	str	w8, [x10]
   2463c:	b	24668 <get_python_format_unnamed_arg_count@@Base+0x49a0>
   24640:	mov	w10, #0x18                  	// #24
   24644:	madd	x10, x9, x10, x8
   24648:	ldr	w10, [x10, #8]
   2464c:	cmp	w10, #0x7
   24650:	b.ne	24664 <get_python_format_unnamed_arg_count@@Base+0x499c>  // b.any
   24654:	mov	w10, #0x18                  	// #24
   24658:	madd	x8, x9, x10, x8
   2465c:	ldr	x0, [x8, #16]
   24660:	bl	22924 <get_python_format_unnamed_arg_count@@Base+0x2c5c>
   24664:	str	w20, [x19]
   24668:	mov	x0, x19
   2466c:	bl	22434 <get_python_format_unnamed_arg_count@@Base+0x276c>
   24670:	mov	x0, x19
   24674:	ldp	x20, x19, [sp, #32]
   24678:	ldr	x21, [sp, #16]
   2467c:	ldp	x29, x30, [sp], #48
   24680:	ret
   24684:	bl	a7e0 <abort@plt>
   24688:	sub	sp, sp, #0x70
   2468c:	stp	x29, x30, [sp, #16]
   24690:	stp	x28, x27, [sp, #32]
   24694:	stp	x26, x25, [sp, #48]
   24698:	stp	x24, x23, [sp, #64]
   2469c:	stp	x22, x21, [sp, #80]
   246a0:	stp	x20, x19, [sp, #96]
   246a4:	add	x29, sp, #0x10
   246a8:	mov	x19, x1
   246ac:	mov	x20, x0
   246b0:	bl	22434 <get_python_format_unnamed_arg_count@@Base+0x276c>
   246b4:	mov	x0, x19
   246b8:	bl	22434 <get_python_format_unnamed_arg_count@@Base+0x276c>
   246bc:	ldr	w21, [x20, #40]
   246c0:	ldr	w22, [x19, #40]
   246c4:	cbz	w21, 24740 <get_python_format_unnamed_arg_count@@Base+0x4a78>
   246c8:	cbz	w22, 24774 <get_python_format_unnamed_arg_count@@Base+0x4aac>
   246cc:	mov	x0, x21
   246d0:	mov	x1, x22
   246d4:	bl	ac10 <gcd@plt>
   246d8:	udiv	w1, w22, w0
   246dc:	udiv	w21, w21, w0
   246e0:	mov	x0, x20
   246e4:	bl	24460 <get_python_format_unnamed_arg_count@@Base+0x4798>
   246e8:	mov	x0, x19
   246ec:	mov	w1, w21
   246f0:	bl	24460 <get_python_format_unnamed_arg_count@@Base+0x4798>
   246f4:	ldr	w8, [x20, #16]
   246f8:	ldr	w9, [x19, #16]
   246fc:	mov	x0, x20
   24700:	cmp	w8, w9
   24704:	csel	w21, w8, w9, hi  // hi = pmore
   24708:	mov	w1, w21
   2470c:	bl	2376c <get_python_format_unnamed_arg_count@@Base+0x3aa4>
   24710:	mov	x0, x19
   24714:	mov	w1, w21
   24718:	bl	2376c <get_python_format_unnamed_arg_count@@Base+0x3aa4>
   2471c:	ldr	w8, [x20, #16]
   24720:	ldr	w9, [x19, #16]
   24724:	cmp	w8, w9
   24728:	b.ne	24d18 <get_python_format_unnamed_arg_count@@Base+0x5050>  // b.any
   2472c:	ldr	w8, [x20, #40]
   24730:	ldr	w9, [x19, #40]
   24734:	cmp	w8, w9
   24738:	b.eq	247a8 <get_python_format_unnamed_arg_count@@Base+0x4ae0>  // b.none
   2473c:	b	24d18 <get_python_format_unnamed_arg_count@@Base+0x5050>
   24740:	cbz	w22, 247a8 <get_python_format_unnamed_arg_count@@Base+0x4ae0>
   24744:	ldr	w1, [x20, #16]
   24748:	ldr	w8, [x19, #16]
   2474c:	cmp	w1, w8
   24750:	b.cc	247a8 <get_python_format_unnamed_arg_count@@Base+0x4ae0>  // b.lo, b.ul, b.last
   24754:	mov	x0, x19
   24758:	bl	2376c <get_python_format_unnamed_arg_count@@Base+0x3aa4>
   2475c:	ldr	x8, [x19, #32]
   24760:	ldr	w8, [x8, #4]
   24764:	cbnz	w8, 247a8 <get_python_format_unnamed_arg_count@@Base+0x4ae0>
   24768:	ldr	w8, [x19, #16]
   2476c:	mov	x0, x19
   24770:	b	247a0 <get_python_format_unnamed_arg_count@@Base+0x4ad8>
   24774:	ldr	w1, [x19, #16]
   24778:	ldr	w8, [x20, #16]
   2477c:	cmp	w1, w8
   24780:	b.cc	247a8 <get_python_format_unnamed_arg_count@@Base+0x4ae0>  // b.lo, b.ul, b.last
   24784:	mov	x0, x20
   24788:	bl	2376c <get_python_format_unnamed_arg_count@@Base+0x3aa4>
   2478c:	ldr	x8, [x20, #32]
   24790:	ldr	w8, [x8, #4]
   24794:	cbnz	w8, 247a8 <get_python_format_unnamed_arg_count@@Base+0x4ae0>
   24798:	ldr	w8, [x20, #16]
   2479c:	mov	x0, x20
   247a0:	add	w1, w8, #0x1
   247a4:	bl	2376c <get_python_format_unnamed_arg_count@@Base+0x3aa4>
   247a8:	mov	w0, #0x30                  	// #48
   247ac:	bl	a590 <xmalloc@plt>
   247b0:	mov	x9, x0
   247b4:	str	xzr, [x9, #24]!
   247b8:	str	xzr, [x0, #32]
   247bc:	str	wzr, [x0, #40]
   247c0:	str	x9, [sp, #8]
   247c4:	str	wzr, [x0, #16]
   247c8:	stp	xzr, xzr, [x0]
   247cc:	ldr	w26, [x20]
   247d0:	ldr	w27, [x19]
   247d4:	ldr	x22, [x20, #8]
   247d8:	ldr	x23, [x19, #8]
   247dc:	cmp	w26, #0x0
   247e0:	cset	w9, ne  // ne = any
   247e4:	cmp	w27, #0x0
   247e8:	mov	x21, x0
   247ec:	mov	w8, wzr
   247f0:	cset	w10, ne  // ne = any
   247f4:	cbz	w27, 248e4 <get_python_format_unnamed_arg_count@@Base+0x4c1c>
   247f8:	cbz	w26, 248e4 <get_python_format_unnamed_arg_count@@Base+0x4c1c>
   247fc:	mov	w9, wzr
   24800:	mov	w8, wzr
   24804:	mov	w28, #0x18                  	// #24
   24808:	cmp	w8, w9
   2480c:	b.cs	24818 <get_python_format_unnamed_arg_count@@Base+0x4b50>  // b.hs, b.nlast
   24810:	ldr	x0, [x21, #8]
   24814:	b	24844 <get_python_format_unnamed_arg_count@@Base+0x4b7c>
   24818:	mov	w10, #0x1                   	// #1
   2481c:	add	w11, w8, #0x1
   24820:	ldr	x0, [x21, #8]
   24824:	bfi	w10, w9, #1, #31
   24828:	cmp	w10, w11
   2482c:	csinc	w8, w10, w8, hi  // hi = pmore
   24830:	umull	x1, w8, w28
   24834:	str	w8, [x21, #4]
   24838:	bl	a460 <xrealloc@plt>
   2483c:	ldr	w8, [x21]
   24840:	str	x0, [x21, #8]
   24844:	ldr	w9, [x22]
   24848:	ldr	w10, [x23]
   2484c:	umaddl	x24, w8, w28, x0
   24850:	mov	x0, x24
   24854:	mov	x1, x22
   24858:	cmp	w9, w10
   2485c:	csel	w8, w9, w10, cc  // cc = lo, ul, last
   24860:	mov	x2, x23
   24864:	str	w8, [x24]
   24868:	bl	24e60 <get_python_format_unnamed_arg_count@@Base+0x5198>
   2486c:	ldr	w8, [x21]
   24870:	ldr	w9, [x21, #16]
   24874:	add	w8, w8, #0x1
   24878:	str	w8, [x21]
   2487c:	ldr	w10, [x24]
   24880:	add	w9, w9, w10
   24884:	str	w9, [x21, #16]
   24888:	ldr	w9, [x22]
   2488c:	subs	w9, w9, w10
   24890:	mov	x10, x22
   24894:	str	w9, [x10], #24
   24898:	ldr	w9, [x24]
   2489c:	ldr	w11, [x23]
   248a0:	csel	x22, x10, x22, eq  // eq = none
   248a4:	cset	w10, eq  // eq = none
   248a8:	sub	w26, w26, w10
   248ac:	mov	x10, x23
   248b0:	subs	w9, w11, w9
   248b4:	str	w9, [x10], #24
   248b8:	cset	w9, eq  // eq = none
   248bc:	csel	x23, x10, x23, eq  // eq = none
   248c0:	sub	w27, w27, w9
   248c4:	cmp	w26, #0x0
   248c8:	cset	w9, ne  // ne = any
   248cc:	cmp	w27, #0x0
   248d0:	cset	w10, ne  // ne = any
   248d4:	cbz	w27, 248e4 <get_python_format_unnamed_arg_count@@Base+0x4c1c>
   248d8:	cbz	w26, 248e4 <get_python_format_unnamed_arg_count@@Base+0x4c1c>
   248dc:	ldr	w9, [x21, #4]
   248e0:	b	24808 <get_python_format_unnamed_arg_count@@Base+0x4b40>
   248e4:	cbz	w9, 24910 <get_python_format_unnamed_arg_count@@Base+0x4c48>
   248e8:	ldr	w9, [x19, #24]
   248ec:	cbnz	w9, 24d18 <get_python_format_unnamed_arg_count@@Base+0x5050>
   248f0:	ldr	w9, [x22, #4]
   248f4:	cbnz	w9, 249f8 <get_python_format_unnamed_arg_count@@Base+0x4d30>
   248f8:	ldr	w9, [x21, #4]
   248fc:	cmp	w8, w9
   24900:	b.cs	24948 <get_python_format_unnamed_arg_count@@Base+0x4c80>  // b.hs, b.nlast
   24904:	ldr	x23, [x21, #8]
   24908:	mov	w9, wzr
   2490c:	b	24980 <get_python_format_unnamed_arg_count@@Base+0x4cb8>
   24910:	cbz	w10, 2493c <get_python_format_unnamed_arg_count@@Base+0x4c74>
   24914:	ldr	w9, [x20, #24]
   24918:	cbnz	w9, 24d18 <get_python_format_unnamed_arg_count@@Base+0x5050>
   2491c:	ldr	w9, [x23, #4]
   24920:	cbnz	w9, 24b5c <get_python_format_unnamed_arg_count@@Base+0x4e94>
   24924:	ldr	w9, [x21, #4]
   24928:	cmp	w8, w9
   2492c:	b.cs	24aac <get_python_format_unnamed_arg_count@@Base+0x4de4>  // b.hs, b.nlast
   24930:	ldr	x22, [x21, #8]
   24934:	mov	w9, wzr
   24938:	b	24ae4 <get_python_format_unnamed_arg_count@@Base+0x4e1c>
   2493c:	mov	w27, wzr
   24940:	mov	w26, wzr
   24944:	b	24c0c <get_python_format_unnamed_arg_count@@Base+0x4f44>
   24948:	mov	w10, #0x1                   	// #1
   2494c:	add	w11, w8, #0x1
   24950:	ldr	x0, [x21, #8]
   24954:	bfi	w10, w9, #1, #31
   24958:	cmp	w10, w11
   2495c:	mov	w12, #0x18                  	// #24
   24960:	csinc	w8, w10, w8, hi  // hi = pmore
   24964:	umull	x1, w8, w12
   24968:	str	w8, [x21, #4]
   2496c:	bl	a460 <xrealloc@plt>
   24970:	str	x0, [x21, #8]
   24974:	ldr	w8, [x21]
   24978:	ldr	w9, [x22, #4]
   2497c:	mov	x23, x0
   24980:	ldr	w10, [x22]
   24984:	mov	w11, #0x18                  	// #24
   24988:	umaddl	x24, w8, w11, x23
   2498c:	stp	w10, w9, [x24]
   24990:	ldr	w9, [x22, #8]
   24994:	str	w9, [x24, #8]
   24998:	ldr	w9, [x22, #8]
   2499c:	cmp	w9, #0x7
   249a0:	b.ne	249c0 <get_python_format_unnamed_arg_count@@Base+0x4cf8>  // b.any
   249a4:	ldr	x0, [x22, #16]
   249a8:	mov	w28, w8
   249ac:	bl	229ec <get_python_format_unnamed_arg_count@@Base+0x2d24>
   249b0:	mov	w8, #0x18                  	// #24
   249b4:	madd	x8, x28, x8, x23
   249b8:	str	x0, [x8, #16]
   249bc:	ldr	w8, [x21]
   249c0:	movi	v0.2s, #0x1
   249c4:	str	d0, [x24]
   249c8:	ldr	w9, [x21, #16]
   249cc:	add	w8, w8, #0x1
   249d0:	str	w8, [x21]
   249d4:	mov	x10, x22
   249d8:	add	w9, w9, #0x1
   249dc:	str	w9, [x21, #16]
   249e0:	ldr	w9, [x22]
   249e4:	subs	w9, w9, #0x1
   249e8:	str	w9, [x10], #24
   249ec:	cset	w9, eq  // eq = none
   249f0:	csel	x22, x10, x22, eq  // eq = none
   249f4:	sub	w26, w26, w9
   249f8:	ldr	w9, [x21, #4]
   249fc:	add	w8, w8, w26
   24a00:	cmp	w9, w8
   24a04:	b.cs	24a30 <get_python_format_unnamed_arg_count@@Base+0x4d68>  // b.hs, b.nlast
   24a08:	mov	w10, #0x1                   	// #1
   24a0c:	ldr	x0, [x21, #8]
   24a10:	bfi	w10, w9, #1, #31
   24a14:	cmp	w10, w8
   24a18:	mov	w11, #0x18                  	// #24
   24a1c:	csel	w8, w10, w8, hi  // hi = pmore
   24a20:	umull	x1, w8, w11
   24a24:	str	w8, [x21, #4]
   24a28:	bl	a460 <xrealloc@plt>
   24a2c:	str	x0, [x21, #8]
   24a30:	cbz	w26, 24c0c <get_python_format_unnamed_arg_count@@Base+0x4f44>
   24a34:	ldr	w8, [x21]
   24a38:	add	x22, x22, #0x10
   24a3c:	mov	w23, #0x18                  	// #24
   24a40:	ldr	x28, [x21, #8]
   24a44:	ldur	d0, [x22, #-16]
   24a48:	umaddl	x24, w8, w23, x28
   24a4c:	str	d0, [x24]
   24a50:	ldur	w9, [x22, #-8]
   24a54:	str	w9, [x24, #8]
   24a58:	ldur	w9, [x22, #-8]
   24a5c:	cmp	w9, #0x7
   24a60:	b.ne	24a84 <get_python_format_unnamed_arg_count@@Base+0x4dbc>  // b.any
   24a64:	ldr	x0, [x22]
   24a68:	mov	w25, w8
   24a6c:	bl	229ec <get_python_format_unnamed_arg_count@@Base+0x2d24>
   24a70:	madd	x8, x25, x23, x28
   24a74:	str	x0, [x8, #16]
   24a78:	ldr	w8, [x21]
   24a7c:	ldr	w9, [x24]
   24a80:	b	24a88 <get_python_format_unnamed_arg_count@@Base+0x4dc0>
   24a84:	fmov	w9, s0
   24a88:	ldr	w10, [x21, #16]
   24a8c:	add	w8, w8, #0x1
   24a90:	subs	w26, w26, #0x1
   24a94:	add	x22, x22, #0x18
   24a98:	add	w9, w10, w9
   24a9c:	str	w8, [x21]
   24aa0:	str	w9, [x21, #16]
   24aa4:	b.ne	24a40 <get_python_format_unnamed_arg_count@@Base+0x4d78>  // b.any
   24aa8:	b	24c0c <get_python_format_unnamed_arg_count@@Base+0x4f44>
   24aac:	mov	w10, #0x1                   	// #1
   24ab0:	add	w11, w8, #0x1
   24ab4:	ldr	x0, [x21, #8]
   24ab8:	bfi	w10, w9, #1, #31
   24abc:	cmp	w10, w11
   24ac0:	mov	w12, #0x18                  	// #24
   24ac4:	csinc	w8, w10, w8, hi  // hi = pmore
   24ac8:	umull	x1, w8, w12
   24acc:	str	w8, [x21, #4]
   24ad0:	bl	a460 <xrealloc@plt>
   24ad4:	str	x0, [x21, #8]
   24ad8:	ldr	w8, [x21]
   24adc:	ldr	w9, [x23, #4]
   24ae0:	mov	x22, x0
   24ae4:	ldr	w10, [x23]
   24ae8:	mov	w11, #0x18                  	// #24
   24aec:	umaddl	x24, w8, w11, x22
   24af0:	stp	w10, w9, [x24]
   24af4:	ldr	w9, [x23, #8]
   24af8:	str	w9, [x24, #8]
   24afc:	ldr	w9, [x23, #8]
   24b00:	cmp	w9, #0x7
   24b04:	b.ne	24b24 <get_python_format_unnamed_arg_count@@Base+0x4e5c>  // b.any
   24b08:	ldr	x0, [x23, #16]
   24b0c:	mov	w25, w8
   24b10:	bl	229ec <get_python_format_unnamed_arg_count@@Base+0x2d24>
   24b14:	mov	w8, #0x18                  	// #24
   24b18:	madd	x8, x25, x8, x22
   24b1c:	str	x0, [x8, #16]
   24b20:	ldr	w8, [x21]
   24b24:	movi	v0.2s, #0x1
   24b28:	str	d0, [x24]
   24b2c:	ldr	w9, [x21, #16]
   24b30:	add	w8, w8, #0x1
   24b34:	str	w8, [x21]
   24b38:	mov	x10, x23
   24b3c:	add	w9, w9, #0x1
   24b40:	str	w9, [x21, #16]
   24b44:	ldr	w9, [x23]
   24b48:	subs	w9, w9, #0x1
   24b4c:	str	w9, [x10], #24
   24b50:	cset	w9, eq  // eq = none
   24b54:	csel	x23, x10, x23, eq  // eq = none
   24b58:	sub	w27, w27, w9
   24b5c:	ldr	w9, [x21, #4]
   24b60:	add	w8, w8, w27
   24b64:	cmp	w9, w8
   24b68:	b.cs	24b94 <get_python_format_unnamed_arg_count@@Base+0x4ecc>  // b.hs, b.nlast
   24b6c:	mov	w10, #0x1                   	// #1
   24b70:	ldr	x0, [x21, #8]
   24b74:	bfi	w10, w9, #1, #31
   24b78:	cmp	w10, w8
   24b7c:	mov	w11, #0x18                  	// #24
   24b80:	csel	w8, w10, w8, hi  // hi = pmore
   24b84:	umull	x1, w8, w11
   24b88:	str	w8, [x21, #4]
   24b8c:	bl	a460 <xrealloc@plt>
   24b90:	str	x0, [x21, #8]
   24b94:	cbz	w27, 24c0c <get_python_format_unnamed_arg_count@@Base+0x4f44>
   24b98:	ldr	w8, [x21]
   24b9c:	add	x22, x23, #0x10
   24ba0:	mov	w23, #0x18                  	// #24
   24ba4:	ldr	x28, [x21, #8]
   24ba8:	ldur	d0, [x22, #-16]
   24bac:	umaddl	x24, w8, w23, x28
   24bb0:	str	d0, [x24]
   24bb4:	ldur	w9, [x22, #-8]
   24bb8:	str	w9, [x24, #8]
   24bbc:	ldur	w9, [x22, #-8]
   24bc0:	cmp	w9, #0x7
   24bc4:	b.ne	24be8 <get_python_format_unnamed_arg_count@@Base+0x4f20>  // b.any
   24bc8:	ldr	x0, [x22]
   24bcc:	mov	w25, w8
   24bd0:	bl	229ec <get_python_format_unnamed_arg_count@@Base+0x2d24>
   24bd4:	madd	x8, x25, x23, x28
   24bd8:	str	x0, [x8, #16]
   24bdc:	ldr	w8, [x21]
   24be0:	ldr	w9, [x24]
   24be4:	b	24bec <get_python_format_unnamed_arg_count@@Base+0x4f24>
   24be8:	fmov	w9, s0
   24bec:	ldr	w10, [x21, #16]
   24bf0:	add	w8, w8, #0x1
   24bf4:	subs	w27, w27, #0x1
   24bf8:	add	x22, x22, #0x18
   24bfc:	add	w9, w10, w9
   24c00:	str	w8, [x21]
   24c04:	str	w9, [x21, #16]
   24c08:	b.ne	24ba4 <get_python_format_unnamed_arg_count@@Base+0x4edc>  // b.any
   24c0c:	orr	w8, w26, w27
   24c10:	cbnz	w8, 24d18 <get_python_format_unnamed_arg_count@@Base+0x5050>
   24c14:	ldr	w9, [x20, #40]
   24c18:	ldr	w8, [x19, #40]
   24c1c:	cbz	w9, 24d1c <get_python_format_unnamed_arg_count@@Base+0x5054>
   24c20:	ldr	w26, [x20, #24]
   24c24:	cbz	w8, 24d98 <get_python_format_unnamed_arg_count@@Base+0x50d0>
   24c28:	ldr	w27, [x19, #24]
   24c2c:	cbz	w26, 24d10 <get_python_format_unnamed_arg_count@@Base+0x5048>
   24c30:	cbz	w27, 24d10 <get_python_format_unnamed_arg_count@@Base+0x5048>
   24c34:	ldr	x8, [sp, #8]
   24c38:	ldr	x22, [x19, #32]
   24c3c:	ldr	x23, [x20, #32]
   24c40:	mov	w25, #0x18                  	// #24
   24c44:	ldr	w8, [x8]
   24c48:	ldr	w9, [x21, #28]
   24c4c:	cmp	w8, w9
   24c50:	b.cs	24c5c <get_python_format_unnamed_arg_count@@Base+0x4f94>  // b.hs, b.nlast
   24c54:	ldr	x0, [x21, #32]
   24c58:	b	24c88 <get_python_format_unnamed_arg_count@@Base+0x4fc0>
   24c5c:	mov	w10, #0x1                   	// #1
   24c60:	add	w11, w8, #0x1
   24c64:	ldr	x0, [x21, #32]
   24c68:	bfi	w10, w9, #1, #31
   24c6c:	cmp	w10, w11
   24c70:	csinc	w8, w10, w8, hi  // hi = pmore
   24c74:	umull	x1, w8, w25
   24c78:	str	w8, [x21, #28]
   24c7c:	bl	a460 <xrealloc@plt>
   24c80:	ldr	w8, [x21, #24]
   24c84:	str	x0, [x21, #32]
   24c88:	ldr	w9, [x23]
   24c8c:	ldr	w10, [x22]
   24c90:	umaddl	x24, w8, w25, x0
   24c94:	mov	x0, x24
   24c98:	mov	x1, x23
   24c9c:	cmp	w9, w10
   24ca0:	csel	w8, w9, w10, cc  // cc = lo, ul, last
   24ca4:	mov	x2, x22
   24ca8:	str	w8, [x24]
   24cac:	bl	24e60 <get_python_format_unnamed_arg_count@@Base+0x5198>
   24cb0:	ldr	w8, [x21, #24]
   24cb4:	ldr	w9, [x21, #40]
   24cb8:	add	w8, w8, #0x1
   24cbc:	str	w8, [x21, #24]
   24cc0:	ldr	w10, [x24]
   24cc4:	add	w9, w9, w10
   24cc8:	str	w9, [x21, #40]
   24ccc:	ldr	w9, [x23]
   24cd0:	subs	w9, w9, w10
   24cd4:	mov	x10, x23
   24cd8:	str	w9, [x10], #24
   24cdc:	ldr	w9, [x24]
   24ce0:	ldr	w11, [x22]
   24ce4:	csel	x23, x10, x23, eq  // eq = none
   24ce8:	cset	w10, eq  // eq = none
   24cec:	sub	w26, w26, w10
   24cf0:	mov	x10, x22
   24cf4:	subs	w9, w11, w9
   24cf8:	str	w9, [x10], #24
   24cfc:	cset	w9, eq  // eq = none
   24d00:	csel	x22, x10, x22, eq  // eq = none
   24d04:	sub	w27, w27, w9
   24d08:	cbz	w26, 24d10 <get_python_format_unnamed_arg_count@@Base+0x5048>
   24d0c:	cbnz	w27, 24c48 <get_python_format_unnamed_arg_count@@Base+0x4f80>
   24d10:	orr	w8, w27, w26
   24d14:	cbz	w8, 24e1c <get_python_format_unnamed_arg_count@@Base+0x5154>
   24d18:	bl	a7e0 <abort@plt>
   24d1c:	cbz	w8, 24e1c <get_python_format_unnamed_arg_count@@Base+0x5154>
   24d20:	ldr	w8, [x19, #24]
   24d24:	stp	w8, w8, [x21, #24]
   24d28:	add	x8, x8, x8, lsl #1
   24d2c:	lsl	x0, x8, #3
   24d30:	bl	a590 <xmalloc@plt>
   24d34:	str	x0, [x21, #32]
   24d38:	ldr	w8, [x19, #24]
   24d3c:	cbz	w8, 24e0c <get_python_format_unnamed_arg_count@@Base+0x5144>
   24d40:	mov	x22, xzr
   24d44:	mov	w23, #0x1                   	// #1
   24d48:	ldr	x9, [x19, #32]
   24d4c:	add	x24, x0, x22
   24d50:	add	x9, x9, x22
   24d54:	ldr	x10, [x9]
   24d58:	str	x10, [x24]
   24d5c:	ldr	w10, [x9, #8]
   24d60:	str	w10, [x24, #8]
   24d64:	ldr	w10, [x9, #8]
   24d68:	cmp	w10, #0x7
   24d6c:	b.ne	24d80 <get_python_format_unnamed_arg_count@@Base+0x50b8>  // b.any
   24d70:	ldr	x0, [x9, #16]
   24d74:	bl	229ec <get_python_format_unnamed_arg_count@@Base+0x2d24>
   24d78:	str	x0, [x24, #16]
   24d7c:	ldr	w8, [x19, #24]
   24d80:	cmp	x23, w8, uxtw
   24d84:	b.cs	24e0c <get_python_format_unnamed_arg_count@@Base+0x5144>  // b.hs, b.nlast
   24d88:	ldr	x0, [x21, #32]
   24d8c:	add	x22, x22, #0x18
   24d90:	add	x23, x23, #0x1
   24d94:	b	24d48 <get_python_format_unnamed_arg_count@@Base+0x5080>
   24d98:	add	x8, x26, x26, lsl #1
   24d9c:	lsl	x0, x8, #3
   24da0:	stp	w26, w26, [x21, #24]
   24da4:	bl	a590 <xmalloc@plt>
   24da8:	str	x0, [x21, #32]
   24dac:	ldr	w8, [x20, #24]
   24db0:	cbz	w8, 24e14 <get_python_format_unnamed_arg_count@@Base+0x514c>
   24db4:	mov	x22, xzr
   24db8:	mov	w23, #0x1                   	// #1
   24dbc:	ldr	x9, [x20, #32]
   24dc0:	add	x24, x0, x22
   24dc4:	add	x9, x9, x22
   24dc8:	ldr	x10, [x9]
   24dcc:	str	x10, [x24]
   24dd0:	ldr	w10, [x9, #8]
   24dd4:	str	w10, [x24, #8]
   24dd8:	ldr	w10, [x9, #8]
   24ddc:	cmp	w10, #0x7
   24de0:	b.ne	24df4 <get_python_format_unnamed_arg_count@@Base+0x512c>  // b.any
   24de4:	ldr	x0, [x9, #16]
   24de8:	bl	229ec <get_python_format_unnamed_arg_count@@Base+0x2d24>
   24dec:	str	x0, [x24, #16]
   24df0:	ldr	w8, [x20, #24]
   24df4:	cmp	x23, w8, uxtw
   24df8:	b.cs	24e14 <get_python_format_unnamed_arg_count@@Base+0x514c>  // b.hs, b.nlast
   24dfc:	ldr	x0, [x21, #32]
   24e00:	add	x22, x22, #0x18
   24e04:	add	x23, x23, #0x1
   24e08:	b	24dbc <get_python_format_unnamed_arg_count@@Base+0x50f4>
   24e0c:	ldr	w8, [x19, #40]
   24e10:	b	24e18 <get_python_format_unnamed_arg_count@@Base+0x5150>
   24e14:	ldr	w8, [x20, #40]
   24e18:	str	w8, [x21, #40]
   24e1c:	mov	x0, x20
   24e20:	bl	22924 <get_python_format_unnamed_arg_count@@Base+0x2c5c>
   24e24:	mov	x0, x19
   24e28:	bl	22924 <get_python_format_unnamed_arg_count@@Base+0x2c5c>
   24e2c:	mov	x0, x21
   24e30:	bl	23e18 <get_python_format_unnamed_arg_count@@Base+0x4150>
   24e34:	mov	x0, x21
   24e38:	bl	22434 <get_python_format_unnamed_arg_count@@Base+0x276c>
   24e3c:	mov	x0, x21
   24e40:	ldp	x20, x19, [sp, #96]
   24e44:	ldp	x22, x21, [sp, #80]
   24e48:	ldp	x24, x23, [sp, #64]
   24e4c:	ldp	x26, x25, [sp, #48]
   24e50:	ldp	x28, x27, [sp, #32]
   24e54:	ldp	x29, x30, [sp, #16]
   24e58:	add	sp, sp, #0x70
   24e5c:	ret
   24e60:	stp	x29, x30, [sp, #-32]!
   24e64:	stp	x20, x19, [sp, #16]
   24e68:	ldr	w8, [x1, #4]
   24e6c:	mov	x20, x2
   24e70:	mov	x19, x0
   24e74:	mov	x29, sp
   24e78:	cbnz	w8, 24e84 <get_python_format_unnamed_arg_count@@Base+0x51bc>
   24e7c:	ldr	w8, [x20, #4]
   24e80:	cbz	w8, 24e88 <get_python_format_unnamed_arg_count@@Base+0x51c0>
   24e84:	mov	w8, #0x1                   	// #1
   24e88:	str	w8, [x19, #4]
   24e8c:	ldr	w8, [x1, #8]
   24e90:	ldr	w9, [x20, #8]
   24e94:	cmp	w8, w9
   24e98:	b.ne	24ed4 <get_python_format_unnamed_arg_count@@Base+0x520c>  // b.any
   24e9c:	cmp	w8, #0x7
   24ea0:	str	w8, [x19, #8]
   24ea4:	b.ne	24fa0 <get_python_format_unnamed_arg_count@@Base+0x52d8>  // b.any
   24ea8:	ldr	x0, [x1, #16]
   24eac:	bl	229ec <get_python_format_unnamed_arg_count@@Base+0x2d24>
   24eb0:	ldr	x8, [x20, #16]
   24eb4:	mov	x20, x0
   24eb8:	mov	x0, x8
   24ebc:	bl	229ec <get_python_format_unnamed_arg_count@@Base+0x2d24>
   24ec0:	mov	x1, x0
   24ec4:	mov	x0, x20
   24ec8:	bl	24688 <get_python_format_unnamed_arg_count@@Base+0x49c0>
   24ecc:	str	x0, [x19, #16]
   24ed0:	b	24fa0 <get_python_format_unnamed_arg_count@@Base+0x52d8>
   24ed4:	subs	w11, w8, #0x1
   24ed8:	sub	w10, w9, #0x2
   24edc:	b.ne	24ee8 <get_python_format_unnamed_arg_count@@Base+0x5220>  // b.any
   24ee0:	cmp	w10, #0x3
   24ee4:	b.ls	24efc <get_python_format_unnamed_arg_count@@Base+0x5234>  // b.plast
   24ee8:	subs	w12, w9, #0x1
   24eec:	b.ne	24f04 <get_python_format_unnamed_arg_count@@Base+0x523c>  // b.any
   24ef0:	sub	w13, w8, #0x2
   24ef4:	cmp	w13, #0x3
   24ef8:	b.hi	24f2c <get_python_format_unnamed_arg_count@@Base+0x5264>  // b.pmore
   24efc:	mov	w8, #0x1                   	// #1
   24f00:	b	24f9c <get_python_format_unnamed_arg_count@@Base+0x52d4>
   24f04:	cmp	w8, #0x2
   24f08:	b.ne	24f14 <get_python_format_unnamed_arg_count@@Base+0x524c>  // b.any
   24f0c:	cmp	w9, #0x3
   24f10:	b.eq	24f24 <get_python_format_unnamed_arg_count@@Base+0x525c>  // b.none
   24f14:	cmp	w8, #0x3
   24f18:	b.ne	24f78 <get_python_format_unnamed_arg_count@@Base+0x52b0>  // b.any
   24f1c:	cmp	w9, #0x2
   24f20:	b.ne	24f78 <get_python_format_unnamed_arg_count@@Base+0x52b0>  // b.any
   24f24:	mov	w8, #0x2                   	// #2
   24f28:	b	24f9c <get_python_format_unnamed_arg_count@@Base+0x52d4>
   24f2c:	mov	w13, wzr
   24f30:	mov	w14, wzr
   24f34:	cmp	w8, #0x7
   24f38:	b.ne	24f50 <get_python_format_unnamed_arg_count@@Base+0x5288>  // b.any
   24f3c:	ldr	x15, [x1, #16]
   24f40:	ldr	w16, [x15]
   24f44:	cbnz	w16, 24f50 <get_python_format_unnamed_arg_count@@Base+0x5288>
   24f48:	ldr	w15, [x15, #24]
   24f4c:	cbz	w15, 25018 <get_python_format_unnamed_arg_count@@Base+0x5350>
   24f50:	cmp	w9, #0x7
   24f54:	b.ne	24fac <get_python_format_unnamed_arg_count@@Base+0x52e4>  // b.any
   24f58:	ldr	x9, [x20, #16]
   24f5c:	ldr	w10, [x9]
   24f60:	cbnz	w10, 24f6c <get_python_format_unnamed_arg_count@@Base+0x52a4>
   24f64:	ldr	w9, [x9, #24]
   24f68:	cbz	w9, 25038 <get_python_format_unnamed_arg_count@@Base+0x5370>
   24f6c:	add	x8, x19, #0x8
   24f70:	str	wzr, [x8]
   24f74:	b	24fa0 <get_python_format_unnamed_arg_count@@Base+0x52d8>
   24f78:	cmp	w8, #0x4
   24f7c:	b.ne	24f88 <get_python_format_unnamed_arg_count@@Base+0x52c0>  // b.any
   24f80:	cmp	w9, #0x5
   24f84:	b.eq	24f98 <get_python_format_unnamed_arg_count@@Base+0x52d0>  // b.none
   24f88:	cmp	w8, #0x5
   24f8c:	b.ne	24fe4 <get_python_format_unnamed_arg_count@@Base+0x531c>  // b.any
   24f90:	cmp	w9, #0x4
   24f94:	b.ne	24fe4 <get_python_format_unnamed_arg_count@@Base+0x531c>  // b.any
   24f98:	mov	w8, #0x4                   	// #4
   24f9c:	str	w8, [x19, #8]
   24fa0:	ldp	x20, x19, [sp, #16]
   24fa4:	ldp	x29, x30, [sp], #32
   24fa8:	ret
   24fac:	and	w8, w8, #0xfffffffe
   24fb0:	cmp	w8, #0x2
   24fb4:	b.ne	24fc4 <get_python_format_unnamed_arg_count@@Base+0x52fc>  // b.any
   24fb8:	and	w9, w9, #0xfffffffe
   24fbc:	cmp	w9, #0x4
   24fc0:	b.eq	24efc <get_python_format_unnamed_arg_count@@Base+0x5234>  // b.none
   24fc4:	cmp	w8, #0x4
   24fc8:	add	x8, x19, #0x8
   24fcc:	b.ne	24f70 <get_python_format_unnamed_arg_count@@Base+0x52a8>  // b.any
   24fd0:	cmp	w10, #0x1
   24fd4:	b.hi	24f70 <get_python_format_unnamed_arg_count@@Base+0x52a8>  // b.pmore
   24fd8:	mov	w9, #0x1                   	// #1
   24fdc:	str	w9, [x8]
   24fe0:	b	24fa0 <get_python_format_unnamed_arg_count@@Base+0x52d8>
   24fe4:	cmp	w9, #0x5
   24fe8:	cset	w14, eq  // eq = none
   24fec:	cmp	w8, #0x6
   24ff0:	b.ne	24ffc <get_python_format_unnamed_arg_count@@Base+0x5334>  // b.any
   24ff4:	cmp	w9, #0x5
   24ff8:	b.eq	25010 <get_python_format_unnamed_arg_count@@Base+0x5348>  // b.none
   24ffc:	cmp	w8, #0x5
   25000:	cset	w13, eq  // eq = none
   25004:	b.ne	24f34 <get_python_format_unnamed_arg_count@@Base+0x526c>  // b.any
   25008:	cmp	w9, #0x6
   2500c:	b.ne	24f34 <get_python_format_unnamed_arg_count@@Base+0x526c>  // b.any
   25010:	mov	w8, #0x6                   	// #6
   25014:	b	24f9c <get_python_format_unnamed_arg_count@@Base+0x52d4>
   25018:	cmp	w12, #0x2
   2501c:	b.cc	25030 <get_python_format_unnamed_arg_count@@Base+0x5368>  // b.lo, b.ul, b.last
   25020:	cmp	w9, #0x3
   25024:	b.eq	24f24 <get_python_format_unnamed_arg_count@@Base+0x525c>  // b.none
   25028:	cmp	w9, #0x4
   2502c:	b.ne	25058 <get_python_format_unnamed_arg_count@@Base+0x5390>  // b.any
   25030:	str	w9, [x19, #8]
   25034:	b	24fa0 <get_python_format_unnamed_arg_count@@Base+0x52d8>
   25038:	cmp	w11, #0x2
   2503c:	b.cc	24f9c <get_python_format_unnamed_arg_count@@Base+0x52d4>  // b.lo, b.ul, b.last
   25040:	cmp	w8, #0x3
   25044:	b.eq	24f24 <get_python_format_unnamed_arg_count@@Base+0x525c>  // b.none
   25048:	cmp	w8, #0x4
   2504c:	b.eq	24f9c <get_python_format_unnamed_arg_count@@Base+0x52d4>  // b.none
   25050:	cbnz	w13, 24f98 <get_python_format_unnamed_arg_count@@Base+0x52d0>
   25054:	b	2505c <get_python_format_unnamed_arg_count@@Base+0x5394>
   25058:	cbnz	w14, 24f98 <get_python_format_unnamed_arg_count@@Base+0x52d0>
   2505c:	str	wzr, [x19, #8]
   25060:	b	24fa0 <get_python_format_unnamed_arg_count@@Base+0x52d8>
   25064:	sub	sp, sp, #0x70
   25068:	stp	x29, x30, [sp, #16]
   2506c:	stp	x28, x27, [sp, #32]
   25070:	stp	x26, x25, [sp, #48]
   25074:	stp	x24, x23, [sp, #64]
   25078:	stp	x22, x21, [sp, #80]
   2507c:	stp	x20, x19, [sp, #96]
   25080:	ldrb	w10, [x0]
   25084:	add	x29, sp, #0x10
   25088:	str	x3, [sp]
   2508c:	cbz	w10, 25344 <get_python_format_unnamed_arg_count@@Base+0x567c>
   25090:	adrp	x20, 3a000 <plural_table_size@@Base+0xc00>
   25094:	mov	x21, x0
   25098:	mov	x22, x2
   2509c:	mov	x19, xzr
   250a0:	mov	w25, wzr
   250a4:	mov	w24, wzr
   250a8:	mov	w13, wzr
   250ac:	mov	w26, #0x1                   	// #1
   250b0:	mov	w27, #0xa                   	// #10
   250b4:	add	x20, x20, #0x316
   250b8:	mov	x9, x0
   250bc:	str	x0, [sp, #8]
   250c0:	and	w8, w10, #0xff
   250c4:	cmp	w8, #0x25
   250c8:	add	x8, x9, #0x1
   250cc:	b.ne	252e4 <get_python_format_unnamed_arg_count@@Base+0x561c>  // b.any
   250d0:	cbz	x22, 250e4 <get_python_format_unnamed_arg_count@@Base+0x541c>
   250d4:	sub	x10, x9, x21
   250d8:	ldrb	w11, [x22, x10]
   250dc:	orr	w11, w11, #0x1
   250e0:	strb	w11, [x22, x10]
   250e4:	ldrb	w10, [x8]
   250e8:	add	w25, w25, #0x1
   250ec:	sub	w11, w10, #0x30
   250f0:	cmp	w11, #0x9
   250f4:	b.hi	25138 <get_python_format_unnamed_arg_count@@Base+0x5470>  // b.pmore
   250f8:	mov	w11, wzr
   250fc:	add	x9, x9, #0x2
   25100:	mul	w11, w11, w27
   25104:	add	w11, w11, w10, uxtb
   25108:	ldrb	w10, [x9], #1
   2510c:	sub	w11, w11, #0x30
   25110:	sub	w12, w10, #0x30
   25114:	cmp	w12, #0xa
   25118:	b.cc	25100 <get_python_format_unnamed_arg_count@@Base+0x5438>  // b.lo, b.ul, b.last
   2511c:	cmp	w10, #0x24
   25120:	cset	w10, eq  // eq = none
   25124:	cmp	w11, #0x0
   25128:	cset	w12, ne  // ne = any
   2512c:	tst	w10, w12
   25130:	csel	w26, w11, w26, ne  // ne = any
   25134:	csel	x8, x9, x8, ne  // ne = any
   25138:	add	x28, x8, #0x1
   2513c:	ldurb	w8, [x28, #-1]
   25140:	sub	w9, w8, #0x2a
   25144:	cmp	w9, #0x6
   25148:	b.hi	2515c <get_python_format_unnamed_arg_count@@Base+0x5494>  // b.pmore
   2514c:	adr	x10, 2516c <get_python_format_unnamed_arg_count@@Base+0x54a4>
   25150:	ldrb	w11, [x20, x9]
   25154:	add	x10, x10, x11, lsl #2
   25158:	br	x10
   2515c:	cmp	w8, #0x23
   25160:	b.eq	2516c <get_python_format_unnamed_arg_count@@Base+0x54a4>  // b.none
   25164:	cmp	w8, #0x20
   25168:	b.ne	25174 <get_python_format_unnamed_arg_count@@Base+0x54ac>  // b.any
   2516c:	add	x28, x28, #0x1
   25170:	b	2513c <get_python_format_unnamed_arg_count@@Base+0x5474>
   25174:	sub	w9, w8, #0x30
   25178:	cmp	w9, #0x9
   2517c:	sub	x28, x28, #0x1
   25180:	b.hi	251d8 <get_python_format_unnamed_arg_count@@Base+0x5510>  // b.pmore
   25184:	ldrb	w8, [x28, #1]!
   25188:	sub	w9, w8, #0x30
   2518c:	cmp	w9, #0xa
   25190:	b.cc	25184 <get_python_format_unnamed_arg_count@@Base+0x54bc>  // b.lo, b.ul, b.last
   25194:	b	251d8 <get_python_format_unnamed_arg_count@@Base+0x5510>
   25198:	cmp	w13, w24
   2519c:	b.ne	251c0 <get_python_format_unnamed_arg_count@@Base+0x54f8>  // b.any
   251a0:	mov	w21, #0x1                   	// #1
   251a4:	bfi	w21, w24, #1, #31
   251a8:	lsl	x1, x21, #3
   251ac:	mov	x0, x19
   251b0:	bl	a460 <xrealloc@plt>
   251b4:	mov	x13, x21
   251b8:	ldr	x21, [sp, #8]
   251bc:	mov	x19, x0
   251c0:	add	x8, x19, w24, uxtw #3
   251c4:	mov	w9, #0x2                   	// #2
   251c8:	stp	w26, w9, [x8]
   251cc:	ldrb	w8, [x28]
   251d0:	add	w24, w24, #0x1
   251d4:	add	w26, w26, #0x1
   251d8:	cmp	w8, #0x2e
   251dc:	b.ne	25234 <get_python_format_unnamed_arg_count@@Base+0x556c>  // b.any
   251e0:	mov	x23, x28
   251e4:	ldrb	w8, [x23, #1]!
   251e8:	cmp	w8, #0x2a
   251ec:	b.ne	252f4 <get_python_format_unnamed_arg_count@@Base+0x562c>  // b.any
   251f0:	cmp	w13, w24
   251f4:	add	x23, x28, #0x2
   251f8:	b.ne	25218 <get_python_format_unnamed_arg_count@@Base+0x5550>  // b.any
   251fc:	mov	w28, #0x1                   	// #1
   25200:	bfi	w28, w13, #1, #31
   25204:	lsl	x1, x28, #3
   25208:	mov	x0, x19
   2520c:	bl	a460 <xrealloc@plt>
   25210:	mov	x19, x0
   25214:	mov	w13, w28
   25218:	add	x8, x19, w24, uxtw #3
   2521c:	mov	w9, #0x2                   	// #2
   25220:	stp	w26, w9, [x8]
   25224:	ldrb	w8, [x23]
   25228:	add	w24, w24, #0x1
   2522c:	add	w26, w26, #0x1
   25230:	b	25238 <get_python_format_unnamed_arg_count@@Base+0x5570>
   25234:	mov	x23, x28
   25238:	cmp	w8, #0x52
   2523c:	b.le	25270 <get_python_format_unnamed_arg_count@@Base+0x55a8>
   25240:	sub	w9, w8, #0x63
   25244:	cmp	w9, #0x15
   25248:	b.hi	25320 <get_python_format_unnamed_arg_count@@Base+0x5658>  // b.pmore
   2524c:	adrp	x12, 3a000 <plural_table_size@@Base+0xc00>
   25250:	add	x12, x12, #0x31d
   25254:	adr	x10, 25268 <get_python_format_unnamed_arg_count@@Base+0x55a0>
   25258:	ldrb	w11, [x12, x9]
   2525c:	add	x10, x10, x11, lsl #2
   25260:	mov	w28, #0x1                   	// #1
   25264:	br	x10
   25268:	mov	w28, #0x2                   	// #2
   2526c:	b	2528c <get_python_format_unnamed_arg_count@@Base+0x55c4>
   25270:	cmp	w8, #0x44
   25274:	b.le	25314 <get_python_format_unnamed_arg_count@@Base+0x564c>
   25278:	cmp	w8, #0x45
   2527c:	b.eq	25288 <get_python_format_unnamed_arg_count@@Base+0x55c0>  // b.none
   25280:	cmp	w8, #0x47
   25284:	b.ne	25494 <get_python_format_unnamed_arg_count@@Base+0x57cc>  // b.any
   25288:	mov	w28, #0x3                   	// #3
   2528c:	cmp	w13, w24
   25290:	b.ne	252bc <get_python_format_unnamed_arg_count@@Base+0x55f4>  // b.any
   25294:	mov	w21, w25
   25298:	mov	w25, #0x1                   	// #1
   2529c:	bfi	w25, w13, #1, #31
   252a0:	lsl	x1, x25, #3
   252a4:	mov	x0, x19
   252a8:	bl	a460 <xrealloc@plt>
   252ac:	mov	w13, w25
   252b0:	mov	w25, w21
   252b4:	ldr	x21, [sp, #8]
   252b8:	mov	x19, x0
   252bc:	add	x8, x19, w24, uxtw #3
   252c0:	add	w24, w24, #0x1
   252c4:	stp	w26, w28, [x8]
   252c8:	add	w26, w26, #0x1
   252cc:	cbz	x22, 252e0 <get_python_format_unnamed_arg_count@@Base+0x5618>
   252d0:	sub	x8, x23, x21
   252d4:	ldrb	w9, [x22, x8]
   252d8:	orr	w9, w9, #0x2
   252dc:	strb	w9, [x22, x8]
   252e0:	add	x8, x23, #0x1
   252e4:	ldrb	w10, [x8]
   252e8:	mov	x9, x8
   252ec:	cbnz	w10, 250c0 <get_python_format_unnamed_arg_count@@Base+0x53f8>
   252f0:	b	25358 <get_python_format_unnamed_arg_count@@Base+0x5690>
   252f4:	sub	w9, w8, #0x30
   252f8:	cmp	w9, #0x9
   252fc:	b.hi	25238 <get_python_format_unnamed_arg_count@@Base+0x5570>  // b.pmore
   25300:	ldrb	w8, [x23, #1]!
   25304:	sub	w9, w8, #0x30
   25308:	cmp	w9, #0xa
   2530c:	b.cc	25300 <get_python_format_unnamed_arg_count@@Base+0x5638>  // b.lo, b.ul, b.last
   25310:	b	25238 <get_python_format_unnamed_arg_count@@Base+0x5570>
   25314:	cmp	w8, #0x25
   25318:	b.eq	252cc <get_python_format_unnamed_arg_count@@Base+0x5604>  // b.none
   2531c:	b	25454 <get_python_format_unnamed_arg_count@@Base+0x578c>
   25320:	cmp	w8, #0x53
   25324:	b.eq	2533c <get_python_format_unnamed_arg_count@@Base+0x5674>  // b.none
   25328:	cmp	w8, #0x58
   2532c:	b.eq	25268 <get_python_format_unnamed_arg_count@@Base+0x55a0>  // b.none
   25330:	b	25494 <get_python_format_unnamed_arg_count@@Base+0x57cc>
   25334:	mov	w28, #0x4                   	// #4
   25338:	b	2528c <get_python_format_unnamed_arg_count@@Base+0x55c4>
   2533c:	mov	w28, #0x5                   	// #5
   25340:	b	2528c <get_python_format_unnamed_arg_count@@Base+0x55c4>
   25344:	mov	x19, xzr
   25348:	mov	w25, wzr
   2534c:	mov	w21, wzr
   25350:	mov	w24, wzr
   25354:	b	2543c <get_python_format_unnamed_arg_count@@Base+0x5774>
   25358:	mov	x21, x13
   2535c:	cmp	w24, #0x2
   25360:	b.cc	2543c <get_python_format_unnamed_arg_count@@Base+0x5774>  // b.lo, b.ul, b.last
   25364:	mov	w22, w24
   25368:	adrp	x3, 25000 <get_python_format_unnamed_arg_count@@Base+0x5338>
   2536c:	add	x3, x3, #0x73c
   25370:	mov	w2, #0x8                   	// #8
   25374:	mov	x0, x19
   25378:	mov	x1, x22
   2537c:	bl	a2f0 <qsort@plt>
   25380:	adrp	x23, 39000 <get_search_path@@Base+0x2b4c>
   25384:	mov	x20, xzr
   25388:	mov	w8, wzr
   2538c:	mov	w24, wzr
   25390:	add	x23, x23, #0x8bd
   25394:	mov	x26, x19
   25398:	cbz	w24, 253e0 <get_python_format_unnamed_arg_count@@Base+0x5718>
   2539c:	sub	w9, w24, #0x1
   253a0:	lsl	x11, x9, #3
   253a4:	ldr	w10, [x26]
   253a8:	ldr	w11, [x19, x11]
   253ac:	cmp	w10, w11
   253b0:	b.ne	253e0 <get_python_format_unnamed_arg_count@@Base+0x5718>  // b.any
   253b4:	add	x27, x19, x9, lsl #3
   253b8:	ldr	w11, [x26, #4]
   253bc:	ldr	w9, [x27, #4]!
   253c0:	cmp	w11, w9
   253c4:	cset	w9, eq  // eq = none
   253c8:	cset	w10, ne  // ne = any
   253cc:	orr	w12, w8, w9
   253d0:	csel	w9, w11, wzr, eq  // eq = none
   253d4:	tbz	w12, #0, 253fc <get_python_format_unnamed_arg_count@@Base+0x5734>
   253d8:	orr	w8, w8, w10
   253dc:	b	25424 <get_python_format_unnamed_arg_count@@Base+0x575c>
   253e0:	cmp	x20, w24, uxtw
   253e4:	b.ls	253f4 <get_python_format_unnamed_arg_count@@Base+0x572c>  // b.plast
   253e8:	ldr	x9, [x26]
   253ec:	mov	w10, w24
   253f0:	str	x9, [x19, x10, lsl #3]
   253f4:	add	w24, w24, #0x1
   253f8:	b	25428 <get_python_format_unnamed_arg_count@@Base+0x5760>
   253fc:	mov	w2, #0x5                   	// #5
   25400:	mov	x0, xzr
   25404:	mov	x1, x23
   25408:	bl	acd0 <dcgettext@plt>
   2540c:	ldr	w1, [x26]
   25410:	bl	aa20 <xasprintf@plt>
   25414:	ldr	x8, [sp]
   25418:	mov	w9, wzr
   2541c:	str	x0, [x8]
   25420:	mov	w8, #0x1                   	// #1
   25424:	str	w9, [x27]
   25428:	add	x20, x20, #0x1
   2542c:	cmp	x22, x20
   25430:	add	x26, x26, #0x8
   25434:	b.ne	25398 <get_python_format_unnamed_arg_count@@Base+0x56d0>  // b.any
   25438:	tbnz	w8, #0, 254fc <get_python_format_unnamed_arg_count@@Base+0x5834>
   2543c:	mov	w0, #0x18                  	// #24
   25440:	bl	a590 <xmalloc@plt>
   25444:	stp	w25, w24, [x0]
   25448:	str	w21, [x0, #8]
   2544c:	str	x19, [x0, #16]
   25450:	b	2550c <get_python_format_unnamed_arg_count@@Base+0x5844>
   25454:	cbnz	w8, 25494 <get_python_format_unnamed_arg_count@@Base+0x57cc>
   25458:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2545c:	add	x1, x1, #0x7e0
   25460:	mov	w2, #0x5                   	// #5
   25464:	mov	x0, xzr
   25468:	bl	acd0 <dcgettext@plt>
   2546c:	bl	a5a0 <xstrdup@plt>
   25470:	ldr	x8, [sp]
   25474:	str	x0, [x8]
   25478:	cbz	x22, 254fc <get_python_format_unnamed_arg_count@@Base+0x5834>
   2547c:	sub	x8, x23, x21
   25480:	add	x8, x8, x22
   25484:	ldurb	w9, [x8, #-1]
   25488:	orr	w9, w9, #0x4
   2548c:	sturb	w9, [x8, #-1]
   25490:	b	254fc <get_python_format_unnamed_arg_count@@Base+0x5834>
   25494:	sub	w8, w8, #0x20
   25498:	cmp	w8, #0x5e
   2549c:	b.hi	254c4 <get_python_format_unnamed_arg_count@@Base+0x57fc>  // b.pmore
   254a0:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   254a4:	add	x1, x1, #0x80e
   254a8:	mov	w2, #0x5                   	// #5
   254ac:	mov	x0, xzr
   254b0:	bl	acd0 <dcgettext@plt>
   254b4:	ldrb	w2, [x23]
   254b8:	mov	w1, w25
   254bc:	bl	aa20 <xasprintf@plt>
   254c0:	b	254e0 <get_python_format_unnamed_arg_count@@Base+0x5818>
   254c4:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   254c8:	add	x1, x1, #0x862
   254cc:	mov	w2, #0x5                   	// #5
   254d0:	mov	x0, xzr
   254d4:	bl	acd0 <dcgettext@plt>
   254d8:	mov	w1, w25
   254dc:	bl	aa20 <xasprintf@plt>
   254e0:	ldr	x8, [sp]
   254e4:	str	x0, [x8]
   254e8:	cbz	x22, 254fc <get_python_format_unnamed_arg_count@@Base+0x5834>
   254ec:	sub	x8, x23, x21
   254f0:	ldrb	w9, [x22, x8]
   254f4:	orr	w9, w9, #0x4
   254f8:	strb	w9, [x22, x8]
   254fc:	cbz	x19, 25508 <get_python_format_unnamed_arg_count@@Base+0x5840>
   25500:	mov	x0, x19
   25504:	bl	aa00 <free@plt>
   25508:	mov	x0, xzr
   2550c:	ldp	x20, x19, [sp, #96]
   25510:	ldp	x22, x21, [sp, #80]
   25514:	ldp	x24, x23, [sp, #64]
   25518:	ldp	x26, x25, [sp, #48]
   2551c:	ldp	x28, x27, [sp, #32]
   25520:	ldp	x29, x30, [sp, #16]
   25524:	add	sp, sp, #0x70
   25528:	ret
   2552c:	stp	x29, x30, [sp, #-32]!
   25530:	str	x19, [sp, #16]
   25534:	mov	x19, x0
   25538:	ldr	x0, [x0, #16]
   2553c:	mov	x29, sp
   25540:	cbz	x0, 25548 <get_python_format_unnamed_arg_count@@Base+0x5880>
   25544:	bl	aa00 <free@plt>
   25548:	mov	x0, x19
   2554c:	ldr	x19, [sp, #16]
   25550:	ldp	x29, x30, [sp], #32
   25554:	b	aa00 <free@plt>
   25558:	ldr	w0, [x0]
   2555c:	ret
   25560:	stp	x29, x30, [sp, #-80]!
   25564:	stp	x24, x23, [sp, #32]
   25568:	stp	x22, x21, [sp, #48]
   2556c:	stp	x20, x19, [sp, #64]
   25570:	ldr	w9, [x0, #4]
   25574:	ldr	w8, [x1, #4]
   25578:	str	x25, [sp, #16]
   2557c:	mov	x29, sp
   25580:	cmn	w9, w8
   25584:	b.ne	25590 <get_python_format_unnamed_arg_count@@Base+0x58c8>  // b.any
   25588:	mov	w0, wzr
   2558c:	b	25724 <get_python_format_unnamed_arg_count@@Base+0x5a5c>
   25590:	mov	x20, x5
   25594:	mov	x21, x4
   25598:	mov	x19, x3
   2559c:	mov	x22, x1
   255a0:	mov	x23, x0
   255a4:	orr	w10, w8, w9
   255a8:	cbz	w10, 25624 <get_python_format_unnamed_arg_count@@Base+0x595c>
   255ac:	cmp	w8, #0x0
   255b0:	cset	w11, ne  // ne = any
   255b4:	cmp	w9, #0x0
   255b8:	mov	x10, xzr
   255bc:	mov	x24, xzr
   255c0:	mov	w25, wzr
   255c4:	cset	w12, ne  // ne = any
   255c8:	tbz	w12, #0, 25684 <get_python_format_unnamed_arg_count@@Base+0x59bc>
   255cc:	tbz	w11, #0, 255f4 <get_python_format_unnamed_arg_count@@Base+0x592c>
   255d0:	ldr	x11, [x23, #16]
   255d4:	ldr	x12, [x22, #16]
   255d8:	mov	w13, w25
   255dc:	lsl	x13, x13, #3
   255e0:	ldr	w11, [x11, x10]
   255e4:	ldr	w12, [x12, x13]
   255e8:	cmp	w11, w12
   255ec:	b.hi	25684 <get_python_format_unnamed_arg_count@@Base+0x59bc>  // b.pmore
   255f0:	b.cs	255fc <get_python_format_unnamed_arg_count@@Base+0x5934>  // b.hs, b.nlast
   255f4:	tbz	w2, #0, 25600 <get_python_format_unnamed_arg_count@@Base+0x5938>
   255f8:	b	256bc <get_python_format_unnamed_arg_count@@Base+0x59f4>
   255fc:	add	w25, w25, #0x1
   25600:	add	x24, x24, #0x1
   25604:	cmp	x24, x9
   25608:	cset	w12, cc  // cc = lo, ul, last
   2560c:	cmp	w25, w8
   25610:	cset	w11, cc  // cc = lo, ul, last
   25614:	add	x10, x10, #0x8
   25618:	b.cc	255c8 <get_python_format_unnamed_arg_count@@Base+0x5900>  // b.lo, b.ul, b.last
   2561c:	cmp	x24, x9
   25620:	b.cc	255c8 <get_python_format_unnamed_arg_count@@Base+0x5900>  // b.lo, b.ul, b.last
   25624:	cbz	w8, 25588 <get_python_format_unnamed_arg_count@@Base+0x58c0>
   25628:	ldr	x9, [x23, #16]
   2562c:	ldr	x10, [x22, #16]
   25630:	mov	w12, wzr
   25634:	mov	w11, wzr
   25638:	mov	w12, w12
   2563c:	mov	w23, w11
   25640:	lsl	x13, x12, #3
   25644:	lsl	x14, x23, #3
   25648:	ldr	w13, [x9, x13]
   2564c:	ldr	w14, [x10, x14]
   25650:	cmp	w13, w14
   25654:	b.ne	25674 <get_python_format_unnamed_arg_count@@Base+0x59ac>  // b.any
   25658:	add	x13, x9, x12, lsl #3
   2565c:	add	x14, x10, x23, lsl #3
   25660:	ldr	w13, [x13, #4]
   25664:	ldr	w14, [x14, #4]
   25668:	cmp	w13, w14
   2566c:	b.ne	256f0 <get_python_format_unnamed_arg_count@@Base+0x5a28>  // b.any
   25670:	add	w11, w11, #0x1
   25674:	cmp	w11, w8
   25678:	add	w12, w12, #0x1
   2567c:	b.cc	25638 <get_python_format_unnamed_arg_count@@Base+0x5970>  // b.lo, b.ul, b.last
   25680:	b	25588 <get_python_format_unnamed_arg_count@@Base+0x58c0>
   25684:	cbz	x19, 25720 <get_python_format_unnamed_arg_count@@Base+0x5a58>
   25688:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2568c:	add	x1, x1, #0x333
   25690:	mov	w2, #0x5                   	// #5
   25694:	mov	x0, xzr
   25698:	bl	acd0 <dcgettext@plt>
   2569c:	ldr	x8, [x22, #16]
   256a0:	mov	w9, w25
   256a4:	lsl	x9, x9, #3
   256a8:	mov	x2, x20
   256ac:	ldr	w1, [x8, x9]
   256b0:	mov	x3, x21
   256b4:	blr	x19
   256b8:	b	25720 <get_python_format_unnamed_arg_count@@Base+0x5a58>
   256bc:	cbz	x19, 25720 <get_python_format_unnamed_arg_count@@Base+0x5a58>
   256c0:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   256c4:	add	x1, x1, #0x37d
   256c8:	mov	w2, #0x5                   	// #5
   256cc:	mov	x0, xzr
   256d0:	bl	acd0 <dcgettext@plt>
   256d4:	ldr	x8, [x23, #16]
   256d8:	and	x9, x24, #0xffffffff
   256dc:	lsl	x9, x9, #3
   256e0:	mov	x2, x20
   256e4:	ldr	w1, [x8, x9]
   256e8:	blr	x19
   256ec:	b	25720 <get_python_format_unnamed_arg_count@@Base+0x5a58>
   256f0:	cbz	x19, 25720 <get_python_format_unnamed_arg_count@@Base+0x5a58>
   256f4:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   256f8:	add	x1, x1, #0x546
   256fc:	mov	w2, #0x5                   	// #5
   25700:	mov	x0, xzr
   25704:	bl	acd0 <dcgettext@plt>
   25708:	ldr	x8, [x22, #16]
   2570c:	lsl	x9, x23, #3
   25710:	mov	x1, x21
   25714:	mov	x2, x20
   25718:	ldr	w3, [x8, x9]
   2571c:	blr	x19
   25720:	mov	w0, #0x1                   	// #1
   25724:	ldp	x20, x19, [sp, #64]
   25728:	ldp	x22, x21, [sp, #48]
   2572c:	ldp	x24, x23, [sp, #32]
   25730:	ldr	x25, [sp, #16]
   25734:	ldp	x29, x30, [sp], #80
   25738:	ret
   2573c:	ldr	w8, [x0]
   25740:	ldr	w9, [x1]
   25744:	cmp	w8, w9
   25748:	csetm	w8, cc  // cc = lo, ul, last
   2574c:	csinc	w0, w8, wzr, ls  // ls = plast
   25750:	ret
   25754:	sub	sp, sp, #0x70
   25758:	stp	x29, x30, [sp, #16]
   2575c:	stp	x28, x27, [sp, #32]
   25760:	stp	x26, x25, [sp, #48]
   25764:	stp	x24, x23, [sp, #64]
   25768:	stp	x22, x21, [sp, #80]
   2576c:	stp	x20, x19, [sp, #96]
   25770:	ldrb	w9, [x0]
   25774:	add	x29, sp, #0x10
   25778:	cbz	w9, 25a48 <get_python_format_unnamed_arg_count@@Base+0x5d80>
   2577c:	mov	x20, #0x2801                	// #10241
   25780:	movk	x20, #0x1, lsl #16
   25784:	mov	x14, x0
   25788:	mov	x22, x2
   2578c:	mov	x13, xzr
   25790:	mov	w19, wzr
   25794:	mov	w25, wzr
   25798:	mov	w24, wzr
   2579c:	mov	w27, #0x1                   	// #1
   257a0:	mov	w28, #0xa                   	// #10
   257a4:	movk	x20, #0x4000, lsl #48
   257a8:	mov	x8, x0
   257ac:	mov	w23, #0x1                   	// #1
   257b0:	stp	x3, x0, [sp]
   257b4:	and	w9, w9, #0xff
   257b8:	cmp	w9, #0x25
   257bc:	add	x26, x8, #0x1
   257c0:	b.ne	25948 <get_python_format_unnamed_arg_count@@Base+0x5c80>  // b.any
   257c4:	cbz	x22, 257d8 <get_python_format_unnamed_arg_count@@Base+0x5b10>
   257c8:	sub	x9, x8, x14
   257cc:	ldrb	w10, [x22, x9]
   257d0:	orr	w10, w10, #0x1
   257d4:	strb	w10, [x22, x9]
   257d8:	ldrb	w9, [x26]
   257dc:	add	w19, w19, #0x1
   257e0:	sub	w10, w9, #0x30
   257e4:	cmp	w10, #0x9
   257e8:	b.hi	2582c <get_python_format_unnamed_arg_count@@Base+0x5b64>  // b.pmore
   257ec:	mov	w10, wzr
   257f0:	add	x8, x8, #0x2
   257f4:	mul	w10, w10, w28
   257f8:	add	w10, w10, w9, uxtb
   257fc:	ldrb	w9, [x8], #1
   25800:	sub	w10, w10, #0x30
   25804:	sub	w11, w9, #0x30
   25808:	cmp	w11, #0xa
   2580c:	b.cc	257f4 <get_python_format_unnamed_arg_count@@Base+0x5b2c>  // b.lo, b.ul, b.last
   25810:	cmp	w9, #0x24
   25814:	cset	w9, eq  // eq = none
   25818:	cmp	w10, #0x0
   2581c:	cset	w11, ne  // ne = any
   25820:	tst	w9, w11
   25824:	csel	w23, w10, w23, ne  // ne = any
   25828:	csel	x26, x8, x26, ne  // ne = any
   2582c:	ldrb	w8, [x26]
   25830:	sub	w9, w8, #0x20
   25834:	cmp	w9, #0x3e
   25838:	b.hi	25850 <get_python_format_unnamed_arg_count@@Base+0x5b88>  // b.pmore
   2583c:	lsl	x9, x27, x9
   25840:	tst	x9, x20
   25844:	b.eq	25850 <get_python_format_unnamed_arg_count@@Base+0x5b88>  // b.none
   25848:	add	x26, x26, #0x1
   2584c:	b	2582c <get_python_format_unnamed_arg_count@@Base+0x5b64>
   25850:	sub	w9, w8, #0x30
   25854:	cmp	w9, #0x9
   25858:	b.hi	2586c <get_python_format_unnamed_arg_count@@Base+0x5ba4>  // b.pmore
   2585c:	ldrb	w8, [x26, #1]!
   25860:	sub	w9, w8, #0x30
   25864:	cmp	w9, #0xa
   25868:	b.cc	2585c <get_python_format_unnamed_arg_count@@Base+0x5b94>  // b.lo, b.ul, b.last
   2586c:	cmp	w8, #0x2e
   25870:	b.ne	25894 <get_python_format_unnamed_arg_count@@Base+0x5bcc>  // b.any
   25874:	ldrb	w8, [x26, #1]!
   25878:	sub	w9, w8, #0x30
   2587c:	cmp	w9, #0x9
   25880:	b.hi	25894 <get_python_format_unnamed_arg_count@@Base+0x5bcc>  // b.pmore
   25884:	ldrb	w8, [x26, #1]!
   25888:	sub	w9, w8, #0x30
   2588c:	cmp	w9, #0xa
   25890:	b.cc	25884 <get_python_format_unnamed_arg_count@@Base+0x5bbc>  // b.lo, b.ul, b.last
   25894:	cmp	w8, #0x57
   25898:	b.le	258c8 <get_python_format_unnamed_arg_count@@Base+0x5c00>
   2589c:	sub	w9, w8, #0x58
   258a0:	cmp	w9, #0x20
   258a4:	b.hi	25ac0 <get_python_format_unnamed_arg_count@@Base+0x5df8>  // b.pmore
   258a8:	mov	x11, #0x1001                	// #4097
   258ac:	movk	x11, #0x80, lsl #16
   258b0:	lsl	x10, x27, x9
   258b4:	movk	x11, #0x1, lsl #32
   258b8:	tst	x10, x11
   258bc:	b.eq	258e0 <get_python_format_unnamed_arg_count@@Base+0x5c18>  // b.none
   258c0:	mov	w21, #0x2                   	// #2
   258c4:	b	258fc <get_python_format_unnamed_arg_count@@Base+0x5c34>
   258c8:	cmp	w8, #0x25
   258cc:	b.eq	25930 <get_python_format_unnamed_arg_count@@Base+0x5c68>  // b.none
   258d0:	cmp	w8, #0x53
   258d4:	b.ne	25a74 <get_python_format_unnamed_arg_count@@Base+0x5dac>  // b.any
   258d8:	mov	w21, #0x4                   	// #4
   258dc:	b	258fc <get_python_format_unnamed_arg_count@@Base+0x5c34>
   258e0:	cmp	x9, #0xb
   258e4:	b.eq	258f8 <get_python_format_unnamed_arg_count@@Base+0x5c30>  // b.none
   258e8:	cmp	x9, #0x1b
   258ec:	b.ne	25ac0 <get_python_format_unnamed_arg_count@@Base+0x5df8>  // b.any
   258f0:	mov	w21, #0x3                   	// #3
   258f4:	b	258fc <get_python_format_unnamed_arg_count@@Base+0x5c34>
   258f8:	mov	w21, #0x1                   	// #1
   258fc:	cmp	w24, w25
   25900:	b.ne	25920 <get_python_format_unnamed_arg_count@@Base+0x5c58>  // b.any
   25904:	mov	w24, #0x1                   	// #1
   25908:	bfi	w24, w25, #1, #31
   2590c:	lsl	x1, x24, #3
   25910:	mov	x0, x13
   25914:	bl	a460 <xrealloc@plt>
   25918:	ldr	x14, [sp, #8]
   2591c:	mov	x13, x0
   25920:	add	x8, x13, w25, uxtw #3
   25924:	add	w25, w25, #0x1
   25928:	stp	w23, w21, [x8]
   2592c:	add	w23, w23, #0x1
   25930:	cbz	x22, 25944 <get_python_format_unnamed_arg_count@@Base+0x5c7c>
   25934:	sub	x8, x26, x14
   25938:	ldrb	w9, [x22, x8]
   2593c:	orr	w9, w9, #0x2
   25940:	strb	w9, [x22, x8]
   25944:	add	x26, x26, #0x1
   25948:	ldrb	w9, [x26]
   2594c:	mov	x8, x26
   25950:	cbnz	w9, 257b4 <get_python_format_unnamed_arg_count@@Base+0x5aec>
   25954:	mov	w28, w19
   25958:	cmp	w25, #0x2
   2595c:	b.cc	25a58 <get_python_format_unnamed_arg_count@@Base+0x5d90>  // b.lo, b.ul, b.last
   25960:	mov	w22, w25
   25964:	adrp	x3, 25000 <get_python_format_unnamed_arg_count@@Base+0x5338>
   25968:	add	x3, x3, #0xd78
   2596c:	mov	w2, #0x8                   	// #8
   25970:	mov	x0, x13
   25974:	mov	x1, x22
   25978:	mov	x19, x13
   2597c:	bl	a2f0 <qsort@plt>
   25980:	ldr	x27, [sp]
   25984:	adrp	x23, 39000 <get_search_path@@Base+0x2b4c>
   25988:	mov	x13, x19
   2598c:	mov	x20, xzr
   25990:	mov	w8, wzr
   25994:	mov	w25, wzr
   25998:	add	x23, x23, #0x8bd
   2599c:	mov	x26, x19
   259a0:	cbz	w25, 259e8 <get_python_format_unnamed_arg_count@@Base+0x5d20>
   259a4:	sub	w9, w25, #0x1
   259a8:	lsl	x11, x9, #3
   259ac:	ldr	w10, [x26]
   259b0:	ldr	w11, [x13, x11]
   259b4:	cmp	w10, w11
   259b8:	b.ne	259e8 <get_python_format_unnamed_arg_count@@Base+0x5d20>  // b.any
   259bc:	add	x21, x13, x9, lsl #3
   259c0:	ldr	w11, [x26, #4]
   259c4:	ldr	w9, [x21, #4]!
   259c8:	cmp	w11, w9
   259cc:	cset	w9, eq  // eq = none
   259d0:	cset	w10, ne  // ne = any
   259d4:	orr	w12, w8, w9
   259d8:	csel	w9, w11, wzr, eq  // eq = none
   259dc:	tbz	w12, #0, 25a04 <get_python_format_unnamed_arg_count@@Base+0x5d3c>
   259e0:	orr	w8, w8, w10
   259e4:	b	25a2c <get_python_format_unnamed_arg_count@@Base+0x5d64>
   259e8:	cmp	x20, w25, uxtw
   259ec:	b.ls	259fc <get_python_format_unnamed_arg_count@@Base+0x5d34>  // b.plast
   259f0:	ldr	x9, [x26]
   259f4:	mov	w10, w25
   259f8:	str	x9, [x13, x10, lsl #3]
   259fc:	add	w25, w25, #0x1
   25a00:	b	25a30 <get_python_format_unnamed_arg_count@@Base+0x5d68>
   25a04:	mov	w2, #0x5                   	// #5
   25a08:	mov	x0, xzr
   25a0c:	mov	x1, x23
   25a10:	bl	acd0 <dcgettext@plt>
   25a14:	ldr	w1, [x26]
   25a18:	bl	aa20 <xasprintf@plt>
   25a1c:	mov	x13, x19
   25a20:	mov	w9, wzr
   25a24:	mov	w8, #0x1                   	// #1
   25a28:	str	x0, [x27]
   25a2c:	str	w9, [x21]
   25a30:	add	x20, x20, #0x1
   25a34:	cmp	x22, x20
   25a38:	add	x26, x26, #0x8
   25a3c:	b.ne	259a0 <get_python_format_unnamed_arg_count@@Base+0x5cd8>  // b.any
   25a40:	tbz	w8, #0, 25a58 <get_python_format_unnamed_arg_count@@Base+0x5d90>
   25a44:	b	25b38 <get_python_format_unnamed_arg_count@@Base+0x5e70>
   25a48:	mov	x13, xzr
   25a4c:	mov	w28, wzr
   25a50:	mov	w24, wzr
   25a54:	mov	w25, wzr
   25a58:	mov	w0, #0x18                  	// #24
   25a5c:	mov	x19, x13
   25a60:	bl	a590 <xmalloc@plt>
   25a64:	stp	w28, w25, [x0]
   25a68:	str	w24, [x0, #8]
   25a6c:	str	x19, [x0, #16]
   25a70:	b	25b48 <get_python_format_unnamed_arg_count@@Base+0x5e80>
   25a74:	cbnz	w8, 25ac0 <get_python_format_unnamed_arg_count@@Base+0x5df8>
   25a78:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   25a7c:	add	x1, x1, #0x7e0
   25a80:	mov	w2, #0x5                   	// #5
   25a84:	mov	x0, xzr
   25a88:	mov	x19, x13
   25a8c:	bl	acd0 <dcgettext@plt>
   25a90:	bl	a5a0 <xstrdup@plt>
   25a94:	ldr	x8, [sp]
   25a98:	str	x0, [x8]
   25a9c:	cbz	x22, 25ab8 <get_python_format_unnamed_arg_count@@Base+0x5df0>
   25aa0:	ldr	x8, [sp, #8]
   25aa4:	sub	x8, x26, x8
   25aa8:	add	x8, x8, x22
   25aac:	ldurb	w9, [x8, #-1]
   25ab0:	orr	w9, w9, #0x4
   25ab4:	sturb	w9, [x8, #-1]
   25ab8:	mov	x13, x19
   25abc:	b	25b38 <get_python_format_unnamed_arg_count@@Base+0x5e70>
   25ac0:	sub	w8, w8, #0x20
   25ac4:	mov	w20, w19
   25ac8:	cmp	w8, #0x5e
   25acc:	b.hi	25af8 <get_python_format_unnamed_arg_count@@Base+0x5e30>  // b.pmore
   25ad0:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   25ad4:	add	x1, x1, #0x80e
   25ad8:	mov	w2, #0x5                   	// #5
   25adc:	mov	x0, xzr
   25ae0:	mov	x19, x13
   25ae4:	bl	acd0 <dcgettext@plt>
   25ae8:	ldrb	w2, [x26]
   25aec:	mov	w1, w20
   25af0:	bl	aa20 <xasprintf@plt>
   25af4:	b	25b18 <get_python_format_unnamed_arg_count@@Base+0x5e50>
   25af8:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   25afc:	add	x1, x1, #0x862
   25b00:	mov	w2, #0x5                   	// #5
   25b04:	mov	x0, xzr
   25b08:	mov	x19, x13
   25b0c:	bl	acd0 <dcgettext@plt>
   25b10:	mov	w1, w20
   25b14:	bl	aa20 <xasprintf@plt>
   25b18:	ldp	x8, x9, [sp]
   25b1c:	mov	x13, x19
   25b20:	str	x0, [x8]
   25b24:	cbz	x22, 25b38 <get_python_format_unnamed_arg_count@@Base+0x5e70>
   25b28:	sub	x8, x26, x9
   25b2c:	ldrb	w9, [x22, x8]
   25b30:	orr	w9, w9, #0x4
   25b34:	strb	w9, [x22, x8]
   25b38:	cbz	x13, 25b44 <get_python_format_unnamed_arg_count@@Base+0x5e7c>
   25b3c:	mov	x0, x13
   25b40:	bl	aa00 <free@plt>
   25b44:	mov	x0, xzr
   25b48:	ldp	x20, x19, [sp, #96]
   25b4c:	ldp	x22, x21, [sp, #80]
   25b50:	ldp	x24, x23, [sp, #64]
   25b54:	ldp	x26, x25, [sp, #48]
   25b58:	ldp	x28, x27, [sp, #32]
   25b5c:	ldp	x29, x30, [sp, #16]
   25b60:	add	sp, sp, #0x70
   25b64:	ret
   25b68:	stp	x29, x30, [sp, #-32]!
   25b6c:	str	x19, [sp, #16]
   25b70:	mov	x19, x0
   25b74:	ldr	x0, [x0, #16]
   25b78:	mov	x29, sp
   25b7c:	cbz	x0, 25b84 <get_python_format_unnamed_arg_count@@Base+0x5ebc>
   25b80:	bl	aa00 <free@plt>
   25b84:	mov	x0, x19
   25b88:	ldr	x19, [sp, #16]
   25b8c:	ldp	x29, x30, [sp], #32
   25b90:	b	aa00 <free@plt>
   25b94:	ldr	w0, [x0]
   25b98:	ret
   25b9c:	stp	x29, x30, [sp, #-80]!
   25ba0:	stp	x24, x23, [sp, #32]
   25ba4:	stp	x22, x21, [sp, #48]
   25ba8:	stp	x20, x19, [sp, #64]
   25bac:	ldr	w9, [x0, #4]
   25bb0:	ldr	w8, [x1, #4]
   25bb4:	str	x25, [sp, #16]
   25bb8:	mov	x29, sp
   25bbc:	cmn	w9, w8
   25bc0:	b.ne	25bcc <get_python_format_unnamed_arg_count@@Base+0x5f04>  // b.any
   25bc4:	mov	w0, wzr
   25bc8:	b	25d60 <get_python_format_unnamed_arg_count@@Base+0x6098>
   25bcc:	mov	x20, x5
   25bd0:	mov	x21, x4
   25bd4:	mov	x19, x3
   25bd8:	mov	x22, x1
   25bdc:	mov	x23, x0
   25be0:	orr	w10, w8, w9
   25be4:	cbz	w10, 25c60 <get_python_format_unnamed_arg_count@@Base+0x5f98>
   25be8:	cmp	w8, #0x0
   25bec:	cset	w11, ne  // ne = any
   25bf0:	cmp	w9, #0x0
   25bf4:	mov	x10, xzr
   25bf8:	mov	x24, xzr
   25bfc:	mov	w25, wzr
   25c00:	cset	w12, ne  // ne = any
   25c04:	tbz	w12, #0, 25cc0 <get_python_format_unnamed_arg_count@@Base+0x5ff8>
   25c08:	tbz	w11, #0, 25c30 <get_python_format_unnamed_arg_count@@Base+0x5f68>
   25c0c:	ldr	x11, [x23, #16]
   25c10:	ldr	x12, [x22, #16]
   25c14:	mov	w13, w25
   25c18:	lsl	x13, x13, #3
   25c1c:	ldr	w11, [x11, x10]
   25c20:	ldr	w12, [x12, x13]
   25c24:	cmp	w11, w12
   25c28:	b.hi	25cc0 <get_python_format_unnamed_arg_count@@Base+0x5ff8>  // b.pmore
   25c2c:	b.cs	25c38 <get_python_format_unnamed_arg_count@@Base+0x5f70>  // b.hs, b.nlast
   25c30:	tbz	w2, #0, 25c3c <get_python_format_unnamed_arg_count@@Base+0x5f74>
   25c34:	b	25cf8 <get_python_format_unnamed_arg_count@@Base+0x6030>
   25c38:	add	w25, w25, #0x1
   25c3c:	add	x24, x24, #0x1
   25c40:	cmp	x24, x9
   25c44:	cset	w12, cc  // cc = lo, ul, last
   25c48:	cmp	w25, w8
   25c4c:	cset	w11, cc  // cc = lo, ul, last
   25c50:	add	x10, x10, #0x8
   25c54:	b.cc	25c04 <get_python_format_unnamed_arg_count@@Base+0x5f3c>  // b.lo, b.ul, b.last
   25c58:	cmp	x24, x9
   25c5c:	b.cc	25c04 <get_python_format_unnamed_arg_count@@Base+0x5f3c>  // b.lo, b.ul, b.last
   25c60:	cbz	w8, 25bc4 <get_python_format_unnamed_arg_count@@Base+0x5efc>
   25c64:	ldr	x9, [x23, #16]
   25c68:	ldr	x10, [x22, #16]
   25c6c:	mov	w12, wzr
   25c70:	mov	w11, wzr
   25c74:	mov	w12, w12
   25c78:	mov	w23, w11
   25c7c:	lsl	x13, x12, #3
   25c80:	lsl	x14, x23, #3
   25c84:	ldr	w13, [x9, x13]
   25c88:	ldr	w14, [x10, x14]
   25c8c:	cmp	w13, w14
   25c90:	b.ne	25cb0 <get_python_format_unnamed_arg_count@@Base+0x5fe8>  // b.any
   25c94:	add	x13, x9, x12, lsl #3
   25c98:	add	x14, x10, x23, lsl #3
   25c9c:	ldr	w13, [x13, #4]
   25ca0:	ldr	w14, [x14, #4]
   25ca4:	cmp	w13, w14
   25ca8:	b.ne	25d2c <get_python_format_unnamed_arg_count@@Base+0x6064>  // b.any
   25cac:	add	w11, w11, #0x1
   25cb0:	cmp	w11, w8
   25cb4:	add	w12, w12, #0x1
   25cb8:	b.cc	25c74 <get_python_format_unnamed_arg_count@@Base+0x5fac>  // b.lo, b.ul, b.last
   25cbc:	b	25bc4 <get_python_format_unnamed_arg_count@@Base+0x5efc>
   25cc0:	cbz	x19, 25d5c <get_python_format_unnamed_arg_count@@Base+0x6094>
   25cc4:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   25cc8:	add	x1, x1, #0x333
   25ccc:	mov	w2, #0x5                   	// #5
   25cd0:	mov	x0, xzr
   25cd4:	bl	acd0 <dcgettext@plt>
   25cd8:	ldr	x8, [x22, #16]
   25cdc:	mov	w9, w25
   25ce0:	lsl	x9, x9, #3
   25ce4:	mov	x2, x20
   25ce8:	ldr	w1, [x8, x9]
   25cec:	mov	x3, x21
   25cf0:	blr	x19
   25cf4:	b	25d5c <get_python_format_unnamed_arg_count@@Base+0x6094>
   25cf8:	cbz	x19, 25d5c <get_python_format_unnamed_arg_count@@Base+0x6094>
   25cfc:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   25d00:	add	x1, x1, #0x37d
   25d04:	mov	w2, #0x5                   	// #5
   25d08:	mov	x0, xzr
   25d0c:	bl	acd0 <dcgettext@plt>
   25d10:	ldr	x8, [x23, #16]
   25d14:	and	x9, x24, #0xffffffff
   25d18:	lsl	x9, x9, #3
   25d1c:	mov	x2, x20
   25d20:	ldr	w1, [x8, x9]
   25d24:	blr	x19
   25d28:	b	25d5c <get_python_format_unnamed_arg_count@@Base+0x6094>
   25d2c:	cbz	x19, 25d5c <get_python_format_unnamed_arg_count@@Base+0x6094>
   25d30:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   25d34:	add	x1, x1, #0x546
   25d38:	mov	w2, #0x5                   	// #5
   25d3c:	mov	x0, xzr
   25d40:	bl	acd0 <dcgettext@plt>
   25d44:	ldr	x8, [x22, #16]
   25d48:	lsl	x9, x23, #3
   25d4c:	mov	x1, x21
   25d50:	mov	x2, x20
   25d54:	ldr	w3, [x8, x9]
   25d58:	blr	x19
   25d5c:	mov	w0, #0x1                   	// #1
   25d60:	ldp	x20, x19, [sp, #64]
   25d64:	ldp	x22, x21, [sp, #48]
   25d68:	ldp	x24, x23, [sp, #32]
   25d6c:	ldr	x25, [sp, #16]
   25d70:	ldp	x29, x30, [sp], #80
   25d74:	ret
   25d78:	ldr	w8, [x0]
   25d7c:	ldr	w9, [x1]
   25d80:	cmp	w8, w9
   25d84:	csetm	w8, cc  // cc = lo, ul, last
   25d88:	csinc	w0, w8, wzr, ls  // ls = plast
   25d8c:	ret
   25d90:	sub	sp, sp, #0x60
   25d94:	stp	x29, x30, [sp, #64]
   25d98:	add	x29, sp, #0x40
   25d9c:	stp	x20, x19, [sp, #80]
   25da0:	mov	x19, x3
   25da4:	mov	x20, x2
   25da8:	stur	x0, [x29, #-8]
   25dac:	stur	xzr, [x29, #-28]
   25db0:	bl	27ad8 <get_python_format_unnamed_arg_count@@Base+0x7e10>
   25db4:	sub	x8, x29, #0x18
   25db8:	stur	x0, [x29, #-16]
   25dbc:	add	x2, x8, #0x8
   25dc0:	sub	x0, x29, #0x8
   25dc4:	sub	x1, x29, #0x1c
   25dc8:	add	x3, sp, #0x18
   25dcc:	sub	x5, x29, #0x18
   25dd0:	mov	x4, xzr
   25dd4:	mov	w6, wzr
   25dd8:	mov	w7, wzr
   25ddc:	str	xzr, [sp, #24]
   25de0:	stp	x20, x19, [sp]
   25de4:	bl	25f50 <get_python_format_unnamed_arg_count@@Base+0x6288>
   25de8:	mov	w8, w0
   25dec:	mov	x0, xzr
   25df0:	tbz	w8, #0, 25e54 <get_python_format_unnamed_arg_count@@Base+0x618c>
   25df4:	ldur	x8, [x29, #-16]
   25df8:	ldr	x1, [sp, #24]
   25dfc:	cmp	x8, #0x0
   25e00:	csel	x0, x1, x8, eq  // eq = none
   25e04:	cbz	x8, 25e14 <get_python_format_unnamed_arg_count@@Base+0x614c>
   25e08:	cbz	x1, 25e14 <get_python_format_unnamed_arg_count@@Base+0x614c>
   25e0c:	mov	x0, x8
   25e10:	bl	29db8 <get_python_format_unnamed_arg_count@@Base+0xa0f0>
   25e14:	stur	x0, [x29, #-16]
   25e18:	cbz	x0, 25e34 <get_python_format_unnamed_arg_count@@Base+0x616c>
   25e1c:	bl	27a2c <get_python_format_unnamed_arg_count@@Base+0x7d64>
   25e20:	mov	w0, #0x10                  	// #16
   25e24:	bl	a590 <xmalloc@plt>
   25e28:	ldur	q0, [x29, #-24]
   25e2c:	str	q0, [x0]
   25e30:	b	25e54 <get_python_format_unnamed_arg_count@@Base+0x618c>
   25e34:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   25e38:	add	x1, x1, #0xf98
   25e3c:	mov	w2, #0x5                   	// #5
   25e40:	bl	acd0 <dcgettext@plt>
   25e44:	bl	a5a0 <xstrdup@plt>
   25e48:	mov	x8, x0
   25e4c:	mov	x0, xzr
   25e50:	str	x8, [x19]
   25e54:	ldp	x20, x19, [sp, #80]
   25e58:	ldp	x29, x30, [sp, #64]
   25e5c:	add	sp, sp, #0x60
   25e60:	ret
   25e64:	ldr	x0, [x0, #8]
   25e68:	b	2802c <get_python_format_unnamed_arg_count@@Base+0x8364>
   25e6c:	ldr	w0, [x0]
   25e70:	ret
   25e74:	stp	x29, x30, [sp, #-64]!
   25e78:	stp	x22, x21, [sp, #32]
   25e7c:	stp	x20, x19, [sp, #48]
   25e80:	ldr	x0, [x0, #8]
   25e84:	mov	x20, x5
   25e88:	mov	x21, x4
   25e8c:	mov	x19, x3
   25e90:	mov	x22, x1
   25e94:	str	x23, [sp, #16]
   25e98:	mov	x29, sp
   25e9c:	tbz	w2, #0, 25ed0 <get_python_format_unnamed_arg_count@@Base+0x6208>
   25ea0:	ldr	x1, [x22, #8]
   25ea4:	bl	29aa8 <get_python_format_unnamed_arg_count@@Base+0x9de0>
   25ea8:	tbnz	w0, #0, 25f0c <get_python_format_unnamed_arg_count@@Base+0x6244>
   25eac:	cbz	x19, 25f38 <get_python_format_unnamed_arg_count@@Base+0x6270>
   25eb0:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   25eb4:	add	x1, x1, #0x29c
   25eb8:	mov	w2, #0x5                   	// #5
   25ebc:	mov	x0, xzr
   25ec0:	bl	acd0 <dcgettext@plt>
   25ec4:	mov	x1, x21
   25ec8:	mov	x2, x20
   25ecc:	b	25f34 <get_python_format_unnamed_arg_count@@Base+0x626c>
   25ed0:	bl	280f4 <get_python_format_unnamed_arg_count@@Base+0x842c>
   25ed4:	ldr	x8, [x22, #8]
   25ed8:	mov	x23, x0
   25edc:	mov	x0, x8
   25ee0:	bl	280f4 <get_python_format_unnamed_arg_count@@Base+0x842c>
   25ee4:	mov	x1, x0
   25ee8:	mov	x0, x23
   25eec:	bl	28330 <get_python_format_unnamed_arg_count@@Base+0x8668>
   25ef0:	cbz	x0, 25f14 <get_python_format_unnamed_arg_count@@Base+0x624c>
   25ef4:	mov	x23, x0
   25ef8:	bl	27a2c <get_python_format_unnamed_arg_count@@Base+0x7d64>
   25efc:	ldr	x1, [x22, #8]
   25f00:	mov	x0, x23
   25f04:	bl	29aa8 <get_python_format_unnamed_arg_count@@Base+0x9de0>
   25f08:	tbz	w0, #0, 25f14 <get_python_format_unnamed_arg_count@@Base+0x624c>
   25f0c:	mov	w0, wzr
   25f10:	b	25f3c <get_python_format_unnamed_arg_count@@Base+0x6274>
   25f14:	cbz	x19, 25f38 <get_python_format_unnamed_arg_count@@Base+0x6270>
   25f18:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   25f1c:	add	x1, x1, #0x2d6
   25f20:	mov	w2, #0x5                   	// #5
   25f24:	mov	x0, xzr
   25f28:	bl	acd0 <dcgettext@plt>
   25f2c:	mov	x1, x20
   25f30:	mov	x2, x21
   25f34:	blr	x19
   25f38:	mov	w0, #0x1                   	// #1
   25f3c:	ldp	x20, x19, [sp, #48]
   25f40:	ldp	x22, x21, [sp, #32]
   25f44:	ldr	x23, [sp, #16]
   25f48:	ldp	x29, x30, [sp], #64
   25f4c:	ret
   25f50:	sub	sp, sp, #0x150
   25f54:	stp	x29, x30, [sp, #240]
   25f58:	stp	x28, x27, [sp, #256]
   25f5c:	stp	x26, x25, [sp, #272]
   25f60:	stp	x24, x23, [sp, #288]
   25f64:	stp	x22, x21, [sp, #304]
   25f68:	stp	x20, x19, [sp, #320]
   25f6c:	ldr	x9, [x2]
   25f70:	ldr	x20, [x0]
   25f74:	add	x29, sp, #0xe0
   25f78:	ldr	w24, [x1]
   25f7c:	str	x9, [x29, #8]
   25f80:	ldr	x19, [x29, #120]
   25f84:	ldrb	w8, [x20]
   25f88:	ldr	x10, [x3]
   25f8c:	str	d8, [sp, #224]
   25f90:	cbz	w8, 27588 <get_python_format_unnamed_arg_count@@Base+0x78c0>
   25f94:	ldr	x22, [x29, #112]
   25f98:	mov	w21, #0xa                   	// #10
   25f9c:	mov	x23, x20
   25fa0:	movi	v8.2s, #0x1
   25fa4:	str	x10, [sp, #96]
   25fa8:	str	w7, [sp, #68]
   25fac:	str	w6, [sp, #92]
   25fb0:	str	x4, [sp, #56]
   25fb4:	stur	x5, [x29, #-80]
   25fb8:	stp	x1, x2, [sp, #72]
   25fbc:	stp	x3, x0, [sp, #104]
   25fc0:	stp	x22, x19, [x29, #-96]
   25fc4:	stur	x20, [x29, #-104]
   25fc8:	and	w8, w8, #0xff
   25fcc:	cmp	w8, #0x7e
   25fd0:	add	x19, x23, #0x1
   25fd4:	b.ne	26138 <get_python_format_unnamed_arg_count@@Base+0x6470>  // b.any
   25fd8:	cbz	x22, 25fec <get_python_format_unnamed_arg_count@@Base+0x6324>
   25fdc:	sub	x8, x23, x20
   25fe0:	ldrb	w9, [x22, x8]
   25fe4:	orr	w9, w9, #0x1
   25fe8:	strb	w9, [x22, x8]
   25fec:	ldur	x9, [x29, #-80]
   25ff0:	mov	w26, wzr
   25ff4:	mov	x28, xzr
   25ff8:	ldr	w8, [x9]
   25ffc:	add	w8, w8, #0x1
   26000:	str	w8, [x9]
   26004:	ldrb	w8, [x19]
   26008:	mov	w20, w26
   2600c:	sub	w9, w8, #0x30
   26010:	cmp	w9, #0x9
   26014:	b.hi	26070 <get_python_format_unnamed_arg_count@@Base+0x63a8>  // b.pmore
   26018:	mov	w27, wzr
   2601c:	mul	w9, w27, w21
   26020:	add	w9, w9, w8, uxtb
   26024:	ldrb	w8, [x19, #1]!
   26028:	sub	w27, w9, #0x30
   2602c:	sub	w10, w8, #0x30
   26030:	cmp	w10, #0xa
   26034:	b.cc	2601c <get_python_format_unnamed_arg_count@@Base+0x6354>  // b.lo, b.ul, b.last
   26038:	mov	w25, #0x2                   	// #2
   2603c:	mov	x23, x19
   26040:	add	w26, w20, #0x1
   26044:	lsl	x1, x26, #3
   26048:	mov	x0, x28
   2604c:	bl	a460 <xrealloc@plt>
   26050:	add	x8, x0, w20, uxtw #3
   26054:	stp	w25, w27, [x8]
   26058:	mov	x19, x23
   2605c:	ldrb	w8, [x19], #1
   26060:	mov	x28, x0
   26064:	cmp	w8, #0x2c
   26068:	b.eq	26004 <get_python_format_unnamed_arg_count@@Base+0x633c>  // b.none
   2606c:	b	26140 <get_python_format_unnamed_arg_count@@Base+0x6478>
   26070:	cmp	w8, #0x2c
   26074:	mov	w25, wzr
   26078:	b.gt	2609c <get_python_format_unnamed_arg_count@@Base+0x63d4>
   2607c:	cmp	w8, #0x23
   26080:	b.eq	26110 <get_python_format_unnamed_arg_count@@Base+0x6448>  // b.none
   26084:	cmp	w8, #0x27
   26088:	b.eq	26120 <get_python_format_unnamed_arg_count@@Base+0x6458>  // b.none
   2608c:	cmp	w8, #0x2b
   26090:	b.eq	260b4 <get_python_format_unnamed_arg_count@@Base+0x63ec>  // b.none
   26094:	mov	w27, w25
   26098:	b	2603c <get_python_format_unnamed_arg_count@@Base+0x6374>
   2609c:	cmp	w8, #0x76
   260a0:	b.eq	260f8 <get_python_format_unnamed_arg_count@@Base+0x6430>  // b.none
   260a4:	cmp	w8, #0x56
   260a8:	b.eq	260f8 <get_python_format_unnamed_arg_count@@Base+0x6430>  // b.none
   260ac:	cmp	w8, #0x2d
   260b0:	b.ne	26094 <get_python_format_unnamed_arg_count@@Base+0x63cc>  // b.any
   260b4:	mov	x23, x19
   260b8:	ldrb	w9, [x23, #1]!
   260bc:	sub	w10, w9, #0x30
   260c0:	cmp	w10, #0x9
   260c4:	b.hi	274f4 <get_python_format_unnamed_arg_count@@Base+0x782c>  // b.pmore
   260c8:	mov	w10, wzr
   260cc:	mul	w10, w10, w21
   260d0:	add	w10, w10, w9, uxtb
   260d4:	ldrb	w9, [x23, #1]!
   260d8:	sub	w10, w10, #0x30
   260dc:	sub	w11, w9, #0x30
   260e0:	cmp	w11, #0xa
   260e4:	b.cc	260cc <get_python_format_unnamed_arg_count@@Base+0x6404>  // b.lo, b.ul, b.last
   260e8:	cmp	w8, #0x2d
   260ec:	cneg	w27, w10, eq  // eq = none
   260f0:	mov	w25, #0x2                   	// #2
   260f4:	b	26040 <get_python_format_unnamed_arg_count@@Base+0x6378>
   260f8:	mvn	w8, w24
   260fc:	add	x23, x19, #0x1
   26100:	mov	w27, w24
   26104:	add	w24, w24, w8, lsr #31
   26108:	mov	w25, #0x4                   	// #4
   2610c:	b	26040 <get_python_format_unnamed_arg_count@@Base+0x6378>
   26110:	mov	w27, wzr
   26114:	add	x23, x19, #0x1
   26118:	mov	w25, #0x3                   	// #3
   2611c:	b	26040 <get_python_format_unnamed_arg_count@@Base+0x6378>
   26120:	ldrb	w8, [x19, #1]
   26124:	cbz	w8, 27538 <get_python_format_unnamed_arg_count@@Base+0x7870>
   26128:	mov	w27, wzr
   2612c:	add	x23, x19, #0x2
   26130:	mov	w25, #0x1                   	// #1
   26134:	b	26040 <get_python_format_unnamed_arg_count@@Base+0x6378>
   26138:	mov	x23, x19
   2613c:	b	265ac <get_python_format_unnamed_arg_count@@Base+0x68e4>
   26140:	mov	w25, wzr
   26144:	mov	w19, wzr
   26148:	mov	w9, w19
   2614c:	ldrb	w8, [x23], #1
   26150:	mov	w19, w9
   26154:	mov	w9, #0x1                   	// #1
   26158:	cmp	w8, #0x3a
   2615c:	b.eq	2614c <get_python_format_unnamed_arg_count@@Base+0x6484>  // b.none
   26160:	sub	w9, w8, #0xa
   26164:	cmp	w9, #0x74
   26168:	b.hi	27708 <get_python_format_unnamed_arg_count@@Base+0x7a40>  // b.pmore
   2616c:	adrp	x12, 3a000 <plural_table_size@@Base+0xc00>
   26170:	add	x12, x12, #0x3bc
   26174:	adr	x10, 26184 <get_python_format_unnamed_arg_count@@Base+0x64bc>
   26178:	ldrh	w11, [x12, x9, lsl #1]
   2617c:	add	x10, x10, x11, lsl #2
   26180:	br	x10
   26184:	mov	w25, #0x1                   	// #1
   26188:	b	26148 <get_python_format_unnamed_arg_count@@Base+0x6480>
   2618c:	ldur	x8, [x29, #-80]
   26190:	adrp	x4, 3a000 <plural_table_size@@Base+0xc00>
   26194:	add	x4, x4, #0x4bc
   26198:	add	x0, x29, #0x8
   2619c:	ldr	w5, [x8]
   261a0:	mov	w3, #0x4                   	// #4
   261a4:	ldur	x6, [x29, #-88]
   261a8:	mov	w1, w26
   261ac:	mov	x2, x28
   261b0:	bl	27c50 <get_python_format_unnamed_arg_count@@Base+0x7f88>
   261b4:	ldur	x20, [x29, #-104]
   261b8:	tbz	w0, #0, 27908 <get_python_format_unnamed_arg_count@@Base+0x7c40>
   261bc:	ldur	x22, [x29, #-96]
   261c0:	tbnz	w24, #31, 2658c <get_python_format_unnamed_arg_count@@Base+0x68c4>
   261c4:	add	w19, w24, #0x1
   261c8:	add	x0, x29, #0x8
   261cc:	mov	w2, #0x5                   	// #5
   261d0:	b	26580 <get_python_format_unnamed_arg_count@@Base+0x68b8>
   261d4:	ldur	x8, [x29, #-80]
   261d8:	adrp	x4, 3a000 <plural_table_size@@Base+0xc00>
   261dc:	add	x4, x4, #0x4b8
   261e0:	add	x0, x29, #0x8
   261e4:	ldr	w5, [x8]
   261e8:	mov	w3, #0x1                   	// #1
   261ec:	b	26320 <get_python_format_unnamed_arg_count@@Base+0x6658>
   261f0:	ldur	x8, [x29, #-80]
   261f4:	add	x0, x29, #0x8
   261f8:	mov	w1, w26
   261fc:	mov	x2, x28
   26200:	ldr	w5, [x8]
   26204:	mov	w3, wzr
   26208:	mov	x4, xzr
   2620c:	b	26328 <get_python_format_unnamed_arg_count@@Base+0x6660>
   26210:	ldur	x8, [x29, #-80]
   26214:	adrp	x4, 3a000 <plural_table_size@@Base+0xc00>
   26218:	add	x4, x4, #0x4a8
   2621c:	add	x0, x29, #0x8
   26220:	ldr	w5, [x8]
   26224:	mov	w3, #0x4                   	// #4
   26228:	mov	w1, w26
   2622c:	mov	x2, x28
   26230:	b	26358 <get_python_format_unnamed_arg_count@@Base+0x6690>
   26234:	ldur	x8, [x29, #-80]
   26238:	adrp	x4, 3a000 <plural_table_size@@Base+0xc00>
   2623c:	add	x4, x4, #0x4f4
   26240:	add	x0, x29, #0x8
   26244:	ldr	w5, [x8]
   26248:	mov	w3, #0x7                   	// #7
   2624c:	b	26554 <get_python_format_unnamed_arg_count@@Base+0x688c>
   26250:	ldp	x6, x8, [x29, #-88]
   26254:	add	x0, x29, #0x8
   26258:	mov	w1, w26
   2625c:	mov	x2, x28
   26260:	ldr	w5, [x8]
   26264:	mov	w3, wzr
   26268:	mov	x4, xzr
   2626c:	bl	27c50 <get_python_format_unnamed_arg_count@@Base+0x7f88>
   26270:	ldur	x20, [x29, #-104]
   26274:	tbz	w0, #0, 27908 <get_python_format_unnamed_arg_count@@Base+0x7c40>
   26278:	ldur	x22, [x29, #-96]
   2627c:	tbnz	w24, #31, 26298 <get_python_format_unnamed_arg_count@@Base+0x65d0>
   26280:	add	x0, x29, #0x8
   26284:	mov	w2, #0x9                   	// #9
   26288:	mov	w1, w24
   2628c:	add	w19, w24, #0x1
   26290:	bl	27e4c <get_python_format_unnamed_arg_count@@Base+0x8184>
   26294:	mov	w24, w19
   26298:	tbz	w25, #0, 26428 <get_python_format_unnamed_arg_count@@Base+0x6760>
   2629c:	mov	w24, #0xffffffff            	// #-1
   262a0:	b	2658c <get_python_format_unnamed_arg_count@@Base+0x68c4>
   262a4:	ldur	x8, [x29, #-80]
   262a8:	adrp	x4, 3a000 <plural_table_size@@Base+0xc00>
   262ac:	add	x4, x4, #0x4e0
   262b0:	add	x0, x29, #0x8
   262b4:	ldr	w5, [x8]
   262b8:	mov	w3, #0x5                   	// #5
   262bc:	b	26554 <get_python_format_unnamed_arg_count@@Base+0x688c>
   262c0:	ldp	x6, x8, [x29, #-88]
   262c4:	adrp	x4, 3a000 <plural_table_size@@Base+0xc00>
   262c8:	add	x4, x4, #0x4b8
   262cc:	add	x0, x29, #0x8
   262d0:	ldr	w5, [x8]
   262d4:	mov	w3, #0x1                   	// #1
   262d8:	mov	w1, w26
   262dc:	mov	x2, x28
   262e0:	bl	27c50 <get_python_format_unnamed_arg_count@@Base+0x7f88>
   262e4:	tbz	w0, #0, 278c4 <get_python_format_unnamed_arg_count@@Base+0x7bfc>
   262e8:	cmn	w20, #0x1
   262ec:	b.eq	26820 <get_python_format_unnamed_arg_count@@Base+0x6b58>  // b.none
   262f0:	cbnz	w20, 26818 <get_python_format_unnamed_arg_count@@Base+0x6b50>
   262f4:	tbnz	w24, #31, 26818 <get_python_format_unnamed_arg_count@@Base+0x6b50>
   262f8:	ldr	w8, [x28]
   262fc:	ldur	x20, [x29, #-104]
   26300:	cbz	w8, 26828 <get_python_format_unnamed_arg_count@@Base+0x6b60>
   26304:	b	26840 <get_python_format_unnamed_arg_count@@Base+0x6b78>
   26308:	ldur	x8, [x29, #-80]
   2630c:	adrp	x4, 3a000 <plural_table_size@@Base+0xc00>
   26310:	add	x4, x4, #0x510
   26314:	add	x0, x29, #0x8
   26318:	ldr	w5, [x8]
   2631c:	mov	w3, #0x3                   	// #3
   26320:	mov	w1, w26
   26324:	mov	x2, x28
   26328:	ldur	x6, [x29, #-88]
   2632c:	bl	27c50 <get_python_format_unnamed_arg_count@@Base+0x7f88>
   26330:	ldp	x20, x22, [x29, #-104]
   26334:	tbnz	w0, #0, 2658c <get_python_format_unnamed_arg_count@@Base+0x68c4>
   26338:	b	279e4 <get_python_format_unnamed_arg_count@@Base+0x7d1c>
   2633c:	ldur	x8, [x29, #-80]
   26340:	add	x0, x29, #0x8
   26344:	mov	w1, w26
   26348:	mov	x2, x28
   2634c:	ldr	w5, [x8]
   26350:	mov	w3, wzr
   26354:	mov	x4, xzr
   26358:	ldur	x6, [x29, #-88]
   2635c:	bl	27c50 <get_python_format_unnamed_arg_count@@Base+0x7f88>
   26360:	ldur	x20, [x29, #-104]
   26364:	tbz	w0, #0, 27908 <get_python_format_unnamed_arg_count@@Base+0x7c40>
   26368:	ldur	x22, [x29, #-96]
   2636c:	tbz	w24, #31, 263b4 <get_python_format_unnamed_arg_count@@Base+0x66ec>
   26370:	b	2658c <get_python_format_unnamed_arg_count@@Base+0x68c4>
   26374:	ldp	x6, x8, [x29, #-88]
   26378:	add	x0, x29, #0x8
   2637c:	mov	w1, w26
   26380:	mov	x2, x28
   26384:	ldr	w5, [x8]
   26388:	mov	w3, wzr
   2638c:	mov	x4, xzr
   26390:	bl	27c50 <get_python_format_unnamed_arg_count@@Base+0x7f88>
   26394:	ldur	x20, [x29, #-104]
   26398:	tbz	w0, #0, 27908 <get_python_format_unnamed_arg_count@@Base+0x7c40>
   2639c:	cmp	w24, #0x0
   263a0:	ldur	x22, [x29, #-96]
   263a4:	cset	w8, gt
   263a8:	and	w8, w8, w19
   263ac:	subs	w24, w24, w8
   263b0:	b.mi	2658c <get_python_format_unnamed_arg_count@@Base+0x68c4>  // b.first
   263b4:	add	w19, w24, #0x1
   263b8:	add	x0, x29, #0x8
   263bc:	mov	w1, w24
   263c0:	mov	w2, wzr
   263c4:	b	26584 <get_python_format_unnamed_arg_count@@Base+0x68bc>
   263c8:	ldp	x6, x8, [x29, #-88]
   263cc:	adrp	x4, 3a000 <plural_table_size@@Base+0xc00>
   263d0:	add	x4, x4, #0x4e0
   263d4:	add	x0, x29, #0x8
   263d8:	ldr	w5, [x8]
   263dc:	mov	w3, #0x5                   	// #5
   263e0:	mov	w1, w26
   263e4:	mov	x2, x28
   263e8:	bl	27c50 <get_python_format_unnamed_arg_count@@Base+0x7f88>
   263ec:	ldur	x20, [x29, #-104]
   263f0:	tbz	w0, #0, 27908 <get_python_format_unnamed_arg_count@@Base+0x7c40>
   263f4:	ldur	x22, [x29, #-96]
   263f8:	tbnz	w24, #31, 2658c <get_python_format_unnamed_arg_count@@Base+0x68c4>
   263fc:	add	w19, w24, #0x1
   26400:	add	x0, x29, #0x8
   26404:	mov	w2, #0x7                   	// #7
   26408:	b	26580 <get_python_format_unnamed_arg_count@@Base+0x68b8>
   2640c:	ldur	x8, [x29, #-80]
   26410:	adrp	x4, 3a000 <plural_table_size@@Base+0xc00>
   26414:	add	x4, x4, #0x4cc
   26418:	add	x0, x29, #0x8
   2641c:	ldr	w5, [x8]
   26420:	mov	w3, #0x5                   	// #5
   26424:	b	261a4 <get_python_format_unnamed_arg_count@@Base+0x64dc>
   26428:	tbnz	w24, #31, 2658c <get_python_format_unnamed_arg_count@@Base+0x68c4>
   2642c:	bl	27ad8 <get_python_format_unnamed_arg_count@@Base+0x7e10>
   26430:	mov	x26, x0
   26434:	add	x0, x29, #0x8
   26438:	mov	w1, w24
   2643c:	mov	x2, x26
   26440:	add	w19, w24, #0x1
   26444:	bl	27f38 <get_python_format_unnamed_arg_count@@Base+0x8270>
   26448:	mov	x0, x26
   2644c:	bl	2802c <get_python_format_unnamed_arg_count@@Base+0x8364>
   26450:	b	26588 <get_python_format_unnamed_arg_count@@Base+0x68c0>
   26454:	ldp	x19, x22, [x29, #-88]
   26458:	add	x0, x29, #0x8
   2645c:	mov	w1, w26
   26460:	mov	x2, x28
   26464:	ldr	w5, [x22]
   26468:	mov	w3, wzr
   2646c:	mov	x4, xzr
   26470:	mov	x6, x19
   26474:	bl	27c50 <get_python_format_unnamed_arg_count@@Base+0x7f88>
   26478:	ldur	x20, [x29, #-104]
   2647c:	tbz	w0, #0, 27908 <get_python_format_unnamed_arg_count@@Base+0x7c40>
   26480:	ldp	x26, x25, [sp, #104]
   26484:	mov	w6, #0x29                  	// #41
   26488:	mov	x4, xzr
   2648c:	mov	x5, x22
   26490:	str	x23, [x25]
   26494:	ldp	x27, x23, [sp, #72]
   26498:	mov	x0, x25
   2649c:	mov	x3, x26
   264a0:	mov	w7, wzr
   264a4:	str	w24, [x27]
   264a8:	ldr	x8, [x29, #8]
   264ac:	mov	x1, x27
   264b0:	mov	x2, x23
   264b4:	str	x8, [x23]
   264b8:	ldr	x8, [sp, #96]
   264bc:	str	x8, [x26]
   264c0:	stp	xzr, x19, [sp]
   264c4:	bl	25f50 <get_python_format_unnamed_arg_count@@Base+0x6288>
   264c8:	ldur	x22, [x29, #-96]
   264cc:	tbz	w0, #0, 27920 <get_python_format_unnamed_arg_count@@Base+0x7c58>
   264d0:	ldr	x8, [x23]
   264d4:	ldr	x23, [x25]
   264d8:	ldr	w24, [x27]
   264dc:	str	x8, [x29, #8]
   264e0:	ldr	x8, [x26]
   264e4:	str	x8, [sp, #96]
   264e8:	b	2658c <get_python_format_unnamed_arg_count@@Base+0x68c4>
   264ec:	ldp	x6, x8, [x29, #-88]
   264f0:	adrp	x4, 3a000 <plural_table_size@@Base+0xc00>
   264f4:	add	x4, x4, #0x4b8
   264f8:	add	x0, x29, #0x8
   264fc:	ldr	w5, [x8]
   26500:	mov	w3, #0x1                   	// #1
   26504:	mov	w1, w26
   26508:	mov	x2, x28
   2650c:	bl	27c50 <get_python_format_unnamed_arg_count@@Base+0x7f88>
   26510:	ldur	x20, [x29, #-104]
   26514:	tbz	w0, #0, 27908 <get_python_format_unnamed_arg_count@@Base+0x7c40>
   26518:	ldur	x22, [x29, #-96]
   2651c:	cbz	w26, 26848 <get_python_format_unnamed_arg_count@@Base+0x6b80>
   26520:	ldr	w8, [x28]
   26524:	cbz	w8, 26848 <get_python_format_unnamed_arg_count@@Base+0x6b80>
   26528:	cmp	w8, #0x2
   2652c:	b.ne	2629c <get_python_format_unnamed_arg_count@@Base+0x65d4>  // b.any
   26530:	ldr	w26, [x28, #4]
   26534:	tbz	w26, #31, 26850 <get_python_format_unnamed_arg_count@@Base+0x6b88>
   26538:	b	279b8 <get_python_format_unnamed_arg_count@@Base+0x7cf0>
   2653c:	ldur	x8, [x29, #-80]
   26540:	adrp	x4, 3a000 <plural_table_size@@Base+0xc00>
   26544:	add	x4, x4, #0x4a8
   26548:	add	x0, x29, #0x8
   2654c:	ldr	w5, [x8]
   26550:	mov	w3, #0x4                   	// #4
   26554:	ldur	x6, [x29, #-88]
   26558:	mov	w1, w26
   2655c:	mov	x2, x28
   26560:	bl	27c50 <get_python_format_unnamed_arg_count@@Base+0x7f88>
   26564:	ldur	x20, [x29, #-104]
   26568:	tbz	w0, #0, 27908 <get_python_format_unnamed_arg_count@@Base+0x7c40>
   2656c:	ldur	x22, [x29, #-96]
   26570:	tbnz	w24, #31, 2658c <get_python_format_unnamed_arg_count@@Base+0x68c4>
   26574:	add	w19, w24, #0x1
   26578:	add	x0, x29, #0x8
   2657c:	mov	w2, #0x6                   	// #6
   26580:	mov	w1, w24
   26584:	bl	27e4c <get_python_format_unnamed_arg_count@@Base+0x8184>
   26588:	mov	w24, w19
   2658c:	cbz	x22, 265a4 <get_python_format_unnamed_arg_count@@Base+0x68dc>
   26590:	sub	x8, x23, x20
   26594:	add	x8, x8, x22
   26598:	ldurb	w9, [x8, #-1]
   2659c:	orr	w9, w9, #0x2
   265a0:	sturb	w9, [x8, #-1]
   265a4:	mov	x0, x28
   265a8:	bl	aa00 <free@plt>
   265ac:	ldrb	w8, [x23]
   265b0:	cbnz	w8, 25fc8 <get_python_format_unnamed_arg_count@@Base+0x6300>
   265b4:	b	2756c <get_python_format_unnamed_arg_count@@Base+0x78a4>
   265b8:	ldur	x20, [x29, #-104]
   265bc:	and	w8, w25, w19
   265c0:	tbnz	w8, #0, 278e0 <get_python_format_unnamed_arg_count@@Base+0x7c18>
   265c4:	tbz	w25, #0, 2685c <get_python_format_unnamed_arg_count@@Base+0x6b94>
   265c8:	ldp	x6, x8, [x29, #-88]
   265cc:	add	x0, x29, #0x8
   265d0:	mov	w1, w26
   265d4:	mov	x2, x28
   265d8:	ldr	w5, [x8]
   265dc:	mov	w3, wzr
   265e0:	mov	x4, xzr
   265e4:	bl	27c50 <get_python_format_unnamed_arg_count@@Base+0x7f88>
   265e8:	tbz	w0, #0, 27944 <get_python_format_unnamed_arg_count@@Base+0x7c7c>
   265ec:	ldr	x8, [sp, #112]
   265f0:	ldur	x22, [x29, #-96]
   265f4:	str	x23, [x8]
   265f8:	ldp	x9, x8, [sp, #96]
   265fc:	str	x9, [x8]
   26600:	ldr	x0, [x29, #8]
   26604:	cbz	x0, 2660c <get_python_format_unnamed_arg_count@@Base+0x6944>
   26608:	bl	280f4 <get_python_format_unnamed_arg_count@@Base+0x842c>
   2660c:	ldur	x19, [x29, #-80]
   26610:	stur	x0, [x29, #-32]
   26614:	tbnz	w24, #31, 26650 <get_python_format_unnamed_arg_count@@Base+0x6988>
   26618:	mov	w0, #0x30                  	// #48
   2661c:	bl	a590 <xmalloc@plt>
   26620:	mov	x25, x0
   26624:	stp	xzr, xzr, [x0]
   26628:	str	wzr, [x0, #16]
   2662c:	stp	xzr, xzr, [x0, #24]
   26630:	str	wzr, [x0, #40]
   26634:	bl	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   26638:	sub	x0, x29, #0x20
   2663c:	mov	w1, w24
   26640:	mov	x2, x25
   26644:	bl	27f38 <get_python_format_unnamed_arg_count@@Base+0x8270>
   26648:	mov	x0, x25
   2664c:	bl	2802c <get_python_format_unnamed_arg_count@@Base+0x8364>
   26650:	ldr	x0, [x29, #8]
   26654:	stur	w24, [x29, #-48]
   26658:	cbz	x0, 26660 <get_python_format_unnamed_arg_count@@Base+0x6998>
   2665c:	bl	280f4 <get_python_format_unnamed_arg_count@@Base+0x842c>
   26660:	stur	x0, [x29, #-72]
   26664:	ldur	x8, [x29, #-88]
   26668:	ldp	x3, x0, [sp, #104]
   2666c:	sub	x1, x29, #0x30
   26670:	sub	x2, x29, #0x48
   26674:	mov	w6, #0x5d                  	// #93
   26678:	mov	x4, xzr
   2667c:	mov	x5, x19
   26680:	mov	w7, wzr
   26684:	stp	xzr, x8, [sp]
   26688:	bl	25f50 <get_python_format_unnamed_arg_count@@Base+0x6288>
   2668c:	tbz	w0, #0, 27988 <get_python_format_unnamed_arg_count@@Base+0x7cc0>
   26690:	ldur	x26, [x29, #-72]
   26694:	cbz	x26, 26c14 <get_python_format_unnamed_arg_count@@Base+0x6f4c>
   26698:	ldur	w8, [x29, #-48]
   2669c:	add	w9, w24, #0x1
   266a0:	ldur	x0, [x29, #-32]
   266a4:	mov	w10, #0xffffffff            	// #-1
   266a8:	cmp	w8, w9
   266ac:	csinc	w8, w10, w24, ne  // ne = any
   266b0:	cmp	w24, #0x0
   266b4:	csel	w24, w8, w24, ge  // ge = tcont
   266b8:	cbz	x0, 26c20 <get_python_format_unnamed_arg_count@@Base+0x6f58>
   266bc:	mov	x1, x26
   266c0:	bl	29db8 <get_python_format_unnamed_arg_count@@Base+0xa0f0>
   266c4:	mov	x26, x0
   266c8:	b	26c20 <get_python_format_unnamed_arg_count@@Base+0x6f58>
   266cc:	ldur	x8, [x29, #-80]
   266d0:	mov	w1, w26
   266d4:	ldur	x26, [x29, #-88]
   266d8:	adrp	x4, 3a000 <plural_table_size@@Base+0xc00>
   266dc:	ldr	w5, [x8]
   266e0:	add	x4, x4, #0x4b8
   266e4:	add	x0, x29, #0x8
   266e8:	mov	w3, #0x1                   	// #1
   266ec:	mov	x2, x28
   266f0:	mov	x6, x26
   266f4:	bl	27c50 <get_python_format_unnamed_arg_count@@Base+0x7f88>
   266f8:	ldur	x20, [x29, #-104]
   266fc:	tbz	w0, #0, 27908 <get_python_format_unnamed_arg_count@@Base+0x7c40>
   26700:	ldr	x27, [sp, #112]
   26704:	str	x23, [x27]
   26708:	stur	wzr, [x29, #-36]
   2670c:	bl	27ad8 <get_python_format_unnamed_arg_count@@Base+0x7e10>
   26710:	stp	xzr, x0, [x29, #-56]
   26714:	stur	x0, [x29, #-64]
   26718:	sub	x1, x29, #0x24
   2671c:	sub	x2, x29, #0x30
   26720:	sub	x3, x29, #0x38
   26724:	sub	x5, x29, #0x48
   26728:	mov	w6, #0x7d                  	// #125
   2672c:	mov	x0, x27
   26730:	mov	x4, xzr
   26734:	mov	w7, wzr
   26738:	stur	wzr, [x29, #-72]
   2673c:	stp	xzr, x26, [sp]
   26740:	bl	25f50 <get_python_format_unnamed_arg_count@@Base+0x6288>
   26744:	tbz	w0, #0, 269d0 <get_python_format_unnamed_arg_count@@Base+0x6d08>
   26748:	ldur	x10, [x29, #-80]
   2674c:	ldur	w8, [x29, #-72]
   26750:	ldr	w9, [x10]
   26754:	add	w9, w9, w8
   26758:	str	w9, [x10]
   2675c:	ldrb	w9, [x23]
   26760:	cmp	w9, #0x7e
   26764:	b.ne	26a24 <get_python_format_unnamed_arg_count@@Base+0x6d5c>  // b.any
   26768:	tbnz	w24, #31, 26a24 <get_python_format_unnamed_arg_count@@Base+0x6d5c>
   2676c:	cmp	w8, #0x1
   26770:	b.ne	26a24 <get_python_format_unnamed_arg_count@@Base+0x6d5c>  // b.any
   26774:	add	x0, x29, #0x8
   26778:	mov	w2, #0x9                   	// #9
   2677c:	mov	w1, w24
   26780:	add	w23, w24, #0x1
   26784:	bl	27e4c <get_python_format_unnamed_arg_count@@Base+0x8184>
   26788:	b	26a28 <get_python_format_unnamed_arg_count@@Base+0x6d60>
   2678c:	ldp	x6, x8, [x29, #-88]
   26790:	adrp	x4, 3a000 <plural_table_size@@Base+0xc00>
   26794:	add	x4, x4, #0x51c
   26798:	add	x0, x29, #0x8
   2679c:	ldr	w5, [x8]
   267a0:	mov	w3, #0x3                   	// #3
   267a4:	mov	w1, w26
   267a8:	mov	x2, x28
   267ac:	bl	27c50 <get_python_format_unnamed_arg_count@@Base+0x7f88>
   267b0:	ldur	x20, [x29, #-104]
   267b4:	tbz	w0, #0, 27908 <get_python_format_unnamed_arg_count@@Base+0x7c40>
   267b8:	ldr	x0, [x29, #8]
   267bc:	ldur	x22, [x29, #-96]
   267c0:	tbnz	w24, #31, 26e84 <get_python_format_unnamed_arg_count@@Base+0x71bc>
   267c4:	cbz	x0, 26e84 <get_python_format_unnamed_arg_count@@Base+0x71bc>
   267c8:	ldr	w11, [x0]
   267cc:	add	w8, w24, #0x1
   267d0:	cbz	w11, 26c4c <get_python_format_unnamed_arg_count@@Base+0x6f84>
   267d4:	ldr	x9, [x0, #8]
   267d8:	mov	x10, xzr
   267dc:	add	x12, x9, #0x4
   267e0:	ldur	w13, [x12, #-4]
   267e4:	subs	w13, w8, w13
   267e8:	b.cc	26c2c <get_python_format_unnamed_arg_count@@Base+0x6f64>  // b.lo, b.ul, b.last
   267ec:	ldr	w8, [x12]
   267f0:	cbnz	w8, 26e84 <get_python_format_unnamed_arg_count@@Base+0x71bc>
   267f4:	add	x10, x10, #0x1
   267f8:	cmp	x11, x10
   267fc:	add	x12, x12, #0x18
   26800:	mov	w8, w13
   26804:	b.ne	267e0 <get_python_format_unnamed_arg_count@@Base+0x6b18>  // b.any
   26808:	mov	w12, wzr
   2680c:	mov	w10, w11
   26810:	mov	w8, w13
   26814:	b	26c30 <get_python_format_unnamed_arg_count@@Base+0x6f68>
   26818:	ldur	x20, [x29, #-104]
   2681c:	b	26840 <get_python_format_unnamed_arg_count@@Base+0x6b78>
   26820:	ldur	x20, [x29, #-104]
   26824:	tbnz	w24, #31, 26840 <get_python_format_unnamed_arg_count@@Base+0x6b78>
   26828:	add	x0, x29, #0x8
   2682c:	mov	w2, #0x3                   	// #3
   26830:	mov	w1, w24
   26834:	add	w19, w24, #0x1
   26838:	bl	27e4c <get_python_format_unnamed_arg_count@@Base+0x8184>
   2683c:	mov	w24, w19
   26840:	ldur	x22, [x29, #-96]
   26844:	b	2658c <get_python_format_unnamed_arg_count@@Base+0x68c4>
   26848:	mvn	w8, w25
   2684c:	and	w26, w8, #0x1
   26850:	tbz	w25, #0, 26a08 <get_python_format_unnamed_arg_count@@Base+0x6d40>
   26854:	mov	w24, w26
   26858:	b	2658c <get_python_format_unnamed_arg_count@@Base+0x68c4>
   2685c:	ldur	x8, [x29, #-80]
   26860:	ldr	w5, [x8]
   26864:	tbz	w19, #0, 26aa0 <get_python_format_unnamed_arg_count@@Base+0x6dd8>
   26868:	ldur	x6, [x29, #-88]
   2686c:	add	x0, x29, #0x8
   26870:	mov	w1, w26
   26874:	mov	x2, x28
   26878:	mov	w3, wzr
   2687c:	mov	x4, xzr
   26880:	bl	27c50 <get_python_format_unnamed_arg_count@@Base+0x7f88>
   26884:	tbz	w0, #0, 27908 <get_python_format_unnamed_arg_count@@Base+0x7c40>
   26888:	ldur	x22, [x29, #-96]
   2688c:	tbnz	w24, #31, 268a8 <get_python_format_unnamed_arg_count@@Base+0x6be0>
   26890:	add	x0, x29, #0x8
   26894:	mov	w1, w24
   26898:	mov	w2, wzr
   2689c:	add	w19, w24, #0x1
   268a0:	bl	27e4c <get_python_format_unnamed_arg_count@@Base+0x8184>
   268a4:	mov	w24, w19
   268a8:	ldr	x8, [sp, #112]
   268ac:	str	x23, [x8]
   268b0:	ldp	x9, x8, [sp, #96]
   268b4:	str	x9, [x8]
   268b8:	ldr	x0, [x29, #8]
   268bc:	stur	w24, [x29, #-72]
   268c0:	cbz	x0, 268c8 <get_python_format_unnamed_arg_count@@Base+0x6c00>
   268c4:	bl	280f4 <get_python_format_unnamed_arg_count@@Base+0x842c>
   268c8:	ldur	x23, [x29, #-80]
   268cc:	stur	x0, [x29, #-32]
   268d0:	stur	wzr, [x29, #-48]
   268d4:	tbnz	w24, #31, 26910 <get_python_format_unnamed_arg_count@@Base+0x6c48>
   268d8:	mov	w0, #0x30                  	// #48
   268dc:	bl	a590 <xmalloc@plt>
   268e0:	mov	x25, x0
   268e4:	stp	xzr, xzr, [x0]
   268e8:	str	wzr, [x0, #16]
   268ec:	stp	xzr, xzr, [x0, #24]
   268f0:	str	wzr, [x0, #40]
   268f4:	bl	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   268f8:	sub	w1, w24, #0x1
   268fc:	sub	x0, x29, #0x20
   26900:	mov	x2, x25
   26904:	bl	27f38 <get_python_format_unnamed_arg_count@@Base+0x8270>
   26908:	mov	x0, x25
   2690c:	bl	2802c <get_python_format_unnamed_arg_count@@Base+0x8364>
   26910:	ldur	x8, [x29, #-88]
   26914:	ldp	x3, x0, [sp, #104]
   26918:	sub	x1, x29, #0x48
   2691c:	sub	x2, x29, #0x20
   26920:	sub	x4, x29, #0x30
   26924:	mov	w6, #0x5d                  	// #93
   26928:	mov	w7, #0x1                   	// #1
   2692c:	mov	x5, x23
   26930:	stp	xzr, x8, [sp]
   26934:	bl	25f50 <get_python_format_unnamed_arg_count@@Base+0x6288>
   26938:	tbz	w0, #0, 27988 <get_python_format_unnamed_arg_count@@Base+0x7cc0>
   2693c:	ldur	w8, [x29, #-48]
   26940:	cbz	w8, 27964 <get_python_format_unnamed_arg_count@@Base+0x7c9c>
   26944:	ldur	x26, [x29, #-32]
   26948:	ldur	w8, [x29, #-72]
   2694c:	ldr	x0, [x29, #8]
   26950:	mov	w9, #0xfffffffe            	// #-2
   26954:	cmp	x26, #0x0
   26958:	csel	w19, w9, w8, eq  // eq = none
   2695c:	stur	w24, [x29, #-72]
   26960:	cbz	x0, 26968 <get_python_format_unnamed_arg_count@@Base+0x6ca0>
   26964:	bl	280f4 <get_python_format_unnamed_arg_count@@Base+0x842c>
   26968:	stur	x0, [x29, #-32]
   2696c:	ldur	x8, [x29, #-88]
   26970:	ldp	x3, x0, [sp, #104]
   26974:	sub	x1, x29, #0x48
   26978:	sub	x2, x29, #0x20
   2697c:	mov	w6, #0x5d                  	// #93
   26980:	mov	x4, xzr
   26984:	mov	x5, x23
   26988:	mov	w7, wzr
   2698c:	stp	xzr, x8, [sp]
   26990:	bl	25f50 <get_python_format_unnamed_arg_count@@Base+0x6288>
   26994:	tbz	w0, #0, 27988 <get_python_format_unnamed_arg_count@@Base+0x7cc0>
   26998:	ldur	x1, [x29, #-32]
   2699c:	cbz	x1, 26e18 <get_python_format_unnamed_arg_count@@Base+0x7150>
   269a0:	ldur	w8, [x29, #-72]
   269a4:	mov	w9, #0xffffffff            	// #-1
   269a8:	cmp	w8, w19
   269ac:	ccmp	w8, w9, #0x4, eq  // eq = none
   269b0:	csinv	w9, w19, wzr, gt
   269b4:	cmn	w19, #0x2
   269b8:	csel	w19, w8, w9, eq  // eq = none
   269bc:	cbz	x26, 26e14 <get_python_format_unnamed_arg_count@@Base+0x714c>
   269c0:	mov	x0, x26
   269c4:	bl	29db8 <get_python_format_unnamed_arg_count@@Base+0xa0f0>
   269c8:	mov	x26, x0
   269cc:	b	26e18 <get_python_format_unnamed_arg_count@@Base+0x7150>
   269d0:	ldur	x22, [x29, #-96]
   269d4:	cbz	x22, 26c0c <get_python_format_unnamed_arg_count@@Base+0x6f44>
   269d8:	ldr	x9, [sp, #112]
   269dc:	mov	w8, wzr
   269e0:	ldr	x9, [x9]
   269e4:	mov	x10, x9
   269e8:	ldrb	w11, [x10], #-1
   269ec:	cmp	w11, #0x0
   269f0:	csel	x9, x10, x9, eq  // eq = none
   269f4:	sub	x9, x9, x20
   269f8:	ldrb	w10, [x22, x9]
   269fc:	orr	w10, w10, #0x4
   26a00:	strb	w10, [x22, x9]
   26a04:	b	27498 <get_python_format_unnamed_arg_count@@Base+0x77d0>
   26a08:	tbz	w19, #0, 26bfc <get_python_format_unnamed_arg_count@@Base+0x6f34>
   26a0c:	cmp	w26, #0x1
   26a10:	b.lt	2658c <get_python_format_unnamed_arg_count@@Base+0x68c4>  // b.tstop
   26a14:	tbnz	w24, #31, 2629c <get_python_format_unnamed_arg_count@@Base+0x65d4>
   26a18:	subs	w8, w24, w26
   26a1c:	csel	w24, wzr, w8, lt  // lt = tstop
   26a20:	b	2658c <get_python_format_unnamed_arg_count@@Base+0x68c4>
   26a24:	mov	w23, w24
   26a28:	ldp	x1, x0, [x29, #-56]
   26a2c:	cmp	x0, #0x0
   26a30:	csel	x22, x1, x0, eq  // eq = none
   26a34:	cbz	x0, 26a44 <get_python_format_unnamed_arg_count@@Base+0x6d7c>
   26a38:	cbz	x1, 26a44 <get_python_format_unnamed_arg_count@@Base+0x6d7c>
   26a3c:	bl	29db8 <get_python_format_unnamed_arg_count@@Base+0xa0f0>
   26a40:	mov	x22, x0
   26a44:	stur	x22, [x29, #-48]
   26a48:	tbz	w19, #0, 26aec <get_python_format_unnamed_arg_count@@Base+0x6e24>
   26a4c:	mov	w0, #0x30                  	// #48
   26a50:	bl	a590 <xmalloc@plt>
   26a54:	stp	xzr, xzr, [x0]
   26a58:	mov	x19, x22
   26a5c:	ldur	x22, [x29, #-96]
   26a60:	str	x0, [sp, #48]
   26a64:	str	wzr, [x0, #16]
   26a68:	cbz	x19, 26c70 <get_python_format_unnamed_arg_count@@Base+0x6fa8>
   26a6c:	ldr	x24, [sp, #48]
   26a70:	mov	w0, #0x18                  	// #24
   26a74:	str	d8, [x24, #24]
   26a78:	bl	a590 <xmalloc@plt>
   26a7c:	mov	w8, #0x8                   	// #8
   26a80:	mov	w9, #0x1                   	// #1
   26a84:	str	x0, [x24, #32]
   26a88:	str	d8, [x0]
   26a8c:	str	x19, [x0, #16]
   26a90:	str	w8, [x0, #8]
   26a94:	str	w9, [x24, #40]
   26a98:	mov	x0, x24
   26a9c:	b	27354 <get_python_format_unnamed_arg_count@@Base+0x768c>
   26aa0:	ldur	x6, [x29, #-88]
   26aa4:	adrp	x4, 3a000 <plural_table_size@@Base+0xc00>
   26aa8:	add	x4, x4, #0x4b8
   26aac:	add	x0, x29, #0x8
   26ab0:	mov	w3, #0x1                   	// #1
   26ab4:	mov	w1, w26
   26ab8:	mov	x2, x28
   26abc:	bl	27c50 <get_python_format_unnamed_arg_count@@Base+0x7f88>
   26ac0:	tbz	w0, #0, 27908 <get_python_format_unnamed_arg_count@@Base+0x7c40>
   26ac4:	cbz	w26, 26ca8 <get_python_format_unnamed_arg_count@@Base+0x6fe0>
   26ac8:	tbnz	w24, #31, 26cac <get_python_format_unnamed_arg_count@@Base+0x6fe4>
   26acc:	ldr	w8, [x28]
   26ad0:	cbnz	w8, 26cac <get_python_format_unnamed_arg_count@@Base+0x6fe4>
   26ad4:	add	x0, x29, #0x8
   26ad8:	mov	w1, w24
   26adc:	mov	w2, wzr
   26ae0:	add	w19, w24, #0x1
   26ae4:	bl	27e4c <get_python_format_unnamed_arg_count@@Base+0x8184>
   26ae8:	b	26cb4 <get_python_format_unnamed_arg_count@@Base+0x6fec>
   26aec:	cbz	x22, 26c84 <get_python_format_unnamed_arg_count@@Base+0x6fbc>
   26af0:	ldur	w19, [x29, #-36]
   26af4:	mov	x0, x22
   26af8:	cmp	w19, #0x0
   26afc:	b.le	26e58 <get_python_format_unnamed_arg_count@@Base+0x7190>
   26b00:	bl	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   26b04:	ldr	w8, [x22, #24]
   26b08:	cbz	w8, 26e48 <get_python_format_unnamed_arg_count@@Base+0x7180>
   26b0c:	ldr	w26, [x22, #40]
   26b10:	mov	x0, x19
   26b14:	mov	x1, x26
   26b18:	bl	ac10 <gcd@plt>
   26b1c:	udiv	x27, x19, x0
   26b20:	mov	x0, x22
   26b24:	mov	w1, w27
   26b28:	bl	29b90 <get_python_format_unnamed_arg_count@@Base+0x9ec8>
   26b2c:	ldr	w8, [x22]
   26b30:	ldr	w9, [x22, #24]
   26b34:	mov	w10, #0x18                  	// #24
   26b38:	add	w8, w9, w8
   26b3c:	umull	x0, w8, w10
   26b40:	stp	w8, w8, [x29, #-32]
   26b44:	bl	a590 <xmalloc@plt>
   26b48:	stur	x0, [x29, #-24]
   26b4c:	ldr	w8, [x22]
   26b50:	cbz	w8, 26b8c <get_python_format_unnamed_arg_count@@Base+0x6ec4>
   26b54:	mov	x9, xzr
   26b58:	mov	x8, xzr
   26b5c:	ldr	x10, [x22, #8]
   26b60:	add	x8, x8, #0x1
   26b64:	add	x10, x10, x9
   26b68:	ldr	x11, [x10, #16]
   26b6c:	ldr	q0, [x10]
   26b70:	add	x10, x0, x9
   26b74:	add	x9, x9, #0x18
   26b78:	str	x11, [x10, #16]
   26b7c:	str	q0, [x10]
   26b80:	ldr	w10, [x22]
   26b84:	cmp	x8, x10
   26b88:	b.cc	26b5c <get_python_format_unnamed_arg_count@@Base+0x6e94>  // b.lo, b.ul, b.last
   26b8c:	ldr	w9, [x22, #24]
   26b90:	mul	w27, w26, w27
   26b94:	cbz	w9, 26bdc <get_python_format_unnamed_arg_count@@Base+0x6f14>
   26b98:	mov	x9, xzr
   26b9c:	mov	x10, xzr
   26ba0:	mov	w8, w8
   26ba4:	ldr	x11, [x22, #8]
   26ba8:	add	w12, w8, w10
   26bac:	add	x10, x10, #0x1
   26bb0:	add	x11, x11, x9
   26bb4:	ldr	x13, [x11, #16]
   26bb8:	ldr	q0, [x11]
   26bbc:	mov	w11, #0x18                  	// #24
   26bc0:	umaddl	x11, w12, w11, x0
   26bc4:	str	x13, [x11, #16]
   26bc8:	str	q0, [x11]
   26bcc:	ldr	w11, [x22, #24]
   26bd0:	add	x9, x9, #0x18
   26bd4:	cmp	x10, x11
   26bd8:	b.cc	26ba4 <get_python_format_unnamed_arg_count@@Base+0x6edc>  // b.lo, b.ul, b.last
   26bdc:	ldr	w8, [x22, #16]
   26be0:	ldr	w9, [x22, #40]
   26be4:	sub	x22, x29, #0x20
   26be8:	str	w23, [sp, #20]
   26bec:	add	w8, w9, w8
   26bf0:	str	w8, [sp, #36]
   26bf4:	stur	w8, [x29, #-16]
   26bf8:	b	26f4c <get_python_format_unnamed_arg_count@@Base+0x7284>
   26bfc:	cmp	w24, #0x0
   26c00:	csel	w8, wzr, w26, lt  // lt = tstop
   26c04:	add	w24, w8, w24
   26c08:	b	2658c <get_python_format_unnamed_arg_count@@Base+0x68c4>
   26c0c:	mov	w8, wzr
   26c10:	b	27498 <get_python_format_unnamed_arg_count@@Base+0x77d0>
   26c14:	ldur	x26, [x29, #-32]
   26c18:	mvn	w8, w24
   26c1c:	add	w24, w24, w8, lsr #31
   26c20:	ldr	x8, [sp, #112]
   26c24:	ldr	x0, [x29, #8]
   26c28:	b	26e28 <get_python_format_unnamed_arg_count@@Base+0x7160>
   26c2c:	mov	w12, #0x1                   	// #1
   26c30:	cbz	w8, 2658c <get_python_format_unnamed_arg_count@@Base+0x68c4>
   26c34:	cbz	w12, 26c4c <get_python_format_unnamed_arg_count@@Base+0x6f84>
   26c38:	mov	w8, #0x18                  	// #24
   26c3c:	umaddl	x8, w10, w8, x9
   26c40:	ldr	w8, [x8, #4]
   26c44:	cbnz	w8, 26e88 <get_python_format_unnamed_arg_count@@Base+0x71c0>
   26c48:	b	2658c <get_python_format_unnamed_arg_count@@Base+0x68c4>
   26c4c:	ldr	w10, [x0, #24]
   26c50:	cbz	w10, 26e88 <get_python_format_unnamed_arg_count@@Base+0x71c0>
   26c54:	ldr	x9, [x0, #32]
   26c58:	ldr	w12, [x9]
   26c5c:	cmp	w8, w12
   26c60:	b.cs	26dd4 <get_python_format_unnamed_arg_count@@Base+0x710c>  // b.hs, b.nlast
   26c64:	mov	x11, xzr
   26c68:	mov	w12, #0x1                   	// #1
   26c6c:	b	26e0c <get_python_format_unnamed_arg_count@@Base+0x7144>
   26c70:	ldr	x0, [sp, #48]
   26c74:	add	x8, x0, #0x18
   26c78:	stp	xzr, xzr, [x8]
   26c7c:	str	wzr, [x8, #16]
   26c80:	b	27354 <get_python_format_unnamed_arg_count@@Base+0x768c>
   26c84:	mov	w0, #0x30                  	// #48
   26c88:	bl	a590 <xmalloc@plt>
   26c8c:	stp	xzr, xzr, [x0]
   26c90:	str	wzr, [x0, #16]
   26c94:	stp	xzr, xzr, [x0, #24]
   26c98:	str	wzr, [x0, #40]
   26c9c:	str	x0, [sp, #48]
   26ca0:	bl	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   26ca4:	b	26e60 <get_python_format_unnamed_arg_count@@Base+0x7198>
   26ca8:	tbz	w24, #31, 26ad4 <get_python_format_unnamed_arg_count@@Base+0x6e0c>
   26cac:	mov	w19, w24
   26cb0:	mov	w24, #0xffffffff            	// #-1
   26cb4:	ldr	x8, [sp, #112]
   26cb8:	mov	x26, xzr
   26cbc:	mov	w25, wzr
   26cc0:	mov	w20, #0xfffffffe            	// #-2
   26cc4:	str	x23, [x8]
   26cc8:	ldp	x9, x8, [sp, #96]
   26ccc:	str	x9, [x8]
   26cd0:	ldr	x0, [x29, #8]
   26cd4:	stur	w19, [x29, #-72]
   26cd8:	cbz	x0, 26ce0 <get_python_format_unnamed_arg_count@@Base+0x7018>
   26cdc:	bl	280f4 <get_python_format_unnamed_arg_count@@Base+0x842c>
   26ce0:	stur	x0, [x29, #-32]
   26ce4:	ldur	x8, [x29, #-88]
   26ce8:	ldp	x3, x0, [sp, #104]
   26cec:	ldur	x5, [x29, #-80]
   26cf0:	eor	w23, w25, #0x1
   26cf4:	and	w7, w23, #0x1
   26cf8:	sub	x1, x29, #0x48
   26cfc:	sub	x2, x29, #0x20
   26d00:	sub	x4, x29, #0x30
   26d04:	mov	w6, #0x5d                  	// #93
   26d08:	stur	wzr, [x29, #-48]
   26d0c:	stp	xzr, x8, [sp]
   26d10:	bl	25f50 <get_python_format_unnamed_arg_count@@Base+0x6288>
   26d14:	tbz	w0, #0, 2788c <get_python_format_unnamed_arg_count@@Base+0x7bc4>
   26d18:	cmp	w24, #0x0
   26d1c:	cset	w8, lt  // lt = tstop
   26d20:	orn	w8, w8, w23
   26d24:	tbnz	w8, #0, 26d38 <get_python_format_unnamed_arg_count@@Base+0x7070>
   26d28:	sub	x0, x29, #0x20
   26d2c:	mov	w2, #0x5                   	// #5
   26d30:	mov	w1, w24
   26d34:	bl	27e4c <get_python_format_unnamed_arg_count@@Base+0x8184>
   26d38:	ldur	x1, [x29, #-32]
   26d3c:	cbz	x1, 26d74 <get_python_format_unnamed_arg_count@@Base+0x70ac>
   26d40:	ldur	w8, [x29, #-72]
   26d44:	mov	w9, #0xffffffff            	// #-1
   26d48:	cmp	w8, w20
   26d4c:	ccmp	w8, w9, #0x4, eq  // eq = none
   26d50:	csinv	w9, w20, wzr, gt
   26d54:	cmn	w20, #0x2
   26d58:	csel	w20, w8, w9, eq  // eq = none
   26d5c:	cbz	x26, 26d70 <get_python_format_unnamed_arg_count@@Base+0x70a8>
   26d60:	mov	x0, x26
   26d64:	bl	29db8 <get_python_format_unnamed_arg_count@@Base+0xa0f0>
   26d68:	mov	x26, x0
   26d6c:	b	26d74 <get_python_format_unnamed_arg_count@@Base+0x70ac>
   26d70:	mov	x26, x1
   26d74:	ldur	w8, [x29, #-48]
   26d78:	cmp	w8, #0x2
   26d7c:	cset	w9, eq  // eq = none
   26d80:	orr	w25, w25, w9
   26d84:	cbnz	w8, 26cd0 <get_python_format_unnamed_arg_count@@Base+0x7008>
   26d88:	tbnz	w25, #0, 26f0c <get_python_format_unnamed_arg_count@@Base+0x7244>
   26d8c:	cmp	w19, w20
   26d90:	mov	w8, #0xffffffff            	// #-1
   26d94:	ldr	x0, [x29, #8]
   26d98:	ccmp	w19, w8, #0x4, eq  // eq = none
   26d9c:	csinv	w8, w20, wzr, gt
   26da0:	cmn	w20, #0x2
   26da4:	csel	w20, w19, w8, eq  // eq = none
   26da8:	cbz	x0, 26ee8 <get_python_format_unnamed_arg_count@@Base+0x7220>
   26dac:	bl	280f4 <get_python_format_unnamed_arg_count@@Base+0x842c>
   26db0:	cmp	x26, #0x0
   26db4:	csel	x8, x0, x26, eq  // eq = none
   26db8:	cbz	x26, 26f08 <get_python_format_unnamed_arg_count@@Base+0x7240>
   26dbc:	mov	x1, x0
   26dc0:	cbz	x0, 26f08 <get_python_format_unnamed_arg_count@@Base+0x7240>
   26dc4:	mov	x0, x26
   26dc8:	bl	29db8 <get_python_format_unnamed_arg_count@@Base+0xa0f0>
   26dcc:	mov	x26, x0
   26dd0:	b	26f0c <get_python_format_unnamed_arg_count@@Base+0x7244>
   26dd4:	mov	x11, xzr
   26dd8:	add	x13, x9, #0x18
   26ddc:	sub	x14, x10, #0x1
   26de0:	ldur	w15, [x13, #-20]
   26de4:	cbnz	w15, 26e84 <get_python_format_unnamed_arg_count@@Base+0x71bc>
   26de8:	cmp	x14, x11
   26dec:	sub	w8, w8, w12
   26df0:	b.eq	26e68 <get_python_format_unnamed_arg_count@@Base+0x71a0>  // b.none
   26df4:	ldr	w12, [x13], #24
   26df8:	add	x11, x11, #0x1
   26dfc:	cmp	w8, w12
   26e00:	b.cs	26de0 <get_python_format_unnamed_arg_count@@Base+0x7118>  // b.hs, b.nlast
   26e04:	cmp	x11, x10
   26e08:	cset	w12, cc  // cc = lo, ul, last
   26e0c:	mov	w10, w11
   26e10:	b	26e6c <get_python_format_unnamed_arg_count@@Base+0x71a4>
   26e14:	mov	x26, x1
   26e18:	ldr	x8, [sp, #112]
   26e1c:	ldr	x0, [x29, #8]
   26e20:	cmn	w19, #0x2
   26e24:	csel	w24, w24, w19, eq  // eq = none
   26e28:	ldr	x23, [x8]
   26e2c:	ldr	x8, [sp, #104]
   26e30:	ldr	x8, [x8]
   26e34:	str	x8, [sp, #96]
   26e38:	cbz	x0, 26e40 <get_python_format_unnamed_arg_count@@Base+0x7178>
   26e3c:	bl	2802c <get_python_format_unnamed_arg_count@@Base+0x8364>
   26e40:	str	x26, [x29, #8]
   26e44:	b	2658c <get_python_format_unnamed_arg_count@@Base+0x68c4>
   26e48:	ldr	w8, [x22, #16]
   26e4c:	cmp	w8, w19
   26e50:	b.cs	26f40 <get_python_format_unnamed_arg_count@@Base+0x7278>  // b.hs, b.nlast
   26e54:	mov	x0, x22
   26e58:	bl	282a0 <get_python_format_unnamed_arg_count@@Base+0x85d8>
   26e5c:	str	x22, [sp, #48]
   26e60:	ldur	x22, [x29, #-96]
   26e64:	b	27358 <get_python_format_unnamed_arg_count@@Base+0x7690>
   26e68:	mov	w12, wzr
   26e6c:	cbz	w8, 2658c <get_python_format_unnamed_arg_count@@Base+0x68c4>
   26e70:	cbz	w12, 2658c <get_python_format_unnamed_arg_count@@Base+0x68c4>
   26e74:	mov	w8, #0x18                  	// #24
   26e78:	umaddl	x8, w10, w8, x9
   26e7c:	ldr	w8, [x8, #4]
   26e80:	cbz	w8, 2658c <get_python_format_unnamed_arg_count@@Base+0x68c4>
   26e84:	cbz	x0, 26ec8 <get_python_format_unnamed_arg_count@@Base+0x7200>
   26e88:	bl	280f4 <get_python_format_unnamed_arg_count@@Base+0x842c>
   26e8c:	mov	x1, x0
   26e90:	tbnz	w24, #31, 26ea4 <get_python_format_unnamed_arg_count@@Base+0x71dc>
   26e94:	mov	x0, x1
   26e98:	mov	w1, w24
   26e9c:	bl	28800 <get_python_format_unnamed_arg_count@@Base+0x8b38>
   26ea0:	mov	x1, x0
   26ea4:	ldr	x8, [sp, #96]
   26ea8:	cmp	x8, #0x0
   26eac:	csel	x26, x1, x8, eq  // eq = none
   26eb0:	cbz	x8, 26ecc <get_python_format_unnamed_arg_count@@Base+0x7204>
   26eb4:	cbz	x1, 26ecc <get_python_format_unnamed_arg_count@@Base+0x7204>
   26eb8:	ldr	x0, [sp, #96]
   26ebc:	bl	29db8 <get_python_format_unnamed_arg_count@@Base+0xa0f0>
   26ec0:	mov	x26, x0
   26ec4:	b	26ecc <get_python_format_unnamed_arg_count@@Base+0x7204>
   26ec8:	ldr	x26, [sp, #96]
   26ecc:	tbnz	w24, #31, 26ee0 <get_python_format_unnamed_arg_count@@Base+0x7218>
   26ed0:	ldr	x0, [x29, #8]
   26ed4:	mov	w1, w24
   26ed8:	bl	28950 <get_python_format_unnamed_arg_count@@Base+0x8c88>
   26edc:	str	x0, [x29, #8]
   26ee0:	str	x26, [sp, #96]
   26ee4:	b	2658c <get_python_format_unnamed_arg_count@@Base+0x68c4>
   26ee8:	ldr	x8, [sp, #112]
   26eec:	cmn	w20, #0x2
   26ef0:	csel	w24, w19, w20, eq  // eq = none
   26ef4:	ldr	x23, [x8]
   26ef8:	ldr	x8, [sp, #104]
   26efc:	ldr	x8, [x8]
   26f00:	str	x8, [sp, #96]
   26f04:	b	26f34 <get_python_format_unnamed_arg_count@@Base+0x726c>
   26f08:	mov	x26, x8
   26f0c:	ldr	x8, [sp, #112]
   26f10:	ldr	x0, [x29, #8]
   26f14:	cmn	w20, #0x2
   26f18:	csel	w24, w19, w20, eq  // eq = none
   26f1c:	ldr	x23, [x8]
   26f20:	ldr	x8, [sp, #104]
   26f24:	ldr	x8, [x8]
   26f28:	str	x8, [sp, #96]
   26f2c:	cbz	x0, 26f34 <get_python_format_unnamed_arg_count@@Base+0x726c>
   26f30:	bl	2802c <get_python_format_unnamed_arg_count@@Base+0x8364>
   26f34:	ldur	x20, [x29, #-104]
   26f38:	str	x26, [x29, #8]
   26f3c:	b	26840 <get_python_format_unnamed_arg_count@@Base+0x6b78>
   26f40:	str	w8, [sp, #36]
   26f44:	str	w23, [sp, #20]
   26f48:	mov	w27, w19
   26f4c:	mov	w0, #0x30                  	// #48
   26f50:	str	x19, [sp, #24]
   26f54:	bl	a590 <xmalloc@plt>
   26f58:	stp	xzr, xzr, [x0]
   26f5c:	str	wzr, [x0, #16]
   26f60:	stp	xzr, xzr, [x0, #24]
   26f64:	str	x0, [sp, #48]
   26f68:	str	wzr, [x0, #40]
   26f6c:	cbz	w27, 274f0 <get_python_format_unnamed_arg_count@@Base+0x7828>
   26f70:	ldr	x8, [x22, #8]
   26f74:	mov	x15, xzr
   26f78:	mov	w10, wzr
   26f7c:	mov	w9, wzr
   26f80:	mov	w23, wzr
   26f84:	mov	w20, wzr
   26f88:	mov	w26, wzr
   26f8c:	mov	w24, #0x18                  	// #24
   26f90:	umull	x11, w20, w24
   26f94:	ldr	w11, [x8, x11]
   26f98:	sub	w12, w27, w23
   26f9c:	mov	w20, w20
   26fa0:	str	w26, [sp, #44]
   26fa4:	sub	w13, w11, w26
   26fa8:	cmp	w13, w12
   26fac:	csel	w19, w13, w12, cc  // cc = lo, ul, last
   26fb0:	cmp	w9, w10
   26fb4:	b.cc	26ff8 <get_python_format_unnamed_arg_count@@Base+0x7330>  // b.lo, b.ul, b.last
   26fb8:	mov	w8, #0x1                   	// #1
   26fbc:	add	w11, w9, #0x1
   26fc0:	bfi	w8, w10, #1, #31
   26fc4:	ldr	x26, [sp, #48]
   26fc8:	cmp	w8, w11
   26fcc:	csinc	w8, w8, w9, hi  // hi = pmore
   26fd0:	umull	x1, w8, w24
   26fd4:	mov	x0, x15
   26fd8:	str	w8, [x26, #4]
   26fdc:	bl	a460 <xrealloc@plt>
   26fe0:	str	x0, [x26, #8]
   26fe4:	ldr	x8, [x22, #8]
   26fe8:	mul	x10, x20, x24
   26fec:	ldr	w9, [x26]
   26ff0:	mov	x15, x0
   26ff4:	ldr	w11, [x8, x10]
   26ff8:	umaddl	x10, w9, w24, x15
   26ffc:	str	w11, [x10]
   27000:	madd	x11, x20, x24, x8
   27004:	ldur	x12, [x11, #4]
   27008:	mov	w24, w9
   2700c:	stur	x12, [x10, #4]
   27010:	ldr	w10, [x11, #8]
   27014:	cmp	w10, #0x8
   27018:	b.ne	27060 <get_python_format_unnamed_arg_count@@Base+0x7398>  // b.any
   2701c:	mov	w9, #0x18                  	// #24
   27020:	madd	x8, x20, x9, x8
   27024:	ldr	x0, [x8, #16]
   27028:	mov	w26, w27
   2702c:	mov	x27, x22
   27030:	mov	x22, x15
   27034:	bl	280f4 <get_python_format_unnamed_arg_count@@Base+0x842c>
   27038:	ldr	x9, [sp, #48]
   2703c:	mov	w8, #0x18                  	// #24
   27040:	madd	x8, x24, x8, x22
   27044:	str	x0, [x8, #16]
   27048:	mov	x22, x27
   2704c:	ldr	w24, [x9]
   27050:	ldr	x15, [x9, #8]
   27054:	ldr	x8, [x22, #8]
   27058:	mov	w27, w26
   2705c:	mov	w9, w24
   27060:	ldr	x12, [sp, #48]
   27064:	mov	w10, #0x18                  	// #24
   27068:	mul	x11, x24, x10
   2706c:	str	w19, [x15, x11]
   27070:	ldr	w11, [x12, #16]
   27074:	add	w9, w9, #0x1
   27078:	ldr	w13, [sp, #44]
   2707c:	mul	x10, x20, x10
   27080:	add	w11, w11, w19
   27084:	str	w9, [x12]
   27088:	str	w11, [x12, #16]
   2708c:	ldr	w10, [x8, x10]
   27090:	add	w11, w19, w13
   27094:	add	w23, w19, w23
   27098:	cmp	w11, w10
   2709c:	csel	w26, wzr, w11, eq  // eq = none
   270a0:	cinc	w20, w20, eq  // eq = none
   270a4:	cmp	w27, w23
   270a8:	b.ls	270b8 <get_python_format_unnamed_arg_count@@Base+0x73f0>  // b.plast
   270ac:	ldr	x10, [sp, #48]
   270b0:	ldr	w10, [x10, #4]
   270b4:	b	26f8c <get_python_format_unnamed_arg_count@@Base+0x72c4>
   270b8:	cbz	w9, 274f0 <get_python_format_unnamed_arg_count@@Base+0x7828>
   270bc:	ldr	w8, [x15, #4]
   270c0:	ldr	x24, [sp, #24]
   270c4:	ldr	w12, [sp, #36]
   270c8:	cbnz	w8, 270fc <get_python_format_unnamed_arg_count@@Base+0x7434>
   270cc:	ldr	x19, [sp, #48]
   270d0:	mov	w1, #0x1                   	// #1
   270d4:	mov	x0, x19
   270d8:	bl	29380 <get_python_format_unnamed_arg_count@@Base+0x96b8>
   270dc:	ldr	x15, [x19, #8]
   270e0:	ldr	w8, [x15, #4]
   270e4:	cbnz	w8, 274f0 <get_python_format_unnamed_arg_count@@Base+0x7828>
   270e8:	ldr	w8, [x15]
   270ec:	cmp	w8, #0x1
   270f0:	b.ne	274f0 <get_python_format_unnamed_arg_count@@Base+0x7828>  // b.any
   270f4:	ldr	w12, [sp, #36]
   270f8:	str	w8, [x15, #4]
   270fc:	cmp	w23, w12
   27100:	str	w27, [sp, #16]
   27104:	b.cs	2723c <get_python_format_unnamed_arg_count@@Base+0x7574>  // b.hs, b.nlast
   27108:	ldr	x8, [sp, #48]
   2710c:	ldr	x9, [x22, #8]
   27110:	mov	w14, wzr
   27114:	mov	w10, wzr
   27118:	ldr	w8, [x8]
   2711c:	mov	w24, #0x18                  	// #24
   27120:	umull	x11, w20, w24
   27124:	ldr	w13, [x9, x11]
   27128:	ldr	x11, [sp, #48]
   2712c:	umull	x12, w10, w24
   27130:	ldr	w12, [x15, x12]
   27134:	sub	w13, w13, w26
   27138:	ldr	w11, [x11, #4]
   2713c:	mov	w16, w20
   27140:	sub	w12, w12, w14
   27144:	cmp	w13, w12
   27148:	csel	w20, w13, w12, cc  // cc = lo, ul, last
   2714c:	cmp	w8, w11
   27150:	mov	w19, w10
   27154:	str	w14, [sp, #40]
   27158:	b.cc	271a4 <get_python_format_unnamed_arg_count@@Base+0x74dc>  // b.lo, b.ul, b.last
   2715c:	mov	w9, #0x1                   	// #1
   27160:	add	w10, w8, #0x1
   27164:	bfi	w9, w11, #1, #31
   27168:	str	w26, [sp, #44]
   2716c:	ldr	x26, [sp, #48]
   27170:	cmp	w9, w10
   27174:	csinc	w8, w9, w8, hi  // hi = pmore
   27178:	umull	x1, w8, w24
   2717c:	mov	x0, x15
   27180:	str	w8, [x26, #4]
   27184:	mov	x27, x16
   27188:	bl	a460 <xrealloc@plt>
   2718c:	str	x0, [x26, #8]
   27190:	ldr	w8, [x26]
   27194:	ldr	w26, [sp, #44]
   27198:	ldr	x9, [x22, #8]
   2719c:	mov	x16, x27
   271a0:	mov	x15, x0
   271a4:	umaddl	x0, w8, w24, x15
   271a8:	madd	x1, x16, x24, x9
   271ac:	madd	x2, x19, x24, x15
   271b0:	mov	x24, x16
   271b4:	bl	28ca8 <get_python_format_unnamed_arg_count@@Base+0x8fe0>
   271b8:	ldr	x8, [sp, #48]
   271bc:	ldr	x15, [x8, #8]
   271c0:	ldr	w8, [x8]
   271c4:	tbz	w0, #0, 274a8 <get_python_format_unnamed_arg_count@@Base+0x77e0>
   271c8:	ldr	x12, [sp, #48]
   271cc:	mov	w10, #0x18                  	// #24
   271d0:	mul	x9, x8, x10
   271d4:	str	w20, [x15, x9]
   271d8:	ldr	w9, [x12, #16]
   271dc:	add	w8, w8, #0x1
   271e0:	str	w8, [x12]
   271e4:	mul	x13, x24, x10
   271e8:	add	w11, w9, w20
   271ec:	str	w11, [x12, #16]
   271f0:	ldr	x9, [x22, #8]
   271f4:	add	w12, w20, w26
   271f8:	ldr	w14, [sp, #40]
   271fc:	mul	x10, x19, x10
   27200:	ldr	w13, [x9, x13]
   27204:	ldr	w10, [x15, x10]
   27208:	add	w14, w20, w14
   2720c:	add	w23, w20, w23
   27210:	cmp	w12, w13
   27214:	csel	w26, wzr, w12, eq  // eq = none
   27218:	ldr	w12, [sp, #36]
   2721c:	cinc	w20, w24, eq  // eq = none
   27220:	cmp	w14, w10
   27224:	cinc	w10, w19, eq  // eq = none
   27228:	csel	w14, wzr, w14, eq  // eq = none
   2722c:	cmp	w23, w12
   27230:	b.cc	2711c <get_python_format_unnamed_arg_count@@Base+0x7454>  // b.lo, b.ul, b.last
   27234:	ldr	x24, [sp, #24]
   27238:	b	27244 <get_python_format_unnamed_arg_count@@Base+0x757c>
   2723c:	ldr	x8, [sp, #48]
   27240:	ldr	w11, [x8, #16]
   27244:	ldur	x20, [x29, #-104]
   27248:	ldr	w23, [sp, #20]
   2724c:	cmp	w11, w12
   27250:	b.ne	274f0 <get_python_format_unnamed_arg_count@@Base+0x7828>  // b.any
   27254:	ldur	x22, [x29, #-96]
   27258:	mov	w19, wzr
   2725c:	mov	w8, w12
   27260:	cbz	w8, 2729c <get_python_format_unnamed_arg_count@@Base+0x75d4>
   27264:	mov	w27, wzr
   27268:	ldr	x26, [sp, #48]
   2726c:	mov	w1, w27
   27270:	mov	x0, x26
   27274:	bl	28a04 <get_python_format_unnamed_arg_count@@Base+0x8d3c>
   27278:	ldr	x8, [x26, #8]
   2727c:	mov	w9, #0x18                  	// #24
   27280:	add	w27, w27, w24
   27284:	umaddl	x8, w0, w9, x8
   27288:	mov	w9, #0x1                   	// #1
   2728c:	str	w9, [x8, #4]
   27290:	ldr	w8, [x26, #16]
   27294:	cmp	w27, w8
   27298:	b.cc	27268 <get_python_format_unnamed_arg_count@@Base+0x75a0>  // b.lo, b.ul, b.last
   2729c:	tbnz	w19, #0, 27350 <get_python_format_unnamed_arg_count@@Base+0x7688>
   272a0:	ldr	w8, [sp, #16]
   272a4:	ldr	w9, [sp, #36]
   272a8:	ldr	x19, [sp, #48]
   272ac:	sub	w26, w9, w8
   272b0:	mov	x0, x19
   272b4:	mov	w1, w26
   272b8:	bl	29380 <get_python_format_unnamed_arg_count@@Base+0x96b8>
   272bc:	ldr	w8, [x19]
   272c0:	ldr	w9, [x19, #28]
   272c4:	mov	w27, w0
   272c8:	sub	w19, w8, w0
   272cc:	cmp	w19, w9
   272d0:	b.ls	272ec <get_python_format_unnamed_arg_count@@Base+0x7624>  // b.plast
   272d4:	ldr	x24, [sp, #48]
   272d8:	mov	w8, #0x18                  	// #24
   272dc:	umull	x0, w19, w8
   272e0:	str	w19, [x24, #28]
   272e4:	bl	a590 <xmalloc@plt>
   272e8:	str	x0, [x24, #32]
   272ec:	ldr	w8, [sp, #36]
   272f0:	subs	w8, w8, w27
   272f4:	b.ls	27338 <get_python_format_unnamed_arg_count@@Base+0x7670>  // b.plast
   272f8:	mov	w10, #0x18                  	// #24
   272fc:	mov	x9, xzr
   27300:	umull	x10, w27, w10
   27304:	ldr	x12, [sp, #48]
   27308:	subs	x8, x8, #0x1
   2730c:	ldr	x11, [x12, #8]
   27310:	ldr	x12, [x12, #32]
   27314:	add	x11, x11, x10
   27318:	add	x11, x11, x9
   2731c:	ldr	x13, [x11, #16]
   27320:	ldr	q0, [x11]
   27324:	add	x11, x12, x9
   27328:	add	x9, x9, #0x18
   2732c:	str	x13, [x11, #16]
   27330:	str	q0, [x11]
   27334:	b.ne	27304 <get_python_format_unnamed_arg_count@@Base+0x763c>  // b.any
   27338:	ldr	x9, [sp, #48]
   2733c:	ldr	w8, [sp, #16]
   27340:	str	w19, [x9, #24]
   27344:	str	w8, [x9, #40]
   27348:	str	w27, [x9]
   2734c:	str	w26, [x9, #16]
   27350:	ldr	x0, [sp, #48]
   27354:	bl	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   27358:	ldr	x8, [sp, #48]
   2735c:	stur	x8, [x29, #-48]
   27360:	tbz	w25, #0, 273a0 <get_python_format_unnamed_arg_count@@Base+0x76d8>
   27364:	mov	w24, #0xffffffff            	// #-1
   27368:	mov	w8, #0x1                   	// #1
   2736c:	tbnz	w23, #31, 27498 <get_python_format_unnamed_arg_count@@Base+0x77d0>
   27370:	ldr	x9, [x29, #8]
   27374:	cbz	x9, 27498 <get_python_format_unnamed_arg_count@@Base+0x77d0>
   27378:	ldr	x0, [sp, #48]
   2737c:	bl	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   27380:	cbz	w23, 27474 <get_python_format_unnamed_arg_count@@Base+0x77ac>
   27384:	ldr	x9, [sp, #48]
   27388:	ldp	w8, w9, [x9]
   2738c:	cmp	w8, w9
   27390:	b.cs	273c8 <get_python_format_unnamed_arg_count@@Base+0x7700>  // b.hs, b.nlast
   27394:	ldr	x9, [sp, #48]
   27398:	ldr	x0, [x9, #8]
   2739c:	b	273fc <get_python_format_unnamed_arg_count@@Base+0x7734>
   273a0:	tbnz	w23, #31, 273bc <get_python_format_unnamed_arg_count@@Base+0x76f4>
   273a4:	ldr	x2, [sp, #48]
   273a8:	add	x0, x29, #0x8
   273ac:	mov	w1, w23
   273b0:	add	w24, w23, #0x1
   273b4:	bl	27f38 <get_python_format_unnamed_arg_count@@Base+0x8270>
   273b8:	b	27494 <get_python_format_unnamed_arg_count@@Base+0x77cc>
   273bc:	mov	w8, #0x1                   	// #1
   273c0:	mov	w24, w23
   273c4:	b	27498 <get_python_format_unnamed_arg_count@@Base+0x77d0>
   273c8:	ldr	x19, [sp, #48]
   273cc:	mov	w10, #0x1                   	// #1
   273d0:	add	w11, w8, #0x1
   273d4:	bfi	w10, w9, #1, #31
   273d8:	ldr	x0, [x19, #8]
   273dc:	cmp	w10, w11
   273e0:	mov	w12, #0x18                  	// #24
   273e4:	csinc	w8, w10, w8, hi  // hi = pmore
   273e8:	umull	x1, w8, w12
   273ec:	str	w8, [x19, #4]
   273f0:	bl	a460 <xrealloc@plt>
   273f4:	ldr	w8, [x19]
   273f8:	str	x0, [x19, #8]
   273fc:	cbz	w8, 27450 <get_python_format_unnamed_arg_count@@Base+0x7788>
   27400:	sub	w9, w8, #0x1
   27404:	mov	w10, #0x18                  	// #24
   27408:	umull	x9, w9, w10
   2740c:	umull	x10, w8, w10
   27410:	add	x11, x0, x9
   27414:	ldr	x12, [x11, #16]
   27418:	ldr	q0, [x11]
   2741c:	add	x11, x0, x10
   27420:	sub	w8, w8, #0x1
   27424:	str	x12, [x11, #16]
   27428:	str	q0, [x11]
   2742c:	ldr	x11, [sp, #48]
   27430:	sub	x9, x9, #0x18
   27434:	sub	x10, x10, #0x18
   27438:	ldr	x0, [x11, #8]
   2743c:	cbnz	w8, 27410 <get_python_format_unnamed_arg_count@@Base+0x7748>
   27440:	ldr	x8, [sp, #48]
   27444:	ldr	w8, [x8]
   27448:	add	w8, w8, #0x1
   2744c:	b	27454 <get_python_format_unnamed_arg_count@@Base+0x778c>
   27450:	mov	w8, #0x1                   	// #1
   27454:	stp	wzr, wzr, [x0, #4]
   27458:	str	w23, [x0]
   2745c:	ldr	x0, [sp, #48]
   27460:	ldr	w9, [x0, #16]
   27464:	str	w8, [x0]
   27468:	add	w8, w9, w23
   2746c:	str	w8, [x0, #16]
   27470:	bl	29548 <get_python_format_unnamed_arg_count@@Base+0x9880>
   27474:	ldr	x19, [sp, #48]
   27478:	mov	x0, x19
   2747c:	bl	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   27480:	ldr	x0, [x29, #8]
   27484:	mov	x1, x19
   27488:	bl	28330 <get_python_format_unnamed_arg_count@@Base+0x8668>
   2748c:	str	x0, [x29, #8]
   27490:	mov	w24, #0xffffffff            	// #-1
   27494:	mov	w8, #0x1                   	// #1
   27498:	cbz	w8, 27a04 <get_python_format_unnamed_arg_count@@Base+0x7d3c>
   2749c:	ldr	x8, [sp, #112]
   274a0:	ldr	x23, [x8]
   274a4:	b	2658c <get_python_format_unnamed_arg_count@@Base+0x68c4>
   274a8:	mov	w9, #0x18                  	// #24
   274ac:	madd	x8, x8, x9, x15
   274b0:	ldr	w8, [x8, #4]
   274b4:	ldr	x24, [sp, #24]
   274b8:	cbz	w8, 274d8 <get_python_format_unnamed_arg_count@@Base+0x7810>
   274bc:	ldr	x8, [sp, #48]
   274c0:	ldp	x20, x22, [x29, #-104]
   274c4:	ldr	w23, [sp, #20]
   274c8:	mov	w19, #0x1                   	// #1
   274cc:	ldr	w8, [x8, #16]
   274d0:	cbnz	w8, 27264 <get_python_format_unnamed_arg_count@@Base+0x759c>
   274d4:	b	2729c <get_python_format_unnamed_arg_count@@Base+0x75d4>
   274d8:	ldr	x0, [sp, #48]
   274dc:	bl	29cb8 <get_python_format_unnamed_arg_count@@Base+0x9ff0>
   274e0:	ldp	x20, x22, [x29, #-104]
   274e4:	ldr	w23, [sp, #20]
   274e8:	str	x0, [sp, #48]
   274ec:	cbnz	x0, 27358 <get_python_format_unnamed_arg_count@@Base+0x7690>
   274f0:	bl	a7e0 <abort@plt>
   274f4:	cbz	w9, 275d0 <get_python_format_unnamed_arg_count@@Base+0x7908>
   274f8:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   274fc:	add	x1, x1, #0xfd1
   27500:	mov	w2, #0x5                   	// #5
   27504:	mov	x0, xzr
   27508:	bl	acd0 <dcgettext@plt>
   2750c:	ldur	x8, [x29, #-80]
   27510:	ldrb	w2, [x19]
   27514:	ldr	w1, [x8]
   27518:	bl	aa20 <xasprintf@plt>
   2751c:	ldp	x10, x8, [x29, #-96]
   27520:	ldur	x22, [x29, #-104]
   27524:	str	x0, [x8]
   27528:	cbz	x10, 27a04 <get_python_format_unnamed_arg_count@@Base+0x7d3c>
   2752c:	mov	w0, wzr
   27530:	sub	x8, x23, x22
   27534:	b	277a8 <get_python_format_unnamed_arg_count@@Base+0x7ae0>
   27538:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2753c:	add	x1, x1, #0x7e0
   27540:	mov	w2, #0x5                   	// #5
   27544:	mov	x0, xzr
   27548:	bl	acd0 <dcgettext@plt>
   2754c:	bl	a5a0 <xstrdup@plt>
   27550:	ldp	x10, x8, [x29, #-96]
   27554:	str	x0, [x8]
   27558:	cbz	x10, 27a04 <get_python_format_unnamed_arg_count@@Base+0x7d3c>
   2755c:	ldur	x8, [x29, #-104]
   27560:	mov	w0, wzr
   27564:	sub	x8, x19, x8
   27568:	b	277a8 <get_python_format_unnamed_arg_count@@Base+0x7ae0>
   2756c:	ldr	x9, [x29, #8]
   27570:	ldur	x19, [x29, #-88]
   27574:	ldp	x3, x0, [sp, #104]
   27578:	ldp	x1, x2, [sp, #72]
   2757c:	ldr	w6, [sp, #92]
   27580:	ldr	x10, [sp, #96]
   27584:	mov	x20, x23
   27588:	str	x20, [x0]
   2758c:	ands	w20, w6, #0xff
   27590:	str	w24, [x1]
   27594:	str	x9, [x2]
   27598:	str	x10, [x3]
   2759c:	b.eq	27700 <get_python_format_unnamed_arg_count@@Base+0x7a38>  // b.none
   275a0:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   275a4:	add	x1, x1, #0x7c
   275a8:	mov	w2, #0x5                   	// #5
   275ac:	mov	x0, xzr
   275b0:	bl	acd0 <dcgettext@plt>
   275b4:	sub	w1, w20, #0x1
   275b8:	mov	w2, w20
   275bc:	bl	aa20 <xasprintf@plt>
   275c0:	mov	x8, x0
   275c4:	mov	w0, wzr
   275c8:	str	x8, [x19]
   275cc:	b	27a08 <get_python_format_unnamed_arg_count@@Base+0x7d40>
   275d0:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   275d4:	add	x1, x1, #0x7e0
   275d8:	mov	w2, #0x5                   	// #5
   275dc:	mov	x0, xzr
   275e0:	bl	acd0 <dcgettext@plt>
   275e4:	bl	a5a0 <xstrdup@plt>
   275e8:	ldur	x8, [x29, #-88]
   275ec:	ldur	x22, [x29, #-104]
   275f0:	b	27794 <get_python_format_unnamed_arg_count@@Base+0x7acc>
   275f4:	ldr	w8, [sp, #92]
   275f8:	ldur	x22, [x29, #-104]
   275fc:	sub	x19, x23, #0x1
   27600:	and	w8, w8, #0xff
   27604:	cmp	w8, #0x5d
   27608:	b.eq	276bc <get_python_format_unnamed_arg_count@@Base+0x79f4>  // b.none
   2760c:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   27610:	add	x1, x1, #0x7c
   27614:	mov	w2, #0x5                   	// #5
   27618:	mov	x0, xzr
   2761c:	bl	acd0 <dcgettext@plt>
   27620:	mov	w1, #0x5d                  	// #93
   27624:	mov	w2, #0x5b                  	// #91
   27628:	b	2778c <get_python_format_unnamed_arg_count@@Base+0x7ac4>
   2762c:	ldr	w8, [sp, #68]
   27630:	sub	x20, x23, #0x1
   27634:	tbz	w8, #0, 27744 <get_python_format_unnamed_arg_count@@Base+0x7a7c>
   27638:	ldur	x8, [x29, #-80]
   2763c:	ldr	w5, [x8]
   27640:	ldr	w8, [sp, #92]
   27644:	and	w8, w8, #0xff
   27648:	cmp	w8, #0x3e
   2764c:	b.ne	2781c <get_python_format_unnamed_arg_count@@Base+0x7b54>  // b.any
   27650:	adrp	x4, 3a000 <plural_table_size@@Base+0xc00>
   27654:	add	x4, x4, #0x4b8
   27658:	add	x0, x29, #0x8
   2765c:	mov	w3, #0x1                   	// #1
   27660:	mov	w1, w26
   27664:	mov	x2, x28
   27668:	b	27830 <get_python_format_unnamed_arg_count@@Base+0x7b68>
   2766c:	ldr	w8, [sp, #92]
   27670:	ldur	x22, [x29, #-104]
   27674:	sub	x19, x23, #0x1
   27678:	and	w8, w8, #0xff
   2767c:	cmp	w8, #0x29
   27680:	b.eq	276bc <get_python_format_unnamed_arg_count@@Base+0x79f4>  // b.none
   27684:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   27688:	add	x1, x1, #0x7c
   2768c:	mov	w2, #0x5                   	// #5
   27690:	mov	x0, xzr
   27694:	bl	acd0 <dcgettext@plt>
   27698:	mov	w1, #0x29                  	// #41
   2769c:	mov	w2, #0x28                  	// #40
   276a0:	b	2778c <get_python_format_unnamed_arg_count@@Base+0x7ac4>
   276a4:	ldr	w8, [sp, #92]
   276a8:	ldur	x22, [x29, #-104]
   276ac:	sub	x19, x23, #0x1
   276b0:	and	w8, w8, #0xff
   276b4:	cmp	w8, #0x7d
   276b8:	b.ne	27770 <get_python_format_unnamed_arg_count@@Base+0x7aa8>  // b.any
   276bc:	ldp	x6, x8, [x29, #-88]
   276c0:	add	x0, x29, #0x8
   276c4:	mov	w1, w26
   276c8:	mov	x2, x28
   276cc:	ldr	w5, [x8]
   276d0:	mov	w3, wzr
   276d4:	mov	x4, xzr
   276d8:	bl	27c50 <get_python_format_unnamed_arg_count@@Base+0x7f88>
   276dc:	tbz	w0, #0, 27798 <get_python_format_unnamed_arg_count@@Base+0x7ad0>
   276e0:	ldr	x8, [sp, #112]
   276e4:	str	x23, [x8]
   276e8:	ldp	x8, x9, [sp, #72]
   276ec:	str	w24, [x8]
   276f0:	ldr	x8, [x29, #8]
   276f4:	str	x8, [x9]
   276f8:	ldp	x9, x8, [sp, #96]
   276fc:	str	x9, [x8]
   27700:	mov	w0, #0x1                   	// #1
   27704:	b	27a08 <get_python_format_unnamed_arg_count@@Base+0x7d40>
   27708:	ldur	x22, [x29, #-104]
   2770c:	cbz	w8, 277b8 <get_python_format_unnamed_arg_count@@Base+0x7af0>
   27710:	sub	w8, w8, #0x20
   27714:	cmp	w8, #0x5e
   27718:	sub	x19, x23, #0x1
   2771c:	b.hi	277f8 <get_python_format_unnamed_arg_count@@Base+0x7b30>  // b.pmore
   27720:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   27724:	add	x1, x1, #0x80e
   27728:	mov	w2, #0x5                   	// #5
   2772c:	mov	x0, xzr
   27730:	bl	acd0 <dcgettext@plt>
   27734:	ldur	x8, [x29, #-80]
   27738:	ldrb	w2, [x19]
   2773c:	ldr	w1, [x8]
   27740:	b	2778c <get_python_format_unnamed_arg_count@@Base+0x7ac4>
   27744:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   27748:	add	x1, x1, #0x13b
   2774c:	mov	w2, #0x5                   	// #5
   27750:	mov	x0, xzr
   27754:	bl	acd0 <dcgettext@plt>
   27758:	ldur	x8, [x29, #-80]
   2775c:	ldr	w1, [x8]
   27760:	bl	aa20 <xasprintf@plt>
   27764:	ldur	x8, [x29, #-88]
   27768:	str	x0, [x8]
   2776c:	b	27874 <get_python_format_unnamed_arg_count@@Base+0x7bac>
   27770:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   27774:	add	x1, x1, #0x7c
   27778:	mov	w2, #0x5                   	// #5
   2777c:	mov	x0, xzr
   27780:	bl	acd0 <dcgettext@plt>
   27784:	mov	w1, #0x7d                  	// #125
   27788:	mov	w2, #0x7b                  	// #123
   2778c:	bl	aa20 <xasprintf@plt>
   27790:	ldur	x8, [x29, #-88]
   27794:	str	x0, [x8]
   27798:	ldur	x10, [x29, #-96]
   2779c:	cbz	x10, 27a04 <get_python_format_unnamed_arg_count@@Base+0x7d3c>
   277a0:	mov	w0, wzr
   277a4:	sub	x8, x19, x22
   277a8:	ldrb	w9, [x10, x8]
   277ac:	orr	w9, w9, #0x4
   277b0:	strb	w9, [x10, x8]
   277b4:	b	27a08 <get_python_format_unnamed_arg_count@@Base+0x7d40>
   277b8:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   277bc:	add	x1, x1, #0x7e0
   277c0:	mov	w2, #0x5                   	// #5
   277c4:	mov	x0, xzr
   277c8:	bl	acd0 <dcgettext@plt>
   277cc:	bl	a5a0 <xstrdup@plt>
   277d0:	ldp	x9, x8, [x29, #-96]
   277d4:	str	x0, [x8]
   277d8:	cbz	x9, 27a04 <get_python_format_unnamed_arg_count@@Base+0x7d3c>
   277dc:	sub	x8, x23, x22
   277e0:	add	x8, x8, x9
   277e4:	ldurb	w9, [x8, #-2]
   277e8:	mov	w0, wzr
   277ec:	orr	w9, w9, #0x4
   277f0:	sturb	w9, [x8, #-2]
   277f4:	b	27a08 <get_python_format_unnamed_arg_count@@Base+0x7d40>
   277f8:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   277fc:	add	x1, x1, #0x862
   27800:	mov	w2, #0x5                   	// #5
   27804:	mov	x0, xzr
   27808:	bl	acd0 <dcgettext@plt>
   2780c:	ldur	x8, [x29, #-80]
   27810:	ldr	w1, [x8]
   27814:	bl	aa20 <xasprintf@plt>
   27818:	b	27790 <get_python_format_unnamed_arg_count@@Base+0x7ac8>
   2781c:	add	x0, x29, #0x8
   27820:	mov	w1, w26
   27824:	mov	x2, x28
   27828:	mov	w3, wzr
   2782c:	mov	x4, xzr
   27830:	ldur	x6, [x29, #-88]
   27834:	bl	27c50 <get_python_format_unnamed_arg_count@@Base+0x7f88>
   27838:	tbz	w0, #0, 27874 <get_python_format_unnamed_arg_count@@Base+0x7bac>
   2783c:	ldr	x8, [sp, #112]
   27840:	tst	w19, #0x1
   27844:	mov	w0, #0x1                   	// #1
   27848:	cinc	w9, w0, ne  // ne = any
   2784c:	str	x23, [x8]
   27850:	ldp	x8, x10, [sp, #72]
   27854:	str	w24, [x8]
   27858:	ldr	x8, [x29, #8]
   2785c:	str	x8, [x10]
   27860:	ldp	x10, x8, [sp, #96]
   27864:	str	x10, [x8]
   27868:	ldr	x8, [sp, #56]
   2786c:	str	w9, [x8]
   27870:	b	27a08 <get_python_format_unnamed_arg_count@@Base+0x7d40>
   27874:	ldur	x10, [x29, #-96]
   27878:	cbz	x10, 27a04 <get_python_format_unnamed_arg_count@@Base+0x7d3c>
   2787c:	ldur	x8, [x29, #-104]
   27880:	mov	w0, wzr
   27884:	sub	x8, x20, x8
   27888:	b	277a8 <get_python_format_unnamed_arg_count@@Base+0x7ae0>
   2788c:	ldur	x11, [x29, #-96]
   27890:	cbz	x11, 27a04 <get_python_format_unnamed_arg_count@@Base+0x7d3c>
   27894:	ldr	x8, [sp, #112]
   27898:	ldr	x8, [x8]
   2789c:	mov	x9, x8
   278a0:	ldrb	w10, [x9], #-1
   278a4:	cmp	w10, #0x0
   278a8:	csel	x8, x9, x8, eq  // eq = none
   278ac:	ldur	x9, [x29, #-104]
   278b0:	sub	x8, x8, x9
   278b4:	ldrb	w9, [x11, x8]
   278b8:	orr	w9, w9, #0x4
   278bc:	strb	w9, [x11, x8]
   278c0:	b	27a04 <get_python_format_unnamed_arg_count@@Base+0x7d3c>
   278c4:	ldur	x10, [x29, #-96]
   278c8:	cbz	x10, 27a04 <get_python_format_unnamed_arg_count@@Base+0x7d3c>
   278cc:	ldur	x9, [x29, #-104]
   278d0:	sub	x8, x23, #0x1
   278d4:	mov	w0, wzr
   278d8:	sub	x8, x8, x9
   278dc:	b	277a8 <get_python_format_unnamed_arg_count@@Base+0x7ae0>
   278e0:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   278e4:	add	x1, x1, #0xa0
   278e8:	mov	w2, #0x5                   	// #5
   278ec:	mov	x0, xzr
   278f0:	bl	acd0 <dcgettext@plt>
   278f4:	ldur	x8, [x29, #-80]
   278f8:	ldr	w1, [x8]
   278fc:	bl	aa20 <xasprintf@plt>
   27900:	ldur	x8, [x29, #-88]
   27904:	str	x0, [x8]
   27908:	ldur	x10, [x29, #-96]
   2790c:	cbz	x10, 27a04 <get_python_format_unnamed_arg_count@@Base+0x7d3c>
   27910:	sub	x8, x23, #0x1
   27914:	mov	w0, wzr
   27918:	sub	x8, x8, x20
   2791c:	b	277a8 <get_python_format_unnamed_arg_count@@Base+0x7ae0>
   27920:	cbz	x22, 27a04 <get_python_format_unnamed_arg_count@@Base+0x7d3c>
   27924:	ldr	x8, [sp, #112]
   27928:	mov	w0, wzr
   2792c:	ldr	x8, [x8]
   27930:	mov	x9, x8
   27934:	ldrb	w10, [x9], #-1
   27938:	cmp	w10, #0x0
   2793c:	csel	x8, x9, x8, eq  // eq = none
   27940:	b	279f0 <get_python_format_unnamed_arg_count@@Base+0x7d28>
   27944:	ldur	x10, [x29, #-96]
   27948:	cbz	x10, 27a04 <get_python_format_unnamed_arg_count@@Base+0x7d3c>
   2794c:	sub	x8, x23, #0x1
   27950:	sub	x8, x8, x20
   27954:	ldrb	w9, [x10, x8]
   27958:	orr	w9, w9, #0x4
   2795c:	strb	w9, [x10, x8]
   27960:	b	27a04 <get_python_format_unnamed_arg_count@@Base+0x7d3c>
   27964:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   27968:	add	x1, x1, #0xe6
   2796c:	mov	w2, #0x5                   	// #5
   27970:	mov	x0, xzr
   27974:	bl	acd0 <dcgettext@plt>
   27978:	ldr	w1, [x23]
   2797c:	bl	aa20 <xasprintf@plt>
   27980:	ldur	x8, [x29, #-88]
   27984:	str	x0, [x8]
   27988:	cbz	x22, 27a04 <get_python_format_unnamed_arg_count@@Base+0x7d3c>
   2798c:	ldr	x8, [sp, #112]
   27990:	ldr	x8, [x8]
   27994:	mov	x9, x8
   27998:	ldrb	w10, [x9], #-1
   2799c:	cmp	w10, #0x0
   279a0:	csel	x8, x9, x8, eq  // eq = none
   279a4:	sub	x8, x8, x20
   279a8:	ldrb	w9, [x22, x8]
   279ac:	orr	w9, w9, #0x4
   279b0:	strb	w9, [x22, x8]
   279b4:	b	27a04 <get_python_format_unnamed_arg_count@@Base+0x7d3c>
   279b8:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   279bc:	add	x1, x1, #0xe
   279c0:	mov	w2, #0x5                   	// #5
   279c4:	mov	x0, xzr
   279c8:	bl	acd0 <dcgettext@plt>
   279cc:	ldur	x8, [x29, #-80]
   279d0:	mov	w2, w26
   279d4:	ldr	w1, [x8]
   279d8:	bl	aa20 <xasprintf@plt>
   279dc:	ldur	x8, [x29, #-88]
   279e0:	str	x0, [x8]
   279e4:	cbz	x22, 27a04 <get_python_format_unnamed_arg_count@@Base+0x7d3c>
   279e8:	mov	w0, wzr
   279ec:	sub	x8, x23, #0x1
   279f0:	sub	x8, x8, x20
   279f4:	ldrb	w9, [x22, x8]
   279f8:	orr	w9, w9, #0x4
   279fc:	strb	w9, [x22, x8]
   27a00:	b	27a08 <get_python_format_unnamed_arg_count@@Base+0x7d40>
   27a04:	mov	w0, wzr
   27a08:	ldp	x20, x19, [sp, #320]
   27a0c:	ldp	x22, x21, [sp, #304]
   27a10:	ldp	x24, x23, [sp, #288]
   27a14:	ldp	x26, x25, [sp, #272]
   27a18:	ldp	x28, x27, [sp, #256]
   27a1c:	ldp	x29, x30, [sp, #240]
   27a20:	ldr	d8, [sp, #224]
   27a24:	add	sp, sp, #0x150
   27a28:	ret
   27a2c:	stp	x29, x30, [sp, #-48]!
   27a30:	str	x21, [sp, #16]
   27a34:	stp	x20, x19, [sp, #32]
   27a38:	mov	x29, sp
   27a3c:	mov	x19, x0
   27a40:	bl	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   27a44:	ldr	w8, [x19]
   27a48:	cbz	w8, 27a80 <get_python_format_unnamed_arg_count@@Base+0x7db8>
   27a4c:	add	x8, x8, x8, lsl #1
   27a50:	mov	x20, xzr
   27a54:	lsl	x21, x8, #3
   27a58:	ldr	x8, [x19, #8]
   27a5c:	add	x8, x8, x20
   27a60:	ldr	w9, [x8, #8]
   27a64:	cmp	w9, #0x8
   27a68:	b.ne	27a74 <get_python_format_unnamed_arg_count@@Base+0x7dac>  // b.any
   27a6c:	ldr	x0, [x8, #16]
   27a70:	bl	27a2c <get_python_format_unnamed_arg_count@@Base+0x7d64>
   27a74:	add	x20, x20, #0x18
   27a78:	cmp	x21, x20
   27a7c:	b.ne	27a58 <get_python_format_unnamed_arg_count@@Base+0x7d90>  // b.any
   27a80:	ldr	w8, [x19, #24]
   27a84:	cbz	w8, 27abc <get_python_format_unnamed_arg_count@@Base+0x7df4>
   27a88:	add	x8, x8, x8, lsl #1
   27a8c:	mov	x20, xzr
   27a90:	lsl	x21, x8, #3
   27a94:	ldr	x8, [x19, #32]
   27a98:	add	x8, x8, x20
   27a9c:	ldr	w9, [x8, #8]
   27aa0:	cmp	w9, #0x8
   27aa4:	b.ne	27ab0 <get_python_format_unnamed_arg_count@@Base+0x7de8>  // b.any
   27aa8:	ldr	x0, [x8, #16]
   27aac:	bl	27a2c <get_python_format_unnamed_arg_count@@Base+0x7d64>
   27ab0:	add	x20, x20, #0x18
   27ab4:	cmp	x21, x20
   27ab8:	b.ne	27a94 <get_python_format_unnamed_arg_count@@Base+0x7dcc>  // b.any
   27abc:	mov	x0, x19
   27ac0:	bl	29548 <get_python_format_unnamed_arg_count@@Base+0x9880>
   27ac4:	mov	x0, x19
   27ac8:	ldp	x20, x19, [sp, #32]
   27acc:	ldr	x21, [sp, #16]
   27ad0:	ldp	x29, x30, [sp], #48
   27ad4:	b	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   27ad8:	str	d8, [sp, #-32]!
   27adc:	mov	w0, #0x30                  	// #48
   27ae0:	stp	x29, x30, [sp, #8]
   27ae4:	str	x19, [sp, #24]
   27ae8:	mov	x29, sp
   27aec:	bl	a590 <xmalloc@plt>
   27af0:	movi	v8.2s, #0x1
   27af4:	mov	x19, x0
   27af8:	stp	xzr, xzr, [x0]
   27afc:	str	wzr, [x0, #16]
   27b00:	str	d8, [x0, #24]
   27b04:	mov	w0, #0x18                  	// #24
   27b08:	bl	a590 <xmalloc@plt>
   27b0c:	str	x0, [x19, #32]
   27b10:	str	d8, [x0]
   27b14:	str	wzr, [x0, #8]
   27b18:	mov	w8, #0x1                   	// #1
   27b1c:	mov	x0, x19
   27b20:	str	w8, [x19, #40]
   27b24:	bl	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   27b28:	mov	x0, x19
   27b2c:	ldr	x19, [sp, #24]
   27b30:	ldp	x29, x30, [sp, #8]
   27b34:	ldr	d8, [sp], #32
   27b38:	ret
   27b3c:	stp	x29, x30, [sp, #-48]!
   27b40:	stp	x22, x21, [sp, #16]
   27b44:	stp	x20, x19, [sp, #32]
   27b48:	ldp	w8, w9, [x0]
   27b4c:	mov	x29, sp
   27b50:	cmp	w8, w9
   27b54:	b.hi	27c18 <get_python_format_unnamed_arg_count@@Base+0x7f50>  // b.pmore
   27b58:	mov	x19, x0
   27b5c:	cbz	w8, 27b9c <get_python_format_unnamed_arg_count@@Base+0x7ed4>
   27b60:	ldr	x8, [x19, #8]
   27b64:	mov	x20, xzr
   27b68:	mov	x21, xzr
   27b6c:	mov	w22, wzr
   27b70:	add	x0, x8, x20
   27b74:	bl	27c1c <get_python_format_unnamed_arg_count@@Base+0x7f54>
   27b78:	ldr	x8, [x19, #8]
   27b7c:	ldr	w9, [x19]
   27b80:	add	x21, x21, #0x1
   27b84:	ldr	w10, [x8, x20]
   27b88:	cmp	x21, x9
   27b8c:	add	x20, x20, #0x18
   27b90:	add	w22, w10, w22
   27b94:	b.cc	27b70 <get_python_format_unnamed_arg_count@@Base+0x7ea8>  // b.lo, b.ul, b.last
   27b98:	b	27ba0 <get_python_format_unnamed_arg_count@@Base+0x7ed8>
   27b9c:	mov	w22, wzr
   27ba0:	ldr	w8, [x19, #16]
   27ba4:	cmp	w22, w8
   27ba8:	b.ne	27c18 <get_python_format_unnamed_arg_count@@Base+0x7f50>  // b.any
   27bac:	ldp	w8, w9, [x19, #24]
   27bb0:	cmp	w8, w9
   27bb4:	b.hi	27c18 <get_python_format_unnamed_arg_count@@Base+0x7f50>  // b.pmore
   27bb8:	cbz	w8, 27bf8 <get_python_format_unnamed_arg_count@@Base+0x7f30>
   27bbc:	ldr	x8, [x19, #32]
   27bc0:	mov	x20, xzr
   27bc4:	mov	x21, xzr
   27bc8:	mov	w22, wzr
   27bcc:	add	x0, x8, x20
   27bd0:	bl	27c1c <get_python_format_unnamed_arg_count@@Base+0x7f54>
   27bd4:	ldr	x8, [x19, #32]
   27bd8:	ldr	w9, [x19, #24]
   27bdc:	add	x21, x21, #0x1
   27be0:	ldr	w10, [x8, x20]
   27be4:	cmp	x21, x9
   27be8:	add	x20, x20, #0x18
   27bec:	add	w22, w10, w22
   27bf0:	b.cc	27bcc <get_python_format_unnamed_arg_count@@Base+0x7f04>  // b.lo, b.ul, b.last
   27bf4:	b	27bfc <get_python_format_unnamed_arg_count@@Base+0x7f34>
   27bf8:	mov	w22, wzr
   27bfc:	ldr	w8, [x19, #40]
   27c00:	cmp	w22, w8
   27c04:	b.ne	27c18 <get_python_format_unnamed_arg_count@@Base+0x7f50>  // b.any
   27c08:	ldp	x20, x19, [sp, #32]
   27c0c:	ldp	x22, x21, [sp, #16]
   27c10:	ldp	x29, x30, [sp], #48
   27c14:	ret
   27c18:	bl	a7e0 <abort@plt>
   27c1c:	stp	x29, x30, [sp, #-16]!
   27c20:	ldr	w8, [x0]
   27c24:	mov	x29, sp
   27c28:	cbz	w8, 27c4c <get_python_format_unnamed_arg_count@@Base+0x7f84>
   27c2c:	ldr	w8, [x0, #8]
   27c30:	cmp	w8, #0x8
   27c34:	b.ne	27c44 <get_python_format_unnamed_arg_count@@Base+0x7f7c>  // b.any
   27c38:	ldr	x0, [x0, #16]
   27c3c:	ldp	x29, x30, [sp], #16
   27c40:	b	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   27c44:	ldp	x29, x30, [sp], #16
   27c48:	ret
   27c4c:	bl	a7e0 <abort@plt>
   27c50:	stp	x29, x30, [sp, #-96]!
   27c54:	stp	x24, x23, [sp, #48]
   27c58:	stp	x22, x21, [sp, #64]
   27c5c:	stp	x20, x19, [sp, #80]
   27c60:	mov	x19, x6
   27c64:	mov	w20, w5
   27c68:	mov	w21, w3
   27c6c:	mov	x24, x2
   27c70:	mov	w22, w1
   27c74:	mov	x23, x0
   27c78:	stp	x28, x27, [sp, #16]
   27c7c:	stp	x26, x25, [sp, #32]
   27c80:	mov	x29, sp
   27c84:	cbz	w3, 27d1c <get_python_format_unnamed_arg_count@@Base+0x8054>
   27c88:	cbz	w22, 27d1c <get_python_format_unnamed_arg_count@@Base+0x8054>
   27c8c:	mov	w8, w22
   27c90:	mov	x25, x4
   27c94:	mov	x26, xzr
   27c98:	sub	x27, x8, #0x1
   27c9c:	sub	w28, w21, #0x1
   27ca0:	ldr	w2, [x25, x26, lsl #2]
   27ca4:	cmp	w2, #0x4
   27ca8:	b.eq	27cd8 <get_python_format_unnamed_arg_count@@Base+0x8010>  // b.none
   27cac:	cmp	w2, #0x2
   27cb0:	b.eq	27cc4 <get_python_format_unnamed_arg_count@@Base+0x7ffc>  // b.none
   27cb4:	cmp	w2, #0x1
   27cb8:	b.ne	27e48 <get_python_format_unnamed_arg_count@@Base+0x8180>  // b.any
   27cbc:	ldr	w8, [x24]
   27cc0:	b	27ce4 <get_python_format_unnamed_arg_count@@Base+0x801c>
   27cc4:	ldr	w8, [x24]
   27cc8:	and	w9, w8, #0xfffffffe
   27ccc:	cmp	w9, #0x2
   27cd0:	b.ne	27ce4 <get_python_format_unnamed_arg_count@@Base+0x801c>  // b.any
   27cd4:	b	27dc4 <get_python_format_unnamed_arg_count@@Base+0x80fc>
   27cd8:	ldr	w8, [x24]
   27cdc:	cmp	w8, #0x1
   27ce0:	b.eq	27df0 <get_python_format_unnamed_arg_count@@Base+0x8128>  // b.none
   27ce4:	cmp	w8, #0x4
   27ce8:	b.ne	27cfc <get_python_format_unnamed_arg_count@@Base+0x8034>  // b.any
   27cec:	ldr	w1, [x24, #4]
   27cf0:	tbnz	w1, #31, 27cfc <get_python_format_unnamed_arg_count@@Base+0x8034>
   27cf4:	mov	x0, x23
   27cf8:	bl	27e4c <get_python_format_unnamed_arg_count@@Base+0x8184>
   27cfc:	add	x24, x24, #0x8
   27d00:	cmp	w28, w26
   27d04:	add	x8, x26, #0x1
   27d08:	b.eq	27d18 <get_python_format_unnamed_arg_count@@Base+0x8050>  // b.none
   27d0c:	cmp	w27, w26
   27d10:	mov	x26, x8
   27d14:	b.ne	27ca0 <get_python_format_unnamed_arg_count@@Base+0x7fd8>  // b.any
   27d18:	sub	w22, w22, w8
   27d1c:	cbz	w22, 27d8c <get_python_format_unnamed_arg_count@@Base+0x80c4>
   27d20:	add	x26, x24, #0x4
   27d24:	ldur	w8, [x26, #-4]
   27d28:	cmp	w8, #0x4
   27d2c:	b.eq	27d40 <get_python_format_unnamed_arg_count@@Base+0x8078>  // b.none
   27d30:	sub	w8, w8, #0x1
   27d34:	cmp	w8, #0x2
   27d38:	b.hi	27d80 <get_python_format_unnamed_arg_count@@Base+0x80b8>  // b.pmore
   27d3c:	b	27d94 <get_python_format_unnamed_arg_count@@Base+0x80cc>
   27d40:	ldr	w24, [x26]
   27d44:	tbnz	w24, #31, 27d80 <get_python_format_unnamed_arg_count@@Base+0x80b8>
   27d48:	mov	w0, #0x30                  	// #48
   27d4c:	bl	a590 <xmalloc@plt>
   27d50:	mov	x25, x0
   27d54:	stp	xzr, xzr, [x0]
   27d58:	str	wzr, [x0, #16]
   27d5c:	stp	xzr, xzr, [x0, #24]
   27d60:	str	wzr, [x0, #40]
   27d64:	bl	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   27d68:	mov	x0, x23
   27d6c:	mov	w1, w24
   27d70:	mov	x2, x25
   27d74:	bl	27f38 <get_python_format_unnamed_arg_count@@Base+0x8270>
   27d78:	mov	x0, x25
   27d7c:	bl	2802c <get_python_format_unnamed_arg_count@@Base+0x8364>
   27d80:	subs	w22, w22, #0x1
   27d84:	add	x26, x26, #0x8
   27d88:	b.ne	27d24 <get_python_format_unnamed_arg_count@@Base+0x805c>  // b.any
   27d8c:	mov	w0, #0x1                   	// #1
   27d90:	b	27e2c <get_python_format_unnamed_arg_count@@Base+0x8164>
   27d94:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   27d98:	adrp	x2, 3a000 <plural_table_size@@Base+0xc00>
   27d9c:	mov	w3, w21
   27da0:	add	x1, x1, #0x1e7
   27da4:	add	x2, x2, #0x241
   27da8:	mov	w4, #0x5                   	// #5
   27dac:	mov	x0, xzr
   27db0:	bl	ab40 <dcngettext@plt>
   27db4:	mov	w1, w20
   27db8:	mov	w2, w21
   27dbc:	bl	aa20 <xasprintf@plt>
   27dc0:	b	27e20 <get_python_format_unnamed_arg_count@@Base+0x8158>
   27dc4:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   27dc8:	add	x1, x1, #0x17c
   27dcc:	mov	w2, #0x5                   	// #5
   27dd0:	mov	x0, xzr
   27dd4:	bl	acd0 <dcgettext@plt>
   27dd8:	adrp	x3, 3a000 <plural_table_size@@Base+0xc00>
   27ddc:	adrp	x4, 37000 <get_search_path@@Base+0xb4c>
   27de0:	add	w2, w26, #0x1
   27de4:	add	x3, x3, #0x1df
   27de8:	add	x4, x4, #0x3d7
   27dec:	b	27e18 <get_python_format_unnamed_arg_count@@Base+0x8150>
   27df0:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   27df4:	add	x1, x1, #0x17c
   27df8:	mov	w2, #0x5                   	// #5
   27dfc:	mov	x0, xzr
   27e00:	bl	acd0 <dcgettext@plt>
   27e04:	adrp	x3, 37000 <get_search_path@@Base+0xb4c>
   27e08:	adrp	x4, 3a000 <plural_table_size@@Base+0xc00>
   27e0c:	add	w2, w26, #0x1
   27e10:	add	x3, x3, #0x3d7
   27e14:	add	x4, x4, #0x1df
   27e18:	mov	w1, w20
   27e1c:	bl	aa20 <xasprintf@plt>
   27e20:	mov	x8, x0
   27e24:	mov	w0, wzr
   27e28:	str	x8, [x19]
   27e2c:	ldp	x20, x19, [sp, #80]
   27e30:	ldp	x22, x21, [sp, #64]
   27e34:	ldp	x24, x23, [sp, #48]
   27e38:	ldp	x26, x25, [sp, #32]
   27e3c:	ldp	x28, x27, [sp, #16]
   27e40:	ldp	x29, x30, [sp], #96
   27e44:	ret
   27e48:	bl	a7e0 <abort@plt>
   27e4c:	sub	sp, sp, #0x70
   27e50:	stp	x29, x30, [sp, #48]
   27e54:	stp	x22, x21, [sp, #80]
   27e58:	stp	x20, x19, [sp, #96]
   27e5c:	mov	x19, x0
   27e60:	ldr	x0, [x0]
   27e64:	str	x23, [sp, #64]
   27e68:	add	x29, sp, #0x30
   27e6c:	mov	w22, w2
   27e70:	mov	w21, w1
   27e74:	bl	28950 <get_python_format_unnamed_arg_count@@Base+0x8c88>
   27e78:	mov	x20, x0
   27e7c:	str	x0, [x19]
   27e80:	cbz	x0, 27f1c <get_python_format_unnamed_arg_count@@Base+0x8254>
   27e84:	mov	x0, x20
   27e88:	mov	w1, w21
   27e8c:	bl	28a04 <get_python_format_unnamed_arg_count@@Base+0x8d3c>
   27e90:	mov	w8, #0x1                   	// #1
   27e94:	stp	w8, w22, [sp, #28]
   27e98:	ldr	x8, [x20, #8]
   27e9c:	mov	w9, #0x18                  	// #24
   27ea0:	mov	w23, w0
   27ea4:	add	x2, sp, #0x18
   27ea8:	umaddl	x1, w0, w9, x8
   27eac:	mov	x0, sp
   27eb0:	bl	28ca8 <get_python_format_unnamed_arg_count@@Base+0x8fe0>
   27eb4:	tbz	w0, #0, 27f0c <get_python_format_unnamed_arg_count@@Base+0x8244>
   27eb8:	ldr	x8, [x20, #8]
   27ebc:	mov	w21, w23
   27ec0:	mov	w9, #0x18                  	// #24
   27ec4:	madd	x9, x21, x9, x8
   27ec8:	ldr	w9, [x9, #8]
   27ecc:	cmp	w9, #0x8
   27ed0:	b.ne	27ee8 <get_python_format_unnamed_arg_count@@Base+0x8220>  // b.any
   27ed4:	mov	w9, #0x18                  	// #24
   27ed8:	madd	x8, x21, x9, x8
   27edc:	ldr	x0, [x8, #16]
   27ee0:	bl	2802c <get_python_format_unnamed_arg_count@@Base+0x8364>
   27ee4:	ldr	x8, [x20, #8]
   27ee8:	ldr	w9, [sp, #8]
   27eec:	mov	w10, #0x18                  	// #24
   27ef0:	madd	x8, x21, x10, x8
   27ef4:	mov	x0, x20
   27ef8:	str	w9, [x8, #8]
   27efc:	ldr	x9, [sp, #16]
   27f00:	str	x9, [x8, #16]
   27f04:	bl	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   27f08:	b	27f1c <get_python_format_unnamed_arg_count@@Base+0x8254>
   27f0c:	mov	x0, x20
   27f10:	mov	w1, w21
   27f14:	bl	28800 <get_python_format_unnamed_arg_count@@Base+0x8b38>
   27f18:	mov	x20, x0
   27f1c:	str	x20, [x19]
   27f20:	ldp	x20, x19, [sp, #96]
   27f24:	ldp	x22, x21, [sp, #80]
   27f28:	ldr	x23, [sp, #64]
   27f2c:	ldp	x29, x30, [sp, #48]
   27f30:	add	sp, sp, #0x70
   27f34:	ret
   27f38:	sub	sp, sp, #0x70
   27f3c:	stp	x29, x30, [sp, #48]
   27f40:	stp	x22, x21, [sp, #80]
   27f44:	stp	x20, x19, [sp, #96]
   27f48:	mov	x19, x0
   27f4c:	ldr	x0, [x0]
   27f50:	str	x23, [sp, #64]
   27f54:	add	x29, sp, #0x30
   27f58:	mov	x22, x2
   27f5c:	mov	w21, w1
   27f60:	bl	28950 <get_python_format_unnamed_arg_count@@Base+0x8c88>
   27f64:	mov	x20, x0
   27f68:	str	x0, [x19]
   27f6c:	cbz	x0, 28010 <get_python_format_unnamed_arg_count@@Base+0x8348>
   27f70:	mov	x0, x20
   27f74:	mov	w1, w21
   27f78:	bl	28a04 <get_python_format_unnamed_arg_count@@Base+0x8d3c>
   27f7c:	adrp	x8, 3a000 <plural_table_size@@Base+0xc00>
   27f80:	ldr	d0, [x8, #1320]
   27f84:	str	x22, [sp, #40]
   27f88:	mov	w9, #0x18                  	// #24
   27f8c:	mov	w23, w0
   27f90:	stur	d0, [sp, #28]
   27f94:	ldr	x8, [x20, #8]
   27f98:	add	x2, sp, #0x18
   27f9c:	umaddl	x1, w0, w9, x8
   27fa0:	mov	x0, sp
   27fa4:	bl	28ca8 <get_python_format_unnamed_arg_count@@Base+0x8fe0>
   27fa8:	tbz	w0, #0, 28000 <get_python_format_unnamed_arg_count@@Base+0x8338>
   27fac:	ldr	x8, [x20, #8]
   27fb0:	mov	w21, w23
   27fb4:	mov	w9, #0x18                  	// #24
   27fb8:	madd	x9, x21, x9, x8
   27fbc:	ldr	w9, [x9, #8]
   27fc0:	cmp	w9, #0x8
   27fc4:	b.ne	27fdc <get_python_format_unnamed_arg_count@@Base+0x8314>  // b.any
   27fc8:	mov	w9, #0x18                  	// #24
   27fcc:	madd	x8, x21, x9, x8
   27fd0:	ldr	x0, [x8, #16]
   27fd4:	bl	2802c <get_python_format_unnamed_arg_count@@Base+0x8364>
   27fd8:	ldr	x8, [x20, #8]
   27fdc:	ldr	w9, [sp, #8]
   27fe0:	mov	w10, #0x18                  	// #24
   27fe4:	madd	x8, x21, x10, x8
   27fe8:	mov	x0, x20
   27fec:	str	w9, [x8, #8]
   27ff0:	ldr	x9, [sp, #16]
   27ff4:	str	x9, [x8, #16]
   27ff8:	bl	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   27ffc:	b	28010 <get_python_format_unnamed_arg_count@@Base+0x8348>
   28000:	mov	x0, x20
   28004:	mov	w1, w21
   28008:	bl	28800 <get_python_format_unnamed_arg_count@@Base+0x8b38>
   2800c:	mov	x20, x0
   28010:	str	x20, [x19]
   28014:	ldp	x20, x19, [sp, #96]
   28018:	ldp	x22, x21, [sp, #80]
   2801c:	ldr	x23, [sp, #64]
   28020:	ldp	x29, x30, [sp, #48]
   28024:	add	sp, sp, #0x70
   28028:	ret
   2802c:	stp	x29, x30, [sp, #-48]!
   28030:	stp	x20, x19, [sp, #32]
   28034:	mov	x19, x0
   28038:	ldr	w8, [x0]
   2803c:	ldr	x0, [x0, #8]
   28040:	str	x21, [sp, #16]
   28044:	mov	x29, sp
   28048:	cbz	w8, 28084 <get_python_format_unnamed_arg_count@@Base+0x83bc>
   2804c:	mov	x20, xzr
   28050:	mov	x21, xzr
   28054:	add	x9, x0, x20
   28058:	ldr	w10, [x9, #8]
   2805c:	cmp	w10, #0x8
   28060:	b.ne	28074 <get_python_format_unnamed_arg_count@@Base+0x83ac>  // b.any
   28064:	ldr	x0, [x9, #16]
   28068:	bl	2802c <get_python_format_unnamed_arg_count@@Base+0x8364>
   2806c:	ldr	w8, [x19]
   28070:	ldr	x0, [x19, #8]
   28074:	add	x21, x21, #0x1
   28078:	cmp	x21, w8, uxtw
   2807c:	add	x20, x20, #0x18
   28080:	b.cc	28054 <get_python_format_unnamed_arg_count@@Base+0x838c>  // b.lo, b.ul, b.last
   28084:	cbz	x0, 2808c <get_python_format_unnamed_arg_count@@Base+0x83c4>
   28088:	bl	aa00 <free@plt>
   2808c:	ldr	w8, [x19, #24]
   28090:	ldr	x0, [x19, #32]
   28094:	cbz	w8, 280d0 <get_python_format_unnamed_arg_count@@Base+0x8408>
   28098:	mov	x20, xzr
   2809c:	mov	x21, xzr
   280a0:	add	x9, x0, x20
   280a4:	ldr	w10, [x9, #8]
   280a8:	cmp	w10, #0x8
   280ac:	b.ne	280c0 <get_python_format_unnamed_arg_count@@Base+0x83f8>  // b.any
   280b0:	ldr	x0, [x9, #16]
   280b4:	bl	2802c <get_python_format_unnamed_arg_count@@Base+0x8364>
   280b8:	ldr	w8, [x19, #24]
   280bc:	ldr	x0, [x19, #32]
   280c0:	add	x21, x21, #0x1
   280c4:	cmp	x21, w8, uxtw
   280c8:	add	x20, x20, #0x18
   280cc:	b.cc	280a0 <get_python_format_unnamed_arg_count@@Base+0x83d8>  // b.lo, b.ul, b.last
   280d0:	cbz	x0, 280e4 <get_python_format_unnamed_arg_count@@Base+0x841c>
   280d4:	ldp	x20, x19, [sp, #32]
   280d8:	ldr	x21, [sp, #16]
   280dc:	ldp	x29, x30, [sp], #48
   280e0:	b	aa00 <free@plt>
   280e4:	ldp	x20, x19, [sp, #32]
   280e8:	ldr	x21, [sp, #16]
   280ec:	ldp	x29, x30, [sp], #48
   280f0:	ret
   280f4:	stp	x29, x30, [sp, #-64]!
   280f8:	stp	x24, x23, [sp, #16]
   280fc:	stp	x22, x21, [sp, #32]
   28100:	stp	x20, x19, [sp, #48]
   28104:	mov	x29, sp
   28108:	mov	x19, x0
   2810c:	bl	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   28110:	mov	w0, #0x30                  	// #48
   28114:	bl	a590 <xmalloc@plt>
   28118:	ldr	w8, [x19]
   2811c:	mov	x20, x0
   28120:	stp	w8, w8, [x0]
   28124:	ldr	w9, [x19]
   28128:	cbz	w9, 281ac <get_python_format_unnamed_arg_count@@Base+0x84e4>
   2812c:	add	x8, x8, x8, lsl #1
   28130:	lsl	x0, x8, #3
   28134:	bl	a590 <xmalloc@plt>
   28138:	str	x0, [x20, #8]
   2813c:	ldr	w8, [x19]
   28140:	cbz	w8, 281b8 <get_python_format_unnamed_arg_count@@Base+0x84f0>
   28144:	ldr	x9, [x19, #8]
   28148:	mov	x22, xzr
   2814c:	mov	w21, wzr
   28150:	mov	w23, #0x1                   	// #1
   28154:	add	x10, x9, x22
   28158:	ldr	x11, [x10]
   2815c:	add	x24, x0, x22
   28160:	str	x11, [x24]
   28164:	ldr	w11, [x10, #8]
   28168:	str	w11, [x24, #8]
   2816c:	ldr	w11, [x10, #8]
   28170:	cmp	w11, #0x8
   28174:	b.ne	2818c <get_python_format_unnamed_arg_count@@Base+0x84c4>  // b.any
   28178:	ldr	x0, [x10, #16]
   2817c:	bl	280f4 <get_python_format_unnamed_arg_count@@Base+0x842c>
   28180:	str	x0, [x24, #16]
   28184:	ldr	x9, [x19, #8]
   28188:	ldr	w8, [x19]
   2818c:	ldr	w10, [x9, x22]
   28190:	cmp	x23, w8, uxtw
   28194:	add	w21, w10, w21
   28198:	b.cs	281bc <get_python_format_unnamed_arg_count@@Base+0x84f4>  // b.hs, b.nlast
   2819c:	ldr	x0, [x20, #8]
   281a0:	add	x22, x22, #0x18
   281a4:	add	x23, x23, #0x1
   281a8:	b	28154 <get_python_format_unnamed_arg_count@@Base+0x848c>
   281ac:	mov	w21, wzr
   281b0:	str	xzr, [x20, #8]
   281b4:	b	281bc <get_python_format_unnamed_arg_count@@Base+0x84f4>
   281b8:	mov	w21, wzr
   281bc:	ldr	w8, [x19, #16]
   281c0:	cmp	w21, w8
   281c4:	b.ne	2829c <get_python_format_unnamed_arg_count@@Base+0x85d4>  // b.any
   281c8:	str	w21, [x20, #16]
   281cc:	ldr	w8, [x19, #24]
   281d0:	stp	w8, w8, [x20, #24]
   281d4:	ldr	w9, [x19, #24]
   281d8:	cbz	w9, 2825c <get_python_format_unnamed_arg_count@@Base+0x8594>
   281dc:	add	x8, x8, x8, lsl #1
   281e0:	lsl	x0, x8, #3
   281e4:	bl	a590 <xmalloc@plt>
   281e8:	str	x0, [x20, #32]
   281ec:	ldr	w8, [x19, #24]
   281f0:	cbz	w8, 28268 <get_python_format_unnamed_arg_count@@Base+0x85a0>
   281f4:	ldr	x9, [x19, #32]
   281f8:	mov	x22, xzr
   281fc:	mov	w21, wzr
   28200:	mov	w23, #0x1                   	// #1
   28204:	add	x10, x9, x22
   28208:	ldr	x11, [x10]
   2820c:	add	x24, x0, x22
   28210:	str	x11, [x24]
   28214:	ldr	w11, [x10, #8]
   28218:	str	w11, [x24, #8]
   2821c:	ldr	w11, [x10, #8]
   28220:	cmp	w11, #0x8
   28224:	b.ne	2823c <get_python_format_unnamed_arg_count@@Base+0x8574>  // b.any
   28228:	ldr	x0, [x10, #16]
   2822c:	bl	280f4 <get_python_format_unnamed_arg_count@@Base+0x842c>
   28230:	str	x0, [x24, #16]
   28234:	ldr	x9, [x19, #32]
   28238:	ldr	w8, [x19, #24]
   2823c:	ldr	w10, [x9, x22]
   28240:	cmp	x23, w8, uxtw
   28244:	add	w21, w10, w21
   28248:	b.cs	2826c <get_python_format_unnamed_arg_count@@Base+0x85a4>  // b.hs, b.nlast
   2824c:	ldr	x0, [x20, #32]
   28250:	add	x22, x22, #0x18
   28254:	add	x23, x23, #0x1
   28258:	b	28204 <get_python_format_unnamed_arg_count@@Base+0x853c>
   2825c:	mov	w21, wzr
   28260:	str	xzr, [x20, #32]
   28264:	b	2826c <get_python_format_unnamed_arg_count@@Base+0x85a4>
   28268:	mov	w21, wzr
   2826c:	ldr	w8, [x19, #40]
   28270:	cmp	w21, w8
   28274:	b.ne	2829c <get_python_format_unnamed_arg_count@@Base+0x85d4>  // b.any
   28278:	mov	x0, x20
   2827c:	str	w21, [x20, #40]
   28280:	bl	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   28284:	mov	x0, x20
   28288:	ldp	x20, x19, [sp, #48]
   2828c:	ldp	x22, x21, [sp, #32]
   28290:	ldp	x24, x23, [sp, #16]
   28294:	ldp	x29, x30, [sp], #64
   28298:	ret
   2829c:	bl	a7e0 <abort@plt>
   282a0:	stp	x29, x30, [sp, #-32]!
   282a4:	str	x19, [sp, #16]
   282a8:	mov	x29, sp
   282ac:	mov	x19, x0
   282b0:	bl	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   282b4:	ldr	w8, [x19]
   282b8:	cbz	w8, 282c4 <get_python_format_unnamed_arg_count@@Base+0x85fc>
   282bc:	ldr	x8, [x19, #8]
   282c0:	b	282d0 <get_python_format_unnamed_arg_count@@Base+0x8608>
   282c4:	ldr	w8, [x19, #24]
   282c8:	cbz	w8, 28314 <get_python_format_unnamed_arg_count@@Base+0x864c>
   282cc:	ldr	x8, [x19, #32]
   282d0:	ldr	w8, [x8, #4]
   282d4:	cbnz	w8, 28314 <get_python_format_unnamed_arg_count@@Base+0x864c>
   282d8:	mov	w1, #0x1                   	// #1
   282dc:	mov	x0, x19
   282e0:	bl	29380 <get_python_format_unnamed_arg_count@@Base+0x96b8>
   282e4:	ldr	w8, [x19]
   282e8:	cbz	w8, 2832c <get_python_format_unnamed_arg_count@@Base+0x8664>
   282ec:	ldr	x8, [x19, #8]
   282f0:	ldr	w9, [x8]
   282f4:	cmp	w9, #0x1
   282f8:	b.ne	2832c <get_python_format_unnamed_arg_count@@Base+0x8664>  // b.any
   282fc:	ldr	w9, [x8, #4]
   28300:	cbnz	w9, 2832c <get_python_format_unnamed_arg_count@@Base+0x8664>
   28304:	mov	w9, #0x1                   	// #1
   28308:	mov	x0, x19
   2830c:	str	w9, [x8, #4]
   28310:	bl	29548 <get_python_format_unnamed_arg_count@@Base+0x9880>
   28314:	mov	x0, x19
   28318:	bl	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   2831c:	mov	x0, x19
   28320:	ldr	x19, [sp, #16]
   28324:	ldp	x29, x30, [sp], #32
   28328:	ret
   2832c:	bl	a7e0 <abort@plt>
   28330:	sub	sp, sp, #0x70
   28334:	stp	x29, x30, [sp, #16]
   28338:	stp	x28, x27, [sp, #32]
   2833c:	stp	x26, x25, [sp, #48]
   28340:	stp	x24, x23, [sp, #64]
   28344:	stp	x22, x21, [sp, #80]
   28348:	stp	x20, x19, [sp, #96]
   2834c:	add	x29, sp, #0x10
   28350:	mov	x24, x1
   28354:	mov	x20, x0
   28358:	bl	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   2835c:	mov	x0, x24
   28360:	bl	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   28364:	ldr	w21, [x20, #40]
   28368:	cbz	w21, 283cc <get_python_format_unnamed_arg_count@@Base+0x8704>
   2836c:	ldr	w22, [x24, #40]
   28370:	cbz	w22, 283a4 <get_python_format_unnamed_arg_count@@Base+0x86dc>
   28374:	mov	x0, x21
   28378:	mov	x1, x22
   2837c:	bl	ac10 <gcd@plt>
   28380:	udiv	w1, w22, w0
   28384:	udiv	w21, w21, w0
   28388:	mov	x0, x20
   2838c:	bl	29b90 <get_python_format_unnamed_arg_count@@Base+0x9ec8>
   28390:	mov	x0, x24
   28394:	mov	w1, w21
   28398:	bl	29b90 <get_python_format_unnamed_arg_count@@Base+0x9ec8>
   2839c:	ldr	w8, [x20, #40]
   283a0:	cbz	w8, 283cc <get_python_format_unnamed_arg_count@@Base+0x8704>
   283a4:	ldr	w8, [x20, #16]
   283a8:	ldr	w9, [x24, #16]
   283ac:	mov	x0, x20
   283b0:	cmp	w8, w9
   283b4:	csel	w21, w8, w9, hi  // hi = pmore
   283b8:	mov	w1, w21
   283bc:	bl	28e9c <get_python_format_unnamed_arg_count@@Base+0x91d4>
   283c0:	ldr	w8, [x24, #40]
   283c4:	cbnz	w8, 283e4 <get_python_format_unnamed_arg_count@@Base+0x871c>
   283c8:	b	283f0 <get_python_format_unnamed_arg_count@@Base+0x8728>
   283cc:	ldr	w8, [x24, #40]
   283d0:	cbz	w8, 283f0 <get_python_format_unnamed_arg_count@@Base+0x8728>
   283d4:	ldr	w8, [x20, #16]
   283d8:	ldr	w9, [x24, #16]
   283dc:	cmp	w8, w9
   283e0:	csel	w21, w8, w9, hi  // hi = pmore
   283e4:	mov	x0, x24
   283e8:	mov	w1, w21
   283ec:	bl	28e9c <get_python_format_unnamed_arg_count@@Base+0x91d4>
   283f0:	ldr	w8, [x20, #40]
   283f4:	cbz	w8, 28418 <get_python_format_unnamed_arg_count@@Base+0x8750>
   283f8:	ldr	w9, [x24, #40]
   283fc:	cbz	w9, 28418 <get_python_format_unnamed_arg_count@@Base+0x8750>
   28400:	ldr	w10, [x20, #16]
   28404:	ldr	w11, [x24, #16]
   28408:	cmp	w10, w11
   2840c:	b.ne	287fc <get_python_format_unnamed_arg_count@@Base+0x8b34>  // b.any
   28410:	cmp	w8, w9
   28414:	b.ne	287fc <get_python_format_unnamed_arg_count@@Base+0x8b34>  // b.any
   28418:	mov	w0, #0x30                  	// #48
   2841c:	bl	a590 <xmalloc@plt>
   28420:	mov	x8, x0
   28424:	str	xzr, [x8, #24]!
   28428:	str	xzr, [x0, #32]
   2842c:	str	wzr, [x0, #40]
   28430:	stp	x8, x24, [sp]
   28434:	str	wzr, [x0, #16]
   28438:	stp	xzr, xzr, [x0]
   2843c:	ldr	w27, [x20]
   28440:	ldr	w28, [x24]
   28444:	ldr	x22, [x20, #8]
   28448:	ldr	x23, [x24, #8]
   2844c:	cmp	w27, #0x0
   28450:	cset	w8, ne  // ne = any
   28454:	cmp	w28, #0x0
   28458:	mov	x21, x0
   2845c:	cset	w9, ne  // ne = any
   28460:	cbz	w27, 28574 <get_python_format_unnamed_arg_count@@Base+0x88ac>
   28464:	cbz	w28, 28574 <get_python_format_unnamed_arg_count@@Base+0x88ac>
   28468:	mov	w8, wzr
   2846c:	mov	w26, wzr
   28470:	mov	w19, #0x18                  	// #24
   28474:	cmp	w26, w8
   28478:	b.cs	28484 <get_python_format_unnamed_arg_count@@Base+0x87bc>  // b.hs, b.nlast
   2847c:	ldr	x25, [x21, #8]
   28480:	b	284b4 <get_python_format_unnamed_arg_count@@Base+0x87ec>
   28484:	mov	w9, #0x1                   	// #1
   28488:	add	w10, w26, #0x1
   2848c:	ldr	x0, [x21, #8]
   28490:	bfi	w9, w8, #1, #31
   28494:	cmp	w9, w10
   28498:	csinc	w8, w9, w26, hi  // hi = pmore
   2849c:	umull	x1, w8, w19
   284a0:	str	w8, [x21, #4]
   284a4:	bl	a460 <xrealloc@plt>
   284a8:	ldr	w26, [x21]
   284ac:	mov	x25, x0
   284b0:	str	x0, [x21, #8]
   284b4:	ldr	w8, [x22]
   284b8:	ldr	w9, [x23]
   284bc:	umaddl	x24, w26, w19, x25
   284c0:	mov	x0, x24
   284c4:	mov	x1, x22
   284c8:	cmp	w8, w9
   284cc:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   284d0:	mov	x2, x23
   284d4:	str	w8, [x24]
   284d8:	bl	28ca8 <get_python_format_unnamed_arg_count@@Base+0x8fe0>
   284dc:	tbz	w0, #0, 28558 <get_python_format_unnamed_arg_count@@Base+0x8890>
   284e0:	ldr	w8, [x21]
   284e4:	ldr	w9, [x21, #16]
   284e8:	add	w26, w8, #0x1
   284ec:	str	w26, [x21]
   284f0:	ldr	w8, [x24]
   284f4:	add	w9, w9, w8
   284f8:	str	w9, [x21, #16]
   284fc:	ldr	w9, [x22]
   28500:	subs	w8, w9, w8
   28504:	mov	x9, x22
   28508:	str	w8, [x9], #24
   2850c:	ldr	w8, [x24]
   28510:	ldr	w10, [x23]
   28514:	csel	x22, x9, x22, eq  // eq = none
   28518:	cset	w9, eq  // eq = none
   2851c:	sub	w27, w27, w9
   28520:	mov	x9, x23
   28524:	subs	w8, w10, w8
   28528:	str	w8, [x9], #24
   2852c:	cset	w8, eq  // eq = none
   28530:	csel	x23, x9, x23, eq  // eq = none
   28534:	sub	w28, w28, w8
   28538:	cmp	w27, #0x0
   2853c:	cset	w8, ne  // ne = any
   28540:	cmp	w28, #0x0
   28544:	cset	w9, ne  // ne = any
   28548:	cbz	w27, 28570 <get_python_format_unnamed_arg_count@@Base+0x88a8>
   2854c:	cbz	w28, 28570 <get_python_format_unnamed_arg_count@@Base+0x88a8>
   28550:	ldr	w8, [x21, #4]
   28554:	b	28474 <get_python_format_unnamed_arg_count@@Base+0x87ac>
   28558:	mov	w8, #0x18                  	// #24
   2855c:	umaddl	x8, w26, w8, x25
   28560:	ldr	w8, [x8, #4]
   28564:	ldr	x24, [sp, #8]
   28568:	cbnz	w8, 287b4 <get_python_format_unnamed_arg_count@@Base+0x8aec>
   2856c:	b	287a8 <get_python_format_unnamed_arg_count@@Base+0x8ae0>
   28570:	ldr	x24, [sp, #8]
   28574:	ldr	w19, [x20, #24]
   28578:	ldr	w26, [x24, #24]
   2857c:	cbz	w19, 28684 <get_python_format_unnamed_arg_count@@Base+0x89bc>
   28580:	cbz	w26, 2869c <get_python_format_unnamed_arg_count@@Base+0x89d4>
   28584:	orr	w8, w28, w27
   28588:	cbnz	w8, 287fc <get_python_format_unnamed_arg_count@@Base+0x8b34>
   2858c:	ldr	x8, [sp, #8]
   28590:	ldr	x23, [x20, #32]
   28594:	mov	w27, #0x18                  	// #24
   28598:	ldr	x22, [x8, #32]
   2859c:	ldr	x8, [sp]
   285a0:	ldr	w28, [x8]
   285a4:	ldr	w8, [x21, #28]
   285a8:	cmp	w28, w8
   285ac:	b.cs	285b8 <get_python_format_unnamed_arg_count@@Base+0x88f0>  // b.hs, b.nlast
   285b0:	ldr	x24, [x21, #32]
   285b4:	b	285e8 <get_python_format_unnamed_arg_count@@Base+0x8920>
   285b8:	mov	w9, #0x1                   	// #1
   285bc:	add	w10, w28, #0x1
   285c0:	ldr	x0, [x21, #32]
   285c4:	bfi	w9, w8, #1, #31
   285c8:	cmp	w9, w10
   285cc:	csinc	w8, w9, w28, hi  // hi = pmore
   285d0:	umull	x1, w8, w27
   285d4:	str	w8, [x21, #28]
   285d8:	bl	a460 <xrealloc@plt>
   285dc:	ldr	w28, [x21, #24]
   285e0:	mov	x24, x0
   285e4:	str	x0, [x21, #32]
   285e8:	ldr	w8, [x23]
   285ec:	ldr	w9, [x22]
   285f0:	umaddl	x25, w28, w27, x24
   285f4:	mov	x0, x25
   285f8:	mov	x1, x23
   285fc:	cmp	w8, w9
   28600:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   28604:	mov	x2, x22
   28608:	str	w8, [x25]
   2860c:	bl	28ca8 <get_python_format_unnamed_arg_count@@Base+0x8fe0>
   28610:	tbz	w0, #0, 286b8 <get_python_format_unnamed_arg_count@@Base+0x89f0>
   28614:	ldr	w8, [x21, #24]
   28618:	ldr	w9, [x21, #40]
   2861c:	add	w28, w8, #0x1
   28620:	str	w28, [x21, #24]
   28624:	ldr	w8, [x25]
   28628:	add	w9, w9, w8
   2862c:	str	w9, [x21, #40]
   28630:	ldr	w9, [x23]
   28634:	subs	w8, w9, w8
   28638:	mov	x9, x23
   2863c:	str	w8, [x9], #24
   28640:	ldr	w8, [x25]
   28644:	ldr	w10, [x22]
   28648:	csel	x23, x9, x23, eq  // eq = none
   2864c:	cset	w9, eq  // eq = none
   28650:	sub	w19, w19, w9
   28654:	mov	x9, x22
   28658:	subs	w8, w10, w8
   2865c:	str	w8, [x9], #24
   28660:	cset	w8, eq  // eq = none
   28664:	csel	x22, x9, x22, eq  // eq = none
   28668:	sub	w26, w26, w8
   2866c:	cbz	w19, 28674 <get_python_format_unnamed_arg_count@@Base+0x89ac>
   28670:	cbnz	w26, 285a4 <get_python_format_unnamed_arg_count@@Base+0x88dc>
   28674:	ldr	x24, [sp, #8]
   28678:	orr	w8, w26, w19
   2867c:	cbz	w8, 287b4 <get_python_format_unnamed_arg_count@@Base+0x8aec>
   28680:	b	287fc <get_python_format_unnamed_arg_count@@Base+0x8b34>
   28684:	cbz	w26, 2878c <get_python_format_unnamed_arg_count@@Base+0x8ac4>
   28688:	cbnz	w27, 287fc <get_python_format_unnamed_arg_count@@Base+0x8b34>
   2868c:	ldr	x24, [sp, #8]
   28690:	tbnz	w9, #0, 287a0 <get_python_format_unnamed_arg_count@@Base+0x8ad8>
   28694:	ldr	x23, [x24, #32]
   28698:	b	287a0 <get_python_format_unnamed_arg_count@@Base+0x8ad8>
   2869c:	cbnz	w28, 287fc <get_python_format_unnamed_arg_count@@Base+0x8b34>
   286a0:	ldr	x24, [sp, #8]
   286a4:	tbnz	w8, #0, 286ac <get_python_format_unnamed_arg_count@@Base+0x89e4>
   286a8:	ldr	x22, [x20, #32]
   286ac:	ldr	w8, [x22, #4]
   286b0:	cbnz	w8, 287b4 <get_python_format_unnamed_arg_count@@Base+0x8aec>
   286b4:	b	287a8 <get_python_format_unnamed_arg_count@@Base+0x8ae0>
   286b8:	mov	w8, #0x18                  	// #24
   286bc:	umaddl	x8, w28, w8, x24
   286c0:	ldp	x9, x24, [sp]
   286c4:	ldr	w19, [x8, #4]
   286c8:	ldr	w9, [x9]
   286cc:	cbz	w9, 28784 <get_python_format_unnamed_arg_count@@Base+0x8abc>
   286d0:	ldp	w10, w8, [x21]
   286d4:	add	w22, w10, w9
   286d8:	cmp	w8, w22
   286dc:	b.cs	28714 <get_python_format_unnamed_arg_count@@Base+0x8a4c>  // b.hs, b.nlast
   286e0:	mov	w9, #0x1                   	// #1
   286e4:	ldr	x0, [x21, #8]
   286e8:	bfi	w9, w8, #1, #31
   286ec:	cmp	w9, w22
   286f0:	mov	w10, #0x18                  	// #24
   286f4:	csel	w8, w9, w22, hi  // hi = pmore
   286f8:	umull	x1, w8, w10
   286fc:	str	w8, [x21, #4]
   28700:	bl	a460 <xrealloc@plt>
   28704:	ldr	w8, [x21, #24]
   28708:	str	x0, [x21, #8]
   2870c:	cbz	w8, 2875c <get_python_format_unnamed_arg_count@@Base+0x8a94>
   28710:	ldr	w10, [x21]
   28714:	mov	x8, xzr
   28718:	mov	x9, xzr
   2871c:	mov	w10, w10
   28720:	mov	w11, #0x18                  	// #24
   28724:	ldr	x12, [x21, #32]
   28728:	ldr	x13, [x21, #8]
   2872c:	add	x12, x12, x8
   28730:	ldr	x14, [x12, #16]
   28734:	ldr	q0, [x12]
   28738:	add	w12, w10, w9
   2873c:	umaddl	x12, w12, w11, x13
   28740:	str	x14, [x12, #16]
   28744:	str	q0, [x12]
   28748:	ldr	w12, [x21, #24]
   2874c:	add	x9, x9, #0x1
   28750:	add	x8, x8, #0x18
   28754:	cmp	x9, x12
   28758:	b.cc	28724 <get_python_format_unnamed_arg_count@@Base+0x8a5c>  // b.lo, b.ul, b.last
   2875c:	ldr	w8, [x21, #16]
   28760:	ldr	w9, [x21, #40]
   28764:	ldr	x0, [x21, #32]
   28768:	str	w22, [x21]
   2876c:	add	w8, w9, w8
   28770:	str	w8, [x21, #16]
   28774:	bl	aa00 <free@plt>
   28778:	ldr	x8, [sp]
   2877c:	stp	xzr, xzr, [x8]
   28780:	str	wzr, [x8, #16]
   28784:	cbnz	w19, 287b4 <get_python_format_unnamed_arg_count@@Base+0x8aec>
   28788:	b	287a8 <get_python_format_unnamed_arg_count@@Base+0x8ae0>
   2878c:	cbz	w8, 28798 <get_python_format_unnamed_arg_count@@Base+0x8ad0>
   28790:	ldr	w8, [x22, #4]
   28794:	b	28564 <get_python_format_unnamed_arg_count@@Base+0x889c>
   28798:	ldr	x24, [sp, #8]
   2879c:	cbz	w9, 287b4 <get_python_format_unnamed_arg_count@@Base+0x8aec>
   287a0:	ldr	w8, [x23, #4]
   287a4:	cbnz	w8, 287b4 <get_python_format_unnamed_arg_count@@Base+0x8aec>
   287a8:	mov	x0, x21
   287ac:	bl	29cb8 <get_python_format_unnamed_arg_count@@Base+0x9ff0>
   287b0:	mov	x21, x0
   287b4:	mov	x0, x20
   287b8:	bl	2802c <get_python_format_unnamed_arg_count@@Base+0x8364>
   287bc:	mov	x0, x24
   287c0:	bl	2802c <get_python_format_unnamed_arg_count@@Base+0x8364>
   287c4:	cbz	x21, 287d8 <get_python_format_unnamed_arg_count@@Base+0x8b10>
   287c8:	mov	x0, x21
   287cc:	bl	29548 <get_python_format_unnamed_arg_count@@Base+0x9880>
   287d0:	mov	x0, x21
   287d4:	bl	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   287d8:	mov	x0, x21
   287dc:	ldp	x20, x19, [sp, #96]
   287e0:	ldp	x22, x21, [sp, #80]
   287e4:	ldp	x24, x23, [sp, #64]
   287e8:	ldp	x26, x25, [sp, #48]
   287ec:	ldp	x28, x27, [sp, #32]
   287f0:	ldp	x29, x30, [sp, #16]
   287f4:	add	sp, sp, #0x70
   287f8:	ret
   287fc:	bl	a7e0 <abort@plt>
   28800:	stp	x29, x30, [sp, #-64]!
   28804:	stp	x20, x19, [sp, #48]
   28808:	mov	x19, x0
   2880c:	stp	x24, x23, [sp, #16]
   28810:	stp	x22, x21, [sp, #32]
   28814:	mov	x29, sp
   28818:	cbz	x0, 28920 <get_python_format_unnamed_arg_count@@Base+0x8c58>
   2881c:	mov	x0, x19
   28820:	mov	w20, w1
   28824:	bl	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   28828:	mov	x21, x19
   2882c:	ldr	w8, [x21, #24]!
   28830:	cbnz	w8, 28840 <get_python_format_unnamed_arg_count@@Base+0x8b78>
   28834:	ldr	w8, [x19, #16]
   28838:	cmp	w8, w20
   2883c:	b.ls	28920 <get_python_format_unnamed_arg_count@@Base+0x8c58>  // b.plast
   28840:	mov	x0, x19
   28844:	mov	w1, w20
   28848:	bl	29380 <get_python_format_unnamed_arg_count@@Base+0x96b8>
   2884c:	ldr	w8, [x19]
   28850:	mov	w20, w0
   28854:	cmp	w0, w8
   28858:	b.cs	288bc <get_python_format_unnamed_arg_count@@Base+0x8bf4>  // b.hs, b.nlast
   2885c:	ldr	x9, [x19, #8]
   28860:	mov	w23, w20
   28864:	lsl	x10, x23, #1
   28868:	add	x10, x10, w20, uxtw
   2886c:	add	x9, x9, x10, lsl #3
   28870:	ldr	w22, [x9, #4]
   28874:	lsl	x24, x10, #3
   28878:	ldr	x9, [x19, #8]
   2887c:	ldr	w11, [x19, #16]
   28880:	add	x9, x9, x24
   28884:	ldr	w10, [x9]
   28888:	sub	w10, w11, w10
   2888c:	str	w10, [x19, #16]
   28890:	ldr	w10, [x9, #8]
   28894:	cmp	w10, #0x8
   28898:	b.ne	288a8 <get_python_format_unnamed_arg_count@@Base+0x8be0>  // b.any
   2889c:	ldr	x0, [x9, #16]
   288a0:	bl	2802c <get_python_format_unnamed_arg_count@@Base+0x8364>
   288a4:	ldr	w8, [x19]
   288a8:	add	x23, x23, #0x1
   288ac:	cmp	x23, w8, uxtw
   288b0:	add	x24, x24, #0x18
   288b4:	b.cc	28878 <get_python_format_unnamed_arg_count@@Base+0x8bb0>  // b.lo, b.ul, b.last
   288b8:	b	288c4 <get_python_format_unnamed_arg_count@@Base+0x8bfc>
   288bc:	ldr	x8, [x19, #32]
   288c0:	ldr	w22, [x8, #4]
   288c4:	ldr	w8, [x19, #24]
   288c8:	ldr	x0, [x19, #32]
   288cc:	str	w20, [x19]
   288d0:	cbz	w8, 2890c <get_python_format_unnamed_arg_count@@Base+0x8c44>
   288d4:	mov	x20, xzr
   288d8:	mov	x23, xzr
   288dc:	add	x9, x0, x20
   288e0:	ldr	w10, [x9, #8]
   288e4:	cmp	w10, #0x8
   288e8:	b.ne	288fc <get_python_format_unnamed_arg_count@@Base+0x8c34>  // b.any
   288ec:	ldr	x0, [x9, #16]
   288f0:	bl	2802c <get_python_format_unnamed_arg_count@@Base+0x8364>
   288f4:	ldr	w8, [x19, #24]
   288f8:	ldr	x0, [x19, #32]
   288fc:	add	x23, x23, #0x1
   28900:	cmp	x23, w8, uxtw
   28904:	add	x20, x20, #0x18
   28908:	b.cc	288dc <get_python_format_unnamed_arg_count@@Base+0x8c14>  // b.lo, b.ul, b.last
   2890c:	cbz	x0, 28914 <get_python_format_unnamed_arg_count@@Base+0x8c4c>
   28910:	bl	aa00 <free@plt>
   28914:	stp	xzr, xzr, [x21]
   28918:	str	wzr, [x21, #16]
   2891c:	cbz	w22, 28938 <get_python_format_unnamed_arg_count@@Base+0x8c70>
   28920:	mov	x0, x19
   28924:	ldp	x20, x19, [sp, #48]
   28928:	ldp	x22, x21, [sp, #32]
   2892c:	ldp	x24, x23, [sp, #16]
   28930:	ldp	x29, x30, [sp], #64
   28934:	ret
   28938:	mov	x0, x19
   2893c:	ldp	x20, x19, [sp, #48]
   28940:	ldp	x22, x21, [sp, #32]
   28944:	ldp	x24, x23, [sp, #16]
   28948:	ldp	x29, x30, [sp], #64
   2894c:	b	29cb8 <get_python_format_unnamed_arg_count@@Base+0x9ff0>
   28950:	stp	x29, x30, [sp, #-48]!
   28954:	stp	x20, x19, [sp, #32]
   28958:	mov	x19, x0
   2895c:	str	x21, [sp, #16]
   28960:	mov	x29, sp
   28964:	cbz	x0, 289f0 <get_python_format_unnamed_arg_count@@Base+0x8d28>
   28968:	mov	x0, x19
   2896c:	mov	w20, w1
   28970:	bl	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   28974:	ldr	w8, [x19, #24]
   28978:	cbz	w8, 28998 <get_python_format_unnamed_arg_count@@Base+0x8cd0>
   2897c:	adds	w20, w20, #0x1
   28980:	mov	x0, x19
   28984:	mov	w1, w20
   28988:	cset	w21, cs  // cs = hs, nlast
   2898c:	bl	29380 <get_python_format_unnamed_arg_count@@Base+0x96b8>
   28990:	tbz	w21, #0, 289b4 <get_python_format_unnamed_arg_count@@Base+0x8cec>
   28994:	b	289d8 <get_python_format_unnamed_arg_count@@Base+0x8d10>
   28998:	ldr	w8, [x19, #16]
   2899c:	cmp	w8, w20
   289a0:	b.ls	289e4 <get_python_format_unnamed_arg_count@@Base+0x8d1c>  // b.plast
   289a4:	add	w20, w20, #0x1
   289a8:	mov	x0, x19
   289ac:	mov	w1, w20
   289b0:	bl	29380 <get_python_format_unnamed_arg_count@@Base+0x96b8>
   289b4:	ldr	x9, [x19, #8]
   289b8:	mov	w8, wzr
   289bc:	mov	w10, #0x18                  	// #24
   289c0:	umaddl	x11, w8, w10, x9
   289c4:	ldr	w12, [x11]
   289c8:	add	w8, w8, #0x1
   289cc:	str	wzr, [x11, #4]
   289d0:	subs	w20, w20, w12
   289d4:	b.ne	289c0 <get_python_format_unnamed_arg_count@@Base+0x8cf8>  // b.any
   289d8:	mov	x0, x19
   289dc:	bl	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   289e0:	b	289f0 <get_python_format_unnamed_arg_count@@Base+0x8d28>
   289e4:	mov	x0, x19
   289e8:	bl	2802c <get_python_format_unnamed_arg_count@@Base+0x8364>
   289ec:	mov	x19, xzr
   289f0:	mov	x0, x19
   289f4:	ldp	x20, x19, [sp, #32]
   289f8:	ldr	x21, [sp, #16]
   289fc:	ldp	x29, x30, [sp], #48
   28a00:	ret
   28a04:	stp	x29, x30, [sp, #-96]!
   28a08:	str	x27, [sp, #16]
   28a0c:	stp	x26, x25, [sp, #32]
   28a10:	stp	x24, x23, [sp, #48]
   28a14:	stp	x22, x21, [sp, #64]
   28a18:	stp	x20, x19, [sp, #80]
   28a1c:	mov	x29, sp
   28a20:	mov	w21, w1
   28a24:	mov	x19, x0
   28a28:	bl	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   28a2c:	ldr	w8, [x19, #16]
   28a30:	cmp	w8, w21
   28a34:	b.hi	28a58 <get_python_format_unnamed_arg_count@@Base+0x8d90>  // b.pmore
   28a38:	ldr	w8, [x19, #24]
   28a3c:	cbz	w8, 28a90 <get_python_format_unnamed_arg_count@@Base+0x8dc8>
   28a40:	add	w1, w21, #0x1
   28a44:	mov	x0, x19
   28a48:	bl	28e9c <get_python_format_unnamed_arg_count@@Base+0x91d4>
   28a4c:	ldr	w8, [x19, #16]
   28a50:	cmp	w8, w21
   28a54:	b.ls	28a90 <get_python_format_unnamed_arg_count@@Base+0x8dc8>  // b.plast
   28a58:	ldr	w8, [x19]
   28a5c:	cbz	w8, 28a90 <get_python_format_unnamed_arg_count@@Base+0x8dc8>
   28a60:	ldr	x22, [x19, #8]
   28a64:	mov	x20, xzr
   28a68:	mov	w23, #0x18                  	// #24
   28a6c:	add	x10, x22, x23
   28a70:	ldur	w9, [x10, #-24]
   28a74:	subs	w9, w21, w9
   28a78:	b.cc	28a94 <get_python_format_unnamed_arg_count@@Base+0x8dcc>  // b.lo, b.ul, b.last
   28a7c:	add	x20, x20, #0x1
   28a80:	cmp	x20, x8
   28a84:	add	x23, x23, #0x18
   28a88:	mov	w21, w9
   28a8c:	b.cc	28a6c <get_python_format_unnamed_arg_count@@Base+0x8da4>  // b.lo, b.ul, b.last
   28a90:	bl	a7e0 <abort@plt>
   28a94:	ldur	w9, [x10, #-24]
   28a98:	subs	w26, w9, #0x1
   28a9c:	b.ls	28c78 <get_python_format_unnamed_arg_count@@Base+0x8fb0>  // b.plast
   28aa0:	cmp	w21, #0x0
   28aa4:	cset	w9, eq  // eq = none
   28aa8:	subs	w25, w26, w21
   28aac:	cset	w11, eq  // eq = none
   28ab0:	ldr	w10, [x19, #4]
   28ab4:	orr	w27, w9, w11
   28ab8:	cmp	w27, #0x0
   28abc:	mov	w9, #0x1                   	// #1
   28ac0:	cinc	w11, w9, eq  // eq = none
   28ac4:	add	w24, w11, w8
   28ac8:	cmp	w10, w24
   28acc:	b.cs	28afc <get_python_format_unnamed_arg_count@@Base+0x8e34>  // b.hs, b.nlast
   28ad0:	bfi	w9, w10, #1, #31
   28ad4:	cmp	w9, w24
   28ad8:	mov	w8, #0x18                  	// #24
   28adc:	csel	w9, w9, w24, hi  // hi = pmore
   28ae0:	umull	x1, w9, w8
   28ae4:	mov	x0, x22
   28ae8:	str	w9, [x19, #4]
   28aec:	bl	a460 <xrealloc@plt>
   28af0:	ldr	w8, [x19]
   28af4:	mov	x22, x0
   28af8:	str	x0, [x19, #8]
   28afc:	sub	w11, w8, #0x1
   28b00:	cmp	w11, w20
   28b04:	tbz	w27, #0, 28b84 <get_python_format_unnamed_arg_count@@Base+0x8ebc>
   28b08:	b.ls	28b44 <get_python_format_unnamed_arg_count@@Base+0x8e7c>  // b.plast
   28b0c:	mov	w9, #0x18                  	// #24
   28b10:	umull	x10, w11, w9
   28b14:	add	x11, x22, x10
   28b18:	ldr	x12, [x11, #16]
   28b1c:	ldr	q0, [x11]
   28b20:	umaddl	x11, w8, w9, x22
   28b24:	sub	x10, x10, #0x18
   28b28:	str	x12, [x11, #16]
   28b2c:	str	q0, [x11]
   28b30:	ldr	x22, [x19, #8]
   28b34:	sub	w11, w8, #0x2
   28b38:	sub	w8, w8, #0x1
   28b3c:	cmp	w11, w20
   28b40:	b.hi	28b14 <get_python_format_unnamed_arg_count@@Base+0x8e4c>  // b.pmore
   28b44:	add	x25, x22, x23
   28b48:	ldur	w9, [x25, #-16]
   28b4c:	ldur	x8, [x25, #-24]
   28b50:	cmp	w9, #0x8
   28b54:	str	x8, [x25]
   28b58:	str	w9, [x25, #8]
   28b5c:	b.ne	28b70 <get_python_format_unnamed_arg_count@@Base+0x8ea8>  // b.any
   28b60:	ldur	x0, [x25, #-8]
   28b64:	bl	280f4 <get_python_format_unnamed_arg_count@@Base+0x842c>
   28b68:	str	x0, [x25, #16]
   28b6c:	ldr	x22, [x19, #8]
   28b70:	add	x8, x22, x23
   28b74:	cbz	w21, 28c50 <get_python_format_unnamed_arg_count@@Base+0x8f88>
   28b78:	stur	w26, [x8, #-24]
   28b7c:	mov	w26, #0x1                   	// #1
   28b80:	b	28c58 <get_python_format_unnamed_arg_count@@Base+0x8f90>
   28b84:	b.ls	28bc4 <get_python_format_unnamed_arg_count@@Base+0x8efc>  // b.plast
   28b88:	add	w10, w8, #0x1
   28b8c:	mov	w8, #0x18                  	// #24
   28b90:	umull	x9, w11, w8
   28b94:	add	x11, x22, x9
   28b98:	ldr	x12, [x11, #16]
   28b9c:	ldr	q0, [x11]
   28ba0:	umaddl	x11, w10, w8, x22
   28ba4:	sub	x9, x9, #0x18
   28ba8:	str	x12, [x11, #16]
   28bac:	str	q0, [x11]
   28bb0:	ldr	x22, [x19, #8]
   28bb4:	sub	w11, w10, #0x3
   28bb8:	sub	w10, w10, #0x1
   28bbc:	cmp	w11, w20
   28bc0:	b.hi	28b94 <get_python_format_unnamed_arg_count@@Base+0x8ecc>  // b.pmore
   28bc4:	add	x8, x22, x23
   28bc8:	ldur	x9, [x8, #-24]
   28bcc:	add	w26, w20, #0x2
   28bd0:	mov	w10, #0x18                  	// #24
   28bd4:	umaddl	x10, w26, w10, x22
   28bd8:	str	x9, [x10]
   28bdc:	ldur	w9, [x8, #-16]
   28be0:	cmp	w9, #0x8
   28be4:	str	w9, [x10, #8]
   28be8:	b.ne	28c04 <get_python_format_unnamed_arg_count@@Base+0x8f3c>  // b.any
   28bec:	ldur	x0, [x8, #-8]
   28bf0:	bl	280f4 <get_python_format_unnamed_arg_count@@Base+0x842c>
   28bf4:	mov	w8, #0x18                  	// #24
   28bf8:	madd	x8, x26, x8, x22
   28bfc:	str	x0, [x8, #16]
   28c00:	ldr	x22, [x19, #8]
   28c04:	add	x27, x22, x23
   28c08:	ldur	w9, [x27, #-16]
   28c0c:	ldur	x8, [x27, #-24]
   28c10:	cmp	w9, #0x8
   28c14:	str	x8, [x27]
   28c18:	str	w9, [x27, #8]
   28c1c:	b.ne	28c30 <get_python_format_unnamed_arg_count@@Base+0x8f68>  // b.any
   28c20:	ldur	x0, [x27, #-8]
   28c24:	bl	280f4 <get_python_format_unnamed_arg_count@@Base+0x842c>
   28c28:	str	x0, [x27, #16]
   28c2c:	ldr	x22, [x19, #8]
   28c30:	add	x8, x22, x23
   28c34:	mov	w9, #0x1                   	// #1
   28c38:	mov	w10, #0x18                  	// #24
   28c3c:	stur	w21, [x8, #-24]
   28c40:	str	w9, [x8]
   28c44:	madd	x8, x26, x10, x22
   28c48:	mov	w26, w25
   28c4c:	b	28c58 <get_python_format_unnamed_arg_count@@Base+0x8f90>
   28c50:	mov	w9, #0x1                   	// #1
   28c54:	stur	w9, [x8, #-24]
   28c58:	cmp	w21, #0x0
   28c5c:	cinc	x20, x20, ne  // ne = any
   28c60:	str	w26, [x8]
   28c64:	and	x8, x20, #0xffffffff
   28c68:	mov	w9, #0x18                  	// #24
   28c6c:	str	w24, [x19]
   28c70:	mul	x8, x8, x9
   28c74:	ldr	w9, [x22, x8]
   28c78:	cmp	w9, #0x1
   28c7c:	b.ne	28a90 <get_python_format_unnamed_arg_count@@Base+0x8dc8>  // b.any
   28c80:	mov	x0, x19
   28c84:	bl	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   28c88:	mov	w0, w20
   28c8c:	ldp	x20, x19, [sp, #80]
   28c90:	ldp	x22, x21, [sp, #64]
   28c94:	ldp	x24, x23, [sp, #48]
   28c98:	ldp	x26, x25, [sp, #32]
   28c9c:	ldr	x27, [sp, #16]
   28ca0:	ldp	x29, x30, [sp], #96
   28ca4:	ret
   28ca8:	stp	x29, x30, [sp, #-32]!
   28cac:	stp	x20, x19, [sp, #16]
   28cb0:	ldr	w8, [x1, #4]
   28cb4:	mov	x20, x2
   28cb8:	mov	x19, x0
   28cbc:	mov	x29, sp
   28cc0:	cbz	w8, 28cd0 <get_python_format_unnamed_arg_count@@Base+0x9008>
   28cc4:	ldr	w8, [x20, #4]
   28cc8:	cmp	w8, #0x0
   28ccc:	cset	w8, ne  // ne = any
   28cd0:	str	w8, [x19, #4]
   28cd4:	ldr	w8, [x1, #8]
   28cd8:	ldr	w9, [x20, #8]
   28cdc:	cbz	w8, 28d18 <get_python_format_unnamed_arg_count@@Base+0x9050>
   28ce0:	cmp	w8, #0x8
   28ce4:	cbz	w9, 28d2c <get_python_format_unnamed_arg_count@@Base+0x9064>
   28ce8:	b.ne	28d44 <get_python_format_unnamed_arg_count@@Base+0x907c>  // b.any
   28cec:	cmp	w9, #0x4
   28cf0:	b.hi	28db0 <get_python_format_unnamed_arg_count@@Base+0x90e8>  // b.pmore
   28cf4:	mov	w10, #0x1                   	// #1
   28cf8:	lsl	w10, w10, w9
   28cfc:	mov	w11, #0x16                  	// #22
   28d00:	tst	w10, w11
   28d04:	b.eq	28db0 <get_python_format_unnamed_arg_count@@Base+0x90e8>  // b.none
   28d08:	mov	w8, #0x8                   	// #8
   28d0c:	str	w8, [x19, #8]
   28d10:	ldr	x0, [x1, #16]
   28d14:	b	28d70 <get_python_format_unnamed_arg_count@@Base+0x90a8>
   28d18:	cmp	w9, #0x8
   28d1c:	str	w9, [x19, #8]
   28d20:	b.ne	28e64 <get_python_format_unnamed_arg_count@@Base+0x919c>  // b.any
   28d24:	ldr	x0, [x20, #16]
   28d28:	b	28d38 <get_python_format_unnamed_arg_count@@Base+0x9070>
   28d2c:	str	w8, [x19, #8]
   28d30:	b.ne	28e64 <get_python_format_unnamed_arg_count@@Base+0x919c>  // b.any
   28d34:	ldr	x0, [x1, #16]
   28d38:	bl	280f4 <get_python_format_unnamed_arg_count@@Base+0x842c>
   28d3c:	str	x0, [x19, #16]
   28d40:	b	28e64 <get_python_format_unnamed_arg_count@@Base+0x919c>
   28d44:	cmp	w9, #0x8
   28d48:	b.ne	28d80 <get_python_format_unnamed_arg_count@@Base+0x90b8>  // b.any
   28d4c:	cmp	w8, #0x4
   28d50:	b.hi	28db0 <get_python_format_unnamed_arg_count@@Base+0x90e8>  // b.pmore
   28d54:	mov	w10, #0x1                   	// #1
   28d58:	lsl	w10, w10, w8
   28d5c:	mov	w11, #0x16                  	// #22
   28d60:	tst	w10, w11
   28d64:	b.eq	28db0 <get_python_format_unnamed_arg_count@@Base+0x90e8>  // b.none
   28d68:	str	w9, [x19, #8]
   28d6c:	ldr	x0, [x20, #16]
   28d70:	bl	29318 <get_python_format_unnamed_arg_count@@Base+0x9650>
   28d74:	str	x0, [x19, #16]
   28d78:	cbnz	x0, 28e64 <get_python_format_unnamed_arg_count@@Base+0x919c>
   28d7c:	b	28e68 <get_python_format_unnamed_arg_count@@Base+0x91a0>
   28d80:	cmp	w8, #0x1
   28d84:	b.ne	28d9c <get_python_format_unnamed_arg_count@@Base+0x90d4>  // b.any
   28d88:	sub	w10, w9, #0x2
   28d8c:	cmp	w10, #0x3
   28d90:	b.hi	28d9c <get_python_format_unnamed_arg_count@@Base+0x90d4>  // b.pmore
   28d94:	str	w9, [x19, #8]
   28d98:	b	28e64 <get_python_format_unnamed_arg_count@@Base+0x919c>
   28d9c:	cmp	w9, #0x1
   28da0:	b.ne	28df4 <get_python_format_unnamed_arg_count@@Base+0x912c>  // b.any
   28da4:	sub	w10, w8, #0x2
   28da8:	cmp	w10, #0x3
   28dac:	b.ls	28e60 <get_python_format_unnamed_arg_count@@Base+0x9198>  // b.plast
   28db0:	cmp	w8, w9
   28db4:	b.ne	28dec <get_python_format_unnamed_arg_count@@Base+0x9124>  // b.any
   28db8:	cmp	w8, #0x8
   28dbc:	str	w8, [x19, #8]
   28dc0:	b.ne	28e64 <get_python_format_unnamed_arg_count@@Base+0x919c>  // b.any
   28dc4:	ldr	x0, [x1, #16]
   28dc8:	bl	280f4 <get_python_format_unnamed_arg_count@@Base+0x842c>
   28dcc:	ldr	x8, [x20, #16]
   28dd0:	mov	x20, x0
   28dd4:	mov	x0, x8
   28dd8:	bl	280f4 <get_python_format_unnamed_arg_count@@Base+0x842c>
   28ddc:	mov	x1, x0
   28de0:	mov	x0, x20
   28de4:	bl	28330 <get_python_format_unnamed_arg_count@@Base+0x8668>
   28de8:	b	28d74 <get_python_format_unnamed_arg_count@@Base+0x90ac>
   28dec:	mov	w0, wzr
   28df0:	b	28e68 <get_python_format_unnamed_arg_count@@Base+0x91a0>
   28df4:	cmp	w8, #0x2
   28df8:	b.ne	28e04 <get_python_format_unnamed_arg_count@@Base+0x913c>  // b.any
   28dfc:	cmp	w9, #0x3
   28e00:	b.eq	28e14 <get_python_format_unnamed_arg_count@@Base+0x914c>  // b.none
   28e04:	cmp	w8, #0x3
   28e08:	b.ne	28e1c <get_python_format_unnamed_arg_count@@Base+0x9154>  // b.any
   28e0c:	cmp	w9, #0x2
   28e10:	b.ne	28e1c <get_python_format_unnamed_arg_count@@Base+0x9154>  // b.any
   28e14:	mov	w8, #0x3                   	// #3
   28e18:	b	28e60 <get_python_format_unnamed_arg_count@@Base+0x9198>
   28e1c:	cmp	w8, #0x4
   28e20:	b.ne	28e2c <get_python_format_unnamed_arg_count@@Base+0x9164>  // b.any
   28e24:	cmp	w9, #0x5
   28e28:	b.eq	28e5c <get_python_format_unnamed_arg_count@@Base+0x9194>  // b.none
   28e2c:	cmp	w8, #0x5
   28e30:	b.ne	28e3c <get_python_format_unnamed_arg_count@@Base+0x9174>  // b.any
   28e34:	cmp	w9, #0x4
   28e38:	b.eq	28e5c <get_python_format_unnamed_arg_count@@Base+0x9194>  // b.none
   28e3c:	cmp	w8, #0x6
   28e40:	b.ne	28e4c <get_python_format_unnamed_arg_count@@Base+0x9184>  // b.any
   28e44:	cmp	w9, #0x5
   28e48:	b.eq	28e5c <get_python_format_unnamed_arg_count@@Base+0x9194>  // b.none
   28e4c:	subs	w10, w8, #0x5
   28e50:	b.ne	28e74 <get_python_format_unnamed_arg_count@@Base+0x91ac>  // b.any
   28e54:	cmp	w9, #0x6
   28e58:	b.ne	28e74 <get_python_format_unnamed_arg_count@@Base+0x91ac>  // b.any
   28e5c:	mov	w8, #0x5                   	// #5
   28e60:	str	w8, [x19, #8]
   28e64:	mov	w0, #0x1                   	// #1
   28e68:	ldp	x20, x19, [sp, #16]
   28e6c:	ldp	x29, x30, [sp], #32
   28e70:	ret
   28e74:	cmp	w8, #0x7
   28e78:	b.ne	28e88 <get_python_format_unnamed_arg_count@@Base+0x91c0>  // b.any
   28e7c:	sub	w11, w9, #0x5
   28e80:	cmp	w11, #0x1
   28e84:	b.ls	28d94 <get_python_format_unnamed_arg_count@@Base+0x90cc>  // b.plast
   28e88:	cmp	w9, #0x7
   28e8c:	b.ne	28db0 <get_python_format_unnamed_arg_count@@Base+0x90e8>  // b.any
   28e90:	cmp	w10, #0x1
   28e94:	b.ls	28e60 <get_python_format_unnamed_arg_count@@Base+0x9198>  // b.plast
   28e98:	b	28db0 <get_python_format_unnamed_arg_count@@Base+0x90e8>
   28e9c:	sub	sp, sp, #0x80
   28ea0:	stp	x29, x30, [sp, #32]
   28ea4:	stp	x28, x27, [sp, #48]
   28ea8:	stp	x26, x25, [sp, #64]
   28eac:	stp	x24, x23, [sp, #80]
   28eb0:	stp	x22, x21, [sp, #96]
   28eb4:	stp	x20, x19, [sp, #112]
   28eb8:	ldr	w9, [x0, #16]
   28ebc:	add	x29, sp, #0x20
   28ec0:	cmp	w9, w1
   28ec4:	b.eq	292f8 <get_python_format_unnamed_arg_count@@Base+0x9630>  // b.none
   28ec8:	ldr	w8, [x0, #24]
   28ecc:	mov	x19, x0
   28ed0:	mov	w23, w1
   28ed4:	cmp	w8, #0x1
   28ed8:	b.ne	28f20 <get_python_format_unnamed_arg_count@@Base+0x9258>  // b.any
   28edc:	ldp	w8, w9, [x19]
   28ee0:	add	w22, w8, #0x1
   28ee4:	cmp	w9, w22
   28ee8:	b.cs	290f8 <get_python_format_unnamed_arg_count@@Base+0x9430>  // b.hs, b.nlast
   28eec:	mov	w8, #0x1                   	// #1
   28ef0:	ldr	x0, [x19, #8]
   28ef4:	bfi	w8, w9, #1, #31
   28ef8:	cmp	w8, w22
   28efc:	mov	w10, #0x18                  	// #24
   28f00:	csel	w8, w8, w22, hi  // hi = pmore
   28f04:	umull	x1, w8, w10
   28f08:	str	w8, [x19, #4]
   28f0c:	bl	a460 <xrealloc@plt>
   28f10:	ldr	w8, [x19]
   28f14:	mov	x21, x0
   28f18:	str	x0, [x19, #8]
   28f1c:	b	290fc <get_python_format_unnamed_arg_count@@Base+0x9434>
   28f20:	str	w23, [sp, #12]
   28f24:	cbz	w8, 28f80 <get_python_format_unnamed_arg_count@@Base+0x92b8>
   28f28:	ldr	w10, [sp, #12]
   28f2c:	ldr	w25, [x19, #40]
   28f30:	mov	x23, xzr
   28f34:	mov	w24, wzr
   28f38:	sub	w27, w10, w9
   28f3c:	ldr	x9, [x19, #32]
   28f40:	udiv	w10, w27, w25
   28f44:	mov	x22, xzr
   28f48:	stur	w10, [x29, #-8]
   28f4c:	msub	w28, w10, w25, w27
   28f50:	mov	w10, #0x18                  	// #24
   28f54:	str	w28, [sp, #4]
   28f58:	mul	x11, x22, x10
   28f5c:	ldr	w11, [x9, x11]
   28f60:	subs	w11, w28, w11
   28f64:	b.cc	28f84 <get_python_format_unnamed_arg_count@@Base+0x92bc>  // b.lo, b.ul, b.last
   28f68:	add	x22, x22, #0x1
   28f6c:	sub	w24, w24, #0x1
   28f70:	cmp	x22, x8
   28f74:	add	x23, x23, #0x18
   28f78:	mov	w28, w11
   28f7c:	b.ne	28f58 <get_python_format_unnamed_arg_count@@Base+0x9290>  // b.any
   28f80:	bl	a7e0 <abort@plt>
   28f84:	cmp	w28, #0x0
   28f88:	cset	w9, ne  // ne = any
   28f8c:	ldur	w10, [x29, #-8]
   28f90:	str	w9, [sp]
   28f94:	ldp	w11, w9, [x19]
   28f98:	madd	w8, w10, w8, w22
   28f9c:	cinc	w8, w8, ne  // ne = any
   28fa0:	add	w8, w8, w11
   28fa4:	cmp	w9, w8
   28fa8:	str	w8, [sp, #8]
   28fac:	b.cs	28fe4 <get_python_format_unnamed_arg_count@@Base+0x931c>  // b.hs, b.nlast
   28fb0:	mov	w8, #0x1                   	// #1
   28fb4:	bfi	w8, w9, #1, #31
   28fb8:	ldr	w9, [sp, #8]
   28fbc:	ldr	x0, [x19, #8]
   28fc0:	mov	w10, #0x18                  	// #24
   28fc4:	mov	w20, w11
   28fc8:	cmp	w8, w9
   28fcc:	csel	w8, w8, w9, hi  // hi = pmore
   28fd0:	umull	x1, w8, w10
   28fd4:	str	w8, [x19, #4]
   28fd8:	bl	a460 <xrealloc@plt>
   28fdc:	mov	w11, w20
   28fe0:	str	x0, [x19, #8]
   28fe4:	cmp	w25, w27
   28fe8:	b.hi	29090 <get_python_format_unnamed_arg_count@@Base+0x93c8>  // b.pmore
   28fec:	ldr	w8, [x19, #24]
   28ff0:	mov	w25, wzr
   28ff4:	mov	w27, #0x18                  	// #24
   28ff8:	stur	w28, [x29, #-12]
   28ffc:	mov	w9, w8
   29000:	str	w24, [sp, #16]
   29004:	cbz	w9, 29080 <get_python_format_unnamed_arg_count@@Base+0x93b8>
   29008:	mov	x26, xzr
   2900c:	mov	x20, xzr
   29010:	mov	w21, w11
   29014:	stur	w11, [x29, #-4]
   29018:	ldr	x9, [x19, #32]
   2901c:	ldr	x28, [x19, #8]
   29020:	add	w24, w21, w20
   29024:	add	x9, x9, x26
   29028:	ldr	x10, [x9]
   2902c:	umaddl	x11, w24, w27, x28
   29030:	str	x10, [x11]
   29034:	ldr	w10, [x9, #8]
   29038:	str	w10, [x11, #8]
   2903c:	ldr	w10, [x9, #8]
   29040:	cmp	w10, #0x8
   29044:	b.ne	2905c <get_python_format_unnamed_arg_count@@Base+0x9394>  // b.any
   29048:	ldr	x0, [x9, #16]
   2904c:	bl	280f4 <get_python_format_unnamed_arg_count@@Base+0x842c>
   29050:	madd	x8, x24, x27, x28
   29054:	str	x0, [x8, #16]
   29058:	ldr	w8, [x19, #24]
   2905c:	add	x20, x20, #0x1
   29060:	cmp	x20, w8, uxtw
   29064:	add	x26, x26, #0x18
   29068:	b.cc	29018 <get_python_format_unnamed_arg_count@@Base+0x9350>  // b.lo, b.ul, b.last
   2906c:	ldur	w11, [x29, #-4]
   29070:	ldur	w28, [x29, #-12]
   29074:	ldr	w24, [sp, #16]
   29078:	mov	w9, w8
   2907c:	add	w11, w11, w20
   29080:	ldur	w10, [x29, #-8]
   29084:	add	w25, w25, #0x1
   29088:	cmp	w25, w10
   2908c:	b.cc	29004 <get_python_format_unnamed_arg_count@@Base+0x933c>  // b.lo, b.ul, b.last
   29090:	cbz	w22, 29160 <get_python_format_unnamed_arg_count@@Base+0x9498>
   29094:	mov	x20, xzr
   29098:	mov	w21, #0x18                  	// #24
   2909c:	ldr	x8, [x19, #32]
   290a0:	ldr	x26, [x19, #8]
   290a4:	mov	w25, w11
   290a8:	add	x8, x8, x20
   290ac:	ldr	x9, [x8]
   290b0:	umaddl	x10, w11, w21, x26
   290b4:	str	x9, [x10]
   290b8:	ldr	w9, [x8, #8]
   290bc:	str	w9, [x10, #8]
   290c0:	ldr	w9, [x8, #8]
   290c4:	cmp	w9, #0x8
   290c8:	b.ne	290dc <get_python_format_unnamed_arg_count@@Base+0x9414>  // b.any
   290cc:	ldr	x0, [x8, #16]
   290d0:	bl	280f4 <get_python_format_unnamed_arg_count@@Base+0x842c>
   290d4:	madd	x8, x25, x21, x26
   290d8:	str	x0, [x8, #16]
   290dc:	add	x20, x20, #0x18
   290e0:	cmp	x23, x20
   290e4:	add	w11, w25, #0x1
   290e8:	b.ne	2909c <get_python_format_unnamed_arg_count@@Base+0x93d4>  // b.any
   290ec:	and	x8, x22, #0xffffffff
   290f0:	cbnz	w28, 29168 <get_python_format_unnamed_arg_count@@Base+0x94a0>
   290f4:	b	291dc <get_python_format_unnamed_arg_count@@Base+0x9514>
   290f8:	ldr	x21, [x19, #8]
   290fc:	ldr	x9, [x19, #32]
   29100:	mov	w11, #0x18                  	// #24
   29104:	umaddl	x11, w8, w11, x21
   29108:	mov	w20, w8
   2910c:	ldr	x10, [x9]
   29110:	str	x10, [x11]
   29114:	ldr	w10, [x9, #8]
   29118:	str	w10, [x11, #8]
   2911c:	ldr	w10, [x9, #8]
   29120:	cmp	w10, #0x8
   29124:	b.ne	29140 <get_python_format_unnamed_arg_count@@Base+0x9478>  // b.any
   29128:	ldr	x0, [x9, #16]
   2912c:	bl	280f4 <get_python_format_unnamed_arg_count@@Base+0x842c>
   29130:	mov	w8, #0x18                  	// #24
   29134:	madd	x8, x20, x8, x21
   29138:	str	x0, [x8, #16]
   2913c:	ldr	x21, [x19, #8]
   29140:	ldr	w8, [x19, #16]
   29144:	mov	w9, #0x18                  	// #24
   29148:	mul	x9, x20, x9
   2914c:	sub	w8, w23, w8
   29150:	str	w8, [x21, x9]
   29154:	str	w22, [x19]
   29158:	str	w23, [x19, #16]
   2915c:	b	292f8 <get_python_format_unnamed_arg_count@@Base+0x9630>
   29160:	mov	x8, xzr
   29164:	cbz	w28, 291dc <get_python_format_unnamed_arg_count@@Base+0x9514>
   29168:	ldr	x9, [x19, #32]
   2916c:	mov	w10, #0x18                  	// #24
   29170:	ldr	x20, [x19, #8]
   29174:	mov	w26, w11
   29178:	madd	x11, x8, x10, x9
   2917c:	ldr	x12, [x11]
   29180:	umaddl	x10, w26, w10, x20
   29184:	mov	w21, w26
   29188:	str	x12, [x10]
   2918c:	ldr	w12, [x11, #8]
   29190:	str	w12, [x10, #8]
   29194:	ldr	w10, [x11, #8]
   29198:	mov	w11, w26
   2919c:	cmp	w10, #0x8
   291a0:	b.ne	291cc <get_python_format_unnamed_arg_count@@Base+0x9504>  // b.any
   291a4:	mov	w25, w24
   291a8:	mov	w24, #0x18                  	// #24
   291ac:	madd	x8, x8, x24, x9
   291b0:	ldr	x0, [x8, #16]
   291b4:	bl	280f4 <get_python_format_unnamed_arg_count@@Base+0x842c>
   291b8:	madd	x8, x21, x24, x20
   291bc:	str	x0, [x8, #16]
   291c0:	ldr	x20, [x19, #8]
   291c4:	mov	w11, w26
   291c8:	mov	w24, w25
   291cc:	mov	w8, #0x18                  	// #24
   291d0:	mul	x8, x21, x8
   291d4:	add	w11, w11, #0x1
   291d8:	str	w28, [x20, x8]
   291dc:	ldr	w8, [sp, #8]
   291e0:	cmp	w8, w11
   291e4:	b.ne	28f80 <get_python_format_unnamed_arg_count@@Base+0x92b8>  // b.any
   291e8:	str	w8, [x19]
   291ec:	ldr	w8, [sp, #12]
   291f0:	str	w8, [x19, #16]
   291f4:	ldr	w8, [sp, #4]
   291f8:	cbz	w8, 292f8 <get_python_format_unnamed_arg_count@@Base+0x9630>
   291fc:	ldr	w25, [x19, #24]
   29200:	ldr	w8, [sp]
   29204:	mov	w9, #0x18                  	// #24
   29208:	add	w8, w25, w8
   2920c:	umull	x0, w8, w9
   29210:	bl	a590 <xmalloc@plt>
   29214:	cmp	w25, w22
   29218:	mov	x20, x0
   2921c:	b.ls	29258 <get_python_format_unnamed_arg_count@@Base+0x9590>  // b.plast
   29220:	sub	w8, w25, w22
   29224:	add	w9, w25, w24
   29228:	mov	x10, x20
   2922c:	ldr	x11, [x19, #32]
   29230:	subs	x9, x9, #0x1
   29234:	add	x11, x11, x23
   29238:	ldr	x12, [x11, #16]
   2923c:	ldr	q0, [x11]
   29240:	add	x23, x23, #0x18
   29244:	str	x12, [x10, #16]
   29248:	str	q0, [x10], #24
   2924c:	b.ne	2922c <get_python_format_unnamed_arg_count@@Base+0x9564>  // b.any
   29250:	cbnz	w22, 29260 <get_python_format_unnamed_arg_count@@Base+0x9598>
   29254:	b	292a0 <get_python_format_unnamed_arg_count@@Base+0x95d8>
   29258:	mov	w8, wzr
   2925c:	cbz	w22, 292a0 <get_python_format_unnamed_arg_count@@Base+0x95d8>
   29260:	mov	x9, xzr
   29264:	mov	x10, xzr
   29268:	mov	w8, w8
   2926c:	mov	w11, #0x18                  	// #24
   29270:	ldr	x12, [x19, #32]
   29274:	add	w13, w8, w10
   29278:	add	x10, x10, #0x1
   2927c:	cmp	x22, x10
   29280:	add	x12, x12, x9
   29284:	ldr	x14, [x12, #16]
   29288:	ldr	q0, [x12]
   2928c:	umaddl	x12, w13, w11, x20
   29290:	add	x9, x9, #0x18
   29294:	str	x14, [x12, #16]
   29298:	str	q0, [x12]
   2929c:	b.ne	29270 <get_python_format_unnamed_arg_count@@Base+0x95a8>  // b.any
   292a0:	cbz	w28, 292ec <get_python_format_unnamed_arg_count@@Base+0x9624>
   292a4:	ldr	x8, [x20]
   292a8:	mov	w9, #0x18                  	// #24
   292ac:	madd	x21, x25, x9, x20
   292b0:	str	x8, [x21]
   292b4:	ldr	w8, [x20, #8]
   292b8:	str	w8, [x21, #8]
   292bc:	ldr	w8, [x20, #8]
   292c0:	cmp	w8, #0x8
   292c4:	b.ne	292dc <get_python_format_unnamed_arg_count@@Base+0x9614>  // b.any
   292c8:	ldr	x0, [x20, #16]
   292cc:	bl	280f4 <get_python_format_unnamed_arg_count@@Base+0x842c>
   292d0:	mov	w8, #0x18                  	// #24
   292d4:	madd	x8, x25, x8, x20
   292d8:	str	x0, [x8, #16]
   292dc:	ldr	w8, [x20]
   292e0:	sub	w8, w8, w28
   292e4:	str	w8, [x20]
   292e8:	str	w28, [x21]
   292ec:	ldr	x0, [x19, #32]
   292f0:	bl	aa00 <free@plt>
   292f4:	str	x20, [x19, #32]
   292f8:	ldp	x20, x19, [sp, #112]
   292fc:	ldp	x22, x21, [sp, #96]
   29300:	ldp	x24, x23, [sp, #80]
   29304:	ldp	x26, x25, [sp, #64]
   29308:	ldp	x28, x27, [sp, #48]
   2930c:	ldp	x29, x30, [sp, #32]
   29310:	add	sp, sp, #0x80
   29314:	ret
   29318:	stp	x29, x30, [sp, #-32]!
   2931c:	ldr	w8, [x0]
   29320:	str	x19, [sp, #16]
   29324:	mov	x29, sp
   29328:	cbz	w8, 29334 <get_python_format_unnamed_arg_count@@Base+0x966c>
   2932c:	ldr	x8, [x0, #8]
   29330:	b	29340 <get_python_format_unnamed_arg_count@@Base+0x9678>
   29334:	ldr	w8, [x0, #24]
   29338:	cbz	w8, 29348 <get_python_format_unnamed_arg_count@@Base+0x9680>
   2933c:	ldr	x8, [x0, #32]
   29340:	ldr	w8, [x8, #4]
   29344:	cbz	w8, 2936c <get_python_format_unnamed_arg_count@@Base+0x96a4>
   29348:	mov	w0, #0x30                  	// #48
   2934c:	bl	a590 <xmalloc@plt>
   29350:	mov	x19, x0
   29354:	stp	xzr, xzr, [x0]
   29358:	str	wzr, [x0, #16]
   2935c:	stp	xzr, xzr, [x0, #24]
   29360:	str	wzr, [x0, #40]
   29364:	bl	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   29368:	b	29370 <get_python_format_unnamed_arg_count@@Base+0x96a8>
   2936c:	mov	x19, xzr
   29370:	mov	x0, x19
   29374:	ldr	x19, [sp, #16]
   29378:	ldp	x29, x30, [sp], #32
   2937c:	ret
   29380:	stp	x29, x30, [sp, #-80]!
   29384:	stp	x26, x25, [sp, #16]
   29388:	stp	x24, x23, [sp, #32]
   2938c:	stp	x22, x21, [sp, #48]
   29390:	stp	x20, x19, [sp, #64]
   29394:	mov	x29, sp
   29398:	mov	w20, w1
   2939c:	mov	x19, x0
   293a0:	bl	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   293a4:	ldr	w8, [x19, #16]
   293a8:	cmp	w8, w20
   293ac:	b.cs	293d0 <get_python_format_unnamed_arg_count@@Base+0x9708>  // b.hs, b.nlast
   293b0:	ldr	w8, [x19, #24]
   293b4:	cbz	w8, 29544 <get_python_format_unnamed_arg_count@@Base+0x987c>
   293b8:	mov	x0, x19
   293bc:	mov	w1, w20
   293c0:	bl	28e9c <get_python_format_unnamed_arg_count@@Base+0x91d4>
   293c4:	ldr	w8, [x19, #16]
   293c8:	cmp	w8, w20
   293cc:	b.cc	29544 <get_python_format_unnamed_arg_count@@Base+0x987c>  // b.lo, b.ul, b.last
   293d0:	ldr	w8, [x19]
   293d4:	cbz	w8, 2940c <get_python_format_unnamed_arg_count@@Base+0x9744>
   293d8:	ldr	x9, [x19, #8]
   293dc:	mov	x21, xzr
   293e0:	ldr	w10, [x9]
   293e4:	subs	w10, w20, w10
   293e8:	b.cc	29420 <get_python_format_unnamed_arg_count@@Base+0x9758>  // b.lo, b.ul, b.last
   293ec:	add	x21, x21, #0x1
   293f0:	cmp	x21, x8
   293f4:	add	x9, x9, #0x18
   293f8:	mov	w20, w10
   293fc:	b.cc	293e0 <get_python_format_unnamed_arg_count@@Base+0x9718>  // b.lo, b.ul, b.last
   29400:	mov	w9, wzr
   29404:	mov	w20, w10
   29408:	b	29424 <get_python_format_unnamed_arg_count@@Base+0x975c>
   2940c:	mov	w21, wzr
   29410:	mov	w9, wzr
   29414:	mov	w23, #0x1                   	// #1
   29418:	cbnz	w20, 2942c <get_python_format_unnamed_arg_count@@Base+0x9764>
   2941c:	b	29528 <get_python_format_unnamed_arg_count@@Base+0x9860>
   29420:	mov	w9, #0x1                   	// #1
   29424:	add	w23, w8, #0x1
   29428:	cbz	w20, 29528 <get_python_format_unnamed_arg_count@@Base+0x9860>
   2942c:	tbz	w9, #0, 29544 <get_python_format_unnamed_arg_count@@Base+0x987c>
   29430:	ldr	x22, [x19, #8]
   29434:	mov	w9, #0x18                  	// #24
   29438:	ldr	w10, [x19, #4]
   2943c:	umull	x11, w21, w9
   29440:	ldr	w24, [x22, x11]
   29444:	mov	w25, w21
   29448:	cmp	w10, w23
   2944c:	b.cs	2947c <get_python_format_unnamed_arg_count@@Base+0x97b4>  // b.hs, b.nlast
   29450:	mov	w8, #0x1                   	// #1
   29454:	bfi	w8, w10, #1, #31
   29458:	cmp	w8, w23
   2945c:	csel	w8, w8, w23, hi  // hi = pmore
   29460:	umull	x1, w8, w9
   29464:	mov	x0, x22
   29468:	str	w8, [x19, #4]
   2946c:	bl	a460 <xrealloc@plt>
   29470:	ldr	w8, [x19]
   29474:	mov	x22, x0
   29478:	str	x0, [x19, #8]
   2947c:	sub	w10, w8, #0x1
   29480:	cmp	w10, w21
   29484:	b.ls	294c0 <get_python_format_unnamed_arg_count@@Base+0x97f8>  // b.plast
   29488:	mov	w9, #0x18                  	// #24
   2948c:	umull	x10, w10, w9
   29490:	add	x11, x22, x10
   29494:	ldr	x12, [x11, #16]
   29498:	ldr	q0, [x11]
   2949c:	umaddl	x11, w8, w9, x22
   294a0:	sub	x10, x10, #0x18
   294a4:	str	x12, [x11, #16]
   294a8:	str	q0, [x11]
   294ac:	ldr	x22, [x19, #8]
   294b0:	sub	w11, w8, #0x2
   294b4:	sub	w8, w8, #0x1
   294b8:	cmp	w11, w21
   294bc:	b.hi	29490 <get_python_format_unnamed_arg_count@@Base+0x97c8>  // b.pmore
   294c0:	mov	w8, #0x18                  	// #24
   294c4:	madd	x9, x25, x8, x22
   294c8:	ldr	x10, [x9]
   294cc:	add	w21, w21, #0x1
   294d0:	umaddl	x8, w21, w8, x22
   294d4:	str	x10, [x8]
   294d8:	ldr	w9, [x9, #8]
   294dc:	cmp	w9, #0x8
   294e0:	str	w9, [x8, #8]
   294e4:	b.ne	29504 <get_python_format_unnamed_arg_count@@Base+0x983c>  // b.any
   294e8:	mov	w26, #0x18                  	// #24
   294ec:	madd	x8, x25, x26, x22
   294f0:	ldr	x0, [x8, #16]
   294f4:	bl	280f4 <get_python_format_unnamed_arg_count@@Base+0x842c>
   294f8:	madd	x8, x21, x26, x22
   294fc:	str	x0, [x8, #16]
   29500:	ldr	x22, [x19, #8]
   29504:	mov	w8, #0x18                  	// #24
   29508:	sub	w9, w24, w20
   2950c:	mul	x10, x25, x8
   29510:	mul	x8, x21, x8
   29514:	mov	x0, x19
   29518:	str	w20, [x22, x10]
   2951c:	str	w9, [x22, x8]
   29520:	str	w23, [x19]
   29524:	bl	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   29528:	mov	w0, w21
   2952c:	ldp	x20, x19, [sp, #64]
   29530:	ldp	x22, x21, [sp, #48]
   29534:	ldp	x24, x23, [sp, #32]
   29538:	ldp	x26, x25, [sp, #16]
   2953c:	ldp	x29, x30, [sp], #80
   29540:	ret
   29544:	bl	a7e0 <abort@plt>
   29548:	stp	x29, x30, [sp, #-80]!
   2954c:	stp	x24, x23, [sp, #32]
   29550:	stp	x22, x21, [sp, #48]
   29554:	stp	x20, x19, [sp, #64]
   29558:	ldr	w21, [x0]
   2955c:	mov	x19, x0
   29560:	str	x25, [sp, #16]
   29564:	mov	x29, sp
   29568:	cbz	w21, 29610 <get_python_format_unnamed_arg_count@@Base+0x9948>
   2956c:	mov	x22, xzr
   29570:	mov	w20, wzr
   29574:	mov	w23, #0x8                   	// #8
   29578:	mov	w24, #0x18                  	// #24
   2957c:	cbz	w20, 295d0 <get_python_format_unnamed_arg_count@@Base+0x9908>
   29580:	ldr	x8, [x19, #8]
   29584:	sub	w25, w20, #0x1
   29588:	add	x9, x8, x23
   2958c:	sub	x0, x9, #0x8
   29590:	umaddl	x1, w25, w24, x8
   29594:	bl	29a64 <get_python_format_unnamed_arg_count@@Base+0x9d9c>
   29598:	tbz	w0, #0, 295d0 <get_python_format_unnamed_arg_count@@Base+0x9908>
   2959c:	ldr	x9, [x19, #8]
   295a0:	mul	x10, x25, x24
   295a4:	add	x8, x9, x23
   295a8:	ldur	w11, [x8, #-8]
   295ac:	ldr	w12, [x9, x10]
   295b0:	add	w11, w12, w11
   295b4:	str	w11, [x9, x10]
   295b8:	ldr	w9, [x8]
   295bc:	cmp	w9, #0x8
   295c0:	b.ne	295fc <get_python_format_unnamed_arg_count@@Base+0x9934>  // b.any
   295c4:	ldr	x0, [x8, #8]
   295c8:	bl	2802c <get_python_format_unnamed_arg_count@@Base+0x8364>
   295cc:	b	295fc <get_python_format_unnamed_arg_count@@Base+0x9934>
   295d0:	cmp	x22, w20, uxtw
   295d4:	b.ls	295f8 <get_python_format_unnamed_arg_count@@Base+0x9930>  // b.plast
   295d8:	ldr	x8, [x19, #8]
   295dc:	add	x9, x8, x23
   295e0:	ldr	x10, [x9, #8]
   295e4:	ldur	q0, [x9, #-8]
   295e8:	mov	w9, w20
   295ec:	madd	x8, x9, x24, x8
   295f0:	str	x10, [x8, #16]
   295f4:	str	q0, [x8]
   295f8:	add	w20, w20, #0x1
   295fc:	add	x22, x22, #0x1
   29600:	cmp	x21, x22
   29604:	add	x23, x23, #0x18
   29608:	b.ne	2957c <get_python_format_unnamed_arg_count@@Base+0x98b4>  // b.any
   2960c:	b	29614 <get_python_format_unnamed_arg_count@@Base+0x994c>
   29610:	mov	w20, wzr
   29614:	ldr	w21, [x19, #24]
   29618:	str	w20, [x19]
   2961c:	cbz	w21, 296fc <get_python_format_unnamed_arg_count@@Base+0x9a34>
   29620:	mov	x22, xzr
   29624:	mov	w20, wzr
   29628:	mov	w23, #0x8                   	// #8
   2962c:	mov	w24, #0x18                  	// #24
   29630:	cbz	w20, 29684 <get_python_format_unnamed_arg_count@@Base+0x99bc>
   29634:	ldr	x8, [x19, #32]
   29638:	sub	w25, w20, #0x1
   2963c:	add	x9, x8, x23
   29640:	sub	x0, x9, #0x8
   29644:	umaddl	x1, w25, w24, x8
   29648:	bl	29a64 <get_python_format_unnamed_arg_count@@Base+0x9d9c>
   2964c:	tbz	w0, #0, 29684 <get_python_format_unnamed_arg_count@@Base+0x99bc>
   29650:	ldr	x9, [x19, #32]
   29654:	mul	x10, x25, x24
   29658:	add	x8, x9, x23
   2965c:	ldur	w11, [x8, #-8]
   29660:	ldr	w12, [x9, x10]
   29664:	add	w11, w12, w11
   29668:	str	w11, [x9, x10]
   2966c:	ldr	w9, [x8]
   29670:	cmp	w9, #0x8
   29674:	b.ne	296b0 <get_python_format_unnamed_arg_count@@Base+0x99e8>  // b.any
   29678:	ldr	x0, [x8, #8]
   2967c:	bl	2802c <get_python_format_unnamed_arg_count@@Base+0x8364>
   29680:	b	296b0 <get_python_format_unnamed_arg_count@@Base+0x99e8>
   29684:	cmp	x22, w20, uxtw
   29688:	b.ls	296ac <get_python_format_unnamed_arg_count@@Base+0x99e4>  // b.plast
   2968c:	ldr	x8, [x19, #32]
   29690:	add	x9, x8, x23
   29694:	ldr	x10, [x9, #8]
   29698:	ldur	q0, [x9, #-8]
   2969c:	mov	w9, w20
   296a0:	madd	x8, x9, x24, x8
   296a4:	str	x10, [x8, #16]
   296a8:	str	q0, [x8]
   296ac:	add	w20, w20, #0x1
   296b0:	add	x22, x22, #0x1
   296b4:	cmp	x21, x22
   296b8:	add	x23, x23, #0x18
   296bc:	b.ne	29630 <get_python_format_unnamed_arg_count@@Base+0x9968>  // b.any
   296c0:	str	w20, [x19, #24]
   296c4:	cbz	w20, 29700 <get_python_format_unnamed_arg_count@@Base+0x9a38>
   296c8:	subs	w22, w20, #0x1
   296cc:	b.eq	29794 <get_python_format_unnamed_arg_count@@Base+0x9acc>  // b.none
   296d0:	ldr	x0, [x19, #32]
   296d4:	mov	w8, #0x18                  	// #24
   296d8:	umaddl	x1, w22, w8, x0
   296dc:	bl	29a64 <get_python_format_unnamed_arg_count@@Base+0x9d9c>
   296e0:	tbz	w0, #0, 29718 <get_python_format_unnamed_arg_count@@Base+0x9a50>
   296e4:	ldr	x8, [x19, #32]
   296e8:	mov	w9, #0x18                  	// #24
   296ec:	mul	x9, x22, x9
   296f0:	mov	w20, w22
   296f4:	ldr	w21, [x8, x9]
   296f8:	b	2971c <get_python_format_unnamed_arg_count@@Base+0x9a54>
   296fc:	str	wzr, [x19, #24]
   29700:	ldp	x20, x19, [sp, #64]
   29704:	ldp	x22, x21, [sp, #48]
   29708:	ldp	x24, x23, [sp, #32]
   2970c:	ldr	x25, [sp, #16]
   29710:	ldp	x29, x30, [sp], #80
   29714:	ret
   29718:	mov	w21, wzr
   2971c:	cmp	w20, #0x4
   29720:	b.cc	29794 <get_python_format_unnamed_arg_count@@Base+0x9acc>  // b.lo, b.ul, b.last
   29724:	sub	w8, w20, #0x2
   29728:	mov	w22, #0x18                  	// #24
   2972c:	mov	w23, w8
   29730:	tbnz	w20, #0, 29784 <get_python_format_unnamed_arg_count@@Base+0x9abc>
   29734:	mov	x24, xzr
   29738:	mov	x25, xzr
   2973c:	ldr	x8, [x19, #32]
   29740:	add	w9, w25, #0x2
   29744:	cmp	x25, #0x0
   29748:	add	x0, x8, x24
   2974c:	ldr	w10, [x0]
   29750:	umaddl	x1, w9, w22, x8
   29754:	ldr	w8, [x1]
   29758:	csel	w9, w21, wzr, eq  // eq = none
   2975c:	add	w9, w10, w9
   29760:	cmp	w9, w8
   29764:	b.ne	29784 <get_python_format_unnamed_arg_count@@Base+0x9abc>  // b.any
   29768:	bl	29a64 <get_python_format_unnamed_arg_count@@Base+0x9d9c>
   2976c:	tbz	w0, #0, 29784 <get_python_format_unnamed_arg_count@@Base+0x9abc>
   29770:	add	x25, x25, #0x1
   29774:	cmp	x23, x25
   29778:	add	x24, x24, #0x18
   2977c:	b.ne	2973c <get_python_format_unnamed_arg_count@@Base+0x9a74>  // b.any
   29780:	b	2979c <get_python_format_unnamed_arg_count@@Base+0x9ad4>
   29784:	add	w20, w20, #0x1
   29788:	cmp	w20, #0x3
   2978c:	add	w8, w23, #0x1
   29790:	b.hi	2972c <get_python_format_unnamed_arg_count@@Base+0x9a64>  // b.pmore
   29794:	ldr	w9, [x19, #24]
   29798:	b	29820 <get_python_format_unnamed_arg_count@@Base+0x9b58>
   2979c:	cmp	w20, #0x3
   297a0:	b.cc	297d8 <get_python_format_unnamed_arg_count@@Base+0x9b10>  // b.lo, b.ul, b.last
   297a4:	mov	w8, w20
   297a8:	mov	x21, xzr
   297ac:	sub	x22, x8, #0x2
   297b0:	ldr	x8, [x19, #32]
   297b4:	add	x8, x8, x21
   297b8:	ldr	w9, [x8, #56]
   297bc:	cmp	w9, #0x8
   297c0:	b.ne	297cc <get_python_format_unnamed_arg_count@@Base+0x9b04>  // b.any
   297c4:	ldr	x0, [x8, #64]
   297c8:	bl	2802c <get_python_format_unnamed_arg_count@@Base+0x8364>
   297cc:	subs	x22, x22, #0x1
   297d0:	add	x21, x21, #0x18
   297d4:	b.ne	297b0 <get_python_format_unnamed_arg_count@@Base+0x9ae8>  // b.any
   297d8:	ldr	w9, [x19, #24]
   297dc:	lsr	w8, w20, #1
   297e0:	cmp	w20, w9
   297e4:	b.cs	29808 <get_python_format_unnamed_arg_count@@Base+0x9b40>  // b.hs, b.nlast
   297e8:	ldr	x9, [x19, #32]
   297ec:	mov	w10, #0x18                  	// #24
   297f0:	umaddl	x10, w20, w10, x9
   297f4:	ldr	x11, [x10, #16]
   297f8:	ldr	q0, [x10]
   297fc:	str	x11, [x9, #64]
   29800:	str	q0, [x9, #48]
   29804:	ldr	w9, [x19, #24]
   29808:	ldr	w10, [x19, #40]
   2980c:	sub	w9, w9, w20
   29810:	add	w9, w9, #0x2
   29814:	str	w9, [x19, #24]
   29818:	udiv	w8, w10, w8
   2981c:	str	w8, [x19, #40]
   29820:	ldr	w8, [x19]
   29824:	subs	w9, w9, #0x1
   29828:	b.ne	29874 <get_python_format_unnamed_arg_count@@Base+0x9bac>  // b.any
   2982c:	cbz	w8, 29700 <get_python_format_unnamed_arg_count@@Base+0x9a38>
   29830:	ldr	x9, [x19, #8]
   29834:	ldr	x1, [x19, #32]
   29838:	sub	w8, w8, #0x1
   2983c:	mov	w20, #0x18                  	// #24
   29840:	umaddl	x0, w8, w20, x9
   29844:	bl	29a64 <get_python_format_unnamed_arg_count@@Base+0x9d9c>
   29848:	tbz	w0, #0, 29700 <get_python_format_unnamed_arg_count@@Base+0x9a38>
   2984c:	ldr	w8, [x19]
   29850:	ldr	x9, [x19, #8]
   29854:	ldr	w10, [x19, #16]
   29858:	sub	w8, w8, #0x1
   2985c:	umull	x11, w8, w20
   29860:	ldr	w9, [x9, x11]
   29864:	str	w8, [x19]
   29868:	sub	w9, w10, w9
   2986c:	str	w9, [x19, #16]
   29870:	b	29700 <get_python_format_unnamed_arg_count@@Base+0x9a38>
   29874:	cbz	w8, 29700 <get_python_format_unnamed_arg_count@@Base+0x9a38>
   29878:	ldr	x10, [x19, #8]
   2987c:	ldr	x11, [x19, #32]
   29880:	sub	w8, w8, #0x1
   29884:	mov	w20, #0x18                  	// #24
   29888:	umaddl	x0, w8, w20, x10
   2988c:	umaddl	x1, w9, w20, x11
   29890:	bl	29a64 <get_python_format_unnamed_arg_count@@Base+0x9d9c>
   29894:	tbz	w0, #0, 29700 <get_python_format_unnamed_arg_count@@Base+0x9a38>
   29898:	ldr	w8, [x19]
   2989c:	ldr	w9, [x19, #24]
   298a0:	ldr	x0, [x19, #32]
   298a4:	ldr	x10, [x19, #8]
   298a8:	sub	w8, w8, #0x1
   298ac:	sub	w9, w9, #0x1
   298b0:	umull	x8, w8, w20
   298b4:	umaddl	x1, w9, w20, x0
   298b8:	ldr	w8, [x10, x8]
   298bc:	ldr	w9, [x1]
   298c0:	cmp	w8, w9
   298c4:	csel	w21, w8, w9, cc  // cc = lo, ul, last
   298c8:	bl	29a64 <get_python_format_unnamed_arg_count@@Base+0x9d9c>
   298cc:	tbz	w0, #0, 298e4 <get_python_format_unnamed_arg_count@@Base+0x9c1c>
   298d0:	ldr	x24, [x19, #32]
   298d4:	ldr	w8, [x24]
   298d8:	add	w8, w8, w21
   298dc:	str	w8, [x24]
   298e0:	b	299a4 <get_python_format_unnamed_arg_count@@Base+0x9cdc>
   298e4:	ldp	w22, w8, [x19, #24]
   298e8:	add	w23, w22, #0x1
   298ec:	cmp	w8, w23
   298f0:	b.cs	29918 <get_python_format_unnamed_arg_count@@Base+0x9c50>  // b.hs, b.nlast
   298f4:	mov	w9, #0x1                   	// #1
   298f8:	ldr	x0, [x19, #32]
   298fc:	bfi	w9, w8, #1, #31
   29900:	cmp	w9, w23
   29904:	csel	w8, w9, w23, hi  // hi = pmore
   29908:	umull	x1, w8, w20
   2990c:	str	w8, [x19, #28]
   29910:	bl	a460 <xrealloc@plt>
   29914:	str	x0, [x19, #32]
   29918:	cbz	w22, 29960 <get_python_format_unnamed_arg_count@@Base+0x9c98>
   2991c:	add	x8, x22, x22, lsl #1
   29920:	sub	w9, w22, #0x1
   29924:	lsl	x8, x8, #3
   29928:	umull	x9, w9, w20
   2992c:	mov	w10, w22
   29930:	ldr	x11, [x19, #32]
   29934:	sub	w10, w10, #0x1
   29938:	add	x12, x11, x9
   2993c:	ldr	x13, [x12, #16]
   29940:	ldr	q0, [x12]
   29944:	add	x11, x11, x8
   29948:	sub	x8, x8, #0x18
   2994c:	sub	x9, x9, #0x18
   29950:	str	x13, [x11, #16]
   29954:	str	q0, [x11]
   29958:	cbnz	w10, 29930 <get_python_format_unnamed_arg_count@@Base+0x9c68>
   2995c:	b	29964 <get_python_format_unnamed_arg_count@@Base+0x9c9c>
   29960:	mov	x22, xzr
   29964:	ldr	x24, [x19, #32]
   29968:	str	w23, [x19, #24]
   2996c:	madd	x8, x22, x20, x24
   29970:	ldr	x9, [x8]
   29974:	str	x9, [x24]
   29978:	ldr	w9, [x8, #8]
   2997c:	str	w9, [x24, #8]
   29980:	ldr	w8, [x8, #8]
   29984:	cmp	w8, #0x8
   29988:	b.ne	299a0 <get_python_format_unnamed_arg_count@@Base+0x9cd8>  // b.any
   2998c:	madd	x8, x22, x20, x24
   29990:	ldr	x0, [x8, #16]
   29994:	bl	280f4 <get_python_format_unnamed_arg_count@@Base+0x842c>
   29998:	str	x0, [x24, #16]
   2999c:	ldr	x24, [x19, #32]
   299a0:	str	w21, [x24]
   299a4:	ldr	w8, [x19, #24]
   299a8:	sub	w8, w8, #0x1
   299ac:	umull	x9, w8, w20
   299b0:	ldr	w10, [x24, x9]
   299b4:	subs	w10, w10, w21
   299b8:	str	w10, [x24, x9]
   299bc:	b.ne	299e8 <get_python_format_unnamed_arg_count@@Base+0x9d20>  // b.any
   299c0:	madd	x9, x8, x20, x24
   299c4:	ldr	w9, [x9, #8]
   299c8:	cmp	w9, #0x8
   299cc:	b.ne	299e4 <get_python_format_unnamed_arg_count@@Base+0x9d1c>  // b.any
   299d0:	madd	x8, x8, x20, x24
   299d4:	ldr	x0, [x8, #16]
   299d8:	bl	2802c <get_python_format_unnamed_arg_count@@Base+0x8364>
   299dc:	ldr	w8, [x19, #24]
   299e0:	sub	w8, w8, #0x1
   299e4:	str	w8, [x19, #24]
   299e8:	ldr	w9, [x19]
   299ec:	ldr	x10, [x19, #8]
   299f0:	sub	w8, w9, #0x1
   299f4:	umull	x11, w8, w20
   299f8:	ldr	w12, [x10, x11]
   299fc:	subs	w12, w12, w21
   29a00:	str	w12, [x10, x11]
   29a04:	b.ne	29a34 <get_python_format_unnamed_arg_count@@Base+0x9d6c>  // b.any
   29a08:	madd	x9, x8, x20, x10
   29a0c:	ldr	w9, [x9, #8]
   29a10:	cmp	w9, #0x8
   29a14:	b.ne	29a2c <get_python_format_unnamed_arg_count@@Base+0x9d64>  // b.any
   29a18:	madd	x8, x8, x20, x10
   29a1c:	ldr	x0, [x8, #16]
   29a20:	bl	2802c <get_python_format_unnamed_arg_count@@Base+0x8364>
   29a24:	ldr	w8, [x19]
   29a28:	sub	w8, w8, #0x1
   29a2c:	mov	w9, w8
   29a30:	str	w8, [x19]
   29a34:	ldr	w8, [x19, #16]
   29a38:	sub	w8, w8, w21
   29a3c:	str	w8, [x19, #16]
   29a40:	cbz	w9, 29700 <get_python_format_unnamed_arg_count@@Base+0x9a38>
   29a44:	ldr	x8, [x19, #8]
   29a48:	ldr	w10, [x19, #24]
   29a4c:	ldr	x11, [x19, #32]
   29a50:	sub	w9, w9, #0x1
   29a54:	umaddl	x0, w9, w20, x8
   29a58:	sub	w8, w10, #0x1
   29a5c:	umaddl	x1, w8, w20, x11
   29a60:	b	29890 <get_python_format_unnamed_arg_count@@Base+0x9bc8>
   29a64:	ldr	w8, [x0, #4]
   29a68:	ldr	w9, [x1, #4]
   29a6c:	cmp	w8, w9
   29a70:	b.ne	29a98 <get_python_format_unnamed_arg_count@@Base+0x9dd0>  // b.any
   29a74:	ldr	w8, [x0, #8]
   29a78:	ldr	w9, [x1, #8]
   29a7c:	cmp	w8, w9
   29a80:	b.ne	29a98 <get_python_format_unnamed_arg_count@@Base+0x9dd0>  // b.any
   29a84:	cmp	w8, #0x8
   29a88:	b.ne	29aa0 <get_python_format_unnamed_arg_count@@Base+0x9dd8>  // b.any
   29a8c:	ldr	x0, [x0, #16]
   29a90:	ldr	x1, [x1, #16]
   29a94:	b	29aa8 <get_python_format_unnamed_arg_count@@Base+0x9de0>
   29a98:	mov	w0, wzr
   29a9c:	ret
   29aa0:	mov	w0, #0x1                   	// #1
   29aa4:	ret
   29aa8:	stp	x29, x30, [sp, #-48]!
   29aac:	stp	x22, x21, [sp, #16]
   29ab0:	stp	x20, x19, [sp, #32]
   29ab4:	mov	x29, sp
   29ab8:	mov	x19, x1
   29abc:	mov	x20, x0
   29ac0:	bl	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   29ac4:	mov	x0, x19
   29ac8:	bl	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   29acc:	ldr	w8, [x20]
   29ad0:	ldr	w9, [x19]
   29ad4:	cmp	w8, w9
   29ad8:	b.ne	29b7c <get_python_format_unnamed_arg_count@@Base+0x9eb4>  // b.any
   29adc:	cbz	w8, 29b20 <get_python_format_unnamed_arg_count@@Base+0x9e58>
   29ae0:	add	x8, x8, x8, lsl #1
   29ae4:	mov	x21, xzr
   29ae8:	lsl	x22, x8, #3
   29aec:	ldr	x8, [x20, #8]
   29af0:	ldr	x9, [x19, #8]
   29af4:	add	x0, x8, x21
   29af8:	add	x1, x9, x21
   29afc:	ldr	w8, [x0]
   29b00:	ldr	w9, [x1]
   29b04:	cmp	w8, w9
   29b08:	b.ne	29b7c <get_python_format_unnamed_arg_count@@Base+0x9eb4>  // b.any
   29b0c:	bl	29a64 <get_python_format_unnamed_arg_count@@Base+0x9d9c>
   29b10:	tbz	w0, #0, 29b7c <get_python_format_unnamed_arg_count@@Base+0x9eb4>
   29b14:	add	x21, x21, #0x18
   29b18:	cmp	x22, x21
   29b1c:	b.ne	29aec <get_python_format_unnamed_arg_count@@Base+0x9e24>  // b.any
   29b20:	ldr	w8, [x20, #24]
   29b24:	ldr	w9, [x19, #24]
   29b28:	cmp	w8, w9
   29b2c:	b.ne	29b7c <get_python_format_unnamed_arg_count@@Base+0x9eb4>  // b.any
   29b30:	cbz	w8, 29b74 <get_python_format_unnamed_arg_count@@Base+0x9eac>
   29b34:	add	x8, x8, x8, lsl #1
   29b38:	mov	x21, xzr
   29b3c:	lsl	x22, x8, #3
   29b40:	ldr	x8, [x20, #32]
   29b44:	ldr	x9, [x19, #32]
   29b48:	add	x0, x8, x21
   29b4c:	add	x1, x9, x21
   29b50:	ldr	w8, [x0]
   29b54:	ldr	w9, [x1]
   29b58:	cmp	w8, w9
   29b5c:	b.ne	29b7c <get_python_format_unnamed_arg_count@@Base+0x9eb4>  // b.any
   29b60:	bl	29a64 <get_python_format_unnamed_arg_count@@Base+0x9d9c>
   29b64:	tbz	w0, #0, 29b7c <get_python_format_unnamed_arg_count@@Base+0x9eb4>
   29b68:	add	x21, x21, #0x18
   29b6c:	cmp	x22, x21
   29b70:	b.ne	29b40 <get_python_format_unnamed_arg_count@@Base+0x9e78>  // b.any
   29b74:	mov	w0, #0x1                   	// #1
   29b78:	b	29b80 <get_python_format_unnamed_arg_count@@Base+0x9eb8>
   29b7c:	mov	w0, wzr
   29b80:	ldp	x20, x19, [sp, #32]
   29b84:	ldp	x22, x21, [sp, #16]
   29b88:	ldp	x29, x30, [sp], #48
   29b8c:	ret
   29b90:	cmp	w1, #0x2
   29b94:	b.cc	29cb4 <get_python_format_unnamed_arg_count@@Base+0x9fec>  // b.lo, b.ul, b.last
   29b98:	sub	sp, sp, #0x70
   29b9c:	stp	x29, x30, [sp, #16]
   29ba0:	stp	x28, x27, [sp, #32]
   29ba4:	stp	x26, x25, [sp, #48]
   29ba8:	stp	x24, x23, [sp, #64]
   29bac:	stp	x22, x21, [sp, #80]
   29bb0:	stp	x20, x19, [sp, #96]
   29bb4:	ldp	w9, w8, [x0, #24]
   29bb8:	mov	w19, w1
   29bbc:	mov	x20, x0
   29bc0:	add	x29, sp, #0x10
   29bc4:	mul	w21, w9, w1
   29bc8:	cmp	w8, w21
   29bcc:	b.cs	29bf8 <get_python_format_unnamed_arg_count@@Base+0x9f30>  // b.hs, b.nlast
   29bd0:	mov	w9, #0x1                   	// #1
   29bd4:	ldr	x0, [x20, #32]
   29bd8:	bfi	w9, w8, #1, #31
   29bdc:	cmp	w9, w21
   29be0:	mov	w10, #0x18                  	// #24
   29be4:	csel	w8, w9, w21, hi  // hi = pmore
   29be8:	umull	x1, w8, w10
   29bec:	str	w8, [x20, #28]
   29bf0:	bl	a460 <xrealloc@plt>
   29bf4:	str	x0, [x20, #32]
   29bf8:	ldr	w8, [x20, #24]
   29bfc:	mov	w22, #0x1                   	// #1
   29c00:	mov	w23, #0x18                  	// #24
   29c04:	stur	w21, [x29, #-4]
   29c08:	mov	w9, w8
   29c0c:	mov	w24, w8
   29c10:	cbz	w9, 29c78 <get_python_format_unnamed_arg_count@@Base+0x9fb0>
   29c14:	mov	x26, xzr
   29c18:	mov	x25, xzr
   29c1c:	mov	w27, w24
   29c20:	ldr	x28, [x20, #32]
   29c24:	add	w21, w27, w25
   29c28:	add	x9, x28, x26
   29c2c:	ldr	x10, [x9]
   29c30:	umaddl	x11, w21, w23, x28
   29c34:	str	x10, [x11]
   29c38:	ldr	w10, [x9, #8]
   29c3c:	str	w10, [x11, #8]
   29c40:	ldr	w10, [x9, #8]
   29c44:	cmp	w10, #0x8
   29c48:	b.ne	29c60 <get_python_format_unnamed_arg_count@@Base+0x9f98>  // b.any
   29c4c:	ldr	x0, [x9, #16]
   29c50:	bl	280f4 <get_python_format_unnamed_arg_count@@Base+0x842c>
   29c54:	madd	x8, x21, x23, x28
   29c58:	str	x0, [x8, #16]
   29c5c:	ldr	w8, [x20, #24]
   29c60:	add	x25, x25, #0x1
   29c64:	cmp	x25, w8, uxtw
   29c68:	add	x26, x26, #0x18
   29c6c:	b.cc	29c20 <get_python_format_unnamed_arg_count@@Base+0x9f58>  // b.lo, b.ul, b.last
   29c70:	add	w24, w24, w25
   29c74:	mov	w9, w8
   29c78:	add	w22, w22, #0x1
   29c7c:	cmp	w22, w19
   29c80:	b.ne	29c10 <get_python_format_unnamed_arg_count@@Base+0x9f48>  // b.any
   29c84:	ldr	w8, [x20, #40]
   29c88:	ldur	w9, [x29, #-4]
   29c8c:	mul	w8, w8, w19
   29c90:	str	w9, [x20, #24]
   29c94:	str	w8, [x20, #40]
   29c98:	ldp	x20, x19, [sp, #96]
   29c9c:	ldp	x22, x21, [sp, #80]
   29ca0:	ldp	x24, x23, [sp, #64]
   29ca4:	ldp	x26, x25, [sp, #48]
   29ca8:	ldp	x28, x27, [sp, #32]
   29cac:	ldp	x29, x30, [sp, #16]
   29cb0:	add	sp, sp, #0x70
   29cb4:	ret
   29cb8:	stp	x29, x30, [sp, #-48]!
   29cbc:	stp	x20, x19, [sp, #32]
   29cc0:	ldr	w8, [x0, #24]
   29cc4:	str	x21, [sp, #16]
   29cc8:	mov	x29, sp
   29ccc:	cbnz	w8, 29db4 <get_python_format_unnamed_arg_count@@Base+0xa0ec>
   29cd0:	ldr	w8, [x0]
   29cd4:	mov	x19, x0
   29cd8:	cbz	w8, 29d34 <get_python_format_unnamed_arg_count@@Base+0xa06c>
   29cdc:	sub	w20, w8, #0x1
   29ce0:	mov	w21, #0x18                  	// #24
   29ce4:	ldr	x8, [x19, #8]
   29ce8:	umaddl	x9, w20, w21, x8
   29cec:	ldr	w10, [x9, #4]
   29cf0:	mov	w9, w20
   29cf4:	cbnz	w10, 29d44 <get_python_format_unnamed_arg_count@@Base+0xa07c>
   29cf8:	madd	x10, x9, x21, x8
   29cfc:	ldr	w11, [x10]
   29d00:	ldr	w12, [x19, #16]
   29d04:	sub	w11, w12, w11
   29d08:	str	w11, [x19, #16]
   29d0c:	ldr	w10, [x10, #8]
   29d10:	cmp	w10, #0x8
   29d14:	b.ne	29d24 <get_python_format_unnamed_arg_count@@Base+0xa05c>  // b.any
   29d18:	madd	x8, x9, x21, x8
   29d1c:	ldr	x0, [x8, #16]
   29d20:	bl	2802c <get_python_format_unnamed_arg_count@@Base+0x8364>
   29d24:	str	w20, [x19]
   29d28:	sub	w20, w20, #0x1
   29d2c:	cmn	w20, #0x1
   29d30:	b.ne	29ce4 <get_python_format_unnamed_arg_count@@Base+0xa01c>  // b.any
   29d34:	mov	x0, x19
   29d38:	bl	2802c <get_python_format_unnamed_arg_count@@Base+0x8364>
   29d3c:	mov	x19, xzr
   29d40:	b	29da0 <get_python_format_unnamed_arg_count@@Base+0xa0d8>
   29d44:	ldr	w10, [x19, #16]
   29d48:	mov	w11, #0x18                  	// #24
   29d4c:	sub	w10, w10, #0x1
   29d50:	str	w10, [x19, #16]
   29d54:	umaddl	x10, w20, w11, x8
   29d58:	ldr	w11, [x10]
   29d5c:	cmp	w11, #0x2
   29d60:	b.cc	29d70 <get_python_format_unnamed_arg_count@@Base+0xa0a8>  // b.lo, b.ul, b.last
   29d64:	sub	w8, w11, #0x1
   29d68:	str	w8, [x10]
   29d6c:	b	29d98 <get_python_format_unnamed_arg_count@@Base+0xa0d0>
   29d70:	mov	w10, #0x18                  	// #24
   29d74:	madd	x10, x9, x10, x8
   29d78:	ldr	w10, [x10, #8]
   29d7c:	cmp	w10, #0x8
   29d80:	b.ne	29d94 <get_python_format_unnamed_arg_count@@Base+0xa0cc>  // b.any
   29d84:	mov	w10, #0x18                  	// #24
   29d88:	madd	x8, x9, x10, x8
   29d8c:	ldr	x0, [x8, #16]
   29d90:	bl	2802c <get_python_format_unnamed_arg_count@@Base+0x8364>
   29d94:	str	w20, [x19]
   29d98:	mov	x0, x19
   29d9c:	bl	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   29da0:	mov	x0, x19
   29da4:	ldp	x20, x19, [sp, #32]
   29da8:	ldr	x21, [sp, #16]
   29dac:	ldp	x29, x30, [sp], #48
   29db0:	ret
   29db4:	bl	a7e0 <abort@plt>
   29db8:	sub	sp, sp, #0x70
   29dbc:	stp	x29, x30, [sp, #16]
   29dc0:	stp	x28, x27, [sp, #32]
   29dc4:	stp	x26, x25, [sp, #48]
   29dc8:	stp	x24, x23, [sp, #64]
   29dcc:	stp	x22, x21, [sp, #80]
   29dd0:	stp	x20, x19, [sp, #96]
   29dd4:	add	x29, sp, #0x10
   29dd8:	mov	x19, x1
   29ddc:	mov	x20, x0
   29de0:	bl	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   29de4:	mov	x0, x19
   29de8:	bl	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   29dec:	ldr	w21, [x20, #40]
   29df0:	ldr	w22, [x19, #40]
   29df4:	cbz	w21, 29e70 <get_python_format_unnamed_arg_count@@Base+0xa1a8>
   29df8:	cbz	w22, 29ea4 <get_python_format_unnamed_arg_count@@Base+0xa1dc>
   29dfc:	mov	x0, x21
   29e00:	mov	x1, x22
   29e04:	bl	ac10 <gcd@plt>
   29e08:	udiv	w1, w22, w0
   29e0c:	udiv	w21, w21, w0
   29e10:	mov	x0, x20
   29e14:	bl	29b90 <get_python_format_unnamed_arg_count@@Base+0x9ec8>
   29e18:	mov	x0, x19
   29e1c:	mov	w1, w21
   29e20:	bl	29b90 <get_python_format_unnamed_arg_count@@Base+0x9ec8>
   29e24:	ldr	w8, [x20, #16]
   29e28:	ldr	w9, [x19, #16]
   29e2c:	mov	x0, x20
   29e30:	cmp	w8, w9
   29e34:	csel	w21, w8, w9, hi  // hi = pmore
   29e38:	mov	w1, w21
   29e3c:	bl	28e9c <get_python_format_unnamed_arg_count@@Base+0x91d4>
   29e40:	mov	x0, x19
   29e44:	mov	w1, w21
   29e48:	bl	28e9c <get_python_format_unnamed_arg_count@@Base+0x91d4>
   29e4c:	ldr	w8, [x20, #16]
   29e50:	ldr	w9, [x19, #16]
   29e54:	cmp	w8, w9
   29e58:	b.ne	2a448 <get_python_format_unnamed_arg_count@@Base+0xa780>  // b.any
   29e5c:	ldr	w8, [x20, #40]
   29e60:	ldr	w9, [x19, #40]
   29e64:	cmp	w8, w9
   29e68:	b.eq	29ed8 <get_python_format_unnamed_arg_count@@Base+0xa210>  // b.none
   29e6c:	b	2a448 <get_python_format_unnamed_arg_count@@Base+0xa780>
   29e70:	cbz	w22, 29ed8 <get_python_format_unnamed_arg_count@@Base+0xa210>
   29e74:	ldr	w1, [x20, #16]
   29e78:	ldr	w8, [x19, #16]
   29e7c:	cmp	w1, w8
   29e80:	b.cc	29ed8 <get_python_format_unnamed_arg_count@@Base+0xa210>  // b.lo, b.ul, b.last
   29e84:	mov	x0, x19
   29e88:	bl	28e9c <get_python_format_unnamed_arg_count@@Base+0x91d4>
   29e8c:	ldr	x8, [x19, #32]
   29e90:	ldr	w8, [x8, #4]
   29e94:	cbnz	w8, 29ed8 <get_python_format_unnamed_arg_count@@Base+0xa210>
   29e98:	ldr	w8, [x19, #16]
   29e9c:	mov	x0, x19
   29ea0:	b	29ed0 <get_python_format_unnamed_arg_count@@Base+0xa208>
   29ea4:	ldr	w1, [x19, #16]
   29ea8:	ldr	w8, [x20, #16]
   29eac:	cmp	w1, w8
   29eb0:	b.cc	29ed8 <get_python_format_unnamed_arg_count@@Base+0xa210>  // b.lo, b.ul, b.last
   29eb4:	mov	x0, x20
   29eb8:	bl	28e9c <get_python_format_unnamed_arg_count@@Base+0x91d4>
   29ebc:	ldr	x8, [x20, #32]
   29ec0:	ldr	w8, [x8, #4]
   29ec4:	cbnz	w8, 29ed8 <get_python_format_unnamed_arg_count@@Base+0xa210>
   29ec8:	ldr	w8, [x20, #16]
   29ecc:	mov	x0, x20
   29ed0:	add	w1, w8, #0x1
   29ed4:	bl	28e9c <get_python_format_unnamed_arg_count@@Base+0x91d4>
   29ed8:	mov	w0, #0x30                  	// #48
   29edc:	bl	a590 <xmalloc@plt>
   29ee0:	mov	x9, x0
   29ee4:	str	xzr, [x9, #24]!
   29ee8:	str	xzr, [x0, #32]
   29eec:	str	wzr, [x0, #40]
   29ef0:	str	x9, [sp, #8]
   29ef4:	str	wzr, [x0, #16]
   29ef8:	stp	xzr, xzr, [x0]
   29efc:	ldr	w26, [x20]
   29f00:	ldr	w27, [x19]
   29f04:	ldr	x22, [x20, #8]
   29f08:	ldr	x23, [x19, #8]
   29f0c:	cmp	w26, #0x0
   29f10:	cset	w9, ne  // ne = any
   29f14:	cmp	w27, #0x0
   29f18:	mov	x21, x0
   29f1c:	mov	w8, wzr
   29f20:	cset	w10, ne  // ne = any
   29f24:	cbz	w27, 2a014 <get_python_format_unnamed_arg_count@@Base+0xa34c>
   29f28:	cbz	w26, 2a014 <get_python_format_unnamed_arg_count@@Base+0xa34c>
   29f2c:	mov	w9, wzr
   29f30:	mov	w8, wzr
   29f34:	mov	w28, #0x18                  	// #24
   29f38:	cmp	w8, w9
   29f3c:	b.cs	29f48 <get_python_format_unnamed_arg_count@@Base+0xa280>  // b.hs, b.nlast
   29f40:	ldr	x0, [x21, #8]
   29f44:	b	29f74 <get_python_format_unnamed_arg_count@@Base+0xa2ac>
   29f48:	mov	w10, #0x1                   	// #1
   29f4c:	add	w11, w8, #0x1
   29f50:	ldr	x0, [x21, #8]
   29f54:	bfi	w10, w9, #1, #31
   29f58:	cmp	w10, w11
   29f5c:	csinc	w8, w10, w8, hi  // hi = pmore
   29f60:	umull	x1, w8, w28
   29f64:	str	w8, [x21, #4]
   29f68:	bl	a460 <xrealloc@plt>
   29f6c:	ldr	w8, [x21]
   29f70:	str	x0, [x21, #8]
   29f74:	ldr	w9, [x22]
   29f78:	ldr	w10, [x23]
   29f7c:	umaddl	x24, w8, w28, x0
   29f80:	mov	x0, x24
   29f84:	mov	x1, x22
   29f88:	cmp	w9, w10
   29f8c:	csel	w8, w9, w10, cc  // cc = lo, ul, last
   29f90:	mov	x2, x23
   29f94:	str	w8, [x24]
   29f98:	bl	2a590 <get_python_format_unnamed_arg_count@@Base+0xa8c8>
   29f9c:	ldr	w8, [x21]
   29fa0:	ldr	w9, [x21, #16]
   29fa4:	add	w8, w8, #0x1
   29fa8:	str	w8, [x21]
   29fac:	ldr	w10, [x24]
   29fb0:	add	w9, w9, w10
   29fb4:	str	w9, [x21, #16]
   29fb8:	ldr	w9, [x22]
   29fbc:	subs	w9, w9, w10
   29fc0:	mov	x10, x22
   29fc4:	str	w9, [x10], #24
   29fc8:	ldr	w9, [x24]
   29fcc:	ldr	w11, [x23]
   29fd0:	csel	x22, x10, x22, eq  // eq = none
   29fd4:	cset	w10, eq  // eq = none
   29fd8:	sub	w26, w26, w10
   29fdc:	mov	x10, x23
   29fe0:	subs	w9, w11, w9
   29fe4:	str	w9, [x10], #24
   29fe8:	cset	w9, eq  // eq = none
   29fec:	csel	x23, x10, x23, eq  // eq = none
   29ff0:	sub	w27, w27, w9
   29ff4:	cmp	w26, #0x0
   29ff8:	cset	w9, ne  // ne = any
   29ffc:	cmp	w27, #0x0
   2a000:	cset	w10, ne  // ne = any
   2a004:	cbz	w27, 2a014 <get_python_format_unnamed_arg_count@@Base+0xa34c>
   2a008:	cbz	w26, 2a014 <get_python_format_unnamed_arg_count@@Base+0xa34c>
   2a00c:	ldr	w9, [x21, #4]
   2a010:	b	29f38 <get_python_format_unnamed_arg_count@@Base+0xa270>
   2a014:	cbz	w9, 2a040 <get_python_format_unnamed_arg_count@@Base+0xa378>
   2a018:	ldr	w9, [x19, #24]
   2a01c:	cbnz	w9, 2a448 <get_python_format_unnamed_arg_count@@Base+0xa780>
   2a020:	ldr	w9, [x22, #4]
   2a024:	cbnz	w9, 2a128 <get_python_format_unnamed_arg_count@@Base+0xa460>
   2a028:	ldr	w9, [x21, #4]
   2a02c:	cmp	w8, w9
   2a030:	b.cs	2a078 <get_python_format_unnamed_arg_count@@Base+0xa3b0>  // b.hs, b.nlast
   2a034:	ldr	x23, [x21, #8]
   2a038:	mov	w9, wzr
   2a03c:	b	2a0b0 <get_python_format_unnamed_arg_count@@Base+0xa3e8>
   2a040:	cbz	w10, 2a06c <get_python_format_unnamed_arg_count@@Base+0xa3a4>
   2a044:	ldr	w9, [x20, #24]
   2a048:	cbnz	w9, 2a448 <get_python_format_unnamed_arg_count@@Base+0xa780>
   2a04c:	ldr	w9, [x23, #4]
   2a050:	cbnz	w9, 2a28c <get_python_format_unnamed_arg_count@@Base+0xa5c4>
   2a054:	ldr	w9, [x21, #4]
   2a058:	cmp	w8, w9
   2a05c:	b.cs	2a1dc <get_python_format_unnamed_arg_count@@Base+0xa514>  // b.hs, b.nlast
   2a060:	ldr	x22, [x21, #8]
   2a064:	mov	w9, wzr
   2a068:	b	2a214 <get_python_format_unnamed_arg_count@@Base+0xa54c>
   2a06c:	mov	w27, wzr
   2a070:	mov	w26, wzr
   2a074:	b	2a33c <get_python_format_unnamed_arg_count@@Base+0xa674>
   2a078:	mov	w10, #0x1                   	// #1
   2a07c:	add	w11, w8, #0x1
   2a080:	ldr	x0, [x21, #8]
   2a084:	bfi	w10, w9, #1, #31
   2a088:	cmp	w10, w11
   2a08c:	mov	w12, #0x18                  	// #24
   2a090:	csinc	w8, w10, w8, hi  // hi = pmore
   2a094:	umull	x1, w8, w12
   2a098:	str	w8, [x21, #4]
   2a09c:	bl	a460 <xrealloc@plt>
   2a0a0:	str	x0, [x21, #8]
   2a0a4:	ldr	w8, [x21]
   2a0a8:	ldr	w9, [x22, #4]
   2a0ac:	mov	x23, x0
   2a0b0:	ldr	w10, [x22]
   2a0b4:	mov	w11, #0x18                  	// #24
   2a0b8:	umaddl	x24, w8, w11, x23
   2a0bc:	stp	w10, w9, [x24]
   2a0c0:	ldr	w9, [x22, #8]
   2a0c4:	str	w9, [x24, #8]
   2a0c8:	ldr	w9, [x22, #8]
   2a0cc:	cmp	w9, #0x8
   2a0d0:	b.ne	2a0f0 <get_python_format_unnamed_arg_count@@Base+0xa428>  // b.any
   2a0d4:	ldr	x0, [x22, #16]
   2a0d8:	mov	w28, w8
   2a0dc:	bl	280f4 <get_python_format_unnamed_arg_count@@Base+0x842c>
   2a0e0:	mov	w8, #0x18                  	// #24
   2a0e4:	madd	x8, x28, x8, x23
   2a0e8:	str	x0, [x8, #16]
   2a0ec:	ldr	w8, [x21]
   2a0f0:	movi	v0.2s, #0x1
   2a0f4:	str	d0, [x24]
   2a0f8:	ldr	w9, [x21, #16]
   2a0fc:	add	w8, w8, #0x1
   2a100:	str	w8, [x21]
   2a104:	mov	x10, x22
   2a108:	add	w9, w9, #0x1
   2a10c:	str	w9, [x21, #16]
   2a110:	ldr	w9, [x22]
   2a114:	subs	w9, w9, #0x1
   2a118:	str	w9, [x10], #24
   2a11c:	cset	w9, eq  // eq = none
   2a120:	csel	x22, x10, x22, eq  // eq = none
   2a124:	sub	w26, w26, w9
   2a128:	ldr	w9, [x21, #4]
   2a12c:	add	w8, w8, w26
   2a130:	cmp	w9, w8
   2a134:	b.cs	2a160 <get_python_format_unnamed_arg_count@@Base+0xa498>  // b.hs, b.nlast
   2a138:	mov	w10, #0x1                   	// #1
   2a13c:	ldr	x0, [x21, #8]
   2a140:	bfi	w10, w9, #1, #31
   2a144:	cmp	w10, w8
   2a148:	mov	w11, #0x18                  	// #24
   2a14c:	csel	w8, w10, w8, hi  // hi = pmore
   2a150:	umull	x1, w8, w11
   2a154:	str	w8, [x21, #4]
   2a158:	bl	a460 <xrealloc@plt>
   2a15c:	str	x0, [x21, #8]
   2a160:	cbz	w26, 2a33c <get_python_format_unnamed_arg_count@@Base+0xa674>
   2a164:	ldr	w8, [x21]
   2a168:	add	x22, x22, #0x10
   2a16c:	mov	w23, #0x18                  	// #24
   2a170:	ldr	x28, [x21, #8]
   2a174:	ldur	d0, [x22, #-16]
   2a178:	umaddl	x24, w8, w23, x28
   2a17c:	str	d0, [x24]
   2a180:	ldur	w9, [x22, #-8]
   2a184:	str	w9, [x24, #8]
   2a188:	ldur	w9, [x22, #-8]
   2a18c:	cmp	w9, #0x8
   2a190:	b.ne	2a1b4 <get_python_format_unnamed_arg_count@@Base+0xa4ec>  // b.any
   2a194:	ldr	x0, [x22]
   2a198:	mov	w25, w8
   2a19c:	bl	280f4 <get_python_format_unnamed_arg_count@@Base+0x842c>
   2a1a0:	madd	x8, x25, x23, x28
   2a1a4:	str	x0, [x8, #16]
   2a1a8:	ldr	w8, [x21]
   2a1ac:	ldr	w9, [x24]
   2a1b0:	b	2a1b8 <get_python_format_unnamed_arg_count@@Base+0xa4f0>
   2a1b4:	fmov	w9, s0
   2a1b8:	ldr	w10, [x21, #16]
   2a1bc:	add	w8, w8, #0x1
   2a1c0:	subs	w26, w26, #0x1
   2a1c4:	add	x22, x22, #0x18
   2a1c8:	add	w9, w10, w9
   2a1cc:	str	w8, [x21]
   2a1d0:	str	w9, [x21, #16]
   2a1d4:	b.ne	2a170 <get_python_format_unnamed_arg_count@@Base+0xa4a8>  // b.any
   2a1d8:	b	2a33c <get_python_format_unnamed_arg_count@@Base+0xa674>
   2a1dc:	mov	w10, #0x1                   	// #1
   2a1e0:	add	w11, w8, #0x1
   2a1e4:	ldr	x0, [x21, #8]
   2a1e8:	bfi	w10, w9, #1, #31
   2a1ec:	cmp	w10, w11
   2a1f0:	mov	w12, #0x18                  	// #24
   2a1f4:	csinc	w8, w10, w8, hi  // hi = pmore
   2a1f8:	umull	x1, w8, w12
   2a1fc:	str	w8, [x21, #4]
   2a200:	bl	a460 <xrealloc@plt>
   2a204:	str	x0, [x21, #8]
   2a208:	ldr	w8, [x21]
   2a20c:	ldr	w9, [x23, #4]
   2a210:	mov	x22, x0
   2a214:	ldr	w10, [x23]
   2a218:	mov	w11, #0x18                  	// #24
   2a21c:	umaddl	x24, w8, w11, x22
   2a220:	stp	w10, w9, [x24]
   2a224:	ldr	w9, [x23, #8]
   2a228:	str	w9, [x24, #8]
   2a22c:	ldr	w9, [x23, #8]
   2a230:	cmp	w9, #0x8
   2a234:	b.ne	2a254 <get_python_format_unnamed_arg_count@@Base+0xa58c>  // b.any
   2a238:	ldr	x0, [x23, #16]
   2a23c:	mov	w25, w8
   2a240:	bl	280f4 <get_python_format_unnamed_arg_count@@Base+0x842c>
   2a244:	mov	w8, #0x18                  	// #24
   2a248:	madd	x8, x25, x8, x22
   2a24c:	str	x0, [x8, #16]
   2a250:	ldr	w8, [x21]
   2a254:	movi	v0.2s, #0x1
   2a258:	str	d0, [x24]
   2a25c:	ldr	w9, [x21, #16]
   2a260:	add	w8, w8, #0x1
   2a264:	str	w8, [x21]
   2a268:	mov	x10, x23
   2a26c:	add	w9, w9, #0x1
   2a270:	str	w9, [x21, #16]
   2a274:	ldr	w9, [x23]
   2a278:	subs	w9, w9, #0x1
   2a27c:	str	w9, [x10], #24
   2a280:	cset	w9, eq  // eq = none
   2a284:	csel	x23, x10, x23, eq  // eq = none
   2a288:	sub	w27, w27, w9
   2a28c:	ldr	w9, [x21, #4]
   2a290:	add	w8, w8, w27
   2a294:	cmp	w9, w8
   2a298:	b.cs	2a2c4 <get_python_format_unnamed_arg_count@@Base+0xa5fc>  // b.hs, b.nlast
   2a29c:	mov	w10, #0x1                   	// #1
   2a2a0:	ldr	x0, [x21, #8]
   2a2a4:	bfi	w10, w9, #1, #31
   2a2a8:	cmp	w10, w8
   2a2ac:	mov	w11, #0x18                  	// #24
   2a2b0:	csel	w8, w10, w8, hi  // hi = pmore
   2a2b4:	umull	x1, w8, w11
   2a2b8:	str	w8, [x21, #4]
   2a2bc:	bl	a460 <xrealloc@plt>
   2a2c0:	str	x0, [x21, #8]
   2a2c4:	cbz	w27, 2a33c <get_python_format_unnamed_arg_count@@Base+0xa674>
   2a2c8:	ldr	w8, [x21]
   2a2cc:	add	x22, x23, #0x10
   2a2d0:	mov	w23, #0x18                  	// #24
   2a2d4:	ldr	x28, [x21, #8]
   2a2d8:	ldur	d0, [x22, #-16]
   2a2dc:	umaddl	x24, w8, w23, x28
   2a2e0:	str	d0, [x24]
   2a2e4:	ldur	w9, [x22, #-8]
   2a2e8:	str	w9, [x24, #8]
   2a2ec:	ldur	w9, [x22, #-8]
   2a2f0:	cmp	w9, #0x8
   2a2f4:	b.ne	2a318 <get_python_format_unnamed_arg_count@@Base+0xa650>  // b.any
   2a2f8:	ldr	x0, [x22]
   2a2fc:	mov	w25, w8
   2a300:	bl	280f4 <get_python_format_unnamed_arg_count@@Base+0x842c>
   2a304:	madd	x8, x25, x23, x28
   2a308:	str	x0, [x8, #16]
   2a30c:	ldr	w8, [x21]
   2a310:	ldr	w9, [x24]
   2a314:	b	2a31c <get_python_format_unnamed_arg_count@@Base+0xa654>
   2a318:	fmov	w9, s0
   2a31c:	ldr	w10, [x21, #16]
   2a320:	add	w8, w8, #0x1
   2a324:	subs	w27, w27, #0x1
   2a328:	add	x22, x22, #0x18
   2a32c:	add	w9, w10, w9
   2a330:	str	w8, [x21]
   2a334:	str	w9, [x21, #16]
   2a338:	b.ne	2a2d4 <get_python_format_unnamed_arg_count@@Base+0xa60c>  // b.any
   2a33c:	orr	w8, w26, w27
   2a340:	cbnz	w8, 2a448 <get_python_format_unnamed_arg_count@@Base+0xa780>
   2a344:	ldr	w9, [x20, #40]
   2a348:	ldr	w8, [x19, #40]
   2a34c:	cbz	w9, 2a44c <get_python_format_unnamed_arg_count@@Base+0xa784>
   2a350:	ldr	w26, [x20, #24]
   2a354:	cbz	w8, 2a4c8 <get_python_format_unnamed_arg_count@@Base+0xa800>
   2a358:	ldr	w27, [x19, #24]
   2a35c:	cbz	w26, 2a440 <get_python_format_unnamed_arg_count@@Base+0xa778>
   2a360:	cbz	w27, 2a440 <get_python_format_unnamed_arg_count@@Base+0xa778>
   2a364:	ldr	x8, [sp, #8]
   2a368:	ldr	x22, [x19, #32]
   2a36c:	ldr	x23, [x20, #32]
   2a370:	mov	w25, #0x18                  	// #24
   2a374:	ldr	w8, [x8]
   2a378:	ldr	w9, [x21, #28]
   2a37c:	cmp	w8, w9
   2a380:	b.cs	2a38c <get_python_format_unnamed_arg_count@@Base+0xa6c4>  // b.hs, b.nlast
   2a384:	ldr	x0, [x21, #32]
   2a388:	b	2a3b8 <get_python_format_unnamed_arg_count@@Base+0xa6f0>
   2a38c:	mov	w10, #0x1                   	// #1
   2a390:	add	w11, w8, #0x1
   2a394:	ldr	x0, [x21, #32]
   2a398:	bfi	w10, w9, #1, #31
   2a39c:	cmp	w10, w11
   2a3a0:	csinc	w8, w10, w8, hi  // hi = pmore
   2a3a4:	umull	x1, w8, w25
   2a3a8:	str	w8, [x21, #28]
   2a3ac:	bl	a460 <xrealloc@plt>
   2a3b0:	ldr	w8, [x21, #24]
   2a3b4:	str	x0, [x21, #32]
   2a3b8:	ldr	w9, [x23]
   2a3bc:	ldr	w10, [x22]
   2a3c0:	umaddl	x24, w8, w25, x0
   2a3c4:	mov	x0, x24
   2a3c8:	mov	x1, x23
   2a3cc:	cmp	w9, w10
   2a3d0:	csel	w8, w9, w10, cc  // cc = lo, ul, last
   2a3d4:	mov	x2, x22
   2a3d8:	str	w8, [x24]
   2a3dc:	bl	2a590 <get_python_format_unnamed_arg_count@@Base+0xa8c8>
   2a3e0:	ldr	w8, [x21, #24]
   2a3e4:	ldr	w9, [x21, #40]
   2a3e8:	add	w8, w8, #0x1
   2a3ec:	str	w8, [x21, #24]
   2a3f0:	ldr	w10, [x24]
   2a3f4:	add	w9, w9, w10
   2a3f8:	str	w9, [x21, #40]
   2a3fc:	ldr	w9, [x23]
   2a400:	subs	w9, w9, w10
   2a404:	mov	x10, x23
   2a408:	str	w9, [x10], #24
   2a40c:	ldr	w9, [x24]
   2a410:	ldr	w11, [x22]
   2a414:	csel	x23, x10, x23, eq  // eq = none
   2a418:	cset	w10, eq  // eq = none
   2a41c:	sub	w26, w26, w10
   2a420:	mov	x10, x22
   2a424:	subs	w9, w11, w9
   2a428:	str	w9, [x10], #24
   2a42c:	cset	w9, eq  // eq = none
   2a430:	csel	x22, x10, x22, eq  // eq = none
   2a434:	sub	w27, w27, w9
   2a438:	cbz	w26, 2a440 <get_python_format_unnamed_arg_count@@Base+0xa778>
   2a43c:	cbnz	w27, 2a378 <get_python_format_unnamed_arg_count@@Base+0xa6b0>
   2a440:	orr	w8, w27, w26
   2a444:	cbz	w8, 2a54c <get_python_format_unnamed_arg_count@@Base+0xa884>
   2a448:	bl	a7e0 <abort@plt>
   2a44c:	cbz	w8, 2a54c <get_python_format_unnamed_arg_count@@Base+0xa884>
   2a450:	ldr	w8, [x19, #24]
   2a454:	stp	w8, w8, [x21, #24]
   2a458:	add	x8, x8, x8, lsl #1
   2a45c:	lsl	x0, x8, #3
   2a460:	bl	a590 <xmalloc@plt>
   2a464:	str	x0, [x21, #32]
   2a468:	ldr	w8, [x19, #24]
   2a46c:	cbz	w8, 2a53c <get_python_format_unnamed_arg_count@@Base+0xa874>
   2a470:	mov	x22, xzr
   2a474:	mov	w23, #0x1                   	// #1
   2a478:	ldr	x9, [x19, #32]
   2a47c:	add	x24, x0, x22
   2a480:	add	x9, x9, x22
   2a484:	ldr	x10, [x9]
   2a488:	str	x10, [x24]
   2a48c:	ldr	w10, [x9, #8]
   2a490:	str	w10, [x24, #8]
   2a494:	ldr	w10, [x9, #8]
   2a498:	cmp	w10, #0x8
   2a49c:	b.ne	2a4b0 <get_python_format_unnamed_arg_count@@Base+0xa7e8>  // b.any
   2a4a0:	ldr	x0, [x9, #16]
   2a4a4:	bl	280f4 <get_python_format_unnamed_arg_count@@Base+0x842c>
   2a4a8:	str	x0, [x24, #16]
   2a4ac:	ldr	w8, [x19, #24]
   2a4b0:	cmp	x23, w8, uxtw
   2a4b4:	b.cs	2a53c <get_python_format_unnamed_arg_count@@Base+0xa874>  // b.hs, b.nlast
   2a4b8:	ldr	x0, [x21, #32]
   2a4bc:	add	x22, x22, #0x18
   2a4c0:	add	x23, x23, #0x1
   2a4c4:	b	2a478 <get_python_format_unnamed_arg_count@@Base+0xa7b0>
   2a4c8:	add	x8, x26, x26, lsl #1
   2a4cc:	lsl	x0, x8, #3
   2a4d0:	stp	w26, w26, [x21, #24]
   2a4d4:	bl	a590 <xmalloc@plt>
   2a4d8:	str	x0, [x21, #32]
   2a4dc:	ldr	w8, [x20, #24]
   2a4e0:	cbz	w8, 2a544 <get_python_format_unnamed_arg_count@@Base+0xa87c>
   2a4e4:	mov	x22, xzr
   2a4e8:	mov	w23, #0x1                   	// #1
   2a4ec:	ldr	x9, [x20, #32]
   2a4f0:	add	x24, x0, x22
   2a4f4:	add	x9, x9, x22
   2a4f8:	ldr	x10, [x9]
   2a4fc:	str	x10, [x24]
   2a500:	ldr	w10, [x9, #8]
   2a504:	str	w10, [x24, #8]
   2a508:	ldr	w10, [x9, #8]
   2a50c:	cmp	w10, #0x8
   2a510:	b.ne	2a524 <get_python_format_unnamed_arg_count@@Base+0xa85c>  // b.any
   2a514:	ldr	x0, [x9, #16]
   2a518:	bl	280f4 <get_python_format_unnamed_arg_count@@Base+0x842c>
   2a51c:	str	x0, [x24, #16]
   2a520:	ldr	w8, [x20, #24]
   2a524:	cmp	x23, w8, uxtw
   2a528:	b.cs	2a544 <get_python_format_unnamed_arg_count@@Base+0xa87c>  // b.hs, b.nlast
   2a52c:	ldr	x0, [x21, #32]
   2a530:	add	x22, x22, #0x18
   2a534:	add	x23, x23, #0x1
   2a538:	b	2a4ec <get_python_format_unnamed_arg_count@@Base+0xa824>
   2a53c:	ldr	w8, [x19, #40]
   2a540:	b	2a548 <get_python_format_unnamed_arg_count@@Base+0xa880>
   2a544:	ldr	w8, [x20, #40]
   2a548:	str	w8, [x21, #40]
   2a54c:	mov	x0, x20
   2a550:	bl	2802c <get_python_format_unnamed_arg_count@@Base+0x8364>
   2a554:	mov	x0, x19
   2a558:	bl	2802c <get_python_format_unnamed_arg_count@@Base+0x8364>
   2a55c:	mov	x0, x21
   2a560:	bl	29548 <get_python_format_unnamed_arg_count@@Base+0x9880>
   2a564:	mov	x0, x21
   2a568:	bl	27b3c <get_python_format_unnamed_arg_count@@Base+0x7e74>
   2a56c:	mov	x0, x21
   2a570:	ldp	x20, x19, [sp, #96]
   2a574:	ldp	x22, x21, [sp, #80]
   2a578:	ldp	x24, x23, [sp, #64]
   2a57c:	ldp	x26, x25, [sp, #48]
   2a580:	ldp	x28, x27, [sp, #32]
   2a584:	ldp	x29, x30, [sp, #16]
   2a588:	add	sp, sp, #0x70
   2a58c:	ret
   2a590:	stp	x29, x30, [sp, #-32]!
   2a594:	stp	x20, x19, [sp, #16]
   2a598:	ldr	w8, [x1, #4]
   2a59c:	mov	x20, x2
   2a5a0:	mov	x19, x0
   2a5a4:	mov	x29, sp
   2a5a8:	cbnz	w8, 2a5b4 <get_python_format_unnamed_arg_count@@Base+0xa8ec>
   2a5ac:	ldr	w8, [x20, #4]
   2a5b0:	cbz	w8, 2a5b8 <get_python_format_unnamed_arg_count@@Base+0xa8f0>
   2a5b4:	mov	w8, #0x1                   	// #1
   2a5b8:	str	w8, [x19, #4]
   2a5bc:	ldr	w8, [x1, #8]
   2a5c0:	ldr	w9, [x20, #8]
   2a5c4:	cmp	w8, w9
   2a5c8:	b.ne	2a604 <get_python_format_unnamed_arg_count@@Base+0xa93c>  // b.any
   2a5cc:	cmp	w8, #0x8
   2a5d0:	str	w8, [x19, #8]
   2a5d4:	b.ne	2a6d0 <get_python_format_unnamed_arg_count@@Base+0xaa08>  // b.any
   2a5d8:	ldr	x0, [x1, #16]
   2a5dc:	bl	280f4 <get_python_format_unnamed_arg_count@@Base+0x842c>
   2a5e0:	ldr	x8, [x20, #16]
   2a5e4:	mov	x20, x0
   2a5e8:	mov	x0, x8
   2a5ec:	bl	280f4 <get_python_format_unnamed_arg_count@@Base+0x842c>
   2a5f0:	mov	x1, x0
   2a5f4:	mov	x0, x20
   2a5f8:	bl	29db8 <get_python_format_unnamed_arg_count@@Base+0xa0f0>
   2a5fc:	str	x0, [x19, #16]
   2a600:	b	2a6d0 <get_python_format_unnamed_arg_count@@Base+0xaa08>
   2a604:	subs	w11, w8, #0x1
   2a608:	sub	w10, w9, #0x2
   2a60c:	b.ne	2a618 <get_python_format_unnamed_arg_count@@Base+0xa950>  // b.any
   2a610:	cmp	w10, #0x3
   2a614:	b.ls	2a62c <get_python_format_unnamed_arg_count@@Base+0xa964>  // b.plast
   2a618:	subs	w12, w9, #0x1
   2a61c:	b.ne	2a634 <get_python_format_unnamed_arg_count@@Base+0xa96c>  // b.any
   2a620:	sub	w13, w8, #0x2
   2a624:	cmp	w13, #0x3
   2a628:	b.hi	2a65c <get_python_format_unnamed_arg_count@@Base+0xa994>  // b.pmore
   2a62c:	mov	w8, #0x1                   	// #1
   2a630:	b	2a6cc <get_python_format_unnamed_arg_count@@Base+0xaa04>
   2a634:	cmp	w8, #0x2
   2a638:	b.ne	2a644 <get_python_format_unnamed_arg_count@@Base+0xa97c>  // b.any
   2a63c:	cmp	w9, #0x3
   2a640:	b.eq	2a654 <get_python_format_unnamed_arg_count@@Base+0xa98c>  // b.none
   2a644:	cmp	w8, #0x3
   2a648:	b.ne	2a6a8 <get_python_format_unnamed_arg_count@@Base+0xa9e0>  // b.any
   2a64c:	cmp	w9, #0x2
   2a650:	b.ne	2a6a8 <get_python_format_unnamed_arg_count@@Base+0xa9e0>  // b.any
   2a654:	mov	w8, #0x2                   	// #2
   2a658:	b	2a6cc <get_python_format_unnamed_arg_count@@Base+0xaa04>
   2a65c:	mov	w13, wzr
   2a660:	mov	w14, wzr
   2a664:	cmp	w8, #0x8
   2a668:	b.ne	2a680 <get_python_format_unnamed_arg_count@@Base+0xa9b8>  // b.any
   2a66c:	ldr	x15, [x1, #16]
   2a670:	ldr	w16, [x15]
   2a674:	cbnz	w16, 2a680 <get_python_format_unnamed_arg_count@@Base+0xa9b8>
   2a678:	ldr	w15, [x15, #24]
   2a67c:	cbz	w15, 2a748 <get_python_format_unnamed_arg_count@@Base+0xaa80>
   2a680:	cmp	w9, #0x8
   2a684:	b.ne	2a6dc <get_python_format_unnamed_arg_count@@Base+0xaa14>  // b.any
   2a688:	ldr	x9, [x20, #16]
   2a68c:	ldr	w10, [x9]
   2a690:	cbnz	w10, 2a69c <get_python_format_unnamed_arg_count@@Base+0xa9d4>
   2a694:	ldr	w9, [x9, #24]
   2a698:	cbz	w9, 2a768 <get_python_format_unnamed_arg_count@@Base+0xaaa0>
   2a69c:	add	x8, x19, #0x8
   2a6a0:	str	wzr, [x8]
   2a6a4:	b	2a6d0 <get_python_format_unnamed_arg_count@@Base+0xaa08>
   2a6a8:	cmp	w8, #0x4
   2a6ac:	b.ne	2a6b8 <get_python_format_unnamed_arg_count@@Base+0xa9f0>  // b.any
   2a6b0:	cmp	w9, #0x5
   2a6b4:	b.eq	2a6c8 <get_python_format_unnamed_arg_count@@Base+0xaa00>  // b.none
   2a6b8:	cmp	w8, #0x5
   2a6bc:	b.ne	2a714 <get_python_format_unnamed_arg_count@@Base+0xaa4c>  // b.any
   2a6c0:	cmp	w9, #0x4
   2a6c4:	b.ne	2a714 <get_python_format_unnamed_arg_count@@Base+0xaa4c>  // b.any
   2a6c8:	mov	w8, #0x4                   	// #4
   2a6cc:	str	w8, [x19, #8]
   2a6d0:	ldp	x20, x19, [sp, #16]
   2a6d4:	ldp	x29, x30, [sp], #32
   2a6d8:	ret
   2a6dc:	and	w8, w8, #0xfffffffe
   2a6e0:	cmp	w8, #0x2
   2a6e4:	b.ne	2a6f4 <get_python_format_unnamed_arg_count@@Base+0xaa2c>  // b.any
   2a6e8:	and	w9, w9, #0xfffffffe
   2a6ec:	cmp	w9, #0x4
   2a6f0:	b.eq	2a62c <get_python_format_unnamed_arg_count@@Base+0xa964>  // b.none
   2a6f4:	cmp	w8, #0x4
   2a6f8:	add	x8, x19, #0x8
   2a6fc:	b.ne	2a6a0 <get_python_format_unnamed_arg_count@@Base+0xa9d8>  // b.any
   2a700:	cmp	w10, #0x1
   2a704:	b.hi	2a6a0 <get_python_format_unnamed_arg_count@@Base+0xa9d8>  // b.pmore
   2a708:	mov	w9, #0x1                   	// #1
   2a70c:	str	w9, [x8]
   2a710:	b	2a6d0 <get_python_format_unnamed_arg_count@@Base+0xaa08>
   2a714:	subs	w15, w9, #0x5
   2a718:	cset	w14, eq  // eq = none
   2a71c:	cmp	w8, #0x6
   2a720:	b.ne	2a72c <get_python_format_unnamed_arg_count@@Base+0xaa64>  // b.any
   2a724:	cmp	w9, #0x5
   2a728:	b.eq	2a740 <get_python_format_unnamed_arg_count@@Base+0xaa78>  // b.none
   2a72c:	subs	w16, w8, #0x5
   2a730:	cset	w13, eq  // eq = none
   2a734:	b.ne	2a788 <get_python_format_unnamed_arg_count@@Base+0xaac0>  // b.any
   2a738:	cmp	w9, #0x6
   2a73c:	b.ne	2a788 <get_python_format_unnamed_arg_count@@Base+0xaac0>  // b.any
   2a740:	mov	w8, #0x6                   	// #6
   2a744:	b	2a6cc <get_python_format_unnamed_arg_count@@Base+0xaa04>
   2a748:	cmp	w12, #0x2
   2a74c:	b.cc	2a760 <get_python_format_unnamed_arg_count@@Base+0xaa98>  // b.lo, b.ul, b.last
   2a750:	cmp	w9, #0x3
   2a754:	b.eq	2a654 <get_python_format_unnamed_arg_count@@Base+0xa98c>  // b.none
   2a758:	cmp	w9, #0x4
   2a75c:	b.ne	2a7b0 <get_python_format_unnamed_arg_count@@Base+0xaae8>  // b.any
   2a760:	str	w9, [x19, #8]
   2a764:	b	2a6d0 <get_python_format_unnamed_arg_count@@Base+0xaa08>
   2a768:	cmp	w11, #0x2
   2a76c:	b.cc	2a6cc <get_python_format_unnamed_arg_count@@Base+0xaa04>  // b.lo, b.ul, b.last
   2a770:	cmp	w8, #0x3
   2a774:	b.eq	2a654 <get_python_format_unnamed_arg_count@@Base+0xa98c>  // b.none
   2a778:	cmp	w8, #0x4
   2a77c:	b.eq	2a6cc <get_python_format_unnamed_arg_count@@Base+0xaa04>  // b.none
   2a780:	cbnz	w13, 2a6c8 <get_python_format_unnamed_arg_count@@Base+0xaa00>
   2a784:	b	2a7b4 <get_python_format_unnamed_arg_count@@Base+0xaaec>
   2a788:	cmp	w8, #0x7
   2a78c:	b.ne	2a798 <get_python_format_unnamed_arg_count@@Base+0xaad0>  // b.any
   2a790:	cmp	w15, #0x1
   2a794:	b.ls	2a7a8 <get_python_format_unnamed_arg_count@@Base+0xaae0>  // b.plast
   2a798:	cmp	w9, #0x7
   2a79c:	b.ne	2a664 <get_python_format_unnamed_arg_count@@Base+0xa99c>  // b.any
   2a7a0:	cmp	w16, #0x1
   2a7a4:	b.hi	2a664 <get_python_format_unnamed_arg_count@@Base+0xa99c>  // b.pmore
   2a7a8:	mov	w8, #0x7                   	// #7
   2a7ac:	b	2a6cc <get_python_format_unnamed_arg_count@@Base+0xaa04>
   2a7b0:	cbnz	w14, 2a6c8 <get_python_format_unnamed_arg_count@@Base+0xaa00>
   2a7b4:	str	wzr, [x19, #8]
   2a7b8:	b	2a6d0 <get_python_format_unnamed_arg_count@@Base+0xaa08>
   2a7bc:	sub	sp, sp, #0x70
   2a7c0:	mov	x1, x2
   2a7c4:	add	x2, sp, #0x8
   2a7c8:	stp	x29, x30, [sp, #32]
   2a7cc:	stp	x26, x25, [sp, #48]
   2a7d0:	stp	x24, x23, [sp, #64]
   2a7d4:	stp	x22, x21, [sp, #80]
   2a7d8:	stp	x20, x19, [sp, #96]
   2a7dc:	add	x29, sp, #0x20
   2a7e0:	mov	x19, x3
   2a7e4:	str	xzr, [sp, #8]
   2a7e8:	str	wzr, [sp, #16]
   2a7ec:	str	xzr, [sp, #24]
   2a7f0:	bl	2ab48 <get_python_format_unnamed_arg_count@@Base+0xae80>
   2a7f4:	tbz	w0, #0, 2a908 <get_python_format_unnamed_arg_count@@Base+0xac40>
   2a7f8:	ldr	w21, [sp, #12]
   2a7fc:	cmp	w21, #0x2
   2a800:	b.cc	2a8ec <get_python_format_unnamed_arg_count@@Base+0xac24>  // b.lo, b.ul, b.last
   2a804:	ldr	x20, [sp, #24]
   2a808:	adrp	x3, 2b000 <get_python_format_unnamed_arg_count@@Base+0xb338>
   2a80c:	add	x3, x3, #0x3a0
   2a810:	mov	w2, #0x8                   	// #8
   2a814:	mov	x0, x20
   2a818:	mov	x1, x21
   2a81c:	bl	a2f0 <qsort@plt>
   2a820:	adrp	x22, 39000 <get_search_path@@Base+0x2b4c>
   2a824:	mov	x24, xzr
   2a828:	mov	w8, wzr
   2a82c:	mov	w23, wzr
   2a830:	add	x22, x22, #0x8bd
   2a834:	mov	x25, x20
   2a838:	cbz	w23, 2a890 <get_python_format_unnamed_arg_count@@Base+0xabc8>
   2a83c:	sub	w10, w23, #0x1
   2a840:	lsl	x11, x10, #3
   2a844:	ldr	w9, [x25]
   2a848:	ldr	w11, [x20, x11]
   2a84c:	cmp	w9, w11
   2a850:	b.ne	2a890 <get_python_format_unnamed_arg_count@@Base+0xabc8>  // b.any
   2a854:	add	x26, x20, x10, lsl #3
   2a858:	ldr	w9, [x25, #4]
   2a85c:	ldr	w10, [x26, #4]!
   2a860:	cmp	w9, w10
   2a864:	b.eq	2a8d0 <get_python_format_unnamed_arg_count@@Base+0xac08>  // b.none
   2a868:	cmp	w10, #0x1
   2a86c:	b.eq	2a8d0 <get_python_format_unnamed_arg_count@@Base+0xac08>  // b.none
   2a870:	cmp	w9, #0x1
   2a874:	cset	w9, eq  // eq = none
   2a878:	cset	w11, ne  // ne = any
   2a87c:	orr	w12, w8, w9
   2a880:	csel	w9, w10, wzr, eq  // eq = none
   2a884:	tbz	w12, #0, 2a8ac <get_python_format_unnamed_arg_count@@Base+0xabe4>
   2a888:	orr	w8, w8, w11
   2a88c:	b	2a8d0 <get_python_format_unnamed_arg_count@@Base+0xac08>
   2a890:	cmp	x24, w23, uxtw
   2a894:	b.ls	2a8a4 <get_python_format_unnamed_arg_count@@Base+0xabdc>  // b.plast
   2a898:	ldr	x9, [x25]
   2a89c:	mov	w10, w23
   2a8a0:	str	x9, [x20, x10, lsl #3]
   2a8a4:	add	w23, w23, #0x1
   2a8a8:	b	2a8d4 <get_python_format_unnamed_arg_count@@Base+0xac0c>
   2a8ac:	mov	w2, #0x5                   	// #5
   2a8b0:	mov	x0, xzr
   2a8b4:	mov	x1, x22
   2a8b8:	bl	acd0 <dcgettext@plt>
   2a8bc:	ldr	w1, [x25]
   2a8c0:	bl	aa20 <xasprintf@plt>
   2a8c4:	mov	w9, wzr
   2a8c8:	mov	w8, #0x1                   	// #1
   2a8cc:	str	x0, [x19]
   2a8d0:	str	w9, [x26]
   2a8d4:	add	x24, x24, #0x1
   2a8d8:	cmp	x21, x24
   2a8dc:	add	x25, x25, #0x8
   2a8e0:	b.ne	2a838 <get_python_format_unnamed_arg_count@@Base+0xab70>  // b.any
   2a8e4:	str	w23, [sp, #12]
   2a8e8:	tbnz	w8, #0, 2a90c <get_python_format_unnamed_arg_count@@Base+0xac44>
   2a8ec:	mov	w0, #0x18                  	// #24
   2a8f0:	bl	a590 <xmalloc@plt>
   2a8f4:	ldur	q0, [sp, #8]
   2a8f8:	ldr	x8, [sp, #24]
   2a8fc:	str	q0, [x0]
   2a900:	str	x8, [x0, #16]
   2a904:	b	2a91c <get_python_format_unnamed_arg_count@@Base+0xac54>
   2a908:	ldr	x20, [sp, #24]
   2a90c:	cbz	x20, 2a918 <get_python_format_unnamed_arg_count@@Base+0xac50>
   2a910:	mov	x0, x20
   2a914:	bl	aa00 <free@plt>
   2a918:	mov	x0, xzr
   2a91c:	ldp	x20, x19, [sp, #96]
   2a920:	ldp	x22, x21, [sp, #80]
   2a924:	ldp	x24, x23, [sp, #64]
   2a928:	ldp	x26, x25, [sp, #48]
   2a92c:	ldp	x29, x30, [sp, #32]
   2a930:	add	sp, sp, #0x70
   2a934:	ret
   2a938:	stp	x29, x30, [sp, #-32]!
   2a93c:	str	x19, [sp, #16]
   2a940:	mov	x19, x0
   2a944:	ldr	x0, [x0, #16]
   2a948:	mov	x29, sp
   2a94c:	cbz	x0, 2a954 <get_python_format_unnamed_arg_count@@Base+0xac8c>
   2a950:	bl	aa00 <free@plt>
   2a954:	mov	x0, x19
   2a958:	ldr	x19, [sp, #16]
   2a95c:	ldp	x29, x30, [sp], #32
   2a960:	b	aa00 <free@plt>
   2a964:	ldr	w0, [x0]
   2a968:	ret
   2a96c:	stp	x29, x30, [sp, #-80]!
   2a970:	stp	x24, x23, [sp, #32]
   2a974:	stp	x22, x21, [sp, #48]
   2a978:	stp	x20, x19, [sp, #64]
   2a97c:	ldr	w9, [x0, #4]
   2a980:	ldr	w8, [x1, #4]
   2a984:	str	x25, [sp, #16]
   2a988:	mov	x29, sp
   2a98c:	cmn	w9, w8
   2a990:	b.ne	2a99c <get_python_format_unnamed_arg_count@@Base+0xacd4>  // b.any
   2a994:	mov	w0, wzr
   2a998:	b	2ab30 <get_python_format_unnamed_arg_count@@Base+0xae68>
   2a99c:	mov	x20, x5
   2a9a0:	mov	x21, x4
   2a9a4:	mov	x19, x3
   2a9a8:	mov	x22, x1
   2a9ac:	mov	x23, x0
   2a9b0:	orr	w10, w8, w9
   2a9b4:	cbz	w10, 2aa30 <get_python_format_unnamed_arg_count@@Base+0xad68>
   2a9b8:	cmp	w8, #0x0
   2a9bc:	cset	w11, ne  // ne = any
   2a9c0:	cmp	w9, #0x0
   2a9c4:	mov	x10, xzr
   2a9c8:	mov	x24, xzr
   2a9cc:	mov	w25, wzr
   2a9d0:	cset	w12, ne  // ne = any
   2a9d4:	tbz	w12, #0, 2aa90 <get_python_format_unnamed_arg_count@@Base+0xadc8>
   2a9d8:	tbz	w11, #0, 2aa00 <get_python_format_unnamed_arg_count@@Base+0xad38>
   2a9dc:	ldr	x11, [x23, #16]
   2a9e0:	ldr	x12, [x22, #16]
   2a9e4:	mov	w13, w25
   2a9e8:	lsl	x13, x13, #3
   2a9ec:	ldr	w11, [x11, x10]
   2a9f0:	ldr	w12, [x12, x13]
   2a9f4:	cmp	w11, w12
   2a9f8:	b.hi	2aa90 <get_python_format_unnamed_arg_count@@Base+0xadc8>  // b.pmore
   2a9fc:	b.cs	2aa08 <get_python_format_unnamed_arg_count@@Base+0xad40>  // b.hs, b.nlast
   2aa00:	tbz	w2, #0, 2aa0c <get_python_format_unnamed_arg_count@@Base+0xad44>
   2aa04:	b	2aac8 <get_python_format_unnamed_arg_count@@Base+0xae00>
   2aa08:	add	w25, w25, #0x1
   2aa0c:	add	x24, x24, #0x1
   2aa10:	cmp	x24, x9
   2aa14:	cset	w12, cc  // cc = lo, ul, last
   2aa18:	cmp	w25, w8
   2aa1c:	cset	w11, cc  // cc = lo, ul, last
   2aa20:	add	x10, x10, #0x8
   2aa24:	b.cc	2a9d4 <get_python_format_unnamed_arg_count@@Base+0xad0c>  // b.lo, b.ul, b.last
   2aa28:	cmp	x24, x9
   2aa2c:	b.cc	2a9d4 <get_python_format_unnamed_arg_count@@Base+0xad0c>  // b.lo, b.ul, b.last
   2aa30:	cbz	w8, 2a994 <get_python_format_unnamed_arg_count@@Base+0xaccc>
   2aa34:	ldr	x9, [x23, #16]
   2aa38:	ldr	x10, [x22, #16]
   2aa3c:	mov	w12, wzr
   2aa40:	mov	w11, wzr
   2aa44:	mov	w12, w12
   2aa48:	mov	w23, w11
   2aa4c:	lsl	x13, x12, #3
   2aa50:	lsl	x14, x23, #3
   2aa54:	ldr	w13, [x9, x13]
   2aa58:	ldr	w14, [x10, x14]
   2aa5c:	cmp	w13, w14
   2aa60:	b.ne	2aa80 <get_python_format_unnamed_arg_count@@Base+0xadb8>  // b.any
   2aa64:	add	x13, x9, x12, lsl #3
   2aa68:	add	x14, x10, x23, lsl #3
   2aa6c:	ldr	w13, [x13, #4]
   2aa70:	ldr	w14, [x14, #4]
   2aa74:	cmp	w13, w14
   2aa78:	b.ne	2aafc <get_python_format_unnamed_arg_count@@Base+0xae34>  // b.any
   2aa7c:	add	w11, w11, #0x1
   2aa80:	cmp	w11, w8
   2aa84:	add	w12, w12, #0x1
   2aa88:	b.cc	2aa44 <get_python_format_unnamed_arg_count@@Base+0xad7c>  // b.lo, b.ul, b.last
   2aa8c:	b	2a994 <get_python_format_unnamed_arg_count@@Base+0xaccc>
   2aa90:	cbz	x19, 2ab2c <get_python_format_unnamed_arg_count@@Base+0xae64>
   2aa94:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2aa98:	add	x1, x1, #0x7da
   2aa9c:	mov	w2, #0x5                   	// #5
   2aaa0:	mov	x0, xzr
   2aaa4:	bl	acd0 <dcgettext@plt>
   2aaa8:	ldr	x8, [x22, #16]
   2aaac:	mov	w9, w25
   2aab0:	lsl	x9, x9, #3
   2aab4:	mov	x2, x20
   2aab8:	ldr	w1, [x8, x9]
   2aabc:	mov	x3, x21
   2aac0:	blr	x19
   2aac4:	b	2ab2c <get_python_format_unnamed_arg_count@@Base+0xae64>
   2aac8:	cbz	x19, 2ab2c <get_python_format_unnamed_arg_count@@Base+0xae64>
   2aacc:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2aad0:	add	x1, x1, #0x826
   2aad4:	mov	w2, #0x5                   	// #5
   2aad8:	mov	x0, xzr
   2aadc:	bl	acd0 <dcgettext@plt>
   2aae0:	ldr	x8, [x23, #16]
   2aae4:	and	x9, x24, #0xffffffff
   2aae8:	lsl	x9, x9, #3
   2aaec:	mov	x2, x20
   2aaf0:	ldr	w1, [x8, x9]
   2aaf4:	blr	x19
   2aaf8:	b	2ab2c <get_python_format_unnamed_arg_count@@Base+0xae64>
   2aafc:	cbz	x19, 2ab2c <get_python_format_unnamed_arg_count@@Base+0xae64>
   2ab00:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2ab04:	add	x1, x1, #0x865
   2ab08:	mov	w2, #0x5                   	// #5
   2ab0c:	mov	x0, xzr
   2ab10:	bl	acd0 <dcgettext@plt>
   2ab14:	ldr	x8, [x22, #16]
   2ab18:	lsl	x9, x23, #3
   2ab1c:	mov	x1, x21
   2ab20:	mov	x2, x20
   2ab24:	ldr	w3, [x8, x9]
   2ab28:	blr	x19
   2ab2c:	mov	w0, #0x1                   	// #1
   2ab30:	ldp	x20, x19, [sp, #64]
   2ab34:	ldp	x22, x21, [sp, #48]
   2ab38:	ldp	x24, x23, [sp, #32]
   2ab3c:	ldr	x25, [sp, #16]
   2ab40:	ldp	x29, x30, [sp], #80
   2ab44:	ret
   2ab48:	stp	x29, x30, [sp, #-96]!
   2ab4c:	stp	x28, x27, [sp, #16]
   2ab50:	stp	x26, x25, [sp, #32]
   2ab54:	stp	x24, x23, [sp, #48]
   2ab58:	stp	x22, x21, [sp, #64]
   2ab5c:	stp	x20, x19, [sp, #80]
   2ab60:	mov	x29, sp
   2ab64:	sub	sp, sp, #0x10
   2ab68:	mov	x20, x3
   2ab6c:	mov	x22, x2
   2ab70:	mov	x19, x1
   2ab74:	mov	x21, x0
   2ab78:	mov	w8, wzr
   2ab7c:	mov	w24, #0xa                   	// #10
   2ab80:	mov	x28, x0
   2ab84:	ldrb	w9, [x28]
   2ab88:	cmp	w9, #0x27
   2ab8c:	b.ne	2abb0 <get_python_format_unnamed_arg_count@@Base+0xaee8>  // b.any
   2ab90:	ldrb	w9, [x28, #1]!
   2ab94:	cmp	w9, #0x27
   2ab98:	cset	w10, ne  // ne = any
   2ab9c:	eor	w8, w8, w10
   2aba0:	tbz	w8, #0, 2abb4 <get_python_format_unnamed_arg_count@@Base+0xaeec>
   2aba4:	mov	w8, #0x1                   	// #1
   2aba8:	cbnz	w9, 2abcc <get_python_format_unnamed_arg_count@@Base+0xaf04>
   2abac:	b	2b218 <get_python_format_unnamed_arg_count@@Base+0xb550>
   2abb0:	tbnz	w8, #0, 2aba4 <get_python_format_unnamed_arg_count@@Base+0xaedc>
   2abb4:	cmp	w9, #0x7b
   2abb8:	b.eq	2abd4 <get_python_format_unnamed_arg_count@@Base+0xaf0c>  // b.none
   2abbc:	cmp	w9, #0x7d
   2abc0:	b.eq	2b220 <get_python_format_unnamed_arg_count@@Base+0xb558>  // b.none
   2abc4:	mov	w8, wzr
   2abc8:	cbz	w9, 2b218 <get_python_format_unnamed_arg_count@@Base+0xb550>
   2abcc:	add	x28, x28, #0x1
   2abd0:	b	2ab84 <get_python_format_unnamed_arg_count@@Base+0xaebc>
   2abd4:	cbz	x19, 2abe8 <get_python_format_unnamed_arg_count@@Base+0xaf20>
   2abd8:	sub	x8, x28, x21
   2abdc:	ldrb	w9, [x19, x8]
   2abe0:	orr	w9, w9, #0x1
   2abe4:	strb	w9, [x19, x8]
   2abe8:	ldr	w9, [x22]
   2abec:	add	x25, x28, #0x1
   2abf0:	mov	w8, wzr
   2abf4:	mov	x26, x25
   2abf8:	add	w9, w9, #0x1
   2abfc:	str	w9, [x22]
   2ac00:	ldrb	w9, [x26]
   2ac04:	cmp	w9, #0x7b
   2ac08:	b.eq	2ac1c <get_python_format_unnamed_arg_count@@Base+0xaf54>  // b.none
   2ac0c:	cmp	w9, #0x7d
   2ac10:	b.eq	2ac24 <get_python_format_unnamed_arg_count@@Base+0xaf5c>  // b.none
   2ac14:	cbnz	w9, 2ac2c <get_python_format_unnamed_arg_count@@Base+0xaf64>
   2ac18:	b	2b1dc <get_python_format_unnamed_arg_count@@Base+0xb514>
   2ac1c:	add	w8, w8, #0x1
   2ac20:	b	2ac2c <get_python_format_unnamed_arg_count@@Base+0xaf64>
   2ac24:	cbz	w8, 2ac34 <get_python_format_unnamed_arg_count@@Base+0xaf6c>
   2ac28:	sub	w8, w8, #0x1
   2ac2c:	add	x26, x26, #0x1
   2ac30:	b	2ac00 <get_python_format_unnamed_arg_count@@Base+0xaf38>
   2ac34:	sub	x28, x26, x25
   2ac38:	add	x0, x28, #0x1
   2ac3c:	cmp	x0, #0xfa0
   2ac40:	b.hi	2ac64 <get_python_format_unnamed_arg_count@@Base+0xaf9c>  // b.pmore
   2ac44:	add	x9, x28, #0x2f
   2ac48:	mov	x8, sp
   2ac4c:	and	x9, x9, #0xfffffffffffffff0
   2ac50:	sub	x8, x8, x9
   2ac54:	mov	sp, x8
   2ac58:	add	x8, x8, #0x1f
   2ac5c:	and	x27, x8, #0xffffffffffffffe0
   2ac60:	b	2ac6c <get_python_format_unnamed_arg_count@@Base+0xafa4>
   2ac64:	bl	a910 <xmmalloca@plt>
   2ac68:	mov	x27, x0
   2ac6c:	mov	x0, x27
   2ac70:	mov	x1, x25
   2ac74:	mov	x2, x28
   2ac78:	bl	a040 <memcpy@plt>
   2ac7c:	strb	wzr, [x27, x28]
   2ac80:	ldrb	w8, [x27]
   2ac84:	sub	w9, w8, #0x30
   2ac88:	cmp	w9, #0x9
   2ac8c:	b.hi	2b290 <get_python_format_unnamed_arg_count@@Base+0xb5c8>  // b.pmore
   2ac90:	mov	w23, wzr
   2ac94:	add	x28, x26, #0x1
   2ac98:	stur	x27, [x29, #-8]
   2ac9c:	add	x27, x27, #0x9
   2aca0:	mul	w9, w23, w24
   2aca4:	add	w9, w9, w8, uxtb
   2aca8:	ldurb	w8, [x27, #-8]
   2acac:	sub	w23, w9, #0x30
   2acb0:	add	x27, x27, #0x1
   2acb4:	sub	w9, w8, #0x30
   2acb8:	cmp	w9, #0xa
   2acbc:	b.cc	2aca0 <get_python_format_unnamed_arg_count@@Base+0xafd8>  // b.lo, b.ul, b.last
   2acc0:	cbz	w8, 2ad68 <get_python_format_unnamed_arg_count@@Base+0xb0a0>
   2acc4:	sub	x25, x27, #0x9
   2acc8:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2accc:	mov	w2, #0x5                   	// #5
   2acd0:	mov	x0, x25
   2acd4:	add	x1, x1, #0x5c5
   2acd8:	bl	a4d0 <strncmp@plt>
   2acdc:	cbz	w0, 2ad50 <get_python_format_unnamed_arg_count@@Base+0xb088>
   2ace0:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2ace4:	mov	w2, #0x5                   	// #5
   2ace8:	mov	x0, x25
   2acec:	add	x1, x1, #0x5cb
   2acf0:	bl	a4d0 <strncmp@plt>
   2acf4:	cbz	w0, 2ad50 <get_python_format_unnamed_arg_count@@Base+0xb088>
   2acf8:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2acfc:	mov	w2, #0x7                   	// #7
   2ad00:	mov	x0, x25
   2ad04:	add	x1, x1, #0x60e
   2ad08:	bl	a4d0 <strncmp@plt>
   2ad0c:	cbz	w0, 2ad70 <get_python_format_unnamed_arg_count@@Base+0xb0a8>
   2ad10:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2ad14:	mov	w2, #0x7                   	// #7
   2ad18:	mov	x0, x25
   2ad1c:	add	x1, x1, #0x673
   2ad20:	bl	a4d0 <strncmp@plt>
   2ad24:	cbnz	w0, 2b360 <get_python_format_unnamed_arg_count@@Base+0xb698>
   2ad28:	ldurb	w8, [x27, #-2]
   2ad2c:	cbz	w8, 2b16c <get_python_format_unnamed_arg_count@@Base+0xb4a4>
   2ad30:	cmp	w8, #0x2c
   2ad34:	b.ne	2b2f4 <get_python_format_unnamed_arg_count@@Base+0xb62c>  // b.any
   2ad38:	sub	x0, x27, #0x1
   2ad3c:	mov	x1, x22
   2ad40:	mov	x2, x20
   2ad44:	bl	2b3b8 <get_python_format_unnamed_arg_count@@Base+0xb6f0>
   2ad48:	tbnz	w0, #0, 2b16c <get_python_format_unnamed_arg_count@@Base+0xb4a4>
   2ad4c:	b	2b320 <get_python_format_unnamed_arg_count@@Base+0xb658>
   2ad50:	ldurb	w8, [x27, #-4]
   2ad54:	mov	w25, #0x3                   	// #3
   2ad58:	cbz	w8, 2b170 <get_python_format_unnamed_arg_count@@Base+0xb4a8>
   2ad5c:	cmp	w8, #0x2c
   2ad60:	b.eq	2b170 <get_python_format_unnamed_arg_count@@Base+0xb4a8>  // b.none
   2ad64:	b	2b2cc <get_python_format_unnamed_arg_count@@Base+0xb604>
   2ad68:	mov	w25, #0x1                   	// #1
   2ad6c:	b	2b170 <get_python_format_unnamed_arg_count@@Base+0xb4a8>
   2ad70:	ldurb	w8, [x27, #-2]
   2ad74:	cbz	w8, 2b16c <get_python_format_unnamed_arg_count@@Base+0xb4a4>
   2ad78:	cmp	w8, #0x2c
   2ad7c:	b.ne	2b2f4 <get_python_format_unnamed_arg_count@@Base+0xb62c>  // b.any
   2ad80:	sub	x25, x27, #0x1
   2ad84:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2ad88:	mov	x0, x25
   2ad8c:	add	x1, x1, #0x616
   2ad90:	bl	a8d0 <strcmp@plt>
   2ad94:	cbz	w0, 2b16c <get_python_format_unnamed_arg_count@@Base+0xb4a4>
   2ad98:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2ad9c:	mov	x0, x25
   2ada0:	add	x1, x1, #0x61f
   2ada4:	bl	a8d0 <strcmp@plt>
   2ada8:	cbz	w0, 2b16c <get_python_format_unnamed_arg_count@@Base+0xb4a4>
   2adac:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2adb0:	mov	x0, x25
   2adb4:	add	x1, x1, #0x1df
   2adb8:	bl	a8d0 <strcmp@plt>
   2adbc:	cbz	w0, 2b16c <get_python_format_unnamed_arg_count@@Base+0xb4a4>
   2adc0:	ldurb	w8, [x27, #-1]
   2adc4:	cmp	w8, #0x27
   2adc8:	b.ne	2addc <get_python_format_unnamed_arg_count@@Base+0xb114>  // b.any
   2adcc:	ldrb	w8, [x27]
   2add0:	cmp	w8, #0x27
   2add4:	cset	w10, ne  // ne = any
   2add8:	b	2ade4 <get_python_format_unnamed_arg_count@@Base+0xb11c>
   2addc:	mov	w10, wzr
   2ade0:	mov	x27, x25
   2ade4:	mov	x13, #0x7e0000007e0000      	// #35465847073800192
   2ade8:	mov	w12, #0x1                   	// #1
   2adec:	movk	x13, #0x3ff
   2adf0:	mov	x14, x25
   2adf4:	tst	w8, #0xff
   2adf8:	b.eq	2b2d4 <get_python_format_unnamed_arg_count@@Base+0xb60c>  // b.none
   2adfc:	tbnz	w10, #0, 2ae14 <get_python_format_unnamed_arg_count@@Base+0xb14c>
   2ae00:	and	w9, w8, #0xff
   2ae04:	cmp	w9, #0x30
   2ae08:	b.eq	2af24 <get_python_format_unnamed_arg_count@@Base+0xb25c>  // b.none
   2ae0c:	cmp	w9, #0x23
   2ae10:	b.eq	2aed4 <get_python_format_unnamed_arg_count@@Base+0xb20c>  // b.none
   2ae14:	and	w8, w8, #0xff
   2ae18:	cmp	w8, #0x5c
   2ae1c:	add	x9, x27, #0x1
   2ae20:	b.ne	2aeac <get_python_format_unnamed_arg_count@@Base+0xb1e4>  // b.any
   2ae24:	ldrb	w8, [x9]
   2ae28:	cmp	w8, #0x75
   2ae2c:	b.ne	2aea8 <get_python_format_unnamed_arg_count@@Base+0xb1e0>  // b.any
   2ae30:	ldrb	w8, [x27, #2]
   2ae34:	sub	w8, w8, #0x30
   2ae38:	cmp	w8, #0x36
   2ae3c:	b.hi	2aea8 <get_python_format_unnamed_arg_count@@Base+0xb1e0>  // b.pmore
   2ae40:	lsl	x8, x12, x8
   2ae44:	tst	x8, x13
   2ae48:	b.eq	2aea8 <get_python_format_unnamed_arg_count@@Base+0xb1e0>  // b.none
   2ae4c:	ldrb	w8, [x27, #3]
   2ae50:	sub	w8, w8, #0x30
   2ae54:	cmp	w8, #0x36
   2ae58:	b.hi	2aea8 <get_python_format_unnamed_arg_count@@Base+0xb1e0>  // b.pmore
   2ae5c:	lsl	x8, x12, x8
   2ae60:	tst	x8, x13
   2ae64:	b.eq	2aea8 <get_python_format_unnamed_arg_count@@Base+0xb1e0>  // b.none
   2ae68:	ldrb	w8, [x27, #4]
   2ae6c:	sub	w8, w8, #0x30
   2ae70:	cmp	w8, #0x36
   2ae74:	b.hi	2aea8 <get_python_format_unnamed_arg_count@@Base+0xb1e0>  // b.pmore
   2ae78:	lsl	x8, x12, x8
   2ae7c:	tst	x8, x13
   2ae80:	b.eq	2aea8 <get_python_format_unnamed_arg_count@@Base+0xb1e0>  // b.none
   2ae84:	ldrb	w8, [x27, #5]
   2ae88:	sub	w8, w8, #0x30
   2ae8c:	cmp	w8, #0x36
   2ae90:	b.hi	2aea8 <get_python_format_unnamed_arg_count@@Base+0xb1e0>  // b.pmore
   2ae94:	lsl	x8, x12, x8
   2ae98:	tst	x8, x13
   2ae9c:	b.eq	2aea8 <get_python_format_unnamed_arg_count@@Base+0xb1e0>  // b.none
   2aea0:	add	x9, x27, #0x6
   2aea4:	b	2aeac <get_python_format_unnamed_arg_count@@Base+0xb1e4>
   2aea8:	add	x9, x27, #0x2
   2aeac:	ldrb	w8, [x9]
   2aeb0:	cmp	w8, #0x27
   2aeb4:	b.ne	2aec8 <get_python_format_unnamed_arg_count@@Base+0xb200>  // b.any
   2aeb8:	ldrb	w8, [x9, #1]!
   2aebc:	cmp	w8, #0x27
   2aec0:	cset	w11, ne  // ne = any
   2aec4:	eor	w10, w10, w11
   2aec8:	mov	x27, x9
   2aecc:	cbnz	w8, 2adfc <get_python_format_unnamed_arg_count@@Base+0xb134>
   2aed0:	b	2b2d4 <get_python_format_unnamed_arg_count@@Base+0xb60c>
   2aed4:	mov	x9, x27
   2aed8:	ldrb	w8, [x9, #1]!
   2aedc:	cmp	w8, #0x2c
   2aee0:	b.eq	2aef0 <get_python_format_unnamed_arg_count@@Base+0xb228>  // b.none
   2aee4:	cmp	w8, #0x27
   2aee8:	b.ne	2af00 <get_python_format_unnamed_arg_count@@Base+0xb238>  // b.any
   2aeec:	b	2af10 <get_python_format_unnamed_arg_count@@Base+0xb248>
   2aef0:	mov	x9, x27
   2aef4:	ldrb	w8, [x9, #2]!
   2aef8:	cmp	w8, #0x27
   2aefc:	b.eq	2af18 <get_python_format_unnamed_arg_count@@Base+0xb250>  // b.none
   2af00:	mov	x27, x9
   2af04:	cmp	w8, #0x23
   2af08:	b.eq	2aed4 <get_python_format_unnamed_arg_count@@Base+0xb20c>  // b.none
   2af0c:	b	2af24 <get_python_format_unnamed_arg_count@@Base+0xb25c>
   2af10:	ldrb	w8, [x27, #2]!
   2af14:	b	2af1c <get_python_format_unnamed_arg_count@@Base+0xb254>
   2af18:	ldrb	w8, [x27, #3]!
   2af1c:	cmp	w8, #0x27
   2af20:	b.ne	2afd0 <get_python_format_unnamed_arg_count@@Base+0xb308>  // b.any
   2af24:	and	w9, w8, #0xff
   2af28:	cmp	w9, #0x30
   2af2c:	mov	x10, x27
   2af30:	b.ne	2af80 <get_python_format_unnamed_arg_count@@Base+0xb2b8>  // b.any
   2af34:	mov	x27, x10
   2af38:	ldrb	w8, [x27, #1]!
   2af3c:	cmp	w8, #0x2c
   2af40:	b.eq	2af54 <get_python_format_unnamed_arg_count@@Base+0xb28c>  // b.none
   2af44:	cmp	w8, #0x27
   2af48:	b.ne	2af24 <get_python_format_unnamed_arg_count@@Base+0xb25c>  // b.any
   2af4c:	ldrb	w11, [x10, #2]!
   2af50:	b	2af68 <get_python_format_unnamed_arg_count@@Base+0xb2a0>
   2af54:	mov	x27, x10
   2af58:	ldrb	w8, [x27, #2]!
   2af5c:	cmp	w8, #0x27
   2af60:	b.ne	2af24 <get_python_format_unnamed_arg_count@@Base+0xb25c>  // b.any
   2af64:	ldrb	w11, [x10, #3]!
   2af68:	mov	x27, x10
   2af6c:	cmp	w11, #0x27
   2af70:	b.eq	2af24 <get_python_format_unnamed_arg_count@@Base+0xb25c>  // b.none
   2af74:	mov	w9, #0x1                   	// #1
   2af78:	mov	w8, w11
   2af7c:	b	2b068 <get_python_format_unnamed_arg_count@@Base+0xb3a0>
   2af80:	cmp	w9, #0x2e
   2af84:	b.ne	2b000 <get_python_format_unnamed_arg_count@@Base+0xb338>  // b.any
   2af88:	mov	x9, x10
   2af8c:	ldrb	w8, [x9, #1]!
   2af90:	cmp	w8, #0x27
   2af94:	b.eq	2afc0 <get_python_format_unnamed_arg_count@@Base+0xb2f8>  // b.none
   2af98:	cmp	w8, #0x30
   2af9c:	b.ne	2afd8 <get_python_format_unnamed_arg_count@@Base+0xb310>  // b.any
   2afa0:	add	x27, x10, #0x2
   2afa4:	ldrb	w8, [x27], #1
   2afa8:	cmp	w8, #0x30
   2afac:	b.eq	2afa4 <get_python_format_unnamed_arg_count@@Base+0xb2dc>  // b.none
   2afb0:	cmp	w8, #0x27
   2afb4:	b.eq	2b030 <get_python_format_unnamed_arg_count@@Base+0xb368>  // b.none
   2afb8:	sub	x10, x27, #0x1
   2afbc:	b	2afdc <get_python_format_unnamed_arg_count@@Base+0xb314>
   2afc0:	ldrb	w8, [x10, #2]!
   2afc4:	cmp	w8, #0x27
   2afc8:	mov	x27, x10
   2afcc:	b.eq	2b03c <get_python_format_unnamed_arg_count@@Base+0xb374>  // b.none
   2afd0:	mov	w9, #0x1                   	// #1
   2afd4:	b	2b068 <get_python_format_unnamed_arg_count@@Base+0xb3a0>
   2afd8:	mov	x10, x9
   2afdc:	cmp	w8, #0x23
   2afe0:	b.ne	2b000 <get_python_format_unnamed_arg_count@@Base+0xb338>  // b.any
   2afe4:	add	x27, x10, #0x1
   2afe8:	ldrb	w8, [x27], #1
   2afec:	cmp	w8, #0x23
   2aff0:	b.eq	2afe8 <get_python_format_unnamed_arg_count@@Base+0xb320>  // b.none
   2aff4:	cmp	w8, #0x27
   2aff8:	b.eq	2b030 <get_python_format_unnamed_arg_count@@Base+0xb368>  // b.none
   2affc:	sub	x10, x27, #0x1
   2b000:	and	w9, w8, #0xff
   2b004:	cmp	w9, #0x45
   2b008:	b.ne	2b044 <get_python_format_unnamed_arg_count@@Base+0xb37c>  // b.any
   2b00c:	ldrb	w8, [x10, #1]
   2b010:	cmp	w8, #0x30
   2b014:	b.ne	2b050 <get_python_format_unnamed_arg_count@@Base+0xb388>  // b.any
   2b018:	add	x27, x10, #0x2
   2b01c:	ldrb	w8, [x27], #1
   2b020:	cmp	w8, #0x30
   2b024:	b.eq	2b01c <get_python_format_unnamed_arg_count@@Base+0xb354>  // b.none
   2b028:	cmp	w8, #0x27
   2b02c:	b.ne	2b060 <get_python_format_unnamed_arg_count@@Base+0xb398>  // b.any
   2b030:	ldrb	w8, [x27]
   2b034:	cmp	w8, #0x27
   2b038:	b.ne	2afd0 <get_python_format_unnamed_arg_count@@Base+0xb308>  // b.any
   2b03c:	mov	w9, wzr
   2b040:	b	2b070 <get_python_format_unnamed_arg_count@@Base+0xb3a8>
   2b044:	mov	w9, wzr
   2b048:	mov	x27, x10
   2b04c:	b	2b068 <get_python_format_unnamed_arg_count@@Base+0xb3a0>
   2b050:	mov	w9, wzr
   2b054:	mov	w8, #0x45                  	// #69
   2b058:	mov	x27, x10
   2b05c:	b	2b070 <get_python_format_unnamed_arg_count@@Base+0xb3a8>
   2b060:	mov	w9, wzr
   2b064:	sub	x27, x27, #0x1
   2b068:	tst	w8, #0xff
   2b06c:	b.eq	2b16c <get_python_format_unnamed_arg_count@@Base+0xb4a4>  // b.none
   2b070:	and	w8, w8, #0xff
   2b074:	cmp	w8, #0x3b
   2b078:	b.ne	2b080 <get_python_format_unnamed_arg_count@@Base+0xb3b8>  // b.any
   2b07c:	tbz	w9, #0, 2b14c <get_python_format_unnamed_arg_count@@Base+0xb484>
   2b080:	mov	x12, #0x7e0000007e0000      	// #35465847073800192
   2b084:	cmp	w8, #0x5c
   2b088:	add	x10, x27, #0x1
   2b08c:	mov	w11, #0x1                   	// #1
   2b090:	movk	x12, #0x3ff
   2b094:	b.ne	2b120 <get_python_format_unnamed_arg_count@@Base+0xb458>  // b.any
   2b098:	ldrb	w8, [x10]
   2b09c:	cmp	w8, #0x75
   2b0a0:	b.ne	2b11c <get_python_format_unnamed_arg_count@@Base+0xb454>  // b.any
   2b0a4:	ldrb	w8, [x27, #2]
   2b0a8:	sub	w8, w8, #0x30
   2b0ac:	cmp	w8, #0x36
   2b0b0:	b.hi	2b11c <get_python_format_unnamed_arg_count@@Base+0xb454>  // b.pmore
   2b0b4:	lsl	x8, x11, x8
   2b0b8:	tst	x8, x12
   2b0bc:	b.eq	2b11c <get_python_format_unnamed_arg_count@@Base+0xb454>  // b.none
   2b0c0:	ldrb	w8, [x27, #3]
   2b0c4:	sub	w8, w8, #0x30
   2b0c8:	cmp	w8, #0x36
   2b0cc:	b.hi	2b11c <get_python_format_unnamed_arg_count@@Base+0xb454>  // b.pmore
   2b0d0:	lsl	x8, x11, x8
   2b0d4:	tst	x8, x12
   2b0d8:	b.eq	2b11c <get_python_format_unnamed_arg_count@@Base+0xb454>  // b.none
   2b0dc:	ldrb	w8, [x27, #4]
   2b0e0:	sub	w8, w8, #0x30
   2b0e4:	cmp	w8, #0x36
   2b0e8:	b.hi	2b11c <get_python_format_unnamed_arg_count@@Base+0xb454>  // b.pmore
   2b0ec:	lsl	x8, x11, x8
   2b0f0:	tst	x8, x12
   2b0f4:	b.eq	2b11c <get_python_format_unnamed_arg_count@@Base+0xb454>  // b.none
   2b0f8:	ldrb	w8, [x27, #5]
   2b0fc:	sub	w8, w8, #0x30
   2b100:	cmp	w8, #0x36
   2b104:	b.hi	2b11c <get_python_format_unnamed_arg_count@@Base+0xb454>  // b.pmore
   2b108:	lsl	x8, x11, x8
   2b10c:	tst	x8, x12
   2b110:	b.eq	2b11c <get_python_format_unnamed_arg_count@@Base+0xb454>  // b.none
   2b114:	add	x10, x27, #0x6
   2b118:	b	2b120 <get_python_format_unnamed_arg_count@@Base+0xb458>
   2b11c:	add	x10, x27, #0x2
   2b120:	ldrb	w8, [x10]
   2b124:	cmp	w8, #0x27
   2b128:	b.ne	2b13c <get_python_format_unnamed_arg_count@@Base+0xb474>  // b.any
   2b12c:	ldrb	w8, [x10, #1]!
   2b130:	cmp	w8, #0x27
   2b134:	cset	w11, ne  // ne = any
   2b138:	eor	w9, w9, w11
   2b13c:	mov	w25, #0x2                   	// #2
   2b140:	mov	x27, x10
   2b144:	cbnz	w8, 2b070 <get_python_format_unnamed_arg_count@@Base+0xb3a8>
   2b148:	b	2b170 <get_python_format_unnamed_arg_count@@Base+0xb4a8>
   2b14c:	mov	x13, #0x7e0000007e0000      	// #35465847073800192
   2b150:	mov	w10, wzr
   2b154:	mov	w8, #0x3b                  	// #59
   2b158:	mov	w12, #0x1                   	// #1
   2b15c:	movk	x13, #0x3ff
   2b160:	mov	x25, x14
   2b164:	tbz	w9, #0, 2adf4 <get_python_format_unnamed_arg_count@@Base+0xb12c>
   2b168:	b	2b2d4 <get_python_format_unnamed_arg_count@@Base+0xb60c>
   2b16c:	mov	w25, #0x2                   	// #2
   2b170:	ldur	x0, [x29, #-8]
   2b174:	bl	ad70 <freea@plt>
   2b178:	ldp	w9, w8, [x22, #4]
   2b17c:	cmp	w8, w9
   2b180:	b.ne	2b1a8 <get_python_format_unnamed_arg_count@@Base+0xb4e0>  // b.any
   2b184:	ldr	x0, [x22, #16]
   2b188:	mov	w9, #0x1                   	// #1
   2b18c:	bfi	w9, w8, #1, #31
   2b190:	lsl	x1, x9, #3
   2b194:	str	w9, [x22, #8]
   2b198:	bl	a460 <xrealloc@plt>
   2b19c:	ldr	w9, [x22, #4]
   2b1a0:	str	x0, [x22, #16]
   2b1a4:	b	2b1ac <get_python_format_unnamed_arg_count@@Base+0xb4e4>
   2b1a8:	ldr	x0, [x22, #16]
   2b1ac:	mov	w8, wzr
   2b1b0:	add	x10, x0, w9, uxtw #3
   2b1b4:	add	w9, w9, #0x1
   2b1b8:	stp	w23, w25, [x10]
   2b1bc:	str	w9, [x22, #4]
   2b1c0:	cbz	x19, 2ab84 <get_python_format_unnamed_arg_count@@Base+0xaebc>
   2b1c4:	sub	x9, x26, x21
   2b1c8:	ldrb	w10, [x19, x9]
   2b1cc:	mov	w8, wzr
   2b1d0:	orr	w10, w10, #0x2
   2b1d4:	strb	w10, [x19, x9]
   2b1d8:	b	2ab84 <get_python_format_unnamed_arg_count@@Base+0xaebc>
   2b1dc:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2b1e0:	add	x1, x1, #0x530
   2b1e4:	mov	w2, #0x5                   	// #5
   2b1e8:	mov	x0, xzr
   2b1ec:	bl	acd0 <dcgettext@plt>
   2b1f0:	bl	a5a0 <xstrdup@plt>
   2b1f4:	str	x0, [x20]
   2b1f8:	cbz	x19, 2b33c <get_python_format_unnamed_arg_count@@Base+0xb674>
   2b1fc:	sub	x8, x26, x21
   2b200:	add	x8, x8, x19
   2b204:	ldurb	w9, [x8, #-1]
   2b208:	mov	w0, wzr
   2b20c:	orr	w9, w9, #0x4
   2b210:	sturb	w9, [x8, #-1]
   2b214:	b	2b340 <get_python_format_unnamed_arg_count@@Base+0xb678>
   2b218:	mov	w0, #0x1                   	// #1
   2b21c:	b	2b340 <get_python_format_unnamed_arg_count@@Base+0xb678>
   2b220:	cbz	x19, 2b268 <get_python_format_unnamed_arg_count@@Base+0xb5a0>
   2b224:	sub	x21, x28, x21
   2b228:	ldrb	w8, [x19, x21]
   2b22c:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2b230:	add	x1, x1, #0x6e9
   2b234:	mov	w2, #0x5                   	// #5
   2b238:	orr	w8, w8, #0x1
   2b23c:	mov	x0, xzr
   2b240:	strb	w8, [x19, x21]
   2b244:	bl	acd0 <dcgettext@plt>
   2b248:	bl	a5a0 <xstrdup@plt>
   2b24c:	mov	x8, x0
   2b250:	str	x8, [x20]
   2b254:	ldrb	w8, [x19, x21]
   2b258:	mov	w0, wzr
   2b25c:	orr	w8, w8, #0x4
   2b260:	strb	w8, [x19, x21]
   2b264:	b	2b340 <get_python_format_unnamed_arg_count@@Base+0xb678>
   2b268:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2b26c:	add	x1, x1, #0x6e9
   2b270:	mov	w2, #0x5                   	// #5
   2b274:	mov	x0, xzr
   2b278:	bl	acd0 <dcgettext@plt>
   2b27c:	bl	a5a0 <xstrdup@plt>
   2b280:	mov	x8, x0
   2b284:	mov	w0, wzr
   2b288:	str	x8, [x20]
   2b28c:	b	2b340 <get_python_format_unnamed_arg_count@@Base+0xb678>
   2b290:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2b294:	add	x1, x1, #0x57e
   2b298:	mov	w2, #0x5                   	// #5
   2b29c:	mov	x0, xzr
   2b2a0:	bl	acd0 <dcgettext@plt>
   2b2a4:	ldr	w1, [x22]
   2b2a8:	bl	aa20 <xasprintf@plt>
   2b2ac:	str	x0, [x20]
   2b2b0:	cbz	x19, 2b2c4 <get_python_format_unnamed_arg_count@@Base+0xb5fc>
   2b2b4:	sub	x8, x26, x21
   2b2b8:	ldrb	w9, [x19, x8]
   2b2bc:	orr	w9, w9, #0x4
   2b2c0:	strb	w9, [x19, x8]
   2b2c4:	mov	x0, x27
   2b2c8:	b	2b338 <get_python_format_unnamed_arg_count@@Base+0xb670>
   2b2cc:	sturb	wzr, [x27, #-4]
   2b2d0:	b	2b2f8 <get_python_format_unnamed_arg_count@@Base+0xb630>
   2b2d4:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2b2d8:	add	x1, x1, #0x627
   2b2dc:	mov	w2, #0x5                   	// #5
   2b2e0:	mov	x0, xzr
   2b2e4:	bl	acd0 <dcgettext@plt>
   2b2e8:	ldr	w1, [x22]
   2b2ec:	mov	x2, x25
   2b2f0:	b	2b318 <get_python_format_unnamed_arg_count@@Base+0xb650>
   2b2f4:	sturb	wzr, [x27, #-2]
   2b2f8:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2b2fc:	add	x1, x1, #0x5d1
   2b300:	mov	w2, #0x5                   	// #5
   2b304:	mov	x0, xzr
   2b308:	sub	x23, x27, #0x8
   2b30c:	bl	acd0 <dcgettext@plt>
   2b310:	ldr	w1, [x22]
   2b314:	mov	x2, x23
   2b318:	bl	aa20 <xasprintf@plt>
   2b31c:	str	x0, [x20]
   2b320:	cbz	x19, 2b334 <get_python_format_unnamed_arg_count@@Base+0xb66c>
   2b324:	sub	x8, x26, x21
   2b328:	ldrb	w9, [x19, x8]
   2b32c:	orr	w9, w9, #0x4
   2b330:	strb	w9, [x19, x8]
   2b334:	ldur	x0, [x29, #-8]
   2b338:	bl	ad70 <freea@plt>
   2b33c:	mov	w0, wzr
   2b340:	mov	sp, x29
   2b344:	ldp	x20, x19, [sp, #80]
   2b348:	ldp	x22, x21, [sp, #64]
   2b34c:	ldp	x24, x23, [sp, #48]
   2b350:	ldp	x26, x25, [sp, #32]
   2b354:	ldp	x28, x27, [sp, #16]
   2b358:	ldp	x29, x30, [sp], #96
   2b35c:	ret
   2b360:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2b364:	add	x1, x1, #0x67b
   2b368:	mov	w2, #0x5                   	// #5
   2b36c:	mov	x0, xzr
   2b370:	bl	acd0 <dcgettext@plt>
   2b374:	ldr	w1, [x22]
   2b378:	adrp	x2, 3a000 <plural_table_size@@Base+0xc00>
   2b37c:	adrp	x3, 3a000 <plural_table_size@@Base+0xc00>
   2b380:	adrp	x4, 3a000 <plural_table_size@@Base+0xc00>
   2b384:	adrp	x5, 3a000 <plural_table_size@@Base+0xc00>
   2b388:	add	x2, x2, #0x5c6
   2b38c:	add	x3, x3, #0x5cc
   2b390:	add	x4, x4, #0xe5b
   2b394:	add	x5, x5, #0x674
   2b398:	bl	aa20 <xasprintf@plt>
   2b39c:	b	2b31c <get_python_format_unnamed_arg_count@@Base+0xb654>
   2b3a0:	ldr	w8, [x0]
   2b3a4:	ldr	w9, [x1]
   2b3a8:	cmp	w8, w9
   2b3ac:	csetm	w8, cc  // cc = lo, ul, last
   2b3b0:	csinc	w0, w8, wzr, ls  // ls = plast
   2b3b4:	ret
   2b3b8:	stp	x29, x30, [sp, #-96]!
   2b3bc:	stp	x26, x25, [sp, #32]
   2b3c0:	stp	x24, x23, [sp, #48]
   2b3c4:	stp	x22, x21, [sp, #64]
   2b3c8:	stp	x20, x19, [sp, #80]
   2b3cc:	ldrb	w24, [x0]
   2b3d0:	mov	x19, x2
   2b3d4:	mov	x22, x0
   2b3d8:	mov	x20, x1
   2b3dc:	cmp	w24, #0x27
   2b3e0:	str	x27, [sp, #16]
   2b3e4:	mov	x29, sp
   2b3e8:	b.ne	2b400 <get_python_format_unnamed_arg_count@@Base+0xb738>  // b.any
   2b3ec:	ldrb	w24, [x22, #1]!
   2b3f0:	cmp	w24, #0x27
   2b3f4:	cset	w27, ne  // ne = any
   2b3f8:	cbnz	w24, 2b408 <get_python_format_unnamed_arg_count@@Base+0xb740>
   2b3fc:	b	2b668 <get_python_format_unnamed_arg_count@@Base+0xb9a0>
   2b400:	mov	w27, wzr
   2b404:	cbz	w24, 2b668 <get_python_format_unnamed_arg_count@@Base+0xb9a0>
   2b408:	mov	x26, #0x7e0000007e0000      	// #35465847073800192
   2b40c:	adrp	x21, 3a000 <plural_table_size@@Base+0xc00>
   2b410:	mov	w23, wzr
   2b414:	mov	w25, #0x1                   	// #1
   2b418:	movk	x26, #0x3ff
   2b41c:	add	x21, x21, #0x739
   2b420:	tbz	w27, #0, 2b4b8 <get_python_format_unnamed_arg_count@@Base+0xb7f0>
   2b424:	and	w8, w24, #0xff
   2b428:	cmp	w8, #0x5c
   2b42c:	add	x8, x22, #0x1
   2b430:	b.ne	2b528 <get_python_format_unnamed_arg_count@@Base+0xb860>  // b.any
   2b434:	ldrb	w8, [x8]
   2b438:	cmp	w8, #0x75
   2b43c:	b.ne	2b524 <get_python_format_unnamed_arg_count@@Base+0xb85c>  // b.any
   2b440:	ldrb	w8, [x22, #2]
   2b444:	sub	w8, w8, #0x30
   2b448:	cmp	w8, #0x36
   2b44c:	b.hi	2b524 <get_python_format_unnamed_arg_count@@Base+0xb85c>  // b.pmore
   2b450:	lsl	x8, x25, x8
   2b454:	tst	x8, x26
   2b458:	b.eq	2b524 <get_python_format_unnamed_arg_count@@Base+0xb85c>  // b.none
   2b45c:	ldrb	w8, [x22, #3]
   2b460:	sub	w8, w8, #0x30
   2b464:	cmp	w8, #0x36
   2b468:	b.hi	2b524 <get_python_format_unnamed_arg_count@@Base+0xb85c>  // b.pmore
   2b46c:	lsl	x8, x25, x8
   2b470:	tst	x8, x26
   2b474:	b.eq	2b524 <get_python_format_unnamed_arg_count@@Base+0xb85c>  // b.none
   2b478:	ldrb	w8, [x22, #4]
   2b47c:	sub	w8, w8, #0x30
   2b480:	cmp	w8, #0x36
   2b484:	b.hi	2b524 <get_python_format_unnamed_arg_count@@Base+0xb85c>  // b.pmore
   2b488:	lsl	x8, x25, x8
   2b48c:	tst	x8, x26
   2b490:	b.eq	2b524 <get_python_format_unnamed_arg_count@@Base+0xb85c>  // b.none
   2b494:	ldrb	w8, [x22, #5]
   2b498:	sub	w8, w8, #0x30
   2b49c:	cmp	w8, #0x36
   2b4a0:	b.hi	2b524 <get_python_format_unnamed_arg_count@@Base+0xb85c>  // b.pmore
   2b4a4:	lsl	x8, x25, x8
   2b4a8:	tst	x8, x26
   2b4ac:	b.eq	2b524 <get_python_format_unnamed_arg_count@@Base+0xb85c>  // b.none
   2b4b0:	add	x8, x22, #0x6
   2b4b4:	b	2b528 <get_python_format_unnamed_arg_count@@Base+0xb860>
   2b4b8:	and	w8, w24, #0xff
   2b4bc:	cmp	w8, #0x23
   2b4c0:	b.eq	2b4ec <get_python_format_unnamed_arg_count@@Base+0xb824>  // b.none
   2b4c4:	cmp	w8, #0x3c
   2b4c8:	b.eq	2b4ec <get_python_format_unnamed_arg_count@@Base+0xb824>  // b.none
   2b4cc:	mov	w2, #0x6                   	// #6
   2b4d0:	mov	x0, x22
   2b4d4:	mov	x1, x21
   2b4d8:	bl	a4d0 <strncmp@plt>
   2b4dc:	and	w8, w24, #0xff
   2b4e0:	cmp	w8, #0x7c
   2b4e4:	b.eq	2b4ec <get_python_format_unnamed_arg_count@@Base+0xb824>  // b.none
   2b4e8:	cbnz	w0, 2b424 <get_python_format_unnamed_arg_count@@Base+0xb75c>
   2b4ec:	tbz	w23, #0, 2b670 <get_python_format_unnamed_arg_count@@Base+0xb9a8>
   2b4f0:	and	w8, w24, #0xff
   2b4f4:	cmp	w8, #0x23
   2b4f8:	b.eq	2b554 <get_python_format_unnamed_arg_count@@Base+0xb88c>  // b.none
   2b4fc:	cmp	w8, #0x3c
   2b500:	mov	w8, #0x1                   	// #1
   2b504:	b.eq	2b558 <get_python_format_unnamed_arg_count@@Base+0xb890>  // b.none
   2b508:	mov	w2, #0x6                   	// #6
   2b50c:	mov	x0, x22
   2b510:	mov	x1, x21
   2b514:	bl	a4d0 <strncmp@plt>
   2b518:	mov	w8, #0x6                   	// #6
   2b51c:	cbz	w0, 2b558 <get_python_format_unnamed_arg_count@@Base+0xb890>
   2b520:	b	2b698 <get_python_format_unnamed_arg_count@@Base+0xb9d0>
   2b524:	add	x8, x22, #0x2
   2b528:	ldrb	w24, [x8]
   2b52c:	cmp	w24, #0x27
   2b530:	b.ne	2b544 <get_python_format_unnamed_arg_count@@Base+0xb87c>  // b.any
   2b534:	ldrb	w24, [x8, #1]!
   2b538:	cmp	w24, #0x27
   2b53c:	cset	w9, ne  // ne = any
   2b540:	eor	w27, w27, w9
   2b544:	mov	w23, #0x1                   	// #1
   2b548:	mov	x22, x8
   2b54c:	cbnz	w24, 2b420 <get_python_format_unnamed_arg_count@@Base+0xb758>
   2b550:	b	2b6c4 <get_python_format_unnamed_arg_count@@Base+0xb9fc>
   2b554:	mov	w8, #0x1                   	// #1
   2b558:	add	x23, x22, x8
   2b55c:	ldrb	w24, [x23]
   2b560:	cmp	w24, #0x27
   2b564:	b.ne	2b578 <get_python_format_unnamed_arg_count@@Base+0xb8b0>  // b.any
   2b568:	ldrb	w24, [x23, #1]!
   2b56c:	cmp	w24, #0x27
   2b570:	cset	w27, ne  // ne = any
   2b574:	b	2b57c <get_python_format_unnamed_arg_count@@Base+0xb8b4>
   2b578:	mov	w27, wzr
   2b57c:	mov	x0, x23
   2b580:	bl	a0d0 <strlen@plt>
   2b584:	add	x8, x0, #0x1
   2b588:	cmp	x8, #0xfa0
   2b58c:	b.hi	2b5b0 <get_python_format_unnamed_arg_count@@Base+0xb8e8>  // b.pmore
   2b590:	add	x9, x0, #0x2f
   2b594:	mov	x8, sp
   2b598:	and	x9, x9, #0xfffffffffffffff0
   2b59c:	sub	x8, x8, x9
   2b5a0:	mov	sp, x8
   2b5a4:	add	x8, x8, #0x1f
   2b5a8:	and	x22, x8, #0xffffffffffffffe0
   2b5ac:	b	2b5c0 <get_python_format_unnamed_arg_count@@Base+0xb8f8>
   2b5b0:	mov	x0, x8
   2b5b4:	bl	a910 <xmmalloca@plt>
   2b5b8:	ldrb	w24, [x23]
   2b5bc:	mov	x22, x0
   2b5c0:	mov	x8, x22
   2b5c4:	cbz	w24, 2b60c <get_python_format_unnamed_arg_count@@Base+0xb944>
   2b5c8:	and	w9, w24, #0xff
   2b5cc:	cmp	w9, #0x7c
   2b5d0:	b.ne	2b5d8 <get_python_format_unnamed_arg_count@@Base+0xb910>  // b.any
   2b5d4:	tbz	w27, #0, 2b60c <get_python_format_unnamed_arg_count@@Base+0xb944>
   2b5d8:	strb	w24, [x8], #1
   2b5dc:	mov	x9, x23
   2b5e0:	ldrb	w24, [x9, #1]!
   2b5e4:	cmp	w24, #0x27
   2b5e8:	b.ne	2b604 <get_python_format_unnamed_arg_count@@Base+0xb93c>  // b.any
   2b5ec:	ldrb	w24, [x23, #2]!
   2b5f0:	cmp	w24, #0x27
   2b5f4:	cset	w9, ne  // ne = any
   2b5f8:	eor	w27, w27, w9
   2b5fc:	cbnz	w24, 2b5c8 <get_python_format_unnamed_arg_count@@Base+0xb900>
   2b600:	b	2b60c <get_python_format_unnamed_arg_count@@Base+0xb944>
   2b604:	mov	x23, x9
   2b608:	cbnz	w24, 2b5c8 <get_python_format_unnamed_arg_count@@Base+0xb900>
   2b60c:	mov	x0, x22
   2b610:	mov	x1, xzr
   2b614:	mov	x2, x20
   2b618:	mov	x3, x19
   2b61c:	strb	wzr, [x8]
   2b620:	bl	2ab48 <get_python_format_unnamed_arg_count@@Base+0xae80>
   2b624:	mov	w24, w0
   2b628:	mov	x0, x22
   2b62c:	bl	ad70 <freea@plt>
   2b630:	tbz	w24, #0, 2b690 <get_python_format_unnamed_arg_count@@Base+0xb9c8>
   2b634:	ldrb	w8, [x23]
   2b638:	cbz	w8, 2b668 <get_python_format_unnamed_arg_count@@Base+0xb9a0>
   2b63c:	mov	x22, x23
   2b640:	ldrb	w24, [x22, #1]!
   2b644:	cmp	w24, #0x27
   2b648:	b.ne	2b660 <get_python_format_unnamed_arg_count@@Base+0xb998>  // b.any
   2b64c:	ldrb	w24, [x23, #2]!
   2b650:	cmp	w24, #0x27
   2b654:	cset	w8, ne  // ne = any
   2b658:	eor	w27, w27, w8
   2b65c:	mov	x22, x23
   2b660:	mov	w23, wzr
   2b664:	cbnz	w24, 2b420 <get_python_format_unnamed_arg_count@@Base+0xb758>
   2b668:	mov	w23, #0x1                   	// #1
   2b66c:	b	2b6c4 <get_python_format_unnamed_arg_count@@Base+0xb9fc>
   2b670:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2b674:	add	x1, x1, #0x740
   2b678:	mov	w2, #0x5                   	// #5
   2b67c:	mov	x0, xzr
   2b680:	bl	acd0 <dcgettext@plt>
   2b684:	ldr	w1, [x20]
   2b688:	bl	aa20 <xasprintf@plt>
   2b68c:	b	2b6bc <get_python_format_unnamed_arg_count@@Base+0xb9f4>
   2b690:	mov	w23, wzr
   2b694:	b	2b6c4 <get_python_format_unnamed_arg_count@@Base+0xb9fc>
   2b698:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2b69c:	add	x1, x1, #0x779
   2b6a0:	mov	w2, #0x5                   	// #5
   2b6a4:	mov	x0, xzr
   2b6a8:	bl	acd0 <dcgettext@plt>
   2b6ac:	ldr	w1, [x20]
   2b6b0:	adrp	x2, 3a000 <plural_table_size@@Base+0xc00>
   2b6b4:	add	x2, x2, #0x739
   2b6b8:	bl	aa20 <xasprintf@plt>
   2b6bc:	mov	w23, wzr
   2b6c0:	str	x0, [x19]
   2b6c4:	mov	w0, w23
   2b6c8:	mov	sp, x29
   2b6cc:	ldp	x20, x19, [sp, #80]
   2b6d0:	ldp	x22, x21, [sp, #64]
   2b6d4:	ldp	x24, x23, [sp, #48]
   2b6d8:	ldp	x26, x25, [sp, #32]
   2b6dc:	ldr	x27, [sp, #16]
   2b6e0:	ldp	x29, x30, [sp], #96
   2b6e4:	ret
   2b6e8:	stp	x29, x30, [sp, #-80]!
   2b6ec:	stp	x24, x23, [sp, #32]
   2b6f0:	stp	x22, x21, [sp, #48]
   2b6f4:	stp	x20, x19, [sp, #64]
   2b6f8:	ldrb	w9, [x0]
   2b6fc:	str	x25, [sp, #16]
   2b700:	mov	x29, sp
   2b704:	cbz	w9, 2b874 <get_python_format_unnamed_arg_count@@Base+0xbbac>
   2b708:	mov	x21, x3
   2b70c:	mov	x20, x0
   2b710:	mov	x19, x2
   2b714:	mov	w22, wzr
   2b718:	mov	w23, wzr
   2b71c:	mov	w8, #0xa                   	// #10
   2b720:	mov	x24, x0
   2b724:	and	w9, w9, #0xff
   2b728:	cmp	w9, #0x7d
   2b72c:	add	x25, x24, #0x1
   2b730:	b.eq	2b768 <get_python_format_unnamed_arg_count@@Base+0xbaa0>  // b.none
   2b734:	cmp	w9, #0x7b
   2b738:	b.ne	2b7a4 <get_python_format_unnamed_arg_count@@Base+0xbadc>  // b.any
   2b73c:	cbz	x19, 2b750 <get_python_format_unnamed_arg_count@@Base+0xba88>
   2b740:	sub	x9, x24, x20
   2b744:	ldrb	w10, [x19, x9]
   2b748:	orr	w10, w10, #0x1
   2b74c:	strb	w10, [x19, x9]
   2b750:	ldrb	w10, [x25]
   2b754:	cmp	w10, #0x7b
   2b758:	b.ne	2b7ac <get_python_format_unnamed_arg_count@@Base+0xbae4>  // b.any
   2b75c:	add	x24, x24, #0x2
   2b760:	cbnz	x19, 2b854 <get_python_format_unnamed_arg_count@@Base+0xbb8c>
   2b764:	b	2b868 <get_python_format_unnamed_arg_count@@Base+0xbba0>
   2b768:	cbz	x19, 2b77c <get_python_format_unnamed_arg_count@@Base+0xbab4>
   2b76c:	sub	x9, x24, x20
   2b770:	ldrb	w10, [x19, x9]
   2b774:	orr	w10, w10, #0x1
   2b778:	strb	w10, [x19, x9]
   2b77c:	ldrb	w9, [x25]
   2b780:	cmp	w9, #0x7d
   2b784:	b.ne	2b8a0 <get_python_format_unnamed_arg_count@@Base+0xbbd8>  // b.any
   2b788:	add	x24, x24, #0x2
   2b78c:	cbz	x19, 2b868 <get_python_format_unnamed_arg_count@@Base+0xbba0>
   2b790:	sub	x9, x25, x20
   2b794:	ldrb	w10, [x19, x9]
   2b798:	orr	w10, w10, #0x2
   2b79c:	strb	w10, [x19, x9]
   2b7a0:	b	2b868 <get_python_format_unnamed_arg_count@@Base+0xbba0>
   2b7a4:	mov	x24, x25
   2b7a8:	b	2b868 <get_python_format_unnamed_arg_count@@Base+0xbba0>
   2b7ac:	sub	w9, w10, #0x30
   2b7b0:	cmp	w9, #0x9
   2b7b4:	add	w22, w22, #0x1
   2b7b8:	b.hi	2b8b0 <get_python_format_unnamed_arg_count@@Base+0xbbe8>  // b.pmore
   2b7bc:	mov	w9, wzr
   2b7c0:	add	x11, x24, #0x3
   2b7c4:	mul	w9, w9, w8
   2b7c8:	add	w9, w9, w10, uxtb
   2b7cc:	ldurb	w10, [x11, #-1]
   2b7d0:	sub	w9, w9, #0x30
   2b7d4:	add	x11, x11, #0x1
   2b7d8:	sub	w12, w10, #0x30
   2b7dc:	cmp	w12, #0xa
   2b7e0:	b.cc	2b7c4 <get_python_format_unnamed_arg_count@@Base+0xbafc>  // b.lo, b.ul, b.last
   2b7e4:	cmp	w10, #0x2c
   2b7e8:	b.ne	2b820 <get_python_format_unnamed_arg_count@@Base+0xbb58>  // b.any
   2b7ec:	mov	x10, x11
   2b7f0:	ldrb	w12, [x10, #-1]!
   2b7f4:	cmp	w12, #0x2d
   2b7f8:	csel	x24, x11, x10, eq  // eq = none
   2b7fc:	ldrb	w10, [x24]
   2b800:	sub	w10, w10, #0x30
   2b804:	cmp	w10, #0x9
   2b808:	b.hi	2b954 <get_python_format_unnamed_arg_count@@Base+0xbc8c>  // b.pmore
   2b80c:	ldrb	w10, [x24, #1]!
   2b810:	sub	w11, w10, #0x30
   2b814:	cmp	w11, #0xa
   2b818:	b.cc	2b80c <get_python_format_unnamed_arg_count@@Base+0xbb44>  // b.lo, b.ul, b.last
   2b81c:	b	2b824 <get_python_format_unnamed_arg_count@@Base+0xbb5c>
   2b820:	sub	x24, x11, #0x2
   2b824:	cmp	w10, #0x3a
   2b828:	b.ne	2b83c <get_python_format_unnamed_arg_count@@Base+0xbb74>  // b.any
   2b82c:	ldrb	w10, [x24, #1]!
   2b830:	cmp	w10, #0x7d
   2b834:	b.eq	2b83c <get_python_format_unnamed_arg_count@@Base+0xbb74>  // b.none
   2b838:	cbnz	w10, 2b82c <get_python_format_unnamed_arg_count@@Base+0xbb64>
   2b83c:	cmp	w10, #0x7d
   2b840:	b.ne	2b8d0 <get_python_format_unnamed_arg_count@@Base+0xbc08>  // b.any
   2b844:	cmp	w23, w9
   2b848:	add	x24, x24, #0x1
   2b84c:	csinc	w23, w23, w9, hi  // hi = pmore
   2b850:	cbz	x19, 2b868 <get_python_format_unnamed_arg_count@@Base+0xbba0>
   2b854:	sub	x9, x24, x20
   2b858:	add	x9, x9, x19
   2b85c:	ldurb	w10, [x9, #-1]
   2b860:	orr	w10, w10, #0x2
   2b864:	sturb	w10, [x9, #-1]
   2b868:	ldrb	w9, [x24]
   2b86c:	cbnz	w9, 2b724 <get_python_format_unnamed_arg_count@@Base+0xba5c>
   2b870:	b	2b87c <get_python_format_unnamed_arg_count@@Base+0xbbb4>
   2b874:	mov	w23, wzr
   2b878:	mov	w22, wzr
   2b87c:	mov	w0, #0x8                   	// #8
   2b880:	bl	a590 <xmalloc@plt>
   2b884:	stp	w22, w23, [x0]
   2b888:	ldp	x20, x19, [sp, #64]
   2b88c:	ldp	x22, x21, [sp, #48]
   2b890:	ldp	x24, x23, [sp, #32]
   2b894:	ldr	x25, [sp, #16]
   2b898:	ldp	x29, x30, [sp], #80
   2b89c:	ret
   2b8a0:	cbz	w22, 2b910 <get_python_format_unnamed_arg_count@@Base+0xbc48>
   2b8a4:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2b8a8:	add	x1, x1, #0x97f
   2b8ac:	b	2b8b8 <get_python_format_unnamed_arg_count@@Base+0xbbf0>
   2b8b0:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2b8b4:	add	x1, x1, #0x57e
   2b8b8:	mov	w2, #0x5                   	// #5
   2b8bc:	mov	x0, xzr
   2b8c0:	bl	acd0 <dcgettext@plt>
   2b8c4:	mov	w1, w22
   2b8c8:	bl	aa20 <xasprintf@plt>
   2b8cc:	b	2b928 <get_python_format_unnamed_arg_count@@Base+0xbc60>
   2b8d0:	cbnz	w10, 2b990 <get_python_format_unnamed_arg_count@@Base+0xbcc8>
   2b8d4:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2b8d8:	add	x1, x1, #0x530
   2b8dc:	mov	w2, #0x5                   	// #5
   2b8e0:	mov	x0, xzr
   2b8e4:	bl	acd0 <dcgettext@plt>
   2b8e8:	bl	a5a0 <xstrdup@plt>
   2b8ec:	str	x0, [x21]
   2b8f0:	cbz	x19, 2b9f0 <get_python_format_unnamed_arg_count@@Base+0xbd28>
   2b8f4:	sub	x8, x24, x20
   2b8f8:	add	x8, x8, x19
   2b8fc:	ldurb	w9, [x8, #-1]
   2b900:	mov	x0, xzr
   2b904:	orr	w9, w9, #0x4
   2b908:	sturb	w9, [x8, #-1]
   2b90c:	b	2b888 <get_python_format_unnamed_arg_count@@Base+0xbbc0>
   2b910:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2b914:	add	x1, x1, #0x6e9
   2b918:	mov	w2, #0x5                   	// #5
   2b91c:	mov	x0, xzr
   2b920:	bl	acd0 <dcgettext@plt>
   2b924:	bl	a5a0 <xstrdup@plt>
   2b928:	str	x0, [x21]
   2b92c:	cbz	x19, 2b9f0 <get_python_format_unnamed_arg_count@@Base+0xbd28>
   2b930:	ldrb	w8, [x24, #1]
   2b934:	mov	x0, xzr
   2b938:	cmp	w8, #0x0
   2b93c:	csel	x8, x24, x25, eq  // eq = none
   2b940:	sub	x8, x8, x20
   2b944:	ldrb	w9, [x19, x8]
   2b948:	orr	w9, w9, #0x4
   2b94c:	strb	w9, [x19, x8]
   2b950:	b	2b888 <get_python_format_unnamed_arg_count@@Base+0xbbc0>
   2b954:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2b958:	add	x1, x1, #0x8af
   2b95c:	mov	w2, #0x5                   	// #5
   2b960:	mov	x0, xzr
   2b964:	bl	acd0 <dcgettext@plt>
   2b968:	mov	w1, w22
   2b96c:	bl	aa20 <xasprintf@plt>
   2b970:	str	x0, [x21]
   2b974:	cbz	x19, 2b9f0 <get_python_format_unnamed_arg_count@@Base+0xbd28>
   2b978:	mov	x8, x24
   2b97c:	ldrb	w9, [x8], #-1
   2b980:	mov	x0, xzr
   2b984:	cmp	w9, #0x0
   2b988:	csel	x8, x8, x24, eq  // eq = none
   2b98c:	b	2b940 <get_python_format_unnamed_arg_count@@Base+0xbc78>
   2b990:	sub	w8, w10, #0x20
   2b994:	cmp	w8, #0x5e
   2b998:	b.hi	2b9c0 <get_python_format_unnamed_arg_count@@Base+0xbcf8>  // b.pmore
   2b99c:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2b9a0:	add	x1, x1, #0x8ec
   2b9a4:	mov	w2, #0x5                   	// #5
   2b9a8:	mov	x0, xzr
   2b9ac:	bl	acd0 <dcgettext@plt>
   2b9b0:	ldrb	w2, [x24]
   2b9b4:	mov	w1, w22
   2b9b8:	bl	aa20 <xasprintf@plt>
   2b9bc:	b	2b9dc <get_python_format_unnamed_arg_count@@Base+0xbd14>
   2b9c0:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2b9c4:	add	x1, x1, #0x938
   2b9c8:	mov	w2, #0x5                   	// #5
   2b9cc:	mov	x0, xzr
   2b9d0:	bl	acd0 <dcgettext@plt>
   2b9d4:	mov	w1, w22
   2b9d8:	bl	aa20 <xasprintf@plt>
   2b9dc:	str	x0, [x21]
   2b9e0:	cbz	x19, 2b9f0 <get_python_format_unnamed_arg_count@@Base+0xbd28>
   2b9e4:	mov	x0, xzr
   2b9e8:	sub	x8, x24, x20
   2b9ec:	b	2b944 <get_python_format_unnamed_arg_count@@Base+0xbc7c>
   2b9f0:	mov	x0, xzr
   2b9f4:	b	2b888 <get_python_format_unnamed_arg_count@@Base+0xbbc0>
   2b9f8:	b	aa00 <free@plt>
   2b9fc:	ldr	w0, [x0]
   2ba00:	ret
   2ba04:	stp	x29, x30, [sp, #-48]!
   2ba08:	stp	x20, x19, [sp, #32]
   2ba0c:	ldr	w8, [x0, #4]
   2ba10:	ldr	w9, [x1, #4]
   2ba14:	str	x21, [sp, #16]
   2ba18:	mov	x19, x5
   2ba1c:	mov	x21, x4
   2ba20:	mov	x20, x3
   2ba24:	cmp	w8, w9
   2ba28:	mov	x29, sp
   2ba2c:	tbz	w2, #0, 2ba3c <get_python_format_unnamed_arg_count@@Base+0xbd74>
   2ba30:	b.ne	2ba40 <get_python_format_unnamed_arg_count@@Base+0xbd78>  // b.any
   2ba34:	mov	w0, wzr
   2ba38:	b	2ba68 <get_python_format_unnamed_arg_count@@Base+0xbda0>
   2ba3c:	b.cs	2ba34 <get_python_format_unnamed_arg_count@@Base+0xbd6c>  // b.hs, b.nlast
   2ba40:	cbz	x20, 2ba64 <get_python_format_unnamed_arg_count@@Base+0xbd9c>
   2ba44:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2ba48:	add	x1, x1, #0x506
   2ba4c:	mov	w2, #0x5                   	// #5
   2ba50:	mov	x0, xzr
   2ba54:	bl	acd0 <dcgettext@plt>
   2ba58:	mov	x1, x21
   2ba5c:	mov	x2, x19
   2ba60:	blr	x20
   2ba64:	mov	w0, #0x1                   	// #1
   2ba68:	ldp	x20, x19, [sp, #32]
   2ba6c:	ldr	x21, [sp, #16]
   2ba70:	ldp	x29, x30, [sp], #48
   2ba74:	ret
   2ba78:	sub	sp, sp, #0x80
   2ba7c:	stp	x29, x30, [sp, #32]
   2ba80:	stp	x28, x27, [sp, #48]
   2ba84:	stp	x26, x25, [sp, #64]
   2ba88:	stp	x24, x23, [sp, #80]
   2ba8c:	stp	x22, x21, [sp, #96]
   2ba90:	stp	x20, x19, [sp, #112]
   2ba94:	ldrb	w10, [x0]
   2ba98:	add	x29, sp, #0x20
   2ba9c:	cbz	w10, 2bef4 <get_python_format_unnamed_arg_count@@Base+0xc22c>
   2baa0:	adrp	x20, 3a000 <plural_table_size@@Base+0xc00>
   2baa4:	mov	x12, x0
   2baa8:	mov	x21, x2
   2baac:	mov	x24, xzr
   2bab0:	mov	w25, wzr
   2bab4:	mov	w13, wzr
   2bab8:	mov	w28, wzr
   2babc:	mov	w14, wzr
   2bac0:	mov	w26, #0xa                   	// #10
   2bac4:	add	x20, x20, #0x9b9
   2bac8:	mov	x9, x0
   2bacc:	str	x3, [sp, #8]
   2bad0:	stur	x0, [x29, #-8]
   2bad4:	and	w8, w10, #0xff
   2bad8:	cmp	w8, #0x25
   2badc:	add	x8, x9, #0x1
   2bae0:	b.ne	2be90 <get_python_format_unnamed_arg_count@@Base+0xc1c8>  // b.any
   2bae4:	cbz	x21, 2baf8 <get_python_format_unnamed_arg_count@@Base+0xbe30>
   2bae8:	sub	x10, x9, x12
   2baec:	ldrb	w11, [x21, x10]
   2baf0:	orr	w11, w11, #0x1
   2baf4:	strb	w11, [x21, x10]
   2baf8:	ldrb	w10, [x8]
   2bafc:	add	w13, w13, #0x1
   2bb00:	sub	w11, w10, #0x30
   2bb04:	cmp	w11, #0x9
   2bb08:	b.hi	2bb40 <get_python_format_unnamed_arg_count@@Base+0xbe78>  // b.pmore
   2bb0c:	mov	w27, wzr
   2bb10:	add	x19, x9, #0x2
   2bb14:	mul	w9, w27, w26
   2bb18:	add	w9, w9, w10, uxtb
   2bb1c:	ldrb	w10, [x19], #1
   2bb20:	sub	w27, w9, #0x30
   2bb24:	sub	w11, w10, #0x30
   2bb28:	cmp	w11, #0xa
   2bb2c:	b.cc	2bb14 <get_python_format_unnamed_arg_count@@Base+0xbe4c>  // b.lo, b.ul, b.last
   2bb30:	cmp	w10, #0x24
   2bb34:	b.ne	2bb40 <get_python_format_unnamed_arg_count@@Base+0xbe78>  // b.any
   2bb38:	cbnz	w27, 2bb48 <get_python_format_unnamed_arg_count@@Base+0xbe80>
   2bb3c:	b	2c128 <get_python_format_unnamed_arg_count@@Base+0xc460>
   2bb40:	mov	w27, wzr
   2bb44:	mov	x19, x8
   2bb48:	add	x23, x19, #0x1
   2bb4c:	add	x22, x19, #0x2
   2bb50:	ldurb	w8, [x23, #-1]
   2bb54:	sub	w9, w8, #0x2a
   2bb58:	cmp	w9, #0x6
   2bb5c:	b.hi	2bb70 <get_python_format_unnamed_arg_count@@Base+0xbea8>  // b.pmore
   2bb60:	adr	x10, 2bb80 <get_python_format_unnamed_arg_count@@Base+0xbeb8>
   2bb64:	ldrb	w11, [x20, x9]
   2bb68:	add	x10, x10, x11, lsl #2
   2bb6c:	br	x10
   2bb70:	cmp	w8, #0x23
   2bb74:	b.eq	2bb80 <get_python_format_unnamed_arg_count@@Base+0xbeb8>  // b.none
   2bb78:	cmp	w8, #0x20
   2bb7c:	b.ne	2bb8c <get_python_format_unnamed_arg_count@@Base+0xbec4>  // b.any
   2bb80:	add	x23, x23, #0x1
   2bb84:	add	x22, x22, #0x1
   2bb88:	b	2bb50 <get_python_format_unnamed_arg_count@@Base+0xbe88>
   2bb8c:	sub	w8, w8, #0x30
   2bb90:	cmp	w8, #0x9
   2bb94:	sub	x22, x23, #0x1
   2bb98:	b.hi	2bc84 <get_python_format_unnamed_arg_count@@Base+0xbfbc>  // b.pmore
   2bb9c:	ldrb	w8, [x22, #1]!
   2bba0:	sub	w9, w8, #0x30
   2bba4:	cmp	w9, #0xa
   2bba8:	b.cc	2bb9c <get_python_format_unnamed_arg_count@@Base+0xbed4>  // b.lo, b.ul, b.last
   2bbac:	b	2bc88 <get_python_format_unnamed_arg_count@@Base+0xbfc0>
   2bbb0:	ldrb	w8, [x23]
   2bbb4:	sub	w9, w8, #0x30
   2bbb8:	cmp	w9, #0x9
   2bbbc:	b.hi	2bc38 <get_python_format_unnamed_arg_count@@Base+0xbf70>  // b.pmore
   2bbc0:	mov	w19, wzr
   2bbc4:	mul	w9, w19, w26
   2bbc8:	add	w9, w9, w8, uxtb
   2bbcc:	ldrb	w8, [x22], #1
   2bbd0:	sub	w19, w9, #0x30
   2bbd4:	sub	w10, w8, #0x30
   2bbd8:	cmp	w10, #0xa
   2bbdc:	b.cc	2bbc4 <get_python_format_unnamed_arg_count@@Base+0xbefc>  // b.lo, b.ul, b.last
   2bbe0:	cmp	w8, #0x24
   2bbe4:	b.ne	2bc38 <get_python_format_unnamed_arg_count@@Base+0xbf70>  // b.any
   2bbe8:	cbz	w19, 2c18c <get_python_format_unnamed_arg_count@@Base+0xc4c4>
   2bbec:	cbnz	w25, 2c1b0 <get_python_format_unnamed_arg_count@@Base+0xc4e8>
   2bbf0:	cmp	w14, w28
   2bbf4:	b.ne	2bc20 <get_python_format_unnamed_arg_count@@Base+0xbf58>  // b.any
   2bbf8:	mov	w25, #0x1                   	// #1
   2bbfc:	bfi	w25, w28, #1, #31
   2bc00:	lsl	x1, x25, #3
   2bc04:	mov	x0, x24
   2bc08:	mov	w23, w13
   2bc0c:	bl	a460 <xrealloc@plt>
   2bc10:	ldur	x12, [x29, #-8]
   2bc14:	mov	x14, x25
   2bc18:	mov	w13, w23
   2bc1c:	mov	x24, x0
   2bc20:	add	x8, x24, w28, uxtw #3
   2bc24:	mov	w9, #0x3                   	// #3
   2bc28:	mov	w25, wzr
   2bc2c:	stp	w19, w9, [x8]
   2bc30:	add	w28, w28, #0x1
   2bc34:	b	2bc84 <get_python_format_unnamed_arg_count@@Base+0xbfbc>
   2bc38:	cbnz	w28, 2c0fc <get_python_format_unnamed_arg_count@@Base+0xc434>
   2bc3c:	cmp	w14, w25
   2bc40:	b.ne	2bc6c <get_python_format_unnamed_arg_count@@Base+0xbfa4>  // b.any
   2bc44:	mov	w22, #0x1                   	// #1
   2bc48:	bfi	w22, w25, #1, #31
   2bc4c:	lsl	x1, x22, #3
   2bc50:	mov	x0, x24
   2bc54:	mov	w19, w13
   2bc58:	bl	a460 <xrealloc@plt>
   2bc5c:	ldur	x12, [x29, #-8]
   2bc60:	mov	x14, x22
   2bc64:	mov	w13, w19
   2bc68:	mov	x24, x0
   2bc6c:	mov	w28, wzr
   2bc70:	add	x8, x24, w25, uxtw #3
   2bc74:	add	w25, w25, #0x1
   2bc78:	mov	w9, #0x3                   	// #3
   2bc7c:	mov	x22, x23
   2bc80:	stp	w25, w9, [x8]
   2bc84:	ldrb	w8, [x22]
   2bc88:	cmp	w8, #0x2e
   2bc8c:	b.ne	2bdb8 <get_python_format_unnamed_arg_count@@Base+0xc0f0>  // b.any
   2bc90:	mov	x23, x22
   2bc94:	ldrb	w8, [x23, #1]!
   2bc98:	cmp	w8, #0x2a
   2bc9c:	b.ne	2bd1c <get_python_format_unnamed_arg_count@@Base+0xc054>  // b.any
   2bca0:	str	x24, [sp, #16]
   2bca4:	mov	x19, x22
   2bca8:	ldrb	w8, [x19, #2]!
   2bcac:	sub	w9, w8, #0x30
   2bcb0:	cmp	w9, #0x9
   2bcb4:	b.hi	2bd3c <get_python_format_unnamed_arg_count@@Base+0xc074>  // b.pmore
   2bcb8:	mov	w24, wzr
   2bcbc:	add	x22, x22, #0x3
   2bcc0:	mul	w9, w24, w26
   2bcc4:	add	w9, w9, w8, uxtb
   2bcc8:	ldrb	w8, [x22], #1
   2bccc:	sub	w24, w9, #0x30
   2bcd0:	sub	w10, w8, #0x30
   2bcd4:	cmp	w10, #0xa
   2bcd8:	b.cc	2bcc0 <get_python_format_unnamed_arg_count@@Base+0xbff8>  // b.lo, b.ul, b.last
   2bcdc:	cmp	w8, #0x24
   2bce0:	b.ne	2bd3c <get_python_format_unnamed_arg_count@@Base+0xc074>  // b.any
   2bce4:	cbz	w24, 2c21c <get_python_format_unnamed_arg_count@@Base+0xc554>
   2bce8:	cbnz	w25, 2c240 <get_python_format_unnamed_arg_count@@Base+0xc578>
   2bcec:	cmp	w14, w28
   2bcf0:	b.ne	2bd9c <get_python_format_unnamed_arg_count@@Base+0xc0d4>  // b.any
   2bcf4:	ldr	x0, [sp, #16]
   2bcf8:	mov	w19, #0x1                   	// #1
   2bcfc:	bfi	w19, w14, #1, #31
   2bd00:	lsl	x1, x19, #3
   2bd04:	mov	w23, w13
   2bd08:	bl	a460 <xrealloc@plt>
   2bd0c:	ldur	x12, [x29, #-8]
   2bd10:	mov	w13, w23
   2bd14:	mov	w14, w19
   2bd18:	b	2bda0 <get_python_format_unnamed_arg_count@@Base+0xc0d8>
   2bd1c:	sub	w8, w8, #0x30
   2bd20:	cmp	w8, #0x9
   2bd24:	b.hi	2bd74 <get_python_format_unnamed_arg_count@@Base+0xc0ac>  // b.pmore
   2bd28:	ldrb	w8, [x23, #1]!
   2bd2c:	sub	w9, w8, #0x30
   2bd30:	cmp	w9, #0xa
   2bd34:	b.cc	2bd28 <get_python_format_unnamed_arg_count@@Base+0xc060>  // b.lo, b.ul, b.last
   2bd38:	b	2bdc0 <get_python_format_unnamed_arg_count@@Base+0xc0f8>
   2bd3c:	cbnz	w28, 2c15c <get_python_format_unnamed_arg_count@@Base+0xc494>
   2bd40:	cmp	w14, w25
   2bd44:	b.ne	2bd7c <get_python_format_unnamed_arg_count@@Base+0xc0b4>  // b.any
   2bd48:	ldr	x0, [sp, #16]
   2bd4c:	mov	w22, #0x1                   	// #1
   2bd50:	bfi	w22, w14, #1, #31
   2bd54:	lsl	x1, x22, #3
   2bd58:	mov	w23, w13
   2bd5c:	bl	a460 <xrealloc@plt>
   2bd60:	ldur	x12, [x29, #-8]
   2bd64:	mov	w13, w23
   2bd68:	mov	x24, x0
   2bd6c:	mov	w14, w22
   2bd70:	b	2bd80 <get_python_format_unnamed_arg_count@@Base+0xc0b8>
   2bd74:	mov	x22, x23
   2bd78:	b	2bdb8 <get_python_format_unnamed_arg_count@@Base+0xc0f0>
   2bd7c:	ldr	x24, [sp, #16]
   2bd80:	mov	w28, wzr
   2bd84:	add	x8, x24, w25, uxtw #3
   2bd88:	add	w25, w25, #0x1
   2bd8c:	mov	w9, #0x3                   	// #3
   2bd90:	mov	x22, x19
   2bd94:	stp	w25, w9, [x8]
   2bd98:	b	2bdb8 <get_python_format_unnamed_arg_count@@Base+0xc0f0>
   2bd9c:	ldr	x0, [sp, #16]
   2bda0:	add	x8, x0, w28, uxtw #3
   2bda4:	mov	w9, #0x3                   	// #3
   2bda8:	mov	w25, wzr
   2bdac:	stp	w24, w9, [x8]
   2bdb0:	add	w28, w28, #0x1
   2bdb4:	mov	x24, x0
   2bdb8:	ldrb	w8, [x22]
   2bdbc:	mov	x23, x22
   2bdc0:	cmp	w8, #0x46
   2bdc4:	b.le	2bdfc <get_python_format_unnamed_arg_count@@Base+0xc134>
   2bdc8:	sub	w9, w8, #0x63
   2bdcc:	cmp	w9, #0x15
   2bdd0:	b.hi	2be10 <get_python_format_unnamed_arg_count@@Base+0xc148>  // b.pmore
   2bdd4:	adrp	x15, 3a000 <plural_table_size@@Base+0xc00>
   2bdd8:	add	x15, x15, #0x9c0
   2bddc:	adr	x10, 2bdf0 <get_python_format_unnamed_arg_count@@Base+0xc128>
   2bde0:	ldrb	w11, [x15, x9]
   2bde4:	add	x10, x10, x11, lsl #2
   2bde8:	mov	w22, #0x1                   	// #1
   2bdec:	br	x10
   2bdf0:	mov	w22, #0x3                   	// #3
   2bdf4:	cbnz	w27, 2be34 <get_python_format_unnamed_arg_count@@Base+0xc16c>
   2bdf8:	b	2bea8 <get_python_format_unnamed_arg_count@@Base+0xc1e0>
   2bdfc:	cmp	w8, #0x25
   2be00:	b.eq	2be78 <get_python_format_unnamed_arg_count@@Base+0xc1b0>  // b.none
   2be04:	cmp	w8, #0x45
   2be08:	b.eq	2be2c <get_python_format_unnamed_arg_count@@Base+0xc164>  // b.none
   2be0c:	b	2bf18 <get_python_format_unnamed_arg_count@@Base+0xc250>
   2be10:	cmp	w8, #0x47
   2be14:	b.eq	2be2c <get_python_format_unnamed_arg_count@@Base+0xc164>  // b.none
   2be18:	cmp	w8, #0x58
   2be1c:	b.ne	2c078 <get_python_format_unnamed_arg_count@@Base+0xc3b0>  // b.any
   2be20:	mov	w22, #0x4                   	// #4
   2be24:	cbnz	w27, 2be34 <get_python_format_unnamed_arg_count@@Base+0xc16c>
   2be28:	b	2bea8 <get_python_format_unnamed_arg_count@@Base+0xc1e0>
   2be2c:	mov	w22, #0x5                   	// #5
   2be30:	cbz	w27, 2bea8 <get_python_format_unnamed_arg_count@@Base+0xc1e0>
   2be34:	cbnz	w25, 2bf60 <get_python_format_unnamed_arg_count@@Base+0xc298>
   2be38:	cmp	w14, w28
   2be3c:	b.ne	2be68 <get_python_format_unnamed_arg_count@@Base+0xc1a0>  // b.any
   2be40:	mov	w19, #0x1                   	// #1
   2be44:	bfi	w19, w14, #1, #31
   2be48:	lsl	x1, x19, #3
   2be4c:	mov	x0, x24
   2be50:	mov	w25, w13
   2be54:	bl	a460 <xrealloc@plt>
   2be58:	ldur	x12, [x29, #-8]
   2be5c:	mov	w13, w25
   2be60:	mov	x24, x0
   2be64:	mov	w14, w19
   2be68:	add	x8, x24, w28, uxtw #3
   2be6c:	mov	w25, wzr
   2be70:	stp	w27, w22, [x8]
   2be74:	add	w28, w28, #0x1
   2be78:	cbz	x21, 2be8c <get_python_format_unnamed_arg_count@@Base+0xc1c4>
   2be7c:	sub	x8, x23, x12
   2be80:	ldrb	w9, [x21, x8]
   2be84:	orr	w9, w9, #0x2
   2be88:	strb	w9, [x21, x8]
   2be8c:	add	x8, x23, #0x1
   2be90:	ldrb	w10, [x8]
   2be94:	mov	x9, x8
   2be98:	cbnz	w10, 2bad4 <get_python_format_unnamed_arg_count@@Base+0xbe0c>
   2be9c:	b	2bf08 <get_python_format_unnamed_arg_count@@Base+0xc240>
   2bea0:	mov	w22, #0x2                   	// #2
   2bea4:	cbnz	w27, 2be34 <get_python_format_unnamed_arg_count@@Base+0xc16c>
   2bea8:	cbnz	w28, 2bf60 <get_python_format_unnamed_arg_count@@Base+0xc298>
   2beac:	cmp	w14, w25
   2beb0:	b.ne	2bedc <get_python_format_unnamed_arg_count@@Base+0xc214>  // b.any
   2beb4:	mov	w19, #0x1                   	// #1
   2beb8:	bfi	w19, w14, #1, #31
   2bebc:	lsl	x1, x19, #3
   2bec0:	mov	x0, x24
   2bec4:	mov	w27, w13
   2bec8:	bl	a460 <xrealloc@plt>
   2becc:	ldur	x12, [x29, #-8]
   2bed0:	mov	w13, w27
   2bed4:	mov	x24, x0
   2bed8:	mov	w14, w19
   2bedc:	mov	w28, wzr
   2bee0:	add	x8, x24, w25, uxtw #3
   2bee4:	add	w25, w25, #0x1
   2bee8:	stp	w25, w22, [x8]
   2beec:	cbnz	x21, 2be7c <get_python_format_unnamed_arg_count@@Base+0xc1b4>
   2bef0:	b	2be8c <get_python_format_unnamed_arg_count@@Base+0xc1c4>
   2bef4:	mov	x24, xzr
   2bef8:	mov	w27, wzr
   2befc:	mov	w22, wzr
   2bf00:	mov	w25, wzr
   2bf04:	b	2c0b0 <get_python_format_unnamed_arg_count@@Base+0xc3e8>
   2bf08:	cbz	w25, 2bf8c <get_python_format_unnamed_arg_count@@Base+0xc2c4>
   2bf0c:	mov	w27, w13
   2bf10:	mov	x22, x14
   2bf14:	b	2c0b0 <get_python_format_unnamed_arg_count@@Base+0xc3e8>
   2bf18:	cbnz	w8, 2c078 <get_python_format_unnamed_arg_count@@Base+0xc3b0>
   2bf1c:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2bf20:	add	x1, x1, #0x7e0
   2bf24:	mov	w2, #0x5                   	// #5
   2bf28:	mov	x0, xzr
   2bf2c:	bl	acd0 <dcgettext@plt>
   2bf30:	bl	a5a0 <xstrdup@plt>
   2bf34:	ldr	x8, [sp, #8]
   2bf38:	str	x0, [x8]
   2bf3c:	cbz	x21, 2c1ec <get_python_format_unnamed_arg_count@@Base+0xc524>
   2bf40:	ldur	x8, [x29, #-8]
   2bf44:	sub	x8, x23, x8
   2bf48:	add	x8, x8, x21
   2bf4c:	ldurb	w9, [x8, #-1]
   2bf50:	orr	w9, w9, #0x4
   2bf54:	sturb	w9, [x8, #-1]
   2bf58:	cbnz	x24, 2c1f0 <get_python_format_unnamed_arg_count@@Base+0xc528>
   2bf5c:	b	2c1f8 <get_python_format_unnamed_arg_count@@Base+0xc530>
   2bf60:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2bf64:	add	x1, x1, #0x630
   2bf68:	mov	w2, #0x5                   	// #5
   2bf6c:	mov	x0, xzr
   2bf70:	bl	acd0 <dcgettext@plt>
   2bf74:	bl	a5a0 <xstrdup@plt>
   2bf78:	ldr	x8, [sp, #8]
   2bf7c:	str	x0, [x8]
   2bf80:	cbz	x21, 2c1ec <get_python_format_unnamed_arg_count@@Base+0xc524>
   2bf84:	ldur	x8, [x29, #-8]
   2bf88:	b	2c0f4 <get_python_format_unnamed_arg_count@@Base+0xc42c>
   2bf8c:	mov	x22, x14
   2bf90:	mov	w27, w13
   2bf94:	cmp	w28, #0x2
   2bf98:	b.cc	2c0ac <get_python_format_unnamed_arg_count@@Base+0xc3e4>  // b.lo, b.ul, b.last
   2bf9c:	mov	w21, w28
   2bfa0:	adrp	x3, 2c000 <get_python_format_unnamed_arg_count@@Base+0xc338>
   2bfa4:	add	x3, x3, #0x498
   2bfa8:	mov	w2, #0x8                   	// #8
   2bfac:	mov	x0, x24
   2bfb0:	mov	x1, x21
   2bfb4:	bl	a2f0 <qsort@plt>
   2bfb8:	ldr	x26, [sp, #8]
   2bfbc:	adrp	x28, 39000 <get_search_path@@Base+0x2b4c>
   2bfc0:	mov	x20, xzr
   2bfc4:	mov	w8, wzr
   2bfc8:	mov	w25, wzr
   2bfcc:	add	x28, x28, #0x8bd
   2bfd0:	mov	x23, x24
   2bfd4:	cbz	w25, 2c01c <get_python_format_unnamed_arg_count@@Base+0xc354>
   2bfd8:	sub	w9, w25, #0x1
   2bfdc:	lsl	x11, x9, #3
   2bfe0:	ldr	w10, [x23]
   2bfe4:	ldr	w11, [x24, x11]
   2bfe8:	cmp	w10, w11
   2bfec:	b.ne	2c01c <get_python_format_unnamed_arg_count@@Base+0xc354>  // b.any
   2bff0:	add	x19, x24, x9, lsl #3
   2bff4:	ldr	w11, [x23, #4]
   2bff8:	ldr	w9, [x19, #4]!
   2bffc:	cmp	w11, w9
   2c000:	cset	w9, eq  // eq = none
   2c004:	cset	w10, ne  // ne = any
   2c008:	orr	w12, w8, w9
   2c00c:	csel	w9, w11, wzr, eq  // eq = none
   2c010:	tbz	w12, #0, 2c038 <get_python_format_unnamed_arg_count@@Base+0xc370>
   2c014:	orr	w8, w8, w10
   2c018:	b	2c05c <get_python_format_unnamed_arg_count@@Base+0xc394>
   2c01c:	cmp	x20, w25, uxtw
   2c020:	b.ls	2c030 <get_python_format_unnamed_arg_count@@Base+0xc368>  // b.plast
   2c024:	ldr	x9, [x23]
   2c028:	mov	w10, w25
   2c02c:	str	x9, [x24, x10, lsl #3]
   2c030:	add	w25, w25, #0x1
   2c034:	b	2c060 <get_python_format_unnamed_arg_count@@Base+0xc398>
   2c038:	mov	w2, #0x5                   	// #5
   2c03c:	mov	x0, xzr
   2c040:	mov	x1, x28
   2c044:	bl	acd0 <dcgettext@plt>
   2c048:	ldr	w1, [x23]
   2c04c:	bl	aa20 <xasprintf@plt>
   2c050:	mov	w9, wzr
   2c054:	mov	w8, #0x1                   	// #1
   2c058:	str	x0, [x26]
   2c05c:	str	w9, [x19]
   2c060:	add	x20, x20, #0x1
   2c064:	cmp	x21, x20
   2c068:	add	x23, x23, #0x8
   2c06c:	b.ne	2bfd4 <get_python_format_unnamed_arg_count@@Base+0xc30c>  // b.any
   2c070:	tbz	w8, #0, 2c0b0 <get_python_format_unnamed_arg_count@@Base+0xc3e8>
   2c074:	b	2c1ec <get_python_format_unnamed_arg_count@@Base+0xc524>
   2c078:	sub	w8, w8, #0x20
   2c07c:	mov	w19, w13
   2c080:	cmp	w8, #0x5e
   2c084:	b.hi	2c0c8 <get_python_format_unnamed_arg_count@@Base+0xc400>  // b.pmore
   2c088:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2c08c:	add	x1, x1, #0x80e
   2c090:	mov	w2, #0x5                   	// #5
   2c094:	mov	x0, xzr
   2c098:	bl	acd0 <dcgettext@plt>
   2c09c:	ldrb	w2, [x23]
   2c0a0:	mov	w1, w19
   2c0a4:	bl	aa20 <xasprintf@plt>
   2c0a8:	b	2c0e4 <get_python_format_unnamed_arg_count@@Base+0xc41c>
   2c0ac:	mov	w25, w28
   2c0b0:	mov	w0, #0x18                  	// #24
   2c0b4:	bl	a590 <xmalloc@plt>
   2c0b8:	stp	w27, w25, [x0]
   2c0bc:	str	w22, [x0, #8]
   2c0c0:	str	x24, [x0, #16]
   2c0c4:	b	2c1fc <get_python_format_unnamed_arg_count@@Base+0xc534>
   2c0c8:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2c0cc:	add	x1, x1, #0x862
   2c0d0:	mov	w2, #0x5                   	// #5
   2c0d4:	mov	x0, xzr
   2c0d8:	bl	acd0 <dcgettext@plt>
   2c0dc:	mov	w1, w19
   2c0e0:	bl	aa20 <xasprintf@plt>
   2c0e4:	ldr	x8, [sp, #8]
   2c0e8:	str	x0, [x8]
   2c0ec:	ldur	x8, [x29, #-8]
   2c0f0:	cbz	x21, 2c1ec <get_python_format_unnamed_arg_count@@Base+0xc524>
   2c0f4:	sub	x8, x23, x8
   2c0f8:	b	2c1e0 <get_python_format_unnamed_arg_count@@Base+0xc518>
   2c0fc:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2c100:	add	x1, x1, #0x630
   2c104:	mov	w2, #0x5                   	// #5
   2c108:	mov	x0, xzr
   2c10c:	bl	acd0 <dcgettext@plt>
   2c110:	bl	a5a0 <xstrdup@plt>
   2c114:	ldr	x8, [sp, #8]
   2c118:	str	x0, [x8]
   2c11c:	cbz	x21, 2c1ec <get_python_format_unnamed_arg_count@@Base+0xc524>
   2c120:	sub	x8, x23, #0x1
   2c124:	b	2c1d8 <get_python_format_unnamed_arg_count@@Base+0xc510>
   2c128:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2c12c:	add	x1, x1, #0x58e
   2c130:	mov	w2, #0x5                   	// #5
   2c134:	mov	x0, xzr
   2c138:	mov	w20, w13
   2c13c:	bl	acd0 <dcgettext@plt>
   2c140:	mov	w1, w20
   2c144:	bl	aa20 <xasprintf@plt>
   2c148:	ldr	x8, [sp, #8]
   2c14c:	str	x0, [x8]
   2c150:	cbz	x21, 2c1ec <get_python_format_unnamed_arg_count@@Base+0xc524>
   2c154:	sub	x8, x19, #0x1
   2c158:	b	2c1d8 <get_python_format_unnamed_arg_count@@Base+0xc510>
   2c15c:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2c160:	add	x1, x1, #0x630
   2c164:	mov	w2, #0x5                   	// #5
   2c168:	mov	x0, xzr
   2c16c:	bl	acd0 <dcgettext@plt>
   2c170:	bl	a5a0 <xstrdup@plt>
   2c174:	ldr	x8, [sp, #8]
   2c178:	str	x0, [x8]
   2c17c:	cbz	x21, 2c27c <get_python_format_unnamed_arg_count@@Base+0xc5b4>
   2c180:	ldur	x8, [x29, #-8]
   2c184:	sub	x8, x23, x8
   2c188:	b	2c270 <get_python_format_unnamed_arg_count@@Base+0xc5a8>
   2c18c:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2c190:	add	x1, x1, #0x5db
   2c194:	mov	w2, #0x5                   	// #5
   2c198:	mov	x0, xzr
   2c19c:	mov	w19, w13
   2c1a0:	bl	acd0 <dcgettext@plt>
   2c1a4:	mov	w1, w19
   2c1a8:	bl	aa20 <xasprintf@plt>
   2c1ac:	b	2c1c8 <get_python_format_unnamed_arg_count@@Base+0xc500>
   2c1b0:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2c1b4:	add	x1, x1, #0x630
   2c1b8:	mov	w2, #0x5                   	// #5
   2c1bc:	mov	x0, xzr
   2c1c0:	bl	acd0 <dcgettext@plt>
   2c1c4:	bl	a5a0 <xstrdup@plt>
   2c1c8:	ldr	x8, [sp, #8]
   2c1cc:	str	x0, [x8]
   2c1d0:	cbz	x21, 2c1ec <get_python_format_unnamed_arg_count@@Base+0xc524>
   2c1d4:	sub	x8, x22, #0x1
   2c1d8:	ldur	x9, [x29, #-8]
   2c1dc:	sub	x8, x8, x9
   2c1e0:	ldrb	w9, [x21, x8]
   2c1e4:	orr	w9, w9, #0x4
   2c1e8:	strb	w9, [x21, x8]
   2c1ec:	cbz	x24, 2c1f8 <get_python_format_unnamed_arg_count@@Base+0xc530>
   2c1f0:	mov	x0, x24
   2c1f4:	bl	aa00 <free@plt>
   2c1f8:	mov	x0, xzr
   2c1fc:	ldp	x20, x19, [sp, #112]
   2c200:	ldp	x22, x21, [sp, #96]
   2c204:	ldp	x24, x23, [sp, #80]
   2c208:	ldp	x26, x25, [sp, #64]
   2c20c:	ldp	x28, x27, [sp, #48]
   2c210:	ldp	x29, x30, [sp, #32]
   2c214:	add	sp, sp, #0x80
   2c218:	ret
   2c21c:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2c220:	add	x1, x1, #0x6a6
   2c224:	mov	w2, #0x5                   	// #5
   2c228:	mov	x0, xzr
   2c22c:	mov	w19, w13
   2c230:	bl	acd0 <dcgettext@plt>
   2c234:	mov	w1, w19
   2c238:	bl	aa20 <xasprintf@plt>
   2c23c:	b	2c258 <get_python_format_unnamed_arg_count@@Base+0xc590>
   2c240:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2c244:	add	x1, x1, #0x630
   2c248:	mov	w2, #0x5                   	// #5
   2c24c:	mov	x0, xzr
   2c250:	bl	acd0 <dcgettext@plt>
   2c254:	bl	a5a0 <xstrdup@plt>
   2c258:	ldr	x8, [sp, #8]
   2c25c:	str	x0, [x8]
   2c260:	cbz	x21, 2c27c <get_python_format_unnamed_arg_count@@Base+0xc5b4>
   2c264:	ldur	x9, [x29, #-8]
   2c268:	sub	x8, x22, #0x1
   2c26c:	sub	x8, x8, x9
   2c270:	ldrb	w9, [x21, x8]
   2c274:	orr	w9, w9, #0x4
   2c278:	strb	w9, [x21, x8]
   2c27c:	ldr	x24, [sp, #16]
   2c280:	cbnz	x24, 2c1f0 <get_python_format_unnamed_arg_count@@Base+0xc528>
   2c284:	b	2c1f8 <get_python_format_unnamed_arg_count@@Base+0xc530>
   2c288:	stp	x29, x30, [sp, #-32]!
   2c28c:	str	x19, [sp, #16]
   2c290:	mov	x19, x0
   2c294:	ldr	x0, [x0, #16]
   2c298:	mov	x29, sp
   2c29c:	cbz	x0, 2c2a4 <get_python_format_unnamed_arg_count@@Base+0xc5dc>
   2c2a0:	bl	aa00 <free@plt>
   2c2a4:	mov	x0, x19
   2c2a8:	ldr	x19, [sp, #16]
   2c2ac:	ldp	x29, x30, [sp], #32
   2c2b0:	b	aa00 <free@plt>
   2c2b4:	ldr	w0, [x0]
   2c2b8:	ret
   2c2bc:	stp	x29, x30, [sp, #-80]!
   2c2c0:	stp	x24, x23, [sp, #32]
   2c2c4:	stp	x22, x21, [sp, #48]
   2c2c8:	stp	x20, x19, [sp, #64]
   2c2cc:	ldr	w9, [x0, #4]
   2c2d0:	ldr	w8, [x1, #4]
   2c2d4:	str	x25, [sp, #16]
   2c2d8:	mov	x29, sp
   2c2dc:	cmn	w9, w8
   2c2e0:	b.ne	2c2ec <get_python_format_unnamed_arg_count@@Base+0xc624>  // b.any
   2c2e4:	mov	w0, wzr
   2c2e8:	b	2c480 <get_python_format_unnamed_arg_count@@Base+0xc7b8>
   2c2ec:	mov	x20, x5
   2c2f0:	mov	x21, x4
   2c2f4:	mov	x19, x3
   2c2f8:	mov	x22, x1
   2c2fc:	mov	x23, x0
   2c300:	orr	w10, w8, w9
   2c304:	cbz	w10, 2c380 <get_python_format_unnamed_arg_count@@Base+0xc6b8>
   2c308:	cmp	w8, #0x0
   2c30c:	cset	w11, ne  // ne = any
   2c310:	cmp	w9, #0x0
   2c314:	mov	x10, xzr
   2c318:	mov	x24, xzr
   2c31c:	mov	w25, wzr
   2c320:	cset	w12, ne  // ne = any
   2c324:	tbz	w12, #0, 2c3e0 <get_python_format_unnamed_arg_count@@Base+0xc718>
   2c328:	tbz	w11, #0, 2c350 <get_python_format_unnamed_arg_count@@Base+0xc688>
   2c32c:	ldr	x11, [x23, #16]
   2c330:	ldr	x12, [x22, #16]
   2c334:	mov	w13, w25
   2c338:	lsl	x13, x13, #3
   2c33c:	ldr	w11, [x11, x10]
   2c340:	ldr	w12, [x12, x13]
   2c344:	cmp	w11, w12
   2c348:	b.hi	2c3e0 <get_python_format_unnamed_arg_count@@Base+0xc718>  // b.pmore
   2c34c:	b.cs	2c358 <get_python_format_unnamed_arg_count@@Base+0xc690>  // b.hs, b.nlast
   2c350:	tbz	w2, #0, 2c35c <get_python_format_unnamed_arg_count@@Base+0xc694>
   2c354:	b	2c418 <get_python_format_unnamed_arg_count@@Base+0xc750>
   2c358:	add	w25, w25, #0x1
   2c35c:	add	x24, x24, #0x1
   2c360:	cmp	x24, x9
   2c364:	cset	w12, cc  // cc = lo, ul, last
   2c368:	cmp	w25, w8
   2c36c:	cset	w11, cc  // cc = lo, ul, last
   2c370:	add	x10, x10, #0x8
   2c374:	b.cc	2c324 <get_python_format_unnamed_arg_count@@Base+0xc65c>  // b.lo, b.ul, b.last
   2c378:	cmp	x24, x9
   2c37c:	b.cc	2c324 <get_python_format_unnamed_arg_count@@Base+0xc65c>  // b.lo, b.ul, b.last
   2c380:	cbz	w8, 2c2e4 <get_python_format_unnamed_arg_count@@Base+0xc61c>
   2c384:	ldr	x9, [x23, #16]
   2c388:	ldr	x10, [x22, #16]
   2c38c:	mov	w12, wzr
   2c390:	mov	w11, wzr
   2c394:	mov	w12, w12
   2c398:	mov	w23, w11
   2c39c:	lsl	x13, x12, #3
   2c3a0:	lsl	x14, x23, #3
   2c3a4:	ldr	w13, [x9, x13]
   2c3a8:	ldr	w14, [x10, x14]
   2c3ac:	cmp	w13, w14
   2c3b0:	b.ne	2c3d0 <get_python_format_unnamed_arg_count@@Base+0xc708>  // b.any
   2c3b4:	add	x13, x9, x12, lsl #3
   2c3b8:	add	x14, x10, x23, lsl #3
   2c3bc:	ldr	w13, [x13, #4]
   2c3c0:	ldr	w14, [x14, #4]
   2c3c4:	cmp	w13, w14
   2c3c8:	b.ne	2c44c <get_python_format_unnamed_arg_count@@Base+0xc784>  // b.any
   2c3cc:	add	w11, w11, #0x1
   2c3d0:	cmp	w11, w8
   2c3d4:	add	w12, w12, #0x1
   2c3d8:	b.cc	2c394 <get_python_format_unnamed_arg_count@@Base+0xc6cc>  // b.lo, b.ul, b.last
   2c3dc:	b	2c2e4 <get_python_format_unnamed_arg_count@@Base+0xc61c>
   2c3e0:	cbz	x19, 2c47c <get_python_format_unnamed_arg_count@@Base+0xc7b4>
   2c3e4:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2c3e8:	add	x1, x1, #0x333
   2c3ec:	mov	w2, #0x5                   	// #5
   2c3f0:	mov	x0, xzr
   2c3f4:	bl	acd0 <dcgettext@plt>
   2c3f8:	ldr	x8, [x22, #16]
   2c3fc:	mov	w9, w25
   2c400:	lsl	x9, x9, #3
   2c404:	mov	x2, x20
   2c408:	ldr	w1, [x8, x9]
   2c40c:	mov	x3, x21
   2c410:	blr	x19
   2c414:	b	2c47c <get_python_format_unnamed_arg_count@@Base+0xc7b4>
   2c418:	cbz	x19, 2c47c <get_python_format_unnamed_arg_count@@Base+0xc7b4>
   2c41c:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2c420:	add	x1, x1, #0x37d
   2c424:	mov	w2, #0x5                   	// #5
   2c428:	mov	x0, xzr
   2c42c:	bl	acd0 <dcgettext@plt>
   2c430:	ldr	x8, [x23, #16]
   2c434:	and	x9, x24, #0xffffffff
   2c438:	lsl	x9, x9, #3
   2c43c:	mov	x2, x20
   2c440:	ldr	w1, [x8, x9]
   2c444:	blr	x19
   2c448:	b	2c47c <get_python_format_unnamed_arg_count@@Base+0xc7b4>
   2c44c:	cbz	x19, 2c47c <get_python_format_unnamed_arg_count@@Base+0xc7b4>
   2c450:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2c454:	add	x1, x1, #0x546
   2c458:	mov	w2, #0x5                   	// #5
   2c45c:	mov	x0, xzr
   2c460:	bl	acd0 <dcgettext@plt>
   2c464:	ldr	x8, [x22, #16]
   2c468:	lsl	x9, x23, #3
   2c46c:	mov	x1, x21
   2c470:	mov	x2, x20
   2c474:	ldr	w3, [x8, x9]
   2c478:	blr	x19
   2c47c:	mov	w0, #0x1                   	// #1
   2c480:	ldp	x20, x19, [sp, #64]
   2c484:	ldp	x22, x21, [sp, #48]
   2c488:	ldp	x24, x23, [sp, #32]
   2c48c:	ldr	x25, [sp, #16]
   2c490:	ldp	x29, x30, [sp], #80
   2c494:	ret
   2c498:	ldr	w8, [x0]
   2c49c:	ldr	w9, [x1]
   2c4a0:	cmp	w8, w9
   2c4a4:	csetm	w8, cc  // cc = lo, ul, last
   2c4a8:	csinc	w0, w8, wzr, ls  // ls = plast
   2c4ac:	ret
   2c4b0:	sub	sp, sp, #0x70
   2c4b4:	stp	x29, x30, [sp, #16]
   2c4b8:	stp	x28, x27, [sp, #32]
   2c4bc:	stp	x26, x25, [sp, #48]
   2c4c0:	stp	x24, x23, [sp, #64]
   2c4c4:	stp	x22, x21, [sp, #80]
   2c4c8:	stp	x20, x19, [sp, #96]
   2c4cc:	ldrb	w9, [x0]
   2c4d0:	add	x29, sp, #0x10
   2c4d4:	str	x3, [sp]
   2c4d8:	cbz	w9, 2c868 <get_python_format_unnamed_arg_count@@Base+0xcba0>
   2c4dc:	mov	x22, x2
   2c4e0:	mov	w21, wzr
   2c4e4:	mov	w24, wzr
   2c4e8:	mov	w13, wzr
   2c4ec:	mov	x19, xzr
   2c4f0:	mov	w12, wzr
   2c4f4:	mov	w28, #0xa                   	// #10
   2c4f8:	mov	x8, x0
   2c4fc:	str	x0, [sp, #8]
   2c500:	and	w9, w9, #0xff
   2c504:	cmp	w9, #0x25
   2c508:	add	x26, x8, #0x1
   2c50c:	b.ne	2c77c <get_python_format_unnamed_arg_count@@Base+0xcab4>  // b.any
   2c510:	cbz	x22, 2c524 <get_python_format_unnamed_arg_count@@Base+0xc85c>
   2c514:	sub	x9, x8, x0
   2c518:	ldrb	w10, [x22, x9]
   2c51c:	orr	w10, w10, #0x1
   2c520:	strb	w10, [x22, x9]
   2c524:	ldrb	w9, [x26]
   2c528:	add	w21, w21, #0x1
   2c52c:	cmp	w9, #0x25
   2c530:	b.eq	2c764 <get_python_format_unnamed_arg_count@@Base+0xca9c>  // b.none
   2c534:	cmp	w9, #0x3a
   2c538:	sub	w11, w9, #0x30
   2c53c:	b.eq	2c56c <get_python_format_unnamed_arg_count@@Base+0xc8a4>  // b.none
   2c540:	cmp	w11, #0x9
   2c544:	b.ls	2c56c <get_python_format_unnamed_arg_count@@Base+0xc8a4>  // b.plast
   2c548:	cmp	w9, #0x2a
   2c54c:	b.ne	2c5b0 <get_python_format_unnamed_arg_count@@Base+0xc8e8>  // b.any
   2c550:	ldrb	w9, [x8, #2]
   2c554:	mov	w27, wzr
   2c558:	add	x8, x8, #0x3
   2c55c:	cmp	w9, #0x3a
   2c560:	mov	w9, #0x1                   	// #1
   2c564:	cinc	w20, w9, eq  // eq = none
   2c568:	b	2c5a8 <get_python_format_unnamed_arg_count@@Base+0xc8e0>
   2c56c:	cmp	w11, #0x9
   2c570:	b.hi	2c594 <get_python_format_unnamed_arg_count@@Base+0xc8cc>  // b.pmore
   2c574:	mov	w10, wzr
   2c578:	ldrb	w9, [x8, #2]
   2c57c:	madd	w10, w10, w28, w11
   2c580:	add	x8, x8, #0x1
   2c584:	sub	w11, w9, #0x30
   2c588:	cmp	w11, #0xa
   2c58c:	b.cc	2c578 <get_python_format_unnamed_arg_count@@Base+0xc8b0>  // b.lo, b.ul, b.last
   2c590:	b	2c598 <get_python_format_unnamed_arg_count@@Base+0xc8d0>
   2c594:	mov	w10, wzr
   2c598:	cmp	w9, #0x3a
   2c59c:	add	x8, x8, #0x2
   2c5a0:	cset	w20, ne  // ne = any
   2c5a4:	csel	w27, w10, wzr, eq  // eq = none
   2c5a8:	csel	x26, x8, x26, eq  // eq = none
   2c5ac:	b	2c5b8 <get_python_format_unnamed_arg_count@@Base+0xc8f0>
   2c5b0:	mov	w27, wzr
   2c5b4:	mov	w20, #0x1                   	// #1
   2c5b8:	mov	x8, x26
   2c5bc:	ldrb	w9, [x8], #1
   2c5c0:	cmp	w9, #0x2d
   2c5c4:	csel	x26, x8, x26, eq  // eq = none
   2c5c8:	ldrb	w8, [x26]
   2c5cc:	sub	w9, w8, #0x30
   2c5d0:	cmp	w9, #0x9
   2c5d4:	b.hi	2c5ec <get_python_format_unnamed_arg_count@@Base+0xc924>  // b.pmore
   2c5d8:	ldrb	w8, [x26, #1]!
   2c5dc:	sub	w9, w8, #0x30
   2c5e0:	cmp	w9, #0xa
   2c5e4:	b.cc	2c5d8 <get_python_format_unnamed_arg_count@@Base+0xc910>  // b.lo, b.ul, b.last
   2c5e8:	b	2c638 <get_python_format_unnamed_arg_count@@Base+0xc970>
   2c5ec:	cmp	w8, #0x2a
   2c5f0:	b.ne	2c638 <get_python_format_unnamed_arg_count@@Base+0xc970>  // b.any
   2c5f4:	cmp	w12, w24
   2c5f8:	b.ne	2c624 <get_python_format_unnamed_arg_count@@Base+0xc95c>  // b.any
   2c5fc:	mov	w23, #0x1                   	// #1
   2c600:	bfi	w23, w24, #1, #31
   2c604:	lsl	x1, x23, #3
   2c608:	mov	x0, x19
   2c60c:	mov	w19, w13
   2c610:	bl	a460 <xrealloc@plt>
   2c614:	mov	w13, w19
   2c618:	mov	x19, x0
   2c61c:	ldr	x0, [sp, #8]
   2c620:	mov	x12, x23
   2c624:	add	x8, x19, w24, uxtw #3
   2c628:	stp	w13, wzr, [x8]
   2c62c:	ldrb	w8, [x26, #1]!
   2c630:	add	w24, w24, #0x1
   2c634:	add	w13, w13, #0x1
   2c638:	cmp	w8, #0x2e
   2c63c:	b.ne	2c6c0 <get_python_format_unnamed_arg_count@@Base+0xc9f8>  // b.any
   2c640:	mov	x8, x26
   2c644:	ldrb	w9, [x8, #1]!
   2c648:	sub	w10, w9, #0x30
   2c64c:	cmp	w10, #0x9
   2c650:	b.hi	2c66c <get_python_format_unnamed_arg_count@@Base+0xc9a4>  // b.pmore
   2c654:	mov	x26, x8
   2c658:	ldrb	w8, [x26, #1]!
   2c65c:	sub	w9, w8, #0x30
   2c660:	cmp	w9, #0xa
   2c664:	b.cc	2c658 <get_python_format_unnamed_arg_count@@Base+0xc990>  // b.lo, b.ul, b.last
   2c668:	b	2c6c0 <get_python_format_unnamed_arg_count@@Base+0xc9f8>
   2c66c:	cmp	w9, #0x2a
   2c670:	b.ne	2c6bc <get_python_format_unnamed_arg_count@@Base+0xc9f4>  // b.any
   2c674:	cmp	w12, w13
   2c678:	b.ne	2c6a4 <get_python_format_unnamed_arg_count@@Base+0xc9dc>  // b.any
   2c67c:	mov	w25, #0x1                   	// #1
   2c680:	bfi	w25, w12, #1, #31
   2c684:	lsl	x1, x25, #3
   2c688:	mov	x0, x19
   2c68c:	mov	w19, w13
   2c690:	bl	a460 <xrealloc@plt>
   2c694:	mov	w13, w19
   2c698:	mov	x19, x0
   2c69c:	ldr	x0, [sp, #8]
   2c6a0:	mov	w12, w25
   2c6a4:	add	x8, x19, w24, uxtw #3
   2c6a8:	stp	w13, wzr, [x8]
   2c6ac:	ldrb	w8, [x26, #2]!
   2c6b0:	add	w24, w24, #0x1
   2c6b4:	add	w13, w13, #0x1
   2c6b8:	b	2c6c0 <get_python_format_unnamed_arg_count@@Base+0xc9f8>
   2c6bc:	mov	w8, #0x2e                  	// #46
   2c6c0:	sub	w9, w8, #0x41
   2c6c4:	add	w10, w8, #0x20
   2c6c8:	cmp	w9, #0x1a
   2c6cc:	csel	w9, w10, w8, cc  // cc = lo, ul, last
   2c6d0:	sub	x25, x9, #0x64
   2c6d4:	cmp	w25, #0x15
   2c6d8:	b.cs	2c890 <get_python_format_unnamed_arg_count@@Base+0xcbc8>  // b.hs, b.nlast
   2c6dc:	mov	w9, #0x960f                	// #38415
   2c6e0:	movk	w9, #0x12, lsl #16
   2c6e4:	lsr	w9, w9, w25
   2c6e8:	tbz	w9, #0, 2c890 <get_python_format_unnamed_arg_count@@Base+0xcbc8>
   2c6ec:	cmp	w12, w24
   2c6f0:	b.ne	2c71c <get_python_format_unnamed_arg_count@@Base+0xca54>  // b.any
   2c6f4:	mov	w23, #0x1                   	// #1
   2c6f8:	bfi	w23, w12, #1, #31
   2c6fc:	lsl	x1, x23, #3
   2c700:	mov	x0, x19
   2c704:	mov	w19, w13
   2c708:	bl	a460 <xrealloc@plt>
   2c70c:	mov	w13, w19
   2c710:	mov	x19, x0
   2c714:	ldr	x0, [sp, #8]
   2c718:	mov	w12, w23
   2c71c:	adrp	x8, 3a000 <plural_table_size@@Base+0xc00>
   2c720:	add	x8, x8, #0x9d8
   2c724:	ldr	w8, [x8, x25, lsl #2]
   2c728:	cbz	w20, 2c758 <get_python_format_unnamed_arg_count@@Base+0xca90>
   2c72c:	cmp	w20, #0x2
   2c730:	b.eq	2c748 <get_python_format_unnamed_arg_count@@Base+0xca80>  // b.none
   2c734:	cmp	w20, #0x1
   2c738:	b.ne	2c970 <get_python_format_unnamed_arg_count@@Base+0xcca8>  // b.any
   2c73c:	add	x9, x19, w24, uxtw #3
   2c740:	stp	w13, w8, [x9]
   2c744:	b	2c750 <get_python_format_unnamed_arg_count@@Base+0xca88>
   2c748:	add	x8, x19, w24, uxtw #3
   2c74c:	stp	w13, wzr, [x8]
   2c750:	add	w13, w13, #0x1
   2c754:	b	2c760 <get_python_format_unnamed_arg_count@@Base+0xca98>
   2c758:	add	x9, x19, w24, uxtw #3
   2c75c:	stp	w27, w8, [x9]
   2c760:	add	w24, w24, #0x1
   2c764:	cbz	x22, 2c778 <get_python_format_unnamed_arg_count@@Base+0xcab0>
   2c768:	sub	x8, x26, x0
   2c76c:	ldrb	w9, [x22, x8]
   2c770:	orr	w9, w9, #0x2
   2c774:	strb	w9, [x22, x8]
   2c778:	add	x26, x26, #0x1
   2c77c:	ldrb	w9, [x26]
   2c780:	mov	x8, x26
   2c784:	cbnz	w9, 2c500 <get_python_format_unnamed_arg_count@@Base+0xc838>
   2c788:	mov	x25, x12
   2c78c:	cmp	w24, #0x2
   2c790:	b.cc	2c878 <get_python_format_unnamed_arg_count@@Base+0xcbb0>  // b.lo, b.ul, b.last
   2c794:	mov	w22, w24
   2c798:	adrp	x3, 2c000 <get_python_format_unnamed_arg_count@@Base+0xc338>
   2c79c:	add	x3, x3, #0xb84
   2c7a0:	mov	w2, #0x8                   	// #8
   2c7a4:	mov	x0, x19
   2c7a8:	mov	x1, x22
   2c7ac:	bl	a2f0 <qsort@plt>
   2c7b0:	adrp	x23, 39000 <get_search_path@@Base+0x2b4c>
   2c7b4:	mov	x20, xzr
   2c7b8:	mov	w8, wzr
   2c7bc:	mov	w24, wzr
   2c7c0:	add	x23, x23, #0x8bd
   2c7c4:	mov	x26, x19
   2c7c8:	cbz	w24, 2c80c <get_python_format_unnamed_arg_count@@Base+0xcb44>
   2c7cc:	sub	w9, w24, #0x1
   2c7d0:	lsl	x11, x9, #3
   2c7d4:	ldr	w10, [x26]
   2c7d8:	ldr	w11, [x19, x11]
   2c7dc:	cmp	w10, w11
   2c7e0:	b.ne	2c80c <get_python_format_unnamed_arg_count@@Base+0xcb44>  // b.any
   2c7e4:	add	x28, x19, x9, lsl #3
   2c7e8:	ldr	w27, [x26, #4]
   2c7ec:	ldr	w9, [x28, #4]!
   2c7f0:	cmp	w27, w9
   2c7f4:	cset	w9, eq  // eq = none
   2c7f8:	orr	w10, w8, w9
   2c7fc:	cset	w9, ne  // ne = any
   2c800:	tbz	w10, #0, 2c828 <get_python_format_unnamed_arg_count@@Base+0xcb60>
   2c804:	orr	w8, w8, w9
   2c808:	b	2c84c <get_python_format_unnamed_arg_count@@Base+0xcb84>
   2c80c:	cmp	x20, w24, uxtw
   2c810:	b.ls	2c820 <get_python_format_unnamed_arg_count@@Base+0xcb58>  // b.plast
   2c814:	ldr	x9, [x26]
   2c818:	mov	w10, w24
   2c81c:	str	x9, [x19, x10, lsl #3]
   2c820:	add	w24, w24, #0x1
   2c824:	b	2c850 <get_python_format_unnamed_arg_count@@Base+0xcb88>
   2c828:	mov	w2, #0x5                   	// #5
   2c82c:	mov	x0, xzr
   2c830:	mov	x1, x23
   2c834:	bl	acd0 <dcgettext@plt>
   2c838:	ldr	w1, [x26]
   2c83c:	bl	aa20 <xasprintf@plt>
   2c840:	ldr	x8, [sp]
   2c844:	str	x0, [x8]
   2c848:	mov	w8, #0x1                   	// #1
   2c84c:	str	w27, [x28]
   2c850:	add	x20, x20, #0x1
   2c854:	cmp	x22, x20
   2c858:	add	x26, x26, #0x8
   2c85c:	b.ne	2c7c8 <get_python_format_unnamed_arg_count@@Base+0xcb00>  // b.any
   2c860:	tbz	w8, #0, 2c878 <get_python_format_unnamed_arg_count@@Base+0xcbb0>
   2c864:	b	2c940 <get_python_format_unnamed_arg_count@@Base+0xcc78>
   2c868:	mov	w21, wzr
   2c86c:	mov	x19, xzr
   2c870:	mov	w25, wzr
   2c874:	mov	w24, wzr
   2c878:	mov	w0, #0x18                  	// #24
   2c87c:	bl	a590 <xmalloc@plt>
   2c880:	stp	w21, w24, [x0]
   2c884:	str	w25, [x0, #8]
   2c888:	str	x19, [x0, #16]
   2c88c:	b	2c950 <get_python_format_unnamed_arg_count@@Base+0xcc88>
   2c890:	cbz	w8, 2c8c4 <get_python_format_unnamed_arg_count@@Base+0xcbfc>
   2c894:	sub	w8, w8, #0x20
   2c898:	cmp	w8, #0x5e
   2c89c:	b.hi	2c904 <get_python_format_unnamed_arg_count@@Base+0xcc3c>  // b.pmore
   2c8a0:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2c8a4:	add	x1, x1, #0x80e
   2c8a8:	mov	w2, #0x5                   	// #5
   2c8ac:	mov	x0, xzr
   2c8b0:	bl	acd0 <dcgettext@plt>
   2c8b4:	ldrb	w2, [x26]
   2c8b8:	mov	w1, w21
   2c8bc:	bl	aa20 <xasprintf@plt>
   2c8c0:	b	2c920 <get_python_format_unnamed_arg_count@@Base+0xcc58>
   2c8c4:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2c8c8:	add	x1, x1, #0x7e0
   2c8cc:	mov	w2, #0x5                   	// #5
   2c8d0:	mov	x0, xzr
   2c8d4:	bl	acd0 <dcgettext@plt>
   2c8d8:	bl	a5a0 <xstrdup@plt>
   2c8dc:	ldr	x8, [sp]
   2c8e0:	str	x0, [x8]
   2c8e4:	cbz	x22, 2c940 <get_python_format_unnamed_arg_count@@Base+0xcc78>
   2c8e8:	ldr	x8, [sp, #8]
   2c8ec:	sub	x8, x26, x8
   2c8f0:	add	x8, x8, x22
   2c8f4:	ldurb	w9, [x8, #-1]
   2c8f8:	orr	w9, w9, #0x4
   2c8fc:	sturb	w9, [x8, #-1]
   2c900:	b	2c940 <get_python_format_unnamed_arg_count@@Base+0xcc78>
   2c904:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2c908:	add	x1, x1, #0x862
   2c90c:	mov	w2, #0x5                   	// #5
   2c910:	mov	x0, xzr
   2c914:	bl	acd0 <dcgettext@plt>
   2c918:	mov	w1, w21
   2c91c:	bl	aa20 <xasprintf@plt>
   2c920:	ldr	x8, [sp]
   2c924:	str	x0, [x8]
   2c928:	cbz	x22, 2c940 <get_python_format_unnamed_arg_count@@Base+0xcc78>
   2c92c:	ldr	x8, [sp, #8]
   2c930:	sub	x8, x26, x8
   2c934:	ldrb	w9, [x22, x8]
   2c938:	orr	w9, w9, #0x4
   2c93c:	strb	w9, [x22, x8]
   2c940:	cbz	x19, 2c94c <get_python_format_unnamed_arg_count@@Base+0xcc84>
   2c944:	mov	x0, x19
   2c948:	bl	aa00 <free@plt>
   2c94c:	mov	x0, xzr
   2c950:	ldp	x20, x19, [sp, #96]
   2c954:	ldp	x22, x21, [sp, #80]
   2c958:	ldp	x24, x23, [sp, #64]
   2c95c:	ldp	x26, x25, [sp, #48]
   2c960:	ldp	x28, x27, [sp, #32]
   2c964:	ldp	x29, x30, [sp, #16]
   2c968:	add	sp, sp, #0x70
   2c96c:	ret
   2c970:	bl	a7e0 <abort@plt>
   2c974:	stp	x29, x30, [sp, #-32]!
   2c978:	str	x19, [sp, #16]
   2c97c:	mov	x19, x0
   2c980:	ldr	x0, [x0, #16]
   2c984:	mov	x29, sp
   2c988:	cbz	x0, 2c990 <get_python_format_unnamed_arg_count@@Base+0xccc8>
   2c98c:	bl	aa00 <free@plt>
   2c990:	mov	x0, x19
   2c994:	ldr	x19, [sp, #16]
   2c998:	ldp	x29, x30, [sp], #32
   2c99c:	b	aa00 <free@plt>
   2c9a0:	ldr	w0, [x0]
   2c9a4:	ret
   2c9a8:	stp	x29, x30, [sp, #-80]!
   2c9ac:	stp	x24, x23, [sp, #32]
   2c9b0:	stp	x22, x21, [sp, #48]
   2c9b4:	stp	x20, x19, [sp, #64]
   2c9b8:	ldr	w9, [x0, #4]
   2c9bc:	ldr	w8, [x1, #4]
   2c9c0:	str	x25, [sp, #16]
   2c9c4:	mov	x29, sp
   2c9c8:	cmn	w9, w8
   2c9cc:	b.ne	2c9d8 <get_python_format_unnamed_arg_count@@Base+0xcd10>  // b.any
   2c9d0:	mov	w0, wzr
   2c9d4:	b	2cb6c <get_python_format_unnamed_arg_count@@Base+0xcea4>
   2c9d8:	mov	x20, x5
   2c9dc:	mov	x21, x4
   2c9e0:	mov	x19, x3
   2c9e4:	mov	x22, x1
   2c9e8:	mov	x23, x0
   2c9ec:	orr	w10, w8, w9
   2c9f0:	cbz	w10, 2ca6c <get_python_format_unnamed_arg_count@@Base+0xcda4>
   2c9f4:	cmp	w8, #0x0
   2c9f8:	cset	w11, ne  // ne = any
   2c9fc:	cmp	w9, #0x0
   2ca00:	mov	x10, xzr
   2ca04:	mov	x24, xzr
   2ca08:	mov	w25, wzr
   2ca0c:	cset	w12, ne  // ne = any
   2ca10:	tbz	w12, #0, 2cacc <get_python_format_unnamed_arg_count@@Base+0xce04>
   2ca14:	tbz	w11, #0, 2ca3c <get_python_format_unnamed_arg_count@@Base+0xcd74>
   2ca18:	ldr	x11, [x23, #16]
   2ca1c:	ldr	x12, [x22, #16]
   2ca20:	mov	w13, w25
   2ca24:	lsl	x13, x13, #3
   2ca28:	ldr	w11, [x11, x10]
   2ca2c:	ldr	w12, [x12, x13]
   2ca30:	cmp	w11, w12
   2ca34:	b.hi	2cacc <get_python_format_unnamed_arg_count@@Base+0xce04>  // b.pmore
   2ca38:	b.cs	2ca44 <get_python_format_unnamed_arg_count@@Base+0xcd7c>  // b.hs, b.nlast
   2ca3c:	tbz	w2, #0, 2ca48 <get_python_format_unnamed_arg_count@@Base+0xcd80>
   2ca40:	b	2cb04 <get_python_format_unnamed_arg_count@@Base+0xce3c>
   2ca44:	add	w25, w25, #0x1
   2ca48:	add	x24, x24, #0x1
   2ca4c:	cmp	x24, x9
   2ca50:	cset	w12, cc  // cc = lo, ul, last
   2ca54:	cmp	w25, w8
   2ca58:	cset	w11, cc  // cc = lo, ul, last
   2ca5c:	add	x10, x10, #0x8
   2ca60:	b.cc	2ca10 <get_python_format_unnamed_arg_count@@Base+0xcd48>  // b.lo, b.ul, b.last
   2ca64:	cmp	x24, x9
   2ca68:	b.cc	2ca10 <get_python_format_unnamed_arg_count@@Base+0xcd48>  // b.lo, b.ul, b.last
   2ca6c:	cbz	w8, 2c9d0 <get_python_format_unnamed_arg_count@@Base+0xcd08>
   2ca70:	ldr	x9, [x23, #16]
   2ca74:	ldr	x10, [x22, #16]
   2ca78:	mov	w12, wzr
   2ca7c:	mov	w11, wzr
   2ca80:	mov	w12, w12
   2ca84:	mov	w23, w11
   2ca88:	lsl	x13, x12, #3
   2ca8c:	lsl	x14, x23, #3
   2ca90:	ldr	w13, [x9, x13]
   2ca94:	ldr	w14, [x10, x14]
   2ca98:	cmp	w13, w14
   2ca9c:	b.ne	2cabc <get_python_format_unnamed_arg_count@@Base+0xcdf4>  // b.any
   2caa0:	add	x13, x9, x12, lsl #3
   2caa4:	add	x14, x10, x23, lsl #3
   2caa8:	ldr	w13, [x13, #4]
   2caac:	ldr	w14, [x14, #4]
   2cab0:	cmp	w13, w14
   2cab4:	b.ne	2cb38 <get_python_format_unnamed_arg_count@@Base+0xce70>  // b.any
   2cab8:	add	w11, w11, #0x1
   2cabc:	cmp	w11, w8
   2cac0:	add	w12, w12, #0x1
   2cac4:	b.cc	2ca80 <get_python_format_unnamed_arg_count@@Base+0xcdb8>  // b.lo, b.ul, b.last
   2cac8:	b	2c9d0 <get_python_format_unnamed_arg_count@@Base+0xcd08>
   2cacc:	cbz	x19, 2cb68 <get_python_format_unnamed_arg_count@@Base+0xcea0>
   2cad0:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2cad4:	add	x1, x1, #0x333
   2cad8:	mov	w2, #0x5                   	// #5
   2cadc:	mov	x0, xzr
   2cae0:	bl	acd0 <dcgettext@plt>
   2cae4:	ldr	x8, [x22, #16]
   2cae8:	mov	w9, w25
   2caec:	lsl	x9, x9, #3
   2caf0:	mov	x2, x20
   2caf4:	ldr	w1, [x8, x9]
   2caf8:	mov	x3, x21
   2cafc:	blr	x19
   2cb00:	b	2cb68 <get_python_format_unnamed_arg_count@@Base+0xcea0>
   2cb04:	cbz	x19, 2cb68 <get_python_format_unnamed_arg_count@@Base+0xcea0>
   2cb08:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2cb0c:	add	x1, x1, #0x37d
   2cb10:	mov	w2, #0x5                   	// #5
   2cb14:	mov	x0, xzr
   2cb18:	bl	acd0 <dcgettext@plt>
   2cb1c:	ldr	x8, [x23, #16]
   2cb20:	and	x9, x24, #0xffffffff
   2cb24:	lsl	x9, x9, #3
   2cb28:	mov	x2, x20
   2cb2c:	ldr	w1, [x8, x9]
   2cb30:	blr	x19
   2cb34:	b	2cb68 <get_python_format_unnamed_arg_count@@Base+0xcea0>
   2cb38:	cbz	x19, 2cb68 <get_python_format_unnamed_arg_count@@Base+0xcea0>
   2cb3c:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2cb40:	add	x1, x1, #0x546
   2cb44:	mov	w2, #0x5                   	// #5
   2cb48:	mov	x0, xzr
   2cb4c:	bl	acd0 <dcgettext@plt>
   2cb50:	ldr	x8, [x22, #16]
   2cb54:	lsl	x9, x23, #3
   2cb58:	mov	x1, x21
   2cb5c:	mov	x2, x20
   2cb60:	ldr	w3, [x8, x9]
   2cb64:	blr	x19
   2cb68:	mov	w0, #0x1                   	// #1
   2cb6c:	ldp	x20, x19, [sp, #64]
   2cb70:	ldp	x22, x21, [sp, #48]
   2cb74:	ldp	x24, x23, [sp, #32]
   2cb78:	ldr	x25, [sp, #16]
   2cb7c:	ldp	x29, x30, [sp], #80
   2cb80:	ret
   2cb84:	ldr	w8, [x0]
   2cb88:	ldr	w9, [x1]
   2cb8c:	cmp	w8, w9
   2cb90:	csetm	w8, cc  // cc = lo, ul, last
   2cb94:	csinc	w0, w8, wzr, ls  // ls = plast
   2cb98:	ret
   2cb9c:	sub	sp, sp, #0x60
   2cba0:	stp	x29, x30, [sp, #32]
   2cba4:	stp	x24, x23, [sp, #48]
   2cba8:	stp	x22, x21, [sp, #64]
   2cbac:	stp	x20, x19, [sp, #80]
   2cbb0:	str	xzr, [sp, #8]
   2cbb4:	ldrb	w11, [x0]
   2cbb8:	add	x29, sp, #0x20
   2cbbc:	cbz	w11, 2cc74 <get_python_format_unnamed_arg_count@@Base+0xcfac>
   2cbc0:	mov	x21, x3
   2cbc4:	mov	x20, x0
   2cbc8:	mov	x19, x2
   2cbcc:	mov	w8, wzr
   2cbd0:	mov	w22, wzr
   2cbd4:	add	x9, sp, #0x8
   2cbd8:	mov	w10, #0x1                   	// #1
   2cbdc:	mov	x23, x0
   2cbe0:	and	w11, w11, #0xff
   2cbe4:	cmp	w11, #0x25
   2cbe8:	add	x24, x23, #0x1
   2cbec:	b.ne	2cc68 <get_python_format_unnamed_arg_count@@Base+0xcfa0>  // b.any
   2cbf0:	cbz	x19, 2cc04 <get_python_format_unnamed_arg_count@@Base+0xcf3c>
   2cbf4:	sub	x11, x23, x20
   2cbf8:	ldrb	w12, [x19, x11]
   2cbfc:	orr	w12, w12, #0x1
   2cc00:	strb	w12, [x19, x11]
   2cc04:	add	w22, w22, #0x1
   2cc08:	str	w22, [sp, #8]
   2cc0c:	ldrb	w12, [x24]
   2cc10:	cmp	w12, #0x25
   2cc14:	b.eq	2cc4c <get_python_format_unnamed_arg_count@@Base+0xcf84>  // b.none
   2cc18:	sub	w11, w12, #0x31
   2cc1c:	cmp	w11, #0x8
   2cc20:	b.hi	2cca4 <get_python_format_unnamed_arg_count@@Base+0xcfdc>  // b.pmore
   2cc24:	cmp	w8, w11
   2cc28:	b.hi	2cc44 <get_python_format_unnamed_arg_count@@Base+0xcf7c>  // b.pmore
   2cc2c:	add	x12, x9, w8, uxtw
   2cc30:	add	w8, w8, #0x1
   2cc34:	cmp	w8, w11
   2cc38:	strb	wzr, [x12, #8]
   2cc3c:	b.ls	2cc2c <get_python_format_unnamed_arg_count@@Base+0xcf64>  // b.plast
   2cc40:	str	w8, [sp, #12]
   2cc44:	add	x11, x9, x11
   2cc48:	strb	w10, [x11, #8]
   2cc4c:	add	x23, x23, #0x2
   2cc50:	cbz	x19, 2cc6c <get_python_format_unnamed_arg_count@@Base+0xcfa4>
   2cc54:	sub	x11, x24, x20
   2cc58:	ldrb	w12, [x19, x11]
   2cc5c:	orr	w12, w12, #0x2
   2cc60:	strb	w12, [x19, x11]
   2cc64:	b	2cc6c <get_python_format_unnamed_arg_count@@Base+0xcfa4>
   2cc68:	mov	x23, x24
   2cc6c:	ldrb	w11, [x23]
   2cc70:	cbnz	w11, 2cbe0 <get_python_format_unnamed_arg_count@@Base+0xcf18>
   2cc74:	mov	w0, #0x14                  	// #20
   2cc78:	bl	a590 <xmalloc@plt>
   2cc7c:	ldur	q0, [sp, #8]
   2cc80:	ldr	w8, [sp, #24]
   2cc84:	str	q0, [x0]
   2cc88:	str	w8, [x0, #16]
   2cc8c:	ldp	x20, x19, [sp, #80]
   2cc90:	ldp	x22, x21, [sp, #64]
   2cc94:	ldp	x24, x23, [sp, #48]
   2cc98:	ldp	x29, x30, [sp, #32]
   2cc9c:	add	sp, sp, #0x60
   2cca0:	ret
   2cca4:	cbz	w12, 2ccd8 <get_python_format_unnamed_arg_count@@Base+0xd010>
   2cca8:	sub	w8, w12, #0x20
   2ccac:	cmp	w8, #0x5e
   2ccb0:	b.hi	2cd04 <get_python_format_unnamed_arg_count@@Base+0xd03c>  // b.pmore
   2ccb4:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2ccb8:	add	x1, x1, #0xa2c
   2ccbc:	mov	w2, #0x5                   	// #5
   2ccc0:	mov	x0, xzr
   2ccc4:	bl	acd0 <dcgettext@plt>
   2ccc8:	ldrb	w2, [x24]
   2cccc:	mov	w1, w22
   2ccd0:	bl	aa20 <xasprintf@plt>
   2ccd4:	b	2cd20 <get_python_format_unnamed_arg_count@@Base+0xd058>
   2ccd8:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2ccdc:	add	x1, x1, #0x7e0
   2cce0:	mov	w2, #0x5                   	// #5
   2cce4:	mov	x0, xzr
   2cce8:	bl	acd0 <dcgettext@plt>
   2ccec:	bl	a5a0 <xstrdup@plt>
   2ccf0:	str	x0, [x21]
   2ccf4:	cbz	x19, 2cd40 <get_python_format_unnamed_arg_count@@Base+0xd078>
   2ccf8:	mov	x0, xzr
   2ccfc:	sub	x8, x23, x20
   2cd00:	b	2cd30 <get_python_format_unnamed_arg_count@@Base+0xd068>
   2cd04:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2cd08:	add	x1, x1, #0xa7b
   2cd0c:	mov	w2, #0x5                   	// #5
   2cd10:	mov	x0, xzr
   2cd14:	bl	acd0 <dcgettext@plt>
   2cd18:	mov	w1, w22
   2cd1c:	bl	aa20 <xasprintf@plt>
   2cd20:	str	x0, [x21]
   2cd24:	cbz	x19, 2cd40 <get_python_format_unnamed_arg_count@@Base+0xd078>
   2cd28:	mov	x0, xzr
   2cd2c:	sub	x8, x24, x20
   2cd30:	ldrb	w9, [x19, x8]
   2cd34:	orr	w9, w9, #0x4
   2cd38:	strb	w9, [x19, x8]
   2cd3c:	b	2cc8c <get_python_format_unnamed_arg_count@@Base+0xcfc4>
   2cd40:	mov	x0, xzr
   2cd44:	b	2cc8c <get_python_format_unnamed_arg_count@@Base+0xcfc4>
   2cd48:	b	aa00 <free@plt>
   2cd4c:	ldr	w0, [x0]
   2cd50:	ret
   2cd54:	stp	x29, x30, [sp, #-48]!
   2cd58:	stp	x22, x21, [sp, #16]
   2cd5c:	stp	x20, x19, [sp, #32]
   2cd60:	ldr	w8, [x0, #4]
   2cd64:	mov	x20, x5
   2cd68:	mov	x21, x4
   2cd6c:	mov	x19, x3
   2cd70:	mov	x22, xzr
   2cd74:	add	x9, x0, #0x8
   2cd78:	add	x10, x1, #0x8
   2cd7c:	mov	x29, sp
   2cd80:	cmp	x22, x8
   2cd84:	b.cs	2cd9c <get_python_format_unnamed_arg_count@@Base+0xd0d4>  // b.hs, b.nlast
   2cd88:	ldrb	w11, [x9, x22]
   2cd8c:	ldr	w12, [x1, #4]
   2cd90:	cmp	w11, #0x0
   2cd94:	cset	w11, ne  // ne = any
   2cd98:	b	2cdb0 <get_python_format_unnamed_arg_count@@Base+0xd0e8>
   2cd9c:	ldr	w12, [x1, #4]
   2cda0:	mov	w11, wzr
   2cda4:	mov	w0, wzr
   2cda8:	cmp	x22, x12
   2cdac:	b.cs	2ce48 <get_python_format_unnamed_arg_count@@Base+0xd180>  // b.hs, b.nlast
   2cdb0:	cmp	x22, x12
   2cdb4:	b.cs	2cdd8 <get_python_format_unnamed_arg_count@@Base+0xd110>  // b.hs, b.nlast
   2cdb8:	ldrb	w12, [x10, x22]
   2cdbc:	cmp	w12, #0x0
   2cdc0:	cset	w12, ne  // ne = any
   2cdc4:	tbnz	w2, #0, 2cde0 <get_python_format_unnamed_arg_count@@Base+0xd118>
   2cdc8:	eor	w12, w12, #0x1
   2cdcc:	orr	w11, w11, w12
   2cdd0:	tbnz	w11, #0, 2cde8 <get_python_format_unnamed_arg_count@@Base+0xd120>
   2cdd4:	b	2cdf0 <get_python_format_unnamed_arg_count@@Base+0xd128>
   2cdd8:	mov	w12, wzr
   2cddc:	tbz	w2, #0, 2cdc8 <get_python_format_unnamed_arg_count@@Base+0xd100>
   2cde0:	cmp	w11, w12
   2cde4:	b.ne	2cdf4 <get_python_format_unnamed_arg_count@@Base+0xd12c>  // b.any
   2cde8:	add	x22, x22, #0x1
   2cdec:	b	2cd80 <get_python_format_unnamed_arg_count@@Base+0xd0b8>
   2cdf0:	mov	w11, wzr
   2cdf4:	cbz	x19, 2ce44 <get_python_format_unnamed_arg_count@@Base+0xd17c>
   2cdf8:	cbz	w11, 2ce20 <get_python_format_unnamed_arg_count@@Base+0xd158>
   2cdfc:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2ce00:	add	x1, x1, #0x37d
   2ce04:	mov	w2, #0x5                   	// #5
   2ce08:	mov	x0, xzr
   2ce0c:	bl	acd0 <dcgettext@plt>
   2ce10:	add	w1, w22, #0x1
   2ce14:	mov	x2, x20
   2ce18:	blr	x19
   2ce1c:	b	2ce44 <get_python_format_unnamed_arg_count@@Base+0xd17c>
   2ce20:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2ce24:	add	x1, x1, #0x333
   2ce28:	mov	w2, #0x5                   	// #5
   2ce2c:	mov	x0, xzr
   2ce30:	bl	acd0 <dcgettext@plt>
   2ce34:	add	w1, w22, #0x1
   2ce38:	mov	x2, x20
   2ce3c:	mov	x3, x21
   2ce40:	blr	x19
   2ce44:	mov	w0, #0x1                   	// #1
   2ce48:	ldp	x20, x19, [sp, #32]
   2ce4c:	ldp	x22, x21, [sp, #16]
   2ce50:	ldp	x29, x30, [sp], #48
   2ce54:	ret
   2ce58:	sub	sp, sp, #0x80
   2ce5c:	stp	x29, x30, [sp, #32]
   2ce60:	stp	x28, x27, [sp, #48]
   2ce64:	stp	x26, x25, [sp, #64]
   2ce68:	stp	x24, x23, [sp, #80]
   2ce6c:	stp	x22, x21, [sp, #96]
   2ce70:	stp	x20, x19, [sp, #112]
   2ce74:	ldrb	w9, [x0]
   2ce78:	add	x29, sp, #0x20
   2ce7c:	cbz	w9, 2d280 <get_python_format_unnamed_arg_count@@Base+0xd5b8>
   2ce80:	adrp	x20, 3a000 <plural_table_size@@Base+0xc00>
   2ce84:	mov	x22, x2
   2ce88:	mov	w13, wzr
   2ce8c:	mov	x19, xzr
   2ce90:	mov	w28, wzr
   2ce94:	mov	w24, wzr
   2ce98:	mov	w25, wzr
   2ce9c:	mov	w8, #0x1                   	// #1
   2cea0:	mov	w27, #0xa                   	// #10
   2cea4:	add	x20, x20, #0xad1
   2cea8:	mov	x26, x0
   2ceac:	str	x3, [sp, #8]
   2ceb0:	stur	wzr, [x29, #-8]
   2ceb4:	str	x0, [sp, #16]
   2ceb8:	and	w9, w9, #0xff
   2cebc:	cmp	w9, #0x25
   2cec0:	add	x21, x26, #0x1
   2cec4:	b.ne	2d184 <get_python_format_unnamed_arg_count@@Base+0xd4bc>  // b.any
   2cec8:	cbz	x22, 2cedc <get_python_format_unnamed_arg_count@@Base+0xd214>
   2cecc:	sub	x9, x26, x0
   2ced0:	ldrb	w10, [x22, x9]
   2ced4:	orr	w10, w10, #0x1
   2ced8:	strb	w10, [x22, x9]
   2cedc:	ldrb	w9, [x21]
   2cee0:	add	w28, w28, #0x1
   2cee4:	cmp	w9, #0x25
   2cee8:	b.eq	2d16c <get_python_format_unnamed_arg_count@@Base+0xd4a4>  // b.none
   2ceec:	sub	w10, w9, #0x30
   2cef0:	cmp	w10, #0x9
   2cef4:	stur	w28, [x29, #-4]
   2cef8:	b.hi	2cf40 <get_python_format_unnamed_arg_count@@Base+0xd278>  // b.pmore
   2cefc:	mov	w28, wzr
   2cf00:	add	x23, x26, #0x2
   2cf04:	mul	w10, w28, w27
   2cf08:	add	w10, w10, w9, uxtb
   2cf0c:	ldrb	w9, [x23], #1
   2cf10:	sub	w28, w10, #0x30
   2cf14:	sub	w11, w9, #0x30
   2cf18:	cmp	w11, #0xa
   2cf1c:	b.cc	2cf04 <get_python_format_unnamed_arg_count@@Base+0xd23c>  // b.lo, b.ul, b.last
   2cf20:	cmp	w9, #0x24
   2cf24:	b.ne	2cf40 <get_python_format_unnamed_arg_count@@Base+0xd278>  // b.any
   2cf28:	cbz	w28, 2d380 <get_python_format_unnamed_arg_count@@Base+0xd6b8>
   2cf2c:	ldur	w8, [x29, #-8]
   2cf30:	tbnz	w8, #0, 2d3a0 <get_python_format_unnamed_arg_count@@Base+0xd6d8>
   2cf34:	stur	wzr, [x29, #-8]
   2cf38:	mov	w13, #0x1                   	// #1
   2cf3c:	b	2cf58 <get_python_format_unnamed_arg_count@@Base+0xd290>
   2cf40:	tbnz	w13, #0, 2d2ec <get_python_format_unnamed_arg_count@@Base+0xd624>
   2cf44:	mov	w13, wzr
   2cf48:	mov	w9, #0x1                   	// #1
   2cf4c:	mov	w28, w8
   2cf50:	mov	x23, x21
   2cf54:	stur	w9, [x29, #-8]
   2cf58:	add	x26, x23, #0x1
   2cf5c:	ldurb	w8, [x26, #-1]
   2cf60:	sub	w9, w8, #0x2a
   2cf64:	cmp	w9, #0x6
   2cf68:	b.hi	2cf7c <get_python_format_unnamed_arg_count@@Base+0xd2b4>  // b.pmore
   2cf6c:	adr	x10, 2cf8c <get_python_format_unnamed_arg_count@@Base+0xd2c4>
   2cf70:	ldrb	w11, [x20, x9]
   2cf74:	add	x10, x10, x11, lsl #2
   2cf78:	br	x10
   2cf7c:	cmp	w8, #0x23
   2cf80:	b.eq	2cf8c <get_python_format_unnamed_arg_count@@Base+0xd2c4>  // b.none
   2cf84:	cmp	w8, #0x20
   2cf88:	b.ne	2cf94 <get_python_format_unnamed_arg_count@@Base+0xd2cc>  // b.any
   2cf8c:	add	x26, x26, #0x1
   2cf90:	b	2cf5c <get_python_format_unnamed_arg_count@@Base+0xd294>
   2cf94:	sub	w9, w8, #0x30
   2cf98:	cmp	w9, #0x9
   2cf9c:	sub	x26, x26, #0x1
   2cfa0:	b.hi	2cffc <get_python_format_unnamed_arg_count@@Base+0xd334>  // b.pmore
   2cfa4:	ldrb	w8, [x26, #1]!
   2cfa8:	sub	w9, w8, #0x30
   2cfac:	cmp	w9, #0xa
   2cfb0:	b.cc	2cfa4 <get_python_format_unnamed_arg_count@@Base+0xd2dc>  // b.lo, b.ul, b.last
   2cfb4:	b	2cffc <get_python_format_unnamed_arg_count@@Base+0xd334>
   2cfb8:	cmp	w25, w24
   2cfbc:	b.ne	2cfe4 <get_python_format_unnamed_arg_count@@Base+0xd31c>  // b.any
   2cfc0:	mov	w25, #0x1                   	// #1
   2cfc4:	bfi	w25, w24, #1, #31
   2cfc8:	lsl	x1, x25, #3
   2cfcc:	mov	x0, x19
   2cfd0:	mov	w19, w13
   2cfd4:	bl	a460 <xrealloc@plt>
   2cfd8:	mov	w13, w19
   2cfdc:	mov	x19, x0
   2cfe0:	ldr	x0, [sp, #16]
   2cfe4:	add	x8, x19, w24, uxtw #3
   2cfe8:	mov	w9, #0x3                   	// #3
   2cfec:	stp	w28, w9, [x8]
   2cff0:	ldrb	w8, [x26]
   2cff4:	add	w24, w24, #0x1
   2cff8:	add	w28, w28, #0x1
   2cffc:	cmp	w8, #0x2e
   2d000:	b.ne	2d064 <get_python_format_unnamed_arg_count@@Base+0xd39c>  // b.any
   2d004:	mov	x21, x26
   2d008:	ldrb	w8, [x21, #1]!
   2d00c:	cmp	w8, #0x2a
   2d010:	b.ne	2d06c <get_python_format_unnamed_arg_count@@Base+0xd3a4>  // b.any
   2d014:	cmp	w25, w24
   2d018:	add	x21, x26, #0x2
   2d01c:	b.ne	2d048 <get_python_format_unnamed_arg_count@@Base+0xd380>  // b.any
   2d020:	mov	w23, #0x1                   	// #1
   2d024:	bfi	w23, w25, #1, #31
   2d028:	lsl	x1, x23, #3
   2d02c:	mov	x0, x19
   2d030:	mov	w19, w13
   2d034:	bl	a460 <xrealloc@plt>
   2d038:	mov	w13, w19
   2d03c:	mov	x19, x0
   2d040:	ldr	x0, [sp, #16]
   2d044:	mov	w25, w23
   2d048:	add	x8, x19, w24, uxtw #3
   2d04c:	mov	w9, #0x3                   	// #3
   2d050:	stp	w28, w9, [x8]
   2d054:	ldrb	w8, [x21]
   2d058:	add	w24, w24, #0x1
   2d05c:	add	w28, w28, #0x1
   2d060:	b	2d088 <get_python_format_unnamed_arg_count@@Base+0xd3c0>
   2d064:	mov	x21, x26
   2d068:	b	2d088 <get_python_format_unnamed_arg_count@@Base+0xd3c0>
   2d06c:	sub	w9, w8, #0x30
   2d070:	cmp	w9, #0x9
   2d074:	b.hi	2d088 <get_python_format_unnamed_arg_count@@Base+0xd3c0>  // b.pmore
   2d078:	ldrb	w8, [x21, #1]!
   2d07c:	sub	w9, w8, #0x30
   2d080:	cmp	w9, #0xa
   2d084:	b.cc	2d078 <get_python_format_unnamed_arg_count@@Base+0xd3b0>  // b.lo, b.ul, b.last
   2d088:	cmp	w8, #0x6c
   2d08c:	b.eq	2d0a4 <get_python_format_unnamed_arg_count@@Base+0xd3dc>  // b.none
   2d090:	cmp	w8, #0x68
   2d094:	b.ne	2d0b0 <get_python_format_unnamed_arg_count@@Base+0xd3e8>  // b.any
   2d098:	add	x21, x21, #0x1
   2d09c:	mov	w8, #0x1                   	// #1
   2d0a0:	b	2d0b4 <get_python_format_unnamed_arg_count@@Base+0xd3ec>
   2d0a4:	mov	w8, wzr
   2d0a8:	add	x21, x21, #0x1
   2d0ac:	b	2d0b4 <get_python_format_unnamed_arg_count@@Base+0xd3ec>
   2d0b0:	mov	w8, wzr
   2d0b4:	ldrb	w9, [x21]
   2d0b8:	cmp	w9, #0x57
   2d0bc:	b.le	2d0f8 <get_python_format_unnamed_arg_count@@Base+0xd430>
   2d0c0:	sub	w10, w9, #0x63
   2d0c4:	cmp	w10, #0x15
   2d0c8:	b.hi	2d110 <get_python_format_unnamed_arg_count@@Base+0xd448>  // b.pmore
   2d0cc:	adrp	x14, 3a000 <plural_table_size@@Base+0xc00>
   2d0d0:	add	x14, x14, #0xad8
   2d0d4:	adr	x11, 2d0e8 <get_python_format_unnamed_arg_count@@Base+0xd420>
   2d0d8:	ldrb	w12, [x14, x10]
   2d0dc:	add	x11, x11, x12, lsl #2
   2d0e0:	mov	w23, #0x1                   	// #1
   2d0e4:	br	x11
   2d0e8:	cmp	w8, #0x0
   2d0ec:	mov	w8, #0x3                   	// #3
   2d0f0:	mov	w9, #0x5                   	// #5
   2d0f4:	b	2d124 <get_python_format_unnamed_arg_count@@Base+0xd45c>
   2d0f8:	cmp	w9, #0x45
   2d0fc:	b.eq	2d108 <get_python_format_unnamed_arg_count@@Base+0xd440>  // b.none
   2d100:	cmp	w9, #0x47
   2d104:	b.ne	2d2a8 <get_python_format_unnamed_arg_count@@Base+0xd5e0>  // b.any
   2d108:	mov	w23, #0x7                   	// #7
   2d10c:	b	2d128 <get_python_format_unnamed_arg_count@@Base+0xd460>
   2d110:	cmp	w9, #0x58
   2d114:	b.ne	2d31c <get_python_format_unnamed_arg_count@@Base+0xd654>  // b.any
   2d118:	cmp	w8, #0x0
   2d11c:	mov	w8, #0x4                   	// #4
   2d120:	mov	w9, #0x6                   	// #6
   2d124:	csel	w23, w9, w8, ne  // ne = any
   2d128:	cmp	w25, w24
   2d12c:	b.ne	2d158 <get_python_format_unnamed_arg_count@@Base+0xd490>  // b.any
   2d130:	mov	w26, #0x1                   	// #1
   2d134:	bfi	w26, w25, #1, #31
   2d138:	lsl	x1, x26, #3
   2d13c:	mov	x0, x19
   2d140:	mov	w19, w13
   2d144:	bl	a460 <xrealloc@plt>
   2d148:	mov	w13, w19
   2d14c:	mov	x19, x0
   2d150:	ldr	x0, [sp, #16]
   2d154:	mov	w25, w26
   2d158:	add	x8, x19, w24, uxtw #3
   2d15c:	stp	w28, w23, [x8]
   2d160:	add	w8, w28, #0x1
   2d164:	ldur	w28, [x29, #-4]
   2d168:	add	w24, w24, #0x1
   2d16c:	cbz	x22, 2d180 <get_python_format_unnamed_arg_count@@Base+0xd4b8>
   2d170:	sub	x9, x21, x0
   2d174:	ldrb	w10, [x22, x9]
   2d178:	orr	w10, w10, #0x2
   2d17c:	strb	w10, [x22, x9]
   2d180:	add	x21, x21, #0x1
   2d184:	ldrb	w9, [x21]
   2d188:	mov	x26, x21
   2d18c:	cbnz	w9, 2ceb8 <get_python_format_unnamed_arg_count@@Base+0xd1f0>
   2d190:	b	2d19c <get_python_format_unnamed_arg_count@@Base+0xd4d4>
   2d194:	mov	w23, #0x2                   	// #2
   2d198:	b	2d128 <get_python_format_unnamed_arg_count@@Base+0xd460>
   2d19c:	cmp	w24, #0x2
   2d1a0:	b.cc	2d290 <get_python_format_unnamed_arg_count@@Base+0xd5c8>  // b.lo, b.ul, b.last
   2d1a4:	mov	w22, w24
   2d1a8:	adrp	x3, 2d000 <get_python_format_unnamed_arg_count@@Base+0xd338>
   2d1ac:	add	x3, x3, #0x61c
   2d1b0:	mov	w2, #0x8                   	// #8
   2d1b4:	mov	x0, x19
   2d1b8:	mov	x1, x22
   2d1bc:	bl	a2f0 <qsort@plt>
   2d1c0:	ldr	x27, [sp, #8]
   2d1c4:	adrp	x23, 39000 <get_search_path@@Base+0x2b4c>
   2d1c8:	mov	x20, xzr
   2d1cc:	mov	w8, wzr
   2d1d0:	mov	w24, wzr
   2d1d4:	add	x23, x23, #0x8bd
   2d1d8:	mov	x26, x19
   2d1dc:	cbz	w24, 2d224 <get_python_format_unnamed_arg_count@@Base+0xd55c>
   2d1e0:	sub	w9, w24, #0x1
   2d1e4:	lsl	x11, x9, #3
   2d1e8:	ldr	w10, [x26]
   2d1ec:	ldr	w11, [x19, x11]
   2d1f0:	cmp	w10, w11
   2d1f4:	b.ne	2d224 <get_python_format_unnamed_arg_count@@Base+0xd55c>  // b.any
   2d1f8:	add	x21, x19, x9, lsl #3
   2d1fc:	ldr	w11, [x26, #4]
   2d200:	ldr	w9, [x21, #4]!
   2d204:	cmp	w11, w9
   2d208:	cset	w9, eq  // eq = none
   2d20c:	cset	w10, ne  // ne = any
   2d210:	orr	w12, w8, w9
   2d214:	csel	w9, w11, wzr, eq  // eq = none
   2d218:	tbz	w12, #0, 2d240 <get_python_format_unnamed_arg_count@@Base+0xd578>
   2d21c:	orr	w8, w8, w10
   2d220:	b	2d264 <get_python_format_unnamed_arg_count@@Base+0xd59c>
   2d224:	cmp	x20, w24, uxtw
   2d228:	b.ls	2d238 <get_python_format_unnamed_arg_count@@Base+0xd570>  // b.plast
   2d22c:	ldr	x9, [x26]
   2d230:	mov	w10, w24
   2d234:	str	x9, [x19, x10, lsl #3]
   2d238:	add	w24, w24, #0x1
   2d23c:	b	2d268 <get_python_format_unnamed_arg_count@@Base+0xd5a0>
   2d240:	mov	w2, #0x5                   	// #5
   2d244:	mov	x0, xzr
   2d248:	mov	x1, x23
   2d24c:	bl	acd0 <dcgettext@plt>
   2d250:	ldr	w1, [x26]
   2d254:	bl	aa20 <xasprintf@plt>
   2d258:	mov	w9, wzr
   2d25c:	mov	w8, #0x1                   	// #1
   2d260:	str	x0, [x27]
   2d264:	str	w9, [x21]
   2d268:	add	x20, x20, #0x1
   2d26c:	cmp	x22, x20
   2d270:	add	x26, x26, #0x8
   2d274:	b.ne	2d1dc <get_python_format_unnamed_arg_count@@Base+0xd514>  // b.any
   2d278:	tbz	w8, #0, 2d290 <get_python_format_unnamed_arg_count@@Base+0xd5c8>
   2d27c:	b	2d3dc <get_python_format_unnamed_arg_count@@Base+0xd714>
   2d280:	mov	x19, xzr
   2d284:	mov	w28, wzr
   2d288:	mov	w25, wzr
   2d28c:	mov	w24, wzr
   2d290:	mov	w0, #0x18                  	// #24
   2d294:	bl	a590 <xmalloc@plt>
   2d298:	stp	w28, w24, [x0]
   2d29c:	str	w25, [x0, #8]
   2d2a0:	str	x19, [x0, #16]
   2d2a4:	b	2d3ec <get_python_format_unnamed_arg_count@@Base+0xd724>
   2d2a8:	cbnz	w9, 2d31c <get_python_format_unnamed_arg_count@@Base+0xd654>
   2d2ac:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2d2b0:	add	x1, x1, #0x7e0
   2d2b4:	mov	w2, #0x5                   	// #5
   2d2b8:	mov	x0, xzr
   2d2bc:	bl	acd0 <dcgettext@plt>
   2d2c0:	bl	a5a0 <xstrdup@plt>
   2d2c4:	ldr	x8, [sp, #8]
   2d2c8:	str	x0, [x8]
   2d2cc:	cbz	x22, 2d3dc <get_python_format_unnamed_arg_count@@Base+0xd714>
   2d2d0:	ldr	x8, [sp, #16]
   2d2d4:	sub	x8, x21, x8
   2d2d8:	add	x8, x8, x22
   2d2dc:	ldurb	w9, [x8, #-1]
   2d2e0:	orr	w9, w9, #0x4
   2d2e4:	sturb	w9, [x8, #-1]
   2d2e8:	b	2d3dc <get_python_format_unnamed_arg_count@@Base+0xd714>
   2d2ec:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2d2f0:	add	x1, x1, #0x630
   2d2f4:	mov	w2, #0x5                   	// #5
   2d2f8:	mov	x0, xzr
   2d2fc:	bl	acd0 <dcgettext@plt>
   2d300:	bl	a5a0 <xstrdup@plt>
   2d304:	ldr	x8, [sp, #8]
   2d308:	str	x0, [x8]
   2d30c:	cbz	x22, 2d3dc <get_python_format_unnamed_arg_count@@Base+0xd714>
   2d310:	ldr	x8, [sp, #16]
   2d314:	sub	x8, x26, x8
   2d318:	b	2d3d0 <get_python_format_unnamed_arg_count@@Base+0xd708>
   2d31c:	sub	w8, w9, #0x20
   2d320:	cmp	w8, #0x5e
   2d324:	b.hi	2d34c <get_python_format_unnamed_arg_count@@Base+0xd684>  // b.pmore
   2d328:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2d32c:	add	x1, x1, #0x80e
   2d330:	mov	w2, #0x5                   	// #5
   2d334:	mov	x0, xzr
   2d338:	bl	acd0 <dcgettext@plt>
   2d33c:	ldrb	w2, [x21]
   2d340:	ldur	w1, [x29, #-4]
   2d344:	bl	aa20 <xasprintf@plt>
   2d348:	b	2d368 <get_python_format_unnamed_arg_count@@Base+0xd6a0>
   2d34c:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2d350:	add	x1, x1, #0x862
   2d354:	mov	w2, #0x5                   	// #5
   2d358:	mov	x0, xzr
   2d35c:	bl	acd0 <dcgettext@plt>
   2d360:	ldur	w1, [x29, #-4]
   2d364:	bl	aa20 <xasprintf@plt>
   2d368:	ldr	x8, [sp, #8]
   2d36c:	str	x0, [x8]
   2d370:	cbz	x22, 2d3dc <get_python_format_unnamed_arg_count@@Base+0xd714>
   2d374:	ldr	x8, [sp, #16]
   2d378:	sub	x8, x21, x8
   2d37c:	b	2d3d0 <get_python_format_unnamed_arg_count@@Base+0xd708>
   2d380:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2d384:	add	x1, x1, #0x58e
   2d388:	mov	w2, #0x5                   	// #5
   2d38c:	mov	x0, xzr
   2d390:	bl	acd0 <dcgettext@plt>
   2d394:	ldur	w1, [x29, #-4]
   2d398:	bl	aa20 <xasprintf@plt>
   2d39c:	b	2d3b8 <get_python_format_unnamed_arg_count@@Base+0xd6f0>
   2d3a0:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2d3a4:	add	x1, x1, #0x630
   2d3a8:	mov	w2, #0x5                   	// #5
   2d3ac:	mov	x0, xzr
   2d3b0:	bl	acd0 <dcgettext@plt>
   2d3b4:	bl	a5a0 <xstrdup@plt>
   2d3b8:	ldr	x8, [sp, #8]
   2d3bc:	str	x0, [x8]
   2d3c0:	cbz	x22, 2d3dc <get_python_format_unnamed_arg_count@@Base+0xd714>
   2d3c4:	ldr	x9, [sp, #16]
   2d3c8:	sub	x8, x23, #0x1
   2d3cc:	sub	x8, x8, x9
   2d3d0:	ldrb	w9, [x22, x8]
   2d3d4:	orr	w9, w9, #0x4
   2d3d8:	strb	w9, [x22, x8]
   2d3dc:	cbz	x19, 2d3e8 <get_python_format_unnamed_arg_count@@Base+0xd720>
   2d3e0:	mov	x0, x19
   2d3e4:	bl	aa00 <free@plt>
   2d3e8:	mov	x0, xzr
   2d3ec:	ldp	x20, x19, [sp, #112]
   2d3f0:	ldp	x22, x21, [sp, #96]
   2d3f4:	ldp	x24, x23, [sp, #80]
   2d3f8:	ldp	x26, x25, [sp, #64]
   2d3fc:	ldp	x28, x27, [sp, #48]
   2d400:	ldp	x29, x30, [sp, #32]
   2d404:	add	sp, sp, #0x80
   2d408:	ret
   2d40c:	stp	x29, x30, [sp, #-32]!
   2d410:	str	x19, [sp, #16]
   2d414:	mov	x19, x0
   2d418:	ldr	x0, [x0, #16]
   2d41c:	mov	x29, sp
   2d420:	cbz	x0, 2d428 <get_python_format_unnamed_arg_count@@Base+0xd760>
   2d424:	bl	aa00 <free@plt>
   2d428:	mov	x0, x19
   2d42c:	ldr	x19, [sp, #16]
   2d430:	ldp	x29, x30, [sp], #32
   2d434:	b	aa00 <free@plt>
   2d438:	ldr	w0, [x0]
   2d43c:	ret
   2d440:	stp	x29, x30, [sp, #-80]!
   2d444:	stp	x24, x23, [sp, #32]
   2d448:	stp	x22, x21, [sp, #48]
   2d44c:	stp	x20, x19, [sp, #64]
   2d450:	ldr	w9, [x0, #4]
   2d454:	ldr	w8, [x1, #4]
   2d458:	str	x25, [sp, #16]
   2d45c:	mov	x29, sp
   2d460:	cmn	w9, w8
   2d464:	b.ne	2d470 <get_python_format_unnamed_arg_count@@Base+0xd7a8>  // b.any
   2d468:	mov	w0, wzr
   2d46c:	b	2d604 <get_python_format_unnamed_arg_count@@Base+0xd93c>
   2d470:	mov	x20, x5
   2d474:	mov	x21, x4
   2d478:	mov	x19, x3
   2d47c:	mov	x22, x1
   2d480:	mov	x23, x0
   2d484:	orr	w10, w8, w9
   2d488:	cbz	w10, 2d504 <get_python_format_unnamed_arg_count@@Base+0xd83c>
   2d48c:	cmp	w8, #0x0
   2d490:	cset	w11, ne  // ne = any
   2d494:	cmp	w9, #0x0
   2d498:	mov	x10, xzr
   2d49c:	mov	x24, xzr
   2d4a0:	mov	w25, wzr
   2d4a4:	cset	w12, ne  // ne = any
   2d4a8:	tbz	w12, #0, 2d564 <get_python_format_unnamed_arg_count@@Base+0xd89c>
   2d4ac:	tbz	w11, #0, 2d4d4 <get_python_format_unnamed_arg_count@@Base+0xd80c>
   2d4b0:	ldr	x11, [x23, #16]
   2d4b4:	ldr	x12, [x22, #16]
   2d4b8:	mov	w13, w25
   2d4bc:	lsl	x13, x13, #3
   2d4c0:	ldr	w11, [x11, x10]
   2d4c4:	ldr	w12, [x12, x13]
   2d4c8:	cmp	w11, w12
   2d4cc:	b.hi	2d564 <get_python_format_unnamed_arg_count@@Base+0xd89c>  // b.pmore
   2d4d0:	b.cs	2d4dc <get_python_format_unnamed_arg_count@@Base+0xd814>  // b.hs, b.nlast
   2d4d4:	tbz	w2, #0, 2d4e0 <get_python_format_unnamed_arg_count@@Base+0xd818>
   2d4d8:	b	2d59c <get_python_format_unnamed_arg_count@@Base+0xd8d4>
   2d4dc:	add	w25, w25, #0x1
   2d4e0:	add	x24, x24, #0x1
   2d4e4:	cmp	x24, x9
   2d4e8:	cset	w12, cc  // cc = lo, ul, last
   2d4ec:	cmp	w25, w8
   2d4f0:	cset	w11, cc  // cc = lo, ul, last
   2d4f4:	add	x10, x10, #0x8
   2d4f8:	b.cc	2d4a8 <get_python_format_unnamed_arg_count@@Base+0xd7e0>  // b.lo, b.ul, b.last
   2d4fc:	cmp	x24, x9
   2d500:	b.cc	2d4a8 <get_python_format_unnamed_arg_count@@Base+0xd7e0>  // b.lo, b.ul, b.last
   2d504:	cbz	w8, 2d468 <get_python_format_unnamed_arg_count@@Base+0xd7a0>
   2d508:	ldr	x9, [x23, #16]
   2d50c:	ldr	x10, [x22, #16]
   2d510:	mov	w12, wzr
   2d514:	mov	w11, wzr
   2d518:	mov	w12, w12
   2d51c:	mov	w23, w11
   2d520:	lsl	x13, x12, #3
   2d524:	lsl	x14, x23, #3
   2d528:	ldr	w13, [x9, x13]
   2d52c:	ldr	w14, [x10, x14]
   2d530:	cmp	w13, w14
   2d534:	b.ne	2d554 <get_python_format_unnamed_arg_count@@Base+0xd88c>  // b.any
   2d538:	add	x13, x9, x12, lsl #3
   2d53c:	add	x14, x10, x23, lsl #3
   2d540:	ldr	w13, [x13, #4]
   2d544:	ldr	w14, [x14, #4]
   2d548:	cmp	w13, w14
   2d54c:	b.ne	2d5d0 <get_python_format_unnamed_arg_count@@Base+0xd908>  // b.any
   2d550:	add	w11, w11, #0x1
   2d554:	cmp	w11, w8
   2d558:	add	w12, w12, #0x1
   2d55c:	b.cc	2d518 <get_python_format_unnamed_arg_count@@Base+0xd850>  // b.lo, b.ul, b.last
   2d560:	b	2d468 <get_python_format_unnamed_arg_count@@Base+0xd7a0>
   2d564:	cbz	x19, 2d600 <get_python_format_unnamed_arg_count@@Base+0xd938>
   2d568:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2d56c:	add	x1, x1, #0x333
   2d570:	mov	w2, #0x5                   	// #5
   2d574:	mov	x0, xzr
   2d578:	bl	acd0 <dcgettext@plt>
   2d57c:	ldr	x8, [x22, #16]
   2d580:	mov	w9, w25
   2d584:	lsl	x9, x9, #3
   2d588:	mov	x2, x20
   2d58c:	ldr	w1, [x8, x9]
   2d590:	mov	x3, x21
   2d594:	blr	x19
   2d598:	b	2d600 <get_python_format_unnamed_arg_count@@Base+0xd938>
   2d59c:	cbz	x19, 2d600 <get_python_format_unnamed_arg_count@@Base+0xd938>
   2d5a0:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2d5a4:	add	x1, x1, #0x37d
   2d5a8:	mov	w2, #0x5                   	// #5
   2d5ac:	mov	x0, xzr
   2d5b0:	bl	acd0 <dcgettext@plt>
   2d5b4:	ldr	x8, [x23, #16]
   2d5b8:	and	x9, x24, #0xffffffff
   2d5bc:	lsl	x9, x9, #3
   2d5c0:	mov	x2, x20
   2d5c4:	ldr	w1, [x8, x9]
   2d5c8:	blr	x19
   2d5cc:	b	2d600 <get_python_format_unnamed_arg_count@@Base+0xd938>
   2d5d0:	cbz	x19, 2d600 <get_python_format_unnamed_arg_count@@Base+0xd938>
   2d5d4:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2d5d8:	add	x1, x1, #0x546
   2d5dc:	mov	w2, #0x5                   	// #5
   2d5e0:	mov	x0, xzr
   2d5e4:	bl	acd0 <dcgettext@plt>
   2d5e8:	ldr	x8, [x22, #16]
   2d5ec:	lsl	x9, x23, #3
   2d5f0:	mov	x1, x21
   2d5f4:	mov	x2, x20
   2d5f8:	ldr	w3, [x8, x9]
   2d5fc:	blr	x19
   2d600:	mov	w0, #0x1                   	// #1
   2d604:	ldp	x20, x19, [sp, #64]
   2d608:	ldp	x22, x21, [sp, #48]
   2d60c:	ldp	x24, x23, [sp, #32]
   2d610:	ldr	x25, [sp, #16]
   2d614:	ldp	x29, x30, [sp], #80
   2d618:	ret
   2d61c:	ldr	w8, [x0]
   2d620:	ldr	w9, [x1]
   2d624:	cmp	w8, w9
   2d628:	csetm	w8, cc  // cc = lo, ul, last
   2d62c:	csinc	w0, w8, wzr, ls  // ls = plast
   2d630:	ret
   2d634:	sub	sp, sp, #0x80
   2d638:	stp	x29, x30, [sp, #32]
   2d63c:	stp	x28, x27, [sp, #48]
   2d640:	stp	x26, x25, [sp, #64]
   2d644:	stp	x24, x23, [sp, #80]
   2d648:	stp	x22, x21, [sp, #96]
   2d64c:	stp	x20, x19, [sp, #112]
   2d650:	ldrb	w9, [x0]
   2d654:	add	x29, sp, #0x20
   2d658:	cbz	w9, 2dc70 <get_python_format_unnamed_arg_count@@Base+0xdfa8>
   2d65c:	adrp	x27, 3a000 <plural_table_size@@Base+0xc00>
   2d660:	mov	x28, x0
   2d664:	mov	x22, x2
   2d668:	mov	w25, wzr
   2d66c:	mov	w24, wzr
   2d670:	mov	w20, wzr
   2d674:	mov	x19, xzr
   2d678:	mov	w13, wzr
   2d67c:	mov	w26, #0xa                   	// #10
   2d680:	add	x27, x27, #0xaee
   2d684:	mov	x10, x0
   2d688:	str	x3, [sp, #8]
   2d68c:	stur	x0, [x29, #-8]
   2d690:	str	x2, [sp, #16]
   2d694:	and	w8, w9, #0xff
   2d698:	cmp	w8, #0x25
   2d69c:	add	x8, x10, #0x1
   2d6a0:	b.ne	2dc38 <get_python_format_unnamed_arg_count@@Base+0xdf70>  // b.any
   2d6a4:	cbz	x22, 2d6b8 <get_python_format_unnamed_arg_count@@Base+0xd9f0>
   2d6a8:	sub	x9, x10, x28
   2d6ac:	ldrb	w11, [x22, x9]
   2d6b0:	orr	w11, w11, #0x1
   2d6b4:	strb	w11, [x22, x9]
   2d6b8:	ldrb	w11, [x8]
   2d6bc:	add	w25, w25, #0x1
   2d6c0:	sub	w9, w11, #0x31
   2d6c4:	cmp	w9, #0x8
   2d6c8:	b.hi	2d700 <get_python_format_unnamed_arg_count@@Base+0xda38>  // b.pmore
   2d6cc:	mov	w12, wzr
   2d6d0:	add	x9, x10, #0x2
   2d6d4:	mul	w10, w12, w26
   2d6d8:	add	w10, w10, w11, uxtb
   2d6dc:	ldrb	w11, [x9], #1
   2d6e0:	sub	w12, w11, #0x30
   2d6e4:	cmp	w12, #0xa
   2d6e8:	sub	w12, w10, #0x30
   2d6ec:	b.cc	2d6d4 <get_python_format_unnamed_arg_count@@Base+0xda0c>  // b.lo, b.ul, b.last
   2d6f0:	cmp	w11, #0x24
   2d6f4:	csel	w15, w12, wzr, eq  // eq = none
   2d6f8:	csel	x8, x9, x8, eq  // eq = none
   2d6fc:	b	2d704 <get_python_format_unnamed_arg_count@@Base+0xda3c>
   2d700:	mov	w15, wzr
   2d704:	add	x9, x8, #0x1
   2d708:	add	x23, x8, #0x3
   2d70c:	ldurb	w8, [x9, #-1]
   2d710:	cmp	w8, #0x29
   2d714:	b.le	2d734 <get_python_format_unnamed_arg_count@@Base+0xda6c>
   2d718:	sub	w10, w8, #0x2a
   2d71c:	cmp	w10, #0x6
   2d720:	b.hi	2d750 <get_python_format_unnamed_arg_count@@Base+0xda88>  // b.pmore
   2d724:	adr	x11, 2d744 <get_python_format_unnamed_arg_count@@Base+0xda7c>
   2d728:	ldrb	w12, [x27, x10]
   2d72c:	add	x11, x11, x12, lsl #2
   2d730:	br	x11
   2d734:	cmp	w8, #0x20
   2d738:	b.eq	2d744 <get_python_format_unnamed_arg_count@@Base+0xda7c>  // b.none
   2d73c:	cmp	w8, #0x23
   2d740:	b.ne	2d760 <get_python_format_unnamed_arg_count@@Base+0xda98>  // b.any
   2d744:	add	x9, x9, #0x1
   2d748:	add	x23, x23, #0x1
   2d74c:	b	2d70c <get_python_format_unnamed_arg_count@@Base+0xda44>
   2d750:	cmp	w8, #0x76
   2d754:	b.ne	2d760 <get_python_format_unnamed_arg_count@@Base+0xda98>  // b.any
   2d758:	mov	x23, x9
   2d75c:	b	2d7c4 <get_python_format_unnamed_arg_count@@Base+0xdafc>
   2d760:	mov	w16, wzr
   2d764:	sub	x23, x9, #0x1
   2d768:	b	2d820 <get_python_format_unnamed_arg_count@@Base+0xdb58>
   2d76c:	mov	x8, x9
   2d770:	ldrb	w10, [x8], #-1
   2d774:	cmp	w10, #0x76
   2d778:	b.ne	2d840 <get_python_format_unnamed_arg_count@@Base+0xdb78>  // b.any
   2d77c:	cmp	w13, w24
   2d780:	add	x23, x9, #0x1
   2d784:	b.ne	2d7ac <get_python_format_unnamed_arg_count@@Base+0xdae4>  // b.any
   2d788:	mov	w21, #0x1                   	// #1
   2d78c:	bfi	w21, w24, #1, #31
   2d790:	lsl	x1, x21, #3
   2d794:	mov	x0, x19
   2d798:	mov	w19, w15
   2d79c:	bl	a460 <xrealloc@plt>
   2d7a0:	mov	w15, w19
   2d7a4:	mov	x13, x21
   2d7a8:	mov	x19, x0
   2d7ac:	add	w20, w20, #0x1
   2d7b0:	add	x8, x19, w24, uxtw #3
   2d7b4:	str	w20, [x8]
   2d7b8:	mov	w9, #0x5                   	// #5
   2d7bc:	add	w24, w24, #0x1
   2d7c0:	str	w9, [x8, #4]
   2d7c4:	cmp	w13, w24
   2d7c8:	b.ne	2d7f0 <get_python_format_unnamed_arg_count@@Base+0xdb28>  // b.any
   2d7cc:	mov	w21, #0x1                   	// #1
   2d7d0:	bfi	w21, w13, #1, #31
   2d7d4:	lsl	x1, x21, #3
   2d7d8:	mov	x0, x19
   2d7dc:	mov	w19, w15
   2d7e0:	bl	a460 <xrealloc@plt>
   2d7e4:	mov	w15, w19
   2d7e8:	mov	x19, x0
   2d7ec:	mov	w13, w21
   2d7f0:	cmp	w15, #0x0
   2d7f4:	add	x8, x19, w24, uxtw #3
   2d7f8:	csinc	w9, w15, w20, ne  // ne = any
   2d7fc:	str	w9, [x8]
   2d800:	mov	w9, #0x5                   	// #5
   2d804:	str	w9, [x8, #4]
   2d808:	ldrb	w8, [x23]
   2d80c:	cinc	w20, w20, eq  // eq = none
   2d810:	add	w24, w24, #0x1
   2d814:	mov	w16, #0x1                   	// #1
   2d818:	cmp	w8, #0x2a
   2d81c:	b.eq	2d8c8 <get_python_format_unnamed_arg_count@@Base+0xdc00>  // b.none
   2d820:	sub	w9, w8, #0x31
   2d824:	cmp	w9, #0x8
   2d828:	b.hi	2d980 <get_python_format_unnamed_arg_count@@Base+0xdcb8>  // b.pmore
   2d82c:	ldrb	w8, [x23, #1]!
   2d830:	sub	w9, w8, #0x30
   2d834:	cmp	w9, #0xa
   2d838:	b.cc	2d82c <get_python_format_unnamed_arg_count@@Base+0xdb64>  // b.lo, b.ul, b.last
   2d83c:	b	2d980 <get_python_format_unnamed_arg_count@@Base+0xdcb8>
   2d840:	sub	w9, w10, #0x31
   2d844:	cmp	w9, #0x8
   2d848:	b.hi	2d8c0 <get_python_format_unnamed_arg_count@@Base+0xdbf8>  // b.pmore
   2d84c:	mov	w21, wzr
   2d850:	mul	w9, w21, w26
   2d854:	add	w9, w9, w10, uxtb
   2d858:	ldurb	w10, [x23, #-1]
   2d85c:	sub	w21, w9, #0x30
   2d860:	add	x23, x23, #0x1
   2d864:	sub	w9, w10, #0x30
   2d868:	cmp	w9, #0xa
   2d86c:	b.cc	2d850 <get_python_format_unnamed_arg_count@@Base+0xdb88>  // b.lo, b.ul, b.last
   2d870:	cmp	w10, #0x24
   2d874:	b.ne	2d8c0 <get_python_format_unnamed_arg_count@@Base+0xdbf8>  // b.any
   2d878:	ldurb	w9, [x23, #-1]
   2d87c:	cmp	w9, #0x76
   2d880:	b.ne	2d8c0 <get_python_format_unnamed_arg_count@@Base+0xdbf8>  // b.any
   2d884:	cmp	w13, w24
   2d888:	b.ne	2d8b4 <get_python_format_unnamed_arg_count@@Base+0xdbec>  // b.any
   2d88c:	mov	w28, #0x1                   	// #1
   2d890:	bfi	w28, w24, #1, #31
   2d894:	lsl	x1, x28, #3
   2d898:	mov	x0, x19
   2d89c:	mov	w19, w15
   2d8a0:	bl	a460 <xrealloc@plt>
   2d8a4:	mov	x13, x28
   2d8a8:	ldur	x28, [x29, #-8]
   2d8ac:	mov	w15, w19
   2d8b0:	mov	x19, x0
   2d8b4:	add	x8, x19, w24, uxtw #3
   2d8b8:	str	w21, [x8]
   2d8bc:	b	2d7b8 <get_python_format_unnamed_arg_count@@Base+0xdaf0>
   2d8c0:	mov	w16, wzr
   2d8c4:	mov	x23, x8
   2d8c8:	mov	x8, x23
   2d8cc:	ldrb	w10, [x8, #1]!
   2d8d0:	sub	w9, w10, #0x31
   2d8d4:	cmp	w9, #0x8
   2d8d8:	b.hi	2d910 <get_python_format_unnamed_arg_count@@Base+0xdc48>  // b.pmore
   2d8dc:	mov	w11, wzr
   2d8e0:	add	x9, x23, #0x2
   2d8e4:	mul	w11, w11, w26
   2d8e8:	add	w11, w11, w10, uxtb
   2d8ec:	ldrb	w10, [x9], #1
   2d8f0:	sub	w11, w11, #0x30
   2d8f4:	sub	w12, w10, #0x30
   2d8f8:	cmp	w12, #0xa
   2d8fc:	b.cc	2d8e4 <get_python_format_unnamed_arg_count@@Base+0xdc1c>  // b.lo, b.ul, b.last
   2d900:	cmp	w10, #0x24
   2d904:	csel	w21, w11, wzr, eq  // eq = none
   2d908:	csel	x23, x9, x8, eq  // eq = none
   2d90c:	b	2d918 <get_python_format_unnamed_arg_count@@Base+0xdc50>
   2d910:	mov	w21, wzr
   2d914:	mov	x23, x8
   2d918:	cmp	w13, w24
   2d91c:	b.ne	2d95c <get_python_format_unnamed_arg_count@@Base+0xdc94>  // b.any
   2d920:	mov	w28, w25
   2d924:	mov	w25, #0x1                   	// #1
   2d928:	bfi	w25, w13, #1, #31
   2d92c:	lsl	x1, x25, #3
   2d930:	mov	x0, x19
   2d934:	mov	w19, w15
   2d938:	mov	w22, w16
   2d93c:	bl	a460 <xrealloc@plt>
   2d940:	mov	w16, w22
   2d944:	ldr	x22, [sp, #16]
   2d948:	mov	w13, w25
   2d94c:	mov	w25, w28
   2d950:	ldur	x28, [x29, #-8]
   2d954:	mov	w15, w19
   2d958:	mov	x19, x0
   2d95c:	cmp	w21, #0x0
   2d960:	add	x8, x19, w24, uxtw #3
   2d964:	csinc	w9, w21, w20, ne  // ne = any
   2d968:	str	w9, [x8]
   2d96c:	mov	w9, #0x1                   	// #1
   2d970:	str	w9, [x8, #4]
   2d974:	ldrb	w8, [x23]
   2d978:	cinc	w20, w20, eq  // eq = none
   2d97c:	add	w24, w24, #0x1
   2d980:	cmp	w8, #0x2e
   2d984:	b.ne	2da7c <get_python_format_unnamed_arg_count@@Base+0xddb4>  // b.any
   2d988:	mov	x9, x23
   2d98c:	ldrb	w8, [x9, #1]!
   2d990:	cmp	w8, #0x2a
   2d994:	b.ne	2d9e0 <get_python_format_unnamed_arg_count@@Base+0xdd18>  // b.any
   2d998:	mov	x8, x23
   2d99c:	ldrb	w10, [x8, #2]!
   2d9a0:	sub	w9, w10, #0x31
   2d9a4:	cmp	w9, #0x8
   2d9a8:	b.hi	2da04 <get_python_format_unnamed_arg_count@@Base+0xdd3c>  // b.pmore
   2d9ac:	mov	w11, wzr
   2d9b0:	add	x9, x23, #0x3
   2d9b4:	mul	w11, w11, w26
   2d9b8:	add	w11, w11, w10, uxtb
   2d9bc:	ldrb	w10, [x9], #1
   2d9c0:	sub	w11, w11, #0x30
   2d9c4:	sub	w12, w10, #0x30
   2d9c8:	cmp	w12, #0xa
   2d9cc:	b.cc	2d9b4 <get_python_format_unnamed_arg_count@@Base+0xdcec>  // b.lo, b.ul, b.last
   2d9d0:	cmp	w10, #0x24
   2d9d4:	csel	w21, w11, wzr, eq  // eq = none
   2d9d8:	csel	x23, x9, x8, eq  // eq = none
   2d9dc:	b	2da0c <get_python_format_unnamed_arg_count@@Base+0xdd44>
   2d9e0:	sub	w10, w8, #0x30
   2d9e4:	cmp	w10, #0x9
   2d9e8:	b.hi	2da78 <get_python_format_unnamed_arg_count@@Base+0xddb0>  // b.pmore
   2d9ec:	add	x23, x23, #0x1
   2d9f0:	ldrb	w8, [x23, #1]!
   2d9f4:	sub	w9, w8, #0x30
   2d9f8:	cmp	w9, #0xa
   2d9fc:	b.cc	2d9f0 <get_python_format_unnamed_arg_count@@Base+0xdd28>  // b.lo, b.ul, b.last
   2da00:	b	2da7c <get_python_format_unnamed_arg_count@@Base+0xddb4>
   2da04:	mov	w21, wzr
   2da08:	mov	x23, x8
   2da0c:	cmp	w13, w24
   2da10:	b.ne	2da50 <get_python_format_unnamed_arg_count@@Base+0xdd88>  // b.any
   2da14:	mov	w28, w25
   2da18:	mov	w25, #0x1                   	// #1
   2da1c:	bfi	w25, w13, #1, #31
   2da20:	lsl	x1, x25, #3
   2da24:	mov	x0, x19
   2da28:	mov	w19, w15
   2da2c:	mov	w22, w16
   2da30:	bl	a460 <xrealloc@plt>
   2da34:	mov	w16, w22
   2da38:	ldr	x22, [sp, #16]
   2da3c:	mov	w13, w25
   2da40:	mov	w25, w28
   2da44:	ldur	x28, [x29, #-8]
   2da48:	mov	w15, w19
   2da4c:	mov	x19, x0
   2da50:	cmp	w21, #0x0
   2da54:	add	x8, x19, w24, uxtw #3
   2da58:	csinc	w9, w21, w20, ne  // ne = any
   2da5c:	str	w9, [x8]
   2da60:	mov	w9, #0x1                   	// #1
   2da64:	str	w9, [x8, #4]
   2da68:	ldrb	w8, [x23]
   2da6c:	cinc	w20, w20, eq  // eq = none
   2da70:	add	w24, w24, #0x1
   2da74:	b	2da7c <get_python_format_unnamed_arg_count@@Base+0xddb4>
   2da78:	mov	x23, x9
   2da7c:	cmp	w8, #0x67
   2da80:	mov	w9, wzr
   2da84:	b.gt	2daac <get_python_format_unnamed_arg_count@@Base+0xdde4>
   2da88:	cmp	w8, #0x49
   2da8c:	b.eq	2dad8 <get_python_format_unnamed_arg_count@@Base+0xde10>  // b.none
   2da90:	cmp	w8, #0x4c
   2da94:	b.eq	2dad0 <get_python_format_unnamed_arg_count@@Base+0xde08>  // b.none
   2da98:	cmp	w8, #0x56
   2da9c:	b.ne	2db48 <get_python_format_unnamed_arg_count@@Base+0xde80>  // b.any
   2daa0:	add	x23, x23, #0x1
   2daa4:	mov	w9, #0x20                  	// #32
   2daa8:	b	2db48 <get_python_format_unnamed_arg_count@@Base+0xde80>
   2daac:	cmp	w8, #0x71
   2dab0:	b.eq	2dad0 <get_python_format_unnamed_arg_count@@Base+0xde08>  // b.none
   2dab4:	cmp	w8, #0x6c
   2dab8:	b.eq	2db0c <get_python_format_unnamed_arg_count@@Base+0xde44>  // b.none
   2dabc:	cmp	w8, #0x68
   2dac0:	b.ne	2db48 <get_python_format_unnamed_arg_count@@Base+0xde80>  // b.any
   2dac4:	add	x23, x23, #0x1
   2dac8:	mov	w9, #0x10                  	// #16
   2dacc:	b	2db48 <get_python_format_unnamed_arg_count@@Base+0xde80>
   2dad0:	add	x23, x23, #0x1
   2dad4:	b	2db20 <get_python_format_unnamed_arg_count@@Base+0xde58>
   2dad8:	mov	x10, x23
   2dadc:	ldrb	w8, [x10, #1]!
   2dae0:	cmp	w8, #0x33
   2dae4:	b.eq	2db30 <get_python_format_unnamed_arg_count@@Base+0xde68>  // b.none
   2dae8:	cmp	w8, #0x36
   2daec:	b.ne	2dbb0 <get_python_format_unnamed_arg_count@@Base+0xdee8>  // b.any
   2daf0:	ldrb	w8, [x23, #2]
   2daf4:	mov	w9, #0x50                  	// #80
   2daf8:	add	x11, x23, #0x3
   2dafc:	cmp	w8, #0x34
   2db00:	mov	w8, #0x30                  	// #48
   2db04:	csel	w9, w9, w8, eq  // eq = none
   2db08:	b	2db44 <get_python_format_unnamed_arg_count@@Base+0xde7c>
   2db0c:	mov	x10, x23
   2db10:	ldrb	w8, [x10, #1]!
   2db14:	cmp	w8, #0x6c
   2db18:	b.ne	2db28 <get_python_format_unnamed_arg_count@@Base+0xde60>  // b.any
   2db1c:	add	x23, x23, #0x2
   2db20:	mov	w9, #0x50                  	// #80
   2db24:	b	2db48 <get_python_format_unnamed_arg_count@@Base+0xde80>
   2db28:	mov	w9, #0x40                  	// #64
   2db2c:	b	2dbb4 <get_python_format_unnamed_arg_count@@Base+0xdeec>
   2db30:	ldrb	w8, [x23, #2]
   2db34:	add	x11, x23, #0x3
   2db38:	cmp	w8, #0x32
   2db3c:	mov	w8, #0x30                  	// #48
   2db40:	csel	w9, wzr, w8, eq  // eq = none
   2db44:	csel	x23, x11, x10, eq  // eq = none
   2db48:	ldrb	w8, [x23]
   2db4c:	cmp	w8, #0x43
   2db50:	b.le	2dba4 <get_python_format_unnamed_arg_count@@Base+0xdedc>
   2db54:	sub	w10, w8, #0x44
   2db58:	cmp	w10, #0x31
   2db5c:	b.hi	2dbbc <get_python_format_unnamed_arg_count@@Base+0xdef4>  // b.pmore
   2db60:	adrp	x14, 3a000 <plural_table_size@@Base+0xc00>
   2db64:	add	x14, x14, #0xaf5
   2db68:	adr	x11, 2db7c <get_python_format_unnamed_arg_count@@Base+0xdeb4>
   2db6c:	ldrb	w12, [x14, x10]
   2db70:	add	x11, x11, x12, lsl #2
   2db74:	mov	w21, #0x3                   	// #3
   2db78:	br	x11
   2db7c:	cmp	w9, #0x40
   2db80:	b.eq	2dde0 <get_python_format_unnamed_arg_count@@Base+0xe118>  // b.none
   2db84:	cmp	w9, #0x10
   2db88:	b.eq	2dde0 <get_python_format_unnamed_arg_count@@Base+0xe118>  // b.none
   2db8c:	orr	w21, w9, #0x2
   2db90:	b	2dbcc <get_python_format_unnamed_arg_count@@Base+0xdf04>
   2db94:	mov	w21, #0x29                  	// #41
   2db98:	b	2dbcc <get_python_format_unnamed_arg_count@@Base+0xdf04>
   2db9c:	orr	w21, w9, #0x1
   2dba0:	b	2dbcc <get_python_format_unnamed_arg_count@@Base+0xdf04>
   2dba4:	cmp	w8, #0x25
   2dba8:	b.eq	2dc20 <get_python_format_unnamed_arg_count@@Base+0xdf58>  // b.none
   2dbac:	b	2dd88 <get_python_format_unnamed_arg_count@@Base+0xe0c0>
   2dbb0:	mov	w9, #0x30                  	// #48
   2dbb4:	mov	x23, x10
   2dbb8:	b	2db4c <get_python_format_unnamed_arg_count@@Base+0xde84>
   2dbbc:	cmp	w8, #0x78
   2dbc0:	b.ne	2ddc8 <get_python_format_unnamed_arg_count@@Base+0xe100>  // b.any
   2dbc4:	mov	w8, #0x9                   	// #9
   2dbc8:	orr	w21, w9, w8
   2dbcc:	tbnz	w16, #0, 2dc20 <get_python_format_unnamed_arg_count@@Base+0xdf58>
   2dbd0:	cmp	w13, w24
   2dbd4:	b.ne	2dc08 <get_python_format_unnamed_arg_count@@Base+0xdf40>  // b.any
   2dbd8:	mov	w28, w25
   2dbdc:	mov	w25, #0x1                   	// #1
   2dbe0:	bfi	w25, w13, #1, #31
   2dbe4:	lsl	x1, x25, #3
   2dbe8:	mov	x0, x19
   2dbec:	mov	w19, w15
   2dbf0:	bl	a460 <xrealloc@plt>
   2dbf4:	mov	w13, w25
   2dbf8:	mov	w25, w28
   2dbfc:	ldur	x28, [x29, #-8]
   2dc00:	mov	w15, w19
   2dc04:	mov	x19, x0
   2dc08:	cmp	w15, #0x0
   2dc0c:	add	x8, x19, w24, uxtw #3
   2dc10:	csinc	w9, w15, w20, ne  // ne = any
   2dc14:	cinc	w20, w20, eq  // eq = none
   2dc18:	add	w24, w24, #0x1
   2dc1c:	stp	w9, w21, [x8]
   2dc20:	cbz	x22, 2dc34 <get_python_format_unnamed_arg_count@@Base+0xdf6c>
   2dc24:	sub	x8, x23, x28
   2dc28:	ldrb	w9, [x22, x8]
   2dc2c:	orr	w9, w9, #0x2
   2dc30:	strb	w9, [x22, x8]
   2dc34:	add	x8, x23, #0x1
   2dc38:	ldrb	w9, [x8]
   2dc3c:	mov	x10, x8
   2dc40:	cbnz	w9, 2d694 <get_python_format_unnamed_arg_count@@Base+0xd9cc>
   2dc44:	b	2dc84 <get_python_format_unnamed_arg_count@@Base+0xdfbc>
   2dc48:	mov	w21, #0x21                  	// #33
   2dc4c:	b	2dbcc <get_python_format_unnamed_arg_count@@Base+0xdf04>
   2dc50:	mov	w21, #0x5                   	// #5
   2dc54:	b	2dbcc <get_python_format_unnamed_arg_count@@Base+0xdf04>
   2dc58:	orr	w21, w9, #0x7
   2dc5c:	b	2dbcc <get_python_format_unnamed_arg_count@@Base+0xdf04>
   2dc60:	mov	w21, #0x6                   	// #6
   2dc64:	b	2dbcc <get_python_format_unnamed_arg_count@@Base+0xdf04>
   2dc68:	mov	w21, #0x4                   	// #4
   2dc6c:	b	2dbcc <get_python_format_unnamed_arg_count@@Base+0xdf04>
   2dc70:	mov	w25, wzr
   2dc74:	mov	x19, xzr
   2dc78:	mov	w28, wzr
   2dc7c:	mov	w24, wzr
   2dc80:	b	2dd70 <get_python_format_unnamed_arg_count@@Base+0xe0a8>
   2dc84:	mov	x28, x13
   2dc88:	cmp	w24, #0x2
   2dc8c:	b.cc	2dd70 <get_python_format_unnamed_arg_count@@Base+0xe0a8>  // b.lo, b.ul, b.last
   2dc90:	mov	w22, w24
   2dc94:	adrp	x3, 2e000 <get_python_format_unnamed_arg_count@@Base+0xe338>
   2dc98:	add	x3, x3, #0x7c
   2dc9c:	mov	w2, #0x8                   	// #8
   2dca0:	mov	x0, x19
   2dca4:	mov	x1, x22
   2dca8:	mov	w27, w25
   2dcac:	bl	a2f0 <qsort@plt>
   2dcb0:	ldr	x25, [sp, #8]
   2dcb4:	adrp	x23, 39000 <get_search_path@@Base+0x2b4c>
   2dcb8:	mov	x20, xzr
   2dcbc:	mov	w8, wzr
   2dcc0:	mov	w24, wzr
   2dcc4:	add	x23, x23, #0x8bd
   2dcc8:	mov	x21, x19
   2dccc:	cbz	w24, 2dd14 <get_python_format_unnamed_arg_count@@Base+0xe04c>
   2dcd0:	sub	w9, w24, #0x1
   2dcd4:	lsl	x11, x9, #3
   2dcd8:	ldr	w10, [x21]
   2dcdc:	ldr	w11, [x19, x11]
   2dce0:	cmp	w10, w11
   2dce4:	b.ne	2dd14 <get_python_format_unnamed_arg_count@@Base+0xe04c>  // b.any
   2dce8:	add	x26, x19, x9, lsl #3
   2dcec:	ldr	w11, [x21, #4]
   2dcf0:	ldr	w9, [x26, #4]!
   2dcf4:	cmp	w11, w9
   2dcf8:	cset	w9, eq  // eq = none
   2dcfc:	cset	w10, ne  // ne = any
   2dd00:	orr	w12, w8, w9
   2dd04:	csel	w9, w11, wzr, eq  // eq = none
   2dd08:	tbz	w12, #0, 2dd30 <get_python_format_unnamed_arg_count@@Base+0xe068>
   2dd0c:	orr	w8, w8, w10
   2dd10:	b	2dd54 <get_python_format_unnamed_arg_count@@Base+0xe08c>
   2dd14:	cmp	x20, w24, uxtw
   2dd18:	b.ls	2dd28 <get_python_format_unnamed_arg_count@@Base+0xe060>  // b.plast
   2dd1c:	ldr	x9, [x21]
   2dd20:	mov	w10, w24
   2dd24:	str	x9, [x19, x10, lsl #3]
   2dd28:	add	w24, w24, #0x1
   2dd2c:	b	2dd58 <get_python_format_unnamed_arg_count@@Base+0xe090>
   2dd30:	mov	w2, #0x5                   	// #5
   2dd34:	mov	x0, xzr
   2dd38:	mov	x1, x23
   2dd3c:	bl	acd0 <dcgettext@plt>
   2dd40:	ldr	w1, [x21]
   2dd44:	bl	aa20 <xasprintf@plt>
   2dd48:	mov	w9, wzr
   2dd4c:	mov	w8, #0x1                   	// #1
   2dd50:	str	x0, [x25]
   2dd54:	str	w9, [x26]
   2dd58:	add	x20, x20, #0x1
   2dd5c:	cmp	x22, x20
   2dd60:	add	x21, x21, #0x8
   2dd64:	b.ne	2dccc <get_python_format_unnamed_arg_count@@Base+0xe004>  // b.any
   2dd68:	mov	w25, w27
   2dd6c:	tbnz	w8, #0, 2de3c <get_python_format_unnamed_arg_count@@Base+0xe174>
   2dd70:	mov	w0, #0x18                  	// #24
   2dd74:	bl	a590 <xmalloc@plt>
   2dd78:	stp	w25, w24, [x0]
   2dd7c:	str	w28, [x0, #8]
   2dd80:	str	x19, [x0, #16]
   2dd84:	b	2de4c <get_python_format_unnamed_arg_count@@Base+0xe184>
   2dd88:	cbnz	w8, 2ddc8 <get_python_format_unnamed_arg_count@@Base+0xe100>
   2dd8c:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2dd90:	add	x1, x1, #0x7e0
   2dd94:	mov	w2, #0x5                   	// #5
   2dd98:	mov	x0, xzr
   2dd9c:	bl	acd0 <dcgettext@plt>
   2dda0:	bl	a5a0 <xstrdup@plt>
   2dda4:	ldr	x8, [sp, #8]
   2dda8:	str	x0, [x8]
   2ddac:	cbz	x22, 2de3c <get_python_format_unnamed_arg_count@@Base+0xe174>
   2ddb0:	sub	x8, x23, x28
   2ddb4:	add	x8, x8, x22
   2ddb8:	ldurb	w9, [x8, #-1]
   2ddbc:	orr	w9, w9, #0x4
   2ddc0:	sturb	w9, [x8, #-1]
   2ddc4:	b	2de3c <get_python_format_unnamed_arg_count@@Base+0xe174>
   2ddc8:	sub	w8, w8, #0x20
   2ddcc:	cmp	w8, #0x5e
   2ddd0:	b.hi	2de04 <get_python_format_unnamed_arg_count@@Base+0xe13c>  // b.pmore
   2ddd4:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2ddd8:	add	x1, x1, #0x80e
   2dddc:	b	2dde8 <get_python_format_unnamed_arg_count@@Base+0xe120>
   2dde0:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2dde4:	add	x1, x1, #0xb27
   2dde8:	mov	w2, #0x5                   	// #5
   2ddec:	mov	x0, xzr
   2ddf0:	bl	acd0 <dcgettext@plt>
   2ddf4:	ldrb	w2, [x23]
   2ddf8:	mov	w1, w25
   2ddfc:	bl	aa20 <xasprintf@plt>
   2de00:	b	2de20 <get_python_format_unnamed_arg_count@@Base+0xe158>
   2de04:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2de08:	add	x1, x1, #0x862
   2de0c:	mov	w2, #0x5                   	// #5
   2de10:	mov	x0, xzr
   2de14:	bl	acd0 <dcgettext@plt>
   2de18:	mov	w1, w25
   2de1c:	bl	aa20 <xasprintf@plt>
   2de20:	ldr	x8, [sp, #8]
   2de24:	str	x0, [x8]
   2de28:	cbz	x22, 2de3c <get_python_format_unnamed_arg_count@@Base+0xe174>
   2de2c:	sub	x8, x23, x28
   2de30:	ldrb	w9, [x22, x8]
   2de34:	orr	w9, w9, #0x4
   2de38:	strb	w9, [x22, x8]
   2de3c:	cbz	x19, 2de48 <get_python_format_unnamed_arg_count@@Base+0xe180>
   2de40:	mov	x0, x19
   2de44:	bl	aa00 <free@plt>
   2de48:	mov	x0, xzr
   2de4c:	ldp	x20, x19, [sp, #112]
   2de50:	ldp	x22, x21, [sp, #96]
   2de54:	ldp	x24, x23, [sp, #80]
   2de58:	ldp	x26, x25, [sp, #64]
   2de5c:	ldp	x28, x27, [sp, #48]
   2de60:	ldp	x29, x30, [sp, #32]
   2de64:	add	sp, sp, #0x80
   2de68:	ret
   2de6c:	stp	x29, x30, [sp, #-32]!
   2de70:	str	x19, [sp, #16]
   2de74:	mov	x19, x0
   2de78:	ldr	x0, [x0, #16]
   2de7c:	mov	x29, sp
   2de80:	cbz	x0, 2de88 <get_python_format_unnamed_arg_count@@Base+0xe1c0>
   2de84:	bl	aa00 <free@plt>
   2de88:	mov	x0, x19
   2de8c:	ldr	x19, [sp, #16]
   2de90:	ldp	x29, x30, [sp], #32
   2de94:	b	aa00 <free@plt>
   2de98:	ldr	w0, [x0]
   2de9c:	ret
   2dea0:	stp	x29, x30, [sp, #-80]!
   2dea4:	stp	x24, x23, [sp, #32]
   2dea8:	stp	x22, x21, [sp, #48]
   2deac:	stp	x20, x19, [sp, #64]
   2deb0:	ldr	w9, [x0, #4]
   2deb4:	ldr	w8, [x1, #4]
   2deb8:	str	x25, [sp, #16]
   2debc:	mov	x29, sp
   2dec0:	cmn	w9, w8
   2dec4:	b.ne	2ded0 <get_python_format_unnamed_arg_count@@Base+0xe208>  // b.any
   2dec8:	mov	w0, wzr
   2decc:	b	2e064 <get_python_format_unnamed_arg_count@@Base+0xe39c>
   2ded0:	mov	x20, x5
   2ded4:	mov	x21, x4
   2ded8:	mov	x19, x3
   2dedc:	mov	x22, x1
   2dee0:	mov	x23, x0
   2dee4:	orr	w10, w8, w9
   2dee8:	cbz	w10, 2df64 <get_python_format_unnamed_arg_count@@Base+0xe29c>
   2deec:	cmp	w8, #0x0
   2def0:	cset	w11, ne  // ne = any
   2def4:	cmp	w9, #0x0
   2def8:	mov	x10, xzr
   2defc:	mov	x24, xzr
   2df00:	mov	w25, wzr
   2df04:	cset	w12, ne  // ne = any
   2df08:	tbz	w12, #0, 2dfc4 <get_python_format_unnamed_arg_count@@Base+0xe2fc>
   2df0c:	tbz	w11, #0, 2df34 <get_python_format_unnamed_arg_count@@Base+0xe26c>
   2df10:	ldr	x11, [x23, #16]
   2df14:	ldr	x12, [x22, #16]
   2df18:	mov	w13, w25
   2df1c:	lsl	x13, x13, #3
   2df20:	ldr	w11, [x11, x10]
   2df24:	ldr	w12, [x12, x13]
   2df28:	cmp	w11, w12
   2df2c:	b.hi	2dfc4 <get_python_format_unnamed_arg_count@@Base+0xe2fc>  // b.pmore
   2df30:	b.cs	2df3c <get_python_format_unnamed_arg_count@@Base+0xe274>  // b.hs, b.nlast
   2df34:	tbz	w2, #0, 2df40 <get_python_format_unnamed_arg_count@@Base+0xe278>
   2df38:	b	2dffc <get_python_format_unnamed_arg_count@@Base+0xe334>
   2df3c:	add	w25, w25, #0x1
   2df40:	add	x24, x24, #0x1
   2df44:	cmp	x24, x9
   2df48:	cset	w12, cc  // cc = lo, ul, last
   2df4c:	cmp	w25, w8
   2df50:	cset	w11, cc  // cc = lo, ul, last
   2df54:	add	x10, x10, #0x8
   2df58:	b.cc	2df08 <get_python_format_unnamed_arg_count@@Base+0xe240>  // b.lo, b.ul, b.last
   2df5c:	cmp	x24, x9
   2df60:	b.cc	2df08 <get_python_format_unnamed_arg_count@@Base+0xe240>  // b.lo, b.ul, b.last
   2df64:	cbz	w8, 2dec8 <get_python_format_unnamed_arg_count@@Base+0xe200>
   2df68:	ldr	x9, [x23, #16]
   2df6c:	ldr	x10, [x22, #16]
   2df70:	mov	w12, wzr
   2df74:	mov	w11, wzr
   2df78:	mov	w12, w12
   2df7c:	mov	w23, w11
   2df80:	lsl	x13, x12, #3
   2df84:	lsl	x14, x23, #3
   2df88:	ldr	w13, [x9, x13]
   2df8c:	ldr	w14, [x10, x14]
   2df90:	cmp	w13, w14
   2df94:	b.ne	2dfb4 <get_python_format_unnamed_arg_count@@Base+0xe2ec>  // b.any
   2df98:	add	x13, x9, x12, lsl #3
   2df9c:	add	x14, x10, x23, lsl #3
   2dfa0:	ldr	w13, [x13, #4]
   2dfa4:	ldr	w14, [x14, #4]
   2dfa8:	cmp	w13, w14
   2dfac:	b.ne	2e030 <get_python_format_unnamed_arg_count@@Base+0xe368>  // b.any
   2dfb0:	add	w11, w11, #0x1
   2dfb4:	cmp	w11, w8
   2dfb8:	add	w12, w12, #0x1
   2dfbc:	b.cc	2df78 <get_python_format_unnamed_arg_count@@Base+0xe2b0>  // b.lo, b.ul, b.last
   2dfc0:	b	2dec8 <get_python_format_unnamed_arg_count@@Base+0xe200>
   2dfc4:	cbz	x19, 2e060 <get_python_format_unnamed_arg_count@@Base+0xe398>
   2dfc8:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2dfcc:	add	x1, x1, #0x333
   2dfd0:	mov	w2, #0x5                   	// #5
   2dfd4:	mov	x0, xzr
   2dfd8:	bl	acd0 <dcgettext@plt>
   2dfdc:	ldr	x8, [x22, #16]
   2dfe0:	mov	w9, w25
   2dfe4:	lsl	x9, x9, #3
   2dfe8:	mov	x2, x20
   2dfec:	ldr	w1, [x8, x9]
   2dff0:	mov	x3, x21
   2dff4:	blr	x19
   2dff8:	b	2e060 <get_python_format_unnamed_arg_count@@Base+0xe398>
   2dffc:	cbz	x19, 2e060 <get_python_format_unnamed_arg_count@@Base+0xe398>
   2e000:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2e004:	add	x1, x1, #0x37d
   2e008:	mov	w2, #0x5                   	// #5
   2e00c:	mov	x0, xzr
   2e010:	bl	acd0 <dcgettext@plt>
   2e014:	ldr	x8, [x23, #16]
   2e018:	and	x9, x24, #0xffffffff
   2e01c:	lsl	x9, x9, #3
   2e020:	mov	x2, x20
   2e024:	ldr	w1, [x8, x9]
   2e028:	blr	x19
   2e02c:	b	2e060 <get_python_format_unnamed_arg_count@@Base+0xe398>
   2e030:	cbz	x19, 2e060 <get_python_format_unnamed_arg_count@@Base+0xe398>
   2e034:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2e038:	add	x1, x1, #0x546
   2e03c:	mov	w2, #0x5                   	// #5
   2e040:	mov	x0, xzr
   2e044:	bl	acd0 <dcgettext@plt>
   2e048:	ldr	x8, [x22, #16]
   2e04c:	lsl	x9, x23, #3
   2e050:	mov	x1, x21
   2e054:	mov	x2, x20
   2e058:	ldr	w3, [x8, x9]
   2e05c:	blr	x19
   2e060:	mov	w0, #0x1                   	// #1
   2e064:	ldp	x20, x19, [sp, #64]
   2e068:	ldp	x22, x21, [sp, #48]
   2e06c:	ldp	x24, x23, [sp, #32]
   2e070:	ldr	x25, [sp, #16]
   2e074:	ldp	x29, x30, [sp], #80
   2e078:	ret
   2e07c:	ldr	w8, [x0]
   2e080:	ldr	w9, [x1]
   2e084:	cmp	w8, w9
   2e088:	csetm	w8, cc  // cc = lo, ul, last
   2e08c:	csinc	w0, w8, wzr, ls  // ls = plast
   2e090:	ret
   2e094:	stp	x29, x30, [sp, #-96]!
   2e098:	stp	x28, x27, [sp, #16]
   2e09c:	stp	x26, x25, [sp, #32]
   2e0a0:	stp	x24, x23, [sp, #48]
   2e0a4:	stp	x22, x21, [sp, #64]
   2e0a8:	stp	x20, x19, [sp, #80]
   2e0ac:	ldrb	w9, [x0]
   2e0b0:	mov	x29, sp
   2e0b4:	cbz	w9, 2e264 <get_python_format_unnamed_arg_count@@Base+0xe59c>
   2e0b8:	mov	x20, x0
   2e0bc:	mov	x21, x2
   2e0c0:	mov	x19, xzr
   2e0c4:	mov	w26, wzr
   2e0c8:	mov	w27, wzr
   2e0cc:	mov	w25, wzr
   2e0d0:	mov	x8, x0
   2e0d4:	and	w9, w9, #0xff
   2e0d8:	cmp	w9, #0x7b
   2e0dc:	add	x22, x8, #0x1
   2e0e0:	b.ne	2e1d4 <get_python_format_unnamed_arg_count@@Base+0xe50c>  // b.any
   2e0e4:	ldrb	w9, [x22]
   2e0e8:	sub	w10, w9, #0x41
   2e0ec:	cmp	w10, #0x1a
   2e0f0:	b.cs	2e1bc <get_python_format_unnamed_arg_count@@Base+0xe4f4>  // b.hs, b.nlast
   2e0f4:	add	x28, x8, #0x2
   2e0f8:	ldrb	w9, [x28]
   2e0fc:	sub	w10, w9, #0x41
   2e100:	cmp	w10, #0x19
   2e104:	b.ls	2e12c <get_python_format_unnamed_arg_count@@Base+0xe464>  // b.plast
   2e108:	sub	w10, w9, #0x30
   2e10c:	cmp	w10, #0xa
   2e110:	b.cc	2e12c <get_python_format_unnamed_arg_count@@Base+0xe464>  // b.lo, b.ul, b.last
   2e114:	cmp	w9, #0x5f
   2e118:	sub	w10, w9, #0x61
   2e11c:	b.eq	2e12c <get_python_format_unnamed_arg_count@@Base+0xe464>  // b.none
   2e120:	and	w10, w10, #0xff
   2e124:	cmp	w10, #0x1a
   2e128:	b.cs	2e134 <get_python_format_unnamed_arg_count@@Base+0xe46c>  // b.hs, b.nlast
   2e12c:	add	x28, x28, #0x1
   2e130:	b	2e0f8 <get_python_format_unnamed_arg_count@@Base+0xe430>
   2e134:	cmp	w9, #0x7d
   2e138:	b.ne	2e1d4 <get_python_format_unnamed_arg_count@@Base+0xe50c>  // b.any
   2e13c:	sub	x24, x28, x22
   2e140:	cbz	x21, 2e154 <get_python_format_unnamed_arg_count@@Base+0xe48c>
   2e144:	sub	x8, x8, x20
   2e148:	ldrb	w9, [x21, x8]
   2e14c:	orr	w9, w9, #0x1
   2e150:	strb	w9, [x21, x8]
   2e154:	add	x0, x24, #0x1
   2e158:	bl	a590 <xmalloc@plt>
   2e15c:	mov	x1, x22
   2e160:	mov	x2, x24
   2e164:	mov	x23, x0
   2e168:	bl	a040 <memcpy@plt>
   2e16c:	cmp	w26, w27
   2e170:	strb	wzr, [x23, x24]
   2e174:	b.ne	2e194 <get_python_format_unnamed_arg_count@@Base+0xe4cc>  // b.any
   2e178:	mov	w22, #0x1                   	// #1
   2e17c:	bfi	w22, w26, #1, #31
   2e180:	lsl	x1, x22, #3
   2e184:	mov	x0, x19
   2e188:	bl	a460 <xrealloc@plt>
   2e18c:	mov	x19, x0
   2e190:	mov	w26, w22
   2e194:	add	w25, w25, #0x1
   2e198:	str	x23, [x19, w27, uxtw #3]
   2e19c:	add	w27, w27, #0x1
   2e1a0:	cbz	x21, 2e1b4 <get_python_format_unnamed_arg_count@@Base+0xe4ec>
   2e1a4:	sub	x8, x28, x20
   2e1a8:	ldrb	w9, [x21, x8]
   2e1ac:	orr	w9, w9, #0x2
   2e1b0:	strb	w9, [x21, x8]
   2e1b4:	add	x22, x28, #0x1
   2e1b8:	b	2e1d4 <get_python_format_unnamed_arg_count@@Base+0xe50c>
   2e1bc:	cmp	w9, #0x5f
   2e1c0:	b.eq	2e0f4 <get_python_format_unnamed_arg_count@@Base+0xe42c>  // b.none
   2e1c4:	sub	w9, w9, #0x61
   2e1c8:	and	w9, w9, #0xff
   2e1cc:	cmp	w9, #0x19
   2e1d0:	b.ls	2e0f4 <get_python_format_unnamed_arg_count@@Base+0xe42c>  // b.plast
   2e1d4:	ldrb	w9, [x22]
   2e1d8:	mov	x8, x22
   2e1dc:	cbnz	w9, 2e0d4 <get_python_format_unnamed_arg_count@@Base+0xe40c>
   2e1e0:	cmp	w27, #0x2
   2e1e4:	b.cc	2e274 <get_python_format_unnamed_arg_count@@Base+0xe5ac>  // b.lo, b.ul, b.last
   2e1e8:	mov	w20, w27
   2e1ec:	adrp	x3, 2e000 <get_python_format_unnamed_arg_count@@Base+0xe338>
   2e1f0:	add	x3, x3, #0x414
   2e1f4:	mov	w2, #0x8                   	// #8
   2e1f8:	mov	x0, x19
   2e1fc:	mov	x1, x20
   2e200:	bl	a2f0 <qsort@plt>
   2e204:	mov	x22, xzr
   2e208:	mov	w27, wzr
   2e20c:	mov	x23, x19
   2e210:	cbz	w27, 2e22c <get_python_format_unnamed_arg_count@@Base+0xe564>
   2e214:	ldr	x21, [x23]
   2e218:	sub	w8, w27, #0x1
   2e21c:	ldr	x1, [x19, w8, uxtw #3]
   2e220:	mov	x0, x21
   2e224:	bl	a8d0 <strcmp@plt>
   2e228:	cbz	w0, 2e248 <get_python_format_unnamed_arg_count@@Base+0xe580>
   2e22c:	cmp	x22, w27, uxtw
   2e230:	b.ls	2e240 <get_python_format_unnamed_arg_count@@Base+0xe578>  // b.plast
   2e234:	ldr	x8, [x23]
   2e238:	mov	w9, w27
   2e23c:	str	x8, [x19, x9, lsl #3]
   2e240:	add	w27, w27, #0x1
   2e244:	b	2e250 <get_python_format_unnamed_arg_count@@Base+0xe588>
   2e248:	mov	x0, x21
   2e24c:	bl	aa00 <free@plt>
   2e250:	add	x22, x22, #0x1
   2e254:	cmp	x20, x22
   2e258:	add	x23, x23, #0x8
   2e25c:	b.ne	2e210 <get_python_format_unnamed_arg_count@@Base+0xe548>  // b.any
   2e260:	b	2e274 <get_python_format_unnamed_arg_count@@Base+0xe5ac>
   2e264:	mov	x19, xzr
   2e268:	mov	w26, wzr
   2e26c:	mov	w25, wzr
   2e270:	mov	w27, wzr
   2e274:	mov	w0, #0x18                  	// #24
   2e278:	bl	a590 <xmalloc@plt>
   2e27c:	stp	w25, w27, [x0]
   2e280:	str	w26, [x0, #8]
   2e284:	str	x19, [x0, #16]
   2e288:	ldp	x20, x19, [sp, #80]
   2e28c:	ldp	x22, x21, [sp, #64]
   2e290:	ldp	x24, x23, [sp, #48]
   2e294:	ldp	x26, x25, [sp, #32]
   2e298:	ldp	x28, x27, [sp, #16]
   2e29c:	ldp	x29, x30, [sp], #96
   2e2a0:	ret
   2e2a4:	stp	x29, x30, [sp, #-32]!
   2e2a8:	stp	x20, x19, [sp, #16]
   2e2ac:	mov	x19, x0
   2e2b0:	ldr	x0, [x0, #16]
   2e2b4:	mov	x29, sp
   2e2b8:	cbz	x0, 2e2e8 <get_python_format_unnamed_arg_count@@Base+0xe620>
   2e2bc:	ldr	w8, [x19, #4]
   2e2c0:	cbz	w8, 2e2e4 <get_python_format_unnamed_arg_count@@Base+0xe61c>
   2e2c4:	mov	x20, xzr
   2e2c8:	ldr	x0, [x0, x20, lsl #3]
   2e2cc:	bl	aa00 <free@plt>
   2e2d0:	ldr	w8, [x19, #4]
   2e2d4:	ldr	x0, [x19, #16]
   2e2d8:	add	x20, x20, #0x1
   2e2dc:	cmp	x20, x8
   2e2e0:	b.cc	2e2c8 <get_python_format_unnamed_arg_count@@Base+0xe600>  // b.lo, b.ul, b.last
   2e2e4:	bl	aa00 <free@plt>
   2e2e8:	mov	x0, x19
   2e2ec:	ldp	x20, x19, [sp, #16]
   2e2f0:	ldp	x29, x30, [sp], #32
   2e2f4:	b	aa00 <free@plt>
   2e2f8:	ldr	w0, [x0]
   2e2fc:	ret
   2e300:	stp	x29, x30, [sp, #-96]!
   2e304:	stp	x26, x25, [sp, #32]
   2e308:	stp	x24, x23, [sp, #48]
   2e30c:	stp	x22, x21, [sp, #64]
   2e310:	stp	x20, x19, [sp, #80]
   2e314:	ldr	w25, [x0, #4]
   2e318:	ldr	w26, [x1, #4]
   2e31c:	mov	x21, x0
   2e320:	mov	w0, wzr
   2e324:	str	x27, [sp, #16]
   2e328:	cmn	w25, w26
   2e32c:	mov	x29, sp
   2e330:	b.eq	2e3f8 <get_python_format_unnamed_arg_count@@Base+0xe730>  // b.none
   2e334:	orr	w8, w26, w25
   2e338:	cbz	w8, 2e3f8 <get_python_format_unnamed_arg_count@@Base+0xe730>
   2e33c:	cmp	w26, #0x0
   2e340:	cset	w8, ne  // ne = any
   2e344:	cmp	w25, #0x0
   2e348:	mov	x20, x5
   2e34c:	mov	x19, x3
   2e350:	mov	w22, w2
   2e354:	mov	x23, x1
   2e358:	mov	w24, wzr
   2e35c:	mov	w27, wzr
   2e360:	cset	w9, ne  // ne = any
   2e364:	tbz	w9, #0, 2e388 <get_python_format_unnamed_arg_count@@Base+0xe6c0>
   2e368:	tbz	w8, #0, 2e394 <get_python_format_unnamed_arg_count@@Base+0xe6cc>
   2e36c:	ldr	x8, [x21, #16]
   2e370:	ldr	x9, [x23, #16]
   2e374:	ldr	x0, [x8, w24, uxtw #3]
   2e378:	ldr	x1, [x9, w27, uxtw #3]
   2e37c:	bl	a8d0 <strcmp@plt>
   2e380:	cmp	w0, #0x1
   2e384:	b.lt	2e390 <get_python_format_unnamed_arg_count@@Base+0xe6c8>  // b.tstop
   2e388:	add	w27, w27, #0x1
   2e38c:	b	2e39c <get_python_format_unnamed_arg_count@@Base+0xe6d4>
   2e390:	tbz	w0, #31, 2e3bc <get_python_format_unnamed_arg_count@@Base+0xe6f4>
   2e394:	tbnz	w22, #0, 2e3cc <get_python_format_unnamed_arg_count@@Base+0xe704>
   2e398:	add	w24, w24, #0x1
   2e39c:	cmp	w24, w25
   2e3a0:	cset	w9, cc  // cc = lo, ul, last
   2e3a4:	cmp	w27, w26
   2e3a8:	cset	w8, cc  // cc = lo, ul, last
   2e3ac:	b.cc	2e364 <get_python_format_unnamed_arg_count@@Base+0xe69c>  // b.lo, b.ul, b.last
   2e3b0:	cmp	w24, w25
   2e3b4:	b.cc	2e364 <get_python_format_unnamed_arg_count@@Base+0xe69c>  // b.lo, b.ul, b.last
   2e3b8:	b	2e3c4 <get_python_format_unnamed_arg_count@@Base+0xe6fc>
   2e3bc:	add	w27, w27, #0x1
   2e3c0:	b	2e398 <get_python_format_unnamed_arg_count@@Base+0xe6d0>
   2e3c4:	mov	w0, wzr
   2e3c8:	b	2e3f8 <get_python_format_unnamed_arg_count@@Base+0xe730>
   2e3cc:	cbz	x19, 2e3f4 <get_python_format_unnamed_arg_count@@Base+0xe72c>
   2e3d0:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2e3d4:	add	x1, x1, #0xae1
   2e3d8:	mov	w2, #0x5                   	// #5
   2e3dc:	mov	x0, xzr
   2e3e0:	bl	acd0 <dcgettext@plt>
   2e3e4:	ldr	x8, [x21, #16]
   2e3e8:	mov	x2, x20
   2e3ec:	ldr	x1, [x8, w24, uxtw #3]
   2e3f0:	blr	x19
   2e3f4:	mov	w0, #0x1                   	// #1
   2e3f8:	ldp	x20, x19, [sp, #80]
   2e3fc:	ldp	x22, x21, [sp, #64]
   2e400:	ldp	x24, x23, [sp, #48]
   2e404:	ldp	x26, x25, [sp, #32]
   2e408:	ldr	x27, [sp, #16]
   2e40c:	ldp	x29, x30, [sp], #96
   2e410:	ret
   2e414:	ldr	x0, [x0]
   2e418:	ldr	x1, [x1]
   2e41c:	b	a8d0 <strcmp@plt>
   2e420:	sub	sp, sp, #0x70
   2e424:	stp	x29, x30, [sp, #16]
   2e428:	stp	x28, x27, [sp, #32]
   2e42c:	stp	x26, x25, [sp, #48]
   2e430:	stp	x24, x23, [sp, #64]
   2e434:	stp	x22, x21, [sp, #80]
   2e438:	stp	x20, x19, [sp, #96]
   2e43c:	ldrb	w10, [x0]
   2e440:	add	x29, sp, #0x10
   2e444:	str	x3, [sp, #8]
   2e448:	cbz	w10, 2e690 <get_python_format_unnamed_arg_count@@Base+0xe9c8>
   2e44c:	mov	x23, x0
   2e450:	mov	x22, x2
   2e454:	mov	w21, wzr
   2e458:	mov	w25, wzr
   2e45c:	mov	w8, wzr
   2e460:	mov	x19, xzr
   2e464:	mov	w12, wzr
   2e468:	mov	w27, #0xa                   	// #10
   2e46c:	mov	x9, x0
   2e470:	and	w10, w10, #0xff
   2e474:	cmp	w10, #0x25
   2e478:	add	x26, x9, #0x1
   2e47c:	b.ne	2e4c4 <get_python_format_unnamed_arg_count@@Base+0xe7fc>  // b.any
   2e480:	cbz	x22, 2e494 <get_python_format_unnamed_arg_count@@Base+0xe7cc>
   2e484:	sub	x10, x9, x23
   2e488:	ldrb	w11, [x22, x10]
   2e48c:	orr	w11, w11, #0x1
   2e490:	strb	w11, [x22, x10]
   2e494:	ldrb	w10, [x26]
   2e498:	add	w21, w21, #0x1
   2e49c:	cmp	w10, #0x25
   2e4a0:	b.ne	2e4d4 <get_python_format_unnamed_arg_count@@Base+0xe80c>  // b.any
   2e4a4:	mov	w28, w8
   2e4a8:	cbz	x22, 2e4bc <get_python_format_unnamed_arg_count@@Base+0xe7f4>
   2e4ac:	sub	x8, x26, x23
   2e4b0:	ldrb	w9, [x22, x8]
   2e4b4:	orr	w9, w9, #0x2
   2e4b8:	strb	w9, [x22, x8]
   2e4bc:	add	x26, x26, #0x1
   2e4c0:	mov	w8, w28
   2e4c4:	ldrb	w10, [x26]
   2e4c8:	mov	x9, x26
   2e4cc:	cbnz	w10, 2e470 <get_python_format_unnamed_arg_count@@Base+0xe7a8>
   2e4d0:	b	2e6ec <get_python_format_unnamed_arg_count@@Base+0xea24>
   2e4d4:	sub	w11, w10, #0x30
   2e4d8:	cmp	w11, #0x9
   2e4dc:	add	w28, w8, #0x1
   2e4e0:	b.hi	2e528 <get_python_format_unnamed_arg_count@@Base+0xe860>  // b.pmore
   2e4e4:	mov	w11, wzr
   2e4e8:	add	x24, x9, #0x2
   2e4ec:	mul	w9, w11, w27
   2e4f0:	add	w9, w9, w10, uxtb
   2e4f4:	ldrb	w10, [x24], #1
   2e4f8:	sub	w11, w10, #0x30
   2e4fc:	cmp	w11, #0xa
   2e500:	sub	w11, w9, #0x30
   2e504:	b.cc	2e4ec <get_python_format_unnamed_arg_count@@Base+0xe824>  // b.lo, b.ul, b.last
   2e508:	cmp	w10, #0x24
   2e50c:	mov	w20, w28
   2e510:	b.ne	2e52c <get_python_format_unnamed_arg_count@@Base+0xe864>  // b.any
   2e514:	mov	w28, w8
   2e518:	mov	w20, w11
   2e51c:	mov	x26, x24
   2e520:	cbnz	w11, 2e52c <get_python_format_unnamed_arg_count@@Base+0xe864>
   2e524:	b	2e86c <get_python_format_unnamed_arg_count@@Base+0xeba4>
   2e528:	mov	w20, w28
   2e52c:	ldrb	w8, [x26]
   2e530:	cmp	w8, #0x2c
   2e534:	b.gt	2e55c <get_python_format_unnamed_arg_count@@Base+0xe894>
   2e538:	cmp	w8, #0x20
   2e53c:	mov	w9, #0x1                   	// #1
   2e540:	b.eq	2e578 <get_python_format_unnamed_arg_count@@Base+0xe8b0>  // b.none
   2e544:	cmp	w8, #0x27
   2e548:	b.ne	2e580 <get_python_format_unnamed_arg_count@@Base+0xe8b8>  // b.any
   2e54c:	ldrb	w8, [x26, #1]
   2e550:	cbz	w8, 2e6a4 <get_python_format_unnamed_arg_count@@Base+0xe9dc>
   2e554:	mov	w9, #0x2                   	// #2
   2e558:	b	2e578 <get_python_format_unnamed_arg_count@@Base+0xe8b0>
   2e55c:	cmp	w8, #0x2d
   2e560:	b.eq	2e574 <get_python_format_unnamed_arg_count@@Base+0xe8ac>  // b.none
   2e564:	cmp	w8, #0x30
   2e568:	mov	w9, #0x1                   	// #1
   2e56c:	b.eq	2e578 <get_python_format_unnamed_arg_count@@Base+0xe8b0>  // b.none
   2e570:	b	2e580 <get_python_format_unnamed_arg_count@@Base+0xe8b8>
   2e574:	mov	w9, #0x1                   	// #1
   2e578:	add	x26, x26, x9
   2e57c:	b	2e52c <get_python_format_unnamed_arg_count@@Base+0xe864>
   2e580:	sub	w9, w8, #0x30
   2e584:	cmp	w9, #0x9
   2e588:	b.hi	2e59c <get_python_format_unnamed_arg_count@@Base+0xe8d4>  // b.pmore
   2e58c:	ldrb	w8, [x26, #1]!
   2e590:	sub	w9, w8, #0x30
   2e594:	cmp	w9, #0xa
   2e598:	b.cc	2e58c <get_python_format_unnamed_arg_count@@Base+0xe8c4>  // b.lo, b.ul, b.last
   2e59c:	cmp	w8, #0x2e
   2e5a0:	b.ne	2e5cc <get_python_format_unnamed_arg_count@@Base+0xe904>  // b.any
   2e5a4:	mov	x8, x26
   2e5a8:	ldrb	w9, [x8, #1]!
   2e5ac:	sub	w9, w9, #0x30
   2e5b0:	cmp	w9, #0x9
   2e5b4:	b.hi	2e5d4 <get_python_format_unnamed_arg_count@@Base+0xe90c>  // b.pmore
   2e5b8:	mov	x26, x8
   2e5bc:	ldrb	w8, [x26, #1]!
   2e5c0:	sub	w9, w8, #0x30
   2e5c4:	cmp	w9, #0xa
   2e5c8:	b.cc	2e5bc <get_python_format_unnamed_arg_count@@Base+0xe8f4>  // b.lo, b.ul, b.last
   2e5cc:	cmp	w8, #0x6c
   2e5d0:	cinc	x26, x26, eq  // eq = none
   2e5d4:	ldrb	w8, [x26]
   2e5d8:	mov	w24, wzr
   2e5dc:	cmp	w8, #0x63
   2e5e0:	b.le	2e610 <get_python_format_unnamed_arg_count@@Base+0xe948>
   2e5e4:	sub	w9, w8, #0x6f
   2e5e8:	cmp	w9, #0x9
   2e5ec:	b.hi	2e630 <get_python_format_unnamed_arg_count@@Base+0xe968>  // b.pmore
   2e5f0:	adrp	x13, 3a000 <plural_table_size@@Base+0xc00>
   2e5f4:	add	x13, x13, #0xb8a
   2e5f8:	adr	x10, 2e608 <get_python_format_unnamed_arg_count@@Base+0xe940>
   2e5fc:	ldrb	w11, [x13, x9]
   2e600:	add	x10, x10, x11, lsl #2
   2e604:	br	x10
   2e608:	mov	w24, #0x3                   	// #3
   2e60c:	b	2e658 <get_python_format_unnamed_arg_count@@Base+0xe990>
   2e610:	cmp	w8, #0x61
   2e614:	b.le	2e644 <get_python_format_unnamed_arg_count@@Base+0xe97c>
   2e618:	cmp	w8, #0x62
   2e61c:	b.eq	2e658 <get_python_format_unnamed_arg_count@@Base+0xe990>  // b.none
   2e620:	cmp	w8, #0x63
   2e624:	b.ne	2e83c <get_python_format_unnamed_arg_count@@Base+0xeb74>  // b.any
   2e628:	mov	w24, #0x2                   	// #2
   2e62c:	b	2e658 <get_python_format_unnamed_arg_count@@Base+0xe990>
   2e630:	sub	w9, w8, #0x65
   2e634:	cmp	w9, #0x2
   2e638:	b.cs	2e650 <get_python_format_unnamed_arg_count@@Base+0xe988>  // b.hs, b.nlast
   2e63c:	mov	w24, #0x1                   	// #1
   2e640:	b	2e658 <get_python_format_unnamed_arg_count@@Base+0xe990>
   2e644:	cmp	w8, #0x58
   2e648:	b.eq	2e658 <get_python_format_unnamed_arg_count@@Base+0xe990>  // b.none
   2e64c:	b	2e7fc <get_python_format_unnamed_arg_count@@Base+0xeb34>
   2e650:	cmp	w8, #0x64
   2e654:	b.ne	2e83c <get_python_format_unnamed_arg_count@@Base+0xeb74>  // b.any
   2e658:	cmp	w12, w25
   2e65c:	b.ne	2e67c <get_python_format_unnamed_arg_count@@Base+0xe9b4>  // b.any
   2e660:	mov	x0, x19
   2e664:	mov	w19, #0x1                   	// #1
   2e668:	bfi	w19, w25, #1, #31
   2e66c:	lsl	x1, x19, #3
   2e670:	bl	a460 <xrealloc@plt>
   2e674:	mov	x12, x19
   2e678:	mov	x19, x0
   2e67c:	add	x8, x19, w25, uxtw #3
   2e680:	add	w25, w25, #0x1
   2e684:	stp	w20, w24, [x8]
   2e688:	cbnz	x22, 2e4ac <get_python_format_unnamed_arg_count@@Base+0xe7e4>
   2e68c:	b	2e4bc <get_python_format_unnamed_arg_count@@Base+0xe7f4>
   2e690:	mov	w21, wzr
   2e694:	mov	x19, xzr
   2e698:	mov	w28, wzr
   2e69c:	mov	w25, wzr
   2e6a0:	b	2e7c8 <get_python_format_unnamed_arg_count@@Base+0xeb00>
   2e6a4:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2e6a8:	add	x1, x1, #0x7e0
   2e6ac:	mov	w2, #0x5                   	// #5
   2e6b0:	mov	x0, xzr
   2e6b4:	bl	acd0 <dcgettext@plt>
   2e6b8:	bl	a5a0 <xstrdup@plt>
   2e6bc:	ldr	x8, [sp, #8]
   2e6c0:	str	x0, [x8]
   2e6c4:	cbz	x22, 2e6d8 <get_python_format_unnamed_arg_count@@Base+0xea10>
   2e6c8:	sub	x8, x26, x23
   2e6cc:	ldrb	w9, [x22, x8]
   2e6d0:	orr	w9, w9, #0x4
   2e6d4:	strb	w9, [x22, x8]
   2e6d8:	cbz	x19, 2e6e4 <get_python_format_unnamed_arg_count@@Base+0xea1c>
   2e6dc:	mov	x0, x19
   2e6e0:	bl	aa00 <free@plt>
   2e6e4:	mov	x0, xzr
   2e6e8:	b	2e7dc <get_python_format_unnamed_arg_count@@Base+0xeb14>
   2e6ec:	mov	x28, x12
   2e6f0:	cmp	w25, #0x2
   2e6f4:	b.cc	2e7c8 <get_python_format_unnamed_arg_count@@Base+0xeb00>  // b.lo, b.ul, b.last
   2e6f8:	mov	w22, w25
   2e6fc:	adrp	x3, 2e000 <get_python_format_unnamed_arg_count@@Base+0xe338>
   2e700:	add	x3, x3, #0xad0
   2e704:	mov	w2, #0x8                   	// #8
   2e708:	mov	x0, x19
   2e70c:	mov	x1, x22
   2e710:	bl	a2f0 <qsort@plt>
   2e714:	adrp	x23, 39000 <get_search_path@@Base+0x2b4c>
   2e718:	mov	x20, xzr
   2e71c:	mov	w8, wzr
   2e720:	mov	w25, wzr
   2e724:	add	x23, x23, #0x8bd
   2e728:	mov	x26, x19
   2e72c:	cbz	w25, 2e770 <get_python_format_unnamed_arg_count@@Base+0xeaa8>
   2e730:	sub	w9, w25, #0x1
   2e734:	lsl	x11, x9, #3
   2e738:	ldr	w10, [x26]
   2e73c:	ldr	w11, [x19, x11]
   2e740:	cmp	w10, w11
   2e744:	b.ne	2e770 <get_python_format_unnamed_arg_count@@Base+0xeaa8>  // b.any
   2e748:	add	x27, x19, x9, lsl #3
   2e74c:	ldr	w24, [x26, #4]
   2e750:	ldr	w9, [x27, #4]!
   2e754:	cmp	w24, w9
   2e758:	cset	w9, eq  // eq = none
   2e75c:	orr	w10, w8, w9
   2e760:	cset	w9, ne  // ne = any
   2e764:	tbz	w10, #0, 2e78c <get_python_format_unnamed_arg_count@@Base+0xeac4>
   2e768:	orr	w8, w8, w9
   2e76c:	b	2e7b0 <get_python_format_unnamed_arg_count@@Base+0xeae8>
   2e770:	cmp	x20, w25, uxtw
   2e774:	b.ls	2e784 <get_python_format_unnamed_arg_count@@Base+0xeabc>  // b.plast
   2e778:	ldr	x9, [x26]
   2e77c:	mov	w10, w25
   2e780:	str	x9, [x19, x10, lsl #3]
   2e784:	add	w25, w25, #0x1
   2e788:	b	2e7b4 <get_python_format_unnamed_arg_count@@Base+0xeaec>
   2e78c:	mov	w2, #0x5                   	// #5
   2e790:	mov	x0, xzr
   2e794:	mov	x1, x23
   2e798:	bl	acd0 <dcgettext@plt>
   2e79c:	ldr	w1, [x26]
   2e7a0:	bl	aa20 <xasprintf@plt>
   2e7a4:	ldr	x8, [sp, #8]
   2e7a8:	str	x0, [x8]
   2e7ac:	mov	w8, #0x1                   	// #1
   2e7b0:	str	w24, [x27]
   2e7b4:	add	x20, x20, #0x1
   2e7b8:	cmp	x22, x20
   2e7bc:	add	x26, x26, #0x8
   2e7c0:	b.ne	2e72c <get_python_format_unnamed_arg_count@@Base+0xea64>  // b.any
   2e7c4:	tbnz	w8, #0, 2e6d8 <get_python_format_unnamed_arg_count@@Base+0xea10>
   2e7c8:	mov	w0, #0x18                  	// #24
   2e7cc:	bl	a590 <xmalloc@plt>
   2e7d0:	stp	w21, w25, [x0]
   2e7d4:	str	w28, [x0, #8]
   2e7d8:	str	x19, [x0, #16]
   2e7dc:	ldp	x20, x19, [sp, #96]
   2e7e0:	ldp	x22, x21, [sp, #80]
   2e7e4:	ldp	x24, x23, [sp, #64]
   2e7e8:	ldp	x26, x25, [sp, #48]
   2e7ec:	ldp	x28, x27, [sp, #32]
   2e7f0:	ldp	x29, x30, [sp, #16]
   2e7f4:	add	sp, sp, #0x70
   2e7f8:	ret
   2e7fc:	cbnz	w8, 2e83c <get_python_format_unnamed_arg_count@@Base+0xeb74>
   2e800:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2e804:	add	x1, x1, #0x7e0
   2e808:	mov	w2, #0x5                   	// #5
   2e80c:	mov	x0, xzr
   2e810:	bl	acd0 <dcgettext@plt>
   2e814:	bl	a5a0 <xstrdup@plt>
   2e818:	ldr	x8, [sp, #8]
   2e81c:	str	x0, [x8]
   2e820:	cbz	x22, 2e6d8 <get_python_format_unnamed_arg_count@@Base+0xea10>
   2e824:	sub	x8, x26, x23
   2e828:	add	x8, x8, x22
   2e82c:	ldurb	w9, [x8, #-1]
   2e830:	orr	w9, w9, #0x4
   2e834:	sturb	w9, [x8, #-1]
   2e838:	b	2e6d8 <get_python_format_unnamed_arg_count@@Base+0xea10>
   2e83c:	sub	w8, w8, #0x20
   2e840:	cmp	w8, #0x5e
   2e844:	b.hi	2e8a0 <get_python_format_unnamed_arg_count@@Base+0xebd8>  // b.pmore
   2e848:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2e84c:	add	x1, x1, #0x80e
   2e850:	mov	w2, #0x5                   	// #5
   2e854:	mov	x0, xzr
   2e858:	bl	acd0 <dcgettext@plt>
   2e85c:	ldrb	w2, [x26]
   2e860:	mov	w1, w21
   2e864:	bl	aa20 <xasprintf@plt>
   2e868:	b	2e6bc <get_python_format_unnamed_arg_count@@Base+0xe9f4>
   2e86c:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2e870:	add	x1, x1, #0x58e
   2e874:	mov	w2, #0x5                   	// #5
   2e878:	mov	x0, xzr
   2e87c:	bl	acd0 <dcgettext@plt>
   2e880:	mov	w1, w21
   2e884:	bl	aa20 <xasprintf@plt>
   2e888:	ldr	x8, [sp, #8]
   2e88c:	str	x0, [x8]
   2e890:	cbz	x22, 2e6d8 <get_python_format_unnamed_arg_count@@Base+0xea10>
   2e894:	sub	x8, x24, #0x1
   2e898:	sub	x8, x8, x23
   2e89c:	b	2e6cc <get_python_format_unnamed_arg_count@@Base+0xea04>
   2e8a0:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2e8a4:	add	x1, x1, #0x862
   2e8a8:	mov	w2, #0x5                   	// #5
   2e8ac:	mov	x0, xzr
   2e8b0:	bl	acd0 <dcgettext@plt>
   2e8b4:	mov	w1, w21
   2e8b8:	bl	aa20 <xasprintf@plt>
   2e8bc:	b	2e6bc <get_python_format_unnamed_arg_count@@Base+0xe9f4>
   2e8c0:	stp	x29, x30, [sp, #-32]!
   2e8c4:	str	x19, [sp, #16]
   2e8c8:	mov	x19, x0
   2e8cc:	ldr	x0, [x0, #16]
   2e8d0:	mov	x29, sp
   2e8d4:	cbz	x0, 2e8dc <get_python_format_unnamed_arg_count@@Base+0xec14>
   2e8d8:	bl	aa00 <free@plt>
   2e8dc:	mov	x0, x19
   2e8e0:	ldr	x19, [sp, #16]
   2e8e4:	ldp	x29, x30, [sp], #32
   2e8e8:	b	aa00 <free@plt>
   2e8ec:	ldr	w0, [x0]
   2e8f0:	ret
   2e8f4:	stp	x29, x30, [sp, #-80]!
   2e8f8:	stp	x24, x23, [sp, #32]
   2e8fc:	stp	x22, x21, [sp, #48]
   2e900:	stp	x20, x19, [sp, #64]
   2e904:	ldr	w9, [x0, #4]
   2e908:	ldr	w8, [x1, #4]
   2e90c:	str	x25, [sp, #16]
   2e910:	mov	x29, sp
   2e914:	cmn	w9, w8
   2e918:	b.ne	2e924 <get_python_format_unnamed_arg_count@@Base+0xec5c>  // b.any
   2e91c:	mov	w0, wzr
   2e920:	b	2eab8 <get_python_format_unnamed_arg_count@@Base+0xedf0>
   2e924:	mov	x20, x5
   2e928:	mov	x21, x4
   2e92c:	mov	x19, x3
   2e930:	mov	x22, x1
   2e934:	mov	x23, x0
   2e938:	orr	w10, w8, w9
   2e93c:	cbz	w10, 2e9b8 <get_python_format_unnamed_arg_count@@Base+0xecf0>
   2e940:	cmp	w8, #0x0
   2e944:	cset	w11, ne  // ne = any
   2e948:	cmp	w9, #0x0
   2e94c:	mov	x10, xzr
   2e950:	mov	x24, xzr
   2e954:	mov	w25, wzr
   2e958:	cset	w12, ne  // ne = any
   2e95c:	tbz	w12, #0, 2ea18 <get_python_format_unnamed_arg_count@@Base+0xed50>
   2e960:	tbz	w11, #0, 2e988 <get_python_format_unnamed_arg_count@@Base+0xecc0>
   2e964:	ldr	x11, [x23, #16]
   2e968:	ldr	x12, [x22, #16]
   2e96c:	mov	w13, w25
   2e970:	lsl	x13, x13, #3
   2e974:	ldr	w11, [x11, x10]
   2e978:	ldr	w12, [x12, x13]
   2e97c:	cmp	w11, w12
   2e980:	b.hi	2ea18 <get_python_format_unnamed_arg_count@@Base+0xed50>  // b.pmore
   2e984:	b.cs	2e990 <get_python_format_unnamed_arg_count@@Base+0xecc8>  // b.hs, b.nlast
   2e988:	tbz	w2, #0, 2e994 <get_python_format_unnamed_arg_count@@Base+0xeccc>
   2e98c:	b	2ea50 <get_python_format_unnamed_arg_count@@Base+0xed88>
   2e990:	add	w25, w25, #0x1
   2e994:	add	x24, x24, #0x1
   2e998:	cmp	x24, x9
   2e99c:	cset	w12, cc  // cc = lo, ul, last
   2e9a0:	cmp	w25, w8
   2e9a4:	cset	w11, cc  // cc = lo, ul, last
   2e9a8:	add	x10, x10, #0x8
   2e9ac:	b.cc	2e95c <get_python_format_unnamed_arg_count@@Base+0xec94>  // b.lo, b.ul, b.last
   2e9b0:	cmp	x24, x9
   2e9b4:	b.cc	2e95c <get_python_format_unnamed_arg_count@@Base+0xec94>  // b.lo, b.ul, b.last
   2e9b8:	cbz	w8, 2e91c <get_python_format_unnamed_arg_count@@Base+0xec54>
   2e9bc:	ldr	x9, [x23, #16]
   2e9c0:	ldr	x10, [x22, #16]
   2e9c4:	mov	w12, wzr
   2e9c8:	mov	w11, wzr
   2e9cc:	mov	w12, w12
   2e9d0:	mov	w23, w11
   2e9d4:	lsl	x13, x12, #3
   2e9d8:	lsl	x14, x23, #3
   2e9dc:	ldr	w13, [x9, x13]
   2e9e0:	ldr	w14, [x10, x14]
   2e9e4:	cmp	w13, w14
   2e9e8:	b.ne	2ea08 <get_python_format_unnamed_arg_count@@Base+0xed40>  // b.any
   2e9ec:	add	x13, x9, x12, lsl #3
   2e9f0:	add	x14, x10, x23, lsl #3
   2e9f4:	ldr	w13, [x13, #4]
   2e9f8:	ldr	w14, [x14, #4]
   2e9fc:	cmp	w13, w14
   2ea00:	b.ne	2ea84 <get_python_format_unnamed_arg_count@@Base+0xedbc>  // b.any
   2ea04:	add	w11, w11, #0x1
   2ea08:	cmp	w11, w8
   2ea0c:	add	w12, w12, #0x1
   2ea10:	b.cc	2e9cc <get_python_format_unnamed_arg_count@@Base+0xed04>  // b.lo, b.ul, b.last
   2ea14:	b	2e91c <get_python_format_unnamed_arg_count@@Base+0xec54>
   2ea18:	cbz	x19, 2eab4 <get_python_format_unnamed_arg_count@@Base+0xedec>
   2ea1c:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2ea20:	add	x1, x1, #0x333
   2ea24:	mov	w2, #0x5                   	// #5
   2ea28:	mov	x0, xzr
   2ea2c:	bl	acd0 <dcgettext@plt>
   2ea30:	ldr	x8, [x22, #16]
   2ea34:	mov	w9, w25
   2ea38:	lsl	x9, x9, #3
   2ea3c:	mov	x2, x20
   2ea40:	ldr	w1, [x8, x9]
   2ea44:	mov	x3, x21
   2ea48:	blr	x19
   2ea4c:	b	2eab4 <get_python_format_unnamed_arg_count@@Base+0xedec>
   2ea50:	cbz	x19, 2eab4 <get_python_format_unnamed_arg_count@@Base+0xedec>
   2ea54:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2ea58:	add	x1, x1, #0x37d
   2ea5c:	mov	w2, #0x5                   	// #5
   2ea60:	mov	x0, xzr
   2ea64:	bl	acd0 <dcgettext@plt>
   2ea68:	ldr	x8, [x23, #16]
   2ea6c:	and	x9, x24, #0xffffffff
   2ea70:	lsl	x9, x9, #3
   2ea74:	mov	x2, x20
   2ea78:	ldr	w1, [x8, x9]
   2ea7c:	blr	x19
   2ea80:	b	2eab4 <get_python_format_unnamed_arg_count@@Base+0xedec>
   2ea84:	cbz	x19, 2eab4 <get_python_format_unnamed_arg_count@@Base+0xedec>
   2ea88:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2ea8c:	add	x1, x1, #0x546
   2ea90:	mov	w2, #0x5                   	// #5
   2ea94:	mov	x0, xzr
   2ea98:	bl	acd0 <dcgettext@plt>
   2ea9c:	ldr	x8, [x22, #16]
   2eaa0:	lsl	x9, x23, #3
   2eaa4:	mov	x1, x21
   2eaa8:	mov	x2, x20
   2eaac:	ldr	w3, [x8, x9]
   2eab0:	blr	x19
   2eab4:	mov	w0, #0x1                   	// #1
   2eab8:	ldp	x20, x19, [sp, #64]
   2eabc:	ldp	x22, x21, [sp, #48]
   2eac0:	ldp	x24, x23, [sp, #32]
   2eac4:	ldr	x25, [sp, #16]
   2eac8:	ldp	x29, x30, [sp], #80
   2eacc:	ret
   2ead0:	ldr	w8, [x0]
   2ead4:	ldr	w9, [x1]
   2ead8:	cmp	w8, w9
   2eadc:	csetm	w8, cc  // cc = lo, ul, last
   2eae0:	csinc	w0, w8, wzr, ls  // ls = plast
   2eae4:	ret
   2eae8:	sub	sp, sp, #0x80
   2eaec:	stp	x29, x30, [sp, #32]
   2eaf0:	stp	x28, x27, [sp, #48]
   2eaf4:	stp	x26, x25, [sp, #64]
   2eaf8:	stp	x24, x23, [sp, #80]
   2eafc:	stp	x22, x21, [sp, #96]
   2eb00:	stp	x20, x19, [sp, #112]
   2eb04:	ldrb	w9, [x0]
   2eb08:	add	x29, sp, #0x20
   2eb0c:	cbz	w9, 2f028 <get_python_format_unnamed_arg_count@@Base+0xf360>
   2eb10:	mov	x22, x0
   2eb14:	adrp	x16, 3a000 <plural_table_size@@Base+0xc00>
   2eb18:	adrp	x17, 3a000 <plural_table_size@@Base+0xc00>
   2eb1c:	mov	x1, #0xa000000000          	// #687194767360
   2eb20:	mov	x21, x2
   2eb24:	mov	w28, wzr
   2eb28:	mov	x19, xzr
   2eb2c:	mov	w26, wzr
   2eb30:	mov	w23, wzr
   2eb34:	mov	w2, wzr
   2eb38:	mov	w14, wzr
   2eb3c:	mov	w27, #0xa                   	// #10
   2eb40:	mov	w15, #0x1                   	// #1
   2eb44:	add	x16, x16, #0xb94
   2eb48:	add	x17, x17, #0xbe6
   2eb4c:	mov	w18, #0x11                  	// #17
   2eb50:	mov	w0, #0x60                  	// #96
   2eb54:	movk	x1, #0x5000, lsl #48
   2eb58:	mov	x8, x22
   2eb5c:	str	x3, [sp, #8]
   2eb60:	and	w9, w9, #0xff
   2eb64:	cmp	w9, #0x25
   2eb68:	add	x20, x8, #0x1
   2eb6c:	b.ne	2efac <get_python_format_unnamed_arg_count@@Base+0xf2e4>  // b.any
   2eb70:	cbz	x21, 2eb84 <get_python_format_unnamed_arg_count@@Base+0xeebc>
   2eb74:	sub	x9, x8, x22
   2eb78:	ldrb	w10, [x21, x9]
   2eb7c:	orr	w10, w10, #0x1
   2eb80:	strb	w10, [x21, x9]
   2eb84:	ldrb	w9, [x20]
   2eb88:	add	w23, w23, #0x1
   2eb8c:	cmp	w9, #0x3e
   2eb90:	b.hi	2eba0 <get_python_format_unnamed_arg_count@@Base+0xeed8>  // b.pmore
   2eb94:	lsl	x10, x15, x9
   2eb98:	tst	x10, x1
   2eb9c:	b.ne	2ef94 <get_python_format_unnamed_arg_count@@Base+0xf2cc>  // b.any
   2eba0:	cmp	w9, #0x6d
   2eba4:	b.ne	2ebb4 <get_python_format_unnamed_arg_count@@Base+0xeeec>  // b.any
   2eba8:	mov	w28, #0x1                   	// #1
   2ebac:	cbnz	x21, 2ef98 <get_python_format_unnamed_arg_count@@Base+0xf2d0>
   2ebb0:	b	2efa8 <get_python_format_unnamed_arg_count@@Base+0xf2e0>
   2ebb4:	sub	w10, w9, #0x30
   2ebb8:	cmp	w10, #0x9
   2ebbc:	stur	w28, [x29, #-12]
   2ebc0:	b.hi	2ebf8 <get_python_format_unnamed_arg_count@@Base+0xef30>  // b.pmore
   2ebc4:	mov	w24, wzr
   2ebc8:	add	x28, x8, #0x2
   2ebcc:	mul	w8, w24, w27
   2ebd0:	add	w8, w8, w9, uxtb
   2ebd4:	ldrb	w9, [x28], #1
   2ebd8:	sub	w24, w8, #0x30
   2ebdc:	sub	w10, w9, #0x30
   2ebe0:	cmp	w10, #0xa
   2ebe4:	b.cc	2ebcc <get_python_format_unnamed_arg_count@@Base+0xef04>  // b.lo, b.ul, b.last
   2ebe8:	cmp	w9, #0x24
   2ebec:	b.ne	2ebf8 <get_python_format_unnamed_arg_count@@Base+0xef30>  // b.any
   2ebf0:	cbnz	w24, 2ec00 <get_python_format_unnamed_arg_count@@Base+0xef38>
   2ebf4:	b	2f220 <get_python_format_unnamed_arg_count@@Base+0xf558>
   2ebf8:	mov	w24, wzr
   2ebfc:	mov	x28, x20
   2ec00:	mov	w10, wzr
   2ec04:	mov	w8, wzr
   2ec08:	mov	w9, wzr
   2ec0c:	mov	w11, wzr
   2ec10:	mov	w12, wzr
   2ec14:	add	x25, x28, #0x2
   2ec18:	add	x28, x28, #0x3
   2ec1c:	ldurb	w13, [x25, #-2]
   2ec20:	cmp	w13, #0x6b
   2ec24:	b.le	2ec4c <get_python_format_unnamed_arg_count@@Base+0xef84>
   2ec28:	cmp	w13, #0x6c
   2ec2c:	b.eq	2ec68 <get_python_format_unnamed_arg_count@@Base+0xefa0>  // b.none
   2ec30:	cmp	w13, #0x77
   2ec34:	b.eq	2ec7c <get_python_format_unnamed_arg_count@@Base+0xefb4>  // b.none
   2ec38:	cmp	w13, #0x71
   2ec3c:	b.ne	2eca0 <get_python_format_unnamed_arg_count@@Base+0xefd8>  // b.any
   2ec40:	cbnz	w10, 2f040 <get_python_format_unnamed_arg_count@@Base+0xf378>
   2ec44:	mov	w10, #0x1                   	// #1
   2ec48:	b	2ec94 <get_python_format_unnamed_arg_count@@Base+0xefcc>
   2ec4c:	cmp	w13, #0x23
   2ec50:	b.eq	2ec8c <get_python_format_unnamed_arg_count@@Base+0xefc4>  // b.none
   2ec54:	cmp	w13, #0x2b
   2ec58:	b.ne	2eca0 <get_python_format_unnamed_arg_count@@Base+0xefd8>  // b.any
   2ec5c:	cbnz	w11, 2f040 <get_python_format_unnamed_arg_count@@Base+0xf378>
   2ec60:	mov	w11, #0x1                   	// #1
   2ec64:	b	2ec94 <get_python_format_unnamed_arg_count@@Base+0xefcc>
   2ec68:	cmp	w8, #0x1
   2ec6c:	b.hi	2f040 <get_python_format_unnamed_arg_count@@Base+0xf378>  // b.pmore
   2ec70:	cbnz	w9, 2f040 <get_python_format_unnamed_arg_count@@Base+0xf378>
   2ec74:	add	w8, w8, #0x1
   2ec78:	b	2ec94 <get_python_format_unnamed_arg_count@@Base+0xefcc>
   2ec7c:	orr	w8, w9, w8
   2ec80:	cbnz	w8, 2f040 <get_python_format_unnamed_arg_count@@Base+0xf378>
   2ec84:	mov	w9, #0x1                   	// #1
   2ec88:	b	2ec94 <get_python_format_unnamed_arg_count@@Base+0xefcc>
   2ec8c:	cbnz	w12, 2f040 <get_python_format_unnamed_arg_count@@Base+0xf378>
   2ec90:	mov	w12, #0x1                   	// #1
   2ec94:	add	x25, x25, #0x1
   2ec98:	add	x28, x28, #0x1
   2ec9c:	b	2ec1c <get_python_format_unnamed_arg_count@@Base+0xef54>
   2eca0:	cmp	w8, #0x1
   2eca4:	sub	x20, x25, #0x2
   2eca8:	b.eq	2ecbc <get_python_format_unnamed_arg_count@@Base+0xeff4>  // b.none
   2ecac:	cmp	w8, #0x2
   2ecb0:	b.ne	2ecc4 <get_python_format_unnamed_arg_count@@Base+0xeffc>  // b.any
   2ecb4:	mov	w8, #0x40                  	// #64
   2ecb8:	b	2eccc <get_python_format_unnamed_arg_count@@Base+0xf004>
   2ecbc:	mov	w8, #0x20                  	// #32
   2ecc0:	b	2eccc <get_python_format_unnamed_arg_count@@Base+0xf004>
   2ecc4:	cmp	w9, #0x0
   2ecc8:	csel	w8, wzr, w0, eq  // eq = none
   2eccc:	cmp	w13, #0x6e
   2ecd0:	b.gt	2ecf8 <get_python_format_unnamed_arg_count@@Base+0xf030>
   2ecd4:	sub	w9, w13, #0x41
   2ecd8:	cmp	w9, #0x28
   2ecdc:	b.hi	2ed24 <get_python_format_unnamed_arg_count@@Base+0xf05c>  // b.pmore
   2ece0:	adr	x10, 2ecf0 <get_python_format_unnamed_arg_count@@Base+0xf028>
   2ece4:	ldrh	w11, [x16, x9, lsl #1]
   2ece8:	add	x10, x10, x11, lsl #2
   2ecec:	br	x10
   2ecf0:	mov	w9, #0x86                  	// #134
   2ecf4:	b	2ef10 <get_python_format_unnamed_arg_count@@Base+0xf248>
   2ecf8:	sub	w9, w13, #0x6f
   2ecfc:	cmp	w9, #0x9
   2ed00:	b.hi	2f250 <get_python_format_unnamed_arg_count@@Base+0xf588>  // b.pmore
   2ed04:	adr	x10, 2ed14 <get_python_format_unnamed_arg_count@@Base+0xf04c>
   2ed08:	ldrh	w11, [x17, x9, lsl #1]
   2ed0c:	add	x10, x10, x11, lsl #2
   2ed10:	br	x10
   2ed14:	orr	w9, w8, w18
   2ed18:	b	2ef10 <get_python_format_unnamed_arg_count@@Base+0xf248>
   2ed1c:	orr	w9, w8, #0x1
   2ed20:	b	2ef10 <get_python_format_unnamed_arg_count@@Base+0xf248>
   2ed24:	cmp	w13, #0x2e
   2ed28:	b.ne	2f1e0 <get_python_format_unnamed_arg_count@@Base+0xf518>  // b.any
   2ed2c:	mov	x8, x25
   2ed30:	ldrb	w9, [x8, #-1]!
   2ed34:	sub	w10, w9, #0x30
   2ed38:	cmp	w10, #0x9
   2ed3c:	b.hi	2ede0 <get_python_format_unnamed_arg_count@@Base+0xf118>  // b.pmore
   2ed40:	mov	x20, x8
   2ed44:	ldrb	w8, [x20, #1]!
   2ed48:	sub	w9, w8, #0x30
   2ed4c:	cmp	w9, #0xa
   2ed50:	b.cc	2ed44 <get_python_format_unnamed_arg_count@@Base+0xf07c>  // b.lo, b.ul, b.last
   2ed54:	ldur	w28, [x29, #-12]
   2ed58:	cmp	w8, #0x73
   2ed5c:	b.ne	2f2b0 <get_python_format_unnamed_arg_count@@Base+0xf5e8>  // b.any
   2ed60:	mov	w9, #0x3                   	// #3
   2ed64:	b	2ef14 <get_python_format_unnamed_arg_count@@Base+0xf24c>
   2ed68:	mov	w9, #0x4                   	// #4
   2ed6c:	b	2ef10 <get_python_format_unnamed_arg_count@@Base+0xf248>
   2ed70:	mov	w9, #0x3                   	// #3
   2ed74:	b	2ef10 <get_python_format_unnamed_arg_count@@Base+0xf248>
   2ed78:	mov	w9, #0x286                 	// #646
   2ed7c:	b	2ef10 <get_python_format_unnamed_arg_count@@Base+0xf248>
   2ed80:	mov	w9, #0x7                   	// #7
   2ed84:	b	2ef10 <get_python_format_unnamed_arg_count@@Base+0xf248>
   2ed88:	mov	w9, #0x306                 	// #774
   2ed8c:	b	2ef10 <get_python_format_unnamed_arg_count@@Base+0xf248>
   2ed90:	mov	w9, #0x186                 	// #390
   2ed94:	b	2ef10 <get_python_format_unnamed_arg_count@@Base+0xf248>
   2ed98:	mov	w9, #0x5                   	// #5
   2ed9c:	b	2ef10 <get_python_format_unnamed_arg_count@@Base+0xf248>
   2eda0:	mov	w9, #0x106                 	// #262
   2eda4:	b	2ef10 <get_python_format_unnamed_arg_count@@Base+0xf248>
   2eda8:	mov	w9, #0x8                   	// #8
   2edac:	b	2ef10 <get_python_format_unnamed_arg_count@@Base+0xf248>
   2edb0:	mov	w9, #0x407                 	// #1031
   2edb4:	b	2ef10 <get_python_format_unnamed_arg_count@@Base+0xf248>
   2edb8:	mov	w9, #0x1001                	// #4097
   2edbc:	b	2ef10 <get_python_format_unnamed_arg_count@@Base+0xf248>
   2edc0:	mov	w9, #0x807                 	// #2055
   2edc4:	b	2ef10 <get_python_format_unnamed_arg_count@@Base+0xf248>
   2edc8:	mov	w9, #0x206                 	// #518
   2edcc:	b	2ef10 <get_python_format_unnamed_arg_count@@Base+0xf248>
   2edd0:	mov	w9, #0x386                 	// #902
   2edd4:	b	2ef10 <get_python_format_unnamed_arg_count@@Base+0xf248>
   2edd8:	mov	w9, #0x2                   	// #2
   2eddc:	b	2ef10 <get_python_format_unnamed_arg_count@@Base+0xf248>
   2ede0:	cmp	w9, #0x2a
   2ede4:	b.ne	2f2e0 <get_python_format_unnamed_arg_count@@Base+0xf618>  // b.any
   2ede8:	ldrb	w8, [x25]
   2edec:	sub	w9, w8, #0x30
   2edf0:	cmp	w9, #0x9
   2edf4:	b.hi	2ee9c <get_python_format_unnamed_arg_count@@Base+0xf1d4>  // b.pmore
   2edf8:	mov	w20, wzr
   2edfc:	mul	w9, w20, w27
   2ee00:	add	w9, w9, w8, uxtb
   2ee04:	ldrb	w8, [x28], #1
   2ee08:	sub	w20, w9, #0x30
   2ee0c:	sub	w10, w8, #0x30
   2ee10:	cmp	w10, #0xa
   2ee14:	b.cc	2edfc <get_python_format_unnamed_arg_count@@Base+0xf134>  // b.lo, b.ul, b.last
   2ee18:	cmp	w8, #0x24
   2ee1c:	b.ne	2ee9c <get_python_format_unnamed_arg_count@@Base+0xf1d4>  // b.any
   2ee20:	cbz	w20, 2f3c8 <get_python_format_unnamed_arg_count@@Base+0xf700>
   2ee24:	cbnz	w26, 2f3d4 <get_python_format_unnamed_arg_count@@Base+0xf70c>
   2ee28:	cbz	w24, 2f3d4 <get_python_format_unnamed_arg_count@@Base+0xf70c>
   2ee2c:	sub	w8, w24, #0x1
   2ee30:	cmp	w20, w8
   2ee34:	b.ne	2f3f0 <get_python_format_unnamed_arg_count@@Base+0xf728>  // b.any
   2ee38:	cmp	w14, w2
   2ee3c:	b.ne	2ee88 <get_python_format_unnamed_arg_count@@Base+0xf1c0>  // b.any
   2ee40:	mov	w25, #0x1                   	// #1
   2ee44:	bfi	w25, w2, #1, #31
   2ee48:	lsl	x1, x25, #3
   2ee4c:	mov	x0, x19
   2ee50:	mov	x19, x16
   2ee54:	mov	x26, x17
   2ee58:	str	w2, [sp, #4]
   2ee5c:	bl	a460 <xrealloc@plt>
   2ee60:	ldr	w2, [sp, #4]
   2ee64:	mov	x1, #0xa000000000          	// #687194767360
   2ee68:	movk	x1, #0x5000, lsl #48
   2ee6c:	mov	w18, #0x11                  	// #17
   2ee70:	mov	x17, x26
   2ee74:	mov	x16, x19
   2ee78:	mov	w15, #0x1                   	// #1
   2ee7c:	mov	x14, x25
   2ee80:	mov	x19, x0
   2ee84:	mov	w0, #0x60                  	// #96
   2ee88:	add	x8, x19, w2, uxtw #3
   2ee8c:	mov	w26, wzr
   2ee90:	stp	w20, w15, [x8]
   2ee94:	add	w2, w2, #0x1
   2ee98:	b	2eefc <get_python_format_unnamed_arg_count@@Base+0xf234>
   2ee9c:	cbnz	w2, 2f35c <get_python_format_unnamed_arg_count@@Base+0xf694>
   2eea0:	cmp	w14, w26
   2eea4:	b.ne	2eee8 <get_python_format_unnamed_arg_count@@Base+0xf220>  // b.any
   2eea8:	mov	w20, #0x1                   	// #1
   2eeac:	bfi	w20, w26, #1, #31
   2eeb0:	lsl	x1, x20, #3
   2eeb4:	mov	x0, x19
   2eeb8:	mov	x19, x16
   2eebc:	mov	x28, x17
   2eec0:	bl	a460 <xrealloc@plt>
   2eec4:	mov	x1, #0xa000000000          	// #687194767360
   2eec8:	movk	x1, #0x5000, lsl #48
   2eecc:	mov	w18, #0x11                  	// #17
   2eed0:	mov	x17, x28
   2eed4:	mov	x16, x19
   2eed8:	mov	w15, #0x1                   	// #1
   2eedc:	mov	x14, x20
   2eee0:	mov	x19, x0
   2eee4:	mov	w0, #0x60                  	// #96
   2eee8:	mov	w2, wzr
   2eeec:	add	x8, x19, w26, uxtw #3
   2eef0:	add	w26, w26, #0x1
   2eef4:	mov	x28, x25
   2eef8:	stp	w26, w15, [x8]
   2eefc:	ldrb	w8, [x28]
   2ef00:	cmp	w8, #0x73
   2ef04:	b.ne	2f31c <get_python_format_unnamed_arg_count@@Base+0xf654>  // b.any
   2ef08:	mov	w9, #0x3                   	// #3
   2ef0c:	mov	x20, x28
   2ef10:	ldur	w28, [x29, #-12]
   2ef14:	cbz	w24, 2efbc <get_python_format_unnamed_arg_count@@Base+0xf2f4>
   2ef18:	cbnz	w26, 2f1c4 <get_python_format_unnamed_arg_count@@Base+0xf4fc>
   2ef1c:	cmp	w14, w2
   2ef20:	b.ne	2ef84 <get_python_format_unnamed_arg_count@@Base+0xf2bc>  // b.any
   2ef24:	mov	w26, #0x1                   	// #1
   2ef28:	bfi	w26, w14, #1, #31
   2ef2c:	lsl	x1, x26, #3
   2ef30:	mov	x0, x19
   2ef34:	mov	x19, x16
   2ef38:	mov	x25, x17
   2ef3c:	mov	x27, x22
   2ef40:	mov	w22, w2
   2ef44:	mov	w28, w9
   2ef48:	bl	a460 <xrealloc@plt>
   2ef4c:	mov	w9, w28
   2ef50:	ldur	w28, [x29, #-12]
   2ef54:	mov	x1, #0xa000000000          	// #687194767360
   2ef58:	mov	w2, w22
   2ef5c:	mov	x22, x27
   2ef60:	mov	w27, #0xa                   	// #10
   2ef64:	movk	x1, #0x5000, lsl #48
   2ef68:	mov	w18, #0x11                  	// #17
   2ef6c:	mov	x17, x25
   2ef70:	mov	x16, x19
   2ef74:	mov	w15, #0x1                   	// #1
   2ef78:	mov	x19, x0
   2ef7c:	mov	w0, #0x60                  	// #96
   2ef80:	mov	w14, w26
   2ef84:	add	x8, x19, w2, uxtw #3
   2ef88:	mov	w26, wzr
   2ef8c:	stp	w24, w9, [x8]
   2ef90:	add	w2, w2, #0x1
   2ef94:	cbz	x21, 2efa8 <get_python_format_unnamed_arg_count@@Base+0xf2e0>
   2ef98:	sub	x8, x20, x22
   2ef9c:	ldrb	w9, [x21, x8]
   2efa0:	orr	w9, w9, #0x2
   2efa4:	strb	w9, [x21, x8]
   2efa8:	add	x20, x20, #0x1
   2efac:	ldrb	w9, [x20]
   2efb0:	mov	x8, x20
   2efb4:	cbnz	w9, 2eb60 <get_python_format_unnamed_arg_count@@Base+0xee98>
   2efb8:	b	2f090 <get_python_format_unnamed_arg_count@@Base+0xf3c8>
   2efbc:	cbnz	w2, 2f1c4 <get_python_format_unnamed_arg_count@@Base+0xf4fc>
   2efc0:	cmp	w14, w26
   2efc4:	b.ne	2f010 <get_python_format_unnamed_arg_count@@Base+0xf348>  // b.any
   2efc8:	mov	w24, #0x1                   	// #1
   2efcc:	bfi	w24, w14, #1, #31
   2efd0:	lsl	x1, x24, #3
   2efd4:	mov	x0, x19
   2efd8:	mov	x19, x16
   2efdc:	mov	x25, x17
   2efe0:	str	w9, [sp, #4]
   2efe4:	bl	a460 <xrealloc@plt>
   2efe8:	ldr	w9, [sp, #4]
   2efec:	mov	x1, #0xa000000000          	// #687194767360
   2eff0:	movk	x1, #0x5000, lsl #48
   2eff4:	mov	w18, #0x11                  	// #17
   2eff8:	mov	x17, x25
   2effc:	mov	x16, x19
   2f000:	mov	w15, #0x1                   	// #1
   2f004:	mov	x19, x0
   2f008:	mov	w0, #0x60                  	// #96
   2f00c:	mov	w14, w24
   2f010:	mov	w2, wzr
   2f014:	add	x8, x19, w26, uxtw #3
   2f018:	add	w26, w26, #0x1
   2f01c:	stp	w26, w9, [x8]
   2f020:	cbnz	x21, 2ef98 <get_python_format_unnamed_arg_count@@Base+0xf2d0>
   2f024:	b	2efa8 <get_python_format_unnamed_arg_count@@Base+0xf2e0>
   2f028:	mov	w28, wzr
   2f02c:	mov	x19, xzr
   2f030:	mov	w23, wzr
   2f034:	mov	w22, wzr
   2f038:	mov	w26, wzr
   2f03c:	b	2f17c <get_python_format_unnamed_arg_count@@Base+0xf4b4>
   2f040:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2f044:	add	x1, x1, #0xbfa
   2f048:	mov	w2, #0x5                   	// #5
   2f04c:	mov	x0, xzr
   2f050:	bl	acd0 <dcgettext@plt>
   2f054:	mov	w1, w23
   2f058:	bl	aa20 <xasprintf@plt>
   2f05c:	ldr	x8, [sp, #8]
   2f060:	str	x0, [x8]
   2f064:	cbz	x21, 2f07c <get_python_format_unnamed_arg_count@@Base+0xf3b4>
   2f068:	sub	x8, x25, #0x2
   2f06c:	sub	x8, x8, x22
   2f070:	ldrb	w9, [x21, x8]
   2f074:	orr	w9, w9, #0x4
   2f078:	strb	w9, [x21, x8]
   2f07c:	cbz	x19, 2f088 <get_python_format_unnamed_arg_count@@Base+0xf3c0>
   2f080:	mov	x0, x19
   2f084:	bl	aa00 <free@plt>
   2f088:	mov	x0, xzr
   2f08c:	b	2f1a4 <get_python_format_unnamed_arg_count@@Base+0xf4dc>
   2f090:	mov	x22, x14
   2f094:	cbnz	w26, 2f17c <get_python_format_unnamed_arg_count@@Base+0xf4b4>
   2f098:	cmp	w2, #0x2
   2f09c:	b.cc	2f178 <get_python_format_unnamed_arg_count@@Base+0xf4b0>  // b.lo, b.ul, b.last
   2f0a0:	mov	w21, w2
   2f0a4:	adrp	x3, 2f000 <get_python_format_unnamed_arg_count@@Base+0xf338>
   2f0a8:	add	x3, x3, #0x670
   2f0ac:	mov	w2, #0x8                   	// #8
   2f0b0:	mov	x0, x19
   2f0b4:	mov	x1, x21
   2f0b8:	bl	a2f0 <qsort@plt>
   2f0bc:	ldr	x27, [sp, #8]
   2f0c0:	mov	x20, xzr
   2f0c4:	mov	w8, wzr
   2f0c8:	mov	w26, wzr
   2f0cc:	mov	x24, x19
   2f0d0:	cbz	w26, 2f118 <get_python_format_unnamed_arg_count@@Base+0xf450>
   2f0d4:	sub	w9, w26, #0x1
   2f0d8:	lsl	x11, x9, #3
   2f0dc:	ldr	w10, [x24]
   2f0e0:	ldr	w11, [x19, x11]
   2f0e4:	cmp	w10, w11
   2f0e8:	b.ne	2f118 <get_python_format_unnamed_arg_count@@Base+0xf450>  // b.any
   2f0ec:	add	x25, x19, x9, lsl #3
   2f0f0:	ldr	w11, [x24, #4]
   2f0f4:	ldr	w9, [x25, #4]!
   2f0f8:	cmp	w11, w9
   2f0fc:	cset	w9, eq  // eq = none
   2f100:	cset	w10, ne  // ne = any
   2f104:	orr	w12, w8, w9
   2f108:	csel	w9, w11, wzr, eq  // eq = none
   2f10c:	tbz	w12, #0, 2f134 <get_python_format_unnamed_arg_count@@Base+0xf46c>
   2f110:	orr	w8, w8, w10
   2f114:	b	2f15c <get_python_format_unnamed_arg_count@@Base+0xf494>
   2f118:	cmp	x20, w26, uxtw
   2f11c:	b.ls	2f12c <get_python_format_unnamed_arg_count@@Base+0xf464>  // b.plast
   2f120:	ldr	x9, [x24]
   2f124:	mov	w10, w26
   2f128:	str	x9, [x19, x10, lsl #3]
   2f12c:	add	w26, w26, #0x1
   2f130:	b	2f160 <get_python_format_unnamed_arg_count@@Base+0xf498>
   2f134:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2f138:	mov	w2, #0x5                   	// #5
   2f13c:	mov	x0, xzr
   2f140:	add	x1, x1, #0x8bd
   2f144:	bl	acd0 <dcgettext@plt>
   2f148:	ldr	w1, [x24]
   2f14c:	bl	aa20 <xasprintf@plt>
   2f150:	mov	w9, wzr
   2f154:	mov	w8, #0x1                   	// #1
   2f158:	str	x0, [x27]
   2f15c:	str	w9, [x25]
   2f160:	add	x20, x20, #0x1
   2f164:	cmp	x21, x20
   2f168:	add	x24, x24, #0x8
   2f16c:	b.ne	2f0d0 <get_python_format_unnamed_arg_count@@Base+0xf408>  // b.any
   2f170:	tbnz	w8, #0, 2f07c <get_python_format_unnamed_arg_count@@Base+0xf3b4>
   2f174:	b	2f17c <get_python_format_unnamed_arg_count@@Base+0xf4b4>
   2f178:	mov	w26, w2
   2f17c:	mov	w0, #0x20                  	// #32
   2f180:	bl	a590 <xmalloc@plt>
   2f184:	stp	w23, w26, [x0]
   2f188:	str	w22, [x0, #8]
   2f18c:	str	x19, [x0, #16]
   2f190:	strb	w28, [x0, #24]
   2f194:	ldur	w8, [x29, #-8]
   2f198:	ldur	w9, [x29, #-5]
   2f19c:	stur	w8, [x0, #25]
   2f1a0:	str	w9, [x0, #28]
   2f1a4:	ldp	x20, x19, [sp, #112]
   2f1a8:	ldp	x22, x21, [sp, #96]
   2f1ac:	ldp	x24, x23, [sp, #80]
   2f1b0:	ldp	x26, x25, [sp, #64]
   2f1b4:	ldp	x28, x27, [sp, #48]
   2f1b8:	ldp	x29, x30, [sp, #32]
   2f1bc:	add	sp, sp, #0x80
   2f1c0:	ret
   2f1c4:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2f1c8:	add	x1, x1, #0x630
   2f1cc:	mov	w2, #0x5                   	// #5
   2f1d0:	mov	x0, xzr
   2f1d4:	bl	acd0 <dcgettext@plt>
   2f1d8:	bl	a5a0 <xstrdup@plt>
   2f1dc:	b	2f29c <get_python_format_unnamed_arg_count@@Base+0xf5d4>
   2f1e0:	cbnz	w13, 2f250 <get_python_format_unnamed_arg_count@@Base+0xf588>
   2f1e4:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2f1e8:	add	x1, x1, #0x7e0
   2f1ec:	mov	w2, #0x5                   	// #5
   2f1f0:	mov	x0, xzr
   2f1f4:	bl	acd0 <dcgettext@plt>
   2f1f8:	bl	a5a0 <xstrdup@plt>
   2f1fc:	ldr	x8, [sp, #8]
   2f200:	str	x0, [x8]
   2f204:	cbz	x21, 2f07c <get_python_format_unnamed_arg_count@@Base+0xf3b4>
   2f208:	sub	x8, x25, x22
   2f20c:	add	x8, x8, x21
   2f210:	ldurb	w9, [x8, #-3]
   2f214:	orr	w9, w9, #0x4
   2f218:	sturb	w9, [x8, #-3]
   2f21c:	b	2f07c <get_python_format_unnamed_arg_count@@Base+0xf3b4>
   2f220:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2f224:	add	x1, x1, #0x58e
   2f228:	mov	w2, #0x5                   	// #5
   2f22c:	mov	x0, xzr
   2f230:	bl	acd0 <dcgettext@plt>
   2f234:	mov	w1, w23
   2f238:	bl	aa20 <xasprintf@plt>
   2f23c:	ldr	x8, [sp, #8]
   2f240:	str	x0, [x8]
   2f244:	cbz	x21, 2f07c <get_python_format_unnamed_arg_count@@Base+0xf3b4>
   2f248:	sub	x8, x28, #0x1
   2f24c:	b	2f06c <get_python_format_unnamed_arg_count@@Base+0xf3a4>
   2f250:	sub	w8, w13, #0x20
   2f254:	cmp	w8, #0x5e
   2f258:	b.hi	2f280 <get_python_format_unnamed_arg_count@@Base+0xf5b8>  // b.pmore
   2f25c:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2f260:	add	x1, x1, #0x80e
   2f264:	mov	w2, #0x5                   	// #5
   2f268:	mov	x0, xzr
   2f26c:	bl	acd0 <dcgettext@plt>
   2f270:	ldrb	w2, [x20]
   2f274:	mov	w1, w23
   2f278:	bl	aa20 <xasprintf@plt>
   2f27c:	b	2f29c <get_python_format_unnamed_arg_count@@Base+0xf5d4>
   2f280:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2f284:	add	x1, x1, #0x862
   2f288:	mov	w2, #0x5                   	// #5
   2f28c:	mov	x0, xzr
   2f290:	bl	acd0 <dcgettext@plt>
   2f294:	mov	w1, w23
   2f298:	bl	aa20 <xasprintf@plt>
   2f29c:	ldr	x8, [sp, #8]
   2f2a0:	str	x0, [x8]
   2f2a4:	cbz	x21, 2f07c <get_python_format_unnamed_arg_count@@Base+0xf3b4>
   2f2a8:	sub	x8, x20, x22
   2f2ac:	b	2f070 <get_python_format_unnamed_arg_count@@Base+0xf3a8>
   2f2b0:	cbnz	w8, 2f388 <get_python_format_unnamed_arg_count@@Base+0xf6c0>
   2f2b4:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2f2b8:	add	x1, x1, #0x7e0
   2f2bc:	mov	w2, #0x5                   	// #5
   2f2c0:	mov	x0, xzr
   2f2c4:	bl	acd0 <dcgettext@plt>
   2f2c8:	bl	a5a0 <xstrdup@plt>
   2f2cc:	ldr	x8, [sp, #8]
   2f2d0:	str	x0, [x8]
   2f2d4:	cbz	x21, 2f07c <get_python_format_unnamed_arg_count@@Base+0xf3b4>
   2f2d8:	sub	x8, x20, #0x1
   2f2dc:	b	2f06c <get_python_format_unnamed_arg_count@@Base+0xf3a4>
   2f2e0:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2f2e4:	add	x1, x1, #0xd25
   2f2e8:	mov	w2, #0x5                   	// #5
   2f2ec:	mov	x0, xzr
   2f2f0:	bl	acd0 <dcgettext@plt>
   2f2f4:	mov	w1, w23
   2f2f8:	bl	aa20 <xasprintf@plt>
   2f2fc:	ldr	x8, [sp, #8]
   2f300:	str	x0, [x8]
   2f304:	cbz	x21, 2f07c <get_python_format_unnamed_arg_count@@Base+0xf3b4>
   2f308:	sub	x8, x25, #0x1
   2f30c:	ldrb	w9, [x8]
   2f310:	cmp	w9, #0x0
   2f314:	csel	x8, x20, x8, eq  // eq = none
   2f318:	b	2f06c <get_python_format_unnamed_arg_count@@Base+0xf3a4>
   2f31c:	cbnz	w8, 2f394 <get_python_format_unnamed_arg_count@@Base+0xf6cc>
   2f320:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2f324:	add	x1, x1, #0x7e0
   2f328:	mov	w2, #0x5                   	// #5
   2f32c:	mov	x0, xzr
   2f330:	bl	acd0 <dcgettext@plt>
   2f334:	bl	a5a0 <xstrdup@plt>
   2f338:	ldr	x8, [sp, #8]
   2f33c:	str	x0, [x8]
   2f340:	cbz	x21, 2f07c <get_python_format_unnamed_arg_count@@Base+0xf3b4>
   2f344:	sub	x8, x28, x22
   2f348:	add	x8, x8, x21
   2f34c:	ldurb	w9, [x8, #-1]
   2f350:	orr	w9, w9, #0x4
   2f354:	sturb	w9, [x8, #-1]
   2f358:	b	2f07c <get_python_format_unnamed_arg_count@@Base+0xf3b4>
   2f35c:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2f360:	add	x1, x1, #0x630
   2f364:	mov	w2, #0x5                   	// #5
   2f368:	mov	x0, xzr
   2f36c:	bl	acd0 <dcgettext@plt>
   2f370:	bl	a5a0 <xstrdup@plt>
   2f374:	ldr	x8, [sp, #8]
   2f378:	str	x0, [x8]
   2f37c:	cbz	x21, 2f07c <get_python_format_unnamed_arg_count@@Base+0xf3b4>
   2f380:	sub	x8, x25, #0x1
   2f384:	b	2f06c <get_python_format_unnamed_arg_count@@Base+0xf3a4>
   2f388:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2f38c:	add	x1, x1, #0xc38
   2f390:	b	2f264 <get_python_format_unnamed_arg_count@@Base+0xf59c>
   2f394:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2f398:	add	x1, x1, #0xcd3
   2f39c:	mov	w2, #0x5                   	// #5
   2f3a0:	mov	x0, xzr
   2f3a4:	bl	acd0 <dcgettext@plt>
   2f3a8:	ldrb	w2, [x28]
   2f3ac:	mov	w1, w23
   2f3b0:	bl	aa20 <xasprintf@plt>
   2f3b4:	ldr	x8, [sp, #8]
   2f3b8:	str	x0, [x8]
   2f3bc:	cbz	x21, 2f07c <get_python_format_unnamed_arg_count@@Base+0xf3b4>
   2f3c0:	sub	x8, x28, x22
   2f3c4:	b	2f070 <get_python_format_unnamed_arg_count@@Base+0xf3a8>
   2f3c8:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2f3cc:	add	x1, x1, #0x5db
   2f3d0:	b	2f228 <get_python_format_unnamed_arg_count@@Base+0xf560>
   2f3d4:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2f3d8:	add	x1, x1, #0x630
   2f3dc:	mov	w2, #0x5                   	// #5
   2f3e0:	mov	x0, xzr
   2f3e4:	bl	acd0 <dcgettext@plt>
   2f3e8:	bl	a5a0 <xstrdup@plt>
   2f3ec:	b	2f23c <get_python_format_unnamed_arg_count@@Base+0xf574>
   2f3f0:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2f3f4:	add	x1, x1, #0xc7c
   2f3f8:	mov	w2, #0x5                   	// #5
   2f3fc:	mov	x0, xzr
   2f400:	mov	w24, w8
   2f404:	bl	acd0 <dcgettext@plt>
   2f408:	mov	w1, w23
   2f40c:	mov	w2, w24
   2f410:	bl	aa20 <xasprintf@plt>
   2f414:	b	2f23c <get_python_format_unnamed_arg_count@@Base+0xf574>
   2f418:	stp	x29, x30, [sp, #-32]!
   2f41c:	str	x19, [sp, #16]
   2f420:	mov	x19, x0
   2f424:	ldr	x0, [x0, #16]
   2f428:	mov	x29, sp
   2f42c:	cbz	x0, 2f434 <get_python_format_unnamed_arg_count@@Base+0xf76c>
   2f430:	bl	aa00 <free@plt>
   2f434:	mov	x0, x19
   2f438:	ldr	x19, [sp, #16]
   2f43c:	ldp	x29, x30, [sp], #32
   2f440:	b	aa00 <free@plt>
   2f444:	ldr	w0, [x0]
   2f448:	ret
   2f44c:	stp	x29, x30, [sp, #-80]!
   2f450:	stp	x24, x23, [sp, #32]
   2f454:	stp	x22, x21, [sp, #48]
   2f458:	stp	x20, x19, [sp, #64]
   2f45c:	ldr	w9, [x0, #4]
   2f460:	ldr	w8, [x1, #4]
   2f464:	mov	x20, x5
   2f468:	mov	x21, x4
   2f46c:	mov	x19, x3
   2f470:	mov	x22, x1
   2f474:	mov	x23, x0
   2f478:	cmn	w9, w8
   2f47c:	str	x25, [sp, #16]
   2f480:	mov	x29, sp
   2f484:	b.ne	2f490 <get_python_format_unnamed_arg_count@@Base+0xf7c8>  // b.any
   2f488:	mov	w0, wzr
   2f48c:	b	2f610 <get_python_format_unnamed_arg_count@@Base+0xf948>
   2f490:	orr	w10, w8, w9
   2f494:	cbz	w10, 2f510 <get_python_format_unnamed_arg_count@@Base+0xf848>
   2f498:	cmp	w8, #0x0
   2f49c:	cset	w11, ne  // ne = any
   2f4a0:	cmp	w9, #0x0
   2f4a4:	mov	x10, xzr
   2f4a8:	mov	x24, xzr
   2f4ac:	mov	w25, wzr
   2f4b0:	cset	w12, ne  // ne = any
   2f4b4:	tbz	w12, #0, 2f570 <get_python_format_unnamed_arg_count@@Base+0xf8a8>
   2f4b8:	tbz	w11, #0, 2f4e0 <get_python_format_unnamed_arg_count@@Base+0xf818>
   2f4bc:	ldr	x11, [x23, #16]
   2f4c0:	ldr	x12, [x22, #16]
   2f4c4:	mov	w13, w25
   2f4c8:	lsl	x13, x13, #3
   2f4cc:	ldr	w11, [x11, x10]
   2f4d0:	ldr	w12, [x12, x13]
   2f4d4:	cmp	w11, w12
   2f4d8:	b.hi	2f570 <get_python_format_unnamed_arg_count@@Base+0xf8a8>  // b.pmore
   2f4dc:	b.cs	2f4e8 <get_python_format_unnamed_arg_count@@Base+0xf820>  // b.hs, b.nlast
   2f4e0:	tbz	w2, #0, 2f4ec <get_python_format_unnamed_arg_count@@Base+0xf824>
   2f4e4:	b	2f5a8 <get_python_format_unnamed_arg_count@@Base+0xf8e0>
   2f4e8:	add	w25, w25, #0x1
   2f4ec:	add	x24, x24, #0x1
   2f4f0:	cmp	x24, x9
   2f4f4:	cset	w12, cc  // cc = lo, ul, last
   2f4f8:	cmp	w25, w8
   2f4fc:	cset	w11, cc  // cc = lo, ul, last
   2f500:	add	x10, x10, #0x8
   2f504:	b.cc	2f4b4 <get_python_format_unnamed_arg_count@@Base+0xf7ec>  // b.lo, b.ul, b.last
   2f508:	cmp	x24, x9
   2f50c:	b.cc	2f4b4 <get_python_format_unnamed_arg_count@@Base+0xf7ec>  // b.lo, b.ul, b.last
   2f510:	cbz	w8, 2f488 <get_python_format_unnamed_arg_count@@Base+0xf7c0>
   2f514:	ldr	x9, [x23, #16]
   2f518:	ldr	x10, [x22, #16]
   2f51c:	mov	w12, wzr
   2f520:	mov	w11, wzr
   2f524:	mov	w12, w12
   2f528:	mov	w24, w11
   2f52c:	lsl	x13, x12, #3
   2f530:	lsl	x14, x24, #3
   2f534:	ldr	w13, [x9, x13]
   2f538:	ldr	w14, [x10, x14]
   2f53c:	cmp	w13, w14
   2f540:	b.ne	2f560 <get_python_format_unnamed_arg_count@@Base+0xf898>  // b.any
   2f544:	add	x13, x9, x12, lsl #3
   2f548:	add	x14, x10, x24, lsl #3
   2f54c:	ldr	w13, [x13, #4]
   2f550:	ldr	w14, [x14, #4]
   2f554:	cmp	w13, w14
   2f558:	b.ne	2f5dc <get_python_format_unnamed_arg_count@@Base+0xf914>  // b.any
   2f55c:	add	w11, w11, #0x1
   2f560:	cmp	w11, w8
   2f564:	add	w12, w12, #0x1
   2f568:	b.cc	2f524 <get_python_format_unnamed_arg_count@@Base+0xf85c>  // b.lo, b.ul, b.last
   2f56c:	b	2f488 <get_python_format_unnamed_arg_count@@Base+0xf7c0>
   2f570:	cbz	x19, 2f60c <get_python_format_unnamed_arg_count@@Base+0xf944>
   2f574:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2f578:	add	x1, x1, #0x333
   2f57c:	mov	w2, #0x5                   	// #5
   2f580:	mov	x0, xzr
   2f584:	bl	acd0 <dcgettext@plt>
   2f588:	ldr	x8, [x22, #16]
   2f58c:	mov	w9, w25
   2f590:	lsl	x9, x9, #3
   2f594:	mov	x2, x20
   2f598:	ldr	w1, [x8, x9]
   2f59c:	mov	x3, x21
   2f5a0:	blr	x19
   2f5a4:	b	2f60c <get_python_format_unnamed_arg_count@@Base+0xf944>
   2f5a8:	cbz	x19, 2f60c <get_python_format_unnamed_arg_count@@Base+0xf944>
   2f5ac:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2f5b0:	add	x1, x1, #0x37d
   2f5b4:	mov	w2, #0x5                   	// #5
   2f5b8:	mov	x0, xzr
   2f5bc:	bl	acd0 <dcgettext@plt>
   2f5c0:	ldr	x8, [x23, #16]
   2f5c4:	and	x9, x24, #0xffffffff
   2f5c8:	lsl	x9, x9, #3
   2f5cc:	mov	x2, x20
   2f5d0:	ldr	w1, [x8, x9]
   2f5d4:	blr	x19
   2f5d8:	b	2f60c <get_python_format_unnamed_arg_count@@Base+0xf944>
   2f5dc:	cbz	x19, 2f60c <get_python_format_unnamed_arg_count@@Base+0xf944>
   2f5e0:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2f5e4:	add	x1, x1, #0x546
   2f5e8:	mov	w2, #0x5                   	// #5
   2f5ec:	mov	x0, xzr
   2f5f0:	bl	acd0 <dcgettext@plt>
   2f5f4:	ldr	x8, [x22, #16]
   2f5f8:	lsl	x9, x24, #3
   2f5fc:	mov	x1, x21
   2f600:	mov	x2, x20
   2f604:	ldr	w3, [x8, x9]
   2f608:	blr	x19
   2f60c:	mov	w0, #0x1                   	// #1
   2f610:	ldrb	w8, [x23, #24]
   2f614:	ldrb	w9, [x22, #24]
   2f618:	cmp	w8, w9
   2f61c:	b.eq	2f658 <get_python_format_unnamed_arg_count@@Base+0xf990>  // b.none
   2f620:	cbz	x19, 2f654 <get_python_format_unnamed_arg_count@@Base+0xf98c>
   2f624:	cbz	w8, 2f634 <get_python_format_unnamed_arg_count@@Base+0xf96c>
   2f628:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2f62c:	add	x1, x1, #0xd69
   2f630:	b	2f63c <get_python_format_unnamed_arg_count@@Base+0xf974>
   2f634:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2f638:	add	x1, x1, #0xd88
   2f63c:	mov	w2, #0x5                   	// #5
   2f640:	mov	x0, xzr
   2f644:	bl	acd0 <dcgettext@plt>
   2f648:	mov	x1, x21
   2f64c:	mov	x2, x20
   2f650:	blr	x19
   2f654:	mov	w0, #0x1                   	// #1
   2f658:	ldp	x20, x19, [sp, #64]
   2f65c:	ldp	x22, x21, [sp, #48]
   2f660:	ldp	x24, x23, [sp, #32]
   2f664:	ldr	x25, [sp, #16]
   2f668:	ldp	x29, x30, [sp], #80
   2f66c:	ret
   2f670:	ldr	w8, [x0]
   2f674:	ldr	w9, [x1]
   2f678:	cmp	w8, w9
   2f67c:	csetm	w8, cc  // cc = lo, ul, last
   2f680:	csinc	w0, w8, wzr, ls  // ls = plast
   2f684:	ret
   2f688:	sub	sp, sp, #0x80
   2f68c:	stp	x29, x30, [sp, #32]
   2f690:	stp	x28, x27, [sp, #48]
   2f694:	stp	x26, x25, [sp, #64]
   2f698:	stp	x24, x23, [sp, #80]
   2f69c:	stp	x22, x21, [sp, #96]
   2f6a0:	stp	x20, x19, [sp, #112]
   2f6a4:	ldrb	w9, [x0]
   2f6a8:	mov	x21, x3
   2f6ac:	add	x29, sp, #0x20
   2f6b0:	cbz	w9, 2f934 <get_python_format_unnamed_arg_count@@Base+0xfc6c>
   2f6b4:	mov	x23, x0
   2f6b8:	mov	x22, x2
   2f6bc:	mov	x19, xzr
   2f6c0:	mov	w8, wzr
   2f6c4:	mov	w25, wzr
   2f6c8:	mov	w20, wzr
   2f6cc:	mov	w28, #0x1                   	// #1
   2f6d0:	mov	w27, #0xa                   	// #10
   2f6d4:	mov	x10, x0
   2f6d8:	str	x21, [sp, #8]
   2f6dc:	stur	wzr, [x29, #-12]
   2f6e0:	and	w9, w9, #0xff
   2f6e4:	cmp	w9, #0x25
   2f6e8:	add	x26, x10, #0x1
   2f6ec:	b.ne	2f840 <get_python_format_unnamed_arg_count@@Base+0xfb78>  // b.any
   2f6f0:	cbz	x22, 2f704 <get_python_format_unnamed_arg_count@@Base+0xfa3c>
   2f6f4:	sub	x9, x10, x23
   2f6f8:	ldrb	w11, [x22, x9]
   2f6fc:	orr	w11, w11, #0x1
   2f700:	strb	w11, [x22, x9]
   2f704:	ldrb	w9, [x26]
   2f708:	add	w20, w20, #0x1
   2f70c:	cmp	w9, #0x25
   2f710:	b.eq	2f828 <get_python_format_unnamed_arg_count@@Base+0xfb60>  // b.none
   2f714:	sub	w11, w9, #0x30
   2f718:	cmp	w11, #0x9
   2f71c:	b.hi	2f760 <get_python_format_unnamed_arg_count@@Base+0xfa98>  // b.pmore
   2f720:	mov	w11, wzr
   2f724:	add	x24, x10, #0x2
   2f728:	mov	w10, w9
   2f72c:	mul	w11, w11, w27
   2f730:	add	w11, w11, w10, uxtb
   2f734:	ldrb	w10, [x24], #1
   2f738:	sub	w11, w11, #0x30
   2f73c:	sub	w12, w10, #0x30
   2f740:	cmp	w12, #0xa
   2f744:	b.cc	2f72c <get_python_format_unnamed_arg_count@@Base+0xfa64>  // b.lo, b.ul, b.last
   2f748:	cmp	w10, #0x24
   2f74c:	b.ne	2f760 <get_python_format_unnamed_arg_count@@Base+0xfa98>  // b.any
   2f750:	cbz	w11, 2fa3c <get_python_format_unnamed_arg_count@@Base+0xfd74>
   2f754:	ldrb	w9, [x24]
   2f758:	mov	w28, w11
   2f75c:	mov	x26, x24
   2f760:	cmp	w9, #0x62
   2f764:	mov	w10, wzr
   2f768:	b.le	2f78c <get_python_format_unnamed_arg_count@@Base+0xfac4>
   2f76c:	cmp	w9, #0x63
   2f770:	b.eq	2f7a4 <get_python_format_unnamed_arg_count@@Base+0xfadc>  // b.none
   2f774:	cmp	w9, #0x6c
   2f778:	b.eq	2f7ac <get_python_format_unnamed_arg_count@@Base+0xfae4>  // b.none
   2f77c:	cmp	w9, #0x73
   2f780:	b.ne	2f7b4 <get_python_format_unnamed_arg_count@@Base+0xfaec>  // b.any
   2f784:	mov	w24, #0x4                   	// #4
   2f788:	b	2f7f4 <get_python_format_unnamed_arg_count@@Base+0xfb2c>
   2f78c:	cmp	w9, #0x43
   2f790:	b.eq	2f7d0 <get_python_format_unnamed_arg_count@@Base+0xfb08>  // b.none
   2f794:	cmp	w9, #0x4c
   2f798:	b.ne	2f7b4 <get_python_format_unnamed_arg_count@@Base+0xfaec>  // b.any
   2f79c:	mov	w24, #0x5                   	// #5
   2f7a0:	b	2f7f4 <get_python_format_unnamed_arg_count@@Base+0xfb2c>
   2f7a4:	mov	w24, #0x3                   	// #3
   2f7a8:	b	2f7f4 <get_python_format_unnamed_arg_count@@Base+0xfb2c>
   2f7ac:	ldrb	w9, [x26, #1]!
   2f7b0:	mov	w10, #0x10                  	// #16
   2f7b4:	cmp	w9, #0x68
   2f7b8:	b.le	2f7e0 <get_python_format_unnamed_arg_count@@Base+0xfb18>
   2f7bc:	cmp	w9, #0x75
   2f7c0:	b.eq	2f7f0 <get_python_format_unnamed_arg_count@@Base+0xfb28>  // b.none
   2f7c4:	cmp	w9, #0x69
   2f7c8:	b.eq	2f7e8 <get_python_format_unnamed_arg_count@@Base+0xfb20>  // b.none
   2f7cc:	b	2fab0 <get_python_format_unnamed_arg_count@@Base+0xfde8>
   2f7d0:	mov	w9, #0x1                   	// #1
   2f7d4:	stur	w9, [x29, #-12]
   2f7d8:	mov	w24, #0x1                   	// #1
   2f7dc:	b	2f7f4 <get_python_format_unnamed_arg_count@@Base+0xfb2c>
   2f7e0:	cmp	w9, #0x64
   2f7e4:	b.ne	2fa70 <get_python_format_unnamed_arg_count@@Base+0xfda8>  // b.any
   2f7e8:	orr	w24, w10, #0x2
   2f7ec:	b	2f7f4 <get_python_format_unnamed_arg_count@@Base+0xfb2c>
   2f7f0:	orr	w24, w10, w27
   2f7f4:	cmp	w8, w25
   2f7f8:	b.ne	2f818 <get_python_format_unnamed_arg_count@@Base+0xfb50>  // b.any
   2f7fc:	mov	w21, #0x1                   	// #1
   2f800:	bfi	w21, w8, #1, #31
   2f804:	lsl	x1, x21, #3
   2f808:	mov	x0, x19
   2f80c:	bl	a460 <xrealloc@plt>
   2f810:	mov	x19, x0
   2f814:	mov	w8, w21
   2f818:	add	x9, x19, w25, uxtw #3
   2f81c:	add	w25, w25, #0x1
   2f820:	stp	w28, w24, [x9]
   2f824:	add	w28, w28, #0x1
   2f828:	cbz	x22, 2f83c <get_python_format_unnamed_arg_count@@Base+0xfb74>
   2f82c:	sub	x9, x26, x23
   2f830:	ldrb	w10, [x22, x9]
   2f834:	orr	w10, w10, #0x2
   2f838:	strb	w10, [x22, x9]
   2f83c:	add	x26, x26, #0x1
   2f840:	ldrb	w9, [x26]
   2f844:	mov	x10, x26
   2f848:	cbnz	w9, 2f6e0 <get_python_format_unnamed_arg_count@@Base+0xfa18>
   2f84c:	cmp	w25, #0x2
   2f850:	b.cc	2f948 <get_python_format_unnamed_arg_count@@Base+0xfc80>  // b.lo, b.ul, b.last
   2f854:	mov	w22, w25
   2f858:	adrp	x3, 2f000 <get_python_format_unnamed_arg_count@@Base+0xf338>
   2f85c:	add	x3, x3, #0xcd0
   2f860:	mov	w2, #0x8                   	// #8
   2f864:	mov	x0, x19
   2f868:	mov	x1, x22
   2f86c:	bl	a2f0 <qsort@plt>
   2f870:	ldr	x21, [sp, #8]
   2f874:	adrp	x23, 39000 <get_search_path@@Base+0x2b4c>
   2f878:	mov	x26, xzr
   2f87c:	mov	w8, wzr
   2f880:	mov	w25, wzr
   2f884:	add	x23, x23, #0x8bd
   2f888:	mov	x27, x19
   2f88c:	cbz	w25, 2f8d4 <get_python_format_unnamed_arg_count@@Base+0xfc0c>
   2f890:	sub	w9, w25, #0x1
   2f894:	lsl	x11, x9, #3
   2f898:	ldr	w10, [x27]
   2f89c:	ldr	w11, [x19, x11]
   2f8a0:	cmp	w10, w11
   2f8a4:	b.ne	2f8d4 <get_python_format_unnamed_arg_count@@Base+0xfc0c>  // b.any
   2f8a8:	add	x24, x19, x9, lsl #3
   2f8ac:	ldr	w11, [x27, #4]
   2f8b0:	ldr	w9, [x24, #4]!
   2f8b4:	cmp	w11, w9
   2f8b8:	cset	w9, eq  // eq = none
   2f8bc:	cset	w10, ne  // ne = any
   2f8c0:	orr	w12, w8, w9
   2f8c4:	csel	w9, w11, wzr, eq  // eq = none
   2f8c8:	tbz	w12, #0, 2f8f0 <get_python_format_unnamed_arg_count@@Base+0xfc28>
   2f8cc:	orr	w8, w8, w10
   2f8d0:	b	2f914 <get_python_format_unnamed_arg_count@@Base+0xfc4c>
   2f8d4:	cmp	x26, w25, uxtw
   2f8d8:	b.ls	2f8e8 <get_python_format_unnamed_arg_count@@Base+0xfc20>  // b.plast
   2f8dc:	ldr	x9, [x27]
   2f8e0:	mov	w10, w25
   2f8e4:	str	x9, [x19, x10, lsl #3]
   2f8e8:	add	w25, w25, #0x1
   2f8ec:	b	2f918 <get_python_format_unnamed_arg_count@@Base+0xfc50>
   2f8f0:	mov	w2, #0x5                   	// #5
   2f8f4:	mov	x0, xzr
   2f8f8:	mov	x1, x23
   2f8fc:	bl	acd0 <dcgettext@plt>
   2f900:	ldr	w1, [x27]
   2f904:	bl	aa20 <xasprintf@plt>
   2f908:	mov	w9, wzr
   2f90c:	mov	w8, #0x1                   	// #1
   2f910:	str	x0, [x21]
   2f914:	str	w9, [x24]
   2f918:	add	x26, x26, #0x1
   2f91c:	cmp	x22, x26
   2f920:	add	x27, x27, #0x8
   2f924:	b.ne	2f88c <get_python_format_unnamed_arg_count@@Base+0xfbc4>  // b.any
   2f928:	ldur	w26, [x29, #-12]
   2f92c:	tbz	w8, #0, 2f950 <get_python_format_unnamed_arg_count@@Base+0xfc88>
   2f930:	b	2fb18 <get_python_format_unnamed_arg_count@@Base+0xfe50>
   2f934:	mov	w26, wzr
   2f938:	mov	x19, xzr
   2f93c:	mov	w20, wzr
   2f940:	mov	w25, wzr
   2f944:	b	2f950 <get_python_format_unnamed_arg_count@@Base+0xfc88>
   2f948:	ldur	w26, [x29, #-12]
   2f94c:	ldr	x21, [sp, #8]
   2f950:	mov	x22, xzr
   2f954:	mov	w23, w25
   2f958:	mov	x24, x19
   2f95c:	cmp	x23, x22
   2f960:	b.eq	2f99c <get_python_format_unnamed_arg_count@@Base+0xfcd4>  // b.none
   2f964:	ldr	w8, [x24], #8
   2f968:	add	x22, x22, #0x1
   2f96c:	cmp	x22, x8
   2f970:	b.eq	2f95c <get_python_format_unnamed_arg_count@@Base+0xfc94>  // b.none
   2f974:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2f978:	add	x1, x1, #0x8fb
   2f97c:	mov	w2, #0x5                   	// #5
   2f980:	mov	x0, xzr
   2f984:	bl	acd0 <dcgettext@plt>
   2f988:	ldur	w1, [x24, #-8]
   2f98c:	mov	w2, w22
   2f990:	bl	aa20 <xasprintf@plt>
   2f994:	str	x0, [x21]
   2f998:	b	2fb1c <get_python_format_unnamed_arg_count@@Base+0xfe54>
   2f99c:	mov	w22, wzr
   2f9a0:	cbz	w23, 2fa08 <get_python_format_unnamed_arg_count@@Base+0xfd40>
   2f9a4:	add	x8, x19, #0x4
   2f9a8:	mov	x9, x23
   2f9ac:	ldr	w10, [x8], #8
   2f9b0:	cmp	w10, #0x1
   2f9b4:	cinc	w22, w22, ne  // ne = any
   2f9b8:	subs	x9, x9, #0x1
   2f9bc:	b.ne	2f9ac <get_python_format_unnamed_arg_count@@Base+0xfce4>  // b.any
   2f9c0:	cbz	w22, 2fa08 <get_python_format_unnamed_arg_count@@Base+0xfd40>
   2f9c4:	mov	w8, w22
   2f9c8:	lsl	x0, x8, #2
   2f9cc:	bl	a590 <xmalloc@plt>
   2f9d0:	mov	x21, x0
   2f9d4:	cbz	w23, 2fa0c <get_python_format_unnamed_arg_count@@Base+0xfd44>
   2f9d8:	mov	w8, wzr
   2f9dc:	add	x9, x19, #0x4
   2f9e0:	ldr	w10, [x9]
   2f9e4:	cmp	w10, #0x1
   2f9e8:	b.eq	2f9f8 <get_python_format_unnamed_arg_count@@Base+0xfd30>  // b.none
   2f9ec:	add	w11, w8, #0x1
   2f9f0:	str	w10, [x21, w8, uxtw #2]
   2f9f4:	mov	w8, w11
   2f9f8:	subs	x23, x23, #0x1
   2f9fc:	add	x9, x9, #0x8
   2fa00:	b.ne	2f9e0 <get_python_format_unnamed_arg_count@@Base+0xfd18>  // b.any
   2fa04:	b	2fa0c <get_python_format_unnamed_arg_count@@Base+0xfd44>
   2fa08:	mov	x21, xzr
   2fa0c:	mov	x0, x19
   2fa10:	bl	aa00 <free@plt>
   2fa14:	mov	w0, #0x18                  	// #24
   2fa18:	bl	a590 <xmalloc@plt>
   2fa1c:	stp	w20, w22, [x0]
   2fa20:	str	x21, [x0, #8]
   2fa24:	strb	w26, [x0, #16]
   2fa28:	ldur	w8, [x29, #-8]
   2fa2c:	ldur	w9, [x29, #-5]
   2fa30:	stur	w8, [x0, #17]
   2fa34:	str	w9, [x0, #20]
   2fa38:	b	2fb28 <get_python_format_unnamed_arg_count@@Base+0xfe60>
   2fa3c:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2fa40:	add	x1, x1, #0x58e
   2fa44:	mov	w2, #0x5                   	// #5
   2fa48:	mov	x0, xzr
   2fa4c:	bl	acd0 <dcgettext@plt>
   2fa50:	mov	w1, w20
   2fa54:	bl	aa20 <xasprintf@plt>
   2fa58:	ldr	x8, [sp, #8]
   2fa5c:	str	x0, [x8]
   2fa60:	cbz	x22, 2fb18 <get_python_format_unnamed_arg_count@@Base+0xfe50>
   2fa64:	sub	x8, x24, #0x1
   2fa68:	sub	x8, x8, x23
   2fa6c:	b	2fb0c <get_python_format_unnamed_arg_count@@Base+0xfe44>
   2fa70:	cbnz	w9, 2fab0 <get_python_format_unnamed_arg_count@@Base+0xfde8>
   2fa74:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2fa78:	add	x1, x1, #0x7e0
   2fa7c:	mov	w2, #0x5                   	// #5
   2fa80:	mov	x0, xzr
   2fa84:	bl	acd0 <dcgettext@plt>
   2fa88:	bl	a5a0 <xstrdup@plt>
   2fa8c:	ldr	x8, [sp, #8]
   2fa90:	str	x0, [x8]
   2fa94:	cbz	x22, 2fb18 <get_python_format_unnamed_arg_count@@Base+0xfe50>
   2fa98:	sub	x8, x26, x23
   2fa9c:	add	x8, x8, x22
   2faa0:	ldurb	w9, [x8, #-1]
   2faa4:	orr	w9, w9, #0x4
   2faa8:	sturb	w9, [x8, #-1]
   2faac:	b	2fb18 <get_python_format_unnamed_arg_count@@Base+0xfe50>
   2fab0:	sub	w8, w9, #0x20
   2fab4:	cmp	w8, #0x5e
   2fab8:	b.hi	2fae0 <get_python_format_unnamed_arg_count@@Base+0xfe18>  // b.pmore
   2fabc:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2fac0:	add	x1, x1, #0x80e
   2fac4:	mov	w2, #0x5                   	// #5
   2fac8:	mov	x0, xzr
   2facc:	bl	acd0 <dcgettext@plt>
   2fad0:	ldrb	w2, [x26]
   2fad4:	mov	w1, w20
   2fad8:	bl	aa20 <xasprintf@plt>
   2fadc:	b	2fafc <get_python_format_unnamed_arg_count@@Base+0xfe34>
   2fae0:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2fae4:	add	x1, x1, #0x862
   2fae8:	mov	w2, #0x5                   	// #5
   2faec:	mov	x0, xzr
   2faf0:	bl	acd0 <dcgettext@plt>
   2faf4:	mov	w1, w20
   2faf8:	bl	aa20 <xasprintf@plt>
   2fafc:	ldr	x8, [sp, #8]
   2fb00:	str	x0, [x8]
   2fb04:	cbz	x22, 2fb18 <get_python_format_unnamed_arg_count@@Base+0xfe50>
   2fb08:	sub	x8, x26, x23
   2fb0c:	ldrb	w9, [x22, x8]
   2fb10:	orr	w9, w9, #0x4
   2fb14:	strb	w9, [x22, x8]
   2fb18:	cbz	x19, 2fb24 <get_python_format_unnamed_arg_count@@Base+0xfe5c>
   2fb1c:	mov	x0, x19
   2fb20:	bl	aa00 <free@plt>
   2fb24:	mov	x0, xzr
   2fb28:	ldp	x20, x19, [sp, #112]
   2fb2c:	ldp	x22, x21, [sp, #96]
   2fb30:	ldp	x24, x23, [sp, #80]
   2fb34:	ldp	x26, x25, [sp, #64]
   2fb38:	ldp	x28, x27, [sp, #48]
   2fb3c:	ldp	x29, x30, [sp, #32]
   2fb40:	add	sp, sp, #0x80
   2fb44:	ret
   2fb48:	stp	x29, x30, [sp, #-32]!
   2fb4c:	str	x19, [sp, #16]
   2fb50:	mov	x19, x0
   2fb54:	ldr	x0, [x0, #8]
   2fb58:	mov	x29, sp
   2fb5c:	cbz	x0, 2fb64 <get_python_format_unnamed_arg_count@@Base+0xfe9c>
   2fb60:	bl	aa00 <free@plt>
   2fb64:	mov	x0, x19
   2fb68:	ldr	x19, [sp, #16]
   2fb6c:	ldp	x29, x30, [sp], #32
   2fb70:	b	aa00 <free@plt>
   2fb74:	ldr	w0, [x0]
   2fb78:	ret
   2fb7c:	stp	x29, x30, [sp, #-80]!
   2fb80:	stp	x24, x23, [sp, #32]
   2fb84:	stp	x22, x21, [sp, #48]
   2fb88:	stp	x20, x19, [sp, #64]
   2fb8c:	ldr	w8, [x0, #4]
   2fb90:	ldr	w9, [x1, #4]
   2fb94:	mov	x20, x5
   2fb98:	mov	x21, x4
   2fb9c:	mov	x19, x3
   2fba0:	mov	x22, x1
   2fba4:	mov	x23, x0
   2fba8:	cmp	w8, w9
   2fbac:	str	x25, [sp, #16]
   2fbb0:	mov	x29, sp
   2fbb4:	tbz	w2, #0, 2fbe8 <get_python_format_unnamed_arg_count@@Base+0xff20>
   2fbb8:	b.eq	2fbec <get_python_format_unnamed_arg_count@@Base+0xff24>  // b.none
   2fbbc:	cbz	x19, 2fbe0 <get_python_format_unnamed_arg_count@@Base+0xff18>
   2fbc0:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   2fbc4:	add	x1, x1, #0x506
   2fbc8:	mov	w2, #0x5                   	// #5
   2fbcc:	mov	x0, xzr
   2fbd0:	bl	acd0 <dcgettext@plt>
   2fbd4:	mov	x1, x21
   2fbd8:	mov	x2, x20
   2fbdc:	blr	x19
   2fbe0:	mov	w8, #0x1                   	// #1
   2fbe4:	b	2fc6c <get_python_format_unnamed_arg_count@@Base+0xffa4>
   2fbe8:	b.cc	2fbbc <get_python_format_unnamed_arg_count@@Base+0xfef4>  // b.lo, b.ul, b.last
   2fbec:	cbz	w9, 2fc68 <get_python_format_unnamed_arg_count@@Base+0xffa0>
   2fbf0:	adrp	x25, 39000 <get_search_path@@Base+0x2b4c>
   2fbf4:	mov	x24, xzr
   2fbf8:	mov	w8, wzr
   2fbfc:	add	x25, x25, #0x546
   2fc00:	ldr	x10, [x23, #8]
   2fc04:	ldr	x11, [x22, #8]
   2fc08:	ldr	w10, [x10, x24, lsl #2]
   2fc0c:	ldr	w11, [x11, x24, lsl #2]
   2fc10:	cmp	w10, w11
   2fc14:	ccmp	x19, #0x0, #0x4, ne  // ne = any
   2fc18:	b.ne	2fc30 <get_python_format_unnamed_arg_count@@Base+0xff68>  // b.any
   2fc1c:	cmp	w10, w11
   2fc20:	cset	w10, ne  // ne = any
   2fc24:	orr	w8, w8, w10
   2fc28:	add	x24, x24, #0x1
   2fc2c:	b	2fc5c <get_python_format_unnamed_arg_count@@Base+0xff94>
   2fc30:	mov	w2, #0x5                   	// #5
   2fc34:	mov	x0, xzr
   2fc38:	mov	x1, x25
   2fc3c:	bl	acd0 <dcgettext@plt>
   2fc40:	add	x24, x24, #0x1
   2fc44:	mov	x1, x21
   2fc48:	mov	x2, x20
   2fc4c:	mov	w3, w24
   2fc50:	blr	x19
   2fc54:	ldr	w9, [x22, #4]
   2fc58:	mov	w8, #0x1                   	// #1
   2fc5c:	cmp	x24, w9, uxtw
   2fc60:	b.cc	2fc00 <get_python_format_unnamed_arg_count@@Base+0xff38>  // b.lo, b.ul, b.last
   2fc64:	b	2fc6c <get_python_format_unnamed_arg_count@@Base+0xffa4>
   2fc68:	mov	w8, wzr
   2fc6c:	ldrb	w9, [x23, #16]
   2fc70:	ldrb	w10, [x22, #16]
   2fc74:	cmp	w9, w10
   2fc78:	b.eq	2fcb4 <get_python_format_unnamed_arg_count@@Base+0xffec>  // b.none
   2fc7c:	cbz	x19, 2fcb0 <get_python_format_unnamed_arg_count@@Base+0xffe8>
   2fc80:	cbz	w9, 2fc90 <get_python_format_unnamed_arg_count@@Base+0xffc8>
   2fc84:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2fc88:	add	x1, x1, #0xdb0
   2fc8c:	b	2fc98 <get_python_format_unnamed_arg_count@@Base+0xffd0>
   2fc90:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2fc94:	add	x1, x1, #0xdcf
   2fc98:	mov	w2, #0x5                   	// #5
   2fc9c:	mov	x0, xzr
   2fca0:	bl	acd0 <dcgettext@plt>
   2fca4:	mov	x1, x21
   2fca8:	mov	x2, x20
   2fcac:	blr	x19
   2fcb0:	mov	w8, #0x1                   	// #1
   2fcb4:	ldp	x20, x19, [sp, #64]
   2fcb8:	ldp	x22, x21, [sp, #48]
   2fcbc:	ldp	x24, x23, [sp, #32]
   2fcc0:	ldr	x25, [sp, #16]
   2fcc4:	and	w0, w8, #0x1
   2fcc8:	ldp	x29, x30, [sp], #80
   2fccc:	ret
   2fcd0:	ldr	w8, [x0]
   2fcd4:	ldr	w9, [x1]
   2fcd8:	cmp	w8, w9
   2fcdc:	csetm	w8, cc  // cc = lo, ul, last
   2fce0:	csinc	w0, w8, wzr, ls  // ls = plast
   2fce4:	ret
   2fce8:	sub	sp, sp, #0x90
   2fcec:	mov	w8, #0x1                   	// #1
   2fcf0:	stp	x29, x30, [sp, #112]
   2fcf4:	str	wzr, [sp]
   2fcf8:	strb	w8, [sp, #4]
   2fcfc:	str	wzr, [sp, #8]
   2fd00:	ldrb	w14, [x0]
   2fd04:	str	x19, [sp, #128]
   2fd08:	add	x29, sp, #0x70
   2fd0c:	cbz	w14, 2fdf8 <get_python_format_unnamed_arg_count@@Base+0x10130>
   2fd10:	mov	w10, wzr
   2fd14:	mov	w9, wzr
   2fd18:	mov	w11, #0xa                   	// #10
   2fd1c:	mov	x12, sp
   2fd20:	mov	x15, x0
   2fd24:	and	w13, w14, #0xff
   2fd28:	cmp	w13, #0x25
   2fd2c:	add	x13, x15, #0x1
   2fd30:	b.ne	2fdec <get_python_format_unnamed_arg_count@@Base+0x10124>  // b.any
   2fd34:	ldrb	w16, [x15, #1]
   2fd38:	add	x17, x15, #0x2
   2fd3c:	cmp	w16, #0x4c
   2fd40:	cinc	x14, x8, eq  // eq = none
   2fd44:	ldrb	w14, [x15, x14]
   2fd48:	csel	x13, x17, x13, eq  // eq = none
   2fd4c:	sub	w17, w14, #0x30
   2fd50:	cmp	w17, #0x9
   2fd54:	b.hi	2fdf0 <get_python_format_unnamed_arg_count@@Base+0x10128>  // b.pmore
   2fd58:	cbz	x2, 2fd6c <get_python_format_unnamed_arg_count@@Base+0x100a4>
   2fd5c:	sub	x14, x15, x0
   2fd60:	ldrb	w15, [x2, x14]
   2fd64:	orr	w15, w15, #0x1
   2fd68:	strb	w15, [x2, x14]
   2fd6c:	add	w9, w9, #0x1
   2fd70:	cmp	w16, #0x4c
   2fd74:	str	w9, [sp]
   2fd78:	b.ne	2fd80 <get_python_format_unnamed_arg_count@@Base+0x100b8>  // b.any
   2fd7c:	strb	wzr, [sp, #4]
   2fd80:	mov	x15, x13
   2fd84:	ldrb	w14, [x13]
   2fd88:	ldrb	w16, [x15, #1]!
   2fd8c:	sub	w14, w14, #0x30
   2fd90:	sub	w17, w16, #0x30
   2fd94:	cmp	w17, #0x9
   2fd98:	b.hi	2fdac <get_python_format_unnamed_arg_count@@Base+0x100e4>  // b.pmore
   2fd9c:	madd	w13, w14, w11, w16
   2fda0:	sub	w14, w13, #0x30
   2fda4:	mov	x13, x15
   2fda8:	strb	wzr, [sp, #4]
   2fdac:	cmp	w10, w14
   2fdb0:	b.hi	2fdcc <get_python_format_unnamed_arg_count@@Base+0x10104>  // b.pmore
   2fdb4:	add	x15, x12, w10, uxtw
   2fdb8:	add	w10, w10, #0x1
   2fdbc:	cmp	w10, w14
   2fdc0:	strb	wzr, [x15, #12]
   2fdc4:	b.ls	2fdb4 <get_python_format_unnamed_arg_count@@Base+0x100ec>  // b.plast
   2fdc8:	str	w10, [sp, #8]
   2fdcc:	add	x14, x12, x14
   2fdd0:	strb	w8, [x14, #12]
   2fdd4:	cbz	x2, 2fde8 <get_python_format_unnamed_arg_count@@Base+0x10120>
   2fdd8:	sub	x14, x13, x0
   2fddc:	ldrb	w15, [x2, x14]
   2fde0:	orr	w15, w15, #0x2
   2fde4:	strb	w15, [x2, x14]
   2fde8:	add	x13, x13, #0x1
   2fdec:	ldrb	w14, [x13]
   2fdf0:	mov	x15, x13
   2fdf4:	cbnz	w14, 2fd24 <get_python_format_unnamed_arg_count@@Base+0x1005c>
   2fdf8:	mov	w0, #0x70                  	// #112
   2fdfc:	bl	a590 <xmalloc@plt>
   2fe00:	mov	x1, sp
   2fe04:	mov	w2, #0x70                  	// #112
   2fe08:	mov	x19, x0
   2fe0c:	bl	a040 <memcpy@plt>
   2fe10:	mov	x0, x19
   2fe14:	ldr	x19, [sp, #128]
   2fe18:	ldp	x29, x30, [sp, #112]
   2fe1c:	add	sp, sp, #0x90
   2fe20:	ret
   2fe24:	b	aa00 <free@plt>
   2fe28:	ldr	w0, [x0]
   2fe2c:	ret
   2fe30:	stp	x29, x30, [sp, #-48]!
   2fe34:	stp	x22, x21, [sp, #16]
   2fe38:	stp	x20, x19, [sp, #32]
   2fe3c:	ldrb	w8, [x0, #4]
   2fe40:	mov	x20, x5
   2fe44:	mov	x21, x4
   2fe48:	mov	x19, x3
   2fe4c:	mov	x29, sp
   2fe50:	cbz	w8, 2fe5c <get_python_format_unnamed_arg_count@@Base+0x10194>
   2fe54:	ldrb	w8, [x1, #4]
   2fe58:	cbz	w8, 2fef8 <get_python_format_unnamed_arg_count@@Base+0x10230>
   2fe5c:	ldr	w8, [x0, #8]
   2fe60:	mov	x22, xzr
   2fe64:	add	x9, x0, #0xc
   2fe68:	add	x10, x1, #0xc
   2fe6c:	cmp	x22, x8
   2fe70:	b.cs	2fe88 <get_python_format_unnamed_arg_count@@Base+0x101c0>  // b.hs, b.nlast
   2fe74:	ldrb	w11, [x9, x22]
   2fe78:	ldr	w12, [x1, #8]
   2fe7c:	cmp	w11, #0x0
   2fe80:	cset	w11, ne  // ne = any
   2fe84:	b	2fe9c <get_python_format_unnamed_arg_count@@Base+0x101d4>
   2fe88:	ldr	w12, [x1, #8]
   2fe8c:	mov	w11, wzr
   2fe90:	mov	w0, wzr
   2fe94:	cmp	x22, x12
   2fe98:	b.cs	2ff48 <get_python_format_unnamed_arg_count@@Base+0x10280>  // b.hs, b.nlast
   2fe9c:	cmp	x22, x12
   2fea0:	b.cs	2fec0 <get_python_format_unnamed_arg_count@@Base+0x101f8>  // b.hs, b.nlast
   2fea4:	ldrb	w12, [x10, x22]
   2fea8:	cmp	w12, #0x0
   2feac:	cset	w12, ne  // ne = any
   2feb0:	eor	w12, w11, w12
   2feb4:	cmp	w12, #0x1
   2feb8:	b.ne	2fec4 <get_python_format_unnamed_arg_count@@Base+0x101fc>  // b.any
   2febc:	b	2fecc <get_python_format_unnamed_arg_count@@Base+0x10204>
   2fec0:	tbnz	w11, #0, 2fecc <get_python_format_unnamed_arg_count@@Base+0x10204>
   2fec4:	add	x22, x22, #0x1
   2fec8:	b	2fe6c <get_python_format_unnamed_arg_count@@Base+0x101a4>
   2fecc:	cbz	x19, 2ff44 <get_python_format_unnamed_arg_count@@Base+0x1027c>
   2fed0:	cbz	w11, 2ff20 <get_python_format_unnamed_arg_count@@Base+0x10258>
   2fed4:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2fed8:	add	x1, x1, #0x37d
   2fedc:	mov	w2, #0x5                   	// #5
   2fee0:	mov	x0, xzr
   2fee4:	bl	acd0 <dcgettext@plt>
   2fee8:	mov	w1, w22
   2feec:	mov	x2, x20
   2fef0:	blr	x19
   2fef4:	b	2ff44 <get_python_format_unnamed_arg_count@@Base+0x1027c>
   2fef8:	cbz	x19, 2ff44 <get_python_format_unnamed_arg_count@@Base+0x1027c>
   2fefc:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2ff00:	add	x1, x1, #0xdf7
   2ff04:	mov	w2, #0x5                   	// #5
   2ff08:	mov	x0, xzr
   2ff0c:	bl	acd0 <dcgettext@plt>
   2ff10:	mov	x1, x21
   2ff14:	mov	x2, x20
   2ff18:	blr	x19
   2ff1c:	b	2ff44 <get_python_format_unnamed_arg_count@@Base+0x1027c>
   2ff20:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   2ff24:	add	x1, x1, #0x333
   2ff28:	mov	w2, #0x5                   	// #5
   2ff2c:	mov	x0, xzr
   2ff30:	bl	acd0 <dcgettext@plt>
   2ff34:	mov	w1, w22
   2ff38:	mov	x2, x20
   2ff3c:	mov	x3, x21
   2ff40:	blr	x19
   2ff44:	mov	w0, #0x1                   	// #1
   2ff48:	ldp	x20, x19, [sp, #32]
   2ff4c:	ldp	x22, x21, [sp, #16]
   2ff50:	ldp	x29, x30, [sp], #48
   2ff54:	ret
   2ff58:	stp	x29, x30, [sp, #-32]!
   2ff5c:	ldrb	w9, [x0]
   2ff60:	str	x19, [sp, #16]
   2ff64:	mov	x29, sp
   2ff68:	cbz	w9, 2ffe4 <get_python_format_unnamed_arg_count@@Base+0x1031c>
   2ff6c:	mov	w19, wzr
   2ff70:	mov	w8, #0x1                   	// #1
   2ff74:	mov	x10, x0
   2ff78:	and	w9, w9, #0xff
   2ff7c:	cmp	w9, #0x25
   2ff80:	add	x11, x10, #0x1
   2ff84:	b.ne	2ffd4 <get_python_format_unnamed_arg_count@@Base+0x1030c>  // b.any
   2ff88:	ldrb	w9, [x10, #1]
   2ff8c:	add	x12, x10, #0x2
   2ff90:	cmp	w9, #0x4c
   2ff94:	cinc	x9, x8, eq  // eq = none
   2ff98:	ldrb	w9, [x10, x9]
   2ff9c:	csel	x11, x12, x11, eq  // eq = none
   2ffa0:	cmp	w9, #0x6e
   2ffa4:	b.ne	2ffd8 <get_python_format_unnamed_arg_count@@Base+0x10310>  // b.any
   2ffa8:	cbz	x2, 2ffcc <get_python_format_unnamed_arg_count@@Base+0x10304>
   2ffac:	sub	x9, x10, x0
   2ffb0:	ldrb	w10, [x2, x9]
   2ffb4:	orr	w10, w10, #0x1
   2ffb8:	strb	w10, [x2, x9]
   2ffbc:	sub	x9, x11, x0
   2ffc0:	ldrb	w10, [x2, x9]
   2ffc4:	orr	w10, w10, #0x2
   2ffc8:	strb	w10, [x2, x9]
   2ffcc:	add	w19, w19, #0x1
   2ffd0:	add	x11, x11, #0x1
   2ffd4:	ldrb	w9, [x11]
   2ffd8:	mov	x10, x11
   2ffdc:	cbnz	w9, 2ff78 <get_python_format_unnamed_arg_count@@Base+0x102b0>
   2ffe0:	b	2ffe8 <get_python_format_unnamed_arg_count@@Base+0x10320>
   2ffe4:	mov	w19, wzr
   2ffe8:	mov	w0, #0x4                   	// #4
   2ffec:	bl	a590 <xmalloc@plt>
   2fff0:	str	w19, [x0]
   2fff4:	ldr	x19, [sp, #16]
   2fff8:	ldp	x29, x30, [sp], #32
   2fffc:	ret
   30000:	b	aa00 <free@plt>
   30004:	ldr	w0, [x0]
   30008:	ret
   3000c:	stp	x29, x30, [sp, #-48]!
   30010:	stp	x20, x19, [sp, #32]
   30014:	ldr	w8, [x0]
   30018:	str	x21, [sp, #16]
   3001c:	mov	x19, x5
   30020:	mov	x21, x4
   30024:	mov	x20, x3
   30028:	mov	x29, sp
   3002c:	cbz	w8, 3004c <get_python_format_unnamed_arg_count@@Base+0x10384>
   30030:	mov	w0, wzr
   30034:	cbz	w8, 3007c <get_python_format_unnamed_arg_count@@Base+0x103b4>
   30038:	tbz	w2, #0, 3007c <get_python_format_unnamed_arg_count@@Base+0x103b4>
   3003c:	ldr	w8, [x1]
   30040:	cbz	w8, 30054 <get_python_format_unnamed_arg_count@@Base+0x1038c>
   30044:	mov	w0, wzr
   30048:	b	3007c <get_python_format_unnamed_arg_count@@Base+0x103b4>
   3004c:	ldr	w8, [x1]
   30050:	cbz	w8, 30044 <get_python_format_unnamed_arg_count@@Base+0x1037c>
   30054:	cbz	x20, 30078 <get_python_format_unnamed_arg_count@@Base+0x103b0>
   30058:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   3005c:	add	x1, x1, #0x506
   30060:	mov	w2, #0x5                   	// #5
   30064:	mov	x0, xzr
   30068:	bl	acd0 <dcgettext@plt>
   3006c:	mov	x1, x21
   30070:	mov	x2, x19
   30074:	blr	x20
   30078:	mov	w0, #0x1                   	// #1
   3007c:	ldp	x20, x19, [sp, #32]
   30080:	ldr	x21, [sp, #16]
   30084:	ldp	x29, x30, [sp], #48
   30088:	ret
   3008c:	sub	sp, sp, #0x70
   30090:	stp	x29, x30, [sp, #16]
   30094:	stp	x28, x27, [sp, #32]
   30098:	stp	x26, x25, [sp, #48]
   3009c:	stp	x24, x23, [sp, #64]
   300a0:	stp	x22, x21, [sp, #80]
   300a4:	stp	x20, x19, [sp, #96]
   300a8:	ldrb	w8, [x0]
   300ac:	add	x29, sp, #0x10
   300b0:	cbz	w8, 30274 <get_python_format_unnamed_arg_count@@Base+0x105ac>
   300b4:	mov	x21, x0
   300b8:	mov	x22, x2
   300bc:	mov	x19, xzr
   300c0:	mov	w12, wzr
   300c4:	mov	w23, wzr
   300c8:	mov	w25, wzr
   300cc:	mov	w26, #0xa                   	// #10
   300d0:	mov	x9, x0
   300d4:	str	x3, [sp, #8]
   300d8:	and	w8, w8, #0xff
   300dc:	cmp	w8, #0x25
   300e0:	add	x27, x9, #0x1
   300e4:	b.ne	301a0 <get_python_format_unnamed_arg_count@@Base+0x104d8>  // b.any
   300e8:	ldrb	w8, [x27]
   300ec:	sub	w10, w8, #0x31
   300f0:	cmp	w10, #0x8
   300f4:	b.hi	301ac <get_python_format_unnamed_arg_count@@Base+0x104e4>  // b.pmore
   300f8:	cbz	x22, 30110 <get_python_format_unnamed_arg_count@@Base+0x10448>
   300fc:	sub	x8, x9, x21
   30100:	ldrb	w10, [x22, x8]
   30104:	orr	w10, w10, #0x1
   30108:	strb	w10, [x22, x8]
   3010c:	ldrb	w8, [x9, #1]
   30110:	mov	x28, x9
   30114:	ldrb	w10, [x28, #2]!
   30118:	sub	w20, w8, #0x30
   3011c:	sub	w11, w10, #0x30
   30120:	cmp	w11, #0x9
   30124:	b.hi	30150 <get_python_format_unnamed_arg_count@@Base+0x10488>  // b.pmore
   30128:	add	x27, x9, #0x1
   3012c:	mul	w8, w20, w26
   30130:	add	w8, w8, w10, uxtb
   30134:	ldrb	w10, [x27, #2]
   30138:	sub	w20, w8, #0x30
   3013c:	add	x27, x27, #0x1
   30140:	sub	w8, w10, #0x30
   30144:	cmp	w8, #0xa
   30148:	b.cc	3012c <get_python_format_unnamed_arg_count@@Base+0x10464>  // b.lo, b.ul, b.last
   3014c:	add	x28, x27, #0x1
   30150:	cmp	w12, w25
   30154:	add	w23, w23, #0x1
   30158:	b.ne	30180 <get_python_format_unnamed_arg_count@@Base+0x104b8>  // b.any
   3015c:	mov	w24, w23
   30160:	mov	w23, #0x1                   	// #1
   30164:	bfi	w23, w12, #1, #31
   30168:	lsl	x1, x23, #2
   3016c:	mov	x0, x19
   30170:	bl	a460 <xrealloc@plt>
   30174:	mov	x19, x0
   30178:	mov	w12, w23
   3017c:	mov	w23, w24
   30180:	str	w20, [x19, w25, uxtw #2]
   30184:	add	w25, w25, #0x1
   30188:	cbz	x22, 301a4 <get_python_format_unnamed_arg_count@@Base+0x104dc>
   3018c:	sub	x8, x27, x21
   30190:	ldrb	w9, [x22, x8]
   30194:	orr	w9, w9, #0x2
   30198:	strb	w9, [x22, x8]
   3019c:	b	301a4 <get_python_format_unnamed_arg_count@@Base+0x104dc>
   301a0:	mov	x28, x27
   301a4:	ldrb	w8, [x28]
   301a8:	mov	x27, x28
   301ac:	mov	x9, x27
   301b0:	cbnz	w8, 300d8 <get_python_format_unnamed_arg_count@@Base+0x10410>
   301b4:	mov	w24, w12
   301b8:	cmp	w25, #0x2
   301bc:	b.cc	30220 <get_python_format_unnamed_arg_count@@Base+0x10558>  // b.lo, b.ul, b.last
   301c0:	mov	w21, w25
   301c4:	adrp	x3, 30000 <get_python_format_unnamed_arg_count@@Base+0x10338>
   301c8:	add	x3, x3, #0x49c
   301cc:	mov	w2, #0x4                   	// #4
   301d0:	mov	x0, x19
   301d4:	mov	x1, x21
   301d8:	bl	a2f0 <qsort@plt>
   301dc:	mov	x8, xzr
   301e0:	mov	w25, wzr
   301e4:	cbz	w25, 301fc <get_python_format_unnamed_arg_count@@Base+0x10534>
   301e8:	sub	w10, w25, #0x1
   301ec:	ldr	w9, [x19, x8, lsl #2]
   301f0:	ldr	w10, [x19, w10, uxtw #2]
   301f4:	cmp	w9, w10
   301f8:	b.eq	30214 <get_python_format_unnamed_arg_count@@Base+0x1054c>  // b.none
   301fc:	cmp	x8, w25, uxtw
   30200:	b.ls	30210 <get_python_format_unnamed_arg_count@@Base+0x10548>  // b.plast
   30204:	ldr	w9, [x19, x8, lsl #2]
   30208:	mov	w10, w25
   3020c:	str	w9, [x19, x10, lsl #2]
   30210:	add	w25, w25, #0x1
   30214:	add	x8, x8, #0x1
   30218:	cmp	x21, x8
   3021c:	b.ne	301e4 <get_python_format_unnamed_arg_count@@Base+0x1051c>  // b.any
   30220:	cbz	w25, 30288 <get_python_format_unnamed_arg_count@@Base+0x105c0>
   30224:	mov	x21, xzr
   30228:	mov	w22, w25
   3022c:	cmp	x22, x21
   30230:	b.eq	3028c <get_python_format_unnamed_arg_count@@Base+0x105c4>  // b.none
   30234:	ldr	w8, [x19, x21, lsl #2]
   30238:	add	x21, x21, #0x1
   3023c:	cmp	x21, x8
   30240:	b.cs	3022c <get_python_format_unnamed_arg_count@@Base+0x10564>  // b.hs, b.nlast
   30244:	sub	w8, w21, #0x1
   30248:	cmp	w22, w8
   3024c:	b.ls	3028c <get_python_format_unnamed_arg_count@@Base+0x105c4>  // b.plast
   30250:	sub	x20, x21, #0x1
   30254:	ldr	w8, [x19, x20, lsl #2]
   30258:	add	w9, w20, #0x2
   3025c:	cmp	w8, w9
   30260:	b.hi	302c0 <get_python_format_unnamed_arg_count@@Base+0x105f8>  // b.pmore
   30264:	add	x20, x20, #0x1
   30268:	cmp	w22, w20
   3026c:	b.ne	30254 <get_python_format_unnamed_arg_count@@Base+0x1058c>  // b.any
   30270:	b	3028c <get_python_format_unnamed_arg_count@@Base+0x105c4>
   30274:	mov	w22, wzr
   30278:	mov	w23, wzr
   3027c:	mov	w24, wzr
   30280:	mov	x19, xzr
   30284:	b	3028c <get_python_format_unnamed_arg_count@@Base+0x105c4>
   30288:	mov	w22, wzr
   3028c:	mov	w0, #0x18                  	// #24
   30290:	bl	a590 <xmalloc@plt>
   30294:	stp	w23, w22, [x0]
   30298:	str	w24, [x0, #8]
   3029c:	str	x19, [x0, #16]
   302a0:	ldp	x20, x19, [sp, #96]
   302a4:	ldp	x22, x21, [sp, #80]
   302a8:	ldp	x24, x23, [sp, #64]
   302ac:	ldp	x26, x25, [sp, #48]
   302b0:	ldp	x28, x27, [sp, #32]
   302b4:	ldp	x29, x30, [sp, #16]
   302b8:	add	sp, sp, #0x70
   302bc:	ret
   302c0:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   302c4:	add	x1, x1, #0xe62
   302c8:	mov	w2, #0x5                   	// #5
   302cc:	mov	x0, xzr
   302d0:	bl	acd0 <dcgettext@plt>
   302d4:	ldr	w1, [x19, w20, uxtw #2]
   302d8:	add	w3, w20, #0x2
   302dc:	mov	w2, w21
   302e0:	bl	aa20 <xasprintf@plt>
   302e4:	ldr	x8, [sp, #8]
   302e8:	str	x0, [x8]
   302ec:	mov	x0, x19
   302f0:	bl	aa00 <free@plt>
   302f4:	mov	x0, xzr
   302f8:	b	302a0 <get_python_format_unnamed_arg_count@@Base+0x105d8>
   302fc:	stp	x29, x30, [sp, #-32]!
   30300:	str	x19, [sp, #16]
   30304:	mov	x19, x0
   30308:	ldr	x0, [x0, #16]
   3030c:	mov	x29, sp
   30310:	cbz	x0, 30318 <get_python_format_unnamed_arg_count@@Base+0x10650>
   30314:	bl	aa00 <free@plt>
   30318:	mov	x0, x19
   3031c:	ldr	x19, [sp, #16]
   30320:	ldp	x29, x30, [sp], #32
   30324:	b	aa00 <free@plt>
   30328:	ldr	w0, [x0]
   3032c:	ret
   30330:	stp	x29, x30, [sp, #-80]!
   30334:	stp	x26, x25, [sp, #16]
   30338:	stp	x24, x23, [sp, #32]
   3033c:	stp	x22, x21, [sp, #48]
   30340:	stp	x20, x19, [sp, #64]
   30344:	ldr	w8, [x0, #4]
   30348:	ldr	w9, [x1, #4]
   3034c:	mov	x21, x0
   30350:	mov	w0, wzr
   30354:	mov	x29, sp
   30358:	cmn	w8, w9
   3035c:	b.eq	30484 <get_python_format_unnamed_arg_count@@Base+0x107bc>  // b.none
   30360:	orr	w10, w9, w8
   30364:	cbz	w10, 30484 <get_python_format_unnamed_arg_count@@Base+0x107bc>
   30368:	cmp	w9, #0x0
   3036c:	cset	w10, ne  // ne = any
   30370:	cmp	w8, #0x0
   30374:	mov	x20, x5
   30378:	mov	x22, x4
   3037c:	mov	x19, x3
   30380:	mov	x23, x1
   30384:	mov	x25, xzr
   30388:	mov	w24, wzr
   3038c:	mov	w26, wzr
   30390:	cset	w11, ne  // ne = any
   30394:	tbz	w11, #0, 303f8 <get_python_format_unnamed_arg_count@@Base+0x10730>
   30398:	tbz	w10, #0, 303b8 <get_python_format_unnamed_arg_count@@Base+0x106f0>
   3039c:	ldr	x10, [x21, #16]
   303a0:	ldr	x11, [x23, #16]
   303a4:	ldr	w10, [x10, x25, lsl #2]
   303a8:	ldr	w11, [x11, w26, uxtw #2]
   303ac:	cmp	w10, w11
   303b0:	b.hi	303f8 <get_python_format_unnamed_arg_count@@Base+0x10730>  // b.pmore
   303b4:	b.cs	303cc <get_python_format_unnamed_arg_count@@Base+0x10704>  // b.hs, b.nlast
   303b8:	tbnz	w2, #0, 30428 <get_python_format_unnamed_arg_count@@Base+0x10760>
   303bc:	cbnz	w24, 30454 <get_python_format_unnamed_arg_count@@Base+0x1078c>
   303c0:	ldr	x10, [x21, #16]
   303c4:	ldr	w24, [x10, x25, lsl #2]
   303c8:	b	303d0 <get_python_format_unnamed_arg_count@@Base+0x10708>
   303cc:	add	w26, w26, #0x1
   303d0:	add	x25, x25, #0x1
   303d4:	cmp	x25, x8
   303d8:	cset	w11, cc  // cc = lo, ul, last
   303dc:	cmp	w26, w9
   303e0:	cset	w10, cc  // cc = lo, ul, last
   303e4:	b.cc	30394 <get_python_format_unnamed_arg_count@@Base+0x106cc>  // b.lo, b.ul, b.last
   303e8:	cmp	x25, x8
   303ec:	b.cc	30394 <get_python_format_unnamed_arg_count@@Base+0x106cc>  // b.lo, b.ul, b.last
   303f0:	mov	w0, wzr
   303f4:	b	30484 <get_python_format_unnamed_arg_count@@Base+0x107bc>
   303f8:	cbz	x19, 30480 <get_python_format_unnamed_arg_count@@Base+0x107b8>
   303fc:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   30400:	add	x1, x1, #0x333
   30404:	mov	w2, #0x5                   	// #5
   30408:	mov	x0, xzr
   3040c:	bl	acd0 <dcgettext@plt>
   30410:	ldr	x8, [x23, #16]
   30414:	mov	x2, x20
   30418:	mov	x3, x22
   3041c:	ldr	w1, [x8, w26, uxtw #2]
   30420:	blr	x19
   30424:	b	30480 <get_python_format_unnamed_arg_count@@Base+0x107b8>
   30428:	cbz	x19, 30480 <get_python_format_unnamed_arg_count@@Base+0x107b8>
   3042c:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   30430:	add	x1, x1, #0x37d
   30434:	mov	w2, #0x5                   	// #5
   30438:	mov	x0, xzr
   3043c:	bl	acd0 <dcgettext@plt>
   30440:	ldr	x8, [x21, #16]
   30444:	mov	x2, x20
   30448:	ldr	w1, [x8, w25, uxtw #2]
   3044c:	blr	x19
   30450:	b	30480 <get_python_format_unnamed_arg_count@@Base+0x107b8>
   30454:	cbz	x19, 30480 <get_python_format_unnamed_arg_count@@Base+0x107b8>
   30458:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   3045c:	add	x1, x1, #0xeaf
   30460:	mov	w2, #0x5                   	// #5
   30464:	mov	x0, xzr
   30468:	bl	acd0 <dcgettext@plt>
   3046c:	ldr	x8, [x21, #16]
   30470:	mov	w1, w24
   30474:	mov	x3, x20
   30478:	ldr	w2, [x8, w25, uxtw #2]
   3047c:	blr	x19
   30480:	mov	w0, #0x1                   	// #1
   30484:	ldp	x20, x19, [sp, #64]
   30488:	ldp	x22, x21, [sp, #48]
   3048c:	ldp	x24, x23, [sp, #32]
   30490:	ldp	x26, x25, [sp, #16]
   30494:	ldp	x29, x30, [sp], #80
   30498:	ret
   3049c:	ldr	w8, [x0]
   304a0:	ldr	w9, [x1]
   304a4:	sub	w8, w8, #0x1
   304a8:	sub	w9, w9, #0x1
   304ac:	cmp	w8, w9
   304b0:	csetm	w8, cc  // cc = lo, ul, last
   304b4:	csinc	w0, w8, wzr, ls  // ls = plast
   304b8:	ret
   304bc:	sub	sp, sp, #0x90
   304c0:	stp	x29, x30, [sp, #48]
   304c4:	stp	x28, x27, [sp, #64]
   304c8:	stp	x26, x25, [sp, #80]
   304cc:	stp	x24, x23, [sp, #96]
   304d0:	stp	x22, x21, [sp, #112]
   304d4:	stp	x20, x19, [sp, #128]
   304d8:	add	x29, sp, #0x30
   304dc:	mov	x19, x3
   304e0:	mov	x20, x2
   304e4:	mov	w22, w1
   304e8:	mov	x21, x0
   304ec:	bl	a0d0 <strlen@plt>
   304f0:	mov	x25, x0
   304f4:	cmp	x0, #0x1
   304f8:	add	x28, x21, x0
   304fc:	stur	x19, [x29, #-16]
   30500:	mov	x19, xzr
   30504:	b.lt	30530 <get_python_format_unnamed_arg_count@@Base+0x10868>  // b.tstop
   30508:	mov	x0, x21
   3050c:	mov	w1, #0x26                  	// #38
   30510:	bl	aca0 <strchrnul@plt>
   30514:	ldrb	w8, [x0]
   30518:	cmp	w8, #0x26
   3051c:	b.ne	30530 <get_python_format_unnamed_arg_count@@Base+0x10868>  // b.any
   30520:	add	x0, x0, #0x1
   30524:	cmp	x0, x28
   30528:	add	x19, x19, #0x1
   3052c:	b.cc	3050c <get_python_format_unnamed_arg_count@@Base+0x10844>  // b.lo, b.ul, b.last
   30530:	add	x8, x25, x19, lsl #2
   30534:	add	x0, x8, #0x41
   30538:	bl	a590 <xmalloc@plt>
   3053c:	adrp	x8, 3a000 <plural_table_size@@Base+0xc00>
   30540:	add	x8, x8, #0xf16
   30544:	ldp	q1, q0, [x8]
   30548:	ldur	x9, [x8, #47]
   3054c:	ldr	q2, [x8, #32]
   30550:	mov	x23, x0
   30554:	add	x24, x0, #0x36
   30558:	cmp	x25, #0x1
   3055c:	strb	wzr, [x0]
   30560:	stp	q1, q0, [x0]
   30564:	stur	x9, [x0, #47]
   30568:	str	q2, [x0, #32]
   3056c:	stp	x21, x20, [sp, #16]
   30570:	str	w22, [sp, #12]
   30574:	b.lt	3080c <get_python_format_unnamed_arg_count@@Base+0x10b44>  // b.tstop
   30578:	adrp	x19, 3a000 <plural_table_size@@Base+0xc00>
   3057c:	mov	x25, x21
   30580:	adrp	x21, 3a000 <plural_table_size@@Base+0xc00>
   30584:	adrp	x20, 3a000 <plural_table_size@@Base+0xc00>
   30588:	mov	w22, #0x1                   	// #1
   3058c:	add	x19, x19, #0xf4f
   30590:	add	x21, x21, #0xf78
   30594:	add	x20, x20, #0xff8
   30598:	mov	w1, #0x26                  	// #38
   3059c:	mov	x0, x25
   305a0:	bl	aca0 <strchrnul@plt>
   305a4:	mov	x26, x0
   305a8:	sub	x2, x0, x25
   305ac:	mov	x0, x24
   305b0:	mov	x1, x25
   305b4:	bl	a8a0 <stpncpy@plt>
   305b8:	ldrb	w8, [x26]
   305bc:	mov	x24, x0
   305c0:	cmp	w8, #0x26
   305c4:	b.ne	3080c <get_python_format_unnamed_arg_count@@Base+0x10b44>  // b.any
   305c8:	mov	x0, x26
   305cc:	bl	a0d0 <strlen@plt>
   305d0:	mov	w8, #0x26                  	// #38
   305d4:	stur	w8, [x29, #-4]
   305d8:	mov	x25, x26
   305dc:	ldrsb	w8, [x25, #1]!
   305e0:	mov	x27, x0
   305e4:	tbnz	w8, #31, 305f8 <get_python_format_unnamed_arg_count@@Base+0x10930>
   305e8:	and	w8, w8, #0xff
   305ec:	stur	w8, [x29, #-4]
   305f0:	mov	w9, #0x1                   	// #1
   305f4:	b	30610 <get_python_format_unnamed_arg_count@@Base+0x10948>
   305f8:	sub	x2, x27, #0x1
   305fc:	sub	x0, x29, #0x4
   30600:	mov	x1, x25
   30604:	bl	a820 <u8_mbtouc_aux@plt>
   30608:	ldur	w8, [x29, #-4]
   3060c:	sxtw	x9, w0
   30610:	add	x27, x26, x27
   30614:	cmp	w8, #0x23
   30618:	add	x26, x25, x9
   3061c:	b.ne	30638 <get_python_format_unnamed_arg_count@@Base+0x10970>  // b.any
   30620:	ldrsb	w8, [x26]
   30624:	tbnz	w8, #31, 30668 <get_python_format_unnamed_arg_count@@Base+0x109a0>
   30628:	and	w8, w8, #0xff
   3062c:	stur	w8, [x29, #-4]
   30630:	mov	w9, #0x1                   	// #1
   30634:	b	30680 <get_python_format_unnamed_arg_count@@Base+0x109b8>
   30638:	mov	x9, xzr
   3063c:	ldr	w10, [x21, x9]
   30640:	cmp	w10, w8
   30644:	b.hi	30658 <get_python_format_unnamed_arg_count@@Base+0x10990>  // b.pmore
   30648:	add	x10, x21, x9
   3064c:	ldr	w10, [x10, #4]
   30650:	cmp	w8, w10
   30654:	b.ls	3075c <get_python_format_unnamed_arg_count@@Base+0x10a94>  // b.plast
   30658:	add	x9, x9, #0x8
   3065c:	cmp	x9, #0x80
   30660:	b.ne	3063c <get_python_format_unnamed_arg_count@@Base+0x10974>  // b.any
   30664:	b	307f4 <get_python_format_unnamed_arg_count@@Base+0x10b2c>
   30668:	sub	x2, x27, x26
   3066c:	sub	x0, x29, #0x4
   30670:	mov	x1, x26
   30674:	bl	a820 <u8_mbtouc_aux@plt>
   30678:	ldur	w8, [x29, #-4]
   3067c:	sxtw	x9, w0
   30680:	cmp	w8, #0x78
   30684:	add	x26, x26, x9
   30688:	b.ne	306f4 <get_python_format_unnamed_arg_count@@Base+0x10a2c>  // b.any
   3068c:	cmp	x26, x27
   30690:	b.cs	307f4 <get_python_format_unnamed_arg_count@@Base+0x10b2c>  // b.hs, b.nlast
   30694:	ldrsb	w8, [x26]
   30698:	tbnz	w8, #31, 306ac <get_python_format_unnamed_arg_count@@Base+0x109e4>
   3069c:	and	w8, w8, #0xff
   306a0:	stur	w8, [x29, #-4]
   306a4:	mov	w0, #0x1                   	// #1
   306a8:	b	306c0 <get_python_format_unnamed_arg_count@@Base+0x109f8>
   306ac:	sub	x2, x27, x26
   306b0:	sub	x0, x29, #0x4
   306b4:	mov	x1, x26
   306b8:	bl	a820 <u8_mbtouc_aux@plt>
   306bc:	ldur	w8, [x29, #-4]
   306c0:	sub	w9, w8, #0x30
   306c4:	cmp	w9, #0x9
   306c8:	b.ls	306e4 <get_python_format_unnamed_arg_count@@Base+0x10a1c>  // b.plast
   306cc:	sub	w9, w8, #0x41
   306d0:	cmp	w9, #0x25
   306d4:	b.hi	30744 <get_python_format_unnamed_arg_count@@Base+0x10a7c>  // b.pmore
   306d8:	lsl	x9, x22, x9
   306dc:	tst	x9, #0x3f0000003f
   306e0:	b.eq	30744 <get_python_format_unnamed_arg_count@@Base+0x10a7c>  // b.none
   306e4:	add	x26, x26, w0, sxtw
   306e8:	cmp	x26, x27
   306ec:	b.cc	30694 <get_python_format_unnamed_arg_count@@Base+0x109cc>  // b.lo, b.ul, b.last
   306f0:	b	30744 <get_python_format_unnamed_arg_count@@Base+0x10a7c>
   306f4:	sub	w8, w8, #0x30
   306f8:	cmp	w8, #0x9
   306fc:	b.hi	307f4 <get_python_format_unnamed_arg_count@@Base+0x10b2c>  // b.pmore
   30700:	cmp	x26, x27
   30704:	b.cs	307f4 <get_python_format_unnamed_arg_count@@Base+0x10b2c>  // b.hs, b.nlast
   30708:	ldrsb	w8, [x26]
   3070c:	tbnz	w8, #31, 30720 <get_python_format_unnamed_arg_count@@Base+0x10a58>
   30710:	and	w8, w8, #0xff
   30714:	stur	w8, [x29, #-4]
   30718:	mov	w0, #0x1                   	// #1
   3071c:	b	30734 <get_python_format_unnamed_arg_count@@Base+0x10a6c>
   30720:	sub	x2, x27, x26
   30724:	sub	x0, x29, #0x4
   30728:	mov	x1, x26
   3072c:	bl	a820 <u8_mbtouc_aux@plt>
   30730:	ldur	w8, [x29, #-4]
   30734:	sub	w9, w8, #0x30
   30738:	cmp	w9, #0xa
   3073c:	add	x26, x26, w0, sxtw
   30740:	b.cc	30700 <get_python_format_unnamed_arg_count@@Base+0x10a38>  // b.lo, b.ul, b.last
   30744:	cmp	w8, #0x3b
   30748:	mov	x1, x19
   3074c:	b.ne	307f8 <get_python_format_unnamed_arg_count@@Base+0x10b30>  // b.any
   30750:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   30754:	add	x1, x1, #0xf4d
   30758:	b	307f8 <get_python_format_unnamed_arg_count@@Base+0x10b30>
   3075c:	cmp	w9, #0x80
   30760:	b.eq	307f4 <get_python_format_unnamed_arg_count@@Base+0x10b2c>  // b.none
   30764:	cmp	x26, x27
   30768:	b.cs	30744 <get_python_format_unnamed_arg_count@@Base+0x10a7c>  // b.hs, b.nlast
   3076c:	ldrsb	w8, [x26]
   30770:	tbnz	w8, #31, 30784 <get_python_format_unnamed_arg_count@@Base+0x10abc>
   30774:	and	w8, w8, #0xff
   30778:	stur	w8, [x29, #-4]
   3077c:	mov	w0, #0x1                   	// #1
   30780:	b	30798 <get_python_format_unnamed_arg_count@@Base+0x10ad0>
   30784:	sub	x2, x27, x26
   30788:	sub	x0, x29, #0x4
   3078c:	mov	x1, x26
   30790:	bl	a820 <u8_mbtouc_aux@plt>
   30794:	ldur	w8, [x29, #-4]
   30798:	mov	x9, xzr
   3079c:	add	x26, x26, w0, sxtw
   307a0:	ldr	w10, [x21, x9]
   307a4:	cmp	w10, w8
   307a8:	b.hi	307bc <get_python_format_unnamed_arg_count@@Base+0x10af4>  // b.pmore
   307ac:	add	x10, x21, x9
   307b0:	ldr	w10, [x10, #4]
   307b4:	cmp	w8, w10
   307b8:	b.ls	30764 <get_python_format_unnamed_arg_count@@Base+0x10a9c>  // b.plast
   307bc:	add	x9, x9, #0x8
   307c0:	cmp	x9, #0x80
   307c4:	b.ne	307a0 <get_python_format_unnamed_arg_count@@Base+0x10ad8>  // b.any
   307c8:	mov	x9, xzr
   307cc:	ldr	w10, [x20, x9]
   307d0:	cmp	w10, w8
   307d4:	b.hi	307e8 <get_python_format_unnamed_arg_count@@Base+0x10b20>  // b.pmore
   307d8:	add	x10, x20, x9
   307dc:	ldr	w10, [x10, #4]
   307e0:	cmp	w8, w10
   307e4:	b.ls	30764 <get_python_format_unnamed_arg_count@@Base+0x10a9c>  // b.plast
   307e8:	add	x9, x9, #0x8
   307ec:	cmp	x9, #0x30
   307f0:	b.ne	307cc <get_python_format_unnamed_arg_count@@Base+0x10b04>  // b.any
   307f4:	mov	x1, x19
   307f8:	mov	x0, x24
   307fc:	bl	a360 <stpcpy@plt>
   30800:	cmp	x25, x28
   30804:	mov	x24, x0
   30808:	b.cc	30598 <get_python_format_unnamed_arg_count@@Base+0x108d0>  // b.lo, b.ul, b.last
   3080c:	adrp	x8, 3a000 <plural_table_size@@Base+0xc00>
   30810:	add	x8, x8, #0xf55
   30814:	ldr	x8, [x8]
   30818:	mov	w9, #0x7469                	// #29801
   3081c:	movk	w9, #0x3e, lsl #16
   30820:	mov	x0, x23
   30824:	stur	w9, [x24, #7]
   30828:	str	x8, [x24]
   3082c:	bl	a0d0 <strlen@plt>
   30830:	adrp	x2, 37000 <get_search_path@@Base+0xb4c>
   30834:	mov	x1, x0
   30838:	add	x2, x2, #0x1a2
   3083c:	mov	w4, #0x960                 	// #2400
   30840:	mov	x0, x23
   30844:	mov	x3, xzr
   30848:	bl	aba0 <xmlReadMemory@plt>
   3084c:	cbz	x0, 3089c <get_python_format_unnamed_arg_count@@Base+0x10bd4>
   30850:	mov	x24, x0
   30854:	mov	x0, x23
   30858:	bl	aa00 <free@plt>
   3085c:	mov	x0, x24
   30860:	bl	a2b0 <xmlFreeDoc@plt>
   30864:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   30868:	ldr	x8, [x8, #3944]
   3086c:	ldr	w9, [sp, #12]
   30870:	ldp	x0, x2, [sp, #16]
   30874:	ldur	x3, [x29, #-16]
   30878:	ldr	x8, [x8]
   3087c:	and	w1, w9, #0x1
   30880:	blr	x8
   30884:	cbz	x0, 308dc <get_python_format_unnamed_arg_count@@Base+0x10c14>
   30888:	mov	x19, x0
   3088c:	mov	w0, #0x8                   	// #8
   30890:	bl	a590 <xmalloc@plt>
   30894:	str	x19, [x0]
   30898:	b	308dc <get_python_format_unnamed_arg_count@@Base+0x10c14>
   3089c:	bl	a2d0 <xmlGetLastError@plt>
   308a0:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   308a4:	mov	x20, x0
   308a8:	add	x1, x1, #0xf60
   308ac:	mov	w2, #0x5                   	// #5
   308b0:	mov	x0, xzr
   308b4:	bl	acd0 <dcgettext@plt>
   308b8:	ldr	x1, [x20, #8]
   308bc:	bl	aa20 <xasprintf@plt>
   308c0:	ldur	x8, [x29, #-16]
   308c4:	str	x0, [x8]
   308c8:	mov	x0, x23
   308cc:	bl	aa00 <free@plt>
   308d0:	mov	x0, xzr
   308d4:	bl	a2b0 <xmlFreeDoc@plt>
   308d8:	mov	x0, xzr
   308dc:	ldp	x20, x19, [sp, #128]
   308e0:	ldp	x22, x21, [sp, #112]
   308e4:	ldp	x24, x23, [sp, #96]
   308e8:	ldp	x26, x25, [sp, #80]
   308ec:	ldp	x28, x27, [sp, #64]
   308f0:	ldp	x29, x30, [sp, #48]
   308f4:	add	sp, sp, #0x90
   308f8:	ret
   308fc:	stp	x29, x30, [sp, #-32]!
   30900:	str	x19, [sp, #16]
   30904:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   30908:	ldr	x8, [x8, #3944]
   3090c:	mov	x19, x0
   30910:	ldr	x0, [x0]
   30914:	mov	x29, sp
   30918:	ldr	x8, [x8, #8]
   3091c:	blr	x8
   30920:	mov	x0, x19
   30924:	ldr	x19, [sp, #16]
   30928:	ldp	x29, x30, [sp], #32
   3092c:	b	aa00 <free@plt>
   30930:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   30934:	ldr	x8, [x8, #3944]
   30938:	ldr	x0, [x0]
   3093c:	ldr	x1, [x8, #16]
   30940:	br	x1
   30944:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   30948:	ldr	x8, [x8, #3944]
   3094c:	ldr	x0, [x0]
   30950:	ldr	x1, [x1]
   30954:	and	w2, w2, #0x1
   30958:	ldr	x6, [x8, #32]
   3095c:	br	x6
   30960:	sub	sp, sp, #0x80
   30964:	stp	x29, x30, [sp, #32]
   30968:	stp	x28, x27, [sp, #48]
   3096c:	stp	x26, x25, [sp, #64]
   30970:	stp	x24, x23, [sp, #80]
   30974:	stp	x22, x21, [sp, #96]
   30978:	stp	x20, x19, [sp, #112]
   3097c:	ldrb	w8, [x0]
   30980:	add	x29, sp, #0x20
   30984:	cbz	w8, 30eb4 <get_python_format_unnamed_arg_count@@Base+0x111ec>
   30988:	mov	x28, #0x2889                	// #10377
   3098c:	mov	x24, x0
   30990:	mov	x20, #0x100000001           	// #4294967297
   30994:	movk	x28, #0x2001, lsl #16
   30998:	mov	x0, xzr
   3099c:	mov	w25, wzr
   309a0:	mov	w12, wzr
   309a4:	mov	w15, wzr
   309a8:	mov	w13, wzr
   309ac:	mov	w26, #0xa                   	// #10
   309b0:	mov	w27, #0x1                   	// #1
   309b4:	movk	x20, #0x1000, lsl #16
   309b8:	movk	x28, #0x8000, lsl #48
   309bc:	mov	x23, x24
   309c0:	stp	x3, x2, [sp, #8]
   309c4:	stur	x24, [x29, #-8]
   309c8:	and	w8, w8, #0xff
   309cc:	cmp	w8, #0x25
   309d0:	add	x8, x23, #0x1
   309d4:	b.ne	30a10 <get_python_format_unnamed_arg_count@@Base+0x10d48>  // b.any
   309d8:	cbz	x2, 309ec <get_python_format_unnamed_arg_count@@Base+0x10d24>
   309dc:	sub	x9, x23, x24
   309e0:	ldrb	w10, [x2, x9]
   309e4:	orr	w10, w10, #0x1
   309e8:	strb	w10, [x2, x9]
   309ec:	ldrb	w9, [x8]
   309f0:	add	w12, w12, #0x1
   309f4:	cmp	w9, #0x7c
   309f8:	b.eq	30a18 <get_python_format_unnamed_arg_count@@Base+0x10d50>  // b.none
   309fc:	cmp	w9, #0x25
   30a00:	b.ne	30a28 <get_python_format_unnamed_arg_count@@Base+0x10d60>  // b.any
   30a04:	add	x23, x23, #0x2
   30a08:	cbnz	x2, 30e28 <get_python_format_unnamed_arg_count@@Base+0x11160>
   30a0c:	b	30e3c <get_python_format_unnamed_arg_count@@Base+0x11174>
   30a10:	mov	x23, x8
   30a14:	b	30e3c <get_python_format_unnamed_arg_count@@Base+0x11174>
   30a18:	ldrb	w9, [x23, #2]!
   30a1c:	mov	w16, #0x1                   	// #1
   30a20:	mov	x8, x23
   30a24:	b	30a2c <get_python_format_unnamed_arg_count@@Base+0x10d64>
   30a28:	mov	w16, wzr
   30a2c:	subs	w10, w9, #0x30
   30a30:	mov	w19, wzr
   30a34:	b.eq	30aac <get_python_format_unnamed_arg_count@@Base+0x10de4>  // b.none
   30a38:	cmp	w10, #0x9
   30a3c:	b.hi	30aac <get_python_format_unnamed_arg_count@@Base+0x10de4>  // b.pmore
   30a40:	mov	w19, wzr
   30a44:	add	x23, x8, #0x1
   30a48:	mul	w10, w19, w26
   30a4c:	add	w10, w10, w9, uxtb
   30a50:	ldrb	w9, [x23], #1
   30a54:	sub	w19, w10, #0x30
   30a58:	sub	w11, w9, #0x30
   30a5c:	cmp	w11, #0xa
   30a60:	b.cc	30a48 <get_python_format_unnamed_arg_count@@Base+0x10d80>  // b.lo, b.ul, b.last
   30a64:	cmp	w9, #0x25
   30a68:	cset	w10, eq  // eq = none
   30a6c:	cmp	w9, #0x24
   30a70:	b.eq	30a88 <get_python_format_unnamed_arg_count@@Base+0x10dc0>  // b.none
   30a74:	eor	w11, w16, #0x1
   30a78:	and	w10, w10, w11
   30a7c:	cbnz	w10, 30a88 <get_python_format_unnamed_arg_count@@Base+0x10dc0>
   30a80:	mov	w19, wzr
   30a84:	b	30aac <get_python_format_unnamed_arg_count@@Base+0x10de4>
   30a88:	mov	x21, x0
   30a8c:	cbz	w19, 31150 <get_python_format_unnamed_arg_count@@Base+0x11488>
   30a90:	cmp	w9, #0x25
   30a94:	b.ne	30aa4 <get_python_format_unnamed_arg_count@@Base+0x10ddc>  // b.any
   30a98:	mov	w22, #0x5                   	// #5
   30a9c:	mov	x0, x21
   30aa0:	b	30dc4 <get_python_format_unnamed_arg_count@@Base+0x110fc>
   30aa4:	mov	x8, x23
   30aa8:	mov	x0, x21
   30aac:	add	x22, x8, #0x1
   30ab0:	add	x24, x8, #0x2
   30ab4:	ldurb	w8, [x22, #-1]
   30ab8:	sub	w9, w8, #0x20
   30abc:	cmp	w9, #0x3f
   30ac0:	b.hi	30ae4 <get_python_format_unnamed_arg_count@@Base+0x10e1c>  // b.pmore
   30ac4:	lsl	x10, x27, x9
   30ac8:	tst	x10, x28
   30acc:	b.eq	30adc <get_python_format_unnamed_arg_count@@Base+0x10e14>  // b.none
   30ad0:	add	x22, x22, #0x1
   30ad4:	add	x24, x24, #0x1
   30ad8:	b	30ab4 <get_python_format_unnamed_arg_count@@Base+0x10dec>
   30adc:	cmp	x9, #0xa
   30ae0:	b.eq	30b18 <get_python_format_unnamed_arg_count@@Base+0x10e50>  // b.none
   30ae4:	cmp	w8, #0x6c
   30ae8:	b.eq	30ad0 <get_python_format_unnamed_arg_count@@Base+0x10e08>  // b.none
   30aec:	cmp	w8, #0x68
   30af0:	b.eq	30ad0 <get_python_format_unnamed_arg_count@@Base+0x10e08>  // b.none
   30af4:	sub	w9, w8, #0x30
   30af8:	cmp	w9, #0x9
   30afc:	sub	x24, x22, #0x1
   30b00:	b.hi	30bf4 <get_python_format_unnamed_arg_count@@Base+0x10f2c>  // b.pmore
   30b04:	ldrb	w8, [x24, #1]!
   30b08:	sub	w9, w8, #0x30
   30b0c:	cmp	w9, #0xa
   30b10:	b.cc	30b04 <get_python_format_unnamed_arg_count@@Base+0x10e3c>  // b.lo, b.ul, b.last
   30b14:	b	30bf4 <get_python_format_unnamed_arg_count@@Base+0x10f2c>
   30b18:	ldrb	w8, [x22]
   30b1c:	sub	w9, w8, #0x30
   30b20:	cmp	w9, #0x9
   30b24:	b.hi	30ba4 <get_python_format_unnamed_arg_count@@Base+0x10edc>  // b.pmore
   30b28:	mov	w21, wzr
   30b2c:	mul	w9, w21, w26
   30b30:	add	w9, w9, w8, uxtb
   30b34:	ldrb	w8, [x24], #1
   30b38:	sub	w21, w9, #0x30
   30b3c:	sub	w10, w8, #0x30
   30b40:	cmp	w10, #0xa
   30b44:	b.cc	30b2c <get_python_format_unnamed_arg_count@@Base+0x10e64>  // b.lo, b.ul, b.last
   30b48:	cmp	w8, #0x24
   30b4c:	b.ne	30ba4 <get_python_format_unnamed_arg_count@@Base+0x10edc>  // b.any
   30b50:	cbz	w21, 31224 <get_python_format_unnamed_arg_count@@Base+0x1155c>
   30b54:	cbnz	w25, 31204 <get_python_format_unnamed_arg_count@@Base+0x1153c>
   30b58:	cmp	w13, w15
   30b5c:	b.ne	30b90 <get_python_format_unnamed_arg_count@@Base+0x10ec8>  // b.any
   30b60:	mov	w23, #0x1                   	// #1
   30b64:	bfi	w23, w15, #1, #31
   30b68:	lsl	x1, x23, #3
   30b6c:	str	w12, [sp, #4]
   30b70:	mov	w25, w15
   30b74:	mov	w22, w16
   30b78:	bl	a460 <xrealloc@plt>
   30b7c:	ldr	w12, [sp, #4]
   30b80:	ldr	x2, [sp, #16]
   30b84:	mov	w16, w22
   30b88:	mov	w15, w25
   30b8c:	mov	x13, x23
   30b90:	add	x8, x0, w15, uxtw #3
   30b94:	mov	w9, wzr
   30b98:	stp	w21, w27, [x8]
   30b9c:	add	w15, w15, #0x1
   30ba0:	b	30bec <get_python_format_unnamed_arg_count@@Base+0x10f24>
   30ba4:	cbnz	w15, 310e4 <get_python_format_unnamed_arg_count@@Base+0x1141c>
   30ba8:	cmp	w13, w25
   30bac:	b.ne	30bd8 <get_python_format_unnamed_arg_count@@Base+0x10f10>  // b.any
   30bb0:	mov	w23, #0x1                   	// #1
   30bb4:	bfi	w23, w25, #1, #31
   30bb8:	lsl	x1, x23, #3
   30bbc:	mov	w21, w12
   30bc0:	mov	w24, w16
   30bc4:	bl	a460 <xrealloc@plt>
   30bc8:	ldr	x2, [sp, #16]
   30bcc:	mov	w16, w24
   30bd0:	mov	x13, x23
   30bd4:	mov	w12, w21
   30bd8:	mov	w15, wzr
   30bdc:	add	w9, w25, #0x1
   30be0:	add	x8, x0, w25, uxtw #3
   30be4:	mov	x24, x22
   30be8:	stp	w9, w27, [x8]
   30bec:	ldrb	w8, [x24]
   30bf0:	mov	w25, w9
   30bf4:	cmp	w8, #0x2e
   30bf8:	b.ne	30d0c <get_python_format_unnamed_arg_count@@Base+0x11044>  // b.any
   30bfc:	mov	x22, x24
   30c00:	ldrb	w8, [x22, #1]!
   30c04:	cmp	w8, #0x2a
   30c08:	b.ne	30ca0 <get_python_format_unnamed_arg_count@@Base+0x10fd8>  // b.any
   30c0c:	mov	x23, x24
   30c10:	ldrb	w8, [x23, #2]!
   30c14:	sub	w9, w8, #0x30
   30c18:	cmp	w9, #0x9
   30c1c:	b.hi	30cc4 <get_python_format_unnamed_arg_count@@Base+0x10ffc>  // b.pmore
   30c20:	mov	w21, wzr
   30c24:	add	x24, x24, #0x3
   30c28:	mul	w9, w21, w26
   30c2c:	add	w9, w9, w8, uxtb
   30c30:	ldrb	w8, [x24], #1
   30c34:	sub	w21, w9, #0x30
   30c38:	sub	w10, w8, #0x30
   30c3c:	cmp	w10, #0xa
   30c40:	b.cc	30c28 <get_python_format_unnamed_arg_count@@Base+0x10f60>  // b.lo, b.ul, b.last
   30c44:	cmp	w8, #0x24
   30c48:	b.ne	30cc4 <get_python_format_unnamed_arg_count@@Base+0x10ffc>  // b.any
   30c4c:	cbz	w21, 31238 <get_python_format_unnamed_arg_count@@Base+0x11570>
   30c50:	cbnz	w25, 31204 <get_python_format_unnamed_arg_count@@Base+0x1153c>
   30c54:	cmp	w13, w15
   30c58:	b.ne	30c8c <get_python_format_unnamed_arg_count@@Base+0x10fc4>  // b.any
   30c5c:	mov	w22, #0x1                   	// #1
   30c60:	bfi	w22, w13, #1, #31
   30c64:	lsl	x1, x22, #3
   30c68:	str	w12, [sp, #4]
   30c6c:	mov	w25, w15
   30c70:	mov	w23, w16
   30c74:	bl	a460 <xrealloc@plt>
   30c78:	ldr	w12, [sp, #4]
   30c7c:	ldr	x2, [sp, #16]
   30c80:	mov	w16, w23
   30c84:	mov	w15, w25
   30c88:	mov	w13, w22
   30c8c:	add	x8, x0, w15, uxtw #3
   30c90:	mov	w25, wzr
   30c94:	stp	w21, w27, [x8]
   30c98:	add	w15, w15, #0x1
   30c9c:	b	30d0c <get_python_format_unnamed_arg_count@@Base+0x11044>
   30ca0:	sub	w8, w8, #0x30
   30ca4:	cmp	w8, #0x9
   30ca8:	b.hi	30cbc <get_python_format_unnamed_arg_count@@Base+0x10ff4>  // b.pmore
   30cac:	ldrb	w8, [x22, #1]!
   30cb0:	sub	w8, w8, #0x30
   30cb4:	cmp	w8, #0xa
   30cb8:	b.cc	30cac <get_python_format_unnamed_arg_count@@Base+0x10fe4>  // b.lo, b.ul, b.last
   30cbc:	mov	x24, x22
   30cc0:	b	30d0c <get_python_format_unnamed_arg_count@@Base+0x11044>
   30cc4:	cbnz	w15, 311d0 <get_python_format_unnamed_arg_count@@Base+0x11508>
   30cc8:	cmp	w13, w25
   30ccc:	b.ne	30cf8 <get_python_format_unnamed_arg_count@@Base+0x11030>  // b.any
   30cd0:	mov	w21, #0x1                   	// #1
   30cd4:	bfi	w21, w13, #1, #31
   30cd8:	lsl	x1, x21, #3
   30cdc:	mov	w22, w12
   30ce0:	mov	w24, w16
   30ce4:	bl	a460 <xrealloc@plt>
   30ce8:	ldr	x2, [sp, #16]
   30cec:	mov	w16, w24
   30cf0:	mov	w12, w22
   30cf4:	mov	w13, w21
   30cf8:	add	x8, x0, w25, uxtw #3
   30cfc:	add	w25, w25, #0x1
   30d00:	mov	w15, wzr
   30d04:	stp	w25, w27, [x8]
   30d08:	mov	x24, x23
   30d0c:	ldrb	w8, [x24]
   30d10:	sub	w9, w8, #0x4c
   30d14:	cmp	w9, #0x20
   30d18:	b.hi	30d30 <get_python_format_unnamed_arg_count@@Base+0x11068>  // b.pmore
   30d1c:	lsl	x9, x27, x9
   30d20:	tst	x9, x20
   30d24:	b.eq	30d30 <get_python_format_unnamed_arg_count@@Base+0x11068>  // b.none
   30d28:	add	x24, x24, #0x1
   30d2c:	b	30d0c <get_python_format_unnamed_arg_count@@Base+0x11044>
   30d30:	cmp	w8, #0x46
   30d34:	add	x23, x24, #0x1
   30d38:	b.le	30d68 <get_python_format_unnamed_arg_count@@Base+0x110a0>
   30d3c:	sub	w9, w8, #0x53
   30d40:	cmp	w9, #0x29
   30d44:	b.hi	30d94 <get_python_format_unnamed_arg_count@@Base+0x110cc>  // b.pmore
   30d48:	adrp	x14, 3b000 <plural_table_size@@Base+0x1c00>
   30d4c:	add	x14, x14, #0x28
   30d50:	adr	x10, 30d60 <get_python_format_unnamed_arg_count@@Base+0x11098>
   30d54:	ldrb	w11, [x14, x9]
   30d58:	add	x10, x10, x11, lsl #2
   30d5c:	br	x10
   30d60:	mov	w22, #0x1                   	// #1
   30d64:	b	30da0 <get_python_format_unnamed_arg_count@@Base+0x110d8>
   30d68:	cmp	w8, #0x43
   30d6c:	b.eq	30d7c <get_python_format_unnamed_arg_count@@Base+0x110b4>  // b.none
   30d70:	cmp	w8, #0x45
   30d74:	b.eq	30d9c <get_python_format_unnamed_arg_count@@Base+0x110d4>  // b.none
   30d78:	b	30fdc <get_python_format_unnamed_arg_count@@Base+0x11314>
   30d7c:	mov	w22, #0x3                   	// #3
   30d80:	b	30da0 <get_python_format_unnamed_arg_count@@Base+0x110d8>
   30d84:	mov	w22, #0x5                   	// #5
   30d88:	b	30da0 <get_python_format_unnamed_arg_count@@Base+0x110d8>
   30d8c:	mov	w22, wzr
   30d90:	b	30da0 <get_python_format_unnamed_arg_count@@Base+0x110d8>
   30d94:	cmp	w8, #0x47
   30d98:	b.ne	31044 <get_python_format_unnamed_arg_count@@Base+0x1137c>  // b.any
   30d9c:	mov	w22, #0x2                   	// #2
   30da0:	cbz	w16, 30db8 <get_python_format_unnamed_arg_count@@Base+0x110f0>
   30da4:	ldrb	w8, [x23]
   30da8:	cmp	w8, #0x7c
   30dac:	b.ne	3109c <get_python_format_unnamed_arg_count@@Base+0x113d4>  // b.any
   30db0:	mov	x24, x23
   30db4:	add	x23, x24, #0x1
   30db8:	ldur	x24, [x29, #-8]
   30dbc:	cbz	w22, 30e24 <get_python_format_unnamed_arg_count@@Base+0x1115c>
   30dc0:	cbz	w19, 30e48 <get_python_format_unnamed_arg_count@@Base+0x11180>
   30dc4:	cbnz	w25, 31014 <get_python_format_unnamed_arg_count@@Base+0x1134c>
   30dc8:	cmp	w13, w15
   30dcc:	b.ne	30e14 <get_python_format_unnamed_arg_count@@Base+0x1114c>  // b.any
   30dd0:	mov	w21, #0x1                   	// #1
   30dd4:	bfi	w21, w13, #1, #31
   30dd8:	lsl	x1, x21, #3
   30ddc:	mov	w25, w12
   30de0:	mov	w28, w22
   30de4:	mov	x22, x24
   30de8:	mov	w24, w15
   30dec:	bl	a460 <xrealloc@plt>
   30df0:	ldr	x2, [sp, #16]
   30df4:	mov	w15, w24
   30df8:	mov	x24, x22
   30dfc:	mov	w22, w28
   30e00:	mov	x28, #0x2889                	// #10377
   30e04:	movk	x28, #0x2001, lsl #16
   30e08:	movk	x28, #0x8000, lsl #48
   30e0c:	mov	w12, w25
   30e10:	mov	w13, w21
   30e14:	mov	w25, wzr
   30e18:	add	x8, x0, w15, uxtw #3
   30e1c:	add	w15, w15, #0x1
   30e20:	stp	w19, w22, [x8]
   30e24:	cbz	x2, 30e3c <get_python_format_unnamed_arg_count@@Base+0x11174>
   30e28:	sub	x8, x23, x24
   30e2c:	add	x8, x8, x2
   30e30:	ldurb	w9, [x8, #-1]
   30e34:	orr	w9, w9, #0x2
   30e38:	sturb	w9, [x8, #-1]
   30e3c:	ldrb	w8, [x23]
   30e40:	cbnz	w8, 309c8 <get_python_format_unnamed_arg_count@@Base+0x10d00>
   30e44:	b	30ec8 <get_python_format_unnamed_arg_count@@Base+0x11200>
   30e48:	cbnz	w15, 31014 <get_python_format_unnamed_arg_count@@Base+0x1134c>
   30e4c:	cmp	w13, w25
   30e50:	b.ne	30e74 <get_python_format_unnamed_arg_count@@Base+0x111ac>  // b.any
   30e54:	mov	w19, #0x1                   	// #1
   30e58:	bfi	w19, w13, #1, #31
   30e5c:	lsl	x1, x19, #3
   30e60:	mov	w21, w12
   30e64:	bl	a460 <xrealloc@plt>
   30e68:	ldr	x2, [sp, #16]
   30e6c:	mov	w12, w21
   30e70:	mov	w13, w19
   30e74:	add	x8, x0, w25, uxtw #3
   30e78:	add	w25, w25, #0x1
   30e7c:	mov	w15, wzr
   30e80:	stp	w25, w22, [x8]
   30e84:	cbnz	x2, 30e28 <get_python_format_unnamed_arg_count@@Base+0x11160>
   30e88:	b	30e3c <get_python_format_unnamed_arg_count@@Base+0x11174>
   30e8c:	ldrb	w8, [x23]
   30e90:	cbz	w8, 312b0 <get_python_format_unnamed_arg_count@@Base+0x115e8>
   30e94:	mov	w22, wzr
   30e98:	add	x23, x24, #0x2
   30e9c:	b	30da0 <get_python_format_unnamed_arg_count@@Base+0x110d8>
   30ea0:	mov	w22, #0x4                   	// #4
   30ea4:	b	30da0 <get_python_format_unnamed_arg_count@@Base+0x110d8>
   30ea8:	tbz	w16, #0, 31050 <get_python_format_unnamed_arg_count@@Base+0x11388>
   30eac:	mov	w22, #0x5                   	// #5
   30eb0:	b	30db4 <get_python_format_unnamed_arg_count@@Base+0x110ec>
   30eb4:	mov	x0, xzr
   30eb8:	mov	w27, wzr
   30ebc:	mov	w28, wzr
   30ec0:	mov	w25, wzr
   30ec4:	b	31080 <get_python_format_unnamed_arg_count@@Base+0x113b8>
   30ec8:	cbz	w25, 30ed8 <get_python_format_unnamed_arg_count@@Base+0x11210>
   30ecc:	mov	w27, w12
   30ed0:	mov	x28, x13
   30ed4:	b	31080 <get_python_format_unnamed_arg_count@@Base+0x113b8>
   30ed8:	mov	x28, x13
   30edc:	mov	w27, w12
   30ee0:	cmp	w15, #0x2
   30ee4:	b.cc	3107c <get_python_format_unnamed_arg_count@@Base+0x113b4>  // b.lo, b.ul, b.last
   30ee8:	mov	w21, w15
   30eec:	adrp	x3, 31000 <get_python_format_unnamed_arg_count@@Base+0x11338>
   30ef0:	add	x3, x3, #0x4e0
   30ef4:	mov	w2, #0x8                   	// #8
   30ef8:	mov	x1, x21
   30efc:	mov	x24, x0
   30f00:	bl	a2f0 <qsort@plt>
   30f04:	ldr	x26, [sp, #8]
   30f08:	adrp	x22, 39000 <get_search_path@@Base+0x2b4c>
   30f0c:	mov	x0, x24
   30f10:	mov	x19, xzr
   30f14:	mov	w8, wzr
   30f18:	mov	w25, wzr
   30f1c:	add	x22, x22, #0x8bd
   30f20:	mov	x20, x24
   30f24:	cbz	w25, 30f7c <get_python_format_unnamed_arg_count@@Base+0x112b4>
   30f28:	sub	w10, w25, #0x1
   30f2c:	lsl	x11, x10, #3
   30f30:	ldr	w9, [x20]
   30f34:	ldr	w11, [x0, x11]
   30f38:	cmp	w9, w11
   30f3c:	b.ne	30f7c <get_python_format_unnamed_arg_count@@Base+0x112b4>  // b.any
   30f40:	add	x23, x0, x10, lsl #3
   30f44:	ldr	w9, [x20, #4]
   30f48:	ldr	w10, [x23, #4]!
   30f4c:	cmp	w9, w10
   30f50:	b.eq	30fc0 <get_python_format_unnamed_arg_count@@Base+0x112f8>  // b.none
   30f54:	cmp	w10, #0x5
   30f58:	b.eq	30fc0 <get_python_format_unnamed_arg_count@@Base+0x112f8>  // b.none
   30f5c:	cmp	w9, #0x5
   30f60:	cset	w9, eq  // eq = none
   30f64:	cset	w11, ne  // ne = any
   30f68:	orr	w12, w8, w9
   30f6c:	csel	w9, w10, wzr, eq  // eq = none
   30f70:	tbz	w12, #0, 30f98 <get_python_format_unnamed_arg_count@@Base+0x112d0>
   30f74:	orr	w8, w8, w11
   30f78:	b	30fc0 <get_python_format_unnamed_arg_count@@Base+0x112f8>
   30f7c:	cmp	x19, w25, uxtw
   30f80:	b.ls	30f90 <get_python_format_unnamed_arg_count@@Base+0x112c8>  // b.plast
   30f84:	ldr	x9, [x20]
   30f88:	mov	w10, w25
   30f8c:	str	x9, [x0, x10, lsl #3]
   30f90:	add	w25, w25, #0x1
   30f94:	b	30fc4 <get_python_format_unnamed_arg_count@@Base+0x112fc>
   30f98:	mov	w2, #0x5                   	// #5
   30f9c:	mov	x0, xzr
   30fa0:	mov	x1, x22
   30fa4:	bl	acd0 <dcgettext@plt>
   30fa8:	ldr	w1, [x20]
   30fac:	bl	aa20 <xasprintf@plt>
   30fb0:	mov	w9, wzr
   30fb4:	str	x0, [x26]
   30fb8:	mov	x0, x24
   30fbc:	mov	w8, #0x1                   	// #1
   30fc0:	str	w9, [x23]
   30fc4:	add	x19, x19, #0x1
   30fc8:	cmp	x21, x19
   30fcc:	add	x20, x20, #0x8
   30fd0:	b.ne	30f24 <get_python_format_unnamed_arg_count@@Base+0x1125c>  // b.any
   30fd4:	tbz	w8, #0, 31080 <get_python_format_unnamed_arg_count@@Base+0x113b8>
   30fd8:	b	31284 <get_python_format_unnamed_arg_count@@Base+0x115bc>
   30fdc:	cbnz	w8, 31044 <get_python_format_unnamed_arg_count@@Base+0x1137c>
   30fe0:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   30fe4:	mov	x19, x0
   30fe8:	add	x1, x1, #0x7e0
   30fec:	mov	w2, #0x5                   	// #5
   30ff0:	mov	x0, xzr
   30ff4:	bl	acd0 <dcgettext@plt>
   30ff8:	bl	a5a0 <xstrdup@plt>
   30ffc:	ldp	x8, x9, [sp, #8]
   31000:	str	x0, [x8]
   31004:	cbz	x9, 31280 <get_python_format_unnamed_arg_count@@Base+0x115b8>
   31008:	ldur	x8, [x29, #-8]
   3100c:	sub	x8, x24, x8
   31010:	b	310d0 <get_python_format_unnamed_arg_count@@Base+0x11408>
   31014:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   31018:	mov	x19, x0
   3101c:	add	x1, x1, #0x630
   31020:	mov	w2, #0x5                   	// #5
   31024:	mov	x0, xzr
   31028:	bl	acd0 <dcgettext@plt>
   3102c:	bl	a5a0 <xstrdup@plt>
   31030:	ldp	x8, x9, [sp, #8]
   31034:	str	x0, [x8]
   31038:	cbz	x9, 31280 <get_python_format_unnamed_arg_count@@Base+0x115b8>
   3103c:	sub	x8, x23, x24
   31040:	b	310d0 <get_python_format_unnamed_arg_count@@Base+0x11408>
   31044:	sub	w8, w8, #0x20
   31048:	cmp	w8, #0x5e
   3104c:	b.hi	31114 <get_python_format_unnamed_arg_count@@Base+0x1144c>  // b.pmore
   31050:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   31054:	mov	x19, x0
   31058:	add	x1, x1, #0x80e
   3105c:	mov	w2, #0x5                   	// #5
   31060:	mov	x0, xzr
   31064:	mov	w20, w12
   31068:	bl	acd0 <dcgettext@plt>
   3106c:	ldrb	w2, [x24]
   31070:	mov	w1, w20
   31074:	bl	aa20 <xasprintf@plt>
   31078:	b	31138 <get_python_format_unnamed_arg_count@@Base+0x11470>
   3107c:	mov	w25, w15
   31080:	mov	x19, x0
   31084:	mov	w0, #0x18                  	// #24
   31088:	bl	a590 <xmalloc@plt>
   3108c:	stp	w27, w25, [x0]
   31090:	str	w28, [x0, #8]
   31094:	str	x19, [x0, #16]
   31098:	b	31290 <get_python_format_unnamed_arg_count@@Base+0x115c8>
   3109c:	mov	x19, x0
   310a0:	cbnz	w8, 31198 <get_python_format_unnamed_arg_count@@Base+0x114d0>
   310a4:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   310a8:	add	x1, x1, #0x7e0
   310ac:	mov	w2, #0x5                   	// #5
   310b0:	mov	x0, xzr
   310b4:	bl	acd0 <dcgettext@plt>
   310b8:	bl	a5a0 <xstrdup@plt>
   310bc:	ldp	x8, x9, [sp, #8]
   310c0:	str	x0, [x8]
   310c4:	cbz	x9, 31280 <get_python_format_unnamed_arg_count@@Base+0x115b8>
   310c8:	ldur	x8, [x29, #-8]
   310cc:	sub	x8, x23, x8
   310d0:	add	x8, x8, x9
   310d4:	ldurb	w9, [x8, #-1]
   310d8:	orr	w9, w9, #0x4
   310dc:	sturb	w9, [x8, #-1]
   310e0:	b	31280 <get_python_format_unnamed_arg_count@@Base+0x115b8>
   310e4:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   310e8:	mov	x19, x0
   310ec:	add	x1, x1, #0x630
   310f0:	mov	w2, #0x5                   	// #5
   310f4:	mov	x0, xzr
   310f8:	bl	acd0 <dcgettext@plt>
   310fc:	bl	a5a0 <xstrdup@plt>
   31100:	ldp	x8, x10, [sp, #8]
   31104:	str	x0, [x8]
   31108:	cbz	x10, 31280 <get_python_format_unnamed_arg_count@@Base+0x115b8>
   3110c:	sub	x8, x22, #0x1
   31110:	b	3126c <get_python_format_unnamed_arg_count@@Base+0x115a4>
   31114:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   31118:	mov	x19, x0
   3111c:	add	x1, x1, #0x862
   31120:	mov	w2, #0x5                   	// #5
   31124:	mov	x0, xzr
   31128:	mov	w20, w12
   3112c:	bl	acd0 <dcgettext@plt>
   31130:	mov	w1, w20
   31134:	bl	aa20 <xasprintf@plt>
   31138:	ldp	x8, x10, [sp, #8]
   3113c:	str	x0, [x8]
   31140:	cbz	x10, 31280 <get_python_format_unnamed_arg_count@@Base+0x115b8>
   31144:	ldur	x8, [x29, #-8]
   31148:	sub	x8, x24, x8
   3114c:	b	31274 <get_python_format_unnamed_arg_count@@Base+0x115ac>
   31150:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   31154:	add	x1, x1, #0x58e
   31158:	mov	w2, #0x5                   	// #5
   3115c:	mov	x0, xzr
   31160:	mov	w19, w12
   31164:	bl	acd0 <dcgettext@plt>
   31168:	mov	w1, w19
   3116c:	bl	aa20 <xasprintf@plt>
   31170:	ldp	x8, x10, [sp, #8]
   31174:	str	x0, [x8]
   31178:	cbz	x10, 31190 <get_python_format_unnamed_arg_count@@Base+0x114c8>
   3117c:	sub	x8, x23, #0x1
   31180:	sub	x8, x8, x24
   31184:	ldrb	w9, [x10, x8]
   31188:	orr	w9, w9, #0x4
   3118c:	strb	w9, [x10, x8]
   31190:	mov	x0, x21
   31194:	b	31284 <get_python_format_unnamed_arg_count@@Base+0x115bc>
   31198:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   3119c:	add	x1, x1, #0x52
   311a0:	mov	w2, #0x5                   	// #5
   311a4:	mov	x0, xzr
   311a8:	mov	w20, w12
   311ac:	bl	acd0 <dcgettext@plt>
   311b0:	mov	w1, w20
   311b4:	bl	aa20 <xasprintf@plt>
   311b8:	ldp	x8, x10, [sp, #8]
   311bc:	str	x0, [x8]
   311c0:	cbz	x10, 31280 <get_python_format_unnamed_arg_count@@Base+0x115b8>
   311c4:	ldur	x8, [x29, #-8]
   311c8:	sub	x8, x23, x8
   311cc:	b	31274 <get_python_format_unnamed_arg_count@@Base+0x115ac>
   311d0:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   311d4:	mov	x19, x0
   311d8:	add	x1, x1, #0x630
   311dc:	mov	w2, #0x5                   	// #5
   311e0:	mov	x0, xzr
   311e4:	bl	acd0 <dcgettext@plt>
   311e8:	bl	a5a0 <xstrdup@plt>
   311ec:	ldp	x8, x10, [sp, #8]
   311f0:	str	x0, [x8]
   311f4:	ldur	x8, [x29, #-8]
   311f8:	cbz	x10, 31280 <get_python_format_unnamed_arg_count@@Base+0x115b8>
   311fc:	sub	x8, x22, x8
   31200:	b	31274 <get_python_format_unnamed_arg_count@@Base+0x115ac>
   31204:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   31208:	mov	x19, x0
   3120c:	add	x1, x1, #0x630
   31210:	mov	w2, #0x5                   	// #5
   31214:	mov	x0, xzr
   31218:	bl	acd0 <dcgettext@plt>
   3121c:	bl	a5a0 <xstrdup@plt>
   31220:	b	3125c <get_python_format_unnamed_arg_count@@Base+0x11594>
   31224:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   31228:	mov	x19, x0
   3122c:	mov	w20, w12
   31230:	add	x1, x1, #0x5db
   31234:	b	31248 <get_python_format_unnamed_arg_count@@Base+0x11580>
   31238:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   3123c:	mov	x19, x0
   31240:	mov	w20, w12
   31244:	add	x1, x1, #0x6a6
   31248:	mov	w2, #0x5                   	// #5
   3124c:	mov	x0, xzr
   31250:	bl	acd0 <dcgettext@plt>
   31254:	mov	w1, w20
   31258:	bl	aa20 <xasprintf@plt>
   3125c:	ldp	x8, x10, [sp, #8]
   31260:	str	x0, [x8]
   31264:	cbz	x10, 31280 <get_python_format_unnamed_arg_count@@Base+0x115b8>
   31268:	sub	x8, x24, #0x1
   3126c:	ldur	x9, [x29, #-8]
   31270:	sub	x8, x8, x9
   31274:	ldrb	w9, [x10, x8]
   31278:	orr	w9, w9, #0x4
   3127c:	strb	w9, [x10, x8]
   31280:	mov	x0, x19
   31284:	cbz	x0, 31290 <get_python_format_unnamed_arg_count@@Base+0x115c8>
   31288:	bl	aa00 <free@plt>
   3128c:	mov	x0, xzr
   31290:	ldp	x20, x19, [sp, #112]
   31294:	ldp	x22, x21, [sp, #96]
   31298:	ldp	x24, x23, [sp, #80]
   3129c:	ldp	x26, x25, [sp, #64]
   312a0:	ldp	x28, x27, [sp, #48]
   312a4:	ldp	x29, x30, [sp, #32]
   312a8:	add	sp, sp, #0x80
   312ac:	ret
   312b0:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   312b4:	mov	x19, x0
   312b8:	add	x1, x1, #0x7e0
   312bc:	mov	w2, #0x5                   	// #5
   312c0:	mov	x0, xzr
   312c4:	bl	acd0 <dcgettext@plt>
   312c8:	bl	a5a0 <xstrdup@plt>
   312cc:	b	31138 <get_python_format_unnamed_arg_count@@Base+0x11470>
   312d0:	stp	x29, x30, [sp, #-32]!
   312d4:	str	x19, [sp, #16]
   312d8:	mov	x19, x0
   312dc:	ldr	x0, [x0, #16]
   312e0:	mov	x29, sp
   312e4:	cbz	x0, 312ec <get_python_format_unnamed_arg_count@@Base+0x11624>
   312e8:	bl	aa00 <free@plt>
   312ec:	mov	x0, x19
   312f0:	ldr	x19, [sp, #16]
   312f4:	ldp	x29, x30, [sp], #32
   312f8:	b	aa00 <free@plt>
   312fc:	ldr	w0, [x0]
   31300:	ret
   31304:	stp	x29, x30, [sp, #-80]!
   31308:	stp	x24, x23, [sp, #32]
   3130c:	stp	x22, x21, [sp, #48]
   31310:	stp	x20, x19, [sp, #64]
   31314:	ldr	w9, [x0, #4]
   31318:	ldr	w8, [x1, #4]
   3131c:	str	x25, [sp, #16]
   31320:	mov	x29, sp
   31324:	cmn	w9, w8
   31328:	b.ne	31334 <get_python_format_unnamed_arg_count@@Base+0x1166c>  // b.any
   3132c:	mov	w0, wzr
   31330:	b	314c8 <get_python_format_unnamed_arg_count@@Base+0x11800>
   31334:	mov	x20, x5
   31338:	mov	x21, x4
   3133c:	mov	x19, x3
   31340:	mov	x22, x1
   31344:	mov	x23, x0
   31348:	orr	w10, w8, w9
   3134c:	cbz	w10, 313c8 <get_python_format_unnamed_arg_count@@Base+0x11700>
   31350:	cmp	w8, #0x0
   31354:	cset	w11, ne  // ne = any
   31358:	cmp	w9, #0x0
   3135c:	mov	x10, xzr
   31360:	mov	x24, xzr
   31364:	mov	w25, wzr
   31368:	cset	w12, ne  // ne = any
   3136c:	tbz	w12, #0, 31428 <get_python_format_unnamed_arg_count@@Base+0x11760>
   31370:	tbz	w11, #0, 31398 <get_python_format_unnamed_arg_count@@Base+0x116d0>
   31374:	ldr	x11, [x23, #16]
   31378:	ldr	x12, [x22, #16]
   3137c:	mov	w13, w25
   31380:	lsl	x13, x13, #3
   31384:	ldr	w11, [x11, x10]
   31388:	ldr	w12, [x12, x13]
   3138c:	cmp	w11, w12
   31390:	b.hi	31428 <get_python_format_unnamed_arg_count@@Base+0x11760>  // b.pmore
   31394:	b.cs	313a0 <get_python_format_unnamed_arg_count@@Base+0x116d8>  // b.hs, b.nlast
   31398:	tbz	w2, #0, 313a4 <get_python_format_unnamed_arg_count@@Base+0x116dc>
   3139c:	b	31460 <get_python_format_unnamed_arg_count@@Base+0x11798>
   313a0:	add	w25, w25, #0x1
   313a4:	add	x24, x24, #0x1
   313a8:	cmp	x24, x9
   313ac:	cset	w12, cc  // cc = lo, ul, last
   313b0:	cmp	w25, w8
   313b4:	cset	w11, cc  // cc = lo, ul, last
   313b8:	add	x10, x10, #0x8
   313bc:	b.cc	3136c <get_python_format_unnamed_arg_count@@Base+0x116a4>  // b.lo, b.ul, b.last
   313c0:	cmp	x24, x9
   313c4:	b.cc	3136c <get_python_format_unnamed_arg_count@@Base+0x116a4>  // b.lo, b.ul, b.last
   313c8:	cbz	w8, 3132c <get_python_format_unnamed_arg_count@@Base+0x11664>
   313cc:	ldr	x9, [x23, #16]
   313d0:	ldr	x10, [x22, #16]
   313d4:	mov	w12, wzr
   313d8:	mov	w11, wzr
   313dc:	mov	w12, w12
   313e0:	mov	w23, w11
   313e4:	lsl	x13, x12, #3
   313e8:	lsl	x14, x23, #3
   313ec:	ldr	w13, [x9, x13]
   313f0:	ldr	w14, [x10, x14]
   313f4:	cmp	w13, w14
   313f8:	b.ne	31418 <get_python_format_unnamed_arg_count@@Base+0x11750>  // b.any
   313fc:	add	x13, x9, x12, lsl #3
   31400:	add	x14, x10, x23, lsl #3
   31404:	ldr	w13, [x13, #4]
   31408:	ldr	w14, [x14, #4]
   3140c:	cmp	w13, w14
   31410:	b.ne	31494 <get_python_format_unnamed_arg_count@@Base+0x117cc>  // b.any
   31414:	add	w11, w11, #0x1
   31418:	cmp	w11, w8
   3141c:	add	w12, w12, #0x1
   31420:	b.cc	313dc <get_python_format_unnamed_arg_count@@Base+0x11714>  // b.lo, b.ul, b.last
   31424:	b	3132c <get_python_format_unnamed_arg_count@@Base+0x11664>
   31428:	cbz	x19, 314c4 <get_python_format_unnamed_arg_count@@Base+0x117fc>
   3142c:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   31430:	add	x1, x1, #0x333
   31434:	mov	w2, #0x5                   	// #5
   31438:	mov	x0, xzr
   3143c:	bl	acd0 <dcgettext@plt>
   31440:	ldr	x8, [x22, #16]
   31444:	mov	w9, w25
   31448:	lsl	x9, x9, #3
   3144c:	mov	x2, x20
   31450:	ldr	w1, [x8, x9]
   31454:	mov	x3, x21
   31458:	blr	x19
   3145c:	b	314c4 <get_python_format_unnamed_arg_count@@Base+0x117fc>
   31460:	cbz	x19, 314c4 <get_python_format_unnamed_arg_count@@Base+0x117fc>
   31464:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   31468:	add	x1, x1, #0x37d
   3146c:	mov	w2, #0x5                   	// #5
   31470:	mov	x0, xzr
   31474:	bl	acd0 <dcgettext@plt>
   31478:	ldr	x8, [x23, #16]
   3147c:	and	x9, x24, #0xffffffff
   31480:	lsl	x9, x9, #3
   31484:	mov	x2, x20
   31488:	ldr	w1, [x8, x9]
   3148c:	blr	x19
   31490:	b	314c4 <get_python_format_unnamed_arg_count@@Base+0x117fc>
   31494:	cbz	x19, 314c4 <get_python_format_unnamed_arg_count@@Base+0x117fc>
   31498:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   3149c:	add	x1, x1, #0x546
   314a0:	mov	w2, #0x5                   	// #5
   314a4:	mov	x0, xzr
   314a8:	bl	acd0 <dcgettext@plt>
   314ac:	ldr	x8, [x22, #16]
   314b0:	lsl	x9, x23, #3
   314b4:	mov	x1, x21
   314b8:	mov	x2, x20
   314bc:	ldr	w3, [x8, x9]
   314c0:	blr	x19
   314c4:	mov	w0, #0x1                   	// #1
   314c8:	ldp	x20, x19, [sp, #64]
   314cc:	ldp	x22, x21, [sp, #48]
   314d0:	ldp	x24, x23, [sp, #32]
   314d4:	ldr	x25, [sp, #16]
   314d8:	ldp	x29, x30, [sp], #80
   314dc:	ret
   314e0:	ldr	w8, [x0]
   314e4:	ldr	w9, [x1]
   314e8:	cmp	w8, w9
   314ec:	csetm	w8, cc  // cc = lo, ul, last
   314f0:	csinc	w0, w8, wzr, ls  // ls = plast
   314f4:	ret
   314f8:	stp	x29, x30, [sp, #-80]!
   314fc:	stp	x22, x21, [sp, #48]
   31500:	mov	x21, x0
   31504:	mov	w0, #0x18                  	// #24
   31508:	str	x25, [sp, #16]
   3150c:	stp	x24, x23, [sp, #32]
   31510:	stp	x20, x19, [sp, #64]
   31514:	mov	x29, sp
   31518:	mov	x22, x3
   3151c:	mov	x20, x2
   31520:	bl	a590 <xmalloc@plt>
   31524:	str	wzr, [x0, #8]
   31528:	str	xzr, [x0]
   3152c:	str	xzr, [x0, #16]
   31530:	ldrb	w8, [x21]
   31534:	mov	x19, x0
   31538:	cbz	w8, 31740 <get_python_format_unnamed_arg_count@@Base+0x11a78>
   3153c:	adrp	x24, 3b000 <plural_table_size@@Base+0x1c00>
   31540:	add	x24, x24, #0x91
   31544:	mov	x9, x21
   31548:	and	w8, w8, #0xff
   3154c:	cmp	w8, #0x25
   31550:	add	x23, x9, #0x1
   31554:	b.ne	3166c <get_python_format_unnamed_arg_count@@Base+0x119a4>  // b.any
   31558:	cbz	x20, 3156c <get_python_format_unnamed_arg_count@@Base+0x118a4>
   3155c:	sub	x8, x9, x21
   31560:	ldrb	w9, [x20, x8]
   31564:	orr	w9, w9, #0x1
   31568:	strb	w9, [x20, x8]
   3156c:	ldr	w8, [x19]
   31570:	add	w8, w8, #0x1
   31574:	str	w8, [x19]
   31578:	ldrb	w8, [x23]
   3157c:	cmp	w8, #0x25
   31580:	b.eq	31654 <get_python_format_unnamed_arg_count@@Base+0x1198c>  // b.none
   31584:	sub	w9, w8, #0x30
   31588:	cmp	w9, #0x9
   3158c:	b.hi	315a0 <get_python_format_unnamed_arg_count@@Base+0x118d8>  // b.pmore
   31590:	ldrb	w8, [x23, #1]!
   31594:	sub	w9, w8, #0x30
   31598:	cmp	w9, #0xa
   3159c:	b.cc	31590 <get_python_format_unnamed_arg_count@@Base+0x118c8>  // b.lo, b.ul, b.last
   315a0:	cmp	w8, #0x2e
   315a4:	b.ne	315b8 <get_python_format_unnamed_arg_count@@Base+0x118f0>  // b.any
   315a8:	ldrb	w8, [x23, #1]!
   315ac:	sub	w9, w8, #0x30
   315b0:	cmp	w9, #0xa
   315b4:	b.cc	315a8 <get_python_format_unnamed_arg_count@@Base+0x118e0>  // b.lo, b.ul, b.last
   315b8:	cmp	w8, #0x46
   315bc:	b.le	315e8 <get_python_format_unnamed_arg_count@@Base+0x11920>
   315c0:	sub	w9, w8, #0x61
   315c4:	cmp	w9, #0x17
   315c8:	b.hi	315fc <get_python_format_unnamed_arg_count@@Base+0x11934>  // b.pmore
   315cc:	adr	x10, 315e0 <get_python_format_unnamed_arg_count@@Base+0x11918>
   315d0:	ldrb	w11, [x24, x9]
   315d4:	add	x10, x10, x11, lsl #2
   315d8:	mov	w25, #0x1                   	// #1
   315dc:	br	x10
   315e0:	mov	w25, wzr
   315e4:	b	31614 <get_python_format_unnamed_arg_count@@Base+0x1194c>
   315e8:	cmp	w8, #0x41
   315ec:	b.eq	31610 <get_python_format_unnamed_arg_count@@Base+0x11948>  // b.none
   315f0:	cmp	w8, #0x45
   315f4:	b.eq	31610 <get_python_format_unnamed_arg_count@@Base+0x11948>  // b.none
   315f8:	b	3168c <get_python_format_unnamed_arg_count@@Base+0x119c4>
   315fc:	cmp	w8, #0x47
   31600:	b.eq	31610 <get_python_format_unnamed_arg_count@@Base+0x11948>  // b.none
   31604:	cmp	w8, #0x58
   31608:	b.eq	315e0 <get_python_format_unnamed_arg_count@@Base+0x11918>  // b.none
   3160c:	b	316c8 <get_python_format_unnamed_arg_count@@Base+0x11a00>
   31610:	mov	w25, #0x2                   	// #2
   31614:	ldp	w8, w9, [x19, #4]
   31618:	cmp	w8, w9
   3161c:	b.ne	31644 <get_python_format_unnamed_arg_count@@Base+0x1197c>  // b.any
   31620:	ldr	x0, [x19, #16]
   31624:	lsl	w8, w8, #1
   31628:	add	w8, w8, #0xa
   3162c:	lsl	x1, x8, #2
   31630:	str	w8, [x19, #8]
   31634:	bl	a460 <xrealloc@plt>
   31638:	ldr	w8, [x19, #4]
   3163c:	str	x0, [x19, #16]
   31640:	b	31648 <get_python_format_unnamed_arg_count@@Base+0x11980>
   31644:	ldr	x0, [x19, #16]
   31648:	add	w9, w8, #0x1
   3164c:	str	w9, [x19, #4]
   31650:	str	w25, [x0, w8, uxtw #2]
   31654:	cbz	x20, 31668 <get_python_format_unnamed_arg_count@@Base+0x119a0>
   31658:	sub	x8, x23, x21
   3165c:	ldrb	w9, [x20, x8]
   31660:	orr	w9, w9, #0x2
   31664:	strb	w9, [x20, x8]
   31668:	add	x23, x23, #0x1
   3166c:	ldrb	w8, [x23]
   31670:	mov	x9, x23
   31674:	cbnz	w8, 31548 <get_python_format_unnamed_arg_count@@Base+0x11880>
   31678:	b	31740 <get_python_format_unnamed_arg_count@@Base+0x11a78>
   3167c:	mov	w25, #0x4                   	// #4
   31680:	b	31614 <get_python_format_unnamed_arg_count@@Base+0x1194c>
   31684:	mov	w25, #0x3                   	// #3
   31688:	b	31614 <get_python_format_unnamed_arg_count@@Base+0x1194c>
   3168c:	cbnz	w8, 316c8 <get_python_format_unnamed_arg_count@@Base+0x11a00>
   31690:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   31694:	add	x1, x1, #0x7e0
   31698:	mov	w2, #0x5                   	// #5
   3169c:	mov	x0, xzr
   316a0:	bl	acd0 <dcgettext@plt>
   316a4:	bl	a5a0 <xstrdup@plt>
   316a8:	str	x0, [x22]
   316ac:	cbz	x20, 31734 <get_python_format_unnamed_arg_count@@Base+0x11a6c>
   316b0:	sub	x8, x23, x21
   316b4:	add	x8, x8, x20
   316b8:	ldurb	w9, [x8, #-1]
   316bc:	orr	w9, w9, #0x4
   316c0:	sturb	w9, [x8, #-1]
   316c4:	b	31734 <get_python_format_unnamed_arg_count@@Base+0x11a6c>
   316c8:	sub	w8, w8, #0x20
   316cc:	cmp	w8, #0x5e
   316d0:	b.hi	316fc <get_python_format_unnamed_arg_count@@Base+0x11a34>  // b.pmore
   316d4:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   316d8:	add	x1, x1, #0x80e
   316dc:	mov	w2, #0x5                   	// #5
   316e0:	mov	x0, xzr
   316e4:	bl	acd0 <dcgettext@plt>
   316e8:	ldr	w8, [x19, #4]
   316ec:	ldrb	w2, [x23]
   316f0:	add	w1, w8, #0x1
   316f4:	bl	aa20 <xasprintf@plt>
   316f8:	b	3171c <get_python_format_unnamed_arg_count@@Base+0x11a54>
   316fc:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   31700:	add	x1, x1, #0x862
   31704:	mov	w2, #0x5                   	// #5
   31708:	mov	x0, xzr
   3170c:	bl	acd0 <dcgettext@plt>
   31710:	ldr	w8, [x19, #4]
   31714:	add	w1, w8, #0x1
   31718:	bl	aa20 <xasprintf@plt>
   3171c:	str	x0, [x22]
   31720:	cbz	x20, 31734 <get_python_format_unnamed_arg_count@@Base+0x11a6c>
   31724:	sub	x8, x23, x21
   31728:	ldrb	w9, [x20, x8]
   3172c:	orr	w9, w9, #0x4
   31730:	strb	w9, [x20, x8]
   31734:	mov	x0, x19
   31738:	bl	3175c <get_python_format_unnamed_arg_count@@Base+0x11a94>
   3173c:	mov	x19, xzr
   31740:	mov	x0, x19
   31744:	ldp	x20, x19, [sp, #64]
   31748:	ldp	x22, x21, [sp, #48]
   3174c:	ldp	x24, x23, [sp, #32]
   31750:	ldr	x25, [sp, #16]
   31754:	ldp	x29, x30, [sp], #80
   31758:	ret
   3175c:	stp	x29, x30, [sp, #-32]!
   31760:	str	x19, [sp, #16]
   31764:	mov	x19, x0
   31768:	ldr	x0, [x0, #16]
   3176c:	mov	x29, sp
   31770:	cbz	x0, 31778 <get_python_format_unnamed_arg_count@@Base+0x11ab0>
   31774:	bl	aa00 <free@plt>
   31778:	mov	x0, x19
   3177c:	ldr	x19, [sp, #16]
   31780:	ldp	x29, x30, [sp], #32
   31784:	b	aa00 <free@plt>
   31788:	ldr	w0, [x0]
   3178c:	ret
   31790:	stp	x29, x30, [sp, #-48]!
   31794:	stp	x22, x21, [sp, #16]
   31798:	stp	x20, x19, [sp, #32]
   3179c:	ldr	w9, [x0, #4]
   317a0:	ldr	w10, [x1, #4]
   317a4:	mov	w8, wzr
   317a8:	mov	x29, sp
   317ac:	cmn	w9, w10
   317b0:	b.eq	318a4 <get_python_format_unnamed_arg_count@@Base+0x11bdc>  // b.none
   317b4:	orr	w11, w9, w10
   317b8:	cbz	w11, 318a4 <get_python_format_unnamed_arg_count@@Base+0x11bdc>
   317bc:	cmp	w9, #0x0
   317c0:	cset	w11, ne  // ne = any
   317c4:	cmp	w10, #0x0
   317c8:	mov	x20, x5
   317cc:	mov	x21, x4
   317d0:	mov	x19, x3
   317d4:	mov	x22, xzr
   317d8:	cset	w8, ne  // ne = any
   317dc:	tbz	w11, #0, 31824 <get_python_format_unnamed_arg_count@@Base+0x11b5c>
   317e0:	tbz	w8, #0, 31850 <get_python_format_unnamed_arg_count@@Base+0x11b88>
   317e4:	ldr	x8, [x0, #16]
   317e8:	ldr	x11, [x1, #16]
   317ec:	ldr	w8, [x8, x22, lsl #2]
   317f0:	ldr	w11, [x11, x22, lsl #2]
   317f4:	cmp	w8, w11
   317f8:	b.ne	31878 <get_python_format_unnamed_arg_count@@Base+0x11bb0>  // b.any
   317fc:	add	x22, x22, #0x1
   31800:	cmp	x22, x10
   31804:	cset	w8, cc  // cc = lo, ul, last
   31808:	cmp	x22, x9
   3180c:	cset	w11, cc  // cc = lo, ul, last
   31810:	b.cc	317dc <get_python_format_unnamed_arg_count@@Base+0x11b14>  // b.lo, b.ul, b.last
   31814:	cmp	x22, x10
   31818:	b.cc	317dc <get_python_format_unnamed_arg_count@@Base+0x11b14>  // b.lo, b.ul, b.last
   3181c:	mov	w8, wzr
   31820:	b	318a4 <get_python_format_unnamed_arg_count@@Base+0x11bdc>
   31824:	cbz	x19, 318a0 <get_python_format_unnamed_arg_count@@Base+0x11bd8>
   31828:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   3182c:	add	x1, x1, #0x333
   31830:	mov	w2, #0x5                   	// #5
   31834:	mov	x0, xzr
   31838:	bl	acd0 <dcgettext@plt>
   3183c:	add	w1, w22, #0x1
   31840:	mov	x2, x20
   31844:	mov	x3, x21
   31848:	blr	x19
   3184c:	b	318a0 <get_python_format_unnamed_arg_count@@Base+0x11bd8>
   31850:	cbz	x19, 318a0 <get_python_format_unnamed_arg_count@@Base+0x11bd8>
   31854:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   31858:	add	x1, x1, #0x37d
   3185c:	mov	w2, #0x5                   	// #5
   31860:	mov	x0, xzr
   31864:	bl	acd0 <dcgettext@plt>
   31868:	add	w1, w22, #0x1
   3186c:	mov	x2, x20
   31870:	blr	x19
   31874:	b	318a0 <get_python_format_unnamed_arg_count@@Base+0x11bd8>
   31878:	cbz	x19, 318a0 <get_python_format_unnamed_arg_count@@Base+0x11bd8>
   3187c:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   31880:	add	x1, x1, #0x546
   31884:	mov	w2, #0x5                   	// #5
   31888:	mov	x0, xzr
   3188c:	bl	acd0 <dcgettext@plt>
   31890:	add	w3, w22, #0x1
   31894:	mov	x1, x21
   31898:	mov	x2, x20
   3189c:	blr	x19
   318a0:	mov	w8, #0x1                   	// #1
   318a4:	ldp	x20, x19, [sp, #32]
   318a8:	ldp	x22, x21, [sp, #16]
   318ac:	mov	w0, w8
   318b0:	ldp	x29, x30, [sp], #48
   318b4:	ret
   318b8:	sub	sp, sp, #0x70
   318bc:	stp	x29, x30, [sp, #16]
   318c0:	stp	x28, x27, [sp, #32]
   318c4:	stp	x26, x25, [sp, #48]
   318c8:	stp	x24, x23, [sp, #64]
   318cc:	stp	x22, x21, [sp, #80]
   318d0:	stp	x20, x19, [sp, #96]
   318d4:	ldrb	w10, [x0]
   318d8:	add	x29, sp, #0x10
   318dc:	cbz	w10, 31b00 <get_python_format_unnamed_arg_count@@Base+0x11e38>
   318e0:	mov	x20, #0x2801                	// #10241
   318e4:	mov	x13, x0
   318e8:	movk	x20, #0x1, lsl #16
   318ec:	mov	x22, x2
   318f0:	mov	x0, xzr
   318f4:	mov	w25, wzr
   318f8:	mov	w12, wzr
   318fc:	mov	w23, wzr
   31900:	mov	w24, wzr
   31904:	mov	w27, #0xa                   	// #10
   31908:	mov	w28, #0x1                   	// #1
   3190c:	movk	x20, #0x200, lsl #32
   31910:	mov	x9, x13
   31914:	stp	x3, x13, [sp]
   31918:	and	w8, w10, #0xff
   3191c:	cmp	w8, #0x25
   31920:	add	x8, x9, #0x1
   31924:	b.ne	31aa8 <get_python_format_unnamed_arg_count@@Base+0x11de0>  // b.any
   31928:	cbz	x22, 3193c <get_python_format_unnamed_arg_count@@Base+0x11c74>
   3192c:	sub	x10, x9, x13
   31930:	ldrb	w11, [x22, x10]
   31934:	orr	w11, w11, #0x1
   31938:	strb	w11, [x22, x10]
   3193c:	ldrb	w10, [x8]
   31940:	add	w12, w12, #0x1
   31944:	sub	w11, w10, #0x30
   31948:	cmp	w11, #0x9
   3194c:	b.hi	31984 <get_python_format_unnamed_arg_count@@Base+0x11cbc>  // b.pmore
   31950:	mov	w19, wzr
   31954:	add	x26, x9, #0x2
   31958:	mul	w9, w19, w27
   3195c:	add	w9, w9, w10, uxtb
   31960:	ldrb	w10, [x26], #1
   31964:	sub	w19, w9, #0x30
   31968:	sub	w11, w10, #0x30
   3196c:	cmp	w11, #0xa
   31970:	b.cc	31958 <get_python_format_unnamed_arg_count@@Base+0x11c90>  // b.lo, b.ul, b.last
   31974:	cmp	w10, #0x24
   31978:	b.ne	31984 <get_python_format_unnamed_arg_count@@Base+0x11cbc>  // b.any
   3197c:	cbnz	w19, 3198c <get_python_format_unnamed_arg_count@@Base+0x11cc4>
   31980:	b	31d48 <get_python_format_unnamed_arg_count@@Base+0x12080>
   31984:	mov	w19, wzr
   31988:	mov	x26, x8
   3198c:	ldrb	w8, [x26]
   31990:	sub	w9, w8, #0x20
   31994:	cmp	w9, #0x29
   31998:	b.hi	319b0 <get_python_format_unnamed_arg_count@@Base+0x11ce8>  // b.pmore
   3199c:	lsl	x9, x28, x9
   319a0:	tst	x9, x20
   319a4:	b.eq	319b0 <get_python_format_unnamed_arg_count@@Base+0x11ce8>  // b.none
   319a8:	add	x26, x26, #0x1
   319ac:	b	3198c <get_python_format_unnamed_arg_count@@Base+0x11cc4>
   319b0:	sub	w9, w8, #0x30
   319b4:	cmp	w9, #0x9
   319b8:	b.hi	319cc <get_python_format_unnamed_arg_count@@Base+0x11d04>  // b.pmore
   319bc:	ldrb	w8, [x26, #1]!
   319c0:	sub	w9, w8, #0x30
   319c4:	cmp	w9, #0xa
   319c8:	b.cc	319bc <get_python_format_unnamed_arg_count@@Base+0x11cf4>  // b.lo, b.ul, b.last
   319cc:	cmp	w8, #0x2e
   319d0:	b.ne	319e4 <get_python_format_unnamed_arg_count@@Base+0x11d1c>  // b.any
   319d4:	ldrb	w8, [x26, #1]!
   319d8:	sub	w9, w8, #0x30
   319dc:	cmp	w9, #0xa
   319e0:	b.cc	319d4 <get_python_format_unnamed_arg_count@@Base+0x11d0c>  // b.lo, b.ul, b.last
   319e4:	cmp	w8, #0x61
   319e8:	b.le	31a20 <get_python_format_unnamed_arg_count@@Base+0x11d58>
   319ec:	sub	w9, w8, #0x62
   319f0:	cmp	w9, #0xd
   319f4:	b.hi	31a34 <get_python_format_unnamed_arg_count@@Base+0x11d6c>  // b.pmore
   319f8:	adrp	x14, 3b000 <plural_table_size@@Base+0x1c00>
   319fc:	add	x14, x14, #0xa9
   31a00:	adr	x10, 31a14 <get_python_format_unnamed_arg_count@@Base+0x11d4c>
   31a04:	ldrb	w11, [x14, x9]
   31a08:	add	x10, x10, x11, lsl #2
   31a0c:	mov	w21, #0x2                   	// #2
   31a10:	br	x10
   31a14:	mov	w21, #0x5                   	// #5
   31a18:	cbnz	w19, 31a58 <get_python_format_unnamed_arg_count@@Base+0x11d90>
   31a1c:	b	31ac0 <get_python_format_unnamed_arg_count@@Base+0x11df8>
   31a20:	cmp	w8, #0x25
   31a24:	b.eq	31a90 <get_python_format_unnamed_arg_count@@Base+0x11dc8>  // b.none
   31a28:	cmp	w8, #0x58
   31a2c:	b.eq	31a50 <get_python_format_unnamed_arg_count@@Base+0x11d88>  // b.none
   31a30:	b	31c38 <get_python_format_unnamed_arg_count@@Base+0x11f70>
   31a34:	cmp	w8, #0x78
   31a38:	b.eq	31a50 <get_python_format_unnamed_arg_count@@Base+0x11d88>  // b.none
   31a3c:	cmp	w8, #0x73
   31a40:	b.ne	31c80 <get_python_format_unnamed_arg_count@@Base+0x11fb8>  // b.any
   31a44:	mov	w21, #0x3                   	// #3
   31a48:	cbnz	w19, 31a58 <get_python_format_unnamed_arg_count@@Base+0x11d90>
   31a4c:	b	31ac0 <get_python_format_unnamed_arg_count@@Base+0x11df8>
   31a50:	mov	w21, #0x4                   	// #4
   31a54:	cbz	w19, 31ac0 <get_python_format_unnamed_arg_count@@Base+0x11df8>
   31a58:	cbnz	w25, 31c08 <get_python_format_unnamed_arg_count@@Base+0x11f40>
   31a5c:	cmp	w24, w23
   31a60:	b.ne	31a80 <get_python_format_unnamed_arg_count@@Base+0x11db8>  // b.any
   31a64:	mov	w24, #0x1                   	// #1
   31a68:	bfi	w24, w23, #1, #31
   31a6c:	lsl	x1, x24, #3
   31a70:	mov	w25, w12
   31a74:	bl	a460 <xrealloc@plt>
   31a78:	ldr	x13, [sp, #8]
   31a7c:	mov	w12, w25
   31a80:	add	x8, x0, w23, uxtw #3
   31a84:	mov	w25, wzr
   31a88:	stp	w19, w21, [x8]
   31a8c:	add	w23, w23, #0x1
   31a90:	cbz	x22, 31aa4 <get_python_format_unnamed_arg_count@@Base+0x11ddc>
   31a94:	sub	x8, x26, x13
   31a98:	ldrb	w9, [x22, x8]
   31a9c:	orr	w9, w9, #0x2
   31aa0:	strb	w9, [x22, x8]
   31aa4:	add	x8, x26, #0x1
   31aa8:	ldrb	w10, [x8]
   31aac:	mov	x9, x8
   31ab0:	cbnz	w10, 31918 <get_python_format_unnamed_arg_count@@Base+0x11c50>
   31ab4:	b	31b14 <get_python_format_unnamed_arg_count@@Base+0x11e4c>
   31ab8:	mov	w21, #0x1                   	// #1
   31abc:	cbnz	w19, 31a58 <get_python_format_unnamed_arg_count@@Base+0x11d90>
   31ac0:	cbnz	w23, 31c08 <get_python_format_unnamed_arg_count@@Base+0x11f40>
   31ac4:	cmp	w24, w25
   31ac8:	b.ne	31ae8 <get_python_format_unnamed_arg_count@@Base+0x11e20>  // b.any
   31acc:	mov	w24, #0x1                   	// #1
   31ad0:	bfi	w24, w25, #1, #31
   31ad4:	lsl	x1, x24, #3
   31ad8:	mov	w19, w12
   31adc:	bl	a460 <xrealloc@plt>
   31ae0:	ldr	x13, [sp, #8]
   31ae4:	mov	w12, w19
   31ae8:	mov	w23, wzr
   31aec:	add	x8, x0, w25, uxtw #3
   31af0:	add	w25, w25, #0x1
   31af4:	stp	w25, w21, [x8]
   31af8:	cbnz	x22, 31a94 <get_python_format_unnamed_arg_count@@Base+0x11dcc>
   31afc:	b	31aa4 <get_python_format_unnamed_arg_count@@Base+0x11ddc>
   31b00:	mov	x0, xzr
   31b04:	mov	w28, wzr
   31b08:	mov	w24, wzr
   31b0c:	mov	w25, wzr
   31b10:	b	31cc0 <get_python_format_unnamed_arg_count@@Base+0x11ff8>
   31b14:	cbnz	w25, 31cbc <get_python_format_unnamed_arg_count@@Base+0x11ff4>
   31b18:	cmp	w23, #0x2
   31b1c:	b.cc	31cb8 <get_python_format_unnamed_arg_count@@Base+0x11ff0>  // b.lo, b.ul, b.last
   31b20:	mov	w22, w23
   31b24:	adrp	x3, 31000 <get_python_format_unnamed_arg_count@@Base+0x11338>
   31b28:	add	x3, x3, #0xfb0
   31b2c:	mov	w2, #0x8                   	// #8
   31b30:	mov	x1, x22
   31b34:	mov	w28, w12
   31b38:	mov	x26, x0
   31b3c:	bl	a2f0 <qsort@plt>
   31b40:	ldr	x27, [sp]
   31b44:	adrp	x23, 39000 <get_search_path@@Base+0x2b4c>
   31b48:	mov	x0, x26
   31b4c:	mov	x19, xzr
   31b50:	mov	w8, wzr
   31b54:	mov	w25, wzr
   31b58:	add	x23, x23, #0x8bd
   31b5c:	mov	x20, x26
   31b60:	cbz	w25, 31ba8 <get_python_format_unnamed_arg_count@@Base+0x11ee0>
   31b64:	sub	w9, w25, #0x1
   31b68:	lsl	x11, x9, #3
   31b6c:	ldr	w10, [x20]
   31b70:	ldr	w11, [x0, x11]
   31b74:	cmp	w10, w11
   31b78:	b.ne	31ba8 <get_python_format_unnamed_arg_count@@Base+0x11ee0>  // b.any
   31b7c:	add	x21, x0, x9, lsl #3
   31b80:	ldr	w11, [x20, #4]
   31b84:	ldr	w9, [x21, #4]!
   31b88:	cmp	w11, w9
   31b8c:	cset	w9, eq  // eq = none
   31b90:	cset	w10, ne  // ne = any
   31b94:	orr	w12, w8, w9
   31b98:	csel	w9, w11, wzr, eq  // eq = none
   31b9c:	tbz	w12, #0, 31bc4 <get_python_format_unnamed_arg_count@@Base+0x11efc>
   31ba0:	orr	w8, w8, w10
   31ba4:	b	31bec <get_python_format_unnamed_arg_count@@Base+0x11f24>
   31ba8:	cmp	x19, w25, uxtw
   31bac:	b.ls	31bbc <get_python_format_unnamed_arg_count@@Base+0x11ef4>  // b.plast
   31bb0:	ldr	x9, [x20]
   31bb4:	mov	w10, w25
   31bb8:	str	x9, [x0, x10, lsl #3]
   31bbc:	add	w25, w25, #0x1
   31bc0:	b	31bf0 <get_python_format_unnamed_arg_count@@Base+0x11f28>
   31bc4:	mov	w2, #0x5                   	// #5
   31bc8:	mov	x0, xzr
   31bcc:	mov	x1, x23
   31bd0:	bl	acd0 <dcgettext@plt>
   31bd4:	ldr	w1, [x20]
   31bd8:	bl	aa20 <xasprintf@plt>
   31bdc:	mov	w9, wzr
   31be0:	str	x0, [x27]
   31be4:	mov	x0, x26
   31be8:	mov	w8, #0x1                   	// #1
   31bec:	str	w9, [x21]
   31bf0:	add	x19, x19, #0x1
   31bf4:	cmp	x22, x19
   31bf8:	add	x20, x20, #0x8
   31bfc:	b.ne	31b60 <get_python_format_unnamed_arg_count@@Base+0x11e98>  // b.any
   31c00:	tbz	w8, #0, 31cc0 <get_python_format_unnamed_arg_count@@Base+0x11ff8>
   31c04:	b	31d1c <get_python_format_unnamed_arg_count@@Base+0x12054>
   31c08:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   31c0c:	mov	x19, x0
   31c10:	add	x1, x1, #0x630
   31c14:	mov	w2, #0x5                   	// #5
   31c18:	mov	x0, xzr
   31c1c:	bl	acd0 <dcgettext@plt>
   31c20:	bl	a5a0 <xstrdup@plt>
   31c24:	ldr	x8, [sp]
   31c28:	str	x0, [x8]
   31c2c:	cbz	x22, 31d18 <get_python_format_unnamed_arg_count@@Base+0x12050>
   31c30:	ldr	x8, [sp, #8]
   31c34:	b	31d08 <get_python_format_unnamed_arg_count@@Base+0x12040>
   31c38:	cbnz	w8, 31c80 <get_python_format_unnamed_arg_count@@Base+0x11fb8>
   31c3c:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   31c40:	mov	x19, x0
   31c44:	add	x1, x1, #0x7e0
   31c48:	mov	w2, #0x5                   	// #5
   31c4c:	mov	x0, xzr
   31c50:	bl	acd0 <dcgettext@plt>
   31c54:	bl	a5a0 <xstrdup@plt>
   31c58:	ldr	x8, [sp]
   31c5c:	str	x0, [x8]
   31c60:	cbz	x22, 31d18 <get_python_format_unnamed_arg_count@@Base+0x12050>
   31c64:	ldr	x8, [sp, #8]
   31c68:	sub	x8, x26, x8
   31c6c:	add	x8, x8, x22
   31c70:	ldurb	w9, [x8, #-1]
   31c74:	orr	w9, w9, #0x4
   31c78:	sturb	w9, [x8, #-1]
   31c7c:	b	31d18 <get_python_format_unnamed_arg_count@@Base+0x12050>
   31c80:	sub	w8, w8, #0x20
   31c84:	mov	w20, w12
   31c88:	mov	x19, x0
   31c8c:	cmp	w8, #0x5e
   31c90:	b.hi	31cdc <get_python_format_unnamed_arg_count@@Base+0x12014>  // b.pmore
   31c94:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   31c98:	add	x1, x1, #0x80e
   31c9c:	mov	w2, #0x5                   	// #5
   31ca0:	mov	x0, xzr
   31ca4:	bl	acd0 <dcgettext@plt>
   31ca8:	ldrb	w2, [x26]
   31cac:	mov	w1, w20
   31cb0:	bl	aa20 <xasprintf@plt>
   31cb4:	b	31cf8 <get_python_format_unnamed_arg_count@@Base+0x12030>
   31cb8:	mov	w25, w23
   31cbc:	mov	w28, w12
   31cc0:	mov	x19, x0
   31cc4:	mov	w0, #0x18                  	// #24
   31cc8:	bl	a590 <xmalloc@plt>
   31ccc:	stp	w28, w25, [x0]
   31cd0:	str	w24, [x0, #8]
   31cd4:	str	x19, [x0, #16]
   31cd8:	b	31d28 <get_python_format_unnamed_arg_count@@Base+0x12060>
   31cdc:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   31ce0:	add	x1, x1, #0x862
   31ce4:	mov	w2, #0x5                   	// #5
   31ce8:	mov	x0, xzr
   31cec:	bl	acd0 <dcgettext@plt>
   31cf0:	mov	w1, w20
   31cf4:	bl	aa20 <xasprintf@plt>
   31cf8:	ldr	x8, [sp]
   31cfc:	str	x0, [x8]
   31d00:	ldr	x8, [sp, #8]
   31d04:	cbz	x22, 31d18 <get_python_format_unnamed_arg_count@@Base+0x12050>
   31d08:	sub	x8, x26, x8
   31d0c:	ldrb	w9, [x22, x8]
   31d10:	orr	w9, w9, #0x4
   31d14:	strb	w9, [x22, x8]
   31d18:	mov	x0, x19
   31d1c:	cbz	x0, 31d28 <get_python_format_unnamed_arg_count@@Base+0x12060>
   31d20:	bl	aa00 <free@plt>
   31d24:	mov	x0, xzr
   31d28:	ldp	x20, x19, [sp, #96]
   31d2c:	ldp	x22, x21, [sp, #80]
   31d30:	ldp	x24, x23, [sp, #64]
   31d34:	ldp	x26, x25, [sp, #48]
   31d38:	ldp	x28, x27, [sp, #32]
   31d3c:	ldp	x29, x30, [sp, #16]
   31d40:	add	sp, sp, #0x70
   31d44:	ret
   31d48:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   31d4c:	mov	x19, x0
   31d50:	add	x1, x1, #0x58e
   31d54:	mov	w2, #0x5                   	// #5
   31d58:	mov	x0, xzr
   31d5c:	mov	w20, w12
   31d60:	bl	acd0 <dcgettext@plt>
   31d64:	mov	w1, w20
   31d68:	bl	aa20 <xasprintf@plt>
   31d6c:	ldr	x8, [sp]
   31d70:	str	x0, [x8]
   31d74:	cbz	x22, 31d18 <get_python_format_unnamed_arg_count@@Base+0x12050>
   31d78:	ldr	x9, [sp, #8]
   31d7c:	sub	x8, x26, #0x1
   31d80:	sub	x8, x8, x9
   31d84:	b	31d0c <get_python_format_unnamed_arg_count@@Base+0x12044>
   31d88:	stp	x29, x30, [sp, #-32]!
   31d8c:	str	x19, [sp, #16]
   31d90:	mov	x19, x0
   31d94:	ldr	x0, [x0, #16]
   31d98:	mov	x29, sp
   31d9c:	cbz	x0, 31da4 <get_python_format_unnamed_arg_count@@Base+0x120dc>
   31da0:	bl	aa00 <free@plt>
   31da4:	mov	x0, x19
   31da8:	ldr	x19, [sp, #16]
   31dac:	ldp	x29, x30, [sp], #32
   31db0:	b	aa00 <free@plt>
   31db4:	ldr	w0, [x0]
   31db8:	ret
   31dbc:	stp	x29, x30, [sp, #-80]!
   31dc0:	stp	x24, x23, [sp, #32]
   31dc4:	stp	x22, x21, [sp, #48]
   31dc8:	stp	x20, x19, [sp, #64]
   31dcc:	ldr	w9, [x0, #4]
   31dd0:	ldr	w8, [x1, #4]
   31dd4:	str	x25, [sp, #16]
   31dd8:	mov	x29, sp
   31ddc:	cmn	w9, w8
   31de0:	b.eq	31ef0 <get_python_format_unnamed_arg_count@@Base+0x12228>  // b.none
   31de4:	mov	x20, x5
   31de8:	mov	x21, x4
   31dec:	mov	x19, x3
   31df0:	mov	x22, x1
   31df4:	mov	x23, x0
   31df8:	orr	w10, w8, w9
   31dfc:	cbz	w10, 31e78 <get_python_format_unnamed_arg_count@@Base+0x121b0>
   31e00:	cmp	w8, #0x0
   31e04:	cset	w11, ne  // ne = any
   31e08:	cmp	w9, #0x0
   31e0c:	mov	x10, xzr
   31e10:	mov	x24, xzr
   31e14:	mov	w25, wzr
   31e18:	cset	w12, ne  // ne = any
   31e1c:	tbz	w12, #0, 31ef8 <get_python_format_unnamed_arg_count@@Base+0x12230>
   31e20:	tbz	w11, #0, 31e48 <get_python_format_unnamed_arg_count@@Base+0x12180>
   31e24:	ldr	x11, [x23, #16]
   31e28:	ldr	x12, [x22, #16]
   31e2c:	mov	w13, w25
   31e30:	lsl	x13, x13, #3
   31e34:	ldr	w11, [x11, x10]
   31e38:	ldr	w12, [x12, x13]
   31e3c:	cmp	w11, w12
   31e40:	b.hi	31ef8 <get_python_format_unnamed_arg_count@@Base+0x12230>  // b.pmore
   31e44:	b.cs	31e50 <get_python_format_unnamed_arg_count@@Base+0x12188>  // b.hs, b.nlast
   31e48:	tbz	w2, #0, 31e54 <get_python_format_unnamed_arg_count@@Base+0x1218c>
   31e4c:	b	31f30 <get_python_format_unnamed_arg_count@@Base+0x12268>
   31e50:	add	w25, w25, #0x1
   31e54:	add	x24, x24, #0x1
   31e58:	cmp	x24, x9
   31e5c:	cset	w12, cc  // cc = lo, ul, last
   31e60:	cmp	w25, w8
   31e64:	cset	w11, cc  // cc = lo, ul, last
   31e68:	add	x10, x10, #0x8
   31e6c:	b.cc	31e1c <get_python_format_unnamed_arg_count@@Base+0x12154>  // b.lo, b.ul, b.last
   31e70:	cmp	x24, x9
   31e74:	b.cc	31e1c <get_python_format_unnamed_arg_count@@Base+0x12154>  // b.lo, b.ul, b.last
   31e78:	cbz	w8, 31ef0 <get_python_format_unnamed_arg_count@@Base+0x12228>
   31e7c:	ldr	x9, [x23, #16]
   31e80:	ldr	x10, [x22, #16]
   31e84:	mov	w12, wzr
   31e88:	mov	w11, wzr
   31e8c:	mov	w12, w12
   31e90:	mov	w23, w11
   31e94:	lsl	x13, x12, #3
   31e98:	lsl	x14, x23, #3
   31e9c:	ldr	w13, [x9, x13]
   31ea0:	ldr	w14, [x10, x14]
   31ea4:	cmp	w13, w14
   31ea8:	b.ne	31ee4 <get_python_format_unnamed_arg_count@@Base+0x1221c>  // b.any
   31eac:	add	x13, x9, x12, lsl #3
   31eb0:	add	x14, x10, x23, lsl #3
   31eb4:	ldr	w13, [x13, #4]
   31eb8:	ldr	w14, [x14, #4]
   31ebc:	cmp	w13, w14
   31ec0:	b.eq	31ee0 <get_python_format_unnamed_arg_count@@Base+0x12218>  // b.none
   31ec4:	tbnz	w2, #0, 31f64 <get_python_format_unnamed_arg_count@@Base+0x1229c>
   31ec8:	cmp	w13, #0x1
   31ecc:	b.eq	31ee0 <get_python_format_unnamed_arg_count@@Base+0x12218>  // b.none
   31ed0:	add	x13, x10, x12, lsl #3
   31ed4:	ldr	w13, [x13, #4]
   31ed8:	cmp	w13, #0x1
   31edc:	b.ne	31f64 <get_python_format_unnamed_arg_count@@Base+0x1229c>  // b.any
   31ee0:	add	w11, w11, #0x1
   31ee4:	cmp	w11, w8
   31ee8:	add	w12, w12, #0x1
   31eec:	b.cc	31e8c <get_python_format_unnamed_arg_count@@Base+0x121c4>  // b.lo, b.ul, b.last
   31ef0:	mov	w0, wzr
   31ef4:	b	31f98 <get_python_format_unnamed_arg_count@@Base+0x122d0>
   31ef8:	cbz	x19, 31f94 <get_python_format_unnamed_arg_count@@Base+0x122cc>
   31efc:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   31f00:	add	x1, x1, #0x333
   31f04:	mov	w2, #0x5                   	// #5
   31f08:	mov	x0, xzr
   31f0c:	bl	acd0 <dcgettext@plt>
   31f10:	ldr	x8, [x22, #16]
   31f14:	mov	w9, w25
   31f18:	lsl	x9, x9, #3
   31f1c:	mov	x2, x20
   31f20:	ldr	w1, [x8, x9]
   31f24:	mov	x3, x21
   31f28:	blr	x19
   31f2c:	b	31f94 <get_python_format_unnamed_arg_count@@Base+0x122cc>
   31f30:	cbz	x19, 31f94 <get_python_format_unnamed_arg_count@@Base+0x122cc>
   31f34:	adrp	x1, 3a000 <plural_table_size@@Base+0xc00>
   31f38:	add	x1, x1, #0x37d
   31f3c:	mov	w2, #0x5                   	// #5
   31f40:	mov	x0, xzr
   31f44:	bl	acd0 <dcgettext@plt>
   31f48:	ldr	x8, [x23, #16]
   31f4c:	and	x9, x24, #0xffffffff
   31f50:	lsl	x9, x9, #3
   31f54:	mov	x2, x20
   31f58:	ldr	w1, [x8, x9]
   31f5c:	blr	x19
   31f60:	b	31f94 <get_python_format_unnamed_arg_count@@Base+0x122cc>
   31f64:	cbz	x19, 31f94 <get_python_format_unnamed_arg_count@@Base+0x122cc>
   31f68:	adrp	x1, 39000 <get_search_path@@Base+0x2b4c>
   31f6c:	add	x1, x1, #0x546
   31f70:	mov	w2, #0x5                   	// #5
   31f74:	mov	x0, xzr
   31f78:	bl	acd0 <dcgettext@plt>
   31f7c:	ldr	x8, [x22, #16]
   31f80:	lsl	x9, x23, #3
   31f84:	mov	x1, x21
   31f88:	mov	x2, x20
   31f8c:	ldr	w3, [x8, x9]
   31f90:	blr	x19
   31f94:	mov	w0, #0x1                   	// #1
   31f98:	ldp	x20, x19, [sp, #64]
   31f9c:	ldp	x22, x21, [sp, #48]
   31fa0:	ldp	x24, x23, [sp, #32]
   31fa4:	ldr	x25, [sp, #16]
   31fa8:	ldp	x29, x30, [sp], #80
   31fac:	ret
   31fb0:	ldr	w8, [x0]
   31fb4:	ldr	w9, [x1]
   31fb8:	cmp	w8, w9
   31fbc:	csetm	w8, cc  // cc = lo, ul, last
   31fc0:	csinc	w0, w8, wzr, ls  // ls = plast
   31fc4:	ret

0000000000031fc8 <desktop_reader_alloc@@Base>:
   31fc8:	stp	x29, x30, [sp, #-32]!
   31fcc:	stp	x20, x19, [sp, #16]
   31fd0:	mov	x20, x0
   31fd4:	ldr	x0, [x0]
   31fd8:	mov	x29, sp
   31fdc:	bl	a590 <xmalloc@plt>
   31fe0:	str	x20, [x0]
   31fe4:	ldr	x8, [x20, #8]
   31fe8:	mov	x19, x0
   31fec:	cbz	x8, 31ff8 <desktop_reader_alloc@@Base+0x30>
   31ff0:	mov	x0, x19
   31ff4:	blr	x8
   31ff8:	mov	x0, x19
   31ffc:	ldp	x20, x19, [sp, #16]
   32000:	ldp	x29, x30, [sp], #32
   32004:	ret

0000000000032008 <desktop_reader_free@@Base>:
   32008:	stp	x29, x30, [sp, #-32]!
   3200c:	ldr	x8, [x0]
   32010:	str	x19, [sp, #16]
   32014:	mov	x19, x0
   32018:	mov	x29, sp
   3201c:	ldr	x8, [x8, #16]
   32020:	cbz	x8, 3202c <desktop_reader_free@@Base+0x24>
   32024:	mov	x0, x19
   32028:	blr	x8
   3202c:	mov	x0, x19
   32030:	ldr	x19, [sp, #16]
   32034:	ldp	x29, x30, [sp], #32
   32038:	b	aa00 <free@plt>

000000000003203c <desktop_reader_handle_group@@Base>:
   3203c:	ldr	x8, [x0]
   32040:	ldr	x2, [x8, #24]
   32044:	cbz	x2, 3204c <desktop_reader_handle_group@@Base+0x10>
   32048:	br	x2
   3204c:	ret

0000000000032050 <desktop_reader_handle_pair@@Base>:
   32050:	ldr	x8, [x0]
   32054:	ldr	x5, [x8, #32]
   32058:	cbz	x5, 32060 <desktop_reader_handle_pair@@Base+0x10>
   3205c:	br	x5
   32060:	ret

0000000000032064 <desktop_reader_handle_comment@@Base>:
   32064:	ldr	x8, [x0]
   32068:	ldr	x2, [x8, #40]
   3206c:	cbz	x2, 32074 <desktop_reader_handle_comment@@Base+0x10>
   32070:	br	x2
   32074:	ret

0000000000032078 <desktop_reader_handle_blank@@Base>:
   32078:	ldr	x8, [x0]
   3207c:	ldr	x2, [x8, #48]
   32080:	cbz	x2, 32088 <desktop_reader_handle_blank@@Base+0x10>
   32084:	br	x2
   32088:	ret

000000000003208c <desktop_parse@@Base>:
   3208c:	stp	x29, x30, [sp, #-96]!
   32090:	stp	x20, x19, [sp, #80]
   32094:	mov	x19, x0
   32098:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   3209c:	adrp	x9, 4e000 <formatstring_gfc_internal@@Base+0x10>
   320a0:	mov	x0, x3
   320a4:	stp	x28, x27, [sp, #16]
   320a8:	stp	x26, x25, [sp, #32]
   320ac:	stp	x24, x23, [sp, #48]
   320b0:	stp	x22, x21, [sp, #64]
   320b4:	mov	x29, sp
   320b8:	str	x1, [x8, #1144]
   320bc:	str	x2, [x9, #1152]
   320c0:	bl	a5a0 <xstrdup@plt>
   320c4:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   320c8:	ldr	x8, [x8, #4000]
   320cc:	adrp	x24, 3b000 <plural_table_size@@Base+0x1c00>
   320d0:	mov	w9, #0x1                   	// #1
   320d4:	adrp	x28, 4e000 <formatstring_gfc_internal@@Base+0x10>
   320d8:	adrp	x27, 4e000 <formatstring_gfc_internal@@Base+0x10>
   320dc:	adrp	x23, 4e000 <formatstring_gfc_internal@@Base+0x10>
   320e0:	add	x24, x24, #0x1b0
   320e4:	stp	x0, x9, [x8]
   320e8:	bl	32a90 <desktop_add_default_keywords@@Base+0x8c>
   320ec:	add	w8, w0, #0x1
   320f0:	mov	w25, w0
   320f4:	cmp	w8, #0x7b
   320f8:	b.hi	32448 <desktop_parse@@Base+0x3bc>  // b.pmore
   320fc:	adrp	x11, 3b000 <plural_table_size@@Base+0x1c00>
   32100:	add	x11, x11, #0xb8
   32104:	adr	x9, 32114 <desktop_parse@@Base+0x88>
   32108:	ldrh	w10, [x11, x8, lsl #1]
   3210c:	add	x9, x9, x10, lsl #2
   32110:	br	x9
   32114:	mov	x26, xzr
   32118:	ldr	x8, [x28, #1168]
   3211c:	mov	x21, x26
   32120:	cmp	x26, x8
   32124:	b.cs	32130 <desktop_parse@@Base+0xa4>  // b.hs, b.nlast
   32128:	ldr	x0, [x27, #1160]
   3212c:	b	32144 <desktop_parse@@Base+0xb8>
   32130:	ldr	x0, [x27, #1160]
   32134:	add	x1, x8, #0x64
   32138:	str	x1, [x28, #1168]
   3213c:	bl	a460 <xrealloc@plt>
   32140:	str	x0, [x27, #1160]
   32144:	add	x26, x21, #0x1
   32148:	strb	w25, [x0, x21]
   3214c:	bl	32a90 <desktop_add_default_keywords@@Base+0x8c>
   32150:	sub	w8, w0, #0x2d
   32154:	mov	w25, w0
   32158:	cmp	w8, #0x4d
   3215c:	b.hi	32188 <desktop_parse@@Base+0xfc>  // b.pmore
   32160:	adr	x9, 32118 <desktop_parse@@Base+0x8c>
   32164:	ldrb	w10, [x24, x8]
   32168:	add	x9, x9, x10, lsl #2
   3216c:	br	x9
   32170:	ldr	x8, [x28, #1168]
   32174:	add	x9, x21, #0x1
   32178:	cmp	x9, x8
   3217c:	b.cs	321a0 <desktop_parse@@Base+0x114>  // b.hs, b.nlast
   32180:	ldr	x0, [x27, #1160]
   32184:	b	321b4 <desktop_parse@@Base+0x128>
   32188:	cmp	w25, #0xa
   3218c:	b.eq	32224 <desktop_parse@@Base+0x198>  // b.none
   32190:	cmn	w25, #0x1
   32194:	b.ne	32238 <desktop_parse@@Base+0x1ac>  // b.any
   32198:	mov	w21, wzr
   3219c:	b	32254 <desktop_parse@@Base+0x1c8>
   321a0:	ldr	x0, [x27, #1160]
   321a4:	add	x1, x8, #0x64
   321a8:	str	x1, [x28, #1168]
   321ac:	bl	a460 <xrealloc@plt>
   321b0:	str	x0, [x27, #1160]
   321b4:	add	x20, x21, #0x2
   321b8:	add	x8, x0, x21
   321bc:	mov	w25, wzr
   321c0:	add	x8, x8, #0x1
   321c4:	mov	x26, x20
   321c8:	strb	w25, [x8]
   321cc:	bl	32a90 <desktop_add_default_keywords@@Base+0x8c>
   321d0:	cmn	w0, #0x1
   321d4:	b.eq	3221c <desktop_parse@@Base+0x190>  // b.none
   321d8:	mov	w25, w0
   321dc:	cmp	w0, #0x5d
   321e0:	b.eq	3221c <desktop_parse@@Base+0x190>  // b.none
   321e4:	ldr	x8, [x28, #1168]
   321e8:	cmp	x26, x8
   321ec:	b.cs	321f8 <desktop_parse@@Base+0x16c>  // b.hs, b.nlast
   321f0:	ldr	x0, [x27, #1160]
   321f4:	b	3220c <desktop_parse@@Base+0x180>
   321f8:	ldr	x0, [x27, #1160]
   321fc:	add	x1, x8, #0x64
   32200:	str	x1, [x28, #1168]
   32204:	bl	a460 <xrealloc@plt>
   32208:	str	x0, [x27, #1160]
   3220c:	add	x9, x26, #0x1
   32210:	add	x8, x0, x26
   32214:	mov	x26, x9
   32218:	b	321c8 <desktop_parse@@Base+0x13c>
   3221c:	mov	w21, #0x1                   	// #1
   32220:	b	32254 <desktop_parse@@Base+0x1c8>
   32224:	adrp	x9, 4c000 <plural_table_size@@Base+0x12c00>
   32228:	ldr	x9, [x9, #4000]
   3222c:	ldr	x8, [x9, #8]
   32230:	sub	x8, x8, #0x1
   32234:	str	x8, [x9, #8]
   32238:	ldrsw	x8, [x23, #1176]
   3223c:	mov	w21, wzr
   32240:	add	w9, w8, #0x1
   32244:	str	w9, [x23, #1176]
   32248:	adrp	x9, 4e000 <formatstring_gfc_internal@@Base+0x10>
   3224c:	add	x9, x9, #0x49c
   32250:	strb	w25, [x9, x8]
   32254:	ldr	x8, [x28, #1168]
   32258:	cmp	x26, x8
   3225c:	b.cs	32268 <desktop_parse@@Base+0x1dc>  // b.hs, b.nlast
   32260:	ldr	x0, [x27, #1160]
   32264:	b	3227c <desktop_parse@@Base+0x1f0>
   32268:	ldr	x0, [x27, #1160]
   3226c:	add	x1, x8, #0x64
   32270:	str	x1, [x28, #1168]
   32274:	bl	a460 <xrealloc@plt>
   32278:	str	x0, [x27, #1160]
   3227c:	add	x22, x26, #0x1
   32280:	strb	wzr, [x0, x26]
   32284:	bl	32a90 <desktop_add_default_keywords@@Base+0x8c>
   32288:	cmp	w0, #0x20
   3228c:	b.eq	32284 <desktop_parse@@Base+0x1f8>  // b.none
   32290:	cmn	w0, #0x1
   32294:	b.eq	322b8 <desktop_parse@@Base+0x22c>  // b.none
   32298:	cmp	w0, #0xa
   3229c:	b.eq	322b8 <desktop_parse@@Base+0x22c>  // b.none
   322a0:	ldrsw	x8, [x23, #1176]
   322a4:	add	w9, w8, #0x1
   322a8:	str	w9, [x23, #1176]
   322ac:	adrp	x9, 4e000 <formatstring_gfc_internal@@Base+0x10>
   322b0:	add	x9, x9, #0x49c
   322b4:	strb	w0, [x9, x8]
   322b8:	bl	32a90 <desktop_add_default_keywords@@Base+0x8c>
   322bc:	cmp	w0, #0x3d
   322c0:	b.ne	32360 <desktop_parse@@Base+0x2d4>  // b.any
   322c4:	bl	32a90 <desktop_add_default_keywords@@Base+0x8c>
   322c8:	cmp	w0, #0x20
   322cc:	b.eq	322c4 <desktop_parse@@Base+0x238>  // b.none
   322d0:	cmn	w0, #0x1
   322d4:	b.eq	3230c <desktop_parse@@Base+0x280>  // b.none
   322d8:	cmp	w0, #0xa
   322dc:	b.ne	322f4 <desktop_parse@@Base+0x268>  // b.any
   322e0:	adrp	x9, 4c000 <plural_table_size@@Base+0x12c00>
   322e4:	ldr	x9, [x9, #4000]
   322e8:	ldr	x8, [x9, #8]
   322ec:	sub	x8, x8, #0x1
   322f0:	str	x8, [x9, #8]
   322f4:	ldrsw	x8, [x23, #1176]
   322f8:	add	w9, w8, #0x1
   322fc:	str	w9, [x23, #1176]
   32300:	adrp	x9, 4e000 <formatstring_gfc_internal@@Base+0x10>
   32304:	add	x9, x9, #0x49c
   32308:	strb	w0, [x9, x8]
   3230c:	mov	x26, x22
   32310:	bl	32a90 <desktop_add_default_keywords@@Base+0x8c>
   32314:	ldr	x8, [x28, #1168]
   32318:	cmn	w0, #0x1
   3231c:	b.eq	323d4 <desktop_parse@@Base+0x348>  // b.none
   32320:	mov	w25, w0
   32324:	cmp	w0, #0xa
   32328:	b.eq	323d4 <desktop_parse@@Base+0x348>  // b.none
   3232c:	cmp	x26, x8
   32330:	b.cc	3234c <desktop_parse@@Base+0x2c0>  // b.lo, b.ul, b.last
   32334:	ldr	x0, [x27, #1160]
   32338:	add	x1, x8, #0x64
   3233c:	str	x1, [x28, #1168]
   32340:	bl	a460 <xrealloc@plt>
   32344:	str	x0, [x27, #1160]
   32348:	b	32350 <desktop_parse@@Base+0x2c4>
   3234c:	ldr	x0, [x27, #1160]
   32350:	add	x8, x26, #0x1
   32354:	strb	w25, [x0, x26]
   32358:	mov	x26, x8
   3235c:	b	32310 <desktop_parse@@Base+0x284>
   32360:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   32364:	ldr	x8, [x8, #3736]
   32368:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   3236c:	mov	w2, #0x5                   	// #5
   32370:	mov	x0, xzr
   32374:	ldr	x20, [x8]
   32378:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   3237c:	ldr	x25, [x8, #1152]
   32380:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   32384:	ldr	x8, [x8, #4000]
   32388:	add	x1, x1, #0x264
   3238c:	ldr	x26, [x8, #8]
   32390:	bl	acd0 <dcgettext@plt>
   32394:	ldr	x1, [x27, #1160]
   32398:	bl	aa20 <xasprintf@plt>
   3239c:	mov	x6, x0
   323a0:	mov	w0, wzr
   323a4:	mov	x1, xzr
   323a8:	mov	x2, x25
   323ac:	mov	x3, x26
   323b0:	mov	x4, xzr
   323b4:	mov	w5, wzr
   323b8:	blr	x20
   323bc:	bl	32a90 <desktop_add_default_keywords@@Base+0x8c>
   323c0:	cmn	w0, #0x1
   323c4:	b.eq	320e8 <desktop_parse@@Base+0x5c>  // b.none
   323c8:	cmp	w0, #0xa
   323cc:	b.ne	323bc <desktop_parse@@Base+0x330>  // b.any
   323d0:	b	320e8 <desktop_parse@@Base+0x5c>
   323d4:	cmp	x26, x8
   323d8:	b.cc	323f4 <desktop_parse@@Base+0x368>  // b.lo, b.ul, b.last
   323dc:	ldr	x0, [x27, #1160]
   323e0:	add	x1, x8, #0x64
   323e4:	str	x1, [x28, #1168]
   323e8:	bl	a460 <xrealloc@plt>
   323ec:	str	x0, [x27, #1160]
   323f0:	b	323f8 <desktop_parse@@Base+0x36c>
   323f4:	ldr	x0, [x27, #1160]
   323f8:	add	x1, x26, #0x1
   323fc:	strb	wzr, [x0, x26]
   32400:	bl	ad90 <xmemdup@plt>
   32404:	ldr	x8, [x19]
   32408:	mov	x25, x0
   3240c:	ldr	x8, [x8, #32]
   32410:	cbz	x8, 3243c <desktop_parse@@Base+0x3b0>
   32414:	ldr	x9, [x27, #1160]
   32418:	adrp	x1, 4c000 <plural_table_size@@Base+0x12c00>
   3241c:	ldr	x1, [x1, #4000]
   32420:	cmp	w21, #0x0
   32424:	add	x4, x9, x22
   32428:	add	x9, x9, x20
   3242c:	csel	x3, x9, xzr, ne  // ne = any
   32430:	mov	x0, x19
   32434:	mov	x2, x25
   32438:	blr	x8
   3243c:	mov	x0, x25
   32440:	bl	aa00 <free@plt>
   32444:	b	320e8 <desktop_parse@@Base+0x5c>
   32448:	mov	x20, xzr
   3244c:	mov	w21, wzr
   32450:	add	w8, w25, #0x1
   32454:	cmp	w8, #0x21
   32458:	b.hi	324c8 <desktop_parse@@Base+0x43c>  // b.pmore
   3245c:	mov	w9, #0x1                   	// #1
   32460:	mov	x10, #0x7400                	// #29696
   32464:	lsl	x9, x9, x8
   32468:	movk	x10, #0x2, lsl #32
   3246c:	tst	x9, x10
   32470:	b.eq	324b4 <desktop_parse@@Base+0x428>  // b.none
   32474:	ldr	x8, [x28, #1168]
   32478:	cmp	x20, x8
   3247c:	b.cs	32488 <desktop_parse@@Base+0x3fc>  // b.hs, b.nlast
   32480:	ldr	x0, [x27, #1160]
   32484:	b	3249c <desktop_parse@@Base+0x410>
   32488:	ldr	x0, [x27, #1160]
   3248c:	add	x1, x8, #0x64
   32490:	str	x1, [x28, #1168]
   32494:	bl	a460 <xrealloc@plt>
   32498:	str	x0, [x27, #1160]
   3249c:	add	x8, x20, #0x1
   324a0:	strb	w25, [x0, x20]
   324a4:	mov	x20, x8
   324a8:	bl	32a90 <desktop_add_default_keywords@@Base+0x8c>
   324ac:	mov	w25, w0
   324b0:	b	32450 <desktop_parse@@Base+0x3c4>
   324b4:	mov	w9, #0x1                   	// #1
   324b8:	lsl	x8, x9, x8
   324bc:	mov	w9, #0x801                 	// #2049
   324c0:	tst	x8, x9
   324c4:	b.ne	3259c <desktop_parse@@Base+0x510>  // b.any
   324c8:	mov	w21, #0x1                   	// #1
   324cc:	b	324a8 <desktop_parse@@Base+0x41c>
   324d0:	mov	x20, xzr
   324d4:	bl	32a90 <desktop_add_default_keywords@@Base+0x8c>
   324d8:	cmn	w0, #0x1
   324dc:	b.eq	325f8 <desktop_parse@@Base+0x56c>  // b.none
   324e0:	mov	w25, w0
   324e4:	cmp	w0, #0xa
   324e8:	b.eq	325f8 <desktop_parse@@Base+0x56c>  // b.none
   324ec:	ldr	x8, [x28, #1168]
   324f0:	cmp	x20, x8
   324f4:	b.cs	32500 <desktop_parse@@Base+0x474>  // b.hs, b.nlast
   324f8:	ldr	x0, [x27, #1160]
   324fc:	b	32514 <desktop_parse@@Base+0x488>
   32500:	ldr	x0, [x27, #1160]
   32504:	add	x1, x8, #0x64
   32508:	str	x1, [x28, #1168]
   3250c:	bl	a460 <xrealloc@plt>
   32510:	str	x0, [x27, #1160]
   32514:	add	x8, x20, #0x1
   32518:	strb	w25, [x0, x20]
   3251c:	mov	x20, x8
   32520:	b	324d4 <desktop_parse@@Base+0x448>
   32524:	mov	x21, xzr
   32528:	bl	32a90 <desktop_add_default_keywords@@Base+0x8c>
   3252c:	mov	w25, w0
   32530:	cmn	w0, #0x1
   32534:	b.eq	326c4 <desktop_parse@@Base+0x638>  // b.none
   32538:	cmp	w25, #0xa
   3253c:	b.eq	32670 <desktop_parse@@Base+0x5e4>  // b.none
   32540:	cmp	w25, #0x5d
   32544:	b.eq	326c4 <desktop_parse@@Base+0x638>  // b.none
   32548:	cmp	w25, #0x7f
   3254c:	b.hi	32558 <desktop_parse@@Base+0x4cc>  // b.pmore
   32550:	cmp	w25, #0x5b
   32554:	b.ne	32564 <desktop_parse@@Base+0x4d8>  // b.any
   32558:	mov	w0, w25
   3255c:	bl	abc0 <c_iscntrl@plt>
   32560:	tbz	w0, #0, 326c4 <desktop_parse@@Base+0x638>
   32564:	ldr	x8, [x28, #1168]
   32568:	cmp	x21, x8
   3256c:	b.cs	32578 <desktop_parse@@Base+0x4ec>  // b.hs, b.nlast
   32570:	ldr	x0, [x27, #1160]
   32574:	b	3258c <desktop_parse@@Base+0x500>
   32578:	ldr	x0, [x27, #1160]
   3257c:	add	x1, x8, #0x64
   32580:	str	x1, [x28, #1168]
   32584:	bl	a460 <xrealloc@plt>
   32588:	str	x0, [x27, #1160]
   3258c:	add	x8, x21, #0x1
   32590:	strb	w25, [x0, x21]
   32594:	mov	x21, x8
   32598:	b	32528 <desktop_parse@@Base+0x49c>
   3259c:	tbz	w21, #0, 3260c <desktop_parse@@Base+0x580>
   325a0:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   325a4:	ldr	x8, [x8, #3736]
   325a8:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   325ac:	mov	w2, #0x5                   	// #5
   325b0:	mov	x0, xzr
   325b4:	ldr	x20, [x8]
   325b8:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   325bc:	ldr	x25, [x8, #1152]
   325c0:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   325c4:	ldr	x8, [x8, #4000]
   325c8:	add	x1, x1, #0x27b
   325cc:	ldr	x26, [x8, #8]
   325d0:	bl	acd0 <dcgettext@plt>
   325d4:	mov	x6, x0
   325d8:	mov	w0, wzr
   325dc:	mov	x1, xzr
   325e0:	mov	x2, x25
   325e4:	mov	x3, x26
   325e8:	mov	x4, xzr
   325ec:	mov	w5, wzr
   325f0:	blr	x20
   325f4:	b	320e8 <desktop_parse@@Base+0x5c>
   325f8:	ldr	x8, [x28, #1168]
   325fc:	cmp	x20, x8
   32600:	b.cs	32620 <desktop_parse@@Base+0x594>  // b.hs, b.nlast
   32604:	ldr	x0, [x27, #1160]
   32608:	b	32634 <desktop_parse@@Base+0x5a8>
   3260c:	ldr	x8, [x28, #1168]
   32610:	cmp	x20, x8
   32614:	b.cs	32648 <desktop_parse@@Base+0x5bc>  // b.hs, b.nlast
   32618:	ldr	x0, [x27, #1160]
   3261c:	b	3265c <desktop_parse@@Base+0x5d0>
   32620:	ldr	x0, [x27, #1160]
   32624:	add	x1, x8, #0x64
   32628:	str	x1, [x28, #1168]
   3262c:	bl	a460 <xrealloc@plt>
   32630:	str	x0, [x27, #1160]
   32634:	strb	wzr, [x0, x20]
   32638:	bl	a5a0 <xstrdup@plt>
   3263c:	ldr	x8, [x19]
   32640:	ldr	x8, [x8, #40]
   32644:	b	32794 <desktop_parse@@Base+0x708>
   32648:	ldr	x0, [x27, #1160]
   3264c:	add	x1, x8, #0x64
   32650:	str	x1, [x28, #1168]
   32654:	bl	a460 <xrealloc@plt>
   32658:	str	x0, [x27, #1160]
   3265c:	strb	wzr, [x0, x20]
   32660:	bl	a5a0 <xstrdup@plt>
   32664:	ldr	x8, [x19]
   32668:	ldr	x8, [x8, #48]
   3266c:	b	32794 <desktop_parse@@Base+0x708>
   32670:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   32674:	ldr	x8, [x8, #3736]
   32678:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   3267c:	mov	w2, #0x5                   	// #5
   32680:	mov	x0, xzr
   32684:	ldr	x20, [x8]
   32688:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   3268c:	ldr	x26, [x8, #1152]
   32690:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   32694:	ldr	x8, [x8, #4000]
   32698:	add	x1, x1, #0x230
   3269c:	ldr	x22, [x8, #8]
   326a0:	bl	acd0 <dcgettext@plt>
   326a4:	mov	x6, x0
   326a8:	mov	w0, wzr
   326ac:	mov	x1, xzr
   326b0:	mov	x2, x26
   326b4:	mov	x3, x22
   326b8:	mov	x4, xzr
   326bc:	mov	w5, wzr
   326c0:	blr	x20
   326c4:	mov	w20, wzr
   326c8:	cmn	w25, #0x1
   326cc:	b.eq	32704 <desktop_parse@@Base+0x678>  // b.none
   326d0:	cmp	w25, #0xa
   326d4:	b.eq	32704 <desktop_parse@@Base+0x678>  // b.none
   326d8:	bl	32a90 <desktop_add_default_keywords@@Base+0x8c>
   326dc:	sub	w8, w0, #0x9
   326e0:	mov	w25, w0
   326e4:	cmp	w8, #0x5
   326e8:	b.cc	326c8 <desktop_parse@@Base+0x63c>  // b.lo, b.ul, b.last
   326ec:	cmp	w25, #0x20
   326f0:	b.eq	326c8 <desktop_parse@@Base+0x63c>  // b.none
   326f4:	cmn	w25, #0x1
   326f8:	b.eq	32704 <desktop_parse@@Base+0x678>  // b.none
   326fc:	mov	w20, #0x1                   	// #1
   32700:	b	326c8 <desktop_parse@@Base+0x63c>
   32704:	tbz	w20, #0, 3275c <desktop_parse@@Base+0x6d0>
   32708:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   3270c:	ldr	x8, [x8, #3736]
   32710:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   32714:	mov	w2, #0x5                   	// #5
   32718:	mov	x0, xzr
   3271c:	ldr	x20, [x8]
   32720:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   32724:	ldr	x25, [x8, #1152]
   32728:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   3272c:	ldr	x8, [x8, #4000]
   32730:	add	x1, x1, #0x248
   32734:	ldr	x26, [x8, #8]
   32738:	bl	acd0 <dcgettext@plt>
   3273c:	mov	x6, x0
   32740:	mov	w0, wzr
   32744:	mov	x1, xzr
   32748:	mov	x2, x25
   3274c:	mov	x3, x26
   32750:	mov	x4, xzr
   32754:	mov	w5, wzr
   32758:	blr	x20
   3275c:	ldr	x8, [x28, #1168]
   32760:	cmp	x21, x8
   32764:	b.cs	32770 <desktop_parse@@Base+0x6e4>  // b.hs, b.nlast
   32768:	ldr	x0, [x27, #1160]
   3276c:	b	32784 <desktop_parse@@Base+0x6f8>
   32770:	ldr	x0, [x27, #1160]
   32774:	add	x1, x8, #0x64
   32778:	str	x1, [x28, #1168]
   3277c:	bl	a460 <xrealloc@plt>
   32780:	str	x0, [x27, #1160]
   32784:	strb	wzr, [x0, x21]
   32788:	bl	a5a0 <xstrdup@plt>
   3278c:	ldr	x8, [x19]
   32790:	ldr	x8, [x8, #24]
   32794:	mov	x25, x0
   32798:	cbz	x8, 3243c <desktop_parse@@Base+0x3b0>
   3279c:	mov	x0, x19
   327a0:	mov	x1, x25
   327a4:	blr	x8
   327a8:	b	3243c <desktop_parse@@Base+0x3b0>
   327ac:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   327b0:	str	xzr, [x8, #1144]
   327b4:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   327b8:	str	xzr, [x8, #1152]
   327bc:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   327c0:	ldr	x8, [x8, #4000]
   327c4:	ldp	x20, x19, [sp, #80]
   327c8:	ldp	x22, x21, [sp, #64]
   327cc:	ldp	x24, x23, [sp, #48]
   327d0:	ldp	x26, x25, [sp, #32]
   327d4:	ldp	x28, x27, [sp, #16]
   327d8:	str	xzr, [x8, #8]
   327dc:	ldp	x29, x30, [sp], #96
   327e0:	ret

00000000000327e4 <desktop_escape_string@@Base>:
   327e4:	stp	x29, x30, [sp, #-32]!
   327e8:	stp	x20, x19, [sp, #16]
   327ec:	mov	x29, sp
   327f0:	mov	w19, w1
   327f4:	mov	x20, x0
   327f8:	bl	a0d0 <strlen@plt>
   327fc:	mov	w8, #0x1                   	// #1
   32800:	bfi	x8, x0, #1, #63
   32804:	mov	x0, x8
   32808:	bl	a590 <xmalloc@plt>
   3280c:	ldrb	w8, [x20]
   32810:	cmp	w8, #0x9
   32814:	b.eq	3282c <desktop_escape_string@@Base+0x48>  // b.none
   32818:	cmp	w8, #0x20
   3281c:	b.ne	32844 <desktop_escape_string@@Base+0x60>  // b.any
   32820:	mov	x8, x0
   32824:	mov	w9, #0x735c                	// #29532
   32828:	b	32834 <desktop_escape_string@@Base+0x50>
   3282c:	mov	x8, x0
   32830:	mov	w9, #0x745c                	// #29788
   32834:	strb	wzr, [x8, #2]!
   32838:	add	x20, x20, #0x1
   3283c:	strh	w9, [x0]
   32840:	b	32848 <desktop_escape_string@@Base+0x64>
   32844:	mov	x8, x0
   32848:	mov	w9, #0x6e5c                	// #28252
   3284c:	mov	w10, #0x725c                	// #29276
   32850:	mov	w11, #0x3b5c                	// #15196
   32854:	mov	w12, #0x5c5c                	// #23644
   32858:	ldrb	w13, [x20]
   3285c:	cmp	w13, #0xc
   32860:	b.le	328a0 <desktop_escape_string@@Base+0xbc>
   32864:	cmp	w13, #0xd
   32868:	b.eq	328b8 <desktop_escape_string@@Base+0xd4>  // b.none
   3286c:	cmp	w13, #0x5c
   32870:	b.ne	328e0 <desktop_escape_string@@Base+0xfc>  // b.any
   32874:	tbz	w19, #0, 328c8 <desktop_escape_string@@Base+0xe4>
   32878:	mov	x13, x20
   3287c:	ldrb	w14, [x13, #1]!
   32880:	cmp	w14, #0x3b
   32884:	b.ne	328c8 <desktop_escape_string@@Base+0xe4>  // b.any
   32888:	mov	x14, x8
   3288c:	strb	wzr, [x14, #2]!
   32890:	strh	w11, [x8]
   32894:	mov	x20, x13
   32898:	mov	x8, x14
   3289c:	b	328e4 <desktop_escape_string@@Base+0x100>
   328a0:	cmp	w13, #0xa
   328a4:	b.ne	328dc <desktop_escape_string@@Base+0xf8>  // b.any
   328a8:	mov	x13, x8
   328ac:	strb	wzr, [x13, #2]!
   328b0:	strh	w9, [x8]
   328b4:	b	328d4 <desktop_escape_string@@Base+0xf0>
   328b8:	mov	x13, x8
   328bc:	strb	wzr, [x13, #2]!
   328c0:	strh	w10, [x8]
   328c4:	b	328d4 <desktop_escape_string@@Base+0xf0>
   328c8:	mov	x13, x8
   328cc:	strb	wzr, [x13, #2]!
   328d0:	strh	w12, [x8]
   328d4:	mov	x8, x13
   328d8:	b	328e4 <desktop_escape_string@@Base+0x100>
   328dc:	cbz	w13, 328ec <desktop_escape_string@@Base+0x108>
   328e0:	strb	w13, [x8], #1
   328e4:	add	x20, x20, #0x1
   328e8:	b	32858 <desktop_escape_string@@Base+0x74>
   328ec:	strb	wzr, [x8]
   328f0:	ldp	x20, x19, [sp, #16]
   328f4:	ldp	x29, x30, [sp], #32
   328f8:	ret

00000000000328fc <desktop_unescape_string@@Base>:
   328fc:	stp	x29, x30, [sp, #-32]!
   32900:	str	x19, [sp, #16]
   32904:	mov	x29, sp
   32908:	mov	x19, x0
   3290c:	bl	a0d0 <strlen@plt>
   32910:	add	x0, x0, #0x1
   32914:	bl	a590 <xmalloc@plt>
   32918:	adrp	x9, 3b000 <plural_table_size@@Base+0x1c00>
   3291c:	mov	w8, #0x3b5c                	// #15196
   32920:	add	x9, x9, #0x1fe
   32924:	mov	w10, #0xa                   	// #10
   32928:	mov	w11, #0xd                   	// #13
   3292c:	mov	w12, #0x20                  	// #32
   32930:	mov	w13, #0x9                   	// #9
   32934:	mov	x14, x0
   32938:	ldrb	w15, [x19]
   3293c:	cmp	w15, #0x5c
   32940:	b.eq	32954 <desktop_unescape_string@@Base+0x58>  // b.none
   32944:	cbz	w15, 329b0 <desktop_unescape_string@@Base+0xb4>
   32948:	strb	w15, [x14], #1
   3294c:	add	x19, x19, #0x1
   32950:	b	32938 <desktop_unescape_string@@Base+0x3c>
   32954:	ldrb	w15, [x19, #1]!
   32958:	sub	w16, w15, #0x6e
   3295c:	cmp	w16, #0x6
   32960:	b.hi	3297c <desktop_unescape_string@@Base+0x80>  // b.pmore
   32964:	adr	x17, 32948 <desktop_unescape_string@@Base+0x4c>
   32968:	ldrb	w18, [x9, x16]
   3296c:	add	x17, x17, x18, lsl #2
   32970:	br	x17
   32974:	strb	w10, [x14], #1
   32978:	b	3294c <desktop_unescape_string@@Base+0x50>
   3297c:	cmp	w15, #0x3b
   32980:	b.ne	32944 <desktop_unescape_string@@Base+0x48>  // b.any
   32984:	mov	x15, x14
   32988:	strb	wzr, [x15, #2]!
   3298c:	strh	w8, [x14]
   32990:	mov	x14, x15
   32994:	b	3294c <desktop_unescape_string@@Base+0x50>
   32998:	strb	w11, [x14], #1
   3299c:	b	3294c <desktop_unescape_string@@Base+0x50>
   329a0:	strb	w12, [x14], #1
   329a4:	b	3294c <desktop_unescape_string@@Base+0x50>
   329a8:	strb	w13, [x14], #1
   329ac:	b	3294c <desktop_unescape_string@@Base+0x50>
   329b0:	ldr	x19, [sp, #16]
   329b4:	strb	wzr, [x14]
   329b8:	ldp	x29, x30, [sp], #32
   329bc:	ret

00000000000329c0 <desktop_add_keyword@@Base>:
   329c0:	stp	x29, x30, [sp, #-48]!
   329c4:	str	x21, [sp, #16]
   329c8:	mov	x21, x0
   329cc:	mov	x0, x1
   329d0:	stp	x20, x19, [sp, #32]
   329d4:	mov	x29, sp
   329d8:	mov	w19, w2
   329dc:	mov	x20, x1
   329e0:	bl	a0d0 <strlen@plt>
   329e4:	and	x3, x19, #0x1
   329e8:	mov	x2, x0
   329ec:	mov	x0, x21
   329f0:	mov	x1, x20
   329f4:	ldp	x20, x19, [sp, #32]
   329f8:	ldr	x21, [sp, #16]
   329fc:	ldp	x29, x30, [sp], #48
   32a00:	b	a300 <hash_insert_entry@plt>

0000000000032a04 <desktop_add_default_keywords@@Base>:
   32a04:	stp	x29, x30, [sp, #-32]!
   32a08:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   32a0c:	add	x1, x1, #0x215
   32a10:	mov	w2, #0x4                   	// #4
   32a14:	mov	x3, xzr
   32a18:	str	x19, [sp, #16]
   32a1c:	mov	x29, sp
   32a20:	mov	x19, x0
   32a24:	bl	a300 <hash_insert_entry@plt>
   32a28:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   32a2c:	add	x1, x1, #0x20e
   32a30:	mov	w2, #0xb                   	// #11
   32a34:	mov	x0, x19
   32a38:	mov	x3, xzr
   32a3c:	bl	a300 <hash_insert_entry@plt>
   32a40:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   32a44:	add	x1, x1, #0x21a
   32a48:	mov	w2, #0x7                   	// #7
   32a4c:	mov	x0, x19
   32a50:	mov	x3, xzr
   32a54:	bl	a300 <hash_insert_entry@plt>
   32a58:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   32a5c:	add	x1, x1, #0x222
   32a60:	mov	w2, #0x4                   	// #4
   32a64:	mov	x0, x19
   32a68:	mov	x3, xzr
   32a6c:	bl	a300 <hash_insert_entry@plt>
   32a70:	mov	x0, x19
   32a74:	ldr	x19, [sp, #16]
   32a78:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   32a7c:	add	x1, x1, #0x227
   32a80:	mov	w2, #0x8                   	// #8
   32a84:	mov	w3, #0x1                   	// #1
   32a88:	ldp	x29, x30, [sp], #32
   32a8c:	b	a300 <hash_insert_entry@plt>
   32a90:	stp	x29, x30, [sp, #-16]!
   32a94:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   32a98:	ldrsw	x9, [x8, #1176]
   32a9c:	mov	x29, sp
   32aa0:	cbz	w9, 32abc <desktop_add_default_keywords@@Base+0xb8>
   32aa4:	adrp	x10, 4e000 <formatstring_gfc_internal@@Base+0x10>
   32aa8:	sub	x9, x9, #0x1
   32aac:	add	x10, x10, #0x49c
   32ab0:	ldrb	w0, [x10, x9]
   32ab4:	str	w9, [x8, #1176]
   32ab8:	b	32af0 <desktop_add_default_keywords@@Base+0xec>
   32abc:	bl	32b18 <desktop_add_default_keywords@@Base+0x114>
   32ac0:	cmp	w0, #0xd
   32ac4:	b.ne	32af0 <desktop_add_default_keywords@@Base+0xec>  // b.any
   32ac8:	bl	32b18 <desktop_add_default_keywords@@Base+0x114>
   32acc:	cmn	w0, #0x1
   32ad0:	b.eq	32ae8 <desktop_add_default_keywords@@Base+0xe4>  // b.none
   32ad4:	cmp	w0, #0xa
   32ad8:	b.eq	32af8 <desktop_add_default_keywords@@Base+0xf4>  // b.none
   32adc:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   32ae0:	ldr	x1, [x8, #1144]
   32ae4:	bl	aa10 <ungetc@plt>
   32ae8:	mov	w0, #0xd                   	// #13
   32aec:	b	32b10 <desktop_add_default_keywords@@Base+0x10c>
   32af0:	cmp	w0, #0xa
   32af4:	b.ne	32b10 <desktop_add_default_keywords@@Base+0x10c>  // b.any
   32af8:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   32afc:	ldr	x8, [x8, #4000]
   32b00:	mov	w0, #0xa                   	// #10
   32b04:	ldr	x9, [x8, #8]
   32b08:	add	x9, x9, #0x1
   32b0c:	str	x9, [x8, #8]
   32b10:	ldp	x29, x30, [sp], #16
   32b14:	ret
   32b18:	stp	x29, x30, [sp, #-48]!
   32b1c:	stp	x20, x19, [sp, #32]
   32b20:	adrp	x20, 4e000 <formatstring_gfc_internal@@Base+0x10>
   32b24:	ldr	x0, [x20, #1144]
   32b28:	str	x21, [sp, #16]
   32b2c:	mov	x29, sp
   32b30:	bl	a6e0 <getc@plt>
   32b34:	mov	w19, w0
   32b38:	cmn	w0, #0x1
   32b3c:	b.ne	32bbc <desktop_add_default_keywords@@Base+0x1b8>  // b.any
   32b40:	ldr	x0, [x20, #1144]
   32b44:	bl	af30 <ferror@plt>
   32b48:	cbz	w0, 32bbc <desktop_add_default_keywords@@Base+0x1b8>
   32b4c:	bl	ade0 <__errno_location@plt>
   32b50:	ldr	w0, [x0]
   32b54:	bl	a720 <strerror@plt>
   32b58:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   32b5c:	ldr	x8, [x8, #3736]
   32b60:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
   32b64:	mov	x20, x0
   32b68:	add	x1, x1, #0xb9b
   32b6c:	ldr	x21, [x8]
   32b70:	mov	w2, #0x5                   	// #5
   32b74:	mov	x0, xzr
   32b78:	bl	acd0 <dcgettext@plt>
   32b7c:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   32b80:	ldr	x1, [x8, #1152]
   32b84:	bl	aa20 <xasprintf@plt>
   32b88:	mov	x1, x0
   32b8c:	adrp	x0, 3b000 <plural_table_size@@Base+0x1c00>
   32b90:	add	x0, x0, #0x2a7
   32b94:	mov	x2, x20
   32b98:	bl	aa20 <xasprintf@plt>
   32b9c:	mov	x6, x0
   32ba0:	mov	w0, #0x2                   	// #2
   32ba4:	mov	x1, xzr
   32ba8:	mov	x2, xzr
   32bac:	mov	x3, xzr
   32bb0:	mov	x4, xzr
   32bb4:	mov	w5, wzr
   32bb8:	blr	x21
   32bbc:	mov	w0, w19
   32bc0:	ldp	x20, x19, [sp, #32]
   32bc4:	ldr	x21, [sp, #16]
   32bc8:	ldp	x29, x30, [sp], #48
   32bcc:	ret

0000000000032bd0 <locating_rule_list_locate@@Base>:
   32bd0:	stp	x29, x30, [sp, #-80]!
   32bd4:	stp	x26, x25, [sp, #16]
   32bd8:	stp	x24, x23, [sp, #32]
   32bdc:	stp	x22, x21, [sp, #48]
   32be0:	stp	x20, x19, [sp, #64]
   32be4:	ldr	x8, [x0, #8]
   32be8:	mov	x29, sp
   32bec:	cbz	x8, 32c90 <locating_rule_list_locate@@Base+0xc0>
   32bf0:	mov	x19, x2
   32bf4:	mov	x20, x0
   32bf8:	mov	x21, x1
   32bfc:	mov	x25, xzr
   32c00:	mov	w26, #0x30                  	// #48
   32c04:	ldrb	w8, [x21]
   32c08:	cmp	w8, #0x2f
   32c0c:	b.ne	32c2c <locating_rule_list_locate@@Base+0x5c>  // b.any
   32c10:	ldr	x8, [x20]
   32c14:	mov	x1, x21
   32c18:	mov	x2, x19
   32c1c:	madd	x0, x25, x26, x8
   32c20:	bl	32cb8 <locating_rule_list_locate@@Base+0xe8>
   32c24:	cbz	x0, 32c80 <locating_rule_list_locate@@Base+0xb0>
   32c28:	b	32cb0 <locating_rule_list_locate@@Base+0xe0>
   32c2c:	mov	w0, wzr
   32c30:	bl	ac20 <dir_list_nth@plt>
   32c34:	cbz	x0, 32c80 <locating_rule_list_locate@@Base+0xb0>
   32c38:	mov	w22, #0x1                   	// #1
   32c3c:	mov	x1, x21
   32c40:	mov	x2, xzr
   32c44:	bl	ae50 <xconcatenated_filename@plt>
   32c48:	ldr	x8, [x20]
   32c4c:	mov	x24, x0
   32c50:	mov	x1, x24
   32c54:	mov	x2, x19
   32c58:	madd	x0, x25, x26, x8
   32c5c:	bl	32cb8 <locating_rule_list_locate@@Base+0xe8>
   32c60:	mov	x23, x0
   32c64:	mov	x0, x24
   32c68:	bl	aa00 <free@plt>
   32c6c:	cbnz	x23, 32c94 <locating_rule_list_locate@@Base+0xc4>
   32c70:	mov	w0, w22
   32c74:	bl	ac20 <dir_list_nth@plt>
   32c78:	add	w22, w22, #0x1
   32c7c:	cbnz	x0, 32c3c <locating_rule_list_locate@@Base+0x6c>
   32c80:	ldr	x8, [x20, #8]
   32c84:	add	x25, x25, #0x1
   32c88:	cmp	x25, x8
   32c8c:	b.cc	32c04 <locating_rule_list_locate@@Base+0x34>  // b.lo, b.ul, b.last
   32c90:	mov	x23, xzr
   32c94:	mov	x0, x23
   32c98:	ldp	x20, x19, [sp, #64]
   32c9c:	ldp	x22, x21, [sp, #48]
   32ca0:	ldp	x24, x23, [sp, #32]
   32ca4:	ldp	x26, x25, [sp, #16]
   32ca8:	ldp	x29, x30, [sp], #80
   32cac:	ret
   32cb0:	mov	x23, x0
   32cb4:	b	32c94 <locating_rule_list_locate@@Base+0xc4>
   32cb8:	stp	x29, x30, [sp, #-64]!
   32cbc:	stp	x20, x19, [sp, #48]
   32cc0:	mov	x20, x1
   32cc4:	mov	x19, x0
   32cc8:	stp	x24, x23, [sp, #16]
   32ccc:	stp	x22, x21, [sp, #32]
   32cd0:	mov	x29, sp
   32cd4:	cbz	x2, 32cf0 <locating_rule_list_locate@@Base+0x120>
   32cd8:	ldr	x1, [x19, #8]
   32cdc:	cbz	x1, 32e5c <locating_rule_list_locate@@Base+0x28c>
   32ce0:	mov	x0, x2
   32ce4:	bl	ace0 <c_strcasecmp@plt>
   32ce8:	cbnz	w0, 32e5c <locating_rule_list_locate@@Base+0x28c>
   32cec:	b	32d88 <locating_rule_list_locate@@Base+0x1b8>
   32cf0:	mov	w1, #0x2f                  	// #47
   32cf4:	mov	x0, x20
   32cf8:	bl	a750 <strrchr@plt>
   32cfc:	cmp	x0, #0x0
   32d00:	csel	x0, x20, x0, eq  // eq = none
   32d04:	bl	a5a0 <xstrdup@plt>
   32d08:	mov	x21, x0
   32d0c:	bl	a0d0 <strlen@plt>
   32d10:	cmp	x0, #0x3
   32d14:	b.cc	32d5c <locating_rule_list_locate@@Base+0x18c>  // b.lo, b.ul, b.last
   32d18:	sub	x22, x21, #0x3
   32d1c:	mov	w23, #0x692e                	// #26926
   32d20:	mov	w24, #0x6e                  	// #110
   32d24:	add	x8, x22, x0
   32d28:	ldrh	w9, [x8]
   32d2c:	ldrb	w8, [x8, #2]
   32d30:	eor	w9, w9, w23
   32d34:	eor	w8, w8, w24
   32d38:	orr	w8, w9, w8
   32d3c:	tst	w8, #0xffff
   32d40:	b.ne	32d5c <locating_rule_list_locate@@Base+0x18c>  // b.any
   32d44:	add	x8, x0, x21
   32d48:	mov	x0, x21
   32d4c:	sturb	wzr, [x8, #-3]
   32d50:	bl	a0d0 <strlen@plt>
   32d54:	cmp	x0, #0x2
   32d58:	b.hi	32d24 <locating_rule_list_locate@@Base+0x154>  // b.pmore
   32d5c:	ldr	x22, [x19]
   32d60:	mov	x0, x21
   32d64:	bl	a8f0 <basename@plt>
   32d68:	mov	x1, x0
   32d6c:	mov	w2, #0x1                   	// #1
   32d70:	mov	x0, x22
   32d74:	bl	ab10 <fnmatch@plt>
   32d78:	mov	w22, w0
   32d7c:	mov	x0, x21
   32d80:	bl	aa00 <free@plt>
   32d84:	cbnz	w22, 32e5c <locating_rule_list_locate@@Base+0x28c>
   32d88:	ldr	x8, [x19, #24]
   32d8c:	cbz	x8, 32e20 <locating_rule_list_locate@@Base+0x250>
   32d90:	mov	w2, #0x960                 	// #2400
   32d94:	mov	x0, x20
   32d98:	mov	x1, xzr
   32d9c:	bl	a200 <xmlReadFile@plt>
   32da0:	cbz	x0, 32e28 <locating_rule_list_locate@@Base+0x258>
   32da4:	ldr	x8, [x19, #24]
   32da8:	mov	x21, x0
   32dac:	cbz	x8, 32e18 <locating_rule_list_locate@@Base+0x248>
   32db0:	mov	x22, xzr
   32db4:	mov	x23, xzr
   32db8:	ldr	x24, [x19, #16]
   32dbc:	mov	x0, x21
   32dc0:	bl	adc0 <xmlDocGetRootElement@plt>
   32dc4:	ldr	x1, [x24, x22]
   32dc8:	mov	x20, x0
   32dcc:	cbz	x1, 32de4 <locating_rule_list_locate@@Base+0x214>
   32dd0:	ldr	x8, [x20, #72]
   32dd4:	cbz	x8, 32e04 <locating_rule_list_locate@@Base+0x234>
   32dd8:	ldr	x0, [x8, #16]
   32ddc:	bl	adb0 <xmlStrEqual@plt>
   32de0:	cbz	w0, 32e04 <locating_rule_list_locate@@Base+0x234>
   32de4:	add	x24, x24, x22
   32de8:	ldr	x1, [x24, #8]
   32dec:	cbz	x1, 32dfc <locating_rule_list_locate@@Base+0x22c>
   32df0:	ldr	x0, [x20, #16]
   32df4:	bl	adb0 <xmlStrEqual@plt>
   32df8:	cbz	w0, 32e04 <locating_rule_list_locate@@Base+0x234>
   32dfc:	ldr	x20, [x24, #16]
   32e00:	cbnz	x20, 32e78 <locating_rule_list_locate@@Base+0x2a8>
   32e04:	ldr	x8, [x19, #24]
   32e08:	add	x23, x23, #0x1
   32e0c:	add	x22, x22, #0x18
   32e10:	cmp	x23, x8
   32e14:	b.cc	32db8 <locating_rule_list_locate@@Base+0x1e8>  // b.lo, b.ul, b.last
   32e18:	mov	x0, x21
   32e1c:	bl	a2b0 <xmlFreeDoc@plt>
   32e20:	ldr	x20, [x19, #40]
   32e24:	b	32e60 <locating_rule_list_locate@@Base+0x290>
   32e28:	bl	a2d0 <xmlGetLastError@plt>
   32e2c:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   32e30:	mov	x19, x0
   32e34:	add	x1, x1, #0x29b
   32e38:	mov	w2, #0x5                   	// #5
   32e3c:	mov	x0, xzr
   32e40:	bl	acd0 <dcgettext@plt>
   32e44:	ldr	x4, [x19, #8]
   32e48:	mov	x2, x0
   32e4c:	mov	w0, wzr
   32e50:	mov	w1, wzr
   32e54:	mov	x3, x20
   32e58:	bl	a140 <error@plt>
   32e5c:	mov	x20, xzr
   32e60:	mov	x0, x20
   32e64:	ldp	x20, x19, [sp, #48]
   32e68:	ldp	x22, x21, [sp, #32]
   32e6c:	ldp	x24, x23, [sp, #16]
   32e70:	ldp	x29, x30, [sp], #64
   32e74:	ret
   32e78:	mov	x0, x21
   32e7c:	bl	a2b0 <xmlFreeDoc@plt>
   32e80:	b	32e60 <locating_rule_list_locate@@Base+0x290>

0000000000032e84 <locating_rule_list_add_from_directory@@Base>:
   32e84:	sub	sp, sp, #0xa0
   32e88:	stp	x20, x19, [sp, #144]
   32e8c:	mov	x19, x0
   32e90:	mov	x0, x1
   32e94:	stp	x29, x30, [sp, #64]
   32e98:	stp	x28, x27, [sp, #80]
   32e9c:	stp	x26, x25, [sp, #96]
   32ea0:	stp	x24, x23, [sp, #112]
   32ea4:	stp	x22, x21, [sp, #128]
   32ea8:	add	x29, sp, #0x40
   32eac:	mov	x21, x1
   32eb0:	bl	a290 <opendir@plt>
   32eb4:	cbz	x0, 33350 <locating_rule_list_add_from_directory@@Base+0x4cc>
   32eb8:	mov	x22, x0
   32ebc:	stur	x19, [x29, #-24]
   32ec0:	bl	ade0 <__errno_location@plt>
   32ec4:	mov	x23, x0
   32ec8:	str	wzr, [x0]
   32ecc:	mov	x0, x22
   32ed0:	bl	a680 <readdir@plt>
   32ed4:	cbz	x0, 33330 <locating_rule_list_add_from_directory@@Base+0x4ac>
   32ed8:	mov	w24, #0x6c2e                	// #27694
   32edc:	adrp	x26, 3b000 <plural_table_size@@Base+0x1c00>
   32ee0:	adrp	x25, 3b000 <plural_table_size@@Base+0x1c00>
   32ee4:	adrp	x28, 3b000 <plural_table_size@@Base+0x1c00>
   32ee8:	mov	x19, x0
   32eec:	movk	w24, #0x636f, lsl #16
   32ef0:	add	x26, x26, #0x2ae
   32ef4:	add	x25, x25, #0x317
   32ef8:	add	x28, x28, #0x31e
   32efc:	stp	x22, x21, [sp, #8]
   32f00:	str	x23, [sp]
   32f04:	add	x20, x19, #0x13
   32f08:	mov	x0, x20
   32f0c:	bl	a0d0 <strlen@plt>
   32f10:	cmp	x0, #0x5
   32f14:	b.cc	3331c <locating_rule_list_add_from_directory@@Base+0x498>  // b.lo, b.ul, b.last
   32f18:	add	x8, x19, x0
   32f1c:	ldur	w8, [x8, #15]
   32f20:	cmp	w8, w24
   32f24:	b.ne	3331c <locating_rule_list_add_from_directory@@Base+0x498>  // b.any
   32f28:	mov	x0, x21
   32f2c:	mov	x1, x20
   32f30:	mov	x2, xzr
   32f34:	bl	ae50 <xconcatenated_filename@plt>
   32f38:	mov	w2, #0x960                 	// #2400
   32f3c:	mov	x1, x26
   32f40:	mov	x20, x0
   32f44:	bl	a200 <xmlReadFile@plt>
   32f48:	cbz	x0, 332c0 <locating_rule_list_add_from_directory@@Base+0x43c>
   32f4c:	mov	x27, x0
   32f50:	bl	adc0 <xmlDocGetRootElement@plt>
   32f54:	mov	x19, x0
   32f58:	ldr	x0, [x0, #16]
   32f5c:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   32f60:	add	x1, x1, #0x2cc
   32f64:	bl	adb0 <xmlStrEqual@plt>
   32f68:	cbz	w0, 332e8 <locating_rule_list_add_from_directory@@Base+0x464>
   32f6c:	stp	x20, x27, [sp, #24]
   32f70:	adrp	x22, 4c000 <plural_table_size@@Base+0x12c00>
   32f74:	ldr	x27, [x19, #24]
   32f78:	ldr	x22, [x22, #4024]
   32f7c:	adrp	x19, 3b000 <plural_table_size@@Base+0x1c00>
   32f80:	adrp	x20, 3b000 <plural_table_size@@Base+0x1c00>
   32f84:	add	x19, x19, #0x302
   32f88:	add	x20, x20, #0x30f
   32f8c:	cbz	x27, 33298 <locating_rule_list_add_from_directory@@Base+0x414>
   32f90:	ldr	x0, [x27, #16]
   32f94:	mov	x1, x19
   32f98:	bl	adb0 <xmlStrEqual@plt>
   32f9c:	cbz	w0, 33290 <locating_rule_list_add_from_directory@@Base+0x40c>
   32fa0:	mov	x0, x27
   32fa4:	mov	x1, x20
   32fa8:	bl	a230 <xmlHasProp@plt>
   32fac:	cbz	x0, 33014 <locating_rule_list_add_from_directory@@Base+0x190>
   32fb0:	mov	x0, x27
   32fb4:	mov	x1, x20
   32fb8:	bl	a480 <xmlGetProp@plt>
   32fbc:	mov	x19, x0
   32fc0:	bl	a5a0 <xstrdup@plt>
   32fc4:	ldr	x8, [x22]
   32fc8:	mov	x20, x0
   32fcc:	mov	x0, x19
   32fd0:	blr	x8
   32fd4:	adrp	x19, 37000 <get_search_path@@Base+0xb4c>
   32fd8:	add	x19, x19, #0xe6f
   32fdc:	mov	x0, x27
   32fe0:	mov	x1, x19
   32fe4:	bl	a230 <xmlHasProp@plt>
   32fe8:	cbz	x0, 33048 <locating_rule_list_add_from_directory@@Base+0x1c4>
   32fec:	mov	x0, x27
   32ff0:	mov	x1, x19
   32ff4:	bl	a480 <xmlGetProp@plt>
   32ff8:	mov	x19, x0
   32ffc:	bl	a5a0 <xstrdup@plt>
   33000:	ldr	x8, [x22]
   33004:	stur	x0, [x29, #-16]
   33008:	mov	x0, x19
   3300c:	blr	x8
   33010:	b	3304c <locating_rule_list_add_from_directory@@Base+0x1c8>
   33014:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   33018:	mov	w2, #0x5                   	// #5
   3301c:	add	x1, x1, #0x32b
   33020:	bl	acd0 <dcgettext@plt>
   33024:	ldr	x3, [x27, #16]
   33028:	mov	x2, x0
   3302c:	mov	w0, wzr
   33030:	mov	w1, wzr
   33034:	mov	x4, x20
   33038:	bl	a140 <error@plt>
   3303c:	ldr	x0, [sp, #32]
   33040:	bl	a2b0 <xmlFreeDoc@plt>
   33044:	b	33290 <locating_rule_list_add_from_directory@@Base+0x40c>
   33048:	stur	xzr, [x29, #-16]
   3304c:	mov	x0, x27
   33050:	mov	x1, x25
   33054:	bl	a230 <xmlHasProp@plt>
   33058:	stur	x20, [x29, #-8]
   3305c:	cbz	x0, 33098 <locating_rule_list_add_from_directory@@Base+0x214>
   33060:	mov	x0, x27
   33064:	mov	x1, x25
   33068:	bl	a480 <xmlGetProp@plt>
   3306c:	mov	x20, x0
   33070:	bl	a5a0 <xstrdup@plt>
   33074:	ldr	x8, [x22]
   33078:	mov	x19, x0
   3307c:	mov	x0, x20
   33080:	ldur	x20, [x29, #-24]
   33084:	blr	x8
   33088:	mov	x26, xzr
   3308c:	mov	x23, xzr
   33090:	mov	x21, xzr
   33094:	b	33220 <locating_rule_list_add_from_directory@@Base+0x39c>
   33098:	ldr	x20, [x27, #24]
   3309c:	cbz	x20, 3320c <locating_rule_list_add_from_directory@@Base+0x388>
   330a0:	mov	x21, xzr
   330a4:	mov	x23, xzr
   330a8:	mov	x26, xzr
   330ac:	ldr	x0, [x20, #16]
   330b0:	mov	x1, x28
   330b4:	bl	adb0 <xmlStrEqual@plt>
   330b8:	cbz	w0, 33200 <locating_rule_list_add_from_directory@@Base+0x37c>
   330bc:	mov	x0, x20
   330c0:	mov	x1, x25
   330c4:	bl	a230 <xmlHasProp@plt>
   330c8:	cbz	x0, 3310c <locating_rule_list_add_from_directory@@Base+0x288>
   330cc:	adrp	x19, 38000 <get_search_path@@Base+0x1b4c>
   330d0:	add	x19, x19, #0x78e
   330d4:	mov	x0, x20
   330d8:	mov	x1, x19
   330dc:	bl	a230 <xmlHasProp@plt>
   330e0:	cbz	x0, 33138 <locating_rule_list_add_from_directory@@Base+0x2b4>
   330e4:	mov	x0, x20
   330e8:	mov	x1, x19
   330ec:	bl	a480 <xmlGetProp@plt>
   330f0:	mov	x24, x0
   330f4:	bl	a5a0 <xstrdup@plt>
   330f8:	ldr	x8, [x22]
   330fc:	mov	x19, x0
   33100:	mov	x0, x24
   33104:	blr	x8
   33108:	b	3313c <locating_rule_list_add_from_directory@@Base+0x2b8>
   3310c:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   33110:	mov	w2, #0x5                   	// #5
   33114:	add	x1, x1, #0x32b
   33118:	bl	acd0 <dcgettext@plt>
   3311c:	ldr	x3, [x20, #16]
   33120:	mov	x2, x0
   33124:	mov	w0, wzr
   33128:	mov	w1, wzr
   3312c:	mov	x4, x25
   33130:	bl	a140 <error@plt>
   33134:	b	33200 <locating_rule_list_add_from_directory@@Base+0x37c>
   33138:	mov	x19, xzr
   3313c:	adrp	x24, 3b000 <plural_table_size@@Base+0x1c00>
   33140:	add	x24, x24, #0x348
   33144:	mov	x0, x20
   33148:	mov	x1, x24
   3314c:	mov	x25, x28
   33150:	bl	a230 <xmlHasProp@plt>
   33154:	cbz	x0, 33180 <locating_rule_list_add_from_directory@@Base+0x2fc>
   33158:	mov	x0, x20
   3315c:	mov	x1, x24
   33160:	bl	a480 <xmlGetProp@plt>
   33164:	mov	x28, x0
   33168:	bl	a5a0 <xstrdup@plt>
   3316c:	ldr	x8, [x22]
   33170:	mov	x24, x0
   33174:	mov	x0, x28
   33178:	blr	x8
   3317c:	b	33184 <locating_rule_list_add_from_directory@@Base+0x300>
   33180:	mov	x24, xzr
   33184:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   33188:	mov	x0, x20
   3318c:	add	x1, x1, #0x317
   33190:	mov	x28, x22
   33194:	bl	a480 <xmlGetProp@plt>
   33198:	mov	x22, x0
   3319c:	bl	a5a0 <xstrdup@plt>
   331a0:	ldr	x8, [x28]
   331a4:	mov	x28, x0
   331a8:	mov	x0, x22
   331ac:	blr	x8
   331b0:	cmp	x23, x21
   331b4:	b.ne	331d8 <locating_rule_list_add_from_directory@@Base+0x354>  // b.any
   331b8:	mov	w22, #0x1                   	// #1
   331bc:	bfi	x22, x21, #1, #63
   331c0:	add	x8, x22, x22, lsl #1
   331c4:	lsl	x1, x8, #3
   331c8:	mov	x0, x26
   331cc:	bl	a460 <xrealloc@plt>
   331d0:	mov	x26, x0
   331d4:	mov	x21, x22
   331d8:	adrp	x22, 4c000 <plural_table_size@@Base+0x12c00>
   331dc:	ldr	x22, [x22, #4024]
   331e0:	mov	w8, #0x18                  	// #24
   331e4:	madd	x8, x23, x8, x26
   331e8:	str	x28, [x8, #16]
   331ec:	mov	x28, x25
   331f0:	adrp	x25, 3b000 <plural_table_size@@Base+0x1c00>
   331f4:	add	x23, x23, #0x1
   331f8:	add	x25, x25, #0x317
   331fc:	stp	x19, x24, [x8]
   33200:	ldr	x20, [x20, #48]
   33204:	cbnz	x20, 330ac <locating_rule_list_add_from_directory@@Base+0x228>
   33208:	b	33218 <locating_rule_list_add_from_directory@@Base+0x394>
   3320c:	mov	x26, xzr
   33210:	mov	x23, xzr
   33214:	mov	x21, xzr
   33218:	ldur	x20, [x29, #-24]
   3321c:	mov	x19, xzr
   33220:	ldp	x8, x9, [x20, #8]
   33224:	cmp	x8, x9
   33228:	b.ne	33254 <locating_rule_list_add_from_directory@@Base+0x3d0>  // b.any
   3322c:	mov	w9, #0x1                   	// #1
   33230:	ldr	x0, [x20]
   33234:	bfi	x9, x8, #1, #63
   33238:	add	x8, x9, x9, lsl #1
   3323c:	lsl	x1, x8, #4
   33240:	str	x9, [x20, #16]
   33244:	bl	a460 <xrealloc@plt>
   33248:	ldr	x8, [x20, #8]
   3324c:	str	x0, [x20]
   33250:	b	33258 <locating_rule_list_add_from_directory@@Base+0x3d4>
   33254:	ldr	x0, [x20]
   33258:	add	x9, x8, #0x1
   3325c:	str	x9, [x20, #8]
   33260:	ldur	x9, [x29, #-8]
   33264:	mov	w10, #0x30                  	// #48
   33268:	madd	x8, x8, x10, x0
   3326c:	str	x19, [x8, #40]
   33270:	str	x9, [x8]
   33274:	ldur	x9, [x29, #-16]
   33278:	adrp	x19, 3b000 <plural_table_size@@Base+0x1c00>
   3327c:	adrp	x20, 3b000 <plural_table_size@@Base+0x1c00>
   33280:	add	x19, x19, #0x302
   33284:	add	x20, x20, #0x30f
   33288:	stp	x9, x26, [x8, #8]
   3328c:	stp	x23, x21, [x8, #24]
   33290:	ldr	x27, [x27, #48]
   33294:	cbnz	x27, 32f90 <locating_rule_list_add_from_directory@@Base+0x10c>
   33298:	ldr	x0, [sp, #32]
   3329c:	bl	a2b0 <xmlFreeDoc@plt>
   332a0:	ldp	x22, x21, [sp, #8]
   332a4:	ldr	x23, [sp]
   332a8:	ldr	x20, [sp, #24]
   332ac:	mov	w24, #0x6c2e                	// #27694
   332b0:	adrp	x26, 3b000 <plural_table_size@@Base+0x1c00>
   332b4:	movk	w24, #0x636f, lsl #16
   332b8:	add	x26, x26, #0x2ae
   332bc:	b	33314 <locating_rule_list_add_from_directory@@Base+0x490>
   332c0:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   332c4:	mov	w2, #0x5                   	// #5
   332c8:	add	x1, x1, #0x2b4
   332cc:	bl	acd0 <dcgettext@plt>
   332d0:	mov	x2, x0
   332d4:	mov	w0, wzr
   332d8:	mov	w1, wzr
   332dc:	mov	x3, x20
   332e0:	bl	a140 <error@plt>
   332e4:	b	33314 <locating_rule_list_add_from_directory@@Base+0x490>
   332e8:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   332ec:	mov	w2, #0x5                   	// #5
   332f0:	mov	x0, xzr
   332f4:	add	x1, x1, #0x2da
   332f8:	bl	acd0 <dcgettext@plt>
   332fc:	mov	x2, x0
   33300:	mov	w0, wzr
   33304:	mov	w1, wzr
   33308:	bl	a140 <error@plt>
   3330c:	mov	x0, x27
   33310:	bl	a2b0 <xmlFreeDoc@plt>
   33314:	mov	x0, x20
   33318:	bl	aa00 <free@plt>
   3331c:	mov	x0, x22
   33320:	str	wzr, [x23]
   33324:	bl	a680 <readdir@plt>
   33328:	mov	x19, x0
   3332c:	cbnz	x0, 32f04 <locating_rule_list_add_from_directory@@Base+0x80>
   33330:	ldr	w8, [x23]
   33334:	cbz	w8, 33340 <locating_rule_list_add_from_directory@@Base+0x4bc>
   33338:	mov	w0, wzr
   3333c:	b	33350 <locating_rule_list_add_from_directory@@Base+0x4cc>
   33340:	mov	x0, x22
   33344:	bl	a700 <closedir@plt>
   33348:	cmp	w0, #0x0
   3334c:	cset	w0, eq  // eq = none
   33350:	ldp	x20, x19, [sp, #144]
   33354:	ldp	x22, x21, [sp, #128]
   33358:	ldp	x24, x23, [sp, #112]
   3335c:	ldp	x26, x25, [sp, #96]
   33360:	ldp	x28, x27, [sp, #80]
   33364:	ldp	x29, x30, [sp, #64]
   33368:	add	sp, sp, #0xa0
   3336c:	ret

0000000000033370 <locating_rule_list_alloc@@Base>:
   33370:	stp	x29, x30, [sp, #-16]!
   33374:	mov	w0, #0x51ad                	// #20909
   33378:	mov	x29, sp
   3337c:	bl	a4a0 <xmlCheckVersion@plt>
   33380:	mov	w0, #0x1                   	// #1
   33384:	mov	w1, #0x18                  	// #24
   33388:	ldp	x29, x30, [sp], #16
   3338c:	b	aea0 <xcalloc@plt>

0000000000033390 <locating_rule_list_destroy@@Base>:
   33390:	stp	x29, x30, [sp, #-96]!
   33394:	str	x27, [sp, #16]
   33398:	stp	x26, x25, [sp, #32]
   3339c:	stp	x24, x23, [sp, #48]
   333a0:	stp	x22, x21, [sp, #64]
   333a4:	stp	x20, x19, [sp, #80]
   333a8:	ldp	x20, x8, [x0]
   333ac:	mov	x29, sp
   333b0:	sub	x22, x8, #0x1
   333b4:	str	x22, [x0, #8]
   333b8:	cbz	x8, 33444 <locating_rule_list_destroy@@Base+0xb4>
   333bc:	mov	x19, x0
   333c0:	mov	w21, #0x30                  	// #48
   333c4:	madd	x23, x22, x21, x20
   333c8:	ldr	x0, [x23, #16]!
   333cc:	mov	x24, x23
   333d0:	ldr	x8, [x24, #8]!
   333d4:	cbz	x8, 33414 <locating_rule_list_destroy@@Base+0x84>
   333d8:	mov	x25, xzr
   333dc:	mov	x26, xzr
   333e0:	add	x27, x0, x25
   333e4:	ldr	x0, [x27]
   333e8:	bl	aa00 <free@plt>
   333ec:	ldr	x0, [x27, #8]
   333f0:	bl	aa00 <free@plt>
   333f4:	ldr	x0, [x27, #16]
   333f8:	bl	aa00 <free@plt>
   333fc:	ldr	x8, [x24]
   33400:	ldr	x0, [x23]
   33404:	add	x26, x26, #0x1
   33408:	add	x25, x25, #0x18
   3340c:	cmp	x26, x8
   33410:	b.cc	333e0 <locating_rule_list_destroy@@Base+0x50>  // b.lo, b.ul, b.last
   33414:	bl	aa00 <free@plt>
   33418:	madd	x20, x22, x21, x20
   3341c:	ldr	x0, [x20, #8]
   33420:	bl	aa00 <free@plt>
   33424:	ldr	x0, [x20]
   33428:	bl	aa00 <free@plt>
   3342c:	ldr	x0, [x20, #40]
   33430:	bl	aa00 <free@plt>
   33434:	ldp	x20, x8, [x19]
   33438:	sub	x22, x8, #0x1
   3343c:	str	x22, [x19, #8]
   33440:	cbnz	x8, 333c4 <locating_rule_list_destroy@@Base+0x34>
   33444:	mov	x0, x20
   33448:	ldp	x20, x19, [sp, #80]
   3344c:	ldp	x22, x21, [sp, #64]
   33450:	ldp	x24, x23, [sp, #48]
   33454:	ldp	x26, x25, [sp, #32]
   33458:	ldr	x27, [sp, #16]
   3345c:	ldp	x29, x30, [sp], #96
   33460:	b	aa00 <free@plt>

0000000000033464 <locating_rule_list_free@@Base>:
   33464:	stp	x29, x30, [sp, #-32]!
   33468:	str	x19, [sp, #16]
   3346c:	mov	x19, x0
   33470:	mov	x29, sp
   33474:	cbz	x0, 33480 <locating_rule_list_free@@Base+0x1c>
   33478:	mov	x0, x19
   3347c:	bl	a620 <locating_rule_list_destroy@plt>
   33480:	mov	x0, x19
   33484:	ldr	x19, [sp, #16]
   33488:	ldp	x29, x30, [sp], #32
   3348c:	b	aa00 <free@plt>

0000000000033490 <its_translate_rule_eval@@Base>:
   33490:	stp	x29, x30, [sp, #-48]!
   33494:	stp	x22, x21, [sp, #16]
   33498:	stp	x20, x19, [sp, #32]
   3349c:	mov	x20, x1
   334a0:	mov	x22, x0
   334a4:	mov	w0, #0x1                   	// #1
   334a8:	mov	w1, #0x18                  	// #24
   334ac:	mov	x29, sp
   334b0:	mov	x21, x2
   334b4:	bl	aea0 <xcalloc@plt>
   334b8:	ldr	w8, [x21, #8]
   334bc:	mov	x19, x0
   334c0:	cmp	w8, #0x1
   334c4:	b.eq	334fc <its_translate_rule_eval@@Base+0x6c>  // b.none
   334c8:	cmp	w8, #0x2
   334cc:	b.ne	335f8 <its_translate_rule_eval@@Base+0x168>  // b.any
   334d0:	adrp	x2, 3b000 <plural_table_size@@Base+0x1c00>
   334d4:	add	x2, x2, #0x352
   334d8:	mov	x0, x20
   334dc:	mov	x1, x21
   334e0:	bl	3360c <its_translate_rule_eval@@Base+0x17c>
   334e4:	cbnz	x0, 33588 <its_translate_rule_eval@@Base+0xf8>
   334e8:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   334ec:	adrp	x2, 37000 <get_search_path@@Base+0xb4c>
   334f0:	add	x1, x1, #0x352
   334f4:	add	x2, x2, #0xb47
   334f8:	b	335f0 <its_translate_rule_eval@@Base+0x160>
   334fc:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   33500:	adrp	x2, 3b000 <plural_table_size@@Base+0x1c00>
   33504:	add	x1, x1, #0x352
   33508:	add	x2, x2, #0x35c
   3350c:	mov	x0, x21
   33510:	bl	a270 <xmlHasNsProp@plt>
   33514:	cbz	x0, 33570 <its_translate_rule_eval@@Base+0xe0>
   33518:	adrp	x20, 3b000 <plural_table_size@@Base+0x1c00>
   3351c:	add	x20, x20, #0x352
   33520:	adrp	x2, 3b000 <plural_table_size@@Base+0x1c00>
   33524:	add	x2, x2, #0x35c
   33528:	mov	x0, x21
   3352c:	mov	x1, x20
   33530:	bl	aec0 <xmlGetNsProp@plt>
   33534:	mov	x21, x0
   33538:	bl	a5a0 <xstrdup@plt>
   3353c:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   33540:	ldr	x8, [x8, #4024]
   33544:	mov	x22, x0
   33548:	mov	x0, x21
   3354c:	ldr	x8, [x8]
   33550:	blr	x8
   33554:	mov	x0, x19
   33558:	mov	x1, x20
   3355c:	mov	x2, x22
   33560:	bl	33720 <its_translate_rule_eval@@Base+0x290>
   33564:	mov	x0, x22
   33568:	bl	aa00 <free@plt>
   3356c:	b	335f8 <its_translate_rule_eval@@Base+0x168>
   33570:	adrp	x2, 3b000 <plural_table_size@@Base+0x1c00>
   33574:	add	x2, x2, #0x352
   33578:	mov	x0, x20
   3357c:	mov	x1, x21
   33580:	bl	3360c <its_translate_rule_eval@@Base+0x17c>
   33584:	cbz	x0, 335a0 <its_translate_rule_eval@@Base+0x110>
   33588:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   3358c:	mov	x2, x0
   33590:	add	x1, x1, #0x352
   33594:	mov	x0, x19
   33598:	bl	33674 <its_translate_rule_eval@@Base+0x1e4>
   3359c:	b	335f8 <its_translate_rule_eval@@Base+0x168>
   335a0:	ldr	x2, [x21, #40]
   335a4:	cbz	x2, 335e0 <its_translate_rule_eval@@Base+0x150>
   335a8:	ldr	w8, [x2, #8]
   335ac:	cmp	w8, #0x1
   335b0:	b.ne	335e0 <its_translate_rule_eval@@Base+0x150>  // b.any
   335b4:	mov	x0, x22
   335b8:	mov	x1, x20
   335bc:	bl	a980 <its_translate_rule_eval@plt>
   335c0:	mov	x20, x0
   335c4:	mov	x0, x19
   335c8:	mov	x1, x20
   335cc:	bl	337a4 <its_translate_rule_eval@@Base+0x314>
   335d0:	mov	x0, x20
   335d4:	bl	33888 <its_translate_rule_eval@@Base+0x3f8>
   335d8:	mov	x0, x20
   335dc:	b	33568 <its_translate_rule_eval@@Base+0xd8>
   335e0:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   335e4:	adrp	x2, 37000 <get_search_path@@Base+0xb4c>
   335e8:	add	x1, x1, #0x352
   335ec:	add	x2, x2, #0xb4f
   335f0:	mov	x0, x19
   335f4:	bl	33720 <its_translate_rule_eval@@Base+0x290>
   335f8:	mov	x0, x19
   335fc:	ldp	x20, x19, [sp, #32]
   33600:	ldp	x22, x21, [sp, #16]
   33604:	ldp	x29, x30, [sp], #48
   33608:	ret
   3360c:	stp	x29, x30, [sp, #-16]!
   33610:	ldr	x8, [x1]
   33614:	mov	x29, sp
   33618:	cmp	x8, #0x1
   3361c:	b.lt	33648 <its_translate_rule_eval@@Base+0x1b8>  // b.tstop
   33620:	ldr	x9, [x0, #8]
   33624:	cmp	x8, x9
   33628:	b.hi	33654 <its_translate_rule_eval@@Base+0x1c4>  // b.pmore
   3362c:	ldr	x9, [x0]
   33630:	mov	w10, #0x18                  	// #24
   33634:	mov	x1, x2
   33638:	madd	x8, x8, x10, x9
   3363c:	sub	x0, x8, #0x18
   33640:	ldp	x29, x30, [sp], #16
   33644:	b	34d08 <its_merge_context_free@@Base+0x30>
   33648:	mov	x0, xzr
   3364c:	ldp	x29, x30, [sp], #16
   33650:	ret
   33654:	adrp	x0, 3b000 <plural_table_size@@Base+0x1c00>
   33658:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   3365c:	adrp	x3, 3b000 <plural_table_size@@Base+0x1c00>
   33660:	add	x0, x0, #0x401
   33664:	add	x1, x1, #0x417
   33668:	add	x3, x3, #0x41d
   3366c:	mov	w2, #0xd7                  	// #215
   33670:	bl	add0 <__assert_fail@plt>
   33674:	stp	x29, x30, [sp, #-64]!
   33678:	stp	x24, x23, [sp, #16]
   3367c:	stp	x22, x21, [sp, #32]
   33680:	stp	x20, x19, [sp, #48]
   33684:	ldr	x23, [x0, #8]
   33688:	mov	x19, x2
   3368c:	mov	x20, x0
   33690:	mov	x21, x1
   33694:	mov	x29, sp
   33698:	cbz	x23, 336ec <its_translate_rule_eval@@Base+0x25c>
   3369c:	ldr	x8, [x20]
   336a0:	mov	x22, xzr
   336a4:	add	x24, x8, #0x8
   336a8:	ldur	x0, [x24, #-8]
   336ac:	mov	x1, x21
   336b0:	bl	a8d0 <strcmp@plt>
   336b4:	cbz	w0, 336cc <its_translate_rule_eval@@Base+0x23c>
   336b8:	add	x22, x22, #0x1
   336bc:	cmp	x22, x23
   336c0:	add	x24, x24, #0x10
   336c4:	b.cc	336a8 <its_translate_rule_eval@@Base+0x218>  // b.lo, b.ul, b.last
   336c8:	b	336e4 <its_translate_rule_eval@@Base+0x254>
   336cc:	ldr	x0, [x24]
   336d0:	bl	aa00 <free@plt>
   336d4:	mov	x0, x19
   336d8:	bl	a5a0 <xstrdup@plt>
   336dc:	str	x0, [x24]
   336e0:	ldr	x23, [x20, #8]
   336e4:	cmp	x22, x23
   336e8:	b.ne	3370c <its_translate_rule_eval@@Base+0x27c>  // b.any
   336ec:	mov	x0, x20
   336f0:	mov	x1, x21
   336f4:	mov	x2, x19
   336f8:	ldp	x20, x19, [sp, #48]
   336fc:	ldp	x22, x21, [sp, #32]
   33700:	ldp	x24, x23, [sp, #16]
   33704:	ldp	x29, x30, [sp], #64
   33708:	b	33720 <its_translate_rule_eval@@Base+0x290>
   3370c:	ldp	x20, x19, [sp, #48]
   33710:	ldp	x22, x21, [sp, #32]
   33714:	ldp	x24, x23, [sp, #16]
   33718:	ldp	x29, x30, [sp], #64
   3371c:	ret
   33720:	stp	x29, x30, [sp, #-48]!
   33724:	stp	x20, x19, [sp, #32]
   33728:	mov	x19, x0
   3372c:	mov	x0, x1
   33730:	str	x21, [sp, #16]
   33734:	mov	x29, sp
   33738:	mov	x21, x2
   3373c:	bl	a5a0 <xstrdup@plt>
   33740:	mov	x20, x0
   33744:	mov	x0, x21
   33748:	bl	a5a0 <xstrdup@plt>
   3374c:	ldp	x8, x9, [x19, #8]
   33750:	mov	x21, x0
   33754:	cmp	x8, x9
   33758:	b.ne	33780 <its_translate_rule_eval@@Base+0x2f0>  // b.any
   3375c:	ldr	x0, [x19]
   33760:	mov	w9, #0x1                   	// #1
   33764:	bfi	x9, x8, #1, #63
   33768:	lsl	x1, x9, #4
   3376c:	str	x9, [x19, #16]
   33770:	bl	a460 <xrealloc@plt>
   33774:	ldr	x8, [x19, #8]
   33778:	str	x0, [x19]
   3377c:	b	33784 <its_translate_rule_eval@@Base+0x2f4>
   33780:	ldr	x0, [x19]
   33784:	add	x9, x8, #0x1
   33788:	add	x8, x0, x8, lsl #4
   3378c:	str	x9, [x19, #8]
   33790:	stp	x20, x21, [x8]
   33794:	ldp	x20, x19, [sp, #32]
   33798:	ldr	x21, [sp, #16]
   3379c:	ldp	x29, x30, [sp], #48
   337a0:	ret
   337a4:	stp	x29, x30, [sp, #-96]!
   337a8:	stp	x28, x27, [sp, #16]
   337ac:	stp	x26, x25, [sp, #32]
   337b0:	stp	x24, x23, [sp, #48]
   337b4:	stp	x22, x21, [sp, #64]
   337b8:	stp	x20, x19, [sp, #80]
   337bc:	ldr	x8, [x1, #8]
   337c0:	mov	x29, sp
   337c4:	cbz	x8, 3386c <its_translate_rule_eval@@Base+0x3dc>
   337c8:	mov	x19, x1
   337cc:	mov	x20, x0
   337d0:	mov	x23, xzr
   337d4:	ldr	x8, [x19]
   337d8:	ldr	x26, [x20, #8]
   337dc:	add	x24, x8, x23, lsl #4
   337e0:	cbz	x26, 33850 <its_translate_rule_eval@@Base+0x3c0>
   337e4:	ldr	x8, [x20]
   337e8:	ldr	x21, [x24]
   337ec:	mov	x25, xzr
   337f0:	add	x28, x24, #0x8
   337f4:	add	x27, x8, #0x8
   337f8:	ldur	x0, [x27, #-8]
   337fc:	mov	x1, x21
   33800:	bl	a8d0 <strcmp@plt>
   33804:	cbnz	w0, 3381c <its_translate_rule_eval@@Base+0x38c>
   33808:	ldr	x22, [x27]
   3380c:	ldr	x1, [x28]
   33810:	mov	x0, x22
   33814:	bl	a8d0 <strcmp@plt>
   33818:	cbnz	w0, 33830 <its_translate_rule_eval@@Base+0x3a0>
   3381c:	add	x25, x25, #0x1
   33820:	cmp	x25, x26
   33824:	add	x27, x27, #0x10
   33828:	b.cc	337f8 <its_translate_rule_eval@@Base+0x368>  // b.lo, b.ul, b.last
   3382c:	b	33848 <its_translate_rule_eval@@Base+0x3b8>
   33830:	mov	x0, x22
   33834:	bl	aa00 <free@plt>
   33838:	ldr	x0, [x28]
   3383c:	bl	a5a0 <xstrdup@plt>
   33840:	str	x0, [x27]
   33844:	ldr	x26, [x20, #8]
   33848:	cmp	x25, x26
   3384c:	b.ne	3385c <its_translate_rule_eval@@Base+0x3cc>  // b.any
   33850:	ldp	x1, x2, [x24]
   33854:	mov	x0, x20
   33858:	bl	33720 <its_translate_rule_eval@@Base+0x290>
   3385c:	ldr	x8, [x19, #8]
   33860:	add	x23, x23, #0x1
   33864:	cmp	x23, x8
   33868:	b.cc	337d4 <its_translate_rule_eval@@Base+0x344>  // b.lo, b.ul, b.last
   3386c:	ldp	x20, x19, [sp, #80]
   33870:	ldp	x22, x21, [sp, #64]
   33874:	ldp	x24, x23, [sp, #48]
   33878:	ldp	x26, x25, [sp, #32]
   3387c:	ldp	x28, x27, [sp, #16]
   33880:	ldp	x29, x30, [sp], #96
   33884:	ret
   33888:	stp	x29, x30, [sp, #-48]!
   3388c:	str	x21, [sp, #16]
   33890:	stp	x20, x19, [sp, #32]
   33894:	mov	x19, x0
   33898:	ldp	x0, x8, [x0]
   3389c:	mov	x29, sp
   338a0:	cbz	x8, 338d8 <its_translate_rule_eval@@Base+0x448>
   338a4:	mov	x20, xzr
   338a8:	mov	x21, xzr
   338ac:	ldr	x0, [x0, x20]
   338b0:	bl	aa00 <free@plt>
   338b4:	ldr	x8, [x19]
   338b8:	add	x8, x8, x20
   338bc:	ldr	x0, [x8, #8]
   338c0:	bl	aa00 <free@plt>
   338c4:	ldp	x0, x8, [x19]
   338c8:	add	x21, x21, #0x1
   338cc:	add	x20, x20, #0x10
   338d0:	cmp	x21, x8
   338d4:	b.cc	338ac <its_translate_rule_eval@@Base+0x41c>  // b.lo, b.ul, b.last
   338d8:	ldp	x20, x19, [sp, #32]
   338dc:	ldr	x21, [sp, #16]
   338e0:	ldp	x29, x30, [sp], #48
   338e4:	b	aa00 <free@plt>

00000000000338e8 <its_localization_note_rule_eval@@Base>:
   338e8:	stp	x29, x30, [sp, #-64]!
   338ec:	stp	x22, x21, [sp, #32]
   338f0:	mov	x21, x1
   338f4:	mov	x22, x0
   338f8:	mov	w0, #0x1                   	// #1
   338fc:	mov	w1, #0x18                  	// #24
   33900:	stp	x24, x23, [sp, #16]
   33904:	stp	x20, x19, [sp, #48]
   33908:	mov	x29, sp
   3390c:	mov	x20, x2
   33910:	bl	aea0 <xcalloc@plt>
   33914:	ldr	w8, [x20, #8]
   33918:	mov	x19, x0
   3391c:	cmp	w8, #0x1
   33920:	b.eq	33980 <its_localization_note_rule_eval@@Base+0x98>  // b.none
   33924:	cmp	w8, #0x2
   33928:	b.ne	33adc <its_localization_note_rule_eval@@Base+0x1f4>  // b.any
   3392c:	adrp	x2, 3b000 <plural_table_size@@Base+0x1c00>
   33930:	add	x2, x2, #0x37a
   33934:	mov	x0, x21
   33938:	mov	x1, x20
   3393c:	bl	3360c <its_translate_rule_eval@@Base+0x17c>
   33940:	cbz	x0, 33958 <its_localization_note_rule_eval@@Base+0x70>
   33944:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   33948:	mov	x2, x0
   3394c:	add	x1, x1, #0x37a
   33950:	mov	x0, x19
   33954:	bl	33674 <its_translate_rule_eval@@Base+0x1e4>
   33958:	adrp	x2, 3b000 <plural_table_size@@Base+0x1c00>
   3395c:	add	x2, x2, #0x386
   33960:	mov	x0, x21
   33964:	mov	x1, x20
   33968:	bl	3360c <its_translate_rule_eval@@Base+0x17c>
   3396c:	cbz	x0, 33ab0 <its_localization_note_rule_eval@@Base+0x1c8>
   33970:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   33974:	mov	x2, x0
   33978:	add	x1, x1, #0x386
   3397c:	b	33ad4 <its_localization_note_rule_eval@@Base+0x1ec>
   33980:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   33984:	adrp	x2, 3b000 <plural_table_size@@Base+0x1c00>
   33988:	add	x1, x1, #0x386
   3398c:	add	x2, x2, #0x35c
   33990:	mov	x0, x20
   33994:	bl	a270 <xmlHasNsProp@plt>
   33998:	cbnz	x0, 339d4 <its_localization_note_rule_eval@@Base+0xec>
   3399c:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   339a0:	adrp	x2, 3b000 <plural_table_size@@Base+0x1c00>
   339a4:	add	x1, x1, #0x39d
   339a8:	add	x2, x2, #0x35c
   339ac:	mov	x0, x20
   339b0:	bl	a270 <xmlHasNsProp@plt>
   339b4:	cbnz	x0, 339d4 <its_localization_note_rule_eval@@Base+0xec>
   339b8:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   339bc:	adrp	x2, 3b000 <plural_table_size@@Base+0x1c00>
   339c0:	add	x1, x1, #0x37a
   339c4:	add	x2, x2, #0x35c
   339c8:	mov	x0, x20
   339cc:	bl	a270 <xmlHasNsProp@plt>
   339d0:	cbz	x0, 33af4 <its_localization_note_rule_eval@@Base+0x20c>
   339d4:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   339d8:	adrp	x2, 3b000 <plural_table_size@@Base+0x1c00>
   339dc:	add	x1, x1, #0x386
   339e0:	add	x2, x2, #0x35c
   339e4:	mov	x0, x20
   339e8:	bl	a270 <xmlHasNsProp@plt>
   339ec:	adrp	x24, 4c000 <plural_table_size@@Base+0x12c00>
   339f0:	ldr	x24, [x24, #4024]
   339f4:	cbz	x0, 33a44 <its_localization_note_rule_eval@@Base+0x15c>
   339f8:	adrp	x21, 3b000 <plural_table_size@@Base+0x1c00>
   339fc:	add	x21, x21, #0x386
   33a00:	adrp	x2, 3b000 <plural_table_size@@Base+0x1c00>
   33a04:	add	x2, x2, #0x35c
   33a08:	mov	x0, x20
   33a0c:	mov	x1, x21
   33a10:	bl	aec0 <xmlGetNsProp@plt>
   33a14:	mov	x22, x0
   33a18:	bl	a5a0 <xstrdup@plt>
   33a1c:	ldr	x8, [x24]
   33a20:	mov	x23, x0
   33a24:	mov	x0, x22
   33a28:	blr	x8
   33a2c:	mov	x0, x19
   33a30:	mov	x1, x21
   33a34:	mov	x2, x23
   33a38:	bl	33720 <its_translate_rule_eval@@Base+0x290>
   33a3c:	mov	x0, x23
   33a40:	bl	aa00 <free@plt>
   33a44:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   33a48:	adrp	x2, 3b000 <plural_table_size@@Base+0x1c00>
   33a4c:	add	x1, x1, #0x37a
   33a50:	add	x2, x2, #0x35c
   33a54:	mov	x0, x20
   33a58:	bl	a270 <xmlHasNsProp@plt>
   33a5c:	cbz	x0, 33adc <its_localization_note_rule_eval@@Base+0x1f4>
   33a60:	adrp	x21, 3b000 <plural_table_size@@Base+0x1c00>
   33a64:	add	x21, x21, #0x37a
   33a68:	adrp	x2, 3b000 <plural_table_size@@Base+0x1c00>
   33a6c:	add	x2, x2, #0x35c
   33a70:	mov	x0, x20
   33a74:	mov	x1, x21
   33a78:	bl	aec0 <xmlGetNsProp@plt>
   33a7c:	mov	x20, x0
   33a80:	bl	a5a0 <xstrdup@plt>
   33a84:	ldr	x8, [x24]
   33a88:	mov	x22, x0
   33a8c:	mov	x0, x20
   33a90:	blr	x8
   33a94:	mov	x0, x19
   33a98:	mov	x1, x21
   33a9c:	mov	x2, x22
   33aa0:	bl	33720 <its_translate_rule_eval@@Base+0x290>
   33aa4:	mov	x0, x22
   33aa8:	bl	aa00 <free@plt>
   33aac:	b	33adc <its_localization_note_rule_eval@@Base+0x1f4>
   33ab0:	adrp	x2, 3b000 <plural_table_size@@Base+0x1c00>
   33ab4:	add	x2, x2, #0x38e
   33ab8:	mov	x0, x21
   33abc:	mov	x1, x20
   33ac0:	bl	3360c <its_translate_rule_eval@@Base+0x17c>
   33ac4:	cbz	x0, 33adc <its_localization_note_rule_eval@@Base+0x1f4>
   33ac8:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   33acc:	mov	x2, x0
   33ad0:	add	x1, x1, #0x38e
   33ad4:	mov	x0, x19
   33ad8:	bl	33674 <its_translate_rule_eval@@Base+0x1e4>
   33adc:	mov	x0, x19
   33ae0:	ldp	x20, x19, [sp, #48]
   33ae4:	ldp	x22, x21, [sp, #32]
   33ae8:	ldp	x24, x23, [sp, #16]
   33aec:	ldp	x29, x30, [sp], #64
   33af0:	ret
   33af4:	adrp	x2, 3b000 <plural_table_size@@Base+0x1c00>
   33af8:	add	x2, x2, #0x37a
   33afc:	mov	x0, x21
   33b00:	mov	x1, x20
   33b04:	bl	3360c <its_translate_rule_eval@@Base+0x17c>
   33b08:	cbz	x0, 33b20 <its_localization_note_rule_eval@@Base+0x238>
   33b0c:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   33b10:	mov	x2, x0
   33b14:	add	x1, x1, #0x37a
   33b18:	mov	x0, x19
   33b1c:	bl	33674 <its_translate_rule_eval@@Base+0x1e4>
   33b20:	adrp	x2, 3b000 <plural_table_size@@Base+0x1c00>
   33b24:	add	x2, x2, #0x386
   33b28:	mov	x0, x21
   33b2c:	mov	x1, x20
   33b30:	bl	3360c <its_translate_rule_eval@@Base+0x17c>
   33b34:	cbnz	x0, 33970 <its_localization_note_rule_eval@@Base+0x88>
   33b38:	adrp	x2, 3b000 <plural_table_size@@Base+0x1c00>
   33b3c:	add	x2, x2, #0x38e
   33b40:	mov	x0, x21
   33b44:	mov	x1, x20
   33b48:	bl	3360c <its_translate_rule_eval@@Base+0x17c>
   33b4c:	cbnz	x0, 33ac8 <its_localization_note_rule_eval@@Base+0x1e0>
   33b50:	ldr	x2, [x20, #40]
   33b54:	cbz	x2, 33adc <its_localization_note_rule_eval@@Base+0x1f4>
   33b58:	ldr	w8, [x2, #8]
   33b5c:	cmp	w8, #0x1
   33b60:	b.ne	33adc <its_localization_note_rule_eval@@Base+0x1f4>  // b.any
   33b64:	mov	x0, x22
   33b68:	mov	x1, x21
   33b6c:	bl	a1a0 <its_localization_note_rule_eval@plt>
   33b70:	mov	x20, x0
   33b74:	mov	x0, x19
   33b78:	mov	x1, x20
   33b7c:	bl	337a4 <its_translate_rule_eval@@Base+0x314>
   33b80:	mov	x0, x20
   33b84:	bl	33888 <its_translate_rule_eval@@Base+0x3f8>
   33b88:	mov	x0, x20
   33b8c:	b	33aa8 <its_localization_note_rule_eval@@Base+0x1c0>

0000000000033b90 <its_element_within_text_rule_eval@@Base>:
   33b90:	stp	x29, x30, [sp, #-48]!
   33b94:	stp	x22, x21, [sp, #16]
   33b98:	mov	x21, x1
   33b9c:	mov	w0, #0x1                   	// #1
   33ba0:	mov	w1, #0x18                  	// #24
   33ba4:	stp	x20, x19, [sp, #32]
   33ba8:	mov	x29, sp
   33bac:	mov	x20, x2
   33bb0:	bl	aea0 <xcalloc@plt>
   33bb4:	ldr	w8, [x20, #8]
   33bb8:	mov	x19, x0
   33bbc:	cmp	w8, #0x1
   33bc0:	b.ne	33c64 <its_element_within_text_rule_eval@@Base+0xd4>  // b.any
   33bc4:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   33bc8:	adrp	x2, 3b000 <plural_table_size@@Base+0x1c00>
   33bcc:	add	x1, x1, #0x3a8
   33bd0:	add	x2, x2, #0x35c
   33bd4:	mov	x0, x20
   33bd8:	bl	a270 <xmlHasNsProp@plt>
   33bdc:	cbz	x0, 33c38 <its_element_within_text_rule_eval@@Base+0xa8>
   33be0:	adrp	x21, 3b000 <plural_table_size@@Base+0x1c00>
   33be4:	add	x21, x21, #0x3a8
   33be8:	adrp	x2, 3b000 <plural_table_size@@Base+0x1c00>
   33bec:	add	x2, x2, #0x35c
   33bf0:	mov	x0, x20
   33bf4:	mov	x1, x21
   33bf8:	bl	aec0 <xmlGetNsProp@plt>
   33bfc:	mov	x20, x0
   33c00:	bl	a5a0 <xstrdup@plt>
   33c04:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   33c08:	ldr	x8, [x8, #4024]
   33c0c:	mov	x22, x0
   33c10:	mov	x0, x20
   33c14:	ldr	x8, [x8]
   33c18:	blr	x8
   33c1c:	mov	x0, x19
   33c20:	mov	x1, x21
   33c24:	mov	x2, x22
   33c28:	bl	33720 <its_translate_rule_eval@@Base+0x290>
   33c2c:	mov	x0, x22
   33c30:	bl	aa00 <free@plt>
   33c34:	b	33c64 <its_element_within_text_rule_eval@@Base+0xd4>
   33c38:	adrp	x2, 3b000 <plural_table_size@@Base+0x1c00>
   33c3c:	add	x2, x2, #0x3a8
   33c40:	mov	x0, x21
   33c44:	mov	x1, x20
   33c48:	bl	3360c <its_translate_rule_eval@@Base+0x17c>
   33c4c:	cbz	x0, 33c64 <its_element_within_text_rule_eval@@Base+0xd4>
   33c50:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   33c54:	mov	x2, x0
   33c58:	add	x1, x1, #0x3a8
   33c5c:	mov	x0, x19
   33c60:	bl	33674 <its_translate_rule_eval@@Base+0x1e4>
   33c64:	mov	x0, x19
   33c68:	ldp	x20, x19, [sp, #32]
   33c6c:	ldp	x22, x21, [sp, #16]
   33c70:	ldp	x29, x30, [sp], #48
   33c74:	ret

0000000000033c78 <its_preserve_space_rule_eval@@Base>:
   33c78:	stp	x29, x30, [sp, #-48]!
   33c7c:	stp	x22, x21, [sp, #16]
   33c80:	stp	x20, x19, [sp, #32]
   33c84:	mov	x20, x1
   33c88:	mov	x21, x0
   33c8c:	mov	w0, #0x1                   	// #1
   33c90:	mov	w1, #0x18                  	// #24
   33c94:	mov	x29, sp
   33c98:	mov	x22, x2
   33c9c:	bl	aea0 <xcalloc@plt>
   33ca0:	ldr	w8, [x22, #8]
   33ca4:	mov	x19, x0
   33ca8:	cmp	w8, #0x1
   33cac:	b.ne	33dac <its_preserve_space_rule_eval@@Base+0x134>  // b.any
   33cb0:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   33cb4:	adrp	x2, 3b000 <plural_table_size@@Base+0x1c00>
   33cb8:	add	x1, x1, #0x3d2
   33cbc:	add	x2, x2, #0x3b3
   33cc0:	mov	x0, x22
   33cc4:	bl	a270 <xmlHasNsProp@plt>
   33cc8:	cbz	x0, 33d24 <its_preserve_space_rule_eval@@Base+0xac>
   33ccc:	adrp	x20, 3b000 <plural_table_size@@Base+0x1c00>
   33cd0:	add	x20, x20, #0x3d2
   33cd4:	adrp	x2, 3b000 <plural_table_size@@Base+0x1c00>
   33cd8:	add	x2, x2, #0x3b3
   33cdc:	mov	x0, x22
   33ce0:	mov	x1, x20
   33ce4:	bl	aec0 <xmlGetNsProp@plt>
   33ce8:	mov	x21, x0
   33cec:	bl	a5a0 <xstrdup@plt>
   33cf0:	adrp	x8, 4c000 <plural_table_size@@Base+0x12c00>
   33cf4:	ldr	x8, [x8, #4024]
   33cf8:	mov	x22, x0
   33cfc:	mov	x0, x21
   33d00:	ldr	x8, [x8]
   33d04:	blr	x8
   33d08:	mov	x0, x19
   33d0c:	mov	x1, x20
   33d10:	mov	x2, x22
   33d14:	bl	33720 <its_translate_rule_eval@@Base+0x290>
   33d18:	mov	x0, x22
   33d1c:	bl	aa00 <free@plt>
   33d20:	b	33dac <its_preserve_space_rule_eval@@Base+0x134>
   33d24:	adrp	x2, 3b000 <plural_table_size@@Base+0x1c00>
   33d28:	add	x2, x2, #0x3d2
   33d2c:	mov	x0, x20
   33d30:	mov	x1, x22
   33d34:	bl	3360c <its_translate_rule_eval@@Base+0x17c>
   33d38:	cbz	x0, 33d54 <its_preserve_space_rule_eval@@Base+0xdc>
   33d3c:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   33d40:	mov	x2, x0
   33d44:	add	x1, x1, #0x3d2
   33d48:	mov	x0, x19
   33d4c:	bl	33674 <its_translate_rule_eval@@Base+0x1e4>
   33d50:	b	33dac <its_preserve_space_rule_eval@@Base+0x134>
   33d54:	ldr	x2, [x22, #40]
   33d58:	cbz	x2, 33d94 <its_preserve_space_rule_eval@@Base+0x11c>
   33d5c:	ldr	w8, [x2, #8]
   33d60:	cmp	w8, #0x1
   33d64:	b.ne	33d94 <its_preserve_space_rule_eval@@Base+0x11c>  // b.any
   33d68:	mov	x0, x21
   33d6c:	mov	x1, x20
   33d70:	bl	ad40 <its_preserve_space_rule_eval@plt>
   33d74:	mov	x20, x0
   33d78:	mov	x0, x19
   33d7c:	mov	x1, x20
   33d80:	bl	337a4 <its_translate_rule_eval@@Base+0x314>
   33d84:	mov	x0, x20
   33d88:	bl	33888 <its_translate_rule_eval@@Base+0x3f8>
   33d8c:	mov	x0, x20
   33d90:	b	33d1c <its_preserve_space_rule_eval@@Base+0xa4>
   33d94:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   33d98:	adrp	x2, 3b000 <plural_table_size@@Base+0x1c00>
   33d9c:	add	x1, x1, #0x3d2
   33da0:	add	x2, x2, #0x3d8
   33da4:	mov	x0, x19
   33da8:	bl	33720 <its_translate_rule_eval@@Base+0x290>
   33dac:	mov	x0, x19
   33db0:	ldp	x20, x19, [sp, #32]
   33db4:	ldp	x22, x21, [sp, #16]
   33db8:	ldp	x29, x30, [sp], #48
   33dbc:	ret

0000000000033dc0 <its_extension_context_rule_eval@@Base>:
   33dc0:	stp	x29, x30, [sp, #-48]!
   33dc4:	str	x21, [sp, #16]
   33dc8:	mov	x21, x1
   33dcc:	mov	w0, #0x1                   	// #1
   33dd0:	mov	w1, #0x18                  	// #24
   33dd4:	stp	x20, x19, [sp, #32]
   33dd8:	mov	x29, sp
   33ddc:	mov	x20, x2
   33de0:	bl	aea0 <xcalloc@plt>
   33de4:	adrp	x2, 3b000 <plural_table_size@@Base+0x1c00>
   33de8:	mov	x19, x0
   33dec:	add	x2, x2, #0x3e0
   33df0:	mov	x0, x21
   33df4:	mov	x1, x20
   33df8:	bl	3360c <its_translate_rule_eval@@Base+0x17c>
   33dfc:	cbz	x0, 33e14 <its_extension_context_rule_eval@@Base+0x54>
   33e00:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   33e04:	mov	x2, x0
   33e08:	add	x1, x1, #0x3e0
   33e0c:	mov	x0, x19
   33e10:	bl	33674 <its_translate_rule_eval@@Base+0x1e4>
   33e14:	adrp	x2, 3b000 <plural_table_size@@Base+0x1c00>
   33e18:	add	x2, x2, #0x3e3
   33e1c:	mov	x0, x21
   33e20:	mov	x1, x20
   33e24:	bl	3360c <its_translate_rule_eval@@Base+0x17c>
   33e28:	cbz	x0, 33e40 <its_extension_context_rule_eval@@Base+0x80>
   33e2c:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   33e30:	mov	x2, x0
   33e34:	add	x1, x1, #0x3e3
   33e38:	mov	x0, x19
   33e3c:	bl	33674 <its_translate_rule_eval@@Base+0x1e4>
   33e40:	mov	x0, x19
   33e44:	ldp	x20, x19, [sp, #32]
   33e48:	ldr	x21, [sp, #16]
   33e4c:	ldp	x29, x30, [sp], #48
   33e50:	ret

0000000000033e54 <its_extension_escape_rule_eval@@Base>:
   33e54:	stp	x29, x30, [sp, #-48]!
   33e58:	stp	x22, x21, [sp, #16]
   33e5c:	stp	x20, x19, [sp, #32]
   33e60:	mov	x20, x1
   33e64:	mov	x21, x0
   33e68:	mov	w0, #0x1                   	// #1
   33e6c:	mov	w1, #0x18                  	// #24
   33e70:	mov	x29, sp
   33e74:	mov	x22, x2
   33e78:	bl	aea0 <xcalloc@plt>
   33e7c:	ldr	w8, [x22, #8]
   33e80:	mov	x19, x0
   33e84:	cmp	w8, #0x1
   33e88:	b.eq	33eb0 <its_extension_escape_rule_eval@@Base+0x5c>  // b.none
   33e8c:	cmp	w8, #0x2
   33e90:	b.ne	33edc <its_extension_escape_rule_eval@@Base+0x88>  // b.any
   33e94:	adrp	x2, 3b000 <plural_table_size@@Base+0x1c00>
   33e98:	add	x2, x2, #0x3ef
   33e9c:	mov	x0, x20
   33ea0:	mov	x1, x22
   33ea4:	bl	3360c <its_translate_rule_eval@@Base+0x17c>
   33ea8:	cbnz	x0, 33ec8 <its_extension_escape_rule_eval@@Base+0x74>
   33eac:	b	33edc <its_extension_escape_rule_eval@@Base+0x88>
   33eb0:	adrp	x2, 3b000 <plural_table_size@@Base+0x1c00>
   33eb4:	add	x2, x2, #0x3ef
   33eb8:	mov	x0, x20
   33ebc:	mov	x1, x22
   33ec0:	bl	3360c <its_translate_rule_eval@@Base+0x17c>
   33ec4:	cbz	x0, 33ef0 <its_extension_escape_rule_eval@@Base+0x9c>
   33ec8:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   33ecc:	mov	x2, x0
   33ed0:	add	x1, x1, #0x3ef
   33ed4:	mov	x0, x19
   33ed8:	bl	33674 <its_translate_rule_eval@@Base+0x1e4>
   33edc:	mov	x0, x19
   33ee0:	ldp	x20, x19, [sp, #32]
   33ee4:	ldp	x22, x21, [sp, #16]
   33ee8:	ldp	x29, x30, [sp], #48
   33eec:	ret
   33ef0:	ldr	x2, [x22, #40]
   33ef4:	cbz	x2, 33edc <its_extension_escape_rule_eval@@Base+0x88>
   33ef8:	ldr	w8, [x2, #8]
   33efc:	cmp	w8, #0x1
   33f00:	b.ne	33edc <its_extension_escape_rule_eval@@Base+0x88>  // b.any
   33f04:	mov	x0, x21
   33f08:	mov	x1, x20
   33f0c:	bl	ac40 <its_extension_escape_rule_eval@plt>
   33f10:	mov	x20, x0
   33f14:	mov	x0, x19
   33f18:	mov	x1, x20
   33f1c:	bl	337a4 <its_translate_rule_eval@@Base+0x314>
   33f20:	mov	x0, x20
   33f24:	bl	33888 <its_translate_rule_eval@@Base+0x3f8>
   33f28:	mov	x0, x20
   33f2c:	bl	aa00 <free@plt>
   33f30:	b	33edc <its_extension_escape_rule_eval@@Base+0x88>

0000000000033f34 <its_rule_list_alloc@@Base>:
   33f34:	stp	x29, x30, [sp, #-32]!
   33f38:	adrp	x8, 4e000 <formatstring_gfc_internal@@Base+0x10>
   33f3c:	ldr	x8, [x8, #1208]
   33f40:	str	x19, [sp, #16]
   33f44:	mov	x29, sp
   33f48:	cbnz	x8, 34008 <its_rule_list_alloc@@Base+0xd4>
   33f4c:	adrp	x19, 4e000 <formatstring_gfc_internal@@Base+0x10>
   33f50:	add	x19, x19, #0x4a0
   33f54:	mov	w1, #0xa                   	// #10
   33f58:	mov	x0, x19
   33f5c:	bl	a1e0 <hash_init@plt>
   33f60:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   33f64:	adrp	x3, 4e000 <formatstring_gfc_internal@@Base+0x10>
   33f68:	add	x1, x1, #0x474
   33f6c:	add	x3, x3, #0x130
   33f70:	mov	w2, #0xd                   	// #13
   33f74:	mov	x0, x19
   33f78:	bl	a300 <hash_insert_entry@plt>
   33f7c:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   33f80:	adrp	x3, 4e000 <formatstring_gfc_internal@@Base+0x10>
   33f84:	add	x1, x1, #0x482
   33f88:	add	x3, x3, #0x158
   33f8c:	mov	w2, #0xb                   	// #11
   33f90:	mov	x0, x19
   33f94:	bl	a300 <hash_insert_entry@plt>
   33f98:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   33f9c:	adrp	x3, 4e000 <formatstring_gfc_internal@@Base+0x10>
   33fa0:	add	x1, x1, #0x48e
   33fa4:	add	x3, x3, #0x180
   33fa8:	mov	w2, #0xe                   	// #14
   33fac:	mov	x0, x19
   33fb0:	bl	a300 <hash_insert_entry@plt>
   33fb4:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   33fb8:	adrp	x3, 4e000 <formatstring_gfc_internal@@Base+0x10>
   33fbc:	add	x1, x1, #0x49d
   33fc0:	add	x3, x3, #0x1a8
   33fc4:	mov	w2, #0x11                  	// #17
   33fc8:	mov	x0, x19
   33fcc:	bl	a300 <hash_insert_entry@plt>
   33fd0:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   33fd4:	adrp	x3, 4e000 <formatstring_gfc_internal@@Base+0x10>
   33fd8:	add	x1, x1, #0x4af
   33fdc:	add	x3, x3, #0x1d0
   33fe0:	mov	w2, #0xb                   	// #11
   33fe4:	mov	x0, x19
   33fe8:	bl	a300 <hash_insert_entry@plt>
   33fec:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   33ff0:	adrp	x3, 4e000 <formatstring_gfc_internal@@Base+0x10>
   33ff4:	add	x1, x1, #0x4bb
   33ff8:	add	x3, x3, #0x1f8
   33ffc:	mov	w2, #0xa                   	// #10
   34000:	mov	x0, x19
   34004:	bl	a300 <hash_insert_entry@plt>
   34008:	ldr	x19, [sp, #16]
   3400c:	mov	w0, #0x1                   	// #1
   34010:	mov	w1, #0x30                  	// #48
   34014:	ldp	x29, x30, [sp], #32
   34018:	b	aea0 <xcalloc@plt>

000000000003401c <its_rule_list_free@@Base>:
   3401c:	stp	x29, x30, [sp, #-48]!
   34020:	str	x21, [sp, #16]
   34024:	stp	x20, x19, [sp, #32]
   34028:	mov	x19, x0
   3402c:	ldp	x0, x8, [x0]
   34030:	mov	x29, sp
   34034:	cbz	x8, 34070 <its_rule_list_free@@Base+0x54>
   34038:	mov	x20, xzr
   3403c:	ldr	x8, [x0, x20, lsl #3]
   34040:	ldr	x9, [x8]
   34044:	ldr	x9, [x9, #16]
   34048:	cbz	x9, 34058 <its_rule_list_free@@Base+0x3c>
   3404c:	mov	x0, x8
   34050:	blr	x9
   34054:	ldr	x0, [x19]
   34058:	ldr	x0, [x0, x20, lsl #3]
   3405c:	bl	aa00 <free@plt>
   34060:	ldp	x0, x8, [x19]
   34064:	add	x20, x20, #0x1
   34068:	cmp	x20, x8
   3406c:	b.cc	3403c <its_rule_list_free@@Base+0x20>  // b.lo, b.ul, b.last
   34070:	bl	aa00 <free@plt>
   34074:	ldp	x0, x8, [x19, #24]
   34078:	cbz	x8, 340a0 <its_rule_list_free@@Base+0x84>
   3407c:	mov	x20, xzr
   34080:	mov	x21, xzr
   34084:	add	x0, x0, x20
   34088:	bl	33888 <its_translate_rule_eval@@Base+0x3f8>
   3408c:	ldp	x0, x8, [x19, #24]
   34090:	add	x21, x21, #0x1
   34094:	add	x20, x20, #0x18
   34098:	cmp	x21, x8
   3409c:	b.cc	34084 <its_rule_list_free@@Base+0x68>  // b.lo, b.ul, b.last
   340a0:	ldp	x20, x19, [sp, #32]
   340a4:	ldr	x21, [sp, #16]
   340a8:	ldp	x29, x30, [sp], #48
   340ac:	b	aa00 <free@plt>

00000000000340b0 <its_rule_list_add_from_file@@Base>:
   340b0:	stp	x29, x30, [sp, #-48]!
   340b4:	stp	x20, x19, [sp, #32]
   340b8:	mov	x19, x1
   340bc:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   340c0:	mov	x20, x0
   340c4:	add	x1, x1, #0x2ae
   340c8:	mov	w2, #0x960                 	// #2400
   340cc:	mov	x0, x19
   340d0:	str	x21, [sp, #16]
   340d4:	mov	x29, sp
   340d8:	bl	a200 <xmlReadFile@plt>
   340dc:	cbz	x0, 34104 <its_rule_list_add_from_file@@Base+0x54>
   340e0:	mov	x21, x0
   340e4:	mov	x0, x20
   340e8:	mov	x1, x21
   340ec:	bl	3414c <its_rule_list_add_from_file@@Base+0x9c>
   340f0:	mov	w19, w0
   340f4:	mov	x0, x21
   340f8:	bl	a2b0 <xmlFreeDoc@plt>
   340fc:	and	w0, w19, #0x1
   34100:	b	3413c <its_rule_list_add_from_file@@Base+0x8c>
   34104:	bl	a2d0 <xmlGetLastError@plt>
   34108:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   3410c:	mov	x20, x0
   34110:	add	x1, x1, #0x29b
   34114:	mov	w2, #0x5                   	// #5
   34118:	mov	x0, xzr
   3411c:	bl	acd0 <dcgettext@plt>
   34120:	ldr	x4, [x20, #8]
   34124:	mov	x2, x0
   34128:	mov	w0, wzr
   3412c:	mov	w1, wzr
   34130:	mov	x3, x19
   34134:	bl	a140 <error@plt>
   34138:	mov	w0, wzr
   3413c:	ldp	x20, x19, [sp, #32]
   34140:	ldr	x21, [sp, #16]
   34144:	ldp	x29, x30, [sp], #48
   34148:	ret
   3414c:	stp	x29, x30, [sp, #-96]!
   34150:	stp	x20, x19, [sp, #80]
   34154:	mov	x20, x0
   34158:	mov	x0, x1
   3415c:	str	x27, [sp, #16]
   34160:	stp	x26, x25, [sp, #32]
   34164:	stp	x24, x23, [sp, #48]
   34168:	stp	x22, x21, [sp, #64]
   3416c:	mov	x29, sp
   34170:	mov	x19, x1
   34174:	bl	adc0 <xmlDocGetRootElement@plt>
   34178:	mov	x21, x0
   3417c:	ldr	x0, [x0, #16]
   34180:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   34184:	add	x1, x1, #0x61c
   34188:	bl	adb0 <xmlStrEqual@plt>
   3418c:	cbz	w0, 342c8 <its_rule_list_add_from_file@@Base+0x218>
   34190:	ldr	x8, [x21, #72]
   34194:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   34198:	add	x1, x1, #0x35c
   3419c:	ldr	x0, [x8, #16]
   341a0:	bl	adb0 <xmlStrEqual@plt>
   341a4:	cbz	w0, 342c8 <its_rule_list_add_from_file@@Base+0x218>
   341a8:	ldr	x21, [x21, #24]
   341ac:	cbz	x21, 342c0 <its_rule_list_add_from_file@@Base+0x210>
   341b0:	adrp	x25, 4c000 <plural_table_size@@Base+0x12c00>
   341b4:	ldr	x25, [x25, #4024]
   341b8:	adrp	x22, 4e000 <formatstring_gfc_internal@@Base+0x10>
   341bc:	add	x22, x22, #0x4a0
   341c0:	ldr	x23, [x21, #16]
   341c4:	mov	x0, x23
   341c8:	bl	a0d0 <strlen@plt>
   341cc:	mov	x2, x0
   341d0:	add	x3, x29, #0x18
   341d4:	mov	x0, x22
   341d8:	mov	x1, x23
   341dc:	bl	a5c0 <hash_find_entry@plt>
   341e0:	cbnz	w0, 342b8 <its_rule_list_add_from_file@@Base+0x208>
   341e4:	ldr	x24, [x29, #24]
   341e8:	mov	w0, #0x1                   	// #1
   341ec:	ldr	x1, [x24]
   341f0:	bl	aea0 <xcalloc@plt>
   341f4:	str	x24, [x0]
   341f8:	ldr	x8, [x24, #8]
   341fc:	mov	x23, x0
   34200:	cbz	x8, 34210 <its_rule_list_add_from_file@@Base+0x160>
   34204:	mov	x0, x23
   34208:	mov	x1, x21
   3420c:	blr	x8
   34210:	mov	x0, x19
   34214:	mov	x1, x21
   34218:	bl	abb0 <xmlGetNsList@plt>
   3421c:	mov	x24, x0
   34220:	cbz	x0, 34268 <its_rule_list_add_from_file@@Base+0x1b8>
   34224:	mov	x0, xzr
   34228:	ldr	x8, [x24, x0, lsl #3]
   3422c:	add	x0, x0, #0x1
   34230:	cbnz	x8, 34228 <its_rule_list_add_from_file@@Base+0x178>
   34234:	mov	w1, #0x8                   	// #8
   34238:	bl	aea0 <xcalloc@plt>
   3423c:	str	x0, [x23, #40]
   34240:	ldr	x0, [x24]
   34244:	cbz	x0, 34268 <its_rule_list_add_from_file@@Base+0x1b8>
   34248:	mov	x26, xzr
   3424c:	add	x27, x24, #0x8
   34250:	bl	af40 <xmlCopyNamespace@plt>
   34254:	ldr	x8, [x23, #40]
   34258:	str	x0, [x8, x26]
   3425c:	ldr	x0, [x27, x26]
   34260:	add	x26, x26, #0x8
   34264:	cbnz	x0, 34250 <its_rule_list_add_from_file@@Base+0x1a0>
   34268:	ldr	x8, [x25]
   3426c:	mov	x0, x24
   34270:	blr	x8
   34274:	cbz	x23, 342b8 <its_rule_list_add_from_file@@Base+0x208>
   34278:	ldp	x8, x9, [x20, #8]
   3427c:	cmp	x8, x9
   34280:	b.ne	342a8 <its_rule_list_add_from_file@@Base+0x1f8>  // b.any
   34284:	ldr	x0, [x20]
   34288:	mov	w9, #0x1                   	// #1
   3428c:	bfi	x9, x8, #1, #63
   34290:	lsl	x1, x9, #3
   34294:	str	x9, [x20, #16]
   34298:	bl	a460 <xrealloc@plt>
   3429c:	ldr	x8, [x20, #8]
   342a0:	str	x0, [x20]
   342a4:	b	342ac <its_rule_list_add_from_file@@Base+0x1fc>
   342a8:	ldr	x0, [x20]
   342ac:	add	x9, x8, #0x1
   342b0:	str	x9, [x20, #8]
   342b4:	str	x23, [x0, x8, lsl #3]
   342b8:	ldr	x21, [x21, #48]
   342bc:	cbnz	x21, 341c0 <its_rule_list_add_from_file@@Base+0x110>
   342c0:	mov	w0, #0x1                   	// #1
   342c4:	b	34300 <its_rule_list_add_from_file@@Base+0x250>
   342c8:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   342cc:	add	x1, x1, #0x622
   342d0:	mov	w2, #0x5                   	// #5
   342d4:	mov	x0, xzr
   342d8:	bl	acd0 <dcgettext@plt>
   342dc:	adrp	x3, 3b000 <plural_table_size@@Base+0x1c00>
   342e0:	mov	x2, x0
   342e4:	add	x3, x3, #0x35c
   342e8:	mov	w0, wzr
   342ec:	mov	w1, wzr
   342f0:	bl	a140 <error@plt>
   342f4:	mov	x0, x19
   342f8:	bl	a2b0 <xmlFreeDoc@plt>
   342fc:	mov	w0, wzr
   34300:	ldp	x20, x19, [sp, #80]
   34304:	ldp	x22, x21, [sp, #64]
   34308:	ldp	x24, x23, [sp, #48]
   3430c:	ldp	x26, x25, [sp, #32]
   34310:	ldr	x27, [sp, #16]
   34314:	ldp	x29, x30, [sp], #96
   34318:	ret

000000000003431c <its_rule_list_add_from_string@@Base>:
   3431c:	stp	x29, x30, [sp, #-32]!
   34320:	stp	x20, x19, [sp, #16]
   34324:	mov	x19, x0
   34328:	mov	x0, x1
   3432c:	mov	x29, sp
   34330:	mov	x20, x1
   34334:	bl	a0d0 <strlen@plt>
   34338:	adrp	x2, 3b000 <plural_table_size@@Base+0x1c00>
   3433c:	mov	x1, x0
   34340:	add	x2, x2, #0x3f6
   34344:	mov	w4, #0x960                 	// #2400
   34348:	mov	x0, x20
   3434c:	mov	x3, xzr
   34350:	bl	aba0 <xmlReadMemory@plt>
   34354:	cbz	x0, 3437c <its_rule_list_add_from_string@@Base+0x60>
   34358:	mov	x20, x0
   3435c:	mov	x0, x19
   34360:	mov	x1, x20
   34364:	bl	3414c <its_rule_list_add_from_file@@Base+0x9c>
   34368:	mov	w19, w0
   3436c:	mov	x0, x20
   34370:	bl	a2b0 <xmlFreeDoc@plt>
   34374:	and	w0, w19, #0x1
   34378:	b	343b8 <its_rule_list_add_from_string@@Base+0x9c>
   3437c:	bl	a2d0 <xmlGetLastError@plt>
   34380:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   34384:	mov	x19, x0
   34388:	add	x1, x1, #0x29b
   3438c:	mov	w2, #0x5                   	// #5
   34390:	mov	x0, xzr
   34394:	bl	acd0 <dcgettext@plt>
   34398:	ldr	x4, [x19, #8]
   3439c:	adrp	x3, 3b000 <plural_table_size@@Base+0x1c00>
   343a0:	mov	x2, x0
   343a4:	add	x3, x3, #0x3f6
   343a8:	mov	w0, wzr
   343ac:	mov	w1, wzr
   343b0:	bl	a140 <error@plt>
   343b4:	mov	w0, wzr
   343b8:	ldp	x20, x19, [sp, #16]
   343bc:	ldp	x29, x30, [sp], #32
   343c0:	ret

00000000000343c4 <its_rule_list_extract@@Base>:
   343c4:	sub	sp, sp, #0xc0
   343c8:	stp	x24, x23, [sp, #144]
   343cc:	mov	x23, x0
   343d0:	mov	x0, x1
   343d4:	stp	x29, x30, [sp, #96]
   343d8:	stp	x28, x27, [sp, #112]
   343dc:	stp	x26, x25, [sp, #128]
   343e0:	stp	x22, x21, [sp, #160]
   343e4:	stp	x20, x19, [sp, #176]
   343e8:	add	x29, sp, #0x60
   343ec:	str	x6, [sp, #16]
   343f0:	str	x5, [sp, #40]
   343f4:	mov	x21, x3
   343f8:	bl	a380 <fileno@plt>
   343fc:	mov	w3, #0x960                 	// #2400
   34400:	mov	x1, x21
   34404:	mov	x2, xzr
   34408:	bl	a6f0 <xmlReadFd@plt>
   3440c:	cbz	x0, 34844 <its_rule_list_extract@@Base+0x480>
   34410:	ldr	x8, [x23, #8]
   34414:	mov	x22, x0
   34418:	cbz	x8, 34450 <its_rule_list_extract@@Base+0x8c>
   3441c:	mov	x20, xzr
   34420:	add	x19, x23, #0x18
   34424:	ldr	x8, [x23]
   34428:	mov	x1, x19
   3442c:	mov	x2, x22
   34430:	ldr	x0, [x8, x20, lsl #3]
   34434:	ldr	x8, [x0]
   34438:	ldr	x8, [x8, #24]
   3443c:	blr	x8
   34440:	ldr	x8, [x23, #8]
   34444:	add	x20, x20, #0x1
   34448:	cmp	x20, x8
   3444c:	b.cc	34424 <its_rule_list_extract@@Base+0x60>  // b.lo, b.ul, b.last
   34450:	mov	x0, x22
   34454:	stp	xzr, xzr, [sp, #48]
   34458:	str	xzr, [sp, #64]
   3445c:	bl	adc0 <xmlDocGetRootElement@plt>
   34460:	mov	x2, x0
   34464:	add	x1, sp, #0x30
   34468:	mov	x0, x23
   3446c:	bl	348ec <its_rule_list_extract@@Base+0x528>
   34470:	ldr	x9, [sp, #56]
   34474:	cbz	x9, 3487c <its_rule_list_extract@@Base+0x4b8>
   34478:	stp	x22, x21, [sp]
   3447c:	adrp	x26, 4c000 <plural_table_size@@Base+0x12c00>
   34480:	ldr	x0, [sp, #48]
   34484:	ldr	x26, [x26, #4024]
   34488:	mov	x24, xzr
   3448c:	stp	x9, x0, [sp, #24]
   34490:	ldr	x28, [x0, x24, lsl #3]
   34494:	ldr	w8, [x28, #8]
   34498:	sub	w8, w8, #0x1
   3449c:	cmp	w8, #0x1
   344a0:	b.hi	34830 <its_rule_list_extract@@Base+0x46c>  // b.pmore
   344a4:	ldr	x8, [sp, #40]
   344a8:	mov	x0, x23
   344ac:	mov	x1, x28
   344b0:	ldr	x8, [x8]
   344b4:	ldr	x8, [x8]
   344b8:	ldr	x22, [x8, #8]
   344bc:	bl	36108 <its_merge_context_free@@Base+0x1430>
   344c0:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   344c4:	add	x1, x1, #0x386
   344c8:	mov	x20, x0
   344cc:	bl	34d08 <its_merge_context_free@@Base+0x30>
   344d0:	cbz	x0, 344dc <its_rule_list_extract@@Base+0x118>
   344d4:	bl	a5a0 <xstrdup@plt>
   344d8:	b	34538 <its_rule_list_extract@@Base+0x174>
   344dc:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   344e0:	mov	x0, x20
   344e4:	add	x1, x1, #0x3ef
   344e8:	bl	34d08 <its_merge_context_free@@Base+0x30>
   344ec:	cbz	x0, 34508 <its_rule_list_extract@@Base+0x144>
   344f0:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   344f4:	add	x1, x1, #0xb47
   344f8:	bl	a8d0 <strcmp@plt>
   344fc:	cmp	w0, #0x0
   34500:	cset	w19, eq  // eq = none
   34504:	b	3450c <its_rule_list_extract@@Base+0x148>
   34508:	mov	w19, wzr
   3450c:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   34510:	mov	x0, x20
   34514:	add	x1, x1, #0x38e
   34518:	bl	34d08 <its_merge_context_free@@Base+0x30>
   3451c:	cbz	x0, 34588 <its_rule_list_extract@@Base+0x1c4>
   34520:	mov	x2, x0
   34524:	mov	w3, #0x3                   	// #3
   34528:	mov	x0, x23
   3452c:	mov	x1, x28
   34530:	mov	w4, w19
   34534:	bl	361a8 <its_merge_context_free@@Base+0x14d0>
   34538:	mov	x25, x0
   3453c:	cbz	x0, 3458c <its_rule_list_extract@@Base+0x1c8>
   34540:	ldrb	w8, [x25]
   34544:	cbz	w8, 3458c <its_rule_list_extract@@Base+0x1c8>
   34548:	sub	x0, x29, #0x18
   3454c:	bl	a770 <string_list_init@plt>
   34550:	sub	x0, x29, #0x18
   34554:	mov	x1, x25
   34558:	bl	3638c <its_merge_context_free@@Base+0x16b4>
   3455c:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   34560:	sub	x0, x29, #0x18
   34564:	add	x1, x1, #0x1a1
   34568:	mov	w2, wzr
   3456c:	mov	w3, wzr
   34570:	bl	a6c0 <string_list_join@plt>
   34574:	mov	x19, x0
   34578:	mov	x0, x25
   3457c:	bl	aa00 <free@plt>
   34580:	mov	x25, x19
   34584:	b	34620 <its_rule_list_extract@@Base+0x25c>
   34588:	mov	x25, xzr
   3458c:	sub	x0, x29, #0x18
   34590:	bl	a770 <string_list_init@plt>
   34594:	ldr	x8, [x28, #56]
   34598:	cbz	x8, 34620 <its_rule_list_extract@@Base+0x25c>
   3459c:	mov	x19, x8
   345a0:	ldr	w8, [x8, #8]
   345a4:	cmp	w8, #0x8
   345a8:	b.ne	345b8 <its_rule_list_extract@@Base+0x1f4>  // b.any
   345ac:	ldr	x8, [x19, #56]
   345b0:	cbnz	x8, 34598 <its_rule_list_extract@@Base+0x1d4>
   345b4:	b	345c0 <its_rule_list_extract@@Base+0x1fc>
   345b8:	ldr	x19, [x19, #48]
   345bc:	cbz	x19, 345f4 <its_rule_list_extract@@Base+0x230>
   345c0:	ldr	w8, [x19, #8]
   345c4:	cmp	w8, #0x8
   345c8:	b.ne	345f4 <its_rule_list_extract@@Base+0x230>  // b.any
   345cc:	mov	x0, x19
   345d0:	bl	a5e0 <xmlNodeGetContent@plt>
   345d4:	mov	x21, x0
   345d8:	sub	x0, x29, #0x18
   345dc:	mov	x1, x21
   345e0:	bl	3638c <its_merge_context_free@@Base+0x16b4>
   345e4:	ldr	x8, [x26]
   345e8:	mov	x0, x21
   345ec:	blr	x8
   345f0:	b	345b8 <its_rule_list_extract@@Base+0x1f4>
   345f4:	mov	x0, x25
   345f8:	bl	aa00 <free@plt>
   345fc:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   34600:	sub	x0, x29, #0x18
   34604:	add	x1, x1, #0x1a1
   34608:	mov	w2, wzr
   3460c:	mov	w3, wzr
   34610:	bl	a6c0 <string_list_join@plt>
   34614:	mov	x25, x0
   34618:	sub	x0, x29, #0x18
   3461c:	bl	a190 <string_list_destroy@plt>
   34620:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   34624:	mov	x0, x20
   34628:	add	x1, x1, #0x3d2
   3462c:	bl	34d08 <its_merge_context_free@@Base+0x30>
   34630:	cbz	x0, 34670 <its_rule_list_extract@@Base+0x2ac>
   34634:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   34638:	add	x1, x1, #0x5aa
   3463c:	mov	x19, x0
   34640:	bl	a8d0 <strcmp@plt>
   34644:	cbz	w0, 34678 <its_rule_list_extract@@Base+0x2b4>
   34648:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   3464c:	mov	x0, x19
   34650:	add	x1, x1, #0x5e7
   34654:	bl	a8d0 <strcmp@plt>
   34658:	cbz	w0, 34680 <its_rule_list_extract@@Base+0x2bc>
   3465c:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   34660:	mov	x0, x19
   34664:	add	x1, x1, #0x5ec
   34668:	bl	a8d0 <strcmp@plt>
   3466c:	cbz	w0, 34688 <its_rule_list_extract@@Base+0x2c4>
   34670:	mov	w26, #0x1                   	// #1
   34674:	b	3468c <its_rule_list_extract@@Base+0x2c8>
   34678:	mov	w26, wzr
   3467c:	b	3468c <its_rule_list_extract@@Base+0x2c8>
   34680:	mov	w26, #0x3                   	// #3
   34684:	b	3468c <its_rule_list_extract@@Base+0x2c8>
   34688:	mov	w26, #0x2                   	// #2
   3468c:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   34690:	mov	x0, x20
   34694:	add	x1, x1, #0x3ef
   34698:	bl	34d08 <its_merge_context_free@@Base+0x30>
   3469c:	cbz	x0, 346b8 <its_rule_list_extract@@Base+0x2f4>
   346a0:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   346a4:	add	x1, x1, #0xb47
   346a8:	bl	a8d0 <strcmp@plt>
   346ac:	cmp	w0, #0x0
   346b0:	cset	w27, eq  // eq = none
   346b4:	b	346bc <its_rule_list_extract@@Base+0x2f8>
   346b8:	mov	w27, wzr
   346bc:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   346c0:	mov	x0, x20
   346c4:	add	x1, x1, #0x3e0
   346c8:	bl	34d08 <its_merge_context_free@@Base+0x30>
   346cc:	cbz	x0, 346f0 <its_rule_list_extract@@Base+0x32c>
   346d0:	mov	x2, x0
   346d4:	mov	x0, x23
   346d8:	mov	x1, x28
   346dc:	mov	w3, wzr
   346e0:	mov	w4, w27
   346e4:	bl	361a8 <its_merge_context_free@@Base+0x14d0>
   346e8:	mov	x19, x0
   346ec:	b	346f4 <its_rule_list_extract@@Base+0x330>
   346f0:	mov	x19, xzr
   346f4:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   346f8:	mov	x0, x20
   346fc:	add	x1, x1, #0x3e3
   34700:	bl	34d08 <its_merge_context_free@@Base+0x30>
   34704:	cbz	x0, 34728 <its_rule_list_extract@@Base+0x364>
   34708:	mov	x2, x0
   3470c:	mov	x0, x23
   34710:	mov	x1, x28
   34714:	mov	w3, wzr
   34718:	mov	w4, w27
   3471c:	bl	361a8 <its_merge_context_free@@Base+0x14d0>
   34720:	mov	x21, x0
   34724:	b	3472c <its_rule_list_extract@@Base+0x368>
   34728:	mov	x21, xzr
   3472c:	mov	x0, x20
   34730:	bl	33888 <its_translate_rule_eval@@Base+0x3f8>
   34734:	mov	x0, x20
   34738:	bl	aa00 <free@plt>
   3473c:	cbnz	x21, 34754 <its_rule_list_extract@@Base+0x390>
   34740:	mov	x0, x28
   34744:	mov	w1, w26
   34748:	mov	w2, w27
   3474c:	bl	35350 <its_merge_context_free@@Base+0x678>
   34750:	mov	x21, x0
   34754:	ldrb	w8, [x21]
   34758:	cbz	w8, 3480c <its_rule_list_extract@@Base+0x448>
   3475c:	ldr	x0, [sp, #8]
   34760:	bl	a5a0 <xstrdup@plt>
   34764:	stur	x0, [x29, #-24]
   34768:	mov	x0, x28
   3476c:	bl	ab00 <xmlGetLineNo@plt>
   34770:	stur	x0, [x29, #-16]
   34774:	ldr	w9, [x28, #8]
   34778:	ldr	x8, [x28, #40]
   3477c:	cmp	w9, #0x1
   34780:	b.ne	347a0 <its_rule_list_extract@@Base+0x3dc>  // b.any
   34784:	cbz	x8, 348cc <its_rule_list_extract@@Base+0x508>
   34788:	ldr	x1, [x8, #16]
   3478c:	ldr	x2, [x28, #16]
   34790:	adrp	x0, 3b000 <plural_table_size@@Base+0x1c00>
   34794:	add	x0, x0, #0x6f9
   34798:	bl	aa20 <xasprintf@plt>
   3479c:	b	347c4 <its_rule_list_extract@@Base+0x400>
   347a0:	cbz	x8, 348ac <its_rule_list_extract@@Base+0x4e8>
   347a4:	ldr	x9, [x8, #40]
   347a8:	cbz	x9, 348ac <its_rule_list_extract@@Base+0x4e8>
   347ac:	ldr	x1, [x9, #16]
   347b0:	ldr	x2, [x8, #16]
   347b4:	ldr	x3, [x28, #16]
   347b8:	adrp	x0, 3b000 <plural_table_size@@Base+0x1c00>
   347bc:	add	x0, x0, #0x724
   347c0:	bl	aa20 <xasprintf@plt>
   347c4:	mov	x20, x0
   347c8:	cbz	x19, 347e0 <its_rule_list_extract@@Base+0x41c>
   347cc:	ldrb	w8, [x19]
   347d0:	cbnz	w8, 347e0 <its_rule_list_extract@@Base+0x41c>
   347d4:	mov	x0, x19
   347d8:	bl	aa00 <free@plt>
   347dc:	mov	x19, xzr
   347e0:	ldr	x8, [sp, #16]
   347e4:	sub	x3, x29, #0x18
   347e8:	mov	x0, x22
   347ec:	mov	x1, x19
   347f0:	mov	x2, x21
   347f4:	mov	x4, x25
   347f8:	mov	x5, x20
   347fc:	mov	w6, w26
   34800:	blr	x8
   34804:	mov	x0, x20
   34808:	bl	aa00 <free@plt>
   3480c:	mov	x0, x19
   34810:	bl	aa00 <free@plt>
   34814:	mov	x0, x21
   34818:	bl	aa00 <free@plt>
   3481c:	mov	x0, x25
   34820:	bl	aa00 <free@plt>
   34824:	adrp	x26, 4c000 <plural_table_size@@Base+0x12c00>
   34828:	ldp	x9, x0, [sp, #24]
   3482c:	ldr	x26, [x26, #4024]
   34830:	add	x24, x24, #0x1
   34834:	cmp	x24, x9
   34838:	b.cc	34490 <its_rule_list_extract@@Base+0xcc>  // b.lo, b.ul, b.last
   3483c:	ldr	x22, [sp]
   34840:	b	34880 <its_rule_list_extract@@Base+0x4bc>
   34844:	bl	a2d0 <xmlGetLastError@plt>
   34848:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   3484c:	mov	x19, x0
   34850:	add	x1, x1, #0x29b
   34854:	mov	w2, #0x5                   	// #5
   34858:	mov	x0, xzr
   3485c:	bl	acd0 <dcgettext@plt>
   34860:	ldr	x4, [x19, #8]
   34864:	mov	x2, x0
   34868:	mov	w0, wzr
   3486c:	mov	w1, wzr
   34870:	mov	x3, x21
   34874:	bl	a140 <error@plt>
   34878:	b	3488c <its_rule_list_extract@@Base+0x4c8>
   3487c:	ldr	x0, [sp, #48]
   34880:	bl	aa00 <free@plt>
   34884:	mov	x0, x22
   34888:	bl	a2b0 <xmlFreeDoc@plt>
   3488c:	ldp	x20, x19, [sp, #176]
   34890:	ldp	x22, x21, [sp, #160]
   34894:	ldp	x24, x23, [sp, #144]
   34898:	ldp	x26, x25, [sp, #128]
   3489c:	ldp	x28, x27, [sp, #112]
   348a0:	ldp	x29, x30, [sp, #96]
   348a4:	add	sp, sp, #0xc0
   348a8:	ret
   348ac:	adrp	x0, 3b000 <plural_table_size@@Base+0x1c00>
   348b0:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   348b4:	adrp	x3, 3b000 <plural_table_size@@Base+0x1c00>
   348b8:	add	x0, x0, #0x6ff
   348bc:	add	x1, x1, #0x417
   348c0:	add	x3, x3, #0x662
   348c4:	mov	w2, #0x730                 	// #1840
   348c8:	bl	add0 <__assert_fail@plt>
   348cc:	adrp	x0, 3b000 <plural_table_size@@Base+0x1c00>
   348d0:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   348d4:	adrp	x3, 3b000 <plural_table_size@@Base+0x1c00>
   348d8:	add	x0, x0, #0x655
   348dc:	add	x1, x1, #0x417
   348e0:	add	x3, x3, #0x662
   348e4:	mov	w2, #0x72b                 	// #1835
   348e8:	bl	add0 <__assert_fail@plt>
   348ec:	stp	x29, x30, [sp, #-48]!
   348f0:	stp	x22, x21, [sp, #16]
   348f4:	stp	x20, x19, [sp, #32]
   348f8:	ldr	w8, [x2, #8]
   348fc:	mov	x29, sp
   34900:	cmp	w8, #0x1
   34904:	b.ne	34990 <its_rule_list_extract@@Base+0x5cc>  // b.any
   34908:	ldr	x22, [x2, #88]
   3490c:	mov	x21, x2
   34910:	mov	x19, x1
   34914:	mov	x20, x0
   34918:	cbz	x22, 34944 <its_rule_list_extract@@Base+0x580>
   3491c:	mov	x0, x20
   34920:	mov	x1, x22
   34924:	mov	w2, wzr
   34928:	bl	35f9c <its_merge_context_free@@Base+0x12c4>
   3492c:	tbz	w0, #0, 3493c <its_rule_list_extract@@Base+0x578>
   34930:	mov	x0, x19
   34934:	mov	x1, x22
   34938:	bl	360a8 <its_merge_context_free@@Base+0x13d0>
   3493c:	ldr	x22, [x22, #48]
   34940:	cbnz	x22, 3491c <its_rule_list_extract@@Base+0x558>
   34944:	mov	x0, x20
   34948:	mov	x1, x21
   3494c:	mov	w2, wzr
   34950:	bl	35f9c <its_merge_context_free@@Base+0x12c4>
   34954:	tbz	w0, #0, 34970 <its_rule_list_extract@@Base+0x5ac>
   34958:	mov	x0, x19
   3495c:	mov	x1, x21
   34960:	ldp	x20, x19, [sp, #32]
   34964:	ldp	x22, x21, [sp, #16]
   34968:	ldp	x29, x30, [sp], #48
   3496c:	b	360a8 <its_merge_context_free@@Base+0x13d0>
   34970:	ldr	x21, [x21, #24]
   34974:	cbz	x21, 34990 <its_rule_list_extract@@Base+0x5cc>
   34978:	mov	x0, x20
   3497c:	mov	x1, x19
   34980:	mov	x2, x21
   34984:	bl	348ec <its_rule_list_extract@@Base+0x528>
   34988:	ldr	x21, [x21, #48]
   3498c:	cbnz	x21, 34978 <its_rule_list_extract@@Base+0x5b4>
   34990:	ldp	x20, x19, [sp, #32]
   34994:	ldp	x22, x21, [sp, #16]
   34998:	ldp	x29, x30, [sp], #48
   3499c:	ret

00000000000349a0 <its_merge_context_merge@@Base>:
   349a0:	sub	sp, sp, #0x70
   349a4:	stp	x29, x30, [sp, #16]
   349a8:	stp	x28, x27, [sp, #32]
   349ac:	stp	x26, x25, [sp, #48]
   349b0:	stp	x24, x23, [sp, #64]
   349b4:	stp	x22, x21, [sp, #80]
   349b8:	stp	x20, x19, [sp, #96]
   349bc:	ldr	x8, [x0, #24]
   349c0:	add	x29, sp, #0x10
   349c4:	str	x1, [sp, #8]
   349c8:	cbz	x8, 34bb4 <its_merge_context_merge@@Base+0x214>
   349cc:	adrp	x25, 3b000 <plural_table_size@@Base+0x1c00>
   349d0:	mov	x19, x2
   349d4:	mov	x20, x0
   349d8:	mov	x24, xzr
   349dc:	add	x25, x25, #0x3e3
   349e0:	ldr	x9, [x20, #16]
   349e4:	ldr	x26, [x9, x24, lsl #3]
   349e8:	ldr	w9, [x26, #8]
   349ec:	cmp	w9, #0x1
   349f0:	b.ne	34ba8 <its_merge_context_merge@@Base+0x208>  // b.any
   349f4:	ldr	x0, [x20]
   349f8:	mov	x1, x26
   349fc:	bl	36108 <its_merge_context_free@@Base+0x1430>
   34a00:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   34a04:	add	x1, x1, #0x3d2
   34a08:	mov	x21, x0
   34a0c:	bl	34d08 <its_merge_context_free@@Base+0x30>
   34a10:	cbz	x0, 34a50 <its_merge_context_merge@@Base+0xb0>
   34a14:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   34a18:	add	x1, x1, #0x5aa
   34a1c:	mov	x22, x0
   34a20:	bl	a8d0 <strcmp@plt>
   34a24:	cbz	w0, 34a58 <its_merge_context_merge@@Base+0xb8>
   34a28:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   34a2c:	mov	x0, x22
   34a30:	add	x1, x1, #0x5e7
   34a34:	bl	a8d0 <strcmp@plt>
   34a38:	cbz	w0, 34a60 <its_merge_context_merge@@Base+0xc0>
   34a3c:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   34a40:	mov	x0, x22
   34a44:	add	x1, x1, #0x5ec
   34a48:	bl	a8d0 <strcmp@plt>
   34a4c:	cbz	w0, 34a68 <its_merge_context_merge@@Base+0xc8>
   34a50:	mov	w27, #0x1                   	// #1
   34a54:	b	34a6c <its_merge_context_merge@@Base+0xcc>
   34a58:	mov	w27, wzr
   34a5c:	b	34a6c <its_merge_context_merge@@Base+0xcc>
   34a60:	mov	w27, #0x3                   	// #3
   34a64:	b	34a6c <its_merge_context_merge@@Base+0xcc>
   34a68:	mov	w27, #0x2                   	// #2
   34a6c:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   34a70:	mov	x0, x21
   34a74:	add	x1, x1, #0x3ef
   34a78:	bl	34d08 <its_merge_context_free@@Base+0x30>
   34a7c:	cbz	x0, 34a98 <its_merge_context_merge@@Base+0xf8>
   34a80:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   34a84:	add	x1, x1, #0xb47
   34a88:	bl	a8d0 <strcmp@plt>
   34a8c:	cmp	w0, #0x0
   34a90:	cset	w22, eq  // eq = none
   34a94:	b	34a9c <its_merge_context_merge@@Base+0xfc>
   34a98:	mov	w22, wzr
   34a9c:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   34aa0:	mov	x0, x21
   34aa4:	add	x1, x1, #0x3e0
   34aa8:	bl	34d08 <its_merge_context_free@@Base+0x30>
   34aac:	cbz	x0, 34ad0 <its_merge_context_merge@@Base+0x130>
   34ab0:	mov	x2, x0
   34ab4:	ldr	x0, [x20]
   34ab8:	mov	x1, x26
   34abc:	mov	w3, wzr
   34ac0:	mov	w4, w22
   34ac4:	bl	361a8 <its_merge_context_free@@Base+0x14d0>
   34ac8:	mov	x28, x0
   34acc:	b	34ad4 <its_merge_context_merge@@Base+0x134>
   34ad0:	mov	x28, xzr
   34ad4:	mov	x0, x21
   34ad8:	mov	x1, x25
   34adc:	bl	34d08 <its_merge_context_free@@Base+0x30>
   34ae0:	cbz	x0, 34b04 <its_merge_context_merge@@Base+0x164>
   34ae4:	mov	x2, x0
   34ae8:	ldr	x0, [x20]
   34aec:	mov	x1, x26
   34af0:	mov	w3, wzr
   34af4:	mov	w4, w22
   34af8:	bl	361a8 <its_merge_context_free@@Base+0x14d0>
   34afc:	mov	x23, x0
   34b00:	b	34b08 <its_merge_context_merge@@Base+0x168>
   34b04:	mov	x23, xzr
   34b08:	mov	x0, x21
   34b0c:	bl	33888 <its_translate_rule_eval@@Base+0x3f8>
   34b10:	mov	x0, x21
   34b14:	bl	aa00 <free@plt>
   34b18:	cbnz	x23, 34b30 <its_merge_context_merge@@Base+0x190>
   34b1c:	mov	x0, x26
   34b20:	mov	w1, w27
   34b24:	mov	w2, w22
   34b28:	bl	35350 <its_merge_context_free@@Base+0x678>
   34b2c:	mov	x23, x0
   34b30:	ldrb	w8, [x23]
   34b34:	cbz	w8, 34b94 <its_merge_context_merge@@Base+0x1f4>
   34b38:	mov	x0, x19
   34b3c:	mov	x1, x28
   34b40:	mov	x2, x23
   34b44:	bl	ae40 <message_list_search@plt>
   34b48:	cbz	x0, 34b94 <its_merge_context_merge@@Base+0x1f4>
   34b4c:	ldr	x8, [x0, #24]
   34b50:	mov	x21, x0
   34b54:	ldrb	w8, [x8]
   34b58:	cbz	w8, 34b94 <its_merge_context_merge@@Base+0x1f4>
   34b5c:	ldr	x0, [x26, #72]
   34b60:	ldr	x1, [x26, #16]
   34b64:	bl	ac80 <xmlNewNode@plt>
   34b68:	ldr	x2, [sp, #8]
   34b6c:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   34b70:	add	x1, x1, #0x755
   34b74:	mov	x22, x0
   34b78:	bl	a630 <xmlSetProp@plt>
   34b7c:	ldr	x1, [x21, #24]
   34b80:	mov	x0, x22
   34b84:	bl	ac90 <xmlNodeAddContent@plt>
   34b88:	mov	x0, x26
   34b8c:	mov	x1, x22
   34b90:	bl	a570 <xmlAddNextSibling@plt>
   34b94:	mov	x0, x28
   34b98:	bl	aa00 <free@plt>
   34b9c:	mov	x0, x23
   34ba0:	bl	aa00 <free@plt>
   34ba4:	ldr	x8, [x20, #24]
   34ba8:	add	x24, x24, #0x1
   34bac:	cmp	x24, x8
   34bb0:	b.cc	349e0 <its_merge_context_merge@@Base+0x40>  // b.lo, b.ul, b.last
   34bb4:	ldp	x20, x19, [sp, #96]
   34bb8:	ldp	x22, x21, [sp, #80]
   34bbc:	ldp	x24, x23, [sp, #64]
   34bc0:	ldp	x26, x25, [sp, #48]
   34bc4:	ldp	x28, x27, [sp, #32]
   34bc8:	ldp	x29, x30, [sp, #16]
   34bcc:	add	sp, sp, #0x70
   34bd0:	ret

0000000000034bd4 <its_merge_context_alloc@@Base>:
   34bd4:	stp	x29, x30, [sp, #-48]!
   34bd8:	stp	x22, x21, [sp, #16]
   34bdc:	stp	x20, x19, [sp, #32]
   34be0:	mov	x21, x1
   34be4:	mov	x19, x0
   34be8:	mov	w2, #0x960                 	// #2400
   34bec:	mov	x0, x1
   34bf0:	mov	x1, xzr
   34bf4:	mov	x29, sp
   34bf8:	bl	a200 <xmlReadFile@plt>
   34bfc:	cbz	x0, 34c78 <its_merge_context_alloc@@Base+0xa4>
   34c00:	ldr	x8, [x19, #8]
   34c04:	mov	x20, x0
   34c08:	cbz	x8, 34c40 <its_merge_context_alloc@@Base+0x6c>
   34c0c:	mov	x22, xzr
   34c10:	add	x21, x19, #0x18
   34c14:	ldr	x8, [x19]
   34c18:	mov	x1, x21
   34c1c:	mov	x2, x20
   34c20:	ldr	x0, [x8, x22, lsl #3]
   34c24:	ldr	x8, [x0]
   34c28:	ldr	x8, [x8, #24]
   34c2c:	blr	x8
   34c30:	ldr	x8, [x19, #8]
   34c34:	add	x22, x22, #0x1
   34c38:	cmp	x22, x8
   34c3c:	b.cc	34c14 <its_merge_context_alloc@@Base+0x40>  // b.lo, b.ul, b.last
   34c40:	mov	w0, #0x28                  	// #40
   34c44:	bl	a590 <xmalloc@plt>
   34c48:	mov	x21, x0
   34c4c:	stp	x19, x20, [x0]
   34c50:	stp	xzr, xzr, [x0, #24]
   34c54:	mov	x22, x0
   34c58:	mov	x0, x20
   34c5c:	str	xzr, [x22, #16]!
   34c60:	bl	adc0 <xmlDocGetRootElement@plt>
   34c64:	mov	x2, x0
   34c68:	mov	x0, x19
   34c6c:	mov	x1, x22
   34c70:	bl	348ec <its_rule_list_extract@@Base+0x528>
   34c74:	b	34cb0 <its_merge_context_alloc@@Base+0xdc>
   34c78:	bl	a2d0 <xmlGetLastError@plt>
   34c7c:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   34c80:	mov	x19, x0
   34c84:	add	x1, x1, #0x29b
   34c88:	mov	w2, #0x5                   	// #5
   34c8c:	mov	x0, xzr
   34c90:	bl	acd0 <dcgettext@plt>
   34c94:	ldr	x4, [x19, #8]
   34c98:	mov	x2, x0
   34c9c:	mov	w0, wzr
   34ca0:	mov	w1, wzr
   34ca4:	mov	x3, x21
   34ca8:	bl	a140 <error@plt>
   34cac:	mov	x21, xzr
   34cb0:	mov	x0, x21
   34cb4:	ldp	x20, x19, [sp, #32]
   34cb8:	ldp	x22, x21, [sp, #16]
   34cbc:	ldp	x29, x30, [sp], #48
   34cc0:	ret

0000000000034cc4 <its_merge_context_write@@Base>:
   34cc4:	ldr	x8, [x0, #8]
   34cc8:	mov	w2, #0x1                   	// #1
   34ccc:	mov	x0, x1
   34cd0:	mov	x1, x8
   34cd4:	b	a810 <xmlDocFormatDump@plt>

0000000000034cd8 <its_merge_context_free@@Base>:
   34cd8:	stp	x29, x30, [sp, #-32]!
   34cdc:	str	x19, [sp, #16]
   34ce0:	mov	x19, x0
   34ce4:	ldr	x0, [x0, #8]
   34ce8:	mov	x29, sp
   34cec:	bl	a2b0 <xmlFreeDoc@plt>
   34cf0:	ldr	x0, [x19, #16]
   34cf4:	bl	aa00 <free@plt>
   34cf8:	mov	x0, x19
   34cfc:	ldr	x19, [sp, #16]
   34d00:	ldp	x29, x30, [sp], #32
   34d04:	b	aa00 <free@plt>
   34d08:	stp	x29, x30, [sp, #-48]!
   34d0c:	stp	x22, x21, [sp, #16]
   34d10:	stp	x20, x19, [sp, #32]
   34d14:	ldr	x20, [x0, #8]
   34d18:	mov	x29, sp
   34d1c:	cbz	x20, 34d50 <its_merge_context_free@@Base+0x78>
   34d20:	ldr	x8, [x0]
   34d24:	mov	x19, x1
   34d28:	mov	x21, xzr
   34d2c:	add	x22, x8, #0x8
   34d30:	ldur	x0, [x22, #-8]
   34d34:	mov	x1, x19
   34d38:	bl	a8d0 <strcmp@plt>
   34d3c:	cbz	w0, 34d58 <its_merge_context_free@@Base+0x80>
   34d40:	add	x21, x21, #0x1
   34d44:	cmp	x21, x20
   34d48:	add	x22, x22, #0x10
   34d4c:	b.cc	34d30 <its_merge_context_free@@Base+0x58>  // b.lo, b.ul, b.last
   34d50:	mov	x0, xzr
   34d54:	b	34d5c <its_merge_context_free@@Base+0x84>
   34d58:	ldr	x0, [x22]
   34d5c:	ldp	x20, x19, [sp, #32]
   34d60:	ldp	x22, x21, [sp, #16]
   34d64:	ldp	x29, x30, [sp], #48
   34d68:	ret
   34d6c:	stp	x29, x30, [sp, #-64]!
   34d70:	stp	x20, x19, [sp, #48]
   34d74:	mov	x19, x1
   34d78:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   34d7c:	mov	x20, x0
   34d80:	add	x1, x1, #0x4c6
   34d84:	mov	x0, x19
   34d88:	str	x23, [sp, #16]
   34d8c:	stp	x22, x21, [sp, #32]
   34d90:	mov	x29, sp
   34d94:	bl	a230 <xmlHasProp@plt>
   34d98:	cbz	x0, 34e44 <its_merge_context_free@@Base+0x16c>
   34d9c:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   34da0:	add	x1, x1, #0x352
   34da4:	mov	x0, x19
   34da8:	bl	a230 <xmlHasProp@plt>
   34dac:	cbz	x0, 34e64 <its_merge_context_free@@Base+0x18c>
   34db0:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   34db4:	add	x1, x1, #0x4c6
   34db8:	mov	x0, x19
   34dbc:	mov	x2, xzr
   34dc0:	bl	aec0 <xmlGetNsProp@plt>
   34dc4:	mov	x22, x0
   34dc8:	bl	a5a0 <xstrdup@plt>
   34dcc:	adrp	x23, 4c000 <plural_table_size@@Base+0x12c00>
   34dd0:	ldr	x23, [x23, #4024]
   34dd4:	mov	x21, x0
   34dd8:	mov	x0, x22
   34ddc:	ldr	x8, [x23]
   34de0:	blr	x8
   34de4:	cbz	x21, 34dec <its_merge_context_free@@Base+0x114>
   34de8:	str	x21, [x20, #8]
   34dec:	adrp	x21, 3b000 <plural_table_size@@Base+0x1c00>
   34df0:	add	x21, x21, #0x352
   34df4:	mov	x0, x19
   34df8:	mov	x1, x21
   34dfc:	mov	x2, xzr
   34e00:	bl	aec0 <xmlGetNsProp@plt>
   34e04:	mov	x19, x0
   34e08:	bl	a5a0 <xstrdup@plt>
   34e0c:	ldr	x8, [x23]
   34e10:	mov	x22, x0
   34e14:	mov	x0, x19
   34e18:	blr	x8
   34e1c:	add	x0, x20, #0x10
   34e20:	mov	x1, x21
   34e24:	mov	x2, x22
   34e28:	bl	33720 <its_translate_rule_eval@@Base+0x290>
   34e2c:	mov	x0, x22
   34e30:	ldp	x20, x19, [sp, #48]
   34e34:	ldp	x22, x21, [sp, #32]
   34e38:	ldr	x23, [sp, #16]
   34e3c:	ldp	x29, x30, [sp], #64
   34e40:	b	aa00 <free@plt>
   34e44:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   34e48:	add	x1, x1, #0x4cf
   34e4c:	mov	w2, #0x5                   	// #5
   34e50:	bl	acd0 <dcgettext@plt>
   34e54:	ldr	x3, [x19, #16]
   34e58:	adrp	x4, 3b000 <plural_table_size@@Base+0x1c00>
   34e5c:	add	x4, x4, #0x4c6
   34e60:	b	34e80 <its_merge_context_free@@Base+0x1a8>
   34e64:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   34e68:	add	x1, x1, #0x4cf
   34e6c:	mov	w2, #0x5                   	// #5
   34e70:	bl	acd0 <dcgettext@plt>
   34e74:	ldr	x3, [x19, #16]
   34e78:	adrp	x4, 3b000 <plural_table_size@@Base+0x1c00>
   34e7c:	add	x4, x4, #0x352
   34e80:	ldp	x20, x19, [sp, #48]
   34e84:	ldp	x22, x21, [sp, #32]
   34e88:	ldr	x23, [sp, #16]
   34e8c:	mov	x2, x0
   34e90:	mov	w0, wzr
   34e94:	mov	w1, wzr
   34e98:	ldp	x29, x30, [sp], #64
   34e9c:	b	a140 <error@plt>
   34ea0:	stp	x29, x30, [sp, #-32]!
   34ea4:	stp	x20, x19, [sp, #16]
   34ea8:	mov	x19, x0
   34eac:	ldr	x0, [x0, #8]
   34eb0:	mov	x29, sp
   34eb4:	bl	aa00 <free@plt>
   34eb8:	add	x0, x19, #0x10
   34ebc:	bl	33888 <its_translate_rule_eval@@Base+0x3f8>
   34ec0:	ldr	x0, [x19, #40]
   34ec4:	cbz	x0, 34ef8 <its_merge_context_free@@Base+0x220>
   34ec8:	ldr	x8, [x0]
   34ecc:	cbz	x8, 34eec <its_merge_context_free@@Base+0x214>
   34ed0:	mov	w20, #0x8                   	// #8
   34ed4:	mov	x0, x8
   34ed8:	bl	a420 <xmlFreeNs@plt>
   34edc:	ldr	x0, [x19, #40]
   34ee0:	ldr	x8, [x0, x20]
   34ee4:	add	x20, x20, #0x8
   34ee8:	cbnz	x8, 34ed4 <its_merge_context_free@@Base+0x1fc>
   34eec:	ldp	x20, x19, [sp, #16]
   34ef0:	ldp	x29, x30, [sp], #32
   34ef4:	b	aa00 <free@plt>
   34ef8:	ldp	x20, x19, [sp, #16]
   34efc:	ldp	x29, x30, [sp], #32
   34f00:	ret
   34f04:	stp	x29, x30, [sp, #-80]!
   34f08:	stp	x26, x25, [sp, #16]
   34f0c:	stp	x24, x23, [sp, #32]
   34f10:	stp	x22, x21, [sp, #48]
   34f14:	stp	x20, x19, [sp, #64]
   34f18:	ldr	x8, [x0, #8]
   34f1c:	mov	x29, sp
   34f20:	cbz	x8, 3505c <its_merge_context_free@@Base+0x384>
   34f24:	mov	x22, x0
   34f28:	mov	x0, x2
   34f2c:	mov	x19, x1
   34f30:	bl	a8c0 <xmlXPathNewContext@plt>
   34f34:	cbz	x0, 35070 <its_merge_context_free@@Base+0x398>
   34f38:	ldr	x8, [x22, #40]
   34f3c:	mov	x20, x0
   34f40:	cbz	x8, 34f6c <its_merge_context_free@@Base+0x294>
   34f44:	ldr	x8, [x8]
   34f48:	cbz	x8, 34f6c <its_merge_context_free@@Base+0x294>
   34f4c:	mov	w21, #0x8                   	// #8
   34f50:	ldp	x2, x1, [x8, #16]
   34f54:	mov	x0, x20
   34f58:	bl	a080 <xmlXPathRegisterNs@plt>
   34f5c:	ldr	x8, [x22, #40]
   34f60:	ldr	x8, [x8, x21]
   34f64:	add	x21, x21, #0x8
   34f68:	cbnz	x8, 34f50 <its_merge_context_free@@Base+0x278>
   34f6c:	ldr	x0, [x22, #8]
   34f70:	mov	x1, x20
   34f74:	bl	ae80 <xmlXPathEval@plt>
   34f78:	cbz	x0, 350a4 <its_merge_context_free@@Base+0x3cc>
   34f7c:	ldr	x23, [x0, #8]
   34f80:	mov	x21, x0
   34f84:	cbz	x23, 35038 <its_merge_context_free@@Base+0x360>
   34f88:	ldr	w8, [x23]
   34f8c:	cbz	w8, 35038 <its_merge_context_free@@Base+0x360>
   34f90:	mov	x24, xzr
   34f94:	add	x22, x22, #0x10
   34f98:	mov	w25, #0x18                  	// #24
   34f9c:	ldr	x8, [x23, #8]
   34fa0:	ldr	x26, [x8, x24, lsl #3]
   34fa4:	ldr	x8, [x19, #8]
   34fa8:	ldr	x9, [x26]
   34fac:	cmp	x9, x8
   34fb0:	b.hi	350e8 <its_merge_context_free@@Base+0x410>  // b.pmore
   34fb4:	cmp	x9, #0x1
   34fb8:	b.lt	34fcc <its_merge_context_free@@Base+0x2f4>  // b.tstop
   34fbc:	ldr	x8, [x19]
   34fc0:	madd	x8, x9, x25, x8
   34fc4:	sub	x0, x8, #0x18
   34fc8:	b	35020 <its_merge_context_free@@Base+0x348>
   34fcc:	ldr	x9, [x19, #16]
   34fd0:	cmp	x8, x9
   34fd4:	b.ne	35000 <its_merge_context_free@@Base+0x328>  // b.any
   34fd8:	mov	w9, #0x1                   	// #1
   34fdc:	ldr	x0, [x19]
   34fe0:	bfi	x9, x8, #1, #63
   34fe4:	add	x8, x9, x9, lsl #1
   34fe8:	lsl	x1, x8, #3
   34fec:	str	x9, [x19, #16]
   34ff0:	bl	a460 <xrealloc@plt>
   34ff4:	ldr	x8, [x19, #8]
   34ff8:	str	x0, [x19]
   34ffc:	b	35004 <its_merge_context_free@@Base+0x32c>
   35000:	ldr	x0, [x19]
   35004:	add	x9, x8, #0x1
   35008:	madd	x0, x8, x25, x0
   3500c:	str	x9, [x19, #8]
   35010:	stp	xzr, xzr, [x0]
   35014:	str	xzr, [x0, #16]
   35018:	ldr	x8, [x19, #8]
   3501c:	str	x8, [x26]
   35020:	mov	x1, x22
   35024:	bl	337a4 <its_translate_rule_eval@@Base+0x314>
   35028:	ldrsw	x8, [x23]
   3502c:	add	x24, x24, #0x1
   35030:	cmp	x24, x8
   35034:	b.cc	34f9c <its_merge_context_free@@Base+0x2c4>  // b.lo, b.ul, b.last
   35038:	mov	x0, x21
   3503c:	bl	a7f0 <xmlXPathFreeObject@plt>
   35040:	mov	x0, x20
   35044:	ldp	x20, x19, [sp, #64]
   35048:	ldp	x22, x21, [sp, #48]
   3504c:	ldp	x24, x23, [sp, #32]
   35050:	ldp	x26, x25, [sp, #16]
   35054:	ldp	x29, x30, [sp], #80
   35058:	b	ad00 <xmlXPathFreeContext@plt>
   3505c:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35060:	add	x1, x1, #0x4ef
   35064:	mov	w2, #0x5                   	// #5
   35068:	mov	x0, xzr
   3506c:	b	3507c <its_merge_context_free@@Base+0x3a4>
   35070:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35074:	add	x1, x1, #0x509
   35078:	mov	w2, #0x5                   	// #5
   3507c:	bl	acd0 <dcgettext@plt>
   35080:	ldp	x20, x19, [sp, #64]
   35084:	ldp	x22, x21, [sp, #48]
   35088:	ldp	x24, x23, [sp, #32]
   3508c:	ldp	x26, x25, [sp, #16]
   35090:	mov	x2, x0
   35094:	mov	w0, wzr
   35098:	mov	w1, wzr
   3509c:	ldp	x29, x30, [sp], #80
   350a0:	b	a140 <error@plt>
   350a4:	mov	x0, x20
   350a8:	bl	ad00 <xmlXPathFreeContext@plt>
   350ac:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   350b0:	add	x1, x1, #0x525
   350b4:	mov	w2, #0x5                   	// #5
   350b8:	mov	x0, xzr
   350bc:	bl	acd0 <dcgettext@plt>
   350c0:	ldr	x3, [x22, #8]
   350c4:	ldp	x20, x19, [sp, #64]
   350c8:	ldp	x22, x21, [sp, #48]
   350cc:	ldp	x24, x23, [sp, #32]
   350d0:	ldp	x26, x25, [sp, #16]
   350d4:	mov	x2, x0
   350d8:	mov	w0, wzr
   350dc:	mov	w1, wzr
   350e0:	ldp	x29, x30, [sp], #80
   350e4:	b	a140 <error@plt>
   350e8:	adrp	x0, 3b000 <plural_table_size@@Base+0x1c00>
   350ec:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   350f0:	adrp	x3, 3b000 <plural_table_size@@Base+0x1c00>
   350f4:	add	x0, x0, #0x401
   350f8:	add	x1, x1, #0x417
   350fc:	add	x3, x3, #0x54a
   35100:	mov	w2, #0x168                 	// #360
   35104:	bl	add0 <__assert_fail@plt>
   35108:	stp	x29, x30, [sp, #-80]!
   3510c:	stp	x20, x19, [sp, #64]
   35110:	mov	x20, x1
   35114:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35118:	mov	x19, x0
   3511c:	add	x1, x1, #0x4c6
   35120:	mov	x0, x20
   35124:	str	x25, [sp, #16]
   35128:	stp	x24, x23, [sp, #32]
   3512c:	stp	x22, x21, [sp, #48]
   35130:	mov	x29, sp
   35134:	bl	a230 <xmlHasProp@plt>
   35138:	cbz	x0, 35260 <its_merge_context_free@@Base+0x588>
   3513c:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35140:	add	x1, x1, #0x37a
   35144:	mov	x0, x20
   35148:	bl	a230 <xmlHasProp@plt>
   3514c:	cbz	x0, 35280 <its_merge_context_free@@Base+0x5a8>
   35150:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35154:	add	x1, x1, #0x4c6
   35158:	mov	x0, x20
   3515c:	mov	x2, xzr
   35160:	bl	aec0 <xmlGetNsProp@plt>
   35164:	mov	x22, x0
   35168:	bl	a5a0 <xstrdup@plt>
   3516c:	adrp	x24, 4c000 <plural_table_size@@Base+0x12c00>
   35170:	ldr	x24, [x24, #4024]
   35174:	mov	x21, x0
   35178:	mov	x0, x22
   3517c:	ldr	x8, [x24]
   35180:	blr	x8
   35184:	cbz	x21, 3518c <its_merge_context_free@@Base+0x4b4>
   35188:	str	x21, [x19, #8]
   3518c:	ldr	x21, [x20, #24]
   35190:	cbz	x21, 351dc <its_merge_context_free@@Base+0x504>
   35194:	adrp	x22, 3b000 <plural_table_size@@Base+0x1c00>
   35198:	adrp	x23, 3b000 <plural_table_size@@Base+0x1c00>
   3519c:	add	x22, x22, #0x386
   351a0:	add	x23, x23, #0x35c
   351a4:	ldr	w8, [x21, #8]
   351a8:	cmp	w8, #0x1
   351ac:	b.ne	351d4 <its_merge_context_free@@Base+0x4fc>  // b.any
   351b0:	ldr	x0, [x21, #16]
   351b4:	mov	x1, x22
   351b8:	bl	adb0 <xmlStrEqual@plt>
   351bc:	cbz	w0, 351d4 <its_merge_context_free@@Base+0x4fc>
   351c0:	ldr	x8, [x21, #72]
   351c4:	mov	x1, x23
   351c8:	ldr	x0, [x8, #16]
   351cc:	bl	adb0 <xmlStrEqual@plt>
   351d0:	cbnz	w0, 35348 <its_merge_context_free@@Base+0x670>
   351d4:	ldr	x21, [x21, #48]
   351d8:	cbnz	x21, 351a4 <its_merge_context_free@@Base+0x4cc>
   351dc:	mov	w25, wzr
   351e0:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   351e4:	add	x1, x1, #0x37a
   351e8:	mov	x0, x20
   351ec:	mov	x2, xzr
   351f0:	bl	aec0 <xmlGetNsProp@plt>
   351f4:	mov	x23, x0
   351f8:	bl	a5a0 <xstrdup@plt>
   351fc:	ldr	x8, [x24]
   35200:	mov	x22, x0
   35204:	mov	x0, x23
   35208:	blr	x8
   3520c:	cbz	x22, 35224 <its_merge_context_free@@Base+0x54c>
   35210:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35214:	add	x0, x19, #0x10
   35218:	add	x1, x1, #0x37a
   3521c:	mov	x2, x22
   35220:	bl	33720 <its_translate_rule_eval@@Base+0x290>
   35224:	mov	x0, x22
   35228:	bl	aa00 <free@plt>
   3522c:	cbz	w25, 352c0 <its_merge_context_free@@Base+0x5e8>
   35230:	mov	w1, #0x1                   	// #1
   35234:	mov	x0, x21
   35238:	mov	w2, wzr
   3523c:	bl	35350 <its_merge_context_free@@Base+0x678>
   35240:	mov	x20, x0
   35244:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35248:	add	x0, x19, #0x10
   3524c:	add	x1, x1, #0x386
   35250:	mov	x2, x20
   35254:	bl	33720 <its_translate_rule_eval@@Base+0x290>
   35258:	mov	x0, x20
   3525c:	b	35318 <its_merge_context_free@@Base+0x640>
   35260:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35264:	add	x1, x1, #0x4cf
   35268:	mov	w2, #0x5                   	// #5
   3526c:	bl	acd0 <dcgettext@plt>
   35270:	ldr	x3, [x20, #16]
   35274:	adrp	x4, 3b000 <plural_table_size@@Base+0x1c00>
   35278:	add	x4, x4, #0x4c6
   3527c:	b	3529c <its_merge_context_free@@Base+0x5c4>
   35280:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35284:	add	x1, x1, #0x4cf
   35288:	mov	w2, #0x5                   	// #5
   3528c:	bl	acd0 <dcgettext@plt>
   35290:	ldr	x3, [x20, #16]
   35294:	adrp	x4, 3b000 <plural_table_size@@Base+0x1c00>
   35298:	add	x4, x4, #0x37a
   3529c:	ldp	x20, x19, [sp, #64]
   352a0:	ldp	x22, x21, [sp, #48]
   352a4:	ldp	x24, x23, [sp, #32]
   352a8:	ldr	x25, [sp, #16]
   352ac:	mov	x2, x0
   352b0:	mov	w0, wzr
   352b4:	mov	w1, wzr
   352b8:	ldp	x29, x30, [sp], #80
   352bc:	b	a140 <error@plt>
   352c0:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   352c4:	add	x1, x1, #0x38e
   352c8:	mov	x0, x20
   352cc:	bl	a230 <xmlHasProp@plt>
   352d0:	cbz	x0, 35330 <its_merge_context_free@@Base+0x658>
   352d4:	adrp	x21, 3b000 <plural_table_size@@Base+0x1c00>
   352d8:	add	x21, x21, #0x38e
   352dc:	mov	x0, x20
   352e0:	mov	x1, x21
   352e4:	mov	x2, xzr
   352e8:	bl	aec0 <xmlGetNsProp@plt>
   352ec:	mov	x20, x0
   352f0:	bl	a5a0 <xstrdup@plt>
   352f4:	ldr	x8, [x24]
   352f8:	mov	x22, x0
   352fc:	mov	x0, x20
   35300:	blr	x8
   35304:	add	x0, x19, #0x10
   35308:	mov	x1, x21
   3530c:	mov	x2, x22
   35310:	bl	33720 <its_translate_rule_eval@@Base+0x290>
   35314:	mov	x0, x22
   35318:	ldp	x20, x19, [sp, #64]
   3531c:	ldp	x22, x21, [sp, #48]
   35320:	ldp	x24, x23, [sp, #32]
   35324:	ldr	x25, [sp, #16]
   35328:	ldp	x29, x30, [sp], #80
   3532c:	b	aa00 <free@plt>
   35330:	ldp	x20, x19, [sp, #64]
   35334:	ldp	x22, x21, [sp, #48]
   35338:	ldp	x24, x23, [sp, #32]
   3533c:	ldr	x25, [sp, #16]
   35340:	ldp	x29, x30, [sp], #80
   35344:	ret
   35348:	mov	w25, #0x1                   	// #1
   3534c:	b	351e0 <its_merge_context_free@@Base+0x508>
   35350:	sub	sp, sp, #0x80
   35354:	stp	x29, x30, [sp, #32]
   35358:	stp	x28, x27, [sp, #48]
   3535c:	stp	x26, x25, [sp, #64]
   35360:	stp	x24, x23, [sp, #80]
   35364:	stp	x22, x21, [sp, #96]
   35368:	stp	x20, x19, [sp, #112]
   3536c:	ldr	x21, [x0, #24]
   35370:	add	x29, sp, #0x20
   35374:	str	x0, [sp, #8]
   35378:	cbz	x21, 3573c <its_merge_context_free@@Base+0xa64>
   3537c:	adrp	x20, 4c000 <plural_table_size@@Base+0x12c00>
   35380:	ldr	x20, [x20, #4024]
   35384:	mov	w23, w2
   35388:	mov	w26, w1
   3538c:	mov	x24, xzr
   35390:	mov	x19, xzr
   35394:	mov	x22, xzr
   35398:	ldr	w8, [x21, #8]
   3539c:	sub	w9, w8, #0x3
   353a0:	cmp	w9, #0x2
   353a4:	b.cc	353d0 <its_merge_context_free@@Base+0x6f8>  // b.lo, b.ul, b.last
   353a8:	cmp	w8, #0x1
   353ac:	b.eq	353f0 <its_merge_context_free@@Base+0x718>  // b.none
   353b0:	cmp	w8, #0x5
   353b4:	b.ne	354cc <its_merge_context_free@@Base+0x7f4>  // b.any
   353b8:	ldr	x1, [x21, #16]
   353bc:	adrp	x0, 3b000 <plural_table_size@@Base+0x1c00>
   353c0:	add	x0, x0, #0x594
   353c4:	bl	aa20 <xasprintf@plt>
   353c8:	mov	x27, x0
   353cc:	b	35664 <its_merge_context_free@@Base+0x98c>
   353d0:	mov	x0, x21
   353d4:	bl	a5e0 <xmlNodeGetContent@plt>
   353d8:	mov	x27, x0
   353dc:	tbz	w23, #0, 354d4 <its_merge_context_free@@Base+0x7fc>
   353e0:	mov	x0, x27
   353e4:	bl	a5a0 <xstrdup@plt>
   353e8:	mov	x28, x0
   353ec:	b	35608 <its_merge_context_free@@Base+0x930>
   353f0:	mov	x0, xzr
   353f4:	str	x22, [sp, #16]
   353f8:	stur	x19, [x29, #-8]
   353fc:	mov	x19, x24
   35400:	bl	a160 <xmlAllocOutputBuffer@plt>
   35404:	mov	x27, x0
   35408:	bl	a9c0 <xmlNewTextWriter@plt>
   3540c:	mov	x28, x0
   35410:	and	w2, w23, #0x1
   35414:	mov	x0, x21
   35418:	mov	w1, w26
   3541c:	mov	w24, w23
   35420:	mov	w22, w26
   35424:	bl	35350 <its_merge_context_free@@Base+0x678>
   35428:	ldr	x1, [x21, #16]
   3542c:	mov	x25, x0
   35430:	mov	x0, x28
   35434:	bl	aac0 <xmlTextWriterStartElement@plt>
   35438:	ldr	x23, [x21, #88]
   3543c:	cbz	x23, 35474 <its_merge_context_free@@Base+0x79c>
   35440:	ldr	x1, [x23, #16]
   35444:	mov	x0, x21
   35448:	bl	a480 <xmlGetProp@plt>
   3544c:	ldr	x1, [x23, #16]
   35450:	mov	x26, x0
   35454:	mov	x0, x28
   35458:	mov	x2, x26
   3545c:	bl	abf0 <xmlTextWriterWriteAttribute@plt>
   35460:	ldr	x8, [x20]
   35464:	mov	x0, x26
   35468:	blr	x8
   3546c:	ldr	x23, [x23, #48]
   35470:	cbnz	x23, 35440 <its_merge_context_free@@Base+0x768>
   35474:	ldrb	w8, [x25]
   35478:	cbz	w8, 35488 <its_merge_context_free@@Base+0x7b0>
   3547c:	mov	x0, x28
   35480:	mov	x1, x25
   35484:	bl	a0a0 <xmlTextWriterWriteRaw@plt>
   35488:	mov	x0, x28
   3548c:	bl	a520 <xmlTextWriterEndElement@plt>
   35490:	mov	x0, x27
   35494:	bl	a660 <xmlOutputBufferGetContent@plt>
   35498:	mov	w1, w22
   3549c:	mov	w26, w22
   354a0:	bl	35764 <its_merge_context_free@@Base+0xa8c>
   354a4:	mov	x27, x0
   354a8:	mov	x0, x28
   354ac:	bl	a1c0 <xmlFreeTextWriter@plt>
   354b0:	mov	x0, x25
   354b4:	bl	aa00 <free@plt>
   354b8:	mov	w23, w24
   354bc:	mov	x24, x19
   354c0:	ldur	x19, [x29, #-8]
   354c4:	ldr	x22, [sp, #16]
   354c8:	b	35664 <its_merge_context_free@@Base+0x98c>
   354cc:	mov	x27, xzr
   354d0:	b	356ac <its_merge_context_free@@Base+0x9d4>
   354d4:	ldr	x9, [sp, #8]
   354d8:	mov	x8, xzr
   354dc:	mov	x10, x27
   354e0:	ldr	w25, [x9, #8]
   354e4:	mov	w9, #0x7                   	// #7
   354e8:	cmp	w25, #0x2
   354ec:	csinc	x9, x9, xzr, eq  // eq = none
   354f0:	ldrb	w11, [x10]
   354f4:	cmp	w11, #0x3b
   354f8:	b.gt	35518 <its_merge_context_free@@Base+0x840>
   354fc:	cmp	w11, #0x22
   35500:	mov	x12, x9
   35504:	b.eq	35538 <its_merge_context_free@@Base+0x860>  // b.none
   35508:	cmp	w11, #0x26
   3550c:	b.ne	35530 <its_merge_context_free@@Base+0x858>  // b.any
   35510:	mov	w12, #0x6                   	// #6
   35514:	b	35538 <its_merge_context_free@@Base+0x860>
   35518:	cmp	w11, #0x3e
   3551c:	b.eq	35528 <its_merge_context_free@@Base+0x850>  // b.none
   35520:	cmp	w11, #0x3c
   35524:	b.ne	35534 <its_merge_context_free@@Base+0x85c>  // b.any
   35528:	mov	w12, #0x5                   	// #5
   3552c:	b	35538 <its_merge_context_free@@Base+0x860>
   35530:	cbz	w11, 35544 <its_merge_context_free@@Base+0x86c>
   35534:	mov	w12, #0x1                   	// #1
   35538:	add	x8, x8, x12
   3553c:	add	x10, x10, #0x1
   35540:	b	354f0 <its_merge_context_free@@Base+0x818>
   35544:	add	x0, x8, #0x1
   35548:	bl	a590 <xmalloc@plt>
   3554c:	mov	x28, x0
   35550:	mov	x8, x27
   35554:	mov	x9, x0
   35558:	strb	wzr, [x0]
   3555c:	ldrb	w10, [x8]
   35560:	cmp	w10, #0x3b
   35564:	b.gt	35590 <its_merge_context_free@@Base+0x8b8>
   35568:	cmp	w10, #0x22
   3556c:	b.eq	355ac <its_merge_context_free@@Base+0x8d4>  // b.none
   35570:	cmp	w10, #0x26
   35574:	b.ne	355ec <its_merge_context_free@@Base+0x914>  // b.any
   35578:	mov	w10, #0x3b                  	// #59
   3557c:	mov	w11, #0x6126                	// #24870
   35580:	strh	w10, [x9, #4]
   35584:	add	x10, x9, #0x5
   35588:	movk	w11, #0x706d, lsl #16
   3558c:	b	355e0 <its_merge_context_free@@Base+0x908>
   35590:	cmp	w10, #0x3c
   35594:	b.eq	355d0 <its_merge_context_free@@Base+0x8f8>  // b.none
   35598:	cmp	w10, #0x3e
   3559c:	b.ne	355f8 <its_merge_context_free@@Base+0x920>  // b.any
   355a0:	mov	x10, x9
   355a4:	mov	w11, #0x6726                	// #26406
   355a8:	b	355d8 <its_merge_context_free@@Base+0x900>
   355ac:	cmp	w25, #0x2
   355b0:	b.ne	355f4 <its_merge_context_free@@Base+0x91c>  // b.any
   355b4:	mov	w10, #0x746f                	// #29807
   355b8:	movk	w10, #0x3b, lsl #16
   355bc:	mov	w11, #0x7126                	// #28966
   355c0:	stur	w10, [x9, #3]
   355c4:	add	x10, x9, #0x6
   355c8:	movk	w11, #0x6f75, lsl #16
   355cc:	b	355e0 <its_merge_context_free@@Base+0x908>
   355d0:	mov	x10, x9
   355d4:	mov	w11, #0x6c26                	// #27686
   355d8:	strb	wzr, [x10, #4]!
   355dc:	movk	w11, #0x3b74, lsl #16
   355e0:	str	w11, [x9]
   355e4:	mov	x9, x10
   355e8:	b	355fc <its_merge_context_free@@Base+0x924>
   355ec:	cbnz	w10, 355f8 <its_merge_context_free@@Base+0x920>
   355f0:	b	35604 <its_merge_context_free@@Base+0x92c>
   355f4:	mov	w10, #0x22                  	// #34
   355f8:	strb	w10, [x9], #1
   355fc:	add	x8, x8, #0x1
   35600:	b	3555c <its_merge_context_free@@Base+0x884>
   35604:	strb	wzr, [x9]
   35608:	ldr	x8, [x20]
   3560c:	mov	x0, x27
   35610:	blr	x8
   35614:	cmp	w26, #0x1
   35618:	mov	x0, x28
   3561c:	b.ne	35640 <its_merge_context_free@@Base+0x968>  // b.any
   35620:	ldr	x8, [x21, #56]
   35624:	mov	x0, x28
   35628:	cbnz	x8, 35640 <its_merge_context_free@@Base+0x968>
   3562c:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   35630:	mov	x0, x28
   35634:	add	x1, x1, #0x19f
   35638:	bl	aa60 <strspn@plt>
   3563c:	add	x0, x28, x0
   35640:	mov	w1, w26
   35644:	bl	35764 <its_merge_context_free@@Base+0xa8c>
   35648:	mov	x27, x0
   3564c:	mov	x0, x28
   35650:	bl	aa00 <free@plt>
   35654:	cmp	w26, #0x1
   35658:	b.ne	35664 <its_merge_context_free@@Base+0x98c>  // b.any
   3565c:	ldr	x8, [x21, #48]
   35660:	cbz	x8, 356c0 <its_merge_context_free@@Base+0x9e8>
   35664:	cbz	x27, 356ac <its_merge_context_free@@Base+0x9d4>
   35668:	mov	x0, x27
   3566c:	bl	a0d0 <strlen@plt>
   35670:	add	x25, x0, x22
   35674:	add	x8, x25, #0x1
   35678:	cmp	x8, x19
   3567c:	b.cc	3569c <its_merge_context_free@@Base+0x9c4>  // b.lo, b.ul, b.last
   35680:	mov	w8, #0x1                   	// #1
   35684:	bfi	x8, x19, #1, #63
   35688:	add	x19, x8, x0
   3568c:	mov	x0, x24
   35690:	mov	x1, x19
   35694:	bl	a460 <xrealloc@plt>
   35698:	mov	x24, x0
   3569c:	add	x0, x24, x22
   356a0:	mov	x1, x27
   356a4:	bl	ab70 <strcpy@plt>
   356a8:	mov	x22, x25
   356ac:	mov	x0, x27
   356b0:	bl	aa00 <free@plt>
   356b4:	ldr	x21, [x21, #48]
   356b8:	cbnz	x21, 35398 <its_merge_context_free@@Base+0x6c0>
   356bc:	b	35714 <its_merge_context_free@@Base+0xa3c>
   356c0:	mov	x0, x27
   356c4:	bl	a0d0 <strlen@plt>
   356c8:	cmp	x0, #0x1
   356cc:	b.lt	35664 <its_merge_context_free@@Base+0x98c>  // b.tstop
   356d0:	add	x9, x27, x0
   356d4:	mov	x8, x9
   356d8:	mov	w12, #0x1                   	// #1
   356dc:	ldrb	w10, [x8, #-1]!
   356e0:	cmp	w10, #0x20
   356e4:	b.hi	3570c <its_merge_context_free@@Base+0xa34>  // b.pmore
   356e8:	mov	x11, #0x600                 	// #1536
   356ec:	lsl	x10, x12, x10
   356f0:	movk	x11, #0x1, lsl #32
   356f4:	tst	x10, x11
   356f8:	b.eq	3570c <its_merge_context_free@@Base+0xa34>  // b.none
   356fc:	cmp	x8, x27
   35700:	mov	x9, x8
   35704:	b.hi	356dc <its_merge_context_free@@Base+0xa04>  // b.pmore
   35708:	b	35664 <its_merge_context_free@@Base+0x98c>
   3570c:	strb	wzr, [x9]
   35710:	b	35664 <its_merge_context_free@@Base+0x98c>
   35714:	cbz	x24, 3573c <its_merge_context_free@@Base+0xa64>
   35718:	mov	x0, x24
   3571c:	ldp	x20, x19, [sp, #112]
   35720:	ldp	x22, x21, [sp, #96]
   35724:	ldp	x24, x23, [sp, #80]
   35728:	ldp	x26, x25, [sp, #64]
   3572c:	ldp	x28, x27, [sp, #48]
   35730:	ldp	x29, x30, [sp, #32]
   35734:	add	sp, sp, #0x80
   35738:	ret
   3573c:	ldp	x20, x19, [sp, #112]
   35740:	ldp	x22, x21, [sp, #96]
   35744:	ldp	x24, x23, [sp, #80]
   35748:	ldp	x26, x25, [sp, #64]
   3574c:	ldp	x28, x27, [sp, #48]
   35750:	ldp	x29, x30, [sp, #32]
   35754:	adrp	x0, 37000 <get_search_path@@Base+0xb4c>
   35758:	add	x0, x0, #0x1a2
   3575c:	add	sp, sp, #0x80
   35760:	b	a5a0 <xstrdup@plt>
   35764:	stp	x29, x30, [sp, #-96]!
   35768:	cmp	w1, #0x3
   3576c:	stp	x28, x27, [sp, #16]
   35770:	stp	x26, x25, [sp, #32]
   35774:	stp	x24, x23, [sp, #48]
   35778:	stp	x22, x21, [sp, #64]
   3577c:	stp	x20, x19, [sp, #80]
   35780:	mov	x29, sp
   35784:	b.eq	357b0 <its_merge_context_free@@Base+0xad8>  // b.none
   35788:	cmp	w1, #0x2
   3578c:	b.eq	357d0 <its_merge_context_free@@Base+0xaf8>  // b.none
   35790:	cbnz	w1, 35910 <its_merge_context_free@@Base+0xc38>
   35794:	ldp	x20, x19, [sp, #80]
   35798:	ldp	x22, x21, [sp, #64]
   3579c:	ldp	x24, x23, [sp, #48]
   357a0:	ldp	x26, x25, [sp, #32]
   357a4:	ldp	x28, x27, [sp, #16]
   357a8:	ldp	x29, x30, [sp], #96
   357ac:	b	a5a0 <xstrdup@plt>
   357b0:	ldp	x20, x19, [sp, #80]
   357b4:	ldp	x22, x21, [sp, #64]
   357b8:	ldp	x24, x23, [sp, #48]
   357bc:	ldp	x26, x25, [sp, #32]
   357c0:	ldp	x28, x27, [sp, #16]
   357c4:	mov	w1, #0x2                   	// #2
   357c8:	ldp	x29, x30, [sp], #96
   357cc:	b	ac60 <trim2@plt>
   357d0:	bl	a5a0 <xstrdup@plt>
   357d4:	ldrb	w27, [x0]
   357d8:	mov	x19, x0
   357dc:	mov	x24, x0
   357e0:	cbz	w27, 35908 <its_merge_context_free@@Base+0xc30>
   357e4:	mov	x26, #0x600                 	// #1536
   357e8:	adrp	x20, 37000 <get_search_path@@Base+0xb4c>
   357ec:	mov	w25, #0x1                   	// #1
   357f0:	movk	x26, #0x1, lsl #32
   357f4:	add	x20, x20, #0x19f
   357f8:	mov	x28, x19
   357fc:	mov	x24, x19
   35800:	mov	x21, x19
   35804:	mov	w1, #0xa                   	// #10
   35808:	mov	x0, x21
   3580c:	bl	aca0 <strchrnul@plt>
   35810:	ldrb	w8, [x0]
   35814:	mov	x22, x0
   35818:	cbz	w8, 35848 <its_merge_context_free@@Base+0xb70>
   3581c:	add	x23, x22, #0x1
   35820:	mov	x0, x23
   35824:	mov	x1, x20
   35828:	bl	aa60 <strspn@plt>
   3582c:	mov	x2, x0
   35830:	add	x21, x23, x0
   35834:	mov	w1, #0xa                   	// #10
   35838:	mov	x0, x23
   3583c:	bl	abe0 <memchr@plt>
   35840:	cbz	x0, 35804 <its_merge_context_free@@Base+0xb2c>
   35844:	b	3584c <its_merge_context_free@@Base+0xb74>
   35848:	mov	x21, x22
   3584c:	cmp	x28, x22
   35850:	b.cs	35884 <its_merge_context_free@@Base+0xbac>  // b.hs, b.nlast
   35854:	sub	x8, x22, #0x1
   35858:	and	w9, w27, #0xff
   3585c:	cmp	w9, #0x20
   35860:	b.hi	35884 <its_merge_context_free@@Base+0xbac>  // b.pmore
   35864:	and	x9, x27, #0xff
   35868:	lsl	x9, x25, x9
   3586c:	tst	x9, x26
   35870:	b.eq	35884 <its_merge_context_free@@Base+0xbac>  // b.none
   35874:	cmp	x8, x28
   35878:	b.eq	358ec <its_merge_context_free@@Base+0xc14>  // b.none
   3587c:	ldrb	w27, [x28, #1]!
   35880:	b	35858 <its_merge_context_free@@Base+0xb80>
   35884:	cmp	x28, x22
   35888:	b.cs	358ec <its_merge_context_free@@Base+0xc14>  // b.hs, b.nlast
   3588c:	ldrb	w8, [x28]
   35890:	cmp	w8, #0x20
   35894:	b.hi	358d8 <its_merge_context_free@@Base+0xc00>  // b.pmore
   35898:	lsl	x9, x25, x8
   3589c:	tst	x9, x26
   358a0:	b.eq	358d8 <its_merge_context_free@@Base+0xc00>  // b.none
   358a4:	add	x28, x28, #0x1
   358a8:	cmp	x28, x22
   358ac:	b.cs	35884 <its_merge_context_free@@Base+0xbac>  // b.hs, b.nlast
   358b0:	ldrb	w8, [x28]
   358b4:	cmp	w8, #0x20
   358b8:	b.hi	358e0 <its_merge_context_free@@Base+0xc08>  // b.pmore
   358bc:	lsl	x8, x25, x8
   358c0:	tst	x8, x26
   358c4:	b.eq	358e0 <its_merge_context_free@@Base+0xc08>  // b.none
   358c8:	add	x28, x28, #0x1
   358cc:	cmp	x22, x28
   358d0:	b.ne	358b0 <its_merge_context_free@@Base+0xbd8>  // b.any
   358d4:	b	358ec <its_merge_context_free@@Base+0xc14>
   358d8:	add	x28, x28, #0x1
   358dc:	b	358e4 <its_merge_context_free@@Base+0xc0c>
   358e0:	mov	w8, #0x20                  	// #32
   358e4:	strb	w8, [x24], #1
   358e8:	b	35884 <its_merge_context_free@@Base+0xbac>
   358ec:	ldrb	w8, [x21]
   358f0:	cbz	w8, 35908 <its_merge_context_free@@Base+0xc30>
   358f4:	mov	w8, #0xa0a                 	// #2570
   358f8:	strh	w8, [x24], #2
   358fc:	ldrb	w27, [x21]
   35900:	mov	x28, x21
   35904:	cbnz	w27, 35804 <its_merge_context_free@@Base+0xb2c>
   35908:	strb	wzr, [x24]
   3590c:	b	35978 <its_merge_context_free@@Base+0xca0>
   35910:	bl	a5a0 <xstrdup@plt>
   35914:	mov	x10, #0x600                 	// #1536
   35918:	mov	x19, x0
   3591c:	mov	w8, #0x1                   	// #1
   35920:	movk	x10, #0x1, lsl #32
   35924:	mov	x9, x0
   35928:	mov	x11, x0
   3592c:	ldrb	w12, [x11]
   35930:	sub	w13, w12, #0x9
   35934:	cmp	w13, #0x2
   35938:	b.cc	35950 <its_merge_context_free@@Base+0xc78>  // b.lo, b.ul, b.last
   3593c:	cmp	w12, #0x20
   35940:	b.eq	35950 <its_merge_context_free@@Base+0xc78>  // b.none
   35944:	cbz	w12, 35974 <its_merge_context_free@@Base+0xc9c>
   35948:	add	x11, x11, #0x1
   3594c:	b	3596c <its_merge_context_free@@Base+0xc94>
   35950:	ldrb	w12, [x11, #1]!
   35954:	cmp	w12, #0x20
   35958:	b.hi	35968 <its_merge_context_free@@Base+0xc90>  // b.pmore
   3595c:	lsl	x12, x8, x12
   35960:	tst	x12, x10
   35964:	b.ne	35950 <its_merge_context_free@@Base+0xc78>  // b.any
   35968:	mov	w12, #0x20                  	// #32
   3596c:	strb	w12, [x9], #1
   35970:	b	3592c <its_merge_context_free@@Base+0xc54>
   35974:	strb	wzr, [x9]
   35978:	mov	x0, x19
   3597c:	ldp	x20, x19, [sp, #80]
   35980:	ldp	x22, x21, [sp, #64]
   35984:	ldp	x24, x23, [sp, #48]
   35988:	ldp	x26, x25, [sp, #32]
   3598c:	ldp	x28, x27, [sp, #16]
   35990:	ldp	x29, x30, [sp], #96
   35994:	ret
   35998:	stp	x29, x30, [sp, #-64]!
   3599c:	stp	x20, x19, [sp, #48]
   359a0:	mov	x19, x1
   359a4:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   359a8:	mov	x20, x0
   359ac:	add	x1, x1, #0x4c6
   359b0:	mov	x0, x19
   359b4:	str	x23, [sp, #16]
   359b8:	stp	x22, x21, [sp, #32]
   359bc:	mov	x29, sp
   359c0:	bl	a230 <xmlHasProp@plt>
   359c4:	cbz	x0, 35a70 <its_merge_context_free@@Base+0xd98>
   359c8:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   359cc:	add	x1, x1, #0x3a8
   359d0:	mov	x0, x19
   359d4:	bl	a230 <xmlHasProp@plt>
   359d8:	cbz	x0, 35a90 <its_merge_context_free@@Base+0xdb8>
   359dc:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   359e0:	add	x1, x1, #0x4c6
   359e4:	mov	x0, x19
   359e8:	mov	x2, xzr
   359ec:	bl	aec0 <xmlGetNsProp@plt>
   359f0:	mov	x22, x0
   359f4:	bl	a5a0 <xstrdup@plt>
   359f8:	adrp	x23, 4c000 <plural_table_size@@Base+0x12c00>
   359fc:	ldr	x23, [x23, #4024]
   35a00:	mov	x21, x0
   35a04:	mov	x0, x22
   35a08:	ldr	x8, [x23]
   35a0c:	blr	x8
   35a10:	cbz	x21, 35a18 <its_merge_context_free@@Base+0xd40>
   35a14:	str	x21, [x20, #8]
   35a18:	adrp	x21, 3b000 <plural_table_size@@Base+0x1c00>
   35a1c:	add	x21, x21, #0x3a8
   35a20:	mov	x0, x19
   35a24:	mov	x1, x21
   35a28:	mov	x2, xzr
   35a2c:	bl	aec0 <xmlGetNsProp@plt>
   35a30:	mov	x19, x0
   35a34:	bl	a5a0 <xstrdup@plt>
   35a38:	ldr	x8, [x23]
   35a3c:	mov	x22, x0
   35a40:	mov	x0, x19
   35a44:	blr	x8
   35a48:	add	x0, x20, #0x10
   35a4c:	mov	x1, x21
   35a50:	mov	x2, x22
   35a54:	bl	33720 <its_translate_rule_eval@@Base+0x290>
   35a58:	mov	x0, x22
   35a5c:	ldp	x20, x19, [sp, #48]
   35a60:	ldp	x22, x21, [sp, #32]
   35a64:	ldr	x23, [sp, #16]
   35a68:	ldp	x29, x30, [sp], #64
   35a6c:	b	aa00 <free@plt>
   35a70:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35a74:	add	x1, x1, #0x4cf
   35a78:	mov	w2, #0x5                   	// #5
   35a7c:	bl	acd0 <dcgettext@plt>
   35a80:	ldr	x3, [x19, #16]
   35a84:	adrp	x4, 3b000 <plural_table_size@@Base+0x1c00>
   35a88:	add	x4, x4, #0x4c6
   35a8c:	b	35aac <its_merge_context_free@@Base+0xdd4>
   35a90:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35a94:	add	x1, x1, #0x4cf
   35a98:	mov	w2, #0x5                   	// #5
   35a9c:	bl	acd0 <dcgettext@plt>
   35aa0:	ldr	x3, [x19, #16]
   35aa4:	adrp	x4, 3b000 <plural_table_size@@Base+0x1c00>
   35aa8:	add	x4, x4, #0x3a8
   35aac:	ldp	x20, x19, [sp, #48]
   35ab0:	ldp	x22, x21, [sp, #32]
   35ab4:	ldr	x23, [sp, #16]
   35ab8:	mov	x2, x0
   35abc:	mov	w0, wzr
   35ac0:	mov	w1, wzr
   35ac4:	ldp	x29, x30, [sp], #64
   35ac8:	b	a140 <error@plt>
   35acc:	stp	x29, x30, [sp, #-64]!
   35ad0:	stp	x20, x19, [sp, #48]
   35ad4:	mov	x20, x1
   35ad8:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35adc:	mov	x19, x0
   35ae0:	add	x1, x1, #0x4c6
   35ae4:	mov	x0, x20
   35ae8:	str	x23, [sp, #16]
   35aec:	stp	x22, x21, [sp, #32]
   35af0:	mov	x29, sp
   35af4:	bl	a230 <xmlHasProp@plt>
   35af8:	cbz	x0, 35c38 <its_merge_context_free@@Base+0xf60>
   35afc:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35b00:	add	x1, x1, #0x3d2
   35b04:	mov	x0, x20
   35b08:	bl	a230 <xmlHasProp@plt>
   35b0c:	cbz	x0, 35c84 <its_merge_context_free@@Base+0xfac>
   35b10:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35b14:	add	x1, x1, #0x4c6
   35b18:	mov	x0, x20
   35b1c:	mov	x2, xzr
   35b20:	bl	aec0 <xmlGetNsProp@plt>
   35b24:	mov	x22, x0
   35b28:	bl	a5a0 <xstrdup@plt>
   35b2c:	adrp	x23, 4c000 <plural_table_size@@Base+0x12c00>
   35b30:	ldr	x23, [x23, #4024]
   35b34:	mov	x21, x0
   35b38:	mov	x0, x22
   35b3c:	ldr	x8, [x23]
   35b40:	blr	x8
   35b44:	cbz	x21, 35b4c <its_merge_context_free@@Base+0xe74>
   35b48:	str	x21, [x19, #8]
   35b4c:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35b50:	add	x1, x1, #0x3d2
   35b54:	mov	x0, x20
   35b58:	mov	x2, xzr
   35b5c:	bl	aec0 <xmlGetNsProp@plt>
   35b60:	mov	x22, x0
   35b64:	bl	a5a0 <xstrdup@plt>
   35b68:	ldr	x8, [x23]
   35b6c:	mov	x21, x0
   35b70:	mov	x0, x22
   35b74:	blr	x8
   35b78:	cbz	x21, 35c58 <its_merge_context_free@@Base+0xf80>
   35b7c:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35b80:	add	x1, x1, #0x5aa
   35b84:	mov	x0, x21
   35b88:	bl	a8d0 <strcmp@plt>
   35b8c:	cbz	w0, 35c58 <its_merge_context_free@@Base+0xf80>
   35b90:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35b94:	add	x1, x1, #0x3d8
   35b98:	mov	x0, x21
   35b9c:	bl	a8d0 <strcmp@plt>
   35ba0:	cbz	w0, 35c58 <its_merge_context_free@@Base+0xf80>
   35ba4:	ldr	x8, [x20, #72]
   35ba8:	cbz	x8, 35c04 <its_merge_context_free@@Base+0xf2c>
   35bac:	ldr	x0, [x8, #16]
   35bb0:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35bb4:	add	x1, x1, #0x5b3
   35bb8:	bl	adb0 <xmlStrEqual@plt>
   35bbc:	cbz	w0, 35bd4 <its_merge_context_free@@Base+0xefc>
   35bc0:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35bc4:	add	x1, x1, #0x5e7
   35bc8:	mov	x0, x21
   35bcc:	bl	a8d0 <strcmp@plt>
   35bd0:	cbz	w0, 35c58 <its_merge_context_free@@Base+0xf80>
   35bd4:	ldr	x8, [x20, #72]
   35bd8:	cbz	x8, 35c04 <its_merge_context_free@@Base+0xf2c>
   35bdc:	ldr	x0, [x8, #16]
   35be0:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35be4:	add	x1, x1, #0x5b3
   35be8:	bl	adb0 <xmlStrEqual@plt>
   35bec:	cbz	w0, 35c04 <its_merge_context_free@@Base+0xf2c>
   35bf0:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35bf4:	add	x1, x1, #0x5ec
   35bf8:	mov	x0, x21
   35bfc:	bl	a8d0 <strcmp@plt>
   35c00:	cbz	w0, 35c58 <its_merge_context_free@@Base+0xf80>
   35c04:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35c08:	add	x1, x1, #0x5f6
   35c0c:	mov	w2, #0x5                   	// #5
   35c10:	mov	x0, xzr
   35c14:	bl	acd0 <dcgettext@plt>
   35c18:	adrp	x4, 3b000 <plural_table_size@@Base+0x1c00>
   35c1c:	mov	x2, x0
   35c20:	add	x4, x4, #0x3d2
   35c24:	mov	w0, wzr
   35c28:	mov	w1, wzr
   35c2c:	mov	x3, x21
   35c30:	bl	a140 <error@plt>
   35c34:	b	35c6c <its_merge_context_free@@Base+0xf94>
   35c38:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35c3c:	add	x1, x1, #0x4cf
   35c40:	mov	w2, #0x5                   	// #5
   35c44:	bl	acd0 <dcgettext@plt>
   35c48:	ldr	x3, [x20, #16]
   35c4c:	adrp	x4, 3b000 <plural_table_size@@Base+0x1c00>
   35c50:	add	x4, x4, #0x4c6
   35c54:	b	35ca0 <its_merge_context_free@@Base+0xfc8>
   35c58:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35c5c:	add	x0, x19, #0x10
   35c60:	add	x1, x1, #0x3d2
   35c64:	mov	x2, x21
   35c68:	bl	33720 <its_translate_rule_eval@@Base+0x290>
   35c6c:	mov	x0, x21
   35c70:	ldp	x20, x19, [sp, #48]
   35c74:	ldp	x22, x21, [sp, #32]
   35c78:	ldr	x23, [sp, #16]
   35c7c:	ldp	x29, x30, [sp], #64
   35c80:	b	aa00 <free@plt>
   35c84:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35c88:	add	x1, x1, #0x4cf
   35c8c:	mov	w2, #0x5                   	// #5
   35c90:	bl	acd0 <dcgettext@plt>
   35c94:	ldr	x3, [x20, #16]
   35c98:	adrp	x4, 3b000 <plural_table_size@@Base+0x1c00>
   35c9c:	add	x4, x4, #0x3d2
   35ca0:	ldp	x20, x19, [sp, #48]
   35ca4:	ldp	x22, x21, [sp, #32]
   35ca8:	ldr	x23, [sp, #16]
   35cac:	mov	x2, x0
   35cb0:	mov	w0, wzr
   35cb4:	mov	w1, wzr
   35cb8:	ldp	x29, x30, [sp], #64
   35cbc:	b	a140 <error@plt>
   35cc0:	stp	x29, x30, [sp, #-64]!
   35cc4:	stp	x20, x19, [sp, #48]
   35cc8:	mov	x19, x1
   35ccc:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35cd0:	mov	x20, x0
   35cd4:	add	x1, x1, #0x4c6
   35cd8:	mov	x0, x19
   35cdc:	stp	x24, x23, [sp, #16]
   35ce0:	stp	x22, x21, [sp, #32]
   35ce4:	mov	x29, sp
   35ce8:	bl	a230 <xmlHasProp@plt>
   35cec:	cbz	x0, 35df8 <its_merge_context_free@@Base+0x1120>
   35cf0:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35cf4:	add	x1, x1, #0x3e0
   35cf8:	mov	x0, x19
   35cfc:	bl	a230 <xmlHasProp@plt>
   35d00:	cbz	x0, 35e18 <its_merge_context_free@@Base+0x1140>
   35d04:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35d08:	add	x1, x1, #0x4c6
   35d0c:	mov	x0, x19
   35d10:	mov	x2, xzr
   35d14:	bl	aec0 <xmlGetNsProp@plt>
   35d18:	mov	x22, x0
   35d1c:	bl	a5a0 <xstrdup@plt>
   35d20:	adrp	x24, 4c000 <plural_table_size@@Base+0x12c00>
   35d24:	ldr	x24, [x24, #4024]
   35d28:	mov	x21, x0
   35d2c:	mov	x0, x22
   35d30:	ldr	x8, [x24]
   35d34:	blr	x8
   35d38:	cbz	x21, 35d40 <its_merge_context_free@@Base+0x1068>
   35d3c:	str	x21, [x20, #8]
   35d40:	adrp	x21, 3b000 <plural_table_size@@Base+0x1c00>
   35d44:	add	x21, x21, #0x3e0
   35d48:	mov	x0, x19
   35d4c:	mov	x1, x21
   35d50:	mov	x2, xzr
   35d54:	bl	aec0 <xmlGetNsProp@plt>
   35d58:	mov	x22, x0
   35d5c:	bl	a5a0 <xstrdup@plt>
   35d60:	ldr	x8, [x24]
   35d64:	mov	x23, x0
   35d68:	mov	x0, x22
   35d6c:	blr	x8
   35d70:	add	x20, x20, #0x10
   35d74:	mov	x0, x20
   35d78:	mov	x1, x21
   35d7c:	mov	x2, x23
   35d80:	bl	33720 <its_translate_rule_eval@@Base+0x290>
   35d84:	mov	x0, x23
   35d88:	bl	aa00 <free@plt>
   35d8c:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35d90:	add	x1, x1, #0x3e3
   35d94:	mov	x0, x19
   35d98:	bl	a230 <xmlHasProp@plt>
   35d9c:	cbz	x0, 35e54 <its_merge_context_free@@Base+0x117c>
   35da0:	adrp	x21, 3b000 <plural_table_size@@Base+0x1c00>
   35da4:	add	x21, x21, #0x3e3
   35da8:	mov	x0, x19
   35dac:	mov	x1, x21
   35db0:	mov	x2, xzr
   35db4:	bl	aec0 <xmlGetNsProp@plt>
   35db8:	mov	x19, x0
   35dbc:	bl	a5a0 <xstrdup@plt>
   35dc0:	ldr	x8, [x24]
   35dc4:	mov	x22, x0
   35dc8:	mov	x0, x19
   35dcc:	blr	x8
   35dd0:	mov	x0, x20
   35dd4:	mov	x1, x21
   35dd8:	mov	x2, x22
   35ddc:	bl	33720 <its_translate_rule_eval@@Base+0x290>
   35de0:	mov	x0, x22
   35de4:	ldp	x20, x19, [sp, #48]
   35de8:	ldp	x22, x21, [sp, #32]
   35dec:	ldp	x24, x23, [sp, #16]
   35df0:	ldp	x29, x30, [sp], #64
   35df4:	b	aa00 <free@plt>
   35df8:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35dfc:	add	x1, x1, #0x4cf
   35e00:	mov	w2, #0x5                   	// #5
   35e04:	bl	acd0 <dcgettext@plt>
   35e08:	ldr	x3, [x19, #16]
   35e0c:	adrp	x4, 3b000 <plural_table_size@@Base+0x1c00>
   35e10:	add	x4, x4, #0x4c6
   35e14:	b	35e34 <its_merge_context_free@@Base+0x115c>
   35e18:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35e1c:	add	x1, x1, #0x4cf
   35e20:	mov	w2, #0x5                   	// #5
   35e24:	bl	acd0 <dcgettext@plt>
   35e28:	ldr	x3, [x19, #16]
   35e2c:	adrp	x4, 3b000 <plural_table_size@@Base+0x1c00>
   35e30:	add	x4, x4, #0x3e0
   35e34:	ldp	x20, x19, [sp, #48]
   35e38:	ldp	x22, x21, [sp, #32]
   35e3c:	ldp	x24, x23, [sp, #16]
   35e40:	mov	x2, x0
   35e44:	mov	w0, wzr
   35e48:	mov	w1, wzr
   35e4c:	ldp	x29, x30, [sp], #64
   35e50:	b	a140 <error@plt>
   35e54:	ldp	x20, x19, [sp, #48]
   35e58:	ldp	x22, x21, [sp, #32]
   35e5c:	ldp	x24, x23, [sp, #16]
   35e60:	ldp	x29, x30, [sp], #64
   35e64:	ret
   35e68:	stp	x29, x30, [sp, #-64]!
   35e6c:	stp	x20, x19, [sp, #48]
   35e70:	mov	x19, x1
   35e74:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35e78:	mov	x20, x0
   35e7c:	add	x1, x1, #0x4c6
   35e80:	mov	x0, x19
   35e84:	str	x23, [sp, #16]
   35e88:	stp	x22, x21, [sp, #32]
   35e8c:	mov	x29, sp
   35e90:	bl	a230 <xmlHasProp@plt>
   35e94:	cbz	x0, 35f40 <its_merge_context_free@@Base+0x1268>
   35e98:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35e9c:	add	x1, x1, #0x3ef
   35ea0:	mov	x0, x19
   35ea4:	bl	a230 <xmlHasProp@plt>
   35ea8:	cbz	x0, 35f60 <its_merge_context_free@@Base+0x1288>
   35eac:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35eb0:	add	x1, x1, #0x4c6
   35eb4:	mov	x0, x19
   35eb8:	mov	x2, xzr
   35ebc:	bl	aec0 <xmlGetNsProp@plt>
   35ec0:	mov	x22, x0
   35ec4:	bl	a5a0 <xstrdup@plt>
   35ec8:	adrp	x23, 4c000 <plural_table_size@@Base+0x12c00>
   35ecc:	ldr	x23, [x23, #4024]
   35ed0:	mov	x21, x0
   35ed4:	mov	x0, x22
   35ed8:	ldr	x8, [x23]
   35edc:	blr	x8
   35ee0:	cbz	x21, 35ee8 <its_merge_context_free@@Base+0x1210>
   35ee4:	str	x21, [x20, #8]
   35ee8:	adrp	x21, 3b000 <plural_table_size@@Base+0x1c00>
   35eec:	add	x21, x21, #0x3ef
   35ef0:	mov	x0, x19
   35ef4:	mov	x1, x21
   35ef8:	mov	x2, xzr
   35efc:	bl	aec0 <xmlGetNsProp@plt>
   35f00:	mov	x19, x0
   35f04:	bl	a5a0 <xstrdup@plt>
   35f08:	ldr	x8, [x23]
   35f0c:	mov	x22, x0
   35f10:	mov	x0, x19
   35f14:	blr	x8
   35f18:	add	x0, x20, #0x10
   35f1c:	mov	x1, x21
   35f20:	mov	x2, x22
   35f24:	bl	33720 <its_translate_rule_eval@@Base+0x290>
   35f28:	mov	x0, x22
   35f2c:	ldp	x20, x19, [sp, #48]
   35f30:	ldp	x22, x21, [sp, #32]
   35f34:	ldr	x23, [sp, #16]
   35f38:	ldp	x29, x30, [sp], #64
   35f3c:	b	aa00 <free@plt>
   35f40:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35f44:	add	x1, x1, #0x4cf
   35f48:	mov	w2, #0x5                   	// #5
   35f4c:	bl	acd0 <dcgettext@plt>
   35f50:	ldr	x3, [x19, #16]
   35f54:	adrp	x4, 3b000 <plural_table_size@@Base+0x1c00>
   35f58:	add	x4, x4, #0x4c6
   35f5c:	b	35f7c <its_merge_context_free@@Base+0x12a4>
   35f60:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35f64:	add	x1, x1, #0x4cf
   35f68:	mov	w2, #0x5                   	// #5
   35f6c:	bl	acd0 <dcgettext@plt>
   35f70:	ldr	x3, [x19, #16]
   35f74:	adrp	x4, 3b000 <plural_table_size@@Base+0x1c00>
   35f78:	add	x4, x4, #0x3ef
   35f7c:	ldp	x20, x19, [sp, #48]
   35f80:	ldp	x22, x21, [sp, #32]
   35f84:	ldr	x23, [sp, #16]
   35f88:	mov	x2, x0
   35f8c:	mov	w0, wzr
   35f90:	mov	w1, wzr
   35f94:	ldp	x29, x30, [sp], #64
   35f98:	b	a140 <error@plt>
   35f9c:	stp	x29, x30, [sp, #-48]!
   35fa0:	stp	x22, x21, [sp, #16]
   35fa4:	stp	x20, x19, [sp, #32]
   35fa8:	ldr	w8, [x1, #8]
   35fac:	mov	x29, sp
   35fb0:	sub	w8, w8, #0x1
   35fb4:	cmp	w8, #0x1
   35fb8:	b.hi	36000 <its_merge_context_free@@Base+0x1328>  // b.pmore
   35fbc:	mov	w20, w2
   35fc0:	mov	x21, x1
   35fc4:	mov	x19, x0
   35fc8:	bl	36108 <its_merge_context_free@@Base+0x1430>
   35fcc:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   35fd0:	add	x1, x1, #0x352
   35fd4:	mov	x22, x0
   35fd8:	bl	34d08 <its_merge_context_free@@Base+0x30>
   35fdc:	cbz	x0, 35ff0 <its_merge_context_free@@Base+0x1318>
   35fe0:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   35fe4:	add	x1, x1, #0xb4f
   35fe8:	bl	a8d0 <strcmp@plt>
   35fec:	cbz	w0, 36014 <its_merge_context_free@@Base+0x133c>
   35ff0:	mov	x0, x22
   35ff4:	bl	33888 <its_translate_rule_eval@@Base+0x3f8>
   35ff8:	mov	x0, x22
   35ffc:	bl	aa00 <free@plt>
   36000:	mov	w0, wzr
   36004:	ldp	x20, x19, [sp, #32]
   36008:	ldp	x22, x21, [sp, #16]
   3600c:	ldp	x29, x30, [sp], #48
   36010:	ret
   36014:	cmp	w20, #0x1
   36018:	b.lt	36040 <its_merge_context_free@@Base+0x1368>  // b.tstop
   3601c:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   36020:	add	x1, x1, #0x3a8
   36024:	mov	x0, x22
   36028:	bl	34d08 <its_merge_context_free@@Base+0x30>
   3602c:	cbz	x0, 35ff0 <its_merge_context_free@@Base+0x1318>
   36030:	adrp	x1, 37000 <get_search_path@@Base+0xb4c>
   36034:	add	x1, x1, #0xb4f
   36038:	bl	a8d0 <strcmp@plt>
   3603c:	cbnz	w0, 35ff0 <its_merge_context_free@@Base+0x1318>
   36040:	mov	x0, x22
   36044:	bl	33888 <its_translate_rule_eval@@Base+0x3f8>
   36048:	mov	x0, x22
   3604c:	bl	aa00 <free@plt>
   36050:	ldr	x21, [x21, #24]
   36054:	cbz	x21, 360a0 <its_merge_context_free@@Base+0x13c8>
   36058:	add	w20, w20, #0x1
   3605c:	ldr	w8, [x21, #8]
   36060:	sub	w9, w8, #0x3
   36064:	cmp	w9, #0x3
   36068:	b.cc	36090 <its_merge_context_free@@Base+0x13b8>  // b.lo, b.ul, b.last
   3606c:	cmp	w8, #0x8
   36070:	b.eq	36090 <its_merge_context_free@@Base+0x13b8>  // b.none
   36074:	cmp	w8, #0x1
   36078:	b.ne	36000 <its_merge_context_free@@Base+0x1328>  // b.any
   3607c:	mov	x0, x19
   36080:	mov	x1, x21
   36084:	mov	w2, w20
   36088:	bl	35f9c <its_merge_context_free@@Base+0x12c4>
   3608c:	tbz	w0, #0, 36000 <its_merge_context_free@@Base+0x1328>
   36090:	ldr	x21, [x21, #48]
   36094:	mov	w0, #0x1                   	// #1
   36098:	cbnz	x21, 3605c <its_merge_context_free@@Base+0x1384>
   3609c:	b	36004 <its_merge_context_free@@Base+0x132c>
   360a0:	mov	w0, #0x1                   	// #1
   360a4:	b	36004 <its_merge_context_free@@Base+0x132c>
   360a8:	stp	x29, x30, [sp, #-32]!
   360ac:	stp	x20, x19, [sp, #16]
   360b0:	ldp	x8, x9, [x0, #8]
   360b4:	mov	x19, x0
   360b8:	mov	x20, x1
   360bc:	mov	x29, sp
   360c0:	cmp	x8, x9
   360c4:	b.ne	360ec <its_merge_context_free@@Base+0x1414>  // b.any
   360c8:	ldr	x0, [x19]
   360cc:	mov	w9, #0x1                   	// #1
   360d0:	bfi	x9, x8, #1, #63
   360d4:	lsl	x1, x9, #3
   360d8:	str	x9, [x19, #16]
   360dc:	bl	a460 <xrealloc@plt>
   360e0:	ldr	x8, [x19, #8]
   360e4:	str	x0, [x19]
   360e8:	b	360f0 <its_merge_context_free@@Base+0x1418>
   360ec:	ldr	x0, [x19]
   360f0:	add	x9, x8, #0x1
   360f4:	str	x9, [x19, #8]
   360f8:	str	x20, [x0, x8, lsl #3]
   360fc:	ldp	x20, x19, [sp, #16]
   36100:	ldp	x29, x30, [sp], #32
   36104:	ret
   36108:	stp	x29, x30, [sp, #-64]!
   3610c:	stp	x20, x19, [sp, #48]
   36110:	mov	x19, x1
   36114:	mov	x20, x0
   36118:	mov	w0, #0x1                   	// #1
   3611c:	mov	w1, #0x18                  	// #24
   36120:	stp	x24, x23, [sp, #16]
   36124:	stp	x22, x21, [sp, #32]
   36128:	mov	x29, sp
   3612c:	bl	aea0 <xcalloc@plt>
   36130:	ldr	x8, [x20, #8]
   36134:	mov	x21, x0
   36138:	cbz	x8, 36190 <its_merge_context_free@@Base+0x14b8>
   3613c:	mov	x24, xzr
   36140:	add	x22, x20, #0x18
   36144:	ldr	x8, [x20]
   36148:	mov	x1, x22
   3614c:	mov	x2, x19
   36150:	ldr	x0, [x8, x24, lsl #3]
   36154:	ldr	x8, [x0]
   36158:	ldr	x8, [x8, #32]
   3615c:	blr	x8
   36160:	mov	x23, x0
   36164:	mov	x0, x21
   36168:	mov	x1, x23
   3616c:	bl	337a4 <its_translate_rule_eval@@Base+0x314>
   36170:	mov	x0, x23
   36174:	bl	33888 <its_translate_rule_eval@@Base+0x3f8>
   36178:	mov	x0, x23
   3617c:	bl	aa00 <free@plt>
   36180:	ldr	x8, [x20, #8]
   36184:	add	x24, x24, #0x1
   36188:	cmp	x24, x8
   3618c:	b.cc	36144 <its_merge_context_free@@Base+0x146c>  // b.lo, b.ul, b.last
   36190:	mov	x0, x21
   36194:	ldp	x20, x19, [sp, #48]
   36198:	ldp	x22, x21, [sp, #32]
   3619c:	ldp	x24, x23, [sp, #16]
   361a0:	ldp	x29, x30, [sp], #64
   361a4:	ret
   361a8:	sub	sp, sp, #0x80
   361ac:	stp	x29, x30, [sp, #32]
   361b0:	stp	x26, x25, [sp, #64]
   361b4:	stp	x24, x23, [sp, #80]
   361b8:	stp	x22, x21, [sp, #96]
   361bc:	stp	x20, x19, [sp, #112]
   361c0:	ldr	x8, [x1, #64]
   361c4:	mov	x24, x0
   361c8:	str	x27, [sp, #48]
   361cc:	add	x29, sp, #0x20
   361d0:	mov	x0, x8
   361d4:	mov	w21, w4
   361d8:	mov	w20, w3
   361dc:	mov	x22, x2
   361e0:	mov	x23, x1
   361e4:	bl	a8c0 <xmlXPathNewContext@plt>
   361e8:	cbz	x0, 362e8 <its_merge_context_free@@Base+0x1610>
   361ec:	ldr	x8, [x24, #8]
   361f0:	mov	x19, x0
   361f4:	cbz	x8, 36244 <its_merge_context_free@@Base+0x156c>
   361f8:	mov	x25, xzr
   361fc:	ldr	x9, [x24]
   36200:	ldr	x26, [x9, x25, lsl #3]
   36204:	ldr	x9, [x26, #40]
   36208:	cbz	x9, 36238 <its_merge_context_free@@Base+0x1560>
   3620c:	ldr	x9, [x9]
   36210:	cbz	x9, 36238 <its_merge_context_free@@Base+0x1560>
   36214:	mov	w27, #0x8                   	// #8
   36218:	ldp	x2, x1, [x9, #16]
   3621c:	mov	x0, x19
   36220:	bl	a080 <xmlXPathRegisterNs@plt>
   36224:	ldr	x8, [x26, #40]
   36228:	ldr	x9, [x8, x27]
   3622c:	add	x27, x27, #0x8
   36230:	cbnz	x9, 36218 <its_merge_context_free@@Base+0x1540>
   36234:	ldr	x8, [x24, #8]
   36238:	add	x25, x25, #0x1
   3623c:	cmp	x25, x8
   36240:	b.cc	361fc <its_merge_context_free@@Base+0x1524>  // b.lo, b.ul, b.last
   36244:	mov	x0, x23
   36248:	mov	x1, x19
   3624c:	bl	ab90 <xmlXPathSetContextNode@plt>
   36250:	mov	x0, x22
   36254:	mov	x1, x19
   36258:	bl	a690 <xmlXPathEvalExpression@plt>
   3625c:	cbz	x0, 3630c <its_merge_context_free@@Base+0x1634>
   36260:	ldr	w8, [x0]
   36264:	mov	x23, x0
   36268:	cmp	w8, #0x4
   3626c:	b.eq	36344 <its_merge_context_free@@Base+0x166c>  // b.none
   36270:	cmp	w8, #0x1
   36274:	b.ne	36354 <its_merge_context_free@@Base+0x167c>  // b.any
   36278:	ldr	x24, [x23, #8]
   3627c:	add	x0, sp, #0x8
   36280:	bl	a770 <string_list_init@plt>
   36284:	ldr	w8, [x24]
   36288:	cbz	w8, 362d0 <its_merge_context_free@@Base+0x15f8>
   3628c:	mov	x25, xzr
   36290:	and	w21, w21, #0x1
   36294:	ldr	x8, [x24, #8]
   36298:	mov	w1, w20
   3629c:	mov	w2, w21
   362a0:	ldr	x0, [x8, x25, lsl #3]
   362a4:	bl	35350 <its_merge_context_free@@Base+0x678>
   362a8:	mov	x22, x0
   362ac:	add	x0, sp, #0x8
   362b0:	mov	x1, x22
   362b4:	bl	a2a0 <string_list_append@plt>
   362b8:	mov	x0, x22
   362bc:	bl	aa00 <free@plt>
   362c0:	ldrsw	x8, [x24]
   362c4:	add	x25, x25, #0x1
   362c8:	cmp	x25, x8
   362cc:	b.cc	36294 <its_merge_context_free@@Base+0x15bc>  // b.lo, b.ul, b.last
   362d0:	add	x0, sp, #0x8
   362d4:	bl	a5b0 <string_list_concat@plt>
   362d8:	mov	x20, x0
   362dc:	add	x0, sp, #0x8
   362e0:	bl	a190 <string_list_destroy@plt>
   362e4:	b	36358 <its_merge_context_free@@Base+0x1680>
   362e8:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   362ec:	add	x1, x1, #0x509
   362f0:	mov	w2, #0x5                   	// #5
   362f4:	bl	acd0 <dcgettext@plt>
   362f8:	mov	x2, x0
   362fc:	mov	w0, wzr
   36300:	mov	w1, wzr
   36304:	bl	a140 <error@plt>
   36308:	b	3633c <its_merge_context_free@@Base+0x1664>
   3630c:	mov	x0, x19
   36310:	bl	ad00 <xmlXPathFreeContext@plt>
   36314:	adrp	x1, 3b000 <plural_table_size@@Base+0x1c00>
   36318:	add	x1, x1, #0x72d
   3631c:	mov	w2, #0x5                   	// #5
   36320:	mov	x0, xzr
   36324:	bl	acd0 <dcgettext@plt>
   36328:	mov	x2, x0
   3632c:	mov	w0, wzr
   36330:	mov	w1, wzr
   36334:	mov	x3, x22
   36338:	bl	a140 <error@plt>
   3633c:	mov	x20, xzr
   36340:	b	36368 <its_merge_context_free@@Base+0x1690>
   36344:	ldr	x0, [x23, #32]
   36348:	bl	a5a0 <xstrdup@plt>
   3634c:	mov	x20, x0
   36350:	b	36358 <its_merge_context_free@@Base+0x1680>
   36354:	mov	x20, xzr
   36358:	mov	x0, x23
   3635c:	bl	a7f0 <xmlXPathFreeObject@plt>
   36360:	mov	x0, x19
   36364:	bl	ad00 <xmlXPathFreeContext@plt>
   36368:	mov	x0, x20
   3636c:	ldp	x20, x19, [sp, #112]
   36370:	ldp	x22, x21, [sp, #96]
   36374:	ldp	x24, x23, [sp, #80]
   36378:	ldp	x26, x25, [sp, #64]
   3637c:	ldr	x27, [sp, #48]
   36380:	ldp	x29, x30, [sp, #32]
   36384:	add	sp, sp, #0x80
   36388:	ret
   3638c:	stp	x29, x30, [sp, #-48]!
   36390:	stp	x20, x19, [sp, #32]
   36394:	mov	x19, x0
   36398:	mov	x0, x1
   3639c:	str	x21, [sp, #16]
   363a0:	mov	x29, sp
   363a4:	bl	a5a0 <xstrdup@plt>
   363a8:	mov	w1, #0xa                   	// #10
   363ac:	mov	x20, x0
   363b0:	bl	aa80 <strchr@plt>
   363b4:	mov	x21, x20
   363b8:	cbz	x0, 36434 <its_merge_context_free@@Base+0x175c>
   363bc:	mov	x21, x20
   363c0:	mov	x1, x21
   363c4:	ldrb	w8, [x1]
   363c8:	cmp	w8, #0x9
   363cc:	b.eq	363d8 <its_merge_context_free@@Base+0x1700>  // b.none
   363d0:	cmp	w8, #0x20
   363d4:	b.ne	363e0 <its_merge_context_free@@Base+0x1708>  // b.any
   363d8:	add	x1, x1, #0x1
   363dc:	b	363c4 <its_merge_context_free@@Base+0x16ec>
   363e0:	cmp	x0, x1
   363e4:	mov	x21, x0
   363e8:	b.ls	36418 <its_merge_context_free@@Base+0x1740>  // b.plast
   363ec:	mov	x21, x0
   363f0:	ldrb	w8, [x21, #-1]!
   363f4:	cmp	w8, #0x20
   363f8:	b.eq	36404 <its_merge_context_free@@Base+0x172c>  // b.none
   363fc:	cmp	w8, #0x9
   36400:	b.ne	36414 <its_merge_context_free@@Base+0x173c>  // b.any
   36404:	cmp	x21, x1
   36408:	mov	x0, x21
   3640c:	b.hi	363ec <its_merge_context_free@@Base+0x1714>  // b.pmore
   36410:	b	36418 <its_merge_context_free@@Base+0x1740>
   36414:	mov	x21, x0
   36418:	mov	x0, x19
   3641c:	strb	wzr, [x21], #1
   36420:	bl	a2a0 <string_list_append@plt>
   36424:	mov	w1, #0xa                   	// #10
   36428:	mov	x0, x21
   3642c:	bl	aa80 <strchr@plt>
   36430:	cbnz	x0, 363c0 <its_merge_context_free@@Base+0x16e8>
   36434:	mov	x0, x21
   36438:	bl	a0d0 <strlen@plt>
   3643c:	mov	x1, x21
   36440:	ldrb	w8, [x1]
   36444:	cmp	w8, #0x9
   36448:	b.eq	36454 <its_merge_context_free@@Base+0x177c>  // b.none
   3644c:	cmp	w8, #0x20
   36450:	b.ne	3645c <its_merge_context_free@@Base+0x1784>  // b.any
   36454:	add	x1, x1, #0x1
   36458:	b	36440 <its_merge_context_free@@Base+0x1768>
   3645c:	add	x9, x21, x0
   36460:	cmp	x9, x1
   36464:	b.ls	36490 <its_merge_context_free@@Base+0x17b8>  // b.plast
   36468:	mov	x8, x9
   3646c:	ldrb	w10, [x8, #-1]!
   36470:	cmp	w10, #0x20
   36474:	b.eq	36480 <its_merge_context_free@@Base+0x17a8>  // b.none
   36478:	cmp	w10, #0x9
   3647c:	b.ne	36490 <its_merge_context_free@@Base+0x17b8>  // b.any
   36480:	cmp	x8, x1
   36484:	mov	x9, x8
   36488:	b.hi	3646c <its_merge_context_free@@Base+0x1794>  // b.pmore
   3648c:	b	36494 <its_merge_context_free@@Base+0x17bc>
   36490:	mov	x8, x9
   36494:	mov	x0, x19
   36498:	strb	wzr, [x8]
   3649c:	bl	a2a0 <string_list_append@plt>
   364a0:	mov	x0, x20
   364a4:	ldp	x20, x19, [sp, #32]
   364a8:	ldr	x21, [sp, #16]
   364ac:	ldp	x29, x30, [sp], #48
   364b0:	b	aa00 <free@plt>

00000000000364b4 <get_search_path@@Base>:
   364b4:	sub	sp, sp, #0x60
   364b8:	stp	x20, x19, [sp, #80]
   364bc:	mov	x19, x0
   364c0:	adrp	x0, 3b000 <plural_table_size@@Base+0x1c00>
   364c4:	add	x0, x0, #0x75e
   364c8:	stp	x29, x30, [sp, #32]
   364cc:	str	x23, [sp, #48]
   364d0:	stp	x22, x21, [sp, #64]
   364d4:	add	x29, sp, #0x20
   364d8:	bl	ae20 <getenv@plt>
   364dc:	mov	x20, x0
   364e0:	mov	w23, #0x2                   	// #2
   364e4:	cbz	x0, 36514 <get_search_path@@Base+0x60>
   364e8:	mov	x21, x20
   364ec:	ldrb	w8, [x21]
   364f0:	cbz	w8, 36514 <get_search_path@@Base+0x60>
   364f4:	mov	w1, #0x3a                  	// #58
   364f8:	mov	x0, x21
   364fc:	bl	aca0 <strchrnul@plt>
   36500:	cmp	x21, x0
   36504:	ldrb	w8, [x0], #1
   36508:	cinc	x23, x23, ne  // ne = any
   3650c:	mov	x21, x0
   36510:	cbnz	w8, 364ec <get_search_path@@Base+0x38>
   36514:	adrp	x0, 3b000 <plural_table_size@@Base+0x1c00>
   36518:	add	x0, x0, #0x76e
   3651c:	bl	ae20 <getenv@plt>
   36520:	mov	x21, x0
   36524:	cbz	x0, 36554 <get_search_path@@Base+0xa0>
   36528:	mov	x22, x21
   3652c:	ldrb	w8, [x22]
   36530:	cbz	w8, 36554 <get_search_path@@Base+0xa0>
   36534:	mov	w1, #0x3a                  	// #58
   36538:	mov	x0, x22
   3653c:	bl	aca0 <strchrnul@plt>
   36540:	cmp	x22, x0
   36544:	ldrb	w8, [x0], #1
   36548:	cinc	x23, x23, ne  // ne = any
   3654c:	mov	x22, x0
   36550:	cbnz	w8, 3652c <get_search_path@@Base+0x78>
   36554:	add	x0, x23, #0x1
   36558:	mov	w1, #0x8                   	// #8
   3655c:	bl	aea0 <xcalloc@plt>
   36560:	mov	x23, x0
   36564:	stp	x0, xzr, [sp, #8]
   36568:	adrp	x0, 3b000 <plural_table_size@@Base+0x1c00>
   3656c:	add	x0, x0, #0x77c
   36570:	bl	ae20 <getenv@plt>
   36574:	cbz	x0, 36584 <get_search_path@@Base+0xd0>
   36578:	ldrb	w8, [x0]
   3657c:	mov	x22, x0
   36580:	cbnz	w8, 3658c <get_search_path@@Base+0xd8>
   36584:	adrp	x22, 3b000 <plural_table_size@@Base+0x1c00>
   36588:	add	x22, x22, #0x78b
   3658c:	mov	x0, x22
   36590:	cbz	x19, 365a4 <get_search_path@@Base+0xf0>
   36594:	mov	x1, x19
   36598:	mov	x2, xzr
   3659c:	bl	ae50 <xconcatenated_filename@plt>
   365a0:	b	365a8 <get_search_path@@Base+0xf4>
   365a4:	bl	a5a0 <xstrdup@plt>
   365a8:	mov	w8, #0x1                   	// #1
   365ac:	str	x8, [sp, #16]
   365b0:	str	x0, [x23]
   365b4:	cbz	x20, 365d0 <get_search_path@@Base+0x11c>
   365b8:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
   365bc:	add	x1, x1, #0x6ec
   365c0:	add	x2, sp, #0x8
   365c4:	mov	x0, x20
   365c8:	str	x19, [sp, #24]
   365cc:	bl	36684 <get_search_path@@Base+0x1d0>
   365d0:	cbz	x21, 36618 <get_search_path@@Base+0x164>
   365d4:	adrp	x0, 3b000 <plural_table_size@@Base+0x1c00>
   365d8:	add	x0, x0, #0x796
   365dc:	cbz	x19, 365f0 <get_search_path@@Base+0x13c>
   365e0:	mov	x1, x19
   365e4:	mov	x2, xzr
   365e8:	bl	ae50 <xconcatenated_filename@plt>
   365ec:	b	365f4 <get_search_path@@Base+0x140>
   365f0:	bl	a5a0 <xstrdup@plt>
   365f4:	adrp	x1, 36000 <its_merge_context_free@@Base+0x1328>
   365f8:	mov	x20, x0
   365fc:	str	x0, [sp, #24]
   36600:	add	x1, x1, #0x6ec
   36604:	add	x2, sp, #0x8
   36608:	mov	x0, x21
   3660c:	bl	36684 <get_search_path@@Base+0x1d0>
   36610:	mov	x0, x20
   36614:	bl	aa00 <free@plt>
   36618:	adrp	x0, 36000 <its_merge_context_free@@Base+0x1328>
   3661c:	adrp	x2, 3b000 <plural_table_size@@Base+0x1c00>
   36620:	add	x0, x0, #0x971
   36624:	add	x2, x2, #0x79e
   36628:	mov	x1, x22
   3662c:	bl	aa20 <xasprintf@plt>
   36630:	mov	x20, x0
   36634:	cbz	x19, 36658 <get_search_path@@Base+0x1a4>
   36638:	mov	x0, x20
   3663c:	mov	x1, x19
   36640:	mov	x2, xzr
   36644:	bl	ae50 <xconcatenated_filename@plt>
   36648:	mov	x19, x0
   3664c:	mov	x0, x20
   36650:	bl	aa00 <free@plt>
   36654:	mov	x20, x19
   36658:	ldp	x9, x8, [sp, #8]
   3665c:	ldr	x23, [sp, #48]
   36660:	add	x10, x8, #0x1
   36664:	str	x10, [sp, #16]
   36668:	str	x20, [x9, x8, lsl #3]
   3666c:	ldr	x0, [sp, #8]
   36670:	ldp	x20, x19, [sp, #80]
   36674:	ldp	x22, x21, [sp, #64]
   36678:	ldp	x29, x30, [sp, #32]
   3667c:	add	sp, sp, #0x60
   36680:	ret
   36684:	stp	x29, x30, [sp, #-48]!
   36688:	stp	x22, x21, [sp, #16]
   3668c:	stp	x20, x19, [sp, #32]
   36690:	mov	x19, x2
   36694:	mov	x20, x1
   36698:	mov	x21, x0
   3669c:	mov	x29, sp
   366a0:	ldrb	w8, [x21]
   366a4:	cbz	w8, 366dc <get_search_path@@Base+0x228>
   366a8:	mov	w1, #0x3a                  	// #58
   366ac:	mov	x0, x21
   366b0:	bl	aca0 <strchrnul@plt>
   366b4:	mov	x22, x0
   366b8:	cmp	x21, x0
   366bc:	b.eq	366d0 <get_search_path@@Base+0x21c>  // b.none
   366c0:	sub	x1, x22, x21
   366c4:	mov	x0, x21
   366c8:	mov	x2, x19
   366cc:	blr	x20
   366d0:	ldrb	w8, [x22], #1
   366d4:	mov	x21, x22
   366d8:	cbnz	w8, 366a0 <get_search_path@@Base+0x1ec>
   366dc:	ldp	x20, x19, [sp, #32]
   366e0:	ldp	x22, x21, [sp, #16]
   366e4:	ldp	x29, x30, [sp], #48
   366e8:	ret
   366ec:	stp	x29, x30, [sp, #-48]!
   366f0:	str	x21, [sp, #16]
   366f4:	stp	x20, x19, [sp, #32]
   366f8:	mov	x29, sp
   366fc:	mov	x19, x2
   36700:	bl	a4f0 <xmemdup0@plt>
   36704:	ldr	x1, [x19, #16]
   36708:	mov	x20, x0
   3670c:	cbz	x1, 3672c <get_search_path@@Base+0x278>
   36710:	mov	x0, x20
   36714:	mov	x2, xzr
   36718:	bl	ae50 <xconcatenated_filename@plt>
   3671c:	mov	x21, x0
   36720:	mov	x0, x20
   36724:	bl	aa00 <free@plt>
   36728:	mov	x20, x21
   3672c:	ldp	x9, x8, [x19]
   36730:	ldr	x21, [sp, #16]
   36734:	add	x10, x8, #0x1
   36738:	str	x10, [x19, #8]
   3673c:	str	x20, [x9, x8, lsl #3]
   36740:	ldp	x20, x19, [sp, #32]
   36744:	ldp	x29, x30, [sp], #48
   36748:	ret

Disassembly of section .fini:

000000000003674c <.fini>:
   3674c:	stp	x29, x30, [sp, #-16]!
   36750:	mov	x29, sp
   36754:	ldp	x29, x30, [sp], #16
   36758:	ret
