In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libctf-nobfd.a_gcc_-O1:

ctf-archive.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <sort_modent_by_name>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x1, [x1]
   c:	ldr	x0, [x0]
  10:	add	x1, x2, x1
  14:	add	x0, x2, x0
  18:	bl	0 <strcmp>
  1c:	ldp	x29, x30, [sp], #16
  20:	ret

0000000000000024 <ctf_arc_open_by_name_internal>:
  24:	stp	x29, x30, [sp, #-128]!
  28:	mov	x29, sp
  2c:	stp	x19, x20, [sp, #16]
  30:	stp	x21, x22, [sp, #32]
  34:	stp	x23, x24, [sp, #48]
  38:	stp	x25, x26, [sp, #64]
  3c:	stp	x27, x28, [sp, #80]
  40:	mov	x20, x0
  44:	mov	x27, x1
  48:	mov	x28, x2
  4c:	mov	x26, x4
  50:	adrp	x0, 0 <_CTF_SECTION>
  54:	add	x0, x0, #0x0
  58:	cmp	x3, #0x0
  5c:	csel	x23, x0, x3, eq  // eq = none
  60:	mov	x1, x23
  64:	adrp	x0, 0 <sort_modent_by_name>
  68:	add	x0, x0, #0x0
  6c:	bl	0 <ctf_dprintf>
  70:	ldr	x24, [x20, #24]
  74:	add	x24, x20, x24
  78:	mrs	x0, tpidr_el0
  7c:	add	x0, x0, #0x0, lsl #12
  80:	add	x0, x0, #0x0
  84:	str	x24, [x0]
  88:	ldr	x22, [x20, #16]
  8c:	mov	x21, #0x0                   	// #0
  90:	b	98 <ctf_arc_open_by_name_internal+0x74>
  94:	mov	x22, x19
  98:	cmp	x21, x22
  9c:	b.cs	164 <ctf_arc_open_by_name_internal+0x140>  // b.hs, b.nlast
  a0:	add	x19, x21, x22
  a4:	lsr	x19, x19, #1
  a8:	lsl	x0, x19, #4
  ac:	add	x0, x0, #0x28
  b0:	add	x25, x20, x0
  b4:	ldr	x1, [x20, x0]
  b8:	add	x1, x24, x1
  bc:	mov	x0, x23
  c0:	bl	0 <strcmp>
  c4:	tbnz	w0, #31, 94 <ctf_arc_open_by_name_internal+0x70>
  c8:	cmp	w0, #0x0
  cc:	b.le	d8 <ctf_arc_open_by_name_internal+0xb4>
  d0:	add	x21, x19, #0x1
  d4:	b	98 <ctf_arc_open_by_name_internal+0x74>
  d8:	ldr	x19, [x25, #8]
  dc:	mov	x1, x19
  e0:	adrp	x0, 0 <sort_modent_by_name>
  e4:	add	x0, x0, #0x0
  e8:	bl	0 <ctf_dprintf>
  ec:	ldr	x0, [x20, #32]
  f0:	add	x19, x19, x0
  f4:	adrp	x0, 0 <_CTF_SECTION>
  f8:	add	x0, x0, #0x0
  fc:	str	x0, [sp, #96]
 100:	ldr	x0, [x20, x19]
 104:	str	x0, [sp, #112]
 108:	mov	x0, #0x1                   	// #1
 10c:	str	x0, [sp, #120]
 110:	add	x19, x19, #0x8
 114:	add	x19, x20, x19
 118:	str	x19, [sp, #104]
 11c:	mov	x3, x26
 120:	mov	x2, x28
 124:	mov	x1, x27
 128:	add	x0, sp, #0x60
 12c:	bl	0 <ctf_bufopen>
 130:	mov	x26, x0
 134:	cbz	x0, 144 <ctf_arc_open_by_name_internal+0x120>
 138:	ldr	w1, [x20, #8]
 13c:	mov	x0, x26
 140:	bl	0 <ctf_setmodel>
 144:	mov	x0, x26
 148:	ldp	x19, x20, [sp, #16]
 14c:	ldp	x21, x22, [sp, #32]
 150:	ldp	x23, x24, [sp, #48]
 154:	ldp	x25, x26, [sp, #64]
 158:	ldp	x27, x28, [sp, #80]
 15c:	ldp	x29, x30, [sp], #128
 160:	ret
 164:	cbz	x26, 144 <ctf_arc_open_by_name_internal+0x120>
 168:	mov	w0, #0x415                 	// #1045
 16c:	str	w0, [x26]
 170:	mov	x26, #0x0                   	// #0
 174:	b	144 <ctf_arc_open_by_name_internal+0x120>

0000000000000178 <ctf_arc_write_fd>:
 178:	stp	x29, x30, [sp, #-176]!
 17c:	mov	x29, sp
 180:	stp	x19, x20, [sp, #16]
 184:	stp	x21, x22, [sp, #32]
 188:	stp	x25, x26, [sp, #64]
 18c:	stp	x27, x28, [sp, #80]
 190:	mov	w21, w0
 194:	str	x1, [sp, #96]
 198:	mov	x19, x2
 19c:	mov	x25, x3
 1a0:	str	x4, [sp, #112]
 1a4:	strb	wzr, [sp, #175]
 1a8:	mov	x1, x2
 1ac:	adrp	x0, 0 <sort_modent_by_name>
 1b0:	add	x0, x0, #0x0
 1b4:	bl	0 <ctf_dprintf>
 1b8:	lsl	x20, x19, #4
 1bc:	add	x28, x20, #0x28
 1c0:	mov	x1, x28
 1c4:	adrp	x0, 0 <sort_modent_by_name>
 1c8:	add	x0, x0, #0x0
 1cc:	bl	0 <ctf_dprintf>
 1d0:	mov	w2, #0x0                   	// #0
 1d4:	add	x1, x20, #0x27
 1d8:	mov	w0, w21
 1dc:	bl	0 <lseek>
 1e0:	tbnz	x0, #63, 62c <ctf_arc_write_fd+0x4b4>
 1e4:	mov	x2, #0x1                   	// #1
 1e8:	add	x1, sp, #0xaf
 1ec:	mov	w0, w21
 1f0:	bl	0 <write>
 1f4:	tbnz	x0, #63, 674 <ctf_arc_write_fd+0x4fc>
 1f8:	mov	x5, #0x0                   	// #0
 1fc:	mov	w4, w21
 200:	mov	w3, #0x1                   	// #1
 204:	mov	w2, #0x3                   	// #3
 208:	mov	x1, x28
 20c:	mov	x0, #0x0                   	// #0
 210:	bl	0 <mmap>
 214:	mov	x27, x0
 218:	cmn	x0, #0x1
 21c:	b.eq	680 <ctf_arc_write_fd+0x508>  // b.none
 220:	cbz	x0, 68c <ctf_arc_write_fd+0x514>
 224:	mov	x0, #0x3eeb                	// #16107
 228:	movk	x0, #0xd762, lsl #16
 22c:	movk	x0, #0xf2a4, lsl #32
 230:	movk	x0, #0x8b47, lsl #48
 234:	str	x0, [x27]
 238:	str	x19, [x27, #16]
 23c:	str	x28, [x27, #32]
 240:	cbnz	x19, 294 <ctf_arc_write_fd+0x11c>
 244:	mov	x0, #0x0                   	// #0
 248:	bl	0 <malloc>
 24c:	str	x0, [sp, #104]
 250:	cbz	x0, 604 <ctf_arc_write_fd+0x48c>
 254:	mov	x4, x0
 258:	adrp	x3, 0 <sort_modent_by_name>
 25c:	add	x3, x3, #0x0
 260:	mov	x2, #0x10                  	// #16
 264:	mov	x1, #0x0                   	// #0
 268:	add	x0, x27, #0x28
 26c:	bl	0 <qsort_r>
 270:	mov	w2, #0x1                   	// #1
 274:	mov	x1, #0x0                   	// #0
 278:	mov	w0, w21
 27c:	bl	0 <lseek>
 280:	adrp	x20, 0 <sort_modent_by_name>
 284:	add	x20, x20, #0x0
 288:	tbnz	x0, #63, 5cc <ctf_arc_write_fd+0x454>
 28c:	str	x0, [x27, #24]
 290:	b	584 <ctf_arc_write_fd+0x40c>
 294:	ldr	x0, [sp, #96]
 298:	ldr	x0, [x0]
 29c:	bl	0 <ctf_getmodel>
 2a0:	sxtw	x0, w0
 2a4:	str	x0, [x27, #8]
 2a8:	ldr	x22, [x27, #16]
 2ac:	cbz	x22, 244 <ctf_arc_write_fd+0xcc>
 2b0:	stp	x23, x24, [sp, #48]
 2b4:	mov	x20, x25
 2b8:	add	x22, x25, x22, lsl #3
 2bc:	mov	x19, #0x0                   	// #0
 2c0:	ldr	x0, [x20], #8
 2c4:	bl	0 <strlen>
 2c8:	add	x19, x19, #0x1
 2cc:	add	x19, x19, x0
 2d0:	mov	x0, x19
 2d4:	cmp	x22, x20
 2d8:	b.ne	2c0 <ctf_arc_write_fd+0x148>  // b.any
 2dc:	bl	0 <malloc>
 2e0:	str	x0, [sp, #104]
 2e4:	cbz	x0, 61c <ctf_arc_write_fd+0x4a4>
 2e8:	add	x0, x27, #0x28
 2ec:	str	x0, [sp, #152]
 2f0:	mov	x23, x0
 2f4:	mov	x22, #0x0                   	// #0
 2f8:	mov	x19, #0x0                   	// #0
 2fc:	adrp	x0, 0 <ctf_write>
 300:	add	x0, x0, #0x0
 304:	str	x0, [sp, #136]
 308:	adrp	x0, 0 <ctf_compress_write>
 30c:	add	x0, x0, #0x0
 310:	str	x0, [sp, #144]
 314:	b	368 <ctf_arc_write_fd+0x1f0>
 318:	ldr	w22, [x26, #556]
 31c:	neg	w22, w22
 320:	sxtw	x22, w22
 324:	mov	x1, x22
 328:	add	x0, x22, #0x3e7
 32c:	cmp	x0, #0x3e6
 330:	b.ls	5c0 <ctf_arc_write_fd+0x448>  // b.plast
 334:	tbnz	x22, #63, 504 <ctf_arc_write_fd+0x38c>
 338:	str	x20, [x23]
 33c:	sub	x1, x1, x28
 340:	str	x1, [x23, #8]
 344:	ldr	x0, [x25, x19, lsl #3]
 348:	bl	0 <strlen>
 34c:	add	x20, x20, #0x1
 350:	add	x22, x20, x0
 354:	add	x23, x23, #0x10
 358:	add	x19, x19, #0x1
 35c:	ldr	x1, [x27, #16]
 360:	cmp	x1, x19
 364:	b.ls	520 <ctf_arc_write_fd+0x3a8>  // b.plast
 368:	mov	x20, x22
 36c:	ldr	x1, [x25, x19, lsl #3]
 370:	ldr	x0, [sp, #104]
 374:	add	x0, x0, x22
 378:	bl	0 <strcpy>
 37c:	ldr	x0, [sp, #96]
 380:	ldr	x26, [x0, x19, lsl #3]
 384:	str	xzr, [sp, #160]
 388:	mov	x0, x26
 38c:	bl	0 <ctf_serialize>
 390:	tbnz	w0, #31, 318 <ctf_arc_write_fd+0x1a0>
 394:	mov	w2, #0x1                   	// #1
 398:	mov	x1, #0x0                   	// #0
 39c:	mov	w0, w21
 3a0:	bl	0 <lseek>
 3a4:	str	x0, [sp, #120]
 3a8:	tbnz	x0, #63, 414 <ctf_arc_write_fd+0x29c>
 3ac:	ldr	x0, [x26, #416]
 3b0:	ldr	x1, [sp, #112]
 3b4:	cmp	x1, x0
 3b8:	ldr	x0, [sp, #144]
 3bc:	ldr	x1, [sp, #136]
 3c0:	csel	x0, x0, x1, cc  // cc = lo, ul, last
 3c4:	str	x0, [sp, #128]
 3c8:	mov	x22, #0x8                   	// #8
 3cc:	add	x24, sp, #0xa0
 3d0:	mov	x2, x22
 3d4:	mov	x1, x24
 3d8:	mov	w0, w21
 3dc:	bl	0 <write>
 3e0:	tbnz	x0, #63, 428 <ctf_arc_write_fd+0x2b0>
 3e4:	add	x24, x24, x0
 3e8:	subs	x22, x22, x0
 3ec:	b.ne	3d0 <ctf_arc_write_fd+0x258>  // b.any
 3f0:	mov	w1, w21
 3f4:	mov	x0, x26
 3f8:	ldr	x2, [sp, #128]
 3fc:	blr	x2
 400:	cbz	w0, 43c <ctf_arc_write_fd+0x2c4>
 404:	ldr	w22, [x26, #556]
 408:	neg	w22, w22
 40c:	sxtw	x22, w22
 410:	b	324 <ctf_arc_write_fd+0x1ac>
 414:	bl	0 <__errno_location>
 418:	ldr	w22, [x0]
 41c:	neg	w22, w22
 420:	sxtw	x22, w22
 424:	b	324 <ctf_arc_write_fd+0x1ac>
 428:	bl	0 <__errno_location>
 42c:	ldr	w22, [x0]
 430:	neg	w22, w22
 434:	sxtw	x22, w22
 438:	b	324 <ctf_arc_write_fd+0x1ac>
 43c:	mov	w2, #0x1                   	// #1
 440:	mov	x1, #0x0                   	// #0
 444:	mov	w0, w21
 448:	bl	0 <lseek>
 44c:	mov	x26, x0
 450:	tbnz	x0, #63, 4c8 <ctf_arc_write_fd+0x350>
 454:	ldr	x1, [sp, #120]
 458:	sub	x0, x0, x1
 45c:	str	x0, [sp, #160]
 460:	mov	w2, #0x0                   	// #0
 464:	mov	w0, w21
 468:	bl	0 <lseek>
 46c:	mov	x22, #0x8                   	// #8
 470:	add	x24, sp, #0xa0
 474:	tbnz	x0, #63, 4dc <ctf_arc_write_fd+0x364>
 478:	mov	x2, x22
 47c:	mov	x1, x24
 480:	mov	w0, w21
 484:	bl	0 <write>
 488:	tbnz	x0, #63, 4f0 <ctf_arc_write_fd+0x378>
 48c:	add	x24, x24, x0
 490:	subs	x22, x22, x0
 494:	b.ne	478 <ctf_arc_write_fd+0x300>  // b.any
 498:	add	x1, x26, #0x7
 49c:	mov	w2, #0x0                   	// #0
 4a0:	and	x1, x1, #0xfffffffffffffff8
 4a4:	mov	w0, w21
 4a8:	bl	0 <lseek>
 4ac:	ldr	x1, [sp, #120]
 4b0:	tbz	x0, #63, 338 <ctf_arc_write_fd+0x1c0>
 4b4:	bl	0 <__errno_location>
 4b8:	ldr	w22, [x0]
 4bc:	neg	w22, w22
 4c0:	sxtw	x22, w22
 4c4:	b	324 <ctf_arc_write_fd+0x1ac>
 4c8:	bl	0 <__errno_location>
 4cc:	ldr	w22, [x0]
 4d0:	neg	w22, w22
 4d4:	sxtw	x22, w22
 4d8:	b	324 <ctf_arc_write_fd+0x1ac>
 4dc:	bl	0 <__errno_location>
 4e0:	ldr	w22, [x0]
 4e4:	neg	w22, w22
 4e8:	sxtw	x22, w22
 4ec:	b	324 <ctf_arc_write_fd+0x1ac>
 4f0:	bl	0 <__errno_location>
 4f4:	ldr	w22, [x0]
 4f8:	neg	w22, w22
 4fc:	sxtw	x22, w22
 500:	b	324 <ctf_arc_write_fd+0x1ac>
 504:	bl	0 <__errno_location>
 508:	neg	w22, w22
 50c:	str	w22, [x0]
 510:	adrp	x20, 0 <sort_modent_by_name>
 514:	add	x20, x20, #0x0
 518:	ldp	x23, x24, [sp, #48]
 51c:	b	5cc <ctf_arc_write_fd+0x454>
 520:	ldr	x19, [sp, #104]
 524:	mov	x4, x19
 528:	adrp	x3, 0 <sort_modent_by_name>
 52c:	add	x3, x3, #0x0
 530:	mov	x2, #0x10                  	// #16
 534:	ldr	x0, [sp, #152]
 538:	bl	0 <qsort_r>
 53c:	mov	w2, #0x1                   	// #1
 540:	mov	x1, #0x0                   	// #0
 544:	mov	w0, w21
 548:	bl	0 <lseek>
 54c:	tbnz	x0, #63, 5e4 <ctf_arc_write_fd+0x46c>
 550:	str	x0, [x27, #24]
 554:	cmp	x22, #0x0
 558:	b.le	5b8 <ctf_arc_write_fd+0x440>
 55c:	mov	x2, x22
 560:	mov	x1, x19
 564:	mov	w0, w21
 568:	bl	0 <write>
 56c:	tbnz	x0, #63, 5f4 <ctf_arc_write_fd+0x47c>
 570:	sub	x22, x22, x0
 574:	add	x19, x19, x0
 578:	cmp	x22, #0x0
 57c:	b.gt	55c <ctf_arc_write_fd+0x3e4>
 580:	ldp	x23, x24, [sp, #48]
 584:	ldr	x0, [sp, #104]
 588:	bl	0 <free>
 58c:	mov	w2, #0x1                   	// #1
 590:	mov	x1, x28
 594:	mov	x0, x27
 598:	bl	0 <msync>
 59c:	tbnz	w0, #31, 610 <ctf_arc_write_fd+0x498>
 5a0:	mov	x1, x28
 5a4:	mov	x0, x27
 5a8:	bl	0 <munmap>
 5ac:	tbnz	w0, #31, 698 <ctf_arc_write_fd+0x520>
 5b0:	mov	w0, #0x0                   	// #0
 5b4:	b	65c <ctf_arc_write_fd+0x4e4>
 5b8:	ldp	x23, x24, [sp, #48]
 5bc:	b	584 <ctf_arc_write_fd+0x40c>
 5c0:	adrp	x20, 0 <sort_modent_by_name>
 5c4:	add	x20, x20, #0x0
 5c8:	ldp	x23, x24, [sp, #48]
 5cc:	ldr	x0, [sp, #104]
 5d0:	bl	0 <free>
 5d4:	mov	x1, x28
 5d8:	mov	x0, x27
 5dc:	bl	0 <munmap>
 5e0:	b	634 <ctf_arc_write_fd+0x4bc>
 5e4:	adrp	x20, 0 <sort_modent_by_name>
 5e8:	add	x20, x20, #0x0
 5ec:	ldp	x23, x24, [sp, #48]
 5f0:	b	5cc <ctf_arc_write_fd+0x454>
 5f4:	adrp	x20, 0 <sort_modent_by_name>
 5f8:	add	x20, x20, #0x0
 5fc:	ldp	x23, x24, [sp, #48]
 600:	b	5cc <ctf_arc_write_fd+0x454>
 604:	adrp	x20, 0 <sort_modent_by_name>
 608:	add	x20, x20, #0x0
 60c:	b	5d4 <ctf_arc_write_fd+0x45c>
 610:	adrp	x20, 0 <sort_modent_by_name>
 614:	add	x20, x20, #0x0
 618:	b	5d4 <ctf_arc_write_fd+0x45c>
 61c:	adrp	x20, 0 <sort_modent_by_name>
 620:	add	x20, x20, #0x0
 624:	ldp	x23, x24, [sp, #48]
 628:	b	5d4 <ctf_arc_write_fd+0x45c>
 62c:	adrp	x20, 0 <sort_modent_by_name>
 630:	add	x20, x20, #0x0
 634:	bl	0 <__errno_location>
 638:	mov	x19, x0
 63c:	ldr	w0, [x0]
 640:	cmp	w0, #0x3e7
 644:	b.gt	6a4 <ctf_arc_write_fd+0x52c>
 648:	bl	0 <strerror>
 64c:	mov	x1, x0
 650:	mov	x0, x20
 654:	bl	0 <ctf_dprintf>
 658:	ldr	w0, [x19]
 65c:	ldp	x19, x20, [sp, #16]
 660:	ldp	x21, x22, [sp, #32]
 664:	ldp	x25, x26, [sp, #64]
 668:	ldp	x27, x28, [sp, #80]
 66c:	ldp	x29, x30, [sp], #176
 670:	ret
 674:	adrp	x20, 0 <sort_modent_by_name>
 678:	add	x20, x20, #0x0
 67c:	b	634 <ctf_arc_write_fd+0x4bc>
 680:	adrp	x20, 0 <sort_modent_by_name>
 684:	add	x20, x20, #0x0
 688:	b	634 <ctf_arc_write_fd+0x4bc>
 68c:	adrp	x20, 0 <sort_modent_by_name>
 690:	add	x20, x20, #0x0
 694:	b	634 <ctf_arc_write_fd+0x4bc>
 698:	adrp	x20, 0 <sort_modent_by_name>
 69c:	add	x20, x20, #0x0
 6a0:	b	634 <ctf_arc_write_fd+0x4bc>
 6a4:	bl	0 <ctf_errmsg>
 6a8:	mov	x1, x0
 6ac:	b	650 <ctf_arc_write_fd+0x4d8>

00000000000006b0 <ctf_arc_write>:
 6b0:	stp	x29, x30, [sp, #-64]!
 6b4:	mov	x29, sp
 6b8:	stp	x19, x20, [sp, #16]
 6bc:	stp	x21, x22, [sp, #32]
 6c0:	stp	x23, x24, [sp, #48]
 6c4:	mov	x22, x0
 6c8:	mov	x19, x1
 6cc:	mov	x21, x2
 6d0:	mov	x23, x3
 6d4:	mov	x24, x4
 6d8:	mov	w2, #0x1b6                 	// #438
 6dc:	mov	w1, #0x242                 	// #578
 6e0:	movk	w1, #0x8, lsl #16
 6e4:	bl	0 <open>
 6e8:	tbnz	w0, #31, 724 <ctf_arc_write+0x74>
 6ec:	mov	w20, w0
 6f0:	mov	x4, x24
 6f4:	mov	x3, x23
 6f8:	mov	x2, x21
 6fc:	mov	x1, x19
 700:	bl	178 <ctf_arc_write_fd>
 704:	mov	w19, w0
 708:	cbz	w0, 750 <ctf_arc_write+0xa0>
 70c:	mov	w0, w20
 710:	bl	0 <close>
 714:	tbz	w19, #31, 768 <ctf_arc_write+0xb8>
 718:	mov	x0, x22
 71c:	bl	0 <unlink>
 720:	b	768 <ctf_arc_write+0xb8>
 724:	bl	0 <__errno_location>
 728:	mov	x19, x0
 72c:	ldr	w0, [x0]
 730:	bl	0 <strerror>
 734:	mov	x2, x0
 738:	mov	x1, x22
 73c:	adrp	x0, 0 <sort_modent_by_name>
 740:	add	x0, x0, #0x0
 744:	bl	0 <ctf_dprintf>
 748:	ldr	w19, [x19]
 74c:	b	768 <ctf_arc_write+0xb8>
 750:	mov	w0, w20
 754:	bl	0 <close>
 758:	mov	w19, w0
 75c:	tbnz	w0, #31, 780 <ctf_arc_write+0xd0>
 760:	mov	w0, w20
 764:	bl	0 <close>
 768:	mov	w0, w19
 76c:	ldp	x19, x20, [sp, #16]
 770:	ldp	x21, x22, [sp, #32]
 774:	ldp	x23, x24, [sp, #48]
 778:	ldp	x29, x30, [sp], #64
 77c:	ret
 780:	bl	0 <__errno_location>
 784:	ldr	w0, [x0]
 788:	bl	0 <strerror>
 78c:	mov	x1, x0
 790:	adrp	x0, 0 <sort_modent_by_name>
 794:	add	x0, x0, #0x0
 798:	bl	0 <ctf_dprintf>
 79c:	mov	x0, x22
 7a0:	bl	0 <unlink>
 7a4:	b	768 <ctf_arc_write+0xb8>

00000000000007a8 <ctf_arc_bufopen>:
 7a8:	ldr	x3, [x0]
 7ac:	mov	x1, #0x3eeb                	// #16107
 7b0:	movk	x1, #0xd762, lsl #16
 7b4:	movk	x1, #0xf2a4, lsl #32
 7b8:	movk	x1, #0x8b47, lsl #48
 7bc:	cmp	x3, x1
 7c0:	b.ne	7c8 <ctf_arc_bufopen+0x20>  // b.any
 7c4:	ret
 7c8:	mov	x0, x2
 7cc:	cbz	x2, 7c4 <ctf_arc_bufopen+0x1c>
 7d0:	mov	w0, #0x3e8                 	// #1000
 7d4:	str	w0, [x2]
 7d8:	mov	x0, #0x0                   	// #0
 7dc:	b	7c4 <ctf_arc_bufopen+0x1c>

00000000000007e0 <ctf_arc_open_internal>:
 7e0:	stp	x29, x30, [sp, #-176]!
 7e4:	mov	x29, sp
 7e8:	stp	x19, x20, [sp, #16]
 7ec:	stp	x21, x22, [sp, #32]
 7f0:	mov	x21, x0
 7f4:	mov	x22, x1
 7f8:	bl	0 <libctf_init_debug>
 7fc:	mov	w1, #0x0                   	// #0
 800:	mov	x0, x21
 804:	bl	0 <open>
 808:	tbnz	w0, #31, 918 <ctf_arc_open_internal+0x138>
 80c:	mov	w19, w0
 810:	add	x2, sp, #0x30
 814:	mov	w1, w0
 818:	mov	w0, #0x0                   	// #0
 81c:	bl	0 <__fxstat>
 820:	tbnz	w0, #31, 8a4 <ctf_arc_open_internal+0xc4>
 824:	mov	x5, #0x0                   	// #0
 828:	mov	w4, w19
 82c:	mov	w3, #0x2                   	// #2
 830:	mov	w2, #0x3                   	// #3
 834:	ldr	x1, [sp, #96]
 838:	mov	x0, #0x0                   	// #0
 83c:	bl	0 <mmap>
 840:	mov	x20, x0
 844:	cmn	x0, #0x1
 848:	b.eq	900 <ctf_arc_open_internal+0x120>  // b.none
 84c:	cbz	x0, 90c <ctf_arc_open_internal+0x12c>
 850:	ldr	x1, [x0]
 854:	mov	x0, #0x3eeb                	// #16107
 858:	movk	x0, #0xd762, lsl #16
 85c:	movk	x0, #0xf2a4, lsl #32
 860:	movk	x0, #0x8b47, lsl #48
 864:	cmp	x1, x0
 868:	b.ne	880 <ctf_arc_open_internal+0xa0>  // b.any
 86c:	ldr	x0, [sp, #96]
 870:	str	x0, [x20]
 874:	mov	w0, w19
 878:	bl	0 <close>
 87c:	b	8ec <ctf_arc_open_internal+0x10c>
 880:	bl	0 <__errno_location>
 884:	mov	w1, #0x3e8                 	// #1000
 888:	str	w1, [x0]
 88c:	ldr	x1, [sp, #96]
 890:	mov	x0, x20
 894:	bl	0 <munmap>
 898:	adrp	x20, 0 <sort_modent_by_name>
 89c:	add	x20, x20, #0x0
 8a0:	b	8ac <ctf_arc_open_internal+0xcc>
 8a4:	adrp	x20, 0 <sort_modent_by_name>
 8a8:	add	x20, x20, #0x0
 8ac:	mov	w0, w19
 8b0:	bl	0 <close>
 8b4:	cbz	x22, 8c4 <ctf_arc_open_internal+0xe4>
 8b8:	bl	0 <__errno_location>
 8bc:	ldr	w0, [x0]
 8c0:	str	w0, [x22]
 8c4:	bl	0 <__errno_location>
 8c8:	ldr	w0, [x0]
 8cc:	cmp	w0, #0x3e7
 8d0:	b.gt	924 <ctf_arc_open_internal+0x144>
 8d4:	bl	0 <strerror>
 8d8:	mov	x2, x0
 8dc:	mov	x1, x21
 8e0:	mov	x0, x20
 8e4:	bl	0 <ctf_dprintf>
 8e8:	mov	x20, #0x0                   	// #0
 8ec:	mov	x0, x20
 8f0:	ldp	x19, x20, [sp, #16]
 8f4:	ldp	x21, x22, [sp, #32]
 8f8:	ldp	x29, x30, [sp], #176
 8fc:	ret
 900:	adrp	x20, 0 <sort_modent_by_name>
 904:	add	x20, x20, #0x0
 908:	b	8ac <ctf_arc_open_internal+0xcc>
 90c:	adrp	x20, 0 <sort_modent_by_name>
 910:	add	x20, x20, #0x0
 914:	b	8ac <ctf_arc_open_internal+0xcc>
 918:	adrp	x20, 0 <sort_modent_by_name>
 91c:	add	x20, x20, #0x0
 920:	b	8b4 <ctf_arc_open_internal+0xd4>
 924:	bl	0 <ctf_errmsg>
 928:	mov	x2, x0
 92c:	b	8dc <ctf_arc_open_internal+0xfc>

0000000000000930 <ctf_arc_close_internal>:
 930:	cbz	x0, 94c <ctf_arc_close_internal+0x1c>
 934:	stp	x29, x30, [sp, #-16]!
 938:	mov	x29, sp
 93c:	ldr	x1, [x0]
 940:	bl	0 <munmap>
 944:	ldp	x29, x30, [sp], #16
 948:	ret
 94c:	ret

0000000000000950 <ctf_arc_close>:
 950:	cbz	x0, 9b4 <ctf_arc_close+0x64>
 954:	stp	x29, x30, [sp, #-32]!
 958:	mov	x29, sp
 95c:	str	x19, [sp, #16]
 960:	mov	x19, x0
 964:	ldr	w0, [x0]
 968:	cbz	w0, 9a8 <ctf_arc_close+0x58>
 96c:	ldr	x0, [x19, #16]
 970:	bl	930 <ctf_arc_close_internal>
 974:	ldr	x0, [x19, #32]
 978:	bl	0 <free>
 97c:	ldr	x0, [x19, #88]
 980:	bl	0 <free>
 984:	ldr	x1, [x19, #104]
 988:	cbz	x1, 994 <ctf_arc_close+0x44>
 98c:	mov	x0, x19
 990:	blr	x1
 994:	mov	x0, x19
 998:	bl	0 <free>
 99c:	ldr	x19, [sp, #16]
 9a0:	ldp	x29, x30, [sp], #32
 9a4:	ret
 9a8:	ldr	x0, [x19, #8]
 9ac:	bl	0 <ctf_file_close>
 9b0:	b	974 <ctf_arc_close+0x24>
 9b4:	ret

00000000000009b8 <ctf_arc_open_by_name_sections>:
 9b8:	stp	x29, x30, [sp, #-32]!
 9bc:	mov	x29, sp
 9c0:	stp	x19, x20, [sp, #16]
 9c4:	mov	x19, x0
 9c8:	mov	x20, x4
 9cc:	ldr	w0, [x0]
 9d0:	cbnz	w0, a14 <ctf_arc_open_by_name_sections+0x5c>
 9d4:	cbz	x3, 9ec <ctf_arc_open_by_name_sections+0x34>
 9d8:	adrp	x1, 0 <_CTF_SECTION>
 9dc:	add	x1, x1, #0x0
 9e0:	mov	x0, x3
 9e4:	bl	0 <strcmp>
 9e8:	cbnz	w0, a28 <ctf_arc_open_by_name_sections+0x70>
 9ec:	ldr	x0, [x19, #8]
 9f0:	str	x19, [x0, #640]
 9f4:	ldr	x1, [x19, #8]
 9f8:	ldr	w0, [x1, #548]
 9fc:	add	w0, w0, #0x1
 a00:	str	w0, [x1, #548]
 a04:	ldr	x0, [x19, #8]
 a08:	ldp	x19, x20, [sp, #16]
 a0c:	ldp	x29, x30, [sp], #32
 a10:	ret
 a14:	ldr	x0, [x19, #16]
 a18:	bl	24 <ctf_arc_open_by_name_internal>
 a1c:	cbz	x0, a08 <ctf_arc_open_by_name_sections+0x50>
 a20:	str	x19, [x0, #640]
 a24:	b	a08 <ctf_arc_open_by_name_sections+0x50>
 a28:	mov	x0, x20
 a2c:	cbz	x20, a08 <ctf_arc_open_by_name_sections+0x50>
 a30:	mov	w0, #0x415                 	// #1045
 a34:	str	w0, [x20]
 a38:	mov	x0, #0x0                   	// #0
 a3c:	b	a08 <ctf_arc_open_by_name_sections+0x50>

0000000000000a40 <ctf_arc_open_by_name>:
 a40:	stp	x29, x30, [sp, #-16]!
 a44:	mov	x29, sp
 a48:	mov	x3, x1
 a4c:	mov	x5, x0
 a50:	ldr	x1, [x5, #24]!
 a54:	cmp	x1, #0x0
 a58:	csel	x1, x5, x1, ne  // ne = any
 a5c:	mov	x5, x0
 a60:	ldr	x6, [x5, #56]!
 a64:	cmp	x6, #0x0
 a68:	mov	x4, x2
 a6c:	csel	x2, x5, x6, ne  // ne = any
 a70:	bl	9b8 <ctf_arc_open_by_name_sections>
 a74:	ldp	x29, x30, [sp], #16
 a78:	ret

0000000000000a7c <ctf_archive_raw_iter>:
 a7c:	stp	x29, x30, [sp, #-64]!
 a80:	mov	x29, sp
 a84:	stp	x21, x22, [sp, #32]
 a88:	mov	x21, x1
 a8c:	ldr	w1, [x0]
 a90:	cbz	w1, b08 <ctf_archive_raw_iter+0x8c>
 a94:	stp	x19, x20, [sp, #16]
 a98:	stp	x23, x24, [sp, #48]
 a9c:	mov	x22, x2
 aa0:	ldr	x19, [x0, #16]
 aa4:	ldr	x24, [x19, #24]
 aa8:	ldr	x0, [x19, #16]
 aac:	cbz	x0, b10 <ctf_archive_raw_iter+0x94>
 ab0:	add	x20, x19, #0x28
 ab4:	mov	x23, #0x0                   	// #0
 ab8:	ldr	x4, [x19, #32]
 abc:	ldr	x0, [x20, #8]
 ac0:	add	x4, x4, x0
 ac4:	add	x1, x19, x4
 ac8:	ldr	x0, [x20]
 acc:	add	x0, x24, x0
 ad0:	mov	x3, x22
 ad4:	ldr	x2, [x19, x4]
 ad8:	add	x1, x1, #0x8
 adc:	add	x0, x19, x0
 ae0:	blr	x21
 ae4:	cbnz	w0, b20 <ctf_archive_raw_iter+0xa4>
 ae8:	add	x23, x23, #0x1
 aec:	add	x20, x20, #0x10
 af0:	ldr	x1, [x19, #16]
 af4:	cmp	x23, x1
 af8:	b.cc	ab8 <ctf_archive_raw_iter+0x3c>  // b.lo, b.ul, b.last
 afc:	ldp	x19, x20, [sp, #16]
 b00:	ldp	x23, x24, [sp, #48]
 b04:	b	b28 <ctf_archive_raw_iter+0xac>
 b08:	mov	w0, #0xffffffea            	// #-22
 b0c:	b	b28 <ctf_archive_raw_iter+0xac>
 b10:	mov	w0, #0x0                   	// #0
 b14:	ldp	x19, x20, [sp, #16]
 b18:	ldp	x23, x24, [sp, #48]
 b1c:	b	b28 <ctf_archive_raw_iter+0xac>
 b20:	ldp	x19, x20, [sp, #16]
 b24:	ldp	x23, x24, [sp, #48]
 b28:	ldp	x21, x22, [sp, #32]
 b2c:	ldp	x29, x30, [sp], #64
 b30:	ret

0000000000000b34 <ctf_archive_iter>:
 b34:	stp	x29, x30, [sp, #-128]!
 b38:	mov	x29, sp
 b3c:	stp	x19, x20, [sp, #16]
 b40:	stp	x21, x22, [sp, #32]
 b44:	stp	x23, x24, [sp, #48]
 b48:	stp	x25, x26, [sp, #64]
 b4c:	mov	x20, x0
 b50:	mov	x24, x1
 b54:	mov	x25, x2
 b58:	ldr	x22, [x0, #24]!
 b5c:	cmp	x22, #0x0
 b60:	csel	x22, x0, x22, ne  // ne = any
 b64:	mov	x0, x20
 b68:	ldr	x23, [x0, #56]!
 b6c:	cmp	x23, #0x0
 b70:	csel	x23, x0, x23, ne  // ne = any
 b74:	ldr	w0, [x20]
 b78:	cbnz	w0, bac <ctf_archive_iter+0x78>
 b7c:	adrp	x1, 0 <_CTF_SECTION>
 b80:	add	x1, x1, #0x0
 b84:	ldr	x0, [x20, #8]
 b88:	blr	x24
 b8c:	mov	w19, w0
 b90:	mov	w0, w19
 b94:	ldp	x19, x20, [sp, #16]
 b98:	ldp	x21, x22, [sp, #32]
 b9c:	ldp	x23, x24, [sp, #48]
 ba0:	ldp	x25, x26, [sp, #64]
 ba4:	ldp	x29, x30, [sp], #128
 ba8:	ret
 bac:	stp	x27, x28, [sp, #80]
 bb0:	ldr	x27, [x20, #16]
 bb4:	ldr	x28, [x27, #24]
 bb8:	ldr	x0, [x27, #16]
 bbc:	cbz	x0, c5c <ctf_archive_iter+0x128>
 bc0:	mov	x26, #0x0                   	// #0
 bc4:	add	x0, x27, #0x28
 bc8:	str	x0, [sp, #104]
 bcc:	lsl	x0, x26, #4
 bd0:	ldr	x1, [sp, #104]
 bd4:	ldr	x19, [x1, x0]
 bd8:	add	x19, x28, x19
 bdc:	add	x19, x27, x19
 be0:	add	x4, sp, #0x7c
 be4:	mov	x3, x19
 be8:	mov	x2, x23
 bec:	mov	x1, x22
 bf0:	mov	x0, x27
 bf4:	bl	24 <ctf_arc_open_by_name_internal>
 bf8:	mov	x21, x0
 bfc:	cbz	x0, c3c <ctf_archive_iter+0x108>
 c00:	str	x20, [x0, #640]
 c04:	mov	x2, x25
 c08:	mov	x1, x19
 c0c:	blr	x24
 c10:	mov	w19, w0
 c14:	str	w0, [sp, #124]
 c18:	cbnz	w0, c48 <ctf_archive_iter+0x114>
 c1c:	mov	x0, x21
 c20:	bl	0 <ctf_file_close>
 c24:	add	x26, x26, #0x1
 c28:	ldr	x0, [x27, #16]
 c2c:	cmp	x26, x0
 c30:	b.cc	bcc <ctf_archive_iter+0x98>  // b.lo, b.ul, b.last
 c34:	ldp	x27, x28, [sp, #80]
 c38:	b	b90 <ctf_archive_iter+0x5c>
 c3c:	ldr	w19, [sp, #124]
 c40:	ldp	x27, x28, [sp, #80]
 c44:	b	b90 <ctf_archive_iter+0x5c>
 c48:	mov	x0, x21
 c4c:	bl	0 <ctf_file_close>
 c50:	ldr	w19, [sp, #124]
 c54:	ldp	x27, x28, [sp, #80]
 c58:	b	b90 <ctf_archive_iter+0x5c>
 c5c:	mov	w19, #0x0                   	// #0
 c60:	ldp	x27, x28, [sp, #80]
 c64:	b	b90 <ctf_archive_iter+0x5c>

ctf-dump.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_is_slice>:
       0:	stp	x29, x30, [sp, #-48]!
       4:	mov	x29, sp
       8:	stp	x19, x20, [sp, #16]
       c:	str	x21, [sp, #32]
      10:	mov	x19, x0
      14:	mov	x20, x1
      18:	mov	x21, x2
      1c:	bl	0 <ctf_type_kind>
      20:	sub	w1, w0, #0x1
      24:	cmp	w1, #0x1
      28:	ccmp	w0, #0x8, #0x4, hi  // hi = pmore
      2c:	mov	w0, #0x0                   	// #0
      30:	b.ne	50 <ctf_is_slice+0x50>  // b.any
      34:	mov	x1, x20
      38:	mov	x0, x19
      3c:	bl	0 <ctf_type_reference>
      40:	mov	x1, x0
      44:	mov	w0, #0x0                   	// #0
      48:	cmn	x1, #0x1
      4c:	b.ne	60 <ctf_is_slice+0x60>  // b.any
      50:	ldp	x19, x20, [sp, #16]
      54:	ldr	x21, [sp, #32]
      58:	ldp	x29, x30, [sp], #48
      5c:	ret
      60:	mov	x2, x21
      64:	mov	x1, x20
      68:	mov	x0, x19
      6c:	bl	0 <ctf_type_encoding>
      70:	cmp	w0, #0x0
      74:	cset	w0, eq  // eq = none
      78:	b	50 <ctf_is_slice+0x50>

000000000000007c <ctf_dump_member>:
      7c:	stp	x29, x30, [sp, #-112]!
      80:	mov	x29, sp
      84:	stp	x19, x20, [sp, #16]
      88:	stp	x21, x22, [sp, #32]
      8c:	stp	x23, x24, [sp, #48]
      90:	stp	x25, x26, [sp, #64]
      94:	mov	x26, x0
      98:	mov	x24, x1
      9c:	mov	x25, x2
      a0:	mov	x21, x4
      a4:	str	xzr, [sp, #104]
      a8:	sxtw	x22, w3
      ac:	cmp	x22, #0x0
      b0:	b.le	e0 <ctf_dump_member+0x64>
      b4:	mov	x19, #0x0                   	// #0
      b8:	adrp	x23, 0 <ctf_is_slice>
      bc:	add	x23, x23, #0x0
      c0:	ldr	x20, [x21]
      c4:	mov	x1, x23
      c8:	ldr	x0, [x20]
      cc:	bl	0 <ctf_str_append_noerr>
      d0:	str	x0, [x20]
      d4:	add	x19, x19, #0x1
      d8:	cmp	x19, x22
      dc:	b.ne	c0 <ctf_dump_member+0x44>  // b.any
      e0:	mov	x1, x24
      e4:	ldr	x0, [x21, #8]
      e8:	bl	0 <ctf_type_aname>
      ec:	mov	x19, x0
      f0:	cbz	x0, 1fc <ctf_dump_member+0x180>
      f4:	mov	x1, x24
      f8:	ldr	x0, [x21, #8]
      fc:	bl	0 <ctf_type_kind>
     100:	mov	w20, w0
     104:	mov	x1, x24
     108:	ldr	x0, [x21, #8]
     10c:	bl	0 <ctf_type_align>
     110:	mov	x7, x0
     114:	mov	x6, x26
     118:	mov	x5, x19
     11c:	mov	w4, w20
     120:	mov	x3, x24
     124:	mov	x2, x25
     128:	adrp	x1, 0 <ctf_is_slice>
     12c:	add	x1, x1, #0x0
     130:	add	x0, sp, #0x68
     134:	bl	0 <asprintf>
     138:	tbnz	w0, #31, 228 <ctf_dump_member+0x1ac>
     13c:	ldr	x20, [x21]
     140:	ldr	x1, [sp, #104]
     144:	ldr	x0, [x20]
     148:	bl	0 <ctf_str_append_noerr>
     14c:	str	x0, [x20]
     150:	mov	x0, x19
     154:	bl	0 <free>
     158:	ldr	x0, [sp, #104]
     15c:	bl	0 <free>
     160:	str	xzr, [sp, #104]
     164:	mov	x1, x24
     168:	ldr	x0, [x21, #8]
     16c:	bl	0 <ctf_type_kind>
     170:	cmp	w0, #0x1
     174:	b.eq	18c <ctf_dump_member+0x110>  // b.none
     178:	mov	x1, x24
     17c:	ldr	x0, [x21, #8]
     180:	bl	0 <ctf_type_kind>
     184:	cmp	w0, #0x2
     188:	b.ne	284 <ctf_dump_member+0x208>  // b.any
     18c:	add	x2, sp, #0x58
     190:	mov	x1, x24
     194:	ldr	x0, [x21, #8]
     198:	bl	0 <ctf_type_encoding>
     19c:	ldr	w4, [sp, #96]
     1a0:	ldr	w3, [sp, #92]
     1a4:	ldr	w2, [sp, #88]
     1a8:	adrp	x1, 0 <ctf_is_slice>
     1ac:	add	x1, x1, #0x0
     1b0:	add	x0, sp, #0x68
     1b4:	bl	0 <asprintf>
     1b8:	tbnz	w0, #31, 2a0 <ctf_dump_member+0x224>
     1bc:	ldr	x19, [x21]
     1c0:	ldr	x1, [sp, #104]
     1c4:	ldr	x0, [x19]
     1c8:	bl	0 <ctf_str_append_noerr>
     1cc:	str	x0, [x19]
     1d0:	ldr	x0, [sp, #104]
     1d4:	bl	0 <free>
     1d8:	str	xzr, [sp, #104]
     1dc:	ldr	x19, [x21]
     1e0:	adrp	x1, 0 <ctf_is_slice>
     1e4:	add	x1, x1, #0x0
     1e8:	ldr	x0, [x19]
     1ec:	bl	0 <ctf_str_append_noerr>
     1f0:	str	x0, [x19]
     1f4:	mov	w0, #0x0                   	// #0
     1f8:	b	248 <ctf_dump_member+0x1cc>
     1fc:	cbz	x24, 210 <ctf_dump_member+0x194>
     200:	ldr	x0, [x21, #8]
     204:	bl	0 <ctf_errno>
     208:	cmp	w0, #0x41b
     20c:	b.ne	228 <ctf_dump_member+0x1ac>  // b.any
     210:	mov	x2, x25
     214:	adrp	x1, 0 <ctf_is_slice>
     218:	add	x1, x1, #0x0
     21c:	add	x0, sp, #0x68
     220:	bl	0 <asprintf>
     224:	tbz	w0, #31, 260 <ctf_dump_member+0x1e4>
     228:	mov	x0, x19
     22c:	bl	0 <free>
     230:	ldr	x0, [sp, #104]
     234:	bl	0 <free>
     238:	bl	0 <__errno_location>
     23c:	ldr	w1, [x0]
     240:	ldr	x0, [x21, #8]
     244:	bl	0 <ctf_set_errno>
     248:	ldp	x19, x20, [sp, #16]
     24c:	ldp	x21, x22, [sp, #32]
     250:	ldp	x23, x24, [sp, #48]
     254:	ldp	x25, x26, [sp, #64]
     258:	ldp	x29, x30, [sp], #112
     25c:	ret
     260:	ldr	x19, [x21]
     264:	ldr	x1, [sp, #104]
     268:	ldr	x0, [x19]
     26c:	bl	0 <ctf_str_append_noerr>
     270:	str	x0, [x19]
     274:	ldr	x0, [sp, #104]
     278:	bl	0 <free>
     27c:	mov	w0, #0x0                   	// #0
     280:	b	248 <ctf_dump_member+0x1cc>
     284:	add	x2, sp, #0x58
     288:	mov	x1, x24
     28c:	ldr	x0, [x21, #8]
     290:	bl	0 <ctf_is_slice>
     294:	cmp	w0, #0x8
     298:	b.ne	1dc <ctf_dump_member+0x160>  // b.any
     29c:	b	18c <ctf_dump_member+0x110>
     2a0:	mov	x19, #0x0                   	// #0
     2a4:	b	228 <ctf_dump_member+0x1ac>

00000000000002a8 <ctf_dump_format_type>:
     2a8:	stp	x29, x30, [sp, #-128]!
     2ac:	mov	x29, sp
     2b0:	stp	x19, x20, [sp, #16]
     2b4:	stp	x21, x22, [sp, #32]
     2b8:	stp	x23, x24, [sp, #48]
     2bc:	stp	x25, x26, [sp, #64]
     2c0:	str	x27, [sp, #80]
     2c4:	mov	x21, x0
     2c8:	mov	x19, x1
     2cc:	str	xzr, [sp, #120]
     2d0:	adrp	x22, 0 <ctf_is_slice>
     2d4:	add	x0, x22, #0x0
     2d8:	cmp	w2, #0x0
     2dc:	adrp	x23, 0 <ctf_is_slice>
     2e0:	add	x23, x23, #0x0
     2e4:	csel	x23, x23, x0, eq  // eq = none
     2e8:	adrp	x22, 0 <ctf_is_slice>
     2ec:	add	x22, x22, #0x0
     2f0:	csel	x22, x22, x0, eq  // eq = none
     2f4:	mov	x26, #0x0                   	// #0
     2f8:	adrp	x25, 0 <ctf_is_slice>
     2fc:	add	x25, x25, #0x0
     300:	adrp	x24, 0 <ctf_is_slice>
     304:	add	x24, x24, #0x0
     308:	b	3c0 <ctf_dump_format_type+0x118>
     30c:	cbz	x19, 320 <ctf_dump_format_type+0x78>
     310:	mov	x0, x21
     314:	bl	0 <ctf_errno>
     318:	cmp	w0, #0x41b
     31c:	b.ne	38c <ctf_dump_format_type+0xe4>  // b.any
     320:	adrp	x1, 0 <ctf_is_slice>
     324:	add	x1, x1, #0x0
     328:	mov	x0, x26
     32c:	bl	0 <ctf_str_append_noerr>
     330:	mov	x20, x0
     334:	mov	w1, #0x400                 	// #1024
     338:	mov	x0, x21
     33c:	bl	0 <ctf_set_errno>
     340:	b	460 <ctf_dump_format_type+0x1b8>
     344:	add	x2, sp, #0x68
     348:	mov	x1, x19
     34c:	mov	x0, x21
     350:	bl	0 <ctf_type_encoding>
     354:	mov	x6, x22
     358:	ldr	w5, [sp, #112]
     35c:	ldr	w4, [sp, #108]
     360:	mov	x3, x19
     364:	mov	x2, x23
     368:	adrp	x1, 0 <ctf_is_slice>
     36c:	add	x1, x1, #0x0
     370:	add	x0, sp, #0x78
     374:	bl	0 <asprintf>
     378:	tbz	w0, #31, 424 <ctf_dump_format_type+0x17c>
     37c:	bl	0 <__errno_location>
     380:	ldr	w1, [x0]
     384:	mov	x0, x21
     388:	bl	0 <ctf_set_errno>
     38c:	mov	x0, x20
     390:	bl	0 <free>
     394:	mov	x0, x26
     398:	bl	0 <free>
     39c:	ldr	x0, [sp, #120]
     3a0:	bl	0 <free>
     3a4:	mov	x20, #0x0                   	// #0
     3a8:	b	470 <ctf_dump_format_type+0x1c8>
     3ac:	adrp	x1, 0 <ctf_is_slice>
     3b0:	add	x1, x1, #0x0
     3b4:	mov	x0, x20
     3b8:	bl	0 <ctf_str_append_noerr>
     3bc:	mov	x26, x0
     3c0:	mov	x1, x19
     3c4:	mov	x0, x21
     3c8:	bl	0 <ctf_type_aname>
     3cc:	mov	x20, x0
     3d0:	cbz	x0, 30c <ctf_dump_format_type+0x64>
     3d4:	add	x2, sp, #0x68
     3d8:	mov	x1, x19
     3dc:	mov	x0, x21
     3e0:	bl	0 <ctf_is_slice>
     3e4:	cbnz	w0, 344 <ctf_dump_format_type+0x9c>
     3e8:	ldrb	w0, [x20]
     3ec:	cmp	w0, #0x0
     3f0:	csel	x27, x25, x20, eq  // eq = none
     3f4:	mov	x1, x19
     3f8:	mov	x0, x21
     3fc:	bl	0 <ctf_type_size>
     400:	mov	x6, x22
     404:	mov	x5, x0
     408:	mov	x4, x27
     40c:	mov	x3, x19
     410:	mov	x2, x23
     414:	mov	x1, x24
     418:	add	x0, sp, #0x78
     41c:	bl	0 <asprintf>
     420:	tbnz	w0, #31, 37c <ctf_dump_format_type+0xd4>
     424:	mov	x0, x20
     428:	bl	0 <free>
     42c:	ldr	x1, [sp, #120]
     430:	mov	x0, x26
     434:	bl	0 <ctf_str_append_noerr>
     438:	mov	x20, x0
     43c:	ldr	x0, [sp, #120]
     440:	bl	0 <free>
     444:	str	xzr, [sp, #120]
     448:	mov	x1, x19
     44c:	mov	x0, x21
     450:	bl	0 <ctf_type_reference>
     454:	mov	x19, x0
     458:	cmn	x0, #0x1
     45c:	b.ne	3ac <ctf_dump_format_type+0x104>  // b.any
     460:	mov	x0, x21
     464:	bl	0 <ctf_errno>
     468:	cmp	w0, #0x400
     46c:	b.ne	490 <ctf_dump_format_type+0x1e8>  // b.any
     470:	mov	x0, x20
     474:	ldp	x19, x20, [sp, #16]
     478:	ldp	x21, x22, [sp, #32]
     47c:	ldp	x23, x24, [sp, #48]
     480:	ldp	x25, x26, [sp, #64]
     484:	ldr	x27, [sp, #80]
     488:	ldp	x29, x30, [sp], #128
     48c:	ret
     490:	mov	x0, x20
     494:	bl	0 <free>
     498:	mov	x20, #0x0                   	// #0
     49c:	b	470 <ctf_dump_format_type+0x1c8>

00000000000004a0 <ctf_dump_append>:
     4a0:	stp	x29, x30, [sp, #-32]!
     4a4:	mov	x29, sp
     4a8:	stp	x19, x20, [sp, #16]
     4ac:	mov	x19, x0
     4b0:	mov	x20, x1
     4b4:	mov	x0, #0x18                  	// #24
     4b8:	bl	0 <malloc>
     4bc:	cbz	x0, 4e0 <ctf_dump_append+0x40>
     4c0:	mov	x1, x0
     4c4:	str	x20, [x0, #16]
     4c8:	add	x0, x19, #0x18
     4cc:	bl	0 <ctf_list_append>
     4d0:	mov	w0, #0x0                   	// #0
     4d4:	ldp	x19, x20, [sp, #16]
     4d8:	ldp	x29, x30, [sp], #32
     4dc:	ret
     4e0:	mov	w1, #0xc                   	// #12
     4e4:	ldr	x0, [x19, #8]
     4e8:	bl	0 <ctf_set_errno>
     4ec:	b	4d4 <ctf_dump_append+0x34>

00000000000004f0 <ctf_dump_type>:
     4f0:	stp	x29, x30, [sp, #-80]!
     4f4:	mov	x29, sp
     4f8:	stp	x19, x20, [sp, #16]
     4fc:	mov	x20, x0
     500:	mov	x19, x2
     504:	add	x0, sp, #0x48
     508:	str	x0, [sp, #56]
     50c:	ldr	x0, [x2, #8]
     510:	str	x0, [sp, #64]
     514:	mov	w2, w1
     518:	mov	x1, x20
     51c:	bl	2a8 <ctf_dump_format_type>
     520:	str	x0, [sp, #72]
     524:	cbz	x0, 5bc <ctf_dump_type+0xcc>
     528:	adrp	x1, 0 <ctf_is_slice>
     52c:	add	x1, x1, #0x0
     530:	bl	0 <ctf_str_append_noerr>
     534:	str	x0, [sp, #72]
     538:	add	x3, sp, #0x38
     53c:	adrp	x2, 0 <ctf_is_slice>
     540:	add	x2, x2, #0x0
     544:	mov	x1, x20
     548:	ldr	x0, [x19, #8]
     54c:	bl	0 <ctf_type_visit>
     550:	tbnz	w0, #31, 58c <ctf_dump_type+0x9c>
     554:	ldr	x20, [sp, #72]
     558:	mov	x0, x20
     55c:	bl	0 <strlen>
     560:	sub	x0, x0, #0x1
     564:	ldrb	w1, [x20, x0]
     568:	cmp	w1, #0xa
     56c:	b.eq	5b4 <ctf_dump_type+0xc4>  // b.none
     570:	ldr	x1, [sp, #72]
     574:	mov	x0, x19
     578:	bl	4a0 <ctf_dump_append>
     57c:	mov	w0, #0x0                   	// #0
     580:	ldp	x19, x20, [sp, #16]
     584:	ldp	x29, x30, [sp], #80
     588:	ret
     58c:	cbz	x20, 5a0 <ctf_dump_type+0xb0>
     590:	ldr	x0, [x19, #8]
     594:	bl	0 <ctf_errno>
     598:	cmp	w0, #0x41b
     59c:	b.ne	5cc <ctf_dump_type+0xdc>  // b.any
     5a0:	ldr	x1, [sp, #72]
     5a4:	mov	x0, x19
     5a8:	bl	4a0 <ctf_dump_append>
     5ac:	mov	w0, #0x0                   	// #0
     5b0:	b	580 <ctf_dump_type+0x90>
     5b4:	strb	wzr, [x20, x0]
     5b8:	b	570 <ctf_dump_type+0x80>
     5bc:	str	x21, [sp, #32]
     5c0:	adrp	x21, 0 <ctf_is_slice>
     5c4:	add	x21, x21, #0x0
     5c8:	b	5d8 <ctf_dump_type+0xe8>
     5cc:	str	x21, [sp, #32]
     5d0:	adrp	x21, 0 <ctf_is_slice>
     5d4:	add	x21, x21, #0x0
     5d8:	ldr	x0, [x19, #8]
     5dc:	bl	0 <ctf_errno>
     5e0:	bl	0 <ctf_errmsg>
     5e4:	mov	x3, x0
     5e8:	mov	x2, x20
     5ec:	mov	x1, x21
     5f0:	adrp	x0, 0 <ctf_is_slice>
     5f4:	add	x0, x0, #0x0
     5f8:	bl	0 <ctf_dprintf>
     5fc:	ldr	x0, [sp, #72]
     600:	bl	0 <free>
     604:	mov	w0, #0xffffffff            	// #-1
     608:	ldr	x21, [sp, #32]
     60c:	b	580 <ctf_dump_type+0x90>

0000000000000610 <ctf_dump_var>:
     610:	stp	x29, x30, [sp, #-48]!
     614:	mov	x29, sp
     618:	stp	x19, x20, [sp, #16]
     61c:	mov	x20, x1
     620:	mov	x19, x2
     624:	mov	x2, x0
     628:	adrp	x1, 0 <ctf_is_slice>
     62c:	add	x1, x1, #0x0
     630:	add	x0, sp, #0x28
     634:	bl	0 <asprintf>
     638:	tbnz	w0, #31, 688 <ctf_dump_var+0x78>
     63c:	mov	w2, #0x1                   	// #1
     640:	mov	x1, x20
     644:	ldr	x0, [x19, #8]
     648:	bl	2a8 <ctf_dump_format_type>
     64c:	mov	x20, x0
     650:	cbz	x0, 69c <ctf_dump_var+0x8c>
     654:	mov	x1, x0
     658:	ldr	x0, [sp, #40]
     65c:	bl	0 <ctf_str_append_noerr>
     660:	str	x0, [sp, #40]
     664:	mov	x0, x20
     668:	bl	0 <free>
     66c:	ldr	x1, [sp, #40]
     670:	mov	x0, x19
     674:	bl	4a0 <ctf_dump_append>
     678:	mov	w0, #0x0                   	// #0
     67c:	ldp	x19, x20, [sp, #16]
     680:	ldp	x29, x30, [sp], #48
     684:	ret
     688:	bl	0 <__errno_location>
     68c:	ldr	w1, [x0]
     690:	ldr	x0, [x19, #8]
     694:	bl	0 <ctf_set_errno>
     698:	b	67c <ctf_dump_var+0x6c>
     69c:	ldr	x0, [sp, #40]
     6a0:	bl	0 <free>
     6a4:	mov	w0, #0xffffffff            	// #-1
     6a8:	b	67c <ctf_dump_var+0x6c>

00000000000006ac <ctf_dump_label>:
     6ac:	stp	x29, x30, [sp, #-48]!
     6b0:	mov	x29, sp
     6b4:	stp	x19, x20, [sp, #16]
     6b8:	mov	x20, x1
     6bc:	mov	x19, x2
     6c0:	mov	x2, x0
     6c4:	adrp	x1, 0 <ctf_is_slice>
     6c8:	add	x1, x1, #0x0
     6cc:	add	x0, sp, #0x28
     6d0:	bl	0 <asprintf>
     6d4:	tbnz	w0, #31, 724 <ctf_dump_label+0x78>
     6d8:	mov	w2, #0x1                   	// #1
     6dc:	ldr	x1, [x20]
     6e0:	ldr	x0, [x19, #8]
     6e4:	bl	2a8 <ctf_dump_format_type>
     6e8:	mov	x20, x0
     6ec:	cbz	x0, 738 <ctf_dump_label+0x8c>
     6f0:	mov	x1, x0
     6f4:	ldr	x0, [sp, #40]
     6f8:	bl	0 <ctf_str_append_noerr>
     6fc:	str	x0, [sp, #40]
     700:	mov	x0, x20
     704:	bl	0 <free>
     708:	ldr	x1, [sp, #40]
     70c:	mov	x0, x19
     710:	bl	4a0 <ctf_dump_append>
     714:	mov	w0, #0x0                   	// #0
     718:	ldp	x19, x20, [sp, #16]
     71c:	ldp	x29, x30, [sp], #48
     720:	ret
     724:	bl	0 <__errno_location>
     728:	ldr	w1, [x0]
     72c:	ldr	x0, [x19, #8]
     730:	bl	0 <ctf_set_errno>
     734:	b	718 <ctf_dump_label+0x6c>
     738:	ldr	x0, [sp, #40]
     73c:	bl	0 <free>
     740:	mov	w0, #0xffffffff            	// #-1
     744:	b	718 <ctf_dump_label+0x6c>

0000000000000748 <ctf_dump_header_sectfield>:
     748:	cmp	w4, w3
     74c:	b.ne	758 <ctf_dump_header_sectfield+0x10>  // b.any
     750:	mov	w0, #0x0                   	// #0
     754:	ret
     758:	stp	x29, x30, [sp, #-48]!
     75c:	mov	x29, sp
     760:	stp	x19, x20, [sp, #16]
     764:	mov	x20, x0
     768:	mov	x19, x1
     76c:	sub	w5, w4, w3
     770:	sub	w4, w4, #0x1
     774:	mov	w3, w3
     778:	adrp	x1, 0 <ctf_is_slice>
     77c:	add	x1, x1, #0x0
     780:	add	x0, sp, #0x28
     784:	bl	0 <asprintf>
     788:	tbnz	w0, #31, 7a8 <ctf_dump_header_sectfield+0x60>
     78c:	ldr	x1, [sp, #40]
     790:	mov	x0, x19
     794:	bl	4a0 <ctf_dump_append>
     798:	mov	w0, #0x0                   	// #0
     79c:	ldp	x19, x20, [sp, #16]
     7a0:	ldp	x29, x30, [sp], #48
     7a4:	ret
     7a8:	bl	0 <__errno_location>
     7ac:	ldr	w1, [x0]
     7b0:	mov	x0, x20
     7b4:	bl	0 <ctf_set_errno>
     7b8:	b	79c <ctf_dump_header_sectfield+0x54>

00000000000007bc <ctf_dump_header_strfield>:
     7bc:	cbnz	w3, 7c8 <ctf_dump_header_strfield+0xc>
     7c0:	mov	w0, #0x0                   	// #0
     7c4:	ret
     7c8:	stp	x29, x30, [sp, #-64]!
     7cc:	mov	x29, sp
     7d0:	stp	x19, x20, [sp, #16]
     7d4:	str	x21, [sp, #32]
     7d8:	mov	x21, x0
     7dc:	mov	x20, x1
     7e0:	mov	x19, x2
     7e4:	mov	w1, w3
     7e8:	bl	0 <ctf_strptr>
     7ec:	mov	x3, x0
     7f0:	mov	x2, x19
     7f4:	adrp	x1, 0 <ctf_is_slice>
     7f8:	add	x1, x1, #0x0
     7fc:	add	x0, sp, #0x38
     800:	bl	0 <asprintf>
     804:	tbnz	w0, #31, 828 <ctf_dump_header_strfield+0x6c>
     808:	ldr	x1, [sp, #56]
     80c:	mov	x0, x20
     810:	bl	4a0 <ctf_dump_append>
     814:	mov	w0, #0x0                   	// #0
     818:	ldp	x19, x20, [sp, #16]
     81c:	ldr	x21, [sp, #32]
     820:	ldp	x29, x30, [sp], #64
     824:	ret
     828:	bl	0 <__errno_location>
     82c:	ldr	w1, [x0]
     830:	mov	x0, x21
     834:	bl	0 <ctf_set_errno>
     838:	b	818 <ctf_dump_header_strfield+0x5c>

000000000000083c <ctf_dump>:
     83c:	stp	x29, x30, [sp, #-176]!
     840:	mov	x29, sp
     844:	stp	x19, x20, [sp, #16]
     848:	stp	x21, x22, [sp, #32]
     84c:	stp	x23, x24, [sp, #48]
     850:	stp	x25, x26, [sp, #64]
     854:	str	x0, [sp, #104]
     858:	mov	x20, x1
     85c:	mov	w23, w2
     860:	mov	x24, x3
     864:	mov	x25, x4
     868:	ldr	x19, [x1]
     86c:	cbz	x19, 8b8 <ctf_dump+0x7c>
     870:	ldr	w0, [x19]
     874:	cmp	w0, w2
     878:	b.ne	101c <ctf_dump+0x7e0>  // b.any
     87c:	ldr	x0, [x19, #16]
     880:	cbz	x0, 1068 <ctf_dump+0x82c>
     884:	ldr	x0, [x0, #8]
     888:	str	x0, [x19, #16]
     88c:	cbz	x0, 1028 <ctf_dump+0x7ec>
     890:	cbz	x24, 1174 <ctf_dump+0x938>
     894:	ldr	x19, [x0, #16]
     898:	mov	x22, #0x0                   	// #0
     89c:	cbz	x19, 1070 <ctf_dump+0x834>
     8a0:	stp	x27, x28, [sp, #80]
     8a4:	mov	w27, #0xa                   	// #10
     8a8:	adrp	x26, 0 <ctf_is_slice>
     8ac:	add	x26, x26, #0x0
     8b0:	mov	w28, #0xa                   	// #10
     8b4:	b	10c0 <ctf_dump+0x884>
     8b8:	mov	x0, #0x28                  	// #40
     8bc:	bl	0 <malloc>
     8c0:	mov	x19, x0
     8c4:	str	x0, [x20]
     8c8:	cbz	x0, 928 <ctf_dump+0xec>
     8cc:	stp	xzr, xzr, [x0]
     8d0:	stp	xzr, xzr, [x0, #16]
     8d4:	str	xzr, [x0, #32]
     8d8:	ldr	x0, [sp, #104]
     8dc:	str	x0, [x19, #8]
     8e0:	str	w23, [x19]
     8e4:	cmp	w23, #0x3
     8e8:	b.eq	a58 <ctf_dump+0x21c>  // b.none
     8ec:	b.hi	9b0 <ctf_dump+0x174>  // b.pmore
     8f0:	cmp	w23, #0x1
     8f4:	b.eq	c18 <ctf_dump+0x3dc>  // b.none
     8f8:	cmp	w23, #0x2
     8fc:	b.ne	938 <ctf_dump+0xfc>  // b.any
     900:	ldr	x0, [sp, #104]
     904:	ldr	x0, [x0, #432]
     908:	mov	x21, #0x0                   	// #0
     90c:	cbz	x0, 87c <ctf_dump+0x40>
     910:	stp	x27, x28, [sp, #80]
     914:	adrp	x27, 0 <ctf_is_slice>
     918:	add	x27, x27, #0x0
     91c:	adrp	x26, 0 <ctf_is_slice>
     920:	add	x26, x26, #0x0
     924:	b	cd8 <ctf_dump+0x49c>
     928:	mov	w1, #0xc                   	// #12
     92c:	ldr	x0, [sp, #104]
     930:	bl	0 <ctf_set_errno>
     934:	b	1048 <ctf_dump+0x80c>
     938:	cbnz	w23, 100c <ctf_dump+0x7d0>
     93c:	ldr	x0, [sp, #104]
     940:	ldr	x21, [x0, #8]
     944:	adrp	x0, 0 <ctf_is_slice>
     948:	add	x0, x0, #0x0
     94c:	ldp	x2, x3, [x0]
     950:	stp	x2, x3, [sp, #128]
     954:	ldp	x2, x3, [x0, #16]
     958:	stp	x2, x3, [sp, #144]
     95c:	ldp	x0, x1, [x0, #32]
     960:	stp	x0, x1, [sp, #160]
     964:	ldrh	w2, [x21]
     968:	adrp	x1, 0 <ctf_is_slice>
     96c:	add	x1, x1, #0x0
     970:	add	x0, sp, #0x78
     974:	bl	0 <asprintf>
     978:	tbnz	w0, #31, c04 <ctf_dump+0x3c8>
     97c:	ldr	x1, [sp, #120]
     980:	mov	x0, x19
     984:	bl	4a0 <ctf_dump_append>
     988:	ldrb	w2, [x21, #2]
     98c:	cmp	w2, #0x4
     990:	b.hi	a78 <ctf_dump+0x23c>  // b.pmore
     994:	add	x0, sp, #0x80
     998:	ldr	x3, [x0, w2, sxtw #3]
     99c:	adrp	x0, 0 <ctf_is_slice>
     9a0:	add	x0, x0, #0x0
     9a4:	cmp	x3, #0x0
     9a8:	csel	x3, x0, x3, eq  // eq = none
     9ac:	b	a80 <ctf_dump+0x244>
     9b0:	cmp	w23, #0x5
     9b4:	b.eq	fdc <ctf_dump+0x7a0>  // b.none
     9b8:	cmp	w23, #0x6
     9bc:	b.ne	a34 <ctf_dump+0x1f8>  // b.any
     9c0:	ldr	x0, [sp, #104]
     9c4:	ldr	x21, [x0, #336]
     9c8:	ldr	x0, [x0, #344]
     9cc:	add	x0, x21, x0
     9d0:	cmp	x21, x0
     9d4:	b.cs	87c <ctf_dump+0x40>  // b.hs, b.nlast
     9d8:	mov	x2, x21
     9dc:	adrp	x22, 0 <ctf_is_slice>
     9e0:	add	x22, x22, #0x0
     9e4:	mov	x3, x21
     9e8:	sub	x2, x21, x2
     9ec:	mov	x1, x22
     9f0:	add	x0, sp, #0x80
     9f4:	bl	0 <asprintf>
     9f8:	tbnz	w0, #31, ff8 <ctf_dump+0x7bc>
     9fc:	ldr	x1, [sp, #128]
     a00:	mov	x0, x19
     a04:	bl	4a0 <ctf_dump_append>
     a08:	mov	x0, x21
     a0c:	bl	0 <strlen>
     a10:	add	x0, x0, #0x1
     a14:	add	x21, x21, x0
     a18:	ldr	x0, [sp, #104]
     a1c:	ldr	x2, [x0, #336]
     a20:	ldr	x0, [x0, #344]
     a24:	add	x0, x2, x0
     a28:	cmp	x21, x0
     a2c:	b.cc	9e4 <ctf_dump+0x1a8>  // b.lo, b.ul, b.last
     a30:	b	87c <ctf_dump+0x40>
     a34:	cmp	w23, #0x4
     a38:	b.ne	100c <ctf_dump+0x7d0>  // b.any
     a3c:	mov	x2, x19
     a40:	adrp	x1, 0 <ctf_is_slice>
     a44:	add	x1, x1, #0x0
     a48:	ldr	x0, [sp, #104]
     a4c:	bl	0 <ctf_variable_iter>
     a50:	tbz	w0, #31, 87c <ctf_dump+0x40>
     a54:	b	1028 <ctf_dump+0x7ec>
     a58:	ldr	x0, [sp, #104]
     a5c:	ldr	x0, [x0, #432]
     a60:	mov	x22, #0x0                   	// #0
     a64:	cbz	x0, 87c <ctf_dump+0x40>
     a68:	stp	x27, x28, [sp, #80]
     a6c:	adrp	x28, 0 <ctf_is_slice>
     a70:	add	x28, x28, #0x0
     a74:	b	e4c <ctf_dump+0x610>
     a78:	adrp	x3, 0 <ctf_is_slice>
     a7c:	add	x3, x3, #0x0
     a80:	adrp	x1, 0 <ctf_is_slice>
     a84:	add	x1, x1, #0x0
     a88:	add	x0, sp, #0x78
     a8c:	bl	0 <asprintf>
     a90:	tbnz	w0, #31, c04 <ctf_dump+0x3c8>
     a94:	ldr	x1, [sp, #120]
     a98:	mov	x0, x19
     a9c:	bl	4a0 <ctf_dump_append>
     aa0:	ldr	x0, [sp, #104]
     aa4:	ldrb	w2, [x0, #16]
     aa8:	cbz	w2, ae4 <ctf_dump+0x2a8>
     aac:	adrp	x0, 0 <ctf_is_slice>
     ab0:	add	x0, x0, #0x0
     ab4:	adrp	x3, 0 <ctf_is_slice>
     ab8:	add	x3, x3, #0x0
     abc:	tst	x2, #0x1
     ac0:	csel	x3, x3, x0, ne  // ne = any
     ac4:	adrp	x1, 0 <ctf_is_slice>
     ac8:	add	x1, x1, #0x0
     acc:	add	x0, sp, #0x78
     ad0:	bl	0 <asprintf>
     ad4:	tbnz	w0, #31, c04 <ctf_dump+0x3c8>
     ad8:	ldr	x1, [sp, #120]
     adc:	mov	x0, x19
     ae0:	bl	4a0 <ctf_dump_append>
     ae4:	ldr	w3, [x21, #4]
     ae8:	adrp	x2, 0 <ctf_is_slice>
     aec:	add	x2, x2, #0x0
     af0:	mov	x1, x19
     af4:	ldr	x22, [sp, #104]
     af8:	mov	x0, x22
     afc:	bl	7bc <ctf_dump_header_strfield>
     b00:	tbnz	w0, #31, c04 <ctf_dump+0x3c8>
     b04:	ldr	w3, [x21, #8]
     b08:	adrp	x2, 0 <ctf_is_slice>
     b0c:	add	x2, x2, #0x0
     b10:	mov	x1, x19
     b14:	mov	x0, x22
     b18:	bl	7bc <ctf_dump_header_strfield>
     b1c:	tbnz	w0, #31, c04 <ctf_dump+0x3c8>
     b20:	ldr	w3, [x21, #12]
     b24:	adrp	x2, 0 <ctf_is_slice>
     b28:	add	x2, x2, #0x0
     b2c:	mov	x1, x19
     b30:	mov	x0, x22
     b34:	bl	7bc <ctf_dump_header_strfield>
     b38:	tbnz	w0, #31, c04 <ctf_dump+0x3c8>
     b3c:	ldr	w4, [x21, #20]
     b40:	ldr	w3, [x21, #16]
     b44:	adrp	x2, 0 <ctf_is_slice>
     b48:	add	x2, x2, #0x0
     b4c:	mov	x1, x19
     b50:	mov	x0, x22
     b54:	bl	748 <ctf_dump_header_sectfield>
     b58:	tbnz	w0, #31, c04 <ctf_dump+0x3c8>
     b5c:	ldr	w4, [x21, #24]
     b60:	ldr	w3, [x21, #20]
     b64:	adrp	x2, 0 <ctf_is_slice>
     b68:	add	x2, x2, #0x0
     b6c:	mov	x1, x19
     b70:	mov	x0, x22
     b74:	bl	748 <ctf_dump_header_sectfield>
     b78:	tbnz	w0, #31, c04 <ctf_dump+0x3c8>
     b7c:	ldr	w4, [x21, #36]
     b80:	ldr	w3, [x21, #24]
     b84:	adrp	x2, 0 <ctf_is_slice>
     b88:	add	x2, x2, #0x0
     b8c:	mov	x1, x19
     b90:	mov	x0, x22
     b94:	bl	748 <ctf_dump_header_sectfield>
     b98:	tbnz	w0, #31, c04 <ctf_dump+0x3c8>
     b9c:	ldr	w4, [x21, #40]
     ba0:	ldr	w3, [x21, #36]
     ba4:	adrp	x2, 0 <ctf_is_slice>
     ba8:	add	x2, x2, #0x0
     bac:	mov	x1, x19
     bb0:	mov	x0, x22
     bb4:	bl	748 <ctf_dump_header_sectfield>
     bb8:	tbnz	w0, #31, c04 <ctf_dump+0x3c8>
     bbc:	ldr	w4, [x21, #44]
     bc0:	ldr	w3, [x21, #40]
     bc4:	adrp	x2, 0 <ctf_is_slice>
     bc8:	add	x2, x2, #0x0
     bcc:	mov	x1, x19
     bd0:	mov	x0, x22
     bd4:	bl	748 <ctf_dump_header_sectfield>
     bd8:	tbnz	w0, #31, c04 <ctf_dump+0x3c8>
     bdc:	ldr	w3, [x21, #44]
     be0:	ldr	w4, [x21, #48]
     be4:	add	w4, w3, w4
     be8:	add	w4, w4, #0x1
     bec:	adrp	x2, 0 <ctf_is_slice>
     bf0:	add	x2, x2, #0x0
     bf4:	mov	x1, x19
     bf8:	mov	x0, x22
     bfc:	bl	748 <ctf_dump_header_sectfield>
     c00:	tbz	w0, #31, 87c <ctf_dump+0x40>
     c04:	bl	0 <__errno_location>
     c08:	ldr	w1, [x0]
     c0c:	ldr	x0, [sp, #104]
     c10:	bl	0 <ctf_set_errno>
     c14:	b	87c <ctf_dump+0x40>
     c18:	mov	x2, x19
     c1c:	adrp	x1, 0 <ctf_is_slice>
     c20:	add	x1, x1, #0x0
     c24:	ldr	x0, [sp, #104]
     c28:	bl	0 <ctf_label_iter>
     c2c:	tbz	w0, #31, 87c <ctf_dump+0x40>
     c30:	ldr	x21, [sp, #104]
     c34:	mov	x0, x21
     c38:	bl	0 <ctf_errno>
     c3c:	cmp	w0, #0x409
     c40:	b.ne	1028 <ctf_dump+0x7ec>  // b.any
     c44:	mov	w1, #0x0                   	// #0
     c48:	mov	x0, x21
     c4c:	bl	0 <ctf_set_errno>
     c50:	b	87c <ctf_dump+0x40>
     c54:	ldr	x0, [x19, #8]
     c58:	bl	0 <ctf_errno>
     c5c:	cmp	w0, #0x3f2
     c60:	b.eq	1194 <ctf_dump+0x958>  // b.none
     c64:	sub	w0, w0, #0x406
     c68:	cmp	w0, #0x1
     c6c:	b.ls	cc4 <ctf_dump+0x488>  // b.plast
     c70:	b	cf0 <ctf_dump+0x4b4>
     c74:	mov	x3, x21
     c78:	mov	x1, x27
     c7c:	add	x0, sp, #0x80
     c80:	bl	0 <asprintf>
     c84:	tbnz	w0, #31, d38 <ctf_dump+0x4fc>
     c88:	mov	w2, #0x1                   	// #1
     c8c:	mov	x1, x22
     c90:	ldr	x0, [x19, #8]
     c94:	bl	2a8 <ctf_dump_format_type>
     c98:	mov	x22, x0
     c9c:	cbz	x0, d4c <ctf_dump+0x510>
     ca0:	mov	x1, x0
     ca4:	ldr	x0, [sp, #128]
     ca8:	bl	0 <ctf_str_append_noerr>
     cac:	str	x0, [sp, #128]
     cb0:	mov	x0, x22
     cb4:	bl	0 <free>
     cb8:	ldr	x1, [sp, #128]
     cbc:	mov	x0, x19
     cc0:	bl	4a0 <ctf_dump_append>
     cc4:	add	x21, x21, #0x1
     cc8:	ldr	x0, [sp, #104]
     ccc:	ldr	x0, [x0, #432]
     cd0:	cmp	x21, x0
     cd4:	b.cs	d64 <ctf_dump+0x528>  // b.hs, b.nlast
     cd8:	mov	x1, x21
     cdc:	ldr	x0, [x19, #8]
     ce0:	bl	0 <ctf_lookup_by_symbol>
     ce4:	mov	x22, x0
     ce8:	cmn	x0, #0x1
     cec:	b.eq	c54 <ctf_dump+0x418>  // b.none
     cf0:	mov	x1, x21
     cf4:	ldr	x0, [sp, #104]
     cf8:	bl	0 <ctf_lookup_symbol_name>
     cfc:	mov	x2, x0
     d00:	ldrb	w0, [x0]
     d04:	cbnz	w0, c74 <ctf_dump+0x438>
     d08:	mov	x2, x21
     d0c:	mov	x1, x26
     d10:	add	x0, sp, #0x80
     d14:	bl	0 <asprintf>
     d18:	tbz	w0, #31, c88 <ctf_dump+0x44c>
     d1c:	bl	0 <__errno_location>
     d20:	ldr	w1, [x0]
     d24:	ldr	x0, [sp, #104]
     d28:	bl	0 <ctf_set_errno>
     d2c:	tbnz	w0, #31, d5c <ctf_dump+0x520>
     d30:	ldp	x27, x28, [sp, #80]
     d34:	b	87c <ctf_dump+0x40>
     d38:	bl	0 <__errno_location>
     d3c:	ldr	w1, [x0]
     d40:	ldr	x0, [sp, #104]
     d44:	bl	0 <ctf_set_errno>
     d48:	b	d2c <ctf_dump+0x4f0>
     d4c:	ldr	x0, [sp, #128]
     d50:	bl	0 <free>
     d54:	ldp	x27, x28, [sp, #80]
     d58:	b	1028 <ctf_dump+0x7ec>
     d5c:	ldp	x27, x28, [sp, #80]
     d60:	b	1028 <ctf_dump+0x7ec>
     d64:	ldp	x27, x28, [sp, #80]
     d68:	b	87c <ctf_dump+0x40>
     d6c:	ldr	x0, [x19, #8]
     d70:	bl	0 <ctf_errno>
     d74:	cmp	w0, #0x3f2
     d78:	b.eq	119c <ctf_dump+0x960>  // b.none
     d7c:	sub	w0, w0, #0x404
     d80:	cmp	w0, #0x2
     d84:	b.ls	e38 <ctf_dump+0x5fc>  // b.plast
     d88:	b	e68 <ctf_dump+0x62c>
     d8c:	mov	w1, #0xc                   	// #12
     d90:	ldr	x0, [sp, #104]
     d94:	bl	0 <ctf_set_errno>
     d98:	b	dd4 <ctf_dump+0x598>
     d9c:	mov	x3, x22
     da0:	adrp	x1, 0 <ctf_is_slice>
     da4:	add	x1, x1, #0x0
     da8:	add	x0, sp, #0x78
     dac:	bl	0 <asprintf>
     db0:	tbz	w0, #31, ed0 <ctf_dump+0x694>
     db4:	mov	x0, x26
     db8:	bl	0 <free>
     dbc:	mov	x0, x21
     dc0:	bl	0 <free>
     dc4:	bl	0 <__errno_location>
     dc8:	ldr	w1, [x0]
     dcc:	ldr	x0, [sp, #104]
     dd0:	bl	0 <ctf_set_errno>
     dd4:	tbnz	w0, #31, fcc <ctf_dump+0x790>
     dd8:	ldp	x27, x28, [sp, #80]
     ddc:	b	87c <ctf_dump+0x40>
     de0:	mov	x1, x28
     de4:	mov	x0, x21
     de8:	bl	0 <ctf_str_append_noerr>
     dec:	mov	x21, x0
     df0:	ldr	x0, [sp, #120]
     df4:	bl	0 <free>
     df8:	add	x27, x27, #0x1
     dfc:	ldr	w0, [sp, #136]
     e00:	cmp	x27, x0
     e04:	b.cc	f18 <ctf_dump+0x6dc>  // b.lo, b.ul, b.last
     e08:	ldr	w0, [sp, #140]
     e0c:	tbnz	w0, #0, f58 <ctf_dump+0x71c>
     e10:	adrp	x1, 0 <ctf_is_slice>
     e14:	add	x1, x1, #0x0
     e18:	mov	x0, x21
     e1c:	bl	0 <ctf_str_append_noerr>
     e20:	mov	x21, x0
     e24:	mov	x0, x26
     e28:	bl	0 <free>
     e2c:	mov	x1, x21
     e30:	mov	x0, x19
     e34:	bl	4a0 <ctf_dump_append>
     e38:	add	x22, x22, #0x1
     e3c:	ldr	x0, [sp, #104]
     e40:	ldr	x0, [x0, #432]
     e44:	cmp	x22, x0
     e48:	b.cs	fd4 <ctf_dump+0x798>  // b.hs, b.nlast
     e4c:	add	x2, sp, #0x80
     e50:	mov	x1, x22
     e54:	ldr	x0, [x19, #8]
     e58:	bl	0 <ctf_func_info>
     e5c:	sxtw	x21, w0
     e60:	cmn	w0, #0x1
     e64:	b.eq	d6c <ctf_dump+0x530>  // b.none
     e68:	mov	x1, #0x8                   	// #8
     e6c:	ldr	w0, [sp, #136]
     e70:	bl	0 <calloc>
     e74:	mov	x26, x0
     e78:	cbz	x0, d8c <ctf_dump+0x550>
     e7c:	mov	x1, x21
     e80:	ldr	x0, [x19, #8]
     e84:	bl	0 <ctf_type_aname>
     e88:	mov	x21, x0
     e8c:	cbz	x0, f70 <ctf_dump+0x734>
     e90:	adrp	x1, 0 <ctf_is_slice>
     e94:	add	x1, x1, #0x0
     e98:	bl	0 <ctf_str_append_noerr>
     e9c:	mov	x21, x0
     ea0:	mov	x1, x22
     ea4:	ldr	x0, [sp, #104]
     ea8:	bl	0 <ctf_lookup_symbol_name>
     eac:	mov	x2, x0
     eb0:	ldrb	w0, [x0]
     eb4:	cbnz	w0, d9c <ctf_dump+0x560>
     eb8:	mov	x2, x22
     ebc:	adrp	x1, 0 <ctf_is_slice>
     ec0:	add	x1, x1, #0x0
     ec4:	add	x0, sp, #0x78
     ec8:	bl	0 <asprintf>
     ecc:	tbnz	w0, #31, db4 <ctf_dump+0x578>
     ed0:	ldr	x1, [sp, #120]
     ed4:	mov	x0, x21
     ed8:	bl	0 <ctf_str_append_noerr>
     edc:	adrp	x1, 0 <ctf_is_slice>
     ee0:	add	x1, x1, #0x0
     ee4:	bl	0 <ctf_str_append_noerr>
     ee8:	mov	x21, x0
     eec:	ldr	x0, [sp, #120]
     ef0:	bl	0 <free>
     ef4:	mov	x3, x26
     ef8:	ldr	w2, [sp, #136]
     efc:	mov	x1, x22
     f00:	ldr	x0, [x19, #8]
     f04:	bl	0 <ctf_func_args>
     f08:	tbnz	w0, #31, f7c <ctf_dump+0x740>
     f0c:	ldr	w0, [sp, #136]
     f10:	cbz	w0, e08 <ctf_dump+0x5cc>
     f14:	mov	x27, #0x0                   	// #0
     f18:	ldr	x1, [x26, x27, lsl #3]
     f1c:	ldr	x0, [x19, #8]
     f20:	bl	0 <ctf_type_aname>
     f24:	mov	x1, x0
     f28:	str	x0, [sp, #120]
     f2c:	cbz	x0, f88 <ctf_dump+0x74c>
     f30:	mov	x0, x21
     f34:	bl	0 <ctf_str_append_noerr>
     f38:	mov	x21, x0
     f3c:	ldr	w0, [sp, #136]
     f40:	sub	w0, w0, #0x1
     f44:	cmp	x0, x27
     f48:	b.hi	de0 <ctf_dump+0x5a4>  // b.pmore
     f4c:	ldr	w0, [sp, #140]
     f50:	tbz	w0, #0, df0 <ctf_dump+0x5b4>
     f54:	b	de0 <ctf_dump+0x5a4>
     f58:	adrp	x1, 0 <ctf_is_slice>
     f5c:	add	x1, x1, #0x0
     f60:	mov	x0, x21
     f64:	bl	0 <ctf_str_append_noerr>
     f68:	mov	x21, x0
     f6c:	b	e10 <ctf_dump+0x5d4>
     f70:	adrp	x23, 0 <ctf_is_slice>
     f74:	add	x23, x23, #0x0
     f78:	b	f90 <ctf_dump+0x754>
     f7c:	adrp	x23, 0 <ctf_is_slice>
     f80:	add	x23, x23, #0x0
     f84:	b	f90 <ctf_dump+0x754>
     f88:	adrp	x23, 0 <ctf_is_slice>
     f8c:	add	x23, x23, #0x0
     f90:	ldr	x0, [x19, #8]
     f94:	bl	0 <ctf_errno>
     f98:	bl	0 <ctf_errmsg>
     f9c:	mov	x3, x0
     fa0:	mov	x2, x22
     fa4:	mov	x1, x23
     fa8:	adrp	x0, 0 <ctf_is_slice>
     fac:	add	x0, x0, #0x0
     fb0:	bl	0 <ctf_dprintf>
     fb4:	mov	x0, x26
     fb8:	bl	0 <free>
     fbc:	mov	x0, x21
     fc0:	bl	0 <free>
     fc4:	ldp	x27, x28, [sp, #80]
     fc8:	b	1028 <ctf_dump+0x7ec>
     fcc:	ldp	x27, x28, [sp, #80]
     fd0:	b	1028 <ctf_dump+0x7ec>
     fd4:	ldp	x27, x28, [sp, #80]
     fd8:	b	87c <ctf_dump+0x40>
     fdc:	mov	x2, x19
     fe0:	adrp	x1, 0 <ctf_is_slice>
     fe4:	add	x1, x1, #0x0
     fe8:	ldr	x0, [sp, #104]
     fec:	bl	0 <ctf_type_iter_all>
     ff0:	tbz	w0, #31, 87c <ctf_dump+0x40>
     ff4:	b	1028 <ctf_dump+0x7ec>
     ff8:	bl	0 <__errno_location>
     ffc:	ldr	w1, [x0]
    1000:	ldr	x0, [sp, #104]
    1004:	bl	0 <ctf_set_errno>
    1008:	b	87c <ctf_dump+0x40>
    100c:	mov	w1, #0x417                 	// #1047
    1010:	ldr	x0, [sp, #104]
    1014:	bl	0 <ctf_set_errno>
    1018:	b	1028 <ctf_dump+0x7ec>
    101c:	mov	w1, #0x418                 	// #1048
    1020:	ldr	x0, [sp, #104]
    1024:	bl	0 <ctf_set_errno>
    1028:	ldr	x21, [x19, #32]
    102c:	cbz	x21, 1048 <ctf_dump+0x80c>
    1030:	ldr	x0, [x21, #16]
    1034:	bl	0 <free>
    1038:	mov	x0, x21
    103c:	ldr	x21, [x21, #8]
    1040:	bl	0 <free>
    1044:	cbnz	x21, 1030 <ctf_dump+0x7f4>
    1048:	mov	x0, x19
    104c:	bl	0 <free>
    1050:	mov	w1, #0x0                   	// #0
    1054:	ldr	x0, [sp, #104]
    1058:	bl	0 <ctf_set_errno>
    105c:	str	xzr, [x20]
    1060:	mov	x22, #0x0                   	// #0
    1064:	b	1150 <ctf_dump+0x914>
    1068:	ldr	x0, [x19, #32]
    106c:	b	888 <ctf_dump+0x4c>
    1070:	mov	x22, x19
    1074:	b	112c <ctf_dump+0x8f0>
    1078:	mov	x2, x25
    107c:	mov	x1, x19
    1080:	mov	w0, w23
    1084:	blr	x24
    1088:	mov	x21, x0
    108c:	mov	x1, x0
    1090:	mov	x0, x22
    1094:	bl	0 <ctf_str_append_noerr>
    1098:	mov	x1, x26
    109c:	bl	0 <ctf_str_append_noerr>
    10a0:	mov	x22, x0
    10a4:	cmp	x21, x19
    10a8:	b.eq	1120 <ctf_dump+0x8e4>  // b.none
    10ac:	mov	x0, x21
    10b0:	bl	0 <free>
    10b4:	cbz	x20, 1128 <ctf_dump+0x8ec>
    10b8:	mov	x19, x20
    10bc:	strb	w28, [x19], #1
    10c0:	ldrb	w0, [x19]
    10c4:	cbz	w0, 1118 <ctf_dump+0x8dc>
    10c8:	mov	w1, w27
    10cc:	mov	x0, x19
    10d0:	bl	0 <strchr>
    10d4:	mov	x20, x0
    10d8:	cbz	x0, 1078 <ctf_dump+0x83c>
    10dc:	strb	wzr, [x0]
    10e0:	mov	x2, x25
    10e4:	mov	x1, x19
    10e8:	mov	w0, w23
    10ec:	blr	x24
    10f0:	mov	x21, x0
    10f4:	mov	x1, x0
    10f8:	mov	x0, x22
    10fc:	bl	0 <ctf_str_append_noerr>
    1100:	mov	x1, x26
    1104:	bl	0 <ctf_str_append_noerr>
    1108:	mov	x22, x0
    110c:	cmp	x21, x19
    1110:	b.ne	10ac <ctf_dump+0x870>  // b.any
    1114:	b	10b8 <ctf_dump+0x87c>
    1118:	ldp	x27, x28, [sp, #80]
    111c:	b	112c <ctf_dump+0x8f0>
    1120:	ldp	x27, x28, [sp, #80]
    1124:	b	112c <ctf_dump+0x8f0>
    1128:	ldp	x27, x28, [sp, #80]
    112c:	mov	x0, x22
    1130:	bl	0 <strlen>
    1134:	sub	x0, x0, #0x1
    1138:	ldrb	w1, [x22, x0]
    113c:	cmp	w1, #0xa
    1140:	b.eq	116c <ctf_dump+0x930>  // b.none
    1144:	mov	w1, #0x0                   	// #0
    1148:	ldr	x0, [sp, #104]
    114c:	bl	0 <ctf_set_errno>
    1150:	mov	x0, x22
    1154:	ldp	x19, x20, [sp, #16]
    1158:	ldp	x21, x22, [sp, #32]
    115c:	ldp	x23, x24, [sp, #48]
    1160:	ldp	x25, x26, [sp, #64]
    1164:	ldp	x29, x30, [sp], #176
    1168:	ret
    116c:	strb	wzr, [x22, x0]
    1170:	b	1144 <ctf_dump+0x908>
    1174:	ldr	x0, [x0, #16]
    1178:	bl	0 <strdup>
    117c:	mov	x22, x0
    1180:	cbnz	x0, 1144 <ctf_dump+0x908>
    1184:	mov	w1, #0xc                   	// #12
    1188:	ldr	x0, [sp, #104]
    118c:	bl	0 <ctf_set_errno>
    1190:	b	1150 <ctf_dump+0x914>
    1194:	ldp	x27, x28, [sp, #80]
    1198:	b	1028 <ctf_dump+0x7ec>
    119c:	ldp	x27, x28, [sp, #80]
    11a0:	b	1028 <ctf_dump+0x7ec>

ctf-create.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <clp2>:
       0:	sub	x0, x0, #0x1
       4:	orr	x0, x0, x0, lsr #1
       8:	orr	x0, x0, x0, lsr #2
       c:	orr	x0, x0, x0, lsr #4
      10:	orr	x0, x0, x0, lsr #8
      14:	orr	x0, x0, x0, lsr #16
      18:	add	x0, x0, #0x1
      1c:	ret

0000000000000020 <ctf_grow_ptrtab>:
      20:	stp	x29, x30, [sp, #-32]!
      24:	mov	x29, sp
      28:	stp	x19, x20, [sp, #16]
      2c:	mov	x19, x0
      30:	ldr	x2, [x0, #456]
      34:	ldr	x3, [x0, #448]
      38:	cbz	x3, ac <ctf_grow_ptrtab+0x8c>
      3c:	ldr	x1, [x0, #480]
      40:	add	x1, x1, #0x2
      44:	mov	w0, #0x0                   	// #0
      48:	cmp	x1, x2
      4c:	b.ls	a0 <ctf_grow_ptrtab+0x80>  // b.plast
      50:	ucvtf	d0, x2
      54:	fmov	d1, #1.250000000000000000e+00
      58:	fmul	d0, d0, d1
      5c:	fcvtzu	x20, d0
      60:	mov	w0, #0x0                   	// #0
      64:	cmp	x20, x2
      68:	b.eq	a0 <ctf_grow_ptrtab+0x80>  // b.none
      6c:	lsl	x1, x20, #2
      70:	mov	x0, x3
      74:	bl	0 <realloc>
      78:	cbz	x0, b4 <ctf_grow_ptrtab+0x94>
      7c:	str	x0, [x19, #448]
      80:	ldr	x3, [x19, #456]
      84:	sub	x2, x20, x3
      88:	lsl	x2, x2, #2
      8c:	mov	w1, #0x0                   	// #0
      90:	add	x0, x0, x3, lsl #2
      94:	bl	0 <memset>
      98:	str	x20, [x19, #456]
      9c:	mov	w0, #0x0                   	// #0
      a0:	ldp	x19, x20, [sp, #16]
      a4:	ldp	x29, x30, [sp], #32
      a8:	ret
      ac:	mov	x20, #0x400                 	// #1024
      b0:	b	60 <ctf_grow_ptrtab+0x40>
      b4:	mov	w1, #0xc                   	// #12
      b8:	mov	x0, x19
      bc:	bl	0 <ctf_set_errno>
      c0:	b	a0 <ctf_grow_ptrtab+0x80>

00000000000000c4 <ctf_sort_var>:
      c4:	stp	x29, x30, [sp, #-48]!
      c8:	mov	x29, sp
      cc:	stp	x19, x20, [sp, #16]
      d0:	str	x21, [sp, #32]
      d4:	mov	x21, x1
      d8:	mov	x19, x2
      dc:	ldr	x2, [x2, #8]
      e0:	ldr	w1, [x0]
      e4:	ldr	x0, [x19]
      e8:	bl	0 <ctf_strraw_explicit>
      ec:	mov	x20, x0
      f0:	ldr	x2, [x19, #8]
      f4:	ldr	w1, [x21]
      f8:	ldr	x0, [x19]
      fc:	bl	0 <ctf_strraw_explicit>
     100:	mov	x1, x0
     104:	mov	x0, x20
     108:	bl	0 <strcmp>
     10c:	ldp	x19, x20, [sp, #16]
     110:	ldr	x21, [sp, #32]
     114:	ldp	x29, x30, [sp], #48
     118:	ret

000000000000011c <membadd>:
     11c:	stp	x29, x30, [sp, #-64]!
     120:	mov	x29, sp
     124:	stp	x19, x20, [sp, #16]
     128:	stp	x21, x22, [sp, #32]
     12c:	str	x23, [sp, #48]
     130:	mov	x20, x0
     134:	mov	x23, x1
     138:	mov	x22, x2
     13c:	mov	x21, x3
     140:	mov	x0, #0x30                  	// #48
     144:	bl	0 <malloc>
     148:	cbz	x0, 1b0 <membadd+0x94>
     14c:	mov	x19, x0
     150:	cbz	x20, 164 <membadd+0x48>
     154:	mov	x0, x20
     158:	bl	0 <strdup>
     15c:	mov	x20, x0
     160:	cbz	x0, 1c0 <membadd+0xa4>
     164:	str	x20, [x19, #16]
     168:	str	x23, [x19, #24]
     16c:	str	x22, [x19, #32]
     170:	mov	w0, #0xffffffff            	// #-1
     174:	str	w0, [x19, #40]
     178:	ldr	x0, [x21, #16]
     17c:	mov	x1, x19
     180:	add	x0, x0, #0x30
     184:	bl	0 <ctf_list_append>
     188:	ldr	x1, [x21]
     18c:	ldr	w0, [x1, #552]
     190:	orr	w0, w0, #0x4
     194:	str	w0, [x1, #552]
     198:	mov	w0, #0x0                   	// #0
     19c:	ldp	x19, x20, [sp, #16]
     1a0:	ldp	x21, x22, [sp, #32]
     1a4:	ldr	x23, [sp, #48]
     1a8:	ldp	x29, x30, [sp], #64
     1ac:	ret
     1b0:	mov	w1, #0xb                   	// #11
     1b4:	ldr	x0, [x21]
     1b8:	bl	0 <ctf_set_errno>
     1bc:	b	19c <membadd+0x80>
     1c0:	mov	x0, x19
     1c4:	bl	0 <free>
     1c8:	mov	w1, #0xb                   	// #11
     1cc:	ldr	x0, [x21]
     1d0:	bl	0 <ctf_set_errno>
     1d4:	b	19c <membadd+0x80>

00000000000001d8 <enumcmp>:
     1d8:	stp	x29, x30, [sp, #-64]!
     1dc:	mov	x29, sp
     1e0:	stp	x19, x20, [sp, #16]
     1e4:	str	x21, [sp, #32]
     1e8:	mov	x20, x0
     1ec:	mov	w21, w1
     1f0:	mov	x19, x2
     1f4:	add	x3, sp, #0x3c
     1f8:	mov	x2, x0
     1fc:	ldr	x1, [x19, #8]
     200:	ldr	x0, [x19]
     204:	bl	0 <ctf_enum_value>
     208:	tbnz	w0, #31, 22c <enumcmp+0x54>
     20c:	ldr	w2, [sp, #60]
     210:	mov	w0, #0x0                   	// #0
     214:	cmp	w2, w21
     218:	b.ne	254 <enumcmp+0x7c>  // b.any
     21c:	ldp	x19, x20, [sp, #16]
     220:	ldr	x21, [sp, #32]
     224:	ldp	x29, x30, [sp], #64
     228:	ret
     22c:	ldr	x0, [x19]
     230:	bl	0 <ctf_errno>
     234:	bl	0 <ctf_errmsg>
     238:	mov	x2, x0
     23c:	mov	x1, x20
     240:	adrp	x0, 0 <clp2>
     244:	add	x0, x0, #0x0
     248:	bl	0 <ctf_dprintf>
     24c:	mov	w0, #0x1                   	// #1
     250:	b	21c <enumcmp+0x44>
     254:	mov	w1, w21
     258:	adrp	x0, 0 <clp2>
     25c:	add	x0, x0, #0x0
     260:	bl	0 <ctf_dprintf>
     264:	mov	w0, #0x1                   	// #1
     268:	b	21c <enumcmp+0x44>

000000000000026c <membcmp>:
     26c:	stp	x29, x30, [sp, #-64]!
     270:	mov	x29, sp
     274:	stp	x19, x20, [sp, #16]
     278:	str	x21, [sp, #32]
     27c:	mov	x20, x0
     280:	mov	x21, x2
     284:	mov	x19, x3
     288:	add	x3, sp, #0x30
     28c:	mov	x2, x0
     290:	ldr	x1, [x19, #8]
     294:	ldr	x0, [x19]
     298:	bl	0 <ctf_member_info>
     29c:	tbnz	w0, #31, 2c0 <membcmp+0x54>
     2a0:	ldr	x2, [sp, #56]
     2a4:	mov	w0, #0x0                   	// #0
     2a8:	cmp	x2, x21
     2ac:	b.ne	2e8 <membcmp+0x7c>  // b.any
     2b0:	ldp	x19, x20, [sp, #16]
     2b4:	ldr	x21, [sp, #32]
     2b8:	ldp	x29, x30, [sp], #64
     2bc:	ret
     2c0:	ldr	x0, [x19]
     2c4:	bl	0 <ctf_errno>
     2c8:	bl	0 <ctf_errmsg>
     2cc:	mov	x2, x0
     2d0:	mov	x1, x20
     2d4:	adrp	x0, 0 <clp2>
     2d8:	add	x0, x0, #0x0
     2dc:	bl	0 <ctf_dprintf>
     2e0:	mov	w0, #0x1                   	// #1
     2e4:	b	2b0 <membcmp+0x44>
     2e8:	mov	x3, x21
     2ec:	mov	x1, x20
     2f0:	adrp	x0, 0 <clp2>
     2f4:	add	x0, x0, #0x0
     2f8:	bl	0 <ctf_dprintf>
     2fc:	mov	w0, #0x1                   	// #1
     300:	b	2b0 <membcmp+0x44>

0000000000000304 <ctf_create>:
     304:	stp	x29, x30, [sp, #-112]!
     308:	mov	x29, sp
     30c:	stp	x19, x20, [sp, #16]
     310:	stp	x21, x22, [sp, #32]
     314:	stp	x25, x26, [sp, #64]
     318:	mov	x26, x0
     31c:	bl	0 <libctf_init_debug>
     320:	mov	x3, #0x0                   	// #0
     324:	mov	x2, #0x0                   	// #0
     328:	adrp	x1, 0 <ctf_hash_eq_integer>
     32c:	add	x1, x1, #0x0
     330:	adrp	x0, 0 <ctf_hash_integer>
     334:	add	x0, x0, #0x0
     338:	bl	0 <ctf_dynhash_create>
     33c:	mov	x21, x0
     340:	cbz	x0, 48c <ctf_create+0x188>
     344:	mov	x3, #0x0                   	// #0
     348:	mov	x2, #0x0                   	// #0
     34c:	adrp	x1, 0 <ctf_hash_eq_string>
     350:	add	x1, x1, #0x0
     354:	adrp	x0, 0 <ctf_hash_string>
     358:	add	x0, x0, #0x0
     35c:	bl	0 <ctf_dynhash_create>
     360:	mov	x22, x0
     364:	cbz	x0, 4a0 <ctf_create+0x19c>
     368:	stp	x23, x24, [sp, #48]
     36c:	adrp	x20, 0 <ctf_hash_eq_string>
     370:	add	x20, x20, #0x0
     374:	adrp	x19, 0 <ctf_hash_string>
     378:	add	x19, x19, #0x0
     37c:	mov	x3, #0x0                   	// #0
     380:	mov	x2, #0x0                   	// #0
     384:	mov	x1, x20
     388:	mov	x0, x19
     38c:	bl	0 <ctf_dynhash_create>
     390:	mov	x24, x0
     394:	mov	x3, #0x0                   	// #0
     398:	mov	x2, #0x0                   	// #0
     39c:	mov	x1, x20
     3a0:	mov	x0, x19
     3a4:	bl	0 <ctf_dynhash_create>
     3a8:	mov	x23, x0
     3ac:	mov	x3, #0x0                   	// #0
     3b0:	mov	x2, #0x0                   	// #0
     3b4:	mov	x1, x20
     3b8:	mov	x0, x19
     3bc:	bl	0 <ctf_dynhash_create>
     3c0:	mov	x25, x0
     3c4:	mov	x3, #0x0                   	// #0
     3c8:	mov	x2, #0x0                   	// #0
     3cc:	mov	x1, x20
     3d0:	mov	x0, x19
     3d4:	bl	0 <ctf_dynhash_create>
     3d8:	mov	x20, x0
     3dc:	cmp	x24, #0x0
     3e0:	ccmp	x23, #0x0, #0x4, ne  // ne = any
     3e4:	b.eq	4b0 <ctf_create+0x1ac>  // b.none
     3e8:	cmp	x25, #0x0
     3ec:	ccmp	x0, #0x0, #0x4, ne  // ne = any
     3f0:	b.eq	4b0 <ctf_create+0x1ac>  // b.none
     3f4:	adrp	x0, 0 <_CTF_SECTION>
     3f8:	add	x0, x0, #0x0
     3fc:	str	x0, [sp, #80]
     400:	adrp	x0, 0 <clp2>
     404:	add	x0, x0, #0x0
     408:	str	x0, [sp, #88]
     40c:	mov	x0, #0x34                  	// #52
     410:	str	x0, [sp, #96]
     414:	mov	x4, #0x1                   	// #1
     418:	str	x4, [sp, #104]
     41c:	mov	x5, x26
     420:	mov	x3, #0x0                   	// #0
     424:	mov	x2, #0x0                   	// #0
     428:	mov	x1, #0x0                   	// #0
     42c:	add	x0, sp, #0x50
     430:	bl	0 <ctf_bufopen_internal>
     434:	mov	x19, x0
     438:	cbz	x0, 4bc <ctf_create+0x1b8>
     43c:	str	x24, [x0, #160]
     440:	str	x23, [x0, #176]
     444:	str	x25, [x0, #192]
     448:	str	x20, [x0, #208]
     44c:	str	x21, [x0, #568]
     450:	str	x22, [x0, #592]
     454:	str	xzr, [x0, #616]
     458:	mov	x0, #0x1                   	// #1
     45c:	str	x0, [x19, #624]
     460:	str	xzr, [x19, #632]
     464:	mov	x0, x19
     468:	bl	0 <ctf_set_ctl_hashes>
     46c:	mov	w1, #0x2                   	// #2
     470:	mov	x0, x19
     474:	bl	0 <ctf_setmodel>
     478:	mov	x0, x19
     47c:	bl	20 <ctf_grow_ptrtab>
     480:	tbnz	w0, #31, 50c <ctf_create+0x208>
     484:	ldp	x23, x24, [sp, #48]
     488:	b	4f4 <ctf_create+0x1f0>
     48c:	mov	w1, #0xb                   	// #11
     490:	mov	x0, x26
     494:	bl	0 <ctf_set_open_errno>
     498:	mov	x19, x21
     49c:	b	4f4 <ctf_create+0x1f0>
     4a0:	mov	w1, #0xb                   	// #11
     4a4:	mov	x0, x26
     4a8:	bl	0 <ctf_set_open_errno>
     4ac:	b	4e8 <ctf_create+0x1e4>
     4b0:	mov	w1, #0xb                   	// #11
     4b4:	mov	x0, x26
     4b8:	bl	0 <ctf_set_open_errno>
     4bc:	mov	x0, x24
     4c0:	bl	0 <ctf_dynhash_destroy>
     4c4:	mov	x0, x23
     4c8:	bl	0 <ctf_dynhash_destroy>
     4cc:	mov	x0, x25
     4d0:	bl	0 <ctf_dynhash_destroy>
     4d4:	mov	x0, x20
     4d8:	bl	0 <ctf_dynhash_destroy>
     4dc:	mov	x0, x22
     4e0:	bl	0 <ctf_dynhash_destroy>
     4e4:	ldp	x23, x24, [sp, #48]
     4e8:	mov	x0, x21
     4ec:	bl	0 <ctf_dynhash_destroy>
     4f0:	mov	x19, #0x0                   	// #0
     4f4:	mov	x0, x19
     4f8:	ldp	x19, x20, [sp, #16]
     4fc:	ldp	x21, x22, [sp, #32]
     500:	ldp	x25, x26, [sp, #64]
     504:	ldp	x29, x30, [sp], #112
     508:	ret
     50c:	mov	x0, x19
     510:	bl	0 <ctf_errno>
     514:	mov	w1, w0
     518:	mov	x0, x26
     51c:	bl	0 <ctf_set_open_errno>
     520:	mov	x0, x19
     524:	bl	0 <ctf_file_close>
     528:	mov	x19, #0x0                   	// #0
     52c:	ldp	x23, x24, [sp, #48]
     530:	b	4f4 <ctf_create+0x1f0>

0000000000000534 <ctf_update>:
     534:	ldr	w1, [x0, #552]
     538:	tbz	w1, #1, 54c <ctf_update+0x18>
     53c:	ldr	x1, [x0, #480]
     540:	str	x1, [x0, #616]
     544:	mov	w0, #0x0                   	// #0
     548:	ret
     54c:	stp	x29, x30, [sp, #-16]!
     550:	mov	x29, sp
     554:	mov	w1, #0x40d                 	// #1037
     558:	bl	0 <ctf_set_errno>
     55c:	ldp	x29, x30, [sp], #16
     560:	ret

0000000000000564 <ctf_serialize>:
     564:	sub	sp, sp, #0x3d0
     568:	stp	x29, x30, [sp, #16]
     56c:	add	x29, sp, #0x10
     570:	stp	x19, x20, [sp, #32]
     574:	mov	x20, x0
     578:	ldr	w1, [x0, #552]
     57c:	tbz	w1, #1, 598 <ctf_serialize+0x34>
     580:	mov	w0, #0x0                   	// #0
     584:	tbnz	w1, #2, 5a4 <ctf_serialize+0x40>
     588:	ldp	x19, x20, [sp, #32]
     58c:	ldp	x29, x30, [sp, #16]
     590:	add	sp, sp, #0x3d0
     594:	ret
     598:	mov	w1, #0x40d                 	// #1037
     59c:	bl	0 <ctf_set_errno>
     5a0:	b	588 <ctf_serialize+0x24>
     5a4:	stp	x21, x22, [sp, #48]
     5a8:	stp	x23, x24, [sp, #64]
     5ac:	stp	x25, x26, [sp, #80]
     5b0:	stp	xzr, xzr, [sp, #192]
     5b4:	stp	xzr, xzr, [sp, #208]
     5b8:	stp	xzr, xzr, [sp, #224]
     5bc:	str	wzr, [sp, #240]
     5c0:	mov	w0, #0xffffdff2            	// #-8206
     5c4:	strh	w0, [sp, #192]
     5c8:	mov	w0, #0x4                   	// #4
     5cc:	strb	w0, [sp, #194]
     5d0:	ldr	x21, [x20, #584]
     5d4:	cbz	x21, 6ec <ctf_serialize+0x188>
     5d8:	mov	x22, #0x0                   	// #0
     5dc:	mov	w23, #0x1fffffff            	// #536870911
     5e0:	b	5fc <ctf_serialize+0x98>
     5e4:	sub	w19, w19, #0x1
     5e8:	cmp	w19, #0x1
     5ec:	b.hi	5f4 <ctf_serialize+0x90>  // b.pmore
     5f0:	add	x22, x22, #0x4
     5f4:	ldr	x21, [x21, #8]
     5f8:	cbz	x21, 6f0 <ctf_serialize+0x18c>
     5fc:	ldr	x0, [x20]
     600:	ldr	x1, [x0]
     604:	ldr	w0, [x21, #28]
     608:	blr	x1
     60c:	mov	w19, w0
     610:	ldr	x0, [x20]
     614:	ldr	x1, [x0, #16]
     618:	ldr	w0, [x21, #28]
     61c:	blr	x1
     620:	ldr	w1, [x21, #32]
     624:	cmn	w1, #0x1
     628:	b.eq	674 <ctf_serialize+0x110>  // b.none
     62c:	add	x22, x22, #0xc
     630:	cmp	w19, #0x7
     634:	b.hi	65c <ctf_serialize+0xf8>  // b.pmore
     638:	cmp	w19, #0x5
     63c:	b.hi	6c0 <ctf_serialize+0x15c>  // b.pmore
     640:	cmp	w19, #0x4
     644:	b.eq	6b8 <ctf_serialize+0x154>  // b.none
     648:	b.ls	5e4 <ctf_serialize+0x80>  // b.plast
     64c:	add	w0, w0, #0x1
     650:	and	x0, x0, #0xfffffffe
     654:	add	x22, x22, x0, lsl #2
     658:	b	5f4 <ctf_serialize+0x90>
     65c:	cmp	w19, #0x8
     660:	b.eq	6e4 <ctf_serialize+0x180>  // b.none
     664:	cmp	w19, #0xe
     668:	b.ne	5f4 <ctf_serialize+0x90>  // b.any
     66c:	add	x22, x22, #0x8
     670:	b	5f4 <ctf_serialize+0x90>
     674:	add	x22, x22, #0x14
     678:	cmp	w19, #0x7
     67c:	b.hi	6a4 <ctf_serialize+0x140>  // b.pmore
     680:	cmp	w19, #0x5
     684:	b.hi	6d8 <ctf_serialize+0x174>  // b.pmore
     688:	cmp	w19, #0x4
     68c:	b.eq	6b8 <ctf_serialize+0x154>  // b.none
     690:	b.hi	64c <ctf_serialize+0xe8>  // b.pmore
     694:	sub	w19, w19, #0x1
     698:	cmp	w19, #0x1
     69c:	b.ls	5f0 <ctf_serialize+0x8c>  // b.plast
     6a0:	b	5f4 <ctf_serialize+0x90>
     6a4:	cmp	w19, #0x8
     6a8:	b.eq	6e4 <ctf_serialize+0x180>  // b.none
     6ac:	cmp	w19, #0xe
     6b0:	b.eq	66c <ctf_serialize+0x108>  // b.none
     6b4:	b	5f4 <ctf_serialize+0x90>
     6b8:	add	x22, x22, #0xc
     6bc:	b	5f4 <ctf_serialize+0x90>
     6c0:	cmp	w1, w23
     6c4:	b.hi	6d8 <ctf_serialize+0x174>  // b.pmore
     6c8:	ubfiz	x1, x0, #1, #32
     6cc:	add	x0, x1, w0, uxtw
     6d0:	add	x22, x22, x0, lsl #2
     6d4:	b	5f4 <ctf_serialize+0x90>
     6d8:	ubfiz	x0, x0, #4, #32
     6dc:	add	x22, x22, x0
     6e0:	b	5f4 <ctf_serialize+0x90>
     6e4:	add	x22, x22, w0, uxtw #3
     6e8:	b	5f4 <ctf_serialize+0x90>
     6ec:	mov	x22, #0x0                   	// #0
     6f0:	ldr	x0, [x20, #608]
     6f4:	cbz	x0, 804 <ctf_serialize+0x2a0>
     6f8:	mov	x25, #0x0                   	// #0
     6fc:	ldr	x0, [x0, #8]
     700:	add	x25, x25, #0x1
     704:	cbnz	x0, 6fc <ctf_serialize+0x198>
     708:	lsl	w0, w25, #3
     70c:	str	w0, [sp, #232]
     710:	add	w22, w0, w22
     714:	str	w22, [sp, #236]
     718:	mov	w22, w22
     71c:	add	x0, x22, #0x34
     720:	str	x0, [sp, #136]
     724:	bl	0 <malloc>
     728:	str	x0, [sp, #120]
     72c:	cbz	x0, 80c <ctf_serialize+0x2a8>
     730:	ldp	x0, x1, [sp, #192]
     734:	ldr	x2, [sp, #120]
     738:	stp	x0, x1, [x2]
     73c:	ldp	x0, x1, [sp, #208]
     740:	stp	x0, x1, [x2, #16]
     744:	ldp	x0, x1, [sp, #224]
     748:	stp	x0, x1, [x2, #32]
     74c:	ldr	w0, [sp, #240]
     750:	str	w0, [x2, #48]
     754:	add	x0, x2, #0x34
     758:	str	x0, [sp, #128]
     75c:	ldr	w0, [x20, #552]
     760:	tbz	w0, #0, 778 <ctf_serialize+0x214>
     764:	ldr	x1, [x20, #528]
     768:	cbz	x1, 778 <ctf_serialize+0x214>
     76c:	add	x2, x2, #0x8
     770:	mov	x0, x20
     774:	bl	0 <ctf_str_add_ref>
     778:	ldr	x1, [x20, #496]
     77c:	cbz	x1, 790 <ctf_serialize+0x22c>
     780:	ldr	x0, [sp, #120]
     784:	add	x2, x0, #0xc
     788:	mov	x0, x20
     78c:	bl	0 <ctf_str_add_ref>
     790:	ldr	x19, [x20, #608]
     794:	cbz	x19, 828 <ctf_serialize+0x2c4>
     798:	ldr	x21, [sp, #128]
     79c:	mov	x22, #0x0                   	// #0
     7a0:	mov	x2, x21
     7a4:	ldr	x1, [x19, #16]
     7a8:	mov	x0, x20
     7ac:	bl	0 <ctf_str_add_ref>
     7b0:	ldr	x0, [x19, #24]
     7b4:	str	w0, [x21, #4]
     7b8:	ldr	x19, [x19, #8]
     7bc:	add	x22, x22, #0x1
     7c0:	add	x21, x21, #0x8
     7c4:	cbnz	x19, 7a0 <ctf_serialize+0x23c>
     7c8:	cmp	x22, x25
     7cc:	b.ne	830 <ctf_serialize+0x2cc>  // b.any
     7d0:	lsl	x0, x25, #3
     7d4:	ldr	x1, [sp, #128]
     7d8:	add	x19, x1, x0
     7dc:	and	x0, x0, #0xffffffff
     7e0:	add	x0, x0, #0x34
     7e4:	ldr	x1, [sp, #120]
     7e8:	add	x0, x1, x0
     7ec:	cmp	x19, x0
     7f0:	b.ne	858 <ctf_serialize+0x2f4>  // b.any
     7f4:	ldr	x22, [x20, #584]
     7f8:	cbz	x22, ad0 <ctf_serialize+0x56c>
     7fc:	stp	x27, x28, [sp, #96]
     800:	b	8d8 <ctf_serialize+0x374>
     804:	mov	x25, #0x0                   	// #0
     808:	b	708 <ctf_serialize+0x1a4>
     80c:	mov	w1, #0xb                   	// #11
     810:	mov	x0, x20
     814:	bl	0 <ctf_set_errno>
     818:	ldp	x21, x22, [sp, #48]
     81c:	ldp	x23, x24, [sp, #64]
     820:	ldp	x25, x26, [sp, #80]
     824:	b	588 <ctf_serialize+0x24>
     828:	mov	x22, #0x0                   	// #0
     82c:	b	7c8 <ctf_serialize+0x264>
     830:	stp	x27, x28, [sp, #96]
     834:	adrp	x3, 0 <clp2>
     838:	add	x3, x3, #0x0
     83c:	add	x3, x3, #0x38
     840:	mov	w2, #0x179                 	// #377
     844:	adrp	x1, 0 <clp2>
     848:	add	x1, x1, #0x0
     84c:	adrp	x0, 0 <clp2>
     850:	add	x0, x0, #0x0
     854:	bl	0 <__assert_fail>
     858:	stp	x27, x28, [sp, #96]
     85c:	adrp	x3, 0 <clp2>
     860:	add	x3, x3, #0x0
     864:	add	x3, x3, #0x38
     868:	mov	w2, #0x17d                 	// #381
     86c:	adrp	x1, 0 <clp2>
     870:	add	x1, x1, #0x0
     874:	adrp	x0, 0 <clp2>
     878:	add	x0, x0, #0x0
     87c:	bl	0 <__assert_fail>
     880:	mov	x0, x20
     884:	bl	0 <ctf_strraw>
     888:	mov	x1, x0
     88c:	cbz	x0, 92c <ctf_serialize+0x3c8>
     890:	mov	x2, x19
     894:	mov	x0, x20
     898:	bl	0 <ctf_str_add_ref>
     89c:	b	92c <ctf_serialize+0x3c8>
     8a0:	sub	w0, w21, #0x1
     8a4:	cmp	w0, #0x1
     8a8:	b.hi	8d0 <ctf_serialize+0x36c>  // b.pmore
     8ac:	cmp	w21, #0x1
     8b0:	b.eq	9ac <ctf_serialize+0x448>  // b.none
     8b4:	ldr	w0, [x22, #48]
     8b8:	ldr	w1, [x22, #52]
     8bc:	lsl	w1, w1, #16
     8c0:	orr	w0, w1, w0, lsl #24
     8c4:	ldr	w1, [x22, #56]
     8c8:	orr	w0, w0, w1
     8cc:	str	w0, [x19], #4
     8d0:	ldr	x22, [x22, #8]
     8d4:	cbz	x22, acc <ctf_serialize+0x568>
     8d8:	ldr	x0, [x20]
     8dc:	ldr	x1, [x0]
     8e0:	ldr	w0, [x22, #28]
     8e4:	blr	x1
     8e8:	mov	w21, w0
     8ec:	ldr	x0, [x20]
     8f0:	ldr	x1, [x0, #16]
     8f4:	ldr	w0, [x22, #28]
     8f8:	blr	x1
     8fc:	mov	w23, w0
     900:	ldr	w0, [x22, #32]
     904:	cmn	w0, #0x1
     908:	mov	x0, #0xc                   	// #12
     90c:	mov	x1, #0x14                  	// #20
     910:	csel	x24, x0, x1, ne  // ne = any
     914:	mov	x2, x24
     918:	add	x1, x22, #0x18
     91c:	mov	x0, x19
     920:	bl	0 <memcpy>
     924:	ldr	w1, [x19]
     928:	cbnz	w1, 880 <ctf_serialize+0x31c>
     92c:	add	x19, x19, x24
     930:	cmp	w21, #0x7
     934:	b.hi	990 <ctf_serialize+0x42c>  // b.pmore
     938:	cmp	w21, #0x5
     93c:	b.hi	9e8 <ctf_serialize+0x484>  // b.pmore
     940:	cmp	w21, #0x4
     944:	b.eq	9c8 <ctf_serialize+0x464>  // b.none
     948:	b.ls	8a0 <ctf_serialize+0x33c>  // b.plast
     94c:	mov	x0, #0x0                   	// #0
     950:	cbz	w23, 8d0 <ctf_serialize+0x36c>
     954:	ldr	x1, [x22, #48]
     958:	ldr	x1, [x1, x0, lsl #3]
     95c:	str	w1, [x19, x0, lsl #2]
     960:	add	x0, x0, #0x1
     964:	cmp	w23, w0
     968:	b.hi	954 <ctf_serialize+0x3f0>  // b.pmore
     96c:	sub	w0, w23, #0x1
     970:	add	x1, x0, #0x1
     974:	add	x1, x19, x1, lsl #2
     978:	lsl	x0, x0, #2
     97c:	tbz	w23, #0, ac4 <ctf_serialize+0x560>
     980:	add	x0, x0, #0x8
     984:	add	x19, x19, x0
     988:	str	wzr, [x1]
     98c:	b	8d0 <ctf_serialize+0x36c>
     990:	cmp	w21, #0x8
     994:	b.eq	a90 <ctf_serialize+0x52c>  // b.none
     998:	cmp	w21, #0xe
     99c:	b.ne	8d0 <ctf_serialize+0x36c>  // b.any
     9a0:	ldr	x0, [x22, #48]
     9a4:	str	x0, [x19], #8
     9a8:	b	8d0 <ctf_serialize+0x36c>
     9ac:	ldr	w0, [x22, #48]
     9b0:	ldr	w1, [x22, #52]
     9b4:	lsl	w1, w1, #16
     9b8:	orr	w0, w1, w0, lsl #24
     9bc:	ldr	w1, [x22, #56]
     9c0:	orr	w0, w0, w1
     9c4:	b	8cc <ctf_serialize+0x368>
     9c8:	ldr	x1, [x22, #56]
     9cc:	ldr	w0, [x22, #64]
     9d0:	ldr	x2, [x22, #48]
     9d4:	str	w2, [x19]
     9d8:	str	w1, [x19, #4]
     9dc:	str	w0, [x19, #8]
     9e0:	add	x19, x19, #0xc
     9e4:	b	8d0 <ctf_serialize+0x36c>
     9e8:	ldr	w0, [x22, #32]
     9ec:	mov	w1, #0x1fffffff            	// #536870911
     9f0:	cmp	w0, w1
     9f4:	b.hi	a3c <ctf_serialize+0x4d8>  // b.pmore
     9f8:	ldr	x21, [x22, #56]
     9fc:	cbnz	x21, a10 <ctf_serialize+0x4ac>
     a00:	b	8d0 <ctf_serialize+0x36c>
     a04:	add	x19, x19, #0xc
     a08:	ldr	x21, [x21, #8]
     a0c:	cbz	x21, 8d0 <ctf_serialize+0x36c>
     a10:	ldr	x0, [x21, #24]
     a14:	ldr	x1, [x21, #32]
     a18:	str	wzr, [x19]
     a1c:	str	w1, [x19, #4]
     a20:	str	w0, [x19, #8]
     a24:	ldr	x1, [x21, #16]
     a28:	cbz	x1, a04 <ctf_serialize+0x4a0>
     a2c:	mov	x2, x19
     a30:	mov	x0, x20
     a34:	bl	0 <ctf_str_add_ref>
     a38:	b	a04 <ctf_serialize+0x4a0>
     a3c:	ldr	x21, [x22, #56]
     a40:	cbnz	x21, a54 <ctf_serialize+0x4f0>
     a44:	b	8d0 <ctf_serialize+0x36c>
     a48:	add	x19, x19, #0x10
     a4c:	ldr	x21, [x21, #8]
     a50:	cbz	x21, 8d0 <ctf_serialize+0x36c>
     a54:	and	x26, x26, #0xffffffff00000000
     a58:	ldr	x0, [x21, #24]
     a5c:	bfxil	x28, x0, #0, #32
     a60:	ldr	x0, [x21, #32]
     a64:	lsr	x1, x0, #32
     a68:	bfi	x26, x1, #32, #32
     a6c:	bfi	x28, x0, #32, #32
     a70:	str	x26, [x19]
     a74:	str	x28, [x19, #8]
     a78:	ldr	x1, [x21, #16]
     a7c:	cbz	x1, a48 <ctf_serialize+0x4e4>
     a80:	mov	x2, x19
     a84:	mov	x0, x20
     a88:	bl	0 <ctf_str_add_ref>
     a8c:	b	a48 <ctf_serialize+0x4e4>
     a90:	ldr	x21, [x22, #56]
     a94:	cbz	x21, 8d0 <ctf_serialize+0x36c>
     a98:	ldr	w0, [x21, #40]
     a9c:	bfi	x27, x0, #32, #32
     aa0:	str	x27, [x19]
     aa4:	mov	x2, x19
     aa8:	ldr	x1, [x21, #16]
     aac:	mov	x0, x20
     ab0:	bl	0 <ctf_str_add_ref>
     ab4:	add	x19, x19, #0x8
     ab8:	ldr	x21, [x21, #8]
     abc:	cbnz	x21, a98 <ctf_serialize+0x534>
     ac0:	b	8d0 <ctf_serialize+0x36c>
     ac4:	mov	x19, x1
     ac8:	b	8d0 <ctf_serialize+0x36c>
     acc:	ldp	x27, x28, [sp, #96]
     ad0:	ldr	x0, [sp, #120]
     ad4:	ldr	x1, [sp, #136]
     ad8:	add	x0, x0, x1
     adc:	cmp	x19, x0
     ae0:	b.ne	da0 <ctf_serialize+0x83c>  // b.any
     ae4:	mov	x0, x20
     ae8:	bl	0 <ctf_str_write_strtab>
     aec:	stp	x0, x1, [sp, #176]
     af0:	mov	x0, x20
     af4:	bl	0 <ctf_str_purge_refs>
     af8:	ldr	x0, [sp, #176]
     afc:	cbz	x0, dc8 <ctf_serialize+0x864>
     b00:	str	x20, [sp, #152]
     b04:	add	x0, sp, #0xb0
     b08:	str	x0, [sp, #160]
     b0c:	add	x4, sp, #0x98
     b10:	adrp	x3, 0 <clp2>
     b14:	add	x3, x3, #0x0
     b18:	mov	x2, #0x8                   	// #8
     b1c:	mov	x1, x25
     b20:	ldr	x0, [sp, #128]
     b24:	bl	0 <qsort_r>
     b28:	ldr	x2, [sp, #184]
     b2c:	ldr	x0, [sp, #136]
     b30:	add	x2, x0, x2
     b34:	ldr	x1, [sp, #120]
     b38:	mov	x0, x20
     b3c:	bl	0 <ctf_realloc>
     b40:	mov	x21, x0
     b44:	cbz	x0, dec <ctf_serialize+0x888>
     b48:	ldr	x2, [sp, #184]
     b4c:	ldr	x1, [sp, #176]
     b50:	ldr	x22, [sp, #136]
     b54:	add	x0, x0, x22
     b58:	bl	0 <memcpy>
     b5c:	ldr	x19, [sp, #184]
     b60:	str	w19, [x21, #48]
     b64:	ldr	x0, [sp, #176]
     b68:	bl	0 <free>
     b6c:	add	x0, sp, #0xac
     b70:	str	x0, [sp, #8]
     b74:	mov	w0, #0x1                   	// #1
     b78:	str	w0, [sp]
     b7c:	ldr	x7, [x20, #128]
     b80:	mov	x6, #0x0                   	// #0
     b84:	mov	x5, #0x0                   	// #0
     b88:	mov	x4, #0x0                   	// #0
     b8c:	mov	x3, #0x0                   	// #0
     b90:	mov	x2, #0x0                   	// #0
     b94:	add	x1, x22, w19, uxtw
     b98:	mov	x0, x21
     b9c:	bl	0 <ctf_simple_open_internal>
     ba0:	mov	x19, x0
     ba4:	cbz	x0, e18 <ctf_serialize+0x8b4>
     ba8:	mov	x0, x20
     bac:	bl	0 <ctf_getmodel>
     bb0:	mov	w1, w0
     bb4:	mov	x0, x19
     bb8:	bl	0 <ctf_setmodel>
     bbc:	ldr	x1, [x20, #512]
     bc0:	mov	x0, x19
     bc4:	bl	0 <ctf_import>
     bc8:	ldr	w0, [x20, #548]
     bcc:	str	w0, [x19, #548]
     bd0:	ldr	w0, [x20, #552]
     bd4:	and	w1, w0, #0xfffffffb
     bd8:	ldr	w0, [x19, #552]
     bdc:	orr	w0, w0, w1
     be0:	str	w0, [x19, #552]
     be4:	ldr	x0, [x19, #400]
     be8:	cbz	x0, e3c <ctf_serialize+0x8d8>
     bec:	ldr	x0, [x20, #568]
     bf0:	str	x0, [x19, #568]
     bf4:	add	x0, x19, #0x200
     bf8:	add	x1, x20, #0x200
     bfc:	ldp	x2, x3, [x1, #64]
     c00:	stp	x2, x3, [x0, #64]
     c04:	ldr	x2, [x20, #592]
     c08:	str	x2, [x19, #592]
     c0c:	ldp	x2, x3, [x1, #88]
     c10:	stp	x2, x3, [x0, #88]
     c14:	ldr	x0, [x20, #616]
     c18:	str	x0, [x19, #616]
     c1c:	ldr	x0, [x20, #696]
     c20:	str	x0, [x19, #696]
     c24:	ldr	x0, [x20, #624]
     c28:	add	x0, x0, #0x1
     c2c:	str	x0, [x19, #624]
     c30:	ldr	x0, [x20, #720]
     c34:	str	x0, [x19, #720]
     c38:	ldr	x0, [x20, #448]
     c3c:	str	x0, [x19, #448]
     c40:	ldr	x0, [x20, #456]
     c44:	str	x0, [x19, #456]
     c48:	ldr	x0, [x20, #648]
     c4c:	str	x0, [x19, #648]
     c50:	ldr	x0, [x20, #656]
     c54:	str	x0, [x19, #656]
     c58:	ldr	w0, [x20, #384]
     c5c:	str	w0, [x19, #384]
     c60:	ldr	x0, [x20, #128]
     c64:	str	x0, [x19, #128]
     c68:	ldr	x0, [x20, #672]
     c6c:	str	x0, [x19, #672]
     c70:	ldr	x0, [x20, #664]
     c74:	str	x0, [x19, #664]
     c78:	ldr	x0, [x20, #680]
     c7c:	str	x0, [x19, #680]
     c80:	ldr	x0, [x20, #688]
     c84:	str	x0, [x19, #688]
     c88:	ldr	x0, [x20, #624]
     c8c:	str	x0, [x19, #632]
     c90:	add	x21, x20, #0xd8
     c94:	mov	x2, #0x78                  	// #120
     c98:	mov	x1, x21
     c9c:	add	x0, x19, #0xd8
     ca0:	bl	0 <memcpy>
     ca4:	ldp	x0, x1, [x20, #152]
     ca8:	stp	x0, x1, [x19, #152]
     cac:	ldp	x0, x1, [x20, #168]
     cb0:	stp	x0, x1, [x19, #168]
     cb4:	ldp	x0, x1, [x20, #184]
     cb8:	stp	x0, x1, [x19, #184]
     cbc:	ldp	x0, x1, [x20, #200]
     cc0:	stp	x0, x1, [x19, #200]
     cc4:	str	xzr, [x20, #568]
     cc8:	mov	x0, x19
     ccc:	bl	0 <ctf_str_free_atoms>
     cd0:	ldr	x0, [x20, #368]
     cd4:	str	x0, [x19, #368]
     cd8:	ldr	x0, [x20, #120]
     cdc:	str	x0, [x19, #120]
     ce0:	str	xzr, [x20, #368]
     ce4:	str	xzr, [x20, #120]
     ce8:	add	x0, x20, #0x240
     cec:	stp	xzr, xzr, [x0]
     cf0:	str	xzr, [x20, #696]
     cf4:	str	xzr, [x20, #448]
     cf8:	str	xzr, [x20, #648]
     cfc:	str	xzr, [x20, #656]
     d00:	str	xzr, [x20, #128]
     d04:	str	xzr, [x20, #672]
     d08:	str	xzr, [x20, #664]
     d0c:	str	xzr, [x20, #592]
     d10:	add	x0, x20, #0x258
     d14:	stp	xzr, xzr, [x0]
     d18:	stp	xzr, xzr, [x20, #216]
     d1c:	stp	xzr, xzr, [x20, #232]
     d20:	stp	xzr, xzr, [x20, #248]
     d24:	stp	xzr, xzr, [x21, #48]
     d28:	stp	xzr, xzr, [x21, #64]
     d2c:	stp	xzr, xzr, [x21, #80]
     d30:	stp	xzr, xzr, [x21, #96]
     d34:	str	xzr, [x20, #328]
     d38:	str	xzr, [x20, #160]
     d3c:	str	xzr, [x20, #176]
     d40:	str	xzr, [x20, #192]
     d44:	str	xzr, [x20, #208]
     d48:	mov	x21, #0x2d8                 	// #728
     d4c:	mov	x2, x21
     d50:	mov	x1, x20
     d54:	add	x0, sp, #0xf8
     d58:	bl	0 <memcpy>
     d5c:	mov	x2, x21
     d60:	mov	x1, x19
     d64:	mov	x0, x20
     d68:	bl	0 <memcpy>
     d6c:	mov	x2, x21
     d70:	add	x1, sp, #0xf8
     d74:	mov	x0, x19
     d78:	bl	0 <memcpy>
     d7c:	mov	w0, #0x1                   	// #1
     d80:	str	w0, [x19, #548]
     d84:	mov	x0, x19
     d88:	bl	0 <ctf_file_close>
     d8c:	mov	w0, #0x0                   	// #0
     d90:	ldp	x21, x22, [sp, #48]
     d94:	ldp	x23, x24, [sp, #64]
     d98:	ldp	x25, x26, [sp, #80]
     d9c:	b	588 <ctf_serialize+0x24>
     da0:	stp	x27, x28, [sp, #96]
     da4:	adrp	x3, 0 <clp2>
     da8:	add	x3, x3, #0x0
     dac:	add	x3, x3, #0x38
     db0:	mov	w2, #0x1d8                 	// #472
     db4:	adrp	x1, 0 <clp2>
     db8:	add	x1, x1, #0x0
     dbc:	adrp	x0, 0 <clp2>
     dc0:	add	x0, x0, #0x0
     dc4:	bl	0 <__assert_fail>
     dc8:	ldr	x0, [sp, #120]
     dcc:	bl	0 <free>
     dd0:	mov	w1, #0xb                   	// #11
     dd4:	mov	x0, x20
     dd8:	bl	0 <ctf_set_errno>
     ddc:	ldp	x21, x22, [sp, #48]
     de0:	ldp	x23, x24, [sp, #64]
     de4:	ldp	x25, x26, [sp, #80]
     de8:	b	588 <ctf_serialize+0x24>
     dec:	ldr	x0, [sp, #120]
     df0:	bl	0 <free>
     df4:	ldr	x0, [sp, #176]
     df8:	bl	0 <free>
     dfc:	mov	w1, #0xb                   	// #11
     e00:	mov	x0, x20
     e04:	bl	0 <ctf_set_errno>
     e08:	ldp	x21, x22, [sp, #48]
     e0c:	ldp	x23, x24, [sp, #64]
     e10:	ldp	x25, x26, [sp, #80]
     e14:	b	588 <ctf_serialize+0x24>
     e18:	mov	x0, x21
     e1c:	bl	0 <free>
     e20:	ldr	w1, [sp, #172]
     e24:	mov	x0, x20
     e28:	bl	0 <ctf_set_errno>
     e2c:	ldp	x21, x22, [sp, #48]
     e30:	ldp	x23, x24, [sp, #64]
     e34:	ldp	x25, x26, [sp, #80]
     e38:	b	588 <ctf_serialize+0x24>
     e3c:	str	x21, [x19, #400]
     e40:	b	bec <ctf_serialize+0x688>

0000000000000e44 <ctf_name_table>:
     e44:	mov	x2, x0
     e48:	add	x0, x0, #0xa8
     e4c:	cmp	w1, #0x7
     e50:	b.eq	e70 <ctf_name_table+0x2c>  // b.none
     e54:	add	x0, x2, #0xb8
     e58:	cmp	w1, #0x8
     e5c:	b.eq	e70 <ctf_name_table+0x2c>  // b.none
     e60:	add	x0, x2, #0x98
     e64:	add	x2, x2, #0xc8
     e68:	cmp	w1, #0x6
     e6c:	csel	x0, x2, x0, ne  // ne = any
     e70:	ret

0000000000000e74 <ctf_dtd_insert>:
     e74:	stp	x29, x30, [sp, #-48]!
     e78:	mov	x29, sp
     e7c:	stp	x19, x20, [sp, #16]
     e80:	stp	x21, x22, [sp, #32]
     e84:	mov	x20, x0
     e88:	mov	x19, x1
     e8c:	mov	w21, w2
     e90:	mov	x2, x1
     e94:	ldr	x1, [x1, #16]
     e98:	ldr	x0, [x0, #568]
     e9c:	bl	0 <ctf_dynhash_insert>
     ea0:	tbnz	w0, #31, f10 <ctf_dtd_insert+0x9c>
     ea4:	ldr	w1, [x19, #24]
     ea8:	cbz	w1, edc <ctf_dtd_insert+0x68>
     eac:	mov	x0, x20
     eb0:	bl	0 <ctf_strraw>
     eb4:	mov	x22, x0
     eb8:	cbz	x0, edc <ctf_dtd_insert+0x68>
     ebc:	mov	w1, w21
     ec0:	mov	x0, x20
     ec4:	bl	e44 <ctf_name_table>
     ec8:	ldr	x2, [x19, #16]
     ecc:	mov	x1, x22
     ed0:	ldr	x0, [x0, #8]
     ed4:	bl	0 <ctf_dynhash_insert>
     ed8:	tbnz	w0, #31, efc <ctf_dtd_insert+0x88>
     edc:	mov	x1, x19
     ee0:	add	x0, x20, #0x240
     ee4:	bl	0 <ctf_list_append>
     ee8:	mov	w0, #0x0                   	// #0
     eec:	ldp	x19, x20, [sp, #16]
     ef0:	ldp	x21, x22, [sp, #32]
     ef4:	ldp	x29, x30, [sp], #48
     ef8:	ret
     efc:	ldr	x1, [x19, #16]
     f00:	ldr	x0, [x20, #568]
     f04:	bl	0 <ctf_dynhash_remove>
     f08:	mov	w0, #0xffffffff            	// #-1
     f0c:	b	eec <ctf_dtd_insert+0x78>
     f10:	mov	w0, #0xffffffff            	// #-1
     f14:	b	eec <ctf_dtd_insert+0x78>

0000000000000f18 <ctf_add_generic>:
     f18:	stp	x29, x30, [sp, #-64]!
     f1c:	mov	x29, sp
     f20:	stp	x19, x20, [sp, #16]
     f24:	mov	x19, x0
     f28:	cmp	w1, #0x1
     f2c:	b.hi	101c <ctf_add_generic+0x104>  // b.pmore
     f30:	stp	x21, x22, [sp, #32]
     f34:	stp	x23, x24, [sp, #48]
     f38:	mov	x22, x2
     f3c:	mov	w23, w3
     f40:	mov	x24, x4
     f44:	ldr	w0, [x0, #552]
     f48:	tbz	w0, #1, 1038 <ctf_add_generic+0x120>
     f4c:	ldr	w0, [x19, #544]
     f50:	add	w0, w0, #0x1
     f54:	ldr	x1, [x19, #480]
     f58:	orr	x0, x0, x1
     f5c:	mov	w1, #0xfffffffd            	// #-3
     f60:	cmp	x0, x1
     f64:	b.hi	1054 <ctf_add_generic+0x13c>  // b.pmore
     f68:	mov	x1, #0x7ffffffe            	// #2147483646
     f6c:	cmp	x0, x1
     f70:	b.eq	1070 <ctf_add_generic+0x158>  // b.none
     f74:	mov	x0, x19
     f78:	bl	20 <ctf_grow_ptrtab>
     f7c:	mov	x20, #0xffffffffffffffff    	// #-1
     f80:	tbnz	w0, #31, 10ec <ctf_add_generic+0x1d4>
     f84:	mov	x0, #0x48                  	// #72
     f88:	bl	0 <malloc>
     f8c:	mov	x21, x0
     f90:	cbz	x0, 108c <ctf_add_generic+0x174>
     f94:	ldr	x0, [x19, #480]
     f98:	add	x20, x0, #0x1
     f9c:	str	x20, [x19, #480]
     fa0:	ldr	w0, [x19, #552]
     fa4:	tbz	w0, #0, fb4 <ctf_add_generic+0x9c>
     fa8:	ldr	w0, [x19, #544]
     fac:	add	w0, w0, #0x1
     fb0:	orr	x20, x20, x0
     fb4:	stp	xzr, xzr, [x21]
     fb8:	stp	xzr, xzr, [x21, #16]
     fbc:	stp	xzr, xzr, [x21, #32]
     fc0:	stp	xzr, xzr, [x21, #48]
     fc4:	str	xzr, [x21, #64]
     fc8:	add	x2, x21, #0x18
     fcc:	mov	x1, x22
     fd0:	mov	x0, x19
     fd4:	bl	0 <ctf_str_add_ref>
     fd8:	str	w0, [x21, #24]
     fdc:	str	x20, [x21, #16]
     fe0:	cmp	x22, #0x0
     fe4:	ccmp	w0, #0x0, #0x0, ne  // ne = any
     fe8:	b.eq	10a8 <ctf_add_generic+0x190>  // b.none
     fec:	mov	w2, w23
     ff0:	mov	x1, x21
     ff4:	mov	x0, x19
     ff8:	bl	e74 <ctf_dtd_insert>
     ffc:	tbnz	w0, #31, 10d4 <ctf_add_generic+0x1bc>
    1000:	ldr	w0, [x19, #552]
    1004:	orr	w0, w0, #0x4
    1008:	str	w0, [x19, #552]
    100c:	str	x21, [x24]
    1010:	ldp	x21, x22, [sp, #32]
    1014:	ldp	x23, x24, [sp, #48]
    1018:	b	1028 <ctf_add_generic+0x110>
    101c:	mov	w1, #0x16                  	// #22
    1020:	bl	0 <ctf_set_errno>
    1024:	mov	x20, x0
    1028:	mov	x0, x20
    102c:	ldp	x19, x20, [sp, #16]
    1030:	ldp	x29, x30, [sp], #64
    1034:	ret
    1038:	mov	w1, #0x40d                 	// #1037
    103c:	mov	x0, x19
    1040:	bl	0 <ctf_set_errno>
    1044:	mov	x20, x0
    1048:	ldp	x21, x22, [sp, #32]
    104c:	ldp	x23, x24, [sp, #48]
    1050:	b	1028 <ctf_add_generic+0x110>
    1054:	mov	w1, #0x40f                 	// #1039
    1058:	mov	x0, x19
    105c:	bl	0 <ctf_set_errno>
    1060:	mov	x20, x0
    1064:	ldp	x21, x22, [sp, #32]
    1068:	ldp	x23, x24, [sp, #48]
    106c:	b	1028 <ctf_add_generic+0x110>
    1070:	mov	w1, #0x40f                 	// #1039
    1074:	mov	x0, x19
    1078:	bl	0 <ctf_set_errno>
    107c:	mov	x20, x0
    1080:	ldp	x21, x22, [sp, #32]
    1084:	ldp	x23, x24, [sp, #48]
    1088:	b	1028 <ctf_add_generic+0x110>
    108c:	mov	w1, #0xb                   	// #11
    1090:	mov	x0, x19
    1094:	bl	0 <ctf_set_errno>
    1098:	mov	x20, x0
    109c:	ldp	x21, x22, [sp, #32]
    10a0:	ldp	x23, x24, [sp, #48]
    10a4:	b	1028 <ctf_add_generic+0x110>
    10a8:	ldrb	w0, [x22]
    10ac:	cbz	w0, fec <ctf_add_generic+0xd4>
    10b0:	mov	x0, x21
    10b4:	bl	0 <free>
    10b8:	mov	w1, #0xb                   	// #11
    10bc:	mov	x0, x19
    10c0:	bl	0 <ctf_set_errno>
    10c4:	mov	x20, x0
    10c8:	ldp	x21, x22, [sp, #32]
    10cc:	ldp	x23, x24, [sp, #48]
    10d0:	b	1028 <ctf_add_generic+0x110>
    10d4:	mov	x0, x21
    10d8:	bl	0 <free>
    10dc:	mov	x20, #0xffffffffffffffff    	// #-1
    10e0:	ldp	x21, x22, [sp, #32]
    10e4:	ldp	x23, x24, [sp, #48]
    10e8:	b	1028 <ctf_add_generic+0x110>
    10ec:	ldp	x21, x22, [sp, #32]
    10f0:	ldp	x23, x24, [sp, #48]
    10f4:	b	1028 <ctf_add_generic+0x110>

00000000000010f8 <ctf_add_encoded>:
    10f8:	stp	x29, x30, [sp, #-80]!
    10fc:	mov	x29, sp
    1100:	stp	x21, x22, [sp, #32]
    1104:	cbz	x3, 1190 <ctf_add_encoded+0x98>
    1108:	stp	x19, x20, [sp, #16]
    110c:	mov	w19, w1
    1110:	mov	x20, x3
    1114:	mov	w21, w4
    1118:	add	x4, sp, #0x48
    111c:	mov	w3, w21
    1120:	bl	f18 <ctf_add_generic>
    1124:	mov	x22, x0
    1128:	cmn	x0, #0x1
    112c:	b.eq	11a0 <ctf_add_encoded+0xa8>  // b.none
    1130:	str	x23, [sp, #48]
    1134:	cmp	w19, #0x0
    1138:	mov	w0, #0x2000000             	// #33554432
    113c:	csel	w19, w19, w0, eq  // eq = none
    1140:	ldr	x23, [sp, #72]
    1144:	orr	w19, w19, w21, lsl #26
    1148:	str	w19, [x23, #28]
    114c:	ldr	w1, [x20, #8]
    1150:	neg	w1, w1
    1154:	and	w1, w1, #0xfffffff8
    1158:	neg	w1, w1
    115c:	lsr	w0, w1, #3
    1160:	bl	0 <clp2>
    1164:	str	w0, [x23, #32]
    1168:	ldr	x0, [x20]
    116c:	str	x0, [x23, #48]
    1170:	ldr	w0, [x20, #8]
    1174:	str	w0, [x23, #56]
    1178:	ldp	x19, x20, [sp, #16]
    117c:	ldr	x23, [sp, #48]
    1180:	mov	x0, x22
    1184:	ldp	x21, x22, [sp, #32]
    1188:	ldp	x29, x30, [sp], #80
    118c:	ret
    1190:	mov	w1, #0x16                  	// #22
    1194:	bl	0 <ctf_set_errno>
    1198:	mov	x22, x0
    119c:	b	1180 <ctf_add_encoded+0x88>
    11a0:	ldp	x19, x20, [sp, #16]
    11a4:	b	1180 <ctf_add_encoded+0x88>

00000000000011a8 <ctf_add_reftype>:
    11a8:	stp	x29, x30, [sp, #-80]!
    11ac:	mov	x29, sp
    11b0:	stp	x19, x20, [sp, #16]
    11b4:	stp	x21, x22, [sp, #32]
    11b8:	mov	x22, x0
    11bc:	mov	w20, w3
    11c0:	str	x0, [sp, #64]
    11c4:	mov	x3, #0xfffffffe            	// #4294967294
    11c8:	cmp	x2, x3
    11cc:	b.hi	1258 <ctf_add_reftype+0xb0>  // b.pmore
    11d0:	stp	x23, x24, [sp, #48]
    11d4:	mov	w19, w1
    11d8:	mov	x23, x2
    11dc:	ldr	w24, [x0, #552]
    11e0:	mov	x1, x2
    11e4:	add	x0, sp, #0x40
    11e8:	bl	0 <ctf_lookup_by_id>
    11ec:	cbz	x0, 130c <ctf_add_reftype+0x164>
    11f0:	add	x4, sp, #0x48
    11f4:	mov	w3, w20
    11f8:	mov	x2, #0x0                   	// #0
    11fc:	mov	w1, w19
    1200:	mov	x0, x22
    1204:	bl	f18 <ctf_add_generic>
    1208:	mov	x21, x0
    120c:	cmn	x0, #0x1
    1210:	b.eq	1318 <ctf_add_reftype+0x170>  // b.none
    1214:	cmp	w19, #0x0
    1218:	mov	w0, #0x2000000             	// #33554432
    121c:	csel	w19, w19, w0, eq  // eq = none
    1220:	ldr	x0, [sp, #72]
    1224:	orr	w19, w19, w20, lsl #26
    1228:	str	w19, [x0, #28]
    122c:	str	w23, [x0, #32]
    1230:	cmp	w20, #0x3
    1234:	b.ne	1320 <ctf_add_reftype+0x178>  // b.any
    1238:	ldr	w2, [x22, #544]
    123c:	cmp	x23, w2, uxtw
    1240:	cset	w1, hi  // hi = pmore
    1244:	and	w0, w24, #0x1
    1248:	cmp	w1, w0
    124c:	b.eq	1278 <ctf_add_reftype+0xd0>  // b.none
    1250:	ldp	x23, x24, [sp, #48]
    1254:	b	1264 <ctf_add_reftype+0xbc>
    1258:	mov	w1, #0x16                  	// #22
    125c:	bl	0 <ctf_set_errno>
    1260:	mov	x21, x0
    1264:	mov	x0, x21
    1268:	ldp	x19, x20, [sp, #16]
    126c:	ldp	x21, x22, [sp, #32]
    1270:	ldp	x29, x30, [sp], #80
    1274:	ret
    1278:	and	w1, w2, w23
    127c:	ldr	x0, [x22, #480]
    1280:	cmp	x1, x0
    1284:	b.cs	1328 <ctf_add_reftype+0x180>  // b.hs, b.nlast
    1288:	and	w19, w2, w21
    128c:	ldr	x0, [x22, #448]
    1290:	str	w19, [x0, x1, lsl #2]
    1294:	ldr	x0, [sp, #64]
    1298:	cmp	x0, x22
    129c:	b.eq	12a8 <ctf_add_reftype+0x100>  // b.none
    12a0:	ldp	x23, x24, [sp, #48]
    12a4:	b	1264 <ctf_add_reftype+0xbc>
    12a8:	ldr	x0, [sp, #72]
    12ac:	ldr	w20, [x0, #32]
    12b0:	ldr	w23, [x22, #544]
    12b4:	ldr	x1, [x22]
    12b8:	ldr	x1, [x1]
    12bc:	ldr	w0, [x0, #28]
    12c0:	blr	x1
    12c4:	cmp	w0, #0xa
    12c8:	b.eq	12d4 <ctf_add_reftype+0x12c>  // b.none
    12cc:	ldp	x23, x24, [sp, #48]
    12d0:	b	1264 <ctf_add_reftype+0xbc>
    12d4:	ldr	x0, [sp, #72]
    12d8:	ldr	w1, [x0, #24]
    12dc:	mov	x0, x22
    12e0:	bl	0 <ctf_strptr>
    12e4:	ldrb	w0, [x0]
    12e8:	cbnz	w0, 1330 <ctf_add_reftype+0x188>
    12ec:	and	w20, w20, w23
    12f0:	ldr	x0, [x22, #480]
    12f4:	cmp	x0, x20
    12f8:	b.ls	1338 <ctf_add_reftype+0x190>  // b.plast
    12fc:	ldr	x0, [x22, #448]
    1300:	str	w19, [x0, x20, lsl #2]
    1304:	ldp	x23, x24, [sp, #48]
    1308:	b	1264 <ctf_add_reftype+0xbc>
    130c:	mov	x21, #0xffffffffffffffff    	// #-1
    1310:	ldp	x23, x24, [sp, #48]
    1314:	b	1264 <ctf_add_reftype+0xbc>
    1318:	ldp	x23, x24, [sp, #48]
    131c:	b	1264 <ctf_add_reftype+0xbc>
    1320:	ldp	x23, x24, [sp, #48]
    1324:	b	1264 <ctf_add_reftype+0xbc>
    1328:	ldp	x23, x24, [sp, #48]
    132c:	b	1264 <ctf_add_reftype+0xbc>
    1330:	ldp	x23, x24, [sp, #48]
    1334:	b	1264 <ctf_add_reftype+0xbc>
    1338:	ldp	x23, x24, [sp, #48]
    133c:	b	1264 <ctf_add_reftype+0xbc>

0000000000001340 <ctf_dtd_delete>:
    1340:	stp	x29, x30, [sp, #-64]!
    1344:	mov	x29, sp
    1348:	stp	x19, x20, [sp, #16]
    134c:	stp	x21, x22, [sp, #32]
    1350:	str	x23, [sp, #48]
    1354:	mov	x22, x0
    1358:	mov	x20, x1
    135c:	ldr	x0, [x0]
    1360:	ldr	x1, [x0]
    1364:	ldr	w0, [x20, #28]
    1368:	blr	x1
    136c:	mov	w23, w0
    1370:	ldr	x1, [x20, #16]
    1374:	ldr	x0, [x22, #568]
    1378:	bl	0 <ctf_dynhash_remove>
    137c:	cmp	w23, #0x5
    1380:	b.eq	13c0 <ctf_dtd_delete+0x80>  // b.none
    1384:	sub	w0, w23, #0x6
    1388:	cmp	w0, #0x2
    138c:	b.hi	13c8 <ctf_dtd_delete+0x88>  // b.pmore
    1390:	ldr	x19, [x20, #56]
    1394:	cbnz	x19, 13b4 <ctf_dtd_delete+0x74>
    1398:	b	13c8 <ctf_dtd_delete+0x88>
    139c:	bl	0 <free>
    13a0:	ldr	x21, [x19, #8]
    13a4:	mov	x0, x19
    13a8:	bl	0 <free>
    13ac:	cbz	x21, 13c8 <ctf_dtd_delete+0x88>
    13b0:	mov	x19, x21
    13b4:	ldr	x0, [x19, #16]
    13b8:	cbnz	x0, 139c <ctf_dtd_delete+0x5c>
    13bc:	b	13a0 <ctf_dtd_delete+0x60>
    13c0:	ldr	x0, [x20, #48]
    13c4:	bl	0 <free>
    13c8:	ldr	w1, [x20, #24]
    13cc:	cbnz	w1, 13f8 <ctf_dtd_delete+0xb8>
    13d0:	mov	x1, x20
    13d4:	add	x0, x22, #0x240
    13d8:	bl	0 <ctf_list_delete>
    13dc:	mov	x0, x20
    13e0:	bl	0 <free>
    13e4:	ldp	x19, x20, [sp, #16]
    13e8:	ldp	x21, x22, [sp, #32]
    13ec:	ldr	x23, [sp, #48]
    13f0:	ldp	x29, x30, [sp], #64
    13f4:	ret
    13f8:	mov	x0, x22
    13fc:	bl	0 <ctf_strraw>
    1400:	mov	x19, x0
    1404:	cbz	x0, 13d0 <ctf_dtd_delete+0x90>
    1408:	mov	w1, w23
    140c:	mov	x0, x22
    1410:	bl	e44 <ctf_name_table>
    1414:	mov	x1, x19
    1418:	ldr	x0, [x0, #8]
    141c:	bl	0 <ctf_dynhash_remove>
    1420:	add	x2, x20, #0x18
    1424:	mov	x1, x19
    1428:	mov	x0, x22
    142c:	bl	0 <ctf_str_remove_ref>
    1430:	b	13d0 <ctf_dtd_delete+0x90>

0000000000001434 <ctf_dtd_lookup>:
    1434:	stp	x29, x30, [sp, #-16]!
    1438:	mov	x29, sp
    143c:	ldr	x0, [x0, #568]
    1440:	bl	0 <ctf_dynhash_lookup>
    1444:	ldp	x29, x30, [sp], #16
    1448:	ret

000000000000144c <ctf_dynamic_type>:
    144c:	mov	x2, x0
    1450:	ldr	w0, [x0, #552]
    1454:	tbz	w0, #1, 14a0 <ctf_dynamic_type+0x54>
    1458:	tbz	w0, #0, 146c <ctf_dynamic_type+0x20>
    145c:	ldr	w0, [x2, #544]
    1460:	cmp	x0, x1
    1464:	b.cc	146c <ctf_dynamic_type+0x20>  // b.lo, b.ul, b.last
    1468:	ldr	x2, [x2, #512]
    146c:	ldr	w3, [x2, #544]
    1470:	and	x3, x3, x1
    1474:	ldr	x4, [x2, #480]
    1478:	mov	x0, #0x0                   	// #0
    147c:	cmp	x4, x3
    1480:	b.cs	1488 <ctf_dynamic_type+0x3c>  // b.hs, b.nlast
    1484:	ret
    1488:	stp	x29, x30, [sp, #-16]!
    148c:	mov	x29, sp
    1490:	mov	x0, x2
    1494:	bl	1434 <ctf_dtd_lookup>
    1498:	ldp	x29, x30, [sp], #16
    149c:	ret
    14a0:	mov	x0, #0x0                   	// #0
    14a4:	ret

00000000000014a8 <ctf_dvd_insert>:
    14a8:	stp	x29, x30, [sp, #-32]!
    14ac:	mov	x29, sp
    14b0:	stp	x19, x20, [sp, #16]
    14b4:	mov	x20, x0
    14b8:	mov	x19, x1
    14bc:	mov	x2, x1
    14c0:	ldr	x1, [x1, #16]
    14c4:	ldr	x0, [x0, #592]
    14c8:	bl	0 <ctf_dynhash_insert>
    14cc:	tbnz	w0, #31, 14ec <ctf_dvd_insert+0x44>
    14d0:	mov	x1, x19
    14d4:	add	x0, x20, #0x258
    14d8:	bl	0 <ctf_list_append>
    14dc:	mov	w0, #0x0                   	// #0
    14e0:	ldp	x19, x20, [sp, #16]
    14e4:	ldp	x29, x30, [sp], #32
    14e8:	ret
    14ec:	mov	w0, #0xffffffff            	// #-1
    14f0:	b	14e0 <ctf_dvd_insert+0x38>

00000000000014f4 <ctf_dvd_delete>:
    14f4:	stp	x29, x30, [sp, #-32]!
    14f8:	mov	x29, sp
    14fc:	stp	x19, x20, [sp, #16]
    1500:	mov	x20, x0
    1504:	mov	x19, x1
    1508:	ldr	x1, [x1, #16]
    150c:	ldr	x0, [x0, #592]
    1510:	bl	0 <ctf_dynhash_remove>
    1514:	ldr	x0, [x19, #16]
    1518:	bl	0 <free>
    151c:	mov	x1, x19
    1520:	add	x0, x20, #0x258
    1524:	bl	0 <ctf_list_delete>
    1528:	mov	x0, x19
    152c:	bl	0 <free>
    1530:	ldp	x19, x20, [sp, #16]
    1534:	ldp	x29, x30, [sp], #32
    1538:	ret

000000000000153c <ctf_dvd_lookup>:
    153c:	stp	x29, x30, [sp, #-16]!
    1540:	mov	x29, sp
    1544:	ldr	x0, [x0, #592]
    1548:	bl	0 <ctf_dynhash_lookup>
    154c:	ldp	x29, x30, [sp], #16
    1550:	ret

0000000000001554 <ctf_snapshot>:
    1554:	ldr	x1, [x0, #624]
    1558:	add	x2, x1, #0x1
    155c:	str	x2, [x0, #624]
    1560:	ldr	x0, [x0, #480]
    1564:	ret

0000000000001568 <ctf_rollback>:
    1568:	stp	x29, x30, [sp, #-96]!
    156c:	mov	x29, sp
    1570:	stp	x19, x20, [sp, #16]
    1574:	mov	x19, x0
    1578:	ldr	w0, [x0, #552]
    157c:	tbz	w0, #1, 15b8 <ctf_rollback+0x50>
    1580:	stp	x21, x22, [sp, #32]
    1584:	stp	x23, x24, [sp, #48]
    1588:	mov	x24, x1
    158c:	mov	x23, x2
    1590:	mov	x22, x2
    1594:	ldr	x0, [x19, #632]
    1598:	cmp	x0, x2
    159c:	b.cs	15c8 <ctf_rollback+0x60>  // b.hs, b.nlast
    15a0:	stp	x25, x26, [sp, #64]
    15a4:	mov	x25, x1
    15a8:	ldr	x21, [x19, #584]
    15ac:	cbz	x21, 1674 <ctf_rollback+0x10c>
    15b0:	str	x27, [sp, #80]
    15b4:	b	15fc <ctf_rollback+0x94>
    15b8:	mov	w1, #0x40d                 	// #1037
    15bc:	mov	x0, x19
    15c0:	bl	0 <ctf_set_errno>
    15c4:	b	16a0 <ctf_rollback+0x138>
    15c8:	mov	w1, #0x412                 	// #1042
    15cc:	mov	x0, x19
    15d0:	bl	0 <ctf_set_errno>
    15d4:	ldp	x21, x22, [sp, #32]
    15d8:	ldp	x23, x24, [sp, #48]
    15dc:	b	16a0 <ctf_rollback+0x138>
    15e0:	ldr	x1, [x20, #16]
    15e4:	ldr	x0, [x19, #568]
    15e8:	bl	0 <ctf_dynhash_remove>
    15ec:	mov	x1, x20
    15f0:	mov	x0, x19
    15f4:	bl	1340 <ctf_dtd_delete>
    15f8:	cbz	x21, 1670 <ctf_rollback+0x108>
    15fc:	mov	x20, x21
    1600:	ldr	x21, [x21, #8]
    1604:	ldr	w0, [x19, #544]
    1608:	ldr	x1, [x20, #16]
    160c:	and	x0, x0, x1
    1610:	cmp	x0, x25
    1614:	b.ls	15f8 <ctf_rollback+0x90>  // b.plast
    1618:	ldr	x0, [x19]
    161c:	ldr	x1, [x0]
    1620:	ldr	w0, [x20, #28]
    1624:	blr	x1
    1628:	mov	w26, w0
    162c:	ldr	w1, [x20, #24]
    1630:	cbz	w1, 15e0 <ctf_rollback+0x78>
    1634:	mov	x0, x19
    1638:	bl	0 <ctf_strraw>
    163c:	mov	x27, x0
    1640:	cbz	x0, 15e0 <ctf_rollback+0x78>
    1644:	mov	w1, w26
    1648:	mov	x0, x19
    164c:	bl	e44 <ctf_name_table>
    1650:	mov	x1, x27
    1654:	ldr	x0, [x0, #8]
    1658:	bl	0 <ctf_dynhash_remove>
    165c:	add	x2, x20, #0x18
    1660:	mov	x1, x27
    1664:	mov	x0, x19
    1668:	bl	0 <ctf_str_remove_ref>
    166c:	b	15e0 <ctf_rollback+0x78>
    1670:	ldr	x27, [sp, #80]
    1674:	ldr	x20, [x19, #608]
    1678:	cbnz	x20, 16b0 <ctf_rollback+0x148>
    167c:	str	x24, [x19, #480]
    1680:	str	x23, [x19, #624]
    1684:	ldr	x1, [x19, #632]
    1688:	mov	w0, #0x0                   	// #0
    168c:	cmp	x1, x23
    1690:	b.eq	16d0 <ctf_rollback+0x168>  // b.none
    1694:	ldp	x21, x22, [sp, #32]
    1698:	ldp	x23, x24, [sp, #48]
    169c:	ldp	x25, x26, [sp, #64]
    16a0:	ldp	x19, x20, [sp, #16]
    16a4:	ldp	x29, x30, [sp], #96
    16a8:	ret
    16ac:	cbz	x20, 167c <ctf_rollback+0x114>
    16b0:	mov	x1, x20
    16b4:	ldr	x20, [x20, #8]
    16b8:	ldr	x0, [x1, #32]
    16bc:	cmp	x0, x22
    16c0:	b.ls	16ac <ctf_rollback+0x144>  // b.plast
    16c4:	mov	x0, x19
    16c8:	bl	14f4 <ctf_dvd_delete>
    16cc:	b	16ac <ctf_rollback+0x144>
    16d0:	ldr	w0, [x19, #552]
    16d4:	and	w0, w0, #0xfffffffb
    16d8:	str	w0, [x19, #552]
    16dc:	mov	w0, #0x0                   	// #0
    16e0:	ldp	x21, x22, [sp, #32]
    16e4:	ldp	x23, x24, [sp, #48]
    16e8:	ldp	x25, x26, [sp, #64]
    16ec:	b	16a0 <ctf_rollback+0x138>

00000000000016f0 <ctf_discard>:
    16f0:	ldr	x1, [x0, #616]
    16f4:	ldr	x2, [x0, #632]
    16f8:	ldr	w3, [x0, #552]
    16fc:	tbnz	w3, #2, 1708 <ctf_discard+0x18>
    1700:	mov	w0, #0x0                   	// #0
    1704:	ret
    1708:	stp	x29, x30, [sp, #-16]!
    170c:	mov	x29, sp
    1710:	add	x2, x2, #0x1
    1714:	bl	1568 <ctf_rollback>
    1718:	ldp	x29, x30, [sp], #16
    171c:	ret

0000000000001720 <ctf_add_slice>:
    1720:	stp	x29, x30, [sp, #-64]!
    1724:	mov	x29, sp
    1728:	stp	x19, x20, [sp, #16]
    172c:	mov	x20, x0
    1730:	str	x0, [sp, #48]
    1734:	cbz	x3, 180c <ctf_add_slice+0xec>
    1738:	stp	x21, x22, [sp, #32]
    173c:	mov	w22, w1
    1740:	mov	x21, x2
    1744:	mov	x19, x3
    1748:	ldr	w0, [x3, #8]
    174c:	cmp	w0, #0xff
    1750:	b.hi	181c <ctf_add_slice+0xfc>  // b.pmore
    1754:	ldr	w0, [x3, #4]
    1758:	cmp	w0, #0xff
    175c:	b.hi	181c <ctf_add_slice+0xfc>  // b.pmore
    1760:	mov	x0, #0xfffffffe            	// #4294967294
    1764:	cmp	x2, x0
    1768:	b.hi	1840 <ctf_add_slice+0x120>  // b.pmore
    176c:	mov	x1, x2
    1770:	add	x0, sp, #0x30
    1774:	bl	0 <ctf_lookup_by_id>
    1778:	cbz	x0, 1870 <ctf_add_slice+0x150>
    177c:	mov	x1, x21
    1780:	ldr	x0, [sp, #48]
    1784:	bl	0 <ctf_type_kind_unsliced>
    1788:	sub	w1, w0, #0x1
    178c:	cmp	w1, #0x1
    1790:	ccmp	w0, #0x8, #0x4, hi  // hi = pmore
    1794:	b.ne	1858 <ctf_add_slice+0x138>  // b.any
    1798:	add	x4, sp, #0x38
    179c:	mov	w3, #0xe                   	// #14
    17a0:	mov	x2, #0x0                   	// #0
    17a4:	mov	w1, w22
    17a8:	mov	x0, x20
    17ac:	bl	f18 <ctf_add_generic>
    17b0:	mov	x20, x0
    17b4:	cmn	x0, #0x1
    17b8:	b.eq	187c <ctf_add_slice+0x15c>  // b.none
    17bc:	cmp	w22, #0x0
    17c0:	mov	w0, #0x3a000000            	// #973078528
    17c4:	mov	w1, #0x38000000            	// #939524096
    17c8:	csel	w0, w0, w1, ne  // ne = any
    17cc:	ldr	x22, [sp, #56]
    17d0:	str	w0, [x22, #28]
    17d4:	ldr	w0, [x19, #8]
    17d8:	neg	w0, w0
    17dc:	and	w0, w0, #0xfffffff8
    17e0:	neg	w0, w0
    17e4:	lsr	w0, w0, #3
    17e8:	bl	0 <clp2>
    17ec:	str	w0, [x22, #32]
    17f0:	str	w21, [x22, #48]
    17f4:	ldr	w0, [x19, #8]
    17f8:	strh	w0, [x22, #54]
    17fc:	ldr	w0, [x19, #4]
    1800:	strh	w0, [x22, #52]
    1804:	ldp	x21, x22, [sp, #32]
    1808:	b	1830 <ctf_add_slice+0x110>
    180c:	mov	w1, #0x16                  	// #22
    1810:	bl	0 <ctf_set_errno>
    1814:	mov	x20, x0
    1818:	b	1830 <ctf_add_slice+0x110>
    181c:	mov	w1, #0x416                 	// #1046
    1820:	mov	x0, x20
    1824:	bl	0 <ctf_set_errno>
    1828:	mov	x20, x0
    182c:	ldp	x21, x22, [sp, #32]
    1830:	mov	x0, x20
    1834:	ldp	x19, x20, [sp, #16]
    1838:	ldp	x29, x30, [sp], #64
    183c:	ret
    1840:	mov	w1, #0x16                  	// #22
    1844:	mov	x0, x20
    1848:	bl	0 <ctf_set_errno>
    184c:	mov	x20, x0
    1850:	ldp	x21, x22, [sp, #32]
    1854:	b	1830 <ctf_add_slice+0x110>
    1858:	mov	w1, #0x3fe                 	// #1022
    185c:	mov	x0, x20
    1860:	bl	0 <ctf_set_errno>
    1864:	mov	x20, x0
    1868:	ldp	x21, x22, [sp, #32]
    186c:	b	1830 <ctf_add_slice+0x110>
    1870:	mov	x20, #0xffffffffffffffff    	// #-1
    1874:	ldp	x21, x22, [sp, #32]
    1878:	b	1830 <ctf_add_slice+0x110>
    187c:	ldp	x21, x22, [sp, #32]
    1880:	b	1830 <ctf_add_slice+0x110>

0000000000001884 <ctf_add_integer>:
    1884:	stp	x29, x30, [sp, #-16]!
    1888:	mov	x29, sp
    188c:	mov	w4, #0x1                   	// #1
    1890:	bl	10f8 <ctf_add_encoded>
    1894:	ldp	x29, x30, [sp], #16
    1898:	ret

000000000000189c <ctf_add_float>:
    189c:	stp	x29, x30, [sp, #-16]!
    18a0:	mov	x29, sp
    18a4:	mov	w4, #0x2                   	// #2
    18a8:	bl	10f8 <ctf_add_encoded>
    18ac:	ldp	x29, x30, [sp], #16
    18b0:	ret

00000000000018b4 <ctf_add_pointer>:
    18b4:	stp	x29, x30, [sp, #-16]!
    18b8:	mov	x29, sp
    18bc:	mov	w3, #0x3                   	// #3
    18c0:	bl	11a8 <ctf_add_reftype>
    18c4:	ldp	x29, x30, [sp], #16
    18c8:	ret

00000000000018cc <ctf_add_array>:
    18cc:	stp	x29, x30, [sp, #-64]!
    18d0:	mov	x29, sp
    18d4:	stp	x19, x20, [sp, #16]
    18d8:	mov	x20, x0
    18dc:	str	x0, [sp, #48]
    18e0:	cbz	x2, 1970 <ctf_add_array+0xa4>
    18e4:	str	x21, [sp, #32]
    18e8:	mov	w21, w1
    18ec:	mov	x19, x2
    18f0:	ldr	x1, [x2]
    18f4:	add	x0, sp, #0x30
    18f8:	bl	0 <ctf_lookup_by_id>
    18fc:	cbz	x0, 197c <ctf_add_array+0xb0>
    1900:	str	x20, [sp, #48]
    1904:	ldr	x1, [x19, #8]
    1908:	add	x0, sp, #0x30
    190c:	bl	0 <ctf_lookup_by_id>
    1910:	cbz	x0, 1988 <ctf_add_array+0xbc>
    1914:	add	x4, sp, #0x38
    1918:	mov	w3, #0x4                   	// #4
    191c:	mov	x2, #0x0                   	// #0
    1920:	mov	w1, w21
    1924:	mov	x0, x20
    1928:	bl	f18 <ctf_add_generic>
    192c:	cmn	x0, #0x1
    1930:	b.eq	1994 <ctf_add_array+0xc8>  // b.none
    1934:	cmp	w21, #0x0
    1938:	mov	w2, #0x12000000            	// #301989888
    193c:	mov	w1, #0x10000000            	// #268435456
    1940:	csel	w2, w2, w1, ne  // ne = any
    1944:	ldr	x1, [sp, #56]
    1948:	str	w2, [x1, #28]
    194c:	str	wzr, [x1, #32]
    1950:	ldp	x2, x3, [x19]
    1954:	stp	x2, x3, [x1, #48]
    1958:	ldr	x2, [x19, #16]
    195c:	str	x2, [x1, #64]
    1960:	ldr	x21, [sp, #32]
    1964:	ldp	x19, x20, [sp, #16]
    1968:	ldp	x29, x30, [sp], #64
    196c:	ret
    1970:	mov	w1, #0x16                  	// #22
    1974:	bl	0 <ctf_set_errno>
    1978:	b	1964 <ctf_add_array+0x98>
    197c:	mov	x0, #0xffffffffffffffff    	// #-1
    1980:	ldr	x21, [sp, #32]
    1984:	b	1964 <ctf_add_array+0x98>
    1988:	mov	x0, #0xffffffffffffffff    	// #-1
    198c:	ldr	x21, [sp, #32]
    1990:	b	1964 <ctf_add_array+0x98>
    1994:	ldr	x21, [sp, #32]
    1998:	b	1964 <ctf_add_array+0x98>

000000000000199c <ctf_set_array>:
    199c:	stp	x29, x30, [sp, #-48]!
    19a0:	mov	x29, sp
    19a4:	stp	x19, x20, [sp, #16]
    19a8:	str	x21, [sp, #32]
    19ac:	mov	x19, x0
    19b0:	mov	x21, x2
    19b4:	bl	1434 <ctf_dtd_lookup>
    19b8:	mov	x20, x0
    19bc:	ldr	w0, [x19, #552]
    19c0:	tbz	w0, #1, 19fc <ctf_set_array+0x60>
    19c4:	cbz	x20, 19e0 <ctf_set_array+0x44>
    19c8:	ldr	x0, [x19]
    19cc:	ldr	x1, [x0]
    19d0:	ldr	w0, [x20, #28]
    19d4:	blr	x1
    19d8:	cmp	w0, #0x4
    19dc:	b.eq	1a0c <ctf_set_array+0x70>  // b.none
    19e0:	mov	w1, #0x3fa                 	// #1018
    19e4:	mov	x0, x19
    19e8:	bl	0 <ctf_set_errno>
    19ec:	ldp	x19, x20, [sp, #16]
    19f0:	ldr	x21, [sp, #32]
    19f4:	ldp	x29, x30, [sp], #48
    19f8:	ret
    19fc:	mov	w1, #0x40d                 	// #1037
    1a00:	mov	x0, x19
    1a04:	bl	0 <ctf_set_errno>
    1a08:	b	19ec <ctf_set_array+0x50>
    1a0c:	ldr	w0, [x19, #552]
    1a10:	orr	w0, w0, #0x4
    1a14:	str	w0, [x19, #552]
    1a18:	ldp	x0, x1, [x21]
    1a1c:	stp	x0, x1, [x20, #48]
    1a20:	ldr	x0, [x21, #16]
    1a24:	str	x0, [x20, #64]
    1a28:	mov	w0, #0x0                   	// #0
    1a2c:	b	19ec <ctf_set_array+0x50>

0000000000001a30 <ctf_add_function>:
    1a30:	stp	x29, x30, [sp, #-96]!
    1a34:	mov	x29, sp
    1a38:	stp	x19, x20, [sp, #16]
    1a3c:	stp	x21, x22, [sp, #32]
    1a40:	mov	x21, x0
    1a44:	str	x0, [sp, #80]
    1a48:	cbz	x2, 1b0c <ctf_add_function+0xdc>
    1a4c:	stp	x23, x24, [sp, #48]
    1a50:	mov	w23, w1
    1a54:	mov	x20, x2
    1a58:	mov	x22, x3
    1a5c:	ldr	w0, [x2, #12]
    1a60:	tst	w0, #0xfffffffe
    1a64:	b.ne	1b08 <ctf_add_function+0xd8>  // b.any
    1a68:	ldr	w24, [x2, #8]
    1a6c:	cmp	x3, #0x0
    1a70:	ccmp	w24, #0x0, #0x4, eq  // eq = none
    1a74:	b.ne	1b00 <ctf_add_function+0xd0>  // b.any
    1a78:	and	w0, w0, #0x1
    1a7c:	add	w24, w24, w0
    1a80:	ldr	x1, [x2]
    1a84:	add	x0, sp, #0x50
    1a88:	bl	0 <ctf_lookup_by_id>
    1a8c:	cbz	x0, 1be0 <ctf_add_function+0x1b0>
    1a90:	ldr	w0, [x20, #8]
    1a94:	cbz	w0, 1ac0 <ctf_add_function+0x90>
    1a98:	mov	x19, #0x0                   	// #0
    1a9c:	str	x21, [sp, #80]
    1aa0:	ldr	x1, [x22, x19, lsl #3]
    1aa4:	add	x0, sp, #0x50
    1aa8:	bl	0 <ctf_lookup_by_id>
    1aac:	cbz	x0, 1bec <ctf_add_function+0x1bc>
    1ab0:	add	x19, x19, #0x1
    1ab4:	ldr	w0, [x20, #8]
    1ab8:	cmp	x0, x19
    1abc:	b.hi	1a9c <ctf_add_function+0x6c>  // b.pmore
    1ac0:	mov	w0, #0xffffff              	// #16777215
    1ac4:	cmp	w24, w0
    1ac8:	b.hi	1b30 <ctf_add_function+0x100>  // b.pmore
    1acc:	str	x25, [sp, #64]
    1ad0:	cbz	w24, 1b48 <ctf_add_function+0x118>
    1ad4:	ubfiz	x0, x24, #3, #32
    1ad8:	bl	0 <malloc>
    1adc:	mov	x25, x0
    1ae0:	cbnz	x0, 1b4c <ctf_add_function+0x11c>
    1ae4:	mov	w1, #0xb                   	// #11
    1ae8:	mov	x0, x21
    1aec:	bl	0 <ctf_set_errno>
    1af0:	mov	x19, x0
    1af4:	ldp	x23, x24, [sp, #48]
    1af8:	ldr	x25, [sp, #64]
    1afc:	b	1b1c <ctf_add_function+0xec>
    1b00:	ldp	x23, x24, [sp, #48]
    1b04:	b	1b0c <ctf_add_function+0xdc>
    1b08:	ldp	x23, x24, [sp, #48]
    1b0c:	mov	w1, #0x16                  	// #22
    1b10:	mov	x0, x21
    1b14:	bl	0 <ctf_set_errno>
    1b18:	mov	x19, x0
    1b1c:	mov	x0, x19
    1b20:	ldp	x19, x20, [sp, #16]
    1b24:	ldp	x21, x22, [sp, #32]
    1b28:	ldp	x29, x30, [sp], #96
    1b2c:	ret
    1b30:	mov	w1, #0x4b                  	// #75
    1b34:	mov	x0, x21
    1b38:	bl	0 <ctf_set_errno>
    1b3c:	mov	x19, x0
    1b40:	ldp	x23, x24, [sp, #48]
    1b44:	b	1b1c <ctf_add_function+0xec>
    1b48:	mov	x25, #0x0                   	// #0
    1b4c:	add	x4, sp, #0x58
    1b50:	mov	w3, #0x5                   	// #5
    1b54:	mov	x2, #0x0                   	// #0
    1b58:	mov	w1, w23
    1b5c:	mov	x0, x21
    1b60:	bl	f18 <ctf_add_generic>
    1b64:	mov	x19, x0
    1b68:	cmn	x0, #0x1
    1b6c:	b.eq	1bcc <ctf_add_function+0x19c>  // b.none
    1b70:	cmp	w23, #0x0
    1b74:	mov	w0, #0x16000000            	// #369098752
    1b78:	mov	w1, #0x14000000            	// #335544320
    1b7c:	csel	w1, w0, w1, ne  // ne = any
    1b80:	ldr	x21, [sp, #88]
    1b84:	and	w0, w24, #0xffffff
    1b88:	orr	w0, w0, w1
    1b8c:	str	w0, [x21, #28]
    1b90:	ldr	x0, [x20]
    1b94:	str	w0, [x21, #32]
    1b98:	ldr	w2, [x20, #8]
    1b9c:	lsl	x2, x2, #3
    1ba0:	mov	x1, x22
    1ba4:	mov	x0, x25
    1ba8:	bl	0 <memcpy>
    1bac:	ldr	w0, [x20, #12]
    1bb0:	tbz	w0, #0, 1bbc <ctf_add_function+0x18c>
    1bb4:	sub	w24, w24, #0x1
    1bb8:	str	xzr, [x25, x24, lsl #3]
    1bbc:	str	x25, [x21, #48]
    1bc0:	ldp	x23, x24, [sp, #48]
    1bc4:	ldr	x25, [sp, #64]
    1bc8:	b	1b1c <ctf_add_function+0xec>
    1bcc:	mov	x0, x25
    1bd0:	bl	0 <free>
    1bd4:	ldp	x23, x24, [sp, #48]
    1bd8:	ldr	x25, [sp, #64]
    1bdc:	b	1b1c <ctf_add_function+0xec>
    1be0:	mov	x19, #0xffffffffffffffff    	// #-1
    1be4:	ldp	x23, x24, [sp, #48]
    1be8:	b	1b1c <ctf_add_function+0xec>
    1bec:	mov	x19, #0xffffffffffffffff    	// #-1
    1bf0:	ldp	x23, x24, [sp, #48]
    1bf4:	b	1b1c <ctf_add_function+0xec>

0000000000001bf8 <ctf_add_struct_sized>:
    1bf8:	stp	x29, x30, [sp, #-80]!
    1bfc:	mov	x29, sp
    1c00:	stp	x19, x20, [sp, #16]
    1c04:	stp	x21, x22, [sp, #32]
    1c08:	str	x23, [sp, #48]
    1c0c:	mov	x21, x0
    1c10:	mov	w22, w1
    1c14:	mov	x20, x2
    1c18:	mov	x23, x3
    1c1c:	cbz	x2, 1c30 <ctf_add_struct_sized+0x38>
    1c20:	mov	w1, #0x6                   	// #6
    1c24:	bl	0 <ctf_lookup_by_rawname>
    1c28:	mov	x19, x0
    1c2c:	cbnz	x0, 1ca4 <ctf_add_struct_sized+0xac>
    1c30:	add	x4, sp, #0x48
    1c34:	mov	w3, #0x6                   	// #6
    1c38:	mov	x2, x20
    1c3c:	mov	w1, w22
    1c40:	mov	x0, x21
    1c44:	bl	f18 <ctf_add_generic>
    1c48:	mov	x19, x0
    1c4c:	cmn	x0, #0x1
    1c50:	b.eq	1c8c <ctf_add_struct_sized+0x94>  // b.none
    1c54:	cmp	w22, #0x0
    1c58:	mov	w1, #0x1a000000            	// #436207616
    1c5c:	mov	w0, #0x18000000            	// #402653184
    1c60:	csel	w1, w1, w0, ne  // ne = any
    1c64:	ldr	x0, [sp, #72]
    1c68:	str	w1, [x0, #28]
    1c6c:	mov	x1, #0xfffffffe            	// #4294967294
    1c70:	cmp	x23, x1
    1c74:	b.ls	1ccc <ctf_add_struct_sized+0xd4>  // b.plast
    1c78:	mov	w1, #0xffffffff            	// #-1
    1c7c:	str	w1, [x0, #32]
    1c80:	lsr	x1, x23, #32
    1c84:	str	w1, [x0, #36]
    1c88:	str	w23, [x0, #40]
    1c8c:	mov	x0, x19
    1c90:	ldp	x19, x20, [sp, #16]
    1c94:	ldp	x21, x22, [sp, #32]
    1c98:	ldr	x23, [sp, #48]
    1c9c:	ldp	x29, x30, [sp], #80
    1ca0:	ret
    1ca4:	mov	x1, x0
    1ca8:	mov	x0, x21
    1cac:	bl	0 <ctf_type_kind>
    1cb0:	cmp	w0, #0x9
    1cb4:	b.ne	1c30 <ctf_add_struct_sized+0x38>  // b.any
    1cb8:	mov	x1, x19
    1cbc:	mov	x0, x21
    1cc0:	bl	1434 <ctf_dtd_lookup>
    1cc4:	str	x0, [sp, #72]
    1cc8:	b	1c54 <ctf_add_struct_sized+0x5c>
    1ccc:	str	w23, [x0, #32]
    1cd0:	b	1c8c <ctf_add_struct_sized+0x94>

0000000000001cd4 <ctf_add_struct>:
    1cd4:	stp	x29, x30, [sp, #-16]!
    1cd8:	mov	x29, sp
    1cdc:	mov	x3, #0x0                   	// #0
    1ce0:	bl	1bf8 <ctf_add_struct_sized>
    1ce4:	ldp	x29, x30, [sp], #16
    1ce8:	ret

0000000000001cec <ctf_add_union_sized>:
    1cec:	stp	x29, x30, [sp, #-80]!
    1cf0:	mov	x29, sp
    1cf4:	stp	x19, x20, [sp, #16]
    1cf8:	stp	x21, x22, [sp, #32]
    1cfc:	str	x23, [sp, #48]
    1d00:	mov	x21, x0
    1d04:	mov	w22, w1
    1d08:	mov	x20, x2
    1d0c:	mov	x23, x3
    1d10:	cbz	x2, 1d24 <ctf_add_union_sized+0x38>
    1d14:	mov	w1, #0x7                   	// #7
    1d18:	bl	0 <ctf_lookup_by_rawname>
    1d1c:	mov	x19, x0
    1d20:	cbnz	x0, 1d98 <ctf_add_union_sized+0xac>
    1d24:	add	x4, sp, #0x48
    1d28:	mov	w3, #0x7                   	// #7
    1d2c:	mov	x2, x20
    1d30:	mov	w1, w22
    1d34:	mov	x0, x21
    1d38:	bl	f18 <ctf_add_generic>
    1d3c:	mov	x19, x0
    1d40:	cmn	x0, #0x1
    1d44:	b.eq	1d80 <ctf_add_union_sized+0x94>  // b.none
    1d48:	cmp	w22, #0x0
    1d4c:	mov	w1, #0x1e000000            	// #503316480
    1d50:	mov	w0, #0x1c000000            	// #469762048
    1d54:	csel	w1, w1, w0, ne  // ne = any
    1d58:	ldr	x0, [sp, #72]
    1d5c:	str	w1, [x0, #28]
    1d60:	mov	x1, #0xfffffffe            	// #4294967294
    1d64:	cmp	x23, x1
    1d68:	b.ls	1dc0 <ctf_add_union_sized+0xd4>  // b.plast
    1d6c:	mov	w1, #0xffffffff            	// #-1
    1d70:	str	w1, [x0, #32]
    1d74:	lsr	x1, x23, #32
    1d78:	str	w1, [x0, #36]
    1d7c:	str	w23, [x0, #40]
    1d80:	mov	x0, x19
    1d84:	ldp	x19, x20, [sp, #16]
    1d88:	ldp	x21, x22, [sp, #32]
    1d8c:	ldr	x23, [sp, #48]
    1d90:	ldp	x29, x30, [sp], #80
    1d94:	ret
    1d98:	mov	x1, x0
    1d9c:	mov	x0, x21
    1da0:	bl	0 <ctf_type_kind>
    1da4:	cmp	w0, #0x9
    1da8:	b.ne	1d24 <ctf_add_union_sized+0x38>  // b.any
    1dac:	mov	x1, x19
    1db0:	mov	x0, x21
    1db4:	bl	1434 <ctf_dtd_lookup>
    1db8:	str	x0, [sp, #72]
    1dbc:	b	1d48 <ctf_add_union_sized+0x5c>
    1dc0:	str	w23, [x0, #32]
    1dc4:	b	1d80 <ctf_add_union_sized+0x94>

0000000000001dc8 <ctf_add_union>:
    1dc8:	stp	x29, x30, [sp, #-16]!
    1dcc:	mov	x29, sp
    1dd0:	mov	x3, #0x0                   	// #0
    1dd4:	bl	1cec <ctf_add_union_sized>
    1dd8:	ldp	x29, x30, [sp], #16
    1ddc:	ret

0000000000001de0 <ctf_add_enum>:
    1de0:	stp	x29, x30, [sp, #-64]!
    1de4:	mov	x29, sp
    1de8:	stp	x19, x20, [sp, #16]
    1dec:	stp	x21, x22, [sp, #32]
    1df0:	mov	x22, x0
    1df4:	mov	w21, w1
    1df8:	mov	x20, x2
    1dfc:	cbz	x2, 1e10 <ctf_add_enum+0x30>
    1e00:	mov	w1, #0x8                   	// #8
    1e04:	bl	0 <ctf_lookup_by_rawname>
    1e08:	mov	x19, x0
    1e0c:	cbnz	x0, 1e6c <ctf_add_enum+0x8c>
    1e10:	add	x4, sp, #0x38
    1e14:	mov	w3, #0x8                   	// #8
    1e18:	mov	x2, x20
    1e1c:	mov	w1, w21
    1e20:	mov	x0, x22
    1e24:	bl	f18 <ctf_add_generic>
    1e28:	mov	x19, x0
    1e2c:	cmn	x0, #0x1
    1e30:	b.eq	1e58 <ctf_add_enum+0x78>  // b.none
    1e34:	cmp	w21, #0x0
    1e38:	mov	w1, #0x22000000            	// #570425344
    1e3c:	mov	w0, #0x20000000            	// #536870912
    1e40:	csel	w1, w1, w0, ne  // ne = any
    1e44:	ldr	x2, [sp, #56]
    1e48:	str	w1, [x2, #28]
    1e4c:	ldr	x0, [x22, #488]
    1e50:	ldr	x0, [x0, #40]
    1e54:	str	w0, [x2, #32]
    1e58:	mov	x0, x19
    1e5c:	ldp	x19, x20, [sp, #16]
    1e60:	ldp	x21, x22, [sp, #32]
    1e64:	ldp	x29, x30, [sp], #64
    1e68:	ret
    1e6c:	mov	x1, x0
    1e70:	mov	x0, x22
    1e74:	bl	0 <ctf_type_kind>
    1e78:	cmp	w0, #0x9
    1e7c:	b.ne	1e10 <ctf_add_enum+0x30>  // b.any
    1e80:	mov	x1, x19
    1e84:	mov	x0, x22
    1e88:	bl	1434 <ctf_dtd_lookup>
    1e8c:	str	x0, [sp, #56]
    1e90:	b	1e34 <ctf_add_enum+0x54>

0000000000001e94 <ctf_add_enum_encoded>:
    1e94:	stp	x29, x30, [sp, #-64]!
    1e98:	mov	x29, sp
    1e9c:	stp	x19, x20, [sp, #16]
    1ea0:	stp	x21, x22, [sp, #32]
    1ea4:	str	x23, [sp, #48]
    1ea8:	mov	x20, x0
    1eac:	mov	w22, w1
    1eb0:	mov	x21, x2
    1eb4:	mov	x23, x3
    1eb8:	cbz	x2, 1ecc <ctf_add_enum_encoded+0x38>
    1ebc:	mov	w1, #0x8                   	// #8
    1ec0:	bl	0 <ctf_lookup_by_rawname>
    1ec4:	mov	x19, x0
    1ec8:	cbnz	x0, 1f18 <ctf_add_enum_encoded+0x84>
    1ecc:	mov	x2, x21
    1ed0:	mov	w1, w22
    1ed4:	mov	x0, x20
    1ed8:	bl	1de0 <ctf_add_enum>
    1edc:	mov	x19, x0
    1ee0:	cmn	x0, #0x1
    1ee4:	b.eq	1f00 <ctf_add_enum_encoded+0x6c>  // b.none
    1ee8:	mov	x3, x23
    1eec:	mov	x2, x19
    1ef0:	mov	w1, w22
    1ef4:	mov	x0, x20
    1ef8:	bl	1720 <ctf_add_slice>
    1efc:	mov	x19, x0
    1f00:	mov	x0, x19
    1f04:	ldp	x19, x20, [sp, #16]
    1f08:	ldp	x21, x22, [sp, #32]
    1f0c:	ldr	x23, [sp, #48]
    1f10:	ldp	x29, x30, [sp], #64
    1f14:	ret
    1f18:	mov	x1, x0
    1f1c:	mov	x0, x20
    1f20:	bl	0 <ctf_type_kind>
    1f24:	cmp	w0, #0x9
    1f28:	b.eq	1ee8 <ctf_add_enum_encoded+0x54>  // b.none
    1f2c:	mov	x1, x19
    1f30:	mov	x0, x20
    1f34:	bl	0 <ctf_type_kind_unsliced>
    1f38:	cmp	w0, #0x8
    1f3c:	b.eq	1ee8 <ctf_add_enum_encoded+0x54>  // b.none
    1f40:	mov	w1, #0x3fe                 	// #1022
    1f44:	mov	x0, x20
    1f48:	bl	0 <ctf_set_errno>
    1f4c:	mov	x19, x0
    1f50:	b	1f00 <ctf_add_enum_encoded+0x6c>

0000000000001f54 <ctf_add_forward>:
    1f54:	stp	x29, x30, [sp, #-64]!
    1f58:	mov	x29, sp
    1f5c:	stp	x21, x22, [sp, #32]
    1f60:	mov	x22, x0
    1f64:	sub	w0, w3, #0x6
    1f68:	cmp	w0, #0x2
    1f6c:	b.hi	1fdc <ctf_add_forward+0x88>  // b.pmore
    1f70:	stp	x19, x20, [sp, #16]
    1f74:	mov	w21, w1
    1f78:	mov	x20, x2
    1f7c:	mov	w19, w3
    1f80:	cbz	x2, 1f90 <ctf_add_forward+0x3c>
    1f84:	mov	w1, w3
    1f88:	mov	x0, x22
    1f8c:	bl	0 <ctf_lookup_by_rawname>
    1f90:	add	x4, sp, #0x38
    1f94:	mov	w3, #0x9                   	// #9
    1f98:	mov	x2, x20
    1f9c:	mov	w1, w21
    1fa0:	mov	x0, x22
    1fa4:	bl	f18 <ctf_add_generic>
    1fa8:	cmn	x0, #0x1
    1fac:	b.eq	1fec <ctf_add_forward+0x98>  // b.none
    1fb0:	cmp	w21, #0x0
    1fb4:	mov	w1, #0x26000000            	// #637534208
    1fb8:	mov	w2, #0x24000000            	// #603979776
    1fbc:	csel	w1, w1, w2, ne  // ne = any
    1fc0:	ldr	x2, [sp, #56]
    1fc4:	str	w1, [x2, #28]
    1fc8:	str	w19, [x2, #32]
    1fcc:	ldp	x19, x20, [sp, #16]
    1fd0:	ldp	x21, x22, [sp, #32]
    1fd4:	ldp	x29, x30, [sp], #64
    1fd8:	ret
    1fdc:	mov	w1, #0x3fd                 	// #1021
    1fe0:	mov	x0, x22
    1fe4:	bl	0 <ctf_set_errno>
    1fe8:	b	1fd0 <ctf_add_forward+0x7c>
    1fec:	ldp	x19, x20, [sp, #16]
    1ff0:	b	1fd0 <ctf_add_forward+0x7c>

0000000000001ff4 <ctf_add_typedef>:
    1ff4:	stp	x29, x30, [sp, #-64]!
    1ff8:	mov	x29, sp
    1ffc:	stp	x19, x20, [sp, #16]
    2000:	mov	x20, x0
    2004:	str	x0, [sp, #48]
    2008:	mov	x0, #0xfffffffe            	// #4294967294
    200c:	cmp	x3, x0
    2010:	b.hi	2080 <ctf_add_typedef+0x8c>  // b.pmore
    2014:	stp	x21, x22, [sp, #32]
    2018:	mov	w21, w1
    201c:	mov	x22, x2
    2020:	mov	x19, x3
    2024:	mov	x1, x3
    2028:	add	x0, sp, #0x30
    202c:	bl	0 <ctf_lookup_by_id>
    2030:	cbz	x0, 2090 <ctf_add_typedef+0x9c>
    2034:	add	x4, sp, #0x38
    2038:	mov	w3, #0xa                   	// #10
    203c:	mov	x2, x22
    2040:	mov	w1, w21
    2044:	mov	x0, x20
    2048:	bl	f18 <ctf_add_generic>
    204c:	cmn	x0, #0x1
    2050:	b.eq	209c <ctf_add_typedef+0xa8>  // b.none
    2054:	cmp	w21, #0x0
    2058:	mov	w1, #0x2a000000            	// #704643072
    205c:	mov	w2, #0x28000000            	// #671088640
    2060:	csel	w1, w1, w2, ne  // ne = any
    2064:	ldr	x2, [sp, #56]
    2068:	str	w1, [x2, #28]
    206c:	str	w19, [x2, #32]
    2070:	ldp	x21, x22, [sp, #32]
    2074:	ldp	x19, x20, [sp, #16]
    2078:	ldp	x29, x30, [sp], #64
    207c:	ret
    2080:	mov	w1, #0x16                  	// #22
    2084:	mov	x0, x20
    2088:	bl	0 <ctf_set_errno>
    208c:	b	2074 <ctf_add_typedef+0x80>
    2090:	mov	x0, #0xffffffffffffffff    	// #-1
    2094:	ldp	x21, x22, [sp, #32]
    2098:	b	2074 <ctf_add_typedef+0x80>
    209c:	ldp	x21, x22, [sp, #32]
    20a0:	b	2074 <ctf_add_typedef+0x80>

00000000000020a4 <ctf_add_type_internal>:
    20a4:	sub	sp, sp, #0x140
    20a8:	stp	x29, x30, [sp, #16]
    20ac:	add	x29, sp, #0x10
    20b0:	stp	x19, x20, [sp, #32]
    20b4:	mov	x20, x0
    20b8:	str	x1, [sp, #136]
    20bc:	str	x0, [sp, #312]
    20c0:	ldr	w0, [x0, #552]
    20c4:	tbz	w0, #1, 2260 <ctf_add_type_internal+0x1bc>
    20c8:	stp	x21, x22, [sp, #48]
    20cc:	stp	x23, x24, [sp, #64]
    20d0:	mov	x22, x2
    20d4:	mov	x24, x3
    20d8:	mov	x1, x2
    20dc:	add	x0, sp, #0x88
    20e0:	bl	0 <ctf_lookup_by_id>
    20e4:	mov	x23, x0
    20e8:	cbz	x0, 2284 <ctf_add_type_internal+0x1e0>
    20ec:	mov	x1, x22
    20f0:	ldr	x0, [sp, #136]
    20f4:	bl	0 <ctf_type_resolve>
    20f8:	cmn	x0, #0x1
    20fc:	b.eq	22a8 <ctf_add_type_internal+0x204>  // b.none
    2100:	stp	x25, x26, [sp, #80]
    2104:	ldr	w1, [x23]
    2108:	ldr	x0, [sp, #136]
    210c:	bl	0 <ctf_strptr>
    2110:	mov	x26, x0
    2114:	ldr	x0, [sp, #136]
    2118:	ldr	x0, [x0]
    211c:	ldr	x1, [x0]
    2120:	ldr	w0, [x23, #4]
    2124:	blr	x1
    2128:	mov	w21, w0
    212c:	ldr	x0, [sp, #136]
    2130:	ldr	x0, [x0]
    2134:	ldr	x1, [x0, #8]
    2138:	ldr	w0, [x23, #4]
    213c:	blr	x1
    2140:	mov	w25, w0
    2144:	ldr	x0, [sp, #136]
    2148:	ldr	x0, [x0]
    214c:	ldr	x1, [x0, #16]
    2150:	ldr	w0, [x23, #4]
    2154:	blr	x1
    2158:	str	w0, [sp, #124]
    215c:	add	x2, sp, #0x138
    2160:	mov	x1, x22
    2164:	ldr	x0, [sp, #136]
    2168:	bl	0 <ctf_type_mapping>
    216c:	mov	x19, x0
    2170:	cbnz	x0, 22d4 <ctf_add_type_internal+0x230>
    2174:	stp	x27, x28, [sp, #96]
    2178:	str	w21, [sp, #120]
    217c:	cmp	w21, #0x9
    2180:	b.eq	2360 <ctf_add_type_internal+0x2bc>  // b.none
    2184:	tbz	w25, #0, 2190 <ctf_add_type_internal+0xec>
    2188:	ldrb	w0, [x26]
    218c:	cbnz	w0, 236c <ctf_add_type_internal+0x2c8>
    2190:	mov	w27, #0x0                   	// #0
    2194:	mov	x19, #0xffffffffffffffff    	// #-1
    2198:	mov	w28, #0x0                   	// #0
    219c:	sub	w0, w21, #0x1
    21a0:	cmp	w0, #0x1
    21a4:	ccmp	w21, #0xe, #0x4, hi  // hi = pmore
    21a8:	b.ne	21c4 <ctf_add_type_internal+0x120>  // b.any
    21ac:	add	x2, sp, #0xf8
    21b0:	mov	x1, x22
    21b4:	ldr	x0, [sp, #136]
    21b8:	bl	0 <ctf_type_encoding>
    21bc:	cbnz	w0, 2444 <ctf_add_type_internal+0x3a0>
    21c0:	cbnz	w28, 2470 <ctf_add_type_internal+0x3cc>
    21c4:	ldr	x0, [sp, #136]
    21c8:	str	x0, [sp, #288]
    21cc:	str	x22, [sp, #296]
    21d0:	str	xzr, [sp, #304]
    21d4:	str	x20, [sp, #264]
    21d8:	str	x19, [sp, #272]
    21dc:	str	xzr, [sp, #280]
    21e0:	mov	x2, #0x1                   	// #1
    21e4:	mov	x1, x22
    21e8:	ldr	x0, [x24, #696]
    21ec:	bl	0 <ctf_dynhash_insert>
    21f0:	tbnz	w0, #31, 2594 <ctf_add_type_internal+0x4f0>
    21f4:	cmp	w21, #0x7
    21f8:	b.hi	25e4 <ctf_add_type_internal+0x540>  // b.pmore
    21fc:	cmp	w21, #0x5
    2200:	b.hi	281c <ctf_add_type_internal+0x778>  // b.pmore
    2204:	cmp	w21, #0x3
    2208:	b.eq	26bc <ctf_add_type_internal+0x618>  // b.none
    220c:	b.ls	25b8 <ctf_add_type_internal+0x514>  // b.plast
    2210:	cmp	w21, #0x4
    2214:	b.eq	2704 <ctf_add_type_internal+0x660>  // b.none
    2218:	mov	x3, x24
    221c:	ldr	w2, [x23, #8]
    2220:	ldr	x1, [sp, #136]
    2224:	mov	x0, x20
    2228:	bl	20a4 <ctf_add_type_internal>
    222c:	mov	x19, x0
    2230:	str	x0, [sp, #168]
    2234:	str	wzr, [sp, #176]
    2238:	str	wzr, [sp, #180]
    223c:	cmn	x0, #0x1
    2240:	b.eq	2c2c <ctf_add_type_internal+0xb88>  // b.none
    2244:	mov	x3, #0x0                   	// #0
    2248:	add	x2, sp, #0xa8
    224c:	mov	w1, w25
    2250:	mov	x0, x20
    2254:	bl	1a30 <ctf_add_function>
    2258:	mov	x19, x0
    225c:	b	26a0 <ctf_add_type_internal+0x5fc>
    2260:	mov	w1, #0x40d                 	// #1037
    2264:	mov	x0, x20
    2268:	bl	0 <ctf_set_errno>
    226c:	mov	x19, x0
    2270:	mov	x0, x19
    2274:	ldp	x19, x20, [sp, #32]
    2278:	ldp	x29, x30, [sp, #16]
    227c:	add	sp, sp, #0x140
    2280:	ret
    2284:	ldr	x0, [sp, #136]
    2288:	bl	0 <ctf_errno>
    228c:	mov	w1, w0
    2290:	mov	x0, x20
    2294:	bl	0 <ctf_set_errno>
    2298:	mov	x19, x0
    229c:	ldp	x21, x22, [sp, #48]
    22a0:	ldp	x23, x24, [sp, #64]
    22a4:	b	2270 <ctf_add_type_internal+0x1cc>
    22a8:	ldr	x0, [sp, #136]
    22ac:	bl	0 <ctf_errno>
    22b0:	cmp	w0, #0x41b
    22b4:	b.ne	2100 <ctf_add_type_internal+0x5c>  // b.any
    22b8:	mov	w1, #0x41b                 	// #1051
    22bc:	mov	x0, x20
    22c0:	bl	0 <ctf_set_errno>
    22c4:	mov	x19, x0
    22c8:	ldp	x21, x22, [sp, #48]
    22cc:	ldp	x23, x24, [sp, #64]
    22d0:	b	2270 <ctf_add_type_internal+0x1cc>
    22d4:	mov	x1, x22
    22d8:	ldr	x0, [x24, #696]
    22dc:	bl	0 <ctf_dynhash_lookup>
    22e0:	cbz	x0, 22f4 <ctf_add_type_internal+0x250>
    22e4:	ldp	x21, x22, [sp, #48]
    22e8:	ldp	x23, x24, [sp, #64]
    22ec:	ldp	x25, x26, [sp, #80]
    22f0:	b	2270 <ctf_add_type_internal+0x1cc>
    22f4:	mov	x1, x19
    22f8:	ldr	x0, [sp, #312]
    22fc:	bl	0 <ctf_type_kind_unsliced>
    2300:	cmp	w0, w21
    2304:	b.ne	2174 <ctf_add_type_internal+0xd0>  // b.any
    2308:	sub	w0, w21, #0x6
    230c:	cmp	w0, #0x2
    2310:	b.hi	2174 <ctf_add_type_internal+0xd0>  // b.pmore
    2314:	mov	x1, #0xffffffffffffffff    	// #-1
    2318:	add	x0, sp, #0x138
    231c:	bl	0 <ctf_lookup_by_id>
    2320:	cbz	x0, 2344 <ctf_add_type_internal+0x2a0>
    2324:	ldr	x1, [sp, #312]
    2328:	ldr	x1, [x1]
    232c:	ldr	x1, [x1, #16]
    2330:	ldr	w0, [x0, #4]
    2334:	blr	x1
    2338:	ldr	w1, [sp, #124]
    233c:	cmp	w0, w1
    2340:	b.eq	2350 <ctf_add_type_internal+0x2ac>  // b.none
    2344:	stp	x27, x28, [sp, #96]
    2348:	str	w21, [sp, #120]
    234c:	b	2184 <ctf_add_type_internal+0xe0>
    2350:	ldp	x21, x22, [sp, #48]
    2354:	ldp	x23, x24, [sp, #64]
    2358:	ldp	x25, x26, [sp, #80]
    235c:	b	2270 <ctf_add_type_internal+0x1cc>
    2360:	ldr	w0, [x23, #8]
    2364:	str	w0, [sp, #120]
    2368:	b	2184 <ctf_add_type_internal+0xe0>
    236c:	mov	x2, x26
    2370:	ldr	w1, [sp, #120]
    2374:	mov	x0, x20
    2378:	bl	0 <ctf_lookup_by_rawname>
    237c:	mov	x19, x0
    2380:	cbz	x0, 2190 <ctf_add_type_internal+0xec>
    2384:	mov	x1, x0
    2388:	mov	x0, x20
    238c:	bl	0 <ctf_type_kind_unsliced>
    2390:	mov	w27, w0
    2394:	cmn	x19, #0x1
    2398:	cset	w0, ne  // ne = any
    239c:	cmp	w21, w27
    23a0:	csel	w28, w0, wzr, ne  // ne = any
    23a4:	cbz	w28, 243c <ctf_add_type_internal+0x398>
    23a8:	cmp	w21, #0x9
    23ac:	b.eq	23c8 <ctf_add_type_internal+0x324>  // b.none
    23b0:	cmp	w27, #0x9
    23b4:	b.ne	23d4 <ctf_add_type_internal+0x330>  // b.any
    23b8:	sub	w0, w21, #0x6
    23bc:	cmp	w0, #0x2
    23c0:	b.ls	219c <ctf_add_type_internal+0xf8>  // b.plast
    23c4:	b	23d4 <ctf_add_type_internal+0x330>
    23c8:	sub	w0, w27, #0x6
    23cc:	cmp	w0, #0x2
    23d0:	b.ls	2414 <ctf_add_type_internal+0x370>  // b.plast
    23d4:	mov	w4, w27
    23d8:	mov	x3, x19
    23dc:	mov	w2, w21
    23e0:	mov	x1, x26
    23e4:	adrp	x0, 0 <clp2>
    23e8:	add	x0, x0, #0x0
    23ec:	bl	0 <ctf_dprintf>
    23f0:	mov	w1, #0x411                 	// #1041
    23f4:	mov	x0, x20
    23f8:	bl	0 <ctf_set_errno>
    23fc:	mov	x19, x0
    2400:	ldp	x21, x22, [sp, #48]
    2404:	ldp	x23, x24, [sp, #64]
    2408:	ldp	x25, x26, [sp, #80]
    240c:	ldp	x27, x28, [sp, #96]
    2410:	b	2270 <ctf_add_type_internal+0x1cc>
    2414:	mov	x3, x19
    2418:	mov	x2, x20
    241c:	mov	x1, x22
    2420:	ldr	x0, [sp, #136]
    2424:	bl	0 <ctf_add_type_mapping>
    2428:	ldp	x21, x22, [sp, #48]
    242c:	ldp	x23, x24, [sp, #64]
    2430:	ldp	x25, x26, [sp, #80]
    2434:	ldp	x27, x28, [sp, #96]
    2438:	b	2270 <ctf_add_type_internal+0x1cc>
    243c:	mov	w28, w0
    2440:	b	219c <ctf_add_type_internal+0xf8>
    2444:	ldr	x0, [sp, #136]
    2448:	bl	0 <ctf_errno>
    244c:	mov	w1, w0
    2450:	mov	x0, x20
    2454:	bl	0 <ctf_set_errno>
    2458:	mov	x19, x0
    245c:	ldp	x21, x22, [sp, #48]
    2460:	ldp	x23, x24, [sp, #64]
    2464:	ldp	x25, x26, [sp, #80]
    2468:	ldp	x27, x28, [sp, #96]
    246c:	b	2270 <ctf_add_type_internal+0x1cc>
    2470:	str	x20, [sp, #160]
    2474:	mov	x1, x19
    2478:	add	x0, sp, #0xa0
    247c:	bl	0 <ctf_lookup_by_id>
    2480:	str	x0, [sp, #128]
    2484:	cbz	x0, 2564 <ctf_add_type_internal+0x4c0>
    2488:	add	x2, sp, #0xe8
    248c:	mov	x1, x19
    2490:	mov	x0, x20
    2494:	bl	0 <ctf_type_encoding>
    2498:	cbnz	w0, 257c <ctf_add_type_internal+0x4d8>
    249c:	ldr	x0, [sp, #160]
    24a0:	ldr	x0, [x0]
    24a4:	ldr	x1, [x0, #8]
    24a8:	ldr	x0, [sp, #128]
    24ac:	ldr	w0, [x0, #4]
    24b0:	blr	x1
    24b4:	tbz	w0, #0, 2520 <ctf_add_type_internal+0x47c>
    24b8:	mov	x2, #0xc                   	// #12
    24bc:	add	x1, sp, #0xe8
    24c0:	add	x0, sp, #0xf8
    24c4:	bl	0 <memcmp>
    24c8:	cbnz	w0, 24fc <ctf_add_type_internal+0x458>
    24cc:	cmp	w21, #0xe
    24d0:	b.eq	21c4 <ctf_add_type_internal+0x120>  // b.none
    24d4:	mov	x3, x19
    24d8:	mov	x2, x20
    24dc:	mov	x1, x22
    24e0:	ldr	x0, [sp, #136]
    24e4:	bl	0 <ctf_add_type_mapping>
    24e8:	ldp	x21, x22, [sp, #48]
    24ec:	ldp	x23, x24, [sp, #64]
    24f0:	ldp	x25, x26, [sp, #80]
    24f4:	ldp	x27, x28, [sp, #96]
    24f8:	b	2270 <ctf_add_type_internal+0x1cc>
    24fc:	mov	w1, #0x411                 	// #1041
    2500:	mov	x0, x20
    2504:	bl	0 <ctf_set_errno>
    2508:	mov	x19, x0
    250c:	ldp	x21, x22, [sp, #48]
    2510:	ldp	x23, x24, [sp, #64]
    2514:	ldp	x25, x26, [sp, #80]
    2518:	ldp	x27, x28, [sp, #96]
    251c:	b	2270 <ctf_add_type_internal+0x1cc>
    2520:	mov	x2, #0xc                   	// #12
    2524:	add	x1, sp, #0xe8
    2528:	add	x0, sp, #0xf8
    252c:	bl	0 <memcmp>
    2530:	cmp	w0, #0x0
    2534:	ccmp	w21, #0xe, #0x4, eq  // eq = none
    2538:	b.eq	21c4 <ctf_add_type_internal+0x120>  // b.none
    253c:	mov	x3, x19
    2540:	mov	x2, x20
    2544:	mov	x1, x22
    2548:	ldr	x0, [sp, #136]
    254c:	bl	0 <ctf_add_type_mapping>
    2550:	ldp	x21, x22, [sp, #48]
    2554:	ldp	x23, x24, [sp, #64]
    2558:	ldp	x25, x26, [sp, #80]
    255c:	ldp	x27, x28, [sp, #96]
    2560:	b	2270 <ctf_add_type_internal+0x1cc>
    2564:	mov	x19, #0xffffffffffffffff    	// #-1
    2568:	ldp	x21, x22, [sp, #48]
    256c:	ldp	x23, x24, [sp, #64]
    2570:	ldp	x25, x26, [sp, #80]
    2574:	ldp	x27, x28, [sp, #96]
    2578:	b	2270 <ctf_add_type_internal+0x1cc>
    257c:	mov	x19, #0xffffffffffffffff    	// #-1
    2580:	ldp	x21, x22, [sp, #48]
    2584:	ldp	x23, x24, [sp, #64]
    2588:	ldp	x25, x26, [sp, #80]
    258c:	ldp	x27, x28, [sp, #96]
    2590:	b	2270 <ctf_add_type_internal+0x1cc>
    2594:	mov	w1, #0xc                   	// #12
    2598:	mov	x0, x20
    259c:	bl	0 <ctf_set_errno>
    25a0:	mov	x19, x0
    25a4:	ldp	x21, x22, [sp, #48]
    25a8:	ldp	x23, x24, [sp, #64]
    25ac:	ldp	x25, x26, [sp, #80]
    25b0:	ldp	x27, x28, [sp, #96]
    25b4:	b	2270 <ctf_add_type_internal+0x1cc>
    25b8:	cmp	w21, #0x1
    25bc:	b.eq	2688 <ctf_add_type_internal+0x5e4>  // b.none
    25c0:	cmp	w21, #0x2
    25c4:	b.ne	2b98 <ctf_add_type_internal+0xaf4>  // b.any
    25c8:	add	x3, sp, #0xf8
    25cc:	mov	x2, x26
    25d0:	mov	w1, w25
    25d4:	mov	x0, x20
    25d8:	bl	189c <ctf_add_float>
    25dc:	mov	x19, x0
    25e0:	b	26a0 <ctf_add_type_internal+0x5fc>
    25e4:	cmp	w21, #0xa
    25e8:	b.eq	2b4c <ctf_add_type_internal+0xaa8>  // b.none
    25ec:	b.ls	2648 <ctf_add_type_internal+0x5a4>  // b.plast
    25f0:	cmp	w21, #0xd
    25f4:	b.ls	26bc <ctf_add_type_internal+0x618>  // b.plast
    25f8:	cmp	w21, #0xe
    25fc:	b.ne	2b98 <ctf_add_type_internal+0xaf4>  // b.any
    2600:	mov	x1, x22
    2604:	ldr	x0, [sp, #136]
    2608:	bl	0 <ctf_type_reference>
    260c:	mov	x3, x24
    2610:	mov	x2, x0
    2614:	ldr	x1, [sp, #136]
    2618:	mov	x0, x20
    261c:	bl	20a4 <ctf_add_type_internal>
    2620:	mov	x19, x0
    2624:	cmn	x0, #0x1
    2628:	b.eq	2c04 <ctf_add_type_internal+0xb60>  // b.none
    262c:	add	x3, sp, #0xf8
    2630:	mov	x2, x0
    2634:	mov	w1, w25
    2638:	mov	x0, x20
    263c:	bl	1720 <ctf_add_slice>
    2640:	mov	x19, x0
    2644:	b	26a0 <ctf_add_type_internal+0x5fc>
    2648:	cmp	w21, #0x8
    264c:	b.eq	2a60 <ctf_add_type_internal+0x9bc>  // b.none
    2650:	cmp	w21, #0x9
    2654:	b.ne	2b98 <ctf_add_type_internal+0xaf4>  // b.any
    2658:	cmn	x19, #0x1
    265c:	b.eq	2b30 <ctf_add_type_internal+0xa8c>  // b.none
    2660:	mov	x3, x19
    2664:	mov	x2, x20
    2668:	mov	x1, x22
    266c:	ldr	x0, [sp, #136]
    2670:	bl	0 <ctf_add_type_mapping>
    2674:	ldp	x21, x22, [sp, #48]
    2678:	ldp	x23, x24, [sp, #64]
    267c:	ldp	x25, x26, [sp, #80]
    2680:	ldp	x27, x28, [sp, #96]
    2684:	b	2270 <ctf_add_type_internal+0x1cc>
    2688:	add	x3, sp, #0xf8
    268c:	mov	x2, x26
    2690:	mov	w1, w25
    2694:	mov	x0, x20
    2698:	bl	1884 <ctf_add_integer>
    269c:	mov	x19, x0
    26a0:	cmn	x19, #0x1
    26a4:	b.ne	2660 <ctf_add_type_internal+0x5bc>  // b.any
    26a8:	ldp	x21, x22, [sp, #48]
    26ac:	ldp	x23, x24, [sp, #64]
    26b0:	ldp	x25, x26, [sp, #80]
    26b4:	ldp	x27, x28, [sp, #96]
    26b8:	b	2270 <ctf_add_type_internal+0x1cc>
    26bc:	mov	x1, x22
    26c0:	ldr	x0, [sp, #136]
    26c4:	bl	0 <ctf_type_reference>
    26c8:	mov	x3, x24
    26cc:	mov	x2, x0
    26d0:	ldr	x1, [sp, #136]
    26d4:	mov	x0, x20
    26d8:	bl	20a4 <ctf_add_type_internal>
    26dc:	mov	x19, x0
    26e0:	cmn	x0, #0x1
    26e4:	b.eq	2c18 <ctf_add_type_internal+0xb74>  // b.none
    26e8:	mov	w3, w21
    26ec:	mov	x2, x0
    26f0:	mov	w1, w25
    26f4:	mov	x0, x20
    26f8:	bl	11a8 <ctf_add_reftype>
    26fc:	mov	x19, x0
    2700:	b	26a0 <ctf_add_type_internal+0x5fc>
    2704:	add	x2, sp, #0xd0
    2708:	mov	x1, x22
    270c:	ldr	x0, [sp, #136]
    2710:	bl	0 <ctf_array_info>
    2714:	cbnz	w0, 27d8 <ctf_add_type_internal+0x734>
    2718:	mov	x3, x24
    271c:	ldr	x2, [sp, #208]
    2720:	ldr	x1, [sp, #136]
    2724:	mov	x0, x20
    2728:	bl	20a4 <ctf_add_type_internal>
    272c:	str	x0, [sp, #208]
    2730:	mov	x3, x24
    2734:	ldr	x2, [sp, #216]
    2738:	ldr	x1, [sp, #136]
    273c:	mov	x0, x20
    2740:	bl	20a4 <ctf_add_type_internal>
    2744:	str	x0, [sp, #216]
    2748:	ldr	x1, [sp, #208]
    274c:	cmn	x1, #0x1
    2750:	ccmn	x0, #0x1, #0x4, ne  // ne = any
    2754:	b.eq	2bbc <ctf_add_type_internal+0xb18>  // b.none
    2758:	cbz	w28, 2804 <ctf_add_type_internal+0x760>
    275c:	add	x2, sp, #0xb8
    2760:	mov	x1, x19
    2764:	mov	x0, x20
    2768:	bl	0 <ctf_array_info>
    276c:	cbnz	w0, 2bd4 <ctf_add_type_internal+0xb30>
    2770:	mov	x2, #0x18                  	// #24
    2774:	add	x1, sp, #0xb8
    2778:	add	x0, sp, #0xd0
    277c:	bl	0 <memcmp>
    2780:	cbz	w0, 2660 <ctf_add_type_internal+0x5bc>
    2784:	ldr	w0, [sp, #200]
    2788:	str	w0, [sp]
    278c:	ldr	x7, [sp, #192]
    2790:	ldr	x6, [sp, #184]
    2794:	ldr	w5, [sp, #224]
    2798:	ldr	x4, [sp, #216]
    279c:	ldr	x3, [sp, #208]
    27a0:	mov	x2, x19
    27a4:	mov	x1, x26
    27a8:	adrp	x0, 0 <clp2>
    27ac:	add	x0, x0, #0x0
    27b0:	bl	0 <ctf_dprintf>
    27b4:	mov	w1, #0x411                 	// #1041
    27b8:	mov	x0, x20
    27bc:	bl	0 <ctf_set_errno>
    27c0:	mov	x19, x0
    27c4:	ldp	x21, x22, [sp, #48]
    27c8:	ldp	x23, x24, [sp, #64]
    27cc:	ldp	x25, x26, [sp, #80]
    27d0:	ldp	x27, x28, [sp, #96]
    27d4:	b	2270 <ctf_add_type_internal+0x1cc>
    27d8:	ldr	x0, [sp, #136]
    27dc:	bl	0 <ctf_errno>
    27e0:	mov	w1, w0
    27e4:	mov	x0, x20
    27e8:	bl	0 <ctf_set_errno>
    27ec:	mov	x19, x0
    27f0:	ldp	x21, x22, [sp, #48]
    27f4:	ldp	x23, x24, [sp, #64]
    27f8:	ldp	x25, x26, [sp, #80]
    27fc:	ldp	x27, x28, [sp, #96]
    2800:	b	2270 <ctf_add_type_internal+0x1cc>
    2804:	add	x2, sp, #0xd0
    2808:	mov	w1, w25
    280c:	mov	x0, x20
    2810:	bl	18cc <ctf_add_array>
    2814:	mov	x19, x0
    2818:	b	26a0 <ctf_add_type_internal+0x5fc>
    281c:	cmp	w28, #0x0
    2820:	ccmp	w27, #0x9, #0x4, ne  // ne = any
    2824:	b.ne	290c <ctf_add_type_internal+0x868>  // b.any
    2828:	add	x4, sp, #0x98
    282c:	mov	w3, w21
    2830:	mov	x2, x26
    2834:	mov	w1, w25
    2838:	mov	x0, x20
    283c:	bl	f18 <ctf_add_generic>
    2840:	mov	x19, x0
    2844:	cmn	x0, #0x1
    2848:	b.eq	2c40 <ctf_add_type_internal+0xb9c>  // b.none
    284c:	str	x0, [sp, #272]
    2850:	ldr	x0, [sp, #152]
    2854:	str	x0, [sp, #280]
    2858:	mov	x3, x19
    285c:	mov	x2, x20
    2860:	mov	x1, x22
    2864:	ldr	x0, [sp, #136]
    2868:	bl	0 <ctf_add_type_mapping>
    286c:	add	x3, sp, #0x108
    2870:	adrp	x2, 0 <clp2>
    2874:	add	x2, x2, #0x0
    2878:	mov	x1, x22
    287c:	ldr	x0, [sp, #136]
    2880:	bl	0 <ctf_member_iter>
    2884:	mov	w23, w0
    2888:	mov	x1, x22
    288c:	ldr	x0, [sp, #136]
    2890:	bl	0 <ctf_type_size>
    2894:	tbnz	x0, #63, 2a48 <ctf_add_type_internal+0x9a4>
    2898:	mov	x1, #0xfffffffe            	// #4294967294
    289c:	cmp	x0, x1
    28a0:	b.ls	29e0 <ctf_add_type_internal+0x93c>  // b.plast
    28a4:	ldr	x1, [sp, #152]
    28a8:	mov	w2, #0xffffffff            	// #-1
    28ac:	str	w2, [x1, #32]
    28b0:	lsr	x2, x0, #32
    28b4:	str	w2, [x1, #36]
    28b8:	str	w0, [x1, #40]
    28bc:	cmp	w25, #0x0
    28c0:	mov	w0, #0x2000000             	// #33554432
    28c4:	csel	w25, w25, w0, eq  // eq = none
    28c8:	cmp	w23, #0x0
    28cc:	cset	w23, ne  // ne = any
    28d0:	ldr	x1, [sp, #152]
    28d4:	ldr	w0, [sp, #124]
    28d8:	and	w0, w0, #0xffffff
    28dc:	orr	w21, w0, w21, lsl #26
    28e0:	orr	w25, w21, w25
    28e4:	str	w25, [x1, #28]
    28e8:	ldr	x21, [x1, #56]
    28ec:	cbnz	x21, 2a14 <ctf_add_type_internal+0x970>
    28f0:	cbz	w23, 26a0 <ctf_add_type_internal+0x5fc>
    28f4:	mov	x19, #0xffffffffffffffff    	// #-1
    28f8:	ldp	x21, x22, [sp, #48]
    28fc:	ldp	x23, x24, [sp, #64]
    2900:	ldp	x25, x26, [sp, #80]
    2904:	ldp	x27, x28, [sp, #96]
    2908:	b	2270 <ctf_add_type_internal+0x1cc>
    290c:	mov	x1, x22
    2910:	ldr	x0, [sp, #136]
    2914:	bl	0 <ctf_type_size>
    2918:	mov	x21, x0
    291c:	mov	x1, x19
    2920:	mov	x0, x20
    2924:	bl	0 <ctf_type_size>
    2928:	cmp	x21, x0
    292c:	b.eq	298c <ctf_add_type_internal+0x8e8>  // b.none
    2930:	mov	x1, x22
    2934:	ldr	x0, [sp, #136]
    2938:	bl	0 <ctf_type_size>
    293c:	mov	x21, x0
    2940:	mov	x1, x19
    2944:	mov	x0, x20
    2948:	bl	0 <ctf_type_size>
    294c:	mov	x4, x0
    2950:	mov	x3, x21
    2954:	mov	x2, x19
    2958:	mov	x1, x26
    295c:	adrp	x0, 0 <clp2>
    2960:	add	x0, x0, #0x0
    2964:	bl	0 <ctf_dprintf>
    2968:	mov	w1, #0x411                 	// #1041
    296c:	mov	x0, x20
    2970:	bl	0 <ctf_set_errno>
    2974:	mov	x19, x0
    2978:	ldp	x21, x22, [sp, #48]
    297c:	ldp	x23, x24, [sp, #64]
    2980:	ldp	x25, x26, [sp, #80]
    2984:	ldp	x27, x28, [sp, #96]
    2988:	b	2270 <ctf_add_type_internal+0x1cc>
    298c:	add	x3, sp, #0x108
    2990:	adrp	x2, 0 <clp2>
    2994:	add	x2, x2, #0x0
    2998:	mov	x1, x22
    299c:	ldr	x0, [sp, #136]
    29a0:	bl	0 <ctf_member_iter>
    29a4:	cbz	w0, 26a0 <ctf_add_type_internal+0x5fc>
    29a8:	mov	x2, x19
    29ac:	mov	x1, x26
    29b0:	adrp	x0, 0 <clp2>
    29b4:	add	x0, x0, #0x0
    29b8:	bl	0 <ctf_dprintf>
    29bc:	mov	w1, #0x411                 	// #1041
    29c0:	mov	x0, x20
    29c4:	bl	0 <ctf_set_errno>
    29c8:	mov	x19, x0
    29cc:	ldp	x21, x22, [sp, #48]
    29d0:	ldp	x23, x24, [sp, #64]
    29d4:	ldp	x25, x26, [sp, #80]
    29d8:	ldp	x27, x28, [sp, #96]
    29dc:	b	2270 <ctf_add_type_internal+0x1cc>
    29e0:	ldr	x1, [sp, #152]
    29e4:	str	w0, [x1, #32]
    29e8:	b	28bc <ctf_add_type_internal+0x818>
    29ec:	mov	x3, x24
    29f0:	ldr	x2, [x21, #24]
    29f4:	ldr	x1, [sp, #136]
    29f8:	mov	x0, x20
    29fc:	bl	20a4 <ctf_add_type_internal>
    2a00:	str	x0, [x21, #24]
    2a04:	cmn	x0, #0x1
    2a08:	b.eq	2a34 <ctf_add_type_internal+0x990>  // b.none
    2a0c:	ldr	x21, [x21, #8]
    2a10:	cbz	x21, 28f0 <ctf_add_type_internal+0x84c>
    2a14:	str	x20, [sp, #160]
    2a18:	add	x2, sp, #0xa0
    2a1c:	ldr	x1, [x21, #24]
    2a20:	ldr	x0, [sp, #136]
    2a24:	bl	0 <ctf_type_mapping>
    2a28:	cbz	x0, 29ec <ctf_add_type_internal+0x948>
    2a2c:	str	x0, [x21, #24]
    2a30:	b	2a0c <ctf_add_type_internal+0x968>
    2a34:	mov	x0, x20
    2a38:	bl	0 <ctf_errno>
    2a3c:	cmp	w0, #0x41b
    2a40:	cinc	w23, w23, ne  // ne = any
    2a44:	b	2a0c <ctf_add_type_internal+0x968>
    2a48:	mov	x19, #0xffffffffffffffff    	// #-1
    2a4c:	ldp	x21, x22, [sp, #48]
    2a50:	ldp	x23, x24, [sp, #64]
    2a54:	ldp	x25, x26, [sp, #80]
    2a58:	ldp	x27, x28, [sp, #96]
    2a5c:	b	2270 <ctf_add_type_internal+0x1cc>
    2a60:	cmp	w28, #0x0
    2a64:	ccmp	w27, #0x9, #0x4, ne  // ne = any
    2a68:	b.ne	2ac0 <ctf_add_type_internal+0xa1c>  // b.any
    2a6c:	mov	x2, x26
    2a70:	mov	w1, w25
    2a74:	mov	x0, x20
    2a78:	bl	1de0 <ctf_add_enum>
    2a7c:	mov	x19, x0
    2a80:	str	x0, [sp, #272]
    2a84:	cmn	x0, #0x1
    2a88:	b.eq	2c54 <ctf_add_type_internal+0xbb0>  // b.none
    2a8c:	add	x3, sp, #0x108
    2a90:	adrp	x2, 0 <clp2>
    2a94:	add	x2, x2, #0x0
    2a98:	mov	x1, x22
    2a9c:	ldr	x0, [sp, #136]
    2aa0:	bl	0 <ctf_enum_iter>
    2aa4:	cbz	w0, 2660 <ctf_add_type_internal+0x5bc>
    2aa8:	mov	x19, #0xffffffffffffffff    	// #-1
    2aac:	ldp	x21, x22, [sp, #48]
    2ab0:	ldp	x23, x24, [sp, #64]
    2ab4:	ldp	x25, x26, [sp, #80]
    2ab8:	ldp	x27, x28, [sp, #96]
    2abc:	b	2270 <ctf_add_type_internal+0x1cc>
    2ac0:	add	x3, sp, #0x108
    2ac4:	adrp	x2, 0 <clp2>
    2ac8:	add	x2, x2, #0x0
    2acc:	mov	x1, x22
    2ad0:	ldr	x0, [sp, #136]
    2ad4:	bl	0 <ctf_enum_iter>
    2ad8:	cbnz	w0, 2af8 <ctf_add_type_internal+0xa54>
    2adc:	add	x3, sp, #0x120
    2ae0:	adrp	x2, 0 <clp2>
    2ae4:	add	x2, x2, #0x0
    2ae8:	mov	x1, x19
    2aec:	mov	x0, x20
    2af0:	bl	0 <ctf_enum_iter>
    2af4:	cbz	w0, 2660 <ctf_add_type_internal+0x5bc>
    2af8:	mov	x2, x19
    2afc:	mov	x1, x26
    2b00:	adrp	x0, 0 <clp2>
    2b04:	add	x0, x0, #0x0
    2b08:	bl	0 <ctf_dprintf>
    2b0c:	mov	w1, #0x411                 	// #1041
    2b10:	mov	x0, x20
    2b14:	bl	0 <ctf_set_errno>
    2b18:	mov	x19, x0
    2b1c:	ldp	x21, x22, [sp, #48]
    2b20:	ldp	x23, x24, [sp, #64]
    2b24:	ldp	x25, x26, [sp, #80]
    2b28:	ldp	x27, x28, [sp, #96]
    2b2c:	b	2270 <ctf_add_type_internal+0x1cc>
    2b30:	ldr	w3, [sp, #120]
    2b34:	mov	x2, x26
    2b38:	mov	w1, w25
    2b3c:	mov	x0, x20
    2b40:	bl	1f54 <ctf_add_forward>
    2b44:	mov	x19, x0
    2b48:	b	26a0 <ctf_add_type_internal+0x5fc>
    2b4c:	mov	x1, x22
    2b50:	ldr	x0, [sp, #136]
    2b54:	bl	0 <ctf_type_reference>
    2b58:	mov	x3, x24
    2b5c:	mov	x2, x0
    2b60:	ldr	x1, [sp, #136]
    2b64:	mov	x0, x20
    2b68:	bl	20a4 <ctf_add_type_internal>
    2b6c:	cmn	x0, #0x1
    2b70:	b.eq	2bec <ctf_add_type_internal+0xb48>  // b.none
    2b74:	cmn	x19, #0x1
    2b78:	b.ne	2660 <ctf_add_type_internal+0x5bc>  // b.any
    2b7c:	mov	x3, x0
    2b80:	mov	x2, x26
    2b84:	mov	w1, w25
    2b88:	mov	x0, x20
    2b8c:	bl	1ff4 <ctf_add_typedef>
    2b90:	mov	x19, x0
    2b94:	b	26a0 <ctf_add_type_internal+0x5fc>
    2b98:	mov	w1, #0x3ef                 	// #1007
    2b9c:	mov	x0, x20
    2ba0:	bl	0 <ctf_set_errno>
    2ba4:	mov	x19, x0
    2ba8:	ldp	x21, x22, [sp, #48]
    2bac:	ldp	x23, x24, [sp, #64]
    2bb0:	ldp	x25, x26, [sp, #80]
    2bb4:	ldp	x27, x28, [sp, #96]
    2bb8:	b	2270 <ctf_add_type_internal+0x1cc>
    2bbc:	mov	x19, #0xffffffffffffffff    	// #-1
    2bc0:	ldp	x21, x22, [sp, #48]
    2bc4:	ldp	x23, x24, [sp, #64]
    2bc8:	ldp	x25, x26, [sp, #80]
    2bcc:	ldp	x27, x28, [sp, #96]
    2bd0:	b	2270 <ctf_add_type_internal+0x1cc>
    2bd4:	mov	x19, #0xffffffffffffffff    	// #-1
    2bd8:	ldp	x21, x22, [sp, #48]
    2bdc:	ldp	x23, x24, [sp, #64]
    2be0:	ldp	x25, x26, [sp, #80]
    2be4:	ldp	x27, x28, [sp, #96]
    2be8:	b	2270 <ctf_add_type_internal+0x1cc>
    2bec:	mov	x19, x0
    2bf0:	ldp	x21, x22, [sp, #48]
    2bf4:	ldp	x23, x24, [sp, #64]
    2bf8:	ldp	x25, x26, [sp, #80]
    2bfc:	ldp	x27, x28, [sp, #96]
    2c00:	b	2270 <ctf_add_type_internal+0x1cc>
    2c04:	ldp	x21, x22, [sp, #48]
    2c08:	ldp	x23, x24, [sp, #64]
    2c0c:	ldp	x25, x26, [sp, #80]
    2c10:	ldp	x27, x28, [sp, #96]
    2c14:	b	2270 <ctf_add_type_internal+0x1cc>
    2c18:	ldp	x21, x22, [sp, #48]
    2c1c:	ldp	x23, x24, [sp, #64]
    2c20:	ldp	x25, x26, [sp, #80]
    2c24:	ldp	x27, x28, [sp, #96]
    2c28:	b	2270 <ctf_add_type_internal+0x1cc>
    2c2c:	ldp	x21, x22, [sp, #48]
    2c30:	ldp	x23, x24, [sp, #64]
    2c34:	ldp	x25, x26, [sp, #80]
    2c38:	ldp	x27, x28, [sp, #96]
    2c3c:	b	2270 <ctf_add_type_internal+0x1cc>
    2c40:	ldp	x21, x22, [sp, #48]
    2c44:	ldp	x23, x24, [sp, #64]
    2c48:	ldp	x25, x26, [sp, #80]
    2c4c:	ldp	x27, x28, [sp, #96]
    2c50:	b	2270 <ctf_add_type_internal+0x1cc>
    2c54:	ldp	x21, x22, [sp, #48]
    2c58:	ldp	x23, x24, [sp, #64]
    2c5c:	ldp	x25, x26, [sp, #80]
    2c60:	ldp	x27, x28, [sp, #96]
    2c64:	b	2270 <ctf_add_type_internal+0x1cc>

0000000000002c68 <ctf_add_volatile>:
    2c68:	stp	x29, x30, [sp, #-16]!
    2c6c:	mov	x29, sp
    2c70:	mov	w3, #0xb                   	// #11
    2c74:	bl	11a8 <ctf_add_reftype>
    2c78:	ldp	x29, x30, [sp], #16
    2c7c:	ret

0000000000002c80 <ctf_add_const>:
    2c80:	stp	x29, x30, [sp, #-16]!
    2c84:	mov	x29, sp
    2c88:	mov	w3, #0xc                   	// #12
    2c8c:	bl	11a8 <ctf_add_reftype>
    2c90:	ldp	x29, x30, [sp], #16
    2c94:	ret

0000000000002c98 <ctf_add_restrict>:
    2c98:	stp	x29, x30, [sp, #-16]!
    2c9c:	mov	x29, sp
    2ca0:	mov	w3, #0xd                   	// #13
    2ca4:	bl	11a8 <ctf_add_reftype>
    2ca8:	ldp	x29, x30, [sp], #16
    2cac:	ret

0000000000002cb0 <ctf_add_enumerator>:
    2cb0:	stp	x29, x30, [sp, #-80]!
    2cb4:	mov	x29, sp
    2cb8:	stp	x19, x20, [sp, #16]
    2cbc:	stp	x21, x22, [sp, #32]
    2cc0:	stp	x23, x24, [sp, #48]
    2cc4:	mov	x21, x0
    2cc8:	mov	x20, x2
    2ccc:	mov	w23, w3
    2cd0:	bl	1434 <ctf_dtd_lookup>
    2cd4:	cbz	x20, 2dd0 <ctf_add_enumerator+0x120>
    2cd8:	mov	x22, x0
    2cdc:	ldr	w0, [x21, #552]
    2ce0:	tbz	w0, #1, 2de0 <ctf_add_enumerator+0x130>
    2ce4:	cbz	x22, 2df0 <ctf_add_enumerator+0x140>
    2ce8:	str	x25, [sp, #64]
    2cec:	ldr	x0, [x21]
    2cf0:	ldr	x1, [x0]
    2cf4:	ldr	w0, [x22, #28]
    2cf8:	blr	x1
    2cfc:	mov	w19, w0
    2d00:	ldr	x0, [x21]
    2d04:	ldr	x1, [x0, #8]
    2d08:	ldr	w0, [x22, #28]
    2d0c:	blr	x1
    2d10:	mov	w24, w0
    2d14:	ldr	x0, [x21]
    2d18:	ldr	x1, [x0, #16]
    2d1c:	ldr	w0, [x22, #28]
    2d20:	blr	x1
    2d24:	mov	w25, w0
    2d28:	cmp	w19, #0x8
    2d2c:	b.ne	2e00 <ctf_add_enumerator+0x150>  // b.any
    2d30:	mov	w0, #0xffffff              	// #16777215
    2d34:	cmp	w25, w0
    2d38:	b.eq	2e24 <ctf_add_enumerator+0x174>  // b.none
    2d3c:	ldr	x19, [x22, #56]
    2d40:	cbz	x19, 2d5c <ctf_add_enumerator+0xac>
    2d44:	mov	x1, x20
    2d48:	ldr	x0, [x19, #16]
    2d4c:	bl	0 <strcmp>
    2d50:	cbz	w0, 2e38 <ctf_add_enumerator+0x188>
    2d54:	ldr	x19, [x19, #8]
    2d58:	cbnz	x19, 2d44 <ctf_add_enumerator+0x94>
    2d5c:	mov	x0, #0x30                  	// #48
    2d60:	bl	0 <malloc>
    2d64:	mov	x19, x0
    2d68:	cbz	x0, 2e4c <ctf_add_enumerator+0x19c>
    2d6c:	mov	x0, x20
    2d70:	bl	0 <strdup>
    2d74:	cbz	x0, 2e60 <ctf_add_enumerator+0x1b0>
    2d78:	str	x0, [x19, #16]
    2d7c:	mov	x0, #0xffffffffffffffff    	// #-1
    2d80:	str	x0, [x19, #24]
    2d84:	str	xzr, [x19, #32]
    2d88:	str	w23, [x19, #40]
    2d8c:	cmp	w24, #0x0
    2d90:	mov	w0, #0x2000000             	// #33554432
    2d94:	csel	w24, w24, w0, eq  // eq = none
    2d98:	add	w1, w25, #0x1
    2d9c:	and	w1, w1, #0xffffff
    2da0:	orr	w1, w1, w24
    2da4:	orr	w1, w1, #0x20000000
    2da8:	str	w1, [x22, #28]
    2dac:	mov	x1, x19
    2db0:	add	x0, x22, #0x30
    2db4:	bl	0 <ctf_list_append>
    2db8:	ldr	w0, [x21, #552]
    2dbc:	orr	w0, w0, #0x4
    2dc0:	str	w0, [x21, #552]
    2dc4:	mov	w0, #0x0                   	// #0
    2dc8:	ldr	x25, [sp, #64]
    2dcc:	b	2e10 <ctf_add_enumerator+0x160>
    2dd0:	mov	w1, #0x16                  	// #22
    2dd4:	mov	x0, x21
    2dd8:	bl	0 <ctf_set_errno>
    2ddc:	b	2e10 <ctf_add_enumerator+0x160>
    2de0:	mov	w1, #0x40d                 	// #1037
    2de4:	mov	x0, x21
    2de8:	bl	0 <ctf_set_errno>
    2dec:	b	2e10 <ctf_add_enumerator+0x160>
    2df0:	mov	w1, #0x3fa                 	// #1018
    2df4:	mov	x0, x21
    2df8:	bl	0 <ctf_set_errno>
    2dfc:	b	2e10 <ctf_add_enumerator+0x160>
    2e00:	mov	w1, #0x3fc                 	// #1020
    2e04:	mov	x0, x21
    2e08:	bl	0 <ctf_set_errno>
    2e0c:	ldr	x25, [sp, #64]
    2e10:	ldp	x19, x20, [sp, #16]
    2e14:	ldp	x21, x22, [sp, #32]
    2e18:	ldp	x23, x24, [sp, #48]
    2e1c:	ldp	x29, x30, [sp], #80
    2e20:	ret
    2e24:	mov	w1, #0x40e                 	// #1038
    2e28:	mov	x0, x21
    2e2c:	bl	0 <ctf_set_errno>
    2e30:	ldr	x25, [sp, #64]
    2e34:	b	2e10 <ctf_add_enumerator+0x160>
    2e38:	mov	w1, #0x410                 	// #1040
    2e3c:	mov	x0, x21
    2e40:	bl	0 <ctf_set_errno>
    2e44:	ldr	x25, [sp, #64]
    2e48:	b	2e10 <ctf_add_enumerator+0x160>
    2e4c:	mov	w1, #0xb                   	// #11
    2e50:	mov	x0, x21
    2e54:	bl	0 <ctf_set_errno>
    2e58:	ldr	x25, [sp, #64]
    2e5c:	b	2e10 <ctf_add_enumerator+0x160>
    2e60:	mov	x0, x19
    2e64:	bl	0 <free>
    2e68:	mov	w1, #0xb                   	// #11
    2e6c:	mov	x0, x21
    2e70:	bl	0 <ctf_set_errno>
    2e74:	ldr	x25, [sp, #64]
    2e78:	b	2e10 <ctf_add_enumerator+0x160>

0000000000002e7c <enumadd>:
    2e7c:	stp	x29, x30, [sp, #-16]!
    2e80:	mov	x29, sp
    2e84:	mov	x4, x2
    2e88:	mov	w3, w1
    2e8c:	mov	x2, x0
    2e90:	ldr	x1, [x4, #8]
    2e94:	ldr	x0, [x4]
    2e98:	bl	2cb0 <ctf_add_enumerator>
    2e9c:	lsr	w0, w0, #31
    2ea0:	ldp	x29, x30, [sp], #16
    2ea4:	ret

0000000000002ea8 <ctf_add_member_offset>:
    2ea8:	stp	x29, x30, [sp, #-128]!
    2eac:	mov	x29, sp
    2eb0:	stp	x19, x20, [sp, #16]
    2eb4:	stp	x21, x22, [sp, #32]
    2eb8:	stp	x23, x24, [sp, #48]
    2ebc:	stp	x25, x26, [sp, #64]
    2ec0:	mov	x19, x0
    2ec4:	mov	x21, x2
    2ec8:	mov	x24, x3
    2ecc:	mov	x25, x4
    2ed0:	bl	1434 <ctf_dtd_lookup>
    2ed4:	mov	x20, x0
    2ed8:	ldr	w0, [x19, #552]
    2edc:	tbz	w0, #1, 2ff8 <ctf_add_member_offset+0x150>
    2ee0:	cbz	x20, 3008 <ctf_add_member_offset+0x160>
    2ee4:	ldr	x0, [x19]
    2ee8:	ldr	x1, [x0]
    2eec:	ldr	w0, [x20, #28]
    2ef0:	blr	x1
    2ef4:	mov	w22, w0
    2ef8:	ldr	x0, [x19]
    2efc:	ldr	x1, [x0, #8]
    2f00:	ldr	w0, [x20, #28]
    2f04:	blr	x1
    2f08:	mov	w26, w0
    2f0c:	ldr	x0, [x19]
    2f10:	ldr	x1, [x0, #16]
    2f14:	ldr	w0, [x20, #28]
    2f18:	blr	x1
    2f1c:	mov	w23, w0
    2f20:	sub	w0, w22, #0x6
    2f24:	cmp	w0, #0x1
    2f28:	b.hi	3018 <ctf_add_member_offset+0x170>  // b.pmore
    2f2c:	mov	w0, #0xffffff              	// #16777215
    2f30:	cmp	w23, w0
    2f34:	b.eq	3028 <ctf_add_member_offset+0x180>  // b.none
    2f38:	stp	x27, x28, [sp, #80]
    2f3c:	cbz	x21, 2f48 <ctf_add_member_offset+0xa0>
    2f40:	ldr	x27, [x20, #56]
    2f44:	cbnz	x27, 3040 <ctf_add_member_offset+0x198>
    2f48:	mov	x1, x24
    2f4c:	mov	x0, x19
    2f50:	bl	0 <ctf_type_size>
    2f54:	mov	x27, x0
    2f58:	tbnz	x0, #63, 31c0 <ctf_add_member_offset+0x318>
    2f5c:	mov	x1, x24
    2f60:	mov	x0, x19
    2f64:	bl	0 <ctf_type_align>
    2f68:	str	x0, [sp, #104]
    2f6c:	tbnz	x0, #63, 31cc <ctf_add_member_offset+0x324>
    2f70:	mov	x0, #0x30                  	// #48
    2f74:	bl	0 <malloc>
    2f78:	mov	x28, x0
    2f7c:	cbz	x0, 3068 <ctf_add_member_offset+0x1c0>
    2f80:	cbz	x21, 2f94 <ctf_add_member_offset+0xec>
    2f84:	mov	x0, x21
    2f88:	bl	0 <strdup>
    2f8c:	mov	x21, x0
    2f90:	cbz	x0, 307c <ctf_add_member_offset+0x1d4>
    2f94:	str	x21, [x28, #16]
    2f98:	str	x24, [x28, #24]
    2f9c:	mov	w0, #0xffffffff            	// #-1
    2fa0:	str	w0, [x28, #40]
    2fa4:	cmp	w23, #0x0
    2fa8:	ccmp	w22, #0x6, #0x0, ne  // ne = any
    2fac:	b.ne	3118 <ctf_add_member_offset+0x270>  // b.any
    2fb0:	cmn	x25, #0x1
    2fb4:	b.eq	3098 <ctf_add_member_offset+0x1f0>  // b.none
    2fb8:	str	x25, [x28, #32]
    2fbc:	ldr	x0, [x19]
    2fc0:	ldr	x4, [x0, #24]
    2fc4:	mov	x3, #0x0                   	// #0
    2fc8:	mov	x2, #0x0                   	// #0
    2fcc:	add	x1, x20, #0x18
    2fd0:	mov	x0, x19
    2fd4:	blr	x4
    2fd8:	add	w1, w25, #0x7
    2fdc:	cmp	w25, #0x0
    2fe0:	csel	w1, w1, w25, lt  // lt = tstop
    2fe4:	asr	w1, w1, #3
    2fe8:	add	x27, x27, w1, sxtw
    2fec:	cmp	x27, x0
    2ff0:	csel	x27, x27, x0, ge  // ge = tcont
    2ff4:	b	3140 <ctf_add_member_offset+0x298>
    2ff8:	mov	w1, #0x40d                 	// #1037
    2ffc:	mov	x0, x19
    3000:	bl	0 <ctf_set_errno>
    3004:	b	31a0 <ctf_add_member_offset+0x2f8>
    3008:	mov	w1, #0x3fa                 	// #1018
    300c:	mov	x0, x19
    3010:	bl	0 <ctf_set_errno>
    3014:	b	31a0 <ctf_add_member_offset+0x2f8>
    3018:	mov	w1, #0x3fb                 	// #1019
    301c:	mov	x0, x19
    3020:	bl	0 <ctf_set_errno>
    3024:	b	31a0 <ctf_add_member_offset+0x2f8>
    3028:	mov	w1, #0x40e                 	// #1038
    302c:	mov	x0, x19
    3030:	bl	0 <ctf_set_errno>
    3034:	b	31a0 <ctf_add_member_offset+0x2f8>
    3038:	ldr	x27, [x27, #8]
    303c:	cbz	x27, 2f48 <ctf_add_member_offset+0xa0>
    3040:	ldr	x0, [x27, #16]
    3044:	cbz	x0, 3038 <ctf_add_member_offset+0x190>
    3048:	mov	x1, x21
    304c:	bl	0 <strcmp>
    3050:	cbnz	w0, 3038 <ctf_add_member_offset+0x190>
    3054:	mov	w1, #0x410                 	// #1040
    3058:	mov	x0, x19
    305c:	bl	0 <ctf_set_errno>
    3060:	ldp	x27, x28, [sp, #80]
    3064:	b	31a0 <ctf_add_member_offset+0x2f8>
    3068:	mov	w1, #0xb                   	// #11
    306c:	mov	x0, x19
    3070:	bl	0 <ctf_set_errno>
    3074:	ldp	x27, x28, [sp, #80]
    3078:	b	31a0 <ctf_add_member_offset+0x2f8>
    307c:	mov	x0, x28
    3080:	bl	0 <free>
    3084:	mov	w1, #0xb                   	// #11
    3088:	mov	x0, x19
    308c:	bl	0 <ctf_set_errno>
    3090:	ldp	x27, x28, [sp, #80]
    3094:	b	31a0 <ctf_add_member_offset+0x2f8>
    3098:	ldr	x21, [x20, #48]
    309c:	ldr	x1, [x21, #24]
    30a0:	mov	x0, x19
    30a4:	bl	0 <ctf_type_resolve>
    30a8:	mov	x24, x0
    30ac:	ldr	x21, [x21, #32]
    30b0:	add	x2, sp, #0x70
    30b4:	mov	x1, x0
    30b8:	mov	x0, x19
    30bc:	bl	0 <ctf_type_encoding>
    30c0:	cbnz	w0, 30fc <ctf_add_member_offset+0x254>
    30c4:	ldr	w0, [sp, #120]
    30c8:	add	x21, x21, x0
    30cc:	add	x1, x21, #0x7
    30d0:	ldr	x0, [sp, #104]
    30d4:	cmp	x0, #0x0
    30d8:	csinc	x0, x0, xzr, gt
    30dc:	sub	x2, x0, #0x1
    30e0:	add	x1, x2, x1, lsr #3
    30e4:	udiv	x1, x1, x0
    30e8:	mul	x0, x1, x0
    30ec:	lsl	x1, x0, #3
    30f0:	str	x1, [x28, #32]
    30f4:	add	x27, x27, x0
    30f8:	b	3140 <ctf_add_member_offset+0x298>
    30fc:	mov	x1, x24
    3100:	mov	x0, x19
    3104:	bl	0 <ctf_type_size>
    3108:	add	x1, x21, x0, lsl #3
    310c:	cmp	x0, #0x0
    3110:	csel	x21, x1, x21, gt
    3114:	b	30cc <ctf_add_member_offset+0x224>
    3118:	str	xzr, [x28, #32]
    311c:	ldr	x0, [x19]
    3120:	ldr	x4, [x0, #24]
    3124:	mov	x3, #0x0                   	// #0
    3128:	mov	x2, #0x0                   	// #0
    312c:	add	x1, x20, #0x18
    3130:	mov	x0, x19
    3134:	blr	x4
    3138:	cmp	x27, x0
    313c:	csel	x27, x27, x0, ge  // ge = tcont
    3140:	mov	x0, #0xfffffffe            	// #4294967294
    3144:	cmp	x27, x0
    3148:	b.ls	31b8 <ctf_add_member_offset+0x310>  // b.plast
    314c:	mov	w0, #0xffffffff            	// #-1
    3150:	str	w0, [x20, #32]
    3154:	lsr	x0, x27, #32
    3158:	str	w0, [x20, #36]
    315c:	str	w27, [x20, #40]
    3160:	cmp	w26, #0x0
    3164:	mov	w0, #0x2000000             	// #33554432
    3168:	csel	w26, w26, w0, eq  // eq = none
    316c:	add	w23, w23, #0x1
    3170:	and	w23, w23, #0xffffff
    3174:	orr	w22, w23, w22, lsl #26
    3178:	orr	w26, w22, w26
    317c:	str	w26, [x20, #28]
    3180:	mov	x1, x28
    3184:	add	x0, x20, #0x30
    3188:	bl	0 <ctf_list_append>
    318c:	ldr	w0, [x19, #552]
    3190:	orr	w0, w0, #0x4
    3194:	str	w0, [x19, #552]
    3198:	mov	w0, #0x0                   	// #0
    319c:	ldp	x27, x28, [sp, #80]
    31a0:	ldp	x19, x20, [sp, #16]
    31a4:	ldp	x21, x22, [sp, #32]
    31a8:	ldp	x23, x24, [sp, #48]
    31ac:	ldp	x25, x26, [sp, #64]
    31b0:	ldp	x29, x30, [sp], #128
    31b4:	ret
    31b8:	str	w27, [x20, #32]
    31bc:	b	3160 <ctf_add_member_offset+0x2b8>
    31c0:	mov	w0, #0xffffffff            	// #-1
    31c4:	ldp	x27, x28, [sp, #80]
    31c8:	b	31a0 <ctf_add_member_offset+0x2f8>
    31cc:	mov	w0, #0xffffffff            	// #-1
    31d0:	ldp	x27, x28, [sp, #80]
    31d4:	b	31a0 <ctf_add_member_offset+0x2f8>

00000000000031d8 <ctf_add_member_encoded>:
    31d8:	stp	x29, x30, [sp, #-80]!
    31dc:	mov	x29, sp
    31e0:	stp	x19, x20, [sp, #16]
    31e4:	stp	x21, x22, [sp, #32]
    31e8:	str	x23, [sp, #48]
    31ec:	mov	x19, x0
    31f0:	mov	x21, x1
    31f4:	mov	x22, x2
    31f8:	mov	x20, x3
    31fc:	mov	x23, x4
    3200:	str	x5, [sp, #64]
    3204:	str	w6, [sp, #72]
    3208:	mov	x1, x3
    320c:	bl	1434 <ctf_dtd_lookup>
    3210:	ldr	x1, [x19]
    3214:	ldr	x1, [x1]
    3218:	ldr	w0, [x0, #28]
    321c:	blr	x1
    3220:	sub	w1, w0, #0x1
    3224:	cmp	w1, #0x1
    3228:	ccmp	w0, #0x8, #0x4, hi  // hi = pmore
    322c:	b.ne	3278 <ctf_add_member_encoded+0xa0>  // b.any
    3230:	add	x3, sp, #0x40
    3234:	sxtw	x2, w20
    3238:	mov	w1, #0x0                   	// #0
    323c:	mov	x0, x19
    3240:	bl	1720 <ctf_add_slice>
    3244:	mov	x3, x0
    3248:	cmn	x0, #0x1
    324c:	b.eq	3288 <ctf_add_member_encoded+0xb0>  // b.none
    3250:	mov	x4, x23
    3254:	mov	x2, x22
    3258:	mov	x1, x21
    325c:	mov	x0, x19
    3260:	bl	2ea8 <ctf_add_member_offset>
    3264:	ldp	x19, x20, [sp, #16]
    3268:	ldp	x21, x22, [sp, #32]
    326c:	ldr	x23, [sp, #48]
    3270:	ldp	x29, x30, [sp], #80
    3274:	ret
    3278:	mov	w1, #0x3fe                 	// #1022
    327c:	mov	x0, x19
    3280:	bl	0 <ctf_set_errno>
    3284:	b	3264 <ctf_add_member_encoded+0x8c>
    3288:	mov	w0, #0xffffffff            	// #-1
    328c:	b	3264 <ctf_add_member_encoded+0x8c>

0000000000003290 <ctf_add_member>:
    3290:	stp	x29, x30, [sp, #-16]!
    3294:	mov	x29, sp
    3298:	mov	x4, #0xffffffffffffffff    	// #-1
    329c:	bl	2ea8 <ctf_add_member_offset>
    32a0:	ldp	x29, x30, [sp], #16
    32a4:	ret

00000000000032a8 <ctf_add_variable>:
    32a8:	stp	x29, x30, [sp, #-64]!
    32ac:	mov	x29, sp
    32b0:	stp	x19, x20, [sp, #16]
    32b4:	mov	x19, x0
    32b8:	str	x0, [sp, #56]
    32bc:	ldr	w0, [x0, #552]
    32c0:	tbz	w0, #1, 32f8 <ctf_add_variable+0x50>
    32c4:	stp	x21, x22, [sp, #32]
    32c8:	mov	x20, x1
    32cc:	mov	x22, x2
    32d0:	mov	x0, x19
    32d4:	bl	153c <ctf_dvd_lookup>
    32d8:	cbz	x0, 3308 <ctf_add_variable+0x60>
    32dc:	mov	w1, #0x410                 	// #1040
    32e0:	mov	x0, x19
    32e4:	bl	0 <ctf_set_errno>
    32e8:	ldp	x21, x22, [sp, #32]
    32ec:	ldp	x19, x20, [sp, #16]
    32f0:	ldp	x29, x30, [sp], #64
    32f4:	ret
    32f8:	mov	w1, #0x40d                 	// #1037
    32fc:	mov	x0, x19
    3300:	bl	0 <ctf_set_errno>
    3304:	b	32ec <ctf_add_variable+0x44>
    3308:	mov	x1, x22
    330c:	add	x0, sp, #0x38
    3310:	bl	0 <ctf_lookup_by_id>
    3314:	cbz	x0, 33ec <ctf_add_variable+0x144>
    3318:	mov	x1, x22
    331c:	mov	x0, x19
    3320:	bl	0 <ctf_type_resolve>
    3324:	cmn	x0, #0x1
    3328:	b.eq	3384 <ctf_add_variable+0xdc>  // b.none
    332c:	mov	x0, #0x28                  	// #40
    3330:	bl	0 <malloc>
    3334:	mov	x21, x0
    3338:	cbz	x0, 33a0 <ctf_add_variable+0xf8>
    333c:	cbz	x20, 3350 <ctf_add_variable+0xa8>
    3340:	mov	x0, x20
    3344:	bl	0 <strdup>
    3348:	str	x0, [x21, #16]
    334c:	cbz	x0, 33b4 <ctf_add_variable+0x10c>
    3350:	str	x22, [x21, #24]
    3354:	ldr	x0, [x19, #624]
    3358:	str	x0, [x21, #32]
    335c:	mov	x1, x21
    3360:	mov	x0, x19
    3364:	bl	14a8 <ctf_dvd_insert>
    3368:	tbnz	w0, #31, 33d0 <ctf_add_variable+0x128>
    336c:	ldr	w0, [x19, #552]
    3370:	orr	w0, w0, #0x4
    3374:	str	w0, [x19, #552]
    3378:	mov	w0, #0x0                   	// #0
    337c:	ldp	x21, x22, [sp, #32]
    3380:	b	32ec <ctf_add_variable+0x44>
    3384:	mov	x0, x19
    3388:	bl	0 <ctf_errno>
    338c:	cmp	w0, #0x41b
    3390:	b.ne	332c <ctf_add_variable+0x84>  // b.any
    3394:	mov	w0, #0xffffffff            	// #-1
    3398:	ldp	x21, x22, [sp, #32]
    339c:	b	32ec <ctf_add_variable+0x44>
    33a0:	mov	w1, #0xb                   	// #11
    33a4:	mov	x0, x19
    33a8:	bl	0 <ctf_set_errno>
    33ac:	ldp	x21, x22, [sp, #32]
    33b0:	b	32ec <ctf_add_variable+0x44>
    33b4:	mov	x0, x21
    33b8:	bl	0 <free>
    33bc:	mov	w1, #0xb                   	// #11
    33c0:	mov	x0, x19
    33c4:	bl	0 <ctf_set_errno>
    33c8:	ldp	x21, x22, [sp, #32]
    33cc:	b	32ec <ctf_add_variable+0x44>
    33d0:	ldr	x0, [x21, #16]
    33d4:	bl	0 <free>
    33d8:	mov	x0, x21
    33dc:	bl	0 <free>
    33e0:	mov	w0, #0xffffffff            	// #-1
    33e4:	ldp	x21, x22, [sp, #32]
    33e8:	b	32ec <ctf_add_variable+0x44>
    33ec:	mov	w0, #0xffffffff            	// #-1
    33f0:	ldp	x21, x22, [sp, #32]
    33f4:	b	32ec <ctf_add_variable+0x44>

00000000000033f8 <ctf_add_type>:
    33f8:	stp	x29, x30, [sp, #-48]!
    33fc:	mov	x29, sp
    3400:	stp	x19, x20, [sp, #16]
    3404:	str	x21, [sp, #32]
    3408:	mov	x20, x0
    340c:	mov	x19, x1
    3410:	mov	x21, x2
    3414:	ldr	x0, [x1, #696]
    3418:	cbz	x0, 3450 <ctf_add_type+0x58>
    341c:	mov	x3, x19
    3420:	mov	x2, x21
    3424:	mov	x1, x19
    3428:	mov	x0, x20
    342c:	bl	20a4 <ctf_add_type_internal>
    3430:	mov	x20, x0
    3434:	ldr	x0, [x19, #696]
    3438:	bl	0 <ctf_dynhash_empty>
    343c:	mov	x0, x20
    3440:	ldp	x19, x20, [sp, #16]
    3444:	ldr	x21, [sp, #32]
    3448:	ldp	x29, x30, [sp], #48
    344c:	ret
    3450:	mov	x3, #0x0                   	// #0
    3454:	mov	x2, #0x0                   	// #0
    3458:	adrp	x1, 0 <ctf_hash_eq_integer>
    345c:	add	x1, x1, #0x0
    3460:	adrp	x0, 0 <ctf_hash_integer>
    3464:	add	x0, x0, #0x0
    3468:	bl	0 <ctf_dynhash_create>
    346c:	str	x0, [x19, #696]
    3470:	cbnz	x0, 341c <ctf_add_type+0x24>
    3474:	mov	w1, #0xc                   	// #12
    3478:	mov	x0, x20
    347c:	bl	0 <ctf_set_errno>
    3480:	mov	x20, x0
    3484:	b	343c <ctf_add_type+0x44>

0000000000003488 <ctf_gzwrite>:
    3488:	stp	x29, x30, [sp, #-48]!
    348c:	mov	x29, sp
    3490:	stp	x19, x20, [sp, #16]
    3494:	stp	x21, x22, [sp, #32]
    3498:	mov	x22, x0
    349c:	mov	x21, x1
    34a0:	ldr	x20, [x0, #8]
    34a4:	mov	x19, #0x34                  	// #52
    34a8:	mov	w2, w19
    34ac:	mov	x1, x20
    34b0:	mov	x0, x21
    34b4:	bl	0 <gzwrite>
    34b8:	sxtw	x2, w0
    34bc:	cmp	x2, #0x0
    34c0:	b.le	350c <ctf_gzwrite+0x84>
    34c4:	add	x20, x20, w0, sxtw
    34c8:	subs	x19, x19, x2
    34cc:	b.ne	34a8 <ctf_gzwrite+0x20>  // b.any
    34d0:	ldr	x19, [x22, #416]
    34d4:	ldr	x20, [x22, #408]
    34d8:	cbz	x19, 3540 <ctf_gzwrite+0xb8>
    34dc:	mov	w2, w19
    34e0:	mov	x1, x20
    34e4:	mov	x0, x21
    34e8:	bl	0 <gzwrite>
    34ec:	sxtw	x1, w0
    34f0:	cmp	x1, #0x0
    34f4:	b.le	352c <ctf_gzwrite+0xa4>
    34f8:	add	x20, x20, w0, sxtw
    34fc:	subs	x19, x19, x1
    3500:	b.ne	34dc <ctf_gzwrite+0x54>  // b.any
    3504:	mov	w0, #0x0                   	// #0
    3508:	b	351c <ctf_gzwrite+0x94>
    350c:	bl	0 <__errno_location>
    3510:	ldr	w1, [x0]
    3514:	mov	x0, x22
    3518:	bl	0 <ctf_set_errno>
    351c:	ldp	x19, x20, [sp, #16]
    3520:	ldp	x21, x22, [sp, #32]
    3524:	ldp	x29, x30, [sp], #48
    3528:	ret
    352c:	bl	0 <__errno_location>
    3530:	ldr	w1, [x0]
    3534:	mov	x0, x22
    3538:	bl	0 <ctf_set_errno>
    353c:	b	351c <ctf_gzwrite+0x94>
    3540:	mov	w0, #0x0                   	// #0
    3544:	b	351c <ctf_gzwrite+0x94>

0000000000003548 <ctf_compress_write>:
    3548:	stp	x29, x30, [sp, #-128]!
    354c:	mov	x29, sp
    3550:	stp	x19, x20, [sp, #16]
    3554:	stp	x21, x22, [sp, #32]
    3558:	mov	x21, x0
    355c:	mov	w20, w1
    3560:	bl	564 <ctf_serialize>
    3564:	tbnz	w0, #31, 36c8 <ctf_compress_write+0x180>
    3568:	stp	x23, x24, [sp, #48]
    356c:	ldr	x0, [x21, #8]
    3570:	ldp	x2, x3, [x0]
    3574:	stp	x2, x3, [sp, #72]
    3578:	ldp	x2, x3, [x0, #16]
    357c:	stp	x2, x3, [sp, #88]
    3580:	ldp	x2, x3, [x0, #32]
    3584:	stp	x2, x3, [sp, #104]
    3588:	ldr	w0, [x0, #48]
    358c:	str	w0, [sp, #120]
    3590:	ldrb	w0, [sp, #75]
    3594:	orr	w0, w0, #0x1
    3598:	strb	w0, [sp, #75]
    359c:	ldr	x0, [x21, #416]
    35a0:	bl	0 <compressBound>
    35a4:	str	x0, [sp, #64]
    35a8:	bl	0 <malloc>
    35ac:	mov	x23, x0
    35b0:	cbz	x0, 363c <ctf_compress_write+0xf4>
    35b4:	ldr	x3, [x21, #416]
    35b8:	ldr	x2, [x21, #408]
    35bc:	add	x1, sp, #0x40
    35c0:	bl	0 <compress>
    35c4:	mov	w22, w0
    35c8:	mov	x19, #0x34                  	// #52
    35cc:	add	x24, sp, #0x48
    35d0:	cbnz	w0, 3654 <ctf_compress_write+0x10c>
    35d4:	mov	x2, x19
    35d8:	mov	x1, x24
    35dc:	mov	w0, w20
    35e0:	bl	0 <write>
    35e4:	tbnz	x0, #63, 367c <ctf_compress_write+0x134>
    35e8:	sub	x19, x19, x0
    35ec:	add	x2, x0, x0, lsl #1
    35f0:	add	x0, x0, x2, lsl #2
    35f4:	add	x24, x24, x0, lsl #2
    35f8:	cmp	x19, #0x0
    35fc:	b.gt	35d4 <ctf_compress_write+0x8c>
    3600:	ldr	x2, [sp, #64]
    3604:	cmp	x2, #0x0
    3608:	b.le	3690 <ctf_compress_write+0x148>
    360c:	mov	x19, x23
    3610:	mov	x1, x19
    3614:	mov	w0, w20
    3618:	bl	0 <write>
    361c:	tbnz	x0, #63, 36b0 <ctf_compress_write+0x168>
    3620:	ldr	x2, [sp, #64]
    3624:	sub	x2, x2, x0
    3628:	str	x2, [sp, #64]
    362c:	add	x19, x19, x0
    3630:	cmp	x2, #0x0
    3634:	b.gt	3610 <ctf_compress_write+0xc8>
    3638:	b	3690 <ctf_compress_write+0x148>
    363c:	mov	w1, #0x3f6                 	// #1014
    3640:	mov	x0, x21
    3644:	bl	0 <ctf_set_errno>
    3648:	mov	w22, w0
    364c:	ldp	x23, x24, [sp, #48]
    3650:	b	369c <ctf_compress_write+0x154>
    3654:	bl	0 <zError>
    3658:	mov	x1, x0
    365c:	adrp	x0, 0 <clp2>
    3660:	add	x0, x0, #0x0
    3664:	bl	0 <ctf_dprintf>
    3668:	mov	w1, #0x413                 	// #1043
    366c:	mov	x0, x21
    3670:	bl	0 <ctf_set_errno>
    3674:	mov	w22, w0
    3678:	b	3690 <ctf_compress_write+0x148>
    367c:	bl	0 <__errno_location>
    3680:	ldr	w1, [x0]
    3684:	mov	x0, x21
    3688:	bl	0 <ctf_set_errno>
    368c:	mov	w22, w0
    3690:	mov	x0, x23
    3694:	bl	0 <free>
    3698:	ldp	x23, x24, [sp, #48]
    369c:	mov	w0, w22
    36a0:	ldp	x19, x20, [sp, #16]
    36a4:	ldp	x21, x22, [sp, #32]
    36a8:	ldp	x29, x30, [sp], #128
    36ac:	ret
    36b0:	bl	0 <__errno_location>
    36b4:	ldr	w1, [x0]
    36b8:	mov	x0, x21
    36bc:	bl	0 <ctf_set_errno>
    36c0:	mov	w22, w0
    36c4:	b	3690 <ctf_compress_write+0x148>
    36c8:	mov	w22, #0xffffffff            	// #-1
    36cc:	b	369c <ctf_compress_write+0x154>

00000000000036d0 <ctf_write_mem>:
    36d0:	stp	x29, x30, [sp, #-80]!
    36d4:	mov	x29, sp
    36d8:	stp	x19, x20, [sp, #16]
    36dc:	stp	x21, x22, [sp, #32]
    36e0:	mov	x20, x0
    36e4:	mov	x21, x1
    36e8:	mov	x22, x2
    36ec:	bl	564 <ctf_serialize>
    36f0:	mov	x19, #0x0                   	// #0
    36f4:	tbnz	w0, #31, 3784 <ctf_write_mem+0xb4>
    36f8:	ldr	x0, [x20, #416]
    36fc:	bl	0 <compressBound>
    3700:	ldr	x1, [x20, #416]
    3704:	cmp	x1, x22
    3708:	csel	x0, x0, x1, cs  // cs = hs, nlast
    370c:	str	x0, [sp, #72]
    3710:	add	x0, x0, #0x34
    3714:	bl	0 <malloc>
    3718:	mov	x19, x0
    371c:	cbz	x0, 3798 <ctf_write_mem+0xc8>
    3720:	str	x23, [sp, #48]
    3724:	ldr	x0, [x20, #8]
    3728:	ldp	x2, x3, [x0]
    372c:	stp	x2, x3, [x19]
    3730:	ldp	x2, x3, [x0, #16]
    3734:	stp	x2, x3, [x19, #16]
    3738:	ldp	x2, x3, [x0, #32]
    373c:	stp	x2, x3, [x19, #32]
    3740:	ldr	w0, [x0, #48]
    3744:	str	w0, [x19, #48]
    3748:	add	x0, x19, #0x34
    374c:	mov	x1, #0x34                  	// #52
    3750:	str	x1, [x21]
    3754:	ldr	x23, [x20, #416]
    3758:	cmp	x23, x22
    375c:	b.cs	37a8 <ctf_write_mem+0xd8>  // b.hs, b.nlast
    3760:	ldrb	w1, [x19, #3]
    3764:	and	w1, w1, #0xfffffffe
    3768:	strb	w1, [x19, #3]
    376c:	mov	x2, x23
    3770:	ldr	x1, [x20, #408]
    3774:	bl	0 <memcpy>
    3778:	add	x23, x23, #0x34
    377c:	str	x23, [x21]
    3780:	ldr	x23, [sp, #48]
    3784:	mov	x0, x19
    3788:	ldp	x19, x20, [sp, #16]
    378c:	ldp	x21, x22, [sp, #32]
    3790:	ldp	x29, x30, [sp], #80
    3794:	ret
    3798:	mov	w1, #0xc                   	// #12
    379c:	mov	x0, x20
    37a0:	bl	0 <ctf_set_errno>
    37a4:	b	3784 <ctf_write_mem+0xb4>
    37a8:	ldrb	w1, [x19, #3]
    37ac:	orr	w1, w1, #0x1
    37b0:	strb	w1, [x19, #3]
    37b4:	mov	x3, x23
    37b8:	ldr	x2, [x20, #408]
    37bc:	add	x1, sp, #0x48
    37c0:	bl	0 <compress>
    37c4:	cbnz	w0, 37e0 <ctf_write_mem+0x110>
    37c8:	ldr	x0, [x21]
    37cc:	ldr	x1, [sp, #72]
    37d0:	add	x0, x0, x1
    37d4:	str	x0, [x21]
    37d8:	ldr	x23, [sp, #48]
    37dc:	b	3784 <ctf_write_mem+0xb4>
    37e0:	bl	0 <zError>
    37e4:	mov	x1, x0
    37e8:	adrp	x0, 0 <clp2>
    37ec:	add	x0, x0, #0x0
    37f0:	bl	0 <ctf_dprintf>
    37f4:	mov	w1, #0x413                 	// #1043
    37f8:	mov	x0, x20
    37fc:	bl	0 <ctf_set_errno>
    3800:	mov	x0, x19
    3804:	bl	0 <free>
    3808:	mov	x19, #0x0                   	// #0
    380c:	ldr	x23, [sp, #48]
    3810:	b	3784 <ctf_write_mem+0xb4>

0000000000003814 <ctf_write>:
    3814:	stp	x29, x30, [sp, #-48]!
    3818:	mov	x29, sp
    381c:	stp	x21, x22, [sp, #32]
    3820:	mov	x22, x0
    3824:	mov	w21, w1
    3828:	bl	564 <ctf_serialize>
    382c:	tbnz	w0, #31, 38d4 <ctf_write+0xc0>
    3830:	stp	x19, x20, [sp, #16]
    3834:	ldr	x20, [x22, #8]
    3838:	mov	x19, #0x34                  	// #52
    383c:	mov	x2, x19
    3840:	mov	x1, x20
    3844:	mov	w0, w21
    3848:	bl	0 <write>
    384c:	cmp	x0, #0x0
    3850:	b.le	389c <ctf_write+0x88>
    3854:	add	x20, x20, x0
    3858:	subs	x19, x19, x0
    385c:	b.ne	383c <ctf_write+0x28>  // b.any
    3860:	ldr	x19, [x22, #416]
    3864:	ldr	x20, [x22, #408]
    3868:	cbz	x19, 38dc <ctf_write+0xc8>
    386c:	mov	x2, x19
    3870:	mov	x1, x20
    3874:	mov	w0, w21
    3878:	bl	0 <write>
    387c:	cmp	x0, #0x0
    3880:	b.le	38bc <ctf_write+0xa8>
    3884:	add	x20, x20, x0
    3888:	subs	x19, x19, x0
    388c:	b.ne	386c <ctf_write+0x58>  // b.any
    3890:	mov	w0, #0x0                   	// #0
    3894:	ldp	x19, x20, [sp, #16]
    3898:	b	38b0 <ctf_write+0x9c>
    389c:	bl	0 <__errno_location>
    38a0:	ldr	w1, [x0]
    38a4:	mov	x0, x22
    38a8:	bl	0 <ctf_set_errno>
    38ac:	ldp	x19, x20, [sp, #16]
    38b0:	ldp	x21, x22, [sp, #32]
    38b4:	ldp	x29, x30, [sp], #48
    38b8:	ret
    38bc:	bl	0 <__errno_location>
    38c0:	ldr	w1, [x0]
    38c4:	mov	x0, x22
    38c8:	bl	0 <ctf_set_errno>
    38cc:	ldp	x19, x20, [sp, #16]
    38d0:	b	38b0 <ctf_write+0x9c>
    38d4:	mov	w0, #0xffffffff            	// #-1
    38d8:	b	38b0 <ctf_write+0x9c>
    38dc:	mov	w0, #0x0                   	// #0
    38e0:	ldp	x19, x20, [sp, #16]
    38e4:	b	38b0 <ctf_write+0x9c>

ctf-decl.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_decl_init>:
   0:	stp	xzr, xzr, [x0]
   4:	stp	xzr, xzr, [x0, #16]
   8:	stp	xzr, xzr, [x0, #32]
   c:	stp	xzr, xzr, [x0, #48]
  10:	stp	xzr, xzr, [x0, #80]
  14:	str	xzr, [x0, #96]
  18:	mov	w1, #0xffffffff            	// #-1
  1c:	str	w1, [x0, #64]
  20:	str	w1, [x0, #68]
  24:	str	w1, [x0, #72]
  28:	str	w1, [x0, #76]
  2c:	ret

0000000000000030 <ctf_decl_fini>:
  30:	stp	x29, x30, [sp, #-48]!
  34:	mov	x29, sp
  38:	stp	x19, x20, [sp, #16]
  3c:	str	x21, [sp, #32]
  40:	add	x20, x0, #0x8
  44:	add	x21, x0, #0x48
  48:	ldr	x19, [x20]
  4c:	cbz	x19, 60 <ctf_decl_fini+0x30>
  50:	mov	x0, x19
  54:	ldr	x19, [x19, #8]
  58:	bl	0 <free>
  5c:	cbnz	x19, 50 <ctf_decl_fini+0x20>
  60:	add	x20, x20, #0x10
  64:	cmp	x20, x21
  68:	b.ne	48 <ctf_decl_fini+0x18>  // b.any
  6c:	ldp	x19, x20, [sp, #16]
  70:	ldr	x21, [sp, #32]
  74:	ldp	x29, x30, [sp], #48
  78:	ret

000000000000007c <ctf_decl_push>:
  7c:	stp	x29, x30, [sp, #-112]!
  80:	mov	x29, sp
  84:	stp	x19, x20, [sp, #16]
  88:	stp	x21, x22, [sp, #32]
  8c:	mov	x20, x0
  90:	str	x1, [sp, #72]
  94:	mov	x22, x2
  98:	mov	x1, x2
  9c:	add	x0, sp, #0x48
  a0:	bl	0 <ctf_lookup_by_id>
  a4:	cbz	x0, 104 <ctf_decl_push+0x88>
  a8:	stp	x23, x24, [sp, #48]
  ac:	mov	x21, x0
  b0:	ldr	x0, [sp, #72]
  b4:	ldr	x0, [x0]
  b8:	ldr	x1, [x0]
  bc:	ldr	w0, [x21, #4]
  c0:	blr	x1
  c4:	mov	w19, w0
  c8:	cmp	w0, #0xa
  cc:	b.eq	238 <ctf_decl_push+0x1bc>  // b.none
  d0:	b.hi	1b8 <ctf_decl_push+0x13c>  // b.pmore
  d4:	cmp	w0, #0x4
  d8:	b.eq	208 <ctf_decl_push+0x18c>  // b.none
  dc:	cmp	w0, #0x5
  e0:	b.ne	114 <ctf_decl_push+0x98>  // b.any
  e4:	ldr	w2, [x21, #8]
  e8:	ldr	x1, [sp, #72]
  ec:	mov	x0, x20
  f0:	bl	7c <ctf_decl_push>
  f4:	mov	w24, #0x0                   	// #0
  f8:	mov	w23, #0x1                   	// #1
  fc:	mov	w21, #0x3                   	// #3
 100:	b	148 <ctf_decl_push+0xcc>
 104:	ldr	x0, [sp, #72]
 108:	ldr	w0, [x0, #556]
 10c:	str	w0, [x20, #96]
 110:	b	1a8 <ctf_decl_push+0x12c>
 114:	cmp	w0, #0x3
 118:	b.ne	13c <ctf_decl_push+0xc0>  // b.any
 11c:	ldr	w2, [x21, #8]
 120:	ldr	x1, [sp, #72]
 124:	mov	x0, x20
 128:	bl	7c <ctf_decl_push>
 12c:	mov	w24, #0x0                   	// #0
 130:	mov	w23, #0x1                   	// #1
 134:	mov	w21, w23
 138:	b	148 <ctf_decl_push+0xcc>
 13c:	mov	w24, #0x0                   	// #0
 140:	mov	w23, #0x1                   	// #1
 144:	mov	w21, #0x0                   	// #0
 148:	mov	x0, #0x20                  	// #32
 14c:	bl	0 <malloc>
 150:	mov	x1, x0
 154:	cbz	x0, 294 <ctf_decl_push+0x218>
 158:	str	x22, [x0, #16]
 15c:	str	w19, [x0, #24]
 160:	str	w23, [x0, #28]
 164:	ubfiz	x0, x21, #4, #32
 168:	add	x0, x20, x0
 16c:	ldr	x0, [x0, #8]
 170:	cbz	x0, 2a4 <ctf_decl_push+0x228>
 174:	ldr	w0, [x20, #80]
 178:	cmp	w0, w21
 17c:	ccmp	w21, #0x1, #0x2, cc  // cc = lo, ul, last
 180:	b.ls	2bc <ctf_decl_push+0x240>  // b.plast
 184:	cmp	w19, #0x4
 188:	b.eq	198 <ctf_decl_push+0x11c>  // b.none
 18c:	cmp	w24, #0x0
 190:	ccmp	w21, #0x0, #0x0, ne  // ne = any
 194:	b.ne	2c4 <ctf_decl_push+0x248>  // b.any
 198:	ubfiz	x0, x21, #4, #32
 19c:	add	x0, x20, x0
 1a0:	bl	0 <ctf_list_prepend>
 1a4:	ldp	x23, x24, [sp, #48]
 1a8:	ldp	x19, x20, [sp, #16]
 1ac:	ldp	x21, x22, [sp, #32]
 1b0:	ldp	x29, x30, [sp], #112
 1b4:	ret
 1b8:	cmp	w0, #0xd
 1bc:	b.ls	274 <ctf_decl_push+0x1f8>  // b.plast
 1c0:	cmp	w0, #0xe
 1c4:	b.ne	1f8 <ctf_decl_push+0x17c>  // b.any
 1c8:	ldr	x21, [sp, #72]
 1cc:	mov	x1, x22
 1d0:	mov	x0, x21
 1d4:	bl	0 <ctf_type_reference>
 1d8:	mov	x2, x0
 1dc:	mov	x1, x21
 1e0:	mov	x0, x20
 1e4:	bl	7c <ctf_decl_push>
 1e8:	mov	w24, #0x0                   	// #0
 1ec:	mov	w23, #0x1                   	// #1
 1f0:	mov	w21, #0x0                   	// #0
 1f4:	b	148 <ctf_decl_push+0xcc>
 1f8:	mov	w24, #0x0                   	// #0
 1fc:	mov	w23, #0x1                   	// #1
 200:	mov	w21, #0x0                   	// #0
 204:	b	148 <ctf_decl_push+0xcc>
 208:	add	x2, sp, #0x58
 20c:	mov	x1, x22
 210:	ldr	x0, [sp, #72]
 214:	bl	0 <ctf_array_info>
 218:	ldr	x2, [sp, #88]
 21c:	ldr	x1, [sp, #72]
 220:	mov	x0, x20
 224:	bl	7c <ctf_decl_push>
 228:	ldr	w23, [sp, #104]
 22c:	mov	w24, #0x0                   	// #0
 230:	mov	w21, #0x2                   	// #2
 234:	b	148 <ctf_decl_push+0xcc>
 238:	ldr	w1, [x21]
 23c:	ldr	x0, [sp, #72]
 240:	bl	0 <ctf_strptr>
 244:	ldrb	w0, [x0]
 248:	cbz	w0, 25c <ctf_decl_push+0x1e0>
 24c:	mov	w24, #0x0                   	// #0
 250:	mov	w23, #0x1                   	// #1
 254:	mov	w21, #0x0                   	// #0
 258:	b	148 <ctf_decl_push+0xcc>
 25c:	ldr	w2, [x21, #8]
 260:	ldr	x1, [sp, #72]
 264:	mov	x0, x20
 268:	bl	7c <ctf_decl_push>
 26c:	ldp	x23, x24, [sp, #48]
 270:	b	1a8 <ctf_decl_push+0x12c>
 274:	ldr	w2, [x21, #8]
 278:	ldr	x1, [sp, #72]
 27c:	mov	x0, x20
 280:	bl	7c <ctf_decl_push>
 284:	ldr	w21, [x20, #80]
 288:	mov	w24, #0x1                   	// #1
 28c:	mov	w23, w24
 290:	b	148 <ctf_decl_push+0xcc>
 294:	mov	w0, #0xb                   	// #11
 298:	str	w0, [x20, #96]
 29c:	ldp	x23, x24, [sp, #48]
 2a0:	b	1a8 <ctf_decl_push+0x12c>
 2a4:	ldr	w0, [x20, #84]
 2a8:	add	w2, w0, #0x1
 2ac:	str	w2, [x20, #84]
 2b0:	add	x2, x20, w21, uxtw #2
 2b4:	str	w0, [x2, #64]
 2b8:	b	174 <ctf_decl_push+0xf8>
 2bc:	str	w21, [x20, #80]
 2c0:	b	184 <ctf_decl_push+0x108>
 2c4:	ubfiz	x0, x21, #4, #32
 2c8:	add	x0, x20, x0
 2cc:	bl	0 <ctf_list_append>
 2d0:	ldp	x23, x24, [sp, #48]
 2d4:	b	1a8 <ctf_decl_push+0x12c>

00000000000002d8 <ctf_decl_sprintf>:
 2d8:	stp	x29, x30, [sp, #-288]!
 2dc:	mov	x29, sp
 2e0:	str	x19, [sp, #16]
 2e4:	mov	x19, x0
 2e8:	str	x2, [sp, #240]
 2ec:	str	x3, [sp, #248]
 2f0:	str	x4, [sp, #256]
 2f4:	str	x5, [sp, #264]
 2f8:	str	x6, [sp, #272]
 2fc:	str	x7, [sp, #280]
 300:	str	q0, [sp, #112]
 304:	str	q1, [sp, #128]
 308:	str	q2, [sp, #144]
 30c:	str	q3, [sp, #160]
 310:	str	q4, [sp, #176]
 314:	str	q5, [sp, #192]
 318:	str	q6, [sp, #208]
 31c:	str	q7, [sp, #224]
 320:	ldr	w0, [x0, #100]
 324:	cbz	w0, 334 <ctf_decl_sprintf+0x5c>
 328:	ldr	x19, [sp, #16]
 32c:	ldp	x29, x30, [sp], #288
 330:	ret
 334:	add	x0, sp, #0x120
 338:	str	x0, [sp, #80]
 33c:	str	x0, [sp, #88]
 340:	add	x0, sp, #0xf0
 344:	str	x0, [sp, #96]
 348:	mov	w0, #0xffffffd0            	// #-48
 34c:	str	w0, [sp, #104]
 350:	mov	w0, #0xffffff80            	// #-128
 354:	str	w0, [sp, #108]
 358:	ldp	x2, x3, [sp, #80]
 35c:	stp	x2, x3, [sp, #32]
 360:	ldp	x2, x3, [sp, #96]
 364:	stp	x2, x3, [sp, #48]
 368:	add	x2, sp, #0x20
 36c:	add	x0, sp, #0x48
 370:	bl	0 <vasprintf>
 374:	cmp	w0, #0x0
 378:	b.gt	3a8 <ctf_decl_sprintf+0xd0>
 37c:	tbnz	w0, #31, 388 <ctf_decl_sprintf+0xb0>
 380:	ldr	x0, [x19, #88]
 384:	cbnz	x0, 39c <ctf_decl_sprintf+0xc4>
 388:	ldr	x0, [x19, #88]
 38c:	bl	0 <free>
 390:	str	xzr, [x19, #88]
 394:	mov	w0, #0x1                   	// #1
 398:	str	w0, [x19, #100]
 39c:	ldr	x0, [sp, #72]
 3a0:	bl	0 <free>
 3a4:	b	328 <ctf_decl_sprintf+0x50>
 3a8:	ldr	x1, [sp, #72]
 3ac:	ldr	x0, [x19, #88]
 3b0:	bl	0 <ctf_str_append>
 3b4:	cbz	x0, 380 <ctf_decl_sprintf+0xa8>
 3b8:	str	x0, [x19, #88]
 3bc:	b	39c <ctf_decl_sprintf+0xc4>

00000000000003c0 <ctf_decl_buf>:
 3c0:	ldr	x0, [x0, #88]
 3c4:	ret

ctf-error.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_errmsg>:
   0:	sub	w1, w0, #0x3e8
   4:	cmp	w1, #0x33
   8:	b.hi	30 <ctf_errmsg+0x30>  // b.pmore
   c:	mov	w0, w1
  10:	adrp	x1, 0 <ctf_errmsg>
  14:	add	x1, x1, #0x0
  18:	ldr	x0, [x1, w0, sxtw #3]
  1c:	adrp	x1, 0 <ctf_errmsg>
  20:	add	x1, x1, #0x0
  24:	cmp	x0, #0x0
  28:	csel	x0, x1, x0, eq  // eq = none
  2c:	ret
  30:	stp	x29, x30, [sp, #-16]!
  34:	mov	x29, sp
  38:	bl	0 <ctf_strerror>
  3c:	adrp	x1, 0 <ctf_errmsg>
  40:	add	x1, x1, #0x0
  44:	cmp	x0, #0x0
  48:	csel	x0, x1, x0, eq  // eq = none
  4c:	ldp	x29, x30, [sp], #16
  50:	ret

0000000000000054 <ctf_errno>:
  54:	ldr	w0, [x0, #556]
  58:	ret

ctf-hash.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_hashtab_traverse>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0]
   c:	ldr	x3, [x1]
  10:	ldr	x2, [x1, #8]
  14:	ldr	x1, [x0, #8]
  18:	ldr	x0, [x0]
  1c:	blr	x3
  20:	mov	w0, #0x1                   	// #1
  24:	ldp	x29, x30, [sp], #16
  28:	ret

000000000000002c <ctf_dynhash_item_free>:
  2c:	stp	x29, x30, [sp, #-32]!
  30:	mov	x29, sp
  34:	str	x19, [sp, #16]
  38:	mov	x19, x0
  3c:	ldr	x1, [x0, #16]
  40:	cbz	x1, 50 <ctf_dynhash_item_free+0x24>
  44:	ldr	x0, [x0]
  48:	cbz	x0, 50 <ctf_dynhash_item_free+0x24>
  4c:	blr	x1
  50:	ldr	x1, [x19, #24]
  54:	cbz	x1, 64 <ctf_dynhash_item_free+0x38>
  58:	ldr	x0, [x19, #8]
  5c:	cbz	x0, 64 <ctf_dynhash_item_free+0x38>
  60:	blr	x1
  64:	mov	x0, x19
  68:	bl	0 <free>
  6c:	ldr	x19, [sp, #16]
  70:	ldp	x29, x30, [sp], #32
  74:	ret

0000000000000078 <ctf_hashtab_insert>:
  78:	stp	x29, x30, [sp, #-96]!
  7c:	mov	x29, sp
  80:	stp	x19, x20, [sp, #16]
  84:	stp	x21, x22, [sp, #32]
  88:	str	x23, [sp, #48]
  8c:	mov	x22, x1
  90:	mov	x23, x2
  94:	mov	x21, x3
  98:	mov	x20, x4
  9c:	stp	xzr, xzr, [sp, #72]
  a0:	str	xzr, [sp, #88]
  a4:	str	x1, [sp, #64]
  a8:	mov	w2, #0x1                   	// #1
  ac:	add	x1, sp, #0x40
  b0:	bl	0 <htab_find_slot>
  b4:	mov	x19, x0
  b8:	cbz	x0, 10c <ctf_hashtab_insert+0x94>
  bc:	ldr	x0, [x0]
  c0:	cbz	x0, 11c <ctf_hashtab_insert+0xa4>
  c4:	cbz	x21, d0 <ctf_hashtab_insert+0x58>
  c8:	ldr	x0, [x0]
  cc:	blr	x21
  d0:	cbz	x20, e0 <ctf_hashtab_insert+0x68>
  d4:	ldr	x0, [x19]
  d8:	ldr	x0, [x0, #8]
  dc:	blr	x20
  e0:	ldr	x0, [x19]
  e4:	str	x22, [x0]
  e8:	ldr	x0, [x19]
  ec:	str	x23, [x0, #8]
  f0:	ldr	x19, [x19]
  f4:	mov	x0, x19
  f8:	ldp	x19, x20, [sp, #16]
  fc:	ldp	x21, x22, [sp, #32]
 100:	ldr	x23, [sp, #48]
 104:	ldp	x29, x30, [sp], #96
 108:	ret
 10c:	bl	0 <__errno_location>
 110:	mov	w1, #0xfffffff4            	// #-12
 114:	str	w1, [x0]
 118:	b	f4 <ctf_hashtab_insert+0x7c>
 11c:	mov	x0, #0x20                  	// #32
 120:	bl	0 <malloc>
 124:	str	x0, [x19]
 128:	cbnz	x0, e0 <ctf_hashtab_insert+0x68>
 12c:	mov	x19, x0
 130:	b	f4 <ctf_hashtab_insert+0x7c>

0000000000000134 <ctf_hashtab_traverse_remove>:
 134:	stp	x29, x30, [sp, #-32]!
 138:	mov	x29, sp
 13c:	stp	x19, x20, [sp, #16]
 140:	mov	x20, x0
 144:	mov	x19, x1
 148:	ldr	x0, [x0]
 14c:	ldr	x3, [x1, #8]
 150:	ldr	x2, [x1, #16]
 154:	ldr	x1, [x0, #8]
 158:	ldr	x0, [x0]
 15c:	blr	x3
 160:	cbnz	w0, 174 <ctf_hashtab_traverse_remove+0x40>
 164:	mov	w0, #0x1                   	// #1
 168:	ldp	x19, x20, [sp, #16]
 16c:	ldp	x29, x30, [sp], #32
 170:	ret
 174:	mov	x1, x20
 178:	ldr	x0, [x19]
 17c:	bl	0 <htab_clear_slot>
 180:	b	164 <ctf_hashtab_traverse_remove+0x30>

0000000000000184 <ctf_hash_integer>:
 184:	stp	x29, x30, [sp, #-16]!
 188:	mov	x29, sp
 18c:	adrp	x1, 0 <htab_hash_pointer>
 190:	ldr	x1, [x1]
 194:	ldr	x0, [x0]
 198:	blr	x1
 19c:	ldp	x29, x30, [sp], #16
 1a0:	ret

00000000000001a4 <ctf_hash_eq_integer>:
 1a4:	stp	x29, x30, [sp, #-16]!
 1a8:	mov	x29, sp
 1ac:	adrp	x2, 0 <htab_eq_pointer>
 1b0:	ldr	x2, [x2]
 1b4:	ldr	x1, [x1]
 1b8:	ldr	x0, [x0]
 1bc:	blr	x2
 1c0:	ldp	x29, x30, [sp], #16
 1c4:	ret

00000000000001c8 <ctf_hash_string>:
 1c8:	stp	x29, x30, [sp, #-16]!
 1cc:	mov	x29, sp
 1d0:	ldr	x0, [x0]
 1d4:	bl	0 <htab_hash_string>
 1d8:	ldp	x29, x30, [sp], #16
 1dc:	ret

00000000000001e0 <ctf_hash_eq_string>:
 1e0:	stp	x29, x30, [sp, #-16]!
 1e4:	mov	x29, sp
 1e8:	ldr	x1, [x1]
 1ec:	ldr	x0, [x0]
 1f0:	bl	0 <strcmp>
 1f4:	cmp	w0, #0x0
 1f8:	cset	w0, eq  // eq = none
 1fc:	ldp	x29, x30, [sp], #16
 200:	ret

0000000000000204 <ctf_hash_type_mapping_key>:
 204:	stp	x29, x30, [sp, #-48]!
 208:	mov	x29, sp
 20c:	stp	x19, x20, [sp, #16]
 210:	str	x21, [sp, #32]
 214:	ldr	x20, [x0]
 218:	adrp	x21, 0 <htab_hash_pointer>
 21c:	ldr	x1, [x21]
 220:	ldr	x0, [x20]
 224:	blr	x1
 228:	mov	w19, w0
 22c:	ldr	x1, [x21]
 230:	ldr	x0, [x20, #8]
 234:	blr	x1
 238:	mov	w1, #0x3b                  	// #59
 23c:	madd	w0, w0, w1, w19
 240:	ldp	x19, x20, [sp, #16]
 244:	ldr	x21, [sp, #32]
 248:	ldp	x29, x30, [sp], #48
 24c:	ret

0000000000000250 <ctf_hash_eq_type_mapping_key>:
 250:	ldr	x2, [x0]
 254:	ldr	x0, [x1]
 258:	ldr	x3, [x2]
 25c:	ldr	x1, [x0]
 260:	cmp	x3, x1
 264:	b.eq	270 <ctf_hash_eq_type_mapping_key+0x20>  // b.none
 268:	mov	w0, #0x0                   	// #0
 26c:	ret
 270:	ldr	x1, [x2, #8]
 274:	ldr	x0, [x0, #8]
 278:	cmp	x1, x0
 27c:	cset	w0, eq  // eq = none
 280:	b	26c <ctf_hash_eq_type_mapping_key+0x1c>

0000000000000284 <ctf_dynhash_create>:
 284:	stp	x29, x30, [sp, #-64]!
 288:	mov	x29, sp
 28c:	stp	x19, x20, [sp, #16]
 290:	stp	x21, x22, [sp, #32]
 294:	str	x23, [sp, #48]
 298:	mov	x23, x0
 29c:	mov	x20, x1
 2a0:	mov	x22, x2
 2a4:	mov	x21, x3
 2a8:	mov	x0, #0x18                  	// #24
 2ac:	bl	0 <malloc>
 2b0:	mov	x19, x0
 2b4:	cbz	x0, 2f4 <ctf_dynhash_create+0x70>
 2b8:	adrp	x5, 0 <free>
 2bc:	add	x5, x5, #0x0
 2c0:	adrp	x4, 0 <xcalloc>
 2c4:	add	x4, x4, #0x0
 2c8:	adrp	x3, 0 <ctf_hashtab_traverse>
 2cc:	add	x3, x3, #0x0
 2d0:	mov	x2, x20
 2d4:	mov	x1, x23
 2d8:	mov	x0, #0x7                   	// #7
 2dc:	bl	0 <htab_create_alloc>
 2e0:	mov	x20, x0
 2e4:	str	x0, [x19]
 2e8:	cbz	x0, 30c <ctf_dynhash_create+0x88>
 2ec:	str	x22, [x19, #8]
 2f0:	str	x21, [x19, #16]
 2f4:	mov	x0, x19
 2f8:	ldp	x19, x20, [sp, #16]
 2fc:	ldp	x21, x22, [sp, #32]
 300:	ldr	x23, [sp, #48]
 304:	ldp	x29, x30, [sp], #64
 308:	ret
 30c:	mov	x0, x19
 310:	bl	0 <free>
 314:	mov	x19, x20
 318:	b	2f4 <ctf_dynhash_create+0x70>

000000000000031c <ctf_dynhash_insert>:
 31c:	stp	x29, x30, [sp, #-32]!
 320:	mov	x29, sp
 324:	str	x19, [sp, #16]
 328:	mov	x19, x0
 32c:	ldr	x4, [x0, #16]
 330:	ldr	x3, [x0, #8]
 334:	ldr	x0, [x0]
 338:	bl	78 <ctf_hashtab_insert>
 33c:	cbz	x0, 360 <ctf_dynhash_insert+0x44>
 340:	ldr	x1, [x19, #8]
 344:	str	x1, [x0, #16]
 348:	ldr	x1, [x19, #16]
 34c:	str	x1, [x0, #24]
 350:	mov	w0, #0x0                   	// #0
 354:	ldr	x19, [sp, #16]
 358:	ldp	x29, x30, [sp], #32
 35c:	ret
 360:	bl	0 <__errno_location>
 364:	ldr	w0, [x0]
 368:	b	354 <ctf_dynhash_insert+0x38>

000000000000036c <ctf_dynhash_remove>:
 36c:	stp	x29, x30, [sp, #-48]!
 370:	mov	x29, sp
 374:	str	x1, [sp, #16]
 378:	str	xzr, [sp, #24]
 37c:	str	xzr, [sp, #32]
 380:	str	xzr, [sp, #40]
 384:	add	x1, sp, #0x10
 388:	ldr	x0, [x0]
 38c:	bl	0 <htab_remove_elt>
 390:	ldp	x29, x30, [sp], #48
 394:	ret

0000000000000398 <ctf_dynhash_empty>:
 398:	stp	x29, x30, [sp, #-16]!
 39c:	mov	x29, sp
 3a0:	ldr	x0, [x0]
 3a4:	bl	0 <htab_empty>
 3a8:	ldp	x29, x30, [sp], #16
 3ac:	ret

00000000000003b0 <ctf_dynhash_lookup>:
 3b0:	stp	x29, x30, [sp, #-48]!
 3b4:	mov	x29, sp
 3b8:	stp	xzr, xzr, [sp, #24]
 3bc:	str	xzr, [sp, #40]
 3c0:	str	x1, [sp, #16]
 3c4:	mov	w2, #0x0                   	// #0
 3c8:	add	x1, sp, #0x10
 3cc:	ldr	x0, [x0]
 3d0:	bl	0 <htab_find_slot>
 3d4:	cbz	x0, 3e0 <ctf_dynhash_lookup+0x30>
 3d8:	ldr	x0, [x0]
 3dc:	ldr	x0, [x0, #8]
 3e0:	ldp	x29, x30, [sp], #48
 3e4:	ret

00000000000003e8 <ctf_dynhash_iter>:
 3e8:	stp	x29, x30, [sp, #-32]!
 3ec:	mov	x29, sp
 3f0:	str	x1, [sp, #16]
 3f4:	str	x2, [sp, #24]
 3f8:	add	x2, sp, #0x10
 3fc:	adrp	x1, 0 <ctf_hashtab_traverse>
 400:	add	x1, x1, #0x0
 404:	ldr	x0, [x0]
 408:	bl	0 <htab_traverse>
 40c:	ldp	x29, x30, [sp], #32
 410:	ret

0000000000000414 <ctf_dynhash_iter_remove>:
 414:	stp	x29, x30, [sp, #-48]!
 418:	mov	x29, sp
 41c:	ldr	x0, [x0]
 420:	str	x0, [sp, #24]
 424:	str	x1, [sp, #32]
 428:	str	x2, [sp, #40]
 42c:	add	x2, sp, #0x18
 430:	adrp	x1, 0 <ctf_hashtab_traverse>
 434:	add	x1, x1, #0x0
 438:	bl	0 <htab_traverse>
 43c:	ldp	x29, x30, [sp], #48
 440:	ret

0000000000000444 <ctf_dynhash_destroy>:
 444:	stp	x29, x30, [sp, #-32]!
 448:	mov	x29, sp
 44c:	str	x19, [sp, #16]
 450:	mov	x19, x0
 454:	cbz	x0, 460 <ctf_dynhash_destroy+0x1c>
 458:	ldr	x0, [x0]
 45c:	bl	0 <htab_delete>
 460:	mov	x0, x19
 464:	bl	0 <free>
 468:	ldr	x19, [sp, #16]
 46c:	ldp	x29, x30, [sp], #32
 470:	ret

0000000000000474 <ctf_hash_create>:
 474:	stp	x29, x30, [sp, #-16]!
 478:	mov	x29, sp
 47c:	adrp	x3, 0 <free>
 480:	add	x3, x3, #0x0
 484:	mov	x5, x3
 488:	adrp	x4, 0 <xcalloc>
 48c:	add	x4, x4, #0x0
 490:	bl	0 <htab_create_alloc>
 494:	ldp	x29, x30, [sp], #16
 498:	ret

000000000000049c <ctf_hash_size>:
 49c:	stp	x29, x30, [sp, #-16]!
 4a0:	mov	x29, sp
 4a4:	bl	0 <htab_elements>
 4a8:	ldp	x29, x30, [sp], #16
 4ac:	ret

00000000000004b0 <ctf_hash_insert_type>:
 4b0:	stp	x29, x30, [sp, #-48]!
 4b4:	mov	x29, sp
 4b8:	stp	x19, x20, [sp, #16]
 4bc:	stp	x21, x22, [sp, #32]
 4c0:	mov	x22, x0
 4c4:	mov	x21, x1
 4c8:	mov	w19, w2
 4cc:	mov	w20, w3
 4d0:	mov	w1, w3
 4d4:	mov	x0, x21
 4d8:	bl	0 <ctf_strraw>
 4dc:	cbz	w19, 554 <ctf_hash_insert_type+0xa4>
 4e0:	mov	x1, x0
 4e4:	cbz	x0, 504 <ctf_hash_insert_type+0x54>
 4e8:	ldrb	w2, [x0]
 4ec:	mov	w0, #0x0                   	// #0
 4f0:	cbnz	w2, 528 <ctf_hash_insert_type+0x78>
 4f4:	ldp	x19, x20, [sp, #16]
 4f8:	ldp	x21, x22, [sp, #32]
 4fc:	ldp	x29, x30, [sp], #48
 500:	ret
 504:	mov	w0, #0x3f9                 	// #1017
 508:	tbz	w20, #31, 4f4 <ctf_hash_insert_type+0x44>
 50c:	ldr	x1, [x21, #128]
 510:	cbnz	x1, 4f4 <ctf_hash_insert_type+0x44>
 514:	ldr	x0, [x21, #352]
 518:	cmp	x0, #0x0
 51c:	cset	w0, ne  // ne = any
 520:	add	w0, w0, #0x3f8
 524:	b	4f4 <ctf_hash_insert_type+0x44>
 528:	mov	x4, #0x0                   	// #0
 52c:	mov	x3, #0x0                   	// #0
 530:	mov	w2, w19
 534:	mov	x0, x22
 538:	bl	78 <ctf_hashtab_insert>
 53c:	mov	x1, x0
 540:	mov	w0, #0x0                   	// #0
 544:	cbnz	x1, 4f4 <ctf_hash_insert_type+0x44>
 548:	bl	0 <__errno_location>
 54c:	ldr	w0, [x0]
 550:	b	4f4 <ctf_hash_insert_type+0x44>
 554:	mov	w0, #0x16                  	// #22
 558:	b	4f4 <ctf_hash_insert_type+0x44>

000000000000055c <ctf_hash_define_type>:
 55c:	stp	x29, x30, [sp, #-16]!
 560:	mov	x29, sp
 564:	bl	4b0 <ctf_hash_insert_type>
 568:	ldp	x29, x30, [sp], #16
 56c:	ret

0000000000000570 <ctf_hash_lookup_type>:
 570:	stp	x29, x30, [sp, #-48]!
 574:	mov	x29, sp
 578:	stp	xzr, xzr, [sp, #24]
 57c:	str	xzr, [sp, #40]
 580:	str	x2, [sp, #16]
 584:	mov	w2, #0x0                   	// #0
 588:	add	x1, sp, #0x10
 58c:	bl	0 <htab_find_slot>
 590:	cbz	x0, 5a4 <ctf_hash_lookup_type+0x34>
 594:	ldr	x0, [x0]
 598:	ldr	x0, [x0, #8]
 59c:	ldp	x29, x30, [sp], #48
 5a0:	ret
 5a4:	mov	x0, #0x0                   	// #0
 5a8:	b	59c <ctf_hash_lookup_type+0x2c>

00000000000005ac <ctf_hash_destroy>:
 5ac:	cbz	x0, 5c4 <ctf_hash_destroy+0x18>
 5b0:	stp	x29, x30, [sp, #-16]!
 5b4:	mov	x29, sp
 5b8:	bl	0 <htab_delete>
 5bc:	ldp	x29, x30, [sp], #16
 5c0:	ret
 5c4:	ret

ctf-labels.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <label_info_cb>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	mov	x19, x2
  14:	ldr	x1, [x2]
  18:	bl	0 <strcmp>
  1c:	cbz	w0, 30 <label_info_cb+0x30>
  20:	mov	w0, #0x0                   	// #0
  24:	ldp	x19, x20, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ret
  30:	ldr	x1, [x19, #8]
  34:	mov	w0, #0x1                   	// #1
  38:	cbz	x1, 24 <label_info_cb+0x24>
  3c:	ldr	x0, [x20]
  40:	str	x0, [x1]
  44:	mov	w0, #0x1                   	// #1
  48:	b	24 <label_info_cb+0x24>

000000000000004c <ctf_label_topmost>:
  4c:	stp	x29, x30, [sp, #-32]!
  50:	mov	x29, sp
  54:	stp	x19, x20, [sp, #16]
  58:	mov	x19, x0
  5c:	ldr	x1, [x0, #32]
  60:	ldr	w0, [x1, #16]
  64:	ldr	w1, [x1, #20]
  68:	sub	w1, w1, w0
  6c:	cmp	w1, #0x7
  70:	b.ls	a8 <ctf_label_topmost+0x5c>  // b.plast
  74:	ldr	x2, [x19, #408]
  78:	and	x1, x1, #0xfffffff8
  7c:	add	x1, x2, x1
  80:	add	x0, x1, w0, uxtw
  84:	ldur	w1, [x0, #-8]
  88:	mov	x0, x19
  8c:	bl	0 <ctf_strraw>
  90:	mov	x20, x0
  94:	cbz	x0, bc <ctf_label_topmost+0x70>
  98:	mov	x0, x20
  9c:	ldp	x19, x20, [sp, #16]
  a0:	ldp	x29, x30, [sp], #32
  a4:	ret
  a8:	mov	w1, #0x409                 	// #1033
  ac:	mov	x0, x19
  b0:	bl	0 <ctf_set_errno>
  b4:	mov	x20, #0x0                   	// #0
  b8:	b	98 <ctf_label_topmost+0x4c>
  bc:	mov	w1, #0x3ef                 	// #1007
  c0:	mov	x0, x19
  c4:	bl	0 <ctf_set_errno>
  c8:	b	98 <ctf_label_topmost+0x4c>

00000000000000cc <ctf_label_iter>:
  cc:	stp	x29, x30, [sp, #-80]!
  d0:	mov	x29, sp
  d4:	stp	x19, x20, [sp, #16]
  d8:	stp	x21, x22, [sp, #32]
  dc:	stp	x23, x24, [sp, #48]
  e0:	mov	x21, x0
  e4:	mov	x23, x1
  e8:	mov	x22, x2
  ec:	ldr	x0, [x0, #32]
  f0:	ldr	w1, [x0, #16]
  f4:	ldr	x19, [x21, #408]
  f8:	add	x19, x19, w1, uxtw
  fc:	ldr	w0, [x0, #20]
 100:	sub	w0, w0, w1
 104:	lsr	w24, w0, #3
 108:	mov	w20, #0x0                   	// #0
 10c:	cmp	w0, #0x7
 110:	b.ls	150 <ctf_label_iter+0x84>  // b.plast
 114:	ldr	w1, [x19]
 118:	mov	x0, x21
 11c:	bl	0 <ctf_strraw>
 120:	cbz	x0, 160 <ctf_label_iter+0x94>
 124:	ldr	w1, [x19, #4]
 128:	str	x1, [sp, #72]
 12c:	mov	x2, x22
 130:	add	x1, sp, #0x48
 134:	blr	x23
 138:	cbnz	w0, 180 <ctf_label_iter+0xb4>
 13c:	add	w20, w20, #0x1
 140:	add	x19, x19, #0x8
 144:	cmp	w20, w24
 148:	b.cc	114 <ctf_label_iter+0x48>  // b.lo, b.ul, b.last
 14c:	b	180 <ctf_label_iter+0xb4>
 150:	mov	w1, #0x409                 	// #1033
 154:	mov	x0, x21
 158:	bl	0 <ctf_set_errno>
 15c:	b	180 <ctf_label_iter+0xb4>
 160:	ldr	w2, [x19, #4]
 164:	ldr	w1, [x19]
 168:	adrp	x0, 0 <label_info_cb>
 16c:	add	x0, x0, #0x0
 170:	bl	0 <ctf_dprintf>
 174:	mov	w1, #0x3ef                 	// #1007
 178:	mov	x0, x21
 17c:	bl	0 <ctf_set_errno>
 180:	ldp	x19, x20, [sp, #16]
 184:	ldp	x21, x22, [sp, #32]
 188:	ldp	x23, x24, [sp, #48]
 18c:	ldp	x29, x30, [sp], #80
 190:	ret

0000000000000194 <ctf_label_info>:
 194:	stp	x29, x30, [sp, #-48]!
 198:	mov	x29, sp
 19c:	str	x19, [sp, #16]
 1a0:	mov	x19, x0
 1a4:	str	x1, [sp, #32]
 1a8:	str	x2, [sp, #40]
 1ac:	add	x2, sp, #0x20
 1b0:	adrp	x1, 0 <label_info_cb>
 1b4:	add	x1, x1, #0x0
 1b8:	bl	cc <ctf_label_iter>
 1bc:	tbnz	w0, #31, 1cc <ctf_label_info+0x38>
 1c0:	cmp	w0, #0x1
 1c4:	b.ne	1d8 <ctf_label_info+0x44>  // b.any
 1c8:	mov	w0, #0x0                   	// #0
 1cc:	ldr	x19, [sp, #16]
 1d0:	ldp	x29, x30, [sp], #48
 1d4:	ret
 1d8:	mov	w1, #0x408                 	// #1032
 1dc:	mov	x0, x19
 1e0:	bl	0 <ctf_set_errno>
 1e4:	b	1cc <ctf_label_info+0x38>

ctf-link.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_arc_close_thunk>:
       0:	stp	x29, x30, [sp, #-16]!
       4:	mov	x29, sp
       8:	bl	0 <ctf_arc_close>
       c:	ldp	x29, x30, [sp], #16
      10:	ret

0000000000000014 <ctf_file_close_thunk>:
      14:	stp	x29, x30, [sp, #-16]!
      18:	mov	x29, sp
      1c:	bl	0 <ctf_file_close>
      20:	ldp	x29, x30, [sp], #16
      24:	ret

0000000000000028 <ctf_create_per_cu>:
      28:	stp	x29, x30, [sp, #-80]!
      2c:	mov	x29, sp
      30:	stp	x19, x20, [sp, #16]
      34:	stp	x21, x22, [sp, #32]
      38:	stp	x23, x24, [sp, #48]
      3c:	mov	x19, x0
      40:	mov	x22, x1
      44:	mov	x23, x2
      48:	ldr	x0, [x0, #672]
      4c:	mov	x21, x1
      50:	cbz	x0, 60 <ctf_create_per_cu+0x38>
      54:	bl	0 <ctf_dynhash_lookup>
      58:	mov	x21, x0
      5c:	cbz	x0, 8c <ctf_create_per_cu+0x64>
      60:	mov	x1, x21
      64:	ldr	x0, [x19, #656]
      68:	bl	0 <ctf_dynhash_lookup>
      6c:	mov	x20, x0
      70:	cbz	x0, a4 <ctf_create_per_cu+0x7c>
      74:	mov	x0, x20
      78:	ldp	x19, x20, [sp, #16]
      7c:	ldp	x21, x22, [sp, #32]
      80:	ldp	x23, x24, [sp, #48]
      84:	ldp	x29, x30, [sp], #80
      88:	ret
      8c:	mov	x1, x23
      90:	ldr	x0, [x19, #672]
      94:	bl	0 <ctf_dynhash_lookup>
      98:	cmp	x0, #0x0
      9c:	csel	x21, x0, x22, ne  // ne = any
      a0:	b	60 <ctf_create_per_cu+0x38>
      a4:	add	x0, sp, #0x4c
      a8:	bl	0 <ctf_create>
      ac:	mov	x24, x0
      b0:	cbz	x0, 108 <ctf_create_per_cu+0xe0>
      b4:	mov	x0, x21
      b8:	bl	0 <strdup>
      bc:	mov	x21, x0
      c0:	cbz	x0, 13c <ctf_create_per_cu+0x114>
      c4:	mov	x2, x24
      c8:	mov	x1, x0
      cc:	ldr	x0, [x19, #656]
      d0:	bl	0 <ctf_dynhash_insert>
      d4:	tbnz	w0, #31, 13c <ctf_create_per_cu+0x114>
      d8:	mov	x1, x19
      dc:	mov	x0, x24
      e0:	bl	0 <ctf_import>
      e4:	mov	x1, x23
      e8:	mov	x0, x24
      ec:	bl	0 <ctf_cuname_set>
      f0:	adrp	x1, 0 <_CTF_SECTION>
      f4:	add	x1, x1, #0x0
      f8:	mov	x0, x24
      fc:	bl	0 <ctf_parent_name_set>
     100:	mov	x20, x24
     104:	b	74 <ctf_create_per_cu+0x4c>
     108:	ldr	w0, [sp, #76]
     10c:	bl	0 <ctf_errmsg>
     110:	mov	x3, x0
     114:	mov	x2, x22
     118:	mov	x1, x23
     11c:	adrp	x0, 0 <ctf_arc_close_thunk>
     120:	add	x0, x0, #0x0
     124:	bl	0 <ctf_dprintf>
     128:	ldr	w1, [sp, #76]
     12c:	mov	x0, x19
     130:	bl	0 <ctf_set_errno>
     134:	mov	x20, x24
     138:	b	74 <ctf_create_per_cu+0x4c>
     13c:	mov	x0, x21
     140:	bl	0 <free>
     144:	mov	x0, x24
     148:	bl	0 <ctf_file_close>
     14c:	mov	w1, #0xc                   	// #12
     150:	mov	x0, x19
     154:	bl	0 <ctf_set_errno>
     158:	b	74 <ctf_create_per_cu+0x4c>

000000000000015c <ctf_change_parent_name>:
     15c:	stp	x29, x30, [sp, #-16]!
     160:	mov	x29, sp
     164:	mov	x0, x1
     168:	mov	x1, x2
     16c:	bl	0 <ctf_parent_name_set>
     170:	ldp	x29, x30, [sp], #16
     174:	ret

0000000000000178 <empty_link_type_mapping>:
     178:	ldr	x0, [x1, #664]
     17c:	cbz	x0, 194 <empty_link_type_mapping+0x1c>
     180:	stp	x29, x30, [sp, #-16]!
     184:	mov	x29, sp
     188:	bl	0 <ctf_dynhash_empty>
     18c:	ldp	x29, x30, [sp], #16
     190:	ret
     194:	ret

0000000000000198 <ctf_link_one_input_archive_member>:
     198:	stp	x29, x30, [sp, #-48]!
     19c:	mov	x29, sp
     1a0:	stp	x19, x20, [sp, #16]
     1a4:	str	x21, [sp, #32]
     1a8:	mov	x21, x0
     1ac:	mov	x20, x1
     1b0:	mov	x19, x2
     1b4:	adrp	x1, 0 <_CTF_SECTION>
     1b8:	add	x1, x1, #0x0
     1bc:	mov	x0, x20
     1c0:	bl	0 <strcmp>
     1c4:	cbnz	w0, 204 <ctf_link_one_input_archive_member+0x6c>
     1c8:	ldr	w1, [x19, #48]
     1cc:	cbnz	w1, 280 <ctf_link_one_input_archive_member+0xe8>
     1d0:	adrp	x0, 0 <ctf_arc_close_thunk>
     1d4:	add	x0, x0, #0x0
     1d8:	bl	0 <strdup>
     1dc:	str	x0, [x19, #40]
     1e0:	cbz	x0, 290 <ctf_link_one_input_archive_member+0xf8>
     1e4:	ldr	x1, [x19, #8]
     1e8:	bl	0 <ctf_str_append>
     1ec:	cbz	x0, 1f8 <ctf_link_one_input_archive_member+0x60>
     1f0:	str	x0, [x19, #40]
     1f4:	b	22c <ctf_link_one_input_archive_member+0x94>
     1f8:	ldr	x0, [x19, #40]
     1fc:	bl	0 <free>
     200:	b	224 <ctf_link_one_input_archive_member+0x8c>
     204:	mov	x0, x20
     208:	bl	0 <strdup>
     20c:	str	x0, [x19, #40]
     210:	ldr	x1, [x19, #24]
     214:	mov	x0, x21
     218:	bl	0 <ctf_import>
     21c:	mov	w0, #0x1                   	// #1
     220:	str	w0, [x19, #56]
     224:	ldr	x0, [x19, #40]
     228:	cbz	x0, 290 <ctf_link_one_input_archive_member+0xf8>
     22c:	str	x20, [x19, #32]
     230:	mov	x2, #0x5                   	// #5
     234:	adrp	x1, 0 <ctf_arc_close_thunk>
     238:	add	x1, x1, #0x0
     23c:	mov	x0, x20
     240:	bl	0 <strncmp>
     244:	cbnz	w0, 250 <ctf_link_one_input_archive_member+0xb8>
     248:	add	x20, x20, #0x5
     24c:	str	x20, [x19, #32]
     250:	str	x21, [x19, #16]
     254:	mov	x2, x19
     258:	adrp	x1, 0 <ctf_arc_close_thunk>
     25c:	add	x1, x1, #0x0
     260:	mov	x0, x21
     264:	bl	0 <ctf_type_iter_all>
     268:	mov	w20, w0
     26c:	tbz	w0, #31, 2a0 <ctf_link_one_input_archive_member+0x108>
     270:	str	wzr, [x19, #56]
     274:	ldr	x0, [x19, #40]
     278:	bl	0 <free>
     27c:	asr	w0, w20, #31
     280:	ldp	x19, x20, [sp, #16]
     284:	ldr	x21, [sp, #32]
     288:	ldp	x29, x30, [sp], #48
     28c:	ret
     290:	mov	w1, #0xc                   	// #12
     294:	mov	x0, x21
     298:	bl	0 <ctf_set_errno>
     29c:	b	280 <ctf_link_one_input_archive_member+0xe8>
     2a0:	mov	x2, x19
     2a4:	adrp	x1, 0 <ctf_arc_close_thunk>
     2a8:	add	x1, x1, #0x0
     2ac:	mov	x0, x21
     2b0:	bl	0 <ctf_variable_iter>
     2b4:	mov	w20, w0
     2b8:	b	270 <ctf_link_one_input_archive_member+0xd8>

00000000000002bc <ctf_link_one_input_archive>:
     2bc:	stp	x29, x30, [sp, #-48]!
     2c0:	mov	x29, sp
     2c4:	stp	x19, x20, [sp, #16]
     2c8:	mov	x20, x1
     2cc:	mov	x19, x2
     2d0:	str	x0, [x2, #8]
     2d4:	str	wzr, [x2, #48]
     2d8:	add	x2, sp, #0x2c
     2dc:	mov	x1, #0x0                   	// #0
     2e0:	mov	x0, x20
     2e4:	bl	0 <ctf_arc_open_by_name>
     2e8:	str	x0, [x19, #24]
     2ec:	cbz	x0, 36c <ctf_link_one_input_archive+0xb0>
     2f0:	mov	x2, x19
     2f4:	adrp	x1, 0 <_CTF_SECTION>
     2f8:	add	x1, x1, #0x0
     2fc:	bl	198 <ctf_link_one_input_archive_member>
     300:	tbnz	w0, #31, 39c <ctf_link_one_input_archive+0xe0>
     304:	mov	w0, #0x1                   	// #1
     308:	str	w0, [x19, #48]
     30c:	mov	x2, x19
     310:	adrp	x1, 0 <ctf_arc_close_thunk>
     314:	add	x1, x1, #0x0
     318:	mov	x0, x20
     31c:	bl	0 <ctf_archive_iter>
     320:	tbnz	w0, #31, 3a8 <ctf_link_one_input_archive+0xec>
     324:	mov	w1, #0x0                   	// #0
     328:	ldr	x0, [x19]
     32c:	bl	0 <ctf_set_errno>
     330:	ldr	x0, [x19, #24]
     334:	bl	0 <ctf_file_close>
     338:	ldr	x0, [x19]
     33c:	ldr	x0, [x0, #664]
     340:	cbz	x0, 348 <ctf_link_one_input_archive+0x8c>
     344:	bl	0 <ctf_dynhash_empty>
     348:	ldr	x0, [x19]
     34c:	mov	x2, #0x0                   	// #0
     350:	adrp	x1, 0 <ctf_arc_close_thunk>
     354:	add	x1, x1, #0x0
     358:	ldr	x0, [x0, #656]
     35c:	bl	0 <ctf_dynhash_iter>
     360:	ldp	x19, x20, [sp, #16]
     364:	ldp	x29, x30, [sp], #48
     368:	ret
     36c:	ldr	w1, [sp, #44]
     370:	cmp	w1, #0x415
     374:	b.eq	2f0 <ctf_link_one_input_archive+0x34>  // b.none
     378:	ldr	x19, [x19, #8]
     37c:	mov	w0, w1
     380:	bl	0 <ctf_errmsg>
     384:	mov	x2, x0
     388:	mov	x1, x19
     38c:	adrp	x0, 0 <ctf_arc_close_thunk>
     390:	add	x0, x0, #0x0
     394:	bl	0 <ctf_dprintf>
     398:	b	360 <ctf_link_one_input_archive+0xa4>
     39c:	ldr	x0, [x19, #24]
     3a0:	bl	0 <ctf_file_close>
     3a4:	b	360 <ctf_link_one_input_archive+0xa4>
     3a8:	ldr	x20, [x19, #8]
     3ac:	ldr	x0, [x19]
     3b0:	bl	0 <ctf_errno>
     3b4:	bl	0 <ctf_errmsg>
     3b8:	mov	x2, x0
     3bc:	mov	x1, x20
     3c0:	adrp	x0, 0 <ctf_arc_close_thunk>
     3c4:	add	x0, x0, #0x0
     3c8:	bl	0 <ctf_dprintf>
     3cc:	b	330 <ctf_link_one_input_archive+0x74>

00000000000003d0 <ctf_link_one_type>:
     3d0:	stp	x29, x30, [sp, #-64]!
     3d4:	mov	x29, sp
     3d8:	stp	x19, x20, [sp, #16]
     3dc:	mov	x19, x2
     3e0:	ldr	w20, [x2, #52]
     3e4:	cbnz	w20, 41c <ctf_link_one_type+0x4c>
     3e8:	stp	x21, x22, [sp, #32]
     3ec:	mov	x22, x0
     3f0:	ldr	w21, [x2, #56]
     3f4:	cbnz	w21, 4a0 <ctf_link_one_type+0xd0>
     3f8:	mov	x2, x0
     3fc:	ldr	x1, [x19, #16]
     400:	ldr	x0, [x19]
     404:	bl	0 <ctf_add_type>
     408:	cmn	x0, #0x1
     40c:	b.eq	43c <ctf_link_one_type+0x6c>  // b.none
     410:	mov	w20, w21
     414:	ldp	x21, x22, [sp, #32]
     418:	b	4d0 <ctf_link_one_type+0x100>
     41c:	adrp	x0, 0 <ctf_arc_close_thunk>
     420:	add	x0, x0, #0x0
     424:	bl	0 <ctf_dprintf>
     428:	mov	w1, #0x419                 	// #1049
     42c:	ldr	x0, [x19]
     430:	bl	0 <ctf_set_errno>
     434:	mov	w20, w0
     438:	b	4d0 <ctf_link_one_type+0x100>
     43c:	ldr	x0, [x19]
     440:	bl	0 <ctf_errno>
     444:	cmp	w0, #0x411
     448:	b.eq	494 <ctf_link_one_type+0xc4>  // b.none
     44c:	mov	w20, w21
     450:	cmp	w0, #0x41b
     454:	b.ne	460 <ctf_link_one_type+0x90>  // b.any
     458:	ldp	x21, x22, [sp, #32]
     45c:	b	4d0 <ctf_link_one_type+0x100>
     460:	ldr	x20, [x19, #40]
     464:	ldr	x19, [x19, #8]
     468:	bl	0 <ctf_errmsg>
     46c:	mov	x4, x0
     470:	mov	x3, x19
     474:	mov	x2, x20
     478:	mov	x1, x22
     47c:	adrp	x0, 0 <ctf_arc_close_thunk>
     480:	add	x0, x0, #0x0
     484:	bl	0 <ctf_dprintf>
     488:	mov	w20, w21
     48c:	ldp	x21, x22, [sp, #32]
     490:	b	4d0 <ctf_link_one_type+0x100>
     494:	mov	w1, #0x0                   	// #0
     498:	ldr	x0, [x19]
     49c:	bl	0 <ctf_set_errno>
     4a0:	ldr	x2, [x19, #32]
     4a4:	ldr	x1, [x19, #8]
     4a8:	ldr	x0, [x19]
     4ac:	bl	28 <ctf_create_per_cu>
     4b0:	mov	x21, x0
     4b4:	cbz	x0, 558 <ctf_link_one_type+0x188>
     4b8:	mov	x2, x22
     4bc:	ldr	x1, [x19, #16]
     4c0:	bl	0 <ctf_add_type>
     4c4:	cmn	x0, #0x1
     4c8:	b.eq	4e0 <ctf_link_one_type+0x110>  // b.none
     4cc:	ldp	x21, x22, [sp, #32]
     4d0:	mov	w0, w20
     4d4:	ldp	x19, x20, [sp, #16]
     4d8:	ldp	x29, x30, [sp], #64
     4dc:	ret
     4e0:	mov	x0, x21
     4e4:	bl	0 <ctf_errno>
     4e8:	mov	w21, w0
     4ec:	cmp	w0, #0x41b
     4f0:	b.ne	4fc <ctf_link_one_type+0x12c>  // b.any
     4f4:	ldp	x21, x22, [sp, #32]
     4f8:	b	4d0 <ctf_link_one_type+0x100>
     4fc:	stp	x23, x24, [sp, #48]
     500:	ldr	x23, [x19, #40]
     504:	ldr	x24, [x19, #8]
     508:	bl	0 <ctf_errmsg>
     50c:	mov	x5, x0
     510:	mov	x4, x23
     514:	mov	x3, x24
     518:	mov	x2, x23
     51c:	mov	x1, x22
     520:	adrp	x0, 0 <ctf_arc_close_thunk>
     524:	add	x0, x0, #0x0
     528:	bl	0 <ctf_dprintf>
     52c:	cmp	w21, #0x411
     530:	b.eq	540 <ctf_link_one_type+0x170>  // b.none
     534:	ldp	x21, x22, [sp, #32]
     538:	ldp	x23, x24, [sp, #48]
     53c:	b	4d0 <ctf_link_one_type+0x100>
     540:	mov	w1, #0x0                   	// #0
     544:	ldr	x0, [x19]
     548:	bl	0 <ctf_set_errno>
     54c:	ldp	x21, x22, [sp, #32]
     550:	ldp	x23, x24, [sp, #48]
     554:	b	4d0 <ctf_link_one_type+0x100>
     558:	mov	w20, #0xffffffff            	// #-1
     55c:	ldp	x21, x22, [sp, #32]
     560:	b	4d0 <ctf_link_one_type+0x100>

0000000000000564 <ctf_link_intern_extern_string>:
     564:	stp	x29, x30, [sp, #-32]!
     568:	mov	x29, sp
     56c:	str	x19, [sp, #16]
     570:	mov	x0, x1
     574:	mov	x19, x2
     578:	ldr	w1, [x1, #552]
     57c:	orr	w1, w1, #0x4
     580:	str	w1, [x0, #552]
     584:	ldr	w2, [x2, #8]
     588:	ldr	x1, [x19]
     58c:	bl	0 <ctf_str_add_external>
     590:	cbnz	w0, 59c <ctf_link_intern_extern_string+0x38>
     594:	mov	w0, #0xc                   	// #12
     598:	str	w0, [x19, #12]
     59c:	ldr	x19, [sp, #16]
     5a0:	ldp	x29, x30, [sp], #32
     5a4:	ret

00000000000005a8 <ctf_accumulate_archive_names>:
     5a8:	stp	x29, x30, [sp, #-64]!
     5ac:	mov	x29, sp
     5b0:	stp	x19, x20, [sp, #16]
     5b4:	stp	x23, x24, [sp, #48]
     5b8:	mov	x23, x0
     5bc:	mov	x20, x1
     5c0:	mov	x19, x2
     5c4:	ldr	x1, [x2, #24]
     5c8:	add	x1, x1, #0x1
     5cc:	str	x1, [x2, #24]
     5d0:	lsl	x1, x1, #3
     5d4:	ldr	x0, [x2]
     5d8:	bl	0 <realloc>
     5dc:	cbz	x0, 678 <ctf_accumulate_archive_names+0xd0>
     5e0:	stp	x21, x22, [sp, #32]
     5e4:	mov	x21, x0
     5e8:	ldr	x1, [x19, #24]
     5ec:	lsl	x1, x1, #3
     5f0:	ldr	x0, [x19, #16]
     5f4:	bl	0 <realloc>
     5f8:	mov	x22, x0
     5fc:	cbz	x0, 694 <ctf_accumulate_archive_names+0xec>
     600:	ldr	x3, [x20, #680]
     604:	cbz	x3, 644 <ctf_accumulate_archive_names+0x9c>
     608:	ldr	x2, [x20, #688]
     60c:	mov	x1, x23
     610:	mov	x0, x20
     614:	blr	x3
     618:	mov	x24, x0
     61c:	cbz	x0, 644 <ctf_accumulate_archive_names+0x9c>
     620:	ldr	x1, [x19, #40]
     624:	add	x1, x1, #0x1
     628:	str	x1, [x19, #40]
     62c:	lsl	x1, x1, #3
     630:	ldr	x0, [x19, #32]
     634:	bl	0 <realloc>
     638:	cbz	x0, 6b4 <ctf_accumulate_archive_names+0x10c>
     63c:	str	x0, [x19, #32]
     640:	mov	x23, x24
     644:	str	x21, [x19]
     648:	ldr	x0, [x19, #24]
     64c:	add	x21, x21, x0, lsl #3
     650:	stur	x23, [x21, #-8]
     654:	str	x22, [x19, #16]
     658:	ldr	x0, [x19, #24]
     65c:	add	x22, x22, x0, lsl #3
     660:	stur	x20, [x22, #-8]
     664:	ldp	x21, x22, [sp, #32]
     668:	ldp	x19, x20, [sp, #16]
     66c:	ldp	x23, x24, [sp, #48]
     670:	ldp	x29, x30, [sp], #64
     674:	ret
     678:	ldr	x0, [x19, #24]
     67c:	sub	x0, x0, #0x1
     680:	str	x0, [x19, #24]
     684:	mov	w1, #0xc                   	// #12
     688:	ldr	x0, [x19, #8]
     68c:	bl	0 <ctf_set_errno>
     690:	b	668 <ctf_accumulate_archive_names+0xc0>
     694:	ldr	x0, [x19, #24]
     698:	sub	x0, x0, #0x1
     69c:	str	x0, [x19, #24]
     6a0:	mov	w1, #0xc                   	// #12
     6a4:	ldr	x0, [x19, #8]
     6a8:	bl	0 <ctf_set_errno>
     6ac:	ldp	x21, x22, [sp, #32]
     6b0:	b	668 <ctf_accumulate_archive_names+0xc0>
     6b4:	ldr	x0, [x19, #40]
     6b8:	sub	x0, x0, #0x1
     6bc:	str	x0, [x19, #40]
     6c0:	mov	w1, #0xc                   	// #12
     6c4:	ldr	x0, [x19, #8]
     6c8:	bl	0 <ctf_set_errno>
     6cc:	ldp	x21, x22, [sp, #32]
     6d0:	b	668 <ctf_accumulate_archive_names+0xc0>

00000000000006d4 <ctf_add_type_mapping>:
     6d4:	stp	x29, x30, [sp, #-48]!
     6d8:	mov	x29, sp
     6dc:	stp	x19, x20, [sp, #16]
     6e0:	stp	x21, x22, [sp, #32]
     6e4:	mov	x20, x0
     6e8:	mov	x19, x2
     6ec:	ldr	w0, [x0, #544]
     6f0:	cmp	x0, x1
     6f4:	b.cc	704 <ctf_add_type_mapping+0x30>  // b.lo, b.ul, b.last
     6f8:	ldr	x0, [x20, #512]
     6fc:	cmp	x0, #0x0
     700:	csel	x20, x20, x0, eq  // eq = none
     704:	ldr	w0, [x20, #544]
     708:	and	x22, x0, x1
     70c:	ldr	w0, [x19, #544]
     710:	cmp	x0, x3
     714:	b.cc	724 <ctf_add_type_mapping+0x50>  // b.lo, b.ul, b.last
     718:	ldr	x0, [x19, #512]
     71c:	cmp	x0, #0x0
     720:	csel	x19, x19, x0, eq  // eq = none
     724:	ldr	w2, [x19, #544]
     728:	and	x21, x2, x3
     72c:	ldr	x0, [x19, #664]
     730:	cbz	x0, 76c <ctf_add_type_mapping+0x98>
     734:	mov	x1, #0x10                  	// #16
     738:	mov	x0, #0x1                   	// #1
     73c:	bl	0 <calloc>
     740:	mov	x1, x0
     744:	cbz	x0, 75c <ctf_add_type_mapping+0x88>
     748:	str	x20, [x0]
     74c:	str	x22, [x0, #8]
     750:	mov	x2, x21
     754:	ldr	x0, [x19, #664]
     758:	bl	0 <ctf_dynhash_insert>
     75c:	ldp	x19, x20, [sp, #16]
     760:	ldp	x21, x22, [sp, #32]
     764:	ldp	x29, x30, [sp], #48
     768:	ret
     76c:	mov	x3, #0x0                   	// #0
     770:	adrp	x2, 0 <free>
     774:	add	x2, x2, #0x0
     778:	adrp	x1, 0 <ctf_hash_eq_type_mapping_key>
     77c:	add	x1, x1, #0x0
     780:	adrp	x0, 0 <ctf_hash_type_mapping_key>
     784:	add	x0, x0, #0x0
     788:	bl	0 <ctf_dynhash_create>
     78c:	str	x0, [x19, #664]
     790:	cbnz	x0, 734 <ctf_add_type_mapping+0x60>
     794:	b	75c <ctf_add_type_mapping+0x88>

0000000000000798 <ctf_type_mapping>:
     798:	stp	x29, x30, [sp, #-48]!
     79c:	mov	x29, sp
     7a0:	stp	x19, x20, [sp, #16]
     7a4:	mov	x19, x2
     7a8:	ldr	x20, [x2]
     7ac:	ldr	w2, [x0, #544]
     7b0:	cmp	x2, x1
     7b4:	b.cc	7c4 <ctf_type_mapping+0x2c>  // b.lo, b.ul, b.last
     7b8:	ldr	x2, [x0, #512]
     7bc:	cmp	x2, #0x0
     7c0:	csel	x0, x0, x2, eq  // eq = none
     7c4:	ldr	w2, [x0, #544]
     7c8:	and	x1, x2, x1
     7cc:	str	x0, [sp, #32]
     7d0:	str	x1, [sp, #40]
     7d4:	ldr	x0, [x20, #664]
     7d8:	cbz	x0, 804 <ctf_type_mapping+0x6c>
     7dc:	add	x1, sp, #0x20
     7e0:	bl	0 <ctf_dynhash_lookup>
     7e4:	cbz	x0, 808 <ctf_type_mapping+0x70>
     7e8:	ldr	x1, [x20, #512]
     7ec:	cbz	x1, 7fc <ctf_type_mapping+0x64>
     7f0:	ldr	w1, [x20, #544]
     7f4:	add	w1, w1, #0x1
     7f8:	orr	x0, x0, x1
     7fc:	str	x20, [x19]
     800:	b	840 <ctf_type_mapping+0xa8>
     804:	mov	x0, #0x0                   	// #0
     808:	ldr	x20, [x20, #512]
     80c:	cbz	x20, 84c <ctf_type_mapping+0xb4>
     810:	ldr	x2, [x20, #664]
     814:	cbz	x2, 824 <ctf_type_mapping+0x8c>
     818:	add	x1, sp, #0x20
     81c:	mov	x0, x2
     820:	bl	0 <ctf_dynhash_lookup>
     824:	cbz	x0, 83c <ctf_type_mapping+0xa4>
     828:	ldr	x1, [x20, #512]
     82c:	cbz	x1, 83c <ctf_type_mapping+0xa4>
     830:	ldr	w1, [x20, #544]
     834:	add	w1, w1, #0x1
     838:	orr	x0, x0, x1
     83c:	str	x20, [x19]
     840:	ldp	x19, x20, [sp, #16]
     844:	ldp	x29, x30, [sp], #48
     848:	ret
     84c:	mov	x0, #0x0                   	// #0
     850:	b	840 <ctf_type_mapping+0xa8>

0000000000000854 <ctf_link_one_variable>:
     854:	stp	x29, x30, [sp, #-80]!
     858:	mov	x29, sp
     85c:	stp	x19, x20, [sp, #16]
     860:	stp	x21, x22, [sp, #32]
     864:	str	x23, [sp, #48]
     868:	mov	x22, x0
     86c:	mov	x23, x1
     870:	mov	x19, x2
     874:	ldr	x0, [x2]
     878:	str	x0, [sp, #72]
     87c:	add	x2, sp, #0x48
     880:	ldr	x0, [x19, #16]
     884:	bl	798 <ctf_type_mapping>
     888:	cbz	x0, 9c4 <ctf_link_one_variable+0x170>
     88c:	mov	x20, x0
     890:	ldr	x0, [x19]
     894:	ldr	x2, [sp, #72]
     898:	cmp	x0, x2
     89c:	b.eq	8e8 <ctf_link_one_variable+0x94>  // b.none
     8a0:	ldr	x2, [x19, #32]
     8a4:	ldr	x1, [x19, #8]
     8a8:	bl	28 <ctf_create_per_cu>
     8ac:	mov	x21, x0
     8b0:	cbz	x0, 9a0 <ctf_link_one_variable+0x14c>
     8b4:	mov	x1, x22
     8b8:	ldr	x0, [x21, #592]
     8bc:	bl	0 <ctf_dynhash_lookup>
     8c0:	cbz	x0, 9a8 <ctf_link_one_variable+0x154>
     8c4:	ldr	x0, [x0, #24]
     8c8:	cmp	x20, x0
     8cc:	b.ne	968 <ctf_link_one_variable+0x114>  // b.any
     8d0:	mov	w0, #0x0                   	// #0
     8d4:	ldp	x19, x20, [sp, #16]
     8d8:	ldp	x21, x22, [sp, #32]
     8dc:	ldr	x23, [sp, #48]
     8e0:	ldp	x29, x30, [sp], #80
     8e4:	ret
     8e8:	mov	x1, x22
     8ec:	ldr	x0, [x2, #592]
     8f0:	bl	0 <ctf_dynhash_lookup>
     8f4:	mov	x21, x0
     8f8:	cbz	x0, a18 <ctf_link_one_variable+0x1c4>
     8fc:	ldr	x0, [x0, #24]
     900:	cmp	x20, x0
     904:	b.ne	938 <ctf_link_one_variable+0xe4>  // b.any
     908:	ldr	x1, [x21, #24]
     90c:	mov	w0, #0x0                   	// #0
     910:	cmp	x1, x23
     914:	b.eq	8d4 <ctf_link_one_variable+0x80>  // b.none
     918:	ldr	x2, [x19, #32]
     91c:	ldr	x1, [x19, #8]
     920:	ldr	x0, [x19]
     924:	bl	28 <ctf_create_per_cu>
     928:	mov	x21, x0
     92c:	cbnz	x0, 8b4 <ctf_link_one_variable+0x60>
     930:	mov	w0, #0xffffffff            	// #-1
     934:	b	8d4 <ctf_link_one_variable+0x80>
     938:	mov	x1, x22
     93c:	adrp	x0, 0 <ctf_arc_close_thunk>
     940:	add	x0, x0, #0x0
     944:	bl	0 <ctf_dprintf>
     948:	b	908 <ctf_link_one_variable+0xb4>
     94c:	ldr	x19, [x19]
     950:	ldr	x0, [sp, #72]
     954:	bl	0 <ctf_errno>
     958:	mov	w1, w0
     95c:	mov	x0, x19
     960:	bl	0 <ctf_set_errno>
     964:	b	8d4 <ctf_link_one_variable+0x80>
     968:	mov	x1, x22
     96c:	adrp	x0, 0 <ctf_arc_close_thunk>
     970:	add	x0, x0, #0x0
     974:	bl	0 <ctf_dprintf>
     978:	b	8d0 <ctf_link_one_variable+0x7c>
     97c:	ldr	x19, [x19]
     980:	mov	x0, x21
     984:	bl	0 <ctf_errno>
     988:	mov	w1, w0
     98c:	mov	x0, x19
     990:	bl	0 <ctf_set_errno>
     994:	b	8d4 <ctf_link_one_variable+0x80>
     998:	mov	w0, #0xffffffff            	// #-1
     99c:	b	8d4 <ctf_link_one_variable+0x80>
     9a0:	mov	w0, #0xffffffff            	// #-1
     9a4:	b	8d4 <ctf_link_one_variable+0x80>
     9a8:	mov	x2, x20
     9ac:	mov	x1, x22
     9b0:	mov	x0, x21
     9b4:	bl	0 <ctf_add_variable>
     9b8:	tbnz	w0, #31, 97c <ctf_link_one_variable+0x128>
     9bc:	mov	w0, #0x0                   	// #0
     9c0:	b	8d4 <ctf_link_one_variable+0x80>
     9c4:	ldr	x2, [x19, #32]
     9c8:	ldr	x1, [x19, #8]
     9cc:	ldr	x0, [x19]
     9d0:	bl	28 <ctf_create_per_cu>
     9d4:	mov	x21, x0
     9d8:	cbz	x0, 998 <ctf_link_one_variable+0x144>
     9dc:	str	x21, [sp, #72]
     9e0:	add	x2, sp, #0x48
     9e4:	mov	x1, x23
     9e8:	ldr	x0, [x19, #16]
     9ec:	bl	798 <ctf_type_mapping>
     9f0:	mov	x20, x0
     9f4:	cbnz	x0, 8b4 <ctf_link_one_variable+0x60>
     9f8:	ldr	x3, [x19, #8]
     9fc:	mov	x2, x22
     a00:	mov	x1, x23
     a04:	adrp	x0, 0 <ctf_arc_close_thunk>
     a08:	add	x0, x0, #0x0
     a0c:	bl	0 <ctf_dprintf>
     a10:	mov	w0, #0x0                   	// #0
     a14:	b	8d4 <ctf_link_one_variable+0x80>
     a18:	mov	x2, x20
     a1c:	mov	x1, x22
     a20:	ldr	x0, [sp, #72]
     a24:	bl	0 <ctf_add_variable>
     a28:	tbnz	w0, #31, 94c <ctf_link_one_variable+0xf8>
     a2c:	mov	w0, #0x0                   	// #0
     a30:	b	8d4 <ctf_link_one_variable+0x80>

0000000000000a34 <ctf_link_add_ctf>:
     a34:	stp	x29, x30, [sp, #-64]!
     a38:	mov	x29, sp
     a3c:	stp	x19, x20, [sp, #16]
     a40:	mov	x19, x0
     a44:	ldr	x0, [x0, #656]
     a48:	cbnz	x0, a9c <ctf_link_add_ctf+0x68>
     a4c:	stp	x21, x22, [sp, #32]
     a50:	str	x23, [sp, #48]
     a54:	mov	x22, x1
     a58:	mov	x21, x2
     a5c:	ldr	x23, [x19, #648]
     a60:	cbz	x23, ab4 <ctf_link_add_ctf+0x80>
     a64:	mov	x0, x21
     a68:	bl	0 <strdup>
     a6c:	mov	x20, x0
     a70:	cbz	x0, ae4 <ctf_link_add_ctf+0xb0>
     a74:	mov	x2, x22
     a78:	mov	x1, x0
     a7c:	mov	x0, x23
     a80:	bl	0 <ctf_dynhash_insert>
     a84:	mov	w1, w0
     a88:	mov	w0, #0x0                   	// #0
     a8c:	tbnz	w1, #31, ae4 <ctf_link_add_ctf+0xb0>
     a90:	ldp	x21, x22, [sp, #32]
     a94:	ldr	x23, [sp, #48]
     a98:	b	aa8 <ctf_link_add_ctf+0x74>
     a9c:	mov	w1, #0x3f5                 	// #1013
     aa0:	mov	x0, x19
     aa4:	bl	0 <ctf_set_errno>
     aa8:	ldp	x19, x20, [sp, #16]
     aac:	ldp	x29, x30, [sp], #64
     ab0:	ret
     ab4:	adrp	x3, 0 <ctf_arc_close_thunk>
     ab8:	add	x3, x3, #0x0
     abc:	adrp	x2, 0 <free>
     ac0:	add	x2, x2, #0x0
     ac4:	adrp	x1, 0 <ctf_hash_eq_string>
     ac8:	add	x1, x1, #0x0
     acc:	adrp	x0, 0 <ctf_hash_string>
     ad0:	add	x0, x0, #0x0
     ad4:	bl	0 <ctf_dynhash_create>
     ad8:	mov	x20, x0
     adc:	str	x0, [x19, #648]
     ae0:	cbnz	x0, b10 <ctf_link_add_ctf+0xdc>
     ae4:	ldr	x0, [x19, #648]
     ae8:	bl	0 <free>
     aec:	str	xzr, [x19, #648]
     af0:	mov	x0, x20
     af4:	bl	0 <free>
     af8:	mov	w1, #0xc                   	// #12
     afc:	mov	x0, x19
     b00:	bl	0 <ctf_set_errno>
     b04:	ldp	x21, x22, [sp, #32]
     b08:	ldr	x23, [sp, #48]
     b0c:	b	aa8 <ctf_link_add_ctf+0x74>
     b10:	mov	x23, x0
     b14:	b	a64 <ctf_link_add_ctf+0x30>

0000000000000b18 <ctf_link_add_cu_mapping>:
     b18:	stp	x29, x30, [sp, #-48]!
     b1c:	mov	x29, sp
     b20:	stp	x19, x20, [sp, #16]
     b24:	str	x21, [sp, #32]
     b28:	mov	x19, x0
     b2c:	mov	x21, x1
     b30:	mov	x20, x2
     b34:	ldr	x0, [x0, #672]
     b38:	cbz	x0, ba0 <ctf_link_add_cu_mapping+0x88>
     b3c:	ldr	x0, [x19, #656]
     b40:	cbz	x0, bd8 <ctf_link_add_cu_mapping+0xc0>
     b44:	mov	x0, x21
     b48:	bl	0 <strdup>
     b4c:	mov	x21, x0
     b50:	mov	x0, x20
     b54:	bl	0 <strdup>
     b58:	mov	x20, x0
     b5c:	cmp	x21, #0x0
     b60:	ccmp	x0, #0x0, #0x4, ne  // ne = any
     b64:	b.eq	c14 <ctf_link_add_cu_mapping+0xfc>  // b.none
     b68:	mov	x2, x0
     b6c:	mov	x1, x0
     b70:	mov	x0, x19
     b74:	bl	28 <ctf_create_per_cu>
     b78:	cbz	x0, c34 <ctf_link_add_cu_mapping+0x11c>
     b7c:	mov	x2, x20
     b80:	mov	x1, x21
     b84:	ldr	x0, [x19, #672]
     b88:	bl	0 <ctf_dynhash_insert>
     b8c:	cbnz	w0, c28 <ctf_link_add_cu_mapping+0x110>
     b90:	ldp	x19, x20, [sp, #16]
     b94:	ldr	x21, [sp, #32]
     b98:	ldp	x29, x30, [sp], #48
     b9c:	ret
     ba0:	adrp	x2, 0 <free>
     ba4:	add	x2, x2, #0x0
     ba8:	mov	x3, x2
     bac:	adrp	x1, 0 <ctf_hash_eq_string>
     bb0:	add	x1, x1, #0x0
     bb4:	adrp	x0, 0 <ctf_hash_string>
     bb8:	add	x0, x0, #0x0
     bbc:	bl	0 <ctf_dynhash_create>
     bc0:	str	x0, [x19, #672]
     bc4:	cbnz	x0, b3c <ctf_link_add_cu_mapping+0x24>
     bc8:	mov	w1, #0xc                   	// #12
     bcc:	mov	x0, x19
     bd0:	bl	0 <ctf_set_errno>
     bd4:	b	b90 <ctf_link_add_cu_mapping+0x78>
     bd8:	adrp	x3, 0 <ctf_arc_close_thunk>
     bdc:	add	x3, x3, #0x0
     be0:	adrp	x2, 0 <free>
     be4:	add	x2, x2, #0x0
     be8:	adrp	x1, 0 <ctf_hash_eq_string>
     bec:	add	x1, x1, #0x0
     bf0:	adrp	x0, 0 <ctf_hash_string>
     bf4:	add	x0, x0, #0x0
     bf8:	bl	0 <ctf_dynhash_create>
     bfc:	str	x0, [x19, #656]
     c00:	cbnz	x0, b44 <ctf_link_add_cu_mapping+0x2c>
     c04:	mov	w1, #0xc                   	// #12
     c08:	mov	x0, x19
     c0c:	bl	0 <ctf_set_errno>
     c10:	b	b90 <ctf_link_add_cu_mapping+0x78>
     c14:	bl	0 <__errno_location>
     c18:	ldr	w1, [x0]
     c1c:	mov	x0, x19
     c20:	bl	0 <ctf_set_errno>
     c24:	b	c34 <ctf_link_add_cu_mapping+0x11c>
     c28:	mov	w1, w0
     c2c:	mov	x0, x19
     c30:	bl	0 <ctf_set_errno>
     c34:	mov	x0, x21
     c38:	bl	0 <free>
     c3c:	mov	x0, x20
     c40:	bl	0 <free>
     c44:	mov	w0, #0xffffffff            	// #-1
     c48:	b	b90 <ctf_link_add_cu_mapping+0x78>

0000000000000c4c <ctf_link_set_memb_name_changer>:
     c4c:	str	x1, [x0, #680]
     c50:	str	x2, [x0, #688]
     c54:	ret

0000000000000c58 <ctf_link>:
     c58:	stp	x29, x30, [sp, #-96]!
     c5c:	mov	x29, sp
     c60:	str	x19, [sp, #16]
     c64:	mov	x19, x0
     c68:	stp	xzr, xzr, [sp, #40]
     c6c:	stp	xzr, xzr, [sp, #56]
     c70:	stp	xzr, xzr, [sp, #72]
     c74:	str	xzr, [sp, #88]
     c78:	str	x0, [sp, #32]
     c7c:	str	w1, [sp, #84]
     c80:	ldr	x0, [x0, #648]
     c84:	cbz	x0, cfc <ctf_link+0xa4>
     c88:	ldr	x0, [x19, #656]
     c8c:	cbz	x0, cc0 <ctf_link+0x68>
     c90:	add	x2, sp, #0x20
     c94:	adrp	x1, 0 <ctf_arc_close_thunk>
     c98:	add	x1, x1, #0x0
     c9c:	ldr	x0, [x19, #648]
     ca0:	bl	0 <ctf_dynhash_iter>
     ca4:	mov	x0, x19
     ca8:	bl	0 <ctf_errno>
     cac:	cmp	w0, #0x0
     cb0:	csetm	w0, ne  // ne = any
     cb4:	ldr	x19, [sp, #16]
     cb8:	ldp	x29, x30, [sp], #96
     cbc:	ret
     cc0:	adrp	x3, 0 <ctf_arc_close_thunk>
     cc4:	add	x3, x3, #0x0
     cc8:	adrp	x2, 0 <free>
     ccc:	add	x2, x2, #0x0
     cd0:	adrp	x1, 0 <ctf_hash_eq_string>
     cd4:	add	x1, x1, #0x0
     cd8:	adrp	x0, 0 <ctf_hash_string>
     cdc:	add	x0, x0, #0x0
     ce0:	bl	0 <ctf_dynhash_create>
     ce4:	str	x0, [x19, #656]
     ce8:	cbnz	x0, c90 <ctf_link+0x38>
     cec:	mov	w1, #0xc                   	// #12
     cf0:	mov	x0, x19
     cf4:	bl	0 <ctf_set_errno>
     cf8:	b	cb4 <ctf_link+0x5c>
     cfc:	mov	w0, #0x0                   	// #0
     d00:	b	cb4 <ctf_link+0x5c>

0000000000000d04 <ctf_link_add_strtab>:
     d04:	stp	x29, x30, [sp, #-96]!
     d08:	mov	x29, sp
     d0c:	stp	x19, x20, [sp, #16]
     d10:	stp	x21, x22, [sp, #32]
     d14:	stp	x23, x24, [sp, #48]
     d18:	mov	x19, x0
     d1c:	mov	x22, x1
     d20:	mov	x21, x2
     d24:	mov	w20, #0x0                   	// #0
     d28:	mov	w24, #0xc                   	// #12
     d2c:	adrp	x23, 0 <ctf_arc_close_thunk>
     d30:	add	x23, x23, #0x0
     d34:	mov	x1, x21
     d38:	add	x0, sp, #0x5c
     d3c:	blr	x22
     d40:	mov	x1, x0
     d44:	cbz	x0, d94 <ctf_link_add_strtab+0x90>
     d48:	str	x1, [sp, #72]
     d4c:	ldr	w2, [sp, #92]
     d50:	str	w2, [sp, #80]
     d54:	str	wzr, [sp, #84]
     d58:	ldr	w0, [x19, #552]
     d5c:	orr	w0, w0, #0x4
     d60:	str	w0, [x19, #552]
     d64:	mov	x0, x19
     d68:	bl	0 <ctf_str_add_external>
     d6c:	cmp	w0, #0x0
     d70:	csel	w20, w20, w24, ne  // ne = any
     d74:	add	x2, sp, #0x48
     d78:	mov	x1, x23
     d7c:	ldr	x0, [x19, #656]
     d80:	bl	0 <ctf_dynhash_iter>
     d84:	ldr	w0, [sp, #84]
     d88:	cmp	w0, #0x0
     d8c:	csel	w20, w20, w0, eq  // eq = none
     d90:	b	d34 <ctf_link_add_strtab+0x30>
     d94:	neg	w0, w20
     d98:	ldp	x19, x20, [sp, #16]
     d9c:	ldp	x21, x22, [sp, #32]
     da0:	ldp	x23, x24, [sp, #48]
     da4:	ldp	x29, x30, [sp], #96
     da8:	ret

0000000000000dac <ctf_link_shuffle_syms>:
     dac:	mov	w0, #0x0                   	// #0
     db0:	ret

0000000000000db4 <ctf_link_write>:
     db4:	stp	x29, x30, [sp, #-128]!
     db8:	mov	x29, sp
     dbc:	stp	x19, x20, [sp, #16]
     dc0:	stp	x21, x22, [sp, #32]
     dc4:	stp	x23, x24, [sp, #48]
     dc8:	mov	x20, x0
     dcc:	mov	x23, x1
     dd0:	mov	x22, x2
     dd4:	stp	xzr, xzr, [sp, #80]
     dd8:	stp	xzr, xzr, [sp, #96]
     ddc:	stp	xzr, xzr, [sp, #112]
     de0:	str	x0, [sp, #88]
     de4:	ldr	x0, [x0, #656]
     de8:	cbz	x0, e08 <ctf_link_write+0x54>
     dec:	add	x2, sp, #0x50
     df0:	adrp	x1, 0 <ctf_arc_close_thunk>
     df4:	add	x1, x1, #0x0
     df8:	bl	0 <ctf_dynhash_iter>
     dfc:	mov	x0, x20
     e00:	bl	0 <ctf_errno>
     e04:	tbnz	w0, #31, 1008 <ctf_link_write+0x254>
     e08:	ldr	x1, [sp, #104]
     e0c:	cbz	x1, f84 <ctf_link_write+0x1d0>
     e10:	add	x1, x1, #0x1
     e14:	lsl	x1, x1, #3
     e18:	ldr	x0, [sp, #80]
     e1c:	bl	0 <realloc>
     e20:	mov	x21, x0
     e24:	cbz	x0, 1100 <ctf_link_write+0x34c>
     e28:	str	x0, [sp, #80]
     e2c:	ldr	x2, [sp, #104]
     e30:	lsl	x2, x2, #3
     e34:	mov	x1, x0
     e38:	add	x0, x0, #0x8
     e3c:	bl	0 <memmove>
     e40:	adrp	x0, 0 <_CTF_SECTION>
     e44:	add	x0, x0, #0x0
     e48:	str	x0, [x21]
     e4c:	ldr	x3, [x20, #680]
     e50:	mov	x21, #0x0                   	// #0
     e54:	cbz	x3, e8c <ctf_link_write+0xd8>
     e58:	ldr	x2, [x20, #688]
     e5c:	mov	x1, x0
     e60:	mov	x0, x20
     e64:	blr	x3
     e68:	mov	x21, x0
     e6c:	cbz	x0, e8c <ctf_link_write+0xd8>
     e70:	ldr	x0, [sp, #80]
     e74:	str	x21, [x0]
     e78:	mov	x2, x21
     e7c:	adrp	x1, 0 <ctf_arc_close_thunk>
     e80:	add	x1, x1, #0x0
     e84:	ldr	x0, [x20, #656]
     e88:	bl	0 <ctf_dynhash_iter>
     e8c:	ldr	x1, [sp, #104]
     e90:	add	x1, x1, #0x1
     e94:	lsl	x1, x1, #3
     e98:	ldr	x0, [sp, #96]
     e9c:	bl	0 <realloc>
     ea0:	cbz	x0, 110c <ctf_link_write+0x358>
     ea4:	str	x0, [sp, #96]
     ea8:	ldr	x2, [sp, #104]
     eac:	lsl	x2, x2, #3
     eb0:	mov	x1, x0
     eb4:	add	x0, x0, #0x8
     eb8:	bl	0 <memmove>
     ebc:	ldr	x0, [sp, #96]
     ec0:	str	x20, [x0]
     ec4:	bl	0 <tmpfile>
     ec8:	mov	x19, x0
     ecc:	cbz	x0, 1118 <ctf_link_write+0x364>
     ed0:	bl	0 <fileno>
     ed4:	mov	x4, x22
     ed8:	ldr	x3, [sp, #80]
     edc:	ldr	x2, [sp, #104]
     ee0:	add	x2, x2, #0x1
     ee4:	ldr	x1, [sp, #96]
     ee8:	bl	0 <ctf_arc_write_fd>
     eec:	tbnz	w0, #31, f9c <ctf_link_write+0x1e8>
     ef0:	mov	w2, #0x2                   	// #2
     ef4:	mov	x1, #0x0                   	// #0
     ef8:	mov	x0, x19
     efc:	bl	0 <fseek>
     f00:	tbnz	w0, #31, 1018 <ctf_link_write+0x264>
     f04:	stp	x25, x26, [sp, #64]
     f08:	mov	x0, x19
     f0c:	bl	0 <ftell>
     f10:	mov	x26, x0
     f14:	tbnz	x0, #63, 10c8 <ctf_link_write+0x314>
     f18:	mov	w2, #0x0                   	// #0
     f1c:	mov	x1, #0x0                   	// #0
     f20:	mov	x0, x19
     f24:	bl	0 <fseek>
     f28:	tbnz	w0, #31, 10dc <ctf_link_write+0x328>
     f2c:	mov	x25, x26
     f30:	mov	x0, x26
     f34:	bl	0 <malloc>
     f38:	mov	x22, x0
     f3c:	cbz	x0, 10f0 <ctf_link_write+0x33c>
     f40:	mov	x24, #0x1                   	// #1
     f44:	mov	x0, x19
     f48:	bl	0 <feof>
     f4c:	cbnz	w0, fb4 <ctf_link_write+0x200>
     f50:	mov	x3, x19
     f54:	mov	x2, x24
     f58:	mov	x1, x25
     f5c:	mov	x0, x22
     f60:	bl	0 <fread>
     f64:	cbnz	x0, fb4 <ctf_link_write+0x200>
     f68:	mov	x0, x19
     f6c:	bl	0 <ferror>
     f70:	cbz	w0, f44 <ctf_link_write+0x190>
     f74:	adrp	x23, 0 <ctf_arc_close_thunk>
     f78:	add	x23, x23, #0x0
     f7c:	ldp	x25, x26, [sp, #64]
     f80:	b	1024 <ctf_link_write+0x270>
     f84:	mov	x2, x22
     f88:	mov	x1, x23
     f8c:	mov	x0, x20
     f90:	bl	0 <ctf_write_mem>
     f94:	mov	x22, x0
     f98:	b	10b0 <ctf_link_write+0x2fc>
     f9c:	mov	w1, w0
     fa0:	mov	x0, x20
     fa4:	bl	0 <ctf_set_errno>
     fa8:	adrp	x23, 0 <ctf_arc_close_thunk>
     fac:	add	x23, x23, #0x0
     fb0:	b	103c <ctf_link_write+0x288>
     fb4:	str	x26, [x23]
     fb8:	ldr	x0, [sp, #80]
     fbc:	bl	0 <free>
     fc0:	ldr	x0, [sp, #96]
     fc4:	bl	0 <free>
     fc8:	mov	x0, x21
     fcc:	bl	0 <free>
     fd0:	ldr	x0, [sp, #120]
     fd4:	cbz	x0, 1134 <ctf_link_write+0x380>
     fd8:	mov	x19, #0x0                   	// #0
     fdc:	ldr	x0, [sp, #112]
     fe0:	ldr	x0, [x0, x19, lsl #3]
     fe4:	bl	0 <free>
     fe8:	add	x19, x19, #0x1
     fec:	ldr	x0, [sp, #120]
     ff0:	cmp	x0, x19
     ff4:	b.hi	fdc <ctf_link_write+0x228>  // b.pmore
     ff8:	ldr	x0, [sp, #112]
     ffc:	bl	0 <free>
    1000:	ldp	x25, x26, [sp, #64]
    1004:	b	10b0 <ctf_link_write+0x2fc>
    1008:	adrp	x23, 0 <ctf_arc_close_thunk>
    100c:	add	x23, x23, #0x0
    1010:	mov	x21, #0x0                   	// #0
    1014:	b	1044 <ctf_link_write+0x290>
    1018:	mov	x22, #0x0                   	// #0
    101c:	adrp	x23, 0 <ctf_arc_close_thunk>
    1020:	add	x23, x23, #0x0
    1024:	bl	0 <__errno_location>
    1028:	ldr	w1, [x0]
    102c:	mov	x0, x20
    1030:	bl	0 <ctf_set_errno>
    1034:	mov	x0, x22
    1038:	bl	0 <free>
    103c:	mov	x0, x19
    1040:	bl	0 <fclose>
    1044:	ldr	x0, [sp, #80]
    1048:	bl	0 <free>
    104c:	ldr	x0, [sp, #96]
    1050:	bl	0 <free>
    1054:	mov	x0, x21
    1058:	bl	0 <free>
    105c:	ldr	x0, [sp, #120]
    1060:	cbz	x0, 108c <ctf_link_write+0x2d8>
    1064:	mov	x19, #0x0                   	// #0
    1068:	ldr	x0, [sp, #112]
    106c:	ldr	x0, [x0, x19, lsl #3]
    1070:	bl	0 <free>
    1074:	add	x19, x19, #0x1
    1078:	ldr	x0, [sp, #120]
    107c:	cmp	x0, x19
    1080:	b.hi	1068 <ctf_link_write+0x2b4>  // b.pmore
    1084:	ldr	x0, [sp, #112]
    1088:	bl	0 <free>
    108c:	mov	x0, x20
    1090:	bl	0 <ctf_errno>
    1094:	bl	0 <ctf_errmsg>
    1098:	mov	x2, x0
    109c:	mov	x1, x23
    10a0:	adrp	x0, 0 <ctf_arc_close_thunk>
    10a4:	add	x0, x0, #0x0
    10a8:	bl	0 <ctf_dprintf>
    10ac:	mov	x22, #0x0                   	// #0
    10b0:	mov	x0, x22
    10b4:	ldp	x19, x20, [sp, #16]
    10b8:	ldp	x21, x22, [sp, #32]
    10bc:	ldp	x23, x24, [sp, #48]
    10c0:	ldp	x29, x30, [sp], #128
    10c4:	ret
    10c8:	mov	x22, #0x0                   	// #0
    10cc:	adrp	x23, 0 <ctf_arc_close_thunk>
    10d0:	add	x23, x23, #0x0
    10d4:	ldp	x25, x26, [sp, #64]
    10d8:	b	1024 <ctf_link_write+0x270>
    10dc:	mov	x22, #0x0                   	// #0
    10e0:	adrp	x23, 0 <ctf_arc_close_thunk>
    10e4:	add	x23, x23, #0x0
    10e8:	ldp	x25, x26, [sp, #64]
    10ec:	b	1024 <ctf_link_write+0x270>
    10f0:	adrp	x23, 0 <ctf_arc_close_thunk>
    10f4:	add	x23, x23, #0x0
    10f8:	ldp	x25, x26, [sp, #64]
    10fc:	b	1024 <ctf_link_write+0x270>
    1100:	adrp	x23, 0 <ctf_arc_close_thunk>
    1104:	add	x23, x23, #0x0
    1108:	b	1120 <ctf_link_write+0x36c>
    110c:	adrp	x23, 0 <ctf_arc_close_thunk>
    1110:	add	x23, x23, #0x0
    1114:	b	1120 <ctf_link_write+0x36c>
    1118:	adrp	x23, 0 <ctf_arc_close_thunk>
    111c:	add	x23, x23, #0x0
    1120:	bl	0 <__errno_location>
    1124:	ldr	w1, [x0]
    1128:	mov	x0, x20
    112c:	bl	0 <ctf_set_errno>
    1130:	b	1044 <ctf_link_write+0x290>
    1134:	ldp	x25, x26, [sp, #64]
    1138:	b	10b0 <ctf_link_write+0x2fc>

ctf-lookup.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_lookup_by_name>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x23, x24, [sp, #48]
   c:	stp	x25, x26, [sp, #64]
  10:	mov	x23, x0
  14:	str	x1, [sp, #104]
  18:	cbz	x1, 60 <ctf_lookup_by_name+0x60>
  1c:	stp	x19, x20, [sp, #16]
  20:	ldr	x19, [sp, #104]
  24:	mov	x0, x19
  28:	bl	0 <strlen>
  2c:	add	x24, x19, x0
  30:	ldrb	w0, [x19]
  34:	cbz	w0, 2f0 <ctf_lookup_by_name+0x2f0>
  38:	stp	x21, x22, [sp, #32]
  3c:	stp	x27, x28, [sp, #80]
  40:	bl	0 <__ctype_b_loc>
  44:	mov	x28, x0
  48:	mov	x25, #0x0                   	// #0
  4c:	adrp	x27, 0 <ctf_lookup_by_name>
  50:	add	x27, x27, #0x0
  54:	add	x0, x27, #0x8
  58:	str	x0, [sp, #96]
  5c:	b	274 <ctf_lookup_by_name+0x274>
  60:	mov	w1, #0x16                  	// #22
  64:	bl	0 <ctf_set_errno>
  68:	mov	x25, x0
  6c:	b	160 <ctf_lookup_by_name+0x160>
  70:	add	x19, x19, #0x1
  74:	ldrb	w20, [x19]
  78:	and	x0, x20, #0xff
  7c:	ldrh	w0, [x21, x0, lsl #1]
  80:	tbnz	w0, #13, 70 <ctf_lookup_by_name+0x70>
  84:	cmp	x19, x24
  88:	b.eq	2c8 <ctf_lookup_by_name+0x2c8>  // b.none
  8c:	add	x26, x19, #0x1
  90:	mov	x1, x27
  94:	mov	x0, x26
  98:	bl	0 <strpbrk>
  9c:	cmp	x0, #0x0
  a0:	csel	x22, x0, x24, ne  // ne = any
  a4:	cmp	w20, #0x2a
  a8:	b.eq	f4 <ctf_lookup_by_name+0xf4>  // b.none
  ac:	sub	x20, x22, x19
  b0:	ldurb	w0, [x22, #-1]
  b4:	add	w0, w0, w20
  b8:	sub	w0, w0, #0x69
  bc:	cmp	w0, #0x14
  c0:	b.hi	d8 <ctf_lookup_by_name+0xd8>  // b.pmore
  c4:	ldr	x1, [sp, #96]
  c8:	add	x1, x1, w0, sxtw #4
  cc:	ldr	x2, [x1, #8]
  d0:	cmp	x20, x2
  d4:	b.eq	190 <ctf_lookup_by_name+0x190>  // b.none
  d8:	add	x22, x23, #0xd8
  dc:	ldr	x1, [x23, #216]
  e0:	cbnz	x1, 1c4 <ctf_lookup_by_name+0x1c4>
  e4:	mov	w1, #0x402                 	// #1026
  e8:	mov	x0, x23
  ec:	bl	0 <ctf_set_errno>
  f0:	b	13c <ctf_lookup_by_name+0x13c>
  f4:	ldr	w0, [x23, #544]
  f8:	and	x0, x0, x25
  fc:	ldr	x1, [x23, #448]
 100:	ldr	w0, [x1, x0, lsl #2]
 104:	cbnz	x0, 174 <ctf_lookup_by_name+0x174>
 108:	mov	x1, x25
 10c:	mov	x0, x23
 110:	bl	0 <ctf_type_resolve_unsliced>
 114:	cmn	x0, #0x1
 118:	b.eq	130 <ctf_lookup_by_name+0x130>  // b.none
 11c:	ldr	w1, [x23, #544]
 120:	and	x0, x1, x0
 124:	ldr	x1, [x23, #448]
 128:	ldr	w0, [x1, x0, lsl #2]
 12c:	cbnz	x0, 174 <ctf_lookup_by_name+0x174>
 130:	mov	w1, #0x402                 	// #1026
 134:	mov	x0, x23
 138:	bl	0 <ctf_set_errno>
 13c:	ldr	x0, [x23, #512]
 140:	mov	x25, #0xffffffffffffffff    	// #-1
 144:	cbz	x0, 308 <ctf_lookup_by_name+0x308>
 148:	ldr	x1, [sp, #104]
 14c:	bl	0 <ctf_lookup_by_name>
 150:	mov	x25, x0
 154:	ldp	x19, x20, [sp, #16]
 158:	ldp	x21, x22, [sp, #32]
 15c:	ldp	x27, x28, [sp, #80]
 160:	mov	x0, x25
 164:	ldp	x23, x24, [sp, #48]
 168:	ldp	x25, x26, [sp, #64]
 16c:	ldp	x29, x30, [sp], #112
 170:	ret
 174:	ldr	w1, [x23, #552]
 178:	tbz	w1, #0, 2b8 <ctf_lookup_by_name+0x2b8>
 17c:	ldr	w25, [x23, #544]
 180:	add	w25, w25, #0x1
 184:	orr	x25, x25, x0
 188:	mov	x19, x26
 18c:	b	26c <ctf_lookup_by_name+0x26c>
 190:	sbfiz	x0, x0, #4, #32
 194:	mov	x1, x19
 198:	ldr	x3, [sp, #96]
 19c:	ldr	x0, [x3, x0]
 1a0:	bl	0 <strncmp>
 1a4:	cbnz	w0, d8 <ctf_lookup_by_name+0xd8>
 1a8:	mov	x19, x22
 1ac:	b	26c <ctf_lookup_by_name+0x26c>
 1b0:	ldr	x0, [x22, #8]
 1b4:	cmp	x20, x0
 1b8:	b.cs	1e0 <ctf_lookup_by_name+0x1e0>  // b.hs, b.nlast
 1bc:	ldr	x1, [x22, #24]!
 1c0:	cbz	x1, e4 <ctf_lookup_by_name+0xe4>
 1c4:	ldrb	w0, [x1]
 1c8:	cbz	w0, 1b0 <ctf_lookup_by_name+0x1b0>
 1cc:	mov	x2, x20
 1d0:	mov	x0, x19
 1d4:	bl	0 <strncmp>
 1d8:	cbnz	w0, 1bc <ctf_lookup_by_name+0x1bc>
 1dc:	b	1b0 <ctf_lookup_by_name+0x1b0>
 1e0:	add	x20, x19, x0
 1e4:	ldrb	w0, [x19, x0]
 1e8:	ldrh	w0, [x21, x0, lsl #1]
 1ec:	tbnz	w0, #13, 27c <ctf_lookup_by_name+0x27c>
 1f0:	mov	w1, #0x2a                  	// #42
 1f4:	mov	x0, x20
 1f8:	bl	0 <strchr>
 1fc:	cmp	x0, #0x0
 200:	csel	x19, x0, x24, ne  // ne = any
 204:	ldurb	w0, [x19, #-1]
 208:	ldrh	w0, [x21, x0, lsl #1]
 20c:	tbz	w0, #13, 220 <ctf_lookup_by_name+0x220>
 210:	sub	x19, x19, #0x1
 214:	ldurb	w0, [x19, #-1]
 218:	ldrh	w0, [x21, x0, lsl #1]
 21c:	tbnz	w0, #13, 210 <ctf_lookup_by_name+0x210>
 220:	sub	x21, x19, x20
 224:	add	x0, x21, #0x1
 228:	ldr	x1, [x23, #712]
 22c:	cmp	x1, x0
 230:	b.cc	28c <ctf_lookup_by_name+0x28c>  // b.lo, b.ul, b.last
 234:	mov	x2, x21
 238:	mov	x1, x20
 23c:	ldr	x0, [x23, #704]
 240:	bl	0 <memcpy>
 244:	ldr	x0, [x23, #704]
 248:	strb	wzr, [x0, x21]
 24c:	ldr	x2, [x23, #704]
 250:	ldr	x1, [x22, #16]
 254:	mov	x0, x23
 258:	bl	0 <ctf_lookup_by_rawhash>
 25c:	mov	x25, x0
 260:	cbz	x0, 2a8 <ctf_lookup_by_name+0x2a8>
 264:	ldr	x0, [x22]
 268:	cbz	x0, e4 <ctf_lookup_by_name+0xe4>
 26c:	ldrb	w0, [x19]
 270:	cbz	w0, 2c4 <ctf_lookup_by_name+0x2c4>
 274:	ldr	x21, [x28]
 278:	b	74 <ctf_lookup_by_name+0x74>
 27c:	ldrb	w0, [x20, #1]!
 280:	ldrh	w0, [x21, x0, lsl #1]
 284:	tbz	w0, #13, 1f0 <ctf_lookup_by_name+0x1f0>
 288:	b	27c <ctf_lookup_by_name+0x27c>
 28c:	ldr	x0, [x23, #704]
 290:	bl	0 <free>
 294:	mov	x1, x21
 298:	mov	x0, x20
 29c:	bl	0 <xstrndup>
 2a0:	str	x0, [x23, #704]
 2a4:	b	24c <ctf_lookup_by_name+0x24c>
 2a8:	mov	w1, #0x402                 	// #1026
 2ac:	mov	x0, x23
 2b0:	bl	0 <ctf_set_errno>
 2b4:	b	13c <ctf_lookup_by_name+0x13c>
 2b8:	mov	x25, x0
 2bc:	mov	x19, x26
 2c0:	b	26c <ctf_lookup_by_name+0x26c>
 2c4:	mov	x24, x19
 2c8:	ldrb	w0, [x24]
 2cc:	cmp	w0, #0x0
 2d0:	ccmp	x25, #0x0, #0x4, eq  // eq = none
 2d4:	b.eq	2e8 <ctf_lookup_by_name+0x2e8>  // b.none
 2d8:	ldp	x19, x20, [sp, #16]
 2dc:	ldp	x21, x22, [sp, #32]
 2e0:	ldp	x27, x28, [sp, #80]
 2e4:	b	160 <ctf_lookup_by_name+0x160>
 2e8:	ldp	x21, x22, [sp, #32]
 2ec:	ldp	x27, x28, [sp, #80]
 2f0:	mov	w1, #0x403                 	// #1027
 2f4:	mov	x0, x23
 2f8:	bl	0 <ctf_set_errno>
 2fc:	mov	x25, x0
 300:	ldp	x19, x20, [sp, #16]
 304:	b	160 <ctf_lookup_by_name+0x160>
 308:	ldp	x19, x20, [sp, #16]
 30c:	ldp	x21, x22, [sp, #32]
 310:	ldp	x27, x28, [sp, #80]
 314:	b	160 <ctf_lookup_by_name+0x160>

0000000000000318 <ctf_lookup_variable>:
 318:	stp	x29, x30, [sp, #-80]!
 31c:	mov	x29, sp
 320:	stp	x21, x22, [sp, #32]
 324:	stp	x23, x24, [sp, #48]
 328:	mov	x23, x0
 32c:	mov	x24, x1
 330:	ldr	x22, [x0, #464]
 334:	ldr	x21, [x0, #472]
 338:	cbz	x21, 39c <ctf_lookup_variable+0x84>
 33c:	stp	x19, x20, [sp, #16]
 340:	str	x25, [sp, #64]
 344:	mov	x20, #0x0                   	// #0
 348:	b	358 <ctf_lookup_variable+0x40>
 34c:	mov	x21, x19
 350:	cmp	x20, x21
 354:	b.cs	394 <ctf_lookup_variable+0x7c>  // b.hs, b.nlast
 358:	add	x19, x20, x21
 35c:	lsr	x19, x19, #1
 360:	lsl	x2, x19, #3
 364:	add	x25, x22, x2
 368:	ldr	w1, [x22, x2]
 36c:	mov	x0, x23
 370:	bl	0 <ctf_strptr>
 374:	mov	x1, x0
 378:	mov	x0, x24
 37c:	bl	0 <strcmp>
 380:	tbnz	w0, #31, 34c <ctf_lookup_variable+0x34>
 384:	cmp	w0, #0x0
 388:	b.le	3c0 <ctf_lookup_variable+0xa8>
 38c:	add	x20, x19, #0x1
 390:	b	350 <ctf_lookup_variable+0x38>
 394:	ldp	x19, x20, [sp, #16]
 398:	ldr	x25, [sp, #64]
 39c:	ldr	x0, [x23, #512]
 3a0:	cbz	x0, 3b0 <ctf_lookup_variable+0x98>
 3a4:	mov	x1, x24
 3a8:	bl	318 <ctf_lookup_variable>
 3ac:	b	3cc <ctf_lookup_variable+0xb4>
 3b0:	mov	w1, #0x407                 	// #1031
 3b4:	mov	x0, x23
 3b8:	bl	0 <ctf_set_errno>
 3bc:	b	3cc <ctf_lookup_variable+0xb4>
 3c0:	ldr	w0, [x25, #4]
 3c4:	ldp	x19, x20, [sp, #16]
 3c8:	ldr	x25, [sp, #64]
 3cc:	ldp	x21, x22, [sp, #32]
 3d0:	ldp	x23, x24, [sp, #48]
 3d4:	ldp	x29, x30, [sp], #80
 3d8:	ret

00000000000003dc <ctf_lookup_symbol_name>:
 3dc:	stp	x29, x30, [sp, #-64]!
 3e0:	mov	x29, sp
 3e4:	str	x19, [sp, #16]
 3e8:	mov	x19, x0
 3ec:	ldr	x0, [x0, #64]
 3f0:	cbz	x0, 43c <ctf_lookup_symbol_name+0x60>
 3f4:	mov	x2, x1
 3f8:	ldr	x1, [x19, #432]
 3fc:	cmp	x1, x2
 400:	b.ls	454 <ctf_lookup_symbol_name+0x78>  // b.plast
 404:	ldr	x1, [x19, #80]
 408:	cmp	x1, #0x10
 40c:	b.eq	46c <ctf_lookup_symbol_name+0x90>  // b.none
 410:	add	x2, x2, x2, lsl #1
 414:	add	x2, x0, x2, lsl #3
 418:	ldr	w1, [x2]
 41c:	ldr	x2, [x19, #360]
 420:	adrp	x0, 0 <_CTF_NULLSTR>
 424:	add	x0, x0, #0x0
 428:	cmp	x1, x2
 42c:	b.cc	480 <ctf_lookup_symbol_name+0xa4>  // b.lo, b.ul, b.last
 430:	ldr	x19, [sp, #16]
 434:	ldp	x29, x30, [sp], #64
 438:	ret
 43c:	mov	w1, #0x3f2                 	// #1010
 440:	mov	x0, x19
 444:	bl	0 <ctf_set_errno>
 448:	adrp	x0, 0 <_CTF_NULLSTR>
 44c:	add	x0, x0, #0x0
 450:	b	430 <ctf_lookup_symbol_name+0x54>
 454:	mov	w1, #0x16                  	// #22
 458:	mov	x0, x19
 45c:	bl	0 <ctf_set_errno>
 460:	adrp	x0, 0 <_CTF_NULLSTR>
 464:	add	x0, x0, #0x0
 468:	b	430 <ctf_lookup_symbol_name+0x54>
 46c:	add	x1, sp, #0x28
 470:	add	x0, x0, x2, lsl #4
 474:	bl	0 <ctf_sym_to_elf64>
 478:	mov	x2, x0
 47c:	b	418 <ctf_lookup_symbol_name+0x3c>
 480:	ldr	x0, [x19, #352]
 484:	add	x0, x0, x1
 488:	b	430 <ctf_lookup_symbol_name+0x54>

000000000000048c <ctf_lookup_by_symbol>:
 48c:	stp	x29, x30, [sp, #-16]!
 490:	mov	x29, sp
 494:	mov	x2, x0
 498:	ldr	x0, [x0, #64]
 49c:	cbz	x0, 4f4 <ctf_lookup_by_symbol+0x68>
 4a0:	ldr	x3, [x2, #432]
 4a4:	cmp	x3, x1
 4a8:	b.ls	504 <ctf_lookup_by_symbol+0x78>  // b.plast
 4ac:	ldr	x3, [x2, #80]
 4b0:	cmp	x3, #0x10
 4b4:	b.eq	514 <ctf_lookup_by_symbol+0x88>  // b.none
 4b8:	add	x3, x1, x1, lsl #1
 4bc:	add	x0, x0, x3, lsl #3
 4c0:	ldrb	w0, [x0, #4]
 4c4:	and	w0, w0, #0xf
 4c8:	cmp	w0, #0x1
 4cc:	b.ne	538 <ctf_lookup_by_symbol+0xac>  // b.any
 4d0:	ldr	x0, [x2, #424]
 4d4:	ldr	w0, [x0, x1, lsl #2]
 4d8:	cmn	w0, #0x1
 4dc:	b.eq	548 <ctf_lookup_by_symbol+0xbc>  // b.none
 4e0:	ldr	x1, [x2, #408]
 4e4:	ldr	w0, [x1, w0, uxtw]
 4e8:	cbz	x0, 558 <ctf_lookup_by_symbol+0xcc>
 4ec:	ldp	x29, x30, [sp], #16
 4f0:	ret
 4f4:	mov	w1, #0x3f2                 	// #1010
 4f8:	mov	x0, x2
 4fc:	bl	0 <ctf_set_errno>
 500:	b	4ec <ctf_lookup_by_symbol+0x60>
 504:	mov	w1, #0x16                  	// #22
 508:	mov	x0, x2
 50c:	bl	0 <ctf_set_errno>
 510:	b	4ec <ctf_lookup_by_symbol+0x60>
 514:	add	x0, x0, x1, lsl #4
 518:	ldrb	w0, [x0, #12]
 51c:	and	w0, w0, #0xf
 520:	cmp	w0, #0x1
 524:	b.eq	4d0 <ctf_lookup_by_symbol+0x44>  // b.none
 528:	mov	w1, #0x406                 	// #1030
 52c:	mov	x0, x2
 530:	bl	0 <ctf_set_errno>
 534:	b	4ec <ctf_lookup_by_symbol+0x60>
 538:	mov	w1, #0x406                 	// #1030
 53c:	mov	x0, x2
 540:	bl	0 <ctf_set_errno>
 544:	b	4ec <ctf_lookup_by_symbol+0x60>
 548:	mov	w1, #0x407                 	// #1031
 54c:	mov	x0, x2
 550:	bl	0 <ctf_set_errno>
 554:	b	4ec <ctf_lookup_by_symbol+0x60>
 558:	mov	w1, #0x407                 	// #1031
 55c:	mov	x0, x2
 560:	bl	0 <ctf_set_errno>
 564:	b	4ec <ctf_lookup_by_symbol+0x60>

0000000000000568 <ctf_lookup_by_id>:
 568:	stp	x29, x30, [sp, #-48]!
 56c:	mov	x29, sp
 570:	stp	x19, x20, [sp, #16]
 574:	str	x21, [sp, #32]
 578:	mov	x20, x0
 57c:	ldr	x0, [x0]
 580:	ldr	w2, [x0, #552]
 584:	tbz	w2, #0, 5ac <ctf_lookup_by_id+0x44>
 588:	ldr	w2, [x0, #544]
 58c:	cmp	x2, x1
 590:	b.cc	5fc <ctf_lookup_by_id+0x94>  // b.lo, b.ul, b.last
 594:	ldr	x19, [x0, #512]
 598:	cbnz	x19, 5b0 <ctf_lookup_by_id+0x48>
 59c:	mov	w1, #0x3f3                 	// #1011
 5a0:	bl	0 <ctf_set_errno>
 5a4:	mov	x21, x19
 5a8:	b	650 <ctf_lookup_by_id+0xe8>
 5ac:	mov	x19, x0
 5b0:	ldr	w2, [x19, #552]
 5b4:	tbnz	w2, #1, 604 <ctf_lookup_by_id+0x9c>
 5b8:	ldr	w2, [x19, #544]
 5bc:	ands	x1, x2, x1
 5c0:	b.eq	644 <ctf_lookup_by_id+0xdc>  // b.none
 5c4:	ldr	x2, [x19, #480]
 5c8:	cmp	x2, x1
 5cc:	b.cc	644 <ctf_lookup_by_id+0xdc>  // b.lo, b.ul, b.last
 5d0:	str	x19, [x20]
 5d4:	ldr	w0, [x19, #552]
 5d8:	tbz	w0, #1, 630 <ctf_lookup_by_id+0xc8>
 5dc:	tbz	w0, #0, 5ec <ctf_lookup_by_id+0x84>
 5e0:	ldr	w0, [x19, #544]
 5e4:	add	w0, w0, #0x1
 5e8:	orr	x1, x1, x0
 5ec:	mov	x0, x19
 5f0:	bl	0 <ctf_dtd_lookup>
 5f4:	add	x21, x0, #0x18
 5f8:	b	650 <ctf_lookup_by_id+0xe8>
 5fc:	mov	x19, x0
 600:	b	5b0 <ctf_lookup_by_id+0x48>
 604:	mov	x0, x19
 608:	bl	0 <ctf_dynamic_type>
 60c:	mov	x21, x0
 610:	cbz	x0, 620 <ctf_lookup_by_id+0xb8>
 614:	str	x19, [x20]
 618:	add	x21, x0, #0x18
 61c:	b	650 <ctf_lookup_by_id+0xe8>
 620:	mov	w1, #0x3fa                 	// #1018
 624:	ldr	x0, [x20]
 628:	bl	0 <ctf_set_errno>
 62c:	b	650 <ctf_lookup_by_id+0xe8>
 630:	ldr	x0, [x19, #440]
 634:	ldr	w0, [x0, x1, lsl #2]
 638:	ldr	x21, [x19, #408]
 63c:	add	x21, x21, x0
 640:	b	650 <ctf_lookup_by_id+0xe8>
 644:	mov	w1, #0x3fa                 	// #1018
 648:	bl	0 <ctf_set_errno>
 64c:	mov	x21, #0x0                   	// #0
 650:	mov	x0, x21
 654:	ldp	x19, x20, [sp, #16]
 658:	ldr	x21, [sp, #32]
 65c:	ldp	x29, x30, [sp], #48
 660:	ret

0000000000000664 <ctf_func_info>:
 664:	stp	x29, x30, [sp, #-64]!
 668:	mov	x29, sp
 66c:	stp	x19, x20, [sp, #16]
 670:	mov	x19, x0
 674:	ldr	x0, [x0, #64]
 678:	cbz	x0, 750 <ctf_func_info+0xec>
 67c:	mov	x20, x2
 680:	ldr	x2, [x19, #432]
 684:	cmp	x2, x1
 688:	b.ls	760 <ctf_func_info+0xfc>  // b.plast
 68c:	ldr	x2, [x19, #80]
 690:	cmp	x2, #0x10
 694:	b.eq	778 <ctf_func_info+0x114>  // b.none
 698:	add	x2, x1, x1, lsl #1
 69c:	add	x0, x0, x2, lsl #3
 6a0:	ldrb	w0, [x0, #4]
 6a4:	and	w0, w0, #0xf
 6a8:	cmp	w0, #0x2
 6ac:	b.ne	79c <ctf_func_info+0x138>  // b.any
 6b0:	ldr	x0, [x19, #424]
 6b4:	ldr	w0, [x0, x1, lsl #2]
 6b8:	cmn	w0, #0x1
 6bc:	b.eq	7ac <ctf_func_info+0x148>  // b.none
 6c0:	stp	x21, x22, [sp, #32]
 6c4:	str	x23, [sp, #48]
 6c8:	ldr	x1, [x19, #408]
 6cc:	add	x22, x1, w0, uxtw
 6d0:	ldr	w23, [x1, w0, uxtw]
 6d4:	ldr	x0, [x19]
 6d8:	ldr	x1, [x0]
 6dc:	mov	w0, w23
 6e0:	blr	x1
 6e4:	mov	w21, w0
 6e8:	ldr	x0, [x19]
 6ec:	ldr	x1, [x0, #16]
 6f0:	mov	w0, w23
 6f4:	blr	x1
 6f8:	mov	w1, w0
 6fc:	orr	w0, w21, w0
 700:	cbz	w0, 7bc <ctf_func_info+0x158>
 704:	cmp	w21, #0x5
 708:	b.ne	7d4 <ctf_func_info+0x170>  // b.any
 70c:	ldr	w0, [x22, #4]
 710:	str	x0, [x20]
 714:	str	w1, [x20, #8]
 718:	str	wzr, [x20, #12]
 71c:	mov	w0, #0x0                   	// #0
 720:	cbz	w1, 7ec <ctf_func_info+0x188>
 724:	sub	w1, w1, #0x1
 728:	add	x22, x22, w1, uxtw #2
 72c:	ldr	w2, [x22, #8]
 730:	cbnz	w2, 7f8 <ctf_func_info+0x194>
 734:	mov	w0, #0x1                   	// #1
 738:	str	w0, [x20, #12]
 73c:	str	w1, [x20, #8]
 740:	mov	w0, #0x0                   	// #0
 744:	ldp	x21, x22, [sp, #32]
 748:	ldr	x23, [sp, #48]
 74c:	b	76c <ctf_func_info+0x108>
 750:	mov	w1, #0x3f2                 	// #1010
 754:	mov	x0, x19
 758:	bl	0 <ctf_set_errno>
 75c:	b	76c <ctf_func_info+0x108>
 760:	mov	w1, #0x16                  	// #22
 764:	mov	x0, x19
 768:	bl	0 <ctf_set_errno>
 76c:	ldp	x19, x20, [sp, #16]
 770:	ldp	x29, x30, [sp], #64
 774:	ret
 778:	add	x0, x0, x1, lsl #4
 77c:	ldrb	w0, [x0, #12]
 780:	and	w0, w0, #0xf
 784:	cmp	w0, #0x2
 788:	b.eq	6b0 <ctf_func_info+0x4c>  // b.none
 78c:	mov	w1, #0x404                 	// #1028
 790:	mov	x0, x19
 794:	bl	0 <ctf_set_errno>
 798:	b	76c <ctf_func_info+0x108>
 79c:	mov	w1, #0x404                 	// #1028
 7a0:	mov	x0, x19
 7a4:	bl	0 <ctf_set_errno>
 7a8:	b	76c <ctf_func_info+0x108>
 7ac:	mov	w1, #0x405                 	// #1029
 7b0:	mov	x0, x19
 7b4:	bl	0 <ctf_set_errno>
 7b8:	b	76c <ctf_func_info+0x108>
 7bc:	mov	w1, #0x405                 	// #1029
 7c0:	mov	x0, x19
 7c4:	bl	0 <ctf_set_errno>
 7c8:	ldp	x21, x22, [sp, #32]
 7cc:	ldr	x23, [sp, #48]
 7d0:	b	76c <ctf_func_info+0x108>
 7d4:	mov	w1, #0x3ef                 	// #1007
 7d8:	mov	x0, x19
 7dc:	bl	0 <ctf_set_errno>
 7e0:	ldp	x21, x22, [sp, #32]
 7e4:	ldr	x23, [sp, #48]
 7e8:	b	76c <ctf_func_info+0x108>
 7ec:	ldp	x21, x22, [sp, #32]
 7f0:	ldr	x23, [sp, #48]
 7f4:	b	76c <ctf_func_info+0x108>
 7f8:	ldp	x21, x22, [sp, #32]
 7fc:	ldr	x23, [sp, #48]
 800:	b	76c <ctf_func_info+0x108>

0000000000000804 <ctf_func_args>:
 804:	stp	x29, x30, [sp, #-64]!
 808:	mov	x29, sp
 80c:	stp	x19, x20, [sp, #16]
 810:	stp	x21, x22, [sp, #32]
 814:	mov	x21, x0
 818:	mov	x22, x1
 81c:	mov	w20, w2
 820:	mov	x19, x3
 824:	add	x2, sp, #0x30
 828:	bl	664 <ctf_func_info>
 82c:	tbnz	w0, #31, 888 <ctf_func_args+0x84>
 830:	ldr	x0, [x21, #424]
 834:	ldr	w1, [x0, x22, lsl #2]
 838:	ldr	x0, [x21, #408]
 83c:	add	x0, x0, #0x8
 840:	add	x1, x1, x0
 844:	ldr	w0, [sp, #56]
 848:	cmp	w0, w20
 84c:	csel	w0, w0, w20, ls  // ls = plast
 850:	cbz	w0, 890 <ctf_func_args+0x8c>
 854:	sub	w0, w0, #0x1
 858:	add	x2, x0, #0x1
 85c:	add	x2, x19, x2, lsl #3
 860:	ldr	w0, [x1]
 864:	add	x1, x1, #0x4
 868:	str	x0, [x19], #8
 86c:	cmp	x19, x2
 870:	b.ne	860 <ctf_func_args+0x5c>  // b.any
 874:	mov	w0, #0x0                   	// #0
 878:	ldp	x19, x20, [sp, #16]
 87c:	ldp	x21, x22, [sp, #32]
 880:	ldp	x29, x30, [sp], #64
 884:	ret
 888:	mov	w0, #0xffffffff            	// #-1
 88c:	b	878 <ctf_func_args+0x74>
 890:	mov	w0, #0x0                   	// #0
 894:	b	878 <ctf_func_args+0x74>

ctf-open.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <get_kind_v1>:
       0:	ubfx	x0, x0, #11, #5
       4:	ret

0000000000000008 <get_root_v1>:
       8:	ubfx	x0, x0, #10, #1
       c:	ret

0000000000000010 <get_vlen_v1>:
      10:	and	w0, w0, #0x3ff
      14:	ret

0000000000000018 <get_kind_v2>:
      18:	lsr	w0, w0, #26
      1c:	ret

0000000000000020 <get_root_v2>:
      20:	ubfx	x0, x0, #25, #1
      24:	ret

0000000000000028 <get_vlen_v2>:
      28:	and	w0, w0, #0xffffff
      2c:	ret

0000000000000030 <get_ctt_size_v1>:
      30:	ldr	w7, [x1, #8]
      34:	ldr	w5, [x1, #12]
      38:	ldrh	w1, [x1, #6]
      3c:	and	x0, x1, #0xffff
      40:	mov	x4, #0x8                   	// #8
      44:	mov	w6, #0xffff                	// #65535
      48:	cmp	w1, w6
      4c:	b.eq	64 <get_ctt_size_v1+0x34>  // b.none
      50:	cbz	x2, 58 <get_ctt_size_v1+0x28>
      54:	str	x0, [x2]
      58:	cbz	x3, 60 <get_ctt_size_v1+0x30>
      5c:	str	x4, [x3]
      60:	ret
      64:	mov	w0, w5
      68:	orr	x0, x0, x7, lsl #32
      6c:	mov	x4, #0x10                  	// #16
      70:	b	50 <get_ctt_size_v1+0x20>

0000000000000074 <get_ctt_size_v2>:
      74:	ldr	w6, [x1, #12]
      78:	ldr	w5, [x1, #16]
      7c:	ldr	w1, [x1, #8]
      80:	mov	w0, w1
      84:	mov	x4, #0xc                   	// #12
      88:	cmn	w1, #0x1
      8c:	b.eq	a4 <get_ctt_size_v2+0x30>  // b.none
      90:	cbz	x2, 98 <get_ctt_size_v2+0x24>
      94:	str	x0, [x2]
      98:	cbz	x3, a0 <get_ctt_size_v2+0x2c>
      9c:	str	x4, [x3]
      a0:	ret
      a4:	mov	w0, w5
      a8:	orr	x0, x0, x6, lsl #32
      ac:	mov	x4, #0x14                  	// #20
      b0:	b	90 <get_ctt_size_v2+0x1c>

00000000000000b4 <get_vbytes_common>:
      b4:	and	w1, w0, #0xffff
      b8:	cmp	w1, #0x8
      bc:	b.eq	124 <get_vbytes_common+0x70>  // b.none
      c0:	b.hi	108 <get_vbytes_common+0x54>  // b.pmore
      c4:	cmp	w1, #0x2
      c8:	b.hi	dc <get_vbytes_common+0x28>  // b.pmore
      cc:	cmp	w1, #0x0
      d0:	cset	x0, ne  // ne = any
      d4:	lsl	x0, x0, #2
      d8:	ret
      dc:	mov	x0, #0x0                   	// #0
      e0:	cmp	w1, #0x3
      e4:	b.eq	120 <get_vbytes_common+0x6c>  // b.none
      e8:	stp	x29, x30, [sp, #-16]!
      ec:	mov	x29, sp
      f0:	adrp	x0, 0 <get_kind_v1>
      f4:	add	x0, x0, #0x0
      f8:	bl	0 <ctf_dprintf>
      fc:	mov	x0, #0x3ef                 	// #1007
     100:	ldp	x29, x30, [sp], #16
     104:	ret
     108:	mov	x0, #0x0                   	// #0
     10c:	cmp	w1, #0xd
     110:	b.ls	120 <get_vbytes_common+0x6c>  // b.plast
     114:	mov	x0, #0x8                   	// #8
     118:	cmp	w1, #0xe
     11c:	b.ne	e8 <get_vbytes_common+0x34>  // b.any
     120:	ret
     124:	lsl	x0, x2, #3
     128:	ret

000000000000012c <get_vbytes_v2>:
     12c:	and	w3, w0, #0xffff
     130:	cmp	w3, #0x5
     134:	b.eq	178 <get_vbytes_v2+0x4c>  // b.none
     138:	b.hi	14c <get_vbytes_v2+0x20>  // b.pmore
     13c:	mov	x0, #0xc                   	// #12
     140:	cmp	w3, #0x4
     144:	b.ne	188 <get_vbytes_v2+0x5c>  // b.any
     148:	ret
     14c:	sub	w0, w3, #0x6
     150:	and	w0, w0, #0xffff
     154:	cmp	w0, #0x1
     158:	b.hi	188 <get_vbytes_v2+0x5c>  // b.pmore
     15c:	add	x0, x2, x2, lsl #1
     160:	lsl	x0, x0, #2
     164:	lsl	x2, x2, #4
     168:	mov	x3, #0x1fffffff            	// #536870911
     16c:	cmp	x1, x3
     170:	csel	x0, x2, x0, gt
     174:	ret
     178:	add	x2, x2, #0x1
     17c:	and	x0, x2, #0xfffffffffffffffe
     180:	lsl	x0, x0, #2
     184:	ret
     188:	stp	x29, x30, [sp, #-16]!
     18c:	mov	x29, sp
     190:	mov	w0, w3
     194:	bl	b4 <get_vbytes_common>
     198:	ldp	x29, x30, [sp], #16
     19c:	ret

00000000000001a0 <get_vbytes_v1>:
     1a0:	and	w3, w0, #0xffff
     1a4:	cmp	w3, #0x5
     1a8:	b.eq	1e8 <get_vbytes_v1+0x48>  // b.none
     1ac:	b.hi	1c0 <get_vbytes_v1+0x20>  // b.pmore
     1b0:	mov	x0, #0x8                   	// #8
     1b4:	cmp	w3, #0x4
     1b8:	b.ne	1f8 <get_vbytes_v1+0x58>  // b.any
     1bc:	ret
     1c0:	sub	w0, w3, #0x6
     1c4:	and	w0, w0, #0xffff
     1c8:	cmp	w0, #0x1
     1cc:	b.hi	1f8 <get_vbytes_v1+0x58>  // b.pmore
     1d0:	lsl	x0, x2, #3
     1d4:	lsl	x2, x2, #4
     1d8:	mov	x3, #0x1fff                	// #8191
     1dc:	cmp	x1, x3
     1e0:	csel	x0, x2, x0, gt
     1e4:	ret
     1e8:	add	x2, x2, #0x1
     1ec:	and	x0, x2, #0xfffffffffffffffe
     1f0:	lsl	x0, x0, #1
     1f4:	ret
     1f8:	stp	x29, x30, [sp, #-16]!
     1fc:	mov	x29, sp
     200:	mov	w0, w3
     204:	bl	b4 <get_vbytes_common>
     208:	ldp	x29, x30, [sp], #16
     20c:	ret

0000000000000210 <flip_objts>:
     210:	lsr	x3, x1, #2
     214:	cmp	xzr, x1, lsr #2
     218:	b.eq	238 <flip_objts+0x28>  // b.none
     21c:	mov	x1, #0x0                   	// #0
     220:	ldr	w2, [x0, x1, lsl #2]
     224:	rev	w2, w2
     228:	str	w2, [x0, x1, lsl #2]
     22c:	add	x1, x1, #0x1
     230:	cmp	x3, x1
     234:	b.ne	220 <flip_objts+0x10>  // b.any
     238:	ret

000000000000023c <ctf_set_base>:
     23c:	stp	x29, x30, [sp, #-32]!
     240:	mov	x29, sp
     244:	stp	x19, x20, [sp, #16]
     248:	mov	x19, x0
     24c:	mov	x20, x1
     250:	ldr	x0, [x0, #408]
     254:	ldr	x1, [x19, #392]
     258:	sub	x0, x0, x1
     25c:	add	x0, x2, x0
     260:	str	x0, [x19, #408]
     264:	str	x2, [x19, #392]
     268:	ldr	w1, [x20, #36]
     26c:	add	x1, x0, x1
     270:	str	x1, [x19, #464]
     274:	ldr	w1, [x20, #40]
     278:	ldr	w2, [x20, #36]
     27c:	sub	w1, w1, w2
     280:	lsr	w1, w1, #3
     284:	str	x1, [x19, #472]
     288:	ldr	w1, [x20, #44]
     28c:	add	x0, x0, x1
     290:	str	x0, [x19, #336]
     294:	ldr	w0, [x20, #48]
     298:	str	x0, [x19, #344]
     29c:	ldr	w1, [x20, #4]
     2a0:	cbnz	w1, 2fc <ctf_set_base+0xc0>
     2a4:	ldr	w1, [x20, #8]
     2a8:	cbnz	w1, 30c <ctf_set_base+0xd0>
     2ac:	ldr	w1, [x20, #12]
     2b0:	cbnz	w1, 31c <ctf_set_base+0xe0>
     2b4:	ldr	x1, [x19, #496]
     2b8:	cbz	x1, 2c8 <ctf_set_base+0x8c>
     2bc:	adrp	x0, 0 <get_kind_v1>
     2c0:	add	x0, x0, #0x0
     2c4:	bl	0 <ctf_dprintf>
     2c8:	ldr	x1, [x19, #528]
     2cc:	cbz	x1, 2f0 <ctf_set_base+0xb4>
     2d0:	ldr	x2, [x19, #520]
     2d4:	adrp	x0, 0 <get_kind_v1>
     2d8:	add	x0, x0, #0x0
     2dc:	cmp	x2, #0x0
     2e0:	csel	x2, x0, x2, eq  // eq = none
     2e4:	adrp	x0, 0 <get_kind_v1>
     2e8:	add	x0, x0, #0x0
     2ec:	bl	0 <ctf_dprintf>
     2f0:	ldp	x19, x20, [sp, #16]
     2f4:	ldp	x29, x30, [sp], #32
     2f8:	ret
     2fc:	mov	x0, x19
     300:	bl	0 <ctf_strptr>
     304:	str	x0, [x19, #520]
     308:	b	2a4 <ctf_set_base+0x68>
     30c:	mov	x0, x19
     310:	bl	0 <ctf_strptr>
     314:	str	x0, [x19, #528]
     318:	b	2ac <ctf_set_base+0x70>
     31c:	mov	x0, x19
     320:	bl	0 <ctf_strptr>
     324:	str	x0, [x19, #496]
     328:	b	2b4 <ctf_set_base+0x78>

000000000000032c <init_types>:
     32c:	sub	sp, sp, #0x2a0
     330:	stp	x29, x30, [sp]
     334:	mov	x29, sp
     338:	stp	x19, x20, [sp, #16]
     33c:	stp	x21, x22, [sp, #32]
     340:	stp	x23, x24, [sp, #48]
     344:	stp	x25, x26, [sp, #64]
     348:	stp	x27, x28, [sp, #80]
     34c:	mov	x19, x0
     350:	mov	x22, x1
     354:	mov	x2, #0x200                 	// #512
     358:	mov	w1, #0x0                   	// #0
     35c:	add	x0, sp, #0xa0
     360:	bl	0 <memset>
     364:	ldr	w26, [x22, #8]
     368:	ldr	w0, [x19, #552]
     36c:	tbnz	w0, #1, 3a4 <init_types+0x78>
     370:	ldr	w0, [x19, #560]
     374:	cmp	w0, #0x1
     378:	b.eq	3c4 <init_types+0x98>  // b.none
     37c:	ldr	x21, [x19, #408]
     380:	ldr	w20, [x22, #40]
     384:	add	x20, x21, x20
     388:	ldr	w0, [x22, #44]
     38c:	add	x21, x21, x0
     390:	cmp	x20, x21
     394:	b.cs	97c <init_types+0x650>  // b.hs, b.nlast
     398:	mov	x22, x20
     39c:	add	x24, sp, #0xa0
     3a0:	b	8f0 <init_types+0x5c4>
     3a4:	adrp	x3, 0 <get_kind_v1>
     3a8:	add	x3, x3, #0x0
     3ac:	mov	w2, #0x29c                 	// #668
     3b0:	adrp	x1, 0 <get_kind_v1>
     3b4:	add	x1, x1, #0x0
     3b8:	adrp	x0, 0 <get_kind_v1>
     3bc:	add	x0, x0, #0x0
     3c0:	bl	0 <__assert_fail>
     3c4:	ldrb	w0, [x22, #2]
     3c8:	cmp	w0, #0x1
     3cc:	b.eq	3e4 <init_types+0xb8>  // b.none
     3d0:	cmp	w0, #0x2
     3d4:	b.ne	37c <init_types+0x50>  // b.any
     3d8:	mov	w0, #0x7fff                	// #32767
     3dc:	str	w0, [x19, #544]
     3e0:	b	37c <init_types+0x50>
     3e4:	ldr	x0, [x19, #400]
     3e8:	str	x0, [sp, #136]
     3ec:	ldr	x0, [x19, #408]
     3f0:	ldr	w23, [x22, #40]
     3f4:	add	x23, x0, x23
     3f8:	ldr	w1, [x22, #44]
     3fc:	add	x0, x0, x1
     400:	str	x0, [sp, #128]
     404:	cmp	x23, x0
     408:	b.cs	4b0 <init_types+0x184>  // b.hs, b.nlast
     40c:	mov	x20, x23
     410:	mov	x28, #0x0                   	// #0
     414:	b	470 <init_types+0x144>
     418:	mov	x2, x21
     41c:	mov	x1, x27
     420:	ldrh	w0, [sp, #104]
     424:	bl	1a0 <get_vbytes_v1>
     428:	mov	x24, x0
     42c:	mov	x2, x21
     430:	mov	x1, x27
     434:	ldrh	w0, [sp, #104]
     438:	bl	12c <get_vbytes_v2>
     43c:	cmp	x24, #0x0
     440:	ccmp	x27, #0x0, #0x1, ge  // ge = tcont
     444:	b.lt	3d8 <init_types+0xac>  // b.tstop
     448:	mov	x1, #0xc                   	// #12
     44c:	sub	x1, x1, x25
     450:	add	x28, x1, x28
     454:	sub	x0, x0, x24
     458:	add	x28, x0, x28
     45c:	add	x24, x25, x24
     460:	add	x20, x20, x24
     464:	ldr	x0, [sp, #128]
     468:	cmp	x0, x20
     46c:	b.ls	4b4 <init_types+0x188>  // b.plast
     470:	ldrh	w21, [x20, #4]
     474:	lsr	w0, w21, #11
     478:	str	w0, [sp, #104]
     47c:	and	x21, x21, #0x3ff
     480:	ldr	w2, [x20, #8]
     484:	ldr	w1, [x20, #12]
     488:	ldrh	w0, [x20, #6]
     48c:	and	x27, x0, #0xffff
     490:	mov	x25, #0x8                   	// #8
     494:	mov	w3, #0xffff                	// #65535
     498:	cmp	w0, w3
     49c:	b.ne	418 <init_types+0xec>  // b.any
     4a0:	mov	w1, w1
     4a4:	orr	x27, x1, x2, lsl #32
     4a8:	mov	x25, #0x10                  	// #16
     4ac:	b	418 <init_types+0xec>
     4b0:	mov	x28, #0x0                   	// #0
     4b4:	ldr	x0, [x19, #416]
     4b8:	add	x0, x28, x0
     4bc:	bl	0 <malloc>
     4c0:	mov	x20, x0
     4c4:	cbz	x0, 3d8 <init_types+0xac>
     4c8:	ldr	x24, [x19, #408]
     4cc:	ldr	w21, [x22, #40]
     4d0:	mov	w27, w21
     4d4:	mov	x2, x27
     4d8:	mov	x1, x24
     4dc:	bl	0 <memcpy>
     4e0:	ldr	w25, [x22, #44]
     4e4:	mov	w1, w25
     4e8:	add	x0, x28, x1
     4ec:	ldr	w2, [x22, #48]
     4f0:	add	x1, x24, x1
     4f4:	add	x0, x20, x0
     4f8:	bl	0 <memcpy>
     4fc:	sub	w2, w25, w21
     500:	add	x2, x2, x28
     504:	mov	w1, #0x0                   	// #0
     508:	add	x0, x20, x27
     50c:	bl	0 <memset>
     510:	add	w25, w25, w28
     514:	str	w25, [x22, #44]
     518:	ldr	x0, [x19, #416]
     51c:	add	x28, x0, x28
     520:	str	x28, [x19, #416]
     524:	ldr	w1, [x22, #44]
     528:	ldr	w0, [x22, #40]
     52c:	cmp	w1, w0
     530:	b.cc	5a4 <init_types+0x278>  // b.lo, b.ul, b.last
     534:	str	x20, [x19, #392]
     538:	str	x20, [x19, #408]
     53c:	str	x20, [x19, #400]
     540:	mov	x2, x20
     544:	mov	x1, x22
     548:	mov	x0, x19
     54c:	bl	23c <ctf_set_base>
     550:	ldr	w0, [x22, #40]
     554:	ldr	x25, [x19, #408]
     558:	add	x25, x25, x0
     55c:	ldr	x0, [sp, #128]
     560:	cmp	x23, x0
     564:	b.cc	6bc <init_types+0x390>  // b.lo, b.ul, b.last
     568:	ldr	x0, [x19, #408]
     56c:	sub	x25, x25, x0
     570:	ldr	w0, [x22, #44]
     574:	cmp	x25, x0
     578:	b.ne	868 <init_types+0x53c>  // b.any
     57c:	mov	w0, #0x2                   	// #2
     580:	str	w0, [x19, #560]
     584:	strb	w0, [x22, #2]
     588:	adrp	x0, 0 <get_kind_v1>
     58c:	add	x0, x0, #0x0
     590:	add	x0, x0, #0x78
     594:	str	x0, [x19]
     598:	ldr	x0, [sp, #136]
     59c:	bl	0 <free>
     5a0:	b	3d8 <init_types+0xac>
     5a4:	adrp	x3, 0 <get_kind_v1>
     5a8:	add	x3, x3, #0x0
     5ac:	add	x3, x3, #0x10
     5b0:	mov	w2, #0x1d0                 	// #464
     5b4:	adrp	x1, 0 <get_kind_v1>
     5b8:	add	x1, x1, #0x0
     5bc:	adrp	x0, 0 <get_kind_v1>
     5c0:	add	x0, x0, #0x0
     5c4:	bl	0 <__assert_fail>
     5c8:	mov	w1, w1
     5cc:	orr	x24, x1, x2, lsl #32
     5d0:	mov	x0, #0x10                  	// #16
     5d4:	str	x0, [sp, #112]
     5d8:	b	6f8 <init_types+0x3cc>
     5dc:	mov	x0, #0xfffffffe            	// #4294967294
     5e0:	cmp	x24, x0
     5e4:	b.hi	5f0 <init_types+0x2c4>  // b.pmore
     5e8:	str	w24, [x25, #8]
     5ec:	b	760 <init_types+0x434>
     5f0:	lsr	x0, x24, #32
     5f4:	str	w0, [x25, #12]
     5f8:	str	w24, [x25, #16]
     5fc:	ldr	w28, [x25, #8]
     600:	cmn	w28, #0x1
     604:	b.ne	764 <init_types+0x438>  // b.any
     608:	ldr	w28, [x25, #12]
     60c:	ldr	w0, [x25, #16]
     610:	orr	x28, x0, x28, lsl #32
     614:	mov	x0, #0x14                  	// #20
     618:	str	x0, [sp, #120]
     61c:	b	770 <init_types+0x444>
     620:	adrp	x3, 0 <get_kind_v1>
     624:	add	x3, x3, #0x0
     628:	add	x3, x3, #0x10
     62c:	mov	w2, #0x210                 	// #528
     630:	adrp	x1, 0 <get_kind_v1>
     634:	add	x1, x1, #0x0
     638:	adrp	x0, 0 <get_kind_v1>
     63c:	add	x0, x0, #0x0
     640:	bl	0 <__assert_fail>
     644:	sub	w20, w20, #0x6
     648:	and	w20, w20, #0xffff
     64c:	cmp	w20, #0x1
     650:	b.hi	688 <init_types+0x35c>  // b.pmore
     654:	mov	x0, x23
     658:	sub	x9, x25, x23
     65c:	mov	x8, #0x1fff                	// #8191
     660:	mov	x7, #0x1fffffff            	// #536870911
     664:	cbnz	x21, 814 <init_types+0x4e8>
     668:	b	6a4 <init_types+0x378>
     66c:	mov	x1, x25
     670:	mov	x0, x23
     674:	cbz	x21, 688 <init_types+0x35c>
     678:	ldrh	w2, [x0], #2
     67c:	str	w2, [x1], #4
     680:	subs	x21, x21, #0x1
     684:	b.ne	678 <init_types+0x34c>  // b.any
     688:	ldr	x0, [sp, #104]
     68c:	cmp	x27, x0
     690:	b.ne	844 <init_types+0x518>  // b.any
     694:	mov	x2, x27
     698:	mov	x1, x23
     69c:	mov	x0, x25
     6a0:	bl	0 <memcpy>
     6a4:	add	x23, x27, x23
     6a8:	ldr	x0, [sp, #104]
     6ac:	add	x25, x0, x25
     6b0:	ldr	x0, [sp, #128]
     6b4:	cmp	x0, x23
     6b8:	b.ls	568 <init_types+0x23c>  // b.plast
     6bc:	ldrh	w21, [x23, #4]
     6c0:	lsr	w20, w21, #11
     6c4:	and	w28, w21, #0x400
     6c8:	and	w0, w21, #0x3ff
     6cc:	str	w0, [sp, #104]
     6d0:	and	x21, x21, #0x3ff
     6d4:	ldr	w2, [x23, #8]
     6d8:	ldr	w1, [x23, #12]
     6dc:	ldrh	w0, [x23, #6]
     6e0:	and	x24, x0, #0xffff
     6e4:	mov	x3, #0x8                   	// #8
     6e8:	str	x3, [sp, #112]
     6ec:	mov	w3, #0xffff                	// #65535
     6f0:	cmp	w0, w3
     6f4:	b.eq	5c8 <init_types+0x29c>  // b.none
     6f8:	mov	x2, x21
     6fc:	mov	x1, x24
     700:	mov	w0, w20
     704:	bl	1a0 <get_vbytes_v1>
     708:	mov	x27, x0
     70c:	ldr	w0, [x23]
     710:	str	w0, [x25]
     714:	cmp	w28, #0x0
     718:	cset	w0, ne  // ne = any
     71c:	lsl	w0, w0, #25
     720:	orr	w0, w0, w20, lsl #26
     724:	ldr	w1, [sp, #104]
     728:	orr	w0, w0, w1
     72c:	str	w0, [x25, #4]
     730:	cmp	w20, #0xd
     734:	b.hi	5fc <init_types+0x2d0>  // b.pmore
     738:	mov	x0, #0x1                   	// #1
     73c:	lsl	x0, x0, x20
     740:	mov	x1, #0x1d7                 	// #471
     744:	tst	x0, x1
     748:	b.ne	5dc <init_types+0x2b0>  // b.any
     74c:	mov	x1, #0x3e28                	// #15912
     750:	tst	x0, x1
     754:	b.eq	5fc <init_types+0x2d0>  // b.none
     758:	ldrh	w0, [x23, #6]
     75c:	str	w0, [x25, #8]
     760:	ldr	w28, [x25, #8]
     764:	mov	w28, w28
     768:	mov	x0, #0xc                   	// #12
     76c:	str	x0, [sp, #120]
     770:	mov	x2, x21
     774:	mov	x1, x28
     778:	mov	w0, w20
     77c:	bl	12c <get_vbytes_v2>
     780:	str	x0, [sp, #104]
     784:	cmp	x24, x28
     788:	b.ne	620 <init_types+0x2f4>  // b.any
     78c:	ldr	x0, [sp, #112]
     790:	add	x23, x23, x0
     794:	mov	x1, x23
     798:	ldr	x0, [sp, #120]
     79c:	add	x25, x25, x0
     7a0:	mov	x2, x25
     7a4:	cmp	w20, #0x5
     7a8:	b.eq	66c <init_types+0x340>  // b.none
     7ac:	b.hi	644 <init_types+0x318>  // b.pmore
     7b0:	cmp	w20, #0x4
     7b4:	b.ne	688 <init_types+0x35c>  // b.any
     7b8:	ldrh	w0, [x23]
     7bc:	str	w0, [x25]
     7c0:	ldrh	w0, [x23, #2]
     7c4:	str	w0, [x25, #4]
     7c8:	ldr	w0, [x23, #4]
     7cc:	str	w0, [x25, #8]
     7d0:	b	6a4 <init_types+0x378>
     7d4:	ldr	w3, [x0, #8]
     7d8:	ldr	w5, [x0, #12]
     7dc:	orr	x3, x5, x3, lsl #32
     7e0:	ldr	w6, [x0]
     7e4:	ldrh	w5, [x0, #4]
     7e8:	b	82c <init_types+0x500>
     7ec:	str	w6, [x4]
     7f0:	str	w5, [x4, #8]
     7f4:	lsr	x5, x3, #32
     7f8:	str	w5, [x4, #4]
     7fc:	str	w3, [x4, #12]
     800:	add	x1, x1, #0x8
     804:	add	x0, x0, #0x10
     808:	add	x2, x2, #0xc
     80c:	subs	x21, x21, #0x1
     810:	b.eq	6a4 <init_types+0x378>  // b.none
     814:	add	x4, x0, x9
     818:	cmp	x24, x8
     81c:	b.gt	7d4 <init_types+0x4a8>
     820:	ldrh	w3, [x1, #6]
     824:	ldr	w6, [x1]
     828:	ldrh	w5, [x1, #4]
     82c:	cmp	x24, x7
     830:	b.gt	7ec <init_types+0x4c0>
     834:	str	w6, [x2]
     838:	str	w5, [x2, #8]
     83c:	str	w3, [x2, #4]
     840:	b	800 <init_types+0x4d4>
     844:	adrp	x3, 0 <get_kind_v1>
     848:	add	x3, x3, #0x0
     84c:	add	x3, x3, #0x10
     850:	mov	w2, #0x25c                 	// #604
     854:	adrp	x1, 0 <get_kind_v1>
     858:	add	x1, x1, #0x0
     85c:	adrp	x0, 0 <get_kind_v1>
     860:	add	x0, x0, #0x0
     864:	bl	0 <__assert_fail>
     868:	adrp	x3, 0 <get_kind_v1>
     86c:	add	x3, x3, #0x0
     870:	add	x3, x3, #0x10
     874:	mov	w2, #0x265                 	// #613
     878:	adrp	x1, 0 <get_kind_v1>
     87c:	add	x1, x1, #0x0
     880:	adrp	x0, 0 <get_kind_v1>
     884:	add	x0, x0, #0x0
     888:	bl	0 <__assert_fail>
     88c:	mov	w0, #0x3ef                 	// #1007
     890:	ldp	x19, x20, [sp, #16]
     894:	ldp	x21, x22, [sp, #32]
     898:	ldp	x23, x24, [sp, #48]
     89c:	ldp	x25, x26, [sp, #64]
     8a0:	ldp	x27, x28, [sp, #80]
     8a4:	ldp	x29, x30, [sp]
     8a8:	add	sp, sp, #0x2a0
     8ac:	ret
     8b0:	mov	w1, w1
     8b4:	ldr	x2, [x24, x1, lsl #3]
     8b8:	add	x2, x2, #0x1
     8bc:	str	x2, [x24, x1, lsl #3]
     8c0:	add	x0, x22, x0
     8c4:	ldr	x22, [sp, #152]
     8c8:	add	x22, x0, x22
     8cc:	and	x23, x23, #0xffff
     8d0:	ldr	x0, [x24, x23, lsl #3]
     8d4:	add	x0, x0, #0x1
     8d8:	str	x0, [x24, x23, lsl #3]
     8dc:	ldr	x0, [x19, #480]
     8e0:	add	x0, x0, #0x1
     8e4:	str	x0, [x19, #480]
     8e8:	cmp	x21, x22
     8ec:	b.ls	97c <init_types+0x650>  // b.plast
     8f0:	ldr	x0, [x19]
     8f4:	ldr	x1, [x0]
     8f8:	ldr	w0, [x22, #4]
     8fc:	blr	x1
     900:	mov	w23, w0
     904:	and	w25, w0, #0xffff
     908:	ldr	x0, [x19]
     90c:	ldr	x1, [x0, #16]
     910:	ldr	w0, [x22, #4]
     914:	blr	x1
     918:	mov	w27, w0
     91c:	ldr	x0, [x19]
     920:	ldr	x4, [x0, #24]
     924:	add	x3, sp, #0x98
     928:	add	x2, sp, #0x90
     92c:	mov	x1, x22
     930:	mov	x0, x19
     934:	blr	x4
     938:	ldr	x0, [x19]
     93c:	ldr	x3, [x0, #32]
     940:	mov	w2, w27
     944:	ldr	x1, [sp, #144]
     948:	mov	w0, w25
     94c:	blr	x3
     950:	tbnz	x0, #63, 88c <init_types+0x560>
     954:	cmp	w25, #0x9
     958:	b.ne	8c0 <init_types+0x594>  // b.any
     95c:	ldr	w1, [x22, #8]
     960:	sub	w2, w1, #0x1
     964:	cmp	w2, #0x3d
     968:	b.ls	8b0 <init_types+0x584>  // b.plast
     96c:	ldr	x1, [sp, #208]
     970:	add	x1, x1, #0x1
     974:	str	x1, [sp, #208]
     978:	b	8c0 <init_types+0x594>
     97c:	cbz	w26, ae0 <init_types+0x7b4>
     980:	mov	x1, x19
     984:	adrp	x0, 0 <get_kind_v1>
     988:	add	x0, x0, #0x0
     98c:	bl	0 <ctf_dprintf>
     990:	ldr	w0, [x19, #552]
     994:	orr	w0, w0, #0x1
     998:	str	w0, [x19, #552]
     99c:	adrp	x2, 0 <ctf_hash_eq_string>
     9a0:	add	x2, x2, #0x0
     9a4:	adrp	x1, 0 <ctf_hash_string>
     9a8:	add	x1, x1, #0x0
     9ac:	ldr	x0, [sp, #208]
     9b0:	bl	0 <ctf_hash_create>
     9b4:	str	x0, [x19, #152]
     9b8:	cbz	x0, f80 <init_types+0xc54>
     9bc:	adrp	x2, 0 <ctf_hash_eq_string>
     9c0:	add	x2, x2, #0x0
     9c4:	adrp	x1, 0 <ctf_hash_string>
     9c8:	add	x1, x1, #0x0
     9cc:	ldr	x0, [sp, #216]
     9d0:	bl	0 <ctf_hash_create>
     9d4:	str	x0, [x19, #168]
     9d8:	cbz	x0, f88 <init_types+0xc5c>
     9dc:	adrp	x2, 0 <ctf_hash_eq_string>
     9e0:	add	x2, x2, #0x0
     9e4:	adrp	x1, 0 <ctf_hash_string>
     9e8:	add	x1, x1, #0x0
     9ec:	ldr	x0, [sp, #224]
     9f0:	bl	0 <ctf_hash_create>
     9f4:	str	x0, [x19, #184]
     9f8:	cbz	x0, f90 <init_types+0xc64>
     9fc:	ldr	x0, [sp, #200]
     a00:	ldr	x1, [sp, #240]
     a04:	add	x0, x0, x1
     a08:	ldr	x1, [sp, #168]
     a0c:	ldr	x2, [sp, #176]
     a10:	add	x1, x1, x2
     a14:	add	x0, x0, x1
     a18:	ldr	x1, [sp, #184]
     a1c:	ldr	x2, [sp, #248]
     a20:	add	x1, x1, x2
     a24:	add	x0, x0, x1
     a28:	ldr	x3, [sp, #256]
     a2c:	ldr	x1, [sp, #264]
     a30:	add	x3, x3, x1
     a34:	adrp	x2, 0 <ctf_hash_eq_string>
     a38:	add	x2, x2, #0x0
     a3c:	adrp	x1, 0 <ctf_hash_string>
     a40:	add	x1, x1, #0x0
     a44:	add	x0, x0, x3
     a48:	bl	0 <ctf_hash_create>
     a4c:	str	x0, [x19, #200]
     a50:	cbz	x0, f98 <init_types+0xc6c>
     a54:	ldr	x23, [x19, #480]
     a58:	add	x23, x23, #0x1
     a5c:	lsl	x24, x23, #2
     a60:	mov	x0, x24
     a64:	bl	0 <malloc>
     a68:	mov	x22, x0
     a6c:	str	x0, [x19, #440]
     a70:	str	x23, [x19, #456]
     a74:	mov	x0, x24
     a78:	bl	0 <malloc>
     a7c:	mov	x23, x0
     a80:	str	x0, [x19, #448]
     a84:	cmp	x0, #0x0
     a88:	ccmp	x22, #0x0, #0x4, ne  // ne = any
     a8c:	b.eq	fa0 <init_types+0xc74>  // b.none
     a90:	cmp	w26, #0x0
     a94:	cset	w0, ne  // ne = any
     a98:	str	w0, [sp, #128]
     a9c:	mov	x27, x22
     aa0:	str	wzr, [x27], #4
     aa4:	mov	x2, x24
     aa8:	mov	w1, #0x0                   	// #0
     aac:	mov	x0, x22
     ab0:	bl	0 <memset>
     ab4:	mov	x2, x24
     ab8:	mov	w1, #0x0                   	// #0
     abc:	mov	x0, x23
     ac0:	bl	0 <memset>
     ac4:	cmp	x20, x21
     ac8:	b.cs	e20 <init_types+0xaf4>  // b.hs, b.nlast
     acc:	str	wzr, [sp, #120]
     ad0:	str	wzr, [sp, #112]
     ad4:	mov	w25, #0x1                   	// #1
     ad8:	mov	x28, #0x1fffffff            	// #536870911
     adc:	b	c20 <init_types+0x8f4>
     ae0:	mov	x1, x19
     ae4:	adrp	x0, 0 <get_kind_v1>
     ae8:	add	x0, x0, #0x0
     aec:	bl	0 <ctf_dprintf>
     af0:	b	99c <init_types+0x670>
     af4:	cmp	w1, #0x2
     af8:	b.ls	b3c <init_types+0x810>  // b.plast
     afc:	cmp	w1, #0x3
     b00:	b.ne	b40 <init_types+0x814>  // b.any
     b04:	ldr	w0, [x20, #8]
     b08:	ldr	w1, [x19, #544]
     b0c:	cmp	w0, w1
     b10:	cset	w2, hi  // hi = pmore
     b14:	ldr	w3, [sp, #128]
     b18:	cmp	w2, w3
     b1c:	b.ne	b68 <init_types+0x83c>  // b.any
     b20:	and	w0, w0, w1
     b24:	ldr	x1, [x19, #480]
     b28:	cmp	x0, x1
     b2c:	b.hi	b68 <init_types+0x83c>  // b.pmore
     b30:	ldr	x1, [x19, #448]
     b34:	str	w25, [x1, x0, lsl #2]
     b38:	b	b68 <init_types+0x83c>
     b3c:	cbnz	w1, d14 <init_types+0x9e8>
     b40:	adrp	x0, 0 <get_kind_v1>
     b44:	add	x0, x0, #0x0
     b48:	bl	0 <ctf_dprintf>
     b4c:	mov	w0, #0x3ef                 	// #1007
     b50:	b	890 <init_types+0x564>
     b54:	cmp	w1, #0xa
     b58:	b.eq	df4 <init_types+0xac8>  // b.none
     b5c:	b.ls	b94 <init_types+0x868>  // b.plast
     b60:	cmp	w1, #0xd
     b64:	b.hi	bf4 <init_types+0x8c8>  // b.pmore
     b68:	ldr	x0, [x19, #200]
     b6c:	mov	w2, w25
     b70:	cbz	w26, b80 <init_types+0x854>
     b74:	ldr	w2, [x19, #544]
     b78:	add	w2, w2, #0x1
     b7c:	orr	w2, w2, w25
     b80:	ldr	w3, [x20]
     b84:	mov	x1, x19
     b88:	bl	0 <ctf_hash_insert_type>
     b8c:	cbz	w0, bfc <init_types+0x8d0>
     b90:	b	890 <init_types+0x564>
     b94:	cmp	w1, #0x8
     b98:	b.eq	dc8 <init_types+0xa9c>  // b.none
     b9c:	cmp	w1, #0x9
     ba0:	b.ne	b40 <init_types+0x814>  // b.any
     ba4:	ldr	w1, [x20, #8]
     ba8:	mov	x0, x19
     bac:	bl	0 <ctf_name_table>
     bb0:	mov	x22, x0
     bb4:	mov	x2, x24
     bb8:	mov	x1, x19
     bbc:	ldr	x0, [x0]
     bc0:	bl	0 <ctf_hash_lookup_type>
     bc4:	cbnz	x0, bfc <init_types+0x8d0>
     bc8:	ldr	x0, [x22]
     bcc:	mov	w2, w25
     bd0:	cbz	w26, be0 <init_types+0x8b4>
     bd4:	ldr	w2, [x19, #544]
     bd8:	add	w2, w2, #0x1
     bdc:	orr	w2, w2, w25
     be0:	ldr	w3, [x20]
     be4:	mov	x1, x19
     be8:	bl	0 <ctf_hash_insert_type>
     bec:	cbz	w0, bfc <init_types+0x8d0>
     bf0:	b	890 <init_types+0x564>
     bf4:	cmp	w1, #0xe
     bf8:	b.ne	b40 <init_types+0x814>  // b.any
     bfc:	ldr	x0, [x19, #408]
     c00:	sub	x0, x20, x0
     c04:	str	w0, [x27], #4
     c08:	add	x20, x23, x20
     c0c:	ldr	x0, [sp, #152]
     c10:	add	x20, x20, x0
     c14:	add	w25, w25, #0x1
     c18:	cmp	x21, x20
     c1c:	b.ls	e28 <init_types+0xafc>  // b.plast
     c20:	ldr	x0, [x19]
     c24:	ldr	x1, [x0]
     c28:	ldr	w0, [x20, #4]
     c2c:	blr	x1
     c30:	mov	w22, w0
     c34:	ldr	x0, [x19]
     c38:	ldr	x1, [x0, #8]
     c3c:	ldr	w0, [x20, #4]
     c40:	blr	x1
     c44:	str	w0, [sp, #104]
     c48:	ldr	x0, [x19]
     c4c:	ldr	x1, [x0, #16]
     c50:	ldr	w0, [x20, #4]
     c54:	blr	x1
     c58:	mov	w23, w0
     c5c:	ldr	x0, [x19]
     c60:	ldr	x4, [x0, #24]
     c64:	add	x3, sp, #0x98
     c68:	add	x2, sp, #0x90
     c6c:	mov	x1, x20
     c70:	mov	x0, x19
     c74:	blr	x4
     c78:	ldr	w1, [x20]
     c7c:	mov	x0, x19
     c80:	bl	0 <ctf_strptr>
     c84:	mov	x24, x0
     c88:	ldr	x0, [x19]
     c8c:	ldr	x3, [x0, #32]
     c90:	mov	w2, w23
     c94:	ldr	x1, [sp, #144]
     c98:	mov	w0, w22
     c9c:	blr	x3
     ca0:	mov	x23, x0
     ca4:	and	w1, w22, #0xffff
     ca8:	cmp	w1, #0x7
     cac:	b.eq	d88 <init_types+0xa5c>  // b.none
     cb0:	tst	w22, #0xfff8
     cb4:	b.ne	b54 <init_types+0x828>  // b.any
     cb8:	cmp	w1, #0x4
     cbc:	b.eq	bfc <init_types+0x8d0>  // b.none
     cc0:	b.ls	af4 <init_types+0x7c8>  // b.plast
     cc4:	cmp	w1, #0x5
     cc8:	b.eq	d5c <init_types+0xa30>  // b.none
     ccc:	cmp	w1, #0x6
     cd0:	b.ne	b40 <init_types+0x814>  // b.any
     cd4:	ldr	x0, [x19, #152]
     cd8:	mov	w2, w25
     cdc:	cbz	w26, cec <init_types+0x9c0>
     ce0:	ldr	w2, [x19, #544]
     ce4:	add	w2, w2, #0x1
     ce8:	orr	w2, w2, w25
     cec:	ldr	w3, [x20]
     cf0:	mov	x1, x19
     cf4:	bl	0 <ctf_hash_define_type>
     cf8:	cbnz	w0, 890 <init_types+0x564>
     cfc:	ldr	x0, [sp, #144]
     d00:	cmp	x0, x28
     d04:	ldr	w0, [sp, #112]
     d08:	cinc	w0, w0, gt
     d0c:	str	w0, [sp, #112]
     d10:	b	bfc <init_types+0x8d0>
     d14:	mov	x2, x24
     d18:	mov	x1, x19
     d1c:	ldr	x0, [x19, #200]
     d20:	bl	0 <ctf_hash_lookup_type>
     d24:	cbz	x0, d30 <init_types+0xa04>
     d28:	ldr	x0, [sp, #104]
     d2c:	tbz	w0, #0, bfc <init_types+0x8d0>
     d30:	ldr	x0, [x19, #200]
     d34:	mov	w2, w25
     d38:	cbz	w26, d48 <init_types+0xa1c>
     d3c:	ldr	w2, [x19, #544]
     d40:	add	w2, w2, #0x1
     d44:	orr	w2, w2, w25
     d48:	ldr	w3, [x20]
     d4c:	mov	x1, x19
     d50:	bl	0 <ctf_hash_define_type>
     d54:	cbz	w0, bfc <init_types+0x8d0>
     d58:	b	890 <init_types+0x564>
     d5c:	ldr	x0, [x19, #200]
     d60:	mov	w2, w25
     d64:	cbz	w26, d74 <init_types+0xa48>
     d68:	ldr	w2, [x19, #544]
     d6c:	add	w2, w2, #0x1
     d70:	orr	w2, w2, w25
     d74:	ldr	w3, [x20]
     d78:	mov	x1, x19
     d7c:	bl	0 <ctf_hash_insert_type>
     d80:	cbz	w0, bfc <init_types+0x8d0>
     d84:	b	890 <init_types+0x564>
     d88:	ldr	x0, [x19, #168]
     d8c:	mov	w2, w25
     d90:	cbz	w26, da0 <init_types+0xa74>
     d94:	ldr	w2, [x19, #544]
     d98:	add	w2, w2, #0x1
     d9c:	orr	w2, w2, w25
     da0:	ldr	w3, [x20]
     da4:	mov	x1, x19
     da8:	bl	0 <ctf_hash_define_type>
     dac:	cbnz	w0, 890 <init_types+0x564>
     db0:	ldr	x0, [sp, #144]
     db4:	cmp	x0, x28
     db8:	ldr	w0, [sp, #120]
     dbc:	cinc	w0, w0, gt
     dc0:	str	w0, [sp, #120]
     dc4:	b	bfc <init_types+0x8d0>
     dc8:	ldr	x0, [x19, #184]
     dcc:	mov	w2, w25
     dd0:	cbz	w26, de0 <init_types+0xab4>
     dd4:	ldr	w2, [x19, #544]
     dd8:	add	w2, w2, #0x1
     ddc:	orr	w2, w2, w25
     de0:	ldr	w3, [x20]
     de4:	mov	x1, x19
     de8:	bl	0 <ctf_hash_define_type>
     dec:	cbz	w0, bfc <init_types+0x8d0>
     df0:	b	890 <init_types+0x564>
     df4:	ldr	x0, [x19, #200]
     df8:	mov	w2, w25
     dfc:	cbz	w26, e0c <init_types+0xae0>
     e00:	ldr	w2, [x19, #544]
     e04:	add	w2, w2, #0x1
     e08:	orr	w2, w2, w25
     e0c:	ldr	w3, [x20]
     e10:	mov	x1, x19
     e14:	bl	0 <ctf_hash_insert_type>
     e18:	cbz	w0, bfc <init_types+0x8d0>
     e1c:	b	890 <init_types+0x564>
     e20:	str	wzr, [sp, #120]
     e24:	str	wzr, [sp, #112]
     e28:	ldr	x1, [x19, #480]
     e2c:	adrp	x0, 0 <get_kind_v1>
     e30:	add	x0, x0, #0x0
     e34:	bl	0 <ctf_dprintf>
     e38:	ldr	x0, [x19, #184]
     e3c:	bl	0 <ctf_hash_size>
     e40:	mov	w1, w0
     e44:	adrp	x0, 0 <get_kind_v1>
     e48:	add	x0, x0, #0x0
     e4c:	bl	0 <ctf_dprintf>
     e50:	ldr	x0, [x19, #152]
     e54:	bl	0 <ctf_hash_size>
     e58:	ldr	w2, [sp, #112]
     e5c:	mov	w1, w0
     e60:	adrp	x0, 0 <get_kind_v1>
     e64:	add	x0, x0, #0x0
     e68:	bl	0 <ctf_dprintf>
     e6c:	ldr	x0, [x19, #168]
     e70:	bl	0 <ctf_hash_size>
     e74:	ldr	w2, [sp, #120]
     e78:	mov	w1, w0
     e7c:	adrp	x0, 0 <get_kind_v1>
     e80:	add	x0, x0, #0x0
     e84:	bl	0 <ctf_dprintf>
     e88:	ldr	x0, [x19, #200]
     e8c:	bl	0 <ctf_hash_size>
     e90:	mov	w1, w0
     e94:	adrp	x0, 0 <get_kind_v1>
     e98:	add	x0, x0, #0x0
     e9c:	bl	0 <ctf_dprintf>
     ea0:	ldr	x0, [x19, #480]
     ea4:	cbz	x0, fa8 <init_types+0xc7c>
     ea8:	mov	w20, #0x1                   	// #1
     eac:	mov	x1, #0x1                   	// #1
     eb0:	b	eec <init_types+0xbc0>
     eb4:	mov	x0, x19
     eb8:	bl	0 <ctf_dtd_lookup>
     ebc:	add	x22, x0, #0x18
     ec0:	ldr	x0, [x19]
     ec4:	ldr	x1, [x0]
     ec8:	ldr	w0, [x22, #4]
     ecc:	blr	x1
     ed0:	cmp	w0, #0xa
     ed4:	b.eq	f2c <init_types+0xc00>  // b.none
     ed8:	add	w20, w20, #0x1
     edc:	mov	w1, w20
     ee0:	ldr	x0, [x19, #480]
     ee4:	cmp	x0, w20, uxtw
     ee8:	b.cc	f78 <init_types+0xc4c>  // b.lo, b.ul, b.last
     eec:	lsl	x2, x1, #2
     ef0:	ldr	x0, [x19, #448]
     ef4:	ldr	w21, [x0, x1, lsl #2]
     ef8:	cbz	w21, ed8 <init_types+0xbac>
     efc:	ldr	w0, [x19, #552]
     f00:	tbz	w0, #1, f18 <init_types+0xbec>
     f04:	tbz	w0, #0, eb4 <init_types+0xb88>
     f08:	ldr	w1, [x19, #544]
     f0c:	add	w1, w1, #0x1
     f10:	orr	w1, w1, w20
     f14:	b	eb4 <init_types+0xb88>
     f18:	ldr	x0, [x19, #440]
     f1c:	ldr	w0, [x0, x2]
     f20:	ldr	x22, [x19, #408]
     f24:	add	x22, x22, x0
     f28:	b	ec0 <init_types+0xb94>
     f2c:	ldr	w1, [x22]
     f30:	mov	x0, x19
     f34:	bl	0 <ctf_strptr>
     f38:	ldrb	w0, [x0]
     f3c:	cbnz	w0, ed8 <init_types+0xbac>
     f40:	ldr	w0, [x22, #8]
     f44:	ldr	w1, [x19, #544]
     f48:	cmp	w0, w1
     f4c:	cset	w2, hi  // hi = pmore
     f50:	ldr	w3, [sp, #128]
     f54:	cmp	w2, w3
     f58:	b.ne	ed8 <init_types+0xbac>  // b.any
     f5c:	and	w0, w0, w1
     f60:	ldr	x1, [x19, #480]
     f64:	cmp	x0, x1
     f68:	b.hi	ed8 <init_types+0xbac>  // b.pmore
     f6c:	ldr	x1, [x19, #448]
     f70:	str	w21, [x1, x0, lsl #2]
     f74:	b	ed8 <init_types+0xbac>
     f78:	mov	w0, #0x0                   	// #0
     f7c:	b	890 <init_types+0x564>
     f80:	mov	w0, #0xc                   	// #12
     f84:	b	890 <init_types+0x564>
     f88:	mov	w0, #0xc                   	// #12
     f8c:	b	890 <init_types+0x564>
     f90:	mov	w0, #0xc                   	// #12
     f94:	b	890 <init_types+0x564>
     f98:	mov	w0, #0xc                   	// #12
     f9c:	b	890 <init_types+0x564>
     fa0:	mov	w0, #0xc                   	// #12
     fa4:	b	890 <init_types+0x564>
     fa8:	mov	w0, #0x0                   	// #0
     fac:	b	890 <init_types+0x564>

0000000000000fb0 <ctf_set_ctl_hashes>:
     fb0:	adrp	x1, 0 <get_kind_v1>
     fb4:	add	x1, x1, #0x0
     fb8:	str	x1, [x0, #216]
     fbc:	mov	x1, #0x6                   	// #6
     fc0:	str	x1, [x0, #224]
     fc4:	add	x1, x0, #0x98
     fc8:	str	x1, [x0, #232]
     fcc:	adrp	x1, 0 <get_kind_v1>
     fd0:	add	x1, x1, #0x0
     fd4:	str	x1, [x0, #240]
     fd8:	mov	x1, #0x5                   	// #5
     fdc:	str	x1, [x0, #248]
     fe0:	add	x1, x0, #0xa8
     fe4:	str	x1, [x0, #256]
     fe8:	adrp	x1, 0 <get_kind_v1>
     fec:	add	x1, x1, #0x0
     ff0:	str	x1, [x0, #264]
     ff4:	mov	x1, #0x4                   	// #4
     ff8:	str	x1, [x0, #272]
     ffc:	add	x1, x0, #0xb8
    1000:	str	x1, [x0, #280]
    1004:	adrp	x1, 0 <get_kind_v1>
    1008:	add	x1, x1, #0x0
    100c:	add	x1, x1, #0xf0
    1010:	str	x1, [x0, #288]
    1014:	str	xzr, [x0, #296]
    1018:	add	x1, x0, #0xc8
    101c:	str	x1, [x0, #304]
    1020:	str	xzr, [x0, #312]
    1024:	str	xzr, [x0, #320]
    1028:	str	xzr, [x0, #328]
    102c:	ret

0000000000001030 <ctf_file_close>:
    1030:	cbz	x0, 1200 <ctf_file_close+0x1d0>
    1034:	stp	x29, x30, [sp, #-32]!
    1038:	mov	x29, sp
    103c:	stp	x19, x20, [sp, #16]
    1040:	mov	x19, x0
    1044:	ldr	w2, [x0, #548]
    1048:	mov	x1, x0
    104c:	adrp	x0, 0 <get_kind_v1>
    1050:	add	x0, x0, #0x0
    1054:	bl	0 <ctf_dprintf>
    1058:	ldr	w0, [x19, #548]
    105c:	cmp	w0, #0x1
    1060:	b.ls	1078 <ctf_file_close+0x48>  // b.plast
    1064:	sub	w0, w0, #0x1
    1068:	str	w0, [x19, #548]
    106c:	ldp	x19, x20, [sp, #16]
    1070:	ldp	x29, x30, [sp], #32
    1074:	ret
    1078:	ldr	x0, [x19, #504]
    107c:	bl	0 <free>
    1080:	ldr	x0, [x19, #536]
    1084:	bl	0 <free>
    1088:	ldr	x0, [x19, #512]
    108c:	bl	1030 <ctf_file_close>
    1090:	ldr	x20, [x19, #584]
    1094:	cbz	x20, 10ac <ctf_file_close+0x7c>
    1098:	mov	x1, x20
    109c:	ldr	x20, [x20, #8]
    10a0:	mov	x0, x19
    10a4:	bl	0 <ctf_dtd_delete>
    10a8:	cbnz	x20, 1098 <ctf_file_close+0x68>
    10ac:	ldr	x0, [x19, #568]
    10b0:	bl	0 <ctf_dynhash_destroy>
    10b4:	ldr	w0, [x19, #552]
    10b8:	tbz	w0, #1, 11c8 <ctf_file_close+0x198>
    10bc:	ldr	x0, [x19, #160]
    10c0:	bl	0 <ctf_dynhash_destroy>
    10c4:	ldr	x0, [x19, #176]
    10c8:	bl	0 <ctf_dynhash_destroy>
    10cc:	ldr	x0, [x19, #192]
    10d0:	bl	0 <ctf_dynhash_destroy>
    10d4:	ldr	x0, [x19, #208]
    10d8:	bl	0 <ctf_dynhash_destroy>
    10dc:	ldr	x20, [x19, #608]
    10e0:	cbz	x20, 10f8 <ctf_file_close+0xc8>
    10e4:	mov	x1, x20
    10e8:	ldr	x20, [x20, #8]
    10ec:	mov	x0, x19
    10f0:	bl	0 <ctf_dvd_delete>
    10f4:	cbnz	x20, 10e4 <ctf_file_close+0xb4>
    10f8:	ldr	x0, [x19, #592]
    10fc:	bl	0 <ctf_dynhash_destroy>
    1100:	mov	x0, x19
    1104:	bl	0 <ctf_str_free_atoms>
    1108:	ldr	x0, [x19, #704]
    110c:	bl	0 <free>
    1110:	ldr	x0, [x19, #24]
    1114:	adrp	x1, 0 <get_kind_v1>
    1118:	add	x1, x1, #0x0
    111c:	add	x1, x1, #0xf0
    1120:	cmp	x0, x1
    1124:	b.eq	112c <ctf_file_close+0xfc>  // b.none
    1128:	bl	0 <free>
    112c:	ldr	x0, [x19, #56]
    1130:	adrp	x1, 0 <get_kind_v1>
    1134:	add	x1, x1, #0x0
    1138:	add	x1, x1, #0xf0
    113c:	cmp	x0, x1
    1140:	b.eq	1148 <ctf_file_close+0x118>  // b.none
    1144:	bl	0 <free>
    1148:	ldr	x0, [x19, #88]
    114c:	adrp	x1, 0 <get_kind_v1>
    1150:	add	x1, x1, #0x0
    1154:	add	x1, x1, #0xf0
    1158:	cmp	x0, x1
    115c:	b.eq	11ec <ctf_file_close+0x1bc>  // b.none
    1160:	bl	0 <free>
    1164:	ldr	x0, [x19, #400]
    1168:	bl	0 <free>
    116c:	ldr	x0, [x19, #128]
    1170:	bl	0 <ctf_dynhash_destroy>
    1174:	ldr	x0, [x19, #648]
    1178:	bl	0 <ctf_dynhash_destroy>
    117c:	ldr	x0, [x19, #656]
    1180:	bl	0 <ctf_dynhash_destroy>
    1184:	ldr	x0, [x19, #664]
    1188:	bl	0 <ctf_dynhash_destroy>
    118c:	ldr	x0, [x19, #672]
    1190:	bl	0 <ctf_dynhash_destroy>
    1194:	ldr	x0, [x19, #696]
    1198:	bl	0 <ctf_dynhash_destroy>
    119c:	ldr	x0, [x19, #424]
    11a0:	bl	0 <free>
    11a4:	ldr	x0, [x19, #440]
    11a8:	bl	0 <free>
    11ac:	ldr	x0, [x19, #448]
    11b0:	bl	0 <free>
    11b4:	ldr	x0, [x19, #8]
    11b8:	bl	0 <free>
    11bc:	mov	x0, x19
    11c0:	bl	0 <free>
    11c4:	b	106c <ctf_file_close+0x3c>
    11c8:	ldr	x0, [x19, #152]
    11cc:	bl	0 <ctf_hash_destroy>
    11d0:	ldr	x0, [x19, #168]
    11d4:	bl	0 <ctf_hash_destroy>
    11d8:	ldr	x0, [x19, #184]
    11dc:	bl	0 <ctf_hash_destroy>
    11e0:	ldr	x0, [x19, #200]
    11e4:	bl	0 <ctf_hash_destroy>
    11e8:	b	10dc <ctf_file_close+0xac>
    11ec:	ldr	x0, [x19, #136]
    11f0:	cbz	x0, 1164 <ctf_file_close+0x134>
    11f4:	ldr	x1, [x19, #144]
    11f8:	bl	0 <ctf_munmap>
    11fc:	b	1164 <ctf_file_close+0x134>
    1200:	ret

0000000000001204 <ctf_close>:
    1204:	stp	x29, x30, [sp, #-16]!
    1208:	mov	x29, sp
    120c:	bl	0 <ctf_arc_close>
    1210:	ldp	x29, x30, [sp], #16
    1214:	ret

0000000000001218 <ctf_get_arc>:
    1218:	ldr	x0, [x0, #640]
    121c:	ret

0000000000001220 <ctf_getdatasect>:
    1220:	ldp	x2, x3, [x0, #24]
    1224:	stp	x2, x3, [x8]
    1228:	ldp	x0, x1, [x0, #40]
    122c:	stp	x0, x1, [x8, #16]
    1230:	ret

0000000000001234 <ctf_parent_file>:
    1234:	ldr	x0, [x0, #512]
    1238:	ret

000000000000123c <ctf_parent_name>:
    123c:	ldr	x0, [x0, #528]
    1240:	ret

0000000000001244 <ctf_parent_name_set>:
    1244:	stp	x29, x30, [sp, #-32]!
    1248:	mov	x29, sp
    124c:	stp	x19, x20, [sp, #16]
    1250:	mov	x19, x0
    1254:	mov	x20, x1
    1258:	ldr	x0, [x0, #536]
    125c:	cbz	x0, 1264 <ctf_parent_name_set+0x20>
    1260:	bl	0 <free>
    1264:	mov	x0, x20
    1268:	bl	0 <strdup>
    126c:	str	x0, [x19, #536]
    1270:	cbz	x0, 1288 <ctf_parent_name_set+0x44>
    1274:	str	x0, [x19, #528]
    1278:	mov	w0, #0x0                   	// #0
    127c:	ldp	x19, x20, [sp, #16]
    1280:	ldp	x29, x30, [sp], #32
    1284:	ret
    1288:	mov	w1, #0xc                   	// #12
    128c:	mov	x0, x19
    1290:	bl	0 <ctf_set_errno>
    1294:	b	127c <ctf_parent_name_set+0x38>

0000000000001298 <ctf_cuname>:
    1298:	ldr	x0, [x0, #496]
    129c:	ret

00000000000012a0 <ctf_cuname_set>:
    12a0:	stp	x29, x30, [sp, #-32]!
    12a4:	mov	x29, sp
    12a8:	stp	x19, x20, [sp, #16]
    12ac:	mov	x19, x0
    12b0:	mov	x20, x1
    12b4:	ldr	x0, [x0, #504]
    12b8:	cbz	x0, 12c0 <ctf_cuname_set+0x20>
    12bc:	bl	0 <free>
    12c0:	mov	x0, x20
    12c4:	bl	0 <strdup>
    12c8:	str	x0, [x19, #504]
    12cc:	cbz	x0, 12e4 <ctf_cuname_set+0x44>
    12d0:	str	x0, [x19, #496]
    12d4:	mov	w0, #0x0                   	// #0
    12d8:	ldp	x19, x20, [sp, #16]
    12dc:	ldp	x29, x30, [sp], #32
    12e0:	ret
    12e4:	mov	w1, #0xc                   	// #12
    12e8:	mov	x0, x19
    12ec:	bl	0 <ctf_set_errno>
    12f0:	b	12d8 <ctf_cuname_set+0x38>

00000000000012f4 <ctf_import>:
    12f4:	stp	x29, x30, [sp, #-32]!
    12f8:	mov	x29, sp
    12fc:	stp	x19, x20, [sp, #16]
    1300:	mov	x19, x0
    1304:	cmp	x0, #0x0
    1308:	ccmp	x0, x1, #0x4, ne  // ne = any
    130c:	b.eq	1384 <ctf_import+0x90>  // b.none
    1310:	mov	x20, x1
    1314:	cbz	x1, 13bc <ctf_import+0xc8>
    1318:	ldr	w0, [x1, #548]
    131c:	cbz	w0, 1384 <ctf_import+0x90>
    1320:	ldr	x1, [x1, #488]
    1324:	ldr	x0, [x19, #488]
    1328:	cmp	x1, x0
    132c:	b.ne	1394 <ctf_import+0xa0>  // b.any
    1330:	ldr	x0, [x19, #512]
    1334:	cbz	x0, 1350 <ctf_import+0x5c>
    1338:	ldr	w1, [x0, #548]
    133c:	sub	w1, w1, #0x1
    1340:	str	w1, [x0, #548]
    1344:	ldr	x0, [x19, #512]
    1348:	bl	1030 <ctf_file_close>
    134c:	str	xzr, [x19, #512]
    1350:	ldr	x0, [x19, #528]
    1354:	cbz	x0, 13a4 <ctf_import+0xb0>
    1358:	ldr	w0, [x19, #552]
    135c:	orr	w0, w0, #0x1
    1360:	str	w0, [x19, #552]
    1364:	ldr	w0, [x20, #548]
    1368:	add	w0, w0, #0x1
    136c:	str	w0, [x20, #548]
    1370:	str	x20, [x19, #512]
    1374:	mov	w0, #0x0                   	// #0
    1378:	ldp	x19, x20, [sp, #16]
    137c:	ldp	x29, x30, [sp], #32
    1380:	ret
    1384:	mov	w1, #0x16                  	// #22
    1388:	mov	x0, x19
    138c:	bl	0 <ctf_set_errno>
    1390:	b	1378 <ctf_import+0x84>
    1394:	mov	w1, #0x3f4                 	// #1012
    1398:	mov	x0, x19
    139c:	bl	0 <ctf_set_errno>
    13a0:	b	1378 <ctf_import+0x84>
    13a4:	adrp	x1, 0 <get_kind_v1>
    13a8:	add	x1, x1, #0x0
    13ac:	mov	x0, x19
    13b0:	bl	1244 <ctf_parent_name_set>
    13b4:	tbz	w0, #31, 1358 <ctf_import+0x64>
    13b8:	b	1378 <ctf_import+0x84>
    13bc:	ldr	x0, [x0, #512]
    13c0:	cbz	x0, 1370 <ctf_import+0x7c>
    13c4:	ldr	w1, [x0, #548]
    13c8:	sub	w1, w1, #0x1
    13cc:	str	w1, [x0, #548]
    13d0:	ldr	x0, [x19, #512]
    13d4:	bl	1030 <ctf_file_close>
    13d8:	b	1370 <ctf_import+0x7c>

00000000000013dc <ctf_setmodel>:
    13dc:	adrp	x2, 0 <get_kind_v1>
    13e0:	add	x2, x2, #0x0
    13e4:	add	x2, x2, #0xf8
    13e8:	ldr	w3, [x2, #8]
    13ec:	cmp	w3, w1
    13f0:	b.eq	1414 <ctf_setmodel+0x38>  // b.none
    13f4:	ldr	x3, [x2, #56]!
    13f8:	cbnz	x3, 13e8 <ctf_setmodel+0xc>
    13fc:	stp	x29, x30, [sp, #-16]!
    1400:	mov	x29, sp
    1404:	mov	w1, #0x16                  	// #22
    1408:	bl	0 <ctf_set_errno>
    140c:	ldp	x29, x30, [sp], #16
    1410:	ret
    1414:	str	x2, [x0, #488]
    1418:	mov	w0, #0x0                   	// #0
    141c:	ret

0000000000001420 <ctf_bufopen_internal>:
    1420:	stp	x29, x30, [sp, #-160]!
    1424:	mov	x29, sp
    1428:	stp	x19, x20, [sp, #16]
    142c:	stp	x21, x22, [sp, #32]
    1430:	stp	x23, x24, [sp, #48]
    1434:	stp	x25, x26, [sp, #64]
    1438:	mov	x20, x0
    143c:	mov	x21, x1
    1440:	mov	x22, x2
    1444:	mov	x25, x3
    1448:	mov	w23, w4
    144c:	mov	x24, x5
    1450:	bl	0 <libctf_init_debug>
    1454:	cbz	x20, 1628 <ctf_bufopen_internal+0x208>
    1458:	cbz	x21, 147c <ctf_bufopen_internal+0x5c>
    145c:	orr	x0, x22, x25
    1460:	cbz	x0, 1628 <ctf_bufopen_internal+0x208>
    1464:	ldr	x0, [x21, #24]
    1468:	and	x0, x0, #0xfffffffffffffff7
    146c:	cmp	x0, #0x10
    1470:	b.ne	1654 <ctf_bufopen_internal+0x234>  // b.any
    1474:	ldr	x0, [x21, #8]
    1478:	cbz	x0, 1668 <ctf_bufopen_internal+0x248>
    147c:	cbz	x22, 1488 <ctf_bufopen_internal+0x68>
    1480:	ldr	x0, [x22, #8]
    1484:	cbz	x0, 167c <ctf_bufopen_internal+0x25c>
    1488:	ldr	x0, [x20, #16]
    148c:	cmp	x0, #0x3
    1490:	b.ls	1690 <ctf_bufopen_internal+0x270>  // b.plast
    1494:	stp	x27, x28, [sp, #80]
    1498:	ldr	x27, [x20, #8]
    149c:	ldrb	w2, [x27, #2]
    14a0:	ldrh	w1, [x27]
    14a4:	adrp	x0, 0 <get_kind_v1>
    14a8:	add	x0, x0, #0x0
    14ac:	bl	0 <ctf_dprintf>
    14b0:	ldrh	w0, [x27]
    14b4:	mov	w1, #0xdff2                	// #57330
    14b8:	cmp	w0, w1
    14bc:	b.ne	16a4 <ctf_bufopen_internal+0x284>  // b.any
    14c0:	ldrb	w1, [x27, #2]
    14c4:	sub	w0, w1, #0x1
    14c8:	and	w0, w0, #0xff
    14cc:	cmp	w0, #0x3
    14d0:	b.hi	1704 <ctf_bufopen_internal+0x2e4>  // b.pmore
    14d4:	cmp	x21, #0x0
    14d8:	cset	w28, ne  // ne = any
    14dc:	cmp	w28, #0x0
    14e0:	ccmp	w1, #0x2, #0x2, ne  // ne = any
    14e4:	b.ls	171c <ctf_bufopen_internal+0x2fc>  // b.plast
    14e8:	str	wzr, [sp, #96]
    14ec:	cmp	w1, #0x3
    14f0:	mov	x26, #0x34                  	// #52
    14f4:	mov	x0, #0x28                  	// #40
    14f8:	csel	x26, x26, x0, hi  // hi = pmore
    14fc:	ldr	x0, [x20, #16]
    1500:	cmp	x0, x26
    1504:	b.cc	1740 <ctf_bufopen_internal+0x320>  // b.lo, b.ul, b.last
    1508:	mov	x0, #0x2d8                 	// #728
    150c:	bl	0 <malloc>
    1510:	mov	x19, x0
    1514:	cbz	x0, 1758 <ctf_bufopen_internal+0x338>
    1518:	mov	x2, #0x2d8                 	// #728
    151c:	mov	w1, #0x0                   	// #0
    1520:	bl	0 <memset>
    1524:	cbz	w23, 1530 <ctf_bufopen_internal+0x110>
    1528:	mov	w0, #0x2                   	// #2
    152c:	str	w0, [x19, #552]
    1530:	mov	x0, #0x34                  	// #52
    1534:	bl	0 <malloc>
    1538:	mov	x23, x0
    153c:	str	x0, [x19, #8]
    1540:	cbz	x0, 1770 <ctf_bufopen_internal+0x350>
    1544:	mov	x2, x26
    1548:	ldr	x1, [x20, #8]
    154c:	bl	0 <memcpy>
    1550:	ldrb	w0, [x27, #2]
    1554:	cmp	w0, #0x3
    1558:	b.ls	1790 <ctf_bufopen_internal+0x370>  // b.plast
    155c:	ldr	w0, [sp, #96]
    1560:	cbnz	w0, 17d8 <ctf_bufopen_internal+0x3b8>
    1564:	ldrb	w0, [x23, #3]
    1568:	strb	w0, [x19, #16]
    156c:	ldr	w1, [x23, #44]
    1570:	ldr	w0, [x23, #48]
    1574:	add	w1, w1, w0
    1578:	str	x1, [x19, #416]
    157c:	adrp	x0, 0 <get_kind_v1>
    1580:	add	x0, x0, #0x0
    1584:	bl	0 <ctf_dprintf>
    1588:	ldr	w1, [x23, #16]
    158c:	ldr	x27, [x19, #416]
    1590:	cmp	x27, w1, uxtw
    1594:	b.cc	186c <ctf_bufopen_internal+0x44c>  // b.lo, b.ul, b.last
    1598:	ldr	w0, [x23, #20]
    159c:	cmp	x27, w0, uxtw
    15a0:	b.cc	186c <ctf_bufopen_internal+0x44c>  // b.lo, b.ul, b.last
    15a4:	ldr	w2, [x23, #24]
    15a8:	orr	w5, w0, w2
    15ac:	cmp	x27, w2, uxtw
    15b0:	b.cc	186c <ctf_bufopen_internal+0x44c>  // b.lo, b.ul, b.last
    15b4:	ldr	w3, [x23, #28]
    15b8:	cmp	x27, w3, uxtw
    15bc:	b.cc	186c <ctf_bufopen_internal+0x44c>  // b.lo, b.ul, b.last
    15c0:	ldr	w4, [x23, #32]
    15c4:	orr	w7, w3, w4
    15c8:	cmp	x27, w4, uxtw
    15cc:	b.cc	186c <ctf_bufopen_internal+0x44c>  // b.lo, b.ul, b.last
    15d0:	ldr	w6, [x23, #40]
    15d4:	cmp	x27, w6, uxtw
    15d8:	b.cc	186c <ctf_bufopen_internal+0x44c>  // b.lo, b.ul, b.last
    15dc:	ldr	w8, [x23, #44]
    15e0:	cmp	x27, w8, uxtw
    15e4:	b.cc	186c <ctf_bufopen_internal+0x44c>  // b.lo, b.ul, b.last
    15e8:	cmp	w3, w6
    15ec:	csel	w9, w3, w6, ls  // ls = plast
    15f0:	cmp	w9, w2
    15f4:	ccmp	w3, w4, #0x2, cs  // cs = hs, nlast
    15f8:	cset	w3, hi  // hi = pmore
    15fc:	cmp	w0, w2
    1600:	ccmp	w1, w0, #0x2, ls  // ls = plast
    1604:	cset	w0, hi  // hi = pmore
    1608:	orr	w0, w3, w0
    160c:	cbz	w0, 1884 <ctf_bufopen_internal+0x464>
    1610:	mov	w1, #0x3ef                 	// #1007
    1614:	mov	x0, x24
    1618:	bl	0 <ctf_set_open_errno>
    161c:	mov	x19, x0
    1620:	ldp	x27, x28, [sp, #80]
    1624:	b	1638 <ctf_bufopen_internal+0x218>
    1628:	mov	w1, #0x16                  	// #22
    162c:	mov	x0, x24
    1630:	bl	0 <ctf_set_open_errno>
    1634:	mov	x19, x0
    1638:	mov	x0, x19
    163c:	ldp	x19, x20, [sp, #16]
    1640:	ldp	x21, x22, [sp, #32]
    1644:	ldp	x23, x24, [sp, #48]
    1648:	ldp	x25, x26, [sp, #64]
    164c:	ldp	x29, x30, [sp], #160
    1650:	ret
    1654:	mov	w1, #0x3ec                 	// #1004
    1658:	mov	x0, x24
    165c:	bl	0 <ctf_set_open_errno>
    1660:	mov	x19, x0
    1664:	b	1638 <ctf_bufopen_internal+0x218>
    1668:	mov	w1, #0x3ed                 	// #1005
    166c:	mov	x0, x24
    1670:	bl	0 <ctf_set_open_errno>
    1674:	mov	x19, x0
    1678:	b	1638 <ctf_bufopen_internal+0x218>
    167c:	mov	w1, #0x3ee                 	// #1006
    1680:	mov	x0, x24
    1684:	bl	0 <ctf_set_open_errno>
    1688:	mov	x19, x0
    168c:	b	1638 <ctf_bufopen_internal+0x218>
    1690:	mov	w1, #0x3f1                 	// #1009
    1694:	mov	x0, x24
    1698:	bl	0 <ctf_set_open_errno>
    169c:	mov	x19, x0
    16a0:	b	1638 <ctf_bufopen_internal+0x218>
    16a4:	mov	w1, #0xf2df                	// #62175
    16a8:	cmp	w0, w1
    16ac:	b.ne	16ec <ctf_bufopen_internal+0x2cc>  // b.any
    16b0:	ldrb	w0, [x27, #2]
    16b4:	cmp	w0, #0x4
    16b8:	b.ne	16d4 <ctf_bufopen_internal+0x2b4>  // b.any
    16bc:	cmp	x21, #0x0
    16c0:	cset	w28, ne  // ne = any
    16c4:	mov	w0, #0x1                   	// #1
    16c8:	str	w0, [sp, #96]
    16cc:	mov	x26, #0x34                  	// #52
    16d0:	b	14fc <ctf_bufopen_internal+0xdc>
    16d4:	mov	w1, #0x3ea                 	// #1002
    16d8:	mov	x0, x24
    16dc:	bl	0 <ctf_set_open_errno>
    16e0:	mov	x19, x0
    16e4:	ldp	x27, x28, [sp, #80]
    16e8:	b	1638 <ctf_bufopen_internal+0x218>
    16ec:	mov	w1, #0x3f1                 	// #1009
    16f0:	mov	x0, x24
    16f4:	bl	0 <ctf_set_open_errno>
    16f8:	mov	x19, x0
    16fc:	ldp	x27, x28, [sp, #80]
    1700:	b	1638 <ctf_bufopen_internal+0x218>
    1704:	mov	w1, #0x3ea                 	// #1002
    1708:	mov	x0, x24
    170c:	bl	0 <ctf_set_open_errno>
    1710:	mov	x19, x0
    1714:	ldp	x27, x28, [sp, #80]
    1718:	b	1638 <ctf_bufopen_internal+0x218>
    171c:	adrp	x0, 0 <get_kind_v1>
    1720:	add	x0, x0, #0x0
    1724:	bl	0 <ctf_dprintf>
    1728:	mov	w1, #0x40a                 	// #1034
    172c:	mov	x0, x24
    1730:	bl	0 <ctf_set_open_errno>
    1734:	mov	x19, x0
    1738:	ldp	x27, x28, [sp, #80]
    173c:	b	1638 <ctf_bufopen_internal+0x218>
    1740:	mov	w1, #0x3f1                 	// #1009
    1744:	mov	x0, x24
    1748:	bl	0 <ctf_set_open_errno>
    174c:	mov	x19, x0
    1750:	ldp	x27, x28, [sp, #80]
    1754:	b	1638 <ctf_bufopen_internal+0x218>
    1758:	mov	w1, #0xc                   	// #12
    175c:	mov	x0, x24
    1760:	bl	0 <ctf_set_open_errno>
    1764:	mov	x19, x0
    1768:	ldp	x27, x28, [sp, #80]
    176c:	b	1638 <ctf_bufopen_internal+0x218>
    1770:	mov	x0, x19
    1774:	bl	0 <free>
    1778:	mov	w1, #0xc                   	// #12
    177c:	mov	x0, x24
    1780:	bl	0 <ctf_set_open_errno>
    1784:	mov	x19, x0
    1788:	ldp	x27, x28, [sp, #80]
    178c:	b	1638 <ctf_bufopen_internal+0x218>
    1790:	ldr	w0, [x23, #36]
    1794:	str	w0, [x23, #48]
    1798:	ldr	w0, [x23, #32]
    179c:	str	w0, [x23, #44]
    17a0:	ldr	w0, [x23, #28]
    17a4:	str	w0, [x23, #40]
    17a8:	ldr	w0, [x23, #24]
    17ac:	str	w0, [x23, #36]
    17b0:	str	w0, [x23, #32]
    17b4:	str	w0, [x23, #28]
    17b8:	ldr	w0, [x23, #20]
    17bc:	str	w0, [x23, #24]
    17c0:	ldr	w0, [x23, #16]
    17c4:	str	w0, [x23, #20]
    17c8:	ldr	w0, [x23, #12]
    17cc:	str	w0, [x23, #16]
    17d0:	str	wzr, [x23, #12]
    17d4:	b	155c <ctf_bufopen_internal+0x13c>
    17d8:	ldrh	w0, [x23]
    17dc:	rev16	w0, w0
    17e0:	strh	w0, [x23]
    17e4:	ldr	w0, [x23, #4]
    17e8:	rev	w0, w0
    17ec:	str	w0, [x23, #4]
    17f0:	ldr	w0, [x23, #8]
    17f4:	rev	w0, w0
    17f8:	str	w0, [x23, #8]
    17fc:	ldr	w0, [x23, #12]
    1800:	rev	w0, w0
    1804:	str	w0, [x23, #12]
    1808:	ldr	w0, [x23, #20]
    180c:	rev	w0, w0
    1810:	str	w0, [x23, #20]
    1814:	ldr	w0, [x23, #24]
    1818:	rev	w0, w0
    181c:	str	w0, [x23, #24]
    1820:	ldr	w0, [x23, #28]
    1824:	rev	w0, w0
    1828:	str	w0, [x23, #28]
    182c:	ldr	w0, [x23, #32]
    1830:	rev	w0, w0
    1834:	str	w0, [x23, #32]
    1838:	ldr	w0, [x23, #36]
    183c:	rev	w0, w0
    1840:	str	w0, [x23, #36]
    1844:	ldr	w0, [x23, #40]
    1848:	rev	w0, w0
    184c:	str	w0, [x23, #40]
    1850:	ldr	w0, [x23, #44]
    1854:	rev	w0, w0
    1858:	str	w0, [x23, #44]
    185c:	ldr	w0, [x23, #48]
    1860:	rev	w0, w0
    1864:	str	w0, [x23, #48]
    1868:	b	1564 <ctf_bufopen_internal+0x144>
    186c:	mov	w1, #0x3ef                 	// #1007
    1870:	mov	x0, x24
    1874:	bl	0 <ctf_set_open_errno>
    1878:	mov	x19, x0
    187c:	ldp	x27, x28, [sp, #80]
    1880:	b	1638 <ctf_bufopen_internal+0x218>
    1884:	ldr	w2, [x23, #36]
    1888:	cmp	w4, w2
    188c:	ccmp	w6, w2, #0x0, ls  // ls = plast
    1890:	ccmp	w6, w8, #0x2, cs  // cs = hs, nlast
    1894:	b.hi	1610 <ctf_bufopen_internal+0x1f0>  // b.pmore
    1898:	orr	w0, w1, w6
    189c:	orr	w0, w0, w2
    18a0:	and	w0, w0, #0x3
    18a4:	orr	w1, w5, w7
    18a8:	and	w1, w1, #0x2
    18ac:	orr	w0, w0, w1
    18b0:	cbz	w0, 18cc <ctf_bufopen_internal+0x4ac>
    18b4:	mov	w1, #0x3ef                 	// #1007
    18b8:	mov	x0, x24
    18bc:	bl	0 <ctf_set_open_errno>
    18c0:	mov	x19, x0
    18c4:	ldp	x27, x28, [sp, #80]
    18c8:	b	1638 <ctf_bufopen_internal+0x218>
    18cc:	ldrb	w0, [x23, #3]
    18d0:	str	w0, [sp, #104]
    18d4:	tbnz	w0, #0, 19ec <ctf_bufopen_internal+0x5cc>
    18d8:	ldr	w0, [sp, #96]
    18dc:	cbnz	w0, 1a78 <ctf_bufopen_internal+0x658>
    18e0:	ldr	x0, [x20, #8]
    18e4:	str	x0, [x19, #392]
    18e8:	str	xzr, [x19, #400]
    18ec:	add	x0, x0, x26
    18f0:	str	x0, [x19, #408]
    18f4:	ldrb	w0, [x23, #2]
    18f8:	str	w0, [x19, #560]
    18fc:	adrp	x1, 0 <get_kind_v1>
    1900:	add	x1, x1, #0x0
    1904:	and	x0, x0, #0xff
    1908:	add	x1, x1, #0x28
    190c:	mov	x2, #0x28                  	// #40
    1910:	madd	x0, x0, x2, x1
    1914:	str	x0, [x19]
    1918:	mov	x0, x19
    191c:	bl	0 <ctf_str_create_atoms>
    1920:	mov	w0, #0x7fffffff            	// #2147483647
    1924:	str	w0, [x19, #544]
    1928:	ldp	x0, x1, [x20]
    192c:	stp	x0, x1, [x19, #24]
    1930:	ldp	x0, x1, [x20, #16]
    1934:	stp	x0, x1, [x19, #40]
    1938:	cbz	w28, 195c <ctf_bufopen_internal+0x53c>
    193c:	ldp	x0, x1, [x21]
    1940:	stp	x0, x1, [x19, #56]
    1944:	ldp	x0, x1, [x21, #16]
    1948:	stp	x0, x1, [x19, #72]
    194c:	ldp	x0, x1, [x22]
    1950:	stp	x0, x1, [x19, #88]
    1954:	ldp	x0, x1, [x22, #16]
    1958:	stp	x0, x1, [x19, #104]
    195c:	ldr	x0, [x19, #24]
    1960:	cbz	x0, 1970 <ctf_bufopen_internal+0x550>
    1964:	bl	0 <strdup>
    1968:	str	x0, [x19, #24]
    196c:	cbz	x0, 210c <ctf_bufopen_internal+0xcec>
    1970:	ldr	x0, [x19, #56]
    1974:	cbz	x0, 1984 <ctf_bufopen_internal+0x564>
    1978:	bl	0 <strdup>
    197c:	str	x0, [x19, #56]
    1980:	cbz	x0, 2114 <ctf_bufopen_internal+0xcf4>
    1984:	ldr	x0, [x19, #88]
    1988:	cbz	x0, 1998 <ctf_bufopen_internal+0x578>
    198c:	bl	0 <strdup>
    1990:	str	x0, [x19, #88]
    1994:	cbz	x0, 211c <ctf_bufopen_internal+0xcfc>
    1998:	ldr	x0, [x19, #24]
    199c:	cbz	x0, 1aa8 <ctf_bufopen_internal+0x688>
    19a0:	ldr	x0, [x19, #56]
    19a4:	cbz	x0, 1abc <ctf_bufopen_internal+0x69c>
    19a8:	ldr	x0, [x19, #88]
    19ac:	cbz	x0, 1ad0 <ctf_bufopen_internal+0x6b0>
    19b0:	cbz	x22, 19c4 <ctf_bufopen_internal+0x5a4>
    19b4:	ldr	x0, [x22, #8]
    19b8:	str	x0, [x19, #352]
    19bc:	ldr	x0, [x22, #16]
    19c0:	str	x0, [x19, #360]
    19c4:	str	x25, [x19, #128]
    19c8:	ldr	w0, [sp, #96]
    19cc:	cbz	w0, 1ec0 <ctf_bufopen_internal+0xaa0>
    19d0:	ldr	x20, [x19, #408]
    19d4:	ldr	w2, [x23, #16]
    19d8:	add	x1, x20, w2, uxtw
    19dc:	ldr	w0, [x23, #20]
    19e0:	sub	w0, w0, w2
    19e4:	lsr	x0, x0, #3
    19e8:	b	1b04 <ctf_bufopen_internal+0x6e4>
    19ec:	mov	x0, x27
    19f0:	bl	0 <malloc>
    19f4:	str	x0, [x19, #392]
    19f8:	cbz	x0, 1a70 <ctf_bufopen_internal+0x650>
    19fc:	str	x0, [x19, #400]
    1a00:	ldr	w1, [sp, #104]
    1a04:	and	w1, w1, #0xfffffffe
    1a08:	strb	w1, [x23, #3]
    1a0c:	ldr	x2, [x20, #8]
    1a10:	ldr	x3, [x20, #16]
    1a14:	str	x27, [sp, #136]
    1a18:	str	x0, [x19, #408]
    1a1c:	sub	x3, x3, x26
    1a20:	add	x2, x2, x26
    1a24:	add	x1, sp, #0x88
    1a28:	bl	0 <uncompress>
    1a2c:	cbnz	w0, 1a54 <ctf_bufopen_internal+0x634>
    1a30:	ldr	x2, [x19, #416]
    1a34:	ldr	x1, [sp, #136]
    1a38:	cmp	x2, x1
    1a3c:	b.eq	18f4 <ctf_bufopen_internal+0x4d4>  // b.none
    1a40:	adrp	x0, 0 <get_kind_v1>
    1a44:	add	x0, x0, #0x0
    1a48:	bl	0 <ctf_dprintf>
    1a4c:	mov	w1, #0x3ef                 	// #1007
    1a50:	b	1ea4 <ctf_bufopen_internal+0xa84>
    1a54:	bl	0 <zError>
    1a58:	mov	x1, x0
    1a5c:	adrp	x0, 0 <get_kind_v1>
    1a60:	add	x0, x0, #0x0
    1a64:	bl	0 <ctf_dprintf>
    1a68:	mov	w1, #0x3f7                 	// #1015
    1a6c:	b	1ea4 <ctf_bufopen_internal+0xa84>
    1a70:	mov	w1, #0x3f6                 	// #1014
    1a74:	b	1ea4 <ctf_bufopen_internal+0xa84>
    1a78:	mov	x0, x27
    1a7c:	bl	0 <malloc>
    1a80:	str	x0, [x19, #392]
    1a84:	cbz	x0, 2104 <ctf_bufopen_internal+0xce4>
    1a88:	str	x0, [x19, #400]
    1a8c:	ldr	x1, [x20, #8]
    1a90:	mov	x2, x27
    1a94:	add	x1, x1, x26
    1a98:	mov	x26, x0
    1a9c:	bl	0 <memcpy>
    1aa0:	str	x26, [x19, #408]
    1aa4:	b	18f4 <ctf_bufopen_internal+0x4d4>
    1aa8:	adrp	x0, 0 <get_kind_v1>
    1aac:	add	x0, x0, #0x0
    1ab0:	add	x0, x0, #0xf0
    1ab4:	str	x0, [x19, #24]
    1ab8:	b	19a0 <ctf_bufopen_internal+0x580>
    1abc:	adrp	x0, 0 <get_kind_v1>
    1ac0:	add	x0, x0, #0x0
    1ac4:	add	x0, x0, #0xf0
    1ac8:	str	x0, [x19, #56]
    1acc:	b	19a8 <ctf_bufopen_internal+0x588>
    1ad0:	adrp	x0, 0 <get_kind_v1>
    1ad4:	add	x0, x0, #0x0
    1ad8:	add	x0, x0, #0xf0
    1adc:	str	x0, [x19, #88]
    1ae0:	b	19b0 <ctf_bufopen_internal+0x590>
    1ae4:	ldr	w2, [x1]
    1ae8:	rev	w2, w2
    1aec:	str	w2, [x1]
    1af0:	ldr	w2, [x1, #4]
    1af4:	rev	w2, w2
    1af8:	str	w2, [x1, #4]
    1afc:	add	x1, x1, #0x8
    1b00:	sub	x0, x0, #0x1
    1b04:	cmp	x0, #0x0
    1b08:	b.gt	1ae4 <ctf_bufopen_internal+0x6c4>
    1b0c:	ldr	w0, [x23, #20]
    1b10:	ldr	w1, [x23, #24]
    1b14:	sub	w1, w1, w0
    1b18:	add	x0, x20, w0, uxtw
    1b1c:	bl	210 <flip_objts>
    1b20:	ldr	w0, [x23, #24]
    1b24:	ldr	w1, [x23, #28]
    1b28:	sub	w1, w1, w0
    1b2c:	add	x0, x20, w0, uxtw
    1b30:	bl	210 <flip_objts>
    1b34:	ldr	w0, [x23, #28]
    1b38:	ldr	w1, [x23, #32]
    1b3c:	sub	w1, w1, w0
    1b40:	add	x0, x20, w0, uxtw
    1b44:	bl	210 <flip_objts>
    1b48:	ldr	w0, [x23, #32]
    1b4c:	ldr	w1, [x23, #36]
    1b50:	sub	w1, w1, w0
    1b54:	add	x0, x20, w0, uxtw
    1b58:	bl	210 <flip_objts>
    1b5c:	ldr	w2, [x23, #36]
    1b60:	add	x1, x20, w2, uxtw
    1b64:	ldr	w0, [x23, #40]
    1b68:	sub	w0, w0, w2
    1b6c:	lsr	x0, x0, #3
    1b70:	b	1b94 <ctf_bufopen_internal+0x774>
    1b74:	ldr	w2, [x1]
    1b78:	rev	w2, w2
    1b7c:	str	w2, [x1]
    1b80:	ldr	w2, [x1, #4]
    1b84:	rev	w2, w2
    1b88:	str	w2, [x1, #4]
    1b8c:	add	x1, x1, #0x8
    1b90:	sub	x0, x0, #0x1
    1b94:	cmp	x0, #0x0
    1b98:	b.gt	1b74 <ctf_bufopen_internal+0x754>
    1b9c:	ldr	w1, [x23, #40]
    1ba0:	add	x20, x20, w1, uxtw
    1ba4:	ldr	w0, [x23, #44]
    1ba8:	sub	w0, w0, w1
    1bac:	mov	x26, x20
    1bb0:	add	x0, x20, x0
    1bb4:	str	x0, [sp, #112]
    1bb8:	b	1c4c <ctf_bufopen_internal+0x82c>
    1bbc:	ldr	w25, [x26, #12]
    1bc0:	rev	w25, w25
    1bc4:	str	w25, [x26, #12]
    1bc8:	ldr	w0, [x26, #16]
    1bcc:	rev	w0, w0
    1bd0:	str	w0, [x26, #16]
    1bd4:	mov	w0, w0
    1bd8:	orr	x25, x0, x25, lsl #32
    1bdc:	ldr	x0, [sp, #104]
    1be0:	add	x0, x0, #0x14
    1be4:	b	1cbc <ctf_bufopen_internal+0x89c>
    1be8:	cmp	w20, #0x3
    1bec:	b.eq	1d38 <ctf_bufopen_internal+0x918>  // b.none
    1bf0:	b.ls	1c2c <ctf_bufopen_internal+0x80c>  // b.plast
    1bf4:	cmp	w20, #0x4
    1bf8:	b.ne	1e80 <ctf_bufopen_internal+0xa60>  // b.any
    1bfc:	cmp	x2, #0xc
    1c00:	b.ne	1d84 <ctf_bufopen_internal+0x964>  // b.any
    1c04:	ldr	w1, [x0]
    1c08:	rev	w1, w1
    1c0c:	str	w1, [x0]
    1c10:	ldr	w1, [x0, #4]
    1c14:	rev	w1, w1
    1c18:	str	w1, [x0, #4]
    1c1c:	ldr	w1, [x0, #8]
    1c20:	rev	w1, w1
    1c24:	str	w1, [x0, #8]
    1c28:	b	1c48 <ctf_bufopen_internal+0x828>
    1c2c:	cbz	w20, 1d38 <ctf_bufopen_internal+0x918>
    1c30:	sub	w1, w20, #0x1
    1c34:	cmp	w1, #0x1
    1c38:	b.hi	1e80 <ctf_bufopen_internal+0xa60>  // b.pmore
    1c3c:	ldr	w1, [x0]
    1c40:	rev	w1, w1
    1c44:	str	w1, [x0]
    1c48:	add	x26, x0, x2
    1c4c:	str	x26, [sp, #104]
    1c50:	ldr	x0, [sp, #112]
    1c54:	cmp	x26, x0
    1c58:	b.cs	1ec0 <ctf_bufopen_internal+0xaa0>  // b.hs, b.nlast
    1c5c:	ldr	w0, [x26]
    1c60:	rev	w0, w0
    1c64:	str	w0, [x26]
    1c68:	ldr	w27, [x26, #4]
    1c6c:	rev	w27, w27
    1c70:	str	w27, [x26, #4]
    1c74:	ldr	w25, [x26, #8]
    1c78:	rev	w25, w25
    1c7c:	str	w25, [x26, #8]
    1c80:	lsr	w20, w27, #26
    1c84:	mov	w25, w25
    1c88:	and	w0, w27, #0xffffff
    1c8c:	str	w0, [sp, #96]
    1c90:	and	x27, x27, #0xffffff
    1c94:	mov	x2, x27
    1c98:	mov	x1, x25
    1c9c:	mov	w0, w20
    1ca0:	bl	12c <get_vbytes_v2>
    1ca4:	mov	x2, x0
    1ca8:	ldr	x0, [sp, #104]
    1cac:	add	x0, x0, #0xc
    1cb0:	mov	x1, #0xffffffff            	// #4294967295
    1cb4:	cmp	x25, x1
    1cb8:	b.eq	1bbc <ctf_bufopen_internal+0x79c>  // b.none
    1cbc:	cmp	w20, #0x5
    1cc0:	b.eq	1d7c <ctf_bufopen_internal+0x95c>  // b.none
    1cc4:	b.ls	1be8 <ctf_bufopen_internal+0x7c8>  // b.plast
    1cc8:	cmp	w20, #0x8
    1ccc:	b.eq	1e4c <ctf_bufopen_internal+0xa2c>  // b.none
    1cd0:	b.ls	1d14 <ctf_bufopen_internal+0x8f4>  // b.plast
    1cd4:	cmp	w20, #0xd
    1cd8:	b.ls	1d38 <ctf_bufopen_internal+0x918>  // b.plast
    1cdc:	cmp	w20, #0xe
    1ce0:	b.ne	1e80 <ctf_bufopen_internal+0xa60>  // b.any
    1ce4:	cmp	x2, #0x8
    1ce8:	b.ne	1da8 <ctf_bufopen_internal+0x988>  // b.any
    1cec:	ldr	w1, [x0]
    1cf0:	rev	w1, w1
    1cf4:	str	w1, [x0]
    1cf8:	ldrh	w1, [x0, #4]
    1cfc:	rev16	w1, w1
    1d00:	strh	w1, [x0, #4]
    1d04:	ldrh	w1, [x0, #6]
    1d08:	rev16	w1, w1
    1d0c:	strh	w1, [x0, #6]
    1d10:	b	1c48 <ctf_bufopen_internal+0x828>
    1d14:	sub	w1, w20, #0x6
    1d18:	cmp	w1, #0x1
    1d1c:	b.hi	1e80 <ctf_bufopen_internal+0xa60>  // b.pmore
    1d20:	mov	x1, #0x1fffffff            	// #536870911
    1d24:	cmp	x25, x1
    1d28:	b.hi	1dcc <ctf_bufopen_internal+0x9ac>  // b.pmore
    1d2c:	ldr	w3, [sp, #96]
    1d30:	mov	x1, x0
    1d34:	b	1e44 <ctf_bufopen_internal+0xa24>
    1d38:	cbz	x2, 1c48 <ctf_bufopen_internal+0x828>
    1d3c:	adrp	x3, 0 <get_kind_v1>
    1d40:	add	x3, x3, #0x0
    1d44:	add	x3, x3, #0x1a0
    1d48:	mov	w2, #0x428                 	// #1064
    1d4c:	adrp	x1, 0 <get_kind_v1>
    1d50:	add	x1, x1, #0x0
    1d54:	adrp	x0, 0 <get_kind_v1>
    1d58:	add	x0, x0, #0x0
    1d5c:	bl	0 <__assert_fail>
    1d60:	ldr	w3, [x0, x1, lsl #2]
    1d64:	rev	w3, w3
    1d68:	str	w3, [x0, x1, lsl #2]
    1d6c:	add	x1, x1, #0x1
    1d70:	cmp	x27, x1
    1d74:	b.ne	1d60 <ctf_bufopen_internal+0x940>  // b.any
    1d78:	b	1c48 <ctf_bufopen_internal+0x828>
    1d7c:	mov	x1, #0x0                   	// #0
    1d80:	b	1d70 <ctf_bufopen_internal+0x950>
    1d84:	adrp	x3, 0 <get_kind_v1>
    1d88:	add	x3, x3, #0x0
    1d8c:	add	x3, x3, #0x1a0
    1d90:	mov	w2, #0x448                 	// #1096
    1d94:	adrp	x1, 0 <get_kind_v1>
    1d98:	add	x1, x1, #0x0
    1d9c:	adrp	x0, 0 <get_kind_v1>
    1da0:	add	x0, x0, #0x0
    1da4:	bl	0 <__assert_fail>
    1da8:	adrp	x3, 0 <get_kind_v1>
    1dac:	add	x3, x3, #0x0
    1db0:	add	x3, x3, #0x1a0
    1db4:	mov	w2, #0x456                 	// #1110
    1db8:	adrp	x1, 0 <get_kind_v1>
    1dbc:	add	x1, x1, #0x0
    1dc0:	adrp	x0, 0 <get_kind_v1>
    1dc4:	add	x0, x0, #0x0
    1dc8:	bl	0 <__assert_fail>
    1dcc:	ldr	w3, [sp, #96]
    1dd0:	mov	x1, x0
    1dd4:	b	1e10 <ctf_bufopen_internal+0x9f0>
    1dd8:	ldr	w4, [x1]
    1ddc:	rev	w4, w4
    1de0:	str	w4, [x1]
    1de4:	ldr	w4, [x1, #4]
    1de8:	rev	w4, w4
    1dec:	str	w4, [x1, #4]
    1df0:	ldr	w4, [x1, #8]
    1df4:	rev	w4, w4
    1df8:	str	w4, [x1, #8]
    1dfc:	ldr	w4, [x1, #12]
    1e00:	rev	w4, w4
    1e04:	str	w4, [x1, #12]
    1e08:	sub	x3, x3, #0x1
    1e0c:	add	x1, x1, #0x10
    1e10:	cbnz	x3, 1dd8 <ctf_bufopen_internal+0x9b8>
    1e14:	b	1c48 <ctf_bufopen_internal+0x828>
    1e18:	ldr	w4, [x1]
    1e1c:	rev	w4, w4
    1e20:	str	w4, [x1]
    1e24:	ldr	w4, [x1, #4]
    1e28:	rev	w4, w4
    1e2c:	str	w4, [x1, #4]
    1e30:	ldr	w4, [x1, #8]
    1e34:	rev	w4, w4
    1e38:	str	w4, [x1, #8]
    1e3c:	sub	x3, x3, #0x1
    1e40:	add	x1, x1, #0xc
    1e44:	cbnz	x3, 1e18 <ctf_bufopen_internal+0x9f8>
    1e48:	b	1c48 <ctf_bufopen_internal+0x828>
    1e4c:	ldr	w1, [sp, #96]
    1e50:	mov	x3, x0
    1e54:	b	1e78 <ctf_bufopen_internal+0xa58>
    1e58:	ldr	w4, [x3]
    1e5c:	rev	w4, w4
    1e60:	str	w4, [x3]
    1e64:	ldr	w4, [x3, #4]
    1e68:	rev	w4, w4
    1e6c:	str	w4, [x3, #4]
    1e70:	add	x3, x3, #0x8
    1e74:	sub	x1, x1, #0x1
    1e78:	cbnz	x1, 1e58 <ctf_bufopen_internal+0xa38>
    1e7c:	b	1c48 <ctf_bufopen_internal+0x828>
    1e80:	mov	w1, w20
    1e84:	adrp	x0, 0 <get_kind_v1>
    1e88:	add	x0, x0, #0x0
    1e8c:	bl	0 <ctf_dprintf>
    1e90:	ldr	x2, [x19, #392]
    1e94:	mov	x1, x23
    1e98:	mov	x0, x19
    1e9c:	bl	23c <ctf_set_base>
    1ea0:	mov	w1, #0x3ef                 	// #1007
    1ea4:	mov	x0, x24
    1ea8:	bl	0 <ctf_set_open_errno>
    1eac:	mov	x0, x19
    1eb0:	bl	1030 <ctf_file_close>
    1eb4:	mov	x19, #0x0                   	// #0
    1eb8:	ldp	x27, x28, [sp, #80]
    1ebc:	b	1638 <ctf_bufopen_internal+0x218>
    1ec0:	ldr	x2, [x19, #392]
    1ec4:	mov	x1, x23
    1ec8:	mov	x0, x19
    1ecc:	bl	23c <ctf_set_base>
    1ed0:	ldr	w0, [x19, #552]
    1ed4:	tbz	w0, #1, 1ee8 <ctf_bufopen_internal+0xac8>
    1ed8:	mov	w0, #0x1                   	// #1
    1edc:	str	w0, [x19, #548]
    1ee0:	ldp	x27, x28, [sp, #80]
    1ee4:	b	1638 <ctf_bufopen_internal+0x218>
    1ee8:	mov	x1, x23
    1eec:	mov	x0, x19
    1ef0:	bl	32c <init_types>
    1ef4:	mov	w1, w0
    1ef8:	cbnz	w0, 1ea4 <ctf_bufopen_internal+0xa84>
    1efc:	cbz	w28, 212c <ctf_bufopen_internal+0xd0c>
    1f00:	ldr	x25, [x21, #16]
    1f04:	ldr	x0, [x21, #24]
    1f08:	udiv	x25, x25, x0
    1f0c:	str	x25, [x19, #432]
    1f10:	lsl	x25, x25, #2
    1f14:	mov	x0, x25
    1f18:	bl	0 <malloc>
    1f1c:	mov	x20, x0
    1f20:	str	x0, [x19, #424]
    1f24:	cbz	x0, 2124 <ctf_bufopen_internal+0xd04>
    1f28:	ldr	x28, [x21, #8]
    1f2c:	add	x0, x0, x25
    1f30:	str	x0, [sp, #104]
    1f34:	ldr	w27, [x23, #20]
    1f38:	ldr	w25, [x23, #24]
    1f3c:	adrp	x0, 0 <get_kind_v1>
    1f40:	add	x0, x0, #0x0
    1f44:	add	x0, x0, #0xf0
    1f48:	str	x0, [sp, #120]
    1f4c:	mov	w26, #0xffffffff            	// #-1
    1f50:	b	1fd8 <ctf_bufopen_internal+0xbb8>
    1f54:	add	x1, sp, #0x88
    1f58:	mov	x0, x28
    1f5c:	bl	0 <ctf_sym_to_elf64>
    1f60:	mov	x24, x0
    1f64:	b	1ff4 <ctf_bufopen_internal+0xbd4>
    1f68:	ldr	x1, [sp, #120]
    1f6c:	str	x1, [sp, #96]
    1f70:	cbz	w0, 1fc8 <ctf_bufopen_internal+0xba8>
    1f74:	ldrh	w0, [x24, #6]
    1f78:	str	w0, [sp, #112]
    1f7c:	cbz	w0, 1fc8 <ctf_bufopen_internal+0xba8>
    1f80:	adrp	x1, 0 <get_kind_v1>
    1f84:	add	x1, x1, #0x0
    1f88:	ldr	x0, [sp, #96]
    1f8c:	bl	0 <strcmp>
    1f90:	cbz	w0, 1fc8 <ctf_bufopen_internal+0xba8>
    1f94:	adrp	x1, 0 <get_kind_v1>
    1f98:	add	x1, x1, #0x0
    1f9c:	ldr	x0, [sp, #96]
    1fa0:	bl	0 <strcmp>
    1fa4:	cbz	w0, 1fc8 <ctf_bufopen_internal+0xba8>
    1fa8:	ldrb	w0, [x24, #4]
    1fac:	and	w0, w0, #0xf
    1fb0:	cmp	w0, #0x1
    1fb4:	b.eq	2018 <ctf_bufopen_internal+0xbf8>  // b.none
    1fb8:	cmp	w0, #0x2
    1fbc:	b.eq	2050 <ctf_bufopen_internal+0xc30>  // b.none
    1fc0:	str	w26, [x20]
    1fc4:	b	1fcc <ctf_bufopen_internal+0xbac>
    1fc8:	str	w26, [x20]
    1fcc:	add	x20, x20, #0x4
    1fd0:	ldr	x0, [x21, #24]
    1fd4:	add	x28, x28, x0
    1fd8:	ldr	x0, [sp, #104]
    1fdc:	cmp	x0, x20
    1fe0:	b.ls	20b4 <ctf_bufopen_internal+0xc94>  // b.plast
    1fe4:	ldr	x0, [x21, #24]
    1fe8:	cmp	x0, #0x10
    1fec:	b.eq	1f54 <ctf_bufopen_internal+0xb34>  // b.none
    1ff0:	mov	x24, x28
    1ff4:	ldr	w0, [x24]
    1ff8:	mov	w1, w0
    1ffc:	ldr	x2, [x22, #16]
    2000:	cmp	x2, w0, uxtw
    2004:	b.ls	1f68 <ctf_bufopen_internal+0xb48>  // b.plast
    2008:	ldr	x2, [x22, #8]
    200c:	add	x1, x2, x1
    2010:	str	x1, [sp, #96]
    2014:	b	1f70 <ctf_bufopen_internal+0xb50>
    2018:	ldr	w0, [x23, #24]
    201c:	cmp	w0, w27
    2020:	b.ls	2048 <ctf_bufopen_internal+0xc28>  // b.plast
    2024:	mov	w0, #0xfff1                	// #65521
    2028:	ldr	w1, [sp, #112]
    202c:	cmp	w1, w0
    2030:	b.eq	2040 <ctf_bufopen_internal+0xc20>  // b.none
    2034:	str	w27, [x20]
    2038:	add	w27, w27, #0x4
    203c:	b	1fcc <ctf_bufopen_internal+0xbac>
    2040:	ldr	x0, [x24, #8]
    2044:	cbnz	x0, 2034 <ctf_bufopen_internal+0xc14>
    2048:	str	w26, [x20]
    204c:	b	1fcc <ctf_bufopen_internal+0xbac>
    2050:	ldr	w0, [x23, #28]
    2054:	cmp	w0, w25
    2058:	b.hi	2064 <ctf_bufopen_internal+0xc44>  // b.pmore
    205c:	str	w26, [x20]
    2060:	b	1fcc <ctf_bufopen_internal+0xbac>
    2064:	str	w25, [x20]
    2068:	ldr	x0, [x19, #408]
    206c:	ldr	w24, [x0, w25, uxtw]
    2070:	ldr	x0, [x19]
    2074:	ldr	x1, [x0, #16]
    2078:	mov	w0, w24
    207c:	blr	x1
    2080:	str	w0, [sp, #96]
    2084:	ldr	x0, [x19]
    2088:	ldr	x1, [x0]
    208c:	mov	w0, w24
    2090:	blr	x1
    2094:	ldr	w3, [sp, #96]
    2098:	orr	w1, w3, w0
    209c:	add	w2, w25, #0x4
    20a0:	add	w0, w3, #0x2
    20a4:	add	w25, w25, w0, lsl #2
    20a8:	cmp	w1, #0x0
    20ac:	csel	w25, w25, w2, ne  // ne = any
    20b0:	b	1fcc <ctf_bufopen_internal+0xbac>
    20b4:	ldr	x1, [x19, #432]
    20b8:	adrp	x0, 0 <get_kind_v1>
    20bc:	add	x0, x0, #0x0
    20c0:	bl	0 <ctf_dprintf>
    20c4:	mov	x0, x19
    20c8:	bl	fb0 <ctf_set_ctl_hashes>
    20cc:	ldr	x0, [x21, #24]
    20d0:	cmp	x0, #0x18
    20d4:	b.eq	20f4 <ctf_bufopen_internal+0xcd4>  // b.none
    20d8:	mov	w1, #0x1                   	// #1
    20dc:	mov	x0, x19
    20e0:	bl	13dc <ctf_setmodel>
    20e4:	mov	w0, #0x1                   	// #1
    20e8:	str	w0, [x19, #548]
    20ec:	ldp	x27, x28, [sp, #80]
    20f0:	b	1638 <ctf_bufopen_internal+0x218>
    20f4:	mov	w1, #0x2                   	// #2
    20f8:	mov	x0, x19
    20fc:	bl	13dc <ctf_setmodel>
    2100:	b	20e4 <ctf_bufopen_internal+0xcc4>
    2104:	mov	w1, #0x3f6                 	// #1014
    2108:	b	1ea4 <ctf_bufopen_internal+0xa84>
    210c:	mov	w1, #0xc                   	// #12
    2110:	b	1ea4 <ctf_bufopen_internal+0xa84>
    2114:	mov	w1, #0xc                   	// #12
    2118:	b	1ea4 <ctf_bufopen_internal+0xa84>
    211c:	mov	w1, #0xc                   	// #12
    2120:	b	1ea4 <ctf_bufopen_internal+0xa84>
    2124:	mov	w1, #0xc                   	// #12
    2128:	b	1ea4 <ctf_bufopen_internal+0xa84>
    212c:	mov	x0, x19
    2130:	bl	fb0 <ctf_set_ctl_hashes>
    2134:	mov	w1, #0x2                   	// #2
    2138:	mov	x0, x19
    213c:	bl	13dc <ctf_setmodel>
    2140:	b	20e4 <ctf_bufopen_internal+0xcc4>

0000000000002144 <ctf_simple_open_internal>:
    2144:	stp	x29, x30, [sp, #-112]!
    2148:	mov	x29, sp
    214c:	mov	x9, x1
    2150:	mov	x1, x2
    2154:	mov	x8, x3
    2158:	mov	x2, x5
    215c:	mov	x3, x7
    2160:	cbz	x0, 2188 <ctf_simple_open_internal+0x44>
    2164:	adrp	x5, 0 <get_kind_v1>
    2168:	add	x5, x5, #0x0
    216c:	add	x5, x5, #0x1b0
    2170:	str	x5, [sp, #80]
    2174:	mov	x5, #0x1                   	// #1
    2178:	str	x5, [sp, #104]
    217c:	str	x0, [sp, #88]
    2180:	str	x9, [sp, #96]
    2184:	add	x0, sp, #0x50
    2188:	cbz	x1, 21ac <ctf_simple_open_internal+0x68>
    218c:	adrp	x5, 0 <get_kind_v1>
    2190:	add	x5, x5, #0x0
    2194:	add	x5, x5, #0x1b0
    2198:	str	x5, [sp, #48]
    219c:	str	x1, [sp, #56]
    21a0:	str	x8, [sp, #64]
    21a4:	str	x4, [sp, #72]
    21a8:	add	x1, sp, #0x30
    21ac:	cbz	x2, 21d4 <ctf_simple_open_internal+0x90>
    21b0:	adrp	x4, 0 <get_kind_v1>
    21b4:	add	x4, x4, #0x0
    21b8:	add	x4, x4, #0x1b0
    21bc:	str	x4, [sp, #16]
    21c0:	mov	x4, #0x1                   	// #1
    21c4:	str	x4, [sp, #40]
    21c8:	str	x2, [sp, #24]
    21cc:	str	x6, [sp, #32]
    21d0:	add	x2, sp, #0x10
    21d4:	ldr	x5, [sp, #120]
    21d8:	ldr	w4, [sp, #112]
    21dc:	bl	1420 <ctf_bufopen_internal>
    21e0:	ldp	x29, x30, [sp], #112
    21e4:	ret

00000000000021e8 <ctf_simple_open>:
    21e8:	sub	sp, sp, #0x20
    21ec:	stp	x29, x30, [sp, #16]
    21f0:	add	x29, sp, #0x10
    21f4:	str	x7, [sp, #8]
    21f8:	str	wzr, [sp]
    21fc:	mov	x7, #0x0                   	// #0
    2200:	bl	2144 <ctf_simple_open_internal>
    2204:	ldp	x29, x30, [sp, #16]
    2208:	add	sp, sp, #0x20
    220c:	ret

0000000000002210 <ctf_bufopen>:
    2210:	stp	x29, x30, [sp, #-16]!
    2214:	mov	x29, sp
    2218:	mov	x5, x3
    221c:	mov	w4, #0x0                   	// #0
    2220:	mov	x3, #0x0                   	// #0
    2224:	bl	1420 <ctf_bufopen_internal>
    2228:	ldp	x29, x30, [sp], #16
    222c:	ret

0000000000002230 <ctf_getmodel>:
    2230:	ldr	x0, [x0, #488]
    2234:	ldr	w0, [x0, #8]
    2238:	ret

000000000000223c <ctf_setspecific>:
    223c:	str	x1, [x0, #720]
    2240:	ret

0000000000002244 <ctf_getspecific>:
    2244:	ldr	x0, [x0, #720]
    2248:	ret

ctf-string.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_str_rollback_atom>:
   0:	ldr	x1, [x1, #32]
   4:	ldr	x0, [x2, #8]
   8:	cmp	x1, x0
   c:	cset	w0, hi  // hi = pmore
  10:	ret

0000000000000014 <ctf_str_purge_atom_refs>:
  14:	stp	x29, x30, [sp, #-48]!
  18:	mov	x29, sp
  1c:	stp	x19, x20, [sp, #16]
  20:	ldr	x19, [x0, #16]
  24:	cbz	x19, 54 <ctf_str_purge_atom_refs+0x40>
  28:	str	x21, [sp, #32]
  2c:	add	x21, x0, #0x8
  30:	mov	x20, x19
  34:	ldr	x19, [x19, #8]
  38:	mov	x1, x20
  3c:	mov	x0, x21
  40:	bl	0 <ctf_list_delete>
  44:	mov	x0, x20
  48:	bl	0 <free>
  4c:	cbnz	x19, 30 <ctf_str_purge_atom_refs+0x1c>
  50:	ldr	x21, [sp, #32]
  54:	ldp	x19, x20, [sp, #16]
  58:	ldp	x29, x30, [sp], #48
  5c:	ret

0000000000000060 <ctf_str_free_atom>:
  60:	stp	x29, x30, [sp, #-32]!
  64:	mov	x29, sp
  68:	str	x19, [sp, #16]
  6c:	mov	x19, x0
  70:	bl	14 <ctf_str_purge_atom_refs>
  74:	mov	x0, x19
  78:	bl	0 <free>
  7c:	ldr	x19, [sp, #16]
  80:	ldp	x29, x30, [sp], #32
  84:	ret

0000000000000088 <ctf_str_purge_one_atom_refs>:
  88:	stp	x29, x30, [sp, #-16]!
  8c:	mov	x29, sp
  90:	mov	x0, x1
  94:	bl	14 <ctf_str_purge_atom_refs>
  98:	ldp	x29, x30, [sp], #16
  9c:	ret

00000000000000a0 <ctf_str_add_ref_internal>:
  a0:	stp	x29, x30, [sp, #-80]!
  a4:	mov	x29, sp
  a8:	stp	x19, x20, [sp, #16]
  ac:	stp	x21, x22, [sp, #32]
  b0:	stp	x23, x24, [sp, #48]
  b4:	str	x25, [sp, #64]
  b8:	mov	x22, x0
  bc:	mov	x24, x1
  c0:	mov	w23, w2
  c4:	mov	w25, w3
  c8:	mov	x20, x4
  cc:	ldr	x0, [x0, #368]
  d0:	bl	0 <ctf_dynhash_lookup>
  d4:	mov	x19, x0
  d8:	cbnz	w23, 100 <ctf_str_add_ref_internal+0x60>
  dc:	mov	x21, x0
  e0:	cbz	x0, 134 <ctf_str_add_ref_internal+0x94>
  e4:	mov	x0, x19
  e8:	ldp	x19, x20, [sp, #16]
  ec:	ldp	x21, x22, [sp, #32]
  f0:	ldp	x23, x24, [sp, #48]
  f4:	ldr	x25, [sp, #64]
  f8:	ldp	x29, x30, [sp], #80
  fc:	ret
 100:	mov	x0, #0x18                  	// #24
 104:	bl	0 <malloc>
 108:	mov	x21, x0
 10c:	cbz	x0, 1e4 <ctf_str_add_ref_internal+0x144>
 110:	str	x20, [x0, #16]
 114:	cbz	x19, 134 <ctf_str_add_ref_internal+0x94>
 118:	mov	x1, x0
 11c:	add	x0, x19, #0x8
 120:	bl	0 <ctf_list_append>
 124:	ldr	x0, [x22, #376]
 128:	add	x0, x0, #0x1
 12c:	str	x0, [x22, #376]
 130:	b	e4 <ctf_str_add_ref_internal+0x44>
 134:	mov	x0, #0x28                  	// #40
 138:	bl	0 <malloc>
 13c:	mov	x19, x0
 140:	cbz	x0, 1dc <ctf_str_add_ref_internal+0x13c>
 144:	stp	xzr, xzr, [x0]
 148:	stp	xzr, xzr, [x0, #16]
 14c:	str	xzr, [x0, #32]
 150:	mov	x0, x24
 154:	bl	0 <strdup>
 158:	mov	x20, x0
 15c:	cbz	x0, 1f8 <ctf_str_add_ref_internal+0x158>
 160:	mov	x2, x19
 164:	mov	x1, x0
 168:	ldr	x0, [x22, #368]
 16c:	bl	0 <ctf_dynhash_insert>
 170:	tbnz	w0, #31, 1ec <ctf_str_add_ref_internal+0x14c>
 174:	str	x20, [x19]
 178:	ldr	x0, [x22, #624]
 17c:	str	x0, [x19, #32]
 180:	cbnz	w25, 1a4 <ctf_str_add_ref_internal+0x104>
 184:	cbz	w23, e4 <ctf_str_add_ref_internal+0x44>
 188:	mov	x1, x21
 18c:	add	x0, x19, #0x8
 190:	bl	0 <ctf_list_append>
 194:	ldr	x0, [x22, #376]
 198:	add	x0, x0, #0x1
 19c:	str	x0, [x22, #376]
 1a0:	b	e4 <ctf_str_add_ref_internal+0x44>
 1a4:	ldr	w1, [x22, #384]
 1a8:	str	w1, [x19, #24]
 1ac:	mov	x2, x20
 1b0:	mov	w1, w1
 1b4:	ldr	x0, [x22, #120]
 1b8:	bl	0 <ctf_dynhash_insert>
 1bc:	tbnz	w0, #31, 1ec <ctf_str_add_ref_internal+0x14c>
 1c0:	ldr	x0, [x19]
 1c4:	bl	0 <strlen>
 1c8:	ldr	w1, [x22, #384]
 1cc:	add	w1, w1, #0x1
 1d0:	add	w1, w1, w0
 1d4:	str	w1, [x22, #384]
 1d8:	b	184 <ctf_str_add_ref_internal+0xe4>
 1dc:	mov	x20, x0
 1e0:	b	1f8 <ctf_str_add_ref_internal+0x158>
 1e4:	mov	x19, x0
 1e8:	b	e4 <ctf_str_add_ref_internal+0x44>
 1ec:	mov	x1, x20
 1f0:	ldr	x0, [x22, #368]
 1f4:	bl	0 <ctf_dynhash_remove>
 1f8:	mov	x0, x19
 1fc:	bl	0 <free>
 200:	mov	x0, x21
 204:	bl	0 <free>
 208:	mov	x0, x20
 20c:	bl	0 <free>
 210:	mov	x19, #0x0                   	// #0
 214:	b	e4 <ctf_str_add_ref_internal+0x44>

0000000000000218 <ctf_str_sort_strtab>:
 218:	stp	x29, x30, [sp, #-16]!
 21c:	mov	x29, sp
 220:	ldr	x1, [x1]
 224:	ldr	x0, [x0]
 228:	ldr	x1, [x1]
 22c:	ldr	x0, [x0]
 230:	bl	0 <strcmp>
 234:	ldp	x29, x30, [sp], #16
 238:	ret

000000000000023c <ctf_str_populate_sorttab>:
 23c:	ldr	x0, [x2, #32]
 240:	cmp	x0, x1
 244:	b.eq	288 <ctf_str_populate_sorttab+0x4c>  // b.none
 248:	stp	x29, x30, [sp, #-32]!
 24c:	mov	x29, sp
 250:	stp	x19, x20, [sp, #16]
 254:	mov	x19, x1
 258:	mov	x20, x2
 25c:	add	x0, x1, #0x8
 260:	bl	0 <ctf_list_empty_p>
 264:	cbnz	w0, 27c <ctf_str_populate_sorttab+0x40>
 268:	ldr	x1, [x20, #16]
 26c:	ldr	x0, [x20, #24]
 270:	add	x2, x0, #0x1
 274:	str	x2, [x20, #24]
 278:	str	x19, [x1, x0, lsl #3]
 27c:	ldp	x19, x20, [sp, #16]
 280:	ldp	x29, x30, [sp], #32
 284:	ret
 288:	ret

000000000000028c <ctf_str_count_strtab>:
 28c:	stp	x29, x30, [sp, #-48]!
 290:	mov	x29, sp
 294:	stp	x19, x20, [sp, #16]
 298:	mov	x19, x2
 29c:	ldr	x0, [x2, #32]
 2a0:	cmp	x0, x1
 2a4:	b.eq	2fc <ctf_str_count_strtab+0x70>  // b.none
 2a8:	mov	x20, x1
 2ac:	add	x0, x1, #0x8
 2b0:	bl	0 <ctf_list_empty_p>
 2b4:	cbnz	w0, 2f0 <ctf_str_count_strtab+0x64>
 2b8:	ldr	w0, [x20, #28]
 2bc:	cbnz	w0, 2e4 <ctf_str_count_strtab+0x58>
 2c0:	str	x21, [sp, #32]
 2c4:	ldr	x21, [x19]
 2c8:	ldr	x0, [x20]
 2cc:	bl	0 <strlen>
 2d0:	ldr	x1, [x21, #8]
 2d4:	add	x1, x1, #0x1
 2d8:	add	x1, x1, x0
 2dc:	str	x1, [x21, #8]
 2e0:	ldr	x21, [sp, #32]
 2e4:	ldr	x0, [x19, #8]
 2e8:	add	x0, x0, #0x1
 2ec:	str	x0, [x19, #8]
 2f0:	ldp	x19, x20, [sp, #16]
 2f4:	ldp	x29, x30, [sp], #48
 2f8:	ret
 2fc:	ldr	x0, [x2, #8]
 300:	add	x0, x0, #0x1
 304:	str	x0, [x2, #8]
 308:	b	2f0 <ctf_str_count_strtab+0x64>

000000000000030c <ctf_strraw_explicit>:
 30c:	stp	x29, x30, [sp, #-16]!
 310:	mov	x29, sp
 314:	lsr	w3, w1, #31
 318:	cmp	w1, #0x0
 31c:	ccmp	x2, #0x0, #0x4, ge  // ge = tcont
 320:	b.ne	368 <ctf_strraw_explicit+0x5c>  // b.any
 324:	mov	w2, w3
 328:	add	x2, x2, #0x15
 32c:	add	x2, x0, x2, lsl #4
 330:	cbnz	w3, 35c <ctf_strraw_explicit+0x50>
 334:	tbz	w1, #31, 36c <ctf_strraw_explicit+0x60>
 338:	ldr	x0, [x2]
 33c:	cbz	x0, 354 <ctf_strraw_explicit+0x48>
 340:	and	x1, x1, #0x7fffffff
 344:	ldr	x2, [x2, #8]
 348:	add	x0, x0, x1
 34c:	cmp	x1, x2
 350:	csel	x0, x0, xzr, cc  // cc = lo, ul, last
 354:	ldp	x29, x30, [sp], #16
 358:	ret
 35c:	ldr	x3, [x0, #128]
 360:	cbz	x3, 334 <ctf_strraw_explicit+0x28>
 364:	b	3a0 <ctf_strraw_explicit+0x94>
 368:	cbnz	w3, 398 <ctf_strraw_explicit+0x8c>
 36c:	mov	w4, w1
 370:	ldr	x3, [x2, #8]
 374:	cmp	x3, w1, uxtw
 378:	b.hi	338 <ctf_strraw_explicit+0x2c>  // b.pmore
 37c:	ldr	w3, [x0, #384]
 380:	cmp	w3, w1
 384:	b.ls	338 <ctf_strraw_explicit+0x2c>  // b.plast
 388:	mov	x1, x4
 38c:	ldr	x0, [x0, #120]
 390:	bl	0 <ctf_dynhash_lookup>
 394:	b	354 <ctf_strraw_explicit+0x48>
 398:	ldr	x3, [x0, #128]
 39c:	cbz	x3, 36c <ctf_strraw_explicit+0x60>
 3a0:	mov	w1, w1
 3a4:	mov	x0, x3
 3a8:	bl	0 <ctf_dynhash_lookup>
 3ac:	b	354 <ctf_strraw_explicit+0x48>

00000000000003b0 <ctf_strraw>:
 3b0:	stp	x29, x30, [sp, #-16]!
 3b4:	mov	x29, sp
 3b8:	mov	x2, #0x0                   	// #0
 3bc:	bl	30c <ctf_strraw_explicit>
 3c0:	ldp	x29, x30, [sp], #16
 3c4:	ret

00000000000003c8 <ctf_strptr>:
 3c8:	stp	x29, x30, [sp, #-16]!
 3cc:	mov	x29, sp
 3d0:	bl	3b0 <ctf_strraw>
 3d4:	adrp	x1, 0 <ctf_str_rollback_atom>
 3d8:	add	x1, x1, #0x0
 3dc:	cmp	x0, #0x0
 3e0:	csel	x0, x1, x0, eq  // eq = none
 3e4:	ldp	x29, x30, [sp], #16
 3e8:	ret

00000000000003ec <ctf_str_free_atoms>:
 3ec:	stp	x29, x30, [sp, #-32]!
 3f0:	mov	x29, sp
 3f4:	str	x19, [sp, #16]
 3f8:	mov	x19, x0
 3fc:	ldr	x0, [x0, #120]
 400:	bl	0 <ctf_dynhash_destroy>
 404:	ldr	x0, [x19, #368]
 408:	bl	0 <ctf_dynhash_destroy>
 40c:	ldr	x19, [sp, #16]
 410:	ldp	x29, x30, [sp], #32
 414:	ret

0000000000000418 <ctf_str_add>:
 418:	cbz	x1, 444 <ctf_str_add+0x2c>
 41c:	stp	x29, x30, [sp, #-16]!
 420:	mov	x29, sp
 424:	mov	x4, #0x0                   	// #0
 428:	mov	w3, #0x1                   	// #1
 42c:	mov	w2, #0x0                   	// #0
 430:	bl	a0 <ctf_str_add_ref_internal>
 434:	cbz	x0, 44c <ctf_str_add+0x34>
 438:	ldr	w0, [x0, #24]
 43c:	ldp	x29, x30, [sp], #16
 440:	ret
 444:	mov	w0, #0x0                   	// #0
 448:	ret
 44c:	mov	w0, #0x0                   	// #0
 450:	b	43c <ctf_str_add+0x24>

0000000000000454 <ctf_str_create_atoms>:
 454:	stp	x29, x30, [sp, #-32]!
 458:	mov	x29, sp
 45c:	stp	x19, x20, [sp, #16]
 460:	mov	x19, x0
 464:	adrp	x3, 0 <ctf_str_rollback_atom>
 468:	add	x3, x3, #0x0
 46c:	adrp	x2, 0 <free>
 470:	add	x2, x2, #0x0
 474:	adrp	x1, 0 <ctf_hash_eq_string>
 478:	add	x1, x1, #0x0
 47c:	adrp	x0, 0 <ctf_hash_string>
 480:	add	x0, x0, #0x0
 484:	bl	0 <ctf_dynhash_create>
 488:	str	x0, [x19, #368]
 48c:	cbz	x0, 518 <ctf_str_create_atoms+0xc4>
 490:	ldr	x0, [x19, #120]
 494:	cbz	x0, 4d0 <ctf_str_create_atoms+0x7c>
 498:	bl	0 <__errno_location>
 49c:	mov	x20, x0
 4a0:	str	wzr, [x0]
 4a4:	adrp	x1, 0 <ctf_str_rollback_atom>
 4a8:	add	x1, x1, #0x0
 4ac:	mov	x0, x19
 4b0:	bl	418 <ctf_str_add>
 4b4:	ldr	w1, [x20]
 4b8:	mov	w0, #0x0                   	// #0
 4bc:	cmp	w1, #0xc
 4c0:	b.eq	508 <ctf_str_create_atoms+0xb4>  // b.none
 4c4:	ldp	x19, x20, [sp, #16]
 4c8:	ldp	x29, x30, [sp], #32
 4cc:	ret
 4d0:	mov	x3, #0x0                   	// #0
 4d4:	mov	x2, #0x0                   	// #0
 4d8:	adrp	x1, 0 <ctf_hash_eq_integer>
 4dc:	add	x1, x1, #0x0
 4e0:	adrp	x0, 0 <ctf_hash_integer>
 4e4:	add	x0, x0, #0x0
 4e8:	bl	0 <ctf_dynhash_create>
 4ec:	str	x0, [x19, #120]
 4f0:	cbnz	x0, 498 <ctf_str_create_atoms+0x44>
 4f4:	ldr	x0, [x19, #368]
 4f8:	bl	0 <ctf_dynhash_destroy>
 4fc:	str	xzr, [x19, #368]
 500:	mov	w0, #0xfffffff4            	// #-12
 504:	b	4c4 <ctf_str_create_atoms+0x70>
 508:	ldr	x0, [x19, #120]
 50c:	bl	0 <ctf_dynhash_destroy>
 510:	str	xzr, [x19, #120]
 514:	b	4f4 <ctf_str_create_atoms+0xa0>
 518:	mov	w0, #0xfffffff4            	// #-12
 51c:	b	4c4 <ctf_str_create_atoms+0x70>

0000000000000520 <ctf_str_add_ref>:
 520:	cbz	x1, 54c <ctf_str_add_ref+0x2c>
 524:	stp	x29, x30, [sp, #-16]!
 528:	mov	x29, sp
 52c:	mov	x4, x2
 530:	mov	w3, #0x1                   	// #1
 534:	mov	w2, w3
 538:	bl	a0 <ctf_str_add_ref_internal>
 53c:	cbz	x0, 554 <ctf_str_add_ref+0x34>
 540:	ldr	w0, [x0, #24]
 544:	ldp	x29, x30, [sp], #16
 548:	ret
 54c:	mov	w0, #0x0                   	// #0
 550:	ret
 554:	mov	w0, #0x0                   	// #0
 558:	b	544 <ctf_str_add_ref+0x24>

000000000000055c <ctf_str_add_external>:
 55c:	cbz	x1, 59c <ctf_str_add_external+0x40>
 560:	stp	x29, x30, [sp, #-32]!
 564:	mov	x29, sp
 568:	str	x19, [sp, #16]
 56c:	mov	w19, w2
 570:	mov	x4, #0x0                   	// #0
 574:	mov	w3, #0x0                   	// #0
 578:	mov	w2, #0x0                   	// #0
 57c:	bl	a0 <ctf_str_add_ref_internal>
 580:	cbz	x0, 5a4 <ctf_str_add_external+0x48>
 584:	orr	w2, w19, #0x80000000
 588:	str	w2, [x0, #28]
 58c:	mov	w0, #0x1                   	// #1
 590:	ldr	x19, [sp, #16]
 594:	ldp	x29, x30, [sp], #32
 598:	ret
 59c:	mov	w0, #0x0                   	// #0
 5a0:	ret
 5a4:	mov	w0, #0x0                   	// #0
 5a8:	b	590 <ctf_str_add_external+0x34>

00000000000005ac <ctf_str_remove_ref>:
 5ac:	stp	x29, x30, [sp, #-48]!
 5b0:	mov	x29, sp
 5b4:	stp	x21, x22, [sp, #32]
 5b8:	mov	x21, x2
 5bc:	ldr	x0, [x0, #368]
 5c0:	bl	0 <ctf_dynhash_lookup>
 5c4:	cbz	x0, 610 <ctf_str_remove_ref+0x64>
 5c8:	stp	x19, x20, [sp, #16]
 5cc:	ldr	x19, [x0, #16]
 5d0:	cbz	x19, 61c <ctf_str_remove_ref+0x70>
 5d4:	add	x22, x0, #0x8
 5d8:	b	5e0 <ctf_str_remove_ref+0x34>
 5dc:	cbz	x19, 60c <ctf_str_remove_ref+0x60>
 5e0:	mov	x20, x19
 5e4:	ldr	x19, [x19, #8]
 5e8:	ldr	x0, [x20, #16]
 5ec:	cmp	x0, x21
 5f0:	b.ne	5dc <ctf_str_remove_ref+0x30>  // b.any
 5f4:	mov	x1, x20
 5f8:	mov	x0, x22
 5fc:	bl	0 <ctf_list_delete>
 600:	mov	x0, x20
 604:	bl	0 <free>
 608:	b	5dc <ctf_str_remove_ref+0x30>
 60c:	ldp	x19, x20, [sp, #16]
 610:	ldp	x21, x22, [sp, #32]
 614:	ldp	x29, x30, [sp], #48
 618:	ret
 61c:	ldp	x19, x20, [sp, #16]
 620:	b	610 <ctf_str_remove_ref+0x64>

0000000000000624 <ctf_str_rollback>:
 624:	stp	x29, x30, [sp, #-32]!
 628:	mov	x29, sp
 62c:	stp	x1, x2, [sp, #16]
 630:	add	x2, sp, #0x10
 634:	adrp	x1, 0 <ctf_str_rollback_atom>
 638:	add	x1, x1, #0x0
 63c:	ldr	x0, [x0, #368]
 640:	bl	0 <ctf_dynhash_iter_remove>
 644:	ldp	x29, x30, [sp], #32
 648:	ret

000000000000064c <ctf_str_purge_refs>:
 64c:	stp	x29, x30, [sp, #-32]!
 650:	mov	x29, sp
 654:	str	x19, [sp, #16]
 658:	mov	x19, x0
 65c:	ldr	x0, [x0, #376]
 660:	cbnz	x0, 674 <ctf_str_purge_refs+0x28>
 664:	str	xzr, [x19, #376]
 668:	ldr	x19, [sp, #16]
 66c:	ldp	x29, x30, [sp], #32
 670:	ret
 674:	mov	x2, #0x0                   	// #0
 678:	adrp	x1, 0 <ctf_str_rollback_atom>
 67c:	add	x1, x1, #0x0
 680:	ldr	x0, [x19, #368]
 684:	bl	0 <ctf_dynhash_iter>
 688:	b	664 <ctf_str_purge_refs+0x18>

000000000000068c <ctf_str_write_strtab>:
 68c:	stp	x29, x30, [sp, #-128]!
 690:	mov	x29, sp
 694:	stp	x21, x22, [sp, #32]
 698:	mov	x22, x0
 69c:	stp	xzr, xzr, [sp, #112]
 6a0:	stp	xzr, xzr, [sp, #80]
 6a4:	stp	xzr, xzr, [sp, #96]
 6a8:	add	x0, sp, #0x70
 6ac:	str	x0, [sp, #72]
 6b0:	adrp	x1, 0 <ctf_str_rollback_atom>
 6b4:	add	x1, x1, #0x0
 6b8:	ldr	x0, [x22, #368]
 6bc:	bl	0 <ctf_dynhash_lookup>
 6c0:	cbz	x0, 788 <ctf_str_write_strtab+0xfc>
 6c4:	stp	x19, x20, [sp, #16]
 6c8:	mov	x19, x0
 6cc:	str	x0, [sp, #104]
 6d0:	add	x2, sp, #0x48
 6d4:	adrp	x1, 0 <ctf_str_rollback_atom>
 6d8:	add	x1, x1, #0x0
 6dc:	ldr	x0, [x22, #368]
 6e0:	bl	0 <ctf_dynhash_iter>
 6e4:	ldr	x1, [sp, #120]
 6e8:	add	x1, x1, #0x1
 6ec:	str	x1, [sp, #120]
 6f0:	adrp	x0, 0 <ctf_str_rollback_atom>
 6f4:	add	x0, x0, #0x0
 6f8:	bl	0 <ctf_dprintf>
 6fc:	mov	x1, #0x8                   	// #8
 700:	ldr	x0, [sp, #80]
 704:	bl	0 <calloc>
 708:	mov	x20, x0
 70c:	cbz	x0, 8d4 <ctf_str_write_strtab+0x248>
 710:	str	x19, [x0]
 714:	mov	x0, #0x1                   	// #1
 718:	str	x0, [sp, #96]
 71c:	str	x20, [sp, #88]
 720:	add	x2, sp, #0x48
 724:	adrp	x1, 0 <ctf_str_rollback_atom>
 728:	add	x1, x1, #0x0
 72c:	ldr	x0, [x22, #368]
 730:	bl	0 <ctf_dynhash_iter>
 734:	adrp	x3, 0 <ctf_str_rollback_atom>
 738:	add	x3, x3, #0x0
 73c:	mov	x2, #0x8                   	// #8
 740:	ldr	x1, [sp, #80]
 744:	sub	x1, x1, #0x1
 748:	add	x0, x20, x2
 74c:	bl	0 <qsort>
 750:	ldr	x0, [sp, #120]
 754:	bl	0 <malloc>
 758:	str	x0, [sp, #112]
 75c:	cbz	x0, 8cc <ctf_str_write_strtab+0x240>
 760:	ldr	x0, [x22, #128]
 764:	cbz	x0, 7a0 <ctf_str_write_strtab+0x114>
 768:	ldr	x0, [sp, #80]
 76c:	cbz	x0, 8e0 <ctf_str_write_strtab+0x254>
 770:	stp	x23, x24, [sp, #48]
 774:	mov	w24, #0x0                   	// #0
 778:	mov	x19, #0x0                   	// #0
 77c:	mov	w21, #0x0                   	// #0
 780:	mov	w23, #0x1                   	// #1
 784:	b	820 <ctf_str_write_strtab+0x194>
 788:	adrp	x0, 0 <ctf_str_rollback_atom>
 78c:	add	x0, x0, #0x0
 790:	bl	0 <ctf_dprintf>
 794:	str	xzr, [sp, #112]
 798:	ldp	x0, x1, [sp, #112]
 79c:	b	89c <ctf_str_write_strtab+0x210>
 7a0:	mov	x3, #0x0                   	// #0
 7a4:	mov	x2, #0x0                   	// #0
 7a8:	adrp	x1, 0 <ctf_hash_eq_integer>
 7ac:	add	x1, x1, #0x0
 7b0:	adrp	x0, 0 <ctf_hash_integer>
 7b4:	add	x0, x0, #0x0
 7b8:	bl	0 <ctf_dynhash_create>
 7bc:	str	x0, [x22, #128]
 7c0:	cbz	x0, 8c0 <ctf_str_write_strtab+0x234>
 7c4:	b	768 <ctf_str_write_strtab+0xdc>
 7c8:	ldr	x1, [x1, #16]
 7cc:	cbz	x1, 7e0 <ctf_str_write_strtab+0x154>
 7d0:	ldr	x2, [x1, #16]
 7d4:	str	w21, [x2]
 7d8:	ldr	x1, [x1, #8]
 7dc:	cbnz	x1, 7d0 <ctf_str_write_strtab+0x144>
 7e0:	ldr	x0, [x20, x19, lsl #3]
 7e4:	str	w21, [x0, #24]
 7e8:	ldr	x0, [x20, x19, lsl #3]
 7ec:	ldr	x1, [x0]
 7f0:	ldr	x0, [sp, #112]
 7f4:	add	x0, x0, w21, uxtw
 7f8:	bl	0 <strcpy>
 7fc:	ldr	x0, [x20, x19, lsl #3]
 800:	ldr	x0, [x0]
 804:	bl	0 <strlen>
 808:	add	w21, w21, #0x1
 80c:	add	w21, w21, w0
 810:	add	x19, x19, #0x1
 814:	ldr	x0, [sp, #80]
 818:	cmp	x0, x19
 81c:	b.ls	870 <ctf_str_write_strtab+0x1e4>  // b.plast
 820:	ldr	x1, [x20, x19, lsl #3]
 824:	ldr	w2, [x1, #28]
 828:	cbz	w2, 7c8 <ctf_str_write_strtab+0x13c>
 82c:	ldr	x1, [x1, #16]
 830:	cbz	x1, 844 <ctf_str_write_strtab+0x1b8>
 834:	ldr	x0, [x1, #16]
 838:	str	w2, [x0]
 83c:	ldr	x1, [x1, #8]
 840:	cbnz	x1, 834 <ctf_str_write_strtab+0x1a8>
 844:	ldr	x0, [x20, x19, lsl #3]
 848:	ldr	x2, [x0]
 84c:	ldr	w1, [x0, #28]
 850:	ldr	x0, [x22, #128]
 854:	bl	0 <ctf_dynhash_insert>
 858:	tbnz	w0, #31, 8bc <ctf_str_write_strtab+0x230>
 85c:	ldr	x0, [x20, x19, lsl #3]
 860:	ldr	w1, [x0, #28]
 864:	str	w1, [x0, #24]
 868:	mov	w24, w23
 86c:	b	810 <ctf_str_write_strtab+0x184>
 870:	mov	x0, x20
 874:	bl	0 <free>
 878:	cbz	w24, 8a8 <ctf_str_write_strtab+0x21c>
 87c:	ldp	x23, x24, [sp, #48]
 880:	ldr	x0, [x22, #120]
 884:	bl	0 <ctf_dynhash_empty>
 888:	ldr	x0, [sp, #120]
 88c:	add	w0, w0, #0x1
 890:	str	w0, [x22, #384]
 894:	ldp	x0, x1, [sp, #112]
 898:	ldp	x19, x20, [sp, #16]
 89c:	ldp	x21, x22, [sp, #32]
 8a0:	ldp	x29, x30, [sp], #128
 8a4:	ret
 8a8:	ldp	x23, x24, [sp, #48]
 8ac:	ldr	x0, [x22, #128]
 8b0:	bl	0 <ctf_dynhash_destroy>
 8b4:	str	xzr, [x22, #128]
 8b8:	b	880 <ctf_str_write_strtab+0x1f4>
 8bc:	ldp	x23, x24, [sp, #48]
 8c0:	ldr	x0, [sp, #112]
 8c4:	bl	0 <free>
 8c8:	str	xzr, [sp, #112]
 8cc:	mov	x0, x20
 8d0:	bl	0 <free>
 8d4:	ldp	x0, x1, [sp, #112]
 8d8:	ldp	x19, x20, [sp, #16]
 8dc:	b	89c <ctf_str_write_strtab+0x210>
 8e0:	mov	x0, x20
 8e4:	bl	0 <free>
 8e8:	b	8ac <ctf_str_write_strtab+0x220>

ctf-subr.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_mmap>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	x5, x1
   c:	mov	w4, w2
  10:	mov	w3, #0x2                   	// #2
  14:	mov	w2, #0x1                   	// #1
  18:	mov	x1, x0
  1c:	mov	x0, #0x0                   	// #0
  20:	bl	0 <mmap>
  24:	cmn	x0, #0x1
  28:	csel	x0, x0, xzr, ne  // ne = any
  2c:	ldp	x29, x30, [sp], #16
  30:	ret

0000000000000034 <ctf_munmap>:
  34:	stp	x29, x30, [sp, #-16]!
  38:	mov	x29, sp
  3c:	bl	0 <munmap>
  40:	ldp	x29, x30, [sp], #16
  44:	ret

0000000000000048 <ctf_pread>:
  48:	stp	x29, x30, [sp, #-64]!
  4c:	mov	x29, sp
  50:	stp	x23, x24, [sp, #48]
  54:	cmp	x2, #0x0
  58:	b.le	108 <ctf_pread+0xc0>
  5c:	stp	x19, x20, [sp, #16]
  60:	stp	x21, x22, [sp, #32]
  64:	mov	w24, w0
  68:	mov	x20, x1
  6c:	mov	x19, x2
  70:	mov	x21, x3
  74:	bl	0 <__errno_location>
  78:	mov	x22, x0
  7c:	mov	x23, #0x0                   	// #0
  80:	b	ac <ctf_pread+0x64>
  84:	ldr	w1, [x22]
  88:	cmp	w1, #0x4
  8c:	b.eq	a4 <ctf_pread+0x5c>  // b.none
  90:	add	x23, x23, x0
  94:	cbz	x0, e0 <ctf_pread+0x98>
  98:	sub	x19, x19, x0
  9c:	add	x21, x21, x0
  a0:	add	x20, x20, x0
  a4:	cmp	x19, #0x0
  a8:	b.le	f0 <ctf_pread+0xa8>
  ac:	str	wzr, [x22]
  b0:	mov	x3, x21
  b4:	mov	x2, x19
  b8:	mov	x1, x20
  bc:	mov	w0, w24
  c0:	bl	0 <pread>
  c4:	tbz	x0, #63, 84 <ctf_pread+0x3c>
  c8:	ldr	w1, [x22]
  cc:	cmp	w1, #0x4
  d0:	b.eq	a4 <ctf_pread+0x5c>  // b.none
  d4:	ldp	x19, x20, [sp, #16]
  d8:	ldp	x21, x22, [sp, #32]
  dc:	b	fc <ctf_pread+0xb4>
  e0:	mov	x0, x23
  e4:	ldp	x19, x20, [sp, #16]
  e8:	ldp	x21, x22, [sp, #32]
  ec:	b	fc <ctf_pread+0xb4>
  f0:	ldp	x19, x20, [sp, #16]
  f4:	ldp	x21, x22, [sp, #32]
  f8:	mov	x0, x23
  fc:	ldp	x23, x24, [sp, #48]
 100:	ldp	x29, x30, [sp], #64
 104:	ret
 108:	mov	x23, #0x0                   	// #0
 10c:	b	f8 <ctf_pread+0xb0>

0000000000000110 <ctf_strerror>:
 110:	stp	x29, x30, [sp, #-16]!
 114:	mov	x29, sp
 118:	bl	0 <strerror>
 11c:	ldp	x29, x30, [sp], #16
 120:	ret

0000000000000124 <libctf_init_debug>:
 124:	adrp	x0, 0 <ctf_mmap>
 128:	ldr	w0, [x0]
 12c:	cbz	w0, 134 <libctf_init_debug+0x10>
 130:	ret
 134:	stp	x29, x30, [sp, #-16]!
 138:	mov	x29, sp
 13c:	adrp	x0, 0 <ctf_mmap>
 140:	add	x0, x0, #0x0
 144:	bl	0 <getenv>
 148:	adrp	x1, 0 <ctf_mmap>
 14c:	add	x2, x1, #0x0
 150:	cmp	x0, #0x0
 154:	cset	w0, ne  // ne = any
 158:	str	w0, [x2, #4]
 15c:	mov	w0, #0x1                   	// #1
 160:	str	w0, [x1]
 164:	ldp	x29, x30, [sp], #16
 168:	ret

000000000000016c <ctf_getdebug>:
 16c:	adrp	x0, 0 <ctf_mmap>
 170:	ldr	w0, [x0]
 174:	ret

0000000000000178 <ctf_dprintf>:
 178:	stp	x29, x30, [sp, #-288]!
 17c:	mov	x29, sp
 180:	str	x1, [sp, #232]
 184:	str	x2, [sp, #240]
 188:	str	x3, [sp, #248]
 18c:	str	x4, [sp, #256]
 190:	str	x5, [sp, #264]
 194:	str	x6, [sp, #272]
 198:	str	x7, [sp, #280]
 19c:	str	q0, [sp, #96]
 1a0:	str	q1, [sp, #112]
 1a4:	str	q2, [sp, #128]
 1a8:	str	q3, [sp, #144]
 1ac:	str	q4, [sp, #160]
 1b0:	str	q5, [sp, #176]
 1b4:	str	q6, [sp, #192]
 1b8:	str	q7, [sp, #208]
 1bc:	adrp	x1, 0 <ctf_mmap>
 1c0:	ldr	w1, [x1]
 1c4:	cbnz	w1, 1d0 <ctf_dprintf+0x58>
 1c8:	ldp	x29, x30, [sp], #288
 1cc:	ret
 1d0:	stp	x19, x20, [sp, #16]
 1d4:	mov	x19, x0
 1d8:	add	x0, sp, #0x120
 1dc:	str	x0, [sp, #64]
 1e0:	str	x0, [sp, #72]
 1e4:	add	x0, sp, #0xe0
 1e8:	str	x0, [sp, #80]
 1ec:	mov	w0, #0xffffffc8            	// #-56
 1f0:	str	w0, [sp, #88]
 1f4:	mov	w0, #0xffffff80            	// #-128
 1f8:	str	w0, [sp, #92]
 1fc:	adrp	x0, 0 <stdout>
 200:	ldr	x0, [x0]
 204:	bl	0 <fflush>
 208:	adrp	x20, 0 <stderr>
 20c:	ldr	x3, [x20]
 210:	mov	x2, #0xe                   	// #14
 214:	mov	x1, #0x1                   	// #1
 218:	adrp	x0, 0 <ctf_mmap>
 21c:	add	x0, x0, #0x0
 220:	bl	0 <fwrite>
 224:	ldp	x0, x1, [sp, #64]
 228:	stp	x0, x1, [sp, #32]
 22c:	ldp	x0, x1, [sp, #80]
 230:	stp	x0, x1, [sp, #48]
 234:	add	x2, sp, #0x20
 238:	mov	x1, x19
 23c:	ldr	x0, [x20]
 240:	bl	0 <vfprintf>
 244:	ldp	x19, x20, [sp, #16]
 248:	b	1c8 <ctf_dprintf+0x50>

000000000000024c <ctf_version>:
 24c:	stp	x29, x30, [sp, #-16]!
 250:	mov	x29, sp
 254:	tbnz	w0, #31, 294 <ctf_version+0x48>
 258:	cmp	w0, #0x0
 25c:	b.le	284 <ctf_version+0x38>
 260:	cmp	w0, #0x4
 264:	b.ne	2a8 <ctf_version+0x5c>  // b.any
 268:	mov	w1, #0x4                   	// #4
 26c:	adrp	x0, 0 <ctf_mmap>
 270:	add	x0, x0, #0x0
 274:	bl	178 <ctf_dprintf>
 278:	adrp	x0, 0 <ctf_mmap>
 27c:	mov	w1, #0x4                   	// #4
 280:	str	w1, [x0]
 284:	adrp	x0, 0 <ctf_mmap>
 288:	ldr	w0, [x0]
 28c:	ldp	x29, x30, [sp], #16
 290:	ret
 294:	bl	0 <__errno_location>
 298:	mov	w1, #0x16                  	// #22
 29c:	str	w1, [x0]
 2a0:	mov	w0, #0xffffffff            	// #-1
 2a4:	b	28c <ctf_version+0x40>
 2a8:	bl	0 <__errno_location>
 2ac:	mov	w1, #0x5f                  	// #95
 2b0:	str	w1, [x0]
 2b4:	mov	w0, #0xffffffff            	// #-1
 2b8:	b	28c <ctf_version+0x40>

00000000000002bc <ctf_setdebug>:
 2bc:	stp	x29, x30, [sp, #-32]!
 2c0:	mov	x29, sp
 2c4:	str	x19, [sp, #16]
 2c8:	mov	w19, w0
 2cc:	bl	124 <libctf_init_debug>
 2d0:	adrp	x0, 0 <ctf_mmap>
 2d4:	str	w19, [x0]
 2d8:	mov	w1, w19
 2dc:	adrp	x0, 0 <ctf_mmap>
 2e0:	add	x0, x0, #0x0
 2e4:	bl	178 <ctf_dprintf>
 2e8:	ldr	x19, [sp, #16]
 2ec:	ldp	x29, x30, [sp], #32
 2f0:	ret

ctf-types.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_type_isparent>:
       0:	ldr	w0, [x0, #544]
       4:	cmp	x0, x1
       8:	cset	w0, cs  // cs = hs, nlast
       c:	ret

0000000000000010 <ctf_type_ischild>:
      10:	ldr	w0, [x0, #544]
      14:	cmp	x0, x1
      18:	cset	w0, cc  // cc = lo, ul, last
      1c:	ret

0000000000000020 <ctf_type_iter>:
      20:	stp	x29, x30, [sp, #-64]!
      24:	mov	x29, sp
      28:	stp	x21, x22, [sp, #32]
      2c:	ldr	x21, [x0, #480]
      30:	ldr	w22, [x0, #552]
      34:	cbz	x21, f0 <ctf_type_iter+0xd0>
      38:	stp	x19, x20, [sp, #16]
      3c:	stp	x23, x24, [sp, #48]
      40:	mov	x20, x0
      44:	mov	x23, x1
      48:	mov	x24, x2
      4c:	and	w22, w22, #0x1
      50:	mov	x19, #0x1                   	// #1
      54:	b	84 <ctf_type_iter+0x64>
      58:	ldr	x0, [x20, #440]
      5c:	ldr	w1, [x0, x19, lsl #2]
      60:	ldr	x0, [x20, #408]
      64:	add	x0, x0, x1
      68:	b	ac <ctf_type_iter+0x8c>
      6c:	mov	x1, x24
      70:	blr	x23
      74:	cbnz	w0, f8 <ctf_type_iter+0xd8>
      78:	add	x19, x19, #0x1
      7c:	cmp	x21, x19
      80:	b.cc	d8 <ctf_type_iter+0xb8>  // b.lo, b.ul, b.last
      84:	ldr	w0, [x20, #552]
      88:	tbz	w0, #1, 58 <ctf_type_iter+0x38>
      8c:	mov	x1, x19
      90:	tbz	w0, #0, a0 <ctf_type_iter+0x80>
      94:	ldr	w1, [x20, #544]
      98:	add	w1, w1, #0x1
      9c:	orr	x1, x1, x19
      a0:	mov	x0, x20
      a4:	bl	0 <ctf_dtd_lookup>
      a8:	add	x0, x0, #0x18
      ac:	ldr	x1, [x20]
      b0:	ldr	x1, [x1, #8]
      b4:	ldr	w0, [x0, #4]
      b8:	blr	x1
      bc:	cbz	w0, 78 <ctf_type_iter+0x58>
      c0:	mov	x0, x19
      c4:	cbz	w22, 6c <ctf_type_iter+0x4c>
      c8:	ldr	w0, [x20, #544]
      cc:	add	w0, w0, #0x1
      d0:	orr	x0, x0, x19
      d4:	b	6c <ctf_type_iter+0x4c>
      d8:	mov	w0, #0x0                   	// #0
      dc:	ldp	x19, x20, [sp, #16]
      e0:	ldp	x23, x24, [sp, #48]
      e4:	ldp	x21, x22, [sp, #32]
      e8:	ldp	x29, x30, [sp], #64
      ec:	ret
      f0:	mov	w0, #0x0                   	// #0
      f4:	b	e4 <ctf_type_iter+0xc4>
      f8:	ldp	x19, x20, [sp, #16]
      fc:	ldp	x23, x24, [sp, #48]
     100:	b	e4 <ctf_type_iter+0xc4>

0000000000000104 <ctf_type_iter_all>:
     104:	stp	x29, x30, [sp, #-80]!
     108:	mov	x29, sp
     10c:	stp	x21, x22, [sp, #32]
     110:	str	x25, [sp, #64]
     114:	ldr	x25, [x0, #480]
     118:	ldr	w22, [x0, #552]
     11c:	cbz	x25, 1d4 <ctf_type_iter_all+0xd0>
     120:	stp	x19, x20, [sp, #16]
     124:	stp	x23, x24, [sp, #48]
     128:	mov	x20, x0
     12c:	mov	x23, x1
     130:	mov	x24, x2
     134:	and	w22, w22, #0x1
     138:	mov	x19, #0x1                   	// #1
     13c:	b	194 <ctf_type_iter_all+0x90>
     140:	mov	x0, x20
     144:	bl	0 <ctf_dtd_lookup>
     148:	add	x0, x0, #0x18
     14c:	mov	x21, x19
     150:	cbz	w22, 160 <ctf_type_iter_all+0x5c>
     154:	ldr	w21, [x20, #544]
     158:	add	w21, w21, #0x1
     15c:	orr	x21, x21, x19
     160:	ldr	x1, [x20]
     164:	ldr	x1, [x1, #8]
     168:	ldr	w0, [x0, #4]
     16c:	blr	x1
     170:	cmp	w0, #0x0
     174:	mov	x2, x24
     178:	cset	w1, ne  // ne = any
     17c:	mov	x0, x21
     180:	blr	x23
     184:	cbnz	w0, 1dc <ctf_type_iter_all+0xd8>
     188:	add	x19, x19, #0x1
     18c:	cmp	x25, x19
     190:	b.cc	1c8 <ctf_type_iter_all+0xc4>  // b.lo, b.ul, b.last
     194:	ldr	w0, [x20, #552]
     198:	tbz	w0, #1, 1b4 <ctf_type_iter_all+0xb0>
     19c:	mov	x1, x19
     1a0:	tbz	w0, #0, 140 <ctf_type_iter_all+0x3c>
     1a4:	ldr	w1, [x20, #544]
     1a8:	add	w1, w1, #0x1
     1ac:	orr	x1, x1, x19
     1b0:	b	140 <ctf_type_iter_all+0x3c>
     1b4:	ldr	x0, [x20, #440]
     1b8:	ldr	w1, [x0, x19, lsl #2]
     1bc:	ldr	x0, [x20, #408]
     1c0:	add	x0, x0, x1
     1c4:	b	14c <ctf_type_iter_all+0x48>
     1c8:	ldp	x19, x20, [sp, #16]
     1cc:	ldp	x23, x24, [sp, #48]
     1d0:	b	1e8 <ctf_type_iter_all+0xe4>
     1d4:	mov	w0, #0x0                   	// #0
     1d8:	b	1e8 <ctf_type_iter_all+0xe4>
     1dc:	mov	w0, #0x1                   	// #1
     1e0:	ldp	x19, x20, [sp, #16]
     1e4:	ldp	x23, x24, [sp, #48]
     1e8:	ldp	x21, x22, [sp, #32]
     1ec:	ldr	x25, [sp, #64]
     1f0:	ldp	x29, x30, [sp], #80
     1f4:	ret

00000000000001f8 <ctf_variable_iter>:
     1f8:	stp	x29, x30, [sp, #-64]!
     1fc:	mov	x29, sp
     200:	stp	x19, x20, [sp, #16]
     204:	stp	x21, x22, [sp, #32]
     208:	mov	x19, x0
     20c:	mov	x21, x1
     210:	mov	x22, x2
     214:	ldr	w0, [x0, #552]
     218:	tbz	w0, #0, 224 <ctf_variable_iter+0x2c>
     21c:	ldr	x1, [x19, #512]
     220:	cbz	x1, 2a4 <ctf_variable_iter+0xac>
     224:	tbnz	w0, #1, 27c <ctf_variable_iter+0x84>
     228:	ldr	x0, [x19, #472]
     22c:	cbz	x0, 2ac <ctf_variable_iter+0xb4>
     230:	str	x23, [sp, #48]
     234:	mov	x23, #0x0                   	// #0
     238:	lsl	x20, x23, #3
     23c:	ldr	x0, [x19, #464]
     240:	ldr	w1, [x0, x20]
     244:	mov	x0, x19
     248:	bl	0 <ctf_strptr>
     24c:	ldr	x1, [x19, #464]
     250:	add	x20, x1, x20
     254:	mov	x2, x22
     258:	ldr	w1, [x20, #4]
     25c:	blr	x21
     260:	cbnz	w0, 2bc <ctf_variable_iter+0xc4>
     264:	add	x23, x23, #0x1
     268:	ldr	x1, [x19, #472]
     26c:	cmp	x1, x23
     270:	b.hi	238 <ctf_variable_iter+0x40>  // b.pmore
     274:	ldr	x23, [sp, #48]
     278:	b	2c0 <ctf_variable_iter+0xc8>
     27c:	ldr	x19, [x19, #608]
     280:	cbz	x19, 2b4 <ctf_variable_iter+0xbc>
     284:	mov	x2, x22
     288:	ldr	x1, [x19, #24]
     28c:	ldr	x0, [x19, #16]
     290:	blr	x21
     294:	cbnz	w0, 2c0 <ctf_variable_iter+0xc8>
     298:	ldr	x19, [x19, #8]
     29c:	cbnz	x19, 284 <ctf_variable_iter+0x8c>
     2a0:	b	2c0 <ctf_variable_iter+0xc8>
     2a4:	mov	w0, #0x3f3                 	// #1011
     2a8:	b	2c0 <ctf_variable_iter+0xc8>
     2ac:	mov	w0, #0x0                   	// #0
     2b0:	b	2c0 <ctf_variable_iter+0xc8>
     2b4:	mov	w0, #0x0                   	// #0
     2b8:	b	2c0 <ctf_variable_iter+0xc8>
     2bc:	ldr	x23, [sp, #48]
     2c0:	ldp	x19, x20, [sp, #16]
     2c4:	ldp	x21, x22, [sp, #32]
     2c8:	ldp	x29, x30, [sp], #64
     2cc:	ret

00000000000002d0 <ctf_type_resolve>:
     2d0:	stp	x29, x30, [sp, #-80]!
     2d4:	mov	x29, sp
     2d8:	stp	x19, x20, [sp, #16]
     2dc:	stp	x21, x22, [sp, #32]
     2e0:	str	x23, [sp, #48]
     2e4:	str	x0, [sp, #72]
     2e8:	mov	x22, x1
     2ec:	mov	x23, x0
     2f0:	mov	x21, x1
     2f4:	mov	x20, x1
     2f8:	cbz	x1, 354 <ctf_type_resolve+0x84>
     2fc:	mov	x1, x20
     300:	add	x0, sp, #0x48
     304:	bl	0 <ctf_lookup_by_id>
     308:	mov	x19, x0
     30c:	cbz	x0, 3b0 <ctf_type_resolve+0xe0>
     310:	ldr	x0, [sp, #72]
     314:	ldr	x0, [x0]
     318:	ldr	x2, [x0]
     31c:	ldr	w0, [x19, #4]
     320:	blr	x2
     324:	sub	w0, w0, #0xa
     328:	cmp	w0, #0x3
     32c:	b.hi	384 <ctf_type_resolve+0xb4>  // b.pmore
     330:	ldr	w2, [x19, #8]
     334:	cmp	x2, x22
     338:	ccmp	x2, x20, #0x4, ne  // ne = any
     33c:	ccmp	x2, x21, #0x4, ne  // ne = any
     340:	b.eq	364 <ctf_type_resolve+0x94>  // b.none
     344:	mov	x21, x20
     348:	cbz	x2, 39c <ctf_type_resolve+0xcc>
     34c:	mov	x20, x2
     350:	b	2fc <ctf_type_resolve+0x2c>
     354:	mov	w1, #0x41b                 	// #1051
     358:	bl	0 <ctf_set_errno>
     35c:	mov	x20, x0
     360:	b	384 <ctf_type_resolve+0xb4>
     364:	mov	x1, x22
     368:	adrp	x0, 0 <ctf_type_isparent>
     36c:	add	x0, x0, #0x0
     370:	bl	0 <ctf_dprintf>
     374:	mov	w1, #0x3ef                 	// #1007
     378:	mov	x0, x23
     37c:	bl	0 <ctf_set_errno>
     380:	mov	x20, x0
     384:	mov	x0, x20
     388:	ldp	x19, x20, [sp, #16]
     38c:	ldp	x21, x22, [sp, #32]
     390:	ldr	x23, [sp, #48]
     394:	ldp	x29, x30, [sp], #80
     398:	ret
     39c:	mov	w1, #0x41b                 	// #1051
     3a0:	mov	x0, x23
     3a4:	bl	0 <ctf_set_errno>
     3a8:	mov	x20, x0
     3ac:	b	384 <ctf_type_resolve+0xb4>
     3b0:	mov	x20, #0xffffffffffffffff    	// #-1
     3b4:	b	384 <ctf_type_resolve+0xb4>

00000000000003b8 <ctf_member_iter>:
     3b8:	stp	x29, x30, [sp, #-96]!
     3bc:	mov	x29, sp
     3c0:	stp	x19, x20, [sp, #16]
     3c4:	stp	x21, x22, [sp, #32]
     3c8:	str	x23, [sp, #48]
     3cc:	str	x0, [sp, #72]
     3d0:	mov	x20, x2
     3d4:	mov	x21, x3
     3d8:	mov	x23, x0
     3dc:	bl	2d0 <ctf_type_resolve>
     3e0:	cmn	x0, #0x1
     3e4:	b.eq	574 <ctf_member_iter+0x1bc>  // b.none
     3e8:	mov	x22, x0
     3ec:	mov	x1, x0
     3f0:	add	x0, sp, #0x48
     3f4:	bl	0 <ctf_lookup_by_id>
     3f8:	mov	x19, x0
     3fc:	cbz	x0, 57c <ctf_member_iter+0x1c4>
     400:	ldr	x0, [sp, #72]
     404:	ldr	x1, [x0]
     408:	ldr	x4, [x1, #24]
     40c:	add	x3, sp, #0x50
     410:	add	x2, sp, #0x58
     414:	mov	x1, x19
     418:	blr	x4
     41c:	ldr	x0, [sp, #72]
     420:	ldr	x0, [x0]
     424:	ldr	x1, [x0]
     428:	ldr	w0, [x19, #4]
     42c:	blr	x1
     430:	sub	w1, w0, #0x6
     434:	cmp	w1, #0x1
     438:	b.hi	478 <ctf_member_iter+0xc0>  // b.pmore
     43c:	mov	x1, x22
     440:	ldr	x0, [sp, #72]
     444:	bl	0 <ctf_dynamic_type>
     448:	cbz	x0, 498 <ctf_member_iter+0xe0>
     44c:	ldr	x19, [x0, #56]
     450:	cbz	x19, 594 <ctf_member_iter+0x1dc>
     454:	mov	x3, x21
     458:	ldr	x2, [x19, #32]
     45c:	ldr	x1, [x19, #24]
     460:	ldr	x0, [x19, #16]
     464:	blr	x20
     468:	cbnz	w0, 484 <ctf_member_iter+0xcc>
     46c:	ldr	x19, [x19, #8]
     470:	cbnz	x19, 454 <ctf_member_iter+0x9c>
     474:	b	484 <ctf_member_iter+0xcc>
     478:	mov	w1, #0x3fb                 	// #1019
     47c:	mov	x0, x23
     480:	bl	0 <ctf_set_errno>
     484:	ldp	x19, x20, [sp, #16]
     488:	ldp	x21, x22, [sp, #32]
     48c:	ldr	x23, [sp, #48]
     490:	ldp	x29, x30, [sp], #96
     494:	ret
     498:	ldr	x1, [sp, #88]
     49c:	mov	x0, #0x1fffffff            	// #536870911
     4a0:	cmp	x1, x0
     4a4:	b.gt	50c <ctf_member_iter+0x154>
     4a8:	ldr	x23, [sp, #80]
     4ac:	add	x23, x19, x23
     4b0:	mov	x22, x23
     4b4:	ldr	x0, [sp, #72]
     4b8:	ldr	x0, [x0]
     4bc:	ldr	x1, [x0, #16]
     4c0:	ldr	w0, [x19, #4]
     4c4:	blr	x1
     4c8:	cbz	w0, 584 <ctf_member_iter+0x1cc>
     4cc:	sub	w0, w0, #0x1
     4d0:	add	x0, x0, x0, lsl #1
     4d4:	add	x19, x23, #0xc
     4d8:	add	x19, x19, x0, lsl #2
     4dc:	ldr	w1, [x22]
     4e0:	ldr	x0, [sp, #72]
     4e4:	bl	0 <ctf_strptr>
     4e8:	mov	x3, x21
     4ec:	ldr	w2, [x22, #4]
     4f0:	ldr	w1, [x22, #8]
     4f4:	blr	x20
     4f8:	cbnz	w0, 484 <ctf_member_iter+0xcc>
     4fc:	add	x22, x22, #0xc
     500:	cmp	x22, x19
     504:	b.ne	4dc <ctf_member_iter+0x124>  // b.any
     508:	b	484 <ctf_member_iter+0xcc>
     50c:	ldr	x23, [sp, #80]
     510:	add	x23, x19, x23
     514:	mov	x22, x23
     518:	ldr	x0, [sp, #72]
     51c:	ldr	x0, [x0]
     520:	ldr	x1, [x0, #16]
     524:	ldr	w0, [x19, #4]
     528:	blr	x1
     52c:	cbz	w0, 58c <ctf_member_iter+0x1d4>
     530:	sub	w0, w0, #0x1
     534:	add	x19, x23, #0x10
     538:	add	x19, x19, x0, lsl #4
     53c:	ldr	w1, [x22]
     540:	ldr	x0, [sp, #72]
     544:	bl	0 <ctf_strptr>
     548:	ldr	w2, [x22, #4]
     54c:	ldr	w1, [x22, #12]
     550:	mov	x3, x21
     554:	orr	x2, x1, x2, lsl #32
     558:	ldr	w1, [x22, #8]
     55c:	blr	x20
     560:	cbnz	w0, 484 <ctf_member_iter+0xcc>
     564:	add	x22, x22, #0x10
     568:	cmp	x22, x19
     56c:	b.ne	53c <ctf_member_iter+0x184>  // b.any
     570:	b	484 <ctf_member_iter+0xcc>
     574:	mov	w0, #0xffffffff            	// #-1
     578:	b	484 <ctf_member_iter+0xcc>
     57c:	mov	w0, #0xffffffff            	// #-1
     580:	b	484 <ctf_member_iter+0xcc>
     584:	mov	w0, #0x0                   	// #0
     588:	b	484 <ctf_member_iter+0xcc>
     58c:	mov	w0, #0x0                   	// #0
     590:	b	484 <ctf_member_iter+0xcc>
     594:	mov	w0, #0x0                   	// #0
     598:	b	484 <ctf_member_iter+0xcc>

000000000000059c <ctf_type_rvisit>:
     59c:	stp	x29, x30, [sp, #-112]!
     5a0:	mov	x29, sp
     5a4:	stp	x19, x20, [sp, #16]
     5a8:	stp	x21, x22, [sp, #32]
     5ac:	stp	x23, x24, [sp, #48]
     5b0:	stp	x25, x26, [sp, #64]
     5b4:	str	x0, [sp, #88]
     5b8:	mov	x26, x1
     5bc:	mov	x22, x2
     5c0:	mov	x23, x3
     5c4:	mov	x19, x4
     5c8:	mov	x25, x5
     5cc:	mov	w21, w6
     5d0:	bl	2d0 <ctf_type_resolve>
     5d4:	cmn	x0, #0x1
     5d8:	b.eq	7dc <ctf_type_rvisit+0x240>  // b.none
     5dc:	mov	x20, x0
     5e0:	mov	x1, x0
     5e4:	add	x0, sp, #0x58
     5e8:	bl	0 <ctf_lookup_by_id>
     5ec:	mov	x24, x0
     5f0:	cbz	x0, 7e4 <ctf_type_rvisit+0x248>
     5f4:	mov	x4, x23
     5f8:	mov	w3, w21
     5fc:	mov	x2, x25
     600:	mov	x1, x26
     604:	mov	x0, x19
     608:	blr	x22
     60c:	mov	w19, w0
     610:	cbnz	w0, 69c <ctf_type_rvisit+0x100>
     614:	ldr	x0, [sp, #88]
     618:	ldr	x0, [x0]
     61c:	ldr	x1, [x0]
     620:	ldr	w0, [x24, #4]
     624:	blr	x1
     628:	sub	w0, w0, #0x6
     62c:	cmp	w0, #0x1
     630:	b.hi	69c <ctf_type_rvisit+0x100>  // b.pmore
     634:	ldr	x0, [sp, #88]
     638:	ldr	x1, [x0]
     63c:	ldr	x4, [x1, #24]
     640:	add	x3, sp, #0x60
     644:	add	x2, sp, #0x68
     648:	mov	x1, x24
     64c:	blr	x4
     650:	mov	x1, x20
     654:	ldr	x0, [sp, #88]
     658:	bl	0 <ctf_dynamic_type>
     65c:	cbz	x0, 6b8 <ctf_type_rvisit+0x11c>
     660:	ldr	x20, [x0, #56]
     664:	cbz	x20, 69c <ctf_type_rvisit+0x100>
     668:	add	w21, w21, #0x1
     66c:	mov	w6, w21
     670:	ldr	x5, [x20, #32]
     674:	ldr	x4, [x20, #16]
     678:	mov	x3, x23
     67c:	mov	x2, x22
     680:	ldr	x1, [x20, #24]
     684:	ldr	x0, [sp, #88]
     688:	bl	59c <ctf_type_rvisit>
     68c:	mov	w19, w0
     690:	cbnz	w0, 69c <ctf_type_rvisit+0x100>
     694:	ldr	x20, [x20, #8]
     698:	cbnz	x20, 66c <ctf_type_rvisit+0xd0>
     69c:	mov	w0, w19
     6a0:	ldp	x19, x20, [sp, #16]
     6a4:	ldp	x21, x22, [sp, #32]
     6a8:	ldp	x23, x24, [sp, #48]
     6ac:	ldp	x25, x26, [sp, #64]
     6b0:	ldp	x29, x30, [sp], #112
     6b4:	ret
     6b8:	ldr	x1, [sp, #104]
     6bc:	mov	x0, #0x1fffffff            	// #536870911
     6c0:	cmp	x1, x0
     6c4:	b.gt	750 <ctf_type_rvisit+0x1b4>
     6c8:	ldr	x26, [sp, #96]
     6cc:	add	x26, x24, x26
     6d0:	mov	x20, x26
     6d4:	ldr	x0, [sp, #88]
     6d8:	ldr	x0, [x0]
     6dc:	ldr	x1, [x0, #16]
     6e0:	ldr	w0, [x24, #4]
     6e4:	blr	x1
     6e8:	cbz	w0, 69c <ctf_type_rvisit+0x100>
     6ec:	sub	w0, w0, #0x1
     6f0:	add	x0, x0, x0, lsl #1
     6f4:	add	x24, x26, #0xc
     6f8:	add	x24, x24, x0, lsl #2
     6fc:	add	w21, w21, #0x1
     700:	ldr	x19, [sp, #88]
     704:	ldr	w26, [x20, #8]
     708:	ldr	w1, [x20]
     70c:	mov	x0, x19
     710:	bl	0 <ctf_strptr>
     714:	ldr	w5, [x20, #4]
     718:	mov	w6, w21
     71c:	add	x5, x5, x25
     720:	mov	x4, x0
     724:	mov	x3, x23
     728:	mov	x2, x22
     72c:	mov	x1, x26
     730:	mov	x0, x19
     734:	bl	59c <ctf_type_rvisit>
     738:	mov	w19, w0
     73c:	cbnz	w0, 69c <ctf_type_rvisit+0x100>
     740:	add	x20, x20, #0xc
     744:	cmp	x20, x24
     748:	b.ne	700 <ctf_type_rvisit+0x164>  // b.any
     74c:	b	69c <ctf_type_rvisit+0x100>
     750:	ldr	x26, [sp, #96]
     754:	add	x26, x24, x26
     758:	mov	x20, x26
     75c:	ldr	x0, [sp, #88]
     760:	ldr	x0, [x0]
     764:	ldr	x1, [x0, #16]
     768:	ldr	w0, [x24, #4]
     76c:	blr	x1
     770:	cbz	w0, 69c <ctf_type_rvisit+0x100>
     774:	sub	w0, w0, #0x1
     778:	add	x24, x26, #0x10
     77c:	add	x24, x24, x0, lsl #4
     780:	add	w21, w21, #0x1
     784:	ldr	x19, [sp, #88]
     788:	ldr	w26, [x20, #8]
     78c:	ldr	w1, [x20]
     790:	mov	x0, x19
     794:	bl	0 <ctf_strptr>
     798:	ldr	w5, [x20, #4]
     79c:	ldr	w1, [x20, #12]
     7a0:	orr	x5, x1, x5, lsl #32
     7a4:	mov	w6, w21
     7a8:	add	x5, x5, x25
     7ac:	mov	x4, x0
     7b0:	mov	x3, x23
     7b4:	mov	x2, x22
     7b8:	mov	x1, x26
     7bc:	mov	x0, x19
     7c0:	bl	59c <ctf_type_rvisit>
     7c4:	mov	w19, w0
     7c8:	cbnz	w0, 69c <ctf_type_rvisit+0x100>
     7cc:	add	x20, x20, #0x10
     7d0:	cmp	x20, x24
     7d4:	b.ne	784 <ctf_type_rvisit+0x1e8>  // b.any
     7d8:	b	69c <ctf_type_rvisit+0x100>
     7dc:	mov	w19, #0xffffffff            	// #-1
     7e0:	b	69c <ctf_type_rvisit+0x100>
     7e4:	mov	w19, #0xffffffff            	// #-1
     7e8:	b	69c <ctf_type_rvisit+0x100>

00000000000007ec <ctf_lookup_by_rawhash>:
     7ec:	stp	x29, x30, [sp, #-16]!
     7f0:	mov	x29, sp
     7f4:	mov	x3, x1
     7f8:	ldr	w1, [x0, #552]
     7fc:	tbz	w1, #1, 814 <ctf_lookup_by_rawhash+0x28>
     800:	mov	x1, x2
     804:	ldr	x0, [x3, #8]
     808:	bl	0 <ctf_dynhash_lookup>
     80c:	ldp	x29, x30, [sp], #16
     810:	ret
     814:	mov	x1, x0
     818:	ldr	x0, [x3]
     81c:	bl	0 <ctf_hash_lookup_type>
     820:	b	80c <ctf_lookup_by_rawhash+0x20>

0000000000000824 <ctf_lookup_by_rawname>:
     824:	stp	x29, x30, [sp, #-32]!
     828:	mov	x29, sp
     82c:	stp	x19, x20, [sp, #16]
     830:	mov	x19, x0
     834:	mov	x20, x2
     838:	bl	0 <ctf_name_table>
     83c:	mov	x2, x20
     840:	mov	x1, x0
     844:	mov	x0, x19
     848:	bl	7ec <ctf_lookup_by_rawhash>
     84c:	ldp	x19, x20, [sp, #16]
     850:	ldp	x29, x30, [sp], #32
     854:	ret

0000000000000858 <ctf_type_aname>:
     858:	stp	x29, x30, [sp, #-208]!
     85c:	mov	x29, sp
     860:	stp	x19, x20, [sp, #16]
     864:	cmp	x0, #0x0
     868:	ccmn	x1, #0x1, #0x0, eq  // eq = none
     86c:	mov	x19, #0x0                   	// #0
     870:	b.eq	b54 <ctf_type_aname+0x2fc>  // b.none
     874:	stp	x21, x22, [sp, #32]
     878:	mov	x22, x0
     87c:	mov	x19, x1
     880:	add	x0, sp, #0x68
     884:	bl	0 <ctf_decl_init>
     888:	mov	x2, x19
     88c:	mov	x1, x22
     890:	add	x0, sp, #0x68
     894:	bl	0 <ctf_decl_push>
     898:	ldr	w0, [sp, #200]
     89c:	cbnz	w0, 8d0 <ctf_type_aname+0x78>
     8a0:	stp	x23, x24, [sp, #48]
     8a4:	stp	x25, x26, [sp, #64]
     8a8:	stp	x27, x28, [sp, #80]
     8ac:	ldr	w1, [sp, #172]
     8b0:	ldr	w0, [sp, #176]
     8b4:	cmp	w0, #0x2
     8b8:	b.gt	8f0 <ctf_type_aname+0x98>
     8bc:	cmp	w1, #0x1
     8c0:	b.le	918 <ctf_type_aname+0xc0>
     8c4:	mov	w27, #0x1                   	// #1
     8c8:	mov	w23, w27
     8cc:	b	900 <ctf_type_aname+0xa8>
     8d0:	add	x0, sp, #0x68
     8d4:	bl	0 <ctf_decl_fini>
     8d8:	ldr	w1, [sp, #200]
     8dc:	mov	x0, x22
     8e0:	bl	0 <ctf_set_errno>
     8e4:	mov	x19, #0x0                   	// #0
     8e8:	ldp	x21, x22, [sp, #32]
     8ec:	b	b54 <ctf_type_aname+0x2fc>
     8f0:	cmp	w1, #0x1
     8f4:	b.le	924 <ctf_type_aname+0xcc>
     8f8:	mov	w27, #0x2                   	// #2
     8fc:	mov	w23, #0x1                   	// #1
     900:	add	x25, sp, #0x70
     904:	mov	w28, #0x3                   	// #3
     908:	mov	w21, #0x0                   	// #0
     90c:	adrp	x24, 0 <ctf_type_isparent>
     910:	add	x24, x24, #0x0
     914:	b	b04 <ctf_type_aname+0x2ac>
     918:	mov	w27, #0xffffffff            	// #-1
     91c:	mov	w23, w27
     920:	b	900 <ctf_type_aname+0xa8>
     924:	mov	w27, #0x2                   	// #2
     928:	mov	w23, w27
     92c:	b	900 <ctf_type_aname+0xa8>
     930:	mov	x1, x24
     934:	add	x0, sp, #0x68
     938:	bl	0 <ctf_decl_sprintf>
     93c:	b	9f4 <ctf_type_aname+0x19c>
     940:	add	x1, x26, #0x0
     944:	add	x0, sp, #0x68
     948:	bl	0 <ctf_decl_sprintf>
     94c:	mov	w23, #0xffffffff            	// #-1
     950:	b	9fc <ctf_type_aname+0x1a4>
     954:	sub	w1, w1, #0x1
     958:	cmp	w1, #0x1
     95c:	b.ls	a54 <ctf_type_aname+0x1fc>  // b.plast
     960:	b	9bc <ctf_type_aname+0x164>
     964:	cmp	w1, #0x6
     968:	b.eq	a94 <ctf_type_aname+0x23c>  // b.none
     96c:	mov	x2, x20
     970:	adrp	x1, 0 <ctf_type_isparent>
     974:	add	x1, x1, #0x0
     978:	add	x0, sp, #0x68
     97c:	bl	0 <ctf_decl_sprintf>
     980:	b	9bc <ctf_type_aname+0x164>
     984:	cmp	w1, #0xc
     988:	b.eq	ad8 <ctf_type_aname+0x280>  // b.none
     98c:	b.ls	9ac <ctf_type_aname+0x154>  // b.plast
     990:	cmp	w1, #0xd
     994:	b.ne	9bc <ctf_type_aname+0x164>  // b.any
     998:	adrp	x1, 0 <ctf_type_isparent>
     99c:	add	x1, x1, #0x0
     9a0:	add	x0, sp, #0x68
     9a4:	bl	0 <ctf_decl_sprintf>
     9a8:	b	9bc <ctf_type_aname+0x164>
     9ac:	cmp	w1, #0xb
     9b0:	b.eq	ac4 <ctf_type_aname+0x26c>  // b.none
     9b4:	cmp	w1, #0xc
     9b8:	b.ne	a44 <ctf_type_aname+0x1ec>  // b.any
     9bc:	ldr	w28, [x19, #24]
     9c0:	ldr	x19, [x19, #8]
     9c4:	cbz	x19, aec <ctf_type_aname+0x294>
     9c8:	str	x22, [sp, #96]
     9cc:	ldr	x1, [x19, #16]
     9d0:	add	x0, sp, #0x60
     9d4:	bl	0 <ctf_lookup_by_id>
     9d8:	ldr	w1, [x0]
     9dc:	ldr	x0, [sp, #96]
     9e0:	bl	0 <ctf_strptr>
     9e4:	mov	x20, x0
     9e8:	sub	w28, w28, #0x3
     9ec:	cmp	w28, #0x1
     9f0:	b.hi	930 <ctf_type_aname+0xd8>  // b.pmore
     9f4:	cmp	w21, w23
     9f8:	b.eq	940 <ctf_type_aname+0xe8>  // b.none
     9fc:	ldr	w1, [x19, #24]
     a00:	cmp	w1, #0x8
     a04:	b.eq	aac <ctf_type_aname+0x254>  // b.none
     a08:	b.hi	984 <ctf_type_aname+0x12c>  // b.pmore
     a0c:	cmp	w1, #0x5
     a10:	b.eq	a80 <ctf_type_aname+0x228>  // b.none
     a14:	b.hi	964 <ctf_type_aname+0x10c>  // b.pmore
     a18:	cmp	w1, #0x3
     a1c:	b.eq	a6c <ctf_type_aname+0x214>  // b.none
     a20:	b.ls	954 <ctf_type_aname+0xfc>  // b.plast
     a24:	cmp	w1, #0x4
     a28:	b.ne	9bc <ctf_type_aname+0x164>  // b.any
     a2c:	ldr	w2, [x19, #28]
     a30:	adrp	x1, 0 <ctf_type_isparent>
     a34:	add	x1, x1, #0x0
     a38:	add	x0, sp, #0x68
     a3c:	bl	0 <ctf_decl_sprintf>
     a40:	b	9bc <ctf_type_aname+0x164>
     a44:	cmp	w1, #0x9
     a48:	b.eq	a94 <ctf_type_aname+0x23c>  // b.none
     a4c:	cmp	w1, #0xa
     a50:	b.ne	9bc <ctf_type_aname+0x164>  // b.any
     a54:	mov	x2, x20
     a58:	adrp	x1, 0 <ctf_type_isparent>
     a5c:	add	x1, x1, #0x0
     a60:	add	x0, sp, #0x68
     a64:	bl	0 <ctf_decl_sprintf>
     a68:	b	9bc <ctf_type_aname+0x164>
     a6c:	adrp	x1, 0 <ctf_type_isparent>
     a70:	add	x1, x1, #0x0
     a74:	add	x0, sp, #0x68
     a78:	bl	0 <ctf_decl_sprintf>
     a7c:	b	9bc <ctf_type_aname+0x164>
     a80:	adrp	x1, 0 <ctf_type_isparent>
     a84:	add	x1, x1, #0x0
     a88:	add	x0, sp, #0x68
     a8c:	bl	0 <ctf_decl_sprintf>
     a90:	b	9bc <ctf_type_aname+0x164>
     a94:	mov	x2, x20
     a98:	adrp	x1, 0 <ctf_type_isparent>
     a9c:	add	x1, x1, #0x0
     aa0:	add	x0, sp, #0x68
     aa4:	bl	0 <ctf_decl_sprintf>
     aa8:	b	9bc <ctf_type_aname+0x164>
     aac:	mov	x2, x20
     ab0:	adrp	x1, 0 <ctf_type_isparent>
     ab4:	add	x1, x1, #0x0
     ab8:	add	x0, sp, #0x68
     abc:	bl	0 <ctf_decl_sprintf>
     ac0:	b	9bc <ctf_type_aname+0x164>
     ac4:	adrp	x1, 0 <ctf_type_isparent>
     ac8:	add	x1, x1, #0x0
     acc:	add	x0, sp, #0x68
     ad0:	bl	0 <ctf_decl_sprintf>
     ad4:	b	9bc <ctf_type_aname+0x164>
     ad8:	adrp	x1, 0 <ctf_type_isparent>
     adc:	add	x1, x1, #0x0
     ae0:	add	x0, sp, #0x68
     ae4:	bl	0 <ctf_decl_sprintf>
     ae8:	b	9bc <ctf_type_aname+0x164>
     aec:	cmp	w27, w21
     af0:	b.eq	b14 <ctf_type_aname+0x2bc>  // b.none
     af4:	add	w21, w21, #0x1
     af8:	add	x25, x25, #0x10
     afc:	cmp	w21, #0x4
     b00:	b.eq	b28 <ctf_type_aname+0x2d0>  // b.none
     b04:	ldr	x19, [x25]
     b08:	cbz	x19, aec <ctf_type_aname+0x294>
     b0c:	adrp	x26, 0 <ctf_type_isparent>
     b10:	b	9c8 <ctf_type_aname+0x170>
     b14:	adrp	x1, 0 <ctf_type_isparent>
     b18:	add	x1, x1, #0x0
     b1c:	add	x0, sp, #0x68
     b20:	bl	0 <ctf_decl_sprintf>
     b24:	b	af4 <ctf_type_aname+0x29c>
     b28:	ldr	w0, [sp, #204]
     b2c:	cbnz	w0, b64 <ctf_type_aname+0x30c>
     b30:	add	x0, sp, #0x68
     b34:	bl	0 <ctf_decl_buf>
     b38:	mov	x19, x0
     b3c:	add	x0, sp, #0x68
     b40:	bl	0 <ctf_decl_fini>
     b44:	ldp	x21, x22, [sp, #32]
     b48:	ldp	x23, x24, [sp, #48]
     b4c:	ldp	x25, x26, [sp, #64]
     b50:	ldp	x27, x28, [sp, #80]
     b54:	mov	x0, x19
     b58:	ldp	x19, x20, [sp, #16]
     b5c:	ldp	x29, x30, [sp], #208
     b60:	ret
     b64:	mov	w1, #0xc                   	// #12
     b68:	mov	x0, x22
     b6c:	bl	0 <ctf_set_errno>
     b70:	b	b30 <ctf_type_aname+0x2d8>

0000000000000b74 <ctf_type_lname>:
     b74:	stp	x29, x30, [sp, #-64]!
     b78:	mov	x29, sp
     b7c:	stp	x21, x22, [sp, #32]
     b80:	str	x23, [sp, #48]
     b84:	mov	x23, x0
     b88:	mov	x22, x2
     b8c:	mov	x21, x3
     b90:	bl	858 <ctf_type_aname>
     b94:	cbz	x0, bf8 <ctf_type_lname+0x84>
     b98:	stp	x19, x20, [sp, #16]
     b9c:	mov	x19, x0
     ba0:	bl	0 <strlen>
     ba4:	mov	x20, x0
     ba8:	mov	x3, x19
     bac:	adrp	x2, 0 <ctf_type_isparent>
     bb0:	add	x2, x2, #0x0
     bb4:	mov	x1, x21
     bb8:	mov	x0, x22
     bbc:	bl	0 <snprintf>
     bc0:	mov	x0, x19
     bc4:	bl	0 <free>
     bc8:	cmp	x20, x21
     bcc:	b.cs	be8 <ctf_type_lname+0x74>  // b.hs, b.nlast
     bd0:	mov	x0, x20
     bd4:	ldp	x19, x20, [sp, #16]
     bd8:	ldp	x21, x22, [sp, #32]
     bdc:	ldr	x23, [sp, #48]
     be0:	ldp	x29, x30, [sp], #64
     be4:	ret
     be8:	mov	w1, #0x401                 	// #1025
     bec:	mov	x0, x23
     bf0:	bl	0 <ctf_set_errno>
     bf4:	b	bd0 <ctf_type_lname+0x5c>
     bf8:	mov	x0, #0xffffffffffffffff    	// #-1
     bfc:	b	bd8 <ctf_type_lname+0x64>

0000000000000c00 <ctf_type_name>:
     c00:	stp	x29, x30, [sp, #-32]!
     c04:	mov	x29, sp
     c08:	stp	x19, x20, [sp, #16]
     c0c:	mov	x19, x2
     c10:	mov	x20, x3
     c14:	bl	b74 <ctf_type_lname>
     c18:	cmp	x0, #0x0
     c1c:	ccmp	x0, x20, #0x2, ge  // ge = tcont
     c20:	csel	x0, x19, xzr, cc  // cc = lo, ul, last
     c24:	ldp	x19, x20, [sp, #16]
     c28:	ldp	x29, x30, [sp], #32
     c2c:	ret

0000000000000c30 <ctf_type_aname_raw>:
     c30:	stp	x29, x30, [sp, #-48]!
     c34:	mov	x29, sp
     c38:	str	x19, [sp, #16]
     c3c:	str	x0, [sp, #40]
     c40:	add	x0, sp, #0x28
     c44:	bl	0 <ctf_lookup_by_id>
     c48:	mov	x19, x0
     c4c:	cbz	x0, c70 <ctf_type_aname_raw+0x40>
     c50:	ldr	w1, [x0]
     c54:	ldr	x0, [sp, #40]
     c58:	bl	0 <ctf_strraw>
     c5c:	cbz	x0, c70 <ctf_type_aname_raw+0x40>
     c60:	ldr	w1, [x19]
     c64:	ldr	x0, [sp, #40]
     c68:	bl	0 <ctf_strraw>
     c6c:	bl	0 <strdup>
     c70:	ldr	x19, [sp, #16]
     c74:	ldp	x29, x30, [sp], #48
     c78:	ret

0000000000000c7c <ctf_type_kind_unsliced>:
     c7c:	stp	x29, x30, [sp, #-32]!
     c80:	mov	x29, sp
     c84:	str	x0, [sp, #24]
     c88:	add	x0, sp, #0x18
     c8c:	bl	0 <ctf_lookup_by_id>
     c90:	cbz	x0, cb0 <ctf_type_kind_unsliced+0x34>
     c94:	ldr	x1, [sp, #24]
     c98:	ldr	x1, [x1]
     c9c:	ldr	x1, [x1]
     ca0:	ldr	w0, [x0, #4]
     ca4:	blr	x1
     ca8:	ldp	x29, x30, [sp], #32
     cac:	ret
     cb0:	mov	w0, #0xffffffff            	// #-1
     cb4:	b	ca8 <ctf_type_kind_unsliced+0x2c>

0000000000000cb8 <ctf_type_reference>:
     cb8:	stp	x29, x30, [sp, #-64]!
     cbc:	mov	x29, sp
     cc0:	stp	x19, x20, [sp, #16]
     cc4:	str	x0, [sp, #40]
     cc8:	mov	x20, x0
     ccc:	add	x0, sp, #0x28
     cd0:	bl	0 <ctf_lookup_by_id>
     cd4:	cbz	x0, d58 <ctf_type_reference+0xa0>
     cd8:	mov	x19, x0
     cdc:	ldr	x0, [sp, #40]
     ce0:	ldr	x0, [x0]
     ce4:	ldr	x1, [x0]
     ce8:	ldr	w0, [x19, #4]
     cec:	blr	x1
     cf0:	cmp	w0, #0xd
     cf4:	b.ls	d28 <ctf_type_reference+0x70>  // b.plast
     cf8:	cmp	w0, #0xe
     cfc:	b.ne	d38 <ctf_type_reference+0x80>  // b.any
     d00:	ldr	x0, [sp, #40]
     d04:	ldr	x1, [x0]
     d08:	ldr	x4, [x1, #24]
     d0c:	add	x3, sp, #0x38
     d10:	mov	x2, #0x0                   	// #0
     d14:	mov	x1, x19
     d18:	blr	x4
     d1c:	ldr	x0, [sp, #56]
     d20:	ldr	w0, [x19, x0]
     d24:	b	d4c <ctf_type_reference+0x94>
     d28:	cmp	w0, #0x9
     d2c:	b.hi	d48 <ctf_type_reference+0x90>  // b.pmore
     d30:	cmp	w0, #0x3
     d34:	b.eq	d48 <ctf_type_reference+0x90>  // b.none
     d38:	mov	w1, #0x400                 	// #1024
     d3c:	mov	x0, x20
     d40:	bl	0 <ctf_set_errno>
     d44:	b	d4c <ctf_type_reference+0x94>
     d48:	ldr	w0, [x19, #8]
     d4c:	ldp	x19, x20, [sp, #16]
     d50:	ldp	x29, x30, [sp], #64
     d54:	ret
     d58:	mov	x0, #0xffffffffffffffff    	// #-1
     d5c:	b	d4c <ctf_type_reference+0x94>

0000000000000d60 <ctf_type_resolve_unsliced>:
     d60:	stp	x29, x30, [sp, #-48]!
     d64:	mov	x29, sp
     d68:	str	x19, [sp, #16]
     d6c:	str	x0, [sp, #40]
     d70:	bl	2d0 <ctf_type_resolve>
     d74:	mov	x19, x0
     d78:	cmn	x0, #0x1
     d7c:	b.eq	dac <ctf_type_resolve_unsliced+0x4c>  // b.none
     d80:	mov	x1, x0
     d84:	add	x0, sp, #0x28
     d88:	bl	0 <ctf_lookup_by_id>
     d8c:	cbz	x0, dd0 <ctf_type_resolve_unsliced+0x70>
     d90:	ldr	x1, [sp, #40]
     d94:	ldr	x1, [x1]
     d98:	ldr	x1, [x1]
     d9c:	ldr	w0, [x0, #4]
     da0:	blr	x1
     da4:	cmp	w0, #0xe
     da8:	b.eq	dbc <ctf_type_resolve_unsliced+0x5c>  // b.none
     dac:	mov	x0, x19
     db0:	ldr	x19, [sp, #16]
     db4:	ldp	x29, x30, [sp], #48
     db8:	ret
     dbc:	mov	x1, x19
     dc0:	ldr	x0, [sp, #40]
     dc4:	bl	cb8 <ctf_type_reference>
     dc8:	mov	x19, x0
     dcc:	b	dac <ctf_type_resolve_unsliced+0x4c>
     dd0:	mov	x19, #0xffffffffffffffff    	// #-1
     dd4:	b	dac <ctf_type_resolve_unsliced+0x4c>

0000000000000dd8 <ctf_enum_iter>:
     dd8:	stp	x29, x30, [sp, #-96]!
     ddc:	mov	x29, sp
     de0:	stp	x19, x20, [sp, #16]
     de4:	stp	x21, x22, [sp, #32]
     de8:	str	x23, [sp, #48]
     dec:	str	x0, [sp, #72]
     df0:	mov	x20, x2
     df4:	mov	x21, x3
     df8:	mov	x23, x0
     dfc:	bl	d60 <ctf_type_resolve_unsliced>
     e00:	cmn	x0, #0x1
     e04:	b.eq	f0c <ctf_enum_iter+0x134>  // b.none
     e08:	mov	x19, x0
     e0c:	mov	x1, x0
     e10:	add	x0, sp, #0x48
     e14:	bl	0 <ctf_lookup_by_id>
     e18:	mov	x22, x0
     e1c:	cbz	x0, f14 <ctf_enum_iter+0x13c>
     e20:	ldr	x0, [sp, #72]
     e24:	ldr	x0, [x0]
     e28:	ldr	x1, [x0]
     e2c:	ldr	w0, [x22, #4]
     e30:	blr	x1
     e34:	cmp	w0, #0x8
     e38:	b.ne	e90 <ctf_enum_iter+0xb8>  // b.any
     e3c:	ldr	x0, [sp, #72]
     e40:	ldr	x1, [x0]
     e44:	ldr	x4, [x1, #24]
     e48:	add	x3, sp, #0x58
     e4c:	mov	x2, #0x0                   	// #0
     e50:	mov	x1, x22
     e54:	blr	x4
     e58:	mov	x1, x19
     e5c:	mov	x0, x23
     e60:	bl	0 <ctf_dynamic_type>
     e64:	cbz	x0, eb0 <ctf_enum_iter+0xd8>
     e68:	ldr	x19, [x0, #56]
     e6c:	cbz	x19, f24 <ctf_enum_iter+0x14c>
     e70:	mov	x2, x21
     e74:	ldr	w1, [x19, #40]
     e78:	ldr	x0, [x19, #16]
     e7c:	blr	x20
     e80:	cbnz	w0, e9c <ctf_enum_iter+0xc4>
     e84:	ldr	x19, [x19, #8]
     e88:	cbnz	x19, e70 <ctf_enum_iter+0x98>
     e8c:	b	e9c <ctf_enum_iter+0xc4>
     e90:	mov	w1, #0x3fc                 	// #1020
     e94:	mov	x0, x23
     e98:	bl	0 <ctf_set_errno>
     e9c:	ldp	x19, x20, [sp, #16]
     ea0:	ldp	x21, x22, [sp, #32]
     ea4:	ldr	x23, [sp, #48]
     ea8:	ldp	x29, x30, [sp], #96
     eac:	ret
     eb0:	ldr	x23, [sp, #88]
     eb4:	add	x23, x22, x23
     eb8:	mov	x19, x23
     ebc:	ldr	x0, [sp, #72]
     ec0:	ldr	x0, [x0]
     ec4:	ldr	x1, [x0, #16]
     ec8:	ldr	w0, [x22, #4]
     ecc:	blr	x1
     ed0:	cbz	w0, f1c <ctf_enum_iter+0x144>
     ed4:	sub	w0, w0, #0x1
     ed8:	add	x22, x23, #0x8
     edc:	add	x22, x22, x0, lsl #3
     ee0:	ldr	w1, [x19]
     ee4:	ldr	x0, [sp, #72]
     ee8:	bl	0 <ctf_strptr>
     eec:	mov	x2, x21
     ef0:	ldr	w1, [x19, #4]
     ef4:	blr	x20
     ef8:	cbnz	w0, e9c <ctf_enum_iter+0xc4>
     efc:	add	x19, x19, #0x8
     f00:	cmp	x19, x22
     f04:	b.ne	ee0 <ctf_enum_iter+0x108>  // b.any
     f08:	b	e9c <ctf_enum_iter+0xc4>
     f0c:	mov	w0, #0xffffffff            	// #-1
     f10:	b	e9c <ctf_enum_iter+0xc4>
     f14:	mov	w0, #0xffffffff            	// #-1
     f18:	b	e9c <ctf_enum_iter+0xc4>
     f1c:	mov	w0, #0x0                   	// #0
     f20:	b	e9c <ctf_enum_iter+0xc4>
     f24:	mov	w0, #0x0                   	// #0
     f28:	b	e9c <ctf_enum_iter+0xc4>

0000000000000f2c <ctf_type_kind>:
     f2c:	stp	x29, x30, [sp, #-32]!
     f30:	mov	x29, sp
     f34:	stp	x19, x20, [sp, #16]
     f38:	mov	x19, x0
     f3c:	mov	x20, x1
     f40:	bl	c7c <ctf_type_kind_unsliced>
     f44:	tbnz	w0, #31, f80 <ctf_type_kind+0x54>
     f48:	cmp	w0, #0xe
     f4c:	b.eq	f5c <ctf_type_kind+0x30>  // b.none
     f50:	ldp	x19, x20, [sp, #16]
     f54:	ldp	x29, x30, [sp], #32
     f58:	ret
     f5c:	mov	x1, x20
     f60:	mov	x0, x19
     f64:	bl	cb8 <ctf_type_reference>
     f68:	mov	x1, x0
     f6c:	cmn	x0, #0x1
     f70:	b.eq	f88 <ctf_type_kind+0x5c>  // b.none
     f74:	mov	x0, x19
     f78:	bl	c7c <ctf_type_kind_unsliced>
     f7c:	b	f50 <ctf_type_kind+0x24>
     f80:	mov	w0, #0xffffffff            	// #-1
     f84:	b	f50 <ctf_type_kind+0x24>
     f88:	mov	w0, #0xffffffff            	// #-1
     f8c:	b	f50 <ctf_type_kind+0x24>

0000000000000f90 <ctf_type_pointer>:
     f90:	stp	x29, x30, [sp, #-48]!
     f94:	mov	x29, sp
     f98:	stp	x19, x20, [sp, #16]
     f9c:	str	x0, [sp, #40]
     fa0:	mov	x19, x1
     fa4:	mov	x20, x0
     fa8:	add	x0, sp, #0x28
     fac:	bl	0 <ctf_lookup_by_id>
     fb0:	cbz	x0, 107c <ctf_type_pointer+0xec>
     fb4:	ldr	x2, [sp, #40]
     fb8:	ldr	w1, [x2, #544]
     fbc:	and	w3, w1, w19
     fc0:	ldr	x0, [x2, #448]
     fc4:	ldr	w3, [x0, x3, lsl #2]
     fc8:	mov	w0, w3
     fcc:	cbz	w3, ff0 <ctf_type_pointer+0x60>
     fd0:	ldr	w2, [x2, #552]
     fd4:	add	w1, w1, #0x1
     fd8:	orr	w1, w1, w3
     fdc:	tst	x2, #0x1
     fe0:	csel	x0, x1, x0, ne  // ne = any
     fe4:	ldp	x19, x20, [sp, #16]
     fe8:	ldp	x29, x30, [sp], #48
     fec:	ret
     ff0:	mov	x1, x19
     ff4:	mov	x0, x2
     ff8:	bl	2d0 <ctf_type_resolve>
     ffc:	mov	x19, x0
    1000:	cmn	x0, #0x1
    1004:	b.eq	104c <ctf_type_pointer+0xbc>  // b.none
    1008:	mov	x1, x0
    100c:	add	x0, sp, #0x28
    1010:	bl	0 <ctf_lookup_by_id>
    1014:	cbz	x0, 105c <ctf_type_pointer+0xcc>
    1018:	ldr	x3, [sp, #40]
    101c:	ldr	w1, [x3, #544]
    1020:	and	w19, w1, w19
    1024:	ldr	x0, [x3, #448]
    1028:	ldr	w2, [x0, x19, lsl #2]
    102c:	mov	w0, w2
    1030:	cbz	w2, 106c <ctf_type_pointer+0xdc>
    1034:	ldr	w3, [x3, #552]
    1038:	add	w1, w1, #0x1
    103c:	orr	w1, w1, w2
    1040:	tst	x3, #0x1
    1044:	csel	x0, x1, x0, ne  // ne = any
    1048:	b	fe4 <ctf_type_pointer+0x54>
    104c:	mov	w1, #0x402                 	// #1026
    1050:	mov	x0, x20
    1054:	bl	0 <ctf_set_errno>
    1058:	b	fe4 <ctf_type_pointer+0x54>
    105c:	mov	w1, #0x402                 	// #1026
    1060:	mov	x0, x20
    1064:	bl	0 <ctf_set_errno>
    1068:	b	fe4 <ctf_type_pointer+0x54>
    106c:	mov	w1, #0x402                 	// #1026
    1070:	mov	x0, x20
    1074:	bl	0 <ctf_set_errno>
    1078:	b	fe4 <ctf_type_pointer+0x54>
    107c:	mov	x0, #0xffffffffffffffff    	// #-1
    1080:	b	fe4 <ctf_type_pointer+0x54>

0000000000001084 <ctf_type_encoding>:
    1084:	stp	x29, x30, [sp, #-96]!
    1088:	mov	x29, sp
    108c:	stp	x19, x20, [sp, #16]
    1090:	stp	x21, x22, [sp, #32]
    1094:	str	x0, [sp, #56]
    1098:	mov	x20, x1
    109c:	mov	x21, x2
    10a0:	mov	x22, x0
    10a4:	add	x0, sp, #0x38
    10a8:	bl	0 <ctf_lookup_by_id>
    10ac:	cbz	x0, 1234 <ctf_type_encoding+0x1b0>
    10b0:	mov	x19, x0
    10b4:	mov	x1, x20
    10b8:	mov	x0, x22
    10bc:	bl	0 <ctf_dynamic_type>
    10c0:	mov	x20, x0
    10c4:	cbz	x0, 1154 <ctf_type_encoding+0xd0>
    10c8:	ldr	x0, [sp, #56]
    10cc:	ldr	x0, [x0]
    10d0:	ldr	x1, [x0]
    10d4:	ldr	w0, [x19, #4]
    10d8:	blr	x1
    10dc:	cmp	w0, #0x2
    10e0:	b.ls	111c <ctf_type_encoding+0x98>  // b.plast
    10e4:	cmp	w0, #0xe
    10e8:	b.ne	1120 <ctf_type_encoding+0x9c>  // b.any
    10ec:	add	x2, sp, #0x48
    10f0:	ldr	w1, [x20, #48]
    10f4:	ldr	x0, [sp, #56]
    10f8:	bl	1084 <ctf_type_encoding>
    10fc:	ldr	w0, [sp, #72]
    1100:	str	w0, [x21]
    1104:	ldrh	w0, [x20, #52]
    1108:	str	w0, [x21, #4]
    110c:	ldrh	w0, [x20, #54]
    1110:	str	w0, [x21, #8]
    1114:	mov	w0, #0x0                   	// #0
    1118:	b	1144 <ctf_type_encoding+0xc0>
    111c:	cbnz	w0, 1130 <ctf_type_encoding+0xac>
    1120:	mov	w1, #0x3fe                 	// #1022
    1124:	mov	x0, x22
    1128:	bl	0 <ctf_set_errno>
    112c:	b	1144 <ctf_type_encoding+0xc0>
    1130:	ldr	x0, [x20, #48]
    1134:	str	x0, [x21]
    1138:	ldr	w0, [x20, #56]
    113c:	str	w0, [x21, #8]
    1140:	mov	w0, #0x0                   	// #0
    1144:	ldp	x19, x20, [sp, #16]
    1148:	ldp	x21, x22, [sp, #32]
    114c:	ldp	x29, x30, [sp], #96
    1150:	ret
    1154:	ldr	x0, [sp, #56]
    1158:	ldr	x1, [x0]
    115c:	ldr	x4, [x1, #24]
    1160:	add	x3, sp, #0x58
    1164:	mov	x2, #0x0                   	// #0
    1168:	mov	x1, x19
    116c:	blr	x4
    1170:	ldr	x0, [sp, #56]
    1174:	ldr	x0, [x0]
    1178:	ldr	x1, [x0]
    117c:	ldr	w0, [x19, #4]
    1180:	blr	x1
    1184:	cmp	w0, #0x2
    1188:	b.eq	11d4 <ctf_type_encoding+0x150>  // b.none
    118c:	cmp	w0, #0xe
    1190:	b.eq	11fc <ctf_type_encoding+0x178>  // b.none
    1194:	cmp	w0, #0x1
    1198:	b.eq	11ac <ctf_type_encoding+0x128>  // b.none
    119c:	mov	w1, #0x3fe                 	// #1022
    11a0:	mov	x0, x22
    11a4:	bl	0 <ctf_set_errno>
    11a8:	b	1144 <ctf_type_encoding+0xc0>
    11ac:	ldr	x0, [sp, #88]
    11b0:	ldr	w0, [x19, x0]
    11b4:	lsr	w1, w0, #24
    11b8:	str	w1, [x21]
    11bc:	ubfx	x1, x0, #16, #8
    11c0:	str	w1, [x21, #4]
    11c4:	and	w0, w0, #0xffff
    11c8:	str	w0, [x21, #8]
    11cc:	mov	w0, #0x0                   	// #0
    11d0:	b	1144 <ctf_type_encoding+0xc0>
    11d4:	ldr	x0, [sp, #88]
    11d8:	ldr	w0, [x19, x0]
    11dc:	lsr	w1, w0, #24
    11e0:	str	w1, [x21]
    11e4:	ubfx	x1, x0, #16, #8
    11e8:	str	w1, [x21, #4]
    11ec:	and	w0, w0, #0xffff
    11f0:	str	w0, [x21, #8]
    11f4:	mov	w0, #0x0                   	// #0
    11f8:	b	1144 <ctf_type_encoding+0xc0>
    11fc:	ldr	x0, [sp, #88]
    1200:	add	x20, x19, x0
    1204:	add	x2, sp, #0x48
    1208:	ldr	w1, [x19, x0]
    120c:	ldr	x0, [sp, #56]
    1210:	bl	1084 <ctf_type_encoding>
    1214:	ldr	w0, [sp, #72]
    1218:	str	w0, [x21]
    121c:	ldrh	w0, [x20, #4]
    1220:	str	w0, [x21, #4]
    1224:	ldrh	w0, [x20, #6]
    1228:	str	w0, [x21, #8]
    122c:	mov	w0, #0x0                   	// #0
    1230:	b	1144 <ctf_type_encoding+0xc0>
    1234:	mov	w0, #0xffffffff            	// #-1
    1238:	b	1144 <ctf_type_encoding+0xc0>

000000000000123c <ctf_type_cmp>:
    123c:	mov	x4, x0
    1240:	mov	w0, #0xffffffff            	// #-1
    1244:	cmp	x1, x3
    1248:	b.cc	1250 <ctf_type_cmp+0x14>  // b.lo, b.ul, b.last
    124c:	cset	w0, hi  // hi = pmore
    1250:	cmp	x4, x2
    1254:	b.eq	1294 <ctf_type_cmp+0x58>  // b.none
    1258:	ldr	w5, [x4, #544]
    125c:	cmp	x5, x1
    1260:	b.cc	1270 <ctf_type_cmp+0x34>  // b.lo, b.ul, b.last
    1264:	ldr	x1, [x4, #512]
    1268:	cmp	x1, #0x0
    126c:	csel	x4, x4, x1, eq  // eq = none
    1270:	ldr	w1, [x2, #544]
    1274:	cmp	x1, x3
    1278:	b.cc	1288 <ctf_type_cmp+0x4c>  // b.lo, b.ul, b.last
    127c:	ldr	x1, [x2, #512]
    1280:	cmp	x1, #0x0
    1284:	csel	x2, x2, x1, eq  // eq = none
    1288:	cmp	x4, x2
    128c:	b.cc	1298 <ctf_type_cmp+0x5c>  // b.lo, b.ul, b.last
    1290:	csinc	w0, w0, wzr, ls  // ls = plast
    1294:	ret
    1298:	mov	w0, #0xffffffff            	// #-1
    129c:	b	1294 <ctf_type_cmp+0x58>

00000000000012a0 <ctf_member_info>:
    12a0:	stp	x29, x30, [sp, #-96]!
    12a4:	mov	x29, sp
    12a8:	stp	x19, x20, [sp, #16]
    12ac:	stp	x21, x22, [sp, #32]
    12b0:	stp	x23, x24, [sp, #48]
    12b4:	str	x0, [sp, #72]
    12b8:	mov	x20, x2
    12bc:	mov	x23, x3
    12c0:	mov	x22, x0
    12c4:	bl	2d0 <ctf_type_resolve>
    12c8:	cmn	x0, #0x1
    12cc:	b.eq	148c <ctf_member_info+0x1ec>  // b.none
    12d0:	mov	x21, x0
    12d4:	mov	x1, x0
    12d8:	add	x0, sp, #0x48
    12dc:	bl	0 <ctf_lookup_by_id>
    12e0:	mov	x19, x0
    12e4:	cbz	x0, 1494 <ctf_member_info+0x1f4>
    12e8:	ldr	x0, [sp, #72]
    12ec:	ldr	x1, [x0]
    12f0:	ldr	x4, [x1, #24]
    12f4:	add	x3, sp, #0x50
    12f8:	add	x2, sp, #0x58
    12fc:	mov	x1, x19
    1300:	blr	x4
    1304:	ldr	x0, [sp, #72]
    1308:	ldr	x0, [x0]
    130c:	ldr	x1, [x0]
    1310:	ldr	w0, [x19, #4]
    1314:	blr	x1
    1318:	sub	w0, w0, #0x6
    131c:	cmp	w0, #0x1
    1320:	b.hi	1364 <ctf_member_info+0xc4>  // b.pmore
    1324:	mov	x1, x21
    1328:	ldr	x0, [sp, #72]
    132c:	bl	0 <ctf_dynamic_type>
    1330:	cbz	x0, 1384 <ctf_member_info+0xe4>
    1334:	ldr	x19, [x0, #56]
    1338:	cbz	x19, 1354 <ctf_member_info+0xb4>
    133c:	mov	x1, x20
    1340:	ldr	x0, [x19, #16]
    1344:	bl	0 <strcmp>
    1348:	cbz	w0, 1478 <ctf_member_info+0x1d8>
    134c:	ldr	x19, [x19, #8]
    1350:	cbnz	x19, 133c <ctf_member_info+0x9c>
    1354:	mov	w1, #0x40c                 	// #1036
    1358:	mov	x0, x22
    135c:	bl	0 <ctf_set_errno>
    1360:	b	1370 <ctf_member_info+0xd0>
    1364:	mov	w1, #0x3fb                 	// #1019
    1368:	mov	x0, x22
    136c:	bl	0 <ctf_set_errno>
    1370:	ldp	x19, x20, [sp, #16]
    1374:	ldp	x21, x22, [sp, #32]
    1378:	ldp	x23, x24, [sp, #48]
    137c:	ldp	x29, x30, [sp], #96
    1380:	ret
    1384:	ldr	x1, [sp, #88]
    1388:	mov	x0, #0x1fffffff            	// #536870911
    138c:	cmp	x1, x0
    1390:	b.gt	1404 <ctf_member_info+0x164>
    1394:	ldr	x24, [sp, #80]
    1398:	add	x24, x19, x24
    139c:	mov	x21, x24
    13a0:	ldr	x0, [sp, #72]
    13a4:	ldr	x0, [x0]
    13a8:	ldr	x1, [x0, #16]
    13ac:	ldr	w0, [x19, #4]
    13b0:	blr	x1
    13b4:	cbz	w0, 1354 <ctf_member_info+0xb4>
    13b8:	sub	w0, w0, #0x1
    13bc:	add	x0, x0, x0, lsl #1
    13c0:	add	x19, x24, #0xc
    13c4:	add	x19, x19, x0, lsl #2
    13c8:	ldr	w1, [x21]
    13cc:	ldr	x0, [sp, #72]
    13d0:	bl	0 <ctf_strptr>
    13d4:	mov	x1, x20
    13d8:	bl	0 <strcmp>
    13dc:	cbz	w0, 13f0 <ctf_member_info+0x150>
    13e0:	add	x21, x21, #0xc
    13e4:	cmp	x19, x21
    13e8:	b.ne	13c8 <ctf_member_info+0x128>  // b.any
    13ec:	b	1354 <ctf_member_info+0xb4>
    13f0:	ldr	w1, [x21, #8]
    13f4:	str	x1, [x23]
    13f8:	ldr	w1, [x21, #4]
    13fc:	str	x1, [x23, #8]
    1400:	b	1370 <ctf_member_info+0xd0>
    1404:	ldr	x24, [sp, #80]
    1408:	add	x24, x19, x24
    140c:	mov	x21, x24
    1410:	ldr	x0, [sp, #72]
    1414:	ldr	x0, [x0]
    1418:	ldr	x1, [x0, #16]
    141c:	ldr	w0, [x19, #4]
    1420:	blr	x1
    1424:	cbz	w0, 1354 <ctf_member_info+0xb4>
    1428:	sub	w0, w0, #0x1
    142c:	add	x19, x24, #0x10
    1430:	add	x19, x19, x0, lsl #4
    1434:	ldr	w1, [x21]
    1438:	ldr	x0, [sp, #72]
    143c:	bl	0 <ctf_strptr>
    1440:	mov	x1, x20
    1444:	bl	0 <strcmp>
    1448:	cbz	w0, 145c <ctf_member_info+0x1bc>
    144c:	add	x21, x21, #0x10
    1450:	cmp	x21, x19
    1454:	b.ne	1434 <ctf_member_info+0x194>  // b.any
    1458:	b	1354 <ctf_member_info+0xb4>
    145c:	ldr	w1, [x21, #8]
    1460:	str	x1, [x23]
    1464:	ldr	w1, [x21, #4]
    1468:	ldr	w2, [x21, #12]
    146c:	orr	x1, x2, x1, lsl #32
    1470:	str	x1, [x23, #8]
    1474:	b	1370 <ctf_member_info+0xd0>
    1478:	ldr	x1, [x19, #24]
    147c:	str	x1, [x23]
    1480:	ldr	x1, [x19, #32]
    1484:	str	x1, [x23, #8]
    1488:	b	1370 <ctf_member_info+0xd0>
    148c:	mov	w0, #0xffffffff            	// #-1
    1490:	b	1370 <ctf_member_info+0xd0>
    1494:	mov	w0, #0xffffffff            	// #-1
    1498:	b	1370 <ctf_member_info+0xd0>

000000000000149c <ctf_array_info>:
    149c:	stp	x29, x30, [sp, #-80]!
    14a0:	mov	x29, sp
    14a4:	stp	x19, x20, [sp, #16]
    14a8:	stp	x21, x22, [sp, #32]
    14ac:	str	x0, [sp, #56]
    14b0:	mov	x22, x1
    14b4:	mov	x21, x2
    14b8:	mov	x20, x0
    14bc:	add	x0, sp, #0x38
    14c0:	bl	0 <ctf_lookup_by_id>
    14c4:	cbz	x0, 1570 <ctf_array_info+0xd4>
    14c8:	mov	x19, x0
    14cc:	ldr	x0, [sp, #56]
    14d0:	ldr	x0, [x0]
    14d4:	ldr	x1, [x0]
    14d8:	ldr	w0, [x19, #4]
    14dc:	blr	x1
    14e0:	cmp	w0, #0x4
    14e4:	b.eq	1504 <ctf_array_info+0x68>  // b.none
    14e8:	mov	w1, #0x3ff                 	// #1023
    14ec:	mov	x0, x20
    14f0:	bl	0 <ctf_set_errno>
    14f4:	ldp	x19, x20, [sp, #16]
    14f8:	ldp	x21, x22, [sp, #32]
    14fc:	ldp	x29, x30, [sp], #80
    1500:	ret
    1504:	mov	x1, x22
    1508:	mov	x0, x20
    150c:	bl	0 <ctf_dynamic_type>
    1510:	cbz	x0, 152c <ctf_array_info+0x90>
    1514:	ldp	x2, x3, [x0, #48]
    1518:	stp	x2, x3, [x21]
    151c:	ldr	x0, [x0, #64]
    1520:	str	x0, [x21, #16]
    1524:	mov	w0, #0x0                   	// #0
    1528:	b	14f4 <ctf_array_info+0x58>
    152c:	ldr	x0, [sp, #56]
    1530:	ldr	x1, [x0]
    1534:	ldr	x4, [x1, #24]
    1538:	add	x3, sp, #0x48
    153c:	mov	x2, #0x0                   	// #0
    1540:	mov	x1, x19
    1544:	blr	x4
    1548:	ldr	x1, [sp, #72]
    154c:	add	x0, x19, x1
    1550:	ldr	w1, [x19, x1]
    1554:	str	x1, [x21]
    1558:	ldr	w1, [x0, #4]
    155c:	str	x1, [x21, #8]
    1560:	ldr	w0, [x0, #8]
    1564:	str	w0, [x21, #16]
    1568:	mov	w0, #0x0                   	// #0
    156c:	b	14f4 <ctf_array_info+0x58>
    1570:	mov	w0, #0xffffffff            	// #-1
    1574:	b	14f4 <ctf_array_info+0x58>

0000000000001578 <ctf_type_size>:
    1578:	stp	x29, x30, [sp, #-80]!
    157c:	mov	x29, sp
    1580:	str	x0, [sp, #40]
    1584:	bl	2d0 <ctf_type_resolve>
    1588:	cmn	x0, #0x1
    158c:	b.eq	1690 <ctf_type_size+0x118>  // b.none
    1590:	stp	x19, x20, [sp, #16]
    1594:	mov	x20, x0
    1598:	mov	x1, x0
    159c:	add	x0, sp, #0x28
    15a0:	bl	0 <ctf_lookup_by_id>
    15a4:	mov	x19, x0
    15a8:	cbz	x0, 1698 <ctf_type_size+0x120>
    15ac:	ldr	x0, [sp, #40]
    15b0:	ldr	x0, [x0]
    15b4:	ldr	x1, [x0]
    15b8:	ldr	w0, [x19, #4]
    15bc:	blr	x1
    15c0:	cmp	w0, #0x5
    15c4:	b.eq	16a4 <ctf_type_size+0x12c>  // b.none
    15c8:	b.hi	1608 <ctf_type_size+0x90>  // b.pmore
    15cc:	cmp	w0, #0x3
    15d0:	b.eq	1624 <ctf_type_size+0xac>  // b.none
    15d4:	cmp	w0, #0x4
    15d8:	b.ne	166c <ctf_type_size+0xf4>  // b.any
    15dc:	ldr	x0, [sp, #40]
    15e0:	ldr	x1, [x0]
    15e4:	ldr	x4, [x1, #24]
    15e8:	mov	x3, #0x0                   	// #0
    15ec:	mov	x2, #0x0                   	// #0
    15f0:	mov	x1, x19
    15f4:	blr	x4
    15f8:	cmp	x0, #0x0
    15fc:	b.le	1638 <ctf_type_size+0xc0>
    1600:	ldp	x19, x20, [sp, #16]
    1604:	b	16ac <ctf_type_size+0x134>
    1608:	cmp	w0, #0x8
    160c:	b.ne	166c <ctf_type_size+0xf4>  // b.any
    1610:	ldr	x0, [sp, #40]
    1614:	ldr	x0, [x0, #488]
    1618:	ldr	x0, [x0, #40]
    161c:	ldp	x19, x20, [sp, #16]
    1620:	b	16ac <ctf_type_size+0x134>
    1624:	ldr	x0, [sp, #40]
    1628:	ldr	x0, [x0, #488]
    162c:	ldr	x0, [x0, #16]
    1630:	ldp	x19, x20, [sp, #16]
    1634:	b	16ac <ctf_type_size+0x134>
    1638:	add	x2, sp, #0x38
    163c:	mov	x1, x20
    1640:	ldr	x0, [sp, #40]
    1644:	bl	149c <ctf_array_info>
    1648:	tbnz	w0, #31, 16b4 <ctf_type_size+0x13c>
    164c:	ldr	x1, [sp, #56]
    1650:	ldr	x0, [sp, #40]
    1654:	bl	1578 <ctf_type_size>
    1658:	tbnz	x0, #63, 16c0 <ctf_type_size+0x148>
    165c:	ldr	w1, [sp, #72]
    1660:	mul	x0, x1, x0
    1664:	ldp	x19, x20, [sp, #16]
    1668:	b	16ac <ctf_type_size+0x134>
    166c:	ldr	x0, [sp, #40]
    1670:	ldr	x1, [x0]
    1674:	ldr	x4, [x1, #24]
    1678:	mov	x3, #0x0                   	// #0
    167c:	mov	x2, #0x0                   	// #0
    1680:	mov	x1, x19
    1684:	blr	x4
    1688:	ldp	x19, x20, [sp, #16]
    168c:	b	16ac <ctf_type_size+0x134>
    1690:	mov	x0, #0xffffffffffffffff    	// #-1
    1694:	b	16ac <ctf_type_size+0x134>
    1698:	mov	x0, #0xffffffffffffffff    	// #-1
    169c:	ldp	x19, x20, [sp, #16]
    16a0:	b	16ac <ctf_type_size+0x134>
    16a4:	mov	x0, #0x0                   	// #0
    16a8:	ldp	x19, x20, [sp, #16]
    16ac:	ldp	x29, x30, [sp], #80
    16b0:	ret
    16b4:	mov	x0, #0xffffffffffffffff    	// #-1
    16b8:	ldp	x19, x20, [sp, #16]
    16bc:	b	16ac <ctf_type_size+0x134>
    16c0:	mov	x0, #0xffffffffffffffff    	// #-1
    16c4:	ldp	x19, x20, [sp, #16]
    16c8:	b	16ac <ctf_type_size+0x134>

00000000000016cc <ctf_type_align>:
    16cc:	stp	x29, x30, [sp, #-112]!
    16d0:	mov	x29, sp
    16d4:	stp	x21, x22, [sp, #32]
    16d8:	str	x0, [sp, #72]
    16dc:	mov	x22, x0
    16e0:	bl	2d0 <ctf_type_resolve>
    16e4:	cmn	x0, #0x1
    16e8:	b.eq	1908 <ctf_type_align+0x23c>  // b.none
    16ec:	stp	x19, x20, [sp, #16]
    16f0:	mov	x20, x0
    16f4:	mov	x1, x0
    16f8:	add	x0, sp, #0x48
    16fc:	bl	0 <ctf_lookup_by_id>
    1700:	mov	x21, x0
    1704:	cbz	x0, 1910 <ctf_type_align+0x244>
    1708:	ldr	x0, [sp, #72]
    170c:	ldr	x0, [x0]
    1710:	ldr	x1, [x0]
    1714:	ldr	w0, [x21, #4]
    1718:	blr	x1
    171c:	mov	w19, w0
    1720:	cmp	w0, #0x7
    1724:	b.hi	1758 <ctf_type_align+0x8c>  // b.pmore
    1728:	cmp	w0, #0x5
    172c:	b.hi	17a4 <ctf_type_align+0xd8>  // b.pmore
    1730:	cmp	w0, #0x4
    1734:	b.eq	1774 <ctf_type_align+0xa8>  // b.none
    1738:	sub	w19, w0, #0x3
    173c:	tst	w19, #0xfffffffd
    1740:	b.ne	18e4 <ctf_type_align+0x218>  // b.any
    1744:	ldr	x0, [sp, #72]
    1748:	ldr	x0, [x0, #488]
    174c:	ldr	x0, [x0, #16]
    1750:	ldp	x19, x20, [sp, #16]
    1754:	b	17f8 <ctf_type_align+0x12c>
    1758:	cmp	w0, #0x8
    175c:	b.ne	18e4 <ctf_type_align+0x218>  // b.any
    1760:	ldr	x0, [sp, #72]
    1764:	ldr	x0, [x0, #488]
    1768:	ldr	x0, [x0, #40]
    176c:	ldp	x19, x20, [sp, #16]
    1770:	b	17f8 <ctf_type_align+0x12c>
    1774:	add	x2, sp, #0x58
    1778:	mov	x1, x20
    177c:	ldr	x0, [sp, #72]
    1780:	bl	149c <ctf_array_info>
    1784:	mov	w1, w0
    1788:	mov	x0, #0xffffffffffffffff    	// #-1
    178c:	tbnz	w1, #31, 191c <ctf_type_align+0x250>
    1790:	ldr	x1, [sp, #88]
    1794:	ldr	x0, [sp, #72]
    1798:	bl	16cc <ctf_type_align>
    179c:	ldp	x19, x20, [sp, #16]
    17a0:	b	17f8 <ctf_type_align+0x12c>
    17a4:	str	x23, [sp, #48]
    17a8:	mov	w23, w0
    17ac:	mov	x1, x20
    17b0:	mov	x0, x22
    17b4:	bl	0 <ctf_dynamic_type>
    17b8:	cbz	x0, 1804 <ctf_type_align+0x138>
    17bc:	ldr	x19, [x0, #56]
    17c0:	cbz	x19, 18dc <ctf_type_align+0x210>
    17c4:	mov	x20, #0x0                   	// #0
    17c8:	ldr	x1, [x19, #24]
    17cc:	ldr	x0, [sp, #72]
    17d0:	bl	16cc <ctf_type_align>
    17d4:	cmp	x20, x0
    17d8:	csel	x20, x20, x0, cs  // cs = hs, nlast
    17dc:	cmp	w23, #0x6
    17e0:	b.eq	17ec <ctf_type_align+0x120>  // b.none
    17e4:	ldr	x19, [x19, #8]
    17e8:	cbnz	x19, 17c8 <ctf_type_align+0xfc>
    17ec:	mov	x0, x20
    17f0:	ldp	x19, x20, [sp, #16]
    17f4:	ldr	x23, [sp, #48]
    17f8:	ldp	x21, x22, [sp, #32]
    17fc:	ldp	x29, x30, [sp], #112
    1800:	ret
    1804:	ldr	x0, [sp, #72]
    1808:	ldr	x0, [x0]
    180c:	ldr	x1, [x0, #16]
    1810:	ldr	w0, [x21, #4]
    1814:	blr	x1
    1818:	mov	w22, w0
    181c:	ldr	x0, [sp, #72]
    1820:	ldr	x1, [x0]
    1824:	ldr	x4, [x1, #24]
    1828:	add	x3, sp, #0x58
    182c:	add	x2, sp, #0x50
    1830:	mov	x1, x21
    1834:	blr	x4
    1838:	ldr	x0, [sp, #88]
    183c:	add	x21, x21, x0
    1840:	cmp	w19, #0x6
    1844:	b.eq	1894 <ctf_type_align+0x1c8>  // b.none
    1848:	ldr	x1, [sp, #80]
    184c:	mov	x0, #0x1fffffff            	// #536870911
    1850:	cmp	x1, x0
    1854:	b.le	18a0 <ctf_type_align+0x1d4>
    1858:	mov	x20, #0x0                   	// #0
    185c:	cbz	w22, 17ec <ctf_type_align+0x120>
    1860:	sub	w19, w22, #0x1
    1864:	add	x19, x19, #0x1
    1868:	add	x19, x21, x19, lsl #4
    186c:	mov	x20, #0x0                   	// #0
    1870:	ldr	w1, [x21, #8]
    1874:	ldr	x0, [sp, #72]
    1878:	bl	16cc <ctf_type_align>
    187c:	cmp	x20, x0
    1880:	csel	x20, x20, x0, cs  // cs = hs, nlast
    1884:	add	x21, x21, #0x10
    1888:	cmp	x19, x21
    188c:	b.ne	1870 <ctf_type_align+0x1a4>  // b.any
    1890:	b	17ec <ctf_type_align+0x120>
    1894:	cmp	w22, #0x0
    1898:	cset	w22, ne  // ne = any
    189c:	b	1848 <ctf_type_align+0x17c>
    18a0:	mov	x20, #0x0                   	// #0
    18a4:	cbz	w22, 17ec <ctf_type_align+0x120>
    18a8:	sub	w19, w22, #0x1
    18ac:	add	x19, x19, #0x1
    18b0:	add	x19, x19, x19, lsl #1
    18b4:	add	x19, x21, x19, lsl #2
    18b8:	ldr	w1, [x21, #8]
    18bc:	ldr	x0, [sp, #72]
    18c0:	bl	16cc <ctf_type_align>
    18c4:	cmp	x20, x0
    18c8:	csel	x20, x20, x0, cs  // cs = hs, nlast
    18cc:	add	x21, x21, #0xc
    18d0:	cmp	x19, x21
    18d4:	b.ne	18b8 <ctf_type_align+0x1ec>  // b.any
    18d8:	b	17ec <ctf_type_align+0x120>
    18dc:	mov	x20, #0x0                   	// #0
    18e0:	b	17ec <ctf_type_align+0x120>
    18e4:	ldr	x0, [sp, #72]
    18e8:	ldr	x1, [x0]
    18ec:	ldr	x4, [x1, #24]
    18f0:	mov	x3, #0x0                   	// #0
    18f4:	mov	x2, #0x0                   	// #0
    18f8:	mov	x1, x21
    18fc:	blr	x4
    1900:	ldp	x19, x20, [sp, #16]
    1904:	b	17f8 <ctf_type_align+0x12c>
    1908:	mov	x0, #0xffffffffffffffff    	// #-1
    190c:	b	17f8 <ctf_type_align+0x12c>
    1910:	mov	x0, #0xffffffffffffffff    	// #-1
    1914:	ldp	x19, x20, [sp, #16]
    1918:	b	17f8 <ctf_type_align+0x12c>
    191c:	ldp	x19, x20, [sp, #16]
    1920:	b	17f8 <ctf_type_align+0x12c>

0000000000001924 <ctf_type_compat>:
    1924:	stp	x29, x30, [sp, #-176]!
    1928:	mov	x29, sp
    192c:	stp	x19, x20, [sp, #16]
    1930:	stp	x21, x22, [sp, #32]
    1934:	str	x0, [sp, #88]
    1938:	mov	x21, x1
    193c:	str	x2, [sp, #80]
    1940:	mov	x20, x3
    1944:	mov	x19, x0
    1948:	bl	123c <ctf_type_cmp>
    194c:	cbnz	w0, 1968 <ctf_type_compat+0x44>
    1950:	mov	w20, #0x1                   	// #1
    1954:	mov	w0, w20
    1958:	ldp	x19, x20, [sp, #16]
    195c:	ldp	x21, x22, [sp, #32]
    1960:	ldp	x29, x30, [sp], #176
    1964:	ret
    1968:	stp	x23, x24, [sp, #48]
    196c:	str	x25, [sp, #64]
    1970:	mov	x1, x21
    1974:	mov	x0, x19
    1978:	bl	2d0 <ctf_type_resolve>
    197c:	mov	x21, x0
    1980:	mov	x1, x0
    1984:	ldr	x0, [sp, #88]
    1988:	bl	f2c <ctf_type_kind>
    198c:	mov	w19, w0
    1990:	mov	x1, x20
    1994:	ldr	x0, [sp, #80]
    1998:	bl	2d0 <ctf_type_resolve>
    199c:	mov	x25, x0
    19a0:	mov	x1, x0
    19a4:	ldr	x0, [sp, #80]
    19a8:	bl	f2c <ctf_type_kind>
    19ac:	mov	w22, w0
    19b0:	mov	x1, x21
    19b4:	add	x0, sp, #0x58
    19b8:	bl	0 <ctf_lookup_by_id>
    19bc:	mov	x24, x0
    19c0:	mov	x1, x25
    19c4:	add	x0, sp, #0x50
    19c8:	bl	0 <ctf_lookup_by_id>
    19cc:	mov	x23, x0
    19d0:	cmp	x24, #0x0
    19d4:	mov	w20, #0x0                   	// #0
    19d8:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    19dc:	b.ne	1a4c <ctf_type_compat+0x128>  // b.any
    19e0:	cmp	w19, #0x8
    19e4:	ccmp	w22, #0x1, #0x0, eq  // eq = none
    19e8:	b.eq	1c88 <ctf_type_compat+0x364>  // b.none
    19ec:	cmp	w22, #0x8
    19f0:	ccmp	w19, #0x1, #0x0, eq  // eq = none
    19f4:	b.eq	1c98 <ctf_type_compat+0x374>  // b.none
    19f8:	cmp	w19, w22
    19fc:	b.ne	1ca8 <ctf_type_compat+0x384>  // b.any
    1a00:	cmp	w19, #0x7
    1a04:	b.gt	1ad4 <ctf_type_compat+0x1b0>
    1a08:	cmp	w19, #0x5
    1a0c:	b.gt	1bf4 <ctf_type_compat+0x2d0>
    1a10:	cmp	w19, #0x3
    1a14:	b.eq	1b28 <ctf_type_compat+0x204>  // b.none
    1a18:	b.le	1a80 <ctf_type_compat+0x15c>
    1a1c:	cmp	w19, #0x4
    1a20:	b.ne	1ac4 <ctf_type_compat+0x1a0>  // b.any
    1a24:	add	x2, sp, #0x78
    1a28:	mov	x1, x21
    1a2c:	ldr	x0, [sp, #88]
    1a30:	bl	149c <ctf_array_info>
    1a34:	mov	w20, w0
    1a38:	cbz	w0, 1b70 <ctf_type_compat+0x24c>
    1a3c:	mov	w20, #0x0                   	// #0
    1a40:	ldp	x23, x24, [sp, #48]
    1a44:	ldr	x25, [sp, #64]
    1a48:	b	1954 <ctf_type_compat+0x30>
    1a4c:	ldr	w1, [x24]
    1a50:	ldr	x0, [sp, #88]
    1a54:	bl	0 <ctf_strptr>
    1a58:	mov	x20, x0
    1a5c:	ldr	w1, [x23]
    1a60:	ldr	x0, [sp, #80]
    1a64:	bl	0 <ctf_strptr>
    1a68:	mov	x1, x0
    1a6c:	mov	x0, x20
    1a70:	bl	0 <strcmp>
    1a74:	cmp	w0, #0x0
    1a78:	cset	w20, eq  // eq = none
    1a7c:	b	19e0 <ctf_type_compat+0xbc>
    1a80:	sub	w19, w19, #0x1
    1a84:	cmp	w19, #0x1
    1a88:	b.hi	1cb8 <ctf_type_compat+0x394>  // b.pmore
    1a8c:	str	xzr, [sp, #160]
    1a90:	str	wzr, [sp, #168]
    1a94:	str	xzr, [sp, #144]
    1a98:	str	wzr, [sp, #152]
    1a9c:	add	x2, sp, #0xa0
    1aa0:	mov	x1, x21
    1aa4:	ldr	x0, [sp, #88]
    1aa8:	bl	1084 <ctf_type_encoding>
    1aac:	mov	w20, w0
    1ab0:	cbz	w0, 1af0 <ctf_type_compat+0x1cc>
    1ab4:	mov	w20, #0x0                   	// #0
    1ab8:	ldp	x23, x24, [sp, #48]
    1abc:	ldr	x25, [sp, #64]
    1ac0:	b	1954 <ctf_type_compat+0x30>
    1ac4:	mov	w20, #0x0                   	// #0
    1ac8:	ldp	x23, x24, [sp, #48]
    1acc:	ldr	x25, [sp, #64]
    1ad0:	b	1954 <ctf_type_compat+0x30>
    1ad4:	cmp	w19, #0x8
    1ad8:	b.eq	1c34 <ctf_type_compat+0x310>  // b.none
    1adc:	cmp	w19, #0x9
    1ae0:	csel	w20, w20, wzr, eq  // eq = none
    1ae4:	ldp	x23, x24, [sp, #48]
    1ae8:	ldr	x25, [sp, #64]
    1aec:	b	1954 <ctf_type_compat+0x30>
    1af0:	add	x2, sp, #0x90
    1af4:	mov	x1, x25
    1af8:	ldr	x0, [sp, #80]
    1afc:	bl	1084 <ctf_type_encoding>
    1b00:	cbnz	w0, 1cd8 <ctf_type_compat+0x3b4>
    1b04:	mov	x2, #0xc                   	// #12
    1b08:	add	x1, sp, #0x90
    1b0c:	add	x0, sp, #0xa0
    1b10:	bl	0 <memcmp>
    1b14:	cmp	w0, #0x0
    1b18:	cset	w20, eq  // eq = none
    1b1c:	ldp	x23, x24, [sp, #48]
    1b20:	ldr	x25, [sp, #64]
    1b24:	b	1954 <ctf_type_compat+0x30>
    1b28:	ldr	x20, [sp, #88]
    1b2c:	mov	x1, x21
    1b30:	mov	x0, x20
    1b34:	bl	cb8 <ctf_type_reference>
    1b38:	mov	x19, x0
    1b3c:	ldr	x21, [sp, #80]
    1b40:	mov	x1, x25
    1b44:	mov	x0, x21
    1b48:	bl	cb8 <ctf_type_reference>
    1b4c:	mov	x3, x0
    1b50:	mov	x2, x21
    1b54:	mov	x1, x19
    1b58:	mov	x0, x20
    1b5c:	bl	1924 <ctf_type_compat>
    1b60:	mov	w20, w0
    1b64:	ldp	x23, x24, [sp, #48]
    1b68:	ldr	x25, [sp, #64]
    1b6c:	b	1954 <ctf_type_compat+0x30>
    1b70:	add	x2, sp, #0x60
    1b74:	mov	x1, x25
    1b78:	ldr	x0, [sp, #80]
    1b7c:	bl	149c <ctf_array_info>
    1b80:	cbnz	w0, 1ce4 <ctf_type_compat+0x3c0>
    1b84:	mov	w20, w0
    1b88:	ldr	w1, [sp, #136]
    1b8c:	ldr	w0, [sp, #112]
    1b90:	cmp	w1, w0
    1b94:	b.eq	1ba4 <ctf_type_compat+0x280>  // b.none
    1b98:	ldp	x23, x24, [sp, #48]
    1b9c:	ldr	x25, [sp, #64]
    1ba0:	b	1954 <ctf_type_compat+0x30>
    1ba4:	ldr	x3, [sp, #96]
    1ba8:	ldr	x2, [sp, #80]
    1bac:	ldr	x1, [sp, #120]
    1bb0:	ldr	x0, [sp, #88]
    1bb4:	bl	1924 <ctf_type_compat>
    1bb8:	mov	w20, w0
    1bbc:	cbnz	w0, 1bcc <ctf_type_compat+0x2a8>
    1bc0:	ldp	x23, x24, [sp, #48]
    1bc4:	ldr	x25, [sp, #64]
    1bc8:	b	1954 <ctf_type_compat+0x30>
    1bcc:	ldr	x3, [sp, #104]
    1bd0:	ldr	x2, [sp, #80]
    1bd4:	ldr	x1, [sp, #128]
    1bd8:	ldr	x0, [sp, #88]
    1bdc:	bl	1924 <ctf_type_compat>
    1be0:	cmp	w0, #0x0
    1be4:	cset	w20, ne  // ne = any
    1be8:	ldp	x23, x24, [sp, #48]
    1bec:	ldr	x25, [sp, #64]
    1bf0:	b	1954 <ctf_type_compat+0x30>
    1bf4:	cbnz	w20, 1c04 <ctf_type_compat+0x2e0>
    1bf8:	ldp	x23, x24, [sp, #48]
    1bfc:	ldr	x25, [sp, #64]
    1c00:	b	1954 <ctf_type_compat+0x30>
    1c04:	mov	x1, x21
    1c08:	ldr	x0, [sp, #88]
    1c0c:	bl	1578 <ctf_type_size>
    1c10:	mov	x19, x0
    1c14:	mov	x1, x25
    1c18:	ldr	x0, [sp, #80]
    1c1c:	bl	1578 <ctf_type_size>
    1c20:	cmp	x19, x0
    1c24:	cset	w20, eq  // eq = none
    1c28:	ldp	x23, x24, [sp, #48]
    1c2c:	ldr	x25, [sp, #64]
    1c30:	b	1954 <ctf_type_compat+0x30>
    1c34:	add	x2, sp, #0xa0
    1c38:	mov	x1, x21
    1c3c:	ldr	x0, [sp, #88]
    1c40:	bl	1084 <ctf_type_encoding>
    1c44:	mov	w19, w0
    1c48:	add	x2, sp, #0x90
    1c4c:	mov	x1, x25
    1c50:	ldr	x0, [sp, #80]
    1c54:	bl	1084 <ctf_type_encoding>
    1c58:	cmp	w19, w0
    1c5c:	b.ne	1cc8 <ctf_type_compat+0x3a4>  // b.any
    1c60:	cbnz	w19, 1cf0 <ctf_type_compat+0x3cc>
    1c64:	mov	x2, #0xc                   	// #12
    1c68:	add	x1, sp, #0x90
    1c6c:	add	x0, sp, #0xa0
    1c70:	bl	0 <memcmp>
    1c74:	cmp	w0, #0x0
    1c78:	csel	w20, w20, w19, eq  // eq = none
    1c7c:	ldp	x23, x24, [sp, #48]
    1c80:	ldr	x25, [sp, #64]
    1c84:	b	1954 <ctf_type_compat+0x30>
    1c88:	mov	w20, #0x1                   	// #1
    1c8c:	ldp	x23, x24, [sp, #48]
    1c90:	ldr	x25, [sp, #64]
    1c94:	b	1954 <ctf_type_compat+0x30>
    1c98:	mov	w20, #0x1                   	// #1
    1c9c:	ldp	x23, x24, [sp, #48]
    1ca0:	ldr	x25, [sp, #64]
    1ca4:	b	1954 <ctf_type_compat+0x30>
    1ca8:	mov	w20, #0x0                   	// #0
    1cac:	ldp	x23, x24, [sp, #48]
    1cb0:	ldr	x25, [sp, #64]
    1cb4:	b	1954 <ctf_type_compat+0x30>
    1cb8:	mov	w20, #0x0                   	// #0
    1cbc:	ldp	x23, x24, [sp, #48]
    1cc0:	ldr	x25, [sp, #64]
    1cc4:	b	1954 <ctf_type_compat+0x30>
    1cc8:	mov	w20, #0x0                   	// #0
    1ccc:	ldp	x23, x24, [sp, #48]
    1cd0:	ldr	x25, [sp, #64]
    1cd4:	b	1954 <ctf_type_compat+0x30>
    1cd8:	ldp	x23, x24, [sp, #48]
    1cdc:	ldr	x25, [sp, #64]
    1ce0:	b	1954 <ctf_type_compat+0x30>
    1ce4:	ldp	x23, x24, [sp, #48]
    1ce8:	ldr	x25, [sp, #64]
    1cec:	b	1954 <ctf_type_compat+0x30>
    1cf0:	ldp	x23, x24, [sp, #48]
    1cf4:	ldr	x25, [sp, #64]
    1cf8:	b	1954 <ctf_type_compat+0x30>

0000000000001cfc <ctf_enum_name>:
    1cfc:	stp	x29, x30, [sp, #-96]!
    1d00:	mov	x29, sp
    1d04:	stp	x19, x20, [sp, #16]
    1d08:	stp	x21, x22, [sp, #32]
    1d0c:	str	x0, [sp, #72]
    1d10:	mov	w19, w2
    1d14:	mov	x22, x0
    1d18:	bl	d60 <ctf_type_resolve_unsliced>
    1d1c:	cmn	x0, #0x1
    1d20:	b.eq	1e54 <ctf_enum_name+0x158>  // b.none
    1d24:	mov	x21, x0
    1d28:	mov	x1, x0
    1d2c:	add	x0, sp, #0x48
    1d30:	bl	0 <ctf_lookup_by_id>
    1d34:	mov	x20, x0
    1d38:	cbz	x0, 1db0 <ctf_enum_name+0xb4>
    1d3c:	ldr	x0, [sp, #72]
    1d40:	ldr	x0, [x0]
    1d44:	ldr	x1, [x0]
    1d48:	ldr	w0, [x20, #4]
    1d4c:	blr	x1
    1d50:	cmp	w0, #0x8
    1d54:	b.ne	1dc4 <ctf_enum_name+0xc8>  // b.any
    1d58:	ldr	x0, [sp, #72]
    1d5c:	ldr	x1, [x0]
    1d60:	ldr	x4, [x1, #24]
    1d64:	add	x3, sp, #0x58
    1d68:	mov	x2, #0x0                   	// #0
    1d6c:	mov	x1, x20
    1d70:	blr	x4
    1d74:	mov	x1, x21
    1d78:	mov	x0, x22
    1d7c:	bl	0 <ctf_dynamic_type>
    1d80:	cbz	x0, 1dd8 <ctf_enum_name+0xdc>
    1d84:	ldr	x1, [x0, #56]
    1d88:	cbz	x1, 1da0 <ctf_enum_name+0xa4>
    1d8c:	ldr	w2, [x1, #40]
    1d90:	cmp	w2, w19
    1d94:	b.eq	1e44 <ctf_enum_name+0x148>  // b.none
    1d98:	ldr	x1, [x1, #8]
    1d9c:	cbnz	x1, 1d8c <ctf_enum_name+0x90>
    1da0:	mov	w1, #0x40b                 	// #1035
    1da4:	mov	x0, x22
    1da8:	bl	0 <ctf_set_errno>
    1dac:	mov	x20, #0x0                   	// #0
    1db0:	mov	x0, x20
    1db4:	ldp	x19, x20, [sp, #16]
    1db8:	ldp	x21, x22, [sp, #32]
    1dbc:	ldp	x29, x30, [sp], #96
    1dc0:	ret
    1dc4:	mov	w1, #0x3fc                 	// #1020
    1dc8:	mov	x0, x22
    1dcc:	bl	0 <ctf_set_errno>
    1dd0:	mov	x20, #0x0                   	// #0
    1dd4:	b	1db0 <ctf_enum_name+0xb4>
    1dd8:	str	x23, [sp, #48]
    1ddc:	ldr	x23, [sp, #88]
    1de0:	add	x23, x20, x23
    1de4:	mov	x21, x23
    1de8:	ldr	x0, [sp, #72]
    1dec:	ldr	x0, [x0]
    1df0:	ldr	x1, [x0, #16]
    1df4:	ldr	w0, [x20, #4]
    1df8:	blr	x1
    1dfc:	cbz	w0, 1e4c <ctf_enum_name+0x150>
    1e00:	sub	w0, w0, #0x1
    1e04:	add	x1, x23, #0x8
    1e08:	add	x1, x1, x0, lsl #3
    1e0c:	ldr	w0, [x21, #4]
    1e10:	cmp	w0, w19
    1e14:	b.eq	1e2c <ctf_enum_name+0x130>  // b.none
    1e18:	add	x21, x21, #0x8
    1e1c:	cmp	x21, x1
    1e20:	b.ne	1e0c <ctf_enum_name+0x110>  // b.any
    1e24:	ldr	x23, [sp, #48]
    1e28:	b	1da0 <ctf_enum_name+0xa4>
    1e2c:	ldr	w1, [x21]
    1e30:	ldr	x0, [sp, #72]
    1e34:	bl	0 <ctf_strptr>
    1e38:	mov	x20, x0
    1e3c:	ldr	x23, [sp, #48]
    1e40:	b	1db0 <ctf_enum_name+0xb4>
    1e44:	ldr	x20, [x1, #16]
    1e48:	b	1db0 <ctf_enum_name+0xb4>
    1e4c:	ldr	x23, [sp, #48]
    1e50:	b	1da0 <ctf_enum_name+0xa4>
    1e54:	mov	x20, #0x0                   	// #0
    1e58:	b	1db0 <ctf_enum_name+0xb4>

0000000000001e5c <ctf_enum_value>:
    1e5c:	stp	x29, x30, [sp, #-96]!
    1e60:	mov	x29, sp
    1e64:	stp	x19, x20, [sp, #16]
    1e68:	stp	x21, x22, [sp, #32]
    1e6c:	stp	x23, x24, [sp, #48]
    1e70:	str	x0, [sp, #72]
    1e74:	mov	x20, x2
    1e78:	mov	x23, x3
    1e7c:	mov	x22, x0
    1e80:	bl	d60 <ctf_type_resolve_unsliced>
    1e84:	cmn	x0, #0x1
    1e88:	b.eq	1fb8 <ctf_enum_value+0x15c>  // b.none
    1e8c:	mov	x21, x0
    1e90:	mov	x1, x0
    1e94:	add	x0, sp, #0x48
    1e98:	bl	0 <ctf_lookup_by_id>
    1e9c:	mov	x19, x0
    1ea0:	cbz	x0, 1fc0 <ctf_enum_value+0x164>
    1ea4:	ldr	x0, [sp, #72]
    1ea8:	ldr	x0, [x0]
    1eac:	ldr	x1, [x0]
    1eb0:	ldr	w0, [x19, #4]
    1eb4:	blr	x1
    1eb8:	cmp	w0, #0x8
    1ebc:	b.ne	1f34 <ctf_enum_value+0xd8>  // b.any
    1ec0:	ldr	x0, [sp, #72]
    1ec4:	ldr	x1, [x0]
    1ec8:	ldr	x4, [x1, #24]
    1ecc:	add	x3, sp, #0x58
    1ed0:	mov	x2, #0x0                   	// #0
    1ed4:	mov	x1, x19
    1ed8:	blr	x4
    1edc:	ldr	x24, [sp, #88]
    1ee0:	mov	x1, x21
    1ee4:	mov	x0, x22
    1ee8:	bl	0 <ctf_dynamic_type>
    1eec:	cbz	x0, 1f48 <ctf_enum_value+0xec>
    1ef0:	ldr	x19, [x0, #56]
    1ef4:	cbz	x19, 1f10 <ctf_enum_value+0xb4>
    1ef8:	mov	x1, x20
    1efc:	ldr	x0, [x19, #16]
    1f00:	bl	0 <strcmp>
    1f04:	cbz	w0, 1fa8 <ctf_enum_value+0x14c>
    1f08:	ldr	x19, [x19, #8]
    1f0c:	cbnz	x19, 1ef8 <ctf_enum_value+0x9c>
    1f10:	mov	w1, #0x40b                 	// #1035
    1f14:	mov	x0, x22
    1f18:	bl	0 <ctf_set_errno>
    1f1c:	mov	w0, #0xffffffff            	// #-1
    1f20:	ldp	x19, x20, [sp, #16]
    1f24:	ldp	x21, x22, [sp, #32]
    1f28:	ldp	x23, x24, [sp, #48]
    1f2c:	ldp	x29, x30, [sp], #96
    1f30:	ret
    1f34:	mov	w1, #0x3fc                 	// #1020
    1f38:	mov	x0, x22
    1f3c:	bl	0 <ctf_set_errno>
    1f40:	mov	w0, #0xffffffff            	// #-1
    1f44:	b	1f20 <ctf_enum_value+0xc4>
    1f48:	ldr	x0, [sp, #72]
    1f4c:	ldr	x0, [x0]
    1f50:	ldr	x1, [x0, #16]
    1f54:	ldr	w0, [x19, #4]
    1f58:	blr	x1
    1f5c:	cbz	w0, 1f10 <ctf_enum_value+0xb4>
    1f60:	add	x19, x19, x24
    1f64:	sub	w0, w0, #0x1
    1f68:	add	x21, x19, #0x8
    1f6c:	add	x21, x21, x0, lsl #3
    1f70:	ldr	w1, [x19]
    1f74:	ldr	x0, [sp, #72]
    1f78:	bl	0 <ctf_strptr>
    1f7c:	mov	x1, x20
    1f80:	bl	0 <strcmp>
    1f84:	cbz	w0, 1f98 <ctf_enum_value+0x13c>
    1f88:	add	x19, x19, #0x8
    1f8c:	cmp	x21, x19
    1f90:	b.ne	1f70 <ctf_enum_value+0x114>  // b.any
    1f94:	b	1f10 <ctf_enum_value+0xb4>
    1f98:	cbz	x23, 1f20 <ctf_enum_value+0xc4>
    1f9c:	ldr	w1, [x19, #4]
    1fa0:	str	w1, [x23]
    1fa4:	b	1f20 <ctf_enum_value+0xc4>
    1fa8:	cbz	x23, 1f20 <ctf_enum_value+0xc4>
    1fac:	ldr	w1, [x19, #40]
    1fb0:	str	w1, [x23]
    1fb4:	b	1f20 <ctf_enum_value+0xc4>
    1fb8:	mov	w0, #0xffffffff            	// #-1
    1fbc:	b	1f20 <ctf_enum_value+0xc4>
    1fc0:	mov	w0, #0xffffffff            	// #-1
    1fc4:	b	1f20 <ctf_enum_value+0xc4>

0000000000001fc8 <ctf_func_type_info>:
    1fc8:	stp	x29, x30, [sp, #-80]!
    1fcc:	mov	x29, sp
    1fd0:	stp	x19, x20, [sp, #16]
    1fd4:	str	x0, [sp, #56]
    1fd8:	mov	x20, x2
    1fdc:	bl	2d0 <ctf_type_resolve>
    1fe0:	cmn	x0, #0x1
    1fe4:	b.eq	20c8 <ctf_func_type_info+0x100>  // b.none
    1fe8:	str	x21, [sp, #32]
    1fec:	mov	x21, x0
    1ff0:	mov	x1, x0
    1ff4:	add	x0, sp, #0x38
    1ff8:	bl	0 <ctf_lookup_by_id>
    1ffc:	mov	x19, x0
    2000:	cbz	x0, 20d0 <ctf_func_type_info+0x108>
    2004:	ldr	x0, [sp, #56]
    2008:	ldr	x1, [x0]
    200c:	ldr	x4, [x1, #24]
    2010:	add	x3, sp, #0x40
    2014:	add	x2, sp, #0x48
    2018:	mov	x1, x19
    201c:	blr	x4
    2020:	ldr	x0, [sp, #56]
    2024:	ldr	x0, [x0]
    2028:	ldr	x1, [x0]
    202c:	ldr	w0, [x19, #4]
    2030:	blr	x1
    2034:	cmp	w0, #0x5
    2038:	b.ne	20a8 <ctf_func_type_info+0xe0>  // b.any
    203c:	ldr	w0, [x19, #8]
    2040:	str	x0, [x20]
    2044:	str	wzr, [x20, #12]
    2048:	ldr	x0, [sp, #56]
    204c:	ldr	x0, [x0]
    2050:	ldr	x1, [x0, #16]
    2054:	ldr	w0, [x19, #4]
    2058:	blr	x1
    205c:	str	w0, [x20, #8]
    2060:	mov	x1, x21
    2064:	ldr	x0, [sp, #56]
    2068:	bl	0 <ctf_dynamic_type>
    206c:	cbz	x0, 20bc <ctf_func_type_info+0xf4>
    2070:	ldr	x19, [x0, #48]
    2074:	ldr	w1, [x20, #8]
    2078:	mov	w0, #0x0                   	// #0
    207c:	cbz	w1, 20dc <ctf_func_type_info+0x114>
    2080:	sub	w1, w1, #0x1
    2084:	ldr	w2, [x19, w1, uxtw #2]
    2088:	cbnz	w2, 20ec <ctf_func_type_info+0x124>
    208c:	ldr	w0, [x20, #12]
    2090:	orr	w0, w0, #0x1
    2094:	str	w0, [x20, #12]
    2098:	str	w1, [x20, #8]
    209c:	mov	w0, #0x0                   	// #0
    20a0:	ldr	x21, [sp, #32]
    20a4:	b	20e0 <ctf_func_type_info+0x118>
    20a8:	mov	w1, #0x404                 	// #1028
    20ac:	ldr	x0, [sp, #56]
    20b0:	bl	0 <ctf_set_errno>
    20b4:	ldr	x21, [sp, #32]
    20b8:	b	20e0 <ctf_func_type_info+0x118>
    20bc:	ldr	x0, [sp, #64]
    20c0:	add	x19, x19, x0
    20c4:	b	2074 <ctf_func_type_info+0xac>
    20c8:	mov	w0, #0xffffffff            	// #-1
    20cc:	b	20e0 <ctf_func_type_info+0x118>
    20d0:	mov	w0, #0xffffffff            	// #-1
    20d4:	ldr	x21, [sp, #32]
    20d8:	b	20e0 <ctf_func_type_info+0x118>
    20dc:	ldr	x21, [sp, #32]
    20e0:	ldp	x19, x20, [sp, #16]
    20e4:	ldp	x29, x30, [sp], #80
    20e8:	ret
    20ec:	ldr	x21, [sp, #32]
    20f0:	b	20e0 <ctf_func_type_info+0x118>

00000000000020f4 <ctf_func_type_args>:
    20f4:	stp	x29, x30, [sp, #-96]!
    20f8:	mov	x29, sp
    20fc:	stp	x19, x20, [sp, #16]
    2100:	stp	x21, x22, [sp, #32]
    2104:	str	x0, [sp, #56]
    2108:	mov	x19, x1
    210c:	mov	w22, w2
    2110:	mov	x20, x3
    2114:	add	x2, sp, #0x40
    2118:	bl	1fc8 <ctf_func_type_info>
    211c:	tbnz	w0, #31, 21c8 <ctf_func_type_args+0xd4>
    2120:	mov	x1, x19
    2124:	ldr	x0, [sp, #56]
    2128:	bl	2d0 <ctf_type_resolve>
    212c:	mov	x21, x0
    2130:	cmn	x0, #0x1
    2134:	b.eq	21d0 <ctf_func_type_args+0xdc>  // b.none
    2138:	mov	x1, x0
    213c:	add	x0, sp, #0x38
    2140:	bl	0 <ctf_lookup_by_id>
    2144:	mov	x19, x0
    2148:	cbz	x0, 21d8 <ctf_func_type_args+0xe4>
    214c:	ldr	x0, [sp, #56]
    2150:	ldr	x1, [x0]
    2154:	ldr	x4, [x1, #24]
    2158:	add	x3, sp, #0x50
    215c:	add	x2, sp, #0x58
    2160:	mov	x1, x19
    2164:	blr	x4
    2168:	mov	x1, x21
    216c:	ldr	x0, [sp, #56]
    2170:	bl	0 <ctf_dynamic_type>
    2174:	cbz	x0, 21bc <ctf_func_type_args+0xc8>
    2178:	ldr	x4, [x0, #48]
    217c:	ldr	w0, [sp, #72]
    2180:	cmp	w0, w22
    2184:	csel	w2, w0, w22, ls  // ls = plast
    2188:	cbz	w2, 21e0 <ctf_func_type_args+0xec>
    218c:	sub	w2, w2, #0x1
    2190:	mov	x0, #0x0                   	// #0
    2194:	ldr	w1, [x4, x0, lsl #2]
    2198:	str	x1, [x20, x0, lsl #3]
    219c:	cmp	x2, x0
    21a0:	add	x0, x0, #0x1
    21a4:	b.ne	2194 <ctf_func_type_args+0xa0>  // b.any
    21a8:	mov	w0, #0x0                   	// #0
    21ac:	ldp	x19, x20, [sp, #16]
    21b0:	ldp	x21, x22, [sp, #32]
    21b4:	ldp	x29, x30, [sp], #96
    21b8:	ret
    21bc:	ldr	x4, [sp, #80]
    21c0:	add	x4, x19, x4
    21c4:	b	217c <ctf_func_type_args+0x88>
    21c8:	mov	w0, #0xffffffff            	// #-1
    21cc:	b	21ac <ctf_func_type_args+0xb8>
    21d0:	mov	w0, #0xffffffff            	// #-1
    21d4:	b	21ac <ctf_func_type_args+0xb8>
    21d8:	mov	w0, #0xffffffff            	// #-1
    21dc:	b	21ac <ctf_func_type_args+0xb8>
    21e0:	mov	w0, #0x0                   	// #0
    21e4:	b	21ac <ctf_func_type_args+0xb8>

00000000000021e8 <ctf_type_visit>:
    21e8:	stp	x29, x30, [sp, #-16]!
    21ec:	mov	x29, sp
    21f0:	mov	w6, #0x0                   	// #0
    21f4:	mov	x5, #0x0                   	// #0
    21f8:	adrp	x4, 0 <ctf_type_isparent>
    21fc:	add	x4, x4, #0x0
    2200:	bl	59c <ctf_type_rvisit>
    2204:	ldp	x29, x30, [sp], #16
    2208:	ret

ctf-util.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_list_append>:
   0:	ldr	x2, [x0]
   4:	str	x1, [x0]
   8:	str	x2, [x1]
   c:	str	xzr, [x1, #8]
  10:	cbz	x2, 1c <ctf_list_append+0x1c>
  14:	str	x1, [x2, #8]
  18:	ret
  1c:	str	x1, [x0, #8]
  20:	b	18 <ctf_list_append+0x18>

0000000000000024 <ctf_list_prepend>:
  24:	ldr	x2, [x0, #8]
  28:	str	x1, [x0, #8]
  2c:	str	xzr, [x1]
  30:	str	x2, [x1, #8]
  34:	cbz	x2, 40 <ctf_list_prepend+0x1c>
  38:	str	x1, [x2]
  3c:	ret
  40:	str	x1, [x0]
  44:	b	3c <ctf_list_prepend+0x18>

0000000000000048 <ctf_list_delete>:
  48:	ldr	x2, [x1]
  4c:	cbz	x2, 6c <ctf_list_delete+0x24>
  50:	ldr	x3, [x1, #8]
  54:	str	x3, [x2, #8]
  58:	ldr	x2, [x1, #8]
  5c:	cbz	x2, 78 <ctf_list_delete+0x30>
  60:	ldr	x0, [x1]
  64:	str	x0, [x2]
  68:	ret
  6c:	ldr	x2, [x1, #8]
  70:	str	x2, [x0, #8]
  74:	b	58 <ctf_list_delete+0x10>
  78:	ldr	x1, [x1]
  7c:	str	x1, [x0]
  80:	b	68 <ctf_list_delete+0x20>

0000000000000084 <ctf_list_empty_p>:
  84:	ldr	x1, [x0, #8]
  88:	cbz	x1, 94 <ctf_list_empty_p+0x10>
  8c:	mov	w0, #0x0                   	// #0
  90:	ret
  94:	ldr	x0, [x0]
  98:	cmp	x0, #0x0
  9c:	cset	w0, eq  // eq = none
  a0:	b	90 <ctf_list_empty_p+0xc>

00000000000000a4 <ctf_sym_to_elf64>:
  a4:	mov	x2, x0
  a8:	mov	x0, x1
  ac:	ldr	w1, [x2]
  b0:	str	w1, [x0]
  b4:	ldr	w1, [x2, #4]
  b8:	str	x1, [x0, #8]
  bc:	ldr	w1, [x2, #8]
  c0:	str	x1, [x0, #16]
  c4:	ldrb	w1, [x2, #12]
  c8:	strb	w1, [x0, #4]
  cc:	ldrb	w1, [x2, #13]
  d0:	strb	w1, [x0, #5]
  d4:	ldrh	w1, [x2, #14]
  d8:	strh	w1, [x0, #6]
  dc:	ret

00000000000000e0 <ctf_str_append>:
  e0:	stp	x29, x30, [sp, #-64]!
  e4:	mov	x29, sp
  e8:	stp	x19, x20, [sp, #16]
  ec:	mov	x19, x0
  f0:	cbz	x1, 150 <ctf_str_append+0x70>
  f4:	stp	x21, x22, [sp, #32]
  f8:	str	x23, [sp, #48]
  fc:	mov	x20, x1
 100:	mov	x21, #0x0                   	// #0
 104:	cbz	x0, 110 <ctf_str_append+0x30>
 108:	bl	0 <strlen>
 10c:	mov	x21, x0
 110:	mov	x0, x20
 114:	bl	0 <strlen>
 118:	mov	x22, x0
 11c:	add	x23, x21, x0
 120:	add	x1, x23, #0x1
 124:	mov	x0, x19
 128:	bl	0 <realloc>
 12c:	mov	x19, x0
 130:	cbz	x0, 160 <ctf_str_append+0x80>
 134:	mov	x2, x22
 138:	mov	x1, x20
 13c:	add	x0, x0, x21
 140:	bl	0 <memcpy>
 144:	strb	wzr, [x19, x23]
 148:	ldp	x21, x22, [sp, #32]
 14c:	ldr	x23, [sp, #48]
 150:	mov	x0, x19
 154:	ldp	x19, x20, [sp, #16]
 158:	ldp	x29, x30, [sp], #64
 15c:	ret
 160:	ldp	x21, x22, [sp, #32]
 164:	ldr	x23, [sp, #48]
 168:	b	150 <ctf_str_append+0x70>

000000000000016c <ctf_str_append_noerr>:
 16c:	stp	x29, x30, [sp, #-32]!
 170:	mov	x29, sp
 174:	str	x19, [sp, #16]
 178:	mov	x19, x0
 17c:	bl	e0 <ctf_str_append>
 180:	cmp	x0, #0x0
 184:	csel	x0, x0, x19, ne  // ne = any
 188:	ldr	x19, [sp, #16]
 18c:	ldp	x29, x30, [sp], #32
 190:	ret

0000000000000194 <ctf_realloc>:
 194:	stp	x29, x30, [sp, #-16]!
 198:	mov	x29, sp
 19c:	mov	x3, x0
 1a0:	mov	x0, x1
 1a4:	mov	x1, x2
 1a8:	ldr	x2, [x3, #376]
 1ac:	cbnz	x2, 1bc <ctf_realloc+0x28>
 1b0:	bl	0 <realloc>
 1b4:	ldp	x29, x30, [sp], #16
 1b8:	ret
 1bc:	mov	x1, x3
 1c0:	adrp	x0, 0 <ctf_list_append>
 1c4:	add	x0, x0, #0x0
 1c8:	bl	0 <ctf_dprintf>
 1cc:	mov	x0, #0x0                   	// #0
 1d0:	b	1b4 <ctf_realloc+0x20>

00000000000001d4 <ctf_set_open_errno>:
 1d4:	cbz	x0, 1dc <ctf_set_open_errno+0x8>
 1d8:	str	w1, [x0]
 1dc:	mov	x0, #0x0                   	// #0
 1e0:	ret

00000000000001e4 <ctf_set_errno>:
 1e4:	str	w1, [x0, #556]
 1e8:	mov	x0, #0xffffffffffffffff    	// #-1
 1ec:	ret
