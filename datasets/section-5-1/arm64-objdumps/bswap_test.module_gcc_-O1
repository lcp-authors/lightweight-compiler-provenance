
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//bswap_test.module_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <test_all>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	stp	x19, x20, [sp, #32]
  10:	stp	x21, x22, [sp, #48]
  14:	stp	x23, x24, [sp, #64]
  18:	stp	x25, x26, [sp, #80]
  1c:	mov	x19, x0
  20:	str	x0, [sp, #96]
  24:	rev	x7, x0
  28:	str	x7, [sp, #104]
  2c:	mov	x26, x0
  30:	mov	x25, x7
  34:	str	x0, [sp]
  38:	mov	x6, x0
  3c:	adrp	x0, 0 <test_all>
  40:	ldr	x5, [x0]
  44:	adrp	x0, 0 <test_all>
  48:	ldr	x4, [x0]
  4c:	mov	w3, #0x4d                  	// #77
  50:	adrp	x0, 0 <test_all>
  54:	ldr	x2, [x0]
  58:	adrp	x0, 0 <test_all>
  5c:	ldr	x1, [x0]
  60:	mov	w0, #0x1                   	// #1
  64:	bl	0 <grub_test_assert_helper>
  68:	mov	x20, #0x1                   	// #1
  6c:	adrp	x24, 0 <test_all>
  70:	adrp	x23, 0 <test_all>
  74:	adrp	x22, 0 <test_all>
  78:	add	x21, sp, #0x68
  7c:	sub	x1, x21, x20
  80:	add	x0, sp, #0x60
  84:	add	x0, x20, x0
  88:	ldrb	w1, [x1, #8]
  8c:	ldurb	w0, [x0, #-1]
  90:	cmp	w1, w0
  94:	mov	x7, x25
  98:	mov	x6, x26
  9c:	ldr	x5, [x24]
  a0:	ldr	x4, [x23]
  a4:	mov	w3, #0x53                  	// #83
  a8:	ldr	x2, [x22]
  ac:	adrp	x0, 0 <test_all>
  b0:	ldr	x1, [x0]
  b4:	cset	w0, eq  // eq = none
  b8:	bl	0 <grub_test_assert_helper>
  bc:	add	x20, x20, #0x1
  c0:	cmp	x20, #0x5
  c4:	b.ne	7c <test_all+0x7c>  // b.any
  c8:	str	w19, [sp, #96]
  cc:	rev	w21, w19
  d0:	str	w21, [sp, #104]
  d4:	and	x22, x19, #0xffffffff
  d8:	mov	w21, w21
  dc:	adrp	x0, 0 <test_all>
  e0:	ldr	x2, [x0]
  e4:	str	x22, [sp]
  e8:	mov	x7, x21
  ec:	mov	x6, x22
  f0:	adrp	x0, 0 <test_all>
  f4:	ldr	x5, [x0]
  f8:	adrp	x0, 0 <test_all>
  fc:	ldr	x4, [x0]
 100:	mov	w3, #0x39                  	// #57
 104:	add	x2, x2, #0x8
 108:	adrp	x0, 0 <test_all>
 10c:	ldr	x1, [x0]
 110:	mov	w0, #0x1                   	// #1
 114:	bl	0 <grub_test_assert_helper>
 118:	mov	x20, #0x1                   	// #1
 11c:	adrp	x26, 0 <test_all>
 120:	adrp	x25, 0 <test_all>
 124:	adrp	x24, 0 <test_all>
 128:	add	x23, sp, #0x68
 12c:	ldr	x2, [x24]
 130:	sub	x1, x23, x20
 134:	add	x0, sp, #0x60
 138:	add	x0, x20, x0
 13c:	ldrb	w1, [x1, #4]
 140:	ldurb	w0, [x0, #-1]
 144:	cmp	w1, w0
 148:	mov	x7, x21
 14c:	mov	x6, x22
 150:	ldr	x5, [x26]
 154:	ldr	x4, [x25]
 158:	mov	w3, #0x3f                  	// #63
 15c:	add	x2, x2, #0x8
 160:	adrp	x0, 0 <test_all>
 164:	ldr	x1, [x0]
 168:	cset	w0, eq  // eq = none
 16c:	bl	0 <grub_test_assert_helper>
 170:	add	x20, x20, #0x1
 174:	cmp	x20, #0x5
 178:	b.ne	12c <test_all+0x12c>  // b.any
 17c:	and	w1, w19, #0xffff
 180:	strh	w1, [sp, #96]
 184:	lsr	w7, w1, #8
 188:	orr	w7, w7, w1, lsl #8
 18c:	and	w7, w7, #0xffff
 190:	strh	w7, [sp, #104]
 194:	lsr	w0, w7, #8
 198:	orr	w0, w0, w7, lsl #8
 19c:	and	x19, x19, #0xffff
 1a0:	and	x20, x7, #0xffff
 1a4:	adrp	x2, 0 <test_all>
 1a8:	ldr	x21, [x2]
 1ac:	add	x21, x21, #0x10
 1b0:	adrp	x2, 0 <test_all>
 1b4:	ldr	x23, [x2]
 1b8:	cmp	w1, w0, uxth
 1bc:	and	x0, x0, #0xffff
 1c0:	str	x0, [sp]
 1c4:	mov	x7, x20
 1c8:	mov	x6, x19
 1cc:	adrp	x0, 0 <test_all>
 1d0:	ldr	x5, [x0]
 1d4:	adrp	x0, 0 <test_all>
 1d8:	ldr	x4, [x0]
 1dc:	mov	w3, #0x25                  	// #37
 1e0:	mov	x2, x21
 1e4:	mov	x1, x23
 1e8:	cset	w0, eq  // eq = none
 1ec:	bl	0 <grub_test_assert_helper>
 1f0:	adrp	x0, 0 <test_all>
 1f4:	ldr	x24, [x0]
 1f8:	adrp	x0, 0 <test_all>
 1fc:	ldr	x22, [x0]
 200:	ldrb	w1, [sp, #96]
 204:	ldrb	w0, [sp, #105]
 208:	cmp	w1, w0
 20c:	mov	x7, x20
 210:	mov	x6, x19
 214:	mov	x5, x24
 218:	mov	x4, x22
 21c:	mov	w3, #0x2b                  	// #43
 220:	mov	x2, x21
 224:	mov	x1, x23
 228:	cset	w0, eq  // eq = none
 22c:	bl	0 <grub_test_assert_helper>
 230:	ldrb	w1, [sp, #97]
 234:	ldrb	w0, [sp, #104]
 238:	cmp	w1, w0
 23c:	mov	x7, x20
 240:	mov	x6, x19
 244:	mov	x5, x24
 248:	mov	x4, x22
 24c:	mov	w3, #0x2b                  	// #43
 250:	mov	x2, x21
 254:	mov	x1, x23
 258:	cset	w0, eq  // eq = none
 25c:	bl	0 <grub_test_assert_helper>
 260:	ldp	x19, x20, [sp, #32]
 264:	ldp	x21, x22, [sp, #48]
 268:	ldp	x23, x24, [sp, #64]
 26c:	ldp	x25, x26, [sp, #80]
 270:	ldp	x29, x30, [sp, #16]
 274:	add	sp, sp, #0x70
 278:	ret
 27c:	nop
	...

00000000000002c0 <bswap_test>:
 2c0:	stp	x29, x30, [sp, #-48]!
 2c4:	mov	x29, sp
 2c8:	stp	x19, x20, [sp, #16]
 2cc:	stp	x21, x22, [sp, #32]
 2d0:	mov	x0, #0xffffffffffffffff    	// #-1
 2d4:	bl	0 <test_all>
 2d8:	mov	x0, #0x1                   	// #1
 2dc:	bl	0 <test_all>
 2e0:	mov	x0, #0x2                   	// #2
 2e4:	bl	0 <test_all>
 2e8:	mov	x0, #0x0                   	// #0
 2ec:	bl	0 <test_all>
 2f0:	mov	x0, #0x708                 	// #1800
 2f4:	movk	x0, #0x506, lsl #16
 2f8:	movk	x0, #0x304, lsl #32
 2fc:	movk	x0, #0x102, lsl #48
 300:	bl	0 <test_all>
 304:	mov	x20, #0x9c40                	// #40000
 308:	mov	x19, #0x7                   	// #7
 30c:	mov	x22, #0x194                 	// #404
 310:	mov	x21, #0x1                   	// #1
 314:	add	x22, x22, x22, lsl #4
 318:	add	x0, x19, x19, lsl #1
 31c:	add	x0, x19, x0, lsl #2
 320:	add	x0, x0, x22
 324:	lsl	x1, x19, #3
 328:	sub	x1, x1, x19
 32c:	add	x19, x19, x1, lsl #2
 330:	add	x1, x0, x0, lsl #1
 334:	lsl	x1, x1, #3
 338:	sub	x1, x1, x0
 33c:	adds	x19, x1, x19
 340:	csel	x19, x19, x21, ne  // ne = any
 344:	cmp	x0, #0x0
 348:	csel	x22, x0, x21, ne  // ne = any
 34c:	mov	x0, x22
 350:	bl	0 <test_all>
 354:	mov	x0, x19
 358:	bl	0 <test_all>
 35c:	subs	x20, x20, #0x1
 360:	b.ne	314 <bswap_test+0x54>  // b.any
 364:	ldp	x19, x20, [sp, #16]
 368:	ldp	x21, x22, [sp, #32]
 36c:	ldp	x29, x30, [sp], #48
 370:	ret

0000000000000374 <grub_mod_init>:
 374:	stp	x29, x30, [sp, #-16]!
 378:	mov	x29, sp
 37c:	adrp	x0, 0 <test_all>
 380:	ldr	x1, [x0]
 384:	adrp	x0, 0 <test_all>
 388:	ldr	x0, [x0]
 38c:	bl	0 <grub_test_register>
 390:	ldp	x29, x30, [sp], #16
 394:	ret
	...

00000000000003a8 <grub_mod_fini>:
 3a8:	stp	x29, x30, [sp, #-16]!
 3ac:	mov	x29, sp
 3b0:	adrp	x0, 0 <test_all>
 3b4:	ldr	x0, [x0]
 3b8:	bl	0 <grub_test_unregister>
 3bc:	ldp	x29, x30, [sp], #16
 3c0:	ret
 3c4:	nop
	...
