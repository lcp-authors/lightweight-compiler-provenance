
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-socket-proxyd_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401900 <_init>:
  401900:	stp	x29, x30, [sp, #-16]!
  401904:	mov	x29, sp
  401908:	bl	401d68 <call_weak_fn>
  40190c:	ldp	x29, x30, [sp], #16
  401910:	ret

Disassembly of section .plt:

0000000000401918 <__libc_start_main@plt-0x20>:
  401918:	stp	x16, x30, [sp, #-16]!
  40191c:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401920:	ldr	x17, [x16, #3592]
  401924:	add	x16, x16, #0xe08
  401928:	br	x17
  40192c:	nop
  401930:	nop
  401934:	nop

0000000000401938 <__libc_start_main@plt>:
  401938:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  40193c:	ldr	x17, [x16, #3600]
  401940:	add	x16, x16, #0xe10
  401944:	br	x17

0000000000401948 <abort@plt>:
  401948:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  40194c:	ldr	x17, [x16, #3608]
  401950:	add	x16, x16, #0xe18
  401954:	br	x17

0000000000401958 <__gmon_start__@plt>:
  401958:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  40195c:	ldr	x17, [x16, #3616]
  401960:	add	x16, x16, #0xe20
  401964:	br	x17

0000000000401968 <ask_password_agent_close@plt>:
  401968:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  40196c:	ldr	x17, [x16, #3624]
  401970:	add	x16, x16, #0xe28
  401974:	br	x17

0000000000401978 <polkit_agent_close@plt>:
  401978:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  40197c:	ldr	x17, [x16, #3632]
  401980:	add	x16, x16, #0xe30
  401984:	br	x17

0000000000401988 <pager_close@plt>:
  401988:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  40198c:	ldr	x17, [x16, #3640]
  401990:	add	x16, x16, #0xe38
  401994:	br	x17

0000000000401998 <mac_selinux_finish@plt>:
  401998:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  40199c:	ldr	x17, [x16, #3648]
  4019a0:	add	x16, x16, #0xe40
  4019a4:	br	x17

00000000004019a8 <memset@plt>:
  4019a8:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  4019ac:	ldr	x17, [x16, #3656]
  4019b0:	add	x16, x16, #0xe48
  4019b4:	br	x17

00000000004019b8 <log_parse_environment_realm@plt>:
  4019b8:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  4019bc:	ldr	x17, [x16, #3664]
  4019c0:	add	x16, x16, #0xe50
  4019c4:	br	x17

00000000004019c8 <log_open@plt>:
  4019c8:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  4019cc:	ldr	x17, [x16, #3672]
  4019d0:	add	x16, x16, #0xe58
  4019d4:	br	x17

00000000004019d8 <sd_event_default@plt>:
  4019d8:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  4019dc:	ldr	x17, [x16, #3680]
  4019e0:	add	x16, x16, #0xe60
  4019e4:	br	x17

00000000004019e8 <log_get_max_level_realm@plt>:
  4019e8:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  4019ec:	ldr	x17, [x16, #3688]
  4019f0:	add	x16, x16, #0xe68
  4019f4:	br	x17

00000000004019f8 <log_internal_realm@plt>:
  4019f8:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  4019fc:	ldr	x17, [x16, #3696]
  401a00:	add	x16, x16, #0xe70
  401a04:	br	x17

0000000000401a08 <abs@plt>:
  401a08:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401a0c:	ldr	x17, [x16, #3704]
  401a10:	add	x16, x16, #0xe78
  401a14:	br	x17

0000000000401a18 <sd_resolve_default@plt>:
  401a18:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401a1c:	ldr	x17, [x16, #3712]
  401a20:	add	x16, x16, #0xe80
  401a24:	br	x17

0000000000401a28 <sd_resolve_attach_event@plt>:
  401a28:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401a2c:	ldr	x17, [x16, #3720]
  401a30:	add	x16, x16, #0xe88
  401a34:	br	x17

0000000000401a38 <sd_event_set_watchdog@plt>:
  401a38:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401a3c:	ldr	x17, [x16, #3728]
  401a40:	add	x16, x16, #0xe90
  401a44:	br	x17

0000000000401a48 <sd_listen_fds@plt>:
  401a48:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401a4c:	ldr	x17, [x16, #3736]
  401a50:	add	x16, x16, #0xe98
  401a54:	br	x17

0000000000401a58 <sd_event_loop@plt>:
  401a58:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401a5c:	ldr	x17, [x16, #3744]
  401a60:	add	x16, x16, #0xea0
  401a64:	br	x17

0000000000401a68 <log_assert_failed_realm@plt>:
  401a68:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401a6c:	ldr	x17, [x16, #3752]
  401a70:	add	x16, x16, #0xea8
  401a74:	br	x17

0000000000401a78 <sd_event_source_unref@plt>:
  401a78:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401a7c:	ldr	x17, [x16, #3760]
  401a80:	add	x16, x16, #0xeb0
  401a84:	br	x17

0000000000401a88 <sd_event_unref@plt>:
  401a88:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401a8c:	ldr	x17, [x16, #3768]
  401a90:	add	x16, x16, #0xeb8
  401a94:	br	x17

0000000000401a98 <sd_resolve_unref@plt>:
  401a98:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401a9c:	ldr	x17, [x16, #3776]
  401aa0:	add	x16, x16, #0xec0
  401aa4:	br	x17

0000000000401aa8 <getopt_long@plt>:
  401aa8:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401aac:	ldr	x17, [x16, #3784]
  401ab0:	add	x16, x16, #0xec8
  401ab4:	br	x17

0000000000401ab8 <version@plt>:
  401ab8:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401abc:	ldr	x17, [x16, #3792]
  401ac0:	add	x16, x16, #0xed0
  401ac4:	br	x17

0000000000401ac8 <log_assert_failed_unreachable_realm@plt>:
  401ac8:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401acc:	ldr	x17, [x16, #3800]
  401ad0:	add	x16, x16, #0xed8
  401ad4:	br	x17

0000000000401ad8 <internal_set_ensure_allocated@plt>:
  401ad8:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401adc:	ldr	x17, [x16, #3808]
  401ae0:	add	x16, x16, #0xee0
  401ae4:	br	x17

0000000000401ae8 <log_oom_internal@plt>:
  401ae8:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401aec:	ldr	x17, [x16, #3816]
  401af0:	add	x16, x16, #0xee8
  401af4:	br	x17

0000000000401af8 <sd_is_socket@plt>:
  401af8:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401afc:	ldr	x17, [x16, #3824]
  401b00:	add	x16, x16, #0xef0
  401b04:	br	x17

0000000000401b08 <fd_nonblock@plt>:
  401b08:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401b0c:	ldr	x17, [x16, #3832]
  401b10:	add	x16, x16, #0xef8
  401b14:	br	x17

0000000000401b18 <sd_event_add_io@plt>:
  401b18:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401b1c:	ldr	x17, [x16, #3840]
  401b20:	add	x16, x16, #0xf00
  401b24:	br	x17

0000000000401b28 <set_put@plt>:
  401b28:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401b2c:	ldr	x17, [x16, #3848]
  401b30:	add	x16, x16, #0xf08
  401b34:	br	x17

0000000000401b38 <sd_event_source_set_enabled@plt>:
  401b38:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401b3c:	ldr	x17, [x16, #3856]
  401b40:	add	x16, x16, #0xf10
  401b44:	br	x17

0000000000401b48 <internal_hashmap_first_key_and_value@plt>:
  401b48:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401b4c:	ldr	x17, [x16, #3864]
  401b50:	add	x16, x16, #0xf18
  401b54:	br	x17

0000000000401b58 <internal_hashmap_free@plt>:
  401b58:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401b5c:	ldr	x17, [x16, #3872]
  401b60:	add	x16, x16, #0xf20
  401b64:	br	x17

0000000000401b68 <safe_close@plt>:
  401b68:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401b6c:	ldr	x17, [x16, #3880]
  401b70:	add	x16, x16, #0xf28
  401b74:	br	x17

0000000000401b78 <safe_close_pair@plt>:
  401b78:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401b7c:	ldr	x17, [x16, #3888]
  401b80:	add	x16, x16, #0xf30
  401b84:	br	x17

0000000000401b88 <sd_resolve_query_unref@plt>:
  401b88:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401b8c:	ldr	x17, [x16, #3896]
  401b90:	add	x16, x16, #0xf38
  401b94:	br	x17

0000000000401b98 <free@plt>:
  401b98:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401b9c:	ldr	x17, [x16, #3904]
  401ba0:	add	x16, x16, #0xf40
  401ba4:	br	x17

0000000000401ba8 <internal_hashmap_remove@plt>:
  401ba8:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401bac:	ldr	x17, [x16, #3912]
  401bb0:	add	x16, x16, #0xf48
  401bb4:	br	x17

0000000000401bb8 <terminal_urlify_man@plt>:
  401bb8:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401bbc:	ldr	x17, [x16, #3920]
  401bc0:	add	x16, x16, #0xf50
  401bc4:	br	x17

0000000000401bc8 <printf@plt>:
  401bc8:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401bcc:	ldr	x17, [x16, #3928]
  401bd0:	add	x16, x16, #0xf58
  401bd4:	br	x17

0000000000401bd8 <safe_atou_full@plt>:
  401bd8:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401bdc:	ldr	x17, [x16, #3936]
  401be0:	add	x16, x16, #0xf60
  401be4:	br	x17

0000000000401be8 <accept4@plt>:
  401be8:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401bec:	ldr	x17, [x16, #3944]
  401bf0:	add	x16, x16, #0xf68
  401bf4:	br	x17

0000000000401bf8 <__errno_location@plt>:
  401bf8:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401bfc:	ldr	x17, [x16, #3952]
  401c00:	add	x16, x16, #0xf70
  401c04:	br	x17

0000000000401c08 <getpeername_pretty@plt>:
  401c08:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401c0c:	ldr	x17, [x16, #3960]
  401c10:	add	x16, x16, #0xf78
  401c14:	br	x17

0000000000401c18 <sd_event_exit@plt>:
  401c18:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401c1c:	ldr	x17, [x16, #3968]
  401c20:	add	x16, x16, #0xf80
  401c24:	br	x17

0000000000401c28 <calloc@plt>:
  401c28:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401c2c:	ldr	x17, [x16, #3976]
  401c30:	add	x16, x16, #0xf88
  401c34:	br	x17

0000000000401c38 <internal_hashmap_size@plt>:
  401c38:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401c3c:	ldr	x17, [x16, #3984]
  401c40:	add	x16, x16, #0xf90
  401c44:	br	x17

0000000000401c48 <sockaddr_un_set_path@plt>:
  401c48:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401c4c:	ldr	x17, [x16, #3992]
  401c50:	add	x16, x16, #0xf98
  401c54:	br	x17

0000000000401c58 <strrchr@plt>:
  401c58:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401c5c:	ldr	x17, [x16, #4000]
  401c60:	add	x16, x16, #0xfa0
  401c64:	br	x17

0000000000401c68 <strnlen@plt>:
  401c68:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401c6c:	ldr	x17, [x16, #4008]
  401c70:	add	x16, x16, #0xfa8
  401c74:	br	x17

0000000000401c78 <memcpy@plt>:
  401c78:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401c7c:	ldr	x17, [x16, #4016]
  401c80:	add	x16, x16, #0xfb0
  401c84:	br	x17

0000000000401c88 <resolve_getaddrinfo_with_destroy_callback@plt>:
  401c88:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401c8c:	ldr	x17, [x16, #4024]
  401c90:	add	x16, x16, #0xfb8
  401c94:	br	x17

0000000000401c98 <socket@plt>:
  401c98:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401c9c:	ldr	x17, [x16, #4032]
  401ca0:	add	x16, x16, #0xfc0
  401ca4:	br	x17

0000000000401ca8 <connect@plt>:
  401ca8:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401cac:	ldr	x17, [x16, #4040]
  401cb0:	add	x16, x16, #0xfc8
  401cb4:	br	x17

0000000000401cb8 <gai_strerror@plt>:
  401cb8:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401cbc:	ldr	x17, [x16, #4048]
  401cc0:	add	x16, x16, #0xfd0
  401cc4:	br	x17

0000000000401cc8 <getsockopt@plt>:
  401cc8:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401ccc:	ldr	x17, [x16, #4056]
  401cd0:	add	x16, x16, #0xfd8
  401cd4:	br	x17

0000000000401cd8 <pipe2@plt>:
  401cd8:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401cdc:	ldr	x17, [x16, #4064]
  401ce0:	add	x16, x16, #0xfe0
  401ce4:	br	x17

0000000000401ce8 <fcntl64@plt>:
  401ce8:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401cec:	ldr	x17, [x16, #4072]
  401cf0:	add	x16, x16, #0xfe8
  401cf4:	br	x17

0000000000401cf8 <sd_event_source_set_io_events@plt>:
  401cf8:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401cfc:	ldr	x17, [x16, #4080]
  401d00:	add	x16, x16, #0xff0
  401d04:	br	x17

0000000000401d08 <splice@plt>:
  401d08:	adrp	x16, 41f000 <__FRAME_END__+0x18758>
  401d0c:	ldr	x17, [x16, #4088]
  401d10:	add	x16, x16, #0xff8
  401d14:	br	x17

Disassembly of section .text:

0000000000401d18 <_start>:
  401d18:	mov	x29, #0x0                   	// #0
  401d1c:	mov	x30, #0x0                   	// #0
  401d20:	mov	x5, x0
  401d24:	ldr	x1, [sp]
  401d28:	add	x2, sp, #0x8
  401d2c:	mov	x6, sp
  401d30:	movz	x0, #0x0, lsl #48
  401d34:	movk	x0, #0x0, lsl #32
  401d38:	movk	x0, #0x40, lsl #16
  401d3c:	movk	x0, #0x1ee0
  401d40:	movz	x3, #0x0, lsl #48
  401d44:	movk	x3, #0x0, lsl #32
  401d48:	movk	x3, #0x40, lsl #16
  401d4c:	movk	x3, #0x58d8
  401d50:	movz	x4, #0x0, lsl #48
  401d54:	movk	x4, #0x0, lsl #32
  401d58:	movk	x4, #0x40, lsl #16
  401d5c:	movk	x4, #0x5958
  401d60:	bl	401938 <__libc_start_main@plt>
  401d64:	bl	401948 <abort@plt>

0000000000401d68 <call_weak_fn>:
  401d68:	adrp	x0, 41f000 <__FRAME_END__+0x18758>
  401d6c:	ldr	x0, [x0, #3552]
  401d70:	cbz	x0, 401d78 <call_weak_fn+0x10>
  401d74:	b	401958 <__gmon_start__@plt>
  401d78:	ret

0000000000401d7c <deregister_tm_clones>:
  401d7c:	stp	x29, x30, [sp, #-32]!
  401d80:	mov	x29, sp
  401d84:	adrp	x0, 420000 <arg_connections_max>
  401d88:	add	x0, x0, #0x0
  401d8c:	str	x0, [sp, #24]
  401d90:	ldr	x0, [sp, #24]
  401d94:	str	x0, [sp, #24]
  401d98:	ldr	x1, [sp, #24]
  401d9c:	adrp	x0, 420000 <arg_connections_max>
  401da0:	add	x0, x0, #0x0
  401da4:	cmp	x1, x0
  401da8:	b.eq	401de4 <deregister_tm_clones+0x68>  // b.none
  401dac:	adrp	x0, 405000 <traffic_cb+0xf0>
  401db0:	add	x0, x0, #0x970
  401db4:	ldr	x0, [x0]
  401db8:	str	x0, [sp, #16]
  401dbc:	ldr	x0, [sp, #16]
  401dc0:	str	x0, [sp, #16]
  401dc4:	ldr	x0, [sp, #16]
  401dc8:	cmp	x0, #0x0
  401dcc:	b.eq	401de8 <deregister_tm_clones+0x6c>  // b.none
  401dd0:	ldr	x1, [sp, #16]
  401dd4:	adrp	x0, 420000 <arg_connections_max>
  401dd8:	add	x0, x0, #0x0
  401ddc:	blr	x1
  401de0:	b	401de8 <deregister_tm_clones+0x6c>
  401de4:	nop
  401de8:	ldp	x29, x30, [sp], #32
  401dec:	ret

0000000000401df0 <register_tm_clones>:
  401df0:	stp	x29, x30, [sp, #-48]!
  401df4:	mov	x29, sp
  401df8:	adrp	x0, 420000 <arg_connections_max>
  401dfc:	add	x0, x0, #0x0
  401e00:	str	x0, [sp, #40]
  401e04:	ldr	x0, [sp, #40]
  401e08:	str	x0, [sp, #40]
  401e0c:	ldr	x1, [sp, #40]
  401e10:	adrp	x0, 420000 <arg_connections_max>
  401e14:	add	x0, x0, #0x0
  401e18:	sub	x0, x1, x0
  401e1c:	asr	x0, x0, #3
  401e20:	lsr	x1, x0, #63
  401e24:	add	x0, x1, x0
  401e28:	asr	x0, x0, #1
  401e2c:	str	x0, [sp, #32]
  401e30:	ldr	x0, [sp, #32]
  401e34:	cmp	x0, #0x0
  401e38:	b.eq	401e78 <register_tm_clones+0x88>  // b.none
  401e3c:	adrp	x0, 405000 <traffic_cb+0xf0>
  401e40:	add	x0, x0, #0x978
  401e44:	ldr	x0, [x0]
  401e48:	str	x0, [sp, #24]
  401e4c:	ldr	x0, [sp, #24]
  401e50:	str	x0, [sp, #24]
  401e54:	ldr	x0, [sp, #24]
  401e58:	cmp	x0, #0x0
  401e5c:	b.eq	401e7c <register_tm_clones+0x8c>  // b.none
  401e60:	ldr	x2, [sp, #24]
  401e64:	ldr	x1, [sp, #32]
  401e68:	adrp	x0, 420000 <arg_connections_max>
  401e6c:	add	x0, x0, #0x0
  401e70:	blr	x2
  401e74:	b	401e7c <register_tm_clones+0x8c>
  401e78:	nop
  401e7c:	ldp	x29, x30, [sp], #48
  401e80:	ret

0000000000401e84 <__do_global_dtors_aux>:
  401e84:	stp	x29, x30, [sp, #-16]!
  401e88:	mov	x29, sp
  401e8c:	adrp	x0, 420000 <arg_connections_max>
  401e90:	add	x0, x0, #0x8
  401e94:	ldrb	w0, [x0]
  401e98:	and	x0, x0, #0xff
  401e9c:	cmp	x0, #0x0
  401ea0:	b.ne	401ebc <__do_global_dtors_aux+0x38>  // b.any
  401ea4:	bl	401d7c <deregister_tm_clones>
  401ea8:	adrp	x0, 420000 <arg_connections_max>
  401eac:	add	x0, x0, #0x8
  401eb0:	mov	w1, #0x1                   	// #1
  401eb4:	strb	w1, [x0]
  401eb8:	b	401ec0 <__do_global_dtors_aux+0x3c>
  401ebc:	nop
  401ec0:	ldp	x29, x30, [sp], #16
  401ec4:	ret

0000000000401ec8 <frame_dummy>:
  401ec8:	stp	x29, x30, [sp, #-16]!
  401ecc:	mov	x29, sp
  401ed0:	bl	401df0 <register_tm_clones>
  401ed4:	nop
  401ed8:	ldp	x29, x30, [sp], #16
  401edc:	ret

0000000000401ee0 <main>:
  401ee0:	sub	sp, sp, #0x30
  401ee4:	stp	x29, x30, [sp, #32]
  401ee8:	add	x29, sp, #0x20
  401eec:	mov	w8, wzr
  401ef0:	mov	w9, #0x1                   	// #1
  401ef4:	stur	wzr, [x29, #-4]
  401ef8:	stur	w0, [x29, #-8]
  401efc:	str	x1, [sp, #16]
  401f00:	ldur	w0, [x29, #-8]
  401f04:	ldr	x1, [sp, #16]
  401f08:	str	w8, [sp, #8]
  401f0c:	str	w9, [sp, #4]
  401f10:	bl	401f58 <save_argc_argv>
  401f14:	ldur	w0, [x29, #-8]
  401f18:	ldr	x1, [sp, #16]
  401f1c:	bl	401f8c <run>
  401f20:	str	w0, [sp, #12]
  401f24:	bl	401968 <ask_password_agent_close@plt>
  401f28:	bl	401978 <polkit_agent_close@plt>
  401f2c:	bl	401988 <pager_close@plt>
  401f30:	bl	401998 <mac_selinux_finish@plt>
  401f34:	bl	4024b8 <static_destruct>
  401f38:	ldr	w8, [sp, #12]
  401f3c:	cmp	w8, #0x0
  401f40:	ldr	w8, [sp, #4]
  401f44:	ldr	w9, [sp, #8]
  401f48:	csel	w0, w8, w9, lt  // lt = tstop
  401f4c:	ldp	x29, x30, [sp, #32]
  401f50:	add	sp, sp, #0x30
  401f54:	ret

0000000000401f58 <save_argc_argv>:
  401f58:	sub	sp, sp, #0x10
  401f5c:	adrp	x8, 420000 <arg_connections_max>
  401f60:	add	x8, x8, #0x18
  401f64:	adrp	x9, 420000 <arg_connections_max>
  401f68:	add	x9, x9, #0x20
  401f6c:	str	w0, [sp, #12]
  401f70:	str	x1, [sp]
  401f74:	ldr	w10, [sp, #12]
  401f78:	str	w10, [x8]
  401f7c:	ldr	x8, [sp]
  401f80:	str	x8, [x9]
  401f84:	add	sp, sp, #0x10
  401f88:	ret

0000000000401f8c <run>:
  401f8c:	sub	sp, sp, #0xf0
  401f90:	stp	x29, x30, [sp, #224]
  401f94:	add	x29, sp, #0xe0
  401f98:	mov	x2, #0x20                  	// #32
  401f9c:	mov	w8, wzr
  401fa0:	adrp	x9, 405000 <traffic_cb+0xf0>
  401fa4:	add	x9, x9, #0xcf0
  401fa8:	add	x9, x9, #0x3
  401fac:	adrp	x10, 405000 <traffic_cb+0xf0>
  401fb0:	add	x10, x10, #0xd14
  401fb4:	sub	x11, x29, #0x30
  401fb8:	stur	w0, [x29, #-8]
  401fbc:	stur	x1, [x29, #-16]
  401fc0:	mov	x0, x11
  401fc4:	mov	w3, w8
  401fc8:	mov	w1, w3
  401fcc:	str	w8, [sp, #60]
  401fd0:	str	x9, [sp, #48]
  401fd4:	str	x10, [sp, #40]
  401fd8:	bl	4019a8 <memset@plt>
  401fdc:	ldr	w0, [sp, #60]
  401fe0:	bl	4019b8 <log_parse_environment_realm@plt>
  401fe4:	bl	4019c8 <log_open@plt>
  401fe8:	ldur	w8, [x29, #-8]
  401fec:	ldur	x1, [x29, #-16]
  401ff0:	mov	w0, w8
  401ff4:	bl	402630 <parse_argv>
  401ff8:	stur	w0, [x29, #-52]
  401ffc:	ldur	w8, [x29, #-52]
  402000:	cmp	w8, #0x0
  402004:	cset	w8, gt
  402008:	tbnz	w8, #0, 402020 <run+0x94>
  40200c:	ldur	w8, [x29, #-52]
  402010:	stur	w8, [x29, #-4]
  402014:	mov	w8, #0x1                   	// #1
  402018:	stur	w8, [x29, #-64]
  40201c:	b	4024a0 <run+0x514>
  402020:	sub	x0, x29, #0x30
  402024:	bl	4019d8 <sd_event_default@plt>
  402028:	stur	w0, [x29, #-52]
  40202c:	ldur	w8, [x29, #-52]
  402030:	cmp	w8, #0x0
  402034:	cset	w8, ge  // ge = tcont
  402038:	tbnz	w8, #0, 4020c8 <run+0x13c>
  40203c:	mov	w8, #0x3                   	// #3
  402040:	stur	w8, [x29, #-68]
  402044:	ldur	w8, [x29, #-52]
  402048:	stur	w8, [x29, #-72]
  40204c:	stur	wzr, [x29, #-76]
  402050:	ldur	w0, [x29, #-76]
  402054:	bl	4019e8 <log_get_max_level_realm@plt>
  402058:	ldur	w8, [x29, #-68]
  40205c:	and	w8, w8, #0x7
  402060:	cmp	w0, w8
  402064:	b.lt	402098 <run+0x10c>  // b.tstop
  402068:	ldur	w8, [x29, #-76]
  40206c:	ldur	w9, [x29, #-68]
  402070:	orr	w0, w9, w8, lsl #10
  402074:	ldur	w1, [x29, #-72]
  402078:	ldr	x2, [sp, #48]
  40207c:	mov	w3, #0x277                 	// #631
  402080:	ldr	x4, [sp, #40]
  402084:	adrp	x5, 405000 <traffic_cb+0xf0>
  402088:	add	x5, x5, #0xd18
  40208c:	bl	4019f8 <log_internal_realm@plt>
  402090:	str	w0, [sp, #36]
  402094:	b	4020ac <run+0x120>
  402098:	ldur	w0, [x29, #-72]
  40209c:	bl	401a08 <abs@plt>
  4020a0:	mov	w8, wzr
  4020a4:	subs	w8, w8, w0, uxtb
  4020a8:	str	w8, [sp, #36]
  4020ac:	ldr	w8, [sp, #36]
  4020b0:	stur	w8, [x29, #-80]
  4020b4:	ldur	w8, [x29, #-80]
  4020b8:	stur	w8, [x29, #-4]
  4020bc:	mov	w8, #0x1                   	// #1
  4020c0:	stur	w8, [x29, #-64]
  4020c4:	b	4024a0 <run+0x514>
  4020c8:	sub	x8, x29, #0x30
  4020cc:	add	x0, x8, #0x8
  4020d0:	bl	401a18 <sd_resolve_default@plt>
  4020d4:	stur	w0, [x29, #-52]
  4020d8:	ldur	w9, [x29, #-52]
  4020dc:	cmp	w9, #0x0
  4020e0:	cset	w9, ge  // ge = tcont
  4020e4:	tbnz	w9, #0, 402174 <run+0x1e8>
  4020e8:	mov	w8, #0x3                   	// #3
  4020ec:	stur	w8, [x29, #-84]
  4020f0:	ldur	w8, [x29, #-52]
  4020f4:	stur	w8, [x29, #-88]
  4020f8:	stur	wzr, [x29, #-92]
  4020fc:	ldur	w0, [x29, #-92]
  402100:	bl	4019e8 <log_get_max_level_realm@plt>
  402104:	ldur	w8, [x29, #-84]
  402108:	and	w8, w8, #0x7
  40210c:	cmp	w0, w8
  402110:	b.lt	402144 <run+0x1b8>  // b.tstop
  402114:	ldur	w8, [x29, #-92]
  402118:	ldur	w9, [x29, #-84]
  40211c:	orr	w0, w9, w8, lsl #10
  402120:	ldur	w1, [x29, #-88]
  402124:	ldr	x2, [sp, #48]
  402128:	mov	w3, #0x27b                 	// #635
  40212c:	ldr	x4, [sp, #40]
  402130:	adrp	x5, 405000 <traffic_cb+0xf0>
  402134:	add	x5, x5, #0xd3a
  402138:	bl	4019f8 <log_internal_realm@plt>
  40213c:	str	w0, [sp, #32]
  402140:	b	402158 <run+0x1cc>
  402144:	ldur	w0, [x29, #-88]
  402148:	bl	401a08 <abs@plt>
  40214c:	mov	w8, wzr
  402150:	subs	w8, w8, w0, uxtb
  402154:	str	w8, [sp, #32]
  402158:	ldr	w8, [sp, #32]
  40215c:	stur	w8, [x29, #-96]
  402160:	ldur	w8, [x29, #-96]
  402164:	stur	w8, [x29, #-4]
  402168:	mov	w8, #0x1                   	// #1
  40216c:	stur	w8, [x29, #-64]
  402170:	b	4024a0 <run+0x514>
  402174:	sub	x8, x29, #0x30
  402178:	ldr	x0, [x8, #8]
  40217c:	ldur	x1, [x29, #-48]
  402180:	mov	x8, xzr
  402184:	mov	x2, x8
  402188:	bl	401a28 <sd_resolve_attach_event@plt>
  40218c:	stur	w0, [x29, #-52]
  402190:	ldur	w9, [x29, #-52]
  402194:	cmp	w9, #0x0
  402198:	cset	w9, ge  // ge = tcont
  40219c:	tbnz	w9, #0, 40222c <run+0x2a0>
  4021a0:	mov	w8, #0x3                   	// #3
  4021a4:	stur	w8, [x29, #-100]
  4021a8:	ldur	w8, [x29, #-52]
  4021ac:	stur	w8, [x29, #-104]
  4021b0:	stur	wzr, [x29, #-108]
  4021b4:	ldur	w0, [x29, #-108]
  4021b8:	bl	4019e8 <log_get_max_level_realm@plt>
  4021bc:	ldur	w8, [x29, #-100]
  4021c0:	and	w8, w8, #0x7
  4021c4:	cmp	w0, w8
  4021c8:	b.lt	4021fc <run+0x270>  // b.tstop
  4021cc:	ldur	w8, [x29, #-108]
  4021d0:	ldur	w9, [x29, #-100]
  4021d4:	orr	w0, w9, w8, lsl #10
  4021d8:	ldur	w1, [x29, #-104]
  4021dc:	ldr	x2, [sp, #48]
  4021e0:	mov	w3, #0x27f                 	// #639
  4021e4:	ldr	x4, [sp, #40]
  4021e8:	adrp	x5, 405000 <traffic_cb+0xf0>
  4021ec:	add	x5, x5, #0xd5a
  4021f0:	bl	4019f8 <log_internal_realm@plt>
  4021f4:	str	w0, [sp, #28]
  4021f8:	b	402210 <run+0x284>
  4021fc:	ldur	w0, [x29, #-104]
  402200:	bl	401a08 <abs@plt>
  402204:	mov	w8, wzr
  402208:	subs	w8, w8, w0, uxtb
  40220c:	str	w8, [sp, #28]
  402210:	ldr	w8, [sp, #28]
  402214:	str	w8, [sp, #112]
  402218:	ldr	w8, [sp, #112]
  40221c:	stur	w8, [x29, #-4]
  402220:	mov	w8, #0x1                   	// #1
  402224:	stur	w8, [x29, #-64]
  402228:	b	4024a0 <run+0x514>
  40222c:	ldur	x0, [x29, #-48]
  402230:	mov	w8, #0x1                   	// #1
  402234:	mov	w1, w8
  402238:	str	w8, [sp, #24]
  40223c:	bl	401a38 <sd_event_set_watchdog@plt>
  402240:	ldr	w8, [sp, #24]
  402244:	mov	w0, w8
  402248:	bl	401a48 <sd_listen_fds@plt>
  40224c:	stur	w0, [x29, #-52]
  402250:	ldur	w8, [x29, #-52]
  402254:	cmp	w8, #0x0
  402258:	cset	w8, ge  // ge = tcont
  40225c:	tbnz	w8, #0, 4022ec <run+0x360>
  402260:	mov	w8, #0x3                   	// #3
  402264:	str	w8, [sp, #108]
  402268:	ldur	w8, [x29, #-52]
  40226c:	str	w8, [sp, #104]
  402270:	str	wzr, [sp, #100]
  402274:	ldr	w0, [sp, #100]
  402278:	bl	4019e8 <log_get_max_level_realm@plt>
  40227c:	ldr	w8, [sp, #108]
  402280:	and	w8, w8, #0x7
  402284:	cmp	w0, w8
  402288:	b.lt	4022bc <run+0x330>  // b.tstop
  40228c:	ldr	w8, [sp, #100]
  402290:	ldr	w9, [sp, #108]
  402294:	orr	w0, w9, w8, lsl #10
  402298:	ldr	w1, [sp, #104]
  40229c:	ldr	x2, [sp, #48]
  4022a0:	mov	w3, #0x285                 	// #645
  4022a4:	ldr	x4, [sp, #40]
  4022a8:	adrp	x5, 405000 <traffic_cb+0xf0>
  4022ac:	add	x5, x5, #0xd78
  4022b0:	bl	4019f8 <log_internal_realm@plt>
  4022b4:	str	w0, [sp, #20]
  4022b8:	b	4022d0 <run+0x344>
  4022bc:	ldr	w0, [sp, #104]
  4022c0:	bl	401a08 <abs@plt>
  4022c4:	mov	w8, wzr
  4022c8:	subs	w8, w8, w0, uxtb
  4022cc:	str	w8, [sp, #20]
  4022d0:	ldr	w8, [sp, #20]
  4022d4:	str	w8, [sp, #96]
  4022d8:	ldr	w8, [sp, #96]
  4022dc:	stur	w8, [x29, #-4]
  4022e0:	mov	w8, #0x1                   	// #1
  4022e4:	stur	w8, [x29, #-64]
  4022e8:	b	4024a0 <run+0x514>
  4022ec:	ldur	w8, [x29, #-52]
  4022f0:	cbnz	w8, 402384 <run+0x3f8>
  4022f4:	mov	w8, #0x3                   	// #3
  4022f8:	str	w8, [sp, #92]
  4022fc:	mov	w8, #0x16                  	// #22
  402300:	movk	w8, #0x4000, lsl #16
  402304:	str	w8, [sp, #88]
  402308:	str	wzr, [sp, #84]
  40230c:	ldr	w0, [sp, #84]
  402310:	bl	4019e8 <log_get_max_level_realm@plt>
  402314:	ldr	w8, [sp, #92]
  402318:	and	w8, w8, #0x7
  40231c:	cmp	w0, w8
  402320:	b.lt	402354 <run+0x3c8>  // b.tstop
  402324:	ldr	w8, [sp, #84]
  402328:	ldr	w9, [sp, #92]
  40232c:	orr	w0, w9, w8, lsl #10
  402330:	ldr	w1, [sp, #88]
  402334:	ldr	x2, [sp, #48]
  402338:	mov	w3, #0x287                 	// #647
  40233c:	ldr	x4, [sp, #40]
  402340:	adrp	x5, 405000 <traffic_cb+0xf0>
  402344:	add	x5, x5, #0xd9f
  402348:	bl	4019f8 <log_internal_realm@plt>
  40234c:	str	w0, [sp, #16]
  402350:	b	402368 <run+0x3dc>
  402354:	ldr	w0, [sp, #88]
  402358:	bl	401a08 <abs@plt>
  40235c:	mov	w8, wzr
  402360:	subs	w8, w8, w0, uxtb
  402364:	str	w8, [sp, #16]
  402368:	ldr	w8, [sp, #16]
  40236c:	str	w8, [sp, #80]
  402370:	ldr	w8, [sp, #80]
  402374:	stur	w8, [x29, #-4]
  402378:	mov	w8, #0x1                   	// #1
  40237c:	stur	w8, [x29, #-64]
  402380:	b	4024a0 <run+0x514>
  402384:	ldur	w8, [x29, #-52]
  402388:	stur	w8, [x29, #-56]
  40238c:	mov	w8, #0x3                   	// #3
  402390:	stur	w8, [x29, #-60]
  402394:	ldur	w8, [x29, #-60]
  402398:	ldur	w9, [x29, #-56]
  40239c:	add	w9, w9, #0x3
  4023a0:	cmp	w8, w9
  4023a4:	b.ge	4023ec <run+0x460>  // b.tcont
  4023a8:	ldur	w1, [x29, #-60]
  4023ac:	sub	x0, x29, #0x30
  4023b0:	bl	402aa4 <add_listen_socket>
  4023b4:	stur	w0, [x29, #-52]
  4023b8:	ldur	w8, [x29, #-52]
  4023bc:	cmp	w8, #0x0
  4023c0:	cset	w8, ge  // ge = tcont
  4023c4:	tbnz	w8, #0, 4023dc <run+0x450>
  4023c8:	ldur	w8, [x29, #-52]
  4023cc:	stur	w8, [x29, #-4]
  4023d0:	mov	w8, #0x1                   	// #1
  4023d4:	stur	w8, [x29, #-64]
  4023d8:	b	4024a0 <run+0x514>
  4023dc:	ldur	w8, [x29, #-60]
  4023e0:	add	w8, w8, #0x1
  4023e4:	stur	w8, [x29, #-60]
  4023e8:	b	402394 <run+0x408>
  4023ec:	ldur	x0, [x29, #-48]
  4023f0:	bl	401a58 <sd_event_loop@plt>
  4023f4:	stur	w0, [x29, #-52]
  4023f8:	ldur	w8, [x29, #-52]
  4023fc:	cmp	w8, #0x0
  402400:	cset	w8, ge  // ge = tcont
  402404:	tbnz	w8, #0, 402494 <run+0x508>
  402408:	mov	w8, #0x3                   	// #3
  40240c:	str	w8, [sp, #76]
  402410:	ldur	w8, [x29, #-52]
  402414:	str	w8, [sp, #72]
  402418:	str	wzr, [sp, #68]
  40241c:	ldr	w0, [sp, #68]
  402420:	bl	4019e8 <log_get_max_level_realm@plt>
  402424:	ldr	w8, [sp, #76]
  402428:	and	w8, w8, #0x7
  40242c:	cmp	w0, w8
  402430:	b.lt	402464 <run+0x4d8>  // b.tstop
  402434:	ldr	w8, [sp, #68]
  402438:	ldr	w9, [sp, #76]
  40243c:	orr	w0, w9, w8, lsl #10
  402440:	ldr	w1, [sp, #72]
  402444:	ldr	x2, [sp, #48]
  402448:	mov	w3, #0x293                 	// #659
  40244c:	ldr	x4, [sp, #40]
  402450:	adrp	x5, 405000 <traffic_cb+0xf0>
  402454:	add	x5, x5, #0xdc1
  402458:	bl	4019f8 <log_internal_realm@plt>
  40245c:	str	w0, [sp, #12]
  402460:	b	402478 <run+0x4ec>
  402464:	ldr	w0, [sp, #72]
  402468:	bl	401a08 <abs@plt>
  40246c:	mov	w8, wzr
  402470:	subs	w8, w8, w0, uxtb
  402474:	str	w8, [sp, #12]
  402478:	ldr	w8, [sp, #12]
  40247c:	str	w8, [sp, #64]
  402480:	ldr	w8, [sp, #64]
  402484:	stur	w8, [x29, #-4]
  402488:	mov	w8, #0x1                   	// #1
  40248c:	stur	w8, [x29, #-64]
  402490:	b	4024a0 <run+0x514>
  402494:	stur	wzr, [x29, #-4]
  402498:	mov	w8, #0x1                   	// #1
  40249c:	stur	w8, [x29, #-64]
  4024a0:	sub	x0, x29, #0x30
  4024a4:	bl	402538 <context_clear>
  4024a8:	ldur	w0, [x29, #-4]
  4024ac:	ldp	x29, x30, [sp, #224]
  4024b0:	add	sp, sp, #0xf0
  4024b4:	ret

00000000004024b8 <static_destruct>:
  4024b8:	sub	sp, sp, #0x20
  4024bc:	stp	x29, x30, [sp, #16]
  4024c0:	add	x29, sp, #0x10
  4024c4:	adrp	x8, 41f000 <__FRAME_END__+0x18758>
  4024c8:	ldr	x8, [x8, #3560]
  4024cc:	str	x8, [sp]
  4024d0:	cbnz	x8, 4024d8 <static_destruct+0x20>
  4024d4:	b	40252c <static_destruct+0x74>
  4024d8:	ldr	x0, [sp]
  4024dc:	mov	x1, #0x8                   	// #8
  4024e0:	bl	4058a8 <ALIGN_TO>
  4024e4:	str	x0, [sp, #8]
  4024e8:	ldr	x8, [sp, #8]
  4024ec:	adrp	x9, 41f000 <__FRAME_END__+0x18758>
  4024f0:	ldr	x9, [x9, #3568]
  4024f4:	cmp	x8, x9
  4024f8:	b.cs	40252c <static_destruct+0x74>  // b.hs, b.nlast
  4024fc:	ldr	x8, [sp, #8]
  402500:	ldr	x8, [x8, #8]
  402504:	ldr	x9, [sp, #8]
  402508:	ldr	x0, [x9]
  40250c:	blr	x8
  402510:	ldr	x8, [sp, #8]
  402514:	add	x8, x8, #0x10
  402518:	mov	x0, x8
  40251c:	mov	x1, #0x8                   	// #8
  402520:	bl	4058a8 <ALIGN_TO>
  402524:	str	x0, [sp, #8]
  402528:	b	4024e8 <static_destruct+0x30>
  40252c:	ldp	x29, x30, [sp, #16]
  402530:	add	sp, sp, #0x20
  402534:	ret

0000000000402538 <context_clear>:
  402538:	sub	sp, sp, #0x40
  40253c:	stp	x29, x30, [sp, #48]
  402540:	add	x29, sp, #0x30
  402544:	adrp	x8, 405000 <traffic_cb+0xf0>
  402548:	add	x8, x8, #0xcf0
  40254c:	add	x2, x8, #0x3
  402550:	stur	x0, [x29, #-8]
  402554:	str	x2, [sp]
  402558:	ldur	x8, [x29, #-8]
  40255c:	cmp	x8, #0x0
  402560:	cset	w9, ne  // ne = any
  402564:	mov	w10, #0x1                   	// #1
  402568:	eor	w9, w9, #0x1
  40256c:	eor	w9, w9, w10
  402570:	eor	w9, w9, w10
  402574:	and	w9, w9, #0x1
  402578:	mov	w0, w9
  40257c:	sxtw	x8, w0
  402580:	cbz	x8, 4025a8 <context_clear+0x70>
  402584:	mov	w8, wzr
  402588:	mov	w0, w8
  40258c:	adrp	x1, 405000 <traffic_cb+0xf0>
  402590:	add	x1, x1, #0xdde
  402594:	ldr	x2, [sp]
  402598:	mov	w3, #0x4f                  	// #79
  40259c:	adrp	x4, 405000 <traffic_cb+0xf0>
  4025a0:	add	x4, x4, #0xde6
  4025a4:	bl	401a68 <log_assert_failed_realm@plt>
  4025a8:	ldur	x8, [x29, #-8]
  4025ac:	ldr	x0, [x8, #16]
  4025b0:	bl	402fd0 <set_steal_first>
  4025b4:	stur	x0, [x29, #-16]
  4025b8:	cbz	x0, 4025c8 <context_clear+0x90>
  4025bc:	ldur	x0, [x29, #-16]
  4025c0:	bl	401a78 <sd_event_source_unref@plt>
  4025c4:	b	4025a8 <context_clear+0x70>
  4025c8:	ldur	x8, [x29, #-8]
  4025cc:	ldr	x0, [x8, #16]
  4025d0:	bl	403004 <set_free>
  4025d4:	str	x0, [sp, #24]
  4025d8:	ldur	x8, [x29, #-8]
  4025dc:	ldr	x0, [x8, #24]
  4025e0:	bl	402fd0 <set_steal_first>
  4025e4:	str	x0, [sp, #16]
  4025e8:	cbz	x0, 4025f8 <context_clear+0xc0>
  4025ec:	ldr	x0, [sp, #16]
  4025f0:	bl	403034 <connection_free>
  4025f4:	b	4025d8 <context_clear+0xa0>
  4025f8:	ldur	x8, [x29, #-8]
  4025fc:	ldr	x0, [x8, #24]
  402600:	bl	403004 <set_free>
  402604:	str	x0, [sp, #8]
  402608:	ldur	x8, [x29, #-8]
  40260c:	ldr	x0, [x8]
  402610:	bl	401a88 <sd_event_unref@plt>
  402614:	ldur	x8, [x29, #-8]
  402618:	ldr	x8, [x8, #8]
  40261c:	mov	x0, x8
  402620:	bl	401a98 <sd_resolve_unref@plt>
  402624:	ldp	x29, x30, [sp, #48]
  402628:	add	sp, sp, #0x40
  40262c:	ret

0000000000402630 <parse_argv>:
  402630:	sub	sp, sp, #0xa0
  402634:	stp	x29, x30, [sp, #144]
  402638:	add	x29, sp, #0x90
  40263c:	adrp	x8, 420000 <arg_connections_max>
  402640:	add	x8, x8, #0x28
  402644:	adrp	x9, 405000 <traffic_cb+0xf0>
  402648:	add	x9, x9, #0xcf0
  40264c:	add	x9, x9, #0x3
  402650:	adrp	x10, 405000 <traffic_cb+0xf0>
  402654:	add	x10, x10, #0xe76
  402658:	adrp	x11, 405000 <traffic_cb+0xf0>
  40265c:	add	x11, x11, #0xe50
  402660:	stur	w0, [x29, #-8]
  402664:	stur	x1, [x29, #-16]
  402668:	str	x8, [sp, #48]
  40266c:	str	x9, [sp, #40]
  402670:	str	x10, [sp, #32]
  402674:	str	x11, [sp, #24]
  402678:	ldur	w8, [x29, #-8]
  40267c:	cmp	w8, #0x0
  402680:	cset	w8, ge  // ge = tcont
  402684:	mov	w9, #0x1                   	// #1
  402688:	eor	w8, w8, #0x1
  40268c:	eor	w8, w8, w9
  402690:	eor	w8, w8, w9
  402694:	and	w8, w8, #0x1
  402698:	mov	w0, w8
  40269c:	sxtw	x10, w0
  4026a0:	cbz	x10, 4026c4 <parse_argv+0x94>
  4026a4:	mov	w8, wzr
  4026a8:	mov	w0, w8
  4026ac:	adrp	x1, 405000 <traffic_cb+0xf0>
  4026b0:	add	x1, x1, #0xe46
  4026b4:	ldr	x2, [sp, #40]
  4026b8:	mov	w3, #0x23d                 	// #573
  4026bc:	ldr	x4, [sp, #24]
  4026c0:	bl	401a68 <log_assert_failed_realm@plt>
  4026c4:	ldur	x8, [x29, #-16]
  4026c8:	cmp	x8, #0x0
  4026cc:	cset	w9, ne  // ne = any
  4026d0:	mov	w10, #0x1                   	// #1
  4026d4:	eor	w9, w9, #0x1
  4026d8:	eor	w9, w9, w10
  4026dc:	eor	w9, w9, w10
  4026e0:	and	w9, w9, #0x1
  4026e4:	mov	w0, w9
  4026e8:	sxtw	x8, w0
  4026ec:	cbz	x8, 402710 <parse_argv+0xe0>
  4026f0:	mov	w8, wzr
  4026f4:	mov	w0, w8
  4026f8:	adrp	x1, 405000 <traffic_cb+0xf0>
  4026fc:	add	x1, x1, #0xe6d
  402700:	ldr	x2, [sp, #40]
  402704:	mov	w3, #0x23e                 	// #574
  402708:	ldr	x4, [sp, #24]
  40270c:	bl	401a68 <log_assert_failed_realm@plt>
  402710:	ldur	w0, [x29, #-8]
  402714:	ldur	x1, [x29, #-16]
  402718:	adrp	x2, 405000 <traffic_cb+0xf0>
  40271c:	add	x2, x2, #0xe72
  402720:	adrp	x3, 405000 <traffic_cb+0xf0>
  402724:	add	x3, x3, #0xac8
  402728:	mov	x8, xzr
  40272c:	mov	x4, x8
  402730:	bl	401aa8 <getopt_long@plt>
  402734:	stur	w0, [x29, #-20]
  402738:	cmp	w0, #0x0
  40273c:	cset	w9, lt  // lt = tstop
  402740:	tbnz	w9, #0, 402928 <parse_argv+0x2f8>
  402744:	ldur	w8, [x29, #-20]
  402748:	cmp	w8, #0x3f
  40274c:	str	w8, [sp, #20]
  402750:	b.eq	4028f8 <parse_argv+0x2c8>  // b.none
  402754:	b	402758 <parse_argv+0x128>
  402758:	ldr	w8, [sp, #20]
  40275c:	cmp	w8, #0x63
  402760:	b.eq	4027a0 <parse_argv+0x170>  // b.none
  402764:	b	402768 <parse_argv+0x138>
  402768:	ldr	w8, [sp, #20]
  40276c:	cmp	w8, #0x68
  402770:	b.eq	402788 <parse_argv+0x158>  // b.none
  402774:	b	402778 <parse_argv+0x148>
  402778:	ldr	w8, [sp, #20]
  40277c:	cmp	w8, #0x100
  402780:	b.eq	402794 <parse_argv+0x164>  // b.none
  402784:	b	402904 <parse_argv+0x2d4>
  402788:	bl	40316c <help>
  40278c:	stur	w0, [x29, #-4]
  402790:	b	402a94 <parse_argv+0x464>
  402794:	bl	401ab8 <version@plt>
  402798:	stur	w0, [x29, #-4]
  40279c:	b	402a94 <parse_argv+0x464>
  4027a0:	adrp	x8, 420000 <arg_connections_max>
  4027a4:	add	x8, x8, #0x30
  4027a8:	ldr	x0, [x8]
  4027ac:	adrp	x1, 420000 <arg_connections_max>
  4027b0:	add	x1, x1, #0x0
  4027b4:	bl	403228 <safe_atou>
  4027b8:	stur	w0, [x29, #-24]
  4027bc:	ldur	w9, [x29, #-24]
  4027c0:	cmp	w9, #0x0
  4027c4:	cset	w9, ge  // ge = tcont
  4027c8:	tbnz	w9, #0, 402858 <parse_argv+0x228>
  4027cc:	mov	w8, #0x3                   	// #3
  4027d0:	stur	w8, [x29, #-28]
  4027d4:	stur	wzr, [x29, #-32]
  4027d8:	stur	wzr, [x29, #-36]
  4027dc:	ldur	w0, [x29, #-36]
  4027e0:	bl	4019e8 <log_get_max_level_realm@plt>
  4027e4:	ldur	w8, [x29, #-28]
  4027e8:	and	w8, w8, #0x7
  4027ec:	cmp	w0, w8
  4027f0:	b.lt	402830 <parse_argv+0x200>  // b.tstop
  4027f4:	ldur	w8, [x29, #-36]
  4027f8:	ldur	w9, [x29, #-28]
  4027fc:	orr	w0, w9, w8, lsl #10
  402800:	ldur	w1, [x29, #-32]
  402804:	adrp	x10, 420000 <arg_connections_max>
  402808:	add	x10, x10, #0x30
  40280c:	ldr	x6, [x10]
  402810:	ldr	x2, [sp, #40]
  402814:	mov	w3, #0x24d                 	// #589
  402818:	ldr	x4, [sp, #32]
  40281c:	adrp	x5, 405000 <traffic_cb+0xf0>
  402820:	add	x5, x5, #0xe81
  402824:	bl	4019f8 <log_internal_realm@plt>
  402828:	str	w0, [sp, #16]
  40282c:	b	402844 <parse_argv+0x214>
  402830:	ldur	w0, [x29, #-32]
  402834:	bl	401a08 <abs@plt>
  402838:	mov	w8, wzr
  40283c:	subs	w8, w8, w0, uxtb
  402840:	str	w8, [sp, #16]
  402844:	ldr	w8, [sp, #16]
  402848:	stur	w8, [x29, #-40]
  40284c:	ldur	w8, [x29, #-24]
  402850:	stur	w8, [x29, #-4]
  402854:	b	402a94 <parse_argv+0x464>
  402858:	adrp	x8, 420000 <arg_connections_max>
  40285c:	add	x8, x8, #0x0
  402860:	ldr	w9, [x8]
  402864:	cmp	w9, #0x1
  402868:	b.cs	4028f4 <parse_argv+0x2c4>  // b.hs, b.nlast
  40286c:	mov	w8, #0x3                   	// #3
  402870:	stur	w8, [x29, #-44]
  402874:	mov	w8, #0x16                  	// #22
  402878:	movk	w8, #0x4000, lsl #16
  40287c:	stur	w8, [x29, #-48]
  402880:	stur	wzr, [x29, #-52]
  402884:	ldur	w0, [x29, #-52]
  402888:	bl	4019e8 <log_get_max_level_realm@plt>
  40288c:	ldur	w8, [x29, #-44]
  402890:	and	w8, w8, #0x7
  402894:	cmp	w0, w8
  402898:	b.lt	4028cc <parse_argv+0x29c>  // b.tstop
  40289c:	ldur	w8, [x29, #-52]
  4028a0:	ldur	w9, [x29, #-44]
  4028a4:	orr	w0, w9, w8, lsl #10
  4028a8:	ldur	w1, [x29, #-48]
  4028ac:	ldr	x2, [sp, #40]
  4028b0:	mov	w3, #0x253                 	// #595
  4028b4:	ldr	x4, [sp, #32]
  4028b8:	adrp	x5, 405000 <traffic_cb+0xf0>
  4028bc:	add	x5, x5, #0xeb1
  4028c0:	bl	4019f8 <log_internal_realm@plt>
  4028c4:	str	w0, [sp, #12]
  4028c8:	b	4028e0 <parse_argv+0x2b0>
  4028cc:	ldur	w0, [x29, #-48]
  4028d0:	bl	401a08 <abs@plt>
  4028d4:	mov	w8, wzr
  4028d8:	subs	w8, w8, w0, uxtb
  4028dc:	str	w8, [sp, #12]
  4028e0:	ldr	w8, [sp, #12]
  4028e4:	stur	w8, [x29, #-56]
  4028e8:	ldur	w8, [x29, #-56]
  4028ec:	stur	w8, [x29, #-4]
  4028f0:	b	402a94 <parse_argv+0x464>
  4028f4:	b	402924 <parse_argv+0x2f4>
  4028f8:	mov	w8, #0xffffffea            	// #-22
  4028fc:	stur	w8, [x29, #-4]
  402900:	b	402a94 <parse_argv+0x464>
  402904:	mov	w8, wzr
  402908:	mov	w0, w8
  40290c:	adrp	x1, 405000 <traffic_cb+0xf0>
  402910:	add	x1, x1, #0xece
  402914:	ldr	x2, [sp, #40]
  402918:	mov	w3, #0x25b                 	// #603
  40291c:	ldr	x4, [sp, #24]
  402920:	bl	401ac8 <log_assert_failed_unreachable_realm@plt>
  402924:	b	402710 <parse_argv+0xe0>
  402928:	ldr	x8, [sp, #48]
  40292c:	ldr	w9, [x8]
  402930:	ldur	w10, [x29, #-8]
  402934:	cmp	w9, w10
  402938:	b.lt	4029c4 <parse_argv+0x394>  // b.tstop
  40293c:	mov	w8, #0x3                   	// #3
  402940:	stur	w8, [x29, #-60]
  402944:	mov	w8, #0x16                  	// #22
  402948:	movk	w8, #0x4000, lsl #16
  40294c:	stur	w8, [x29, #-64]
  402950:	stur	wzr, [x29, #-68]
  402954:	ldur	w0, [x29, #-68]
  402958:	bl	4019e8 <log_get_max_level_realm@plt>
  40295c:	ldur	w8, [x29, #-60]
  402960:	and	w8, w8, #0x7
  402964:	cmp	w0, w8
  402968:	b.lt	40299c <parse_argv+0x36c>  // b.tstop
  40296c:	ldur	w8, [x29, #-68]
  402970:	ldur	w9, [x29, #-60]
  402974:	orr	w0, w9, w8, lsl #10
  402978:	ldur	w1, [x29, #-64]
  40297c:	ldr	x2, [sp, #40]
  402980:	mov	w3, #0x260                 	// #608
  402984:	ldr	x4, [sp, #32]
  402988:	adrp	x5, 405000 <traffic_cb+0xf0>
  40298c:	add	x5, x5, #0xedf
  402990:	bl	4019f8 <log_internal_realm@plt>
  402994:	str	w0, [sp, #8]
  402998:	b	4029b0 <parse_argv+0x380>
  40299c:	ldur	w0, [x29, #-64]
  4029a0:	bl	401a08 <abs@plt>
  4029a4:	mov	w8, wzr
  4029a8:	subs	w8, w8, w0, uxtb
  4029ac:	str	w8, [sp, #8]
  4029b0:	ldr	w8, [sp, #8]
  4029b4:	str	w8, [sp, #72]
  4029b8:	ldr	w8, [sp, #72]
  4029bc:	stur	w8, [x29, #-4]
  4029c0:	b	402a94 <parse_argv+0x464>
  4029c4:	ldur	w8, [x29, #-8]
  4029c8:	ldr	x9, [sp, #48]
  4029cc:	ldr	w10, [x9]
  4029d0:	add	w10, w10, #0x1
  4029d4:	cmp	w8, w10
  4029d8:	b.eq	402a64 <parse_argv+0x434>  // b.none
  4029dc:	mov	w8, #0x3                   	// #3
  4029e0:	str	w8, [sp, #68]
  4029e4:	mov	w8, #0x16                  	// #22
  4029e8:	movk	w8, #0x4000, lsl #16
  4029ec:	str	w8, [sp, #64]
  4029f0:	str	wzr, [sp, #60]
  4029f4:	ldr	w0, [sp, #60]
  4029f8:	bl	4019e8 <log_get_max_level_realm@plt>
  4029fc:	ldr	w8, [sp, #68]
  402a00:	and	w8, w8, #0x7
  402a04:	cmp	w0, w8
  402a08:	b.lt	402a3c <parse_argv+0x40c>  // b.tstop
  402a0c:	ldr	w8, [sp, #60]
  402a10:	ldr	w9, [sp, #68]
  402a14:	orr	w0, w9, w8, lsl #10
  402a18:	ldr	w1, [sp, #64]
  402a1c:	ldr	x2, [sp, #40]
  402a20:	mov	w3, #0x264                 	// #612
  402a24:	ldr	x4, [sp, #32]
  402a28:	adrp	x5, 405000 <traffic_cb+0xf0>
  402a2c:	add	x5, x5, #0xef6
  402a30:	bl	4019f8 <log_internal_realm@plt>
  402a34:	str	w0, [sp, #4]
  402a38:	b	402a50 <parse_argv+0x420>
  402a3c:	ldr	w0, [sp, #64]
  402a40:	bl	401a08 <abs@plt>
  402a44:	mov	w8, wzr
  402a48:	subs	w8, w8, w0, uxtb
  402a4c:	str	w8, [sp, #4]
  402a50:	ldr	w8, [sp, #4]
  402a54:	str	w8, [sp, #56]
  402a58:	ldr	w8, [sp, #56]
  402a5c:	stur	w8, [x29, #-4]
  402a60:	b	402a94 <parse_argv+0x464>
  402a64:	ldur	x8, [x29, #-16]
  402a68:	ldr	x9, [sp, #48]
  402a6c:	ldrsw	x10, [x9]
  402a70:	mov	x11, #0x8                   	// #8
  402a74:	mul	x10, x11, x10
  402a78:	add	x8, x8, x10
  402a7c:	ldr	x8, [x8]
  402a80:	adrp	x10, 420000 <arg_connections_max>
  402a84:	add	x10, x10, #0x10
  402a88:	str	x8, [x10]
  402a8c:	mov	w12, #0x1                   	// #1
  402a90:	stur	w12, [x29, #-4]
  402a94:	ldur	w0, [x29, #-4]
  402a98:	ldp	x29, x30, [sp, #144]
  402a9c:	add	sp, sp, #0xa0
  402aa0:	ret

0000000000402aa4 <add_listen_socket>:
  402aa4:	sub	sp, sp, #0xc0
  402aa8:	stp	x29, x30, [sp, #176]
  402aac:	add	x29, sp, #0xb0
  402ab0:	adrp	x8, 405000 <traffic_cb+0xf0>
  402ab4:	add	x8, x8, #0xcf0
  402ab8:	add	x8, x8, #0x3
  402abc:	adrp	x9, 406000 <connection_shovel.__assert_in_set.64+0x330>
  402ac0:	add	x9, x9, #0x7b
  402ac4:	stur	x0, [x29, #-16]
  402ac8:	stur	w1, [x29, #-20]
  402acc:	str	x8, [sp, #32]
  402ad0:	str	x9, [sp, #24]
  402ad4:	ldur	x8, [x29, #-16]
  402ad8:	cmp	x8, #0x0
  402adc:	cset	w9, ne  // ne = any
  402ae0:	mov	w10, #0x1                   	// #1
  402ae4:	eor	w9, w9, #0x1
  402ae8:	eor	w9, w9, w10
  402aec:	eor	w9, w9, w10
  402af0:	and	w9, w9, #0x1
  402af4:	mov	w0, w9
  402af8:	sxtw	x8, w0
  402afc:	cbz	x8, 402b24 <add_listen_socket+0x80>
  402b00:	mov	w8, wzr
  402b04:	mov	w0, w8
  402b08:	adrp	x1, 405000 <traffic_cb+0xf0>
  402b0c:	add	x1, x1, #0xdde
  402b10:	ldr	x2, [sp, #32]
  402b14:	mov	w3, #0x1ef                 	// #495
  402b18:	adrp	x4, 406000 <connection_shovel.__assert_in_set.64+0x330>
  402b1c:	add	x4, x4, #0x4d
  402b20:	bl	401a68 <log_assert_failed_realm@plt>
  402b24:	ldur	w8, [x29, #-20]
  402b28:	cmp	w8, #0x0
  402b2c:	cset	w8, ge  // ge = tcont
  402b30:	mov	w9, #0x1                   	// #1
  402b34:	eor	w8, w8, #0x1
  402b38:	eor	w8, w8, w9
  402b3c:	eor	w8, w8, w9
  402b40:	and	w8, w8, #0x1
  402b44:	mov	w0, w8
  402b48:	sxtw	x10, w0
  402b4c:	cbz	x10, 402b74 <add_listen_socket+0xd0>
  402b50:	mov	w8, wzr
  402b54:	mov	w0, w8
  402b58:	adrp	x1, 406000 <connection_shovel.__assert_in_set.64+0x330>
  402b5c:	add	x1, x1, #0x73
  402b60:	ldr	x2, [sp, #32]
  402b64:	mov	w3, #0x1f0                 	// #496
  402b68:	adrp	x4, 406000 <connection_shovel.__assert_in_set.64+0x330>
  402b6c:	add	x4, x4, #0x4d
  402b70:	bl	401a68 <log_assert_failed_realm@plt>
  402b74:	ldur	x8, [x29, #-16]
  402b78:	add	x0, x8, #0x10
  402b7c:	mov	x8, xzr
  402b80:	mov	x1, x8
  402b84:	bl	401ad8 <internal_set_ensure_allocated@plt>
  402b88:	stur	w0, [x29, #-36]
  402b8c:	ldur	w9, [x29, #-36]
  402b90:	cmp	w9, #0x0
  402b94:	cset	w9, ge  // ge = tcont
  402b98:	tbnz	w9, #0, 402bc0 <add_listen_socket+0x11c>
  402b9c:	mov	w8, wzr
  402ba0:	mov	w0, w8
  402ba4:	ldr	x1, [sp, #32]
  402ba8:	mov	w2, #0x1f4                 	// #500
  402bac:	ldr	x3, [sp, #24]
  402bb0:	bl	401ae8 <log_oom_internal@plt>
  402bb4:	ldur	w8, [x29, #-36]
  402bb8:	stur	w8, [x29, #-4]
  402bbc:	b	402fc0 <add_listen_socket+0x51c>
  402bc0:	ldur	w0, [x29, #-20]
  402bc4:	mov	w8, wzr
  402bc8:	mov	w1, w8
  402bcc:	mov	w8, #0x1                   	// #1
  402bd0:	mov	w2, w8
  402bd4:	mov	w3, w8
  402bd8:	bl	401af8 <sd_is_socket@plt>
  402bdc:	stur	w0, [x29, #-36]
  402be0:	ldur	w8, [x29, #-36]
  402be4:	cmp	w8, #0x0
  402be8:	cset	w8, ge  // ge = tcont
  402bec:	tbnz	w8, #0, 402c74 <add_listen_socket+0x1d0>
  402bf0:	mov	w8, #0x3                   	// #3
  402bf4:	stur	w8, [x29, #-40]
  402bf8:	ldur	w8, [x29, #-36]
  402bfc:	stur	w8, [x29, #-44]
  402c00:	stur	wzr, [x29, #-48]
  402c04:	ldur	w0, [x29, #-48]
  402c08:	bl	4019e8 <log_get_max_level_realm@plt>
  402c0c:	ldur	w8, [x29, #-40]
  402c10:	and	w8, w8, #0x7
  402c14:	cmp	w0, w8
  402c18:	b.lt	402c4c <add_listen_socket+0x1a8>  // b.tstop
  402c1c:	ldur	w8, [x29, #-48]
  402c20:	ldur	w9, [x29, #-40]
  402c24:	orr	w0, w9, w8, lsl #10
  402c28:	ldur	w1, [x29, #-44]
  402c2c:	ldr	x2, [sp, #32]
  402c30:	mov	w3, #0x1fa                 	// #506
  402c34:	ldr	x4, [sp, #24]
  402c38:	adrp	x5, 406000 <connection_shovel.__assert_in_set.64+0x330>
  402c3c:	add	x5, x5, #0x8d
  402c40:	bl	4019f8 <log_internal_realm@plt>
  402c44:	str	w0, [sp, #20]
  402c48:	b	402c60 <add_listen_socket+0x1bc>
  402c4c:	ldur	w0, [x29, #-44]
  402c50:	bl	401a08 <abs@plt>
  402c54:	mov	w8, wzr
  402c58:	subs	w8, w8, w0, uxtb
  402c5c:	str	w8, [sp, #20]
  402c60:	ldr	w8, [sp, #20]
  402c64:	stur	w8, [x29, #-52]
  402c68:	ldur	w8, [x29, #-52]
  402c6c:	stur	w8, [x29, #-4]
  402c70:	b	402fc0 <add_listen_socket+0x51c>
  402c74:	ldur	w8, [x29, #-36]
  402c78:	cbnz	w8, 402d04 <add_listen_socket+0x260>
  402c7c:	mov	w8, #0x3                   	// #3
  402c80:	stur	w8, [x29, #-56]
  402c84:	mov	w8, #0x16                  	// #22
  402c88:	movk	w8, #0x4000, lsl #16
  402c8c:	stur	w8, [x29, #-60]
  402c90:	stur	wzr, [x29, #-64]
  402c94:	ldur	w0, [x29, #-64]
  402c98:	bl	4019e8 <log_get_max_level_realm@plt>
  402c9c:	ldur	w8, [x29, #-56]
  402ca0:	and	w8, w8, #0x7
  402ca4:	cmp	w0, w8
  402ca8:	b.lt	402cdc <add_listen_socket+0x238>  // b.tstop
  402cac:	ldur	w8, [x29, #-64]
  402cb0:	ldur	w9, [x29, #-56]
  402cb4:	orr	w0, w9, w8, lsl #10
  402cb8:	ldur	w1, [x29, #-60]
  402cbc:	ldr	x2, [sp, #32]
  402cc0:	mov	w3, #0x1fd                 	// #509
  402cc4:	ldr	x4, [sp, #24]
  402cc8:	adrp	x5, 406000 <connection_shovel.__assert_in_set.64+0x330>
  402ccc:	add	x5, x5, #0xb1
  402cd0:	bl	4019f8 <log_internal_realm@plt>
  402cd4:	str	w0, [sp, #16]
  402cd8:	b	402cf0 <add_listen_socket+0x24c>
  402cdc:	ldur	w0, [x29, #-60]
  402ce0:	bl	401a08 <abs@plt>
  402ce4:	mov	w8, wzr
  402ce8:	subs	w8, w8, w0, uxtb
  402cec:	str	w8, [sp, #16]
  402cf0:	ldr	w8, [sp, #16]
  402cf4:	stur	w8, [x29, #-68]
  402cf8:	ldur	w8, [x29, #-68]
  402cfc:	stur	w8, [x29, #-4]
  402d00:	b	402fc0 <add_listen_socket+0x51c>
  402d04:	ldur	w0, [x29, #-20]
  402d08:	mov	w8, #0x1                   	// #1
  402d0c:	and	w1, w8, #0x1
  402d10:	bl	401b08 <fd_nonblock@plt>
  402d14:	stur	w0, [x29, #-36]
  402d18:	ldur	w8, [x29, #-36]
  402d1c:	cmp	w8, #0x0
  402d20:	cset	w8, ge  // ge = tcont
  402d24:	tbnz	w8, #0, 402dac <add_listen_socket+0x308>
  402d28:	mov	w8, #0x3                   	// #3
  402d2c:	stur	w8, [x29, #-72]
  402d30:	ldur	w8, [x29, #-36]
  402d34:	stur	w8, [x29, #-76]
  402d38:	stur	wzr, [x29, #-80]
  402d3c:	ldur	w0, [x29, #-80]
  402d40:	bl	4019e8 <log_get_max_level_realm@plt>
  402d44:	ldur	w8, [x29, #-72]
  402d48:	and	w8, w8, #0x7
  402d4c:	cmp	w0, w8
  402d50:	b.lt	402d84 <add_listen_socket+0x2e0>  // b.tstop
  402d54:	ldur	w8, [x29, #-80]
  402d58:	ldur	w9, [x29, #-72]
  402d5c:	orr	w0, w9, w8, lsl #10
  402d60:	ldur	w1, [x29, #-76]
  402d64:	ldr	x2, [sp, #32]
  402d68:	mov	w3, #0x201                 	// #513
  402d6c:	ldr	x4, [sp, #24]
  402d70:	adrp	x5, 406000 <connection_shovel.__assert_in_set.64+0x330>
  402d74:	add	x5, x5, #0xda
  402d78:	bl	4019f8 <log_internal_realm@plt>
  402d7c:	str	w0, [sp, #12]
  402d80:	b	402d98 <add_listen_socket+0x2f4>
  402d84:	ldur	w0, [x29, #-76]
  402d88:	bl	401a08 <abs@plt>
  402d8c:	mov	w8, wzr
  402d90:	subs	w8, w8, w0, uxtb
  402d94:	str	w8, [sp, #12]
  402d98:	ldr	w8, [sp, #12]
  402d9c:	stur	w8, [x29, #-84]
  402da0:	ldur	w8, [x29, #-84]
  402da4:	stur	w8, [x29, #-4]
  402da8:	b	402fc0 <add_listen_socket+0x51c>
  402dac:	ldur	x8, [x29, #-16]
  402db0:	ldr	x0, [x8]
  402db4:	ldur	w2, [x29, #-20]
  402db8:	ldur	x5, [x29, #-16]
  402dbc:	sub	x1, x29, #0x20
  402dc0:	mov	w3, #0x1                   	// #1
  402dc4:	adrp	x4, 403000 <set_steal_first+0x30>
  402dc8:	add	x4, x4, #0x284
  402dcc:	bl	401b18 <sd_event_add_io@plt>
  402dd0:	stur	w0, [x29, #-36]
  402dd4:	ldur	w9, [x29, #-36]
  402dd8:	cmp	w9, #0x0
  402ddc:	cset	w9, ge  // ge = tcont
  402de0:	tbnz	w9, #0, 402e68 <add_listen_socket+0x3c4>
  402de4:	mov	w8, #0x3                   	// #3
  402de8:	str	w8, [sp, #88]
  402dec:	ldur	w8, [x29, #-36]
  402df0:	str	w8, [sp, #84]
  402df4:	str	wzr, [sp, #80]
  402df8:	ldr	w0, [sp, #80]
  402dfc:	bl	4019e8 <log_get_max_level_realm@plt>
  402e00:	ldr	w8, [sp, #88]
  402e04:	and	w8, w8, #0x7
  402e08:	cmp	w0, w8
  402e0c:	b.lt	402e40 <add_listen_socket+0x39c>  // b.tstop
  402e10:	ldr	w8, [sp, #80]
  402e14:	ldr	w9, [sp, #88]
  402e18:	orr	w0, w9, w8, lsl #10
  402e1c:	ldr	w1, [sp, #84]
  402e20:	ldr	x2, [sp, #32]
  402e24:	mov	w3, #0x205                 	// #517
  402e28:	ldr	x4, [sp, #24]
  402e2c:	adrp	x5, 406000 <connection_shovel.__assert_in_set.64+0x330>
  402e30:	add	x5, x5, #0x10a
  402e34:	bl	4019f8 <log_internal_realm@plt>
  402e38:	str	w0, [sp, #8]
  402e3c:	b	402e54 <add_listen_socket+0x3b0>
  402e40:	ldr	w0, [sp, #84]
  402e44:	bl	401a08 <abs@plt>
  402e48:	mov	w8, wzr
  402e4c:	subs	w8, w8, w0, uxtb
  402e50:	str	w8, [sp, #8]
  402e54:	ldr	w8, [sp, #8]
  402e58:	str	w8, [sp, #76]
  402e5c:	ldr	w8, [sp, #76]
  402e60:	stur	w8, [x29, #-4]
  402e64:	b	402fc0 <add_listen_socket+0x51c>
  402e68:	ldur	x8, [x29, #-16]
  402e6c:	ldr	x0, [x8, #16]
  402e70:	ldur	x1, [x29, #-32]
  402e74:	bl	401b28 <set_put@plt>
  402e78:	stur	w0, [x29, #-36]
  402e7c:	ldur	w9, [x29, #-36]
  402e80:	cmp	w9, #0x0
  402e84:	cset	w9, ge  // ge = tcont
  402e88:	tbnz	w9, #0, 402f18 <add_listen_socket+0x474>
  402e8c:	mov	w8, #0x3                   	// #3
  402e90:	str	w8, [sp, #72]
  402e94:	ldur	w8, [x29, #-36]
  402e98:	str	w8, [sp, #68]
  402e9c:	str	wzr, [sp, #64]
  402ea0:	ldr	w0, [sp, #64]
  402ea4:	bl	4019e8 <log_get_max_level_realm@plt>
  402ea8:	ldr	w8, [sp, #72]
  402eac:	and	w8, w8, #0x7
  402eb0:	cmp	w0, w8
  402eb4:	b.lt	402ee8 <add_listen_socket+0x444>  // b.tstop
  402eb8:	ldr	w8, [sp, #64]
  402ebc:	ldr	w9, [sp, #72]
  402ec0:	orr	w0, w9, w8, lsl #10
  402ec4:	ldr	w1, [sp, #68]
  402ec8:	ldr	x2, [sp, #32]
  402ecc:	mov	w3, #0x209                 	// #521
  402ed0:	ldr	x4, [sp, #24]
  402ed4:	adrp	x5, 406000 <connection_shovel.__assert_in_set.64+0x330>
  402ed8:	add	x5, x5, #0x129
  402edc:	bl	4019f8 <log_internal_realm@plt>
  402ee0:	str	w0, [sp, #4]
  402ee4:	b	402efc <add_listen_socket+0x458>
  402ee8:	ldr	w0, [sp, #68]
  402eec:	bl	401a08 <abs@plt>
  402ef0:	mov	w8, wzr
  402ef4:	subs	w8, w8, w0, uxtb
  402ef8:	str	w8, [sp, #4]
  402efc:	ldr	w8, [sp, #4]
  402f00:	str	w8, [sp, #60]
  402f04:	ldur	x0, [x29, #-32]
  402f08:	bl	401a78 <sd_event_source_unref@plt>
  402f0c:	ldur	w8, [x29, #-36]
  402f10:	stur	w8, [x29, #-4]
  402f14:	b	402fc0 <add_listen_socket+0x51c>
  402f18:	ldur	x0, [x29, #-32]
  402f1c:	mov	w1, #0xffffffff            	// #-1
  402f20:	bl	401b38 <sd_event_source_set_enabled@plt>
  402f24:	stur	w0, [x29, #-36]
  402f28:	ldur	w8, [x29, #-36]
  402f2c:	cmp	w8, #0x0
  402f30:	cset	w8, ge  // ge = tcont
  402f34:	tbnz	w8, #0, 402fbc <add_listen_socket+0x518>
  402f38:	mov	w8, #0x3                   	// #3
  402f3c:	str	w8, [sp, #56]
  402f40:	ldur	w8, [x29, #-36]
  402f44:	str	w8, [sp, #52]
  402f48:	str	wzr, [sp, #48]
  402f4c:	ldr	w0, [sp, #48]
  402f50:	bl	4019e8 <log_get_max_level_realm@plt>
  402f54:	ldr	w8, [sp, #56]
  402f58:	and	w8, w8, #0x7
  402f5c:	cmp	w0, w8
  402f60:	b.lt	402f94 <add_listen_socket+0x4f0>  // b.tstop
  402f64:	ldr	w8, [sp, #48]
  402f68:	ldr	w9, [sp, #56]
  402f6c:	orr	w0, w9, w8, lsl #10
  402f70:	ldr	w1, [sp, #52]
  402f74:	ldr	x2, [sp, #32]
  402f78:	mov	w3, #0x212                 	// #530
  402f7c:	ldr	x4, [sp, #24]
  402f80:	adrp	x5, 406000 <connection_shovel.__assert_in_set.64+0x330>
  402f84:	add	x5, x5, #0x149
  402f88:	bl	4019f8 <log_internal_realm@plt>
  402f8c:	str	w0, [sp]
  402f90:	b	402fa8 <add_listen_socket+0x504>
  402f94:	ldr	w0, [sp, #52]
  402f98:	bl	401a08 <abs@plt>
  402f9c:	mov	w8, wzr
  402fa0:	subs	w8, w8, w0, uxtb
  402fa4:	str	w8, [sp]
  402fa8:	ldr	w8, [sp]
  402fac:	str	w8, [sp, #44]
  402fb0:	ldr	w8, [sp, #44]
  402fb4:	stur	w8, [x29, #-4]
  402fb8:	b	402fc0 <add_listen_socket+0x51c>
  402fbc:	stur	wzr, [x29, #-4]
  402fc0:	ldur	w0, [x29, #-4]
  402fc4:	ldp	x29, x30, [sp, #176]
  402fc8:	add	sp, sp, #0xc0
  402fcc:	ret

0000000000402fd0 <set_steal_first>:
  402fd0:	sub	sp, sp, #0x20
  402fd4:	stp	x29, x30, [sp, #16]
  402fd8:	add	x29, sp, #0x10
  402fdc:	mov	x8, xzr
  402fe0:	str	x0, [sp, #8]
  402fe4:	ldr	x0, [sp, #8]
  402fe8:	mov	w9, #0x1                   	// #1
  402fec:	and	w1, w9, #0x1
  402ff0:	mov	x2, x8
  402ff4:	bl	401b48 <internal_hashmap_first_key_and_value@plt>
  402ff8:	ldp	x29, x30, [sp, #16]
  402ffc:	add	sp, sp, #0x20
  403000:	ret

0000000000403004 <set_free>:
  403004:	sub	sp, sp, #0x20
  403008:	stp	x29, x30, [sp, #16]
  40300c:	add	x29, sp, #0x10
  403010:	mov	x8, xzr
  403014:	str	x0, [sp, #8]
  403018:	ldr	x0, [sp, #8]
  40301c:	mov	x1, x8
  403020:	mov	x2, x8
  403024:	bl	401b58 <internal_hashmap_free@plt>
  403028:	ldp	x29, x30, [sp, #16]
  40302c:	add	sp, sp, #0x20
  403030:	ret

0000000000403034 <connection_free>:
  403034:	sub	sp, sp, #0x20
  403038:	stp	x29, x30, [sp, #16]
  40303c:	add	x29, sp, #0x10
  403040:	adrp	x8, 405000 <traffic_cb+0xf0>
  403044:	add	x8, x8, #0xcf0
  403048:	add	x2, x8, #0x3
  40304c:	str	x0, [sp, #8]
  403050:	str	x2, [sp]
  403054:	ldr	x8, [sp, #8]
  403058:	cmp	x8, #0x0
  40305c:	cset	w9, ne  // ne = any
  403060:	mov	w10, #0x1                   	// #1
  403064:	eor	w9, w9, #0x1
  403068:	eor	w9, w9, w10
  40306c:	eor	w9, w9, w10
  403070:	and	w9, w9, #0x1
  403074:	mov	w0, w9
  403078:	sxtw	x8, w0
  40307c:	cbz	x8, 4030a4 <connection_free+0x70>
  403080:	mov	w8, wzr
  403084:	mov	w0, w8
  403088:	adrp	x1, 405000 <traffic_cb+0xf0>
  40308c:	add	x1, x1, #0xe04
  403090:	ldr	x2, [sp]
  403094:	mov	w3, #0x3b                  	// #59
  403098:	adrp	x4, 405000 <traffic_cb+0xf0>
  40309c:	add	x4, x4, #0xe06
  4030a0:	bl	401a68 <log_assert_failed_realm@plt>
  4030a4:	ldr	x8, [sp, #8]
  4030a8:	ldr	x8, [x8]
  4030ac:	cbz	x8, 4030c4 <connection_free+0x90>
  4030b0:	ldr	x8, [sp, #8]
  4030b4:	ldr	x8, [x8]
  4030b8:	ldr	x0, [x8, #24]
  4030bc:	ldr	x1, [sp, #8]
  4030c0:	bl	403140 <set_remove>
  4030c4:	ldr	x8, [sp, #8]
  4030c8:	ldr	x0, [x8, #64]
  4030cc:	bl	401a78 <sd_event_source_unref@plt>
  4030d0:	ldr	x8, [sp, #8]
  4030d4:	ldr	x8, [x8, #72]
  4030d8:	mov	x0, x8
  4030dc:	bl	401a78 <sd_event_source_unref@plt>
  4030e0:	ldr	x8, [sp, #8]
  4030e4:	ldr	w9, [x8, #8]
  4030e8:	mov	w0, w9
  4030ec:	bl	401b68 <safe_close@plt>
  4030f0:	ldr	x8, [sp, #8]
  4030f4:	ldr	w9, [x8, #12]
  4030f8:	mov	w0, w9
  4030fc:	bl	401b68 <safe_close@plt>
  403100:	ldr	x8, [sp, #8]
  403104:	add	x8, x8, #0x10
  403108:	mov	x0, x8
  40310c:	bl	401b78 <safe_close_pair@plt>
  403110:	ldr	x8, [sp, #8]
  403114:	add	x0, x8, #0x18
  403118:	bl	401b78 <safe_close_pair@plt>
  40311c:	ldr	x8, [sp, #8]
  403120:	ldr	x0, [x8, #80]
  403124:	bl	401b88 <sd_resolve_query_unref@plt>
  403128:	ldr	x8, [sp, #8]
  40312c:	mov	x0, x8
  403130:	bl	401b98 <free@plt>
  403134:	ldp	x29, x30, [sp, #16]
  403138:	add	sp, sp, #0x20
  40313c:	ret

0000000000403140 <set_remove>:
  403140:	sub	sp, sp, #0x20
  403144:	stp	x29, x30, [sp, #16]
  403148:	add	x29, sp, #0x10
  40314c:	str	x0, [sp, #8]
  403150:	str	x1, [sp]
  403154:	ldr	x0, [sp, #8]
  403158:	ldr	x1, [sp]
  40315c:	bl	401ba8 <internal_hashmap_remove@plt>
  403160:	ldp	x29, x30, [sp, #16]
  403164:	add	sp, sp, #0x20
  403168:	ret

000000000040316c <help>:
  40316c:	sub	sp, sp, #0x30
  403170:	stp	x29, x30, [sp, #32]
  403174:	add	x29, sp, #0x20
  403178:	mov	x8, xzr
  40317c:	adrp	x0, 405000 <traffic_cb+0xf0>
  403180:	add	x0, x0, #0xf0b
  403184:	adrp	x1, 405000 <traffic_cb+0xf0>
  403188:	add	x1, x1, #0xf21
  40318c:	adrp	x9, 405000 <traffic_cb+0xf0>
  403190:	add	x9, x9, #0xcf0
  403194:	add	x9, x9, #0x3
  403198:	add	x2, sp, #0x10
  40319c:	str	x8, [sp, #16]
  4031a0:	str	x9, [sp]
  4031a4:	bl	401bb8 <terminal_urlify_man@plt>
  4031a8:	str	w0, [sp, #12]
  4031ac:	ldr	w10, [sp, #12]
  4031b0:	cmp	w10, #0x0
  4031b4:	cset	w10, ge  // ge = tcont
  4031b8:	tbnz	w10, #0, 4031e8 <help+0x7c>
  4031bc:	mov	w8, wzr
  4031c0:	mov	w0, w8
  4031c4:	ldr	x1, [sp]
  4031c8:	mov	w2, #0x21d                 	// #541
  4031cc:	adrp	x3, 405000 <traffic_cb+0xf0>
  4031d0:	add	x3, x3, #0xe39
  4031d4:	bl	401ae8 <log_oom_internal@plt>
  4031d8:	stur	w0, [x29, #-4]
  4031dc:	mov	w8, #0x1                   	// #1
  4031e0:	str	w8, [sp, #8]
  4031e4:	b	403210 <help+0xa4>
  4031e8:	adrp	x8, 420000 <arg_connections_max>
  4031ec:	add	x8, x8, #0x38
  4031f0:	ldr	x1, [x8]
  4031f4:	ldr	x2, [sp, #16]
  4031f8:	adrp	x0, 405000 <traffic_cb+0xf0>
  4031fc:	add	x0, x0, #0xf23
  403200:	bl	401bc8 <printf@plt>
  403204:	stur	wzr, [x29, #-4]
  403208:	mov	w9, #0x1                   	// #1
  40320c:	str	w9, [sp, #8]
  403210:	add	x0, sp, #0x10
  403214:	bl	40325c <freep>
  403218:	ldur	w0, [x29, #-4]
  40321c:	ldp	x29, x30, [sp, #32]
  403220:	add	sp, sp, #0x30
  403224:	ret

0000000000403228 <safe_atou>:
  403228:	sub	sp, sp, #0x20
  40322c:	stp	x29, x30, [sp, #16]
  403230:	add	x29, sp, #0x10
  403234:	mov	w8, wzr
  403238:	str	x0, [sp, #8]
  40323c:	str	x1, [sp]
  403240:	ldr	x0, [sp, #8]
  403244:	ldr	x2, [sp]
  403248:	mov	w1, w8
  40324c:	bl	401bd8 <safe_atou_full@plt>
  403250:	ldp	x29, x30, [sp, #16]
  403254:	add	sp, sp, #0x20
  403258:	ret

000000000040325c <freep>:
  40325c:	sub	sp, sp, #0x20
  403260:	stp	x29, x30, [sp, #16]
  403264:	add	x29, sp, #0x10
  403268:	str	x0, [sp, #8]
  40326c:	ldr	x8, [sp, #8]
  403270:	ldr	x0, [x8]
  403274:	bl	401b98 <free@plt>
  403278:	ldp	x29, x30, [sp, #16]
  40327c:	add	sp, sp, #0x20
  403280:	ret

0000000000403284 <accept_cb>:
  403284:	sub	sp, sp, #0xe0
  403288:	stp	x29, x30, [sp, #208]
  40328c:	add	x29, sp, #0xd0
  403290:	mov	x8, xzr
  403294:	mov	w9, #0xffffffff            	// #-1
  403298:	adrp	x10, 405000 <traffic_cb+0xf0>
  40329c:	add	x10, x10, #0xcf0
  4032a0:	add	x10, x10, #0x3
  4032a4:	adrp	x11, 406000 <connection_shovel.__assert_in_set.64+0x330>
  4032a8:	add	x11, x11, #0x1b7
  4032ac:	adrp	x12, 406000 <connection_shovel.__assert_in_set.64+0x330>
  4032b0:	add	x12, x12, #0x16d
  4032b4:	stur	x0, [x29, #-16]
  4032b8:	stur	w1, [x29, #-20]
  4032bc:	stur	w2, [x29, #-24]
  4032c0:	stur	x3, [x29, #-32]
  4032c4:	stur	x8, [x29, #-40]
  4032c8:	ldur	x8, [x29, #-32]
  4032cc:	stur	x8, [x29, #-48]
  4032d0:	stur	w9, [x29, #-52]
  4032d4:	str	x10, [sp, #64]
  4032d8:	str	x11, [sp, #56]
  4032dc:	str	x12, [sp, #48]
  4032e0:	ldur	x8, [x29, #-16]
  4032e4:	cmp	x8, #0x0
  4032e8:	cset	w9, ne  // ne = any
  4032ec:	mov	w10, #0x1                   	// #1
  4032f0:	eor	w9, w9, #0x1
  4032f4:	eor	w9, w9, w10
  4032f8:	eor	w9, w9, w10
  4032fc:	and	w9, w9, #0x1
  403300:	mov	w0, w9
  403304:	sxtw	x8, w0
  403308:	cbz	x8, 40332c <accept_cb+0xa8>
  40330c:	mov	w8, wzr
  403310:	mov	w0, w8
  403314:	adrp	x1, 406000 <connection_shovel.__assert_in_set.64+0x330>
  403318:	add	x1, x1, #0x16b
  40331c:	ldr	x2, [sp, #64]
  403320:	mov	w3, #0x1cd                 	// #461
  403324:	ldr	x4, [sp, #48]
  403328:	bl	401a68 <log_assert_failed_realm@plt>
  40332c:	ldur	w8, [x29, #-20]
  403330:	cmp	w8, #0x0
  403334:	cset	w8, ge  // ge = tcont
  403338:	mov	w9, #0x1                   	// #1
  40333c:	eor	w8, w8, #0x1
  403340:	eor	w8, w8, w9
  403344:	eor	w8, w8, w9
  403348:	and	w8, w8, #0x1
  40334c:	mov	w0, w8
  403350:	sxtw	x10, w0
  403354:	cbz	x10, 403378 <accept_cb+0xf4>
  403358:	mov	w8, wzr
  40335c:	mov	w0, w8
  403360:	adrp	x1, 406000 <connection_shovel.__assert_in_set.64+0x330>
  403364:	add	x1, x1, #0x73
  403368:	ldr	x2, [sp, #64]
  40336c:	mov	w3, #0x1ce                 	// #462
  403370:	ldr	x4, [sp, #48]
  403374:	bl	401a68 <log_assert_failed_realm@plt>
  403378:	ldur	w8, [x29, #-24]
  40337c:	tst	w8, #0x1
  403380:	cset	w8, ne  // ne = any
  403384:	mov	w9, #0x1                   	// #1
  403388:	eor	w8, w8, #0x1
  40338c:	eor	w8, w8, w9
  403390:	eor	w8, w8, w9
  403394:	and	w8, w8, #0x1
  403398:	mov	w0, w8
  40339c:	sxtw	x10, w0
  4033a0:	cbz	x10, 4033c4 <accept_cb+0x140>
  4033a4:	mov	w8, wzr
  4033a8:	mov	w0, w8
  4033ac:	adrp	x1, 406000 <connection_shovel.__assert_in_set.64+0x330>
  4033b0:	add	x1, x1, #0x1a5
  4033b4:	ldr	x2, [sp, #64]
  4033b8:	mov	w3, #0x1cf                 	// #463
  4033bc:	ldr	x4, [sp, #48]
  4033c0:	bl	401a68 <log_assert_failed_realm@plt>
  4033c4:	ldur	x8, [x29, #-48]
  4033c8:	cmp	x8, #0x0
  4033cc:	cset	w9, ne  // ne = any
  4033d0:	mov	w10, #0x1                   	// #1
  4033d4:	eor	w9, w9, #0x1
  4033d8:	eor	w9, w9, w10
  4033dc:	eor	w9, w9, w10
  4033e0:	and	w9, w9, #0x1
  4033e4:	mov	w0, w9
  4033e8:	sxtw	x8, w0
  4033ec:	cbz	x8, 403410 <accept_cb+0x18c>
  4033f0:	mov	w8, wzr
  4033f4:	mov	w0, w8
  4033f8:	adrp	x1, 405000 <traffic_cb+0xf0>
  4033fc:	add	x1, x1, #0xdde
  403400:	ldr	x2, [sp, #64]
  403404:	mov	w3, #0x1d0                 	// #464
  403408:	ldr	x4, [sp, #48]
  40340c:	bl	401a68 <log_assert_failed_realm@plt>
  403410:	ldur	w0, [x29, #-20]
  403414:	mov	x8, xzr
  403418:	stur	x8, [x29, #-64]
  40341c:	ldur	x1, [x29, #-64]
  403420:	mov	x2, x8
  403424:	mov	w3, #0x800                 	// #2048
  403428:	movk	w3, #0x8, lsl #16
  40342c:	bl	401be8 <accept4@plt>
  403430:	stur	w0, [x29, #-52]
  403434:	ldur	w9, [x29, #-52]
  403438:	cmp	w9, #0x0
  40343c:	cset	w9, ge  // ge = tcont
  403440:	tbnz	w9, #0, 4034d4 <accept_cb+0x250>
  403444:	bl	401bf8 <__errno_location@plt>
  403448:	ldr	w0, [x0]
  40344c:	bl	403708 <ERRNO_IS_ACCEPT_AGAIN>
  403450:	tbnz	w0, #0, 4034d0 <accept_cb+0x24c>
  403454:	mov	w8, #0x4                   	// #4
  403458:	stur	w8, [x29, #-68]
  40345c:	bl	401bf8 <__errno_location@plt>
  403460:	ldr	w8, [x0]
  403464:	stur	w8, [x29, #-72]
  403468:	stur	wzr, [x29, #-76]
  40346c:	ldur	w0, [x29, #-76]
  403470:	bl	4019e8 <log_get_max_level_realm@plt>
  403474:	ldur	w8, [x29, #-68]
  403478:	and	w8, w8, #0x7
  40347c:	cmp	w0, w8
  403480:	b.lt	4034b4 <accept_cb+0x230>  // b.tstop
  403484:	ldur	w8, [x29, #-76]
  403488:	ldur	w9, [x29, #-68]
  40348c:	orr	w0, w9, w8, lsl #10
  403490:	ldur	w1, [x29, #-72]
  403494:	ldr	x2, [sp, #64]
  403498:	mov	w3, #0x1d5                 	// #469
  40349c:	ldr	x4, [sp, #56]
  4034a0:	adrp	x5, 406000 <connection_shovel.__assert_in_set.64+0x330>
  4034a4:	add	x5, x5, #0x1c1
  4034a8:	bl	4019f8 <log_internal_realm@plt>
  4034ac:	str	w0, [sp, #44]
  4034b0:	b	4034c8 <accept_cb+0x244>
  4034b4:	ldur	w0, [x29, #-72]
  4034b8:	bl	401a08 <abs@plt>
  4034bc:	mov	w8, wzr
  4034c0:	subs	w8, w8, w0, uxtb
  4034c4:	str	w8, [sp, #44]
  4034c8:	ldr	w8, [sp, #44]
  4034cc:	stur	w8, [x29, #-80]
  4034d0:	b	403628 <accept_cb+0x3a4>
  4034d4:	ldur	w0, [x29, #-52]
  4034d8:	mov	w8, #0x1                   	// #1
  4034dc:	and	w1, w8, #0x1
  4034e0:	sub	x2, x29, #0x28
  4034e4:	bl	401c08 <getpeername_pretty@plt>
  4034e8:	mov	w8, #0x7                   	// #7
  4034ec:	stur	w8, [x29, #-84]
  4034f0:	stur	wzr, [x29, #-88]
  4034f4:	stur	wzr, [x29, #-92]
  4034f8:	ldur	w8, [x29, #-92]
  4034fc:	mov	w0, w8
  403500:	bl	4019e8 <log_get_max_level_realm@plt>
  403504:	ldur	w8, [x29, #-84]
  403508:	and	w8, w8, #0x7
  40350c:	cmp	w0, w8
  403510:	b.lt	40356c <accept_cb+0x2e8>  // b.tstop
  403514:	ldur	w8, [x29, #-92]
  403518:	ldur	w9, [x29, #-84]
  40351c:	orr	w0, w9, w8, lsl #10
  403520:	ldur	w1, [x29, #-88]
  403524:	ldur	x10, [x29, #-40]
  403528:	str	w0, [sp, #40]
  40352c:	mov	x0, x10
  403530:	str	w1, [sp, #36]
  403534:	bl	4037a8 <strna>
  403538:	ldr	w8, [sp, #40]
  40353c:	str	x0, [sp, #24]
  403540:	mov	w0, w8
  403544:	ldr	w1, [sp, #36]
  403548:	ldr	x2, [sp, #64]
  40354c:	mov	w3, #0x1d8                 	// #472
  403550:	ldr	x4, [sp, #56]
  403554:	adrp	x5, 406000 <connection_shovel.__assert_in_set.64+0x330>
  403558:	add	x5, x5, #0x1df
  40355c:	ldr	x6, [sp, #24]
  403560:	bl	4019f8 <log_internal_realm@plt>
  403564:	str	w0, [sp, #20]
  403568:	b	403580 <accept_cb+0x2fc>
  40356c:	ldur	w0, [x29, #-88]
  403570:	bl	401a08 <abs@plt>
  403574:	mov	w8, wzr
  403578:	subs	w8, w8, w0, uxtb
  40357c:	str	w8, [sp, #20]
  403580:	ldr	w8, [sp, #20]
  403584:	stur	w8, [x29, #-96]
  403588:	ldur	x0, [x29, #-48]
  40358c:	ldur	w1, [x29, #-52]
  403590:	bl	4037e4 <add_connection_socket>
  403594:	stur	w0, [x29, #-56]
  403598:	ldur	w8, [x29, #-56]
  40359c:	cmp	w8, #0x0
  4035a0:	cset	w8, ge  // ge = tcont
  4035a4:	tbnz	w8, #0, 403628 <accept_cb+0x3a4>
  4035a8:	mov	w8, #0x3                   	// #3
  4035ac:	stur	w8, [x29, #-100]
  4035b0:	ldur	w8, [x29, #-56]
  4035b4:	str	w8, [sp, #104]
  4035b8:	str	wzr, [sp, #100]
  4035bc:	ldr	w0, [sp, #100]
  4035c0:	bl	4019e8 <log_get_max_level_realm@plt>
  4035c4:	ldur	w8, [x29, #-100]
  4035c8:	and	w8, w8, #0x7
  4035cc:	cmp	w0, w8
  4035d0:	b.lt	403604 <accept_cb+0x380>  // b.tstop
  4035d4:	ldr	w8, [sp, #100]
  4035d8:	ldur	w9, [x29, #-100]
  4035dc:	orr	w0, w9, w8, lsl #10
  4035e0:	ldr	w1, [sp, #104]
  4035e4:	ldr	x2, [sp, #64]
  4035e8:	mov	w3, #0x1dc                 	// #476
  4035ec:	ldr	x4, [sp, #56]
  4035f0:	adrp	x5, 406000 <connection_shovel.__assert_in_set.64+0x330>
  4035f4:	add	x5, x5, #0x1f6
  4035f8:	bl	4019f8 <log_internal_realm@plt>
  4035fc:	str	w0, [sp, #16]
  403600:	b	403618 <accept_cb+0x394>
  403604:	ldr	w0, [sp, #104]
  403608:	bl	401a08 <abs@plt>
  40360c:	mov	w8, wzr
  403610:	subs	w8, w8, w0, uxtb
  403614:	str	w8, [sp, #16]
  403618:	ldr	w8, [sp, #16]
  40361c:	str	w8, [sp, #96]
  403620:	ldur	w0, [x29, #-20]
  403624:	bl	401b68 <safe_close@plt>
  403628:	ldur	x0, [x29, #-16]
  40362c:	mov	w1, #0xffffffff            	// #-1
  403630:	bl	401b38 <sd_event_source_set_enabled@plt>
  403634:	stur	w0, [x29, #-56]
  403638:	ldur	w8, [x29, #-56]
  40363c:	cmp	w8, #0x0
  403640:	cset	w8, ge  // ge = tcont
  403644:	tbnz	w8, #0, 4036e4 <accept_cb+0x460>
  403648:	mov	w8, #0x3                   	// #3
  40364c:	str	w8, [sp, #92]
  403650:	ldur	w8, [x29, #-56]
  403654:	str	w8, [sp, #88]
  403658:	str	wzr, [sp, #84]
  40365c:	ldr	w0, [sp, #84]
  403660:	bl	4019e8 <log_get_max_level_realm@plt>
  403664:	ldr	w8, [sp, #92]
  403668:	and	w8, w8, #0x7
  40366c:	cmp	w0, w8
  403670:	b.lt	4036a4 <accept_cb+0x420>  // b.tstop
  403674:	ldr	w8, [sp, #84]
  403678:	ldr	w9, [sp, #92]
  40367c:	orr	w0, w9, w8, lsl #10
  403680:	ldr	w1, [sp, #88]
  403684:	ldr	x2, [sp, #64]
  403688:	mov	w3, #0x1e3                 	// #483
  40368c:	ldr	x4, [sp, #56]
  403690:	adrp	x5, 406000 <connection_shovel.__assert_in_set.64+0x330>
  403694:	add	x5, x5, #0x220
  403698:	bl	4019f8 <log_internal_realm@plt>
  40369c:	str	w0, [sp, #12]
  4036a0:	b	4036b8 <accept_cb+0x434>
  4036a4:	ldr	w0, [sp, #88]
  4036a8:	bl	401a08 <abs@plt>
  4036ac:	mov	w8, wzr
  4036b0:	subs	w8, w8, w0, uxtb
  4036b4:	str	w8, [sp, #12]
  4036b8:	ldr	w8, [sp, #12]
  4036bc:	str	w8, [sp, #80]
  4036c0:	ldur	x9, [x29, #-48]
  4036c4:	ldr	x0, [x9]
  4036c8:	ldur	w1, [x29, #-56]
  4036cc:	bl	401c18 <sd_event_exit@plt>
  4036d0:	ldur	w8, [x29, #-56]
  4036d4:	stur	w8, [x29, #-4]
  4036d8:	mov	w8, #0x1                   	// #1
  4036dc:	str	w8, [sp, #76]
  4036e0:	b	4036f0 <accept_cb+0x46c>
  4036e4:	mov	w8, #0x1                   	// #1
  4036e8:	stur	w8, [x29, #-4]
  4036ec:	str	w8, [sp, #76]
  4036f0:	sub	x0, x29, #0x28
  4036f4:	bl	40325c <freep>
  4036f8:	ldur	w0, [x29, #-4]
  4036fc:	ldp	x29, x30, [sp, #208]
  403700:	add	sp, sp, #0xe0
  403704:	ret

0000000000403708 <ERRNO_IS_ACCEPT_AGAIN>:
  403708:	sub	sp, sp, #0x20
  40370c:	stp	x29, x30, [sp, #16]
  403710:	add	x29, sp, #0x10
  403714:	stur	w0, [x29, #-4]
  403718:	ldur	w0, [x29, #-4]
  40371c:	bl	403a84 <ERRNO_IS_DISCONNECT>
  403720:	mov	w8, #0x1                   	// #1
  403724:	str	w8, [sp, #4]
  403728:	tbnz	w0, #0, 403794 <ERRNO_IS_ACCEPT_AGAIN+0x8c>
  40372c:	mov	w8, #0x0                   	// #0
  403730:	sturb	w8, [x29, #-5]
  403734:	ldur	w0, [x29, #-4]
  403738:	bl	401a08 <abs@plt>
  40373c:	cmp	w0, #0x4
  403740:	str	w0, [sp]
  403744:	b.eq	403774 <ERRNO_IS_ACCEPT_AGAIN+0x6c>  // b.none
  403748:	b	40374c <ERRNO_IS_ACCEPT_AGAIN+0x44>
  40374c:	ldr	w8, [sp]
  403750:	cmp	w8, #0xb
  403754:	b.eq	403774 <ERRNO_IS_ACCEPT_AGAIN+0x6c>  // b.none
  403758:	b	40375c <ERRNO_IS_ACCEPT_AGAIN+0x54>
  40375c:	ldr	w8, [sp]
  403760:	cmp	w8, #0x5f
  403764:	cset	w9, eq  // eq = none
  403768:	eor	w9, w9, #0x1
  40376c:	tbnz	w9, #0, 403780 <ERRNO_IS_ACCEPT_AGAIN+0x78>
  403770:	b	403774 <ERRNO_IS_ACCEPT_AGAIN+0x6c>
  403774:	mov	w8, #0x1                   	// #1
  403778:	sturb	w8, [x29, #-5]
  40377c:	b	403780 <ERRNO_IS_ACCEPT_AGAIN+0x78>
  403780:	ldurb	w8, [x29, #-5]
  403784:	and	w8, w8, #0x1
  403788:	sturb	w8, [x29, #-6]
  40378c:	ldurb	w8, [x29, #-6]
  403790:	str	w8, [sp, #4]
  403794:	ldr	w8, [sp, #4]
  403798:	and	w0, w8, #0x1
  40379c:	ldp	x29, x30, [sp, #16]
  4037a0:	add	sp, sp, #0x20
  4037a4:	ret

00000000004037a8 <strna>:
  4037a8:	sub	sp, sp, #0x20
  4037ac:	str	x0, [sp, #24]
  4037b0:	ldr	x8, [sp, #24]
  4037b4:	str	x8, [sp, #16]
  4037b8:	cbz	x8, 4037c8 <strna+0x20>
  4037bc:	ldr	x8, [sp, #16]
  4037c0:	str	x8, [sp, #8]
  4037c4:	b	4037d4 <strna+0x2c>
  4037c8:	adrp	x8, 406000 <connection_shovel.__assert_in_set.64+0x330>
  4037cc:	add	x8, x8, #0x252
  4037d0:	str	x8, [sp, #8]
  4037d4:	ldr	x8, [sp, #8]
  4037d8:	mov	x0, x8
  4037dc:	add	sp, sp, #0x20
  4037e0:	ret

00000000004037e4 <add_connection_socket>:
  4037e4:	sub	sp, sp, #0x60
  4037e8:	stp	x29, x30, [sp, #80]
  4037ec:	add	x29, sp, #0x50
  4037f0:	adrp	x8, 405000 <traffic_cb+0xf0>
  4037f4:	add	x8, x8, #0xcf0
  4037f8:	add	x8, x8, #0x3
  4037fc:	adrp	x9, 406000 <connection_shovel.__assert_in_set.64+0x330>
  403800:	add	x9, x9, #0x280
  403804:	stur	x0, [x29, #-16]
  403808:	stur	w1, [x29, #-20]
  40380c:	str	x8, [sp, #16]
  403810:	str	x9, [sp, #8]
  403814:	ldur	x8, [x29, #-16]
  403818:	cmp	x8, #0x0
  40381c:	cset	w9, ne  // ne = any
  403820:	mov	w10, #0x1                   	// #1
  403824:	eor	w9, w9, #0x1
  403828:	eor	w9, w9, w10
  40382c:	eor	w9, w9, w10
  403830:	and	w9, w9, #0x1
  403834:	mov	w0, w9
  403838:	sxtw	x8, w0
  40383c:	cbz	x8, 403864 <add_connection_socket+0x80>
  403840:	mov	w8, wzr
  403844:	mov	w0, w8
  403848:	adrp	x1, 405000 <traffic_cb+0xf0>
  40384c:	add	x1, x1, #0xdde
  403850:	ldr	x2, [sp, #16]
  403854:	mov	w3, #0x1a3                 	// #419
  403858:	adrp	x4, 406000 <connection_shovel.__assert_in_set.64+0x330>
  40385c:	add	x4, x4, #0x256
  403860:	bl	401a68 <log_assert_failed_realm@plt>
  403864:	ldur	w8, [x29, #-20]
  403868:	cmp	w8, #0x0
  40386c:	cset	w8, ge  // ge = tcont
  403870:	mov	w9, #0x1                   	// #1
  403874:	eor	w8, w8, #0x1
  403878:	eor	w8, w8, w9
  40387c:	eor	w8, w8, w9
  403880:	and	w8, w8, #0x1
  403884:	mov	w0, w8
  403888:	sxtw	x10, w0
  40388c:	cbz	x10, 4038b4 <add_connection_socket+0xd0>
  403890:	mov	w8, wzr
  403894:	mov	w0, w8
  403898:	adrp	x1, 406000 <connection_shovel.__assert_in_set.64+0x330>
  40389c:	add	x1, x1, #0x73
  4038a0:	ldr	x2, [sp, #16]
  4038a4:	mov	w3, #0x1a4                 	// #420
  4038a8:	adrp	x4, 406000 <connection_shovel.__assert_in_set.64+0x330>
  4038ac:	add	x4, x4, #0x256
  4038b0:	bl	401a68 <log_assert_failed_realm@plt>
  4038b4:	ldur	x8, [x29, #-16]
  4038b8:	ldr	x0, [x8, #24]
  4038bc:	bl	403b04 <set_size>
  4038c0:	adrp	x8, 420000 <arg_connections_max>
  4038c4:	add	x8, x8, #0x0
  4038c8:	ldr	w9, [x8]
  4038cc:	cmp	w0, w9
  4038d0:	b.ls	403958 <add_connection_socket+0x174>  // b.plast
  4038d4:	mov	w8, #0x4                   	// #4
  4038d8:	str	w8, [sp, #40]
  4038dc:	str	wzr, [sp, #36]
  4038e0:	str	wzr, [sp, #32]
  4038e4:	ldr	w0, [sp, #32]
  4038e8:	bl	4019e8 <log_get_max_level_realm@plt>
  4038ec:	ldr	w8, [sp, #40]
  4038f0:	and	w8, w8, #0x7
  4038f4:	cmp	w0, w8
  4038f8:	b.lt	40392c <add_connection_socket+0x148>  // b.tstop
  4038fc:	ldr	w8, [sp, #32]
  403900:	ldr	w9, [sp, #40]
  403904:	orr	w0, w9, w8, lsl #10
  403908:	ldr	w1, [sp, #36]
  40390c:	ldr	x2, [sp, #16]
  403910:	mov	w3, #0x1a7                 	// #423
  403914:	ldr	x4, [sp, #8]
  403918:	adrp	x5, 406000 <connection_shovel.__assert_in_set.64+0x330>
  40391c:	add	x5, x5, #0x296
  403920:	bl	4019f8 <log_internal_realm@plt>
  403924:	str	w0, [sp, #4]
  403928:	b	403940 <add_connection_socket+0x15c>
  40392c:	ldr	w0, [sp, #36]
  403930:	bl	401a08 <abs@plt>
  403934:	mov	w8, wzr
  403938:	subs	w8, w8, w0, uxtb
  40393c:	str	w8, [sp, #4]
  403940:	ldr	w8, [sp, #4]
  403944:	str	w8, [sp, #28]
  403948:	ldur	w0, [x29, #-20]
  40394c:	bl	401b68 <safe_close@plt>
  403950:	stur	wzr, [x29, #-4]
  403954:	b	403a74 <add_connection_socket+0x290>
  403958:	ldur	x8, [x29, #-16]
  40395c:	add	x0, x8, #0x18
  403960:	mov	x8, xzr
  403964:	mov	x1, x8
  403968:	bl	401ad8 <internal_set_ensure_allocated@plt>
  40396c:	stur	w0, [x29, #-36]
  403970:	ldur	w9, [x29, #-36]
  403974:	cmp	w9, #0x0
  403978:	cset	w9, ge  // ge = tcont
  40397c:	tbnz	w9, #0, 4039a0 <add_connection_socket+0x1bc>
  403980:	mov	w8, wzr
  403984:	mov	w0, w8
  403988:	ldr	x1, [sp, #16]
  40398c:	mov	w2, #0x1ae                 	// #430
  403990:	ldr	x3, [sp, #8]
  403994:	bl	401ae8 <log_oom_internal@plt>
  403998:	stur	wzr, [x29, #-4]
  40399c:	b	403a74 <add_connection_socket+0x290>
  4039a0:	mov	x0, #0x1                   	// #1
  4039a4:	mov	x1, #0x58                  	// #88
  4039a8:	bl	401c28 <calloc@plt>
  4039ac:	stur	x0, [x29, #-32]
  4039b0:	ldur	x8, [x29, #-32]
  4039b4:	cbnz	x8, 4039d8 <add_connection_socket+0x1f4>
  4039b8:	mov	w8, wzr
  4039bc:	mov	w0, w8
  4039c0:	ldr	x1, [sp, #16]
  4039c4:	mov	w2, #0x1b4                 	// #436
  4039c8:	ldr	x3, [sp, #8]
  4039cc:	bl	401ae8 <log_oom_internal@plt>
  4039d0:	stur	wzr, [x29, #-4]
  4039d4:	b	403a74 <add_connection_socket+0x290>
  4039d8:	ldur	x8, [x29, #-16]
  4039dc:	ldur	x9, [x29, #-32]
  4039e0:	str	x8, [x9]
  4039e4:	ldur	w10, [x29, #-20]
  4039e8:	ldur	x8, [x29, #-32]
  4039ec:	str	w10, [x8, #8]
  4039f0:	ldur	x8, [x29, #-32]
  4039f4:	mov	w10, #0xffffffff            	// #-1
  4039f8:	str	w10, [x8, #12]
  4039fc:	ldur	x8, [x29, #-32]
  403a00:	str	w10, [x8, #20]
  403a04:	ldur	x8, [x29, #-32]
  403a08:	str	w10, [x8, #16]
  403a0c:	ldur	x8, [x29, #-32]
  403a10:	str	w10, [x8, #28]
  403a14:	ldur	x8, [x29, #-32]
  403a18:	str	w10, [x8, #24]
  403a1c:	ldur	x8, [x29, #-16]
  403a20:	ldr	x0, [x8, #24]
  403a24:	ldur	x1, [x29, #-32]
  403a28:	bl	401b28 <set_put@plt>
  403a2c:	stur	w0, [x29, #-36]
  403a30:	ldur	w10, [x29, #-36]
  403a34:	cmp	w10, #0x0
  403a38:	cset	w10, ge  // ge = tcont
  403a3c:	tbnz	w10, #0, 403a68 <add_connection_socket+0x284>
  403a40:	ldur	x0, [x29, #-32]
  403a44:	bl	401b98 <free@plt>
  403a48:	mov	w8, wzr
  403a4c:	mov	w0, w8
  403a50:	ldr	x1, [sp, #16]
  403a54:	mov	w2, #0x1c1                 	// #449
  403a58:	ldr	x3, [sp, #8]
  403a5c:	bl	401ae8 <log_oom_internal@plt>
  403a60:	stur	wzr, [x29, #-4]
  403a64:	b	403a74 <add_connection_socket+0x290>
  403a68:	ldur	x0, [x29, #-32]
  403a6c:	bl	403b28 <resolve_remote>
  403a70:	stur	w0, [x29, #-4]
  403a74:	ldur	w0, [x29, #-4]
  403a78:	ldp	x29, x30, [sp, #80]
  403a7c:	add	sp, sp, #0x60
  403a80:	ret

0000000000403a84 <ERRNO_IS_DISCONNECT>:
  403a84:	sub	sp, sp, #0x20
  403a88:	stp	x29, x30, [sp, #16]
  403a8c:	add	x29, sp, #0x10
  403a90:	mov	w8, #0x0                   	// #0
  403a94:	stur	w0, [x29, #-4]
  403a98:	sturb	w8, [x29, #-5]
  403a9c:	ldur	w0, [x29, #-4]
  403aa0:	bl	401a08 <abs@plt>
  403aa4:	subs	w8, w0, #0x20
  403aa8:	mov	w9, w8
  403aac:	ubfx	x9, x9, #0, #32
  403ab0:	cmp	x9, #0x51
  403ab4:	str	x9, [sp]
  403ab8:	b.hi	403ae0 <ERRNO_IS_DISCONNECT+0x5c>  // b.pmore
  403abc:	adrp	x8, 405000 <traffic_cb+0xf0>
  403ac0:	add	x8, x8, #0x980
  403ac4:	ldr	x11, [sp]
  403ac8:	ldrsw	x10, [x8, x11, lsl #2]
  403acc:	add	x9, x8, x10
  403ad0:	br	x9
  403ad4:	mov	w8, #0x1                   	// #1
  403ad8:	sturb	w8, [x29, #-5]
  403adc:	b	403ae0 <ERRNO_IS_DISCONNECT+0x5c>
  403ae0:	ldurb	w8, [x29, #-5]
  403ae4:	mov	w9, #0x1                   	// #1
  403ae8:	and	w8, w8, w9
  403aec:	sturb	w8, [x29, #-6]
  403af0:	ldurb	w8, [x29, #-6]
  403af4:	and	w0, w8, #0x1
  403af8:	ldp	x29, x30, [sp, #16]
  403afc:	add	sp, sp, #0x20
  403b00:	ret

0000000000403b04 <set_size>:
  403b04:	sub	sp, sp, #0x20
  403b08:	stp	x29, x30, [sp, #16]
  403b0c:	add	x29, sp, #0x10
  403b10:	str	x0, [sp, #8]
  403b14:	ldr	x0, [sp, #8]
  403b18:	bl	401c38 <internal_hashmap_size@plt>
  403b1c:	ldp	x29, x30, [sp, #16]
  403b20:	add	sp, sp, #0x20
  403b24:	ret

0000000000403b28 <resolve_remote>:
  403b28:	stp	x29, x30, [sp, #-32]!
  403b2c:	stp	x28, x19, [sp, #16]
  403b30:	mov	x29, sp
  403b34:	sub	sp, sp, #0x160
  403b38:	mov	x19, sp
  403b3c:	sub	x8, x29, #0x10
  403b40:	mov	w9, #0x0                   	// #0
  403b44:	mov	x2, #0x80                  	// #128
  403b48:	adrp	x10, 420000 <arg_connections_max>
  403b4c:	add	x10, x10, #0x10
  403b50:	mov	w11, wzr
  403b54:	adrp	x12, 405000 <traffic_cb+0xf0>
  403b58:	add	x12, x12, #0xcf0
  403b5c:	add	x12, x12, #0x3
  403b60:	adrp	x13, 406000 <connection_shovel.__assert_in_set.64+0x330>
  403b64:	add	x13, x13, #0x2c1
  403b68:	sub	x14, x29, #0x90
  403b6c:	str	x0, [x8]
  403b70:	mov	x0, x14
  403b74:	mov	w1, w11
  403b78:	str	x8, [x19, #64]
  403b7c:	str	w9, [x19, #60]
  403b80:	str	x10, [x19, #48]
  403b84:	str	x12, [x19, #40]
  403b88:	str	x13, [x19, #32]
  403b8c:	bl	4019a8 <memset@plt>
  403b90:	ldr	w9, [x19, #60]
  403b94:	sturb	w9, [x29, #-165]
  403b98:	ldr	x8, [x19, #48]
  403b9c:	ldr	x10, [x8]
  403ba0:	ldrb	w11, [x10]
  403ba4:	cmp	w11, #0x2f
  403ba8:	str	w11, [x19, #28]
  403bac:	b.eq	403bcc <resolve_remote+0xa4>  // b.none
  403bb0:	b	403bb4 <resolve_remote+0x8c>
  403bb4:	ldr	w8, [x19, #28]
  403bb8:	cmp	w8, #0x40
  403bbc:	cset	w9, eq  // eq = none
  403bc0:	eor	w9, w9, #0x1
  403bc4:	tbnz	w9, #0, 403bd8 <resolve_remote+0xb0>
  403bc8:	b	403bcc <resolve_remote+0xa4>
  403bcc:	mov	w8, #0x1                   	// #1
  403bd0:	sturb	w8, [x29, #-165]
  403bd4:	b	403bd8 <resolve_remote+0xb0>
  403bd8:	ldurb	w8, [x29, #-165]
  403bdc:	and	w8, w8, #0x1
  403be0:	sturb	w8, [x29, #-166]
  403be4:	ldurb	w8, [x29, #-166]
  403be8:	tbnz	w8, #0, 403bf0 <resolve_remote+0xc8>
  403bec:	b	403cac <resolve_remote+0x184>
  403bf0:	ldr	x8, [x19, #48]
  403bf4:	ldr	x1, [x8]
  403bf8:	sub	x0, x29, #0x90
  403bfc:	bl	401c48 <sockaddr_un_set_path@plt>
  403c00:	stur	w0, [x29, #-172]
  403c04:	ldur	w9, [x29, #-172]
  403c08:	cmp	w9, #0x0
  403c0c:	cset	w9, ge  // ge = tcont
  403c10:	tbnz	w9, #0, 403c90 <resolve_remote+0x168>
  403c14:	mov	w8, #0x3                   	// #3
  403c18:	str	w8, [x19, #176]
  403c1c:	ldur	w8, [x29, #-172]
  403c20:	str	w8, [x19, #172]
  403c24:	str	wzr, [x19, #168]
  403c28:	ldr	w0, [x19, #168]
  403c2c:	bl	4019e8 <log_get_max_level_realm@plt>
  403c30:	ldr	w8, [x19, #176]
  403c34:	and	w8, w8, #0x7
  403c38:	cmp	w0, w8
  403c3c:	b.lt	403c70 <resolve_remote+0x148>  // b.tstop
  403c40:	ldr	w8, [x19, #168]
  403c44:	ldr	w9, [x19, #176]
  403c48:	orr	w0, w9, w8, lsl #10
  403c4c:	ldr	w1, [x19, #172]
  403c50:	ldr	x2, [x19, #40]
  403c54:	mov	w3, #0x181                 	// #385
  403c58:	ldr	x4, [x19, #32]
  403c5c:	adrp	x5, 406000 <connection_shovel.__assert_in_set.64+0x330>
  403c60:	add	x5, x5, #0x2d0
  403c64:	bl	4019f8 <log_internal_realm@plt>
  403c68:	str	w0, [x19, #24]
  403c6c:	b	403c84 <resolve_remote+0x15c>
  403c70:	ldr	w0, [x19, #172]
  403c74:	bl	401a08 <abs@plt>
  403c78:	mov	w8, wzr
  403c7c:	subs	w8, w8, w0, uxtb
  403c80:	str	w8, [x19, #24]
  403c84:	ldr	w8, [x19, #24]
  403c88:	str	w8, [x19, #164]
  403c8c:	b	403ee0 <resolve_remote+0x3b8>
  403c90:	ldr	x8, [x19, #64]
  403c94:	ldr	x0, [x8]
  403c98:	ldur	w2, [x29, #-172]
  403c9c:	sub	x1, x29, #0x90
  403ca0:	bl	403f04 <connection_start>
  403ca4:	stur	w0, [x29, #-4]
  403ca8:	b	403ef0 <resolve_remote+0x3c8>
  403cac:	ldr	x8, [x19, #48]
  403cb0:	ldr	x0, [x8]
  403cb4:	mov	w1, #0x3a                  	// #58
  403cb8:	bl	401c58 <strrchr@plt>
  403cbc:	stur	x0, [x29, #-160]
  403cc0:	ldur	x8, [x29, #-160]
  403cc4:	cbz	x8, 403d60 <resolve_remote+0x238>
  403cc8:	ldr	x8, [x19, #48]
  403ccc:	ldr	x9, [x8]
  403cd0:	str	x9, [x19, #152]
  403cd4:	ldr	x0, [x19, #152]
  403cd8:	ldur	x9, [x29, #-160]
  403cdc:	ldr	x10, [x8]
  403ce0:	subs	x1, x9, x10
  403ce4:	bl	401c68 <strnlen@plt>
  403ce8:	str	x0, [x19, #144]
  403cec:	ldr	x8, [x19, #144]
  403cf0:	mov	x9, #0x1                   	// #1
  403cf4:	add	x8, x8, #0x1
  403cf8:	mul	x8, x8, x9
  403cfc:	add	x8, x8, #0xf
  403d00:	and	x8, x8, #0xfffffffffffffff0
  403d04:	mov	x9, sp
  403d08:	subs	x8, x9, x8
  403d0c:	mov	sp, x8
  403d10:	str	x8, [x19, #136]
  403d14:	ldr	x8, [x19, #136]
  403d18:	ldr	x9, [x19, #144]
  403d1c:	add	x8, x8, x9
  403d20:	mov	w11, #0x0                   	// #0
  403d24:	strb	w11, [x8]
  403d28:	ldr	x8, [x19, #136]
  403d2c:	ldr	x1, [x19, #152]
  403d30:	ldr	x2, [x19, #144]
  403d34:	mov	x0, x8
  403d38:	str	x8, [x19, #16]
  403d3c:	bl	401c78 <memcpy@plt>
  403d40:	ldr	x8, [x19, #16]
  403d44:	str	x8, [x19, #128]
  403d48:	ldr	x9, [x19, #128]
  403d4c:	stur	x9, [x29, #-152]
  403d50:	ldur	x9, [x29, #-160]
  403d54:	add	x9, x9, #0x1
  403d58:	stur	x9, [x29, #-160]
  403d5c:	b	403d78 <resolve_remote+0x250>
  403d60:	ldr	x8, [x19, #48]
  403d64:	ldr	x9, [x8]
  403d68:	stur	x9, [x29, #-152]
  403d6c:	adrp	x9, 406000 <connection_shovel.__assert_in_set.64+0x330>
  403d70:	add	x9, x9, #0x312
  403d74:	stur	x9, [x29, #-160]
  403d78:	mov	w8, #0x7                   	// #7
  403d7c:	str	w8, [x19, #124]
  403d80:	str	wzr, [x19, #120]
  403d84:	str	wzr, [x19, #116]
  403d88:	ldr	w0, [x19, #116]
  403d8c:	bl	4019e8 <log_get_max_level_realm@plt>
  403d90:	ldr	w8, [x19, #124]
  403d94:	and	w8, w8, #0x7
  403d98:	cmp	w0, w8
  403d9c:	b.lt	403dd8 <resolve_remote+0x2b0>  // b.tstop
  403da0:	ldr	w8, [x19, #116]
  403da4:	ldr	w9, [x19, #124]
  403da8:	orr	w0, w9, w8, lsl #10
  403dac:	ldr	w1, [x19, #120]
  403db0:	ldur	x6, [x29, #-152]
  403db4:	ldur	x7, [x29, #-160]
  403db8:	ldr	x2, [x19, #40]
  403dbc:	mov	w3, #0x191                 	// #401
  403dc0:	ldr	x4, [x19, #32]
  403dc4:	adrp	x5, 406000 <connection_shovel.__assert_in_set.64+0x330>
  403dc8:	add	x5, x5, #0x315
  403dcc:	bl	4019f8 <log_internal_realm@plt>
  403dd0:	str	w0, [x19, #12]
  403dd4:	b	403dec <resolve_remote+0x2c4>
  403dd8:	ldr	w0, [x19, #120]
  403ddc:	bl	401a08 <abs@plt>
  403de0:	mov	w8, wzr
  403de4:	subs	w8, w8, w0, uxtb
  403de8:	str	w8, [x19, #12]
  403dec:	ldr	w8, [x19, #12]
  403df0:	str	w8, [x19, #112]
  403df4:	adrp	x9, 404000 <connection_start+0xfc>
  403df8:	add	x9, x9, #0x34c
  403dfc:	str	x9, [x19, #104]
  403e00:	mov	x9, xzr
  403e04:	str	x9, [x19, #96]
  403e08:	ldr	x9, [x19, #64]
  403e0c:	ldr	x10, [x9]
  403e10:	ldr	x10, [x10]
  403e14:	ldr	x0, [x10, #8]
  403e18:	ldr	x10, [x9]
  403e1c:	add	x1, x10, #0x50
  403e20:	ldur	x2, [x29, #-152]
  403e24:	ldur	x3, [x29, #-160]
  403e28:	ldr	x5, [x19, #104]
  403e2c:	ldr	x6, [x19, #96]
  403e30:	ldr	x7, [x9]
  403e34:	adrp	x4, 405000 <traffic_cb+0xf0>
  403e38:	add	x4, x4, #0xc60
  403e3c:	bl	401c88 <resolve_getaddrinfo_with_destroy_callback@plt>
  403e40:	str	w0, [x19, #92]
  403e44:	ldr	w8, [x19, #92]
  403e48:	stur	w8, [x29, #-164]
  403e4c:	ldur	w8, [x29, #-164]
  403e50:	cmp	w8, #0x0
  403e54:	cset	w8, ge  // ge = tcont
  403e58:	tbnz	w8, #0, 403ed8 <resolve_remote+0x3b0>
  403e5c:	mov	w8, #0x3                   	// #3
  403e60:	str	w8, [x19, #88]
  403e64:	ldur	w8, [x29, #-164]
  403e68:	str	w8, [x19, #84]
  403e6c:	str	wzr, [x19, #80]
  403e70:	ldr	w0, [x19, #80]
  403e74:	bl	4019e8 <log_get_max_level_realm@plt>
  403e78:	ldr	w8, [x19, #88]
  403e7c:	and	w8, w8, #0x7
  403e80:	cmp	w0, w8
  403e84:	b.lt	403eb8 <resolve_remote+0x390>  // b.tstop
  403e88:	ldr	w8, [x19, #80]
  403e8c:	ldr	w9, [x19, #88]
  403e90:	orr	w0, w9, w8, lsl #10
  403e94:	ldr	w1, [x19, #84]
  403e98:	ldr	x2, [x19, #40]
  403e9c:	mov	w3, #0x194                 	// #404
  403ea0:	ldr	x4, [x19, #32]
  403ea4:	adrp	x5, 406000 <connection_shovel.__assert_in_set.64+0x330>
  403ea8:	add	x5, x5, #0x337
  403eac:	bl	4019f8 <log_internal_realm@plt>
  403eb0:	str	w0, [x19, #8]
  403eb4:	b	403ecc <resolve_remote+0x3a4>
  403eb8:	ldr	w0, [x19, #84]
  403ebc:	bl	401a08 <abs@plt>
  403ec0:	mov	w8, wzr
  403ec4:	subs	w8, w8, w0, uxtb
  403ec8:	str	w8, [x19, #8]
  403ecc:	ldr	w8, [x19, #8]
  403ed0:	str	w8, [x19, #76]
  403ed4:	b	403ee0 <resolve_remote+0x3b8>
  403ed8:	stur	wzr, [x29, #-4]
  403edc:	b	403ef0 <resolve_remote+0x3c8>
  403ee0:	ldr	x8, [x19, #64]
  403ee4:	ldr	x0, [x8]
  403ee8:	bl	403034 <connection_free>
  403eec:	stur	wzr, [x29, #-4]
  403ef0:	ldur	w0, [x29, #-4]
  403ef4:	mov	sp, x29
  403ef8:	ldp	x28, x19, [sp, #16]
  403efc:	ldp	x29, x30, [sp], #32
  403f00:	ret

0000000000403f04 <connection_start>:
  403f04:	sub	sp, sp, #0xa0
  403f08:	stp	x29, x30, [sp, #144]
  403f0c:	add	x29, sp, #0x90
  403f10:	adrp	x8, 405000 <traffic_cb+0xf0>
  403f14:	add	x8, x8, #0xcf0
  403f18:	add	x8, x8, #0x3
  403f1c:	adrp	x9, 406000 <connection_shovel.__assert_in_set.64+0x330>
  403f20:	add	x9, x9, #0x3a3
  403f24:	adrp	x10, 406000 <connection_shovel.__assert_in_set.64+0x330>
  403f28:	add	x10, x10, #0x359
  403f2c:	stur	x0, [x29, #-16]
  403f30:	stur	x1, [x29, #-24]
  403f34:	stur	w2, [x29, #-28]
  403f38:	str	x8, [sp, #32]
  403f3c:	str	x9, [sp, #24]
  403f40:	str	x10, [sp, #16]
  403f44:	ldur	x8, [x29, #-16]
  403f48:	cmp	x8, #0x0
  403f4c:	cset	w9, ne  // ne = any
  403f50:	mov	w10, #0x1                   	// #1
  403f54:	eor	w9, w9, #0x1
  403f58:	eor	w9, w9, w10
  403f5c:	eor	w9, w9, w10
  403f60:	and	w9, w9, #0x1
  403f64:	mov	w0, w9
  403f68:	sxtw	x8, w0
  403f6c:	cbz	x8, 403f90 <connection_start+0x8c>
  403f70:	mov	w8, wzr
  403f74:	mov	w0, w8
  403f78:	adrp	x1, 405000 <traffic_cb+0xf0>
  403f7c:	add	x1, x1, #0xe04
  403f80:	ldr	x2, [sp, #32]
  403f84:	mov	w3, #0x135                 	// #309
  403f88:	ldr	x4, [sp, #16]
  403f8c:	bl	401a68 <log_assert_failed_realm@plt>
  403f90:	ldur	x8, [x29, #-24]
  403f94:	cmp	x8, #0x0
  403f98:	cset	w9, ne  // ne = any
  403f9c:	mov	w10, #0x1                   	// #1
  403fa0:	eor	w9, w9, #0x1
  403fa4:	eor	w9, w9, w10
  403fa8:	eor	w9, w9, w10
  403fac:	and	w9, w9, #0x1
  403fb0:	mov	w0, w9
  403fb4:	sxtw	x8, w0
  403fb8:	cbz	x8, 403fdc <connection_start+0xd8>
  403fbc:	mov	w8, wzr
  403fc0:	mov	w0, w8
  403fc4:	adrp	x1, 406000 <connection_shovel.__assert_in_set.64+0x330>
  403fc8:	add	x1, x1, #0x39a
  403fcc:	ldr	x2, [sp, #32]
  403fd0:	mov	w3, #0x136                 	// #310
  403fd4:	ldr	x4, [sp, #16]
  403fd8:	bl	401a68 <log_assert_failed_realm@plt>
  403fdc:	ldur	w8, [x29, #-28]
  403fe0:	cmp	w8, #0x0
  403fe4:	cset	w8, ne  // ne = any
  403fe8:	mov	w9, #0x1                   	// #1
  403fec:	eor	w8, w8, #0x1
  403ff0:	eor	w8, w8, w9
  403ff4:	eor	w8, w8, w9
  403ff8:	and	w8, w8, #0x1
  403ffc:	mov	w0, w8
  404000:	sxtw	x10, w0
  404004:	cbz	x10, 404028 <connection_start+0x124>
  404008:	mov	w8, wzr
  40400c:	mov	w0, w8
  404010:	adrp	x1, 406000 <connection_shovel.__assert_in_set.64+0x330>
  404014:	add	x1, x1, #0x39d
  404018:	ldr	x2, [sp, #32]
  40401c:	mov	w3, #0x137                 	// #311
  404020:	ldr	x4, [sp, #16]
  404024:	bl	401a68 <log_assert_failed_realm@plt>
  404028:	ldur	x8, [x29, #-24]
  40402c:	ldrh	w0, [x8]
  404030:	mov	w1, #0x801                 	// #2049
  404034:	movk	w1, #0x8, lsl #16
  404038:	mov	w9, wzr
  40403c:	mov	w2, w9
  404040:	bl	401c98 <socket@plt>
  404044:	ldur	x8, [x29, #-16]
  404048:	str	w0, [x8, #12]
  40404c:	ldur	x8, [x29, #-16]
  404050:	ldr	w9, [x8, #12]
  404054:	cmp	w9, #0x0
  404058:	cset	w9, ge  // ge = tcont
  40405c:	tbnz	w9, #0, 4040e0 <connection_start+0x1dc>
  404060:	mov	w8, #0x3                   	// #3
  404064:	stur	w8, [x29, #-36]
  404068:	bl	401bf8 <__errno_location@plt>
  40406c:	ldr	w8, [x0]
  404070:	stur	w8, [x29, #-40]
  404074:	stur	wzr, [x29, #-44]
  404078:	ldur	w0, [x29, #-44]
  40407c:	bl	4019e8 <log_get_max_level_realm@plt>
  404080:	ldur	w8, [x29, #-36]
  404084:	and	w8, w8, #0x7
  404088:	cmp	w0, w8
  40408c:	b.lt	4040c0 <connection_start+0x1bc>  // b.tstop
  404090:	ldur	w8, [x29, #-44]
  404094:	ldur	w9, [x29, #-36]
  404098:	orr	w0, w9, w8, lsl #10
  40409c:	ldur	w1, [x29, #-40]
  4040a0:	ldr	x2, [sp, #32]
  4040a4:	mov	w3, #0x13b                 	// #315
  4040a8:	ldr	x4, [sp, #24]
  4040ac:	adrp	x5, 406000 <connection_shovel.__assert_in_set.64+0x330>
  4040b0:	add	x5, x5, #0x3b4
  4040b4:	bl	4019f8 <log_internal_realm@plt>
  4040b8:	str	w0, [sp, #12]
  4040bc:	b	4040d4 <connection_start+0x1d0>
  4040c0:	ldur	w0, [x29, #-40]
  4040c4:	bl	401a08 <abs@plt>
  4040c8:	mov	w8, wzr
  4040cc:	subs	w8, w8, w0, uxtb
  4040d0:	str	w8, [sp, #12]
  4040d4:	ldr	w8, [sp, #12]
  4040d8:	stur	w8, [x29, #-48]
  4040dc:	b	404330 <connection_start+0x42c>
  4040e0:	ldur	x8, [x29, #-16]
  4040e4:	ldr	w0, [x8, #12]
  4040e8:	ldur	x8, [x29, #-24]
  4040ec:	stur	x8, [x29, #-56]
  4040f0:	ldur	w2, [x29, #-28]
  4040f4:	ldur	x1, [x29, #-56]
  4040f8:	bl	401ca8 <connect@plt>
  4040fc:	stur	w0, [x29, #-32]
  404100:	ldur	w9, [x29, #-32]
  404104:	cmp	w9, #0x0
  404108:	cset	w9, ge  // ge = tcont
  40410c:	tbnz	w9, #0, 404308 <connection_start+0x404>
  404110:	bl	401bf8 <__errno_location@plt>
  404114:	ldr	w8, [x0]
  404118:	cmp	w8, #0x73
  40411c:	b.ne	404284 <connection_start+0x380>  // b.any
  404120:	ldur	x8, [x29, #-16]
  404124:	ldr	x8, [x8]
  404128:	ldr	x0, [x8]
  40412c:	ldur	x8, [x29, #-16]
  404130:	add	x1, x8, #0x48
  404134:	ldur	x8, [x29, #-16]
  404138:	ldr	w2, [x8, #12]
  40413c:	ldur	x5, [x29, #-16]
  404140:	mov	w3, #0x4                   	// #4
  404144:	adrp	x4, 404000 <connection_start+0xfc>
  404148:	add	x4, x4, #0x514
  40414c:	bl	401b18 <sd_event_add_io@plt>
  404150:	stur	w0, [x29, #-32]
  404154:	ldur	w9, [x29, #-32]
  404158:	cmp	w9, #0x0
  40415c:	cset	w9, ge  // ge = tcont
  404160:	tbnz	w9, #0, 4041e0 <connection_start+0x2dc>
  404164:	mov	w8, #0x3                   	// #3
  404168:	stur	w8, [x29, #-60]
  40416c:	ldur	w8, [x29, #-32]
  404170:	stur	w8, [x29, #-64]
  404174:	stur	wzr, [x29, #-68]
  404178:	ldur	w0, [x29, #-68]
  40417c:	bl	4019e8 <log_get_max_level_realm@plt>
  404180:	ldur	w8, [x29, #-60]
  404184:	and	w8, w8, #0x7
  404188:	cmp	w0, w8
  40418c:	b.lt	4041c0 <connection_start+0x2bc>  // b.tstop
  404190:	ldur	w8, [x29, #-68]
  404194:	ldur	w9, [x29, #-60]
  404198:	orr	w0, w9, w8, lsl #10
  40419c:	ldur	w1, [x29, #-64]
  4041a0:	ldr	x2, [sp, #32]
  4041a4:	mov	w3, #0x144                 	// #324
  4041a8:	ldr	x4, [sp, #24]
  4041ac:	adrp	x5, 406000 <connection_shovel.__assert_in_set.64+0x330>
  4041b0:	add	x5, x5, #0x3d4
  4041b4:	bl	4019f8 <log_internal_realm@plt>
  4041b8:	str	w0, [sp, #8]
  4041bc:	b	4041d4 <connection_start+0x2d0>
  4041c0:	ldur	w0, [x29, #-64]
  4041c4:	bl	401a08 <abs@plt>
  4041c8:	mov	w8, wzr
  4041cc:	subs	w8, w8, w0, uxtb
  4041d0:	str	w8, [sp, #8]
  4041d4:	ldr	w8, [sp, #8]
  4041d8:	str	w8, [sp, #72]
  4041dc:	b	404330 <connection_start+0x42c>
  4041e0:	ldur	x8, [x29, #-16]
  4041e4:	ldr	x0, [x8, #72]
  4041e8:	mov	w1, #0xffffffff            	// #-1
  4041ec:	bl	401b38 <sd_event_source_set_enabled@plt>
  4041f0:	stur	w0, [x29, #-32]
  4041f4:	ldur	w9, [x29, #-32]
  4041f8:	cmp	w9, #0x0
  4041fc:	cset	w9, ge  // ge = tcont
  404200:	tbnz	w9, #0, 404280 <connection_start+0x37c>
  404204:	mov	w8, #0x3                   	// #3
  404208:	str	w8, [sp, #68]
  40420c:	ldur	w8, [x29, #-32]
  404210:	str	w8, [sp, #64]
  404214:	str	wzr, [sp, #60]
  404218:	ldr	w0, [sp, #60]
  40421c:	bl	4019e8 <log_get_max_level_realm@plt>
  404220:	ldr	w8, [sp, #68]
  404224:	and	w8, w8, #0x7
  404228:	cmp	w0, w8
  40422c:	b.lt	404260 <connection_start+0x35c>  // b.tstop
  404230:	ldr	w8, [sp, #60]
  404234:	ldr	w9, [sp, #68]
  404238:	orr	w0, w9, w8, lsl #10
  40423c:	ldr	w1, [sp, #64]
  404240:	ldr	x2, [sp, #32]
  404244:	mov	w3, #0x14a                 	// #330
  404248:	ldr	x4, [sp, #24]
  40424c:	adrp	x5, 406000 <connection_shovel.__assert_in_set.64+0x330>
  404250:	add	x5, x5, #0x3f8
  404254:	bl	4019f8 <log_internal_realm@plt>
  404258:	str	w0, [sp, #4]
  40425c:	b	404274 <connection_start+0x370>
  404260:	ldr	w0, [sp, #64]
  404264:	bl	401a08 <abs@plt>
  404268:	mov	w8, wzr
  40426c:	subs	w8, w8, w0, uxtb
  404270:	str	w8, [sp, #4]
  404274:	ldr	w8, [sp, #4]
  404278:	str	w8, [sp, #56]
  40427c:	b	404330 <connection_start+0x42c>
  404280:	b	404304 <connection_start+0x400>
  404284:	mov	w8, #0x3                   	// #3
  404288:	str	w8, [sp, #52]
  40428c:	bl	401bf8 <__errno_location@plt>
  404290:	ldr	w8, [x0]
  404294:	str	w8, [sp, #48]
  404298:	str	wzr, [sp, #44]
  40429c:	ldr	w0, [sp, #44]
  4042a0:	bl	4019e8 <log_get_max_level_realm@plt>
  4042a4:	ldr	w8, [sp, #52]
  4042a8:	and	w8, w8, #0x7
  4042ac:	cmp	w0, w8
  4042b0:	b.lt	4042e4 <connection_start+0x3e0>  // b.tstop
  4042b4:	ldr	w8, [sp, #44]
  4042b8:	ldr	w9, [sp, #52]
  4042bc:	orr	w0, w9, w8, lsl #10
  4042c0:	ldr	w1, [sp, #48]
  4042c4:	ldr	x2, [sp, #32]
  4042c8:	mov	w3, #0x14e                 	// #334
  4042cc:	ldr	x4, [sp, #24]
  4042d0:	adrp	x5, 406000 <connection_shovel.__assert_in_set.64+0x330>
  4042d4:	add	x5, x5, #0x422
  4042d8:	bl	4019f8 <log_internal_realm@plt>
  4042dc:	str	w0, [sp]
  4042e0:	b	4042f8 <connection_start+0x3f4>
  4042e4:	ldr	w0, [sp, #48]
  4042e8:	bl	401a08 <abs@plt>
  4042ec:	mov	w8, wzr
  4042f0:	subs	w8, w8, w0, uxtb
  4042f4:	str	w8, [sp]
  4042f8:	ldr	w8, [sp]
  4042fc:	str	w8, [sp, #40]
  404300:	b	404330 <connection_start+0x42c>
  404304:	b	404328 <connection_start+0x424>
  404308:	ldur	x0, [x29, #-16]
  40430c:	bl	4047b8 <connection_complete>
  404310:	stur	w0, [x29, #-32]
  404314:	ldur	w8, [x29, #-32]
  404318:	cmp	w8, #0x0
  40431c:	cset	w8, ge  // ge = tcont
  404320:	tbnz	w8, #0, 404328 <connection_start+0x424>
  404324:	b	404330 <connection_start+0x42c>
  404328:	stur	wzr, [x29, #-4]
  40432c:	b	40433c <connection_start+0x438>
  404330:	ldur	x0, [x29, #-16]
  404334:	bl	403034 <connection_free>
  404338:	stur	wzr, [x29, #-4]
  40433c:	ldur	w0, [x29, #-4]
  404340:	ldp	x29, x30, [sp, #144]
  404344:	add	sp, sp, #0xa0
  404348:	ret

000000000040434c <resolve_handler>:
  40434c:	sub	sp, sp, #0x70
  404350:	stp	x29, x30, [sp, #96]
  404354:	add	x29, sp, #0x60
  404358:	adrp	x8, 405000 <traffic_cb+0xf0>
  40435c:	add	x8, x8, #0xcf0
  404360:	add	x8, x8, #0x3
  404364:	stur	x0, [x29, #-16]
  404368:	stur	w1, [x29, #-20]
  40436c:	stur	x2, [x29, #-32]
  404370:	stur	x3, [x29, #-40]
  404374:	str	x8, [sp, #32]
  404378:	ldur	x8, [x29, #-16]
  40437c:	cmp	x8, #0x0
  404380:	cset	w9, ne  // ne = any
  404384:	mov	w10, #0x1                   	// #1
  404388:	eor	w9, w9, #0x1
  40438c:	eor	w9, w9, w10
  404390:	eor	w9, w9, w10
  404394:	and	w9, w9, #0x1
  404398:	mov	w0, w9
  40439c:	sxtw	x8, w0
  4043a0:	cbz	x8, 4043c8 <resolve_handler+0x7c>
  4043a4:	mov	w8, wzr
  4043a8:	mov	w0, w8
  4043ac:	adrp	x1, 406000 <connection_shovel.__assert_in_set.64+0x330>
  4043b0:	add	x1, x1, #0x731
  4043b4:	ldr	x2, [sp, #32]
  4043b8:	mov	w3, #0x15f                 	// #351
  4043bc:	adrp	x4, 406000 <connection_shovel.__assert_in_set.64+0x330>
  4043c0:	add	x4, x4, #0x733
  4043c4:	bl	401a68 <log_assert_failed_realm@plt>
  4043c8:	ldur	x8, [x29, #-40]
  4043cc:	cmp	x8, #0x0
  4043d0:	cset	w9, ne  // ne = any
  4043d4:	mov	w10, #0x1                   	// #1
  4043d8:	eor	w9, w9, #0x1
  4043dc:	eor	w9, w9, w10
  4043e0:	eor	w9, w9, w10
  4043e4:	and	w9, w9, #0x1
  4043e8:	mov	w0, w9
  4043ec:	sxtw	x8, w0
  4043f0:	cbz	x8, 404418 <resolve_handler+0xcc>
  4043f4:	mov	w8, wzr
  4043f8:	mov	w0, w8
  4043fc:	adrp	x1, 405000 <traffic_cb+0xf0>
  404400:	add	x1, x1, #0xe04
  404404:	ldr	x2, [sp, #32]
  404408:	mov	w3, #0x160                 	// #352
  40440c:	adrp	x4, 406000 <connection_shovel.__assert_in_set.64+0x330>
  404410:	add	x4, x4, #0x733
  404414:	bl	401a68 <log_assert_failed_realm@plt>
  404418:	ldur	w8, [x29, #-20]
  40441c:	cbz	w8, 4044c4 <resolve_handler+0x178>
  404420:	mov	w8, #0x3                   	// #3
  404424:	stur	w8, [x29, #-44]
  404428:	str	wzr, [sp, #48]
  40442c:	str	wzr, [sp, #44]
  404430:	ldr	w0, [sp, #44]
  404434:	bl	4019e8 <log_get_max_level_realm@plt>
  404438:	ldur	w8, [x29, #-44]
  40443c:	and	w8, w8, #0x7
  404440:	cmp	w0, w8
  404444:	b.lt	4044a4 <resolve_handler+0x158>  // b.tstop
  404448:	ldr	w8, [sp, #44]
  40444c:	ldur	w9, [x29, #-44]
  404450:	orr	w0, w9, w8, lsl #10
  404454:	ldr	w1, [sp, #48]
  404458:	ldur	w8, [x29, #-20]
  40445c:	str	w0, [sp, #28]
  404460:	mov	w0, w8
  404464:	str	w1, [sp, #24]
  404468:	bl	401cb8 <gai_strerror@plt>
  40446c:	ldr	w8, [sp, #28]
  404470:	str	x0, [sp, #16]
  404474:	mov	w0, w8
  404478:	ldr	w1, [sp, #24]
  40447c:	ldr	x2, [sp, #32]
  404480:	mov	w3, #0x163                 	// #355
  404484:	adrp	x4, 406000 <connection_shovel.__assert_in_set.64+0x330>
  404488:	add	x4, x4, #0x787
  40448c:	adrp	x5, 406000 <connection_shovel.__assert_in_set.64+0x330>
  404490:	add	x5, x5, #0x797
  404494:	ldr	x6, [sp, #16]
  404498:	bl	4019f8 <log_internal_realm@plt>
  40449c:	str	w0, [sp, #12]
  4044a0:	b	4044b8 <resolve_handler+0x16c>
  4044a4:	ldr	w0, [sp, #48]
  4044a8:	bl	401a08 <abs@plt>
  4044ac:	mov	w8, wzr
  4044b0:	subs	w8, w8, w0, uxtb
  4044b4:	str	w8, [sp, #12]
  4044b8:	ldr	w8, [sp, #12]
  4044bc:	str	w8, [sp, #40]
  4044c0:	b	4044f8 <resolve_handler+0x1ac>
  4044c4:	ldur	x8, [x29, #-40]
  4044c8:	ldr	x0, [x8, #80]
  4044cc:	bl	401b88 <sd_resolve_query_unref@plt>
  4044d0:	ldur	x8, [x29, #-40]
  4044d4:	str	x0, [x8, #80]
  4044d8:	ldur	x0, [x29, #-40]
  4044dc:	ldur	x8, [x29, #-32]
  4044e0:	ldr	x1, [x8, #24]
  4044e4:	ldur	x8, [x29, #-32]
  4044e8:	ldr	w2, [x8, #16]
  4044ec:	bl	403f04 <connection_start>
  4044f0:	stur	w0, [x29, #-4]
  4044f4:	b	404504 <resolve_handler+0x1b8>
  4044f8:	ldur	x0, [x29, #-40]
  4044fc:	bl	403034 <connection_free>
  404500:	stur	wzr, [x29, #-4]
  404504:	ldur	w0, [x29, #-4]
  404508:	ldp	x29, x30, [sp, #96]
  40450c:	add	sp, sp, #0x70
  404510:	ret

0000000000404514 <connect_cb>:
  404514:	sub	sp, sp, #0x80
  404518:	stp	x29, x30, [sp, #112]
  40451c:	add	x29, sp, #0x70
  404520:	adrp	x8, 405000 <traffic_cb+0xf0>
  404524:	add	x8, x8, #0xcf0
  404528:	add	x8, x8, #0x3
  40452c:	adrp	x9, 406000 <connection_shovel.__assert_in_set.64+0x330>
  404530:	add	x9, x9, #0x447
  404534:	stur	x0, [x29, #-16]
  404538:	stur	w1, [x29, #-20]
  40453c:	stur	w2, [x29, #-24]
  404540:	stur	x3, [x29, #-32]
  404544:	ldur	x10, [x29, #-32]
  404548:	stur	x10, [x29, #-40]
  40454c:	str	x8, [sp, #16]
  404550:	str	x9, [sp, #8]
  404554:	ldur	x8, [x29, #-16]
  404558:	cmp	x8, #0x0
  40455c:	cset	w9, ne  // ne = any
  404560:	mov	w10, #0x1                   	// #1
  404564:	eor	w9, w9, #0x1
  404568:	eor	w9, w9, w10
  40456c:	eor	w9, w9, w10
  404570:	and	w9, w9, #0x1
  404574:	mov	w0, w9
  404578:	sxtw	x8, w0
  40457c:	cbz	x8, 4045a0 <connect_cb+0x8c>
  404580:	mov	w8, wzr
  404584:	mov	w0, w8
  404588:	adrp	x1, 406000 <connection_shovel.__assert_in_set.64+0x330>
  40458c:	add	x1, x1, #0x16b
  404590:	ldr	x2, [sp, #16]
  404594:	mov	w3, #0x119                 	// #281
  404598:	ldr	x4, [sp, #8]
  40459c:	bl	401a68 <log_assert_failed_realm@plt>
  4045a0:	ldur	w8, [x29, #-20]
  4045a4:	cmp	w8, #0x0
  4045a8:	cset	w8, ge  // ge = tcont
  4045ac:	mov	w9, #0x1                   	// #1
  4045b0:	eor	w8, w8, #0x1
  4045b4:	eor	w8, w8, w9
  4045b8:	eor	w8, w8, w9
  4045bc:	and	w8, w8, #0x1
  4045c0:	mov	w0, w8
  4045c4:	sxtw	x10, w0
  4045c8:	cbz	x10, 4045ec <connect_cb+0xd8>
  4045cc:	mov	w8, wzr
  4045d0:	mov	w0, w8
  4045d4:	adrp	x1, 406000 <connection_shovel.__assert_in_set.64+0x330>
  4045d8:	add	x1, x1, #0x73
  4045dc:	ldr	x2, [sp, #16]
  4045e0:	mov	w3, #0x11a                 	// #282
  4045e4:	ldr	x4, [sp, #8]
  4045e8:	bl	401a68 <log_assert_failed_realm@plt>
  4045ec:	ldur	x8, [x29, #-40]
  4045f0:	cmp	x8, #0x0
  4045f4:	cset	w9, ne  // ne = any
  4045f8:	mov	w10, #0x1                   	// #1
  4045fc:	eor	w9, w9, #0x1
  404600:	eor	w9, w9, w10
  404604:	eor	w9, w9, w10
  404608:	and	w9, w9, #0x1
  40460c:	mov	w0, w9
  404610:	sxtw	x8, w0
  404614:	cbz	x8, 404638 <connect_cb+0x124>
  404618:	mov	w8, wzr
  40461c:	mov	w0, w8
  404620:	adrp	x1, 405000 <traffic_cb+0xf0>
  404624:	add	x1, x1, #0xe04
  404628:	ldr	x2, [sp, #16]
  40462c:	mov	w3, #0x11b                 	// #283
  404630:	ldr	x4, [sp, #8]
  404634:	bl	401a68 <log_assert_failed_realm@plt>
  404638:	sub	x4, x29, #0x2c
  40463c:	mov	w8, #0x4                   	// #4
  404640:	stur	w8, [x29, #-44]
  404644:	ldur	w0, [x29, #-20]
  404648:	mov	w1, #0x1                   	// #1
  40464c:	mov	w2, w8
  404650:	sub	x3, x29, #0x30
  404654:	bl	401cc8 <getsockopt@plt>
  404658:	stur	w0, [x29, #-52]
  40465c:	ldur	w8, [x29, #-52]
  404660:	cmp	w8, #0x0
  404664:	cset	w8, ge  // ge = tcont
  404668:	tbnz	w8, #0, 4046f0 <connect_cb+0x1dc>
  40466c:	mov	w8, #0x3                   	// #3
  404670:	str	w8, [sp, #56]
  404674:	bl	401bf8 <__errno_location@plt>
  404678:	ldr	w8, [x0]
  40467c:	str	w8, [sp, #52]
  404680:	str	wzr, [sp, #48]
  404684:	ldr	w0, [sp, #48]
  404688:	bl	4019e8 <log_get_max_level_realm@plt>
  40468c:	ldr	w8, [sp, #56]
  404690:	and	w8, w8, #0x7
  404694:	cmp	w0, w8
  404698:	b.lt	4046d0 <connect_cb+0x1bc>  // b.tstop
  40469c:	ldr	w8, [sp, #48]
  4046a0:	ldr	w9, [sp, #56]
  4046a4:	orr	w0, w9, w8, lsl #10
  4046a8:	ldr	w1, [sp, #52]
  4046ac:	ldr	x2, [sp, #16]
  4046b0:	mov	w3, #0x120                 	// #288
  4046b4:	adrp	x4, 406000 <connection_shovel.__assert_in_set.64+0x330>
  4046b8:	add	x4, x4, #0x480
  4046bc:	adrp	x5, 406000 <connection_shovel.__assert_in_set.64+0x330>
  4046c0:	add	x5, x5, #0x48b
  4046c4:	bl	4019f8 <log_internal_realm@plt>
  4046c8:	str	w0, [sp, #4]
  4046cc:	b	4046e4 <connect_cb+0x1d0>
  4046d0:	ldr	w0, [sp, #52]
  4046d4:	bl	401a08 <abs@plt>
  4046d8:	mov	w8, wzr
  4046dc:	subs	w8, w8, w0, uxtb
  4046e0:	str	w8, [sp, #4]
  4046e4:	ldr	w8, [sp, #4]
  4046e8:	str	w8, [sp, #44]
  4046ec:	b	40479c <connect_cb+0x288>
  4046f0:	ldur	w8, [x29, #-48]
  4046f4:	cbz	w8, 404778 <connect_cb+0x264>
  4046f8:	mov	w8, #0x3                   	// #3
  4046fc:	str	w8, [sp, #40]
  404700:	ldur	w8, [x29, #-48]
  404704:	str	w8, [sp, #36]
  404708:	str	wzr, [sp, #32]
  40470c:	ldr	w0, [sp, #32]
  404710:	bl	4019e8 <log_get_max_level_realm@plt>
  404714:	ldr	w8, [sp, #40]
  404718:	and	w8, w8, #0x7
  40471c:	cmp	w0, w8
  404720:	b.lt	404758 <connect_cb+0x244>  // b.tstop
  404724:	ldr	w8, [sp, #32]
  404728:	ldr	w9, [sp, #40]
  40472c:	orr	w0, w9, w8, lsl #10
  404730:	ldr	w1, [sp, #36]
  404734:	ldr	x2, [sp, #16]
  404738:	mov	w3, #0x125                 	// #293
  40473c:	adrp	x4, 406000 <connection_shovel.__assert_in_set.64+0x330>
  404740:	add	x4, x4, #0x480
  404744:	adrp	x5, 406000 <connection_shovel.__assert_in_set.64+0x330>
  404748:	add	x5, x5, #0x422
  40474c:	bl	4019f8 <log_internal_realm@plt>
  404750:	str	w0, [sp]
  404754:	b	40476c <connect_cb+0x258>
  404758:	ldr	w0, [sp, #36]
  40475c:	bl	401a08 <abs@plt>
  404760:	mov	w8, wzr
  404764:	subs	w8, w8, w0, uxtb
  404768:	str	w8, [sp]
  40476c:	ldr	w8, [sp]
  404770:	str	w8, [sp, #28]
  404774:	b	40479c <connect_cb+0x288>
  404778:	ldur	x8, [x29, #-40]
  40477c:	ldr	x0, [x8, #72]
  404780:	bl	401a78 <sd_event_source_unref@plt>
  404784:	ldur	x8, [x29, #-40]
  404788:	str	x0, [x8, #72]
  40478c:	ldur	x0, [x29, #-40]
  404790:	bl	4047b8 <connection_complete>
  404794:	stur	w0, [x29, #-4]
  404798:	b	4047a8 <connect_cb+0x294>
  40479c:	ldur	x0, [x29, #-40]
  4047a0:	bl	403034 <connection_free>
  4047a4:	stur	wzr, [x29, #-4]
  4047a8:	ldur	w0, [x29, #-4]
  4047ac:	ldp	x29, x30, [sp, #112]
  4047b0:	add	sp, sp, #0x80
  4047b4:	ret

00000000004047b8 <connection_complete>:
  4047b8:	sub	sp, sp, #0x30
  4047bc:	stp	x29, x30, [sp, #32]
  4047c0:	add	x29, sp, #0x20
  4047c4:	adrp	x8, 405000 <traffic_cb+0xf0>
  4047c8:	add	x8, x8, #0xcf0
  4047cc:	add	x2, x8, #0x3
  4047d0:	str	x0, [sp, #16]
  4047d4:	str	x2, [sp]
  4047d8:	ldr	x8, [sp, #16]
  4047dc:	cmp	x8, #0x0
  4047e0:	cset	w9, ne  // ne = any
  4047e4:	mov	w10, #0x1                   	// #1
  4047e8:	eor	w9, w9, #0x1
  4047ec:	eor	w9, w9, w10
  4047f0:	eor	w9, w9, w10
  4047f4:	and	w9, w9, #0x1
  4047f8:	mov	w0, w9
  4047fc:	sxtw	x8, w0
  404800:	cbz	x8, 404828 <connection_complete+0x70>
  404804:	mov	w8, wzr
  404808:	mov	w0, w8
  40480c:	adrp	x1, 405000 <traffic_cb+0xf0>
  404810:	add	x1, x1, #0xe04
  404814:	ldr	x2, [sp]
  404818:	mov	w3, #0xff                  	// #255
  40481c:	adrp	x4, 406000 <connection_shovel.__assert_in_set.64+0x330>
  404820:	add	x4, x4, #0x4a8
  404824:	bl	401a68 <log_assert_failed_realm@plt>
  404828:	ldr	x0, [sp, #16]
  40482c:	ldr	x8, [sp, #16]
  404830:	add	x1, x8, #0x10
  404834:	ldr	x8, [sp, #16]
  404838:	add	x2, x8, #0x30
  40483c:	bl	4048cc <connection_create_pipes>
  404840:	str	w0, [sp, #12]
  404844:	ldr	w9, [sp, #12]
  404848:	cmp	w9, #0x0
  40484c:	cset	w9, ge  // ge = tcont
  404850:	tbnz	w9, #0, 404858 <connection_complete+0xa0>
  404854:	b	4048b0 <connection_complete+0xf8>
  404858:	ldr	x0, [sp, #16]
  40485c:	ldr	x8, [sp, #16]
  404860:	add	x1, x8, #0x18
  404864:	ldr	x8, [sp, #16]
  404868:	add	x2, x8, #0x38
  40486c:	bl	4048cc <connection_create_pipes>
  404870:	str	w0, [sp, #12]
  404874:	ldr	w9, [sp, #12]
  404878:	cmp	w9, #0x0
  40487c:	cset	w9, ge  // ge = tcont
  404880:	tbnz	w9, #0, 404888 <connection_complete+0xd0>
  404884:	b	4048b0 <connection_complete+0xf8>
  404888:	ldr	x0, [sp, #16]
  40488c:	bl	404be4 <connection_enable_event_sources>
  404890:	str	w0, [sp, #12]
  404894:	ldr	w8, [sp, #12]
  404898:	cmp	w8, #0x0
  40489c:	cset	w8, ge  // ge = tcont
  4048a0:	tbnz	w8, #0, 4048a8 <connection_complete+0xf0>
  4048a4:	b	4048b0 <connection_complete+0xf8>
  4048a8:	stur	wzr, [x29, #-4]
  4048ac:	b	4048bc <connection_complete+0x104>
  4048b0:	ldr	x0, [sp, #16]
  4048b4:	bl	403034 <connection_free>
  4048b8:	stur	wzr, [x29, #-4]
  4048bc:	ldur	w0, [x29, #-4]
  4048c0:	ldp	x29, x30, [sp, #32]
  4048c4:	add	sp, sp, #0x30
  4048c8:	ret

00000000004048cc <connection_create_pipes>:
  4048cc:	sub	sp, sp, #0x70
  4048d0:	stp	x29, x30, [sp, #96]
  4048d4:	add	x29, sp, #0x60
  4048d8:	adrp	x8, 405000 <traffic_cb+0xf0>
  4048dc:	add	x8, x8, #0xcf0
  4048e0:	add	x8, x8, #0x3
  4048e4:	adrp	x9, 406000 <connection_shovel.__assert_in_set.64+0x330>
  4048e8:	add	x9, x9, #0x4ce
  4048ec:	stur	x0, [x29, #-16]
  4048f0:	stur	x1, [x29, #-24]
  4048f4:	stur	x2, [x29, #-32]
  4048f8:	str	x8, [sp, #16]
  4048fc:	str	x9, [sp, #8]
  404900:	ldur	x8, [x29, #-16]
  404904:	cmp	x8, #0x0
  404908:	cset	w9, ne  // ne = any
  40490c:	mov	w10, #0x1                   	// #1
  404910:	eor	w9, w9, #0x1
  404914:	eor	w9, w9, w10
  404918:	eor	w9, w9, w10
  40491c:	and	w9, w9, #0x1
  404920:	mov	w0, w9
  404924:	sxtw	x8, w0
  404928:	cbz	x8, 40494c <connection_create_pipes+0x80>
  40492c:	mov	w8, wzr
  404930:	mov	w0, w8
  404934:	adrp	x1, 405000 <traffic_cb+0xf0>
  404938:	add	x1, x1, #0xe04
  40493c:	ldr	x2, [sp, #16]
  404940:	mov	w3, #0x5b                  	// #91
  404944:	ldr	x4, [sp, #8]
  404948:	bl	401a68 <log_assert_failed_realm@plt>
  40494c:	ldur	x8, [x29, #-24]
  404950:	cmp	x8, #0x0
  404954:	cset	w9, ne  // ne = any
  404958:	mov	w10, #0x1                   	// #1
  40495c:	eor	w9, w9, #0x1
  404960:	eor	w9, w9, w10
  404964:	eor	w9, w9, w10
  404968:	and	w9, w9, #0x1
  40496c:	mov	w0, w9
  404970:	sxtw	x8, w0
  404974:	cbz	x8, 404998 <connection_create_pipes+0xcc>
  404978:	mov	w8, wzr
  40497c:	mov	w0, w8
  404980:	adrp	x1, 406000 <connection_shovel.__assert_in_set.64+0x330>
  404984:	add	x1, x1, #0x509
  404988:	ldr	x2, [sp, #16]
  40498c:	mov	w3, #0x5c                  	// #92
  404990:	ldr	x4, [sp, #8]
  404994:	bl	401a68 <log_assert_failed_realm@plt>
  404998:	ldur	x8, [x29, #-32]
  40499c:	cmp	x8, #0x0
  4049a0:	cset	w9, ne  // ne = any
  4049a4:	mov	w10, #0x1                   	// #1
  4049a8:	eor	w9, w9, #0x1
  4049ac:	eor	w9, w9, w10
  4049b0:	eor	w9, w9, w10
  4049b4:	and	w9, w9, #0x1
  4049b8:	mov	w0, w9
  4049bc:	sxtw	x8, w0
  4049c0:	cbz	x8, 4049e4 <connection_create_pipes+0x118>
  4049c4:	mov	w8, wzr
  4049c8:	mov	w0, w8
  4049cc:	adrp	x1, 406000 <connection_shovel.__assert_in_set.64+0x330>
  4049d0:	add	x1, x1, #0x510
  4049d4:	ldr	x2, [sp, #16]
  4049d8:	mov	w3, #0x5d                  	// #93
  4049dc:	ldr	x4, [sp, #8]
  4049e0:	bl	401a68 <log_assert_failed_realm@plt>
  4049e4:	ldur	x8, [x29, #-24]
  4049e8:	ldr	w9, [x8]
  4049ec:	cmp	w9, #0x0
  4049f0:	cset	w9, lt  // lt = tstop
  4049f4:	tbnz	w9, #0, 404a00 <connection_create_pipes+0x134>
  4049f8:	stur	wzr, [x29, #-4]
  4049fc:	b	404bd4 <connection_create_pipes+0x308>
  404a00:	ldur	x0, [x29, #-24]
  404a04:	mov	w1, #0x800                 	// #2048
  404a08:	movk	w1, #0x8, lsl #16
  404a0c:	bl	401cd8 <pipe2@plt>
  404a10:	stur	w0, [x29, #-36]
  404a14:	ldur	w8, [x29, #-36]
  404a18:	cmp	w8, #0x0
  404a1c:	cset	w8, ge  // ge = tcont
  404a20:	tbnz	w8, #0, 404ab0 <connection_create_pipes+0x1e4>
  404a24:	mov	w8, #0x3                   	// #3
  404a28:	stur	w8, [x29, #-40]
  404a2c:	bl	401bf8 <__errno_location@plt>
  404a30:	ldr	w8, [x0]
  404a34:	stur	w8, [x29, #-44]
  404a38:	str	wzr, [sp, #48]
  404a3c:	ldr	w0, [sp, #48]
  404a40:	bl	4019e8 <log_get_max_level_realm@plt>
  404a44:	ldur	w8, [x29, #-40]
  404a48:	and	w8, w8, #0x7
  404a4c:	cmp	w0, w8
  404a50:	b.lt	404a88 <connection_create_pipes+0x1bc>  // b.tstop
  404a54:	ldr	w8, [sp, #48]
  404a58:	ldur	w9, [x29, #-40]
  404a5c:	orr	w0, w9, w8, lsl #10
  404a60:	ldur	w1, [x29, #-44]
  404a64:	ldr	x2, [sp, #16]
  404a68:	mov	w3, #0x64                  	// #100
  404a6c:	adrp	x4, 406000 <connection_shovel.__assert_in_set.64+0x330>
  404a70:	add	x4, x4, #0x513
  404a74:	adrp	x5, 406000 <connection_shovel.__assert_in_set.64+0x330>
  404a78:	add	x5, x5, #0x52b
  404a7c:	bl	4019f8 <log_internal_realm@plt>
  404a80:	str	w0, [sp, #4]
  404a84:	b	404a9c <connection_create_pipes+0x1d0>
  404a88:	ldur	w0, [x29, #-44]
  404a8c:	bl	401a08 <abs@plt>
  404a90:	mov	w8, wzr
  404a94:	subs	w8, w8, w0, uxtb
  404a98:	str	w8, [sp, #4]
  404a9c:	ldr	w8, [sp, #4]
  404aa0:	str	w8, [sp, #44]
  404aa4:	ldr	w8, [sp, #44]
  404aa8:	stur	w8, [x29, #-4]
  404aac:	b	404bd4 <connection_create_pipes+0x308>
  404ab0:	ldur	x8, [x29, #-24]
  404ab4:	ldr	w0, [x8]
  404ab8:	mov	w1, #0x407                 	// #1031
  404abc:	mov	w2, #0x40000               	// #262144
  404ac0:	bl	401ce8 <fcntl64@plt>
  404ac4:	ldur	x8, [x29, #-24]
  404ac8:	ldr	w9, [x8]
  404acc:	mov	w0, w9
  404ad0:	mov	w1, #0x408                 	// #1032
  404ad4:	bl	401ce8 <fcntl64@plt>
  404ad8:	stur	w0, [x29, #-36]
  404adc:	ldur	w9, [x29, #-36]
  404ae0:	cmp	w9, #0x0
  404ae4:	cset	w9, ge  // ge = tcont
  404ae8:	tbnz	w9, #0, 404b78 <connection_create_pipes+0x2ac>
  404aec:	mov	w8, #0x3                   	// #3
  404af0:	str	w8, [sp, #40]
  404af4:	bl	401bf8 <__errno_location@plt>
  404af8:	ldr	w8, [x0]
  404afc:	str	w8, [sp, #36]
  404b00:	str	wzr, [sp, #32]
  404b04:	ldr	w0, [sp, #32]
  404b08:	bl	4019e8 <log_get_max_level_realm@plt>
  404b0c:	ldr	w8, [sp, #40]
  404b10:	and	w8, w8, #0x7
  404b14:	cmp	w0, w8
  404b18:	b.lt	404b50 <connection_create_pipes+0x284>  // b.tstop
  404b1c:	ldr	w8, [sp, #32]
  404b20:	ldr	w9, [sp, #40]
  404b24:	orr	w0, w9, w8, lsl #10
  404b28:	ldr	w1, [sp, #36]
  404b2c:	ldr	x2, [sp, #16]
  404b30:	mov	w3, #0x6a                  	// #106
  404b34:	adrp	x4, 406000 <connection_shovel.__assert_in_set.64+0x330>
  404b38:	add	x4, x4, #0x513
  404b3c:	adrp	x5, 406000 <connection_shovel.__assert_in_set.64+0x330>
  404b40:	add	x5, x5, #0x54e
  404b44:	bl	4019f8 <log_internal_realm@plt>
  404b48:	str	w0, [sp]
  404b4c:	b	404b64 <connection_create_pipes+0x298>
  404b50:	ldr	w0, [sp, #36]
  404b54:	bl	401a08 <abs@plt>
  404b58:	mov	w8, wzr
  404b5c:	subs	w8, w8, w0, uxtb
  404b60:	str	w8, [sp]
  404b64:	ldr	w8, [sp]
  404b68:	str	w8, [sp, #28]
  404b6c:	ldr	w8, [sp, #28]
  404b70:	stur	w8, [x29, #-4]
  404b74:	b	404bd4 <connection_create_pipes+0x308>
  404b78:	ldur	w8, [x29, #-36]
  404b7c:	cmp	w8, #0x0
  404b80:	cset	w8, gt
  404b84:	mov	w9, #0x1                   	// #1
  404b88:	eor	w8, w8, #0x1
  404b8c:	eor	w8, w8, w9
  404b90:	eor	w8, w8, w9
  404b94:	and	w8, w8, #0x1
  404b98:	mov	w0, w8
  404b9c:	sxtw	x10, w0
  404ba0:	cbz	x10, 404bc4 <connection_create_pipes+0x2f8>
  404ba4:	mov	w8, wzr
  404ba8:	mov	w0, w8
  404bac:	adrp	x1, 406000 <connection_shovel.__assert_in_set.64+0x330>
  404bb0:	add	x1, x1, #0x571
  404bb4:	ldr	x2, [sp, #16]
  404bb8:	mov	w3, #0x6c                  	// #108
  404bbc:	ldr	x4, [sp, #8]
  404bc0:	bl	401a68 <log_assert_failed_realm@plt>
  404bc4:	ldursw	x8, [x29, #-36]
  404bc8:	ldur	x9, [x29, #-32]
  404bcc:	str	x8, [x9]
  404bd0:	stur	wzr, [x29, #-4]
  404bd4:	ldur	w0, [x29, #-4]
  404bd8:	ldp	x29, x30, [sp, #96]
  404bdc:	add	sp, sp, #0x70
  404be0:	ret

0000000000404be4 <connection_enable_event_sources>:
  404be4:	sub	sp, sp, #0x60
  404be8:	stp	x29, x30, [sp, #80]
  404bec:	add	x29, sp, #0x50
  404bf0:	adrp	x8, 405000 <traffic_cb+0xf0>
  404bf4:	add	x8, x8, #0xcf0
  404bf8:	add	x8, x8, #0x3
  404bfc:	stur	x0, [x29, #-16]
  404c00:	stur	wzr, [x29, #-20]
  404c04:	stur	wzr, [x29, #-24]
  404c08:	str	x8, [sp, #8]
  404c0c:	ldur	x8, [x29, #-16]
  404c10:	cmp	x8, #0x0
  404c14:	cset	w9, ne  // ne = any
  404c18:	mov	w10, #0x1                   	// #1
  404c1c:	eor	w9, w9, #0x1
  404c20:	eor	w9, w9, w10
  404c24:	eor	w9, w9, w10
  404c28:	and	w9, w9, #0x1
  404c2c:	mov	w0, w9
  404c30:	sxtw	x8, w0
  404c34:	cbz	x8, 404c5c <connection_enable_event_sources+0x78>
  404c38:	mov	w8, wzr
  404c3c:	mov	w0, w8
  404c40:	adrp	x1, 405000 <traffic_cb+0xf0>
  404c44:	add	x1, x1, #0xe04
  404c48:	ldr	x2, [sp, #8]
  404c4c:	mov	w3, #0xd9                  	// #217
  404c50:	adrp	x4, 406000 <connection_shovel.__assert_in_set.64+0x330>
  404c54:	add	x4, x4, #0x577
  404c58:	bl	401a68 <log_assert_failed_realm@plt>
  404c5c:	ldur	x8, [x29, #-16]
  404c60:	ldr	x8, [x8, #32]
  404c64:	cmp	x8, #0x0
  404c68:	cset	w9, ls  // ls = plast
  404c6c:	tbnz	w9, #0, 404c7c <connection_enable_event_sources+0x98>
  404c70:	ldur	w8, [x29, #-24]
  404c74:	orr	w8, w8, #0x4
  404c78:	stur	w8, [x29, #-24]
  404c7c:	ldur	x8, [x29, #-16]
  404c80:	ldr	x8, [x8, #32]
  404c84:	ldur	x9, [x29, #-16]
  404c88:	ldr	x9, [x9, #48]
  404c8c:	cmp	x8, x9
  404c90:	b.cs	404ca0 <connection_enable_event_sources+0xbc>  // b.hs, b.nlast
  404c94:	ldur	w8, [x29, #-20]
  404c98:	orr	w8, w8, #0x1
  404c9c:	stur	w8, [x29, #-20]
  404ca0:	ldur	x8, [x29, #-16]
  404ca4:	ldr	x8, [x8, #40]
  404ca8:	cmp	x8, #0x0
  404cac:	cset	w9, ls  // ls = plast
  404cb0:	tbnz	w9, #0, 404cc0 <connection_enable_event_sources+0xdc>
  404cb4:	ldur	w8, [x29, #-20]
  404cb8:	orr	w8, w8, #0x4
  404cbc:	stur	w8, [x29, #-20]
  404cc0:	ldur	x8, [x29, #-16]
  404cc4:	ldr	x8, [x8, #40]
  404cc8:	ldur	x9, [x29, #-16]
  404ccc:	ldr	x9, [x9, #56]
  404cd0:	cmp	x8, x9
  404cd4:	b.cs	404ce4 <connection_enable_event_sources+0x100>  // b.hs, b.nlast
  404cd8:	ldur	w8, [x29, #-24]
  404cdc:	orr	w8, w8, #0x1
  404ce0:	stur	w8, [x29, #-24]
  404ce4:	ldur	x8, [x29, #-16]
  404ce8:	ldr	x8, [x8, #64]
  404cec:	cbz	x8, 404d08 <connection_enable_event_sources+0x124>
  404cf0:	ldur	x8, [x29, #-16]
  404cf4:	ldr	x0, [x8, #64]
  404cf8:	ldur	w1, [x29, #-20]
  404cfc:	bl	401cf8 <sd_event_source_set_io_events@plt>
  404d00:	stur	w0, [x29, #-28]
  404d04:	b	404d58 <connection_enable_event_sources+0x174>
  404d08:	ldur	x8, [x29, #-16]
  404d0c:	ldr	w9, [x8, #8]
  404d10:	cmp	w9, #0x0
  404d14:	cset	w9, lt  // lt = tstop
  404d18:	tbnz	w9, #0, 404d54 <connection_enable_event_sources+0x170>
  404d1c:	ldur	x8, [x29, #-16]
  404d20:	ldr	x8, [x8]
  404d24:	ldr	x0, [x8]
  404d28:	ldur	x8, [x29, #-16]
  404d2c:	add	x1, x8, #0x40
  404d30:	ldur	x8, [x29, #-16]
  404d34:	ldr	w2, [x8, #8]
  404d38:	ldur	w3, [x29, #-20]
  404d3c:	ldur	x5, [x29, #-16]
  404d40:	adrp	x4, 404000 <connection_start+0xfc>
  404d44:	add	x4, x4, #0xf10
  404d48:	bl	401b18 <sd_event_add_io@plt>
  404d4c:	stur	w0, [x29, #-28]
  404d50:	b	404d58 <connection_enable_event_sources+0x174>
  404d54:	stur	wzr, [x29, #-28]
  404d58:	ldur	w8, [x29, #-28]
  404d5c:	cmp	w8, #0x0
  404d60:	cset	w8, ge  // ge = tcont
  404d64:	tbnz	w8, #0, 404df0 <connection_enable_event_sources+0x20c>
  404d68:	mov	w8, #0x3                   	// #3
  404d6c:	stur	w8, [x29, #-32]
  404d70:	ldur	w8, [x29, #-28]
  404d74:	stur	w8, [x29, #-36]
  404d78:	str	wzr, [sp, #40]
  404d7c:	ldr	w0, [sp, #40]
  404d80:	bl	4019e8 <log_get_max_level_realm@plt>
  404d84:	ldur	w8, [x29, #-32]
  404d88:	and	w8, w8, #0x7
  404d8c:	cmp	w0, w8
  404d90:	b.lt	404dc8 <connection_enable_event_sources+0x1e4>  // b.tstop
  404d94:	ldr	w8, [sp, #40]
  404d98:	ldur	w9, [x29, #-32]
  404d9c:	orr	w0, w9, w8, lsl #10
  404da0:	ldur	w1, [x29, #-36]
  404da4:	ldr	x2, [sp, #8]
  404da8:	mov	w3, #0xed                  	// #237
  404dac:	adrp	x4, 406000 <connection_shovel.__assert_in_set.64+0x330>
  404db0:	add	x4, x4, #0x5a9
  404db4:	adrp	x5, 406000 <connection_shovel.__assert_in_set.64+0x330>
  404db8:	add	x5, x5, #0x5c9
  404dbc:	bl	4019f8 <log_internal_realm@plt>
  404dc0:	str	w0, [sp, #4]
  404dc4:	b	404ddc <connection_enable_event_sources+0x1f8>
  404dc8:	ldur	w0, [x29, #-36]
  404dcc:	bl	401a08 <abs@plt>
  404dd0:	mov	w8, wzr
  404dd4:	subs	w8, w8, w0, uxtb
  404dd8:	str	w8, [sp, #4]
  404ddc:	ldr	w8, [sp, #4]
  404de0:	str	w8, [sp, #36]
  404de4:	ldr	w8, [sp, #36]
  404de8:	stur	w8, [x29, #-4]
  404dec:	b	404f00 <connection_enable_event_sources+0x31c>
  404df0:	ldur	x8, [x29, #-16]
  404df4:	ldr	x8, [x8, #72]
  404df8:	cbz	x8, 404e14 <connection_enable_event_sources+0x230>
  404dfc:	ldur	x8, [x29, #-16]
  404e00:	ldr	x0, [x8, #72]
  404e04:	ldur	w1, [x29, #-24]
  404e08:	bl	401cf8 <sd_event_source_set_io_events@plt>
  404e0c:	stur	w0, [x29, #-28]
  404e10:	b	404e64 <connection_enable_event_sources+0x280>
  404e14:	ldur	x8, [x29, #-16]
  404e18:	ldr	w9, [x8, #12]
  404e1c:	cmp	w9, #0x0
  404e20:	cset	w9, lt  // lt = tstop
  404e24:	tbnz	w9, #0, 404e60 <connection_enable_event_sources+0x27c>
  404e28:	ldur	x8, [x29, #-16]
  404e2c:	ldr	x8, [x8]
  404e30:	ldr	x0, [x8]
  404e34:	ldur	x8, [x29, #-16]
  404e38:	add	x1, x8, #0x48
  404e3c:	ldur	x8, [x29, #-16]
  404e40:	ldr	w2, [x8, #12]
  404e44:	ldur	w3, [x29, #-24]
  404e48:	ldur	x5, [x29, #-16]
  404e4c:	adrp	x4, 404000 <connection_start+0xfc>
  404e50:	add	x4, x4, #0xf10
  404e54:	bl	401b18 <sd_event_add_io@plt>
  404e58:	stur	w0, [x29, #-28]
  404e5c:	b	404e64 <connection_enable_event_sources+0x280>
  404e60:	stur	wzr, [x29, #-28]
  404e64:	ldur	w8, [x29, #-28]
  404e68:	cmp	w8, #0x0
  404e6c:	cset	w8, ge  // ge = tcont
  404e70:	tbnz	w8, #0, 404efc <connection_enable_event_sources+0x318>
  404e74:	mov	w8, #0x3                   	// #3
  404e78:	str	w8, [sp, #32]
  404e7c:	ldur	w8, [x29, #-28]
  404e80:	str	w8, [sp, #28]
  404e84:	str	wzr, [sp, #24]
  404e88:	ldr	w0, [sp, #24]
  404e8c:	bl	4019e8 <log_get_max_level_realm@plt>
  404e90:	ldr	w8, [sp, #32]
  404e94:	and	w8, w8, #0x7
  404e98:	cmp	w0, w8
  404e9c:	b.lt	404ed4 <connection_enable_event_sources+0x2f0>  // b.tstop
  404ea0:	ldr	w8, [sp, #24]
  404ea4:	ldr	w9, [sp, #32]
  404ea8:	orr	w0, w9, w8, lsl #10
  404eac:	ldr	w1, [sp, #28]
  404eb0:	ldr	x2, [sp, #8]
  404eb4:	mov	w3, #0xf7                  	// #247
  404eb8:	adrp	x4, 406000 <connection_shovel.__assert_in_set.64+0x330>
  404ebc:	add	x4, x4, #0x5a9
  404ec0:	adrp	x5, 406000 <connection_shovel.__assert_in_set.64+0x330>
  404ec4:	add	x5, x5, #0x5f2
  404ec8:	bl	4019f8 <log_internal_realm@plt>
  404ecc:	str	w0, [sp]
  404ed0:	b	404ee8 <connection_enable_event_sources+0x304>
  404ed4:	ldr	w0, [sp, #28]
  404ed8:	bl	401a08 <abs@plt>
  404edc:	mov	w8, wzr
  404ee0:	subs	w8, w8, w0, uxtb
  404ee4:	str	w8, [sp]
  404ee8:	ldr	w8, [sp]
  404eec:	str	w8, [sp, #20]
  404ef0:	ldr	w8, [sp, #20]
  404ef4:	stur	w8, [x29, #-4]
  404ef8:	b	404f00 <connection_enable_event_sources+0x31c>
  404efc:	stur	wzr, [x29, #-4]
  404f00:	ldur	w0, [x29, #-4]
  404f04:	ldp	x29, x30, [sp, #80]
  404f08:	add	sp, sp, #0x60
  404f0c:	ret

0000000000404f10 <traffic_cb>:
  404f10:	sub	sp, sp, #0x50
  404f14:	stp	x29, x30, [sp, #64]
  404f18:	add	x29, sp, #0x40
  404f1c:	adrp	x8, 405000 <traffic_cb+0xf0>
  404f20:	add	x8, x8, #0xcf0
  404f24:	add	x8, x8, #0x3
  404f28:	adrp	x9, 406000 <connection_shovel.__assert_in_set.64+0x330>
  404f2c:	add	x9, x9, #0x61b
  404f30:	stur	x0, [x29, #-16]
  404f34:	stur	w1, [x29, #-20]
  404f38:	stur	w2, [x29, #-24]
  404f3c:	str	x3, [sp, #32]
  404f40:	ldr	x10, [sp, #32]
  404f44:	str	x10, [sp, #24]
  404f48:	str	x8, [sp, #8]
  404f4c:	str	x9, [sp]
  404f50:	ldur	x8, [x29, #-16]
  404f54:	cmp	x8, #0x0
  404f58:	cset	w9, ne  // ne = any
  404f5c:	mov	w10, #0x1                   	// #1
  404f60:	eor	w9, w9, #0x1
  404f64:	eor	w9, w9, w10
  404f68:	eor	w9, w9, w10
  404f6c:	and	w9, w9, #0x1
  404f70:	mov	w0, w9
  404f74:	sxtw	x8, w0
  404f78:	cbz	x8, 404f9c <traffic_cb+0x8c>
  404f7c:	mov	w8, wzr
  404f80:	mov	w0, w8
  404f84:	adrp	x1, 406000 <connection_shovel.__assert_in_set.64+0x330>
  404f88:	add	x1, x1, #0x16b
  404f8c:	ldr	x2, [sp, #8]
  404f90:	mov	w3, #0xac                  	// #172
  404f94:	ldr	x4, [sp]
  404f98:	bl	401a68 <log_assert_failed_realm@plt>
  404f9c:	ldur	w8, [x29, #-20]
  404fa0:	cmp	w8, #0x0
  404fa4:	cset	w8, ge  // ge = tcont
  404fa8:	mov	w9, #0x1                   	// #1
  404fac:	eor	w8, w8, #0x1
  404fb0:	eor	w8, w8, w9
  404fb4:	eor	w8, w8, w9
  404fb8:	and	w8, w8, #0x1
  404fbc:	mov	w0, w8
  404fc0:	sxtw	x10, w0
  404fc4:	cbz	x10, 404fe8 <traffic_cb+0xd8>
  404fc8:	mov	w8, wzr
  404fcc:	mov	w0, w8
  404fd0:	adrp	x1, 406000 <connection_shovel.__assert_in_set.64+0x330>
  404fd4:	add	x1, x1, #0x73
  404fd8:	ldr	x2, [sp, #8]
  404fdc:	mov	w3, #0xad                  	// #173
  404fe0:	ldr	x4, [sp]
  404fe4:	bl	401a68 <log_assert_failed_realm@plt>
  404fe8:	ldr	x8, [sp, #24]
  404fec:	cmp	x8, #0x0
  404ff0:	cset	w9, ne  // ne = any
  404ff4:	mov	w10, #0x1                   	// #1
  404ff8:	eor	w9, w9, #0x1
  404ffc:	eor	w9, w9, w10
  405000:	eor	w9, w9, w10
  405004:	and	w9, w9, #0x1
  405008:	mov	w0, w9
  40500c:	sxtw	x8, w0
  405010:	cbz	x8, 405034 <traffic_cb+0x124>
  405014:	mov	w8, wzr
  405018:	mov	w0, w8
  40501c:	adrp	x1, 405000 <traffic_cb+0xf0>
  405020:	add	x1, x1, #0xe04
  405024:	ldr	x2, [sp, #8]
  405028:	mov	w3, #0xae                  	// #174
  40502c:	ldr	x4, [sp]
  405030:	bl	401a68 <log_assert_failed_realm@plt>
  405034:	ldr	x0, [sp, #24]
  405038:	ldr	x8, [sp, #24]
  40503c:	add	x1, x8, #0x8
  405040:	ldr	x8, [sp, #24]
  405044:	add	x2, x8, #0x10
  405048:	ldr	x8, [sp, #24]
  40504c:	add	x3, x8, #0xc
  405050:	ldr	x8, [sp, #24]
  405054:	add	x4, x8, #0x20
  405058:	ldr	x8, [sp, #24]
  40505c:	add	x5, x8, #0x30
  405060:	ldr	x8, [sp, #24]
  405064:	add	x6, x8, #0x40
  405068:	ldr	x8, [sp, #24]
  40506c:	add	x7, x8, #0x48
  405070:	bl	4051b0 <connection_shovel>
  405074:	str	w0, [sp, #20]
  405078:	ldr	w9, [sp, #20]
  40507c:	cmp	w9, #0x0
  405080:	cset	w9, ge  // ge = tcont
  405084:	tbnz	w9, #0, 40508c <traffic_cb+0x17c>
  405088:	b	405194 <traffic_cb+0x284>
  40508c:	ldr	x0, [sp, #24]
  405090:	ldr	x8, [sp, #24]
  405094:	add	x1, x8, #0xc
  405098:	ldr	x8, [sp, #24]
  40509c:	add	x2, x8, #0x18
  4050a0:	ldr	x8, [sp, #24]
  4050a4:	add	x3, x8, #0x8
  4050a8:	ldr	x8, [sp, #24]
  4050ac:	add	x4, x8, #0x28
  4050b0:	ldr	x8, [sp, #24]
  4050b4:	add	x5, x8, #0x38
  4050b8:	ldr	x8, [sp, #24]
  4050bc:	add	x6, x8, #0x48
  4050c0:	ldr	x8, [sp, #24]
  4050c4:	add	x7, x8, #0x40
  4050c8:	bl	4051b0 <connection_shovel>
  4050cc:	str	w0, [sp, #20]
  4050d0:	ldr	w9, [sp, #20]
  4050d4:	cmp	w9, #0x0
  4050d8:	cset	w9, ge  // ge = tcont
  4050dc:	tbnz	w9, #0, 4050e4 <traffic_cb+0x1d4>
  4050e0:	b	405194 <traffic_cb+0x284>
  4050e4:	ldr	x8, [sp, #24]
  4050e8:	ldr	w9, [x8, #8]
  4050ec:	mov	w10, #0xffffffff            	// #-1
  4050f0:	cmp	w9, w10
  4050f4:	b.ne	405110 <traffic_cb+0x200>  // b.any
  4050f8:	ldr	x8, [sp, #24]
  4050fc:	ldr	w9, [x8, #12]
  405100:	mov	w10, #0xffffffff            	// #-1
  405104:	cmp	w9, w10
  405108:	b.ne	405110 <traffic_cb+0x200>  // b.any
  40510c:	b	405194 <traffic_cb+0x284>
  405110:	ldr	x8, [sp, #24]
  405114:	ldr	w9, [x8, #8]
  405118:	mov	w10, #0xffffffff            	// #-1
  40511c:	cmp	w9, w10
  405120:	b.ne	40513c <traffic_cb+0x22c>  // b.any
  405124:	ldr	x8, [sp, #24]
  405128:	ldr	x8, [x8, #32]
  40512c:	cmp	x8, #0x0
  405130:	cset	w9, hi  // hi = pmore
  405134:	tbnz	w9, #0, 40513c <traffic_cb+0x22c>
  405138:	b	405194 <traffic_cb+0x284>
  40513c:	ldr	x8, [sp, #24]
  405140:	ldr	w9, [x8, #12]
  405144:	mov	w10, #0xffffffff            	// #-1
  405148:	cmp	w9, w10
  40514c:	b.ne	405168 <traffic_cb+0x258>  // b.any
  405150:	ldr	x8, [sp, #24]
  405154:	ldr	x8, [x8, #40]
  405158:	cmp	x8, #0x0
  40515c:	cset	w9, hi  // hi = pmore
  405160:	tbnz	w9, #0, 405168 <traffic_cb+0x258>
  405164:	b	405194 <traffic_cb+0x284>
  405168:	ldr	x0, [sp, #24]
  40516c:	bl	404be4 <connection_enable_event_sources>
  405170:	str	w0, [sp, #20]
  405174:	ldr	w8, [sp, #20]
  405178:	cmp	w8, #0x0
  40517c:	cset	w8, ge  // ge = tcont
  405180:	tbnz	w8, #0, 405188 <traffic_cb+0x278>
  405184:	b	405194 <traffic_cb+0x284>
  405188:	mov	w8, #0x1                   	// #1
  40518c:	stur	w8, [x29, #-4]
  405190:	b	4051a0 <traffic_cb+0x290>
  405194:	ldr	x0, [sp, #24]
  405198:	bl	403034 <connection_free>
  40519c:	stur	wzr, [x29, #-4]
  4051a0:	ldur	w0, [x29, #-4]
  4051a4:	ldp	x29, x30, [sp, #64]
  4051a8:	add	sp, sp, #0x50
  4051ac:	ret

00000000004051b0 <connection_shovel>:
  4051b0:	sub	sp, sp, #0xb0
  4051b4:	stp	x29, x30, [sp, #160]
  4051b8:	add	x29, sp, #0xa0
  4051bc:	adrp	x8, 405000 <traffic_cb+0xf0>
  4051c0:	add	x8, x8, #0xcf0
  4051c4:	add	x8, x8, #0x3
  4051c8:	adrp	x9, 406000 <connection_shovel.__assert_in_set.64+0x330>
  4051cc:	add	x9, x9, #0x654
  4051d0:	stur	x0, [x29, #-16]
  4051d4:	stur	x1, [x29, #-24]
  4051d8:	stur	x2, [x29, #-32]
  4051dc:	stur	x3, [x29, #-40]
  4051e0:	stur	x4, [x29, #-48]
  4051e4:	stur	x5, [x29, #-56]
  4051e8:	stur	x6, [x29, #-64]
  4051ec:	stur	x7, [x29, #-72]
  4051f0:	str	x8, [sp, #24]
  4051f4:	str	x9, [sp, #16]
  4051f8:	ldur	x8, [x29, #-16]
  4051fc:	cmp	x8, #0x0
  405200:	cset	w9, ne  // ne = any
  405204:	mov	w10, #0x1                   	// #1
  405208:	eor	w9, w9, #0x1
  40520c:	eor	w9, w9, w10
  405210:	eor	w9, w9, w10
  405214:	and	w9, w9, #0x1
  405218:	mov	w0, w9
  40521c:	sxtw	x8, w0
  405220:	cbz	x8, 405244 <connection_shovel+0x94>
  405224:	mov	w8, wzr
  405228:	mov	w0, w8
  40522c:	adrp	x1, 405000 <traffic_cb+0xf0>
  405230:	add	x1, x1, #0xe04
  405234:	ldr	x2, [sp, #24]
  405238:	mov	w3, #0x7a                  	// #122
  40523c:	ldr	x4, [sp, #16]
  405240:	bl	401a68 <log_assert_failed_realm@plt>
  405244:	ldur	x8, [x29, #-24]
  405248:	cmp	x8, #0x0
  40524c:	cset	w9, ne  // ne = any
  405250:	mov	w10, #0x1                   	// #1
  405254:	eor	w9, w9, #0x1
  405258:	eor	w9, w9, w10
  40525c:	eor	w9, w9, w10
  405260:	and	w9, w9, #0x1
  405264:	mov	w0, w9
  405268:	sxtw	x8, w0
  40526c:	cbz	x8, 405290 <connection_shovel+0xe0>
  405270:	mov	w8, wzr
  405274:	mov	w0, w8
  405278:	adrp	x1, 406000 <connection_shovel.__assert_in_set.64+0x330>
  40527c:	add	x1, x1, #0x6c9
  405280:	ldr	x2, [sp, #24]
  405284:	mov	w3, #0x7b                  	// #123
  405288:	ldr	x4, [sp, #16]
  40528c:	bl	401a68 <log_assert_failed_realm@plt>
  405290:	ldur	x8, [x29, #-32]
  405294:	cmp	x8, #0x0
  405298:	cset	w9, ne  // ne = any
  40529c:	mov	w10, #0x1                   	// #1
  4052a0:	eor	w9, w9, #0x1
  4052a4:	eor	w9, w9, w10
  4052a8:	eor	w9, w9, w10
  4052ac:	and	w9, w9, #0x1
  4052b0:	mov	w0, w9
  4052b4:	sxtw	x8, w0
  4052b8:	cbz	x8, 4052dc <connection_shovel+0x12c>
  4052bc:	mov	w8, wzr
  4052c0:	mov	w0, w8
  4052c4:	adrp	x1, 406000 <connection_shovel.__assert_in_set.64+0x330>
  4052c8:	add	x1, x1, #0x509
  4052cc:	ldr	x2, [sp, #24]
  4052d0:	mov	w3, #0x7c                  	// #124
  4052d4:	ldr	x4, [sp, #16]
  4052d8:	bl	401a68 <log_assert_failed_realm@plt>
  4052dc:	ldur	x8, [x29, #-32]
  4052e0:	ldr	w9, [x8]
  4052e4:	cmp	w9, #0x0
  4052e8:	cset	w9, ge  // ge = tcont
  4052ec:	mov	w10, #0x1                   	// #1
  4052f0:	eor	w9, w9, #0x1
  4052f4:	eor	w9, w9, w10
  4052f8:	eor	w9, w9, w10
  4052fc:	and	w9, w9, #0x1
  405300:	mov	w0, w9
  405304:	sxtw	x8, w0
  405308:	cbz	x8, 40532c <connection_shovel+0x17c>
  40530c:	mov	w8, wzr
  405310:	mov	w0, w8
  405314:	adrp	x1, 406000 <connection_shovel.__assert_in_set.64+0x330>
  405318:	add	x1, x1, #0x6ce
  40531c:	ldr	x2, [sp, #24]
  405320:	mov	w3, #0x7d                  	// #125
  405324:	ldr	x4, [sp, #16]
  405328:	bl	401a68 <log_assert_failed_realm@plt>
  40532c:	ldur	x8, [x29, #-32]
  405330:	ldr	w9, [x8, #4]
  405334:	cmp	w9, #0x0
  405338:	cset	w9, ge  // ge = tcont
  40533c:	mov	w10, #0x1                   	// #1
  405340:	eor	w9, w9, #0x1
  405344:	eor	w9, w9, w10
  405348:	eor	w9, w9, w10
  40534c:	and	w9, w9, #0x1
  405350:	mov	w0, w9
  405354:	sxtw	x8, w0
  405358:	cbz	x8, 40537c <connection_shovel+0x1cc>
  40535c:	mov	w8, wzr
  405360:	mov	w0, w8
  405364:	adrp	x1, 406000 <connection_shovel.__assert_in_set.64+0x330>
  405368:	add	x1, x1, #0x6dd
  40536c:	ldr	x2, [sp, #24]
  405370:	mov	w3, #0x7e                  	// #126
  405374:	ldr	x4, [sp, #16]
  405378:	bl	401a68 <log_assert_failed_realm@plt>
  40537c:	ldur	x8, [x29, #-40]
  405380:	cmp	x8, #0x0
  405384:	cset	w9, ne  // ne = any
  405388:	mov	w10, #0x1                   	// #1
  40538c:	eor	w9, w9, #0x1
  405390:	eor	w9, w9, w10
  405394:	eor	w9, w9, w10
  405398:	and	w9, w9, #0x1
  40539c:	mov	w0, w9
  4053a0:	sxtw	x8, w0
  4053a4:	cbz	x8, 4053c8 <connection_shovel+0x218>
  4053a8:	mov	w8, wzr
  4053ac:	mov	w0, w8
  4053b0:	adrp	x1, 406000 <connection_shovel.__assert_in_set.64+0x330>
  4053b4:	add	x1, x1, #0x6ec
  4053b8:	ldr	x2, [sp, #24]
  4053bc:	mov	w3, #0x7f                  	// #127
  4053c0:	ldr	x4, [sp, #16]
  4053c4:	bl	401a68 <log_assert_failed_realm@plt>
  4053c8:	ldur	x8, [x29, #-48]
  4053cc:	cmp	x8, #0x0
  4053d0:	cset	w9, ne  // ne = any
  4053d4:	mov	w10, #0x1                   	// #1
  4053d8:	eor	w9, w9, #0x1
  4053dc:	eor	w9, w9, w10
  4053e0:	eor	w9, w9, w10
  4053e4:	and	w9, w9, #0x1
  4053e8:	mov	w0, w9
  4053ec:	sxtw	x8, w0
  4053f0:	cbz	x8, 405414 <connection_shovel+0x264>
  4053f4:	mov	w8, wzr
  4053f8:	mov	w0, w8
  4053fc:	adrp	x1, 406000 <connection_shovel.__assert_in_set.64+0x330>
  405400:	add	x1, x1, #0x6ef
  405404:	ldr	x2, [sp, #24]
  405408:	mov	w3, #0x80                  	// #128
  40540c:	ldr	x4, [sp, #16]
  405410:	bl	401a68 <log_assert_failed_realm@plt>
  405414:	ldur	x8, [x29, #-56]
  405418:	cmp	x8, #0x0
  40541c:	cset	w9, ne  // ne = any
  405420:	mov	w10, #0x1                   	// #1
  405424:	eor	w9, w9, #0x1
  405428:	eor	w9, w9, w10
  40542c:	eor	w9, w9, w10
  405430:	and	w9, w9, #0x1
  405434:	mov	w0, w9
  405438:	sxtw	x8, w0
  40543c:	cbz	x8, 405460 <connection_shovel+0x2b0>
  405440:	mov	w8, wzr
  405444:	mov	w0, w8
  405448:	adrp	x1, 406000 <connection_shovel.__assert_in_set.64+0x330>
  40544c:	add	x1, x1, #0x510
  405450:	ldr	x2, [sp, #24]
  405454:	mov	w3, #0x81                  	// #129
  405458:	ldr	x4, [sp, #16]
  40545c:	bl	401a68 <log_assert_failed_realm@plt>
  405460:	ldur	x8, [x29, #-64]
  405464:	cmp	x8, #0x0
  405468:	cset	w9, ne  // ne = any
  40546c:	mov	w10, #0x1                   	// #1
  405470:	eor	w9, w9, #0x1
  405474:	eor	w9, w9, w10
  405478:	eor	w9, w9, w10
  40547c:	and	w9, w9, #0x1
  405480:	mov	w0, w9
  405484:	sxtw	x8, w0
  405488:	cbz	x8, 4054ac <connection_shovel+0x2fc>
  40548c:	mov	w8, wzr
  405490:	mov	w0, w8
  405494:	adrp	x1, 406000 <connection_shovel.__assert_in_set.64+0x330>
  405498:	add	x1, x1, #0x6f4
  40549c:	ldr	x2, [sp, #24]
  4054a0:	mov	w3, #0x82                  	// #130
  4054a4:	ldr	x4, [sp, #16]
  4054a8:	bl	401a68 <log_assert_failed_realm@plt>
  4054ac:	ldur	x8, [x29, #-72]
  4054b0:	cmp	x8, #0x0
  4054b4:	cset	w9, ne  // ne = any
  4054b8:	mov	w10, #0x1                   	// #1
  4054bc:	eor	w9, w9, #0x1
  4054c0:	eor	w9, w9, w10
  4054c4:	eor	w9, w9, w10
  4054c8:	and	w9, w9, #0x1
  4054cc:	mov	w0, w9
  4054d0:	sxtw	x8, w0
  4054d4:	cbz	x8, 4054f8 <connection_shovel+0x348>
  4054d8:	mov	w8, wzr
  4054dc:	mov	w0, w8
  4054e0:	adrp	x1, 406000 <connection_shovel.__assert_in_set.64+0x330>
  4054e4:	add	x1, x1, #0x700
  4054e8:	ldr	x2, [sp, #24]
  4054ec:	mov	w3, #0x83                  	// #131
  4054f0:	ldr	x4, [sp, #16]
  4054f4:	bl	401a68 <log_assert_failed_realm@plt>
  4054f8:	mov	w8, #0x0                   	// #0
  4054fc:	sturb	w8, [x29, #-73]
  405500:	ldur	x9, [x29, #-48]
  405504:	ldr	x9, [x9]
  405508:	ldur	x10, [x29, #-56]
  40550c:	ldr	x10, [x10]
  405510:	cmp	x9, x10
  405514:	b.cs	4056d8 <connection_shovel+0x528>  // b.hs, b.nlast
  405518:	ldur	x8, [x29, #-24]
  40551c:	ldr	w9, [x8]
  405520:	cmp	w9, #0x0
  405524:	cset	w9, lt  // lt = tstop
  405528:	tbnz	w9, #0, 4056d8 <connection_shovel+0x528>
  40552c:	ldur	x8, [x29, #-40]
  405530:	ldr	w9, [x8]
  405534:	cmp	w9, #0x0
  405538:	cset	w9, lt  // lt = tstop
  40553c:	tbnz	w9, #0, 4056d8 <connection_shovel+0x528>
  405540:	ldur	x8, [x29, #-24]
  405544:	ldr	w0, [x8]
  405548:	ldur	x8, [x29, #-32]
  40554c:	ldr	w2, [x8, #4]
  405550:	ldur	x8, [x29, #-56]
  405554:	ldr	x8, [x8]
  405558:	ldur	x9, [x29, #-48]
  40555c:	ldr	x9, [x9]
  405560:	subs	x4, x8, x9
  405564:	mov	x8, xzr
  405568:	mov	x1, x8
  40556c:	mov	x3, x8
  405570:	mov	w5, #0x3                   	// #3
  405574:	bl	401d08 <splice@plt>
  405578:	str	x0, [sp, #72]
  40557c:	ldr	x8, [sp, #72]
  405580:	cmp	x8, #0x0
  405584:	cset	w10, le
  405588:	tbnz	w10, #0, 4055ac <connection_shovel+0x3fc>
  40558c:	ldr	x8, [sp, #72]
  405590:	ldur	x9, [x29, #-48]
  405594:	ldr	x10, [x9]
  405598:	add	x8, x10, x8
  40559c:	str	x8, [x9]
  4055a0:	mov	w11, #0x1                   	// #1
  4055a4:	sturb	w11, [x29, #-73]
  4055a8:	b	4056d8 <connection_shovel+0x528>
  4055ac:	ldr	x8, [sp, #72]
  4055b0:	cbz	x8, 4055c8 <connection_shovel+0x418>
  4055b4:	bl	401bf8 <__errno_location@plt>
  4055b8:	ldr	w0, [x0]
  4055bc:	bl	403a84 <ERRNO_IS_DISCONNECT>
  4055c0:	tbnz	w0, #0, 4055c8 <connection_shovel+0x418>
  4055c4:	b	4055f4 <connection_shovel+0x444>
  4055c8:	ldur	x8, [x29, #-64]
  4055cc:	ldr	x0, [x8]
  4055d0:	bl	401a78 <sd_event_source_unref@plt>
  4055d4:	ldur	x8, [x29, #-64]
  4055d8:	str	x0, [x8]
  4055dc:	ldur	x8, [x29, #-24]
  4055e0:	ldr	w0, [x8]
  4055e4:	bl	401b68 <safe_close@plt>
  4055e8:	ldur	x8, [x29, #-24]
  4055ec:	str	w0, [x8]
  4055f0:	b	4056d8 <connection_shovel+0x528>
  4055f4:	mov	w8, #0x0                   	// #0
  4055f8:	strb	w8, [sp, #71]
  4055fc:	bl	401bf8 <__errno_location@plt>
  405600:	ldr	w8, [x0]
  405604:	cmp	w8, #0x4
  405608:	str	w8, [sp, #12]
  40560c:	b.eq	40562c <connection_shovel+0x47c>  // b.none
  405610:	b	405614 <connection_shovel+0x464>
  405614:	ldr	w8, [sp, #12]
  405618:	cmp	w8, #0xb
  40561c:	cset	w9, eq  // eq = none
  405620:	eor	w9, w9, #0x1
  405624:	tbnz	w9, #0, 405638 <connection_shovel+0x488>
  405628:	b	40562c <connection_shovel+0x47c>
  40562c:	mov	w8, #0x1                   	// #1
  405630:	strb	w8, [sp, #71]
  405634:	b	405638 <connection_shovel+0x488>
  405638:	ldrb	w8, [sp, #71]
  40563c:	and	w8, w8, #0x1
  405640:	strb	w8, [sp, #70]
  405644:	ldrb	w8, [sp, #70]
  405648:	tbnz	w8, #0, 4056d8 <connection_shovel+0x528>
  40564c:	mov	w8, #0x3                   	// #3
  405650:	str	w8, [sp, #64]
  405654:	bl	401bf8 <__errno_location@plt>
  405658:	ldr	w8, [x0]
  40565c:	str	w8, [sp, #60]
  405660:	str	wzr, [sp, #56]
  405664:	ldr	w0, [sp, #56]
  405668:	bl	4019e8 <log_get_max_level_realm@plt>
  40566c:	ldr	w8, [sp, #64]
  405670:	and	w8, w8, #0x7
  405674:	cmp	w0, w8
  405678:	b.lt	4056b0 <connection_shovel+0x500>  // b.tstop
  40567c:	ldr	w8, [sp, #56]
  405680:	ldr	w9, [sp, #64]
  405684:	orr	w0, w9, w8, lsl #10
  405688:	ldr	w1, [sp, #60]
  40568c:	ldr	x2, [sp, #24]
  405690:	mov	w3, #0x93                  	// #147
  405694:	adrp	x4, 406000 <connection_shovel.__assert_in_set.64+0x330>
  405698:	add	x4, x4, #0x70a
  40569c:	adrp	x5, 406000 <connection_shovel.__assert_in_set.64+0x330>
  4056a0:	add	x5, x5, #0x71c
  4056a4:	bl	4019f8 <log_internal_realm@plt>
  4056a8:	str	w0, [sp, #8]
  4056ac:	b	4056c4 <connection_shovel+0x514>
  4056b0:	ldr	w0, [sp, #60]
  4056b4:	bl	401a08 <abs@plt>
  4056b8:	mov	w8, wzr
  4056bc:	subs	w8, w8, w0, uxtb
  4056c0:	str	w8, [sp, #8]
  4056c4:	ldr	w8, [sp, #8]
  4056c8:	str	w8, [sp, #52]
  4056cc:	ldr	w8, [sp, #52]
  4056d0:	stur	w8, [x29, #-4]
  4056d4:	b	405898 <connection_shovel+0x6e8>
  4056d8:	ldur	x8, [x29, #-48]
  4056dc:	ldr	x8, [x8]
  4056e0:	cmp	x8, #0x0
  4056e4:	cset	w9, ls  // ls = plast
  4056e8:	tbnz	w9, #0, 40588c <connection_shovel+0x6dc>
  4056ec:	ldur	x8, [x29, #-40]
  4056f0:	ldr	w9, [x8]
  4056f4:	cmp	w9, #0x0
  4056f8:	cset	w9, lt  // lt = tstop
  4056fc:	tbnz	w9, #0, 40588c <connection_shovel+0x6dc>
  405700:	ldur	x8, [x29, #-32]
  405704:	ldr	w0, [x8]
  405708:	ldur	x8, [x29, #-40]
  40570c:	ldr	w2, [x8]
  405710:	ldur	x8, [x29, #-48]
  405714:	ldr	x4, [x8]
  405718:	mov	x8, xzr
  40571c:	mov	x1, x8
  405720:	mov	x3, x8
  405724:	mov	w5, #0x3                   	// #3
  405728:	bl	401d08 <splice@plt>
  40572c:	str	x0, [sp, #72]
  405730:	ldr	x8, [sp, #72]
  405734:	cmp	x8, #0x0
  405738:	cset	w9, le
  40573c:	tbnz	w9, #0, 405760 <connection_shovel+0x5b0>
  405740:	ldr	x8, [sp, #72]
  405744:	ldur	x9, [x29, #-48]
  405748:	ldr	x10, [x9]
  40574c:	subs	x8, x10, x8
  405750:	str	x8, [x9]
  405754:	mov	w11, #0x1                   	// #1
  405758:	sturb	w11, [x29, #-73]
  40575c:	b	40588c <connection_shovel+0x6dc>
  405760:	ldr	x8, [sp, #72]
  405764:	cbz	x8, 40577c <connection_shovel+0x5cc>
  405768:	bl	401bf8 <__errno_location@plt>
  40576c:	ldr	w0, [x0]
  405770:	bl	403a84 <ERRNO_IS_DISCONNECT>
  405774:	tbnz	w0, #0, 40577c <connection_shovel+0x5cc>
  405778:	b	4057a8 <connection_shovel+0x5f8>
  40577c:	ldur	x8, [x29, #-72]
  405780:	ldr	x0, [x8]
  405784:	bl	401a78 <sd_event_source_unref@plt>
  405788:	ldur	x8, [x29, #-72]
  40578c:	str	x0, [x8]
  405790:	ldur	x8, [x29, #-40]
  405794:	ldr	w0, [x8]
  405798:	bl	401b68 <safe_close@plt>
  40579c:	ldur	x8, [x29, #-40]
  4057a0:	str	w0, [x8]
  4057a4:	b	40588c <connection_shovel+0x6dc>
  4057a8:	mov	w8, #0x0                   	// #0
  4057ac:	strb	w8, [sp, #51]
  4057b0:	bl	401bf8 <__errno_location@plt>
  4057b4:	ldr	w8, [x0]
  4057b8:	cmp	w8, #0x4
  4057bc:	str	w8, [sp, #4]
  4057c0:	b.eq	4057e0 <connection_shovel+0x630>  // b.none
  4057c4:	b	4057c8 <connection_shovel+0x618>
  4057c8:	ldr	w8, [sp, #4]
  4057cc:	cmp	w8, #0xb
  4057d0:	cset	w9, eq  // eq = none
  4057d4:	eor	w9, w9, #0x1
  4057d8:	tbnz	w9, #0, 4057ec <connection_shovel+0x63c>
  4057dc:	b	4057e0 <connection_shovel+0x630>
  4057e0:	mov	w8, #0x1                   	// #1
  4057e4:	strb	w8, [sp, #51]
  4057e8:	b	4057ec <connection_shovel+0x63c>
  4057ec:	ldrb	w8, [sp, #51]
  4057f0:	and	w8, w8, #0x1
  4057f4:	strb	w8, [sp, #50]
  4057f8:	ldrb	w8, [sp, #50]
  4057fc:	tbnz	w8, #0, 40588c <connection_shovel+0x6dc>
  405800:	mov	w8, #0x3                   	// #3
  405804:	str	w8, [sp, #44]
  405808:	bl	401bf8 <__errno_location@plt>
  40580c:	ldr	w8, [x0]
  405810:	str	w8, [sp, #40]
  405814:	str	wzr, [sp, #36]
  405818:	ldr	w0, [sp, #36]
  40581c:	bl	4019e8 <log_get_max_level_realm@plt>
  405820:	ldr	w8, [sp, #44]
  405824:	and	w8, w8, #0x7
  405828:	cmp	w0, w8
  40582c:	b.lt	405864 <connection_shovel+0x6b4>  // b.tstop
  405830:	ldr	w8, [sp, #36]
  405834:	ldr	w9, [sp, #44]
  405838:	orr	w0, w9, w8, lsl #10
  40583c:	ldr	w1, [sp, #40]
  405840:	ldr	x2, [sp, #24]
  405844:	mov	w3, #0x9f                  	// #159
  405848:	adrp	x4, 406000 <connection_shovel.__assert_in_set.64+0x330>
  40584c:	add	x4, x4, #0x70a
  405850:	adrp	x5, 406000 <connection_shovel.__assert_in_set.64+0x330>
  405854:	add	x5, x5, #0x71c
  405858:	bl	4019f8 <log_internal_realm@plt>
  40585c:	str	w0, [sp]
  405860:	b	405878 <connection_shovel+0x6c8>
  405864:	ldr	w0, [sp, #40]
  405868:	bl	401a08 <abs@plt>
  40586c:	mov	w8, wzr
  405870:	subs	w8, w8, w0, uxtb
  405874:	str	w8, [sp]
  405878:	ldr	w8, [sp]
  40587c:	str	w8, [sp, #32]
  405880:	ldr	w8, [sp, #32]
  405884:	stur	w8, [x29, #-4]
  405888:	b	405898 <connection_shovel+0x6e8>
  40588c:	ldurb	w8, [x29, #-73]
  405890:	tbnz	w8, #0, 4054f8 <connection_shovel+0x348>
  405894:	stur	wzr, [x29, #-4]
  405898:	ldur	w0, [x29, #-4]
  40589c:	ldp	x29, x30, [sp, #160]
  4058a0:	add	sp, sp, #0xb0
  4058a4:	ret

00000000004058a8 <ALIGN_TO>:
  4058a8:	sub	sp, sp, #0x10
  4058ac:	str	x0, [sp, #8]
  4058b0:	str	x1, [sp]
  4058b4:	ldr	x8, [sp, #8]
  4058b8:	ldr	x9, [sp]
  4058bc:	add	x8, x8, x9
  4058c0:	subs	x8, x8, #0x1
  4058c4:	ldr	x9, [sp]
  4058c8:	subs	x9, x9, #0x1
  4058cc:	bic	x0, x8, x9
  4058d0:	add	sp, sp, #0x10
  4058d4:	ret

00000000004058d8 <__libc_csu_init>:
  4058d8:	stp	x29, x30, [sp, #-64]!
  4058dc:	mov	x29, sp
  4058e0:	stp	x19, x20, [sp, #16]
  4058e4:	adrp	x20, 41f000 <__FRAME_END__+0x18758>
  4058e8:	add	x20, x20, #0xba8
  4058ec:	stp	x21, x22, [sp, #32]
  4058f0:	adrp	x21, 41f000 <__FRAME_END__+0x18758>
  4058f4:	add	x21, x21, #0xba0
  4058f8:	sub	x20, x20, x21
  4058fc:	mov	w22, w0
  405900:	stp	x23, x24, [sp, #48]
  405904:	mov	x23, x1
  405908:	mov	x24, x2
  40590c:	bl	401900 <_init>
  405910:	cmp	xzr, x20, asr #3
  405914:	b.eq	405940 <__libc_csu_init+0x68>  // b.none
  405918:	asr	x20, x20, #3
  40591c:	mov	x19, #0x0                   	// #0
  405920:	ldr	x3, [x21, x19, lsl #3]
  405924:	mov	x2, x24
  405928:	add	x19, x19, #0x1
  40592c:	mov	x1, x23
  405930:	mov	w0, w22
  405934:	blr	x3
  405938:	cmp	x20, x19
  40593c:	b.ne	405920 <__libc_csu_init+0x48>  // b.any
  405940:	ldp	x19, x20, [sp, #16]
  405944:	ldp	x21, x22, [sp, #32]
  405948:	ldp	x23, x24, [sp, #48]
  40594c:	ldp	x29, x30, [sp], #64
  405950:	ret
  405954:	nop

0000000000405958 <__libc_csu_fini>:
  405958:	ret

Disassembly of section .fini:

000000000040595c <_fini>:
  40595c:	stp	x29, x30, [sp, #-16]!
  405960:	mov	x29, sp
  405964:	ldp	x29, x30, [sp], #16
  405968:	ret
