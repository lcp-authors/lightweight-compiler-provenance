
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//rtmon_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000404be8 <.init>:
  404be8:	stp	x29, x30, [sp, #-16]!
  404bec:	mov	x29, sp
  404bf0:	bl	4055b0 <_start@@Base+0x50>
  404bf4:	ldp	x29, x30, [sp], #16
  404bf8:	ret

Disassembly of section .plt:

0000000000404c00 <memcpy@plt-0x20>:
  404c00:	stp	x16, x30, [sp, #-16]!
  404c04:	adrp	x16, 41f000 <_IO_stdin_used@@Base+0x13268>
  404c08:	ldr	x17, [x16, #4088]
  404c0c:	add	x16, x16, #0xff8
  404c10:	br	x17
  404c14:	nop
  404c18:	nop
  404c1c:	nop

0000000000404c20 <memcpy@plt>:
  404c20:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404c24:	ldr	x17, [x16]
  404c28:	add	x16, x16, #0x0
  404c2c:	br	x17

0000000000404c30 <recvmsg@plt>:
  404c30:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404c34:	ldr	x17, [x16, #8]
  404c38:	add	x16, x16, #0x8
  404c3c:	br	x17

0000000000404c40 <strtoul@plt>:
  404c40:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404c44:	ldr	x17, [x16, #16]
  404c48:	add	x16, x16, #0x10
  404c4c:	br	x17

0000000000404c50 <strlen@plt>:
  404c50:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404c54:	ldr	x17, [x16, #24]
  404c58:	add	x16, x16, #0x18
  404c5c:	br	x17

0000000000404c60 <fputs@plt>:
  404c60:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404c64:	ldr	x17, [x16, #32]
  404c68:	add	x16, x16, #0x20
  404c6c:	br	x17

0000000000404c70 <exit@plt>:
  404c70:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404c74:	ldr	x17, [x16, #40]
  404c78:	add	x16, x16, #0x28
  404c7c:	br	x17

0000000000404c80 <perror@plt>:
  404c80:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404c84:	ldr	x17, [x16, #48]
  404c88:	add	x16, x16, #0x30
  404c8c:	br	x17

0000000000404c90 <__cmsg_nxthdr@plt>:
  404c90:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404c94:	ldr	x17, [x16, #56]
  404c98:	add	x16, x16, #0x38
  404c9c:	br	x17

0000000000404ca0 <strtoll@plt>:
  404ca0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404ca4:	ldr	x17, [x16, #64]
  404ca8:	add	x16, x16, #0x40
  404cac:	br	x17

0000000000404cb0 <strtod@plt>:
  404cb0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404cb4:	ldr	x17, [x16, #72]
  404cb8:	add	x16, x16, #0x48
  404cbc:	br	x17

0000000000404cc0 <geteuid@plt>:
  404cc0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404cc4:	ldr	x17, [x16, #80]
  404cc8:	add	x16, x16, #0x50
  404ccc:	br	x17

0000000000404cd0 <sethostent@plt>:
  404cd0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404cd4:	ldr	x17, [x16, #88]
  404cd8:	add	x16, x16, #0x58
  404cdc:	br	x17

0000000000404ce0 <bind@plt>:
  404ce0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404ce4:	ldr	x17, [x16, #96]
  404ce8:	add	x16, x16, #0x60
  404cec:	br	x17

0000000000404cf0 <ftell@plt>:
  404cf0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404cf4:	ldr	x17, [x16, #104]
  404cf8:	add	x16, x16, #0x68
  404cfc:	br	x17

0000000000404d00 <sprintf@plt>:
  404d00:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404d04:	ldr	x17, [x16, #112]
  404d08:	add	x16, x16, #0x70
  404d0c:	br	x17

0000000000404d10 <getuid@plt>:
  404d10:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404d14:	ldr	x17, [x16, #120]
  404d18:	add	x16, x16, #0x78
  404d1c:	br	x17

0000000000404d20 <putc@plt>:
  404d20:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404d24:	ldr	x17, [x16, #128]
  404d28:	add	x16, x16, #0x80
  404d2c:	br	x17

0000000000404d30 <strftime@plt>:
  404d30:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404d34:	ldr	x17, [x16, #136]
  404d38:	add	x16, x16, #0x88
  404d3c:	br	x17

0000000000404d40 <fputc@plt>:
  404d40:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404d44:	ldr	x17, [x16, #144]
  404d48:	add	x16, x16, #0x90
  404d4c:	br	x17

0000000000404d50 <snprintf@plt>:
  404d50:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404d54:	ldr	x17, [x16, #152]
  404d58:	add	x16, x16, #0x98
  404d5c:	br	x17

0000000000404d60 <fileno@plt>:
  404d60:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404d64:	ldr	x17, [x16, #160]
  404d68:	add	x16, x16, #0xa0
  404d6c:	br	x17

0000000000404d70 <localtime@plt>:
  404d70:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404d74:	ldr	x17, [x16, #168]
  404d78:	add	x16, x16, #0xa8
  404d7c:	br	x17

0000000000404d80 <fclose@plt>:
  404d80:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404d84:	ldr	x17, [x16, #176]
  404d88:	add	x16, x16, #0xb0
  404d8c:	br	x17

0000000000404d90 <atoi@plt>:
  404d90:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404d94:	ldr	x17, [x16, #184]
  404d98:	add	x16, x16, #0xb8
  404d9c:	br	x17

0000000000404da0 <time@plt>:
  404da0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404da4:	ldr	x17, [x16, #192]
  404da8:	add	x16, x16, #0xc0
  404dac:	br	x17

0000000000404db0 <malloc@plt>:
  404db0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404db4:	ldr	x17, [x16, #200]
  404db8:	add	x16, x16, #0xc8
  404dbc:	br	x17

0000000000404dc0 <setsockopt@plt>:
  404dc0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404dc4:	ldr	x17, [x16, #208]
  404dc8:	add	x16, x16, #0xd0
  404dcc:	br	x17

0000000000404dd0 <__isoc99_fscanf@plt>:
  404dd0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404dd4:	ldr	x17, [x16, #216]
  404dd8:	add	x16, x16, #0xd8
  404ddc:	br	x17

0000000000404de0 <__libc_start_main@plt>:
  404de0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404de4:	ldr	x17, [x16, #224]
  404de8:	add	x16, x16, #0xe0
  404dec:	br	x17

0000000000404df0 <strcat@plt>:
  404df0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404df4:	ldr	x17, [x16, #232]
  404df8:	add	x16, x16, #0xe8
  404dfc:	br	x17

0000000000404e00 <if_indextoname@plt>:
  404e00:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404e04:	ldr	x17, [x16, #240]
  404e08:	add	x16, x16, #0xf0
  404e0c:	br	x17

0000000000404e10 <memset@plt>:
  404e10:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404e14:	ldr	x17, [x16, #248]
  404e18:	add	x16, x16, #0xf8
  404e1c:	br	x17

0000000000404e20 <gettimeofday@plt>:
  404e20:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404e24:	ldr	x17, [x16, #256]
  404e28:	add	x16, x16, #0x100
  404e2c:	br	x17

0000000000404e30 <sendmsg@plt>:
  404e30:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404e34:	ldr	x17, [x16, #264]
  404e38:	add	x16, x16, #0x108
  404e3c:	br	x17

0000000000404e40 <cap_get_flag@plt>:
  404e40:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404e44:	ldr	x17, [x16, #272]
  404e48:	add	x16, x16, #0x110
  404e4c:	br	x17

0000000000404e50 <strcasecmp@plt>:
  404e50:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404e54:	ldr	x17, [x16, #280]
  404e58:	add	x16, x16, #0x118
  404e5c:	br	x17

0000000000404e60 <realloc@plt>:
  404e60:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404e64:	ldr	x17, [x16, #288]
  404e68:	add	x16, x16, #0x120
  404e6c:	br	x17

0000000000404e70 <cap_set_proc@plt>:
  404e70:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404e74:	ldr	x17, [x16, #296]
  404e78:	add	x16, x16, #0x128
  404e7c:	br	x17

0000000000404e80 <strdup@plt>:
  404e80:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404e84:	ldr	x17, [x16, #304]
  404e88:	add	x16, x16, #0x130
  404e8c:	br	x17

0000000000404e90 <strerror@plt>:
  404e90:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404e94:	ldr	x17, [x16, #312]
  404e98:	add	x16, x16, #0x138
  404e9c:	br	x17

0000000000404ea0 <close@plt>:
  404ea0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404ea4:	ldr	x17, [x16, #320]
  404ea8:	add	x16, x16, #0x140
  404eac:	br	x17

0000000000404eb0 <strrchr@plt>:
  404eb0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404eb4:	ldr	x17, [x16, #328]
  404eb8:	add	x16, x16, #0x148
  404ebc:	br	x17

0000000000404ec0 <recv@plt>:
  404ec0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404ec4:	ldr	x17, [x16, #336]
  404ec8:	add	x16, x16, #0x150
  404ecc:	br	x17

0000000000404ed0 <__gmon_start__@plt>:
  404ed0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404ed4:	ldr	x17, [x16, #344]
  404ed8:	add	x16, x16, #0x158
  404edc:	br	x17

0000000000404ee0 <abort@plt>:
  404ee0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404ee4:	ldr	x17, [x16, #352]
  404ee8:	add	x16, x16, #0x160
  404eec:	br	x17

0000000000404ef0 <feof@plt>:
  404ef0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404ef4:	ldr	x17, [x16, #360]
  404ef8:	add	x16, x16, #0x168
  404efc:	br	x17

0000000000404f00 <memcmp@plt>:
  404f00:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404f04:	ldr	x17, [x16, #368]
  404f08:	add	x16, x16, #0x170
  404f0c:	br	x17

0000000000404f10 <strcmp@plt>:
  404f10:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404f14:	ldr	x17, [x16, #376]
  404f18:	add	x16, x16, #0x178
  404f1c:	br	x17

0000000000404f20 <__ctype_b_loc@plt>:
  404f20:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404f24:	ldr	x17, [x16, #384]
  404f28:	add	x16, x16, #0x180
  404f2c:	br	x17

0000000000404f30 <strtol@plt>:
  404f30:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404f34:	ldr	x17, [x16, #392]
  404f38:	add	x16, x16, #0x188
  404f3c:	br	x17

0000000000404f40 <cap_get_proc@plt>:
  404f40:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404f44:	ldr	x17, [x16, #400]
  404f48:	add	x16, x16, #0x190
  404f4c:	br	x17

0000000000404f50 <fread@plt>:
  404f50:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404f54:	ldr	x17, [x16, #408]
  404f58:	add	x16, x16, #0x198
  404f5c:	br	x17

0000000000404f60 <getline@plt>:
  404f60:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404f64:	ldr	x17, [x16, #416]
  404f68:	add	x16, x16, #0x1a0
  404f6c:	br	x17

0000000000404f70 <gethostbyaddr@plt>:
  404f70:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404f74:	ldr	x17, [x16, #424]
  404f78:	add	x16, x16, #0x1a8
  404f7c:	br	x17

0000000000404f80 <free@plt>:
  404f80:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404f84:	ldr	x17, [x16, #432]
  404f88:	add	x16, x16, #0x1b0
  404f8c:	br	x17

0000000000404f90 <inet_pton@plt>:
  404f90:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404f94:	ldr	x17, [x16, #440]
  404f98:	add	x16, x16, #0x1b8
  404f9c:	br	x17

0000000000404fa0 <send@plt>:
  404fa0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404fa4:	ldr	x17, [x16, #448]
  404fa8:	add	x16, x16, #0x1c0
  404fac:	br	x17

0000000000404fb0 <strspn@plt>:
  404fb0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404fb4:	ldr	x17, [x16, #456]
  404fb8:	add	x16, x16, #0x1c8
  404fbc:	br	x17

0000000000404fc0 <strchr@plt>:
  404fc0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404fc4:	ldr	x17, [x16, #464]
  404fc8:	add	x16, x16, #0x1d0
  404fcc:	br	x17

0000000000404fd0 <strtoull@plt>:
  404fd0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404fd4:	ldr	x17, [x16, #472]
  404fd8:	add	x16, x16, #0x1d8
  404fdc:	br	x17

0000000000404fe0 <fwrite@plt>:
  404fe0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404fe4:	ldr	x17, [x16, #480]
  404fe8:	add	x16, x16, #0x1e0
  404fec:	br	x17

0000000000404ff0 <socket@plt>:
  404ff0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  404ff4:	ldr	x17, [x16, #488]
  404ff8:	add	x16, x16, #0x1e8
  404ffc:	br	x17

0000000000405000 <fflush@plt>:
  405000:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405004:	ldr	x17, [x16, #496]
  405008:	add	x16, x16, #0x1f0
  40500c:	br	x17

0000000000405010 <strcpy@plt>:
  405010:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405014:	ldr	x17, [x16, #504]
  405018:	add	x16, x16, #0x1f8
  40501c:	br	x17

0000000000405020 <fopen64@plt>:
  405020:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405024:	ldr	x17, [x16, #512]
  405028:	add	x16, x16, #0x200
  40502c:	br	x17

0000000000405030 <cap_clear@plt>:
  405030:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405034:	ldr	x17, [x16, #520]
  405038:	add	x16, x16, #0x208
  40503c:	br	x17

0000000000405040 <isatty@plt>:
  405040:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405044:	ldr	x17, [x16, #528]
  405048:	add	x16, x16, #0x210
  40504c:	br	x17

0000000000405050 <sysconf@plt>:
  405050:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405054:	ldr	x17, [x16, #536]
  405058:	add	x16, x16, #0x218
  40505c:	br	x17

0000000000405060 <asctime@plt>:
  405060:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405064:	ldr	x17, [x16, #544]
  405068:	add	x16, x16, #0x220
  40506c:	br	x17

0000000000405070 <cap_free@plt>:
  405070:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405074:	ldr	x17, [x16, #552]
  405078:	add	x16, x16, #0x228
  40507c:	br	x17

0000000000405080 <if_nametoindex@plt>:
  405080:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405084:	ldr	x17, [x16, #560]
  405088:	add	x16, x16, #0x230
  40508c:	br	x17

0000000000405090 <strchrnul@plt>:
  405090:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405094:	ldr	x17, [x16, #568]
  405098:	add	x16, x16, #0x238
  40509c:	br	x17

00000000004050a0 <strstr@plt>:
  4050a0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  4050a4:	ldr	x17, [x16, #576]
  4050a8:	add	x16, x16, #0x240
  4050ac:	br	x17

00000000004050b0 <__isoc99_sscanf@plt>:
  4050b0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  4050b4:	ldr	x17, [x16, #584]
  4050b8:	add	x16, x16, #0x248
  4050bc:	br	x17

00000000004050c0 <strncpy@plt>:
  4050c0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  4050c4:	ldr	x17, [x16, #592]
  4050c8:	add	x16, x16, #0x250
  4050cc:	br	x17

00000000004050d0 <strcspn@plt>:
  4050d0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  4050d4:	ldr	x17, [x16, #600]
  4050d8:	add	x16, x16, #0x258
  4050dc:	br	x17

00000000004050e0 <vfprintf@plt>:
  4050e0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  4050e4:	ldr	x17, [x16, #608]
  4050e8:	add	x16, x16, #0x260
  4050ec:	br	x17

00000000004050f0 <printf@plt>:
  4050f0:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  4050f4:	ldr	x17, [x16, #616]
  4050f8:	add	x16, x16, #0x268
  4050fc:	br	x17

0000000000405100 <__assert_fail@plt>:
  405100:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405104:	ldr	x17, [x16, #624]
  405108:	add	x16, x16, #0x270
  40510c:	br	x17

0000000000405110 <__errno_location@plt>:
  405110:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405114:	ldr	x17, [x16, #632]
  405118:	add	x16, x16, #0x278
  40511c:	br	x17

0000000000405120 <getenv@plt>:
  405120:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405124:	ldr	x17, [x16, #640]
  405128:	add	x16, x16, #0x280
  40512c:	br	x17

0000000000405130 <putchar@plt>:
  405130:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405134:	ldr	x17, [x16, #648]
  405138:	add	x16, x16, #0x288
  40513c:	br	x17

0000000000405140 <getsockname@plt>:
  405140:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405144:	ldr	x17, [x16, #656]
  405148:	add	x16, x16, #0x290
  40514c:	br	x17

0000000000405150 <fprintf@plt>:
  405150:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405154:	ldr	x17, [x16, #664]
  405158:	add	x16, x16, #0x298
  40515c:	br	x17

0000000000405160 <fgets@plt>:
  405160:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405164:	ldr	x17, [x16, #672]
  405168:	add	x16, x16, #0x2a0
  40516c:	br	x17

0000000000405170 <inet_ntop@plt>:
  405170:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405174:	ldr	x17, [x16, #680]
  405178:	add	x16, x16, #0x2a8
  40517c:	br	x17

0000000000405180 <ferror@plt>:
  405180:	adrp	x16, 420000 <memcpy@GLIBC_2.17>
  405184:	ldr	x17, [x16, #688]
  405188:	add	x16, x16, #0x2b0
  40518c:	br	x17

Disassembly of section .text:

0000000000405190 <main@@Base>:
  405190:	stp	x29, x30, [sp, #-192]!
  405194:	mov	x29, sp
  405198:	stp	x19, x20, [sp, #16]
  40519c:	mov	x20, x1
  4051a0:	mov	w19, #0xffffffff            	// #-1
  4051a4:	stp	x21, x22, [sp, #32]
  4051a8:	mov	w22, w0
  4051ac:	adrp	x0, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  4051b0:	add	x0, x0, #0xe76
  4051b4:	mov	w21, #0x0                   	// #0
  4051b8:	stp	x23, x24, [sp, #48]
  4051bc:	mov	x24, #0x0                   	// #0
  4051c0:	stp	x25, x26, [sp, #64]
  4051c4:	mov	w26, #0x0                   	// #0
  4051c8:	stp	x27, x28, [sp, #80]
  4051cc:	mov	w27, #0x0                   	// #0
  4051d0:	str	wzr, [sp, #108]
  4051d4:	str	x0, [sp, #112]
  4051d8:	adrp	x0, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  4051dc:	add	x0, x0, #0xebe
  4051e0:	str	x0, [sp, #120]
  4051e4:	cmp	w22, #0x1
  4051e8:	b.gt	405208 <main@@Base+0x78>
  4051ec:	adrp	x22, 420000 <memcpy@GLIBC_2.17>
  4051f0:	cbnz	x24, 405420 <main@@Base+0x290>
  4051f4:	ldr	x1, [x22, #736]
  4051f8:	adrp	x0, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  4051fc:	add	x0, x0, #0xf32
  405200:	bl	404c60 <fputs@plt>
  405204:	b	4052a0 <main@@Base+0x110>
  405208:	mov	x23, x20
  40520c:	sub	w28, w22, #0x1
  405210:	ldr	x1, [sp, #112]
  405214:	ldr	x0, [x23, #8]!
  405218:	bl	40682c <matches@@Base>
  40521c:	tst	w0, #0xff
  405220:	b.ne	4052a8 <main@@Base+0x118>  // b.any
  405224:	mov	w22, w28
  405228:	cmp	w28, #0x1
  40522c:	b.ne	405234 <main@@Base+0xa4>  // b.any
  405230:	bl	40568c <_start@@Base+0x12c>
  405234:	ldr	x20, [x20, #16]
  405238:	adrp	x1, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  40523c:	add	x1, x1, #0xe7e
  405240:	mov	x0, x20
  405244:	bl	404f10 <strcmp@plt>
  405248:	cbz	w0, 4053d8 <main@@Base+0x248>
  40524c:	adrp	x1, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  405250:	mov	x0, x20
  405254:	add	x1, x1, #0xe83
  405258:	bl	404f10 <strcmp@plt>
  40525c:	cbz	w0, 4053e4 <main@@Base+0x254>
  405260:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  405264:	mov	x0, x20
  405268:	add	x1, x1, #0x652
  40526c:	bl	404f10 <strcmp@plt>
  405270:	cbz	w0, 4053e4 <main@@Base+0x254>
  405274:	adrp	x1, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  405278:	mov	x0, x20
  40527c:	add	x1, x1, #0xe89
  405280:	bl	404f10 <strcmp@plt>
  405284:	cbz	w0, 405230 <main@@Base+0xa0>
  405288:	adrp	x1, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  40528c:	mov	x2, x20
  405290:	add	x1, x1, #0xe8e
  405294:	adrp	x0, 420000 <memcpy@GLIBC_2.17>
  405298:	ldr	x0, [x0, #736]
  40529c:	bl	405150 <fprintf@plt>
  4052a0:	mov	w0, #0xffffffff            	// #-1
  4052a4:	b	405314 <main@@Base+0x184>
  4052a8:	ldr	x1, [sp, #120]
  4052ac:	ldr	x25, [x20, #8]
  4052b0:	mov	x0, x25
  4052b4:	bl	404f10 <strcmp@plt>
  4052b8:	cbz	w0, 4053dc <main@@Base+0x24c>
  4052bc:	adrp	x1, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  4052c0:	mov	x0, x25
  4052c4:	add	x1, x1, #0xec1
  4052c8:	bl	404f10 <strcmp@plt>
  4052cc:	cbz	w0, 4053e8 <main@@Base+0x258>
  4052d0:	adrp	x1, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  4052d4:	mov	x0, x25
  4052d8:	add	x1, x1, #0xec4
  4052dc:	bl	404f10 <strcmp@plt>
  4052e0:	cbz	w0, 4053f0 <main@@Base+0x260>
  4052e4:	mov	x0, x25
  4052e8:	adrp	x1, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  4052ec:	add	x1, x1, #0xec7
  4052f0:	bl	40682c <matches@@Base>
  4052f4:	tst	w0, #0xff
  4052f8:	b.ne	405318 <main@@Base+0x188>  // b.any
  4052fc:	adrp	x1, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  405300:	adrp	x0, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  405304:	add	x1, x1, #0xfa0
  405308:	add	x0, x0, #0xed0
  40530c:	bl	4050f0 <printf@plt>
  405310:	mov	w0, #0x0                   	// #0
  405314:	bl	404c70 <exit@plt>
  405318:	ldr	x0, [x20, #8]
  40531c:	adrp	x1, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  405320:	add	x1, x1, #0xeee
  405324:	bl	40682c <matches@@Base>
  405328:	tst	w0, #0xff
  40532c:	b.ne	405350 <main@@Base+0x1c0>  // b.any
  405330:	mov	w22, w28
  405334:	cmp	w28, #0x1
  405338:	b.eq	405230 <main@@Base+0xa0>  // b.none
  40533c:	ldr	x24, [x20, #16]
  405340:	mov	x20, x23
  405344:	sub	w22, w22, #0x1
  405348:	add	x20, x20, #0x8
  40534c:	b	4051e4 <main@@Base+0x54>
  405350:	ldr	x0, [x20, #8]
  405354:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  405358:	add	x1, x1, #0x652
  40535c:	bl	40682c <matches@@Base>
  405360:	tst	w0, #0xff
  405364:	b.eq	4053f8 <main@@Base+0x268>  // b.none
  405368:	ldr	x0, [x20, #8]
  40536c:	adrp	x1, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  405370:	add	x1, x1, #0xef3
  405374:	bl	40682c <matches@@Base>
  405378:	tst	w0, #0xff
  40537c:	b.eq	405404 <main@@Base+0x274>  // b.none
  405380:	ldr	x0, [x20, #8]
  405384:	adrp	x1, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  405388:	add	x1, x1, #0xefb
  40538c:	bl	40682c <matches@@Base>
  405390:	tst	w0, #0xff
  405394:	b.eq	40540c <main@@Base+0x27c>  // b.none
  405398:	ldr	x19, [x20, #8]
  40539c:	adrp	x1, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  4053a0:	add	x1, x1, #0xf01
  4053a4:	mov	x0, x19
  4053a8:	bl	404f10 <strcmp@plt>
  4053ac:	cbz	w0, 405418 <main@@Base+0x288>
  4053b0:	mov	x0, x19
  4053b4:	adrp	x1, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  4053b8:	add	x1, x1, #0xe89
  4053bc:	bl	40682c <matches@@Base>
  4053c0:	tst	w0, #0xff
  4053c4:	b.eq	405230 <main@@Base+0xa0>  // b.none
  4053c8:	adrp	x1, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  4053cc:	add	x1, x1, #0xf05
  4053d0:	ldr	x2, [x20, #8]
  4053d4:	b	405294 <main@@Base+0x104>
  4053d8:	mov	x20, x23
  4053dc:	mov	w21, #0x2                   	// #2
  4053e0:	b	405344 <main@@Base+0x1b4>
  4053e4:	mov	x20, x23
  4053e8:	mov	w21, #0xa                   	// #10
  4053ec:	b	405344 <main@@Base+0x1b4>
  4053f0:	mov	w21, #0x11                  	// #17
  4053f4:	b	405344 <main@@Base+0x1b4>
  4053f8:	mov	w27, #0x1                   	// #1
  4053fc:	mov	w19, #0x0                   	// #0
  405400:	b	405344 <main@@Base+0x1b4>
  405404:	mov	w26, #0x1                   	// #1
  405408:	b	4053fc <main@@Base+0x26c>
  40540c:	mov	w0, #0x1                   	// #1
  405410:	str	w0, [sp, #108]
  405414:	b	4053fc <main@@Base+0x26c>
  405418:	mov	w19, #0xffffffff            	// #-1
  40541c:	b	405344 <main@@Base+0x1b4>
  405420:	cbz	w27, 405428 <main@@Base+0x298>
  405424:	orr	w19, w19, #0x1
  405428:	cbz	w26, 405454 <main@@Base+0x2c4>
  40542c:	cmp	w21, #0x0
  405430:	and	w1, w21, #0xfffffffd
  405434:	cset	w0, eq  // eq = none
  405438:	cbnz	w1, 405440 <main@@Base+0x2b0>
  40543c:	orr	w19, w19, #0x10
  405440:	cmp	w0, #0x0
  405444:	mov	w0, w19
  405448:	ccmp	w21, #0xa, #0x4, eq  // eq = none
  40544c:	orr	w19, w19, #0x100
  405450:	csel	w19, w19, w0, eq  // eq = none
  405454:	ldr	w0, [sp, #108]
  405458:	cbz	w0, 405484 <main@@Base+0x2f4>
  40545c:	cmp	w21, #0x0
  405460:	and	w1, w21, #0xfffffffd
  405464:	cset	w0, eq  // eq = none
  405468:	cbnz	w1, 405470 <main@@Base+0x2e0>
  40546c:	orr	w19, w19, #0x40
  405470:	cmp	w0, #0x0
  405474:	mov	w0, w19
  405478:	ccmp	w21, #0xa, #0x4, eq  // eq = none
  40547c:	orr	w19, w19, #0x400
  405480:	csel	w19, w19, w0, eq  // eq = none
  405484:	mov	x0, x24
  405488:	adrp	x1, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  40548c:	add	x1, x1, #0xf67
  405490:	bl	405020 <fopen64@plt>
  405494:	mov	x20, x0
  405498:	cbnz	x0, 4054ac <main@@Base+0x31c>
  40549c:	adrp	x0, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  4054a0:	add	x0, x0, #0xf69
  4054a4:	bl	404c80 <perror@plt>
  4054a8:	b	4052a0 <main@@Base+0x110>
  4054ac:	mov	w1, w19
  4054b0:	add	x0, sp, #0x88
  4054b4:	bl	40a5e0 <rtnl_open@@Base>
  4054b8:	tbz	w0, #31, 4054c4 <main@@Base+0x334>
  4054bc:	mov	w0, #0x1                   	// #1
  4054c0:	b	405314 <main@@Base+0x184>
  4054c4:	add	x0, sp, #0x88
  4054c8:	mov	w1, #0x0                   	// #0
  4054cc:	bl	40aac0 <rtnl_linkdump_req@@Base>
  4054d0:	tbz	w0, #31, 4054e4 <main@@Base+0x354>
  4054d4:	adrp	x0, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  4054d8:	add	x0, x0, #0xf76
  4054dc:	bl	404c80 <perror@plt>
  4054e0:	b	4054bc <main@@Base+0x32c>
  4054e4:	mov	x0, x20
  4054e8:	bl	4056b0 <_start@@Base+0x150>
  4054ec:	adrp	x1, 405000 <fflush@plt>
  4054f0:	mov	x2, x20
  4054f4:	add	x1, x1, #0x770
  4054f8:	add	x0, sp, #0x88
  4054fc:	mov	w3, #0x0                   	// #0
  405500:	bl	40ae78 <rtnl_dump_filter_nc@@Base>
  405504:	tbnz	w0, #31, 405530 <main@@Base+0x3a0>
  405508:	adrp	x0, 420000 <memcpy@GLIBC_2.17>
  40550c:	adrp	x1, 405000 <fflush@plt>
  405510:	mov	x2, x20
  405514:	add	x1, x1, #0x714
  405518:	str	wzr, [x0, #712]
  40551c:	add	x0, sp, #0x88
  405520:	bl	40b264 <rtnl_listen@@Base>
  405524:	tbz	w0, #31, 405310 <main@@Base+0x180>
  405528:	mov	w0, #0x2                   	// #2
  40552c:	b	405314 <main@@Base+0x184>
  405530:	ldr	x1, [x22, #736]
  405534:	adrp	x0, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  405538:	add	x0, x0, #0xf8f
  40553c:	bl	404c60 <fputs@plt>
  405540:	mov	w0, #0x1                   	// #1
  405544:	ldp	x19, x20, [sp, #16]
  405548:	ldp	x21, x22, [sp, #32]
  40554c:	ldp	x23, x24, [sp, #48]
  405550:	ldp	x25, x26, [sp, #64]
  405554:	ldp	x27, x28, [sp, #80]
  405558:	ldp	x29, x30, [sp], #192
  40555c:	ret

0000000000405560 <_start@@Base>:
  405560:	mov	x29, #0x0                   	// #0
  405564:	mov	x30, #0x0                   	// #0
  405568:	mov	x5, x0
  40556c:	ldr	x1, [sp]
  405570:	add	x2, sp, #0x8
  405574:	mov	x6, sp
  405578:	movz	x0, #0x0, lsl #48
  40557c:	movk	x0, #0x0, lsl #32
  405580:	movk	x0, #0x40, lsl #16
  405584:	movk	x0, #0x5190
  405588:	movz	x3, #0x0, lsl #48
  40558c:	movk	x3, #0x0, lsl #32
  405590:	movk	x3, #0x40, lsl #16
  405594:	movk	x3, #0xbd00
  405598:	movz	x4, #0x0, lsl #48
  40559c:	movk	x4, #0x0, lsl #32
  4055a0:	movk	x4, #0x40, lsl #16
  4055a4:	movk	x4, #0xbd80
  4055a8:	bl	404de0 <__libc_start_main@plt>
  4055ac:	bl	404ee0 <abort@plt>
  4055b0:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  4055b4:	ldr	x0, [x0, #4040]
  4055b8:	cbz	x0, 4055c0 <_start@@Base+0x60>
  4055bc:	b	404ed0 <__gmon_start__@plt>
  4055c0:	ret
  4055c4:	adrp	x0, 420000 <memcpy@GLIBC_2.17>
  4055c8:	add	x1, x0, #0x2e0
  4055cc:	adrp	x0, 420000 <memcpy@GLIBC_2.17>
  4055d0:	add	x0, x0, #0x2e0
  4055d4:	cmp	x1, x0
  4055d8:	b.eq	405604 <_start@@Base+0xa4>  // b.none
  4055dc:	sub	sp, sp, #0x10
  4055e0:	adrp	x1, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  4055e4:	ldr	x1, [x1, #3488]
  4055e8:	str	x1, [sp, #8]
  4055ec:	cbz	x1, 4055fc <_start@@Base+0x9c>
  4055f0:	mov	x16, x1
  4055f4:	add	sp, sp, #0x10
  4055f8:	br	x16
  4055fc:	add	sp, sp, #0x10
  405600:	ret
  405604:	ret
  405608:	adrp	x0, 420000 <memcpy@GLIBC_2.17>
  40560c:	add	x1, x0, #0x2e0
  405610:	adrp	x0, 420000 <memcpy@GLIBC_2.17>
  405614:	add	x0, x0, #0x2e0
  405618:	sub	x1, x1, x0
  40561c:	mov	x2, #0x2                   	// #2
  405620:	asr	x1, x1, #3
  405624:	sdiv	x1, x1, x2
  405628:	cbz	x1, 405654 <_start@@Base+0xf4>
  40562c:	sub	sp, sp, #0x10
  405630:	adrp	x2, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  405634:	ldr	x2, [x2, #3496]
  405638:	str	x2, [sp, #8]
  40563c:	cbz	x2, 40564c <_start@@Base+0xec>
  405640:	mov	x16, x2
  405644:	add	sp, sp, #0x10
  405648:	br	x16
  40564c:	add	sp, sp, #0x10
  405650:	ret
  405654:	ret
  405658:	stp	x29, x30, [sp, #-32]!
  40565c:	mov	x29, sp
  405660:	str	x19, [sp, #16]
  405664:	adrp	x19, 420000 <memcpy@GLIBC_2.17>
  405668:	ldrb	w0, [x19, #744]
  40566c:	cbnz	w0, 40567c <_start@@Base+0x11c>
  405670:	bl	4055c4 <_start@@Base+0x64>
  405674:	mov	w0, #0x1                   	// #1
  405678:	strb	w0, [x19, #744]
  40567c:	ldr	x19, [sp, #16]
  405680:	ldp	x29, x30, [sp], #32
  405684:	ret
  405688:	b	405608 <_start@@Base+0xa8>
  40568c:	stp	x29, x30, [sp, #-16]!
  405690:	adrp	x0, 420000 <memcpy@GLIBC_2.17>
  405694:	mov	x29, sp
  405698:	ldr	x1, [x0, #736]
  40569c:	adrp	x0, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  4056a0:	add	x0, x0, #0xdb0
  4056a4:	bl	404c60 <fputs@plt>
  4056a8:	mov	w0, #0xffffffff            	// #-1
  4056ac:	bl	404c70 <exit@plt>
  4056b0:	stp	x29, x30, [sp, #-176]!
  4056b4:	mov	x1, #0x0                   	// #0
  4056b8:	mov	x29, sp
  4056bc:	str	x19, [sp, #16]
  4056c0:	mov	x19, x0
  4056c4:	mov	x0, #0x18                  	// #24
  4056c8:	str	xzr, [sp, #56]
  4056cc:	movk	x0, #0xf, lsl #32
  4056d0:	str	x0, [sp, #48]
  4056d4:	add	x0, sp, #0x20
  4056d8:	bl	404e20 <gettimeofday@plt>
  4056dc:	ldr	w2, [sp, #48]
  4056e0:	mov	x3, x19
  4056e4:	ldr	x0, [sp, #32]
  4056e8:	add	w2, w2, #0x3
  4056ec:	str	w0, [sp, #64]
  4056f0:	and	x2, x2, #0xfffffffc
  4056f4:	ldr	x0, [sp, #40]
  4056f8:	mov	x1, #0x1                   	// #1
  4056fc:	str	w0, [sp, #68]
  405700:	add	x0, sp, #0x30
  405704:	bl	404fe0 <fwrite@plt>
  405708:	ldr	x19, [sp, #16]
  40570c:	ldp	x29, x30, [sp], #176
  405710:	ret
  405714:	stp	x29, x30, [sp, #-32]!
  405718:	adrp	x0, 420000 <memcpy@GLIBC_2.17>
  40571c:	mov	x29, sp
  405720:	ldr	w0, [x0, #712]
  405724:	stp	x19, x20, [sp, #16]
  405728:	mov	x20, x1
  40572c:	mov	x19, x2
  405730:	cbnz	w0, 40573c <_start@@Base+0x1dc>
  405734:	mov	x0, x2
  405738:	bl	4056b0 <_start@@Base+0x150>
  40573c:	ldr	w2, [x20]
  405740:	mov	x3, x19
  405744:	mov	x1, #0x1                   	// #1
  405748:	mov	x0, x20
  40574c:	add	w2, w2, #0x3
  405750:	and	x2, x2, #0xfffffffc
  405754:	bl	404fe0 <fwrite@plt>
  405758:	mov	x0, x19
  40575c:	bl	405000 <fflush@plt>
  405760:	mov	w0, #0x0                   	// #0
  405764:	ldp	x19, x20, [sp, #16]
  405768:	ldp	x29, x30, [sp], #32
  40576c:	ret
  405770:	mov	x2, x1
  405774:	mov	x1, x0
  405778:	mov	x0, #0x0                   	// #0
  40577c:	b	405714 <_start@@Base+0x1b4>
  405780:	ldrh	w1, [x0, #6]
  405784:	cmp	w1, #0x2
  405788:	b.eq	405798 <_start@@Base+0x238>  // b.none
  40578c:	cmp	w1, #0xa
  405790:	b.eq	4057cc <_start@@Base+0x26c>  // b.none
  405794:	ret
  405798:	ldr	w2, [x0, #8]
  40579c:	ldrh	w1, [x0]
  4057a0:	cbnz	w2, 4057ac <_start@@Base+0x24c>
  4057a4:	orr	w1, w1, #0x6
  4057a8:	b	4057c4 <_start@@Base+0x264>
  4057ac:	and	w2, w2, #0xf0
  4057b0:	orr	w3, w1, #0x2
  4057b4:	cmp	w2, #0xe0
  4057b8:	mov	w4, #0xa                   	// #10
  4057bc:	orr	w1, w1, w4
  4057c0:	csel	w1, w1, w3, eq  // eq = none
  4057c4:	strh	w1, [x0]
  4057c8:	b	405794 <_start@@Base+0x234>
  4057cc:	ldr	w2, [x0, #8]
  4057d0:	ldrh	w1, [x0]
  4057d4:	cbnz	w2, 4057f0 <_start@@Base+0x290>
  4057d8:	ldr	w2, [x0, #12]
  4057dc:	cbnz	w2, 4057f0 <_start@@Base+0x290>
  4057e0:	ldr	w2, [x0, #16]
  4057e4:	cbnz	w2, 4057f0 <_start@@Base+0x290>
  4057e8:	ldr	w2, [x0, #20]
  4057ec:	cbz	w2, 4057a4 <_start@@Base+0x244>
  4057f0:	ldrb	w3, [x0, #8]
  4057f4:	orr	w2, w1, #0x2
  4057f8:	mov	w4, #0xa                   	// #10
  4057fc:	orr	w1, w1, w4
  405800:	cmp	w3, #0xff
  405804:	csel	w1, w1, w2, eq  // eq = none
  405808:	b	4057c4 <_start@@Base+0x264>
  40580c:	stp	x29, x30, [sp, #-32]!
  405810:	mov	x29, sp
  405814:	stp	x19, x20, [sp, #16]
  405818:	mov	x20, x0
  40581c:	ldrb	w19, [x20]
  405820:	cbnz	w19, 405834 <_start@@Base+0x2d4>
  405824:	mov	w0, #0x0                   	// #0
  405828:	ldp	x19, x20, [sp, #16]
  40582c:	ldp	x29, x30, [sp], #32
  405830:	ret
  405834:	cmp	w19, #0x2f
  405838:	b.eq	405858 <_start@@Base+0x2f8>  // b.none
  40583c:	bl	404f20 <__ctype_b_loc@plt>
  405840:	ubfiz	x19, x19, #1, #8
  405844:	ldr	x0, [x0]
  405848:	ldrh	w0, [x0, x19]
  40584c:	tbnz	w0, #13, 405858 <_start@@Base+0x2f8>
  405850:	add	x20, x20, #0x1
  405854:	b	40581c <_start@@Base+0x2bc>
  405858:	mov	w0, #0xffffffff            	// #-1
  40585c:	b	405828 <_start@@Base+0x2c8>

0000000000405860 <read_prop@@Base>:
  405860:	stp	x29, x30, [sp, #-288]!
  405864:	mov	x4, x1
  405868:	mov	x3, x0
  40586c:	mov	x29, sp
  405870:	stp	x19, x20, [sp, #16]
  405874:	add	x19, sp, #0xa0
  405878:	mov	x0, x19
  40587c:	stp	x21, x22, [sp, #32]
  405880:	mov	x22, x1
  405884:	mov	x1, #0x80                  	// #128
  405888:	str	x23, [sp, #48]
  40588c:	mov	x23, x2
  405890:	adrp	x2, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  405894:	add	x2, x2, #0xfa7
  405898:	bl	404d50 <snprintf@plt>
  40589c:	sub	w0, w0, #0x1
  4058a0:	cmp	w0, #0x7e
  4058a4:	b.ls	4058c8 <read_prop@@Base+0x68>  // b.plast
  4058a8:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  4058ac:	ldr	x0, [x0, #3992]
  4058b0:	ldr	x1, [x0]
  4058b4:	adrp	x0, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  4058b8:	add	x0, x0, #0xfbc
  4058bc:	bl	404c60 <fputs@plt>
  4058c0:	mov	w0, #0xffffffff            	// #-1
  4058c4:	b	405a2c <read_prop@@Base+0x1cc>
  4058c8:	mov	x0, x19
  4058cc:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  4058d0:	add	x1, x1, #0x58b
  4058d4:	bl	405020 <fopen64@plt>
  4058d8:	mov	x20, x0
  4058dc:	cbnz	x0, 405914 <read_prop@@Base+0xb4>
  4058e0:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  4058e4:	ldr	x0, [x0, #3992]
  4058e8:	ldr	x20, [x0]
  4058ec:	bl	405110 <__errno_location@plt>
  4058f0:	ldr	w0, [x0]
  4058f4:	bl	404e90 <strerror@plt>
  4058f8:	mov	x3, x0
  4058fc:	mov	x2, x19
  405900:	mov	x0, x20
  405904:	adrp	x1, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  405908:	add	x1, x1, #0xfe3
  40590c:	bl	405150 <fprintf@plt>
  405910:	b	4058c0 <read_prop@@Base+0x60>
  405914:	add	x21, sp, #0x50
  405918:	mov	x2, x0
  40591c:	mov	w1, #0x50                  	// #80
  405920:	mov	x0, x21
  405924:	bl	405160 <fgets@plt>
  405928:	cbnz	x0, 405974 <read_prop@@Base+0x114>
  40592c:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  405930:	mov	x3, x19
  405934:	mov	x2, x22
  405938:	adrp	x1, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  40593c:	ldr	x0, [x0, #3992]
  405940:	add	x1, x1, #0xff1
  405944:	ldr	x0, [x0]
  405948:	bl	405150 <fprintf@plt>
  40594c:	mov	x0, x20
  405950:	bl	404d80 <fclose@plt>
  405954:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  405958:	mov	x2, x19
  40595c:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  405960:	add	x1, x1, #0x55
  405964:	ldr	x0, [x0, #3992]
  405968:	ldr	x0, [x0]
  40596c:	bl	405150 <fprintf@plt>
  405970:	b	4058c0 <read_prop@@Base+0x60>
  405974:	mov	x0, x21
  405978:	mov	w1, #0xa                   	// #10
  40597c:	bl	404fc0 <strchr@plt>
  405980:	cbz	x0, 405988 <read_prop@@Base+0x128>
  405984:	strb	wzr, [x0]
  405988:	mov	x0, x20
  40598c:	bl	404d80 <fclose@plt>
  405990:	add	x1, sp, #0x48
  405994:	mov	x0, x21
  405998:	mov	w2, #0x0                   	// #0
  40599c:	bl	404f30 <strtol@plt>
  4059a0:	mov	x20, x0
  4059a4:	ldr	x0, [sp, #72]
  4059a8:	ldrb	w1, [x0]
  4059ac:	cbnz	w1, 4059b8 <read_prop@@Base+0x158>
  4059b0:	cmp	x0, x21
  4059b4:	b.ne	4059dc <read_prop@@Base+0x17c>  // b.any
  4059b8:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  4059bc:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  4059c0:	mov	x3, x19
  4059c4:	mov	x2, x21
  4059c8:	ldr	x0, [x0, #3992]
  4059cc:	add	x1, x1, #0x20
  4059d0:	ldr	x0, [x0]
  4059d4:	bl	405150 <fprintf@plt>
  4059d8:	b	405954 <read_prop@@Base+0xf4>
  4059dc:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  4059e0:	add	x0, x20, x0
  4059e4:	cmn	x0, #0x3
  4059e8:	b.ls	405a24 <read_prop@@Base+0x1c4>  // b.plast
  4059ec:	bl	405110 <__errno_location@plt>
  4059f0:	ldr	w0, [x0]
  4059f4:	cmp	w0, #0x22
  4059f8:	b.ne	405a24 <read_prop@@Base+0x1c4>  // b.any
  4059fc:	adrp	x1, 41f000 <_IO_stdin_used@@Base+0x13268>
  405a00:	ldr	x1, [x1, #3992]
  405a04:	ldr	x20, [x1]
  405a08:	bl	404e90 <strerror@plt>
  405a0c:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  405a10:	mov	x3, x0
  405a14:	mov	x2, x19
  405a18:	add	x1, x1, #0x47
  405a1c:	mov	x0, x20
  405a20:	b	4059d4 <read_prop@@Base+0x174>
  405a24:	mov	w0, #0x0                   	// #0
  405a28:	str	x20, [x23]
  405a2c:	ldp	x19, x20, [sp, #16]
  405a30:	ldp	x21, x22, [sp, #32]
  405a34:	ldr	x23, [sp, #48]
  405a38:	ldp	x29, x30, [sp], #288
  405a3c:	ret

0000000000405a40 <get_hex@@Base>:
  405a40:	and	w0, w0, #0xff
  405a44:	sub	w1, w0, #0x41
  405a48:	and	w1, w1, #0xff
  405a4c:	cmp	w1, #0x5
  405a50:	b.hi	405a5c <get_hex@@Base+0x1c>  // b.pmore
  405a54:	sub	w0, w0, #0x37
  405a58:	ret
  405a5c:	sub	w1, w0, #0x61
  405a60:	and	w1, w1, #0xff
  405a64:	cmp	w1, #0x5
  405a68:	b.hi	405a74 <get_hex@@Base+0x34>  // b.pmore
  405a6c:	sub	w0, w0, #0x57
  405a70:	b	405a58 <get_hex@@Base+0x18>
  405a74:	sub	w0, w0, #0x30
  405a78:	and	w1, w0, #0xff
  405a7c:	cmp	w1, #0x9
  405a80:	csinv	w0, w0, wzr, ls  // ls = plast
  405a84:	b	405a58 <get_hex@@Base+0x18>

0000000000405a88 <get_integer@@Base>:
  405a88:	cbnz	x1, 405a94 <get_integer@@Base+0xc>
  405a8c:	mov	w0, #0xffffffff            	// #-1
  405a90:	ret
  405a94:	stp	x29, x30, [sp, #-48]!
  405a98:	mov	x29, sp
  405a9c:	stp	x19, x20, [sp, #16]
  405aa0:	mov	x20, x0
  405aa4:	mov	x19, x1
  405aa8:	ldrb	w0, [x1]
  405aac:	cbz	w0, 405b0c <get_integer@@Base+0x84>
  405ab0:	add	x1, sp, #0x28
  405ab4:	mov	x0, x19
  405ab8:	bl	404f30 <strtol@plt>
  405abc:	ldr	x1, [sp, #40]
  405ac0:	cbz	x1, 405b0c <get_integer@@Base+0x84>
  405ac4:	cmp	x1, x19
  405ac8:	b.eq	405b0c <get_integer@@Base+0x84>  // b.none
  405acc:	ldrb	w1, [x1]
  405ad0:	cbnz	w1, 405b0c <get_integer@@Base+0x84>
  405ad4:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
  405ad8:	add	x1, x0, x1
  405adc:	cmn	x1, #0x3
  405ae0:	b.hi	405b0c <get_integer@@Base+0x84>  // b.pmore
  405ae4:	mov	x1, #0x80000000            	// #2147483648
  405ae8:	add	x1, x0, x1
  405aec:	mov	x2, #0xffffffff            	// #4294967295
  405af0:	cmp	x1, x2
  405af4:	b.hi	405b0c <get_integer@@Base+0x84>  // b.pmore
  405af8:	str	w0, [x20]
  405afc:	mov	w0, #0x0                   	// #0
  405b00:	ldp	x19, x20, [sp, #16]
  405b04:	ldp	x29, x30, [sp], #48
  405b08:	ret
  405b0c:	mov	w0, #0xffffffff            	// #-1
  405b10:	b	405b00 <get_integer@@Base+0x78>

0000000000405b14 <mask2bits@@Base>:
  405b14:	rev	w1, w0
  405b18:	neg	w0, w1
  405b1c:	bics	w0, w0, w1
  405b20:	b.eq	405b34 <mask2bits@@Base+0x20>  // b.none
  405b24:	mov	w0, #0xffffffff            	// #-1
  405b28:	b	405b38 <mask2bits@@Base+0x24>
  405b2c:	add	w0, w0, #0x1
  405b30:	lsl	w1, w1, #1
  405b34:	cbnz	w1, 405b2c <mask2bits@@Base+0x18>
  405b38:	ret

0000000000405b3c <get_unsigned@@Base>:
  405b3c:	cbnz	x1, 405b58 <get_unsigned@@Base+0x1c>
  405b40:	mov	w0, #0xffffffff            	// #-1
  405b44:	ret
  405b48:	mov	w0, #0xffffffff            	// #-1
  405b4c:	ldp	x19, x20, [sp, #16]
  405b50:	ldp	x29, x30, [sp], #48
  405b54:	ret
  405b58:	stp	x29, x30, [sp, #-48]!
  405b5c:	mov	x29, sp
  405b60:	stp	x19, x20, [sp, #16]
  405b64:	mov	x20, x0
  405b68:	mov	x19, x1
  405b6c:	ldrb	w0, [x1]
  405b70:	cbz	w0, 405b48 <get_unsigned@@Base+0xc>
  405b74:	add	x1, sp, #0x28
  405b78:	mov	x0, x19
  405b7c:	bl	404c40 <strtoul@plt>
  405b80:	ldr	x1, [sp, #40]
  405b84:	cbz	x1, 405b48 <get_unsigned@@Base+0xc>
  405b88:	cmp	x1, x19
  405b8c:	b.eq	405b48 <get_unsigned@@Base+0xc>  // b.none
  405b90:	ldrb	w1, [x1]
  405b94:	cbnz	w1, 405b48 <get_unsigned@@Base+0xc>
  405b98:	mov	x1, #0xffffffff            	// #4294967295
  405b9c:	cmp	x0, x1
  405ba0:	b.hi	405b48 <get_unsigned@@Base+0xc>  // b.pmore
  405ba4:	str	w0, [x20]
  405ba8:	mov	w0, #0x0                   	// #0
  405bac:	b	405b4c <get_unsigned@@Base+0x10>

0000000000405bb0 <get_time_rtt@@Base>:
  405bb0:	stp	x29, x30, [sp, #-80]!
  405bb4:	mov	x29, sp
  405bb8:	stp	x19, x20, [sp, #16]
  405bbc:	mov	x20, x1
  405bc0:	mov	w1, #0x2e                  	// #46
  405bc4:	stp	x21, x22, [sp, #32]
  405bc8:	mov	x21, x0
  405bcc:	mov	x22, x2
  405bd0:	mov	x0, x20
  405bd4:	str	d8, [sp, #48]
  405bd8:	bl	404fc0 <strchr@plt>
  405bdc:	add	x1, sp, #0x48
  405be0:	cbz	x0, 405cc8 <get_time_rtt@@Base+0x118>
  405be4:	mov	x0, x20
  405be8:	bl	404cb0 <strtod@plt>
  405bec:	fcmpe	d0, #0.0
  405bf0:	fmov	d8, d0
  405bf4:	b.pl	405c10 <get_time_rtt@@Base+0x60>  // b.nfrst
  405bf8:	mov	w0, #0xffffffff            	// #-1
  405bfc:	ldp	x19, x20, [sp, #16]
  405c00:	ldp	x21, x22, [sp, #32]
  405c04:	ldr	d8, [sp, #48]
  405c08:	ldp	x29, x30, [sp], #80
  405c0c:	ret
  405c10:	ldr	x0, [sp, #72]
  405c14:	cbz	x0, 405bf8 <get_time_rtt@@Base+0x48>
  405c18:	cmp	x0, x20
  405c1c:	b.eq	405bf8 <get_time_rtt@@Base+0x48>  // b.none
  405c20:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
  405c24:	fmov	d0, x0
  405c28:	fcmp	d8, d0
  405c2c:	b.ne	405c40 <get_time_rtt@@Base+0x90>  // b.any
  405c30:	bl	405110 <__errno_location@plt>
  405c34:	ldr	w0, [x0]
  405c38:	cmp	w0, #0x22
  405c3c:	b.eq	405bf8 <get_time_rtt@@Base+0x48>  // b.none
  405c40:	ldr	x19, [sp, #72]
  405c44:	cmp	x19, x20
  405c48:	b.eq	405bf8 <get_time_rtt@@Base+0x48>  // b.none
  405c4c:	mov	w0, #0x1                   	// #1
  405c50:	str	w0, [x22]
  405c54:	ldrb	w0, [x19]
  405c58:	cbz	w0, 405cac <get_time_rtt@@Base+0xfc>
  405c5c:	str	wzr, [x22]
  405c60:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  405c64:	mov	x0, x19
  405c68:	add	x1, x1, #0x53
  405c6c:	bl	404e50 <strcasecmp@plt>
  405c70:	cbz	w0, 405c9c <get_time_rtt@@Base+0xec>
  405c74:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  405c78:	mov	x0, x19
  405c7c:	add	x1, x1, #0x6a
  405c80:	bl	404e50 <strcasecmp@plt>
  405c84:	cbz	w0, 405c9c <get_time_rtt@@Base+0xec>
  405c88:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  405c8c:	mov	x0, x19
  405c90:	add	x1, x1, #0x6f
  405c94:	bl	404e50 <strcasecmp@plt>
  405c98:	cbnz	w0, 405d08 <get_time_rtt@@Base+0x158>
  405c9c:	mov	x0, #0x400000000000        	// #70368744177664
  405ca0:	movk	x0, #0x408f, lsl #48
  405ca4:	fmov	d0, x0
  405ca8:	fmul	d8, d8, d0
  405cac:	fcvtzu	w1, d8
  405cb0:	ucvtf	d0, w1
  405cb4:	fcmpe	d0, d8
  405cb8:	b.mi	405d48 <get_time_rtt@@Base+0x198>  // b.first
  405cbc:	mov	w0, #0x0                   	// #0
  405cc0:	str	w1, [x21]
  405cc4:	b	405bfc <get_time_rtt@@Base+0x4c>
  405cc8:	mov	x0, x20
  405ccc:	mov	w2, #0x0                   	// #0
  405cd0:	bl	404c40 <strtoul@plt>
  405cd4:	mov	x19, x0
  405cd8:	ldr	x0, [sp, #72]
  405cdc:	cbz	x0, 405bf8 <get_time_rtt@@Base+0x48>
  405ce0:	cmp	x0, x20
  405ce4:	b.eq	405bf8 <get_time_rtt@@Base+0x48>  // b.none
  405ce8:	cmn	x19, #0x1
  405cec:	b.ne	405d00 <get_time_rtt@@Base+0x150>  // b.any
  405cf0:	bl	405110 <__errno_location@plt>
  405cf4:	ldr	w0, [x0]
  405cf8:	cmp	w0, #0x22
  405cfc:	b.eq	405bf8 <get_time_rtt@@Base+0x48>  // b.none
  405d00:	ucvtf	d8, x19
  405d04:	b	405c40 <get_time_rtt@@Base+0x90>
  405d08:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  405d0c:	mov	x0, x19
  405d10:	add	x1, x1, #0x3e4
  405d14:	bl	404e50 <strcasecmp@plt>
  405d18:	cbz	w0, 405cac <get_time_rtt@@Base+0xfc>
  405d1c:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  405d20:	mov	x0, x19
  405d24:	add	x1, x1, #0x69
  405d28:	bl	404e50 <strcasecmp@plt>
  405d2c:	cbz	w0, 405cac <get_time_rtt@@Base+0xfc>
  405d30:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  405d34:	mov	x0, x19
  405d38:	add	x1, x1, #0x6e
  405d3c:	bl	404e50 <strcasecmp@plt>
  405d40:	cbz	w0, 405cac <get_time_rtt@@Base+0xfc>
  405d44:	b	405bf8 <get_time_rtt@@Base+0x48>
  405d48:	add	w1, w1, #0x1
  405d4c:	b	405cbc <get_time_rtt@@Base+0x10c>

0000000000405d50 <get_u64@@Base>:
  405d50:	cbnz	x1, 405d70 <get_u64@@Base+0x20>
  405d54:	mov	w0, #0xffffffff            	// #-1
  405d58:	ret
  405d5c:	mov	w0, #0xffffffff            	// #-1
  405d60:	ldp	x19, x20, [sp, #16]
  405d64:	ldr	x21, [sp, #32]
  405d68:	ldp	x29, x30, [sp], #64
  405d6c:	ret
  405d70:	stp	x29, x30, [sp, #-64]!
  405d74:	mov	x29, sp
  405d78:	stp	x19, x20, [sp, #16]
  405d7c:	mov	x19, x1
  405d80:	str	x21, [sp, #32]
  405d84:	mov	x21, x0
  405d88:	ldrb	w0, [x1]
  405d8c:	cbz	w0, 405d5c <get_u64@@Base+0xc>
  405d90:	add	x1, sp, #0x38
  405d94:	mov	x0, x19
  405d98:	bl	404fd0 <strtoull@plt>
  405d9c:	mov	x20, x0
  405da0:	ldr	x0, [sp, #56]
  405da4:	cbz	x0, 405d5c <get_u64@@Base+0xc>
  405da8:	cmp	x0, x19
  405dac:	b.eq	405d5c <get_u64@@Base+0xc>  // b.none
  405db0:	ldrb	w0, [x0]
  405db4:	cbnz	w0, 405d5c <get_u64@@Base+0xc>
  405db8:	cmn	x20, #0x1
  405dbc:	b.ne	405dd0 <get_u64@@Base+0x80>  // b.any
  405dc0:	bl	405110 <__errno_location@plt>
  405dc4:	ldr	w0, [x0]
  405dc8:	cmp	w0, #0x22
  405dcc:	b.eq	405d5c <get_u64@@Base+0xc>  // b.none
  405dd0:	mov	w0, #0x0                   	// #0
  405dd4:	str	x20, [x21]
  405dd8:	b	405d60 <get_u64@@Base+0x10>

0000000000405ddc <get_u32@@Base>:
  405ddc:	b	405b3c <get_unsigned@@Base>

0000000000405de0 <get_u16@@Base>:
  405de0:	cbnz	x1, 405dfc <get_u16@@Base+0x1c>
  405de4:	mov	w0, #0xffffffff            	// #-1
  405de8:	ret
  405dec:	mov	w0, #0xffffffff            	// #-1
  405df0:	ldp	x19, x20, [sp, #16]
  405df4:	ldp	x29, x30, [sp], #48
  405df8:	ret
  405dfc:	stp	x29, x30, [sp, #-48]!
  405e00:	mov	x29, sp
  405e04:	stp	x19, x20, [sp, #16]
  405e08:	mov	x20, x0
  405e0c:	mov	x19, x1
  405e10:	ldrb	w0, [x1]
  405e14:	cbz	w0, 405dec <get_u16@@Base+0xc>
  405e18:	add	x1, sp, #0x28
  405e1c:	mov	x0, x19
  405e20:	bl	404c40 <strtoul@plt>
  405e24:	ldr	x1, [sp, #40]
  405e28:	cbz	x1, 405dec <get_u16@@Base+0xc>
  405e2c:	cmp	x1, x19
  405e30:	b.eq	405dec <get_u16@@Base+0xc>  // b.none
  405e34:	ldrb	w1, [x1]
  405e38:	cbnz	w1, 405dec <get_u16@@Base+0xc>
  405e3c:	mov	x1, #0xffff                	// #65535
  405e40:	cmp	x0, x1
  405e44:	b.hi	405dec <get_u16@@Base+0xc>  // b.pmore
  405e48:	strh	w0, [x20]
  405e4c:	mov	w0, #0x0                   	// #0
  405e50:	b	405df0 <get_u16@@Base+0x10>

0000000000405e54 <get_u8@@Base>:
  405e54:	cbnz	x1, 405e70 <get_u8@@Base+0x1c>
  405e58:	mov	w0, #0xffffffff            	// #-1
  405e5c:	ret
  405e60:	mov	w0, #0xffffffff            	// #-1
  405e64:	ldp	x19, x20, [sp, #16]
  405e68:	ldp	x29, x30, [sp], #48
  405e6c:	ret
  405e70:	stp	x29, x30, [sp, #-48]!
  405e74:	mov	x29, sp
  405e78:	stp	x19, x20, [sp, #16]
  405e7c:	mov	x20, x0
  405e80:	mov	x19, x1
  405e84:	ldrb	w0, [x1]
  405e88:	cbz	w0, 405e60 <get_u8@@Base+0xc>
  405e8c:	add	x1, sp, #0x28
  405e90:	mov	x0, x19
  405e94:	bl	404c40 <strtoul@plt>
  405e98:	ldr	x1, [sp, #40]
  405e9c:	cbz	x1, 405e60 <get_u8@@Base+0xc>
  405ea0:	cmp	x1, x19
  405ea4:	b.eq	405e60 <get_u8@@Base+0xc>  // b.none
  405ea8:	ldrb	w1, [x1]
  405eac:	cbnz	w1, 405e60 <get_u8@@Base+0xc>
  405eb0:	cmp	x0, #0xff
  405eb4:	b.hi	405e60 <get_u8@@Base+0xc>  // b.pmore
  405eb8:	strb	w0, [x20]
  405ebc:	mov	w0, #0x0                   	// #0
  405ec0:	b	405e64 <get_u8@@Base+0x10>

0000000000405ec4 <get_s64@@Base>:
  405ec4:	stp	x29, x30, [sp, #-64]!
  405ec8:	mov	x29, sp
  405ecc:	stp	x19, x20, [sp, #16]
  405ed0:	mov	x19, x1
  405ed4:	stp	x21, x22, [sp, #32]
  405ed8:	mov	x21, x0
  405edc:	mov	w22, w2
  405ee0:	bl	405110 <__errno_location@plt>
  405ee4:	str	wzr, [x0]
  405ee8:	cbnz	x19, 405f00 <get_s64@@Base+0x3c>
  405eec:	mov	w0, #0xffffffff            	// #-1
  405ef0:	ldp	x19, x20, [sp, #16]
  405ef4:	ldp	x21, x22, [sp, #32]
  405ef8:	ldp	x29, x30, [sp], #64
  405efc:	ret
  405f00:	mov	x20, x0
  405f04:	ldrb	w0, [x19]
  405f08:	cbz	w0, 405eec <get_s64@@Base+0x28>
  405f0c:	add	x1, sp, #0x38
  405f10:	mov	w2, w22
  405f14:	mov	x0, x19
  405f18:	bl	404ca0 <strtoll@plt>
  405f1c:	ldr	x1, [sp, #56]
  405f20:	cbz	x1, 405eec <get_s64@@Base+0x28>
  405f24:	cmp	x1, x19
  405f28:	b.eq	405eec <get_s64@@Base+0x28>  // b.none
  405f2c:	ldrb	w1, [x1]
  405f30:	cbnz	w1, 405eec <get_s64@@Base+0x28>
  405f34:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
  405f38:	add	x1, x0, x1
  405f3c:	cmn	x1, #0x3
  405f40:	b.ls	405f50 <get_s64@@Base+0x8c>  // b.plast
  405f44:	ldr	w1, [x20]
  405f48:	cmp	w1, #0x22
  405f4c:	b.eq	405eec <get_s64@@Base+0x28>  // b.none
  405f50:	str	x0, [x21]
  405f54:	mov	w0, #0x0                   	// #0
  405f58:	b	405ef0 <get_s64@@Base+0x2c>

0000000000405f5c <get_s32@@Base>:
  405f5c:	stp	x29, x30, [sp, #-64]!
  405f60:	mov	x29, sp
  405f64:	stp	x19, x20, [sp, #16]
  405f68:	mov	x20, x0
  405f6c:	mov	x19, x1
  405f70:	str	x21, [sp, #32]
  405f74:	mov	w21, w2
  405f78:	bl	405110 <__errno_location@plt>
  405f7c:	str	wzr, [x0]
  405f80:	cbnz	x19, 405f8c <get_s32@@Base+0x30>
  405f84:	mov	w0, #0xffffffff            	// #-1
  405f88:	b	405fe8 <get_s32@@Base+0x8c>
  405f8c:	ldrb	w0, [x19]
  405f90:	cbz	w0, 405f84 <get_s32@@Base+0x28>
  405f94:	add	x1, sp, #0x38
  405f98:	mov	w2, w21
  405f9c:	mov	x0, x19
  405fa0:	bl	404f30 <strtol@plt>
  405fa4:	ldr	x1, [sp, #56]
  405fa8:	cbz	x1, 405f84 <get_s32@@Base+0x28>
  405fac:	cmp	x1, x19
  405fb0:	b.eq	405f84 <get_s32@@Base+0x28>  // b.none
  405fb4:	ldrb	w1, [x1]
  405fb8:	cbnz	w1, 405f84 <get_s32@@Base+0x28>
  405fbc:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
  405fc0:	add	x1, x0, x1
  405fc4:	cmn	x1, #0x3
  405fc8:	b.hi	405f84 <get_s32@@Base+0x28>  // b.pmore
  405fcc:	mov	x1, #0x80000000            	// #2147483648
  405fd0:	add	x1, x0, x1
  405fd4:	mov	x2, #0xffffffff            	// #4294967295
  405fd8:	cmp	x1, x2
  405fdc:	b.hi	405f84 <get_s32@@Base+0x28>  // b.pmore
  405fe0:	str	w0, [x20]
  405fe4:	mov	w0, #0x0                   	// #0
  405fe8:	ldp	x19, x20, [sp, #16]
  405fec:	ldr	x21, [sp, #32]
  405ff0:	ldp	x29, x30, [sp], #64
  405ff4:	ret

0000000000405ff8 <get_be64@@Base>:
  405ff8:	stp	x29, x30, [sp, #-48]!
  405ffc:	mov	x29, sp
  406000:	str	x19, [sp, #16]
  406004:	mov	x19, x0
  406008:	add	x0, sp, #0x28
  40600c:	bl	405d50 <get_u64@@Base>
  406010:	cbnz	w0, 40602c <get_be64@@Base+0x34>
  406014:	ldr	x1, [sp, #40]
  406018:	lsr	x2, x1, #32
  40601c:	rev	w1, w1
  406020:	rev	w2, w2
  406024:	orr	x1, x2, x1, lsl #32
  406028:	str	x1, [x19]
  40602c:	ldr	x19, [sp, #16]
  406030:	ldp	x29, x30, [sp], #48
  406034:	ret

0000000000406038 <get_be32@@Base>:
  406038:	stp	x29, x30, [sp, #-48]!
  40603c:	mov	x29, sp
  406040:	str	x19, [sp, #16]
  406044:	mov	x19, x0
  406048:	add	x0, sp, #0x2c
  40604c:	bl	405ddc <get_u32@@Base>
  406050:	cbnz	w0, 406060 <get_be32@@Base+0x28>
  406054:	ldr	w1, [sp, #44]
  406058:	rev	w1, w1
  40605c:	str	w1, [x19]
  406060:	ldr	x19, [sp, #16]
  406064:	ldp	x29, x30, [sp], #48
  406068:	ret

000000000040606c <get_be16@@Base>:
  40606c:	stp	x29, x30, [sp, #-48]!
  406070:	mov	x29, sp
  406074:	str	x19, [sp, #16]
  406078:	mov	x19, x0
  40607c:	add	x0, sp, #0x2e
  406080:	bl	405de0 <get_u16@@Base>
  406084:	cbnz	w0, 406094 <get_be16@@Base+0x28>
  406088:	ldrh	w1, [sp, #46]
  40608c:	rev16	w1, w1
  406090:	strh	w1, [x19]
  406094:	ldr	x19, [sp, #16]
  406098:	ldp	x29, x30, [sp], #48
  40609c:	ret

00000000004060a0 <get_addr64@@Base>:
  4060a0:	stp	x29, x30, [sp, #-80]!
  4060a4:	mov	x29, sp
  4060a8:	stp	x19, x20, [sp, #16]
  4060ac:	mov	x19, x1
  4060b0:	mov	x20, #0x0                   	// #0
  4060b4:	stp	x21, x22, [sp, #32]
  4060b8:	mov	x21, x0
  4060bc:	mov	x22, #0xffff                	// #65535
  4060c0:	stp	x23, x24, [sp, #48]
  4060c4:	add	x23, sp, #0x48
  4060c8:	add	x24, sp, #0x40
  4060cc:	mov	x1, x23
  4060d0:	mov	x0, x19
  4060d4:	mov	w2, #0x10                  	// #16
  4060d8:	bl	404c40 <strtoul@plt>
  4060dc:	cmp	x0, x22
  4060e0:	b.ls	4060fc <get_addr64@@Base+0x5c>  // b.plast
  4060e4:	mov	w0, #0xffffffff            	// #-1
  4060e8:	ldp	x19, x20, [sp, #16]
  4060ec:	ldp	x21, x22, [sp, #32]
  4060f0:	ldp	x23, x24, [sp, #48]
  4060f4:	ldp	x29, x30, [sp], #80
  4060f8:	ret
  4060fc:	ldr	x3, [sp, #72]
  406100:	cmp	x3, x19
  406104:	b.eq	4060e4 <get_addr64@@Base+0x44>  // b.none
  406108:	rev16	w2, w0
  40610c:	ldrb	w0, [x3]
  406110:	strh	w2, [x24, x20, lsl #1]
  406114:	cbz	w0, 406134 <get_addr64@@Base+0x94>
  406118:	cmp	x20, #0x3
  40611c:	b.eq	4060e4 <get_addr64@@Base+0x44>  // b.none
  406120:	add	x20, x20, #0x1
  406124:	cmp	w0, #0x3a
  406128:	b.ne	4060e4 <get_addr64@@Base+0x44>  // b.any
  40612c:	add	x19, x3, #0x1
  406130:	b	4060cc <get_addr64@@Base+0x2c>
  406134:	ldr	x0, [sp, #64]
  406138:	str	x0, [x21]
  40613c:	mov	w0, #0x1                   	// #1
  406140:	b	4060e8 <get_addr64@@Base+0x48>

0000000000406144 <af_bit_len@@Base>:
  406144:	sub	w0, w0, #0x2
  406148:	cmp	w0, #0x1a
  40614c:	b.hi	406160 <af_bit_len@@Base+0x1c>  // b.pmore
  406150:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  406154:	add	x1, x1, #0x412
  406158:	ldrb	w0, [x1, w0, uxtw]
  40615c:	ret
  406160:	mov	w0, #0x0                   	// #0
  406164:	b	40615c <af_bit_len@@Base+0x18>

0000000000406168 <get_addr_1@@Base>:
  406168:	stp	x29, x30, [sp, #-80]!
  40616c:	mov	x29, sp
  406170:	stp	x19, x20, [sp, #16]
  406174:	mov	w20, w2
  406178:	mov	x2, #0x108                 	// #264
  40617c:	mov	x19, x0
  406180:	stp	x21, x22, [sp, #32]
  406184:	mov	x21, x1
  406188:	mov	w1, #0x0                   	// #0
  40618c:	str	x23, [sp, #48]
  406190:	bl	404e10 <memset@plt>
  406194:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  406198:	mov	x0, x21
  40619c:	add	x1, x1, #0x74
  4061a0:	bl	404f10 <strcmp@plt>
  4061a4:	cbnz	w0, 406208 <get_addr_1@@Base+0xa0>
  4061a8:	and	w0, w20, #0xffffffef
  4061ac:	cmp	w0, #0xc
  4061b0:	b.ne	4061cc <get_addr_1@@Base+0x64>  // b.any
  4061b4:	mov	w0, #0xffffffff            	// #-1
  4061b8:	ldp	x19, x20, [sp, #16]
  4061bc:	ldp	x21, x22, [sp, #32]
  4061c0:	ldr	x23, [sp, #48]
  4061c4:	ldp	x29, x30, [sp], #80
  4061c8:	ret
  4061cc:	strh	w20, [x19, #6]
  4061d0:	and	w0, w20, #0xffff
  4061d4:	bl	406144 <af_bit_len@@Base>
  4061d8:	mov	w1, #0x8                   	// #8
  4061dc:	sdiv	w0, w0, w1
  4061e0:	strh	w0, [x19, #2]
  4061e4:	mov	w0, #0xfffffffe            	// #-2
  4061e8:	strh	w0, [x19, #4]
  4061ec:	ldrh	w0, [x19]
  4061f0:	orr	w0, w0, #0x1
  4061f4:	strh	w0, [x19]
  4061f8:	mov	x0, x19
  4061fc:	bl	405780 <_start@@Base+0x220>
  406200:	mov	w0, #0x0                   	// #0
  406204:	b	4061b8 <get_addr_1@@Base+0x50>
  406208:	adrp	x1, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  40620c:	mov	x0, x21
  406210:	add	x1, x1, #0xf01
  406214:	bl	404f10 <strcmp@plt>
  406218:	cbz	w0, 406230 <get_addr_1@@Base+0xc8>
  40621c:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  406220:	mov	x0, x21
  406224:	add	x1, x1, #0x7c
  406228:	bl	404f10 <strcmp@plt>
  40622c:	cbnz	w0, 40624c <get_addr_1@@Base+0xe4>
  406230:	and	w0, w20, #0xffffffef
  406234:	cmp	w0, #0xc
  406238:	b.eq	4061b4 <get_addr_1@@Base+0x4c>  // b.none
  40623c:	mov	w0, #0xfffffffe            	// #-2
  406240:	strh	w20, [x19, #6]
  406244:	strh	w0, [x19, #4]
  406248:	b	4061f8 <get_addr_1@@Base+0x90>
  40624c:	cmp	w20, #0x11
  406250:	b.ne	40627c <get_addr_1@@Base+0x114>  // b.any
  406254:	mov	x2, x21
  406258:	add	x0, x19, #0x8
  40625c:	mov	w1, #0x100                 	// #256
  406260:	bl	408818 <ll_addr_a2n@@Base>
  406264:	tbnz	w0, #31, 4061b4 <get_addr_1@@Base+0x4c>
  406268:	and	w0, w0, #0xffff
  40626c:	strh	w0, [x19, #2]
  406270:	strh	w20, [x19, #6]
  406274:	ubfiz	w0, w0, #3, #13
  406278:	b	406244 <get_addr_1@@Base+0xdc>
  40627c:	mov	x0, x21
  406280:	mov	w1, #0x3a                  	// #58
  406284:	bl	404fc0 <strchr@plt>
  406288:	cbz	x0, 4062c4 <get_addr_1@@Base+0x15c>
  40628c:	mov	w0, #0xa                   	// #10
  406290:	strh	w0, [x19, #6]
  406294:	cmp	w20, #0x0
  406298:	ccmp	w20, #0xa, #0x4, ne  // ne = any
  40629c:	b.ne	4061b4 <get_addr_1@@Base+0x4c>  // b.any
  4062a0:	add	x2, x19, #0x8
  4062a4:	mov	x1, x21
  4062a8:	mov	w0, #0xa                   	// #10
  4062ac:	bl	404f90 <inet_pton@plt>
  4062b0:	cmp	w0, #0x0
  4062b4:	b.le	4061b4 <get_addr_1@@Base+0x4c>
  4062b8:	mov	w0, #0xffff0010            	// #-65520
  4062bc:	stur	w0, [x19, #2]
  4062c0:	b	4061f8 <get_addr_1@@Base+0x90>
  4062c4:	cmp	w20, #0x1c
  4062c8:	b.ne	406328 <get_addr_1@@Base+0x1c0>  // b.any
  4062cc:	strh	w20, [x19, #6]
  4062d0:	add	x2, x19, #0x8
  4062d4:	mov	x1, x21
  4062d8:	mov	w0, w20
  4062dc:	mov	x3, #0x100                 	// #256
  4062e0:	bl	4095cc <mpls_pton@@Base>
  4062e4:	cmp	w0, #0x0
  4062e8:	b.le	4061b4 <get_addr_1@@Base+0x4c>
  4062ec:	mov	w0, #0x4                   	// #4
  4062f0:	add	x2, x19, #0x4
  4062f4:	movk	w0, #0x14, lsl #16
  4062f8:	stur	w0, [x19, #2]
  4062fc:	mov	x0, #0x1                   	// #1
  406300:	ldr	w1, [x2, x0, lsl #2]
  406304:	rev	w1, w1
  406308:	tbz	w1, #8, 406318 <get_addr_1@@Base+0x1b0>
  40630c:	ubfiz	w0, w0, #2, #14
  406310:	strh	w0, [x19, #2]
  406314:	b	4061f8 <get_addr_1@@Base+0x90>
  406318:	add	x0, x0, #0x1
  40631c:	cmp	x0, #0x41
  406320:	b.ne	406300 <get_addr_1@@Base+0x198>  // b.any
  406324:	b	4061f8 <get_addr_1@@Base+0x90>
  406328:	mov	w0, #0x2                   	// #2
  40632c:	strh	w0, [x19, #6]
  406330:	tst	w20, #0xfffffffd
  406334:	b.ne	4061b4 <get_addr_1@@Base+0x4c>  // b.any
  406338:	add	x20, x19, #0x8
  40633c:	add	x23, x19, #0xb
  406340:	add	x22, sp, #0x48
  406344:	mov	x1, x22
  406348:	mov	x0, x21
  40634c:	mov	w2, #0x0                   	// #0
  406350:	bl	404c40 <strtoul@plt>
  406354:	cmp	x0, #0xff
  406358:	b.hi	4061b4 <get_addr_1@@Base+0x4c>  // b.pmore
  40635c:	ldr	x2, [sp, #72]
  406360:	cmp	x2, x21
  406364:	b.eq	4061b4 <get_addr_1@@Base+0x4c>  // b.none
  406368:	strb	w0, [x20]
  40636c:	ldrb	w0, [x2]
  406370:	cbz	w0, 406390 <get_addr_1@@Base+0x228>
  406374:	cmp	x20, x23
  406378:	b.eq	4061b4 <get_addr_1@@Base+0x4c>  // b.none
  40637c:	add	x20, x20, #0x1
  406380:	cmp	w0, #0x2e
  406384:	b.ne	4061b4 <get_addr_1@@Base+0x4c>  // b.any
  406388:	add	x21, x2, #0x1
  40638c:	b	406344 <get_addr_1@@Base+0x1dc>
  406390:	mov	w0, #0xffff0004            	// #-65532
  406394:	b	4062bc <get_addr_1@@Base+0x154>
  406398:	stp	x29, x30, [sp, #-320]!
  40639c:	mov	w2, #0x0                   	// #0
  4063a0:	mov	x29, sp
  4063a4:	stp	x19, x20, [sp, #16]
  4063a8:	mov	x20, x0
  4063ac:	str	x21, [sp, #32]
  4063b0:	mov	x21, x1
  4063b4:	bl	405b3c <get_unsigned@@Base>
  4063b8:	mov	w19, w0
  4063bc:	cbz	w0, 4063dc <get_addr_1@@Base+0x274>
  4063c0:	mov	x1, x21
  4063c4:	add	x0, sp, #0x38
  4063c8:	mov	w2, #0x2                   	// #2
  4063cc:	bl	406168 <get_addr_1@@Base>
  4063d0:	mov	w19, w0
  4063d4:	cbz	w0, 4063f0 <get_addr_1@@Base+0x288>
  4063d8:	mov	w19, #0xffffffff            	// #-1
  4063dc:	mov	w0, w19
  4063e0:	ldp	x19, x20, [sp, #16]
  4063e4:	ldr	x21, [sp, #32]
  4063e8:	ldp	x29, x30, [sp], #320
  4063ec:	ret
  4063f0:	ldrh	w0, [sp, #62]
  4063f4:	cmp	w0, #0x2
  4063f8:	b.ne	4063d8 <get_addr_1@@Base+0x270>  // b.any
  4063fc:	ldr	w0, [sp, #64]
  406400:	bl	405b14 <mask2bits@@Base>
  406404:	tbnz	w0, #31, 4063d8 <get_addr_1@@Base+0x270>
  406408:	str	w0, [x20]
  40640c:	b	4063dc <get_addr_1@@Base+0x274>

0000000000406410 <get_prefix_1@@Base>:
  406410:	stp	x29, x30, [sp, #-64]!
  406414:	mov	x29, sp
  406418:	stp	x21, x22, [sp, #32]
  40641c:	mov	x21, x1
  406420:	mov	w22, w2
  406424:	mov	w1, #0x2f                  	// #47
  406428:	stp	x19, x20, [sp, #16]
  40642c:	mov	x19, x0
  406430:	mov	x0, x21
  406434:	bl	404fc0 <strchr@plt>
  406438:	mov	x20, x0
  40643c:	cbz	x0, 406444 <get_prefix_1@@Base+0x34>
  406440:	strb	wzr, [x0]
  406444:	mov	w2, w22
  406448:	mov	x1, x21
  40644c:	mov	x0, x19
  406450:	bl	406168 <get_addr_1@@Base>
  406454:	mov	w22, w0
  406458:	cbz	x20, 406464 <get_prefix_1@@Base+0x54>
  40645c:	mov	w0, #0x2f                  	// #47
  406460:	strb	w0, [x20]
  406464:	cbnz	w22, 4064c0 <get_prefix_1@@Base+0xb0>
  406468:	ldrh	w0, [x19, #6]
  40646c:	bl	406144 <af_bit_len@@Base>
  406470:	mov	w21, w0
  406474:	ldrsh	w1, [x19, #4]
  406478:	cbz	x20, 4064d4 <get_prefix_1@@Base+0xc4>
  40647c:	cmn	w1, #0x2
  406480:	b.eq	4064bc <get_prefix_1@@Base+0xac>  // b.none
  406484:	add	x1, x20, #0x1
  406488:	add	x0, sp, #0x3c
  40648c:	bl	406398 <get_addr_1@@Base+0x230>
  406490:	cbnz	w0, 4064bc <get_prefix_1@@Base+0xac>
  406494:	ldr	w0, [sp, #60]
  406498:	cmp	w0, w21
  40649c:	b.hi	4064bc <get_prefix_1@@Base+0xac>  // b.pmore
  4064a0:	mov	w21, w0
  4064a4:	mov	w0, #0x1                   	// #1
  4064a8:	ldrh	w1, [x19]
  4064ac:	strh	w21, [x19, #4]
  4064b0:	orr	w0, w0, w1
  4064b4:	strh	w0, [x19]
  4064b8:	b	4064c0 <get_prefix_1@@Base+0xb0>
  4064bc:	mov	w22, #0xffffffff            	// #-1
  4064c0:	mov	w0, w22
  4064c4:	ldp	x19, x20, [sp, #16]
  4064c8:	ldp	x21, x22, [sp, #32]
  4064cc:	ldp	x29, x30, [sp], #64
  4064d0:	ret
  4064d4:	cmn	w1, #0x2
  4064d8:	mov	w0, #0x0                   	// #0
  4064dc:	csel	w21, w21, wzr, ne  // ne = any
  4064e0:	b	4064a8 <get_prefix_1@@Base+0x98>

00000000004064e4 <get_addr_rta@@Base>:
  4064e4:	ldrh	w3, [x1]
  4064e8:	sub	w3, w3, #0x4
  4064ec:	cmp	w3, #0xa
  4064f0:	b.eq	406594 <get_addr_rta@@Base+0xb0>  // b.none
  4064f4:	b.hi	406510 <get_addr_rta@@Base+0x2c>  // b.pmore
  4064f8:	cmp	w3, #0x2
  4064fc:	b.eq	40657c <get_addr_rta@@Base+0x98>  // b.none
  406500:	cmp	w3, #0x4
  406504:	b.eq	406534 <get_addr_rta@@Base+0x50>  // b.none
  406508:	mov	w0, #0xffffffff            	// #-1
  40650c:	ret
  406510:	cmp	w3, #0x10
  406514:	b.ne	406508 <get_addr_rta@@Base+0x24>  // b.any
  406518:	add	x1, x1, #0x4
  40651c:	mov	w4, #0xa                   	// #10
  406520:	strh	w3, [x0, #2]
  406524:	strh	w4, [x0, #6]
  406528:	ldp	x4, x5, [x1]
  40652c:	stp	x4, x5, [x0, #8]
  406530:	b	406548 <get_addr_rta@@Base+0x64>
  406534:	mov	w4, #0x2                   	// #2
  406538:	strh	w3, [x0, #2]
  40653c:	strh	w4, [x0, #6]
  406540:	ldr	w1, [x1, #4]
  406544:	str	w1, [x0, #8]
  406548:	cbz	w2, 406558 <get_addr_rta@@Base+0x74>
  40654c:	ldrh	w1, [x0, #6]
  406550:	cmp	w1, w2
  406554:	b.ne	4065b4 <get_addr_rta@@Base+0xd0>  // b.any
  406558:	stp	x29, x30, [sp, #-16]!
  40655c:	mov	w1, #0xffffffff            	// #-1
  406560:	mov	x29, sp
  406564:	strh	wzr, [x0]
  406568:	strh	w1, [x0, #4]
  40656c:	bl	405780 <_start@@Base+0x220>
  406570:	mov	w0, #0x0                   	// #0
  406574:	ldp	x29, x30, [sp], #16
  406578:	ret
  40657c:	mov	w4, #0xc                   	// #12
  406580:	strh	w3, [x0, #2]
  406584:	strh	w4, [x0, #6]
  406588:	ldrh	w1, [x1, #4]
  40658c:	strh	w1, [x0, #8]
  406590:	b	406548 <get_addr_rta@@Base+0x64>
  406594:	mov	w4, #0x4                   	// #4
  406598:	strh	w3, [x0, #2]
  40659c:	strh	w4, [x0, #6]
  4065a0:	ldur	x3, [x1, #4]
  4065a4:	str	x3, [x0, #8]
  4065a8:	ldrh	w1, [x1, #12]
  4065ac:	strh	w1, [x0, #16]
  4065b0:	b	406548 <get_addr_rta@@Base+0x64>
  4065b4:	mov	w0, #0xfffffffe            	// #-2
  4065b8:	ret

00000000004065bc <get_addr32@@Base>:
  4065bc:	stp	x29, x30, [sp, #-304]!
  4065c0:	mov	x1, x0
  4065c4:	mov	w2, #0x2                   	// #2
  4065c8:	mov	x29, sp
  4065cc:	str	x19, [sp, #16]
  4065d0:	mov	x19, x0
  4065d4:	add	x0, sp, #0x28
  4065d8:	bl	406168 <get_addr_1@@Base>
  4065dc:	cbz	w0, 406604 <get_addr32@@Base+0x48>
  4065e0:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  4065e4:	mov	x2, x19
  4065e8:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  4065ec:	add	x1, x1, #0x80
  4065f0:	ldr	x0, [x0, #3992]
  4065f4:	ldr	x0, [x0]
  4065f8:	bl	405150 <fprintf@plt>
  4065fc:	mov	w0, #0x1                   	// #1
  406600:	bl	404c70 <exit@plt>
  406604:	ldr	w0, [sp, #48]
  406608:	ldr	x19, [sp, #16]
  40660c:	ldp	x29, x30, [sp], #304
  406610:	ret

0000000000406614 <incomplete_command@@Base>:
  406614:	stp	x29, x30, [sp, #-16]!
  406618:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  40661c:	mov	x29, sp
  406620:	ldr	x0, [x0, #3992]
  406624:	ldr	x1, [x0]
  406628:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  40662c:	add	x0, x0, #0xb3
  406630:	bl	404c60 <fputs@plt>
  406634:	mov	w0, #0xffffffff            	// #-1
  406638:	bl	404c70 <exit@plt>

000000000040663c <missarg@@Base>:
  40663c:	stp	x29, x30, [sp, #-16]!
  406640:	mov	x2, x0
  406644:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  406648:	mov	x29, sp
  40664c:	ldr	x0, [x0, #3992]
  406650:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  406654:	add	x1, x1, #0xe4
  406658:	ldr	x0, [x0]
  40665c:	bl	405150 <fprintf@plt>
  406660:	mov	w0, #0xffffffff            	// #-1
  406664:	bl	404c70 <exit@plt>

0000000000406668 <invarg@@Base>:
  406668:	stp	x29, x30, [sp, #-16]!
  40666c:	mov	x3, x0
  406670:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  406674:	mov	x29, sp
  406678:	ldr	x0, [x0, #3992]
  40667c:	mov	x2, x1
  406680:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  406684:	add	x1, x1, #0x106
  406688:	ldr	x0, [x0]
  40668c:	bl	405150 <fprintf@plt>
  406690:	mov	w0, #0xffffffff            	// #-1
  406694:	bl	404c70 <exit@plt>

0000000000406698 <duparg@@Base>:
  406698:	stp	x29, x30, [sp, #-16]!
  40669c:	mov	x2, x0
  4066a0:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  4066a4:	mov	x29, sp
  4066a8:	ldr	x0, [x0, #3992]
  4066ac:	mov	x3, x1
  4066b0:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  4066b4:	add	x1, x1, #0x129
  4066b8:	ldr	x0, [x0]
  4066bc:	bl	405150 <fprintf@plt>
  4066c0:	mov	w0, #0xffffffff            	// #-1
  4066c4:	bl	404c70 <exit@plt>

00000000004066c8 <duparg2@@Base>:
  4066c8:	stp	x29, x30, [sp, #-16]!
  4066cc:	mov	x2, x0
  4066d0:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  4066d4:	mov	x29, sp
  4066d8:	ldr	x0, [x0, #3992]
  4066dc:	mov	x3, x1
  4066e0:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  4066e4:	add	x1, x1, #0x15b
  4066e8:	ldr	x0, [x0]
  4066ec:	bl	405150 <fprintf@plt>
  4066f0:	mov	w0, #0xffffffff            	// #-1
  4066f4:	bl	404c70 <exit@plt>

00000000004066f8 <nodev@@Base>:
  4066f8:	stp	x29, x30, [sp, #-16]!
  4066fc:	mov	x2, x0
  406700:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  406704:	mov	x29, sp
  406708:	ldr	x0, [x0, #3992]
  40670c:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  406710:	add	x1, x1, #0x193
  406714:	ldr	x0, [x0]
  406718:	bl	405150 <fprintf@plt>
  40671c:	mov	w0, #0xffffffff            	// #-1
  406720:	ldp	x29, x30, [sp], #16
  406724:	ret

0000000000406728 <check_ifname@@Base>:
  406728:	stp	x29, x30, [sp, #-32]!
  40672c:	mov	x29, sp
  406730:	str	x19, [sp, #16]
  406734:	mov	x19, x0
  406738:	bl	404c50 <strlen@plt>
  40673c:	cmp	x0, #0xf
  406740:	b.hi	40675c <check_ifname@@Base+0x34>  // b.pmore
  406744:	ldrb	w0, [x19]
  406748:	cbz	w0, 40675c <check_ifname@@Base+0x34>
  40674c:	mov	x0, x19
  406750:	ldr	x19, [sp, #16]
  406754:	ldp	x29, x30, [sp], #32
  406758:	b	40580c <_start@@Base+0x2ac>
  40675c:	mov	w0, #0xffffffff            	// #-1
  406760:	ldr	x19, [sp, #16]
  406764:	ldp	x29, x30, [sp], #32
  406768:	ret

000000000040676c <check_altifname@@Base>:
  40676c:	ldrb	w1, [x0]
  406770:	cbz	w1, 406778 <check_altifname@@Base+0xc>
  406774:	b	40580c <_start@@Base+0x2ac>
  406778:	mov	w0, #0xffffffff            	// #-1
  40677c:	ret

0000000000406780 <get_ifname@@Base>:
  406780:	stp	x29, x30, [sp, #-48]!
  406784:	mov	x29, sp
  406788:	stp	x19, x20, [sp, #16]
  40678c:	mov	x20, x1
  406790:	str	x21, [sp, #32]
  406794:	mov	x21, x0
  406798:	mov	x0, x1
  40679c:	bl	406728 <check_ifname@@Base>
  4067a0:	mov	w19, w0
  4067a4:	cbnz	w0, 4067b8 <get_ifname@@Base+0x38>
  4067a8:	mov	x1, x20
  4067ac:	mov	x0, x21
  4067b0:	mov	x2, #0x10                  	// #16
  4067b4:	bl	4050c0 <strncpy@plt>
  4067b8:	mov	w0, w19
  4067bc:	ldp	x19, x20, [sp, #16]
  4067c0:	ldr	x21, [sp, #32]
  4067c4:	ldp	x29, x30, [sp], #48
  4067c8:	ret

00000000004067cc <get_ifname_rta@@Base>:
  4067cc:	stp	x29, x30, [sp, #-32]!
  4067d0:	mov	x29, sp
  4067d4:	str	x19, [sp, #16]
  4067d8:	cbz	x1, 4067fc <get_ifname_rta@@Base+0x30>
  4067dc:	add	x19, x1, #0x4
  4067e0:	mov	x0, x19
  4067e4:	bl	406728 <check_ifname@@Base>
  4067e8:	cmp	w0, #0x0
  4067ec:	csel	x0, x19, xzr, eq  // eq = none
  4067f0:	ldr	x19, [sp, #16]
  4067f4:	ldp	x29, x30, [sp], #32
  4067f8:	ret
  4067fc:	mov	w19, w0
  406800:	mov	w2, w0
  406804:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  406808:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  40680c:	add	x1, x1, #0x1ac
  406810:	ldr	x0, [x0, #3992]
  406814:	ldr	x0, [x0]
  406818:	bl	405150 <fprintf@plt>
  40681c:	mov	w0, w19
  406820:	bl	408460 <ll_idx_n2a@@Base>
  406824:	mov	x19, x0
  406828:	b	4067e0 <get_ifname_rta@@Base+0x14>

000000000040682c <matches@@Base>:
  40682c:	ldrb	w2, [x0]
  406830:	cbz	w2, 40685c <matches@@Base+0x30>
  406834:	mov	x2, #0x0                   	// #0
  406838:	ldrb	w4, [x1, x2]
  40683c:	ldrb	w3, [x0, x2]
  406840:	cbz	w4, 406850 <matches@@Base+0x24>
  406844:	add	x2, x2, #0x1
  406848:	cmp	w4, w3
  40684c:	b.eq	406838 <matches@@Base+0xc>  // b.none
  406850:	cmp	w3, #0x0
  406854:	cset	w0, ne  // ne = any
  406858:	ret
  40685c:	mov	w0, #0x1                   	// #1
  406860:	b	406858 <matches@@Base+0x2c>

0000000000406864 <inet_addr_match@@Base>:
  406864:	stp	x29, x30, [sp, #-48]!
  406868:	cmp	wzr, w2, asr #5
  40686c:	mov	x29, sp
  406870:	stp	x19, x20, [sp, #16]
  406874:	asr	w20, w2, #5
  406878:	and	w19, w2, #0x1f
  40687c:	stp	x21, x22, [sp, #32]
  406880:	add	x22, x0, #0x8
  406884:	add	x21, x1, #0x8
  406888:	b.eq	4068a4 <inet_addr_match@@Base+0x40>  // b.none
  40688c:	lsl	w2, w20, #2
  406890:	mov	x1, x21
  406894:	mov	x0, x22
  406898:	sxtw	x2, w2
  40689c:	bl	404f00 <memcmp@plt>
  4068a0:	cbnz	w0, 4068e4 <inet_addr_match@@Base+0x80>
  4068a4:	cbz	w19, 4068d0 <inet_addr_match@@Base+0x6c>
  4068a8:	sbfiz	x20, x20, #2, #32
  4068ac:	neg	w19, w19
  4068b0:	mov	w2, #0xffffffff            	// #-1
  4068b4:	lsl	w19, w2, w19
  4068b8:	rev	w19, w19
  4068bc:	ldr	w0, [x22, x20]
  4068c0:	ldr	w1, [x21, x20]
  4068c4:	eor	w0, w0, w1
  4068c8:	tst	w0, w19
  4068cc:	cset	w19, ne  // ne = any
  4068d0:	mov	w0, w19
  4068d4:	ldp	x19, x20, [sp, #16]
  4068d8:	ldp	x21, x22, [sp, #32]
  4068dc:	ldp	x29, x30, [sp], #48
  4068e0:	ret
  4068e4:	mov	w19, #0xffffffff            	// #-1
  4068e8:	b	4068d0 <inet_addr_match@@Base+0x6c>

00000000004068ec <inet_addr_match_rta@@Base>:
  4068ec:	cbz	x1, 406940 <inet_addr_match_rta@@Base+0x54>
  4068f0:	stp	x29, x30, [sp, #-304]!
  4068f4:	mov	x29, sp
  4068f8:	ldrh	w2, [x0, #6]
  4068fc:	stp	x19, x20, [sp, #16]
  406900:	mov	x19, x0
  406904:	cbz	w2, 406948 <inet_addr_match_rta@@Base+0x5c>
  406908:	ldrsh	w0, [x0, #4]
  40690c:	cmp	w0, #0x0
  406910:	b.le	406948 <inet_addr_match_rta@@Base+0x5c>
  406914:	add	x20, sp, #0x28
  406918:	mov	x0, x20
  40691c:	bl	4064e4 <get_addr_rta@@Base>
  406920:	cbnz	w0, 406950 <inet_addr_match_rta@@Base+0x64>
  406924:	ldrsh	w2, [x19, #4]
  406928:	mov	x1, x19
  40692c:	mov	x0, x20
  406930:	bl	406864 <inet_addr_match@@Base>
  406934:	ldp	x19, x20, [sp, #16]
  406938:	ldp	x29, x30, [sp], #304
  40693c:	ret
  406940:	mov	w0, #0x0                   	// #0
  406944:	ret
  406948:	mov	w0, #0x0                   	// #0
  40694c:	b	406934 <inet_addr_match_rta@@Base+0x48>
  406950:	mov	w0, #0xffffffff            	// #-1
  406954:	b	406934 <inet_addr_match_rta@@Base+0x48>

0000000000406958 <__get_hz@@Base>:
  406958:	sub	sp, sp, #0x430
  40695c:	stp	x29, x30, [sp]
  406960:	mov	x29, sp
  406964:	stp	x19, x20, [sp, #16]
  406968:	adrp	x19, 40c000 <_IO_stdin_used@@Base+0x268>
  40696c:	add	x19, x19, #0x1d8
  406970:	mov	x0, x19
  406974:	bl	405120 <getenv@plt>
  406978:	cbz	x0, 4069a8 <__get_hz@@Base+0x50>
  40697c:	mov	x0, x19
  406980:	bl	405120 <getenv@plt>
  406984:	bl	404d90 <atoi@plt>
  406988:	mov	w19, w0
  40698c:	cbnz	w19, 406994 <__get_hz@@Base+0x3c>
  406990:	mov	w19, #0x64                  	// #100
  406994:	mov	w0, w19
  406998:	ldp	x29, x30, [sp]
  40699c:	ldp	x19, x20, [sp, #16]
  4069a0:	add	sp, sp, #0x430
  4069a4:	ret
  4069a8:	adrp	x20, 40c000 <_IO_stdin_used@@Base+0x268>
  4069ac:	add	x20, x20, #0x1db
  4069b0:	mov	x0, x20
  4069b4:	add	x19, sp, #0x30
  4069b8:	bl	405120 <getenv@plt>
  4069bc:	cbz	x0, 406a34 <__get_hz@@Base+0xdc>
  4069c0:	mov	x0, x20
  4069c4:	bl	405120 <getenv@plt>
  4069c8:	adrp	x2, 40c000 <_IO_stdin_used@@Base+0x268>
  4069cc:	mov	x3, x0
  4069d0:	add	x2, x2, #0x52
  4069d4:	mov	x0, x19
  4069d8:	mov	x1, #0x3ff                 	// #1023
  4069dc:	bl	404d50 <snprintf@plt>
  4069e0:	mov	x0, x19
  4069e4:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  4069e8:	add	x1, x1, #0x58b
  4069ec:	bl	405020 <fopen64@plt>
  4069f0:	mov	x20, x0
  4069f4:	cbz	x0, 406990 <__get_hz@@Base+0x38>
  4069f8:	add	x3, sp, #0x2c
  4069fc:	add	x2, sp, #0x28
  406a00:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  406a04:	add	x1, x1, #0x214
  406a08:	bl	404dd0 <__isoc99_fscanf@plt>
  406a0c:	cmp	w0, #0x2
  406a10:	b.ne	406a74 <__get_hz@@Base+0x11c>  // b.any
  406a14:	ldp	w1, w19, [sp, #40]
  406a18:	mov	w0, #0x4240                	// #16960
  406a1c:	movk	w0, #0xf, lsl #16
  406a20:	cmp	w1, w0
  406a24:	csel	w19, w19, wzr, eq  // eq = none
  406a28:	mov	x0, x20
  406a2c:	bl	404d80 <fclose@plt>
  406a30:	b	40698c <__get_hz@@Base+0x34>
  406a34:	adrp	x20, 40c000 <_IO_stdin_used@@Base+0x268>
  406a38:	add	x20, x20, #0x1eb
  406a3c:	mov	x0, x20
  406a40:	bl	405120 <getenv@plt>
  406a44:	cbz	x0, 406a60 <__get_hz@@Base+0x108>
  406a48:	mov	x0, x20
  406a4c:	bl	405120 <getenv@plt>
  406a50:	adrp	x2, 40c000 <_IO_stdin_used@@Base+0x268>
  406a54:	mov	x3, x0
  406a58:	add	x2, x2, #0x1f5
  406a5c:	b	4069d4 <__get_hz@@Base+0x7c>
  406a60:	mov	x0, x19
  406a64:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  406a68:	add	x1, x1, #0x203
  406a6c:	bl	405010 <strcpy@plt>
  406a70:	b	4069e0 <__get_hz@@Base+0x88>
  406a74:	mov	w19, #0x0                   	// #0
  406a78:	b	406a28 <__get_hz@@Base+0xd0>

0000000000406a7c <__get_user_hz@@Base>:
  406a7c:	stp	x29, x30, [sp, #-16]!
  406a80:	mov	w0, #0x2                   	// #2
  406a84:	mov	x29, sp
  406a88:	bl	405050 <sysconf@plt>
  406a8c:	ldp	x29, x30, [sp], #16
  406a90:	ret

0000000000406a94 <rt_addr_n2a_r@@Base>:
  406a94:	mov	x5, x2
  406a98:	cmp	w0, #0x11
  406a9c:	mov	x2, x3
  406aa0:	b.eq	406ae8 <rt_addr_n2a_r@@Base+0x54>  // b.none
  406aa4:	b.gt	406ac8 <rt_addr_n2a_r@@Base+0x34>
  406aa8:	cmp	w0, #0x7
  406aac:	b.eq	406af4 <rt_addr_n2a_r@@Base+0x60>  // b.none
  406ab0:	and	w6, w0, #0xfffffff7
  406ab4:	cmp	w6, #0x2
  406ab8:	b.eq	406adc <rt_addr_n2a_r@@Base+0x48>  // b.none
  406abc:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  406ac0:	add	x0, x0, #0x227
  406ac4:	ret
  406ac8:	cmp	w0, #0x1c
  406acc:	b.ne	406abc <rt_addr_n2a_r@@Base+0x28>  // b.any
  406ad0:	sxtw	x3, w4
  406ad4:	mov	x1, x5
  406ad8:	b	409508 <mpls_ntop@@Base>
  406adc:	mov	w3, w4
  406ae0:	mov	x1, x5
  406ae4:	b	405170 <inet_ntop@plt>
  406ae8:	mov	x0, x5
  406aec:	mov	w2, #0xffff                	// #65535
  406af0:	b	408700 <ll_addr_n2a@@Base>
  406af4:	ldrh	w0, [x5]
  406af8:	cmp	w0, #0x2
  406afc:	b.eq	406b14 <rt_addr_n2a_r@@Base+0x80>  // b.none
  406b00:	cmp	w0, #0xa
  406b04:	b.ne	406abc <rt_addr_n2a_r@@Base+0x28>  // b.any
  406b08:	mov	w3, w4
  406b0c:	add	x1, x5, #0x8
  406b10:	b	406ae4 <rt_addr_n2a_r@@Base+0x50>
  406b14:	mov	w3, w4
  406b18:	add	x1, x5, #0x4
  406b1c:	b	406ae4 <rt_addr_n2a_r@@Base+0x50>

0000000000406b20 <rt_addr_n2a@@Base>:
  406b20:	mov	w4, #0x100                 	// #256
  406b24:	adrp	x3, 420000 <memcpy@GLIBC_2.17>
  406b28:	add	x3, x3, #0x2f0
  406b2c:	b	406a94 <rt_addr_n2a_r@@Base>

0000000000406b30 <read_family@@Base>:
  406b30:	stp	x29, x30, [sp, #-32]!
  406b34:	adrp	x1, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  406b38:	add	x1, x1, #0xe7e
  406b3c:	mov	x29, sp
  406b40:	str	x19, [sp, #16]
  406b44:	mov	x19, x0
  406b48:	bl	404f10 <strcmp@plt>
  406b4c:	cbz	w0, 406bc8 <read_family@@Base+0x98>
  406b50:	adrp	x1, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  406b54:	mov	x0, x19
  406b58:	add	x1, x1, #0xe83
  406b5c:	bl	404f10 <strcmp@plt>
  406b60:	cbz	w0, 406bd0 <read_family@@Base+0xa0>
  406b64:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  406b68:	mov	x0, x19
  406b6c:	add	x1, x1, #0x652
  406b70:	bl	404f10 <strcmp@plt>
  406b74:	cbz	w0, 406bd8 <read_family@@Base+0xa8>
  406b78:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  406b7c:	mov	x0, x19
  406b80:	add	x1, x1, #0x22b
  406b84:	bl	404f10 <strcmp@plt>
  406b88:	cbz	w0, 406be0 <read_family@@Base+0xb0>
  406b8c:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  406b90:	mov	x0, x19
  406b94:	add	x1, x1, #0x22f
  406b98:	bl	404f10 <strcmp@plt>
  406b9c:	cbz	w0, 406be8 <read_family@@Base+0xb8>
  406ba0:	mov	x0, x19
  406ba4:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  406ba8:	add	x1, x1, #0x234
  406bac:	bl	404f10 <strcmp@plt>
  406bb0:	cmp	w0, #0x0
  406bb4:	mov	w0, #0x7                   	// #7
  406bb8:	csel	w0, wzr, w0, ne  // ne = any
  406bbc:	ldr	x19, [sp, #16]
  406bc0:	ldp	x29, x30, [sp], #32
  406bc4:	ret
  406bc8:	mov	w0, #0x2                   	// #2
  406bcc:	b	406bbc <read_family@@Base+0x8c>
  406bd0:	mov	w0, #0xa                   	// #10
  406bd4:	b	406bbc <read_family@@Base+0x8c>
  406bd8:	mov	w0, #0x11                  	// #17
  406bdc:	b	406bbc <read_family@@Base+0x8c>
  406be0:	mov	w0, #0x4                   	// #4
  406be4:	b	406bbc <read_family@@Base+0x8c>
  406be8:	mov	w0, #0x1c                  	// #28
  406bec:	b	406bbc <read_family@@Base+0x8c>

0000000000406bf0 <family_name@@Base>:
  406bf0:	cmp	w0, #0x2
  406bf4:	b.eq	406c34 <family_name@@Base+0x44>  // b.none
  406bf8:	cmp	w0, #0xa
  406bfc:	b.eq	406c40 <family_name@@Base+0x50>  // b.none
  406c00:	cmp	w0, #0x11
  406c04:	b.eq	406c4c <family_name@@Base+0x5c>  // b.none
  406c08:	cmp	w0, #0x4
  406c0c:	b.eq	406c58 <family_name@@Base+0x68>  // b.none
  406c10:	cmp	w0, #0x1c
  406c14:	b.eq	406c64 <family_name@@Base+0x74>  // b.none
  406c18:	cmp	w0, #0x7
  406c1c:	adrp	x2, 40c000 <_IO_stdin_used@@Base+0x268>
  406c20:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  406c24:	add	x2, x2, #0x234
  406c28:	add	x0, x1, #0x227
  406c2c:	csel	x0, x0, x2, ne  // ne = any
  406c30:	ret
  406c34:	adrp	x0, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  406c38:	add	x0, x0, #0xe7e
  406c3c:	b	406c30 <family_name@@Base+0x40>
  406c40:	adrp	x0, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  406c44:	add	x0, x0, #0xe83
  406c48:	b	406c30 <family_name@@Base+0x40>
  406c4c:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  406c50:	add	x0, x0, #0x652
  406c54:	b	406c30 <family_name@@Base+0x40>
  406c58:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  406c5c:	add	x0, x0, #0x22b
  406c60:	b	406c30 <family_name@@Base+0x40>
  406c64:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  406c68:	add	x0, x0, #0x22f
  406c6c:	b	406c30 <family_name@@Base+0x40>

0000000000406c70 <get_prefix@@Base>:
  406c70:	stp	x29, x30, [sp, #-48]!
  406c74:	cmp	w2, #0x11
  406c78:	mov	x29, sp
  406c7c:	stp	x19, x20, [sp, #16]
  406c80:	mov	x20, x1
  406c84:	str	x21, [sp, #32]
  406c88:	b.ne	406cb0 <get_prefix@@Base+0x40>  // b.any
  406c8c:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  406c90:	mov	x2, x1
  406c94:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  406c98:	add	x1, x1, #0x245
  406c9c:	ldr	x0, [x0, #3992]
  406ca0:	ldr	x0, [x0]
  406ca4:	bl	405150 <fprintf@plt>
  406ca8:	mov	w0, #0x1                   	// #1
  406cac:	bl	404c70 <exit@plt>
  406cb0:	mov	w19, w2
  406cb4:	bl	406410 <get_prefix_1@@Base>
  406cb8:	cbz	w0, 406cfc <get_prefix@@Base+0x8c>
  406cbc:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  406cc0:	ldr	x0, [x0, #3992]
  406cc4:	ldr	x21, [x0]
  406cc8:	cbz	w19, 406cf0 <get_prefix@@Base+0x80>
  406ccc:	mov	w0, w19
  406cd0:	bl	406bf0 <family_name@@Base>
  406cd4:	mov	x2, x0
  406cd8:	mov	x3, x20
  406cdc:	mov	x0, x21
  406ce0:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  406ce4:	add	x1, x1, #0x28d
  406ce8:	bl	405150 <fprintf@plt>
  406cec:	b	406ca8 <get_prefix@@Base+0x38>
  406cf0:	adrp	x2, 40c000 <_IO_stdin_used@@Base+0x268>
  406cf4:	add	x2, x2, #0x23b
  406cf8:	b	406cd8 <get_prefix@@Base+0x68>
  406cfc:	ldp	x19, x20, [sp, #16]
  406d00:	ldr	x21, [sp, #32]
  406d04:	ldp	x29, x30, [sp], #48
  406d08:	ret

0000000000406d0c <get_addr@@Base>:
  406d0c:	stp	x29, x30, [sp, #-48]!
  406d10:	mov	x29, sp
  406d14:	stp	x19, x20, [sp, #16]
  406d18:	mov	x20, x1
  406d1c:	mov	w19, w2
  406d20:	str	x21, [sp, #32]
  406d24:	bl	406168 <get_addr_1@@Base>
  406d28:	cbz	w0, 406d70 <get_addr@@Base+0x64>
  406d2c:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  406d30:	ldr	x0, [x0, #3992]
  406d34:	ldr	x21, [x0]
  406d38:	cbz	w19, 406d64 <get_addr@@Base+0x58>
  406d3c:	mov	w0, w19
  406d40:	bl	406bf0 <family_name@@Base>
  406d44:	mov	x2, x0
  406d48:	mov	x3, x20
  406d4c:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  406d50:	add	x1, x1, #0x2bd
  406d54:	mov	x0, x21
  406d58:	bl	405150 <fprintf@plt>
  406d5c:	mov	w0, #0x1                   	// #1
  406d60:	bl	404c70 <exit@plt>
  406d64:	adrp	x2, 40c000 <_IO_stdin_used@@Base+0x268>
  406d68:	add	x2, x2, #0x23b
  406d6c:	b	406d48 <get_addr@@Base+0x3c>
  406d70:	ldp	x19, x20, [sp, #16]
  406d74:	ldr	x21, [sp, #32]
  406d78:	ldp	x29, x30, [sp], #48
  406d7c:	ret

0000000000406d80 <format_host_r@@Base>:
  406d80:	stp	x29, x30, [sp, #-128]!
  406d84:	mov	x29, sp
  406d88:	stp	x19, x20, [sp, #16]
  406d8c:	mov	w19, w1
  406d90:	adrp	x1, 41f000 <_IO_stdin_used@@Base+0x13268>
  406d94:	stp	x21, x22, [sp, #32]
  406d98:	mov	x20, x2
  406d9c:	mov	w22, w0
  406da0:	ldr	x1, [x1, #4064]
  406da4:	stp	x23, x24, [sp, #48]
  406da8:	stp	x25, x26, [sp, #64]
  406dac:	ldr	w1, [x1]
  406db0:	stp	x27, x28, [sp, #80]
  406db4:	str	x3, [sp, #112]
  406db8:	str	w4, [sp, #124]
  406dbc:	cbz	w1, 406f14 <format_host_r@@Base+0x194>
  406dc0:	cmp	w19, #0x0
  406dc4:	b.gt	406ddc <format_host_r@@Base+0x5c>
  406dc8:	mov	w19, #0x8                   	// #8
  406dcc:	bl	406144 <af_bit_len@@Base>
  406dd0:	cmp	w0, #0x7
  406dd4:	sdiv	w19, w0, w19
  406dd8:	b.le	406f14 <format_host_r@@Base+0x194>
  406ddc:	cmp	w22, #0xa
  406de0:	b.ne	406ed0 <format_host_r@@Base+0x150>  // b.any
  406de4:	ldr	w0, [x20]
  406de8:	cbnz	w0, 406ed0 <format_host_r@@Base+0x150>
  406dec:	ldr	w0, [x20, #4]
  406df0:	cbnz	w0, 406ed0 <format_host_r@@Base+0x150>
  406df4:	ldr	w0, [x20, #8]
  406df8:	cmn	w0, #0x10, lsl #12
  406dfc:	b.ne	406ed0 <format_host_r@@Base+0x150>  // b.any
  406e00:	add	x26, x20, #0xc
  406e04:	mov	w24, #0x2                   	// #2
  406e08:	mov	w27, #0x4                   	// #4
  406e0c:	add	x0, x26, w27, sxtw
  406e10:	adrp	x23, 420000 <memcpy@GLIBC_2.17>
  406e14:	add	x1, x23, #0x2f0
  406e18:	sxtw	x28, w27
  406e1c:	add	x1, x1, #0x100
  406e20:	ldur	w25, [x0, #-4]
  406e24:	mov	w0, #0x101                 	// #257
  406e28:	udiv	w0, w25, w0
  406e2c:	add	w0, w0, w0, lsl #8
  406e30:	sub	w25, w25, w0
  406e34:	ldr	x0, [x1, x25, lsl #3]
  406e38:	str	x0, [sp, #104]
  406e3c:	mov	x21, x0
  406e40:	cbnz	x21, 406ee0 <format_host_r@@Base+0x160>
  406e44:	mov	x0, #0x118                 	// #280
  406e48:	bl	404db0 <malloc@plt>
  406e4c:	mov	x21, x0
  406e50:	cbz	x0, 406f14 <format_host_r@@Base+0x194>
  406e54:	strh	w27, [x0, #18]
  406e58:	mov	x2, x28
  406e5c:	strh	w24, [x0, #22]
  406e60:	mov	x1, x26
  406e64:	str	xzr, [x21, #8]
  406e68:	add	x0, x0, #0x18
  406e6c:	add	x23, x23, #0x2f0
  406e70:	bl	404c20 <memcpy@plt>
  406e74:	ldr	x0, [sp, #104]
  406e78:	str	x0, [x21]
  406e7c:	add	x0, x23, #0x100
  406e80:	str	x21, [x0, x25, lsl #3]
  406e84:	ldr	w0, [x23, #2312]
  406e88:	add	w0, w0, #0x1
  406e8c:	str	w0, [x23, #2312]
  406e90:	cmp	w0, #0x1
  406e94:	b.ne	406e9c <format_host_r@@Base+0x11c>  // b.any
  406e98:	bl	404cd0 <sethostent@plt>
  406e9c:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  406ea0:	ldr	x0, [x0, #4016]
  406ea4:	ldr	x0, [x0]
  406ea8:	bl	405000 <fflush@plt>
  406eac:	mov	w2, w24
  406eb0:	mov	w1, w27
  406eb4:	mov	x0, x26
  406eb8:	bl	404f70 <gethostbyaddr@plt>
  406ebc:	cbz	x0, 406f0c <format_host_r@@Base+0x18c>
  406ec0:	ldr	x0, [x0]
  406ec4:	bl	404e80 <strdup@plt>
  406ec8:	str	x0, [x21, #8]
  406ecc:	b	406f0c <format_host_r@@Base+0x18c>
  406ed0:	mov	w24, w22
  406ed4:	mov	w27, w19
  406ed8:	mov	x26, x20
  406edc:	b	406e0c <format_host_r@@Base+0x8c>
  406ee0:	ldrh	w0, [x21, #22]
  406ee4:	cmp	w0, w24
  406ee8:	b.ne	406f44 <format_host_r@@Base+0x1c4>  // b.any
  406eec:	ldrh	w0, [x21, #18]
  406ef0:	cmp	w27, w0
  406ef4:	b.ne	406f44 <format_host_r@@Base+0x1c4>  // b.any
  406ef8:	mov	x2, x28
  406efc:	mov	x1, x26
  406f00:	add	x0, x21, #0x18
  406f04:	bl	404f00 <memcmp@plt>
  406f08:	cbnz	w0, 406f44 <format_host_r@@Base+0x1c4>
  406f0c:	ldr	x0, [x21, #8]
  406f10:	cbnz	x0, 406f4c <format_host_r@@Base+0x1cc>
  406f14:	ldr	w4, [sp, #124]
  406f18:	mov	x2, x20
  406f1c:	mov	w1, w19
  406f20:	mov	w0, w22
  406f24:	ldp	x19, x20, [sp, #16]
  406f28:	ldp	x21, x22, [sp, #32]
  406f2c:	ldp	x23, x24, [sp, #48]
  406f30:	ldp	x25, x26, [sp, #64]
  406f34:	ldp	x27, x28, [sp, #80]
  406f38:	ldr	x3, [sp, #112]
  406f3c:	ldp	x29, x30, [sp], #128
  406f40:	b	406a94 <rt_addr_n2a_r@@Base>
  406f44:	ldr	x21, [x21]
  406f48:	b	406e40 <format_host_r@@Base+0xc0>
  406f4c:	ldp	x19, x20, [sp, #16]
  406f50:	ldp	x21, x22, [sp, #32]
  406f54:	ldp	x23, x24, [sp, #48]
  406f58:	ldp	x25, x26, [sp, #64]
  406f5c:	ldp	x27, x28, [sp, #80]
  406f60:	ldp	x29, x30, [sp], #128
  406f64:	ret

0000000000406f68 <format_host@@Base>:
  406f68:	adrp	x3, 420000 <memcpy@GLIBC_2.17>
  406f6c:	add	x3, x3, #0x2f0
  406f70:	add	x3, x3, #0x90c
  406f74:	mov	w4, #0x100                 	// #256
  406f78:	b	406d80 <format_host_r@@Base>

0000000000406f7c <hexstring_n2a@@Base>:
  406f7c:	stp	x29, x30, [sp, #-64]!
  406f80:	mov	x29, sp
  406f84:	stp	x19, x20, [sp, #16]
  406f88:	mov	x20, x2
  406f8c:	mov	x19, #0x0                   	// #0
  406f90:	stp	x21, x22, [sp, #32]
  406f94:	mov	x22, x0
  406f98:	mov	w21, w1
  406f9c:	stp	x23, x24, [sp, #48]
  406fa0:	adrp	x24, 40c000 <_IO_stdin_used@@Base+0x268>
  406fa4:	mov	w23, w3
  406fa8:	add	x24, x24, #0x43a
  406fac:	add	x0, x20, x19, lsl #1
  406fb0:	cmp	w21, w19
  406fb4:	b.gt	406fd0 <hexstring_n2a@@Base+0x54>
  406fb8:	mov	x0, x20
  406fbc:	ldp	x19, x20, [sp, #16]
  406fc0:	ldp	x21, x22, [sp, #32]
  406fc4:	ldp	x23, x24, [sp, #48]
  406fc8:	ldp	x29, x30, [sp], #64
  406fcc:	ret
  406fd0:	sub	w1, w23, w19, lsl #1
  406fd4:	cmp	w1, #0x2
  406fd8:	b.le	406fb8 <hexstring_n2a@@Base+0x3c>
  406fdc:	ldrb	w2, [x22, x19]
  406fe0:	mov	x1, x24
  406fe4:	add	x19, x19, #0x1
  406fe8:	bl	404d00 <sprintf@plt>
  406fec:	b	406fac <hexstring_n2a@@Base+0x30>

0000000000406ff0 <hexstring_a2n@@Base>:
  406ff0:	stp	x29, x30, [sp, #-112]!
  406ff4:	mov	x29, sp
  406ff8:	stp	x19, x20, [sp, #16]
  406ffc:	mov	x19, x1
  407000:	stp	x21, x22, [sp, #32]
  407004:	mov	x21, x3
  407008:	stp	x23, x24, [sp, #48]
  40700c:	mov	x23, x0
  407010:	mov	w24, w2
  407014:	stp	x25, x26, [sp, #64]
  407018:	str	x27, [sp, #80]
  40701c:	bl	404c50 <strlen@plt>
  407020:	tbnz	w0, #0, 4070cc <hexstring_a2n@@Base+0xdc>
  407024:	and	x20, x0, #0x1
  407028:	add	x25, sp, #0x60
  40702c:	add	x26, sp, #0x68
  407030:	add	x22, x23, x20, lsl #1
  407034:	mov	w27, w20
  407038:	cmp	w24, w20
  40703c:	b.hi	407070 <hexstring_a2n@@Base+0x80>  // b.pmore
  407040:	cbnz	x21, 4070d4 <hexstring_a2n@@Base+0xe4>
  407044:	mov	x0, x19
  407048:	ldp	x19, x20, [sp, #16]
  40704c:	ldp	x21, x22, [sp, #32]
  407050:	ldp	x23, x24, [sp, #48]
  407054:	ldp	x25, x26, [sp, #64]
  407058:	ldr	x27, [sp, #80]
  40705c:	ldp	x29, x30, [sp], #112
  407060:	ret
  407064:	strb	w0, [x19, x20]
  407068:	add	x20, x20, #0x1
  40706c:	b	407030 <hexstring_a2n@@Base+0x40>
  407070:	mov	x0, x22
  407074:	bl	404c50 <strlen@plt>
  407078:	cmp	x0, #0x1
  40707c:	b.ls	407040 <hexstring_a2n@@Base+0x50>  // b.plast
  407080:	mov	x1, x22
  407084:	mov	x2, #0x2                   	// #2
  407088:	mov	x0, x25
  40708c:	bl	4050c0 <strncpy@plt>
  407090:	strb	wzr, [sp, #98]
  407094:	bl	405110 <__errno_location@plt>
  407098:	mov	x22, x0
  40709c:	mov	x1, x26
  4070a0:	mov	x0, x25
  4070a4:	mov	w2, #0x10                  	// #16
  4070a8:	str	wzr, [x22]
  4070ac:	bl	404c40 <strtoul@plt>
  4070b0:	ldr	w1, [x22]
  4070b4:	cbnz	w1, 4070cc <hexstring_a2n@@Base+0xdc>
  4070b8:	cmp	w0, #0xff
  4070bc:	b.hi	4070cc <hexstring_a2n@@Base+0xdc>  // b.pmore
  4070c0:	ldr	x1, [sp, #104]
  4070c4:	ldrb	w1, [x1]
  4070c8:	cbz	w1, 407064 <hexstring_a2n@@Base+0x74>
  4070cc:	mov	x19, #0x0                   	// #0
  4070d0:	b	407044 <hexstring_a2n@@Base+0x54>
  4070d4:	str	w27, [x21]
  4070d8:	b	407044 <hexstring_a2n@@Base+0x54>

00000000004070dc <hex2mem@@Base>:
  4070dc:	stp	x29, x30, [sp, #-48]!
  4070e0:	mov	x29, sp
  4070e4:	stp	x19, x20, [sp, #16]
  4070e8:	mov	x20, x0
  4070ec:	mov	x19, #0x0                   	// #0
  4070f0:	stp	x21, x22, [sp, #32]
  4070f4:	mov	x22, x1
  4070f8:	mov	w21, w2
  4070fc:	cmp	w21, w19
  407100:	b.gt	40710c <hex2mem@@Base+0x30>
  407104:	mov	w0, #0x0                   	// #0
  407108:	b	40711c <hex2mem@@Base+0x40>
  40710c:	ldrb	w0, [x20]
  407110:	bl	405a40 <get_hex@@Base>
  407114:	tbz	w0, #31, 40712c <hex2mem@@Base+0x50>
  407118:	mov	w0, #0xffffffff            	// #-1
  40711c:	ldp	x19, x20, [sp, #16]
  407120:	ldp	x21, x22, [sp, #32]
  407124:	ldp	x29, x30, [sp], #48
  407128:	ret
  40712c:	ubfiz	w0, w0, #4, #4
  407130:	strb	w0, [x22, x19]
  407134:	add	x20, x20, #0x2
  407138:	ldurb	w0, [x20, #-1]
  40713c:	bl	405a40 <get_hex@@Base>
  407140:	tbnz	w0, #31, 407118 <hex2mem@@Base+0x3c>
  407144:	ldrb	w1, [x22, x19]
  407148:	orr	w0, w0, w1
  40714c:	strb	w0, [x22, x19]
  407150:	add	x19, x19, #0x1
  407154:	b	4070fc <hex2mem@@Base+0x20>

0000000000407158 <addr64_n2a@@Base>:
  407158:	stp	x29, x30, [sp, #-96]!
  40715c:	mov	x29, sp
  407160:	stp	x21, x22, [sp, #32]
  407164:	adrp	x21, 40c000 <_IO_stdin_used@@Base+0x268>
  407168:	mov	x22, x1
  40716c:	add	x21, x21, #0x2ee
  407170:	stp	x23, x24, [sp, #48]
  407174:	adrp	x24, 40c000 <_IO_stdin_used@@Base+0x268>
  407178:	mov	x23, x2
  40717c:	add	x24, x24, #0x2f0
  407180:	stp	x25, x26, [sp, #64]
  407184:	adrp	x25, 40c000 <_IO_stdin_used@@Base+0x268>
  407188:	add	x26, sp, #0x58
  40718c:	add	x25, x25, #0x6e1
  407190:	stp	x19, x20, [sp, #16]
  407194:	mov	x19, #0x0                   	// #0
  407198:	mov	x20, #0x0                   	// #0
  40719c:	str	x0, [sp, #88]
  4071a0:	cmp	x19, #0x3
  4071a4:	ldrh	w3, [x26, x19, lsl #1]
  4071a8:	csel	x21, x21, x25, ne  // ne = any
  4071ac:	mov	x2, x24
  4071b0:	rev16	w3, w3
  4071b4:	mov	x4, x21
  4071b8:	and	w3, w3, #0xffff
  4071bc:	sub	x1, x23, x20
  4071c0:	add	x0, x22, x20
  4071c4:	bl	404d50 <snprintf@plt>
  4071c8:	tbnz	w0, #31, 4071e0 <addr64_n2a@@Base+0x88>
  4071cc:	add	x19, x19, #0x1
  4071d0:	add	x20, x20, w0, sxtw
  4071d4:	cmp	x19, #0x4
  4071d8:	b.ne	4071a0 <addr64_n2a@@Base+0x48>  // b.any
  4071dc:	mov	w0, w20
  4071e0:	ldp	x19, x20, [sp, #16]
  4071e4:	ldp	x21, x22, [sp, #32]
  4071e8:	ldp	x23, x24, [sp, #48]
  4071ec:	ldp	x25, x26, [sp, #64]
  4071f0:	ldp	x29, x30, [sp], #96
  4071f4:	ret

00000000004071f8 <print_escape_buf@@Base>:
  4071f8:	stp	x29, x30, [sp, #-64]!
  4071fc:	mov	x29, sp
  407200:	stp	x19, x20, [sp, #16]
  407204:	mov	x19, x0
  407208:	stp	x21, x22, [sp, #32]
  40720c:	mov	x22, x2
  407210:	add	x21, x0, x1
  407214:	str	x23, [sp, #48]
  407218:	adrp	x23, 40c000 <_IO_stdin_used@@Base+0x268>
  40721c:	add	x23, x23, #0x2f5
  407220:	cmp	x19, x21
  407224:	b.ne	40723c <print_escape_buf@@Base+0x44>  // b.any
  407228:	ldp	x19, x20, [sp, #16]
  40722c:	ldp	x21, x22, [sp, #32]
  407230:	ldr	x23, [sp, #48]
  407234:	ldp	x29, x30, [sp], #64
  407238:	ret
  40723c:	bl	404f20 <__ctype_b_loc@plt>
  407240:	ldrb	w20, [x19]
  407244:	ldrb	w1, [x19]
  407248:	ldr	x0, [x0]
  40724c:	ldrh	w0, [x0, x1, lsl #1]
  407250:	tbz	w0, #14, 40727c <print_escape_buf@@Base+0x84>
  407254:	cmp	w20, #0x5c
  407258:	b.eq	40727c <print_escape_buf@@Base+0x84>  // b.none
  40725c:	mov	w1, w20
  407260:	mov	x0, x22
  407264:	bl	404fc0 <strchr@plt>
  407268:	cbnz	x0, 40727c <print_escape_buf@@Base+0x84>
  40726c:	mov	w0, w20
  407270:	bl	405130 <putchar@plt>
  407274:	add	x19, x19, #0x1
  407278:	b	407220 <print_escape_buf@@Base+0x28>
  40727c:	mov	w1, w20
  407280:	mov	x0, x23
  407284:	bl	4050f0 <printf@plt>
  407288:	b	407274 <print_escape_buf@@Base+0x7c>

000000000040728c <print_timestamp@@Base>:
  40728c:	stp	x29, x30, [sp, #-96]!
  407290:	mov	x1, #0x0                   	// #0
  407294:	mov	x29, sp
  407298:	stp	x19, x20, [sp, #16]
  40729c:	add	x20, sp, #0x28
  4072a0:	mov	x19, x0
  4072a4:	mov	x0, x20
  4072a8:	bl	404e20 <gettimeofday@plt>
  4072ac:	mov	x0, x20
  4072b0:	bl	404d70 <localtime@plt>
  4072b4:	adrp	x1, 41f000 <_IO_stdin_used@@Base+0x13268>
  4072b8:	ldr	x1, [x1, #4032]
  4072bc:	ldr	w1, [x1]
  4072c0:	cbz	w1, 407308 <print_timestamp@@Base+0x7c>
  4072c4:	add	x20, sp, #0x38
  4072c8:	mov	x3, x0
  4072cc:	mov	x1, #0x28                  	// #40
  4072d0:	mov	x0, x20
  4072d4:	adrp	x2, 40c000 <_IO_stdin_used@@Base+0x268>
  4072d8:	add	x2, x2, #0x2fb
  4072dc:	bl	404d30 <strftime@plt>
  4072e0:	ldr	x3, [sp, #48]
  4072e4:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  4072e8:	mov	x2, x20
  4072ec:	add	x1, x1, #0x30d
  4072f0:	mov	x0, x19
  4072f4:	bl	405150 <fprintf@plt>
  4072f8:	mov	w0, #0x0                   	// #0
  4072fc:	ldp	x19, x20, [sp, #16]
  407300:	ldp	x29, x30, [sp], #96
  407304:	ret
  407308:	bl	405060 <asctime@plt>
  40730c:	mov	x20, x0
  407310:	bl	404c50 <strlen@plt>
  407314:	add	x0, x20, x0
  407318:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  40731c:	mov	x2, x20
  407320:	add	x1, x1, #0x319
  407324:	sturb	wzr, [x0, #-1]
  407328:	ldr	x3, [sp, #48]
  40732c:	b	4072f0 <print_timestamp@@Base+0x64>

0000000000407330 <print_name_and_link@@Base>:
  407330:	stp	x29, x30, [sp, #-112]!
  407334:	mov	x29, sp
  407338:	stp	x21, x22, [sp, #32]
  40733c:	mov	x22, x0
  407340:	mov	x21, x1
  407344:	ldr	x0, [x2, #40]
  407348:	stp	x19, x20, [sp, #16]
  40734c:	cbz	x0, 407388 <print_name_and_link@@Base+0x58>
  407350:	ldr	w20, [x0, #4]
  407354:	cbz	w20, 407440 <print_name_and_link@@Base+0x110>
  407358:	ldr	x0, [x2, #296]
  40735c:	cbz	x0, 4073f4 <print_name_and_link@@Base+0xc4>
  407360:	bl	408a0c <is_json_context@@Base>
  407364:	tst	w0, #0xff
  407368:	b.eq	407390 <print_name_and_link@@Base+0x60>  // b.none
  40736c:	adrp	x2, 40c000 <_IO_stdin_used@@Base+0x268>
  407370:	mov	w4, w20
  407374:	add	x2, x2, #0x336
  407378:	mov	x3, #0x0                   	// #0
  40737c:	mov	w1, #0x6                   	// #6
  407380:	mov	w0, #0x2                   	// #2
  407384:	bl	408b20 <print_color_int@@Base>
  407388:	mov	w20, #0x0                   	// #0
  40738c:	b	4073c4 <print_name_and_link@@Base+0x94>
  407390:	mov	w0, w20
  407394:	bl	408460 <ll_idx_n2a@@Base>
  407398:	mov	x19, x0
  40739c:	mov	w20, #0x0                   	// #0
  4073a0:	cbz	x19, 4073c4 <print_name_and_link@@Base+0x94>
  4073a4:	add	x0, sp, #0x30
  4073a8:	mov	x3, x21
  4073ac:	adrp	x2, 40c000 <_IO_stdin_used@@Base+0x268>
  4073b0:	mov	x4, x19
  4073b4:	add	x2, x2, #0x341
  4073b8:	mov	x21, x0
  4073bc:	mov	x1, #0x40                  	// #64
  4073c0:	bl	404d50 <snprintf@plt>
  4073c4:	mov	x4, x21
  4073c8:	mov	x3, x22
  4073cc:	mov	w1, #0x0                   	// #0
  4073d0:	mov	w0, #0x4                   	// #4
  4073d4:	adrp	x2, 40c000 <_IO_stdin_used@@Base+0x268>
  4073d8:	add	x2, x2, #0x347
  4073dc:	bl	408ed8 <print_color_string@@Base>
  4073e0:	mov	w0, w20
  4073e4:	ldp	x19, x20, [sp, #16]
  4073e8:	ldp	x21, x22, [sp, #32]
  4073ec:	ldp	x29, x30, [sp], #112
  4073f0:	ret
  4073f4:	mov	w0, w20
  4073f8:	bl	40849c <ll_index_to_name@@Base>
  4073fc:	mov	x19, x0
  407400:	bl	408a0c <is_json_context@@Base>
  407404:	tst	w0, #0xff
  407408:	b.eq	40742c <print_name_and_link@@Base+0xfc>  // b.none
  40740c:	mov	x4, x19
  407410:	mov	x19, #0x0                   	// #0
  407414:	mov	x3, #0x0                   	// #0
  407418:	adrp	x2, 40c000 <_IO_stdin_used@@Base+0x268>
  40741c:	mov	w1, #0x6                   	// #6
  407420:	add	x2, x2, #0x652
  407424:	mov	w0, #0x2                   	// #2
  407428:	bl	408ed8 <print_color_string@@Base>
  40742c:	mov	w0, w20
  407430:	bl	408560 <ll_index_to_flags@@Base>
  407434:	mvn	w20, w0
  407438:	and	w20, w20, #0x1
  40743c:	b	4073a0 <print_name_and_link@@Base+0x70>
  407440:	bl	408a0c <is_json_context@@Base>
  407444:	tst	w0, #0xff
  407448:	b.eq	40746c <print_name_and_link@@Base+0x13c>  // b.none
  40744c:	mov	x4, #0x0                   	// #0
  407450:	mov	x3, #0x0                   	// #0
  407454:	adrp	x2, 40c000 <_IO_stdin_used@@Base+0x268>
  407458:	mov	w1, #0x6                   	// #6
  40745c:	add	x2, x2, #0x652
  407460:	mov	w0, #0x2                   	// #2
  407464:	bl	409154 <print_color_null@@Base>
  407468:	b	407388 <print_name_and_link@@Base+0x58>
  40746c:	adrp	x19, 40c000 <_IO_stdin_used@@Base+0x268>
  407470:	mov	w20, #0x0                   	// #0
  407474:	add	x19, x19, #0x331
  407478:	b	4073a4 <print_name_and_link@@Base+0x74>

000000000040747c <getcmdline@@Base>:
  40747c:	stp	x29, x30, [sp, #-128]!
  407480:	mov	x29, sp
  407484:	stp	x19, x20, [sp, #16]
  407488:	stp	x21, x22, [sp, #32]
  40748c:	mov	x22, x0
  407490:	stp	x23, x24, [sp, #48]
  407494:	mov	x23, x1
  407498:	stp	x25, x26, [sp, #64]
  40749c:	mov	x25, x2
  4074a0:	stp	x27, x28, [sp, #80]
  4074a4:	bl	404f60 <getline@plt>
  4074a8:	mov	x20, x0
  4074ac:	tbnz	x0, #63, 407538 <getcmdline@@Base+0xbc>
  4074b0:	adrp	x21, 41f000 <_IO_stdin_used@@Base+0x13268>
  4074b4:	ldr	x1, [x21, #4000]
  4074b8:	ldr	w0, [x1]
  4074bc:	add	w0, w0, #0x1
  4074c0:	str	w0, [x1]
  4074c4:	ldr	x0, [x22]
  4074c8:	mov	w1, #0x23                  	// #35
  4074cc:	bl	404fc0 <strchr@plt>
  4074d0:	cbz	x0, 4074d8 <getcmdline@@Base+0x5c>
  4074d4:	strb	wzr, [x0]
  4074d8:	ldr	x21, [x21, #4000]
  4074dc:	adrp	x24, 40c000 <_IO_stdin_used@@Base+0x268>
  4074e0:	add	x26, sp, #0x78
  4074e4:	add	x24, x24, #0x378
  4074e8:	add	x27, sp, #0x70
  4074ec:	ldr	x0, [x22]
  4074f0:	mov	x1, x24
  4074f4:	bl	4050a0 <strstr@plt>
  4074f8:	mov	x28, x0
  4074fc:	cbz	x0, 407538 <getcmdline@@Base+0xbc>
  407500:	mov	x2, x25
  407504:	mov	x1, x26
  407508:	mov	x0, x27
  40750c:	stp	xzr, xzr, [sp, #112]
  407510:	bl	404f60 <getline@plt>
  407514:	mov	x19, x0
  407518:	tbz	x0, #63, 407558 <getcmdline@@Base+0xdc>
  40751c:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  407520:	ldr	x0, [x0, #3992]
  407524:	ldr	x1, [x0]
  407528:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  40752c:	add	x0, x0, #0x34e
  407530:	bl	404c60 <fputs@plt>
  407534:	mov	x20, x19
  407538:	mov	x0, x20
  40753c:	ldp	x19, x20, [sp, #16]
  407540:	ldp	x21, x22, [sp, #32]
  407544:	ldp	x23, x24, [sp, #48]
  407548:	ldp	x25, x26, [sp, #64]
  40754c:	ldp	x27, x28, [sp, #80]
  407550:	ldp	x29, x30, [sp], #128
  407554:	ret
  407558:	ldr	w0, [x21]
  40755c:	mov	w1, #0x23                  	// #35
  407560:	add	w0, w0, #0x1
  407564:	str	w0, [x21]
  407568:	strb	wzr, [x28]
  40756c:	ldr	x0, [sp, #112]
  407570:	bl	404fc0 <strchr@plt>
  407574:	cbz	x0, 40757c <getcmdline@@Base+0x100>
  407578:	strb	wzr, [x0]
  40757c:	ldr	x2, [x22]
  407580:	str	x2, [sp, #104]
  407584:	mov	x0, x2
  407588:	bl	404c50 <strlen@plt>
  40758c:	mov	x28, x0
  407590:	ldr	x0, [sp, #112]
  407594:	bl	404c50 <strlen@plt>
  407598:	add	x1, x28, x0
  40759c:	ldr	x2, [sp, #104]
  4075a0:	add	x1, x1, #0x1
  4075a4:	str	x1, [x23]
  4075a8:	mov	x0, x2
  4075ac:	bl	404e60 <realloc@plt>
  4075b0:	str	x0, [x22]
  4075b4:	cbnz	x0, 4075dc <getcmdline@@Base+0x160>
  4075b8:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  4075bc:	mov	x19, #0xffffffffffffffff    	// #-1
  4075c0:	ldr	x0, [x0, #3992]
  4075c4:	ldr	x1, [x0]
  4075c8:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  4075cc:	add	x0, x0, #0x369
  4075d0:	bl	404c60 <fputs@plt>
  4075d4:	str	xzr, [x23]
  4075d8:	b	407534 <getcmdline@@Base+0xb8>
  4075dc:	ldr	x1, [sp, #112]
  4075e0:	sub	x19, x19, #0x2
  4075e4:	add	x20, x20, x19
  4075e8:	bl	404df0 <strcat@plt>
  4075ec:	ldr	x0, [sp, #112]
  4075f0:	bl	404f80 <free@plt>
  4075f4:	b	4074ec <getcmdline@@Base+0x70>

00000000004075f8 <makeargs@@Base>:
  4075f8:	stp	x29, x30, [sp, #-96]!
  4075fc:	mov	x29, sp
  407600:	stp	x21, x22, [sp, #32]
  407604:	adrp	x22, 40c000 <_IO_stdin_used@@Base+0x268>
  407608:	add	x22, x22, #0x412
  40760c:	add	x22, x22, #0x1b
  407610:	stp	x19, x20, [sp, #16]
  407614:	mov	x19, x0
  407618:	stp	x23, x24, [sp, #48]
  40761c:	mov	x23, x1
  407620:	sub	w24, w2, #0x1
  407624:	mov	x21, #0x0                   	// #0
  407628:	stp	x25, x26, [sp, #64]
  40762c:	mov	w25, #0x22                  	// #34
  407630:	str	x27, [sp, #80]
  407634:	ldrb	w0, [x19]
  407638:	mov	w27, w21
  40763c:	mov	w26, w21
  407640:	cbnz	w0, 407668 <makeargs@@Base+0x70>
  407644:	str	xzr, [x23, w26, sxtw #3]
  407648:	mov	w0, w26
  40764c:	ldp	x19, x20, [sp, #16]
  407650:	ldp	x21, x22, [sp, #32]
  407654:	ldp	x23, x24, [sp, #48]
  407658:	ldp	x25, x26, [sp, #64]
  40765c:	ldr	x27, [sp, #80]
  407660:	ldp	x29, x30, [sp], #96
  407664:	ret
  407668:	mov	x1, x22
  40766c:	mov	x0, x19
  407670:	bl	404fb0 <strspn@plt>
  407674:	ldrb	w1, [x19, x0]
  407678:	add	x20, x19, x0
  40767c:	cbz	w1, 407644 <makeargs@@Base+0x4c>
  407680:	cmp	w24, w21
  407684:	b.gt	4076a8 <makeargs@@Base+0xb0>
  407688:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  40768c:	ldr	x0, [x0, #3992]
  407690:	ldr	x1, [x0]
  407694:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  407698:	add	x0, x0, #0x37b
  40769c:	bl	404c60 <fputs@plt>
  4076a0:	mov	w0, #0x1                   	// #1
  4076a4:	bl	404c70 <exit@plt>
  4076a8:	cmp	w1, #0x27
  4076ac:	add	w26, w27, #0x1
  4076b0:	ccmp	w1, w25, #0x4, ne  // ne = any
  4076b4:	b.ne	4076e4 <makeargs@@Base+0xec>  // b.any
  4076b8:	add	x0, x20, #0x1
  4076bc:	str	x0, [x23, x21, lsl #3]
  4076c0:	bl	404fc0 <strchr@plt>
  4076c4:	mov	x19, x0
  4076c8:	cbnz	x0, 407700 <makeargs@@Base+0x108>
  4076cc:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  4076d0:	ldr	x0, [x0, #3992]
  4076d4:	ldr	x1, [x0]
  4076d8:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  4076dc:	add	x0, x0, #0x39a
  4076e0:	b	40769c <makeargs@@Base+0xa4>
  4076e4:	str	x20, [x23, x21, lsl #3]
  4076e8:	mov	x1, x22
  4076ec:	mov	x0, x20
  4076f0:	bl	4050d0 <strcspn@plt>
  4076f4:	add	x19, x20, x0
  4076f8:	ldrb	w0, [x20, x0]
  4076fc:	cbz	w0, 407644 <makeargs@@Base+0x4c>
  407700:	add	x21, x21, #0x1
  407704:	strb	wzr, [x19], #1
  407708:	b	407634 <makeargs@@Base+0x3c>

000000000040770c <print_nlmsg_timestamp@@Base>:
  40770c:	stp	x29, x30, [sp, #-64]!
  407710:	mov	x29, sp
  407714:	stp	x19, x20, [sp, #16]
  407718:	mov	x20, x0
  40771c:	ldr	w0, [x1, #16]
  407720:	str	x21, [sp, #32]
  407724:	ldr	w21, [x1, #20]
  407728:	str	x0, [sp, #56]
  40772c:	add	x0, sp, #0x38
  407730:	bl	404d70 <localtime@plt>
  407734:	bl	405060 <asctime@plt>
  407738:	mov	x19, x0
  40773c:	bl	404c50 <strlen@plt>
  407740:	add	x0, x19, x0
  407744:	mov	x3, x21
  407748:	mov	x2, x19
  40774c:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  407750:	add	x1, x1, #0x3b6
  407754:	sturb	wzr, [x0, #-1]
  407758:	mov	x0, x20
  40775c:	bl	405150 <fprintf@plt>
  407760:	ldp	x19, x20, [sp, #16]
  407764:	ldr	x21, [sp, #32]
  407768:	ldp	x29, x30, [sp], #64
  40776c:	ret

0000000000407770 <int_to_str@@Base>:
  407770:	stp	x29, x30, [sp, #-32]!
  407774:	mov	w2, w0
  407778:	mov	x29, sp
  40777c:	str	x19, [sp, #16]
  407780:	mov	x19, x1
  407784:	mov	x0, x19
  407788:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  40778c:	add	x1, x1, #0x3cc
  407790:	bl	404d00 <sprintf@plt>
  407794:	mov	x0, x19
  407798:	ldr	x19, [sp, #16]
  40779c:	ldp	x29, x30, [sp], #32
  4077a0:	ret

00000000004077a4 <get_guid@@Base>:
  4077a4:	stp	x29, x30, [sp, #-64]!
  4077a8:	mov	x29, sp
  4077ac:	stp	x19, x20, [sp, #16]
  4077b0:	mov	x19, x1
  4077b4:	stp	x21, x22, [sp, #32]
  4077b8:	mov	x21, x0
  4077bc:	mov	x0, x1
  4077c0:	bl	404c50 <strlen@plt>
  4077c4:	cmp	x0, #0x17
  4077c8:	b.ne	407854 <get_guid@@Base+0xb0>  // b.any
  4077cc:	add	x20, x19, #0x2
  4077d0:	add	x19, x19, #0x17
  4077d4:	mov	x0, x20
  4077d8:	ldrb	w1, [x0]
  4077dc:	cmp	w1, #0x3a
  4077e0:	b.ne	407854 <get_guid@@Base+0xb0>  // b.any
  4077e4:	add	x0, x0, #0x3
  4077e8:	cmp	x0, x19
  4077ec:	b.ne	4077d8 <get_guid@@Base+0x34>  // b.any
  4077f0:	add	x22, sp, #0x38
  4077f4:	mov	w19, #0x38                  	// #56
  4077f8:	str	xzr, [x21]
  4077fc:	mov	x1, x22
  407800:	sub	x0, x20, #0x2
  407804:	mov	w2, #0x10                  	// #16
  407808:	bl	404c40 <strtoul@plt>
  40780c:	ldr	x1, [sp, #56]
  407810:	cmp	x1, x20
  407814:	b.ne	407854 <get_guid@@Base+0xb0>  // b.any
  407818:	cmp	x0, #0xff
  40781c:	b.hi	407854 <get_guid@@Base+0xb0>  // b.pmore
  407820:	lsl	x2, x0, x19
  407824:	sub	w19, w19, #0x8
  407828:	ldr	x0, [x21]
  40782c:	add	x20, x20, #0x3
  407830:	cmn	w19, #0x8
  407834:	orr	x0, x0, x2
  407838:	str	x0, [x21]
  40783c:	b.ne	4077fc <get_guid@@Base+0x58>  // b.any
  407840:	mov	w0, #0x0                   	// #0
  407844:	ldp	x19, x20, [sp, #16]
  407848:	ldp	x21, x22, [sp, #32]
  40784c:	ldp	x29, x30, [sp], #64
  407850:	ret
  407854:	mov	w0, #0xffffffff            	// #-1
  407858:	b	407844 <get_guid@@Base+0xa0>

000000000040785c <get_real_family@@Base>:
  40785c:	cmp	w0, #0x5
  407860:	b.ne	407878 <get_real_family@@Base+0x1c>  // b.any
  407864:	cmp	w1, #0x80
  407868:	b.eq	407880 <get_real_family@@Base+0x24>  // b.none
  40786c:	cmp	w1, #0x81
  407870:	mov	w0, #0xa                   	// #10
  407874:	csel	w1, w1, w0, ne  // ne = any
  407878:	mov	w0, w1
  40787c:	ret
  407880:	mov	w1, #0x2                   	// #2
  407884:	b	407878 <get_real_family@@Base+0x1c>

0000000000407888 <get_rtnl_link_stats_rta@@Base>:
  407888:	sub	sp, sp, #0x990
  40788c:	stp	x29, x30, [sp]
  407890:	mov	x29, sp
  407894:	str	x23, [sp, #48]
  407898:	ldr	x23, [x1, #184]
  40789c:	stp	x19, x20, [sp, #16]
  4078a0:	mov	x19, x0
  4078a4:	stp	x21, x22, [sp, #32]
  4078a8:	cbnz	x23, 407948 <get_rtnl_link_stats_rta@@Base+0xc0>
  4078ac:	ldr	x23, [x1, #56]
  4078b0:	cbnz	x23, 4079a8 <get_rtnl_link_stats_rta@@Base+0x120>
  4078b4:	ldr	x2, [x1, #96]
  4078b8:	cbz	x2, 4079bc <get_rtnl_link_stats_rta@@Base+0x134>
  4078bc:	ldrh	w3, [x2], #4
  4078c0:	add	x0, sp, #0x48
  4078c4:	mov	w1, #0x128                 	// #296
  4078c8:	sub	w3, w3, #0x4
  4078cc:	bl	40bc10 <parse_rtattr@@Base>
  4078d0:	ldr	x20, [sp, #96]
  4078d4:	cbz	x20, 407928 <get_rtnl_link_stats_rta@@Base+0xa0>
  4078d8:	mov	x0, x19
  4078dc:	mov	x2, #0xc0                  	// #192
  4078e0:	mov	w1, #0x0                   	// #0
  4078e4:	bl	404e10 <memset@plt>
  4078e8:	ldur	x0, [x20, #12]
  4078ec:	str	x0, [x19]
  4078f0:	ldur	x0, [x20, #20]
  4078f4:	str	x0, [x19, #16]
  4078f8:	ldur	x0, [x20, #44]
  4078fc:	str	x0, [x19, #8]
  407900:	ldur	x0, [x20, #52]
  407904:	str	x0, [x19, #24]
  407908:	ldur	x0, [x20, #108]
  40790c:	str	x0, [x19, #32]
  407910:	ldur	x0, [x20, #116]
  407914:	str	x0, [x19, #40]
  407918:	ldur	x0, [x20, #188]
  40791c:	str	x0, [x19, #64]
  407920:	ldur	x0, [x20, #252]
  407924:	str	x0, [x19, #104]
  407928:	mov	w20, #0xc0                  	// #192
  40792c:	mov	w0, w20
  407930:	ldp	x29, x30, [sp]
  407934:	ldp	x19, x20, [sp, #16]
  407938:	ldp	x21, x22, [sp, #32]
  40793c:	ldr	x23, [sp, #48]
  407940:	add	sp, sp, #0x990
  407944:	ret
  407948:	mov	x22, x0
  40794c:	mov	w20, #0xc0                  	// #192
  407950:	ldrh	w21, [x23]
  407954:	sub	w21, w21, #0x4
  407958:	cmp	w20, w21
  40795c:	b.le	4079b4 <get_rtnl_link_stats_rta@@Base+0x12c>
  407960:	sub	w2, w20, w21
  407964:	add	x0, x22, w21, sxtw
  407968:	mov	w1, #0x0                   	// #0
  40796c:	sxtw	x2, w2
  407970:	bl	404e10 <memset@plt>
  407974:	sxtw	x2, w21
  407978:	add	x1, x23, #0x4
  40797c:	mov	x0, x22
  407980:	bl	404c20 <memcpy@plt>
  407984:	cmp	x22, x19
  407988:	b.eq	40792c <get_rtnl_link_stats_rta@@Base+0xa4>  // b.none
  40798c:	mov	x0, #0x0                   	// #0
  407990:	ldr	w1, [x22, x0, lsl #2]
  407994:	str	x1, [x19, x0, lsl #3]
  407998:	add	x0, x0, #0x1
  40799c:	cmp	x0, #0x18
  4079a0:	b.ne	407990 <get_rtnl_link_stats_rta@@Base+0x108>  // b.any
  4079a4:	b	40792c <get_rtnl_link_stats_rta@@Base+0xa4>
  4079a8:	add	x22, sp, #0x48
  4079ac:	mov	w20, #0x60                  	// #96
  4079b0:	b	407950 <get_rtnl_link_stats_rta@@Base+0xc8>
  4079b4:	mov	w21, w20
  4079b8:	b	407974 <get_rtnl_link_stats_rta@@Base+0xec>
  4079bc:	mov	w20, #0xffffffff            	// #-1
  4079c0:	b	40792c <get_rtnl_link_stats_rta@@Base+0xa4>

00000000004079c4 <strlcpy@@Base>:
  4079c4:	stp	x29, x30, [sp, #-48]!
  4079c8:	mov	x29, sp
  4079cc:	stp	x19, x20, [sp, #16]
  4079d0:	mov	x19, x2
  4079d4:	stp	x21, x22, [sp, #32]
  4079d8:	mov	x21, x0
  4079dc:	mov	x22, x1
  4079e0:	mov	x0, x1
  4079e4:	bl	404c50 <strlen@plt>
  4079e8:	mov	x20, x0
  4079ec:	cbz	x19, 407a10 <strlcpy@@Base+0x4c>
  4079f0:	sub	x19, x19, #0x1
  4079f4:	mov	x1, x22
  4079f8:	cmp	x19, x0
  4079fc:	csel	x19, x19, x0, ls  // ls = plast
  407a00:	mov	x0, x21
  407a04:	mov	x2, x19
  407a08:	bl	404c20 <memcpy@plt>
  407a0c:	strb	wzr, [x21, x19]
  407a10:	mov	x0, x20
  407a14:	ldp	x19, x20, [sp, #16]
  407a18:	ldp	x21, x22, [sp, #32]
  407a1c:	ldp	x29, x30, [sp], #48
  407a20:	ret

0000000000407a24 <strlcat@@Base>:
  407a24:	stp	x29, x30, [sp, #-48]!
  407a28:	mov	x29, sp
  407a2c:	stp	x21, x22, [sp, #32]
  407a30:	mov	x21, x2
  407a34:	mov	x22, x0
  407a38:	stp	x19, x20, [sp, #16]
  407a3c:	mov	x20, x1
  407a40:	bl	404c50 <strlen@plt>
  407a44:	mov	x19, x0
  407a48:	cmp	x0, x21
  407a4c:	b.cc	407a6c <strlcat@@Base+0x48>  // b.lo, b.ul, b.last
  407a50:	mov	x0, x20
  407a54:	bl	404c50 <strlen@plt>
  407a58:	add	x0, x0, x19
  407a5c:	ldp	x19, x20, [sp, #16]
  407a60:	ldp	x21, x22, [sp, #32]
  407a64:	ldp	x29, x30, [sp], #48
  407a68:	ret
  407a6c:	sub	x2, x21, x0
  407a70:	mov	x1, x20
  407a74:	add	x0, x22, x0
  407a78:	bl	4079c4 <strlcpy@@Base>
  407a7c:	b	407a58 <strlcat@@Base+0x34>

0000000000407a80 <drop_cap@@Base>:
  407a80:	stp	x29, x30, [sp, #-48]!
  407a84:	mov	x29, sp
  407a88:	str	x19, [sp, #16]
  407a8c:	bl	404d10 <getuid@plt>
  407a90:	cbz	w0, 407aec <drop_cap@@Base+0x6c>
  407a94:	bl	404cc0 <geteuid@plt>
  407a98:	cbz	w0, 407aec <drop_cap@@Base+0x6c>
  407a9c:	bl	404f40 <cap_get_proc@plt>
  407aa0:	mov	x19, x0
  407aa4:	cbnz	x0, 407ab0 <drop_cap@@Base+0x30>
  407aa8:	mov	w0, #0x1                   	// #1
  407aac:	bl	404c70 <exit@plt>
  407ab0:	add	x3, sp, #0x2c
  407ab4:	mov	w2, #0x2                   	// #2
  407ab8:	mov	w1, #0xc                   	// #12
  407abc:	bl	404e40 <cap_get_flag@plt>
  407ac0:	cbnz	w0, 407aa8 <drop_cap@@Base+0x28>
  407ac4:	ldr	w0, [sp, #44]
  407ac8:	cbnz	w0, 407ae4 <drop_cap@@Base+0x64>
  407acc:	mov	x0, x19
  407ad0:	bl	405030 <cap_clear@plt>
  407ad4:	cbnz	w0, 407aa8 <drop_cap@@Base+0x28>
  407ad8:	mov	x0, x19
  407adc:	bl	404e70 <cap_set_proc@plt>
  407ae0:	cbnz	w0, 407aa8 <drop_cap@@Base+0x28>
  407ae4:	mov	x0, x19
  407ae8:	bl	405070 <cap_free@plt>
  407aec:	ldr	x19, [sp, #16]
  407af0:	ldp	x29, x30, [sp], #48
  407af4:	ret

0000000000407af8 <get_time@@Base>:
  407af8:	stp	x29, x30, [sp, #-64]!
  407afc:	mov	x29, sp
  407b00:	stp	x19, x20, [sp, #16]
  407b04:	mov	x20, x1
  407b08:	add	x1, sp, #0x38
  407b0c:	str	x21, [sp, #32]
  407b10:	mov	x21, x0
  407b14:	mov	x0, x20
  407b18:	str	d8, [sp, #40]
  407b1c:	bl	404cb0 <strtod@plt>
  407b20:	ldr	x19, [sp, #56]
  407b24:	cmp	x19, x20
  407b28:	b.eq	407c28 <get_time@@Base+0x130>  // b.none
  407b2c:	ldrb	w0, [x19]
  407b30:	fmov	d8, d0
  407b34:	cbz	w0, 407b84 <get_time@@Base+0x8c>
  407b38:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  407b3c:	mov	x0, x19
  407b40:	add	x1, x1, #0x53
  407b44:	bl	404e50 <strcasecmp@plt>
  407b48:	cbz	w0, 407b74 <get_time@@Base+0x7c>
  407b4c:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  407b50:	mov	x0, x19
  407b54:	add	x1, x1, #0x6a
  407b58:	bl	404e50 <strcasecmp@plt>
  407b5c:	cbz	w0, 407b74 <get_time@@Base+0x7c>
  407b60:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  407b64:	mov	x0, x19
  407b68:	add	x1, x1, #0x6f
  407b6c:	bl	404e50 <strcasecmp@plt>
  407b70:	cbnz	w0, 407ba4 <get_time@@Base+0xac>
  407b74:	mov	x0, #0x848000000000        	// #145685290680320
  407b78:	movk	x0, #0x412e, lsl #48
  407b7c:	fmov	d0, x0
  407b80:	fmul	d8, d8, d0
  407b84:	fcvtzu	w1, d8
  407b88:	mov	w0, #0x0                   	// #0
  407b8c:	str	w1, [x21]
  407b90:	ldp	x19, x20, [sp, #16]
  407b94:	ldr	x21, [sp, #32]
  407b98:	ldr	d8, [sp, #40]
  407b9c:	ldp	x29, x30, [sp], #64
  407ba0:	ret
  407ba4:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  407ba8:	mov	x0, x19
  407bac:	add	x1, x1, #0x3e4
  407bb0:	bl	404e50 <strcasecmp@plt>
  407bb4:	cbz	w0, 407be0 <get_time@@Base+0xe8>
  407bb8:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  407bbc:	mov	x0, x19
  407bc0:	add	x1, x1, #0x69
  407bc4:	bl	404e50 <strcasecmp@plt>
  407bc8:	cbz	w0, 407be0 <get_time@@Base+0xe8>
  407bcc:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  407bd0:	mov	x0, x19
  407bd4:	add	x1, x1, #0x6e
  407bd8:	bl	404e50 <strcasecmp@plt>
  407bdc:	cbnz	w0, 407bec <get_time@@Base+0xf4>
  407be0:	mov	x0, #0x400000000000        	// #70368744177664
  407be4:	movk	x0, #0x408f, lsl #48
  407be8:	b	407b7c <get_time@@Base+0x84>
  407bec:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  407bf0:	mov	x0, x19
  407bf4:	add	x1, x1, #0x408
  407bf8:	bl	404e50 <strcasecmp@plt>
  407bfc:	cbz	w0, 407b84 <get_time@@Base+0x8c>
  407c00:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  407c04:	mov	x0, x19
  407c08:	add	x1, x1, #0x3cf
  407c0c:	bl	404e50 <strcasecmp@plt>
  407c10:	cbz	w0, 407b84 <get_time@@Base+0x8c>
  407c14:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  407c18:	mov	x0, x19
  407c1c:	add	x1, x1, #0x3d4
  407c20:	bl	404e50 <strcasecmp@plt>
  407c24:	cbz	w0, 407b84 <get_time@@Base+0x8c>
  407c28:	mov	w0, #0xffffffff            	// #-1
  407c2c:	b	407b90 <get_time@@Base+0x98>

0000000000407c30 <sprint_time@@Base>:
  407c30:	stp	x29, x30, [sp, #-32]!
  407c34:	mov	w3, w0
  407c38:	ucvtf	d0, w0
  407c3c:	mov	x29, sp
  407c40:	str	x19, [sp, #16]
  407c44:	mov	w0, #0x423f                	// #16959
  407c48:	movk	w0, #0xf, lsl #16
  407c4c:	mov	x19, x1
  407c50:	cmp	w3, w0
  407c54:	b.ls	407c8c <sprint_time@@Base+0x5c>  // b.plast
  407c58:	mov	x0, #0x848000000000        	// #145685290680320
  407c5c:	adrp	x2, 40c000 <_IO_stdin_used@@Base+0x268>
  407c60:	movk	x0, #0x412e, lsl #48
  407c64:	fmov	d1, x0
  407c68:	add	x2, x2, #0x3da
  407c6c:	fdiv	d0, d0, d1
  407c70:	mov	x0, x19
  407c74:	mov	x1, #0x3f                  	// #63
  407c78:	bl	404d50 <snprintf@plt>
  407c7c:	mov	x0, x19
  407c80:	ldr	x19, [sp, #16]
  407c84:	ldp	x29, x30, [sp], #32
  407c88:	ret
  407c8c:	cmp	w3, #0x3e7
  407c90:	b.ls	407cb0 <sprint_time@@Base+0x80>  // b.plast
  407c94:	mov	x0, #0x400000000000        	// #70368744177664
  407c98:	adrp	x2, 40c000 <_IO_stdin_used@@Base+0x268>
  407c9c:	movk	x0, #0x408f, lsl #48
  407ca0:	fmov	d1, x0
  407ca4:	add	x2, x2, #0x3e0
  407ca8:	fdiv	d0, d0, d1
  407cac:	b	407c70 <sprint_time@@Base+0x40>
  407cb0:	mov	x0, x19
  407cb4:	adrp	x2, 40c000 <_IO_stdin_used@@Base+0x268>
  407cb8:	mov	x1, #0x3f                  	// #63
  407cbc:	add	x2, x2, #0x3e7
  407cc0:	bl	404d50 <snprintf@plt>
  407cc4:	b	407c7c <sprint_time@@Base+0x4c>

0000000000407cc8 <get_time64@@Base>:
  407cc8:	stp	x29, x30, [sp, #-64]!
  407ccc:	mov	x29, sp
  407cd0:	stp	x19, x20, [sp, #16]
  407cd4:	mov	x20, x1
  407cd8:	add	x1, sp, #0x38
  407cdc:	str	x21, [sp, #32]
  407ce0:	mov	x21, x0
  407ce4:	mov	x0, x20
  407ce8:	str	d8, [sp, #40]
  407cec:	bl	404cb0 <strtod@plt>
  407cf0:	ldr	x19, [sp, #56]
  407cf4:	cmp	x19, x20
  407cf8:	b.eq	407e40 <get_time64@@Base+0x178>  // b.none
  407cfc:	ldrb	w0, [x19]
  407d00:	fmov	d8, d0
  407d04:	cbz	w0, 407d54 <get_time64@@Base+0x8c>
  407d08:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  407d0c:	mov	x0, x19
  407d10:	add	x1, x1, #0x53
  407d14:	bl	404e50 <strcasecmp@plt>
  407d18:	cbz	w0, 407d44 <get_time64@@Base+0x7c>
  407d1c:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  407d20:	mov	x0, x19
  407d24:	add	x1, x1, #0x6a
  407d28:	bl	404e50 <strcasecmp@plt>
  407d2c:	cbz	w0, 407d44 <get_time64@@Base+0x7c>
  407d30:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  407d34:	mov	x0, x19
  407d38:	add	x1, x1, #0x6f
  407d3c:	bl	404e50 <strcasecmp@plt>
  407d40:	cbnz	w0, 407d74 <get_time64@@Base+0xac>
  407d44:	mov	x0, #0xcd6500000000        	// #225833675390976
  407d48:	movk	x0, #0x41cd, lsl #48
  407d4c:	fmov	d0, x0
  407d50:	fmul	d8, d8, d0
  407d54:	fcvtzs	d8, d8
  407d58:	mov	w0, #0x0                   	// #0
  407d5c:	str	d8, [x21]
  407d60:	ldp	x19, x20, [sp, #16]
  407d64:	ldr	x21, [sp, #32]
  407d68:	ldr	d8, [sp, #40]
  407d6c:	ldp	x29, x30, [sp], #64
  407d70:	ret
  407d74:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  407d78:	mov	x0, x19
  407d7c:	add	x1, x1, #0x3e4
  407d80:	bl	404e50 <strcasecmp@plt>
  407d84:	cbz	w0, 407db0 <get_time64@@Base+0xe8>
  407d88:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  407d8c:	mov	x0, x19
  407d90:	add	x1, x1, #0x69
  407d94:	bl	404e50 <strcasecmp@plt>
  407d98:	cbz	w0, 407db0 <get_time64@@Base+0xe8>
  407d9c:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  407da0:	mov	x0, x19
  407da4:	add	x1, x1, #0x6e
  407da8:	bl	404e50 <strcasecmp@plt>
  407dac:	cbnz	w0, 407dbc <get_time64@@Base+0xf4>
  407db0:	mov	x0, #0x848000000000        	// #145685290680320
  407db4:	movk	x0, #0x412e, lsl #48
  407db8:	b	407d4c <get_time64@@Base+0x84>
  407dbc:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  407dc0:	mov	x0, x19
  407dc4:	add	x1, x1, #0x408
  407dc8:	bl	404e50 <strcasecmp@plt>
  407dcc:	cbz	w0, 407df8 <get_time64@@Base+0x130>
  407dd0:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  407dd4:	mov	x0, x19
  407dd8:	add	x1, x1, #0x3cf
  407ddc:	bl	404e50 <strcasecmp@plt>
  407de0:	cbz	w0, 407df8 <get_time64@@Base+0x130>
  407de4:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  407de8:	mov	x0, x19
  407dec:	add	x1, x1, #0x3d4
  407df0:	bl	404e50 <strcasecmp@plt>
  407df4:	cbnz	w0, 407e04 <get_time64@@Base+0x13c>
  407df8:	mov	x0, #0x400000000000        	// #70368744177664
  407dfc:	movk	x0, #0x408f, lsl #48
  407e00:	b	407d4c <get_time64@@Base+0x84>
  407e04:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  407e08:	mov	x0, x19
  407e0c:	add	x1, x1, #0x40f
  407e10:	bl	404e50 <strcasecmp@plt>
  407e14:	cbz	w0, 407d54 <get_time64@@Base+0x8c>
  407e18:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  407e1c:	mov	x0, x19
  407e20:	add	x1, x1, #0x3ec
  407e24:	bl	404e50 <strcasecmp@plt>
  407e28:	cbz	w0, 407d54 <get_time64@@Base+0x8c>
  407e2c:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  407e30:	mov	x0, x19
  407e34:	add	x1, x1, #0x3f1
  407e38:	bl	404e50 <strcasecmp@plt>
  407e3c:	cbz	w0, 407d54 <get_time64@@Base+0x8c>
  407e40:	mov	w0, #0xffffffff            	// #-1
  407e44:	b	407d60 <get_time64@@Base+0x98>

0000000000407e48 <sprint_time64@@Base>:
  407e48:	stp	x29, x30, [sp, #-32]!
  407e4c:	mov	x3, x0
  407e50:	scvtf	d0, x0
  407e54:	mov	x29, sp
  407e58:	str	x19, [sp, #16]
  407e5c:	mov	x0, #0xc9ff                	// #51711
  407e60:	movk	x0, #0x3b9a, lsl #16
  407e64:	mov	x19, x1
  407e68:	cmp	x3, x0
  407e6c:	b.le	407ea4 <sprint_time64@@Base+0x5c>
  407e70:	mov	x0, #0xcd6500000000        	// #225833675390976
  407e74:	adrp	x2, 40c000 <_IO_stdin_used@@Base+0x268>
  407e78:	movk	x0, #0x41cd, lsl #48
  407e7c:	fmov	d1, x0
  407e80:	add	x2, x2, #0x3f7
  407e84:	fdiv	d0, d0, d1
  407e88:	mov	x0, x19
  407e8c:	mov	x1, #0x3f                  	// #63
  407e90:	bl	404d50 <snprintf@plt>
  407e94:	mov	x0, x19
  407e98:	ldr	x19, [sp, #16]
  407e9c:	ldp	x29, x30, [sp], #32
  407ea0:	ret
  407ea4:	mov	x0, #0x423f                	// #16959
  407ea8:	movk	x0, #0xf, lsl #16
  407eac:	cmp	x3, x0
  407eb0:	b.le	407ed0 <sprint_time64@@Base+0x88>
  407eb4:	mov	x0, #0x848000000000        	// #145685290680320
  407eb8:	adrp	x2, 40c000 <_IO_stdin_used@@Base+0x268>
  407ebc:	movk	x0, #0x412e, lsl #48
  407ec0:	fmov	d1, x0
  407ec4:	add	x2, x2, #0x3fd
  407ec8:	fdiv	d0, d0, d1
  407ecc:	b	407e88 <sprint_time64@@Base+0x40>
  407ed0:	cmp	x3, #0x3e7
  407ed4:	b.le	407ef4 <sprint_time64@@Base+0xac>
  407ed8:	mov	x0, #0x400000000000        	// #70368744177664
  407edc:	adrp	x2, 40c000 <_IO_stdin_used@@Base+0x268>
  407ee0:	movk	x0, #0x408f, lsl #48
  407ee4:	fmov	d1, x0
  407ee8:	add	x2, x2, #0x404
  407eec:	fdiv	d0, d0, d1
  407ef0:	b	407e88 <sprint_time64@@Base+0x40>
  407ef4:	mov	x0, x19
  407ef8:	adrp	x2, 40c000 <_IO_stdin_used@@Base+0x268>
  407efc:	mov	x1, #0x3f                  	// #63
  407f00:	add	x2, x2, #0x40b
  407f04:	bl	404d50 <snprintf@plt>
  407f08:	b	407e94 <sprint_time64@@Base+0x4c>
  407f0c:	ldp	x1, x0, [x0]
  407f10:	str	x1, [x0]
  407f14:	cbz	x1, 407f1c <sprint_time64@@Base+0xd4>
  407f18:	str	x0, [x1, #8]
  407f1c:	ret
  407f20:	mov	w1, w0
  407f24:	adrp	x0, 422000 <stderr@@GLIBC_2.17+0x1d20>
  407f28:	and	x2, x1, #0x3ff
  407f2c:	add	x0, x0, #0xd28
  407f30:	ldr	x0, [x0, x2, lsl #3]
  407f34:	cbnz	x0, 407f3c <sprint_time64@@Base+0xf4>
  407f38:	ret
  407f3c:	ldr	w2, [x0, #36]
  407f40:	cmp	w2, w1
  407f44:	b.eq	407f38 <sprint_time64@@Base+0xf0>  // b.none
  407f48:	ldr	x0, [x0]
  407f4c:	b	407f34 <sprint_time64@@Base+0xec>
  407f50:	stp	x29, x30, [sp, #-32]!
  407f54:	mov	x29, sp
  407f58:	ldr	x2, [x0, #48]
  407f5c:	stp	x19, x20, [sp, #16]
  407f60:	mov	x20, x0
  407f64:	ldr	x19, [x2], #-48
  407f68:	sub	x19, x19, #0x30
  407f6c:	cmp	x2, x20
  407f70:	b.ne	407f80 <sprint_time64@@Base+0x138>  // b.any
  407f74:	ldp	x19, x20, [sp, #16]
  407f78:	ldp	x29, x30, [sp], #32
  407f7c:	ret
  407f80:	add	x0, x2, #0x10
  407f84:	bl	407f0c <sprint_time64@@Base+0xc4>
  407f88:	ldp	x1, x0, [x2, #48]
  407f8c:	str	x0, [x1, #8]
  407f90:	str	x1, [x0]
  407f94:	mov	x0, x2
  407f98:	bl	404f80 <free@plt>
  407f9c:	ldr	x0, [x19, #48]
  407fa0:	mov	x2, x19
  407fa4:	sub	x19, x0, #0x30
  407fa8:	b	407f6c <sprint_time64@@Base+0x124>

0000000000407fac <namehash@@Base>:
  407fac:	mov	x1, x0
  407fb0:	mov	w0, #0x1505                	// #5381
  407fb4:	ldrb	w2, [x1]
  407fb8:	cbnz	w2, 407fc0 <namehash@@Base+0x14>
  407fbc:	ret
  407fc0:	add	w2, w2, w0, lsl #5
  407fc4:	add	x1, x1, #0x1
  407fc8:	add	w0, w0, w2
  407fcc:	b	407fb4 <namehash@@Base+0x8>
  407fd0:	stp	x29, x30, [sp, #-64]!
  407fd4:	mov	x29, sp
  407fd8:	stp	x19, x20, [sp, #16]
  407fdc:	mov	x20, x2
  407fe0:	stp	x21, x22, [sp, #32]
  407fe4:	mov	x22, x1
  407fe8:	str	x23, [sp, #48]
  407fec:	mov	x23, x0
  407ff0:	mov	x0, x1
  407ff4:	bl	404c50 <strlen@plt>
  407ff8:	add	x0, x0, #0x41
  407ffc:	bl	404db0 <malloc@plt>
  408000:	mov	x19, x0
  408004:	cbz	x0, 408088 <namehash@@Base+0xdc>
  408008:	ldr	w21, [x23, #4]
  40800c:	mov	x1, x22
  408010:	add	x0, x0, #0x40
  408014:	str	w21, [x19, #36]
  408018:	bl	405010 <strcpy@plt>
  40801c:	ldrh	w0, [x23, #2]
  408020:	add	x1, x19, #0x30
  408024:	strh	w0, [x19, #40]
  408028:	ldr	w0, [x23, #8]
  40802c:	str	w0, [x19, #32]
  408030:	cbz	x20, 4080a0 <namehash@@Base+0xf4>
  408034:	ldr	x0, [x20, #56]
  408038:	add	x20, x20, #0x30
  40803c:	str	x1, [x20, #8]
  408040:	str	x20, [x19, #48]
  408044:	str	x0, [x19, #56]
  408048:	str	x1, [x0]
  40804c:	mov	x0, x22
  408050:	bl	407fac <namehash@@Base>
  408054:	adrp	x1, 420000 <memcpy@GLIBC_2.17>
  408058:	and	x3, x0, #0x3ff
  40805c:	add	x2, x1, #0xd28
  408060:	ubfiz	x0, x0, #3, #10
  408064:	add	x0, x0, x2
  408068:	add	x4, x19, #0x10
  40806c:	ldr	x2, [x2, x3, lsl #3]
  408070:	str	x2, [x19, #16]
  408074:	cbz	x2, 40807c <namehash@@Base+0xd0>
  408078:	str	x4, [x2, #8]
  40807c:	add	x1, x1, #0xd28
  408080:	str	x0, [x19, #24]
  408084:	str	x4, [x1, x3, lsl #3]
  408088:	mov	x0, x19
  40808c:	ldp	x19, x20, [sp, #16]
  408090:	ldp	x21, x22, [sp, #32]
  408094:	ldr	x23, [sp, #48]
  408098:	ldp	x29, x30, [sp], #64
  40809c:	ret
  4080a0:	and	x3, x21, #0x3ff
  4080a4:	adrp	x0, 422000 <stderr@@GLIBC_2.17+0x1d20>
  4080a8:	add	x2, x0, #0xd28
  4080ac:	ubfiz	x21, x21, #3, #10
  4080b0:	add	x21, x21, x2
  4080b4:	ldr	x2, [x2, x3, lsl #3]
  4080b8:	str	x2, [x19]
  4080bc:	cbz	x2, 4080c4 <namehash@@Base+0x118>
  4080c0:	str	x19, [x2, #8]
  4080c4:	add	x0, x0, #0xd28
  4080c8:	str	x21, [x19, #8]
  4080cc:	stp	x1, x1, [x19, #48]
  4080d0:	str	x19, [x0, x3, lsl #3]
  4080d4:	b	40804c <namehash@@Base+0xa0>
  4080d8:	stp	x29, x30, [sp, #-48]!
  4080dc:	mov	x29, sp
  4080e0:	stp	x19, x20, [sp, #16]
  4080e4:	ldr	x19, [x2, #416]
  4080e8:	stp	x21, x22, [sp, #32]
  4080ec:	cbz	x19, 40811c <namehash@@Base+0x170>
  4080f0:	ldrh	w20, [x19], #4
  4080f4:	mov	x21, x0
  4080f8:	mov	x22, x1
  4080fc:	sub	w20, w20, #0x4
  408100:	cmp	w20, #0x3
  408104:	b.le	40811c <namehash@@Base+0x170>
  408108:	ldrh	w0, [x19]
  40810c:	cmp	w0, #0x3
  408110:	b.ls	40811c <namehash@@Base+0x170>  // b.plast
  408114:	cmp	w0, w20
  408118:	b.le	40812c <namehash@@Base+0x180>
  40811c:	ldp	x19, x20, [sp, #16]
  408120:	ldp	x21, x22, [sp, #32]
  408124:	ldp	x29, x30, [sp], #48
  408128:	ret
  40812c:	ldrh	w0, [x19, #2]
  408130:	cmp	w0, #0x35
  408134:	b.ne	408148 <namehash@@Base+0x19c>  // b.any
  408138:	mov	x2, x21
  40813c:	add	x1, x19, #0x4
  408140:	mov	x0, x22
  408144:	bl	407fd0 <namehash@@Base+0x24>
  408148:	ldrh	w2, [x19]
  40814c:	add	w2, w2, #0x3
  408150:	and	w2, w2, #0xfffffffc
  408154:	sub	w20, w20, w2
  408158:	add	x19, x19, w2, uxtw
  40815c:	b	408100 <namehash@@Base+0x154>

0000000000408160 <ll_remember_index@@Base>:
  408160:	sub	sp, sp, #0x200
  408164:	stp	x29, x30, [sp]
  408168:	mov	x29, sp
  40816c:	ldrh	w4, [x0, #4]
  408170:	stp	x19, x20, [sp, #16]
  408174:	mov	x20, x0
  408178:	sub	w0, w4, #0x10
  40817c:	stp	x21, x22, [sp, #32]
  408180:	and	w0, w0, #0xffff
  408184:	cmp	w0, #0x1
  408188:	stp	x23, x24, [sp, #48]
  40818c:	str	x25, [sp, #64]
  408190:	b.ls	4081b4 <ll_remember_index@@Base+0x54>  // b.plast
  408194:	mov	w0, #0x0                   	// #0
  408198:	ldp	x29, x30, [sp]
  40819c:	ldp	x19, x20, [sp, #16]
  4081a0:	ldp	x21, x22, [sp, #32]
  4081a4:	ldp	x23, x24, [sp, #48]
  4081a8:	ldr	x25, [sp, #64]
  4081ac:	add	sp, sp, #0x200
  4081b0:	ret
  4081b4:	ldr	w3, [x20]
  4081b8:	cmp	w3, #0x1f
  4081bc:	b.ls	40833c <ll_remember_index@@Base+0x1dc>  // b.plast
  4081c0:	ldr	w0, [x20, #20]
  4081c4:	bl	407f20 <sprint_time64@@Base+0xd8>
  4081c8:	mov	x19, x0
  4081cc:	cmp	w4, #0x11
  4081d0:	b.ne	4081f8 <ll_remember_index@@Base+0x98>  // b.any
  4081d4:	cbz	x0, 408194 <ll_remember_index@@Base+0x34>
  4081d8:	bl	407f50 <sprint_time64@@Base+0x108>
  4081dc:	add	x0, x19, #0x10
  4081e0:	bl	407f0c <sprint_time64@@Base+0xc4>
  4081e4:	mov	x0, x19
  4081e8:	bl	407f0c <sprint_time64@@Base+0xc4>
  4081ec:	mov	x0, x19
  4081f0:	bl	404f80 <free@plt>
  4081f4:	b	408194 <ll_remember_index@@Base+0x34>
  4081f8:	add	x23, sp, #0x50
  4081fc:	mov	w1, #0x35                  	// #53
  408200:	sub	w3, w3, #0x20
  408204:	add	x2, x20, #0x20
  408208:	mov	x0, x23
  40820c:	mov	w4, #0xffff8000            	// #-32768
  408210:	bl	40bb40 <parse_rtattr_flags@@Base>
  408214:	add	x22, x20, #0x10
  408218:	ldr	x1, [sp, #104]
  40821c:	cbz	x19, 408318 <ll_remember_index@@Base+0x1b8>
  408220:	cbz	x1, 408284 <ll_remember_index@@Base+0x124>
  408224:	ldr	w0, [x20, #24]
  408228:	add	x21, x1, #0x4
  40822c:	str	w0, [x19, #32]
  408230:	mov	x1, x21
  408234:	add	x0, x19, #0x40
  408238:	bl	404f10 <strcmp@plt>
  40823c:	cbz	w0, 408284 <ll_remember_index@@Base+0x124>
  408240:	add	x20, x19, #0x10
  408244:	mov	x0, x20
  408248:	bl	407f0c <sprint_time64@@Base+0xc4>
  40824c:	mov	x0, x21
  408250:	bl	407fac <namehash@@Base>
  408254:	adrp	x1, 420000 <memcpy@GLIBC_2.17>
  408258:	and	x3, x0, #0x3ff
  40825c:	add	x2, x1, #0xd28
  408260:	ubfiz	x0, x0, #3, #10
  408264:	add	x0, x0, x2
  408268:	ldr	x2, [x2, x3, lsl #3]
  40826c:	str	x2, [x19, #16]
  408270:	cbz	x2, 408278 <ll_remember_index@@Base+0x118>
  408274:	str	x20, [x2, #8]
  408278:	add	x1, x1, #0xd28
  40827c:	str	x20, [x1, x3, lsl #3]
  408280:	str	x0, [x19, #24]
  408284:	ldr	x20, [sp, #496]
  408288:	cbnz	x20, 408298 <ll_remember_index@@Base+0x138>
  40828c:	mov	x0, x19
  408290:	bl	407f50 <sprint_time64@@Base+0x108>
  408294:	b	408194 <ll_remember_index@@Base+0x34>
  408298:	ldr	x24, [x19, #48]
  40829c:	ldrh	w25, [x20], #4
  4082a0:	sub	x24, x24, #0x30
  4082a4:	sub	w25, w25, #0x4
  4082a8:	cmp	w25, #0x3
  4082ac:	b.le	4082c4 <ll_remember_index@@Base+0x164>
  4082b0:	ldrh	w21, [x20]
  4082b4:	cmp	w21, #0x3
  4082b8:	b.ls	4082c4 <ll_remember_index@@Base+0x164>  // b.plast
  4082bc:	cmp	w25, w21
  4082c0:	b.ge	4082e0 <ll_remember_index@@Base+0x180>  // b.tcont
  4082c4:	mov	x0, x19
  4082c8:	bl	407f50 <sprint_time64@@Base+0x108>
  4082cc:	mov	x2, x23
  4082d0:	mov	x1, x22
  4082d4:	mov	x0, x19
  4082d8:	bl	4080d8 <namehash@@Base+0x12c>
  4082dc:	b	408194 <ll_remember_index@@Base+0x34>
  4082e0:	ldrh	w0, [x20, #2]
  4082e4:	cmp	w0, #0x35
  4082e8:	b.ne	408304 <ll_remember_index@@Base+0x1a4>  // b.any
  4082ec:	add	x1, x24, #0x40
  4082f0:	add	x0, x20, #0x4
  4082f4:	bl	404f10 <strcmp@plt>
  4082f8:	cbnz	w0, 4082c4 <ll_remember_index@@Base+0x164>
  4082fc:	ldr	x24, [x24, #48]
  408300:	sub	x24, x24, #0x30
  408304:	add	w21, w21, #0x3
  408308:	and	w21, w21, #0xfffffffc
  40830c:	sub	w25, w25, w21
  408310:	add	x20, x20, w21, uxtw
  408314:	b	4082a8 <ll_remember_index@@Base+0x148>
  408318:	cbz	x1, 408194 <ll_remember_index@@Base+0x34>
  40831c:	add	x1, x1, #0x4
  408320:	mov	x0, x22
  408324:	mov	x2, #0x0                   	// #0
  408328:	bl	407fd0 <namehash@@Base+0x24>
  40832c:	cbz	x0, 408194 <ll_remember_index@@Base+0x34>
  408330:	mov	x2, x23
  408334:	mov	x1, x22
  408338:	b	4082d8 <ll_remember_index@@Base+0x178>
  40833c:	mov	w0, #0xffffffff            	// #-1
  408340:	b	408198 <ll_remember_index@@Base+0x38>
  408344:	sub	sp, sp, #0x490
  408348:	mov	x2, #0x420                 	// #1056
  40834c:	stp	x29, x30, [sp]
  408350:	mov	x29, sp
  408354:	stp	x19, x20, [sp, #16]
  408358:	add	x20, sp, #0x70
  40835c:	mov	x19, x0
  408360:	mov	x0, x20
  408364:	stp	x21, x22, [sp, #32]
  408368:	mov	w21, w1
  40836c:	mov	w1, #0x0                   	// #0
  408370:	bl	404e10 <memset@plt>
  408374:	mov	x0, #0x20                  	// #32
  408378:	str	w21, [sp, #132]
  40837c:	movk	x0, #0x12, lsl #32
  408380:	add	x21, sp, #0x38
  408384:	movk	x0, #0x1, lsl #48
  408388:	mov	w1, #0x0                   	// #0
  40838c:	stp	xzr, xzr, [sp, #56]
  408390:	stp	xzr, xzr, [sp, #72]
  408394:	stp	xzr, xzr, [sp, #88]
  408398:	stp	xzr, x0, [sp, #104]
  40839c:	mov	x0, x21
  4083a0:	bl	40a5e0 <rtnl_open@@Base>
  4083a4:	tbnz	w0, #31, 408458 <ll_remember_index@@Base+0x2f8>
  4083a8:	mov	x0, x20
  4083ac:	mov	w3, #0x9                   	// #9
  4083b0:	mov	w2, #0x1d                  	// #29
  4083b4:	mov	w1, #0x420                 	// #1056
  4083b8:	bl	40b71c <addattr32@@Base>
  4083bc:	cbz	x19, 4083f8 <ll_remember_index@@Base+0x298>
  4083c0:	mov	x0, x19
  4083c4:	bl	406728 <check_ifname@@Base>
  4083c8:	cmp	w0, #0x0
  4083cc:	mov	w2, #0x35                  	// #53
  4083d0:	mov	x0, x19
  4083d4:	mov	w22, #0x3                   	// #3
  4083d8:	csel	w22, w22, w2, eq  // eq = none
  4083dc:	bl	404c50 <strlen@plt>
  4083e0:	add	w4, w0, #0x1
  4083e4:	mov	x3, x19
  4083e8:	mov	w2, w22
  4083ec:	mov	x0, x20
  4083f0:	mov	w1, #0x420                 	// #1056
  4083f4:	bl	40b634 <addattr_l@@Base>
  4083f8:	add	x2, sp, #0x30
  4083fc:	mov	x1, x20
  408400:	mov	x0, x21
  408404:	bl	40b1d0 <rtnl_talk_suppress_rtnl_errmsg@@Base>
  408408:	tbnz	w0, #31, 408450 <ll_remember_index@@Base+0x2f0>
  40840c:	ldr	x0, [sp, #48]
  408410:	mov	x1, #0x0                   	// #0
  408414:	bl	408160 <ll_remember_index@@Base>
  408418:	mov	w19, w0
  40841c:	cbnz	w0, 408428 <ll_remember_index@@Base+0x2c8>
  408420:	ldr	x0, [sp, #48]
  408424:	ldr	w19, [x0, #20]
  408428:	ldr	x0, [sp, #48]
  40842c:	bl	404f80 <free@plt>
  408430:	mov	x0, x21
  408434:	bl	40a424 <rtnl_close@@Base>
  408438:	mov	w0, w19
  40843c:	ldp	x29, x30, [sp]
  408440:	ldp	x19, x20, [sp, #16]
  408444:	ldp	x21, x22, [sp, #32]
  408448:	add	sp, sp, #0x490
  40844c:	ret
  408450:	mov	w19, #0x0                   	// #0
  408454:	b	408430 <ll_remember_index@@Base+0x2d0>
  408458:	mov	w19, #0x0                   	// #0
  40845c:	b	408438 <ll_remember_index@@Base+0x2d8>

0000000000408460 <ll_idx_n2a@@Base>:
  408460:	stp	x29, x30, [sp, #-32]!
  408464:	mov	w3, w0
  408468:	mov	x1, #0x10                  	// #16
  40846c:	mov	x29, sp
  408470:	str	x19, [sp, #16]
  408474:	adrp	x19, 420000 <memcpy@GLIBC_2.17>
  408478:	add	x19, x19, #0xd00
  40847c:	adrp	x2, 40c000 <_IO_stdin_used@@Base+0x268>
  408480:	mov	x0, x19
  408484:	add	x2, x2, #0x432
  408488:	bl	404d50 <snprintf@plt>
  40848c:	mov	x0, x19
  408490:	ldr	x19, [sp, #16]
  408494:	ldp	x29, x30, [sp], #32
  408498:	ret

000000000040849c <ll_index_to_name@@Base>:
  40849c:	cbz	w0, 408524 <ll_index_to_name@@Base+0x88>
  4084a0:	stp	x29, x30, [sp, #-32]!
  4084a4:	mov	x29, sp
  4084a8:	stp	x19, x20, [sp, #16]
  4084ac:	mov	w20, w0
  4084b0:	bl	407f20 <sprint_time64@@Base+0xd8>
  4084b4:	cbz	x0, 4084c8 <ll_index_to_name@@Base+0x2c>
  4084b8:	add	x0, x0, #0x40
  4084bc:	ldp	x19, x20, [sp, #16]
  4084c0:	ldp	x29, x30, [sp], #32
  4084c4:	ret
  4084c8:	mov	w1, w20
  4084cc:	bl	408344 <ll_remember_index@@Base+0x1e4>
  4084d0:	cmp	w0, w20
  4084d4:	b.ne	4084e8 <ll_index_to_name@@Base+0x4c>  // b.any
  4084d8:	bl	407f20 <sprint_time64@@Base+0xd8>
  4084dc:	cbz	x0, 4084e8 <ll_index_to_name@@Base+0x4c>
  4084e0:	add	x0, x0, #0x40
  4084e4:	b	4084bc <ll_index_to_name@@Base+0x20>
  4084e8:	adrp	x19, 420000 <memcpy@GLIBC_2.17>
  4084ec:	add	x0, x19, #0xd00
  4084f0:	add	x19, x0, #0x10
  4084f4:	mov	w0, w20
  4084f8:	mov	x1, x19
  4084fc:	bl	404e00 <if_indextoname@plt>
  408500:	cbnz	x0, 40851c <ll_index_to_name@@Base+0x80>
  408504:	adrp	x2, 40c000 <_IO_stdin_used@@Base+0x268>
  408508:	mov	w3, w20
  40850c:	add	x2, x2, #0x432
  408510:	mov	x0, x19
  408514:	mov	x1, #0x10                  	// #16
  408518:	bl	404d50 <snprintf@plt>
  40851c:	mov	x0, x19
  408520:	b	4084bc <ll_index_to_name@@Base+0x20>
  408524:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  408528:	add	x0, x0, #0x437
  40852c:	ret

0000000000408530 <ll_index_to_type@@Base>:
  408530:	cbz	w0, 408550 <ll_index_to_type@@Base+0x20>
  408534:	stp	x29, x30, [sp, #-16]!
  408538:	mov	x29, sp
  40853c:	bl	407f20 <sprint_time64@@Base+0xd8>
  408540:	cbz	x0, 408558 <ll_index_to_type@@Base+0x28>
  408544:	ldrh	w0, [x0, #40]
  408548:	ldp	x29, x30, [sp], #16
  40854c:	ret
  408550:	mov	w0, #0xffffffff            	// #-1
  408554:	ret
  408558:	mov	w0, #0xffffffff            	// #-1
  40855c:	b	408548 <ll_index_to_type@@Base+0x18>

0000000000408560 <ll_index_to_flags@@Base>:
  408560:	cbz	w0, 408580 <ll_index_to_flags@@Base+0x20>
  408564:	stp	x29, x30, [sp, #-16]!
  408568:	mov	x29, sp
  40856c:	bl	407f20 <sprint_time64@@Base+0xd8>
  408570:	cbz	x0, 408588 <ll_index_to_flags@@Base+0x28>
  408574:	ldr	w0, [x0, #32]
  408578:	ldp	x29, x30, [sp], #16
  40857c:	ret
  408580:	mov	w0, #0x0                   	// #0
  408584:	ret
  408588:	mov	w0, #0xffffffff            	// #-1
  40858c:	b	408578 <ll_index_to_flags@@Base+0x18>

0000000000408590 <ll_name_to_index@@Base>:
  408590:	stp	x29, x30, [sp, #-64]!
  408594:	mov	x29, sp
  408598:	stp	x19, x20, [sp, #16]
  40859c:	str	x21, [sp, #32]
  4085a0:	cbz	x0, 408634 <ll_name_to_index@@Base+0xa4>
  4085a4:	mov	x20, x0
  4085a8:	bl	407fac <namehash@@Base>
  4085ac:	adrp	x1, 420000 <memcpy@GLIBC_2.17>
  4085b0:	and	x0, x0, #0x3ff
  4085b4:	add	x1, x1, #0xd28
  4085b8:	ldr	x19, [x1, x0, lsl #3]
  4085bc:	cbnz	x19, 408618 <ll_name_to_index@@Base+0x88>
  4085c0:	mov	x0, x20
  4085c4:	mov	w1, #0x0                   	// #0
  4085c8:	bl	408344 <ll_remember_index@@Base+0x1e4>
  4085cc:	mov	w19, w0
  4085d0:	cbnz	w0, 408604 <ll_name_to_index@@Base+0x74>
  4085d4:	mov	x0, x20
  4085d8:	bl	405080 <if_nametoindex@plt>
  4085dc:	mov	w19, w0
  4085e0:	cbnz	w0, 408604 <ll_name_to_index@@Base+0x74>
  4085e4:	add	x2, sp, #0x3c
  4085e8:	mov	x0, x20
  4085ec:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  4085f0:	add	x1, x1, #0x432
  4085f4:	bl	4050b0 <__isoc99_sscanf@plt>
  4085f8:	cmp	w0, #0x1
  4085fc:	b.ne	408604 <ll_name_to_index@@Base+0x74>  // b.any
  408600:	ldr	w19, [sp, #60]
  408604:	mov	w0, w19
  408608:	ldp	x19, x20, [sp, #16]
  40860c:	ldr	x21, [sp, #32]
  408610:	ldp	x29, x30, [sp], #64
  408614:	ret
  408618:	sub	x21, x19, #0x10
  40861c:	mov	x1, x20
  408620:	add	x0, x19, #0x30
  408624:	bl	404f10 <strcmp@plt>
  408628:	cbz	w0, 40863c <ll_name_to_index@@Base+0xac>
  40862c:	ldr	x19, [x19]
  408630:	b	4085bc <ll_name_to_index@@Base+0x2c>
  408634:	mov	w19, #0x0                   	// #0
  408638:	b	408604 <ll_name_to_index@@Base+0x74>
  40863c:	ldr	w19, [x21, #36]
  408640:	b	408604 <ll_name_to_index@@Base+0x74>

0000000000408644 <ll_drop_by_index@@Base>:
  408644:	stp	x29, x30, [sp, #-16]!
  408648:	mov	x29, sp
  40864c:	bl	407f20 <sprint_time64@@Base+0xd8>
  408650:	cbz	x0, 408670 <ll_drop_by_index@@Base+0x2c>
  408654:	mov	x2, x0
  408658:	bl	407f0c <sprint_time64@@Base+0xc4>
  40865c:	add	x0, x2, #0x10
  408660:	bl	407f0c <sprint_time64@@Base+0xc4>
  408664:	mov	x0, x2
  408668:	ldp	x29, x30, [sp], #16
  40866c:	b	404f80 <free@plt>
  408670:	ldp	x29, x30, [sp], #16
  408674:	ret

0000000000408678 <ll_init_map@@Base>:
  408678:	stp	x29, x30, [sp, #-32]!
  40867c:	mov	x29, sp
  408680:	stp	x19, x20, [sp, #16]
  408684:	adrp	x19, 420000 <memcpy@GLIBC_2.17>
  408688:	add	x19, x19, #0xd00
  40868c:	ldr	w1, [x19, #32]
  408690:	cbnz	w1, 4086f4 <ll_init_map@@Base+0x7c>
  408694:	mov	x20, x0
  408698:	bl	40aac0 <rtnl_linkdump_req@@Base>
  40869c:	tbz	w0, #31, 4086b4 <ll_init_map@@Base+0x3c>
  4086a0:	adrp	x0, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  4086a4:	add	x0, x0, #0xf76
  4086a8:	bl	404c80 <perror@plt>
  4086ac:	mov	w0, #0x1                   	// #1
  4086b0:	bl	404c70 <exit@plt>
  4086b4:	adrp	x1, 41f000 <_IO_stdin_used@@Base+0x13268>
  4086b8:	mov	x0, x20
  4086bc:	mov	w3, #0x0                   	// #0
  4086c0:	mov	x2, #0x0                   	// #0
  4086c4:	ldr	x1, [x1, #4008]
  4086c8:	bl	40ae78 <rtnl_dump_filter_nc@@Base>
  4086cc:	tbz	w0, #31, 4086ec <ll_init_map@@Base+0x74>
  4086d0:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  4086d4:	ldr	x0, [x0, #3992]
  4086d8:	ldr	x1, [x0]
  4086dc:	adrp	x0, 40b000 <rtnl_dump_filter_nc@@Base+0x188>
  4086e0:	add	x0, x0, #0xf8f
  4086e4:	bl	404c60 <fputs@plt>
  4086e8:	b	4086ac <ll_init_map@@Base+0x34>
  4086ec:	mov	w0, #0x1                   	// #1
  4086f0:	str	w0, [x19, #32]
  4086f4:	ldp	x19, x20, [sp, #16]
  4086f8:	ldp	x29, x30, [sp], #32
  4086fc:	ret

0000000000408700 <ll_addr_n2a@@Base>:
  408700:	stp	x29, x30, [sp, #-80]!
  408704:	cmp	w1, #0x4
  408708:	mov	x29, sp
  40870c:	stp	x19, x20, [sp, #16]
  408710:	mov	x19, x3
  408714:	stp	x21, x22, [sp, #32]
  408718:	mov	x22, x0
  40871c:	mov	w21, w4
  408720:	stp	x23, x24, [sp, #48]
  408724:	mov	w24, w1
  408728:	stp	x25, x26, [sp, #64]
  40872c:	b.ne	40876c <ll_addr_n2a@@Base+0x6c>  // b.any
  408730:	and	w0, w2, #0xfffffff7
  408734:	cmp	w0, #0x300
  408738:	b.eq	408744 <ll_addr_n2a@@Base+0x44>  // b.none
  40873c:	cmp	w2, #0x30a
  408740:	b.ne	408798 <ll_addr_n2a@@Base+0x98>  // b.any
  408744:	mov	w3, w21
  408748:	mov	x2, x19
  40874c:	mov	x1, x22
  408750:	mov	w0, #0x2                   	// #2
  408754:	ldp	x19, x20, [sp, #16]
  408758:	ldp	x21, x22, [sp, #32]
  40875c:	ldp	x23, x24, [sp, #48]
  408760:	ldp	x25, x26, [sp, #64]
  408764:	ldp	x29, x30, [sp], #80
  408768:	b	405170 <inet_ntop@plt>
  40876c:	cmp	w1, #0x10
  408770:	b.ne	408798 <ll_addr_n2a@@Base+0x98>  // b.any
  408774:	cmp	w2, #0x301
  408778:	mov	w0, #0x337                 	// #823
  40877c:	ccmp	w2, w0, #0x4, ne  // ne = any
  408780:	b.ne	408798 <ll_addr_n2a@@Base+0x98>  // b.any
  408784:	mov	w3, w4
  408788:	mov	x2, x19
  40878c:	mov	x1, x22
  408790:	mov	w0, #0xa                   	// #10
  408794:	b	408754 <ll_addr_n2a@@Base+0x54>
  408798:	sxtw	x23, w21
  40879c:	ldrb	w3, [x22]
  4087a0:	mov	x1, x23
  4087a4:	adrp	x26, 40c000 <_IO_stdin_used@@Base+0x268>
  4087a8:	add	x25, x19, #0x2
  4087ac:	add	x26, x26, #0x439
  4087b0:	add	x23, x19, x23
  4087b4:	mov	x20, #0x1                   	// #1
  4087b8:	mov	x0, x19
  4087bc:	adrp	x2, 40c000 <_IO_stdin_used@@Base+0x268>
  4087c0:	add	x2, x2, #0x43a
  4087c4:	bl	404d50 <snprintf@plt>
  4087c8:	add	w0, w20, w20, lsl #1
  4087cc:	sub	w0, w0, #0x1
  4087d0:	cmp	w21, w0
  4087d4:	ccmp	w24, w20, #0x4, gt
  4087d8:	b.gt	4087f8 <ll_addr_n2a@@Base+0xf8>
  4087dc:	mov	x0, x19
  4087e0:	ldp	x19, x20, [sp, #16]
  4087e4:	ldp	x21, x22, [sp, #32]
  4087e8:	ldp	x23, x24, [sp, #48]
  4087ec:	ldp	x25, x26, [sp, #64]
  4087f0:	ldp	x29, x30, [sp], #80
  4087f4:	ret
  4087f8:	ldrb	w3, [x22, x20]
  4087fc:	sub	x1, x23, x25
  408800:	mov	x0, x25
  408804:	mov	x2, x26
  408808:	add	x20, x20, #0x1
  40880c:	add	x25, x25, #0x3
  408810:	bl	404d50 <snprintf@plt>
  408814:	b	4087c8 <ll_addr_n2a@@Base+0xc8>

0000000000408818 <ll_addr_a2n@@Base>:
  408818:	stp	x29, x30, [sp, #-352]!
  40881c:	mov	x29, sp
  408820:	stp	x19, x20, [sp, #16]
  408824:	mov	x19, x2
  408828:	stp	x21, x22, [sp, #32]
  40882c:	stp	x23, x24, [sp, #48]
  408830:	mov	x24, x0
  408834:	mov	w23, w1
  408838:	mov	x0, x2
  40883c:	mov	w1, #0x2e                  	// #46
  408840:	stp	x25, x26, [sp, #64]
  408844:	bl	404fc0 <strchr@plt>
  408848:	cbz	x0, 408910 <ll_addr_a2n@@Base+0xf8>
  40884c:	mov	x1, x19
  408850:	add	x0, sp, #0x58
  408854:	mov	w2, #0x2                   	// #2
  408858:	bl	406168 <get_addr_1@@Base>
  40885c:	cbz	w0, 408884 <ll_addr_a2n@@Base+0x6c>
  408860:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  408864:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  408868:	mov	x2, x19
  40886c:	add	x1, x1, #0x43f
  408870:	ldr	x0, [x0, #3992]
  408874:	ldr	x0, [x0]
  408878:	bl	405150 <fprintf@plt>
  40887c:	mov	w0, #0xffffffff            	// #-1
  408880:	b	408898 <ll_addr_a2n@@Base+0x80>
  408884:	cmp	w23, #0x3
  408888:	b.le	40887c <ll_addr_a2n@@Base+0x64>
  40888c:	ldr	w0, [sp, #96]
  408890:	str	w0, [x24]
  408894:	mov	w0, #0x4                   	// #4
  408898:	ldp	x19, x20, [sp, #16]
  40889c:	ldp	x21, x22, [sp, #32]
  4088a0:	ldp	x23, x24, [sp, #48]
  4088a4:	ldp	x25, x26, [sp, #64]
  4088a8:	ldp	x29, x30, [sp], #352
  4088ac:	ret
  4088b0:	mov	x0, x19
  4088b4:	mov	w1, #0x3a                  	// #58
  4088b8:	bl	404fc0 <strchr@plt>
  4088bc:	mov	x21, x0
  4088c0:	cbz	x0, 4088c8 <ll_addr_a2n@@Base+0xb0>
  4088c4:	strb	wzr, [x21], #1
  4088c8:	mov	x2, x26
  4088cc:	mov	x1, x25
  4088d0:	mov	x0, x19
  4088d4:	bl	4050b0 <__isoc99_sscanf@plt>
  4088d8:	cmp	w0, #0x1
  4088dc:	b.ne	408860 <ll_addr_a2n@@Base+0x48>  // b.any
  4088e0:	ldr	w0, [sp, #88]
  4088e4:	cmp	w0, #0xff
  4088e8:	b.hi	408860 <ll_addr_a2n@@Base+0x48>  // b.pmore
  4088ec:	strb	w0, [x24, x22]
  4088f0:	add	x22, x22, #0x1
  4088f4:	cbz	x21, 408908 <ll_addr_a2n@@Base+0xf0>
  4088f8:	mov	x19, x21
  4088fc:	mov	w20, w22
  408900:	cmp	w23, w22
  408904:	b.gt	4088b0 <ll_addr_a2n@@Base+0x98>
  408908:	add	w0, w20, #0x1
  40890c:	b	408898 <ll_addr_a2n@@Base+0x80>
  408910:	adrp	x25, 40c000 <_IO_stdin_used@@Base+0x268>
  408914:	add	x26, sp, #0x58
  408918:	add	x25, x25, #0x458
  40891c:	mov	x22, #0x0                   	// #0
  408920:	b	4088fc <ll_addr_a2n@@Base+0xe4>
  408924:	cbz	w0, 4089a4 <ll_addr_a2n@@Base+0x18c>
  408928:	stp	x29, x30, [sp, #-32]!
  40892c:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  408930:	mov	x29, sp
  408934:	ldr	x0, [x0, #4016]
  408938:	stp	x19, x20, [sp, #16]
  40893c:	and	w20, w1, #0xff
  408940:	ldr	x0, [x0]
  408944:	bl	40987c <jsonw_new@@Base>
  408948:	adrp	x1, 424000 <stderr@@GLIBC_2.17+0x3d20>
  40894c:	mov	x19, x1
  408950:	str	x0, [x1, #3368]
  408954:	cbnz	x0, 40896c <ll_addr_a2n@@Base+0x154>
  408958:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  40895c:	add	x0, x0, #0x45b
  408960:	bl	404c80 <perror@plt>
  408964:	mov	w0, #0x1                   	// #1
  408968:	bl	404c70 <exit@plt>
  40896c:	adrp	x1, 41f000 <_IO_stdin_used@@Base+0x13268>
  408970:	ldr	x1, [x1, #4056]
  408974:	ldr	w1, [x1]
  408978:	cbz	w1, 408984 <ll_addr_a2n@@Base+0x16c>
  40897c:	mov	w1, #0x1                   	// #1
  408980:	bl	40991c <jsonw_pretty@@Base>
  408984:	cbz	w20, 408998 <ll_addr_a2n@@Base+0x180>
  408988:	ldr	x0, [x19, #3368]
  40898c:	ldp	x19, x20, [sp, #16]
  408990:	ldp	x29, x30, [sp], #32
  408994:	b	409ab4 <jsonw_start_array@@Base>
  408998:	ldp	x19, x20, [sp, #16]
  40899c:	ldp	x29, x30, [sp], #32
  4089a0:	ret
  4089a4:	ret

00000000004089a8 <new_json_obj@@Base>:
  4089a8:	mov	w1, #0x1                   	// #1
  4089ac:	b	408924 <ll_addr_a2n@@Base+0x10c>

00000000004089b0 <delete_json_obj@@Base>:
  4089b0:	stp	x29, x30, [sp, #-32]!
  4089b4:	adrp	x0, 424000 <stderr@@GLIBC_2.17+0x3d20>
  4089b8:	mov	x29, sp
  4089bc:	str	x19, [sp, #16]
  4089c0:	add	x19, x0, #0xd28
  4089c4:	ldr	x0, [x0, #3368]
  4089c8:	cbz	x0, 4089e0 <delete_json_obj@@Base+0x30>
  4089cc:	bl	409b0c <jsonw_end_array@@Base>
  4089d0:	mov	x0, x19
  4089d4:	ldr	x19, [sp, #16]
  4089d8:	ldp	x29, x30, [sp], #32
  4089dc:	b	4098b0 <jsonw_destroy@@Base>
  4089e0:	ldr	x19, [sp, #16]
  4089e4:	ldp	x29, x30, [sp], #32
  4089e8:	ret

00000000004089ec <new_json_obj_plain@@Base>:
  4089ec:	mov	w1, #0x0                   	// #0
  4089f0:	b	408924 <ll_addr_a2n@@Base+0x10c>

00000000004089f4 <delete_json_obj_plain@@Base>:
  4089f4:	adrp	x1, 424000 <stderr@@GLIBC_2.17+0x3d20>
  4089f8:	add	x0, x1, #0xd28
  4089fc:	ldr	x1, [x1, #3368]
  408a00:	cbz	x1, 408a08 <delete_json_obj_plain@@Base+0x14>
  408a04:	b	4098b0 <jsonw_destroy@@Base>
  408a08:	ret

0000000000408a0c <is_json_context@@Base>:
  408a0c:	adrp	x0, 424000 <stderr@@GLIBC_2.17+0x3d20>
  408a10:	ldr	x0, [x0, #3368]
  408a14:	cmp	x0, #0x0
  408a18:	cset	w0, ne  // ne = any
  408a1c:	ret

0000000000408a20 <get_json_writer@@Base>:
  408a20:	adrp	x0, 424000 <stderr@@GLIBC_2.17+0x3d20>
  408a24:	ldr	x0, [x0, #3368]
  408a28:	ret

0000000000408a2c <open_json_object@@Base>:
  408a2c:	adrp	x2, 424000 <stderr@@GLIBC_2.17+0x3d20>
  408a30:	mov	x1, x0
  408a34:	ldr	x0, [x2, #3368]
  408a38:	cbz	x0, 408a64 <open_json_object@@Base+0x38>
  408a3c:	stp	x29, x30, [sp, #-32]!
  408a40:	mov	x29, sp
  408a44:	str	x19, [sp, #16]
  408a48:	mov	x19, x2
  408a4c:	cbz	x1, 408a54 <open_json_object@@Base+0x28>
  408a50:	bl	409924 <jsonw_name@@Base>
  408a54:	ldr	x0, [x19, #3368]
  408a58:	ldr	x19, [sp, #16]
  408a5c:	ldp	x29, x30, [sp], #32
  408a60:	b	409a20 <jsonw_start_object@@Base>
  408a64:	ret

0000000000408a68 <close_json_object@@Base>:
  408a68:	adrp	x0, 424000 <stderr@@GLIBC_2.17+0x3d20>
  408a6c:	ldr	x0, [x0, #3368]
  408a70:	cbz	x0, 408a78 <close_json_object@@Base+0x10>
  408a74:	b	409a5c <jsonw_end_object@@Base>
  408a78:	ret

0000000000408a7c <open_json_array@@Base>:
  408a7c:	adrp	x4, 424000 <stderr@@GLIBC_2.17+0x3d20>
  408a80:	mov	w3, w0
  408a84:	mov	x2, x1
  408a88:	tst	w3, #0x6
  408a8c:	ldr	x0, [x4, #3368]
  408a90:	b.eq	408ac0 <open_json_array@@Base+0x44>  // b.none
  408a94:	cbz	x0, 408ac4 <open_json_array@@Base+0x48>
  408a98:	stp	x29, x30, [sp, #-32]!
  408a9c:	mov	x29, sp
  408aa0:	str	x19, [sp, #16]
  408aa4:	mov	x19, x4
  408aa8:	cbz	x1, 408ab0 <open_json_array@@Base+0x34>
  408aac:	bl	409924 <jsonw_name@@Base>
  408ab0:	ldr	x0, [x19, #3368]
  408ab4:	ldr	x19, [sp, #16]
  408ab8:	ldp	x29, x30, [sp], #32
  408abc:	b	409ab4 <jsonw_start_array@@Base>
  408ac0:	cbnz	x0, 408ae0 <open_json_array@@Base+0x64>
  408ac4:	mov	w0, #0x5                   	// #5
  408ac8:	tst	w3, w0
  408acc:	b.eq	408ae0 <open_json_array@@Base+0x64>  // b.none
  408ad0:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  408ad4:	mov	x1, x2
  408ad8:	add	x0, x0, #0x52
  408adc:	b	4050f0 <printf@plt>
  408ae0:	ret

0000000000408ae4 <close_json_array@@Base>:
  408ae4:	mov	w2, w0
  408ae8:	adrp	x0, 424000 <stderr@@GLIBC_2.17+0x3d20>
  408aec:	tst	w2, #0x6
  408af0:	ldr	x0, [x0, #3368]
  408af4:	b.eq	408b00 <close_json_array@@Base+0x1c>  // b.none
  408af8:	cbz	x0, 408b04 <close_json_array@@Base+0x20>
  408afc:	b	409b0c <jsonw_end_array@@Base>
  408b00:	cbnz	x0, 408b1c <close_json_array@@Base+0x38>
  408b04:	mov	w0, #0x5                   	// #5
  408b08:	tst	w2, w0
  408b0c:	b.eq	408b1c <close_json_array@@Base+0x38>  // b.none
  408b10:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  408b14:	add	x0, x0, #0x52
  408b18:	b	4050f0 <printf@plt>
  408b1c:	ret

0000000000408b20 <print_color_int@@Base>:
  408b20:	mov	w5, w0
  408b24:	adrp	x0, 424000 <stderr@@GLIBC_2.17+0x3d20>
  408b28:	mov	x6, x2
  408b2c:	tst	w5, #0x6
  408b30:	mov	x2, x3
  408b34:	mov	w3, w4
  408b38:	ldr	x0, [x0, #3368]
  408b3c:	b.eq	408b5c <print_color_int@@Base+0x3c>  // b.none
  408b40:	cbz	x0, 408b60 <print_color_int@@Base+0x40>
  408b44:	cbnz	x6, 408b50 <print_color_int@@Base+0x30>
  408b48:	mov	w1, w4
  408b4c:	b	409c3c <jsonw_int@@Base>
  408b50:	mov	w2, w4
  408b54:	mov	x1, x6
  408b58:	b	409e1c <jsonw_int_field@@Base>
  408b5c:	cbnz	x0, 408b7c <print_color_int@@Base+0x5c>
  408b60:	mov	w0, #0x5                   	// #5
  408b64:	tst	w5, w0
  408b68:	b.eq	408b7c <print_color_int@@Base+0x5c>  // b.none
  408b6c:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  408b70:	ldr	x0, [x0, #4016]
  408b74:	ldr	x0, [x0]
  408b78:	b	409384 <color_fprintf@@Base>
  408b7c:	ret

0000000000408b80 <print_color_s64@@Base>:
  408b80:	mov	w5, w0
  408b84:	adrp	x0, 424000 <stderr@@GLIBC_2.17+0x3d20>
  408b88:	mov	x6, x2
  408b8c:	tst	w5, #0x6
  408b90:	mov	x2, x3
  408b94:	mov	x3, x4
  408b98:	ldr	x0, [x0, #3368]
  408b9c:	b.eq	408bbc <print_color_s64@@Base+0x3c>  // b.none
  408ba0:	cbz	x0, 408bc0 <print_color_s64@@Base+0x40>
  408ba4:	cbnz	x6, 408bb0 <print_color_s64@@Base+0x30>
  408ba8:	mov	x1, x4
  408bac:	b	409c4c <jsonw_s64@@Base>
  408bb0:	mov	x2, x4
  408bb4:	mov	x1, x6
  408bb8:	b	409e48 <jsonw_s64_field@@Base>
  408bbc:	cbnz	x0, 408bdc <print_color_s64@@Base+0x5c>
  408bc0:	mov	w0, #0x5                   	// #5
  408bc4:	tst	w5, w0
  408bc8:	b.eq	408bdc <print_color_s64@@Base+0x5c>  // b.none
  408bcc:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  408bd0:	ldr	x0, [x0, #4016]
  408bd4:	ldr	x0, [x0]
  408bd8:	b	409384 <color_fprintf@@Base>
  408bdc:	ret

0000000000408be0 <print_color_hhu@@Base>:
  408be0:	mov	w5, w0
  408be4:	adrp	x0, 424000 <stderr@@GLIBC_2.17+0x3d20>
  408be8:	mov	x6, x2
  408bec:	tst	w5, #0x6
  408bf0:	mov	x2, x3
  408bf4:	and	w3, w4, #0xff
  408bf8:	ldr	x0, [x0, #3368]
  408bfc:	b.eq	408c1c <print_color_hhu@@Base+0x3c>  // b.none
  408c00:	cbz	x0, 408c20 <print_color_hhu@@Base+0x40>
  408c04:	cbnz	x6, 408c10 <print_color_hhu@@Base+0x30>
  408c08:	mov	w1, w3
  408c0c:	b	409bd8 <jsonw_hhu@@Base>
  408c10:	mov	w2, w3
  408c14:	mov	x1, x6
  408c18:	b	409d6c <jsonw_hhu_field@@Base>
  408c1c:	cbnz	x0, 408c3c <print_color_hhu@@Base+0x5c>
  408c20:	mov	w0, #0x5                   	// #5
  408c24:	tst	w5, w0
  408c28:	b.eq	408c3c <print_color_hhu@@Base+0x5c>  // b.none
  408c2c:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  408c30:	ldr	x0, [x0, #4016]
  408c34:	ldr	x0, [x0]
  408c38:	b	409384 <color_fprintf@@Base>
  408c3c:	ret

0000000000408c40 <print_color_hu@@Base>:
  408c40:	mov	w5, w0
  408c44:	adrp	x0, 424000 <stderr@@GLIBC_2.17+0x3d20>
  408c48:	mov	x6, x2
  408c4c:	tst	w5, #0x6
  408c50:	mov	x2, x3
  408c54:	and	w3, w4, #0xffff
  408c58:	ldr	x0, [x0, #3368]
  408c5c:	b.eq	408c7c <print_color_hu@@Base+0x3c>  // b.none
  408c60:	cbz	x0, 408c80 <print_color_hu@@Base+0x40>
  408c64:	cbnz	x6, 408c70 <print_color_hu@@Base+0x30>
  408c68:	mov	w1, w3
  408c6c:	b	409be8 <jsonw_hu@@Base>
  408c70:	mov	w2, w3
  408c74:	mov	x1, x6
  408c78:	b	409d98 <jsonw_hu_field@@Base>
  408c7c:	cbnz	x0, 408c9c <print_color_hu@@Base+0x5c>
  408c80:	mov	w0, #0x5                   	// #5
  408c84:	tst	w5, w0
  408c88:	b.eq	408c9c <print_color_hu@@Base+0x5c>  // b.none
  408c8c:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  408c90:	ldr	x0, [x0, #4016]
  408c94:	ldr	x0, [x0]
  408c98:	b	409384 <color_fprintf@@Base>
  408c9c:	ret

0000000000408ca0 <print_color_uint@@Base>:
  408ca0:	mov	w5, w0
  408ca4:	adrp	x0, 424000 <stderr@@GLIBC_2.17+0x3d20>
  408ca8:	mov	x6, x2
  408cac:	tst	w5, #0x6
  408cb0:	mov	x2, x3
  408cb4:	mov	w3, w4
  408cb8:	ldr	x0, [x0, #3368]
  408cbc:	b.eq	408cdc <print_color_uint@@Base+0x3c>  // b.none
  408cc0:	cbz	x0, 408ce0 <print_color_uint@@Base+0x40>
  408cc4:	cbnz	x6, 408cd0 <print_color_uint@@Base+0x30>
  408cc8:	mov	w1, w4
  408ccc:	b	409bf8 <jsonw_uint@@Base>
  408cd0:	mov	w2, w4
  408cd4:	mov	x1, x6
  408cd8:	b	409ce8 <jsonw_uint_field@@Base>
  408cdc:	cbnz	x0, 408cfc <print_color_uint@@Base+0x5c>
  408ce0:	mov	w0, #0x5                   	// #5
  408ce4:	tst	w5, w0
  408ce8:	b.eq	408cfc <print_color_uint@@Base+0x5c>  // b.none
  408cec:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  408cf0:	ldr	x0, [x0, #4016]
  408cf4:	ldr	x0, [x0]
  408cf8:	b	409384 <color_fprintf@@Base>
  408cfc:	ret

0000000000408d00 <print_color_u64@@Base>:
  408d00:	mov	w5, w0
  408d04:	adrp	x0, 424000 <stderr@@GLIBC_2.17+0x3d20>
  408d08:	mov	x6, x2
  408d0c:	tst	w5, #0x6
  408d10:	mov	x2, x3
  408d14:	mov	x3, x4
  408d18:	ldr	x0, [x0, #3368]
  408d1c:	b.eq	408d3c <print_color_u64@@Base+0x3c>  // b.none
  408d20:	cbz	x0, 408d40 <print_color_u64@@Base+0x40>
  408d24:	cbnz	x6, 408d30 <print_color_u64@@Base+0x30>
  408d28:	mov	x1, x4
  408d2c:	b	409c08 <jsonw_u64@@Base>
  408d30:	mov	x2, x4
  408d34:	mov	x1, x6
  408d38:	b	409d14 <jsonw_u64_field@@Base>
  408d3c:	cbnz	x0, 408d5c <print_color_u64@@Base+0x5c>
  408d40:	mov	w0, #0x5                   	// #5
  408d44:	tst	w5, w0
  408d48:	b.eq	408d5c <print_color_u64@@Base+0x5c>  // b.none
  408d4c:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  408d50:	ldr	x0, [x0, #4016]
  408d54:	ldr	x0, [x0]
  408d58:	b	409384 <color_fprintf@@Base>
  408d5c:	ret

0000000000408d60 <print_color_luint@@Base>:
  408d60:	mov	w5, w0
  408d64:	adrp	x0, 424000 <stderr@@GLIBC_2.17+0x3d20>
  408d68:	mov	x6, x2
  408d6c:	tst	w5, #0x6
  408d70:	mov	x2, x3
  408d74:	mov	x3, x4
  408d78:	ldr	x0, [x0, #3368]
  408d7c:	b.eq	408d9c <print_color_luint@@Base+0x3c>  // b.none
  408d80:	cbz	x0, 408da0 <print_color_luint@@Base+0x40>
  408d84:	cbnz	x6, 408d90 <print_color_luint@@Base+0x30>
  408d88:	mov	x1, x4
  408d8c:	b	409c28 <jsonw_luint@@Base>
  408d90:	mov	x2, x4
  408d94:	mov	x1, x6
  408d98:	b	409dc4 <jsonw_luint_field@@Base>
  408d9c:	cbnz	x0, 408dbc <print_color_luint@@Base+0x5c>
  408da0:	mov	w0, #0x5                   	// #5
  408da4:	tst	w5, w0
  408da8:	b.eq	408dbc <print_color_luint@@Base+0x5c>  // b.none
  408dac:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  408db0:	ldr	x0, [x0, #4016]
  408db4:	ldr	x0, [x0]
  408db8:	b	409384 <color_fprintf@@Base>
  408dbc:	ret

0000000000408dc0 <print_color_lluint@@Base>:
  408dc0:	mov	w5, w0
  408dc4:	adrp	x0, 424000 <stderr@@GLIBC_2.17+0x3d20>
  408dc8:	mov	x6, x2
  408dcc:	tst	w5, #0x6
  408dd0:	mov	x2, x3
  408dd4:	mov	x3, x4
  408dd8:	ldr	x0, [x0, #3368]
  408ddc:	b.eq	408dfc <print_color_lluint@@Base+0x3c>  // b.none
  408de0:	cbz	x0, 408e00 <print_color_lluint@@Base+0x40>
  408de4:	cbnz	x6, 408df0 <print_color_lluint@@Base+0x30>
  408de8:	mov	x1, x4
  408dec:	b	409c2c <jsonw_lluint@@Base>
  408df0:	mov	x2, x4
  408df4:	mov	x1, x6
  408df8:	b	409df0 <jsonw_lluint_field@@Base>
  408dfc:	cbnz	x0, 408e1c <print_color_lluint@@Base+0x5c>
  408e00:	mov	w0, #0x5                   	// #5
  408e04:	tst	w5, w0
  408e08:	b.eq	408e1c <print_color_lluint@@Base+0x5c>  // b.none
  408e0c:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  408e10:	ldr	x0, [x0, #4016]
  408e14:	ldr	x0, [x0]
  408e18:	b	409384 <color_fprintf@@Base>
  408e1c:	ret

0000000000408e20 <print_color_float@@Base>:
  408e20:	mov	w4, w0
  408e24:	adrp	x0, 424000 <stderr@@GLIBC_2.17+0x3d20>
  408e28:	mov	x5, x2
  408e2c:	fmov	d1, d0
  408e30:	ldr	x0, [x0, #3368]
  408e34:	mov	x2, x3
  408e38:	tst	w4, #0x6
  408e3c:	b.eq	408e54 <print_color_float@@Base+0x34>  // b.none
  408e40:	cbz	x0, 408e58 <print_color_float@@Base+0x38>
  408e44:	cbnz	x5, 408e4c <print_color_float@@Base+0x2c>
  408e48:	b	409bcc <jsonw_float@@Base>
  408e4c:	mov	x1, x5
  408e50:	b	409cb4 <jsonw_float_field@@Base>
  408e54:	cbnz	x0, 408e78 <print_color_float@@Base+0x58>
  408e58:	mov	w0, #0x5                   	// #5
  408e5c:	tst	w4, w0
  408e60:	b.eq	408e78 <print_color_float@@Base+0x58>  // b.none
  408e64:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  408e68:	fmov	d0, d1
  408e6c:	ldr	x0, [x0, #4016]
  408e70:	ldr	x0, [x0]
  408e74:	b	409384 <color_fprintf@@Base>
  408e78:	ret

0000000000408e7c <print_uint_name_value@@Base>:
  408e7c:	stp	x29, x30, [sp, #-112]!
  408e80:	mov	x3, x0
  408e84:	adrp	x2, 40c000 <_IO_stdin_used@@Base+0x268>
  408e88:	mov	x29, sp
  408e8c:	stp	x19, x20, [sp, #16]
  408e90:	add	x20, sp, #0x30
  408e94:	mov	x19, x0
  408e98:	add	x2, x2, #0x467
  408e9c:	mov	x0, x20
  408ea0:	str	x21, [sp, #32]
  408ea4:	mov	w21, w1
  408ea8:	mov	x1, #0x40                  	// #64
  408eac:	bl	404d50 <snprintf@plt>
  408eb0:	mov	w4, w21
  408eb4:	mov	x3, x20
  408eb8:	mov	x2, x19
  408ebc:	mov	w1, #0x6                   	// #6
  408ec0:	mov	w0, #0x4                   	// #4
  408ec4:	bl	408ca0 <print_color_uint@@Base>
  408ec8:	ldp	x19, x20, [sp, #16]
  408ecc:	ldr	x21, [sp, #32]
  408ed0:	ldp	x29, x30, [sp], #112
  408ed4:	ret

0000000000408ed8 <print_color_string@@Base>:
  408ed8:	mov	w5, w0
  408edc:	adrp	x0, 424000 <stderr@@GLIBC_2.17+0x3d20>
  408ee0:	mov	w6, w1
  408ee4:	tst	w5, #0x6
  408ee8:	mov	x1, x2
  408eec:	mov	x2, x3
  408ef0:	ldr	x0, [x0, #3368]
  408ef4:	mov	x3, x4
  408ef8:	b.eq	408f2c <print_color_string@@Base+0x54>  // b.none
  408efc:	cbz	x0, 408f30 <print_color_string@@Base+0x58>
  408f00:	cmp	x1, #0x0
  408f04:	ccmp	x4, #0x0, #0x0, ne  // ne = any
  408f08:	b.ne	408f10 <print_color_string@@Base+0x38>  // b.any
  408f0c:	b	409924 <jsonw_name@@Base>
  408f10:	cmp	x1, #0x0
  408f14:	ccmp	x4, #0x0, #0x4, eq  // eq = none
  408f18:	b.eq	408f24 <print_color_string@@Base+0x4c>  // b.none
  408f1c:	mov	x1, x4
  408f20:	b	409b70 <jsonw_string@@Base>
  408f24:	mov	x2, x4
  408f28:	b	409c5c <jsonw_string_field@@Base>
  408f2c:	cbnz	x0, 408f50 <print_color_string@@Base+0x78>
  408f30:	mov	w0, #0x5                   	// #5
  408f34:	tst	w5, w0
  408f38:	b.eq	408f50 <print_color_string@@Base+0x78>  // b.none
  408f3c:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  408f40:	mov	w1, w6
  408f44:	ldr	x0, [x0, #4016]
  408f48:	ldr	x0, [x0]
  408f4c:	b	409384 <color_fprintf@@Base>
  408f50:	ret

0000000000408f54 <print_string_name_value@@Base>:
  408f54:	stp	x29, x30, [sp, #-112]!
  408f58:	mov	x3, x0
  408f5c:	adrp	x2, 40c000 <_IO_stdin_used@@Base+0x268>
  408f60:	mov	x29, sp
  408f64:	stp	x19, x20, [sp, #16]
  408f68:	add	x20, sp, #0x30
  408f6c:	mov	x19, x0
  408f70:	add	x2, x2, #0x46e
  408f74:	mov	x0, x20
  408f78:	str	x21, [sp, #32]
  408f7c:	mov	x21, x1
  408f80:	mov	x1, #0x40                  	// #64
  408f84:	bl	404d50 <snprintf@plt>
  408f88:	mov	x4, x21
  408f8c:	mov	x3, x20
  408f90:	mov	x2, x19
  408f94:	mov	w1, #0x6                   	// #6
  408f98:	mov	w0, #0x4                   	// #4
  408f9c:	bl	408ed8 <print_color_string@@Base>
  408fa0:	ldp	x19, x20, [sp, #16]
  408fa4:	ldr	x21, [sp, #32]
  408fa8:	ldp	x29, x30, [sp], #112
  408fac:	ret

0000000000408fb0 <print_color_bool@@Base>:
  408fb0:	mov	w5, w0
  408fb4:	adrp	x0, 424000 <stderr@@GLIBC_2.17+0x3d20>
  408fb8:	mov	x6, x2
  408fbc:	and	w4, w4, #0xff
  408fc0:	ldr	x0, [x0, #3368]
  408fc4:	mov	x2, x3
  408fc8:	tst	w5, #0x6
  408fcc:	b.eq	408fec <print_color_bool@@Base+0x3c>  // b.none
  408fd0:	cbz	x0, 408ff0 <print_color_bool@@Base+0x40>
  408fd4:	cbz	x6, 408fe4 <print_color_bool@@Base+0x34>
  408fd8:	mov	w2, w4
  408fdc:	mov	x1, x6
  408fe0:	b	409c88 <jsonw_bool_field@@Base>
  408fe4:	mov	w1, w4
  408fe8:	b	409b9c <jsonw_bool@@Base>
  408fec:	cbnz	x0, 409024 <print_color_bool@@Base+0x74>
  408ff0:	mov	w0, #0x5                   	// #5
  408ff4:	tst	w5, w0
  408ff8:	b.eq	409024 <print_color_bool@@Base+0x74>  // b.none
  408ffc:	cmp	w4, #0x0
  409000:	adrp	x3, 40c000 <_IO_stdin_used@@Base+0x268>
  409004:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  409008:	add	x3, x3, #0x47a
  40900c:	add	x0, x0, #0x475
  409010:	csel	x3, x0, x3, ne  // ne = any
  409014:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  409018:	ldr	x0, [x0, #4016]
  40901c:	ldr	x0, [x0]
  409020:	b	409384 <color_fprintf@@Base>
  409024:	ret

0000000000409028 <print_color_0xhex@@Base>:
  409028:	stp	x29, x30, [sp, #-96]!
  40902c:	tst	w0, #0x6
  409030:	mov	x29, sp
  409034:	stp	x19, x20, [sp, #16]
  409038:	mov	x20, x2
  40903c:	mov	x2, x3
  409040:	mov	x3, x4
  409044:	adrp	x4, 424000 <stderr@@GLIBC_2.17+0x3d20>
  409048:	ldr	x4, [x4, #3368]
  40904c:	b.eq	409090 <print_color_0xhex@@Base+0x68>  // b.none
  409050:	cbz	x4, 409094 <print_color_0xhex@@Base+0x6c>
  409054:	add	x19, sp, #0x20
  409058:	mov	x1, #0x40                  	// #64
  40905c:	mov	x0, x19
  409060:	adrp	x2, 40c000 <_IO_stdin_used@@Base+0x268>
  409064:	add	x2, x2, #0x480
  409068:	bl	404d50 <snprintf@plt>
  40906c:	mov	x4, x19
  409070:	mov	x2, x20
  409074:	mov	x3, #0x0                   	// #0
  409078:	mov	w1, #0x6                   	// #6
  40907c:	mov	w0, #0x2                   	// #2
  409080:	bl	408ed8 <print_color_string@@Base>
  409084:	ldp	x19, x20, [sp, #16]
  409088:	ldp	x29, x30, [sp], #96
  40908c:	ret
  409090:	cbnz	x4, 409084 <print_color_0xhex@@Base+0x5c>
  409094:	mov	w4, #0x5                   	// #5
  409098:	tst	w0, w4
  40909c:	b.eq	409084 <print_color_0xhex@@Base+0x5c>  // b.none
  4090a0:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  4090a4:	ldr	x0, [x0, #4016]
  4090a8:	ldr	x0, [x0]
  4090ac:	bl	409384 <color_fprintf@@Base>
  4090b0:	b	409084 <print_color_0xhex@@Base+0x5c>

00000000004090b4 <print_color_hex@@Base>:
  4090b4:	stp	x29, x30, [sp, #-112]!
  4090b8:	tst	w0, #0x6
  4090bc:	mov	x29, sp
  4090c0:	stp	x19, x20, [sp, #16]
  4090c4:	adrp	x20, 424000 <stderr@@GLIBC_2.17+0x3d20>
  4090c8:	mov	x19, x2
  4090cc:	str	x21, [sp, #32]
  4090d0:	mov	x2, x3
  4090d4:	mov	w3, w4
  4090d8:	ldr	x4, [x20, #3368]
  4090dc:	b.eq	409130 <print_color_hex@@Base+0x7c>  // b.none
  4090e0:	cbz	x4, 409134 <print_color_hex@@Base+0x80>
  4090e4:	add	x21, sp, #0x30
  4090e8:	adrp	x2, 40c000 <_IO_stdin_used@@Base+0x268>
  4090ec:	mov	x0, x21
  4090f0:	add	x2, x2, #0x458
  4090f4:	mov	x1, #0x40                  	// #64
  4090f8:	bl	404d50 <snprintf@plt>
  4090fc:	cbz	x19, 409120 <print_color_hex@@Base+0x6c>
  409100:	ldr	x0, [x20, #3368]
  409104:	mov	x2, x21
  409108:	mov	x1, x19
  40910c:	bl	409c5c <jsonw_string_field@@Base>
  409110:	ldp	x19, x20, [sp, #16]
  409114:	ldr	x21, [sp, #32]
  409118:	ldp	x29, x30, [sp], #112
  40911c:	ret
  409120:	ldr	x0, [x20, #3368]
  409124:	mov	x1, x21
  409128:	bl	409b70 <jsonw_string@@Base>
  40912c:	b	409110 <print_color_hex@@Base+0x5c>
  409130:	cbnz	x4, 409110 <print_color_hex@@Base+0x5c>
  409134:	mov	w4, #0x5                   	// #5
  409138:	tst	w0, w4
  40913c:	b.eq	409110 <print_color_hex@@Base+0x5c>  // b.none
  409140:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  409144:	ldr	x0, [x0, #4016]
  409148:	ldr	x0, [x0]
  40914c:	bl	409384 <color_fprintf@@Base>
  409150:	b	409110 <print_color_hex@@Base+0x5c>

0000000000409154 <print_color_null@@Base>:
  409154:	mov	w5, w0
  409158:	adrp	x0, 424000 <stderr@@GLIBC_2.17+0x3d20>
  40915c:	mov	x6, x2
  409160:	tst	w5, #0x6
  409164:	mov	x2, x3
  409168:	mov	x3, x4
  40916c:	ldr	x0, [x0, #3368]
  409170:	b.eq	409188 <print_color_null@@Base+0x34>  // b.none
  409174:	cbz	x0, 40918c <print_color_null@@Base+0x38>
  409178:	cbz	x6, 409184 <print_color_null@@Base+0x30>
  40917c:	mov	x1, x6
  409180:	b	409e74 <jsonw_null_field@@Base>
  409184:	b	409bc0 <jsonw_null@@Base>
  409188:	cbnz	x0, 4091a8 <print_color_null@@Base+0x54>
  40918c:	mov	w0, #0x5                   	// #5
  409190:	tst	w5, w0
  409194:	b.eq	4091a8 <print_color_null@@Base+0x54>  // b.none
  409198:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  40919c:	ldr	x0, [x0, #4016]
  4091a0:	ldr	x0, [x0]
  4091a4:	b	409384 <color_fprintf@@Base>
  4091a8:	ret

00000000004091ac <print_nl@@Base>:
  4091ac:	adrp	x0, 424000 <stderr@@GLIBC_2.17+0x3d20>
  4091b0:	ldr	x0, [x0, #3368]
  4091b4:	cbnz	x0, 4091d0 <print_nl@@Base+0x24>
  4091b8:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  4091bc:	ldr	x0, [x0, #4048]
  4091c0:	ldr	x1, [x0]
  4091c4:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  4091c8:	add	x0, x0, #0x52
  4091cc:	b	4050f0 <printf@plt>
  4091d0:	ret

00000000004091d4 <check_enable_color@@Base>:
  4091d4:	cmp	w1, #0x0
  4091d8:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  4091dc:	b.ne	4091e8 <check_enable_color@@Base+0x14>  // b.any
  4091e0:	mov	w0, #0x0                   	// #0
  4091e4:	ret
  4091e8:	stp	x29, x30, [sp, #-32]!
  4091ec:	cmp	w0, #0x2
  4091f0:	mov	x29, sp
  4091f4:	stp	x19, x20, [sp, #16]
  4091f8:	b.ne	409224 <check_enable_color@@Base+0x50>  // b.any
  4091fc:	adrp	x0, 424000 <stderr@@GLIBC_2.17+0x3d20>
  409200:	mov	w19, #0x1                   	// #1
  409204:	add	x20, x0, #0xd30
  409208:	str	w19, [x0, #3376]
  40920c:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  409210:	add	x0, x0, #0x486
  409214:	bl	405120 <getenv@plt>
  409218:	cbnz	x0, 40924c <check_enable_color@@Base+0x78>
  40921c:	mov	w0, w19
  409220:	b	409240 <check_enable_color@@Base+0x6c>
  409224:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  409228:	ldr	x0, [x0, #4016]
  40922c:	ldr	x0, [x0]
  409230:	bl	404d60 <fileno@plt>
  409234:	bl	405040 <isatty@plt>
  409238:	cbnz	w0, 4091fc <check_enable_color@@Base+0x28>
  40923c:	mov	w0, #0x0                   	// #0
  409240:	ldp	x19, x20, [sp, #16]
  409244:	ldp	x29, x30, [sp], #32
  409248:	ret
  40924c:	mov	w1, #0x3b                  	// #59
  409250:	bl	404eb0 <strrchr@plt>
  409254:	mov	x2, x0
  409258:	cbz	x0, 40921c <check_enable_color@@Base+0x48>
  40925c:	ldrb	w3, [x0, #1]
  409260:	sub	w0, w3, #0x30
  409264:	and	w0, w0, #0xff
  409268:	cmp	w0, #0x6
  40926c:	cset	w1, ls  // ls = plast
  409270:	cmp	w3, #0x38
  409274:	csinc	w0, w1, wzr, ne  // ne = any
  409278:	cbz	w0, 40921c <check_enable_color@@Base+0x48>
  40927c:	ldrb	w1, [x2, #2]
  409280:	cbnz	w1, 409240 <check_enable_color@@Base+0x6c>
  409284:	str	w19, [x20, #4]
  409288:	b	409240 <check_enable_color@@Base+0x6c>

000000000040928c <matches_color@@Base>:
  40928c:	cbnz	x1, 4092b0 <matches_color@@Base+0x24>
  409290:	mov	w0, #0x0                   	// #0
  409294:	ret
  409298:	mov	w0, #0x0                   	// #0
  40929c:	mov	sp, x29
  4092a0:	ldp	x19, x20, [sp, #16]
  4092a4:	ldr	x21, [sp, #32]
  4092a8:	ldp	x29, x30, [sp], #48
  4092ac:	ret
  4092b0:	stp	x29, x30, [sp, #-48]!
  4092b4:	mov	x29, sp
  4092b8:	stp	x19, x20, [sp, #16]
  4092bc:	mov	x19, x0
  4092c0:	mov	x20, x1
  4092c4:	str	x21, [sp, #32]
  4092c8:	bl	404c50 <strlen@plt>
  4092cc:	add	x1, x0, #0x10
  4092d0:	add	x2, x0, #0x1
  4092d4:	and	x1, x1, #0xfffffffffffffff0
  4092d8:	sub	sp, sp, x1
  4092dc:	mov	x1, x19
  4092e0:	mov	x0, sp
  4092e4:	bl	404c20 <memcpy@plt>
  4092e8:	mov	w1, #0x3d                  	// #61
  4092ec:	mov	x21, x0
  4092f0:	bl	405090 <strchrnul@plt>
  4092f4:	mov	x19, x0
  4092f8:	ldrb	w0, [x0]
  4092fc:	cbz	w0, 409304 <matches_color@@Base+0x78>
  409300:	strb	wzr, [x19], #1
  409304:	mov	x0, x21
  409308:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  40930c:	add	x1, x1, #0x490
  409310:	bl	40682c <matches@@Base>
  409314:	tst	w0, #0xff
  409318:	b.ne	409298 <matches_color@@Base+0xc>  // b.any
  40931c:	ldrb	w0, [x19]
  409320:	cbz	w0, 409338 <matches_color@@Base+0xac>
  409324:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  409328:	mov	x0, x19
  40932c:	add	x1, x1, #0x497
  409330:	bl	404f10 <strcmp@plt>
  409334:	cbnz	w0, 409348 <matches_color@@Base+0xbc>
  409338:	mov	w0, #0x2                   	// #2
  40933c:	str	w0, [x20]
  409340:	mov	w0, #0x1                   	// #1
  409344:	b	40929c <matches_color@@Base+0x10>
  409348:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  40934c:	mov	x0, x19
  409350:	add	x1, x1, #0x49e
  409354:	bl	404f10 <strcmp@plt>
  409358:	cbnz	w0, 409368 <matches_color@@Base+0xdc>
  40935c:	mov	w0, #0x1                   	// #1
  409360:	str	w0, [x20]
  409364:	b	40929c <matches_color@@Base+0x10>
  409368:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  40936c:	mov	x0, x19
  409370:	add	x1, x1, #0x4a3
  409374:	bl	404f10 <strcmp@plt>
  409378:	cbnz	w0, 409298 <matches_color@@Base+0xc>
  40937c:	str	wzr, [x20]
  409380:	b	409340 <matches_color@@Base+0xb4>

0000000000409384 <color_fprintf@@Base>:
  409384:	stp	x29, x30, [sp, #-304]!
  409388:	mov	x29, sp
  40938c:	stp	x19, x20, [sp, #16]
  409390:	mov	x20, x0
  409394:	add	x0, sp, #0x130
  409398:	stp	x0, x0, [sp, #96]
  40939c:	add	x0, sp, #0x100
  4093a0:	str	x0, [sp, #112]
  4093a4:	mov	w0, #0xffffffd8            	// #-40
  4093a8:	str	w0, [sp, #120]
  4093ac:	mov	w0, #0xffffff80            	// #-128
  4093b0:	str	w0, [sp, #124]
  4093b4:	adrp	x0, 424000 <stderr@@GLIBC_2.17+0x3d20>
  4093b8:	stp	x21, x22, [sp, #32]
  4093bc:	mov	x22, x2
  4093c0:	add	x2, x0, #0xd30
  4093c4:	ldr	w0, [x0, #3376]
  4093c8:	str	x23, [sp, #48]
  4093cc:	add	x23, sp, #0x40
  4093d0:	str	q0, [sp, #128]
  4093d4:	str	q1, [sp, #144]
  4093d8:	str	q2, [sp, #160]
  4093dc:	str	q3, [sp, #176]
  4093e0:	str	q4, [sp, #192]
  4093e4:	str	q5, [sp, #208]
  4093e8:	str	q6, [sp, #224]
  4093ec:	str	q7, [sp, #240]
  4093f0:	stp	x3, x4, [sp, #264]
  4093f4:	stp	x5, x6, [sp, #280]
  4093f8:	str	x7, [sp, #296]
  4093fc:	cbz	w0, 409408 <color_fprintf@@Base+0x84>
  409400:	cmp	w1, #0x6
  409404:	b.ne	40943c <color_fprintf@@Base+0xb8>  // b.any
  409408:	ldp	x0, x1, [sp, #96]
  40940c:	stp	x0, x1, [sp, #64]
  409410:	mov	x2, x23
  409414:	ldp	x0, x1, [sp, #112]
  409418:	stp	x0, x1, [sp, #80]
  40941c:	mov	x1, x22
  409420:	mov	x0, x20
  409424:	bl	4050e0 <vfprintf@plt>
  409428:	ldp	x19, x20, [sp, #16]
  40942c:	ldp	x21, x22, [sp, #32]
  409430:	ldr	x23, [sp, #48]
  409434:	ldp	x29, x30, [sp], #304
  409438:	ret
  40943c:	ldr	w0, [x2, #4]
  409440:	adrp	x3, 40c000 <_IO_stdin_used@@Base+0x268>
  409444:	mov	w1, w1
  409448:	add	x3, x3, #0x510
  40944c:	cbz	w0, 4094b8 <color_fprintf@@Base+0x134>
  409450:	ldr	w1, [x3, x1, lsl #2]
  409454:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  409458:	add	x0, x0, #0xd00
  40945c:	adrp	x21, 40c000 <_IO_stdin_used@@Base+0x268>
  409460:	add	x21, x21, #0x52
  409464:	ldr	x2, [x0, w1, uxtw #3]
  409468:	mov	x1, x21
  40946c:	mov	x0, x20
  409470:	bl	405150 <fprintf@plt>
  409474:	mov	w19, w0
  409478:	ldp	x0, x1, [sp, #96]
  40947c:	stp	x0, x1, [sp, #64]
  409480:	mov	x2, x23
  409484:	ldp	x0, x1, [sp, #112]
  409488:	stp	x0, x1, [sp, #80]
  40948c:	mov	x1, x22
  409490:	mov	x0, x20
  409494:	bl	4050e0 <vfprintf@plt>
  409498:	add	w19, w19, w0
  40949c:	mov	x1, x21
  4094a0:	mov	x0, x20
  4094a4:	adrp	x2, 40c000 <_IO_stdin_used@@Base+0x268>
  4094a8:	add	x2, x2, #0x4a9
  4094ac:	bl	405150 <fprintf@plt>
  4094b0:	add	w0, w19, w0
  4094b4:	b	409428 <color_fprintf@@Base+0xa4>
  4094b8:	add	x3, x3, #0x1c
  4094bc:	b	409450 <color_fprintf@@Base+0xcc>

00000000004094c0 <ifa_family_color@@Base>:
  4094c0:	and	w0, w0, #0xff
  4094c4:	cmp	w0, #0x2
  4094c8:	b.eq	4094dc <ifa_family_color@@Base+0x1c>  // b.none
  4094cc:	cmp	w0, #0xa
  4094d0:	mov	w1, #0x3                   	// #3
  4094d4:	mov	w0, #0x6                   	// #6
  4094d8:	csel	w0, w0, w1, ne  // ne = any
  4094dc:	ret

00000000004094e0 <oper_state_color@@Base>:
  4094e0:	and	w0, w0, #0xff
  4094e4:	cmp	w0, #0x2
  4094e8:	b.eq	409500 <oper_state_color@@Base+0x20>  // b.none
  4094ec:	cmp	w0, #0x6
  4094f0:	mov	w1, #0x4                   	// #4
  4094f4:	mov	w0, #0x6                   	// #6
  4094f8:	csel	w0, w0, w1, ne  // ne = any
  4094fc:	ret
  409500:	mov	w0, #0x5                   	// #5
  409504:	b	4094fc <oper_state_color@@Base+0x1c>

0000000000409508 <mpls_ntop@@Base>:
  409508:	stp	x29, x30, [sp, #-80]!
  40950c:	mov	x29, sp
  409510:	stp	x19, x20, [sp, #16]
  409514:	mov	x19, x1
  409518:	mov	x20, x2
  40951c:	stp	x21, x22, [sp, #32]
  409520:	mov	x21, x3
  409524:	stp	x23, x24, [sp, #48]
  409528:	mov	w23, w0
  40952c:	stp	x25, x26, [sp, #64]
  409530:	bl	405110 <__errno_location@plt>
  409534:	cmp	w23, #0x1c
  409538:	mov	x22, x0
  40953c:	b.ne	4095c4 <mpls_ntop@@Base+0xbc>  // b.any
  409540:	adrp	x25, 40c000 <_IO_stdin_used@@Base+0x268>
  409544:	mov	x23, x20
  409548:	add	x25, x25, #0x46b
  40954c:	mov	w26, #0x2f                  	// #47
  409550:	str	wzr, [x0]
  409554:	ldr	w24, [x19]
  409558:	mov	x1, x21
  40955c:	mov	x2, x25
  409560:	mov	x0, x23
  409564:	rev	w24, w24
  409568:	lsr	w3, w24, #12
  40956c:	bl	404d50 <snprintf@plt>
  409570:	sxtw	x1, w0
  409574:	cmp	x21, w0, sxtw
  409578:	b.ls	40959c <mpls_ntop@@Base+0x94>  // b.plast
  40957c:	add	x19, x19, #0x4
  409580:	tbnz	w24, #8, 4095a8 <mpls_ntop@@Base+0xa0>
  409584:	add	x0, x23, x1
  409588:	strb	w26, [x23, x1]
  40958c:	mvn	x1, x1
  409590:	add	x23, x0, #0x1
  409594:	add	x21, x21, x1
  409598:	b	409554 <mpls_ntop@@Base+0x4c>
  40959c:	mov	w0, #0xfffffff9            	// #-7
  4095a0:	mov	x20, #0x0                   	// #0
  4095a4:	str	w0, [x22]
  4095a8:	mov	x0, x20
  4095ac:	ldp	x19, x20, [sp, #16]
  4095b0:	ldp	x21, x22, [sp, #32]
  4095b4:	ldp	x23, x24, [sp, #48]
  4095b8:	ldp	x25, x26, [sp, #64]
  4095bc:	ldp	x29, x30, [sp], #80
  4095c0:	ret
  4095c4:	mov	w0, #0x61                  	// #97
  4095c8:	b	4095a0 <mpls_ntop@@Base+0x98>

00000000004095cc <mpls_pton@@Base>:
  4095cc:	stp	x29, x30, [sp, #-80]!
  4095d0:	mov	x29, sp
  4095d4:	stp	x19, x20, [sp, #16]
  4095d8:	mov	x19, x2
  4095dc:	lsr	x20, x3, #2
  4095e0:	stp	x21, x22, [sp, #32]
  4095e4:	mov	w22, w0
  4095e8:	mov	x21, x1
  4095ec:	str	x23, [sp, #48]
  4095f0:	bl	405110 <__errno_location@plt>
  4095f4:	cmp	w22, #0x1c
  4095f8:	b.ne	4096a4 <mpls_pton@@Base+0xd8>  // b.any
  4095fc:	add	x20, x19, w20, uxtw #2
  409600:	add	x22, sp, #0x48
  409604:	mov	x23, #0xfffff               	// #1048575
  409608:	str	wzr, [x0]
  40960c:	cmp	x20, x19
  409610:	b.ne	409630 <mpls_pton@@Base+0x64>  // b.any
  409614:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  409618:	ldr	x0, [x0, #3992]
  40961c:	ldr	x1, [x0]
  409620:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  409624:	add	x0, x0, #0x548
  409628:	bl	404c60 <fputs@plt>
  40962c:	b	409648 <mpls_pton@@Base+0x7c>
  409630:	mov	x1, x22
  409634:	mov	x0, x21
  409638:	mov	w2, #0x0                   	// #0
  40963c:	bl	404c40 <strtoul@plt>
  409640:	cmp	x0, x23
  409644:	b.ls	409650 <mpls_pton@@Base+0x84>  // b.plast
  409648:	mov	w0, #0x0                   	// #0
  40964c:	b	40967c <mpls_pton@@Base+0xb0>
  409650:	ldr	x2, [sp, #72]
  409654:	cmp	x21, x2
  409658:	b.eq	409648 <mpls_pton@@Base+0x7c>  // b.none
  40965c:	lsl	w0, w0, #12
  409660:	rev	w0, w0
  409664:	str	w0, [x19]
  409668:	ldrb	w3, [x2]
  40966c:	cbnz	w3, 409690 <mpls_pton@@Base+0xc4>
  409670:	orr	w0, w0, #0x10000
  409674:	str	w0, [x19]
  409678:	mov	w0, #0x1                   	// #1
  40967c:	ldp	x19, x20, [sp, #16]
  409680:	ldp	x21, x22, [sp, #32]
  409684:	ldr	x23, [sp, #48]
  409688:	ldp	x29, x30, [sp], #80
  40968c:	ret
  409690:	cmp	w3, #0x2f
  409694:	b.ne	409648 <mpls_pton@@Base+0x7c>  // b.any
  409698:	add	x21, x2, #0x1
  40969c:	add	x19, x19, #0x4
  4096a0:	b	40960c <mpls_pton@@Base+0x40>
  4096a4:	mov	w1, #0x61                  	// #97
  4096a8:	str	w1, [x0]
  4096ac:	mov	w0, #0xffffffff            	// #-1
  4096b0:	b	40967c <mpls_pton@@Base+0xb0>
  4096b4:	stp	x29, x30, [sp, #-32]!
  4096b8:	mov	x29, sp
  4096bc:	str	x19, [sp, #16]
  4096c0:	mov	x19, x0
  4096c4:	ldrb	w0, [x0, #13]
  4096c8:	cbz	w0, 4096d4 <mpls_pton@@Base+0x108>
  4096cc:	ldr	x1, [x19]
  4096d0:	bl	404d20 <putc@plt>
  4096d4:	mov	w0, #0x2c                  	// #44
  4096d8:	strb	w0, [x19, #13]
  4096dc:	ldr	x19, [sp, #16]
  4096e0:	ldp	x29, x30, [sp], #32
  4096e4:	ret
  4096e8:	stp	x29, x30, [sp, #-48]!
  4096ec:	mov	x29, sp
  4096f0:	ldr	x1, [x0]
  4096f4:	str	x21, [sp, #32]
  4096f8:	adrp	x21, 40c000 <_IO_stdin_used@@Base+0x268>
  4096fc:	add	x21, x21, #0x561
  409700:	stp	x19, x20, [sp, #16]
  409704:	mov	w20, #0x0                   	// #0
  409708:	mov	x19, x0
  40970c:	mov	w0, #0xa                   	// #10
  409710:	bl	404d20 <putc@plt>
  409714:	ldr	w0, [x19, #8]
  409718:	cmp	w20, w0
  40971c:	b.cc	409730 <mpls_pton@@Base+0x164>  // b.lo, b.ul, b.last
  409720:	ldp	x19, x20, [sp, #16]
  409724:	ldr	x21, [sp, #32]
  409728:	ldp	x29, x30, [sp], #48
  40972c:	ret
  409730:	ldr	x1, [x19]
  409734:	mov	x0, x21
  409738:	add	w20, w20, #0x1
  40973c:	bl	404c60 <fputs@plt>
  409740:	b	409714 <mpls_pton@@Base+0x148>
  409744:	stp	x29, x30, [sp, #-16]!
  409748:	adrp	x3, 40c000 <_IO_stdin_used@@Base+0x268>
  40974c:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  409750:	mov	x29, sp
  409754:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  409758:	add	x3, x3, #0x5d6
  40975c:	add	x1, x1, #0x566
  409760:	add	x0, x0, #0x574
  409764:	mov	w2, #0x85                  	// #133
  409768:	bl	405100 <__assert_fail@plt>
  40976c:	stp	x29, x30, [sp, #-64]!
  409770:	mov	x29, sp
  409774:	stp	x19, x20, [sp, #16]
  409778:	mov	x19, x1
  40977c:	mov	x20, x0
  409780:	ldr	x1, [x0]
  409784:	stp	x21, x22, [sp, #32]
  409788:	adrp	x21, 40c000 <_IO_stdin_used@@Base+0x268>
  40978c:	adrp	x22, 40c000 <_IO_stdin_used@@Base+0x268>
  409790:	add	x21, x21, #0x599
  409794:	add	x22, x22, #0x593
  409798:	str	x23, [sp, #48]
  40979c:	adrp	x23, 40c000 <_IO_stdin_used@@Base+0x268>
  4097a0:	mov	w0, #0x22                  	// #34
  4097a4:	bl	404d20 <putc@plt>
  4097a8:	ldrb	w0, [x19]
  4097ac:	ldr	x1, [x20]
  4097b0:	cbnz	w0, 4097cc <mpls_pton@@Base+0x200>
  4097b4:	ldp	x19, x20, [sp, #16]
  4097b8:	mov	w0, #0x22                  	// #34
  4097bc:	ldp	x21, x22, [sp, #32]
  4097c0:	ldr	x23, [sp, #48]
  4097c4:	ldp	x29, x30, [sp], #64
  4097c8:	b	404d20 <putc@plt>
  4097cc:	cmp	w0, #0xd
  4097d0:	b.hi	409800 <mpls_pton@@Base+0x234>  // b.pmore
  4097d4:	cmp	w0, #0x7
  4097d8:	b.ls	409818 <mpls_pton@@Base+0x24c>  // b.plast
  4097dc:	sub	w3, w0, #0x8
  4097e0:	cmp	w3, #0x5
  4097e4:	b.hi	409818 <mpls_pton@@Base+0x24c>  // b.pmore
  4097e8:	adrp	x2, 40c000 <_IO_stdin_used@@Base+0x268>
  4097ec:	add	x2, x2, #0x5d0
  4097f0:	ldrb	w2, [x2, w3, uxtw]
  4097f4:	adr	x3, 409800 <mpls_pton@@Base+0x234>
  4097f8:	add	x2, x3, w2, sxtb #2
  4097fc:	br	x2
  409800:	cmp	w0, #0x27
  409804:	b.eq	409874 <mpls_pton@@Base+0x2a8>  // b.none
  409808:	cmp	w0, #0x5c
  40980c:	b.eq	409864 <mpls_pton@@Base+0x298>  // b.none
  409810:	cmp	w0, #0x22
  409814:	b.eq	40986c <mpls_pton@@Base+0x2a0>  // b.none
  409818:	bl	404d20 <putc@plt>
  40981c:	b	40982c <mpls_pton@@Base+0x260>
  409820:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  409824:	add	x0, x0, #0x584
  409828:	bl	404c60 <fputs@plt>
  40982c:	add	x19, x19, #0x1
  409830:	b	4097a8 <mpls_pton@@Base+0x1dc>
  409834:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  409838:	add	x0, x0, #0x587
  40983c:	b	409828 <mpls_pton@@Base+0x25c>
  409840:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  409844:	add	x0, x0, #0x58a
  409848:	b	409828 <mpls_pton@@Base+0x25c>
  40984c:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  409850:	add	x0, x0, #0x58d
  409854:	b	409828 <mpls_pton@@Base+0x25c>
  409858:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  40985c:	add	x0, x0, #0x590
  409860:	b	409828 <mpls_pton@@Base+0x25c>
  409864:	mov	x0, x22
  409868:	b	409828 <mpls_pton@@Base+0x25c>
  40986c:	add	x0, x23, #0x596
  409870:	b	409828 <mpls_pton@@Base+0x25c>
  409874:	mov	x0, x21
  409878:	b	409828 <mpls_pton@@Base+0x25c>

000000000040987c <jsonw_new@@Base>:
  40987c:	stp	x29, x30, [sp, #-32]!
  409880:	mov	x29, sp
  409884:	str	x19, [sp, #16]
  409888:	mov	x19, x0
  40988c:	mov	x0, #0x10                  	// #16
  409890:	bl	404db0 <malloc@plt>
  409894:	cbz	x0, 4098a4 <jsonw_new@@Base+0x28>
  409898:	str	x19, [x0]
  40989c:	str	wzr, [x0, #8]
  4098a0:	strh	wzr, [x0, #12]
  4098a4:	ldr	x19, [sp, #16]
  4098a8:	ldp	x29, x30, [sp], #32
  4098ac:	ret

00000000004098b0 <jsonw_destroy@@Base>:
  4098b0:	stp	x29, x30, [sp, #-32]!
  4098b4:	mov	x29, sp
  4098b8:	stp	x19, x20, [sp, #16]
  4098bc:	mov	x19, x0
  4098c0:	ldr	x20, [x0]
  4098c4:	ldr	w0, [x20, #8]
  4098c8:	cbz	w0, 4098f0 <jsonw_destroy@@Base+0x40>
  4098cc:	adrp	x3, 40c000 <_IO_stdin_used@@Base+0x268>
  4098d0:	add	x3, x3, #0x5d6
  4098d4:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  4098d8:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  4098dc:	add	x3, x3, #0xa
  4098e0:	add	x1, x1, #0x566
  4098e4:	add	x0, x0, #0x59c
  4098e8:	mov	w2, #0x6e                  	// #110
  4098ec:	bl	405100 <__assert_fail@plt>
  4098f0:	ldr	x1, [x20]
  4098f4:	mov	w0, #0xa                   	// #10
  4098f8:	bl	404d40 <fputc@plt>
  4098fc:	ldr	x0, [x20]
  409900:	bl	405000 <fflush@plt>
  409904:	mov	x0, x20
  409908:	bl	404f80 <free@plt>
  40990c:	str	xzr, [x19]
  409910:	ldp	x19, x20, [sp, #16]
  409914:	ldp	x29, x30, [sp], #32
  409918:	ret

000000000040991c <jsonw_pretty@@Base>:
  40991c:	strb	w1, [x0, #12]
  409920:	ret

0000000000409924 <jsonw_name@@Base>:
  409924:	stp	x29, x30, [sp, #-32]!
  409928:	mov	x29, sp
  40992c:	stp	x19, x20, [sp, #16]
  409930:	mov	x19, x0
  409934:	mov	x20, x1
  409938:	bl	4096b4 <mpls_pton@@Base+0xe8>
  40993c:	ldrb	w0, [x19, #12]
  409940:	cbz	w0, 40994c <jsonw_name@@Base+0x28>
  409944:	mov	x0, x19
  409948:	bl	4096e8 <mpls_pton@@Base+0x11c>
  40994c:	strb	wzr, [x19, #13]
  409950:	mov	x1, x20
  409954:	mov	x0, x19
  409958:	bl	40976c <mpls_pton@@Base+0x1a0>
  40995c:	ldr	x1, [x19]
  409960:	mov	w0, #0x3a                  	// #58
  409964:	bl	404d20 <putc@plt>
  409968:	ldrb	w0, [x19, #12]
  40996c:	cbz	w0, 409984 <jsonw_name@@Base+0x60>
  409970:	ldr	x1, [x19]
  409974:	mov	w0, #0x20                  	// #32
  409978:	ldp	x19, x20, [sp, #16]
  40997c:	ldp	x29, x30, [sp], #32
  409980:	b	404d20 <putc@plt>
  409984:	ldp	x19, x20, [sp, #16]
  409988:	ldp	x29, x30, [sp], #32
  40998c:	ret

0000000000409990 <jsonw_printf@@Base>:
  409990:	stp	x29, x30, [sp, #-272]!
  409994:	mov	x29, sp
  409998:	stp	x19, x20, [sp, #16]
  40999c:	mov	x20, x1
  4099a0:	add	x1, sp, #0x110
  4099a4:	stp	x1, x1, [sp, #64]
  4099a8:	add	x1, sp, #0xe0
  4099ac:	mov	x19, x0
  4099b0:	str	x1, [sp, #80]
  4099b4:	mov	w1, #0xffffffd0            	// #-48
  4099b8:	str	w1, [sp, #88]
  4099bc:	mov	w1, #0xffffff80            	// #-128
  4099c0:	str	w1, [sp, #92]
  4099c4:	str	q0, [sp, #96]
  4099c8:	str	q1, [sp, #112]
  4099cc:	str	q2, [sp, #128]
  4099d0:	str	q3, [sp, #144]
  4099d4:	str	q4, [sp, #160]
  4099d8:	str	q5, [sp, #176]
  4099dc:	str	q6, [sp, #192]
  4099e0:	str	q7, [sp, #208]
  4099e4:	stp	x2, x3, [sp, #224]
  4099e8:	stp	x4, x5, [sp, #240]
  4099ec:	stp	x6, x7, [sp, #256]
  4099f0:	bl	4096b4 <mpls_pton@@Base+0xe8>
  4099f4:	add	x2, sp, #0x20
  4099f8:	ldp	x0, x1, [sp, #64]
  4099fc:	stp	x0, x1, [sp, #32]
  409a00:	ldp	x0, x1, [sp, #80]
  409a04:	stp	x0, x1, [sp, #48]
  409a08:	ldr	x0, [x19]
  409a0c:	mov	x1, x20
  409a10:	bl	4050e0 <vfprintf@plt>
  409a14:	ldp	x19, x20, [sp, #16]
  409a18:	ldp	x29, x30, [sp], #272
  409a1c:	ret

0000000000409a20 <jsonw_start_object@@Base>:
  409a20:	stp	x29, x30, [sp, #-32]!
  409a24:	mov	x29, sp
  409a28:	str	x19, [sp, #16]
  409a2c:	mov	x19, x0
  409a30:	bl	4096b4 <mpls_pton@@Base+0xe8>
  409a34:	mov	w0, #0x7b                  	// #123
  409a38:	ldr	x1, [x19]
  409a3c:	bl	404d20 <putc@plt>
  409a40:	strb	wzr, [x19, #13]
  409a44:	ldr	w0, [x19, #8]
  409a48:	add	w0, w0, #0x1
  409a4c:	str	w0, [x19, #8]
  409a50:	ldr	x19, [sp, #16]
  409a54:	ldp	x29, x30, [sp], #32
  409a58:	ret

0000000000409a5c <jsonw_end_object@@Base>:
  409a5c:	stp	x29, x30, [sp, #-32]!
  409a60:	mov	x29, sp
  409a64:	ldr	w1, [x0, #8]
  409a68:	str	x19, [sp, #16]
  409a6c:	cbnz	w1, 409a74 <jsonw_end_object@@Base+0x18>
  409a70:	bl	409744 <mpls_pton@@Base+0x178>
  409a74:	sub	w1, w1, #0x1
  409a78:	str	w1, [x0, #8]
  409a7c:	ldrb	w1, [x0, #13]
  409a80:	mov	x19, x0
  409a84:	cbz	w1, 409a94 <jsonw_end_object@@Base+0x38>
  409a88:	ldrb	w1, [x0, #12]
  409a8c:	cbz	w1, 409a94 <jsonw_end_object@@Base+0x38>
  409a90:	bl	4096e8 <mpls_pton@@Base+0x11c>
  409a94:	ldr	x1, [x19]
  409a98:	mov	w0, #0x7d                  	// #125
  409a9c:	bl	404d20 <putc@plt>
  409aa0:	mov	w0, #0x2c                  	// #44
  409aa4:	strb	w0, [x19, #13]
  409aa8:	ldr	x19, [sp, #16]
  409aac:	ldp	x29, x30, [sp], #32
  409ab0:	ret

0000000000409ab4 <jsonw_start_array@@Base>:
  409ab4:	stp	x29, x30, [sp, #-32]!
  409ab8:	mov	x29, sp
  409abc:	str	x19, [sp, #16]
  409ac0:	mov	x19, x0
  409ac4:	bl	4096b4 <mpls_pton@@Base+0xe8>
  409ac8:	mov	w0, #0x5b                  	// #91
  409acc:	ldr	x1, [x19]
  409ad0:	bl	404d20 <putc@plt>
  409ad4:	strb	wzr, [x19, #13]
  409ad8:	ldr	w0, [x19, #8]
  409adc:	add	w0, w0, #0x1
  409ae0:	str	w0, [x19, #8]
  409ae4:	ldrb	w0, [x19, #12]
  409ae8:	cbz	w0, 409b00 <jsonw_start_array@@Base+0x4c>
  409aec:	ldr	x1, [x19]
  409af0:	mov	w0, #0x20                  	// #32
  409af4:	ldr	x19, [sp, #16]
  409af8:	ldp	x29, x30, [sp], #32
  409afc:	b	404d20 <putc@plt>
  409b00:	ldr	x19, [sp, #16]
  409b04:	ldp	x29, x30, [sp], #32
  409b08:	ret

0000000000409b0c <jsonw_end_array@@Base>:
  409b0c:	stp	x29, x30, [sp, #-32]!
  409b10:	mov	x29, sp
  409b14:	str	x19, [sp, #16]
  409b18:	mov	x19, x0
  409b1c:	ldrb	w0, [x0, #12]
  409b20:	cbz	w0, 409b38 <jsonw_end_array@@Base+0x2c>
  409b24:	ldrb	w0, [x19, #13]
  409b28:	cbz	w0, 409b38 <jsonw_end_array@@Base+0x2c>
  409b2c:	ldr	x1, [x19]
  409b30:	mov	w0, #0x20                  	// #32
  409b34:	bl	404d20 <putc@plt>
  409b38:	ldr	w0, [x19, #8]
  409b3c:	strb	wzr, [x19, #13]
  409b40:	cbnz	w0, 409b48 <jsonw_end_array@@Base+0x3c>
  409b44:	bl	409744 <mpls_pton@@Base+0x178>
  409b48:	ldr	x1, [x19]
  409b4c:	sub	w0, w0, #0x1
  409b50:	str	w0, [x19, #8]
  409b54:	mov	w0, #0x5d                  	// #93
  409b58:	bl	404d20 <putc@plt>
  409b5c:	mov	w0, #0x2c                  	// #44
  409b60:	strb	w0, [x19, #13]
  409b64:	ldr	x19, [sp, #16]
  409b68:	ldp	x29, x30, [sp], #32
  409b6c:	ret

0000000000409b70 <jsonw_string@@Base>:
  409b70:	stp	x29, x30, [sp, #-32]!
  409b74:	mov	x29, sp
  409b78:	stp	x19, x20, [sp, #16]
  409b7c:	mov	x19, x0
  409b80:	mov	x20, x1
  409b84:	bl	4096b4 <mpls_pton@@Base+0xe8>
  409b88:	mov	x1, x20
  409b8c:	mov	x0, x19
  409b90:	ldp	x19, x20, [sp, #16]
  409b94:	ldp	x29, x30, [sp], #32
  409b98:	b	40976c <mpls_pton@@Base+0x1a0>

0000000000409b9c <jsonw_bool@@Base>:
  409b9c:	tst	w1, #0xff
  409ba0:	adrp	x2, 40c000 <_IO_stdin_used@@Base+0x268>
  409ba4:	adrp	x3, 40c000 <_IO_stdin_used@@Base+0x268>
  409ba8:	add	x2, x2, #0x47a
  409bac:	add	x3, x3, #0x475
  409bb0:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  409bb4:	csel	x2, x3, x2, ne  // ne = any
  409bb8:	add	x1, x1, #0x52
  409bbc:	b	409990 <jsonw_printf@@Base>

0000000000409bc0 <jsonw_null@@Base>:
  409bc0:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  409bc4:	add	x1, x1, #0x5ad
  409bc8:	b	409990 <jsonw_printf@@Base>

0000000000409bcc <jsonw_float@@Base>:
  409bcc:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  409bd0:	add	x1, x1, #0x5b2
  409bd4:	b	409990 <jsonw_printf@@Base>

0000000000409bd8 <jsonw_hhu@@Base>:
  409bd8:	and	w2, w1, #0xff
  409bdc:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  409be0:	add	x1, x1, #0x5b5
  409be4:	b	409990 <jsonw_printf@@Base>

0000000000409be8 <jsonw_hu@@Base>:
  409be8:	and	w2, w1, #0xffff
  409bec:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  409bf0:	add	x1, x1, #0x5ba
  409bf4:	b	409990 <jsonw_printf@@Base>

0000000000409bf8 <jsonw_uint@@Base>:
  409bf8:	mov	w2, w1
  409bfc:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  409c00:	add	x1, x1, #0x46b
  409c04:	b	409990 <jsonw_printf@@Base>

0000000000409c08 <jsonw_u64@@Base>:
  409c08:	mov	x2, x1
  409c0c:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  409c10:	add	x1, x1, #0x5be
  409c14:	b	409990 <jsonw_printf@@Base>

0000000000409c18 <jsonw_xint@@Base>:
  409c18:	mov	x2, x1
  409c1c:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  409c20:	add	x1, x1, #0x5c2
  409c24:	b	409990 <jsonw_printf@@Base>

0000000000409c28 <jsonw_luint@@Base>:
  409c28:	b	409c08 <jsonw_u64@@Base>

0000000000409c2c <jsonw_lluint@@Base>:
  409c2c:	mov	x2, x1
  409c30:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  409c34:	add	x1, x1, #0x5c6
  409c38:	b	409990 <jsonw_printf@@Base>

0000000000409c3c <jsonw_int@@Base>:
  409c3c:	mov	w2, w1
  409c40:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  409c44:	add	x1, x1, #0x3cc
  409c48:	b	409990 <jsonw_printf@@Base>

0000000000409c4c <jsonw_s64@@Base>:
  409c4c:	mov	x2, x1
  409c50:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  409c54:	add	x1, x1, #0x5cb
  409c58:	b	409990 <jsonw_printf@@Base>

0000000000409c5c <jsonw_string_field@@Base>:
  409c5c:	stp	x29, x30, [sp, #-32]!
  409c60:	mov	x29, sp
  409c64:	stp	x19, x20, [sp, #16]
  409c68:	mov	x20, x2
  409c6c:	mov	x19, x0
  409c70:	bl	409924 <jsonw_name@@Base>
  409c74:	mov	x1, x20
  409c78:	mov	x0, x19
  409c7c:	ldp	x19, x20, [sp, #16]
  409c80:	ldp	x29, x30, [sp], #32
  409c84:	b	409b70 <jsonw_string@@Base>

0000000000409c88 <jsonw_bool_field@@Base>:
  409c88:	stp	x29, x30, [sp, #-32]!
  409c8c:	mov	x29, sp
  409c90:	stp	x19, x20, [sp, #16]
  409c94:	and	w20, w2, #0xff
  409c98:	mov	x19, x0
  409c9c:	bl	409924 <jsonw_name@@Base>
  409ca0:	mov	w1, w20
  409ca4:	mov	x0, x19
  409ca8:	ldp	x19, x20, [sp, #16]
  409cac:	ldp	x29, x30, [sp], #32
  409cb0:	b	409b9c <jsonw_bool@@Base>

0000000000409cb4 <jsonw_float_field@@Base>:
  409cb4:	stp	x29, x30, [sp, #-32]!
  409cb8:	mov	x29, sp
  409cbc:	str	d8, [sp, #24]
  409cc0:	fmov	d8, d0
  409cc4:	str	x19, [sp, #16]
  409cc8:	mov	x19, x0
  409ccc:	bl	409924 <jsonw_name@@Base>
  409cd0:	fmov	d0, d8
  409cd4:	mov	x0, x19
  409cd8:	ldr	d8, [sp, #24]
  409cdc:	ldr	x19, [sp, #16]
  409ce0:	ldp	x29, x30, [sp], #32
  409ce4:	b	409bcc <jsonw_float@@Base>

0000000000409ce8 <jsonw_uint_field@@Base>:
  409ce8:	stp	x29, x30, [sp, #-32]!
  409cec:	mov	x29, sp
  409cf0:	stp	x19, x20, [sp, #16]
  409cf4:	mov	w20, w2
  409cf8:	mov	x19, x0
  409cfc:	bl	409924 <jsonw_name@@Base>
  409d00:	mov	w1, w20
  409d04:	mov	x0, x19
  409d08:	ldp	x19, x20, [sp, #16]
  409d0c:	ldp	x29, x30, [sp], #32
  409d10:	b	409bf8 <jsonw_uint@@Base>

0000000000409d14 <jsonw_u64_field@@Base>:
  409d14:	stp	x29, x30, [sp, #-32]!
  409d18:	mov	x29, sp
  409d1c:	stp	x19, x20, [sp, #16]
  409d20:	mov	x20, x2
  409d24:	mov	x19, x0
  409d28:	bl	409924 <jsonw_name@@Base>
  409d2c:	mov	x1, x20
  409d30:	mov	x0, x19
  409d34:	ldp	x19, x20, [sp, #16]
  409d38:	ldp	x29, x30, [sp], #32
  409d3c:	b	409c08 <jsonw_u64@@Base>

0000000000409d40 <jsonw_xint_field@@Base>:
  409d40:	stp	x29, x30, [sp, #-32]!
  409d44:	mov	x29, sp
  409d48:	stp	x19, x20, [sp, #16]
  409d4c:	mov	x20, x2
  409d50:	mov	x19, x0
  409d54:	bl	409924 <jsonw_name@@Base>
  409d58:	mov	x1, x20
  409d5c:	mov	x0, x19
  409d60:	ldp	x19, x20, [sp, #16]
  409d64:	ldp	x29, x30, [sp], #32
  409d68:	b	409c18 <jsonw_xint@@Base>

0000000000409d6c <jsonw_hhu_field@@Base>:
  409d6c:	stp	x29, x30, [sp, #-32]!
  409d70:	mov	x29, sp
  409d74:	stp	x19, x20, [sp, #16]
  409d78:	and	w20, w2, #0xff
  409d7c:	mov	x19, x0
  409d80:	bl	409924 <jsonw_name@@Base>
  409d84:	mov	w1, w20
  409d88:	mov	x0, x19
  409d8c:	ldp	x19, x20, [sp, #16]
  409d90:	ldp	x29, x30, [sp], #32
  409d94:	b	409bd8 <jsonw_hhu@@Base>

0000000000409d98 <jsonw_hu_field@@Base>:
  409d98:	stp	x29, x30, [sp, #-32]!
  409d9c:	mov	x29, sp
  409da0:	stp	x19, x20, [sp, #16]
  409da4:	and	w20, w2, #0xffff
  409da8:	mov	x19, x0
  409dac:	bl	409924 <jsonw_name@@Base>
  409db0:	mov	w1, w20
  409db4:	mov	x0, x19
  409db8:	ldp	x19, x20, [sp, #16]
  409dbc:	ldp	x29, x30, [sp], #32
  409dc0:	b	409be8 <jsonw_hu@@Base>

0000000000409dc4 <jsonw_luint_field@@Base>:
  409dc4:	stp	x29, x30, [sp, #-32]!
  409dc8:	mov	x29, sp
  409dcc:	stp	x19, x20, [sp, #16]
  409dd0:	mov	x20, x2
  409dd4:	mov	x19, x0
  409dd8:	bl	409924 <jsonw_name@@Base>
  409ddc:	mov	x1, x20
  409de0:	mov	x0, x19
  409de4:	ldp	x19, x20, [sp, #16]
  409de8:	ldp	x29, x30, [sp], #32
  409dec:	b	409c28 <jsonw_luint@@Base>

0000000000409df0 <jsonw_lluint_field@@Base>:
  409df0:	stp	x29, x30, [sp, #-32]!
  409df4:	mov	x29, sp
  409df8:	stp	x19, x20, [sp, #16]
  409dfc:	mov	x20, x2
  409e00:	mov	x19, x0
  409e04:	bl	409924 <jsonw_name@@Base>
  409e08:	mov	x1, x20
  409e0c:	mov	x0, x19
  409e10:	ldp	x19, x20, [sp, #16]
  409e14:	ldp	x29, x30, [sp], #32
  409e18:	b	409c2c <jsonw_lluint@@Base>

0000000000409e1c <jsonw_int_field@@Base>:
  409e1c:	stp	x29, x30, [sp, #-32]!
  409e20:	mov	x29, sp
  409e24:	stp	x19, x20, [sp, #16]
  409e28:	mov	w20, w2
  409e2c:	mov	x19, x0
  409e30:	bl	409924 <jsonw_name@@Base>
  409e34:	mov	w1, w20
  409e38:	mov	x0, x19
  409e3c:	ldp	x19, x20, [sp, #16]
  409e40:	ldp	x29, x30, [sp], #32
  409e44:	b	409c3c <jsonw_int@@Base>

0000000000409e48 <jsonw_s64_field@@Base>:
  409e48:	stp	x29, x30, [sp, #-32]!
  409e4c:	mov	x29, sp
  409e50:	stp	x19, x20, [sp, #16]
  409e54:	mov	x20, x2
  409e58:	mov	x19, x0
  409e5c:	bl	409924 <jsonw_name@@Base>
  409e60:	mov	x1, x20
  409e64:	mov	x0, x19
  409e68:	ldp	x19, x20, [sp, #16]
  409e6c:	ldp	x29, x30, [sp], #32
  409e70:	b	409c4c <jsonw_s64@@Base>

0000000000409e74 <jsonw_null_field@@Base>:
  409e74:	stp	x29, x30, [sp, #-32]!
  409e78:	mov	x29, sp
  409e7c:	str	x19, [sp, #16]
  409e80:	mov	x19, x0
  409e84:	bl	409924 <jsonw_name@@Base>
  409e88:	mov	x0, x19
  409e8c:	ldr	x19, [sp, #16]
  409e90:	ldp	x29, x30, [sp], #32
  409e94:	b	409bc0 <jsonw_null@@Base>
  409e98:	stp	x29, x30, [sp, #-48]!
  409e9c:	mov	x2, #0x20                  	// #32
  409ea0:	movk	x2, #0x12, lsl #32
  409ea4:	mov	x29, sp
  409ea8:	movk	x2, #0x301, lsl #48
  409eac:	mov	w3, #0x0                   	// #0
  409eb0:	str	x2, [sp, #16]
  409eb4:	ldr	w2, [x0, #28]
  409eb8:	stp	xzr, xzr, [sp, #24]
  409ebc:	add	w2, w2, #0x1
  409ec0:	stp	w2, w2, [x0, #28]
  409ec4:	ldr	w0, [x0]
  409ec8:	str	w2, [sp, #24]
  409ecc:	mov	x2, #0x20                  	// #32
  409ed0:	strb	w1, [sp, #32]
  409ed4:	add	x1, sp, #0x10
  409ed8:	str	xzr, [sp, #40]
  409edc:	bl	404fa0 <send@plt>
  409ee0:	ldp	x29, x30, [sp], #48
  409ee4:	ret
  409ee8:	stp	x29, x30, [sp, #-48]!
  409eec:	mov	x29, sp
  409ef0:	stp	x19, x20, [sp, #16]
  409ef4:	mov	w20, w0
  409ef8:	stp	x21, x22, [sp, #32]
  409efc:	mov	x21, x1
  409f00:	mov	w22, w2
  409f04:	mov	w2, w22
  409f08:	mov	x1, x21
  409f0c:	mov	w0, w20
  409f10:	bl	404c30 <recvmsg@plt>
  409f14:	tbz	w0, #31, 409f64 <jsonw_null_field@@Base+0xf0>
  409f18:	bl	405110 <__errno_location@plt>
  409f1c:	mov	x19, x0
  409f20:	ldr	w0, [x0]
  409f24:	cmp	w0, #0x4
  409f28:	ccmp	w0, #0xb, #0x4, ne  // ne = any
  409f2c:	b.eq	409f04 <jsonw_null_field@@Base+0x90>  // b.none
  409f30:	adrp	x1, 41f000 <_IO_stdin_used@@Base+0x13268>
  409f34:	ldr	x1, [x1, #3992]
  409f38:	ldr	x20, [x1]
  409f3c:	bl	404e90 <strerror@plt>
  409f40:	ldr	w3, [x19]
  409f44:	mov	x2, x0
  409f48:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  409f4c:	mov	x0, x20
  409f50:	add	x1, x1, #0x5fe
  409f54:	bl	405150 <fprintf@plt>
  409f58:	ldr	w0, [x19]
  409f5c:	neg	w0, w0
  409f60:	b	409f84 <jsonw_null_field@@Base+0x110>
  409f64:	cbnz	w0, 409f84 <jsonw_null_field@@Base+0x110>
  409f68:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  409f6c:	ldr	x0, [x0, #3992]
  409f70:	ldr	x1, [x0]
  409f74:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  409f78:	add	x0, x0, #0x5ee
  409f7c:	bl	404c60 <fputs@plt>
  409f80:	mov	w0, #0xffffffc3            	// #-61
  409f84:	ldp	x19, x20, [sp, #16]
  409f88:	ldp	x21, x22, [sp, #32]
  409f8c:	ldp	x29, x30, [sp], #48
  409f90:	ret
  409f94:	stp	x29, x30, [sp, #-64]!
  409f98:	mov	x29, sp
  409f9c:	stp	x21, x22, [sp, #32]
  409fa0:	mov	x21, x1
  409fa4:	ldr	x22, [x1, #16]
  409fa8:	stp	x19, x20, [sp, #16]
  409fac:	stp	x23, x24, [sp, #48]
  409fb0:	mov	w24, w0
  409fb4:	mov	x23, x2
  409fb8:	stp	xzr, xzr, [x22]
  409fbc:	mov	w2, #0x22                  	// #34
  409fc0:	bl	409ee8 <jsonw_null_field@@Base+0x74>
  409fc4:	sxtw	x19, w0
  409fc8:	tbnz	w19, #31, 40a004 <jsonw_null_field@@Base+0x190>
  409fcc:	cmp	w19, #0x8, lsl #12
  409fd0:	mov	x0, #0x8000                	// #32768
  409fd4:	csel	x19, x19, x0, ge  // ge = tcont
  409fd8:	mov	x0, x19
  409fdc:	bl	404db0 <malloc@plt>
  409fe0:	mov	x20, x0
  409fe4:	cbnz	x0, 40a01c <jsonw_null_field@@Base+0x1a8>
  409fe8:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  409fec:	mov	w19, #0xfffffff4            	// #-12
  409ff0:	ldr	x0, [x0, #3992]
  409ff4:	ldr	x1, [x0]
  409ff8:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  409ffc:	add	x0, x0, #0x61d
  40a000:	bl	404c60 <fputs@plt>
  40a004:	mov	w0, w19
  40a008:	ldp	x19, x20, [sp, #16]
  40a00c:	ldp	x21, x22, [sp, #32]
  40a010:	ldp	x23, x24, [sp, #48]
  40a014:	ldp	x29, x30, [sp], #64
  40a018:	ret
  40a01c:	stp	x20, x19, [x22]
  40a020:	mov	x1, x21
  40a024:	mov	w0, w24
  40a028:	mov	w2, #0x0                   	// #0
  40a02c:	bl	409ee8 <jsonw_null_field@@Base+0x74>
  40a030:	mov	w19, w0
  40a034:	tbz	w0, #31, 40a044 <jsonw_null_field@@Base+0x1d0>
  40a038:	mov	x0, x20
  40a03c:	bl	404f80 <free@plt>
  40a040:	b	40a004 <jsonw_null_field@@Base+0x190>
  40a044:	str	x20, [x23]
  40a048:	b	40a004 <jsonw_null_field@@Base+0x190>

000000000040a04c <nl_dump_ext_ack@@Base>:
  40a04c:	mov	w0, #0x0                   	// #0
  40a050:	ret
  40a054:	stp	x29, x30, [sp, #-224]!
  40a058:	mov	x29, sp
  40a05c:	stp	x19, x20, [sp, #16]
  40a060:	mov	x19, x0
  40a064:	and	w0, w4, #0xff
  40a068:	str	w0, [sp, #120]
  40a06c:	mov	w0, #0x10                  	// #16
  40a070:	str	xzr, [sp, #136]
  40a074:	mov	w20, #0x0                   	// #0
  40a078:	stp	x21, x22, [sp, #32]
  40a07c:	mov	x21, x3
  40a080:	mov	x22, x2
  40a084:	add	x3, x1, x2, lsl #4
  40a088:	strh	w0, [sp, #136]
  40a08c:	add	x0, sp, #0x88
  40a090:	stp	xzr, xzr, [sp, #176]
  40a094:	stp	xzr, xzr, [sp, #192]
  40a098:	stp	x23, x24, [sp, #48]
  40a09c:	stp	x25, x26, [sp, #64]
  40a0a0:	stp	x27, x28, [sp, #80]
  40a0a4:	str	wzr, [sp, #144]
  40a0a8:	str	x0, [sp, #168]
  40a0ac:	mov	w0, #0xc                   	// #12
  40a0b0:	str	w0, [sp, #176]
  40a0b4:	stp	x1, x2, [sp, #184]
  40a0b8:	stp	xzr, xzr, [sp, #208]
  40a0bc:	cmp	x1, x3
  40a0c0:	b.ne	40a10c <nl_dump_ext_ack@@Base+0xc0>  // b.any
  40a0c4:	ldr	w0, [x19]
  40a0c8:	add	x26, sp, #0xa8
  40a0cc:	mov	x1, x26
  40a0d0:	mov	w2, #0x0                   	// #0
  40a0d4:	bl	404e30 <sendmsg@plt>
  40a0d8:	tbz	w0, #31, 40a138 <nl_dump_ext_ack@@Base+0xec>
  40a0dc:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  40a0e0:	add	x0, x0, #0x63e
  40a0e4:	bl	404c80 <perror@plt>
  40a0e8:	mov	w28, #0xffffffff            	// #-1
  40a0ec:	mov	w0, w28
  40a0f0:	ldp	x19, x20, [sp, #16]
  40a0f4:	ldp	x21, x22, [sp, #32]
  40a0f8:	ldp	x23, x24, [sp, #48]
  40a0fc:	ldp	x25, x26, [sp, #64]
  40a100:	ldp	x27, x28, [sp, #80]
  40a104:	ldp	x29, x30, [sp], #224
  40a108:	ret
  40a10c:	ldr	x0, [x1]
  40a110:	ldr	w20, [x19, #28]
  40a114:	add	w20, w20, #0x1
  40a118:	str	w20, [x19, #28]
  40a11c:	str	w20, [x0, #8]
  40a120:	cbnz	x21, 40a130 <nl_dump_ext_ack@@Base+0xe4>
  40a124:	ldrh	w2, [x0, #6]
  40a128:	orr	w2, w2, #0x4
  40a12c:	strh	w2, [x0, #6]
  40a130:	add	x1, x1, #0x10
  40a134:	b	40a0bc <nl_dump_ext_ack@@Base+0x70>
  40a138:	add	x0, sp, #0x98
  40a13c:	mov	w24, w20
  40a140:	add	x27, sp, #0x80
  40a144:	str	x0, [sp, #184]
  40a148:	mov	x0, #0x1                   	// #1
  40a14c:	mov	x23, #0x0                   	// #0
  40a150:	adrp	x25, 41f000 <_IO_stdin_used@@Base+0x13268>
  40a154:	str	x0, [sp, #192]
  40a158:	sub	x0, x24, x22
  40a15c:	str	x0, [sp, #104]
  40a160:	ldr	w0, [x19]
  40a164:	mov	x2, x27
  40a168:	mov	x1, x26
  40a16c:	str	w23, [sp, #100]
  40a170:	bl	409f94 <jsonw_null_field@@Base+0x120>
  40a174:	mov	w28, w0
  40a178:	tbnz	w0, #31, 40a0ec <nl_dump_ext_ack@@Base+0xa0>
  40a17c:	ldr	w2, [sp, #176]
  40a180:	cmp	w2, #0xc
  40a184:	b.eq	40a1a0 <nl_dump_ext_ack@@Base+0x154>  // b.none
  40a188:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  40a18c:	add	x1, x1, #0x657
  40a190:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  40a194:	ldr	x0, [x0, #3992]
  40a198:	ldr	x0, [x0]
  40a19c:	b	40a1f8 <nl_dump_ext_ack@@Base+0x1ac>
  40a1a0:	ldr	x5, [x25, #3992]
  40a1a4:	ldr	x24, [sp, #128]
  40a1a8:	adrp	x6, 40c000 <_IO_stdin_used@@Base+0x268>
  40a1ac:	b	40a244 <nl_dump_ext_ack@@Base+0x1f8>
  40a1b0:	ldr	w2, [x24]
  40a1b4:	subs	w1, w2, #0x10
  40a1b8:	ccmp	w2, w28, #0x0, pl  // pl = nfrst
  40a1bc:	b.le	40a204 <nl_dump_ext_ack@@Base+0x1b8>
  40a1c0:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  40a1c4:	ldr	w1, [sp, #216]
  40a1c8:	ldr	x0, [x0, #3992]
  40a1cc:	ldr	x0, [x0]
  40a1d0:	tbz	w1, #5, 40a1f0 <nl_dump_ext_ack@@Base+0x1a4>
  40a1d4:	mov	x1, x0
  40a1d8:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  40a1dc:	add	x0, x0, #0x674
  40a1e0:	bl	404c60 <fputs@plt>
  40a1e4:	ldr	x0, [sp, #128]
  40a1e8:	bl	404f80 <free@plt>
  40a1ec:	b	40a0e8 <nl_dump_ext_ack@@Base+0x9c>
  40a1f0:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  40a1f4:	add	x1, x1, #0x687
  40a1f8:	bl	405150 <fprintf@plt>
  40a1fc:	mov	w0, #0x1                   	// #1
  40a200:	bl	404c70 <exit@plt>
  40a204:	ldr	w0, [sp, #140]
  40a208:	cbnz	w0, 40a234 <nl_dump_ext_ack@@Base+0x1e8>
  40a20c:	ldr	w0, [x19, #8]
  40a210:	ldr	w7, [x24, #12]
  40a214:	cmp	w7, w0
  40a218:	b.ne	40a234 <nl_dump_ext_ack@@Base+0x1e8>  // b.any
  40a21c:	ldr	w0, [x24, #8]
  40a220:	cmp	w0, w20
  40a224:	b.hi	40a234 <nl_dump_ext_ack@@Base+0x1e8>  // b.pmore
  40a228:	ldr	x3, [sp, #104]
  40a22c:	cmp	x3, w0, uxtw
  40a230:	b.ls	40a278 <nl_dump_ext_ack@@Base+0x22c>  // b.plast
  40a234:	add	w2, w2, #0x3
  40a238:	and	w2, w2, #0xfffffffc
  40a23c:	sub	w28, w28, w2
  40a240:	add	x24, x24, w2, uxtw
  40a244:	cmp	w28, #0xf
  40a248:	b.hi	40a1b0 <nl_dump_ext_ack@@Base+0x164>  // b.pmore
  40a24c:	ldr	x0, [sp, #128]
  40a250:	bl	404f80 <free@plt>
  40a254:	ldr	w0, [sp, #216]
  40a258:	tbz	w0, #5, 40a390 <nl_dump_ext_ack@@Base+0x344>
  40a25c:	ldr	x0, [x25, #3992]
  40a260:	ldr	x1, [x0]
  40a264:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  40a268:	add	x0, x0, #0x6e2
  40a26c:	bl	404c60 <fputs@plt>
  40a270:	add	x23, x23, #0x1
  40a274:	b	40a160 <nl_dump_ext_ack@@Base+0x114>
  40a278:	ldrh	w0, [x24, #4]
  40a27c:	cmp	w0, #0x2
  40a280:	b.ne	40a34c <nl_dump_ext_ack@@Base+0x300>  // b.any
  40a284:	ldr	w28, [x24, #16]
  40a288:	cmp	w1, #0x13
  40a28c:	b.hi	40a2a8 <nl_dump_ext_ack@@Base+0x25c>  // b.pmore
  40a290:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  40a294:	ldr	x0, [x0, #3992]
  40a298:	ldr	x1, [x0]
  40a29c:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  40a2a0:	add	x0, x0, #0x6a5
  40a2a4:	b	40a1e0 <nl_dump_ext_ack@@Base+0x194>
  40a2a8:	cbnz	w28, 40a2e0 <nl_dump_ext_ack@@Base+0x294>
  40a2ac:	mov	x0, x24
  40a2b0:	mov	x1, #0x0                   	// #0
  40a2b4:	bl	40a04c <nl_dump_ext_ack@@Base>
  40a2b8:	ldr	x0, [sp, #128]
  40a2bc:	cbz	x21, 40a344 <nl_dump_ext_ack@@Base+0x2f8>
  40a2c0:	str	x0, [x21]
  40a2c4:	add	x0, x23, #0x1
  40a2c8:	cmp	x22, x0
  40a2cc:	b.hi	40a270 <nl_dump_ext_ack@@Base+0x224>  // b.pmore
  40a2d0:	cbz	w28, 40a0ec <nl_dump_ext_ack@@Base+0xa0>
  40a2d4:	ldr	w0, [sp, #100]
  40a2d8:	mvn	w28, w0
  40a2dc:	b	40a0ec <nl_dump_ext_ack@@Base+0xa0>
  40a2e0:	bl	405110 <__errno_location@plt>
  40a2e4:	neg	w1, w28
  40a2e8:	str	w1, [x0]
  40a2ec:	ldr	w0, [x19, #36]
  40a2f0:	cmp	w0, #0x4
  40a2f4:	b.eq	40a2b8 <nl_dump_ext_ack@@Base+0x26c>  // b.none
  40a2f8:	ldr	w0, [sp, #120]
  40a2fc:	cbz	w0, 40a2b8 <nl_dump_ext_ack@@Base+0x26c>
  40a300:	mov	x0, x24
  40a304:	mov	x1, #0x0                   	// #0
  40a308:	bl	40a04c <nl_dump_ext_ack@@Base>
  40a30c:	cbnz	w0, 40a2b8 <nl_dump_ext_ack@@Base+0x26c>
  40a310:	ldr	x0, [x25, #3992]
  40a314:	ldr	x5, [x0]
  40a318:	str	x5, [sp, #112]
  40a31c:	ldr	w0, [x24, #16]
  40a320:	neg	w0, w0
  40a324:	bl	404e90 <strerror@plt>
  40a328:	ldr	x5, [sp, #112]
  40a32c:	mov	x2, x0
  40a330:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  40a334:	add	x1, x1, #0x6b6
  40a338:	mov	x0, x5
  40a33c:	bl	405150 <fprintf@plt>
  40a340:	b	40a2b8 <nl_dump_ext_ack@@Base+0x26c>
  40a344:	bl	404f80 <free@plt>
  40a348:	b	40a2c4 <nl_dump_ext_ack@@Base+0x278>
  40a34c:	cbz	x21, 40a360 <nl_dump_ext_ack@@Base+0x314>
  40a350:	ldr	x0, [sp, #128]
  40a354:	mov	w28, #0x0                   	// #0
  40a358:	str	x0, [x21]
  40a35c:	b	40a0ec <nl_dump_ext_ack@@Base+0xa0>
  40a360:	ldr	x1, [x5]
  40a364:	add	x0, x6, #0x6cd
  40a368:	str	x5, [sp, #112]
  40a36c:	str	w2, [sp, #124]
  40a370:	bl	404c60 <fputs@plt>
  40a374:	ldr	w2, [sp, #124]
  40a378:	ldr	x5, [sp, #112]
  40a37c:	add	w2, w2, #0x3
  40a380:	and	w2, w2, #0xfffffffc
  40a384:	sub	w28, w28, w2
  40a388:	add	x24, x24, w2, uxtw
  40a38c:	b	40a1a8 <nl_dump_ext_ack@@Base+0x15c>
  40a390:	cbz	w28, 40a270 <nl_dump_ext_ack@@Base+0x224>
  40a394:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  40a398:	mov	w2, w28
  40a39c:	add	x1, x1, #0x6f5
  40a3a0:	b	40a190 <nl_dump_ext_ack@@Base+0x144>

000000000040a3a4 <nl_dump_ext_ack_done@@Base>:
  40a3a4:	mov	w0, #0x0                   	// #0
  40a3a8:	ret

000000000040a3ac <rtnl_set_strict_dump@@Base>:
  40a3ac:	stp	x29, x30, [sp, #-48]!
  40a3b0:	mov	w4, #0x4                   	// #4
  40a3b4:	mov	w2, #0xc                   	// #12
  40a3b8:	mov	x29, sp
  40a3bc:	str	x19, [sp, #16]
  40a3c0:	mov	x19, x0
  40a3c4:	mov	w0, #0x1                   	// #1
  40a3c8:	str	w0, [sp, #44]
  40a3cc:	add	x3, sp, #0x2c
  40a3d0:	mov	w1, #0x10e                 	// #270
  40a3d4:	ldr	w0, [x19]
  40a3d8:	bl	404dc0 <setsockopt@plt>
  40a3dc:	tbnz	w0, #31, 40a3ec <rtnl_set_strict_dump@@Base+0x40>
  40a3e0:	ldr	w0, [x19, #48]
  40a3e4:	orr	w0, w0, #0x4
  40a3e8:	str	w0, [x19, #48]
  40a3ec:	ldr	x19, [sp, #16]
  40a3f0:	ldp	x29, x30, [sp], #48
  40a3f4:	ret

000000000040a3f8 <rtnl_add_nl_group@@Base>:
  40a3f8:	stp	x29, x30, [sp, #-32]!
  40a3fc:	mov	w4, #0x4                   	// #4
  40a400:	mov	w2, #0x1                   	// #1
  40a404:	mov	x29, sp
  40a408:	ldr	w0, [x0]
  40a40c:	add	x3, sp, #0x1c
  40a410:	str	w1, [sp, #28]
  40a414:	mov	w1, #0x10e                 	// #270
  40a418:	bl	404dc0 <setsockopt@plt>
  40a41c:	ldp	x29, x30, [sp], #32
  40a420:	ret

000000000040a424 <rtnl_close@@Base>:
  40a424:	stp	x29, x30, [sp, #-32]!
  40a428:	mov	x29, sp
  40a42c:	str	x19, [sp, #16]
  40a430:	mov	x19, x0
  40a434:	ldr	w0, [x0]
  40a438:	tbnz	w0, #31, 40a448 <rtnl_close@@Base+0x24>
  40a43c:	bl	404ea0 <close@plt>
  40a440:	mov	w0, #0xffffffff            	// #-1
  40a444:	str	w0, [x19]
  40a448:	ldr	x19, [sp, #16]
  40a44c:	ldp	x29, x30, [sp], #32
  40a450:	ret

000000000040a454 <rtnl_open_byproto@@Base>:
  40a454:	stp	x29, x30, [sp, #-64]!
  40a458:	mov	x29, sp
  40a45c:	stp	x19, x20, [sp, #16]
  40a460:	mov	x19, x0
  40a464:	mov	w0, #0x8000                	// #32768
  40a468:	mov	w20, #0x1                   	// #1
  40a46c:	stp	w0, w20, [sp, #56]
  40a470:	stp	xzr, xzr, [x19, #32]
  40a474:	mov	w0, #0x10                  	// #16
  40a478:	stp	xzr, xzr, [x19]
  40a47c:	stp	xzr, xzr, [x19, #16]
  40a480:	str	w2, [x19, #36]
  40a484:	str	xzr, [x19, #48]
  40a488:	str	x21, [sp, #32]
  40a48c:	mov	w21, w1
  40a490:	mov	w1, #0x3                   	// #3
  40a494:	movk	w1, #0x8, lsl #16
  40a498:	bl	404ff0 <socket@plt>
  40a49c:	str	w0, [x19]
  40a4a0:	tbz	w0, #31, 40a4c4 <rtnl_open_byproto@@Base+0x70>
  40a4a4:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  40a4a8:	add	x0, x0, #0x70c
  40a4ac:	bl	404c80 <perror@plt>
  40a4b0:	mov	w0, #0xffffffff            	// #-1
  40a4b4:	ldp	x19, x20, [sp, #16]
  40a4b8:	ldr	x21, [sp, #32]
  40a4bc:	ldp	x29, x30, [sp], #64
  40a4c0:	ret
  40a4c4:	add	x3, sp, #0x38
  40a4c8:	mov	w1, w20
  40a4cc:	mov	w4, #0x4                   	// #4
  40a4d0:	mov	w2, #0x7                   	// #7
  40a4d4:	bl	404dc0 <setsockopt@plt>
  40a4d8:	tbz	w0, #31, 40a4e8 <rtnl_open_byproto@@Base+0x94>
  40a4dc:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  40a4e0:	add	x0, x0, #0x727
  40a4e4:	b	40a4ac <rtnl_open_byproto@@Base+0x58>
  40a4e8:	adrp	x3, 41f000 <_IO_stdin_used@@Base+0x13268>
  40a4ec:	ldr	w0, [x19]
  40a4f0:	mov	w1, w20
  40a4f4:	mov	w4, #0x4                   	// #4
  40a4f8:	ldr	x3, [x3, #4024]
  40a4fc:	mov	w2, #0x8                   	// #8
  40a500:	bl	404dc0 <setsockopt@plt>
  40a504:	tbz	w0, #31, 40a514 <rtnl_open_byproto@@Base+0xc0>
  40a508:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  40a50c:	add	x0, x0, #0x731
  40a510:	b	40a4ac <rtnl_open_byproto@@Base+0x58>
  40a514:	mov	x20, x19
  40a518:	mov	w2, #0xb                   	// #11
  40a51c:	mov	w1, #0x10e                 	// #270
  40a520:	add	x3, sp, #0x3c
  40a524:	mov	w4, #0x4                   	// #4
  40a528:	ldr	w0, [x20], #4
  40a52c:	bl	404dc0 <setsockopt@plt>
  40a530:	stur	wzr, [x19, #6]
  40a534:	mov	w0, #0x10                  	// #16
  40a538:	strh	w0, [x19, #4]
  40a53c:	ldr	w0, [x19]
  40a540:	mov	x1, x20
  40a544:	strh	wzr, [x19, #10]
  40a548:	mov	w2, #0xc                   	// #12
  40a54c:	str	w21, [x19, #12]
  40a550:	bl	404ce0 <bind@plt>
  40a554:	tbz	w0, #31, 40a564 <rtnl_open_byproto@@Base+0x110>
  40a558:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  40a55c:	add	x0, x0, #0x73b
  40a560:	b	40a4ac <rtnl_open_byproto@@Base+0x58>
  40a564:	mov	w0, #0xc                   	// #12
  40a568:	str	w0, [sp, #52]
  40a56c:	ldr	w0, [x19]
  40a570:	add	x2, sp, #0x34
  40a574:	mov	x1, x20
  40a578:	bl	405140 <getsockname@plt>
  40a57c:	tbz	w0, #31, 40a58c <rtnl_open_byproto@@Base+0x138>
  40a580:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  40a584:	add	x0, x0, #0x756
  40a588:	b	40a4ac <rtnl_open_byproto@@Base+0x58>
  40a58c:	ldr	w2, [sp, #52]
  40a590:	cmp	w2, #0xc
  40a594:	b.eq	40a5b4 <rtnl_open_byproto@@Base+0x160>  // b.none
  40a598:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  40a59c:	add	x1, x1, #0x769
  40a5a0:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  40a5a4:	ldr	x0, [x0, #3992]
  40a5a8:	ldr	x0, [x0]
  40a5ac:	bl	405150 <fprintf@plt>
  40a5b0:	b	40a4b0 <rtnl_open_byproto@@Base+0x5c>
  40a5b4:	ldrh	w2, [x19, #4]
  40a5b8:	cmp	w2, #0x10
  40a5bc:	b.eq	40a5cc <rtnl_open_byproto@@Base+0x178>  // b.none
  40a5c0:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  40a5c4:	add	x1, x1, #0x782
  40a5c8:	b	40a5a0 <rtnl_open_byproto@@Base+0x14c>
  40a5cc:	mov	x0, #0x0                   	// #0
  40a5d0:	bl	404da0 <time@plt>
  40a5d4:	str	w0, [x19, #28]
  40a5d8:	mov	w0, #0x0                   	// #0
  40a5dc:	b	40a4b4 <rtnl_open_byproto@@Base+0x60>

000000000040a5e0 <rtnl_open@@Base>:
  40a5e0:	mov	w2, #0x0                   	// #0
  40a5e4:	b	40a454 <rtnl_open_byproto@@Base>

000000000040a5e8 <rtnl_nexthopdump_req@@Base>:
  40a5e8:	stp	x29, x30, [sp, #-208]!
  40a5ec:	mov	x29, sp
  40a5f0:	stp	x19, x20, [sp, #16]
  40a5f4:	mov	x19, x0
  40a5f8:	mov	x20, x2
  40a5fc:	add	x0, sp, #0x40
  40a600:	mov	x2, #0x90                  	// #144
  40a604:	str	x21, [sp, #32]
  40a608:	mov	w21, w1
  40a60c:	mov	w1, #0x0                   	// #0
  40a610:	bl	404e10 <memset@plt>
  40a614:	mov	x0, #0x18                  	// #24
  40a618:	strb	w21, [sp, #72]
  40a61c:	movk	x0, #0x6a, lsl #32
  40a620:	add	x21, sp, #0x38
  40a624:	movk	x0, #0x301, lsl #48
  40a628:	str	x0, [sp, #56]
  40a62c:	ldr	w0, [x19, #28]
  40a630:	add	w0, w0, #0x1
  40a634:	stp	w0, w0, [x19, #28]
  40a638:	str	w0, [sp, #64]
  40a63c:	cbnz	x20, 40a664 <rtnl_nexthopdump_req@@Base+0x7c>
  40a640:	ldr	w0, [x19]
  40a644:	mov	x1, x21
  40a648:	mov	w3, #0x0                   	// #0
  40a64c:	mov	x2, #0x98                  	// #152
  40a650:	bl	404fa0 <send@plt>
  40a654:	ldp	x19, x20, [sp, #16]
  40a658:	ldr	x21, [sp, #32]
  40a65c:	ldp	x29, x30, [sp], #208
  40a660:	ret
  40a664:	mov	x0, x21
  40a668:	mov	w1, #0x98                  	// #152
  40a66c:	blr	x20
  40a670:	cbz	w0, 40a640 <rtnl_nexthopdump_req@@Base+0x58>
  40a674:	b	40a654 <rtnl_nexthopdump_req@@Base+0x6c>

000000000040a678 <rtnl_addrdump_req@@Base>:
  40a678:	stp	x29, x30, [sp, #-208]!
  40a67c:	mov	x29, sp
  40a680:	stp	x19, x20, [sp, #16]
  40a684:	mov	x19, x0
  40a688:	mov	x20, x2
  40a68c:	add	x0, sp, #0x40
  40a690:	mov	x2, #0x90                  	// #144
  40a694:	str	x21, [sp, #32]
  40a698:	mov	w21, w1
  40a69c:	mov	w1, #0x0                   	// #0
  40a6a0:	bl	404e10 <memset@plt>
  40a6a4:	mov	x0, #0x18                  	// #24
  40a6a8:	strb	w21, [sp, #72]
  40a6ac:	movk	x0, #0x16, lsl #32
  40a6b0:	add	x21, sp, #0x38
  40a6b4:	movk	x0, #0x301, lsl #48
  40a6b8:	str	x0, [sp, #56]
  40a6bc:	ldr	w0, [x19, #28]
  40a6c0:	add	w0, w0, #0x1
  40a6c4:	stp	w0, w0, [x19, #28]
  40a6c8:	str	w0, [sp, #64]
  40a6cc:	cbnz	x20, 40a6f4 <rtnl_addrdump_req@@Base+0x7c>
  40a6d0:	ldr	w0, [x19]
  40a6d4:	mov	x1, x21
  40a6d8:	mov	w3, #0x0                   	// #0
  40a6dc:	mov	x2, #0x98                  	// #152
  40a6e0:	bl	404fa0 <send@plt>
  40a6e4:	ldp	x19, x20, [sp, #16]
  40a6e8:	ldr	x21, [sp, #32]
  40a6ec:	ldp	x29, x30, [sp], #208
  40a6f0:	ret
  40a6f4:	mov	x0, x21
  40a6f8:	mov	w1, #0x98                  	// #152
  40a6fc:	blr	x20
  40a700:	cbz	w0, 40a6d0 <rtnl_addrdump_req@@Base+0x58>
  40a704:	b	40a6e4 <rtnl_addrdump_req@@Base+0x6c>

000000000040a708 <rtnl_addrlbldump_req@@Base>:
  40a708:	stp	x29, x30, [sp, #-48]!
  40a70c:	mov	x2, #0x1c                  	// #28
  40a710:	movk	x2, #0x4a, lsl #32
  40a714:	mov	x29, sp
  40a718:	movk	x2, #0x301, lsl #48
  40a71c:	mov	w3, #0x0                   	// #0
  40a720:	str	x2, [sp, #16]
  40a724:	ldr	w2, [x0, #28]
  40a728:	stp	xzr, xzr, [sp, #24]
  40a72c:	add	w2, w2, #0x1
  40a730:	stp	w2, w2, [x0, #28]
  40a734:	ldr	w0, [x0]
  40a738:	str	w2, [sp, #24]
  40a73c:	mov	x2, #0x1c                  	// #28
  40a740:	strb	w1, [sp, #32]
  40a744:	add	x1, sp, #0x10
  40a748:	str	wzr, [sp, #40]
  40a74c:	bl	404fa0 <send@plt>
  40a750:	ldp	x29, x30, [sp], #48
  40a754:	ret

000000000040a758 <rtnl_routedump_req@@Base>:
  40a758:	stp	x29, x30, [sp, #-208]!
  40a75c:	mov	x29, sp
  40a760:	stp	x19, x20, [sp, #16]
  40a764:	mov	x19, x0
  40a768:	mov	x20, x2
  40a76c:	add	x0, sp, #0x38
  40a770:	mov	x2, #0x94                  	// #148
  40a774:	str	x21, [sp, #32]
  40a778:	mov	w21, w1
  40a77c:	mov	w1, #0x0                   	// #0
  40a780:	bl	404e10 <memset@plt>
  40a784:	mov	x0, #0x1c                  	// #28
  40a788:	strb	w21, [sp, #64]
  40a78c:	movk	x0, #0x1a, lsl #32
  40a790:	add	x21, sp, #0x30
  40a794:	movk	x0, #0x301, lsl #48
  40a798:	str	x0, [sp, #48]
  40a79c:	ldr	w0, [x19, #28]
  40a7a0:	add	w0, w0, #0x1
  40a7a4:	stp	w0, w0, [x19, #28]
  40a7a8:	str	w0, [sp, #56]
  40a7ac:	cbnz	x20, 40a7d4 <rtnl_routedump_req@@Base+0x7c>
  40a7b0:	ldr	w0, [x19]
  40a7b4:	mov	x1, x21
  40a7b8:	mov	w3, #0x0                   	// #0
  40a7bc:	mov	x2, #0x9c                  	// #156
  40a7c0:	bl	404fa0 <send@plt>
  40a7c4:	ldp	x19, x20, [sp, #16]
  40a7c8:	ldr	x21, [sp, #32]
  40a7cc:	ldp	x29, x30, [sp], #208
  40a7d0:	ret
  40a7d4:	mov	x0, x21
  40a7d8:	mov	w1, #0x9c                  	// #156
  40a7dc:	blr	x20
  40a7e0:	cbz	w0, 40a7b0 <rtnl_routedump_req@@Base+0x58>
  40a7e4:	b	40a7c4 <rtnl_routedump_req@@Base+0x6c>

000000000040a7e8 <rtnl_ruledump_req@@Base>:
  40a7e8:	stp	x29, x30, [sp, #-48]!
  40a7ec:	mov	x2, #0x1c                  	// #28
  40a7f0:	movk	x2, #0x22, lsl #32
  40a7f4:	mov	x29, sp
  40a7f8:	movk	x2, #0x301, lsl #48
  40a7fc:	mov	w3, #0x0                   	// #0
  40a800:	str	x2, [sp, #16]
  40a804:	ldr	w2, [x0, #28]
  40a808:	stp	xzr, xzr, [sp, #24]
  40a80c:	add	w2, w2, #0x1
  40a810:	stp	w2, w2, [x0, #28]
  40a814:	ldr	w0, [x0]
  40a818:	str	w2, [sp, #24]
  40a81c:	mov	x2, #0x1c                  	// #28
  40a820:	strb	w1, [sp, #32]
  40a824:	add	x1, sp, #0x10
  40a828:	str	wzr, [sp, #40]
  40a82c:	bl	404fa0 <send@plt>
  40a830:	ldp	x29, x30, [sp], #48
  40a834:	ret

000000000040a838 <rtnl_neighdump_req@@Base>:
  40a838:	stp	x29, x30, [sp, #-336]!
  40a83c:	mov	x29, sp
  40a840:	stp	x21, x22, [sp, #32]
  40a844:	add	x21, sp, #0x30
  40a848:	mov	w22, w1
  40a84c:	mov	w1, #0x0                   	// #0
  40a850:	stp	x19, x20, [sp, #16]
  40a854:	mov	x19, x0
  40a858:	mov	x20, x2
  40a85c:	mov	x0, x21
  40a860:	mov	x2, #0x11c                 	// #284
  40a864:	bl	404e10 <memset@plt>
  40a868:	mov	x0, #0x1c                  	// #28
  40a86c:	strb	w22, [sp, #64]
  40a870:	movk	x0, #0x1e, lsl #32
  40a874:	movk	x0, #0x301, lsl #48
  40a878:	str	x0, [sp, #48]
  40a87c:	ldr	w0, [x19, #28]
  40a880:	add	w0, w0, #0x1
  40a884:	stp	w0, w0, [x19, #28]
  40a888:	str	w0, [sp, #56]
  40a88c:	cbnz	x20, 40a8b4 <rtnl_neighdump_req@@Base+0x7c>
  40a890:	ldr	w0, [x19]
  40a894:	mov	x1, x21
  40a898:	mov	w3, #0x0                   	// #0
  40a89c:	mov	x2, #0x11c                 	// #284
  40a8a0:	bl	404fa0 <send@plt>
  40a8a4:	ldp	x19, x20, [sp, #16]
  40a8a8:	ldp	x21, x22, [sp, #32]
  40a8ac:	ldp	x29, x30, [sp], #336
  40a8b0:	ret
  40a8b4:	mov	x0, x21
  40a8b8:	mov	w1, #0x11c                 	// #284
  40a8bc:	blr	x20
  40a8c0:	cbz	w0, 40a890 <rtnl_neighdump_req@@Base+0x58>
  40a8c4:	b	40a8a4 <rtnl_neighdump_req@@Base+0x6c>

000000000040a8c8 <rtnl_neightbldump_req@@Base>:
  40a8c8:	stp	x29, x30, [sp, #-48]!
  40a8cc:	mov	x2, #0x14                  	// #20
  40a8d0:	movk	x2, #0x42, lsl #32
  40a8d4:	mov	x29, sp
  40a8d8:	movk	x2, #0x301, lsl #48
  40a8dc:	mov	w3, #0x0                   	// #0
  40a8e0:	str	x2, [sp, #24]
  40a8e4:	ldr	w2, [x0, #28]
  40a8e8:	stur	xzr, [sp, #36]
  40a8ec:	add	w2, w2, #0x1
  40a8f0:	stp	w2, w2, [x0, #28]
  40a8f4:	ldr	w0, [x0]
  40a8f8:	str	w2, [sp, #32]
  40a8fc:	mov	x2, #0x14                  	// #20
  40a900:	strb	w1, [sp, #40]
  40a904:	add	x1, sp, #0x18
  40a908:	bl	404fa0 <send@plt>
  40a90c:	ldp	x29, x30, [sp], #48
  40a910:	ret

000000000040a914 <rtnl_mdbdump_req@@Base>:
  40a914:	stp	x29, x30, [sp, #-48]!
  40a918:	mov	x2, #0x18                  	// #24
  40a91c:	movk	x2, #0x56, lsl #32
  40a920:	mov	x29, sp
  40a924:	movk	x2, #0x301, lsl #48
  40a928:	mov	w3, #0x0                   	// #0
  40a92c:	str	x2, [sp, #24]
  40a930:	ldr	w2, [x0, #28]
  40a934:	stp	xzr, xzr, [sp, #32]
  40a938:	add	w2, w2, #0x1
  40a93c:	stp	w2, w2, [x0, #28]
  40a940:	ldr	w0, [x0]
  40a944:	str	w2, [sp, #32]
  40a948:	mov	x2, #0x18                  	// #24
  40a94c:	strb	w1, [sp, #40]
  40a950:	add	x1, sp, x2
  40a954:	bl	404fa0 <send@plt>
  40a958:	ldp	x29, x30, [sp], #48
  40a95c:	ret

000000000040a960 <rtnl_netconfdump_req@@Base>:
  40a960:	stp	x29, x30, [sp, #-48]!
  40a964:	mov	x2, #0x14                  	// #20
  40a968:	movk	x2, #0x52, lsl #32
  40a96c:	mov	x29, sp
  40a970:	movk	x2, #0x301, lsl #48
  40a974:	mov	w3, #0x0                   	// #0
  40a978:	str	x2, [sp, #24]
  40a97c:	ldr	w2, [x0, #28]
  40a980:	stur	xzr, [sp, #36]
  40a984:	add	w2, w2, #0x1
  40a988:	stp	w2, w2, [x0, #28]
  40a98c:	ldr	w0, [x0]
  40a990:	str	w2, [sp, #32]
  40a994:	mov	x2, #0x14                  	// #20
  40a998:	strb	w1, [sp, #40]
  40a99c:	add	x1, sp, #0x18
  40a9a0:	bl	404fa0 <send@plt>
  40a9a4:	ldp	x29, x30, [sp], #48
  40a9a8:	ret

000000000040a9ac <rtnl_nsiddump_req_filter_fn@@Base>:
  40a9ac:	sub	sp, sp, #0x450
  40a9b0:	stp	x29, x30, [sp]
  40a9b4:	mov	x29, sp
  40a9b8:	stp	x21, x22, [sp, #32]
  40a9bc:	add	x21, sp, #0x38
  40a9c0:	mov	w22, w1
  40a9c4:	mov	w1, #0x0                   	// #0
  40a9c8:	stp	x19, x20, [sp, #16]
  40a9cc:	mov	x19, x0
  40a9d0:	mov	x20, x2
  40a9d4:	mov	x0, x21
  40a9d8:	mov	x2, #0x414                 	// #1044
  40a9dc:	bl	404e10 <memset@plt>
  40a9e0:	mov	x0, #0x14                  	// #20
  40a9e4:	strb	w22, [sp, #72]
  40a9e8:	movk	x0, #0x5a, lsl #32
  40a9ec:	movk	x0, #0x301, lsl #48
  40a9f0:	str	x0, [sp, #56]
  40a9f4:	ldr	w0, [x19, #28]
  40a9f8:	add	w0, w0, #0x1
  40a9fc:	stp	w0, w0, [x19, #28]
  40aa00:	str	w0, [sp, #64]
  40aa04:	cbz	x20, 40aa40 <rtnl_nsiddump_req_filter_fn@@Base+0x94>
  40aa08:	mov	x0, x21
  40aa0c:	mov	w1, #0x414                 	// #1044
  40aa10:	blr	x20
  40aa14:	cbnz	w0, 40aa2c <rtnl_nsiddump_req_filter_fn@@Base+0x80>
  40aa18:	ldr	w0, [x19]
  40aa1c:	mov	x1, x21
  40aa20:	ldr	w2, [sp, #56]
  40aa24:	mov	w3, #0x0                   	// #0
  40aa28:	bl	404fa0 <send@plt>
  40aa2c:	ldp	x29, x30, [sp]
  40aa30:	ldp	x19, x20, [sp, #16]
  40aa34:	ldp	x21, x22, [sp, #32]
  40aa38:	add	sp, sp, #0x450
  40aa3c:	ret
  40aa40:	mov	w0, #0xffffffea            	// #-22
  40aa44:	b	40aa2c <rtnl_nsiddump_req_filter_fn@@Base+0x80>

000000000040aa48 <rtnl_linkdump_req_filter@@Base>:
  40aa48:	stp	x29, x30, [sp, #-64]!
  40aa4c:	cmp	w1, #0x0
  40aa50:	ccmp	w1, #0x7, #0x4, ne  // ne = any
  40aa54:	mov	x29, sp
  40aa58:	b.ne	40aab8 <rtnl_linkdump_req_filter@@Base+0x70>  // b.any
  40aa5c:	mov	x4, x0
  40aa60:	mov	x0, #0x28                  	// #40
  40aa64:	movk	x0, #0x12, lsl #32
  40aa68:	stp	xzr, xzr, [sp, #32]
  40aa6c:	movk	x0, #0x301, lsl #48
  40aa70:	str	x0, [sp, #24]
  40aa74:	mov	w3, #0x0                   	// #0
  40aa78:	ldr	w0, [x4, #28]
  40aa7c:	strb	w1, [sp, #40]
  40aa80:	add	x1, sp, #0x18
  40aa84:	add	w0, w0, #0x1
  40aa88:	stp	w0, w0, [x4, #28]
  40aa8c:	str	w0, [sp, #32]
  40aa90:	mov	w0, #0x8                   	// #8
  40aa94:	movk	w0, #0x1d, lsl #16
  40aa98:	str	w0, [sp, #56]
  40aa9c:	ldr	w0, [x4]
  40aaa0:	str	xzr, [sp, #48]
  40aaa4:	str	w2, [sp, #60]
  40aaa8:	mov	x2, #0x28                  	// #40
  40aaac:	bl	404fa0 <send@plt>
  40aab0:	ldp	x29, x30, [sp], #64
  40aab4:	ret
  40aab8:	bl	409e98 <jsonw_null_field@@Base+0x24>
  40aabc:	b	40aab0 <rtnl_linkdump_req_filter@@Base+0x68>

000000000040aac0 <rtnl_linkdump_req@@Base>:
  40aac0:	cbnz	w1, 40aacc <rtnl_linkdump_req@@Base+0xc>
  40aac4:	mov	w2, #0x1                   	// #1
  40aac8:	b	40aa48 <rtnl_linkdump_req_filter@@Base>
  40aacc:	b	409e98 <jsonw_null_field@@Base+0x24>

000000000040aad0 <rtnl_linkdump_req_filter_fn@@Base>:
  40aad0:	sub	sp, sp, #0x450
  40aad4:	cmp	w1, #0x0
  40aad8:	ccmp	w1, #0x11, #0x4, ne  // ne = any
  40aadc:	stp	x29, x30, [sp]
  40aae0:	mov	x29, sp
  40aae4:	stp	x19, x20, [sp, #16]
  40aae8:	stp	x21, x22, [sp, #32]
  40aaec:	b.ne	40ab78 <rtnl_linkdump_req_filter_fn@@Base+0xa8>  // b.any
  40aaf0:	add	x22, sp, #0x30
  40aaf4:	mov	x19, x0
  40aaf8:	mov	w20, w1
  40aafc:	mov	x21, x2
  40ab00:	mov	x0, x22
  40ab04:	mov	x2, #0x420                 	// #1056
  40ab08:	mov	w1, #0x0                   	// #0
  40ab0c:	bl	404e10 <memset@plt>
  40ab10:	mov	x0, #0x20                  	// #32
  40ab14:	strb	w20, [sp, #64]
  40ab18:	movk	x0, #0x12, lsl #32
  40ab1c:	movk	x0, #0x301, lsl #48
  40ab20:	str	x0, [sp, #48]
  40ab24:	ldr	w0, [x19, #28]
  40ab28:	add	w0, w0, #0x1
  40ab2c:	stp	w0, w0, [x19, #28]
  40ab30:	str	w0, [sp, #56]
  40ab34:	cbz	x21, 40ab70 <rtnl_linkdump_req_filter_fn@@Base+0xa0>
  40ab38:	mov	x0, x22
  40ab3c:	mov	w1, #0x420                 	// #1056
  40ab40:	blr	x21
  40ab44:	cbnz	w0, 40ab5c <rtnl_linkdump_req_filter_fn@@Base+0x8c>
  40ab48:	ldr	w0, [x19]
  40ab4c:	mov	x1, x22
  40ab50:	ldr	w2, [sp, #48]
  40ab54:	mov	w3, #0x0                   	// #0
  40ab58:	bl	404fa0 <send@plt>
  40ab5c:	ldp	x29, x30, [sp]
  40ab60:	ldp	x19, x20, [sp, #16]
  40ab64:	ldp	x21, x22, [sp, #32]
  40ab68:	add	sp, sp, #0x450
  40ab6c:	ret
  40ab70:	mov	w0, #0xffffffea            	// #-22
  40ab74:	b	40ab5c <rtnl_linkdump_req_filter_fn@@Base+0x8c>
  40ab78:	bl	409e98 <jsonw_null_field@@Base+0x24>
  40ab7c:	b	40ab5c <rtnl_linkdump_req_filter_fn@@Base+0x8c>

000000000040ab80 <rtnl_fdb_linkdump_req_filter_fn@@Base>:
  40ab80:	stp	x29, x30, [sp, #-208]!
  40ab84:	mov	x2, #0x98                  	// #152
  40ab88:	mov	x29, sp
  40ab8c:	stp	x19, x20, [sp, #16]
  40ab90:	mov	x19, x0
  40ab94:	mov	x20, x1
  40ab98:	add	x0, sp, #0x38
  40ab9c:	mov	w1, #0x0                   	// #0
  40aba0:	str	x21, [sp, #32]
  40aba4:	bl	404e10 <memset@plt>
  40aba8:	mov	x0, #0x20                  	// #32
  40abac:	add	x21, sp, #0x30
  40abb0:	movk	x0, #0x1e, lsl #32
  40abb4:	mov	w1, #0xa0                  	// #160
  40abb8:	movk	x0, #0x301, lsl #48
  40abbc:	str	x0, [sp, #48]
  40abc0:	ldr	w0, [x19, #28]
  40abc4:	add	w0, w0, #0x1
  40abc8:	stp	w0, w0, [x19, #28]
  40abcc:	str	w0, [sp, #56]
  40abd0:	mov	w0, #0x7                   	// #7
  40abd4:	strb	w0, [sp, #64]
  40abd8:	mov	x0, x21
  40abdc:	blr	x20
  40abe0:	cbnz	w0, 40abf8 <rtnl_fdb_linkdump_req_filter_fn@@Base+0x78>
  40abe4:	ldr	w0, [x19]
  40abe8:	mov	x1, x21
  40abec:	mov	w3, #0x0                   	// #0
  40abf0:	mov	x2, #0xa0                  	// #160
  40abf4:	bl	404fa0 <send@plt>
  40abf8:	ldp	x19, x20, [sp, #16]
  40abfc:	ldr	x21, [sp, #32]
  40ac00:	ldp	x29, x30, [sp], #208
  40ac04:	ret

000000000040ac08 <rtnl_statsdump_req_filter@@Base>:
  40ac08:	stp	x29, x30, [sp, #-48]!
  40ac0c:	mov	x3, #0x1c                  	// #28
  40ac10:	movk	x3, #0x5e, lsl #32
  40ac14:	mov	x29, sp
  40ac18:	movk	x3, #0x301, lsl #48
  40ac1c:	str	x3, [sp, #16]
  40ac20:	ldr	w3, [x0, #28]
  40ac24:	stp	xzr, xzr, [sp, #24]
  40ac28:	add	w3, w3, #0x1
  40ac2c:	stp	w3, w3, [x0, #28]
  40ac30:	ldr	w0, [x0]
  40ac34:	str	w3, [sp, #24]
  40ac38:	mov	w3, #0x0                   	// #0
  40ac3c:	strb	w1, [sp, #32]
  40ac40:	add	x1, sp, #0x10
  40ac44:	str	w2, [sp, #40]
  40ac48:	mov	x2, #0x1c                  	// #28
  40ac4c:	bl	404fa0 <send@plt>
  40ac50:	ldp	x29, x30, [sp], #48
  40ac54:	ret

000000000040ac58 <rtnl_send@@Base>:
  40ac58:	stp	x29, x30, [sp, #-16]!
  40ac5c:	sxtw	x2, w2
  40ac60:	mov	w3, #0x0                   	// #0
  40ac64:	mov	x29, sp
  40ac68:	ldr	w0, [x0]
  40ac6c:	bl	404fa0 <send@plt>
  40ac70:	ldp	x29, x30, [sp], #16
  40ac74:	ret

000000000040ac78 <rtnl_send_check@@Base>:
  40ac78:	sub	sp, sp, #0x420
  40ac7c:	sxtw	x2, w2
  40ac80:	mov	w3, #0x0                   	// #0
  40ac84:	stp	x29, x30, [sp]
  40ac88:	mov	x29, sp
  40ac8c:	stp	x19, x20, [sp, #16]
  40ac90:	mov	x20, x0
  40ac94:	ldr	w0, [x0]
  40ac98:	bl	404fa0 <send@plt>
  40ac9c:	tbnz	w0, #31, 40acd0 <rtnl_send_check@@Base+0x58>
  40aca0:	ldr	w0, [x20]
  40aca4:	add	x19, sp, #0x20
  40aca8:	mov	x1, x19
  40acac:	mov	w3, #0x42                  	// #66
  40acb0:	mov	x2, #0x400                 	// #1024
  40acb4:	bl	404ec0 <recv@plt>
  40acb8:	mov	w1, w0
  40acbc:	tbz	w0, #31, 40ad38 <rtnl_send_check@@Base+0xc0>
  40acc0:	bl	405110 <__errno_location@plt>
  40acc4:	ldr	w0, [x0]
  40acc8:	cmp	w0, #0xb
  40accc:	csetm	w0, ne  // ne = any
  40acd0:	ldp	x29, x30, [sp]
  40acd4:	ldp	x19, x20, [sp, #16]
  40acd8:	add	sp, sp, #0x420
  40acdc:	ret
  40ace0:	ldrh	w2, [x19, #4]
  40ace4:	cmp	w2, #0x2
  40ace8:	b.ne	40ad28 <rtnl_send_check@@Base+0xb0>  // b.any
  40acec:	cmp	w0, #0x23
  40acf0:	b.hi	40ad14 <rtnl_send_check@@Base+0x9c>  // b.pmore
  40acf4:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  40acf8:	ldr	x0, [x0, #3992]
  40acfc:	ldr	x1, [x0]
  40ad00:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  40ad04:	add	x0, x0, #0x6a5
  40ad08:	bl	404c60 <fputs@plt>
  40ad0c:	mov	w0, #0xffffffff            	// #-1
  40ad10:	b	40acd0 <rtnl_send_check@@Base+0x58>
  40ad14:	bl	405110 <__errno_location@plt>
  40ad18:	ldr	w1, [x19, #16]
  40ad1c:	neg	w1, w1
  40ad20:	str	w1, [x0]
  40ad24:	b	40ad0c <rtnl_send_check@@Base+0x94>
  40ad28:	add	w0, w0, #0x3
  40ad2c:	and	w0, w0, #0xfffffffc
  40ad30:	sub	w1, w1, w0
  40ad34:	add	x19, x19, w0, uxtw
  40ad38:	cmp	w1, #0xf
  40ad3c:	b.le	40ad54 <rtnl_send_check@@Base+0xdc>
  40ad40:	ldr	w0, [x19]
  40ad44:	cmp	w0, #0xf
  40ad48:	b.ls	40ad54 <rtnl_send_check@@Base+0xdc>  // b.plast
  40ad4c:	cmp	w0, w1
  40ad50:	b.ls	40ace0 <rtnl_send_check@@Base+0x68>  // b.plast
  40ad54:	mov	w0, #0x0                   	// #0
  40ad58:	b	40acd0 <rtnl_send_check@@Base+0x58>

000000000040ad5c <rtnl_dump_request@@Base>:
  40ad5c:	stp	x29, x30, [sp, #-144]!
  40ad60:	add	w4, w3, #0x10
  40ad64:	sxtw	x3, w3
  40ad68:	mov	x29, sp
  40ad6c:	strh	w1, [sp, #44]
  40ad70:	mov	w1, #0x301                 	// #769
  40ad74:	strh	w1, [sp, #46]
  40ad78:	ldr	w1, [x0, #28]
  40ad7c:	str	xzr, [sp, #24]
  40ad80:	add	w1, w1, #0x1
  40ad84:	stp	w1, w1, [x0, #28]
  40ad88:	stp	w1, wzr, [sp, #48]
  40ad8c:	mov	w1, #0x10                  	// #16
  40ad90:	strh	w1, [sp, #24]
  40ad94:	add	x1, sp, #0x28
  40ad98:	str	x1, [sp, #56]
  40ad9c:	mov	x1, #0x10                  	// #16
  40ada0:	ldr	w0, [x0]
  40ada4:	str	x1, [sp, #64]
  40ada8:	add	x1, sp, #0x18
  40adac:	str	x1, [sp, #88]
  40adb0:	mov	w1, #0xc                   	// #12
  40adb4:	stp	xzr, xzr, [sp, #96]
  40adb8:	str	w1, [sp, #96]
  40adbc:	add	x1, sp, #0x38
  40adc0:	str	x1, [sp, #104]
  40adc4:	mov	x1, #0x2                   	// #2
  40adc8:	stp	xzr, xzr, [sp, #112]
  40adcc:	str	wzr, [sp, #32]
  40add0:	str	w4, [sp, #40]
  40add4:	stp	x2, x3, [sp, #72]
  40add8:	mov	w2, #0x0                   	// #0
  40addc:	str	x1, [sp, #112]
  40ade0:	add	x1, sp, #0x58
  40ade4:	stp	xzr, xzr, [sp, #128]
  40ade8:	bl	404e30 <sendmsg@plt>
  40adec:	ldp	x29, x30, [sp], #144
  40adf0:	ret

000000000040adf4 <rtnl_dump_request_n@@Base>:
  40adf4:	stp	x29, x30, [sp, #-112]!
  40adf8:	mov	w2, #0x10                  	// #16
  40adfc:	mov	x29, sp
  40ae00:	str	xzr, [sp, #24]
  40ae04:	strh	w2, [sp, #24]
  40ae08:	ldr	w2, [x1]
  40ae0c:	str	x2, [sp, #48]
  40ae10:	add	x2, sp, #0x18
  40ae14:	str	x2, [sp, #56]
  40ae18:	mov	w2, #0xc                   	// #12
  40ae1c:	stp	xzr, xzr, [sp, #64]
  40ae20:	str	w2, [sp, #64]
  40ae24:	add	x2, sp, #0x28
  40ae28:	str	x2, [sp, #72]
  40ae2c:	mov	x2, #0x1                   	// #1
  40ae30:	stp	xzr, xzr, [sp, #80]
  40ae34:	str	x2, [sp, #80]
  40ae38:	mov	w2, #0x301                 	// #769
  40ae3c:	strh	w2, [x1, #6]
  40ae40:	ldr	w2, [x0, #28]
  40ae44:	str	wzr, [x1, #12]
  40ae48:	add	w2, w2, #0x1
  40ae4c:	stp	w2, w2, [x0, #28]
  40ae50:	ldr	w0, [x0]
  40ae54:	str	w2, [x1, #8]
  40ae58:	mov	w2, #0x0                   	// #0
  40ae5c:	str	wzr, [sp, #32]
  40ae60:	str	x1, [sp, #40]
  40ae64:	add	x1, sp, #0x38
  40ae68:	stp	xzr, xzr, [sp, #96]
  40ae6c:	bl	404e30 <sendmsg@plt>
  40ae70:	ldp	x29, x30, [sp], #112
  40ae74:	ret

000000000040ae78 <rtnl_dump_filter_nc@@Base>:
  40ae78:	stp	x29, x30, [sp, #-256]!
  40ae7c:	mov	x29, sp
  40ae80:	stp	x21, x22, [sp, #32]
  40ae84:	mov	x21, x0
  40ae88:	add	x0, sp, #0x78
  40ae8c:	stp	x25, x26, [sp, #64]
  40ae90:	add	x26, sp, #0x70
  40ae94:	stp	x27, x28, [sp, #80]
  40ae98:	add	x27, sp, #0xc8
  40ae9c:	str	x0, [sp, #200]
  40aea0:	mov	w0, #0xc                   	// #12
  40aea4:	stp	xzr, xzr, [sp, #208]
  40aea8:	stp	xzr, xzr, [sp, #224]
  40aeac:	stp	x19, x20, [sp, #16]
  40aeb0:	mov	w20, #0x0                   	// #0
  40aeb4:	stp	x23, x24, [sp, #48]
  40aeb8:	mov	x24, #0x1                   	// #1
  40aebc:	stp	x1, x2, [sp, #152]
  40aec0:	strh	w3, [sp, #168]
  40aec4:	stp	xzr, xzr, [sp, #176]
  40aec8:	strh	wzr, [sp, #192]
  40aecc:	str	w0, [sp, #208]
  40aed0:	add	x0, sp, #0x88
  40aed4:	str	x0, [sp, #216]
  40aed8:	str	x24, [sp, #224]
  40aedc:	stp	xzr, xzr, [sp, #240]
  40aee0:	ldr	w0, [x21]
  40aee4:	mov	x2, x26
  40aee8:	mov	x1, x27
  40aeec:	bl	409f94 <jsonw_null_field@@Base+0x120>
  40aef0:	mov	w23, w0
  40aef4:	tbnz	w0, #31, 40b190 <rtnl_dump_filter_nc@@Base+0x318>
  40aef8:	ldr	x3, [x21, #40]
  40aefc:	cbz	x3, 40af14 <rtnl_dump_filter_nc@@Base+0x9c>
  40af00:	add	w2, w0, #0x3
  40af04:	mov	x1, #0x1                   	// #1
  40af08:	ldr	x0, [sp, #112]
  40af0c:	and	x2, x2, #0xfffffffc
  40af10:	bl	404fe0 <fwrite@plt>
  40af14:	add	x28, sp, #0x98
  40af18:	mov	w22, #0x0                   	// #0
  40af1c:	mov	w25, #0x0                   	// #0
  40af20:	ldr	x2, [x28]
  40af24:	ldr	x19, [sp, #112]
  40af28:	cbnz	x2, 40b13c <rtnl_dump_filter_nc@@Base+0x2c4>
  40af2c:	mov	x0, x19
  40af30:	bl	404f80 <free@plt>
  40af34:	cbz	w25, 40b144 <rtnl_dump_filter_nc@@Base+0x2cc>
  40af38:	cbz	w20, 40afa0 <rtnl_dump_filter_nc@@Base+0x128>
  40af3c:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  40af40:	mov	w20, #0x0                   	// #0
  40af44:	ldr	x0, [x0, #3992]
  40af48:	ldr	x1, [x0]
  40af4c:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  40af50:	add	x0, x0, #0x7e2
  40af54:	bl	404c60 <fputs@plt>
  40af58:	b	40afa0 <rtnl_dump_filter_nc@@Base+0x128>
  40af5c:	tbz	w25, #31, 40afd8 <rtnl_dump_filter_nc@@Base+0x160>
  40af60:	mov	w1, w25
  40af64:	mov	x0, x19
  40af68:	bl	40a3a4 <nl_dump_ext_ack_done@@Base>
  40af6c:	cbnz	w0, 40af94 <rtnl_dump_filter_nc@@Base+0x11c>
  40af70:	bl	405110 <__errno_location@plt>
  40af74:	neg	w1, w25
  40af78:	str	w1, [x0]
  40af7c:	cmn	w25, #0x5a
  40af80:	b.eq	40afc0 <rtnl_dump_filter_nc@@Base+0x148>  // b.none
  40af84:	cmn	w25, #0x5f
  40af88:	b.eq	40af94 <rtnl_dump_filter_nc@@Base+0x11c>  // b.none
  40af8c:	cmn	w25, #0x2
  40af90:	b.ne	40b048 <rtnl_dump_filter_nc@@Base+0x1d0>  // b.any
  40af94:	ldr	x0, [sp, #112]
  40af98:	mov	w20, #0xffffffff            	// #-1
  40af9c:	bl	404f80 <free@plt>
  40afa0:	mov	w0, w20
  40afa4:	ldp	x19, x20, [sp, #16]
  40afa8:	ldp	x21, x22, [sp, #32]
  40afac:	ldp	x23, x24, [sp, #48]
  40afb0:	ldp	x25, x26, [sp, #64]
  40afb4:	ldp	x27, x28, [sp, #80]
  40afb8:	ldp	x29, x30, [sp], #256
  40afbc:	ret
  40afc0:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  40afc4:	ldr	x0, [x0, #3992]
  40afc8:	ldr	x1, [x0]
  40afcc:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  40afd0:	add	x0, x0, #0x7ab
  40afd4:	b	40b134 <rtnl_dump_filter_nc@@Base+0x2bc>
  40afd8:	mov	w25, #0x1                   	// #1
  40afdc:	mov	x0, x19
  40afe0:	mov	x1, #0x0                   	// #0
  40afe4:	bl	40a04c <nl_dump_ext_ack@@Base>
  40afe8:	add	x28, x28, #0x18
  40afec:	b	40af20 <rtnl_dump_filter_nc@@Base+0xa8>
  40aff0:	cmp	w0, #0x2
  40aff4:	b.ne	40b058 <rtnl_dump_filter_nc@@Base+0x1e0>  // b.any
  40aff8:	cmp	w1, #0x23
  40affc:	b.hi	40b018 <rtnl_dump_filter_nc@@Base+0x1a0>  // b.pmore
  40b000:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  40b004:	ldr	x0, [x0, #3992]
  40b008:	ldr	x1, [x0]
  40b00c:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  40b010:	add	x0, x0, #0x6a5
  40b014:	b	40b134 <rtnl_dump_filter_nc@@Base+0x2bc>
  40b018:	bl	405110 <__errno_location@plt>
  40b01c:	ldr	w19, [x19, #16]
  40b020:	neg	w1, w19
  40b024:	str	w1, [x0]
  40b028:	ldr	w0, [x21, #36]
  40b02c:	cmp	w0, #0x4
  40b030:	b.ne	40b040 <rtnl_dump_filter_nc@@Base+0x1c8>  // b.any
  40b034:	cmn	w19, #0x5f
  40b038:	ccmn	w19, #0x2, #0x4, ne  // ne = any
  40b03c:	b.eq	40af94 <rtnl_dump_filter_nc@@Base+0x11c>  // b.none
  40b040:	ldr	w0, [x21, #48]
  40b044:	tbnz	w0, #1, 40af94 <rtnl_dump_filter_nc@@Base+0x11c>
  40b048:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  40b04c:	add	x0, x0, #0x7d0
  40b050:	bl	404c80 <perror@plt>
  40b054:	b	40af94 <rtnl_dump_filter_nc@@Base+0x11c>
  40b058:	ldr	x0, [x21, #40]
  40b05c:	cbnz	x0, 40b094 <rtnl_dump_filter_nc@@Base+0x21c>
  40b060:	ldr	x1, [x28, #8]
  40b064:	mov	x0, x19
  40b068:	str	x2, [sp, #104]
  40b06c:	blr	x2
  40b070:	mov	w1, w0
  40b074:	ldr	x2, [sp, #104]
  40b078:	tbz	w0, #31, 40b094 <rtnl_dump_filter_nc@@Base+0x21c>
  40b07c:	ldr	x0, [sp, #112]
  40b080:	str	w1, [sp, #104]
  40b084:	bl	404f80 <free@plt>
  40b088:	ldr	w1, [sp, #104]
  40b08c:	mov	w20, w1
  40b090:	b	40afa0 <rtnl_dump_filter_nc@@Base+0x128>
  40b094:	ldr	w0, [x19]
  40b098:	add	w0, w0, #0x3
  40b09c:	and	w0, w0, #0xfffffffc
  40b0a0:	sub	w22, w22, w0
  40b0a4:	add	x19, x19, w0, uxtw
  40b0a8:	cmp	w22, #0xf
  40b0ac:	b.le	40afe8 <rtnl_dump_filter_nc@@Base+0x170>
  40b0b0:	ldr	w1, [x19]
  40b0b4:	cmp	w1, #0xf
  40b0b8:	b.ls	40afe8 <rtnl_dump_filter_nc@@Base+0x170>  // b.plast
  40b0bc:	cmp	w22, w1
  40b0c0:	b.cc	40afe8 <rtnl_dump_filter_nc@@Base+0x170>  // b.lo, b.ul, b.last
  40b0c4:	ldrh	w3, [x19, #6]
  40b0c8:	ldrh	w0, [x28, #16]
  40b0cc:	bic	w0, w3, w0
  40b0d0:	ldr	w3, [sp, #124]
  40b0d4:	and	w0, w0, #0xffff
  40b0d8:	strh	w0, [x19, #6]
  40b0dc:	cbnz	w3, 40b094 <rtnl_dump_filter_nc@@Base+0x21c>
  40b0e0:	ldr	w4, [x19, #12]
  40b0e4:	ldr	w3, [x21, #8]
  40b0e8:	cmp	w4, w3
  40b0ec:	b.ne	40b094 <rtnl_dump_filter_nc@@Base+0x21c>  // b.any
  40b0f0:	ldr	w4, [x19, #8]
  40b0f4:	ldr	w3, [x21, #32]
  40b0f8:	cmp	w4, w3
  40b0fc:	b.ne	40b094 <rtnl_dump_filter_nc@@Base+0x21c>  // b.any
  40b100:	tst	x0, #0x10
  40b104:	ldrh	w0, [x19, #4]
  40b108:	csel	w20, w20, w24, eq  // eq = none
  40b10c:	cmp	w0, #0x3
  40b110:	b.ne	40aff0 <rtnl_dump_filter_nc@@Base+0x178>  // b.any
  40b114:	ldr	w25, [x19, #16]
  40b118:	cmp	w1, #0x13
  40b11c:	b.hi	40af5c <rtnl_dump_filter_nc@@Base+0xe4>  // b.pmore
  40b120:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  40b124:	ldr	x0, [x0, #3992]
  40b128:	ldr	x1, [x0]
  40b12c:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  40b130:	add	x0, x0, #0x79b
  40b134:	bl	404c60 <fputs@plt>
  40b138:	b	40af94 <rtnl_dump_filter_nc@@Base+0x11c>
  40b13c:	mov	w22, w23
  40b140:	b	40b0a8 <rtnl_dump_filter_nc@@Base+0x230>
  40b144:	ldr	w0, [sp, #248]
  40b148:	tbz	w0, #5, 40b168 <rtnl_dump_filter_nc@@Base+0x2f0>
  40b14c:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  40b150:	ldr	x0, [x0, #3992]
  40b154:	ldr	x1, [x0]
  40b158:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  40b15c:	add	x0, x0, #0x6e2
  40b160:	bl	404c60 <fputs@plt>
  40b164:	b	40aee0 <rtnl_dump_filter_nc@@Base+0x68>
  40b168:	cbz	w22, 40aee0 <rtnl_dump_filter_nc@@Base+0x68>
  40b16c:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  40b170:	mov	w2, w22
  40b174:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  40b178:	add	x1, x1, #0x6f5
  40b17c:	ldr	x0, [x0, #3992]
  40b180:	ldr	x0, [x0]
  40b184:	bl	405150 <fprintf@plt>
  40b188:	mov	w0, #0x1                   	// #1
  40b18c:	bl	404c70 <exit@plt>
  40b190:	mov	w20, w0
  40b194:	b	40afa0 <rtnl_dump_filter_nc@@Base+0x128>

000000000040b198 <rtnl_talk@@Base>:
  40b198:	stp	x29, x30, [sp, #-32]!
  40b19c:	mov	x3, x2
  40b1a0:	mov	w4, #0x1                   	// #1
  40b1a4:	mov	x29, sp
  40b1a8:	str	x1, [sp, #16]
  40b1ac:	mov	x2, #0x1                   	// #1
  40b1b0:	ldr	w1, [x1]
  40b1b4:	str	x1, [sp, #24]
  40b1b8:	add	x1, sp, #0x10
  40b1bc:	bl	40a054 <nl_dump_ext_ack@@Base+0x8>
  40b1c0:	ldp	x29, x30, [sp], #32
  40b1c4:	ret

000000000040b1c8 <rtnl_talk_iov@@Base>:
  40b1c8:	mov	w4, #0x1                   	// #1
  40b1cc:	b	40a054 <nl_dump_ext_ack@@Base+0x8>

000000000040b1d0 <rtnl_talk_suppress_rtnl_errmsg@@Base>:
  40b1d0:	stp	x29, x30, [sp, #-32]!
  40b1d4:	mov	x3, x2
  40b1d8:	mov	w4, #0x0                   	// #0
  40b1dc:	mov	x29, sp
  40b1e0:	str	x1, [sp, #16]
  40b1e4:	mov	x2, #0x1                   	// #1
  40b1e8:	ldr	w1, [x1]
  40b1ec:	str	x1, [sp, #24]
  40b1f0:	add	x1, sp, #0x10
  40b1f4:	bl	40a054 <nl_dump_ext_ack@@Base+0x8>
  40b1f8:	ldp	x29, x30, [sp], #32
  40b1fc:	ret

000000000040b200 <rtnl_listen_all_nsid@@Base>:
  40b200:	stp	x29, x30, [sp, #-48]!
  40b204:	mov	w4, #0x4                   	// #4
  40b208:	mov	w2, #0x8                   	// #8
  40b20c:	mov	x29, sp
  40b210:	str	x19, [sp, #16]
  40b214:	mov	x19, x0
  40b218:	mov	w0, #0x1                   	// #1
  40b21c:	str	w0, [sp, #44]
  40b220:	add	x3, sp, #0x2c
  40b224:	mov	w1, #0x10e                 	// #270
  40b228:	ldr	w0, [x19]
  40b22c:	bl	404dc0 <setsockopt@plt>
  40b230:	tbz	w0, #31, 40b250 <rtnl_listen_all_nsid@@Base+0x50>
  40b234:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  40b238:	add	x0, x0, #0x811
  40b23c:	bl	404c80 <perror@plt>
  40b240:	mov	w0, #0xffffffff            	// #-1
  40b244:	ldr	x19, [sp, #16]
  40b248:	ldp	x29, x30, [sp], #48
  40b24c:	ret
  40b250:	ldr	w0, [x19, #48]
  40b254:	orr	w0, w0, #0x1
  40b258:	str	w0, [x19, #48]
  40b25c:	mov	w0, #0x0                   	// #0
  40b260:	b	40b244 <rtnl_listen_all_nsid@@Base+0x44>

000000000040b264 <rtnl_listen@@Base>:
  40b264:	mov	x12, #0x60c0                	// #24768
  40b268:	sub	sp, sp, x12
  40b26c:	stp	x29, x30, [sp]
  40b270:	mov	x29, sp
  40b274:	stp	x19, x20, [sp, #16]
  40b278:	mov	x20, x0
  40b27c:	mov	w0, #0x10                  	// #16
  40b280:	str	xzr, [sp, #104]
  40b284:	strh	w0, [sp, #104]
  40b288:	add	x0, sp, #0x68
  40b28c:	str	x0, [sp, #136]
  40b290:	mov	w0, #0xc                   	// #12
  40b294:	stp	xzr, xzr, [sp, #144]
  40b298:	str	w0, [sp, #144]
  40b29c:	add	x0, sp, #0x78
  40b2a0:	str	x0, [sp, #152]
  40b2a4:	mov	x0, #0x1                   	// #1
  40b2a8:	stp	xzr, xzr, [sp, #160]
  40b2ac:	str	x0, [sp, #160]
  40b2b0:	ldr	w0, [x20, #48]
  40b2b4:	stp	x21, x22, [sp, #32]
  40b2b8:	mov	x21, x1
  40b2bc:	mov	x22, x2
  40b2c0:	stp	x23, x24, [sp, #48]
  40b2c4:	stp	x25, x26, [sp, #64]
  40b2c8:	stp	x27, x28, [sp, #80]
  40b2cc:	str	wzr, [sp, #112]
  40b2d0:	stp	xzr, xzr, [sp, #176]
  40b2d4:	tbz	w0, #0, 40b2e8 <rtnl_listen@@Base+0x84>
  40b2d8:	add	x0, sp, #0xc0
  40b2dc:	str	x0, [sp, #168]
  40b2e0:	mov	x0, #0x2000                	// #8192
  40b2e4:	str	x0, [sp, #176]
  40b2e8:	mov	x25, #0x10e                 	// #270
  40b2ec:	add	x24, sp, #0x88
  40b2f0:	add	x26, sp, #0x60
  40b2f4:	mov	x0, #0x20c0                	// #8384
  40b2f8:	movk	x25, #0x8, lsl #32
  40b2fc:	add	x23, sp, x0
  40b300:	str	x23, [sp, #120]
  40b304:	mov	x0, #0x4000                	// #16384
  40b308:	str	x0, [sp, #128]
  40b30c:	ldr	w0, [x20]
  40b310:	mov	x1, x24
  40b314:	mov	w2, #0x0                   	// #0
  40b318:	bl	404c30 <recvmsg@plt>
  40b31c:	mov	w27, w0
  40b320:	cmp	w0, #0x0
  40b324:	b.ge	40b39c <rtnl_listen@@Base+0x138>  // b.tcont
  40b328:	bl	405110 <__errno_location@plt>
  40b32c:	mov	x19, x0
  40b330:	ldr	w0, [x0]
  40b334:	cmp	w0, #0x4
  40b338:	ccmp	w0, #0xb, #0x4, ne  // ne = any
  40b33c:	b.eq	40b304 <rtnl_listen@@Base+0xa0>  // b.none
  40b340:	adrp	x1, 41f000 <_IO_stdin_used@@Base+0x13268>
  40b344:	ldr	x1, [x1, #3992]
  40b348:	ldr	x27, [x1]
  40b34c:	bl	404e90 <strerror@plt>
  40b350:	ldr	w3, [x19]
  40b354:	mov	x2, x0
  40b358:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  40b35c:	mov	x0, x27
  40b360:	add	x1, x1, #0x5fe
  40b364:	bl	405150 <fprintf@plt>
  40b368:	ldr	w0, [x19]
  40b36c:	cmp	w0, #0x69
  40b370:	b.eq	40b304 <rtnl_listen@@Base+0xa0>  // b.none
  40b374:	mov	w0, #0xffffffff            	// #-1
  40b378:	mov	x12, #0x60c0                	// #24768
  40b37c:	ldp	x29, x30, [sp]
  40b380:	ldp	x19, x20, [sp, #16]
  40b384:	ldp	x21, x22, [sp, #32]
  40b388:	ldp	x23, x24, [sp, #48]
  40b38c:	ldp	x25, x26, [sp, #64]
  40b390:	ldp	x27, x28, [sp, #80]
  40b394:	add	sp, sp, x12
  40b398:	ret
  40b39c:	b.ne	40b3bc <rtnl_listen@@Base+0x158>  // b.any
  40b3a0:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  40b3a4:	ldr	x0, [x0, #3992]
  40b3a8:	ldr	x1, [x0]
  40b3ac:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  40b3b0:	add	x0, x0, #0x5ee
  40b3b4:	bl	404c60 <fputs@plt>
  40b3b8:	b	40b374 <rtnl_listen@@Base+0x110>
  40b3bc:	ldr	w2, [sp, #144]
  40b3c0:	cmp	w2, #0xc
  40b3c4:	b.eq	40b3e0 <rtnl_listen@@Base+0x17c>  // b.none
  40b3c8:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  40b3cc:	add	x1, x1, #0x829
  40b3d0:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  40b3d4:	ldr	x0, [x0, #3992]
  40b3d8:	ldr	x0, [x0]
  40b3dc:	b	40b4a4 <rtnl_listen@@Base+0x240>
  40b3e0:	ldr	w0, [x20, #48]
  40b3e4:	tbnz	w0, #0, 40b418 <rtnl_listen@@Base+0x1b4>
  40b3e8:	mov	x28, x23
  40b3ec:	cmp	w27, #0xf
  40b3f0:	b.hi	40b464 <rtnl_listen@@Base+0x200>  // b.pmore
  40b3f4:	ldr	w0, [sp, #184]
  40b3f8:	tbz	w0, #5, 40b4d8 <rtnl_listen@@Base+0x274>
  40b3fc:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  40b400:	ldr	x0, [x0, #3992]
  40b404:	ldr	x1, [x0]
  40b408:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  40b40c:	add	x0, x0, #0x6e2
  40b410:	bl	404c60 <fputs@plt>
  40b414:	b	40b304 <rtnl_listen@@Base+0xa0>
  40b418:	mov	w0, #0xffffffff            	// #-1
  40b41c:	str	w0, [sp, #96]
  40b420:	ldr	x0, [sp, #176]
  40b424:	cmp	x0, #0xf
  40b428:	b.ls	40b3e8 <rtnl_listen@@Base+0x184>  // b.plast
  40b42c:	ldr	x1, [sp, #168]
  40b430:	cbz	x1, 40b3e8 <rtnl_listen@@Base+0x184>
  40b434:	ldr	x0, [x1, #8]
  40b438:	cmp	x0, x25
  40b43c:	b.ne	40b454 <rtnl_listen@@Base+0x1f0>  // b.any
  40b440:	ldr	x0, [x1]
  40b444:	cmp	x0, #0x14
  40b448:	b.ne	40b454 <rtnl_listen@@Base+0x1f0>  // b.any
  40b44c:	ldr	w0, [x1, #16]
  40b450:	str	w0, [sp, #96]
  40b454:	mov	x0, x24
  40b458:	bl	404c90 <__cmsg_nxthdr@plt>
  40b45c:	mov	x1, x0
  40b460:	b	40b430 <rtnl_listen@@Base+0x1cc>
  40b464:	ldr	w19, [x28]
  40b468:	cmp	w19, #0x10
  40b46c:	ccmp	w27, w19, #0x1, pl  // pl = nfrst
  40b470:	b.ge	40b4b0 <rtnl_listen@@Base+0x24c>  // b.tcont
  40b474:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  40b478:	ldr	w1, [sp, #184]
  40b47c:	ldr	x0, [x0, #3992]
  40b480:	ldr	x0, [x0]
  40b484:	tbz	w1, #5, 40b498 <rtnl_listen@@Base+0x234>
  40b488:	mov	x1, x0
  40b48c:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  40b490:	add	x0, x0, #0x674
  40b494:	b	40b3b4 <rtnl_listen@@Base+0x150>
  40b498:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  40b49c:	mov	w2, w19
  40b4a0:	add	x1, x1, #0x687
  40b4a4:	bl	405150 <fprintf@plt>
  40b4a8:	mov	w0, #0x1                   	// #1
  40b4ac:	bl	404c70 <exit@plt>
  40b4b0:	mov	x2, x22
  40b4b4:	mov	x1, x28
  40b4b8:	mov	x0, x26
  40b4bc:	blr	x21
  40b4c0:	tbnz	w0, #31, 40b378 <rtnl_listen@@Base+0x114>
  40b4c4:	add	w19, w19, #0x3
  40b4c8:	and	w19, w19, #0xfffffffc
  40b4cc:	sub	w27, w27, w19
  40b4d0:	add	x28, x28, w19, uxtw
  40b4d4:	b	40b3ec <rtnl_listen@@Base+0x188>
  40b4d8:	cbz	w27, 40b304 <rtnl_listen@@Base+0xa0>
  40b4dc:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  40b4e0:	mov	w2, w27
  40b4e4:	add	x1, x1, #0x6f5
  40b4e8:	b	40b3d0 <rtnl_listen@@Base+0x16c>

000000000040b4ec <rtnl_from_file@@Base>:
  40b4ec:	mov	x12, #0x4050                	// #16464
  40b4f0:	sub	sp, sp, x12
  40b4f4:	stp	x29, x30, [sp]
  40b4f8:	mov	x29, sp
  40b4fc:	stp	x21, x22, [sp, #32]
  40b500:	add	x22, sp, #0x50
  40b504:	mov	x21, x1
  40b508:	stp	x19, x20, [sp, #16]
  40b50c:	mov	x19, x0
  40b510:	stp	x23, x24, [sp, #48]
  40b514:	mov	x23, x2
  40b518:	mov	w24, #0x3ff0                	// #16368
  40b51c:	str	x25, [sp, #64]
  40b520:	add	x25, x22, #0x10
  40b524:	mov	x3, x19
  40b528:	mov	x0, x22
  40b52c:	mov	x2, #0x10                  	// #16
  40b530:	mov	x1, #0x1                   	// #1
  40b534:	bl	404f50 <fread@plt>
  40b538:	cbnz	x0, 40b588 <rtnl_from_file@@Base+0x9c>
  40b53c:	mov	x0, x19
  40b540:	bl	404ef0 <feof@plt>
  40b544:	cbnz	w0, 40b62c <rtnl_from_file@@Base+0x140>
  40b548:	mov	x0, x19
  40b54c:	bl	405180 <ferror@plt>
  40b550:	cbz	w0, 40b560 <rtnl_from_file@@Base+0x74>
  40b554:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  40b558:	add	x0, x0, #0x846
  40b55c:	bl	404c80 <perror@plt>
  40b560:	mov	x0, x19
  40b564:	bl	404ef0 <feof@plt>
  40b568:	cbz	w0, 40b5cc <rtnl_from_file@@Base+0xe0>
  40b56c:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  40b570:	ldr	x0, [x0, #3992]
  40b574:	ldr	x1, [x0]
  40b578:	adrp	x0, 40c000 <_IO_stdin_used@@Base+0x268>
  40b57c:	add	x0, x0, #0x85c
  40b580:	bl	404c60 <fputs@plt>
  40b584:	b	40b5cc <rtnl_from_file@@Base+0xe0>
  40b588:	cmp	x0, #0x10
  40b58c:	b.ne	40b548 <rtnl_from_file@@Base+0x5c>  // b.any
  40b590:	ldr	w20, [sp, #80]
  40b594:	sub	w0, w20, #0x10
  40b598:	cmp	w0, w24
  40b59c:	b.ls	40b5f0 <rtnl_from_file@@Base+0x104>  // b.plast
  40b5a0:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  40b5a4:	ldr	x0, [x0, #3992]
  40b5a8:	ldr	x21, [x0]
  40b5ac:	mov	x0, x19
  40b5b0:	bl	404cf0 <ftell@plt>
  40b5b4:	mov	x3, x0
  40b5b8:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  40b5bc:	mov	w2, w20
  40b5c0:	add	x1, x1, #0x87f
  40b5c4:	mov	x0, x21
  40b5c8:	bl	405150 <fprintf@plt>
  40b5cc:	mov	w0, #0xffffffff            	// #-1
  40b5d0:	mov	x12, #0x4050                	// #16464
  40b5d4:	ldp	x29, x30, [sp]
  40b5d8:	ldp	x19, x20, [sp, #16]
  40b5dc:	ldp	x21, x22, [sp, #32]
  40b5e0:	ldp	x23, x24, [sp, #48]
  40b5e4:	ldr	x25, [sp, #64]
  40b5e8:	add	sp, sp, x12
  40b5ec:	ret
  40b5f0:	sub	w20, w20, #0xd
  40b5f4:	mov	x3, x19
  40b5f8:	and	x20, x20, #0xfffffffc
  40b5fc:	mov	x0, x25
  40b600:	mov	x2, x20
  40b604:	mov	x1, #0x1                   	// #1
  40b608:	bl	404f50 <fread@plt>
  40b60c:	cmp	x20, x0
  40b610:	b.ne	40b548 <rtnl_from_file@@Base+0x5c>  // b.any
  40b614:	mov	x2, x23
  40b618:	mov	x1, x22
  40b61c:	mov	x0, #0x0                   	// #0
  40b620:	blr	x21
  40b624:	tbz	w0, #31, 40b524 <rtnl_from_file@@Base+0x38>
  40b628:	b	40b5d0 <rtnl_from_file@@Base+0xe4>
  40b62c:	mov	w0, #0x0                   	// #0
  40b630:	b	40b5d0 <rtnl_from_file@@Base+0xe4>

000000000040b634 <addattr_l@@Base>:
  40b634:	stp	x29, x30, [sp, #-32]!
  40b638:	mov	x29, sp
  40b63c:	ldr	w5, [x0]
  40b640:	stp	x19, x20, [sp, #16]
  40b644:	mov	x19, x0
  40b648:	add	w5, w5, #0x3
  40b64c:	add	w0, w4, #0x7
  40b650:	and	w5, w5, #0xfffffffc
  40b654:	and	w20, w0, #0xfffffffc
  40b658:	add	w0, w5, w20
  40b65c:	cmp	w0, w1
  40b660:	b.ls	40b690 <addattr_l@@Base+0x5c>  // b.plast
  40b664:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  40b668:	mov	w2, w1
  40b66c:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  40b670:	add	x1, x1, #0x8a2
  40b674:	ldr	x0, [x0, #3992]
  40b678:	ldr	x0, [x0]
  40b67c:	bl	405150 <fprintf@plt>
  40b680:	mov	w0, #0xffffffff            	// #-1
  40b684:	ldp	x19, x20, [sp, #16]
  40b688:	ldp	x29, x30, [sp], #32
  40b68c:	ret
  40b690:	add	x0, x19, w5, uxtw
  40b694:	mov	x1, x3
  40b698:	add	w3, w4, #0x4
  40b69c:	strh	w2, [x0, #2]
  40b6a0:	strh	w3, [x19, w5, uxtw]
  40b6a4:	cbz	w4, 40b6b4 <addattr_l@@Base+0x80>
  40b6a8:	sxtw	x2, w4
  40b6ac:	add	x0, x0, #0x4
  40b6b0:	bl	404c20 <memcpy@plt>
  40b6b4:	ldr	w0, [x19]
  40b6b8:	add	w0, w0, #0x3
  40b6bc:	and	w0, w0, #0xfffffffc
  40b6c0:	add	w0, w0, w20
  40b6c4:	str	w0, [x19]
  40b6c8:	mov	w0, #0x0                   	// #0
  40b6cc:	b	40b684 <addattr_l@@Base+0x50>

000000000040b6d0 <addattr@@Base>:
  40b6d0:	mov	w4, #0x0                   	// #0
  40b6d4:	mov	x3, #0x0                   	// #0
  40b6d8:	b	40b634 <addattr_l@@Base>

000000000040b6dc <addattr8@@Base>:
  40b6dc:	stp	x29, x30, [sp, #-32]!
  40b6e0:	mov	w4, #0x1                   	// #1
  40b6e4:	mov	x29, sp
  40b6e8:	strb	w3, [sp, #31]
  40b6ec:	add	x3, sp, #0x1f
  40b6f0:	bl	40b634 <addattr_l@@Base>
  40b6f4:	ldp	x29, x30, [sp], #32
  40b6f8:	ret

000000000040b6fc <addattr16@@Base>:
  40b6fc:	stp	x29, x30, [sp, #-32]!
  40b700:	mov	w4, #0x2                   	// #2
  40b704:	mov	x29, sp
  40b708:	strh	w3, [sp, #30]
  40b70c:	add	x3, sp, #0x1e
  40b710:	bl	40b634 <addattr_l@@Base>
  40b714:	ldp	x29, x30, [sp], #32
  40b718:	ret

000000000040b71c <addattr32@@Base>:
  40b71c:	stp	x29, x30, [sp, #-32]!
  40b720:	mov	w4, #0x4                   	// #4
  40b724:	mov	x29, sp
  40b728:	str	w3, [sp, #28]
  40b72c:	add	x3, sp, #0x1c
  40b730:	bl	40b634 <addattr_l@@Base>
  40b734:	ldp	x29, x30, [sp], #32
  40b738:	ret

000000000040b73c <addattr64@@Base>:
  40b73c:	stp	x29, x30, [sp, #-32]!
  40b740:	mov	w4, #0x8                   	// #8
  40b744:	mov	x29, sp
  40b748:	str	x3, [sp, #24]
  40b74c:	add	x3, sp, #0x18
  40b750:	bl	40b634 <addattr_l@@Base>
  40b754:	ldp	x29, x30, [sp], #32
  40b758:	ret

000000000040b75c <addattrstrz@@Base>:
  40b75c:	stp	x29, x30, [sp, #-48]!
  40b760:	mov	x29, sp
  40b764:	stp	x19, x20, [sp, #16]
  40b768:	mov	x20, x0
  40b76c:	mov	x19, x3
  40b770:	mov	x0, x3
  40b774:	stp	x21, x22, [sp, #32]
  40b778:	mov	w21, w1
  40b77c:	mov	w22, w2
  40b780:	bl	404c50 <strlen@plt>
  40b784:	mov	x3, x19
  40b788:	add	w4, w0, #0x1
  40b78c:	mov	w2, w22
  40b790:	mov	w1, w21
  40b794:	mov	x0, x20
  40b798:	ldp	x19, x20, [sp, #16]
  40b79c:	ldp	x21, x22, [sp, #32]
  40b7a0:	ldp	x29, x30, [sp], #48
  40b7a4:	b	40b634 <addattr_l@@Base>

000000000040b7a8 <addraw_l@@Base>:
  40b7a8:	stp	x29, x30, [sp, #-48]!
  40b7ac:	mov	w4, w1
  40b7b0:	mov	x1, x2
  40b7b4:	mov	x29, sp
  40b7b8:	stp	x19, x20, [sp, #16]
  40b7bc:	mov	x19, x0
  40b7c0:	ldr	w0, [x0]
  40b7c4:	add	w20, w3, #0x3
  40b7c8:	stp	x21, x22, [sp, #32]
  40b7cc:	add	w0, w0, #0x3
  40b7d0:	and	w20, w20, #0xfffffffc
  40b7d4:	and	w0, w0, #0xfffffffc
  40b7d8:	add	w2, w0, w20
  40b7dc:	cmp	w2, w4
  40b7e0:	b.ls	40b814 <addraw_l@@Base+0x6c>  // b.plast
  40b7e4:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  40b7e8:	mov	w2, w4
  40b7ec:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  40b7f0:	add	x1, x1, #0x8d1
  40b7f4:	ldr	x0, [x0, #3992]
  40b7f8:	ldr	x0, [x0]
  40b7fc:	bl	405150 <fprintf@plt>
  40b800:	mov	w0, #0xffffffff            	// #-1
  40b804:	ldp	x19, x20, [sp, #16]
  40b808:	ldp	x21, x22, [sp, #32]
  40b80c:	ldp	x29, x30, [sp], #48
  40b810:	ret
  40b814:	sxtw	x22, w3
  40b818:	mov	w21, w3
  40b81c:	mov	x2, x22
  40b820:	add	x0, x19, w0, uxtw
  40b824:	bl	404c20 <memcpy@plt>
  40b828:	ldr	w0, [x19]
  40b82c:	sub	w2, w20, w21
  40b830:	mov	w1, #0x0                   	// #0
  40b834:	add	w0, w0, #0x3
  40b838:	and	x0, x0, #0xfffffffc
  40b83c:	add	x0, x0, x22
  40b840:	add	x0, x19, x0
  40b844:	bl	404e10 <memset@plt>
  40b848:	ldr	w0, [x19]
  40b84c:	add	w0, w0, #0x3
  40b850:	and	w0, w0, #0xfffffffc
  40b854:	add	w0, w0, w20
  40b858:	str	w0, [x19]
  40b85c:	mov	w0, #0x0                   	// #0
  40b860:	b	40b804 <addraw_l@@Base+0x5c>

000000000040b864 <addattr_nest@@Base>:
  40b864:	stp	x29, x30, [sp, #-32]!
  40b868:	mov	w4, #0x0                   	// #0
  40b86c:	mov	x3, #0x0                   	// #0
  40b870:	mov	x29, sp
  40b874:	str	x19, [sp, #16]
  40b878:	ldr	w19, [x0]
  40b87c:	add	w19, w19, #0x3
  40b880:	and	x19, x19, #0xfffffffc
  40b884:	add	x19, x0, x19
  40b888:	bl	40b634 <addattr_l@@Base>
  40b88c:	mov	x0, x19
  40b890:	ldr	x19, [sp, #16]
  40b894:	ldp	x29, x30, [sp], #32
  40b898:	ret

000000000040b89c <addattr_nest_end@@Base>:
  40b89c:	mov	x2, x0
  40b8a0:	ldr	w0, [x0]
  40b8a4:	add	w3, w0, #0x3
  40b8a8:	and	x3, x3, #0xfffffffc
  40b8ac:	add	x2, x2, x3
  40b8b0:	sub	x2, x2, x1
  40b8b4:	strh	w2, [x1]
  40b8b8:	ret

000000000040b8bc <addattr_nest_compat@@Base>:
  40b8bc:	stp	x29, x30, [sp, #-48]!
  40b8c0:	mov	x29, sp
  40b8c4:	stp	x19, x20, [sp, #16]
  40b8c8:	mov	x20, x0
  40b8cc:	ldr	w19, [x0]
  40b8d0:	stp	x21, x22, [sp, #32]
  40b8d4:	mov	w21, w1
  40b8d8:	add	w19, w19, #0x3
  40b8dc:	and	x19, x19, #0xfffffffc
  40b8e0:	mov	w22, w2
  40b8e4:	add	x19, x0, x19
  40b8e8:	bl	40b634 <addattr_l@@Base>
  40b8ec:	mov	w2, w22
  40b8f0:	mov	w1, w21
  40b8f4:	mov	x0, x20
  40b8f8:	bl	40b864 <addattr_nest@@Base>
  40b8fc:	mov	x0, x19
  40b900:	ldp	x19, x20, [sp, #16]
  40b904:	ldp	x21, x22, [sp, #32]
  40b908:	ldp	x29, x30, [sp], #48
  40b90c:	ret

000000000040b910 <addattr_nest_compat_end@@Base>:
  40b910:	stp	x29, x30, [sp, #-32]!
  40b914:	mov	x29, sp
  40b918:	ldr	w2, [x0]
  40b91c:	ldrh	w3, [x1]
  40b920:	add	w2, w2, #0x3
  40b924:	str	x19, [sp, #16]
  40b928:	and	x2, x2, #0xfffffffc
  40b92c:	add	w3, w3, #0x3
  40b930:	add	x2, x0, x2
  40b934:	and	x3, x3, #0x1fffc
  40b938:	sub	x2, x2, x1
  40b93c:	mov	x19, x0
  40b940:	strh	w2, [x1]
  40b944:	add	x1, x1, x3
  40b948:	bl	40b89c <addattr_nest_end@@Base>
  40b94c:	ldr	w0, [x19]
  40b950:	ldr	x19, [sp, #16]
  40b954:	ldp	x29, x30, [sp], #32
  40b958:	ret

000000000040b95c <rta_addattr32@@Base>:
  40b95c:	ldrh	w4, [x0]
  40b960:	add	w4, w4, #0x3
  40b964:	and	w4, w4, #0xfffffffc
  40b968:	add	w5, w4, #0x8
  40b96c:	cmp	w5, w1
  40b970:	b.ls	40b9a4 <rta_addattr32@@Base+0x48>  // b.plast
  40b974:	stp	x29, x30, [sp, #-16]!
  40b978:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  40b97c:	mov	w2, w1
  40b980:	mov	x29, sp
  40b984:	ldr	x0, [x0, #3992]
  40b988:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  40b98c:	add	x1, x1, #0x8ff
  40b990:	ldr	x0, [x0]
  40b994:	bl	405150 <fprintf@plt>
  40b998:	mov	w0, #0xffffffff            	// #-1
  40b99c:	ldp	x29, x30, [sp], #16
  40b9a0:	ret
  40b9a4:	add	x1, x0, w4, uxtw
  40b9a8:	strh	w2, [x1, #2]
  40b9ac:	mov	w2, #0x8                   	// #8
  40b9b0:	strh	w2, [x0, w4, uxtw]
  40b9b4:	str	w3, [x1, #4]
  40b9b8:	ldrh	w1, [x0]
  40b9bc:	add	w1, w1, #0x3
  40b9c0:	and	w1, w1, #0xfffffffc
  40b9c4:	add	w1, w1, #0x8
  40b9c8:	strh	w1, [x0]
  40b9cc:	mov	w0, #0x0                   	// #0
  40b9d0:	ret

000000000040b9d4 <rta_addattr_l@@Base>:
  40b9d4:	stp	x29, x30, [sp, #-32]!
  40b9d8:	mov	x29, sp
  40b9dc:	ldrh	w5, [x0]
  40b9e0:	stp	x19, x20, [sp, #16]
  40b9e4:	mov	x20, x0
  40b9e8:	add	w5, w5, #0x3
  40b9ec:	add	w0, w4, #0x7
  40b9f0:	and	w5, w5, #0xfffffffc
  40b9f4:	and	w0, w0, #0xfffffffc
  40b9f8:	add	w0, w0, w5
  40b9fc:	cmp	w0, w1
  40ba00:	b.ls	40ba30 <rta_addattr_l@@Base+0x5c>  // b.plast
  40ba04:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  40ba08:	mov	w2, w1
  40ba0c:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  40ba10:	add	x1, x1, #0x934
  40ba14:	ldr	x0, [x0, #3992]
  40ba18:	ldr	x0, [x0]
  40ba1c:	bl	405150 <fprintf@plt>
  40ba20:	mov	w0, #0xffffffff            	// #-1
  40ba24:	ldp	x19, x20, [sp, #16]
  40ba28:	ldp	x29, x30, [sp], #32
  40ba2c:	ret
  40ba30:	add	x0, x20, w5, uxtw
  40ba34:	add	w19, w4, #0x4
  40ba38:	and	w19, w19, #0xffff
  40ba3c:	strh	w2, [x0, #2]
  40ba40:	strh	w19, [x20, w5, uxtw]
  40ba44:	cbz	w4, 40ba58 <rta_addattr_l@@Base+0x84>
  40ba48:	mov	x1, x3
  40ba4c:	sxtw	x2, w4
  40ba50:	add	x0, x0, #0x4
  40ba54:	bl	404c20 <memcpy@plt>
  40ba58:	ldrh	w0, [x20]
  40ba5c:	add	w19, w19, #0x3
  40ba60:	and	w19, w19, #0xfffffffc
  40ba64:	add	w0, w0, #0x3
  40ba68:	and	w0, w0, #0xfffffffc
  40ba6c:	add	w19, w0, w19
  40ba70:	mov	w0, #0x0                   	// #0
  40ba74:	strh	w19, [x20]
  40ba78:	b	40ba24 <rta_addattr_l@@Base+0x50>

000000000040ba7c <rta_addattr8@@Base>:
  40ba7c:	stp	x29, x30, [sp, #-32]!
  40ba80:	mov	w4, #0x1                   	// #1
  40ba84:	mov	x29, sp
  40ba88:	strb	w3, [sp, #31]
  40ba8c:	add	x3, sp, #0x1f
  40ba90:	bl	40b9d4 <rta_addattr_l@@Base>
  40ba94:	ldp	x29, x30, [sp], #32
  40ba98:	ret

000000000040ba9c <rta_addattr16@@Base>:
  40ba9c:	stp	x29, x30, [sp, #-32]!
  40baa0:	mov	w4, #0x2                   	// #2
  40baa4:	mov	x29, sp
  40baa8:	strh	w3, [sp, #30]
  40baac:	add	x3, sp, #0x1e
  40bab0:	bl	40b9d4 <rta_addattr_l@@Base>
  40bab4:	ldp	x29, x30, [sp], #32
  40bab8:	ret

000000000040babc <rta_addattr64@@Base>:
  40babc:	stp	x29, x30, [sp, #-32]!
  40bac0:	mov	w4, #0x8                   	// #8
  40bac4:	mov	x29, sp
  40bac8:	str	x3, [sp, #24]
  40bacc:	add	x3, sp, #0x18
  40bad0:	bl	40b9d4 <rta_addattr_l@@Base>
  40bad4:	ldp	x29, x30, [sp], #32
  40bad8:	ret

000000000040badc <rta_nest@@Base>:
  40badc:	stp	x29, x30, [sp, #-32]!
  40bae0:	mov	w4, #0x0                   	// #0
  40bae4:	mov	x29, sp
  40bae8:	ldrh	w3, [x0]
  40baec:	str	x19, [sp, #16]
  40baf0:	add	w3, w3, #0x3
  40baf4:	and	x3, x3, #0x1fffc
  40baf8:	add	x19, x0, x3
  40bafc:	mov	x3, #0x0                   	// #0
  40bb00:	bl	40b9d4 <rta_addattr_l@@Base>
  40bb04:	ldrh	w0, [x19, #2]
  40bb08:	orr	w0, w0, #0xffff8000
  40bb0c:	strh	w0, [x19, #2]
  40bb10:	mov	x0, x19
  40bb14:	ldr	x19, [sp, #16]
  40bb18:	ldp	x29, x30, [sp], #32
  40bb1c:	ret

000000000040bb20 <rta_nest_end@@Base>:
  40bb20:	ldrh	w2, [x0]
  40bb24:	add	w2, w2, #0x3
  40bb28:	and	x2, x2, #0x1fffc
  40bb2c:	add	x2, x0, x2
  40bb30:	sub	x2, x2, x1
  40bb34:	strh	w2, [x1]
  40bb38:	ldrh	w0, [x0]
  40bb3c:	ret

000000000040bb40 <parse_rtattr_flags@@Base>:
  40bb40:	stp	x29, x30, [sp, #-64]!
  40bb44:	mov	x29, sp
  40bb48:	str	x23, [sp, #48]
  40bb4c:	and	w23, w4, #0xffff
  40bb50:	mvn	w23, w23
  40bb54:	stp	x19, x20, [sp, #16]
  40bb58:	mov	x20, x2
  40bb5c:	add	w2, w1, #0x1
  40bb60:	mov	w19, w3
  40bb64:	stp	x21, x22, [sp, #32]
  40bb68:	mov	x21, x0
  40bb6c:	mov	w22, w1
  40bb70:	sbfiz	x2, x2, #3, #32
  40bb74:	mov	w1, #0x0                   	// #0
  40bb78:	bl	404e10 <memset@plt>
  40bb7c:	cmp	w19, #0x3
  40bb80:	b.le	40bbf4 <parse_rtattr_flags@@Base+0xb4>
  40bb84:	ldrh	w2, [x20]
  40bb88:	cmp	w2, #0x3
  40bb8c:	b.ls	40bb98 <parse_rtattr_flags@@Base+0x58>  // b.plast
  40bb90:	cmp	w2, w19
  40bb94:	b.le	40bbbc <parse_rtattr_flags@@Base+0x7c>
  40bb98:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  40bb9c:	ldrh	w3, [x20]
  40bba0:	mov	w2, w19
  40bba4:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  40bba8:	ldr	x0, [x0, #3992]
  40bbac:	add	x1, x1, #0x969
  40bbb0:	ldr	x0, [x0]
  40bbb4:	bl	405150 <fprintf@plt>
  40bbb8:	b	40bbf8 <parse_rtattr_flags@@Base+0xb8>
  40bbbc:	ldrh	w1, [x20, #2]
  40bbc0:	and	w1, w23, w1
  40bbc4:	and	w0, w1, #0xffff
  40bbc8:	cmp	w22, w1, uxth
  40bbcc:	b.lt	40bbe0 <parse_rtattr_flags@@Base+0xa0>  // b.tstop
  40bbd0:	ubfiz	x0, x0, #3, #16
  40bbd4:	ldr	x1, [x21, x0]
  40bbd8:	cbnz	x1, 40bbe0 <parse_rtattr_flags@@Base+0xa0>
  40bbdc:	str	x20, [x21, x0]
  40bbe0:	add	w2, w2, #0x3
  40bbe4:	and	w2, w2, #0xfffffffc
  40bbe8:	sub	w19, w19, w2
  40bbec:	add	x20, x20, w2, uxtw
  40bbf0:	b	40bb7c <parse_rtattr_flags@@Base+0x3c>
  40bbf4:	cbnz	w19, 40bb98 <parse_rtattr_flags@@Base+0x58>
  40bbf8:	mov	w0, #0x0                   	// #0
  40bbfc:	ldp	x19, x20, [sp, #16]
  40bc00:	ldp	x21, x22, [sp, #32]
  40bc04:	ldr	x23, [sp, #48]
  40bc08:	ldp	x29, x30, [sp], #64
  40bc0c:	ret

000000000040bc10 <parse_rtattr@@Base>:
  40bc10:	mov	w4, #0x0                   	// #0
  40bc14:	b	40bb40 <parse_rtattr_flags@@Base>

000000000040bc18 <parse_rtattr_one@@Base>:
  40bc18:	mov	w3, w0
  40bc1c:	mov	x0, x1
  40bc20:	cmp	w2, #0x3
  40bc24:	b.le	40bc8c <parse_rtattr_one@@Base+0x74>
  40bc28:	ldrh	w1, [x0]
  40bc2c:	cmp	w1, #0x3
  40bc30:	b.ls	40bc3c <parse_rtattr_one@@Base+0x24>  // b.plast
  40bc34:	cmp	w1, w2
  40bc38:	b.le	40bc6c <parse_rtattr_one@@Base+0x54>
  40bc3c:	stp	x29, x30, [sp, #-16]!
  40bc40:	adrp	x1, 40c000 <_IO_stdin_used@@Base+0x268>
  40bc44:	add	x1, x1, #0x969
  40bc48:	mov	x29, sp
  40bc4c:	ldrh	w3, [x0]
  40bc50:	adrp	x0, 41f000 <_IO_stdin_used@@Base+0x13268>
  40bc54:	ldr	x0, [x0, #3992]
  40bc58:	ldr	x0, [x0]
  40bc5c:	bl	405150 <fprintf@plt>
  40bc60:	mov	x0, #0x0                   	// #0
  40bc64:	ldp	x29, x30, [sp], #16
  40bc68:	ret
  40bc6c:	ldrh	w4, [x0, #2]
  40bc70:	cmp	w4, w3
  40bc74:	b.eq	40bc98 <parse_rtattr_one@@Base+0x80>  // b.none
  40bc78:	add	w1, w1, #0x3
  40bc7c:	and	w1, w1, #0xfffffffc
  40bc80:	sub	w2, w2, w1
  40bc84:	add	x0, x0, w1, uxtw
  40bc88:	b	40bc20 <parse_rtattr_one@@Base+0x8>
  40bc8c:	cbnz	w2, 40bc3c <parse_rtattr_one@@Base+0x24>
  40bc90:	mov	x0, #0x0                   	// #0
  40bc94:	ret
  40bc98:	ret

000000000040bc9c <__parse_rtattr_nested_compat@@Base>:
  40bc9c:	ldrh	w5, [x2]
  40bca0:	sub	x5, x5, #0x4
  40bca4:	cmp	x5, w3, sxtw
  40bca8:	b.cc	40bcf8 <__parse_rtattr_nested_compat@@Base+0x5c>  // b.lo, b.ul, b.last
  40bcac:	add	w3, w3, #0x3
  40bcb0:	and	x3, x3, #0xfffffffc
  40bcb4:	add	x3, x3, #0x4
  40bcb8:	cmp	x5, x3
  40bcbc:	b.cc	40bcd4 <__parse_rtattr_nested_compat@@Base+0x38>  // b.lo, b.ul, b.last
  40bcc0:	add	x4, x2, x3
  40bcc4:	ldrh	w3, [x2, x3]
  40bcc8:	add	x2, x4, #0x4
  40bccc:	sub	w3, w3, #0x4
  40bcd0:	b	40bc10 <parse_rtattr@@Base>
  40bcd4:	stp	x29, x30, [sp, #-16]!
  40bcd8:	add	w2, w1, #0x1
  40bcdc:	mov	w1, #0x0                   	// #0
  40bce0:	mov	x29, sp
  40bce4:	sbfiz	x2, x2, #3, #32
  40bce8:	bl	404e10 <memset@plt>
  40bcec:	mov	w0, #0x0                   	// #0
  40bcf0:	ldp	x29, x30, [sp], #16
  40bcf4:	ret
  40bcf8:	mov	w0, #0xffffffff            	// #-1
  40bcfc:	ret

000000000040bd00 <__libc_csu_init@@Base>:
  40bd00:	stp	x29, x30, [sp, #-64]!
  40bd04:	mov	x29, sp
  40bd08:	stp	x19, x20, [sp, #16]
  40bd0c:	adrp	x20, 41f000 <_IO_stdin_used@@Base+0x13268>
  40bd10:	add	x20, x20, #0xcf8
  40bd14:	stp	x21, x22, [sp, #32]
  40bd18:	adrp	x21, 41f000 <_IO_stdin_used@@Base+0x13268>
  40bd1c:	add	x21, x21, #0xcf0
  40bd20:	sub	x20, x20, x21
  40bd24:	mov	w22, w0
  40bd28:	stp	x23, x24, [sp, #48]
  40bd2c:	mov	x23, x1
  40bd30:	mov	x24, x2
  40bd34:	bl	404be8 <memcpy@plt-0x38>
  40bd38:	cmp	xzr, x20, asr #3
  40bd3c:	b.eq	40bd68 <__libc_csu_init@@Base+0x68>  // b.none
  40bd40:	asr	x20, x20, #3
  40bd44:	mov	x19, #0x0                   	// #0
  40bd48:	ldr	x3, [x21, x19, lsl #3]
  40bd4c:	mov	x2, x24
  40bd50:	add	x19, x19, #0x1
  40bd54:	mov	x1, x23
  40bd58:	mov	w0, w22
  40bd5c:	blr	x3
  40bd60:	cmp	x20, x19
  40bd64:	b.ne	40bd48 <__libc_csu_init@@Base+0x48>  // b.any
  40bd68:	ldp	x19, x20, [sp, #16]
  40bd6c:	ldp	x21, x22, [sp, #32]
  40bd70:	ldp	x23, x24, [sp, #48]
  40bd74:	ldp	x29, x30, [sp], #64
  40bd78:	ret
  40bd7c:	nop

000000000040bd80 <__libc_csu_fini@@Base>:
  40bd80:	ret

Disassembly of section .fini:

000000000040bd84 <.fini>:
  40bd84:	stp	x29, x30, [sp, #-16]!
  40bd88:	mov	x29, sp
  40bd8c:	ldp	x29, x30, [sp], #16
  40bd90:	ret
