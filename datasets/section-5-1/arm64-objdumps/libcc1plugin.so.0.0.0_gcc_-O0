
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libcc1plugin.so.0.0.0_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002b98 <.init>:
    2b98:	stp	x29, x30, [sp, #-16]!
    2b9c:	mov	x29, sp
    2ba0:	bl	3150 <__gmon_start__@plt+0x10>
    2ba4:	ldp	x29, x30, [sp], #16
    2ba8:	ret

Disassembly of section .plt:

0000000000002bb0 <_Znam@plt-0x20>:
    2bb0:	stp	x16, x30, [sp, #-16]!
    2bb4:	adrp	x16, 21000 <xexit@@Base+0x13570>
    2bb8:	ldr	x17, [x16, #4088]
    2bbc:	add	x16, x16, #0xff8
    2bc0:	br	x17
    2bc4:	nop
    2bc8:	nop
    2bcc:	nop

0000000000002bd0 <_Znam@plt>:
    2bd0:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2bd4:	ldr	x17, [x16]
    2bd8:	add	x16, x16, #0x0
    2bdc:	br	x17

0000000000002be0 <_Z9tree_consP9tree_nodeS0_S0_@plt>:
    2be0:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2be4:	ldr	x17, [x16, #8]
    2be8:	add	x16, x16, #0x8
    2bec:	br	x17

0000000000002bf0 <_Z29hash_table_higher_prime_indexm@plt>:
    2bf0:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2bf4:	ldr	x17, [x16, #16]
    2bf8:	add	x16, x16, #0x10
    2bfc:	br	x17

0000000000002c00 <memcpy@plt>:
    2c00:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2c04:	ldr	x17, [x16, #24]
    2c08:	add	x16, x16, #0x18
    2c0c:	br	x17

0000000000002c10 <_Z6c_bindjP9tree_nodeb@plt>:
    2c10:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2c14:	ldr	x17, [x16, #32]
    2c18:	add	x16, x16, #0x20
    2c1c:	br	x17

0000000000002c20 <select@plt>:
    2c20:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2c24:	ldr	x17, [x16, #40]
    2c28:	add	x16, x16, #0x28
    2c2c:	br	x17

0000000000002c30 <_Z16build_array_typeP9tree_nodeS0_b@plt>:
    2c30:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2c34:	ldr	x17, [x16, #48]
    2c38:	add	x16, x16, #0x30
    2c3c:	br	x17

0000000000002c40 <_Z5errorPKcz@plt>:
    2c40:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2c44:	ldr	x17, [x16, #56]
    2c48:	add	x16, x16, #0x38
    2c4c:	br	x17

0000000000002c50 <_Z9make_node9tree_code@plt>:
    2c50:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2c54:	ldr	x17, [x16, #64]
    2c58:	add	x16, x16, #0x40
    2c5c:	br	x17

0000000000002c60 <_Z17c_register_pragmaPKcS0_PFvP10cpp_readerE@plt>:
    2c60:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2c64:	ldr	x17, [x16, #72]
    2c68:	add	x16, x16, #0x48
    2c6c:	br	x17

0000000000002c70 <calloc@plt>:
    2c70:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2c74:	ldr	x17, [x16, #80]
    2c78:	add	x16, x16, #0x50
    2c7c:	br	x17

0000000000002c80 <strlen@plt>:
    2c80:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2c84:	ldr	x17, [x16, #88]
    2c88:	add	x16, x16, #0x58
    2c8c:	br	x17

0000000000002c90 <fprintf@plt>:
    2c90:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2c94:	ldr	x17, [x16, #96]
    2c98:	add	x16, x16, #0x60
    2c9c:	br	x17

0000000000002ca0 <_Z16vector_type_modePK9tree_node@plt>:
    2ca0:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2ca4:	ldr	x17, [x16, #104]
    2ca8:	add	x16, x16, #0x68
    2cac:	br	x17

0000000000002cb0 <_Z11fatal_errorjPKcz@plt>:
    2cb0:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2cb4:	ldr	x17, [x16, #112]
    2cb8:	add	x16, x16, #0x70
    2cbc:	br	x17

0000000000002cc0 <htab_create_alloc@plt>:
    2cc0:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2cc4:	ldr	x17, [x16, #120]
    2cc8:	add	x16, x16, #0x78
    2ccc:	br	x17

0000000000002cd0 <xstrdup@plt>:
    2cd0:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2cd4:	ldr	x17, [x16, #128]
    2cd8:	add	x16, x16, #0x80
    2cdc:	br	x17

0000000000002ce0 <_Z8ggc_freePv@plt>:
    2ce0:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2ce4:	ldr	x17, [x16, #136]
    2ce8:	add	x16, x16, #0x88
    2cec:	br	x17

0000000000002cf0 <register_callback@plt>:
    2cf0:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2cf4:	ldr	x17, [x16, #144]
    2cf8:	add	x16, x16, #0x90
    2cfc:	br	x17

0000000000002d00 <_ZN2wi11lts_p_largeEPKljjS1_j@plt>:
    2d00:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2d04:	ldr	x17, [x16, #152]
    2d08:	add	x16, x16, #0x98
    2d0c:	br	x17

0000000000002d10 <strtol@plt>:
    2d10:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2d14:	ldr	x17, [x16, #160]
    2d18:	add	x16, x16, #0xa0
    2d1c:	br	x17

0000000000002d20 <_Z17build_vector_typeP9tree_node8poly_intILj2ElE@plt>:
    2d20:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2d24:	ldr	x17, [x16, #168]
    2d28:	add	x16, x16, #0xa8
    2d2c:	br	x17

0000000000002d30 <_Z11walk_tree_1PP9tree_nodePFS0_S1_PiPvES3_P8hash_setIS0_Lb0E19default_hash_traitsIS0_EEPFS0_S1_S2_S5_S3_SA_E@plt>:
    2d30:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2d34:	ldr	x17, [x16, #176]
    2d38:	add	x16, x16, #0xb0
    2d3c:	br	x17

0000000000002d40 <free@plt>:
    2d40:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2d44:	ldr	x17, [x16, #184]
    2d48:	add	x16, x16, #0xb8
    2d4c:	br	x17

0000000000002d50 <memset@plt>:
    2d50:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2d54:	ldr	x17, [x16, #192]
    2d58:	add	x16, x16, #0xc0
    2d5c:	br	x17

0000000000002d60 <__cxa_finalize@plt>:
    2d60:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2d64:	ldr	x17, [x16, #200]
    2d68:	add	x16, x16, #0xc8
    2d6c:	br	x17

0000000000002d70 <_Z33build_varargs_function_type_arrayP9tree_nodeiPS0_@plt>:
    2d70:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2d74:	ldr	x17, [x16, #208]
    2d78:	add	x16, x16, #0xd0
    2d7c:	br	x17

0000000000002d80 <realloc@plt>:
    2d80:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2d84:	ldr	x17, [x16, #216]
    2d88:	add	x16, x16, #0xd8
    2d8c:	br	x17

0000000000002d90 <htab_find_slot_with_hash@plt>:
    2d90:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2d94:	ldr	x17, [x16, #224]
    2d98:	add	x16, x16, #0xe0
    2d9c:	br	x17

0000000000002da0 <htab_create_typed_alloc@plt>:
    2da0:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2da4:	ldr	x17, [x16, #232]
    2da8:	add	x16, x16, #0xe8
    2dac:	br	x17

0000000000002db0 <read@plt>:
    2db0:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2db4:	ldr	x17, [x16, #240]
    2db8:	add	x16, x16, #0xf0
    2dbc:	br	x17

0000000000002dc0 <_Z29c_build_bitfield_integer_typemi@plt>:
    2dc0:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2dc4:	ldr	x17, [x16, #248]
    2dc8:	add	x16, x16, #0xf8
    2dcc:	br	x17

0000000000002dd0 <_Z12ggc_set_markPKv@plt>:
    2dd0:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2dd4:	ldr	x17, [x16, #256]
    2dd8:	add	x16, x16, #0x100
    2ddc:	br	x17

0000000000002de0 <_Z18build_pointer_typeP9tree_node@plt>:
    2de0:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2de4:	ldr	x17, [x16, #264]
    2de8:	add	x16, x16, #0x108
    2dec:	br	x17

0000000000002df0 <htab_find@plt>:
    2df0:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2df4:	ldr	x17, [x16, #272]
    2df8:	add	x16, x16, #0x110
    2dfc:	br	x17

0000000000002e00 <_Z25build_function_type_arrayP9tree_nodeiPS0_@plt>:
    2e00:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2e04:	ldr	x17, [x16, #280]
    2e08:	add	x16, x16, #0x118
    2e0c:	br	x17

0000000000002e10 <_Z24rest_of_decl_compilationP9tree_nodeii@plt>:
    2e10:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2e14:	ldr	x17, [x16, #288]
    2e18:	add	x16, x16, #0x120
    2e1c:	br	x17

0000000000002e20 <xmalloc_failed@plt>:
    2e20:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2e24:	ldr	x17, [x16, #296]
    2e28:	add	x16, x16, #0x128
    2e2c:	br	x17

0000000000002e30 <_Z11lookup_nameP9tree_node@plt>:
    2e30:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2e34:	ldr	x17, [x16, #304]
    2e38:	add	x16, x16, #0x130
    2e3c:	br	x17

0000000000002e40 <_Z10build_declj9tree_codeP9tree_nodeS1_@plt>:
    2e40:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2e44:	ldr	x17, [x16, #312]
    2e48:	add	x16, x16, #0x138
    2e4c:	br	x17

0000000000002e50 <_Z20build_qualified_typeP9tree_nodei@plt>:
    2e50:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2e54:	ldr	x17, [x16, #320]
    2e58:	add	x16, x16, #0x140
    2e5c:	br	x17

0000000000002e60 <htab_hash_string@plt>:
    2e60:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2e64:	ldr	x17, [x16, #328]
    2e68:	add	x16, x16, #0x148
    2e6c:	br	x17

0000000000002e70 <_Znwm@plt>:
    2e70:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2e74:	ldr	x17, [x16, #336]
    2e78:	add	x16, x16, #0x150
    2e7c:	br	x17

0000000000002e80 <_ZdlPvm@plt>:
    2e80:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2e84:	ldr	x17, [x16, #344]
    2e88:	add	x16, x16, #0x158
    2e8c:	br	x17

0000000000002e90 <_Z26ggc_internal_cleared_allocmPFvPvEmm@plt>:
    2e90:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2e94:	ldr	x17, [x16, #352]
    2e98:	add	x16, x16, #0x160
    2e9c:	br	x17

0000000000002ea0 <_Z8pushdeclP9tree_node@plt>:
    2ea0:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2ea4:	ldr	x17, [x16, #360]
    2ea8:	add	x16, x16, #0x168
    2eac:	br	x17

0000000000002eb0 <_Z24lhd_print_error_functionP18diagnostic_contextPKcP15diagnostic_info@plt>:
    2eb0:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2eb4:	ldr	x17, [x16, #368]
    2eb8:	add	x16, x16, #0x170
    2ebc:	br	x17

0000000000002ec0 <_Z23identifier_global_valueP9tree_node@plt>:
    2ec0:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2ec4:	ldr	x17, [x16, #376]
    2ec8:	add	x16, x16, #0x178
    2ecc:	br	x17

0000000000002ed0 <sbrk@plt>:
    2ed0:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2ed4:	ldr	x17, [x16, #384]
    2ed8:	add	x16, x16, #0x180
    2edc:	br	x17

0000000000002ee0 <htab_remove_elt_with_hash@plt>:
    2ee0:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2ee4:	ldr	x17, [x16, #392]
    2ee8:	add	x16, x16, #0x188
    2eec:	br	x17

0000000000002ef0 <htab_find_slot@plt>:
    2ef0:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2ef4:	ldr	x17, [x16, #400]
    2ef8:	add	x16, x16, #0x190
    2efc:	br	x17

0000000000002f00 <_Z27get_location_from_adhoc_locP9line_mapsj@plt>:
    2f00:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2f04:	ldr	x17, [x16, #408]
    2f08:	add	x16, x16, #0x198
    2f0c:	br	x17

0000000000002f10 <_ZdaPv@plt>:
    2f10:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2f14:	ldr	x17, [x16, #416]
    2f18:	add	x16, x16, #0x1a0
    2f1c:	br	x17

0000000000002f20 <_Z22build_array_type_neltsP9tree_node8poly_intILj2EmE@plt>:
    2f20:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2f24:	ldr	x17, [x16, #424]
    2f28:	add	x16, x16, #0x1a8
    2f2c:	br	x17

0000000000002f30 <__errno_location@plt>:
    2f30:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2f34:	ldr	x17, [x16, #432]
    2f38:	add	x16, x16, #0x1b0
    2f3c:	br	x17

0000000000002f40 <_Z18build_int_cst_typeP9tree_node8poly_intILj2ElE@plt>:
    2f40:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2f44:	ldr	x17, [x16, #440]
    2f48:	add	x16, x16, #0x1b8
    2f4c:	br	x17

0000000000002f50 <_Z11linemap_addP9line_maps9lc_reasonjPKcj@plt>:
    2f50:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2f54:	ldr	x17, [x16, #448]
    2f58:	add	x16, x16, #0x1c0
    2f5c:	br	x17

0000000000002f60 <_Z11layout_typeP9tree_node@plt>:
    2f60:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2f64:	ldr	x17, [x16, #456]
    2f68:	add	x16, x16, #0x1c8
    2f6c:	br	x17

0000000000002f70 <htab_traverse_noresize@plt>:
    2f70:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2f74:	ldr	x17, [x16, #464]
    2f78:	add	x16, x16, #0x1d0
    2f7c:	br	x17

0000000000002f80 <_Z19compute_record_modeP9tree_node@plt>:
    2f80:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2f84:	ldr	x17, [x16, #472]
    2f88:	add	x16, x16, #0x1d8
    2f8c:	br	x17

0000000000002f90 <xmalloc@plt>:
    2f90:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2f94:	ldr	x17, [x16, #480]
    2f98:	add	x16, x16, #0x1e0
    2f9c:	br	x17

0000000000002fa0 <_Z14get_identifierPKc@plt>:
    2fa0:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2fa4:	ldr	x17, [x16, #488]
    2fa8:	add	x16, x16, #0x1e8
    2fac:	br	x17

0000000000002fb0 <_Z11fancy_abortPKciS0_@plt>:
    2fb0:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2fb4:	ldr	x17, [x16, #496]
    2fb8:	add	x16, x16, #0x1f0
    2fbc:	br	x17

0000000000002fc0 <__cxa_throw_bad_array_new_length@plt>:
    2fc0:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2fc4:	ldr	x17, [x16, #504]
    2fc8:	add	x16, x16, #0x1f8
    2fcc:	br	x17

0000000000002fd0 <_Z12pos_from_bitPP9tree_nodeS1_jS0_@plt>:
    2fd0:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2fd4:	ldr	x17, [x16, #512]
    2fd8:	add	x16, x16, #0x200
    2fdc:	br	x17

0000000000002fe0 <_Z22finish_bitfield_layoutP9tree_node@plt>:
    2fe0:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2fe4:	ldr	x17, [x16, #520]
    2fe8:	add	x16, x16, #0x208
    2fec:	br	x17

0000000000002ff0 <strcmp@plt>:
    2ff0:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    2ff4:	ldr	x17, [x16, #528]
    2ff8:	add	x16, x16, #0x210
    2ffc:	br	x17

0000000000003000 <_Z16build_index_typeP9tree_node@plt>:
    3000:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    3004:	ldr	x17, [x16, #536]
    3008:	add	x16, x16, #0x218
    300c:	br	x17

0000000000003010 <_Z18build_complex_typeP9tree_nodeb@plt>:
    3010:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    3014:	ldr	x17, [x16, #544]
    3018:	add	x16, x16, #0x220
    301c:	br	x17

0000000000003020 <write@plt>:
    3020:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    3024:	ldr	x17, [x16, #552]
    3028:	add	x16, x16, #0x228
    302c:	br	x17

0000000000003030 <malloc@plt>:
    3030:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    3034:	ldr	x17, [x16, #560]
    3038:	add	x16, x16, #0x230
    303c:	br	x17

0000000000003040 <xexit@plt>:
    3040:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    3044:	ldr	x17, [x16, #568]
    3048:	add	x16, x16, #0x238
    304c:	br	x17

0000000000003050 <abort@plt>:
    3050:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    3054:	ldr	x17, [x16, #576]
    3058:	add	x16, x16, #0x240
    305c:	br	x17

0000000000003060 <_ZnamRKSt9nothrow_t@plt>:
    3060:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    3064:	ldr	x17, [x16, #584]
    3068:	add	x16, x16, #0x248
    306c:	br	x17

0000000000003070 <xcalloc@plt>:
    3070:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    3074:	ldr	x17, [x16, #592]
    3078:	add	x16, x16, #0x250
    307c:	br	x17

0000000000003080 <_Z18linemap_line_startP9line_mapsjj@plt>:
    3080:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    3084:	ldr	x17, [x16, #600]
    3088:	add	x16, x16, #0x258
    308c:	br	x17

0000000000003090 <__gxx_personality_v0@plt>:
    3090:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    3094:	ldr	x17, [x16, #608]
    3098:	add	x16, x16, #0x260
    309c:	br	x17

00000000000030a0 <_Z22c_common_type_for_sizeji@plt>:
    30a0:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    30a4:	ldr	x17, [x16, #616]
    30a8:	add	x16, x16, #0x268
    30ac:	br	x17

00000000000030b0 <htab_find_with_hash@plt>:
    30b0:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    30b4:	ldr	x17, [x16, #624]
    30b8:	add	x16, x16, #0x270
    30bc:	br	x17

00000000000030c0 <_Z13build_int_cstP9tree_node8poly_intILj2ElE@plt>:
    30c0:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    30c4:	ldr	x17, [x16, #632]
    30c8:	add	x16, x16, #0x278
    30cc:	br	x17

00000000000030d0 <exit@plt>:
    30d0:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    30d4:	ldr	x17, [x16, #640]
    30d8:	add	x16, x16, #0x280
    30dc:	br	x17

00000000000030e0 <htab_delete@plt>:
    30e0:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    30e4:	ldr	x17, [x16, #648]
    30e8:	add	x16, x16, #0x288
    30ec:	br	x17

00000000000030f0 <_Z13size_int_kind8poly_intILj2ElE14size_type_kind@plt>:
    30f0:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    30f4:	ldr	x17, [x16, #656]
    30f8:	add	x16, x16, #0x290
    30fc:	br	x17

0000000000003100 <_Unwind_Resume@plt>:
    3100:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    3104:	ldr	x17, [x16, #664]
    3108:	add	x16, x16, #0x298
    310c:	br	x17

0000000000003110 <_Z9c_pushtagjP9tree_nodeS0_@plt>:
    3110:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    3114:	ldr	x17, [x16, #672]
    3118:	add	x16, x16, #0x2a0
    311c:	br	x17

0000000000003120 <_Z15fold_build1_locj9tree_codeP9tree_nodeS1_@plt>:
    3120:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    3124:	ldr	x17, [x16, #680]
    3128:	add	x16, x16, #0x2a8
    312c:	br	x17

0000000000003130 <_Z8nreverseP9tree_node@plt>:
    3130:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    3134:	ldr	x17, [x16, #688]
    3138:	add	x16, x16, #0x2b0
    313c:	br	x17

0000000000003140 <__gmon_start__@plt>:
    3140:	adrp	x16, 22000 <_Znam@GLIBCXX_3.4>
    3144:	ldr	x17, [x16, #696]
    3148:	add	x16, x16, #0x2b8
    314c:	br	x17

Disassembly of section .text:

0000000000003150 <plugin_init@@Base-0x1dfc>:
    3150:	adrp	x0, 21000 <xexit@@Base+0x13570>
    3154:	ldr	x0, [x0, #4032]
    3158:	cbz	x0, 3160 <__gmon_start__@plt+0x20>
    315c:	b	3140 <__gmon_start__@plt>
    3160:	ret
    3164:	nop
    3168:	adrp	x0, 22000 <xexit@@Base+0x14570>
    316c:	add	x0, x0, #0x320
    3170:	adrp	x1, 22000 <xexit@@Base+0x14570>
    3174:	add	x1, x1, #0x320
    3178:	cmp	x1, x0
    317c:	b.eq	3194 <__gmon_start__@plt+0x54>  // b.none
    3180:	adrp	x1, 21000 <xexit@@Base+0x13570>
    3184:	ldr	x1, [x1, #4016]
    3188:	cbz	x1, 3194 <__gmon_start__@plt+0x54>
    318c:	mov	x16, x1
    3190:	br	x16
    3194:	ret
    3198:	adrp	x0, 22000 <xexit@@Base+0x14570>
    319c:	add	x0, x0, #0x320
    31a0:	adrp	x1, 22000 <xexit@@Base+0x14570>
    31a4:	add	x1, x1, #0x320
    31a8:	sub	x1, x1, x0
    31ac:	lsr	x2, x1, #63
    31b0:	add	x1, x2, x1, asr #3
    31b4:	cmp	xzr, x1, asr #1
    31b8:	asr	x1, x1, #1
    31bc:	b.eq	31d4 <__gmon_start__@plt+0x94>  // b.none
    31c0:	adrp	x2, 21000 <xexit@@Base+0x13570>
    31c4:	ldr	x2, [x2, #4048]
    31c8:	cbz	x2, 31d4 <__gmon_start__@plt+0x94>
    31cc:	mov	x16, x2
    31d0:	br	x16
    31d4:	ret
    31d8:	stp	x29, x30, [sp, #-32]!
    31dc:	mov	x29, sp
    31e0:	str	x19, [sp, #16]
    31e4:	adrp	x19, 22000 <xexit@@Base+0x14570>
    31e8:	ldrb	w0, [x19, #800]
    31ec:	cbnz	w0, 3214 <__gmon_start__@plt+0xd4>
    31f0:	adrp	x0, 21000 <xexit@@Base+0x13570>
    31f4:	ldr	x0, [x0, #3952]
    31f8:	cbz	x0, 3208 <__gmon_start__@plt+0xc8>
    31fc:	adrp	x0, 22000 <xexit@@Base+0x14570>
    3200:	ldr	x0, [x0, #704]
    3204:	bl	2d60 <__cxa_finalize@plt>
    3208:	bl	3168 <__gmon_start__@plt+0x28>
    320c:	mov	w0, #0x1                   	// #1
    3210:	strb	w0, [x19, #800]
    3214:	ldr	x19, [sp, #16]
    3218:	ldp	x29, x30, [sp], #32
    321c:	ret
    3220:	b	3198 <__gmon_start__@plt+0x58>
    3224:	sub	sp, sp, #0x10
    3228:	str	x0, [sp, #8]
    322c:	ldr	x0, [sp, #8]
    3230:	cmp	x0, #0x0
    3234:	rbit	x0, x0
    3238:	clz	x0, x0
    323c:	csinc	x0, xzr, x0, eq  // eq = none
    3240:	add	sp, sp, #0x10
    3244:	ret
    3248:	stp	x29, x30, [sp, #-48]!
    324c:	mov	x29, sp
    3250:	str	x0, [sp, #24]
    3254:	str	x1, [sp, #16]
    3258:	add	x0, sp, #0x28
    325c:	mov	x1, x0
    3260:	ldr	x0, [sp, #24]
    3264:	bl	b7e0 <plugin_init@@Base+0x6894>
    3268:	cmp	w0, #0x0
    326c:	cset	w0, eq  // eq = none
    3270:	and	w0, w0, #0xff
    3274:	cmp	w0, #0x0
    3278:	b.eq	3284 <__gmon_start__@plt+0x144>  // b.none
    327c:	mov	w0, #0x0                   	// #0
    3280:	b	3298 <__gmon_start__@plt+0x158>
    3284:	ldr	x0, [sp, #40]
    3288:	mov	w1, w0
    328c:	ldr	x0, [sp, #16]
    3290:	str	w1, [x0]
    3294:	mov	w0, #0x1                   	// #1
    3298:	ldp	x29, x30, [sp], #48
    329c:	ret
    32a0:	stp	x29, x30, [sp, #-48]!
    32a4:	mov	x29, sp
    32a8:	str	x0, [sp, #24]
    32ac:	str	x1, [sp, #16]
    32b0:	add	x0, sp, #0x28
    32b4:	mov	x1, x0
    32b8:	ldr	x0, [sp, #24]
    32bc:	bl	b7e0 <plugin_init@@Base+0x6894>
    32c0:	cmp	w0, #0x0
    32c4:	cset	w0, eq  // eq = none
    32c8:	and	w0, w0, #0xff
    32cc:	cmp	w0, #0x0
    32d0:	b.eq	32dc <__gmon_start__@plt+0x19c>  // b.none
    32d4:	mov	w0, #0x0                   	// #0
    32d8:	b	32f0 <__gmon_start__@plt+0x1b0>
    32dc:	ldr	x0, [sp, #40]
    32e0:	mov	w1, w0
    32e4:	ldr	x0, [sp, #16]
    32e8:	str	w1, [x0]
    32ec:	mov	w0, #0x1                   	// #1
    32f0:	ldp	x29, x30, [sp], #48
    32f4:	ret
    32f8:	stp	x29, x30, [sp, #-48]!
    32fc:	mov	x29, sp
    3300:	str	x0, [sp, #24]
    3304:	str	x1, [sp, #16]
    3308:	add	x0, sp, #0x28
    330c:	mov	x1, x0
    3310:	ldr	x0, [sp, #24]
    3314:	bl	b7e0 <plugin_init@@Base+0x6894>
    3318:	cmp	w0, #0x0
    331c:	cset	w0, eq  // eq = none
    3320:	and	w0, w0, #0xff
    3324:	cmp	w0, #0x0
    3328:	b.eq	3334 <__gmon_start__@plt+0x1f4>  // b.none
    332c:	mov	w0, #0x0                   	// #0
    3330:	b	3348 <__gmon_start__@plt+0x208>
    3334:	ldr	x0, [sp, #40]
    3338:	mov	w1, w0
    333c:	ldr	x0, [sp, #16]
    3340:	str	w1, [x0]
    3344:	mov	w0, #0x1                   	// #1
    3348:	ldp	x29, x30, [sp], #48
    334c:	ret
    3350:	stp	x29, x30, [sp, #-48]!
    3354:	mov	x29, sp
    3358:	str	x0, [sp, #40]
    335c:	str	x1, [sp, #32]
    3360:	str	x2, [sp, #24]
    3364:	adrp	x0, 21000 <xexit@@Base+0x13570>
    3368:	ldr	x0, [x0, #3960]
    336c:	ldr	x0, [x0]
    3370:	cmp	x0, #0x0
    3374:	b.eq	33bc <__gmon_start__@plt+0x27c>  // b.none
    3378:	adrp	x0, 21000 <xexit@@Base+0x13570>
    337c:	ldr	x0, [x0, #3960]
    3380:	ldr	x0, [x0]
    3384:	ldr	x0, [x0, #32]
    3388:	cmp	x0, #0x0
    338c:	b.eq	33bc <__gmon_start__@plt+0x27c>  // b.none
    3390:	adrp	x0, 21000 <xexit@@Base+0x13570>
    3394:	ldr	x0, [x0, #3960]
    3398:	ldr	x0, [x0]
    339c:	ldr	x0, [x0, #32]
    33a0:	ldr	x2, [x0, #24]
    33a4:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    33a8:	add	x1, x0, #0xb68
    33ac:	mov	x0, x2
    33b0:	bl	2ff0 <strcmp@plt>
    33b4:	cmp	w0, #0x0
    33b8:	b.eq	33d0 <__gmon_start__@plt+0x290>  // b.none
    33bc:	ldr	x2, [sp, #24]
    33c0:	ldr	x1, [sp, #32]
    33c4:	ldr	x0, [sp, #40]
    33c8:	bl	2eb0 <_Z24lhd_print_error_functionP18diagnostic_contextPKcP15diagnostic_info@plt>
    33cc:	b	33d4 <__gmon_start__@plt+0x294>
    33d0:	nop
    33d4:	ldp	x29, x30, [sp], #48
    33d8:	ret
    33dc:	sub	sp, sp, #0x10
    33e0:	str	x0, [sp, #8]
    33e4:	ldr	x0, [sp, #8]
    33e8:	add	sp, sp, #0x10
    33ec:	ret
    33f0:	sub	sp, sp, #0x10
    33f4:	str	x0, [sp, #8]
    33f8:	ldr	x0, [sp, #8]
    33fc:	add	sp, sp, #0x10
    3400:	ret
    3404:	stp	x29, x30, [sp, #-48]!
    3408:	mov	x29, sp
    340c:	str	x0, [sp, #24]
    3410:	adrp	x0, 21000 <xexit@@Base+0x13570>
    3414:	ldr	x0, [x0, #3976]
    3418:	ldr	x0, [x0]
    341c:	str	x0, [sp, #40]
    3420:	adrp	x0, 21000 <xexit@@Base+0x13570>
    3424:	ldr	x0, [x0, #3976]
    3428:	str	xzr, [x0]
    342c:	ldr	x0, [sp, #24]
    3430:	bl	2ea0 <_Z8pushdeclP9tree_node@plt>
    3434:	adrp	x0, 21000 <xexit@@Base+0x13570>
    3438:	ldr	x0, [x0, #3976]
    343c:	ldr	x1, [sp, #40]
    3440:	str	x1, [x0]
    3444:	nop
    3448:	ldp	x29, x30, [sp], #48
    344c:	ret
    3450:	stp	x29, x30, [sp, #-48]!
    3454:	mov	x29, sp
    3458:	str	x19, [sp, #16]
    345c:	str	x0, [sp, #40]
    3460:	str	w1, [sp, #36]
    3464:	ldr	x0, [sp, #40]
    3468:	ldr	w1, [sp, #36]
    346c:	bl	58ec <plugin_init@@Base+0x9a0>
    3470:	adrp	x0, 21000 <xexit@@Base+0x13570>
    3474:	add	x1, x0, #0xce8
    3478:	ldr	x0, [sp, #40]
    347c:	str	x1, [x0]
    3480:	ldr	x0, [sp, #40]
    3484:	add	x0, x0, #0x18
    3488:	mov	w4, #0x0                   	// #0
    348c:	mov	w3, #0x0                   	// #0
    3490:	mov	w2, #0x0                   	// #0
    3494:	mov	x1, #0x1e                  	// #30
    3498:	bl	5df8 <plugin_init@@Base+0xeac>
    349c:	ldr	x0, [sp, #40]
    34a0:	add	x0, x0, #0x48
    34a4:	mov	w4, #0x0                   	// #0
    34a8:	mov	w3, #0x0                   	// #0
    34ac:	mov	w2, #0x0                   	// #0
    34b0:	mov	x1, #0x1e                  	// #30
    34b4:	bl	5fb0 <plugin_init@@Base+0x1064>
    34b8:	ldr	x0, [sp, #40]
    34bc:	add	x0, x0, #0x78
    34c0:	mov	w4, #0x0                   	// #0
    34c4:	mov	w3, #0x0                   	// #0
    34c8:	mov	w2, #0x0                   	// #0
    34cc:	mov	x1, #0x1e                  	// #30
    34d0:	bl	6164 <plugin_init@@Base+0x1218>
    34d4:	b	3514 <__gmon_start__@plt+0x3d4>
    34d8:	mov	x19, x0
    34dc:	ldr	x0, [sp, #40]
    34e0:	add	x0, x0, #0x48
    34e4:	bl	6060 <plugin_init@@Base+0x1114>
    34e8:	b	34f0 <__gmon_start__@plt+0x3b0>
    34ec:	mov	x19, x0
    34f0:	ldr	x0, [sp, #40]
    34f4:	add	x0, x0, #0x18
    34f8:	bl	5ea8 <plugin_init@@Base+0xf5c>
    34fc:	b	3504 <__gmon_start__@plt+0x3c4>
    3500:	mov	x19, x0
    3504:	ldr	x0, [sp, #40]
    3508:	bl	b0f4 <plugin_init@@Base+0x61a8>
    350c:	mov	x0, x19
    3510:	bl	3100 <_Unwind_Resume@plt>
    3514:	ldr	x19, [sp, #16]
    3518:	ldp	x29, x30, [sp], #48
    351c:	ret
    3520:	stp	x29, x30, [sp, #-128]!
    3524:	mov	x29, sp
    3528:	str	x0, [sp, #24]
    352c:	ldr	x0, [sp, #24]
    3530:	add	x0, x0, #0x18
    3534:	bl	6318 <plugin_init@@Base+0x13cc>
    3538:	stp	x0, x1, [sp, #56]
    353c:	ldr	x0, [sp, #24]
    3540:	add	x0, x0, #0x18
    3544:	bl	6368 <plugin_init@@Base+0x141c>
    3548:	stp	x0, x1, [sp, #72]
    354c:	add	x1, sp, #0x48
    3550:	add	x0, sp, #0x38
    3554:	bl	6388 <plugin_init@@Base+0x143c>
    3558:	and	w0, w0, #0xff
    355c:	cmp	w0, #0x0
    3560:	b.eq	35d8 <__gmon_start__@plt+0x498>  // b.none
    3564:	add	x0, sp, #0x38
    3568:	bl	640c <plugin_init@@Base+0x14c0>
    356c:	ldr	x0, [x0]
    3570:	ldr	x0, [x0]
    3574:	str	x0, [sp, #112]
    3578:	ldr	x0, [sp, #112]
    357c:	cmp	x0, #0x0
    3580:	b.eq	3598 <__gmon_start__@plt+0x458>  // b.none
    3584:	ldr	x0, [sp, #112]
    3588:	cmp	x0, #0x1
    358c:	b.eq	3598 <__gmon_start__@plt+0x458>  // b.none
    3590:	ldr	x0, [sp, #112]
    3594:	bl	2dd0 <_Z12ggc_set_markPKv@plt>
    3598:	add	x0, sp, #0x38
    359c:	bl	640c <plugin_init@@Base+0x14c0>
    35a0:	ldr	x0, [x0]
    35a4:	ldr	x0, [x0, #8]
    35a8:	str	x0, [sp, #104]
    35ac:	ldr	x0, [sp, #104]
    35b0:	cmp	x0, #0x0
    35b4:	b.eq	35cc <__gmon_start__@plt+0x48c>  // b.none
    35b8:	ldr	x0, [sp, #104]
    35bc:	cmp	x0, #0x1
    35c0:	b.eq	35cc <__gmon_start__@plt+0x48c>  // b.none
    35c4:	ldr	x0, [sp, #104]
    35c8:	bl	2dd0 <_Z12ggc_set_markPKv@plt>
    35cc:	add	x0, sp, #0x38
    35d0:	bl	63d8 <plugin_init@@Base+0x148c>
    35d4:	b	353c <__gmon_start__@plt+0x3fc>
    35d8:	ldr	x0, [sp, #24]
    35dc:	add	x0, x0, #0x48
    35e0:	bl	6424 <plugin_init@@Base+0x14d8>
    35e4:	stp	x0, x1, [sp, #40]
    35e8:	ldr	x0, [sp, #24]
    35ec:	add	x0, x0, #0x48
    35f0:	bl	6474 <plugin_init@@Base+0x1528>
    35f4:	stp	x0, x1, [sp, #88]
    35f8:	add	x1, sp, #0x58
    35fc:	add	x0, sp, #0x28
    3600:	bl	6494 <plugin_init@@Base+0x1548>
    3604:	and	w0, w0, #0xff
    3608:	cmp	w0, #0x0
    360c:	b.eq	3648 <__gmon_start__@plt+0x508>  // b.none
    3610:	add	x0, sp, #0x28
    3614:	bl	6518 <plugin_init@@Base+0x15cc>
    3618:	str	x0, [sp, #120]
    361c:	ldr	x0, [sp, #120]
    3620:	cmp	x0, #0x0
    3624:	b.eq	363c <__gmon_start__@plt+0x4fc>  // b.none
    3628:	ldr	x0, [sp, #120]
    362c:	cmp	x0, #0x1
    3630:	b.eq	363c <__gmon_start__@plt+0x4fc>  // b.none
    3634:	ldr	x0, [sp, #120]
    3638:	bl	2dd0 <_Z12ggc_set_markPKv@plt>
    363c:	add	x0, sp, #0x28
    3640:	bl	64e4 <plugin_init@@Base+0x1598>
    3644:	b	35e8 <__gmon_start__@plt+0x4a8>
    3648:	nop
    364c:	ldp	x29, x30, [sp], #128
    3650:	ret
    3654:	stp	x29, x30, [sp, #-48]!
    3658:	mov	x29, sp
    365c:	str	w0, [sp, #28]
    3660:	str	x1, [sp, #16]
    3664:	adrp	x0, 22000 <xexit@@Base+0x14570>
    3668:	add	x0, x0, #0x330
    366c:	ldr	x0, [x0]
    3670:	cmp	x0, #0x0
    3674:	b.ne	3690 <__gmon_start__@plt+0x550>  // b.any
    3678:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    367c:	add	x2, x0, #0xb78
    3680:	mov	w1, #0xfd                  	// #253
    3684:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    3688:	add	x0, x0, #0xb90
    368c:	bl	2fb0 <_Z11fancy_abortPKciS0_@plt>
    3690:	ldr	w0, [sp, #28]
    3694:	cmp	w0, #0x2
    3698:	b.eq	36cc <__gmon_start__@plt+0x58c>  // b.none
    369c:	cmp	w0, #0x2
    36a0:	b.gt	36d8 <__gmon_start__@plt+0x598>
    36a4:	cmp	w0, #0x0
    36a8:	b.eq	36b8 <__gmon_start__@plt+0x578>  // b.none
    36ac:	cmp	w0, #0x1
    36b0:	b.eq	36c0 <__gmon_start__@plt+0x580>  // b.none
    36b4:	b	36d8 <__gmon_start__@plt+0x598>
    36b8:	str	wzr, [sp, #44]
    36bc:	b	36f0 <__gmon_start__@plt+0x5b0>
    36c0:	mov	w0, #0x1                   	// #1
    36c4:	str	w0, [sp, #44]
    36c8:	b	36f0 <__gmon_start__@plt+0x5b0>
    36cc:	mov	w0, #0x2                   	// #2
    36d0:	str	w0, [sp, #44]
    36d4:	b	36f0 <__gmon_start__@plt+0x5b0>
    36d8:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    36dc:	add	x2, x0, #0xb78
    36e0:	mov	w1, #0x10b                 	// #267
    36e4:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    36e8:	add	x0, x0, #0xb90
    36ec:	bl	2fb0 <_Z11fancy_abortPKciS0_@plt>
    36f0:	adrp	x0, 22000 <xexit@@Base+0x14570>
    36f4:	add	x0, x0, #0x330
    36f8:	ldr	x5, [x0]
    36fc:	ldr	x0, [sp, #16]
    3700:	ldr	x1, [x0, #24]
    3704:	add	x0, sp, #0x28
    3708:	mov	x4, x1
    370c:	ldr	w3, [sp, #44]
    3710:	mov	x2, x0
    3714:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    3718:	add	x1, x0, #0xbb0
    371c:	mov	x0, x5
    3720:	bl	6530 <plugin_init@@Base+0x15e4>
    3724:	nop
    3728:	ldp	x29, x30, [sp], #48
    372c:	ret
    3730:	sub	sp, sp, #0x10
    3734:	str	x0, [sp, #8]
    3738:	adrp	x0, 21000 <xexit@@Base+0x13570>
    373c:	ldr	x0, [x0, #3976]
    3740:	adrp	x1, 3000 <_Z16build_index_typeP9tree_node@plt>
    3744:	add	x1, x1, #0x654
    3748:	str	x1, [x0]
    374c:	nop
    3750:	add	sp, sp, #0x10
    3754:	ret
    3758:	stp	x29, x30, [sp, #-32]!
    375c:	mov	x29, sp
    3760:	str	x0, [sp, #24]
    3764:	str	x1, [sp, #16]
    3768:	adrp	x0, 3000 <_Z16build_index_typeP9tree_node@plt>
    376c:	add	x2, x0, #0x730
    3770:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    3774:	add	x1, x0, #0xbc0
    3778:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    377c:	add	x0, x0, #0xbd0
    3780:	bl	2c60 <_Z17c_register_pragmaPKcS0_PFvP10cpp_readerE@plt>
    3784:	nop
    3788:	ldp	x29, x30, [sp], #32
    378c:	ret
    3790:	stp	x29, x30, [sp, #-160]!
    3794:	mov	x29, sp
    3798:	str	x19, [sp, #16]
    379c:	str	x0, [sp, #56]
    37a0:	str	x1, [sp, #48]
    37a4:	str	x2, [sp, #40]
    37a8:	ldr	x0, [sp, #40]
    37ac:	str	x0, [sp, #144]
    37b0:	ldr	x0, [sp, #56]
    37b4:	ldr	x0, [x0]
    37b8:	ldrh	w0, [x0]
    37bc:	mov	w1, w0
    37c0:	adrp	x0, 21000 <xexit@@Base+0x13570>
    37c4:	ldr	x0, [x0, #3992]
    37c8:	sxtw	x1, w1
    37cc:	ldr	w0, [x0, x1, lsl #2]
    37d0:	cmp	w0, #0x3
    37d4:	b.ne	37ec <__gmon_start__@plt+0x6ac>  // b.any
    37d8:	ldr	x0, [sp, #56]
    37dc:	ldr	x0, [x0]
    37e0:	ldr	x0, [x0, #32]
    37e4:	cmp	x0, #0x0
    37e8:	b.ne	37f4 <__gmon_start__@plt+0x6b4>  // b.any
    37ec:	mov	x0, #0x0                   	// #0
    37f0:	b	3a2c <__gmon_start__@plt+0x8ec>
    37f4:	ldr	x0, [sp, #56]
    37f8:	ldr	x0, [x0]
    37fc:	str	x0, [sp, #80]
    3800:	ldr	x0, [sp, #144]
    3804:	add	x2, x0, #0x18
    3808:	add	x0, sp, #0x50
    380c:	str	x0, [sp, #96]
    3810:	add	x0, sp, #0x60
    3814:	mov	x1, x0
    3818:	mov	x0, x2
    381c:	bl	666c <plugin_init@@Base+0x1720>
    3820:	ldr	x0, [x0]
    3824:	str	x0, [sp, #152]
    3828:	ldr	x0, [sp, #152]
    382c:	cmp	x0, #0x0
    3830:	b.ne	39a8 <__gmon_start__@plt+0x868>  // b.any
    3834:	ldr	x0, [sp, #56]
    3838:	ldr	x0, [x0]
    383c:	ldr	w0, [x0, #24]
    3840:	bl	586c <plugin_init@@Base+0x920>
    3844:	and	w0, w0, #0xff
    3848:	cmp	w0, #0x0
    384c:	b.eq	3878 <__gmon_start__@plt+0x738>  // b.none
    3850:	adrp	x0, 21000 <xexit@@Base+0x13570>
    3854:	ldr	x0, [x0, #4024]
    3858:	ldr	x2, [x0]
    385c:	ldr	x0, [sp, #56]
    3860:	ldr	x0, [x0]
    3864:	ldr	w0, [x0, #24]
    3868:	mov	w1, w0
    386c:	mov	x0, x2
    3870:	bl	2f00 <_Z27get_location_from_adhoc_locP9line_mapsj@plt>
    3874:	b	3884 <__gmon_start__@plt+0x744>
    3878:	ldr	x0, [sp, #56]
    387c:	ldr	x0, [x0]
    3880:	ldr	w0, [x0, #24]
    3884:	cmp	w0, #0x1
    3888:	cset	w0, ls  // ls = plast
    388c:	and	w0, w0, #0xff
    3890:	cmp	w0, #0x0
    3894:	b.eq	39a0 <__gmon_start__@plt+0x860>  // b.none
    3898:	ldr	x0, [sp, #56]
    389c:	ldr	x0, [x0]
    38a0:	ldr	x0, [x0, #32]
    38a4:	ldr	x1, [x0, #24]
    38a8:	add	x0, sp, #0x48
    38ac:	mov	x3, x1
    38b0:	mov	x2, x0
    38b4:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    38b8:	add	x1, x0, #0xbd8
    38bc:	ldr	x0, [sp, #144]
    38c0:	bl	66a0 <plugin_init@@Base+0x1754>
    38c4:	cmp	w0, #0x0
    38c8:	cset	w0, eq  // eq = none
    38cc:	and	w0, w0, #0xff
    38d0:	cmp	w0, #0x0
    38d4:	b.eq	38e0 <__gmon_start__@plt+0x7a0>  // b.none
    38d8:	mov	x0, #0x0                   	// #0
    38dc:	b	3a2c <__gmon_start__@plt+0x8ec>
    38e0:	ldr	x0, [sp, #72]
    38e4:	cmp	x0, #0x0
    38e8:	b.ne	38f4 <__gmon_start__@plt+0x7b4>  // b.any
    38ec:	mov	x0, #0x0                   	// #0
    38f0:	b	3a2c <__gmon_start__@plt+0x8ec>
    38f4:	adrp	x0, 21000 <xexit@@Base+0x13570>
    38f8:	ldr	x0, [x0, #4000]
    38fc:	ldr	x19, [x0, #488]
    3900:	add	x1, sp, #0x48
    3904:	add	x0, sp, #0x68
    3908:	bl	67b0 <plugin_init@@Base+0x1864>
    390c:	ldp	x1, x2, [sp, #104]
    3910:	mov	x0, x19
    3914:	bl	2f40 <_Z18build_int_cst_typeP9tree_node8poly_intILj2ElE@plt>
    3918:	str	x0, [sp, #88]
    391c:	ldr	x0, [sp, #144]
    3920:	add	x3, x0, #0x18
    3924:	add	x0, sp, #0x50
    3928:	str	x0, [sp, #120]
    392c:	add	x0, sp, #0x78
    3930:	mov	w2, #0x1                   	// #1
    3934:	mov	x1, x0
    3938:	mov	x0, x3
    393c:	bl	681c <plugin_init@@Base+0x18d0>
    3940:	str	x0, [sp, #136]
    3944:	ldr	x0, [sp, #136]
    3948:	ldr	x0, [x0]
    394c:	cmp	x0, #0x0
    3950:	b.eq	396c <__gmon_start__@plt+0x82c>  // b.none
    3954:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    3958:	add	x2, x0, #0xbe8
    395c:	mov	w1, #0x13d                 	// #317
    3960:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    3964:	add	x0, x0, #0xb90
    3968:	bl	2fb0 <_Z11fancy_abortPKciS0_@plt>
    396c:	mov	x0, #0x10                  	// #16
    3970:	bl	2f90 <xmalloc@plt>
    3974:	mov	x1, x0
    3978:	ldr	x0, [sp, #136]
    397c:	str	x1, [x0]
    3980:	ldr	x0, [sp, #136]
    3984:	ldr	x2, [x0]
    3988:	ldp	x0, x1, [sp, #80]
    398c:	stp	x0, x1, [x2]
    3990:	ldr	x0, [sp, #136]
    3994:	ldr	x0, [x0]
    3998:	str	x0, [sp, #152]
    399c:	b	39a8 <__gmon_start__@plt+0x868>
    39a0:	mov	x0, #0x0                   	// #0
    39a4:	b	3a2c <__gmon_start__@plt+0x8ec>
    39a8:	ldr	x0, [sp, #152]
    39ac:	ldr	x1, [x0, #8]
    39b0:	adrp	x0, 21000 <xexit@@Base+0x13570>
    39b4:	ldr	x0, [x0, #4000]
    39b8:	ldr	x0, [x0]
    39bc:	cmp	x1, x0
    39c0:	b.eq	3a20 <__gmon_start__@plt+0x8e0>  // b.none
    39c4:	ldr	x0, [sp, #56]
    39c8:	ldr	x0, [x0]
    39cc:	ldr	x0, [x0, #8]
    39d0:	bl	2de0 <_Z18build_pointer_typeP9tree_node@plt>
    39d4:	str	x0, [sp, #128]
    39d8:	ldr	x0, [sp, #56]
    39dc:	ldr	x0, [x0]
    39e0:	ldr	x19, [x0, #8]
    39e4:	ldr	x0, [sp, #152]
    39e8:	ldr	x0, [x0, #8]
    39ec:	mov	x3, x0
    39f0:	ldr	x2, [sp, #128]
    39f4:	mov	w1, #0x7b                  	// #123
    39f8:	mov	w0, #0x0                   	// #0
    39fc:	bl	3120 <_Z15fold_build1_locj9tree_codeP9tree_nodeS1_@plt>
    3a00:	mov	x3, x0
    3a04:	mov	x2, x19
    3a08:	mov	w1, #0x35                  	// #53
    3a0c:	mov	w0, #0x0                   	// #0
    3a10:	bl	3120 <_Z15fold_build1_locj9tree_codeP9tree_nodeS1_@plt>
    3a14:	mov	x1, x0
    3a18:	ldr	x0, [sp, #56]
    3a1c:	str	x1, [x0]
    3a20:	ldr	x0, [sp, #48]
    3a24:	str	wzr, [x0]
    3a28:	mov	x0, #0x0                   	// #0
    3a2c:	ldr	x19, [sp, #16]
    3a30:	ldp	x29, x30, [sp], #160
    3a34:	ret
    3a38:	stp	x29, x30, [sp, #-48]!
    3a3c:	mov	x29, sp
    3a40:	str	x0, [sp, #24]
    3a44:	str	x1, [sp, #16]
    3a48:	ldr	x0, [sp, #24]
    3a4c:	str	x0, [sp, #40]
    3a50:	adrp	x0, 22000 <xexit@@Base+0x14570>
    3a54:	add	x0, x0, #0x330
    3a58:	ldr	x0, [x0]
    3a5c:	cmp	x0, #0x0
    3a60:	b.eq	3a98 <__gmon_start__@plt+0x958>  // b.none
    3a64:	ldr	x0, [sp, #40]
    3a68:	add	x5, x0, #0xc0
    3a6c:	adrp	x0, 22000 <xexit@@Base+0x14570>
    3a70:	add	x0, x0, #0x330
    3a74:	ldr	x0, [x0]
    3a78:	mov	x4, #0x0                   	// #0
    3a7c:	mov	x3, #0x0                   	// #0
    3a80:	mov	x2, x0
    3a84:	adrp	x0, 3000 <_Z16build_index_typeP9tree_node@plt>
    3a88:	add	x1, x0, #0x790
    3a8c:	mov	x0, x5
    3a90:	bl	2d30 <_Z11walk_tree_1PP9tree_nodePFS0_S1_PiPvES3_P8hash_setIS0_Lb0E19default_hash_traitsIS0_EEPFS0_S1_S2_S5_S3_SA_E@plt>
    3a94:	b	3a9c <__gmon_start__@plt+0x95c>
    3a98:	nop
    3a9c:	ldp	x29, x30, [sp], #48
    3aa0:	ret
    3aa4:	stp	x29, x30, [sp, #-192]!
    3aa8:	mov	x29, sp
    3aac:	str	x19, [sp, #16]
    3ab0:	str	x0, [sp, #88]
    3ab4:	str	x1, [sp, #80]
    3ab8:	str	w2, [sp, #76]
    3abc:	str	x3, [sp, #64]
    3ac0:	str	x4, [sp, #56]
    3ac4:	str	x5, [sp, #48]
    3ac8:	str	x6, [sp, #40]
    3acc:	str	w7, [sp, #72]
    3ad0:	ldr	x0, [sp, #88]
    3ad4:	str	x0, [sp, #176]
    3ad8:	ldr	x0, [sp, #80]
    3adc:	bl	2fa0 <_Z14get_identifierPKc@plt>
    3ae0:	str	x0, [sp, #168]
    3ae4:	ldr	x0, [sp, #64]
    3ae8:	bl	33f0 <__gmon_start__@plt+0x2b0>
    3aec:	str	x0, [sp, #160]
    3af0:	ldr	w0, [sp, #76]
    3af4:	cmp	w0, #0x3
    3af8:	b.eq	3b4c <__gmon_start__@plt+0xa0c>  // b.none
    3afc:	cmp	w0, #0x3
    3b00:	b.gt	3b60 <__gmon_start__@plt+0xa20>
    3b04:	cmp	w0, #0x2
    3b08:	b.eq	3b40 <__gmon_start__@plt+0xa00>  // b.none
    3b0c:	cmp	w0, #0x2
    3b10:	b.gt	3b60 <__gmon_start__@plt+0xa20>
    3b14:	cmp	w0, #0x0
    3b18:	b.eq	3b28 <__gmon_start__@plt+0x9e8>  // b.none
    3b1c:	cmp	w0, #0x1
    3b20:	b.eq	3b34 <__gmon_start__@plt+0x9f4>  // b.none
    3b24:	b	3b60 <__gmon_start__@plt+0xa20>
    3b28:	mov	w0, #0x20                  	// #32
    3b2c:	str	w0, [sp, #188]
    3b30:	b	3b78 <__gmon_start__@plt+0xa38>
    3b34:	mov	w0, #0x23                  	// #35
    3b38:	str	w0, [sp, #188]
    3b3c:	b	3b78 <__gmon_start__@plt+0xa38>
    3b40:	mov	w0, #0x26                  	// #38
    3b44:	str	w0, [sp, #188]
    3b48:	b	3b78 <__gmon_start__@plt+0xa38>
    3b4c:	adrp	x0, 21000 <xexit@@Base+0x13570>
    3b50:	ldr	x0, [x0, #4000]
    3b54:	ldr	x0, [x0]
    3b58:	bl	33dc <__gmon_start__@plt+0x29c>
    3b5c:	b	3cd4 <__gmon_start__@plt+0xb94>
    3b60:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    3b64:	add	x2, x0, #0xc00
    3b68:	mov	w1, #0x18d                 	// #397
    3b6c:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    3b70:	add	x0, x0, #0xb90
    3b74:	bl	2fb0 <_Z11fancy_abortPKciS0_@plt>
    3b78:	ldr	w2, [sp, #72]
    3b7c:	ldr	x1, [sp, #40]
    3b80:	ldr	x0, [sp, #176]
    3b84:	bl	5bc0 <plugin_init@@Base+0xc74>
    3b88:	str	w0, [sp, #156]
    3b8c:	ldr	x3, [sp, #160]
    3b90:	ldr	x2, [sp, #168]
    3b94:	ldr	w1, [sp, #188]
    3b98:	ldr	w0, [sp, #156]
    3b9c:	bl	2e40 <_Z10build_declj9tree_codeP9tree_nodeS1_@plt>
    3ba0:	str	x0, [sp, #144]
    3ba4:	ldr	x0, [sp, #144]
    3ba8:	ldrb	w1, [x0, #3]
    3bac:	orr	w1, w1, #0x1
    3bb0:	strb	w1, [x0, #3]
    3bb4:	ldr	x0, [sp, #144]
    3bb8:	ldrb	w1, [x0, #2]
    3bbc:	orr	w1, w1, #0x4
    3bc0:	strb	w1, [x0, #2]
    3bc4:	ldr	w0, [sp, #76]
    3bc8:	cmp	w0, #0x2
    3bcc:	b.eq	3cc0 <__gmon_start__@plt+0xb80>  // b.none
    3bd0:	ldr	x0, [sp, #144]
    3bd4:	ldrb	w1, [x0, #59]
    3bd8:	orr	w1, w1, #0x2
    3bdc:	strb	w1, [x0, #59]
    3be0:	ldr	x0, [sp, #144]
    3be4:	str	x0, [sp, #96]
    3be8:	ldr	x0, [sp, #56]
    3bec:	cmp	x0, #0x0
    3bf0:	b.eq	3c24 <__gmon_start__@plt+0xae4>  // b.none
    3bf4:	ldr	x0, [sp, #56]
    3bf8:	bl	2fa0 <_Z14get_identifierPKc@plt>
    3bfc:	bl	2e30 <_Z11lookup_nameP9tree_node@plt>
    3c00:	str	x0, [sp, #104]
    3c04:	ldr	x0, [sp, #104]
    3c08:	cmp	x0, #0x0
    3c0c:	b.ne	3c4c <__gmon_start__@plt+0xb0c>  // b.any
    3c10:	adrp	x0, 21000 <xexit@@Base+0x13570>
    3c14:	ldr	x0, [x0, #4000]
    3c18:	ldr	x0, [x0]
    3c1c:	str	x0, [sp, #104]
    3c20:	b	3c4c <__gmon_start__@plt+0xb0c>
    3c24:	adrp	x0, 21000 <xexit@@Base+0x13570>
    3c28:	ldr	x0, [x0, #4000]
    3c2c:	ldr	x19, [x0, #488]
    3c30:	add	x1, sp, #0x30
    3c34:	add	x0, sp, #0x70
    3c38:	bl	67b0 <plugin_init@@Base+0x1864>
    3c3c:	ldp	x1, x2, [sp, #112]
    3c40:	mov	x0, x19
    3c44:	bl	2f40 <_Z18build_int_cst_typeP9tree_node8poly_intILj2ElE@plt>
    3c48:	str	x0, [sp, #104]
    3c4c:	ldr	x0, [sp, #176]
    3c50:	add	x3, x0, #0x18
    3c54:	add	x0, sp, #0x60
    3c58:	str	x0, [sp, #128]
    3c5c:	add	x0, sp, #0x80
    3c60:	mov	w2, #0x1                   	// #1
    3c64:	mov	x1, x0
    3c68:	mov	x0, x3
    3c6c:	bl	681c <plugin_init@@Base+0x18d0>
    3c70:	str	x0, [sp, #136]
    3c74:	ldr	x0, [sp, #136]
    3c78:	ldr	x0, [x0]
    3c7c:	cmp	x0, #0x0
    3c80:	b.eq	3c9c <__gmon_start__@plt+0xb5c>  // b.none
    3c84:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    3c88:	add	x2, x0, #0xc00
    3c8c:	mov	w1, #0x1a9                 	// #425
    3c90:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    3c94:	add	x0, x0, #0xb90
    3c98:	bl	2fb0 <_Z11fancy_abortPKciS0_@plt>
    3c9c:	mov	x0, #0x10                  	// #16
    3ca0:	bl	2f90 <xmalloc@plt>
    3ca4:	mov	x1, x0
    3ca8:	ldr	x0, [sp, #136]
    3cac:	str	x1, [x0]
    3cb0:	ldr	x0, [sp, #136]
    3cb4:	ldr	x2, [x0]
    3cb8:	ldp	x0, x1, [sp, #96]
    3cbc:	stp	x0, x1, [x2]
    3cc0:	ldr	x1, [sp, #144]
    3cc4:	ldr	x0, [sp, #176]
    3cc8:	bl	5b80 <plugin_init@@Base+0xc34>
    3ccc:	bl	33dc <__gmon_start__@plt+0x29c>
    3cd0:	nop
    3cd4:	ldr	x19, [sp, #16]
    3cd8:	ldp	x29, x30, [sp], #192
    3cdc:	ret
    3ce0:	stp	x29, x30, [sp, #-64]!
    3ce4:	mov	x29, sp
    3ce8:	str	x0, [sp, #40]
    3cec:	str	x1, [sp, #32]
    3cf0:	str	w2, [sp, #28]
    3cf4:	ldr	x0, [sp, #32]
    3cf8:	bl	33f0 <__gmon_start__@plt+0x2b0>
    3cfc:	str	x0, [sp, #56]
    3d00:	ldr	x0, [sp, #56]
    3d04:	ldr	w3, [x0, #24]
    3d08:	ldr	w0, [sp, #28]
    3d0c:	cmp	w0, #0x0
    3d10:	cset	w0, ne  // ne = any
    3d14:	and	w0, w0, #0xff
    3d18:	mov	w2, w0
    3d1c:	ldr	x1, [sp, #56]
    3d20:	mov	w0, w3
    3d24:	bl	2c10 <_Z6c_bindjP9tree_nodeb@plt>
    3d28:	mov	w2, #0x0                   	// #0
    3d2c:	ldr	w1, [sp, #28]
    3d30:	ldr	x0, [sp, #56]
    3d34:	bl	2e10 <_Z24rest_of_decl_compilationP9tree_nodeii@plt>
    3d38:	mov	w0, #0x1                   	// #1
    3d3c:	ldp	x29, x30, [sp], #64
    3d40:	ret
    3d44:	stp	x29, x30, [sp, #-112]!
    3d48:	mov	x29, sp
    3d4c:	str	x19, [sp, #16]
    3d50:	str	x0, [sp, #72]
    3d54:	str	x1, [sp, #64]
    3d58:	str	x2, [sp, #56]
    3d5c:	str	x3, [sp, #48]
    3d60:	str	w4, [sp, #44]
    3d64:	ldr	x0, [sp, #72]
    3d68:	str	x0, [sp, #96]
    3d6c:	ldr	x0, [sp, #56]
    3d70:	bl	33f0 <__gmon_start__@plt+0x2b0>
    3d74:	str	x0, [sp, #88]
    3d78:	ldr	w2, [sp, #44]
    3d7c:	ldr	x1, [sp, #48]
    3d80:	ldr	x0, [sp, #96]
    3d84:	bl	5bc0 <plugin_init@@Base+0xc74>
    3d88:	mov	w19, w0
    3d8c:	ldr	x0, [sp, #64]
    3d90:	bl	2fa0 <_Z14get_identifierPKc@plt>
    3d94:	ldr	x2, [sp, #88]
    3d98:	mov	x1, x0
    3d9c:	mov	w0, w19
    3da0:	bl	3110 <_Z9c_pushtagjP9tree_nodeS0_@plt>
    3da4:	ldr	x0, [sp, #88]
    3da8:	ldr	x0, [x0, #104]
    3dac:	str	x0, [sp, #104]
    3db0:	ldr	x0, [sp, #104]
    3db4:	cmp	x0, #0x0
    3db8:	b.eq	3ddc <__gmon_start__@plt+0xc9c>  // b.none
    3dbc:	ldr	x0, [sp, #88]
    3dc0:	ldr	x1, [x0, #120]
    3dc4:	ldr	x0, [sp, #104]
    3dc8:	str	x1, [x0, #120]
    3dcc:	ldr	x0, [sp, #104]
    3dd0:	ldr	x0, [x0, #96]
    3dd4:	str	x0, [sp, #104]
    3dd8:	b	3db0 <__gmon_start__@plt+0xc70>
    3ddc:	mov	w0, #0x1                   	// #1
    3de0:	ldr	x19, [sp, #16]
    3de4:	ldp	x29, x30, [sp], #112
    3de8:	ret
    3dec:	stp	x29, x30, [sp, #-32]!
    3df0:	mov	x29, sp
    3df4:	str	x0, [sp, #24]
    3df8:	str	x1, [sp, #16]
    3dfc:	ldr	x0, [sp, #16]
    3e00:	bl	33f0 <__gmon_start__@plt+0x2b0>
    3e04:	bl	2de0 <_Z18build_pointer_typeP9tree_node@plt>
    3e08:	bl	33dc <__gmon_start__@plt+0x29c>
    3e0c:	ldp	x29, x30, [sp], #32
    3e10:	ret
    3e14:	stp	x29, x30, [sp, #-48]!
    3e18:	mov	x29, sp
    3e1c:	str	w0, [sp, #28]
    3e20:	ldr	w0, [sp, #28]
    3e24:	bl	2c50 <_Z9make_node9tree_code@plt>
    3e28:	str	x0, [sp, #40]
    3e2c:	adrp	x0, 21000 <xexit@@Base+0x13570>
    3e30:	ldr	x0, [x0, #3968]
    3e34:	ldr	w0, [x0]
    3e38:	ldr	x3, [sp, #40]
    3e3c:	mov	x2, #0x0                   	// #0
    3e40:	mov	w1, #0x26                  	// #38
    3e44:	bl	2e40 <_Z10build_declj9tree_codeP9tree_nodeS1_@plt>
    3e48:	str	x0, [sp, #32]
    3e4c:	ldr	x0, [sp, #40]
    3e50:	ldr	x1, [sp, #32]
    3e54:	str	x1, [x0, #120]
    3e58:	ldr	x0, [sp, #40]
    3e5c:	ldr	x1, [sp, #32]
    3e60:	str	x1, [x0, #16]
    3e64:	ldr	x0, [sp, #40]
    3e68:	ldp	x29, x30, [sp], #48
    3e6c:	ret
    3e70:	stp	x29, x30, [sp, #-48]!
    3e74:	mov	x29, sp
    3e78:	str	x0, [sp, #24]
    3e7c:	ldr	x0, [sp, #24]
    3e80:	str	x0, [sp, #40]
    3e84:	mov	w0, #0x11                  	// #17
    3e88:	bl	3e14 <__gmon_start__@plt+0xcd4>
    3e8c:	mov	x1, x0
    3e90:	ldr	x0, [sp, #40]
    3e94:	bl	5b80 <plugin_init@@Base+0xc34>
    3e98:	bl	33dc <__gmon_start__@plt+0x29c>
    3e9c:	ldp	x29, x30, [sp], #48
    3ea0:	ret
    3ea4:	stp	x29, x30, [sp, #-48]!
    3ea8:	mov	x29, sp
    3eac:	str	x0, [sp, #24]
    3eb0:	ldr	x0, [sp, #24]
    3eb4:	str	x0, [sp, #40]
    3eb8:	mov	w0, #0x12                  	// #18
    3ebc:	bl	3e14 <__gmon_start__@plt+0xcd4>
    3ec0:	mov	x1, x0
    3ec4:	ldr	x0, [sp, #40]
    3ec8:	bl	5b80 <plugin_init@@Base+0xc34>
    3ecc:	bl	33dc <__gmon_start__@plt+0x29c>
    3ed0:	ldp	x29, x30, [sp], #48
    3ed4:	ret
    3ed8:	stp	x29, x30, [sp, #-160]!
    3edc:	mov	x29, sp
    3ee0:	str	x0, [sp, #56]
    3ee4:	str	x1, [sp, #48]
    3ee8:	str	x2, [sp, #40]
    3eec:	str	x3, [sp, #32]
    3ef0:	str	x4, [sp, #24]
    3ef4:	str	x5, [sp, #16]
    3ef8:	ldr	x0, [sp, #48]
    3efc:	bl	33f0 <__gmon_start__@plt+0x2b0>
    3f00:	str	x0, [sp, #152]
    3f04:	ldr	x0, [sp, #32]
    3f08:	bl	33f0 <__gmon_start__@plt+0x2b0>
    3f0c:	str	x0, [sp, #144]
    3f10:	ldr	x0, [sp, #152]
    3f14:	ldrh	w0, [x0]
    3f18:	cmp	w0, #0x11
    3f1c:	b.eq	3f48 <__gmon_start__@plt+0xe08>  // b.none
    3f20:	ldr	x0, [sp, #152]
    3f24:	ldrh	w0, [x0]
    3f28:	cmp	w0, #0x12
    3f2c:	b.eq	3f48 <__gmon_start__@plt+0xe08>  // b.none
    3f30:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    3f34:	add	x2, x0, #0xc18
    3f38:	mov	w1, #0x1fb                 	// #507
    3f3c:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    3f40:	add	x0, x0, #0xb90
    3f44:	bl	2fb0 <_Z11fancy_abortPKciS0_@plt>
    3f48:	ldr	x0, [sp, #40]
    3f4c:	bl	2fa0 <_Z14get_identifierPKc@plt>
    3f50:	ldr	x3, [sp, #144]
    3f54:	mov	x2, x0
    3f58:	mov	w1, #0x22                  	// #34
    3f5c:	mov	w0, #0x1                   	// #1
    3f60:	bl	2e40 <_Z10build_declj9tree_codeP9tree_nodeS1_@plt>
    3f64:	str	x0, [sp, #136]
    3f68:	ldr	x0, [sp, #136]
    3f6c:	ldr	x1, [sp, #152]
    3f70:	str	x1, [x0, #40]
    3f74:	ldr	x0, [sp, #144]
    3f78:	ldrh	w0, [x0]
    3f7c:	cmp	w0, #0x8
    3f80:	b.ne	3fdc <__gmon_start__@plt+0xe9c>  // b.any
    3f84:	ldr	x0, [sp, #144]
    3f88:	ldrh	w0, [x0, #52]
    3f8c:	ubfx	x0, x0, #0, #10
    3f90:	and	w0, w0, #0xffff
    3f94:	and	x1, x0, #0xffff
    3f98:	ldr	x0, [sp, #24]
    3f9c:	cmp	x1, x0
    3fa0:	b.eq	3fdc <__gmon_start__@plt+0xe9c>  // b.none
    3fa4:	ldr	x0, [sp, #136]
    3fa8:	ldr	x1, [sp, #144]
    3fac:	str	x1, [x0, #120]
    3fb0:	ldr	x2, [sp, #24]
    3fb4:	ldr	x0, [sp, #144]
    3fb8:	ldrb	w0, [x0, #5]
    3fbc:	ubfx	x0, x0, #0, #1
    3fc0:	and	w0, w0, #0xff
    3fc4:	mov	w1, w0
    3fc8:	mov	x0, x2
    3fcc:	bl	2dc0 <_Z29c_build_bitfield_integer_typemi@plt>
    3fd0:	mov	x1, x0
    3fd4:	ldr	x0, [sp, #136]
    3fd8:	str	x1, [x0, #8]
    3fdc:	ldr	x0, [sp, #136]
    3fe0:	ldr	x0, [x0, #8]
    3fe4:	ldrh	w0, [x0]
    3fe8:	cmp	w0, #0xf
    3fec:	b.ne	4004 <__gmon_start__@plt+0xec4>  // b.any
    3ff0:	ldr	x0, [sp, #136]
    3ff4:	ldr	x0, [x0, #8]
    3ff8:	bl	2ca0 <_Z16vector_type_modePK9tree_node@plt>
    3ffc:	and	w0, w0, #0xff
    4000:	b	4010 <__gmon_start__@plt+0xed0>
    4004:	ldr	x0, [sp, #136]
    4008:	ldr	x0, [x0, #8]
    400c:	ldrb	w0, [x0, #54]
    4010:	ldr	x1, [sp, #136]
    4014:	strb	w0, [x1, #56]
    4018:	adrp	x0, 21000 <xexit@@Base+0x13570>
    401c:	ldr	x0, [x0, #4000]
    4020:	ldr	x0, [x0, #608]
    4024:	ldrh	w0, [x0, #52]
    4028:	ubfx	x0, x0, #0, #10
    402c:	and	w0, w0, #0xffff
    4030:	and	x0, x0, #0xffff
    4034:	bl	3224 <__gmon_start__@plt+0xe4>
    4038:	and	w0, w0, #0xff
    403c:	sub	w0, w0, #0x1
    4040:	and	w0, w0, #0xff
    4044:	and	w0, w0, #0x3f
    4048:	and	w2, w0, #0xff
    404c:	ldr	x1, [sp, #136]
    4050:	ldrb	w0, [x1, #60]
    4054:	bfxil	w0, w2, #0, #6
    4058:	strb	w0, [x1, #60]
    405c:	add	x1, sp, #0x10
    4060:	add	x0, sp, #0x48
    4064:	bl	6858 <plugin_init@@Base+0x190c>
    4068:	mov	w2, #0x2                   	// #2
    406c:	ldp	x0, x1, [sp, #72]
    4070:	bl	30f0 <_Z13size_int_kind8poly_intILj2ElE14size_type_kind@plt>
    4074:	str	x0, [sp, #128]
    4078:	ldr	x0, [sp, #136]
    407c:	add	x4, x0, #0x70
    4080:	ldr	x0, [sp, #136]
    4084:	add	x1, x0, #0x88
    4088:	ldr	x0, [sp, #136]
    408c:	ldrb	w0, [x0, #60]
    4090:	ubfx	x0, x0, #0, #6
    4094:	and	w0, w0, #0xff
    4098:	mov	w2, w0
    409c:	mov	x0, #0x1                   	// #1
    40a0:	lsl	x0, x0, x2
    40a4:	ldr	x3, [sp, #128]
    40a8:	mov	w2, w0
    40ac:	mov	x0, x4
    40b0:	bl	2fd0 <_Z12pos_from_bitPP9tree_nodeS1_jS0_@plt>
    40b4:	add	x1, sp, #0x18
    40b8:	add	x0, sp, #0x58
    40bc:	bl	6858 <plugin_init@@Base+0x190c>
    40c0:	mov	w2, #0x2                   	// #2
    40c4:	ldp	x0, x1, [sp, #88]
    40c8:	bl	30f0 <_Z13size_int_kind8poly_intILj2ElE14size_type_kind@plt>
    40cc:	mov	x1, x0
    40d0:	ldr	x0, [sp, #136]
    40d4:	str	x1, [x0, #48]
    40d8:	ldr	x0, [sp, #24]
    40dc:	add	x0, x0, #0x7
    40e0:	lsr	x0, x0, #3
    40e4:	str	x0, [sp, #120]
    40e8:	add	x1, sp, #0x78
    40ec:	add	x0, sp, #0x68
    40f0:	bl	6858 <plugin_init@@Base+0x190c>
    40f4:	mov	w2, #0x0                   	// #0
    40f8:	ldp	x0, x1, [sp, #104]
    40fc:	bl	30f0 <_Z13size_int_kind8poly_intILj2ElE14size_type_kind@plt>
    4100:	mov	x1, x0
    4104:	ldr	x0, [sp, #136]
    4108:	str	x1, [x0, #72]
    410c:	ldr	x0, [sp, #152]
    4110:	ldr	x1, [x0, #136]
    4114:	ldr	x0, [sp, #136]
    4118:	str	x1, [x0, #16]
    411c:	ldr	x0, [sp, #152]
    4120:	ldr	x1, [sp, #136]
    4124:	str	x1, [x0, #136]
    4128:	mov	w0, #0x1                   	// #1
    412c:	ldp	x29, x30, [sp], #160
    4130:	ret
    4134:	stp	x29, x30, [sp, #-112]!
    4138:	mov	x29, sp
    413c:	str	x0, [sp, #40]
    4140:	str	x1, [sp, #32]
    4144:	str	x2, [sp, #24]
    4148:	ldr	x0, [sp, #32]
    414c:	bl	33f0 <__gmon_start__@plt+0x2b0>
    4150:	str	x0, [sp, #96]
    4154:	ldr	x0, [sp, #96]
    4158:	ldrh	w0, [x0]
    415c:	cmp	w0, #0x11
    4160:	b.eq	418c <__gmon_start__@plt+0x104c>  // b.none
    4164:	ldr	x0, [sp, #96]
    4168:	ldrh	w0, [x0]
    416c:	cmp	w0, #0x12
    4170:	b.eq	418c <__gmon_start__@plt+0x104c>  // b.none
    4174:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    4178:	add	x2, x0, #0xc30
    417c:	mov	w1, #0x226                 	// #550
    4180:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    4184:	add	x0, x0, #0xb90
    4188:	bl	2fb0 <_Z11fancy_abortPKciS0_@plt>
    418c:	ldr	x0, [sp, #96]
    4190:	ldr	x0, [x0, #136]
    4194:	bl	3130 <_Z8nreverseP9tree_node@plt>
    4198:	mov	x1, x0
    419c:	ldr	x0, [sp, #96]
    41a0:	str	x1, [x0, #136]
    41a4:	ldr	x0, [sp, #96]
    41a8:	ldrh	w0, [x0]
    41ac:	cmp	w0, #0x12
    41b0:	b.ne	41c0 <__gmon_start__@plt+0x1080>  // b.any
    41b4:	ldr	x0, [sp, #96]
    41b8:	bl	2f60 <_Z11layout_typeP9tree_node@plt>
    41bc:	b	425c <__gmon_start__@plt+0x111c>
    41c0:	adrp	x0, 21000 <xexit@@Base+0x13570>
    41c4:	ldr	x0, [x0, #4000]
    41c8:	ldr	x0, [x0, #608]
    41cc:	ldrh	w0, [x0, #52]
    41d0:	ubfx	x0, x0, #0, #10
    41d4:	and	w0, w0, #0xffff
    41d8:	and	x0, x0, #0xffff
    41dc:	bl	3224 <__gmon_start__@plt+0xe4>
    41e0:	and	w0, w0, #0x3f
    41e4:	and	w2, w0, #0xff
    41e8:	ldr	x1, [sp, #96]
    41ec:	ldrb	w0, [x1, #56]
    41f0:	bfi	w0, w2, #1, #6
    41f4:	strb	w0, [x1, #56]
    41f8:	ldr	x0, [sp, #24]
    41fc:	lsl	x0, x0, #3
    4200:	str	x0, [sp, #64]
    4204:	add	x1, sp, #0x40
    4208:	add	x0, sp, #0x30
    420c:	bl	6858 <plugin_init@@Base+0x190c>
    4210:	mov	w2, #0x2                   	// #2
    4214:	ldp	x0, x1, [sp, #48]
    4218:	bl	30f0 <_Z13size_int_kind8poly_intILj2ElE14size_type_kind@plt>
    421c:	mov	x1, x0
    4220:	ldr	x0, [sp, #96]
    4224:	str	x1, [x0, #24]
    4228:	add	x1, sp, #0x18
    422c:	add	x0, sp, #0x48
    4230:	bl	6858 <plugin_init@@Base+0x190c>
    4234:	mov	w2, #0x0                   	// #0
    4238:	ldp	x0, x1, [sp, #72]
    423c:	bl	30f0 <_Z13size_int_kind8poly_intILj2ElE14size_type_kind@plt>
    4240:	mov	x1, x0
    4244:	ldr	x0, [sp, #96]
    4248:	str	x1, [x0, #32]
    424c:	ldr	x0, [sp, #96]
    4250:	bl	2f80 <_Z19compute_record_modeP9tree_node@plt>
    4254:	ldr	x0, [sp, #96]
    4258:	bl	2fe0 <_Z22finish_bitfield_layoutP9tree_node@plt>
    425c:	ldr	x0, [sp, #96]
    4260:	str	x0, [sp, #88]
    4264:	ldr	x0, [sp, #88]
    4268:	ldr	x0, [x0, #104]
    426c:	str	x0, [sp, #104]
    4270:	ldr	x0, [sp, #104]
    4274:	cmp	x0, #0x0
    4278:	b.eq	43a0 <__gmon_start__@plt+0x1260>  // b.none
    427c:	ldr	x0, [sp, #88]
    4280:	ldr	x1, [x0, #136]
    4284:	ldr	x0, [sp, #104]
    4288:	str	x1, [x0, #136]
    428c:	ldr	x0, [sp, #88]
    4290:	ldr	x1, [x0, #128]
    4294:	ldr	x0, [sp, #104]
    4298:	str	x1, [x0, #128]
    429c:	ldr	x0, [sp, #88]
    42a0:	ldrb	w0, [x0, #4]
    42a4:	ubfx	x0, x0, #1, #1
    42a8:	and	w2, w0, #0xff
    42ac:	ldr	x1, [sp, #104]
    42b0:	ldrb	w0, [x1, #4]
    42b4:	bfi	w0, w2, #1, #1
    42b8:	strb	w0, [x1, #4]
    42bc:	ldr	x0, [sp, #88]
    42c0:	ldrb	w0, [x0, #4]
    42c4:	ubfx	x0, x0, #2, #1
    42c8:	and	w2, w0, #0xff
    42cc:	ldr	x1, [sp, #104]
    42d0:	ldrb	w0, [x1, #4]
    42d4:	bfi	w0, w2, #2, #1
    42d8:	strb	w0, [x1, #4]
    42dc:	ldr	x0, [sp, #88]
    42e0:	ldrb	w0, [x0, #55]
    42e4:	ubfx	x0, x0, #2, #1
    42e8:	and	w2, w0, #0xff
    42ec:	ldr	x1, [sp, #104]
    42f0:	ldrb	w0, [x1, #55]
    42f4:	bfi	w0, w2, #2, #1
    42f8:	strb	w0, [x1, #55]
    42fc:	ldr	x0, [sp, #88]
    4300:	ldrb	w0, [x0, #56]
    4304:	and	w0, w0, #0x7e
    4308:	and	w0, w0, #0xff
    430c:	cmp	w0, #0x0
    4310:	b.eq	4338 <__gmon_start__@plt+0x11f8>  // b.none
    4314:	ldr	x0, [sp, #88]
    4318:	ldrb	w0, [x0, #56]
    431c:	ubfx	x0, x0, #1, #6
    4320:	and	w0, w0, #0xff
    4324:	sub	w0, w0, #0x1
    4328:	mov	w1, #0x1                   	// #1
    432c:	lsl	w0, w1, w0
    4330:	mov	w0, w0
    4334:	b	433c <__gmon_start__@plt+0x11fc>
    4338:	mov	x0, #0x0                   	// #0
    433c:	bl	3224 <__gmon_start__@plt+0xe4>
    4340:	and	w0, w0, #0x3f
    4344:	and	w2, w0, #0xff
    4348:	ldr	x1, [sp, #104]
    434c:	ldrb	w0, [x1, #56]
    4350:	bfi	w0, w2, #1, #6
    4354:	strb	w0, [x1, #56]
    4358:	ldr	x0, [sp, #88]
    435c:	ldr	x1, [x0, #24]
    4360:	ldr	x0, [sp, #104]
    4364:	str	x1, [x0, #24]
    4368:	ldr	x0, [sp, #88]
    436c:	ldr	x1, [x0, #32]
    4370:	ldr	x0, [sp, #104]
    4374:	str	x1, [x0, #32]
    4378:	ldr	x1, [sp, #104]
    437c:	ldr	x0, [sp, #96]
    4380:	cmp	x1, x0
    4384:	b.eq	4390 <__gmon_start__@plt+0x1250>  // b.none
    4388:	ldr	x0, [sp, #104]
    438c:	bl	2f80 <_Z19compute_record_modeP9tree_node@plt>
    4390:	ldr	x0, [sp, #104]
    4394:	ldr	x0, [x0, #96]
    4398:	str	x0, [sp, #104]
    439c:	b	4270 <__gmon_start__@plt+0x1130>
    43a0:	mov	w0, #0x1                   	// #1
    43a4:	ldp	x29, x30, [sp], #112
    43a8:	ret
    43ac:	stp	x29, x30, [sp, #-64]!
    43b0:	mov	x29, sp
    43b4:	str	x0, [sp, #24]
    43b8:	str	x1, [sp, #16]
    43bc:	ldr	x0, [sp, #16]
    43c0:	bl	33f0 <__gmon_start__@plt+0x2b0>
    43c4:	str	x0, [sp, #56]
    43c8:	adrp	x0, 21000 <xexit@@Base+0x13570>
    43cc:	ldr	x0, [x0, #4000]
    43d0:	ldr	x0, [x0]
    43d4:	ldr	x1, [sp, #56]
    43d8:	cmp	x1, x0
    43dc:	b.ne	43f4 <__gmon_start__@plt+0x12b4>  // b.any
    43e0:	adrp	x0, 21000 <xexit@@Base+0x13570>
    43e4:	ldr	x0, [x0, #4000]
    43e8:	ldr	x0, [x0]
    43ec:	bl	33dc <__gmon_start__@plt+0x29c>
    43f0:	b	445c <__gmon_start__@plt+0x131c>
    43f4:	mov	w0, #0x6                   	// #6
    43f8:	bl	3e14 <__gmon_start__@plt+0xcd4>
    43fc:	str	x0, [sp, #48]
    4400:	ldr	x0, [sp, #56]
    4404:	ldrh	w0, [x0, #52]
    4408:	ubfx	x0, x0, #0, #10
    440c:	and	w2, w0, #0xffff
    4410:	ldr	x1, [sp, #48]
    4414:	ldrh	w0, [x1, #52]
    4418:	bfxil	w0, w2, #0, #10
    441c:	strh	w0, [x1, #52]
    4420:	ldr	x0, [sp, #56]
    4424:	ldrb	w0, [x0, #5]
    4428:	ubfx	x0, x0, #0, #1
    442c:	and	w2, w0, #0xff
    4430:	ldr	x1, [sp, #48]
    4434:	ldrb	w0, [x1, #5]
    4438:	bfxil	w0, w2, #0, #1
    443c:	strb	w0, [x1, #5]
    4440:	ldr	x0, [sp, #24]
    4444:	str	x0, [sp, #40]
    4448:	ldr	x1, [sp, #48]
    444c:	ldr	x0, [sp, #40]
    4450:	bl	5b80 <plugin_init@@Base+0xc34>
    4454:	bl	33dc <__gmon_start__@plt+0x29c>
    4458:	nop
    445c:	ldp	x29, x30, [sp], #64
    4460:	ret
    4464:	stp	x29, x30, [sp, #-96]!
    4468:	mov	x29, sp
    446c:	str	x0, [sp, #40]
    4470:	str	x1, [sp, #32]
    4474:	str	x2, [sp, #24]
    4478:	str	x3, [sp, #16]
    447c:	ldr	x0, [sp, #32]
    4480:	bl	33f0 <__gmon_start__@plt+0x2b0>
    4484:	str	x0, [sp, #88]
    4488:	ldr	x0, [sp, #88]
    448c:	ldrh	w0, [x0]
    4490:	cmp	w0, #0x6
    4494:	b.eq	44b0 <__gmon_start__@plt+0x1370>  // b.none
    4498:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    449c:	add	x2, x0, #0xc50
    44a0:	mov	w1, #0x271                 	// #625
    44a4:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    44a8:	add	x0, x0, #0xb90
    44ac:	bl	2fb0 <_Z11fancy_abortPKciS0_@plt>
    44b0:	add	x1, sp, #0x10
    44b4:	add	x0, sp, #0x30
    44b8:	bl	6858 <plugin_init@@Base+0x190c>
    44bc:	ldp	x1, x2, [sp, #48]
    44c0:	ldr	x0, [sp, #88]
    44c4:	bl	30c0 <_Z13build_int_cstP9tree_node8poly_intILj2ElE@plt>
    44c8:	str	x0, [sp, #80]
    44cc:	ldr	x0, [sp, #24]
    44d0:	bl	2fa0 <_Z14get_identifierPKc@plt>
    44d4:	ldr	x3, [sp, #88]
    44d8:	mov	x2, x0
    44dc:	mov	w1, #0x24                  	// #36
    44e0:	mov	w0, #0x1                   	// #1
    44e4:	bl	2e40 <_Z10build_declj9tree_codeP9tree_nodeS1_@plt>
    44e8:	str	x0, [sp, #72]
    44ec:	ldr	x0, [sp, #72]
    44f0:	ldr	x1, [sp, #80]
    44f4:	str	x1, [x0, #80]
    44f8:	ldr	x0, [sp, #72]
    44fc:	bl	3404 <__gmon_start__@plt+0x2c4>
    4500:	ldr	x0, [sp, #72]
    4504:	ldr	x3, [x0, #32]
    4508:	ldr	x0, [sp, #88]
    450c:	ldr	x0, [x0, #136]
    4510:	mov	x2, x0
    4514:	ldr	x1, [sp, #80]
    4518:	mov	x0, x3
    451c:	bl	2be0 <_Z9tree_consP9tree_nodeS0_S0_@plt>
    4520:	str	x0, [sp, #64]
    4524:	ldr	x0, [sp, #88]
    4528:	ldr	x1, [sp, #64]
    452c:	str	x1, [x0, #136]
    4530:	mov	w0, #0x1                   	// #1
    4534:	ldp	x29, x30, [sp], #96
    4538:	ret
    453c:	stp	x29, x30, [sp, #-80]!
    4540:	mov	x29, sp
    4544:	str	x0, [sp, #24]
    4548:	str	x1, [sp, #16]
    454c:	ldr	x0, [sp, #16]
    4550:	bl	33f0 <__gmon_start__@plt+0x2b0>
    4554:	str	x0, [sp, #48]
    4558:	ldr	x0, [sp, #48]
    455c:	ldr	x0, [x0, #136]
    4560:	str	x0, [sp, #56]
    4564:	ldr	x0, [sp, #56]
    4568:	ldr	x0, [x0, #32]
    456c:	str	x0, [sp, #64]
    4570:	ldr	x0, [sp, #64]
    4574:	str	x0, [sp, #72]
    4578:	ldr	x0, [sp, #56]
    457c:	ldr	x0, [x0, #16]
    4580:	str	x0, [sp, #56]
    4584:	ldr	x0, [sp, #56]
    4588:	cmp	x0, #0x0
    458c:	b.eq	45ec <__gmon_start__@plt+0x14ac>  // b.none
    4590:	ldr	x0, [sp, #56]
    4594:	ldr	x0, [x0, #32]
    4598:	str	x0, [sp, #40]
    459c:	ldr	x1, [sp, #40]
    45a0:	ldr	x0, [sp, #64]
    45a4:	bl	58ac <plugin_init@@Base+0x960>
    45a8:	and	w0, w0, #0xff
    45ac:	cmp	w0, #0x0
    45b0:	b.eq	45bc <__gmon_start__@plt+0x147c>  // b.none
    45b4:	ldr	x0, [sp, #40]
    45b8:	str	x0, [sp, #64]
    45bc:	ldr	x1, [sp, #72]
    45c0:	ldr	x0, [sp, #40]
    45c4:	bl	58ac <plugin_init@@Base+0x960>
    45c8:	and	w0, w0, #0xff
    45cc:	cmp	w0, #0x0
    45d0:	b.eq	45dc <__gmon_start__@plt+0x149c>  // b.none
    45d4:	ldr	x0, [sp, #40]
    45d8:	str	x0, [sp, #72]
    45dc:	ldr	x0, [sp, #56]
    45e0:	ldr	x0, [x0, #16]
    45e4:	str	x0, [sp, #56]
    45e8:	b	4584 <__gmon_start__@plt+0x1444>
    45ec:	ldr	x0, [sp, #48]
    45f0:	ldr	x1, [sp, #72]
    45f4:	str	x1, [x0, #144]
    45f8:	ldr	x0, [sp, #48]
    45fc:	ldr	x1, [sp, #64]
    4600:	str	x1, [x0, #152]
    4604:	ldr	x0, [sp, #48]
    4608:	bl	2f60 <_Z11layout_typeP9tree_node@plt>
    460c:	mov	w0, #0x1                   	// #1
    4610:	ldp	x29, x30, [sp], #80
    4614:	ret
    4618:	stp	x29, x30, [sp, #-112]!
    461c:	mov	x29, sp
    4620:	str	x19, [sp, #16]
    4624:	str	x0, [sp, #56]
    4628:	str	x1, [sp, #48]
    462c:	str	x2, [sp, #40]
    4630:	str	w3, [sp, #36]
    4634:	ldr	x0, [sp, #48]
    4638:	bl	33f0 <__gmon_start__@plt+0x2b0>
    463c:	str	x0, [sp, #88]
    4640:	ldr	x0, [sp, #40]
    4644:	ldr	w0, [x0]
    4648:	sxtw	x1, w0
    464c:	mov	x0, #0xfffffffffffffff     	// #1152921504606846975
    4650:	cmp	x1, x0
    4654:	b.hi	4678 <__gmon_start__@plt+0x1538>  // b.pmore
    4658:	ldr	x0, [sp, #40]
    465c:	ldr	w0, [x0]
    4660:	sxtw	x0, w0
    4664:	lsl	x0, x0, #3
    4668:	bl	2bd0 <_Znam@plt>
    466c:	str	x0, [sp, #80]
    4670:	str	wzr, [sp, #100]
    4674:	b	467c <__gmon_start__@plt+0x153c>
    4678:	bl	2fc0 <__cxa_throw_bad_array_new_length@plt>
    467c:	ldr	x0, [sp, #40]
    4680:	ldr	w0, [x0]
    4684:	ldr	w1, [sp, #100]
    4688:	cmp	w1, w0
    468c:	b.ge	46d4 <__gmon_start__@plt+0x1594>  // b.tcont
    4690:	ldr	x0, [sp, #40]
    4694:	ldr	x1, [x0, #8]
    4698:	ldrsw	x0, [sp, #100]
    469c:	lsl	x0, x0, #3
    46a0:	add	x0, x1, x0
    46a4:	ldr	x2, [x0]
    46a8:	ldrsw	x0, [sp, #100]
    46ac:	lsl	x0, x0, #3
    46b0:	ldr	x1, [sp, #80]
    46b4:	add	x19, x1, x0
    46b8:	mov	x0, x2
    46bc:	bl	33f0 <__gmon_start__@plt+0x2b0>
    46c0:	str	x0, [x19]
    46c4:	ldr	w0, [sp, #100]
    46c8:	add	w0, w0, #0x1
    46cc:	str	w0, [sp, #100]
    46d0:	b	467c <__gmon_start__@plt+0x153c>
    46d4:	ldr	w0, [sp, #36]
    46d8:	cmp	w0, #0x0
    46dc:	b.eq	4700 <__gmon_start__@plt+0x15c0>  // b.none
    46e0:	ldr	x0, [sp, #40]
    46e4:	ldr	w0, [x0]
    46e8:	ldr	x2, [sp, #80]
    46ec:	mov	w1, w0
    46f0:	ldr	x0, [sp, #88]
    46f4:	bl	2d70 <_Z33build_varargs_function_type_arrayP9tree_nodeiPS0_@plt>
    46f8:	str	x0, [sp, #104]
    46fc:	b	471c <__gmon_start__@plt+0x15dc>
    4700:	ldr	x0, [sp, #40]
    4704:	ldr	w0, [x0]
    4708:	ldr	x2, [sp, #80]
    470c:	mov	w1, w0
    4710:	ldr	x0, [sp, #88]
    4714:	bl	2e00 <_Z25build_function_type_arrayP9tree_nodeiPS0_@plt>
    4718:	str	x0, [sp, #104]
    471c:	ldr	x0, [sp, #80]
    4720:	cmp	x0, #0x0
    4724:	b.eq	4730 <__gmon_start__@plt+0x15f0>  // b.none
    4728:	ldr	x0, [sp, #80]
    472c:	bl	2f10 <_ZdaPv@plt>
    4730:	ldr	x0, [sp, #56]
    4734:	str	x0, [sp, #72]
    4738:	ldr	x1, [sp, #104]
    473c:	ldr	x0, [sp, #72]
    4740:	bl	5b80 <plugin_init@@Base+0xc34>
    4744:	bl	33dc <__gmon_start__@plt+0x29c>
    4748:	ldr	x19, [sp, #16]
    474c:	ldp	x29, x30, [sp], #112
    4750:	ret
    4754:	stp	x29, x30, [sp, #-48]!
    4758:	mov	x29, sp
    475c:	str	x0, [sp, #24]
    4760:	str	xzr, [sp, #40]
    4764:	ldr	x0, [sp, #24]
    4768:	cmp	x0, #0x0
    476c:	b.ne	4778 <__gmon_start__@plt+0x1638>  // b.any
    4770:	ldr	x0, [sp, #40]
    4774:	b	47d4 <__gmon_start__@plt+0x1694>
    4778:	ldr	x0, [sp, #24]
    477c:	bl	2fa0 <_Z14get_identifierPKc@plt>
    4780:	bl	2ec0 <_Z23identifier_global_valueP9tree_node@plt>
    4784:	str	x0, [sp, #40]
    4788:	ldr	x0, [sp, #40]
    478c:	cmp	x0, #0x0
    4790:	b.ne	479c <__gmon_start__@plt+0x165c>  // b.any
    4794:	ldr	x0, [sp, #40]
    4798:	b	47d4 <__gmon_start__@plt+0x1694>
    479c:	ldr	x0, [sp, #40]
    47a0:	ldrh	w0, [x0]
    47a4:	cmp	w0, #0x26
    47a8:	b.eq	47c4 <__gmon_start__@plt+0x1684>  // b.none
    47ac:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    47b0:	add	x2, x0, #0xc70
    47b4:	mov	w1, #0x2c8                 	// #712
    47b8:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    47bc:	add	x0, x0, #0xb90
    47c0:	bl	2fb0 <_Z11fancy_abortPKciS0_@plt>
    47c4:	ldr	x0, [sp, #40]
    47c8:	ldr	x0, [x0, #8]
    47cc:	str	x0, [sp, #40]
    47d0:	ldr	x0, [sp, #40]
    47d4:	ldp	x29, x30, [sp], #48
    47d8:	ret
    47dc:	stp	x29, x30, [sp, #-64]!
    47e0:	mov	x29, sp
    47e4:	str	x0, [sp, #40]
    47e8:	str	w1, [sp, #36]
    47ec:	str	x2, [sp, #24]
    47f0:	str	x3, [sp, #16]
    47f4:	ldr	x0, [sp, #16]
    47f8:	cmp	x0, #0x0
    47fc:	b.ne	4814 <__gmon_start__@plt+0x16d4>  // b.any
    4800:	adrp	x0, 21000 <xexit@@Base+0x13570>
    4804:	ldr	x0, [x0, #4000]
    4808:	ldr	x0, [x0]
    480c:	str	x0, [sp, #16]
    4810:	b	48e0 <__gmon_start__@plt+0x17a0>
    4814:	ldr	x0, [sp, #16]
    4818:	ldrb	w0, [x0, #5]
    481c:	and	w0, w0, #0x1
    4820:	and	w0, w0, #0xff
    4824:	cmp	w0, #0x0
    4828:	cset	w0, eq  // eq = none
    482c:	and	w0, w0, #0xff
    4830:	mov	w1, w0
    4834:	ldr	w0, [sp, #36]
    4838:	cmp	w0, #0x0
    483c:	cset	w0, eq  // eq = none
    4840:	and	w0, w0, #0xff
    4844:	cmp	w1, w0
    4848:	b.eq	4864 <__gmon_start__@plt+0x1724>  // b.none
    484c:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    4850:	add	x2, x0, #0xc90
    4854:	mov	w1, #0x2d6                 	// #726
    4858:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    485c:	add	x0, x0, #0xb90
    4860:	bl	2fb0 <_Z11fancy_abortPKciS0_@plt>
    4864:	ldr	x0, [sp, #16]
    4868:	ldr	x0, [x0, #24]
    486c:	ldrh	w0, [x0]
    4870:	cmp	w0, #0x19
    4874:	b.eq	4890 <__gmon_start__@plt+0x1750>  // b.none
    4878:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    487c:	add	x2, x0, #0xc90
    4880:	mov	w1, #0x2d7                 	// #727
    4884:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    4888:	add	x0, x0, #0xb90
    488c:	bl	2fb0 <_Z11fancy_abortPKciS0_@plt>
    4890:	ldr	x0, [sp, #16]
    4894:	ldrh	w0, [x0, #52]
    4898:	ubfx	x0, x0, #0, #10
    489c:	and	w0, w0, #0xffff
    48a0:	and	x1, x0, #0xffff
    48a4:	ldr	x0, [sp, #24]
    48a8:	lsl	x0, x0, #3
    48ac:	cmp	x1, x0
    48b0:	b.eq	48cc <__gmon_start__@plt+0x178c>  // b.none
    48b4:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    48b8:	add	x2, x0, #0xc90
    48bc:	mov	w1, #0x2d8                 	// #728
    48c0:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    48c4:	add	x0, x0, #0xb90
    48c8:	bl	2fb0 <_Z11fancy_abortPKciS0_@plt>
    48cc:	ldr	x0, [sp, #40]
    48d0:	str	x0, [sp, #56]
    48d4:	ldr	x1, [sp, #16]
    48d8:	ldr	x0, [sp, #56]
    48dc:	bl	5b80 <plugin_init@@Base+0xc34>
    48e0:	ldr	x0, [sp, #16]
    48e4:	bl	33dc <__gmon_start__@plt+0x29c>
    48e8:	ldp	x29, x30, [sp], #64
    48ec:	ret
    48f0:	stp	x29, x30, [sp, #-64]!
    48f4:	mov	x29, sp
    48f8:	str	x0, [sp, #40]
    48fc:	str	w1, [sp, #36]
    4900:	str	x2, [sp, #24]
    4904:	ldr	x0, [sp, #24]
    4908:	lsl	w0, w0, #3
    490c:	ldr	w1, [sp, #36]
    4910:	bl	30a0 <_Z22c_common_type_for_sizeji@plt>
    4914:	str	x0, [sp, #56]
    4918:	ldr	x3, [sp, #56]
    491c:	ldr	x2, [sp, #24]
    4920:	ldr	w1, [sp, #36]
    4924:	ldr	x0, [sp, #40]
    4928:	bl	47dc <__gmon_start__@plt+0x169c>
    492c:	ldp	x29, x30, [sp], #64
    4930:	ret
    4934:	stp	x29, x30, [sp, #-64]!
    4938:	mov	x29, sp
    493c:	str	x0, [sp, #40]
    4940:	str	w1, [sp, #36]
    4944:	str	x2, [sp, #24]
    4948:	str	x3, [sp, #16]
    494c:	ldr	x0, [sp, #16]
    4950:	cmp	x0, #0x0
    4954:	b.ne	496c <__gmon_start__@plt+0x182c>  // b.any
    4958:	ldr	x2, [sp, #24]
    495c:	ldr	w1, [sp, #36]
    4960:	ldr	x0, [sp, #40]
    4964:	bl	48f0 <__gmon_start__@plt+0x17b0>
    4968:	b	49c4 <__gmon_start__@plt+0x1884>
    496c:	ldr	x0, [sp, #16]
    4970:	bl	4754 <__gmon_start__@plt+0x1614>
    4974:	str	x0, [sp, #56]
    4978:	ldr	x0, [sp, #56]
    497c:	cmp	x0, #0x0
    4980:	b.eq	49ac <__gmon_start__@plt+0x186c>  // b.none
    4984:	ldr	x0, [sp, #56]
    4988:	ldrh	w0, [x0]
    498c:	cmp	w0, #0x8
    4990:	b.eq	49ac <__gmon_start__@plt+0x186c>  // b.none
    4994:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    4998:	add	x2, x0, #0xca8
    499c:	mov	w1, #0x2f3                 	// #755
    49a0:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    49a4:	add	x0, x0, #0xb90
    49a8:	bl	2fb0 <_Z11fancy_abortPKciS0_@plt>
    49ac:	ldr	x3, [sp, #56]
    49b0:	ldr	x2, [sp, #24]
    49b4:	ldr	w1, [sp, #36]
    49b8:	ldr	x0, [sp, #40]
    49bc:	bl	47dc <__gmon_start__@plt+0x169c>
    49c0:	nop
    49c4:	ldp	x29, x30, [sp], #64
    49c8:	ret
    49cc:	stp	x29, x30, [sp, #-32]!
    49d0:	mov	x29, sp
    49d4:	str	x0, [sp, #24]
    49d8:	adrp	x0, 21000 <xexit@@Base+0x13570>
    49dc:	ldr	x0, [x0, #3936]
    49e0:	ldr	x0, [x0]
    49e4:	bl	33dc <__gmon_start__@plt+0x29c>
    49e8:	ldp	x29, x30, [sp], #32
    49ec:	ret
    49f0:	stp	x29, x30, [sp, #-32]!
    49f4:	mov	x29, sp
    49f8:	str	x0, [sp, #24]
    49fc:	str	x1, [sp, #16]
    4a00:	ldr	x0, [sp, #16]
    4a04:	lsl	x1, x0, #3
    4a08:	adrp	x0, 21000 <xexit@@Base+0x13570>
    4a0c:	ldr	x0, [x0, #4000]
    4a10:	ldr	x0, [x0, #280]
    4a14:	ldrh	w0, [x0, #52]
    4a18:	ubfx	x0, x0, #0, #10
    4a1c:	and	w0, w0, #0xffff
    4a20:	and	x0, x0, #0xffff
    4a24:	cmp	x1, x0
    4a28:	b.ne	4a40 <__gmon_start__@plt+0x1900>  // b.any
    4a2c:	adrp	x0, 21000 <xexit@@Base+0x13570>
    4a30:	ldr	x0, [x0, #4000]
    4a34:	ldr	x0, [x0, #280]
    4a38:	bl	33dc <__gmon_start__@plt+0x29c>
    4a3c:	b	4ad4 <__gmon_start__@plt+0x1994>
    4a40:	ldr	x0, [sp, #16]
    4a44:	lsl	x1, x0, #3
    4a48:	adrp	x0, 21000 <xexit@@Base+0x13570>
    4a4c:	ldr	x0, [x0, #4000]
    4a50:	ldr	x0, [x0, #288]
    4a54:	ldrh	w0, [x0, #52]
    4a58:	ubfx	x0, x0, #0, #10
    4a5c:	and	w0, w0, #0xffff
    4a60:	and	x0, x0, #0xffff
    4a64:	cmp	x1, x0
    4a68:	b.ne	4a80 <__gmon_start__@plt+0x1940>  // b.any
    4a6c:	adrp	x0, 21000 <xexit@@Base+0x13570>
    4a70:	ldr	x0, [x0, #4000]
    4a74:	ldr	x0, [x0, #288]
    4a78:	bl	33dc <__gmon_start__@plt+0x29c>
    4a7c:	b	4ad4 <__gmon_start__@plt+0x1994>
    4a80:	ldr	x0, [sp, #16]
    4a84:	lsl	x1, x0, #3
    4a88:	adrp	x0, 21000 <xexit@@Base+0x13570>
    4a8c:	ldr	x0, [x0, #4000]
    4a90:	ldr	x0, [x0, #296]
    4a94:	ldrh	w0, [x0, #52]
    4a98:	ubfx	x0, x0, #0, #10
    4a9c:	and	w0, w0, #0xffff
    4aa0:	and	x0, x0, #0xffff
    4aa4:	cmp	x1, x0
    4aa8:	b.ne	4ac0 <__gmon_start__@plt+0x1980>  // b.any
    4aac:	adrp	x0, 21000 <xexit@@Base+0x13570>
    4ab0:	ldr	x0, [x0, #4000]
    4ab4:	ldr	x0, [x0, #296]
    4ab8:	bl	33dc <__gmon_start__@plt+0x29c>
    4abc:	b	4ad4 <__gmon_start__@plt+0x1994>
    4ac0:	adrp	x0, 21000 <xexit@@Base+0x13570>
    4ac4:	ldr	x0, [x0, #4000]
    4ac8:	ldr	x0, [x0]
    4acc:	bl	33dc <__gmon_start__@plt+0x29c>
    4ad0:	nop
    4ad4:	ldp	x29, x30, [sp], #32
    4ad8:	ret
    4adc:	stp	x29, x30, [sp, #-64]!
    4ae0:	mov	x29, sp
    4ae4:	str	x0, [sp, #40]
    4ae8:	str	x1, [sp, #32]
    4aec:	str	x2, [sp, #24]
    4af0:	ldr	x0, [sp, #24]
    4af4:	cmp	x0, #0x0
    4af8:	b.ne	4b0c <__gmon_start__@plt+0x19cc>  // b.any
    4afc:	ldr	x1, [sp, #32]
    4b00:	ldr	x0, [sp, #40]
    4b04:	bl	49f0 <__gmon_start__@plt+0x18b0>
    4b08:	b	4ba8 <__gmon_start__@plt+0x1a68>
    4b0c:	ldr	x0, [sp, #24]
    4b10:	bl	4754 <__gmon_start__@plt+0x1614>
    4b14:	str	x0, [sp, #56]
    4b18:	ldr	x0, [sp, #56]
    4b1c:	cmp	x0, #0x0
    4b20:	b.ne	4b38 <__gmon_start__@plt+0x19f8>  // b.any
    4b24:	adrp	x0, 21000 <xexit@@Base+0x13570>
    4b28:	ldr	x0, [x0, #4000]
    4b2c:	ldr	x0, [x0]
    4b30:	bl	33dc <__gmon_start__@plt+0x29c>
    4b34:	b	4ba8 <__gmon_start__@plt+0x1a68>
    4b38:	ldr	x0, [sp, #56]
    4b3c:	ldrh	w0, [x0]
    4b40:	cmp	w0, #0x9
    4b44:	b.eq	4b60 <__gmon_start__@plt+0x1a20>  // b.none
    4b48:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    4b4c:	add	x2, x0, #0xcb8
    4b50:	mov	w1, #0x318                 	// #792
    4b54:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    4b58:	add	x0, x0, #0xb90
    4b5c:	bl	2fb0 <_Z11fancy_abortPKciS0_@plt>
    4b60:	ldr	x0, [sp, #32]
    4b64:	lsl	x1, x0, #3
    4b68:	ldr	x0, [sp, #56]
    4b6c:	ldrh	w0, [x0, #52]
    4b70:	ubfx	x0, x0, #0, #10
    4b74:	and	w0, w0, #0xffff
    4b78:	and	x0, x0, #0xffff
    4b7c:	cmp	x1, x0
    4b80:	b.eq	4b9c <__gmon_start__@plt+0x1a5c>  // b.none
    4b84:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    4b88:	add	x2, x0, #0xcb8
    4b8c:	mov	w1, #0x319                 	// #793
    4b90:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    4b94:	add	x0, x0, #0xb90
    4b98:	bl	2fb0 <_Z11fancy_abortPKciS0_@plt>
    4b9c:	ldr	x0, [sp, #56]
    4ba0:	bl	33dc <__gmon_start__@plt+0x29c>
    4ba4:	nop
    4ba8:	ldp	x29, x30, [sp], #64
    4bac:	ret
    4bb0:	stp	x29, x30, [sp, #-32]!
    4bb4:	mov	x29, sp
    4bb8:	str	x0, [sp, #24]
    4bbc:	adrp	x0, 21000 <xexit@@Base+0x13570>
    4bc0:	ldr	x0, [x0, #4000]
    4bc4:	ldr	x0, [x0, #480]
    4bc8:	bl	33dc <__gmon_start__@plt+0x29c>
    4bcc:	ldp	x29, x30, [sp], #32
    4bd0:	ret
    4bd4:	stp	x29, x30, [sp, #-32]!
    4bd8:	mov	x29, sp
    4bdc:	str	x0, [sp, #24]
    4be0:	adrp	x0, 21000 <xexit@@Base+0x13570>
    4be4:	ldr	x0, [x0, #4000]
    4be8:	ldr	x0, [x0, #552]
    4bec:	bl	33dc <__gmon_start__@plt+0x29c>
    4bf0:	ldp	x29, x30, [sp], #32
    4bf4:	ret
    4bf8:	stp	x29, x30, [sp, #-96]!
    4bfc:	mov	x29, sp
    4c00:	str	x0, [sp, #40]
    4c04:	str	x1, [sp, #32]
    4c08:	str	w2, [sp, #28]
    4c0c:	ldr	x0, [sp, #32]
    4c10:	bl	33f0 <__gmon_start__@plt+0x2b0>
    4c14:	str	x0, [sp, #80]
    4c18:	ldr	w0, [sp, #28]
    4c1c:	cmn	w0, #0x1
    4c20:	b.ne	4c3c <__gmon_start__@plt+0x1afc>  // b.any
    4c24:	mov	w2, #0x0                   	// #0
    4c28:	mov	x1, #0x0                   	// #0
    4c2c:	ldr	x0, [sp, #80]
    4c30:	bl	2c30 <_Z16build_array_typeP9tree_nodeS0_b@plt>
    4c34:	str	x0, [sp, #88]
    4c38:	b	4c58 <__gmon_start__@plt+0x1b18>
    4c3c:	add	x1, sp, #0x1c
    4c40:	add	x0, sp, #0x38
    4c44:	bl	5cbc <plugin_init@@Base+0xd70>
    4c48:	ldp	x1, x2, [sp, #56]
    4c4c:	ldr	x0, [sp, #80]
    4c50:	bl	2f20 <_Z22build_array_type_neltsP9tree_node8poly_intILj2EmE@plt>
    4c54:	str	x0, [sp, #88]
    4c58:	ldr	x0, [sp, #40]
    4c5c:	str	x0, [sp, #72]
    4c60:	ldr	x1, [sp, #88]
    4c64:	ldr	x0, [sp, #72]
    4c68:	bl	5b80 <plugin_init@@Base+0xc34>
    4c6c:	bl	33dc <__gmon_start__@plt+0x29c>
    4c70:	ldp	x29, x30, [sp], #96
    4c74:	ret
    4c78:	stp	x29, x30, [sp, #-96]!
    4c7c:	mov	x29, sp
    4c80:	str	x0, [sp, #40]
    4c84:	str	x1, [sp, #32]
    4c88:	str	x2, [sp, #24]
    4c8c:	ldr	x0, [sp, #32]
    4c90:	bl	33f0 <__gmon_start__@plt+0x2b0>
    4c94:	str	x0, [sp, #88]
    4c98:	ldr	x0, [sp, #24]
    4c9c:	bl	2fa0 <_Z14get_identifierPKc@plt>
    4ca0:	bl	2e30 <_Z11lookup_nameP9tree_node@plt>
    4ca4:	str	x0, [sp, #80]
    4ca8:	ldr	x0, [sp, #80]
    4cac:	bl	3000 <_Z16build_index_typeP9tree_node@plt>
    4cb0:	str	x0, [sp, #72]
    4cb4:	mov	w2, #0x0                   	// #0
    4cb8:	ldr	x1, [sp, #72]
    4cbc:	ldr	x0, [sp, #88]
    4cc0:	bl	2c30 <_Z16build_array_typeP9tree_nodeS0_b@plt>
    4cc4:	str	x0, [sp, #64]
    4cc8:	ldr	x0, [sp, #64]
    4ccc:	ldrb	w1, [x0, #55]
    4cd0:	orr	w1, w1, #0x4
    4cd4:	strb	w1, [x0, #55]
    4cd8:	ldr	x0, [sp, #40]
    4cdc:	str	x0, [sp, #56]
    4ce0:	ldr	x1, [sp, #64]
    4ce4:	ldr	x0, [sp, #56]
    4ce8:	bl	5b80 <plugin_init@@Base+0xc34>
    4cec:	bl	33dc <__gmon_start__@plt+0x29c>
    4cf0:	ldp	x29, x30, [sp], #96
    4cf4:	ret
    4cf8:	stp	x29, x30, [sp, #-64]!
    4cfc:	mov	x29, sp
    4d00:	str	x0, [sp, #40]
    4d04:	str	x1, [sp, #32]
    4d08:	str	w2, [sp, #28]
    4d0c:	ldr	x0, [sp, #32]
    4d10:	bl	33f0 <__gmon_start__@plt+0x2b0>
    4d14:	str	x0, [sp, #48]
    4d18:	str	wzr, [sp, #60]
    4d1c:	ldr	w0, [sp, #28]
    4d20:	and	w0, w0, #0x1
    4d24:	cmp	w0, #0x0
    4d28:	b.eq	4d38 <__gmon_start__@plt+0x1bf8>  // b.none
    4d2c:	ldr	w0, [sp, #60]
    4d30:	orr	w0, w0, #0x1
    4d34:	str	w0, [sp, #60]
    4d38:	ldr	w0, [sp, #28]
    4d3c:	and	w0, w0, #0x2
    4d40:	cmp	w0, #0x0
    4d44:	b.eq	4d54 <__gmon_start__@plt+0x1c14>  // b.none
    4d48:	ldr	w0, [sp, #60]
    4d4c:	orr	w0, w0, #0x2
    4d50:	str	w0, [sp, #60]
    4d54:	ldr	w0, [sp, #28]
    4d58:	and	w0, w0, #0x4
    4d5c:	cmp	w0, #0x0
    4d60:	b.eq	4d70 <__gmon_start__@plt+0x1c30>  // b.none
    4d64:	ldr	w0, [sp, #60]
    4d68:	orr	w0, w0, #0x4
    4d6c:	str	w0, [sp, #60]
    4d70:	ldr	w1, [sp, #60]
    4d74:	ldr	x0, [sp, #48]
    4d78:	bl	2e50 <_Z20build_qualified_typeP9tree_nodei@plt>
    4d7c:	bl	33dc <__gmon_start__@plt+0x29c>
    4d80:	ldp	x29, x30, [sp], #64
    4d84:	ret
    4d88:	stp	x29, x30, [sp, #-48]!
    4d8c:	mov	x29, sp
    4d90:	str	x0, [sp, #24]
    4d94:	str	x1, [sp, #16]
    4d98:	ldr	x0, [sp, #24]
    4d9c:	str	x0, [sp, #40]
    4da0:	ldr	x0, [sp, #16]
    4da4:	bl	33f0 <__gmon_start__@plt+0x2b0>
    4da8:	mov	w1, #0x0                   	// #0
    4dac:	bl	3010 <_Z18build_complex_typeP9tree_nodeb@plt>
    4db0:	mov	x1, x0
    4db4:	ldr	x0, [sp, #40]
    4db8:	bl	5b80 <plugin_init@@Base+0xc34>
    4dbc:	bl	33dc <__gmon_start__@plt+0x29c>
    4dc0:	ldp	x29, x30, [sp], #48
    4dc4:	ret
    4dc8:	stp	x29, x30, [sp, #-96]!
    4dcc:	mov	x29, sp
    4dd0:	str	x19, [sp, #16]
    4dd4:	str	x0, [sp, #56]
    4dd8:	str	x1, [sp, #48]
    4ddc:	str	w2, [sp, #44]
    4de0:	ldr	x0, [sp, #56]
    4de4:	str	x0, [sp, #88]
    4de8:	ldr	x0, [sp, #48]
    4dec:	bl	33f0 <__gmon_start__@plt+0x2b0>
    4df0:	mov	x19, x0
    4df4:	add	x1, sp, #0x2c
    4df8:	add	x0, sp, #0x48
    4dfc:	bl	68c4 <plugin_init@@Base+0x1978>
    4e00:	ldp	x1, x2, [sp, #72]
    4e04:	mov	x0, x19
    4e08:	bl	2d20 <_Z17build_vector_typeP9tree_node8poly_intILj2ElE@plt>
    4e0c:	mov	x1, x0
    4e10:	ldr	x0, [sp, #88]
    4e14:	bl	5b80 <plugin_init@@Base+0xc34>
    4e18:	bl	33dc <__gmon_start__@plt+0x29c>
    4e1c:	ldr	x19, [sp, #16]
    4e20:	ldp	x29, x30, [sp], #96
    4e24:	ret
    4e28:	stp	x29, x30, [sp, #-128]!
    4e2c:	mov	x29, sp
    4e30:	str	x19, [sp, #16]
    4e34:	str	x0, [sp, #72]
    4e38:	str	x1, [sp, #64]
    4e3c:	str	x2, [sp, #56]
    4e40:	str	x3, [sp, #48]
    4e44:	str	x4, [sp, #40]
    4e48:	str	w5, [sp, #36]
    4e4c:	ldr	x0, [sp, #72]
    4e50:	str	x0, [sp, #120]
    4e54:	ldr	x0, [sp, #64]
    4e58:	bl	33f0 <__gmon_start__@plt+0x2b0>
    4e5c:	str	x0, [sp, #112]
    4e60:	add	x1, sp, #0x30
    4e64:	add	x0, sp, #0x50
    4e68:	bl	6858 <plugin_init@@Base+0x190c>
    4e6c:	ldp	x1, x2, [sp, #80]
    4e70:	ldr	x0, [sp, #112]
    4e74:	bl	30c0 <_Z13build_int_cstP9tree_node8poly_intILj2ElE@plt>
    4e78:	str	x0, [sp, #104]
    4e7c:	ldr	w2, [sp, #36]
    4e80:	ldr	x1, [sp, #40]
    4e84:	ldr	x0, [sp, #120]
    4e88:	bl	5bc0 <plugin_init@@Base+0xc74>
    4e8c:	mov	w19, w0
    4e90:	ldr	x0, [sp, #56]
    4e94:	bl	2fa0 <_Z14get_identifierPKc@plt>
    4e98:	ldr	x3, [sp, #112]
    4e9c:	mov	x2, x0
    4ea0:	mov	w1, #0x24                  	// #36
    4ea4:	mov	w0, w19
    4ea8:	bl	2e40 <_Z10build_declj9tree_codeP9tree_nodeS1_@plt>
    4eac:	str	x0, [sp, #96]
    4eb0:	ldr	x0, [sp, #96]
    4eb4:	ldr	x1, [sp, #104]
    4eb8:	str	x1, [x0, #80]
    4ebc:	ldr	x0, [sp, #96]
    4ec0:	bl	3404 <__gmon_start__@plt+0x2c4>
    4ec4:	mov	w0, #0x1                   	// #1
    4ec8:	ldr	x19, [sp, #16]
    4ecc:	ldp	x29, x30, [sp], #128
    4ed0:	ret
    4ed4:	stp	x29, x30, [sp, #-32]!
    4ed8:	mov	x29, sp
    4edc:	str	x0, [sp, #24]
    4ee0:	str	x1, [sp, #16]
    4ee4:	ldr	x1, [sp, #16]
    4ee8:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    4eec:	add	x0, x0, #0xcd0
    4ef0:	bl	2c40 <_Z5errorPKcz@plt>
    4ef4:	adrp	x0, 21000 <xexit@@Base+0x13570>
    4ef8:	ldr	x0, [x0, #4000]
    4efc:	ldr	x0, [x0]
    4f00:	bl	33dc <__gmon_start__@plt+0x29c>
    4f04:	ldp	x29, x30, [sp], #32
    4f08:	ret
    4f0c:	stp	x29, x30, [sp, #-32]!
    4f10:	mov	x29, sp
    4f14:	str	x0, [sp, #24]
    4f18:	str	x1, [sp, #16]
    4f1c:	adrp	x0, 22000 <xexit@@Base+0x14570>
    4f20:	add	x0, x0, #0x330
    4f24:	ldr	x0, [x0]
    4f28:	cmp	x0, #0x0
    4f2c:	b.eq	4f40 <__gmon_start__@plt+0x1e00>  // b.none
    4f30:	adrp	x0, 22000 <xexit@@Base+0x14570>
    4f34:	add	x0, x0, #0x330
    4f38:	ldr	x0, [x0]
    4f3c:	bl	3520 <__gmon_start__@plt+0x3e0>
    4f40:	nop
    4f44:	ldp	x29, x30, [sp], #32
    4f48:	ret

0000000000004f4c <plugin_init@@Base>:
    4f4c:	stp	x29, x30, [sp, #-288]!
    4f50:	mov	x29, sp
    4f54:	stp	x19, x20, [sp, #16]
    4f58:	str	x0, [sp, #40]
    4f5c:	str	x1, [sp, #32]
    4f60:	mov	x0, #0xffffffffffffffff    	// #-1
    4f64:	str	x0, [sp, #280]
    4f68:	str	wzr, [sp, #276]
    4f6c:	ldr	x0, [sp, #40]
    4f70:	ldr	w0, [x0, #16]
    4f74:	ldr	w1, [sp, #276]
    4f78:	cmp	w1, w0
    4f7c:	b.ge	503c <plugin_init@@Base+0xf0>  // b.tcont
    4f80:	ldr	x0, [sp, #40]
    4f84:	ldr	x1, [x0, #24]
    4f88:	ldrsw	x0, [sp, #276]
    4f8c:	lsl	x0, x0, #4
    4f90:	add	x0, x1, x0
    4f94:	ldr	x2, [x0]
    4f98:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    4f9c:	add	x1, x0, #0xcd8
    4fa0:	mov	x0, x2
    4fa4:	bl	2ff0 <strcmp@plt>
    4fa8:	cmp	w0, #0x0
    4fac:	b.ne	5028 <plugin_init@@Base+0xdc>  // b.any
    4fb0:	bl	2f30 <__errno_location@plt>
    4fb4:	str	wzr, [x0]
    4fb8:	ldr	x0, [sp, #40]
    4fbc:	ldr	x1, [x0, #24]
    4fc0:	ldrsw	x0, [sp, #276]
    4fc4:	lsl	x0, x0, #4
    4fc8:	add	x0, x1, x0
    4fcc:	ldr	x0, [x0, #8]
    4fd0:	add	x1, sp, #0x30
    4fd4:	mov	w2, #0x0                   	// #0
    4fd8:	bl	2d10 <strtol@plt>
    4fdc:	str	x0, [sp, #280]
    4fe0:	ldr	x0, [sp, #48]
    4fe4:	ldrb	w0, [x0]
    4fe8:	cmp	w0, #0x0
    4fec:	b.ne	5000 <plugin_init@@Base+0xb4>  // b.any
    4ff0:	bl	2f30 <__errno_location@plt>
    4ff4:	ldr	w0, [x0]
    4ff8:	cmp	w0, #0x0
    4ffc:	b.eq	5038 <plugin_init@@Base+0xec>  // b.none
    5000:	adrp	x0, 21000 <xexit@@Base+0x13570>
    5004:	ldr	x0, [x0, #3968]
    5008:	ldr	w3, [x0]
    500c:	ldr	x0, [sp, #40]
    5010:	ldr	x0, [x0]
    5014:	mov	x2, x0
    5018:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    501c:	add	x1, x0, #0xce0
    5020:	mov	w0, w3
    5024:	bl	2cb0 <_Z11fatal_errorjPKcz@plt>
    5028:	ldr	w0, [sp, #276]
    502c:	add	w0, w0, #0x1
    5030:	str	w0, [sp, #276]
    5034:	b	4f6c <plugin_init@@Base+0x20>
    5038:	nop
    503c:	ldr	x0, [sp, #280]
    5040:	cmn	x0, #0x1
    5044:	b.ne	5070 <plugin_init@@Base+0x124>  // b.any
    5048:	adrp	x0, 21000 <xexit@@Base+0x13570>
    504c:	ldr	x0, [x0, #3968]
    5050:	ldr	w3, [x0]
    5054:	ldr	x0, [sp, #40]
    5058:	ldr	x0, [x0]
    505c:	mov	x2, x0
    5060:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    5064:	add	x1, x0, #0xd10
    5068:	mov	w0, w3
    506c:	bl	2cb0 <_Z11fatal_errorjPKcz@plt>
    5070:	mov	x0, #0xa8                  	// #168
    5074:	bl	2e70 <_Znwm@plt>
    5078:	mov	x19, x0
    507c:	ldr	x0, [sp, #280]
    5080:	mov	w1, w0
    5084:	mov	x0, x19
    5088:	bl	3450 <__gmon_start__@plt+0x310>
    508c:	adrp	x0, 22000 <xexit@@Base+0x14570>
    5090:	add	x0, x0, #0x330
    5094:	str	x19, [x0]
    5098:	adrp	x0, 22000 <xexit@@Base+0x14570>
    509c:	add	x0, x0, #0x330
    50a0:	ldr	x0, [x0]
    50a4:	mov	w1, #0x48                  	// #72
    50a8:	bl	b210 <plugin_init@@Base+0x62c4>
    50ac:	cmp	w0, #0x0
    50b0:	b.eq	50d0 <plugin_init@@Base+0x184>  // b.none
    50b4:	adrp	x0, 22000 <xexit@@Base+0x14570>
    50b8:	add	x0, x0, #0x330
    50bc:	ldr	x0, [x0]
    50c0:	add	x1, sp, #0x38
    50c4:	bl	6930 <plugin_init@@Base+0x19e4>
    50c8:	cmp	w0, #0x0
    50cc:	b.ne	50d8 <plugin_init@@Base+0x18c>  // b.any
    50d0:	mov	w0, #0x1                   	// #1
    50d4:	b	50dc <plugin_init@@Base+0x190>
    50d8:	mov	w0, #0x0                   	// #0
    50dc:	cmp	w0, #0x0
    50e0:	b.eq	510c <plugin_init@@Base+0x1c0>  // b.none
    50e4:	adrp	x0, 21000 <xexit@@Base+0x13570>
    50e8:	ldr	x0, [x0, #3968]
    50ec:	ldr	w3, [x0]
    50f0:	ldr	x0, [sp, #40]
    50f4:	ldr	x0, [x0]
    50f8:	mov	x2, x0
    50fc:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    5100:	add	x1, x0, #0xd40
    5104:	mov	w0, w3
    5108:	bl	2cb0 <_Z11fatal_errorjPKcz@plt>
    510c:	ldr	x0, [sp, #56]
    5110:	cmp	x0, #0x1
    5114:	b.eq	5140 <plugin_init@@Base+0x1f4>  // b.none
    5118:	adrp	x0, 21000 <xexit@@Base+0x13570>
    511c:	ldr	x0, [x0, #3968]
    5120:	ldr	w3, [x0]
    5124:	ldr	x0, [sp, #40]
    5128:	ldr	x0, [x0]
    512c:	mov	x2, x0
    5130:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    5134:	add	x1, x0, #0xd58
    5138:	mov	w0, w3
    513c:	bl	2cb0 <_Z11fatal_errorjPKcz@plt>
    5140:	ldr	x0, [sp, #40]
    5144:	ldr	x4, [x0]
    5148:	mov	x3, #0x0                   	// #0
    514c:	adrp	x0, 3000 <_Z16build_index_typeP9tree_node@plt>
    5150:	add	x2, x0, #0x758
    5154:	mov	w1, #0xf                   	// #15
    5158:	mov	x0, x4
    515c:	bl	2cf0 <register_callback@plt>
    5160:	ldr	x0, [sp, #40]
    5164:	ldr	x4, [x0]
    5168:	mov	x3, #0x0                   	// #0
    516c:	adrp	x0, 3000 <_Z16build_index_typeP9tree_node@plt>
    5170:	add	x2, x0, #0xa38
    5174:	mov	w1, #0x6                   	// #6
    5178:	mov	x0, x4
    517c:	bl	2cf0 <register_callback@plt>
    5180:	ldr	x0, [sp, #40]
    5184:	ldr	x4, [x0]
    5188:	mov	x3, #0x0                   	// #0
    518c:	adrp	x0, 4000 <__gmon_start__@plt+0xec0>
    5190:	add	x2, x0, #0xf0c
    5194:	mov	w1, #0xa                   	// #10
    5198:	mov	x0, x4
    519c:	bl	2cf0 <register_callback@plt>
    51a0:	adrp	x0, 21000 <xexit@@Base+0x13570>
    51a4:	ldr	x0, [x0, #3984]
    51a8:	adrp	x1, 3000 <_Z16build_index_typeP9tree_node@plt>
    51ac:	add	x1, x1, #0x350
    51b0:	str	x1, [x0, #232]
    51b4:	adrp	x0, 6000 <plugin_init@@Base+0x10b4>
    51b8:	add	x0, x0, #0x984
    51bc:	str	x0, [sp, #264]
    51c0:	adrp	x0, 22000 <xexit@@Base+0x14570>
    51c4:	add	x0, x0, #0x330
    51c8:	ldr	x0, [x0]
    51cc:	mov	x3, x0
    51d0:	ldr	x2, [sp, #264]
    51d4:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    51d8:	add	x1, x0, #0xd80
    51dc:	mov	x0, x3
    51e0:	bl	5960 <plugin_init@@Base+0xa14>
    51e4:	adrp	x0, 6000 <plugin_init@@Base+0x10b4>
    51e8:	add	x0, x0, #0xc60
    51ec:	str	x0, [sp, #256]
    51f0:	adrp	x0, 22000 <xexit@@Base+0x14570>
    51f4:	add	x0, x0, #0x330
    51f8:	ldr	x0, [x0]
    51fc:	mov	x3, x0
    5200:	ldr	x2, [sp, #256]
    5204:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    5208:	add	x1, x0, #0xd90
    520c:	mov	x0, x3
    5210:	bl	5960 <plugin_init@@Base+0xa14>
    5214:	adrp	x0, 6000 <plugin_init@@Base+0x10b4>
    5218:	add	x0, x0, #0xd9c
    521c:	str	x0, [sp, #248]
    5220:	adrp	x0, 22000 <xexit@@Base+0x14570>
    5224:	add	x0, x0, #0x330
    5228:	ldr	x0, [x0]
    522c:	mov	x3, x0
    5230:	ldr	x2, [sp, #248]
    5234:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    5238:	add	x1, x0, #0xd98
    523c:	mov	x0, x3
    5240:	bl	5960 <plugin_init@@Base+0xa14>
    5244:	adrp	x0, 6000 <plugin_init@@Base+0x10b4>
    5248:	add	x0, x0, #0xf80
    524c:	str	x0, [sp, #240]
    5250:	adrp	x0, 22000 <xexit@@Base+0x14570>
    5254:	add	x0, x0, #0x330
    5258:	ldr	x0, [x0]
    525c:	mov	x3, x0
    5260:	ldr	x2, [sp, #240]
    5264:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    5268:	add	x1, x0, #0xda0
    526c:	mov	x0, x3
    5270:	bl	5960 <plugin_init@@Base+0xa14>
    5274:	adrp	x0, 7000 <plugin_init@@Base+0x20b4>
    5278:	add	x0, x0, #0x6c
    527c:	str	x0, [sp, #232]
    5280:	adrp	x0, 22000 <xexit@@Base+0x14570>
    5284:	add	x0, x0, #0x330
    5288:	ldr	x0, [x0]
    528c:	mov	x3, x0
    5290:	ldr	x2, [sp, #232]
    5294:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    5298:	add	x1, x0, #0xdb8
    529c:	mov	x0, x3
    52a0:	bl	5960 <plugin_init@@Base+0xa14>
    52a4:	adrp	x0, 7000 <plugin_init@@Base+0x20b4>
    52a8:	add	x0, x0, #0xec
    52ac:	str	x0, [sp, #224]
    52b0:	adrp	x0, 22000 <xexit@@Base+0x14570>
    52b4:	add	x0, x0, #0x330
    52b8:	ldr	x0, [x0]
    52bc:	mov	x3, x0
    52c0:	ldr	x2, [sp, #224]
    52c4:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    52c8:	add	x1, x0, #0xdd0
    52cc:	mov	x0, x3
    52d0:	bl	5960 <plugin_init@@Base+0xa14>
    52d4:	adrp	x0, 7000 <plugin_init@@Base+0x20b4>
    52d8:	add	x0, x0, #0x16c
    52dc:	str	x0, [sp, #216]
    52e0:	adrp	x0, 22000 <xexit@@Base+0x14570>
    52e4:	add	x0, x0, #0x330
    52e8:	ldr	x0, [x0]
    52ec:	mov	x3, x0
    52f0:	ldr	x2, [sp, #216]
    52f4:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    52f8:	add	x1, x0, #0xde8
    52fc:	mov	x0, x3
    5300:	bl	5960 <plugin_init@@Base+0xa14>
    5304:	adrp	x0, 7000 <plugin_init@@Base+0x20b4>
    5308:	add	x0, x0, #0x3a0
    530c:	str	x0, [sp, #208]
    5310:	adrp	x0, 22000 <xexit@@Base+0x14570>
    5314:	add	x0, x0, #0x330
    5318:	ldr	x0, [x0]
    531c:	mov	x3, x0
    5320:	ldr	x2, [sp, #208]
    5324:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    5328:	add	x1, x0, #0xdf8
    532c:	mov	x0, x3
    5330:	bl	5960 <plugin_init@@Base+0xa14>
    5334:	adrp	x0, 7000 <plugin_init@@Base+0x20b4>
    5338:	add	x0, x0, #0x4dc
    533c:	str	x0, [sp, #200]
    5340:	adrp	x0, 22000 <xexit@@Base+0x14570>
    5344:	add	x0, x0, #0x330
    5348:	ldr	x0, [x0]
    534c:	mov	x3, x0
    5350:	ldr	x2, [sp, #200]
    5354:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    5358:	add	x1, x0, #0xe10
    535c:	mov	x0, x3
    5360:	bl	5960 <plugin_init@@Base+0xa14>
    5364:	adrp	x0, 7000 <plugin_init@@Base+0x20b4>
    5368:	add	x0, x0, #0x5c8
    536c:	str	x0, [sp, #192]
    5370:	adrp	x0, 22000 <xexit@@Base+0x14570>
    5374:	add	x0, x0, #0x330
    5378:	ldr	x0, [x0]
    537c:	mov	x3, x0
    5380:	ldr	x2, [sp, #192]
    5384:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    5388:	add	x1, x0, #0xe20
    538c:	mov	x0, x3
    5390:	bl	5960 <plugin_init@@Base+0xa14>
    5394:	adrp	x0, 7000 <plugin_init@@Base+0x20b4>
    5398:	add	x0, x0, #0x754
    539c:	str	x0, [sp, #184]
    53a0:	adrp	x0, 22000 <xexit@@Base+0x14570>
    53a4:	add	x0, x0, #0x330
    53a8:	ldr	x0, [x0]
    53ac:	mov	x3, x0
    53b0:	ldr	x2, [sp, #184]
    53b4:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    53b8:	add	x1, x0, #0xe38
    53bc:	mov	x0, x3
    53c0:	bl	5960 <plugin_init@@Base+0xa14>
    53c4:	adrp	x0, 7000 <plugin_init@@Base+0x20b4>
    53c8:	add	x0, x0, #0x840
    53cc:	str	x0, [sp, #176]
    53d0:	adrp	x0, 22000 <xexit@@Base+0x14570>
    53d4:	add	x0, x0, #0x330
    53d8:	ldr	x0, [x0]
    53dc:	mov	x3, x0
    53e0:	ldr	x2, [sp, #176]
    53e4:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    53e8:	add	x1, x0, #0xe50
    53ec:	mov	x0, x3
    53f0:	bl	5960 <plugin_init@@Base+0xa14>
    53f4:	adrp	x0, 7000 <plugin_init@@Base+0x20b4>
    53f8:	add	x0, x0, #0x9cc
    53fc:	str	x0, [sp, #168]
    5400:	adrp	x0, 22000 <xexit@@Base+0x14570>
    5404:	add	x0, x0, #0x330
    5408:	ldr	x0, [x0]
    540c:	mov	x3, x0
    5410:	ldr	x2, [sp, #168]
    5414:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    5418:	add	x1, x0, #0xe68
    541c:	mov	x0, x3
    5420:	bl	5960 <plugin_init@@Base+0xa14>
    5424:	adrp	x0, 7000 <plugin_init@@Base+0x20b4>
    5428:	add	x0, x0, #0xb08
    542c:	str	x0, [sp, #160]
    5430:	adrp	x0, 22000 <xexit@@Base+0x14570>
    5434:	add	x0, x0, #0x330
    5438:	ldr	x0, [x0]
    543c:	mov	x3, x0
    5440:	ldr	x2, [sp, #160]
    5444:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    5448:	add	x1, x0, #0xe78
    544c:	mov	x0, x3
    5450:	bl	5960 <plugin_init@@Base+0xa14>
    5454:	adrp	x0, 7000 <plugin_init@@Base+0x20b4>
    5458:	add	x0, x0, #0xbf4
    545c:	str	x0, [sp, #152]
    5460:	adrp	x0, 22000 <xexit@@Base+0x14570>
    5464:	add	x0, x0, #0x330
    5468:	ldr	x0, [x0]
    546c:	mov	x3, x0
    5470:	ldr	x2, [sp, #152]
    5474:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    5478:	add	x1, x0, #0xe88
    547c:	mov	x0, x3
    5480:	bl	5960 <plugin_init@@Base+0xa14>
    5484:	adrp	x0, 7000 <plugin_init@@Base+0x20b4>
    5488:	add	x0, x0, #0xc74
    548c:	str	x0, [sp, #144]
    5490:	adrp	x0, 22000 <xexit@@Base+0x14570>
    5494:	add	x0, x0, #0x330
    5498:	ldr	x0, [x0]
    549c:	mov	x3, x0
    54a0:	ldr	x2, [sp, #144]
    54a4:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    54a8:	add	x1, x0, #0xe98
    54ac:	mov	x0, x3
    54b0:	bl	5960 <plugin_init@@Base+0xa14>
    54b4:	adrp	x0, 7000 <plugin_init@@Base+0x20b4>
    54b8:	add	x0, x0, #0xcf4
    54bc:	str	x0, [sp, #136]
    54c0:	adrp	x0, 22000 <xexit@@Base+0x14570>
    54c4:	add	x0, x0, #0x330
    54c8:	ldr	x0, [x0]
    54cc:	mov	x3, x0
    54d0:	ldr	x2, [sp, #136]
    54d4:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    54d8:	add	x1, x0, #0xea8
    54dc:	mov	x0, x3
    54e0:	bl	5960 <plugin_init@@Base+0xa14>
    54e4:	adrp	x0, 7000 <plugin_init@@Base+0x20b4>
    54e8:	add	x0, x0, #0xe30
    54ec:	str	x0, [sp, #128]
    54f0:	adrp	x0, 22000 <xexit@@Base+0x14570>
    54f4:	add	x0, x0, #0x330
    54f8:	ldr	x0, [x0]
    54fc:	mov	x3, x0
    5500:	ldr	x2, [sp, #128]
    5504:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    5508:	add	x1, x0, #0xec0
    550c:	mov	x0, x3
    5510:	bl	5960 <plugin_init@@Base+0xa14>
    5514:	adrp	x0, 7000 <plugin_init@@Base+0x20b4>
    5518:	add	x0, x0, #0xf6c
    551c:	str	x0, [sp, #120]
    5520:	adrp	x0, 22000 <xexit@@Base+0x14570>
    5524:	add	x0, x0, #0x330
    5528:	ldr	x0, [x0]
    552c:	mov	x3, x0
    5530:	ldr	x2, [sp, #120]
    5534:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    5538:	add	x1, x0, #0xed8
    553c:	mov	x0, x3
    5540:	bl	5960 <plugin_init@@Base+0xa14>
    5544:	adrp	x0, 8000 <plugin_init@@Base+0x30b4>
    5548:	add	x0, x0, #0xa8
    554c:	str	x0, [sp, #112]
    5550:	adrp	x0, 22000 <xexit@@Base+0x14570>
    5554:	add	x0, x0, #0x330
    5558:	ldr	x0, [x0]
    555c:	mov	x3, x0
    5560:	ldr	x2, [sp, #112]
    5564:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    5568:	add	x1, x0, #0xef0
    556c:	mov	x0, x3
    5570:	bl	5960 <plugin_init@@Base+0xa14>
    5574:	adrp	x0, 8000 <plugin_init@@Base+0x30b4>
    5578:	add	x0, x0, #0x194
    557c:	str	x0, [sp, #104]
    5580:	adrp	x0, 22000 <xexit@@Base+0x14570>
    5584:	add	x0, x0, #0x330
    5588:	ldr	x0, [x0]
    558c:	mov	x3, x0
    5590:	ldr	x2, [sp, #104]
    5594:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    5598:	add	x1, x0, #0xf08
    559c:	mov	x0, x3
    55a0:	bl	5960 <plugin_init@@Base+0xa14>
    55a4:	adrp	x0, 8000 <plugin_init@@Base+0x30b4>
    55a8:	add	x0, x0, #0x2d0
    55ac:	str	x0, [sp, #96]
    55b0:	adrp	x0, 22000 <xexit@@Base+0x14570>
    55b4:	add	x0, x0, #0x330
    55b8:	ldr	x0, [x0]
    55bc:	mov	x3, x0
    55c0:	ldr	x2, [sp, #96]
    55c4:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    55c8:	add	x1, x0, #0xf20
    55cc:	mov	x0, x3
    55d0:	bl	5960 <plugin_init@@Base+0xa14>
    55d4:	adrp	x0, 8000 <plugin_init@@Base+0x30b4>
    55d8:	add	x0, x0, #0x504
    55dc:	str	x0, [sp, #88]
    55e0:	adrp	x0, 22000 <xexit@@Base+0x14570>
    55e4:	add	x0, x0, #0x330
    55e8:	ldr	x0, [x0]
    55ec:	mov	x3, x0
    55f0:	ldr	x2, [sp, #88]
    55f4:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    55f8:	add	x1, x0, #0xf30
    55fc:	mov	x0, x3
    5600:	bl	5960 <plugin_init@@Base+0xa14>
    5604:	adrp	x0, 8000 <plugin_init@@Base+0x30b4>
    5608:	add	x0, x0, #0x5f0
    560c:	str	x0, [sp, #80]
    5610:	adrp	x0, 22000 <xexit@@Base+0x14570>
    5614:	add	x0, x0, #0x330
    5618:	ldr	x0, [x0]
    561c:	mov	x3, x0
    5620:	ldr	x2, [sp, #80]
    5624:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    5628:	add	x1, x0, #0xf38
    562c:	mov	x0, x3
    5630:	bl	5960 <plugin_init@@Base+0xa14>
    5634:	adrp	x0, 8000 <plugin_init@@Base+0x30b4>
    5638:	add	x0, x0, #0x77c
    563c:	str	x0, [sp, #72]
    5640:	adrp	x0, 22000 <xexit@@Base+0x14570>
    5644:	add	x0, x0, #0x330
    5648:	ldr	x0, [x0]
    564c:	mov	x3, x0
    5650:	ldr	x2, [sp, #72]
    5654:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    5658:	add	x1, x0, #0xf48
    565c:	mov	x0, x3
    5660:	bl	5960 <plugin_init@@Base+0xa14>
    5664:	adrp	x0, 8000 <plugin_init@@Base+0x30b4>
    5668:	add	x0, x0, #0x7fc
    566c:	str	x0, [sp, #64]
    5670:	adrp	x0, 22000 <xexit@@Base+0x14570>
    5674:	add	x0, x0, #0x330
    5678:	ldr	x0, [x0]
    567c:	mov	x3, x0
    5680:	ldr	x2, [sp, #64]
    5684:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    5688:	add	x1, x0, #0xf58
    568c:	mov	x0, x3
    5690:	bl	5960 <plugin_init@@Base+0xa14>
    5694:	mov	w0, #0x0                   	// #0
    5698:	b	56b4 <plugin_init@@Base+0x768>
    569c:	mov	x20, x0
    56a0:	mov	x1, #0xa8                  	// #168
    56a4:	mov	x0, x19
    56a8:	bl	2e80 <_ZdlPvm@plt>
    56ac:	mov	x0, x20
    56b0:	bl	3100 <_Unwind_Resume@plt>
    56b4:	ldp	x19, x20, [sp, #16]
    56b8:	ldp	x29, x30, [sp], #288
    56bc:	ret
    56c0:	sub	sp, sp, #0x20
    56c4:	str	x0, [sp, #24]
    56c8:	str	x1, [sp, #16]
    56cc:	str	w2, [sp, #12]
    56d0:	str	w3, [sp, #8]
    56d4:	ldr	x0, [sp, #24]
    56d8:	ldr	x1, [sp, #16]
    56dc:	str	x1, [x0]
    56e0:	ldr	x0, [sp, #24]
    56e4:	ldr	w1, [sp, #12]
    56e8:	str	w1, [x0, #8]
    56ec:	ldr	x0, [sp, #24]
    56f0:	ldr	w1, [sp, #8]
    56f4:	str	w1, [x0, #12]
    56f8:	nop
    56fc:	add	sp, sp, #0x20
    5700:	ret
    5704:	sub	sp, sp, #0x10
    5708:	str	x0, [sp, #8]
    570c:	ldr	x0, [sp, #8]
    5710:	ldr	w0, [x0, #8]
    5714:	add	sp, sp, #0x10
    5718:	ret
    571c:	sub	sp, sp, #0x10
    5720:	str	x0, [sp, #8]
    5724:	ldr	x0, [sp, #8]
    5728:	ldr	x0, [x0]
    572c:	add	sp, sp, #0x10
    5730:	ret
    5734:	sub	sp, sp, #0x30
    5738:	str	w0, [sp, #12]
    573c:	str	w1, [sp, #8]
    5740:	str	w2, [sp, #4]
    5744:	str	w3, [sp]
    5748:	ldr	w1, [sp, #12]
    574c:	ldr	w0, [sp, #4]
    5750:	mul	x0, x1, x0
    5754:	lsr	x0, x0, #32
    5758:	str	w0, [sp, #44]
    575c:	ldr	w1, [sp, #12]
    5760:	ldr	w0, [sp, #44]
    5764:	sub	w0, w1, w0
    5768:	str	w0, [sp, #40]
    576c:	ldr	w0, [sp, #40]
    5770:	lsr	w0, w0, #1
    5774:	str	w0, [sp, #36]
    5778:	ldr	w1, [sp, #44]
    577c:	ldr	w0, [sp, #36]
    5780:	add	w0, w1, w0
    5784:	str	w0, [sp, #32]
    5788:	ldr	w0, [sp]
    578c:	ldr	w1, [sp, #32]
    5790:	lsr	w0, w1, w0
    5794:	str	w0, [sp, #28]
    5798:	ldr	w1, [sp, #28]
    579c:	ldr	w0, [sp, #8]
    57a0:	mul	w0, w1, w0
    57a4:	ldr	w1, [sp, #12]
    57a8:	sub	w0, w1, w0
    57ac:	str	w0, [sp, #24]
    57b0:	ldr	w0, [sp, #24]
    57b4:	add	sp, sp, #0x30
    57b8:	ret
    57bc:	stp	x29, x30, [sp, #-48]!
    57c0:	mov	x29, sp
    57c4:	str	w0, [sp, #28]
    57c8:	str	w1, [sp, #24]
    57cc:	ldr	w0, [sp, #24]
    57d0:	lsl	x1, x0, #4
    57d4:	adrp	x0, 21000 <xexit@@Base+0x13570>
    57d8:	ldr	x0, [x0, #4064]
    57dc:	add	x0, x1, x0
    57e0:	str	x0, [sp, #40]
    57e4:	ldr	x0, [sp, #40]
    57e8:	ldr	w1, [x0]
    57ec:	ldr	x0, [sp, #40]
    57f0:	ldr	w2, [x0, #4]
    57f4:	ldr	x0, [sp, #40]
    57f8:	ldr	w0, [x0, #12]
    57fc:	mov	w3, w0
    5800:	ldr	w0, [sp, #28]
    5804:	bl	5734 <plugin_init@@Base+0x7e8>
    5808:	ldp	x29, x30, [sp], #48
    580c:	ret
    5810:	stp	x29, x30, [sp, #-48]!
    5814:	mov	x29, sp
    5818:	str	w0, [sp, #28]
    581c:	str	w1, [sp, #24]
    5820:	ldr	w0, [sp, #24]
    5824:	lsl	x1, x0, #4
    5828:	adrp	x0, 21000 <xexit@@Base+0x13570>
    582c:	ldr	x0, [x0, #4064]
    5830:	add	x0, x1, x0
    5834:	str	x0, [sp, #40]
    5838:	ldr	x0, [sp, #40]
    583c:	ldr	w0, [x0]
    5840:	sub	w1, w0, #0x2
    5844:	ldr	x0, [sp, #40]
    5848:	ldr	w2, [x0, #8]
    584c:	ldr	x0, [sp, #40]
    5850:	ldr	w0, [x0, #12]
    5854:	mov	w3, w0
    5858:	ldr	w0, [sp, #28]
    585c:	bl	5734 <plugin_init@@Base+0x7e8>
    5860:	add	w0, w0, #0x1
    5864:	ldp	x29, x30, [sp], #48
    5868:	ret
    586c:	sub	sp, sp, #0x10
    5870:	str	w0, [sp, #12]
    5874:	ldr	w0, [sp, #12]
    5878:	lsr	w0, w0, #31
    587c:	and	w0, w0, #0xff
    5880:	add	sp, sp, #0x10
    5884:	ret
    5888:	stp	x29, x30, [sp, #-48]!
    588c:	mov	x29, sp
    5890:	str	x0, [sp, #24]
    5894:	add	x1, sp, #0x18
    5898:	add	x0, sp, #0x28
    589c:	bl	5d28 <plugin_init@@Base+0xddc>
    58a0:	ldr	x0, [sp, #40]
    58a4:	ldp	x29, x30, [sp], #48
    58a8:	ret
    58ac:	stp	x29, x30, [sp, #-48]!
    58b0:	mov	x29, sp
    58b4:	str	x0, [sp, #24]
    58b8:	str	x1, [sp, #16]
    58bc:	ldr	x0, [sp, #24]
    58c0:	bl	5888 <plugin_init@@Base+0x93c>
    58c4:	str	x0, [sp, #32]
    58c8:	ldr	x0, [sp, #16]
    58cc:	bl	5888 <plugin_init@@Base+0x93c>
    58d0:	str	x0, [sp, #40]
    58d4:	add	x1, sp, #0x28
    58d8:	add	x0, sp, #0x20
    58dc:	bl	5d5c <plugin_init@@Base+0xe10>
    58e0:	and	w0, w0, #0xff
    58e4:	ldp	x29, x30, [sp], #48
    58e8:	ret
    58ec:	stp	x29, x30, [sp, #-32]!
    58f0:	mov	x29, sp
    58f4:	str	x0, [sp, #24]
    58f8:	str	w1, [sp, #20]
    58fc:	adrp	x0, 21000 <xexit@@Base+0x13570>
    5900:	ldr	x0, [x0, #3928]
    5904:	add	x1, x0, #0x10
    5908:	ldr	x0, [sp, #24]
    590c:	str	x1, [x0]
    5910:	ldr	x0, [sp, #24]
    5914:	ldr	w1, [sp, #20]
    5918:	str	w1, [x0, #8]
    591c:	ldr	x0, [sp, #24]
    5920:	mov	w1, #0xffffffff            	// #-1
    5924:	str	w1, [x0, #12]
    5928:	ldr	x0, [sp, #24]
    592c:	add	x0, x0, #0x10
    5930:	bl	afc0 <plugin_init@@Base+0x6074>
    5934:	nop
    5938:	ldp	x29, x30, [sp], #32
    593c:	ret
    5940:	stp	x29, x30, [sp, #-32]!
    5944:	mov	x29, sp
    5948:	str	x0, [sp, #24]
    594c:	mov	w1, #0x1                   	// #1
    5950:	ldr	x0, [sp, #24]
    5954:	bl	b2d0 <plugin_init@@Base+0x6384>
    5958:	ldp	x29, x30, [sp], #32
    595c:	ret
    5960:	stp	x29, x30, [sp, #-48]!
    5964:	mov	x29, sp
    5968:	str	x0, [sp, #40]
    596c:	str	x1, [sp, #32]
    5970:	str	x2, [sp, #24]
    5974:	ldr	x0, [sp, #40]
    5978:	add	x0, x0, #0x10
    597c:	ldr	x2, [sp, #24]
    5980:	ldr	x1, [sp, #32]
    5984:	bl	b038 <plugin_init@@Base+0x60ec>
    5988:	nop
    598c:	ldp	x29, x30, [sp], #48
    5990:	ret
    5994:	sub	sp, sp, #0x10
    5998:	str	x0, [sp, #8]
    599c:	ldr	x0, [sp, #8]
    59a0:	str	xzr, [x0]
    59a4:	nop
    59a8:	add	sp, sp, #0x10
    59ac:	ret
    59b0:	stp	x29, x30, [sp, #-32]!
    59b4:	mov	x29, sp
    59b8:	str	x0, [sp, #24]
    59bc:	ldr	x0, [sp, #24]
    59c0:	ldr	x0, [x0]
    59c4:	cmp	x0, #0x0
    59c8:	b.eq	59d8 <plugin_init@@Base+0xa8c>  // b.none
    59cc:	ldr	x0, [sp, #24]
    59d0:	ldr	x0, [x0]
    59d4:	bl	2f10 <_ZdaPv@plt>
    59d8:	nop
    59dc:	ldp	x29, x30, [sp], #32
    59e0:	ret
    59e4:	sub	sp, sp, #0x10
    59e8:	str	x0, [sp, #8]
    59ec:	ldr	x0, [sp, #8]
    59f0:	ldr	x0, [x0]
    59f4:	add	sp, sp, #0x10
    59f8:	ret
    59fc:	stp	x29, x30, [sp, #-32]!
    5a00:	mov	x29, sp
    5a04:	str	x0, [sp, #24]
    5a08:	str	x1, [sp, #16]
    5a0c:	ldr	x0, [sp, #24]
    5a10:	mov	x1, x0
    5a14:	ldr	x0, [sp, #16]
    5a18:	bl	b8f0 <plugin_init@@Base+0x69a4>
    5a1c:	ldp	x29, x30, [sp], #32
    5a20:	ret
    5a24:	sub	sp, sp, #0x10
    5a28:	str	x0, [sp, #8]
    5a2c:	ldr	x0, [sp, #8]
    5a30:	str	xzr, [x0]
    5a34:	nop
    5a38:	add	sp, sp, #0x10
    5a3c:	ret
    5a40:	stp	x29, x30, [sp, #-32]!
    5a44:	mov	x29, sp
    5a48:	str	x0, [sp, #24]
    5a4c:	ldr	x0, [sp, #24]
    5a50:	ldr	x0, [x0]
    5a54:	cmp	x0, #0x0
    5a58:	b.eq	5a80 <plugin_init@@Base+0xb34>  // b.none
    5a5c:	ldr	x0, [sp, #24]
    5a60:	ldr	x0, [x0]
    5a64:	ldr	x0, [x0, #8]
    5a68:	cmp	x0, #0x0
    5a6c:	b.eq	5a80 <plugin_init@@Base+0xb34>  // b.none
    5a70:	ldr	x0, [sp, #24]
    5a74:	ldr	x0, [x0]
    5a78:	ldr	x0, [x0, #8]
    5a7c:	bl	2f10 <_ZdaPv@plt>
    5a80:	ldr	x0, [sp, #24]
    5a84:	ldr	x0, [x0]
    5a88:	cmp	x0, #0x0
    5a8c:	b.eq	5a98 <plugin_init@@Base+0xb4c>  // b.none
    5a90:	mov	x1, #0x10                  	// #16
    5a94:	bl	2e80 <_ZdlPvm@plt>
    5a98:	nop
    5a9c:	ldp	x29, x30, [sp], #32
    5aa0:	ret
    5aa4:	sub	sp, sp, #0x10
    5aa8:	str	x0, [sp, #8]
    5aac:	ldr	x0, [sp, #8]
    5ab0:	ldr	x0, [x0]
    5ab4:	add	sp, sp, #0x10
    5ab8:	ret
    5abc:	stp	x29, x30, [sp, #-32]!
    5ac0:	mov	x29, sp
    5ac4:	str	x0, [sp, #24]
    5ac8:	str	x1, [sp, #16]
    5acc:	ldr	x0, [sp, #24]
    5ad0:	mov	x1, x0
    5ad4:	ldr	x0, [sp, #16]
    5ad8:	bl	bc14 <plugin_init@@Base+0x6cc8>
    5adc:	ldp	x29, x30, [sp], #32
    5ae0:	ret
    5ae4:	sub	sp, sp, #0x10
    5ae8:	str	x0, [sp, #8]
    5aec:	ldr	x0, [sp, #8]
    5af0:	ldr	x0, [x0]
    5af4:	ldr	x0, [x0, #32]
    5af8:	ldr	w0, [x0, #36]
    5afc:	add	sp, sp, #0x10
    5b00:	ret
    5b04:	sub	sp, sp, #0x10
    5b08:	str	x0, [sp, #8]
    5b0c:	str	x1, [sp]
    5b10:	ldr	x0, [sp, #8]
    5b14:	ldr	x1, [x0]
    5b18:	ldr	x0, [sp]
    5b1c:	ldr	x0, [x0]
    5b20:	cmp	x1, x0
    5b24:	cset	w0, eq  // eq = none
    5b28:	and	w0, w0, #0xff
    5b2c:	add	sp, sp, #0x10
    5b30:	ret
    5b34:	stp	x29, x30, [sp, #-32]!
    5b38:	mov	x29, sp
    5b3c:	str	x0, [sp, #24]
    5b40:	ldr	x0, [sp, #24]
    5b44:	bl	2e60 <htab_hash_string@plt>
    5b48:	ldp	x29, x30, [sp], #32
    5b4c:	ret
    5b50:	stp	x29, x30, [sp, #-32]!
    5b54:	mov	x29, sp
    5b58:	str	x0, [sp, #24]
    5b5c:	str	x1, [sp, #16]
    5b60:	ldr	x1, [sp, #16]
    5b64:	ldr	x0, [sp, #24]
    5b68:	bl	2ff0 <strcmp@plt>
    5b6c:	cmp	w0, #0x0
    5b70:	cset	w0, eq  // eq = none
    5b74:	and	w0, w0, #0xff
    5b78:	ldp	x29, x30, [sp], #32
    5b7c:	ret
    5b80:	stp	x29, x30, [sp, #-48]!
    5b84:	mov	x29, sp
    5b88:	str	x0, [sp, #24]
    5b8c:	str	x1, [sp, #16]
    5b90:	ldr	x0, [sp, #24]
    5b94:	add	x0, x0, #0x48
    5b98:	add	x1, sp, #0x10
    5b9c:	mov	w2, #0x1                   	// #1
    5ba0:	bl	5d84 <plugin_init@@Base+0xe38>
    5ba4:	str	x0, [sp, #40]
    5ba8:	ldr	x1, [sp, #16]
    5bac:	ldr	x0, [sp, #40]
    5bb0:	str	x1, [x0]
    5bb4:	ldr	x0, [sp, #16]
    5bb8:	ldp	x29, x30, [sp], #48
    5bbc:	ret
    5bc0:	stp	x29, x30, [sp, #-64]!
    5bc4:	mov	x29, sp
    5bc8:	str	x0, [sp, #40]
    5bcc:	str	x1, [sp, #32]
    5bd0:	str	w2, [sp, #28]
    5bd4:	ldr	x0, [sp, #32]
    5bd8:	cmp	x0, #0x0
    5bdc:	b.ne	5be8 <plugin_init@@Base+0xc9c>  // b.any
    5be0:	mov	w0, #0x0                   	// #0
    5be4:	b	5c58 <plugin_init@@Base+0xd0c>
    5be8:	ldr	x1, [sp, #32]
    5bec:	ldr	x0, [sp, #40]
    5bf0:	bl	5c60 <plugin_init@@Base+0xd14>
    5bf4:	str	x0, [sp, #32]
    5bf8:	adrp	x0, 21000 <xexit@@Base+0x13570>
    5bfc:	ldr	x0, [x0, #4024]
    5c00:	ldr	x0, [x0]
    5c04:	ldr	w4, [sp, #28]
    5c08:	ldr	x3, [sp, #32]
    5c0c:	mov	w2, #0x0                   	// #0
    5c10:	mov	w1, #0x0                   	// #0
    5c14:	bl	2f50 <_Z11linemap_addP9line_maps9lc_reasonjPKcj@plt>
    5c18:	adrp	x0, 21000 <xexit@@Base+0x13570>
    5c1c:	ldr	x0, [x0, #4024]
    5c20:	ldr	x0, [x0]
    5c24:	mov	w2, #0x0                   	// #0
    5c28:	ldr	w1, [sp, #28]
    5c2c:	bl	3080 <_Z18linemap_line_startP9line_mapsjj@plt>
    5c30:	str	w0, [sp, #60]
    5c34:	adrp	x0, 21000 <xexit@@Base+0x13570>
    5c38:	ldr	x0, [x0, #4024]
    5c3c:	ldr	x0, [x0]
    5c40:	mov	w4, #0x0                   	// #0
    5c44:	mov	x3, #0x0                   	// #0
    5c48:	mov	w2, #0x0                   	// #0
    5c4c:	mov	w1, #0x1                   	// #1
    5c50:	bl	2f50 <_Z11linemap_addP9line_maps9lc_reasonjPKcj@plt>
    5c54:	ldr	w0, [sp, #60]
    5c58:	ldp	x29, x30, [sp], #64
    5c5c:	ret
    5c60:	stp	x29, x30, [sp, #-48]!
    5c64:	mov	x29, sp
    5c68:	str	x0, [sp, #24]
    5c6c:	str	x1, [sp, #16]
    5c70:	ldr	x0, [sp, #24]
    5c74:	add	x0, x0, #0x78
    5c78:	add	x1, sp, #0x10
    5c7c:	mov	w2, #0x1                   	// #1
    5c80:	bl	5dbc <plugin_init@@Base+0xe70>
    5c84:	str	x0, [sp, #40]
    5c88:	ldr	x0, [sp, #40]
    5c8c:	ldr	x0, [x0]
    5c90:	cmp	x0, #0x0
    5c94:	b.ne	5cac <plugin_init@@Base+0xd60>  // b.any
    5c98:	ldr	x0, [sp, #16]
    5c9c:	bl	2cd0 <xstrdup@plt>
    5ca0:	mov	x1, x0
    5ca4:	ldr	x0, [sp, #40]
    5ca8:	str	x1, [x0]
    5cac:	ldr	x0, [sp, #40]
    5cb0:	ldr	x0, [x0]
    5cb4:	ldp	x29, x30, [sp], #48
    5cb8:	ret
    5cbc:	stp	x29, x30, [sp, #-48]!
    5cc0:	mov	x29, sp
    5cc4:	str	x0, [sp, #24]
    5cc8:	str	x1, [sp, #16]
    5ccc:	ldr	x0, [sp, #16]
    5cd0:	ldr	w0, [x0]
    5cd4:	sxtw	x1, w0
    5cd8:	ldr	x0, [sp, #24]
    5cdc:	str	x1, [x0]
    5ce0:	mov	w0, #0x1                   	// #1
    5ce4:	str	w0, [sp, #44]
    5ce8:	ldr	w0, [sp, #44]
    5cec:	cmp	w0, #0x1
    5cf0:	b.hi	5d1c <plugin_init@@Base+0xdd0>  // b.pmore
    5cf4:	ldr	x0, [sp, #24]
    5cf8:	bl	8938 <plugin_init@@Base+0x39ec>
    5cfc:	sxtw	x2, w0
    5d00:	ldr	x0, [sp, #24]
    5d04:	ldr	w1, [sp, #44]
    5d08:	str	x2, [x0, x1, lsl #3]
    5d0c:	ldr	w0, [sp, #44]
    5d10:	add	w0, w0, #0x1
    5d14:	str	w0, [sp, #44]
    5d18:	b	5ce8 <plugin_init@@Base+0xd9c>
    5d1c:	nop
    5d20:	ldp	x29, x30, [sp], #48
    5d24:	ret
    5d28:	stp	x29, x30, [sp, #-32]!
    5d2c:	mov	x29, sp
    5d30:	str	x0, [sp, #24]
    5d34:	str	x1, [sp, #16]
    5d38:	ldr	x2, [sp, #24]
    5d3c:	ldr	x0, [sp, #16]
    5d40:	ldr	x0, [x0]
    5d44:	mov	x1, x0
    5d48:	mov	x0, x2
    5d4c:	bl	894c <plugin_init@@Base+0x3a00>
    5d50:	nop
    5d54:	ldp	x29, x30, [sp], #32
    5d58:	ret
    5d5c:	stp	x29, x30, [sp, #-32]!
    5d60:	mov	x29, sp
    5d64:	str	x0, [sp, #24]
    5d68:	str	x1, [sp, #16]
    5d6c:	ldr	x1, [sp, #16]
    5d70:	ldr	x0, [sp, #24]
    5d74:	bl	8970 <plugin_init@@Base+0x3a24>
    5d78:	and	w0, w0, #0xff
    5d7c:	ldp	x29, x30, [sp], #32
    5d80:	ret
    5d84:	stp	x29, x30, [sp, #-48]!
    5d88:	mov	x29, sp
    5d8c:	str	x0, [sp, #40]
    5d90:	str	x1, [sp, #32]
    5d94:	str	w2, [sp, #28]
    5d98:	ldr	x0, [sp, #32]
    5d9c:	bl	8e08 <plugin_init@@Base+0x3ebc>
    5da0:	ldr	w3, [sp, #28]
    5da4:	mov	w2, w0
    5da8:	ldr	x1, [sp, #32]
    5dac:	ldr	x0, [sp, #40]
    5db0:	bl	8b74 <plugin_init@@Base+0x3c28>
    5db4:	ldp	x29, x30, [sp], #48
    5db8:	ret
    5dbc:	stp	x29, x30, [sp, #-48]!
    5dc0:	mov	x29, sp
    5dc4:	str	x0, [sp, #40]
    5dc8:	str	x1, [sp, #32]
    5dcc:	str	w2, [sp, #28]
    5dd0:	ldr	x0, [sp, #32]
    5dd4:	ldr	x0, [x0]
    5dd8:	bl	5b34 <plugin_init@@Base+0xbe8>
    5ddc:	ldr	w3, [sp, #28]
    5de0:	mov	w2, w0
    5de4:	ldr	x1, [sp, #32]
    5de8:	ldr	x0, [sp, #40]
    5dec:	bl	8e24 <plugin_init@@Base+0x3ed8>
    5df0:	ldp	x29, x30, [sp], #48
    5df4:	ret
    5df8:	stp	x29, x30, [sp, #-64]!
    5dfc:	mov	x29, sp
    5e00:	str	x0, [sp, #40]
    5e04:	str	x1, [sp, #32]
    5e08:	strb	w2, [sp, #31]
    5e0c:	strb	w3, [sp, #30]
    5e10:	str	w4, [sp, #24]
    5e14:	ldr	x0, [sp, #40]
    5e18:	str	xzr, [x0, #16]
    5e1c:	ldr	x0, [sp, #40]
    5e20:	str	xzr, [x0, #24]
    5e24:	ldr	x0, [sp, #40]
    5e28:	str	wzr, [x0, #32]
    5e2c:	ldr	x0, [sp, #40]
    5e30:	str	wzr, [x0, #36]
    5e34:	ldr	x0, [sp, #40]
    5e38:	ldrb	w1, [sp, #31]
    5e3c:	strb	w1, [x0, #44]
    5e40:	ldr	x0, [sp, #32]
    5e44:	bl	2bf0 <_Z29hash_table_higher_prime_indexm@plt>
    5e48:	str	w0, [sp, #60]
    5e4c:	adrp	x0, 21000 <xexit@@Base+0x13570>
    5e50:	ldr	x1, [x0, #4064]
    5e54:	ldr	w0, [sp, #60]
    5e58:	lsl	x0, x0, #4
    5e5c:	add	x0, x1, x0
    5e60:	ldr	w0, [x0]
    5e64:	mov	w0, w0
    5e68:	str	x0, [sp, #32]
    5e6c:	ldr	x1, [sp, #32]
    5e70:	ldr	x0, [sp, #40]
    5e74:	bl	90d8 <plugin_init@@Base+0x418c>
    5e78:	mov	x1, x0
    5e7c:	ldr	x0, [sp, #40]
    5e80:	str	x1, [x0]
    5e84:	ldr	x0, [sp, #40]
    5e88:	ldr	x1, [sp, #32]
    5e8c:	str	x1, [x0, #8]
    5e90:	ldr	x0, [sp, #40]
    5e94:	ldr	w1, [sp, #60]
    5e98:	str	w1, [x0, #40]
    5e9c:	nop
    5ea0:	ldp	x29, x30, [sp], #64
    5ea4:	ret
    5ea8:	stp	x29, x30, [sp, #-48]!
    5eac:	mov	x29, sp
    5eb0:	str	x0, [sp, #24]
    5eb4:	ldr	x0, [sp, #24]
    5eb8:	ldr	x0, [x0, #8]
    5ebc:	sub	x0, x0, #0x1
    5ec0:	str	x0, [sp, #40]
    5ec4:	ldr	x0, [sp, #24]
    5ec8:	ldr	x0, [x0, #8]
    5ecc:	ldr	x1, [sp, #40]
    5ed0:	cmp	x1, x0
    5ed4:	b.cs	5f70 <plugin_init@@Base+0x1024>  // b.hs, b.nlast
    5ed8:	ldr	x0, [sp, #24]
    5edc:	ldr	x1, [x0]
    5ee0:	ldr	x0, [sp, #40]
    5ee4:	lsl	x0, x0, #3
    5ee8:	add	x0, x1, x0
    5eec:	bl	9184 <plugin_init@@Base+0x4238>
    5ef0:	and	w0, w0, #0xff
    5ef4:	eor	w0, w0, #0x1
    5ef8:	and	w0, w0, #0xff
    5efc:	cmp	w0, #0x0
    5f00:	b.eq	5f38 <plugin_init@@Base+0xfec>  // b.none
    5f04:	ldr	x0, [sp, #24]
    5f08:	ldr	x1, [x0]
    5f0c:	ldr	x0, [sp, #40]
    5f10:	lsl	x0, x0, #3
    5f14:	add	x0, x1, x0
    5f18:	bl	91a8 <plugin_init@@Base+0x425c>
    5f1c:	and	w0, w0, #0xff
    5f20:	eor	w0, w0, #0x1
    5f24:	and	w0, w0, #0xff
    5f28:	cmp	w0, #0x0
    5f2c:	b.eq	5f38 <plugin_init@@Base+0xfec>  // b.none
    5f30:	mov	w0, #0x1                   	// #1
    5f34:	b	5f3c <plugin_init@@Base+0xff0>
    5f38:	mov	w0, #0x0                   	// #0
    5f3c:	cmp	w0, #0x0
    5f40:	b.eq	5f60 <plugin_init@@Base+0x1014>  // b.none
    5f44:	ldr	x0, [sp, #24]
    5f48:	ldr	x1, [x0]
    5f4c:	ldr	x0, [sp, #40]
    5f50:	lsl	x0, x0, #3
    5f54:	add	x0, x1, x0
    5f58:	ldr	x0, [x0]
    5f5c:	bl	91cc <plugin_init@@Base+0x4280>
    5f60:	ldr	x0, [sp, #40]
    5f64:	sub	x0, x0, #0x1
    5f68:	str	x0, [sp, #40]
    5f6c:	b	5ec4 <plugin_init@@Base+0xf78>
    5f70:	ldr	x0, [sp, #24]
    5f74:	ldrb	w0, [x0, #44]
    5f78:	eor	w0, w0, #0x1
    5f7c:	and	w0, w0, #0xff
    5f80:	cmp	w0, #0x0
    5f84:	b.eq	5f98 <plugin_init@@Base+0x104c>  // b.none
    5f88:	ldr	x0, [sp, #24]
    5f8c:	ldr	x0, [x0]
    5f90:	bl	91ec <plugin_init@@Base+0x42a0>
    5f94:	b	5fa4 <plugin_init@@Base+0x1058>
    5f98:	ldr	x0, [sp, #24]
    5f9c:	ldr	x0, [x0]
    5fa0:	bl	2ce0 <_Z8ggc_freePv@plt>
    5fa4:	nop
    5fa8:	ldp	x29, x30, [sp], #48
    5fac:	ret
    5fb0:	stp	x29, x30, [sp, #-64]!
    5fb4:	mov	x29, sp
    5fb8:	str	x0, [sp, #40]
    5fbc:	str	x1, [sp, #32]
    5fc0:	strb	w2, [sp, #31]
    5fc4:	strb	w3, [sp, #30]
    5fc8:	str	w4, [sp, #24]
    5fcc:	ldr	x0, [sp, #40]
    5fd0:	str	xzr, [x0, #16]
    5fd4:	ldr	x0, [sp, #40]
    5fd8:	str	xzr, [x0, #24]
    5fdc:	ldr	x0, [sp, #40]
    5fe0:	str	wzr, [x0, #32]
    5fe4:	ldr	x0, [sp, #40]
    5fe8:	str	wzr, [x0, #36]
    5fec:	ldr	x0, [sp, #40]
    5ff0:	ldrb	w1, [sp, #31]
    5ff4:	strb	w1, [x0, #44]
    5ff8:	ldr	x0, [sp, #32]
    5ffc:	bl	2bf0 <_Z29hash_table_higher_prime_indexm@plt>
    6000:	str	w0, [sp, #60]
    6004:	adrp	x0, 21000 <xexit@@Base+0x13570>
    6008:	ldr	x1, [x0, #4064]
    600c:	ldr	w0, [sp, #60]
    6010:	lsl	x0, x0, #4
    6014:	add	x0, x1, x0
    6018:	ldr	w0, [x0]
    601c:	mov	w0, w0
    6020:	str	x0, [sp, #32]
    6024:	ldr	x1, [sp, #32]
    6028:	ldr	x0, [sp, #40]
    602c:	bl	920c <plugin_init@@Base+0x42c0>
    6030:	mov	x1, x0
    6034:	ldr	x0, [sp, #40]
    6038:	str	x1, [x0]
    603c:	ldr	x0, [sp, #40]
    6040:	ldr	x1, [sp, #32]
    6044:	str	x1, [x0, #8]
    6048:	ldr	x0, [sp, #40]
    604c:	ldr	w1, [sp, #60]
    6050:	str	w1, [x0, #40]
    6054:	nop
    6058:	ldp	x29, x30, [sp], #64
    605c:	ret
    6060:	stp	x29, x30, [sp, #-48]!
    6064:	mov	x29, sp
    6068:	str	x0, [sp, #24]
    606c:	ldr	x0, [sp, #24]
    6070:	ldr	x0, [x0, #8]
    6074:	sub	x0, x0, #0x1
    6078:	str	x0, [sp, #40]
    607c:	ldr	x0, [sp, #24]
    6080:	ldr	x0, [x0, #8]
    6084:	ldr	x1, [sp, #40]
    6088:	cmp	x1, x0
    608c:	b.cs	6124 <plugin_init@@Base+0x11d8>  // b.hs, b.nlast
    6090:	ldr	x0, [sp, #24]
    6094:	ldr	x1, [x0]
    6098:	ldr	x0, [sp, #40]
    609c:	lsl	x0, x0, #3
    60a0:	add	x0, x1, x0
    60a4:	bl	92b8 <plugin_init@@Base+0x436c>
    60a8:	and	w0, w0, #0xff
    60ac:	eor	w0, w0, #0x1
    60b0:	and	w0, w0, #0xff
    60b4:	cmp	w0, #0x0
    60b8:	b.eq	60f0 <plugin_init@@Base+0x11a4>  // b.none
    60bc:	ldr	x0, [sp, #24]
    60c0:	ldr	x1, [x0]
    60c4:	ldr	x0, [sp, #40]
    60c8:	lsl	x0, x0, #3
    60cc:	add	x0, x1, x0
    60d0:	bl	92dc <plugin_init@@Base+0x4390>
    60d4:	and	w0, w0, #0xff
    60d8:	eor	w0, w0, #0x1
    60dc:	and	w0, w0, #0xff
    60e0:	cmp	w0, #0x0
    60e4:	b.eq	60f0 <plugin_init@@Base+0x11a4>  // b.none
    60e8:	mov	w0, #0x1                   	// #1
    60ec:	b	60f4 <plugin_init@@Base+0x11a8>
    60f0:	mov	w0, #0x0                   	// #0
    60f4:	cmp	w0, #0x0
    60f8:	b.eq	6114 <plugin_init@@Base+0x11c8>  // b.none
    60fc:	ldr	x0, [sp, #24]
    6100:	ldr	x1, [x0]
    6104:	ldr	x0, [sp, #40]
    6108:	lsl	x0, x0, #3
    610c:	add	x0, x1, x0
    6110:	bl	9300 <plugin_init@@Base+0x43b4>
    6114:	ldr	x0, [sp, #40]
    6118:	sub	x0, x0, #0x1
    611c:	str	x0, [sp, #40]
    6120:	b	607c <plugin_init@@Base+0x1130>
    6124:	ldr	x0, [sp, #24]
    6128:	ldrb	w0, [x0, #44]
    612c:	eor	w0, w0, #0x1
    6130:	and	w0, w0, #0xff
    6134:	cmp	w0, #0x0
    6138:	b.eq	614c <plugin_init@@Base+0x1200>  // b.none
    613c:	ldr	x0, [sp, #24]
    6140:	ldr	x0, [x0]
    6144:	bl	9314 <plugin_init@@Base+0x43c8>
    6148:	b	6158 <plugin_init@@Base+0x120c>
    614c:	ldr	x0, [sp, #24]
    6150:	ldr	x0, [x0]
    6154:	bl	2ce0 <_Z8ggc_freePv@plt>
    6158:	nop
    615c:	ldp	x29, x30, [sp], #48
    6160:	ret
    6164:	stp	x29, x30, [sp, #-64]!
    6168:	mov	x29, sp
    616c:	str	x0, [sp, #40]
    6170:	str	x1, [sp, #32]
    6174:	strb	w2, [sp, #31]
    6178:	strb	w3, [sp, #30]
    617c:	str	w4, [sp, #24]
    6180:	ldr	x0, [sp, #40]
    6184:	str	xzr, [x0, #16]
    6188:	ldr	x0, [sp, #40]
    618c:	str	xzr, [x0, #24]
    6190:	ldr	x0, [sp, #40]
    6194:	str	wzr, [x0, #32]
    6198:	ldr	x0, [sp, #40]
    619c:	str	wzr, [x0, #36]
    61a0:	ldr	x0, [sp, #40]
    61a4:	ldrb	w1, [sp, #31]
    61a8:	strb	w1, [x0, #44]
    61ac:	ldr	x0, [sp, #32]
    61b0:	bl	2bf0 <_Z29hash_table_higher_prime_indexm@plt>
    61b4:	str	w0, [sp, #60]
    61b8:	adrp	x0, 21000 <xexit@@Base+0x13570>
    61bc:	ldr	x1, [x0, #4064]
    61c0:	ldr	w0, [sp, #60]
    61c4:	lsl	x0, x0, #4
    61c8:	add	x0, x1, x0
    61cc:	ldr	w0, [x0]
    61d0:	mov	w0, w0
    61d4:	str	x0, [sp, #32]
    61d8:	ldr	x1, [sp, #32]
    61dc:	ldr	x0, [sp, #40]
    61e0:	bl	9334 <plugin_init@@Base+0x43e8>
    61e4:	mov	x1, x0
    61e8:	ldr	x0, [sp, #40]
    61ec:	str	x1, [x0]
    61f0:	ldr	x0, [sp, #40]
    61f4:	ldr	x1, [sp, #32]
    61f8:	str	x1, [x0, #8]
    61fc:	ldr	x0, [sp, #40]
    6200:	ldr	w1, [sp, #60]
    6204:	str	w1, [x0, #40]
    6208:	nop
    620c:	ldp	x29, x30, [sp], #64
    6210:	ret
    6214:	stp	x29, x30, [sp, #-48]!
    6218:	mov	x29, sp
    621c:	str	x0, [sp, #24]
    6220:	ldr	x0, [sp, #24]
    6224:	ldr	x0, [x0, #8]
    6228:	sub	x0, x0, #0x1
    622c:	str	x0, [sp, #40]
    6230:	ldr	x0, [sp, #24]
    6234:	ldr	x0, [x0, #8]
    6238:	ldr	x1, [sp, #40]
    623c:	cmp	x1, x0
    6240:	b.cs	62d8 <plugin_init@@Base+0x138c>  // b.hs, b.nlast
    6244:	ldr	x0, [sp, #24]
    6248:	ldr	x1, [x0]
    624c:	ldr	x0, [sp, #40]
    6250:	lsl	x0, x0, #3
    6254:	add	x0, x1, x0
    6258:	bl	93e0 <plugin_init@@Base+0x4494>
    625c:	and	w0, w0, #0xff
    6260:	eor	w0, w0, #0x1
    6264:	and	w0, w0, #0xff
    6268:	cmp	w0, #0x0
    626c:	b.eq	62a4 <plugin_init@@Base+0x1358>  // b.none
    6270:	ldr	x0, [sp, #24]
    6274:	ldr	x1, [x0]
    6278:	ldr	x0, [sp, #40]
    627c:	lsl	x0, x0, #3
    6280:	add	x0, x1, x0
    6284:	bl	9404 <plugin_init@@Base+0x44b8>
    6288:	and	w0, w0, #0xff
    628c:	eor	w0, w0, #0x1
    6290:	and	w0, w0, #0xff
    6294:	cmp	w0, #0x0
    6298:	b.eq	62a4 <plugin_init@@Base+0x1358>  // b.none
    629c:	mov	w0, #0x1                   	// #1
    62a0:	b	62a8 <plugin_init@@Base+0x135c>
    62a4:	mov	w0, #0x0                   	// #0
    62a8:	cmp	w0, #0x0
    62ac:	b.eq	62c8 <plugin_init@@Base+0x137c>  // b.none
    62b0:	ldr	x0, [sp, #24]
    62b4:	ldr	x1, [x0]
    62b8:	ldr	x0, [sp, #40]
    62bc:	lsl	x0, x0, #3
    62c0:	add	x0, x1, x0
    62c4:	bl	9428 <plugin_init@@Base+0x44dc>
    62c8:	ldr	x0, [sp, #40]
    62cc:	sub	x0, x0, #0x1
    62d0:	str	x0, [sp, #40]
    62d4:	b	6230 <plugin_init@@Base+0x12e4>
    62d8:	ldr	x0, [sp, #24]
    62dc:	ldrb	w0, [x0, #44]
    62e0:	eor	w0, w0, #0x1
    62e4:	and	w0, w0, #0xff
    62e8:	cmp	w0, #0x0
    62ec:	b.eq	6300 <plugin_init@@Base+0x13b4>  // b.none
    62f0:	ldr	x0, [sp, #24]
    62f4:	ldr	x0, [x0]
    62f8:	bl	943c <plugin_init@@Base+0x44f0>
    62fc:	b	630c <plugin_init@@Base+0x13c0>
    6300:	ldr	x0, [sp, #24]
    6304:	ldr	x0, [x0]
    6308:	bl	2ce0 <_Z8ggc_freePv@plt>
    630c:	nop
    6310:	ldp	x29, x30, [sp], #48
    6314:	ret
    6318:	stp	x29, x30, [sp, #-64]!
    631c:	mov	x29, sp
    6320:	str	x0, [sp, #24]
    6324:	ldr	x0, [sp, #24]
    6328:	ldr	x3, [x0]
    632c:	ldr	x0, [sp, #24]
    6330:	ldr	x1, [x0]
    6334:	ldr	x0, [sp, #24]
    6338:	ldr	x0, [x0, #8]
    633c:	lsl	x0, x0, #3
    6340:	add	x1, x1, x0
    6344:	add	x0, sp, #0x20
    6348:	mov	x2, x1
    634c:	mov	x1, x3
    6350:	bl	9480 <plugin_init@@Base+0x4534>
    6354:	add	x0, sp, #0x20
    6358:	bl	94b4 <plugin_init@@Base+0x4568>
    635c:	ldp	x0, x1, [sp, #32]
    6360:	ldp	x29, x30, [sp], #64
    6364:	ret
    6368:	stp	x29, x30, [sp, #-48]!
    636c:	mov	x29, sp
    6370:	str	x0, [sp, #24]
    6374:	add	x0, sp, #0x20
    6378:	bl	945c <plugin_init@@Base+0x4510>
    637c:	ldp	x0, x1, [sp, #32]
    6380:	ldp	x29, x30, [sp], #48
    6384:	ret
    6388:	sub	sp, sp, #0x10
    638c:	str	x0, [sp, #8]
    6390:	str	x1, [sp]
    6394:	ldr	x0, [sp, #8]
    6398:	ldr	x1, [x0]
    639c:	ldr	x0, [sp]
    63a0:	ldr	x0, [x0]
    63a4:	cmp	x1, x0
    63a8:	b.ne	63c4 <plugin_init@@Base+0x1478>  // b.any
    63ac:	ldr	x0, [sp, #8]
    63b0:	ldr	x1, [x0, #8]
    63b4:	ldr	x0, [sp]
    63b8:	ldr	x0, [x0, #8]
    63bc:	cmp	x1, x0
    63c0:	b.eq	63cc <plugin_init@@Base+0x1480>  // b.none
    63c4:	mov	w0, #0x1                   	// #1
    63c8:	b	63d0 <plugin_init@@Base+0x1484>
    63cc:	mov	w0, #0x0                   	// #0
    63d0:	add	sp, sp, #0x10
    63d4:	ret
    63d8:	stp	x29, x30, [sp, #-32]!
    63dc:	mov	x29, sp
    63e0:	str	x0, [sp, #24]
    63e4:	ldr	x0, [sp, #24]
    63e8:	ldr	x0, [x0]
    63ec:	add	x1, x0, #0x8
    63f0:	ldr	x0, [sp, #24]
    63f4:	str	x1, [x0]
    63f8:	ldr	x0, [sp, #24]
    63fc:	bl	94b4 <plugin_init@@Base+0x4568>
    6400:	ldr	x0, [sp, #24]
    6404:	ldp	x29, x30, [sp], #32
    6408:	ret
    640c:	sub	sp, sp, #0x10
    6410:	str	x0, [sp, #8]
    6414:	ldr	x0, [sp, #8]
    6418:	ldr	x0, [x0]
    641c:	add	sp, sp, #0x10
    6420:	ret
    6424:	stp	x29, x30, [sp, #-64]!
    6428:	mov	x29, sp
    642c:	str	x0, [sp, #24]
    6430:	ldr	x0, [sp, #24]
    6434:	ldr	x3, [x0]
    6438:	ldr	x0, [sp, #24]
    643c:	ldr	x1, [x0]
    6440:	ldr	x0, [sp, #24]
    6444:	ldr	x0, [x0, #8]
    6448:	lsl	x0, x0, #3
    644c:	add	x1, x1, x0
    6450:	add	x0, sp, #0x20
    6454:	mov	x2, x1
    6458:	mov	x1, x3
    645c:	bl	958c <plugin_init@@Base+0x4640>
    6460:	add	x0, sp, #0x20
    6464:	bl	95c0 <plugin_init@@Base+0x4674>
    6468:	ldp	x0, x1, [sp, #32]
    646c:	ldp	x29, x30, [sp], #64
    6470:	ret
    6474:	stp	x29, x30, [sp, #-48]!
    6478:	mov	x29, sp
    647c:	str	x0, [sp, #24]
    6480:	add	x0, sp, #0x20
    6484:	bl	9568 <plugin_init@@Base+0x461c>
    6488:	ldp	x0, x1, [sp, #32]
    648c:	ldp	x29, x30, [sp], #48
    6490:	ret
    6494:	sub	sp, sp, #0x10
    6498:	str	x0, [sp, #8]
    649c:	str	x1, [sp]
    64a0:	ldr	x0, [sp, #8]
    64a4:	ldr	x1, [x0]
    64a8:	ldr	x0, [sp]
    64ac:	ldr	x0, [x0]
    64b0:	cmp	x1, x0
    64b4:	b.ne	64d0 <plugin_init@@Base+0x1584>  // b.any
    64b8:	ldr	x0, [sp, #8]
    64bc:	ldr	x1, [x0, #8]
    64c0:	ldr	x0, [sp]
    64c4:	ldr	x0, [x0, #8]
    64c8:	cmp	x1, x0
    64cc:	b.eq	64d8 <plugin_init@@Base+0x158c>  // b.none
    64d0:	mov	w0, #0x1                   	// #1
    64d4:	b	64dc <plugin_init@@Base+0x1590>
    64d8:	mov	w0, #0x0                   	// #0
    64dc:	add	sp, sp, #0x10
    64e0:	ret
    64e4:	stp	x29, x30, [sp, #-32]!
    64e8:	mov	x29, sp
    64ec:	str	x0, [sp, #24]
    64f0:	ldr	x0, [sp, #24]
    64f4:	ldr	x0, [x0]
    64f8:	add	x1, x0, #0x8
    64fc:	ldr	x0, [sp, #24]
    6500:	str	x1, [x0]
    6504:	ldr	x0, [sp, #24]
    6508:	bl	95c0 <plugin_init@@Base+0x4674>
    650c:	ldr	x0, [sp, #24]
    6510:	ldp	x29, x30, [sp], #32
    6514:	ret
    6518:	sub	sp, sp, #0x10
    651c:	str	x0, [sp, #8]
    6520:	ldr	x0, [sp, #8]
    6524:	ldr	x0, [x0]
    6528:	add	sp, sp, #0x10
    652c:	ret
    6530:	stp	x29, x30, [sp, #-64]!
    6534:	mov	x29, sp
    6538:	str	x0, [sp, #56]
    653c:	str	x1, [sp, #48]
    6540:	str	x2, [sp, #40]
    6544:	str	w3, [sp, #36]
    6548:	str	x4, [sp, #24]
    654c:	mov	w1, #0x51                  	// #81
    6550:	ldr	x0, [sp, #56]
    6554:	bl	b168 <plugin_init@@Base+0x621c>
    6558:	cmp	w0, #0x0
    655c:	cset	w0, eq  // eq = none
    6560:	and	w0, w0, #0xff
    6564:	cmp	w0, #0x0
    6568:	b.eq	6574 <plugin_init@@Base+0x1628>  // b.none
    656c:	mov	w0, #0x0                   	// #0
    6570:	b	6664 <plugin_init@@Base+0x1718>
    6574:	ldr	x1, [sp, #48]
    6578:	ldr	x0, [sp, #56]
    657c:	bl	b834 <plugin_init@@Base+0x68e8>
    6580:	cmp	w0, #0x0
    6584:	cset	w0, eq  // eq = none
    6588:	and	w0, w0, #0xff
    658c:	cmp	w0, #0x0
    6590:	b.eq	659c <plugin_init@@Base+0x1650>  // b.none
    6594:	mov	w0, #0x0                   	// #0
    6598:	b	6664 <plugin_init@@Base+0x1718>
    659c:	mov	w1, #0x2                   	// #2
    65a0:	ldr	x0, [sp, #56]
    65a4:	bl	9674 <plugin_init@@Base+0x4728>
    65a8:	cmp	w0, #0x0
    65ac:	cset	w0, eq  // eq = none
    65b0:	and	w0, w0, #0xff
    65b4:	cmp	w0, #0x0
    65b8:	b.eq	65c4 <plugin_init@@Base+0x1678>  // b.none
    65bc:	mov	w0, #0x0                   	// #0
    65c0:	b	6664 <plugin_init@@Base+0x1718>
    65c4:	ldr	w1, [sp, #36]
    65c8:	ldr	x0, [sp, #56]
    65cc:	bl	969c <plugin_init@@Base+0x4750>
    65d0:	cmp	w0, #0x0
    65d4:	cset	w0, eq  // eq = none
    65d8:	and	w0, w0, #0xff
    65dc:	cmp	w0, #0x0
    65e0:	b.eq	65ec <plugin_init@@Base+0x16a0>  // b.none
    65e4:	mov	w0, #0x0                   	// #0
    65e8:	b	6664 <plugin_init@@Base+0x1718>
    65ec:	ldr	x1, [sp, #24]
    65f0:	ldr	x0, [sp, #56]
    65f4:	bl	b834 <plugin_init@@Base+0x68e8>
    65f8:	cmp	w0, #0x0
    65fc:	cset	w0, eq  // eq = none
    6600:	and	w0, w0, #0xff
    6604:	cmp	w0, #0x0
    6608:	b.eq	6614 <plugin_init@@Base+0x16c8>  // b.none
    660c:	mov	w0, #0x0                   	// #0
    6610:	b	6664 <plugin_init@@Base+0x1718>
    6614:	ldr	x0, [sp, #56]
    6618:	bl	5940 <plugin_init@@Base+0x9f4>
    661c:	cmp	w0, #0x0
    6620:	cset	w0, eq  // eq = none
    6624:	and	w0, w0, #0xff
    6628:	cmp	w0, #0x0
    662c:	b.eq	6638 <plugin_init@@Base+0x16ec>  // b.none
    6630:	mov	w0, #0x0                   	// #0
    6634:	b	6664 <plugin_init@@Base+0x1718>
    6638:	ldr	x1, [sp, #40]
    663c:	ldr	x0, [sp, #56]
    6640:	bl	96c4 <plugin_init@@Base+0x4778>
    6644:	cmp	w0, #0x0
    6648:	cset	w0, eq  // eq = none
    664c:	and	w0, w0, #0xff
    6650:	cmp	w0, #0x0
    6654:	b.eq	6660 <plugin_init@@Base+0x1714>  // b.none
    6658:	mov	w0, #0x0                   	// #0
    665c:	b	6664 <plugin_init@@Base+0x1718>
    6660:	mov	w0, #0x1                   	// #1
    6664:	ldp	x29, x30, [sp], #64
    6668:	ret
    666c:	stp	x29, x30, [sp, #-32]!
    6670:	mov	x29, sp
    6674:	str	x0, [sp, #24]
    6678:	str	x1, [sp, #16]
    667c:	ldr	x0, [sp, #16]
    6680:	ldr	x0, [x0]
    6684:	bl	5ae4 <plugin_init@@Base+0xb98>
    6688:	mov	w2, w0
    668c:	ldr	x1, [sp, #16]
    6690:	ldr	x0, [sp, #24]
    6694:	bl	971c <plugin_init@@Base+0x47d0>
    6698:	ldp	x29, x30, [sp], #32
    669c:	ret
    66a0:	stp	x29, x30, [sp, #-48]!
    66a4:	mov	x29, sp
    66a8:	str	x0, [sp, #40]
    66ac:	str	x1, [sp, #32]
    66b0:	str	x2, [sp, #24]
    66b4:	str	x3, [sp, #16]
    66b8:	mov	w1, #0x51                  	// #81
    66bc:	ldr	x0, [sp, #40]
    66c0:	bl	b168 <plugin_init@@Base+0x621c>
    66c4:	cmp	w0, #0x0
    66c8:	cset	w0, eq  // eq = none
    66cc:	and	w0, w0, #0xff
    66d0:	cmp	w0, #0x0
    66d4:	b.eq	66e0 <plugin_init@@Base+0x1794>  // b.none
    66d8:	mov	w0, #0x0                   	// #0
    66dc:	b	67a8 <plugin_init@@Base+0x185c>
    66e0:	ldr	x1, [sp, #32]
    66e4:	ldr	x0, [sp, #40]
    66e8:	bl	b834 <plugin_init@@Base+0x68e8>
    66ec:	cmp	w0, #0x0
    66f0:	cset	w0, eq  // eq = none
    66f4:	and	w0, w0, #0xff
    66f8:	cmp	w0, #0x0
    66fc:	b.eq	6708 <plugin_init@@Base+0x17bc>  // b.none
    6700:	mov	w0, #0x0                   	// #0
    6704:	b	67a8 <plugin_init@@Base+0x185c>
    6708:	mov	w1, #0x1                   	// #1
    670c:	ldr	x0, [sp, #40]
    6710:	bl	9674 <plugin_init@@Base+0x4728>
    6714:	cmp	w0, #0x0
    6718:	cset	w0, eq  // eq = none
    671c:	and	w0, w0, #0xff
    6720:	cmp	w0, #0x0
    6724:	b.eq	6730 <plugin_init@@Base+0x17e4>  // b.none
    6728:	mov	w0, #0x0                   	// #0
    672c:	b	67a8 <plugin_init@@Base+0x185c>
    6730:	ldr	x1, [sp, #16]
    6734:	ldr	x0, [sp, #40]
    6738:	bl	b834 <plugin_init@@Base+0x68e8>
    673c:	cmp	w0, #0x0
    6740:	cset	w0, eq  // eq = none
    6744:	and	w0, w0, #0xff
    6748:	cmp	w0, #0x0
    674c:	b.eq	6758 <plugin_init@@Base+0x180c>  // b.none
    6750:	mov	w0, #0x0                   	// #0
    6754:	b	67a8 <plugin_init@@Base+0x185c>
    6758:	ldr	x0, [sp, #40]
    675c:	bl	5940 <plugin_init@@Base+0x9f4>
    6760:	cmp	w0, #0x0
    6764:	cset	w0, eq  // eq = none
    6768:	and	w0, w0, #0xff
    676c:	cmp	w0, #0x0
    6770:	b.eq	677c <plugin_init@@Base+0x1830>  // b.none
    6774:	mov	w0, #0x0                   	// #0
    6778:	b	67a8 <plugin_init@@Base+0x185c>
    677c:	ldr	x1, [sp, #24]
    6780:	ldr	x0, [sp, #40]
    6784:	bl	6930 <plugin_init@@Base+0x19e4>
    6788:	cmp	w0, #0x0
    678c:	cset	w0, eq  // eq = none
    6790:	and	w0, w0, #0xff
    6794:	cmp	w0, #0x0
    6798:	b.eq	67a4 <plugin_init@@Base+0x1858>  // b.none
    679c:	mov	w0, #0x0                   	// #0
    67a0:	b	67a8 <plugin_init@@Base+0x185c>
    67a4:	mov	w0, #0x1                   	// #1
    67a8:	ldp	x29, x30, [sp], #48
    67ac:	ret
    67b0:	stp	x29, x30, [sp, #-48]!
    67b4:	mov	x29, sp
    67b8:	str	x0, [sp, #24]
    67bc:	str	x1, [sp, #16]
    67c0:	ldr	x0, [sp, #16]
    67c4:	ldr	x0, [x0]
    67c8:	mov	x1, x0
    67cc:	ldr	x0, [sp, #24]
    67d0:	str	x1, [x0]
    67d4:	mov	w0, #0x1                   	// #1
    67d8:	str	w0, [sp, #44]
    67dc:	ldr	w0, [sp, #44]
    67e0:	cmp	w0, #0x1
    67e4:	b.hi	6810 <plugin_init@@Base+0x18c4>  // b.pmore
    67e8:	ldr	x0, [sp, #24]
    67ec:	bl	98e4 <plugin_init@@Base+0x4998>
    67f0:	sxtw	x2, w0
    67f4:	ldr	x0, [sp, #24]
    67f8:	ldr	w1, [sp, #44]
    67fc:	str	x2, [x0, x1, lsl #3]
    6800:	ldr	w0, [sp, #44]
    6804:	add	w0, w0, #0x1
    6808:	str	w0, [sp, #44]
    680c:	b	67dc <plugin_init@@Base+0x1890>
    6810:	nop
    6814:	ldp	x29, x30, [sp], #48
    6818:	ret
    681c:	stp	x29, x30, [sp, #-48]!
    6820:	mov	x29, sp
    6824:	str	x0, [sp, #40]
    6828:	str	x1, [sp, #32]
    682c:	str	w2, [sp, #28]
    6830:	ldr	x0, [sp, #32]
    6834:	ldr	x0, [x0]
    6838:	bl	5ae4 <plugin_init@@Base+0xb98>
    683c:	ldr	w3, [sp, #28]
    6840:	mov	w2, w0
    6844:	ldr	x1, [sp, #32]
    6848:	ldr	x0, [sp, #40]
    684c:	bl	98f8 <plugin_init@@Base+0x49ac>
    6850:	ldp	x29, x30, [sp], #48
    6854:	ret
    6858:	stp	x29, x30, [sp, #-48]!
    685c:	mov	x29, sp
    6860:	str	x0, [sp, #24]
    6864:	str	x1, [sp, #16]
    6868:	ldr	x0, [sp, #16]
    686c:	ldr	x0, [x0]
    6870:	mov	x1, x0
    6874:	ldr	x0, [sp, #24]
    6878:	str	x1, [x0]
    687c:	mov	w0, #0x1                   	// #1
    6880:	str	w0, [sp, #44]
    6884:	ldr	w0, [sp, #44]
    6888:	cmp	w0, #0x1
    688c:	b.hi	68b8 <plugin_init@@Base+0x196c>  // b.pmore
    6890:	ldr	x0, [sp, #24]
    6894:	bl	98e4 <plugin_init@@Base+0x4998>
    6898:	sxtw	x2, w0
    689c:	ldr	x0, [sp, #24]
    68a0:	ldr	w1, [sp, #44]
    68a4:	str	x2, [x0, x1, lsl #3]
    68a8:	ldr	w0, [sp, #44]
    68ac:	add	w0, w0, #0x1
    68b0:	str	w0, [sp, #44]
    68b4:	b	6884 <plugin_init@@Base+0x1938>
    68b8:	nop
    68bc:	ldp	x29, x30, [sp], #48
    68c0:	ret
    68c4:	stp	x29, x30, [sp, #-48]!
    68c8:	mov	x29, sp
    68cc:	str	x0, [sp, #24]
    68d0:	str	x1, [sp, #16]
    68d4:	ldr	x0, [sp, #16]
    68d8:	ldr	w0, [x0]
    68dc:	sxtw	x1, w0
    68e0:	ldr	x0, [sp, #24]
    68e4:	str	x1, [x0]
    68e8:	mov	w0, #0x1                   	// #1
    68ec:	str	w0, [sp, #44]
    68f0:	ldr	w0, [sp, #44]
    68f4:	cmp	w0, #0x1
    68f8:	b.hi	6924 <plugin_init@@Base+0x19d8>  // b.pmore
    68fc:	ldr	x0, [sp, #24]
    6900:	bl	98e4 <plugin_init@@Base+0x4998>
    6904:	sxtw	x2, w0
    6908:	ldr	x0, [sp, #24]
    690c:	ldr	w1, [sp, #44]
    6910:	str	x2, [x0, x1, lsl #3]
    6914:	ldr	w0, [sp, #44]
    6918:	add	w0, w0, #0x1
    691c:	str	w0, [sp, #44]
    6920:	b	68f0 <plugin_init@@Base+0x19a4>
    6924:	nop
    6928:	ldp	x29, x30, [sp], #48
    692c:	ret
    6930:	stp	x29, x30, [sp, #-48]!
    6934:	mov	x29, sp
    6938:	str	x0, [sp, #24]
    693c:	str	x1, [sp, #16]
    6940:	add	x0, sp, #0x28
    6944:	mov	x1, x0
    6948:	ldr	x0, [sp, #24]
    694c:	bl	b7e0 <plugin_init@@Base+0x6894>
    6950:	cmp	w0, #0x0
    6954:	cset	w0, eq  // eq = none
    6958:	and	w0, w0, #0xff
    695c:	cmp	w0, #0x0
    6960:	b.eq	696c <plugin_init@@Base+0x1a20>  // b.none
    6964:	mov	w0, #0x0                   	// #0
    6968:	b	697c <plugin_init@@Base+0x1a30>
    696c:	ldr	x1, [sp, #40]
    6970:	ldr	x0, [sp, #16]
    6974:	str	x1, [x0]
    6978:	mov	w0, #0x1                   	// #1
    697c:	ldp	x29, x30, [sp], #48
    6980:	ret
    6984:	stp	x29, x30, [sp, #-144]!
    6988:	mov	x29, sp
    698c:	stp	x19, x20, [sp, #16]
    6990:	stp	x21, x22, [sp, #32]
    6994:	stp	x23, x24, [sp, #48]
    6998:	str	x0, [sp, #72]
    699c:	add	x0, sp, #0x80
    69a0:	bl	5994 <plugin_init@@Base+0xa48>
    69a4:	add	x0, sp, #0x78
    69a8:	bl	9bac <plugin_init@@Base+0x4c60>
    69ac:	add	x0, sp, #0x70
    69b0:	bl	9bd4 <plugin_init@@Base+0x4c88>
    69b4:	add	x0, sp, #0x68
    69b8:	bl	5994 <plugin_init@@Base+0xa48>
    69bc:	add	x0, sp, #0x60
    69c0:	bl	9bd4 <plugin_init@@Base+0x4c88>
    69c4:	add	x0, sp, #0x58
    69c8:	bl	5994 <plugin_init@@Base+0xa48>
    69cc:	add	x0, sp, #0x50
    69d0:	bl	9bfc <plugin_init@@Base+0x4cb0>
    69d4:	mov	x1, #0x7                   	// #7
    69d8:	ldr	x0, [sp, #72]
    69dc:	bl	b724 <plugin_init@@Base+0x67d8>
    69e0:	cmp	w0, #0x0
    69e4:	cset	w0, eq  // eq = none
    69e8:	and	w0, w0, #0xff
    69ec:	cmp	w0, #0x0
    69f0:	b.eq	69fc <plugin_init@@Base+0x1ab0>  // b.none
    69f4:	mov	w19, #0x0                   	// #0
    69f8:	b	6bc8 <plugin_init@@Base+0x1c7c>
    69fc:	add	x0, sp, #0x80
    6a00:	ldr	x1, [sp, #72]
    6a04:	bl	59fc <plugin_init@@Base+0xab0>
    6a08:	cmp	w0, #0x0
    6a0c:	cset	w0, eq  // eq = none
    6a10:	and	w0, w0, #0xff
    6a14:	cmp	w0, #0x0
    6a18:	b.eq	6a24 <plugin_init@@Base+0x1ad8>  // b.none
    6a1c:	mov	w19, #0x0                   	// #0
    6a20:	b	6bc8 <plugin_init@@Base+0x1c7c>
    6a24:	add	x0, sp, #0x78
    6a28:	ldr	x1, [sp, #72]
    6a2c:	bl	9c24 <plugin_init@@Base+0x4cd8>
    6a30:	cmp	w0, #0x0
    6a34:	cset	w0, eq  // eq = none
    6a38:	and	w0, w0, #0xff
    6a3c:	cmp	w0, #0x0
    6a40:	b.eq	6a4c <plugin_init@@Base+0x1b00>  // b.none
    6a44:	mov	w19, #0x0                   	// #0
    6a48:	b	6bc8 <plugin_init@@Base+0x1c7c>
    6a4c:	add	x0, sp, #0x70
    6a50:	ldr	x1, [sp, #72]
    6a54:	bl	9c4c <plugin_init@@Base+0x4d00>
    6a58:	cmp	w0, #0x0
    6a5c:	cset	w0, eq  // eq = none
    6a60:	and	w0, w0, #0xff
    6a64:	cmp	w0, #0x0
    6a68:	b.eq	6a74 <plugin_init@@Base+0x1b28>  // b.none
    6a6c:	mov	w19, #0x0                   	// #0
    6a70:	b	6bc8 <plugin_init@@Base+0x1c7c>
    6a74:	add	x0, sp, #0x68
    6a78:	ldr	x1, [sp, #72]
    6a7c:	bl	59fc <plugin_init@@Base+0xab0>
    6a80:	cmp	w0, #0x0
    6a84:	cset	w0, eq  // eq = none
    6a88:	and	w0, w0, #0xff
    6a8c:	cmp	w0, #0x0
    6a90:	b.eq	6a9c <plugin_init@@Base+0x1b50>  // b.none
    6a94:	mov	w19, #0x0                   	// #0
    6a98:	b	6bc8 <plugin_init@@Base+0x1c7c>
    6a9c:	add	x0, sp, #0x60
    6aa0:	ldr	x1, [sp, #72]
    6aa4:	bl	9c4c <plugin_init@@Base+0x4d00>
    6aa8:	cmp	w0, #0x0
    6aac:	cset	w0, eq  // eq = none
    6ab0:	and	w0, w0, #0xff
    6ab4:	cmp	w0, #0x0
    6ab8:	b.eq	6ac4 <plugin_init@@Base+0x1b78>  // b.none
    6abc:	mov	w19, #0x0                   	// #0
    6ac0:	b	6bc8 <plugin_init@@Base+0x1c7c>
    6ac4:	add	x0, sp, #0x58
    6ac8:	ldr	x1, [sp, #72]
    6acc:	bl	59fc <plugin_init@@Base+0xab0>
    6ad0:	cmp	w0, #0x0
    6ad4:	cset	w0, eq  // eq = none
    6ad8:	and	w0, w0, #0xff
    6adc:	cmp	w0, #0x0
    6ae0:	b.eq	6aec <plugin_init@@Base+0x1ba0>  // b.none
    6ae4:	mov	w19, #0x0                   	// #0
    6ae8:	b	6bc8 <plugin_init@@Base+0x1c7c>
    6aec:	add	x0, sp, #0x50
    6af0:	ldr	x1, [sp, #72]
    6af4:	bl	9c74 <plugin_init@@Base+0x4d28>
    6af8:	cmp	w0, #0x0
    6afc:	cset	w0, eq  // eq = none
    6b00:	and	w0, w0, #0xff
    6b04:	cmp	w0, #0x0
    6b08:	b.eq	6b14 <plugin_init@@Base+0x1bc8>  // b.none
    6b0c:	mov	w19, #0x0                   	// #0
    6b10:	b	6bc8 <plugin_init@@Base+0x1c7c>
    6b14:	add	x0, sp, #0x80
    6b18:	bl	59e4 <plugin_init@@Base+0xa98>
    6b1c:	mov	x19, x0
    6b20:	add	x0, sp, #0x78
    6b24:	bl	9c9c <plugin_init@@Base+0x4d50>
    6b28:	mov	w20, w0
    6b2c:	add	x0, sp, #0x70
    6b30:	bl	9cb4 <plugin_init@@Base+0x4d68>
    6b34:	mov	x21, x0
    6b38:	add	x0, sp, #0x68
    6b3c:	bl	59e4 <plugin_init@@Base+0xa98>
    6b40:	mov	x22, x0
    6b44:	add	x0, sp, #0x60
    6b48:	bl	9cb4 <plugin_init@@Base+0x4d68>
    6b4c:	mov	x23, x0
    6b50:	add	x0, sp, #0x58
    6b54:	bl	59e4 <plugin_init@@Base+0xa98>
    6b58:	mov	x24, x0
    6b5c:	add	x0, sp, #0x50
    6b60:	bl	9ccc <plugin_init@@Base+0x4d80>
    6b64:	mov	w7, w0
    6b68:	mov	x6, x24
    6b6c:	mov	x5, x23
    6b70:	mov	x4, x22
    6b74:	mov	x3, x21
    6b78:	mov	w2, w20
    6b7c:	mov	x1, x19
    6b80:	ldr	x0, [sp, #72]
    6b84:	bl	3aa4 <__gmon_start__@plt+0x964>
    6b88:	str	x0, [sp, #136]
    6b8c:	mov	w1, #0x52                  	// #82
    6b90:	ldr	x0, [sp, #72]
    6b94:	bl	b168 <plugin_init@@Base+0x621c>
    6b98:	cmp	w0, #0x0
    6b9c:	cset	w0, eq  // eq = none
    6ba0:	and	w0, w0, #0xff
    6ba4:	cmp	w0, #0x0
    6ba8:	b.eq	6bb4 <plugin_init@@Base+0x1c68>  // b.none
    6bac:	mov	w19, #0x0                   	// #0
    6bb0:	b	6bc8 <plugin_init@@Base+0x1c7c>
    6bb4:	ldr	x1, [sp, #136]
    6bb8:	ldr	x0, [sp, #72]
    6bbc:	bl	9ce4 <plugin_init@@Base+0x4d98>
    6bc0:	mov	w19, w0
    6bc4:	nop
    6bc8:	add	x0, sp, #0x50
    6bcc:	bl	9c10 <plugin_init@@Base+0x4cc4>
    6bd0:	add	x0, sp, #0x58
    6bd4:	bl	59b0 <plugin_init@@Base+0xa64>
    6bd8:	add	x0, sp, #0x60
    6bdc:	bl	9be8 <plugin_init@@Base+0x4c9c>
    6be0:	add	x0, sp, #0x68
    6be4:	bl	59b0 <plugin_init@@Base+0xa64>
    6be8:	add	x0, sp, #0x70
    6bec:	bl	9be8 <plugin_init@@Base+0x4c9c>
    6bf0:	add	x0, sp, #0x78
    6bf4:	bl	9bc0 <plugin_init@@Base+0x4c74>
    6bf8:	add	x0, sp, #0x80
    6bfc:	bl	59b0 <plugin_init@@Base+0xa64>
    6c00:	mov	w0, w19
    6c04:	b	6c4c <plugin_init@@Base+0x1d00>
    6c08:	mov	x19, x0
    6c0c:	add	x0, sp, #0x50
    6c10:	bl	9c10 <plugin_init@@Base+0x4cc4>
    6c14:	add	x0, sp, #0x58
    6c18:	bl	59b0 <plugin_init@@Base+0xa64>
    6c1c:	add	x0, sp, #0x60
    6c20:	bl	9be8 <plugin_init@@Base+0x4c9c>
    6c24:	add	x0, sp, #0x68
    6c28:	bl	59b0 <plugin_init@@Base+0xa64>
    6c2c:	add	x0, sp, #0x70
    6c30:	bl	9be8 <plugin_init@@Base+0x4c9c>
    6c34:	add	x0, sp, #0x78
    6c38:	bl	9bc0 <plugin_init@@Base+0x4c74>
    6c3c:	add	x0, sp, #0x80
    6c40:	bl	59b0 <plugin_init@@Base+0xa64>
    6c44:	mov	x0, x19
    6c48:	bl	3100 <_Unwind_Resume@plt>
    6c4c:	ldp	x19, x20, [sp, #16]
    6c50:	ldp	x21, x22, [sp, #32]
    6c54:	ldp	x23, x24, [sp, #48]
    6c58:	ldp	x29, x30, [sp], #144
    6c5c:	ret
    6c60:	stp	x29, x30, [sp, #-80]!
    6c64:	mov	x29, sp
    6c68:	str	x19, [sp, #16]
    6c6c:	str	x0, [sp, #40]
    6c70:	add	x0, sp, #0x40
    6c74:	bl	9bd4 <plugin_init@@Base+0x4c88>
    6c78:	add	x0, sp, #0x38
    6c7c:	bl	9d08 <plugin_init@@Base+0x4dbc>
    6c80:	mov	x1, #0x2                   	// #2
    6c84:	ldr	x0, [sp, #40]
    6c88:	bl	b724 <plugin_init@@Base+0x67d8>
    6c8c:	cmp	w0, #0x0
    6c90:	cset	w0, eq  // eq = none
    6c94:	and	w0, w0, #0xff
    6c98:	cmp	w0, #0x0
    6c9c:	b.eq	6ca8 <plugin_init@@Base+0x1d5c>  // b.none
    6ca0:	mov	w19, #0x0                   	// #0
    6ca4:	b	6d5c <plugin_init@@Base+0x1e10>
    6ca8:	add	x0, sp, #0x40
    6cac:	ldr	x1, [sp, #40]
    6cb0:	bl	9c4c <plugin_init@@Base+0x4d00>
    6cb4:	cmp	w0, #0x0
    6cb8:	cset	w0, eq  // eq = none
    6cbc:	and	w0, w0, #0xff
    6cc0:	cmp	w0, #0x0
    6cc4:	b.eq	6cd0 <plugin_init@@Base+0x1d84>  // b.none
    6cc8:	mov	w19, #0x0                   	// #0
    6ccc:	b	6d5c <plugin_init@@Base+0x1e10>
    6cd0:	add	x0, sp, #0x38
    6cd4:	ldr	x1, [sp, #40]
    6cd8:	bl	9d30 <plugin_init@@Base+0x4de4>
    6cdc:	cmp	w0, #0x0
    6ce0:	cset	w0, eq  // eq = none
    6ce4:	and	w0, w0, #0xff
    6ce8:	cmp	w0, #0x0
    6cec:	b.eq	6cf8 <plugin_init@@Base+0x1dac>  // b.none
    6cf0:	mov	w19, #0x0                   	// #0
    6cf4:	b	6d5c <plugin_init@@Base+0x1e10>
    6cf8:	add	x0, sp, #0x40
    6cfc:	bl	9cb4 <plugin_init@@Base+0x4d68>
    6d00:	mov	x19, x0
    6d04:	add	x0, sp, #0x38
    6d08:	bl	9d58 <plugin_init@@Base+0x4e0c>
    6d0c:	mov	w2, w0
    6d10:	mov	x1, x19
    6d14:	ldr	x0, [sp, #40]
    6d18:	bl	3ce0 <__gmon_start__@plt+0xba0>
    6d1c:	str	w0, [sp, #76]
    6d20:	mov	w1, #0x52                  	// #82
    6d24:	ldr	x0, [sp, #40]
    6d28:	bl	b168 <plugin_init@@Base+0x621c>
    6d2c:	cmp	w0, #0x0
    6d30:	cset	w0, eq  // eq = none
    6d34:	and	w0, w0, #0xff
    6d38:	cmp	w0, #0x0
    6d3c:	b.eq	6d48 <plugin_init@@Base+0x1dfc>  // b.none
    6d40:	mov	w19, #0x0                   	// #0
    6d44:	b	6d5c <plugin_init@@Base+0x1e10>
    6d48:	ldr	w1, [sp, #76]
    6d4c:	ldr	x0, [sp, #40]
    6d50:	bl	9674 <plugin_init@@Base+0x4728>
    6d54:	mov	w19, w0
    6d58:	nop
    6d5c:	add	x0, sp, #0x38
    6d60:	bl	9d1c <plugin_init@@Base+0x4dd0>
    6d64:	add	x0, sp, #0x40
    6d68:	bl	9be8 <plugin_init@@Base+0x4c9c>
    6d6c:	mov	w0, w19
    6d70:	b	6d90 <plugin_init@@Base+0x1e44>
    6d74:	mov	x19, x0
    6d78:	add	x0, sp, #0x38
    6d7c:	bl	9d1c <plugin_init@@Base+0x4dd0>
    6d80:	add	x0, sp, #0x40
    6d84:	bl	9be8 <plugin_init@@Base+0x4c9c>
    6d88:	mov	x0, x19
    6d8c:	bl	3100 <_Unwind_Resume@plt>
    6d90:	ldr	x19, [sp, #16]
    6d94:	ldp	x29, x30, [sp], #80
    6d98:	ret
    6d9c:	stp	x29, x30, [sp, #-112]!
    6da0:	mov	x29, sp
    6da4:	stp	x19, x20, [sp, #16]
    6da8:	str	x21, [sp, #32]
    6dac:	str	x0, [sp, #56]
    6db0:	add	x0, sp, #0x60
    6db4:	bl	5994 <plugin_init@@Base+0xa48>
    6db8:	add	x0, sp, #0x58
    6dbc:	bl	9bd4 <plugin_init@@Base+0x4c88>
    6dc0:	add	x0, sp, #0x50
    6dc4:	bl	5994 <plugin_init@@Base+0xa48>
    6dc8:	add	x0, sp, #0x48
    6dcc:	bl	9bfc <plugin_init@@Base+0x4cb0>
    6dd0:	mov	x1, #0x4                   	// #4
    6dd4:	ldr	x0, [sp, #56]
    6dd8:	bl	b724 <plugin_init@@Base+0x67d8>
    6ddc:	cmp	w0, #0x0
    6de0:	cset	w0, eq  // eq = none
    6de4:	and	w0, w0, #0xff
    6de8:	cmp	w0, #0x0
    6dec:	b.eq	6df8 <plugin_init@@Base+0x1eac>  // b.none
    6df0:	mov	w19, #0x0                   	// #0
    6df4:	b	6f1c <plugin_init@@Base+0x1fd0>
    6df8:	add	x0, sp, #0x60
    6dfc:	ldr	x1, [sp, #56]
    6e00:	bl	59fc <plugin_init@@Base+0xab0>
    6e04:	cmp	w0, #0x0
    6e08:	cset	w0, eq  // eq = none
    6e0c:	and	w0, w0, #0xff
    6e10:	cmp	w0, #0x0
    6e14:	b.eq	6e20 <plugin_init@@Base+0x1ed4>  // b.none
    6e18:	mov	w19, #0x0                   	// #0
    6e1c:	b	6f1c <plugin_init@@Base+0x1fd0>
    6e20:	add	x0, sp, #0x58
    6e24:	ldr	x1, [sp, #56]
    6e28:	bl	9c4c <plugin_init@@Base+0x4d00>
    6e2c:	cmp	w0, #0x0
    6e30:	cset	w0, eq  // eq = none
    6e34:	and	w0, w0, #0xff
    6e38:	cmp	w0, #0x0
    6e3c:	b.eq	6e48 <plugin_init@@Base+0x1efc>  // b.none
    6e40:	mov	w19, #0x0                   	// #0
    6e44:	b	6f1c <plugin_init@@Base+0x1fd0>
    6e48:	add	x0, sp, #0x50
    6e4c:	ldr	x1, [sp, #56]
    6e50:	bl	59fc <plugin_init@@Base+0xab0>
    6e54:	cmp	w0, #0x0
    6e58:	cset	w0, eq  // eq = none
    6e5c:	and	w0, w0, #0xff
    6e60:	cmp	w0, #0x0
    6e64:	b.eq	6e70 <plugin_init@@Base+0x1f24>  // b.none
    6e68:	mov	w19, #0x0                   	// #0
    6e6c:	b	6f1c <plugin_init@@Base+0x1fd0>
    6e70:	add	x0, sp, #0x48
    6e74:	ldr	x1, [sp, #56]
    6e78:	bl	9c74 <plugin_init@@Base+0x4d28>
    6e7c:	cmp	w0, #0x0
    6e80:	cset	w0, eq  // eq = none
    6e84:	and	w0, w0, #0xff
    6e88:	cmp	w0, #0x0
    6e8c:	b.eq	6e98 <plugin_init@@Base+0x1f4c>  // b.none
    6e90:	mov	w19, #0x0                   	// #0
    6e94:	b	6f1c <plugin_init@@Base+0x1fd0>
    6e98:	add	x0, sp, #0x60
    6e9c:	bl	59e4 <plugin_init@@Base+0xa98>
    6ea0:	mov	x19, x0
    6ea4:	add	x0, sp, #0x58
    6ea8:	bl	9cb4 <plugin_init@@Base+0x4d68>
    6eac:	mov	x20, x0
    6eb0:	add	x0, sp, #0x50
    6eb4:	bl	59e4 <plugin_init@@Base+0xa98>
    6eb8:	mov	x21, x0
    6ebc:	add	x0, sp, #0x48
    6ec0:	bl	9ccc <plugin_init@@Base+0x4d80>
    6ec4:	mov	w4, w0
    6ec8:	mov	x3, x21
    6ecc:	mov	x2, x20
    6ed0:	mov	x1, x19
    6ed4:	ldr	x0, [sp, #56]
    6ed8:	bl	3d44 <__gmon_start__@plt+0xc04>
    6edc:	str	w0, [sp, #108]
    6ee0:	mov	w1, #0x52                  	// #82
    6ee4:	ldr	x0, [sp, #56]
    6ee8:	bl	b168 <plugin_init@@Base+0x621c>
    6eec:	cmp	w0, #0x0
    6ef0:	cset	w0, eq  // eq = none
    6ef4:	and	w0, w0, #0xff
    6ef8:	cmp	w0, #0x0
    6efc:	b.eq	6f08 <plugin_init@@Base+0x1fbc>  // b.none
    6f00:	mov	w19, #0x0                   	// #0
    6f04:	b	6f1c <plugin_init@@Base+0x1fd0>
    6f08:	ldr	w1, [sp, #108]
    6f0c:	ldr	x0, [sp, #56]
    6f10:	bl	9674 <plugin_init@@Base+0x4728>
    6f14:	mov	w19, w0
    6f18:	nop
    6f1c:	add	x0, sp, #0x48
    6f20:	bl	9c10 <plugin_init@@Base+0x4cc4>
    6f24:	add	x0, sp, #0x50
    6f28:	bl	59b0 <plugin_init@@Base+0xa64>
    6f2c:	add	x0, sp, #0x58
    6f30:	bl	9be8 <plugin_init@@Base+0x4c9c>
    6f34:	add	x0, sp, #0x60
    6f38:	bl	59b0 <plugin_init@@Base+0xa64>
    6f3c:	mov	w0, w19
    6f40:	b	6f70 <plugin_init@@Base+0x2024>
    6f44:	mov	x19, x0
    6f48:	add	x0, sp, #0x48
    6f4c:	bl	9c10 <plugin_init@@Base+0x4cc4>
    6f50:	add	x0, sp, #0x50
    6f54:	bl	59b0 <plugin_init@@Base+0xa64>
    6f58:	add	x0, sp, #0x58
    6f5c:	bl	9be8 <plugin_init@@Base+0x4c9c>
    6f60:	add	x0, sp, #0x60
    6f64:	bl	59b0 <plugin_init@@Base+0xa64>
    6f68:	mov	x0, x19
    6f6c:	bl	3100 <_Unwind_Resume@plt>
    6f70:	ldp	x19, x20, [sp, #16]
    6f74:	ldr	x21, [sp, #32]
    6f78:	ldp	x29, x30, [sp], #112
    6f7c:	ret
    6f80:	stp	x29, x30, [sp, #-64]!
    6f84:	mov	x29, sp
    6f88:	str	x19, [sp, #16]
    6f8c:	str	x0, [sp, #40]
    6f90:	add	x0, sp, #0x30
    6f94:	bl	9bd4 <plugin_init@@Base+0x4c88>
    6f98:	mov	x1, #0x1                   	// #1
    6f9c:	ldr	x0, [sp, #40]
    6fa0:	bl	b724 <plugin_init@@Base+0x67d8>
    6fa4:	cmp	w0, #0x0
    6fa8:	cset	w0, eq  // eq = none
    6fac:	and	w0, w0, #0xff
    6fb0:	cmp	w0, #0x0
    6fb4:	b.eq	6fc0 <plugin_init@@Base+0x2074>  // b.none
    6fb8:	mov	w19, #0x0                   	// #0
    6fbc:	b	703c <plugin_init@@Base+0x20f0>
    6fc0:	add	x0, sp, #0x30
    6fc4:	ldr	x1, [sp, #40]
    6fc8:	bl	9c4c <plugin_init@@Base+0x4d00>
    6fcc:	cmp	w0, #0x0
    6fd0:	cset	w0, eq  // eq = none
    6fd4:	and	w0, w0, #0xff
    6fd8:	cmp	w0, #0x0
    6fdc:	b.eq	6fe8 <plugin_init@@Base+0x209c>  // b.none
    6fe0:	mov	w19, #0x0                   	// #0
    6fe4:	b	703c <plugin_init@@Base+0x20f0>
    6fe8:	add	x0, sp, #0x30
    6fec:	bl	9cb4 <plugin_init@@Base+0x4d68>
    6ff0:	mov	x1, x0
    6ff4:	ldr	x0, [sp, #40]
    6ff8:	bl	3dec <__gmon_start__@plt+0xcac>
    6ffc:	str	x0, [sp, #56]
    7000:	mov	w1, #0x52                  	// #82
    7004:	ldr	x0, [sp, #40]
    7008:	bl	b168 <plugin_init@@Base+0x621c>
    700c:	cmp	w0, #0x0
    7010:	cset	w0, eq  // eq = none
    7014:	and	w0, w0, #0xff
    7018:	cmp	w0, #0x0
    701c:	b.eq	7028 <plugin_init@@Base+0x20dc>  // b.none
    7020:	mov	w19, #0x0                   	// #0
    7024:	b	703c <plugin_init@@Base+0x20f0>
    7028:	ldr	x1, [sp, #56]
    702c:	ldr	x0, [sp, #40]
    7030:	bl	9ce4 <plugin_init@@Base+0x4d98>
    7034:	mov	w19, w0
    7038:	nop
    703c:	add	x0, sp, #0x30
    7040:	bl	9be8 <plugin_init@@Base+0x4c9c>
    7044:	mov	w0, w19
    7048:	b	7060 <plugin_init@@Base+0x2114>
    704c:	mov	x19, x0
    7050:	add	x0, sp, #0x30
    7054:	bl	9be8 <plugin_init@@Base+0x4c9c>
    7058:	mov	x0, x19
    705c:	bl	3100 <_Unwind_Resume@plt>
    7060:	ldr	x19, [sp, #16]
    7064:	ldp	x29, x30, [sp], #64
    7068:	ret
    706c:	stp	x29, x30, [sp, #-48]!
    7070:	mov	x29, sp
    7074:	str	x0, [sp, #24]
    7078:	mov	x1, #0x0                   	// #0
    707c:	ldr	x0, [sp, #24]
    7080:	bl	b724 <plugin_init@@Base+0x67d8>
    7084:	cmp	w0, #0x0
    7088:	cset	w0, eq  // eq = none
    708c:	and	w0, w0, #0xff
    7090:	cmp	w0, #0x0
    7094:	b.eq	70a0 <plugin_init@@Base+0x2154>  // b.none
    7098:	mov	w0, #0x0                   	// #0
    709c:	b	70e4 <plugin_init@@Base+0x2198>
    70a0:	ldr	x0, [sp, #24]
    70a4:	bl	3e70 <__gmon_start__@plt+0xd30>
    70a8:	str	x0, [sp, #40]
    70ac:	mov	w1, #0x52                  	// #82
    70b0:	ldr	x0, [sp, #24]
    70b4:	bl	b168 <plugin_init@@Base+0x621c>
    70b8:	cmp	w0, #0x0
    70bc:	cset	w0, eq  // eq = none
    70c0:	and	w0, w0, #0xff
    70c4:	cmp	w0, #0x0
    70c8:	b.eq	70d4 <plugin_init@@Base+0x2188>  // b.none
    70cc:	mov	w0, #0x0                   	// #0
    70d0:	b	70e4 <plugin_init@@Base+0x2198>
    70d4:	ldr	x1, [sp, #40]
    70d8:	ldr	x0, [sp, #24]
    70dc:	bl	9ce4 <plugin_init@@Base+0x4d98>
    70e0:	nop
    70e4:	ldp	x29, x30, [sp], #48
    70e8:	ret
    70ec:	stp	x29, x30, [sp, #-48]!
    70f0:	mov	x29, sp
    70f4:	str	x0, [sp, #24]
    70f8:	mov	x1, #0x0                   	// #0
    70fc:	ldr	x0, [sp, #24]
    7100:	bl	b724 <plugin_init@@Base+0x67d8>
    7104:	cmp	w0, #0x0
    7108:	cset	w0, eq  // eq = none
    710c:	and	w0, w0, #0xff
    7110:	cmp	w0, #0x0
    7114:	b.eq	7120 <plugin_init@@Base+0x21d4>  // b.none
    7118:	mov	w0, #0x0                   	// #0
    711c:	b	7164 <plugin_init@@Base+0x2218>
    7120:	ldr	x0, [sp, #24]
    7124:	bl	3ea4 <__gmon_start__@plt+0xd64>
    7128:	str	x0, [sp, #40]
    712c:	mov	w1, #0x52                  	// #82
    7130:	ldr	x0, [sp, #24]
    7134:	bl	b168 <plugin_init@@Base+0x621c>
    7138:	cmp	w0, #0x0
    713c:	cset	w0, eq  // eq = none
    7140:	and	w0, w0, #0xff
    7144:	cmp	w0, #0x0
    7148:	b.eq	7154 <plugin_init@@Base+0x2208>  // b.none
    714c:	mov	w0, #0x0                   	// #0
    7150:	b	7164 <plugin_init@@Base+0x2218>
    7154:	ldr	x1, [sp, #40]
    7158:	ldr	x0, [sp, #24]
    715c:	bl	9ce4 <plugin_init@@Base+0x4d98>
    7160:	nop
    7164:	ldp	x29, x30, [sp], #48
    7168:	ret
    716c:	stp	x29, x30, [sp, #-112]!
    7170:	mov	x29, sp
    7174:	stp	x19, x20, [sp, #16]
    7178:	stp	x21, x22, [sp, #32]
    717c:	str	x0, [sp, #56]
    7180:	add	x0, sp, #0x60
    7184:	bl	9bd4 <plugin_init@@Base+0x4c88>
    7188:	add	x0, sp, #0x58
    718c:	bl	5994 <plugin_init@@Base+0xa48>
    7190:	add	x0, sp, #0x50
    7194:	bl	9bd4 <plugin_init@@Base+0x4c88>
    7198:	add	x0, sp, #0x48
    719c:	bl	9d70 <plugin_init@@Base+0x4e24>
    71a0:	add	x0, sp, #0x40
    71a4:	bl	9d70 <plugin_init@@Base+0x4e24>
    71a8:	mov	x1, #0x5                   	// #5
    71ac:	ldr	x0, [sp, #56]
    71b0:	bl	b724 <plugin_init@@Base+0x67d8>
    71b4:	cmp	w0, #0x0
    71b8:	cset	w0, eq  // eq = none
    71bc:	and	w0, w0, #0xff
    71c0:	cmp	w0, #0x0
    71c4:	b.eq	71d0 <plugin_init@@Base+0x2284>  // b.none
    71c8:	mov	w19, #0x0                   	// #0
    71cc:	b	732c <plugin_init@@Base+0x23e0>
    71d0:	add	x0, sp, #0x60
    71d4:	ldr	x1, [sp, #56]
    71d8:	bl	9c4c <plugin_init@@Base+0x4d00>
    71dc:	cmp	w0, #0x0
    71e0:	cset	w0, eq  // eq = none
    71e4:	and	w0, w0, #0xff
    71e8:	cmp	w0, #0x0
    71ec:	b.eq	71f8 <plugin_init@@Base+0x22ac>  // b.none
    71f0:	mov	w19, #0x0                   	// #0
    71f4:	b	732c <plugin_init@@Base+0x23e0>
    71f8:	add	x0, sp, #0x58
    71fc:	ldr	x1, [sp, #56]
    7200:	bl	59fc <plugin_init@@Base+0xab0>
    7204:	cmp	w0, #0x0
    7208:	cset	w0, eq  // eq = none
    720c:	and	w0, w0, #0xff
    7210:	cmp	w0, #0x0
    7214:	b.eq	7220 <plugin_init@@Base+0x22d4>  // b.none
    7218:	mov	w19, #0x0                   	// #0
    721c:	b	732c <plugin_init@@Base+0x23e0>
    7220:	add	x0, sp, #0x50
    7224:	ldr	x1, [sp, #56]
    7228:	bl	9c4c <plugin_init@@Base+0x4d00>
    722c:	cmp	w0, #0x0
    7230:	cset	w0, eq  // eq = none
    7234:	and	w0, w0, #0xff
    7238:	cmp	w0, #0x0
    723c:	b.eq	7248 <plugin_init@@Base+0x22fc>  // b.none
    7240:	mov	w19, #0x0                   	// #0
    7244:	b	732c <plugin_init@@Base+0x23e0>
    7248:	add	x0, sp, #0x48
    724c:	ldr	x1, [sp, #56]
    7250:	bl	9d98 <plugin_init@@Base+0x4e4c>
    7254:	cmp	w0, #0x0
    7258:	cset	w0, eq  // eq = none
    725c:	and	w0, w0, #0xff
    7260:	cmp	w0, #0x0
    7264:	b.eq	7270 <plugin_init@@Base+0x2324>  // b.none
    7268:	mov	w19, #0x0                   	// #0
    726c:	b	732c <plugin_init@@Base+0x23e0>
    7270:	add	x0, sp, #0x40
    7274:	ldr	x1, [sp, #56]
    7278:	bl	9d98 <plugin_init@@Base+0x4e4c>
    727c:	cmp	w0, #0x0
    7280:	cset	w0, eq  // eq = none
    7284:	and	w0, w0, #0xff
    7288:	cmp	w0, #0x0
    728c:	b.eq	7298 <plugin_init@@Base+0x234c>  // b.none
    7290:	mov	w19, #0x0                   	// #0
    7294:	b	732c <plugin_init@@Base+0x23e0>
    7298:	add	x0, sp, #0x60
    729c:	bl	9cb4 <plugin_init@@Base+0x4d68>
    72a0:	mov	x19, x0
    72a4:	add	x0, sp, #0x58
    72a8:	bl	59e4 <plugin_init@@Base+0xa98>
    72ac:	mov	x20, x0
    72b0:	add	x0, sp, #0x50
    72b4:	bl	9cb4 <plugin_init@@Base+0x4d68>
    72b8:	mov	x21, x0
    72bc:	add	x0, sp, #0x48
    72c0:	bl	9dc0 <plugin_init@@Base+0x4e74>
    72c4:	mov	x22, x0
    72c8:	add	x0, sp, #0x40
    72cc:	bl	9dc0 <plugin_init@@Base+0x4e74>
    72d0:	mov	x5, x0
    72d4:	mov	x4, x22
    72d8:	mov	x3, x21
    72dc:	mov	x2, x20
    72e0:	mov	x1, x19
    72e4:	ldr	x0, [sp, #56]
    72e8:	bl	3ed8 <__gmon_start__@plt+0xd98>
    72ec:	str	w0, [sp, #108]
    72f0:	mov	w1, #0x52                  	// #82
    72f4:	ldr	x0, [sp, #56]
    72f8:	bl	b168 <plugin_init@@Base+0x621c>
    72fc:	cmp	w0, #0x0
    7300:	cset	w0, eq  // eq = none
    7304:	and	w0, w0, #0xff
    7308:	cmp	w0, #0x0
    730c:	b.eq	7318 <plugin_init@@Base+0x23cc>  // b.none
    7310:	mov	w19, #0x0                   	// #0
    7314:	b	732c <plugin_init@@Base+0x23e0>
    7318:	ldr	w1, [sp, #108]
    731c:	ldr	x0, [sp, #56]
    7320:	bl	9674 <plugin_init@@Base+0x4728>
    7324:	mov	w19, w0
    7328:	nop
    732c:	add	x0, sp, #0x40
    7330:	bl	9d84 <plugin_init@@Base+0x4e38>
    7334:	add	x0, sp, #0x48
    7338:	bl	9d84 <plugin_init@@Base+0x4e38>
    733c:	add	x0, sp, #0x50
    7340:	bl	9be8 <plugin_init@@Base+0x4c9c>
    7344:	add	x0, sp, #0x58
    7348:	bl	59b0 <plugin_init@@Base+0xa64>
    734c:	add	x0, sp, #0x60
    7350:	bl	9be8 <plugin_init@@Base+0x4c9c>
    7354:	mov	w0, w19
    7358:	b	7390 <plugin_init@@Base+0x2444>
    735c:	mov	x19, x0
    7360:	add	x0, sp, #0x40
    7364:	bl	9d84 <plugin_init@@Base+0x4e38>
    7368:	add	x0, sp, #0x48
    736c:	bl	9d84 <plugin_init@@Base+0x4e38>
    7370:	add	x0, sp, #0x50
    7374:	bl	9be8 <plugin_init@@Base+0x4c9c>
    7378:	add	x0, sp, #0x58
    737c:	bl	59b0 <plugin_init@@Base+0xa64>
    7380:	add	x0, sp, #0x60
    7384:	bl	9be8 <plugin_init@@Base+0x4c9c>
    7388:	mov	x0, x19
    738c:	bl	3100 <_Unwind_Resume@plt>
    7390:	ldp	x19, x20, [sp, #16]
    7394:	ldp	x21, x22, [sp, #32]
    7398:	ldp	x29, x30, [sp], #112
    739c:	ret
    73a0:	stp	x29, x30, [sp, #-80]!
    73a4:	mov	x29, sp
    73a8:	str	x19, [sp, #16]
    73ac:	str	x0, [sp, #40]
    73b0:	add	x0, sp, #0x40
    73b4:	bl	9bd4 <plugin_init@@Base+0x4c88>
    73b8:	add	x0, sp, #0x38
    73bc:	bl	9d70 <plugin_init@@Base+0x4e24>
    73c0:	mov	x1, #0x2                   	// #2
    73c4:	ldr	x0, [sp, #40]
    73c8:	bl	b724 <plugin_init@@Base+0x67d8>
    73cc:	cmp	w0, #0x0
    73d0:	cset	w0, eq  // eq = none
    73d4:	and	w0, w0, #0xff
    73d8:	cmp	w0, #0x0
    73dc:	b.eq	73e8 <plugin_init@@Base+0x249c>  // b.none
    73e0:	mov	w19, #0x0                   	// #0
    73e4:	b	749c <plugin_init@@Base+0x2550>
    73e8:	add	x0, sp, #0x40
    73ec:	ldr	x1, [sp, #40]
    73f0:	bl	9c4c <plugin_init@@Base+0x4d00>
    73f4:	cmp	w0, #0x0
    73f8:	cset	w0, eq  // eq = none
    73fc:	and	w0, w0, #0xff
    7400:	cmp	w0, #0x0
    7404:	b.eq	7410 <plugin_init@@Base+0x24c4>  // b.none
    7408:	mov	w19, #0x0                   	// #0
    740c:	b	749c <plugin_init@@Base+0x2550>
    7410:	add	x0, sp, #0x38
    7414:	ldr	x1, [sp, #40]
    7418:	bl	9d98 <plugin_init@@Base+0x4e4c>
    741c:	cmp	w0, #0x0
    7420:	cset	w0, eq  // eq = none
    7424:	and	w0, w0, #0xff
    7428:	cmp	w0, #0x0
    742c:	b.eq	7438 <plugin_init@@Base+0x24ec>  // b.none
    7430:	mov	w19, #0x0                   	// #0
    7434:	b	749c <plugin_init@@Base+0x2550>
    7438:	add	x0, sp, #0x40
    743c:	bl	9cb4 <plugin_init@@Base+0x4d68>
    7440:	mov	x19, x0
    7444:	add	x0, sp, #0x38
    7448:	bl	9dc0 <plugin_init@@Base+0x4e74>
    744c:	mov	x2, x0
    7450:	mov	x1, x19
    7454:	ldr	x0, [sp, #40]
    7458:	bl	4134 <__gmon_start__@plt+0xff4>
    745c:	str	w0, [sp, #76]
    7460:	mov	w1, #0x52                  	// #82
    7464:	ldr	x0, [sp, #40]
    7468:	bl	b168 <plugin_init@@Base+0x621c>
    746c:	cmp	w0, #0x0
    7470:	cset	w0, eq  // eq = none
    7474:	and	w0, w0, #0xff
    7478:	cmp	w0, #0x0
    747c:	b.eq	7488 <plugin_init@@Base+0x253c>  // b.none
    7480:	mov	w19, #0x0                   	// #0
    7484:	b	749c <plugin_init@@Base+0x2550>
    7488:	ldr	w1, [sp, #76]
    748c:	ldr	x0, [sp, #40]
    7490:	bl	9674 <plugin_init@@Base+0x4728>
    7494:	mov	w19, w0
    7498:	nop
    749c:	add	x0, sp, #0x38
    74a0:	bl	9d84 <plugin_init@@Base+0x4e38>
    74a4:	add	x0, sp, #0x40
    74a8:	bl	9be8 <plugin_init@@Base+0x4c9c>
    74ac:	mov	w0, w19
    74b0:	b	74d0 <plugin_init@@Base+0x2584>
    74b4:	mov	x19, x0
    74b8:	add	x0, sp, #0x38
    74bc:	bl	9d84 <plugin_init@@Base+0x4e38>
    74c0:	add	x0, sp, #0x40
    74c4:	bl	9be8 <plugin_init@@Base+0x4c9c>
    74c8:	mov	x0, x19
    74cc:	bl	3100 <_Unwind_Resume@plt>
    74d0:	ldr	x19, [sp, #16]
    74d4:	ldp	x29, x30, [sp], #80
    74d8:	ret
    74dc:	stp	x29, x30, [sp, #-64]!
    74e0:	mov	x29, sp
    74e4:	str	x19, [sp, #16]
    74e8:	str	x0, [sp, #40]
    74ec:	add	x0, sp, #0x30
    74f0:	bl	9bd4 <plugin_init@@Base+0x4c88>
    74f4:	mov	x1, #0x1                   	// #1
    74f8:	ldr	x0, [sp, #40]
    74fc:	bl	b724 <plugin_init@@Base+0x67d8>
    7500:	cmp	w0, #0x0
    7504:	cset	w0, eq  // eq = none
    7508:	and	w0, w0, #0xff
    750c:	cmp	w0, #0x0
    7510:	b.eq	751c <plugin_init@@Base+0x25d0>  // b.none
    7514:	mov	w19, #0x0                   	// #0
    7518:	b	7598 <plugin_init@@Base+0x264c>
    751c:	add	x0, sp, #0x30
    7520:	ldr	x1, [sp, #40]
    7524:	bl	9c4c <plugin_init@@Base+0x4d00>
    7528:	cmp	w0, #0x0
    752c:	cset	w0, eq  // eq = none
    7530:	and	w0, w0, #0xff
    7534:	cmp	w0, #0x0
    7538:	b.eq	7544 <plugin_init@@Base+0x25f8>  // b.none
    753c:	mov	w19, #0x0                   	// #0
    7540:	b	7598 <plugin_init@@Base+0x264c>
    7544:	add	x0, sp, #0x30
    7548:	bl	9cb4 <plugin_init@@Base+0x4d68>
    754c:	mov	x1, x0
    7550:	ldr	x0, [sp, #40]
    7554:	bl	43ac <__gmon_start__@plt+0x126c>
    7558:	str	x0, [sp, #56]
    755c:	mov	w1, #0x52                  	// #82
    7560:	ldr	x0, [sp, #40]
    7564:	bl	b168 <plugin_init@@Base+0x621c>
    7568:	cmp	w0, #0x0
    756c:	cset	w0, eq  // eq = none
    7570:	and	w0, w0, #0xff
    7574:	cmp	w0, #0x0
    7578:	b.eq	7584 <plugin_init@@Base+0x2638>  // b.none
    757c:	mov	w19, #0x0                   	// #0
    7580:	b	7598 <plugin_init@@Base+0x264c>
    7584:	ldr	x1, [sp, #56]
    7588:	ldr	x0, [sp, #40]
    758c:	bl	9ce4 <plugin_init@@Base+0x4d98>
    7590:	mov	w19, w0
    7594:	nop
    7598:	add	x0, sp, #0x30
    759c:	bl	9be8 <plugin_init@@Base+0x4c9c>
    75a0:	mov	w0, w19
    75a4:	b	75bc <plugin_init@@Base+0x2670>
    75a8:	mov	x19, x0
    75ac:	add	x0, sp, #0x30
    75b0:	bl	9be8 <plugin_init@@Base+0x4c9c>
    75b4:	mov	x0, x19
    75b8:	bl	3100 <_Unwind_Resume@plt>
    75bc:	ldr	x19, [sp, #16]
    75c0:	ldp	x29, x30, [sp], #64
    75c4:	ret
    75c8:	stp	x29, x30, [sp, #-80]!
    75cc:	mov	x29, sp
    75d0:	stp	x19, x20, [sp, #16]
    75d4:	str	x0, [sp, #40]
    75d8:	add	x0, sp, #0x40
    75dc:	bl	9bd4 <plugin_init@@Base+0x4c88>
    75e0:	add	x0, sp, #0x38
    75e4:	bl	5994 <plugin_init@@Base+0xa48>
    75e8:	add	x0, sp, #0x30
    75ec:	bl	9d70 <plugin_init@@Base+0x4e24>
    75f0:	mov	x1, #0x3                   	// #3
    75f4:	ldr	x0, [sp, #40]
    75f8:	bl	b724 <plugin_init@@Base+0x67d8>
    75fc:	cmp	w0, #0x0
    7600:	cset	w0, eq  // eq = none
    7604:	and	w0, w0, #0xff
    7608:	cmp	w0, #0x0
    760c:	b.eq	7618 <plugin_init@@Base+0x26cc>  // b.none
    7610:	mov	w19, #0x0                   	// #0
    7614:	b	7704 <plugin_init@@Base+0x27b8>
    7618:	add	x0, sp, #0x40
    761c:	ldr	x1, [sp, #40]
    7620:	bl	9c4c <plugin_init@@Base+0x4d00>
    7624:	cmp	w0, #0x0
    7628:	cset	w0, eq  // eq = none
    762c:	and	w0, w0, #0xff
    7630:	cmp	w0, #0x0
    7634:	b.eq	7640 <plugin_init@@Base+0x26f4>  // b.none
    7638:	mov	w19, #0x0                   	// #0
    763c:	b	7704 <plugin_init@@Base+0x27b8>
    7640:	add	x0, sp, #0x38
    7644:	ldr	x1, [sp, #40]
    7648:	bl	59fc <plugin_init@@Base+0xab0>
    764c:	cmp	w0, #0x0
    7650:	cset	w0, eq  // eq = none
    7654:	and	w0, w0, #0xff
    7658:	cmp	w0, #0x0
    765c:	b.eq	7668 <plugin_init@@Base+0x271c>  // b.none
    7660:	mov	w19, #0x0                   	// #0
    7664:	b	7704 <plugin_init@@Base+0x27b8>
    7668:	add	x0, sp, #0x30
    766c:	ldr	x1, [sp, #40]
    7670:	bl	9d98 <plugin_init@@Base+0x4e4c>
    7674:	cmp	w0, #0x0
    7678:	cset	w0, eq  // eq = none
    767c:	and	w0, w0, #0xff
    7680:	cmp	w0, #0x0
    7684:	b.eq	7690 <plugin_init@@Base+0x2744>  // b.none
    7688:	mov	w19, #0x0                   	// #0
    768c:	b	7704 <plugin_init@@Base+0x27b8>
    7690:	add	x0, sp, #0x40
    7694:	bl	9cb4 <plugin_init@@Base+0x4d68>
    7698:	mov	x19, x0
    769c:	add	x0, sp, #0x38
    76a0:	bl	59e4 <plugin_init@@Base+0xa98>
    76a4:	mov	x20, x0
    76a8:	add	x0, sp, #0x30
    76ac:	bl	9dc0 <plugin_init@@Base+0x4e74>
    76b0:	mov	x3, x0
    76b4:	mov	x2, x20
    76b8:	mov	x1, x19
    76bc:	ldr	x0, [sp, #40]
    76c0:	bl	4464 <__gmon_start__@plt+0x1324>
    76c4:	str	w0, [sp, #76]
    76c8:	mov	w1, #0x52                  	// #82
    76cc:	ldr	x0, [sp, #40]
    76d0:	bl	b168 <plugin_init@@Base+0x621c>
    76d4:	cmp	w0, #0x0
    76d8:	cset	w0, eq  // eq = none
    76dc:	and	w0, w0, #0xff
    76e0:	cmp	w0, #0x0
    76e4:	b.eq	76f0 <plugin_init@@Base+0x27a4>  // b.none
    76e8:	mov	w19, #0x0                   	// #0
    76ec:	b	7704 <plugin_init@@Base+0x27b8>
    76f0:	ldr	w1, [sp, #76]
    76f4:	ldr	x0, [sp, #40]
    76f8:	bl	9674 <plugin_init@@Base+0x4728>
    76fc:	mov	w19, w0
    7700:	nop
    7704:	add	x0, sp, #0x30
    7708:	bl	9d84 <plugin_init@@Base+0x4e38>
    770c:	add	x0, sp, #0x38
    7710:	bl	59b0 <plugin_init@@Base+0xa64>
    7714:	add	x0, sp, #0x40
    7718:	bl	9be8 <plugin_init@@Base+0x4c9c>
    771c:	mov	w0, w19
    7720:	b	7748 <plugin_init@@Base+0x27fc>
    7724:	mov	x19, x0
    7728:	add	x0, sp, #0x30
    772c:	bl	9d84 <plugin_init@@Base+0x4e38>
    7730:	add	x0, sp, #0x38
    7734:	bl	59b0 <plugin_init@@Base+0xa64>
    7738:	add	x0, sp, #0x40
    773c:	bl	9be8 <plugin_init@@Base+0x4c9c>
    7740:	mov	x0, x19
    7744:	bl	3100 <_Unwind_Resume@plt>
    7748:	ldp	x19, x20, [sp, #16]
    774c:	ldp	x29, x30, [sp], #80
    7750:	ret
    7754:	stp	x29, x30, [sp, #-64]!
    7758:	mov	x29, sp
    775c:	str	x19, [sp, #16]
    7760:	str	x0, [sp, #40]
    7764:	add	x0, sp, #0x30
    7768:	bl	9bd4 <plugin_init@@Base+0x4c88>
    776c:	mov	x1, #0x1                   	// #1
    7770:	ldr	x0, [sp, #40]
    7774:	bl	b724 <plugin_init@@Base+0x67d8>
    7778:	cmp	w0, #0x0
    777c:	cset	w0, eq  // eq = none
    7780:	and	w0, w0, #0xff
    7784:	cmp	w0, #0x0
    7788:	b.eq	7794 <plugin_init@@Base+0x2848>  // b.none
    778c:	mov	w19, #0x0                   	// #0
    7790:	b	7810 <plugin_init@@Base+0x28c4>
    7794:	add	x0, sp, #0x30
    7798:	ldr	x1, [sp, #40]
    779c:	bl	9c4c <plugin_init@@Base+0x4d00>
    77a0:	cmp	w0, #0x0
    77a4:	cset	w0, eq  // eq = none
    77a8:	and	w0, w0, #0xff
    77ac:	cmp	w0, #0x0
    77b0:	b.eq	77bc <plugin_init@@Base+0x2870>  // b.none
    77b4:	mov	w19, #0x0                   	// #0
    77b8:	b	7810 <plugin_init@@Base+0x28c4>
    77bc:	add	x0, sp, #0x30
    77c0:	bl	9cb4 <plugin_init@@Base+0x4d68>
    77c4:	mov	x1, x0
    77c8:	ldr	x0, [sp, #40]
    77cc:	bl	453c <__gmon_start__@plt+0x13fc>
    77d0:	str	w0, [sp, #60]
    77d4:	mov	w1, #0x52                  	// #82
    77d8:	ldr	x0, [sp, #40]
    77dc:	bl	b168 <plugin_init@@Base+0x621c>
    77e0:	cmp	w0, #0x0
    77e4:	cset	w0, eq  // eq = none
    77e8:	and	w0, w0, #0xff
    77ec:	cmp	w0, #0x0
    77f0:	b.eq	77fc <plugin_init@@Base+0x28b0>  // b.none
    77f4:	mov	w19, #0x0                   	// #0
    77f8:	b	7810 <plugin_init@@Base+0x28c4>
    77fc:	ldr	w1, [sp, #60]
    7800:	ldr	x0, [sp, #40]
    7804:	bl	9674 <plugin_init@@Base+0x4728>
    7808:	mov	w19, w0
    780c:	nop
    7810:	add	x0, sp, #0x30
    7814:	bl	9be8 <plugin_init@@Base+0x4c9c>
    7818:	mov	w0, w19
    781c:	b	7834 <plugin_init@@Base+0x28e8>
    7820:	mov	x19, x0
    7824:	add	x0, sp, #0x30
    7828:	bl	9be8 <plugin_init@@Base+0x4c9c>
    782c:	mov	x0, x19
    7830:	bl	3100 <_Unwind_Resume@plt>
    7834:	ldr	x19, [sp, #16]
    7838:	ldp	x29, x30, [sp], #64
    783c:	ret
    7840:	stp	x29, x30, [sp, #-80]!
    7844:	mov	x29, sp
    7848:	stp	x19, x20, [sp, #16]
    784c:	str	x0, [sp, #40]
    7850:	add	x0, sp, #0x40
    7854:	bl	9bd4 <plugin_init@@Base+0x4c88>
    7858:	add	x0, sp, #0x38
    785c:	bl	5a24 <plugin_init@@Base+0xad8>
    7860:	add	x0, sp, #0x30
    7864:	bl	9d08 <plugin_init@@Base+0x4dbc>
    7868:	mov	x1, #0x3                   	// #3
    786c:	ldr	x0, [sp, #40]
    7870:	bl	b724 <plugin_init@@Base+0x67d8>
    7874:	cmp	w0, #0x0
    7878:	cset	w0, eq  // eq = none
    787c:	and	w0, w0, #0xff
    7880:	cmp	w0, #0x0
    7884:	b.eq	7890 <plugin_init@@Base+0x2944>  // b.none
    7888:	mov	w19, #0x0                   	// #0
    788c:	b	797c <plugin_init@@Base+0x2a30>
    7890:	add	x0, sp, #0x40
    7894:	ldr	x1, [sp, #40]
    7898:	bl	9c4c <plugin_init@@Base+0x4d00>
    789c:	cmp	w0, #0x0
    78a0:	cset	w0, eq  // eq = none
    78a4:	and	w0, w0, #0xff
    78a8:	cmp	w0, #0x0
    78ac:	b.eq	78b8 <plugin_init@@Base+0x296c>  // b.none
    78b0:	mov	w19, #0x0                   	// #0
    78b4:	b	797c <plugin_init@@Base+0x2a30>
    78b8:	add	x0, sp, #0x38
    78bc:	ldr	x1, [sp, #40]
    78c0:	bl	5abc <plugin_init@@Base+0xb70>
    78c4:	cmp	w0, #0x0
    78c8:	cset	w0, eq  // eq = none
    78cc:	and	w0, w0, #0xff
    78d0:	cmp	w0, #0x0
    78d4:	b.eq	78e0 <plugin_init@@Base+0x2994>  // b.none
    78d8:	mov	w19, #0x0                   	// #0
    78dc:	b	797c <plugin_init@@Base+0x2a30>
    78e0:	add	x0, sp, #0x30
    78e4:	ldr	x1, [sp, #40]
    78e8:	bl	9d30 <plugin_init@@Base+0x4de4>
    78ec:	cmp	w0, #0x0
    78f0:	cset	w0, eq  // eq = none
    78f4:	and	w0, w0, #0xff
    78f8:	cmp	w0, #0x0
    78fc:	b.eq	7908 <plugin_init@@Base+0x29bc>  // b.none
    7900:	mov	w19, #0x0                   	// #0
    7904:	b	797c <plugin_init@@Base+0x2a30>
    7908:	add	x0, sp, #0x40
    790c:	bl	9cb4 <plugin_init@@Base+0x4d68>
    7910:	mov	x19, x0
    7914:	add	x0, sp, #0x38
    7918:	bl	5aa4 <plugin_init@@Base+0xb58>
    791c:	mov	x20, x0
    7920:	add	x0, sp, #0x30
    7924:	bl	9d58 <plugin_init@@Base+0x4e0c>
    7928:	mov	w3, w0
    792c:	mov	x2, x20
    7930:	mov	x1, x19
    7934:	ldr	x0, [sp, #40]
    7938:	bl	4618 <__gmon_start__@plt+0x14d8>
    793c:	str	x0, [sp, #72]
    7940:	mov	w1, #0x52                  	// #82
    7944:	ldr	x0, [sp, #40]
    7948:	bl	b168 <plugin_init@@Base+0x621c>
    794c:	cmp	w0, #0x0
    7950:	cset	w0, eq  // eq = none
    7954:	and	w0, w0, #0xff
    7958:	cmp	w0, #0x0
    795c:	b.eq	7968 <plugin_init@@Base+0x2a1c>  // b.none
    7960:	mov	w19, #0x0                   	// #0
    7964:	b	797c <plugin_init@@Base+0x2a30>
    7968:	ldr	x1, [sp, #72]
    796c:	ldr	x0, [sp, #40]
    7970:	bl	9ce4 <plugin_init@@Base+0x4d98>
    7974:	mov	w19, w0
    7978:	nop
    797c:	add	x0, sp, #0x30
    7980:	bl	9d1c <plugin_init@@Base+0x4dd0>
    7984:	add	x0, sp, #0x38
    7988:	bl	5a40 <plugin_init@@Base+0xaf4>
    798c:	add	x0, sp, #0x40
    7990:	bl	9be8 <plugin_init@@Base+0x4c9c>
    7994:	mov	w0, w19
    7998:	b	79c0 <plugin_init@@Base+0x2a74>
    799c:	mov	x19, x0
    79a0:	add	x0, sp, #0x30
    79a4:	bl	9d1c <plugin_init@@Base+0x4dd0>
    79a8:	add	x0, sp, #0x38
    79ac:	bl	5a40 <plugin_init@@Base+0xaf4>
    79b0:	add	x0, sp, #0x40
    79b4:	bl	9be8 <plugin_init@@Base+0x4c9c>
    79b8:	mov	x0, x19
    79bc:	bl	3100 <_Unwind_Resume@plt>
    79c0:	ldp	x19, x20, [sp, #16]
    79c4:	ldp	x29, x30, [sp], #80
    79c8:	ret
    79cc:	stp	x29, x30, [sp, #-80]!
    79d0:	mov	x29, sp
    79d4:	str	x19, [sp, #16]
    79d8:	str	x0, [sp, #40]
    79dc:	add	x0, sp, #0x40
    79e0:	bl	9d08 <plugin_init@@Base+0x4dbc>
    79e4:	add	x0, sp, #0x38
    79e8:	bl	9d70 <plugin_init@@Base+0x4e24>
    79ec:	mov	x1, #0x2                   	// #2
    79f0:	ldr	x0, [sp, #40]
    79f4:	bl	b724 <plugin_init@@Base+0x67d8>
    79f8:	cmp	w0, #0x0
    79fc:	cset	w0, eq  // eq = none
    7a00:	and	w0, w0, #0xff
    7a04:	cmp	w0, #0x0
    7a08:	b.eq	7a14 <plugin_init@@Base+0x2ac8>  // b.none
    7a0c:	mov	w19, #0x0                   	// #0
    7a10:	b	7ac8 <plugin_init@@Base+0x2b7c>
    7a14:	add	x0, sp, #0x40
    7a18:	ldr	x1, [sp, #40]
    7a1c:	bl	9d30 <plugin_init@@Base+0x4de4>
    7a20:	cmp	w0, #0x0
    7a24:	cset	w0, eq  // eq = none
    7a28:	and	w0, w0, #0xff
    7a2c:	cmp	w0, #0x0
    7a30:	b.eq	7a3c <plugin_init@@Base+0x2af0>  // b.none
    7a34:	mov	w19, #0x0                   	// #0
    7a38:	b	7ac8 <plugin_init@@Base+0x2b7c>
    7a3c:	add	x0, sp, #0x38
    7a40:	ldr	x1, [sp, #40]
    7a44:	bl	9d98 <plugin_init@@Base+0x4e4c>
    7a48:	cmp	w0, #0x0
    7a4c:	cset	w0, eq  // eq = none
    7a50:	and	w0, w0, #0xff
    7a54:	cmp	w0, #0x0
    7a58:	b.eq	7a64 <plugin_init@@Base+0x2b18>  // b.none
    7a5c:	mov	w19, #0x0                   	// #0
    7a60:	b	7ac8 <plugin_init@@Base+0x2b7c>
    7a64:	add	x0, sp, #0x40
    7a68:	bl	9d58 <plugin_init@@Base+0x4e0c>
    7a6c:	mov	w19, w0
    7a70:	add	x0, sp, #0x38
    7a74:	bl	9dc0 <plugin_init@@Base+0x4e74>
    7a78:	mov	x2, x0
    7a7c:	mov	w1, w19
    7a80:	ldr	x0, [sp, #40]
    7a84:	bl	48f0 <__gmon_start__@plt+0x17b0>
    7a88:	str	x0, [sp, #72]
    7a8c:	mov	w1, #0x52                  	// #82
    7a90:	ldr	x0, [sp, #40]
    7a94:	bl	b168 <plugin_init@@Base+0x621c>
    7a98:	cmp	w0, #0x0
    7a9c:	cset	w0, eq  // eq = none
    7aa0:	and	w0, w0, #0xff
    7aa4:	cmp	w0, #0x0
    7aa8:	b.eq	7ab4 <plugin_init@@Base+0x2b68>  // b.none
    7aac:	mov	w19, #0x0                   	// #0
    7ab0:	b	7ac8 <plugin_init@@Base+0x2b7c>
    7ab4:	ldr	x1, [sp, #72]
    7ab8:	ldr	x0, [sp, #40]
    7abc:	bl	9ce4 <plugin_init@@Base+0x4d98>
    7ac0:	mov	w19, w0
    7ac4:	nop
    7ac8:	add	x0, sp, #0x38
    7acc:	bl	9d84 <plugin_init@@Base+0x4e38>
    7ad0:	add	x0, sp, #0x40
    7ad4:	bl	9d1c <plugin_init@@Base+0x4dd0>
    7ad8:	mov	w0, w19
    7adc:	b	7afc <plugin_init@@Base+0x2bb0>
    7ae0:	mov	x19, x0
    7ae4:	add	x0, sp, #0x38
    7ae8:	bl	9d84 <plugin_init@@Base+0x4e38>
    7aec:	add	x0, sp, #0x40
    7af0:	bl	9d1c <plugin_init@@Base+0x4dd0>
    7af4:	mov	x0, x19
    7af8:	bl	3100 <_Unwind_Resume@plt>
    7afc:	ldr	x19, [sp, #16]
    7b00:	ldp	x29, x30, [sp], #80
    7b04:	ret
    7b08:	stp	x29, x30, [sp, #-64]!
    7b0c:	mov	x29, sp
    7b10:	str	x19, [sp, #16]
    7b14:	str	x0, [sp, #40]
    7b18:	add	x0, sp, #0x30
    7b1c:	bl	9d70 <plugin_init@@Base+0x4e24>
    7b20:	mov	x1, #0x1                   	// #1
    7b24:	ldr	x0, [sp, #40]
    7b28:	bl	b724 <plugin_init@@Base+0x67d8>
    7b2c:	cmp	w0, #0x0
    7b30:	cset	w0, eq  // eq = none
    7b34:	and	w0, w0, #0xff
    7b38:	cmp	w0, #0x0
    7b3c:	b.eq	7b48 <plugin_init@@Base+0x2bfc>  // b.none
    7b40:	mov	w19, #0x0                   	// #0
    7b44:	b	7bc4 <plugin_init@@Base+0x2c78>
    7b48:	add	x0, sp, #0x30
    7b4c:	ldr	x1, [sp, #40]
    7b50:	bl	9d98 <plugin_init@@Base+0x4e4c>
    7b54:	cmp	w0, #0x0
    7b58:	cset	w0, eq  // eq = none
    7b5c:	and	w0, w0, #0xff
    7b60:	cmp	w0, #0x0
    7b64:	b.eq	7b70 <plugin_init@@Base+0x2c24>  // b.none
    7b68:	mov	w19, #0x0                   	// #0
    7b6c:	b	7bc4 <plugin_init@@Base+0x2c78>
    7b70:	add	x0, sp, #0x30
    7b74:	bl	9dc0 <plugin_init@@Base+0x4e74>
    7b78:	mov	x1, x0
    7b7c:	ldr	x0, [sp, #40]
    7b80:	bl	49f0 <__gmon_start__@plt+0x18b0>
    7b84:	str	x0, [sp, #56]
    7b88:	mov	w1, #0x52                  	// #82
    7b8c:	ldr	x0, [sp, #40]
    7b90:	bl	b168 <plugin_init@@Base+0x621c>
    7b94:	cmp	w0, #0x0
    7b98:	cset	w0, eq  // eq = none
    7b9c:	and	w0, w0, #0xff
    7ba0:	cmp	w0, #0x0
    7ba4:	b.eq	7bb0 <plugin_init@@Base+0x2c64>  // b.none
    7ba8:	mov	w19, #0x0                   	// #0
    7bac:	b	7bc4 <plugin_init@@Base+0x2c78>
    7bb0:	ldr	x1, [sp, #56]
    7bb4:	ldr	x0, [sp, #40]
    7bb8:	bl	9ce4 <plugin_init@@Base+0x4d98>
    7bbc:	mov	w19, w0
    7bc0:	nop
    7bc4:	add	x0, sp, #0x30
    7bc8:	bl	9d84 <plugin_init@@Base+0x4e38>
    7bcc:	mov	w0, w19
    7bd0:	b	7be8 <plugin_init@@Base+0x2c9c>
    7bd4:	mov	x19, x0
    7bd8:	add	x0, sp, #0x30
    7bdc:	bl	9d84 <plugin_init@@Base+0x4e38>
    7be0:	mov	x0, x19
    7be4:	bl	3100 <_Unwind_Resume@plt>
    7be8:	ldr	x19, [sp, #16]
    7bec:	ldp	x29, x30, [sp], #64
    7bf0:	ret
    7bf4:	stp	x29, x30, [sp, #-48]!
    7bf8:	mov	x29, sp
    7bfc:	str	x0, [sp, #24]
    7c00:	mov	x1, #0x0                   	// #0
    7c04:	ldr	x0, [sp, #24]
    7c08:	bl	b724 <plugin_init@@Base+0x67d8>
    7c0c:	cmp	w0, #0x0
    7c10:	cset	w0, eq  // eq = none
    7c14:	and	w0, w0, #0xff
    7c18:	cmp	w0, #0x0
    7c1c:	b.eq	7c28 <plugin_init@@Base+0x2cdc>  // b.none
    7c20:	mov	w0, #0x0                   	// #0
    7c24:	b	7c6c <plugin_init@@Base+0x2d20>
    7c28:	ldr	x0, [sp, #24]
    7c2c:	bl	4bb0 <__gmon_start__@plt+0x1a70>
    7c30:	str	x0, [sp, #40]
    7c34:	mov	w1, #0x52                  	// #82
    7c38:	ldr	x0, [sp, #24]
    7c3c:	bl	b168 <plugin_init@@Base+0x621c>
    7c40:	cmp	w0, #0x0
    7c44:	cset	w0, eq  // eq = none
    7c48:	and	w0, w0, #0xff
    7c4c:	cmp	w0, #0x0
    7c50:	b.eq	7c5c <plugin_init@@Base+0x2d10>  // b.none
    7c54:	mov	w0, #0x0                   	// #0
    7c58:	b	7c6c <plugin_init@@Base+0x2d20>
    7c5c:	ldr	x1, [sp, #40]
    7c60:	ldr	x0, [sp, #24]
    7c64:	bl	9ce4 <plugin_init@@Base+0x4d98>
    7c68:	nop
    7c6c:	ldp	x29, x30, [sp], #48
    7c70:	ret
    7c74:	stp	x29, x30, [sp, #-48]!
    7c78:	mov	x29, sp
    7c7c:	str	x0, [sp, #24]
    7c80:	mov	x1, #0x0                   	// #0
    7c84:	ldr	x0, [sp, #24]
    7c88:	bl	b724 <plugin_init@@Base+0x67d8>
    7c8c:	cmp	w0, #0x0
    7c90:	cset	w0, eq  // eq = none
    7c94:	and	w0, w0, #0xff
    7c98:	cmp	w0, #0x0
    7c9c:	b.eq	7ca8 <plugin_init@@Base+0x2d5c>  // b.none
    7ca0:	mov	w0, #0x0                   	// #0
    7ca4:	b	7cec <plugin_init@@Base+0x2da0>
    7ca8:	ldr	x0, [sp, #24]
    7cac:	bl	4bd4 <__gmon_start__@plt+0x1a94>
    7cb0:	str	x0, [sp, #40]
    7cb4:	mov	w1, #0x52                  	// #82
    7cb8:	ldr	x0, [sp, #24]
    7cbc:	bl	b168 <plugin_init@@Base+0x621c>
    7cc0:	cmp	w0, #0x0
    7cc4:	cset	w0, eq  // eq = none
    7cc8:	and	w0, w0, #0xff
    7ccc:	cmp	w0, #0x0
    7cd0:	b.eq	7cdc <plugin_init@@Base+0x2d90>  // b.none
    7cd4:	mov	w0, #0x0                   	// #0
    7cd8:	b	7cec <plugin_init@@Base+0x2da0>
    7cdc:	ldr	x1, [sp, #40]
    7ce0:	ldr	x0, [sp, #24]
    7ce4:	bl	9ce4 <plugin_init@@Base+0x4d98>
    7ce8:	nop
    7cec:	ldp	x29, x30, [sp], #48
    7cf0:	ret
    7cf4:	stp	x29, x30, [sp, #-80]!
    7cf8:	mov	x29, sp
    7cfc:	str	x19, [sp, #16]
    7d00:	str	x0, [sp, #40]
    7d04:	add	x0, sp, #0x40
    7d08:	bl	9bd4 <plugin_init@@Base+0x4c88>
    7d0c:	add	x0, sp, #0x38
    7d10:	bl	9d08 <plugin_init@@Base+0x4dbc>
    7d14:	mov	x1, #0x2                   	// #2
    7d18:	ldr	x0, [sp, #40]
    7d1c:	bl	b724 <plugin_init@@Base+0x67d8>
    7d20:	cmp	w0, #0x0
    7d24:	cset	w0, eq  // eq = none
    7d28:	and	w0, w0, #0xff
    7d2c:	cmp	w0, #0x0
    7d30:	b.eq	7d3c <plugin_init@@Base+0x2df0>  // b.none
    7d34:	mov	w19, #0x0                   	// #0
    7d38:	b	7df0 <plugin_init@@Base+0x2ea4>
    7d3c:	add	x0, sp, #0x40
    7d40:	ldr	x1, [sp, #40]
    7d44:	bl	9c4c <plugin_init@@Base+0x4d00>
    7d48:	cmp	w0, #0x0
    7d4c:	cset	w0, eq  // eq = none
    7d50:	and	w0, w0, #0xff
    7d54:	cmp	w0, #0x0
    7d58:	b.eq	7d64 <plugin_init@@Base+0x2e18>  // b.none
    7d5c:	mov	w19, #0x0                   	// #0
    7d60:	b	7df0 <plugin_init@@Base+0x2ea4>
    7d64:	add	x0, sp, #0x38
    7d68:	ldr	x1, [sp, #40]
    7d6c:	bl	9d30 <plugin_init@@Base+0x4de4>
    7d70:	cmp	w0, #0x0
    7d74:	cset	w0, eq  // eq = none
    7d78:	and	w0, w0, #0xff
    7d7c:	cmp	w0, #0x0
    7d80:	b.eq	7d8c <plugin_init@@Base+0x2e40>  // b.none
    7d84:	mov	w19, #0x0                   	// #0
    7d88:	b	7df0 <plugin_init@@Base+0x2ea4>
    7d8c:	add	x0, sp, #0x40
    7d90:	bl	9cb4 <plugin_init@@Base+0x4d68>
    7d94:	mov	x19, x0
    7d98:	add	x0, sp, #0x38
    7d9c:	bl	9d58 <plugin_init@@Base+0x4e0c>
    7da0:	mov	w2, w0
    7da4:	mov	x1, x19
    7da8:	ldr	x0, [sp, #40]
    7dac:	bl	4bf8 <__gmon_start__@plt+0x1ab8>
    7db0:	str	x0, [sp, #72]
    7db4:	mov	w1, #0x52                  	// #82
    7db8:	ldr	x0, [sp, #40]
    7dbc:	bl	b168 <plugin_init@@Base+0x621c>
    7dc0:	cmp	w0, #0x0
    7dc4:	cset	w0, eq  // eq = none
    7dc8:	and	w0, w0, #0xff
    7dcc:	cmp	w0, #0x0
    7dd0:	b.eq	7ddc <plugin_init@@Base+0x2e90>  // b.none
    7dd4:	mov	w19, #0x0                   	// #0
    7dd8:	b	7df0 <plugin_init@@Base+0x2ea4>
    7ddc:	ldr	x1, [sp, #72]
    7de0:	ldr	x0, [sp, #40]
    7de4:	bl	9ce4 <plugin_init@@Base+0x4d98>
    7de8:	mov	w19, w0
    7dec:	nop
    7df0:	add	x0, sp, #0x38
    7df4:	bl	9d1c <plugin_init@@Base+0x4dd0>
    7df8:	add	x0, sp, #0x40
    7dfc:	bl	9be8 <plugin_init@@Base+0x4c9c>
    7e00:	mov	w0, w19
    7e04:	b	7e24 <plugin_init@@Base+0x2ed8>
    7e08:	mov	x19, x0
    7e0c:	add	x0, sp, #0x38
    7e10:	bl	9d1c <plugin_init@@Base+0x4dd0>
    7e14:	add	x0, sp, #0x40
    7e18:	bl	9be8 <plugin_init@@Base+0x4c9c>
    7e1c:	mov	x0, x19
    7e20:	bl	3100 <_Unwind_Resume@plt>
    7e24:	ldr	x19, [sp, #16]
    7e28:	ldp	x29, x30, [sp], #80
    7e2c:	ret
    7e30:	stp	x29, x30, [sp, #-80]!
    7e34:	mov	x29, sp
    7e38:	str	x19, [sp, #16]
    7e3c:	str	x0, [sp, #40]
    7e40:	add	x0, sp, #0x40
    7e44:	bl	9bd4 <plugin_init@@Base+0x4c88>
    7e48:	add	x0, sp, #0x38
    7e4c:	bl	5994 <plugin_init@@Base+0xa48>
    7e50:	mov	x1, #0x2                   	// #2
    7e54:	ldr	x0, [sp, #40]
    7e58:	bl	b724 <plugin_init@@Base+0x67d8>
    7e5c:	cmp	w0, #0x0
    7e60:	cset	w0, eq  // eq = none
    7e64:	and	w0, w0, #0xff
    7e68:	cmp	w0, #0x0
    7e6c:	b.eq	7e78 <plugin_init@@Base+0x2f2c>  // b.none
    7e70:	mov	w19, #0x0                   	// #0
    7e74:	b	7f2c <plugin_init@@Base+0x2fe0>
    7e78:	add	x0, sp, #0x40
    7e7c:	ldr	x1, [sp, #40]
    7e80:	bl	9c4c <plugin_init@@Base+0x4d00>
    7e84:	cmp	w0, #0x0
    7e88:	cset	w0, eq  // eq = none
    7e8c:	and	w0, w0, #0xff
    7e90:	cmp	w0, #0x0
    7e94:	b.eq	7ea0 <plugin_init@@Base+0x2f54>  // b.none
    7e98:	mov	w19, #0x0                   	// #0
    7e9c:	b	7f2c <plugin_init@@Base+0x2fe0>
    7ea0:	add	x0, sp, #0x38
    7ea4:	ldr	x1, [sp, #40]
    7ea8:	bl	59fc <plugin_init@@Base+0xab0>
    7eac:	cmp	w0, #0x0
    7eb0:	cset	w0, eq  // eq = none
    7eb4:	and	w0, w0, #0xff
    7eb8:	cmp	w0, #0x0
    7ebc:	b.eq	7ec8 <plugin_init@@Base+0x2f7c>  // b.none
    7ec0:	mov	w19, #0x0                   	// #0
    7ec4:	b	7f2c <plugin_init@@Base+0x2fe0>
    7ec8:	add	x0, sp, #0x40
    7ecc:	bl	9cb4 <plugin_init@@Base+0x4d68>
    7ed0:	mov	x19, x0
    7ed4:	add	x0, sp, #0x38
    7ed8:	bl	59e4 <plugin_init@@Base+0xa98>
    7edc:	mov	x2, x0
    7ee0:	mov	x1, x19
    7ee4:	ldr	x0, [sp, #40]
    7ee8:	bl	4c78 <__gmon_start__@plt+0x1b38>
    7eec:	str	x0, [sp, #72]
    7ef0:	mov	w1, #0x52                  	// #82
    7ef4:	ldr	x0, [sp, #40]
    7ef8:	bl	b168 <plugin_init@@Base+0x621c>
    7efc:	cmp	w0, #0x0
    7f00:	cset	w0, eq  // eq = none
    7f04:	and	w0, w0, #0xff
    7f08:	cmp	w0, #0x0
    7f0c:	b.eq	7f18 <plugin_init@@Base+0x2fcc>  // b.none
    7f10:	mov	w19, #0x0                   	// #0
    7f14:	b	7f2c <plugin_init@@Base+0x2fe0>
    7f18:	ldr	x1, [sp, #72]
    7f1c:	ldr	x0, [sp, #40]
    7f20:	bl	9ce4 <plugin_init@@Base+0x4d98>
    7f24:	mov	w19, w0
    7f28:	nop
    7f2c:	add	x0, sp, #0x38
    7f30:	bl	59b0 <plugin_init@@Base+0xa64>
    7f34:	add	x0, sp, #0x40
    7f38:	bl	9be8 <plugin_init@@Base+0x4c9c>
    7f3c:	mov	w0, w19
    7f40:	b	7f60 <plugin_init@@Base+0x3014>
    7f44:	mov	x19, x0
    7f48:	add	x0, sp, #0x38
    7f4c:	bl	59b0 <plugin_init@@Base+0xa64>
    7f50:	add	x0, sp, #0x40
    7f54:	bl	9be8 <plugin_init@@Base+0x4c9c>
    7f58:	mov	x0, x19
    7f5c:	bl	3100 <_Unwind_Resume@plt>
    7f60:	ldr	x19, [sp, #16]
    7f64:	ldp	x29, x30, [sp], #80
    7f68:	ret
    7f6c:	stp	x29, x30, [sp, #-80]!
    7f70:	mov	x29, sp
    7f74:	str	x19, [sp, #16]
    7f78:	str	x0, [sp, #40]
    7f7c:	add	x0, sp, #0x40
    7f80:	bl	9bd4 <plugin_init@@Base+0x4c88>
    7f84:	add	x0, sp, #0x38
    7f88:	bl	9dd8 <plugin_init@@Base+0x4e8c>
    7f8c:	mov	x1, #0x2                   	// #2
    7f90:	ldr	x0, [sp, #40]
    7f94:	bl	b724 <plugin_init@@Base+0x67d8>
    7f98:	cmp	w0, #0x0
    7f9c:	cset	w0, eq  // eq = none
    7fa0:	and	w0, w0, #0xff
    7fa4:	cmp	w0, #0x0
    7fa8:	b.eq	7fb4 <plugin_init@@Base+0x3068>  // b.none
    7fac:	mov	w19, #0x0                   	// #0
    7fb0:	b	8068 <plugin_init@@Base+0x311c>
    7fb4:	add	x0, sp, #0x40
    7fb8:	ldr	x1, [sp, #40]
    7fbc:	bl	9c4c <plugin_init@@Base+0x4d00>
    7fc0:	cmp	w0, #0x0
    7fc4:	cset	w0, eq  // eq = none
    7fc8:	and	w0, w0, #0xff
    7fcc:	cmp	w0, #0x0
    7fd0:	b.eq	7fdc <plugin_init@@Base+0x3090>  // b.none
    7fd4:	mov	w19, #0x0                   	// #0
    7fd8:	b	8068 <plugin_init@@Base+0x311c>
    7fdc:	add	x0, sp, #0x38
    7fe0:	ldr	x1, [sp, #40]
    7fe4:	bl	9e00 <plugin_init@@Base+0x4eb4>
    7fe8:	cmp	w0, #0x0
    7fec:	cset	w0, eq  // eq = none
    7ff0:	and	w0, w0, #0xff
    7ff4:	cmp	w0, #0x0
    7ff8:	b.eq	8004 <plugin_init@@Base+0x30b8>  // b.none
    7ffc:	mov	w19, #0x0                   	// #0
    8000:	b	8068 <plugin_init@@Base+0x311c>
    8004:	add	x0, sp, #0x40
    8008:	bl	9cb4 <plugin_init@@Base+0x4d68>
    800c:	mov	x19, x0
    8010:	add	x0, sp, #0x38
    8014:	bl	9e28 <plugin_init@@Base+0x4edc>
    8018:	mov	w2, w0
    801c:	mov	x1, x19
    8020:	ldr	x0, [sp, #40]
    8024:	bl	4cf8 <__gmon_start__@plt+0x1bb8>
    8028:	str	x0, [sp, #72]
    802c:	mov	w1, #0x52                  	// #82
    8030:	ldr	x0, [sp, #40]
    8034:	bl	b168 <plugin_init@@Base+0x621c>
    8038:	cmp	w0, #0x0
    803c:	cset	w0, eq  // eq = none
    8040:	and	w0, w0, #0xff
    8044:	cmp	w0, #0x0
    8048:	b.eq	8054 <plugin_init@@Base+0x3108>  // b.none
    804c:	mov	w19, #0x0                   	// #0
    8050:	b	8068 <plugin_init@@Base+0x311c>
    8054:	ldr	x1, [sp, #72]
    8058:	ldr	x0, [sp, #40]
    805c:	bl	9ce4 <plugin_init@@Base+0x4d98>
    8060:	mov	w19, w0
    8064:	nop
    8068:	add	x0, sp, #0x38
    806c:	bl	9dec <plugin_init@@Base+0x4ea0>
    8070:	add	x0, sp, #0x40
    8074:	bl	9be8 <plugin_init@@Base+0x4c9c>
    8078:	mov	w0, w19
    807c:	b	809c <plugin_init@@Base+0x3150>
    8080:	mov	x19, x0
    8084:	add	x0, sp, #0x38
    8088:	bl	9dec <plugin_init@@Base+0x4ea0>
    808c:	add	x0, sp, #0x40
    8090:	bl	9be8 <plugin_init@@Base+0x4c9c>
    8094:	mov	x0, x19
    8098:	bl	3100 <_Unwind_Resume@plt>
    809c:	ldr	x19, [sp, #16]
    80a0:	ldp	x29, x30, [sp], #80
    80a4:	ret
    80a8:	stp	x29, x30, [sp, #-64]!
    80ac:	mov	x29, sp
    80b0:	str	x19, [sp, #16]
    80b4:	str	x0, [sp, #40]
    80b8:	add	x0, sp, #0x30
    80bc:	bl	9bd4 <plugin_init@@Base+0x4c88>
    80c0:	mov	x1, #0x1                   	// #1
    80c4:	ldr	x0, [sp, #40]
    80c8:	bl	b724 <plugin_init@@Base+0x67d8>
    80cc:	cmp	w0, #0x0
    80d0:	cset	w0, eq  // eq = none
    80d4:	and	w0, w0, #0xff
    80d8:	cmp	w0, #0x0
    80dc:	b.eq	80e8 <plugin_init@@Base+0x319c>  // b.none
    80e0:	mov	w19, #0x0                   	// #0
    80e4:	b	8164 <plugin_init@@Base+0x3218>
    80e8:	add	x0, sp, #0x30
    80ec:	ldr	x1, [sp, #40]
    80f0:	bl	9c4c <plugin_init@@Base+0x4d00>
    80f4:	cmp	w0, #0x0
    80f8:	cset	w0, eq  // eq = none
    80fc:	and	w0, w0, #0xff
    8100:	cmp	w0, #0x0
    8104:	b.eq	8110 <plugin_init@@Base+0x31c4>  // b.none
    8108:	mov	w19, #0x0                   	// #0
    810c:	b	8164 <plugin_init@@Base+0x3218>
    8110:	add	x0, sp, #0x30
    8114:	bl	9cb4 <plugin_init@@Base+0x4d68>
    8118:	mov	x1, x0
    811c:	ldr	x0, [sp, #40]
    8120:	bl	4d88 <__gmon_start__@plt+0x1c48>
    8124:	str	x0, [sp, #56]
    8128:	mov	w1, #0x52                  	// #82
    812c:	ldr	x0, [sp, #40]
    8130:	bl	b168 <plugin_init@@Base+0x621c>
    8134:	cmp	w0, #0x0
    8138:	cset	w0, eq  // eq = none
    813c:	and	w0, w0, #0xff
    8140:	cmp	w0, #0x0
    8144:	b.eq	8150 <plugin_init@@Base+0x3204>  // b.none
    8148:	mov	w19, #0x0                   	// #0
    814c:	b	8164 <plugin_init@@Base+0x3218>
    8150:	ldr	x1, [sp, #56]
    8154:	ldr	x0, [sp, #40]
    8158:	bl	9ce4 <plugin_init@@Base+0x4d98>
    815c:	mov	w19, w0
    8160:	nop
    8164:	add	x0, sp, #0x30
    8168:	bl	9be8 <plugin_init@@Base+0x4c9c>
    816c:	mov	w0, w19
    8170:	b	8188 <plugin_init@@Base+0x323c>
    8174:	mov	x19, x0
    8178:	add	x0, sp, #0x30
    817c:	bl	9be8 <plugin_init@@Base+0x4c9c>
    8180:	mov	x0, x19
    8184:	bl	3100 <_Unwind_Resume@plt>
    8188:	ldr	x19, [sp, #16]
    818c:	ldp	x29, x30, [sp], #64
    8190:	ret
    8194:	stp	x29, x30, [sp, #-80]!
    8198:	mov	x29, sp
    819c:	str	x19, [sp, #16]
    81a0:	str	x0, [sp, #40]
    81a4:	add	x0, sp, #0x40
    81a8:	bl	9bd4 <plugin_init@@Base+0x4c88>
    81ac:	add	x0, sp, #0x38
    81b0:	bl	9d08 <plugin_init@@Base+0x4dbc>
    81b4:	mov	x1, #0x2                   	// #2
    81b8:	ldr	x0, [sp, #40]
    81bc:	bl	b724 <plugin_init@@Base+0x67d8>
    81c0:	cmp	w0, #0x0
    81c4:	cset	w0, eq  // eq = none
    81c8:	and	w0, w0, #0xff
    81cc:	cmp	w0, #0x0
    81d0:	b.eq	81dc <plugin_init@@Base+0x3290>  // b.none
    81d4:	mov	w19, #0x0                   	// #0
    81d8:	b	8290 <plugin_init@@Base+0x3344>
    81dc:	add	x0, sp, #0x40
    81e0:	ldr	x1, [sp, #40]
    81e4:	bl	9c4c <plugin_init@@Base+0x4d00>
    81e8:	cmp	w0, #0x0
    81ec:	cset	w0, eq  // eq = none
    81f0:	and	w0, w0, #0xff
    81f4:	cmp	w0, #0x0
    81f8:	b.eq	8204 <plugin_init@@Base+0x32b8>  // b.none
    81fc:	mov	w19, #0x0                   	// #0
    8200:	b	8290 <plugin_init@@Base+0x3344>
    8204:	add	x0, sp, #0x38
    8208:	ldr	x1, [sp, #40]
    820c:	bl	9d30 <plugin_init@@Base+0x4de4>
    8210:	cmp	w0, #0x0
    8214:	cset	w0, eq  // eq = none
    8218:	and	w0, w0, #0xff
    821c:	cmp	w0, #0x0
    8220:	b.eq	822c <plugin_init@@Base+0x32e0>  // b.none
    8224:	mov	w19, #0x0                   	// #0
    8228:	b	8290 <plugin_init@@Base+0x3344>
    822c:	add	x0, sp, #0x40
    8230:	bl	9cb4 <plugin_init@@Base+0x4d68>
    8234:	mov	x19, x0
    8238:	add	x0, sp, #0x38
    823c:	bl	9d58 <plugin_init@@Base+0x4e0c>
    8240:	mov	w2, w0
    8244:	mov	x1, x19
    8248:	ldr	x0, [sp, #40]
    824c:	bl	4dc8 <__gmon_start__@plt+0x1c88>
    8250:	str	x0, [sp, #72]
    8254:	mov	w1, #0x52                  	// #82
    8258:	ldr	x0, [sp, #40]
    825c:	bl	b168 <plugin_init@@Base+0x621c>
    8260:	cmp	w0, #0x0
    8264:	cset	w0, eq  // eq = none
    8268:	and	w0, w0, #0xff
    826c:	cmp	w0, #0x0
    8270:	b.eq	827c <plugin_init@@Base+0x3330>  // b.none
    8274:	mov	w19, #0x0                   	// #0
    8278:	b	8290 <plugin_init@@Base+0x3344>
    827c:	ldr	x1, [sp, #72]
    8280:	ldr	x0, [sp, #40]
    8284:	bl	9ce4 <plugin_init@@Base+0x4d98>
    8288:	mov	w19, w0
    828c:	nop
    8290:	add	x0, sp, #0x38
    8294:	bl	9d1c <plugin_init@@Base+0x4dd0>
    8298:	add	x0, sp, #0x40
    829c:	bl	9be8 <plugin_init@@Base+0x4c9c>
    82a0:	mov	w0, w19
    82a4:	b	82c4 <plugin_init@@Base+0x3378>
    82a8:	mov	x19, x0
    82ac:	add	x0, sp, #0x38
    82b0:	bl	9d1c <plugin_init@@Base+0x4dd0>
    82b4:	add	x0, sp, #0x40
    82b8:	bl	9be8 <plugin_init@@Base+0x4c9c>
    82bc:	mov	x0, x19
    82c0:	bl	3100 <_Unwind_Resume@plt>
    82c4:	ldr	x19, [sp, #16]
    82c8:	ldp	x29, x30, [sp], #80
    82cc:	ret
    82d0:	stp	x29, x30, [sp, #-112]!
    82d4:	mov	x29, sp
    82d8:	stp	x19, x20, [sp, #16]
    82dc:	stp	x21, x22, [sp, #32]
    82e0:	str	x0, [sp, #56]
    82e4:	add	x0, sp, #0x60
    82e8:	bl	9bd4 <plugin_init@@Base+0x4c88>
    82ec:	add	x0, sp, #0x58
    82f0:	bl	5994 <plugin_init@@Base+0xa48>
    82f4:	add	x0, sp, #0x50
    82f8:	bl	9d70 <plugin_init@@Base+0x4e24>
    82fc:	add	x0, sp, #0x48
    8300:	bl	5994 <plugin_init@@Base+0xa48>
    8304:	add	x0, sp, #0x40
    8308:	bl	9bfc <plugin_init@@Base+0x4cb0>
    830c:	mov	x1, #0x5                   	// #5
    8310:	ldr	x0, [sp, #56]
    8314:	bl	b724 <plugin_init@@Base+0x67d8>
    8318:	cmp	w0, #0x0
    831c:	cset	w0, eq  // eq = none
    8320:	and	w0, w0, #0xff
    8324:	cmp	w0, #0x0
    8328:	b.eq	8334 <plugin_init@@Base+0x33e8>  // b.none
    832c:	mov	w19, #0x0                   	// #0
    8330:	b	8490 <plugin_init@@Base+0x3544>
    8334:	add	x0, sp, #0x60
    8338:	ldr	x1, [sp, #56]
    833c:	bl	9c4c <plugin_init@@Base+0x4d00>
    8340:	cmp	w0, #0x0
    8344:	cset	w0, eq  // eq = none
    8348:	and	w0, w0, #0xff
    834c:	cmp	w0, #0x0
    8350:	b.eq	835c <plugin_init@@Base+0x3410>  // b.none
    8354:	mov	w19, #0x0                   	// #0
    8358:	b	8490 <plugin_init@@Base+0x3544>
    835c:	add	x0, sp, #0x58
    8360:	ldr	x1, [sp, #56]
    8364:	bl	59fc <plugin_init@@Base+0xab0>
    8368:	cmp	w0, #0x0
    836c:	cset	w0, eq  // eq = none
    8370:	and	w0, w0, #0xff
    8374:	cmp	w0, #0x0
    8378:	b.eq	8384 <plugin_init@@Base+0x3438>  // b.none
    837c:	mov	w19, #0x0                   	// #0
    8380:	b	8490 <plugin_init@@Base+0x3544>
    8384:	add	x0, sp, #0x50
    8388:	ldr	x1, [sp, #56]
    838c:	bl	9d98 <plugin_init@@Base+0x4e4c>
    8390:	cmp	w0, #0x0
    8394:	cset	w0, eq  // eq = none
    8398:	and	w0, w0, #0xff
    839c:	cmp	w0, #0x0
    83a0:	b.eq	83ac <plugin_init@@Base+0x3460>  // b.none
    83a4:	mov	w19, #0x0                   	// #0
    83a8:	b	8490 <plugin_init@@Base+0x3544>
    83ac:	add	x0, sp, #0x48
    83b0:	ldr	x1, [sp, #56]
    83b4:	bl	59fc <plugin_init@@Base+0xab0>
    83b8:	cmp	w0, #0x0
    83bc:	cset	w0, eq  // eq = none
    83c0:	and	w0, w0, #0xff
    83c4:	cmp	w0, #0x0
    83c8:	b.eq	83d4 <plugin_init@@Base+0x3488>  // b.none
    83cc:	mov	w19, #0x0                   	// #0
    83d0:	b	8490 <plugin_init@@Base+0x3544>
    83d4:	add	x0, sp, #0x40
    83d8:	ldr	x1, [sp, #56]
    83dc:	bl	9c74 <plugin_init@@Base+0x4d28>
    83e0:	cmp	w0, #0x0
    83e4:	cset	w0, eq  // eq = none
    83e8:	and	w0, w0, #0xff
    83ec:	cmp	w0, #0x0
    83f0:	b.eq	83fc <plugin_init@@Base+0x34b0>  // b.none
    83f4:	mov	w19, #0x0                   	// #0
    83f8:	b	8490 <plugin_init@@Base+0x3544>
    83fc:	add	x0, sp, #0x60
    8400:	bl	9cb4 <plugin_init@@Base+0x4d68>
    8404:	mov	x19, x0
    8408:	add	x0, sp, #0x58
    840c:	bl	59e4 <plugin_init@@Base+0xa98>
    8410:	mov	x20, x0
    8414:	add	x0, sp, #0x50
    8418:	bl	9dc0 <plugin_init@@Base+0x4e74>
    841c:	mov	x21, x0
    8420:	add	x0, sp, #0x48
    8424:	bl	59e4 <plugin_init@@Base+0xa98>
    8428:	mov	x22, x0
    842c:	add	x0, sp, #0x40
    8430:	bl	9ccc <plugin_init@@Base+0x4d80>
    8434:	mov	w5, w0
    8438:	mov	x4, x22
    843c:	mov	x3, x21
    8440:	mov	x2, x20
    8444:	mov	x1, x19
    8448:	ldr	x0, [sp, #56]
    844c:	bl	4e28 <__gmon_start__@plt+0x1ce8>
    8450:	str	w0, [sp, #108]
    8454:	mov	w1, #0x52                  	// #82
    8458:	ldr	x0, [sp, #56]
    845c:	bl	b168 <plugin_init@@Base+0x621c>
    8460:	cmp	w0, #0x0
    8464:	cset	w0, eq  // eq = none
    8468:	and	w0, w0, #0xff
    846c:	cmp	w0, #0x0
    8470:	b.eq	847c <plugin_init@@Base+0x3530>  // b.none
    8474:	mov	w19, #0x0                   	// #0
    8478:	b	8490 <plugin_init@@Base+0x3544>
    847c:	ldr	w1, [sp, #108]
    8480:	ldr	x0, [sp, #56]
    8484:	bl	9674 <plugin_init@@Base+0x4728>
    8488:	mov	w19, w0
    848c:	nop
    8490:	add	x0, sp, #0x40
    8494:	bl	9c10 <plugin_init@@Base+0x4cc4>
    8498:	add	x0, sp, #0x48
    849c:	bl	59b0 <plugin_init@@Base+0xa64>
    84a0:	add	x0, sp, #0x50
    84a4:	bl	9d84 <plugin_init@@Base+0x4e38>
    84a8:	add	x0, sp, #0x58
    84ac:	bl	59b0 <plugin_init@@Base+0xa64>
    84b0:	add	x0, sp, #0x60
    84b4:	bl	9be8 <plugin_init@@Base+0x4c9c>
    84b8:	mov	w0, w19
    84bc:	b	84f4 <plugin_init@@Base+0x35a8>
    84c0:	mov	x19, x0
    84c4:	add	x0, sp, #0x40
    84c8:	bl	9c10 <plugin_init@@Base+0x4cc4>
    84cc:	add	x0, sp, #0x48
    84d0:	bl	59b0 <plugin_init@@Base+0xa64>
    84d4:	add	x0, sp, #0x50
    84d8:	bl	9d84 <plugin_init@@Base+0x4e38>
    84dc:	add	x0, sp, #0x58
    84e0:	bl	59b0 <plugin_init@@Base+0xa64>
    84e4:	add	x0, sp, #0x60
    84e8:	bl	9be8 <plugin_init@@Base+0x4c9c>
    84ec:	mov	x0, x19
    84f0:	bl	3100 <_Unwind_Resume@plt>
    84f4:	ldp	x19, x20, [sp, #16]
    84f8:	ldp	x21, x22, [sp, #32]
    84fc:	ldp	x29, x30, [sp], #112
    8500:	ret
    8504:	stp	x29, x30, [sp, #-64]!
    8508:	mov	x29, sp
    850c:	str	x19, [sp, #16]
    8510:	str	x0, [sp, #40]
    8514:	add	x0, sp, #0x30
    8518:	bl	5994 <plugin_init@@Base+0xa48>
    851c:	mov	x1, #0x1                   	// #1
    8520:	ldr	x0, [sp, #40]
    8524:	bl	b724 <plugin_init@@Base+0x67d8>
    8528:	cmp	w0, #0x0
    852c:	cset	w0, eq  // eq = none
    8530:	and	w0, w0, #0xff
    8534:	cmp	w0, #0x0
    8538:	b.eq	8544 <plugin_init@@Base+0x35f8>  // b.none
    853c:	mov	w19, #0x0                   	// #0
    8540:	b	85c0 <plugin_init@@Base+0x3674>
    8544:	add	x0, sp, #0x30
    8548:	ldr	x1, [sp, #40]
    854c:	bl	59fc <plugin_init@@Base+0xab0>
    8550:	cmp	w0, #0x0
    8554:	cset	w0, eq  // eq = none
    8558:	and	w0, w0, #0xff
    855c:	cmp	w0, #0x0
    8560:	b.eq	856c <plugin_init@@Base+0x3620>  // b.none
    8564:	mov	w19, #0x0                   	// #0
    8568:	b	85c0 <plugin_init@@Base+0x3674>
    856c:	add	x0, sp, #0x30
    8570:	bl	59e4 <plugin_init@@Base+0xa98>
    8574:	mov	x1, x0
    8578:	ldr	x0, [sp, #40]
    857c:	bl	4ed4 <__gmon_start__@plt+0x1d94>
    8580:	str	x0, [sp, #56]
    8584:	mov	w1, #0x52                  	// #82
    8588:	ldr	x0, [sp, #40]
    858c:	bl	b168 <plugin_init@@Base+0x621c>
    8590:	cmp	w0, #0x0
    8594:	cset	w0, eq  // eq = none
    8598:	and	w0, w0, #0xff
    859c:	cmp	w0, #0x0
    85a0:	b.eq	85ac <plugin_init@@Base+0x3660>  // b.none
    85a4:	mov	w19, #0x0                   	// #0
    85a8:	b	85c0 <plugin_init@@Base+0x3674>
    85ac:	ldr	x1, [sp, #56]
    85b0:	ldr	x0, [sp, #40]
    85b4:	bl	9ce4 <plugin_init@@Base+0x4d98>
    85b8:	mov	w19, w0
    85bc:	nop
    85c0:	add	x0, sp, #0x30
    85c4:	bl	59b0 <plugin_init@@Base+0xa64>
    85c8:	mov	w0, w19
    85cc:	b	85e4 <plugin_init@@Base+0x3698>
    85d0:	mov	x19, x0
    85d4:	add	x0, sp, #0x30
    85d8:	bl	59b0 <plugin_init@@Base+0xa64>
    85dc:	mov	x0, x19
    85e0:	bl	3100 <_Unwind_Resume@plt>
    85e4:	ldr	x19, [sp, #16]
    85e8:	ldp	x29, x30, [sp], #64
    85ec:	ret
    85f0:	stp	x29, x30, [sp, #-80]!
    85f4:	mov	x29, sp
    85f8:	stp	x19, x20, [sp, #16]
    85fc:	str	x0, [sp, #40]
    8600:	add	x0, sp, #0x40
    8604:	bl	9d08 <plugin_init@@Base+0x4dbc>
    8608:	add	x0, sp, #0x38
    860c:	bl	9d70 <plugin_init@@Base+0x4e24>
    8610:	add	x0, sp, #0x30
    8614:	bl	5994 <plugin_init@@Base+0xa48>
    8618:	mov	x1, #0x3                   	// #3
    861c:	ldr	x0, [sp, #40]
    8620:	bl	b724 <plugin_init@@Base+0x67d8>
    8624:	cmp	w0, #0x0
    8628:	cset	w0, eq  // eq = none
    862c:	and	w0, w0, #0xff
    8630:	cmp	w0, #0x0
    8634:	b.eq	8640 <plugin_init@@Base+0x36f4>  // b.none
    8638:	mov	w19, #0x0                   	// #0
    863c:	b	872c <plugin_init@@Base+0x37e0>
    8640:	add	x0, sp, #0x40
    8644:	ldr	x1, [sp, #40]
    8648:	bl	9d30 <plugin_init@@Base+0x4de4>
    864c:	cmp	w0, #0x0
    8650:	cset	w0, eq  // eq = none
    8654:	and	w0, w0, #0xff
    8658:	cmp	w0, #0x0
    865c:	b.eq	8668 <plugin_init@@Base+0x371c>  // b.none
    8660:	mov	w19, #0x0                   	// #0
    8664:	b	872c <plugin_init@@Base+0x37e0>
    8668:	add	x0, sp, #0x38
    866c:	ldr	x1, [sp, #40]
    8670:	bl	9d98 <plugin_init@@Base+0x4e4c>
    8674:	cmp	w0, #0x0
    8678:	cset	w0, eq  // eq = none
    867c:	and	w0, w0, #0xff
    8680:	cmp	w0, #0x0
    8684:	b.eq	8690 <plugin_init@@Base+0x3744>  // b.none
    8688:	mov	w19, #0x0                   	// #0
    868c:	b	872c <plugin_init@@Base+0x37e0>
    8690:	add	x0, sp, #0x30
    8694:	ldr	x1, [sp, #40]
    8698:	bl	59fc <plugin_init@@Base+0xab0>
    869c:	cmp	w0, #0x0
    86a0:	cset	w0, eq  // eq = none
    86a4:	and	w0, w0, #0xff
    86a8:	cmp	w0, #0x0
    86ac:	b.eq	86b8 <plugin_init@@Base+0x376c>  // b.none
    86b0:	mov	w19, #0x0                   	// #0
    86b4:	b	872c <plugin_init@@Base+0x37e0>
    86b8:	add	x0, sp, #0x40
    86bc:	bl	9d58 <plugin_init@@Base+0x4e0c>
    86c0:	mov	w19, w0
    86c4:	add	x0, sp, #0x38
    86c8:	bl	9dc0 <plugin_init@@Base+0x4e74>
    86cc:	mov	x20, x0
    86d0:	add	x0, sp, #0x30
    86d4:	bl	59e4 <plugin_init@@Base+0xa98>
    86d8:	mov	x3, x0
    86dc:	mov	x2, x20
    86e0:	mov	w1, w19
    86e4:	ldr	x0, [sp, #40]
    86e8:	bl	4934 <__gmon_start__@plt+0x17f4>
    86ec:	str	x0, [sp, #72]
    86f0:	mov	w1, #0x52                  	// #82
    86f4:	ldr	x0, [sp, #40]
    86f8:	bl	b168 <plugin_init@@Base+0x621c>
    86fc:	cmp	w0, #0x0
    8700:	cset	w0, eq  // eq = none
    8704:	and	w0, w0, #0xff
    8708:	cmp	w0, #0x0
    870c:	b.eq	8718 <plugin_init@@Base+0x37cc>  // b.none
    8710:	mov	w19, #0x0                   	// #0
    8714:	b	872c <plugin_init@@Base+0x37e0>
    8718:	ldr	x1, [sp, #72]
    871c:	ldr	x0, [sp, #40]
    8720:	bl	9ce4 <plugin_init@@Base+0x4d98>
    8724:	mov	w19, w0
    8728:	nop
    872c:	add	x0, sp, #0x30
    8730:	bl	59b0 <plugin_init@@Base+0xa64>
    8734:	add	x0, sp, #0x38
    8738:	bl	9d84 <plugin_init@@Base+0x4e38>
    873c:	add	x0, sp, #0x40
    8740:	bl	9d1c <plugin_init@@Base+0x4dd0>
    8744:	mov	w0, w19
    8748:	b	8770 <plugin_init@@Base+0x3824>
    874c:	mov	x19, x0
    8750:	add	x0, sp, #0x30
    8754:	bl	59b0 <plugin_init@@Base+0xa64>
    8758:	add	x0, sp, #0x38
    875c:	bl	9d84 <plugin_init@@Base+0x4e38>
    8760:	add	x0, sp, #0x40
    8764:	bl	9d1c <plugin_init@@Base+0x4dd0>
    8768:	mov	x0, x19
    876c:	bl	3100 <_Unwind_Resume@plt>
    8770:	ldp	x19, x20, [sp, #16]
    8774:	ldp	x29, x30, [sp], #80
    8778:	ret
    877c:	stp	x29, x30, [sp, #-48]!
    8780:	mov	x29, sp
    8784:	str	x0, [sp, #24]
    8788:	mov	x1, #0x0                   	// #0
    878c:	ldr	x0, [sp, #24]
    8790:	bl	b724 <plugin_init@@Base+0x67d8>
    8794:	cmp	w0, #0x0
    8798:	cset	w0, eq  // eq = none
    879c:	and	w0, w0, #0xff
    87a0:	cmp	w0, #0x0
    87a4:	b.eq	87b0 <plugin_init@@Base+0x3864>  // b.none
    87a8:	mov	w0, #0x0                   	// #0
    87ac:	b	87f4 <plugin_init@@Base+0x38a8>
    87b0:	ldr	x0, [sp, #24]
    87b4:	bl	49cc <__gmon_start__@plt+0x188c>
    87b8:	str	x0, [sp, #40]
    87bc:	mov	w1, #0x52                  	// #82
    87c0:	ldr	x0, [sp, #24]
    87c4:	bl	b168 <plugin_init@@Base+0x621c>
    87c8:	cmp	w0, #0x0
    87cc:	cset	w0, eq  // eq = none
    87d0:	and	w0, w0, #0xff
    87d4:	cmp	w0, #0x0
    87d8:	b.eq	87e4 <plugin_init@@Base+0x3898>  // b.none
    87dc:	mov	w0, #0x0                   	// #0
    87e0:	b	87f4 <plugin_init@@Base+0x38a8>
    87e4:	ldr	x1, [sp, #40]
    87e8:	ldr	x0, [sp, #24]
    87ec:	bl	9ce4 <plugin_init@@Base+0x4d98>
    87f0:	nop
    87f4:	ldp	x29, x30, [sp], #48
    87f8:	ret
    87fc:	stp	x29, x30, [sp, #-80]!
    8800:	mov	x29, sp
    8804:	str	x19, [sp, #16]
    8808:	str	x0, [sp, #40]
    880c:	add	x0, sp, #0x40
    8810:	bl	9d70 <plugin_init@@Base+0x4e24>
    8814:	add	x0, sp, #0x38
    8818:	bl	5994 <plugin_init@@Base+0xa48>
    881c:	mov	x1, #0x2                   	// #2
    8820:	ldr	x0, [sp, #40]
    8824:	bl	b724 <plugin_init@@Base+0x67d8>
    8828:	cmp	w0, #0x0
    882c:	cset	w0, eq  // eq = none
    8830:	and	w0, w0, #0xff
    8834:	cmp	w0, #0x0
    8838:	b.eq	8844 <plugin_init@@Base+0x38f8>  // b.none
    883c:	mov	w19, #0x0                   	// #0
    8840:	b	88f8 <plugin_init@@Base+0x39ac>
    8844:	add	x0, sp, #0x40
    8848:	ldr	x1, [sp, #40]
    884c:	bl	9d98 <plugin_init@@Base+0x4e4c>
    8850:	cmp	w0, #0x0
    8854:	cset	w0, eq  // eq = none
    8858:	and	w0, w0, #0xff
    885c:	cmp	w0, #0x0
    8860:	b.eq	886c <plugin_init@@Base+0x3920>  // b.none
    8864:	mov	w19, #0x0                   	// #0
    8868:	b	88f8 <plugin_init@@Base+0x39ac>
    886c:	add	x0, sp, #0x38
    8870:	ldr	x1, [sp, #40]
    8874:	bl	59fc <plugin_init@@Base+0xab0>
    8878:	cmp	w0, #0x0
    887c:	cset	w0, eq  // eq = none
    8880:	and	w0, w0, #0xff
    8884:	cmp	w0, #0x0
    8888:	b.eq	8894 <plugin_init@@Base+0x3948>  // b.none
    888c:	mov	w19, #0x0                   	// #0
    8890:	b	88f8 <plugin_init@@Base+0x39ac>
    8894:	add	x0, sp, #0x40
    8898:	bl	9dc0 <plugin_init@@Base+0x4e74>
    889c:	mov	x19, x0
    88a0:	add	x0, sp, #0x38
    88a4:	bl	59e4 <plugin_init@@Base+0xa98>
    88a8:	mov	x2, x0
    88ac:	mov	x1, x19
    88b0:	ldr	x0, [sp, #40]
    88b4:	bl	4adc <__gmon_start__@plt+0x199c>
    88b8:	str	x0, [sp, #72]
    88bc:	mov	w1, #0x52                  	// #82
    88c0:	ldr	x0, [sp, #40]
    88c4:	bl	b168 <plugin_init@@Base+0x621c>
    88c8:	cmp	w0, #0x0
    88cc:	cset	w0, eq  // eq = none
    88d0:	and	w0, w0, #0xff
    88d4:	cmp	w0, #0x0
    88d8:	b.eq	88e4 <plugin_init@@Base+0x3998>  // b.none
    88dc:	mov	w19, #0x0                   	// #0
    88e0:	b	88f8 <plugin_init@@Base+0x39ac>
    88e4:	ldr	x1, [sp, #72]
    88e8:	ldr	x0, [sp, #40]
    88ec:	bl	9ce4 <plugin_init@@Base+0x4d98>
    88f0:	mov	w19, w0
    88f4:	nop
    88f8:	add	x0, sp, #0x38
    88fc:	bl	59b0 <plugin_init@@Base+0xa64>
    8900:	add	x0, sp, #0x40
    8904:	bl	9d84 <plugin_init@@Base+0x4e38>
    8908:	mov	w0, w19
    890c:	b	892c <plugin_init@@Base+0x39e0>
    8910:	mov	x19, x0
    8914:	add	x0, sp, #0x38
    8918:	bl	59b0 <plugin_init@@Base+0xa64>
    891c:	add	x0, sp, #0x40
    8920:	bl	9d84 <plugin_init@@Base+0x4e38>
    8924:	mov	x0, x19
    8928:	bl	3100 <_Unwind_Resume@plt>
    892c:	ldr	x19, [sp, #16]
    8930:	ldp	x29, x30, [sp], #80
    8934:	ret
    8938:	sub	sp, sp, #0x10
    893c:	str	x0, [sp, #8]
    8940:	mov	w0, #0x0                   	// #0
    8944:	add	sp, sp, #0x10
    8948:	ret
    894c:	sub	sp, sp, #0x10
    8950:	str	x0, [sp, #8]
    8954:	str	x1, [sp]
    8958:	ldr	x0, [sp, #8]
    895c:	ldr	x1, [sp]
    8960:	str	x1, [x0]
    8964:	nop
    8968:	add	sp, sp, #0x10
    896c:	ret
    8970:	stp	x29, x30, [sp, #-128]!
    8974:	mov	x29, sp
    8978:	str	x19, [sp, #16]
    897c:	str	x0, [sp, #40]
    8980:	str	x1, [sp, #32]
    8984:	ldr	x1, [sp, #32]
    8988:	ldr	x0, [sp, #40]
    898c:	bl	8a5c <plugin_init@@Base+0x3b10>
    8990:	str	w0, [sp, #124]
    8994:	add	x0, sp, #0x58
    8998:	ldr	w2, [sp, #124]
    899c:	ldr	x1, [sp, #40]
    89a0:	bl	8a90 <plugin_init@@Base+0x3b44>
    89a4:	add	x0, sp, #0x38
    89a8:	ldr	w2, [sp, #124]
    89ac:	ldr	x1, [sp, #32]
    89b0:	bl	8a90 <plugin_init@@Base+0x3b44>
    89b4:	add	x0, sp, #0x38
    89b8:	bl	8ac0 <plugin_init@@Base+0x3b74>
    89bc:	and	w0, w0, #0xff
    89c0:	cmp	w0, #0x0
    89c4:	b.eq	8a28 <plugin_init@@Base+0x3adc>  // b.none
    89c8:	add	x0, sp, #0x58
    89cc:	bl	8ac0 <plugin_init@@Base+0x3b74>
    89d0:	and	w0, w0, #0xff
    89d4:	cmp	w0, #0x0
    89d8:	b.eq	8a00 <plugin_init@@Base+0x3ab4>  // b.none
    89dc:	add	x0, sp, #0x58
    89e0:	bl	8b54 <plugin_init@@Base+0x3c08>
    89e4:	mov	x19, x0
    89e8:	add	x0, sp, #0x38
    89ec:	bl	8b54 <plugin_init@@Base+0x3c08>
    89f0:	cmp	x19, x0
    89f4:	cset	w0, lt  // lt = tstop
    89f8:	and	w0, w0, #0xff
    89fc:	b	8a50 <plugin_init@@Base+0x3b04>
    8a00:	add	x0, sp, #0x58
    8a04:	mov	w1, #0x0                   	// #0
    8a08:	bl	8afc <plugin_init@@Base+0x3bb0>
    8a0c:	and	w0, w0, #0xff
    8a10:	cmp	w0, #0x0
    8a14:	b.eq	8a20 <plugin_init@@Base+0x3ad4>  // b.none
    8a18:	mov	w0, #0x1                   	// #1
    8a1c:	b	8a50 <plugin_init@@Base+0x3b04>
    8a20:	mov	w0, #0x0                   	// #0
    8a24:	b	8a50 <plugin_init@@Base+0x3b04>
    8a28:	ldr	x0, [sp, #88]
    8a2c:	ldr	w1, [sp, #96]
    8a30:	ldr	x2, [sp, #56]
    8a34:	ldr	w3, [sp, #64]
    8a38:	mov	w4, w3
    8a3c:	mov	x3, x2
    8a40:	ldr	w2, [sp, #124]
    8a44:	bl	2d00 <_ZN2wi11lts_p_largeEPKljjS1_j@plt>
    8a48:	and	w0, w0, #0xff
    8a4c:	nop
    8a50:	ldr	x19, [sp, #16]
    8a54:	ldp	x29, x30, [sp], #128
    8a58:	ret
    8a5c:	stp	x29, x30, [sp, #-128]!
    8a60:	mov	x29, sp
    8a64:	str	x0, [sp, #24]
    8a68:	str	x1, [sp, #16]
    8a6c:	add	x0, sp, #0x28
    8a70:	mov	x8, x0
    8a74:	ldr	x1, [sp, #16]
    8a78:	ldr	x0, [sp, #24]
    8a7c:	bl	9e40 <plugin_init@@Base+0x4ef4>
    8a80:	add	x0, sp, #0x28
    8a84:	bl	9e64 <plugin_init@@Base+0x4f18>
    8a88:	ldp	x29, x30, [sp], #128
    8a8c:	ret
    8a90:	stp	x29, x30, [sp, #-48]!
    8a94:	mov	x29, sp
    8a98:	str	x0, [sp, #40]
    8a9c:	str	x1, [sp, #32]
    8aa0:	str	w2, [sp, #28]
    8aa4:	ldr	x0, [sp, #40]
    8aa8:	ldr	w2, [sp, #28]
    8aac:	ldr	x1, [sp, #32]
    8ab0:	bl	9e80 <plugin_init@@Base+0x4f34>
    8ab4:	nop
    8ab8:	ldp	x29, x30, [sp], #48
    8abc:	ret
    8ac0:	sub	sp, sp, #0x30
    8ac4:	str	x0, [sp, #8]
    8ac8:	ldr	x0, [sp, #8]
    8acc:	add	x2, sp, #0x10
    8ad0:	mov	x3, x0
    8ad4:	ldp	x0, x1, [x3]
    8ad8:	stp	x0, x1, [x2]
    8adc:	ldp	x0, x1, [x3, #16]
    8ae0:	stp	x0, x1, [x2, #16]
    8ae4:	ldr	w0, [sp, #24]
    8ae8:	cmp	w0, #0x1
    8aec:	cset	w0, eq  // eq = none
    8af0:	and	w0, w0, #0xff
    8af4:	add	sp, sp, #0x30
    8af8:	ret
    8afc:	stp	x29, x30, [sp, #-64]!
    8b00:	mov	x29, sp
    8b04:	str	x0, [sp, #24]
    8b08:	str	w1, [sp, #20]
    8b0c:	ldr	x0, [sp, #24]
    8b10:	add	x2, sp, #0x20
    8b14:	mov	x3, x0
    8b18:	ldp	x0, x1, [x3]
    8b1c:	stp	x0, x1, [x2]
    8b20:	ldp	x0, x1, [x3, #16]
    8b24:	stp	x0, x1, [x2, #16]
    8b28:	ldr	w0, [sp, #20]
    8b2c:	cmp	w0, #0x1
    8b30:	b.ne	8b3c <plugin_init@@Base+0x3bf0>  // b.any
    8b34:	mov	w0, #0x0                   	// #0
    8b38:	b	8b4c <plugin_init@@Base+0x3c00>
    8b3c:	add	x0, sp, #0x20
    8b40:	bl	9ec4 <plugin_init@@Base+0x4f78>
    8b44:	lsr	x0, x0, #63
    8b48:	and	w0, w0, #0xff
    8b4c:	ldp	x29, x30, [sp], #64
    8b50:	ret
    8b54:	stp	x29, x30, [sp, #-32]!
    8b58:	mov	x29, sp
    8b5c:	str	x0, [sp, #24]
    8b60:	ldr	x0, [sp, #24]
    8b64:	bl	571c <plugin_init@@Base+0x7d0>
    8b68:	ldr	x0, [x0]
    8b6c:	ldp	x29, x30, [sp], #32
    8b70:	ret
    8b74:	stp	x29, x30, [sp, #-80]!
    8b78:	mov	x29, sp
    8b7c:	str	x0, [sp, #40]
    8b80:	str	x1, [sp, #32]
    8b84:	str	w2, [sp, #28]
    8b88:	str	w3, [sp, #24]
    8b8c:	ldr	w0, [sp, #24]
    8b90:	cmp	w0, #0x1
    8b94:	b.ne	8bc8 <plugin_init@@Base+0x3c7c>  // b.any
    8b98:	ldr	x0, [sp, #40]
    8b9c:	ldr	x1, [x0, #8]
    8ba0:	mov	x0, x1
    8ba4:	lsl	x0, x0, #1
    8ba8:	add	x1, x0, x1
    8bac:	ldr	x0, [sp, #40]
    8bb0:	ldr	x0, [x0, #16]
    8bb4:	lsl	x0, x0, #2
    8bb8:	cmp	x1, x0
    8bbc:	b.hi	8bc8 <plugin_init@@Base+0x3c7c>  // b.pmore
    8bc0:	ldr	x0, [sp, #40]
    8bc4:	bl	9f24 <plugin_init@@Base+0x4fd8>
    8bc8:	ldr	x0, [sp, #40]
    8bcc:	ldr	w0, [x0, #32]
    8bd0:	add	w1, w0, #0x1
    8bd4:	ldr	x0, [sp, #40]
    8bd8:	str	w1, [x0, #32]
    8bdc:	str	xzr, [sp, #72]
    8be0:	ldr	x0, [sp, #40]
    8be4:	ldr	w0, [x0, #40]
    8be8:	mov	w1, w0
    8bec:	ldr	w0, [sp, #28]
    8bf0:	bl	57bc <plugin_init@@Base+0x870>
    8bf4:	str	w0, [sp, #68]
    8bf8:	ldr	x0, [sp, #40]
    8bfc:	ldr	w0, [x0, #40]
    8c00:	mov	w1, w0
    8c04:	ldr	w0, [sp, #28]
    8c08:	bl	5810 <plugin_init@@Base+0x8c4>
    8c0c:	str	w0, [sp, #64]
    8c10:	ldr	x0, [sp, #40]
    8c14:	ldr	x1, [x0]
    8c18:	ldr	w0, [sp, #68]
    8c1c:	lsl	x0, x0, #3
    8c20:	add	x0, x1, x0
    8c24:	str	x0, [sp, #56]
    8c28:	ldr	x0, [sp, #40]
    8c2c:	ldr	x0, [x0, #8]
    8c30:	str	x0, [sp, #48]
    8c34:	ldr	x0, [sp, #56]
    8c38:	bl	92b8 <plugin_init@@Base+0x436c>
    8c3c:	and	w0, w0, #0xff
    8c40:	cmp	w0, #0x0
    8c44:	b.ne	8d88 <plugin_init@@Base+0x3e3c>  // b.any
    8c48:	ldr	x0, [sp, #56]
    8c4c:	bl	92dc <plugin_init@@Base+0x4390>
    8c50:	and	w0, w0, #0xff
    8c54:	cmp	w0, #0x0
    8c58:	b.eq	8c78 <plugin_init@@Base+0x3d2c>  // b.none
    8c5c:	ldr	x0, [sp, #40]
    8c60:	ldr	x1, [x0]
    8c64:	ldr	w0, [sp, #68]
    8c68:	lsl	x0, x0, #3
    8c6c:	add	x0, x1, x0
    8c70:	str	x0, [sp, #72]
    8c74:	b	8ca8 <plugin_init@@Base+0x3d5c>
    8c78:	ldr	x1, [sp, #32]
    8c7c:	ldr	x0, [sp, #56]
    8c80:	bl	a130 <plugin_init@@Base+0x51e4>
    8c84:	and	w0, w0, #0xff
    8c88:	cmp	w0, #0x0
    8c8c:	b.eq	8ca8 <plugin_init@@Base+0x3d5c>  // b.none
    8c90:	ldr	x0, [sp, #40]
    8c94:	ldr	x1, [x0]
    8c98:	ldr	w0, [sp, #68]
    8c9c:	lsl	x0, x0, #3
    8ca0:	add	x0, x1, x0
    8ca4:	b	8e00 <plugin_init@@Base+0x3eb4>
    8ca8:	ldr	x0, [sp, #40]
    8cac:	ldr	w0, [x0, #36]
    8cb0:	add	w1, w0, #0x1
    8cb4:	ldr	x0, [sp, #40]
    8cb8:	str	w1, [x0, #36]
    8cbc:	ldr	w1, [sp, #68]
    8cc0:	ldr	w0, [sp, #64]
    8cc4:	add	w0, w1, w0
    8cc8:	str	w0, [sp, #68]
    8ccc:	ldr	w0, [sp, #68]
    8cd0:	ldr	x1, [sp, #48]
    8cd4:	cmp	x1, x0
    8cd8:	b.hi	8cf0 <plugin_init@@Base+0x3da4>  // b.pmore
    8cdc:	ldr	x0, [sp, #48]
    8ce0:	mov	w1, w0
    8ce4:	ldr	w0, [sp, #68]
    8ce8:	sub	w0, w0, w1
    8cec:	str	w0, [sp, #68]
    8cf0:	ldr	x0, [sp, #40]
    8cf4:	ldr	x1, [x0]
    8cf8:	ldr	w0, [sp, #68]
    8cfc:	lsl	x0, x0, #3
    8d00:	add	x0, x1, x0
    8d04:	str	x0, [sp, #56]
    8d08:	ldr	x0, [sp, #56]
    8d0c:	bl	92b8 <plugin_init@@Base+0x436c>
    8d10:	and	w0, w0, #0xff
    8d14:	cmp	w0, #0x0
    8d18:	b.ne	8d90 <plugin_init@@Base+0x3e44>  // b.any
    8d1c:	ldr	x0, [sp, #56]
    8d20:	bl	92dc <plugin_init@@Base+0x4390>
    8d24:	and	w0, w0, #0xff
    8d28:	cmp	w0, #0x0
    8d2c:	b.eq	8d58 <plugin_init@@Base+0x3e0c>  // b.none
    8d30:	ldr	x0, [sp, #72]
    8d34:	cmp	x0, #0x0
    8d38:	b.ne	8ca8 <plugin_init@@Base+0x3d5c>  // b.any
    8d3c:	ldr	x0, [sp, #40]
    8d40:	ldr	x1, [x0]
    8d44:	ldr	w0, [sp, #68]
    8d48:	lsl	x0, x0, #3
    8d4c:	add	x0, x1, x0
    8d50:	str	x0, [sp, #72]
    8d54:	b	8ca8 <plugin_init@@Base+0x3d5c>
    8d58:	ldr	x1, [sp, #32]
    8d5c:	ldr	x0, [sp, #56]
    8d60:	bl	a130 <plugin_init@@Base+0x51e4>
    8d64:	and	w0, w0, #0xff
    8d68:	cmp	w0, #0x0
    8d6c:	b.eq	8ca8 <plugin_init@@Base+0x3d5c>  // b.none
    8d70:	ldr	x0, [sp, #40]
    8d74:	ldr	x1, [x0]
    8d78:	ldr	w0, [sp, #68]
    8d7c:	lsl	x0, x0, #3
    8d80:	add	x0, x1, x0
    8d84:	b	8e00 <plugin_init@@Base+0x3eb4>
    8d88:	nop
    8d8c:	b	8d94 <plugin_init@@Base+0x3e48>
    8d90:	nop
    8d94:	ldr	w0, [sp, #24]
    8d98:	cmp	w0, #0x0
    8d9c:	b.ne	8da8 <plugin_init@@Base+0x3e5c>  // b.any
    8da0:	mov	x0, #0x0                   	// #0
    8da4:	b	8e00 <plugin_init@@Base+0x3eb4>
    8da8:	ldr	x0, [sp, #72]
    8dac:	cmp	x0, #0x0
    8db0:	b.eq	8dd8 <plugin_init@@Base+0x3e8c>  // b.none
    8db4:	ldr	x0, [sp, #40]
    8db8:	ldr	x0, [x0, #24]
    8dbc:	sub	x1, x0, #0x1
    8dc0:	ldr	x0, [sp, #40]
    8dc4:	str	x1, [x0, #24]
    8dc8:	ldr	x0, [sp, #72]
    8dcc:	bl	a160 <plugin_init@@Base+0x5214>
    8dd0:	ldr	x0, [sp, #72]
    8dd4:	b	8e00 <plugin_init@@Base+0x3eb4>
    8dd8:	ldr	x0, [sp, #40]
    8ddc:	ldr	x0, [x0, #16]
    8de0:	add	x1, x0, #0x1
    8de4:	ldr	x0, [sp, #40]
    8de8:	str	x1, [x0, #16]
    8dec:	ldr	x0, [sp, #40]
    8df0:	ldr	x1, [x0]
    8df4:	ldr	w0, [sp, #68]
    8df8:	lsl	x0, x0, #3
    8dfc:	add	x0, x1, x0
    8e00:	ldp	x29, x30, [sp], #80
    8e04:	ret
    8e08:	sub	sp, sp, #0x10
    8e0c:	str	x0, [sp, #8]
    8e10:	ldr	x0, [sp, #8]
    8e14:	ldr	x0, [x0]
    8e18:	asr	x0, x0, #3
    8e1c:	add	sp, sp, #0x10
    8e20:	ret
    8e24:	stp	x29, x30, [sp, #-80]!
    8e28:	mov	x29, sp
    8e2c:	str	x0, [sp, #40]
    8e30:	str	x1, [sp, #32]
    8e34:	str	w2, [sp, #28]
    8e38:	str	w3, [sp, #24]
    8e3c:	ldr	w0, [sp, #24]
    8e40:	cmp	w0, #0x1
    8e44:	b.ne	8e78 <plugin_init@@Base+0x3f2c>  // b.any
    8e48:	ldr	x0, [sp, #40]
    8e4c:	ldr	x1, [x0, #8]
    8e50:	mov	x0, x1
    8e54:	lsl	x0, x0, #1
    8e58:	add	x1, x0, x1
    8e5c:	ldr	x0, [sp, #40]
    8e60:	ldr	x0, [x0, #16]
    8e64:	lsl	x0, x0, #2
    8e68:	cmp	x1, x0
    8e6c:	b.hi	8e78 <plugin_init@@Base+0x3f2c>  // b.pmore
    8e70:	ldr	x0, [sp, #40]
    8e74:	bl	a180 <plugin_init@@Base+0x5234>
    8e78:	ldr	x0, [sp, #40]
    8e7c:	ldr	w0, [x0, #32]
    8e80:	add	w1, w0, #0x1
    8e84:	ldr	x0, [sp, #40]
    8e88:	str	w1, [x0, #32]
    8e8c:	str	xzr, [sp, #72]
    8e90:	ldr	x0, [sp, #40]
    8e94:	ldr	w0, [x0, #40]
    8e98:	mov	w1, w0
    8e9c:	ldr	w0, [sp, #28]
    8ea0:	bl	57bc <plugin_init@@Base+0x870>
    8ea4:	str	w0, [sp, #68]
    8ea8:	ldr	x0, [sp, #40]
    8eac:	ldr	w0, [x0, #40]
    8eb0:	mov	w1, w0
    8eb4:	ldr	w0, [sp, #28]
    8eb8:	bl	5810 <plugin_init@@Base+0x8c4>
    8ebc:	str	w0, [sp, #64]
    8ec0:	ldr	x0, [sp, #40]
    8ec4:	ldr	x1, [x0]
    8ec8:	ldr	w0, [sp, #68]
    8ecc:	lsl	x0, x0, #3
    8ed0:	add	x0, x1, x0
    8ed4:	str	x0, [sp, #56]
    8ed8:	ldr	x0, [sp, #40]
    8edc:	ldr	x0, [x0, #8]
    8ee0:	str	x0, [sp, #48]
    8ee4:	ldr	x0, [sp, #56]
    8ee8:	bl	93e0 <plugin_init@@Base+0x4494>
    8eec:	and	w0, w0, #0xff
    8ef0:	cmp	w0, #0x0
    8ef4:	b.ne	9058 <plugin_init@@Base+0x410c>  // b.any
    8ef8:	ldr	x0, [sp, #56]
    8efc:	bl	9404 <plugin_init@@Base+0x44b8>
    8f00:	and	w0, w0, #0xff
    8f04:	cmp	w0, #0x0
    8f08:	b.eq	8f28 <plugin_init@@Base+0x3fdc>  // b.none
    8f0c:	ldr	x0, [sp, #40]
    8f10:	ldr	x1, [x0]
    8f14:	ldr	w0, [sp, #68]
    8f18:	lsl	x0, x0, #3
    8f1c:	add	x0, x1, x0
    8f20:	str	x0, [sp, #72]
    8f24:	b	8f68 <plugin_init@@Base+0x401c>
    8f28:	ldr	x0, [sp, #56]
    8f2c:	ldr	x2, [x0]
    8f30:	ldr	x0, [sp, #32]
    8f34:	ldr	x0, [x0]
    8f38:	mov	x1, x0
    8f3c:	mov	x0, x2
    8f40:	bl	5b50 <plugin_init@@Base+0xc04>
    8f44:	and	w0, w0, #0xff
    8f48:	cmp	w0, #0x0
    8f4c:	b.eq	8f68 <plugin_init@@Base+0x401c>  // b.none
    8f50:	ldr	x0, [sp, #40]
    8f54:	ldr	x1, [x0]
    8f58:	ldr	w0, [sp, #68]
    8f5c:	lsl	x0, x0, #3
    8f60:	add	x0, x1, x0
    8f64:	b	90d0 <plugin_init@@Base+0x4184>
    8f68:	ldr	x0, [sp, #40]
    8f6c:	ldr	w0, [x0, #36]
    8f70:	add	w1, w0, #0x1
    8f74:	ldr	x0, [sp, #40]
    8f78:	str	w1, [x0, #36]
    8f7c:	ldr	w1, [sp, #68]
    8f80:	ldr	w0, [sp, #64]
    8f84:	add	w0, w1, w0
    8f88:	str	w0, [sp, #68]
    8f8c:	ldr	w0, [sp, #68]
    8f90:	ldr	x1, [sp, #48]
    8f94:	cmp	x1, x0
    8f98:	b.hi	8fb0 <plugin_init@@Base+0x4064>  // b.pmore
    8f9c:	ldr	x0, [sp, #48]
    8fa0:	mov	w1, w0
    8fa4:	ldr	w0, [sp, #68]
    8fa8:	sub	w0, w0, w1
    8fac:	str	w0, [sp, #68]
    8fb0:	ldr	x0, [sp, #40]
    8fb4:	ldr	x1, [x0]
    8fb8:	ldr	w0, [sp, #68]
    8fbc:	lsl	x0, x0, #3
    8fc0:	add	x0, x1, x0
    8fc4:	str	x0, [sp, #56]
    8fc8:	ldr	x0, [sp, #56]
    8fcc:	bl	93e0 <plugin_init@@Base+0x4494>
    8fd0:	and	w0, w0, #0xff
    8fd4:	cmp	w0, #0x0
    8fd8:	b.ne	9060 <plugin_init@@Base+0x4114>  // b.any
    8fdc:	ldr	x0, [sp, #56]
    8fe0:	bl	9404 <plugin_init@@Base+0x44b8>
    8fe4:	and	w0, w0, #0xff
    8fe8:	cmp	w0, #0x0
    8fec:	b.eq	9018 <plugin_init@@Base+0x40cc>  // b.none
    8ff0:	ldr	x0, [sp, #72]
    8ff4:	cmp	x0, #0x0
    8ff8:	b.ne	8f68 <plugin_init@@Base+0x401c>  // b.any
    8ffc:	ldr	x0, [sp, #40]
    9000:	ldr	x1, [x0]
    9004:	ldr	w0, [sp, #68]
    9008:	lsl	x0, x0, #3
    900c:	add	x0, x1, x0
    9010:	str	x0, [sp, #72]
    9014:	b	8f68 <plugin_init@@Base+0x401c>
    9018:	ldr	x0, [sp, #56]
    901c:	ldr	x2, [x0]
    9020:	ldr	x0, [sp, #32]
    9024:	ldr	x0, [x0]
    9028:	mov	x1, x0
    902c:	mov	x0, x2
    9030:	bl	5b50 <plugin_init@@Base+0xc04>
    9034:	and	w0, w0, #0xff
    9038:	cmp	w0, #0x0
    903c:	b.eq	8f68 <plugin_init@@Base+0x401c>  // b.none
    9040:	ldr	x0, [sp, #40]
    9044:	ldr	x1, [x0]
    9048:	ldr	w0, [sp, #68]
    904c:	lsl	x0, x0, #3
    9050:	add	x0, x1, x0
    9054:	b	90d0 <plugin_init@@Base+0x4184>
    9058:	nop
    905c:	b	9064 <plugin_init@@Base+0x4118>
    9060:	nop
    9064:	ldr	w0, [sp, #24]
    9068:	cmp	w0, #0x0
    906c:	b.ne	9078 <plugin_init@@Base+0x412c>  // b.any
    9070:	mov	x0, #0x0                   	// #0
    9074:	b	90d0 <plugin_init@@Base+0x4184>
    9078:	ldr	x0, [sp, #72]
    907c:	cmp	x0, #0x0
    9080:	b.eq	90a8 <plugin_init@@Base+0x415c>  // b.none
    9084:	ldr	x0, [sp, #40]
    9088:	ldr	x0, [x0, #24]
    908c:	sub	x1, x0, #0x1
    9090:	ldr	x0, [sp, #40]
    9094:	str	x1, [x0, #24]
    9098:	ldr	x0, [sp, #72]
    909c:	bl	a390 <plugin_init@@Base+0x5444>
    90a0:	ldr	x0, [sp, #72]
    90a4:	b	90d0 <plugin_init@@Base+0x4184>
    90a8:	ldr	x0, [sp, #40]
    90ac:	ldr	x0, [x0, #16]
    90b0:	add	x1, x0, #0x1
    90b4:	ldr	x0, [sp, #40]
    90b8:	str	x1, [x0, #16]
    90bc:	ldr	x0, [sp, #40]
    90c0:	ldr	x1, [x0]
    90c4:	ldr	w0, [sp, #68]
    90c8:	lsl	x0, x0, #3
    90cc:	add	x0, x1, x0
    90d0:	ldp	x29, x30, [sp], #80
    90d4:	ret
    90d8:	stp	x29, x30, [sp, #-48]!
    90dc:	mov	x29, sp
    90e0:	str	x0, [sp, #24]
    90e4:	str	x1, [sp, #16]
    90e8:	ldr	x0, [sp, #24]
    90ec:	ldrb	w0, [x0, #44]
    90f0:	eor	w0, w0, #0x1
    90f4:	and	w0, w0, #0xff
    90f8:	cmp	w0, #0x0
    90fc:	b.eq	9110 <plugin_init@@Base+0x41c4>  // b.none
    9100:	ldr	x0, [sp, #16]
    9104:	bl	a3b0 <plugin_init@@Base+0x5464>
    9108:	str	x0, [sp, #40]
    910c:	b	911c <plugin_init@@Base+0x41d0>
    9110:	ldr	x0, [sp, #16]
    9114:	bl	a3d0 <plugin_init@@Base+0x5484>
    9118:	str	x0, [sp, #40]
    911c:	ldr	x0, [sp, #40]
    9120:	cmp	x0, #0x0
    9124:	b.ne	9140 <plugin_init@@Base+0x41f4>  // b.any
    9128:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    912c:	add	x2, x0, #0xf68
    9130:	mov	w1, #0x2b5                 	// #693
    9134:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    9138:	add	x0, x0, #0xf78
    913c:	bl	2fb0 <_Z11fancy_abortPKciS0_@plt>
    9140:	str	xzr, [sp, #32]
    9144:	ldr	x1, [sp, #32]
    9148:	ldr	x0, [sp, #16]
    914c:	cmp	x1, x0
    9150:	b.cs	9178 <plugin_init@@Base+0x422c>  // b.hs, b.nlast
    9154:	ldr	x0, [sp, #32]
    9158:	lsl	x0, x0, #3
    915c:	ldr	x1, [sp, #40]
    9160:	add	x0, x1, x0
    9164:	bl	a434 <plugin_init@@Base+0x54e8>
    9168:	ldr	x0, [sp, #32]
    916c:	add	x0, x0, #0x1
    9170:	str	x0, [sp, #32]
    9174:	b	9144 <plugin_init@@Base+0x41f8>
    9178:	ldr	x0, [sp, #40]
    917c:	ldp	x29, x30, [sp], #48
    9180:	ret
    9184:	stp	x29, x30, [sp, #-32]!
    9188:	mov	x29, sp
    918c:	str	x0, [sp, #24]
    9190:	ldr	x0, [sp, #24]
    9194:	ldr	x0, [x0]
    9198:	bl	a454 <plugin_init@@Base+0x5508>
    919c:	and	w0, w0, #0xff
    91a0:	ldp	x29, x30, [sp], #32
    91a4:	ret
    91a8:	stp	x29, x30, [sp, #-32]!
    91ac:	mov	x29, sp
    91b0:	str	x0, [sp, #24]
    91b4:	ldr	x0, [sp, #24]
    91b8:	ldr	x0, [x0]
    91bc:	bl	a474 <plugin_init@@Base+0x5528>
    91c0:	and	w0, w0, #0xff
    91c4:	ldp	x29, x30, [sp], #32
    91c8:	ret
    91cc:	stp	x29, x30, [sp, #-32]!
    91d0:	mov	x29, sp
    91d4:	str	x0, [sp, #24]
    91d8:	ldr	x0, [sp, #24]
    91dc:	bl	2d40 <free@plt>
    91e0:	nop
    91e4:	ldp	x29, x30, [sp], #32
    91e8:	ret
    91ec:	stp	x29, x30, [sp, #-32]!
    91f0:	mov	x29, sp
    91f4:	str	x0, [sp, #24]
    91f8:	ldr	x0, [sp, #24]
    91fc:	bl	2d40 <free@plt>
    9200:	nop
    9204:	ldp	x29, x30, [sp], #32
    9208:	ret
    920c:	stp	x29, x30, [sp, #-48]!
    9210:	mov	x29, sp
    9214:	str	x0, [sp, #24]
    9218:	str	x1, [sp, #16]
    921c:	ldr	x0, [sp, #24]
    9220:	ldrb	w0, [x0, #44]
    9224:	eor	w0, w0, #0x1
    9228:	and	w0, w0, #0xff
    922c:	cmp	w0, #0x0
    9230:	b.eq	9244 <plugin_init@@Base+0x42f8>  // b.none
    9234:	ldr	x0, [sp, #16]
    9238:	bl	a494 <plugin_init@@Base+0x5548>
    923c:	str	x0, [sp, #40]
    9240:	b	9250 <plugin_init@@Base+0x4304>
    9244:	ldr	x0, [sp, #16]
    9248:	bl	a4b4 <plugin_init@@Base+0x5568>
    924c:	str	x0, [sp, #40]
    9250:	ldr	x0, [sp, #40]
    9254:	cmp	x0, #0x0
    9258:	b.ne	9274 <plugin_init@@Base+0x4328>  // b.any
    925c:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    9260:	add	x2, x0, #0xf68
    9264:	mov	w1, #0x2b5                 	// #693
    9268:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    926c:	add	x0, x0, #0xf78
    9270:	bl	2fb0 <_Z11fancy_abortPKciS0_@plt>
    9274:	str	xzr, [sp, #32]
    9278:	ldr	x1, [sp, #32]
    927c:	ldr	x0, [sp, #16]
    9280:	cmp	x1, x0
    9284:	b.cs	92ac <plugin_init@@Base+0x4360>  // b.hs, b.nlast
    9288:	ldr	x0, [sp, #32]
    928c:	lsl	x0, x0, #3
    9290:	ldr	x1, [sp, #40]
    9294:	add	x0, x1, x0
    9298:	bl	a160 <plugin_init@@Base+0x5214>
    929c:	ldr	x0, [sp, #32]
    92a0:	add	x0, x0, #0x1
    92a4:	str	x0, [sp, #32]
    92a8:	b	9278 <plugin_init@@Base+0x432c>
    92ac:	ldr	x0, [sp, #40]
    92b0:	ldp	x29, x30, [sp], #48
    92b4:	ret
    92b8:	stp	x29, x30, [sp, #-32]!
    92bc:	mov	x29, sp
    92c0:	str	x0, [sp, #24]
    92c4:	ldr	x0, [sp, #24]
    92c8:	ldr	x0, [x0]
    92cc:	bl	a518 <plugin_init@@Base+0x55cc>
    92d0:	and	w0, w0, #0xff
    92d4:	ldp	x29, x30, [sp], #32
    92d8:	ret
    92dc:	stp	x29, x30, [sp, #-32]!
    92e0:	mov	x29, sp
    92e4:	str	x0, [sp, #24]
    92e8:	ldr	x0, [sp, #24]
    92ec:	ldr	x0, [x0]
    92f0:	bl	a538 <plugin_init@@Base+0x55ec>
    92f4:	and	w0, w0, #0xff
    92f8:	ldp	x29, x30, [sp], #32
    92fc:	ret
    9300:	sub	sp, sp, #0x10
    9304:	str	x0, [sp, #8]
    9308:	nop
    930c:	add	sp, sp, #0x10
    9310:	ret
    9314:	stp	x29, x30, [sp, #-32]!
    9318:	mov	x29, sp
    931c:	str	x0, [sp, #24]
    9320:	ldr	x0, [sp, #24]
    9324:	bl	2d40 <free@plt>
    9328:	nop
    932c:	ldp	x29, x30, [sp], #32
    9330:	ret
    9334:	stp	x29, x30, [sp, #-48]!
    9338:	mov	x29, sp
    933c:	str	x0, [sp, #24]
    9340:	str	x1, [sp, #16]
    9344:	ldr	x0, [sp, #24]
    9348:	ldrb	w0, [x0, #44]
    934c:	eor	w0, w0, #0x1
    9350:	and	w0, w0, #0xff
    9354:	cmp	w0, #0x0
    9358:	b.eq	936c <plugin_init@@Base+0x4420>  // b.none
    935c:	ldr	x0, [sp, #16]
    9360:	bl	a558 <plugin_init@@Base+0x560c>
    9364:	str	x0, [sp, #40]
    9368:	b	9378 <plugin_init@@Base+0x442c>
    936c:	ldr	x0, [sp, #16]
    9370:	bl	a578 <plugin_init@@Base+0x562c>
    9374:	str	x0, [sp, #40]
    9378:	ldr	x0, [sp, #40]
    937c:	cmp	x0, #0x0
    9380:	b.ne	939c <plugin_init@@Base+0x4450>  // b.any
    9384:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    9388:	add	x2, x0, #0xf68
    938c:	mov	w1, #0x2b5                 	// #693
    9390:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    9394:	add	x0, x0, #0xf78
    9398:	bl	2fb0 <_Z11fancy_abortPKciS0_@plt>
    939c:	str	xzr, [sp, #32]
    93a0:	ldr	x1, [sp, #32]
    93a4:	ldr	x0, [sp, #16]
    93a8:	cmp	x1, x0
    93ac:	b.cs	93d4 <plugin_init@@Base+0x4488>  // b.hs, b.nlast
    93b0:	ldr	x0, [sp, #32]
    93b4:	lsl	x0, x0, #3
    93b8:	ldr	x1, [sp, #40]
    93bc:	add	x0, x1, x0
    93c0:	bl	a390 <plugin_init@@Base+0x5444>
    93c4:	ldr	x0, [sp, #32]
    93c8:	add	x0, x0, #0x1
    93cc:	str	x0, [sp, #32]
    93d0:	b	93a0 <plugin_init@@Base+0x4454>
    93d4:	ldr	x0, [sp, #40]
    93d8:	ldp	x29, x30, [sp], #48
    93dc:	ret
    93e0:	stp	x29, x30, [sp, #-32]!
    93e4:	mov	x29, sp
    93e8:	str	x0, [sp, #24]
    93ec:	ldr	x0, [sp, #24]
    93f0:	ldr	x0, [x0]
    93f4:	bl	a5dc <plugin_init@@Base+0x5690>
    93f8:	and	w0, w0, #0xff
    93fc:	ldp	x29, x30, [sp], #32
    9400:	ret
    9404:	stp	x29, x30, [sp, #-32]!
    9408:	mov	x29, sp
    940c:	str	x0, [sp, #24]
    9410:	ldr	x0, [sp, #24]
    9414:	ldr	x0, [x0]
    9418:	bl	a5fc <plugin_init@@Base+0x56b0>
    941c:	and	w0, w0, #0xff
    9420:	ldp	x29, x30, [sp], #32
    9424:	ret
    9428:	sub	sp, sp, #0x10
    942c:	str	x0, [sp, #8]
    9430:	nop
    9434:	add	sp, sp, #0x10
    9438:	ret
    943c:	stp	x29, x30, [sp, #-32]!
    9440:	mov	x29, sp
    9444:	str	x0, [sp, #24]
    9448:	ldr	x0, [sp, #24]
    944c:	bl	2d40 <free@plt>
    9450:	nop
    9454:	ldp	x29, x30, [sp], #32
    9458:	ret
    945c:	sub	sp, sp, #0x10
    9460:	str	x0, [sp, #8]
    9464:	ldr	x0, [sp, #8]
    9468:	str	xzr, [x0]
    946c:	ldr	x0, [sp, #8]
    9470:	str	xzr, [x0, #8]
    9474:	nop
    9478:	add	sp, sp, #0x10
    947c:	ret
    9480:	sub	sp, sp, #0x20
    9484:	str	x0, [sp, #24]
    9488:	str	x1, [sp, #16]
    948c:	str	x2, [sp, #8]
    9490:	ldr	x0, [sp, #24]
    9494:	ldr	x1, [sp, #16]
    9498:	str	x1, [x0]
    949c:	ldr	x0, [sp, #24]
    94a0:	ldr	x1, [sp, #8]
    94a4:	str	x1, [x0, #8]
    94a8:	nop
    94ac:	add	sp, sp, #0x20
    94b0:	ret
    94b4:	stp	x29, x30, [sp, #-48]!
    94b8:	mov	x29, sp
    94bc:	str	x0, [sp, #24]
    94c0:	ldr	x0, [sp, #24]
    94c4:	ldr	x1, [x0]
    94c8:	ldr	x0, [sp, #24]
    94cc:	ldr	x0, [x0, #8]
    94d0:	cmp	x1, x0
    94d4:	b.cs	9548 <plugin_init@@Base+0x45fc>  // b.hs, b.nlast
    94d8:	ldr	x0, [sp, #24]
    94dc:	ldr	x0, [x0]
    94e0:	str	x0, [sp, #40]
    94e4:	ldr	x0, [sp, #40]
    94e8:	bl	9184 <plugin_init@@Base+0x4238>
    94ec:	and	w0, w0, #0xff
    94f0:	eor	w0, w0, #0x1
    94f4:	and	w0, w0, #0xff
    94f8:	cmp	w0, #0x0
    94fc:	b.eq	9524 <plugin_init@@Base+0x45d8>  // b.none
    9500:	ldr	x0, [sp, #40]
    9504:	bl	91a8 <plugin_init@@Base+0x425c>
    9508:	and	w0, w0, #0xff
    950c:	eor	w0, w0, #0x1
    9510:	and	w0, w0, #0xff
    9514:	cmp	w0, #0x0
    9518:	b.eq	9524 <plugin_init@@Base+0x45d8>  // b.none
    951c:	mov	w0, #0x1                   	// #1
    9520:	b	9528 <plugin_init@@Base+0x45dc>
    9524:	mov	w0, #0x0                   	// #0
    9528:	cmp	w0, #0x0
    952c:	b.ne	955c <plugin_init@@Base+0x4610>  // b.any
    9530:	ldr	x0, [sp, #24]
    9534:	ldr	x0, [x0]
    9538:	add	x1, x0, #0x8
    953c:	ldr	x0, [sp, #24]
    9540:	str	x1, [x0]
    9544:	b	94c0 <plugin_init@@Base+0x4574>
    9548:	ldr	x0, [sp, #24]
    954c:	str	xzr, [x0]
    9550:	ldr	x0, [sp, #24]
    9554:	str	xzr, [x0, #8]
    9558:	b	9560 <plugin_init@@Base+0x4614>
    955c:	nop
    9560:	ldp	x29, x30, [sp], #48
    9564:	ret
    9568:	sub	sp, sp, #0x10
    956c:	str	x0, [sp, #8]
    9570:	ldr	x0, [sp, #8]
    9574:	str	xzr, [x0]
    9578:	ldr	x0, [sp, #8]
    957c:	str	xzr, [x0, #8]
    9580:	nop
    9584:	add	sp, sp, #0x10
    9588:	ret
    958c:	sub	sp, sp, #0x20
    9590:	str	x0, [sp, #24]
    9594:	str	x1, [sp, #16]
    9598:	str	x2, [sp, #8]
    959c:	ldr	x0, [sp, #24]
    95a0:	ldr	x1, [sp, #16]
    95a4:	str	x1, [x0]
    95a8:	ldr	x0, [sp, #24]
    95ac:	ldr	x1, [sp, #8]
    95b0:	str	x1, [x0, #8]
    95b4:	nop
    95b8:	add	sp, sp, #0x20
    95bc:	ret
    95c0:	stp	x29, x30, [sp, #-48]!
    95c4:	mov	x29, sp
    95c8:	str	x0, [sp, #24]
    95cc:	ldr	x0, [sp, #24]
    95d0:	ldr	x1, [x0]
    95d4:	ldr	x0, [sp, #24]
    95d8:	ldr	x0, [x0, #8]
    95dc:	cmp	x1, x0
    95e0:	b.cs	9654 <plugin_init@@Base+0x4708>  // b.hs, b.nlast
    95e4:	ldr	x0, [sp, #24]
    95e8:	ldr	x0, [x0]
    95ec:	str	x0, [sp, #40]
    95f0:	ldr	x0, [sp, #40]
    95f4:	bl	92b8 <plugin_init@@Base+0x436c>
    95f8:	and	w0, w0, #0xff
    95fc:	eor	w0, w0, #0x1
    9600:	and	w0, w0, #0xff
    9604:	cmp	w0, #0x0
    9608:	b.eq	9630 <plugin_init@@Base+0x46e4>  // b.none
    960c:	ldr	x0, [sp, #40]
    9610:	bl	92dc <plugin_init@@Base+0x4390>
    9614:	and	w0, w0, #0xff
    9618:	eor	w0, w0, #0x1
    961c:	and	w0, w0, #0xff
    9620:	cmp	w0, #0x0
    9624:	b.eq	9630 <plugin_init@@Base+0x46e4>  // b.none
    9628:	mov	w0, #0x1                   	// #1
    962c:	b	9634 <plugin_init@@Base+0x46e8>
    9630:	mov	w0, #0x0                   	// #0
    9634:	cmp	w0, #0x0
    9638:	b.ne	9668 <plugin_init@@Base+0x471c>  // b.any
    963c:	ldr	x0, [sp, #24]
    9640:	ldr	x0, [x0]
    9644:	add	x1, x0, #0x8
    9648:	ldr	x0, [sp, #24]
    964c:	str	x1, [x0]
    9650:	b	95cc <plugin_init@@Base+0x4680>
    9654:	ldr	x0, [sp, #24]
    9658:	str	xzr, [x0]
    965c:	ldr	x0, [sp, #24]
    9660:	str	xzr, [x0, #8]
    9664:	b	966c <plugin_init@@Base+0x4720>
    9668:	nop
    966c:	ldp	x29, x30, [sp], #48
    9670:	ret
    9674:	stp	x29, x30, [sp, #-32]!
    9678:	mov	x29, sp
    967c:	str	x0, [sp, #24]
    9680:	str	w1, [sp, #20]
    9684:	ldrsw	x0, [sp, #20]
    9688:	mov	x1, x0
    968c:	ldr	x0, [sp, #24]
    9690:	bl	b788 <plugin_init@@Base+0x683c>
    9694:	ldp	x29, x30, [sp], #32
    9698:	ret
    969c:	stp	x29, x30, [sp, #-32]!
    96a0:	mov	x29, sp
    96a4:	str	x0, [sp, #24]
    96a8:	str	w1, [sp, #20]
    96ac:	ldr	w0, [sp, #20]
    96b0:	mov	x1, x0
    96b4:	ldr	x0, [sp, #24]
    96b8:	bl	b788 <plugin_init@@Base+0x683c>
    96bc:	ldp	x29, x30, [sp], #32
    96c0:	ret
    96c4:	stp	x29, x30, [sp, #-48]!
    96c8:	mov	x29, sp
    96cc:	str	x0, [sp, #24]
    96d0:	str	x1, [sp, #16]
    96d4:	add	x0, sp, #0x28
    96d8:	mov	x1, x0
    96dc:	ldr	x0, [sp, #24]
    96e0:	bl	b7e0 <plugin_init@@Base+0x6894>
    96e4:	cmp	w0, #0x0
    96e8:	cset	w0, eq  // eq = none
    96ec:	and	w0, w0, #0xff
    96f0:	cmp	w0, #0x0
    96f4:	b.eq	9700 <plugin_init@@Base+0x47b4>  // b.none
    96f8:	mov	w0, #0x0                   	// #0
    96fc:	b	9714 <plugin_init@@Base+0x47c8>
    9700:	ldr	x0, [sp, #40]
    9704:	mov	w1, w0
    9708:	ldr	x0, [sp, #16]
    970c:	str	w1, [x0]
    9710:	mov	w0, #0x1                   	// #1
    9714:	ldp	x29, x30, [sp], #48
    9718:	ret
    971c:	stp	x29, x30, [sp, #-80]!
    9720:	mov	x29, sp
    9724:	str	x0, [sp, #40]
    9728:	str	x1, [sp, #32]
    972c:	str	w2, [sp, #28]
    9730:	ldr	x0, [sp, #40]
    9734:	ldr	w0, [x0, #32]
    9738:	add	w1, w0, #0x1
    973c:	ldr	x0, [sp, #40]
    9740:	str	w1, [x0, #32]
    9744:	ldr	x0, [sp, #40]
    9748:	ldr	x0, [x0, #8]
    974c:	str	x0, [sp, #64]
    9750:	ldr	x0, [sp, #40]
    9754:	ldr	w0, [x0, #40]
    9758:	mov	w1, w0
    975c:	ldr	w0, [sp, #28]
    9760:	bl	57bc <plugin_init@@Base+0x870>
    9764:	str	w0, [sp, #76]
    9768:	ldr	x0, [sp, #40]
    976c:	ldr	x1, [x0]
    9770:	ldr	w0, [sp, #76]
    9774:	lsl	x0, x0, #3
    9778:	add	x0, x1, x0
    977c:	str	x0, [sp, #56]
    9780:	ldr	x0, [sp, #56]
    9784:	bl	9184 <plugin_init@@Base+0x4238>
    9788:	and	w0, w0, #0xff
    978c:	cmp	w0, #0x0
    9790:	b.ne	97d8 <plugin_init@@Base+0x488c>  // b.any
    9794:	ldr	x0, [sp, #56]
    9798:	bl	91a8 <plugin_init@@Base+0x425c>
    979c:	and	w0, w0, #0xff
    97a0:	eor	w0, w0, #0x1
    97a4:	and	w0, w0, #0xff
    97a8:	cmp	w0, #0x0
    97ac:	b.eq	97e0 <plugin_init@@Base+0x4894>  // b.none
    97b0:	ldr	x0, [sp, #56]
    97b4:	ldr	x2, [x0]
    97b8:	ldr	x0, [sp, #32]
    97bc:	ldr	x0, [x0]
    97c0:	mov	x1, x0
    97c4:	mov	x0, x2
    97c8:	bl	5b04 <plugin_init@@Base+0xbb8>
    97cc:	and	w0, w0, #0xff
    97d0:	cmp	w0, #0x0
    97d4:	b.eq	97e0 <plugin_init@@Base+0x4894>  // b.none
    97d8:	mov	w0, #0x1                   	// #1
    97dc:	b	97e4 <plugin_init@@Base+0x4898>
    97e0:	mov	w0, #0x0                   	// #0
    97e4:	cmp	w0, #0x0
    97e8:	b.eq	97f4 <plugin_init@@Base+0x48a8>  // b.none
    97ec:	ldr	x0, [sp, #56]
    97f0:	b	98dc <plugin_init@@Base+0x4990>
    97f4:	ldr	x0, [sp, #40]
    97f8:	ldr	w0, [x0, #40]
    97fc:	mov	w1, w0
    9800:	ldr	w0, [sp, #28]
    9804:	bl	5810 <plugin_init@@Base+0x8c4>
    9808:	str	w0, [sp, #52]
    980c:	ldr	x0, [sp, #40]
    9810:	ldr	w0, [x0, #36]
    9814:	add	w1, w0, #0x1
    9818:	ldr	x0, [sp, #40]
    981c:	str	w1, [x0, #36]
    9820:	ldr	w1, [sp, #76]
    9824:	ldr	w0, [sp, #52]
    9828:	add	w0, w1, w0
    982c:	str	w0, [sp, #76]
    9830:	ldr	w0, [sp, #76]
    9834:	ldr	x1, [sp, #64]
    9838:	cmp	x1, x0
    983c:	b.hi	9854 <plugin_init@@Base+0x4908>  // b.pmore
    9840:	ldr	x0, [sp, #64]
    9844:	mov	w1, w0
    9848:	ldr	w0, [sp, #76]
    984c:	sub	w0, w0, w1
    9850:	str	w0, [sp, #76]
    9854:	ldr	x0, [sp, #40]
    9858:	ldr	x1, [x0]
    985c:	ldr	w0, [sp, #76]
    9860:	lsl	x0, x0, #3
    9864:	add	x0, x1, x0
    9868:	str	x0, [sp, #56]
    986c:	ldr	x0, [sp, #56]
    9870:	bl	9184 <plugin_init@@Base+0x4238>
    9874:	and	w0, w0, #0xff
    9878:	cmp	w0, #0x0
    987c:	b.ne	98c4 <plugin_init@@Base+0x4978>  // b.any
    9880:	ldr	x0, [sp, #56]
    9884:	bl	91a8 <plugin_init@@Base+0x425c>
    9888:	and	w0, w0, #0xff
    988c:	eor	w0, w0, #0x1
    9890:	and	w0, w0, #0xff
    9894:	cmp	w0, #0x0
    9898:	b.eq	98cc <plugin_init@@Base+0x4980>  // b.none
    989c:	ldr	x0, [sp, #56]
    98a0:	ldr	x2, [x0]
    98a4:	ldr	x0, [sp, #32]
    98a8:	ldr	x0, [x0]
    98ac:	mov	x1, x0
    98b0:	mov	x0, x2
    98b4:	bl	5b04 <plugin_init@@Base+0xbb8>
    98b8:	and	w0, w0, #0xff
    98bc:	cmp	w0, #0x0
    98c0:	b.eq	98cc <plugin_init@@Base+0x4980>  // b.none
    98c4:	mov	w0, #0x1                   	// #1
    98c8:	b	98d0 <plugin_init@@Base+0x4984>
    98cc:	mov	w0, #0x0                   	// #0
    98d0:	cmp	w0, #0x0
    98d4:	b.eq	980c <plugin_init@@Base+0x48c0>  // b.none
    98d8:	ldr	x0, [sp, #56]
    98dc:	ldp	x29, x30, [sp], #80
    98e0:	ret
    98e4:	sub	sp, sp, #0x10
    98e8:	str	x0, [sp, #8]
    98ec:	mov	w0, #0x0                   	// #0
    98f0:	add	sp, sp, #0x10
    98f4:	ret
    98f8:	stp	x29, x30, [sp, #-80]!
    98fc:	mov	x29, sp
    9900:	str	x0, [sp, #40]
    9904:	str	x1, [sp, #32]
    9908:	str	w2, [sp, #28]
    990c:	str	w3, [sp, #24]
    9910:	ldr	w0, [sp, #24]
    9914:	cmp	w0, #0x1
    9918:	b.ne	994c <plugin_init@@Base+0x4a00>  // b.any
    991c:	ldr	x0, [sp, #40]
    9920:	ldr	x1, [x0, #8]
    9924:	mov	x0, x1
    9928:	lsl	x0, x0, #1
    992c:	add	x1, x0, x1
    9930:	ldr	x0, [sp, #40]
    9934:	ldr	x0, [x0, #16]
    9938:	lsl	x0, x0, #2
    993c:	cmp	x1, x0
    9940:	b.hi	994c <plugin_init@@Base+0x4a00>  // b.pmore
    9944:	ldr	x0, [sp, #40]
    9948:	bl	a61c <plugin_init@@Base+0x56d0>
    994c:	ldr	x0, [sp, #40]
    9950:	ldr	w0, [x0, #32]
    9954:	add	w1, w0, #0x1
    9958:	ldr	x0, [sp, #40]
    995c:	str	w1, [x0, #32]
    9960:	str	xzr, [sp, #72]
    9964:	ldr	x0, [sp, #40]
    9968:	ldr	w0, [x0, #40]
    996c:	mov	w1, w0
    9970:	ldr	w0, [sp, #28]
    9974:	bl	57bc <plugin_init@@Base+0x870>
    9978:	str	w0, [sp, #68]
    997c:	ldr	x0, [sp, #40]
    9980:	ldr	w0, [x0, #40]
    9984:	mov	w1, w0
    9988:	ldr	w0, [sp, #28]
    998c:	bl	5810 <plugin_init@@Base+0x8c4>
    9990:	str	w0, [sp, #64]
    9994:	ldr	x0, [sp, #40]
    9998:	ldr	x1, [x0]
    999c:	ldr	w0, [sp, #68]
    99a0:	lsl	x0, x0, #3
    99a4:	add	x0, x1, x0
    99a8:	str	x0, [sp, #56]
    99ac:	ldr	x0, [sp, #40]
    99b0:	ldr	x0, [x0, #8]
    99b4:	str	x0, [sp, #48]
    99b8:	ldr	x0, [sp, #56]
    99bc:	bl	9184 <plugin_init@@Base+0x4238>
    99c0:	and	w0, w0, #0xff
    99c4:	cmp	w0, #0x0
    99c8:	b.ne	9b2c <plugin_init@@Base+0x4be0>  // b.any
    99cc:	ldr	x0, [sp, #56]
    99d0:	bl	91a8 <plugin_init@@Base+0x425c>
    99d4:	and	w0, w0, #0xff
    99d8:	cmp	w0, #0x0
    99dc:	b.eq	99fc <plugin_init@@Base+0x4ab0>  // b.none
    99e0:	ldr	x0, [sp, #40]
    99e4:	ldr	x1, [x0]
    99e8:	ldr	w0, [sp, #68]
    99ec:	lsl	x0, x0, #3
    99f0:	add	x0, x1, x0
    99f4:	str	x0, [sp, #72]
    99f8:	b	9a3c <plugin_init@@Base+0x4af0>
    99fc:	ldr	x0, [sp, #56]
    9a00:	ldr	x2, [x0]
    9a04:	ldr	x0, [sp, #32]
    9a08:	ldr	x0, [x0]
    9a0c:	mov	x1, x0
    9a10:	mov	x0, x2
    9a14:	bl	5b04 <plugin_init@@Base+0xbb8>
    9a18:	and	w0, w0, #0xff
    9a1c:	cmp	w0, #0x0
    9a20:	b.eq	9a3c <plugin_init@@Base+0x4af0>  // b.none
    9a24:	ldr	x0, [sp, #40]
    9a28:	ldr	x1, [x0]
    9a2c:	ldr	w0, [sp, #68]
    9a30:	lsl	x0, x0, #3
    9a34:	add	x0, x1, x0
    9a38:	b	9ba4 <plugin_init@@Base+0x4c58>
    9a3c:	ldr	x0, [sp, #40]
    9a40:	ldr	w0, [x0, #36]
    9a44:	add	w1, w0, #0x1
    9a48:	ldr	x0, [sp, #40]
    9a4c:	str	w1, [x0, #36]
    9a50:	ldr	w1, [sp, #68]
    9a54:	ldr	w0, [sp, #64]
    9a58:	add	w0, w1, w0
    9a5c:	str	w0, [sp, #68]
    9a60:	ldr	w0, [sp, #68]
    9a64:	ldr	x1, [sp, #48]
    9a68:	cmp	x1, x0
    9a6c:	b.hi	9a84 <plugin_init@@Base+0x4b38>  // b.pmore
    9a70:	ldr	x0, [sp, #48]
    9a74:	mov	w1, w0
    9a78:	ldr	w0, [sp, #68]
    9a7c:	sub	w0, w0, w1
    9a80:	str	w0, [sp, #68]
    9a84:	ldr	x0, [sp, #40]
    9a88:	ldr	x1, [x0]
    9a8c:	ldr	w0, [sp, #68]
    9a90:	lsl	x0, x0, #3
    9a94:	add	x0, x1, x0
    9a98:	str	x0, [sp, #56]
    9a9c:	ldr	x0, [sp, #56]
    9aa0:	bl	9184 <plugin_init@@Base+0x4238>
    9aa4:	and	w0, w0, #0xff
    9aa8:	cmp	w0, #0x0
    9aac:	b.ne	9b34 <plugin_init@@Base+0x4be8>  // b.any
    9ab0:	ldr	x0, [sp, #56]
    9ab4:	bl	91a8 <plugin_init@@Base+0x425c>
    9ab8:	and	w0, w0, #0xff
    9abc:	cmp	w0, #0x0
    9ac0:	b.eq	9aec <plugin_init@@Base+0x4ba0>  // b.none
    9ac4:	ldr	x0, [sp, #72]
    9ac8:	cmp	x0, #0x0
    9acc:	b.ne	9a3c <plugin_init@@Base+0x4af0>  // b.any
    9ad0:	ldr	x0, [sp, #40]
    9ad4:	ldr	x1, [x0]
    9ad8:	ldr	w0, [sp, #68]
    9adc:	lsl	x0, x0, #3
    9ae0:	add	x0, x1, x0
    9ae4:	str	x0, [sp, #72]
    9ae8:	b	9a3c <plugin_init@@Base+0x4af0>
    9aec:	ldr	x0, [sp, #56]
    9af0:	ldr	x2, [x0]
    9af4:	ldr	x0, [sp, #32]
    9af8:	ldr	x0, [x0]
    9afc:	mov	x1, x0
    9b00:	mov	x0, x2
    9b04:	bl	5b04 <plugin_init@@Base+0xbb8>
    9b08:	and	w0, w0, #0xff
    9b0c:	cmp	w0, #0x0
    9b10:	b.eq	9a3c <plugin_init@@Base+0x4af0>  // b.none
    9b14:	ldr	x0, [sp, #40]
    9b18:	ldr	x1, [x0]
    9b1c:	ldr	w0, [sp, #68]
    9b20:	lsl	x0, x0, #3
    9b24:	add	x0, x1, x0
    9b28:	b	9ba4 <plugin_init@@Base+0x4c58>
    9b2c:	nop
    9b30:	b	9b38 <plugin_init@@Base+0x4bec>
    9b34:	nop
    9b38:	ldr	w0, [sp, #24]
    9b3c:	cmp	w0, #0x0
    9b40:	b.ne	9b4c <plugin_init@@Base+0x4c00>  // b.any
    9b44:	mov	x0, #0x0                   	// #0
    9b48:	b	9ba4 <plugin_init@@Base+0x4c58>
    9b4c:	ldr	x0, [sp, #72]
    9b50:	cmp	x0, #0x0
    9b54:	b.eq	9b7c <plugin_init@@Base+0x4c30>  // b.none
    9b58:	ldr	x0, [sp, #40]
    9b5c:	ldr	x0, [x0, #24]
    9b60:	sub	x1, x0, #0x1
    9b64:	ldr	x0, [sp, #40]
    9b68:	str	x1, [x0, #24]
    9b6c:	ldr	x0, [sp, #72]
    9b70:	bl	a434 <plugin_init@@Base+0x54e8>
    9b74:	ldr	x0, [sp, #72]
    9b78:	b	9ba4 <plugin_init@@Base+0x4c58>
    9b7c:	ldr	x0, [sp, #40]
    9b80:	ldr	x0, [x0, #16]
    9b84:	add	x1, x0, #0x1
    9b88:	ldr	x0, [sp, #40]
    9b8c:	str	x1, [x0, #16]
    9b90:	ldr	x0, [sp, #40]
    9b94:	ldr	x1, [x0]
    9b98:	ldr	w0, [sp, #68]
    9b9c:	lsl	x0, x0, #3
    9ba0:	add	x0, x1, x0
    9ba4:	ldp	x29, x30, [sp], #80
    9ba8:	ret
    9bac:	sub	sp, sp, #0x10
    9bb0:	str	x0, [sp, #8]
    9bb4:	nop
    9bb8:	add	sp, sp, #0x10
    9bbc:	ret
    9bc0:	sub	sp, sp, #0x10
    9bc4:	str	x0, [sp, #8]
    9bc8:	nop
    9bcc:	add	sp, sp, #0x10
    9bd0:	ret
    9bd4:	sub	sp, sp, #0x10
    9bd8:	str	x0, [sp, #8]
    9bdc:	nop
    9be0:	add	sp, sp, #0x10
    9be4:	ret
    9be8:	sub	sp, sp, #0x10
    9bec:	str	x0, [sp, #8]
    9bf0:	nop
    9bf4:	add	sp, sp, #0x10
    9bf8:	ret
    9bfc:	sub	sp, sp, #0x10
    9c00:	str	x0, [sp, #8]
    9c04:	nop
    9c08:	add	sp, sp, #0x10
    9c0c:	ret
    9c10:	sub	sp, sp, #0x10
    9c14:	str	x0, [sp, #8]
    9c18:	nop
    9c1c:	add	sp, sp, #0x10
    9c20:	ret
    9c24:	stp	x29, x30, [sp, #-32]!
    9c28:	mov	x29, sp
    9c2c:	str	x0, [sp, #24]
    9c30:	str	x1, [sp, #16]
    9c34:	ldr	x0, [sp, #24]
    9c38:	mov	x1, x0
    9c3c:	ldr	x0, [sp, #16]
    9c40:	bl	3248 <__gmon_start__@plt+0x108>
    9c44:	ldp	x29, x30, [sp], #32
    9c48:	ret
    9c4c:	stp	x29, x30, [sp, #-32]!
    9c50:	mov	x29, sp
    9c54:	str	x0, [sp, #24]
    9c58:	str	x1, [sp, #16]
    9c5c:	ldr	x0, [sp, #24]
    9c60:	mov	x1, x0
    9c64:	ldr	x0, [sp, #16]
    9c68:	bl	6930 <plugin_init@@Base+0x19e4>
    9c6c:	ldp	x29, x30, [sp], #32
    9c70:	ret
    9c74:	stp	x29, x30, [sp, #-32]!
    9c78:	mov	x29, sp
    9c7c:	str	x0, [sp, #24]
    9c80:	str	x1, [sp, #16]
    9c84:	ldr	x0, [sp, #24]
    9c88:	mov	x1, x0
    9c8c:	ldr	x0, [sp, #16]
    9c90:	bl	a82c <plugin_init@@Base+0x58e0>
    9c94:	ldp	x29, x30, [sp], #32
    9c98:	ret
    9c9c:	sub	sp, sp, #0x10
    9ca0:	str	x0, [sp, #8]
    9ca4:	ldr	x0, [sp, #8]
    9ca8:	ldr	w0, [x0]
    9cac:	add	sp, sp, #0x10
    9cb0:	ret
    9cb4:	sub	sp, sp, #0x10
    9cb8:	str	x0, [sp, #8]
    9cbc:	ldr	x0, [sp, #8]
    9cc0:	ldr	x0, [x0]
    9cc4:	add	sp, sp, #0x10
    9cc8:	ret
    9ccc:	sub	sp, sp, #0x10
    9cd0:	str	x0, [sp, #8]
    9cd4:	ldr	x0, [sp, #8]
    9cd8:	ldr	w0, [x0]
    9cdc:	add	sp, sp, #0x10
    9ce0:	ret
    9ce4:	stp	x29, x30, [sp, #-32]!
    9ce8:	mov	x29, sp
    9cec:	str	x0, [sp, #24]
    9cf0:	str	x1, [sp, #16]
    9cf4:	ldr	x1, [sp, #16]
    9cf8:	ldr	x0, [sp, #24]
    9cfc:	bl	b788 <plugin_init@@Base+0x683c>
    9d00:	ldp	x29, x30, [sp], #32
    9d04:	ret
    9d08:	sub	sp, sp, #0x10
    9d0c:	str	x0, [sp, #8]
    9d10:	nop
    9d14:	add	sp, sp, #0x10
    9d18:	ret
    9d1c:	sub	sp, sp, #0x10
    9d20:	str	x0, [sp, #8]
    9d24:	nop
    9d28:	add	sp, sp, #0x10
    9d2c:	ret
    9d30:	stp	x29, x30, [sp, #-32]!
    9d34:	mov	x29, sp
    9d38:	str	x0, [sp, #24]
    9d3c:	str	x1, [sp, #16]
    9d40:	ldr	x0, [sp, #24]
    9d44:	mov	x1, x0
    9d48:	ldr	x0, [sp, #16]
    9d4c:	bl	96c4 <plugin_init@@Base+0x4778>
    9d50:	ldp	x29, x30, [sp], #32
    9d54:	ret
    9d58:	sub	sp, sp, #0x10
    9d5c:	str	x0, [sp, #8]
    9d60:	ldr	x0, [sp, #8]
    9d64:	ldr	w0, [x0]
    9d68:	add	sp, sp, #0x10
    9d6c:	ret
    9d70:	sub	sp, sp, #0x10
    9d74:	str	x0, [sp, #8]
    9d78:	nop
    9d7c:	add	sp, sp, #0x10
    9d80:	ret
    9d84:	sub	sp, sp, #0x10
    9d88:	str	x0, [sp, #8]
    9d8c:	nop
    9d90:	add	sp, sp, #0x10
    9d94:	ret
    9d98:	stp	x29, x30, [sp, #-32]!
    9d9c:	mov	x29, sp
    9da0:	str	x0, [sp, #24]
    9da4:	str	x1, [sp, #16]
    9da8:	ldr	x0, [sp, #24]
    9dac:	mov	x1, x0
    9db0:	ldr	x0, [sp, #16]
    9db4:	bl	a884 <plugin_init@@Base+0x5938>
    9db8:	ldp	x29, x30, [sp], #32
    9dbc:	ret
    9dc0:	sub	sp, sp, #0x10
    9dc4:	str	x0, [sp, #8]
    9dc8:	ldr	x0, [sp, #8]
    9dcc:	ldr	x0, [x0]
    9dd0:	add	sp, sp, #0x10
    9dd4:	ret
    9dd8:	sub	sp, sp, #0x10
    9ddc:	str	x0, [sp, #8]
    9de0:	nop
    9de4:	add	sp, sp, #0x10
    9de8:	ret
    9dec:	sub	sp, sp, #0x10
    9df0:	str	x0, [sp, #8]
    9df4:	nop
    9df8:	add	sp, sp, #0x10
    9dfc:	ret
    9e00:	stp	x29, x30, [sp, #-32]!
    9e04:	mov	x29, sp
    9e08:	str	x0, [sp, #24]
    9e0c:	str	x1, [sp, #16]
    9e10:	ldr	x0, [sp, #24]
    9e14:	mov	x1, x0
    9e18:	ldr	x0, [sp, #16]
    9e1c:	bl	32f8 <__gmon_start__@plt+0x1b8>
    9e20:	ldp	x29, x30, [sp], #32
    9e24:	ret
    9e28:	sub	sp, sp, #0x10
    9e2c:	str	x0, [sp, #8]
    9e30:	ldr	x0, [sp, #8]
    9e34:	ldr	w0, [x0]
    9e38:	add	sp, sp, #0x10
    9e3c:	ret
    9e40:	stp	x29, x30, [sp, #-32]!
    9e44:	mov	x29, sp
    9e48:	mov	x2, x8
    9e4c:	str	x0, [sp, #24]
    9e50:	str	x1, [sp, #16]
    9e54:	mov	x0, x2
    9e58:	bl	a8d8 <plugin_init@@Base+0x598c>
    9e5c:	ldp	x29, x30, [sp], #32
    9e60:	ret
    9e64:	stp	x29, x30, [sp, #-32]!
    9e68:	mov	x29, sp
    9e6c:	str	x0, [sp, #24]
    9e70:	ldr	x0, [sp, #24]
    9e74:	bl	a8f8 <plugin_init@@Base+0x59ac>
    9e78:	ldp	x29, x30, [sp], #32
    9e7c:	ret
    9e80:	stp	x29, x30, [sp, #-64]!
    9e84:	mov	x29, sp
    9e88:	str	x19, [sp, #16]
    9e8c:	str	x0, [sp, #56]
    9e90:	str	x1, [sp, #48]
    9e94:	str	w2, [sp, #44]
    9e98:	ldr	x0, [sp, #56]
    9e9c:	add	x0, x0, #0x10
    9ea0:	ldr	x19, [sp, #56]
    9ea4:	ldr	x2, [sp, #48]
    9ea8:	ldr	w1, [sp, #44]
    9eac:	bl	a914 <plugin_init@@Base+0x59c8>
    9eb0:	stp	x0, x1, [x19]
    9eb4:	nop
    9eb8:	ldr	x19, [sp, #16]
    9ebc:	ldp	x29, x30, [sp], #64
    9ec0:	ret
    9ec4:	stp	x29, x30, [sp, #-48]!
    9ec8:	mov	x29, sp
    9ecc:	str	x0, [sp, #24]
    9ed0:	ldr	x0, [sp, #24]
    9ed4:	bl	5704 <plugin_init@@Base+0x7b8>
    9ed8:	str	w0, [sp, #44]
    9edc:	ldr	x0, [sp, #24]
    9ee0:	bl	571c <plugin_init@@Base+0x7d0>
    9ee4:	mov	x1, x0
    9ee8:	ldr	w0, [sp, #44]
    9eec:	sub	w0, w0, #0x1
    9ef0:	mov	w0, w0
    9ef4:	lsl	x0, x0, #3
    9ef8:	add	x0, x1, x0
    9efc:	ldr	x0, [x0]
    9f00:	str	x0, [sp, #32]
    9f04:	ldr	x0, [sp, #32]
    9f08:	cmp	x0, #0x0
    9f0c:	b.ge	9f18 <plugin_init@@Base+0x4fcc>  // b.tcont
    9f10:	mov	x0, #0xffffffffffffffff    	// #-1
    9f14:	b	9f1c <plugin_init@@Base+0x4fd0>
    9f18:	mov	x0, #0x0                   	// #0
    9f1c:	ldp	x29, x30, [sp], #48
    9f20:	ret
    9f24:	stp	x29, x30, [sp, #-128]!
    9f28:	mov	x29, sp
    9f2c:	str	x0, [sp, #24]
    9f30:	ldr	x0, [sp, #24]
    9f34:	ldr	x0, [x0]
    9f38:	str	x0, [sp, #96]
    9f3c:	ldr	x0, [sp, #24]
    9f40:	ldr	w0, [x0, #40]
    9f44:	str	w0, [sp, #92]
    9f48:	ldr	x0, [sp, #24]
    9f4c:	bl	a968 <plugin_init@@Base+0x5a1c>
    9f50:	str	x0, [sp, #80]
    9f54:	ldr	x0, [sp, #80]
    9f58:	lsl	x0, x0, #3
    9f5c:	ldr	x1, [sp, #96]
    9f60:	add	x0, x1, x0
    9f64:	str	x0, [sp, #72]
    9f68:	ldr	x0, [sp, #24]
    9f6c:	bl	a980 <plugin_init@@Base+0x5a34>
    9f70:	str	x0, [sp, #64]
    9f74:	ldr	x0, [sp, #64]
    9f78:	lsl	x0, x0, #1
    9f7c:	ldr	x1, [sp, #80]
    9f80:	cmp	x1, x0
    9f84:	b.cc	9fa4 <plugin_init@@Base+0x5058>  // b.lo, b.ul, b.last
    9f88:	ldr	x0, [sp, #64]
    9f8c:	mov	w1, w0
    9f90:	ldr	x0, [sp, #24]
    9f94:	bl	a9a4 <plugin_init@@Base+0x5a58>
    9f98:	and	w0, w0, #0xff
    9f9c:	cmp	w0, #0x0
    9fa0:	b.eq	9fac <plugin_init@@Base+0x5060>  // b.none
    9fa4:	mov	w0, #0x1                   	// #1
    9fa8:	b	9fb0 <plugin_init@@Base+0x5064>
    9fac:	mov	w0, #0x0                   	// #0
    9fb0:	cmp	w0, #0x0
    9fb4:	b.eq	9fec <plugin_init@@Base+0x50a0>  // b.none
    9fb8:	ldr	x0, [sp, #64]
    9fbc:	lsl	x0, x0, #1
    9fc0:	bl	2bf0 <_Z29hash_table_higher_prime_indexm@plt>
    9fc4:	str	w0, [sp, #124]
    9fc8:	adrp	x0, 21000 <xexit@@Base+0x13570>
    9fcc:	ldr	x1, [x0, #4064]
    9fd0:	ldr	w0, [sp, #124]
    9fd4:	lsl	x0, x0, #4
    9fd8:	add	x0, x1, x0
    9fdc:	ldr	w0, [x0]
    9fe0:	mov	w0, w0
    9fe4:	str	x0, [sp, #112]
    9fe8:	b	9ffc <plugin_init@@Base+0x50b0>
    9fec:	ldr	w0, [sp, #92]
    9ff0:	str	w0, [sp, #124]
    9ff4:	ldr	x0, [sp, #80]
    9ff8:	str	x0, [sp, #112]
    9ffc:	ldr	x1, [sp, #112]
    a000:	ldr	x0, [sp, #24]
    a004:	bl	920c <plugin_init@@Base+0x42c0>
    a008:	str	x0, [sp, #56]
    a00c:	ldr	x0, [sp, #24]
    a010:	ldr	x1, [sp, #56]
    a014:	str	x1, [x0]
    a018:	ldr	x0, [sp, #24]
    a01c:	ldr	x1, [sp, #112]
    a020:	str	x1, [x0, #8]
    a024:	ldr	x0, [sp, #24]
    a028:	ldr	w1, [sp, #124]
    a02c:	str	w1, [x0, #40]
    a030:	ldr	x0, [sp, #24]
    a034:	ldr	x1, [x0, #16]
    a038:	ldr	x0, [sp, #24]
    a03c:	ldr	x0, [x0, #24]
    a040:	sub	x1, x1, x0
    a044:	ldr	x0, [sp, #24]
    a048:	str	x1, [x0, #16]
    a04c:	ldr	x0, [sp, #24]
    a050:	str	xzr, [x0, #24]
    a054:	ldr	x0, [sp, #96]
    a058:	str	x0, [sp, #104]
    a05c:	ldr	x0, [sp, #104]
    a060:	str	x0, [sp, #48]
    a064:	ldr	x0, [sp, #48]
    a068:	bl	92b8 <plugin_init@@Base+0x436c>
    a06c:	and	w0, w0, #0xff
    a070:	eor	w0, w0, #0x1
    a074:	and	w0, w0, #0xff
    a078:	cmp	w0, #0x0
    a07c:	b.eq	a0a4 <plugin_init@@Base+0x5158>  // b.none
    a080:	ldr	x0, [sp, #48]
    a084:	bl	92dc <plugin_init@@Base+0x4390>
    a088:	and	w0, w0, #0xff
    a08c:	eor	w0, w0, #0x1
    a090:	and	w0, w0, #0xff
    a094:	cmp	w0, #0x0
    a098:	b.eq	a0a4 <plugin_init@@Base+0x5158>  // b.none
    a09c:	mov	w0, #0x1                   	// #1
    a0a0:	b	a0a8 <plugin_init@@Base+0x515c>
    a0a4:	mov	w0, #0x0                   	// #0
    a0a8:	cmp	w0, #0x0
    a0ac:	b.eq	a0d8 <plugin_init@@Base+0x518c>  // b.none
    a0b0:	ldr	x0, [sp, #48]
    a0b4:	bl	8e08 <plugin_init@@Base+0x3ebc>
    a0b8:	mov	w1, w0
    a0bc:	ldr	x0, [sp, #24]
    a0c0:	bl	a9f0 <plugin_init@@Base+0x5aa4>
    a0c4:	str	x0, [sp, #40]
    a0c8:	ldr	x0, [sp, #48]
    a0cc:	ldr	x1, [x0]
    a0d0:	ldr	x0, [sp, #40]
    a0d4:	str	x1, [x0]
    a0d8:	ldr	x0, [sp, #104]
    a0dc:	add	x0, x0, #0x8
    a0e0:	str	x0, [sp, #104]
    a0e4:	ldr	x1, [sp, #104]
    a0e8:	ldr	x0, [sp, #72]
    a0ec:	cmp	x1, x0
    a0f0:	b.cs	a0f8 <plugin_init@@Base+0x51ac>  // b.hs, b.nlast
    a0f4:	b	a05c <plugin_init@@Base+0x5110>
    a0f8:	ldr	x0, [sp, #24]
    a0fc:	ldrb	w0, [x0, #44]
    a100:	eor	w0, w0, #0x1
    a104:	and	w0, w0, #0xff
    a108:	cmp	w0, #0x0
    a10c:	b.eq	a11c <plugin_init@@Base+0x51d0>  // b.none
    a110:	ldr	x0, [sp, #96]
    a114:	bl	9314 <plugin_init@@Base+0x43c8>
    a118:	b	a124 <plugin_init@@Base+0x51d8>
    a11c:	ldr	x0, [sp, #96]
    a120:	bl	2ce0 <_Z8ggc_freePv@plt>
    a124:	nop
    a128:	ldp	x29, x30, [sp], #128
    a12c:	ret
    a130:	sub	sp, sp, #0x10
    a134:	str	x0, [sp, #8]
    a138:	str	x1, [sp]
    a13c:	ldr	x0, [sp, #8]
    a140:	ldr	x1, [x0]
    a144:	ldr	x0, [sp]
    a148:	ldr	x0, [x0]
    a14c:	cmp	x1, x0
    a150:	cset	w0, eq  // eq = none
    a154:	and	w0, w0, #0xff
    a158:	add	sp, sp, #0x10
    a15c:	ret
    a160:	stp	x29, x30, [sp, #-32]!
    a164:	mov	x29, sp
    a168:	str	x0, [sp, #24]
    a16c:	ldr	x0, [sp, #24]
    a170:	bl	aadc <plugin_init@@Base+0x5b90>
    a174:	nop
    a178:	ldp	x29, x30, [sp], #32
    a17c:	ret
    a180:	stp	x29, x30, [sp, #-128]!
    a184:	mov	x29, sp
    a188:	str	x0, [sp, #24]
    a18c:	ldr	x0, [sp, #24]
    a190:	ldr	x0, [x0]
    a194:	str	x0, [sp, #96]
    a198:	ldr	x0, [sp, #24]
    a19c:	ldr	w0, [x0, #40]
    a1a0:	str	w0, [sp, #92]
    a1a4:	ldr	x0, [sp, #24]
    a1a8:	bl	aaf8 <plugin_init@@Base+0x5bac>
    a1ac:	str	x0, [sp, #80]
    a1b0:	ldr	x0, [sp, #80]
    a1b4:	lsl	x0, x0, #3
    a1b8:	ldr	x1, [sp, #96]
    a1bc:	add	x0, x1, x0
    a1c0:	str	x0, [sp, #72]
    a1c4:	ldr	x0, [sp, #24]
    a1c8:	bl	ab10 <plugin_init@@Base+0x5bc4>
    a1cc:	str	x0, [sp, #64]
    a1d0:	ldr	x0, [sp, #64]
    a1d4:	lsl	x0, x0, #1
    a1d8:	ldr	x1, [sp, #80]
    a1dc:	cmp	x1, x0
    a1e0:	b.cc	a200 <plugin_init@@Base+0x52b4>  // b.lo, b.ul, b.last
    a1e4:	ldr	x0, [sp, #64]
    a1e8:	mov	w1, w0
    a1ec:	ldr	x0, [sp, #24]
    a1f0:	bl	ab34 <plugin_init@@Base+0x5be8>
    a1f4:	and	w0, w0, #0xff
    a1f8:	cmp	w0, #0x0
    a1fc:	b.eq	a208 <plugin_init@@Base+0x52bc>  // b.none
    a200:	mov	w0, #0x1                   	// #1
    a204:	b	a20c <plugin_init@@Base+0x52c0>
    a208:	mov	w0, #0x0                   	// #0
    a20c:	cmp	w0, #0x0
    a210:	b.eq	a248 <plugin_init@@Base+0x52fc>  // b.none
    a214:	ldr	x0, [sp, #64]
    a218:	lsl	x0, x0, #1
    a21c:	bl	2bf0 <_Z29hash_table_higher_prime_indexm@plt>
    a220:	str	w0, [sp, #124]
    a224:	adrp	x0, 21000 <xexit@@Base+0x13570>
    a228:	ldr	x1, [x0, #4064]
    a22c:	ldr	w0, [sp, #124]
    a230:	lsl	x0, x0, #4
    a234:	add	x0, x1, x0
    a238:	ldr	w0, [x0]
    a23c:	mov	w0, w0
    a240:	str	x0, [sp, #112]
    a244:	b	a258 <plugin_init@@Base+0x530c>
    a248:	ldr	w0, [sp, #92]
    a24c:	str	w0, [sp, #124]
    a250:	ldr	x0, [sp, #80]
    a254:	str	x0, [sp, #112]
    a258:	ldr	x1, [sp, #112]
    a25c:	ldr	x0, [sp, #24]
    a260:	bl	9334 <plugin_init@@Base+0x43e8>
    a264:	str	x0, [sp, #56]
    a268:	ldr	x0, [sp, #24]
    a26c:	ldr	x1, [sp, #56]
    a270:	str	x1, [x0]
    a274:	ldr	x0, [sp, #24]
    a278:	ldr	x1, [sp, #112]
    a27c:	str	x1, [x0, #8]
    a280:	ldr	x0, [sp, #24]
    a284:	ldr	w1, [sp, #124]
    a288:	str	w1, [x0, #40]
    a28c:	ldr	x0, [sp, #24]
    a290:	ldr	x1, [x0, #16]
    a294:	ldr	x0, [sp, #24]
    a298:	ldr	x0, [x0, #24]
    a29c:	sub	x1, x1, x0
    a2a0:	ldr	x0, [sp, #24]
    a2a4:	str	x1, [x0, #16]
    a2a8:	ldr	x0, [sp, #24]
    a2ac:	str	xzr, [x0, #24]
    a2b0:	ldr	x0, [sp, #96]
    a2b4:	str	x0, [sp, #104]
    a2b8:	ldr	x0, [sp, #104]
    a2bc:	str	x0, [sp, #48]
    a2c0:	ldr	x0, [sp, #48]
    a2c4:	bl	93e0 <plugin_init@@Base+0x4494>
    a2c8:	and	w0, w0, #0xff
    a2cc:	eor	w0, w0, #0x1
    a2d0:	and	w0, w0, #0xff
    a2d4:	cmp	w0, #0x0
    a2d8:	b.eq	a300 <plugin_init@@Base+0x53b4>  // b.none
    a2dc:	ldr	x0, [sp, #48]
    a2e0:	bl	9404 <plugin_init@@Base+0x44b8>
    a2e4:	and	w0, w0, #0xff
    a2e8:	eor	w0, w0, #0x1
    a2ec:	and	w0, w0, #0xff
    a2f0:	cmp	w0, #0x0
    a2f4:	b.eq	a300 <plugin_init@@Base+0x53b4>  // b.none
    a2f8:	mov	w0, #0x1                   	// #1
    a2fc:	b	a304 <plugin_init@@Base+0x53b8>
    a300:	mov	w0, #0x0                   	// #0
    a304:	cmp	w0, #0x0
    a308:	b.eq	a338 <plugin_init@@Base+0x53ec>  // b.none
    a30c:	ldr	x0, [sp, #48]
    a310:	ldr	x0, [x0]
    a314:	bl	5b34 <plugin_init@@Base+0xbe8>
    a318:	mov	w1, w0
    a31c:	ldr	x0, [sp, #24]
    a320:	bl	ab80 <plugin_init@@Base+0x5c34>
    a324:	str	x0, [sp, #40]
    a328:	ldr	x0, [sp, #48]
    a32c:	ldr	x1, [x0]
    a330:	ldr	x0, [sp, #40]
    a334:	str	x1, [x0]
    a338:	ldr	x0, [sp, #104]
    a33c:	add	x0, x0, #0x8
    a340:	str	x0, [sp, #104]
    a344:	ldr	x1, [sp, #104]
    a348:	ldr	x0, [sp, #72]
    a34c:	cmp	x1, x0
    a350:	b.cs	a358 <plugin_init@@Base+0x540c>  // b.hs, b.nlast
    a354:	b	a2b8 <plugin_init@@Base+0x536c>
    a358:	ldr	x0, [sp, #24]
    a35c:	ldrb	w0, [x0, #44]
    a360:	eor	w0, w0, #0x1
    a364:	and	w0, w0, #0xff
    a368:	cmp	w0, #0x0
    a36c:	b.eq	a37c <plugin_init@@Base+0x5430>  // b.none
    a370:	ldr	x0, [sp, #96]
    a374:	bl	943c <plugin_init@@Base+0x44f0>
    a378:	b	a384 <plugin_init@@Base+0x5438>
    a37c:	ldr	x0, [sp, #96]
    a380:	bl	2ce0 <_Z8ggc_freePv@plt>
    a384:	nop
    a388:	ldp	x29, x30, [sp], #128
    a38c:	ret
    a390:	stp	x29, x30, [sp, #-32]!
    a394:	mov	x29, sp
    a398:	str	x0, [sp, #24]
    a39c:	ldr	x0, [sp, #24]
    a3a0:	bl	ac6c <plugin_init@@Base+0x5d20>
    a3a4:	nop
    a3a8:	ldp	x29, x30, [sp], #32
    a3ac:	ret
    a3b0:	stp	x29, x30, [sp, #-32]!
    a3b4:	mov	x29, sp
    a3b8:	str	x0, [sp, #24]
    a3bc:	mov	x1, #0x8                   	// #8
    a3c0:	ldr	x0, [sp, #24]
    a3c4:	bl	3070 <xcalloc@plt>
    a3c8:	ldp	x29, x30, [sp], #32
    a3cc:	ret
    a3d0:	stp	x29, x30, [sp, #-32]!
    a3d4:	mov	x29, sp
    a3d8:	str	x0, [sp, #24]
    a3dc:	bl	ac88 <plugin_init@@Base+0x5d3c>
    a3e0:	and	w0, w0, #0xff
    a3e4:	cmp	w0, #0x0
    a3e8:	b.eq	a410 <plugin_init@@Base+0x54c4>  // b.none
    a3ec:	ldr	x0, [sp, #24]
    a3f0:	lsl	x4, x0, #3
    a3f4:	ldr	x3, [sp, #24]
    a3f8:	mov	x2, #0x8                   	// #8
    a3fc:	adrp	x0, a000 <plugin_init@@Base+0x50b4>
    a400:	add	x1, x0, #0xc90
    a404:	mov	x0, x4
    a408:	bl	2e90 <_Z26ggc_internal_cleared_allocmPFvPvEmm@plt>
    a40c:	b	a42c <plugin_init@@Base+0x54e0>
    a410:	ldr	x0, [sp, #24]
    a414:	lsl	x0, x0, #3
    a418:	mov	x3, #0x0                   	// #0
    a41c:	mov	x2, #0x0                   	// #0
    a420:	mov	x1, #0x0                   	// #0
    a424:	bl	2e90 <_Z26ggc_internal_cleared_allocmPFvPvEmm@plt>
    a428:	nop
    a42c:	ldp	x29, x30, [sp], #32
    a430:	ret
    a434:	stp	x29, x30, [sp, #-32]!
    a438:	mov	x29, sp
    a43c:	str	x0, [sp, #24]
    a440:	ldr	x0, [sp, #24]
    a444:	bl	aca4 <plugin_init@@Base+0x5d58>
    a448:	nop
    a44c:	ldp	x29, x30, [sp], #32
    a450:	ret
    a454:	sub	sp, sp, #0x10
    a458:	str	x0, [sp, #8]
    a45c:	ldr	x0, [sp, #8]
    a460:	cmp	x0, #0x0
    a464:	cset	w0, eq  // eq = none
    a468:	and	w0, w0, #0xff
    a46c:	add	sp, sp, #0x10
    a470:	ret
    a474:	sub	sp, sp, #0x10
    a478:	str	x0, [sp, #8]
    a47c:	ldr	x0, [sp, #8]
    a480:	cmp	x0, #0x1
    a484:	cset	w0, eq  // eq = none
    a488:	and	w0, w0, #0xff
    a48c:	add	sp, sp, #0x10
    a490:	ret
    a494:	stp	x29, x30, [sp, #-32]!
    a498:	mov	x29, sp
    a49c:	str	x0, [sp, #24]
    a4a0:	mov	x1, #0x8                   	// #8
    a4a4:	ldr	x0, [sp, #24]
    a4a8:	bl	3070 <xcalloc@plt>
    a4ac:	ldp	x29, x30, [sp], #32
    a4b0:	ret
    a4b4:	stp	x29, x30, [sp, #-32]!
    a4b8:	mov	x29, sp
    a4bc:	str	x0, [sp, #24]
    a4c0:	bl	acc0 <plugin_init@@Base+0x5d74>
    a4c4:	and	w0, w0, #0xff
    a4c8:	cmp	w0, #0x0
    a4cc:	b.eq	a4f4 <plugin_init@@Base+0x55a8>  // b.none
    a4d0:	ldr	x0, [sp, #24]
    a4d4:	lsl	x4, x0, #3
    a4d8:	ldr	x3, [sp, #24]
    a4dc:	mov	x2, #0x8                   	// #8
    a4e0:	adrp	x0, a000 <plugin_init@@Base+0x50b4>
    a4e4:	add	x1, x0, #0xcc8
    a4e8:	mov	x0, x4
    a4ec:	bl	2e90 <_Z26ggc_internal_cleared_allocmPFvPvEmm@plt>
    a4f0:	b	a510 <plugin_init@@Base+0x55c4>
    a4f4:	ldr	x0, [sp, #24]
    a4f8:	lsl	x0, x0, #3
    a4fc:	mov	x3, #0x0                   	// #0
    a500:	mov	x2, #0x0                   	// #0
    a504:	mov	x1, #0x0                   	// #0
    a508:	bl	2e90 <_Z26ggc_internal_cleared_allocmPFvPvEmm@plt>
    a50c:	nop
    a510:	ldp	x29, x30, [sp], #32
    a514:	ret
    a518:	sub	sp, sp, #0x10
    a51c:	str	x0, [sp, #8]
    a520:	ldr	x0, [sp, #8]
    a524:	cmp	x0, #0x0
    a528:	cset	w0, eq  // eq = none
    a52c:	and	w0, w0, #0xff
    a530:	add	sp, sp, #0x10
    a534:	ret
    a538:	sub	sp, sp, #0x10
    a53c:	str	x0, [sp, #8]
    a540:	ldr	x0, [sp, #8]
    a544:	cmp	x0, #0x1
    a548:	cset	w0, eq  // eq = none
    a54c:	and	w0, w0, #0xff
    a550:	add	sp, sp, #0x10
    a554:	ret
    a558:	stp	x29, x30, [sp, #-32]!
    a55c:	mov	x29, sp
    a560:	str	x0, [sp, #24]
    a564:	mov	x1, #0x8                   	// #8
    a568:	ldr	x0, [sp, #24]
    a56c:	bl	3070 <xcalloc@plt>
    a570:	ldp	x29, x30, [sp], #32
    a574:	ret
    a578:	stp	x29, x30, [sp, #-32]!
    a57c:	mov	x29, sp
    a580:	str	x0, [sp, #24]
    a584:	bl	acdc <plugin_init@@Base+0x5d90>
    a588:	and	w0, w0, #0xff
    a58c:	cmp	w0, #0x0
    a590:	b.eq	a5b8 <plugin_init@@Base+0x566c>  // b.none
    a594:	ldr	x0, [sp, #24]
    a598:	lsl	x4, x0, #3
    a59c:	ldr	x3, [sp, #24]
    a5a0:	mov	x2, #0x8                   	// #8
    a5a4:	adrp	x0, a000 <plugin_init@@Base+0x50b4>
    a5a8:	add	x1, x0, #0xce4
    a5ac:	mov	x0, x4
    a5b0:	bl	2e90 <_Z26ggc_internal_cleared_allocmPFvPvEmm@plt>
    a5b4:	b	a5d4 <plugin_init@@Base+0x5688>
    a5b8:	ldr	x0, [sp, #24]
    a5bc:	lsl	x0, x0, #3
    a5c0:	mov	x3, #0x0                   	// #0
    a5c4:	mov	x2, #0x0                   	// #0
    a5c8:	mov	x1, #0x0                   	// #0
    a5cc:	bl	2e90 <_Z26ggc_internal_cleared_allocmPFvPvEmm@plt>
    a5d0:	nop
    a5d4:	ldp	x29, x30, [sp], #32
    a5d8:	ret
    a5dc:	sub	sp, sp, #0x10
    a5e0:	str	x0, [sp, #8]
    a5e4:	ldr	x0, [sp, #8]
    a5e8:	cmp	x0, #0x0
    a5ec:	cset	w0, eq  // eq = none
    a5f0:	and	w0, w0, #0xff
    a5f4:	add	sp, sp, #0x10
    a5f8:	ret
    a5fc:	sub	sp, sp, #0x10
    a600:	str	x0, [sp, #8]
    a604:	ldr	x0, [sp, #8]
    a608:	cmp	x0, #0x1
    a60c:	cset	w0, eq  // eq = none
    a610:	and	w0, w0, #0xff
    a614:	add	sp, sp, #0x10
    a618:	ret
    a61c:	stp	x29, x30, [sp, #-128]!
    a620:	mov	x29, sp
    a624:	str	x0, [sp, #24]
    a628:	ldr	x0, [sp, #24]
    a62c:	ldr	x0, [x0]
    a630:	str	x0, [sp, #96]
    a634:	ldr	x0, [sp, #24]
    a638:	ldr	w0, [x0, #40]
    a63c:	str	w0, [sp, #92]
    a640:	ldr	x0, [sp, #24]
    a644:	bl	acf8 <plugin_init@@Base+0x5dac>
    a648:	str	x0, [sp, #80]
    a64c:	ldr	x0, [sp, #80]
    a650:	lsl	x0, x0, #3
    a654:	ldr	x1, [sp, #96]
    a658:	add	x0, x1, x0
    a65c:	str	x0, [sp, #72]
    a660:	ldr	x0, [sp, #24]
    a664:	bl	ad10 <plugin_init@@Base+0x5dc4>
    a668:	str	x0, [sp, #64]
    a66c:	ldr	x0, [sp, #64]
    a670:	lsl	x0, x0, #1
    a674:	ldr	x1, [sp, #80]
    a678:	cmp	x1, x0
    a67c:	b.cc	a69c <plugin_init@@Base+0x5750>  // b.lo, b.ul, b.last
    a680:	ldr	x0, [sp, #64]
    a684:	mov	w1, w0
    a688:	ldr	x0, [sp, #24]
    a68c:	bl	ad34 <plugin_init@@Base+0x5de8>
    a690:	and	w0, w0, #0xff
    a694:	cmp	w0, #0x0
    a698:	b.eq	a6a4 <plugin_init@@Base+0x5758>  // b.none
    a69c:	mov	w0, #0x1                   	// #1
    a6a0:	b	a6a8 <plugin_init@@Base+0x575c>
    a6a4:	mov	w0, #0x0                   	// #0
    a6a8:	cmp	w0, #0x0
    a6ac:	b.eq	a6e4 <plugin_init@@Base+0x5798>  // b.none
    a6b0:	ldr	x0, [sp, #64]
    a6b4:	lsl	x0, x0, #1
    a6b8:	bl	2bf0 <_Z29hash_table_higher_prime_indexm@plt>
    a6bc:	str	w0, [sp, #124]
    a6c0:	adrp	x0, 21000 <xexit@@Base+0x13570>
    a6c4:	ldr	x1, [x0, #4064]
    a6c8:	ldr	w0, [sp, #124]
    a6cc:	lsl	x0, x0, #4
    a6d0:	add	x0, x1, x0
    a6d4:	ldr	w0, [x0]
    a6d8:	mov	w0, w0
    a6dc:	str	x0, [sp, #112]
    a6e0:	b	a6f4 <plugin_init@@Base+0x57a8>
    a6e4:	ldr	w0, [sp, #92]
    a6e8:	str	w0, [sp, #124]
    a6ec:	ldr	x0, [sp, #80]
    a6f0:	str	x0, [sp, #112]
    a6f4:	ldr	x1, [sp, #112]
    a6f8:	ldr	x0, [sp, #24]
    a6fc:	bl	90d8 <plugin_init@@Base+0x418c>
    a700:	str	x0, [sp, #56]
    a704:	ldr	x0, [sp, #24]
    a708:	ldr	x1, [sp, #56]
    a70c:	str	x1, [x0]
    a710:	ldr	x0, [sp, #24]
    a714:	ldr	x1, [sp, #112]
    a718:	str	x1, [x0, #8]
    a71c:	ldr	x0, [sp, #24]
    a720:	ldr	w1, [sp, #124]
    a724:	str	w1, [x0, #40]
    a728:	ldr	x0, [sp, #24]
    a72c:	ldr	x1, [x0, #16]
    a730:	ldr	x0, [sp, #24]
    a734:	ldr	x0, [x0, #24]
    a738:	sub	x1, x1, x0
    a73c:	ldr	x0, [sp, #24]
    a740:	str	x1, [x0, #16]
    a744:	ldr	x0, [sp, #24]
    a748:	str	xzr, [x0, #24]
    a74c:	ldr	x0, [sp, #96]
    a750:	str	x0, [sp, #104]
    a754:	ldr	x0, [sp, #104]
    a758:	str	x0, [sp, #48]
    a75c:	ldr	x0, [sp, #48]
    a760:	bl	9184 <plugin_init@@Base+0x4238>
    a764:	and	w0, w0, #0xff
    a768:	eor	w0, w0, #0x1
    a76c:	and	w0, w0, #0xff
    a770:	cmp	w0, #0x0
    a774:	b.eq	a79c <plugin_init@@Base+0x5850>  // b.none
    a778:	ldr	x0, [sp, #48]
    a77c:	bl	91a8 <plugin_init@@Base+0x425c>
    a780:	and	w0, w0, #0xff
    a784:	eor	w0, w0, #0x1
    a788:	and	w0, w0, #0xff
    a78c:	cmp	w0, #0x0
    a790:	b.eq	a79c <plugin_init@@Base+0x5850>  // b.none
    a794:	mov	w0, #0x1                   	// #1
    a798:	b	a7a0 <plugin_init@@Base+0x5854>
    a79c:	mov	w0, #0x0                   	// #0
    a7a0:	cmp	w0, #0x0
    a7a4:	b.eq	a7d4 <plugin_init@@Base+0x5888>  // b.none
    a7a8:	ldr	x0, [sp, #48]
    a7ac:	ldr	x0, [x0]
    a7b0:	bl	5ae4 <plugin_init@@Base+0xb98>
    a7b4:	mov	w1, w0
    a7b8:	ldr	x0, [sp, #24]
    a7bc:	bl	ad80 <plugin_init@@Base+0x5e34>
    a7c0:	str	x0, [sp, #40]
    a7c4:	ldr	x0, [sp, #48]
    a7c8:	ldr	x1, [x0]
    a7cc:	ldr	x0, [sp, #40]
    a7d0:	str	x1, [x0]
    a7d4:	ldr	x0, [sp, #104]
    a7d8:	add	x0, x0, #0x8
    a7dc:	str	x0, [sp, #104]
    a7e0:	ldr	x1, [sp, #104]
    a7e4:	ldr	x0, [sp, #72]
    a7e8:	cmp	x1, x0
    a7ec:	b.cs	a7f4 <plugin_init@@Base+0x58a8>  // b.hs, b.nlast
    a7f0:	b	a754 <plugin_init@@Base+0x5808>
    a7f4:	ldr	x0, [sp, #24]
    a7f8:	ldrb	w0, [x0, #44]
    a7fc:	eor	w0, w0, #0x1
    a800:	and	w0, w0, #0xff
    a804:	cmp	w0, #0x0
    a808:	b.eq	a818 <plugin_init@@Base+0x58cc>  // b.none
    a80c:	ldr	x0, [sp, #96]
    a810:	bl	91ec <plugin_init@@Base+0x42a0>
    a814:	b	a820 <plugin_init@@Base+0x58d4>
    a818:	ldr	x0, [sp, #96]
    a81c:	bl	2ce0 <_Z8ggc_freePv@plt>
    a820:	nop
    a824:	ldp	x29, x30, [sp], #128
    a828:	ret
    a82c:	stp	x29, x30, [sp, #-48]!
    a830:	mov	x29, sp
    a834:	str	x0, [sp, #24]
    a838:	str	x1, [sp, #16]
    a83c:	add	x0, sp, #0x28
    a840:	mov	x1, x0
    a844:	ldr	x0, [sp, #24]
    a848:	bl	b7e0 <plugin_init@@Base+0x6894>
    a84c:	cmp	w0, #0x0
    a850:	cset	w0, eq  // eq = none
    a854:	and	w0, w0, #0xff
    a858:	cmp	w0, #0x0
    a85c:	b.eq	a868 <plugin_init@@Base+0x591c>  // b.none
    a860:	mov	w0, #0x0                   	// #0
    a864:	b	a87c <plugin_init@@Base+0x5930>
    a868:	ldr	x0, [sp, #40]
    a86c:	mov	w1, w0
    a870:	ldr	x0, [sp, #16]
    a874:	str	w1, [x0]
    a878:	mov	w0, #0x1                   	// #1
    a87c:	ldp	x29, x30, [sp], #48
    a880:	ret
    a884:	stp	x29, x30, [sp, #-48]!
    a888:	mov	x29, sp
    a88c:	str	x0, [sp, #24]
    a890:	str	x1, [sp, #16]
    a894:	add	x0, sp, #0x28
    a898:	mov	x1, x0
    a89c:	ldr	x0, [sp, #24]
    a8a0:	bl	b7e0 <plugin_init@@Base+0x6894>
    a8a4:	cmp	w0, #0x0
    a8a8:	cset	w0, eq  // eq = none
    a8ac:	and	w0, w0, #0xff
    a8b0:	cmp	w0, #0x0
    a8b4:	b.eq	a8c0 <plugin_init@@Base+0x5974>  // b.none
    a8b8:	mov	w0, #0x0                   	// #0
    a8bc:	b	a8d0 <plugin_init@@Base+0x5984>
    a8c0:	ldr	x1, [sp, #40]
    a8c4:	ldr	x0, [sp, #16]
    a8c8:	str	x1, [x0]
    a8cc:	mov	w0, #0x1                   	// #1
    a8d0:	ldp	x29, x30, [sp], #48
    a8d4:	ret
    a8d8:	stp	x29, x30, [sp, #-32]!
    a8dc:	mov	x29, sp
    a8e0:	str	x0, [sp, #24]
    a8e4:	ldr	x0, [sp, #24]
    a8e8:	bl	ae6c <plugin_init@@Base+0x5f20>
    a8ec:	nop
    a8f0:	ldp	x29, x30, [sp], #32
    a8f4:	ret
    a8f8:	stp	x29, x30, [sp, #-32]!
    a8fc:	mov	x29, sp
    a900:	str	x0, [sp, #24]
    a904:	ldr	x0, [sp, #24]
    a908:	bl	ae80 <plugin_init@@Base+0x5f34>
    a90c:	ldp	x29, x30, [sp], #32
    a910:	ret
    a914:	stp	x29, x30, [sp, #-80]!
    a918:	mov	x29, sp
    a91c:	str	x19, [sp, #16]
    a920:	str	x0, [sp, #56]
    a924:	str	w1, [sp, #52]
    a928:	str	x2, [sp, #40]
    a92c:	ldr	x0, [sp, #40]
    a930:	bl	ae94 <plugin_init@@Base+0x5f48>
    a934:	mov	x19, x0
    a938:	ldr	x0, [sp, #40]
    a93c:	bl	aeb0 <plugin_init@@Base+0x5f64>
    a940:	mov	w1, w0
    a944:	add	x0, sp, #0x40
    a948:	ldr	w3, [sp, #52]
    a94c:	mov	w2, w1
    a950:	mov	x1, x19
    a954:	bl	56c0 <plugin_init@@Base+0x774>
    a958:	ldp	x0, x1, [sp, #64]
    a95c:	ldr	x19, [sp, #16]
    a960:	ldp	x29, x30, [sp], #80
    a964:	ret
    a968:	sub	sp, sp, #0x10
    a96c:	str	x0, [sp, #8]
    a970:	ldr	x0, [sp, #8]
    a974:	ldr	x0, [x0, #8]
    a978:	add	sp, sp, #0x10
    a97c:	ret
    a980:	sub	sp, sp, #0x10
    a984:	str	x0, [sp, #8]
    a988:	ldr	x0, [sp, #8]
    a98c:	ldr	x1, [x0, #16]
    a990:	ldr	x0, [sp, #8]
    a994:	ldr	x0, [x0, #24]
    a998:	sub	x0, x1, x0
    a99c:	add	sp, sp, #0x10
    a9a0:	ret
    a9a4:	sub	sp, sp, #0x10
    a9a8:	str	x0, [sp, #8]
    a9ac:	str	w1, [sp, #4]
    a9b0:	ldr	w0, [sp, #4]
    a9b4:	lsl	w0, w0, #3
    a9b8:	mov	w1, w0
    a9bc:	ldr	x0, [sp, #8]
    a9c0:	ldr	x0, [x0, #8]
    a9c4:	cmp	x1, x0
    a9c8:	b.cs	a9e4 <plugin_init@@Base+0x5a98>  // b.hs, b.nlast
    a9cc:	ldr	x0, [sp, #8]
    a9d0:	ldr	x0, [x0, #8]
    a9d4:	cmp	x0, #0x20
    a9d8:	b.ls	a9e4 <plugin_init@@Base+0x5a98>  // b.plast
    a9dc:	mov	w0, #0x1                   	// #1
    a9e0:	b	a9e8 <plugin_init@@Base+0x5a9c>
    a9e4:	mov	w0, #0x0                   	// #0
    a9e8:	add	sp, sp, #0x10
    a9ec:	ret
    a9f0:	stp	x29, x30, [sp, #-64]!
    a9f4:	mov	x29, sp
    a9f8:	str	x0, [sp, #24]
    a9fc:	str	w1, [sp, #20]
    aa00:	ldr	x0, [sp, #24]
    aa04:	ldr	w0, [x0, #40]
    aa08:	mov	w1, w0
    aa0c:	ldr	w0, [sp, #20]
    aa10:	bl	57bc <plugin_init@@Base+0x870>
    aa14:	str	w0, [sp, #60]
    aa18:	ldr	x0, [sp, #24]
    aa1c:	ldr	x0, [x0, #8]
    aa20:	str	x0, [sp, #48]
    aa24:	ldr	x0, [sp, #24]
    aa28:	ldr	x1, [x0]
    aa2c:	ldr	w0, [sp, #60]
    aa30:	lsl	x0, x0, #3
    aa34:	add	x0, x1, x0
    aa38:	str	x0, [sp, #40]
    aa3c:	ldr	x0, [sp, #40]
    aa40:	bl	92b8 <plugin_init@@Base+0x436c>
    aa44:	and	w0, w0, #0xff
    aa48:	cmp	w0, #0x0
    aa4c:	b.eq	aa58 <plugin_init@@Base+0x5b0c>  // b.none
    aa50:	ldr	x0, [sp, #40]
    aa54:	b	aad4 <plugin_init@@Base+0x5b88>
    aa58:	ldr	x0, [sp, #24]
    aa5c:	ldr	w0, [x0, #40]
    aa60:	mov	w1, w0
    aa64:	ldr	w0, [sp, #20]
    aa68:	bl	5810 <plugin_init@@Base+0x8c4>
    aa6c:	str	w0, [sp, #36]
    aa70:	ldr	w1, [sp, #60]
    aa74:	ldr	w0, [sp, #36]
    aa78:	add	w0, w1, w0
    aa7c:	str	w0, [sp, #60]
    aa80:	ldr	w0, [sp, #60]
    aa84:	ldr	x1, [sp, #48]
    aa88:	cmp	x1, x0
    aa8c:	b.hi	aaa4 <plugin_init@@Base+0x5b58>  // b.pmore
    aa90:	ldr	x0, [sp, #48]
    aa94:	mov	w1, w0
    aa98:	ldr	w0, [sp, #60]
    aa9c:	sub	w0, w0, w1
    aaa0:	str	w0, [sp, #60]
    aaa4:	ldr	x0, [sp, #24]
    aaa8:	ldr	x1, [x0]
    aaac:	ldr	w0, [sp, #60]
    aab0:	lsl	x0, x0, #3
    aab4:	add	x0, x1, x0
    aab8:	str	x0, [sp, #40]
    aabc:	ldr	x0, [sp, #40]
    aac0:	bl	92b8 <plugin_init@@Base+0x436c>
    aac4:	and	w0, w0, #0xff
    aac8:	cmp	w0, #0x0
    aacc:	b.eq	aa70 <plugin_init@@Base+0x5b24>  // b.none
    aad0:	ldr	x0, [sp, #40]
    aad4:	ldp	x29, x30, [sp], #64
    aad8:	ret
    aadc:	sub	sp, sp, #0x10
    aae0:	str	x0, [sp, #8]
    aae4:	ldr	x0, [sp, #8]
    aae8:	str	xzr, [x0]
    aaec:	nop
    aaf0:	add	sp, sp, #0x10
    aaf4:	ret
    aaf8:	sub	sp, sp, #0x10
    aafc:	str	x0, [sp, #8]
    ab00:	ldr	x0, [sp, #8]
    ab04:	ldr	x0, [x0, #8]
    ab08:	add	sp, sp, #0x10
    ab0c:	ret
    ab10:	sub	sp, sp, #0x10
    ab14:	str	x0, [sp, #8]
    ab18:	ldr	x0, [sp, #8]
    ab1c:	ldr	x1, [x0, #16]
    ab20:	ldr	x0, [sp, #8]
    ab24:	ldr	x0, [x0, #24]
    ab28:	sub	x0, x1, x0
    ab2c:	add	sp, sp, #0x10
    ab30:	ret
    ab34:	sub	sp, sp, #0x10
    ab38:	str	x0, [sp, #8]
    ab3c:	str	w1, [sp, #4]
    ab40:	ldr	w0, [sp, #4]
    ab44:	lsl	w0, w0, #3
    ab48:	mov	w1, w0
    ab4c:	ldr	x0, [sp, #8]
    ab50:	ldr	x0, [x0, #8]
    ab54:	cmp	x1, x0
    ab58:	b.cs	ab74 <plugin_init@@Base+0x5c28>  // b.hs, b.nlast
    ab5c:	ldr	x0, [sp, #8]
    ab60:	ldr	x0, [x0, #8]
    ab64:	cmp	x0, #0x20
    ab68:	b.ls	ab74 <plugin_init@@Base+0x5c28>  // b.plast
    ab6c:	mov	w0, #0x1                   	// #1
    ab70:	b	ab78 <plugin_init@@Base+0x5c2c>
    ab74:	mov	w0, #0x0                   	// #0
    ab78:	add	sp, sp, #0x10
    ab7c:	ret
    ab80:	stp	x29, x30, [sp, #-64]!
    ab84:	mov	x29, sp
    ab88:	str	x0, [sp, #24]
    ab8c:	str	w1, [sp, #20]
    ab90:	ldr	x0, [sp, #24]
    ab94:	ldr	w0, [x0, #40]
    ab98:	mov	w1, w0
    ab9c:	ldr	w0, [sp, #20]
    aba0:	bl	57bc <plugin_init@@Base+0x870>
    aba4:	str	w0, [sp, #60]
    aba8:	ldr	x0, [sp, #24]
    abac:	ldr	x0, [x0, #8]
    abb0:	str	x0, [sp, #48]
    abb4:	ldr	x0, [sp, #24]
    abb8:	ldr	x1, [x0]
    abbc:	ldr	w0, [sp, #60]
    abc0:	lsl	x0, x0, #3
    abc4:	add	x0, x1, x0
    abc8:	str	x0, [sp, #40]
    abcc:	ldr	x0, [sp, #40]
    abd0:	bl	93e0 <plugin_init@@Base+0x4494>
    abd4:	and	w0, w0, #0xff
    abd8:	cmp	w0, #0x0
    abdc:	b.eq	abe8 <plugin_init@@Base+0x5c9c>  // b.none
    abe0:	ldr	x0, [sp, #40]
    abe4:	b	ac64 <plugin_init@@Base+0x5d18>
    abe8:	ldr	x0, [sp, #24]
    abec:	ldr	w0, [x0, #40]
    abf0:	mov	w1, w0
    abf4:	ldr	w0, [sp, #20]
    abf8:	bl	5810 <plugin_init@@Base+0x8c4>
    abfc:	str	w0, [sp, #36]
    ac00:	ldr	w1, [sp, #60]
    ac04:	ldr	w0, [sp, #36]
    ac08:	add	w0, w1, w0
    ac0c:	str	w0, [sp, #60]
    ac10:	ldr	w0, [sp, #60]
    ac14:	ldr	x1, [sp, #48]
    ac18:	cmp	x1, x0
    ac1c:	b.hi	ac34 <plugin_init@@Base+0x5ce8>  // b.pmore
    ac20:	ldr	x0, [sp, #48]
    ac24:	mov	w1, w0
    ac28:	ldr	w0, [sp, #60]
    ac2c:	sub	w0, w0, w1
    ac30:	str	w0, [sp, #60]
    ac34:	ldr	x0, [sp, #24]
    ac38:	ldr	x1, [x0]
    ac3c:	ldr	w0, [sp, #60]
    ac40:	lsl	x0, x0, #3
    ac44:	add	x0, x1, x0
    ac48:	str	x0, [sp, #40]
    ac4c:	ldr	x0, [sp, #40]
    ac50:	bl	93e0 <plugin_init@@Base+0x4494>
    ac54:	and	w0, w0, #0xff
    ac58:	cmp	w0, #0x0
    ac5c:	b.eq	ac00 <plugin_init@@Base+0x5cb4>  // b.none
    ac60:	ldr	x0, [sp, #40]
    ac64:	ldp	x29, x30, [sp], #64
    ac68:	ret
    ac6c:	sub	sp, sp, #0x10
    ac70:	str	x0, [sp, #8]
    ac74:	ldr	x0, [sp, #8]
    ac78:	str	xzr, [x0]
    ac7c:	nop
    ac80:	add	sp, sp, #0x10
    ac84:	ret
    ac88:	mov	w0, #0x0                   	// #0
    ac8c:	ret
    ac90:	sub	sp, sp, #0x10
    ac94:	str	x0, [sp, #8]
    ac98:	nop
    ac9c:	add	sp, sp, #0x10
    aca0:	ret
    aca4:	sub	sp, sp, #0x10
    aca8:	str	x0, [sp, #8]
    acac:	ldr	x0, [sp, #8]
    acb0:	str	xzr, [x0]
    acb4:	nop
    acb8:	add	sp, sp, #0x10
    acbc:	ret
    acc0:	mov	w0, #0x0                   	// #0
    acc4:	ret
    acc8:	sub	sp, sp, #0x10
    accc:	str	x0, [sp, #8]
    acd0:	nop
    acd4:	add	sp, sp, #0x10
    acd8:	ret
    acdc:	mov	w0, #0x0                   	// #0
    ace0:	ret
    ace4:	sub	sp, sp, #0x10
    ace8:	str	x0, [sp, #8]
    acec:	nop
    acf0:	add	sp, sp, #0x10
    acf4:	ret
    acf8:	sub	sp, sp, #0x10
    acfc:	str	x0, [sp, #8]
    ad00:	ldr	x0, [sp, #8]
    ad04:	ldr	x0, [x0, #8]
    ad08:	add	sp, sp, #0x10
    ad0c:	ret
    ad10:	sub	sp, sp, #0x10
    ad14:	str	x0, [sp, #8]
    ad18:	ldr	x0, [sp, #8]
    ad1c:	ldr	x1, [x0, #16]
    ad20:	ldr	x0, [sp, #8]
    ad24:	ldr	x0, [x0, #24]
    ad28:	sub	x0, x1, x0
    ad2c:	add	sp, sp, #0x10
    ad30:	ret
    ad34:	sub	sp, sp, #0x10
    ad38:	str	x0, [sp, #8]
    ad3c:	str	w1, [sp, #4]
    ad40:	ldr	w0, [sp, #4]
    ad44:	lsl	w0, w0, #3
    ad48:	mov	w1, w0
    ad4c:	ldr	x0, [sp, #8]
    ad50:	ldr	x0, [x0, #8]
    ad54:	cmp	x1, x0
    ad58:	b.cs	ad74 <plugin_init@@Base+0x5e28>  // b.hs, b.nlast
    ad5c:	ldr	x0, [sp, #8]
    ad60:	ldr	x0, [x0, #8]
    ad64:	cmp	x0, #0x20
    ad68:	b.ls	ad74 <plugin_init@@Base+0x5e28>  // b.plast
    ad6c:	mov	w0, #0x1                   	// #1
    ad70:	b	ad78 <plugin_init@@Base+0x5e2c>
    ad74:	mov	w0, #0x0                   	// #0
    ad78:	add	sp, sp, #0x10
    ad7c:	ret
    ad80:	stp	x29, x30, [sp, #-64]!
    ad84:	mov	x29, sp
    ad88:	str	x0, [sp, #24]
    ad8c:	str	w1, [sp, #20]
    ad90:	ldr	x0, [sp, #24]
    ad94:	ldr	w0, [x0, #40]
    ad98:	mov	w1, w0
    ad9c:	ldr	w0, [sp, #20]
    ada0:	bl	57bc <plugin_init@@Base+0x870>
    ada4:	str	w0, [sp, #60]
    ada8:	ldr	x0, [sp, #24]
    adac:	ldr	x0, [x0, #8]
    adb0:	str	x0, [sp, #48]
    adb4:	ldr	x0, [sp, #24]
    adb8:	ldr	x1, [x0]
    adbc:	ldr	w0, [sp, #60]
    adc0:	lsl	x0, x0, #3
    adc4:	add	x0, x1, x0
    adc8:	str	x0, [sp, #40]
    adcc:	ldr	x0, [sp, #40]
    add0:	bl	9184 <plugin_init@@Base+0x4238>
    add4:	and	w0, w0, #0xff
    add8:	cmp	w0, #0x0
    addc:	b.eq	ade8 <plugin_init@@Base+0x5e9c>  // b.none
    ade0:	ldr	x0, [sp, #40]
    ade4:	b	ae64 <plugin_init@@Base+0x5f18>
    ade8:	ldr	x0, [sp, #24]
    adec:	ldr	w0, [x0, #40]
    adf0:	mov	w1, w0
    adf4:	ldr	w0, [sp, #20]
    adf8:	bl	5810 <plugin_init@@Base+0x8c4>
    adfc:	str	w0, [sp, #36]
    ae00:	ldr	w1, [sp, #60]
    ae04:	ldr	w0, [sp, #36]
    ae08:	add	w0, w1, w0
    ae0c:	str	w0, [sp, #60]
    ae10:	ldr	w0, [sp, #60]
    ae14:	ldr	x1, [sp, #48]
    ae18:	cmp	x1, x0
    ae1c:	b.hi	ae34 <plugin_init@@Base+0x5ee8>  // b.pmore
    ae20:	ldr	x0, [sp, #48]
    ae24:	mov	w1, w0
    ae28:	ldr	w0, [sp, #60]
    ae2c:	sub	w0, w0, w1
    ae30:	str	w0, [sp, #60]
    ae34:	ldr	x0, [sp, #24]
    ae38:	ldr	x1, [x0]
    ae3c:	ldr	w0, [sp, #60]
    ae40:	lsl	x0, x0, #3
    ae44:	add	x0, x1, x0
    ae48:	str	x0, [sp, #40]
    ae4c:	ldr	x0, [sp, #40]
    ae50:	bl	9184 <plugin_init@@Base+0x4238>
    ae54:	and	w0, w0, #0xff
    ae58:	cmp	w0, #0x0
    ae5c:	b.eq	ae00 <plugin_init@@Base+0x5eb4>  // b.none
    ae60:	ldr	x0, [sp, #40]
    ae64:	ldp	x29, x30, [sp], #64
    ae68:	ret
    ae6c:	sub	sp, sp, #0x10
    ae70:	str	x0, [sp, #8]
    ae74:	nop
    ae78:	add	sp, sp, #0x10
    ae7c:	ret
    ae80:	sub	sp, sp, #0x10
    ae84:	str	x0, [sp, #8]
    ae88:	mov	w0, #0x240                 	// #576
    ae8c:	add	sp, sp, #0x10
    ae90:	ret
    ae94:	sub	sp, sp, #0x10
    ae98:	str	x0, [sp, #8]
    ae9c:	ldr	x0, [sp, #8]
    aea0:	ldr	x0, [x0]
    aea4:	add	x0, x0, #0x10
    aea8:	add	sp, sp, #0x10
    aeac:	ret
    aeb0:	sub	sp, sp, #0x10
    aeb4:	str	x0, [sp, #8]
    aeb8:	ldr	x0, [sp, #8]
    aebc:	ldr	x0, [x0]
    aec0:	ldrb	w0, [x0, #5]
    aec4:	add	sp, sp, #0x10
    aec8:	ret
    aecc:	stp	x29, x30, [sp, #-32]!
    aed0:	mov	x29, sp
    aed4:	str	x0, [sp, #24]
    aed8:	adrp	x0, 21000 <xexit@@Base+0x13570>
    aedc:	add	x1, x0, #0xce8
    aee0:	ldr	x0, [sp, #24]
    aee4:	str	x1, [x0]
    aee8:	ldr	x0, [sp, #24]
    aeec:	add	x0, x0, #0x78
    aef0:	bl	6214 <plugin_init@@Base+0x12c8>
    aef4:	ldr	x0, [sp, #24]
    aef8:	add	x0, x0, #0x48
    aefc:	bl	6060 <plugin_init@@Base+0x1114>
    af00:	ldr	x0, [sp, #24]
    af04:	add	x0, x0, #0x18
    af08:	bl	5ea8 <plugin_init@@Base+0xf5c>
    af0c:	ldr	x0, [sp, #24]
    af10:	bl	b0f4 <plugin_init@@Base+0x61a8>
    af14:	nop
    af18:	ldp	x29, x30, [sp], #32
    af1c:	ret
    af20:	stp	x29, x30, [sp, #-32]!
    af24:	mov	x29, sp
    af28:	str	x0, [sp, #24]
    af2c:	ldr	x0, [sp, #24]
    af30:	bl	aecc <plugin_init@@Base+0x5f80>
    af34:	mov	x1, #0xa8                  	// #168
    af38:	ldr	x0, [sp, #24]
    af3c:	bl	2e80 <_ZdlPvm@plt>
    af40:	ldp	x29, x30, [sp], #32
    af44:	ret
    af48:	stp	x29, x30, [sp, #-48]!
    af4c:	mov	x29, sp
    af50:	str	x0, [sp, #24]
    af54:	ldr	x0, [sp, #24]
    af58:	str	x0, [sp, #40]
    af5c:	ldr	x0, [sp, #40]
    af60:	ldr	x0, [x0]
    af64:	bl	2e60 <htab_hash_string@plt>
    af68:	ldp	x29, x30, [sp], #48
    af6c:	ret
    af70:	stp	x29, x30, [sp, #-48]!
    af74:	mov	x29, sp
    af78:	str	x0, [sp, #24]
    af7c:	str	x1, [sp, #16]
    af80:	ldr	x0, [sp, #24]
    af84:	str	x0, [sp, #40]
    af88:	ldr	x0, [sp, #16]
    af8c:	str	x0, [sp, #32]
    af90:	ldr	x0, [sp, #40]
    af94:	ldr	x2, [x0]
    af98:	ldr	x0, [sp, #32]
    af9c:	ldr	x0, [x0]
    afa0:	mov	x1, x0
    afa4:	mov	x0, x2
    afa8:	bl	2ff0 <strcmp@plt>
    afac:	cmp	w0, #0x0
    afb0:	cset	w0, eq  // eq = none
    afb4:	and	w0, w0, #0xff
    afb8:	ldp	x29, x30, [sp], #48
    afbc:	ret
    afc0:	stp	x29, x30, [sp, #-32]!
    afc4:	mov	x29, sp
    afc8:	str	x0, [sp, #24]
    afcc:	adrp	x0, 21000 <xexit@@Base+0x13570>
    afd0:	ldr	x5, [x0, #3944]
    afd4:	adrp	x0, 21000 <xexit@@Base+0x13570>
    afd8:	ldr	x4, [x0, #4008]
    afdc:	adrp	x0, 21000 <xexit@@Base+0x13570>
    afe0:	ldr	x3, [x0, #3944]
    afe4:	adrp	x0, a000 <plugin_init@@Base+0x50b4>
    afe8:	add	x2, x0, #0xf70
    afec:	adrp	x0, a000 <plugin_init@@Base+0x50b4>
    aff0:	add	x1, x0, #0xf48
    aff4:	mov	x0, #0xa                   	// #10
    aff8:	bl	2cc0 <htab_create_alloc@plt>
    affc:	mov	x1, x0
    b000:	ldr	x0, [sp, #24]
    b004:	str	x1, [x0]
    b008:	nop
    b00c:	ldp	x29, x30, [sp], #32
    b010:	ret
    b014:	stp	x29, x30, [sp, #-32]!
    b018:	mov	x29, sp
    b01c:	str	x0, [sp, #24]
    b020:	ldr	x0, [sp, #24]
    b024:	ldr	x0, [x0]
    b028:	bl	30e0 <htab_delete@plt>
    b02c:	nop
    b030:	ldp	x29, x30, [sp], #32
    b034:	ret
    b038:	stp	x29, x30, [sp, #-80]!
    b03c:	mov	x29, sp
    b040:	str	x0, [sp, #40]
    b044:	str	x1, [sp, #32]
    b048:	str	x2, [sp, #24]
    b04c:	ldr	x0, [sp, #32]
    b050:	str	x0, [sp, #56]
    b054:	ldr	x0, [sp, #24]
    b058:	str	x0, [sp, #64]
    b05c:	ldr	x0, [sp, #40]
    b060:	ldr	x0, [x0]
    b064:	add	x1, sp, #0x38
    b068:	mov	w2, #0x1                   	// #1
    b06c:	bl	2ef0 <htab_find_slot@plt>
    b070:	str	x0, [sp, #72]
    b074:	mov	x0, #0x10                  	// #16
    b078:	bl	2f90 <xmalloc@plt>
    b07c:	mov	x1, x0
    b080:	ldr	x0, [sp, #72]
    b084:	str	x1, [x0]
    b088:	ldr	x0, [sp, #72]
    b08c:	ldr	x2, [x0]
    b090:	ldp	x0, x1, [sp, #56]
    b094:	stp	x0, x1, [x2]
    b098:	nop
    b09c:	ldp	x29, x30, [sp], #80
    b0a0:	ret
    b0a4:	stp	x29, x30, [sp, #-64]!
    b0a8:	mov	x29, sp
    b0ac:	str	x0, [sp, #24]
    b0b0:	str	x1, [sp, #16]
    b0b4:	ldr	x0, [sp, #16]
    b0b8:	str	x0, [sp, #40]
    b0bc:	ldr	x0, [sp, #24]
    b0c0:	ldr	x0, [x0]
    b0c4:	add	x1, sp, #0x28
    b0c8:	bl	2df0 <htab_find@plt>
    b0cc:	str	x0, [sp, #56]
    b0d0:	ldr	x0, [sp, #56]
    b0d4:	cmp	x0, #0x0
    b0d8:	b.ne	b0e4 <plugin_init@@Base+0x6198>  // b.any
    b0dc:	mov	x0, #0x0                   	// #0
    b0e0:	b	b0ec <plugin_init@@Base+0x61a0>
    b0e4:	ldr	x0, [sp, #56]
    b0e8:	ldr	x0, [x0, #8]
    b0ec:	ldp	x29, x30, [sp], #64
    b0f0:	ret
    b0f4:	stp	x29, x30, [sp, #-32]!
    b0f8:	mov	x29, sp
    b0fc:	str	x0, [sp, #24]
    b100:	adrp	x0, 21000 <xexit@@Base+0x13570>
    b104:	add	x1, x0, #0xcc0
    b108:	ldr	x0, [sp, #24]
    b10c:	str	x1, [x0]
    b110:	ldr	x0, [sp, #24]
    b114:	add	x0, x0, #0x10
    b118:	bl	b014 <plugin_init@@Base+0x60c8>
    b11c:	nop
    b120:	ldp	x29, x30, [sp], #32
    b124:	ret
    b128:	stp	x29, x30, [sp, #-32]!
    b12c:	mov	x29, sp
    b130:	str	x0, [sp, #24]
    b134:	ldr	x0, [sp, #24]
    b138:	bl	b0f4 <plugin_init@@Base+0x61a8>
    b13c:	mov	x1, #0x18                  	// #24
    b140:	ldr	x0, [sp, #24]
    b144:	bl	2e80 <_ZdlPvm@plt>
    b148:	ldp	x29, x30, [sp], #32
    b14c:	ret
    b150:	sub	sp, sp, #0x10
    b154:	str	x0, [sp, #8]
    b158:	str	x1, [sp]
    b15c:	nop
    b160:	add	sp, sp, #0x10
    b164:	ret
    b168:	stp	x29, x30, [sp, #-32]!
    b16c:	mov	x29, sp
    b170:	str	x0, [sp, #24]
    b174:	strb	w1, [sp, #23]
    b178:	ldr	x0, [sp, #24]
    b17c:	ldr	w0, [x0, #8]
    b180:	add	x1, sp, #0x17
    b184:	mov	x2, #0x1                   	// #1
    b188:	bl	3020 <write@plt>
    b18c:	cmp	x0, #0x1
    b190:	cset	w0, ne  // ne = any
    b194:	and	w0, w0, #0xff
    b198:	cmp	w0, #0x0
    b19c:	b.eq	b1a8 <plugin_init@@Base+0x625c>  // b.none
    b1a0:	mov	w0, #0x0                   	// #0
    b1a4:	b	b1ac <plugin_init@@Base+0x6260>
    b1a8:	mov	w0, #0x1                   	// #1
    b1ac:	ldp	x29, x30, [sp], #32
    b1b0:	ret
    b1b4:	stp	x29, x30, [sp, #-48]!
    b1b8:	mov	x29, sp
    b1bc:	str	x0, [sp, #40]
    b1c0:	str	x1, [sp, #32]
    b1c4:	str	w2, [sp, #28]
    b1c8:	ldr	x0, [sp, #40]
    b1cc:	ldr	w0, [x0, #8]
    b1d0:	ldrsw	x1, [sp, #28]
    b1d4:	mov	x2, x1
    b1d8:	ldr	x1, [sp, #32]
    b1dc:	bl	3020 <write@plt>
    b1e0:	mov	x1, x0
    b1e4:	ldrsw	x0, [sp, #28]
    b1e8:	cmp	x1, x0
    b1ec:	cset	w0, ne  // ne = any
    b1f0:	and	w0, w0, #0xff
    b1f4:	cmp	w0, #0x0
    b1f8:	b.eq	b204 <plugin_init@@Base+0x62b8>  // b.none
    b1fc:	mov	w0, #0x0                   	// #0
    b200:	b	b208 <plugin_init@@Base+0x62bc>
    b204:	mov	w0, #0x1                   	// #1
    b208:	ldp	x29, x30, [sp], #48
    b20c:	ret
    b210:	stp	x29, x30, [sp, #-48]!
    b214:	mov	x29, sp
    b218:	str	x0, [sp, #24]
    b21c:	strb	w1, [sp, #23]
    b220:	ldr	x0, [sp, #24]
    b224:	ldr	w0, [x0, #8]
    b228:	add	x1, sp, #0x2f
    b22c:	mov	x2, #0x1                   	// #1
    b230:	bl	2db0 <read@plt>
    b234:	cmp	x0, #0x1
    b238:	b.ne	b24c <plugin_init@@Base+0x6300>  // b.any
    b23c:	ldrb	w0, [sp, #47]
    b240:	ldrb	w1, [sp, #23]
    b244:	cmp	w1, w0
    b248:	b.eq	b254 <plugin_init@@Base+0x6308>  // b.none
    b24c:	mov	w0, #0x1                   	// #1
    b250:	b	b258 <plugin_init@@Base+0x630c>
    b254:	mov	w0, #0x0                   	// #0
    b258:	cmp	w0, #0x0
    b25c:	b.eq	b268 <plugin_init@@Base+0x631c>  // b.none
    b260:	mov	w0, #0x0                   	// #0
    b264:	b	b26c <plugin_init@@Base+0x6320>
    b268:	mov	w0, #0x1                   	// #1
    b26c:	ldp	x29, x30, [sp], #48
    b270:	ret
    b274:	stp	x29, x30, [sp, #-48]!
    b278:	mov	x29, sp
    b27c:	str	x0, [sp, #40]
    b280:	str	x1, [sp, #32]
    b284:	str	w2, [sp, #28]
    b288:	ldr	x0, [sp, #40]
    b28c:	ldr	w0, [x0, #8]
    b290:	ldrsw	x1, [sp, #28]
    b294:	mov	x2, x1
    b298:	ldr	x1, [sp, #32]
    b29c:	bl	2db0 <read@plt>
    b2a0:	mov	x1, x0
    b2a4:	ldrsw	x0, [sp, #28]
    b2a8:	cmp	x1, x0
    b2ac:	cset	w0, ne  // ne = any
    b2b0:	and	w0, w0, #0xff
    b2b4:	cmp	w0, #0x0
    b2b8:	b.eq	b2c4 <plugin_init@@Base+0x6378>  // b.none
    b2bc:	mov	w0, #0x0                   	// #0
    b2c0:	b	b2c8 <plugin_init@@Base+0x637c>
    b2c4:	mov	w0, #0x1                   	// #1
    b2c8:	ldp	x29, x30, [sp], #48
    b2cc:	ret
    b2d0:	sub	sp, sp, #0x4f0
    b2d4:	stp	x29, x30, [sp]
    b2d8:	mov	x29, sp
    b2dc:	stp	x19, x20, [sp, #16]
    b2e0:	str	x0, [sp, #40]
    b2e4:	strb	w1, [sp, #39]
    b2e8:	add	x0, sp, #0x38
    b2ec:	str	x0, [sp, #1248]
    b2f0:	str	wzr, [sp, #1260]
    b2f4:	ldr	w0, [sp, #1260]
    b2f8:	cmp	w0, #0xf
    b2fc:	b.hi	b31c <plugin_init@@Base+0x63d0>  // b.pmore
    b300:	ldr	x0, [sp, #1248]
    b304:	ldr	w1, [sp, #1260]
    b308:	str	xzr, [x0, x1, lsl #3]
    b30c:	ldr	w0, [sp, #1260]
    b310:	add	w0, w0, #0x1
    b314:	str	w0, [sp, #1260]
    b318:	b	b2f4 <plugin_init@@Base+0x63a8>
    b31c:	ldr	x0, [sp, #40]
    b320:	ldr	w0, [x0, #8]
    b324:	add	w1, w0, #0x3f
    b328:	cmp	w0, #0x0
    b32c:	csel	w0, w1, w0, lt  // lt = tstop
    b330:	asr	w0, w0, #6
    b334:	mov	w3, w0
    b338:	sxtw	x0, w3
    b33c:	lsl	x0, x0, #3
    b340:	add	x1, sp, #0x38
    b344:	ldr	x1, [x1, x0]
    b348:	ldr	x0, [sp, #40]
    b34c:	ldr	w0, [x0, #8]
    b350:	negs	w2, w0
    b354:	and	w0, w0, #0x3f
    b358:	and	w2, w2, #0x3f
    b35c:	csneg	w0, w0, w2, mi  // mi = first
    b360:	mov	x2, #0x1                   	// #1
    b364:	lsl	x0, x2, x0
    b368:	orr	x2, x1, x0
    b36c:	sxtw	x0, w3
    b370:	lsl	x0, x0, #3
    b374:	add	x1, sp, #0x38
    b378:	str	x2, [x1, x0]
    b37c:	ldr	x0, [sp, #40]
    b380:	ldr	w0, [x0, #12]
    b384:	cmn	w0, #0x1
    b388:	b.eq	b3ec <plugin_init@@Base+0x64a0>  // b.none
    b38c:	ldr	x0, [sp, #40]
    b390:	ldr	w0, [x0, #12]
    b394:	add	w1, w0, #0x3f
    b398:	cmp	w0, #0x0
    b39c:	csel	w0, w1, w0, lt  // lt = tstop
    b3a0:	asr	w0, w0, #6
    b3a4:	mov	w3, w0
    b3a8:	sxtw	x0, w3
    b3ac:	lsl	x0, x0, #3
    b3b0:	add	x1, sp, #0x38
    b3b4:	ldr	x1, [x1, x0]
    b3b8:	ldr	x0, [sp, #40]
    b3bc:	ldr	w0, [x0, #12]
    b3c0:	negs	w2, w0
    b3c4:	and	w0, w0, #0x3f
    b3c8:	and	w2, w2, #0x3f
    b3cc:	csneg	w0, w0, w2, mi  // mi = first
    b3d0:	mov	x2, #0x1                   	// #1
    b3d4:	lsl	x0, x2, x0
    b3d8:	orr	x2, x1, x0
    b3dc:	sxtw	x0, w3
    b3e0:	lsl	x0, x0, #3
    b3e4:	add	x1, sp, #0x38
    b3e8:	str	x2, [x1, x0]
    b3ec:	add	x0, sp, #0x38
    b3f0:	mov	x4, #0x0                   	// #0
    b3f4:	mov	x3, #0x0                   	// #0
    b3f8:	mov	x2, #0x0                   	// #0
    b3fc:	mov	x1, x0
    b400:	mov	w0, #0x400                 	// #1024
    b404:	bl	2c20 <select@plt>
    b408:	str	w0, [sp, #1244]
    b40c:	ldr	w0, [sp, #1244]
    b410:	cmn	w0, #0x1
    b414:	b.ne	b430 <plugin_init@@Base+0x64e4>  // b.any
    b418:	bl	2f30 <__errno_location@plt>
    b41c:	ldr	w0, [x0]
    b420:	cmp	w0, #0x4
    b424:	b.eq	b684 <plugin_init@@Base+0x6738>  // b.none
    b428:	mov	w19, #0x0                   	// #0
    b42c:	b	b68c <plugin_init@@Base+0x6740>
    b430:	ldr	x0, [sp, #40]
    b434:	ldr	w0, [x0, #12]
    b438:	cmn	w0, #0x1
    b43c:	b.eq	b4f8 <plugin_init@@Base+0x65ac>  // b.none
    b440:	ldr	x0, [sp, #40]
    b444:	ldr	w0, [x0, #12]
    b448:	add	w1, w0, #0x3f
    b44c:	cmp	w0, #0x0
    b450:	csel	w0, w1, w0, lt  // lt = tstop
    b454:	asr	w0, w0, #6
    b458:	sxtw	x0, w0
    b45c:	lsl	x0, x0, #3
    b460:	add	x1, sp, #0x38
    b464:	ldr	x1, [x1, x0]
    b468:	ldr	x0, [sp, #40]
    b46c:	ldr	w0, [x0, #12]
    b470:	negs	w2, w0
    b474:	and	w0, w0, #0x3f
    b478:	and	w2, w2, #0x3f
    b47c:	csneg	w0, w0, w2, mi  // mi = first
    b480:	mov	x2, #0x1                   	// #1
    b484:	lsl	x0, x2, x0
    b488:	and	x0, x1, x0
    b48c:	cmp	x0, #0x0
    b490:	b.eq	b4f8 <plugin_init@@Base+0x65ac>  // b.none
    b494:	ldr	x0, [sp, #40]
    b498:	ldr	w0, [x0, #12]
    b49c:	add	x1, sp, #0xb8
    b4a0:	mov	x2, #0x3ff                 	// #1023
    b4a4:	bl	2db0 <read@plt>
    b4a8:	str	w0, [sp, #1240]
    b4ac:	ldr	w0, [sp, #1240]
    b4b0:	cmp	w0, #0x0
    b4b4:	b.ge	b4c0 <plugin_init@@Base+0x6574>  // b.tcont
    b4b8:	mov	w19, #0x0                   	// #0
    b4bc:	b	b68c <plugin_init@@Base+0x6740>
    b4c0:	ldr	w0, [sp, #1240]
    b4c4:	cmp	w0, #0x0
    b4c8:	b.le	b4f8 <plugin_init@@Base+0x65ac>
    b4cc:	ldrsw	x0, [sp, #1240]
    b4d0:	add	x1, sp, #0xb8
    b4d4:	strb	wzr, [x1, x0]
    b4d8:	ldr	x0, [sp, #40]
    b4dc:	ldr	x0, [x0]
    b4e0:	add	x0, x0, #0x10
    b4e4:	ldr	x2, [x0]
    b4e8:	add	x0, sp, #0xb8
    b4ec:	mov	x1, x0
    b4f0:	ldr	x0, [sp, #40]
    b4f4:	blr	x2
    b4f8:	ldr	x0, [sp, #40]
    b4fc:	ldr	w0, [x0, #8]
    b500:	add	w1, w0, #0x3f
    b504:	cmp	w0, #0x0
    b508:	csel	w0, w1, w0, lt  // lt = tstop
    b50c:	asr	w0, w0, #6
    b510:	sxtw	x0, w0
    b514:	lsl	x0, x0, #3
    b518:	add	x1, sp, #0x38
    b51c:	ldr	x1, [x1, x0]
    b520:	ldr	x0, [sp, #40]
    b524:	ldr	w0, [x0, #8]
    b528:	negs	w2, w0
    b52c:	and	w0, w0, #0x3f
    b530:	and	w2, w2, #0x3f
    b534:	csneg	w0, w0, w2, mi  // mi = first
    b538:	mov	x2, #0x1                   	// #1
    b53c:	lsl	x0, x2, x0
    b540:	and	x0, x1, x0
    b544:	cmp	x0, #0x0
    b548:	b.eq	b2e8 <plugin_init@@Base+0x639c>  // b.none
    b54c:	ldr	x0, [sp, #40]
    b550:	ldr	w0, [x0, #8]
    b554:	add	x1, sp, #0x4c7
    b558:	mov	x2, #0x1                   	// #1
    b55c:	bl	2db0 <read@plt>
    b560:	str	w0, [sp, #1236]
    b564:	ldr	w0, [sp, #1236]
    b568:	cmp	w0, #0x0
    b56c:	b.ne	b58c <plugin_init@@Base+0x6640>  // b.any
    b570:	ldrb	w0, [sp, #39]
    b574:	cmp	w0, #0x0
    b578:	b.eq	b584 <plugin_init@@Base+0x6638>  // b.none
    b57c:	mov	w19, #0x0                   	// #0
    b580:	b	b690 <plugin_init@@Base+0x6744>
    b584:	mov	w19, #0x1                   	// #1
    b588:	b	b690 <plugin_init@@Base+0x6744>
    b58c:	ldr	w0, [sp, #1236]
    b590:	cmp	w0, #0x1
    b594:	b.eq	b5a0 <plugin_init@@Base+0x6654>  // b.none
    b598:	mov	w19, #0x0                   	// #0
    b59c:	b	b690 <plugin_init@@Base+0x6744>
    b5a0:	ldrb	w0, [sp, #1223]
    b5a4:	cmp	w0, #0x51
    b5a8:	b.eq	b5d0 <plugin_init@@Base+0x6684>  // b.none
    b5ac:	cmp	w0, #0x52
    b5b0:	b.ne	b67c <plugin_init@@Base+0x6730>  // b.any
    b5b4:	ldrb	w0, [sp, #39]
    b5b8:	cmp	w0, #0x0
    b5bc:	b.eq	b5c8 <plugin_init@@Base+0x667c>  // b.none
    b5c0:	mov	w19, #0x1                   	// #1
    b5c4:	b	b690 <plugin_init@@Base+0x6744>
    b5c8:	mov	w19, #0x0                   	// #0
    b5cc:	b	b690 <plugin_init@@Base+0x6744>
    b5d0:	add	x0, sp, #0x4b8
    b5d4:	bl	b6bc <plugin_init@@Base+0x6770>
    b5d8:	add	x0, sp, #0x4b8
    b5dc:	ldr	x1, [sp, #40]
    b5e0:	bl	b6e4 <plugin_init@@Base+0x6798>
    b5e4:	cmp	w0, #0x0
    b5e8:	cset	w0, eq  // eq = none
    b5ec:	and	w0, w0, #0xff
    b5f0:	cmp	w0, #0x0
    b5f4:	b.eq	b604 <plugin_init@@Base+0x66b8>  // b.none
    b5f8:	mov	w19, #0x0                   	// #0
    b5fc:	mov	w20, #0x0                   	// #0
    b600:	b	b668 <plugin_init@@Base+0x671c>
    b604:	ldr	x0, [sp, #40]
    b608:	add	x20, x0, #0x10
    b60c:	add	x0, sp, #0x4b8
    b610:	bl	b70c <plugin_init@@Base+0x67c0>
    b614:	mov	x1, x0
    b618:	mov	x0, x20
    b61c:	bl	b0a4 <plugin_init@@Base+0x6158>
    b620:	str	x0, [sp, #1224]
    b624:	ldr	x0, [sp, #1224]
    b628:	cmp	x0, #0x0
    b62c:	b.eq	b644 <plugin_init@@Base+0x66f8>  // b.none
    b630:	ldr	x1, [sp, #1224]
    b634:	ldr	x0, [sp, #40]
    b638:	blr	x1
    b63c:	cmp	w0, #0x0
    b640:	b.ne	b64c <plugin_init@@Base+0x6700>  // b.any
    b644:	mov	w0, #0x1                   	// #1
    b648:	b	b650 <plugin_init@@Base+0x6704>
    b64c:	mov	w0, #0x0                   	// #0
    b650:	cmp	w0, #0x0
    b654:	b.eq	b664 <plugin_init@@Base+0x6718>  // b.none
    b658:	mov	w19, #0x0                   	// #0
    b65c:	mov	w20, #0x0                   	// #0
    b660:	b	b668 <plugin_init@@Base+0x671c>
    b664:	mov	w20, #0x1                   	// #1
    b668:	add	x0, sp, #0x4b8
    b66c:	bl	b6d0 <plugin_init@@Base+0x6784>
    b670:	cmp	w20, #0x1
    b674:	b.ne	b68c <plugin_init@@Base+0x6740>  // b.any
    b678:	b	b688 <plugin_init@@Base+0x673c>
    b67c:	mov	w19, #0x0                   	// #0
    b680:	b	b690 <plugin_init@@Base+0x6744>
    b684:	nop
    b688:	b	b2e8 <plugin_init@@Base+0x639c>
    b68c:	nop
    b690:	mov	w0, w19
    b694:	b	b6ac <plugin_init@@Base+0x6760>
    b698:	mov	x19, x0
    b69c:	add	x0, sp, #0x4b8
    b6a0:	bl	b6d0 <plugin_init@@Base+0x6784>
    b6a4:	mov	x0, x19
    b6a8:	bl	3100 <_Unwind_Resume@plt>
    b6ac:	ldp	x19, x20, [sp, #16]
    b6b0:	ldp	x29, x30, [sp]
    b6b4:	add	sp, sp, #0x4f0
    b6b8:	ret
    b6bc:	sub	sp, sp, #0x10
    b6c0:	str	x0, [sp, #8]
    b6c4:	nop
    b6c8:	add	sp, sp, #0x10
    b6cc:	ret
    b6d0:	sub	sp, sp, #0x10
    b6d4:	str	x0, [sp, #8]
    b6d8:	nop
    b6dc:	add	sp, sp, #0x10
    b6e0:	ret
    b6e4:	stp	x29, x30, [sp, #-32]!
    b6e8:	mov	x29, sp
    b6ec:	str	x0, [sp, #24]
    b6f0:	str	x1, [sp, #16]
    b6f4:	ldr	x0, [sp, #24]
    b6f8:	mov	x1, x0
    b6fc:	ldr	x0, [sp, #16]
    b700:	bl	b8f0 <plugin_init@@Base+0x69a4>
    b704:	ldp	x29, x30, [sp], #32
    b708:	ret
    b70c:	sub	sp, sp, #0x10
    b710:	str	x0, [sp, #8]
    b714:	ldr	x0, [sp, #8]
    b718:	ldr	x0, [x0]
    b71c:	add	sp, sp, #0x10
    b720:	ret
    b724:	stp	x29, x30, [sp, #-48]!
    b728:	mov	x29, sp
    b72c:	str	x0, [sp, #24]
    b730:	str	x1, [sp, #16]
    b734:	add	x0, sp, #0x28
    b738:	mov	x1, x0
    b73c:	ldr	x0, [sp, #24]
    b740:	bl	6930 <plugin_init@@Base+0x19e4>
    b744:	cmp	w0, #0x0
    b748:	cset	w0, eq  // eq = none
    b74c:	and	w0, w0, #0xff
    b750:	cmp	w0, #0x0
    b754:	b.eq	b760 <plugin_init@@Base+0x6814>  // b.none
    b758:	mov	w0, #0x0                   	// #0
    b75c:	b	b780 <plugin_init@@Base+0x6834>
    b760:	ldr	x0, [sp, #40]
    b764:	ldr	x1, [sp, #16]
    b768:	cmp	x1, x0
    b76c:	b.ne	b778 <plugin_init@@Base+0x682c>  // b.any
    b770:	mov	w0, #0x1                   	// #1
    b774:	b	b77c <plugin_init@@Base+0x6830>
    b778:	mov	w0, #0x0                   	// #0
    b77c:	nop
    b780:	ldp	x29, x30, [sp], #48
    b784:	ret
    b788:	stp	x29, x30, [sp, #-32]!
    b78c:	mov	x29, sp
    b790:	str	x0, [sp, #24]
    b794:	str	x1, [sp, #16]
    b798:	mov	w1, #0x69                  	// #105
    b79c:	ldr	x0, [sp, #24]
    b7a0:	bl	b168 <plugin_init@@Base+0x621c>
    b7a4:	cmp	w0, #0x0
    b7a8:	cset	w0, eq  // eq = none
    b7ac:	and	w0, w0, #0xff
    b7b0:	cmp	w0, #0x0
    b7b4:	b.eq	b7c0 <plugin_init@@Base+0x6874>  // b.none
    b7b8:	mov	w0, #0x0                   	// #0
    b7bc:	b	b7d8 <plugin_init@@Base+0x688c>
    b7c0:	add	x0, sp, #0x10
    b7c4:	mov	w2, #0x8                   	// #8
    b7c8:	mov	x1, x0
    b7cc:	ldr	x0, [sp, #24]
    b7d0:	bl	b1b4 <plugin_init@@Base+0x6268>
    b7d4:	nop
    b7d8:	ldp	x29, x30, [sp], #32
    b7dc:	ret
    b7e0:	stp	x29, x30, [sp, #-32]!
    b7e4:	mov	x29, sp
    b7e8:	str	x0, [sp, #24]
    b7ec:	str	x1, [sp, #16]
    b7f0:	mov	w1, #0x69                  	// #105
    b7f4:	ldr	x0, [sp, #24]
    b7f8:	bl	b210 <plugin_init@@Base+0x62c4>
    b7fc:	cmp	w0, #0x0
    b800:	cset	w0, eq  // eq = none
    b804:	and	w0, w0, #0xff
    b808:	cmp	w0, #0x0
    b80c:	b.eq	b818 <plugin_init@@Base+0x68cc>  // b.none
    b810:	mov	w0, #0x0                   	// #0
    b814:	b	b82c <plugin_init@@Base+0x68e0>
    b818:	mov	w2, #0x8                   	// #8
    b81c:	ldr	x1, [sp, #16]
    b820:	ldr	x0, [sp, #24]
    b824:	bl	b274 <plugin_init@@Base+0x6328>
    b828:	nop
    b82c:	ldp	x29, x30, [sp], #32
    b830:	ret
    b834:	stp	x29, x30, [sp, #-48]!
    b838:	mov	x29, sp
    b83c:	str	x0, [sp, #24]
    b840:	str	x1, [sp, #16]
    b844:	mov	w1, #0x73                  	// #115
    b848:	ldr	x0, [sp, #24]
    b84c:	bl	b168 <plugin_init@@Base+0x621c>
    b850:	cmp	w0, #0x0
    b854:	cset	w0, eq  // eq = none
    b858:	and	w0, w0, #0xff
    b85c:	cmp	w0, #0x0
    b860:	b.eq	b86c <plugin_init@@Base+0x6920>  // b.none
    b864:	mov	w0, #0x0                   	// #0
    b868:	b	b8e8 <plugin_init@@Base+0x699c>
    b86c:	ldr	x0, [sp, #16]
    b870:	cmp	x0, #0x0
    b874:	b.eq	b884 <plugin_init@@Base+0x6938>  // b.none
    b878:	ldr	x0, [sp, #16]
    b87c:	bl	2c80 <strlen@plt>
    b880:	b	b888 <plugin_init@@Base+0x693c>
    b884:	mov	x0, #0xffffffffffffffff    	// #-1
    b888:	str	x0, [sp, #40]
    b88c:	add	x0, sp, #0x28
    b890:	mov	w2, #0x8                   	// #8
    b894:	mov	x1, x0
    b898:	ldr	x0, [sp, #24]
    b89c:	bl	b1b4 <plugin_init@@Base+0x6268>
    b8a0:	cmp	w0, #0x0
    b8a4:	cset	w0, eq  // eq = none
    b8a8:	and	w0, w0, #0xff
    b8ac:	cmp	w0, #0x0
    b8b0:	b.eq	b8bc <plugin_init@@Base+0x6970>  // b.none
    b8b4:	mov	w0, #0x0                   	// #0
    b8b8:	b	b8e8 <plugin_init@@Base+0x699c>
    b8bc:	ldr	x0, [sp, #16]
    b8c0:	cmp	x0, #0x0
    b8c4:	b.ne	b8d0 <plugin_init@@Base+0x6984>  // b.any
    b8c8:	mov	w0, #0x1                   	// #1
    b8cc:	b	b8e8 <plugin_init@@Base+0x699c>
    b8d0:	ldr	x0, [sp, #40]
    b8d4:	mov	w2, w0
    b8d8:	ldr	x1, [sp, #16]
    b8dc:	ldr	x0, [sp, #24]
    b8e0:	bl	b1b4 <plugin_init@@Base+0x6268>
    b8e4:	nop
    b8e8:	ldp	x29, x30, [sp], #48
    b8ec:	ret
    b8f0:	stp	x29, x30, [sp, #-48]!
    b8f4:	mov	x29, sp
    b8f8:	str	x0, [sp, #24]
    b8fc:	str	x1, [sp, #16]
    b900:	mov	w1, #0x73                  	// #115
    b904:	ldr	x0, [sp, #24]
    b908:	bl	b210 <plugin_init@@Base+0x62c4>
    b90c:	cmp	w0, #0x0
    b910:	cset	w0, eq  // eq = none
    b914:	and	w0, w0, #0xff
    b918:	cmp	w0, #0x0
    b91c:	b.eq	b928 <plugin_init@@Base+0x69dc>  // b.none
    b920:	mov	w0, #0x0                   	// #0
    b924:	b	ba08 <plugin_init@@Base+0x6abc>
    b928:	add	x0, sp, #0x20
    b92c:	mov	w2, #0x8                   	// #8
    b930:	mov	x1, x0
    b934:	ldr	x0, [sp, #24]
    b938:	bl	b274 <plugin_init@@Base+0x6328>
    b93c:	cmp	w0, #0x0
    b940:	cset	w0, eq  // eq = none
    b944:	and	w0, w0, #0xff
    b948:	cmp	w0, #0x0
    b94c:	b.eq	b958 <plugin_init@@Base+0x6a0c>  // b.none
    b950:	mov	w0, #0x0                   	// #0
    b954:	b	ba08 <plugin_init@@Base+0x6abc>
    b958:	ldr	x0, [sp, #32]
    b95c:	cmn	x0, #0x1
    b960:	b.ne	b974 <plugin_init@@Base+0x6a28>  // b.any
    b964:	ldr	x0, [sp, #16]
    b968:	str	xzr, [x0]
    b96c:	mov	w0, #0x1                   	// #1
    b970:	b	ba08 <plugin_init@@Base+0x6abc>
    b974:	ldr	x0, [sp, #32]
    b978:	add	x2, x0, #0x1
    b97c:	adrp	x0, 21000 <xexit@@Base+0x13570>
    b980:	ldr	x1, [x0, #3920]
    b984:	mov	x0, x2
    b988:	bl	3060 <_ZnamRKSt9nothrow_t@plt>
    b98c:	str	x0, [sp, #40]
    b990:	ldr	x0, [sp, #40]
    b994:	cmp	x0, #0x0
    b998:	b.ne	b9a4 <plugin_init@@Base+0x6a58>  // b.any
    b99c:	mov	w0, #0x0                   	// #0
    b9a0:	b	ba08 <plugin_init@@Base+0x6abc>
    b9a4:	ldr	x0, [sp, #32]
    b9a8:	mov	w2, w0
    b9ac:	ldr	x1, [sp, #40]
    b9b0:	ldr	x0, [sp, #24]
    b9b4:	bl	b274 <plugin_init@@Base+0x6328>
    b9b8:	cmp	w0, #0x0
    b9bc:	cset	w0, eq  // eq = none
    b9c0:	and	w0, w0, #0xff
    b9c4:	cmp	w0, #0x0
    b9c8:	b.eq	b9e8 <plugin_init@@Base+0x6a9c>  // b.none
    b9cc:	ldr	x0, [sp, #40]
    b9d0:	cmp	x0, #0x0
    b9d4:	b.eq	b9e0 <plugin_init@@Base+0x6a94>  // b.none
    b9d8:	ldr	x0, [sp, #40]
    b9dc:	bl	2f10 <_ZdaPv@plt>
    b9e0:	mov	w0, #0x0                   	// #0
    b9e4:	b	ba08 <plugin_init@@Base+0x6abc>
    b9e8:	ldr	x0, [sp, #32]
    b9ec:	ldr	x1, [sp, #40]
    b9f0:	add	x0, x1, x0
    b9f4:	strb	wzr, [x0]
    b9f8:	ldr	x0, [sp, #16]
    b9fc:	ldr	x1, [sp, #40]
    ba00:	str	x1, [x0]
    ba04:	mov	w0, #0x1                   	// #1
    ba08:	ldp	x29, x30, [sp], #48
    ba0c:	ret
    ba10:	stp	x29, x30, [sp, #-64]!
    ba14:	mov	x29, sp
    ba18:	str	x0, [sp, #40]
    ba1c:	strb	w1, [sp, #39]
    ba20:	str	x2, [sp, #24]
    ba24:	ldrb	w1, [sp, #39]
    ba28:	ldr	x0, [sp, #40]
    ba2c:	bl	b168 <plugin_init@@Base+0x621c>
    ba30:	cmp	w0, #0x0
    ba34:	cset	w0, eq  // eq = none
    ba38:	and	w0, w0, #0xff
    ba3c:	cmp	w0, #0x0
    ba40:	b.eq	ba4c <plugin_init@@Base+0x6b00>  // b.none
    ba44:	mov	w0, #0x0                   	// #0
    ba48:	b	ba88 <plugin_init@@Base+0x6b3c>
    ba4c:	ldr	x0, [sp, #24]
    ba50:	str	x0, [sp, #56]
    ba54:	add	x0, sp, #0x38
    ba58:	mov	w2, #0x8                   	// #8
    ba5c:	mov	x1, x0
    ba60:	ldr	x0, [sp, #40]
    ba64:	bl	b1b4 <plugin_init@@Base+0x6268>
    ba68:	cmp	w0, #0x0
    ba6c:	cset	w0, eq  // eq = none
    ba70:	and	w0, w0, #0xff
    ba74:	cmp	w0, #0x0
    ba78:	b.eq	ba84 <plugin_init@@Base+0x6b38>  // b.none
    ba7c:	mov	w0, #0x0                   	// #0
    ba80:	b	ba88 <plugin_init@@Base+0x6b3c>
    ba84:	mov	w0, #0x1                   	// #1
    ba88:	ldp	x29, x30, [sp], #64
    ba8c:	ret
    ba90:	stp	x29, x30, [sp, #-48]!
    ba94:	mov	x29, sp
    ba98:	str	x0, [sp, #40]
    ba9c:	str	x1, [sp, #32]
    baa0:	str	x2, [sp, #24]
    baa4:	ldr	x0, [sp, #32]
    baa8:	mov	w2, w0
    baac:	ldr	x1, [sp, #24]
    bab0:	ldr	x0, [sp, #40]
    bab4:	bl	b1b4 <plugin_init@@Base+0x6268>
    bab8:	ldp	x29, x30, [sp], #48
    babc:	ret
    bac0:	stp	x29, x30, [sp, #-64]!
    bac4:	mov	x29, sp
    bac8:	str	x0, [sp, #40]
    bacc:	strb	w1, [sp, #39]
    bad0:	str	x2, [sp, #24]
    bad4:	ldrb	w1, [sp, #39]
    bad8:	ldr	x0, [sp, #40]
    badc:	bl	b210 <plugin_init@@Base+0x62c4>
    bae0:	cmp	w0, #0x0
    bae4:	cset	w0, eq  // eq = none
    bae8:	and	w0, w0, #0xff
    baec:	cmp	w0, #0x0
    baf0:	b.eq	bafc <plugin_init@@Base+0x6bb0>  // b.none
    baf4:	mov	w0, #0x0                   	// #0
    baf8:	b	bb3c <plugin_init@@Base+0x6bf0>
    bafc:	add	x0, sp, #0x38
    bb00:	mov	w2, #0x8                   	// #8
    bb04:	mov	x1, x0
    bb08:	ldr	x0, [sp, #40]
    bb0c:	bl	b274 <plugin_init@@Base+0x6328>
    bb10:	cmp	w0, #0x0
    bb14:	cset	w0, eq  // eq = none
    bb18:	and	w0, w0, #0xff
    bb1c:	cmp	w0, #0x0
    bb20:	b.eq	bb2c <plugin_init@@Base+0x6be0>  // b.none
    bb24:	mov	w0, #0x0                   	// #0
    bb28:	b	bb3c <plugin_init@@Base+0x6bf0>
    bb2c:	ldr	x1, [sp, #56]
    bb30:	ldr	x0, [sp, #24]
    bb34:	str	x1, [x0]
    bb38:	mov	w0, #0x1                   	// #1
    bb3c:	ldp	x29, x30, [sp], #64
    bb40:	ret
    bb44:	stp	x29, x30, [sp, #-48]!
    bb48:	mov	x29, sp
    bb4c:	str	x0, [sp, #40]
    bb50:	str	x1, [sp, #32]
    bb54:	str	x2, [sp, #24]
    bb58:	ldr	x0, [sp, #32]
    bb5c:	mov	w2, w0
    bb60:	ldr	x1, [sp, #24]
    bb64:	ldr	x0, [sp, #40]
    bb68:	bl	b274 <plugin_init@@Base+0x6328>
    bb6c:	ldp	x29, x30, [sp], #48
    bb70:	ret
    bb74:	stp	x29, x30, [sp, #-48]!
    bb78:	mov	x29, sp
    bb7c:	str	x0, [sp, #24]
    bb80:	str	x1, [sp, #16]
    bb84:	ldr	x0, [sp, #16]
    bb88:	cmp	x0, #0x0
    bb8c:	b.eq	bba4 <plugin_init@@Base+0x6c58>  // b.none
    bb90:	ldr	x0, [sp, #16]
    bb94:	ldr	w0, [x0]
    bb98:	sxtw	x0, w0
    bb9c:	str	x0, [sp, #40]
    bba0:	b	bbac <plugin_init@@Base+0x6c60>
    bba4:	mov	x0, #0xffffffffffffffff    	// #-1
    bba8:	str	x0, [sp, #40]
    bbac:	ldr	x2, [sp, #40]
    bbb0:	mov	w1, #0x61                  	// #97
    bbb4:	ldr	x0, [sp, #24]
    bbb8:	bl	ba10 <plugin_init@@Base+0x6ac4>
    bbbc:	cmp	w0, #0x0
    bbc0:	cset	w0, eq  // eq = none
    bbc4:	and	w0, w0, #0xff
    bbc8:	cmp	w0, #0x0
    bbcc:	b.eq	bbd8 <plugin_init@@Base+0x6c8c>  // b.none
    bbd0:	mov	w0, #0x0                   	// #0
    bbd4:	b	bc0c <plugin_init@@Base+0x6cc0>
    bbd8:	ldr	x0, [sp, #16]
    bbdc:	cmp	x0, #0x0
    bbe0:	b.ne	bbec <plugin_init@@Base+0x6ca0>  // b.any
    bbe4:	mov	w0, #0x1                   	// #1
    bbe8:	b	bc0c <plugin_init@@Base+0x6cc0>
    bbec:	ldr	x0, [sp, #40]
    bbf0:	lsl	x1, x0, #3
    bbf4:	ldr	x0, [sp, #16]
    bbf8:	ldr	x0, [x0, #8]
    bbfc:	mov	x2, x0
    bc00:	ldr	x0, [sp, #24]
    bc04:	bl	ba90 <plugin_init@@Base+0x6b44>
    bc08:	nop
    bc0c:	ldp	x29, x30, [sp], #48
    bc10:	ret
    bc14:	stp	x29, x30, [sp, #-48]!
    bc18:	mov	x29, sp
    bc1c:	str	x0, [sp, #24]
    bc20:	str	x1, [sp, #16]
    bc24:	add	x0, sp, #0x20
    bc28:	mov	x2, x0
    bc2c:	mov	w1, #0x61                  	// #97
    bc30:	ldr	x0, [sp, #24]
    bc34:	bl	bac0 <plugin_init@@Base+0x6b74>
    bc38:	cmp	w0, #0x0
    bc3c:	cset	w0, eq  // eq = none
    bc40:	and	w0, w0, #0xff
    bc44:	cmp	w0, #0x0
    bc48:	b.eq	bc54 <plugin_init@@Base+0x6d08>  // b.none
    bc4c:	mov	w0, #0x0                   	// #0
    bc50:	b	bd34 <plugin_init@@Base+0x6de8>
    bc54:	ldr	x0, [sp, #32]
    bc58:	cmn	x0, #0x1
    bc5c:	b.ne	bc70 <plugin_init@@Base+0x6d24>  // b.any
    bc60:	ldr	x0, [sp, #16]
    bc64:	str	xzr, [x0]
    bc68:	mov	w0, #0x1                   	// #1
    bc6c:	b	bd34 <plugin_init@@Base+0x6de8>
    bc70:	mov	x0, #0x10                  	// #16
    bc74:	bl	2e70 <_Znwm@plt>
    bc78:	str	x0, [sp, #40]
    bc7c:	ldr	x0, [sp, #32]
    bc80:	mov	w1, w0
    bc84:	ldr	x0, [sp, #40]
    bc88:	str	w1, [x0]
    bc8c:	ldr	x0, [sp, #32]
    bc90:	mov	x1, #0xfffffffffffffff     	// #1152921504606846975
    bc94:	cmp	x0, x1
    bc98:	b.hi	bce4 <plugin_init@@Base+0x6d98>  // b.pmore
    bc9c:	lsl	x0, x0, #3
    bca0:	bl	2bd0 <_Znam@plt>
    bca4:	mov	x1, x0
    bca8:	ldr	x0, [sp, #40]
    bcac:	str	x1, [x0, #8]
    bcb0:	ldr	x0, [sp, #32]
    bcb4:	lsl	x1, x0, #3
    bcb8:	ldr	x0, [sp, #40]
    bcbc:	ldr	x0, [x0, #8]
    bcc0:	mov	x2, x0
    bcc4:	ldr	x0, [sp, #24]
    bcc8:	bl	bb44 <plugin_init@@Base+0x6bf8>
    bccc:	cmp	w0, #0x0
    bcd0:	cset	w0, eq  // eq = none
    bcd4:	and	w0, w0, #0xff
    bcd8:	cmp	w0, #0x0
    bcdc:	b.eq	bd24 <plugin_init@@Base+0x6dd8>  // b.none
    bce0:	b	bce8 <plugin_init@@Base+0x6d9c>
    bce4:	bl	2fc0 <__cxa_throw_bad_array_new_length@plt>
    bce8:	ldr	x0, [sp, #40]
    bcec:	ldr	x0, [x0, #8]
    bcf0:	cmp	x0, #0x0
    bcf4:	b.eq	bd04 <plugin_init@@Base+0x6db8>  // b.none
    bcf8:	ldr	x0, [sp, #40]
    bcfc:	ldr	x0, [x0, #8]
    bd00:	bl	2f10 <_ZdaPv@plt>
    bd04:	ldr	x0, [sp, #16]
    bd08:	ldr	x0, [x0]
    bd0c:	cmp	x0, #0x0
    bd10:	b.eq	bd1c <plugin_init@@Base+0x6dd0>  // b.none
    bd14:	mov	x1, #0x10                  	// #16
    bd18:	bl	2e80 <_ZdlPvm@plt>
    bd1c:	mov	w0, #0x0                   	// #0
    bd20:	b	bd34 <plugin_init@@Base+0x6de8>
    bd24:	ldr	x0, [sp, #16]
    bd28:	ldr	x1, [sp, #40]
    bd2c:	str	x1, [x0]
    bd30:	mov	w0, #0x1                   	// #1
    bd34:	ldp	x29, x30, [sp], #48
    bd38:	ret
    bd3c:	stp	x29, x30, [sp, #-48]!
    bd40:	mov	x29, sp
    bd44:	str	x0, [sp, #24]
    bd48:	str	wzr, [sp, #44]
    bd4c:	mov	w0, #0x1e                  	// #30
    bd50:	str	w0, [sp, #40]
    bd54:	b	bdb4 <plugin_init@@Base+0x6e68>
    bd58:	ldr	w1, [sp, #40]
    bd5c:	ldr	w0, [sp, #44]
    bd60:	sub	w0, w1, w0
    bd64:	lsr	w0, w0, #1
    bd68:	ldr	w1, [sp, #44]
    bd6c:	add	w0, w1, w0
    bd70:	str	w0, [sp, #36]
    bd74:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    bd78:	add	x1, x0, #0xfe0
    bd7c:	ldr	w0, [sp, #36]
    bd80:	lsl	x0, x0, #4
    bd84:	add	x0, x1, x0
    bd88:	ldr	w0, [x0]
    bd8c:	mov	w0, w0
    bd90:	ldr	x1, [sp, #24]
    bd94:	cmp	x1, x0
    bd98:	b.ls	bdac <plugin_init@@Base+0x6e60>  // b.plast
    bd9c:	ldr	w0, [sp, #36]
    bda0:	add	w0, w0, #0x1
    bda4:	str	w0, [sp, #44]
    bda8:	b	bdb4 <plugin_init@@Base+0x6e68>
    bdac:	ldr	w0, [sp, #36]
    bdb0:	str	w0, [sp, #40]
    bdb4:	ldr	w1, [sp, #44]
    bdb8:	ldr	w0, [sp, #40]
    bdbc:	cmp	w1, w0
    bdc0:	b.ne	bd58 <plugin_init@@Base+0x6e0c>  // b.any
    bdc4:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    bdc8:	add	x1, x0, #0xfe0
    bdcc:	ldr	w0, [sp, #44]
    bdd0:	lsl	x0, x0, #4
    bdd4:	add	x0, x1, x0
    bdd8:	ldr	w0, [x0]
    bddc:	mov	w0, w0
    bde0:	ldr	x1, [sp, #24]
    bde4:	cmp	x1, x0
    bde8:	b.ls	be10 <plugin_init@@Base+0x6ec4>  // b.plast
    bdec:	adrp	x0, 21000 <xexit@@Base+0x13570>
    bdf0:	ldr	x0, [x0, #4040]
    bdf4:	ldr	x3, [x0]
    bdf8:	ldr	x2, [sp, #24]
    bdfc:	adrp	x0, e000 <xexit@@Base+0x570>
    be00:	add	x1, x0, #0x1c0
    be04:	mov	x0, x3
    be08:	bl	2c90 <fprintf@plt>
    be0c:	bl	3050 <abort@plt>
    be10:	ldr	w0, [sp, #44]
    be14:	ldp	x29, x30, [sp], #48
    be18:	ret
    be1c:	sub	sp, sp, #0x10
    be20:	str	x0, [sp, #8]
    be24:	str	x1, [sp]
    be28:	ldr	x1, [sp, #8]
    be2c:	ldr	x0, [sp]
    be30:	cmp	x1, x0
    be34:	cset	w0, eq  // eq = none
    be38:	and	w0, w0, #0xff
    be3c:	add	sp, sp, #0x10
    be40:	ret

000000000000be44 <htab_size@@Base>:
    be44:	sub	sp, sp, #0x10
    be48:	str	x0, [sp, #8]
    be4c:	ldr	x0, [sp, #8]
    be50:	ldr	x0, [x0, #32]
    be54:	add	sp, sp, #0x10
    be58:	ret

000000000000be5c <htab_elements@@Base>:
    be5c:	sub	sp, sp, #0x10
    be60:	str	x0, [sp, #8]
    be64:	ldr	x0, [sp, #8]
    be68:	ldr	x1, [x0, #40]
    be6c:	ldr	x0, [sp, #8]
    be70:	ldr	x0, [x0, #48]
    be74:	sub	x0, x1, x0
    be78:	add	sp, sp, #0x10
    be7c:	ret
    be80:	sub	sp, sp, #0x30
    be84:	str	w0, [sp, #12]
    be88:	str	w1, [sp, #8]
    be8c:	str	w2, [sp, #4]
    be90:	str	w3, [sp]
    be94:	ldr	w1, [sp, #12]
    be98:	ldr	w0, [sp, #4]
    be9c:	mul	x0, x1, x0
    bea0:	lsr	x0, x0, #32
    bea4:	str	w0, [sp, #44]
    bea8:	ldr	w1, [sp, #12]
    beac:	ldr	w0, [sp, #44]
    beb0:	sub	w0, w1, w0
    beb4:	str	w0, [sp, #40]
    beb8:	ldr	w0, [sp, #40]
    bebc:	lsr	w0, w0, #1
    bec0:	str	w0, [sp, #36]
    bec4:	ldr	w1, [sp, #44]
    bec8:	ldr	w0, [sp, #36]
    becc:	add	w0, w1, w0
    bed0:	str	w0, [sp, #32]
    bed4:	ldr	w0, [sp]
    bed8:	ldr	w1, [sp, #32]
    bedc:	lsr	w0, w1, w0
    bee0:	str	w0, [sp, #28]
    bee4:	ldr	w1, [sp, #28]
    bee8:	ldr	w0, [sp, #8]
    beec:	mul	w0, w1, w0
    bef0:	ldr	w1, [sp, #12]
    bef4:	sub	w0, w1, w0
    bef8:	str	w0, [sp, #24]
    befc:	ldr	w0, [sp, #24]
    bf00:	add	sp, sp, #0x30
    bf04:	ret
    bf08:	stp	x29, x30, [sp, #-48]!
    bf0c:	mov	x29, sp
    bf10:	str	w0, [sp, #28]
    bf14:	str	x1, [sp, #16]
    bf18:	ldr	x0, [sp, #16]
    bf1c:	ldr	w0, [x0, #104]
    bf20:	mov	w0, w0
    bf24:	lsl	x1, x0, #4
    bf28:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    bf2c:	add	x0, x0, #0xfe0
    bf30:	add	x0, x1, x0
    bf34:	str	x0, [sp, #40]
    bf38:	ldr	x0, [sp, #40]
    bf3c:	ldr	w1, [x0]
    bf40:	ldr	x0, [sp, #40]
    bf44:	ldr	w2, [x0, #4]
    bf48:	ldr	x0, [sp, #40]
    bf4c:	ldr	w0, [x0, #12]
    bf50:	mov	w3, w0
    bf54:	ldr	w0, [sp, #28]
    bf58:	bl	be80 <htab_elements@@Base+0x24>
    bf5c:	ldp	x29, x30, [sp], #48
    bf60:	ret
    bf64:	stp	x29, x30, [sp, #-48]!
    bf68:	mov	x29, sp
    bf6c:	str	w0, [sp, #28]
    bf70:	str	x1, [sp, #16]
    bf74:	ldr	x0, [sp, #16]
    bf78:	ldr	w0, [x0, #104]
    bf7c:	mov	w0, w0
    bf80:	lsl	x1, x0, #4
    bf84:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    bf88:	add	x0, x0, #0xfe0
    bf8c:	add	x0, x1, x0
    bf90:	str	x0, [sp, #40]
    bf94:	ldr	x0, [sp, #40]
    bf98:	ldr	w0, [x0]
    bf9c:	sub	w1, w0, #0x2
    bfa0:	ldr	x0, [sp, #40]
    bfa4:	ldr	w2, [x0, #8]
    bfa8:	ldr	x0, [sp, #40]
    bfac:	ldr	w0, [x0, #12]
    bfb0:	mov	w3, w0
    bfb4:	ldr	w0, [sp, #28]
    bfb8:	bl	be80 <htab_elements@@Base+0x24>
    bfbc:	add	w0, w0, #0x1
    bfc0:	ldp	x29, x30, [sp], #48
    bfc4:	ret

000000000000bfc8 <htab_create_alloc@@Base>:
    bfc8:	stp	x29, x30, [sp, #-64]!
    bfcc:	mov	x29, sp
    bfd0:	str	x0, [sp, #56]
    bfd4:	str	x1, [sp, #48]
    bfd8:	str	x2, [sp, #40]
    bfdc:	str	x3, [sp, #32]
    bfe0:	str	x4, [sp, #24]
    bfe4:	str	x5, [sp, #16]
    bfe8:	ldr	x6, [sp, #16]
    bfec:	ldr	x5, [sp, #24]
    bff0:	ldr	x4, [sp, #24]
    bff4:	ldr	x3, [sp, #32]
    bff8:	ldr	x2, [sp, #40]
    bffc:	ldr	x1, [sp, #48]
    c000:	ldr	x0, [sp, #56]
    c004:	bl	2da0 <htab_create_typed_alloc@plt>
    c008:	ldp	x29, x30, [sp], #64
    c00c:	ret

000000000000c010 <htab_create_alloc_ex@@Base>:
    c010:	stp	x29, x30, [sp, #-96]!
    c014:	mov	x29, sp
    c018:	str	x0, [sp, #72]
    c01c:	str	x1, [sp, #64]
    c020:	str	x2, [sp, #56]
    c024:	str	x3, [sp, #48]
    c028:	str	x4, [sp, #40]
    c02c:	str	x5, [sp, #32]
    c030:	str	x6, [sp, #24]
    c034:	ldr	x0, [sp, #72]
    c038:	bl	bd3c <plugin_init@@Base+0x6df0>
    c03c:	str	w0, [sp, #92]
    c040:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    c044:	add	x1, x0, #0xfe0
    c048:	ldr	w0, [sp, #92]
    c04c:	lsl	x0, x0, #4
    c050:	add	x0, x1, x0
    c054:	ldr	w0, [x0]
    c058:	mov	w0, w0
    c05c:	str	x0, [sp, #72]
    c060:	ldr	x3, [sp, #32]
    c064:	mov	x2, #0x70                  	// #112
    c068:	mov	x1, #0x1                   	// #1
    c06c:	ldr	x0, [sp, #40]
    c070:	blr	x3
    c074:	str	x0, [sp, #80]
    c078:	ldr	x0, [sp, #80]
    c07c:	cmp	x0, #0x0
    c080:	b.ne	c08c <htab_create_alloc_ex@@Base+0x7c>  // b.any
    c084:	mov	x0, #0x0                   	// #0
    c088:	b	c144 <htab_create_alloc_ex@@Base+0x134>
    c08c:	ldr	x3, [sp, #32]
    c090:	mov	x2, #0x8                   	// #8
    c094:	ldr	x1, [sp, #72]
    c098:	ldr	x0, [sp, #40]
    c09c:	blr	x3
    c0a0:	mov	x1, x0
    c0a4:	ldr	x0, [sp, #80]
    c0a8:	str	x1, [x0, #24]
    c0ac:	ldr	x0, [sp, #80]
    c0b0:	ldr	x0, [x0, #24]
    c0b4:	cmp	x0, #0x0
    c0b8:	b.ne	c0e0 <htab_create_alloc_ex@@Base+0xd0>  // b.any
    c0bc:	ldr	x0, [sp, #24]
    c0c0:	cmp	x0, #0x0
    c0c4:	b.eq	c0d8 <htab_create_alloc_ex@@Base+0xc8>  // b.none
    c0c8:	ldr	x2, [sp, #24]
    c0cc:	ldr	x1, [sp, #80]
    c0d0:	ldr	x0, [sp, #40]
    c0d4:	blr	x2
    c0d8:	mov	x0, #0x0                   	// #0
    c0dc:	b	c144 <htab_create_alloc_ex@@Base+0x134>
    c0e0:	ldr	x0, [sp, #80]
    c0e4:	ldr	x1, [sp, #72]
    c0e8:	str	x1, [x0, #32]
    c0ec:	ldr	x0, [sp, #80]
    c0f0:	ldr	w1, [sp, #92]
    c0f4:	str	w1, [x0, #104]
    c0f8:	ldr	x0, [sp, #80]
    c0fc:	ldr	x1, [sp, #64]
    c100:	str	x1, [x0]
    c104:	ldr	x0, [sp, #80]
    c108:	ldr	x1, [sp, #56]
    c10c:	str	x1, [x0, #8]
    c110:	ldr	x0, [sp, #80]
    c114:	ldr	x1, [sp, #48]
    c118:	str	x1, [x0, #16]
    c11c:	ldr	x0, [sp, #80]
    c120:	ldr	x1, [sp, #40]
    c124:	str	x1, [x0, #80]
    c128:	ldr	x0, [sp, #80]
    c12c:	ldr	x1, [sp, #32]
    c130:	str	x1, [x0, #88]
    c134:	ldr	x0, [sp, #80]
    c138:	ldr	x1, [sp, #24]
    c13c:	str	x1, [x0, #96]
    c140:	ldr	x0, [sp, #80]
    c144:	ldp	x29, x30, [sp], #96
    c148:	ret

000000000000c14c <htab_create_typed_alloc@@Base>:
    c14c:	stp	x29, x30, [sp, #-96]!
    c150:	mov	x29, sp
    c154:	str	x0, [sp, #72]
    c158:	str	x1, [sp, #64]
    c15c:	str	x2, [sp, #56]
    c160:	str	x3, [sp, #48]
    c164:	str	x4, [sp, #40]
    c168:	str	x5, [sp, #32]
    c16c:	str	x6, [sp, #24]
    c170:	ldr	x0, [sp, #72]
    c174:	bl	bd3c <plugin_init@@Base+0x6df0>
    c178:	str	w0, [sp, #92]
    c17c:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    c180:	add	x1, x0, #0xfe0
    c184:	ldr	w0, [sp, #92]
    c188:	lsl	x0, x0, #4
    c18c:	add	x0, x1, x0
    c190:	ldr	w0, [x0]
    c194:	mov	w0, w0
    c198:	str	x0, [sp, #72]
    c19c:	ldr	x2, [sp, #40]
    c1a0:	mov	x1, #0x70                  	// #112
    c1a4:	mov	x0, #0x1                   	// #1
    c1a8:	blr	x2
    c1ac:	str	x0, [sp, #80]
    c1b0:	ldr	x0, [sp, #80]
    c1b4:	cmp	x0, #0x0
    c1b8:	b.ne	c1c4 <htab_create_typed_alloc@@Base+0x78>  // b.any
    c1bc:	mov	x0, #0x0                   	// #0
    c1c0:	b	c268 <htab_create_typed_alloc@@Base+0x11c>
    c1c4:	ldr	x2, [sp, #32]
    c1c8:	mov	x1, #0x8                   	// #8
    c1cc:	ldr	x0, [sp, #72]
    c1d0:	blr	x2
    c1d4:	mov	x1, x0
    c1d8:	ldr	x0, [sp, #80]
    c1dc:	str	x1, [x0, #24]
    c1e0:	ldr	x0, [sp, #80]
    c1e4:	ldr	x0, [x0, #24]
    c1e8:	cmp	x0, #0x0
    c1ec:	b.ne	c210 <htab_create_typed_alloc@@Base+0xc4>  // b.any
    c1f0:	ldr	x0, [sp, #24]
    c1f4:	cmp	x0, #0x0
    c1f8:	b.eq	c208 <htab_create_typed_alloc@@Base+0xbc>  // b.none
    c1fc:	ldr	x1, [sp, #24]
    c200:	ldr	x0, [sp, #80]
    c204:	blr	x1
    c208:	mov	x0, #0x0                   	// #0
    c20c:	b	c268 <htab_create_typed_alloc@@Base+0x11c>
    c210:	ldr	x0, [sp, #80]
    c214:	ldr	x1, [sp, #72]
    c218:	str	x1, [x0, #32]
    c21c:	ldr	x0, [sp, #80]
    c220:	ldr	w1, [sp, #92]
    c224:	str	w1, [x0, #104]
    c228:	ldr	x0, [sp, #80]
    c22c:	ldr	x1, [sp, #64]
    c230:	str	x1, [x0]
    c234:	ldr	x0, [sp, #80]
    c238:	ldr	x1, [sp, #56]
    c23c:	str	x1, [x0, #8]
    c240:	ldr	x0, [sp, #80]
    c244:	ldr	x1, [sp, #48]
    c248:	str	x1, [x0, #16]
    c24c:	ldr	x0, [sp, #80]
    c250:	ldr	x1, [sp, #32]
    c254:	str	x1, [x0, #64]
    c258:	ldr	x0, [sp, #80]
    c25c:	ldr	x1, [sp, #24]
    c260:	str	x1, [x0, #72]
    c264:	ldr	x0, [sp, #80]
    c268:	ldp	x29, x30, [sp], #96
    c26c:	ret

000000000000c270 <htab_set_functions_ex@@Base>:
    c270:	sub	sp, sp, #0x40
    c274:	str	x0, [sp, #56]
    c278:	str	x1, [sp, #48]
    c27c:	str	x2, [sp, #40]
    c280:	str	x3, [sp, #32]
    c284:	str	x4, [sp, #24]
    c288:	str	x5, [sp, #16]
    c28c:	str	x6, [sp, #8]
    c290:	ldr	x0, [sp, #56]
    c294:	ldr	x1, [sp, #48]
    c298:	str	x1, [x0]
    c29c:	ldr	x0, [sp, #56]
    c2a0:	ldr	x1, [sp, #40]
    c2a4:	str	x1, [x0, #8]
    c2a8:	ldr	x0, [sp, #56]
    c2ac:	ldr	x1, [sp, #32]
    c2b0:	str	x1, [x0, #16]
    c2b4:	ldr	x0, [sp, #56]
    c2b8:	ldr	x1, [sp, #24]
    c2bc:	str	x1, [x0, #80]
    c2c0:	ldr	x0, [sp, #56]
    c2c4:	ldr	x1, [sp, #16]
    c2c8:	str	x1, [x0, #88]
    c2cc:	ldr	x0, [sp, #56]
    c2d0:	ldr	x1, [sp, #8]
    c2d4:	str	x1, [x0, #96]
    c2d8:	nop
    c2dc:	add	sp, sp, #0x40
    c2e0:	ret

000000000000c2e4 <htab_create@@Base>:
    c2e4:	stp	x29, x30, [sp, #-48]!
    c2e8:	mov	x29, sp
    c2ec:	str	x0, [sp, #40]
    c2f0:	str	x1, [sp, #32]
    c2f4:	str	x2, [sp, #24]
    c2f8:	str	x3, [sp, #16]
    c2fc:	adrp	x0, 21000 <xexit@@Base+0x13570>
    c300:	ldr	x5, [x0, #3944]
    c304:	adrp	x0, 21000 <xexit@@Base+0x13570>
    c308:	ldr	x4, [x0, #4008]
    c30c:	ldr	x3, [sp, #16]
    c310:	ldr	x2, [sp, #24]
    c314:	ldr	x1, [sp, #32]
    c318:	ldr	x0, [sp, #40]
    c31c:	bl	2cc0 <htab_create_alloc@plt>
    c320:	ldp	x29, x30, [sp], #48
    c324:	ret

000000000000c328 <htab_try_create@@Base>:
    c328:	stp	x29, x30, [sp, #-48]!
    c32c:	mov	x29, sp
    c330:	str	x0, [sp, #40]
    c334:	str	x1, [sp, #32]
    c338:	str	x2, [sp, #24]
    c33c:	str	x3, [sp, #16]
    c340:	adrp	x0, 21000 <xexit@@Base+0x13570>
    c344:	ldr	x5, [x0, #3944]
    c348:	adrp	x0, 21000 <xexit@@Base+0x13570>
    c34c:	ldr	x4, [x0, #3912]
    c350:	ldr	x3, [sp, #16]
    c354:	ldr	x2, [sp, #24]
    c358:	ldr	x1, [sp, #32]
    c35c:	ldr	x0, [sp, #40]
    c360:	bl	2cc0 <htab_create_alloc@plt>
    c364:	ldp	x29, x30, [sp], #48
    c368:	ret

000000000000c36c <htab_delete@@Base>:
    c36c:	stp	x29, x30, [sp, #-64]!
    c370:	mov	x29, sp
    c374:	str	x0, [sp, #24]
    c378:	ldr	x0, [sp, #24]
    c37c:	ldr	x0, [x0, #32]
    c380:	str	x0, [sp, #48]
    c384:	ldr	x0, [sp, #24]
    c388:	ldr	x0, [x0, #24]
    c38c:	str	x0, [sp, #40]
    c390:	ldr	x0, [sp, #24]
    c394:	ldr	x0, [x0, #16]
    c398:	cmp	x0, #0x0
    c39c:	b.eq	c420 <htab_delete@@Base+0xb4>  // b.none
    c3a0:	ldr	x0, [sp, #48]
    c3a4:	sub	w0, w0, #0x1
    c3a8:	str	w0, [sp, #60]
    c3ac:	b	c414 <htab_delete@@Base+0xa8>
    c3b0:	ldrsw	x0, [sp, #60]
    c3b4:	lsl	x0, x0, #3
    c3b8:	ldr	x1, [sp, #40]
    c3bc:	add	x0, x1, x0
    c3c0:	ldr	x0, [x0]
    c3c4:	cmp	x0, #0x0
    c3c8:	b.eq	c408 <htab_delete@@Base+0x9c>  // b.none
    c3cc:	ldrsw	x0, [sp, #60]
    c3d0:	lsl	x0, x0, #3
    c3d4:	ldr	x1, [sp, #40]
    c3d8:	add	x0, x1, x0
    c3dc:	ldr	x0, [x0]
    c3e0:	cmp	x0, #0x1
    c3e4:	b.eq	c408 <htab_delete@@Base+0x9c>  // b.none
    c3e8:	ldr	x0, [sp, #24]
    c3ec:	ldr	x1, [x0, #16]
    c3f0:	ldrsw	x0, [sp, #60]
    c3f4:	lsl	x0, x0, #3
    c3f8:	ldr	x2, [sp, #40]
    c3fc:	add	x0, x2, x0
    c400:	ldr	x0, [x0]
    c404:	blr	x1
    c408:	ldr	w0, [sp, #60]
    c40c:	sub	w0, w0, #0x1
    c410:	str	w0, [sp, #60]
    c414:	ldr	w0, [sp, #60]
    c418:	cmp	w0, #0x0
    c41c:	b.ge	c3b0 <htab_delete@@Base+0x44>  // b.tcont
    c420:	ldr	x0, [sp, #24]
    c424:	ldr	x0, [x0, #72]
    c428:	cmp	x0, #0x0
    c42c:	b.eq	c454 <htab_delete@@Base+0xe8>  // b.none
    c430:	ldr	x0, [sp, #24]
    c434:	ldr	x1, [x0, #72]
    c438:	ldr	x0, [sp, #40]
    c43c:	blr	x1
    c440:	ldr	x0, [sp, #24]
    c444:	ldr	x1, [x0, #72]
    c448:	ldr	x0, [sp, #24]
    c44c:	blr	x1
    c450:	b	c494 <htab_delete@@Base+0x128>
    c454:	ldr	x0, [sp, #24]
    c458:	ldr	x0, [x0, #96]
    c45c:	cmp	x0, #0x0
    c460:	b.eq	c494 <htab_delete@@Base+0x128>  // b.none
    c464:	ldr	x0, [sp, #24]
    c468:	ldr	x2, [x0, #96]
    c46c:	ldr	x0, [sp, #24]
    c470:	ldr	x0, [x0, #80]
    c474:	ldr	x1, [sp, #40]
    c478:	blr	x2
    c47c:	ldr	x0, [sp, #24]
    c480:	ldr	x2, [x0, #96]
    c484:	ldr	x0, [sp, #24]
    c488:	ldr	x0, [x0, #80]
    c48c:	ldr	x1, [sp, #24]
    c490:	blr	x2
    c494:	nop
    c498:	ldp	x29, x30, [sp], #64
    c49c:	ret

000000000000c4a0 <htab_empty@@Base>:
    c4a0:	stp	x29, x30, [sp, #-64]!
    c4a4:	mov	x29, sp
    c4a8:	str	x0, [sp, #24]
    c4ac:	ldr	x0, [sp, #24]
    c4b0:	ldr	x0, [x0, #32]
    c4b4:	str	x0, [sp, #48]
    c4b8:	ldr	x0, [sp, #24]
    c4bc:	ldr	x0, [x0, #24]
    c4c0:	str	x0, [sp, #40]
    c4c4:	ldr	x0, [sp, #24]
    c4c8:	ldr	x0, [x0, #16]
    c4cc:	cmp	x0, #0x0
    c4d0:	b.eq	c554 <htab_empty@@Base+0xb4>  // b.none
    c4d4:	ldr	x0, [sp, #48]
    c4d8:	sub	w0, w0, #0x1
    c4dc:	str	w0, [sp, #60]
    c4e0:	b	c548 <htab_empty@@Base+0xa8>
    c4e4:	ldrsw	x0, [sp, #60]
    c4e8:	lsl	x0, x0, #3
    c4ec:	ldr	x1, [sp, #40]
    c4f0:	add	x0, x1, x0
    c4f4:	ldr	x0, [x0]
    c4f8:	cmp	x0, #0x0
    c4fc:	b.eq	c53c <htab_empty@@Base+0x9c>  // b.none
    c500:	ldrsw	x0, [sp, #60]
    c504:	lsl	x0, x0, #3
    c508:	ldr	x1, [sp, #40]
    c50c:	add	x0, x1, x0
    c510:	ldr	x0, [x0]
    c514:	cmp	x0, #0x1
    c518:	b.eq	c53c <htab_empty@@Base+0x9c>  // b.none
    c51c:	ldr	x0, [sp, #24]
    c520:	ldr	x1, [x0, #16]
    c524:	ldrsw	x0, [sp, #60]
    c528:	lsl	x0, x0, #3
    c52c:	ldr	x2, [sp, #40]
    c530:	add	x0, x2, x0
    c534:	ldr	x0, [x0]
    c538:	blr	x1
    c53c:	ldr	w0, [sp, #60]
    c540:	sub	w0, w0, #0x1
    c544:	str	w0, [sp, #60]
    c548:	ldr	w0, [sp, #60]
    c54c:	cmp	w0, #0x0
    c550:	b.ge	c4e4 <htab_empty@@Base+0x44>  // b.tcont
    c554:	ldr	x0, [sp, #48]
    c558:	cmp	x0, #0x20, lsl #12
    c55c:	b.ls	c65c <htab_empty@@Base+0x1bc>  // b.plast
    c560:	mov	x0, #0x80                  	// #128
    c564:	bl	bd3c <plugin_init@@Base+0x6df0>
    c568:	str	w0, [sp, #36]
    c56c:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    c570:	add	x1, x0, #0xfe0
    c574:	ldrsw	x0, [sp, #36]
    c578:	lsl	x0, x0, #4
    c57c:	add	x0, x1, x0
    c580:	ldr	w0, [x0]
    c584:	str	w0, [sp, #32]
    c588:	ldr	x0, [sp, #24]
    c58c:	ldr	x0, [x0, #72]
    c590:	cmp	x0, #0x0
    c594:	b.eq	c5b0 <htab_empty@@Base+0x110>  // b.none
    c598:	ldr	x0, [sp, #24]
    c59c:	ldr	x1, [x0, #72]
    c5a0:	ldr	x0, [sp, #24]
    c5a4:	ldr	x0, [x0, #24]
    c5a8:	blr	x1
    c5ac:	b	c5e4 <htab_empty@@Base+0x144>
    c5b0:	ldr	x0, [sp, #24]
    c5b4:	ldr	x0, [x0, #96]
    c5b8:	cmp	x0, #0x0
    c5bc:	b.eq	c5e4 <htab_empty@@Base+0x144>  // b.none
    c5c0:	ldr	x0, [sp, #24]
    c5c4:	ldr	x2, [x0, #96]
    c5c8:	ldr	x0, [sp, #24]
    c5cc:	ldr	x3, [x0, #80]
    c5d0:	ldr	x0, [sp, #24]
    c5d4:	ldr	x0, [x0, #24]
    c5d8:	mov	x1, x0
    c5dc:	mov	x0, x3
    c5e0:	blr	x2
    c5e4:	ldr	x0, [sp, #24]
    c5e8:	ldr	x0, [x0, #88]
    c5ec:	cmp	x0, #0x0
    c5f0:	b.eq	c620 <htab_empty@@Base+0x180>  // b.none
    c5f4:	ldr	x0, [sp, #24]
    c5f8:	ldr	x3, [x0, #88]
    c5fc:	ldr	x0, [sp, #24]
    c600:	ldr	x0, [x0, #80]
    c604:	ldrsw	x1, [sp, #32]
    c608:	mov	x2, #0x8                   	// #8
    c60c:	blr	x3
    c610:	mov	x1, x0
    c614:	ldr	x0, [sp, #24]
    c618:	str	x1, [x0, #24]
    c61c:	b	c640 <htab_empty@@Base+0x1a0>
    c620:	ldr	x0, [sp, #24]
    c624:	ldr	x2, [x0, #64]
    c628:	ldrsw	x0, [sp, #32]
    c62c:	mov	x1, #0x8                   	// #8
    c630:	blr	x2
    c634:	mov	x1, x0
    c638:	ldr	x0, [sp, #24]
    c63c:	str	x1, [x0, #24]
    c640:	ldrsw	x1, [sp, #32]
    c644:	ldr	x0, [sp, #24]
    c648:	str	x1, [x0, #32]
    c64c:	ldr	w1, [sp, #36]
    c650:	ldr	x0, [sp, #24]
    c654:	str	w1, [x0, #104]
    c658:	b	c674 <htab_empty@@Base+0x1d4>
    c65c:	ldr	x0, [sp, #48]
    c660:	lsl	x0, x0, #3
    c664:	mov	x2, x0
    c668:	mov	w1, #0x0                   	// #0
    c66c:	ldr	x0, [sp, #40]
    c670:	bl	2d50 <memset@plt>
    c674:	ldr	x0, [sp, #24]
    c678:	str	xzr, [x0, #48]
    c67c:	ldr	x0, [sp, #24]
    c680:	str	xzr, [x0, #40]
    c684:	nop
    c688:	ldp	x29, x30, [sp], #64
    c68c:	ret
    c690:	stp	x29, x30, [sp, #-64]!
    c694:	mov	x29, sp
    c698:	str	x0, [sp, #24]
    c69c:	str	w1, [sp, #20]
    c6a0:	ldr	x1, [sp, #24]
    c6a4:	ldr	w0, [sp, #20]
    c6a8:	bl	bf08 <htab_elements@@Base+0xac>
    c6ac:	str	w0, [sp, #60]
    c6b0:	ldr	x0, [sp, #24]
    c6b4:	ldr	x0, [x0, #32]
    c6b8:	str	x0, [sp, #48]
    c6bc:	ldr	x0, [sp, #24]
    c6c0:	ldr	x1, [x0, #24]
    c6c4:	ldr	w0, [sp, #60]
    c6c8:	lsl	x0, x0, #3
    c6cc:	add	x0, x1, x0
    c6d0:	str	x0, [sp, #40]
    c6d4:	ldr	x0, [sp, #40]
    c6d8:	ldr	x0, [x0]
    c6dc:	cmp	x0, #0x0
    c6e0:	b.ne	c6ec <htab_empty@@Base+0x24c>  // b.any
    c6e4:	ldr	x0, [sp, #40]
    c6e8:	b	c788 <htab_empty@@Base+0x2e8>
    c6ec:	ldr	x0, [sp, #40]
    c6f0:	ldr	x0, [x0]
    c6f4:	cmp	x0, #0x1
    c6f8:	b.ne	c700 <htab_empty@@Base+0x260>  // b.any
    c6fc:	bl	3050 <abort@plt>
    c700:	ldr	x1, [sp, #24]
    c704:	ldr	w0, [sp, #20]
    c708:	bl	bf64 <htab_elements@@Base+0x108>
    c70c:	str	w0, [sp, #36]
    c710:	ldr	w1, [sp, #60]
    c714:	ldr	w0, [sp, #36]
    c718:	add	w0, w1, w0
    c71c:	str	w0, [sp, #60]
    c720:	ldr	w0, [sp, #60]
    c724:	ldr	x1, [sp, #48]
    c728:	cmp	x1, x0
    c72c:	b.hi	c744 <htab_empty@@Base+0x2a4>  // b.pmore
    c730:	ldr	x0, [sp, #48]
    c734:	mov	w1, w0
    c738:	ldr	w0, [sp, #60]
    c73c:	sub	w0, w0, w1
    c740:	str	w0, [sp, #60]
    c744:	ldr	x0, [sp, #24]
    c748:	ldr	x1, [x0, #24]
    c74c:	ldr	w0, [sp, #60]
    c750:	lsl	x0, x0, #3
    c754:	add	x0, x1, x0
    c758:	str	x0, [sp, #40]
    c75c:	ldr	x0, [sp, #40]
    c760:	ldr	x0, [x0]
    c764:	cmp	x0, #0x0
    c768:	b.ne	c774 <htab_empty@@Base+0x2d4>  // b.any
    c76c:	ldr	x0, [sp, #40]
    c770:	b	c788 <htab_empty@@Base+0x2e8>
    c774:	ldr	x0, [sp, #40]
    c778:	ldr	x0, [x0]
    c77c:	cmp	x0, #0x1
    c780:	b.ne	c710 <htab_empty@@Base+0x270>  // b.any
    c784:	bl	3050 <abort@plt>
    c788:	ldp	x29, x30, [sp], #64
    c78c:	ret
    c790:	stp	x29, x30, [sp, #-128]!
    c794:	mov	x29, sp
    c798:	str	x0, [sp, #24]
    c79c:	ldr	x0, [sp, #24]
    c7a0:	ldr	x0, [x0, #24]
    c7a4:	str	x0, [sp, #88]
    c7a8:	ldr	x0, [sp, #24]
    c7ac:	ldr	w0, [x0, #104]
    c7b0:	str	w0, [sp, #84]
    c7b4:	ldr	x0, [sp, #24]
    c7b8:	ldr	x0, [x0, #32]
    c7bc:	str	x0, [sp, #72]
    c7c0:	ldr	x0, [sp, #72]
    c7c4:	lsl	x0, x0, #3
    c7c8:	ldr	x1, [sp, #88]
    c7cc:	add	x0, x1, x0
    c7d0:	str	x0, [sp, #64]
    c7d4:	ldr	x0, [sp, #24]
    c7d8:	ldr	x1, [x0, #40]
    c7dc:	ldr	x0, [sp, #24]
    c7e0:	ldr	x0, [x0, #48]
    c7e4:	sub	x0, x1, x0
    c7e8:	str	x0, [sp, #56]
    c7ec:	ldr	x0, [sp, #56]
    c7f0:	lsl	x0, x0, #1
    c7f4:	ldr	x1, [sp, #72]
    c7f8:	cmp	x1, x0
    c7fc:	b.cc	c820 <htab_empty@@Base+0x380>  // b.lo, b.ul, b.last
    c800:	ldr	x0, [sp, #56]
    c804:	lsl	x0, x0, #3
    c808:	ldr	x1, [sp, #72]
    c80c:	cmp	x1, x0
    c810:	b.ls	c854 <htab_empty@@Base+0x3b4>  // b.plast
    c814:	ldr	x0, [sp, #72]
    c818:	cmp	x0, #0x20
    c81c:	b.ls	c854 <htab_empty@@Base+0x3b4>  // b.plast
    c820:	ldr	x0, [sp, #56]
    c824:	lsl	x0, x0, #1
    c828:	bl	bd3c <plugin_init@@Base+0x6df0>
    c82c:	str	w0, [sp, #100]
    c830:	adrp	x0, d000 <htab_traverse_noresize@@Base+0x50>
    c834:	add	x1, x0, #0xfe0
    c838:	ldr	w0, [sp, #100]
    c83c:	lsl	x0, x0, #4
    c840:	add	x0, x1, x0
    c844:	ldr	w0, [x0]
    c848:	mov	w0, w0
    c84c:	str	x0, [sp, #104]
    c850:	b	c864 <htab_empty@@Base+0x3c4>
    c854:	ldr	w0, [sp, #84]
    c858:	str	w0, [sp, #100]
    c85c:	ldr	x0, [sp, #72]
    c860:	str	x0, [sp, #104]
    c864:	ldr	x0, [sp, #24]
    c868:	ldr	x0, [x0, #88]
    c86c:	cmp	x0, #0x0
    c870:	b.eq	c898 <htab_empty@@Base+0x3f8>  // b.none
    c874:	ldr	x0, [sp, #24]
    c878:	ldr	x3, [x0, #88]
    c87c:	ldr	x0, [sp, #24]
    c880:	ldr	x0, [x0, #80]
    c884:	mov	x2, #0x8                   	// #8
    c888:	ldr	x1, [sp, #104]
    c88c:	blr	x3
    c890:	str	x0, [sp, #112]
    c894:	b	c8b0 <htab_empty@@Base+0x410>
    c898:	ldr	x0, [sp, #24]
    c89c:	ldr	x2, [x0, #64]
    c8a0:	mov	x1, #0x8                   	// #8
    c8a4:	ldr	x0, [sp, #104]
    c8a8:	blr	x2
    c8ac:	str	x0, [sp, #112]
    c8b0:	ldr	x0, [sp, #112]
    c8b4:	cmp	x0, #0x0
    c8b8:	b.ne	c8c4 <htab_empty@@Base+0x424>  // b.any
    c8bc:	mov	w0, #0x0                   	// #0
    c8c0:	b	c9d0 <htab_empty@@Base+0x530>
    c8c4:	ldr	x0, [sp, #24]
    c8c8:	ldr	x1, [sp, #112]
    c8cc:	str	x1, [x0, #24]
    c8d0:	ldr	x0, [sp, #24]
    c8d4:	ldr	x1, [sp, #104]
    c8d8:	str	x1, [x0, #32]
    c8dc:	ldr	x0, [sp, #24]
    c8e0:	ldr	w1, [sp, #100]
    c8e4:	str	w1, [x0, #104]
    c8e8:	ldr	x0, [sp, #24]
    c8ec:	ldr	x1, [x0, #40]
    c8f0:	ldr	x0, [sp, #24]
    c8f4:	ldr	x0, [x0, #48]
    c8f8:	sub	x1, x1, x0
    c8fc:	ldr	x0, [sp, #24]
    c900:	str	x1, [x0, #40]
    c904:	ldr	x0, [sp, #24]
    c908:	str	xzr, [x0, #48]
    c90c:	ldr	x0, [sp, #88]
    c910:	str	x0, [sp, #120]
    c914:	ldr	x0, [sp, #120]
    c918:	ldr	x0, [x0]
    c91c:	str	x0, [sp, #48]
    c920:	ldr	x0, [sp, #48]
    c924:	cmp	x0, #0x0
    c928:	b.eq	c964 <htab_empty@@Base+0x4c4>  // b.none
    c92c:	ldr	x0, [sp, #48]
    c930:	cmp	x0, #0x1
    c934:	b.eq	c964 <htab_empty@@Base+0x4c4>  // b.none
    c938:	ldr	x0, [sp, #24]
    c93c:	ldr	x1, [x0]
    c940:	ldr	x0, [sp, #48]
    c944:	blr	x1
    c948:	mov	w1, w0
    c94c:	ldr	x0, [sp, #24]
    c950:	bl	c690 <htab_empty@@Base+0x1f0>
    c954:	str	x0, [sp, #40]
    c958:	ldr	x0, [sp, #40]
    c95c:	ldr	x1, [sp, #48]
    c960:	str	x1, [x0]
    c964:	ldr	x0, [sp, #120]
    c968:	add	x0, x0, #0x8
    c96c:	str	x0, [sp, #120]
    c970:	ldr	x1, [sp, #120]
    c974:	ldr	x0, [sp, #64]
    c978:	cmp	x1, x0
    c97c:	b.cc	c914 <htab_empty@@Base+0x474>  // b.lo, b.ul, b.last
    c980:	ldr	x0, [sp, #24]
    c984:	ldr	x0, [x0, #72]
    c988:	cmp	x0, #0x0
    c98c:	b.eq	c9a4 <htab_empty@@Base+0x504>  // b.none
    c990:	ldr	x0, [sp, #24]
    c994:	ldr	x1, [x0, #72]
    c998:	ldr	x0, [sp, #88]
    c99c:	blr	x1
    c9a0:	b	c9cc <htab_empty@@Base+0x52c>
    c9a4:	ldr	x0, [sp, #24]
    c9a8:	ldr	x0, [x0, #96]
    c9ac:	cmp	x0, #0x0
    c9b0:	b.eq	c9cc <htab_empty@@Base+0x52c>  // b.none
    c9b4:	ldr	x0, [sp, #24]
    c9b8:	ldr	x2, [x0, #96]
    c9bc:	ldr	x0, [sp, #24]
    c9c0:	ldr	x0, [x0, #80]
    c9c4:	ldr	x1, [sp, #88]
    c9c8:	blr	x2
    c9cc:	mov	w0, #0x1                   	// #1
    c9d0:	ldp	x29, x30, [sp], #128
    c9d4:	ret

000000000000c9d8 <htab_find_with_hash@@Base>:
    c9d8:	stp	x29, x30, [sp, #-80]!
    c9dc:	mov	x29, sp
    c9e0:	str	x0, [sp, #40]
    c9e4:	str	x1, [sp, #32]
    c9e8:	str	w2, [sp, #28]
    c9ec:	ldr	x0, [sp, #40]
    c9f0:	ldr	w0, [x0, #56]
    c9f4:	add	w1, w0, #0x1
    c9f8:	ldr	x0, [sp, #40]
    c9fc:	str	w1, [x0, #56]
    ca00:	ldr	x0, [sp, #40]
    ca04:	ldr	x0, [x0, #32]
    ca08:	str	x0, [sp, #64]
    ca0c:	ldr	x1, [sp, #40]
    ca10:	ldr	w0, [sp, #28]
    ca14:	bl	bf08 <htab_elements@@Base+0xac>
    ca18:	str	w0, [sp, #76]
    ca1c:	ldr	x0, [sp, #40]
    ca20:	ldr	x1, [x0, #24]
    ca24:	ldr	w0, [sp, #76]
    ca28:	lsl	x0, x0, #3
    ca2c:	add	x0, x1, x0
    ca30:	ldr	x0, [x0]
    ca34:	str	x0, [sp, #56]
    ca38:	ldr	x0, [sp, #56]
    ca3c:	cmp	x0, #0x0
    ca40:	b.eq	ca6c <htab_find_with_hash@@Base+0x94>  // b.none
    ca44:	ldr	x0, [sp, #56]
    ca48:	cmp	x0, #0x1
    ca4c:	b.eq	ca74 <htab_find_with_hash@@Base+0x9c>  // b.none
    ca50:	ldr	x0, [sp, #40]
    ca54:	ldr	x2, [x0, #8]
    ca58:	ldr	x1, [sp, #32]
    ca5c:	ldr	x0, [sp, #56]
    ca60:	blr	x2
    ca64:	cmp	w0, #0x0
    ca68:	b.eq	ca74 <htab_find_with_hash@@Base+0x9c>  // b.none
    ca6c:	ldr	x0, [sp, #56]
    ca70:	b	cb20 <htab_find_with_hash@@Base+0x148>
    ca74:	ldr	x1, [sp, #40]
    ca78:	ldr	w0, [sp, #28]
    ca7c:	bl	bf64 <htab_elements@@Base+0x108>
    ca80:	str	w0, [sp, #52]
    ca84:	ldr	x0, [sp, #40]
    ca88:	ldr	w0, [x0, #60]
    ca8c:	add	w1, w0, #0x1
    ca90:	ldr	x0, [sp, #40]
    ca94:	str	w1, [x0, #60]
    ca98:	ldr	w1, [sp, #76]
    ca9c:	ldr	w0, [sp, #52]
    caa0:	add	w0, w1, w0
    caa4:	str	w0, [sp, #76]
    caa8:	ldr	w0, [sp, #76]
    caac:	ldr	x1, [sp, #64]
    cab0:	cmp	x1, x0
    cab4:	b.hi	cacc <htab_find_with_hash@@Base+0xf4>  // b.pmore
    cab8:	ldr	x0, [sp, #64]
    cabc:	mov	w1, w0
    cac0:	ldr	w0, [sp, #76]
    cac4:	sub	w0, w0, w1
    cac8:	str	w0, [sp, #76]
    cacc:	ldr	x0, [sp, #40]
    cad0:	ldr	x1, [x0, #24]
    cad4:	ldr	w0, [sp, #76]
    cad8:	lsl	x0, x0, #3
    cadc:	add	x0, x1, x0
    cae0:	ldr	x0, [x0]
    cae4:	str	x0, [sp, #56]
    cae8:	ldr	x0, [sp, #56]
    caec:	cmp	x0, #0x0
    caf0:	b.eq	cb1c <htab_find_with_hash@@Base+0x144>  // b.none
    caf4:	ldr	x0, [sp, #56]
    caf8:	cmp	x0, #0x1
    cafc:	b.eq	ca84 <htab_find_with_hash@@Base+0xac>  // b.none
    cb00:	ldr	x0, [sp, #40]
    cb04:	ldr	x2, [x0, #8]
    cb08:	ldr	x1, [sp, #32]
    cb0c:	ldr	x0, [sp, #56]
    cb10:	blr	x2
    cb14:	cmp	w0, #0x0
    cb18:	b.eq	ca84 <htab_find_with_hash@@Base+0xac>  // b.none
    cb1c:	ldr	x0, [sp, #56]
    cb20:	ldp	x29, x30, [sp], #80
    cb24:	ret

000000000000cb28 <htab_find@@Base>:
    cb28:	stp	x29, x30, [sp, #-32]!
    cb2c:	mov	x29, sp
    cb30:	str	x0, [sp, #24]
    cb34:	str	x1, [sp, #16]
    cb38:	ldr	x0, [sp, #24]
    cb3c:	ldr	x1, [x0]
    cb40:	ldr	x0, [sp, #16]
    cb44:	blr	x1
    cb48:	mov	w2, w0
    cb4c:	ldr	x1, [sp, #16]
    cb50:	ldr	x0, [sp, #24]
    cb54:	bl	30b0 <htab_find_with_hash@plt>
    cb58:	ldp	x29, x30, [sp], #32
    cb5c:	ret

000000000000cb60 <htab_find_slot_with_hash@@Base>:
    cb60:	stp	x29, x30, [sp, #-96]!
    cb64:	mov	x29, sp
    cb68:	str	x0, [sp, #40]
    cb6c:	str	x1, [sp, #32]
    cb70:	str	w2, [sp, #28]
    cb74:	str	w3, [sp, #24]
    cb78:	ldr	x0, [sp, #40]
    cb7c:	ldr	x0, [x0, #32]
    cb80:	str	x0, [sp, #72]
    cb84:	ldr	w0, [sp, #24]
    cb88:	cmp	w0, #0x1
    cb8c:	b.ne	cbd8 <htab_find_slot_with_hash@@Base+0x78>  // b.any
    cb90:	ldr	x1, [sp, #72]
    cb94:	mov	x0, x1
    cb98:	lsl	x0, x0, #1
    cb9c:	add	x1, x0, x1
    cba0:	ldr	x0, [sp, #40]
    cba4:	ldr	x0, [x0, #40]
    cba8:	lsl	x0, x0, #2
    cbac:	cmp	x1, x0
    cbb0:	b.hi	cbd8 <htab_find_slot_with_hash@@Base+0x78>  // b.pmore
    cbb4:	ldr	x0, [sp, #40]
    cbb8:	bl	c790 <htab_empty@@Base+0x2f0>
    cbbc:	cmp	w0, #0x0
    cbc0:	b.ne	cbcc <htab_find_slot_with_hash@@Base+0x6c>  // b.any
    cbc4:	mov	x0, #0x0                   	// #0
    cbc8:	b	cde4 <htab_find_slot_with_hash@@Base+0x284>
    cbcc:	ldr	x0, [sp, #40]
    cbd0:	ldr	x0, [x0, #32]
    cbd4:	str	x0, [sp, #72]
    cbd8:	ldr	x1, [sp, #40]
    cbdc:	ldr	w0, [sp, #28]
    cbe0:	bl	bf08 <htab_elements@@Base+0xac>
    cbe4:	str	w0, [sp, #84]
    cbe8:	ldr	x0, [sp, #40]
    cbec:	ldr	w0, [x0, #56]
    cbf0:	add	w1, w0, #0x1
    cbf4:	ldr	x0, [sp, #40]
    cbf8:	str	w1, [x0, #56]
    cbfc:	str	xzr, [sp, #88]
    cc00:	ldr	x0, [sp, #40]
    cc04:	ldr	x1, [x0, #24]
    cc08:	ldr	w0, [sp, #84]
    cc0c:	lsl	x0, x0, #3
    cc10:	add	x0, x1, x0
    cc14:	ldr	x0, [x0]
    cc18:	str	x0, [sp, #64]
    cc1c:	ldr	x0, [sp, #64]
    cc20:	cmp	x0, #0x0
    cc24:	b.eq	cd6c <htab_find_slot_with_hash@@Base+0x20c>  // b.none
    cc28:	ldr	x0, [sp, #64]
    cc2c:	cmp	x0, #0x1
    cc30:	b.ne	cc50 <htab_find_slot_with_hash@@Base+0xf0>  // b.any
    cc34:	ldr	x0, [sp, #40]
    cc38:	ldr	x1, [x0, #24]
    cc3c:	ldr	w0, [sp, #84]
    cc40:	lsl	x0, x0, #3
    cc44:	add	x0, x1, x0
    cc48:	str	x0, [sp, #88]
    cc4c:	b	cc84 <htab_find_slot_with_hash@@Base+0x124>
    cc50:	ldr	x0, [sp, #40]
    cc54:	ldr	x2, [x0, #8]
    cc58:	ldr	x1, [sp, #32]
    cc5c:	ldr	x0, [sp, #64]
    cc60:	blr	x2
    cc64:	cmp	w0, #0x0
    cc68:	b.eq	cc84 <htab_find_slot_with_hash@@Base+0x124>  // b.none
    cc6c:	ldr	x0, [sp, #40]
    cc70:	ldr	x1, [x0, #24]
    cc74:	ldr	w0, [sp, #84]
    cc78:	lsl	x0, x0, #3
    cc7c:	add	x0, x1, x0
    cc80:	b	cde4 <htab_find_slot_with_hash@@Base+0x284>
    cc84:	ldr	x1, [sp, #40]
    cc88:	ldr	w0, [sp, #28]
    cc8c:	bl	bf64 <htab_elements@@Base+0x108>
    cc90:	str	w0, [sp, #60]
    cc94:	ldr	x0, [sp, #40]
    cc98:	ldr	w0, [x0, #60]
    cc9c:	add	w1, w0, #0x1
    cca0:	ldr	x0, [sp, #40]
    cca4:	str	w1, [x0, #60]
    cca8:	ldr	w1, [sp, #84]
    ccac:	ldr	w0, [sp, #60]
    ccb0:	add	w0, w1, w0
    ccb4:	str	w0, [sp, #84]
    ccb8:	ldr	w0, [sp, #84]
    ccbc:	ldr	x1, [sp, #72]
    ccc0:	cmp	x1, x0
    ccc4:	b.hi	ccdc <htab_find_slot_with_hash@@Base+0x17c>  // b.pmore
    ccc8:	ldr	x0, [sp, #72]
    cccc:	mov	w1, w0
    ccd0:	ldr	w0, [sp, #84]
    ccd4:	sub	w0, w0, w1
    ccd8:	str	w0, [sp, #84]
    ccdc:	ldr	x0, [sp, #40]
    cce0:	ldr	x1, [x0, #24]
    cce4:	ldr	w0, [sp, #84]
    cce8:	lsl	x0, x0, #3
    ccec:	add	x0, x1, x0
    ccf0:	ldr	x0, [x0]
    ccf4:	str	x0, [sp, #64]
    ccf8:	ldr	x0, [sp, #64]
    ccfc:	cmp	x0, #0x0
    cd00:	b.eq	cd74 <htab_find_slot_with_hash@@Base+0x214>  // b.none
    cd04:	ldr	x0, [sp, #64]
    cd08:	cmp	x0, #0x1
    cd0c:	b.ne	cd38 <htab_find_slot_with_hash@@Base+0x1d8>  // b.any
    cd10:	ldr	x0, [sp, #88]
    cd14:	cmp	x0, #0x0
    cd18:	b.ne	cc94 <htab_find_slot_with_hash@@Base+0x134>  // b.any
    cd1c:	ldr	x0, [sp, #40]
    cd20:	ldr	x1, [x0, #24]
    cd24:	ldr	w0, [sp, #84]
    cd28:	lsl	x0, x0, #3
    cd2c:	add	x0, x1, x0
    cd30:	str	x0, [sp, #88]
    cd34:	b	cc94 <htab_find_slot_with_hash@@Base+0x134>
    cd38:	ldr	x0, [sp, #40]
    cd3c:	ldr	x2, [x0, #8]
    cd40:	ldr	x1, [sp, #32]
    cd44:	ldr	x0, [sp, #64]
    cd48:	blr	x2
    cd4c:	cmp	w0, #0x0
    cd50:	b.eq	cc94 <htab_find_slot_with_hash@@Base+0x134>  // b.none
    cd54:	ldr	x0, [sp, #40]
    cd58:	ldr	x1, [x0, #24]
    cd5c:	ldr	w0, [sp, #84]
    cd60:	lsl	x0, x0, #3
    cd64:	add	x0, x1, x0
    cd68:	b	cde4 <htab_find_slot_with_hash@@Base+0x284>
    cd6c:	nop
    cd70:	b	cd78 <htab_find_slot_with_hash@@Base+0x218>
    cd74:	nop
    cd78:	ldr	w0, [sp, #24]
    cd7c:	cmp	w0, #0x0
    cd80:	b.ne	cd8c <htab_find_slot_with_hash@@Base+0x22c>  // b.any
    cd84:	mov	x0, #0x0                   	// #0
    cd88:	b	cde4 <htab_find_slot_with_hash@@Base+0x284>
    cd8c:	ldr	x0, [sp, #88]
    cd90:	cmp	x0, #0x0
    cd94:	b.eq	cdbc <htab_find_slot_with_hash@@Base+0x25c>  // b.none
    cd98:	ldr	x0, [sp, #40]
    cd9c:	ldr	x0, [x0, #48]
    cda0:	sub	x1, x0, #0x1
    cda4:	ldr	x0, [sp, #40]
    cda8:	str	x1, [x0, #48]
    cdac:	ldr	x0, [sp, #88]
    cdb0:	str	xzr, [x0]
    cdb4:	ldr	x0, [sp, #88]
    cdb8:	b	cde4 <htab_find_slot_with_hash@@Base+0x284>
    cdbc:	ldr	x0, [sp, #40]
    cdc0:	ldr	x0, [x0, #40]
    cdc4:	add	x1, x0, #0x1
    cdc8:	ldr	x0, [sp, #40]
    cdcc:	str	x1, [x0, #40]
    cdd0:	ldr	x0, [sp, #40]
    cdd4:	ldr	x1, [x0, #24]
    cdd8:	ldr	w0, [sp, #84]
    cddc:	lsl	x0, x0, #3
    cde0:	add	x0, x1, x0
    cde4:	ldp	x29, x30, [sp], #96
    cde8:	ret

000000000000cdec <htab_find_slot@@Base>:
    cdec:	stp	x29, x30, [sp, #-48]!
    cdf0:	mov	x29, sp
    cdf4:	str	x0, [sp, #40]
    cdf8:	str	x1, [sp, #32]
    cdfc:	str	w2, [sp, #28]
    ce00:	ldr	x0, [sp, #40]
    ce04:	ldr	x1, [x0]
    ce08:	ldr	x0, [sp, #32]
    ce0c:	blr	x1
    ce10:	ldr	w3, [sp, #28]
    ce14:	mov	w2, w0
    ce18:	ldr	x1, [sp, #32]
    ce1c:	ldr	x0, [sp, #40]
    ce20:	bl	2d90 <htab_find_slot_with_hash@plt>
    ce24:	ldp	x29, x30, [sp], #48
    ce28:	ret

000000000000ce2c <htab_remove_elt@@Base>:
    ce2c:	stp	x29, x30, [sp, #-32]!
    ce30:	mov	x29, sp
    ce34:	str	x0, [sp, #24]
    ce38:	str	x1, [sp, #16]
    ce3c:	ldr	x0, [sp, #24]
    ce40:	ldr	x1, [x0]
    ce44:	ldr	x0, [sp, #16]
    ce48:	blr	x1
    ce4c:	mov	w2, w0
    ce50:	ldr	x1, [sp, #16]
    ce54:	ldr	x0, [sp, #24]
    ce58:	bl	2ee0 <htab_remove_elt_with_hash@plt>
    ce5c:	nop
    ce60:	ldp	x29, x30, [sp], #32
    ce64:	ret

000000000000ce68 <htab_remove_elt_with_hash@@Base>:
    ce68:	stp	x29, x30, [sp, #-64]!
    ce6c:	mov	x29, sp
    ce70:	str	x0, [sp, #40]
    ce74:	str	x1, [sp, #32]
    ce78:	str	w2, [sp, #28]
    ce7c:	mov	w3, #0x0                   	// #0
    ce80:	ldr	w2, [sp, #28]
    ce84:	ldr	x1, [sp, #32]
    ce88:	ldr	x0, [sp, #40]
    ce8c:	bl	2d90 <htab_find_slot_with_hash@plt>
    ce90:	str	x0, [sp, #56]
    ce94:	ldr	x0, [sp, #56]
    ce98:	cmp	x0, #0x0
    ce9c:	b.eq	cee8 <htab_remove_elt_with_hash@@Base+0x80>  // b.none
    cea0:	ldr	x0, [sp, #40]
    cea4:	ldr	x0, [x0, #16]
    cea8:	cmp	x0, #0x0
    ceac:	b.eq	cec4 <htab_remove_elt_with_hash@@Base+0x5c>  // b.none
    ceb0:	ldr	x0, [sp, #40]
    ceb4:	ldr	x1, [x0, #16]
    ceb8:	ldr	x0, [sp, #56]
    cebc:	ldr	x0, [x0]
    cec0:	blr	x1
    cec4:	ldr	x0, [sp, #56]
    cec8:	mov	x1, #0x1                   	// #1
    cecc:	str	x1, [x0]
    ced0:	ldr	x0, [sp, #40]
    ced4:	ldr	x0, [x0, #48]
    ced8:	add	x1, x0, #0x1
    cedc:	ldr	x0, [sp, #40]
    cee0:	str	x1, [x0, #48]
    cee4:	b	ceec <htab_remove_elt_with_hash@@Base+0x84>
    cee8:	nop
    ceec:	ldp	x29, x30, [sp], #64
    cef0:	ret

000000000000cef4 <htab_clear_slot@@Base>:
    cef4:	stp	x29, x30, [sp, #-32]!
    cef8:	mov	x29, sp
    cefc:	str	x0, [sp, #24]
    cf00:	str	x1, [sp, #16]
    cf04:	ldr	x0, [sp, #24]
    cf08:	ldr	x0, [x0, #24]
    cf0c:	ldr	x1, [sp, #16]
    cf10:	cmp	x1, x0
    cf14:	b.cc	cf5c <htab_clear_slot@@Base+0x68>  // b.lo, b.ul, b.last
    cf18:	ldr	x0, [sp, #24]
    cf1c:	ldr	x1, [x0, #24]
    cf20:	ldr	x0, [sp, #24]
    cf24:	ldr	x0, [x0, #32]
    cf28:	lsl	x0, x0, #3
    cf2c:	add	x0, x1, x0
    cf30:	ldr	x1, [sp, #16]
    cf34:	cmp	x1, x0
    cf38:	b.cs	cf5c <htab_clear_slot@@Base+0x68>  // b.hs, b.nlast
    cf3c:	ldr	x0, [sp, #16]
    cf40:	ldr	x0, [x0]
    cf44:	cmp	x0, #0x0
    cf48:	b.eq	cf5c <htab_clear_slot@@Base+0x68>  // b.none
    cf4c:	ldr	x0, [sp, #16]
    cf50:	ldr	x0, [x0]
    cf54:	cmp	x0, #0x1
    cf58:	b.ne	cf60 <htab_clear_slot@@Base+0x6c>  // b.any
    cf5c:	bl	3050 <abort@plt>
    cf60:	ldr	x0, [sp, #24]
    cf64:	ldr	x0, [x0, #16]
    cf68:	cmp	x0, #0x0
    cf6c:	b.eq	cf84 <htab_clear_slot@@Base+0x90>  // b.none
    cf70:	ldr	x0, [sp, #24]
    cf74:	ldr	x1, [x0, #16]
    cf78:	ldr	x0, [sp, #16]
    cf7c:	ldr	x0, [x0]
    cf80:	blr	x1
    cf84:	ldr	x0, [sp, #16]
    cf88:	mov	x1, #0x1                   	// #1
    cf8c:	str	x1, [x0]
    cf90:	ldr	x0, [sp, #24]
    cf94:	ldr	x0, [x0, #48]
    cf98:	add	x1, x0, #0x1
    cf9c:	ldr	x0, [sp, #24]
    cfa0:	str	x1, [x0, #48]
    cfa4:	nop
    cfa8:	ldp	x29, x30, [sp], #32
    cfac:	ret

000000000000cfb0 <htab_traverse_noresize@@Base>:
    cfb0:	stp	x29, x30, [sp, #-80]!
    cfb4:	mov	x29, sp
    cfb8:	str	x0, [sp, #40]
    cfbc:	str	x1, [sp, #32]
    cfc0:	str	x2, [sp, #24]
    cfc4:	ldr	x0, [sp, #40]
    cfc8:	ldr	x0, [x0, #24]
    cfcc:	str	x0, [sp, #72]
    cfd0:	ldr	x0, [sp, #40]
    cfd4:	ldr	x0, [x0, #32]
    cfd8:	lsl	x0, x0, #3
    cfdc:	ldr	x1, [sp, #72]
    cfe0:	add	x0, x1, x0
    cfe4:	str	x0, [sp, #64]
    cfe8:	ldr	x0, [sp, #72]
    cfec:	ldr	x0, [x0]
    cff0:	str	x0, [sp, #56]
    cff4:	ldr	x0, [sp, #56]
    cff8:	cmp	x0, #0x0
    cffc:	b.eq	d024 <htab_traverse_noresize@@Base+0x74>  // b.none
    d000:	ldr	x0, [sp, #56]
    d004:	cmp	x0, #0x1
    d008:	b.eq	d024 <htab_traverse_noresize@@Base+0x74>  // b.none
    d00c:	ldr	x2, [sp, #32]
    d010:	ldr	x1, [sp, #24]
    d014:	ldr	x0, [sp, #72]
    d018:	blr	x2
    d01c:	cmp	w0, #0x0
    d020:	b.eq	d044 <htab_traverse_noresize@@Base+0x94>  // b.none
    d024:	ldr	x0, [sp, #72]
    d028:	add	x0, x0, #0x8
    d02c:	str	x0, [sp, #72]
    d030:	ldr	x1, [sp, #72]
    d034:	ldr	x0, [sp, #64]
    d038:	cmp	x1, x0
    d03c:	b.cc	cfe8 <htab_traverse_noresize@@Base+0x38>  // b.lo, b.ul, b.last
    d040:	b	d048 <htab_traverse_noresize@@Base+0x98>
    d044:	nop
    d048:	nop
    d04c:	ldp	x29, x30, [sp], #80
    d050:	ret

000000000000d054 <htab_traverse@@Base>:
    d054:	stp	x29, x30, [sp, #-64]!
    d058:	mov	x29, sp
    d05c:	str	x0, [sp, #40]
    d060:	str	x1, [sp, #32]
    d064:	str	x2, [sp, #24]
    d068:	ldr	x0, [sp, #40]
    d06c:	ldr	x0, [x0, #32]
    d070:	str	x0, [sp, #56]
    d074:	ldr	x0, [sp, #40]
    d078:	ldr	x1, [x0, #40]
    d07c:	ldr	x0, [sp, #40]
    d080:	ldr	x0, [x0, #48]
    d084:	sub	x0, x1, x0
    d088:	lsl	x0, x0, #3
    d08c:	ldr	x1, [sp, #56]
    d090:	cmp	x1, x0
    d094:	b.ls	d0ac <htab_traverse@@Base+0x58>  // b.plast
    d098:	ldr	x0, [sp, #56]
    d09c:	cmp	x0, #0x20
    d0a0:	b.ls	d0ac <htab_traverse@@Base+0x58>  // b.plast
    d0a4:	ldr	x0, [sp, #40]
    d0a8:	bl	c790 <htab_empty@@Base+0x2f0>
    d0ac:	ldr	x2, [sp, #24]
    d0b0:	ldr	x1, [sp, #32]
    d0b4:	ldr	x0, [sp, #40]
    d0b8:	bl	2f70 <htab_traverse_noresize@plt>
    d0bc:	nop
    d0c0:	ldp	x29, x30, [sp], #64
    d0c4:	ret

000000000000d0c8 <htab_collisions@@Base>:
    d0c8:	sub	sp, sp, #0x10
    d0cc:	str	x0, [sp, #8]
    d0d0:	ldr	x0, [sp, #8]
    d0d4:	ldr	w0, [x0, #56]
    d0d8:	cmp	w0, #0x0
    d0dc:	b.ne	d0e8 <htab_collisions@@Base+0x20>  // b.any
    d0e0:	movi	d0, #0x0
    d0e4:	b	d104 <htab_collisions@@Base+0x3c>
    d0e8:	ldr	x0, [sp, #8]
    d0ec:	ldr	w0, [x0, #60]
    d0f0:	ucvtf	d1, w0
    d0f4:	ldr	x0, [sp, #8]
    d0f8:	ldr	w0, [x0, #56]
    d0fc:	ucvtf	d0, w0
    d100:	fdiv	d0, d1, d0
    d104:	add	sp, sp, #0x10
    d108:	ret

000000000000d10c <htab_hash_string@@Base>:
    d10c:	sub	sp, sp, #0x20
    d110:	str	x0, [sp, #8]
    d114:	ldr	x0, [sp, #8]
    d118:	str	x0, [sp, #24]
    d11c:	str	wzr, [sp, #20]
    d120:	b	d140 <htab_hash_string@@Base+0x34>
    d124:	ldr	w1, [sp, #20]
    d128:	mov	w0, #0x43                  	// #67
    d12c:	mul	w1, w1, w0
    d130:	ldrb	w0, [sp, #19]
    d134:	add	w0, w1, w0
    d138:	sub	w0, w0, #0x71
    d13c:	str	w0, [sp, #20]
    d140:	ldr	x0, [sp, #24]
    d144:	add	x1, x0, #0x1
    d148:	str	x1, [sp, #24]
    d14c:	ldrb	w0, [x0]
    d150:	strb	w0, [sp, #19]
    d154:	ldrb	w0, [sp, #19]
    d158:	cmp	w0, #0x0
    d15c:	b.ne	d124 <htab_hash_string@@Base+0x18>  // b.any
    d160:	ldr	w0, [sp, #20]
    d164:	add	sp, sp, #0x20
    d168:	ret

000000000000d16c <iterative_hash@@Base>:
    d16c:	stp	x19, x20, [sp, #-64]!
    d170:	stp	x21, x22, [sp, #16]
    d174:	str	x23, [sp, #32]
    d178:	str	x0, [sp, #56]
    d17c:	mov	x3, x1
    d180:	mov	w0, w2
    d184:	ldr	x22, [sp, #56]
    d188:	mov	w23, w3
    d18c:	mov	w19, #0x79b9                	// #31161
    d190:	movk	w19, #0x9e37, lsl #16
    d194:	mov	w21, w19
    d198:	mov	w20, w0
    d19c:	mov	x0, x22
    d1a0:	and	x0, x0, #0x3
    d1a4:	cmp	x0, #0x0
    d1a8:	b.ne	d3c8 <iterative_hash@@Base+0x25c>  // b.any
    d1ac:	b	d268 <iterative_hash@@Base+0xfc>
    d1b0:	ldr	w0, [x22]
    d1b4:	add	w21, w21, w0
    d1b8:	add	x0, x22, #0x4
    d1bc:	ldr	w0, [x0]
    d1c0:	add	w19, w19, w0
    d1c4:	add	x0, x22, #0x8
    d1c8:	ldr	w0, [x0]
    d1cc:	add	w20, w20, w0
    d1d0:	sub	w21, w21, w19
    d1d4:	sub	w21, w21, w20
    d1d8:	lsr	w0, w20, #13
    d1dc:	eor	w21, w21, w0
    d1e0:	sub	w19, w19, w20
    d1e4:	sub	w19, w19, w21
    d1e8:	lsl	w0, w21, #8
    d1ec:	eor	w19, w19, w0
    d1f0:	sub	w20, w20, w21
    d1f4:	sub	w20, w20, w19
    d1f8:	lsr	w0, w19, #13
    d1fc:	eor	w20, w20, w0
    d200:	sub	w21, w21, w19
    d204:	sub	w21, w21, w20
    d208:	lsr	w0, w20, #12
    d20c:	eor	w21, w21, w0
    d210:	sub	w19, w19, w20
    d214:	sub	w19, w19, w21
    d218:	lsl	w0, w21, #16
    d21c:	eor	w19, w19, w0
    d220:	sub	w20, w20, w21
    d224:	sub	w20, w20, w19
    d228:	lsr	w0, w19, #5
    d22c:	eor	w20, w20, w0
    d230:	sub	w21, w21, w19
    d234:	sub	w21, w21, w20
    d238:	lsr	w0, w20, #3
    d23c:	eor	w21, w21, w0
    d240:	sub	w19, w19, w20
    d244:	sub	w19, w19, w21
    d248:	lsl	w0, w21, #10
    d24c:	eor	w19, w19, w0
    d250:	sub	w20, w20, w21
    d254:	sub	w20, w20, w19
    d258:	lsr	w0, w19, #15
    d25c:	eor	w20, w20, w0
    d260:	add	x22, x22, #0xc
    d264:	sub	w23, w23, #0xc
    d268:	cmp	w23, #0xb
    d26c:	b.hi	d1b0 <iterative_hash@@Base+0x44>  // b.pmore
    d270:	b	d3d0 <iterative_hash@@Base+0x264>
    d274:	ldrb	w0, [x22]
    d278:	mov	w1, w0
    d27c:	add	x0, x22, #0x1
    d280:	ldrb	w0, [x0]
    d284:	lsl	w0, w0, #8
    d288:	add	w1, w1, w0
    d28c:	add	x0, x22, #0x2
    d290:	ldrb	w0, [x0]
    d294:	lsl	w0, w0, #16
    d298:	add	w1, w1, w0
    d29c:	add	x0, x22, #0x3
    d2a0:	ldrb	w0, [x0]
    d2a4:	lsl	w0, w0, #24
    d2a8:	add	w0, w1, w0
    d2ac:	add	w21, w21, w0
    d2b0:	add	x0, x22, #0x4
    d2b4:	ldrb	w0, [x0]
    d2b8:	mov	w1, w0
    d2bc:	add	x0, x22, #0x5
    d2c0:	ldrb	w0, [x0]
    d2c4:	lsl	w0, w0, #8
    d2c8:	add	w1, w1, w0
    d2cc:	add	x0, x22, #0x6
    d2d0:	ldrb	w0, [x0]
    d2d4:	lsl	w0, w0, #16
    d2d8:	add	w1, w1, w0
    d2dc:	add	x0, x22, #0x7
    d2e0:	ldrb	w0, [x0]
    d2e4:	lsl	w0, w0, #24
    d2e8:	add	w0, w1, w0
    d2ec:	add	w19, w19, w0
    d2f0:	add	x0, x22, #0x8
    d2f4:	ldrb	w0, [x0]
    d2f8:	mov	w1, w0
    d2fc:	add	x0, x22, #0x9
    d300:	ldrb	w0, [x0]
    d304:	lsl	w0, w0, #8
    d308:	add	w1, w1, w0
    d30c:	add	x0, x22, #0xa
    d310:	ldrb	w0, [x0]
    d314:	lsl	w0, w0, #16
    d318:	add	w1, w1, w0
    d31c:	add	x0, x22, #0xb
    d320:	ldrb	w0, [x0]
    d324:	lsl	w0, w0, #24
    d328:	add	w0, w1, w0
    d32c:	add	w20, w20, w0
    d330:	sub	w21, w21, w19
    d334:	sub	w21, w21, w20
    d338:	lsr	w0, w20, #13
    d33c:	eor	w21, w21, w0
    d340:	sub	w19, w19, w20
    d344:	sub	w19, w19, w21
    d348:	lsl	w0, w21, #8
    d34c:	eor	w19, w19, w0
    d350:	sub	w20, w20, w21
    d354:	sub	w20, w20, w19
    d358:	lsr	w0, w19, #13
    d35c:	eor	w20, w20, w0
    d360:	sub	w21, w21, w19
    d364:	sub	w21, w21, w20
    d368:	lsr	w0, w20, #12
    d36c:	eor	w21, w21, w0
    d370:	sub	w19, w19, w20
    d374:	sub	w19, w19, w21
    d378:	lsl	w0, w21, #16
    d37c:	eor	w19, w19, w0
    d380:	sub	w20, w20, w21
    d384:	sub	w20, w20, w19
    d388:	lsr	w0, w19, #5
    d38c:	eor	w20, w20, w0
    d390:	sub	w21, w21, w19
    d394:	sub	w21, w21, w20
    d398:	lsr	w0, w20, #3
    d39c:	eor	w21, w21, w0
    d3a0:	sub	w19, w19, w20
    d3a4:	sub	w19, w19, w21
    d3a8:	lsl	w0, w21, #10
    d3ac:	eor	w19, w19, w0
    d3b0:	sub	w20, w20, w21
    d3b4:	sub	w20, w20, w19
    d3b8:	lsr	w0, w19, #15
    d3bc:	eor	w20, w20, w0
    d3c0:	add	x22, x22, #0xc
    d3c4:	sub	w23, w23, #0xc
    d3c8:	cmp	w23, #0xb
    d3cc:	b.hi	d274 <iterative_hash@@Base+0x108>  // b.pmore
    d3d0:	mov	w0, w3
    d3d4:	add	w20, w20, w0
    d3d8:	cmp	w23, #0xb
    d3dc:	b.eq	d47c <iterative_hash@@Base+0x310>  // b.none
    d3e0:	cmp	w23, #0xb
    d3e4:	b.hi	d520 <iterative_hash@@Base+0x3b4>  // b.pmore
    d3e8:	cmp	w23, #0xa
    d3ec:	b.eq	d48c <iterative_hash@@Base+0x320>  // b.none
    d3f0:	cmp	w23, #0xa
    d3f4:	b.hi	d520 <iterative_hash@@Base+0x3b4>  // b.pmore
    d3f8:	cmp	w23, #0x9
    d3fc:	b.eq	d49c <iterative_hash@@Base+0x330>  // b.none
    d400:	cmp	w23, #0x9
    d404:	b.hi	d520 <iterative_hash@@Base+0x3b4>  // b.pmore
    d408:	cmp	w23, #0x8
    d40c:	b.eq	d4ac <iterative_hash@@Base+0x340>  // b.none
    d410:	cmp	w23, #0x8
    d414:	b.hi	d520 <iterative_hash@@Base+0x3b4>  // b.pmore
    d418:	cmp	w23, #0x7
    d41c:	b.eq	d4bc <iterative_hash@@Base+0x350>  // b.none
    d420:	cmp	w23, #0x7
    d424:	b.hi	d520 <iterative_hash@@Base+0x3b4>  // b.pmore
    d428:	cmp	w23, #0x6
    d42c:	b.eq	d4cc <iterative_hash@@Base+0x360>  // b.none
    d430:	cmp	w23, #0x6
    d434:	b.hi	d520 <iterative_hash@@Base+0x3b4>  // b.pmore
    d438:	cmp	w23, #0x5
    d43c:	b.eq	d4dc <iterative_hash@@Base+0x370>  // b.none
    d440:	cmp	w23, #0x5
    d444:	b.hi	d520 <iterative_hash@@Base+0x3b4>  // b.pmore
    d448:	cmp	w23, #0x4
    d44c:	b.eq	d4e8 <iterative_hash@@Base+0x37c>  // b.none
    d450:	cmp	w23, #0x4
    d454:	b.hi	d520 <iterative_hash@@Base+0x3b4>  // b.pmore
    d458:	cmp	w23, #0x3
    d45c:	b.eq	d4f8 <iterative_hash@@Base+0x38c>  // b.none
    d460:	cmp	w23, #0x3
    d464:	b.hi	d520 <iterative_hash@@Base+0x3b4>  // b.pmore
    d468:	cmp	w23, #0x1
    d46c:	b.eq	d518 <iterative_hash@@Base+0x3ac>  // b.none
    d470:	cmp	w23, #0x2
    d474:	b.eq	d508 <iterative_hash@@Base+0x39c>  // b.none
    d478:	b	d520 <iterative_hash@@Base+0x3b4>
    d47c:	add	x0, x22, #0xa
    d480:	ldrb	w0, [x0]
    d484:	lsl	w0, w0, #24
    d488:	add	w20, w20, w0
    d48c:	add	x0, x22, #0x9
    d490:	ldrb	w0, [x0]
    d494:	lsl	w0, w0, #16
    d498:	add	w20, w20, w0
    d49c:	add	x0, x22, #0x8
    d4a0:	ldrb	w0, [x0]
    d4a4:	lsl	w0, w0, #8
    d4a8:	add	w20, w20, w0
    d4ac:	add	x0, x22, #0x7
    d4b0:	ldrb	w0, [x0]
    d4b4:	lsl	w0, w0, #24
    d4b8:	add	w19, w19, w0
    d4bc:	add	x0, x22, #0x6
    d4c0:	ldrb	w0, [x0]
    d4c4:	lsl	w0, w0, #16
    d4c8:	add	w19, w19, w0
    d4cc:	add	x0, x22, #0x5
    d4d0:	ldrb	w0, [x0]
    d4d4:	lsl	w0, w0, #8
    d4d8:	add	w19, w19, w0
    d4dc:	add	x0, x22, #0x4
    d4e0:	ldrb	w0, [x0]
    d4e4:	add	w19, w19, w0
    d4e8:	add	x0, x22, #0x3
    d4ec:	ldrb	w0, [x0]
    d4f0:	lsl	w0, w0, #24
    d4f4:	add	w21, w21, w0
    d4f8:	add	x0, x22, #0x2
    d4fc:	ldrb	w0, [x0]
    d500:	lsl	w0, w0, #16
    d504:	add	w21, w21, w0
    d508:	add	x0, x22, #0x1
    d50c:	ldrb	w0, [x0]
    d510:	lsl	w0, w0, #8
    d514:	add	w21, w21, w0
    d518:	ldrb	w0, [x22]
    d51c:	add	w21, w21, w0
    d520:	sub	w21, w21, w19
    d524:	sub	w21, w21, w20
    d528:	lsr	w0, w20, #13
    d52c:	eor	w21, w21, w0
    d530:	sub	w19, w19, w20
    d534:	sub	w19, w19, w21
    d538:	lsl	w0, w21, #8
    d53c:	eor	w19, w19, w0
    d540:	sub	w20, w20, w21
    d544:	sub	w20, w20, w19
    d548:	lsr	w0, w19, #13
    d54c:	eor	w20, w20, w0
    d550:	sub	w21, w21, w19
    d554:	sub	w21, w21, w20
    d558:	lsr	w0, w20, #12
    d55c:	eor	w21, w21, w0
    d560:	sub	w19, w19, w20
    d564:	sub	w19, w19, w21
    d568:	lsl	w0, w21, #16
    d56c:	eor	w19, w19, w0
    d570:	sub	w20, w20, w21
    d574:	sub	w20, w20, w19
    d578:	lsr	w0, w19, #5
    d57c:	eor	w20, w20, w0
    d580:	sub	w21, w21, w19
    d584:	sub	w21, w21, w20
    d588:	lsr	w0, w20, #3
    d58c:	eor	w21, w21, w0
    d590:	sub	w19, w19, w20
    d594:	sub	w19, w19, w21
    d598:	lsl	w0, w21, #10
    d59c:	eor	w19, w19, w0
    d5a0:	sub	w20, w20, w21
    d5a4:	sub	w20, w20, w19
    d5a8:	lsr	w0, w19, #15
    d5ac:	eor	w20, w20, w0
    d5b0:	mov	w0, w20
    d5b4:	ldp	x21, x22, [sp, #16]
    d5b8:	ldr	x23, [sp, #32]
    d5bc:	ldp	x19, x20, [sp], #64
    d5c0:	ret
    d5c4:	sub	sp, sp, #0x30
    d5c8:	str	x0, [sp, #8]
    d5cc:	ldr	x0, [sp, #8]
    d5d0:	str	x0, [sp, #40]
    d5d4:	mov	w0, #0x79b9                	// #31161
    d5d8:	movk	w0, #0x9e37, lsl #16
    d5dc:	str	w0, [sp, #36]
    d5e0:	ldr	w0, [sp, #36]
    d5e4:	str	w0, [sp, #32]
    d5e8:	ldr	x0, [sp, #40]
    d5ec:	asr	x0, x0, #32
    d5f0:	mov	w1, w0
    d5f4:	ldr	w0, [sp, #32]
    d5f8:	add	w0, w0, w1
    d5fc:	str	w0, [sp, #32]
    d600:	ldr	x0, [sp, #40]
    d604:	mov	w1, w0
    d608:	ldr	w0, [sp, #36]
    d60c:	add	w0, w0, w1
    d610:	str	w0, [sp, #36]
    d614:	mov	w0, #0x5234                	// #21044
    d618:	movk	w0, #0x4213, lsl #16
    d61c:	str	w0, [sp, #28]
    d620:	ldr	w1, [sp, #32]
    d624:	ldr	w0, [sp, #36]
    d628:	sub	w0, w1, w0
    d62c:	str	w0, [sp, #32]
    d630:	ldr	w1, [sp, #32]
    d634:	ldr	w0, [sp, #28]
    d638:	sub	w0, w1, w0
    d63c:	str	w0, [sp, #32]
    d640:	ldr	w0, [sp, #28]
    d644:	lsr	w0, w0, #13
    d648:	ldr	w1, [sp, #32]
    d64c:	eor	w0, w1, w0
    d650:	str	w0, [sp, #32]
    d654:	ldr	w1, [sp, #36]
    d658:	ldr	w0, [sp, #28]
    d65c:	sub	w0, w1, w0
    d660:	str	w0, [sp, #36]
    d664:	ldr	w1, [sp, #36]
    d668:	ldr	w0, [sp, #32]
    d66c:	sub	w0, w1, w0
    d670:	str	w0, [sp, #36]
    d674:	ldr	w0, [sp, #32]
    d678:	lsl	w0, w0, #8
    d67c:	ldr	w1, [sp, #36]
    d680:	eor	w0, w1, w0
    d684:	str	w0, [sp, #36]
    d688:	ldr	w1, [sp, #28]
    d68c:	ldr	w0, [sp, #32]
    d690:	sub	w0, w1, w0
    d694:	str	w0, [sp, #28]
    d698:	ldr	w1, [sp, #28]
    d69c:	ldr	w0, [sp, #36]
    d6a0:	sub	w0, w1, w0
    d6a4:	str	w0, [sp, #28]
    d6a8:	ldr	w0, [sp, #36]
    d6ac:	lsr	w0, w0, #13
    d6b0:	ldr	w1, [sp, #28]
    d6b4:	eor	w0, w1, w0
    d6b8:	str	w0, [sp, #28]
    d6bc:	ldr	w1, [sp, #32]
    d6c0:	ldr	w0, [sp, #36]
    d6c4:	sub	w0, w1, w0
    d6c8:	str	w0, [sp, #32]
    d6cc:	ldr	w1, [sp, #32]
    d6d0:	ldr	w0, [sp, #28]
    d6d4:	sub	w0, w1, w0
    d6d8:	str	w0, [sp, #32]
    d6dc:	ldr	w0, [sp, #28]
    d6e0:	lsr	w0, w0, #12
    d6e4:	ldr	w1, [sp, #32]
    d6e8:	eor	w0, w1, w0
    d6ec:	str	w0, [sp, #32]
    d6f0:	ldr	w1, [sp, #36]
    d6f4:	ldr	w0, [sp, #28]
    d6f8:	sub	w0, w1, w0
    d6fc:	str	w0, [sp, #36]
    d700:	ldr	w1, [sp, #36]
    d704:	ldr	w0, [sp, #32]
    d708:	sub	w0, w1, w0
    d70c:	str	w0, [sp, #36]
    d710:	ldr	w0, [sp, #32]
    d714:	lsl	w0, w0, #16
    d718:	ldr	w1, [sp, #36]
    d71c:	eor	w0, w1, w0
    d720:	str	w0, [sp, #36]
    d724:	ldr	w1, [sp, #28]
    d728:	ldr	w0, [sp, #32]
    d72c:	sub	w0, w1, w0
    d730:	str	w0, [sp, #28]
    d734:	ldr	w1, [sp, #28]
    d738:	ldr	w0, [sp, #36]
    d73c:	sub	w0, w1, w0
    d740:	str	w0, [sp, #28]
    d744:	ldr	w0, [sp, #36]
    d748:	lsr	w0, w0, #5
    d74c:	ldr	w1, [sp, #28]
    d750:	eor	w0, w1, w0
    d754:	str	w0, [sp, #28]
    d758:	ldr	w1, [sp, #32]
    d75c:	ldr	w0, [sp, #36]
    d760:	sub	w0, w1, w0
    d764:	str	w0, [sp, #32]
    d768:	ldr	w1, [sp, #32]
    d76c:	ldr	w0, [sp, #28]
    d770:	sub	w0, w1, w0
    d774:	str	w0, [sp, #32]
    d778:	ldr	w0, [sp, #28]
    d77c:	lsr	w0, w0, #3
    d780:	ldr	w1, [sp, #32]
    d784:	eor	w0, w1, w0
    d788:	str	w0, [sp, #32]
    d78c:	ldr	w1, [sp, #36]
    d790:	ldr	w0, [sp, #28]
    d794:	sub	w0, w1, w0
    d798:	str	w0, [sp, #36]
    d79c:	ldr	w1, [sp, #36]
    d7a0:	ldr	w0, [sp, #32]
    d7a4:	sub	w0, w1, w0
    d7a8:	str	w0, [sp, #36]
    d7ac:	ldr	w0, [sp, #32]
    d7b0:	lsl	w0, w0, #10
    d7b4:	ldr	w1, [sp, #36]
    d7b8:	eor	w0, w1, w0
    d7bc:	str	w0, [sp, #36]
    d7c0:	ldr	w1, [sp, #28]
    d7c4:	ldr	w0, [sp, #32]
    d7c8:	sub	w0, w1, w0
    d7cc:	str	w0, [sp, #28]
    d7d0:	ldr	w1, [sp, #28]
    d7d4:	ldr	w0, [sp, #36]
    d7d8:	sub	w0, w1, w0
    d7dc:	str	w0, [sp, #28]
    d7e0:	ldr	w0, [sp, #36]
    d7e4:	lsr	w0, w0, #15
    d7e8:	ldr	w1, [sp, #28]
    d7ec:	eor	w0, w1, w0
    d7f0:	str	w0, [sp, #28]
    d7f4:	ldr	w0, [sp, #28]
    d7f8:	add	sp, sp, #0x30
    d7fc:	ret

000000000000d800 <xmalloc_set_program_name@@Base>:
    d800:	stp	x29, x30, [sp, #-32]!
    d804:	mov	x29, sp
    d808:	str	x0, [sp, #24]
    d80c:	adrp	x0, 22000 <xexit@@Base+0x14570>
    d810:	add	x0, x0, #0x318
    d814:	ldr	x1, [sp, #24]
    d818:	str	x1, [x0]
    d81c:	adrp	x0, 22000 <xexit@@Base+0x14570>
    d820:	add	x0, x0, #0x338
    d824:	ldr	x0, [x0]
    d828:	cmp	x0, #0x0
    d82c:	b.ne	d848 <xmalloc_set_program_name@@Base+0x48>  // b.any
    d830:	mov	x0, #0x0                   	// #0
    d834:	bl	2ed0 <sbrk@plt>
    d838:	mov	x1, x0
    d83c:	adrp	x0, 22000 <xexit@@Base+0x14570>
    d840:	add	x0, x0, #0x338
    d844:	str	x1, [x0]
    d848:	nop
    d84c:	ldp	x29, x30, [sp], #32
    d850:	ret

000000000000d854 <xmalloc_failed@@Base>:
    d854:	stp	x29, x30, [sp, #-48]!
    d858:	mov	x29, sp
    d85c:	str	x0, [sp, #24]
    d860:	adrp	x0, 22000 <xexit@@Base+0x14570>
    d864:	add	x0, x0, #0x338
    d868:	ldr	x0, [x0]
    d86c:	cmp	x0, #0x0
    d870:	b.eq	d898 <xmalloc_failed@@Base+0x44>  // b.none
    d874:	mov	x0, #0x0                   	// #0
    d878:	bl	2ed0 <sbrk@plt>
    d87c:	mov	x1, x0
    d880:	adrp	x0, 22000 <xexit@@Base+0x14570>
    d884:	add	x0, x0, #0x338
    d888:	ldr	x0, [x0]
    d88c:	sub	x0, x1, x0
    d890:	str	x0, [sp, #40]
    d894:	b	d8b4 <xmalloc_failed@@Base+0x60>
    d898:	mov	x0, #0x0                   	// #0
    d89c:	bl	2ed0 <sbrk@plt>
    d8a0:	mov	x1, x0
    d8a4:	adrp	x0, 21000 <xexit@@Base+0x13570>
    d8a8:	ldr	x0, [x0, #4056]
    d8ac:	sub	x0, x1, x0
    d8b0:	str	x0, [sp, #40]
    d8b4:	adrp	x0, 21000 <xexit@@Base+0x13570>
    d8b8:	ldr	x0, [x0, #4040]
    d8bc:	ldr	x6, [x0]
    d8c0:	adrp	x0, 22000 <xexit@@Base+0x14570>
    d8c4:	add	x0, x0, #0x318
    d8c8:	ldr	x1, [x0]
    d8cc:	adrp	x0, 22000 <xexit@@Base+0x14570>
    d8d0:	add	x0, x0, #0x318
    d8d4:	ldr	x0, [x0]
    d8d8:	ldrb	w0, [x0]
    d8dc:	cmp	w0, #0x0
    d8e0:	b.eq	d8f0 <xmalloc_failed@@Base+0x9c>  // b.none
    d8e4:	adrp	x0, e000 <xexit@@Base+0x570>
    d8e8:	add	x0, x0, #0x1f0
    d8ec:	b	d8f8 <xmalloc_failed@@Base+0xa4>
    d8f0:	adrp	x0, e000 <xexit@@Base+0x570>
    d8f4:	add	x0, x0, #0x1e8
    d8f8:	ldr	x5, [sp, #40]
    d8fc:	ldr	x4, [sp, #24]
    d900:	mov	x3, x0
    d904:	mov	x2, x1
    d908:	adrp	x0, e000 <xexit@@Base+0x570>
    d90c:	add	x1, x0, #0x1f8
    d910:	mov	x0, x6
    d914:	bl	2c90 <fprintf@plt>
    d918:	mov	w0, #0x1                   	// #1
    d91c:	bl	3040 <xexit@plt>

000000000000d920 <xmalloc@@Base>:
    d920:	stp	x29, x30, [sp, #-48]!
    d924:	mov	x29, sp
    d928:	str	x0, [sp, #24]
    d92c:	ldr	x0, [sp, #24]
    d930:	cmp	x0, #0x0
    d934:	b.ne	d940 <xmalloc@@Base+0x20>  // b.any
    d938:	mov	x0, #0x1                   	// #1
    d93c:	str	x0, [sp, #24]
    d940:	ldr	x0, [sp, #24]
    d944:	bl	3030 <malloc@plt>
    d948:	str	x0, [sp, #40]
    d94c:	ldr	x0, [sp, #40]
    d950:	cmp	x0, #0x0
    d954:	b.ne	d960 <xmalloc@@Base+0x40>  // b.any
    d958:	ldr	x0, [sp, #24]
    d95c:	bl	2e20 <xmalloc_failed@plt>
    d960:	ldr	x0, [sp, #40]
    d964:	ldp	x29, x30, [sp], #48
    d968:	ret

000000000000d96c <xcalloc@@Base>:
    d96c:	stp	x29, x30, [sp, #-48]!
    d970:	mov	x29, sp
    d974:	str	x0, [sp, #24]
    d978:	str	x1, [sp, #16]
    d97c:	ldr	x0, [sp, #24]
    d980:	cmp	x0, #0x0
    d984:	b.eq	d994 <xcalloc@@Base+0x28>  // b.none
    d988:	ldr	x0, [sp, #16]
    d98c:	cmp	x0, #0x0
    d990:	b.ne	d9a4 <xcalloc@@Base+0x38>  // b.any
    d994:	mov	x0, #0x1                   	// #1
    d998:	str	x0, [sp, #16]
    d99c:	ldr	x0, [sp, #16]
    d9a0:	str	x0, [sp, #24]
    d9a4:	ldr	x1, [sp, #16]
    d9a8:	ldr	x0, [sp, #24]
    d9ac:	bl	2c70 <calloc@plt>
    d9b0:	str	x0, [sp, #40]
    d9b4:	ldr	x0, [sp, #40]
    d9b8:	cmp	x0, #0x0
    d9bc:	b.ne	d9d0 <xcalloc@@Base+0x64>  // b.any
    d9c0:	ldr	x1, [sp, #24]
    d9c4:	ldr	x0, [sp, #16]
    d9c8:	mul	x0, x1, x0
    d9cc:	bl	2e20 <xmalloc_failed@plt>
    d9d0:	ldr	x0, [sp, #40]
    d9d4:	ldp	x29, x30, [sp], #48
    d9d8:	ret

000000000000d9dc <xrealloc@@Base>:
    d9dc:	stp	x29, x30, [sp, #-48]!
    d9e0:	mov	x29, sp
    d9e4:	str	x0, [sp, #24]
    d9e8:	str	x1, [sp, #16]
    d9ec:	ldr	x0, [sp, #16]
    d9f0:	cmp	x0, #0x0
    d9f4:	b.ne	da00 <xrealloc@@Base+0x24>  // b.any
    d9f8:	mov	x0, #0x1                   	// #1
    d9fc:	str	x0, [sp, #16]
    da00:	ldr	x0, [sp, #24]
    da04:	cmp	x0, #0x0
    da08:	b.ne	da1c <xrealloc@@Base+0x40>  // b.any
    da0c:	ldr	x0, [sp, #16]
    da10:	bl	3030 <malloc@plt>
    da14:	str	x0, [sp, #40]
    da18:	b	da2c <xrealloc@@Base+0x50>
    da1c:	ldr	x1, [sp, #16]
    da20:	ldr	x0, [sp, #24]
    da24:	bl	2d80 <realloc@plt>
    da28:	str	x0, [sp, #40]
    da2c:	ldr	x0, [sp, #40]
    da30:	cmp	x0, #0x0
    da34:	b.ne	da40 <xrealloc@@Base+0x64>  // b.any
    da38:	ldr	x0, [sp, #16]
    da3c:	bl	2e20 <xmalloc_failed@plt>
    da40:	ldr	x0, [sp, #40]
    da44:	ldp	x29, x30, [sp], #48
    da48:	ret

000000000000da4c <xstrdup@@Base>:
    da4c:	stp	x29, x30, [sp, #-48]!
    da50:	mov	x29, sp
    da54:	stp	x19, x20, [sp, #16]
    da58:	str	x0, [sp, #40]
    da5c:	ldr	x0, [sp, #40]
    da60:	bl	2c80 <strlen@plt>
    da64:	add	x19, x0, #0x1
    da68:	mov	x0, x19
    da6c:	bl	2f90 <xmalloc@plt>
    da70:	mov	x20, x0
    da74:	mov	x2, x19
    da78:	ldr	x1, [sp, #40]
    da7c:	mov	x0, x20
    da80:	bl	2c00 <memcpy@plt>
    da84:	ldp	x19, x20, [sp, #16]
    da88:	ldp	x29, x30, [sp], #48
    da8c:	ret

000000000000da90 <xexit@@Base>:
    da90:	stp	x29, x30, [sp, #-32]!
    da94:	mov	x29, sp
    da98:	str	w0, [sp, #28]
    da9c:	adrp	x0, 21000 <xexit@@Base+0x13570>
    daa0:	ldr	x0, [x0, #3904]
    daa4:	ldr	x0, [x0]
    daa8:	cmp	x0, #0x0
    daac:	b.eq	dac0 <xexit@@Base+0x30>  // b.none
    dab0:	adrp	x0, 21000 <xexit@@Base+0x13570>
    dab4:	ldr	x0, [x0, #3904]
    dab8:	ldr	x0, [x0]
    dabc:	blr	x0
    dac0:	ldr	w0, [sp, #28]
    dac4:	bl	30d0 <exit@plt>

Disassembly of section .fini:

000000000000dac8 <.fini>:
    dac8:	stp	x29, x30, [sp, #-16]!
    dacc:	mov	x29, sp
    dad0:	ldp	x29, x30, [sp], #16
    dad4:	ret
