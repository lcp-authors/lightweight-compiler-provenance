
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//minix2_be.module_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_minix_close>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0, #80]
   c:	bl	0 <grub_free>
  10:	mov	w0, #0x0                   	// #0
  14:	ldp	x29, x30, [sp], #16
  18:	ret

000000000000001c <grub_minix_read_inode>:
  1c:	stp	x29, x30, [sp, #-16]!
  20:	mov	x29, sp
  24:	and	w1, w1, #0xffff
  28:	strh	w1, [x0, #88]
  2c:	sub	w2, w1, #0x1
  30:	ldrh	w5, [x0, #4]
  34:	ldrh	w3, [x0, #6]
  38:	ldrh	w4, [x0, #10]
  3c:	lsr	w1, w5, #8
  40:	orr	w5, w1, w5, lsl #8
  44:	and	w5, w5, #0xffff
  48:	add	w1, w5, #0x2
  4c:	lsr	w5, w3, #8
  50:	orr	w5, w5, w3, lsl #8
  54:	add	w5, w1, w5, uxth
  58:	lsr	w1, w4, #8
  5c:	orr	w1, w1, w4, lsl #8
  60:	and	w1, w1, #0xffff
  64:	add	w1, w1, #0x1
  68:	lsl	x5, x5, x1
  6c:	ubfx	x1, x2, #3, #13
  70:	add	x4, x0, #0x14
  74:	mov	x3, #0x40                  	// #64
  78:	ubfiz	x2, x2, #6, #3
  7c:	add	x1, x5, x1
  80:	ldr	x0, [x0, #96]
  84:	bl	0 <grub_disk_read>
  88:	mov	w0, #0x0                   	// #0
  8c:	ldp	x29, x30, [sp], #16
  90:	ret

0000000000000094 <grub_get_indir>:
  94:	stp	x29, x30, [sp, #-32]!
  98:	mov	x29, sp
  9c:	ldrh	w3, [x0, #10]
  a0:	mov	w1, w1
  a4:	lsr	w5, w3, #8
  a8:	orr	w5, w5, w3, lsl #8
  ac:	and	w5, w5, #0xffff
  b0:	add	w5, w5, #0x1
  b4:	add	x4, sp, #0x1c
  b8:	mov	x3, #0x4                   	// #4
  bc:	ubfiz	x2, x2, #2, #32
  c0:	lsl	x1, x1, x5
  c4:	ldr	x0, [x0, #96]
  c8:	bl	0 <grub_disk_read>
  cc:	ldr	w0, [sp, #28]
  d0:	rev	w0, w0
  d4:	ldp	x29, x30, [sp], #32
  d8:	ret

00000000000000dc <grub_minix_read_file>:
  dc:	stp	x29, x30, [sp, #-128]!
  e0:	mov	x29, sp
  e4:	stp	x19, x20, [sp, #16]
  e8:	mov	x19, x0
  ec:	str	x4, [sp, #104]
  f0:	ldr	w0, [x0, #28]
  f4:	rev	w0, w0
  f8:	cmp	x0, x3
  fc:	b.cc	194 <grub_minix_read_file+0xb8>  // b.lo, b.ul, b.last
 100:	stp	x21, x22, [sp, #32]
 104:	stp	x27, x28, [sp, #80]
 108:	mov	x27, x1
 10c:	mov	x28, x2
 110:	mov	x22, x5
 114:	ldr	x4, [sp, #104]
 118:	add	x2, x3, x4
 11c:	sub	x1, x0, x3
 120:	cmp	x0, x2
 124:	csel	x0, x1, x4, cc  // cc = lo, ul, last
 128:	mov	x1, x0
 12c:	str	x0, [sp, #104]
 130:	mov	x0, #0x0                   	// #0
 134:	cbz	x1, 3b4 <grub_minix_read_file+0x2d8>
 138:	stp	x25, x26, [sp, #64]
 13c:	add	x1, x1, x3
 140:	ldr	x0, [x19, #112]
 144:	sub	x26, x1, #0x1
 148:	ubfx	x26, x26, #9, #32
 14c:	udiv	x26, x26, x0
 150:	str	w26, [sp, #96]
 154:	add	w26, w26, #0x1
 158:	and	x3, x3, #0xffffffff
 15c:	lsl	x0, x0, #9
 160:	udiv	x20, x3, x0
 164:	str	w20, [sp, #100]
 168:	msub	x0, x20, x0, x3
 16c:	str	x0, [sp, #112]
 170:	cmp	w26, w20
 174:	b.ls	370 <grub_minix_read_file+0x294>  // b.plast
 178:	stp	x23, x24, [sp, #48]
 17c:	add	x24, x20, #0xb
 180:	add	x24, x19, x24, lsl #2
 184:	adrp	x25, 0 <grub_minix_close>
 188:	and	x0, x1, #0xffffffff
 18c:	str	x0, [sp, #120]
 190:	b	24c <grub_minix_read_file+0x170>
 194:	adrp	x0, 0 <grub_minix_close>
 198:	ldr	x1, [x0]
 19c:	mov	w0, #0xb                   	// #11
 1a0:	bl	0 <grub_error>
 1a4:	mov	x0, #0xffffffffffffffff    	// #-1
 1a8:	b	3bc <grub_minix_read_file+0x2e0>
 1ac:	ldr	w0, [x24]
 1b0:	rev	w0, w0
 1b4:	ldr	x1, [x25]
 1b8:	ldr	w1, [x1]
 1bc:	cbnz	w1, 384 <grub_minix_read_file+0x2a8>
 1c0:	ldr	w1, [sp, #96]
 1c4:	lsl	x3, x21, #9
 1c8:	cmp	w1, w20
 1cc:	b.eq	33c <grub_minix_read_file+0x260>  // b.none
 1d0:	mov	x23, #0x0                   	// #0
 1d4:	ldr	w1, [sp, #100]
 1d8:	cmp	w1, w20
 1dc:	b.eq	35c <grub_minix_read_file+0x280>  // b.none
 1e0:	ldr	x1, [x19, #96]
 1e4:	str	x27, [x1, #48]
 1e8:	ldr	x1, [x19, #96]
 1ec:	str	x28, [x1, #56]
 1f0:	ldrh	w2, [x19, #10]
 1f4:	mov	w0, w0
 1f8:	lsr	w1, w2, #8
 1fc:	orr	w2, w1, w2, lsl #8
 200:	and	w2, w2, #0xffff
 204:	add	w1, w2, #0x1
 208:	mov	x4, x22
 20c:	mov	x2, x23
 210:	lsl	x1, x0, x1
 214:	ldr	x0, [x19, #96]
 218:	bl	0 <grub_disk_read>
 21c:	ldr	x0, [x19, #96]
 220:	str	xzr, [x0, #48]
 224:	ldr	x0, [x25]
 228:	ldr	w0, [x0]
 22c:	cbnz	w0, 39c <grub_minix_read_file+0x2c0>
 230:	ldr	x5, [x19, #112]
 234:	add	x22, x22, x5, lsl #9
 238:	sub	x22, x22, x23
 23c:	add	w20, w20, #0x1
 240:	add	x24, x24, #0x4
 244:	cmp	w26, w20
 248:	b.ls	36c <grub_minix_read_file+0x290>  // b.plast
 24c:	ldr	x21, [x19, #112]
 250:	cmp	w20, #0x6
 254:	b.ls	1ac <grub_minix_read_file+0xd0>  // b.plast
 258:	sub	w2, w20, #0x7
 25c:	ldr	w0, [x19, #84]
 260:	cmp	w0, w2
 264:	b.hi	2a8 <grub_minix_read_file+0x1cc>  // b.pmore
 268:	sub	w23, w2, w0
 26c:	mov	w1, w0
 270:	umull	x3, w0, w0
 274:	sub	w2, w2, w0
 278:	cmp	x2, x3
 27c:	b.cc	2bc <grub_minix_read_file+0x1e0>  // b.lo, b.ul, b.last
 280:	msub	w23, w0, w0, w23
 284:	mul	x1, x1, x3
 288:	cmp	x1, w23, uxtw
 28c:	b.hi	2ec <grub_minix_read_file+0x210>  // b.pmore
 290:	adrp	x0, 0 <grub_minix_close>
 294:	ldr	x1, [x0]
 298:	mov	w0, #0xb                   	// #11
 29c:	bl	0 <grub_error>
 2a0:	mov	w0, #0x0                   	// #0
 2a4:	b	1b4 <grub_minix_read_file+0xd8>
 2a8:	ldr	w1, [x19, #72]
 2ac:	rev	w1, w1
 2b0:	mov	x0, x19
 2b4:	bl	94 <grub_get_indir>
 2b8:	b	1b4 <grub_minix_read_file+0xd8>
 2bc:	ldr	w1, [x19, #76]
 2c0:	udiv	w2, w23, w0
 2c4:	rev	w1, w1
 2c8:	mov	x0, x19
 2cc:	bl	94 <grub_get_indir>
 2d0:	ldr	w2, [x19, #84]
 2d4:	udiv	w1, w23, w2
 2d8:	msub	w2, w1, w2, w23
 2dc:	mov	w1, w0
 2e0:	mov	x0, x19
 2e4:	bl	94 <grub_get_indir>
 2e8:	b	1b4 <grub_minix_read_file+0xd8>
 2ec:	ldr	w1, [x19, #80]
 2f0:	udiv	w2, w23, w0
 2f4:	udiv	w2, w2, w0
 2f8:	rev	w1, w1
 2fc:	mov	x0, x19
 300:	bl	94 <grub_get_indir>
 304:	ldr	w3, [x19, #84]
 308:	udiv	w2, w23, w3
 30c:	udiv	w1, w2, w3
 310:	msub	w2, w1, w3, w2
 314:	mov	w1, w0
 318:	mov	x0, x19
 31c:	bl	94 <grub_get_indir>
 320:	ldr	w2, [x19, #84]
 324:	udiv	w1, w23, w2
 328:	msub	w2, w1, w2, w23
 32c:	mov	w1, w0
 330:	mov	x0, x19
 334:	bl	94 <grub_get_indir>
 338:	b	1b4 <grub_minix_read_file+0xd8>
 33c:	ldr	x1, [x19, #112]
 340:	lsl	x1, x1, #9
 344:	ldr	x2, [sp, #120]
 348:	udiv	x3, x2, x1
 34c:	msub	x3, x3, x1, x2
 350:	cmp	x3, #0x0
 354:	csel	x3, x3, x1, ne  // ne = any
 358:	b	1d0 <grub_minix_read_file+0xf4>
 35c:	ldr	x1, [sp, #112]
 360:	sub	x3, x3, x1
 364:	mov	x23, x1
 368:	b	1e0 <grub_minix_read_file+0x104>
 36c:	ldp	x23, x24, [sp, #48]
 370:	ldr	x0, [sp, #104]
 374:	ldp	x21, x22, [sp, #32]
 378:	ldp	x25, x26, [sp, #64]
 37c:	ldp	x27, x28, [sp, #80]
 380:	b	3bc <grub_minix_read_file+0x2e0>
 384:	mov	x0, #0xffffffffffffffff    	// #-1
 388:	ldp	x21, x22, [sp, #32]
 38c:	ldp	x23, x24, [sp, #48]
 390:	ldp	x25, x26, [sp, #64]
 394:	ldp	x27, x28, [sp, #80]
 398:	b	3bc <grub_minix_read_file+0x2e0>
 39c:	mov	x0, #0xffffffffffffffff    	// #-1
 3a0:	ldp	x21, x22, [sp, #32]
 3a4:	ldp	x23, x24, [sp, #48]
 3a8:	ldp	x25, x26, [sp, #64]
 3ac:	ldp	x27, x28, [sp, #80]
 3b0:	b	3bc <grub_minix_read_file+0x2e0>
 3b4:	ldp	x21, x22, [sp, #32]
 3b8:	ldp	x27, x28, [sp, #80]
 3bc:	ldp	x19, x20, [sp, #16]
 3c0:	ldp	x29, x30, [sp], #128
 3c4:	ret
	...

00000000000003e0 <grub_minix_read>:
 3e0:	stp	x29, x30, [sp, #-16]!
 3e4:	mov	x29, sp
 3e8:	mov	x5, x1
 3ec:	mov	x4, x2
 3f0:	ldr	x3, [x0, #24]
 3f4:	ldr	x2, [x0, #96]
 3f8:	ldr	x1, [x0, #88]
 3fc:	ldr	x0, [x0, #80]
 400:	bl	dc <grub_minix_read_file>
 404:	ldp	x29, x30, [sp], #16
 408:	ret

000000000000040c <grub_minix_mount>:
 40c:	stp	x29, x30, [sp, #-32]!
 410:	mov	x29, sp
 414:	stp	x19, x20, [sp, #16]
 418:	mov	x20, x0
 41c:	mov	x0, #0x78                  	// #120
 420:	bl	0 <grub_malloc>
 424:	mov	x19, x0
 428:	cbz	x0, 4b0 <grub_minix_mount+0xa4>
 42c:	mov	x4, x0
 430:	mov	x3, #0x14                  	// #20
 434:	mov	x2, #0x0                   	// #0
 438:	mov	x1, #0x2                   	// #2
 43c:	mov	x0, x20
 440:	bl	0 <grub_disk_read>
 444:	adrp	x0, 0 <grub_minix_close>
 448:	ldr	x0, [x0]
 44c:	ldr	w0, [x0]
 450:	cbnz	w0, 4cc <grub_minix_mount+0xc0>
 454:	ldrh	w0, [x19, #16]
 458:	mov	w1, #0x6824                	// #26660
 45c:	cmp	w0, w1
 460:	b.eq	4c0 <grub_minix_mount+0xb4>  // b.none
 464:	mov	w1, #0x7824                	// #30756
 468:	cmp	w0, w1
 46c:	b.ne	4cc <grub_minix_mount+0xc0>  // b.any
 470:	mov	w0, #0x1e                  	// #30
 474:	str	w0, [x19, #104]
 478:	ldrh	w1, [x19, #10]
 47c:	lsr	w0, w1, #8
 480:	orr	w1, w0, w1, lsl #8
 484:	and	w1, w1, #0xffff
 488:	cmp	w1, #0x13
 48c:	b.hi	4cc <grub_minix_mount+0xc0>  // b.pmore
 490:	str	x20, [x19, #96]
 494:	str	wzr, [x19, #92]
 498:	mov	x0, #0x2                   	// #2
 49c:	str	x0, [x19, #112]
 4a0:	add	w1, w1, #0x9
 4a4:	lsl	x1, x0, x1
 4a8:	lsr	x1, x1, #2
 4ac:	str	w1, [x19, #84]
 4b0:	mov	x0, x19
 4b4:	ldp	x19, x20, [sp, #16]
 4b8:	ldp	x29, x30, [sp], #32
 4bc:	ret
 4c0:	mov	w0, #0xe                   	// #14
 4c4:	str	w0, [x19, #104]
 4c8:	b	478 <grub_minix_mount+0x6c>
 4cc:	mov	x0, x19
 4d0:	bl	0 <grub_free>
 4d4:	adrp	x0, 0 <grub_minix_close>
 4d8:	ldr	x1, [x0]
 4dc:	mov	w0, #0x9                   	// #9
 4e0:	bl	0 <grub_error>
 4e4:	mov	x19, #0x0                   	// #0
 4e8:	b	4b0 <grub_minix_mount+0xa4>
 4ec:	nop
	...

0000000000000500 <grub_minix_find_file>:
 500:	stp	x29, x30, [sp, #-160]!
 504:	mov	x29, sp
 508:	stp	x19, x20, [sp, #16]
 50c:	stp	x21, x22, [sp, #32]
 510:	stp	x23, x24, [sp, #48]
 514:	stp	x25, x26, [sp, #64]
 518:	stp	x27, x28, [sp, #80]
 51c:	mov	x19, x0
 520:	str	x1, [sp, #104]
 524:	mov	x21, x1
 528:	mov	x27, #0x2                   	// #2
 52c:	add	x25, sp, #0x80
 530:	mov	x23, x25
 534:	mov	w28, #0xffffa000            	// #-24576
 538:	ldrb	w0, [x21]
 53c:	cmp	w0, #0x2f
 540:	b.ne	550 <grub_minix_find_file+0x50>  // b.any
 544:	ldrb	w0, [x21, #1]!
 548:	cmp	w0, #0x2f
 54c:	b.eq	544 <grub_minix_find_file+0x44>  // b.none
 550:	cbz	w0, 760 <grub_minix_find_file+0x260>
 554:	ldrh	w0, [x19, #20]
 558:	tbz	w0, #6, 594 <grub_minix_find_file+0x94>
 55c:	ldrb	w0, [x21]
 560:	cmp	w0, #0x2f
 564:	mov	x24, x21
 568:	ccmp	w0, #0x0, #0x4, ne  // ne = any
 56c:	b.eq	580 <grub_minix_find_file+0x80>  // b.none
 570:	ldrb	w0, [x24, #1]!
 574:	cmp	w0, #0x2f
 578:	ccmp	w0, #0x0, #0x4, ne  // ne = any
 57c:	b.ne	570 <grub_minix_find_file+0x70>  // b.any
 580:	ldr	w0, [x19, #28]
 584:	cbz	w0, 5a8 <grub_minix_find_file+0xa8>
 588:	mov	w20, #0x0                   	// #0
 58c:	sub	x26, x24, x21
 590:	b	6b4 <grub_minix_find_file+0x1b4>
 594:	adrp	x0, 0 <grub_minix_close>
 598:	ldr	x1, [x0]
 59c:	mov	w0, #0x4                   	// #4
 5a0:	bl	0 <grub_error>
 5a4:	b	5c8 <grub_minix_find_file+0xc8>
 5a8:	ldr	x2, [sp, #104]
 5ac:	adrp	x0, 0 <grub_minix_close>
 5b0:	ldr	x1, [x0]
 5b4:	mov	w0, #0x5                   	// #5
 5b8:	bl	0 <grub_error>
 5bc:	adrp	x0, 0 <grub_minix_close>
 5c0:	ldr	x0, [x0]
 5c4:	ldr	w0, [x0]
 5c8:	ldp	x19, x20, [sp, #16]
 5cc:	ldp	x21, x22, [sp, #32]
 5d0:	ldp	x23, x24, [sp, #48]
 5d4:	ldp	x25, x26, [sp, #64]
 5d8:	ldp	x27, x28, [sp, #80]
 5dc:	ldp	x29, x30, [sp], #160
 5e0:	ret
 5e4:	adrp	x0, 0 <grub_minix_close>
 5e8:	ldr	x0, [x0]
 5ec:	ldr	w0, [x0]
 5f0:	b	5c8 <grub_minix_find_file+0xc8>
 5f4:	adrp	x0, 0 <grub_minix_close>
 5f8:	ldr	x0, [x0]
 5fc:	ldr	w0, [x0]
 600:	b	5c8 <grub_minix_find_file+0xc8>
 604:	ldr	w22, [x19, #28]
 608:	ldr	w0, [x19, #92]
 60c:	add	w0, w0, #0x1
 610:	str	w0, [x19, #92]
 614:	cmp	w0, #0x8
 618:	b.gt	680 <grub_minix_find_file+0x180>
 61c:	rev	w26, w22
 620:	rev	w22, w22
 624:	add	x0, x22, #0x1
 628:	bl	0 <grub_malloc>
 62c:	mov	x21, x0
 630:	cbz	x0, 690 <grub_minix_find_file+0x190>
 634:	mov	x5, x0
 638:	mov	x4, x22
 63c:	mov	x3, #0x0                   	// #0
 640:	mov	x2, #0x0                   	// #0
 644:	mov	x1, #0x0                   	// #0
 648:	mov	x0, x19
 64c:	bl	dc <grub_minix_read_file>
 650:	tbnz	x0, #63, 690 <grub_minix_find_file+0x190>
 654:	strb	wzr, [x21, w26, uxtw]
 658:	ldrb	w0, [x21]
 65c:	cmp	w0, #0x2f
 660:	csinc	w1, w20, wzr, ne  // ne = any
 664:	mov	x0, x19
 668:	bl	1c <grub_minix_read_inode>
 66c:	cbnz	w0, 690 <grub_minix_find_file+0x190>
 670:	mov	x1, x21
 674:	mov	x0, x19
 678:	bl	500 <grub_minix_find_file>
 67c:	b	690 <grub_minix_find_file+0x190>
 680:	adrp	x0, 0 <grub_minix_close>
 684:	ldr	x1, [x0]
 688:	mov	w0, #0x19                  	// #25
 68c:	bl	0 <grub_error>
 690:	adrp	x0, 0 <grub_minix_close>
 694:	ldr	x0, [x0]
 698:	ldr	w0, [x0]
 69c:	cbz	w0, 758 <grub_minix_find_file+0x258>
 6a0:	b	5c8 <grub_minix_find_file+0xc8>
 6a4:	ldr	w0, [x19, #28]
 6a8:	rev	w0, w0
 6ac:	cmp	w20, w0
 6b0:	b.cs	5a8 <grub_minix_find_file+0xa8>  // b.hs, b.nlast
 6b4:	mov	w22, w20
 6b8:	add	x5, sp, #0x7e
 6bc:	mov	x4, x27
 6c0:	mov	x3, x22
 6c4:	mov	x2, #0x0                   	// #0
 6c8:	mov	x1, #0x0                   	// #0
 6cc:	mov	x0, x19
 6d0:	bl	dc <grub_minix_read_file>
 6d4:	tbnz	x0, #63, 5e4 <grub_minix_find_file+0xe4>
 6d8:	mov	x5, x23
 6dc:	ldrsw	x4, [x19, #104]
 6e0:	add	x3, x22, #0x2
 6e4:	mov	x2, #0x0                   	// #0
 6e8:	mov	x1, #0x0                   	// #0
 6ec:	mov	x0, x19
 6f0:	bl	dc <grub_minix_read_file>
 6f4:	tbnz	x0, #63, 5f4 <grub_minix_find_file+0xf4>
 6f8:	ldr	w0, [x19, #104]
 6fc:	add	w1, w0, #0x2
 700:	add	w20, w20, w1
 704:	strb	wzr, [x25, w0, sxtw]
 708:	mov	x2, x26
 70c:	mov	x1, x23
 710:	mov	x0, x21
 714:	bl	0 <grub_strncmp>
 718:	cbnz	w0, 6a4 <grub_minix_find_file+0x1a4>
 71c:	ldrb	w0, [x25, x26]
 720:	cbnz	w0, 6a4 <grub_minix_find_file+0x1a4>
 724:	ldrh	w20, [x19, #88]
 728:	ldrh	w0, [sp, #126]
 72c:	lsr	w1, w0, #8
 730:	orr	w1, w1, w0, lsl #8
 734:	mov	x0, x19
 738:	bl	1c <grub_minix_read_inode>
 73c:	ldrh	w0, [x19, #20]
 740:	lsr	w1, w0, #8
 744:	orr	w0, w1, w0, lsl #8
 748:	and	w0, w0, w28
 74c:	and	w0, w0, #0xffff
 750:	cmp	w0, #0xa, lsl #12
 754:	b.eq	604 <grub_minix_find_file+0x104>  // b.none
 758:	mov	x21, x24
 75c:	b	538 <grub_minix_find_file+0x38>
 760:	mov	w0, #0x0                   	// #0
 764:	b	5c8 <grub_minix_find_file+0xc8>
	...

0000000000000788 <grub_minix_open>:
 788:	stp	x29, x30, [sp, #-48]!
 78c:	mov	x29, sp
 790:	stp	x19, x20, [sp, #16]
 794:	str	x21, [sp, #32]
 798:	mov	x21, x0
 79c:	mov	x20, x1
 7a0:	ldr	x0, [x0, #8]
 7a4:	ldr	x0, [x0]
 7a8:	bl	40c <grub_minix_mount>
 7ac:	cbz	x0, 80c <grub_minix_open+0x84>
 7b0:	mov	x19, x0
 7b4:	mov	w1, #0x1                   	// #1
 7b8:	bl	1c <grub_minix_read_inode>
 7bc:	adrp	x0, 0 <grub_minix_close>
 7c0:	ldr	x0, [x0]
 7c4:	ldr	w0, [x0]
 7c8:	cbnz	w0, 81c <grub_minix_open+0x94>
 7cc:	cbz	x20, 7dc <grub_minix_open+0x54>
 7d0:	ldrb	w0, [x20]
 7d4:	cmp	w0, #0x2f
 7d8:	b.eq	834 <grub_minix_open+0xac>  // b.none
 7dc:	mov	x2, x20
 7e0:	adrp	x0, 0 <grub_minix_close>
 7e4:	ldr	x1, [x0]
 7e8:	mov	w0, #0x7                   	// #7
 7ec:	bl	0 <grub_error>
 7f0:	adrp	x0, 0 <grub_minix_close>
 7f4:	ldr	x0, [x0]
 7f8:	ldr	w0, [x0]
 7fc:	ldp	x19, x20, [sp, #16]
 800:	ldr	x21, [sp, #32]
 804:	ldp	x29, x30, [sp], #48
 808:	ret
 80c:	adrp	x0, 0 <grub_minix_close>
 810:	ldr	x0, [x0]
 814:	ldr	w0, [x0]
 818:	b	7fc <grub_minix_open+0x74>
 81c:	mov	x0, x19
 820:	bl	0 <grub_free>
 824:	adrp	x0, 0 <grub_minix_close>
 828:	ldr	x0, [x0]
 82c:	ldr	w0, [x0]
 830:	b	7fc <grub_minix_open+0x74>
 834:	mov	x1, x20
 838:	mov	x0, x19
 83c:	bl	500 <grub_minix_find_file>
 840:	adrp	x0, 0 <grub_minix_close>
 844:	ldr	x0, [x0]
 848:	ldr	w0, [x0]
 84c:	cbnz	w0, 864 <grub_minix_open+0xdc>
 850:	str	x19, [x21, #80]
 854:	ldr	w1, [x19, #28]
 858:	rev	w1, w1
 85c:	str	x1, [x21, #64]
 860:	b	7fc <grub_minix_open+0x74>
 864:	mov	x0, x19
 868:	bl	0 <grub_free>
 86c:	adrp	x0, 0 <grub_minix_close>
 870:	ldr	x0, [x0]
 874:	ldr	w0, [x0]
 878:	b	7fc <grub_minix_open+0x74>
 87c:	nop
	...

0000000000000890 <grub_minix_dir>:
 890:	stp	x29, x30, [sp, #-160]!
 894:	mov	x29, sp
 898:	stp	x19, x20, [sp, #16]
 89c:	stp	x21, x22, [sp, #32]
 8a0:	stp	x23, x24, [sp, #48]
 8a4:	mov	x20, x1
 8a8:	mov	x22, x2
 8ac:	mov	x23, x3
 8b0:	ldr	x0, [x0]
 8b4:	bl	40c <grub_minix_mount>
 8b8:	cbz	x0, 900 <grub_minix_dir+0x70>
 8bc:	mov	x19, x0
 8c0:	mov	w1, #0x1                   	// #1
 8c4:	bl	1c <grub_minix_read_inode>
 8c8:	adrp	x0, 0 <grub_minix_close>
 8cc:	ldr	x0, [x0]
 8d0:	ldr	w0, [x0]
 8d4:	cbz	w0, 910 <grub_minix_dir+0x80>
 8d8:	mov	x0, x19
 8dc:	bl	0 <grub_free>
 8e0:	adrp	x0, 0 <grub_minix_close>
 8e4:	ldr	x0, [x0]
 8e8:	ldr	w0, [x0]
 8ec:	ldp	x19, x20, [sp, #16]
 8f0:	ldp	x21, x22, [sp, #32]
 8f4:	ldp	x23, x24, [sp, #48]
 8f8:	ldp	x29, x30, [sp], #160
 8fc:	ret
 900:	adrp	x0, 0 <grub_minix_close>
 904:	ldr	x0, [x0]
 908:	ldr	w0, [x0]
 90c:	b	8ec <grub_minix_dir+0x5c>
 910:	mov	x1, x20
 914:	mov	x0, x19
 918:	bl	500 <grub_minix_find_file>
 91c:	adrp	x0, 0 <grub_minix_close>
 920:	ldr	x0, [x0]
 924:	ldr	w20, [x0]
 928:	cbnz	w20, 8d8 <grub_minix_dir+0x48>
 92c:	ldrh	w0, [x19, #20]
 930:	tbz	w0, #6, 954 <grub_minix_dir+0xc4>
 934:	ldr	w0, [x19, #28]
 938:	cbz	w0, 8d8 <grub_minix_dir+0x48>
 93c:	stp	x25, x26, [sp, #64]
 940:	str	x27, [sp, #80]
 944:	mov	x25, #0x10                  	// #16
 948:	mov	x24, #0x2                   	// #2
 94c:	add	x21, sp, #0x80
 950:	b	a08 <grub_minix_dir+0x178>
 954:	adrp	x0, 0 <grub_minix_close>
 958:	ldr	x1, [x0]
 95c:	mov	w0, #0x4                   	// #4
 960:	bl	0 <grub_error>
 964:	b	8d8 <grub_minix_dir+0x48>
 968:	adrp	x0, 0 <grub_minix_close>
 96c:	ldr	x0, [x0]
 970:	ldr	w0, [x0]
 974:	ldp	x25, x26, [sp, #64]
 978:	ldr	x27, [sp, #80]
 97c:	b	8ec <grub_minix_dir+0x5c>
 980:	adrp	x0, 0 <grub_minix_close>
 984:	ldr	x0, [x0]
 988:	ldr	w0, [x0]
 98c:	ldp	x25, x26, [sp, #64]
 990:	ldr	x27, [sp, #80]
 994:	b	8ec <grub_minix_dir+0x5c>
 998:	lsr	w0, w1, #8
 99c:	orr	w1, w0, w1, lsl #8
 9a0:	mov	x0, x19
 9a4:	bl	1c <grub_minix_read_inode>
 9a8:	ldrh	w1, [x19, #20]
 9ac:	ubfx	x1, x1, #6, #1
 9b0:	ldrb	w0, [sp, #112]
 9b4:	bfxil	w0, w1, #0, #1
 9b8:	orr	w0, w0, #0x2
 9bc:	strb	w0, [sp, #112]
 9c0:	ldr	w0, [x19, #36]
 9c4:	rev	w0, w0
 9c8:	str	w0, [sp, #116]
 9cc:	mov	x2, x23
 9d0:	add	x1, sp, #0x70
 9d4:	mov	x0, x21
 9d8:	blr	x22
 9dc:	cbnz	w0, a88 <grub_minix_dir+0x1f8>
 9e0:	mov	w1, w27
 9e4:	mov	x0, x19
 9e8:	bl	1c <grub_minix_read_inode>
 9ec:	ldr	w0, [x19, #104]
 9f0:	add	w0, w0, #0x2
 9f4:	add	w20, w20, w0
 9f8:	ldr	w0, [x19, #28]
 9fc:	rev	w0, w0
 a00:	cmp	w20, w0
 a04:	b.cs	a7c <grub_minix_dir+0x1ec>  // b.hs, b.nlast
 a08:	ldrh	w27, [x19, #88]
 a0c:	mov	x2, x25
 a10:	mov	w1, #0x0                   	// #0
 a14:	add	x0, sp, #0x70
 a18:	bl	0 <grub_memset>
 a1c:	mov	w26, w20
 a20:	add	x5, sp, #0x6e
 a24:	mov	x4, x24
 a28:	mov	x3, x26
 a2c:	mov	x2, #0x0                   	// #0
 a30:	mov	x1, #0x0                   	// #0
 a34:	mov	x0, x19
 a38:	bl	dc <grub_minix_read_file>
 a3c:	tbnz	x0, #63, 968 <grub_minix_dir+0xd8>
 a40:	mov	x5, x21
 a44:	ldrsw	x4, [x19, #104]
 a48:	add	x3, x26, #0x2
 a4c:	mov	x2, #0x0                   	// #0
 a50:	mov	x1, #0x0                   	// #0
 a54:	mov	x0, x19
 a58:	bl	dc <grub_minix_read_file>
 a5c:	tbnz	x0, #63, 980 <grub_minix_dir+0xf0>
 a60:	ldr	w0, [x19, #104]
 a64:	strb	wzr, [x21, w0, sxtw]
 a68:	ldrh	w1, [sp, #110]
 a6c:	cbnz	w1, 998 <grub_minix_dir+0x108>
 a70:	add	w0, w0, #0x2
 a74:	add	w20, w20, w0
 a78:	b	9f8 <grub_minix_dir+0x168>
 a7c:	ldp	x25, x26, [sp, #64]
 a80:	ldr	x27, [sp, #80]
 a84:	b	8d8 <grub_minix_dir+0x48>
 a88:	ldp	x25, x26, [sp, #64]
 a8c:	ldr	x27, [sp, #80]
 a90:	b	8d8 <grub_minix_dir+0x48>
 a94:	nop
	...

0000000000000aa8 <grub_mod_init>:
 aa8:	stp	x29, x30, [sp, #-16]!
 aac:	mov	x29, sp
 ab0:	adrp	x0, 0 <grub_minix_close>
 ab4:	ldr	x1, [x0]
 ab8:	adrp	x0, 0 <grub_minix_close>
 abc:	ldr	x0, [x0]
 ac0:	bl	0 <grub_list_push>
 ac4:	ldp	x29, x30, [sp], #16
 ac8:	ret
 acc:	nop
	...

0000000000000ae0 <grub_mod_fini>:
 ae0:	stp	x29, x30, [sp, #-16]!
 ae4:	mov	x29, sp
 ae8:	adrp	x0, 0 <grub_minix_close>
 aec:	ldr	x0, [x0]
 af0:	bl	0 <grub_list_remove>
 af4:	ldp	x29, x30, [sp], #16
 af8:	ret
 afc:	nop
	...
