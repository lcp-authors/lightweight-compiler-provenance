
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcry_sha256.mod_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x8ac>:
   0:	mov	w1, #0xe667                	// #58983
   4:	movk	w1, #0x6a09, lsl #16
   8:	str	w1, [x0]
   c:	mov	w1, #0xae85                	// #44677
  10:	movk	w1, #0xbb67, lsl #16
  14:	str	w1, [x0, #4]
  18:	mov	w1, #0xf372                	// #62322
  1c:	movk	w1, #0x3c6e, lsl #16
  20:	str	w1, [x0, #8]
  24:	mov	w1, #0xf53a                	// #62778
  28:	movk	w1, #0xa54f, lsl #16
  2c:	str	w1, [x0, #12]
  30:	mov	w1, #0x527f                	// #21119
  34:	movk	w1, #0x510e, lsl #16
  38:	str	w1, [x0, #16]
  3c:	mov	w1, #0x688c                	// #26764
  40:	movk	w1, #0x9b05, lsl #16
  44:	str	w1, [x0, #20]
  48:	mov	w1, #0xd9ab                	// #55723
  4c:	movk	w1, #0x1f83, lsl #16
  50:	str	w1, [x0, #24]
  54:	mov	w1, #0xcd19                	// #52505
  58:	movk	w1, #0x5be0, lsl #16
  5c:	str	w1, [x0, #28]
  60:	str	wzr, [x0, #32]
  64:	str	wzr, [x0, #100]
  68:	ret
  6c:	mov	w1, #0x9ed8                	// #40664
  70:	movk	w1, #0xc105, lsl #16
  74:	str	w1, [x0]
  78:	mov	w1, #0xd507                	// #54535
  7c:	movk	w1, #0x367c, lsl #16
  80:	str	w1, [x0, #4]
  84:	mov	w1, #0xdd17                	// #56599
  88:	movk	w1, #0x3070, lsl #16
  8c:	str	w1, [x0, #8]
  90:	mov	w1, #0x5939                	// #22841
  94:	movk	w1, #0xf70e, lsl #16
  98:	str	w1, [x0, #12]
  9c:	mov	w1, #0xb31                 	// #2865
  a0:	movk	w1, #0xffc0, lsl #16
  a4:	str	w1, [x0, #16]
  a8:	mov	w1, #0x1511                	// #5393
  ac:	movk	w1, #0x6858, lsl #16
  b0:	str	w1, [x0, #20]
  b4:	mov	w1, #0x8fa7                	// #36775
  b8:	movk	w1, #0x64f9, lsl #16
  bc:	str	w1, [x0, #24]
  c0:	mov	w1, #0x4fa4                	// #20388
  c4:	movk	w1, #0xbefa, lsl #16
  c8:	str	w1, [x0, #28]
  cc:	str	wzr, [x0, #32]
  d0:	str	wzr, [x0, #100]
  d4:	ret
  d8:	stp	x29, x30, [sp, #-368]!
  dc:	mov	x29, sp
  e0:	stp	x19, x20, [sp, #16]
  e4:	str	x21, [sp, #32]
  e8:	ldr	w30, [x0]
  ec:	ldr	w18, [x0, #4]
  f0:	ldr	w17, [x0, #8]
  f4:	ldr	w16, [x0, #12]
  f8:	ldr	w15, [x0, #16]
  fc:	ldr	w14, [x0, #20]
 100:	ldr	w13, [x0, #24]
 104:	ldr	w12, [x0, #28]
 108:	add	x4, x1, #0x40
 10c:	add	x2, sp, #0x130
 110:	ldrb	w3, [x1]
 114:	strb	w3, [x2, #3]
 118:	ldrb	w3, [x1, #1]
 11c:	strb	w3, [x2, #2]
 120:	ldrb	w3, [x1, #2]
 124:	strb	w3, [x2, #1]
 128:	add	x1, x1, #0x4
 12c:	ldurb	w3, [x1, #-1]
 130:	strb	w3, [x2], #4
 134:	cmp	x4, x1
 138:	b.ne	110 <grub_mod_init-0x79c>  // b.any
 13c:	mov	x2, #0x1                   	// #1
 140:	lsl	x1, x2, #2
 144:	add	x3, sp, #0x30
 148:	add	x3, x1, x3
 14c:	add	x4, sp, #0x130
 150:	add	x1, x1, x4
 154:	ldur	w1, [x1, #-4]
 158:	stur	w1, [x3, #-4]
 15c:	add	x2, x2, #0x1
 160:	cmp	x2, #0x11
 164:	b.ne	140 <grub_mod_init-0x76c>  // b.any
 168:	add	x11, sp, #0x30
 16c:	add	x5, x11, #0xc0
 170:	mov	x2, x11
 174:	ldr	w1, [x2, #56]
 178:	ldr	w3, [x2, #4]
 17c:	ror	w4, w1, #19
 180:	eor	w4, w4, w1, ror #17
 184:	eor	w1, w4, w1, lsr #10
 188:	ror	w4, w3, #18
 18c:	eor	w4, w4, w3, ror #7
 190:	eor	w3, w4, w3, lsr #3
 194:	add	w1, w1, w3
 198:	ldr	w3, [x2, #36]
 19c:	ldr	w4, [x2]
 1a0:	add	w3, w3, w4
 1a4:	add	w1, w1, w3
 1a8:	str	w1, [x2, #64]
 1ac:	add	x2, x2, #0x4
 1b0:	cmp	x2, x5
 1b4:	b.ne	174 <grub_mod_init-0x738>  // b.any
 1b8:	adrp	x1, 0 <grub_mod_init-0x8ac>
 1bc:	ldr	x10, [x1]
 1c0:	add	x19, x10, #0x100
 1c4:	mov	w5, w12
 1c8:	mov	w4, w13
 1cc:	mov	w1, w14
 1d0:	mov	w21, w15
 1d4:	mov	w7, w16
 1d8:	mov	w8, w17
 1dc:	mov	w2, w18
 1e0:	mov	w3, w30
 1e4:	ror	w6, w21, #11
 1e8:	eor	w6, w6, w21, ror #6
 1ec:	eor	w6, w6, w21, ror #25
 1f0:	eor	w9, w1, w4
 1f4:	and	w9, w9, w21
 1f8:	eor	w9, w9, w4
 1fc:	add	w6, w6, w9
 200:	ldr	w9, [x10]
 204:	ldr	w20, [x11]
 208:	add	w9, w9, w20
 20c:	add	w6, w6, w9
 210:	add	w5, w6, w5
 214:	add	w9, w5, w7
 218:	ror	w6, w3, #13
 21c:	eor	w6, w6, w3, ror #2
 220:	eor	w6, w6, w3, ror #22
 224:	orr	w7, w3, w2
 228:	and	w7, w7, w8
 22c:	and	w20, w3, w2
 230:	orr	w7, w7, w20
 234:	add	w6, w6, w7
 238:	add	w5, w6, w5
 23c:	eor	w6, w21, w1
 240:	and	w6, w6, w9
 244:	eor	w6, w6, w1
 248:	add	w4, w6, w4
 24c:	ldr	w6, [x10, #4]
 250:	ldr	w7, [x11, #4]
 254:	add	w6, w6, w7
 258:	add	w4, w4, w6
 25c:	ror	w6, w9, #11
 260:	eor	w6, w6, w9, ror #6
 264:	eor	w6, w6, w9, ror #25
 268:	add	w6, w4, w6
 26c:	add	w20, w6, w8
 270:	ror	w4, w5, #13
 274:	eor	w4, w4, w5, ror #2
 278:	eor	w4, w4, w5, ror #22
 27c:	orr	w7, w5, w3
 280:	and	w7, w7, w2
 284:	and	w8, w5, w3
 288:	orr	w7, w7, w8
 28c:	add	w4, w4, w7
 290:	add	w4, w4, w6
 294:	eor	w6, w9, w21
 298:	and	w6, w6, w20
 29c:	eor	w6, w6, w21
 2a0:	add	w1, w6, w1
 2a4:	ldr	w6, [x10, #8]
 2a8:	ldr	w7, [x11, #8]
 2ac:	add	w6, w6, w7
 2b0:	add	w1, w1, w6
 2b4:	ror	w6, w20, #11
 2b8:	eor	w6, w6, w20, ror #6
 2bc:	eor	w6, w6, w20, ror #25
 2c0:	add	w6, w1, w6
 2c4:	add	w2, w6, w2
 2c8:	ror	w1, w4, #13
 2cc:	eor	w1, w1, w4, ror #2
 2d0:	eor	w1, w1, w4, ror #22
 2d4:	orr	w7, w5, w4
 2d8:	and	w7, w7, w3
 2dc:	and	w8, w5, w4
 2e0:	orr	w7, w7, w8
 2e4:	add	w1, w1, w7
 2e8:	add	w1, w1, w6
 2ec:	eor	w6, w9, w20
 2f0:	and	w6, w6, w2
 2f4:	eor	w6, w6, w9
 2f8:	add	w6, w6, w21
 2fc:	ldr	w8, [x10, #12]
 300:	ldr	w7, [x11, #12]
 304:	add	w8, w8, w7
 308:	add	w6, w6, w8
 30c:	ror	w8, w2, #11
 310:	eor	w8, w8, w2, ror #6
 314:	eor	w8, w8, w2, ror #25
 318:	add	w8, w6, w8
 31c:	add	w3, w8, w3
 320:	ror	w6, w1, #13
 324:	eor	w6, w6, w1, ror #2
 328:	eor	w6, w6, w1, ror #22
 32c:	orr	w7, w4, w1
 330:	and	w7, w7, w5
 334:	and	w21, w4, w1
 338:	orr	w7, w7, w21
 33c:	add	w6, w6, w7
 340:	add	w6, w6, w8
 344:	eor	w7, w20, w2
 348:	and	w7, w7, w3
 34c:	eor	w7, w7, w20
 350:	add	w7, w7, w9
 354:	ldr	w9, [x10, #16]
 358:	ldr	w8, [x11, #16]
 35c:	add	w9, w9, w8
 360:	add	w7, w7, w9
 364:	ror	w9, w3, #11
 368:	eor	w9, w9, w3, ror #6
 36c:	eor	w9, w9, w3, ror #25
 370:	add	w9, w7, w9
 374:	add	w5, w5, w9
 378:	ror	w7, w6, #13
 37c:	eor	w7, w7, w6, ror #2
 380:	eor	w7, w7, w6, ror #22
 384:	orr	w8, w1, w6
 388:	and	w8, w8, w4
 38c:	and	w21, w1, w6
 390:	orr	w8, w8, w21
 394:	add	w7, w7, w8
 398:	add	w7, w7, w9
 39c:	eor	w8, w2, w3
 3a0:	and	w8, w8, w5
 3a4:	eor	w8, w8, w2
 3a8:	add	w8, w8, w20
 3ac:	ldr	w9, [x10, #20]
 3b0:	ldr	w20, [x11, #20]
 3b4:	add	w9, w9, w20
 3b8:	add	w8, w8, w9
 3bc:	ror	w9, w5, #11
 3c0:	eor	w9, w9, w5, ror #6
 3c4:	eor	w9, w9, w5, ror #25
 3c8:	add	w9, w8, w9
 3cc:	add	w4, w4, w9
 3d0:	ror	w8, w7, #13
 3d4:	eor	w8, w8, w7, ror #2
 3d8:	eor	w8, w8, w7, ror #22
 3dc:	orr	w20, w6, w7
 3e0:	and	w20, w20, w1
 3e4:	and	w21, w6, w7
 3e8:	orr	w20, w20, w21
 3ec:	add	w8, w8, w20
 3f0:	add	w8, w8, w9
 3f4:	eor	w9, w3, w5
 3f8:	and	w9, w9, w4
 3fc:	eor	w9, w9, w3
 400:	add	w2, w9, w2
 404:	ldr	w9, [x10, #24]
 408:	ldr	w20, [x11, #24]
 40c:	add	w9, w9, w20
 410:	add	w2, w2, w9
 414:	ror	w9, w4, #6
 418:	eor	w9, w9, w4, ror #11
 41c:	eor	w9, w9, w4, ror #25
 420:	add	w9, w2, w9
 424:	add	w1, w1, w9
 428:	ror	w2, w8, #2
 42c:	eor	w2, w2, w8, ror #13
 430:	eor	w2, w2, w8, ror #22
 434:	orr	w20, w7, w8
 438:	and	w20, w20, w6
 43c:	and	w21, w7, w8
 440:	orr	w20, w20, w21
 444:	add	w2, w2, w20
 448:	add	w2, w2, w9
 44c:	eor	w9, w5, w4
 450:	and	w9, w9, w1
 454:	eor	w9, w9, w5
 458:	add	w3, w9, w3
 45c:	ldr	w9, [x10, #28]
 460:	ldr	w20, [x11, #28]
 464:	add	w9, w9, w20
 468:	add	w3, w3, w9
 46c:	ror	w9, w1, #6
 470:	eor	w9, w9, w1, ror #11
 474:	eor	w9, w9, w1, ror #25
 478:	add	w9, w3, w9
 47c:	add	w21, w6, w9
 480:	ror	w3, w2, #2
 484:	eor	w3, w3, w2, ror #13
 488:	eor	w3, w3, w2, ror #22
 48c:	orr	w6, w8, w2
 490:	and	w6, w6, w7
 494:	and	w20, w8, w2
 498:	orr	w6, w6, w20
 49c:	add	w3, w3, w6
 4a0:	add	w3, w3, w9
 4a4:	add	x10, x10, #0x20
 4a8:	add	x11, x11, #0x20
 4ac:	cmp	x10, x19
 4b0:	b.ne	1e4 <grub_mod_init-0x6c8>  // b.any
 4b4:	add	w3, w30, w3
 4b8:	str	w3, [x0]
 4bc:	add	w2, w18, w2
 4c0:	str	w2, [x0, #4]
 4c4:	add	w8, w17, w8
 4c8:	str	w8, [x0, #8]
 4cc:	add	w7, w16, w7
 4d0:	str	w7, [x0, #12]
 4d4:	add	w6, w15, w21
 4d8:	str	w6, [x0, #16]
 4dc:	add	w1, w14, w1
 4e0:	str	w1, [x0, #20]
 4e4:	add	w4, w13, w4
 4e8:	str	w4, [x0, #24]
 4ec:	add	w5, w12, w5
 4f0:	str	w5, [x0, #28]
 4f4:	ldp	x19, x20, [sp, #16]
 4f8:	ldr	x21, [sp, #32]
 4fc:	ldp	x29, x30, [sp], #368
 500:	ret
 504:	nop
	...
 510:	add	x0, x0, #0x24
 514:	ret
 518:	stp	x29, x30, [sp, #-48]!
 51c:	mov	x29, sp
 520:	stp	x19, x20, [sp, #16]
 524:	stp	x21, x22, [sp, #32]
 528:	mov	x19, x0
 52c:	mov	x20, x1
 530:	mov	x21, x2
 534:	ldr	w0, [x0, #100]
 538:	cmp	w0, #0x40
 53c:	b.eq	588 <grub_mod_init-0x324>  // b.none
 540:	cbz	x1, 634 <grub_mod_init-0x278>
 544:	cbz	w0, 5b0 <grub_mod_init-0x2fc>
 548:	cbz	x2, 574 <grub_mod_init-0x338>
 54c:	ldr	w0, [x19, #100]
 550:	cmp	w0, #0x3f
 554:	b.gt	644 <grub_mod_init-0x268>
 558:	add	w1, w0, #0x1
 55c:	str	w1, [x19, #100]
 560:	ldrb	w1, [x20], #1
 564:	add	x0, x19, w0, sxtw
 568:	strb	w1, [x0, #36]
 56c:	subs	x21, x21, #0x1
 570:	b.ne	54c <grub_mod_init-0x360>  // b.any
 574:	mov	x2, #0x0                   	// #0
 578:	mov	x1, #0x0                   	// #0
 57c:	mov	x0, x19
 580:	bl	518 <grub_mod_init-0x394>
 584:	b	634 <grub_mod_init-0x278>
 588:	add	x1, x19, #0x24
 58c:	mov	x0, x19
 590:	bl	d8 <grub_mod_init-0x7d4>
 594:	mov	w0, #0x148                 	// #328
 598:	bl	0 <_gcry_burn_stack>
 59c:	str	wzr, [x19, #100]
 5a0:	ldr	w0, [x19, #32]
 5a4:	add	w0, w0, #0x1
 5a8:	str	w0, [x19, #32]
 5ac:	cbz	x20, 634 <grub_mod_init-0x278>
 5b0:	mov	x22, x20
 5b4:	cmp	x21, #0x3f
 5b8:	b.ls	5f8 <grub_mod_init-0x2b4>  // b.plast
 5bc:	sub	x22, x21, #0x40
 5c0:	and	x22, x22, #0xffffffffffffffc0
 5c4:	add	x22, x22, #0x40
 5c8:	add	x22, x20, x22
 5cc:	mov	x1, x20
 5d0:	mov	x0, x19
 5d4:	bl	d8 <grub_mod_init-0x7d4>
 5d8:	str	wzr, [x19, #100]
 5dc:	ldr	w0, [x19, #32]
 5e0:	add	w0, w0, #0x1
 5e4:	str	w0, [x19, #32]
 5e8:	add	x20, x20, #0x40
 5ec:	cmp	x20, x22
 5f0:	b.ne	5cc <grub_mod_init-0x2e0>  // b.any
 5f4:	and	x21, x21, #0x3f
 5f8:	mov	w0, #0x148                 	// #328
 5fc:	bl	0 <_gcry_burn_stack>
 600:	cbz	x21, 634 <grub_mod_init-0x278>
 604:	mov	x1, x22
 608:	ldr	w0, [x19, #100]
 60c:	cmp	w0, #0x3f
 610:	b.gt	634 <grub_mod_init-0x278>
 614:	add	w2, w0, #0x1
 618:	str	w2, [x19, #100]
 61c:	ldrb	w2, [x1], #1
 620:	add	x0, x19, w0, sxtw
 624:	strb	w2, [x0, #36]
 628:	sub	x0, x21, x1
 62c:	cmn	x22, x0
 630:	b.ne	608 <grub_mod_init-0x2a4>  // b.any
 634:	ldp	x19, x20, [sp, #16]
 638:	ldp	x21, x22, [sp, #32]
 63c:	ldp	x29, x30, [sp], #48
 640:	ret
 644:	mov	x2, #0x0                   	// #0
 648:	mov	x1, #0x0                   	// #0
 64c:	mov	x0, x19
 650:	bl	518 <grub_mod_init-0x394>
 654:	cbz	x21, 634 <grub_mod_init-0x278>
 658:	cmp	x21, #0x3f
 65c:	b.hi	5bc <grub_mod_init-0x2f0>  // b.pmore
 660:	mov	w0, #0x148                 	// #328
 664:	bl	0 <_gcry_burn_stack>
 668:	mov	x22, x20
 66c:	b	604 <grub_mod_init-0x2a8>
 670:	stp	x29, x30, [sp, #-48]!
 674:	mov	x29, sp
 678:	stp	x19, x20, [sp, #16]
 67c:	str	x21, [sp, #32]
 680:	mov	x19, x0
 684:	mov	x2, #0x0                   	// #0
 688:	mov	x1, #0x0                   	// #0
 68c:	bl	518 <grub_mod_init-0x394>
 690:	ldr	w0, [x19, #32]
 694:	lsl	w2, w0, #6
 698:	ldr	w1, [x19, #100]
 69c:	add	w20, w1, w2
 6a0:	cmp	w2, w20
 6a4:	cset	w2, hi  // hi = pmore
 6a8:	add	w0, w2, w0, lsr #26
 6ac:	lsl	w21, w20, #3
 6b0:	extr	w20, w0, w20, #29
 6b4:	cmp	w1, #0x37
 6b8:	b.gt	6fc <grub_mod_init-0x1b0>
 6bc:	add	w0, w1, #0x1
 6c0:	str	w0, [x19, #100]
 6c4:	add	x1, x19, w1, sxtw
 6c8:	mov	w2, #0xffffff80            	// #-128
 6cc:	strb	w2, [x1, #36]
 6d0:	cmp	w0, #0x37
 6d4:	b.gt	758 <grub_mod_init-0x154>
 6d8:	sxtw	x0, w0
 6dc:	add	x1, x19, #0x24
 6e0:	strb	wzr, [x1, x0]
 6e4:	add	x0, x0, #0x1
 6e8:	cmp	w0, #0x37
 6ec:	b.le	6e0 <grub_mod_init-0x1cc>
 6f0:	mov	w0, #0x38                  	// #56
 6f4:	str	w0, [x19, #100]
 6f8:	b	758 <grub_mod_init-0x154>
 6fc:	add	w0, w1, #0x1
 700:	str	w0, [x19, #100]
 704:	add	x1, x19, w1, sxtw
 708:	mov	w2, #0xffffff80            	// #-128
 70c:	strb	w2, [x1, #36]
 710:	cmp	w0, #0x3f
 714:	b.gt	738 <grub_mod_init-0x174>
 718:	sxtw	x0, w0
 71c:	add	x1, x19, #0x24
 720:	strb	wzr, [x1, x0]
 724:	add	x0, x0, #0x1
 728:	cmp	w0, #0x3f
 72c:	b.le	720 <grub_mod_init-0x18c>
 730:	mov	w0, #0x40                  	// #64
 734:	str	w0, [x19, #100]
 738:	mov	x2, #0x0                   	// #0
 73c:	mov	x1, #0x0                   	// #0
 740:	mov	x0, x19
 744:	bl	518 <grub_mod_init-0x394>
 748:	mov	x2, #0x38                  	// #56
 74c:	mov	w1, #0x0                   	// #0
 750:	add	x0, x19, #0x24
 754:	bl	0 <grub_memset>
 758:	strb	wzr, [x19, #92]
 75c:	strb	wzr, [x19, #93]
 760:	lsr	w0, w20, #8
 764:	strb	w0, [x19, #94]
 768:	strb	w20, [x19, #95]
 76c:	lsr	w0, w21, #24
 770:	strb	w0, [x19, #96]
 774:	lsr	w0, w21, #16
 778:	strb	w0, [x19, #97]
 77c:	lsr	w0, w21, #8
 780:	strb	w0, [x19, #98]
 784:	strb	w21, [x19, #99]
 788:	add	x1, x19, #0x24
 78c:	mov	x0, x19
 790:	bl	d8 <grub_mod_init-0x7d4>
 794:	mov	w0, #0x148                 	// #328
 798:	bl	0 <_gcry_burn_stack>
 79c:	ldr	w0, [x19]
 7a0:	lsr	w1, w0, #24
 7a4:	strb	w1, [x19, #36]
 7a8:	lsr	w1, w0, #16
 7ac:	strb	w1, [x19, #37]
 7b0:	lsr	w1, w0, #8
 7b4:	strb	w1, [x19, #38]
 7b8:	strb	w0, [x19, #39]
 7bc:	ldr	w0, [x19, #4]
 7c0:	lsr	w1, w0, #24
 7c4:	strb	w1, [x19, #40]
 7c8:	lsr	w1, w0, #16
 7cc:	strb	w1, [x19, #41]
 7d0:	lsr	w1, w0, #8
 7d4:	strb	w1, [x19, #42]
 7d8:	strb	w0, [x19, #43]
 7dc:	ldr	w0, [x19, #8]
 7e0:	lsr	w1, w0, #24
 7e4:	strb	w1, [x19, #44]
 7e8:	lsr	w1, w0, #16
 7ec:	strb	w1, [x19, #45]
 7f0:	lsr	w1, w0, #8
 7f4:	strb	w1, [x19, #46]
 7f8:	strb	w0, [x19, #47]
 7fc:	ldr	w0, [x19, #12]
 800:	lsr	w1, w0, #24
 804:	strb	w1, [x19, #48]
 808:	lsr	w1, w0, #16
 80c:	strb	w1, [x19, #49]
 810:	lsr	w1, w0, #8
 814:	strb	w1, [x19, #50]
 818:	strb	w0, [x19, #51]
 81c:	ldr	w0, [x19, #16]
 820:	lsr	w1, w0, #24
 824:	strb	w1, [x19, #52]
 828:	lsr	w1, w0, #16
 82c:	strb	w1, [x19, #53]
 830:	lsr	w1, w0, #8
 834:	strb	w1, [x19, #54]
 838:	strb	w0, [x19, #55]
 83c:	ldr	w0, [x19, #20]
 840:	lsr	w1, w0, #24
 844:	strb	w1, [x19, #56]
 848:	lsr	w1, w0, #16
 84c:	strb	w1, [x19, #57]
 850:	lsr	w1, w0, #8
 854:	strb	w1, [x19, #58]
 858:	strb	w0, [x19, #59]
 85c:	ldr	w0, [x19, #24]
 860:	lsr	w1, w0, #24
 864:	strb	w1, [x19, #60]
 868:	lsr	w1, w0, #16
 86c:	strb	w1, [x19, #61]
 870:	lsr	w1, w0, #8
 874:	strb	w1, [x19, #62]
 878:	strb	w0, [x19, #63]
 87c:	ldr	w0, [x19, #28]
 880:	lsr	w1, w0, #24
 884:	strb	w1, [x19, #64]
 888:	lsr	w1, w0, #16
 88c:	strb	w1, [x19, #65]
 890:	lsr	w1, w0, #8
 894:	strb	w1, [x19, #66]
 898:	strb	w0, [x19, #67]
 89c:	ldp	x19, x20, [sp, #16]
 8a0:	ldr	x21, [sp, #32]
 8a4:	ldp	x29, x30, [sp], #48
 8a8:	ret

00000000000008ac <grub_mod_init>:
 8ac:	stp	x29, x30, [sp, #-32]!
 8b0:	mov	x29, sp
 8b4:	str	x19, [sp, #16]
 8b8:	adrp	x0, 0 <grub_mod_init-0x8ac>
 8bc:	ldr	x19, [x0]
 8c0:	mov	x0, x19
 8c4:	bl	0 <grub_md_register>
 8c8:	add	x0, x19, #0x60
 8cc:	bl	0 <grub_md_register>
 8d0:	ldr	x19, [sp, #16]
 8d4:	ldp	x29, x30, [sp], #32
 8d8:	ret
 8dc:	nop
	...

00000000000008e8 <grub_mod_fini>:
 8e8:	stp	x29, x30, [sp, #-32]!
 8ec:	mov	x29, sp
 8f0:	str	x19, [sp, #16]
 8f4:	adrp	x0, 0 <grub_mod_init-0x8ac>
 8f8:	ldr	x19, [x0]
 8fc:	mov	x0, x19
 900:	bl	0 <grub_md_unregister>
 904:	add	x0, x19, #0x60
 908:	bl	0 <grub_md_unregister>
 90c:	ldr	x19, [sp, #16]
 910:	ldp	x29, x30, [sp], #32
 914:	ret
	...
