
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-network-generator_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401a00 <_init>:
  401a00:	stp	x29, x30, [sp, #-16]!
  401a04:	mov	x29, sp
  401a08:	bl	401ea8 <call_weak_fn>
  401a0c:	ldp	x29, x30, [sp], #16
  401a10:	ret

Disassembly of section .plt:

0000000000401a18 <__libc_start_main@plt-0x20>:
  401a18:	stp	x16, x30, [sp, #-16]!
  401a1c:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401a20:	ldr	x17, [x16, #3528]
  401a24:	add	x16, x16, #0xdc8
  401a28:	br	x17
  401a2c:	nop
  401a30:	nop
  401a34:	nop

0000000000401a38 <__libc_start_main@plt>:
  401a38:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401a3c:	ldr	x17, [x16, #3536]
  401a40:	add	x16, x16, #0xdd0
  401a44:	br	x17

0000000000401a48 <abort@plt>:
  401a48:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401a4c:	ldr	x17, [x16, #3544]
  401a50:	add	x16, x16, #0xdd8
  401a54:	br	x17

0000000000401a58 <__gmon_start__@plt>:
  401a58:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401a5c:	ldr	x17, [x16, #3552]
  401a60:	add	x16, x16, #0xde0
  401a64:	br	x17

0000000000401a68 <ask_password_agent_close@plt>:
  401a68:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401a6c:	ldr	x17, [x16, #3560]
  401a70:	add	x16, x16, #0xde8
  401a74:	br	x17

0000000000401a78 <polkit_agent_close@plt>:
  401a78:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401a7c:	ldr	x17, [x16, #3568]
  401a80:	add	x16, x16, #0xdf0
  401a84:	br	x17

0000000000401a88 <pager_close@plt>:
  401a88:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401a8c:	ldr	x17, [x16, #3576]
  401a90:	add	x16, x16, #0xdf8
  401a94:	br	x17

0000000000401a98 <mac_selinux_finish@plt>:
  401a98:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401a9c:	ldr	x17, [x16, #3584]
  401aa0:	add	x16, x16, #0xe00
  401aa4:	br	x17

0000000000401aa8 <proc_cmdline_parse@plt>:
  401aa8:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401aac:	ldr	x17, [x16, #3592]
  401ab0:	add	x16, x16, #0xe08
  401ab4:	br	x17

0000000000401ab8 <log_get_max_level_realm@plt>:
  401ab8:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401abc:	ldr	x17, [x16, #3600]
  401ac0:	add	x16, x16, #0xe10
  401ac4:	br	x17

0000000000401ac8 <log_internal_realm@plt>:
  401ac8:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401acc:	ldr	x17, [x16, #3608]
  401ad0:	add	x16, x16, #0xe18
  401ad4:	br	x17

0000000000401ad8 <abs@plt>:
  401ad8:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401adc:	ldr	x17, [x16, #3616]
  401ae0:	add	x16, x16, #0xe20
  401ae4:	br	x17

0000000000401ae8 <strdup@plt>:
  401ae8:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401aec:	ldr	x17, [x16, #3624]
  401af0:	add	x16, x16, #0xe28
  401af4:	br	x17

0000000000401af8 <log_oom_internal@plt>:
  401af8:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401afc:	ldr	x17, [x16, #3632]
  401b00:	add	x16, x16, #0xe30
  401b04:	br	x17

0000000000401b08 <strchr@plt>:
  401b08:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401b0c:	ldr	x17, [x16, #3640]
  401b10:	add	x16, x16, #0xe38
  401b14:	br	x17

0000000000401b18 <log_assert_failed_realm@plt>:
  401b18:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401b1c:	ldr	x17, [x16, #3648]
  401b20:	add	x16, x16, #0xe40
  401b24:	br	x17

0000000000401b28 <getopt_long@plt>:
  401b28:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401b2c:	ldr	x17, [x16, #3656]
  401b30:	add	x16, x16, #0xe48
  401b34:	br	x17

0000000000401b38 <version@plt>:
  401b38:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401b3c:	ldr	x17, [x16, #3664]
  401b40:	add	x16, x16, #0xe50
  401b44:	br	x17

0000000000401b48 <log_assert_failed_unreachable_realm@plt>:
  401b48:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401b4c:	ldr	x17, [x16, #3672]
  401b50:	add	x16, x16, #0xe58
  401b54:	br	x17

0000000000401b58 <free@plt>:
  401b58:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401b5c:	ldr	x17, [x16, #3680]
  401b60:	add	x16, x16, #0xe60
  401b64:	br	x17

0000000000401b68 <strlen@plt>:
  401b68:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401b6c:	ldr	x17, [x16, #3688]
  401b70:	add	x16, x16, #0xe68
  401b74:	br	x17

0000000000401b78 <stpcpy@plt>:
  401b78:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401b7c:	ldr	x17, [x16, #3696]
  401b80:	add	x16, x16, #0xe70
  401b84:	br	x17

0000000000401b88 <strcpy@plt>:
  401b88:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401b8c:	ldr	x17, [x16, #3704]
  401b90:	add	x16, x16, #0xe78
  401b94:	br	x17

0000000000401b98 <mkdir_p@plt>:
  401b98:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401b9c:	ldr	x17, [x16, #3712]
  401ba0:	add	x16, x16, #0xe80
  401ba4:	br	x17

0000000000401ba8 <printf@plt>:
  401ba8:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401bac:	ldr	x17, [x16, #3720]
  401bb0:	add	x16, x16, #0xe88
  401bb4:	br	x17

0000000000401bb8 <internal_hashmap_iterate@plt>:
  401bb8:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401bbc:	ldr	x17, [x16, #3728]
  401bc0:	add	x16, x16, #0xe90
  401bc4:	br	x17

0000000000401bc8 <asprintf@plt>:
  401bc8:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401bcc:	ldr	x17, [x16, #3736]
  401bd0:	add	x16, x16, #0xe98
  401bd4:	br	x17

0000000000401bd8 <generator_open_unit_file@plt>:
  401bd8:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401bdc:	ldr	x17, [x16, #3744]
  401be0:	add	x16, x16, #0xea0
  401be4:	br	x17

0000000000401be8 <safe_fclose@plt>:
  401be8:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401bec:	ldr	x17, [x16, #3752]
  401bf0:	add	x16, x16, #0xea8
  401bf4:	br	x17

0000000000401bf8 <internal_hashmap_get@plt>:
  401bf8:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401bfc:	ldr	x17, [x16, #3760]
  401c00:	add	x16, x16, #0xeb0
  401c04:	br	x17

0000000000401c08 <strcmp@plt>:
  401c08:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401c0c:	ldr	x17, [x16, #3768]
  401c10:	add	x16, x16, #0xeb8
  401c14:	br	x17

0000000000401c18 <strnlen@plt>:
  401c18:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401c1c:	ldr	x17, [x16, #3776]
  401c20:	add	x16, x16, #0xec0
  401c24:	br	x17

0000000000401c28 <memcpy@plt>:
  401c28:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401c2c:	ldr	x17, [x16, #3784]
  401c30:	add	x16, x16, #0xec8
  401c34:	br	x17

0000000000401c38 <in_addr_prefix_from_string@plt>:
  401c38:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401c3c:	ldr	x17, [x16, #3792]
  401c40:	add	x16, x16, #0xed0
  401c44:	br	x17

0000000000401c48 <parse_boolean@plt>:
  401c48:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401c4c:	ldr	x17, [x16, #3800]
  401c50:	add	x16, x16, #0xed8
  401c54:	br	x17

0000000000401c58 <extract_first_word@plt>:
  401c58:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401c5c:	ldr	x17, [x16, #3808]
  401c60:	add	x16, x16, #0xee0
  401c64:	br	x17

0000000000401c68 <parse_mtu@plt>:
  401c68:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401c6c:	ldr	x17, [x16, #3816]
  401c70:	add	x16, x16, #0xee8
  401c74:	br	x17

0000000000401c78 <ether_addr_from_string@plt>:
  401c78:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401c7c:	ldr	x17, [x16, #3824]
  401c80:	add	x16, x16, #0xef0
  401c84:	br	x17

0000000000401c88 <strv_extend_strv@plt>:
  401c88:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401c8c:	ldr	x17, [x16, #3832]
  401c90:	add	x16, x16, #0xef8
  401c94:	br	x17

0000000000401c98 <internal_hashmap_size@plt>:
  401c98:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401c9c:	ldr	x17, [x16, #3840]
  401ca0:	add	x16, x16, #0xf00
  401ca4:	br	x17

0000000000401ca8 <internal_hashmap_remove@plt>:
  401ca8:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401cac:	ldr	x17, [x16, #3848]
  401cb0:	add	x16, x16, #0xf08
  401cb4:	br	x17

0000000000401cb8 <strv_free@plt>:
  401cb8:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401cbc:	ldr	x17, [x16, #3856]
  401cc0:	add	x16, x16, #0xf10
  401cc4:	br	x17

0000000000401cc8 <internal_hashmap_first_key_and_value@plt>:
  401cc8:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401ccc:	ldr	x17, [x16, #3864]
  401cd0:	add	x16, x16, #0xf18
  401cd4:	br	x17

0000000000401cd8 <internal_hashmap_free@plt>:
  401cd8:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401cdc:	ldr	x17, [x16, #3872]
  401ce0:	add	x16, x16, #0xf20
  401ce4:	br	x17

0000000000401ce8 <fprintf@plt>:
  401ce8:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401cec:	ldr	x17, [x16, #3880]
  401cf0:	add	x16, x16, #0xf28
  401cf4:	br	x17

0000000000401cf8 <fputs@plt>:
  401cf8:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401cfc:	ldr	x17, [x16, #3888]
  401d00:	add	x16, x16, #0xf30
  401d04:	br	x17

0000000000401d08 <ether_addr_to_string@plt>:
  401d08:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401d0c:	ldr	x17, [x16, #3896]
  401d10:	add	x16, x16, #0xf38
  401d14:	br	x17

0000000000401d18 <in_addr_prefix_to_string@plt>:
  401d18:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401d1c:	ldr	x17, [x16, #3904]
  401d20:	add	x16, x16, #0xf40
  401d24:	br	x17

0000000000401d28 <in_addr_is_null@plt>:
  401d28:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401d2c:	ldr	x17, [x16, #3912]
  401d30:	add	x16, x16, #0xf48
  401d34:	br	x17

0000000000401d38 <in_addr_to_string@plt>:
  401d38:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401d3c:	ldr	x17, [x16, #3920]
  401d40:	add	x16, x16, #0xf50
  401d44:	br	x17

0000000000401d48 <open_memstream_unlocked@plt>:
  401d48:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401d4c:	ldr	x17, [x16, #3928]
  401d50:	add	x16, x16, #0xf58
  401d54:	br	x17

0000000000401d58 <fputc@plt>:
  401d58:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401d5c:	ldr	x17, [x16, #3936]
  401d60:	add	x16, x16, #0xf60
  401d64:	br	x17

0000000000401d68 <fflush_and_check@plt>:
  401d68:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401d6c:	ldr	x17, [x16, #3944]
  401d70:	add	x16, x16, #0xf68
  401d74:	br	x17

0000000000401d78 <hostname_is_valid@plt>:
  401d78:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401d7c:	ldr	x17, [x16, #3952]
  401d80:	add	x16, x16, #0xf70
  401d84:	br	x17

0000000000401d88 <string_table_lookup@plt>:
  401d88:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401d8c:	ldr	x17, [x16, #3960]
  401d90:	add	x16, x16, #0xf78
  401d94:	br	x17

0000000000401d98 <ifname_valid@plt>:
  401d98:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401d9c:	ldr	x17, [x16, #3968]
  401da0:	add	x16, x16, #0xf80
  401da4:	br	x17

0000000000401da8 <memset@plt>:
  401da8:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401dac:	ldr	x17, [x16, #3976]
  401db0:	add	x16, x16, #0xf88
  401db4:	br	x17

0000000000401db8 <internal_hashmap_ensure_allocated@plt>:
  401db8:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401dbc:	ldr	x17, [x16, #3984]
  401dc0:	add	x16, x16, #0xf90
  401dc4:	br	x17

0000000000401dc8 <hashmap_put@plt>:
  401dc8:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401dcc:	ldr	x17, [x16, #3992]
  401dd0:	add	x16, x16, #0xf98
  401dd4:	br	x17

0000000000401dd8 <malloc@plt>:
  401dd8:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401ddc:	ldr	x17, [x16, #4000]
  401de0:	add	x16, x16, #0xfa0
  401de4:	br	x17

0000000000401de8 <in_addr_from_string@plt>:
  401de8:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401dec:	ldr	x17, [x16, #4008]
  401df0:	add	x16, x16, #0xfa8
  401df4:	br	x17

0000000000401df8 <in4_addr_netmask_to_prefixlen@plt>:
  401df8:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401dfc:	ldr	x17, [x16, #4016]
  401e00:	add	x16, x16, #0xfb0
  401e04:	br	x17

0000000000401e08 <safe_atou8@plt>:
  401e08:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401e0c:	ldr	x17, [x16, #4024]
  401e10:	add	x16, x16, #0xfb8
  401e14:	br	x17

0000000000401e18 <free_and_strdup@plt>:
  401e18:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401e1c:	ldr	x17, [x16, #4032]
  401e20:	add	x16, x16, #0xfc0
  401e24:	br	x17

0000000000401e28 <in_addr_from_string_auto@plt>:
  401e28:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401e2c:	ldr	x17, [x16, #4040]
  401e30:	add	x16, x16, #0xfc8
  401e34:	br	x17

0000000000401e38 <strv_extend@plt>:
  401e38:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401e3c:	ldr	x17, [x16, #4048]
  401e40:	add	x16, x16, #0xfd0
  401e44:	br	x17

0000000000401e48 <ether_addr_compare@plt>:
  401e48:	adrp	x16, 41f000 <__FRAME_END__+0x16648>
  401e4c:	ldr	x17, [x16, #4056]
  401e50:	add	x16, x16, #0xfd8
  401e54:	br	x17

Disassembly of section .text:

0000000000401e58 <_start>:
  401e58:	mov	x29, #0x0                   	// #0
  401e5c:	mov	x30, #0x0                   	// #0
  401e60:	mov	x5, x0
  401e64:	ldr	x1, [sp]
  401e68:	add	x2, sp, #0x8
  401e6c:	mov	x6, sp
  401e70:	movz	x0, #0x0, lsl #48
  401e74:	movk	x0, #0x0, lsl #32
  401e78:	movk	x0, #0x40, lsl #16
  401e7c:	movk	x0, #0x2020
  401e80:	movz	x3, #0x0, lsl #48
  401e84:	movk	x3, #0x0, lsl #32
  401e88:	movk	x3, #0x40, lsl #16
  401e8c:	movk	x3, #0x7da8
  401e90:	movz	x4, #0x0, lsl #48
  401e94:	movk	x4, #0x0, lsl #32
  401e98:	movk	x4, #0x40, lsl #16
  401e9c:	movk	x4, #0x7e28
  401ea0:	bl	401a38 <__libc_start_main@plt>
  401ea4:	bl	401a48 <abort@plt>

0000000000401ea8 <call_weak_fn>:
  401ea8:	adrp	x0, 41f000 <__FRAME_END__+0x16648>
  401eac:	ldr	x0, [x0, #3488]
  401eb0:	cbz	x0, 401eb8 <call_weak_fn+0x10>
  401eb4:	b	401a58 <__gmon_start__@plt>
  401eb8:	ret

0000000000401ebc <deregister_tm_clones>:
  401ebc:	stp	x29, x30, [sp, #-32]!
  401ec0:	mov	x29, sp
  401ec4:	adrp	x0, 420000 <completed.8445>
  401ec8:	add	x0, x0, #0x0
  401ecc:	str	x0, [sp, #24]
  401ed0:	ldr	x0, [sp, #24]
  401ed4:	str	x0, [sp, #24]
  401ed8:	ldr	x1, [sp, #24]
  401edc:	adrp	x0, 420000 <completed.8445>
  401ee0:	add	x0, x0, #0x0
  401ee4:	cmp	x1, x0
  401ee8:	b.eq	401f24 <deregister_tm_clones+0x68>  // b.none
  401eec:	adrp	x0, 407000 <network_set_dns+0x4>
  401ef0:	add	x0, x0, #0xe40
  401ef4:	ldr	x0, [x0]
  401ef8:	str	x0, [sp, #16]
  401efc:	ldr	x0, [sp, #16]
  401f00:	str	x0, [sp, #16]
  401f04:	ldr	x0, [sp, #16]
  401f08:	cmp	x0, #0x0
  401f0c:	b.eq	401f28 <deregister_tm_clones+0x6c>  // b.none
  401f10:	ldr	x1, [sp, #16]
  401f14:	adrp	x0, 420000 <completed.8445>
  401f18:	add	x0, x0, #0x0
  401f1c:	blr	x1
  401f20:	b	401f28 <deregister_tm_clones+0x6c>
  401f24:	nop
  401f28:	ldp	x29, x30, [sp], #32
  401f2c:	ret

0000000000401f30 <register_tm_clones>:
  401f30:	stp	x29, x30, [sp, #-48]!
  401f34:	mov	x29, sp
  401f38:	adrp	x0, 420000 <completed.8445>
  401f3c:	add	x0, x0, #0x0
  401f40:	str	x0, [sp, #40]
  401f44:	ldr	x0, [sp, #40]
  401f48:	str	x0, [sp, #40]
  401f4c:	ldr	x1, [sp, #40]
  401f50:	adrp	x0, 420000 <completed.8445>
  401f54:	add	x0, x0, #0x0
  401f58:	sub	x0, x1, x0
  401f5c:	asr	x0, x0, #3
  401f60:	lsr	x1, x0, #63
  401f64:	add	x0, x1, x0
  401f68:	asr	x0, x0, #1
  401f6c:	str	x0, [sp, #32]
  401f70:	ldr	x0, [sp, #32]
  401f74:	cmp	x0, #0x0
  401f78:	b.eq	401fb8 <register_tm_clones+0x88>  // b.none
  401f7c:	adrp	x0, 407000 <network_set_dns+0x4>
  401f80:	add	x0, x0, #0xe48
  401f84:	ldr	x0, [x0]
  401f88:	str	x0, [sp, #24]
  401f8c:	ldr	x0, [sp, #24]
  401f90:	str	x0, [sp, #24]
  401f94:	ldr	x0, [sp, #24]
  401f98:	cmp	x0, #0x0
  401f9c:	b.eq	401fbc <register_tm_clones+0x8c>  // b.none
  401fa0:	ldr	x2, [sp, #24]
  401fa4:	ldr	x1, [sp, #32]
  401fa8:	adrp	x0, 420000 <completed.8445>
  401fac:	add	x0, x0, #0x0
  401fb0:	blr	x2
  401fb4:	b	401fbc <register_tm_clones+0x8c>
  401fb8:	nop
  401fbc:	ldp	x29, x30, [sp], #48
  401fc0:	ret

0000000000401fc4 <__do_global_dtors_aux>:
  401fc4:	stp	x29, x30, [sp, #-16]!
  401fc8:	mov	x29, sp
  401fcc:	adrp	x0, 420000 <completed.8445>
  401fd0:	add	x0, x0, #0x0
  401fd4:	ldrb	w0, [x0]
  401fd8:	and	x0, x0, #0xff
  401fdc:	cmp	x0, #0x0
  401fe0:	b.ne	401ffc <__do_global_dtors_aux+0x38>  // b.any
  401fe4:	bl	401ebc <deregister_tm_clones>
  401fe8:	adrp	x0, 420000 <completed.8445>
  401fec:	add	x0, x0, #0x0
  401ff0:	mov	w1, #0x1                   	// #1
  401ff4:	strb	w1, [x0]
  401ff8:	b	402000 <__do_global_dtors_aux+0x3c>
  401ffc:	nop
  402000:	ldp	x29, x30, [sp], #16
  402004:	ret

0000000000402008 <frame_dummy>:
  402008:	stp	x29, x30, [sp, #-16]!
  40200c:	mov	x29, sp
  402010:	bl	401f30 <register_tm_clones>
  402014:	nop
  402018:	ldp	x29, x30, [sp], #16
  40201c:	ret

0000000000402020 <main>:
  402020:	sub	sp, sp, #0x30
  402024:	stp	x29, x30, [sp, #32]
  402028:	add	x29, sp, #0x20
  40202c:	mov	w8, wzr
  402030:	mov	w9, #0x1                   	// #1
  402034:	stur	wzr, [x29, #-4]
  402038:	stur	w0, [x29, #-8]
  40203c:	str	x1, [sp, #16]
  402040:	ldur	w0, [x29, #-8]
  402044:	ldr	x1, [sp, #16]
  402048:	str	w8, [sp, #8]
  40204c:	str	w9, [sp, #4]
  402050:	bl	402098 <save_argc_argv>
  402054:	ldur	w0, [x29, #-8]
  402058:	ldr	x1, [sp, #16]
  40205c:	bl	4020cc <run>
  402060:	str	w0, [sp, #12]
  402064:	bl	401a68 <ask_password_agent_close@plt>
  402068:	bl	401a78 <polkit_agent_close@plt>
  40206c:	bl	401a88 <pager_close@plt>
  402070:	bl	401a98 <mac_selinux_finish@plt>
  402074:	bl	4024cc <static_destruct>
  402078:	ldr	w8, [sp, #12]
  40207c:	cmp	w8, #0x0
  402080:	ldr	w8, [sp, #4]
  402084:	ldr	w9, [sp, #8]
  402088:	csel	w0, w8, w9, lt  // lt = tstop
  40208c:	ldp	x29, x30, [sp, #32]
  402090:	add	sp, sp, #0x30
  402094:	ret

0000000000402098 <save_argc_argv>:
  402098:	sub	sp, sp, #0x10
  40209c:	adrp	x8, 420000 <completed.8445>
  4020a0:	add	x8, x8, #0x10
  4020a4:	adrp	x9, 420000 <completed.8445>
  4020a8:	add	x9, x9, #0x18
  4020ac:	str	w0, [sp, #12]
  4020b0:	str	x1, [sp]
  4020b4:	ldr	w10, [sp, #12]
  4020b8:	str	w10, [x8]
  4020bc:	ldr	x8, [sp]
  4020c0:	str	x8, [x9]
  4020c4:	add	sp, sp, #0x10
  4020c8:	ret

00000000004020cc <run>:
  4020cc:	sub	sp, sp, #0xd0
  4020d0:	stp	x29, x30, [sp, #192]
  4020d4:	add	x29, sp, #0xc0
  4020d8:	adrp	x8, 407000 <network_set_dns+0x4>
  4020dc:	add	x8, x8, #0xe50
  4020e0:	add	x8, x8, #0x3
  4020e4:	adrp	x9, 407000 <network_set_dns+0x4>
  4020e8:	add	x9, x9, #0xe70
  4020ec:	stur	w0, [x29, #-8]
  4020f0:	stur	x1, [x29, #-16]
  4020f4:	stur	xzr, [x29, #-40]
  4020f8:	stur	xzr, [x29, #-32]
  4020fc:	stur	xzr, [x29, #-24]
  402100:	ldur	w0, [x29, #-8]
  402104:	ldur	x1, [x29, #-16]
  402108:	str	x8, [sp, #64]
  40210c:	str	x9, [sp, #56]
  402110:	bl	40254c <parse_argv>
  402114:	stur	w0, [x29, #-48]
  402118:	ldur	w10, [x29, #-48]
  40211c:	cmp	w10, #0x0
  402120:	cset	w10, gt
  402124:	tbnz	w10, #0, 40213c <run+0x70>
  402128:	ldur	w8, [x29, #-48]
  40212c:	stur	w8, [x29, #-4]
  402130:	mov	w8, #0x1                   	// #1
  402134:	stur	w8, [x29, #-52]
  402138:	b	4024b4 <run+0x3e8>
  40213c:	adrp	x8, 420000 <completed.8445>
  402140:	add	x8, x8, #0x20
  402144:	ldr	w9, [x8]
  402148:	ldur	w10, [x29, #-8]
  40214c:	cmp	w9, w10
  402150:	b.lt	402210 <run+0x144>  // b.tstop
  402154:	adrp	x0, 403000 <netdev_save+0x11c>
  402158:	add	x0, x0, #0x298
  40215c:	sub	x1, x29, #0x28
  402160:	mov	w8, wzr
  402164:	mov	w2, w8
  402168:	bl	401aa8 <proc_cmdline_parse@plt>
  40216c:	stur	w0, [x29, #-48]
  402170:	ldur	w8, [x29, #-48]
  402174:	cmp	w8, #0x0
  402178:	cset	w8, ge  // ge = tcont
  40217c:	tbnz	w8, #0, 40220c <run+0x140>
  402180:	mov	w8, #0x4                   	// #4
  402184:	stur	w8, [x29, #-56]
  402188:	ldur	w8, [x29, #-48]
  40218c:	stur	w8, [x29, #-60]
  402190:	stur	wzr, [x29, #-64]
  402194:	ldur	w0, [x29, #-64]
  402198:	bl	401ab8 <log_get_max_level_realm@plt>
  40219c:	ldur	w8, [x29, #-56]
  4021a0:	and	w8, w8, #0x7
  4021a4:	cmp	w0, w8
  4021a8:	b.lt	4021dc <run+0x110>  // b.tstop
  4021ac:	ldur	w8, [x29, #-64]
  4021b0:	ldur	w9, [x29, #-56]
  4021b4:	orr	w0, w9, w8, lsl #10
  4021b8:	ldur	w1, [x29, #-60]
  4021bc:	ldr	x2, [sp, #64]
  4021c0:	mov	w3, #0xb3                  	// #179
  4021c4:	ldr	x4, [sp, #56]
  4021c8:	adrp	x5, 407000 <network_set_dns+0x4>
  4021cc:	add	x5, x5, #0xe74
  4021d0:	bl	401ac8 <log_internal_realm@plt>
  4021d4:	str	w0, [sp, #52]
  4021d8:	b	4021f0 <run+0x124>
  4021dc:	ldur	w0, [x29, #-60]
  4021e0:	bl	401ad8 <abs@plt>
  4021e4:	mov	w8, wzr
  4021e8:	subs	w8, w8, w0, uxtb
  4021ec:	str	w8, [sp, #52]
  4021f0:	ldr	w8, [sp, #52]
  4021f4:	stur	w8, [x29, #-68]
  4021f8:	ldur	w8, [x29, #-68]
  4021fc:	stur	w8, [x29, #-4]
  402200:	mov	w8, #0x1                   	// #1
  402204:	stur	w8, [x29, #-52]
  402208:	b	4024b4 <run+0x3e8>
  40220c:	b	4023f8 <run+0x32c>
  402210:	adrp	x8, 420000 <completed.8445>
  402214:	add	x8, x8, #0x20
  402218:	ldr	w9, [x8]
  40221c:	stur	w9, [x29, #-44]
  402220:	ldur	w8, [x29, #-44]
  402224:	ldur	w9, [x29, #-8]
  402228:	cmp	w8, w9
  40222c:	b.ge	4023f8 <run+0x32c>  // b.tcont
  402230:	mov	x8, xzr
  402234:	stur	x8, [x29, #-80]
  402238:	ldur	x8, [x29, #-16]
  40223c:	ldursw	x9, [x29, #-44]
  402240:	mov	x10, #0x8                   	// #8
  402244:	mul	x9, x10, x9
  402248:	add	x8, x8, x9
  40224c:	ldr	x0, [x8]
  402250:	bl	401ae8 <strdup@plt>
  402254:	stur	x0, [x29, #-80]
  402258:	ldur	x8, [x29, #-80]
  40225c:	cbnz	x8, 402288 <run+0x1bc>
  402260:	mov	w8, wzr
  402264:	mov	w0, w8
  402268:	ldr	x1, [sp, #64]
  40226c:	mov	w2, #0xbb                  	// #187
  402270:	ldr	x3, [sp, #56]
  402274:	bl	401af8 <log_oom_internal@plt>
  402278:	stur	w0, [x29, #-4]
  40227c:	mov	w8, #0x1                   	// #1
  402280:	stur	w8, [x29, #-52]
  402284:	b	4023c8 <run+0x2fc>
  402288:	ldur	x0, [x29, #-80]
  40228c:	mov	w1, #0x3d                  	// #61
  402290:	bl	401b08 <strchr@plt>
  402294:	stur	x0, [x29, #-88]
  402298:	ldur	x8, [x29, #-88]
  40229c:	cbz	x8, 4022b4 <run+0x1e8>
  4022a0:	ldur	x8, [x29, #-88]
  4022a4:	add	x9, x8, #0x1
  4022a8:	stur	x9, [x29, #-88]
  4022ac:	mov	w10, #0x0                   	// #0
  4022b0:	strb	w10, [x8]
  4022b4:	ldur	x0, [x29, #-80]
  4022b8:	ldur	x1, [x29, #-88]
  4022bc:	sub	x2, x29, #0x28
  4022c0:	bl	403298 <parse_cmdline_item>
  4022c4:	stur	w0, [x29, #-48]
  4022c8:	ldur	w8, [x29, #-48]
  4022cc:	cmp	w8, #0x0
  4022d0:	cset	w8, ge  // ge = tcont
  4022d4:	tbnz	w8, #0, 4023c4 <run+0x2f8>
  4022d8:	mov	w8, #0x4                   	// #4
  4022dc:	stur	w8, [x29, #-92]
  4022e0:	ldur	w8, [x29, #-48]
  4022e4:	str	w8, [sp, #96]
  4022e8:	str	wzr, [sp, #92]
  4022ec:	ldr	w0, [sp, #92]
  4022f0:	bl	401ab8 <log_get_max_level_realm@plt>
  4022f4:	ldur	w8, [x29, #-92]
  4022f8:	and	w8, w8, #0x7
  4022fc:	cmp	w0, w8
  402300:	b.lt	402394 <run+0x2c8>  // b.tstop
  402304:	ldr	w8, [sp, #92]
  402308:	ldur	w9, [x29, #-92]
  40230c:	orr	w0, w9, w8, lsl #10
  402310:	ldr	w1, [sp, #96]
  402314:	ldur	x6, [x29, #-80]
  402318:	ldur	x10, [x29, #-88]
  40231c:	adrp	x11, 407000 <network_set_dns+0x4>
  402320:	add	x11, x11, #0xec8
  402324:	adrp	x12, 407000 <network_set_dns+0x4>
  402328:	add	x12, x12, #0xec6
  40232c:	cmp	x10, #0x0
  402330:	csel	x7, x12, x11, ne  // ne = any
  402334:	ldur	x10, [x29, #-88]
  402338:	str	w0, [sp, #48]
  40233c:	mov	x0, x10
  402340:	str	w1, [sp, #44]
  402344:	str	x6, [sp, #32]
  402348:	str	x7, [sp, #24]
  40234c:	bl	402730 <strempty>
  402350:	ldr	w8, [sp, #48]
  402354:	str	x0, [sp, #16]
  402358:	mov	w0, w8
  40235c:	ldr	w1, [sp, #44]
  402360:	ldr	x2, [sp, #64]
  402364:	mov	w3, #0xc4                  	// #196
  402368:	ldr	x4, [sp, #56]
  40236c:	adrp	x5, 407000 <network_set_dns+0x4>
  402370:	add	x5, x5, #0xe9c
  402374:	ldr	x6, [sp, #32]
  402378:	ldr	x7, [sp, #24]
  40237c:	mov	x10, sp
  402380:	ldr	x11, [sp, #16]
  402384:	str	x11, [x10]
  402388:	bl	401ac8 <log_internal_realm@plt>
  40238c:	str	w0, [sp, #12]
  402390:	b	4023a8 <run+0x2dc>
  402394:	ldr	w0, [sp, #96]
  402398:	bl	401ad8 <abs@plt>
  40239c:	mov	w8, wzr
  4023a0:	subs	w8, w8, w0, uxtb
  4023a4:	str	w8, [sp, #12]
  4023a8:	ldr	w8, [sp, #12]
  4023ac:	str	w8, [sp, #88]
  4023b0:	ldr	w8, [sp, #88]
  4023b4:	stur	w8, [x29, #-4]
  4023b8:	mov	w8, #0x1                   	// #1
  4023bc:	stur	w8, [x29, #-52]
  4023c0:	b	4023c8 <run+0x2fc>
  4023c4:	stur	wzr, [x29, #-52]
  4023c8:	sub	x0, x29, #0x50
  4023cc:	bl	402708 <freep>
  4023d0:	ldur	w8, [x29, #-52]
  4023d4:	cmp	w8, #0x0
  4023d8:	cset	w8, eq  // eq = none
  4023dc:	eor	w8, w8, #0x1
  4023e0:	tbnz	w8, #0, 4024b4 <run+0x3e8>
  4023e4:	b	4023e8 <run+0x31c>
  4023e8:	ldur	w8, [x29, #-44]
  4023ec:	add	w8, w8, #0x1
  4023f0:	stur	w8, [x29, #-44]
  4023f4:	b	402220 <run+0x154>
  4023f8:	sub	x0, x29, #0x28
  4023fc:	bl	4043d0 <context_merge_networks>
  402400:	stur	w0, [x29, #-48]
  402404:	ldur	w8, [x29, #-48]
  402408:	cmp	w8, #0x0
  40240c:	cset	w8, ge  // ge = tcont
  402410:	tbnz	w8, #0, 4024a0 <run+0x3d4>
  402414:	mov	w8, #0x4                   	// #4
  402418:	str	w8, [sp, #84]
  40241c:	ldur	w8, [x29, #-48]
  402420:	str	w8, [sp, #80]
  402424:	str	wzr, [sp, #76]
  402428:	ldr	w0, [sp, #76]
  40242c:	bl	401ab8 <log_get_max_level_realm@plt>
  402430:	ldr	w8, [sp, #84]
  402434:	and	w8, w8, #0x7
  402438:	cmp	w0, w8
  40243c:	b.lt	402470 <run+0x3a4>  // b.tstop
  402440:	ldr	w8, [sp, #76]
  402444:	ldr	w9, [sp, #84]
  402448:	orr	w0, w9, w8, lsl #10
  40244c:	ldr	w1, [sp, #80]
  402450:	ldr	x2, [sp, #64]
  402454:	mov	w3, #0xca                  	// #202
  402458:	ldr	x4, [sp, #56]
  40245c:	adrp	x5, 407000 <network_set_dns+0x4>
  402460:	add	x5, x5, #0xec9
  402464:	bl	401ac8 <log_internal_realm@plt>
  402468:	str	w0, [sp, #8]
  40246c:	b	402484 <run+0x3b8>
  402470:	ldr	w0, [sp, #80]
  402474:	bl	401ad8 <abs@plt>
  402478:	mov	w8, wzr
  40247c:	subs	w8, w8, w0, uxtb
  402480:	str	w8, [sp, #8]
  402484:	ldr	w8, [sp, #8]
  402488:	str	w8, [sp, #72]
  40248c:	ldr	w8, [sp, #72]
  402490:	stur	w8, [x29, #-4]
  402494:	mov	w8, #0x1                   	// #1
  402498:	stur	w8, [x29, #-52]
  40249c:	b	4024b4 <run+0x3e8>
  4024a0:	sub	x0, x29, #0x28
  4024a4:	bl	40276c <context_save>
  4024a8:	stur	w0, [x29, #-4]
  4024ac:	mov	w8, #0x1                   	// #1
  4024b0:	stur	w8, [x29, #-52]
  4024b4:	sub	x0, x29, #0x28
  4024b8:	bl	404960 <context_clear>
  4024bc:	ldur	w0, [x29, #-4]
  4024c0:	ldp	x29, x30, [sp, #192]
  4024c4:	add	sp, sp, #0xd0
  4024c8:	ret

00000000004024cc <static_destruct>:
  4024cc:	sub	sp, sp, #0x20
  4024d0:	stp	x29, x30, [sp, #16]
  4024d4:	add	x29, sp, #0x10
  4024d8:	adrp	x8, 41f000 <__FRAME_END__+0x16648>
  4024dc:	ldr	x8, [x8, #3496]
  4024e0:	str	x8, [sp]
  4024e4:	cbnz	x8, 4024ec <static_destruct+0x20>
  4024e8:	b	402540 <static_destruct+0x74>
  4024ec:	ldr	x0, [sp]
  4024f0:	mov	x1, #0x8                   	// #8
  4024f4:	bl	4031ac <ALIGN_TO>
  4024f8:	str	x0, [sp, #8]
  4024fc:	ldr	x8, [sp, #8]
  402500:	adrp	x9, 41f000 <__FRAME_END__+0x16648>
  402504:	ldr	x9, [x9, #3504]
  402508:	cmp	x8, x9
  40250c:	b.cs	402540 <static_destruct+0x74>  // b.hs, b.nlast
  402510:	ldr	x8, [sp, #8]
  402514:	ldr	x8, [x8, #8]
  402518:	ldr	x9, [sp, #8]
  40251c:	ldr	x0, [x9]
  402520:	blr	x8
  402524:	ldr	x8, [sp, #8]
  402528:	add	x8, x8, #0x10
  40252c:	mov	x0, x8
  402530:	mov	x1, #0x8                   	// #8
  402534:	bl	4031ac <ALIGN_TO>
  402538:	str	x0, [sp, #8]
  40253c:	b	4024fc <static_destruct+0x30>
  402540:	ldp	x29, x30, [sp, #16]
  402544:	add	sp, sp, #0x20
  402548:	ret

000000000040254c <parse_argv>:
  40254c:	sub	sp, sp, #0x40
  402550:	stp	x29, x30, [sp, #48]
  402554:	add	x29, sp, #0x30
  402558:	adrp	x8, 407000 <network_set_dns+0x4>
  40255c:	add	x8, x8, #0xe50
  402560:	add	x8, x8, #0x3
  402564:	adrp	x9, 407000 <network_set_dns+0x4>
  402568:	add	x9, x9, #0xf17
  40256c:	stur	w0, [x29, #-8]
  402570:	stur	x1, [x29, #-16]
  402574:	str	x8, [sp, #16]
  402578:	str	x9, [sp, #8]
  40257c:	ldur	w8, [x29, #-8]
  402580:	cmp	w8, #0x0
  402584:	cset	w8, ge  // ge = tcont
  402588:	mov	w9, #0x1                   	// #1
  40258c:	eor	w8, w8, #0x1
  402590:	eor	w8, w8, w9
  402594:	eor	w8, w8, w9
  402598:	and	w8, w8, #0x1
  40259c:	mov	w0, w8
  4025a0:	sxtw	x10, w0
  4025a4:	cbz	x10, 4025c8 <parse_argv+0x7c>
  4025a8:	mov	w8, wzr
  4025ac:	mov	w0, w8
  4025b0:	adrp	x1, 407000 <network_set_dns+0x4>
  4025b4:	add	x1, x1, #0xf0d
  4025b8:	ldr	x2, [sp, #16]
  4025bc:	mov	w3, #0x8d                  	// #141
  4025c0:	ldr	x4, [sp, #8]
  4025c4:	bl	401b18 <log_assert_failed_realm@plt>
  4025c8:	ldur	x8, [x29, #-16]
  4025cc:	cmp	x8, #0x0
  4025d0:	cset	w9, ne  // ne = any
  4025d4:	mov	w10, #0x1                   	// #1
  4025d8:	eor	w9, w9, #0x1
  4025dc:	eor	w9, w9, w10
  4025e0:	eor	w9, w9, w10
  4025e4:	and	w9, w9, #0x1
  4025e8:	mov	w0, w9
  4025ec:	sxtw	x8, w0
  4025f0:	cbz	x8, 402614 <parse_argv+0xc8>
  4025f4:	mov	w8, wzr
  4025f8:	mov	w0, w8
  4025fc:	adrp	x1, 407000 <network_set_dns+0x4>
  402600:	add	x1, x1, #0xf34
  402604:	ldr	x2, [sp, #16]
  402608:	mov	w3, #0x8e                  	// #142
  40260c:	ldr	x4, [sp, #8]
  402610:	bl	401b18 <log_assert_failed_realm@plt>
  402614:	ldur	w0, [x29, #-8]
  402618:	ldur	x1, [x29, #-16]
  40261c:	adrp	x2, 407000 <network_set_dns+0x4>
  402620:	add	x2, x2, #0xf39
  402624:	adrp	x3, 408000 <_fini+0x1d4>
  402628:	add	x3, x3, #0x7a8
  40262c:	mov	x8, xzr
  402630:	mov	x4, x8
  402634:	bl	401b28 <getopt_long@plt>
  402638:	stur	w0, [x29, #-20]
  40263c:	cmp	w0, #0x0
  402640:	cset	w9, lt  // lt = tstop
  402644:	tbnz	w9, #0, 4026f0 <parse_argv+0x1a4>
  402648:	ldur	w8, [x29, #-20]
  40264c:	cmp	w8, #0x3f
  402650:	str	w8, [sp, #4]
  402654:	b.eq	4026c0 <parse_argv+0x174>  // b.none
  402658:	b	40265c <parse_argv+0x110>
  40265c:	ldr	w8, [sp, #4]
  402660:	cmp	w8, #0x68
  402664:	b.eq	40268c <parse_argv+0x140>  // b.none
  402668:	b	40266c <parse_argv+0x120>
  40266c:	ldr	w8, [sp, #4]
  402670:	cmp	w8, #0x100
  402674:	b.eq	402698 <parse_argv+0x14c>  // b.none
  402678:	b	40267c <parse_argv+0x130>
  40267c:	ldr	w8, [sp, #4]
  402680:	cmp	w8, #0x101
  402684:	b.eq	4026a4 <parse_argv+0x158>  // b.none
  402688:	b	4026cc <parse_argv+0x180>
  40268c:	bl	402c10 <help>
  402690:	stur	w0, [x29, #-4]
  402694:	b	4026f8 <parse_argv+0x1ac>
  402698:	bl	401b38 <version@plt>
  40269c:	stur	w0, [x29, #-4]
  4026a0:	b	4026f8 <parse_argv+0x1ac>
  4026a4:	adrp	x8, 420000 <completed.8445>
  4026a8:	add	x8, x8, #0x28
  4026ac:	ldr	x8, [x8]
  4026b0:	adrp	x9, 420000 <completed.8445>
  4026b4:	add	x9, x9, #0x8
  4026b8:	str	x8, [x9]
  4026bc:	b	4026ec <parse_argv+0x1a0>
  4026c0:	mov	w8, #0xffffffea            	// #-22
  4026c4:	stur	w8, [x29, #-4]
  4026c8:	b	4026f8 <parse_argv+0x1ac>
  4026cc:	mov	w8, wzr
  4026d0:	mov	w0, w8
  4026d4:	adrp	x1, 407000 <network_set_dns+0x4>
  4026d8:	add	x1, x1, #0xf3b
  4026dc:	ldr	x2, [sp, #16]
  4026e0:	mov	w3, #0xa2                  	// #162
  4026e4:	ldr	x4, [sp, #8]
  4026e8:	bl	401b48 <log_assert_failed_unreachable_realm@plt>
  4026ec:	b	402614 <parse_argv+0xc8>
  4026f0:	mov	w8, #0x1                   	// #1
  4026f4:	stur	w8, [x29, #-4]
  4026f8:	ldur	w0, [x29, #-4]
  4026fc:	ldp	x29, x30, [sp, #48]
  402700:	add	sp, sp, #0x40
  402704:	ret

0000000000402708 <freep>:
  402708:	sub	sp, sp, #0x20
  40270c:	stp	x29, x30, [sp, #16]
  402710:	add	x29, sp, #0x10
  402714:	str	x0, [sp, #8]
  402718:	ldr	x8, [sp, #8]
  40271c:	ldr	x0, [x8]
  402720:	bl	401b58 <free@plt>
  402724:	ldp	x29, x30, [sp, #16]
  402728:	add	sp, sp, #0x20
  40272c:	ret

0000000000402730 <strempty>:
  402730:	sub	sp, sp, #0x20
  402734:	str	x0, [sp, #24]
  402738:	ldr	x8, [sp, #24]
  40273c:	str	x8, [sp, #16]
  402740:	cbz	x8, 402750 <strempty+0x20>
  402744:	ldr	x8, [sp, #16]
  402748:	str	x8, [sp, #8]
  40274c:	b	40275c <strempty+0x2c>
  402750:	adrp	x8, 407000 <network_set_dns+0x4>
  402754:	add	x8, x8, #0xec8
  402758:	str	x8, [sp, #8]
  40275c:	ldr	x8, [sp, #8]
  402760:	mov	x0, x8
  402764:	add	sp, sp, #0x20
  402768:	ret

000000000040276c <context_save>:
  40276c:	stp	x29, x30, [sp, #-32]!
  402770:	str	x28, [sp, #16]
  402774:	mov	x29, sp
  402778:	sub	sp, sp, #0x100
  40277c:	sub	x8, x29, #0x40
  402780:	adrp	x9, 408000 <_fini+0x1d4>
  402784:	add	x9, x9, #0x23
  402788:	adrp	x10, 420000 <completed.8445>
  40278c:	add	x10, x10, #0x8
  402790:	adrp	x11, 407000 <network_set_dns+0x4>
  402794:	add	x11, x11, #0xe50
  402798:	add	x11, x11, #0x3
  40279c:	stur	x0, [x29, #-16]
  4027a0:	stur	wzr, [x29, #-72]
  4027a4:	stur	x9, [x29, #-88]
  4027a8:	ldr	x9, [x10]
  4027ac:	stur	x9, [x29, #-96]
  4027b0:	stur	x8, [x29, #-224]
  4027b4:	stur	x11, [x29, #-232]
  4027b8:	ldur	x8, [x29, #-88]
  4027bc:	ldrb	w9, [x8]
  4027c0:	mov	w10, #0x0                   	// #0
  4027c4:	cmp	w9, #0x2f
  4027c8:	stur	w10, [x29, #-236]
  4027cc:	b.ne	4027e4 <context_save+0x78>  // b.any
  4027d0:	ldur	x8, [x29, #-88]
  4027d4:	ldrb	w9, [x8, #1]
  4027d8:	cmp	w9, #0x2f
  4027dc:	cset	w9, eq  // eq = none
  4027e0:	stur	w9, [x29, #-236]
  4027e4:	ldur	w8, [x29, #-236]
  4027e8:	tbnz	w8, #0, 4027f0 <context_save+0x84>
  4027ec:	b	402800 <context_save+0x94>
  4027f0:	ldur	x8, [x29, #-88]
  4027f4:	add	x8, x8, #0x1
  4027f8:	stur	x8, [x29, #-88]
  4027fc:	b	4027b8 <context_save+0x4c>
  402800:	ldur	x0, [x29, #-96]
  402804:	bl	402c50 <isempty>
  402808:	tbnz	w0, #0, 402810 <context_save+0xa4>
  40280c:	b	40281c <context_save+0xb0>
  402810:	ldur	x8, [x29, #-88]
  402814:	stur	x8, [x29, #-104]
  402818:	b	4029bc <context_save+0x250>
  40281c:	ldur	x0, [x29, #-96]
  402820:	bl	401b68 <strlen@plt>
  402824:	add	x8, x0, #0x1
  402828:	ldur	x0, [x29, #-88]
  40282c:	stur	x8, [x29, #-248]
  402830:	bl	401b68 <strlen@plt>
  402834:	ldur	x8, [x29, #-248]
  402838:	add	x9, x8, x0
  40283c:	add	x9, x9, #0x1
  402840:	stur	x9, [x29, #-128]
  402844:	ldur	x9, [x29, #-128]
  402848:	stur	x9, [x29, #-136]
  40284c:	ldur	x1, [x29, #-136]
  402850:	mov	x0, #0x1                   	// #1
  402854:	bl	402c90 <size_multiply_overflow>
  402858:	mov	w8, #0x1                   	// #1
  40285c:	eor	w9, w0, #0x1
  402860:	eor	w9, w9, w8
  402864:	eor	w9, w9, w8
  402868:	eor	w8, w9, w8
  40286c:	and	w8, w8, #0x1
  402870:	mov	w1, w8
  402874:	sxtw	x10, w1
  402878:	cbz	x10, 4028a0 <context_save+0x134>
  40287c:	mov	w8, wzr
  402880:	mov	w0, w8
  402884:	adrp	x1, 408000 <_fini+0x1d4>
  402888:	add	x1, x1, #0x38
  40288c:	ldur	x2, [x29, #-232]
  402890:	mov	w3, #0x5a                  	// #90
  402894:	adrp	x4, 408000 <_fini+0x1d4>
  402898:	add	x4, x4, #0x63
  40289c:	bl	401b18 <log_assert_failed_realm@plt>
  4028a0:	ldur	x8, [x29, #-136]
  4028a4:	mov	x9, #0x1                   	// #1
  4028a8:	mul	x8, x9, x8
  4028ac:	cmp	x8, #0x400, lsl #12
  4028b0:	cset	w10, ls  // ls = plast
  4028b4:	mov	w11, #0x1                   	// #1
  4028b8:	eor	w10, w10, #0x1
  4028bc:	eor	w10, w10, w11
  4028c0:	eor	w10, w10, w11
  4028c4:	and	w10, w10, #0x1
  4028c8:	mov	w0, w10
  4028cc:	sxtw	x8, w0
  4028d0:	cbz	x8, 4028f8 <context_save+0x18c>
  4028d4:	mov	w8, wzr
  4028d8:	mov	w0, w8
  4028dc:	adrp	x1, 408000 <_fini+0x1d4>
  4028e0:	add	x1, x1, #0x7f
  4028e4:	ldur	x2, [x29, #-232]
  4028e8:	mov	w3, #0x5a                  	// #90
  4028ec:	adrp	x4, 408000 <_fini+0x1d4>
  4028f0:	add	x4, x4, #0x63
  4028f4:	bl	401b18 <log_assert_failed_realm@plt>
  4028f8:	ldur	x8, [x29, #-136]
  4028fc:	mov	x9, #0x1                   	// #1
  402900:	mul	x8, x9, x8
  402904:	mul	x8, x8, x9
  402908:	add	x8, x8, #0xf
  40290c:	and	x8, x8, #0xfffffffffffffff0
  402910:	mov	x9, sp
  402914:	subs	x8, x9, x8
  402918:	mov	sp, x8
  40291c:	stur	x8, [x29, #-144]
  402920:	ldur	x8, [x29, #-144]
  402924:	stur	x8, [x29, #-120]
  402928:	ldur	x0, [x29, #-120]
  40292c:	ldur	x1, [x29, #-96]
  402930:	bl	401b78 <stpcpy@plt>
  402934:	stur	x0, [x29, #-112]
  402938:	ldur	x8, [x29, #-112]
  40293c:	ldur	x9, [x29, #-120]
  402940:	mov	w10, #0x0                   	// #0
  402944:	cmp	x8, x9
  402948:	stur	w10, [x29, #-252]
  40294c:	b.ls	402964 <context_save+0x1f8>  // b.plast
  402950:	ldur	x8, [x29, #-112]
  402954:	ldurb	w9, [x8, #-1]
  402958:	cmp	w9, #0x2f
  40295c:	cset	w9, eq  // eq = none
  402960:	stur	w9, [x29, #-252]
  402964:	ldur	w8, [x29, #-252]
  402968:	tbnz	w8, #0, 402970 <context_save+0x204>
  40296c:	b	402984 <context_save+0x218>
  402970:	ldur	x8, [x29, #-112]
  402974:	mov	x9, #0xffffffffffffffff    	// #-1
  402978:	add	x8, x8, x9
  40297c:	stur	x8, [x29, #-112]
  402980:	b	402938 <context_save+0x1cc>
  402984:	ldur	x8, [x29, #-88]
  402988:	ldrb	w9, [x8]
  40298c:	cmp	w9, #0x2f
  402990:	b.eq	4029a8 <context_save+0x23c>  // b.none
  402994:	ldur	x8, [x29, #-112]
  402998:	add	x9, x8, #0x1
  40299c:	stur	x9, [x29, #-112]
  4029a0:	mov	w10, #0x2f                  	// #47
  4029a4:	strb	w10, [x8]
  4029a8:	ldur	x0, [x29, #-112]
  4029ac:	ldur	x1, [x29, #-88]
  4029b0:	bl	401b88 <strcpy@plt>
  4029b4:	ldur	x8, [x29, #-120]
  4029b8:	stur	x8, [x29, #-104]
  4029bc:	ldur	x8, [x29, #-104]
  4029c0:	stur	x8, [x29, #-152]
  4029c4:	ldur	x8, [x29, #-152]
  4029c8:	stur	x8, [x29, #-80]
  4029cc:	ldur	x0, [x29, #-80]
  4029d0:	mov	w1, #0x1ed                 	// #493
  4029d4:	bl	401b98 <mkdir_p@plt>
  4029d8:	stur	w0, [x29, #-72]
  4029dc:	ldur	w9, [x29, #-72]
  4029e0:	cmp	w9, #0x0
  4029e4:	cset	w9, ge  // ge = tcont
  4029e8:	tbnz	w9, #0, 402a74 <context_save+0x308>
  4029ec:	mov	w8, #0x3                   	// #3
  4029f0:	stur	w8, [x29, #-156]
  4029f4:	ldur	w8, [x29, #-72]
  4029f8:	stur	w8, [x29, #-160]
  4029fc:	stur	wzr, [x29, #-164]
  402a00:	ldur	w0, [x29, #-164]
  402a04:	bl	401ab8 <log_get_max_level_realm@plt>
  402a08:	ldur	w8, [x29, #-156]
  402a0c:	and	w8, w8, #0x7
  402a10:	cmp	w0, w8
  402a14:	b.lt	402a4c <context_save+0x2e0>  // b.tstop
  402a18:	ldur	w8, [x29, #-164]
  402a1c:	ldur	w9, [x29, #-156]
  402a20:	orr	w0, w9, w8, lsl #10
  402a24:	ldur	w1, [x29, #-160]
  402a28:	ldur	x2, [x29, #-232]
  402a2c:	mov	w3, #0x5e                  	// #94
  402a30:	adrp	x4, 408000 <_fini+0x1d4>
  402a34:	add	x4, x4, #0x9e
  402a38:	adrp	x5, 408000 <_fini+0x1d4>
  402a3c:	add	x5, x5, #0xab
  402a40:	bl	401ac8 <log_internal_realm@plt>
  402a44:	stur	w0, [x29, #-256]
  402a48:	b	402a60 <context_save+0x2f4>
  402a4c:	ldur	w0, [x29, #-160]
  402a50:	bl	401ad8 <abs@plt>
  402a54:	mov	w8, wzr
  402a58:	subs	w8, w8, w0, uxtb
  402a5c:	stur	w8, [x29, #-256]
  402a60:	ldur	w8, [x29, #-256]
  402a64:	stur	w8, [x29, #-168]
  402a68:	ldur	w8, [x29, #-168]
  402a6c:	stur	w8, [x29, #-4]
  402a70:	b	402bfc <context_save+0x490>
  402a74:	sub	x8, x29, #0xb8
  402a78:	mov	w9, #0xfffffffe            	// #-2
  402a7c:	stur	w9, [x29, #-184]
  402a80:	mov	x10, xzr
  402a84:	str	x10, [x8, #8]
  402a88:	ldur	q0, [x29, #-184]
  402a8c:	ldur	x8, [x29, #-224]
  402a90:	str	q0, [x8]
  402a94:	ldur	x8, [x29, #-16]
  402a98:	ldr	x0, [x8]
  402a9c:	sub	x1, x29, #0x40
  402aa0:	sub	x2, x29, #0x18
  402aa4:	mov	x8, xzr
  402aa8:	mov	x3, x8
  402aac:	bl	402cf8 <hashmap_iterate>
  402ab0:	tbnz	w0, #0, 402ab8 <context_save+0x34c>
  402ab4:	b	402af4 <context_save+0x388>
  402ab8:	ldur	x0, [x29, #-24]
  402abc:	ldur	x1, [x29, #-80]
  402ac0:	bl	402d38 <network_save>
  402ac4:	stur	w0, [x29, #-68]
  402ac8:	ldur	w8, [x29, #-68]
  402acc:	cmp	w8, #0x0
  402ad0:	cset	w8, ge  // ge = tcont
  402ad4:	tbnz	w8, #0, 402af0 <context_save+0x384>
  402ad8:	ldur	w8, [x29, #-72]
  402adc:	cmp	w8, #0x0
  402ae0:	cset	w8, lt  // lt = tstop
  402ae4:	tbnz	w8, #0, 402af0 <context_save+0x384>
  402ae8:	ldur	w8, [x29, #-68]
  402aec:	stur	w8, [x29, #-72]
  402af0:	b	402a94 <context_save+0x328>
  402af4:	sub	x8, x29, #0xc8
  402af8:	mov	w9, #0xfffffffe            	// #-2
  402afc:	stur	w9, [x29, #-200]
  402b00:	mov	x10, xzr
  402b04:	str	x10, [x8, #8]
  402b08:	ldur	q0, [x29, #-200]
  402b0c:	ldur	x8, [x29, #-224]
  402b10:	str	q0, [x8]
  402b14:	ldur	x8, [x29, #-16]
  402b18:	ldr	x0, [x8, #8]
  402b1c:	sub	x1, x29, #0x40
  402b20:	sub	x2, x29, #0x20
  402b24:	mov	x8, xzr
  402b28:	mov	x3, x8
  402b2c:	bl	402cf8 <hashmap_iterate>
  402b30:	tbnz	w0, #0, 402b38 <context_save+0x3cc>
  402b34:	b	402b74 <context_save+0x408>
  402b38:	ldur	x0, [x29, #-32]
  402b3c:	ldur	x1, [x29, #-80]
  402b40:	bl	402ee4 <netdev_save>
  402b44:	stur	w0, [x29, #-68]
  402b48:	ldur	w8, [x29, #-68]
  402b4c:	cmp	w8, #0x0
  402b50:	cset	w8, ge  // ge = tcont
  402b54:	tbnz	w8, #0, 402b70 <context_save+0x404>
  402b58:	ldur	w8, [x29, #-72]
  402b5c:	cmp	w8, #0x0
  402b60:	cset	w8, lt  // lt = tstop
  402b64:	tbnz	w8, #0, 402b70 <context_save+0x404>
  402b68:	ldur	w8, [x29, #-68]
  402b6c:	stur	w8, [x29, #-72]
  402b70:	b	402b14 <context_save+0x3a8>
  402b74:	sub	x8, x29, #0xd8
  402b78:	mov	w9, #0xfffffffe            	// #-2
  402b7c:	stur	w9, [x29, #-216]
  402b80:	mov	x10, xzr
  402b84:	str	x10, [x8, #8]
  402b88:	ldur	q0, [x29, #-216]
  402b8c:	ldur	x8, [x29, #-224]
  402b90:	str	q0, [x8]
  402b94:	ldur	x8, [x29, #-16]
  402b98:	ldr	x0, [x8, #16]
  402b9c:	sub	x1, x29, #0x40
  402ba0:	sub	x2, x29, #0x28
  402ba4:	mov	x8, xzr
  402ba8:	mov	x3, x8
  402bac:	bl	402cf8 <hashmap_iterate>
  402bb0:	tbnz	w0, #0, 402bb8 <context_save+0x44c>
  402bb4:	b	402bf4 <context_save+0x488>
  402bb8:	ldur	x0, [x29, #-40]
  402bbc:	ldur	x1, [x29, #-80]
  402bc0:	bl	403034 <link_save>
  402bc4:	stur	w0, [x29, #-68]
  402bc8:	ldur	w8, [x29, #-68]
  402bcc:	cmp	w8, #0x0
  402bd0:	cset	w8, ge  // ge = tcont
  402bd4:	tbnz	w8, #0, 402bf0 <context_save+0x484>
  402bd8:	ldur	w8, [x29, #-72]
  402bdc:	cmp	w8, #0x0
  402be0:	cset	w8, lt  // lt = tstop
  402be4:	tbnz	w8, #0, 402bf0 <context_save+0x484>
  402be8:	ldur	w8, [x29, #-68]
  402bec:	stur	w8, [x29, #-72]
  402bf0:	b	402b94 <context_save+0x428>
  402bf4:	ldur	w8, [x29, #-72]
  402bf8:	stur	w8, [x29, #-4]
  402bfc:	ldur	w0, [x29, #-4]
  402c00:	mov	sp, x29
  402c04:	ldr	x28, [sp, #16]
  402c08:	ldp	x29, x30, [sp], #32
  402c0c:	ret

0000000000402c10 <help>:
  402c10:	sub	sp, sp, #0x20
  402c14:	stp	x29, x30, [sp, #16]
  402c18:	add	x29, sp, #0x10
  402c1c:	adrp	x8, 420000 <completed.8445>
  402c20:	add	x8, x8, #0x30
  402c24:	adrp	x0, 407000 <network_set_dns+0x4>
  402c28:	add	x0, x0, #0xf4c
  402c2c:	mov	w9, wzr
  402c30:	ldr	x1, [x8]
  402c34:	stur	w9, [x29, #-4]
  402c38:	bl	401ba8 <printf@plt>
  402c3c:	ldur	w9, [x29, #-4]
  402c40:	mov	w0, w9
  402c44:	ldp	x29, x30, [sp, #16]
  402c48:	add	sp, sp, #0x20
  402c4c:	ret

0000000000402c50 <isempty>:
  402c50:	sub	sp, sp, #0x10
  402c54:	str	x0, [sp, #8]
  402c58:	ldr	x8, [sp, #8]
  402c5c:	mov	w9, #0x1                   	// #1
  402c60:	str	w9, [sp, #4]
  402c64:	cbz	x8, 402c80 <isempty+0x30>
  402c68:	ldr	x8, [sp, #8]
  402c6c:	ldrb	w9, [x8]
  402c70:	cmp	w9, #0x0
  402c74:	cset	w9, ne  // ne = any
  402c78:	eor	w9, w9, #0x1
  402c7c:	str	w9, [sp, #4]
  402c80:	ldr	w8, [sp, #4]
  402c84:	and	w0, w8, #0x1
  402c88:	add	sp, sp, #0x10
  402c8c:	ret

0000000000402c90 <size_multiply_overflow>:
  402c90:	sub	sp, sp, #0x20
  402c94:	str	x0, [sp, #24]
  402c98:	str	x1, [sp, #16]
  402c9c:	ldr	x8, [sp, #16]
  402ca0:	mov	w9, #0x0                   	// #0
  402ca4:	str	w9, [sp, #12]
  402ca8:	cbz	x8, 402cc8 <size_multiply_overflow+0x38>
  402cac:	ldr	x8, [sp, #24]
  402cb0:	ldr	x9, [sp, #16]
  402cb4:	mov	x10, #0xffffffffffffffff    	// #-1
  402cb8:	udiv	x9, x10, x9
  402cbc:	cmp	x8, x9
  402cc0:	cset	w11, hi  // hi = pmore
  402cc4:	str	w11, [sp, #12]
  402cc8:	ldr	w8, [sp, #12]
  402ccc:	mov	w9, #0x1                   	// #1
  402cd0:	eor	w8, w8, #0x1
  402cd4:	eor	w8, w8, w9
  402cd8:	and	w8, w8, #0x1
  402cdc:	mov	w0, w8
  402ce0:	sxtw	x10, w0
  402ce4:	cmp	x10, #0x0
  402ce8:	cset	w8, ne  // ne = any
  402cec:	and	w0, w8, #0x1
  402cf0:	add	sp, sp, #0x20
  402cf4:	ret

0000000000402cf8 <hashmap_iterate>:
  402cf8:	sub	sp, sp, #0x30
  402cfc:	stp	x29, x30, [sp, #32]
  402d00:	add	x29, sp, #0x20
  402d04:	stur	x0, [x29, #-8]
  402d08:	str	x1, [sp, #16]
  402d0c:	str	x2, [sp, #8]
  402d10:	str	x3, [sp]
  402d14:	ldur	x0, [x29, #-8]
  402d18:	ldr	x1, [sp, #16]
  402d1c:	ldr	x2, [sp, #8]
  402d20:	ldr	x3, [sp]
  402d24:	bl	401bb8 <internal_hashmap_iterate@plt>
  402d28:	and	w0, w0, #0x1
  402d2c:	ldp	x29, x30, [sp, #32]
  402d30:	add	sp, sp, #0x30
  402d34:	ret

0000000000402d38 <network_save>:
  402d38:	sub	sp, sp, #0x60
  402d3c:	stp	x29, x30, [sp, #80]
  402d40:	add	x29, sp, #0x50
  402d44:	mov	x8, xzr
  402d48:	adrp	x9, 407000 <network_set_dns+0x4>
  402d4c:	add	x9, x9, #0xe50
  402d50:	add	x9, x9, #0x3
  402d54:	stur	x0, [x29, #-16]
  402d58:	stur	x1, [x29, #-24]
  402d5c:	stur	x8, [x29, #-32]
  402d60:	str	x8, [sp, #40]
  402d64:	str	x9, [sp, #24]
  402d68:	ldur	x8, [x29, #-16]
  402d6c:	cmp	x8, #0x0
  402d70:	cset	w9, ne  // ne = any
  402d74:	mov	w10, #0x1                   	// #1
  402d78:	eor	w9, w9, #0x1
  402d7c:	eor	w9, w9, w10
  402d80:	eor	w9, w9, w10
  402d84:	and	w9, w9, #0x1
  402d88:	mov	w0, w9
  402d8c:	sxtw	x8, w0
  402d90:	cbz	x8, 402db8 <network_save+0x80>
  402d94:	mov	w8, wzr
  402d98:	mov	w0, w8
  402d9c:	adrp	x1, 408000 <_fini+0x1d4>
  402da0:	add	x1, x1, #0xdf
  402da4:	ldr	x2, [sp, #24]
  402da8:	mov	w3, #0x17                  	// #23
  402dac:	adrp	x4, 408000 <_fini+0x1d4>
  402db0:	add	x4, x4, #0xe7
  402db4:	bl	401b18 <log_assert_failed_realm@plt>
  402db8:	ldur	x8, [x29, #-16]
  402dbc:	ldr	x0, [x8]
  402dc0:	bl	402c50 <isempty>
  402dc4:	adrp	x8, 408000 <_fini+0x1d4>
  402dc8:	add	x8, x8, #0x122
  402dcc:	adrp	x9, 408000 <_fini+0x1d4>
  402dd0:	add	x9, x9, #0x11f
  402dd4:	tst	w0, #0x1
  402dd8:	csel	x2, x9, x8, ne  // ne = any
  402ddc:	ldur	x8, [x29, #-16]
  402de0:	ldr	x0, [x8]
  402de4:	str	x2, [sp, #16]
  402de8:	bl	402c50 <isempty>
  402dec:	tbnz	w0, #0, 402df4 <network_save+0xbc>
  402df0:	b	402e04 <network_save+0xcc>
  402df4:	adrp	x8, 408000 <_fini+0x1d4>
  402df8:	add	x8, x8, #0x125
  402dfc:	str	x8, [sp, #8]
  402e00:	b	402e10 <network_save+0xd8>
  402e04:	ldur	x8, [x29, #-16]
  402e08:	ldr	x8, [x8]
  402e0c:	str	x8, [sp, #8]
  402e10:	ldr	x8, [sp, #8]
  402e14:	sub	x0, x29, #0x20
  402e18:	adrp	x1, 408000 <_fini+0x1d4>
  402e1c:	add	x1, x1, #0x111
  402e20:	ldr	x2, [sp, #16]
  402e24:	mov	x3, x8
  402e28:	bl	401bc8 <asprintf@plt>
  402e2c:	str	w0, [sp, #36]
  402e30:	ldr	w9, [sp, #36]
  402e34:	cmp	w9, #0x0
  402e38:	cset	w9, ge  // ge = tcont
  402e3c:	tbnz	w9, #0, 402e6c <network_save+0x134>
  402e40:	mov	w8, wzr
  402e44:	mov	w0, w8
  402e48:	ldr	x1, [sp, #24]
  402e4c:	mov	w2, #0x1d                  	// #29
  402e50:	adrp	x3, 408000 <_fini+0x1d4>
  402e54:	add	x3, x3, #0x12d
  402e58:	bl	401af8 <log_oom_internal@plt>
  402e5c:	stur	w0, [x29, #-4]
  402e60:	mov	w8, #0x1                   	// #1
  402e64:	str	w8, [sp, #32]
  402e68:	b	402ec4 <network_save+0x18c>
  402e6c:	ldur	x0, [x29, #-24]
  402e70:	ldur	x2, [x29, #-32]
  402e74:	adrp	x1, 408000 <_fini+0x1d4>
  402e78:	add	x1, x1, #0x13a
  402e7c:	add	x3, sp, #0x28
  402e80:	bl	401bd8 <generator_open_unit_file@plt>
  402e84:	str	w0, [sp, #36]
  402e88:	ldr	w8, [sp, #36]
  402e8c:	cmp	w8, #0x0
  402e90:	cset	w8, ge  // ge = tcont
  402e94:	tbnz	w8, #0, 402eac <network_save+0x174>
  402e98:	ldr	w8, [sp, #36]
  402e9c:	stur	w8, [x29, #-4]
  402ea0:	mov	w8, #0x1                   	// #1
  402ea4:	str	w8, [sp, #32]
  402ea8:	b	402ec4 <network_save+0x18c>
  402eac:	ldur	x0, [x29, #-16]
  402eb0:	ldr	x1, [sp, #40]
  402eb4:	bl	404b20 <network_dump>
  402eb8:	stur	wzr, [x29, #-4]
  402ebc:	mov	w8, #0x1                   	// #1
  402ec0:	str	w8, [sp, #32]
  402ec4:	add	x0, sp, #0x28
  402ec8:	bl	403184 <fclosep>
  402ecc:	sub	x0, x29, #0x20
  402ed0:	bl	402708 <freep>
  402ed4:	ldur	w0, [x29, #-4]
  402ed8:	ldp	x29, x30, [sp, #80]
  402edc:	add	sp, sp, #0x60
  402ee0:	ret

0000000000402ee4 <netdev_save>:
  402ee4:	sub	sp, sp, #0x50
  402ee8:	stp	x29, x30, [sp, #64]
  402eec:	add	x29, sp, #0x40
  402ef0:	mov	x8, xzr
  402ef4:	adrp	x9, 407000 <network_set_dns+0x4>
  402ef8:	add	x9, x9, #0xe50
  402efc:	add	x9, x9, #0x3
  402f00:	stur	x0, [x29, #-16]
  402f04:	stur	x1, [x29, #-24]
  402f08:	str	x8, [sp, #32]
  402f0c:	str	x8, [sp, #24]
  402f10:	str	x9, [sp, #8]
  402f14:	ldur	x8, [x29, #-16]
  402f18:	cmp	x8, #0x0
  402f1c:	cset	w9, ne  // ne = any
  402f20:	mov	w10, #0x1                   	// #1
  402f24:	eor	w9, w9, #0x1
  402f28:	eor	w9, w9, w10
  402f2c:	eor	w9, w9, w10
  402f30:	and	w9, w9, #0x1
  402f34:	mov	w0, w9
  402f38:	sxtw	x8, w0
  402f3c:	cbz	x8, 402f64 <netdev_save+0x80>
  402f40:	mov	w8, wzr
  402f44:	mov	w0, w8
  402f48:	adrp	x1, 408000 <_fini+0x1d4>
  402f4c:	add	x1, x1, #0x14e
  402f50:	ldr	x2, [sp, #8]
  402f54:	mov	w3, #0x2d                  	// #45
  402f58:	adrp	x4, 408000 <_fini+0x1d4>
  402f5c:	add	x4, x4, #0x155
  402f60:	bl	401b18 <log_assert_failed_realm@plt>
  402f64:	ldur	x8, [x29, #-16]
  402f68:	ldr	x2, [x8]
  402f6c:	add	x0, sp, #0x20
  402f70:	adrp	x1, 408000 <_fini+0x1d4>
  402f74:	add	x1, x1, #0x17d
  402f78:	bl	401bc8 <asprintf@plt>
  402f7c:	str	w0, [sp, #20]
  402f80:	ldr	w9, [sp, #20]
  402f84:	cmp	w9, #0x0
  402f88:	cset	w9, ge  // ge = tcont
  402f8c:	tbnz	w9, #0, 402fbc <netdev_save+0xd8>
  402f90:	mov	w8, wzr
  402f94:	mov	w0, w8
  402f98:	ldr	x1, [sp, #8]
  402f9c:	mov	w2, #0x32                  	// #50
  402fa0:	adrp	x3, 408000 <_fini+0x1d4>
  402fa4:	add	x3, x3, #0x18a
  402fa8:	bl	401af8 <log_oom_internal@plt>
  402fac:	stur	w0, [x29, #-4]
  402fb0:	mov	w8, #0x1                   	// #1
  402fb4:	str	w8, [sp, #16]
  402fb8:	b	403014 <netdev_save+0x130>
  402fbc:	ldur	x0, [x29, #-24]
  402fc0:	ldr	x2, [sp, #32]
  402fc4:	adrp	x1, 408000 <_fini+0x1d4>
  402fc8:	add	x1, x1, #0x13a
  402fcc:	add	x3, sp, #0x18
  402fd0:	bl	401bd8 <generator_open_unit_file@plt>
  402fd4:	str	w0, [sp, #20]
  402fd8:	ldr	w8, [sp, #20]
  402fdc:	cmp	w8, #0x0
  402fe0:	cset	w8, ge  // ge = tcont
  402fe4:	tbnz	w8, #0, 402ffc <netdev_save+0x118>
  402fe8:	ldr	w8, [sp, #20]
  402fec:	stur	w8, [x29, #-4]
  402ff0:	mov	w8, #0x1                   	// #1
  402ff4:	str	w8, [sp, #16]
  402ff8:	b	403014 <netdev_save+0x130>
  402ffc:	ldur	x0, [x29, #-16]
  403000:	ldr	x1, [sp, #24]
  403004:	bl	405270 <netdev_dump>
  403008:	stur	wzr, [x29, #-4]
  40300c:	mov	w8, #0x1                   	// #1
  403010:	str	w8, [sp, #16]
  403014:	add	x0, sp, #0x18
  403018:	bl	403184 <fclosep>
  40301c:	add	x0, sp, #0x20
  403020:	bl	402708 <freep>
  403024:	ldur	w0, [x29, #-4]
  403028:	ldp	x29, x30, [sp, #64]
  40302c:	add	sp, sp, #0x50
  403030:	ret

0000000000403034 <link_save>:
  403034:	sub	sp, sp, #0x50
  403038:	stp	x29, x30, [sp, #64]
  40303c:	add	x29, sp, #0x40
  403040:	mov	x8, xzr
  403044:	adrp	x9, 407000 <network_set_dns+0x4>
  403048:	add	x9, x9, #0xe50
  40304c:	add	x9, x9, #0x3
  403050:	stur	x0, [x29, #-16]
  403054:	stur	x1, [x29, #-24]
  403058:	str	x8, [sp, #32]
  40305c:	str	x8, [sp, #24]
  403060:	str	x9, [sp, #8]
  403064:	ldur	x8, [x29, #-16]
  403068:	cmp	x8, #0x0
  40306c:	cset	w9, ne  // ne = any
  403070:	mov	w10, #0x1                   	// #1
  403074:	eor	w9, w9, #0x1
  403078:	eor	w9, w9, w10
  40307c:	eor	w9, w9, w10
  403080:	and	w9, w9, #0x1
  403084:	mov	w0, w9
  403088:	sxtw	x8, w0
  40308c:	cbz	x8, 4030b4 <link_save+0x80>
  403090:	mov	w8, wzr
  403094:	mov	w0, w8
  403098:	adrp	x1, 408000 <_fini+0x1d4>
  40309c:	add	x1, x1, #0x196
  4030a0:	ldr	x2, [sp, #8]
  4030a4:	mov	w3, #0x42                  	// #66
  4030a8:	adrp	x4, 408000 <_fini+0x1d4>
  4030ac:	add	x4, x4, #0x19b
  4030b0:	bl	401b18 <log_assert_failed_realm@plt>
  4030b4:	ldur	x8, [x29, #-16]
  4030b8:	ldr	x2, [x8]
  4030bc:	add	x0, sp, #0x20
  4030c0:	adrp	x1, 408000 <_fini+0x1d4>
  4030c4:	add	x1, x1, #0x1bf
  4030c8:	bl	401bc8 <asprintf@plt>
  4030cc:	str	w0, [sp, #20]
  4030d0:	ldr	w9, [sp, #20]
  4030d4:	cmp	w9, #0x0
  4030d8:	cset	w9, ge  // ge = tcont
  4030dc:	tbnz	w9, #0, 40310c <link_save+0xd8>
  4030e0:	mov	w8, wzr
  4030e4:	mov	w0, w8
  4030e8:	ldr	x1, [sp, #8]
  4030ec:	mov	w2, #0x47                  	// #71
  4030f0:	adrp	x3, 408000 <_fini+0x1d4>
  4030f4:	add	x3, x3, #0x1ca
  4030f8:	bl	401af8 <log_oom_internal@plt>
  4030fc:	stur	w0, [x29, #-4]
  403100:	mov	w8, #0x1                   	// #1
  403104:	str	w8, [sp, #16]
  403108:	b	403164 <link_save+0x130>
  40310c:	ldur	x0, [x29, #-24]
  403110:	ldr	x2, [sp, #32]
  403114:	adrp	x1, 408000 <_fini+0x1d4>
  403118:	add	x1, x1, #0x13a
  40311c:	add	x3, sp, #0x18
  403120:	bl	401bd8 <generator_open_unit_file@plt>
  403124:	str	w0, [sp, #20]
  403128:	ldr	w8, [sp, #20]
  40312c:	cmp	w8, #0x0
  403130:	cset	w8, ge  // ge = tcont
  403134:	tbnz	w8, #0, 40314c <link_save+0x118>
  403138:	ldr	w8, [sp, #20]
  40313c:	stur	w8, [x29, #-4]
  403140:	mov	w8, #0x1                   	// #1
  403144:	str	w8, [sp, #16]
  403148:	b	403164 <link_save+0x130>
  40314c:	ldur	x0, [x29, #-16]
  403150:	ldr	x1, [sp, #24]
  403154:	bl	40538c <link_dump>
  403158:	stur	wzr, [x29, #-4]
  40315c:	mov	w8, #0x1                   	// #1
  403160:	str	w8, [sp, #16]
  403164:	add	x0, sp, #0x18
  403168:	bl	403184 <fclosep>
  40316c:	add	x0, sp, #0x20
  403170:	bl	402708 <freep>
  403174:	ldur	w0, [x29, #-4]
  403178:	ldp	x29, x30, [sp, #64]
  40317c:	add	sp, sp, #0x50
  403180:	ret

0000000000403184 <fclosep>:
  403184:	sub	sp, sp, #0x20
  403188:	stp	x29, x30, [sp, #16]
  40318c:	add	x29, sp, #0x10
  403190:	str	x0, [sp, #8]
  403194:	ldr	x8, [sp, #8]
  403198:	ldr	x0, [x8]
  40319c:	bl	401be8 <safe_fclose@plt>
  4031a0:	ldp	x29, x30, [sp, #16]
  4031a4:	add	sp, sp, #0x20
  4031a8:	ret

00000000004031ac <ALIGN_TO>:
  4031ac:	sub	sp, sp, #0x10
  4031b0:	str	x0, [sp, #8]
  4031b4:	str	x1, [sp]
  4031b8:	ldr	x8, [sp, #8]
  4031bc:	ldr	x9, [sp]
  4031c0:	add	x8, x8, x9
  4031c4:	subs	x8, x8, #0x1
  4031c8:	ldr	x9, [sp]
  4031cc:	subs	x9, x9, #0x1
  4031d0:	bic	x0, x8, x9
  4031d4:	add	sp, sp, #0x10
  4031d8:	ret

00000000004031dc <network_get>:
  4031dc:	sub	sp, sp, #0x20
  4031e0:	stp	x29, x30, [sp, #16]
  4031e4:	add	x29, sp, #0x10
  4031e8:	str	x0, [sp, #8]
  4031ec:	str	x1, [sp]
  4031f0:	ldr	x8, [sp, #8]
  4031f4:	ldr	x0, [x8]
  4031f8:	ldr	x1, [sp]
  4031fc:	bl	40320c <hashmap_get>
  403200:	ldp	x29, x30, [sp, #16]
  403204:	add	sp, sp, #0x20
  403208:	ret

000000000040320c <hashmap_get>:
  40320c:	sub	sp, sp, #0x20
  403210:	stp	x29, x30, [sp, #16]
  403214:	add	x29, sp, #0x10
  403218:	str	x0, [sp, #8]
  40321c:	str	x1, [sp]
  403220:	ldr	x0, [sp, #8]
  403224:	ldr	x1, [sp]
  403228:	bl	401bf8 <internal_hashmap_get@plt>
  40322c:	ldp	x29, x30, [sp, #16]
  403230:	add	sp, sp, #0x20
  403234:	ret

0000000000403238 <netdev_get>:
  403238:	sub	sp, sp, #0x20
  40323c:	stp	x29, x30, [sp, #16]
  403240:	add	x29, sp, #0x10
  403244:	str	x0, [sp, #8]
  403248:	str	x1, [sp]
  40324c:	ldr	x8, [sp, #8]
  403250:	ldr	x0, [x8, #8]
  403254:	ldr	x1, [sp]
  403258:	bl	40320c <hashmap_get>
  40325c:	ldp	x29, x30, [sp, #16]
  403260:	add	sp, sp, #0x20
  403264:	ret

0000000000403268 <link_get>:
  403268:	sub	sp, sp, #0x20
  40326c:	stp	x29, x30, [sp, #16]
  403270:	add	x29, sp, #0x10
  403274:	str	x0, [sp, #8]
  403278:	str	x1, [sp]
  40327c:	ldr	x8, [sp, #8]
  403280:	ldr	x0, [x8, #16]
  403284:	ldr	x1, [sp]
  403288:	bl	40320c <hashmap_get>
  40328c:	ldp	x29, x30, [sp, #16]
  403290:	add	sp, sp, #0x20
  403294:	ret

0000000000403298 <parse_cmdline_item>:
  403298:	sub	sp, sp, #0x40
  40329c:	stp	x29, x30, [sp, #48]
  4032a0:	add	x29, sp, #0x30
  4032a4:	adrp	x8, 408000 <_fini+0x1d4>
  4032a8:	add	x8, x8, #0x1d8
  4032ac:	add	x8, x8, #0x3
  4032b0:	stur	x0, [x29, #-16]
  4032b4:	str	x1, [sp, #24]
  4032b8:	str	x2, [sp, #16]
  4032bc:	ldr	x9, [sp, #16]
  4032c0:	str	x9, [sp, #8]
  4032c4:	str	x8, [sp]
  4032c8:	ldur	x8, [x29, #-16]
  4032cc:	cmp	x8, #0x0
  4032d0:	cset	w9, ne  // ne = any
  4032d4:	mov	w10, #0x1                   	// #1
  4032d8:	eor	w9, w9, #0x1
  4032dc:	eor	w9, w9, w10
  4032e0:	eor	w9, w9, w10
  4032e4:	and	w9, w9, #0x1
  4032e8:	mov	w0, w9
  4032ec:	sxtw	x8, w0
  4032f0:	cbz	x8, 403318 <parse_cmdline_item+0x80>
  4032f4:	mov	w8, wzr
  4032f8:	mov	w0, w8
  4032fc:	adrp	x1, 408000 <_fini+0x1d4>
  403300:	add	x1, x1, #0x1d4
  403304:	ldr	x2, [sp]
  403308:	mov	w3, #0x3a4                 	// #932
  40330c:	adrp	x4, 408000 <_fini+0x1d4>
  403310:	add	x4, x4, #0x205
  403314:	bl	401b18 <log_assert_failed_realm@plt>
  403318:	ldr	x8, [sp, #16]
  40331c:	cmp	x8, #0x0
  403320:	cset	w9, ne  // ne = any
  403324:	mov	w10, #0x1                   	// #1
  403328:	eor	w9, w9, #0x1
  40332c:	eor	w9, w9, w10
  403330:	eor	w9, w9, w10
  403334:	and	w9, w9, #0x1
  403338:	mov	w0, w9
  40333c:	sxtw	x8, w0
  403340:	cbz	x8, 403368 <parse_cmdline_item+0xd0>
  403344:	mov	w8, wzr
  403348:	mov	w0, w8
  40334c:	adrp	x1, 408000 <_fini+0x1d4>
  403350:	add	x1, x1, #0x240
  403354:	ldr	x2, [sp]
  403358:	mov	w3, #0x3a5                 	// #933
  40335c:	adrp	x4, 408000 <_fini+0x1d4>
  403360:	add	x4, x4, #0x205
  403364:	bl	401b18 <log_assert_failed_realm@plt>
  403368:	ldur	x0, [x29, #-16]
  40336c:	adrp	x1, 408000 <_fini+0x1d4>
  403370:	add	x1, x1, #0x245
  403374:	bl	401c08 <strcmp@plt>
  403378:	cbnz	w0, 403394 <parse_cmdline_item+0xfc>
  40337c:	ldr	x0, [sp, #8]
  403380:	ldur	x1, [x29, #-16]
  403384:	ldr	x2, [sp, #24]
  403388:	bl	4034dc <parse_cmdline_ip>
  40338c:	stur	w0, [x29, #-4]
  403390:	b	4034cc <parse_cmdline_item+0x234>
  403394:	ldur	x0, [x29, #-16]
  403398:	adrp	x1, 408000 <_fini+0x1d4>
  40339c:	add	x1, x1, #0x248
  4033a0:	bl	401c08 <strcmp@plt>
  4033a4:	cbnz	w0, 4033c0 <parse_cmdline_item+0x128>
  4033a8:	ldr	x0, [sp, #8]
  4033ac:	ldur	x1, [x29, #-16]
  4033b0:	ldr	x2, [sp, #24]
  4033b4:	bl	4035bc <parse_cmdline_rd_route>
  4033b8:	stur	w0, [x29, #-4]
  4033bc:	b	4034cc <parse_cmdline_item+0x234>
  4033c0:	ldur	x0, [x29, #-16]
  4033c4:	adrp	x1, 408000 <_fini+0x1d4>
  4033c8:	add	x1, x1, #0x251
  4033cc:	bl	401c08 <strcmp@plt>
  4033d0:	cbnz	w0, 4033ec <parse_cmdline_item+0x154>
  4033d4:	ldr	x0, [sp, #8]
  4033d8:	ldur	x1, [x29, #-16]
  4033dc:	ldr	x2, [sp, #24]
  4033e0:	bl	403ad4 <parse_cmdline_nameserver>
  4033e4:	stur	w0, [x29, #-4]
  4033e8:	b	4034cc <parse_cmdline_item+0x234>
  4033ec:	ldur	x0, [x29, #-16]
  4033f0:	adrp	x1, 408000 <_fini+0x1d4>
  4033f4:	add	x1, x1, #0x25c
  4033f8:	bl	401c08 <strcmp@plt>
  4033fc:	cbnz	w0, 403418 <parse_cmdline_item+0x180>
  403400:	ldr	x0, [sp, #8]
  403404:	ldur	x1, [x29, #-16]
  403408:	ldr	x2, [sp, #24]
  40340c:	bl	403b34 <parse_cmdline_rd_peerdns>
  403410:	stur	w0, [x29, #-4]
  403414:	b	4034cc <parse_cmdline_item+0x234>
  403418:	ldur	x0, [x29, #-16]
  40341c:	adrp	x1, 408000 <_fini+0x1d4>
  403420:	add	x1, x1, #0x267
  403424:	bl	401c08 <strcmp@plt>
  403428:	cbnz	w0, 403444 <parse_cmdline_item+0x1ac>
  40342c:	ldr	x0, [sp, #8]
  403430:	ldur	x1, [x29, #-16]
  403434:	ldr	x2, [sp, #24]
  403438:	bl	403bdc <parse_cmdline_vlan>
  40343c:	stur	w0, [x29, #-4]
  403440:	b	4034cc <parse_cmdline_item+0x234>
  403444:	ldur	x0, [x29, #-16]
  403448:	adrp	x1, 408000 <_fini+0x1d4>
  40344c:	add	x1, x1, #0x26c
  403450:	bl	401c08 <strcmp@plt>
  403454:	cbnz	w0, 403470 <parse_cmdline_item+0x1d8>
  403458:	ldr	x0, [sp, #8]
  40345c:	ldur	x1, [x29, #-16]
  403460:	ldr	x2, [sp, #24]
  403464:	bl	403d34 <parse_cmdline_bridge>
  403468:	stur	w0, [x29, #-4]
  40346c:	b	4034cc <parse_cmdline_item+0x234>
  403470:	ldur	x0, [x29, #-16]
  403474:	adrp	x1, 408000 <_fini+0x1d4>
  403478:	add	x1, x1, #0x273
  40347c:	bl	401c08 <strcmp@plt>
  403480:	cbnz	w0, 40349c <parse_cmdline_item+0x204>
  403484:	ldr	x0, [sp, #8]
  403488:	ldur	x1, [x29, #-16]
  40348c:	ldr	x2, [sp, #24]
  403490:	bl	403f40 <parse_cmdline_bond>
  403494:	stur	w0, [x29, #-4]
  403498:	b	4034cc <parse_cmdline_item+0x234>
  40349c:	ldur	x0, [x29, #-16]
  4034a0:	adrp	x1, 408000 <_fini+0x1d4>
  4034a4:	add	x1, x1, #0x278
  4034a8:	bl	401c08 <strcmp@plt>
  4034ac:	cbnz	w0, 4034c8 <parse_cmdline_item+0x230>
  4034b0:	ldr	x0, [sp, #8]
  4034b4:	ldur	x1, [x29, #-16]
  4034b8:	ldr	x2, [sp, #24]
  4034bc:	bl	404294 <parse_cmdline_ifname>
  4034c0:	stur	w0, [x29, #-4]
  4034c4:	b	4034cc <parse_cmdline_item+0x234>
  4034c8:	stur	wzr, [x29, #-4]
  4034cc:	ldur	w0, [x29, #-4]
  4034d0:	ldp	x29, x30, [sp, #48]
  4034d4:	add	sp, sp, #0x40
  4034d8:	ret

00000000004034dc <parse_cmdline_ip>:
  4034dc:	sub	sp, sp, #0x40
  4034e0:	stp	x29, x30, [sp, #48]
  4034e4:	add	x29, sp, #0x30
  4034e8:	stur	x0, [x29, #-16]
  4034ec:	str	x1, [sp, #24]
  4034f0:	str	x2, [sp, #16]
  4034f4:	ldr	x0, [sp, #24]
  4034f8:	ldr	x1, [sp, #16]
  4034fc:	bl	405c4c <proc_cmdline_value_missing>
  403500:	tbnz	w0, #0, 403508 <parse_cmdline_ip+0x2c>
  403504:	b	403514 <parse_cmdline_ip+0x38>
  403508:	mov	w8, #0xffffffea            	// #-22
  40350c:	stur	w8, [x29, #-4]
  403510:	b	4035ac <parse_cmdline_ip+0xd0>
  403514:	ldr	x0, [sp, #16]
  403518:	mov	w1, #0x3a                  	// #58
  40351c:	bl	401b08 <strchr@plt>
  403520:	str	x0, [sp, #8]
  403524:	ldr	x8, [sp, #8]
  403528:	cbnz	x8, 403548 <parse_cmdline_ip+0x6c>
  40352c:	ldur	x0, [x29, #-16]
  403530:	ldr	x2, [sp, #16]
  403534:	adrp	x1, 407000 <network_set_dns+0x4>
  403538:	add	x1, x1, #0xec8
  40353c:	bl	405d24 <network_set_dhcp_type>
  403540:	stur	w0, [x29, #-4]
  403544:	b	4035ac <parse_cmdline_ip+0xd0>
  403548:	ldr	x8, [sp, #16]
  40354c:	ldrb	w9, [x8]
  403550:	cmp	w9, #0x5b
  403554:	b.ne	403570 <parse_cmdline_ip+0x94>  // b.any
  403558:	ldur	x0, [x29, #-16]
  40355c:	ldr	x2, [sp, #16]
  403560:	mov	w1, #0xa                   	// #10
  403564:	bl	405dcc <parse_cmdline_ip_address>
  403568:	stur	w0, [x29, #-4]
  40356c:	b	4035ac <parse_cmdline_ip+0xd0>
  403570:	ldur	x0, [x29, #-16]
  403574:	ldr	x2, [sp, #16]
  403578:	mov	w1, #0x2                   	// #2
  40357c:	bl	405dcc <parse_cmdline_ip_address>
  403580:	str	w0, [sp, #4]
  403584:	ldr	w8, [sp, #4]
  403588:	cmp	w8, #0x0
  40358c:	cset	w8, ge  // ge = tcont
  403590:	tbnz	w8, #0, 4035a8 <parse_cmdline_ip+0xcc>
  403594:	ldur	x0, [x29, #-16]
  403598:	ldr	x1, [sp, #16]
  40359c:	bl	406394 <parse_cmdline_ip_interface>
  4035a0:	stur	w0, [x29, #-4]
  4035a4:	b	4035ac <parse_cmdline_ip+0xd0>
  4035a8:	stur	wzr, [x29, #-4]
  4035ac:	ldur	w0, [x29, #-4]
  4035b0:	ldp	x29, x30, [sp, #48]
  4035b4:	add	sp, sp, #0x40
  4035b8:	ret

00000000004035bc <parse_cmdline_rd_route>:
  4035bc:	stp	x29, x30, [sp, #-32]!
  4035c0:	str	x28, [sp, #16]
  4035c4:	mov	x29, sp
  4035c8:	sub	sp, sp, #0x110
  4035cc:	sub	x8, x29, #0x40
  4035d0:	adrp	x9, 408000 <_fini+0x1d4>
  4035d4:	add	x9, x9, #0x8b8
  4035d8:	adrp	x10, 408000 <_fini+0x1d4>
  4035dc:	add	x10, x10, #0x8b8
  4035e0:	adrp	x11, 408000 <_fini+0x1d4>
  4035e4:	add	x11, x11, #0x1d8
  4035e8:	add	x11, x11, #0x3
  4035ec:	stur	x0, [x29, #-16]
  4035f0:	stur	x1, [x29, #-24]
  4035f4:	stur	x2, [x29, #-32]
  4035f8:	ldr	q0, [x9]
  4035fc:	str	q0, [x8, #16]
  403600:	ldr	q0, [x10]
  403604:	str	q0, [x8]
  403608:	ldur	x0, [x29, #-24]
  40360c:	ldur	x1, [x29, #-32]
  403610:	stur	x11, [x29, #-240]
  403614:	bl	405c4c <proc_cmdline_value_missing>
  403618:	tbnz	w0, #0, 403620 <parse_cmdline_rd_route+0x64>
  40361c:	b	40362c <parse_cmdline_rd_route+0x70>
  403620:	mov	w8, #0xffffffea            	// #-22
  403624:	stur	w8, [x29, #-4]
  403628:	b	403ac0 <parse_cmdline_rd_route+0x504>
  40362c:	ldur	x8, [x29, #-32]
  403630:	ldrb	w9, [x8]
  403634:	cmp	w9, #0x5b
  403638:	b.ne	403728 <parse_cmdline_rd_route+0x16c>  // b.any
  40363c:	ldur	x0, [x29, #-32]
  403640:	mov	w1, #0x5d                  	// #93
  403644:	bl	401b08 <strchr@plt>
  403648:	stur	x0, [x29, #-88]
  40364c:	ldur	x8, [x29, #-88]
  403650:	cbnz	x8, 403660 <parse_cmdline_rd_route+0xa4>
  403654:	mov	w8, #0xffffffea            	// #-22
  403658:	stur	w8, [x29, #-4]
  40365c:	b	403ac0 <parse_cmdline_rd_route+0x504>
  403660:	ldur	x8, [x29, #-88]
  403664:	ldrb	w9, [x8, #1]
  403668:	cmp	w9, #0x3a
  40366c:	b.eq	40367c <parse_cmdline_rd_route+0xc0>  // b.none
  403670:	mov	w8, #0xffffffea            	// #-22
  403674:	stur	w8, [x29, #-4]
  403678:	b	403ac0 <parse_cmdline_rd_route+0x504>
  40367c:	ldur	x8, [x29, #-32]
  403680:	add	x8, x8, #0x1
  403684:	stur	x8, [x29, #-104]
  403688:	ldur	x0, [x29, #-104]
  40368c:	ldur	x8, [x29, #-88]
  403690:	ldur	x9, [x29, #-32]
  403694:	subs	x8, x8, x9
  403698:	mov	x9, #0x1                   	// #1
  40369c:	subs	x1, x8, #0x1
  4036a0:	stur	x9, [x29, #-248]
  4036a4:	bl	401c18 <strnlen@plt>
  4036a8:	stur	x0, [x29, #-112]
  4036ac:	ldur	x8, [x29, #-112]
  4036b0:	add	x8, x8, #0x1
  4036b4:	ldur	x9, [x29, #-248]
  4036b8:	mul	x8, x8, x9
  4036bc:	add	x8, x8, #0xf
  4036c0:	and	x8, x8, #0xfffffffffffffff0
  4036c4:	mov	x10, sp
  4036c8:	subs	x8, x10, x8
  4036cc:	mov	sp, x8
  4036d0:	stur	x8, [x29, #-120]
  4036d4:	ldur	x8, [x29, #-120]
  4036d8:	ldur	x10, [x29, #-112]
  4036dc:	add	x8, x8, x10
  4036e0:	mov	w11, #0x0                   	// #0
  4036e4:	strb	w11, [x8]
  4036e8:	ldur	x8, [x29, #-120]
  4036ec:	ldur	x1, [x29, #-104]
  4036f0:	ldur	x2, [x29, #-112]
  4036f4:	mov	x0, x8
  4036f8:	stur	x8, [x29, #-256]
  4036fc:	bl	401c28 <memcpy@plt>
  403700:	ldur	x8, [x29, #-256]
  403704:	stur	x8, [x29, #-128]
  403708:	ldur	x9, [x29, #-128]
  40370c:	stur	x9, [x29, #-80]
  403710:	ldur	x9, [x29, #-88]
  403714:	add	x9, x9, #0x2
  403718:	stur	x9, [x29, #-32]
  40371c:	mov	w11, #0xa                   	// #10
  403720:	stur	w11, [x29, #-92]
  403724:	b	4037ec <parse_cmdline_rd_route+0x230>
  403728:	ldur	x0, [x29, #-32]
  40372c:	mov	w1, #0x3a                  	// #58
  403730:	bl	401b08 <strchr@plt>
  403734:	stur	x0, [x29, #-88]
  403738:	ldur	x8, [x29, #-88]
  40373c:	cbnz	x8, 40374c <parse_cmdline_rd_route+0x190>
  403740:	mov	w8, #0xffffffea            	// #-22
  403744:	stur	w8, [x29, #-4]
  403748:	b	403ac0 <parse_cmdline_rd_route+0x504>
  40374c:	ldur	x8, [x29, #-32]
  403750:	stur	x8, [x29, #-136]
  403754:	ldur	x0, [x29, #-136]
  403758:	ldur	x8, [x29, #-88]
  40375c:	ldur	x9, [x29, #-32]
  403760:	subs	x1, x8, x9
  403764:	bl	401c18 <strnlen@plt>
  403768:	stur	x0, [x29, #-144]
  40376c:	ldur	x8, [x29, #-144]
  403770:	mov	x9, #0x1                   	// #1
  403774:	add	x8, x8, #0x1
  403778:	mul	x8, x8, x9
  40377c:	add	x8, x8, #0xf
  403780:	and	x8, x8, #0xfffffffffffffff0
  403784:	mov	x9, sp
  403788:	subs	x8, x9, x8
  40378c:	mov	sp, x8
  403790:	stur	x8, [x29, #-152]
  403794:	ldur	x8, [x29, #-152]
  403798:	ldur	x9, [x29, #-144]
  40379c:	add	x8, x8, x9
  4037a0:	mov	w10, #0x0                   	// #0
  4037a4:	strb	w10, [x8]
  4037a8:	ldur	x8, [x29, #-152]
  4037ac:	ldur	x1, [x29, #-136]
  4037b0:	ldur	x2, [x29, #-144]
  4037b4:	mov	x0, x8
  4037b8:	sub	x9, x29, #0x8
  4037bc:	stur	x8, [x9, #-256]
  4037c0:	bl	401c28 <memcpy@plt>
  4037c4:	sub	x8, x29, #0x8
  4037c8:	ldur	x8, [x8, #-256]
  4037cc:	stur	x8, [x29, #-160]
  4037d0:	ldur	x9, [x29, #-160]
  4037d4:	stur	x9, [x29, #-80]
  4037d8:	ldur	x9, [x29, #-88]
  4037dc:	add	x9, x9, #0x1
  4037e0:	stur	x9, [x29, #-32]
  4037e4:	mov	w10, #0x2                   	// #2
  4037e8:	stur	w10, [x29, #-92]
  4037ec:	ldur	x0, [x29, #-80]
  4037f0:	ldur	w1, [x29, #-92]
  4037f4:	sub	x2, x29, #0x30
  4037f8:	sub	x3, x29, #0x41
  4037fc:	bl	401c38 <in_addr_prefix_from_string@plt>
  403800:	stur	w0, [x29, #-96]
  403804:	ldur	w8, [x29, #-96]
  403808:	cmp	w8, #0x0
  40380c:	cset	w8, ge  // ge = tcont
  403810:	tbnz	w8, #0, 403820 <parse_cmdline_rd_route+0x264>
  403814:	ldur	w8, [x29, #-96]
  403818:	stur	w8, [x29, #-4]
  40381c:	b	403ac0 <parse_cmdline_rd_route+0x504>
  403820:	ldur	x0, [x29, #-32]
  403824:	mov	w1, #0x3a                  	// #58
  403828:	bl	401b08 <strchr@plt>
  40382c:	stur	x0, [x29, #-88]
  403830:	ldur	x8, [x29, #-88]
  403834:	cbnz	x8, 403a70 <parse_cmdline_rd_route+0x4b4>
  403838:	ldur	x8, [x29, #-32]
  40383c:	sub	x9, x29, #0xb0
  403840:	stur	x8, [x29, #-176]
  403844:	adrp	x8, 408000 <_fini+0x1d4>
  403848:	add	x8, x8, #0x5d4
  40384c:	str	x8, [x9, #8]
  403850:	stur	xzr, [x29, #-200]
  403854:	stur	xzr, [x29, #-208]
  403858:	ldur	x8, [x29, #-208]
  40385c:	mov	w9, #0x0                   	// #0
  403860:	cmp	x8, #0x2
  403864:	sub	x8, x29, #0xc
  403868:	stur	w9, [x8, #-256]
  40386c:	b.cs	403898 <parse_cmdline_rd_route+0x2dc>  // b.hs, b.nlast
  403870:	ldur	x8, [x29, #-208]
  403874:	mov	x9, #0x8                   	// #8
  403878:	mul	x8, x9, x8
  40387c:	sub	x9, x29, #0xb0
  403880:	add	x8, x9, x8
  403884:	ldr	x8, [x8]
  403888:	cmp	x8, #0x0
  40388c:	cset	w10, ne  // ne = any
  403890:	sub	x8, x29, #0xc
  403894:	stur	w10, [x8, #-256]
  403898:	sub	x8, x29, #0xc
  40389c:	ldur	w8, [x8, #-256]
  4038a0:	tbnz	w8, #0, 4038a8 <parse_cmdline_rd_route+0x2ec>
  4038a4:	b	4038e0 <parse_cmdline_rd_route+0x324>
  4038a8:	ldur	x8, [x29, #-208]
  4038ac:	mov	x9, #0x8                   	// #8
  4038b0:	mul	x8, x9, x8
  4038b4:	sub	x9, x29, #0xb0
  4038b8:	add	x8, x9, x8
  4038bc:	ldr	x0, [x8]
  4038c0:	bl	401b68 <strlen@plt>
  4038c4:	ldur	x8, [x29, #-200]
  4038c8:	add	x8, x8, x0
  4038cc:	stur	x8, [x29, #-200]
  4038d0:	ldur	x8, [x29, #-208]
  4038d4:	add	x8, x8, #0x1
  4038d8:	stur	x8, [x29, #-208]
  4038dc:	b	403858 <parse_cmdline_rd_route+0x29c>
  4038e0:	ldur	x8, [x29, #-200]
  4038e4:	add	x8, x8, #0x1
  4038e8:	stur	x8, [x29, #-216]
  4038ec:	ldur	x1, [x29, #-216]
  4038f0:	mov	x0, #0x1                   	// #1
  4038f4:	bl	406898 <size_multiply_overflow>
  4038f8:	mov	w8, #0x1                   	// #1
  4038fc:	eor	w9, w0, #0x1
  403900:	eor	w9, w9, w8
  403904:	eor	w9, w9, w8
  403908:	eor	w8, w9, w8
  40390c:	and	w8, w8, #0x1
  403910:	mov	w1, w8
  403914:	sxtw	x10, w1
  403918:	cbz	x10, 403940 <parse_cmdline_rd_route+0x384>
  40391c:	mov	w8, wzr
  403920:	mov	w0, w8
  403924:	adrp	x1, 408000 <_fini+0x1d4>
  403928:	add	x1, x1, #0x38
  40392c:	ldur	x2, [x29, #-240]
  403930:	mov	w3, #0x2f6                 	// #758
  403934:	adrp	x4, 408000 <_fini+0x1d4>
  403938:	add	x4, x4, #0x5d6
  40393c:	bl	401b18 <log_assert_failed_realm@plt>
  403940:	ldur	x8, [x29, #-216]
  403944:	mov	x9, #0x1                   	// #1
  403948:	mul	x8, x9, x8
  40394c:	cmp	x8, #0x400, lsl #12
  403950:	cset	w10, ls  // ls = plast
  403954:	mov	w11, #0x1                   	// #1
  403958:	eor	w10, w10, #0x1
  40395c:	eor	w10, w10, w11
  403960:	eor	w10, w10, w11
  403964:	and	w10, w10, #0x1
  403968:	mov	w0, w10
  40396c:	sxtw	x8, w0
  403970:	cbz	x8, 403998 <parse_cmdline_rd_route+0x3dc>
  403974:	mov	w8, wzr
  403978:	mov	w0, w8
  40397c:	adrp	x1, 408000 <_fini+0x1d4>
  403980:	add	x1, x1, #0x7f
  403984:	ldur	x2, [x29, #-240]
  403988:	mov	w3, #0x2f6                 	// #758
  40398c:	adrp	x4, 408000 <_fini+0x1d4>
  403990:	add	x4, x4, #0x5d6
  403994:	bl	401b18 <log_assert_failed_realm@plt>
  403998:	ldur	x8, [x29, #-216]
  40399c:	mov	x9, #0x1                   	// #1
  4039a0:	mul	x8, x9, x8
  4039a4:	mul	x8, x8, x9
  4039a8:	add	x8, x8, #0xf
  4039ac:	and	x8, x8, #0xfffffffffffffff0
  4039b0:	mov	x9, sp
  4039b4:	subs	x8, x9, x8
  4039b8:	mov	sp, x8
  4039bc:	stur	x8, [x29, #-224]
  4039c0:	ldur	x8, [x29, #-224]
  4039c4:	stur	x8, [x29, #-184]
  4039c8:	stur	x8, [x29, #-192]
  4039cc:	stur	xzr, [x29, #-208]
  4039d0:	ldur	x8, [x29, #-208]
  4039d4:	mov	w9, #0x0                   	// #0
  4039d8:	cmp	x8, #0x2
  4039dc:	sub	x8, x29, #0x10
  4039e0:	stur	w9, [x8, #-256]
  4039e4:	b.cs	403a10 <parse_cmdline_rd_route+0x454>  // b.hs, b.nlast
  4039e8:	ldur	x8, [x29, #-208]
  4039ec:	mov	x9, #0x8                   	// #8
  4039f0:	mul	x8, x9, x8
  4039f4:	sub	x9, x29, #0xb0
  4039f8:	add	x8, x9, x8
  4039fc:	ldr	x8, [x8]
  403a00:	cmp	x8, #0x0
  403a04:	cset	w10, ne  // ne = any
  403a08:	sub	x8, x29, #0x10
  403a0c:	stur	w10, [x8, #-256]
  403a10:	sub	x8, x29, #0x10
  403a14:	ldur	w8, [x8, #-256]
  403a18:	tbnz	w8, #0, 403a20 <parse_cmdline_rd_route+0x464>
  403a1c:	b	403a54 <parse_cmdline_rd_route+0x498>
  403a20:	ldur	x0, [x29, #-192]
  403a24:	ldur	x8, [x29, #-208]
  403a28:	mov	x9, #0x8                   	// #8
  403a2c:	mul	x8, x9, x8
  403a30:	sub	x9, x29, #0xb0
  403a34:	add	x8, x9, x8
  403a38:	ldr	x1, [x8]
  403a3c:	bl	401b78 <stpcpy@plt>
  403a40:	stur	x0, [x29, #-192]
  403a44:	ldur	x8, [x29, #-208]
  403a48:	add	x8, x8, #0x1
  403a4c:	stur	x8, [x29, #-208]
  403a50:	b	4039d0 <parse_cmdline_rd_route+0x414>
  403a54:	ldur	x8, [x29, #-192]
  403a58:	mov	w9, #0x0                   	// #0
  403a5c:	strb	w9, [x8]
  403a60:	ldur	x8, [x29, #-184]
  403a64:	stur	x8, [x29, #-232]
  403a68:	ldur	x8, [x29, #-232]
  403a6c:	stur	x8, [x29, #-32]
  403a70:	ldur	w0, [x29, #-92]
  403a74:	sub	x1, x29, #0x20
  403a78:	sub	x2, x29, #0x40
  403a7c:	bl	406900 <parse_ip_address_one>
  403a80:	stur	w0, [x29, #-96]
  403a84:	ldur	w8, [x29, #-96]
  403a88:	cmp	w8, #0x0
  403a8c:	cset	w8, ge  // ge = tcont
  403a90:	tbnz	w8, #0, 403aa0 <parse_cmdline_rd_route+0x4e4>
  403a94:	ldur	w8, [x29, #-96]
  403a98:	stur	w8, [x29, #-4]
  403a9c:	b	403ac0 <parse_cmdline_rd_route+0x504>
  403aa0:	ldur	x0, [x29, #-16]
  403aa4:	ldur	x1, [x29, #-32]
  403aa8:	ldur	w2, [x29, #-92]
  403aac:	ldurb	w3, [x29, #-65]
  403ab0:	sub	x4, x29, #0x30
  403ab4:	sub	x5, x29, #0x40
  403ab8:	bl	406df0 <network_set_route>
  403abc:	stur	w0, [x29, #-4]
  403ac0:	ldur	w0, [x29, #-4]
  403ac4:	mov	sp, x29
  403ac8:	ldr	x28, [sp, #16]
  403acc:	ldp	x29, x30, [sp], #32
  403ad0:	ret

0000000000403ad4 <parse_cmdline_nameserver>:
  403ad4:	sub	sp, sp, #0x30
  403ad8:	stp	x29, x30, [sp, #32]
  403adc:	add	x29, sp, #0x20
  403ae0:	str	x0, [sp, #16]
  403ae4:	str	x1, [sp, #8]
  403ae8:	str	x2, [sp]
  403aec:	ldr	x0, [sp, #8]
  403af0:	ldr	x1, [sp]
  403af4:	bl	405c4c <proc_cmdline_value_missing>
  403af8:	tbnz	w0, #0, 403b00 <parse_cmdline_nameserver+0x2c>
  403afc:	b	403b0c <parse_cmdline_nameserver+0x38>
  403b00:	mov	w8, #0xffffffea            	// #-22
  403b04:	stur	w8, [x29, #-4]
  403b08:	b	403b24 <parse_cmdline_nameserver+0x50>
  403b0c:	ldr	x0, [sp, #16]
  403b10:	ldr	x2, [sp]
  403b14:	adrp	x1, 407000 <network_set_dns+0x4>
  403b18:	add	x1, x1, #0xec8
  403b1c:	bl	406ffc <network_set_dns>
  403b20:	stur	w0, [x29, #-4]
  403b24:	ldur	w0, [x29, #-4]
  403b28:	ldp	x29, x30, [sp, #32]
  403b2c:	add	sp, sp, #0x30
  403b30:	ret

0000000000403b34 <parse_cmdline_rd_peerdns>:
  403b34:	sub	sp, sp, #0x40
  403b38:	stp	x29, x30, [sp, #48]
  403b3c:	add	x29, sp, #0x30
  403b40:	stur	x0, [x29, #-16]
  403b44:	str	x1, [sp, #24]
  403b48:	str	x2, [sp, #16]
  403b4c:	ldr	x0, [sp, #24]
  403b50:	ldr	x1, [sp, #16]
  403b54:	bl	405c4c <proc_cmdline_value_missing>
  403b58:	tbnz	w0, #0, 403b60 <parse_cmdline_rd_peerdns+0x2c>
  403b5c:	b	403b80 <parse_cmdline_rd_peerdns+0x4c>
  403b60:	ldur	x0, [x29, #-16]
  403b64:	adrp	x1, 407000 <network_set_dns+0x4>
  403b68:	add	x1, x1, #0xec8
  403b6c:	mov	w8, #0x1                   	// #1
  403b70:	and	w2, w8, #0x1
  403b74:	bl	407348 <network_set_dhcp_use_dns>
  403b78:	stur	w0, [x29, #-4]
  403b7c:	b	403bcc <parse_cmdline_rd_peerdns+0x98>
  403b80:	ldr	x0, [sp, #16]
  403b84:	bl	401c48 <parse_boolean@plt>
  403b88:	str	w0, [sp, #12]
  403b8c:	ldr	w8, [sp, #12]
  403b90:	cmp	w8, #0x0
  403b94:	cset	w8, ge  // ge = tcont
  403b98:	tbnz	w8, #0, 403ba8 <parse_cmdline_rd_peerdns+0x74>
  403b9c:	ldr	w8, [sp, #12]
  403ba0:	stur	w8, [x29, #-4]
  403ba4:	b	403bcc <parse_cmdline_rd_peerdns+0x98>
  403ba8:	ldur	x0, [x29, #-16]
  403bac:	ldr	w8, [sp, #12]
  403bb0:	cmp	w8, #0x0
  403bb4:	cset	w8, ne  // ne = any
  403bb8:	adrp	x1, 407000 <network_set_dns+0x4>
  403bbc:	add	x1, x1, #0xec8
  403bc0:	and	w2, w8, #0x1
  403bc4:	bl	407348 <network_set_dhcp_use_dns>
  403bc8:	stur	w0, [x29, #-4]
  403bcc:	ldur	w0, [x29, #-4]
  403bd0:	ldp	x29, x30, [sp, #48]
  403bd4:	add	sp, sp, #0x40
  403bd8:	ret

0000000000403bdc <parse_cmdline_vlan>:
  403bdc:	stp	x29, x30, [sp, #-16]!
  403be0:	mov	x29, sp
  403be4:	sub	sp, sp, #0x70
  403be8:	stur	x0, [x29, #-16]
  403bec:	stur	x1, [x29, #-24]
  403bf0:	stur	x2, [x29, #-32]
  403bf4:	ldur	x0, [x29, #-24]
  403bf8:	ldur	x1, [x29, #-32]
  403bfc:	bl	405c4c <proc_cmdline_value_missing>
  403c00:	tbnz	w0, #0, 403c08 <parse_cmdline_vlan+0x2c>
  403c04:	b	403c14 <parse_cmdline_vlan+0x38>
  403c08:	mov	w8, #0xffffffea            	// #-22
  403c0c:	stur	w8, [x29, #-4]
  403c10:	b	403d24 <parse_cmdline_vlan+0x148>
  403c14:	ldur	x0, [x29, #-32]
  403c18:	mov	w1, #0x3a                  	// #58
  403c1c:	bl	401b08 <strchr@plt>
  403c20:	stur	x0, [x29, #-48]
  403c24:	ldur	x8, [x29, #-48]
  403c28:	cbnz	x8, 403c38 <parse_cmdline_vlan+0x5c>
  403c2c:	mov	w8, #0xffffffea            	// #-22
  403c30:	stur	w8, [x29, #-4]
  403c34:	b	403d24 <parse_cmdline_vlan+0x148>
  403c38:	ldur	x8, [x29, #-32]
  403c3c:	stur	x8, [x29, #-72]
  403c40:	ldur	x0, [x29, #-72]
  403c44:	ldur	x8, [x29, #-48]
  403c48:	ldur	x9, [x29, #-32]
  403c4c:	subs	x1, x8, x9
  403c50:	bl	401c18 <strnlen@plt>
  403c54:	stur	x0, [x29, #-80]
  403c58:	ldur	x8, [x29, #-80]
  403c5c:	mov	x9, #0x1                   	// #1
  403c60:	add	x8, x8, #0x1
  403c64:	mul	x8, x8, x9
  403c68:	add	x8, x8, #0xf
  403c6c:	and	x8, x8, #0xfffffffffffffff0
  403c70:	mov	x9, sp
  403c74:	subs	x8, x9, x8
  403c78:	mov	sp, x8
  403c7c:	stur	x8, [x29, #-88]
  403c80:	ldur	x8, [x29, #-88]
  403c84:	ldur	x9, [x29, #-80]
  403c88:	add	x8, x8, x9
  403c8c:	mov	w10, #0x0                   	// #0
  403c90:	strb	w10, [x8]
  403c94:	ldur	x8, [x29, #-88]
  403c98:	ldur	x1, [x29, #-72]
  403c9c:	ldur	x2, [x29, #-80]
  403ca0:	mov	x0, x8
  403ca4:	stur	x8, [x29, #-104]
  403ca8:	bl	401c28 <memcpy@plt>
  403cac:	ldur	x8, [x29, #-104]
  403cb0:	stur	x8, [x29, #-96]
  403cb4:	ldur	x9, [x29, #-96]
  403cb8:	stur	x9, [x29, #-40]
  403cbc:	ldur	x0, [x29, #-16]
  403cc0:	ldur	x1, [x29, #-40]
  403cc4:	bl	403238 <netdev_get>
  403cc8:	stur	x0, [x29, #-56]
  403ccc:	ldur	x8, [x29, #-56]
  403cd0:	cbnz	x8, 403d0c <parse_cmdline_vlan+0x130>
  403cd4:	ldur	x0, [x29, #-16]
  403cd8:	ldur	x2, [x29, #-40]
  403cdc:	adrp	x1, 408000 <_fini+0x1d4>
  403ce0:	add	x1, x1, #0x267
  403ce4:	sub	x3, x29, #0x38
  403ce8:	bl	4073d0 <netdev_new>
  403cec:	stur	w0, [x29, #-60]
  403cf0:	ldur	w8, [x29, #-60]
  403cf4:	cmp	w8, #0x0
  403cf8:	cset	w8, ge  // ge = tcont
  403cfc:	tbnz	w8, #0, 403d0c <parse_cmdline_vlan+0x130>
  403d00:	ldur	w8, [x29, #-60]
  403d04:	stur	w8, [x29, #-4]
  403d08:	b	403d24 <parse_cmdline_vlan+0x148>
  403d0c:	ldur	x0, [x29, #-16]
  403d10:	ldur	x8, [x29, #-48]
  403d14:	add	x1, x8, #0x1
  403d18:	ldur	x2, [x29, #-40]
  403d1c:	bl	40762c <network_set_vlan>
  403d20:	stur	w0, [x29, #-4]
  403d24:	ldur	w0, [x29, #-4]
  403d28:	mov	sp, x29
  403d2c:	ldp	x29, x30, [sp], #16
  403d30:	ret

0000000000403d34 <parse_cmdline_bridge>:
  403d34:	stp	x29, x30, [sp, #-16]!
  403d38:	mov	x29, sp
  403d3c:	sub	sp, sp, #0x80
  403d40:	stur	x0, [x29, #-16]
  403d44:	stur	x1, [x29, #-24]
  403d48:	stur	x2, [x29, #-32]
  403d4c:	ldur	x0, [x29, #-24]
  403d50:	ldur	x1, [x29, #-32]
  403d54:	bl	405c4c <proc_cmdline_value_missing>
  403d58:	tbnz	w0, #0, 403d60 <parse_cmdline_bridge+0x2c>
  403d5c:	b	403d6c <parse_cmdline_bridge+0x38>
  403d60:	mov	w8, #0xffffffea            	// #-22
  403d64:	stur	w8, [x29, #-4]
  403d68:	b	403f30 <parse_cmdline_bridge+0x1fc>
  403d6c:	ldur	x0, [x29, #-32]
  403d70:	mov	w1, #0x3a                  	// #58
  403d74:	bl	401b08 <strchr@plt>
  403d78:	stur	x0, [x29, #-48]
  403d7c:	ldur	x8, [x29, #-48]
  403d80:	cbnz	x8, 403d90 <parse_cmdline_bridge+0x5c>
  403d84:	mov	w8, #0xffffffea            	// #-22
  403d88:	stur	w8, [x29, #-4]
  403d8c:	b	403f30 <parse_cmdline_bridge+0x1fc>
  403d90:	ldur	x8, [x29, #-32]
  403d94:	stur	x8, [x29, #-72]
  403d98:	ldur	x0, [x29, #-72]
  403d9c:	ldur	x8, [x29, #-48]
  403da0:	ldur	x9, [x29, #-32]
  403da4:	subs	x1, x8, x9
  403da8:	bl	401c18 <strnlen@plt>
  403dac:	stur	x0, [x29, #-80]
  403db0:	ldur	x8, [x29, #-80]
  403db4:	mov	x9, #0x1                   	// #1
  403db8:	add	x8, x8, #0x1
  403dbc:	mul	x8, x8, x9
  403dc0:	add	x8, x8, #0xf
  403dc4:	and	x8, x8, #0xfffffffffffffff0
  403dc8:	mov	x9, sp
  403dcc:	subs	x8, x9, x8
  403dd0:	mov	sp, x8
  403dd4:	stur	x8, [x29, #-88]
  403dd8:	ldur	x8, [x29, #-88]
  403ddc:	ldur	x9, [x29, #-80]
  403de0:	add	x8, x8, x9
  403de4:	mov	w10, #0x0                   	// #0
  403de8:	strb	w10, [x8]
  403dec:	ldur	x8, [x29, #-88]
  403df0:	ldur	x1, [x29, #-72]
  403df4:	ldur	x2, [x29, #-80]
  403df8:	mov	x0, x8
  403dfc:	stur	x8, [x29, #-120]
  403e00:	bl	401c28 <memcpy@plt>
  403e04:	ldur	x8, [x29, #-120]
  403e08:	stur	x8, [x29, #-96]
  403e0c:	ldur	x9, [x29, #-96]
  403e10:	stur	x9, [x29, #-40]
  403e14:	ldur	x0, [x29, #-16]
  403e18:	ldur	x1, [x29, #-40]
  403e1c:	bl	403238 <netdev_get>
  403e20:	stur	x0, [x29, #-56]
  403e24:	ldur	x8, [x29, #-56]
  403e28:	cbnz	x8, 403e64 <parse_cmdline_bridge+0x130>
  403e2c:	ldur	x0, [x29, #-16]
  403e30:	ldur	x2, [x29, #-40]
  403e34:	adrp	x1, 408000 <_fini+0x1d4>
  403e38:	add	x1, x1, #0x26c
  403e3c:	sub	x3, x29, #0x38
  403e40:	bl	4073d0 <netdev_new>
  403e44:	stur	w0, [x29, #-60]
  403e48:	ldur	w8, [x29, #-60]
  403e4c:	cmp	w8, #0x0
  403e50:	cset	w8, ge  // ge = tcont
  403e54:	tbnz	w8, #0, 403e64 <parse_cmdline_bridge+0x130>
  403e58:	ldur	w8, [x29, #-60]
  403e5c:	stur	w8, [x29, #-4]
  403e60:	b	403f30 <parse_cmdline_bridge+0x1fc>
  403e64:	ldur	x8, [x29, #-48]
  403e68:	add	x8, x8, #0x1
  403e6c:	stur	x8, [x29, #-48]
  403e70:	ldur	x0, [x29, #-48]
  403e74:	bl	404ee0 <isempty>
  403e78:	tbnz	w0, #0, 403e80 <parse_cmdline_bridge+0x14c>
  403e7c:	b	403e8c <parse_cmdline_bridge+0x158>
  403e80:	mov	w8, #0xffffffea            	// #-22
  403e84:	stur	w8, [x29, #-4]
  403e88:	b	403f30 <parse_cmdline_bridge+0x1fc>
  403e8c:	sub	x1, x29, #0x68
  403e90:	mov	x8, xzr
  403e94:	stur	x8, [x29, #-104]
  403e98:	sub	x0, x29, #0x30
  403e9c:	adrp	x2, 408000 <_fini+0x1d4>
  403ea0:	add	x2, x2, #0x659
  403ea4:	mov	w9, wzr
  403ea8:	mov	w3, w9
  403eac:	bl	401c58 <extract_first_word@plt>
  403eb0:	stur	w0, [x29, #-60]
  403eb4:	ldur	w9, [x29, #-60]
  403eb8:	cmp	w9, #0x0
  403ebc:	cset	w9, gt
  403ec0:	tbnz	w9, #0, 403ed8 <parse_cmdline_bridge+0x1a4>
  403ec4:	ldur	w8, [x29, #-60]
  403ec8:	stur	w8, [x29, #-4]
  403ecc:	mov	w8, #0x1                   	// #1
  403ed0:	stur	w8, [x29, #-108]
  403ed4:	b	403f14 <parse_cmdline_bridge+0x1e0>
  403ed8:	ldur	x0, [x29, #-16]
  403edc:	ldur	x1, [x29, #-104]
  403ee0:	ldur	x2, [x29, #-40]
  403ee4:	bl	4076e4 <network_set_bridge>
  403ee8:	stur	w0, [x29, #-60]
  403eec:	ldur	w8, [x29, #-60]
  403ef0:	cmp	w8, #0x0
  403ef4:	cset	w8, ge  // ge = tcont
  403ef8:	tbnz	w8, #0, 403f10 <parse_cmdline_bridge+0x1dc>
  403efc:	ldur	w8, [x29, #-60]
  403f00:	stur	w8, [x29, #-4]
  403f04:	mov	w8, #0x1                   	// #1
  403f08:	stur	w8, [x29, #-108]
  403f0c:	b	403f14 <parse_cmdline_bridge+0x1e0>
  403f10:	stur	wzr, [x29, #-108]
  403f14:	sub	x0, x29, #0x68
  403f18:	bl	405734 <freep>
  403f1c:	ldur	w8, [x29, #-108]
  403f20:	cbz	w8, 403f2c <parse_cmdline_bridge+0x1f8>
  403f24:	b	403f28 <parse_cmdline_bridge+0x1f4>
  403f28:	b	403f30 <parse_cmdline_bridge+0x1fc>
  403f2c:	b	403e8c <parse_cmdline_bridge+0x158>
  403f30:	ldur	w0, [x29, #-4]
  403f34:	mov	sp, x29
  403f38:	ldp	x29, x30, [sp], #16
  403f3c:	ret

0000000000403f40 <parse_cmdline_bond>:
  403f40:	stp	x29, x30, [sp, #-16]!
  403f44:	mov	x29, sp
  403f48:	sub	sp, sp, #0xc0
  403f4c:	sub	x8, x29, #0x18
  403f50:	str	x0, [x8, #8]
  403f54:	str	x1, [x8]
  403f58:	stur	x2, [x29, #-32]
  403f5c:	ldr	x0, [x8]
  403f60:	ldur	x1, [x29, #-32]
  403f64:	stur	x8, [x29, #-168]
  403f68:	bl	405c4c <proc_cmdline_value_missing>
  403f6c:	tbnz	w0, #0, 403f74 <parse_cmdline_bond+0x34>
  403f70:	b	403f80 <parse_cmdline_bond+0x40>
  403f74:	mov	w8, #0xffffffea            	// #-22
  403f78:	stur	w8, [x29, #-4]
  403f7c:	b	404284 <parse_cmdline_bond+0x344>
  403f80:	ldur	x0, [x29, #-32]
  403f84:	mov	w1, #0x3a                  	// #58
  403f88:	bl	401b08 <strchr@plt>
  403f8c:	stur	x0, [x29, #-56]
  403f90:	ldur	x8, [x29, #-56]
  403f94:	cbnz	x8, 403fa4 <parse_cmdline_bond+0x64>
  403f98:	mov	w8, #0xffffffea            	// #-22
  403f9c:	stur	w8, [x29, #-4]
  403fa0:	b	404284 <parse_cmdline_bond+0x344>
  403fa4:	ldur	x8, [x29, #-32]
  403fa8:	stur	x8, [x29, #-80]
  403fac:	ldur	x0, [x29, #-80]
  403fb0:	ldur	x8, [x29, #-56]
  403fb4:	ldur	x9, [x29, #-32]
  403fb8:	subs	x1, x8, x9
  403fbc:	bl	401c18 <strnlen@plt>
  403fc0:	stur	x0, [x29, #-88]
  403fc4:	ldur	x8, [x29, #-88]
  403fc8:	mov	x9, #0x1                   	// #1
  403fcc:	add	x8, x8, #0x1
  403fd0:	mul	x8, x8, x9
  403fd4:	add	x8, x8, #0xf
  403fd8:	and	x8, x8, #0xfffffffffffffff0
  403fdc:	mov	x9, sp
  403fe0:	subs	x8, x9, x8
  403fe4:	mov	sp, x8
  403fe8:	stur	x8, [x29, #-96]
  403fec:	ldur	x8, [x29, #-96]
  403ff0:	ldur	x9, [x29, #-88]
  403ff4:	add	x8, x8, x9
  403ff8:	mov	w10, #0x0                   	// #0
  403ffc:	strb	w10, [x8]
  404000:	ldur	x8, [x29, #-96]
  404004:	ldur	x1, [x29, #-80]
  404008:	ldur	x2, [x29, #-88]
  40400c:	mov	x0, x8
  404010:	stur	x8, [x29, #-176]
  404014:	bl	401c28 <memcpy@plt>
  404018:	ldur	x8, [x29, #-176]
  40401c:	stur	x8, [x29, #-104]
  404020:	ldur	x9, [x29, #-104]
  404024:	stur	x9, [x29, #-40]
  404028:	ldur	x9, [x29, #-168]
  40402c:	ldr	x0, [x9, #8]
  404030:	ldur	x1, [x29, #-40]
  404034:	bl	403238 <netdev_get>
  404038:	stur	x0, [x29, #-64]
  40403c:	ldur	x8, [x29, #-64]
  404040:	cbnz	x8, 404080 <parse_cmdline_bond+0x140>
  404044:	ldur	x8, [x29, #-168]
  404048:	ldr	x0, [x8, #8]
  40404c:	ldur	x2, [x29, #-40]
  404050:	adrp	x1, 408000 <_fini+0x1d4>
  404054:	add	x1, x1, #0x273
  404058:	sub	x3, x29, #0x40
  40405c:	bl	4073d0 <netdev_new>
  404060:	stur	w0, [x29, #-68]
  404064:	ldur	w9, [x29, #-68]
  404068:	cmp	w9, #0x0
  40406c:	cset	w9, ge  // ge = tcont
  404070:	tbnz	w9, #0, 404080 <parse_cmdline_bond+0x140>
  404074:	ldur	w8, [x29, #-68]
  404078:	stur	w8, [x29, #-4]
  40407c:	b	404284 <parse_cmdline_bond+0x344>
  404080:	ldur	x8, [x29, #-56]
  404084:	add	x8, x8, #0x1
  404088:	stur	x8, [x29, #-32]
  40408c:	ldur	x0, [x29, #-32]
  404090:	mov	w1, #0x3a                  	// #58
  404094:	bl	401b08 <strchr@plt>
  404098:	stur	x0, [x29, #-56]
  40409c:	ldur	x8, [x29, #-56]
  4040a0:	cbnz	x8, 4040b0 <parse_cmdline_bond+0x170>
  4040a4:	ldur	x8, [x29, #-32]
  4040a8:	stur	x8, [x29, #-48]
  4040ac:	b	404134 <parse_cmdline_bond+0x1f4>
  4040b0:	ldur	x8, [x29, #-32]
  4040b4:	stur	x8, [x29, #-112]
  4040b8:	ldur	x0, [x29, #-112]
  4040bc:	ldur	x8, [x29, #-56]
  4040c0:	ldur	x9, [x29, #-32]
  4040c4:	subs	x1, x8, x9
  4040c8:	bl	401c18 <strnlen@plt>
  4040cc:	stur	x0, [x29, #-120]
  4040d0:	ldur	x8, [x29, #-120]
  4040d4:	mov	x9, #0x1                   	// #1
  4040d8:	add	x8, x8, #0x1
  4040dc:	mul	x8, x8, x9
  4040e0:	add	x8, x8, #0xf
  4040e4:	and	x8, x8, #0xfffffffffffffff0
  4040e8:	mov	x9, sp
  4040ec:	subs	x8, x9, x8
  4040f0:	mov	sp, x8
  4040f4:	stur	x8, [x29, #-128]
  4040f8:	ldur	x8, [x29, #-128]
  4040fc:	ldur	x9, [x29, #-120]
  404100:	add	x8, x8, x9
  404104:	mov	w10, #0x0                   	// #0
  404108:	strb	w10, [x8]
  40410c:	ldur	x8, [x29, #-128]
  404110:	ldur	x1, [x29, #-112]
  404114:	ldur	x2, [x29, #-120]
  404118:	mov	x0, x8
  40411c:	stur	x8, [x29, #-184]
  404120:	bl	401c28 <memcpy@plt>
  404124:	ldur	x8, [x29, #-184]
  404128:	stur	x8, [x29, #-136]
  40412c:	ldur	x9, [x29, #-136]
  404130:	stur	x9, [x29, #-48]
  404134:	ldur	x0, [x29, #-48]
  404138:	bl	404ee0 <isempty>
  40413c:	tbnz	w0, #0, 404144 <parse_cmdline_bond+0x204>
  404140:	b	404150 <parse_cmdline_bond+0x210>
  404144:	mov	w8, #0xffffffea            	// #-22
  404148:	stur	w8, [x29, #-4]
  40414c:	b	404284 <parse_cmdline_bond+0x344>
  404150:	ldur	x8, [x29, #-48]
  404154:	stur	x8, [x29, #-144]
  404158:	sub	x1, x29, #0x98
  40415c:	mov	x8, xzr
  404160:	stur	x8, [x29, #-152]
  404164:	sub	x0, x29, #0x90
  404168:	adrp	x2, 408000 <_fini+0x1d4>
  40416c:	add	x2, x2, #0x659
  404170:	mov	w9, wzr
  404174:	mov	w3, w9
  404178:	bl	401c58 <extract_first_word@plt>
  40417c:	stur	w0, [x29, #-68]
  404180:	ldur	w9, [x29, #-68]
  404184:	cbnz	w9, 404194 <parse_cmdline_bond+0x254>
  404188:	mov	w8, #0x2                   	// #2
  40418c:	stur	w8, [x29, #-156]
  404190:	b	4041f8 <parse_cmdline_bond+0x2b8>
  404194:	ldur	w8, [x29, #-68]
  404198:	cmp	w8, #0x0
  40419c:	cset	w8, ge  // ge = tcont
  4041a0:	tbnz	w8, #0, 4041b8 <parse_cmdline_bond+0x278>
  4041a4:	ldur	w8, [x29, #-68]
  4041a8:	stur	w8, [x29, #-4]
  4041ac:	mov	w8, #0x1                   	// #1
  4041b0:	stur	w8, [x29, #-156]
  4041b4:	b	4041f8 <parse_cmdline_bond+0x2b8>
  4041b8:	ldur	x8, [x29, #-168]
  4041bc:	ldr	x0, [x8, #8]
  4041c0:	ldur	x1, [x29, #-152]
  4041c4:	ldur	x2, [x29, #-40]
  4041c8:	bl	407768 <network_set_bond>
  4041cc:	stur	w0, [x29, #-68]
  4041d0:	ldur	w9, [x29, #-68]
  4041d4:	cmp	w9, #0x0
  4041d8:	cset	w9, ge  // ge = tcont
  4041dc:	tbnz	w9, #0, 4041f4 <parse_cmdline_bond+0x2b4>
  4041e0:	ldur	w8, [x29, #-68]
  4041e4:	stur	w8, [x29, #-4]
  4041e8:	mov	w8, #0x1                   	// #1
  4041ec:	stur	w8, [x29, #-156]
  4041f0:	b	4041f8 <parse_cmdline_bond+0x2b8>
  4041f4:	stur	wzr, [x29, #-156]
  4041f8:	sub	x0, x29, #0x98
  4041fc:	bl	405734 <freep>
  404200:	ldur	w8, [x29, #-156]
  404204:	stur	w8, [x29, #-188]
  404208:	cbz	w8, 404224 <parse_cmdline_bond+0x2e4>
  40420c:	b	404210 <parse_cmdline_bond+0x2d0>
  404210:	ldur	w8, [x29, #-188]
  404214:	cmp	w8, #0x1
  404218:	b.eq	404284 <parse_cmdline_bond+0x344>  // b.none
  40421c:	b	404220 <parse_cmdline_bond+0x2e0>
  404220:	b	404228 <parse_cmdline_bond+0x2e8>
  404224:	b	404158 <parse_cmdline_bond+0x218>
  404228:	ldur	x8, [x29, #-56]
  40422c:	cbnz	x8, 404238 <parse_cmdline_bond+0x2f8>
  404230:	stur	wzr, [x29, #-4]
  404234:	b	404284 <parse_cmdline_bond+0x344>
  404238:	ldur	x8, [x29, #-56]
  40423c:	add	x8, x8, #0x1
  404240:	stur	x8, [x29, #-32]
  404244:	ldur	x0, [x29, #-32]
  404248:	mov	w1, #0x3a                  	// #58
  40424c:	bl	401b08 <strchr@plt>
  404250:	stur	x0, [x29, #-56]
  404254:	ldur	x8, [x29, #-56]
  404258:	cbnz	x8, 404264 <parse_cmdline_bond+0x324>
  40425c:	stur	wzr, [x29, #-4]
  404260:	b	404284 <parse_cmdline_bond+0x344>
  404264:	ldur	x8, [x29, #-56]
  404268:	add	x1, x8, #0x1
  40426c:	ldur	x8, [x29, #-64]
  404270:	add	x2, x8, #0x10
  404274:	mov	w9, wzr
  404278:	mov	w0, w9
  40427c:	bl	401c68 <parse_mtu@plt>
  404280:	stur	w0, [x29, #-4]
  404284:	ldur	w0, [x29, #-4]
  404288:	mov	sp, x29
  40428c:	ldp	x29, x30, [sp], #16
  404290:	ret

0000000000404294 <parse_cmdline_ifname>:
  404294:	stp	x29, x30, [sp, #-16]!
  404298:	mov	x29, sp
  40429c:	sub	sp, sp, #0x70
  4042a0:	stur	x0, [x29, #-16]
  4042a4:	stur	x1, [x29, #-24]
  4042a8:	stur	x2, [x29, #-32]
  4042ac:	ldur	x0, [x29, #-24]
  4042b0:	ldur	x1, [x29, #-32]
  4042b4:	bl	405c4c <proc_cmdline_value_missing>
  4042b8:	tbnz	w0, #0, 4042c0 <parse_cmdline_ifname+0x2c>
  4042bc:	b	4042cc <parse_cmdline_ifname+0x38>
  4042c0:	mov	w8, #0xffffffea            	// #-22
  4042c4:	stur	w8, [x29, #-4]
  4042c8:	b	4043c0 <parse_cmdline_ifname+0x12c>
  4042cc:	ldur	x0, [x29, #-32]
  4042d0:	mov	w1, #0x3a                  	// #58
  4042d4:	bl	401b08 <strchr@plt>
  4042d8:	stur	x0, [x29, #-56]
  4042dc:	ldur	x8, [x29, #-56]
  4042e0:	cbnz	x8, 4042f0 <parse_cmdline_ifname+0x5c>
  4042e4:	mov	w8, #0xffffffea            	// #-22
  4042e8:	stur	w8, [x29, #-4]
  4042ec:	b	4043c0 <parse_cmdline_ifname+0x12c>
  4042f0:	ldur	x8, [x29, #-32]
  4042f4:	stur	x8, [x29, #-72]
  4042f8:	ldur	x0, [x29, #-72]
  4042fc:	ldur	x8, [x29, #-56]
  404300:	ldur	x9, [x29, #-32]
  404304:	subs	x1, x8, x9
  404308:	bl	401c18 <strnlen@plt>
  40430c:	stur	x0, [x29, #-80]
  404310:	ldur	x8, [x29, #-80]
  404314:	mov	x9, #0x1                   	// #1
  404318:	add	x8, x8, #0x1
  40431c:	mul	x8, x8, x9
  404320:	add	x8, x8, #0xf
  404324:	and	x8, x8, #0xfffffffffffffff0
  404328:	mov	x9, sp
  40432c:	subs	x8, x9, x8
  404330:	mov	sp, x8
  404334:	stur	x8, [x29, #-88]
  404338:	ldur	x8, [x29, #-88]
  40433c:	ldur	x9, [x29, #-80]
  404340:	add	x8, x8, x9
  404344:	mov	w10, #0x0                   	// #0
  404348:	strb	w10, [x8]
  40434c:	ldur	x8, [x29, #-88]
  404350:	ldur	x1, [x29, #-72]
  404354:	ldur	x2, [x29, #-80]
  404358:	mov	x0, x8
  40435c:	stur	x8, [x29, #-104]
  404360:	bl	401c28 <memcpy@plt>
  404364:	ldur	x8, [x29, #-104]
  404368:	stur	x8, [x29, #-96]
  40436c:	ldur	x9, [x29, #-96]
  404370:	stur	x9, [x29, #-48]
  404374:	ldur	x9, [x29, #-56]
  404378:	add	x0, x9, #0x1
  40437c:	sub	x1, x29, #0x26
  404380:	bl	401c78 <ether_addr_from_string@plt>
  404384:	stur	w0, [x29, #-60]
  404388:	ldur	w10, [x29, #-60]
  40438c:	cmp	w10, #0x0
  404390:	cset	w10, ge  // ge = tcont
  404394:	tbnz	w10, #0, 4043a4 <parse_cmdline_ifname+0x110>
  404398:	ldur	w8, [x29, #-60]
  40439c:	stur	w8, [x29, #-4]
  4043a0:	b	4043c0 <parse_cmdline_ifname+0x12c>
  4043a4:	ldur	x0, [x29, #-16]
  4043a8:	ldur	x1, [x29, #-48]
  4043ac:	sub	x2, x29, #0x26
  4043b0:	mov	x8, xzr
  4043b4:	mov	x3, x8
  4043b8:	bl	4077ec <link_new>
  4043bc:	stur	w0, [x29, #-4]
  4043c0:	ldur	w0, [x29, #-4]
  4043c4:	mov	sp, x29
  4043c8:	ldp	x29, x30, [sp], #16
  4043cc:	ret

00000000004043d0 <context_merge_networks>:
  4043d0:	sub	sp, sp, #0x70
  4043d4:	stp	x29, x30, [sp, #96]
  4043d8:	add	x29, sp, #0x60
  4043dc:	adrp	x8, 408000 <_fini+0x1d4>
  4043e0:	add	x8, x8, #0x1d8
  4043e4:	add	x8, x8, #0x3
  4043e8:	stur	x0, [x29, #-16]
  4043ec:	str	x8, [sp]
  4043f0:	ldur	x8, [x29, #-16]
  4043f4:	cmp	x8, #0x0
  4043f8:	cset	w9, ne  // ne = any
  4043fc:	mov	w10, #0x1                   	// #1
  404400:	eor	w9, w9, #0x1
  404404:	eor	w9, w9, w10
  404408:	eor	w9, w9, w10
  40440c:	and	w9, w9, #0x1
  404410:	mov	w0, w9
  404414:	sxtw	x8, w0
  404418:	cbz	x8, 404440 <context_merge_networks+0x70>
  40441c:	mov	w8, wzr
  404420:	mov	w0, w8
  404424:	adrp	x1, 408000 <_fini+0x1d4>
  404428:	add	x1, x1, #0x27f
  40442c:	ldr	x2, [sp]
  404430:	mov	w3, #0x3c1                 	// #961
  404434:	adrp	x4, 408000 <_fini+0x1d4>
  404438:	add	x4, x4, #0x287
  40443c:	bl	401b18 <log_assert_failed_realm@plt>
  404440:	ldur	x0, [x29, #-16]
  404444:	adrp	x1, 407000 <network_set_dns+0x4>
  404448:	add	x1, x1, #0xec8
  40444c:	bl	4031dc <network_get>
  404450:	stur	x0, [x29, #-24]
  404454:	ldur	x8, [x29, #-24]
  404458:	cbnz	x8, 404464 <context_merge_networks+0x94>
  40445c:	stur	wzr, [x29, #-4]
  404460:	b	404608 <context_merge_networks+0x238>
  404464:	ldur	x8, [x29, #-16]
  404468:	ldr	x0, [x8]
  40446c:	bl	404618 <hashmap_size>
  404470:	cmp	w0, #0x1
  404474:	b.hi	404480 <context_merge_networks+0xb0>  // b.pmore
  404478:	stur	wzr, [x29, #-4]
  40447c:	b	404608 <context_merge_networks+0x238>
  404480:	add	x8, sp, #0x8
  404484:	mov	w9, #0xfffffffe            	// #-2
  404488:	str	w9, [sp, #8]
  40448c:	mov	x10, xzr
  404490:	str	x10, [x8, #8]
  404494:	ldur	q0, [sp, #8]
  404498:	str	q0, [sp, #32]
  40449c:	ldur	x8, [x29, #-16]
  4044a0:	ldr	x0, [x8]
  4044a4:	add	x1, sp, #0x20
  4044a8:	sub	x2, x29, #0x20
  4044ac:	mov	x8, xzr
  4044b0:	mov	x3, x8
  4044b4:	bl	40463c <hashmap_iterate>
  4044b8:	tbnz	w0, #0, 4044c0 <context_merge_networks+0xf0>
  4044bc:	b	404598 <context_merge_networks+0x1c8>
  4044c0:	ldur	x8, [x29, #-32]
  4044c4:	ldur	x9, [x29, #-24]
  4044c8:	cmp	x8, x9
  4044cc:	b.ne	4044d4 <context_merge_networks+0x104>  // b.any
  4044d0:	b	40449c <context_merge_networks+0xcc>
  4044d4:	ldur	x8, [x29, #-24]
  4044d8:	ldr	w9, [x8, #64]
  4044dc:	ldur	x8, [x29, #-32]
  4044e0:	str	w9, [x8, #64]
  4044e4:	ldur	x8, [x29, #-32]
  4044e8:	add	x0, x8, #0x18
  4044ec:	ldur	x8, [x29, #-24]
  4044f0:	ldr	x1, [x8, #24]
  4044f4:	mov	w9, wzr
  4044f8:	and	w2, w9, #0x1
  4044fc:	bl	401c88 <strv_extend_strv@plt>
  404500:	str	w0, [sp, #28]
  404504:	ldr	w9, [sp, #28]
  404508:	cmp	w9, #0x0
  40450c:	cset	w9, ge  // ge = tcont
  404510:	tbnz	w9, #0, 404520 <context_merge_networks+0x150>
  404514:	ldr	w8, [sp, #28]
  404518:	stur	w8, [x29, #-4]
  40451c:	b	404608 <context_merge_networks+0x238>
  404520:	ldur	x8, [x29, #-24]
  404524:	ldr	x8, [x8, #80]
  404528:	stur	x8, [x29, #-40]
  40452c:	ldur	x8, [x29, #-40]
  404530:	cbz	x8, 404594 <context_merge_networks+0x1c4>
  404534:	ldur	x0, [x29, #-32]
  404538:	ldur	x8, [x29, #-40]
  40453c:	ldr	w1, [x8, #44]
  404540:	ldur	x8, [x29, #-40]
  404544:	ldrb	w2, [x8, #40]
  404548:	ldur	x8, [x29, #-40]
  40454c:	add	x3, x8, #0x8
  404550:	ldur	x8, [x29, #-40]
  404554:	add	x4, x8, #0x18
  404558:	mov	x8, xzr
  40455c:	mov	x5, x8
  404560:	bl	40467c <route_new>
  404564:	str	w0, [sp, #28]
  404568:	ldr	w9, [sp, #28]
  40456c:	cmp	w9, #0x0
  404570:	cset	w9, ge  // ge = tcont
  404574:	tbnz	w9, #0, 404584 <context_merge_networks+0x1b4>
  404578:	ldr	w8, [sp, #28]
  40457c:	stur	w8, [x29, #-4]
  404580:	b	404608 <context_merge_networks+0x238>
  404584:	ldur	x8, [x29, #-40]
  404588:	ldr	x8, [x8, #48]
  40458c:	stur	x8, [x29, #-40]
  404590:	b	40452c <context_merge_networks+0x15c>
  404594:	b	40449c <context_merge_networks+0xcc>
  404598:	ldur	x8, [x29, #-16]
  40459c:	ldr	x0, [x8]
  4045a0:	adrp	x1, 407000 <network_set_dns+0x4>
  4045a4:	add	x1, x1, #0xec8
  4045a8:	bl	404870 <hashmap_remove>
  4045ac:	ldur	x8, [x29, #-24]
  4045b0:	cmp	x0, x8
  4045b4:	cset	w9, eq  // eq = none
  4045b8:	mov	w10, #0x1                   	// #1
  4045bc:	eor	w9, w9, #0x1
  4045c0:	eor	w9, w9, w10
  4045c4:	eor	w9, w9, w10
  4045c8:	and	w9, w9, #0x1
  4045cc:	mov	w0, w9
  4045d0:	sxtw	x8, w0
  4045d4:	cbz	x8, 4045fc <context_merge_networks+0x22c>
  4045d8:	mov	w8, wzr
  4045dc:	mov	w0, w8
  4045e0:	adrp	x1, 408000 <_fini+0x1d4>
  4045e4:	add	x1, x1, #0x2ad
  4045e8:	ldr	x2, [sp]
  4045ec:	mov	w3, #0x3e0                 	// #992
  4045f0:	adrp	x4, 408000 <_fini+0x1d4>
  4045f4:	add	x4, x4, #0x287
  4045f8:	bl	401b18 <log_assert_failed_realm@plt>
  4045fc:	ldur	x0, [x29, #-24]
  404600:	bl	40489c <network_free>
  404604:	stur	wzr, [x29, #-4]
  404608:	ldur	w0, [x29, #-4]
  40460c:	ldp	x29, x30, [sp, #96]
  404610:	add	sp, sp, #0x70
  404614:	ret

0000000000404618 <hashmap_size>:
  404618:	sub	sp, sp, #0x20
  40461c:	stp	x29, x30, [sp, #16]
  404620:	add	x29, sp, #0x10
  404624:	str	x0, [sp, #8]
  404628:	ldr	x0, [sp, #8]
  40462c:	bl	401c98 <internal_hashmap_size@plt>
  404630:	ldp	x29, x30, [sp, #16]
  404634:	add	sp, sp, #0x20
  404638:	ret

000000000040463c <hashmap_iterate>:
  40463c:	sub	sp, sp, #0x30
  404640:	stp	x29, x30, [sp, #32]
  404644:	add	x29, sp, #0x20
  404648:	stur	x0, [x29, #-8]
  40464c:	str	x1, [sp, #16]
  404650:	str	x2, [sp, #8]
  404654:	str	x3, [sp]
  404658:	ldur	x0, [x29, #-8]
  40465c:	ldr	x1, [sp, #16]
  404660:	ldr	x2, [sp, #8]
  404664:	ldr	x3, [sp]
  404668:	bl	401bb8 <internal_hashmap_iterate@plt>
  40466c:	and	w0, w0, #0x1
  404670:	ldp	x29, x30, [sp, #32]
  404674:	add	sp, sp, #0x30
  404678:	ret

000000000040467c <route_new>:
  40467c:	sub	sp, sp, #0xb0
  404680:	stp	x29, x30, [sp, #160]
  404684:	add	x29, sp, #0xa0
  404688:	adrp	x8, 408000 <_fini+0x1d4>
  40468c:	add	x8, x8, #0x1d8
  404690:	add	x8, x8, #0x3
  404694:	stur	x0, [x29, #-16]
  404698:	stur	w1, [x29, #-20]
  40469c:	sturb	w2, [x29, #-21]
  4046a0:	stur	x3, [x29, #-32]
  4046a4:	stur	x4, [x29, #-40]
  4046a8:	stur	x5, [x29, #-48]
  4046ac:	str	x8, [sp, #16]
  4046b0:	ldur	x8, [x29, #-16]
  4046b4:	cmp	x8, #0x0
  4046b8:	cset	w9, ne  // ne = any
  4046bc:	mov	w10, #0x1                   	// #1
  4046c0:	eor	w9, w9, #0x1
  4046c4:	eor	w9, w9, w10
  4046c8:	eor	w9, w9, w10
  4046cc:	and	w9, w9, #0x1
  4046d0:	mov	w0, w9
  4046d4:	sxtw	x8, w0
  4046d8:	cbz	x8, 404700 <route_new+0x84>
  4046dc:	mov	w8, wzr
  4046e0:	mov	w0, w8
  4046e4:	adrp	x1, 408000 <_fini+0x1d4>
  4046e8:	add	x1, x1, #0xdf
  4046ec:	ldr	x2, [sp, #16]
  4046f0:	mov	w3, #0x7a                  	// #122
  4046f4:	adrp	x4, 408000 <_fini+0x1d4>
  4046f8:	add	x4, x4, #0x69f
  4046fc:	bl	401b18 <log_assert_failed_realm@plt>
  404700:	mov	x0, #0x40                  	// #64
  404704:	mov	x1, #0x1                   	// #1
  404708:	bl	40681c <malloc_multiply>
  40470c:	stur	x0, [x29, #-56]
  404710:	ldur	x8, [x29, #-56]
  404714:	cbnz	x8, 404724 <route_new+0xa8>
  404718:	mov	w8, #0xfffffff4            	// #-12
  40471c:	stur	w8, [x29, #-4]
  404720:	b	404860 <route_new+0x1e4>
  404724:	ldur	x0, [x29, #-56]
  404728:	add	x8, sp, #0x28
  40472c:	mov	x9, xzr
  404730:	str	x9, [sp, #40]
  404734:	ldur	x9, [x29, #-32]
  404738:	str	x0, [sp, #8]
  40473c:	str	x8, [sp]
  404740:	cbz	x9, 404758 <route_new+0xdc>
  404744:	ldur	x8, [x29, #-32]
  404748:	ldr	q0, [x8]
  40474c:	ldr	x8, [sp]
  404750:	stur	q0, [x8, #8]
  404754:	b	404760 <route_new+0xe4>
  404758:	str	xzr, [sp, #48]
  40475c:	str	xzr, [sp, #56]
  404760:	add	x8, sp, #0x28
  404764:	ldur	x9, [x29, #-40]
  404768:	ldr	q0, [x9]
  40476c:	stur	q0, [x8, #24]
  404770:	ldurb	w10, [x29, #-21]
  404774:	strb	w10, [x8, #40]
  404778:	ldur	w10, [x29, #-20]
  40477c:	str	w10, [sp, #84]
  404780:	mov	x9, xzr
  404784:	str	x9, [x8, #48]
  404788:	str	x9, [x8, #56]
  40478c:	ldr	x0, [sp, #8]
  404790:	mov	x1, x8
  404794:	mov	x2, #0x40                  	// #64
  404798:	bl	401c28 <memcpy@plt>
  40479c:	ldur	x8, [x29, #-16]
  4047a0:	add	x8, x8, #0x50
  4047a4:	str	x8, [sp, #32]
  4047a8:	ldur	x8, [x29, #-56]
  4047ac:	str	x8, [sp, #24]
  4047b0:	ldr	x8, [sp, #24]
  4047b4:	cmp	x8, #0x0
  4047b8:	cset	w9, ne  // ne = any
  4047bc:	mov	w10, #0x1                   	// #1
  4047c0:	eor	w9, w9, #0x1
  4047c4:	eor	w9, w9, w10
  4047c8:	eor	w9, w9, w10
  4047cc:	and	w9, w9, #0x1
  4047d0:	mov	w0, w9
  4047d4:	sxtw	x8, w0
  4047d8:	cbz	x8, 404800 <route_new+0x184>
  4047dc:	mov	w8, wzr
  4047e0:	mov	w0, w8
  4047e4:	adrp	x1, 408000 <_fini+0x1d4>
  4047e8:	add	x1, x1, #0x5ce
  4047ec:	ldr	x2, [sp, #16]
  4047f0:	mov	w3, #0x87                  	// #135
  4047f4:	adrp	x4, 408000 <_fini+0x1d4>
  4047f8:	add	x4, x4, #0x69f
  4047fc:	bl	401b18 <log_assert_failed_realm@plt>
  404800:	ldr	x8, [sp, #32]
  404804:	ldr	x8, [x8]
  404808:	ldr	x9, [sp, #24]
  40480c:	str	x8, [x9, #48]
  404810:	cbz	x8, 404824 <route_new+0x1a8>
  404814:	ldr	x8, [sp, #24]
  404818:	ldr	x9, [sp, #24]
  40481c:	ldr	x9, [x9, #48]
  404820:	str	x8, [x9, #56]
  404824:	ldr	x8, [sp, #24]
  404828:	mov	x9, xzr
  40482c:	str	x9, [x8, #56]
  404830:	ldr	x8, [sp, #24]
  404834:	ldr	x9, [sp, #32]
  404838:	str	x8, [x9]
  40483c:	ldur	x8, [x29, #-16]
  404840:	ldur	x9, [x29, #-56]
  404844:	str	x8, [x9]
  404848:	ldur	x8, [x29, #-48]
  40484c:	cbz	x8, 40485c <route_new+0x1e0>
  404850:	ldur	x8, [x29, #-56]
  404854:	ldur	x9, [x29, #-48]
  404858:	str	x8, [x9]
  40485c:	stur	wzr, [x29, #-4]
  404860:	ldur	w0, [x29, #-4]
  404864:	ldp	x29, x30, [sp, #160]
  404868:	add	sp, sp, #0xb0
  40486c:	ret

0000000000404870 <hashmap_remove>:
  404870:	sub	sp, sp, #0x20
  404874:	stp	x29, x30, [sp, #16]
  404878:	add	x29, sp, #0x10
  40487c:	str	x0, [sp, #8]
  404880:	str	x1, [sp]
  404884:	ldr	x0, [sp, #8]
  404888:	ldr	x1, [sp]
  40488c:	bl	401ca8 <internal_hashmap_remove@plt>
  404890:	ldp	x29, x30, [sp, #16]
  404894:	add	sp, sp, #0x20
  404898:	ret

000000000040489c <network_free>:
  40489c:	sub	sp, sp, #0x30
  4048a0:	stp	x29, x30, [sp, #32]
  4048a4:	add	x29, sp, #0x20
  4048a8:	str	x0, [sp, #16]
  4048ac:	ldr	x8, [sp, #16]
  4048b0:	cbnz	x8, 4048c0 <network_free+0x24>
  4048b4:	mov	x8, xzr
  4048b8:	stur	x8, [x29, #-8]
  4048bc:	b	404950 <network_free+0xb4>
  4048c0:	ldr	x8, [sp, #16]
  4048c4:	ldr	x0, [x8]
  4048c8:	bl	401b58 <free@plt>
  4048cc:	ldr	x8, [sp, #16]
  4048d0:	ldr	x0, [x8, #56]
  4048d4:	bl	401b58 <free@plt>
  4048d8:	ldr	x8, [sp, #16]
  4048dc:	ldr	x0, [x8, #24]
  4048e0:	bl	401cb8 <strv_free@plt>
  4048e4:	ldr	x8, [sp, #16]
  4048e8:	ldr	x8, [x8, #32]
  4048ec:	mov	x0, x8
  4048f0:	bl	401b58 <free@plt>
  4048f4:	ldr	x8, [sp, #16]
  4048f8:	ldr	x0, [x8, #40]
  4048fc:	bl	401b58 <free@plt>
  404900:	ldr	x8, [sp, #16]
  404904:	ldr	x0, [x8, #48]
  404908:	bl	401b58 <free@plt>
  40490c:	ldr	x8, [sp, #16]
  404910:	ldr	x8, [x8, #72]
  404914:	str	x8, [sp, #8]
  404918:	cbz	x8, 404928 <network_free+0x8c>
  40491c:	ldr	x0, [sp, #8]
  404920:	bl	407a34 <address_free>
  404924:	b	40490c <network_free+0x70>
  404928:	ldr	x8, [sp, #16]
  40492c:	ldr	x8, [x8, #80]
  404930:	str	x8, [sp]
  404934:	cbz	x8, 404944 <network_free+0xa8>
  404938:	ldr	x0, [sp]
  40493c:	bl	407bb8 <route_free>
  404940:	b	404928 <network_free+0x8c>
  404944:	ldr	x0, [sp, #16]
  404948:	bl	407d3c <mfree>
  40494c:	stur	x0, [x29, #-8]
  404950:	ldur	x0, [x29, #-8]
  404954:	ldp	x29, x30, [sp, #32]
  404958:	add	sp, sp, #0x30
  40495c:	ret

0000000000404960 <context_clear>:
  404960:	sub	sp, sp, #0x50
  404964:	stp	x29, x30, [sp, #64]
  404968:	add	x29, sp, #0x40
  40496c:	stur	x0, [x29, #-8]
  404970:	ldur	x8, [x29, #-8]
  404974:	cbnz	x8, 40497c <context_clear+0x1c>
  404978:	b	404a0c <context_clear+0xac>
  40497c:	ldur	x8, [x29, #-8]
  404980:	ldr	x0, [x8]
  404984:	bl	404a18 <hashmap_steal_first>
  404988:	stur	x0, [x29, #-16]
  40498c:	cbz	x0, 40499c <context_clear+0x3c>
  404990:	ldur	x0, [x29, #-16]
  404994:	bl	40489c <network_free>
  404998:	b	40497c <context_clear+0x1c>
  40499c:	ldur	x8, [x29, #-8]
  4049a0:	ldr	x0, [x8]
  4049a4:	bl	404a4c <hashmap_free>
  4049a8:	stur	x0, [x29, #-24]
  4049ac:	ldur	x8, [x29, #-8]
  4049b0:	ldr	x0, [x8, #8]
  4049b4:	bl	404a18 <hashmap_steal_first>
  4049b8:	str	x0, [sp, #32]
  4049bc:	cbz	x0, 4049cc <context_clear+0x6c>
  4049c0:	ldr	x0, [sp, #32]
  4049c4:	bl	404a7c <netdev_free>
  4049c8:	b	4049ac <context_clear+0x4c>
  4049cc:	ldur	x8, [x29, #-8]
  4049d0:	ldr	x0, [x8, #8]
  4049d4:	bl	404a4c <hashmap_free>
  4049d8:	str	x0, [sp, #24]
  4049dc:	ldur	x8, [x29, #-8]
  4049e0:	ldr	x0, [x8, #16]
  4049e4:	bl	404a18 <hashmap_steal_first>
  4049e8:	str	x0, [sp, #16]
  4049ec:	cbz	x0, 4049fc <context_clear+0x9c>
  4049f0:	ldr	x0, [sp, #16]
  4049f4:	bl	404ad4 <link_free>
  4049f8:	b	4049dc <context_clear+0x7c>
  4049fc:	ldur	x8, [x29, #-8]
  404a00:	ldr	x0, [x8, #16]
  404a04:	bl	404a4c <hashmap_free>
  404a08:	str	x0, [sp, #8]
  404a0c:	ldp	x29, x30, [sp, #64]
  404a10:	add	sp, sp, #0x50
  404a14:	ret

0000000000404a18 <hashmap_steal_first>:
  404a18:	sub	sp, sp, #0x20
  404a1c:	stp	x29, x30, [sp, #16]
  404a20:	add	x29, sp, #0x10
  404a24:	mov	x8, xzr
  404a28:	str	x0, [sp, #8]
  404a2c:	ldr	x0, [sp, #8]
  404a30:	mov	w9, #0x1                   	// #1
  404a34:	and	w1, w9, #0x1
  404a38:	mov	x2, x8
  404a3c:	bl	401cc8 <internal_hashmap_first_key_and_value@plt>
  404a40:	ldp	x29, x30, [sp, #16]
  404a44:	add	sp, sp, #0x20
  404a48:	ret

0000000000404a4c <hashmap_free>:
  404a4c:	sub	sp, sp, #0x20
  404a50:	stp	x29, x30, [sp, #16]
  404a54:	add	x29, sp, #0x10
  404a58:	mov	x8, xzr
  404a5c:	str	x0, [sp, #8]
  404a60:	ldr	x0, [sp, #8]
  404a64:	mov	x1, x8
  404a68:	mov	x2, x8
  404a6c:	bl	401cd8 <internal_hashmap_free@plt>
  404a70:	ldp	x29, x30, [sp, #16]
  404a74:	add	sp, sp, #0x20
  404a78:	ret

0000000000404a7c <netdev_free>:
  404a7c:	sub	sp, sp, #0x20
  404a80:	stp	x29, x30, [sp, #16]
  404a84:	add	x29, sp, #0x10
  404a88:	str	x0, [sp]
  404a8c:	ldr	x8, [sp]
  404a90:	cbnz	x8, 404aa0 <netdev_free+0x24>
  404a94:	mov	x8, xzr
  404a98:	str	x8, [sp, #8]
  404a9c:	b	404ac4 <netdev_free+0x48>
  404aa0:	ldr	x8, [sp]
  404aa4:	ldr	x0, [x8]
  404aa8:	bl	401b58 <free@plt>
  404aac:	ldr	x8, [sp]
  404ab0:	ldr	x0, [x8, #8]
  404ab4:	bl	401b58 <free@plt>
  404ab8:	ldr	x0, [sp]
  404abc:	bl	407d3c <mfree>
  404ac0:	str	x0, [sp, #8]
  404ac4:	ldr	x0, [sp, #8]
  404ac8:	ldp	x29, x30, [sp, #16]
  404acc:	add	sp, sp, #0x20
  404ad0:	ret

0000000000404ad4 <link_free>:
  404ad4:	sub	sp, sp, #0x20
  404ad8:	stp	x29, x30, [sp, #16]
  404adc:	add	x29, sp, #0x10
  404ae0:	str	x0, [sp]
  404ae4:	ldr	x8, [sp]
  404ae8:	cbnz	x8, 404af8 <link_free+0x24>
  404aec:	mov	x8, xzr
  404af0:	str	x8, [sp, #8]
  404af4:	b	404b10 <link_free+0x3c>
  404af8:	ldr	x8, [sp]
  404afc:	ldr	x0, [x8]
  404b00:	bl	401b58 <free@plt>
  404b04:	ldr	x0, [sp]
  404b08:	bl	407d3c <mfree>
  404b0c:	str	x0, [sp, #8]
  404b10:	ldr	x0, [sp, #8]
  404b14:	ldp	x29, x30, [sp, #16]
  404b18:	add	sp, sp, #0x20
  404b1c:	ret

0000000000404b20 <network_dump>:
  404b20:	sub	sp, sp, #0xa0
  404b24:	stp	x29, x30, [sp, #144]
  404b28:	add	x29, sp, #0x90
  404b2c:	adrp	x8, 408000 <_fini+0x1d4>
  404b30:	add	x8, x8, #0x1d8
  404b34:	add	x8, x8, #0x3
  404b38:	stur	x0, [x29, #-8]
  404b3c:	stur	x1, [x29, #-16]
  404b40:	str	x8, [sp, #64]
  404b44:	ldur	x8, [x29, #-8]
  404b48:	cmp	x8, #0x0
  404b4c:	cset	w9, ne  // ne = any
  404b50:	mov	w10, #0x1                   	// #1
  404b54:	eor	w9, w9, #0x1
  404b58:	eor	w9, w9, w10
  404b5c:	eor	w9, w9, w10
  404b60:	and	w9, w9, #0x1
  404b64:	mov	w0, w9
  404b68:	sxtw	x8, w0
  404b6c:	cbz	x8, 404b94 <network_dump+0x74>
  404b70:	mov	w8, wzr
  404b74:	mov	w0, w8
  404b78:	adrp	x1, 408000 <_fini+0x1d4>
  404b7c:	add	x1, x1, #0xdf
  404b80:	ldr	x2, [sp, #64]
  404b84:	mov	w3, #0x424                 	// #1060
  404b88:	adrp	x4, 408000 <_fini+0x1d4>
  404b8c:	add	x4, x4, #0x2e2
  404b90:	bl	401b18 <log_assert_failed_realm@plt>
  404b94:	ldur	x8, [x29, #-16]
  404b98:	cmp	x8, #0x0
  404b9c:	cset	w9, ne  // ne = any
  404ba0:	mov	w10, #0x1                   	// #1
  404ba4:	eor	w9, w9, #0x1
  404ba8:	eor	w9, w9, w10
  404bac:	eor	w9, w9, w10
  404bb0:	and	w9, w9, #0x1
  404bb4:	mov	w0, w9
  404bb8:	sxtw	x8, w0
  404bbc:	cbz	x8, 404be4 <network_dump+0xc4>
  404bc0:	mov	w8, wzr
  404bc4:	mov	w0, w8
  404bc8:	adrp	x1, 408000 <_fini+0x1d4>
  404bcc:	add	x1, x1, #0x307
  404bd0:	ldr	x2, [sp, #64]
  404bd4:	mov	w3, #0x425                 	// #1061
  404bd8:	adrp	x4, 408000 <_fini+0x1d4>
  404bdc:	add	x4, x4, #0x2e2
  404be0:	bl	401b18 <log_assert_failed_realm@plt>
  404be4:	ldur	x0, [x29, #-16]
  404be8:	ldur	x8, [x29, #-8]
  404bec:	ldr	x8, [x8]
  404bf0:	str	x0, [sp, #56]
  404bf4:	mov	x0, x8
  404bf8:	bl	404ee0 <isempty>
  404bfc:	tbnz	w0, #0, 404c04 <network_dump+0xe4>
  404c00:	b	404c14 <network_dump+0xf4>
  404c04:	adrp	x8, 408000 <_fini+0x1d4>
  404c08:	add	x8, x8, #0x31a
  404c0c:	str	x8, [sp, #48]
  404c10:	b	404c20 <network_dump+0x100>
  404c14:	ldur	x8, [x29, #-8]
  404c18:	ldr	x8, [x8]
  404c1c:	str	x8, [sp, #48]
  404c20:	ldr	x8, [sp, #48]
  404c24:	ldr	x0, [sp, #56]
  404c28:	adrp	x1, 408000 <_fini+0x1d4>
  404c2c:	add	x1, x1, #0x309
  404c30:	mov	x2, x8
  404c34:	bl	401ce8 <fprintf@plt>
  404c38:	ldur	x1, [x29, #-16]
  404c3c:	adrp	x8, 408000 <_fini+0x1d4>
  404c40:	add	x8, x8, #0x31c
  404c44:	mov	x0, x8
  404c48:	bl	401cf8 <fputs@plt>
  404c4c:	ldur	x8, [x29, #-8]
  404c50:	add	x8, x8, #0x8
  404c54:	mov	x0, x8
  404c58:	bl	404f20 <ether_addr_is_null>
  404c5c:	tbnz	w0, #0, 404c98 <network_dump+0x178>
  404c60:	ldur	x0, [x29, #-16]
  404c64:	ldur	x8, [x29, #-8]
  404c68:	add	x8, x8, #0x8
  404c6c:	str	x0, [sp, #40]
  404c70:	mov	x0, x8
  404c74:	sub	x1, x29, #0x22
  404c78:	bl	401d08 <ether_addr_to_string@plt>
  404c7c:	ldr	x8, [sp, #40]
  404c80:	str	x0, [sp, #32]
  404c84:	mov	x0, x8
  404c88:	adrp	x1, 408000 <_fini+0x1d4>
  404c8c:	add	x1, x1, #0x325
  404c90:	ldr	x2, [sp, #32]
  404c94:	bl	401ce8 <fprintf@plt>
  404c98:	ldur	x8, [x29, #-8]
  404c9c:	ldr	w9, [x8, #16]
  404ca0:	cmp	w9, #0x0
  404ca4:	cset	w9, ls  // ls = plast
  404ca8:	tbnz	w9, #0, 404cc4 <network_dump+0x1a4>
  404cac:	ldur	x0, [x29, #-16]
  404cb0:	ldur	x8, [x29, #-8]
  404cb4:	ldr	w2, [x8, #16]
  404cb8:	adrp	x1, 408000 <_fini+0x1d4>
  404cbc:	add	x1, x1, #0x334
  404cc0:	bl	401ce8 <fprintf@plt>
  404cc4:	ldur	x1, [x29, #-16]
  404cc8:	adrp	x0, 408000 <_fini+0x1d4>
  404ccc:	add	x0, x0, #0x341
  404cd0:	bl	401cf8 <fputs@plt>
  404cd4:	ldur	x8, [x29, #-8]
  404cd8:	ldr	w9, [x8, #20]
  404cdc:	mov	w0, w9
  404ce0:	bl	404f5c <networkd_dhcp_type_to_string>
  404ce4:	stur	x0, [x29, #-64]
  404ce8:	ldur	x8, [x29, #-64]
  404cec:	cbz	x8, 404d04 <network_dump+0x1e4>
  404cf0:	ldur	x0, [x29, #-16]
  404cf4:	ldur	x2, [x29, #-64]
  404cf8:	adrp	x1, 408000 <_fini+0x1d4>
  404cfc:	add	x1, x1, #0x34d
  404d00:	bl	401ce8 <fprintf@plt>
  404d04:	ldur	x8, [x29, #-8]
  404d08:	ldr	x0, [x8, #24]
  404d0c:	bl	404fb8 <strv_isempty>
  404d10:	tbnz	w0, #0, 404d78 <network_dump+0x258>
  404d14:	ldur	x8, [x29, #-8]
  404d18:	ldr	x8, [x8, #24]
  404d1c:	str	x8, [sp, #72]
  404d20:	ldr	x8, [sp, #72]
  404d24:	mov	w9, #0x0                   	// #0
  404d28:	str	w9, [sp, #28]
  404d2c:	cbz	x8, 404d44 <network_dump+0x224>
  404d30:	ldr	x8, [sp, #72]
  404d34:	ldr	x8, [x8]
  404d38:	cmp	x8, #0x0
  404d3c:	cset	w9, ne  // ne = any
  404d40:	str	w9, [sp, #28]
  404d44:	ldr	w8, [sp, #28]
  404d48:	tbnz	w8, #0, 404d50 <network_dump+0x230>
  404d4c:	b	404d78 <network_dump+0x258>
  404d50:	ldur	x0, [x29, #-16]
  404d54:	ldr	x8, [sp, #72]
  404d58:	ldr	x2, [x8]
  404d5c:	adrp	x1, 408000 <_fini+0x1d4>
  404d60:	add	x1, x1, #0x356
  404d64:	bl	401ce8 <fprintf@plt>
  404d68:	ldr	x8, [sp, #72]
  404d6c:	add	x8, x8, #0x8
  404d70:	str	x8, [sp, #72]
  404d74:	b	404d20 <network_dump+0x200>
  404d78:	ldur	x8, [x29, #-8]
  404d7c:	ldr	x8, [x8, #32]
  404d80:	cbz	x8, 404d9c <network_dump+0x27c>
  404d84:	ldur	x0, [x29, #-16]
  404d88:	ldur	x8, [x29, #-8]
  404d8c:	ldr	x2, [x8, #32]
  404d90:	adrp	x1, 408000 <_fini+0x1d4>
  404d94:	add	x1, x1, #0x35e
  404d98:	bl	401ce8 <fprintf@plt>
  404d9c:	ldur	x8, [x29, #-8]
  404da0:	ldr	x8, [x8, #40]
  404da4:	cbz	x8, 404dc0 <network_dump+0x2a0>
  404da8:	ldur	x0, [x29, #-16]
  404dac:	ldur	x8, [x29, #-8]
  404db0:	ldr	x2, [x8, #40]
  404db4:	adrp	x1, 408000 <_fini+0x1d4>
  404db8:	add	x1, x1, #0x367
  404dbc:	bl	401ce8 <fprintf@plt>
  404dc0:	ldur	x8, [x29, #-8]
  404dc4:	ldr	x8, [x8, #48]
  404dc8:	cbz	x8, 404de4 <network_dump+0x2c4>
  404dcc:	ldur	x0, [x29, #-16]
  404dd0:	ldur	x8, [x29, #-8]
  404dd4:	ldr	x2, [x8, #48]
  404dd8:	adrp	x1, 408000 <_fini+0x1d4>
  404ddc:	add	x1, x1, #0x372
  404de0:	bl	401ce8 <fprintf@plt>
  404de4:	ldur	x1, [x29, #-16]
  404de8:	adrp	x0, 408000 <_fini+0x1d4>
  404dec:	add	x0, x0, #0x37b
  404df0:	bl	401cf8 <fputs@plt>
  404df4:	ldur	x8, [x29, #-8]
  404df8:	ldr	x8, [x8, #56]
  404dfc:	mov	x0, x8
  404e00:	bl	404ee0 <isempty>
  404e04:	tbnz	w0, #0, 404e20 <network_dump+0x300>
  404e08:	ldur	x0, [x29, #-16]
  404e0c:	ldur	x8, [x29, #-8]
  404e10:	ldr	x2, [x8, #56]
  404e14:	adrp	x1, 408000 <_fini+0x1d4>
  404e18:	add	x1, x1, #0x384
  404e1c:	bl	401ce8 <fprintf@plt>
  404e20:	ldur	x8, [x29, #-8]
  404e24:	ldr	w9, [x8, #64]
  404e28:	cmp	w9, #0x0
  404e2c:	cset	w9, lt  // lt = tstop
  404e30:	tbnz	w9, #0, 404e74 <network_dump+0x354>
  404e34:	ldur	x0, [x29, #-16]
  404e38:	ldur	x8, [x29, #-8]
  404e3c:	ldr	w9, [x8, #64]
  404e40:	cmp	w9, #0x0
  404e44:	cset	w9, ne  // ne = any
  404e48:	and	w9, w9, #0x1
  404e4c:	str	x0, [sp, #16]
  404e50:	mov	w0, w9
  404e54:	bl	404ff8 <yes_no>
  404e58:	ldr	x8, [sp, #16]
  404e5c:	str	x0, [sp, #8]
  404e60:	mov	x0, x8
  404e64:	adrp	x1, 408000 <_fini+0x1d4>
  404e68:	add	x1, x1, #0x391
  404e6c:	ldr	x2, [sp, #8]
  404e70:	bl	401ce8 <fprintf@plt>
  404e74:	ldur	x8, [x29, #-8]
  404e78:	ldr	x8, [x8, #72]
  404e7c:	stur	x8, [x29, #-48]
  404e80:	ldur	x8, [x29, #-48]
  404e84:	cbz	x8, 404ea4 <network_dump+0x384>
  404e88:	ldur	x0, [x29, #-48]
  404e8c:	ldur	x1, [x29, #-16]
  404e90:	bl	405028 <address_dump>
  404e94:	ldur	x8, [x29, #-48]
  404e98:	ldr	x8, [x8, #48]
  404e9c:	stur	x8, [x29, #-48]
  404ea0:	b	404e80 <network_dump+0x360>
  404ea4:	ldur	x8, [x29, #-8]
  404ea8:	ldr	x8, [x8, #80]
  404eac:	stur	x8, [x29, #-56]
  404eb0:	ldur	x8, [x29, #-56]
  404eb4:	cbz	x8, 404ed4 <network_dump+0x3b4>
  404eb8:	ldur	x0, [x29, #-56]
  404ebc:	ldur	x1, [x29, #-16]
  404ec0:	bl	405144 <route_dump>
  404ec4:	ldur	x8, [x29, #-56]
  404ec8:	ldr	x8, [x8, #48]
  404ecc:	stur	x8, [x29, #-56]
  404ed0:	b	404eb0 <network_dump+0x390>
  404ed4:	ldp	x29, x30, [sp, #144]
  404ed8:	add	sp, sp, #0xa0
  404edc:	ret

0000000000404ee0 <isempty>:
  404ee0:	sub	sp, sp, #0x10
  404ee4:	str	x0, [sp, #8]
  404ee8:	ldr	x8, [sp, #8]
  404eec:	mov	w9, #0x1                   	// #1
  404ef0:	str	w9, [sp, #4]
  404ef4:	cbz	x8, 404f10 <isempty+0x30>
  404ef8:	ldr	x8, [sp, #8]
  404efc:	ldrb	w9, [x8]
  404f00:	cmp	w9, #0x0
  404f04:	cset	w9, ne  // ne = any
  404f08:	eor	w9, w9, #0x1
  404f0c:	str	w9, [sp, #4]
  404f10:	ldr	w8, [sp, #4]
  404f14:	and	w0, w8, #0x1
  404f18:	add	sp, sp, #0x10
  404f1c:	ret

0000000000404f20 <ether_addr_is_null>:
  404f20:	sub	sp, sp, #0x20
  404f24:	stp	x29, x30, [sp, #16]
  404f28:	add	x29, sp, #0x10
  404f2c:	mov	x8, sp
  404f30:	str	x0, [sp, #8]
  404f34:	ldr	x0, [sp, #8]
  404f38:	str	wzr, [sp]
  404f3c:	mov	w9, #0x0                   	// #0
  404f40:	strh	w9, [x8, #4]
  404f44:	mov	x1, x8
  404f48:	bl	407d6c <ether_addr_equal>
  404f4c:	and	w0, w0, #0x1
  404f50:	ldp	x29, x30, [sp, #16]
  404f54:	add	sp, sp, #0x20
  404f58:	ret

0000000000404f5c <networkd_dhcp_type_to_string>:
  404f5c:	sub	sp, sp, #0x10
  404f60:	str	w0, [sp, #4]
  404f64:	ldr	w8, [sp, #4]
  404f68:	cmp	w8, #0x0
  404f6c:	cset	w8, lt  // lt = tstop
  404f70:	tbnz	w8, #0, 404f80 <networkd_dhcp_type_to_string+0x24>
  404f74:	ldr	w8, [sp, #4]
  404f78:	cmp	w8, #0x9
  404f7c:	b.lt	404f8c <networkd_dhcp_type_to_string+0x30>  // b.tstop
  404f80:	mov	x8, xzr
  404f84:	str	x8, [sp, #8]
  404f88:	b	404fac <networkd_dhcp_type_to_string+0x50>
  404f8c:	ldrsw	x8, [sp, #4]
  404f90:	mov	x9, #0x8                   	// #8
  404f94:	mul	x8, x9, x8
  404f98:	adrp	x9, 408000 <_fini+0x1d4>
  404f9c:	add	x9, x9, #0x870
  404fa0:	add	x8, x9, x8
  404fa4:	ldr	x8, [x8]
  404fa8:	str	x8, [sp, #8]
  404fac:	ldr	x0, [sp, #8]
  404fb0:	add	sp, sp, #0x10
  404fb4:	ret

0000000000404fb8 <strv_isempty>:
  404fb8:	sub	sp, sp, #0x10
  404fbc:	str	x0, [sp, #8]
  404fc0:	ldr	x8, [sp, #8]
  404fc4:	mov	w9, #0x1                   	// #1
  404fc8:	str	w9, [sp, #4]
  404fcc:	cbz	x8, 404fe8 <strv_isempty+0x30>
  404fd0:	ldr	x8, [sp, #8]
  404fd4:	ldr	x8, [x8]
  404fd8:	cmp	x8, #0x0
  404fdc:	cset	w9, ne  // ne = any
  404fe0:	eor	w9, w9, #0x1
  404fe4:	str	w9, [sp, #4]
  404fe8:	ldr	w8, [sp, #4]
  404fec:	and	w0, w8, #0x1
  404ff0:	add	sp, sp, #0x10
  404ff4:	ret

0000000000404ff8 <yes_no>:
  404ff8:	sub	sp, sp, #0x10
  404ffc:	adrp	x8, 408000 <_fini+0x1d4>
  405000:	add	x8, x8, #0x753
  405004:	adrp	x9, 408000 <_fini+0x1d4>
  405008:	add	x9, x9, #0x750
  40500c:	and	w10, w0, #0x1
  405010:	strb	w10, [sp, #15]
  405014:	ldrb	w10, [sp, #15]
  405018:	tst	w10, #0x1
  40501c:	csel	x0, x8, x9, ne  // ne = any
  405020:	add	sp, sp, #0x10
  405024:	ret

0000000000405028 <address_dump>:
  405028:	sub	sp, sp, #0x40
  40502c:	stp	x29, x30, [sp, #48]
  405030:	add	x29, sp, #0x30
  405034:	mov	x8, xzr
  405038:	add	x3, sp, #0x10
  40503c:	stur	x0, [x29, #-16]
  405040:	str	x1, [sp, #24]
  405044:	str	x8, [sp, #16]
  405048:	str	x8, [sp, #8]
  40504c:	ldur	x8, [x29, #-16]
  405050:	ldr	w0, [x8, #44]
  405054:	ldur	x8, [x29, #-16]
  405058:	add	x1, x8, #0x8
  40505c:	ldur	x8, [x29, #-16]
  405060:	ldrb	w2, [x8, #40]
  405064:	bl	401d18 <in_addr_prefix_to_string@plt>
  405068:	str	w0, [sp, #4]
  40506c:	ldr	w9, [sp, #4]
  405070:	cmp	w9, #0x0
  405074:	cset	w9, ge  // ge = tcont
  405078:	tbnz	w9, #0, 405090 <address_dump+0x68>
  40507c:	ldr	w8, [sp, #4]
  405080:	stur	w8, [x29, #-4]
  405084:	mov	w8, #0x1                   	// #1
  405088:	str	w8, [sp]
  40508c:	b	405124 <address_dump+0xfc>
  405090:	ldur	x8, [x29, #-16]
  405094:	ldr	w0, [x8, #44]
  405098:	ldur	x8, [x29, #-16]
  40509c:	add	x1, x8, #0x18
  4050a0:	bl	401d28 <in_addr_is_null@plt>
  4050a4:	cbnz	w0, 4050e8 <address_dump+0xc0>
  4050a8:	ldur	x8, [x29, #-16]
  4050ac:	ldr	w0, [x8, #44]
  4050b0:	ldur	x8, [x29, #-16]
  4050b4:	add	x1, x8, #0x18
  4050b8:	add	x2, sp, #0x8
  4050bc:	bl	401d38 <in_addr_to_string@plt>
  4050c0:	str	w0, [sp, #4]
  4050c4:	ldr	w9, [sp, #4]
  4050c8:	cmp	w9, #0x0
  4050cc:	cset	w9, ge  // ge = tcont
  4050d0:	tbnz	w9, #0, 4050e8 <address_dump+0xc0>
  4050d4:	ldr	w8, [sp, #4]
  4050d8:	stur	w8, [x29, #-4]
  4050dc:	mov	w8, #0x1                   	// #1
  4050e0:	str	w8, [sp]
  4050e4:	b	405124 <address_dump+0xfc>
  4050e8:	ldr	x0, [sp, #24]
  4050ec:	ldr	x2, [sp, #16]
  4050f0:	adrp	x1, 408000 <_fini+0x1d4>
  4050f4:	add	x1, x1, #0x761
  4050f8:	bl	401ce8 <fprintf@plt>
  4050fc:	ldr	x8, [sp, #8]
  405100:	cbz	x8, 405118 <address_dump+0xf0>
  405104:	ldr	x0, [sp, #24]
  405108:	ldr	x2, [sp, #8]
  40510c:	adrp	x1, 408000 <_fini+0x1d4>
  405110:	add	x1, x1, #0x778
  405114:	bl	401ce8 <fprintf@plt>
  405118:	stur	wzr, [x29, #-4]
  40511c:	mov	w8, #0x1                   	// #1
  405120:	str	w8, [sp]
  405124:	add	x0, sp, #0x8
  405128:	bl	405734 <freep>
  40512c:	add	x0, sp, #0x10
  405130:	bl	405734 <freep>
  405134:	ldur	w0, [x29, #-4]
  405138:	ldp	x29, x30, [sp, #48]
  40513c:	add	sp, sp, #0x40
  405140:	ret

0000000000405144 <route_dump>:
  405144:	sub	sp, sp, #0x40
  405148:	stp	x29, x30, [sp, #48]
  40514c:	add	x29, sp, #0x30
  405150:	mov	x8, xzr
  405154:	stur	x0, [x29, #-16]
  405158:	str	x1, [sp, #24]
  40515c:	str	x8, [sp, #16]
  405160:	str	x8, [sp, #8]
  405164:	ldur	x8, [x29, #-16]
  405168:	ldr	w0, [x8, #44]
  40516c:	ldur	x8, [x29, #-16]
  405170:	add	x1, x8, #0x8
  405174:	bl	401d28 <in_addr_is_null@plt>
  405178:	cbnz	w0, 4051c4 <route_dump+0x80>
  40517c:	ldur	x8, [x29, #-16]
  405180:	ldr	w0, [x8, #44]
  405184:	ldur	x8, [x29, #-16]
  405188:	add	x1, x8, #0x8
  40518c:	ldur	x8, [x29, #-16]
  405190:	ldrb	w2, [x8, #40]
  405194:	add	x3, sp, #0x10
  405198:	bl	401d18 <in_addr_prefix_to_string@plt>
  40519c:	str	w0, [sp, #4]
  4051a0:	ldr	w9, [sp, #4]
  4051a4:	cmp	w9, #0x0
  4051a8:	cset	w9, ge  // ge = tcont
  4051ac:	tbnz	w9, #0, 4051c4 <route_dump+0x80>
  4051b0:	ldr	w8, [sp, #4]
  4051b4:	stur	w8, [x29, #-4]
  4051b8:	mov	w8, #0x1                   	// #1
  4051bc:	str	w8, [sp]
  4051c0:	b	405250 <route_dump+0x10c>
  4051c4:	ldur	x8, [x29, #-16]
  4051c8:	ldr	w0, [x8, #44]
  4051cc:	ldur	x8, [x29, #-16]
  4051d0:	add	x1, x8, #0x18
  4051d4:	add	x2, sp, #0x8
  4051d8:	bl	401d38 <in_addr_to_string@plt>
  4051dc:	str	w0, [sp, #4]
  4051e0:	ldr	w9, [sp, #4]
  4051e4:	cmp	w9, #0x0
  4051e8:	cset	w9, ge  // ge = tcont
  4051ec:	tbnz	w9, #0, 405204 <route_dump+0xc0>
  4051f0:	ldr	w8, [sp, #4]
  4051f4:	stur	w8, [x29, #-4]
  4051f8:	mov	w8, #0x1                   	// #1
  4051fc:	str	w8, [sp]
  405200:	b	405250 <route_dump+0x10c>
  405204:	ldr	x1, [sp, #24]
  405208:	adrp	x0, 408000 <_fini+0x1d4>
  40520c:	add	x0, x0, #0x781
  405210:	bl	401cf8 <fputs@plt>
  405214:	ldr	x8, [sp, #16]
  405218:	cbz	x8, 405230 <route_dump+0xec>
  40521c:	ldr	x0, [sp, #24]
  405220:	ldr	x2, [sp, #16]
  405224:	adrp	x1, 408000 <_fini+0x1d4>
  405228:	add	x1, x1, #0x78b
  40522c:	bl	401ce8 <fprintf@plt>
  405230:	ldr	x0, [sp, #24]
  405234:	ldr	x2, [sp, #8]
  405238:	adrp	x1, 408000 <_fini+0x1d4>
  40523c:	add	x1, x1, #0x79b
  405240:	bl	401ce8 <fprintf@plt>
  405244:	stur	wzr, [x29, #-4]
  405248:	mov	w8, #0x1                   	// #1
  40524c:	str	w8, [sp]
  405250:	add	x0, sp, #0x8
  405254:	bl	405734 <freep>
  405258:	add	x0, sp, #0x10
  40525c:	bl	405734 <freep>
  405260:	ldur	w0, [x29, #-4]
  405264:	ldp	x29, x30, [sp, #48]
  405268:	add	sp, sp, #0x40
  40526c:	ret

0000000000405270 <netdev_dump>:
  405270:	sub	sp, sp, #0x30
  405274:	stp	x29, x30, [sp, #32]
  405278:	add	x29, sp, #0x20
  40527c:	adrp	x8, 408000 <_fini+0x1d4>
  405280:	add	x8, x8, #0x1d8
  405284:	add	x8, x8, #0x3
  405288:	stur	x0, [x29, #-8]
  40528c:	str	x1, [sp, #16]
  405290:	str	x8, [sp, #8]
  405294:	ldur	x8, [x29, #-8]
  405298:	cmp	x8, #0x0
  40529c:	cset	w9, ne  // ne = any
  4052a0:	mov	w10, #0x1                   	// #1
  4052a4:	eor	w9, w9, #0x1
  4052a8:	eor	w9, w9, w10
  4052ac:	eor	w9, w9, w10
  4052b0:	and	w9, w9, #0x1
  4052b4:	mov	w0, w9
  4052b8:	sxtw	x8, w0
  4052bc:	cbz	x8, 4052e4 <netdev_dump+0x74>
  4052c0:	mov	w8, wzr
  4052c4:	mov	w0, w8
  4052c8:	adrp	x1, 408000 <_fini+0x1d4>
  4052cc:	add	x1, x1, #0x14e
  4052d0:	ldr	x2, [sp, #8]
  4052d4:	mov	w3, #0x456                 	// #1110
  4052d8:	adrp	x4, 408000 <_fini+0x1d4>
  4052dc:	add	x4, x4, #0x39c
  4052e0:	bl	401b18 <log_assert_failed_realm@plt>
  4052e4:	ldr	x8, [sp, #16]
  4052e8:	cmp	x8, #0x0
  4052ec:	cset	w9, ne  // ne = any
  4052f0:	mov	w10, #0x1                   	// #1
  4052f4:	eor	w9, w9, #0x1
  4052f8:	eor	w9, w9, w10
  4052fc:	eor	w9, w9, w10
  405300:	and	w9, w9, #0x1
  405304:	mov	w0, w9
  405308:	sxtw	x8, w0
  40530c:	cbz	x8, 405334 <netdev_dump+0xc4>
  405310:	mov	w8, wzr
  405314:	mov	w0, w8
  405318:	adrp	x1, 408000 <_fini+0x1d4>
  40531c:	add	x1, x1, #0x307
  405320:	ldr	x2, [sp, #8]
  405324:	mov	w3, #0x457                 	// #1111
  405328:	adrp	x4, 408000 <_fini+0x1d4>
  40532c:	add	x4, x4, #0x39c
  405330:	bl	401b18 <log_assert_failed_realm@plt>
  405334:	ldr	x0, [sp, #16]
  405338:	ldur	x8, [x29, #-8]
  40533c:	ldr	x2, [x8, #8]
  405340:	ldur	x8, [x29, #-8]
  405344:	ldr	x3, [x8]
  405348:	adrp	x1, 408000 <_fini+0x1d4>
  40534c:	add	x1, x1, #0x3bf
  405350:	bl	401ce8 <fprintf@plt>
  405354:	ldur	x8, [x29, #-8]
  405358:	ldr	w9, [x8, #16]
  40535c:	cmp	w9, #0x0
  405360:	cset	w9, ls  // ls = plast
  405364:	tbnz	w9, #0, 405380 <netdev_dump+0x110>
  405368:	ldr	x0, [sp, #16]
  40536c:	ldur	x8, [x29, #-8]
  405370:	ldr	w2, [x8, #16]
  405374:	adrp	x1, 408000 <_fini+0x1d4>
  405378:	add	x1, x1, #0x334
  40537c:	bl	401ce8 <fprintf@plt>
  405380:	ldp	x29, x30, [sp, #32]
  405384:	add	sp, sp, #0x30
  405388:	ret

000000000040538c <link_dump>:
  40538c:	sub	sp, sp, #0x50
  405390:	stp	x29, x30, [sp, #64]
  405394:	add	x29, sp, #0x40
  405398:	adrp	x8, 408000 <_fini+0x1d4>
  40539c:	add	x8, x8, #0x1d8
  4053a0:	add	x8, x8, #0x3
  4053a4:	stur	x0, [x29, #-8]
  4053a8:	stur	x1, [x29, #-16]
  4053ac:	str	x8, [sp, #16]
  4053b0:	ldur	x8, [x29, #-8]
  4053b4:	cmp	x8, #0x0
  4053b8:	cset	w9, ne  // ne = any
  4053bc:	mov	w10, #0x1                   	// #1
  4053c0:	eor	w9, w9, #0x1
  4053c4:	eor	w9, w9, w10
  4053c8:	eor	w9, w9, w10
  4053cc:	and	w9, w9, #0x1
  4053d0:	mov	w0, w9
  4053d4:	sxtw	x8, w0
  4053d8:	cbz	x8, 405400 <link_dump+0x74>
  4053dc:	mov	w8, wzr
  4053e0:	mov	w0, w8
  4053e4:	adrp	x1, 408000 <_fini+0x1d4>
  4053e8:	add	x1, x1, #0x196
  4053ec:	ldr	x2, [sp, #16]
  4053f0:	mov	w3, #0x467                 	// #1127
  4053f4:	adrp	x4, 408000 <_fini+0x1d4>
  4053f8:	add	x4, x4, #0x3d9
  4053fc:	bl	401b18 <log_assert_failed_realm@plt>
  405400:	ldur	x8, [x29, #-16]
  405404:	cmp	x8, #0x0
  405408:	cset	w9, ne  // ne = any
  40540c:	mov	w10, #0x1                   	// #1
  405410:	eor	w9, w9, #0x1
  405414:	eor	w9, w9, w10
  405418:	eor	w9, w9, w10
  40541c:	and	w9, w9, #0x1
  405420:	mov	w0, w9
  405424:	sxtw	x8, w0
  405428:	cbz	x8, 405450 <link_dump+0xc4>
  40542c:	mov	w8, wzr
  405430:	mov	w0, w8
  405434:	adrp	x1, 408000 <_fini+0x1d4>
  405438:	add	x1, x1, #0x307
  40543c:	ldr	x2, [sp, #16]
  405440:	mov	w3, #0x468                 	// #1128
  405444:	adrp	x4, 408000 <_fini+0x1d4>
  405448:	add	x4, x4, #0x3d9
  40544c:	bl	401b18 <log_assert_failed_realm@plt>
  405450:	ldur	x1, [x29, #-16]
  405454:	adrp	x0, 408000 <_fini+0x1d4>
  405458:	add	x0, x0, #0x3f8
  40545c:	bl	401cf8 <fputs@plt>
  405460:	ldur	x8, [x29, #-8]
  405464:	add	x8, x8, #0x8
  405468:	mov	x0, x8
  40546c:	bl	404f20 <ether_addr_is_null>
  405470:	tbnz	w0, #0, 4054ac <link_dump+0x120>
  405474:	ldur	x0, [x29, #-16]
  405478:	ldur	x8, [x29, #-8]
  40547c:	add	x8, x8, #0x8
  405480:	str	x0, [sp, #8]
  405484:	mov	x0, x8
  405488:	add	x1, sp, #0x1e
  40548c:	bl	401d08 <ether_addr_to_string@plt>
  405490:	ldr	x8, [sp, #8]
  405494:	str	x0, [sp]
  405498:	mov	x0, x8
  40549c:	adrp	x1, 408000 <_fini+0x1d4>
  4054a0:	add	x1, x1, #0x325
  4054a4:	ldr	x2, [sp]
  4054a8:	bl	401ce8 <fprintf@plt>
  4054ac:	ldur	x0, [x29, #-16]
  4054b0:	ldur	x8, [x29, #-8]
  4054b4:	ldr	x2, [x8]
  4054b8:	adrp	x1, 408000 <_fini+0x1d4>
  4054bc:	add	x1, x1, #0x401
  4054c0:	bl	401ce8 <fprintf@plt>
  4054c4:	ldp	x29, x30, [sp, #64]
  4054c8:	add	sp, sp, #0x50
  4054cc:	ret

00000000004054d0 <network_format>:
  4054d0:	sub	sp, sp, #0x70
  4054d4:	stp	x29, x30, [sp, #96]
  4054d8:	add	x29, sp, #0x60
  4054dc:	mov	x8, xzr
  4054e0:	adrp	x9, 408000 <_fini+0x1d4>
  4054e4:	add	x9, x9, #0x1d8
  4054e8:	add	x9, x9, #0x3
  4054ec:	adrp	x10, 408000 <_fini+0x1d4>
  4054f0:	add	x10, x10, #0x412
  4054f4:	stur	x0, [x29, #-16]
  4054f8:	stur	x1, [x29, #-24]
  4054fc:	stur	x8, [x29, #-32]
  405500:	stur	xzr, [x29, #-40]
  405504:	str	x9, [sp, #8]
  405508:	str	x10, [sp]
  40550c:	ldur	x8, [x29, #-16]
  405510:	cmp	x8, #0x0
  405514:	cset	w9, ne  // ne = any
  405518:	mov	w10, #0x1                   	// #1
  40551c:	eor	w9, w9, #0x1
  405520:	eor	w9, w9, w10
  405524:	eor	w9, w9, w10
  405528:	and	w9, w9, #0x1
  40552c:	mov	w0, w9
  405530:	sxtw	x8, w0
  405534:	cbz	x8, 405558 <network_format+0x88>
  405538:	mov	w8, wzr
  40553c:	mov	w0, w8
  405540:	adrp	x1, 408000 <_fini+0x1d4>
  405544:	add	x1, x1, #0xdf
  405548:	ldr	x2, [sp, #8]
  40554c:	mov	w3, #0x47a                 	// #1146
  405550:	ldr	x4, [sp]
  405554:	bl	401b18 <log_assert_failed_realm@plt>
  405558:	ldur	x8, [x29, #-24]
  40555c:	cmp	x8, #0x0
  405560:	cset	w9, ne  // ne = any
  405564:	mov	w10, #0x1                   	// #1
  405568:	eor	w9, w9, #0x1
  40556c:	eor	w9, w9, w10
  405570:	eor	w9, w9, w10
  405574:	and	w9, w9, #0x1
  405578:	mov	w0, w9
  40557c:	sxtw	x8, w0
  405580:	cbz	x8, 4055a4 <network_format+0xd4>
  405584:	mov	w8, wzr
  405588:	mov	w0, w8
  40558c:	adrp	x1, 408000 <_fini+0x1d4>
  405590:	add	x1, x1, #0x439
  405594:	ldr	x2, [sp, #8]
  405598:	mov	w3, #0x47b                 	// #1147
  40559c:	ldr	x4, [sp]
  4055a0:	bl	401b18 <log_assert_failed_realm@plt>
  4055a4:	mov	x8, xzr
  4055a8:	str	x8, [sp, #40]
  4055ac:	sub	x0, x29, #0x20
  4055b0:	sub	x1, x29, #0x28
  4055b4:	bl	401d48 <open_memstream_unlocked@plt>
  4055b8:	str	x0, [sp, #40]
  4055bc:	ldr	x8, [sp, #40]
  4055c0:	cbnz	x8, 4055d8 <network_format+0x108>
  4055c4:	mov	w8, #0xfffffff4            	// #-12
  4055c8:	stur	w8, [x29, #-4]
  4055cc:	mov	w8, #0x1                   	// #1
  4055d0:	str	w8, [sp, #36]
  4055d4:	b	405608 <network_format+0x138>
  4055d8:	ldur	x0, [x29, #-16]
  4055dc:	ldr	x1, [sp, #40]
  4055e0:	bl	404b20 <network_dump>
  4055e4:	ldr	x1, [sp, #40]
  4055e8:	mov	w8, wzr
  4055ec:	mov	w0, w8
  4055f0:	bl	401d58 <fputc@plt>
  4055f4:	ldr	x9, [sp, #40]
  4055f8:	mov	x0, x9
  4055fc:	bl	401d68 <fflush_and_check@plt>
  405600:	stur	w0, [x29, #-44]
  405604:	str	wzr, [sp, #36]
  405608:	add	x0, sp, #0x28
  40560c:	bl	40575c <fclosep>
  405610:	ldr	w8, [sp, #36]
  405614:	cmp	w8, #0x0
  405618:	cset	w8, eq  // eq = none
  40561c:	eor	w8, w8, #0x1
  405620:	tbnz	w8, #0, 40571c <network_format+0x24c>
  405624:	b	405628 <network_format+0x158>
  405628:	ldur	w8, [x29, #-44]
  40562c:	cmp	w8, #0x0
  405630:	cset	w8, ge  // ge = tcont
  405634:	tbnz	w8, #0, 40564c <network_format+0x17c>
  405638:	ldur	w8, [x29, #-44]
  40563c:	stur	w8, [x29, #-4]
  405640:	mov	w8, #0x1                   	// #1
  405644:	str	w8, [sp, #36]
  405648:	b	40571c <network_format+0x24c>
  40564c:	ldur	x8, [x29, #-32]
  405650:	cmp	x8, #0x0
  405654:	cset	w9, ne  // ne = any
  405658:	mov	w10, #0x1                   	// #1
  40565c:	eor	w9, w9, #0x1
  405660:	eor	w9, w9, w10
  405664:	eor	w9, w9, w10
  405668:	and	w9, w9, #0x1
  40566c:	mov	w0, w9
  405670:	sxtw	x8, w0
  405674:	cbz	x8, 405698 <network_format+0x1c8>
  405678:	mov	w8, wzr
  40567c:	mov	w0, w8
  405680:	adrp	x1, 408000 <_fini+0x1d4>
  405684:	add	x1, x1, #0x43d
  405688:	ldr	x2, [sp, #8]
  40568c:	mov	w3, #0x48e                 	// #1166
  405690:	ldr	x4, [sp]
  405694:	bl	401b18 <log_assert_failed_realm@plt>
  405698:	ldur	x8, [x29, #-32]
  40569c:	str	x8, [sp, #24]
  4056a0:	mov	x8, xzr
  4056a4:	stur	x8, [x29, #-32]
  4056a8:	ldr	x8, [sp, #24]
  4056ac:	str	x8, [sp, #16]
  4056b0:	ldr	x8, [sp, #16]
  4056b4:	ldur	x9, [x29, #-24]
  4056b8:	str	x8, [x9]
  4056bc:	ldur	x8, [x29, #-40]
  4056c0:	cmp	x8, #0x0
  4056c4:	cset	w9, hi  // hi = pmore
  4056c8:	mov	w10, #0x1                   	// #1
  4056cc:	eor	w9, w9, #0x1
  4056d0:	eor	w9, w9, w10
  4056d4:	eor	w9, w9, w10
  4056d8:	and	w9, w9, #0x1
  4056dc:	mov	w0, w9
  4056e0:	sxtw	x8, w0
  4056e4:	cbz	x8, 405708 <network_format+0x238>
  4056e8:	mov	w8, wzr
  4056ec:	mov	w0, w8
  4056f0:	adrp	x1, 408000 <_fini+0x1d4>
  4056f4:	add	x1, x1, #0x43f
  4056f8:	ldr	x2, [sp, #8]
  4056fc:	mov	w3, #0x490                 	// #1168
  405700:	ldr	x4, [sp]
  405704:	bl	401b18 <log_assert_failed_realm@plt>
  405708:	ldur	x8, [x29, #-40]
  40570c:	mov	w9, #0x1                   	// #1
  405710:	subs	w8, w8, #0x1
  405714:	stur	w8, [x29, #-4]
  405718:	str	w9, [sp, #36]
  40571c:	sub	x0, x29, #0x20
  405720:	bl	405734 <freep>
  405724:	ldur	w0, [x29, #-4]
  405728:	ldp	x29, x30, [sp, #96]
  40572c:	add	sp, sp, #0x70
  405730:	ret

0000000000405734 <freep>:
  405734:	sub	sp, sp, #0x20
  405738:	stp	x29, x30, [sp, #16]
  40573c:	add	x29, sp, #0x10
  405740:	str	x0, [sp, #8]
  405744:	ldr	x8, [sp, #8]
  405748:	ldr	x0, [x8]
  40574c:	bl	401b58 <free@plt>
  405750:	ldp	x29, x30, [sp, #16]
  405754:	add	sp, sp, #0x20
  405758:	ret

000000000040575c <fclosep>:
  40575c:	sub	sp, sp, #0x20
  405760:	stp	x29, x30, [sp, #16]
  405764:	add	x29, sp, #0x10
  405768:	str	x0, [sp, #8]
  40576c:	ldr	x8, [sp, #8]
  405770:	ldr	x0, [x8]
  405774:	bl	401be8 <safe_fclose@plt>
  405778:	ldp	x29, x30, [sp, #16]
  40577c:	add	sp, sp, #0x20
  405780:	ret

0000000000405784 <netdev_format>:
  405784:	sub	sp, sp, #0x70
  405788:	stp	x29, x30, [sp, #96]
  40578c:	add	x29, sp, #0x60
  405790:	mov	x8, xzr
  405794:	adrp	x9, 408000 <_fini+0x1d4>
  405798:	add	x9, x9, #0x1d8
  40579c:	add	x9, x9, #0x3
  4057a0:	adrp	x10, 408000 <_fini+0x1d4>
  4057a4:	add	x10, x10, #0x446
  4057a8:	stur	x0, [x29, #-16]
  4057ac:	stur	x1, [x29, #-24]
  4057b0:	stur	x8, [x29, #-32]
  4057b4:	stur	xzr, [x29, #-40]
  4057b8:	str	x9, [sp, #8]
  4057bc:	str	x10, [sp]
  4057c0:	ldur	x8, [x29, #-16]
  4057c4:	cmp	x8, #0x0
  4057c8:	cset	w9, ne  // ne = any
  4057cc:	mov	w10, #0x1                   	// #1
  4057d0:	eor	w9, w9, #0x1
  4057d4:	eor	w9, w9, w10
  4057d8:	eor	w9, w9, w10
  4057dc:	and	w9, w9, #0x1
  4057e0:	mov	w0, w9
  4057e4:	sxtw	x8, w0
  4057e8:	cbz	x8, 40580c <netdev_format+0x88>
  4057ec:	mov	w8, wzr
  4057f0:	mov	w0, w8
  4057f4:	adrp	x1, 408000 <_fini+0x1d4>
  4057f8:	add	x1, x1, #0x14e
  4057fc:	ldr	x2, [sp, #8]
  405800:	mov	w3, #0x499                 	// #1177
  405804:	ldr	x4, [sp]
  405808:	bl	401b18 <log_assert_failed_realm@plt>
  40580c:	ldur	x8, [x29, #-24]
  405810:	cmp	x8, #0x0
  405814:	cset	w9, ne  // ne = any
  405818:	mov	w10, #0x1                   	// #1
  40581c:	eor	w9, w9, #0x1
  405820:	eor	w9, w9, w10
  405824:	eor	w9, w9, w10
  405828:	and	w9, w9, #0x1
  40582c:	mov	w0, w9
  405830:	sxtw	x8, w0
  405834:	cbz	x8, 405858 <netdev_format+0xd4>
  405838:	mov	w8, wzr
  40583c:	mov	w0, w8
  405840:	adrp	x1, 408000 <_fini+0x1d4>
  405844:	add	x1, x1, #0x439
  405848:	ldr	x2, [sp, #8]
  40584c:	mov	w3, #0x49a                 	// #1178
  405850:	ldr	x4, [sp]
  405854:	bl	401b18 <log_assert_failed_realm@plt>
  405858:	mov	x8, xzr
  40585c:	str	x8, [sp, #40]
  405860:	sub	x0, x29, #0x20
  405864:	sub	x1, x29, #0x28
  405868:	bl	401d48 <open_memstream_unlocked@plt>
  40586c:	str	x0, [sp, #40]
  405870:	ldr	x8, [sp, #40]
  405874:	cbnz	x8, 40588c <netdev_format+0x108>
  405878:	mov	w8, #0xfffffff4            	// #-12
  40587c:	stur	w8, [x29, #-4]
  405880:	mov	w8, #0x1                   	// #1
  405884:	str	w8, [sp, #36]
  405888:	b	4058bc <netdev_format+0x138>
  40588c:	ldur	x0, [x29, #-16]
  405890:	ldr	x1, [sp, #40]
  405894:	bl	405270 <netdev_dump>
  405898:	ldr	x1, [sp, #40]
  40589c:	mov	w8, wzr
  4058a0:	mov	w0, w8
  4058a4:	bl	401d58 <fputc@plt>
  4058a8:	ldr	x9, [sp, #40]
  4058ac:	mov	x0, x9
  4058b0:	bl	401d68 <fflush_and_check@plt>
  4058b4:	stur	w0, [x29, #-44]
  4058b8:	str	wzr, [sp, #36]
  4058bc:	add	x0, sp, #0x28
  4058c0:	bl	40575c <fclosep>
  4058c4:	ldr	w8, [sp, #36]
  4058c8:	cmp	w8, #0x0
  4058cc:	cset	w8, eq  // eq = none
  4058d0:	eor	w8, w8, #0x1
  4058d4:	tbnz	w8, #0, 4059d0 <netdev_format+0x24c>
  4058d8:	b	4058dc <netdev_format+0x158>
  4058dc:	ldur	w8, [x29, #-44]
  4058e0:	cmp	w8, #0x0
  4058e4:	cset	w8, ge  // ge = tcont
  4058e8:	tbnz	w8, #0, 405900 <netdev_format+0x17c>
  4058ec:	ldur	w8, [x29, #-44]
  4058f0:	stur	w8, [x29, #-4]
  4058f4:	mov	w8, #0x1                   	// #1
  4058f8:	str	w8, [sp, #36]
  4058fc:	b	4059d0 <netdev_format+0x24c>
  405900:	ldur	x8, [x29, #-32]
  405904:	cmp	x8, #0x0
  405908:	cset	w9, ne  // ne = any
  40590c:	mov	w10, #0x1                   	// #1
  405910:	eor	w9, w9, #0x1
  405914:	eor	w9, w9, w10
  405918:	eor	w9, w9, w10
  40591c:	and	w9, w9, #0x1
  405920:	mov	w0, w9
  405924:	sxtw	x8, w0
  405928:	cbz	x8, 40594c <netdev_format+0x1c8>
  40592c:	mov	w8, wzr
  405930:	mov	w0, w8
  405934:	adrp	x1, 408000 <_fini+0x1d4>
  405938:	add	x1, x1, #0x43d
  40593c:	ldr	x2, [sp, #8]
  405940:	mov	w3, #0x4ad                 	// #1197
  405944:	ldr	x4, [sp]
  405948:	bl	401b18 <log_assert_failed_realm@plt>
  40594c:	ldur	x8, [x29, #-32]
  405950:	str	x8, [sp, #24]
  405954:	mov	x8, xzr
  405958:	stur	x8, [x29, #-32]
  40595c:	ldr	x8, [sp, #24]
  405960:	str	x8, [sp, #16]
  405964:	ldr	x8, [sp, #16]
  405968:	ldur	x9, [x29, #-24]
  40596c:	str	x8, [x9]
  405970:	ldur	x8, [x29, #-40]
  405974:	cmp	x8, #0x0
  405978:	cset	w9, hi  // hi = pmore
  40597c:	mov	w10, #0x1                   	// #1
  405980:	eor	w9, w9, #0x1
  405984:	eor	w9, w9, w10
  405988:	eor	w9, w9, w10
  40598c:	and	w9, w9, #0x1
  405990:	mov	w0, w9
  405994:	sxtw	x8, w0
  405998:	cbz	x8, 4059bc <netdev_format+0x238>
  40599c:	mov	w8, wzr
  4059a0:	mov	w0, w8
  4059a4:	adrp	x1, 408000 <_fini+0x1d4>
  4059a8:	add	x1, x1, #0x43f
  4059ac:	ldr	x2, [sp, #8]
  4059b0:	mov	w3, #0x4af                 	// #1199
  4059b4:	ldr	x4, [sp]
  4059b8:	bl	401b18 <log_assert_failed_realm@plt>
  4059bc:	ldur	x8, [x29, #-40]
  4059c0:	mov	w9, #0x1                   	// #1
  4059c4:	subs	w8, w8, #0x1
  4059c8:	stur	w8, [x29, #-4]
  4059cc:	str	w9, [sp, #36]
  4059d0:	sub	x0, x29, #0x20
  4059d4:	bl	405734 <freep>
  4059d8:	ldur	w0, [x29, #-4]
  4059dc:	ldp	x29, x30, [sp, #96]
  4059e0:	add	sp, sp, #0x70
  4059e4:	ret

00000000004059e8 <link_format>:
  4059e8:	sub	sp, sp, #0x70
  4059ec:	stp	x29, x30, [sp, #96]
  4059f0:	add	x29, sp, #0x60
  4059f4:	mov	x8, xzr
  4059f8:	adrp	x9, 408000 <_fini+0x1d4>
  4059fc:	add	x9, x9, #0x1d8
  405a00:	add	x9, x9, #0x3
  405a04:	adrp	x10, 408000 <_fini+0x1d4>
  405a08:	add	x10, x10, #0x46b
  405a0c:	stur	x0, [x29, #-16]
  405a10:	stur	x1, [x29, #-24]
  405a14:	stur	x8, [x29, #-32]
  405a18:	stur	xzr, [x29, #-40]
  405a1c:	str	x9, [sp, #8]
  405a20:	str	x10, [sp]
  405a24:	ldur	x8, [x29, #-16]
  405a28:	cmp	x8, #0x0
  405a2c:	cset	w9, ne  // ne = any
  405a30:	mov	w10, #0x1                   	// #1
  405a34:	eor	w9, w9, #0x1
  405a38:	eor	w9, w9, w10
  405a3c:	eor	w9, w9, w10
  405a40:	and	w9, w9, #0x1
  405a44:	mov	w0, w9
  405a48:	sxtw	x8, w0
  405a4c:	cbz	x8, 405a70 <link_format+0x88>
  405a50:	mov	w8, wzr
  405a54:	mov	w0, w8
  405a58:	adrp	x1, 408000 <_fini+0x1d4>
  405a5c:	add	x1, x1, #0x196
  405a60:	ldr	x2, [sp, #8]
  405a64:	mov	w3, #0x4b8                 	// #1208
  405a68:	ldr	x4, [sp]
  405a6c:	bl	401b18 <log_assert_failed_realm@plt>
  405a70:	ldur	x8, [x29, #-24]
  405a74:	cmp	x8, #0x0
  405a78:	cset	w9, ne  // ne = any
  405a7c:	mov	w10, #0x1                   	// #1
  405a80:	eor	w9, w9, #0x1
  405a84:	eor	w9, w9, w10
  405a88:	eor	w9, w9, w10
  405a8c:	and	w9, w9, #0x1
  405a90:	mov	w0, w9
  405a94:	sxtw	x8, w0
  405a98:	cbz	x8, 405abc <link_format+0xd4>
  405a9c:	mov	w8, wzr
  405aa0:	mov	w0, w8
  405aa4:	adrp	x1, 408000 <_fini+0x1d4>
  405aa8:	add	x1, x1, #0x439
  405aac:	ldr	x2, [sp, #8]
  405ab0:	mov	w3, #0x4b9                 	// #1209
  405ab4:	ldr	x4, [sp]
  405ab8:	bl	401b18 <log_assert_failed_realm@plt>
  405abc:	mov	x8, xzr
  405ac0:	str	x8, [sp, #40]
  405ac4:	sub	x0, x29, #0x20
  405ac8:	sub	x1, x29, #0x28
  405acc:	bl	401d48 <open_memstream_unlocked@plt>
  405ad0:	str	x0, [sp, #40]
  405ad4:	ldr	x8, [sp, #40]
  405ad8:	cbnz	x8, 405af0 <link_format+0x108>
  405adc:	mov	w8, #0xfffffff4            	// #-12
  405ae0:	stur	w8, [x29, #-4]
  405ae4:	mov	w8, #0x1                   	// #1
  405ae8:	str	w8, [sp, #36]
  405aec:	b	405b20 <link_format+0x138>
  405af0:	ldur	x0, [x29, #-16]
  405af4:	ldr	x1, [sp, #40]
  405af8:	bl	40538c <link_dump>
  405afc:	ldr	x1, [sp, #40]
  405b00:	mov	w8, wzr
  405b04:	mov	w0, w8
  405b08:	bl	401d58 <fputc@plt>
  405b0c:	ldr	x9, [sp, #40]
  405b10:	mov	x0, x9
  405b14:	bl	401d68 <fflush_and_check@plt>
  405b18:	stur	w0, [x29, #-44]
  405b1c:	str	wzr, [sp, #36]
  405b20:	add	x0, sp, #0x28
  405b24:	bl	40575c <fclosep>
  405b28:	ldr	w8, [sp, #36]
  405b2c:	cmp	w8, #0x0
  405b30:	cset	w8, eq  // eq = none
  405b34:	eor	w8, w8, #0x1
  405b38:	tbnz	w8, #0, 405c34 <link_format+0x24c>
  405b3c:	b	405b40 <link_format+0x158>
  405b40:	ldur	w8, [x29, #-44]
  405b44:	cmp	w8, #0x0
  405b48:	cset	w8, ge  // ge = tcont
  405b4c:	tbnz	w8, #0, 405b64 <link_format+0x17c>
  405b50:	ldur	w8, [x29, #-44]
  405b54:	stur	w8, [x29, #-4]
  405b58:	mov	w8, #0x1                   	// #1
  405b5c:	str	w8, [sp, #36]
  405b60:	b	405c34 <link_format+0x24c>
  405b64:	ldur	x8, [x29, #-32]
  405b68:	cmp	x8, #0x0
  405b6c:	cset	w9, ne  // ne = any
  405b70:	mov	w10, #0x1                   	// #1
  405b74:	eor	w9, w9, #0x1
  405b78:	eor	w9, w9, w10
  405b7c:	eor	w9, w9, w10
  405b80:	and	w9, w9, #0x1
  405b84:	mov	w0, w9
  405b88:	sxtw	x8, w0
  405b8c:	cbz	x8, 405bb0 <link_format+0x1c8>
  405b90:	mov	w8, wzr
  405b94:	mov	w0, w8
  405b98:	adrp	x1, 408000 <_fini+0x1d4>
  405b9c:	add	x1, x1, #0x43d
  405ba0:	ldr	x2, [sp, #8]
  405ba4:	mov	w3, #0x4cc                 	// #1228
  405ba8:	ldr	x4, [sp]
  405bac:	bl	401b18 <log_assert_failed_realm@plt>
  405bb0:	ldur	x8, [x29, #-32]
  405bb4:	str	x8, [sp, #24]
  405bb8:	mov	x8, xzr
  405bbc:	stur	x8, [x29, #-32]
  405bc0:	ldr	x8, [sp, #24]
  405bc4:	str	x8, [sp, #16]
  405bc8:	ldr	x8, [sp, #16]
  405bcc:	ldur	x9, [x29, #-24]
  405bd0:	str	x8, [x9]
  405bd4:	ldur	x8, [x29, #-40]
  405bd8:	cmp	x8, #0x0
  405bdc:	cset	w9, hi  // hi = pmore
  405be0:	mov	w10, #0x1                   	// #1
  405be4:	eor	w9, w9, #0x1
  405be8:	eor	w9, w9, w10
  405bec:	eor	w9, w9, w10
  405bf0:	and	w9, w9, #0x1
  405bf4:	mov	w0, w9
  405bf8:	sxtw	x8, w0
  405bfc:	cbz	x8, 405c20 <link_format+0x238>
  405c00:	mov	w8, wzr
  405c04:	mov	w0, w8
  405c08:	adrp	x1, 408000 <_fini+0x1d4>
  405c0c:	add	x1, x1, #0x43f
  405c10:	ldr	x2, [sp, #8]
  405c14:	mov	w3, #0x4ce                 	// #1230
  405c18:	ldr	x4, [sp]
  405c1c:	bl	401b18 <log_assert_failed_realm@plt>
  405c20:	ldur	x8, [x29, #-40]
  405c24:	mov	w9, #0x1                   	// #1
  405c28:	subs	w8, w8, #0x1
  405c2c:	stur	w8, [x29, #-4]
  405c30:	str	w9, [sp, #36]
  405c34:	sub	x0, x29, #0x20
  405c38:	bl	405734 <freep>
  405c3c:	ldur	w0, [x29, #-4]
  405c40:	ldp	x29, x30, [sp, #96]
  405c44:	add	sp, sp, #0x70
  405c48:	ret

0000000000405c4c <proc_cmdline_value_missing>:
  405c4c:	sub	sp, sp, #0x50
  405c50:	stp	x29, x30, [sp, #64]
  405c54:	add	x29, sp, #0x40
  405c58:	adrp	x8, 408000 <_fini+0x1d4>
  405c5c:	add	x8, x8, #0x48c
  405c60:	add	x2, x8, #0x3
  405c64:	stur	x0, [x29, #-16]
  405c68:	stur	x1, [x29, #-24]
  405c6c:	ldur	x8, [x29, #-24]
  405c70:	str	x2, [sp, #16]
  405c74:	cbnz	x8, 405d04 <proc_cmdline_value_missing+0xb8>
  405c78:	mov	w8, #0x4                   	// #4
  405c7c:	stur	w8, [x29, #-28]
  405c80:	str	wzr, [sp, #32]
  405c84:	str	wzr, [sp, #28]
  405c88:	ldr	w0, [sp, #28]
  405c8c:	bl	401ab8 <log_get_max_level_realm@plt>
  405c90:	ldur	w8, [x29, #-28]
  405c94:	and	w8, w8, #0x7
  405c98:	cmp	w0, w8
  405c9c:	b.lt	405cd8 <proc_cmdline_value_missing+0x8c>  // b.tstop
  405ca0:	ldr	w8, [sp, #28]
  405ca4:	ldur	w9, [x29, #-28]
  405ca8:	orr	w0, w9, w8, lsl #10
  405cac:	ldr	w1, [sp, #32]
  405cb0:	ldur	x6, [x29, #-16]
  405cb4:	ldr	x2, [sp, #16]
  405cb8:	mov	w3, #0x21                  	// #33
  405cbc:	adrp	x4, 408000 <_fini+0x1d4>
  405cc0:	add	x4, x4, #0x4a8
  405cc4:	adrp	x5, 408000 <_fini+0x1d4>
  405cc8:	add	x5, x5, #0x4c3
  405ccc:	bl	401ac8 <log_internal_realm@plt>
  405cd0:	str	w0, [sp, #12]
  405cd4:	b	405cec <proc_cmdline_value_missing+0xa0>
  405cd8:	ldr	w0, [sp, #32]
  405cdc:	bl	401ad8 <abs@plt>
  405ce0:	mov	w8, wzr
  405ce4:	subs	w8, w8, w0, uxtb
  405ce8:	str	w8, [sp, #12]
  405cec:	ldr	w8, [sp, #12]
  405cf0:	str	w8, [sp, #24]
  405cf4:	mov	w8, #0x1                   	// #1
  405cf8:	and	w8, w8, #0x1
  405cfc:	sturb	w8, [x29, #-1]
  405d00:	b	405d10 <proc_cmdline_value_missing+0xc4>
  405d04:	mov	w8, wzr
  405d08:	and	w8, w8, #0x1
  405d0c:	sturb	w8, [x29, #-1]
  405d10:	ldurb	w8, [x29, #-1]
  405d14:	and	w0, w8, #0x1
  405d18:	ldp	x29, x30, [sp, #64]
  405d1c:	add	sp, sp, #0x50
  405d20:	ret

0000000000405d24 <network_set_dhcp_type>:
  405d24:	sub	sp, sp, #0x40
  405d28:	stp	x29, x30, [sp, #48]
  405d2c:	add	x29, sp, #0x30
  405d30:	stur	x0, [x29, #-16]
  405d34:	str	x1, [sp, #24]
  405d38:	str	x2, [sp, #16]
  405d3c:	ldr	x0, [sp, #16]
  405d40:	bl	406578 <dracut_dhcp_type_from_string>
  405d44:	str	w0, [sp, #4]
  405d48:	ldr	w8, [sp, #4]
  405d4c:	cmp	w8, #0x0
  405d50:	cset	w8, ge  // ge = tcont
  405d54:	tbnz	w8, #0, 405d64 <network_set_dhcp_type+0x40>
  405d58:	mov	w8, #0xffffffea            	// #-22
  405d5c:	stur	w8, [x29, #-4]
  405d60:	b	405dbc <network_set_dhcp_type+0x98>
  405d64:	ldur	x0, [x29, #-16]
  405d68:	ldr	x1, [sp, #24]
  405d6c:	bl	4031dc <network_get>
  405d70:	str	x0, [sp, #8]
  405d74:	ldr	x8, [sp, #8]
  405d78:	cbnz	x8, 405dac <network_set_dhcp_type+0x88>
  405d7c:	ldur	x0, [x29, #-16]
  405d80:	ldr	x1, [sp, #24]
  405d84:	add	x2, sp, #0x8
  405d88:	bl	4065ac <network_new>
  405d8c:	str	w0, [sp]
  405d90:	ldr	w8, [sp]
  405d94:	cmp	w8, #0x0
  405d98:	cset	w8, ge  // ge = tcont
  405d9c:	tbnz	w8, #0, 405dac <network_set_dhcp_type+0x88>
  405da0:	ldr	w8, [sp]
  405da4:	stur	w8, [x29, #-4]
  405da8:	b	405dbc <network_set_dhcp_type+0x98>
  405dac:	ldr	w8, [sp, #4]
  405db0:	ldr	x9, [sp, #8]
  405db4:	str	w8, [x9, #20]
  405db8:	stur	wzr, [x29, #-4]
  405dbc:	ldur	w0, [x29, #-4]
  405dc0:	ldp	x29, x30, [sp, #48]
  405dc4:	add	sp, sp, #0x40
  405dc8:	ret

0000000000405dcc <parse_cmdline_ip_address>:
  405dcc:	stp	x29, x30, [sp, #-32]!
  405dd0:	stp	x28, x19, [sp, #16]
  405dd4:	mov	x29, sp
  405dd8:	sub	sp, sp, #0x120
  405ddc:	mov	x19, sp
  405de0:	adrp	x8, 408000 <_fini+0x1d4>
  405de4:	add	x8, x8, #0x8b8
  405de8:	adrp	x9, 408000 <_fini+0x1d4>
  405dec:	add	x9, x9, #0x8b8
  405df0:	adrp	x10, 408000 <_fini+0x1d4>
  405df4:	add	x10, x10, #0x8b8
  405df8:	sub	x11, x29, #0x20
  405dfc:	sub	x12, x29, #0x30
  405e00:	stur	x0, [x29, #-16]
  405e04:	stur	w1, [x29, #-20]
  405e08:	stur	x2, [x29, #-32]
  405e0c:	ldr	q0, [x8]
  405e10:	stur	q0, [x29, #-48]
  405e14:	ldr	q0, [x9]
  405e18:	stur	q0, [x29, #-64]
  405e1c:	ldr	q0, [x10]
  405e20:	stur	q0, [x29, #-80]
  405e24:	ldur	w0, [x29, #-20]
  405e28:	mov	x1, x11
  405e2c:	mov	x2, x12
  405e30:	bl	406900 <parse_ip_address_one>
  405e34:	stur	w0, [x29, #-128]
  405e38:	ldur	w13, [x29, #-128]
  405e3c:	cmp	w13, #0x0
  405e40:	cset	w13, ge  // ge = tcont
  405e44:	tbnz	w13, #0, 405e54 <parse_cmdline_ip_address+0x88>
  405e48:	ldur	w8, [x29, #-128]
  405e4c:	stur	w8, [x29, #-4]
  405e50:	b	406380 <parse_cmdline_ip_address+0x5b4>
  405e54:	ldur	w0, [x29, #-20]
  405e58:	sub	x1, x29, #0x20
  405e5c:	sub	x2, x29, #0x40
  405e60:	bl	406900 <parse_ip_address_one>
  405e64:	stur	w0, [x29, #-128]
  405e68:	ldur	w8, [x29, #-128]
  405e6c:	cmp	w8, #0x0
  405e70:	cset	w8, ge  // ge = tcont
  405e74:	tbnz	w8, #0, 405e84 <parse_cmdline_ip_address+0xb8>
  405e78:	ldur	w8, [x29, #-128]
  405e7c:	stur	w8, [x29, #-4]
  405e80:	b	406380 <parse_cmdline_ip_address+0x5b4>
  405e84:	ldur	w0, [x29, #-20]
  405e88:	sub	x1, x29, #0x20
  405e8c:	sub	x2, x29, #0x50
  405e90:	bl	406900 <parse_ip_address_one>
  405e94:	stur	w0, [x29, #-128]
  405e98:	ldur	w8, [x29, #-128]
  405e9c:	cmp	w8, #0x0
  405ea0:	cset	w8, ge  // ge = tcont
  405ea4:	tbnz	w8, #0, 405eb4 <parse_cmdline_ip_address+0xe8>
  405ea8:	ldur	w8, [x29, #-128]
  405eac:	stur	w8, [x29, #-4]
  405eb0:	b	406380 <parse_cmdline_ip_address+0x5b4>
  405eb4:	ldur	w0, [x29, #-20]
  405eb8:	sub	x1, x29, #0x20
  405ebc:	sub	x2, x29, #0x79
  405ec0:	bl	406b64 <parse_netmask_or_prefixlen>
  405ec4:	stur	w0, [x29, #-128]
  405ec8:	ldur	w8, [x29, #-128]
  405ecc:	cmp	w8, #0x0
  405ed0:	cset	w8, ge  // ge = tcont
  405ed4:	tbnz	w8, #0, 405ee4 <parse_cmdline_ip_address+0x118>
  405ed8:	ldur	w8, [x29, #-128]
  405edc:	stur	w8, [x29, #-4]
  405ee0:	b	406380 <parse_cmdline_ip_address+0x5b4>
  405ee4:	ldur	x0, [x29, #-32]
  405ee8:	mov	w1, #0x3a                  	// #58
  405eec:	bl	401b08 <strchr@plt>
  405ef0:	stur	x0, [x29, #-120]
  405ef4:	ldur	x8, [x29, #-120]
  405ef8:	cbnz	x8, 405f08 <parse_cmdline_ip_address+0x13c>
  405efc:	mov	w8, #0xffffffea            	// #-22
  405f00:	stur	w8, [x29, #-4]
  405f04:	b	406380 <parse_cmdline_ip_address+0x5b4>
  405f08:	ldur	x8, [x29, #-32]
  405f0c:	stur	x8, [x29, #-136]
  405f10:	ldur	x0, [x29, #-136]
  405f14:	ldur	x8, [x29, #-120]
  405f18:	ldur	x9, [x29, #-32]
  405f1c:	subs	x1, x8, x9
  405f20:	bl	401c18 <strnlen@plt>
  405f24:	str	x0, [x19, #144]
  405f28:	ldr	x8, [x19, #144]
  405f2c:	mov	x9, #0x1                   	// #1
  405f30:	add	x8, x8, #0x1
  405f34:	mul	x8, x8, x9
  405f38:	add	x8, x8, #0xf
  405f3c:	and	x8, x8, #0xfffffffffffffff0
  405f40:	mov	x9, sp
  405f44:	subs	x8, x9, x8
  405f48:	mov	sp, x8
  405f4c:	str	x8, [x19, #136]
  405f50:	ldr	x8, [x19, #136]
  405f54:	ldr	x9, [x19, #144]
  405f58:	add	x8, x8, x9
  405f5c:	mov	w10, #0x0                   	// #0
  405f60:	strb	w10, [x8]
  405f64:	ldr	x8, [x19, #136]
  405f68:	ldur	x1, [x29, #-136]
  405f6c:	ldr	x2, [x19, #144]
  405f70:	mov	x0, x8
  405f74:	str	x8, [x19, #24]
  405f78:	bl	401c28 <memcpy@plt>
  405f7c:	ldr	x8, [x19, #24]
  405f80:	str	x8, [x19, #128]
  405f84:	ldr	x9, [x19, #128]
  405f88:	stur	x9, [x29, #-88]
  405f8c:	ldur	x0, [x29, #-88]
  405f90:	mov	w10, wzr
  405f94:	and	w1, w10, #0x1
  405f98:	bl	401d78 <hostname_is_valid@plt>
  405f9c:	tbnz	w0, #0, 405fac <parse_cmdline_ip_address+0x1e0>
  405fa0:	mov	w8, #0xffffffea            	// #-22
  405fa4:	stur	w8, [x29, #-4]
  405fa8:	b	406380 <parse_cmdline_ip_address+0x5b4>
  405fac:	ldur	x8, [x29, #-120]
  405fb0:	add	x8, x8, #0x1
  405fb4:	stur	x8, [x29, #-32]
  405fb8:	ldur	x0, [x29, #-32]
  405fbc:	mov	w1, #0x3a                  	// #58
  405fc0:	bl	401b08 <strchr@plt>
  405fc4:	stur	x0, [x29, #-120]
  405fc8:	ldur	x8, [x29, #-120]
  405fcc:	cbnz	x8, 405fdc <parse_cmdline_ip_address+0x210>
  405fd0:	mov	w8, #0xffffffea            	// #-22
  405fd4:	stur	w8, [x29, #-4]
  405fd8:	b	406380 <parse_cmdline_ip_address+0x5b4>
  405fdc:	ldur	x8, [x29, #-32]
  405fe0:	str	x8, [x19, #120]
  405fe4:	ldr	x0, [x19, #120]
  405fe8:	ldur	x8, [x29, #-120]
  405fec:	ldur	x9, [x29, #-32]
  405ff0:	subs	x1, x8, x9
  405ff4:	bl	401c18 <strnlen@plt>
  405ff8:	str	x0, [x19, #112]
  405ffc:	ldr	x8, [x19, #112]
  406000:	mov	x9, #0x1                   	// #1
  406004:	add	x8, x8, #0x1
  406008:	mul	x8, x8, x9
  40600c:	add	x8, x8, #0xf
  406010:	and	x8, x8, #0xfffffffffffffff0
  406014:	mov	x9, sp
  406018:	subs	x8, x9, x8
  40601c:	mov	sp, x8
  406020:	str	x8, [x19, #104]
  406024:	ldr	x8, [x19, #104]
  406028:	ldr	x9, [x19, #112]
  40602c:	add	x8, x8, x9
  406030:	mov	w10, #0x0                   	// #0
  406034:	strb	w10, [x8]
  406038:	ldr	x8, [x19, #104]
  40603c:	ldr	x1, [x19, #120]
  406040:	ldr	x2, [x19, #112]
  406044:	mov	x0, x8
  406048:	str	x8, [x19, #16]
  40604c:	bl	401c28 <memcpy@plt>
  406050:	ldr	x8, [x19, #16]
  406054:	str	x8, [x19, #96]
  406058:	ldr	x9, [x19, #96]
  40605c:	stur	x9, [x29, #-96]
  406060:	ldur	x9, [x29, #-120]
  406064:	add	x9, x9, #0x1
  406068:	stur	x9, [x29, #-32]
  40606c:	ldur	x0, [x29, #-32]
  406070:	mov	w1, #0x3a                  	// #58
  406074:	bl	401b08 <strchr@plt>
  406078:	stur	x0, [x29, #-120]
  40607c:	ldur	x8, [x29, #-120]
  406080:	cbnz	x8, 406090 <parse_cmdline_ip_address+0x2c4>
  406084:	ldur	x8, [x29, #-32]
  406088:	stur	x8, [x29, #-104]
  40608c:	b	406114 <parse_cmdline_ip_address+0x348>
  406090:	ldur	x8, [x29, #-32]
  406094:	str	x8, [x19, #88]
  406098:	ldr	x0, [x19, #88]
  40609c:	ldur	x8, [x29, #-120]
  4060a0:	ldur	x9, [x29, #-32]
  4060a4:	subs	x1, x8, x9
  4060a8:	bl	401c18 <strnlen@plt>
  4060ac:	str	x0, [x19, #80]
  4060b0:	ldr	x8, [x19, #80]
  4060b4:	mov	x9, #0x1                   	// #1
  4060b8:	add	x8, x8, #0x1
  4060bc:	mul	x8, x8, x9
  4060c0:	add	x8, x8, #0xf
  4060c4:	and	x8, x8, #0xfffffffffffffff0
  4060c8:	mov	x9, sp
  4060cc:	subs	x8, x9, x8
  4060d0:	mov	sp, x8
  4060d4:	str	x8, [x19, #72]
  4060d8:	ldr	x8, [x19, #72]
  4060dc:	ldr	x9, [x19, #80]
  4060e0:	add	x8, x8, x9
  4060e4:	mov	w10, #0x0                   	// #0
  4060e8:	strb	w10, [x8]
  4060ec:	ldr	x8, [x19, #72]
  4060f0:	ldr	x1, [x19, #88]
  4060f4:	ldr	x2, [x19, #80]
  4060f8:	mov	x0, x8
  4060fc:	str	x8, [x19, #8]
  406100:	bl	401c28 <memcpy@plt>
  406104:	ldr	x8, [x19, #8]
  406108:	str	x8, [x19, #64]
  40610c:	ldr	x9, [x19, #64]
  406110:	stur	x9, [x29, #-104]
  406114:	ldur	x0, [x29, #-16]
  406118:	ldur	x1, [x29, #-96]
  40611c:	ldur	x2, [x29, #-104]
  406120:	bl	405d24 <network_set_dhcp_type>
  406124:	stur	w0, [x29, #-128]
  406128:	ldur	w8, [x29, #-128]
  40612c:	cmp	w8, #0x0
  406130:	cset	w8, ge  // ge = tcont
  406134:	tbnz	w8, #0, 406144 <parse_cmdline_ip_address+0x378>
  406138:	ldur	w8, [x29, #-128]
  40613c:	stur	w8, [x29, #-4]
  406140:	b	406380 <parse_cmdline_ip_address+0x5b4>
  406144:	ldur	x0, [x29, #-16]
  406148:	ldur	x1, [x29, #-96]
  40614c:	ldur	x2, [x29, #-88]
  406150:	bl	406cfc <network_set_hostname>
  406154:	stur	w0, [x29, #-128]
  406158:	ldur	w8, [x29, #-128]
  40615c:	cmp	w8, #0x0
  406160:	cset	w8, ge  // ge = tcont
  406164:	tbnz	w8, #0, 406174 <parse_cmdline_ip_address+0x3a8>
  406168:	ldur	w8, [x29, #-128]
  40616c:	stur	w8, [x29, #-4]
  406170:	b	406380 <parse_cmdline_ip_address+0x5b4>
  406174:	ldur	x0, [x29, #-16]
  406178:	ldur	x1, [x29, #-96]
  40617c:	ldur	w2, [x29, #-20]
  406180:	ldurb	w3, [x29, #-121]
  406184:	sub	x4, x29, #0x30
  406188:	sub	x5, x29, #0x40
  40618c:	bl	406d5c <network_set_address>
  406190:	stur	w0, [x29, #-128]
  406194:	ldur	w8, [x29, #-128]
  406198:	cmp	w8, #0x0
  40619c:	cset	w8, ge  // ge = tcont
  4061a0:	tbnz	w8, #0, 4061b0 <parse_cmdline_ip_address+0x3e4>
  4061a4:	ldur	w8, [x29, #-128]
  4061a8:	stur	w8, [x29, #-4]
  4061ac:	b	406380 <parse_cmdline_ip_address+0x5b4>
  4061b0:	ldur	x0, [x29, #-16]
  4061b4:	ldur	x1, [x29, #-96]
  4061b8:	ldur	w2, [x29, #-20]
  4061bc:	mov	w8, wzr
  4061c0:	mov	w3, w8
  4061c4:	mov	x9, xzr
  4061c8:	mov	x4, x9
  4061cc:	sub	x5, x29, #0x50
  4061d0:	bl	406df0 <network_set_route>
  4061d4:	stur	w0, [x29, #-128]
  4061d8:	ldur	w8, [x29, #-128]
  4061dc:	cmp	w8, #0x0
  4061e0:	cset	w8, ge  // ge = tcont
  4061e4:	tbnz	w8, #0, 4061f4 <parse_cmdline_ip_address+0x428>
  4061e8:	ldur	w8, [x29, #-128]
  4061ec:	stur	w8, [x29, #-4]
  4061f0:	b	406380 <parse_cmdline_ip_address+0x5b4>
  4061f4:	ldur	x8, [x29, #-120]
  4061f8:	cbnz	x8, 406204 <parse_cmdline_ip_address+0x438>
  4061fc:	stur	wzr, [x29, #-4]
  406200:	b	406380 <parse_cmdline_ip_address+0x5b4>
  406204:	ldur	x0, [x29, #-16]
  406208:	ldur	x1, [x29, #-96]
  40620c:	ldur	x8, [x29, #-120]
  406210:	add	x3, x8, #0x1
  406214:	mov	w9, wzr
  406218:	mov	w2, w9
  40621c:	bl	406ea8 <parse_cmdline_ip_mtu_mac>
  406220:	stur	w0, [x29, #-128]
  406224:	ldur	w9, [x29, #-128]
  406228:	cmp	w9, #0x0
  40622c:	cset	w9, lt  // lt = tstop
  406230:	tbnz	w9, #0, 40623c <parse_cmdline_ip_address+0x470>
  406234:	stur	wzr, [x29, #-4]
  406238:	b	406380 <parse_cmdline_ip_address+0x5b4>
  40623c:	ldur	x8, [x29, #-120]
  406240:	add	x8, x8, #0x1
  406244:	stur	x8, [x29, #-32]
  406248:	ldur	x0, [x29, #-32]
  40624c:	mov	w1, #0x3a                  	// #58
  406250:	bl	401b08 <strchr@plt>
  406254:	stur	x0, [x29, #-120]
  406258:	ldur	x8, [x29, #-120]
  40625c:	cbnz	x8, 406294 <parse_cmdline_ip_address+0x4c8>
  406260:	ldur	x0, [x29, #-16]
  406264:	ldur	x1, [x29, #-96]
  406268:	ldur	x2, [x29, #-32]
  40626c:	bl	406ffc <network_set_dns>
  406270:	stur	w0, [x29, #-128]
  406274:	ldur	w8, [x29, #-128]
  406278:	cmp	w8, #0x0
  40627c:	cset	w8, ge  // ge = tcont
  406280:	tbnz	w8, #0, 406290 <parse_cmdline_ip_address+0x4c4>
  406284:	ldur	w8, [x29, #-128]
  406288:	stur	w8, [x29, #-4]
  40628c:	b	406380 <parse_cmdline_ip_address+0x5b4>
  406290:	b	40637c <parse_cmdline_ip_address+0x5b0>
  406294:	ldur	x8, [x29, #-32]
  406298:	str	x8, [x19, #56]
  40629c:	ldr	x0, [x19, #56]
  4062a0:	ldur	x8, [x29, #-120]
  4062a4:	ldur	x9, [x29, #-32]
  4062a8:	subs	x1, x8, x9
  4062ac:	bl	401c18 <strnlen@plt>
  4062b0:	str	x0, [x19, #48]
  4062b4:	ldr	x8, [x19, #48]
  4062b8:	mov	x9, #0x1                   	// #1
  4062bc:	add	x8, x8, #0x1
  4062c0:	mul	x8, x8, x9
  4062c4:	add	x8, x8, #0xf
  4062c8:	and	x8, x8, #0xfffffffffffffff0
  4062cc:	mov	x9, sp
  4062d0:	subs	x8, x9, x8
  4062d4:	mov	sp, x8
  4062d8:	str	x8, [x19, #40]
  4062dc:	ldr	x8, [x19, #40]
  4062e0:	ldr	x9, [x19, #48]
  4062e4:	add	x8, x8, x9
  4062e8:	mov	w10, #0x0                   	// #0
  4062ec:	strb	w10, [x8]
  4062f0:	ldr	x8, [x19, #40]
  4062f4:	ldr	x1, [x19, #56]
  4062f8:	ldr	x2, [x19, #48]
  4062fc:	mov	x0, x8
  406300:	str	x8, [x19]
  406304:	bl	401c28 <memcpy@plt>
  406308:	ldr	x8, [x19]
  40630c:	str	x8, [x19, #32]
  406310:	ldr	x9, [x19, #32]
  406314:	stur	x9, [x29, #-112]
  406318:	ldur	x0, [x29, #-16]
  40631c:	ldur	x1, [x29, #-96]
  406320:	ldur	x2, [x29, #-112]
  406324:	bl	406ffc <network_set_dns>
  406328:	stur	w0, [x29, #-128]
  40632c:	ldur	w10, [x29, #-128]
  406330:	cmp	w10, #0x0
  406334:	cset	w10, ge  // ge = tcont
  406338:	tbnz	w10, #0, 406348 <parse_cmdline_ip_address+0x57c>
  40633c:	ldur	w8, [x29, #-128]
  406340:	stur	w8, [x29, #-4]
  406344:	b	406380 <parse_cmdline_ip_address+0x5b4>
  406348:	ldur	x0, [x29, #-16]
  40634c:	ldur	x1, [x29, #-96]
  406350:	ldur	x8, [x29, #-120]
  406354:	add	x2, x8, #0x1
  406358:	bl	406ffc <network_set_dns>
  40635c:	stur	w0, [x29, #-128]
  406360:	ldur	w9, [x29, #-128]
  406364:	cmp	w9, #0x0
  406368:	cset	w9, ge  // ge = tcont
  40636c:	tbnz	w9, #0, 40637c <parse_cmdline_ip_address+0x5b0>
  406370:	ldur	w8, [x29, #-128]
  406374:	stur	w8, [x29, #-4]
  406378:	b	406380 <parse_cmdline_ip_address+0x5b4>
  40637c:	stur	wzr, [x29, #-4]
  406380:	ldur	w0, [x29, #-4]
  406384:	mov	sp, x29
  406388:	ldp	x28, x19, [sp, #16]
  40638c:	ldp	x29, x30, [sp], #32
  406390:	ret

0000000000406394 <parse_cmdline_ip_interface>:
  406394:	stp	x29, x30, [sp, #-16]!
  406398:	mov	x29, sp
  40639c:	sub	sp, sp, #0x90
  4063a0:	mov	w8, #0x3a                  	// #58
  4063a4:	stur	x0, [x29, #-16]
  4063a8:	stur	x1, [x29, #-24]
  4063ac:	ldur	x0, [x29, #-24]
  4063b0:	mov	w1, w8
  4063b4:	bl	401b08 <strchr@plt>
  4063b8:	stur	x0, [x29, #-48]
  4063bc:	ldur	x9, [x29, #-48]
  4063c0:	cbnz	x9, 4063d0 <parse_cmdline_ip_interface+0x3c>
  4063c4:	mov	w8, #0xffffffea            	// #-22
  4063c8:	stur	w8, [x29, #-4]
  4063cc:	b	406568 <parse_cmdline_ip_interface+0x1d4>
  4063d0:	ldur	x8, [x29, #-24]
  4063d4:	stur	x8, [x29, #-64]
  4063d8:	ldur	x0, [x29, #-64]
  4063dc:	ldur	x8, [x29, #-48]
  4063e0:	ldur	x9, [x29, #-24]
  4063e4:	subs	x1, x8, x9
  4063e8:	bl	401c18 <strnlen@plt>
  4063ec:	stur	x0, [x29, #-72]
  4063f0:	ldur	x8, [x29, #-72]
  4063f4:	mov	x9, #0x1                   	// #1
  4063f8:	add	x8, x8, #0x1
  4063fc:	mul	x8, x8, x9
  406400:	add	x8, x8, #0xf
  406404:	and	x8, x8, #0xfffffffffffffff0
  406408:	mov	x9, sp
  40640c:	subs	x8, x9, x8
  406410:	mov	sp, x8
  406414:	stur	x8, [x29, #-80]
  406418:	ldur	x8, [x29, #-80]
  40641c:	ldur	x9, [x29, #-72]
  406420:	add	x8, x8, x9
  406424:	mov	w10, #0x0                   	// #0
  406428:	strb	w10, [x8]
  40642c:	ldur	x8, [x29, #-80]
  406430:	ldur	x1, [x29, #-64]
  406434:	ldur	x2, [x29, #-72]
  406438:	mov	x0, x8
  40643c:	stur	x8, [x29, #-128]
  406440:	bl	401c28 <memcpy@plt>
  406444:	ldur	x8, [x29, #-128]
  406448:	stur	x8, [x29, #-88]
  40644c:	ldur	x9, [x29, #-88]
  406450:	stur	x9, [x29, #-32]
  406454:	ldur	x9, [x29, #-48]
  406458:	add	x9, x9, #0x1
  40645c:	stur	x9, [x29, #-24]
  406460:	ldur	x0, [x29, #-24]
  406464:	mov	w1, #0x3a                  	// #58
  406468:	bl	401b08 <strchr@plt>
  40646c:	stur	x0, [x29, #-48]
  406470:	ldur	x8, [x29, #-48]
  406474:	cbnz	x8, 406484 <parse_cmdline_ip_interface+0xf0>
  406478:	ldur	x8, [x29, #-24]
  40647c:	stur	x8, [x29, #-40]
  406480:	b	406508 <parse_cmdline_ip_interface+0x174>
  406484:	ldur	x8, [x29, #-24]
  406488:	stur	x8, [x29, #-96]
  40648c:	ldur	x0, [x29, #-96]
  406490:	ldur	x8, [x29, #-48]
  406494:	ldur	x9, [x29, #-24]
  406498:	subs	x1, x8, x9
  40649c:	bl	401c18 <strnlen@plt>
  4064a0:	stur	x0, [x29, #-104]
  4064a4:	ldur	x8, [x29, #-104]
  4064a8:	mov	x9, #0x1                   	// #1
  4064ac:	add	x8, x8, #0x1
  4064b0:	mul	x8, x8, x9
  4064b4:	add	x8, x8, #0xf
  4064b8:	and	x8, x8, #0xfffffffffffffff0
  4064bc:	mov	x9, sp
  4064c0:	subs	x8, x9, x8
  4064c4:	mov	sp, x8
  4064c8:	stur	x8, [x29, #-112]
  4064cc:	ldur	x8, [x29, #-112]
  4064d0:	ldur	x9, [x29, #-104]
  4064d4:	add	x8, x8, x9
  4064d8:	mov	w10, #0x0                   	// #0
  4064dc:	strb	w10, [x8]
  4064e0:	ldur	x8, [x29, #-112]
  4064e4:	ldur	x1, [x29, #-96]
  4064e8:	ldur	x2, [x29, #-104]
  4064ec:	mov	x0, x8
  4064f0:	stur	x8, [x29, #-136]
  4064f4:	bl	401c28 <memcpy@plt>
  4064f8:	ldur	x8, [x29, #-136]
  4064fc:	stur	x8, [x29, #-120]
  406500:	ldur	x9, [x29, #-120]
  406504:	stur	x9, [x29, #-40]
  406508:	ldur	x0, [x29, #-16]
  40650c:	ldur	x1, [x29, #-32]
  406510:	ldur	x2, [x29, #-40]
  406514:	bl	405d24 <network_set_dhcp_type>
  406518:	stur	w0, [x29, #-52]
  40651c:	ldur	w8, [x29, #-52]
  406520:	cmp	w8, #0x0
  406524:	cset	w8, ge  // ge = tcont
  406528:	tbnz	w8, #0, 406538 <parse_cmdline_ip_interface+0x1a4>
  40652c:	ldur	w8, [x29, #-52]
  406530:	stur	w8, [x29, #-4]
  406534:	b	406568 <parse_cmdline_ip_interface+0x1d4>
  406538:	ldur	x8, [x29, #-48]
  40653c:	cbnz	x8, 406548 <parse_cmdline_ip_interface+0x1b4>
  406540:	stur	wzr, [x29, #-4]
  406544:	b	406568 <parse_cmdline_ip_interface+0x1d4>
  406548:	ldur	x0, [x29, #-16]
  40654c:	ldur	x1, [x29, #-32]
  406550:	ldur	x8, [x29, #-48]
  406554:	add	x3, x8, #0x1
  406558:	mov	w9, wzr
  40655c:	mov	w2, w9
  406560:	bl	406ea8 <parse_cmdline_ip_mtu_mac>
  406564:	stur	w0, [x29, #-4]
  406568:	ldur	w0, [x29, #-4]
  40656c:	mov	sp, x29
  406570:	ldp	x29, x30, [sp], #16
  406574:	ret

0000000000406578 <dracut_dhcp_type_from_string>:
  406578:	sub	sp, sp, #0x20
  40657c:	stp	x29, x30, [sp, #16]
  406580:	add	x29, sp, #0x10
  406584:	adrp	x8, 408000 <_fini+0x1d4>
  406588:	add	x8, x8, #0x828
  40658c:	mov	x1, #0x9                   	// #9
  406590:	str	x0, [sp, #8]
  406594:	ldr	x2, [sp, #8]
  406598:	mov	x0, x8
  40659c:	bl	401d88 <string_table_lookup@plt>
  4065a0:	ldp	x29, x30, [sp, #16]
  4065a4:	add	sp, sp, #0x20
  4065a8:	ret

00000000004065ac <network_new>:
  4065ac:	sub	sp, sp, #0xe0
  4065b0:	stp	x29, x30, [sp, #208]
  4065b4:	add	x29, sp, #0xd0
  4065b8:	mov	x8, xzr
  4065bc:	adrp	x9, 408000 <_fini+0x1d4>
  4065c0:	add	x9, x9, #0x1d8
  4065c4:	add	x9, x9, #0x3
  4065c8:	stur	x0, [x29, #-16]
  4065cc:	stur	x1, [x29, #-24]
  4065d0:	stur	x2, [x29, #-32]
  4065d4:	stur	x8, [x29, #-40]
  4065d8:	stur	x8, [x29, #-48]
  4065dc:	str	x9, [sp, #24]
  4065e0:	ldur	x8, [x29, #-16]
  4065e4:	cmp	x8, #0x0
  4065e8:	cset	w9, ne  // ne = any
  4065ec:	mov	w10, #0x1                   	// #1
  4065f0:	eor	w9, w9, #0x1
  4065f4:	eor	w9, w9, w10
  4065f8:	eor	w9, w9, w10
  4065fc:	and	w9, w9, #0x1
  406600:	mov	w0, w9
  406604:	sxtw	x8, w0
  406608:	cbz	x8, 406630 <network_new+0x84>
  40660c:	mov	w8, wzr
  406610:	mov	w0, w8
  406614:	adrp	x1, 408000 <_fini+0x1d4>
  406618:	add	x1, x1, #0x27f
  40661c:	ldr	x2, [sp, #24]
  406620:	mov	w3, #0xae                  	// #174
  406624:	adrp	x4, 408000 <_fini+0x1d4>
  406628:	add	x4, x4, #0x530
  40662c:	bl	401b18 <log_assert_failed_realm@plt>
  406630:	ldur	x0, [x29, #-24]
  406634:	bl	404ee0 <isempty>
  406638:	tbnz	w0, #0, 40665c <network_new+0xb0>
  40663c:	ldur	x0, [x29, #-24]
  406640:	bl	401d98 <ifname_valid@plt>
  406644:	tbnz	w0, #0, 40665c <network_new+0xb0>
  406648:	mov	w8, #0xffffffea            	// #-22
  40664c:	stur	w8, [x29, #-4]
  406650:	mov	w8, #0x1                   	// #1
  406654:	stur	w8, [x29, #-56]
  406658:	b	4067c8 <network_new+0x21c>
  40665c:	ldur	x0, [x29, #-24]
  406660:	bl	401ae8 <strdup@plt>
  406664:	stur	x0, [x29, #-48]
  406668:	ldur	x8, [x29, #-48]
  40666c:	cbnz	x8, 406684 <network_new+0xd8>
  406670:	mov	w8, #0xfffffff4            	// #-12
  406674:	stur	w8, [x29, #-4]
  406678:	mov	w8, #0x1                   	// #1
  40667c:	stur	w8, [x29, #-56]
  406680:	b	4067c8 <network_new+0x21c>
  406684:	mov	x0, #0x58                  	// #88
  406688:	mov	x1, #0x1                   	// #1
  40668c:	bl	40681c <malloc_multiply>
  406690:	stur	x0, [x29, #-40]
  406694:	ldur	x8, [x29, #-40]
  406698:	cbnz	x8, 4066b0 <network_new+0x104>
  40669c:	mov	w8, #0xfffffff4            	// #-12
  4066a0:	stur	w8, [x29, #-4]
  4066a4:	mov	w8, #0x1                   	// #1
  4066a8:	stur	w8, [x29, #-56]
  4066ac:	b	4067c8 <network_new+0x21c>
  4066b0:	ldur	x0, [x29, #-40]
  4066b4:	add	x8, sp, #0x40
  4066b8:	str	x0, [sp, #16]
  4066bc:	mov	x0, x8
  4066c0:	mov	w9, wzr
  4066c4:	mov	w1, w9
  4066c8:	mov	x10, #0x58                  	// #88
  4066cc:	mov	x2, x10
  4066d0:	str	x8, [sp, #8]
  4066d4:	str	x10, [sp]
  4066d8:	bl	401da8 <memset@plt>
  4066dc:	ldur	x8, [x29, #-48]
  4066e0:	str	x8, [sp, #56]
  4066e4:	mov	x8, xzr
  4066e8:	stur	x8, [x29, #-48]
  4066ec:	ldr	x8, [sp, #56]
  4066f0:	str	x8, [sp, #48]
  4066f4:	ldr	x8, [sp, #48]
  4066f8:	str	x8, [sp, #64]
  4066fc:	mov	w9, #0xffffffff            	// #-1
  406700:	str	w9, [sp, #84]
  406704:	str	w9, [sp, #128]
  406708:	ldr	x0, [sp, #16]
  40670c:	ldr	x1, [sp, #8]
  406710:	ldr	x2, [sp]
  406714:	bl	401c28 <memcpy@plt>
  406718:	ldur	x0, [x29, #-16]
  40671c:	adrp	x1, 41f000 <__FRAME_END__+0x16648>
  406720:	add	x1, x1, #0xfe0
  406724:	bl	401db8 <internal_hashmap_ensure_allocated@plt>
  406728:	stur	w0, [x29, #-52]
  40672c:	ldur	w9, [x29, #-52]
  406730:	cmp	w9, #0x0
  406734:	cset	w9, ge  // ge = tcont
  406738:	tbnz	w9, #0, 406750 <network_new+0x1a4>
  40673c:	ldur	w8, [x29, #-52]
  406740:	stur	w8, [x29, #-4]
  406744:	mov	w8, #0x1                   	// #1
  406748:	stur	w8, [x29, #-56]
  40674c:	b	4067c8 <network_new+0x21c>
  406750:	ldur	x8, [x29, #-16]
  406754:	ldr	x0, [x8]
  406758:	ldur	x8, [x29, #-40]
  40675c:	ldr	x1, [x8]
  406760:	ldur	x2, [x29, #-40]
  406764:	bl	401dc8 <hashmap_put@plt>
  406768:	stur	w0, [x29, #-52]
  40676c:	ldur	w9, [x29, #-52]
  406770:	cmp	w9, #0x0
  406774:	cset	w9, ge  // ge = tcont
  406778:	tbnz	w9, #0, 406790 <network_new+0x1e4>
  40677c:	ldur	w8, [x29, #-52]
  406780:	stur	w8, [x29, #-4]
  406784:	mov	w8, #0x1                   	// #1
  406788:	stur	w8, [x29, #-56]
  40678c:	b	4067c8 <network_new+0x21c>
  406790:	ldur	x8, [x29, #-32]
  406794:	cbz	x8, 4067a4 <network_new+0x1f8>
  406798:	ldur	x8, [x29, #-40]
  40679c:	ldur	x9, [x29, #-32]
  4067a0:	str	x8, [x9]
  4067a4:	ldur	x8, [x29, #-40]
  4067a8:	str	x8, [sp, #40]
  4067ac:	mov	x8, xzr
  4067b0:	stur	x8, [x29, #-40]
  4067b4:	ldr	x8, [sp, #40]
  4067b8:	str	x8, [sp, #32]
  4067bc:	stur	wzr, [x29, #-4]
  4067c0:	mov	w9, #0x1                   	// #1
  4067c4:	stur	w9, [x29, #-56]
  4067c8:	sub	x0, x29, #0x30
  4067cc:	bl	405734 <freep>
  4067d0:	sub	x0, x29, #0x28
  4067d4:	bl	4067e8 <network_freep>
  4067d8:	ldur	w0, [x29, #-4]
  4067dc:	ldp	x29, x30, [sp, #208]
  4067e0:	add	sp, sp, #0xe0
  4067e4:	ret

00000000004067e8 <network_freep>:
  4067e8:	sub	sp, sp, #0x20
  4067ec:	stp	x29, x30, [sp, #16]
  4067f0:	add	x29, sp, #0x10
  4067f4:	str	x0, [sp, #8]
  4067f8:	ldr	x8, [sp, #8]
  4067fc:	ldr	x8, [x8]
  406800:	cbz	x8, 406810 <network_freep+0x28>
  406804:	ldr	x8, [sp, #8]
  406808:	ldr	x0, [x8]
  40680c:	bl	40489c <network_free>
  406810:	ldp	x29, x30, [sp, #16]
  406814:	add	sp, sp, #0x20
  406818:	ret

000000000040681c <malloc_multiply>:
  40681c:	sub	sp, sp, #0x40
  406820:	stp	x29, x30, [sp, #48]
  406824:	add	x29, sp, #0x30
  406828:	stur	x0, [x29, #-16]
  40682c:	str	x1, [sp, #24]
  406830:	ldur	x0, [x29, #-16]
  406834:	ldr	x1, [sp, #24]
  406838:	bl	406898 <size_multiply_overflow>
  40683c:	tbnz	w0, #0, 406844 <malloc_multiply+0x28>
  406840:	b	406850 <malloc_multiply+0x34>
  406844:	mov	x8, xzr
  406848:	stur	x8, [x29, #-8]
  40684c:	b	406888 <malloc_multiply+0x6c>
  406850:	ldur	x8, [x29, #-16]
  406854:	ldr	x9, [sp, #24]
  406858:	mul	x8, x8, x9
  40685c:	str	x8, [sp, #16]
  406860:	cbz	x8, 406870 <malloc_multiply+0x54>
  406864:	ldr	x8, [sp, #16]
  406868:	str	x8, [sp, #8]
  40686c:	b	406878 <malloc_multiply+0x5c>
  406870:	mov	x8, #0x1                   	// #1
  406874:	str	x8, [sp, #8]
  406878:	ldr	x8, [sp, #8]
  40687c:	mov	x0, x8
  406880:	bl	401dd8 <malloc@plt>
  406884:	stur	x0, [x29, #-8]
  406888:	ldur	x0, [x29, #-8]
  40688c:	ldp	x29, x30, [sp, #48]
  406890:	add	sp, sp, #0x40
  406894:	ret

0000000000406898 <size_multiply_overflow>:
  406898:	sub	sp, sp, #0x20
  40689c:	str	x0, [sp, #24]
  4068a0:	str	x1, [sp, #16]
  4068a4:	ldr	x8, [sp, #16]
  4068a8:	mov	w9, #0x0                   	// #0
  4068ac:	str	w9, [sp, #12]
  4068b0:	cbz	x8, 4068d0 <size_multiply_overflow+0x38>
  4068b4:	ldr	x8, [sp, #24]
  4068b8:	ldr	x9, [sp, #16]
  4068bc:	mov	x10, #0xffffffffffffffff    	// #-1
  4068c0:	udiv	x9, x10, x9
  4068c4:	cmp	x8, x9
  4068c8:	cset	w11, hi  // hi = pmore
  4068cc:	str	w11, [sp, #12]
  4068d0:	ldr	w8, [sp, #12]
  4068d4:	mov	w9, #0x1                   	// #1
  4068d8:	eor	w8, w8, #0x1
  4068dc:	eor	w8, w8, w9
  4068e0:	and	w8, w8, #0x1
  4068e4:	mov	w0, w8
  4068e8:	sxtw	x10, w0
  4068ec:	cmp	x10, #0x0
  4068f0:	cset	w8, ne  // ne = any
  4068f4:	and	w0, w8, #0x1
  4068f8:	add	sp, sp, #0x20
  4068fc:	ret

0000000000406900 <parse_ip_address_one>:
  406900:	stp	x29, x30, [sp, #-16]!
  406904:	mov	x29, sp
  406908:	sub	sp, sp, #0x90
  40690c:	stur	w0, [x29, #-8]
  406910:	stur	x1, [x29, #-16]
  406914:	stur	x2, [x29, #-24]
  406918:	ldur	x8, [x29, #-16]
  40691c:	ldr	x8, [x8]
  406920:	stur	x8, [x29, #-32]
  406924:	ldur	x8, [x29, #-32]
  406928:	ldrb	w9, [x8]
  40692c:	cmp	w9, #0x3a
  406930:	b.ne	40694c <parse_ip_address_one+0x4c>  // b.any
  406934:	ldur	x8, [x29, #-32]
  406938:	add	x8, x8, #0x1
  40693c:	ldur	x9, [x29, #-16]
  406940:	str	x8, [x9]
  406944:	stur	wzr, [x29, #-4]
  406948:	b	406b54 <parse_ip_address_one+0x254>
  40694c:	ldur	w8, [x29, #-8]
  406950:	cmp	w8, #0xa
  406954:	b.ne	406a5c <parse_ip_address_one+0x15c>  // b.any
  406958:	ldur	x8, [x29, #-32]
  40695c:	ldrb	w9, [x8]
  406960:	cmp	w9, #0x5b
  406964:	b.eq	406974 <parse_ip_address_one+0x74>  // b.none
  406968:	mov	w8, #0xffffffea            	// #-22
  40696c:	stur	w8, [x29, #-4]
  406970:	b	406b54 <parse_ip_address_one+0x254>
  406974:	ldur	x8, [x29, #-32]
  406978:	add	x0, x8, #0x1
  40697c:	mov	w1, #0x5d                  	// #93
  406980:	bl	401b08 <strchr@plt>
  406984:	stur	x0, [x29, #-40]
  406988:	ldur	x8, [x29, #-40]
  40698c:	cbnz	x8, 40699c <parse_ip_address_one+0x9c>
  406990:	mov	w8, #0xffffffea            	// #-22
  406994:	stur	w8, [x29, #-4]
  406998:	b	406b54 <parse_ip_address_one+0x254>
  40699c:	ldur	x8, [x29, #-40]
  4069a0:	ldrb	w9, [x8, #1]
  4069a4:	cmp	w9, #0x3a
  4069a8:	b.eq	4069b8 <parse_ip_address_one+0xb8>  // b.none
  4069ac:	mov	w8, #0xffffffea            	// #-22
  4069b0:	stur	w8, [x29, #-4]
  4069b4:	b	406b54 <parse_ip_address_one+0x254>
  4069b8:	ldur	x8, [x29, #-32]
  4069bc:	add	x8, x8, #0x1
  4069c0:	stur	x8, [x29, #-64]
  4069c4:	ldur	x0, [x29, #-64]
  4069c8:	ldur	x8, [x29, #-40]
  4069cc:	ldur	x9, [x29, #-32]
  4069d0:	subs	x8, x8, x9
  4069d4:	mov	x9, #0x1                   	// #1
  4069d8:	subs	x1, x8, #0x1
  4069dc:	stur	x9, [x29, #-128]
  4069e0:	bl	401c18 <strnlen@plt>
  4069e4:	stur	x0, [x29, #-72]
  4069e8:	ldur	x8, [x29, #-72]
  4069ec:	add	x8, x8, #0x1
  4069f0:	ldur	x9, [x29, #-128]
  4069f4:	mul	x8, x8, x9
  4069f8:	add	x8, x8, #0xf
  4069fc:	and	x8, x8, #0xfffffffffffffff0
  406a00:	mov	x10, sp
  406a04:	subs	x8, x10, x8
  406a08:	mov	sp, x8
  406a0c:	stur	x8, [x29, #-80]
  406a10:	ldur	x8, [x29, #-80]
  406a14:	ldur	x10, [x29, #-72]
  406a18:	add	x8, x8, x10
  406a1c:	mov	w11, #0x0                   	// #0
  406a20:	strb	w11, [x8]
  406a24:	ldur	x8, [x29, #-80]
  406a28:	ldur	x1, [x29, #-64]
  406a2c:	ldur	x2, [x29, #-72]
  406a30:	mov	x0, x8
  406a34:	stur	x8, [x29, #-136]
  406a38:	bl	401c28 <memcpy@plt>
  406a3c:	ldur	x8, [x29, #-136]
  406a40:	stur	x8, [x29, #-88]
  406a44:	ldur	x9, [x29, #-88]
  406a48:	stur	x9, [x29, #-48]
  406a4c:	ldur	x9, [x29, #-40]
  406a50:	add	x9, x9, #0x2
  406a54:	stur	x9, [x29, #-32]
  406a58:	b	406b10 <parse_ip_address_one+0x210>
  406a5c:	ldur	x0, [x29, #-32]
  406a60:	mov	w1, #0x3a                  	// #58
  406a64:	bl	401b08 <strchr@plt>
  406a68:	stur	x0, [x29, #-40]
  406a6c:	ldur	x8, [x29, #-40]
  406a70:	cbnz	x8, 406a80 <parse_ip_address_one+0x180>
  406a74:	mov	w8, #0xffffffea            	// #-22
  406a78:	stur	w8, [x29, #-4]
  406a7c:	b	406b54 <parse_ip_address_one+0x254>
  406a80:	ldur	x8, [x29, #-32]
  406a84:	stur	x8, [x29, #-96]
  406a88:	ldur	x0, [x29, #-96]
  406a8c:	ldur	x8, [x29, #-40]
  406a90:	ldur	x9, [x29, #-32]
  406a94:	subs	x1, x8, x9
  406a98:	bl	401c18 <strnlen@plt>
  406a9c:	stur	x0, [x29, #-104]
  406aa0:	ldur	x8, [x29, #-104]
  406aa4:	mov	x9, #0x1                   	// #1
  406aa8:	add	x8, x8, #0x1
  406aac:	mul	x8, x8, x9
  406ab0:	add	x8, x8, #0xf
  406ab4:	and	x8, x8, #0xfffffffffffffff0
  406ab8:	mov	x9, sp
  406abc:	subs	x8, x9, x8
  406ac0:	mov	sp, x8
  406ac4:	stur	x8, [x29, #-112]
  406ac8:	ldur	x8, [x29, #-112]
  406acc:	ldur	x9, [x29, #-104]
  406ad0:	add	x8, x8, x9
  406ad4:	mov	w10, #0x0                   	// #0
  406ad8:	strb	w10, [x8]
  406adc:	ldur	x8, [x29, #-112]
  406ae0:	ldur	x1, [x29, #-96]
  406ae4:	ldur	x2, [x29, #-104]
  406ae8:	mov	x0, x8
  406aec:	stur	x8, [x29, #-144]
  406af0:	bl	401c28 <memcpy@plt>
  406af4:	ldur	x8, [x29, #-144]
  406af8:	stur	x8, [x29, #-120]
  406afc:	ldur	x9, [x29, #-120]
  406b00:	stur	x9, [x29, #-48]
  406b04:	ldur	x9, [x29, #-40]
  406b08:	add	x9, x9, #0x1
  406b0c:	stur	x9, [x29, #-32]
  406b10:	ldur	w0, [x29, #-8]
  406b14:	ldur	x1, [x29, #-48]
  406b18:	ldur	x2, [x29, #-24]
  406b1c:	bl	401de8 <in_addr_from_string@plt>
  406b20:	stur	w0, [x29, #-52]
  406b24:	ldur	w8, [x29, #-52]
  406b28:	cmp	w8, #0x0
  406b2c:	cset	w8, ge  // ge = tcont
  406b30:	tbnz	w8, #0, 406b40 <parse_ip_address_one+0x240>
  406b34:	ldur	w8, [x29, #-52]
  406b38:	stur	w8, [x29, #-4]
  406b3c:	b	406b54 <parse_ip_address_one+0x254>
  406b40:	ldur	x8, [x29, #-32]
  406b44:	ldur	x9, [x29, #-16]
  406b48:	str	x8, [x9]
  406b4c:	mov	w10, #0x1                   	// #1
  406b50:	stur	w10, [x29, #-4]
  406b54:	ldur	w0, [x29, #-4]
  406b58:	mov	sp, x29
  406b5c:	ldp	x29, x30, [sp], #16
  406b60:	ret

0000000000406b64 <parse_netmask_or_prefixlen>:
  406b64:	stp	x29, x30, [sp, #-16]!
  406b68:	mov	x29, sp
  406b6c:	sub	sp, sp, #0x70
  406b70:	sub	x8, x29, #0x28
  406b74:	stur	w0, [x29, #-8]
  406b78:	stur	x1, [x29, #-16]
  406b7c:	stur	x2, [x29, #-24]
  406b80:	ldur	w0, [x29, #-8]
  406b84:	ldur	x1, [x29, #-16]
  406b88:	mov	x2, x8
  406b8c:	bl	406900 <parse_ip_address_one>
  406b90:	stur	w0, [x29, #-60]
  406b94:	ldur	w9, [x29, #-60]
  406b98:	cmp	w9, #0x0
  406b9c:	cset	w9, le
  406ba0:	tbnz	w9, #0, 406bd0 <parse_netmask_or_prefixlen+0x6c>
  406ba4:	ldur	w8, [x29, #-8]
  406ba8:	cmp	w8, #0xa
  406bac:	b.ne	406bbc <parse_netmask_or_prefixlen+0x58>  // b.any
  406bb0:	mov	w8, #0xffffffea            	// #-22
  406bb4:	stur	w8, [x29, #-4]
  406bb8:	b	406cec <parse_netmask_or_prefixlen+0x188>
  406bbc:	sub	x0, x29, #0x28
  406bc0:	bl	401df8 <in4_addr_netmask_to_prefixlen@plt>
  406bc4:	ldur	x8, [x29, #-24]
  406bc8:	strb	w0, [x8]
  406bcc:	b	406ce8 <parse_netmask_or_prefixlen+0x184>
  406bd0:	ldur	w8, [x29, #-60]
  406bd4:	cbnz	w8, 406bf8 <parse_netmask_or_prefixlen+0x94>
  406bd8:	ldur	w8, [x29, #-8]
  406bdc:	mov	w9, #0x20                  	// #32
  406be0:	mov	w10, #0x80                  	// #128
  406be4:	cmp	w8, #0xa
  406be8:	csel	w8, w10, w9, eq  // eq = none
  406bec:	ldur	x11, [x29, #-24]
  406bf0:	strb	w8, [x11]
  406bf4:	b	406ce8 <parse_netmask_or_prefixlen+0x184>
  406bf8:	ldur	x8, [x29, #-16]
  406bfc:	ldr	x0, [x8]
  406c00:	mov	w1, #0x3a                  	// #58
  406c04:	bl	401b08 <strchr@plt>
  406c08:	stur	x0, [x29, #-48]
  406c0c:	ldur	x8, [x29, #-48]
  406c10:	cbnz	x8, 406c20 <parse_netmask_or_prefixlen+0xbc>
  406c14:	mov	w8, #0xffffffea            	// #-22
  406c18:	stur	w8, [x29, #-4]
  406c1c:	b	406cec <parse_netmask_or_prefixlen+0x188>
  406c20:	ldur	x8, [x29, #-16]
  406c24:	ldr	x8, [x8]
  406c28:	stur	x8, [x29, #-72]
  406c2c:	ldur	x0, [x29, #-72]
  406c30:	ldur	x8, [x29, #-48]
  406c34:	ldur	x9, [x29, #-16]
  406c38:	ldr	x9, [x9]
  406c3c:	subs	x1, x8, x9
  406c40:	bl	401c18 <strnlen@plt>
  406c44:	stur	x0, [x29, #-80]
  406c48:	ldur	x8, [x29, #-80]
  406c4c:	mov	x9, #0x1                   	// #1
  406c50:	add	x8, x8, #0x1
  406c54:	mul	x8, x8, x9
  406c58:	add	x8, x8, #0xf
  406c5c:	and	x8, x8, #0xfffffffffffffff0
  406c60:	mov	x9, sp
  406c64:	subs	x8, x9, x8
  406c68:	mov	sp, x8
  406c6c:	stur	x8, [x29, #-88]
  406c70:	ldur	x8, [x29, #-88]
  406c74:	ldur	x9, [x29, #-80]
  406c78:	add	x8, x8, x9
  406c7c:	mov	w10, #0x0                   	// #0
  406c80:	strb	w10, [x8]
  406c84:	ldur	x8, [x29, #-88]
  406c88:	ldur	x1, [x29, #-72]
  406c8c:	ldur	x2, [x29, #-80]
  406c90:	mov	x0, x8
  406c94:	stur	x8, [x29, #-104]
  406c98:	bl	401c28 <memcpy@plt>
  406c9c:	ldur	x8, [x29, #-104]
  406ca0:	stur	x8, [x29, #-96]
  406ca4:	ldur	x9, [x29, #-96]
  406ca8:	stur	x9, [x29, #-56]
  406cac:	ldur	x0, [x29, #-56]
  406cb0:	ldur	x1, [x29, #-24]
  406cb4:	bl	401e08 <safe_atou8@plt>
  406cb8:	stur	w0, [x29, #-60]
  406cbc:	ldur	w10, [x29, #-60]
  406cc0:	cmp	w10, #0x0
  406cc4:	cset	w10, ge  // ge = tcont
  406cc8:	tbnz	w10, #0, 406cd8 <parse_netmask_or_prefixlen+0x174>
  406ccc:	ldur	w8, [x29, #-60]
  406cd0:	stur	w8, [x29, #-4]
  406cd4:	b	406cec <parse_netmask_or_prefixlen+0x188>
  406cd8:	ldur	x8, [x29, #-48]
  406cdc:	add	x8, x8, #0x1
  406ce0:	ldur	x9, [x29, #-16]
  406ce4:	str	x8, [x9]
  406ce8:	stur	wzr, [x29, #-4]
  406cec:	ldur	w0, [x29, #-4]
  406cf0:	mov	sp, x29
  406cf4:	ldp	x29, x30, [sp], #16
  406cf8:	ret

0000000000406cfc <network_set_hostname>:
  406cfc:	sub	sp, sp, #0x40
  406d00:	stp	x29, x30, [sp, #48]
  406d04:	add	x29, sp, #0x30
  406d08:	stur	x0, [x29, #-16]
  406d0c:	str	x1, [sp, #24]
  406d10:	str	x2, [sp, #16]
  406d14:	ldur	x0, [x29, #-16]
  406d18:	ldr	x1, [sp, #24]
  406d1c:	bl	4031dc <network_get>
  406d20:	str	x0, [sp, #8]
  406d24:	ldr	x8, [sp, #8]
  406d28:	cbnz	x8, 406d38 <network_set_hostname+0x3c>
  406d2c:	mov	w8, #0xffffffed            	// #-19
  406d30:	stur	w8, [x29, #-4]
  406d34:	b	406d4c <network_set_hostname+0x50>
  406d38:	ldr	x8, [sp, #8]
  406d3c:	add	x0, x8, #0x38
  406d40:	ldr	x1, [sp, #16]
  406d44:	bl	401e18 <free_and_strdup@plt>
  406d48:	stur	w0, [x29, #-4]
  406d4c:	ldur	w0, [x29, #-4]
  406d50:	ldp	x29, x30, [sp, #48]
  406d54:	add	sp, sp, #0x40
  406d58:	ret

0000000000406d5c <network_set_address>:
  406d5c:	sub	sp, sp, #0x50
  406d60:	stp	x29, x30, [sp, #64]
  406d64:	add	x29, sp, #0x40
  406d68:	stur	x0, [x29, #-16]
  406d6c:	stur	x1, [x29, #-24]
  406d70:	stur	w2, [x29, #-28]
  406d74:	sturb	w3, [x29, #-29]
  406d78:	str	x4, [sp, #24]
  406d7c:	str	x5, [sp, #16]
  406d80:	ldur	w0, [x29, #-28]
  406d84:	ldr	x1, [sp, #24]
  406d88:	bl	401d28 <in_addr_is_null@plt>
  406d8c:	cbz	w0, 406d98 <network_set_address+0x3c>
  406d90:	stur	wzr, [x29, #-4]
  406d94:	b	406de0 <network_set_address+0x84>
  406d98:	ldur	x0, [x29, #-16]
  406d9c:	ldur	x1, [x29, #-24]
  406da0:	bl	4031dc <network_get>
  406da4:	str	x0, [sp, #8]
  406da8:	ldr	x8, [sp, #8]
  406dac:	cbnz	x8, 406dbc <network_set_address+0x60>
  406db0:	mov	w8, #0xffffffed            	// #-19
  406db4:	stur	w8, [x29, #-4]
  406db8:	b	406de0 <network_set_address+0x84>
  406dbc:	ldr	x0, [sp, #8]
  406dc0:	ldur	w1, [x29, #-28]
  406dc4:	ldurb	w2, [x29, #-29]
  406dc8:	ldr	x3, [sp, #24]
  406dcc:	ldr	x4, [sp, #16]
  406dd0:	mov	x8, xzr
  406dd4:	mov	x5, x8
  406dd8:	bl	4070b8 <address_new>
  406ddc:	stur	w0, [x29, #-4]
  406de0:	ldur	w0, [x29, #-4]
  406de4:	ldp	x29, x30, [sp, #64]
  406de8:	add	sp, sp, #0x50
  406dec:	ret

0000000000406df0 <network_set_route>:
  406df0:	sub	sp, sp, #0x50
  406df4:	stp	x29, x30, [sp, #64]
  406df8:	add	x29, sp, #0x40
  406dfc:	stur	x0, [x29, #-16]
  406e00:	stur	x1, [x29, #-24]
  406e04:	stur	w2, [x29, #-28]
  406e08:	sturb	w3, [x29, #-29]
  406e0c:	str	x4, [sp, #24]
  406e10:	str	x5, [sp, #16]
  406e14:	ldur	w0, [x29, #-28]
  406e18:	ldr	x1, [sp, #16]
  406e1c:	bl	401d28 <in_addr_is_null@plt>
  406e20:	cbz	w0, 406e2c <network_set_route+0x3c>
  406e24:	stur	wzr, [x29, #-4]
  406e28:	b	406e98 <network_set_route+0xa8>
  406e2c:	ldur	x0, [x29, #-16]
  406e30:	ldur	x1, [x29, #-24]
  406e34:	bl	4031dc <network_get>
  406e38:	str	x0, [sp, #8]
  406e3c:	ldr	x8, [sp, #8]
  406e40:	cbnz	x8, 406e74 <network_set_route+0x84>
  406e44:	ldur	x0, [x29, #-16]
  406e48:	ldur	x1, [x29, #-24]
  406e4c:	add	x2, sp, #0x8
  406e50:	bl	4065ac <network_new>
  406e54:	str	w0, [sp, #4]
  406e58:	ldr	w8, [sp, #4]
  406e5c:	cmp	w8, #0x0
  406e60:	cset	w8, ge  // ge = tcont
  406e64:	tbnz	w8, #0, 406e74 <network_set_route+0x84>
  406e68:	ldr	w8, [sp, #4]
  406e6c:	stur	w8, [x29, #-4]
  406e70:	b	406e98 <network_set_route+0xa8>
  406e74:	ldr	x0, [sp, #8]
  406e78:	ldur	w1, [x29, #-28]
  406e7c:	ldurb	w2, [x29, #-29]
  406e80:	ldr	x3, [sp, #24]
  406e84:	ldr	x4, [sp, #16]
  406e88:	mov	x8, xzr
  406e8c:	mov	x5, x8
  406e90:	bl	40467c <route_new>
  406e94:	stur	w0, [x29, #-4]
  406e98:	ldur	w0, [x29, #-4]
  406e9c:	ldp	x29, x30, [sp, #64]
  406ea0:	add	sp, sp, #0x50
  406ea4:	ret

0000000000406ea8 <parse_cmdline_ip_mtu_mac>:
  406ea8:	stp	x29, x30, [sp, #-16]!
  406eac:	mov	x29, sp
  406eb0:	sub	sp, sp, #0x70
  406eb4:	mov	w8, #0x3a                  	// #58
  406eb8:	stur	x0, [x29, #-16]
  406ebc:	stur	x1, [x29, #-24]
  406ec0:	stur	w2, [x29, #-28]
  406ec4:	stur	x3, [x29, #-40]
  406ec8:	ldur	x0, [x29, #-40]
  406ecc:	mov	w1, w8
  406ed0:	bl	401b08 <strchr@plt>
  406ed4:	stur	x0, [x29, #-56]
  406ed8:	ldur	x9, [x29, #-56]
  406edc:	cbnz	x9, 406eec <parse_cmdline_ip_mtu_mac+0x44>
  406ee0:	ldur	x8, [x29, #-40]
  406ee4:	stur	x8, [x29, #-48]
  406ee8:	b	406f70 <parse_cmdline_ip_mtu_mac+0xc8>
  406eec:	ldur	x8, [x29, #-40]
  406ef0:	stur	x8, [x29, #-72]
  406ef4:	ldur	x0, [x29, #-72]
  406ef8:	ldur	x8, [x29, #-56]
  406efc:	ldur	x9, [x29, #-40]
  406f00:	subs	x1, x8, x9
  406f04:	bl	401c18 <strnlen@plt>
  406f08:	stur	x0, [x29, #-80]
  406f0c:	ldur	x8, [x29, #-80]
  406f10:	mov	x9, #0x1                   	// #1
  406f14:	add	x8, x8, #0x1
  406f18:	mul	x8, x8, x9
  406f1c:	add	x8, x8, #0xf
  406f20:	and	x8, x8, #0xfffffffffffffff0
  406f24:	mov	x9, sp
  406f28:	subs	x8, x9, x8
  406f2c:	mov	sp, x8
  406f30:	stur	x8, [x29, #-88]
  406f34:	ldur	x8, [x29, #-88]
  406f38:	ldur	x9, [x29, #-80]
  406f3c:	add	x8, x8, x9
  406f40:	mov	w10, #0x0                   	// #0
  406f44:	strb	w10, [x8]
  406f48:	ldur	x8, [x29, #-88]
  406f4c:	ldur	x1, [x29, #-72]
  406f50:	ldur	x2, [x29, #-80]
  406f54:	mov	x0, x8
  406f58:	stur	x8, [x29, #-104]
  406f5c:	bl	401c28 <memcpy@plt>
  406f60:	ldur	x8, [x29, #-104]
  406f64:	stur	x8, [x29, #-96]
  406f68:	ldur	x9, [x29, #-96]
  406f6c:	stur	x9, [x29, #-48]
  406f70:	ldur	x0, [x29, #-16]
  406f74:	ldur	x1, [x29, #-24]
  406f78:	ldur	w2, [x29, #-28]
  406f7c:	ldur	x3, [x29, #-48]
  406f80:	bl	407280 <network_set_mtu>
  406f84:	stur	w0, [x29, #-60]
  406f88:	ldur	w8, [x29, #-60]
  406f8c:	cmp	w8, #0x0
  406f90:	cset	w8, ge  // ge = tcont
  406f94:	tbnz	w8, #0, 406fa4 <parse_cmdline_ip_mtu_mac+0xfc>
  406f98:	ldur	w8, [x29, #-60]
  406f9c:	stur	w8, [x29, #-4]
  406fa0:	b	406fec <parse_cmdline_ip_mtu_mac+0x144>
  406fa4:	ldur	x8, [x29, #-56]
  406fa8:	cbnz	x8, 406fb4 <parse_cmdline_ip_mtu_mac+0x10c>
  406fac:	stur	wzr, [x29, #-4]
  406fb0:	b	406fec <parse_cmdline_ip_mtu_mac+0x144>
  406fb4:	ldur	x0, [x29, #-16]
  406fb8:	ldur	x1, [x29, #-24]
  406fbc:	ldur	x8, [x29, #-56]
  406fc0:	add	x2, x8, #0x1
  406fc4:	bl	4072e8 <network_set_mac_address>
  406fc8:	stur	w0, [x29, #-60]
  406fcc:	ldur	w9, [x29, #-60]
  406fd0:	cmp	w9, #0x0
  406fd4:	cset	w9, ge  // ge = tcont
  406fd8:	tbnz	w9, #0, 406fe8 <parse_cmdline_ip_mtu_mac+0x140>
  406fdc:	ldur	w8, [x29, #-60]
  406fe0:	stur	w8, [x29, #-4]
  406fe4:	b	406fec <parse_cmdline_ip_mtu_mac+0x144>
  406fe8:	stur	wzr, [x29, #-4]
  406fec:	ldur	w0, [x29, #-4]
  406ff0:	mov	sp, x29
  406ff4:	ldp	x29, x30, [sp], #16
  406ff8:	ret

0000000000406ffc <network_set_dns>:
  406ffc:	sub	sp, sp, #0x50
  407000:	stp	x29, x30, [sp, #64]
  407004:	add	x29, sp, #0x40
  407008:	add	x8, sp, #0x10
  40700c:	add	x9, sp, #0x4
  407010:	stur	x0, [x29, #-16]
  407014:	stur	x1, [x29, #-24]
  407018:	str	x2, [sp, #32]
  40701c:	ldr	x0, [sp, #32]
  407020:	mov	x1, x9
  407024:	mov	x2, x8
  407028:	bl	401e28 <in_addr_from_string_auto@plt>
  40702c:	str	w0, [sp]
  407030:	ldr	w10, [sp]
  407034:	cmp	w10, #0x0
  407038:	cset	w10, ge  // ge = tcont
  40703c:	tbnz	w10, #0, 40704c <network_set_dns+0x50>
  407040:	ldr	w8, [sp]
  407044:	stur	w8, [x29, #-4]
  407048:	b	4070a8 <network_set_dns+0xac>
  40704c:	ldur	x0, [x29, #-16]
  407050:	ldur	x1, [x29, #-24]
  407054:	bl	4031dc <network_get>
  407058:	str	x0, [sp, #8]
  40705c:	ldr	x8, [sp, #8]
  407060:	cbnz	x8, 407094 <network_set_dns+0x98>
  407064:	ldur	x0, [x29, #-16]
  407068:	ldur	x1, [x29, #-24]
  40706c:	add	x2, sp, #0x8
  407070:	bl	4065ac <network_new>
  407074:	str	w0, [sp]
  407078:	ldr	w8, [sp]
  40707c:	cmp	w8, #0x0
  407080:	cset	w8, ge  // ge = tcont
  407084:	tbnz	w8, #0, 407094 <network_set_dns+0x98>
  407088:	ldr	w8, [sp]
  40708c:	stur	w8, [x29, #-4]
  407090:	b	4070a8 <network_set_dns+0xac>
  407094:	ldr	x8, [sp, #8]
  407098:	add	x0, x8, #0x18
  40709c:	ldr	x1, [sp, #32]
  4070a0:	bl	401e38 <strv_extend@plt>
  4070a4:	stur	w0, [x29, #-4]
  4070a8:	ldur	w0, [x29, #-4]
  4070ac:	ldp	x29, x30, [sp, #64]
  4070b0:	add	sp, sp, #0x50
  4070b4:	ret

00000000004070b8 <address_new>:
  4070b8:	sub	sp, sp, #0xa0
  4070bc:	stp	x29, x30, [sp, #144]
  4070c0:	add	x29, sp, #0x90
  4070c4:	adrp	x8, 408000 <_fini+0x1d4>
  4070c8:	add	x8, x8, #0x1d8
  4070cc:	add	x8, x8, #0x3
  4070d0:	stur	x0, [x29, #-16]
  4070d4:	stur	w1, [x29, #-20]
  4070d8:	sturb	w2, [x29, #-21]
  4070dc:	stur	x3, [x29, #-32]
  4070e0:	stur	x4, [x29, #-40]
  4070e4:	stur	x5, [x29, #-48]
  4070e8:	str	x8, [sp]
  4070ec:	ldur	x8, [x29, #-16]
  4070f0:	cmp	x8, #0x0
  4070f4:	cset	w9, ne  // ne = any
  4070f8:	mov	w10, #0x1                   	// #1
  4070fc:	eor	w9, w9, #0x1
  407100:	eor	w9, w9, w10
  407104:	eor	w9, w9, w10
  407108:	and	w9, w9, #0x1
  40710c:	mov	w0, w9
  407110:	sxtw	x8, w0
  407114:	cbz	x8, 40713c <address_new+0x84>
  407118:	mov	w8, wzr
  40711c:	mov	w0, w8
  407120:	adrp	x1, 408000 <_fini+0x1d4>
  407124:	add	x1, x1, #0xdf
  407128:	ldr	x2, [sp]
  40712c:	mov	w3, #0x56                  	// #86
  407130:	adrp	x4, 408000 <_fini+0x1d4>
  407134:	add	x4, x4, #0x565
  407138:	bl	401b18 <log_assert_failed_realm@plt>
  40713c:	mov	x0, #0x40                  	// #64
  407140:	mov	x1, #0x1                   	// #1
  407144:	bl	40681c <malloc_multiply>
  407148:	stur	x0, [x29, #-56]
  40714c:	ldur	x8, [x29, #-56]
  407150:	cbnz	x8, 407160 <address_new+0xa8>
  407154:	mov	w8, #0xfffffff4            	// #-12
  407158:	stur	w8, [x29, #-4]
  40715c:	b	407270 <address_new+0x1b8>
  407160:	ldur	x0, [x29, #-56]
  407164:	add	x8, sp, #0x18
  407168:	mov	x9, xzr
  40716c:	str	x9, [sp, #24]
  407170:	ldur	x10, [x29, #-32]
  407174:	ldr	q0, [x10]
  407178:	stur	q0, [x8, #8]
  40717c:	ldur	x10, [x29, #-40]
  407180:	ldr	q0, [x10]
  407184:	stur	q0, [x8, #24]
  407188:	ldurb	w11, [x29, #-21]
  40718c:	strb	w11, [x8, #40]
  407190:	ldur	w11, [x29, #-20]
  407194:	str	w11, [sp, #68]
  407198:	str	x9, [x8, #48]
  40719c:	str	x9, [x8, #56]
  4071a0:	mov	x1, x8
  4071a4:	mov	x2, #0x40                  	// #64
  4071a8:	bl	401c28 <memcpy@plt>
  4071ac:	ldur	x8, [x29, #-16]
  4071b0:	add	x8, x8, #0x48
  4071b4:	str	x8, [sp, #16]
  4071b8:	ldur	x8, [x29, #-56]
  4071bc:	str	x8, [sp, #8]
  4071c0:	ldr	x8, [sp, #8]
  4071c4:	cmp	x8, #0x0
  4071c8:	cset	w9, ne  // ne = any
  4071cc:	mov	w10, #0x1                   	// #1
  4071d0:	eor	w9, w9, #0x1
  4071d4:	eor	w9, w9, w10
  4071d8:	eor	w9, w9, w10
  4071dc:	and	w9, w9, #0x1
  4071e0:	mov	w0, w9
  4071e4:	sxtw	x8, w0
  4071e8:	cbz	x8, 407210 <address_new+0x158>
  4071ec:	mov	w8, wzr
  4071f0:	mov	w0, w8
  4071f4:	adrp	x1, 408000 <_fini+0x1d4>
  4071f8:	add	x1, x1, #0x5ce
  4071fc:	ldr	x2, [sp]
  407200:	mov	w3, #0x63                  	// #99
  407204:	adrp	x4, 408000 <_fini+0x1d4>
  407208:	add	x4, x4, #0x565
  40720c:	bl	401b18 <log_assert_failed_realm@plt>
  407210:	ldr	x8, [sp, #16]
  407214:	ldr	x8, [x8]
  407218:	ldr	x9, [sp, #8]
  40721c:	str	x8, [x9, #48]
  407220:	cbz	x8, 407234 <address_new+0x17c>
  407224:	ldr	x8, [sp, #8]
  407228:	ldr	x9, [sp, #8]
  40722c:	ldr	x9, [x9, #48]
  407230:	str	x8, [x9, #56]
  407234:	ldr	x8, [sp, #8]
  407238:	mov	x9, xzr
  40723c:	str	x9, [x8, #56]
  407240:	ldr	x8, [sp, #8]
  407244:	ldr	x9, [sp, #16]
  407248:	str	x8, [x9]
  40724c:	ldur	x8, [x29, #-16]
  407250:	ldur	x9, [x29, #-56]
  407254:	str	x8, [x9]
  407258:	ldur	x8, [x29, #-48]
  40725c:	cbz	x8, 40726c <address_new+0x1b4>
  407260:	ldur	x8, [x29, #-56]
  407264:	ldur	x9, [x29, #-48]
  407268:	str	x8, [x9]
  40726c:	stur	wzr, [x29, #-4]
  407270:	ldur	w0, [x29, #-4]
  407274:	ldp	x29, x30, [sp, #144]
  407278:	add	sp, sp, #0xa0
  40727c:	ret

0000000000407280 <network_set_mtu>:
  407280:	sub	sp, sp, #0x40
  407284:	stp	x29, x30, [sp, #48]
  407288:	add	x29, sp, #0x30
  40728c:	stur	x0, [x29, #-16]
  407290:	str	x1, [sp, #24]
  407294:	str	w2, [sp, #20]
  407298:	str	x3, [sp, #8]
  40729c:	ldur	x0, [x29, #-16]
  4072a0:	ldr	x1, [sp, #24]
  4072a4:	bl	4031dc <network_get>
  4072a8:	str	x0, [sp]
  4072ac:	ldr	x8, [sp]
  4072b0:	cbnz	x8, 4072c0 <network_set_mtu+0x40>
  4072b4:	mov	w8, #0xffffffed            	// #-19
  4072b8:	stur	w8, [x29, #-4]
  4072bc:	b	4072d8 <network_set_mtu+0x58>
  4072c0:	ldr	w0, [sp, #20]
  4072c4:	ldr	x1, [sp, #8]
  4072c8:	ldr	x8, [sp]
  4072cc:	add	x2, x8, #0x10
  4072d0:	bl	401c68 <parse_mtu@plt>
  4072d4:	stur	w0, [x29, #-4]
  4072d8:	ldur	w0, [x29, #-4]
  4072dc:	ldp	x29, x30, [sp, #48]
  4072e0:	add	sp, sp, #0x40
  4072e4:	ret

00000000004072e8 <network_set_mac_address>:
  4072e8:	sub	sp, sp, #0x40
  4072ec:	stp	x29, x30, [sp, #48]
  4072f0:	add	x29, sp, #0x30
  4072f4:	stur	x0, [x29, #-16]
  4072f8:	str	x1, [sp, #24]
  4072fc:	str	x2, [sp, #16]
  407300:	ldur	x0, [x29, #-16]
  407304:	ldr	x1, [sp, #24]
  407308:	bl	4031dc <network_get>
  40730c:	str	x0, [sp, #8]
  407310:	ldr	x8, [sp, #8]
  407314:	cbnz	x8, 407324 <network_set_mac_address+0x3c>
  407318:	mov	w8, #0xffffffed            	// #-19
  40731c:	stur	w8, [x29, #-4]
  407320:	b	407338 <network_set_mac_address+0x50>
  407324:	ldr	x0, [sp, #16]
  407328:	ldr	x8, [sp, #8]
  40732c:	add	x1, x8, #0x8
  407330:	bl	401c78 <ether_addr_from_string@plt>
  407334:	stur	w0, [x29, #-4]
  407338:	ldur	w0, [x29, #-4]
  40733c:	ldp	x29, x30, [sp, #48]
  407340:	add	sp, sp, #0x40
  407344:	ret

0000000000407348 <network_set_dhcp_use_dns>:
  407348:	sub	sp, sp, #0x40
  40734c:	stp	x29, x30, [sp, #48]
  407350:	add	x29, sp, #0x30
  407354:	stur	x0, [x29, #-16]
  407358:	str	x1, [sp, #24]
  40735c:	and	w8, w2, #0x1
  407360:	strb	w8, [sp, #23]
  407364:	ldur	x0, [x29, #-16]
  407368:	ldr	x1, [sp, #24]
  40736c:	bl	4031dc <network_get>
  407370:	str	x0, [sp, #8]
  407374:	ldr	x9, [sp, #8]
  407378:	cbnz	x9, 4073ac <network_set_dhcp_use_dns+0x64>
  40737c:	ldur	x0, [x29, #-16]
  407380:	ldr	x1, [sp, #24]
  407384:	add	x2, sp, #0x8
  407388:	bl	4065ac <network_new>
  40738c:	str	w0, [sp, #4]
  407390:	ldr	w8, [sp, #4]
  407394:	cmp	w8, #0x0
  407398:	cset	w8, ge  // ge = tcont
  40739c:	tbnz	w8, #0, 4073ac <network_set_dhcp_use_dns+0x64>
  4073a0:	ldr	w8, [sp, #4]
  4073a4:	stur	w8, [x29, #-4]
  4073a8:	b	4073c0 <network_set_dhcp_use_dns+0x78>
  4073ac:	ldrb	w8, [sp, #23]
  4073b0:	and	w8, w8, #0x1
  4073b4:	ldr	x9, [sp, #8]
  4073b8:	str	w8, [x9, #64]
  4073bc:	stur	wzr, [x29, #-4]
  4073c0:	ldur	w0, [x29, #-4]
  4073c4:	ldp	x29, x30, [sp, #48]
  4073c8:	add	sp, sp, #0x40
  4073cc:	ret

00000000004073d0 <netdev_new>:
  4073d0:	sub	sp, sp, #0xb0
  4073d4:	stp	x29, x30, [sp, #160]
  4073d8:	add	x29, sp, #0xa0
  4073dc:	mov	x8, xzr
  4073e0:	adrp	x9, 408000 <_fini+0x1d4>
  4073e4:	add	x9, x9, #0x1d8
  4073e8:	add	x9, x9, #0x3
  4073ec:	stur	x0, [x29, #-16]
  4073f0:	stur	x1, [x29, #-24]
  4073f4:	stur	x2, [x29, #-32]
  4073f8:	stur	x3, [x29, #-40]
  4073fc:	stur	x8, [x29, #-48]
  407400:	stur	x8, [x29, #-56]
  407404:	stur	x8, [x29, #-64]
  407408:	str	x9, [sp, #8]
  40740c:	ldur	x8, [x29, #-16]
  407410:	cmp	x8, #0x0
  407414:	cset	w9, ne  // ne = any
  407418:	mov	w10, #0x1                   	// #1
  40741c:	eor	w9, w9, #0x1
  407420:	eor	w9, w9, w10
  407424:	eor	w9, w9, w10
  407428:	and	w9, w9, #0x1
  40742c:	mov	w0, w9
  407430:	sxtw	x8, w0
  407434:	cbz	x8, 40745c <netdev_new+0x8c>
  407438:	mov	w8, wzr
  40743c:	mov	w0, w8
  407440:	adrp	x1, 408000 <_fini+0x1d4>
  407444:	add	x1, x1, #0x27f
  407448:	ldr	x2, [sp, #8]
  40744c:	mov	w3, #0xe4                  	// #228
  407450:	adrp	x4, 408000 <_fini+0x1d4>
  407454:	add	x4, x4, #0x618
  407458:	bl	401b18 <log_assert_failed_realm@plt>
  40745c:	ldur	x0, [x29, #-32]
  407460:	bl	401d98 <ifname_valid@plt>
  407464:	tbnz	w0, #0, 40747c <netdev_new+0xac>
  407468:	mov	w8, #0xffffffea            	// #-22
  40746c:	stur	w8, [x29, #-4]
  407470:	mov	w8, #0x1                   	// #1
  407474:	stur	w8, [x29, #-72]
  407478:	b	407604 <netdev_new+0x234>
  40747c:	ldur	x0, [x29, #-24]
  407480:	bl	401ae8 <strdup@plt>
  407484:	stur	x0, [x29, #-56]
  407488:	ldur	x8, [x29, #-56]
  40748c:	cbnz	x8, 4074a4 <netdev_new+0xd4>
  407490:	mov	w8, #0xfffffff4            	// #-12
  407494:	stur	w8, [x29, #-4]
  407498:	mov	w8, #0x1                   	// #1
  40749c:	stur	w8, [x29, #-72]
  4074a0:	b	407604 <netdev_new+0x234>
  4074a4:	ldur	x0, [x29, #-32]
  4074a8:	bl	401ae8 <strdup@plt>
  4074ac:	stur	x0, [x29, #-64]
  4074b0:	ldur	x8, [x29, #-64]
  4074b4:	cbnz	x8, 4074cc <netdev_new+0xfc>
  4074b8:	mov	w8, #0xfffffff4            	// #-12
  4074bc:	stur	w8, [x29, #-4]
  4074c0:	mov	w8, #0x1                   	// #1
  4074c4:	stur	w8, [x29, #-72]
  4074c8:	b	407604 <netdev_new+0x234>
  4074cc:	mov	x0, #0x18                  	// #24
  4074d0:	mov	x1, #0x1                   	// #1
  4074d4:	bl	40681c <malloc_multiply>
  4074d8:	stur	x0, [x29, #-48]
  4074dc:	ldur	x8, [x29, #-48]
  4074e0:	cbnz	x8, 4074f8 <netdev_new+0x128>
  4074e4:	mov	w8, #0xfffffff4            	// #-12
  4074e8:	stur	w8, [x29, #-4]
  4074ec:	mov	w8, #0x1                   	// #1
  4074f0:	stur	w8, [x29, #-72]
  4074f4:	b	407604 <netdev_new+0x234>
  4074f8:	ldur	x8, [x29, #-48]
  4074fc:	ldur	x9, [x29, #-64]
  407500:	str	x9, [sp, #56]
  407504:	mov	x9, xzr
  407508:	stur	x9, [x29, #-64]
  40750c:	ldr	x10, [sp, #56]
  407510:	str	x10, [sp, #48]
  407514:	ldr	x10, [sp, #48]
  407518:	add	x11, sp, #0x40
  40751c:	str	x10, [sp, #64]
  407520:	ldur	x10, [x29, #-56]
  407524:	str	x10, [sp, #40]
  407528:	stur	x9, [x29, #-56]
  40752c:	ldr	x9, [sp, #40]
  407530:	str	x9, [sp, #32]
  407534:	ldr	x9, [sp, #32]
  407538:	str	x9, [x11, #8]
  40753c:	str	wzr, [sp, #80]
  407540:	ldr	q0, [sp, #64]
  407544:	str	q0, [x8]
  407548:	ldr	x9, [sp, #80]
  40754c:	str	x9, [x8, #16]
  407550:	ldur	x8, [x29, #-16]
  407554:	add	x0, x8, #0x8
  407558:	adrp	x1, 41f000 <__FRAME_END__+0x16648>
  40755c:	add	x1, x1, #0xfe0
  407560:	bl	401db8 <internal_hashmap_ensure_allocated@plt>
  407564:	stur	w0, [x29, #-68]
  407568:	ldur	w12, [x29, #-68]
  40756c:	cmp	w12, #0x0
  407570:	cset	w12, ge  // ge = tcont
  407574:	tbnz	w12, #0, 40758c <netdev_new+0x1bc>
  407578:	ldur	w8, [x29, #-68]
  40757c:	stur	w8, [x29, #-4]
  407580:	mov	w8, #0x1                   	// #1
  407584:	stur	w8, [x29, #-72]
  407588:	b	407604 <netdev_new+0x234>
  40758c:	ldur	x8, [x29, #-16]
  407590:	ldr	x0, [x8, #8]
  407594:	ldur	x8, [x29, #-48]
  407598:	ldr	x1, [x8]
  40759c:	ldur	x2, [x29, #-48]
  4075a0:	bl	401dc8 <hashmap_put@plt>
  4075a4:	stur	w0, [x29, #-68]
  4075a8:	ldur	w9, [x29, #-68]
  4075ac:	cmp	w9, #0x0
  4075b0:	cset	w9, ge  // ge = tcont
  4075b4:	tbnz	w9, #0, 4075cc <netdev_new+0x1fc>
  4075b8:	ldur	w8, [x29, #-68]
  4075bc:	stur	w8, [x29, #-4]
  4075c0:	mov	w8, #0x1                   	// #1
  4075c4:	stur	w8, [x29, #-72]
  4075c8:	b	407604 <netdev_new+0x234>
  4075cc:	ldur	x8, [x29, #-40]
  4075d0:	cbz	x8, 4075e0 <netdev_new+0x210>
  4075d4:	ldur	x8, [x29, #-48]
  4075d8:	ldur	x9, [x29, #-40]
  4075dc:	str	x8, [x9]
  4075e0:	ldur	x8, [x29, #-48]
  4075e4:	str	x8, [sp, #24]
  4075e8:	mov	x8, xzr
  4075ec:	stur	x8, [x29, #-48]
  4075f0:	ldr	x8, [sp, #24]
  4075f4:	str	x8, [sp, #16]
  4075f8:	stur	wzr, [x29, #-4]
  4075fc:	mov	w9, #0x1                   	// #1
  407600:	stur	w9, [x29, #-72]
  407604:	sub	x0, x29, #0x40
  407608:	bl	405734 <freep>
  40760c:	sub	x0, x29, #0x38
  407610:	bl	405734 <freep>
  407614:	sub	x0, x29, #0x30
  407618:	bl	4076b0 <netdev_freep>
  40761c:	ldur	w0, [x29, #-4]
  407620:	ldp	x29, x30, [sp, #160]
  407624:	add	sp, sp, #0xb0
  407628:	ret

000000000040762c <network_set_vlan>:
  40762c:	sub	sp, sp, #0x40
  407630:	stp	x29, x30, [sp, #48]
  407634:	add	x29, sp, #0x30
  407638:	stur	x0, [x29, #-16]
  40763c:	str	x1, [sp, #24]
  407640:	str	x2, [sp, #16]
  407644:	ldur	x0, [x29, #-16]
  407648:	ldr	x1, [sp, #24]
  40764c:	bl	4031dc <network_get>
  407650:	str	x0, [sp, #8]
  407654:	ldr	x8, [sp, #8]
  407658:	cbnz	x8, 40768c <network_set_vlan+0x60>
  40765c:	ldur	x0, [x29, #-16]
  407660:	ldr	x1, [sp, #24]
  407664:	add	x2, sp, #0x8
  407668:	bl	4065ac <network_new>
  40766c:	str	w0, [sp, #4]
  407670:	ldr	w8, [sp, #4]
  407674:	cmp	w8, #0x0
  407678:	cset	w8, ge  // ge = tcont
  40767c:	tbnz	w8, #0, 40768c <network_set_vlan+0x60>
  407680:	ldr	w8, [sp, #4]
  407684:	stur	w8, [x29, #-4]
  407688:	b	4076a0 <network_set_vlan+0x74>
  40768c:	ldr	x8, [sp, #8]
  407690:	add	x0, x8, #0x20
  407694:	ldr	x1, [sp, #16]
  407698:	bl	401e18 <free_and_strdup@plt>
  40769c:	stur	w0, [x29, #-4]
  4076a0:	ldur	w0, [x29, #-4]
  4076a4:	ldp	x29, x30, [sp, #48]
  4076a8:	add	sp, sp, #0x40
  4076ac:	ret

00000000004076b0 <netdev_freep>:
  4076b0:	sub	sp, sp, #0x20
  4076b4:	stp	x29, x30, [sp, #16]
  4076b8:	add	x29, sp, #0x10
  4076bc:	str	x0, [sp, #8]
  4076c0:	ldr	x8, [sp, #8]
  4076c4:	ldr	x8, [x8]
  4076c8:	cbz	x8, 4076d8 <netdev_freep+0x28>
  4076cc:	ldr	x8, [sp, #8]
  4076d0:	ldr	x0, [x8]
  4076d4:	bl	404a7c <netdev_free>
  4076d8:	ldp	x29, x30, [sp, #16]
  4076dc:	add	sp, sp, #0x20
  4076e0:	ret

00000000004076e4 <network_set_bridge>:
  4076e4:	sub	sp, sp, #0x40
  4076e8:	stp	x29, x30, [sp, #48]
  4076ec:	add	x29, sp, #0x30
  4076f0:	stur	x0, [x29, #-16]
  4076f4:	str	x1, [sp, #24]
  4076f8:	str	x2, [sp, #16]
  4076fc:	ldur	x0, [x29, #-16]
  407700:	ldr	x1, [sp, #24]
  407704:	bl	4031dc <network_get>
  407708:	str	x0, [sp, #8]
  40770c:	ldr	x8, [sp, #8]
  407710:	cbnz	x8, 407744 <network_set_bridge+0x60>
  407714:	ldur	x0, [x29, #-16]
  407718:	ldr	x1, [sp, #24]
  40771c:	add	x2, sp, #0x8
  407720:	bl	4065ac <network_new>
  407724:	str	w0, [sp, #4]
  407728:	ldr	w8, [sp, #4]
  40772c:	cmp	w8, #0x0
  407730:	cset	w8, ge  // ge = tcont
  407734:	tbnz	w8, #0, 407744 <network_set_bridge+0x60>
  407738:	ldr	w8, [sp, #4]
  40773c:	stur	w8, [x29, #-4]
  407740:	b	407758 <network_set_bridge+0x74>
  407744:	ldr	x8, [sp, #8]
  407748:	add	x0, x8, #0x28
  40774c:	ldr	x1, [sp, #16]
  407750:	bl	401e18 <free_and_strdup@plt>
  407754:	stur	w0, [x29, #-4]
  407758:	ldur	w0, [x29, #-4]
  40775c:	ldp	x29, x30, [sp, #48]
  407760:	add	sp, sp, #0x40
  407764:	ret

0000000000407768 <network_set_bond>:
  407768:	sub	sp, sp, #0x40
  40776c:	stp	x29, x30, [sp, #48]
  407770:	add	x29, sp, #0x30
  407774:	stur	x0, [x29, #-16]
  407778:	str	x1, [sp, #24]
  40777c:	str	x2, [sp, #16]
  407780:	ldur	x0, [x29, #-16]
  407784:	ldr	x1, [sp, #24]
  407788:	bl	4031dc <network_get>
  40778c:	str	x0, [sp, #8]
  407790:	ldr	x8, [sp, #8]
  407794:	cbnz	x8, 4077c8 <network_set_bond+0x60>
  407798:	ldur	x0, [x29, #-16]
  40779c:	ldr	x1, [sp, #24]
  4077a0:	add	x2, sp, #0x8
  4077a4:	bl	4065ac <network_new>
  4077a8:	str	w0, [sp, #4]
  4077ac:	ldr	w8, [sp, #4]
  4077b0:	cmp	w8, #0x0
  4077b4:	cset	w8, ge  // ge = tcont
  4077b8:	tbnz	w8, #0, 4077c8 <network_set_bond+0x60>
  4077bc:	ldr	w8, [sp, #4]
  4077c0:	stur	w8, [x29, #-4]
  4077c4:	b	4077dc <network_set_bond+0x74>
  4077c8:	ldr	x8, [sp, #8]
  4077cc:	add	x0, x8, #0x30
  4077d0:	ldr	x1, [sp, #16]
  4077d4:	bl	401e18 <free_and_strdup@plt>
  4077d8:	stur	w0, [x29, #-4]
  4077dc:	ldur	w0, [x29, #-4]
  4077e0:	ldp	x29, x30, [sp, #48]
  4077e4:	add	sp, sp, #0x40
  4077e8:	ret

00000000004077ec <link_new>:
  4077ec:	sub	sp, sp, #0x90
  4077f0:	stp	x29, x30, [sp, #128]
  4077f4:	add	x29, sp, #0x80
  4077f8:	mov	x8, xzr
  4077fc:	adrp	x9, 408000 <_fini+0x1d4>
  407800:	add	x9, x9, #0x1d8
  407804:	add	x9, x9, #0x3
  407808:	stur	x0, [x29, #-16]
  40780c:	stur	x1, [x29, #-24]
  407810:	stur	x2, [x29, #-32]
  407814:	stur	x3, [x29, #-40]
  407818:	stur	x8, [x29, #-48]
  40781c:	stur	x8, [x29, #-56]
  407820:	str	x9, [sp, #8]
  407824:	ldur	x8, [x29, #-16]
  407828:	cmp	x8, #0x0
  40782c:	cset	w9, ne  // ne = any
  407830:	mov	w10, #0x1                   	// #1
  407834:	eor	w9, w9, #0x1
  407838:	eor	w9, w9, w10
  40783c:	eor	w9, w9, w10
  407840:	and	w9, w9, #0x1
  407844:	mov	w0, w9
  407848:	sxtw	x8, w0
  40784c:	cbz	x8, 407874 <link_new+0x88>
  407850:	mov	w8, wzr
  407854:	mov	w0, w8
  407858:	adrp	x1, 408000 <_fini+0x1d4>
  40785c:	add	x1, x1, #0x27f
  407860:	ldr	x2, [sp, #8]
  407864:	mov	w3, #0x11c                 	// #284
  407868:	adrp	x4, 408000 <_fini+0x1d4>
  40786c:	add	x4, x4, #0x65b
  407870:	bl	401b18 <log_assert_failed_realm@plt>
  407874:	ldur	x0, [x29, #-24]
  407878:	bl	401d98 <ifname_valid@plt>
  40787c:	tbnz	w0, #0, 407894 <link_new+0xa8>
  407880:	mov	w8, #0xffffffea            	// #-22
  407884:	stur	w8, [x29, #-4]
  407888:	mov	w8, #0x1                   	// #1
  40788c:	str	w8, [sp, #64]
  407890:	b	4079e0 <link_new+0x1f4>
  407894:	ldur	x0, [x29, #-24]
  407898:	bl	401ae8 <strdup@plt>
  40789c:	stur	x0, [x29, #-56]
  4078a0:	ldur	x8, [x29, #-56]
  4078a4:	cbnz	x8, 4078bc <link_new+0xd0>
  4078a8:	mov	w8, #0xfffffff4            	// #-12
  4078ac:	stur	w8, [x29, #-4]
  4078b0:	mov	w8, #0x1                   	// #1
  4078b4:	str	w8, [sp, #64]
  4078b8:	b	4079e0 <link_new+0x1f4>
  4078bc:	mov	x0, #0x10                  	// #16
  4078c0:	mov	x1, #0x1                   	// #1
  4078c4:	bl	40681c <malloc_multiply>
  4078c8:	stur	x0, [x29, #-48]
  4078cc:	ldur	x8, [x29, #-48]
  4078d0:	cbnz	x8, 4078e8 <link_new+0xfc>
  4078d4:	mov	w8, #0xfffffff4            	// #-12
  4078d8:	stur	w8, [x29, #-4]
  4078dc:	mov	w8, #0x1                   	// #1
  4078e0:	str	w8, [sp, #64]
  4078e4:	b	4079e0 <link_new+0x1f4>
  4078e8:	ldur	x8, [x29, #-48]
  4078ec:	ldur	x9, [x29, #-56]
  4078f0:	str	x9, [sp, #40]
  4078f4:	mov	x9, xzr
  4078f8:	stur	x9, [x29, #-56]
  4078fc:	ldr	x9, [sp, #40]
  407900:	str	x9, [sp, #32]
  407904:	ldr	x9, [sp, #32]
  407908:	add	x10, sp, #0x30
  40790c:	str	x9, [sp, #48]
  407910:	ldur	x9, [x29, #-32]
  407914:	ldr	w11, [x9]
  407918:	str	w11, [sp, #56]
  40791c:	ldrh	w11, [x9, #4]
  407920:	strh	w11, [x10, #12]
  407924:	ldr	q0, [sp, #48]
  407928:	str	q0, [x8]
  40792c:	ldur	x8, [x29, #-16]
  407930:	add	x0, x8, #0x10
  407934:	adrp	x1, 41f000 <__FRAME_END__+0x16648>
  407938:	add	x1, x1, #0xfe0
  40793c:	bl	401db8 <internal_hashmap_ensure_allocated@plt>
  407940:	stur	w0, [x29, #-60]
  407944:	ldur	w11, [x29, #-60]
  407948:	cmp	w11, #0x0
  40794c:	cset	w11, ge  // ge = tcont
  407950:	tbnz	w11, #0, 407968 <link_new+0x17c>
  407954:	ldur	w8, [x29, #-60]
  407958:	stur	w8, [x29, #-4]
  40795c:	mov	w8, #0x1                   	// #1
  407960:	str	w8, [sp, #64]
  407964:	b	4079e0 <link_new+0x1f4>
  407968:	ldur	x8, [x29, #-16]
  40796c:	ldr	x0, [x8, #16]
  407970:	ldur	x8, [x29, #-48]
  407974:	ldr	x1, [x8]
  407978:	ldur	x2, [x29, #-48]
  40797c:	bl	401dc8 <hashmap_put@plt>
  407980:	stur	w0, [x29, #-60]
  407984:	ldur	w9, [x29, #-60]
  407988:	cmp	w9, #0x0
  40798c:	cset	w9, ge  // ge = tcont
  407990:	tbnz	w9, #0, 4079a8 <link_new+0x1bc>
  407994:	ldur	w8, [x29, #-60]
  407998:	stur	w8, [x29, #-4]
  40799c:	mov	w8, #0x1                   	// #1
  4079a0:	str	w8, [sp, #64]
  4079a4:	b	4079e0 <link_new+0x1f4>
  4079a8:	ldur	x8, [x29, #-40]
  4079ac:	cbz	x8, 4079bc <link_new+0x1d0>
  4079b0:	ldur	x8, [x29, #-48]
  4079b4:	ldur	x9, [x29, #-40]
  4079b8:	str	x8, [x9]
  4079bc:	ldur	x8, [x29, #-48]
  4079c0:	str	x8, [sp, #24]
  4079c4:	mov	x8, xzr
  4079c8:	stur	x8, [x29, #-48]
  4079cc:	ldr	x8, [sp, #24]
  4079d0:	str	x8, [sp, #16]
  4079d4:	stur	wzr, [x29, #-4]
  4079d8:	mov	w9, #0x1                   	// #1
  4079dc:	str	w9, [sp, #64]
  4079e0:	sub	x0, x29, #0x38
  4079e4:	bl	405734 <freep>
  4079e8:	sub	x0, x29, #0x30
  4079ec:	bl	407a00 <link_freep>
  4079f0:	ldur	w0, [x29, #-4]
  4079f4:	ldp	x29, x30, [sp, #128]
  4079f8:	add	sp, sp, #0x90
  4079fc:	ret

0000000000407a00 <link_freep>:
  407a00:	sub	sp, sp, #0x20
  407a04:	stp	x29, x30, [sp, #16]
  407a08:	add	x29, sp, #0x10
  407a0c:	str	x0, [sp, #8]
  407a10:	ldr	x8, [sp, #8]
  407a14:	ldr	x8, [x8]
  407a18:	cbz	x8, 407a28 <link_freep+0x28>
  407a1c:	ldr	x8, [sp, #8]
  407a20:	ldr	x0, [x8]
  407a24:	bl	404ad4 <link_free>
  407a28:	ldp	x29, x30, [sp, #16]
  407a2c:	add	sp, sp, #0x20
  407a30:	ret

0000000000407a34 <address_free>:
  407a34:	sub	sp, sp, #0x40
  407a38:	stp	x29, x30, [sp, #48]
  407a3c:	add	x29, sp, #0x30
  407a40:	adrp	x8, 408000 <_fini+0x1d4>
  407a44:	add	x8, x8, #0x1d8
  407a48:	add	x8, x8, #0x3
  407a4c:	stur	x0, [x29, #-16]
  407a50:	ldur	x9, [x29, #-16]
  407a54:	str	x8, [sp, #8]
  407a58:	cbnz	x9, 407a68 <address_free+0x34>
  407a5c:	mov	x8, xzr
  407a60:	stur	x8, [x29, #-8]
  407a64:	b	407ba8 <address_free+0x174>
  407a68:	ldur	x8, [x29, #-16]
  407a6c:	ldr	x8, [x8]
  407a70:	cbz	x8, 407b9c <address_free+0x168>
  407a74:	ldur	x8, [x29, #-16]
  407a78:	ldr	x8, [x8]
  407a7c:	add	x8, x8, #0x48
  407a80:	str	x8, [sp, #24]
  407a84:	ldur	x8, [x29, #-16]
  407a88:	str	x8, [sp, #16]
  407a8c:	ldr	x8, [sp, #16]
  407a90:	cmp	x8, #0x0
  407a94:	cset	w9, ne  // ne = any
  407a98:	mov	w10, #0x1                   	// #1
  407a9c:	eor	w9, w9, #0x1
  407aa0:	eor	w9, w9, w10
  407aa4:	eor	w9, w9, w10
  407aa8:	and	w9, w9, #0x1
  407aac:	mov	w0, w9
  407ab0:	sxtw	x8, w0
  407ab4:	cbz	x8, 407adc <address_free+0xa8>
  407ab8:	mov	w8, wzr
  407abc:	mov	w0, w8
  407ac0:	adrp	x1, 408000 <_fini+0x1d4>
  407ac4:	add	x1, x1, #0x5ce
  407ac8:	ldr	x2, [sp, #8]
  407acc:	mov	w3, #0x4d                  	// #77
  407ad0:	adrp	x4, 408000 <_fini+0x1d4>
  407ad4:	add	x4, x4, #0x704
  407ad8:	bl	401b18 <log_assert_failed_realm@plt>
  407adc:	ldr	x8, [sp, #16]
  407ae0:	ldr	x8, [x8, #48]
  407ae4:	cbz	x8, 407afc <address_free+0xc8>
  407ae8:	ldr	x8, [sp, #16]
  407aec:	ldr	x8, [x8, #56]
  407af0:	ldr	x9, [sp, #16]
  407af4:	ldr	x9, [x9, #48]
  407af8:	str	x8, [x9, #56]
  407afc:	ldr	x8, [sp, #16]
  407b00:	ldr	x8, [x8, #56]
  407b04:	cbz	x8, 407b20 <address_free+0xec>
  407b08:	ldr	x8, [sp, #16]
  407b0c:	ldr	x8, [x8, #48]
  407b10:	ldr	x9, [sp, #16]
  407b14:	ldr	x9, [x9, #56]
  407b18:	str	x8, [x9, #48]
  407b1c:	b	407b88 <address_free+0x154>
  407b20:	ldr	x8, [sp, #24]
  407b24:	ldr	x8, [x8]
  407b28:	ldr	x9, [sp, #16]
  407b2c:	cmp	x8, x9
  407b30:	cset	w10, eq  // eq = none
  407b34:	mov	w11, #0x1                   	// #1
  407b38:	eor	w10, w10, #0x1
  407b3c:	eor	w10, w10, w11
  407b40:	eor	w10, w10, w11
  407b44:	and	w10, w10, #0x1
  407b48:	mov	w0, w10
  407b4c:	sxtw	x8, w0
  407b50:	cbz	x8, 407b78 <address_free+0x144>
  407b54:	mov	w8, wzr
  407b58:	mov	w0, w8
  407b5c:	adrp	x1, 408000 <_fini+0x1d4>
  407b60:	add	x1, x1, #0x725
  407b64:	ldr	x2, [sp, #8]
  407b68:	mov	w3, #0x4d                  	// #77
  407b6c:	adrp	x4, 408000 <_fini+0x1d4>
  407b70:	add	x4, x4, #0x704
  407b74:	bl	401b18 <log_assert_failed_realm@plt>
  407b78:	ldr	x8, [sp, #16]
  407b7c:	ldr	x8, [x8, #48]
  407b80:	ldr	x9, [sp, #24]
  407b84:	str	x8, [x9]
  407b88:	ldr	x8, [sp, #16]
  407b8c:	mov	x9, xzr
  407b90:	str	x9, [x8, #56]
  407b94:	ldr	x8, [sp, #16]
  407b98:	str	x9, [x8, #48]
  407b9c:	ldur	x0, [x29, #-16]
  407ba0:	bl	407d3c <mfree>
  407ba4:	stur	x0, [x29, #-8]
  407ba8:	ldur	x0, [x29, #-8]
  407bac:	ldp	x29, x30, [sp, #48]
  407bb0:	add	sp, sp, #0x40
  407bb4:	ret

0000000000407bb8 <route_free>:
  407bb8:	sub	sp, sp, #0x40
  407bbc:	stp	x29, x30, [sp, #48]
  407bc0:	add	x29, sp, #0x30
  407bc4:	adrp	x8, 408000 <_fini+0x1d4>
  407bc8:	add	x8, x8, #0x1d8
  407bcc:	add	x8, x8, #0x3
  407bd0:	stur	x0, [x29, #-16]
  407bd4:	ldur	x9, [x29, #-16]
  407bd8:	str	x8, [sp, #8]
  407bdc:	cbnz	x9, 407bec <route_free+0x34>
  407be0:	mov	x8, xzr
  407be4:	stur	x8, [x29, #-8]
  407be8:	b	407d2c <route_free+0x174>
  407bec:	ldur	x8, [x29, #-16]
  407bf0:	ldr	x8, [x8]
  407bf4:	cbz	x8, 407d20 <route_free+0x168>
  407bf8:	ldur	x8, [x29, #-16]
  407bfc:	ldr	x8, [x8]
  407c00:	add	x8, x8, #0x50
  407c04:	str	x8, [sp, #24]
  407c08:	ldur	x8, [x29, #-16]
  407c0c:	str	x8, [sp, #16]
  407c10:	ldr	x8, [sp, #16]
  407c14:	cmp	x8, #0x0
  407c18:	cset	w9, ne  // ne = any
  407c1c:	mov	w10, #0x1                   	// #1
  407c20:	eor	w9, w9, #0x1
  407c24:	eor	w9, w9, w10
  407c28:	eor	w9, w9, w10
  407c2c:	and	w9, w9, #0x1
  407c30:	mov	w0, w9
  407c34:	sxtw	x8, w0
  407c38:	cbz	x8, 407c60 <route_free+0xa8>
  407c3c:	mov	w8, wzr
  407c40:	mov	w0, w8
  407c44:	adrp	x1, 408000 <_fini+0x1d4>
  407c48:	add	x1, x1, #0x5ce
  407c4c:	ldr	x2, [sp, #8]
  407c50:	mov	w3, #0x71                  	// #113
  407c54:	adrp	x4, 408000 <_fini+0x1d4>
  407c58:	add	x4, x4, #0x735
  407c5c:	bl	401b18 <log_assert_failed_realm@plt>
  407c60:	ldr	x8, [sp, #16]
  407c64:	ldr	x8, [x8, #48]
  407c68:	cbz	x8, 407c80 <route_free+0xc8>
  407c6c:	ldr	x8, [sp, #16]
  407c70:	ldr	x8, [x8, #56]
  407c74:	ldr	x9, [sp, #16]
  407c78:	ldr	x9, [x9, #48]
  407c7c:	str	x8, [x9, #56]
  407c80:	ldr	x8, [sp, #16]
  407c84:	ldr	x8, [x8, #56]
  407c88:	cbz	x8, 407ca4 <route_free+0xec>
  407c8c:	ldr	x8, [sp, #16]
  407c90:	ldr	x8, [x8, #48]
  407c94:	ldr	x9, [sp, #16]
  407c98:	ldr	x9, [x9, #56]
  407c9c:	str	x8, [x9, #48]
  407ca0:	b	407d0c <route_free+0x154>
  407ca4:	ldr	x8, [sp, #24]
  407ca8:	ldr	x8, [x8]
  407cac:	ldr	x9, [sp, #16]
  407cb0:	cmp	x8, x9
  407cb4:	cset	w10, eq  // eq = none
  407cb8:	mov	w11, #0x1                   	// #1
  407cbc:	eor	w10, w10, #0x1
  407cc0:	eor	w10, w10, w11
  407cc4:	eor	w10, w10, w11
  407cc8:	and	w10, w10, #0x1
  407ccc:	mov	w0, w10
  407cd0:	sxtw	x8, w0
  407cd4:	cbz	x8, 407cfc <route_free+0x144>
  407cd8:	mov	w8, wzr
  407cdc:	mov	w0, w8
  407ce0:	adrp	x1, 408000 <_fini+0x1d4>
  407ce4:	add	x1, x1, #0x725
  407ce8:	ldr	x2, [sp, #8]
  407cec:	mov	w3, #0x71                  	// #113
  407cf0:	adrp	x4, 408000 <_fini+0x1d4>
  407cf4:	add	x4, x4, #0x735
  407cf8:	bl	401b18 <log_assert_failed_realm@plt>
  407cfc:	ldr	x8, [sp, #16]
  407d00:	ldr	x8, [x8, #48]
  407d04:	ldr	x9, [sp, #24]
  407d08:	str	x8, [x9]
  407d0c:	ldr	x8, [sp, #16]
  407d10:	mov	x9, xzr
  407d14:	str	x9, [x8, #56]
  407d18:	ldr	x8, [sp, #16]
  407d1c:	str	x9, [x8, #48]
  407d20:	ldur	x0, [x29, #-16]
  407d24:	bl	407d3c <mfree>
  407d28:	stur	x0, [x29, #-8]
  407d2c:	ldur	x0, [x29, #-8]
  407d30:	ldp	x29, x30, [sp, #48]
  407d34:	add	sp, sp, #0x40
  407d38:	ret

0000000000407d3c <mfree>:
  407d3c:	sub	sp, sp, #0x20
  407d40:	stp	x29, x30, [sp, #16]
  407d44:	add	x29, sp, #0x10
  407d48:	mov	x8, xzr
  407d4c:	str	x0, [sp, #8]
  407d50:	ldr	x0, [sp, #8]
  407d54:	str	x8, [sp]
  407d58:	bl	401b58 <free@plt>
  407d5c:	ldr	x0, [sp]
  407d60:	ldp	x29, x30, [sp, #16]
  407d64:	add	sp, sp, #0x20
  407d68:	ret

0000000000407d6c <ether_addr_equal>:
  407d6c:	sub	sp, sp, #0x20
  407d70:	stp	x29, x30, [sp, #16]
  407d74:	add	x29, sp, #0x10
  407d78:	str	x0, [sp, #8]
  407d7c:	str	x1, [sp]
  407d80:	ldr	x0, [sp, #8]
  407d84:	ldr	x1, [sp]
  407d88:	bl	401e48 <ether_addr_compare@plt>
  407d8c:	cmp	w0, #0x0
  407d90:	cset	w8, eq  // eq = none
  407d94:	and	w0, w8, #0x1
  407d98:	ldp	x29, x30, [sp, #16]
  407d9c:	add	sp, sp, #0x20
  407da0:	ret
  407da4:	udf	#0

0000000000407da8 <__libc_csu_init>:
  407da8:	stp	x29, x30, [sp, #-64]!
  407dac:	mov	x29, sp
  407db0:	stp	x19, x20, [sp, #16]
  407db4:	adrp	x20, 41f000 <__FRAME_END__+0x16648>
  407db8:	add	x20, x20, #0xb78
  407dbc:	stp	x21, x22, [sp, #32]
  407dc0:	adrp	x21, 41f000 <__FRAME_END__+0x16648>
  407dc4:	add	x21, x21, #0xb70
  407dc8:	sub	x20, x20, x21
  407dcc:	mov	w22, w0
  407dd0:	stp	x23, x24, [sp, #48]
  407dd4:	mov	x23, x1
  407dd8:	mov	x24, x2
  407ddc:	bl	401a00 <_init>
  407de0:	cmp	xzr, x20, asr #3
  407de4:	b.eq	407e10 <__libc_csu_init+0x68>  // b.none
  407de8:	asr	x20, x20, #3
  407dec:	mov	x19, #0x0                   	// #0
  407df0:	ldr	x3, [x21, x19, lsl #3]
  407df4:	mov	x2, x24
  407df8:	add	x19, x19, #0x1
  407dfc:	mov	x1, x23
  407e00:	mov	w0, w22
  407e04:	blr	x3
  407e08:	cmp	x20, x19
  407e0c:	b.ne	407df0 <__libc_csu_init+0x48>  // b.any
  407e10:	ldp	x19, x20, [sp, #16]
  407e14:	ldp	x21, x22, [sp, #32]
  407e18:	ldp	x23, x24, [sp, #48]
  407e1c:	ldp	x29, x30, [sp], #64
  407e20:	ret
  407e24:	nop

0000000000407e28 <__libc_csu_fini>:
  407e28:	ret

Disassembly of section .fini:

0000000000407e2c <_fini>:
  407e2c:	stp	x29, x30, [sp, #-16]!
  407e30:	mov	x29, sp
  407e34:	ldp	x29, x30, [sp], #16
  407e38:	ret
